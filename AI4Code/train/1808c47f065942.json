{"cell_type":{"5393d39e":"code","d64a1844":"code","994829eb":"code","03406aa3":"code","869345a6":"code","72cd9de2":"code","a7b8e77a":"code","9dbd7cad":"code","4bb7a39d":"code","26477c82":"code","bcc524c0":"code","6d4a64c3":"code","b59dc263":"code","0dd94045":"markdown","e23f3cf7":"markdown","03f3e33d":"markdown","263fd105":"markdown","67210f10":"markdown","78f4a96b":"markdown","5acb5a78":"markdown"},"source":{"5393d39e":"import numpy as np \nfrom mlxtend.frequent_patterns import apriori, association_rules\nimport pandas as pd \n!pip install openpyxl","d64a1844":"df = pd.read_excel(\"..\/input\/customer-segmentation-dataset\/Online Retail.xlsx\", usecols = \"A, C:D\")","994829eb":"# Stripping extra spaces in the description\ndf['Description'] = df['Description'].str.strip()\n \n# Dropping the rows without any invoice number\ndf.dropna(axis = 0, subset =['InvoiceNo'], inplace = True)\ndf['InvoiceNo'] = df['InvoiceNo'].astype('str')\n \n# Dropping all transactions which were done on credit\ndf = df[~df['InvoiceNo'].str.contains('C')]","03406aa3":"df[\"Description\"].value_counts()","869345a6":"df = df[df.groupby('Description').Description.transform('count')>100]\ndf = df[df.groupby('Description').Description.transform('count')<1000]","72cd9de2":"# Changing format of dataframe\nbasket = df.groupby(['InvoiceNo', 'Description'])['Quantity'].sum().unstack().reset_index().fillna(0).set_index('InvoiceNo')","a7b8e77a":"# There's some unwanted phrases written in lowercase\nbasket.drop(list(basket.filter(regex=\"[a-z]\")), axis=1, inplace=True)","9dbd7cad":"basket.head()","4bb7a39d":"def hot_encode(x):\n    if(x<= 0):\n        return 0\n    if(x>= 1):\n        return 1","26477c82":"# Encoding the dataset\nbasket_encoded = basket.applymap(hot_encode)","bcc524c0":"# Building the model\nfrq_items = apriori(basket_encoded, min_support = 0.02, use_colnames = True)\n \n# Collecting the inferred rules in a dataframe\nrules = association_rules(frq_items, metric =\"lift\", min_threshold = 1)\nrules = rules.sort_values(['confidence', 'lift'])","6d4a64c3":"rules = pd.DataFrame(rules)\nrules","b59dc263":"frq_items['length'] = frq_items['itemsets'].apply(lambda x: len(x))\nitems = pd.DataFrame(frq_items[frq_items['length']==1][\"itemsets\"])\nitems.head().style.set_properties(subset=['itemsets'], **{'width': '300px'})","0dd94045":"# <span style=\"font-size:40px;\"><center>CUSTOMER INVOICES ANALYSIS<\/center> <\/span>\n\nThe Apriori algorithm is an algorithm for searching for association rules. \n\nAssociation rules are \"if-then\" statements, that help to show the probability of relationships between data items, within large data sets in various types of databases.\n\nIt is especially useful for transactions analysis - when you have a tons of invoices. Analysing the invoices can help you answer some important business questions - what items should be included in the bundle? Or what items should be placed nearby? What to offer the buyer?","e23f3cf7":"The rules consist of antecedents and consequents, showing us what will be next, if something already happened.","03f3e33d":"Itemsets are frozensets also consists of 1, 2, 3 or more frequent items, depending of lenght given.\n\nApriory algorithm is interensting for analysing any data with a sequence, or some data that can be grouped. It can be, for example, user actions stored in logs.\n\nIt can reveal some hidden rules and dependencies.","263fd105":"For apriori algorithm from mlxtend library data should be one-hot encoded.","67210f10":"Let's drop some infrequent and too frequent items from dataset for ease and more interesting relations.","78f4a96b":"Maybe you want to make \"SPACEBOY LUNCH BOX\" and \"DOLLY GIRL LUNCH BOX\" a bundle?\nAlso you can notice that if people buy an item of one color (a bag, for example), they also buy similar item with another color or desing.","5acb5a78":"Apriori algorithm rely on total count of items, so actually it's important to make that there's no duplicate or unnecessary positions!\n\nIt's also an option to take entities from item names to reduce columns size - if it's more important to highlight brand of item, or type of item."}}