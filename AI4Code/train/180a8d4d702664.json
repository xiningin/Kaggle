{"cell_type":{"5c08de5b":"code","097796bd":"code","fad78908":"code","1df42b3a":"code","622b7764":"code","a6e0e3de":"code","ea4bedb7":"code","9e3498ba":"code","94435488":"code","3cb581eb":"code","fd20d6cd":"code","fb33bb23":"code","c4477328":"code","3c9d786a":"code","e79fc465":"code","d6ceddf6":"code","ecacae81":"code","7bbb59cf":"code","6f5c70f8":"code","9abae7c6":"code","b69c8ceb":"code","b6823e0b":"code","47e85c40":"code","1fd3004b":"code","f950fefe":"code","9abe543b":"code","5870add3":"code","4c6db2de":"code","af745da4":"code","b8a23127":"code","1d7df5af":"code","cc96772a":"code","9339cb45":"markdown","51bec71d":"markdown","32a48a53":"markdown","9ac1f51b":"markdown","7469f00a":"markdown","854f6503":"markdown","28706b3d":"markdown","b37f1030":"markdown","8587a2d4":"markdown","d5e33e00":"markdown","e9c0216e":"markdown"},"source":{"5c08de5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory","097796bd":"data = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","fad78908":"data.head()","1df42b3a":"data.info()","622b7764":"data.describe()","a6e0e3de":"import matplotlib.pyplot as plt\nimport seaborn as sns","ea4bedb7":"data.hist(figsize = (10, 10))\nplt.show()","9e3498ba":"plt.figure(figsize = (14, 14))\nsns.heatmap(data.corr(), annot = True, cmap = \"coolwarm\")\nplt.show()","94435488":"data.target.unique()","3cb581eb":"have_disease = len(data[data.target == 1])\nhave_not_disease = len(data[data.target == 0])","fd20d6cd":"print(\"Percentage of Patients Have Heart Disease: {:.2f}%\".format((have_disease \/ (len(data.target))*100)))\nprint(\"Percentage of Patients Have not Heart Disease: {:.2f}%\".format((have_not_disease \/ (len(data.target))*100)))","fb33bb23":"sns.countplot(data.target)\nplt.show()","c4477328":"data.target.value_counts()","3c9d786a":"data.sex.value_counts()","e79fc465":"sns.countplot(data.sex)\nplt.xlabel(\"Sex (0 = female, 1= male)\")\nplt.show()","d6ceddf6":"countFemale = len(data[data.sex == 0])\ncountMale = len(data[data.sex == 1])\nprint(\"Percentage of Female Patients: {:.2f}%\".format((countFemale \/ (len(data.sex))*100)))\nprint(\"Percentage of Male Patients: {:.2f}%\".format((countMale \/ (len(data.sex))*100)))","ecacae81":"data.shape","7bbb59cf":"X = data.iloc[:, 0:13].values\ny = data.iloc[:, 13].values","6f5c70f8":"X","9abae7c6":"y","b69c8ceb":"params={\n \"learning_rate\"    : [ 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35 ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15, 20],\n \"min_child_weight\" : [ 1, 3, 5, 7, 9 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 , 0.6],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7, 0.10 ],\n \"subsample\"        : [ 0.5, 0.6, 0.7, 0.8, 0.9],\n \"nthread\"          : [ 3, 4, 5, 6, 7],\n \"scale_pos_weight\" : [ 0.8, 0.9, 1, 1.1]\n}","b6823e0b":"from sklearn.model_selection import RandomizedSearchCV\nimport xgboost","47e85c40":"def timer(start_time=None):\n    if not start_time:\n        start_time = datetime.now()\n        return start_time\n    elif start_time:\n        thour, temp_sec = divmod((datetime.now() - start_time).total_seconds(), 3600)\n        tmin, tsec = divmod(temp_sec, 60)\n        print('\\n Time taken: %i hours %i minutes and %s seconds.' % (thour, tmin, round(tsec, 2)))","1fd3004b":"clf=xgboost.XGBClassifier()","f950fefe":"random_search=RandomizedSearchCV(clf,param_distributions=params,n_iter=5,scoring='roc_auc',n_jobs=-1,cv=7,verbose=3)","9abe543b":"from datetime import datetime\nstart_time = timer(None) \nrandom_search.fit(X,y)\ntimer(start_time) ","5870add3":"random_search.best_estimator_","4c6db2de":"\nrandom_search.best_params_","af745da4":"clf=xgboost.XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.4, gamma=0.2, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.15, max_delta_step=0, max_depth=3,\n              min_child_weight=3, missing=np.nan, monotone_constraints='()',\n              n_estimators=100, n_jobs=5, nthread=6, num_parallel_tree=1,\n              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=0.8,\n              subsample=0.5, tree_method='exact', validate_parameters=1,\n              verbosity=None)","b8a23127":"from sklearn.model_selection import cross_val_score\nscore=cross_val_score(clf,X,y,cv=10)","1d7df5af":"score","cc96772a":"score.mean()","9339cb45":"Spilttion of Dataset :\n","51bec71d":"Till then **Enjoy Machine**","32a48a53":"As we can see that all the data we have in integer format.","9ac1f51b":"Import Dataset :","7469f00a":"In this notebook, we will discuss about whether a person have heart disease or not. ","854f6503":"Accuracy :","28706b3d":"We have these best parameters here.","b37f1030":"Starting tune the hyperparameters using Xgboost library.","8587a2d4":"Let's find the percentage of patients those have heart disease and those who haven't.","d5e33e00":"# Heart Disease | Patient have disease or not ?","e9c0216e":"It is just 82% now its your turn fork this notebook and try to find accuracy more than 82%."}}