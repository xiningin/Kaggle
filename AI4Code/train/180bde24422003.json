{"cell_type":{"fff31ded":"code","79a2a7e5":"code","478efe9d":"code","5a0b4acd":"code","fa9a1be5":"code","f16f44dd":"code","cd99ff43":"code","66dd00f1":"code","239e0f32":"code","76f34fe3":"code","bebc6d19":"code","983956de":"code","3a17478d":"code","0fbd0f4d":"code","c28a4cdb":"code","cb2c5606":"code","0bf30437":"code","b584fb96":"markdown","fd82e0e9":"markdown","be46100d":"markdown","6f61fa97":"markdown","4d8c6bdf":"markdown","63e29a27":"markdown","e73797cd":"markdown","3541d3a3":"markdown","13b1af82":"markdown","1ae74aec":"markdown","1c39c8d5":"markdown","e038d222":"markdown","f4de4560":"markdown","2b30c0f4":"markdown"},"source":{"fff31ded":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79a2a7e5":"FILE_LOCATION = '\/kaggle\/input\/hr-analytics-classification\/train_LZdllcl.csv'\ndf = pd.read_csv(FILE_LOCATION)\n\nprint(\"Number of rows:\",  len(df))\nprint(\"Columns:\", list(df.columns))\n\ndf['education'] = df['education'].fillna('Unknown')\n\n\npromoted_df  = df[df['is_promoted'] == 1]\nnot_promoted_df = df[df['is_promoted'] == 0]\n\ndf.head()","478efe9d":"def plot_bar(field):\n    labels = [f\"{dept}\"for dept, count in df[field].value_counts().items()]\n    promoted = promoted_df[field].value_counts().values\n    not_promoted = not_promoted_df[field].value_counts().values\n\n    plt.bar(labels, promoted, label=\"Promoted\", color='blue', bottom=not_promoted)\n    plt.bar(labels, not_promoted, label=\"Not promoted\", color='red')\n    plt.legend()\n\n\ndef group_by_promotion(field):    \n    cell_values = pd.DataFrame(data={\n        'value': list(promoted_df.groupby(by=field).count().index),\n        'promoted': promoted_df.groupby(by=field).count()['employee_id'].values,\n        'not_promoted': not_promoted_df.groupby(by=field).count()['employee_id'].values,\n        'total': df.groupby(by=field).count()['employee_id'].values,\n    })\n    cell_values['promoted_perc'] = cell_values['promoted'] \/ cell_values['total']\n    cell_values['not_promoted_perc'] = cell_values['not_promoted'] \/ cell_values['total']\n\n    return cell_values      \n    \n\ndef plot_categorical_data(field, figsize=(20,5)):\n    plt.figure(figsize=figsize)\n    plot_bar(field)    \n    print(group_by_promotion(field))\n    \n    plt.show()\n    ","5a0b4acd":"def plot_numerical_data(field):\n    plt.hist(not_promoted_df[field], label=\"Not Promoted\", color='red', alpha=0.6)\n    plt.hist(promoted_df[field], label=\"Promoted\", color='blue', alpha=.6)","fa9a1be5":"def plot_label():\n    print(f\"Promoted:\\t{len(promoted_df): 7f} ({len(promoted_df)\/len(df)*100: .2f}%)\")\n    print(f\"NotPromoted:\\t{len(not_promoted_df): 7f} ({len(not_promoted_df)\/len(df)*100: .2f}%)\")\n    \n    plt.bar(['Promoted'], [len(promoted_df)], color='blue')\n    plt.bar(['Not Promoted'], [len(not_promoted_df)], color='red')\n    plt.legend()\n    plt.show()\n    \nplot_label()","f16f44dd":"plot_categorical_data('department', figsize=(15,5))","cd99ff43":"plot_categorical_data('region', figsize=(25,5))","66dd00f1":"plot_categorical_data('education')\nlen(df[(df['education'] == \"Master's & above\") & (df['is_promoted'] == 1)])","239e0f32":"plot_categorical_data('gender', figsize=(6, 5))","76f34fe3":"plot_categorical_data('recruitment_channel')","bebc6d19":"plot_categorical_data('KPIs_met >80%')","983956de":"plot_categorical_data('awards_won?')","3a17478d":"plot_numerical_data('age')","0fbd0f4d":"plot_numerical_data('no_of_trainings')","c28a4cdb":"plot_numerical_data('avg_training_score')","cb2c5606":"plot_numerical_data('previous_year_rating')","0bf30437":"plot_numerical_data('length_of_service')","b584fb96":"## Region","fd82e0e9":"## KPIS > 80%","be46100d":"# Promotion (Label)","6f61fa97":"## Gender","4d8c6bdf":"## Education","63e29a27":"## Recruitment Channel","e73797cd":"## Previous Year Training","3541d3a3":"## Department","13b1af82":"## Average Training Score","1ae74aec":"# Data Analysis","1c39c8d5":"## Age","e038d222":"## Awards Won?","f4de4560":"## Length of Service","2b30c0f4":"## Number of Trainings"}}