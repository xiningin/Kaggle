{"cell_type":{"7c41d670":"code","1fff8d5f":"code","63a9d857":"code","5bd78898":"code","2a9c95b0":"code","6aa7930e":"code","67d6c248":"code","47f138fa":"code","633f6afb":"code","b19d55a3":"code","3fd71ceb":"code","c319c77b":"code","7a88472b":"code","2e5e338b":"code","9c6862f7":"code","cc36b386":"code","1e8dc2fb":"code","a7ad78cb":"code","632e3b8b":"code","465c7691":"code","386bd620":"code","d7d6a727":"code","eb001b09":"code","0b647500":"code","52d76c16":"code","2db7bfed":"code","5469b595":"code","02c2f314":"code","d93d786d":"code","44c691b8":"code","41dad786":"code","0587929a":"code","ff1e8d9f":"code","3dd154ce":"code","49fad071":"code","d84ca420":"code","dd1f139c":"code","d0974397":"code","b83bed75":"code","3d303f83":"code","1efed8b6":"code","6e1cc615":"code","71b5ac45":"code","8caaaed0":"code","3baccb45":"code","982e945e":"code","c54c1690":"code","e4b397ec":"markdown","2ed9a8ce":"markdown","0733bccb":"markdown","3ea604ac":"markdown","8245df76":"markdown","e81aa3c3":"markdown","cb67bee4":"markdown","5e7de033":"markdown","d12ff1b8":"markdown","619cdeee":"markdown","ba6371b9":"markdown","3851be6f":"markdown","5b2d3719":"markdown","134cac54":"markdown","dcad8a88":"markdown","66986d1a":"markdown","72ccef93":"markdown"},"source":{"7c41d670":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1fff8d5f":"train = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\ntest = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/test_Y3wMUE5_7gLdaTN.csv')","63a9d857":"train_original = train.copy()\ntest_original = test.copy()","5bd78898":"train.head(3)","2a9c95b0":"test.head(3)","6aa7930e":"train.info()","67d6c248":"test.info()","47f138fa":"train['Loan_Status'].value_counts()","633f6afb":"train['Loan_Status'].value_counts().plot.bar(figsize=(10,6), title='Loan Status')","b19d55a3":"plt.figure(1)\nplt.subplot(221)\ntrain['Gender'].value_counts(normalize=True).plot.bar(figsize=(20,10), title= 'Gender')\nplt.subplot(222)\ntrain['Married'].value_counts(normalize=True).plot.bar(title= 'Married')\nplt.subplot(223)\ntrain['Self_Employed'].value_counts(normalize=True).plot.bar(title= 'Self Employed')\nplt.subplot(224)\ntrain['Credit_History'].value_counts(normalize=True).plot.bar(title= 'Credit_History')","3fd71ceb":"plt.figure(1)\nplt.subplot(131)\ntrain['Dependents'].value_counts(normalize=True).plot.bar(figsize=(24,6), title='Dependents')\nplt.subplot(132)\ntrain['Education'].value_counts(normalize=True).plot.bar(title='Education')\nplt.subplot(133)\ntrain['Property_Area'].value_counts(normalize=True).plot.bar(title='Property Area')","c319c77b":"plt.figure(1)\nplt.subplot(121)\nsns.distplot(train['ApplicantIncome'])\nplt.subplot(122)\ntrain['ApplicantIncome'].plot.box(figsize=(16,5))","7a88472b":"train.boxplot(column= 'ApplicantIncome', by='Education')\nplt.tight_layout()","2e5e338b":"Married = pd.crosstab(train['Married'], train['Loan_Status'])\nMarried.div(Married.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True, figsize=(6,4))\nplt.legend(loc = 'best')","9c6862f7":"Credit_History = pd.crosstab(train['Credit_History'], train['Loan_Status'])\nCredit_History.div(Credit_History.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True, figsize=(6,4))\nplt.legend(loc = 'best')","cc36b386":"Property_Area = pd.crosstab(train['Property_Area'], train['Loan_Status'])\nProperty_Area.div(Property_Area.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True, figsize=(6,4))\nplt.legend(bbox_to_anchor=(1.05,1.0),loc='best')","1e8dc2fb":"train['Total_Income'] = train['ApplicantIncome'] + train['CoapplicantIncome']","a7ad78cb":"bins = [0,2500,4000,6000,81000] \ngroup= ['Low', 'Average', 'High', 'Very High']","632e3b8b":"train['Total_Income_bin'] = pd.cut(train['Total_Income'], bins, labels=group)","465c7691":"Total_Income_bin = pd.crosstab(train['Total_Income_bin'], train['Loan_Status'])\nTotal_Income_bin.div(Total_Income_bin.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True)\nplt.xlabel('Total Income')\nplt.ylabel('Percentage')\nplt.legend(bbox_to_anchor=(1.05,1.0),loc='best')","386bd620":"train = train.drop(['Total_Income', 'Total_Income_bin'], axis=1)","d7d6a727":"train.columns","eb001b09":"train['Dependents'].replace('3+', 3, inplace=True)\ntest['Dependents'].replace('3+', 3, inplace=True)\ntrain['Loan_Status'].replace('N', 0, inplace=True)\ntrain['Loan_Status'].replace('Y', 1, inplace=True)","0b647500":"plt.figure(figsize=(12,6))\nsns.heatmap(train.corr(), vmax=0.8, square=True, cmap='BuPu')","52d76c16":"train.isnull().sum()","2db7bfed":"train['Gender'].fillna(train['Gender'].mode()[0], inplace=True)\ntrain['Married'].fillna(train['Married'].mode()[0], inplace=True)\ntrain['Dependents'].fillna(train['Dependents'].mode()[0], inplace=True)\ntrain['Self_Employed'].fillna(train['Dependents'].mode()[0], inplace=True)\ntrain['Credit_History'].fillna(train['Credit_History'].mode()[0], inplace=True)\ntrain['Loan_Amount_Term'].fillna(train['Loan_Amount_Term'].mode()[0], inplace=True)\ntrain['LoanAmount'].fillna(train['LoanAmount'].median(), inplace=True)","5469b595":"train.isnull().sum()","02c2f314":"test.isnull().sum()","d93d786d":"test['Gender'].fillna(test['Gender'].mode()[0], inplace=True)\ntest['Married'].fillna(test['Married'].mode()[0], inplace=True)\ntest['Dependents'].fillna(test['Dependents'].mode()[0], inplace=True)\ntest['Self_Employed'].fillna(test['Dependents'].mode()[0], inplace=True)\ntest['Credit_History'].fillna(test['Credit_History'].mode()[0], inplace=True)\ntest['Loan_Amount_Term'].fillna(test['Loan_Amount_Term'].mode()[0], inplace=True)\ntest['LoanAmount'].fillna(test['LoanAmount'].median(), inplace=True)","44c691b8":"test.isnull().sum()","41dad786":"X = train.drop('Loan_Status', 1)\ny = train['Loan_Status']","0587929a":"X = pd.get_dummies(X)\ntrain = pd.get_dummies(train)\ntest = pd.get_dummies(test)","ff1e8d9f":"from sklearn.model_selection import train_test_split","3dd154ce":"X_train, X_cv, y_train, y_cv = train_test_split(X, y, test_size=0.3)","49fad071":"from sklearn.tree import DecisionTreeClassifier","d84ca420":"model = DecisionTreeClassifier(random_state=1)","dd1f139c":"model.fit(X_train,y_train)","d0974397":"predictions = model.predict(X_cv)","b83bed75":"from sklearn.metrics import accuracy_score, classification_report","3d303f83":"print(classification_report(y_cv, predictions))","1efed8b6":"print(accuracy_score(y_cv, predictions))","6e1cc615":"from sklearn.ensemble import RandomForestClassifier","71b5ac45":"rfmodel = RandomForestClassifier(n_estimators=500)","8caaaed0":"rfmodel.fit(X_train, y_train)","3baccb45":"rfpredictions = rfmodel.predict(X_cv)","982e945e":"print(accuracy_score(y_cv, rfpredictions))","c54c1690":"print(classification_report(y_cv, rfpredictions))","e4b397ec":"# Data Cleaning","2ed9a8ce":"A Finance company wants to automate the loan eligibility process based on the customer details provided while filling application form. These details are Gender,Marital Status, Education, Number of Dependents, Income, Loan Amount, Credit History and others. To automate this process, they have given a problem to identify the customers segments, those are eligible for loan amount so that they can specifically target these customers.","0733bccb":"* Most of the applicants don't have dependents.\n* Around 80% of the applicants are graduate.\n* Most of the applicants are from Semiurban area.","3ea604ac":"There are higher number of graduates with very high incomes which are appearing to be outliers.","8245df76":"# Exploratory Data Analysis","e81aa3c3":"# **Loan Prediction Problem**","cb67bee4":"Proportions of loan getting approvals for applicants having low Total_Income is very less compared to that of applicants with Average, High and Very High income.","5e7de033":"* 80% applicants in the dataset are male.\n* Around 65% people are married.\n* Around 15% applicants in the dataset are self employed.\n* Around 85% applicants have repaid their debts.","d12ff1b8":"We impute missing values with mean, mode, median.","619cdeee":"# Import Libraries","ba6371b9":"* Proportion of married applicants is higher for the approved loans.\n* People with credit history as 1 are more likely to get their loan approved.\n* Proportion of loans getting approved in semiurban area is higher compared to rural or urban area.","3851be6f":"We can see that most correlated variables are (ApplicantIncome-LoanAmount) and (Credit_History-Loan_Status). LoanAmount is also correlated with CoapplicantIncome.","5b2d3719":"Let's Make copy of the original datasets so we do not hamper the original datasets.","134cac54":"The loan of 422(around 69%) people out of 614 was approved.","dcad8a88":"# Thank You!","66986d1a":"# Model Building","72ccef93":"# Read datasets"}}