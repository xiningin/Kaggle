{"cell_type":{"fe9fa2e8":"code","3f73e7c0":"code","56c3e09d":"code","8e4ac5c4":"code","342e9fc3":"code","c8ea9807":"code","e6a71bd5":"code","cf5afd61":"code","10396af2":"code","55d4c952":"code","958eafac":"code","43562adf":"code","2b64128a":"code","bc74f7af":"code","5ec64703":"code","cf720cec":"code","92dda4fe":"code","14c9aa9d":"code","7d18aadd":"code","d7b8c4c2":"code","7830bf17":"code","6ee509ce":"code","015eb5f9":"code","fd2e00db":"markdown","0509e96d":"markdown","35e3fb73":"markdown","8991dd8c":"markdown","563986f2":"markdown","a4af5054":"markdown","88887cae":"markdown","0e5338ac":"markdown","6eae1e48":"markdown","0f244765":"markdown","eb807c27":"markdown","fc70d887":"markdown","a65b45b7":"markdown","cc827d9a":"markdown","f48b99e3":"markdown","b5131d10":"markdown","4b4f2df9":"markdown","de352106":"markdown","6aa786ef":"markdown","2d2f9d98":"markdown","a2d94f33":"markdown","fa1f4340":"markdown","e970d3c3":"markdown","855fafbb":"markdown","05d13f80":"markdown","72fd5aa4":"markdown","fab32c1f":"markdown"},"source":{"fe9fa2e8":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","3f73e7c0":"URL = \"..\/input\/public\/credito.csv\"\ndf = pd.read_csv(URL, na_values='na')\n\ndf.head()\n\n","56c3e09d":"linhas, colunas = df.shape\nprint(f'A matriz de dados tem {linhas} linhas e {colunas} colunas.')","8e4ac5c4":"qtd_total, _ = df.shape\nqtd_adimplentes, _ = df[df['default'] == 0].shape\nqtd_inadimplentes, _ = df[df['default'] == 1].shape\n\nprint(f\"A proporc\u00e3o clientes adimplentes \u00e9 de {round(100 * qtd_adimplentes \/ qtd_total, 2)}%\")\nprint(f\"A proporc\u00e3o clientes inadimplentes \u00e9 de {round(100 * qtd_inadimplentes \/ qtd_total, 2)}%\")","342e9fc3":"df.select_dtypes('object').describe().transpose() # limite_credito e valor_transacoes_12m indevidamente classificados como string","c8ea9807":"df.drop('id', axis=1).select_dtypes('number').describe().transpose() # m\u00e9tricas dos valores n\u00famericos (faltando os dois campos citados anteriormente)","e6a71bd5":"df.isna().any() # identifica\u00e7\u00e3o das colunas com dados faltantes","cf5afd61":"def stats_dados_faltantes(df: pd.DataFrame) -> None:\n\n  stats_dados_faltantes = []\n  for col in df.columns:\n    if df[col].isna().any():\n      qtd, _ = df[df[col].isna()].shape\n      total, _ = df.shape\n      dict_dados_faltantes = {col: {'quantidade': qtd, \"porcentagem\": round(100 * qtd\/total, 2)}}\n      stats_dados_faltantes.append(dict_dados_faltantes)\n\n  for stat in stats_dados_faltantes:\n    print(stat)\n  \nprint('\\033[1m' + 'Dados faltantes base completa:' + '\\033[0m')\nstats_dados_faltantes(df=df) # mensura\u00e7\u00e3o da quantidade de dados faltantes","10396af2":"print('\\033[1m' + 'Dados faltantes clientes adiplentes:' + '\\033[0m')\nstats_dados_faltantes(df=df[df['default'] == 0])\n\nprint('\\n\\033[1m' + 'Dados faltantes clientes inadiplentes:' + '\\033[0m')\nstats_dados_faltantes(df=df[df['default'] == 1])","55d4c952":"df[['limite_credito', 'valor_transacoes_12m']].dtypes # antes da convers\u00e3o para float\n","958eafac":"fn = lambda valor: float(valor.replace(\".\", \"\").replace(\",\", \".\")) # teste de fun\u00e7\u00e3o para ajuste dos valores em float\n\nvalores_originais = ['12.691,51', '8.256,96', '3.418,56', '3.313,03', '4.716,22']\nvalores_limpos = list(map(fn, valores_originais))\n\nprint(valores_originais)\nprint(valores_limpos)","43562adf":"# aplica\u00e7\u00e3o do teste na base real\ndf['valor_transacoes_12m'] = df['valor_transacoes_12m'].apply(lambda valor: float(valor.replace(\".\", \"\").replace(\",\", \".\")))\ndf['limite_credito'] = df['limite_credito'].apply(lambda valor: float(valor.replace(\".\", \"\").replace(\",\", \".\")))","2b64128a":"df.drop('id', axis=1).select_dtypes('number').describe().transpose() # m\u00e9tricas corrigidas ap\u00f3s ajuste dos floats","bc74f7af":"df.select_dtypes('object').describe().transpose()# m\u00e9tricas corrigidas ap\u00f3s ajuste dos floats","5ec64703":"df.dropna(inplace=True)\n\nqtd_total_novo, _ = df.shape\nqtd_adimplentes_novo, _ = df[df['default'] == 0].shape\nqtd_inadimplentes_novo, _ = df[df['default'] == 1].shape\n\nprint(f\"A proporc\u00e3o anterior de adimplentes ativos \u00e9 de {round(100 * qtd_adimplentes \/ qtd_total, 2)}%\")\nprint(f\"A nova proporc\u00e3o de clientes adimplentes \u00e9 de {round(100 * qtd_adimplentes_novo \/ qtd_total_novo, 2)}%\")\nprint(\"\")\nprint(f\"A proporc\u00e3o anterior de clientes inadimplentes \u00e9 de {round(100 * qtd_inadimplentes \/ qtd_total, 2)}%\")\nprint(f\"A nova proporc\u00e3o de clientes inadimplentes \u00e9 de {round(100 * qtd_inadimplentes_novo \/ qtd_total_novo, 2)}%\")","cf720cec":"df.select_dtypes('object').head(n=5)","92dda4fe":"sns.set_style(\"whitegrid\")\n\ndf_adimplente = df[df['default'] == 0]\ndf_inadimplente = df[df['default'] == 1]","14c9aa9d":"def categoria_graficos (coluna: str, titulos: list): # fun\u00e7\u00e3o gera sequ\u00eancia de subplots por categoria\n\n  eixo = 0\n  max_y = 0\n  max = df.select_dtypes('object').describe()[coluna]['freq'] * 1.1\n\n  figura, eixos = plt.subplots(1,3, figsize=(20, 5), sharex=True)\n\n  for dataframe in [df, df_adimplente, df_inadimplente]:\n\n    df_to_plot = dataframe[coluna].value_counts().to_frame()\n    df_to_plot.rename(columns={coluna: 'frequencia_absoluta'}, inplace=True)\n    df_to_plot[coluna] = df_to_plot.index\n    df_to_plot.sort_values(by=[coluna], inplace=True)\n    df_to_plot.sort_values(by=[coluna])\n\n    f = sns.barplot(x=df_to_plot[coluna], y=df_to_plot['frequencia_absoluta'], ax=eixos[eixo])\n    f.set(title=titulos[eixo], xlabel=coluna.capitalize(), ylabel='Frequ\u00eancia Absoluta')\n    f.set_xticklabels(labels=f.get_xticklabels(), rotation=90)\n\n    _, max_y_f = f.get_ylim()\n    max_y = max_y_f if max_y_f > max_y else max_y\n    f.set(ylim=(0, max_y))\n\n    eixo += 1\n\n  return figura","7d18aadd":"colunas = ['escolaridade', 'salario_anual', 'estado_civil']\ntitulos = ['Total dos Clientes', 'Clientes Adimplentes', 'Clientes Inadimplentes']\n\nfigura = plt\n\nfor coluna in colunas:\n  figura.show(categoria_graficos(coluna, titulos))","d7b8c4c2":"df.drop(['id', 'default'], axis=1).select_dtypes('number').head(n=5)","7830bf17":"def variaveis_graficos (coluna: str, titulos: list): # fun\u00e7\u00e3o gera sequ\u00eancia de subplots por categoria\n\n  eixo = 0\n  max_y = 0\n  figura, eixos = plt.subplots(1,3, figsize=(20, 5), sharex=True)\n\n  for dataframe in [df, df_adimplente, df_inadimplente]:\n\n    f = sns.histplot(x=coluna, data=dataframe, stat='count', ax=eixos[eixo])\n    f.set(title=titulos[eixo], xlabel=coluna.capitalize(), ylabel='Frequ\u00eancia Absoluta')\n\n    _, max_y_f = f.get_ylim()\n    max_y = max_y_f if max_y_f > max_y else max_y\n    f.set(ylim=(0, max_y))\n\n    eixo += 1\n  \n  return figura\n","6ee509ce":"colunas = ['qtd_transacoes_12m', 'valor_transacoes_12m']\ntitulos = ['Qtd. de Transa\u00e7\u00f5es no \u00daltimo Ano', 'Qtd. de Transa\u00e7\u00f5es no \u00daltimo Ano de Adimplentes', 'Qtd. de Transa\u00e7\u00f5es no \u00daltimo Ano de Inadimplentes']\n\nfor coluna in colunas:\n  figura.show(variaveis_graficos(coluna, titulos))","015eb5f9":"f = sns.relplot(x='valor_transacoes_12m', y='qtd_transacoes_12m', data=df, hue='default')\n_ = f.set(\n    title='Rela\u00e7\u00e3o entre Valor e Quantidade de Transa\u00e7\u00f5es no \u00daltimo Ano', \n    xlabel='Valor das Transa\u00e7\u00f5es no \u00daltimo Ano', \n    ylabel='Quantidade das Transa\u00e7\u00f5es no \u00daltimo Ano'\n  )","fd2e00db":"## *4.2 Limpeza de dados*","0509e96d":"## 5.2 An\u00e1lise num\u00e9rica","35e3fb73":"**M\u00e9tricas gerais da massa de dados para an\u00e1lise.**","8991dd8c":"Identifica\u00e7\u00e3o de padr\u00e3o de inadimpl\u00eancia sob base de dados de dados de conse\u00e7\u00e3o de cr\u00e9dito. *Default* = 1 (inadimplentes) alvo da an\u00e1lise.","563986f2":"Com base no resultado dos histogramas das duas vari\u00e1veis estudadas temos abaixo a rela\u00e7\u00e3o entre ambas no gr\u00e1fico de relacionamento.","a4af5054":"**Convers\u00e3o de string indevida em float e limpeza de dados vazios**","88887cae":"# **3. Explora\u00e7\u00e3o de dados:**","0e5338ac":"O percentual de dados vazios que foram descartados da amostra n\u00e3o compromete a validade da massa de dados, pois a propor\u00e7\u00e3o entre clientes adiplentes e inadimplentes se manteve praticamente a mesma.","6eae1e48":"**Remo\u00e7\u00e3o das linhas de dados com valores vazios nas colunas.**","0f244765":"## 6.1 Dados descartados","eb807c27":"A primeira an\u00e1lise baseada nas categorias para descobrir poss\u00edvel rela\u00e7\u00e3o com os eventos alvo do default.\nClasses analisadas: *escolaridade, sal\u00e1rio anual e estado civil.*","fc70d887":"**Verificando o montante de dados faltantes que possam comprometer a leitura adequeda da amostra de dados.**","a65b45b7":"## *3.1 Massa bruta de dados*","cc827d9a":"O que ficou claro na an\u00e1lise gr\u00e1fica dos dados com base nas categorias escolaridade, estado civil e salario anual e que essas caracter\u00edsticas n\u00e3o explicam maior ou menor \u00edndice de inandimpl\u00eancia. As propor\u00e7\u00f5es entre default e n\u00e3o default com rela\u00e7\u00e3o a massa total se mantem praticamente iguais. Ou seja, n\u00e3o sinalizam nenhuma distor\u00e7\u00e3o que explique a inadimpl\u00eancia. ","f48b99e3":"J\u00e1 com rela\u00e7\u00e3o a an\u00e1lise dos gr\u00e1ficos das vari\u00e1veis quantidade de transa\u00e7\u00f5es em 12 meses e valor das transa\u00e7\u00f5es em 12 meses \u00e9 poss\u00edvel perceber que existe um comportamento an\u00f4malo para uma faixa espec\u00edfica de valor de transa\u00e7\u00f5es e quantidade de transa\u00e7\u00f5es.\n\nExiste um forte incremento de clientes inadimplentes na faixa entre 35 e 45 transa\u00e7\u00f5es anuais e na faixa m\u00e9dia de valor de transa\u00e7\u00f5es em R$ 2.500,00.\n\nQuando sobrepomos as duas amostras no gr\u00e1fico de relacionamento fica ainda mais claro a exist\u00eancia de uma rela\u00e7\u00e3o entre o n\u00famero de transa\u00e7\u00f5es na faixa 35-45 com os valores m\u00e9dios de R$ 2.500,00, indicando uma aten\u00e7\u00e3o especial para esse grupo de clientes.\n\n","b5131d10":"## 5.1 An\u00e1lise por categorias","4b4f2df9":"# **5. An\u00e1lise de dados**","de352106":"## *4.1 Corre\u00e7\u00e3o dos valores*","6aa786ef":"## 6.2 An\u00e1lise com base nas categorias","2d2f9d98":"## *3.2 Tratando dados faltantes*","a2d94f33":"# **1. Problema**","fa1f4340":"# **6. Insigths**","e970d3c3":"## 6.3 An\u00e1lise com base nas vari\u00e1veis num\u00e9ricas","855fafbb":"**Uma vez identificadas as colunas que devem ser tratadas como n\u00fameros(float) fazemos a convers\u00e3o dos dados.**","05d13f80":"# **2. Carregameneto de dados:**","72fd5aa4":"# **4. Limpenza de dados**","fab32c1f":"An\u00e1lise das vari\u00e1veis n\u00famericas da amostra. Vari\u00e1veis analisadas: *quantidade de transa\u00e7\u00f5es nos \u00faltimos 12 meses e valor das transa\u00e7\u00f5es dos \u00faltimos 12 meses.*"}}