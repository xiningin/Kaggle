{"cell_type":{"c59835fd":"code","afd6d2dd":"code","bda6795d":"code","222f93b6":"code","143cea10":"markdown","31a0c411":"markdown"},"source":{"c59835fd":"import warnings  \nimport pandas as pd\nimport umap\nfrom plotnine import *\nwarnings.filterwarnings('ignore')","afd6d2dd":"df=pd.read_csv(\"..\/input\/Iris.csv\")\ndel df[\"Id\"]","bda6795d":"def clustUMAP(data,n_neighbors=list(range(5,55,10)),seg_col=None):\n    \"\"\"\n    Creates UMAP projections of higher dimensional data\n    Inputs:\n        data- DataFrame to Vizualize\n        n_neighbors- List of n_neighbors to try\n        seg_col- Optional column with segment assignments\n    Outputs:\n        um\n    \"\"\"\n    data=data.copy()\n    if seg_col is not None:\n        seg=data.pop(seg_col)\n    plot_frame=pd.DataFrame()\n    for n in n_neighbors:\n        sub=umap.UMAP(n_neighbors=n).fit_transform(data)\n        sub=pd.DataFrame(sub)\n        sub.columns=[\"X\",\"Y\"]\n        sub[\"run\"]=\"N_Neighbors= \"+str(n)\n        if seg_col is not None:\n            sub[seg_col]=seg\n        plot_frame=plot_frame.append(sub)\n    if seg_col is None:\n        um=(ggplot(plot_frame,aes(\"X\",\"Y\"))+geom_point()+facet_wrap(\"run\",scales = \"free\"))+labs(title=\"UMAP Plots\",x=\"X\",y=\"Y\")\n    else:\n        um=(ggplot(plot_frame,aes(\"X\",\"Y\",color=\"factor(\"+seg_col+\")\"))+geom_point()+facet_wrap(\"run\",scales = \"free\"))+labs(title=\"UMAP Plots\",x=\"X\",y=\"Y\")\n    return um","222f93b6":"clustUMAP(df,n_neighbors=[25,30,35,40],seg_col=\"Species\")","143cea10":"### Iris plots","31a0c411":"### The following function can be utilized to create quick UMAP visualizations in ggplot "}}