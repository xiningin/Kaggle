{"cell_type":{"620cd253":"code","f20e7026":"code","04f9e53f":"code","4006f1a3":"code","cea64b57":"code","783d14e5":"code","a5a4e531":"code","3a040aa2":"code","204f87db":"code","29f8c20c":"code","e2080060":"code","343b0426":"code","39008d0c":"code","ce8aca2f":"code","8d23f124":"code","ff740f37":"code","e2194dab":"code","82e6018d":"code","5b036422":"code","ceea2a98":"code","5822de63":"code","2861276b":"code","d3aa3109":"code","cd01cb01":"code","963a995d":"code","124cbec0":"code","97649859":"code","9c065108":"code","448fbb3d":"code","dce1d7a9":"code","01c07c8d":"code","ae1b331d":"code","f93b624d":"code","46048362":"code","b7592567":"code","279e3440":"code","b23c087d":"code","17c79783":"code","90f4731c":"code","4c5b6aaa":"code","d1f47446":"code","93cc5be4":"code","7a084b83":"code","d9a129e6":"code","2a614a9e":"code","70a63c50":"code","33cc4b18":"code","472de4eb":"code","51fae4fd":"code","85e94d0e":"code","480cf61d":"code","70d9d3af":"code","b925d88e":"code","1beea58f":"code","49153059":"code","ee0dba84":"code","3ea553ae":"code","ff6faf92":"code","0c15b0eb":"code","9aeaa509":"code","08184636":"code","666e7a19":"code","97ba95f2":"markdown","b56fa6e7":"markdown","88d32c72":"markdown","9aef94d5":"markdown","adc77824":"markdown","6d4d2b1f":"markdown","547857cc":"markdown","29d7bdc0":"markdown","4b99ff85":"markdown","57ae6cb5":"markdown","aa18711a":"markdown","a519d6d3":"markdown","ef5701bc":"markdown","d227e6e1":"markdown","11497e94":"markdown"},"source":{"620cd253":"# import important packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime","f20e7026":"import os\nfor dirname, _, filenames in os.walk('..\/input\/hotel-booking-demand\/hotel_bookings.csv'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndataset = pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')","04f9e53f":"# Will ensure that all columns are displayed\npd.set_option('display.max_columns', None) \n","4006f1a3":"# prints out the top 5 values for the datasef\nprint(dataset.head())","cea64b57":"# checking the dataset shape\nprint(dataset.shape)\n# (119390, 32)","783d14e5":"# This tells us which variables are object, int64 and float 64. This would mean that \n# some of the object variables might have to be changed into a categorical variables and int64 to float64 \n# depending on our analysis.\nprint(dataset.info())\n# dtypes: float64(4), int64(16), object(12)\n","a5a4e531":"# checking for counts data and gives Mean, Sd and quartiles for all columns\nprint(dataset.describe())","3a040aa2":"# checking for missing data\nprint('Nan in each columns' , dataset.isna().sum(), sep='\\n')\n# This means that there are missing (NULL) values in 4 columns: (4) children, \n# (488) country, (16340) agent and (112593)company\n\n# Dropping company variables due to the fact that it has the most amount of data missing\ndataset.drop('company',axis=1,inplace=True)","204f87db":"# Looking for all the unique values in all the columns\ncolumn = dataset.columns\nfor i in column:\n    print('\\n',i,'\\n',dataset[i].unique(),'\\n','-'*80)","29f8c20c":"# making object into categorical variables\ndataset['hotel'] = dataset['hotel'].astype('category')\ndataset['arrival_date_month'] = dataset['arrival_date_month'].astype('category')\ndataset['meal'] = dataset['meal'].astype('category')\ndataset['country'] = dataset['country'].astype('category')\ndataset['market_segment'] = dataset['market_segment'].astype('category')\ndataset['distribution_channel'] = dataset['distribution_channel'].astype('category')\ndataset['reserved_room_type'] = dataset['reserved_room_type'].astype('category')\ndataset['assigned_room_type'] = dataset['assigned_room_type'].astype('category')\ndataset['deposit_type'] = dataset['deposit_type'].astype('category')\ndataset['customer_type'] = dataset['customer_type'].astype('category')\ndataset['reservation_status'] = dataset['reservation_status'].astype('category')","e2080060":"# checking data to check that all objects have been changed to categorical variables.\ndataset.info()\n# dtypes: category(11), float64(4), int64(16), object(1)\n# all obejcts have been succesfully changed.\n","343b0426":"dataset['arrival_date_month'].dtype\n# CategoricalDtype(categories=['April', 'August', 'December', 'February', 'January', 'July',\n# 'June', 'March', 'May', 'November', 'October', 'September'],\n# ordered=False)\n\ndataset['arrival_date_month'].unique()\n# Length: 12\n# Categories (12, object): [July, August, September, October, ..., March, April, May, June]\n\n# Reordering months so that it starts with 'January' and proceed in the correct order\ndataset['arrival_date_month'] = dataset['arrival_date_month'].cat.reorder_categories(['January', 'February', 'March', 'April', 'May', 'June',\n'July', 'August', 'September', 'October', 'November', 'December'], ordered=True)\n# Length: 12\n# Categories (12, object): [January < February < March < April ... September < October < November < December]\n","39008d0c":"dataset.groupby('arrival_date_month').size()\n\n\n# Graph examining number of Reservations for each month\nplt.figure(figsize = (12, 8))\nsns.countplot(x='arrival_date_month', data = dataset, palette = 'terrain', order = dataset['arrival_date_month'].value_counts().index)\nplt.xticks(rotation = 90)\nplt.title('Number of Reservation for Each Month', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Month', fontsize = 14)\nplt.show()\nprint('It is clear that August, July and May are the Top 3 months for travel')\nprint('The winter months are the three least popular months for travel.')\n","ce8aca2f":"# =============================================================================\n# Creating a new variable of the total number of guests per Reservation\n# and examing the new variable\n# =============================================================================\n\ndataset['total_guests'] = dataset['adults']+ dataset['children']+ dataset['babies']\n\n# viewing most common group type\ndataset.groupby(['total_guests']).size().sort_values(ascending=False)\n","8d23f124":"dataset['total_guests'].describe()\n\n","ff740f37":"# creating a graph for the number of people with a histogram\nplt.figure(figsize = (12, 8))\nsns.countplot(x = 'total_guests', data = dataset,palette = 'terrain',order = dataset['total_guests'].value_counts().head(15).index)\nplt.xticks(rotation = 90)\nplt.title('Number of Guests (Adults, Children, Babies)', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Number of Guests', fontsize = 14)\nplt.show()\nprint('The trend shows that majority of reservations are for two people.')\nprint('The second highest trend is for just one person. It can be presumed that this are solo travelers.')\n","e2194dab":"# =============================================================================\n# Creating a new variable of the number of night stayed\n# and examing the new variable\n# =============================================================================\n# getting total number of nights stayed (weekend and weekdays)\ndataset['total_nights'] = dataset['stays_in_weekend_nights'] + dataset['stays_in_week_nights']\n\n\n\n","82e6018d":"# viewing the most common length of stay\ndataset.groupby(['total_nights']).size().sort_values(ascending=False)","5b036422":"dataset['total_nights'].describe()","ceea2a98":"# Examining the length of stay with a histogram\nplt.figure(figsize = (12, 8))\nsns.countplot(x = 'total_nights', data = dataset, palette = 'terrain', order = dataset['total_nights'].value_counts().head(20).index)\nplt.xticks(rotation = 90)\nplt.title('Number of Nights Per Reservation', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Number of Nights', fontsize = 14)\nplt.show()\nprint('The trend shows that majority of reservations stay for two or three night.')\nprint('It can be presumed that this is reflected by people going away by Friday, Saturday and Sunday.')","5822de63":"# =============================================================================\n# Examining countries\n# Splitting by countries and then data merging top 10 for analysis\n# =============================================================================\ndataset['country'].unique()\n# Examining the most populat countries\n\n","2861276b":"dataset.groupby(['country']).size().sort_values(ascending=False)\n# Top 5 countries for the bookings \n","d3aa3109":"# Creating a table \ndataset.groupby(['country']).size().sort_values(ascending=False).head(25)\n# country","cd01cb01":"# Examines the top 25 countries that make a reservation\nplt.figure(figsize = (12, 8))\nsns.countplot(x = 'country', data = dataset, palette = 'viridis', order = dataset['country'].value_counts().head(20).index)\nplt.xticks(rotation = 90)\nplt.title('Breakdown of Top 25 Countries', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Top 25 Countries', fontsize = 14)\nplt.show()\nprint('Graphs shows that majority of reservations are made for Portugal.')\nprint('However, there is a big drop to the second most popular country.')\nprint('The bars slowly decrease after the second most popular country.')","963a995d":"\n# Top 1 - PRT from the dataset\ndata_prt = dataset[dataset.country == 'PRT']\n\n# Top 2 -  GBR from the dataset\ndata_gbr = dataset[dataset.country == 'GBR']\n\n# Top 3- FRA from the dataset\ndata_fra = dataset[dataset.country == 'FRA']\n\n# Top 4- ESP from the dataset\ndata_esp = dataset[dataset.country == 'ESP']\n\n# Top 5- DEU from the dataset\ndata_deu = dataset[dataset.country == 'DEU']\n\n# Top 6 - ITA from the dataset\ndata_ita = dataset[dataset.country == 'ITA']\n\n# Top 7 - IRL from the dataset\ndata_irl = dataset[dataset.country == 'IRL']\n\n# Top 8 - BEL from the dataset\ndata_bel = dataset[dataset.country == 'BEL']\n\n# Top 9-BRA from the dataset\ndata_bra = dataset[dataset.country == 'BRA']\n\n# Top 10\ndata_nld = dataset[dataset.country == 'NLD']\n\n\n# Combining the data to create a dataset with just the top 10 countries\ndata_top10 = pd.concat([data_fra, data_gbr, data_prt, data_deu, data_esp,\n                        data_ita,data_irl, data_bel, data_bra, data_nld]).reset_index(drop=True)","124cbec0":"\n# creates a pie chart of the Top 10 countries \nfig = plt.figure(figsize = (20,10))\nlabels = data_top10['country'].value_counts().index.tolist()\nsizes = data_top10['country'].value_counts().tolist()\nplt.pie(sizes, labels = labels, autopct = '%1.1f%%',\n        shadow = False, startangle = 30)\nplt.title('The Breakdown of Top 10 Countries', fontdict = None, position = [0.48,1], size = 'xx-large')\nplt.show()\nprint('This graph shows the percentage of reservations in each country.')","97649859":"# Checking unique labels in country\ndata_top10['country'].unique","9c065108":"# Resetting the categories - to give the varaiables the right amount of levels\ndata_top10['country'] = data_top10['country'].cat.set_categories(['GBR', 'FRA', 'ESP', 'DEU', 'ITA', \n                                                                  'IRL', 'BEL', 'BRA', 'NLD', 'PRT'])\n# Name: country, Length: 100800, dtype: category\n# Categories (10, object): [GBR, FRA, ESP, DEU, ..., BEL, BRA, NLD, PRT]>","448fbb3d":"# Getting how many check-outs, cancelations and no-shows are in each country\ndata_top10.groupby('country')['reservation_status'].value_counts()\n","dce1d7a9":"# creating a graph based on Top 10 and Reservation Status\nreservation_countries = data_top10.groupby(['country','reservation_status']).lead_time.count()\n\n# shows the table\nprint(reservation_countries)\n","01c07c8d":"# creates a graph\nplt.figure(figsize = (12, 8))\nsns.barplot(x = 'country', y = 'lead_time', hue = 'reservation_status', data = reservation_countries.reset_index(), palette = ['red', 'green', 'orange'])\nplt.title('Reservation Status for Each Country', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Top 10 Countries', fontsize = 14)\nL=plt.legend()\nL.get_texts()[0].set_text('Canceled')\nL.get_texts()[1].set_text('Check-Out')\nL.get_texts()[2].set_text('No-Show')\nplt.show()\nprint('It is clear that although Portugal has the most number of reservations.')\nprint('Unfortunately, Portugal has more cancelations than check-outs. ')\n# From the graph, it is clear to see that PRT makes the most reservations, \n# but also more people making cancelations than people checking out of a hotel.\n","ae1b331d":"# =============================================================================\n# Examining Popular Months in Each Year \n# =============================================================================\n# creating the data \ndata_top10['arrival_year_month'] =   data_top10['arrival_date_month'].astype(str) + \"  \" + data_top10['arrival_date_year'].astype(str)\n\n# examining the table\nprint(data_top10['arrival_year_month'].value_counts())\n\n","f93b624d":"# draw a graph \nplt.figure(figsize = (12, 8))\nax = sns.countplot(x = \"arrival_year_month\", data = data_top10, palette = \"terrain\")\nplt.title('Number of Reservations by Most Popular Months and Years', fontsize = 16)\nplt.xlabel('Month\/Year', fontsize = 14)\nplt.ylabel('Total Count', fontsize = 14)\nplt.xticks(rotation = 90)\nplt.show\nprint('This graph shows trand reservations by month and year.')\nprint('It is clear that there is a high number of reservations every year during spring and summer.')\nprint('As expected, there are reservations decrease in winder months every year.')\nprint('Furthermore, there has been a more number of reservations every year.')","46048362":"# =============================================================================\n# Checking cancellation for each month\n# =============================================================================\n\n# Creating a graph \nis_cancel_month = data_top10.groupby(['arrival_date_month','is_canceled']).lead_time.count()\n\n# prints a table\nis_cancel_month \n","b7592567":"# Breakdown of Reservations by MONTH For TOP 10 Countries\nplt.figure(figsize = (12, 8))\nsns.barplot(x = 'arrival_date_month', y = 'lead_time', hue = 'is_canceled', \n            data = is_cancel_month.reset_index(), palette = ['green', 'red'])\nplt.title('Number of Cancelations and Check-Outs  for Each Month for Top 10 Countries', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Month', fontsize = 14)\nL=plt.legend()\nL.get_texts()[0].set_text('Check-out')\nL.get_texts()[1].set_text('Canceled')\nplt.xticks(rotation = 90)\nplt.show()\n","279e3440":"# Breakdown of Reservations by MONTH\/YEAR For Top 10 Countries\nplt.figure(figsize = (12, 8))\nsns.countplot(x = \"arrival_year_month\",  hue = 'is_canceled', data = data_top10, palette = ['green', 'red'])\nplt.title('Number of Cancelations and Check-Outs  for Each Month and Year for Top 10 Countries', fontsize = 16)\nplt.xlabel('Month and Year', fontsize = 14)\nplt.ylabel('Total Count', fontsize = 14)\nplt.xticks(rotation = 90)\nL=plt.legend()\nL.get_texts()[0].set_text('Check-out')\nL.get_texts()[1].set_text('Canceled')\nplt.xticks(rotation = 90)\nplt.show()","b23c087d":"# =============================================================================\n# EXAMING CANCELATIONS IN PORTUGAL\n# Because Portugal has more cancelations than check-outs, we decided to look at Portugal\n# to see which months the cancelations are happening.\n# =============================================================================\n\n# changing index for Portugal\ndata_prt.reset_index(drop=True)\n\nis_cancel_month_PRT = data_prt.groupby(['arrival_date_month','is_canceled']).lead_time.count()","17c79783":"# Breakdown of Reservations by MONTH For Portugal\nplt.figure(figsize = (12, 8))\nsns.barplot(x = 'arrival_date_month', y = 'lead_time', hue = 'is_canceled', data = is_cancel_month_PRT.reset_index(), palette = ['green', 'red'])\nplt.title('Number of Cancelations for Each Month in Portugal', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Month', fontsize = 14)\nL=plt.legend()\nL.get_texts()[0].set_text('Check-Out')\nL.get_texts()[1].set_text('Canceled')\nplt.xticks(rotation = 90)\nplt.show()\nprint('There is a more cancelation than check-outs during the spring and summer months in Portugal.')\nprint('This trend is also visible for September and October.')\nprint('However, there are more check-outs than cancelations in November, December, January, February and March')","90f4731c":"# =============================================================================\n# Splitting the data into cancelations or not cancelations\n# =============================================================================\n# splitting data on cancellations\n# retrieving everyone who has NOT cancelled their reservation  \nno_cancelations  = data_top10[data_top10['reservation_status'].isin(['Check-Out'])]\n\nall_cancelations  = data_top10[data_top10['reservation_status'].isin(['Canceled', 'No-Show'])]\n\nno_cancelations.groupby('hotel')['reservation_status'].value_counts()\nprint('Number of check outs in each hotel')\n\n","4c5b6aaa":"all_cancelations.groupby('hotel')['reservation_status'].value_counts()\nprint('Number of cancelations and no-shows in each hotel')","d1f47446":"\n#creates graph\nfig = plt.figure(figsize = (20, 10))\nlabels = data_top10['reservation_status'].value_counts().index.tolist()\nsizes = data_top10['reservation_status'].value_counts().tolist()\nplt.pie(sizes, labels = labels, autopct = '%1.1f%%',\n        shadow = False, startangle = 30)\nplt.title('Breakdown of Reservation Status (Top 10 Countries)', fontdict = None, position= [0.48, 1], size = 'xx-large')\nplt.show()\n# 61.2% of people check out of the hotel\n# 37.9% cancel\n# 0.9% of people No-Show\nprint('Less 2\/3 of reservations get fulfilled. Nearly 40% of reservations are canceled or there is a no-show.')\n","93cc5be4":"#draws pie chart\n\nfig = plt.figure(figsize = (20,10))\nlabels = all_cancelations['country'].value_counts().index.tolist()\nsizes = all_cancelations['country'].value_counts().tolist()\nplt.pie(sizes, labels = labels, autopct = '%1.1f%%',\n        shadow = False, startangle = 30)\nplt.title('The Breakdown of Cancelations by Top 10 Countries', fontdict=None, position= [0.48,1], size = 'xx-large')\nplt.show()","7a084b83":"# =============================================================================\n# \n# =============================================================================\n\ndata_top10.groupby('is_canceled')['reservation_status'].value_counts()\n\n","d9a129e6":"data_top10.groupby('hotel')['reservation_status'].value_counts()","2a614a9e":"# Number of people at the different types of hotel\ndf = pd.DataFrame(data_top10, columns = ['hotel', 'adults','children', 'babies', 'total_guests'])\nprint(df)\n\ndf.groupby('hotel')['adults','children', 'babies', 'total_guests'].sum()","70a63c50":"# =============================================================================\n# ADR - Average Daily Rate\n# =============================================================================\nprint('The highest value is: ', dataset['adr'].max())\n# The highest value is :  5400.0\n\nprint('The lowest value is: ', dataset['adr'].min())\n# The lowest value is :  -6.38\n","33cc4b18":"# normalize price per night (adr):\ndata_top10['adr_pp'] = (data_top10['adr'] \/ data_top10['total_guests'])\n\n# only actual guests\ndata_top10_guests = data_top10.loc[data_top10['is_canceled'] == 0] # ","472de4eb":"# price for the hotel at different months\nplt.figure(figsize = (12, 8))\nsns.boxplot(x = 'arrival_date_month',\n            y = 'adr_pp',\n            data = data_top10_guests, \n            fliersize = 0)\nplt.title('Price of Room per Person per Night for Each Month (Top 10)', fontsize = 16)\nplt.xlabel('Months', fontsize = 14)\nplt.ylabel('Price [EUR]', fontsize = 14)\nplt.xticks(rotation = 90)\nplt.ylim(0, 150)\nplt.show()\n# Graph shows that the price per person per night differ for each month.\n# Shows that there are not that much of a difference between the prices in each month\n\n","51fae4fd":"# price for the hotel at different months\nplt.figure(figsize = (12, 8))\nsns.boxplot(x = 'country',\n            y = 'adr_pp',\n            data = data_top10_guests, \n            fliersize = 0)\nplt.title('Price of Room per Person per Night for Each Country (Top 10)', fontsize = 16)\nplt.xlabel('Countries', fontsize = 14)\nplt.ylabel('Price [EUR]', fontsize = 14)\nplt.xticks(rotation = 90)\nplt.ylim(0,150)\nplt.show()\nprint('Graph shows that there is just a small difference in price between country.')\nprint('Although, in a previous graph, we saw that there were more cancelations and no-shows in Portugal')\nprint('than any other country, it is clear that the price is not the reason why.')\n\n","85e94d0e":"\ndata_top10_guests.groupby('country')['adr_pp'].describe()","480cf61d":"# =============================================================================\n# Examining Different Meal Plans on Reservation Status\n# =============================================================================\ndata_top10['meal'].value_counts()","70d9d3af":"# Drawing a pie chart\nfig = plt.figure(figsize = (20,10))\nlabels = data_top10['meal'].value_counts().index.tolist()\nsizes = data_top10['meal'].value_counts().tolist()\nplt.pie(sizes, labels = labels, autopct = '%1.1f%%',\n        shadow = False, startangle = 30)\nplt.title('The Breakdown of different types of hotels', fontdict=None, position= [0.48,1], size = 'xx-large')\nplt.show()","b925d88e":"# creating a graph based on Top 10 and Reservation Status\nreservation_meals = data_top10.groupby(['reservation_status','meal']).lead_time.count()","1beea58f":"# shows the table\nprint(reservation_meals)\n","49153059":"# creates a graph\nplt.figure(figsize = (12, 8))\nsns.barplot(x = 'meal', y = 'lead_time', hue = 'reservation_status', data = reservation_meals.reset_index(), palette = ['red', 'green', 'orange'])\nplt.title('Breakdown of Reservation Status by Meal Type', fontsize = 16)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Meal Type', fontsize = 14)\nL=plt.legend()\nL.get_texts()[0].set_text('Canceled')\nL.get_texts()[1].set_text('Check-Out')\nL.get_texts()[2].set_text('No-Show')\nplt.show()\n","ee0dba84":"# =============================================================================\n# Checking whether the Reserved Room and Assigned Room Match via Boolean\n# =============================================================================\n# Checking unique valuables in each category\ndata_top10['reserved_room_type'].unique()\n# 'C' 'A' 'D' 'E' 'G' 'F' 'H' 'L' 'P' 'B'\n\ndata_top10['assigned_room_type'].unique()\n# 'C' 'A' 'D' 'E' 'G' 'F' 'I' 'B' 'H' 'P' 'L' 'K'\n\n# Extending lables in reserved_room_type for the boolean to work\ndata_top10['reserved_room_type'] = data_top10['reserved_room_type'].cat.set_categories(['C', 'A', 'D', 'E', 'G', 'F', 'I', 'B', 'H', 'P', 'L', 'K'])\n\n# checking which reservations were assigned a different room type\ndata_top10['data_boolean'] = data_top10['reserved_room_type'] == data_top10['assigned_room_type']\n\n\n\n","3ea553ae":"#checking the boolean worked\nprint(data_top10['data_boolean'])\n","ff6faf92":"# Counting boolean\ndata_top10.data_boolean.value_counts()\n#True     88010\n#False    12790\n#Name: data_boolean, dtype: int64","0c15b0eb":"fig = plt.figure(figsize = (20,10))\nlabels = data_top10['data_boolean'].value_counts().index.tolist()\nsizes = data_top10['data_boolean'].value_counts().tolist()\nplt.pie(sizes, labels = labels, autopct = '%1.1f%%',\n        shadow = False, startangle =30)\nplt.title('Matching the Reserved Room and Assigned Room', fontdict = None, position= [0.48,1], size = 'xx-large')\nplt.show()\n# True: 87.3%\n# False: 12.7%","9aeaa509":"#Creating a graph for the boolean\nboolean_countries = data_top10.groupby(['country','data_boolean']).lead_time.count()","08184636":"#print table \nprint(boolean_countries)\n","666e7a19":"# draw a graph\nplt.figure(figsize = (12, 8))\nsns.barplot(x = 'country', y = 'lead_time', hue = 'data_boolean', data = boolean_countries.reset_index(), palette = ['red', 'green'])\nplt.title('Matching Expectations and Reality by Country', fontsize = 14)\nplt.ylabel('count', fontsize = 14)\nplt.xlabel('Top 10 Countries', fontsize = 14)\nL=plt.legend()\nL.get_texts()[0].set_text('Mismatch')\nL.get_texts()[1].set_text('Match')\nprint('This graph examines whether the reserved room and assigned room matched.')","97ba95f2":"Portuguese nationals make the greatest number of reservations. Unfortunately, it the number of cancelations is greater than the number of people checking-out for the Portuguese. ","b56fa6e7":"Portuguese reservations make up 70% of all cancelations, while the other 9 nationalities make up the other 30% of cancelations in Top 10 Countries. ","88d32c72":"Don\u2019t these people want to go on a holiday?\n","9aef94d5":"Although we have created a top 10 countries sub-set, the labels remained. So the labels were changed to include only the countries in the list. ","adc77824":"The Top 10 countries were filtered from the data, the breakdown that Portuguese makes up nearly half of the data. British and French tourists share less than an eighth each. The rest of the countries are less than 10% each. ","6d4d2b1f":"Graphs shows that the most popular nationality of the visitors is Portuguese. However, there is a big drop to the second most popular nationality. The bars slowly decrease after the second most popular nationality.  Reservations from Portugal came to 48590, while reservation from Norway were 607.","547857cc":"Graph shows that there is just a small difference in price between countries. Although, in a previous graph, we saw that there were more cancelations and no-shows for Portuguese nationals.","29d7bdc0":"The prices reflect the most popular trend. The late spring and summer months  are some of the most expensive months.","4b99ff85":"**Data Preparation**\n\nDue to the large amount of countries (178) and the numbers of reservations for those countries were tiny, it was decided to investigate data in Top 10 countries. Each country in the data was split from the data and the merged using the \u2018concat\u2019 function in Python. \n","57ae6cb5":"**Analysis Prep**\n\nThere were three individual columns for 'adults', 'children', 'babies'. Total number of guests was calculated by adding the three columns together.","aa18711a":"**Exploratory Questions**\n\nThe following are the questions that will be answered\n* Most popular months and years\n* Number of guests per reservation\n* Number of nights per reservation\n* Nationality of guests\n* Price of a room per person per night\n* Number of cancellations based on nationalities and meal types\n* Nationalities with the greatest number of reservations \n* Month and Year with the highest number of cancelation","a519d6d3":"**Data Preparation**\nThere were two individual columns for 'stays_in_weekend_nights' and 'stays_in_week_nights'. Total number of nights was calculated by adding the two columns together.\n","ef5701bc":"**Dataset**\n\nThis dataset was collected by two hotels. Both hotels are located in Portugal.  The dataset has 31 variables with 40,060 observations for resort hotel in Algarve and 79,330 observations of city hotel in Lisbon. The dataset was collected between 1st of July 2015 and 31st August 2017. \n\nThe following are column names:\n'hotel', 'is_canceled', 'lead_time', 'arrival_date_year', 'arrival_date_month', 'arrival_date_week_number', 'arrival_date_day_of_month', 'stays_in_weekend_nights', 'stays_in_week_nights', 'adults', 'children', 'babies', 'meal', 'country', 'market_segment', 'distribution_channel', 'is_repeated_guest', 'previous_cancellations', 'previous_bookings_not_canceled', 'reserved_room_type', 'assigned_room_type', 'booking_changes', 'deposit_type', 'agent', 'company', 'days_in_waiting_list', 'customer_type', 'adr', 'required_car_parking_spaces'","d227e6e1":"**Data Preparation**\nThere are two columns in the data called 'reserved_room_type' and 'assigned_room_type'. A boolean column was created with \u2018False\u2019 and \u2018True\u2019, meaning that the reserved room matched the assigned room. \u2018False\u2019 meant that the assigned room (Reality) did not \u2018match\u2019 the reserved room (Expectations). \n","11497e94":"This graph shows trend reservations by month and year. There is a high number of reservations every year during spring and summer. As expected, there are reservations decrease in winder months every year. Furthermore, there has been a greater number of reservations every year."}}