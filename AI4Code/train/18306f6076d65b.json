{"cell_type":{"1313ff64":"code","1a909249":"code","41a8935f":"code","2c938c30":"code","ee38524e":"code","87b636a4":"code","b2ffa39b":"code","ae06a185":"code","d134edbe":"code","03753874":"code","ecc1a9e3":"code","0d580bd6":"code","e8318df1":"code","e2a7e0a2":"code","d6f2e9b0":"code","93d8fd36":"code","531fa92d":"code","333f559a":"code","f80380a5":"code","3e36ea13":"code","dade28bc":"code","594c19a5":"code","7aa89651":"markdown","208f1ab8":"markdown","f36a1b26":"markdown","afd8e2e9":"markdown","f632bdf7":"markdown","735f0ed0":"markdown","ecaef2ed":"markdown","fed30571":"markdown","428c4bc6":"markdown"},"source":{"1313ff64":"# linear algebra\nimport numpy as np\n# data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd\n#Unix commands\nimport os\n\n# import useful tools\nfrom glob import glob\nfrom PIL import Image\nimport cv2\nimport pydicom\nimport scipy.ndimage\nfrom skimage import measure \nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nfrom skimage.morphology import disk, opening, closing\nfrom tqdm import tqdm\nfrom os import listdir, mkdir\n\nfrom IPython.display import HTML\nfrom PIL import Image\n\n# import data visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nimport seaborn as sns\nimport plotly.express as px\nfrom random import randint\n\nfrom bokeh.plotting import figure\nfrom bokeh.io import output_notebook, show, output_file\nfrom bokeh.models import ColumnDataSource, HoverTool, Panel\nfrom bokeh.models.widgets import Tabs\n\n# import data augmentation\nimport albumentations as albu\n\n# import math module\nimport math\n\n#Libraries\nimport pandas_profiling\nimport xgboost as xgb\nfrom sklearn.metrics import log_loss\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nfrom sklearn.tree import DecisionTreeRegressor\n\n#used for changing color of text in print statement\nfrom colorama import Fore, Back, Style\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA\nsr_ = Style.RESET_ALL\n\n# One-hot encoding\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor","1a909249":"# Setup the paths to train and test images\nDATASET = '..\/input\/competitive-data-science-predict-future-sales'\nTEST_PATH = '..\/input\/competitive-data-science-predict-future-sales\/test.csv'\nTRAIN_PATH = '..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv'\nITEM_PATH = '..\/input\/competitive-data-science-predict-future-sales\/items.csv'\nCATEGORY_PATH = '..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv'\nSHOP_PATH = '..\/input\/competitive-data-science-predict-future-sales\/shops.csv'","41a8935f":"# Loading training data and test data\ntest = pd.read_csv(TEST_PATH)\ntrain = pd.read_csv(TRAIN_PATH)","2c938c30":"# Loading training data and test data\ntest = pd.read_csv(TEST_PATH)\ntrain = pd.read_csv(TRAIN_PATH)\nitem = pd.read_csv(ITEM_PATH)\ncategory = pd.read_csv(CATEGORY_PATH)\nshop = pd.read_csv(SHOP_PATH)","ee38524e":"df = pd.concat([train, test])","87b636a4":"#Loading Sample Files for Submission\nsample = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\n# Confirmation of the format of samples for submission\nsample.head(3).style.applymap(lambda x: 'background-color:lightsteelblue')","b2ffa39b":"print('Number of rows in test set: ', test.shape[0])\nprint('Number of columns in test set: ', test.shape[1])","ae06a185":"train.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","d134edbe":"print(train['date_block_num'].max())","03753874":"print(train['item_cnt_day'].describe())","ecc1a9e3":"test.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","0d580bd6":"item.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","e8318df1":"category.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","e2a7e0a2":"print(f\"{b_}Number of rows in train data: {g_}{train.shape[0]}\\n{b_}Number of columns in train data: {g_}{train.shape[1]}\")","d6f2e9b0":"# Check for missing values in the training features data\ntrain.isnull().sum()","93d8fd36":"df.info()","531fa92d":"# Check age-related statistics in the Training data\ntrain.describe().style.applymap(lambda x: 'background-color:yellow')","333f559a":"# Check age-related statistics in the test data\ntest.describe().style.applymap(lambda x: 'background-color:lightgreen')","f80380a5":"# coding: utf-8\nfrom tqdm import tqdm\nimport time\n\n# Set the total value \nbar = tqdm(total = 1000)\n# Add description\nbar.set_description('Progress rate')\nfor i in range(100):\n    # Set the progress\n    bar.update(25)\n    time.sleep(1)","3e36ea13":"train.groupby( ['shop_id','item_id'] ).agg( ['mean','std','count'] )","dade28bc":"# number of items per cat \nx=item.groupby(['item_category_id']).count()\nx=x.sort_values(by='item_id',ascending=False)\nx=x.iloc[0:10].reset_index()\nx\n# plot a graph\nplt.figure(figsize=(8,4))\nax= sns.barplot(x.item_category_id, x.item_id, alpha=0.8)\nplt.title(\"Items per Category\")\nplt.ylabel('Items', fontsize=18)\nplt.xlabel('Category', fontsize=18)\nplt.show()","594c19a5":"# Data Definitions\nx = train['date_block_num']\ny = train['item_price']\n\n# Title of the chart\nplt.title('Price transitions over months', fontsize=20)\n\n# Drawing a Graph\nplt.plot(x, y)\nplt.show()","7aa89651":"# Checking data","208f1ab8":"* Therefore, we can conclude that there is no missing training data","f36a1b26":"* Date_block_num means that a consecutive month number which is used for convenience. For example, January 2013 is 0, February 2013 is 1,..., October 2015 is 33.","afd8e2e9":"# Set Up","f632bdf7":"# Acknowledgements","735f0ed0":"* [Time series Basics : Exploring traditional TS](https:\/\/www.kaggle.com\/jagangupta\/time-series-basics-exploring-traditional-ts)\n* [Model stacking, feature engineering and EDA](https:\/\/www.kaggle.com\/dimitreoliveira\/model-stacking-feature-engineering-and-eda)\n* [Future Sales Prediction: playground](https:\/\/www.kaggle.com\/plasticgrammer\/future-sales-prediction-playground)","ecaef2ed":"# Data Visualization","fed30571":"* Item_cnt_day means that number of products sold. this is used to predict a monthly amount of this measure.","428c4bc6":"# Loading data"}}