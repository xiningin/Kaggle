{"cell_type":{"ef397e73":"code","806c1569":"code","6bb75aa5":"code","80c65be9":"code","414abceb":"code","0175b8ef":"code","60b4b535":"code","9ff89f89":"code","6fb2945f":"code","bb18bb1a":"code","07a1f543":"code","e23eddab":"code","90e6c206":"code","9b91c4cc":"code","31efb3e3":"markdown","d95f117f":"markdown","8f74bb38":"markdown","3c5f96c3":"markdown","4fcfc103":"markdown","78b41efb":"markdown","326cf3ce":"markdown","485a56bf":"markdown","f5b914fd":"markdown","58010a2a":"markdown"},"source":{"ef397e73":"import pandas as pd\nimport numpy as np\nimport nltk \nimport re\nfrom pandas_profiling import ProfileReport\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport sklearn.metrics\nimport sklearn\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","806c1569":"data=pd.read_csv(\"..\/input\/source-based-news-classification\/news_articles.csv\")\nprint(data.shape)\ndata.head()","6bb75aa5":"!pip install autoviml","80c65be9":"from autoviml.Auto_ViML import Auto_ViML","414abceb":"print(data.shape)\ndata.drop([ 'title_without_stopwords','text_without_stopwords'], axis=1,inplace=True)\ndata['NLP_column'] = data['title']+'  '+ (data['text']) + \"  \"+ data['main_img_url']\ndata.drop([ 'title','text', 'main_img_url'], axis=1,inplace=True)\nprint(data.shape)","0175b8ef":"data.head(1)","60b4b535":"### There is one NaN value in label column => so let's drop that single row!!\n### Holy cow! there was ~50 rows with NaN = though AutoViML can handle NaN rows, \n###  we will delete them here to make the comparison apples to apples with previous noteboonk\nprint(data.shape)\ndata=data.dropna()\nprint(data.shape)","9ff89f89":"from sklearn.model_selection import train_test_split\n\ntrain, test = train_test_split(data, test_size=0.2, random_state = 42)\n\nprint(len(train), len(test))","6fb2945f":"target = 'label'","bb18bb1a":"m, feats, trainm, testm = Auto_ViML(train, target, test,\n                            sample_submission='',\n                            scoring_parameter='', KMeans_Featurizer=False,\n                            hyper_param='RS',feature_reduction=True,\n                             Boosting_Flag='CatBoost', Binning_Flag=False,\n                            Add_Poly=0, Stacking_Flag=False,Imbalanced_Flag=False,\n                            verbose=1)","07a1f543":"from sklearn.metrics import classification_report, confusion_matrix","e23eddab":"y_true = test[target].values\ny_pred = testm[target+'_predictions'].values\nprint(y_true.shape, y_pred.shape)","90e6c206":"print(classification_report(y_true, y_pred))","9b91c4cc":"confusion_matrix(y_true, y_pred)","31efb3e3":"# Now let us run Auto_ViML (including Auto_NLP on train and test). This may take about 10 mins to run","d95f117f":"# Evaluating Auto_ViML on unseen test data","8f74bb38":"# Auto_ViML scores a 100 on Unseen Test data!","3c5f96c3":"So Auto_VIML has generalized well and performed well on Unseen (test) data as well","4fcfc103":"# We are going to use Auto_NLP to see if we can get a better score using automated ML techniques vs. manual tuning as we saw in the above notebook.\nAuto_NLP can be found here: https:\/\/github.com\/AutoViML\/Auto_ViML","78b41efb":"# Since the data set above has both Text and Tabular data, we are going to use Auto_ViML which has Auto_NLP built-in so that it can find the best model and the best NLP technique for this complex data set.","326cf3ce":"Wow that was a 100% accuracy on validation data! Now let's see how well Auto_ViML performs on unseen test data","485a56bf":"# We'll split the dataset into two the same way as above notebook so we can see whether the AutoML library can generalize well on unseen data (test) just as manual training did.","f5b914fd":"# This notebook is derived from the notebook below by Priyanka Sachdeva. Many thanks.\nhttps:\/\/www.kaggle.com\/priyankasachdeva20\/autoviz-fake-news-classifier-6-ml-models","58010a2a":"# Since there are duplicate columns such as title and title_without_stopwords, etc.,we will remove duplicates and combine all text columns into one column called \"NLP_column\" to make Auto_ViML processing easier."}}