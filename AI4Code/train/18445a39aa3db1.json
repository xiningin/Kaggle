{"cell_type":{"4c8f12e6":"code","0c1b691c":"code","9cead777":"code","8410c535":"code","6a4a9997":"code","c73a72bd":"code","ac2839b2":"markdown","613a40e0":"markdown","61810171":"markdown","fc194e04":"markdown","e0eed5c6":"markdown"},"source":{"4c8f12e6":"import pandas as pd\nimport numpy as np\n\n# Load data\ntrain = pd.read_csv('..\/input\/cat-in-the-dat\/train.csv')\ntest = pd.read_csv('..\/input\/cat-in-the-dat\/test.csv')\n\ntarget = train['target']\ntrain_id = train['id']\ntest_id = test['id']\ntrain.drop(['target', 'id'], axis=1, inplace=True)\ntest.drop('id', axis=1, inplace=True)\n\nprint(train.shape)\nprint(test.shape)","0c1b691c":"%%time\n\n# STEP 1\ntraintest = pd.concat([train, test])\ndummies = pd.get_dummies(traintest, columns=traintest.columns, drop_first=True, sparse=True)\ntrain_ohe = dummies.iloc[:train.shape[0], :]\ntest_ohe = dummies.iloc[train.shape[0]:, :]\n\nprint(train_ohe.shape)\nprint(test_ohe.shape)","9cead777":"%%time\n\n# STEP 2\ntrain_ohe = train_ohe.sparse.to_coo().tocsr()\ntest_ohe = test_ohe.sparse.to_coo().tocsr()","8410c535":"%%time\n\n# STEP 1.1\ntraintest = pd.concat([train, test])\ndummies = pd.get_dummies(traintest, columns=traintest.columns, drop_first=True, sparse=True)\n\nprint(dummies.shape)","6a4a9997":"%%time\n\n# STEP 1.2\ntrain_ohe = dummies.iloc[:train.shape[0], :]\ntest_ohe = dummies.iloc[train.shape[0]:, :]\n\nprint(train_ohe.shape)\nprint(test_ohe.shape)","c73a72bd":"%%time\n\ntraintest = pd.concat([train, test])\ndummies = pd.get_dummies(traintest, columns=traintest.columns, drop_first=True, sparse=True)\n\ndummies_csr = dummies.sparse.to_coo().tocsr()\n\ntrain_ohe = dummies_csr[:train.shape[0], :]\ntest_ohe = dummies_csr[train.shape[0]:, :]\n\nprint(train_ohe.shape)\nprint(test_ohe.shape)","ac2839b2":"Result is less then *20s*.\n\nSo we reduced time of running preparation data step more than **4 minutes**.\n\nIn my opinion it's not bad :)","613a40e0":"So we can see that splitting data using *iloc* takes about *4min*.\n\nWhat if we cast *dummies* to cst matrix first? Before splitting on *train* and *test* data?","61810171":"**STEP 1** duration time is about *4min*.\n\n**STEP 2** duration time is about *4s*.\n\nLet's split **STEP 1** to find part which lasts longer.","fc194e04":"I have used [Why Not Logistic Regression](https:\/\/www.kaggle.com\/peterhurford\/why-not-logistic-regression) for experiments with One Hoc Encoding and LogisticRegression model. If you used this notebook you can noticed that step with encoding takes more than 4 minutes. It's too long to play around with features and re-calculate data. So I found way to reduce encoding step time.","e0eed5c6":"The both **STEP 1** and **STEP 2** are an original code from [Why Not Logistic Regression](https:\/\/www.kaggle.com\/peterhurford\/why-not-logistic-regression)."}}