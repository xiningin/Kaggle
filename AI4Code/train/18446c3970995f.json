{"cell_type":{"758c339e":"code","9adc7f49":"code","e6058082":"code","5472bf2c":"code","5935f435":"code","0bf813e7":"code","c41ee957":"code","df1caa23":"code","848ffd63":"code","dfe72021":"code","34479703":"code","17b844ea":"code","107269a7":"code","d17e4cdf":"code","a9bc818e":"code","52c9a06c":"code","a8285507":"code","46d1e19b":"code","cead388a":"code","9a1e0c10":"code","de2096a2":"code","69d2de31":"code","68136988":"code","fd9d98bc":"code","1cc3f0ca":"code","d5389ec1":"code","9a7675f0":"code","e48dc5c6":"code","58d5e2fc":"code","14262106":"code","cf2e72ff":"code","d71298c8":"code","d2769f96":"code","3be70b77":"code","faef24c9":"code","35b8cc18":"code","52cfd027":"code","edf65619":"code","f9935d59":"code","716d7859":"code","2fcb9cc7":"code","bd84a292":"code","4cc805d1":"code","765e69b1":"code","3499eae8":"code","f12674ac":"code","8df7a81b":"code","b105a40e":"code","308c0d4f":"code","af2dda49":"code","1fedab8a":"code","f500b095":"code","c2382e0d":"code","d4d689f7":"code","8adc51e9":"code","787f78d5":"code","087b173f":"code","e668ed5b":"code","e6681834":"code","f30d04ee":"code","59ed5d30":"code","eaf06012":"code","671a9816":"code","544f9f91":"code","462f1fd5":"code","f3972dfb":"markdown","62aba318":"markdown","b2fa0c7f":"markdown","462784bb":"markdown","ab5fbb73":"markdown","b5974d17":"markdown","fcc33eae":"markdown","9c1befac":"markdown","25f030f3":"markdown","5852cab5":"markdown","ac7d4f51":"markdown","d89507b5":"markdown","d8fa2660":"markdown","440f4d75":"markdown","ee641980":"markdown","b0b9604a":"markdown","ac8be8c0":"markdown","b131522a":"markdown"},"source":{"758c339e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9adc7f49":"# importing the libraries\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\n%matplotlib inline\nmatplotlib.rcParams['figure.figsize']=(12,8)\n","e6058082":"df = pd.read_csv(\"\/kaggle\/input\/movies\/movies.csv\")\ndf","5472bf2c":"# displaying the top 5 rows\ndf.head()","5935f435":"# Finding the missing values\ndf.isnull().sum()","0bf813e7":"# Checking the data types of each columns in the data\ndf.dtypes","c41ee957":"df['budget']=df['budget'].astype('int64')\n\ndf['gross'] = df['gross'].astype('int64')","df1caa23":"df","848ffd63":"# creating correct year column\n\ndf['yearcorrect'] = df['released'].astype(str).str[:4]\ndf","dfe72021":"# changing the data type of 'yearcorrected' to int\ndf['yearcorrect'] = df['yearcorrect'].astype('int64')\ndf.dtypes","34479703":"df = df.sort_values(by=['gross'],ascending=False)\ndf.head()","17b844ea":"df.drop_duplicates(inplace=True)","107269a7":"df.head()","d17e4cdf":"# budeget vs gross\nfigure = plt.figure(figsize=(15,5))\nplt.scatter(x=df['budget'],y=df['gross'],color='red')\nplt.title(\"Budget vs Gross\",size=30)\nplt.xlabel(\"Budget\",size=20)\nplt.ylabel(\"Gross\",size=20)\nplt.show()","a9bc818e":"df.head()","52c9a06c":"sns.regplot(x='budget',y='gross',data=df,scatter_kws={\"color\":\"red\"},line_kws={\"color\":\"green\"})","a8285507":"# correlations\ndf.corr()","46d1e19b":"corr_mat = df.corr()\nsns.heatmap(corr_mat,annot=True)\nplt.title(\"Correlations\",size=30)\nplt.xlabel(\"Features\")\nplt.ylabel(\"Features\")\nplt.show()","cead388a":"df.head()","9a1e0c10":"## Changing the categorical features into categories and replacing with an integer values for distinct category\ndf_num = df.copy()\nfor col in df_num.columns:\n    if(df_num[col].dtype == 'object'):\n        df_num[col] = df_num[col].astype('category')\n        df_num[col] = df_num[col].cat.codes\n\ndf_num.head()","de2096a2":"df.head()","69d2de31":"corr_mat = df_num.corr()\nsns.heatmap(corr_mat,annot=True)\nplt.title(\"Correlations\",size=30)\nplt.xlabel(\"Features\")\nplt.ylabel(\"Features\")\nplt.show()","68136988":"cor_matrix = df_num.corr()\ncorr_pairs=cor_matrix.unstack()\ncorr_pairs","fd9d98bc":"pd.set_option(\"display.max_rows\",None)","1cc3f0ca":"sorted_pairs = corr_pairs.sort_values()\nsorted_pairs","d5389ec1":"sorted_pairs[sorted_pairs>0.5]","9a7675f0":"df.head()","e48dc5c6":"com = df.groupby(['name','company'])['budget','gross'].sum().sort_values(by='gross',ascending=False)\ncom.head(10)","58d5e2fc":"com=com.reset_index()\ncom.to_csv(\"Name and company with budget and gross.csv\",index=False)\ncom","14262106":"top10com=com.head(10)\ntop10com","cf2e72ff":"top10com.plot(x='name',y=['budget','gross'],kind='bar',figsize=(12,5))\nplt.title(\"Movies with Budget and gross\",size=30)\nplt.xlabel(\"Movies\",size=15)\nplt.ylabel(\"Amount\",size=15)\nplt.show()","d71298c8":"com = df.groupby(['company'])['budget','gross'].sum().sort_values(by='gross',ascending=False)\ncom.head(10)","d2769f96":"top10c = com.reset_index()\ntop10c.head()","3be70b77":"top10c.to_csv('Companies with highest budget and gross.csv',index=False)","faef24c9":"top10c = top10c.head()\ntop10c","35b8cc18":"top10c.plot(x='company',y=['budget','gross'],kind='bar',figsize=(12,5))\nplt.title(\"Companies with Budget and gross\",size=30)\nplt.xlabel(\"Companies\",size=15)\nplt.ylabel(\"Amount\",size=15)\nplt.show()","52cfd027":"df.head()","edf65619":"country_counts=df['country'].value_counts()\ncountry_counts=country_counts.to_frame()\ncountry_counts=country_counts.reset_index()","f9935d59":"country_counts.rename(columns={'index':'country','country':'count'},inplace=True)","716d7859":"country_counts.to_csv(\"Count of country.csv\",index=False)","2fcb9cc7":"top10country=top10country.to_frame()\ntop10country=top10country.reset_index()\n","bd84a292":"top10country","4cc805d1":"top10country.rename(columns={'index':'country','country':'No. of flims'},inplace=True)\ntop10country","765e69b1":"fig = plt.figure(figsize=(12,8))\nplt.pie(top10country['No. of flims'],labels=top10country['country'])\nplt.title(\"Country with highest releases\",size=30)\nplt.show()","3499eae8":"bgcountry=df.groupby(['country'])['budget','gross'].sum().sort_values(by=['gross'],ascending=False)\nbgcountry","f12674ac":"bgcountry.reset_index(inplace=True)","8df7a81b":"bgcountry.to_csv(\"country and their budget and gross.csv\",index=False)","b105a40e":"top10bgcountry = bgcountry.head(10)\ntop10bgcountry.reset_index(inplace=True)","308c0d4f":"top10bgcountry.to_csv(\"Country wise gross and budget.csv\",index=False)\ntop10bgcountry","af2dda49":"plt.plot(top10bgcountry['country'],top10bgcountry['budget'],top10bgcountry['country'],top10bgcountry['gross'])\nplt.title(\"Country with Budget and gross\",size=30)\nplt.xlabel(\"Country\",size=15)\nplt.ylabel(\"Amount\",size=15)\nplt.legend()\nplt.show()","1fedab8a":"df.head()","f500b095":"genre_gross=df.groupby(['genre'])['gross'].sum()\ngenre_gross=genre_gross.to_frame()\ngenre_gross.reset_index(inplace=True)","c2382e0d":"genre_gross.to_csv(\"Genre vs gross.csv\",index=False)\ngenre_gross","d4d689f7":"fig = plt.figure(figsize=(18,8))\nplt.bar(genre_gross['genre'],genre_gross['gross'])\nplt.title(\"Genre vs Gross\",size=30)\nplt.xlabel(\"Genres\",size=15)\nplt.ylabel(\"Amount\",size=15)\nplt.show()","8adc51e9":"sns.pairplot(df,diag_kind='hist')","787f78d5":"for col in df.columns:\n    if df[col].dtype !=\"object\":\n        sns.distplot(df[col],bins=20)\n        plt.show()","087b173f":"df.head()","e668ed5b":"df[df['votes']==df['votes'].max()]","e6681834":"df[df['votes']==df['votes'].max()].name\n","f30d04ee":"lst = []\nlen(df['director'].unique())\ndf['budget'].sum()","59ed5d30":"lst=({'No. of directors':len(df['director'].unique()),\n      'No. of movies':len(df['name'].unique()),\n      'Total budget':df['budget'].sum(),\n      'Total gross':df['gross'].sum(),\n      'Movie with higest votes':'The Shawshank Redemption'})\n    \n","eaf06012":"lst","671a9816":"header=pd.DataFrame(lst,index={'0'})","544f9f91":"header.reset_index()","462f1fd5":"header.to_csv(\"Header.csv\",index=False)","f3972dfb":"If we check the values in column \"Budget\" and \"Gross\" we can see that it is in \"float\" datatypes but there is no digits after the decimals, so we change the data type from \"float\" to \"int\"","62aba318":"Viewing the top 5 movies with highest gross by Sorting the values by \"Gross\" column","b2fa0c7f":"There is high correlation with budget and gross","462784bb":"### Coutries with respective of Budgets and gross","ab5fbb73":"Checking for duplicates","b5974d17":"Budget and Gross are positively correlated","fcc33eae":"## Columns with high correlatinos","9c1befac":"## Data cleaning","25f030f3":"Now we have changed the categorical values to an individual categories with integer values","5852cab5":"The year has incorrect values while we compare it with the released date column","ac7d4f51":"## Exploratory Data Analysis","d89507b5":"### Company","d8fa2660":"### Genres vs gross","440f4d75":"### Counts dataframe","ee641980":"Reading the data","b0b9604a":"Votes and Budgets has the higest correlations for the gross and company has low correlations","ac8be8c0":"Clearly, There is no missing values in the data","b131522a":"## EDA and finding correaltions"}}