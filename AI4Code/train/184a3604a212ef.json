{"cell_type":{"8029d82a":"code","823e8c1a":"code","7111b883":"code","b73ddb74":"code","49c980e6":"code","f75848f8":"code","ecca5eca":"code","66e6ed54":"code","50ef306f":"code","311e650e":"code","1f6e5728":"code","f594a904":"code","2d51b8c0":"code","206f2be5":"code","3aed175f":"code","49339fc4":"code","d3bc1a49":"code","14b3c02c":"code","d7829ced":"code","6aa735f3":"code","ae1c9a71":"code","edbc30e4":"code","42f3f582":"code","d9974ba6":"code","1dc6fe33":"code","0bf325d2":"code","c62d80a0":"code","4202174f":"code","dd7c53ab":"code","1f0159ad":"code","51ec3771":"code","dac3d005":"code","ce0f6d92":"code","e7faa5e2":"code","5e4554c2":"code","c2383953":"code","8cf1574f":"code","ed581142":"code","e7acaff5":"code","a8025f25":"markdown","4aedef44":"markdown","62022aca":"markdown","0603f2e8":"markdown","555ce6e2":"markdown","894a3c4d":"markdown"},"source":{"8029d82a":"# Import all necessary modules\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","823e8c1a":"# import the data\ndf = pd.read_csv('..\/input\/fifa19\/data.csv')\ndf.head()","7111b883":"# drop the 'unnamed' column\ndf.drop(columns='Unnamed: 0', axis=1, inplace=True)","b73ddb74":"df.head()","49c980e6":"# get details about the data\ndf.describe()","f75848f8":"# get the shape of the data\ndf.shape","ecca5eca":"# check if there are missing values\nmissing = df.isnull().sum()\nprint(missing.sum())\nmissing[:]","66e6ed54":"# Get the locations where we have missing data\ndf.loc[:, df.isnull().any()].columns","50ef306f":"# First the percentage of our data is missing\n(missing.sum() \/ df.size) * 100","311e650e":"# If a player's club data is missing, it's either they do not have a club or they are free agents so let's make\n# them all free agents\ndf['Club'].replace(np.NaN, 'Free Agent', inplace=True)","1f6e5728":"# Loaned from is also having missing values but we don't need the column so we can drop it\ndf.drop(columns=['Loaned From'], inplace=True)","f594a904":"# Fill null release clause values with zero\ndf['Release Clause'].fillna(0, inplace=True)","2d51b8c0":"df[df['Club']== 'Free Agent'].head()","206f2be5":"# now we have less data missing\ndf.isnull().sum().sum()","3aed175f":"# let's drop some columns that we don't need, first let's view the columns\ndf.columns","49339fc4":"df.drop(columns=['Club Logo','Real Face','Skill Moves','LS','ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW',\n       'LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM',\n       'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB'], inplace=True)","d3bc1a49":"df.isnull().sum().sum()","14b3c02c":"# Check for duplicated data using name and club\ndf.duplicated(subset=['Name','Club'])","d7829ced":"df.loc[18202]","6aa735f3":"# Drop duplicate data\ndf.drop_duplicates(subset=['Name','Club'], inplace=True)","ae1c9a71":"df.shape","edbc30e4":"# Drop rows\/players with no position\ndf.dropna(subset=['Position'], inplace=True)","42f3f582":"# Convert values to float\ndef value_to_float(x):\n    if type(x) == float or type(x) == int:\n        return x\n    if 'K' in x:\n        if len(x) > 1:\n            return float(x.replace('K', '')) * 1000\n        return 1000.0\n    if 'M' in x:\n        if len(x) > 1:\n            return float(x.replace('M', '')) * 1000000\n        return 1000000.0\n    if 'B' in x:\n        return float(x.replace('B', '')) * 1000000000\n    return 0.0","d9974ba6":"df['Wage'] = df['Wage'].replace(['\\\u20ac'], '', regex=True).apply(value_to_float)\ndf['Value'] = df['Value'].replace(['\\\u20ac'], '', regex=True).apply(value_to_float)\ndf['Release Clause'] = df['Release Clause'].replace(['\\\u20ac'], '', regex=True).apply(value_to_float)","1dc6fe33":"# starting with GK position\ngk_position = df[df['Position'] == 'GK']\ngk_position.head()","0bf325d2":"# when we say best players, is 85 and above a good number to begin with? I think so\n\n# get all gk with overall ratings of 85 and above\ngk_position_85_above = gk_position[gk_position['Overall'] > 85]\ngk_position_85_above.head()","c62d80a0":"# let's get a plot of their data\nfig, ax = plt.subplots(figsize=(10,8))\nscatterplot = ax.scatter(x=gk_position_85_above['Value'],\n                         y=gk_position_85_above['Overall'],\n                         c=gk_position_85_above['Age']\n                         )\nax.legend(*scatterplot.legend_elements(), title='ages');\nax.set(title='Best Goalkeepers in fifa19',\n       xlabel='Value (\u20ac)',\n       ylabel='Overall Rating');","4202174f":"# Let's make this plot more interactive\n!pip install bokeh","dd7c53ab":"\nimport bokeh as bk\nfrom bokeh.models import HoverTool\nfrom bokeh.plotting import figure, show\nfrom bokeh.io import output_notebook\n\n\noutput_notebook()\nHOVERTOOLTIPS = HoverTool(tooltips=[\n                                    ('Name', '@Name'),\n                                    ('Nationality', '@Nationality'),\n                                    ('Club', '@Club'),\n                                    ('Age', '@Age')\n                                   ]\n                          )\n\nplot = figure(title='Best Goalkeepers in fifa19',\n              x_axis_label='Value',\n              y_axis_label='Overall',\n              tools=[HOVERTOOLTIPS])\nplot.circle('Value', 'Overall', size=10, source=gk_position_85_above)\nshow(plot)","1f0159ad":"df.head()","51ec3771":"df['Position']","dac3d005":"# Defenders\nposition = df['Position'].unique()\n\n# groupby positions\ngk_pos = ['GK']\ndef_pos = ['CB','LCB','RCB','LWB', 'LB', 'RB', 'RWB']\nmid_pos = ['RCM','LCM','CAM','CDM','RM','LAM','RDM','RAM','CM','LM','LDM']\nwingers = ['LW','RW']\nfwd_pos = ['RF','LF','ST','RS','CF','LS']","ce0f6d92":"def_in_def_pos = df.loc[df['Position'].isin(def_pos)]\ndef_in_def_pos.head()","e7faa5e2":"def_in_def_pos['Position']","5e4554c2":"def_over_85 = def_in_def_pos[def_in_def_pos['Overall'] > 85]\ndef_over_85.head()","c2383953":"# Let's get a plot of their data\nfig, ax = plt.subplots(figsize=(10,8))\nscatter_plot = ax.scatter(x=def_over_85['Value'],\n                          y=def_over_85['Overall'],\n                          c=def_over_85['Age']);\nax.set(title='Best Defenders in FIFA 19',\n       xlabel='Value',\n       ylabel='Overall');\nax.legend(*scatter_plot.legend_elements(), title='age');\n","8cf1574f":"# Standard practice, DRY\ndef best_overall_by_pos(position,benchmark=85):    \n#     put the positions in a dict\n    pos_dict = {\n        'goalkeepers':gk_pos,\n        'defenders':def_pos,\n        'midfielders':mid_pos,\n        'forwards':fwd_pos,\n        'wingers':wingers\n    }\n    \n#     get the players positions\n    players = df[df['Position'].isin(pos_dict.get(position))]\n\n#     overall best by benchmark\n    if benchmark >= 85:\n        best_players = players[players['Overall'] > benchmark]\n    else:\n        print('C\\'mon! That\\'s too low for top players')\n        return None\n    return best_players\n    \n#     plot the graph\ndef plot_graph(best_players):    \n    HOVERTOOLTIPS = HoverTool(tooltips=[\n                                    ('Name', '@Name'),\n                                    ('Nationality', '@Nationality'),\n                                    ('Club', '@Club'),\n                                    ('Age', '@Age')\n                                   ]\n                          )\n    title = best_players['Position'].all()\n    \n    plot = figure(title=f'Best {title} in fifa19',\n                  x_axis_label='Value',\n                  y_axis_label='Overall',\n                  tools=[HOVERTOOLTIPS])\n    plot.circle('Value', 'Overall', size=10, source=best_players)\n    show(plot)","ed581142":"df2 = best_overall_by_pos('midfielders',85)\ndf2.head(5)","e7acaff5":"plot_graph(df2)","a8025f25":"No duplicated data","4aedef44":"4.8% of our data is missing","62022aca":"1. Figure out the best players in overall ratings per position","0603f2e8":"## Tasks","555ce6e2":"we can see that we have 18207 rows, mean age = 25 etc","894a3c4d":"We have some data missing and what could be the cause of the missing data, were they not recorded or where they not available\n\nRelease Clause is an example of data not available because some players do not have release clauses.\nWe have players without clubs, without real face, without weak foot etc.\n\nso what do we do?\n\nWe can decide to fill them with zeros, ignore them, do some mean calculations or drop them"}}