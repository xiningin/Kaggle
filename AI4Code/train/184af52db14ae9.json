{"cell_type":{"0c281ec9":"code","3f484e79":"code","bc7b7e91":"code","ac49f6a9":"code","7e666ded":"code","124920be":"code","e8900637":"code","4ebc39ef":"code","694dd1ec":"code","5a269c90":"code","efbccaa6":"code","2149ca8c":"code","43a66db7":"code","d2169c1d":"code","9112122b":"code","f25e3e3a":"code","aebf1896":"code","28a9b74d":"code","39e30e69":"code","0c9b84a9":"code","e43ffabe":"code","26b2cee0":"code","475667d5":"code","54b36d16":"code","91deb238":"code","5d2f3ac0":"code","a08fed0a":"code","2d4cbef9":"code","76318d61":"code","523fe602":"markdown","b59d7453":"markdown","80d3c177":"markdown","8b108c0d":"markdown","44e5b4f5":"markdown","a4538aa2":"markdown","95769d96":"markdown","6632c8a8":"markdown","24274dae":"markdown"},"source":{"0c281ec9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3f484e79":"import warnings\nwarnings.filterwarnings('ignore')","bc7b7e91":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px","ac49f6a9":"df=pd.read_csv('\/kaggle\/input\/loan-default-dataset\/Loan_Default.csv')","7e666ded":"df.head()","124920be":"df.info()","e8900637":"!pip install autoviz","4ebc39ef":"from autoviz.AutoViz_Class import AutoViz_Class","694dd1ec":"%matplotlib inline","5a269c90":"AV = AutoViz_Class()","efbccaa6":"url1 = '..\/input\/loan-default-dataset\/Loan_Default.csv'\ndf_viz = pd.read_csv(url1,index_col=None,thousands=',')\nprint(df_viz.shape)\ndf_viz.head()","2149ca8c":"target='Status'","43a66db7":"dft = AV.AutoViz(depVar=target,dfte=df_viz, header=0, verbose=0,\n                lowess=False,chart_format='svg',max_rows_analyzed=1500000,max_cols_analyzed=300,filename='', sep=',' )","d2169c1d":"df.groupby('Status')['rate_of_interest'].describe()","9112122b":"df.groupby('Status')['Interest_rate_spread'].describe()","f25e3e3a":"df.groupby('Status')['Upfront_charges'].describe()","aebf1896":"df.groupby('Status')['income'].describe()","28a9b74d":"df.groupby('Status')['property_value'].describe()","39e30e69":"df.groupby('Status')['LTV'].describe()","0c9b84a9":"df.groupby('Status')['dtir1'].describe()","e43ffabe":"df1=df.drop(['rate_of_interest',\n'Interest_rate_spread',\n'Upfront_charges',\n'income',\n'property_value',\n'LTV',\n'dtir1'],axis=1)","26b2cee0":"pip install pycaret --ignore-installed llvmlite numba","475667d5":"from pycaret.classification import *","54b36d16":"exp_clf = setup(df1, target = 'Status',silent=True,session_id=1)","91deb238":"compare_models()","5d2f3ac0":"lg=create_model('lightgbm')","a08fed0a":"plot_model(lg, plot = 'confusion_matrix') ","2d4cbef9":"plot_model(lg, plot='feature')","76318d61":"interpret_model(lg, plot='reason',observation=32)","523fe602":"# 1.Data importing and preprocessing","b59d7453":"# 3.Comparing the model by PyCaret","80d3c177":"First, I examined the features which seem to include a lot of NaN in 'Satus 1' and dropped them. They are\n* 'rate_of_interest'\n* 'Interest_rate_spread'\n* 'Upfront_charges'\n* 'income'\n* 'property_value'\n* 'LTV'\n* 'dtir1'","8b108c0d":"# At first, I tried the model with all the features and got accuracy 100%. But it does not seem to be correct, so I tried to find the reason...\n![image.png](attachment:d3154a2d-5677-49df-92ec-4a829501bcbf.png)","44e5b4f5":"# In this model, how we can find people who may default, 'Status 0',is very important. So this model may be useful although we may miss non default custmers as default....","a4538aa2":"# 2.Visualization by AutViz","95769d96":"# In some features, there are a lot of NaN.","6632c8a8":"# In this note book, I tried to make a prediction model by dropping some features. First, by visualization, I found thet there are a lot of NaN in 'Status 1' in some features and thought that it may cause accuracy 100%. So I checked some features which seem to include a lot of NaN in 'Status 1' and dropped them. As a result, I got it as follows.\n\n![image.png](attachment:02e10f8d-3870-4e9f-8c29-154d3cf2a9a2.png)","24274dae":"# It seems that there are a lot of NaN in 'Status 1' in some features."}}