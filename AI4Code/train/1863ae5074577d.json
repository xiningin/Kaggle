{"cell_type":{"af073b77":"code","b445dc35":"code","5715b3b4":"code","1632ebae":"code","88273b60":"code","1d062807":"code","40d59cb1":"code","a92811f9":"code","000d30db":"code","b793accc":"code","8f5aad14":"code","4d5b45ef":"code","c9847d12":"markdown","6f6308fa":"markdown","23151d3a":"markdown","608ac3d4":"markdown","c4f9da6b":"markdown","5644497d":"markdown","dd39b5ff":"markdown","cf1e294d":"markdown","f0f04e6f":"markdown","488af11f":"markdown","0fbe1c7a":"markdown","b9278d89":"markdown"},"source":{"af073b77":"from mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib.backends.backend_agg import FigureCanvas\nfrom matplotlib.figure import Figure\n\n# definindo o tamanho da figura\nfig = Figure(figsize=(7,7))\n\n# definindo qual canvas utilizar \ncanvas = FigureCanvas(fig)\n","b445dc35":"## leitura do csv para dataframe\ndf = pd.read_csv('..\/input\/911.csv', delimiter=',')","5715b3b4":"## conhecendo o dataset\ndf.info()","1632ebae":"### removendo coluna e que n\u00e3o server para nada.\ndel df[\"e\"]","88273b60":"### conhecendo dados Nulos\ndf.isnull().sum()","1d062807":"### convertendo pra date time a coluna timeStamp\ndf['timeStamp']=df['timeStamp'].apply(pd.to_datetime)\n### criando mais 3 colunas com hora mes e ano pra facilitar nas estatisticas\ndf['hour']=df['timeStamp'].dt.hour\ndf['month']=df['timeStamp'].dt.month\ndf['dayOfWeekNumber']=df['timeStamp'].dt.dayofweek\n### Mapeando o dayofweek em String\nDicdayofweek={0:'Mon', 1:'Tue', 2:'Wed', 3:'Thu', 4:'Fri' , 5:'Sat', 6:'Sun'}\ndf['dayOfWeekStr'] = df['timeStamp'].dt.dayofweek.map(Dicdayofweek)\n### Mapeando o Month em String\ndf['monthStr'] = df['timeStamp'].dt.strftime(\"%B\")\n### criando coluna Reason e Sub-Reason para ser utilizada nas estat\u00edsticas\n# Emergency Medical Services\ndf['reason'] = df['title'].str.split(':').str.get(0)\ndf['subReason'] = df['title'].str.split(':').str.get(1)\ndf.head()","40d59cb1":"#Criando DataFrame com a Classifica\u00e7\u00e3o das Vari\u00e1veis\nvariaveis = [[\"lat\", \"Num\u00e9rica Cont\u00ednua\"],[\"lng\", \"Num\u00e9rica Cont\u00ednua\"],[\"desc\", \"Categ\u00f3rica Nominal\"],[\"zip\", \"Num\u00e9rica Cont\u00ednua\"],[\"title\", \"Categ\u00f3rica Nominal\"]\n             ,[\"timeStamp\", \"Num\u00e9rica Cont\u00ednua\"],[\"twp\", \"Categ\u00f3rica Nominal\"],[\"addr\", \"Categ\u00f3rica Nominal\"],[\"Hour\", \"Num\u00e9rica Discreta\"],[\"Month\", \"Num\u00e9rica Discreta\"]\n             ,[\"dayOfWeekNumber\", \"Num\u00e9rica Discreta\"],[\"dayOfWeekStr\", \"Categ\u00f3rica Ordinal\"],[\"Reason\", \"Categ\u00f3rica Nominal\"],[\"Sub-Reason\", \"Categ\u00f3rica Nominal\"]\n             ,[\"monthStr\", \"Categ\u00f3rica Ordinal\"]]\nvariaveis = pd.DataFrame(variaveis, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nvariaveis","a92811f9":"categoriaRazoes =  df['reason'].value_counts()\nlabel = ['EMS','TRAFFIC','FIRE']\nexplode = (0.1, 0, 0)\nfig1, ax1 = plt.subplots()\nax1.pie(categoriaRazoes, explode=explode,labels = label, autopct='%1.1f%%',shadow=True, startangle=100)\n#categoriaRazoes.plot.pie(figsize=(10, 8),autopct='%1.1f%%', startangle=180,fontsize=14)\nplt.title('Chamados por Motivos')\nax1.axis('equal') \nplt.show()","000d30db":"top10TodasRazoes2 = df['subReason'].value_counts().nlargest(10)\ntop10TodasRazoes2.plot.bar(figsize=(10,5),title='Top 10 Chamadas Gerais')","b793accc":"cidadeRazoes=df.groupby(['reason']).twp.value_counts().nlargest(10).unstack()\ncidadeRazoes.plot.bar(figsize=(10,5)).legend(bbox_to_anchor=(1, 1),title='Cidades com mais chamadas')\n","8f5aad14":"###Histograma das Horas\nplt.style.use('ggplot')\nplt.figure(figsize=(10,5))\ndf['hour'].fillna(df['hour'].mean(), inplace=True) #preenchendo com a m\u00e9dia\nhistogram_hour = plt.hist(df['hour'], bins=8)\nplt.title('Histograma Horas')\nplt.show()\n###Histograma dos dias da semana\nplt.figure(figsize=(10,5))\ndf['dayOfWeekNumber'].fillna(df['dayOfWeekNumber'].mean(), inplace=True) #preenchendo com a m\u00e9dia\nhistogram_Week = plt.hist(df['dayOfWeekNumber'], bins=4)\nplt.title('Histograma Dias da Semana')\nplt.xticks(range(len(Dicdayofweek)),[Dicdayofweek[0],Dicdayofweek[1],Dicdayofweek[2],Dicdayofweek[3],Dicdayofweek[4],Dicdayofweek[5],Dicdayofweek[6]])\nplt.show()\n###Histograma dos Meses\nplt.figure(figsize=(10,5))\ndf['month'].fillna(df['month'].mean(), inplace=True) #preenchendo com a m\u00e9dia\nhistogram_mes = plt.hist(df['month'], bins=5)\nplt.title('Histograma Meses')\nplt.show()","4d5b45ef":"transito = df[df[\"reason\"]== \"Traffic\"].groupby(\"month\").size()\ntransito\ndf_transito= transito.reset_index()\ndf_transito.columns = ['Meses','Quantidade']\ndf_transito.plot(x='Meses',figsize=(10,5),grid = True,title=\"Varia\u00e7\u00e3o de chamadas de tr\u00e1fego por meses\" )","c9847d12":"### Analisando chamados de Tr\u00e1fego pelos meses","6f6308fa":"## Importando bibliotecas necess\u00e1rias\nAbordando o que nos foi apresentado at\u00e9 o presente momento no curso iremos interagir com o dataset utilizando  pandas, numpy, matplotlib entre outros.","23151d3a":"## Conclusion\nConclu\u00edmos que as ferramentas apresentadas em sala, como, pandas, matplotlib, entre outras, nos d\u00e3o uma ampla oportunidade de explorar os dados e mostrar graficamente informa\u00e7\u00f5es de um dataset, fazendo com que consigamos tirar conclus\u00f5es e podermos tra\u00e7ar alguns objetivos de acordo com as vari\u00e1veis que estamos trabalhando. Neste trabalho, fizemos a an\u00e1lise do dataset 911, onde demonstramos o relacionamento de algumas vari\u00e1veis e apresentamos alguns resultados graficamente.","608ac3d4":"### Quais municipios tem mais chamadas","c4f9da6b":"### Analisando as vari\u00e1veis pelo Histograma","5644497d":"### Propor\u00e7\u00e3o das raz\u00f5es","dd39b5ff":"## Introdu\u00e7\u00e3o\nEsta an\u00e1lise tem como o objetivo do nosso exerc\u00edcio referente \u00e0 aula 2 ser\u00e1 simular um processo de sele\u00e7\u00e3o de um cientista de dados.\nO Dataset selecionado pelo grupo \u00e9 o **911**.","cf1e294d":"### Resumo das vari\u00e1veis\n* lat: Vari\u00e1vel String, Latitude \n* lng: Vari\u00e1vel String, Longitude\n* desc: Vari\u00e1vel String, Descri\u00e7\u00e3o da Chamada de Emerg\u00eancia\n* zip: Vari\u00e1vel String, CEP\n* t\u00edtulo: Vari\u00e1vel String, T\u00edtulo\n* timeStamp: Vari\u00e1vel String, AAAA-MM-DD HH: MM: SS  (**talvez tenhamos que converter pra tipo data**)\n* twp: Vari\u00e1vel String, Township\n* addr: Vari\u00e1vel String, Endere\u00e7o\n* e: Vari\u00e1vel String, vari\u00e1vel Dummy (sempre 1)","f0f04e6f":" ## Integrantes\n* Aline Cristini - 183132\n* Camila Rodrigues - 183143\n* Rafael Gimenes Leite - 101634\n","488af11f":"### Top 10 maiores raz\u00f5es de chamadas gerais","0fbe1c7a":"### Classifica\u00e7\u00e3o das vari\u00e1veis","b9278d89":"### Convertendo campo Data, criando novos campos"}}