{"cell_type":{"330e0fac":"code","b485d07f":"code","5f077408":"code","10927e6b":"code","d77f1370":"code","ddc7cfca":"code","521fe0a5":"code","f9e609da":"code","6b2411d6":"code","a1b1aee8":"code","7c7716a7":"code","afcca21f":"code","07c648df":"code","52a1657c":"code","cbb28241":"code","1184f496":"code","f190e1b0":"code","5e499670":"code","948e9f35":"code","7031745a":"markdown","d7bf6516":"markdown"},"source":{"330e0fac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b485d07f":"df=pd.read_csv('..\/input\/competed-in-both-summer-and-winter-olympic\/athletes.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf.head()","5f077408":"df.isnull().sum()","10927e6b":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'grey',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"Winter Sport\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Olympic Winter Sports\")\nplt.show()","d77f1370":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'salmon',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"Summer Sport\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Olympic Summer Sports\")\nplt.show()","ddc7cfca":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Blues')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","521fe0a5":"plot_count(\"Winter Games\", \"Winter Games\", df,4)","f9e609da":"plot_count(\"Summer Games\", \"Summer Games\", df,4)","6b2411d6":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(16,8))\nsns.countplot(y=\"Nation\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"RdBu\"))\nplt.title('Olympic Nations',\n         fontsize=15);","a1b1aee8":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdGy(np.linspace(0,1,20))\ndf[\"Nation\"].value_counts().sort_values(ascending=False).head(10).plot.pie(y=\"Winter Sport\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Winter Sports Olympic Nations\")\nplt.axis(\"off\")\nplt.show()","7c7716a7":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.summer(np.linspace(0,1,20))\ndf[\"Nation\"].value_counts().sort_values(ascending=False).head(10).plot.pie(y=\"Summer Sport\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Summer Sports Olympic Nations\")\nplt.axis(\"off\")\nplt.show()","afcca21f":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['Summer Games'], palette='RdBu')\nplt.xlabel(\"Summer Games\")\nplt.ylabel(\"Count\")\nplt.title(\"Olympics Summer Games \")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","07c648df":"df[\"Winter Games\"].value_counts().iloc[:10].plot.bar(title='Olympics Winter Games', color='red')","52a1657c":"bra = df[(df['Nation']=='Brazil')].reset_index(drop=True)\nbra.head()","cbb28241":"usa = df[(df['Nation']=='United States')].reset_index(drop=True)\nusa.head()","1184f496":"#Code by Gabriel Preda https:\/\/www.kaggle.com\/gpreda\/explore-the-rainforest-soundscape\ndef plot_feature_distribution(usa, feature, feature2, title, kde_mode=False, hist_mode=True):\n    f, ax = plt.subplots(1,1, figsize=(12,6))\n    for item in list(usa[feature2].unique()):\n        d_usa = usa.loc[usa[feature2]==item]\n        try:\n            sns.distplot(usa[feature], kde=kde_mode, hist=hist_mode, label=item)\n        except:\n            pass\n    plt.legend(labels=list(usa[feature2].unique()), bbox_to_anchor=(1, 1), loc='upper right', ncol=2)\n    plt.title(title)\n    plt.show()","f190e1b0":"plot_feature_distribution(usa, 'Number of Summer Games','Summer Games', \"USA in Summer Games\")","5e499670":"bra[\"Total Number of Games\"].value_counts().plot.bar(title='Brazilian Athletes Total Number of Games', color='g')","948e9f35":"usa[\"Medals in Both\"].value_counts().plot.bar(title='USA Athletes Medals in both Games', color='b')","7031745a":"It's not very easy to have Medals in both Summer\/Winter Games.","d7bf6516":"![](https:\/\/i.imgur.com\/aC6wEnh.jpg)imgur.com"}}