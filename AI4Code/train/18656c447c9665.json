{"cell_type":{"ee1393da":"code","317e155c":"code","9558c3b5":"code","7d197ee8":"code","5de06a59":"code","1117e883":"code","efc76246":"code","3e1bc867":"code","8083a36a":"code","112e069e":"code","16763e82":"code","0d49482c":"code","826a1431":"code","5e062d03":"code","f23e1cc8":"code","70741b0f":"code","d1d10c5b":"code","8b9d932a":"code","d3f3a374":"code","f075325f":"code","5512328f":"code","571c88b1":"code","11102766":"code","5bc0d88e":"code","87395fdb":"code","ccb712a3":"code","8d4f80ab":"code","8020b8f5":"code","ad44bb07":"code","a522a6c9":"code","abfd7cda":"code","7ecd6db3":"code","719afedb":"code","ee68d052":"code","5f5f939a":"code","8b006c54":"code","22642e90":"code","8a288d6e":"code","8dc0db25":"code","fc15377a":"code","e7eed20d":"markdown","88f9680b":"markdown","8b11e463":"markdown","70519f48":"markdown","7db0d196":"markdown","e9017fb5":"markdown","b2b1d17f":"markdown","6f54dbc7":"markdown","536ba7fa":"markdown","4d4e9020":"markdown","c1a0b70e":"markdown","96b46cdb":"markdown","7a921aa8":"markdown","9554cdab":"markdown","180f3458":"markdown","a60e1fb6":"markdown","32413655":"markdown","c7823492":"markdown","4ea7d164":"markdown","d6f96526":"markdown","36729576":"markdown","1366c743":"markdown","f426834f":"markdown","d711eaaa":"markdown","a09062e2":"markdown","194806a4":"markdown","b69566be":"markdown","63edd085":"markdown","226085a5":"markdown","a50c93c6":"markdown","ecc9a46c":"markdown","a759a17c":"markdown","e18a50e9":"markdown","cbaad621":"markdown","3e561860":"markdown","f4c9cde3":"markdown","0aea18ed":"markdown","7acb0166":"markdown","58c63e1e":"markdown","6c96d411":"markdown","d51ba766":"markdown","7f4e7f14":"markdown","f911768f":"markdown","d47b294d":"markdown","8150d0b5":"markdown","52ed687d":"markdown","4ff3cb71":"markdown","2557e08f":"markdown","5380fa7f":"markdown"},"source":{"ee1393da":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","317e155c":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\ngender_submission_data = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","9558c3b5":"train_data.head()","7d197ee8":"# create target data 'Survived' -Survived\u30ab\u30e9\u30e0(\u6559\u5e2b\u30c7\u30fc\u30bf)\u306e\u4f5c\u6210-\ntarget = train_data['Survived']\n\n# drop columns 'Survived' from train data -\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089Survived\u30ab\u30e9\u30e0\u3092\u524a\u9664-\ntrain = train_data.drop('Survived', axis=1)\n","5de06a59":"# concatenate train and test data\u3000-\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d50\u5408-\nall_data = pd.concat([train, test_data]).reset_index(drop=True)\n\nprint(train.shape)\nprint(test_data.shape)\nprint(all_data.shape)","1117e883":"# show outline of data -\u30c7\u30fc\u30bf\u306e\u6982\u8981-\nall_data.info()","efc76246":"sns.barplot(x=train['Sex'], y=target)","3e1bc867":"sns.barplot(x=train['Pclass'], y=target)","8083a36a":"sns.barplot(x=train['Pclass'], y=target, hue=train['Sex'])","112e069e":"sns.barplot(x=train['Embarked'], y=target)","16763e82":"# select numeric column from train_data\u3000-\u6570\u5024\u30c7\u30fc\u30bf\u306e\u30ab\u30e9\u30e0\u3092\u5217\u6319\u3059\u308b-\ntrain_data_int = ['Survived', 'Age', 'SibSp', 'Parch', 'Fare']\n# plot correlation matrix between numerical data\u3000-\u6570\u5024\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u4fc2\u6570\u3092\u8868\u793a\u3059\u308b-\nsns.heatmap(train_data[train_data_int].corr(), annot=True)","0d49482c":"sns.barplot(x=train['SibSp'], y=target)","826a1431":"sns.barplot(x=train['Parch'], y=target)","5e062d03":"age_glaph = sns.FacetGrid(train_data, 'Survived')\nage_glaph.map(sns.distplot, 'Age')","f23e1cc8":"age_glaph = sns.kdeplot(train_data['Age'][(train_data['Survived'] == 0) & (train_data['Age'].notnull())], color='Red', shade=True)\nage_glaph = sns.kdeplot(train_data['Age'][(train_data['Survived'] == 1) & (train_data['Age'].notnull())], color='Blue', shade=True)\nage_glaph.legend(['Not Survived', 'Survived'])","70741b0f":"sns.distplot(all_data['Fare'])","d1d10c5b":"all_data['Fare'] = np.round(np.log(all_data['Fare'][all_data['Fare'] > 0]),5)","8b9d932a":"sns.distplot(all_data['Fare'])","d3f3a374":"all_data.isnull().sum()","f075325f":"sns.heatmap(train_data.corr(), annot=True)","5512328f":"# fill missing 'Fare' data with average value for each 'Pclass'\u3000-'Pclass'\u3054\u3068\u306e\u6599\u91d1\u306e\u5e73\u5747\u5024\u3092\u6b20\u640d\u5024\u306b\u88dc\u5145\u3059\u308b-\nall_data['Fare'] = all_data.groupby('Pclass')['Fare'].transform(lambda x :x.fillna(x.mean()))\nprint(all_data['Fare'].isnull().sum())","571c88b1":"fare_nan_indx = all_data['Age'][all_data['Age'].isnull()].index.tolist()\n\nage_median = all_data['Age'].median()\nfor idx in fare_nan_indx:\n    age_pred_median = all_data['Age'][(all_data['Pclass'] == all_data.iloc[idx]['Pclass']) & (all_data['SibSp'] == all_data.iloc[idx]['SibSp']) & (all_data['Parch'] == all_data.iloc[idx]['Parch'])].median()\n    if not np.isnan(age_pred_median):\n        all_data['Age'].iloc[idx] = age_pred_median\n    else:\n        all_data['Age'].iloc[idx] = age_median\n    \nprint(all_data['Age'].isnull().sum())","11102766":"all_data['Embarked'].fillna('S')\nall_data = pd.get_dummies(all_data, columns=['Embarked'])","5bc0d88e":"all_data['FamilySize'] = all_data['SibSp'] + all_data['Parch'] + 1","87395fdb":"sns.barplot(x=all_data['FamilySize'], y=target)","ccb712a3":"all_data['Ticket'].isnull().sum()","8d4f80ab":"Tickets = []\nfor t in all_data['Ticket'].tolist():\n    if not t.isdigit():\n        Tickets.append(t.replace('\/','').replace('.','').split(' ')[0])\n    else:\n        Tickets.append('X')\nall_data['Ticket'] = Tickets\nall_data['Ticket'].head()","8020b8f5":"plt.figure(figsize=(35,35))\nsns.barplot(x=all_data['Ticket'], y=target)","ad44bb07":"all_data = pd.get_dummies(all_data,columns=['Ticket'],prefix='T')","a522a6c9":"all_data.drop(['PassengerId', 'Name', 'Cabin'],axis=1, inplace=True)","abfd7cda":"all_data = pd.get_dummies(all_data, columns=['Sex'])","7ecd6db3":"all_data[all_data.dtypes[all_data.dtypes == 'uint8'].index.tolist()] = all_data[all_data.dtypes[all_data.dtypes == 'uint8'].index.tolist()].astype(float)\nall_data.dtypes\n","719afedb":"import lightgbm as lgb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import log_loss, accuracy_score\n# from sklearn.model_selection import KFold\n","ee68d052":"train_data_for_model = all_data[:train_data.shape[0]]\npred_data_for_model = all_data[train_data.shape[0]:]","5f5f939a":"train_x, test_x, train_y, test_y = train_test_split(train_data_for_model, target, test_size=0.005)","8b006c54":"print(train_x.shape)\nprint(train_y.shape)\nprint(test_x.shape)\nprint(test_y.shape)\n","22642e90":"lgb_train = lgb.Dataset(np.array(train_x),np.array(train_y))\nlgb_eval = lgb.Dataset(np.array(test_x),np.array(test_y), reference=lgb_train)","8a288d6e":"params = {\n    'task': 'train',\n    'boosting_type': 'gbdt',\n    'objective': 'regression',\n    'metrics': {'l2'},\n    'learning_rate': 0.003,\n    'num_iterations':100,\n    'feature_fraction':0.52,\n    'bagging_fraction':0.79,\n    'verbose':0\n}\n\ngbm = lgb.train(params, lgb_train, num_boost_round=5000, valid_sets=lgb_eval, early_stopping_rounds=1000)","8dc0db25":"pred = gbm.predict(np.array(test_data_for_model), num_iteration=gbm.best_iteration)\npred","fc15377a":"pred = np.where(pred > 0.42,1,0)\nsubmit = pd.DataFrame({'PassengerId': test_data['PassengerId'], 'Survived': pred})\nsubmit.to_csv('submit.csv',index=False)","e7eed20d":"Pclass (1st,2nd,3rd)\n1st class has higher chance to survive than 2nd,3rd -\u30d5\u30a1\u30fc\u30b9\u30c8\u30af\u30e9\u30b9\u306f\u30bb\u30ab\u30f3\u30c9\u3001\u30b5\u30fc\u30c9\u30af\u30e9\u30b9\u3088\u308a\u751f\u5b58\u7387\u304c\u9ad8\u3044\u3053\u3068\u304c\u5206\u304b\u308b-","88f9680b":"### 3.2 Fill missing Data Considering correlation\u3000-\u76f8\u95a2\u95a2\u4fc2\u3092\u8003\u616e\u3057\u305f\u6b20\u640d\u5024\u306e\u88dc\u5145-","8b11e463":"It seems that 'Fare' has important correlation with 'Survived'\u3000-\u904b\u8cc3\u304c\u751f\u5b58\u7387\u306b\u5bfe\u3057\u3066\u9ad8\u3044\u76f8\u95a2\u3092\u793a\u3057\u3066\u3044\u308b\u4e8b\u304c\u308f\u304b\u308b-<br>\nBut other columns excepting 'Fare' have to be researched\u3000-\u904b\u8cc3\u4ee5\u5916\u306e\u30ab\u30e9\u30e0\u306b\u95a2\u3057\u3066\u3082\u8abf\u67fb\u3057\u3066\u304a\u304f-","70519f48":"### Fare","7db0d196":"### 5.1 Delete unused column -\u5b66\u7fd2\u306b\u4f7f\u308f\u306a\u3044\u30ab\u30e9\u30e0\u3092\u9664\u5916\u3059\u308b-\n","e9017fb5":"#### Embarked","b2b1d17f":"the passenger who has many 'Sibsb(siblings\/spouses)' has lower chance to survive.\u3000-\u5144\u5f1f\u3001\u914d\u5076\u8005\u304c\uff13\u4eba\u4ee5\u4e0a\u3067\u3042\u308b\u3068\u751f\u5b58\u7387\u304c\u4f4e\u304f\u306a\u308b\u50be\u5411\u304c\u308f\u304b\u308b\u3002-","6f54dbc7":"### 1.1 Load data (train, test, submit)\u3000-\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f-","536ba7fa":"## 4.feature engineering","4d4e9020":"#### Ticket","c1a0b70e":"'Age' has strong correlation with 'Pclass', 'SibSp', 'Parch'\u3000-\u5e74\u9f62\u306f['Pclass','SibSp','Parch']\u306b\u5bfe\u3057\u3066\u5f37\u3044\u76f8\u95a2\u304c\u3042\u308b\u4e8b\u304c\u5206\u304b\u308b-","96b46cdb":"### 4.1 Create Family features\u3000-\u65b0\u305f\u306b\u5bb6\u65cf\u6570\u3092\u7279\u5fb4\u91cf\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b-","7a921aa8":"familySize=4 has highest chance to survive. and survival probability is worst for larger one\u3000-'familySize'\u304c\uff14\u306e\u6642\u6700\u3082\u751f\u5b58\u7387\u304c\u9ad8\u3044\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u308b\u3002\uff14\u3092\u8d8a\u3048\u305f\u9014\u7aef\u3001\u751f\u5b58\u7387\u304c\u4e0b\u304c\u308a\u59cb\u3081\u3066\u3044\u308b-","9554cdab":"### 6.3 Divide train data into train_data and test_data -\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3001\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b-","180f3458":"### Age","a60e1fb6":"### 1.3 Divide into train and test\u3000-\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u62bd\u51fa-","32413655":"### Fare","c7823492":"#### 2.2 Plot numerical data","4ea7d164":"## 3.Fill missing data\u3000-\u6b20\u640d\u5024\u306e\u88dc\u5145-","d6f96526":"### 3.1 Number of missing data and correlation for each column\u3000-\u30ab\u30e9\u30e0\u3054\u3068\u306e\u6b20\u640d\u5024\u3068\u3001\u76f8\u95a2\u95a2\u4fc2-","36729576":"Tickets with same prefixes may have a similar class and survival.","1366c743":"## 7. Submit Prediction\u3000-\u4e88\u6e2c\u30c7\u30fc\u30bf\u306e\u63d0\u51fa-","f426834f":"### 6.5 Build LightGBM model\u3000-LightGBM\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b-","d711eaaa":"### Age","a09062e2":"'Embarked C' has higher chance to survive than 'S','Q'\u3000-\u4e57\u8239\u5834'C'\u306e\u4eba\u306f'S','Q'\u3088\u308a\u3082\u751f\u5b58\u7387\u304c\u9ad8\u3044\u4e8b\u304c\u308f\u304b\u308b-","194806a4":"#### Pclass","b69566be":"1. Load and check data\u3000\u3000-\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f-\n * 1.1 Load data (train, test, submit)\u3000-\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f-\n * 1.2 Show outline of train data\u3000-\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u6982\u8981\u306e\u8868\u793a-\n * 1.3 Divide into train and target\u3000-\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u62bd\u51fa-\n * 1.4 Concatenate train and test\u3000-\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d50\u5408-<br><br>\n2. Analyze feature of data\u3000\u3000-\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u53ef\u8996\u5316-\n * 2.1 Plot categorical data\u3000\u3000-\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316-\n    * Sex\n    * Pclass\n    * Embarked<br><br>\n * 2.2 Plot numerical data\u3000\u3000-\u6570\u5024\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316-\n    * SibSp\n    * Parch\n    * Age\n    * Fare<br><br>\n3. Fill Nah data\u3000-\u6b20\u640d\u5024\u306e\u88dc\u5145-\n * 3.1 Number of missing data and correlation for each column\u3000-\u30ab\u30e9\u30e0\u3054\u3068\u306e\u6b20\u640d\u5024\u3068\u3001\u76f8\u95a2\u95a2\u4fc2- <br><br>\n * 3.2 Fill missing Data Considering correlation\u3000-\u76f8\u95a2\u95a2\u4fc2\u3092\u8003\u616e\u3057\u305f\u6b20\u640d\u5024\u306e\u88dc\u5145-\n    * Fare\n    * Age\n    * Embarked<br><br>\n4. Feature engineering\u3000\u3000-\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0-\n * 4.1 Create Family features\u3000-\u65b0\u305f\u306b\u5bb6\u65cf\u6570\u3092\u7279\u5fb4\u91cf\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b-\n    * FamilySize\n    * Ticket<br><br>\n\n5. Delete unused data\u3000\u3000-\u30ab\u30e9\u30e0\u306e\u6574\u7406-\n * 5.1 Delete unused column -\u5b66\u7fd2\u306b\u4f7f\u308f\u306a\u3044\u30ab\u30e9\u30e0\u3092\u9664\u5916\u3059\u308b-\n * 5.2 Align data\u3000types -\u5b66\u7fd2\u7528\u306b\u30c7\u30fc\u30bf\u578b\u3092\u63c3\u3048\u308b-<br><br>\n\n6. Make ML Model\u3000\u3000-\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9-\n * 6.1 Import packages to need -\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8-\n * 6.2 Divide alldata into train data and pred data\u3000-\u7d50\u5408\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3001\u4e88\u6e2c\u7528\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b-\n * 6.3 Divide train data into train_data and test_data -\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3001\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b-\n * 6.4 Convert dataset for LightGBM\u3000-LightGBM\u7528\u306b\u30c7\u30fc\u30bf\u3092\u5909\u63db\u3059\u308b-\n * 6.5 Build LightGBM model\u3000-LightGBM\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b-\n * 6.6 Predict with model -\u4e88\u6e2c\u3092\u884c\u3046-<br><br>\n7. Submit prediction -\u4e88\u6e2c\u30c7\u30fc\u30bf\u306e\u63d0\u51fa-\n","63edd085":"### 1.2 Show outline of train data\u3000-\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u6982\u8981\u306e\u8868\u793a-","226085a5":"seeing age between 0 ~ 10, it seems that very younger passenger has higher chance to survive than older\u3000-0~10\u6b73\u306e\u5b50\u4f9b\u306f\u512a\u5148\u7684\u306b\u6551\u52a9\u3055\u308c\u305f\u3068\u63a8\u6e2c\u3067\u304d\u308b\u3002-","a50c93c6":"#### 2.1 Plot categorical data\u3000-\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316-","ecc9a46c":"## 6.Make ML Model\n","a759a17c":"small family has higer chace to survive than single(Parch=0) and medium(Parch=4,5,...)\u3000-\u4e21\u89aa\u3084\u5b50\u4f9b\u304c\u5408\u8a081~3\u4eba\u306e\u4e57\u5ba2\u304c\u751f\u5b58\u7387\u304c\u9ad8\u3044\u4e8b\u304c\u5206\u304b\u308b\u3002-","e18a50e9":"### 5.2 Align data\u3000types -\u5b66\u7fd2\u7528\u306b\u30c7\u30fc\u30bf\u578b\u3092\u63c3\u3048\u308b-","cbaad621":"## 5.Delete unused data\u3000-\u30ab\u30e9\u30e0\u306e\u6574\u7406-","3e561860":"### Embarked","f4c9cde3":"### 6.6 Predict with model -\u4e88\u6e2c\u3092\u884c\u3046-","0aea18ed":"### 6.1 Import packages to need -\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8-","7acb0166":"### Parch","58c63e1e":"## 1. Load and check data\u3000-\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f-","6c96d411":"### 1.4 Concatenate train and test data\u3000-\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d50\u5408-","d51ba766":"as we can see, abount 'Fare' data is very skewed, so transform it with 'log' to make shape like normal distribution\u3000-\u904b\u8cc3\u30c7\u30fc\u30bf\u304c\u975e\u5e38\u306b\u504f\u308a\u304c\u3042\u308b\u305f\u3081log\u3092\u4f7f\u7528\u3057\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3065\u3051\u308b-","7f4e7f14":"'Fare' has strong correlation with 'Pclass'\u3000-\u904b\u8cc3\u306f'Pclass'\u306b\u5f37\u3044\u76f8\u95a2\u95a2\u4fc2\u304c\u898b\u3048\u308b-","f911768f":"### 6.4 Convert dataset for LightGBM\u3000-LightGBM\u7528\u306b\u30c7\u30fc\u30bf\u3092\u5909\u63db\u3059\u308b-","d47b294d":"Women have higher survival probability than men\u3000-\u5973\u6027\u306e\u65b9\u304c\u751f\u5b58\u7387\u304c\u9ad8\u3044\u4e8b\u304c\u5206\u304b\u308b-<br>\n'Sex' is an important factor in prediction -\u6027\u5225\u306f\u4e88\u6e2c\u306b\u5bfe\u3057\u3066\u91cd\u8981\u306a\u8981\u7d20\u3067\u3042\u308b\u4e8b\u304c\u5206\u304b\u308b-","8150d0b5":"#### Sex","52ed687d":"### SibSp","4ff3cb71":"#### Family size","2557e08f":"### 2.Analyze feature of data\u3000-\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u53ef\u8996\u5316-","5380fa7f":"### 6.2 Divide alldata into train data and pred data\u3000-\u7d50\u5408\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3001\u4e88\u6e2c\u7528\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b-"}}