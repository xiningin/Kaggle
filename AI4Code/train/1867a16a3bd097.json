{"cell_type":{"7710f1eb":"code","1b79903d":"code","906fa672":"code","56b4b473":"code","fcad7b42":"code","91a698fd":"code","9abfd364":"code","d24ec89a":"code","9f4f01ee":"code","413505a7":"code","869222e8":"code","d9e24c01":"code","8ef8d1a9":"code","4d6f172a":"code","e95d68f4":"code","31e0a105":"code","0a832cab":"code","54a696ee":"code","00237978":"code","26228bb0":"code","1656b8e3":"markdown","1a4f42d0":"markdown","757ae3d0":"markdown","c8c1c60b":"markdown","848537af":"markdown","3ec6273f":"markdown","9f7605c9":"markdown","49de611a":"markdown"},"source":{"7710f1eb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n%matplotlib inline\nimport plotly.offline as py\nfrom plotly import tools\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","1b79903d":"df = pd.read_csv('..\/input\/insurance.csv')","906fa672":"df.head()","56b4b473":"df.info()","fcad7b42":"df.describe()","91a698fd":"df.describe(exclude=['int64','float64'])","9abfd364":"df_bar_male = df[df['sex']=='male'].groupby(by =['age'])['expenses'].sum()\ndf_plot_male = pd.DataFrame(df_bar_male,columns=['Age','expenses'])\ndf_plot_male['Age']=df_plot_male.index\ndf_plot_male.reset_index(level=0, inplace=True)\ndf_plot_male.drop(columns='age',inplace=True)\n\ndf_bar_female = df[df['sex']=='female'].groupby(by =['age'])['expenses'].sum()\ndf_plot_female = pd.DataFrame(df_bar_female,columns=['Age','expenses'])\ndf_plot_female['Age']=df_plot_male.index\ndf_plot_female.reset_index(level=0, inplace=True)\ndf_plot_female.drop(columns='age',inplace=True)","d24ec89a":"x0 = df_plot_male['Age']\ny0 = df_plot_male['expenses']\nx1 = df_plot_female['Age']\ny1 = df_plot_female['expenses']\nmale = go.Bar(\n    x=x0,y=y0,\n    opacity=0.75,\n    name = 'male'\n)\nfemale = go.Bar(\n    x=x1,y=y1,\n    opacity=0.75,\n    name = 'female'\n)\ndata = [male,female]\nlayout = go.Layout(barmode='stack',    xaxis = dict(\n        range=[18,65]))\nfig = go.Figure(data=data)\npy.iplot(fig, filename='grouped bars')","9f4f01ee":"sns.jointplot(x=df.age,y=df.expenses,data = df)","413505a7":"plt.figure(figsize=(15,16))\nsns.jointplot(x=df.bmi,y=df.expenses,data = df)","869222e8":"df_encoded = pd.get_dummies(df)","d9e24c01":"df_encoded.head()","8ef8d1a9":"df_encoded.drop(columns=['sex_male','smoker_yes'],inplace=True)","4d6f172a":"X = df_encoded.drop(columns='expenses')\n\ny = df_encoded['expenses']\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error,r2_score\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.3, random_state = 101)\nmodel = LinearRegression()\nmodel.fit(X_train,y_train)","e95d68f4":"model.coef_","31e0a105":"model.intercept_","0a832cab":"def mean_absolute_percentage_error(y_true, y_pred): \n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100","54a696ee":"train_predict = model.predict(X_train)\n\nmae_train = mean_absolute_error(y_train,train_predict)\n\nmse_train = mean_squared_error(y_train,train_predict)\n\nrmse_train = np.sqrt(mse_train)\n\nr2_train = r2_score(y_train,train_predict)\n\nmape_train = mean_absolute_percentage_error(y_train,train_predict)","00237978":"test_predict = model.predict(X_test)\n\nmae_test = mean_absolute_error(test_predict,y_test)\n\nmse_test = mean_squared_error(test_predict,y_test)\n\nrmse_test = np.sqrt(mean_squared_error(test_predict,y_test))\n\nr2_test = r2_score(y_test,test_predict)\n\nmape_test = mean_absolute_percentage_error(y_test,test_predict)","26228bb0":"print('+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')\nprint('TRAIN: Mean Absolute Error(MAE): ',mae_train)\nprint('TRAIN: Mean Squared Error(MSE):',mse_train)\nprint('TRAIN: Root Mean Squared Error(RMSE):',rmse_train)\nprint('TRAIN: R square value:',r2_train)\nprint('TRAIN: Mean Absolute Percentage Error: ',mape_train)\nprint('+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')\nprint('TEST: Mean Absolute Error(MAE): ',mae_test)\nprint('TEST: Mean Squared Error(MSE):',mse_test)\nprint('TEST: Root Mean Squared Error(RMSE):',rmse_test)\nprint('TEST: R square value:',r2_test)\nprint('TEST: Mean Absolute Percentage Error: ',mape_test)","1656b8e3":"We can see that there are no missing values.\nCategorical columns include sex, smoker and region.\nNumerical columns include age, bmi, children and expenses.\nInput features for the model are age, sex, bmi, children, smoker, region.\nOutput of the model is expenses.","1a4f42d0":"Have a look at the data using head()","757ae3d0":"**Context**\n\nThe insurance.csv dataset contains 1338 observations (rows) and 7 features (columns). The dataset contains 4 numerical features (age, bmi, children and expenses) and 3 nominal features (sex, smoker and region).","c8c1c60b":"Using Pandas let us read the dataset.","848537af":"info() gives information about each column","3ec6273f":"Let us first import all the packages we need.","9f7605c9":"Removing sex_male column since if a 0 in sex_female indicates sex male only and we don't want redundant columns that may overfit our model. This applies to smoker column too.","49de611a":"Let us do some EDA through visualization"}}