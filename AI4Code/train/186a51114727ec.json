{"cell_type":{"7625aac9":"code","998546d8":"code","7f640980":"code","d41b3153":"code","4b216ded":"code","855766f6":"code","f65304dd":"code","ec0b4b29":"code","55f1ec20":"code","b545deb6":"code","e22d8de1":"code","dd8128d2":"code","bc366243":"markdown","1ad1f051":"markdown","9a76d779":"markdown","99cfe0ae":"markdown","7767b70e":"markdown","d87de032":"markdown","ce035b31":"markdown","85851334":"markdown","d884f940":"markdown","41f01142":"markdown","a5b4c22f":"markdown","f22d4af6":"markdown"},"source":{"7625aac9":"# Imports, yay!\nimport numpy as np \nimport pandas as pd # \nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import plot\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","998546d8":"# Read and preview data. Toss data before the year 1900 as there are some inaccurate datapoints from years near 200.\ndf = pd.read_csv(\"..\/input\/daily-temperature-of-major-cities\/city_temperature.csv\")\ndf = df[df[\"Year\"] > 1900]\ndf.head()","7f640980":"# Years array from 1995 to 2019\nyears = np.linspace(1995,2019, endpoint=True, num=25)\n\n# Toss average of 2020 due to being partial year at time of making. df2 will be used for annual average analysis\ndf2 = df[df[\"Year\"] < 2020]\n# Toss temperatures below 10 and above 125\ndf2 = df2[df2[\"AvgTemperature\"] > 10]\ndf2 = df2[df2[\"AvgTemperature\"] < 125]\n\n# Group data by year and find mean\nmeans = df2.groupby(\"Year\")[\"AvgTemperature\"].mean()\na = means\n\n# Plot data with average line\nplt.figure(figsize=(16,8))\nplt.plot(a)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Average Global Temperature, Fahrenheit\")\nplt.title(\"Average Global Temperatures by Year\")\narr = pd.Series(a).array\nm, b = np.polyfit(years, arr, 1)\nplt.plot(years, m*years + b)\nplt.legend(['Average Temperature by Year', 'Average over Time'])","d41b3153":"## Combine Year and Month into 1 to get monthly average instead of annual\ndf2['Date'] = pd.to_datetime(df2[['Year', 'Month']].assign(DAY=1))\n\n# Group data by month and find mean\nmeans = df2.groupby(\"Date\")[\"AvgTemperature\"].mean()\nb = means\n\n# Plot data\nplt.figure(figsize=(16,8))\nplt.plot(b)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Average Global Temperature, Fahrenheit\")\nplt.title(\"Average Global Temperatures by Month\")","4b216ded":"# Plot data counts by region\ndf['Region'].value_counts().plot(kind='bar')\nplt.title('Regional Distribution of Data')\nplt.ylabel('Amount of Entries')","855766f6":"# Create new dataframe to work with\n\nregions = ['North America', 'Europe', 'Asia', 'Africa', 'South\/Central America & Carribean', 'Middle East', 'Australia\/South Pacific']\n\n# Loop through each region and plot average temperature\nplt.figure(figsize=(15,7.5))\nfor region in regions:\n    temp = df2[df2['Region']== region]\n    temp = temp.groupby(\"Year\")[\"AvgTemperature\"].mean()\n    a = temp\n    plt.plot(a)\n    \nplt.legend(regions, bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.title('Average Annual Temperature by Region')\nplt.xlabel('Year')\nplt.ylabel('Average Temperature, Fahrenheit')","f65304dd":"# Store all cities in array\ncities = df2['City'].astype('category').cat.categories.tolist()\n\n# Top n Cities in temperature increase, we will use n=10\nn=10\n# Placeholder arrays for top cities information\ntopCities = ['']*n\ntopDiff = np.zeros(n)\n\n# Loop through for each city\nfor city in cities:\n    # Select only by given city\n    temp = df2[df2['City']== city]\n    \n    # Find mean of given city by year\n    temp = temp.groupby(\"Year\")[\"AvgTemperature\"].mean()\n    \n    # Find difference in temp from starting year to ending year. If the data is incomplete (not from 1995-2019) we will handle it differently. \n    # See comment below how it was handeled differently.\n    if temp.size != 25:\n        twoDiff = [temp.iloc[-2] - temp.iloc[1], temp.iloc[-1] - temp.iloc[0], temp.iloc[-2] - temp.iloc[0], temp.iloc[-1] - temp.iloc[2]]\n        diff = np.amin(twoDiff)\n    else:\n        diff = temp.iloc[-1] - temp.iloc[0]\n    \n    # Check if difference is in top n and if change is positive (increase in temp)\n    if diff > np.amin(topDiff) and  diff > 0:\n        \n        # Find index of minimum\n        minIndex = np.argmin(topDiff)\n        \n        # Replace minimum difference with this difference and city name with new top n city\n        topDiff[minIndex] = diff\n        topCities[minIndex] = city\n    \n","ec0b4b29":"plt.figure(figsize=(16,8))\nplt.bar(topCities, topDiff)\nplt.xlabel('City')\nplt.ylabel('Change in Temperature, Fahrenheit')\nplt.grid(axis='y')\nplt.title('Top 10 Temperature Increase by City')","55f1ec20":"plt.figure(figsize=(16,8))\nfor top in topCities:\n    temp = df2[df2['City'] == top]\n    temp = temp.groupby(\"Year\")[\"AvgTemperature\"].mean()\n    a=temp\n    plt.plot(a)\n    \nplt.legend(topCities, bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.title('Average Annual Temperature by Top 10 Cities: Increasing')\nplt.xlabel('Year')\nplt.ylabel('Average Temperature, Fahrenheit')","b545deb6":"# Top n Cities in temperature increase, we will use n=10\nn=10\n# Placeholder arrays for top cities information\ntopCities = ['']*n\ntopDiff = np.zeros(n)\n\n# Loop through for each city\nfor city in cities:\n    # Select only by given city\n    temp = df2[df2['City']== city]\n\n    # Find mean of given city by year\n    temp = temp.groupby(\"Year\")[\"AvgTemperature\"].mean()\n    \n    # Find difference in temp from starting year to ending year. If the data is incomplete (not from 1995-2019) we will handle it differently. \n    # See comment below how it was handeled differently.\n    if temp.size != 25:\n        twoDiff = [temp.iloc[-2] - temp.iloc[1], temp.iloc[-1] - temp.iloc[0], temp.iloc[-2] - temp.iloc[0], temp.iloc[-1] - temp.iloc[2]]\n        diff = np.amax(twoDiff)\n    else:\n        diff = temp.iloc[-1] - temp.iloc[0]\n    \n    # Check if difference is in top n and if change is *negative* (decrease in temp)\n    if diff < np.amax(topDiff) and  diff < 0:\n        \n        # Find index of minimum\n        maxIndex = np.argmax(topDiff)\n        \n        # Replace minimum difference with this difference and city name with new top n city\n        topDiff[maxIndex] = diff\n        topCities[maxIndex] = city\n    \n","e22d8de1":"plt.figure(figsize=(16,8))\nplt.bar(topCities, topDiff)\nplt.xlabel('City')\nplt.ylabel('Change in Temperature, Fahrenheit')\nplt.grid(axis='y')\nplt.title('Top 10 Temperature Decrease by City')","dd8128d2":"plt.figure(figsize=(16,8))\nfor top in topCities:\n    temp = df2[df2['City'] == top]\n    temp = temp.groupby(\"Year\")[\"AvgTemperature\"].mean()\n    a=temp\n    plt.plot(a)\n\nplt.legend(topCities, bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.title('Average Annual Temperature by Top 10 Cities: Decreasing')\nplt.xlabel('Year')\nplt.ylabel('Average Temperature, Fahrenheit')","bc366243":"# Top 10 Decreasing Temperatures in Cities","1ad1f051":"# Rapid Growth by City\n\nFor consistency, we will mostly analyze annual averages.","9a76d779":"There is a clear increase in temperature from 1995 to 2019.\n\n# Now, we will look at monthy averages by month","99cfe0ae":"From this Histogram, we can see that the dataset is focused heavily in North America, which matches our hypothesis. For our average temperature, it makes more sense to view the annual average temperatures instead of monthly averages as seasons in the Northern and Southern hemisphere does not allow a global temperature by month to be reliable. This is also why in the average by year graph, we tossed 2020 as the year was not complete and did not accurately represent the full year's average.","7767b70e":"Here we can see the top 10 increase in temperature in cities. The increase is by about 5 degrees.\n\nFrom the graph, Dunsanbe is does not have a large increase in temperature but still made our top 10. We attemped to make a fail-safe to prevent spiked data to make out top 10 (see above), but since it was spiked for multiple years before becoming reliable, it snuck through. A possible solution in the future is to require each year to have a certain number of data-points to average in order to be counted. It is possible that Dunsanbe had few data-points around 1995-2000 that causes the average to not be reliable.","d87de032":"# Global Temperature Increase Over Time","ce035b31":"*Addressing Incomplete Data*\n\nWe will use the minimum of start to end, second year to end, start to second to last year, and second year to second to least year as the incomplete data often time has spikes. Using the minimum of the 4 edge combinations, it reduces our chance of having an incorrect top 10, even if these countries differences are slightly off.","85851334":"# Regional Temperature Increase Over Time","d884f940":"# Thank you!!\n\n**This is my first ever notebook on Kaggle!!**\n* If you have any tips, please comment below \n* If you got any value out of this, please consider upvoting, it would mean a lot \n\nThanks for your time!","41f01142":"It is difficult to see large growth be region, but is can be seen that each region ended higher than it started, by some degree. ","a5b4c22f":"Similar to our top 10 increase, we can see that Bujumbura slipped into our top 10 list along with Islamabad due to inconsistent data. Checking amount of data-points for these years and cities would likely resolve these concerns.","f22d4af6":"The data is global, so seasons should not be a factor and the monthly average should be smoother. Since the monthly averages was cyclic, I hypothesize much of the data is focused in 1 hemisphere, likely the Northern hemisphere."}}