{"cell_type":{"2b41b2ba":"code","4ebed22e":"code","09897a2f":"code","5cce30af":"code","a182eb10":"code","da48b29a":"code","dd2d6d49":"code","fc825bad":"code","f598d68c":"code","f4c60a4a":"code","be7c0bc8":"code","654709a4":"code","6b9c2c68":"code","b242fe7c":"code","e8c2243c":"code","441a32a8":"code","735c3a09":"code","e4df679c":"markdown","acb578ed":"markdown","f2615d33":"markdown","ed811345":"markdown","4ebae2e1":"markdown","57b6c17e":"markdown","7994d56f":"markdown","f34304e3":"markdown","a1742cb4":"markdown","0755c461":"markdown","7cb06d8c":"markdown"},"source":{"2b41b2ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport requests, json\nfrom matplotlib import pyplot as plt\nfrom wordcloud import WordCloud\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ebed22e":"records_response = requests.get(\"https:\/\/mirror-mirror.vercel.app\/api\/records\")\nrecords_list = json.loads(records_response.text)\nrecords_list[:5]","09897a2f":"records_list = [{'topic': r['topic'], 'sentiment_score': r['sentiment']['score'], 'sentiment': r['sentiment']['label'], 'date': r['date']} for r in records_list]","5cce30af":"records = pd.DataFrame(records_list).sort_values(by=['date'], ascending=False)\nrecords['date'] = records['date'].str[:10]\nrecords.head()","a182eb10":"records['sentiment_score'] = pd.to_numeric(records['sentiment_score'])","da48b29a":"topics_str = ' '.join(records['topic'])\nwordcloud = WordCloud(max_font_size=80, max_words=100, background_color='white').generate(topics_str)\n\nplt.figure(figsize=(10,8))\nplt.imshow(wordcloud) \nplt.axis('off')\nplt.show()","dd2d6d49":"negative = records[records['sentiment_score'].between(0, 0.33)]\nnegative.head()","fc825bad":"negative.describe()","f598d68c":"negative.describe(include='object')","f4c60a4a":"neutral = records[records['sentiment_score'].between(0.34, 0.66)]\nneutral.head()","be7c0bc8":"neutral.describe()","654709a4":"neutral.describe(include='object')","6b9c2c68":"positive = records[records['sentiment_score'].between(0.67, 1)]\npositive.head()","b242fe7c":"positive.describe()","e8c2243c":"positive.describe(include='object')","441a32a8":"records['date'].value_counts().sort_index().plot(xlabel='Date', ylabel='Number of searches', title='Mirror Mirror Usage Chart')","735c3a09":"records.groupby('date')['topic'].value_counts()","e4df679c":"## Mirror Mirror Usage Trends","acb578ed":"## Topics breakdown based on sentiment","f2615d33":"### Positive topics","ed811345":"## An overview of the recent topics users are interested in","4ebae2e1":"### Neutral topics","57b6c17e":"### Negative topics","7994d56f":"## Make a DataFrame of the records","f34304e3":"# Project Introduction\n\n### This is a usage statistics summary of Mirror Mirror - a web application that performs sentiment analysis on underlined topics using a deep learning model. Please free to give it a try: https:\/\/mirror-mirror.vercel.app\/","a1742cb4":"### Column summary:\n- `topic`: the keywords the user searched for\n- `sentiment_score`: the score calculated from the most recent tweets related to the topic, scaling from 0 to 1\n- `sentiment`: public sentiment calculated from the sentiment score (0 ~ 0.33: Negative, 0.34 ~ 0.66: Neutral, 0.67 ~ 1: Positive)\n- `date`: the datetime at which the search was made","0755c461":"### Convert `sentiment_score` to numeric","7cb06d8c":"## Fetch search records from Mirror Mirror api"}}