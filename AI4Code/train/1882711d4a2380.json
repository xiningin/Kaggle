{"cell_type":{"3caae677":"code","b404f418":"code","e6463d28":"code","2f60f051":"code","fa11593d":"code","0d3775e8":"code","3736399e":"code","e6e39418":"code","29163545":"markdown","1e790e6f":"markdown"},"source":{"3caae677":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b404f418":"from tensorflow.python.keras.applications import ResNet50\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Flatten, GlobalAveragePooling2D\n\nnum_classes = 16\n\nmy_new_model = Sequential()\nmy_new_model.add(ResNet50(include_top=False, pooling='avg'))\nmy_new_model.add(Dense(num_classes, activation='softmax'))\n\nmy_new_model.layers[0].trainable = False\n\nmy_new_model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])","e6463d28":"train_path= '..\/input\/lego brick images\/LEGO brick images\/train'\nvalid_path='..\/input\/lego brick images\/LEGO brick images\/valid'","2f60f051":"from tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\n\ndata_generator_with_aug = ImageDataGenerator(\n                                   horizontal_flip=True,\n                                   width_shift_range = 0.2,\n                                   height_shift_range = 0.2)","fa11593d":"train_generator = data_generator_with_aug.flow_from_directory(\n        train_path,\n        target_size=(image_size, image_size),\n        batch_size=24,\n        class_mode='categorical')\n","0d3775e8":"data_generator_no_aug = ImageDataGenerator()","3736399e":"validation_generator = data_generator_with_aug.flow_from_directory(valid_path,\n        target_size=(image_size, image_size),\n        class_mode='categorical')","e6e39418":"my_new_model.fit_generator(\n        train_generator,\n        steps_per_epoch=200,\n        epochs=30,\n        validation_data=validation_generator,\n        validation_steps=200)","29163545":"# Fit the Model Using Data Augmentation","1e790e6f":"# Specify and Compile the Model"}}