{"cell_type":{"d7267b26":"code","89fa9d5e":"code","b4cc92ce":"code","97b099d1":"code","19405fb8":"code","f9556a74":"code","e36cbfe6":"code","8b4777b1":"code","3993d749":"code","9ce60191":"code","8e31d8e4":"code","6bbe29b6":"code","4879fec9":"code","06c51498":"code","bed85b06":"code","23546d43":"code","86e47cae":"markdown","b4d5e654":"markdown","57a42b24":"markdown","2f7d6f00":"markdown","4d067d05":"markdown","be5c5783":"markdown","4901590f":"markdown","388520aa":"markdown","bc04c159":"markdown","263d1214":"markdown","fcc6bf8a":"markdown"},"source":{"d7267b26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","89fa9d5e":"import pandas as pd\nimport seaborn as sns\ncar_data = pd.read_csv(\"..\/input\/automobile-from-california\/imports-85.csv\",header=None)","b4cc92ce":"car_data.head()\n","97b099d1":"car_data.tail()","19405fb8":"# create headers list\nheaders = [\"symboling\",\"normalized-losses\",\"make\",\"fuel-type\",\"aspiration\", \"num-of-doors\",\"body-style\",\n         \"drive-wheels\",\"engine-location\",\"wheel-base\", \"length\",\"width\",\"height\",\"curb-weight\",\"engine-type\",\n         \"num-of-cylinders\", \"engine-size\",\"fuel-system\",\"bore\",\"stroke\",\"compression-ratio\",\"horsepower\",\n         \"peak-rpm\",\"city-mpg\",\"highway-mpg\",\"price\"]\nprint(\"headers\\n\", headers)","f9556a74":"car_data.columns = headers\ncar_data.head(10)","e36cbfe6":"#car_data.dropna(subset=[\"price\"],axis=0)\ncar_data.dropna(subset=[\"price\"], axis=0)","8b4777b1":"car_data.head(10)","3993d749":"print(car_data.columns)","9ce60191":"car_data.to_json(\"test.json\")","8e31d8e4":"#getting datatype of dataframe car_data by .dtypes\nprint(car_data.dtypes)","6bbe29b6":"car_data.describe()","4879fec9":"car_data.describe(include=\"all\")","06c51498":"car_data[['make','price']]","bed85b06":"car_data[['make','price']].describe()","23546d43":"print(car_data.info)","86e47cae":" <h3>3. Another method to check the dataset - .info<\/h3>\n","b4d5e654":"<h3>Read\/Save Other Data Formats<\/h3>\n\n\n\n| Data Formate  | Read           | Save             |\n| ------------- |:--------------:| ----------------:|\n| csv           | `pd.read_csv()`  |`df.to_csv()`     |\n| json          | `pd.read_json()` |`df.to_json()`    |\n| excel         | `pd.read_excel()`|`df.to_excel()`   |\n| hdf           | `pd.read_hdf()`  |`df.to_hdf()`     |\n| sql           | `pd.read_sql()`  |`df.to_sql()`     |\n| ...           |   ...          |       ...        |","57a42b24":"To describe all the columns in dataframe include the type of object -\n<b>df.describe(include = \"all\")<\/b>","2f7d6f00":"<h1>Basic insight of car dataset<\/h1>","4d067d05":"To find the name of the columns of the dataframe","be5c5783":"We can see missing value in the price. As price is the important variable here, we will drop the rows with missing price value\n","4901590f":"This method will provide various summary statistics, excluding <code>NaN<\/code> (Not a Number) values.","388520aa":"It also shows us the whole data frame has 205 rows and 26 columns in total","bc04c159":"We can select some columns of the dataframe using column name","263d1214":"* <h3>2. Statistical summery - dataframe.describe()<\/h3>","fcc6bf8a":"<h3>1. Data Types - dataframe.dtypes<\/h3>\n<p>Main type stored in pandas dataframe are: <b>object, float, int, boolean, datetime64<\/b> <\/p>"}}