{"cell_type":{"e8ab3cbb":"code","c73511b8":"code","a63d6eac":"code","6e536aa6":"code","4a7afa53":"code","f7a6379f":"code","553506ba":"code","24a3eecd":"markdown","a86d96ee":"markdown","ae41dee7":"markdown","b83b2fd1":"markdown","1cb66f15":"markdown","e06b8df5":"markdown","41784daf":"markdown","ac6ff2e7":"markdown","09650420":"markdown"},"source":{"e8ab3cbb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c73511b8":"def sigmoid(x,a,b,c,d):\n    return a\/(1+b*np.exp(-c*x+d))\n\ndef gaussian(x,a,b,c):\n    return (a\/c)*np.exp(-(x-b)*(x-b)\/(c*c))","a63d6eac":"nld_df = pd.read_csv('\/kaggle\/input\/covid19-corona-virus-india-dataset\/nation_level_daily.csv')\nyt = nld_df['totalconfirmed'].values\nyd = nld_df['dailyconfirmed'].values\nX = np.arange(0,yt.shape[0])+1\nplt.figure(dpi=150)\nplt.subplot(121)\nplt.title('Total Cases: India')\nplt.bar(X,yt)\nplt.xlabel('Days')\nplt.ylabel('Cases')\nplt.subplot(122)\nplt.title('Daily Cases: India')\nplt.bar(X,yd)\nplt.xlabel('Days')\nplt.ylabel('Cases')","6e536aa6":"from scipy.optimize import curve_fit\n\ndef cfplot(func,X,y,p0,T,dpi,title):\n    popt,_ = curve_fit(f=func,xdata=X,ydata=y,p0=p0)\n    y_pred = []\n    for x in range(1,T+1):\n        y_pred.append(func(x,*popt))\n    x_ax1 = np.arange(len(y_pred))\n    plt.figure(dpi=dpi)\n    plt.plot(x_ax1,np.array(y_pred),color='blue',label='Prediction')\n    x_ax2 = np.arange(y.shape[0])\n    plt.bar(x_ax2,y,width=0.8,color='red',label='Actual')\n    plt.xlabel('Days')\n    plt.ylabel('Cases')\n    ##plt.axvline(x=x_ax2[-1],color='orange')\n    plt.legend()\n    plt.title(title)\n    loss = int((1\/y.shape[0])*np.sum((y-np.array(y_pred[:y.shape[0]]))**2))\n    xlim = plt.gca().get_xlim()\n    ylim = plt.gca().get_ylim()\n    plt.text(0.6*xlim[1],0.5*ylim[1],str('MSE : '+str(loss)))\n    plt.show()\n    return popt","4a7afa53":"nld_df = pd.read_csv('\/kaggle\/input\/covid19-corona-virus-india-dataset\/nation_level_daily.csv')\ny = nld_df['totalconfirmed'].values\nX = np.arange(0,y.shape[0])+1\npopt = cfplot(sigmoid,X,y,[1,1,1,1],400,125,'India Total Cases')","f7a6379f":"y = nld_df['dailyconfirmed'].values\nX = np.arange(0,y.shape[0])\npopt = cfplot(gaussian,X,y,[100,100,100],400,125,'India Daily Cases')","553506ba":"sld_df = pd.read_csv('\/kaggle\/input\/covid19-corona-virus-india-dataset\/complete.csv')\nmhd_df = sld_df[sld_df['Name of State \/ UT']=='Maharashtra']\ngujd_df = sld_df[sld_df['Name of State \/ UT']=='Gujarat']\ntnd_df = sld_df[sld_df['Name of State \/ UT']=='Tamil Nadu']\nwbd_df = sld_df[sld_df['Name of State \/ UT']=='West Bengal']\ndf_list = [mhd_df,gujd_df,tnd_df,wbd_df]\nst_name = ['Maharashtra','Gujarat','Tamil Nadu','West Bengal']\nfor i,s in enumerate(df_list): \n    y = np.array(s['Total Confirmed cases'])\n    X = np.arange(0,y.shape[0])+1\n    popt=cfplot(sigmoid,X,y,[1,1,1,1],120,75,str('Total Cases: '+st_name[i]))","24a3eecd":"## State Wise Forecast","a86d96ee":"### In this notebook, I will try to forecast the Covid-19 cases of India. I am going to use a Curve Fittiing based method to predict number of cases.","ae41dee7":"## Daily Confirmed Cases : India","b83b2fd1":"## Total Confirmed Cases : India","1cb66f15":"### As we can see from the above prediction curve, Total Cases in India will attain peak around : <span style=\"color:green\">Day 175<\/span>\n### And Total Confirmed cases is preidicted to around : <span style=\"color:red\">2,80,000<\/span>","e06b8df5":"So, we will now fit Sigmoid like curve on Total cases and Gaussain like Curve for Daily cases  \nWe are using *Scipy curve_fit* method for fitting the curve on the above plotted data ","41784daf":"* So in case of Sigmoid we need to estimate parameters $a,b,c,d$ by curve fitting \u00a0\n* and in case of Gaussian we need to estimate parameters $a,b,c$ by curve fitting \u00a0 \n\nNow let us first have a look at the number of cases as a time series data","ac6ff2e7":"### As we can see from the above prediction curve, Maximum Daily Cases in India will attain peak at around :  <span style=\"color:green\">Day 170<\/span>\n### And Maximum Daily Confirmed cases is preidicted to be around : <span style=\"color:red\">18,000<\/span>\n----","09650420":"I will predict 2 things : Cummlative Total Cases and Daily Cases<br\/>\n* Cummulative Total Cases : To predict total case, I would try to fit a ***Sigmoid*** like curve on the avalbale time series data  \n**Sigmoid** like Curve : $$ f_{a,b,c}(x) = \u00a0\\frac{a}{\\mathrm{1} + be^{-cx+d} } \u00a0$$ \n* Daily Cases : To predict daily case, I would try to fit a ***Gaussian*** like curve on the avalbale time series data  \n**Gaussian** like Curve : $$ g_{a,b,c,d}(x) =  \\frac{a}{c}{e^{-\\frac{(x-b)^2}{c^2}}}  $$ "}}