{"cell_type":{"1a840deb":"code","bba8e8f6":"code","eae0a38b":"code","d20259bc":"code","f929029c":"code","6e039dad":"code","763ee5e2":"code","1b79a835":"code","bbcfdf0e":"code","abca645f":"code","e6462bcd":"code","f342e1ff":"markdown"},"source":{"1a840deb":"#Import neccessary libraries\n\nimport pandas as pd\nimport numpy as np\nfrom scipy.cluster.hierarchy import linkage, dendrogram\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import normalize","bba8e8f6":"#Importing the data into pandas dataframe\nipl=pd.read_excel('..\/input\/IPL11_FINAL.xlsx')","eae0a38b":"#Analyze the dataframe\nipl.head()\n#ipl.shape\n#ipl.columns","d20259bc":"#Select only required columns\nipl1=ipl.loc[:,['Match#', 'Date', 'Time (IST)', 'Match', 'WINNER', 'Venue', 'Anand',\n       'Paris', 'Megha', 'Veni', 'Priya', 'Ashok', 'G3R', 'Madhan', 'Raj',\n       'Thimma', 'Surajit', 'Naveen', 'Raghu', 'Manasa', 'Anil', 'Sridhar',\n       'Sanjeeth', 'Anand P', 'Diwakar', 'Manish', 'Murali']]\n\n#Same can be achieved using iloc as shown below\n#samp=ipl.iloc[:,:27]\n#samp.tail(5)","f929029c":"#Select required rows only\n\nipl1=ipl1.iloc[:60,:] # Final match was 60th which was played on 27th may 2018","6e039dad":"\nipl1.columns","763ee5e2":"#Create a dictionary tag a number to corresponding team\n\ndict= {'RCB':1,'CSK':2,'MI':3,'SRH':4,'KKR':5,'DD':6,'RR':7,'KXI':8}","1b79a835":"ipl2= ipl1.iloc[:,6:].replace(dict)\n\nipl2= ipl2.transpose()","bbcfdf0e":"ipl2.tail(5)","abca645f":"#Extract the names, to be used as labels \nnames=list(ipl2.index.values)\n\nnames","e6462bcd":"# Calculate the linkage: mergings\nmergings = linkage(ipl2,method='complete')\n\n\n# Plot the dendrogram, using names as labels\ndendrogram(mergings,\n           labels=names,\n           leaf_rotation=60,\n           leaf_font_size=10,\n)\nplt.title('Hierarchical Clustering')\nplt.figure(figsize=(200, 60))\nplt.show()","f342e1ff":"**Unsupervised Learning : Hierarchical Clustering**\n\nAs the name suggests its an algorithm that builds hierarchy of clusters\n\nDataset :\n\nI took a dataset for Indian Premier League 2018 edition's tournament, \nwhich we play in our office for fun, where in every participant need to predict the winner of each match. \nIt ends with bottom Y people treating top X :)\n\nGoal :\n\nForm cluster(s) of all the particpating members based on their voting pattern [ Total 60 matches]\n\nImplementation :\n\nHierarchical Clustering using Dendrogram [ Unsupervised Learning visualization, without needing to specify the number of clusters]\n\nCode :\n\nPardon the documentation, this was written on a lazy Friday afternoon!\n\nOutcome :\n\nI could see that many of the members in the initial clusters are from same team,which meant they\ndiscussed their votes before predicting and voted same for most number of matches \n( Against the tournament rules :D)\n"}}