{"cell_type":{"e4ccba4e":"code","bd59e141":"code","04931f8e":"code","ff12b4fa":"code","364762da":"code","d2501d72":"markdown","4650a8bd":"markdown","3827c353":"markdown","a1e6c206":"markdown","d4c4f932":"markdown"},"source":{"e4ccba4e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd59e141":"import numpy as np\nimport cv2\nimport os\n\n\nIMG_DIR = '..\/input\/images\/images'\n\nfor img in os.listdir(IMG_DIR):\n        img_array = cv2.imread(os.path.join(IMG_DIR,img), cv2.IMREAD_GRAYSCALE) #reading the images \n\n        img_array = (img_array.flatten()) #flatten the array to only one dimension\n\n        img_array  = img_array.reshape(-1, 1).T #Reshaing the img_array and applying transpose to grt result in a single line.\n\n        print(img_array)\n\n        with open('output.csv', 'ab') as f:\n\n            np.savetxt(f, img_array, delimiter=\",\")\n\n","04931f8e":"\n#Read the video from the specified path\nvideo_info = cv2.VideoCapture('..\/input\/images\/VID-20210307-WA0001.mp4')\ntry:  #creating an output location where we will store the outputs(frames of the video in this case)\n    if not os.path.exists('output_loc'):\n        os.mkdir('output_loc')\nexcept OSError:\n        print('Error Creating directory')\n#frames\ncurrentframe = 0\nwhile(True):\n    ret,frame = video_info.read()\n    if ret:\n        name = '.\/output_loc\/'+str(currentframe)+'.jpg'\n        print('Image name:'+ name)\n        cv2.imwrite(name,frame)  #storing the output\n        currentframe += 1\n    else:\n        break\nvideo_info.release()","ff12b4fa":"from IPython.display import display, Image\ndisplay(Image(filename='.\/238.jpg'))","364762da":"img_path = '.\/output_loc'\n\nfor img in os.listdir(img_path):\n        img_array = cv2.imread(os.path.join(img_path,img), cv2.IMREAD_GRAYSCALE) #reading the images \n        img_array = (img_array.flatten()) #flatten the array to only one dimension\n        img_array  = img_array.reshape(-1, 1).T #Reshaing the img_array and applying transpose to grt result in a single line.\n        print(img_array)\n        \n        with open('result.csv', 'ab') as f:\n            np.savetxt(f, img_array, delimiter=\",\")\n\n","d2501d72":"# 1. Image to CSV.\n**Storing values of Image in a .CSV file**","4650a8bd":"**Now we will convert all the frames information into CSV file.**","3827c353":"**Checking output randomly that is selecting random image number and displaying it.**  ","a1e6c206":"**Conclusion: From above you can see the number of arrays created per image and that information will be stored in the CSV file.**","d4c4f932":"# 2. Video file to CSV file."}}