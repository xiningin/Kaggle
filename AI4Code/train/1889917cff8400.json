{"cell_type":{"e3baee7f":"code","38e08e51":"code","547e5496":"code","8a63ac00":"code","3958152f":"code","7e63c411":"code","14a96c13":"code","d2edd021":"code","737c03eb":"code","6193e8ff":"code","c1b65615":"code","bab324ba":"code","6cfbfedf":"code","aa5964ab":"code","2e565c92":"code","2b2c136e":"code","c0fdba82":"code","13477f39":"code","1533bda5":"code","c299fecf":"code","d8254b49":"code","22de7bfc":"code","383a44eb":"code","43d0b77a":"code","6d83bd11":"code","a6c3d2a1":"code","8b10dc3b":"code","b8ef0737":"code","ad679a29":"code","a0082707":"code","34e1963f":"code","49d64da9":"code","3dd38c14":"code","9860354c":"markdown","c667a835":"markdown","87749333":"markdown","094bd57a":"markdown","e1540255":"markdown","243c7635":"markdown","00472a15":"markdown","339ceeb1":"markdown"},"source":{"e3baee7f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","38e08e51":"train=pd.read_csv(\"..\/input\/socc-ai-assignment-1\/train.csv\")\ntest=pd.read_csv(\"..\/input\/socc-ai-assignment-1\/test.csv\")","547e5496":"import pandas_profiling\nprofile = pandas_profiling.ProfileReport(train)\nprofile","8a63ac00":"plt.figure(figsize=(8,8))\ntrain.Churn.value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05))\nplt.title('Target Variable \"Churn\"')","3958152f":"fig, (ax) = plt.subplots(8, 2, figsize=(15,60))\n\nfeat = train[['gender', 'SeniorCitizen', 'Partner', 'Dependents',\n       'PhoneService', 'MultipleLines', 'InternetService',\n       'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport',\n       'StreamingTV', 'StreamingMovies', 'Contract', 'PaperlessBilling',\n       'PaymentMethod']]\n\nfeat['gender'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05),ax =ax[0][0])\nax[0][0].set_title('Gender')\nfeat['SeniorCitizen'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05),ax =ax[0][1])\nax[0][1].set_title('Senior Citizen')\nfeat['Partner'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05),ax =ax[1][0])\nax[1][0].set_title('Partner')\nfeat['Dependents'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05),ax =ax[1][1])\nax[1][1].set_title('Dependent')\nfeat['PhoneService'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05),ax =ax[2][0])\nax[2][0].set_title('PhoneService')\nfeat['MultipleLines'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[2][1])\nax[2][1].set_title('MultipleLines')\nfeat['InternetService'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[3][0])\nax[3][0].set_title('InternetServices')\nfeat['OnlineSecurity'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[3][1])\nax[3][1].set_title('OnlineSecurity')\nfeat['OnlineBackup'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[4][0])\nax[4][0].set_title('OnlineBackup')\nfeat['DeviceProtection'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[4][1])\nax[4][1].set_title('DeviceProtection')\nfeat['TechSupport'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[5][0])\nax[5][0].set_title('TechSupport')\nfeat['StreamingTV'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[5][1])\nax[5][1].set_title('StreamingTV')\nfeat['StreamingMovies'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[6][0])\nax[6][0].set_title('StremingMovie')\nfeat['Contract'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05),ax =ax[6][1])\nax[6][1].set_title('Contract')\nfeat['PaperlessBilling'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05),ax =ax[7][0])\nax[7][0].set_title('PaperBilling')\nfeat['PaymentMethod'].value_counts().plot(kind='pie',autopct='%1.1f%%',explode=(0.05,0.05,0.05,0.05),ax =ax[7][1])\nax[7][1].set_title('PaymentMethod')\n\nplt.suptitle(\n    \"Categorical Features\", fontweight=\"bold\")\nplt.show()","7e63c411":"# this function creates a barplot given the data and the categorical feature against the Churns\ndef plot_categorical(data, feature, rotate=0, y_axis=\"percentage of customers\", title=None):\n    plt.figure()\n    plt.yticks(fontsize=15)\n    plt.xticks(fontsize=15, rotation=rotate)\n    sns.set(rc={'figure.figsize':(10,7)})\n    five_thirty_eight = [\n                        \"#30a2da\",\n                        \"#fc4f30\",\n                        \"#e5ae38\",\n                        \"#6d904f\",\n                        \"#8b8b8b\",\n                        ]\n    sns.set_palette(five_thirty_eight)\n\n    graph_data = data.groupby(feature)[\"Churn\"].value_counts().to_frame()\n    graph_data = graph_data.rename({\"Churn\": y_axis}, axis=1).reset_index()\n    graph_data[y_axis] = graph_data[y_axis]\/len(data)\n    bar = sns.barplot(x=feature, y= y_axis, hue='Churn', data=graph_data)\n#     bar.set_xticklabels(['{:,.0%}'.format(x) for x in bar.get_xticks()])\n    bar.set_yticklabels(['{:,.0%}'.format(x) for x in bar.get_yticks()])\n    \n    for p in bar.patches:\n             bar.annotate(\"%.2f\" % (p.get_height()*100), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, xytext=(0, 20),\n                 textcoords='offset points')\n    bar.axes.set_title(title,fontsize=20)\n    bar.set_xlabel(\"\")\n    bar.set_ylabel(y_axis, fontsize=18)\n    bar.plot()\n    plt.savefig('bar.pdf')","14a96c13":"excluded_features = ['customerID', 'tenure', 'MonthlyCharges', 'TotalCharges']\ncat_features = train.drop(excluded_features, axis=1)","d2edd021":"plot_categorical(data=train, feature='SeniorCitizen', title='Senior Citizen')","737c03eb":"plot_categorical(data=cat_features, feature='gender', title='Gender')","6193e8ff":"plot_categorical(data=cat_features, feature='Partner', title='Partner')","c1b65615":"plot_categorical(data=cat_features, feature='Dependents', title='Dependents')","bab324ba":"plot_categorical(data=cat_features, feature='PhoneService', title='Phone Service')","6cfbfedf":"plot_categorical(data=cat_features, feature='MultipleLines', title='Multiple Lines')","aa5964ab":"plot_categorical(data=cat_features, feature='InternetService', title='Internet Service')","2e565c92":"plot_categorical(data=cat_features, feature='OnlineSecurity', title='Online Security')","2b2c136e":"plot_categorical(data=cat_features, feature='OnlineBackup', title='Online Backup')","c0fdba82":"plot_categorical(data=cat_features, feature='DeviceProtection', title='Device Protection')","13477f39":"plot_categorical(data=cat_features, feature='TechSupport', title='Tech Support')","1533bda5":"plot_categorical(data=cat_features, feature='StreamingTV', title='Streaming TV')","c299fecf":"plot_categorical(data=cat_features, feature='StreamingMovies', title='Streaming Movies')","d8254b49":"plot_categorical(data=cat_features, feature='Contract', title='Contract')\n","22de7bfc":"plot_categorical(data=cat_features, feature='PaperlessBilling', title='Paperless Billing')","383a44eb":"plot_categorical(data=cat_features, feature='PaymentMethod', rotate=30, title='Payment Method')","43d0b77a":"sns.set(rc={'figure.figsize':(15,10)})\nsns.set(font_scale = 1.5)\nscatter = sns.scatterplot(x='TotalCharges', y='MonthlyCharges', data=train, hue='Churn', size='tenure', sizes=(20, 300), alpha=0.7)\nscatter.axes.set_title('Numerical Features Relationship',fontsize=20)\nscatter.plot()","6d83bd11":"num_attributes = ['tenure', 'MonthlyCharges']\ndata_num = train[num_attributes]","a6c3d2a1":"sns.scatterplot(x=\"TotalCharges\", y=\"MonthlyCharges\", hue=\"tenure\", data=train)","8b10dc3b":"num_attr = ['tenure','MonthlyCharges']\nnum_data = train[num_attr]","b8ef0737":"num_data.hist(bins=15, color='steelblue', edgecolor='black', linewidth=1.0,\n           xlabelsize=8, ylabelsize=8, grid=False)    \nplt.tight_layout(rect=(3, 3, 4.2, 4.2))   ","ad679a29":"service =train.iloc[:,6:-4]","a0082707":"plt.figure(figsize=(25,20))\nfor i,feature in enumerate(list(service.columns)):\n    plt.subplot(3,4,i+1)\n    sns.countplot(feature,hue = train.Churn,data=train)\n    plt.ylim(0,5000)\n    plt.title('num of clints who used {} left vs stay'.format(feature))\nplt.show()","34e1963f":"plt.figure(figsize=(25,20))\nfor i,feature in enumerate(list(service.columns)):\n    plt.subplot(3,4,i+1)\n    sns.countplot(feature,hue = train.SeniorCitizen,data=train)\n    plt.ylim(0,6000)\n    plt.title('senior citizen VS youth in using {}'.format(feature))\nplt.show()","49d64da9":"plt.figure(figsize=(25,20))\nfor i,feature in enumerate(list(service.columns)):\n    plt.subplot(3,4,i+1)\n    sns.countplot(feature,hue = train.Dependents,data=train)\n    plt.ylim(0,5000)\n    plt.title('Dependents VS Independent in using {}'.format(feature))\nplt.show()","3dd38c14":"for i,feature in enumerate(list(service.columns)):\n    plt.subplot(3,4,i+1)\n    sns.countplot(feature,hue = train.Partner,data=train)\n    plt.ylim(0,5000)\n    plt.title('clints who have partner VS not in using {}'.format(feature))\nplt.show()","9860354c":"# Target variable plot","c667a835":"# EDA","87749333":"# Categorical features","094bd57a":"# Identifying relation between Continous Variables:","e1540255":"# Pandas Profiling","243c7635":"# Bivariate Exploration","00472a15":"# Univaraite Exploration","339ceeb1":"# Numerical features Realtionship"}}