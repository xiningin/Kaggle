{"cell_type":{"b75a31ee":"code","90546695":"code","57fa72be":"code","4b62e4dc":"code","a0cb4de7":"code","e4f8204e":"code","febb5da1":"code","52ec549c":"code","36e85070":"code","24e79a7c":"code","442a2b59":"code","0a4b955c":"code","5dbae1b9":"code","4e6e4f67":"code","57965a54":"code","dc963cf3":"code","153eff68":"code","6375fbbe":"code","8222f3a5":"code","c1891c96":"markdown","434e7656":"markdown","18492a66":"markdown","cf8e1ec0":"markdown","a59c1bef":"markdown","d7b9faa4":"markdown"},"source":{"b75a31ee":"# Bibli used\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","90546695":"# dropping the data\n\nplayers_stats = pd.read_csv('..\/input\/counter-strike-competitive-data\/players_stats.csv')","57fa72be":"# Changing the index for search be more easy\n\nplayers_stats.set_index(\"player_nick\", inplace=True)","4b62e4dc":"# Deleting some coluns that, certainly, i will not use on\n\nplayers_stats_clean = players_stats.drop([\"Unnamed: 0\",\"player_link\"], axis=1)","a0cb4de7":"# Selecting only pro-players that have more than 1000 maps_played on compatitive.\n\n# Is a form to select the players that is \"famous\".\n\n# It's the base line ...\n\nplayers_stats_clean = players_stats_clean.query('maps_played > 999')\nplayers_stats_clean","e4f8204e":"players_stats_clean.describe()\n\n# No null values","febb5da1":"# Changing the format of hs_percentage (string to float)\n\nhs_percentage = players_stats_clean['hs_percentage']\nhs_p = []\n\nfor i in hs_percentage:\n    p = i.replace('%','')\n    hs_p.append(float(p))\n    \n\n# Changing \"age\" from string to int\n\ntt = np.array(list(map(np.int,players_stats_clean['player_age'])))\nage = list(tt)\n\n# Changing 'impact' from object to float\n\nimpact = []\nfor i in players_stats_clean['impact']:\n    impact.append(float(i))\n\n# Creating one that set more \"clear\"    \n    \ndf_x = pd.DataFrame({'country':players_stats_clean['player_country'], 'hs_percent':hs_p, 'age':age, 'impact':impact,'kills':players_stats_clean['total_kills'], 'kd_ratio':players_stats_clean['kd_ratio']})","52ec549c":"y = df_x['hs_percent'][:28].sort_values(ascending = False)\n\nax = df_x.groupby('country')['hs_percent'].mean().sort_values(ascending=False).plot.bar(figsize=(16,8), color='grey', width = 0.87)\nfor i, v in enumerate(y):\n    ax.text(i-.33,v\/y[i],y[i],fontsize=10,color=\"red\")\n\nplt.title('Rate of hs per country', pad=15, fontsize=20)\nplt.xlabel('x', color = 'w')\nplt.ylabel('Rate', fontsize=14)\nplt.show()","36e85070":"y = df_x['age'][:28].sort_values(ascending = False)\n\nax = df_x.groupby('country')['age'].median().sort_values(ascending=False).plot.bar(figsize = (16,8), color ='grey', width = 0.87)\n\nfor i, v in enumerate(y):\n    ax.text(i-.33,v\/y[i],y[i],fontsize=12,color=\"red\")\n\nplt.title('Median of age players per country', pad=15, fontsize=20)\nplt.ylabel('Age', fontsize=14)\nplt.xlabel('x', color = 'w')\nplt.show()","24e79a7c":"df_x.groupby('country')['kd_ratio'].mean().sort_values(ascending=False).plot.bar(figsize = (16,8), color ='grey')\nplt.title('Kill and death ration per country', fontsize=20, pad = 15)\nplt.xlabel('x', color='w')\nplt.ylabel('Rate', fontsize=16)\nplt.show()","442a2b59":"y = players_stats_clean['player_country'].value_counts().sort_values(ascending= False)[:25]\n\nax = players_stats_clean['player_country'].value_counts().sort_values(ascending= False)[:25].plot.bar(color = 'grey', figsize = (16,8), width = 0.87)\n\nfor i, v in enumerate(y):\n    ax.text(i-.33,v\/y[i],y[i],fontsize=12,color=\"red\")\n\nplt.title('Top 25: Countrys with most players', pad=15, fontsize=20)\nplt.ylabel(\"Amount of pro players\",fontsize=16)\nplt.yticks(fontsize = 12)\nplt.show()","0a4b955c":"df_x.groupby('country')['kills'].sum().sort_values(ascending=False).plot.bar(figsize = (16,8), color ='grey')\n\n# can't plot numbers.\n\nplt.title('Amount of kill per country', pad= 15, fontsize = 20)\nplt.ylabel('Kills', fontsize=14)\nplt.xlabel('x', color = 'w')\nplt.show()","5dbae1b9":"df_x['age'][:25].sort_values(ascending=True).plot.barh(figsize=(16,8), color='grey')\nplt.title('Top 25: Age of players', pad = 15, fontsize = 20)\nplt.ylabel('x', color = 'w')\nplt.xlabel('Age', fontsize = 16)\nplt.show()","4e6e4f67":"players_stats_clean['total_kills'].sort_values(ascending= True)[:25].plot.barh(figsize = (16,8),color='grey')\nplt.title('Top 25: Players that have most kill', pad = 10, fontsize=20)\nplt.xlabel('Amount of Kills', fontsize = 16)\nplt.ylabel('x',color = 'w')\nplt.show()","57965a54":"df_x['hs_percent'][:25].sort_values(ascending=True).plot.barh(figsize=(16,8), color = 'grey')\nplt.title('Top 25: Best head shot percentage', pad = 15, fontsize = 18)\nplt.xlabel('Rate', fontsize = 16)\nplt.ylabel('x', color = 'w')\nplt.show()","dc963cf3":"players_stats_clean['kills_round'].sort_values(ascending=True)[:25].plot.barh(figsize = (16,8),color='grey')\nplt.title('Top 25: Kills per round', pad = 10, fontsize=20)\nplt.xlabel('Rate',fontsize=16)\nplt.ylabel('x',color = 'w')\nplt.show()","153eff68":"df_x","6375fbbe":"df_x.groupby('age')['hs_percent'].mean().sort_values(ascending=False).plot.bar(figsize = (16,8), color ='grey')\nplt.title('Rate of head shot per age', pad = 15, fontsize = 20)\nplt.xlabel('Age', fontsize = 16)\nplt.xticks(rotation = 0)\nplt.ylabel('Rate', fontsize =16)\nplt.show()","8222f3a5":"df_x.groupby('age')['impact'].mean().sort_values(ascending=False).plot.bar(figsize = (16,8), color ='grey')\nplt.title('Rate of impact per age', pad = 15, fontsize = 20)\nplt.xlabel('Age', fontsize = 16)\nplt.xticks(rotation = 0)\nplt.ylabel('Rate', fontsize =16)\nplt.show()","c1891c96":"# 2\u00ba Session: Players","434e7656":"**Obviously that fewer players a country has the higher the hs rate, so it's necessary to make a more detailed analysis of this feature.**","18492a66":"**More players, biggest is amount of kills**","cf8e1ec0":"# Countrys","a59c1bef":"# Drop and cleaning the data","d7b9faa4":"# Exploratory analysis of **Counter-Strike Global Offensive**, professional scenario."}}