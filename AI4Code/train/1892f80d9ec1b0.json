{"cell_type":{"d8a2662c":"code","ee339a40":"code","d9e0bea2":"code","caaa9eb4":"code","9856a83c":"code","9079e9a7":"code","19fa1e27":"code","dc79519c":"code","1e4d3b28":"code","1dfc1104":"code","71b2d1ab":"code","56964389":"code","5542c5f1":"code","cd47a3fc":"code","497df5ca":"code","98a7fa0b":"code","c8043488":"code","a2703c4b":"code","4a23cab4":"code","7749868e":"code","9ecb8b4f":"code","ae74ba79":"code","c131b9de":"code","bdf2668f":"code","b6c05ffb":"code","ce314131":"code","dab593d5":"code","3b1ce270":"code","6203d2ba":"code","c815911b":"code","40f24dc2":"code","79818880":"markdown","7197a7da":"markdown","8fb1c13c":"markdown","b0fdb355":"markdown","28496f27":"markdown"},"source":{"d8a2662c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ee339a40":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (train set)\n\n# \ub370\uc774\ud130 \uc704\uce58\ub294 \ub9e8 \ucc98\uc74c \ucee4\ub110\uc744 \uc0dd\uc131\ud588\uc744\ub54c \uc791\uc131\ub418\uc5b4\uc788\ub294 \ube14\ub85d\uc744 \uc2e4\ud589\ud558\uba74 \ub098\uc628\ub2e4.\ntrain=pd.read_csv(\"\/kaggle\/input\/bike-sharing-demand\/train.csv\")\ntrain.head()","d9e0bea2":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (test set)\ntest=pd.read_csv(\"\/kaggle\/input\/bike-sharing-demand\/test.csv\")\ntest.head()","caaa9eb4":"# train set \ub370\uc774\ud130 \ud615\ud0dc \ud655\uc778\ud558\uae30\n\n# \ub370\uc774\ud130 \uc2ac\ub77c\uc774\uc2f1 : \ub370\uc774\ud130\uc774\ub984[\"\uc5f4\uc774\ub984\",\"\uc5f4\uc774\ub984\"...]\n# pd.to_datetime\uc73c\ub85c \ub0a0\uc9dc\ubcc0\uc218\ub85c \ubcc0\ud658\ud558\uba74 dt\uac1d\uccb4\uc5d0 \uc5f0\ub3c4 \uc815\ubcf4\ub294 year, \uc694\uc77c \uc815\ubcf4\ub294 weekday\uc5d0 \uc800\uc7a5\ub41c\ub2e4. \ucc38\uace0\ub85c weekday\uc911 Monday=0, Sunday=6 \uc774\ub2e4.\ntrain[\"datetime\"] = pd.to_datetime(train[\"datetime\"])\ntrain[\"dateyear\"] = train[\"datetime\"].dt.year\ntrain[\"weekday\"] = train[\"datetime\"].dt.weekday\ntrain[\"hour\"] = train[\"datetime\"].dt.hour\n\n\ntrain.dtypes","9856a83c":"# \ub370\uc774\ud130 \uc55e\ubd80\ubd84 \ud655\uc778\ntrain.head()","9079e9a7":"# \ube48\ub3c4\ubd84\uc11d\ntrain[\"weekday\"].value_counts()","19fa1e27":"train[\"dateyear\"].value_counts()","dc79519c":"# \uc694\uc77c\ubcc4 \uc790\uc804\uac70 \ub300\uc5ec\ub7c9\uc758 \ud3c9\uade0, \uc911\uc559\uac12\nprint(train.groupby(\"weekday\")[\"count\"].mean())\nprint(train.groupby(\"weekday\")[\"count\"].median())","1e4d3b28":"train.groupby(\"holiday\")[\"count\"].mean()","1dfc1104":"print(train[\"weekday\"].value_counts())\ntrain[\"holiday\"].value_counts()","71b2d1ab":"# \nweekend_df = train[train[\"workingday\"] == 0]\nweekday_df = train[train[\"workingday\"] == 1]","56964389":"train2 = train.drop([\"datetime\",\"casual\",\"registered\",\"count\"],axis = 1)\ntrain.head()\ntrain2.head()","5542c5f1":"# test set \ub370\uc774\ud130 \ud615\ud0dc \ud655\uc778\ud558\uae30\ntest[\"datetime\"] = pd.to_datetime(test[\"datetime\"])\ntest.dtypes","cd47a3fc":"# datetime \uceec\ub7fc object \ud0c0\uc785\uc5d0\uc11c datetime\uc73c\ub85c \ubcc0\ud658\n\ntest[\"dateyear\"] = test[\"datetime\"].dt.year\ntest[\"weekday\"] = test[\"datetime\"].dt.weekday\n# test[\"month\"] = test[\"datetime\"].dt.month\n# test[\"day\"] = test[\"datetime\"].dt.day\ntest[\"hour\"] = test[\"datetime\"].dt.hour\n\n\ntest.head()","497df5ca":"test2 = test.drop([\"datetime\"],axis = 1)\ntest2.head()","98a7fa0b":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize = (10,6))\nsns.boxplot(weekend_df[\"hour\"],train[\"count\"])","c8043488":"# \uc815\ub2f5\uac12\uc774 \uc67c\ucabd\uc73c\ub85c \uce58\uc6b0\ucce4\uc744\ub54c \ub85c\uadf8\ubcc0\ud658\uc744 \ud1b5\ud574 \uc815\uaddc\ubd84\ud3ec\uc5d0 \uac00\uae4c\uc6b4 \ud615\ud0dc\ub85c \ubcc0\ud658\ud574\uc900\ub2e4.\nplt.figure(figsize = (10,6))\nsns.distplot(train[\"count\"])","a2703c4b":"plt.figure(figsize = (10,6))\nsns.distplot(np.log(train[\"count\"]))","4a23cab4":"plt.figure(figsize = (10,6))\nsns.boxplot(weekday_df[\"hour\"],train[\"count\"])","7749868e":"# from sklearn.ensemble import RandomForestRegressor  # \uc0ac\uc774\ud0b7\ub7f0 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8 \n# rf = RandomForestRegressor(n_estimators = 100)      # n_estimators : \ud2b8\ub9ac\uc758 \uac2f\uc218 \uc9c0\uc815\n# rf.fit(train2,np.log(train[\"count\"]))                       # train2 \ub370\uc774\ud130\uc5d0\uc11c count\uc5f4\uc744 \uae30\uc900\uc73c\ub85c \ubaa8\ub378 \ud559\uc2b5  \n# result = rf.predict(test2)                          ","9ecb8b4f":"# from lightgbm import LGBMRegressor\n# lgb = LGBMRegressor()\n# lgb.fit(train2,np.log(train[\"count\"]))                       # train2 \ub370\uc774\ud130\uc5d0\uc11c count\uc5f4\uc744 \uae30\uc900\uc73c\ub85c \ubaa8\ub378 \ud559\uc2b5  \n# result = lgb.predict(test2)","ae74ba79":"train2.head()","c131b9de":"test2.head()","bdf2668f":"from xgboost import XGBRegressor\nxgb = XGBRegressor(max_depth = 6)\nxgb.fit(train2,np.log(train[\"count\"]))                         \nresult = xgb.predict(test2)","b6c05ffb":"sub = pd.read_csv(\"\/kaggle\/input\/bike-sharing-demand\/sampleSubmission.csv\")\nsub.head()","ce314131":"sub[\"count\"] = np.exp(result)\nsub.head()","dab593d5":"sub.to_csv(\"sub.csv\",index = False)","3b1ce270":"pd.Series(xgb.feature_importances_,index = train2.columns).sort_values(ascending = False)","6203d2ba":"train.head()","c815911b":"train[\"month\"] = train[\"datetime\"].dt.month","40f24dc2":"plt.figure(figsize = (10,6))\nsns.barplot(train[\"month\"],train[\"count\"])","79818880":"# train set \uc804\ucc98\ub9ac","7197a7da":"# \ubaa8\ub378\ub9c1","8fb1c13c":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","b0fdb355":"# test set \uc804\ucc98\ub9ac","28496f27":"# \ub370\uc774\ud130 \uc2dc\uac01\ud654"}}