{"cell_type":{"9c7d7939":"code","97928db4":"code","b63f5a4a":"code","838b8da3":"code","0e4b6c65":"code","0317587d":"code","c3fda5b0":"code","252d7983":"code","2eeba561":"code","55565c85":"code","928f97ec":"code","27ad5939":"code","1a66690f":"code","83adfac3":"code","6cb930dd":"code","b1944450":"code","68cd1049":"code","44772671":"code","4e771979":"code","97a8ae3b":"code","90e34553":"code","f9576d47":"code","9955630a":"code","b6bcffdf":"code","b9066120":"markdown","d4677ee9":"markdown","02e22a08":"markdown"},"source":{"9c7d7939":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","97928db4":"df = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","b63f5a4a":"df.head()","838b8da3":"#Honestly this is whole data I need to predict the quality, but I have to be more professional ;)","0e4b6c65":"df['quality'].unique()","0317587d":"df['quality'] = df['quality']-2","c3fda5b0":"df['quality'].unique()","252d7983":"df.info()","2eeba561":"for column in df.columns:\n    print(f\"{str(column)}: mean:{round(df[column].mean(),3)}: std:{round(df[column].std(),3)}\\n\")","55565c85":"plt.figure(figsize=(20,20))\nsns.heatmap(df.corr(method='kendall'), annot=True, fmt='.1f',linewidths=2)","928f97ec":"plt.figure(figsize=(20,20))\nsns.heatmap(df.corr(method='spearman'), annot=True, fmt='.1f',linewidths=2)","27ad5939":"distlist = list(df.columns)\ndistlist.remove('quality')\n\nfor x in distlist:\n    plt.figure(figsize=(10,10))\n    sns.displot(data=df, x=df[x], kind=\"kde\", hue=df['quality'], palette=\"Paired\").set(title=f\"Distribution of {x} by quality\")","1a66690f":"plt.figure(figsize=(10,10))\nsns.histplot(data=df, x=df['quality'])","83adfac3":"for x in distlist:\n    group = df.groupby(\"quality\")[x].mean()\n    print(f\"mean value of {x} by {group}\\n\")","6cb930dd":"qualist = list(df['quality'].unique())\nqualist.sort()\n\nfor x in qualist:\n    print(f\"Number of quality {x}: {len(df[df['quality'] == x])}\")","b1944450":"dfml_y = pd.DataFrame(df['quality'])\ndfml_x = df.drop(['quality'],axis=1)","68cd1049":"dfml_x.head()","44772671":"dfml_y.head()","4e771979":"from sklearn.decomposition import PCA\nfrom sklearn import preprocessing\nimport imblearn\nfrom imblearn.under_sampling import RandomUnderSampler\nfrom imblearn.over_sampling import RandomOverSampler\n\npca_95pc = PCA(n_components=2)\ndf_pca = pca_95pc.fit_transform(dfml_x)\nprint(pca_95pc.explained_variance_ratio_.sum())\nprint(df_pca.shape)","97a8ae3b":"rs = RandomOverSampler(random_state=42)\nx_rs, y_rs = rs.fit_resample(df_pca, dfml_y)\n\nprint('original dataset shape:', len(dfml_y))\nprint('Resample dataset shape', len(y_rs))","90e34553":"dfml_yb = y_rs['quality']\ndfml_xb = x_rs","f9576d47":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier","9955630a":"model = RandomForestClassifier()\npred = cross_val_predict(model, dfml_xb, dfml_yb, cv=10)\n\nprint(classification_report(dfml_yb, pred))\nprint(confusion_matrix(dfml_yb, pred))","b6bcffdf":"model = RandomForestClassifier()\n\nparam_grid = [\n    {'n_estimators': [200, 500, 1000],\n    'max_features': ['auto', 'sqrt', 'log2'],\n    'max_depth' : [4,6,8,12,16],\n    'criterion' :['gini', 'entropy'],}\n]\n\nclf = GridSearchCV(model, param_grid = param_grid, cv=10, verbose=True)\nlm = clf.fit(dfml_xb, dfml_yb)\n\nprint('Best cross validation score: {}'.format(lm.best_score_))\nprint('Optimal parameters: {}'.format(lm.best_params_))","b9066120":"So my algorithms are able to identify quality of wine- cool. Of course there is a little inaccuracy with 3,4 grade but for someone the excact wine is \"3\" and for another tester is \"4\".","d4677ee9":"So the quality is most dependent on alcohol, volatile acidity and sulphates\n\nalcohol is correlated to density\nvolatile acidity to citric acid\nsulphates to chlorides, citric acid and volatile acidity\n\nbut density citric acid and chlorides are not strongly correlated with quality","02e22a08":"So the will be 2 difficulites with ML:\n1. The data is unbalanced so I have to balance them\n2. Too many columns but PCA can handle it"}}