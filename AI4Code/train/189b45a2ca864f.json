{"cell_type":{"13f9b21f":"code","83072282":"code","f14751b0":"code","b5acb0d3":"code","dc4e4c5e":"code","7e00e6c3":"code","8c5ff1e7":"code","64afe7fe":"code","a1537769":"code","deac7ac5":"code","e66745f5":"code","86b30f17":"code","7c3d360e":"code","952f86d6":"code","5b2a6a4a":"code","f0abbb37":"code","e08c60b9":"code","31b330a1":"code","9c4f2c75":"markdown","197859b2":"markdown","59a98fbd":"markdown","a3fec051":"markdown","34a83c57":"markdown","e8874ddc":"markdown","5d8c1b68":"markdown"},"source":{"13f9b21f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83072282":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f14751b0":"TopProductionMethod = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopProductionMethods.csv\");\nTopDistributors = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopDistributors.csv\");\nTopGenres = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGenres.csv\");\nPopularCreativeTypes = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/PopularCreativeTypes.csv\");\nTopGrossingRatings = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGrossingRatings.csv\");\nTopGrossingSources = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGrossingSources.csv\");\nHighestGrossers = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/HighestGrossers.csv\");\nAnnualTicketSales = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/AnnualTicketSales.csv\",thousands = ',');\nWideReleasesCount = pd.read_csv(\"\/kaggle\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/WideReleasesCount.csv\");","b5acb0d3":"AnnualTicketSales.head()","dc4e4c5e":"AnnualTicketSales['TOTAL BOX OFFICE'] = AnnualTicketSales['TOTAL BOX OFFICE'].str.replace(',', '')\nAnnualTicketSales['TOTAL BOX OFFICE'] = AnnualTicketSales['TOTAL BOX OFFICE'].str.replace('$', '')\n\nAnnualTicketSales['TOTAL INFLATION ADJUSTED BOX OFFICE'] = AnnualTicketSales['TOTAL INFLATION ADJUSTED BOX OFFICE'].str.replace(',', '')\nAnnualTicketSales['TOTAL INFLATION ADJUSTED BOX OFFICE'] = AnnualTicketSales['TOTAL INFLATION ADJUSTED BOX OFFICE'].str.replace('$', '')\n\nAnnualTicketSales['AVERAGE TICKET PRICE'] = AnnualTicketSales['AVERAGE TICKET PRICE'].str.replace('$', '')\n\nAnnualTicketSales.drop('Unnamed: 5', axis = 1 , inplace = True)","7e00e6c3":"AnnualTicketSales.head()","8c5ff1e7":"AnnualTicketSales[\"TOTAL BOX OFFICE\"] = AnnualTicketSales[\"TOTAL BOX OFFICE\"].astype(str).astype(int)","64afe7fe":"AnnualTicketSales.info()","a1537769":"AnnualTicketSales.isnull().sum()","deac7ac5":"ax = sns.catplot(y=\"TICKETS SOLD\", x=\"YEAR\", kind=\"bar\", data=AnnualTicketSales, height=6, aspect=3)\nplt.ylabel(\"TICKETS SOLD in billion\")\nplt.grid(True)","e66745f5":"AnnualTicketSales.plot.bar(x='YEAR',y='TOTAL BOX OFFICE')\nplt.ylabel(\"TICKETS SOLD in billion\")\nplt.grid(True)","86b30f17":"HighestGrossers.head()","7c3d360e":"\nHighestGrossers['TOTAL FOR YEAR'] = HighestGrossers['TOTAL FOR YEAR'].str.replace(',', '')\nHighestGrossers['TOTAL FOR YEAR'] = HighestGrossers['TOTAL FOR YEAR'].str.replace('$', '')\n\nHighestGrossers[\"TOTAL FOR YEAR\"] = HighestGrossers[\"TOTAL FOR YEAR\"].astype(str).astype(int)","952f86d6":"df1 = pd.DataFrame(HighestGrossers, columns = ['MOVIE','TOTAL FOR YEAR'])\ndf1.sort_values(by=['TOTAL FOR YEAR'], ascending = False,inplace=True)","5b2a6a4a":"plt.pie(df1['TOTAL FOR YEAR'][0:10],labels = df1['MOVIE'][0:10],autopct='%1.1f%%',explode = (0.05,0.05, 0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.05),radius=3,shadow=True)\n\nplt.show()","f0abbb37":"TopGenres","e08c60b9":"TopGenres['TOTAL GROSS'] = TopGenres['TOTAL GROSS'].str.replace(',', '')\nTopGenres['TOTAL GROSS'] = TopGenres['TOTAL GROSS'].str.replace('$', '')\n\nTopGenres[\"TOTAL GROSS\"] = TopGenres[\"TOTAL GROSS\"].astype(str).astype(int)","31b330a1":"ax = sns.catplot(y=\"TOTAL GROSS\", x=\"GENRES\", kind=\"bar\", data=TopGenres, height=6, aspect=3)\nplt.ylabel(\"TOTAL GROSS \")\nplt.title(\"Popular Genres\")\n","9c4f2c75":"# TopGenres","197859b2":"# Thank you !!\nPlease ****UPVOTE**** if you liked my work !!","59a98fbd":"# AnnualTicketSales","a3fec051":"# Import Dependencies","34a83c57":"# Reading CSV file","e8874ddc":"**Top 10 Movies of all Time by Total earnings.**","5d8c1b68":"# HighestGrossers"}}