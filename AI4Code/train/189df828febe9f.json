{"cell_type":{"51b022f0":"code","1c4d1206":"code","9e3cc241":"code","ea2b5f9e":"code","f6f0a58d":"code","f374847f":"code","7474fe54":"code","28687630":"code","05c36e21":"code","b9192197":"code","1a14e1b1":"code","7066ed43":"code","f88302d1":"code","569ca24e":"markdown","8e42a08f":"markdown","eda1c993":"markdown","37df4f52":"markdown","e282f7e8":"markdown","46e27ab4":"markdown","a0e7243e":"markdown"},"source":{"51b022f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1c4d1206":"data = pd.read_csv('..\/input\/mushrooms.csv')\n#our Data File is Loaded into 'data'\n#lets check our loaded Data By Following Command\ndata.head(4)","9e3cc241":"#To Get Full Information Of the data\ndata.info()","ea2b5f9e":"# In this data We can find some null data like '?'\n#'veil-type' and 'stalk-root' has Some NaN values \n#so Delete these 2 columns from the data\ndata.drop('veil-type',axis=1,inplace=True)\ndata.drop('stalk-root',axis=1,inplace=True)\ndata.info()","f6f0a58d":"# data purification is Done\n#Now Lets Move On to the next step","f374847f":"#First Column Is Our Target\n#It Has 2 Catagories ('p','e')\ndata['class'].unique()","7474fe54":"#In Machine Learning , we Need To Transform Every Data Into Integer of float\n#because In ML,Only Numbers Are The Valid ones\n#Our Given Data Is In The Form Of Strings\n#SO Lets Convert All Our data in 'numbers' form\n\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nfor i in data.columns:\n    data[i] = le.fit_transform(data[i])\ndata.head(5)","28687630":"# We need features and labels to perform Our Further Process\n# Our Target Is 'class' Column\nY = data['class']\n# Except 'class' column all are features \ndata1 = data\ndata1.drop('class',axis=1,inplace=True)","05c36e21":"data1.head(5)","b9192197":"# we done with droping 'class' column from data\n# So Remained Data is belongs to 'features'\n#now load data1 into 'X'\nX = data1\nX.head(5)","1a14e1b1":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,Y,random_state=42,test_size=0.33)","7066ed43":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train,y_train)\nmodel.score(X_test,y_test)","f88302d1":"# Let's Take another model\nfrom sklearn import svm\nmodel = svm.SVC(kernel='rbf',gamma=0.3,C=1)\nmodel.fit(X_train,y_train)\nmodel.score(X_test,y_test)","569ca24e":" **2) Strings to Numbers**","8e42a08f":"**4) Spliting Your Data**","eda1c993":"**5) Model Selection And Predicting**","37df4f52":"**1) Data Purification**","e282f7e8":"**we got 99% Accuracy!!!!!!**","46e27ab4":"**3) Labels and Features**","a0e7243e":"#**Firstly Load Our data in file"}}