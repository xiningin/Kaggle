{"cell_type":{"16f093b2":"code","db728e91":"code","b88680c0":"code","13b967bf":"code","892db0b4":"code","eaaf46db":"code","666763a4":"code","8c68baeb":"code","0fbdd9fe":"code","0c9cd07c":"code","cc612f5e":"code","9f295b0d":"code","8ed686b4":"code","24ef5c9a":"code","981856be":"code","19e8c402":"code","8b4f95cb":"code","c8d4bec5":"code","1fc8214d":"code","8c9d6a87":"code","65983961":"code","5c3d9f6d":"code","06593635":"code","116ade0a":"code","ddfe17ce":"code","d5a4f58c":"code","6e60d8be":"code","fb466506":"code","d72fcee5":"code","8e8ad3a2":"code","99c42015":"code","a03236d7":"code","05718a87":"code","324e7a90":"code","b2fb00be":"code","db74a597":"code","f52da457":"code","b649506d":"code","83350f07":"code","05d2f58e":"code","b9b866c3":"code","b8b5dd81":"code","48aa9284":"code","8c8617ff":"code","afcc5865":"code","a16ae50d":"code","b68baaf8":"code","f209a2c8":"code","b7fefc86":"markdown","0abfd376":"markdown","bf0e4ed5":"markdown","e746e46c":"markdown","87a38937":"markdown","8afb24c0":"markdown","fb0ff0c6":"markdown","94288a23":"markdown","9d3d63c7":"markdown","6387dc4f":"markdown","bdd43e61":"markdown","20530eb9":"markdown","5f34f25a":"markdown","7ea72aa2":"markdown","1fb8edf2":"markdown","c86ec5eb":"markdown","6b7e1cb5":"markdown","dab66ae1":"markdown","b4db798b":"markdown","e405a7f1":"markdown","7392b27f":"markdown","ed05a793":"markdown"},"source":{"16f093b2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\nimport warnings\nwarnings.filterwarnings('ignore')\n","db728e91":"pima = pd.read_csv(\"..\/input\/diabetes.csv\")\npima.head()","b88680c0":"pima_original = pima.copy()","13b967bf":"pima.shape","892db0b4":"pima.describe()","eaaf46db":"pima.isnull().sum()","666763a4":"pima.columns","8c68baeb":"pima.dtypes","0fbdd9fe":"pima.hist(figsize=(10,8))","0c9cd07c":"pima[\"Outcome\"].size","cc612f5e":"pima['Outcome'].value_counts()","9f295b0d":"pima[\"Outcome\"].value_counts(normalize=True).plot.bar(title='Outcome')\npima[\"Outcome\"].value_counts(normalize=True)*100","8ed686b4":"pima['Pregnancies'].value_counts()","24ef5c9a":"pima[\"Pregnancies\"].value_counts(normalize=True).plot.bar(title='Pregnancies')\npima[\"Pregnancies\"].value_counts(normalize=True)*100","981856be":"sns.distplot(pima[\"Age\"])","19e8c402":"sns.distplot(pima[\"BMI\"])","8b4f95cb":"sns.distplot(pima[\"Glucose\"])","c8d4bec5":"sns.distplot(pima[\"BloodPressure\"])","1fc8214d":"sns.distplot(pima[\"SkinThickness\"])","8c9d6a87":"sns.distplot(pima[\"Insulin\"])","65983961":"sns.distplot(pima[\"DiabetesPedigreeFunction\"])","5c3d9f6d":"age = pd.crosstab(pima[\"Age\"],pima[\"Outcome\"])\nage.div(age.sum(1).astype(float),axis=0).plot(kind=\"bar\",stacked=True,figsize=(17,15))\nplt.xlabel(\"Age\")\nplt.ylabel(\"Outcome\")\nplt.show()","06593635":"pregnencies = pd.crosstab(pima[\"Pregnancies\"],pima[\"Outcome\"])\npregnencies.div(pregnencies.sum(1).astype(float),axis=0).plot(kind=\"bar\",stacked=True,figsize=(8,8))\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"Outcome\")\nplt.show()","116ade0a":"glucose = pd.crosstab(pima[\"Glucose\"],pima[\"Outcome\"])\nglucose.div(glucose.sum(1).astype(float),axis=0).plot(kind=\"bar\",stacked=True,figsize=(27,30))\nplt.xlabel(\"Glucose\")\nplt.ylabel(\"Outcome\")\nplt.show()","ddfe17ce":"bloodpressure = pd.crosstab(pima[\"BloodPressure\"],pima[\"Outcome\"])\nbloodpressure.div(bloodpressure.sum(1).astype(float),axis=0).plot(kind=\"bar\",stacked=True,figsize=(14,7))\nplt.xlabel(\"BloodPressure\")\nplt.ylabel(\"Outcome\")\nplt.show()","d5a4f58c":"pima.columns","6e60d8be":"X = pima.drop('Outcome',axis=1)","fb466506":"X.columns","d72fcee5":"X.head(3)","8e8ad3a2":"y=pima['Outcome']","99c42015":"y.head(3)","a03236d7":"from sklearn.model_selection import train_test_split","05718a87":"from sklearn.metrics import accuracy_score","324e7a90":"x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=1)","b2fb00be":"from sklearn.linear_model import LogisticRegression","db74a597":"logistic_model = LogisticRegression()","f52da457":"logistic_model.fit(x_train,y_train)","b649506d":"print(logistic_model.score(x_train,y_train)*100)","83350f07":"pred_logistic=logistic_model.predict(x_test)","05d2f58e":"score_logistic = accuracy_score(pred_logistic,y_test)*100","b9b866c3":"score_logistic","b8b5dd81":"from sklearn.tree import DecisionTreeClassifier","48aa9284":"tree_model = DecisionTreeClassifier()","8c8617ff":"tree_model.fit(x_train,y_train)","afcc5865":"print(tree_model.score(x_train,y_train))","a16ae50d":"tree_pred = tree_model.predict(x_test)","b68baaf8":"tree_score = accuracy_score(tree_pred,y_test)","f209a2c8":"tree_score","b7fefc86":"# Shape of the data set","0abfd376":"# Read the data set","bf0e4ed5":"size of outcome variable is 768","e746e46c":"# Logistics Regression","87a38937":"We can see there are two format of data types:","8afb24c0":"# Print the data types","fb0ff0c6":"\"0\" means who have no diabetes\n\nand \"1\" meas who have diabetes.\n\n500 people have no diabetes and 268 people have diabetes.","94288a23":"# Description of the data set","9d3d63c7":"# Target Variable","6387dc4f":"from the data set we see that it has 768 rows and 9 column or attribute ","bdd43e61":"In this section, we will do univariate analysis. It is the simplest form of analyzing data where we examine each variable individually.","20530eb9":"float64: It represents the variable which have some decimal values involved. They are also numerical variables. Numerical variables in our dataset are: BMI , DiabetesPedigreeFunction .","5f34f25a":"There is no null value","7ea72aa2":"We have 8 independent variables and 1 target variable, i.e. Outcome in the train dataset.","1fb8edf2":"# Decision Tree","c86ec5eb":"# Copy of original data","6b7e1cb5":"# Import required packages","dab66ae1":"int64: It represents the integer variables. Pregnancies, Glucose , BloodPressure, SkinThickness , Insulin, Age , Outcome  is of this format.","b4db798b":"From the grapch we see that about 65% people have no diabetes and 35% people have diabetes.","e405a7f1":"# Univariate Analysis","7392b27f":"# Understanding the Data","ed05a793":"# Model Building :"}}