{"cell_type":{"d3d31ae5":"code","a76bcf52":"code","1b73578f":"code","b14392de":"code","3e2743be":"code","d1d269f3":"code","cfffca65":"code","95fcfc2d":"code","441f5526":"code","09d952f6":"code","b6edabe1":"code","cce79cc3":"code","d94053e0":"code","91407490":"code","043d8d00":"code","8547a670":"code","6c52fa7e":"code","68f8544d":"code","5d6e2605":"code","0c4f7bcb":"code","13b0a072":"code","414eca58":"code","51bfeb0f":"code","c261c2f6":"code","5a462979":"code","380027fd":"code","cd889c74":"code","6545afcb":"code","089f1a83":"code","05999aa0":"markdown","de50fce8":"markdown","f5a5fdcb":"markdown"},"source":{"d3d31ae5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a76bcf52":"import warnings\nwarnings.filterwarnings('ignore')","1b73578f":"dataset = pd.read_csv('\/kaggle\/input\/german-house-prices\/germany_housing_data_14.07.2020.csv')\ndataset.head()","b14392de":"dataset.describe()","3e2743be":"dataset.info()","d1d269f3":"dataset.nunique()","cfffca65":"dataset.shape","95fcfc2d":"dataset.isna().sum()","441f5526":"col_to_fill_zero = ['Usable_area', 'Free_of_Relation', 'Bedrooms', 'Bathrooms', 'Floors', 'Furnishing_quality', 'Year_renovated', 'Energy_source', 'Energy_certificate_type', 'Energy_consumption', 'Energy_efficiency_class']\n\ndataset[col_to_fill_zero] = dataset[col_to_fill_zero].fillna(0)","09d952f6":"dataset.isna().sum()","b6edabe1":"dataset['Year_built'] = dataset['Year_built'].fillna(dataset.Year_built.mean())\ndataset['Garages'] = dataset['Garages'].fillna(dataset.Garages.mean())","cce79cc3":"dataset.isna().sum()","d94053e0":"dataset.dropna(inplace=True)","91407490":"dataset.isna().sum()","043d8d00":"dataset = pd.get_dummies(dataset, drop_first=True)","8547a670":"dataset.head()","6c52fa7e":"X = dataset.drop('Price', axis = 'columns')\ny = dataset.Price","68f8544d":"len(X), len(y)","5d6e2605":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","0c4f7bcb":"len(X_train), len(X_test)","13b0a072":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\ny_predict = model.predict(X_test)","414eca58":"model.score(X_train, y_train)","51bfeb0f":"model.score(X_test, y_test)","c261c2f6":"from sklearn import linear_model\nlasso_reg = linear_model.Lasso()\nlasso_reg.fit(X_train, y_train)\ny_predict = lasso_reg.predict(X_test)","5a462979":"lasso_reg.score(X_train, y_train)","380027fd":"lasso_reg.score(X_test, y_test)","cd889c74":"from sklearn.linear_model import Ridge\nridge_reg = Ridge()\nridge_reg.fit(X_train, y_train)\ny_predict = ridge_reg.predict(X_test)","6545afcb":"ridge_reg.score(X_train, y_train)","089f1a83":"ridge_reg.score(X_test, y_test)","05999aa0":"## by using Linear Regression","de50fce8":"## by using L1 Regularization","f5a5fdcb":"## by using L2 Regularization"}}