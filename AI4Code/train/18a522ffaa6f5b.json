{"cell_type":{"1a91c58c":"code","e303caca":"code","ce5d4444":"code","20ae15e9":"code","28802e4e":"code","963537c2":"code","67804262":"code","8fe25090":"code","9772c2cc":"code","bef8aee9":"code","df98121d":"code","4b6a6fc5":"code","8853b5c5":"code","c2924976":"code","d6922c9c":"code","21bd15b8":"code","a8c98d08":"code","d6dc4316":"code","be14321b":"code","ddb4f0cd":"code","75f492e0":"code","8d88df52":"code","9da56ef5":"markdown","1408d8da":"markdown","73ada3d6":"markdown","75798f48":"markdown","1707f3b1":"markdown","16a8bc6b":"markdown","c0950333":"markdown","e687914b":"markdown","72d456f0":"markdown","d9bfb0f4":"markdown"},"source":{"1a91c58c":"# make sure we have the latest seaborb package\n!pip install seaborn --upgrade","e303caca":"# should be version 11\nimport seaborn as sns\nsns.__version__","ce5d4444":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","20ae15e9":"df = pd.read_csv('\/kaggle\/input\/employee-attrition\/WA_Fn-UseC_-HR-Employee-Attrition.csv')","28802e4e":"df.info()","963537c2":"# get the dtype and unique values for each column of the data frame\nfor feat in df.columns:\n    print(feat)\n    print(df[feat].dtype)\n    print(df[feat].unique())\n    print('#'*30)","67804262":"df.drop(columns=['EmployeeCount', 'Over18', 'EmployeeNumber', 'StandardHours'], inplace=True)","8fe25090":"list_ratio = ['Age', 'DailyRate', 'DistanceFromHome', 'HourlyRate', 'MonthlyIncome', 'MonthlyRate', 'NumCompaniesWorked',\n              'PercentSalaryHike', 'TotalWorkingYears', 'TrainingTimesLastYear', 'YearsAtCompany', 'YearsInCurrentRole',\n              'YearsSinceLastPromotion', 'YearsWithCurrManager']\nlist_binary = ['Gender', 'OverTime']\nlist_cat = ['BusinessTravel', 'Department', 'EducationField', 'JobRole', 'MaritalStatus']\nlist_ord = ['Education', 'EnvironmentSatisfaction', 'JobInvolvement', 'JobLevel', 'JobSatisfaction', 'PerformanceRating',\n            'RelationshipSatisfaction', 'StockOptionLevel', 'WorkLifeBalance']","9772c2cc":"len(list_ratio)","bef8aee9":"# make a grid space \nfig, axes = plt.subplots(nrows=5, ncols=3, figsize=(18,12))\n# hspace lets us see the names of each feature\nfig.subplots_adjust(hspace=0.5)\n# gives the plot a title\nfig.suptitle('Numeric features against the target')\n# for loop to populate each subplot with a chart\nfor feat, ax in zip(list_ratio, axes.flatten()):\n    sns.histplot(data=df, x=feat, hue='Attrition', ax=ax)","df98121d":"list_binary","4b6a6fc5":"fig, axes = plt.subplots(1, 2, figsize=(12,4))\nfig.suptitle('Binary features against the target')\nfor feat, ax in zip(list_binary, axes.flatten()):\n    sns.countplot(data=df, x=feat, hue='Attrition', ax=ax)","8853b5c5":"len(list_cat)","c2924976":"fig, axes = plt.subplots(3, 2, figsize=(14, 10))\nfig.subplots_adjust(hspace=0.8)\nfig.suptitle('categorical varibles against the target')\nfor feat, ax in zip(list_cat, axes.flatten()):\n    sns.countplot(data=df, x=feat, hue='Attrition', ax=ax)\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=20, horizontalalignment='right')","d6922c9c":"# creat dummy varibales\nlist_dummy = list(df.select_dtypes('object'))\ndf = pd.get_dummies(df, columns=list_dummy, drop_first=True)","21bd15b8":"# import\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report","a8c98d08":"X = df.drop(columns='Attrition_Yes').values\ny = df['Attrition_Yes']","d6dc4316":"# split data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","be14321b":"# scale data\nscaler = StandardScaler()\nX_train_sc = scaler.fit_transform(X_train)\nX_test_sc = scaler.transform(X_test)","ddb4f0cd":"logreg = LogisticRegression()\nlogreg.fit(X_train_sc, y_train)\nlogreg_pred = logreg.predict(X_test_sc)\n\nprint('accuracy: ', accuracy_score(y_test, logreg_pred))\nprint(confusion_matrix(y_test, logreg_pred))\nprint(classification_report(y_test, logreg_pred))","75f492e0":"# feature importance\nimportance = logreg.coef_\nfor i, v in enumerate(importance.flatten()):\n    print('Feature', i, ':', v)","8d88df52":"rf = RandomForestClassifier()\nrf.fit(X_train_sc, y_train)\nrf_pred = rf.predict(X_test_sc)\n\nprint('accuracy: ', accuracy_score(y_test, rf_pred))\nprint(confusion_matrix(y_test, rf_pred))\nprint(classification_report(y_test, rf_pred))","9da56ef5":"positive scores indicate that a feature predicts class 1, whereas negative scores indicate a feature that predicts class 0","1408d8da":"### Conlusion\n- There seems to be no big differnece between `Gender`\n- Employees how do `OverTime` are more likely to leave","73ada3d6":"## Modeling\n- creat dummy varibales for the categorical variables\n- split data into train and test","75798f48":"### Conclusion\n- Different job roles seem to affect employee attrition ","1707f3b1":"## Conlusion\n- `EmployeeCount`, `Over18`, `StandardHours` only one value -> drop\n- `EmployeeNumber` no predictive value -> drop","16a8bc6b":"### Random Forest","c0950333":"### Logistic Regression","e687914b":"# EDA and Modeling Employee Attrition","72d456f0":"### Conlusion \n- `MonthlyIncome`, `YearsAtCompany` seems to be good indicators","d9bfb0f4":"## Resources\n- https:\/\/www.drawingfromdata.com\/how-to-rotate-axis-labels-in-seaborn-and-matplotlib\n- https:\/\/medium.com\/@rayheberer\/generating-matplotlib-subplots-programmatically-cc234629b648\n- https:\/\/machinelearningmastery.com\/calculate-feature-importance-with-python\/\n- https:\/\/towardsdatascience.com\/explaining-feature-importance-by-example-of-a-random-forest-d9166011959e"}}