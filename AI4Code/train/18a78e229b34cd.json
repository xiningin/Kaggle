{"cell_type":{"479ebf98":"code","2c63ccaa":"code","d8752aeb":"code","613fe30b":"code","9f4cf95c":"code","d8348ecc":"code","74b5ae99":"code","0c0dafb3":"code","7b992c1f":"code","97c54c17":"code","78459247":"code","4634ca24":"code","3e6eaab9":"code","cc4b364a":"code","4e82be9e":"code","a5941b7d":"code","f7da40e9":"code","6da5f4ee":"code","8ea5690d":"code","1a8ec0a2":"code","ac24bc6c":"code","8ec95169":"code","f6d9651f":"code","fcaa7248":"code","fb7664f8":"code","7da9b1ab":"code","4c30b280":"code","8616b438":"code","4c9ef9f2":"code","750175fb":"code","ae4be4dc":"code","320ad8ba":"code","35f59199":"code","681737ba":"code","f20fa7c3":"code","8ee36652":"code","72d12815":"code","28ff368d":"code","7323c9f5":"code","d996f0b2":"code","aa3a335c":"code","ae321e1c":"code","7073fe36":"code","69164d31":"code","757ca214":"code","d17a432a":"code","94108999":"markdown","2aa107cc":"markdown","832a45a1":"markdown","8929b03e":"markdown","585cc0e6":"markdown","aa9c557c":"markdown","b011a0c9":"markdown","3064ec4e":"markdown"},"source":{"479ebf98":"fldr=\"..\/input\/utkface-new\/UTKFace\"","2c63ccaa":"import os\nfiles=os.listdir(fldr)\nprint(int(files[0].split('_')[0]))\nprint(files[0])","d8752aeb":"import cv2\nages=[]\ngenders=[]\nimages=[]\n\nfor i, fle in enumerate(files):\n  age=int(fle.split('_')[0])\n  gender=int(fle.split('_')[1])\n  total=fldr+'\/'+fle\n  image=cv2.imread(total)\n\n  image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n  image= cv2.resize(image,(48,48))\n  images.append(image)\n#   if i % 1000 == 0:\n#     print(i)","613fe30b":"for fle in files:\n  age=int(fle.split('_')[0])\n  gender=int(fle.split('_')[1])\n  ages.append(age)\n  genders.append(gender)","9f4cf95c":"# from google.colab.patches import cv2_imshow\n# cv2_imshow(images[24])","d8348ecc":"print(ages[24])\nprint(genders[24])","74b5ae99":"# cv2_imshow(images[53])","0c0dafb3":"print(ages[53])\nprint(genders[53])","7b992c1f":"import numpy as np\nimages_f=np.array(images)\ngenders_f=np.array(genders)\nages_f=np.array(ages)","97c54c17":"np.save('\/kaggle\/working\/image.npy',images_f)\nnp.save('\/kaggle\/working\/gender.npy',genders_f)\nnp.save('\/kaggle\/working\/age.npy',ages_f)","78459247":"values, counts = np.unique(genders_f, return_counts=True)\nprint(counts)","4634ca24":"import matplotlib.pyplot as plt\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\ngender = ['Male', 'Female']\nvalues=[4372,5047]\nax.bar(gender,values)\nplt.show()","3e6eaab9":"values, counts = np.unique(ages_f, return_counts=True)\nprint(counts)","cc4b364a":"val=values.tolist()\ncnt=counts.tolist()","4e82be9e":"plt.plot(counts)\nplt.xlabel('ages')\nplt.ylabel('distribution')\nplt.show()","a5941b7d":"labels=[]\n\ni=0\nwhile i<len(ages):\n  label=[]\n  label.append([ages[i]])\n  label.append([genders[i]])\n  labels.append(label)\n  i+=1","f7da40e9":"images_f_2=images_f\/255\nlabels_f=np.array(labels)\nimages_f_2.shape","6da5f4ee":"import tensorflow as tf\nfrom sklearn.model_selection import train_test_split","8ea5690d":"X_train, X_test, Y_train, Y_test= train_test_split(images_f_2, labels_f,test_size=0.25)","1a8ec0a2":"Y_train[0:5]","ac24bc6c":"Y_train_2=[Y_train[:,1],Y_train[:,0]]\nY_test_2=[Y_test[:,1],Y_test[:,0]]","8ec95169":"Y_train_2[0][0:5]","f6d9651f":"Y_train_2[1][0:5]","fcaa7248":"from tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import Flatten,BatchNormalization\nfrom tensorflow.keras.layers import Dense, MaxPooling2D,Conv2D\nfrom tensorflow.keras.layers import Input,Activation,Add\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.regularizers import l2\nfrom tensorflow.keras.optimizers import Adam\nimport tensorflow as tf\n\ndef Convolution(input_tensor,filters):\n    \n    x = Conv2D(filters=filters,kernel_size=(3, 3),padding = 'same',strides=(1, 1),kernel_regularizer=l2(0.001))(input_tensor)\n    x = Dropout(0.1)(x)\n    x= Activation('relu')(x)\n\n    return x\ndef model(input_shape):\n  inputs = Input((input_shape))\n  \n  conv_1= Convolution(inputs,32)\n  maxp_1 = MaxPooling2D(pool_size = (2,2)) (conv_1)\n  conv_2 = Convolution(maxp_1,64)\n  maxp_2 = MaxPooling2D(pool_size = (2, 2)) (conv_2)\n  conv_3 = Convolution(maxp_2,128)\n  maxp_3 = MaxPooling2D(pool_size = (2, 2)) (conv_3)\n  conv_4 = Convolution(maxp_3,256)\n  maxp_4 = MaxPooling2D(pool_size = (2, 2)) (conv_4)\n  flatten= Flatten() (maxp_4)\n  dense_1= Dense(64,activation='relu')(flatten)\n  dense_2= Dense(64,activation='relu')(flatten)\n  drop_1=Dropout(0.2)(dense_1)\n  drop_2=Dropout(0.2)(dense_2)\n  output_1= Dense(1,activation=\"sigmoid\",name='sex_out')(drop_1)\n  output_2= Dense(1,activation=\"relu\",name='age_out')(drop_2)\n  model = Model(inputs=[inputs], outputs=[output_1,output_2])\n  model.compile(loss=[\"binary_crossentropy\",\"mae\"], optimizer=\"Adam\",\n\tmetrics=[\"accuracy\"])\n  \n  return model\n","fb7664f8":"Model=model((48,48,3))","7da9b1ab":"Model.summary()","4c30b280":"from tensorflow.keras.callbacks import ModelCheckpoint\nimport tensorflow as tf","8616b438":"fle_s='Age_sex_detection.h5'\ncheckpointer = ModelCheckpoint(fle_s, monitor='val_loss',verbose=1,save_best_only=True,save_weights_only=False, mode='auto',save_freq='epoch')\nEarly_stop=tf.keras.callbacks.EarlyStopping(patience=75, monitor='val_loss',restore_best_weights=True),\ncallback_list=[checkpointer,Early_stop]","4c9ef9f2":"History=Model.fit(X_train,Y_train_2,batch_size=64,validation_data=(X_test,Y_test_2),epochs=100,callbacks=[callback_list])","750175fb":"Model.evaluate(X_test,Y_test_2)","ae4be4dc":"pred=Model.predict(X_test)","320ad8ba":"pred[1]","35f59199":"plt.plot(History.history['loss'])\nplt.plot(History.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Validation'], loc='upper left')\nplt.subplots_adjust(top=1.00, bottom=0.0, left=0.0, right=0.95, hspace=0.25,\n                        wspace=0.35)","681737ba":"plt.plot(History.history['sex_out_accuracy'])\nplt.plot(History.history['val_sex_out_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Validation'], loc='upper left')\nplt.subplots_adjust(top=1.00, bottom=0.0, left=0.0, right=0.95, hspace=0.25,\n                        wspace=0.35)","f20fa7c3":"fig, ax = plt.subplots()\nax.scatter(Y_test_2[1], pred[1])\nax.plot([Y_test_2[1].min(),Y_test_2[1].max()], [Y_test_2[1].min(), Y_test_2[1].max()], 'k--', lw=4)\nax.set_xlabel('Actual Age')\nax.set_ylabel('Predicted Age')\nplt.show()","8ee36652":"i=0\nPred_l=[]\nwhile(i<len(pred[0])):\n\n  Pred_l.append(int(np.round(pred[0][i])))\n  i+=1\n","72d12815":"from sklearn.metrics import confusion_matrix \n\nfrom sklearn.metrics import classification_report ","28ff368d":"\nreport=classification_report(Y_test_2[0], Pred_l)","7323c9f5":"print(report)","d996f0b2":"\nresults = confusion_matrix(Y_test_2[0], Pred_l)","aa3a335c":"import seaborn as sns\n\nsns.heatmap(results, annot=True)","ae321e1c":"def test_image(ind,images_f,images_f_2,Model):\n#   cv2_imshow(images_f[ind])\n  plt.imshow(images_f[ind])\n  image_test=images_f_2[ind]\n  pred_1=Model.predict(np.array([image_test]))\n  #print(pred_1)\n  sex_f=['Male','Female']\n  age=int(np.round(pred_1[1][0]))\n  sex=int(np.round(pred_1[0][0]))\n  print(\"Predicted Age: \"+ str(age))\n  print(\"Predicted Sex: \"+ sex_f[sex])\n","7073fe36":"test_image(57,images_f,images_f_2,Model)","69164d31":"test_image(137,images_f,images_f_2,Model)","757ca214":"test_image(502,images_f,images_f_2,Model)","d17a432a":"test_image(24,images_f,images_f_2,Model)","94108999":"#### Training","2aa107cc":"#### For Gender","832a45a1":"### For age","8929b03e":"### Evaluation","585cc0e6":"#### Data Preprocessing","aa9c557c":"### For Gender","b011a0c9":"Male = 0\nFemale= 1","3064ec4e":"### Model"}}