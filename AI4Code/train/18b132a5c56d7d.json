{"cell_type":{"8cac708c":"code","58b3e99a":"code","cce763c1":"code","5ad6a3f3":"code","564a291a":"code","b467e070":"code","dfe8f410":"code","0207a612":"code","d9ad78c6":"code","9ef9261b":"code","5bd7ea08":"code","ad418f47":"code","4f49a898":"code","6953802b":"code","c7dbd6d9":"code","db4c01ca":"code","3f5ebb89":"markdown","933fbb36":"markdown"},"source":{"8cac708c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","58b3e99a":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cce763c1":"df=pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\ndf.head()","5ad6a3f3":"sns.catplot(x=\"Species\", y=\"SepalLengthCm\", data = df)\nsns.catplot(x=\"Species\", y=\"SepalWidthCm\", data = df)\nsns.catplot(x=\"Species\", y=\"PetalLengthCm\", data = df)\nsns.catplot(x=\"Species\", y=\"PetalWidthCm\", data = df)","564a291a":"corrmat = df.corr()\nf, ax = plt.subplots(figsize=(9, 6))\nsns.heatmap(corrmat, vmax=.5, square=True, cmap=\"RdYlGn\", fmt='.1f', linewidth=0.1)","b467e070":"sns.pairplot(df)","dfe8f410":"#label encode the target variable\nencode = LabelEncoder()\ndf.Species = encode.fit_transform(df.Species)","0207a612":"df.head()","d9ad78c6":"train, test = train_test_split(df, test_size=0.2, random_state=0)","9ef9261b":"train.shape, test.shape","5bd7ea08":"train_x=train.drop(columns=['Species'], axis=1)\ntrain_y= train['Species']","ad418f47":"test_x=test.drop(columns=['Species'], axis=1)\ntest_y= test['Species']","4f49a898":"model=LogisticRegression()\nmodel.fit(train_x, train_y)","6953802b":"predict = model.predict(test_x)","c7dbd6d9":"print(test_y[0:10])\nprint(predict[0:10])","db4c01ca":"print(accuracy_score(test_y, predict))","3f5ebb89":"Thank You","933fbb36":"# Learn Classification Technique"}}