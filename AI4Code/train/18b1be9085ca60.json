{"cell_type":{"f79dd5e3":"code","c3dd1a71":"code","c2f7b687":"code","67e35cab":"code","06e5d7c6":"code","97ff59a7":"code","2e677cb4":"code","0e130cd3":"code","65066f43":"code","67637bdf":"code","f1c7711e":"code","0757c2b3":"code","7c795278":"code","1345977d":"code","dc42f06a":"code","d79f3276":"code","9fbae5e2":"code","85d694f7":"code","c8d47a41":"code","c01a4a1a":"code","33c67122":"code","53db2379":"code","37125f4a":"code","5949013c":"code","91671588":"code","502dbb29":"code","3fc785a6":"code","684ca1f7":"code","eb7921db":"code","48c0093f":"code","aff4175c":"code","793b7492":"code","4c474355":"code","d69c240f":"markdown","9d2f8dc7":"markdown","0c152f8a":"markdown","6d987862":"markdown","e594004a":"markdown"},"source":{"f79dd5e3":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot","c3dd1a71":"corona_df = pd.read_csv('..\/input\/covid-19-india-dataset\/covid_19_india.csv')","c2f7b687":"corona_df.head(10)","67e35cab":"corona_df.tail(5)","06e5d7c6":"corona_df.isnull().sum()","97ff59a7":"corona_df.duplicated().sum()\n","2e677cb4":"corona_df.info()","0e130cd3":"corona_df = corona_df.drop(['Sno','Time','ConfirmedIndianNational', 'ConfirmedForeignNational'], axis=1)","65066f43":"corona_df.head()","67637bdf":"corona_df = corona_df.rename(columns={'State\/UnionTerritory':'States','Cured':'Recovered'})","f1c7711e":"corona_df.head()","0757c2b3":"corona_df['Active'] = corona_df['Confirmed'] - corona_df['Recovered'] - corona_df['Deaths']","7c795278":"corona_df = corona_df.sort_values(['Date', 'States']).reset_index(drop=True)","1345977d":"corona_df.head()","dc42f06a":"corona_df['Date'] = pd.to_datetime(corona_df['Date'])","d79f3276":"corona_df.head()\n","9fbae5e2":"corona_df.info()","85d694f7":"india_cases = corona_df[corona_df['Date'] == corona_df['Date'].max()].copy().fillna(0)\nindia_cases.index = india_cases[\"States\"]\nindia_cases = india_cases.drop(['States', 'Date'], axis=1)","c8d47a41":"india_cases.head()","c01a4a1a":"india_cases.sort_values('Confirmed', ascending= False).style\\\n    .background_gradient(cmap='BrBG_r', subset=['Confirmed'])\\\n    .background_gradient(cmap='YlGn_r', subset=[\"Deaths\"])\\\n    .background_gradient(cmap='YlOrBr',subset=['Recovered'])\\\n    .background_gradient(cmap='BuPu', subset=['Active'])","33c67122":"def horizontal_bar_chart(df, x, y, title, x_label, y_label, color):\n    fig = px.bar(df, x=x, y=y, orientation='h', title=title, \n                 labels={x.name: x_label,\n                         y.name: y_label}, color_discrete_sequence=[color])\n    fig.update_layout(yaxis={'categoryorder': 'total ascending'})\n    fig.show()\n","53db2379":"import plotly.express as px","37125f4a":"top_10_indian_confirmed_states = india_cases.sort_values('Confirmed', ascending=False)[:10]\nhorizontal_bar_chart(top_10_indian_confirmed_states,top_10_indian_confirmed_states.Confirmed, top_10_indian_confirmed_states.index,\n                     'Top 10 Indian States (Confirmed Cases)', 'Number of Confirmed cases (in Thousands)','States Name','Teal')\n","5949013c":"top_10_death_states = india_cases.sort_values('Deaths',ascending = False)[:10]\nhorizontal_bar_chart(top_10_death_states,top_10_death_states.Deaths, top_10_death_states.index, 'Top 10 States with most deaths','Number of deaths(In Thousands)','State Name','Red')","91671588":"top_10_indian_recovered_states = india_cases.sort_values('Recovered', ascending=False)[:10]\nhorizontal_bar_chart(top_10_indian_recovered_states, top_10_indian_recovered_states.Recovered, top_10_indian_recovered_states.index,\n                    'Top 10 States (Recovered Cases)', 'Number of Recovered cases (in Thousands)', 'States Name', 'Purple')","502dbb29":"top_10_india_active_states = india_cases.sort_values('Active', ascending=False)[:10]\nhorizontal_bar_chart(top_10_india_active_states, top_10_india_active_states.Active, top_10_india_active_states.index,\n                     'Top 10 States (Active Cases)', 'Number of Active cases (in Thousands)', 'States Name', 'Green')","3fc785a6":"plt.figure(figsize=(10,5))\nsns.kdeplot(corona_df['Confirmed'], color='limegreen', label='Confirmed cases')\nplt.title('Confimed Cases',size=20)\nplt.legend()\nplt.show","684ca1f7":"plt.figure(figsize=(10,5))\nsns.kdeplot(corona_df['Active'], color='black', label='Active Cases'),\nplt.title('Active cases',size=20)\nplt.legend()\nplt.show","eb7921db":"plt.figure(figsize=(10,5))\nsns.kdeplot(corona_df['Deaths'], color='red', label='Deaths Cases'),\nplt.title('Deaths cases',size=20)\nplt.legend()\nplt.show","48c0093f":"plt.figure(figsize=(10,5))\nsns.kdeplot(corona_df['Recovered'], color='purple', label='Recovered'),\nplt.title('Recovered cases',size=20)\nplt.legend()\nplt.show\n\n","aff4175c":"import geopandas as gpd\nfp = '..\/input\/india-2020-gisdata\/Igismap\/Indian_States.shp'\nmap_df = gpd.read_file(fp)\n\n# change state name to match in both files -- I manually checked few\nmap_df['st_nm'].iloc[0]  = 'Andaman and Nicobar Islands'\nmap_df['st_nm'].iloc[12] = 'Jammu and Kashmir'\nmap_df['st_nm'].iloc[6] = 'Dadara and Nagar Havelli'\nmap_df['st_nm'].iloc[23] = 'Delhi'","793b7492":"merged = map_df.set_index('st_nm').join(corona_df.set_index('States'))\n\n#fill NaN values with Zero\n\nmerged[['Confirmed', 'Recovered', 'Deaths']] = merged[['Confirmed', 'Recovered', 'Deaths']].fillna(0).astype('int')","4c474355":"fig, ax = plt.subplots(1, figsize=(23, 19))\nax.axis('on')\nax.set_title('Total COVID-19 cases in India', fontdict={'fontsize': '35', 'fontweight' : '5'})\n\n# plot the figure\nmerged.plot(column='Confirmed', linewidth=0.8, ax=ax, edgecolor='0.8', legend=True)","d69c240f":"![](https:\/\/cdn.pixabay.com\/photo\/2020\/03\/23\/09\/05\/covid-19-4959992_960_720.jpg)","9d2f8dc7":" # Covid 19 - INDIA - Analysis","0c152f8a":"We can See here In India - range of covid cases is start from 80000 - 100000.","6d987862":"![](https:\/\/www.yellowheadinc.com\/wp-content\/uploads\/real-heroes-gif.gif)","e594004a":"# THANK YOU!"}}