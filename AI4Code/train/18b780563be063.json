{"cell_type":{"e8864fc3":"code","d8171fd8":"code","759981ad":"code","525d9d97":"code","2c43ce77":"code","0aaea608":"code","6e03cf3d":"code","234fa185":"code","80312004":"code","590dc2ce":"code","b0989d0d":"code","3d3f9fa6":"code","f62c6dec":"code","c46c5ab9":"code","dac569eb":"code","66bad154":"code","730ec39c":"code","af4ec360":"code","74ca51d0":"code","257a5e0f":"code","7e513667":"code","0327ce17":"code","e9da1650":"code","b4a2d33d":"code","65fac572":"code","7b45bfae":"code","328d4d31":"code","2a234186":"code","d22012ee":"code","58548aea":"code","5668e0c0":"code","2aee0d5c":"markdown","71e794d1":"markdown","be853c2e":"markdown","44cf54a3":"markdown","1914a470":"markdown","ad46fb3d":"markdown","4506cbd0":"markdown","f00be2b0":"markdown","f531e2fc":"markdown","dd3c7e44":"markdown","d31ab9a8":"markdown","1f710b42":"markdown","19f7b8a0":"markdown","3718987f":"markdown","7192d379":"markdown","8d15d44f":"markdown","c3d62736":"markdown","13f48a28":"markdown"},"source":{"e8864fc3":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n#Importing libraries\nimport warnings\nwarnings.filterwarnings('ignore')","d8171fd8":"data=pd.read_csv('https:\/\/raw.githubusercontent.com\/AdiPersonalWorks\/Random\/master\/student_scores%20-%20student_scores.csv')\ndata.head()","759981ad":"data.info()","525d9d97":"data.describe()","2c43ce77":"data.shape","0aaea608":"round(100 * (data.isnull().sum()\/len(data)),2)","6e03cf3d":"round(100 * (data.isnull().sum(axis=1)\/len(data)),2).sort_values(ascending=False)[:10]","234fa185":"data_d=data.copy()\ndata_d.drop_duplicates(subset=None, inplace=True)","80312004":"data_d.shape","590dc2ce":"del data_d\ndata.shape","b0989d0d":"sns.pairplot(data, diag_kind='kde')\nplt.show()","3d3f9fa6":"plt.figure(figsize=(10,5))\nsns.scatterplot(x='Hours',y='Scores',data=data)\nplt.grid()\nplt.show()","f62c6dec":"plt.figure(figsize=(10,5))\nsns.violinplot(x='Hours',data=data)\nplt.show()","c46c5ab9":"plt.figure(figsize=(10,5))\nsns.violinplot(x='Scores',data=data)\nplt.show()","dac569eb":"plt.figure(figsize=(10,5))\nsns.regplot(x='Hours',y='Scores',data=data)\nplt.grid()\nplt.show()","66bad154":"data.Hours.skew()","730ec39c":"# Creating X and Y sets \nX = data['Hours']\ny = data['Scores']","af4ec360":"from sklearn.model_selection import train_test_split\n\n# We should specify 'random_state' so that the train and test data set always have the same rows, respectively\n\nnp.random.seed(0)\nX_train, X_test, y_train, y_test = train_test_split(X,y, train_size = 0.70, random_state = 5)\n","74ca51d0":"# Checking the shapes for all the sets\nprint('X_train: ', X_train.shape)\nprint('X_test: ', X_test.shape)\nprint('y_train: ', y_train.shape)\nprint('y_test: ', y_test.shape)","257a5e0f":"# Reshaping X train set\nX_train = X_train.values.reshape(-1,1)\nX_test = X_test.values.reshape(-1,1)","7e513667":"from sklearn.linear_model import LinearRegression\nlr= LinearRegression()\nlr.fit(X_train,y_train)","0327ce17":"# Displaying model parameters\nprint('Intercept of line: ',round(lr.intercept_,2))\nprint('Coefficent of Hours: ',lr.coef_)","e9da1650":"from sklearn.metrics import r2_score\ny_train_pred = lr.predict(X_train)\nr2score_train = r2_score(y_train,y_train_pred)*100\nprint('Train R2_score: ', round(r2score_train,2))","b4a2d33d":"y_test_pred = lr.predict(X_test)\nr2score_test = r2_score(y_test,y_test_pred)*100\nprint('Train R2_score: ', round(r2score_test,2))","65fac572":"#Error terms are normally distributed\nres = y_train - y_train_pred","7b45bfae":"plt.figure(figsize=(10,5))\nsns.distplot(res)\nplt.title('Error terms',fontweight = 'bold', fontsize = 18)\nplt.show()","328d4d31":"# Error terms should be randomly distributed\nplt.figure(figsize=(10,5))\nplt.scatter(X_train, res)\nplt.title('Randomly distributed error terms',fontweight = 'bold', fontsize = 18)\nplt.show()","2a234186":"#Visualizing the fit on the train set\nplt.figure(figsize=(10,5))\nplt.scatter(X_train, y_train)\nplt.plot(X_train, y_train_pred, 'r')\nplt.grid()\nplt.xlabel('Hours studied', fontweight = 'bold')\nplt.ylabel('Scores obtained', fontweight = 'bold')\nplt.title('Best fit line for train set', fontweight = 'bold', fontsize = 16)\nplt.show()","d22012ee":"predicted_df = pd.DataFrame({'Actual': y_test, 'Predicted' : y_test_pred})\npredicted_df.head()","58548aea":"import sklearn.metrics\nscore_lr=lr.score(X_test,y_test)\nevs_lr=sklearn.metrics.explained_variance_score(y_test,lr.predict(X_test))\nme_lr=sklearn.metrics.max_error(y_test,lr.predict(X_test))\nmae_lr=sklearn.metrics.mean_absolute_error(y_test,lr.predict(X_test))\nmse_lr=sklearn.metrics.mean_squared_error(y_test,lr.predict(X_test))\nmsle_lr=sklearn.metrics.mean_squared_log_error(y_test,lr.predict(X_test))\nMae_lr=sklearn.metrics.median_absolute_error(y_test,lr.predict(X_test))\nr2_lr=sklearn.metrics.r2_score(y_test,lr.predict(X_test))\nmpd_lr=sklearn.metrics.mean_poisson_deviance(y_test,lr.predict(X_test))\nmgd_lr=sklearn.metrics.mean_gamma_deviance(y_test,lr.predict(X_test))\nmtd_lr=sklearn.metrics.mean_tweedie_deviance(y_test,lr.predict(X_test))\nprint('Score for Linear Regression                   :',score_lr)\nprint('Explained Variance Score for Linear Regression:',evs_lr)\nprint('Max Error for Ridge Rigression                :',me_lr)\nprint('Mean Absolute Error for Linear Regression     :',mae_lr)\nprint('Mean Square Error for Linear Regression       :',mse_lr)\nprint('Mean Squared Log Error for Linear Regression  :',msle_lr)\nprint('Median Absolute Error for Linear Regression   :',Mae_lr)\nprint('R2 Score for Linear Regression                :',r2_lr)\nprint('Mean Poisson Deviance for Linear Regression   :',mpd_lr)\nprint('Mean Gamma Deviance for Linear Regression     :',mgd_lr)\nprint('Mean Tweedie Deviance for Linear Regression   :',mtd_lr)","5668e0c0":"#Objective is to find out scores for studied hour 9.25\n\nhours = 9.25\nnew_pred = lr.predict([[hours]])\nprint(\"           Number of hours = {}\".format(hours))\nprint(\"Predicted percentage score = {}\".format(round(new_pred[0],2)))","2aee0d5c":"Hours are directly proportional to Scores ","71e794d1":"No Outliers found","be853c2e":"No missing values in row & columns","44cf54a3":"# Missing Value Check ","1914a470":"# Training the model","ad46fb3d":"# Prediction using Supervised ML","4506cbd0":"## Predict the percentage of marks of an student based on the number of study hours","f00be2b0":"Error terms should be normally distributed with mean 0","f531e2fc":"No Outliers found","dd3c7e44":"# Validating Linear Regression assumptions","d31ab9a8":"# Evaluation ","1f710b42":"# EXPLORATORY DATA ANALYSIS","19f7b8a0":"Data is not skewed. ","3718987f":"## Error terms should be randomly distributed","7192d379":"# Duplicate Check","8d15d44f":"Error terms\/ residuals dont tend to follow any particular pattern as such. They seem to be distributed randomly. With this, validated another assumption for Linear Regression","c3d62736":"# Test Train Split","13f48a28":" It can be seen that the error terms are normally distributed with mean 0. Hence validated one of the assumptions of Linear Regression"}}