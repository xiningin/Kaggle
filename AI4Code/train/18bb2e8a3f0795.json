{"cell_type":{"7a8380d0":"code","9eaab400":"code","bd62fbac":"code","4d4ce17d":"code","73375a99":"code","9552b506":"code","81f697d3":"code","7fff08cb":"code","59667390":"code","983437a2":"code","bb7c10cd":"code","d1ea41bc":"code","c4bce948":"code","40cba47a":"code","2826c567":"code","6c83f1b6":"code","00f9606d":"code","49a3b463":"code","bee302d3":"code","bd7c64a4":"code","e51e1f2b":"code","ac16558e":"code","391351ea":"code","4a47b88c":"code","0aabc7df":"code","e9b6d140":"code","607b29a8":"code","c15d0447":"code","8f07f1af":"code","aee79ef0":"code","99aeccfb":"code","5d678372":"code","04cefab2":"code","1d095881":"code","c9cf0dea":"code","3a030cd7":"code","d1ede7e3":"code","659337f2":"code","0b0e945a":"code","146f7806":"code","97991634":"code","6b1fda82":"code","4a8967a3":"code","ac3dfd32":"code","5a8d6c5a":"code","ab4e3120":"code","d87bd16f":"code","fdf06e31":"code","762b93fb":"code","b17fb74f":"code","2aebdf14":"code","26e7ecbc":"code","5417732f":"code","a0ef664c":"code","a4a83eef":"code","0ecfcc4e":"code","7acabc34":"markdown","b7388272":"markdown","281cf797":"markdown","b6ff9228":"markdown","7d1cdce3":"markdown","76336d1b":"markdown","d4295c0c":"markdown","0da9d76d":"markdown","d23739d7":"markdown","7284f8c2":"markdown","fbe306e2":"markdown","ecc4f5e6":"markdown","55aea137":"markdown","1e6b09b4":"markdown","634ac4c9":"markdown","37f35399":"markdown","40a83b97":"markdown","3f452a11":"markdown","dd18c113":"markdown","31a6a3ae":"markdown","f8b1022d":"markdown","b6f54ff8":"markdown","ccafb01f":"markdown","cf074c7b":"markdown","a2568ae4":"markdown","f7882b1d":"markdown","acf0b2b5":"markdown","3a7299e6":"markdown","3c57d3e3":"markdown","15c1d2a1":"markdown","8cc6f12f":"markdown","bd694793":"markdown","dba2fdc8":"markdown","a6608813":"markdown","f6bc8fbb":"markdown","07726edd":"markdown","cfaf5f29":"markdown","4dbcd922":"markdown","fc875e14":"markdown","01b1e9e5":"markdown","910bc3e3":"markdown","cdb05739":"markdown","3b47abb0":"markdown","9fdfdc53":"markdown","5fecf256":"markdown","1f32de05":"markdown","f76c703a":"markdown","aea6938d":"markdown","f24ec5cc":"markdown","d5efe3b4":"markdown","b26152bc":"markdown","ebbaea45":"markdown","49d01a05":"markdown","f0e48d08":"markdown","b9c6cf0a":"markdown","9178e0d5":"markdown"},"source":{"7a8380d0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # for plots\n\nimport os\nprint(os.listdir(\"..\/input\"))","9eaab400":"data = pd.read_csv('..\/input\/googleplaystore.csv')\ndata.head()","bd62fbac":"data.columns = data.columns.str.replace(' ', '_')","4d4ce17d":"print(\"Shape of data (samples, features): \",data.shape)\nprint(\"Data Types: \\n\", data.dtypes.value_counts())","73375a99":"data.Size.value_counts().head()\n#please remove head() to get a better understanding ","9552b506":"data.Size=data.Size.str.replace('k','e+3')\ndata.Size=data.Size.str.replace('M','e+6')\ndata.Size.head()","81f697d3":"def is_convertable(v):\n    try:\n        float(v)\n        return True\n    except ValueError:\n        return False\n    \ntemp=data.Size.apply(lambda x: is_convertable(x))\ntemp.head()","7fff08cb":"data.Size[~temp].value_counts()","59667390":"data.Size=data.Size.replace('Varies with device',np.nan)\ndata.Size=data.Size.replace('1,000+',1000)","983437a2":"data.Size=pd.to_numeric(data.Size)","bb7c10cd":"data.hist(column='Size')\nplt.xlabel('Size')\nplt.ylabel('Frequency')","d1ea41bc":"data.Installs.value_counts()","c4bce948":"data.Installs=data.Installs.apply(lambda x: x.strip('+'))\ndata.Installs=data.Installs.apply(lambda x: x.replace(',',''))\ndata.Installs=data.Installs.replace('Free',np.nan)\ndata.Installs.value_counts()","40cba47a":"data.Installs.str.isnumeric().sum()","2826c567":"data.Installs=pd.to_numeric(data.Installs)","6c83f1b6":"data.Installs=pd.to_numeric(data.Installs)\ndata.Installs.hist();\nplt.xlabel('No. of Installs')\nplt.ylabel('Frequency')","00f9606d":"data.Reviews.str.isnumeric().sum()","49a3b463":"data[~data.Reviews.str.isnumeric()]","bee302d3":"data=data.drop(data.index[10472])","bd7c64a4":"data[10471:].head(2)","e51e1f2b":"data.Reviews=data.Reviews.replace(data.Reviews[~data.Reviews.str.isnumeric()],np.nan)","ac16558e":"data.Reviews=pd.to_numeric(data.Reviews)\ndata.Reviews.hist();\nplt.xlabel('No. of Reviews')\nplt.ylabel('Frequency')","391351ea":"print(\"Range: \", data.Rating.min(),\"-\",data.Rating.max())","4a47b88c":"data.Rating.dtype","0aabc7df":"print(data.Rating.isna().sum(),\"null values out of\", len(data.Rating))","e9b6d140":"data.Rating.hist();\nplt.xlabel('Rating')\nplt.ylabel('Frequency')","607b29a8":"data.Type.value_counts()","c15d0447":"data.Price.unique()","8f07f1af":"data.Price=data.Price.apply(lambda x: x.strip('$'))","aee79ef0":"data.Price=pd.to_numeric(data.Price)\ndata.Price.hist();\nplt.xlabel('Price')\nplt.ylabel('Frequency')","99aeccfb":"temp=data.Price.apply(lambda x: True if x>350 else False)\ndata[temp].head(3)","5d678372":"data.Category.unique()","04cefab2":"data.Category.value_counts().plot(kind='bar')","1d095881":"data.Content_Rating.unique()","c9cf0dea":"data.Content_Rating.value_counts().plot(kind='bar')\nplt.yscale('log')","3a030cd7":"data.Genres.unique()","d1ede7e3":"sep = ';'\nrest = data.Genres.apply(lambda x: x.split(sep)[0])\ndata['Pri_Genres']=rest\ndata.Pri_Genres.head()","659337f2":"rest = data.Genres.apply(lambda x: x.split(sep)[-1])\nrest.unique()\ndata['Sec_Genres']=rest\ndata.Sec_Genres.head()","0b0e945a":"grouped = data.groupby(['Pri_Genres','Sec_Genres'])\ngrouped.size().head(15)","146f7806":"twowaytable = pd.crosstab(index=data[\"Pri_Genres\"],columns=data[\"Sec_Genres\"])\ntwowaytable.head()","97991634":"twowaytable.plot(kind=\"barh\", figsize=(15,15),stacked=True);\nplt.legend(bbox_to_anchor=(1.0,1.0))","6b1fda82":"data.Last_Updated.head()","4a8967a3":"from datetime import datetime,date\ntemp=pd.to_datetime(data.Last_Updated)\ntemp.head()","ac3dfd32":"data['Last_Updated_Days'] = temp.apply(lambda x:date.today()-datetime.date(x))\ndata.Last_Updated_Days.head()","5a8d6c5a":"data.Android_Ver.unique()","ab4e3120":"data['Version_begin']=data.Android_Ver.apply(lambda x:str(x).split(' and ')[0].split(' - ')[0])\ndata.Version_begin=data.Version_begin.replace('4.4W','4.4')\ndata['Version_end']=data.Android_Ver.apply(lambda x:str(x).split(' and ')[-1].split(' - ')[-1])","d87bd16f":"data.Version_begin.unique()","fdf06e31":"twowaytable = pd.crosstab(index=data.Version_begin,columns=data.Version_end)\ntwowaytable.head()","762b93fb":"twowaytable.plot(kind=\"barh\", figsize=(15,15),stacked=True);\nplt.legend(bbox_to_anchor=(1.0,1.0))\nplt.xscale('log')","b17fb74f":"data.Version_end.unique()","2aebdf14":"data.Current_Ver.value_counts().head(6)","26e7ecbc":"data.Current_Ver.isna().sum()","5417732f":"import re\ntemp=data.Current_Ver.replace(np.nan,'Varies with device')\ntemp=temp.apply(lambda x: 'Varies with device' if x=='Varies with device'  else  re.findall('^[0-9]\\.[0-9]|[\\d]|\\W*',str(x))[0] )","a0ef664c":"temp.unique()","a4a83eef":"data['Current_Ver_updated']=temp","0ecfcc4e":"data.Current_Ver_updated.value_counts().plot(kind=\"barh\", figsize=(15,15));\nplt.legend(bbox_to_anchor=(1.0,1.0))\nplt.xscale('log')","7acabc34":"Now, we have some two types of values in our Size data.\n1. exponential values (not yet converted to string)\n2. Strings (that cannot be converted into numeric)\n\nThus specifing categories 1 and 2 as an boolean array **temp**, to convert category 1 to numeric. \n","b7388272":"Checking the format of data in Last Updated Dates","281cf797":"There are only two types, free and paid. No unwanted data here.","b6ff9228":"It can be seen that there are 22 unique values, out of which\n- 1 is 0, \n- 1 is Free(string) , which we will be converting to nan here\n- and rest are numeric but with '+' and ',' which shall be removed to convert these into numeric type. ","7d1cdce3":"### Imporing Libraries","76336d1b":"Checking unique values, repetition, or any abnormalities.","d4295c0c":"Checking unique values in Install data","0da9d76d":"## <a id='content_rating'>Content Rating <\/a>","d23739d7":"Some apps have price higher than 350. Out of curiosity I checked the apps to see if there is a problem with data. But no !! they do exist, and Yes !! people buy them.","7284f8c2":"Lets convert all the versions in the format **number.number** to simplify the data, and check if the data has null values. Also, we are not considering converting value_counts to nan here due to its high frequency.","fbe306e2":"## <a id='current_version'>Current Version<\/a>","ecc4f5e6":"It can be seen that data has metric prefixes (Kilo and Mega) along with another string.\nReplacing k and M with their values to convert values to numeric.","55aea137":"- Replacing 'Varies with Device' by nan and \n- Converting 1,000+ to 1000, to make it numeric","1e6b09b4":"For entries to be right we need to make sure they fall within the range 1 to 5.","634ac4c9":"## <a id='last_updated'>Last Updated<\/a>","37f35399":"Checking if all values in number of Reviews numeric","40a83b97":"Now checking unique non numeric values (***~temp***) in Size.","3f452a11":"Taking a difference between last updated date and today to simplify the data for future processing. It gives days.","dd18c113":"Most of the values have a upper value and a lower value (i.e. a range), lets divide them as two new features **Version begin and end**, which might come handy while processing data furthur.","31a6a3ae":"Checking for unque type values and any problem with the data","f8b1022d":"## <a id='installs'>Installs<\/a>","b6f54ff8":"Checking the type of data, to see if it needs to be converted to numeric","ccafb01f":"Saving the updated current version values as a new column","cf074c7b":"Converting the cleaned Size data to numeric type","a2568ae4":"## <a id='rating'>Rating<\/a>","f7882b1d":"Checking for unique values of price, along with any abnormalities","acf0b2b5":"Data had **$** sign which shall be removed to convert it to numeric","3a7299e6":"Now lets inspect the category by looking into the unique terms. ","3c57d3e3":"Converting the data i.e. string to datetime format for furthur processing","15c1d2a1":"It shows no repetition or false data","8cc6f12f":"Data is already numeric, now checking if the data has null values","bd694793":"This notebook covers the cleaning and exploration of data for 'Google Play Store Apps'","dba2fdc8":"## <a id='reviews'>Reviews<\/a>","a6608813":"One value is non numeric out of 10841. Lets find its value and id.","f6bc8fbb":"No abnormalies or repetition found","07726edd":"The data has **12** object and **1** numeric feature i.e. *Rating*. ","cfaf5f29":"## <a id='cat'>Category<\/a>","4dbcd922":"For visual representation of this data, lets use stacked columns","fc875e14":"Checking for unique values, abnormalitity or repetition in data","01b1e9e5":"The data is in the format **Category;Subcategory**. Lets divide the data into two columns, one as primary category and the other as secondary, using **;** as separator.","910bc3e3":"As we have only **8** nans lets replace them with **Varies with data** to simplify ","cdb05739":"## <a id='android_version'>Android Version<\/a>","3b47abb0":"Now in Installs, 1 sample is non numeric out of 10841, which is nan (converted from Free to nan in previous step)","9fdfdc53":"Representing categorial data as two way table and plotting it as stacked columns for better understanding.","5fecf256":"Checking unique terms in Content Rating Categories, and for repetitive or abnormal data.","1f32de05":"## <a id='genres'>Genres<\/a>","f76c703a":"### Reading data from the csv file","aea6938d":"We could have converted it into interger like we did for <a id='id'>Size<\/a> but the data for this App looks different. It can be noticed that the entries are entered wrong (i.e. cell backwared). We could fix it by setting **Category** as nan and shifting all the values, but deleting the sample for now. ","f24ec5cc":"## <a id=size>Size<\/a>","d5efe3b4":"Lets look into frequency of each item to get an idea of data nature","b26152bc":"Checking if data is converted to numeric","ebbaea45":"## <a id='Type'>Type<\/a>","49d01a05":"Now Exploring each features individually\n1. [Size](#size)\n2. [Installs](#installs)\n3. [Reviews](#reviews)\n4. [Rating](#rating)\n5. [Type](#type)\n6. [Price](#price)\n7. [Category](#cat)\n8. [Content Rating](#content_rating)\n9. [Genres](#genres)\n10. [Last Updated](#last_updated)\n11. [Current Version](#current_version)\n12. [Android Version](#android_version)","f0e48d08":"## <a id='price'>Price<\/a>","b9c6cf0a":"To check if row is deleted","9178e0d5":"Generating a two table to better understand the relationship between primary and secondary categories of Genres"}}