{"cell_type":{"89b4bffc":"code","a4893076":"code","0fc8e8ba":"code","888f11dc":"code","58a7e2d5":"code","85050f04":"code","c086af2a":"code","437a60d7":"code","d8378900":"code","902b4650":"code","b7d4ea16":"code","90aca127":"code","bbd1ed34":"code","146e181c":"code","95a8e3b2":"code","bbd70839":"code","a34ebff0":"code","28d80276":"markdown","57353fd5":"markdown","0088fd6b":"markdown","5126be74":"markdown","30f56263":"markdown","90c51b66":"markdown","766633c1":"markdown","24d3308a":"markdown","1555f6a1":"markdown","7bee5600":"markdown","6230b1ff":"markdown","b3fb0afa":"markdown","79a7d4cf":"markdown","a1f13a01":"markdown","26ee1c9f":"markdown","2fe9109c":"markdown"},"source":{"89b4bffc":"import numpy as np\nimport pandas as pd\nmtg = pd.read_json('..\/input\/magic-the-gathering-cards\/AllCards.json')","a4893076":"mtg.head()","0fc8e8ba":"mtg = pd.DataFrame.transpose(mtg)\nmtg.head()","888f11dc":"mtg.iloc[0]","58a7e2d5":"features_to_consider = [\"colorIdentity\",\"convertedManaCost\",\"manaCost\",\"name\",\"types\",\"edhrecRank\",\"power\",\"toughness\"]\ndf = mtg[features_to_consider]\ndf.head()","85050f04":"df = df.dropna(subset=['manaCost','convertedManaCost','colorIdentity'])","c086af2a":"colorIdentity = {'B': 'Black', 'G': 'Green', 'R': 'Red', 'U': 'Blue', 'W': 'White'}\ncolorCount = {'Black': 0, 'Green': 0, 'Red': 0, 'Blue': 0, 'White': 0, 'Colorless':0, 'Multi':0}\n\nfor raw in df['colorIdentity']:\n    if len(raw) == 0:\n        colorCount['Colorless']+=1\n    elif len(raw) > 1:\n        colorCount['Multi']+=1\n    else:\n        for color in colorIdentity:\n            if raw[0] == color:\n                colorCount[colorIdentity[color]]+=1\ncolorCount","437a60d7":"import matplotlib.pyplot as plt\n\nlabels = colorCount.keys()\nsizes = colorCount.values()\ncolors = ['Black', 'green', 'red', 'blue','white','lightgray','gold']\nexplode = (0.1,0.1,0.1,0.1,0.1,0.1,0.1)\n\nplt.title(\"Complete color pie\",pad =30,fontsize=20)\nplt.pie(sizes, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140,explode=explode,pctdistance=1.2)\nplt.legend(labels=labels,frameon=False,bbox_to_anchor=(0.7, 0.3, 0.5, 0.5))\nplt.axis('equal')\nplt.show()","d8378900":"#add a \"number of color\" column:\ndf[\"colorNumber\"] = mtg.colorIdentity.apply(len)\n#create new columns, one for each color\nfor color in colorIdentity:\n    df[color] = False\n#set True\/False in each column according to the matching colors\nfor color in colorIdentity:\n    df[color] = mtg.colorIdentity.apply(lambda x: color in x)\n    \ndf = df.drop(columns=['colorIdentity'])\n\ndf.head()","902b4650":"df['colorNumber'].plot.hist(bins=5)\nplt.title(\"Number of color on each card\",pad=10,fontsize=20)","b7d4ea16":"for color in colorIdentity:\n    df.loc[df[color]==True,\"convertedManaCost\"].plot.hist(color=colorIdentity[color],bins=range(0, 15))\n    title = colorIdentity[color] + \" (mean:\" + str(round(df.loc[df[color]==True,\"convertedManaCost\"].mean(),2))+\")\"\n    plt.title(title,pad=10,fontsize=20)\n    plt.axes().set_facecolor(\"lightgrey\")\n    plt.show()","90aca127":"dfText = mtg[[\"text\",\"type\",\"name\"]]\ndfText[\"text\"] = dfText[\"text\"].apply(str)","bbd1ed34":"from wordcloud import WordCloud\n\nfeatures_we_want = [dfText.name,dfText.type,dfText.text]\ntitles = [\"Name of cards\",\"Type of cards\",\"Card text\"]\n\nfor i,feature in enumerate(features_we_want):\n    text = \" \".join(txt for txt in feature)\n    wordcloud = WordCloud(width=800, height=400,max_font_size=60, max_words=100, background_color=\"white\").generate(text)\n\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.title(titles[i],pad=10,fontsize=20)\n    plt.axis(\"off\")\n    plt.show()","146e181c":"dfEdh = df.dropna(subset=['edhrecRank'])\ndfEdh.index = dfEdh['edhrecRank']\ndfEdh.head()","95a8e3b2":"for color in colorIdentity:\n    dfEdh.loc[dfEdh[color]==True,\"convertedManaCost\"].plot.hist(color=colorIdentity[color],bins=range(0, 15))\n    title = colorIdentity[color] + \" (mean:\" + str(round(dfEdh.loc[dfEdh[color]==True,\"convertedManaCost\"].mean(),2))+\")\"\n    plt.title(title,pad=10,fontsize=20)\n    plt.axes().set_facecolor(\"lightgrey\")\n    plt.show()","bbd70839":"colorIdentity = {'B': 'Black', 'G': 'Green', 'R': 'Red', 'U': 'Blue', 'W': 'White'}\ncolorCount = {'Black': 0, 'Green': 0, 'Red': 0, 'Blue': 0, 'White': 0}\n\n#count colors\nfor color in colorIdentity:\n    if color !='Colorless' and  color !='Multi':\n        colorCount[colorIdentity[color]] = dfEdh[color].loc[(dfEdh[color]== True) & (dfEdh['colorNumber']==1)].count()   \n\ncolorCount","a34ebff0":"labels = colorCount.keys()\nsizes = colorCount.values()\ncolors = ['Black', 'green', 'red', 'blue','white']\nexplode = (0.1,0.1,0.1,0.1,0.1)\n\nplt.title(\"Edh color pie\",pad =30,fontsize=20)\nplt.pie(sizes, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140,explode=explode,pctdistance=1.2)\nplt.legend(labels=labels,frameon=False,bbox_to_anchor=(0.7, 0.3, 0.5, 0.5))\nplt.axis('equal')\nplt.show()","28d80276":"Okay that's cool, but i wont be able to select my cards by color if i don't create a new column with it.","57353fd5":"Now is word cloud time:","0088fd6b":"Just watching:","5126be74":"Here I just want to see the first card (which is one of the funniest by the way):","30f56263":"Now we can make plots more easyly.\n\nHere is the number of color on each card:","90c51b66":"![\"Ach! Hans, Run!\"](http:\/\/gatherer.wizards.com\/Handlers\/Image.ashx?multiverseid=73935&type=card)","766633c1":"Just a bit of cleaning:","24d3308a":"The CMC curve of each color:","1555f6a1":"I will select only the interesting columns here:","7bee5600":"Now that i know each column, let's have fun !\n\n## Color pie\n\nLet's take a look at the number of cards in each color (the color identity only).","6230b1ff":"# Learning while playing Magic the Gathering\n\nI just want to have fun here !\n\n## Importing datas","b3fb0afa":"Just a bit of cleaning:","79a7d4cf":"Let's see the new color distribution:","a1f13a01":"Looks like columns ans raw are inverted here, I need to solve that:","26ee1c9f":"## Wordcloud\nI want to see which words are use frequently on cards.\n\nHere is a tutorial to make wordcloud:\nhttps:\/\/www.datacamp.com\/community\/tutorials\/wordcloud-python","2fe9109c":"## EDH study\n\nNow let's take a look at the edh ranking. For those who don't know, edh (or commander) is a format in which you choose one legendary creature as your commander, and 99 singles cards of the same color identity.\n\nI just select the ranked cards:"}}