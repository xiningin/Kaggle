{"cell_type":{"44730ac6":"code","7019f942":"code","cd69d9d7":"code","0b2e45ce":"code","54903341":"code","959c4eaf":"code","e6a01b09":"code","274b228e":"code","1581c7ab":"code","f7b47950":"code","127f32dd":"code","0ca74170":"code","9a4ba83d":"code","57cde616":"code","d8463db6":"code","1ceef9bd":"code","fcf76dfa":"code","c44f7c70":"code","1ca56950":"code","00197e27":"code","0b3c478e":"code","e5be5fce":"code","551256d3":"code","d7e5e7f4":"code","e547fd50":"code","bd7714f6":"code","fb143e71":"markdown","8a1b9a6f":"markdown"},"source":{"44730ac6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7019f942":"data = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\n\ndata.head()","cd69d9d7":"data.isna().sum()","0b2e45ce":"data = data.fillna(0)\n\n\ndata.isna().sum()","54903341":"data.drop([\"sl_no\",\"salary\"],axis=1,inplace=True)","959c4eaf":"data.gender.unique()","e6a01b09":"data.status.unique()","274b228e":"data[(data.gender=='F') & (data.status=='Placed')].groupby('degree_t').count()['status'].sort_values(ascending=False)","1581c7ab":"data.groupby(['specialisation','status']).count()['gender']","f7b47950":"# data.status = data.status.replace({'Placed':1,\"Not Placed\":0})\n# data.corr()[:3][['status']]","127f32dd":"data.specialisation.unique()","0ca74170":"data[(data.status==1) & (data.specialisation=='Mkt&HR')].count()[0]","9a4ba83d":"x = data.drop(columns=['status'])\n\ny = data.status","57cde616":"x.head()","d8463db6":"y.head()","1ceef9bd":"data.status.value_counts(normalize=True)*100","fcf76dfa":"nom_cols = [0,5,7,10]\nord_cols = [2,4,8]\nsc_cols = [1,3,6,9,11]","c44f7c70":"# import seaborn as sns \n\n# sns.distplot(data.mba_p)","1ca56950":"from sklearn.preprocessing import OneHotEncoder, OrdinalEncoder, PowerTransformer\nfrom sklearn.compose import make_column_transformer\n\ntransf = make_column_transformer((OneHotEncoder(sparse=False),nom_cols),\n                                (OrdinalEncoder(),ord_cols),\n                                (PowerTransformer(),sc_cols),\n                                remainder = 'passthrough')\n\ntransf\n","00197e27":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import set_config\n\nmodel = LogisticRegression(solver = 'liblinear')\n\nfrom sklearn.pipeline import make_pipeline\n\npipe = make_pipeline(transf,model)\n\nset_config(display='diagram')\n\npipe","0b3c478e":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","e5be5fce":"pipe.fit(x_train,y_train)","551256d3":"pred = pipe.predict(x_test)\n\npred","d7e5e7f4":"from sklearn.metrics import accuracy_score\n\n\naccuracy_score(pred,y_test)*100","e547fd50":"x.head()","bd7714f6":"pipe.predict(pd.DataFrame(np.array([\"F\",80.0,\"Central\",10,\"Others\",\"Science\",0,\"Sci&Tech\",\"No\",75,\"Mkt&HR\",5.00]).reshape(1,12)))","fb143e71":"1. **Which degree_t had most placed Females?**\n\n2. **Which Specialization has more placement guarentee? By what percent?**\n\n3. **Which percentage( hsc_p,ssc_p,degree_p) have more impact on placements?**\n\n4. **How many people were placed from Mkt&HR specialization?**","8a1b9a6f":"Drop sl_no and Salary"}}