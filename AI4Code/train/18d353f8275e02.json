{"cell_type":{"ffb4c54e":"code","d0fa1799":"code","fa7fd14d":"code","f87355b0":"code","a434fdb5":"code","759342f9":"code","62e36865":"code","f10edac0":"code","d1130f06":"code","a8cece98":"code","1c2c8e3a":"code","81fc2d57":"code","0d440b43":"code","6ecd07e4":"code","558dcd71":"code","f8f8521f":"code","c06382c0":"code","d3f3882e":"code","f3c6484c":"code","b4c2569d":"code","799a0b3c":"code","920c604e":"code","fbf35dc6":"code","6b926a45":"code","cb10107d":"code","19746623":"code","121509e5":"code","7ba748c4":"code","d91b541e":"code","d771f73f":"code","68318b29":"code","3b881f7e":"markdown","c9e9e349":"markdown","daa25ead":"markdown","8936f962":"markdown","24c98857":"markdown","a2c1c7c7":"markdown","02fded15":"markdown","f0c70381":"markdown","86469605":"markdown"},"source":{"ffb4c54e":"###In the name of GOD\n\n###Author and Developer :  Nima Barzegar\n\n##Contact : nima@barzegar.eu\n\n###Issue : Predicting the rights of people with computer expertise.\n\n###Dataset : IT salary survey 2020 EU \n#            In this study, An anonymous salary survey has been conducted annually since 2020 among European IT specialists\n#            with a stronger focus on Germany. This year 1238 respondents volunteered to participate in the survey. \n#            The data has been made publicly available by the authors.\n#            The dataset contains rich information about the salary patterns among the IT professionals in the EU region and offers some great insights.\n#            https:\/\/www.asdcode.de\/2021\/01\/it-salary-survey-december-2020.html\n\n###Algorithm : Linear Regression\n\n### 2021\n\n\n\n","d0fa1799":"#Import required libraries\n\n#We want to run our notebook on Google Colab\n#from google.colab import drive\n\n#numpy and pandas are used to process data\nimport numpy as np\nimport pandas as pd\n\n#matplotlib and seaborn libraries are used to Draw a data table\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n#sklearn is one of the most powerful machine learning libraries in Python.\n#In this notebook we use this powerful library.\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","fa7fd14d":"#load Dataset\n#drive.mount('\/content\/drive\/')\ndf= pd.read_csv(\"..\/input\/it-salary-survey-2020-eu\")\nprint(\"Drive Mounted\")","f87355b0":"##Show data structure\ndf.head()","a434fdb5":"##Show data Size \ndf.shape","759342f9":"######Remove non-functional columns\n#There are many columns in this dataset, not all of which are useful to us.\n#In this section, you will separate the functional columns that we will use.\n#Note: Due to the lack of computer resources, we are forced to delete most items, \n#but fortunately, it will not change the result.\n\ndf = df[['Age', 'Gender', 'Seniority level',\n         'Position (without seniority)', 'Years of experience', \n         'Your main technology \/ programming language', 'Yearly brutto salary (without bonus and stocks)']]","62e36865":"#####Display new dataset with functional and required columns\ndf.columns","f10edac0":"#show summery of 'Seniority level' column \n#In this dataset, the senior position is more than the other positions\ndf['Seniority level'].value_counts()","d1130f06":"#show summery of 'Gender' column\n#in our dataset there is 2 Gender types which are male and female \ndf['Gender'].value_counts()","a8cece98":"#show summery of 'Age' column\nage4stats = df['Age'][df['Age']>0] \nage4stats.describe()","1c2c8e3a":"#show summery of 'Salary' column\n#the salary feature would be a continuous number and we are going to perdict this column as y label\nsalary4stats = df['Yearly brutto salary (without bonus and stocks)']\nsalary4stats.describe()","81fc2d57":"#the technology chart of dataset is shown below\nprint(df['Your main technology \/ programming language'].value_counts())\nplt.figure(figsize=(18,4))\nsns.countplot(data=df, x='Your main technology \/ programming language')\nplt.xticks(rotation=90);","0d440b43":"#Display gender comparison chart with other features\nsns.pairplot(data=df, hue='Gender')","6ecd07e4":"#There are miss values in this dataset.\n#At the bottom we try to delete the missed values or convert\n#the non-numeric values into numbers. \n#In machine learning algorithms, string is meaningless and must be converted to \n#these number values. There are automatic ways to pre-process and convert these\n# values, but we tried to do it manually.","558dcd71":"df.head()","f8f8521f":"df.dropna()","c06382c0":"df['Gender'].replace('Male',1,inplace=True)\ndf['Gender'].replace('Female',0,inplace=True)\nprint(df['Gender'].value_counts())","d3f3882e":"df['Seniority level'].replace('Senior',0,inplace=True)\ndf['Seniority level'].replace('Middle',1,inplace=True)\ndf['Seniority level'].replace('Junior',2,inplace=True)\ndf['Seniority level'].replace('Lead',3,inplace=True)\ndf['Seniority level'].replace('Head',4,inplace=True)\ndf['Seniority level'].replace('Principal',5,inplace=True)\nprint(df['Seniority level'].value_counts())","f3c6484c":"position = ['Fullstack Developer', 'Backend Developer', 'Mobile Developer',\n       'Embedded Developer', 'Machine Learning Engineer', 'Manager',\n       'DevOps', 'Designer (UI, UX)', 'Frontend Developer',\n       'Data Scientist', 'Data Engineer', 'QA', 'Software Architect',\n       'Business Analyst', 'Localization', 'Support',\n       'System Administrator', 'Product Manager', 'SAP Consultant', 'SRE',\n       'Software Engineer', 'CTO (CEO, CFO)', 'Database Developer (DBA)',\n       'Desktop\/Unity3D Developer', 'Recruiter ', 'Researcher',\n       'Cloud Platform Engineer', 'Lawyer ', 'IT Security',\n       'Sales Engineer', 'Mainframe', 'Network Engineer', 'NLP Engineer',\n       'Head of AI', 'Head of Engineering', 'Tech Lead',\n       'Crypto Developer', 'Modelling Specialist', 'RPA developer',\n       'Platform Engineer', 'UX Researcher', 'Game Developer',\n       'Backend Developer & Team Lead', 'support', 'DevOps Manager',\n       'Solution Architect', 'Scrum Master', 'Data Analyst', 'Desktop',\n       'Product manager', 'Security Engineer']\nposition_id = list(range(100, 100+len(position))) \ndf['Position (without seniority)'].replace(position,position_id,inplace=True)\nprint(df['Position (without seniority)'].value_counts())","b4c2569d":"tec = ['PHP', 'Python', 'Kotlin', 'C\/C++', 'Java', 'Not Relevant',\n       'Swift', 'Javascript \/ Typescript', 'Go', 'AWS', 'Kubernetes',\n       'Ruby', '.NET', 'Scala', 'Clojure', 'Yaml',\n       'Linux-Stack, Networking', 'Azure', 'Elixir', 'Multiple',\n       'Objective-C', 'Microsoft, Vmware', 'Google Cloud', 'SAP \/ ABAP',\n       'SQL', 'R', 'SAS', 'Powershell', 'Rust', 'Solidity', 'ASM',\n       'Cobol', 'Perl', 'Cisco', 'Hadoop', 'Erlang', 'Unity', 'HR', 'K8S',\n       'ABAP', 'PostgreSQL', 'Openstack'];\ntec_id = list(range(100, 100+len(tec))) \n\ndf['Your main technology \/ programming language'].replace(tec,tec_id,inplace=True)\nprint(df['Your main technology \/ programming language'].value_counts())","799a0b3c":"#In this dataset, the training and testing values are not specified in advance,\n#so we have to extract these values from the dataset. In this tutorial, \n#we will extract 30% from the original dataset as a test.","920c604e":"X= df.drop('Yearly brutto salary (without bonus and stocks)', axis=1)\ny= df['Yearly brutto salary (without bonus and stocks)']","fbf35dc6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","6b926a45":"#We try to convert the missing values into numbers.\n\nX_train = np.nan_to_num(X_train)\nX_test = np.nan_to_num(X_test)\ny_train = np.nan_to_num(y_train)\ny_test = np.nan_to_num(y_test)\n","cb10107d":"#We use Method StandardScaler, which is in the Preprocessing Library sklearn.\n\nscaler= StandardScaler()\nscaled_X_train= scaler.fit_transform(X_train)\nscaled_X_test= scaler.fit_transform(X_test)\n","19746623":"#Call function Linear Regression and fit it with data\nmodel= LinearRegression()\nmodel.fit(X_train, y_train)","121509e5":"#We give the y_test value to the algorithm to check the constructed model and \n#display the predicted value in label y_pred.\n\ny_pred=model.predict(X_test)\npd.DataFrame({'Y_Test':y_test, 'Y_Pred': y_pred})","7ba748c4":"#We use methods Mean absolute error and Mean squared error to evaluate \n#the constructed model. \n#The function of these two methods is available in Library sklearn.\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)\n\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","d91b541e":"#Draw a comparison chart Y test with Y Predic\nsns.scatterplot(x=y_test, y=y_pred)\nplt.xlabel('Y-Test')\nplt.ylabel('Y-Pred')","d771f73f":"test_residuals=y_test-y_pred\nsns.scatterplot(x=y_test, y=test_residuals)\nplt.axhline(y=0, color='r', ls='--')","68318b29":"sns.distplot(test_residuals, bins=25, kde=True)","3b881f7e":"### Step5: Determine the Features & Target Variable","c9e9e349":"### Step1: Import all necessary \n","daa25ead":"### Step4: Exploratory Data Analysis","8936f962":"### Step8: Predicting Test Data","24c98857":"### Step3: Data overview\n","a2c1c7c7":"### Step 6: Split the Dataset to Train & Test","02fded15":"### Step7: Train the Model","f0c70381":"### Step9: Evalutaing the Model\n","86469605":"### Step2: Import the Data "}}