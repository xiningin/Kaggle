{"cell_type":{"00b4ddf1":"code","b0b18eed":"code","cf6dac74":"code","0b6b9316":"code","2c85e202":"code","40a2bdfa":"code","0b5c5486":"code","b7f40332":"code","a7469c1f":"code","ebc0efef":"code","2945cc13":"code","a63bc7a0":"code","9a8896e0":"code","b80005de":"code","e2b0c85c":"code","385b4481":"code","bc282de8":"code","1ce68907":"code","888116e6":"code","d2015d67":"code","1ca80ee7":"code","078066fa":"code","83064381":"code","03b77f80":"code","6d542a0e":"code","e978755a":"code","61d5acac":"code","11fae1c5":"code","f1d1e2f3":"code","3eb805e4":"code","65d6ec0b":"markdown","ec0f21e6":"markdown","877e9649":"markdown","3b31be8e":"markdown","6c971530":"markdown","dc0c72c3":"markdown","8cd3dbef":"markdown","4379e3d3":"markdown"},"source":{"00b4ddf1":"import pandas as pd               # for Data Manipulation\nimport matplotlib.pyplot as plt   # for Visualization\nimport numpy as np                #for Mathematical calculations\nimport seaborn as sns             #for Advanced visualizations\n\nair = pd.read_csv(\"..\/input\/eastwestairlines-heirarchical-clustering\/EastWestAirlines.csv\")","b0b18eed":"air","cf6dac74":"# We see the columns in the dataset\nair.columns","0b6b9316":"# As a part of the Data cleansing we check the data for any missing\/ na values\nair.isna().sum()","2c85e202":"# Additionally we check the data for any duplicate values, now this can be an optional check depending on the data being used\nair1 = air.duplicated()\nsum(air1)","40a2bdfa":"# We now plot the boxplot for the data using each feature independently and check for Outliers\nplt.boxplot(air.Balance);plt.title('Boxplot');plt.show()\n\n# We see that there are Outliers present for \"Balance\" Feature","0b5c5486":"plt.boxplot(air.Qual_miles);plt.title('Boxplot');plt.show()  # outliers present","b7f40332":"plt.boxplot(air.cc1_miles);plt.title('Boxplot');plt.show()  # No outliers ","a7469c1f":"plt.boxplot(air.cc2_miles);plt.title('Boxplot');plt.show()  # outliers present","ebc0efef":"plt.boxplot(air.cc3_miles);plt.title('Boxplot');plt.show()  # outliers present","2945cc13":"plt.boxplot(air.Bonus_miles);plt.title('Boxplot');plt.show()  # outliers present","a63bc7a0":"plt.boxplot(air.Bonus_trans);plt.title('Boxplot');plt.show()  # outliers present","9a8896e0":"plt.boxplot(air.Flight_miles_12mo);plt.title('Boxplot');plt.show()  # outliers present","b80005de":"plt.boxplot(air.Flight_trans_12);plt.title('Boxplot');plt.show()  # outliers present","e2b0c85c":"from scipy.stats.mstats import winsorize\n\nair['Balance']=winsorize(air.Balance,limits=[0.07, 0.093])   \nplt.boxplot(air['Balance']);plt.title('Boxplot');plt.show()\n\nair['Qual_miles']=winsorize(air.Qual_miles,limits=[0.06, 0.094])   \nplt.boxplot(air['Qual_miles']);plt.title('Boxplot');plt.show()\n\nair['cc2_miles']=winsorize(air.cc2_miles,limits=[0.02, 0.098])   \nplt.boxplot(air['cc2_miles']);plt.title('Boxplot');plt.show()\n\nair['cc3_miles']=winsorize(air.cc3_miles,limits=[0.01, 0.099])   \nplt.boxplot(air['cc3_miles']);plt.title('Boxplot');plt.show()\n\nair['Bonus_miles']=winsorize(air.Bonus_miles,limits=[0.08, 0.092])   \nplt.boxplot(air['Bonus_miles']);plt.title('Boxplot');plt.show()\n\nair['Bonus_trans']=winsorize(air.Bonus_trans,limits=[0.01, 0.099])   \nplt.boxplot(air['Bonus_trans']);plt.title('Boxplot');plt.show()\n\nair['Flight_miles_12mo']=winsorize(air.Flight_miles_12mo,limits=[0.15, 0.85])   \nplt.boxplot(air['Flight_miles_12mo']);plt.title('Boxplot');plt.show()\n\nair['Flight_trans_12']=winsorize(air.Flight_trans_12,limits=[0.15, 0.85])   \nplt.boxplot(air['Flight_trans_12']);plt.title('Boxplot');plt.show()","385b4481":"# Now we check the data for zero variance values\n(air == 0).all()","bc282de8":"# We drop the features that have zero variance values\nair1 = air\nair1.drop([\"Qual_miles\",\"Flight_miles_12mo\",\"Flight_trans_12\"], axis=1,inplace = True)\nair1.columns","1ce68907":"# We see the data again now to check whether the data is in scale\nair1.describe\n\n# we notice that the data needs to be normalise, using normalization","888116e6":"from sklearn import preprocessing   #package for normalize\nair_normalized = preprocessing.normalize(air1)\nprint(air_normalized)","d2015d67":"##########################Univariate, Bivariate################\nplt.hist(air1[\"Balance\"])   #Univariate\n\nplt.hist(air1[\"Days_since_enroll\"])\n\nplt.scatter(air1[\"Balance\"], air[\"Days_since_enroll\"]);plt.xlabel('Days_since_enroll');plt.ylabel('Balance')   #Bivariate\n\nair1.skew(axis = 0, skipna = True) \n\nair1.kurtosis(axis = 0, skipna = True)","1ca80ee7":"# calculating TWSS - Total within SS using different cluster range\nfrom sklearn.cluster import KMeans\n\nTWSS = []\nk = list(range(2, 8))\n\nfor i in k:\n    kmeans = KMeans(n_clusters = i)\n    kmeans.fit(air_normalized)\n    TWSS.append(kmeans.inertia_)\n    \nTWSS","078066fa":"# Plotting the Scree plot using the TWSS from above defined function\nplt.plot(k, TWSS, 'ro-');plt.xlabel(\"No_of_Clusters\");plt.ylabel(\"total_within_SS\")","83064381":"# Selecting 4 clusters from the above scree plot which is the optimum number of clusters, \n# as the curve is seemingly bent or showinf an elbow format at K = 4\n\nmodel = KMeans(n_clusters = 4)\nmodel.fit(air_normalized)","03b77f80":"model.labels_ # getting the labels of clusters assigned to each row","6d542a0e":"mb = pd.Series(model.labels_)  # converting numpy array into pandas series object ","e978755a":"air1 = pd.read_csv(\"..\/input\/eastwestairlines-heirarchical-clustering\/EastWestAirlines.csv\")\nair1['clust'] = mb # creating a  new column and assigning it to new column ","61d5acac":"air1.head()","11fae1c5":"air = air1.iloc[:,[12,0,1,2,3,4,5,6,7,8,9,10,11]]\nair.head()","f1d1e2f3":"# We can clearly see that we have the labels in the dataset in the form of a column called \"clust\", symbolizing the clusters","3eb805e4":"# In order to see the clusters we aggregate the records within the clusters and group them by the clusters to visualize the \n# 4 nos of clear cluster formed\nair.iloc[:, 1:12].groupby(air.clust).mean()","65d6ec0b":"As a first step towards your solution, we need to understand the data and hence we load the same and the libbraries required","ec0f21e6":"K-Means Clustering problem 1:\n    Perform K means clustering on the airlines dataset to obtain optimum number of clusters. Draw the inferences from the \n    clusters obtained. Refer to EastWestAirlines.xlsx dataset.","877e9649":"Outlier Treatment!!!\n\nNow we all know that data can have outliers which are the values that may effect the analysis in a big way. \n\nIn other words Outliers are the values that differ from the rest of the data.In order to do so we use the Boxplots, wherein \nwe can see the outliers being outshined out of the plot.","3b31be8e":"We can now clearly see the 4 number of clusters formed, which can be described as under\n\n   1. Cluster1, Tier 1 = \"0\" = Defines the group of fliers that earn the most out of the card and are frequent fliers\n   2. Cluster4, Tier 2 = \"3\" = Defines the group of fliers that earn but and are the second most frequent fliers\n   3. Cluster2, Tier 3 = \"1\" = Defines the group of fliers that earn the even less and are the third most frequent fliers\n   4. Cluster3, Tier 4 = \"2\" = Defines the group of fliers that earn the least and are the least frequent fliers","6c971530":"**K-Means CLUSTERING!!**\n\nClustering algorithms are unsupervised machine learning algorithms so there is no label associated with data points.\nClustering algorithms look for similarities or dissimilarities among data points so that similar ones can be grouped together.\n\nK-means algorithm identifies k number of centroids, and then allocates every data point to the nearest cluster, while keeping the centroids as small as possible. The \u2018means\u2019 in the K-means refers to averaging of the data; that is, finding the centroid.\n\nTo process the learning data, the K-means algorithm in data mining starts with a first group of randomly selected centroids, which are used as the beginning points for every cluster, and then performs iterative (repetitive) calculations to optimize the positions of the centroids\n\nIt halts creating and optimizing clusters when either:\n\n    1. The centroids have stabilized \u2014 there is no change in their values because the clustering has been successful.\n    2. The defined number of iterations has been achieved.","dc0c72c3":"After all the analyses we now start with the K-Means Clustering procedure\n\nK-means is a centroid-based algorithm, or a distance-based algorithm, where we calculate the distances to assign a point to a cluster. In K-Means, each cluster is associated with a centroid.\n\nThe main objective of the K-Means algorithm is to minimize the sum of distances between the points and their respective cluster centroid. The first step in k-means is to pick the number of clusters, k. Then keep the iterations running until one of the below satisifes:\n\n    1. Centroids of newly formed clusters do not change\n    2. Points remain in the same cluster\n    3. Maximum number of iterations are reached\n\nIn K Means clustering we need to first assign the K number of clusters which can be taken up using the thumb rule of \"Sqrt(n)\/2\" or plotting the Elbow curve, aka Scree plot. ","8cd3dbef":"Now in order to deal with the outliers we can use one of \"3R Techniques\" viz:\n       1. Rectify\n       2. Retain\n       3. Remove\n\nIn our example we choose let say to keep or retain the data, but how should we keep outliers in the data and work forward?\nWe use the Winsorization techniue!!! This technique helps modify the sample distribution of random variables by \nremoving the outliers and replacing them with the values that constitute the 5th percentile and 95th percentile values,\ni.e, all data below 5th percentile gets replaced with the value of the 5th percentile and all the values above \n95th percentile, with the 95th percentile value.","4379e3d3":"Data Description:\nThe file EastWestAirlines contains information on passengers who belong to an airline\u2019s frequent flier program. \nFor each passenger the data include information on their mileage history and on different ways they accrued or \nspent miles in the last year. The goal is to try to identify clusters of passengers that have similar characteristics \nfor the purpose of targeting different segments for different types of mileage offers.\n\nID# --Unique ID\n\nBalance--Number of miles eligible for award travel\n\nQual_mile--Number of miles counted as qualifying for Topflight status\n\ncc1_miles -- Number of miles earned with freq. flyer credit card in the past 12 months:\n\ncc2_miles -- Number of miles earned with Rewards credit card in the past 12 months:\n\ncc3_miles -- Number of miles earned with Small Business credit card in the past 12 months:\n\n1 = under 5,000\n\n2 = 5,000 - 10,000\n\n3 = 10,001 - 25,000\n\n4 = 25,001 - 50,000\n\n5 = over 50,000\n\nBonus_miles--Number of miles earned from non-flight bonus transactions in the past 12 months\n\nBonus_trans--Number of non-flight bonus transactions in the past 12 months\n\nFlight_miles_12mo--Number of flight miles in the past 12 months\n\nFlight_trans_12--Number of flight transactions in the past 12 months\n\nDays_since_enrolled--Number of days since enrolled in flier program\n\nAward?--whether that person had award flight (free flight) or not"}}