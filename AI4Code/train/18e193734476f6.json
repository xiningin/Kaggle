{"cell_type":{"2322f055":"code","8e4ac6b1":"code","5231bedf":"code","da48bf97":"code","42823bbe":"code","05b7fe84":"code","8bbe4138":"code","c311b266":"code","ab1f0464":"code","ec3199ec":"code","62a1cada":"code","dc76ab16":"markdown","c30ad799":"markdown","29aecb77":"markdown","74843489":"markdown"},"source":{"2322f055":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport random","8e4ac6b1":"df = pd.read_csv(\"..\/input\/Ads_Optimisation.csv\")","5231bedf":"df.head()","da48bf97":"df.shape","42823bbe":"N = 10000\nd = 10\ntotal = 0\nselected = []\nfor n in range(0,N):\n    ad = random.randrange(d)\n    selected.append(ad)\n    prize = df.values[n,ad]\n    total = total + prize","05b7fe84":"total","8bbe4138":"plt.hist(selected)\nplt.show()","c311b266":"import math\nN = 10000\nd = 10\nawards = [0] * d\ntotal = 0\nclicks = [0] * d\nselected = []\nfor n in range(1,N):\n    ad = 0\n    max_ucb = 0\n    for i in range(0,d):\n        if(clicks[i]>0):\n            mean = awards[i] \/ clicks[i]\n            delta = math.sqrt(3\/2*math.log(n)\/clicks[i])\n            ucb = mean + delta\n        else:\n            ucb = N*10\n        if max_ucb < ucb:\n            max_ucb = ucb\n            ad = i\n    selected.append(ad)\n    clicks[ad] = clicks[ad] + 1\n    prize = df.values[n,ad]\n    awards[ad] = awards[ad] + prize\n    total = total + prize\nprint(\"Total Prize : \", total)","ab1f0464":"plt.hist(selected)\nplt.show()","ec3199ec":"import math\nN = 10000\nd = 10\nawards = [0] * d\ntotal = 0\nclicks = [0] * d\nselected = []\nones = [0] * d\nzeros = [0] * d\nfor n in range(1,N):\n    ad = 0\n    max_th = 0\n    for i in range(0,d):\n        randomBeta = random.betavariate(ones[i] + 1, zeros[i]+1)\n        if randomBeta > max_th:\n            max_th = randomBeta\n            ad = i\n        selected.append(ad)\n        prize = df.values[n,ad]\n        if prize == 1:\n            ones[ad] = ones[ad] + 1\n        else:\n            zeros[ad] = zeros[ad] + 1\n        total = total + prize\nprint(\"toplam odul : \", total)","62a1cada":"plt.hist(selected)\nplt.show()","dc76ab16":"# Reinforcement Learning","c30ad799":"# Upper Confidence Bound","29aecb77":"# Random Selection","74843489":"# Thompson Sampling"}}