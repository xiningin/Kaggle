{"cell_type":{"7f3d0146":"code","53022b56":"code","724f0194":"code","2ed428a2":"code","5c0505ba":"code","b7c31d42":"code","9a6564dd":"code","3ab17ac8":"code","c446651b":"code","fb26c239":"code","a5dc1b46":"code","ccfacb64":"code","20892f47":"code","79a42606":"code","905b212e":"code","bb76df97":"code","4d7a719e":"code","2d30981e":"code","661858fb":"code","39b6191d":"code","43da1de1":"code","4ddc181e":"code","50b1ac42":"code","0ec2bb6b":"code","49abfbc0":"code","05e31cc4":"code","ba879072":"code","575f06dd":"code","8c4bf8fa":"code","8d1e8486":"code","2482665f":"code","3a89303c":"code","b756f722":"code","fcb2880f":"code","801d66f9":"code","b6ad3cd8":"code","e49e1e34":"markdown","2a4e1a05":"markdown","f0f8c17e":"markdown","628c4a00":"markdown","744fefb9":"markdown","433815a7":"markdown","85f2a9df":"markdown","1bc6f42f":"markdown","4342913e":"markdown"},"source":{"7f3d0146":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/\"))\n\n# Any results you write to the current directory are saved as output.","53022b56":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","724f0194":"bnk_prt_df = pd.read_csv(\"..\/input\/PS_20174392719_1491204439457_log.csv\")\n","2ed428a2":"bnk_prt_df.head(10)","5c0505ba":"## Heatmap of isnull indicates that this dataset does not have any null values\nsns.heatmap(bnk_prt_df.isnull())","b7c31d42":"bnk_prt_df.describe()","9a6564dd":"## Analyzing the data, seems like positive fraud data is very minimal in this dataset. Find below the stats for the same\nsns.countplot(x='isFraud',data=bnk_prt_df)\nprint(bnk_prt_df['isFraud'].value_counts())","3ab17ac8":"## Analyzing the data, seems like positive fraud data is very minimal in this dataset. \n## Analyzing only the positive fraud dataset, it seems like they belong only to the datatype - Transfer, Cash_out\n## Other types doesn't seem to contribute to positive fraud data\n## Find below the stats for the same\n\nsns.countplot(x='type',data=bnk_prt_df[bnk_prt_df['isFraud']==1],hue='isFraud')\nprint(bnk_prt_df['type'].value_counts())\nprint(bnk_prt_df[bnk_prt_df['isFraud']==1]['type'].unique())","c446651b":"## 16 data which are identified as true isFlaggedFraud are identified as Fraud\n## 8197 data out of 63.62 lakhs data which are identified with true isFlaggedFraud are identified as Fraud\n## Among 8197 data, there are equal splits for Transfer and Cashout types\n\nsns.countplot(x='isFlaggedFraud',data=bnk_prt_df,hue='isFraud')","fb26c239":"bnk_prt_df[bnk_prt_df['isFlaggedFraud']==1]['isFraud'].value_counts()","a5dc1b46":"bnk_prt_df[bnk_prt_df['isFlaggedFraud']==0]['isFraud'].value_counts()","ccfacb64":"bnk_prt_df[np.logical_and(bnk_prt_df['isFlaggedFraud']==0, bnk_prt_df['isFraud']==1)]['type'].value_counts()","20892f47":"sns.countplot(x='step',data=bnk_prt_df)","79a42606":"bnk_prt_df['step'].value_counts()","905b212e":"## Fraudulent transactions have happened when the amount is less. It is evident from the graph below\nsns.jointplot('amount','isFraud',data=bnk_prt_df)","bb76df97":"## fraudulent transactions are more when oldBalanceOrg of the origin from where the account transfer happened is higher than\n## when it is less\nsns.jointplot(x='oldbalanceOrg',y='isFraud',data=bnk_prt_df)","4d7a719e":"## fraudulent transactions are more when newBalanceOrg of the origin from where the account transfer happened is higher than\n## when it is less\nsns.jointplot(x='newbalanceOrig',y='isFraud',data=bnk_prt_df)","2d30981e":"## fraudulent transactions are more when oldBalanceDest of the destination to where the account transfer happened is \n## higher than when it is less\nsns.jointplot(x='oldbalanceDest',y='isFraud',data=bnk_prt_df)","661858fb":"## fraudulent transactions are more when newbalanceDest of the destination to where the account transfer happened is \n## higher than when it is less\nsns.jointplot(x='newbalanceDest',y='isFraud',data=bnk_prt_df)","39b6191d":"##One hot encoding for type column so that the values are captured\n\nbnk_prt_df['CASH_IN'] = pd.get_dummies(bnk_prt_df['type'])['CASH_IN']\nbnk_prt_df['CASH_OUT'] = pd.get_dummies(bnk_prt_df['type'])['CASH_OUT']\nbnk_prt_df['DEBIT'] = pd.get_dummies(bnk_prt_df['type'])['DEBIT']\nbnk_prt_df['PAYMENT'] = pd.get_dummies(bnk_prt_df['type'])['PAYMENT']\nbnk_prt_df['TRANSFER'] = pd.get_dummies(bnk_prt_df['type'])['TRANSFER']\nbnk_prt_df.drop('CASH_IN',axis=True,inplace=True)\nbnk_prt_df.info()","43da1de1":"## multivariate analysis\n## As seen from correlation matrix values, doesn't seem that isFraud is related to any variables here\n\nbnk_prt_df.corr()","4ddc181e":"X = bnk_prt_df[['step','amount','oldbalanceOrg','newbalanceOrig','oldbalanceDest','newbalanceDest','isFlaggedFraud','CASH_OUT','DEBIT','PAYMENT','TRANSFER']]\nY = bnk_prt_df['isFraud']","50b1ac42":"from sklearn.model_selection import train_test_split","0ec2bb6b":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=1)","49abfbc0":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix","05e31cc4":"lr = LogisticRegression()\nknn = KNeighborsClassifier()\nsvc = SVC()\nnb = GaussianNB()\ndtc = DecisionTreeClassifier()\nrfc = RandomForestClassifier()\nbc = BaggingClassifier()\nabc = AdaBoostClassifier()\ngbc = GradientBoostingClassifier()","ba879072":"def trainFitTest(model):\n    ##models = [lr,knn,svc,nb,dtc,rfc,bc,abc,gbc]\n    score = []\n    ##for model in models:\n    model.fit(X_train,Y_train)\n    print(' score - ',model.score(X_test,Y_test))\n    score.append(model.score(X_test,Y_test))\n    Y_rfc_pred = model.predict(X_test)\n    print(classification_report(Y_test,Y_rfc_pred))\n    print(confusion_matrix(Y_test,Y_rfc_pred))","575f06dd":"trainFitTest(lr)","8c4bf8fa":"##trainFitTest(knn)","8d1e8486":"trainFitTest(dtc)","2482665f":"trainFitTest(nb)","3a89303c":"##trainFitTest(svc)","b756f722":"trainFitTest(rfc)","fcb2880f":"trainFitTest(bc)","801d66f9":"trainFitTest(abc)","b6ad3cd8":"trainFitTest(gbc)","e49e1e34":"<h3>Analysis of isFraud True or False<\/h3>","2a4e1a05":"* <h3>Analysis of oldbalanceOrg vs isFraud<\/h3>","f0f8c17e":"* <h3>Analysis of amount vs isFraud<\/h3>","628c4a00":"<h3>Analysis of dataset for null values<\/h3>","744fefb9":"<h3>Analysis of isFlaggedFraud Vs isFraud in the dataset<\/h3>","433815a7":"<h3>Analysis of newBalanceOrig vs isFraud in the dataset<\/h3>","85f2a9df":"<h3>Analysis of step vs isFraud in the dataset<\/h3>","1bc6f42f":"<h3>Analysis of oldbalanceDest Vs isFraud in the dataset<\/h3>","4342913e":"<h3>Analysis of type vs isFraud in the dataset <\/h3>"}}