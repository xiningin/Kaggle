{"cell_type":{"8507ee24":"code","99b8ec49":"code","aad2a9bc":"code","bf1a8d8f":"code","7d1d2502":"code","42e1355e":"code","322f54d2":"markdown","d9fbe67f":"markdown","441bbc13":"markdown","a7732e1c":"markdown","6e9d8a06":"markdown","f2a1b07e":"markdown"},"source":{"8507ee24":"import numpy as np\nimport pandas as pd\nimport pathlib\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier","99b8ec49":"path = pathlib.Path.cwd().parent\npath = path \/ \"input\"\/ \"breast-cancer-wisconsin-data\"\ndf = pd.read_csv(f\"{path}\/data.csv\")","aad2a9bc":"keys = df.columns\n# Drop id and Unnamed :32 columns\nkeys = [key for key in keys if key not in {\"id\", \"Unnamed: 32\"}]\n\n# Drop rows with 0 values\ndf = df[keys].replace(0, np.nan)\ndf.dropna(inplace=True)\n\n# Encode diagnosis column\ndf[[\"diagnosis\"]] = df[[\"diagnosis\"]].replace(\"M\", 1)\ndf[[\"diagnosis\"]] = df[[\"diagnosis\"]].replace(\"B\", 0)","bf1a8d8f":"# Split dataset\ndata = df.sample(frac=0.95, random_state=786)\ndata_unseen = df.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(df.shape))\nprint('Unseen Data For Predictions: ' + str(data_unseen.shape))\n\n# Build train and test datasets\nx_train, y_train = data[keys[1:]], data[keys[0]]\nx_test, y_test = data_unseen[keys[1:]], data_unseen[keys[0]]","7d1d2502":"rf = RandomForestClassifier(n_estimators=1000)\nrf.fit(x_train, y_train)\n\ngb = GradientBoostingClassifier(n_estimators=1000)\ngb.fit(x_train, y_train)\n\nab = AdaBoostClassifier(n_estimators=1000)\nab.fit(x_train, y_train)","42e1355e":"print(\"\\nPredictions of Random Forest algorithm:\")\nprint(f\"\\tTraining Accuracy : {100 * rf.score(x_train, y_train):.3g}%\")\nprint(f\"\\tTesting Accuracy : {100 * rf.score(x_test, y_test):.3g}%\")\n\nprint(\"\\nPredictions of Gradient boosting algorithm:\")\nprint(f\"\\tTraining Accuracy : {100 * gb.score(x_train, y_train):.3g}%\")\nprint(f\"\\tTesting Accuracy : {100 * gb.score(x_test, y_test):.3g}%\")\n\nprint(\"\\nPredictions of Adaptative Boosting algorithm:\")\nprint(f\"\\tTraining Accuracy : {100 * ab.score(x_train, y_train):.3g}%\")\nprint(f\"\\tTesting Accuracy : {100 * ab.score(x_test, y_test):.3g}%\")","322f54d2":"# Load Data","d9fbe67f":"# Predictions","441bbc13":"# Data preproccesing","a7732e1c":"# Trainning","6e9d8a06":"# Build Datasets","f2a1b07e":"# Import Librairies"}}