{"cell_type":{"0b677a67":"code","45c45cc1":"code","298bfb62":"code","f3c1ceee":"code","edcc45f1":"code","2c8d8100":"code","bce604fe":"code","00177d50":"code","4a754df5":"code","8aaf4ac0":"code","6bbd5356":"code","8d104425":"code","10b9ff4c":"markdown","ca21095b":"markdown","af9a70bb":"markdown"},"source":{"0b677a67":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","45c45cc1":"import matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nimport geopandas as gpd\nimport squarify   \nfrom mpl_toolkits.basemap import Basemap\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","298bfb62":"df = pd.read_excel('..\/input\/bangaloreareaspincodewithlatitudelongitude\/BangaloreAreaLatLongDetails.xlsx')\ndf.head()","f3c1ceee":"df.Area.value_counts().value_counts()","edcc45f1":"#defines the area of the map that will include all the spatial points \nBBox=((df.Longitude.min(), df.Longitude.max(), df.Latitude.min(), df.Latitude.max()))\nBBox","2c8d8100":"#Creating a list with additional area to cover all points into the map\nBBox=[ 77.4123, 77.7831, 12.8131, 13.1885]\nBBox","bce604fe":"#import map layer extracted based on the lat and long values\nb_map = plt.imread('..\/input\/bengaluru-map\/map (1).png')\n\nfig, ax = plt.subplots(figsize = (10,8))\nax.scatter(df.Longitude,df.Latitude, zorder=2, alpha= 0.8, c='orange',edgecolors='k', s=90)\nax.set_title('Bengaluru Pin Codes', fontsize=20)\nax.set_xlim(BBox[0],BBox[1])\nax.set_ylim(BBox[2],BBox[3])\nax.imshow(b_map, zorder=1, extent=BBox,aspect='auto')\nplt.show()","00177d50":"#Using Folium to plot World Heritage Sites data on the map\n# Make an empty map\nm = folium.Map(location=[12.983668, 77.588324], tiles=\"OpenStreetMap\", zoom_start=12)\n \n# I can add marker one by one on the map\nfor i in range(0,len(df)):\n    folium.Marker([df.iloc[i]['Latitude'], df.iloc[i]['Longitude']], popup=df.iloc[i]['Area']).add_to(m)\n#m.save('Folium BBMP.png')  <-----To download the graph\nm","4a754df5":"m_5 = folium.Map(location=[12.983668, 77.588324], tiles='cartodbpositron', zoom_start=12)\n\n# Add a heatmap to the base map\nHeatMap(data=df[['Latitude', 'Longitude']], radius=30).add_to(m_5)\n\n# Display the map\nm_5","8aaf4ac0":"# Create the GeoDataFrame\ndf2 = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df[\"Longitude\"], df[\"Latitude\"]) )\n\n# Set the CRS to {'init': 'epsg:4326'}\ndf2.crs = {'init': 'epsg:4326'}\ndf2.head()","6bbd5356":"df1=gpd.read_file('..\/input\/bangalore-map\/BBMP.GeoJSON.txt')\ndf1.head()","8d104425":"# Plot points over world layer\nax = df1.plot(figsize=(15,10), linestyle=':', edgecolor='black', color='lightgray')\ndf2.plot(ax=ax, markersize=80, alpha=0.8,edgecolors='k', c='orange')\nplt.title(\"Pin Codes that come under the BBMP(Bengaluru Municipal Corporation)\", fontsize=13)\nplt.show()","10b9ff4c":"### **Plotting spatial points over the Map layer**","ca21095b":"### **Using GeoPandas to plot Pin Codes that come under BBMP (Begaluru Municipal Corporation)**","af9a70bb":"### **Using Folium**"}}