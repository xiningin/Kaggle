{"cell_type":{"55a17869":"code","4c50059e":"code","2efcb1f6":"code","073df699":"code","cfe6f5de":"code","571c768d":"code","c8b503a2":"code","5c06bc37":"code","866681e8":"code","8c2adc2e":"code","d13092b4":"code","3f23ff3a":"code","9478b7c8":"code","99aff233":"code","cb6ba583":"code","fe99a95f":"code","d9b0c655":"code","da23b3fe":"code","fdbed78d":"code","946b6515":"code","30afca54":"markdown","30812e2d":"markdown","71b88e52":"markdown","7539a184":"markdown","67348494":"markdown","540a774f":"markdown","95737a29":"markdown","6c0733e3":"markdown","60a8cb97":"markdown","f2b4c4aa":"markdown","96ac3e3e":"markdown","619998ee":"markdown"},"source":{"55a17869":"pip install -U lightautoml","4c50059e":"# Standard python libraries\nimport os\nimport time\nimport re\n\n# Installed libraries\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import log_loss\nfrom sklearn.model_selection import train_test_split\n\n# Imports from our package\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.tasks import Task\nfrom lightautoml.dataset.roles import NumericRole","2efcb1f6":"N_THREADS = 4 # threads cnt for lgbm and linear models\nN_FOLDS = 5 # folds cnt for AutoML\nRANDOM_STATE = 42 # fixed random state for various reasons\nTEST_SIZE = 0.2 # Test size for metric check\nTIMEOUT = 8 * 3600 # Time in seconds for automl run\nTARGET_NAME = 'target'","073df699":"%%time\n\ntrain_data = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntrain_data[TARGET_NAME] = train_data[TARGET_NAME].str.slice(start=6).astype(int) - 1\ntrain_data.head()","cfe6f5de":"test_data = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\ntest_data.head()","571c768d":"submission = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/sample_submission.csv')\nsubmission.head()","c8b503a2":"%%time\n\ntask = Task('multiclass',)","5c06bc37":"%%time\n\nroles = {\n    'target': TARGET_NAME,\n    'drop': ['id'],\n}","866681e8":"%%time \n\nautoml = TabularAutoML(task = task, \n                       timeout = TIMEOUT,\n                       cpu_limit = N_THREADS,\n                       general_params = {\n                           'use_algos': [['linear_l2', 'lgb_tuned', 'cb_tuned']],\n                           'return_all_predictions': True,\n                           'weighted_blender_max_nonzero_coef': 0.0\n                       },\n                       tuning_params = {'max_tuning_time': 1800},\n                       reader_params = {'n_jobs': N_THREADS},\n                       config_path = '..\/input\/lightautoml-configs\/conf_0_sel_type_0.yml'\n                       )\noof_pred = automl.fit_predict(train_data, roles = roles)\nprint('oof_pred:\\n{}\\nShape = {}'.format(oof_pred[:10], oof_pred.shape))","8c2adc2e":"%%time\n\ntest_pred = automl.predict(test_data)\nprint('Prediction for test data:\\n{}\\nShape = {}'.format(test_pred[:10], test_pred.shape))\n\n# print('Check scores...')\n# print('OOF score: {}'.format(log_loss(train_data[TARGET_NAME].values, oof_pred.data)))","d13092b4":"columns = ['PREDS_Linear_' + str(i) for i in range(1, 10)] + \\\n          ['PREDS_LGBM_' + str(i) for i in range(1, 10)] + \\\n          ['PREDS_CB_' + str(i) for i in range(1, 10)] + \\\n          ['PREDS_NN_' + str(i) for i in range(1, 10)]\ncolumns","3f23ff3a":"oof_nn = pd.read_csv('..\/input\/python-keras-nn-residual\/OOF_nn_predict.csv')\ntest_nn = pd.read_csv('..\/input\/python-keras-nn-residual\/nn_predict.csv')","9478b7c8":"OOF_preds = pd.DataFrame(np.hstack((oof_pred.data, oof_nn.drop('id', axis = 1))), columns = columns)\nTEST_preds = pd.DataFrame(np.hstack((test_pred.data, test_nn.drop('id', axis = 1))), columns = columns)","99aff233":"for col in columns:\n    train_data[col] = OOF_preds[col]\n    test_data[col] = TEST_preds[col]","cb6ba583":"test_data.head()","fe99a95f":"%%time \n\nroles = {\n    'target': TARGET_NAME,\n    'drop': ['id'],\n    NumericRole(np.float32, prob = True): columns\n}\n\nautoml = TabularUtilizedAutoML(task = task, \n                       timeout = TIMEOUT,\n                       cpu_limit = N_THREADS,\n                       general_params = {\n                           'use_algos': [['lgb_tuned', 'cb_tuned']],\n                       },\n                       tuning_params = {'max_tuning_time': 1800},\n                       reader_params = {'n_jobs': N_THREADS},\n                       configs_list = ['..\/input\/lightautoml-configs\/conf_1_sel_type_1.yml'],\n                       max_runs_per_config=1\n                       )\noof_pred = automl.fit_predict(train_data, roles = roles)\nprint('oof_pred:\\n{}\\nShape = {}'.format(oof_pred[:10], oof_pred.shape))","d9b0c655":"# Fast feature importances calculation\nfast_fi = automl.get_feature_scores('fast')\nfast_fi.set_index('Feature')['Importance'].plot.bar(figsize = (20, 10), grid = True)","da23b3fe":"test_pred = automl.predict(test_data)\nprint('Prediction for test data:\\n{}\\nShape = {}'.format(test_pred[:10], test_pred.shape))\n\nprint('Check scores...')\nprint('OOF score: {}'.format(log_loss(train_data[TARGET_NAME].values, oof_pred.data)))","fdbed78d":"submission.iloc[:, 1:] = test_pred.data\nsubmission.to_csv('lightautoml_2lvl_8hours_with_nn_oofs.csv', index = False)","946b6515":"submission","30afca54":"# Step 0.3. Data load ","30812e2d":"#### Please upvote if you find the notebook useful (and don't forget about github star :) )\n\n# Step 0.0. Install [LightAutoML](https:\/\/github.com\/sberbank-ai-lab\/LightAutoML)","71b88e52":"# Step 0.1. Import necessary libraries ","7539a184":"# Step 0.2. Parameters ","67348494":"## Step 2. Setup columns roles","540a774f":"## Step 5. Combine all OOF and test preds into train and test data","95737a29":"## Step 4. Predict for test data","6c0733e3":"## Step 7. Predict for test data and check score","60a8cb97":"# ========= AutoML preset usage =========\n\n\n## Step 1. Create Task","f2b4c4aa":"## Step 8. Prepare submission","96ac3e3e":"## Step 3. Train on full data ","619998ee":"## Step 6. Train LightAutoML model on dataset with preds"}}