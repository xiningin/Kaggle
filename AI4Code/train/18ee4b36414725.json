{"cell_type":{"d9e4f8c8":"code","50264702":"code","4851f3fd":"code","ff350618":"code","e3599ae8":"code","512e4cb5":"code","c9394273":"code","7614fd82":"markdown"},"source":{"d9e4f8c8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nage_group = pd.read_csv(\"..\/input\/population_by_age_group.csv\", index_col='Index')","50264702":"age_group.info()\nage_group.head()\n# I hid the output to make the viewing easier but you can view it","4851f3fd":"# For this plot I only need '0-4' column so I will only change that data column.\n\n# Removing whitespace in between numbers of '0-4' column\nage_group['0-4'] = age_group['0-4'].str.replace(\" \",\"\")\n\n# Making '0-4' column data from object to int64\nage_group['0-4'] = age_group['0-4'].astype(str).astype(int)","ff350618":"age_group.head()","e3599ae8":"#Making new dataframe with only required columns will make it easier to view and plot data.\n\nindices = age_group['Region, subregion, country or area *'] == 'WORLD'\nworld = age_group.loc[indices,:] \n\nindices = age_group['Region, subregion, country or area *'] == 'Sub-Saharan Africa'\nsub_saharan_africa = age_group.loc[indices,:]","512e4cb5":"#making rest of the world dataframe to make it like world and sub_saharan_africa\nrest_of_world_diff = np.subtract(world['0-4'],sub_saharan_africa['0-4'])\nrest_of_world = pd.DataFrame( columns=['Reference date (as of 1 July)', '0-4'])\nrest_of_world['0-4'] = rest_of_world_diff\nrest_of_world['Reference date (as of 1 July)'] = np.arange(2015, 2105, 5)\nprint(rest_of_world) # I hid the output but you can view it","c9394273":"xticks = np.arange(2015, 2101, 5)\nyticks = np.arange(100000, 600001, 100000)\n\nplt.figure(figsize=(16, 9), dpi=200)\nplt.plot(sub_saharan_africa['Reference date (as of 1 July)'], sub_saharan_africa['0-4'], color='#4c81a3')\nplt.plot(rest_of_world['Reference date (as of 1 July)'], rest_of_world['0-4'], color='#fd8538')\nplt.xlabel('Year')\nplt.ylabel('Kids aged 0 - 4')\nplt.xticks(xticks)\nplt.yticks(yticks,['100M','200M','300M','400M','500M','600M'])\nplt.grid(color='r', linestyle='-', alpha=0.1)\nplt.title('Kids aged 0 -4 ')\nplt.text(2057, 300000, 'SUB-SAHARAN AFRICA',rotation=10, horizontalalignment='center',verticalalignment='top',multialignment='center', color='#4c81a3', fontsize='15')\nplt.text(2057, 470000, 'THE REST OF THE WORLD',rotation=-10, horizontalalignment='center',verticalalignment='top',multialignment='center', color='#fd8538', fontsize='15')\nplt.text(2020, 170269, '173M', fontweight='bold',rotation=20, fontsize='15', color='#4c81a3')\nplt.text(2095, 275531, '293M', fontweight='bold',rotation=0, fontsize='15', color='#4c81a3')\nplt.text(2020, 509344, '506M', fontweight='bold',rotation=-10, fontsize='15', color='#fd8538')\nplt.text(2095, 369356, '357M', fontweight='bold',rotation=-10, fontsize='15', color='#fd8538')\nplt.show()","7614fd82":"**By the end of this century, half of the young people will be in Sub-Saharan Africa.**\n\nI got the idea to make this graph from [Bill and Melinda Gates\u2019s 2019 Annual Letter](https:\/\/www.gatesnotes.com\/2019-Annual-Letter) and wanted to practice Python skills. \nHere are some things I learned \n* index in pandas\n* numpy functions\n* matplotlib curve customization \n* .loc and .iloc in pandas\n\nSource: [United Nations, Department of Economic and Social Affairs, Population Division (2017). World Population Prospects: The 2017 Revision, DVD Edition.](https:\/\/population.un.org\/wpp\/Download\/Standard\/Population\/)"}}