{"cell_type":{"6dbfd4b5":"code","884250a8":"code","f84b510f":"code","47cdc6da":"code","8947c2d7":"code","fa33cd70":"code","6c143d82":"code","539d5be8":"code","2779717c":"code","357ab481":"code","ac9fe356":"code","3fe153a1":"code","c7463d44":"code","4f7d2d68":"code","dc407c03":"code","528da11b":"code","0a98c665":"code","f5c7a414":"markdown","1bb9070e":"markdown","9b563c95":"markdown","41243c77":"markdown","eb3b23c0":"markdown","313fb29f":"markdown","c0ced883":"markdown"},"source":{"6dbfd4b5":"!pip install evalml","884250a8":"import evalml\nfrom evalml import AutoMLSearch\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","f84b510f":"#import Dataset\ndataset = pd.read_csv('..\/input\/ckdisease\/kidney_disease.csv')","47cdc6da":"dataset.head()","8947c2d7":"dataset[['htn','dm','cad','pe','ane']]=dataset[['htn','dm','cad','pe','ane']].replace(to_replace={'yes':1,'no':0})\ndataset[['rbc','pc']] = dataset[['rbc','pc']].replace(to_replace={'abnormal':1,'normal':0})\ndataset[['pcc','ba']] = dataset[['pcc','ba']].replace(to_replace={'present':1,'notpresent':0})\ndataset[['appet']] = dataset[['appet']].replace(to_replace={'good':1,'poor':0,'no':np.nan})\ndataset['classification']=dataset['classification'].replace(to_replace={'ckd':1.0,'ckd\\t':1.0,'notckd':0.0,'no':0.0})\ndataset.rename(columns={'classification':'class'},inplace=True)","fa33cd70":"# Further cleaning\ndataset['pe'] = dataset['pe'].replace(to_replace='good',value=0) # Not having pedal edema is good\ndataset['appet'] = dataset['appet'].replace(to_replace='no',value=0)\ndataset['cad'] = dataset['cad'].replace(to_replace='\\tno',value=0)\ndataset['dm'] = dataset['dm'].replace(to_replace={'\\tno':0,'\\tyes':1,' yes':1, '':np.nan})\ndataset.drop('id',axis=1,inplace=True)","6c143d82":"# '?' character remove process in the dataset\nfor i in ['rc','wc','pcv']:\n    dataset[i] = dataset[i].str.extract('(\\d+)').astype(float)","539d5be8":"# Filling missing numeric data in the dataset with mean\nfor i in ['age','bp','sg','al','su','bgr','bu','sc','sod','pot','hemo','rc','wc','pcv']:\n    dataset[i].fillna(dataset[i].mean(),inplace=True)","2779717c":"dataset = dataset.dropna(axis=1) ","357ab481":"#Data preprocessing\nX = dataset.iloc[:,:-1].values\ny = dataset.iloc[:,-1].values","ac9fe356":"# Feature Scaling\nsc = StandardScaler()\nX = sc.fit_transform(X)","3fe153a1":"#Splitting the dataset in to training and testing set\nX_train , X_test , y_train , y_test   = train_test_split(X,y,test_size = 0.2 , random_state=123)  ","c7463d44":"#limiting search for efficiency\nautoml = AutoMLSearch(X_train=X_train, y_train=y_train,   problem_type='binary',allowed_model_families=['xgboost', 'lightgbm','catboost'],max_batches=5)\nautoml.search() ","4f7d2d68":"automl.rankings","dc407c03":"automl.describe_pipeline(automl.rankings.iloc[0][\"id\"])","528da11b":"pred = automl.best_pipeline\npred.predict(X_test)","0a98c665":"pred.graph()","f5c7a414":"### **Cleaning and preprocessing of data for training**","1bb9070e":"# **CKD Prediction With AUTOML | EVALML | CatBoosts | Lightgbm | Xgboost**","9b563c95":"### **Making predictions**","41243c77":"### **Load Modules and helper functions**","eb3b23c0":"### **Model rankings and best pipeline**","313fb29f":"\n\nSource: https:\/\/github.com\/alteryx\/evalml\n\nEvalML is an AutoML library which builds, optimizes, and evaluates machine learning pipelines using domain-specific objective functions.\n\nKey Functionality\n\n1.     Automation - Makes machine learning easier. Avoid training and tuning models by hand. Includes data quality checks, cross-validation and more.\n2.     Data Checks - Catches and warns of problems with your data and problem setup before modeling.\n3.     End-to-end - Constructs and optimizes pipelines that include state-of-the-art preprocessing, feature engineering, feature  selection, and a variety of modeling techniques.\n4.     Model Understanding - Provides tools to understand and introspect on models, to learn how they'll behave in your problem domain.\n5.     Domain-specific - Includes repository of domain-specific objective functions and an interface to define your own.\n \n","c0ced883":"### **Run the search for the best classification model**"}}