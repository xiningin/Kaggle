{"cell_type":{"186392b4":"code","3a05477e":"code","02b7adaa":"code","42956478":"code","f6d79e49":"code","0316e338":"code","605b40b4":"code","5d2aae9b":"code","047ceb39":"code","c187d084":"code","d990ff09":"code","db13cf9e":"code","2a047d10":"code","757a6e67":"code","4b043785":"code","5e49d986":"code","5cf8a747":"code","d3658c12":"code","d27ca3e6":"code","814c6a35":"code","9ef29ea9":"code","2924b3d9":"code","7747d996":"code","1476a195":"code","8b50cb88":"code","21408d8a":"code","6196084b":"code","b43b6f0a":"code","be04640e":"code","2133978a":"code","5cbbb5da":"code","7d8429af":"code","3c75e69e":"code","dd8e84b9":"code","bb4de718":"code","1490f592":"code","3128ca64":"code","0f2c90d1":"code","60e1a50a":"code","e804c7c4":"code","2bfe453a":"code","1e548cdc":"code","6270848d":"code","7102c17c":"code","26ccaa91":"code","c8fbd291":"code","85a87f3a":"code","8a6a48b3":"code","3e422bc8":"code","d3531573":"code","6eabf4ed":"code","449cc687":"code","58819165":"code","4cbda97a":"code","52aa1be9":"code","48bf95f3":"code","726e16f0":"code","e7747f2e":"code","00e155ab":"code","f04b96b6":"code","1bba4013":"code","c336fad8":"code","df415121":"code","fc12b07d":"code","7aab9c82":"code","c22332d2":"markdown","1927b9db":"markdown","0b49f5a2":"markdown","fa035463":"markdown","8f00cd92":"markdown","5ccc6a08":"markdown","e1ac8000":"markdown","7df1f837":"markdown","b0af1359":"markdown","58778741":"markdown","d8813e26":"markdown"},"source":{"186392b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a05477e":"!pip install sktime\n!pip install PyAstronomy","02b7adaa":"df_orders = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_orders_dataset.csv\")\ndf_order_payments = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_payments_dataset.csv\")\ndf_order_review = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_reviews_dataset.csv\")\ndf_order_itens = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")\n\ndf_selers = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_sellers_dataset.csv\")\n\ndf_custumers = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_customers_dataset.csv\")\n\ndf_products = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_products_dataset.csv\")\n\ndf_geolocation = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_geolocation_dataset.csv\")\n\ndf_category_name = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/product_category_name_translation.csv\")","42956478":"df_order_itens.head()","f6d79e49":"df_products.head()","0316e338":"df_orders.head()","605b40b4":"df_product_order = df_products.merge(df_order_itens, how=\"left\")","5d2aae9b":"df_product_order","047ceb39":"df_product_order = df_product_order.merge(df_orders, how='right')","c187d084":"df_product_order","d990ff09":"df_pd_converted = df_product_order[df_product_order.order_status != 'canceled']","db13cf9e":"df_pd_converted","2a047d10":"df_product_order_filtered = df_pd_converted[['product_id','product_category_name','order_item_id','price']]\ndf_product_order_filtered","757a6e67":"df_category = df_product_order_filtered.groupby(['product_category_name']).sum()","4b043785":"df_category.sort_values('price',ascending=False)","5e49d986":"import plotly.express as px\nfig = px.line(df_category, y='order_item_id')\nfig.show()","5cf8a747":"import datetime as dt","d3658c12":"df_orders.order_status.unique()","d27ca3e6":"df_orders.info()","814c6a35":"from datetime import datetime as dt\ndf_orders[\"order_purchase_timestamp\"] = df_orders[\"order_purchase_timestamp\"].apply(lambda d: (dt.strptime(d, '%Y-%m-%d %H:%M:%S')))","9ef29ea9":"df_orders['ano'] = df_orders['order_purchase_timestamp'].dt.year\ndf_orders['mes'] = df_orders['order_purchase_timestamp'].dt.month","2924b3d9":"df_itens_orders = df_order_itens.merge(df_orders, on=\"order_id\", how=\"left\")\ndf_itens_orders","7747d996":"Teste = df_itens_orders[df_itens_orders.order_status != 'canceled']","1476a195":"Teste","8b50cb88":"Teste['periodo'] = Teste['ano'].astype(str)+'-'+Teste['mes'].astype(str)","21408d8a":"Teste.info()","6196084b":"Teste['teste'] =pd.to_datetime( pd.Series ( Teste['periodo']),format='%Y-%m')","b43b6f0a":"Teste.head()","be04640e":"teste_grupos = Teste.groupby([\"ano\", \"mes\",\"product_id\", 'periodo' ]).count()\nteste_grupos.reset_index(inplace=True)\nteste_grupos.index = teste_grupos.periodo\nteste_grupos.head()","2133978a":"#df_teste = teste_grupos.groupby(['product_id']).count().sort_values(by ='order_id', ascending = False)\n\n#df_teste.head(50)","5cbbb5da":"df_teste = teste_grupos[['ano', 'mes', 'periodo', 'product_id', 'order_id']]","7d8429af":"df_pdt_1 = df_teste.where(df_teste['product_id']=='7c1bd920dbdf22470b68bde975dd3ccf').dropna()\ndf_pdt_1.head()","3c75e69e":"df_teste = df_pdt_1['order_id']\ndf_teste.head(30)","dd8e84b9":"import plotly.express as px\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import autocorrelation_plot","bb4de718":"fig = px.line(df_teste, x=df_teste.index, y='order_id')\nfig.show()","1490f592":"autocorrelation_plot(df_teste)","3128ca64":"import pandas.util.testing as tm\nfrom statsmodels.graphics.tsaplots import plot_acf\nfrom statsmodels.graphics.tsaplots import plot_pacf\nfrom matplotlib import pyplot","0f2c90d1":"plot_acf(df_teste, lags=15)\npyplot.show()","60e1a50a":"# fit model\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom matplotlib import pyplot","e804c7c4":"# ARIMA(p,d,q)\nmodel = ARIMA(df_teste, order=(7,1,1))","2bfe453a":"model_fit = model.fit()","1e548cdc":"print(model_fit.summary())","6270848d":"from pandas import DataFrame\nresiduals = DataFrame(model_fit.resid)","7102c17c":"residuals.plot()\npyplot.show()","26ccaa91":"residuals.plot(kind='kde')\npyplot.show()","c8fbd291":"print(residuals.describe())","85a87f3a":"X = df_teste.values\nX = X.astype('float32')","8a6a48b3":"# Separa os dados com 50% dos dados para treino e 50% dos dados para teste\nsize = int(len(X) * 0.50)","3e422bc8":"# Separa dados de treino e teste\ntrain = X[0:size]\ntest =  X[size:]","d3531573":"# cria a vari\u00e1vel history\nhistory = [x for x in train]","6eabf4ed":"# cria lista de previs\u00f5es\npredictions = list()","449cc687":"# Cria a fun\u00e7\u00e3o que faz a diferencia\u00e7\u00e3o\ndef difference(dataset, interval=1):\n  diff = list() \n  for i in range(interval, len(dataset)):\n    value = dataset[i] - dataset[i - interval]\n    diff.append(value)\n  return diff","58819165":"# cria fun\u00e7\u00e3o que reverte o valor diferenciado para o original\ndef inverse_difference(history, previsao, interval=1):\n  return previsao + history[-interval]","4cbda97a":"from statsmodels.tsa.arima_model import ARIMA\nfrom matplotlib import pyplot","52aa1be9":"history = [x for x in train]\npredictions = list()\n# inicia Walk-Forward\nfor t in range(len(test)):\n  \n  # difference data\n  meses_no_ano = 1\n  diff = difference(history, meses_no_ano)\n  \n  # cria um modelo ARIMA com os dados de history\n  model = ARIMA(diff, order=(0,0,1))\n  \n  # treina o modelo ARIMA\n  model_fit = model.fit(trend='nc', disp=0)\n  \n  # a vari\u00e1vel valor_predito recebe o valor previsto pelo modelo\n  valor_predito = model_fit.forecast()[0]\n\n  # valor_predito recebe o valor revertido (escala original)\n  valor_predito = inverse_difference(history, valor_predito, meses_no_ano)\n   \n  # adiciona o valor predito na lista de predic\u00f5es\n  predictions.append(valor_predito)\n  \n  # a vari\u00e1vel valor_real recebe o valor real do teste\n  valor_real = test[t]\n  \n  # adiciona o valor real a vari\u00e1vel history\n  history.append(valor_real)\n\n  # imprime valor predito e valor real\n  print('Valor predito=%.3f, Valor esperado=%3.f' % (valor_predito, valor_real))","48bf95f3":"# Avaliando os resultados\nfrom numpy import sqrt\nfrom sklearn.metrics import mean_squared_error\nrmse = sqrt(mean_squared_error(test, predictions[0:10]))\nprint('Test RMSE: %.3f' % rmse)","726e16f0":"# plot forecasts against actual outcomes \npyplot.plot(test)\npyplot.plot(predictions, color='red')","e7747f2e":"pyplot.show()","00e155ab":"# erros residuais \nresiduals = [test[i] - predictions[i] for i in range(len(test))]","f04b96b6":"# converte a lista em um dataframe\nresiduals = pd.DataFrame(residuals)","1bba4013":"# imprime as 5 primeiras linhas\nresiduals.head()","c336fad8":"# estat\u00edstica descritiva\nresiduals.describe()","df415121":"# plot residuals\nresiduals.plot()\npyplot.show()","fc12b07d":"# plots histograma\npyplot.figure()\npyplot.subplot(211)\nresiduals.hist(ax=pyplot.gca())","7aab9c82":"pyplot.subplot(212)\nresiduals.plot(kind='kde', ax=pyplot.gca())\npyplot.show()","c22332d2":"### Verificando os produtos que mais foram vendidos","1927b9db":"### Witch category sold more products??","0b49f5a2":"### Unindo as tabelas df_order_itens com df_orders, indexador \u00e9 o order_id","fa035463":"### Removendo as linhas de compras que foram canceladas","8f00cd92":"## **Acessando os dados**\n\n### Brazilian ECommerce","5ccc6a08":"### Removing not used features","e1ac8000":"### Mudando o tipo da coluna \"order_purchase_timestamp\" de objeto para data","7df1f837":"*Incluindo tabela orders para filtrar qual order nao foi cancelada;*\nobs: Procurar forma melhor para incluir apenas a coluna order_status","b0af1359":"### Criando colunas m\u00eas e ano para que seja possivel agrupar os itens por periodo","58778741":"## *Filtering fetures for product analys*","d8813e26":"## **Product prediction**\n### Quanto o produto vai vender m\u00eas q vem??"}}