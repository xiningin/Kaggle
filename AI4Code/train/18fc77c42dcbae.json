{"cell_type":{"f1b20760":"code","e8531841":"code","dd1f08a1":"code","089ffa24":"code","39b0e1da":"code","c34bd423":"code","47f5f327":"code","b995c74c":"code","c9b6e04e":"code","a8e958ca":"code","7445a928":"code","4054ded9":"code","691650b7":"code","d5a3d270":"code","c665d3f9":"markdown","5ea43d2f":"markdown","5e686fd0":"markdown","7a5344c7":"markdown","903d2a4f":"markdown"},"source":{"f1b20760":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","e8531841":"heatmap_all = pd.read_csv('..\/input\/asa-heatmap-data\/ASA_heatmap.csv', skiprows = 1)","dd1f08a1":"heatmap_all","089ffa24":"heatmap_all.head()","39b0e1da":"heatmap_all.tail()","c34bd423":"heatmap_all.shape","47f5f327":"ready_use_data_density = np.ndarray(shape= (225, 5))\n\nintervals_density = [0.01, 0.04, 0.07, 0.10,\n                     0.13, 0.16, 0.19, 0.22,\n                     0.25, 0.28, 0.31, 0.34,\n                     0.37, 0.40, 0.43]\nintervals_height = np.arange(4, 34, 2)\n","b995c74c":"q = 0\n\nfor i in range(len(intervals_density)):\n    if intervals_density[i] <= 0.01:\n        for j in range(len(intervals_height)):\n            if intervals_height[j] <= intervals_height[0]:\n                df_SelectedByDensity = heatmap_all.loc[(heatmap_all[\"den\"] <= intervals_density[i])\n                                                &(heatmap_all[\"hei\"] <= intervals_height[j])]\n                ready_use_data_density[q, 0] = intervals_density[i]\n                ready_use_data_density[q, 1] = intervals_height[j]\n                ready_use_data_density[q, 2] = df_SelectedByDensity[\"CV_density\"].mean()\n                ready_use_data_density[q, 3] = df_SelectedByDensity[\"CV_height\"].mean()\n                ready_use_data_density[q, 4] = df_SelectedByDensity[\"CV_volume\"].mean()\n                q = q + 1\n                \n            else:\n                df_SelectedByDensity = heatmap_all.loc[(heatmap_all[\"den\"] <= intervals_density[i])\n                                                        &(heatmap_all[\"hei\"] <= intervals_height[j])\n                                                        &(heatmap_all[\"hei\"] > intervals_height[j-1])]\n                ready_use_data_density[q, 0] = intervals_density[i]\n                ready_use_data_density[q, 1] = intervals_height[j]\n                ready_use_data_density[q, 2] = df_SelectedByDensity[\"CV_density\"].mean()\n                ready_use_data_density[q, 3] = df_SelectedByDensity[\"CV_height\"].mean()\n                ready_use_data_density[q, 4] = df_SelectedByDensity[\"CV_volume\"].mean()\n                q = q + 1         \n    else:\n        for j in range(len(intervals_height)):\n            if intervals_height[j] <= intervals_height[0]:\n                df_SelectedByDensity = heatmap_all.loc[(heatmap_all[\"den\"] <= intervals_density[i])\n                                                        &(heatmap_all[\"den\"] > intervals_density[i-1])\n                                                        &(heatmap_all[\"hei\"] <= intervals_height[j])]\n\n                ready_use_data_density[q, 0] = intervals_density[i]\n                ready_use_data_density[q, 1] = intervals_height[j]\n                ready_use_data_density[q, 2] = df_SelectedByDensity[\"CV_density\"].mean()\n                ready_use_data_density[q, 3] = df_SelectedByDensity[\"CV_height\"].mean()\n                ready_use_data_density[q, 4] = df_SelectedByDensity[\"CV_volume\"].mean()\n                q = q + 1\n\n            else:\n                df_SelectedByDensity = heatmap_all.loc[(heatmap_all[\"den\"] <= intervals_density[i])\n                                                        &(heatmap_all[\"den\"] > intervals_density[i-1])\n                                                        &(heatmap_all[\"hei\"] <= intervals_height[j])\n                                                        &(heatmap_all[\"hei\"] > intervals_height[j-1])]\n                ready_use_data_density[q, 0] = intervals_density[i]\n                ready_use_data_density[q, 1] = intervals_height[j]\n                ready_use_data_density[q, 2] = df_SelectedByDensity[\"CV_density\"].mean()\n                ready_use_data_density[q, 3] = df_SelectedByDensity[\"CV_height\"].mean()\n                ready_use_data_density[q, 4] = df_SelectedByDensity[\"CV_volume\"].mean()\n                q = q + 1","c9b6e04e":"# convert ndarray to dataframe\nCV_All = pd.DataFrame(ready_use_data_density, columns=[\"Density\", \"Height\", \"CV_Density\", \"CV_Height\", \"CV_Volume\"])\n","a8e958ca":"CV_All","7445a928":"#pivot\nCV_Density = CV_All.pivot(\"Height\", \"Density\", \"CV_Density\")\nCV_Height = CV_All.pivot(\"Height\", \"Density\", \"CV_Height\")\nCV_Volume = CV_All.pivot(\"Height\", \"Density\", \"CV_Volume\")","4054ded9":"CV_Density","691650b7":"#plot figures density\n\nsns.set(context='notebook', style='ticks', palette='deep', font='sans-serif', font_scale=1.25, color_codes=True, rc=None)\nax = sns.heatmap(CV_Density,\n                 linewidths=0.005, linecolor='#aaaaaa',\n                 square=True,\n                 cmap=\"Oranges\",\n                 vmin=0, vmax=0.0005)\nplt.gca().invert_yaxis()\nplt.title(\"CV of Density\")","d5a3d270":"ax = sns.heatmap(CV_Height,\n                 linewidths=0.005, linecolor='#aaaaaa',\n                 square=True,\n                 cmap=\"Oranges\",\n                 vmin=0, vmax=0.15)\nplt.gca().invert_yaxis()\nplt.title(\"CV of Height\")","c665d3f9":"> **Let's make an empty ndarray for storing data processed**","5ea43d2f":"> **Let's explore what kind of data we have**","5e686fd0":"> **Load data**","7a5344c7":"> **Load modules **","903d2a4f":"* > **calculate average values for each bin**"}}