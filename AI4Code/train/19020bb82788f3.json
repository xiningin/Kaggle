{"cell_type":{"11878760":"code","163f7473":"code","816548ee":"code","ceb22fca":"code","058a857f":"code","2f77395d":"code","07205eac":"code","977c4ada":"code","1b7d0676":"code","e9f04960":"code","60f6a846":"code","814d4026":"code","0332908c":"code","8c026b2d":"code","a3b6cd8b":"code","7a15b614":"code","119b7b9b":"code","d38b39f3":"code","7690442b":"code","bbc6cd40":"code","f901f688":"code","79507d31":"code","92ee34ea":"code","eee3c6cf":"code","e4cc7556":"code","5970361d":"code","a7eac0c1":"code","b01be355":"code","d5b49f06":"code","05ec89d9":"code","7cb1aa1a":"code","f7582ee1":"code","26a5d095":"code","f6645875":"code","aa80baa2":"code","5ce236a6":"code","e546cb65":"code","45daa465":"code","994721b5":"code","063babf0":"code","976102fc":"code","8c4fed57":"code","17955045":"code","56ca97b5":"code","03f35ca3":"code","c0ba0e50":"code","cec2bf11":"code","c2380b2e":"code","c700378b":"code","f10dc544":"code","d0cf62a1":"code","8551e310":"code","91dbcc64":"code","e91eabe9":"code","828ca037":"code","79814188":"code","862cf00b":"code","a10bc8c6":"code","cbb6dc0f":"code","c673db6a":"code","53eaa60e":"code","4aeb21ff":"code","16c676f8":"code","b45f622a":"code","c5ae3fd9":"code","01f1156a":"code","18560512":"code","727259b2":"code","508f650a":"code","63853afc":"code","097c1d67":"code","21dd8244":"markdown","73cd1be5":"markdown","6e7a15a8":"markdown","762b8bad":"markdown","55adbc3e":"markdown","bf3511c4":"markdown","3a2f1363":"markdown","5cb8bbb5":"markdown","79ceca67":"markdown","4afdf90d":"markdown","fd22bbbd":"markdown"},"source":{"11878760":"#import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nimport plotly.graph_objects as go","163f7473":"#import data\ndata = pd.read_csv('..\/input\/covid19-indonesia\/covid_19_indonesia_time_series_all.csv')\ndata.head()","816548ee":"#investigate data information\ndata.info()","ceb22fca":"#change data type\ndata['Date'] = pd.to_datetime(data['Date'])","058a857f":"#investigate data statistics\ndata.describe()","2f77395d":"#check null data percentage\ndata.isnull().mean()*100","07205eac":"#check missing values or NaN percentage in each column\ndata.isna().mean()*100","977c4ada":"# delete column with missing (NaN) data\n# 'City or Regency' has 100% null data\ndata = data.drop('City or Regency',axis=1)","1b7d0676":"#inspect 'Special Status' column\ndata['Special Status'].value_counts()","e9f04960":"#delete 'Special Status' column\ndata = data.drop('Special Status', axis=1)","60f6a846":"#inspect 'Growth Factor of New Cases' column\ndata['Growth Factor of New Cases'].head(10)","814d4026":"# replace NaN with 0\ndata['Growth Factor of New Cases'] = data['Growth Factor of New Cases'].fillna(float(0))","0332908c":"# replace NaN with 0 for \"Growth Factor of New Deaths\"\ndata['Growth Factor of New Deaths'] = data['Growth Factor of New Deaths'].fillna(float(0))","8c026b2d":"#inspect columns with same percentage\ndata[['Province','Island','Time Zone']].head(10)","a3b6cd8b":"# replace NaN value with \"Unknown\"\ndata.update(data[['Province','Island','Time Zone']].fillna('Unknown'))","7a15b614":"#inspect 'Total Rural Villages' column\ndata[['Location','Province','Total Cities','Total Urban Villages','Total Rural Villages']].head(20)","119b7b9b":"# replace NaN with 0\ndata['Total Rural Villages'] = data['Total Rural Villages'].fillna(float(0))","d38b39f3":"# inspect 'Total Cities' column\ndata[['Province','Total Active Cases','Total Cities','Total Urban Villages','Total Rural Villages']].tail(10)","7690442b":"# replace NaN with 0\ndata['Total Cities'] = data['Total Cities'].fillna(float(0))","bbc6cd40":"# inspect 'Total Urban Villages' column\ndata[['Location','Province','Total Active Cases','Total Cities','Total Urban Villages','Total Rural Villages']].tail(40)","f901f688":"#replace NaN with 0\ndata['Total Urban Villages'].fillna(float(0), inplace=True)\n\n# check if data is clean or no missing value\ndata.isna().mean()*100","79507d31":"# inspect for duplicate value in each column\ndata[['Location ISO Code', 'Location', 'Province','Country','Continent','Island']].head(20)","92ee34ea":"# drop 'Location', duplicate value with 'Province'\ndata.drop('Location',axis=1, inplace=True)\ndata.head()","eee3c6cf":"# extract for Indonesia Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\ndata_covid = data[data['Location ISO Code']== 'IDN']\ndata_covid = data_covid[columns]\ndata_covid.head(10)","e4cc7556":"# prepare data for visualization\ndata_covid_total= data_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)\ndata_covid_total.head(10)","5970361d":"# plot Indonesia Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_covid_total['Date'],\n                         y=data_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_covid_total['Date'],\n                         y=data_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_covid_total['Date'],\n                         y=data_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_covid_total['Date'],\n                         y=data_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Indonesia Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\nfig.show()","a7eac0c1":"# plot Active Cases\nfig = go.Figure(go.Bar(x=data_covid_total['Date'],\n                       y=data_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Indonesia Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\n\nfig.show()","b01be355":"# plot Death Cases\nfig = go.Figure(go.Bar(x=data_covid_total['Date'],\n                       y=data_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\nfig.update_layout(title='Indonesia Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","d5b49f06":"# plot Recovered Cases\nfig = go.Figure(go.Bar(x=data_covid_total['Date'],\n                       y=data_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Indonesia Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","05ec89d9":"# extract for DKI Jakarta Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nJK_covid = data[data['Location ISO Code']== 'ID-JK']\nJK_covid = JK_covid[columns]\nJK_covid.head(10)","7cb1aa1a":"# prepare data for visualization\nJK_covid_total= JK_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)\nJK_covid_total.head(10)","f7582ee1":"# plot DKI Jakarta Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=JK_covid_total['Date'],\n                         y=JK_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=JK_covid_total['Date'],\n                         y=JK_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=JK_covid_total['Date'],\n                         y=JK_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=JK_covid_total['Date'],\n                         y=JK_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='DKI Jakarta Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\nfig.show()","26a5d095":"# plot Active Cases\nfig = go.Figure(go.Bar(x=JK_covid_total['Date'],\n                       y=JK_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='DKI Jakarta Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\n\nfig.show()","f6645875":"# plot Death Cases\nfig = go.Figure(go.Bar(x=JK_covid_total['Date'],\n                       y=JK_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\nfig.update_layout(title='DKI Jakarta Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","aa80baa2":"# plot Recovered\nfig = go.Figure(go.Bar(x=JK_covid_total['Date'],\n                       y=JK_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='DKI Jakarta Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","5ce236a6":"# extract for Jawa Barat Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nJB_covid = data[data['Location ISO Code']== 'ID-JB']\nJB_covid = JB_covid[columns]\nJB_covid.head(10)","e546cb65":"# prepare data for visualization\nJB_covid_total= JB_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)\nJB_covid_total.head(10)","45daa465":"# plot Jawa Barat Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=JB_covid_total['Date'],\n                         y=JB_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=JB_covid_total['Date'],\n                         y=JB_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=JB_covid_total['Date'],\n                         y=JB_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=JB_covid_total['Date'],\n                         y=JB_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Barat Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\nfig.show()","994721b5":"# plot Active Cases\nfig = go.Figure(go.Bar(x=JB_covid_total['Date'],\n                       y=JB_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Jawa Barat Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\n\nfig.show()","063babf0":"# plot Death Cases\nfig = go.Figure(go.Bar(x=JB_covid_total['Date'],\n                       y=JB_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\nfig.update_layout(title='Jawa Barat Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","976102fc":"# plot Recovered\nfig = go.Figure(go.Bar(x=JB_covid_total['Date'],\n                       y=JB_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Jawa Barat Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","8c4fed57":"# extract for Jawa Timur Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nJI_covid = data[data['Location ISO Code']== 'ID-JI']\nJI_covid = JI_covid[columns]\nJI_covid.head(10)","17955045":"# prepare data for visualization\nJI_covid_total= JI_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)\nJI_covid_total.head(10)","56ca97b5":"# plot Jawa Timur Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=JI_covid_total['Date'],\n                         y=JI_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=JI_covid_total['Date'],\n                         y=JI_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=JI_covid_total['Date'],\n                         y=JI_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=JI_covid_total['Date'],\n                         y=JI_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Timur Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\nfig.show()","03f35ca3":"# plot Active Cases\nfig = go.Figure(go.Bar(x=JI_covid_total['Date'],\n                       y=JI_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Jawa Timur Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases'\n                 )\n\nfig.show()","c0ba0e50":"# plot Death Cases\nfig = go.Figure(go.Bar(x=JI_covid_total['Date'],\n                       y=JI_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\nfig.update_layout(title='Jawa Timur Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","cec2bf11":"# plot Recovered\nfig = go.Figure(go.Bar(x=JI_covid_total['Date'],\n                       y=JI_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Jawa Timur Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","c2380b2e":"# extract for Sulawesi Selatan Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nSN_covid = data[data['Location ISO Code']== 'ID-SN']\nSN_covid = SN_covid[columns]\nSN_covid.head()","c700378b":"# prepare data for visualization\nSN_covid_total= SN_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)\nSN_covid_total.head()","f10dc544":"# plot Sulawesi Selatan Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=SN_covid_total['Date'],\n                         y=SN_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=SN_covid_total['Date'],\n                         y=SN_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=SN_covid_total['Date'],\n                         y=SN_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=SN_covid_total['Date'],\n                         y=SN_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Sulawesi Selatan Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\nfig.show()","d0cf62a1":"# plot Active Cases\nfig = go.Figure(go.Bar(x=SN_covid_total['Date'],\n                       y=SN_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Sulawesi Selatan Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\n\nfig.show()","8551e310":"# plot Death Cases\nfig = go.Figure(go.Bar(x=SN_covid_total['Date'],\n                       y=SN_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\n\nfig.update_layout(title='Sulawesi Selatan Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","91dbcc64":"# plot Recovered\nfig = go.Figure(go.Bar(x=SN_covid_total['Date'],\n                       y=SN_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Sulawesi Selatan Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","e91eabe9":"# extract for Aceh Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nAC_covid = data[data['Location ISO Code']== 'ID-AC']\nAC_covid = AC_covid[columns]","828ca037":"# prepare data for visualization\nAC_covid_total= AC_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","79814188":"# plot Aceh Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=AC_covid_total['Date'],\n                         y=AC_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=AC_covid_total['Date'],\n                         y=AC_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=AC_covid_total['Date'],\n                         y=AC_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=AC_covid_total['Date'],\n                         y=AC_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Aceh Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\nfig.show()","862cf00b":"# plot Active Cases\nfig = go.Figure(go.Bar(x=AC_covid_total['Date'],\n                       y=AC_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Aceh Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\n\nfig.show()","a10bc8c6":"# plot Death Cases\nfig = go.Figure(go.Bar(x=AC_covid_total['Date'],\n                       y=AC_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\n\nfig.update_layout(title='Aceh Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","cbb6dc0f":"# plot Recovered\nfig = go.Figure(go.Bar(x=AC_covid_total['Date'],\n                       y=AC_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Aceh Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","c673db6a":"# extract for Bali Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nBA_covid = data[data['Location ISO Code']== 'ID-BA']\nBA_covid = BA_covid[columns]","53eaa60e":"# prepare data for visualization\nBA_covid_total= BA_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","4aeb21ff":"# plot Bali Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=BA_covid_total['Date'],\n                         y=BA_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=BA_covid_total['Date'],\n                         y=BA_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=BA_covid_total['Date'],\n                         y=BA_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=BA_covid_total['Date'],\n                         y=BA_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Bali Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\nfig.show()","16c676f8":"# plot Active Cases\nfig = go.Figure(go.Bar(x=BA_covid_total['Date'],\n                       y=BA_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Bali Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\n\nfig.show()","b45f622a":"# plot Death Cases\nfig = go.Figure(go.Bar(x=BA_covid_total['Date'],\n                       y=BA_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\n\nfig.update_layout(title='Bali Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","c5ae3fd9":"# plot Recovered\nfig = go.Figure(go.Bar(x=BA_covid_total['Date'],\n                       y=BA_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Bali Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","01f1156a":"# extract for Bangka Belitung Covid-19 case \ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases']\nBB_covid = data[data['Location ISO Code']== 'ID-BB']\nBB_covid = BB_covid[columns]","18560512":"# prepare data for visualization\nBB_covid_total= BB_covid.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","727259b2":"# plot Bangka Belitung Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=BB_covid_total['Date'],\n                         y=BB_covid_total['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=BB_covid_total['Date'],\n                         y=BB_covid_total['Total Active Cases'],\n                         mode='lines',\n                         name= 'Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=BB_covid_total['Date'],\n                         y=BB_covid_total['Total Deaths'],\n                         mode='lines',\n                         name='Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=BB_covid_total['Date'],\n                         y=BB_covid_total['Total Recovered'],\n                         mode='lines',\n                         name='Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Bangka Belitung Covid Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\nfig.show()","508f650a":"# plot Active Cases\nfig = go.Figure(go.Bar(x=BB_covid_total['Date'],\n                       y=BB_covid_total['Total Active Cases'],\n                       marker_color='red'\n                      ))\n\nfig.update_layout(title='Bangka Belitung Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total Cases')\n\nfig.show()","63853afc":"# plot Death Cases\nfig = go.Figure(go.Bar(x=BB_covid_total['Date'],\n                       y=BB_covid_total['Total Deaths'],\n                       marker_color='black'\n                      ))\n\nfig.update_layout(title='Bangka Belitung Death Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Cases'\n                 )\nfig.show()","097c1d67":"# plot Recovered\nfig = go.Figure(go.Bar(x=BB_covid_total['Date'],\n                       y=BB_covid_total['Total Recovered'],\n                       marker_color='green'\n                      ))\n\nfig.update_layout(title='Bangka Belitung Recovered Cases',\n                  template='plotly_white',\n                  xaxis_title='Date',\n                  yaxis_title='Total Case'\n                 )\nfig.show()","21dd8244":"Jawa Barat Covid-19 Case","73cd1be5":"Aceh Covid-19 Case","6e7a15a8":"DKI Jakarta Covid-19 Case","762b8bad":"Jawa Timur Covid-19 Case","55adbc3e":"Bali Covid-19 Case","bf3511c4":"Import raw data and check its content","3a2f1363":"Import Libraries","5cb8bbb5":"Bangka Belitung Covid-19 Case","79ceca67":"Investigate and cleaning data","4afdf90d":"Indonesia Covid-19 Case","fd22bbbd":"Sulawesi Selatan Covid-19 Case"}}