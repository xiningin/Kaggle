{"cell_type":{"f7709fd4":"code","d38b3e34":"code","9aa8e5b5":"code","701b5aa7":"code","6c268cf8":"code","aeabfddd":"code","4ce5e413":"code","3ca39602":"code","de075259":"code","c00732db":"code","f7ae6a35":"code","f1d14c13":"code","3332f1ca":"code","7b451aff":"code","97058960":"code","f8d79f0d":"code","c707e3f5":"code","2b3a4660":"code","95345350":"code","a54ab2a3":"code","f2c0ae4a":"code","b2f7ddb3":"markdown","cfab3781":"markdown","e82ccbbb":"markdown","e962329f":"markdown","ca08c673":"markdown","1977eba8":"markdown","c06b83ae":"markdown","50ae47fb":"markdown","1c443916":"markdown","bd1d36d5":"markdown","f4822073":"markdown","248f1b7e":"markdown","ef376e70":"markdown","90ad93a3":"markdown","99fe950f":"markdown","614d35f9":"markdown","e1ab1c44":"markdown","f1ecd211":"markdown","8a1ba337":"markdown","6c3dd2dd":"markdown","b00f9f81":"markdown","33c4a9b9":"markdown","c7566665":"markdown","62d2b6db":"markdown"},"source":{"f7709fd4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\nimport scipy.stats as stats\nfrom sklearn.preprocessing import LabelEncoder\nimport copy\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d38b3e34":"sns.set() #setting the default seaborn style for our plots","9aa8e5b5":"df = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv') # read the data as a data frame","701b5aa7":"df.head()  #checking the head of the data frame","6c268cf8":"df.info()  #info about the data","aeabfddd":"df.isna().apply(pd.value_counts)   #null value check","4ce5e413":"df.describe().T   # five point summary of the continuous attributes","3ca39602":"#Plots to see the distribution of the continuous features individually\n\nplt.figure(figsize= (20,15))\nplt.subplot(3,3,1)\nplt.hist(df.bmi, color='lightblue', edgecolor = 'black', alpha = 0.7)\nplt.xlabel('bmi')\n\nplt.subplot(3,3,2)\nplt.hist(df.age, color='lightblue', edgecolor = 'black', alpha = 0.7)\nplt.xlabel('age')\n\nplt.subplot(3,3,3)\nplt.hist(df.charges, color='lightblue', edgecolor = 'black', alpha = 0.7)\nplt.xlabel('charges')\n\nplt.show()","de075259":"Skewness = pd.DataFrame({'Skewness' : [stats.skew(df.bmi),stats.skew(df.age),stats.skew(df.charges)]},\n                        index=['bmi','age','charges'])  # Measure the skeweness of the required columns\nSkewness","c00732db":"plt.figure(figsize= (20,15))\nplt.subplot(3,1,1)\nsns.boxplot(x= df.bmi, color='lightblue')\n\nplt.subplot(3,1,2)\nsns.boxplot(x= df.age, color='lightblue')\n\nplt.subplot(3,1,3)\nsns.boxplot(x= df.charges, color='lightblue')\n\nplt.show()","f7ae6a35":"plt.figure(figsize=(20,25))\n\n\nx = df.smoker.value_counts().index    #Values for x-axis\ny = [df['smoker'].value_counts()[i] for i in x]   # Count of each class on y-axis\n\nplt.subplot(4,2,1)\nplt.bar(x,y, align='center',color = 'lightblue',edgecolor = 'black',alpha = 0.7)  #plot a bar chart\nplt.xlabel('Smoker?')\nplt.ylabel('Count ')\nplt.title('Smoker distribution')\n\nx1 = df.sex.value_counts().index    #Values for x-axis\ny1 = [df['sex'].value_counts()[j] for j in x1]   # Count of each class on y-axis\n\nplt.subplot(4,2,2)\nplt.bar(x1,y1, align='center',color = 'lightblue',edgecolor = 'black',alpha = 0.7)  #plot a bar chart\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender distribution')\n\nx2 = df.region.value_counts().index    #Values for x-axis\ny2 = [df['region'].value_counts()[k] for k in x2]   # Count of each class on y-axis\n\nplt.subplot(4,2,3)\nplt.bar(x2,y2, align='center',color = 'lightblue',edgecolor = 'black',alpha = 0.7)  #plot a bar chart\nplt.xlabel('Region')\nplt.ylabel('Count ')\nplt.title(\"Regions' distribution\")\n\nx3 = df.children.value_counts().index    #Values for x-axis\ny3 = [df['children'].value_counts()[l] for l in x3]   # Count of each class on y-axis\n\nplt.subplot(4,2,4)\nplt.bar(x3,y3, align='center',color = 'lightblue',edgecolor = 'black',alpha = 0.7)  #plot a bar chart\nplt.xlabel('No. of children')\nplt.ylabel('Count ')\nplt.title(\"Children distribution\")\n\nplt.show()\n","f1d14c13":"#Label encoding the variables before doing a pairplot because pairplot ignores strings\ndf_encoded = copy.deepcopy(df)\ndf_encoded.loc[:,['sex', 'smoker', 'region']] = df_encoded.loc[:,['sex', 'smoker', 'region']].apply(LabelEncoder().fit_transform) \n\nsns.pairplot(df_encoded)  #pairplot\nplt.show()","3332f1ca":"df.smoker.value_counts()","7b451aff":"#Scatter plot to look for visual evidence of dependency between attributes smoker and charges accross different ages\nplt.figure(figsize=(8,6))\nsns.scatterplot(df.age, df.charges,hue=df.smoker,palette= ['red','green'] ,alpha=0.6)\nplt.show()","97058960":"# T-test to check dependency of smoking on charges\nHo = \"Charges of smoker and non-smoker are same\"   # Stating the Null Hypothesis\nHa = \"Charges of smoker and non-smoker are not the same\"   # Stating the Alternate Hypothesis\n\nx = np.array(df[df.smoker == 'yes'].charges)  # Selecting charges corresponding to smokers as an array\ny = np.array(df[df.smoker == 'no'].charges) # Selecting charges corresponding to non-smokers as an array\n\nt, p_value  = stats.ttest_ind(x,y, axis = 0)  #Performing an Independent t-test\n\nif p_value < 0.05:  # Setting our significance level at 5%\n    print(f'{Ha} as the p_value ({p_value}) < 0.05')\nelse:\n    print(f'{Ho} as the p_value ({p_value}) > 0.05')","f8d79f0d":"df.sex.value_counts()   #Checking the distribution of males and females","c707e3f5":"plt.figure(figsize=(8,6))\nsns.scatterplot(df.age, df.charges,hue=df.sex,palette= ['pink','lightblue'] )\nplt.show()","2b3a4660":"# T-test to check dependency of bmi on gender\nHo = \"Gender has no effect on bmi\"   # Stating the Null Hypothesis\nHa = \"Gender has an effect on bmi\"   # Stating the Alternate Hypothesis\n\nx = np.array(df[df.sex == 'male'].bmi)  # Selecting bmi values corresponding to males as an array\ny = np.array(df[df.sex == 'female'].bmi) # Selecting bmi values corresponding to females as an array\n\nt, p_value  = stats.ttest_ind(x,y, axis = 0)  #Performing an Independent t-test\n\nif p_value < 0.05:  # Setting our significance level at 5%\n    print(f'{Ha} as the p_value ({p_value.round()}) < 0.05')\nelse:\n    print(f'{Ho} as the p_value ({p_value.round(3)}) > 0.05')","95345350":"# Chi_square test to check if smoking habits are different for different genders\nHo = \"Gender has no effect on smoking habits\"   # Stating the Null Hypothesis\nHa = \"Gender has an effect on smoking habits\"   # Stating the Alternate Hypothesis\n\ncrosstab = pd.crosstab(df['sex'],df['smoker'])  # Contingency table of sex and smoker attributes\n\nchi, p_value, dof, expected =  stats.chi2_contingency(crosstab)\n\nif p_value < 0.05:  # Setting our significance level at 5%\n    print(f'{Ha} as the p_value ({p_value.round(3)}) < 0.05')\nelse:\n    print(f'{Ho} as the p_value ({p_value.round(3)}) > 0.05')\ncrosstab","a54ab2a3":"# Chi_square test to check if smoking habits are different for people of different regions\nHo = \"Region has no effect on smoking habits\"   # Stating the Null Hypothesis\nHa = \"Region has an effect on smoking habits\"   # Stating the Alternate Hypothesis\n\ncrosstab = pd.crosstab(df['smoker'], df['region'])  # Contingency table of sex and smoker attributes\n\nchi, p_value, dof, expected =  stats.chi2_contingency(crosstab)\n\nif p_value < 0.05:  # Setting our significance level at 5%\n    print(f'{Ha} as the p_value ({p_value.round(3)}) < 0.05')\nelse:\n    print(f'{Ho} as the p_value ({p_value.round(3)}) > 0.05')\ncrosstab","f2c0ae4a":"# Test to see if the distributions of bmi values for females having different number of children, are significantly different\n\nHo = \"No. of children has no effect on bmi\"   # Stating the Null Hypothesis\nHa = \"No. of children has an effect on bmi\"   # Stating the Alternate Hypothesis\n\n\nfemale_df = copy.deepcopy(df[df['sex'] == 'female'])\n\nzero = female_df[female_df.children == 0]['bmi']\none = female_df[female_df.children == 1]['bmi']\ntwo = female_df[female_df.children == 2]['bmi']\n\n\nf_stat, p_value = stats.f_oneway(zero,one,two)\n\n\nif p_value < 0.05:  # Setting our significance level at 5%\n    print(f'{Ha} as the p_value ({p_value.round(3)}) < 0.05')\nelse:\n    print(f'{Ho} as the p_value ({p_value.round(3)}) > 0.05')","b2f7ddb3":"### - There are no null values in any of the column\n","cfab3781":"### - There are a lot more non-smokers than there are smokers in the data\n### - Instances are distributed evenly accross all regions\n### - Gender is also distributed evenly\n### - Most instances have less than 2 children and very few have 4 or 5 children","e82ccbbb":"##### *BMI is not changed by the number of children a women has\n","e962329f":"### - The data has 1338 instances with 7 attributes. 2 integer type, 2 float type and 3 object type(Strings in the column) ","ca08c673":"## Do charges of people who smoke differ significantly from the people who don't?","1977eba8":"## Is the proportion of smokers significantly different in different genders?","c06b83ae":"### - Visually the difference between charges of smokers and charges of non-smokers is apparent","50ae47fb":"### - Data looks legit as all the statistics seem reasonable\n### - Looking at the age column, data looks representative of the true age distribution of the adult population\n### - Very few people have more than 2 children. 75% of the people have 2 or less children\n### - The claimed amount is higly skewed as most people would require basic medi-care and only few suffer from diseases which cost more to get rid of","1c443916":"## Does bmi of males differ significantly from that of females?","bd1d36d5":"## Is the distribution of bmi across women with no children, one child and two children, the same ?","f4822073":"### - Skew of bmi is very less as seen in the previous step\n### - age is uniformly distributed and there's hardly any skew\n### - charges are highly skewed","248f1b7e":"## Basic EDA\n* Find the shape of the data,data type of individual columns\n* Check the presence of missing values\n* Descriptive stats of numerical columns\n* Find the distribution of numerical columns and the asssociated skeweness and presence of outliers \n* Distribution of categorical columns","ef376e70":"### - The only obvious correlation of 'charges' is with 'smoker' \n### - Looks like smokers claimed more money than non-smokers\n### - There's an interesting pattern between 'age' and 'charges. Could be because for the same ailment, older people are charged more than the younger ones","90ad93a3":"##### * Smokers seem to claim significantly more money than non-smokers","99fe950f":"### - Visually, there is no apparent relation between gender and charges\n","614d35f9":"### - bmi looks quiet normally distributed \n### - Age seems be be distributed quiet uniformly \n### - As seen in the previous step, charges are highly skewed","e1ab1c44":"### - bmi has a few extreme values \n### - charges as it is highly skewed, there are quiet a lot of extreme values","f1ecd211":"##### * Proportion of smokers in males is significantly different from that of the females","8a1ba337":"##### * bmi of both the genders are identical","6c3dd2dd":"## Import all the necessary libraries","b00f9f81":"### Bi-variate distribution of every possible attribute pair","33c4a9b9":"## Read the data into the notebook","c7566665":"Charges of smoker and non-smoker are not the same as the p_value (8.271435842177219e-283) < 0.05\n","62d2b6db":"##### * Smoking haboits of people of different regions are similar"}}