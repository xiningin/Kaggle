{"cell_type":{"8e63652f":"code","aabc7dec":"code","facfb7a3":"code","f519ff5c":"code","88cc7a25":"code","632b5e73":"code","6f23a910":"code","a7cfb4dd":"code","26fbc9ed":"code","108c62f1":"code","0790c645":"code","3ba653ae":"code","e71449a5":"code","df5cb06e":"code","9117c91d":"code","96c140c6":"code","818545d7":"code","eff99d53":"code","d8a96548":"code","b72eeb13":"code","05fad89d":"code","d8e03ae1":"code","43337363":"code","a7874b63":"code","910edb70":"code","58dec4d7":"code","95c8f19d":"code","c5b0b0a3":"code","94f2d1c7":"code","775903a9":"code","4e9fad6a":"code","09f04d85":"code","65e11c5f":"code","db920f70":"code","27908bd6":"code","81827d23":"code","c2e6d646":"code","837307f1":"code","54e08ec9":"code","07595665":"code","e4287080":"code","bc98c029":"markdown","25722049":"markdown","66660cf4":"markdown","6bc2f286":"markdown","30730eaf":"markdown","c6638642":"markdown","080382a3":"markdown","3b902069":"markdown","7cf8d5a2":"markdown","63a5778b":"markdown","0ca262c2":"markdown","961288a9":"markdown","5bce9bc4":"markdown","93ea8c04":"markdown","68eb3edd":"markdown","d96f7844":"markdown","277753c6":"markdown","f9faadf0":"markdown","51a0b5e2":"markdown","ed60e075":"markdown","147d4c18":"markdown","912d2a4d":"markdown","8ef91e6f":"markdown","0d055cce":"markdown","4775609b":"markdown","adf602e1":"markdown","3118fc4f":"markdown","6544928c":"markdown","8674506f":"markdown","c63fb44f":"markdown","e767a379":"markdown","5587bf81":"markdown","2abf980b":"markdown","950673b0":"markdown"},"source":{"8e63652f":"import numpy as np \nimport pandas as pd\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"darkgrid\")\nfrom collections import Counter\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ndf=pd.read_csv('..\/input\/diamonds\/diamonds.csv')","aabc7dec":"df.head()","facfb7a3":"sns.relplot(\n            x=\"carat\",\n            y=\"price\",\n            hue=\"clarity\", # added to color axis, \n            size=\"depth\",  # added size as dimention\n\n            data=df,\n            height=7,\n            alpha=0.8,\n            edgecolor=None,\n            palette=\"Set1\", # change color palette ( CMRmap_r)\n            style=\"color\",  ###\n           )\n# kind=\"line\", when there is two dimention","f519ff5c":"df1=df.iloc[:200]\nsns.relplot(x=\"carat\",y=\"depth\",data=df1,kind=\"line\", ci=\"sd\")\n# ci : confidence interval , sd : standard diviation or none\n\nplt.savefig(\"graph2.png\")","88cc7a25":"data = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')\ndata.head()","632b5e73":"data.dropna(how=\"any\",inplace = True)\ndata.Year = data.Year.astype(int)\ndata.info()","6f23a910":"f, ax = plt.subplots(figsize=(6,8))\ndata = data[data.Global_Sales<5]\nsns.boxplot(x=\"Global_Sales\",\n            y=\"Genre\",\n            data=data,\n            palette='Set2',\n            ax=ax)\n\n'''\nor \nsns.catplot(x=\"Global_Sales\", \n            y=\"Genre\",\n            hue=\"Platform\",\n            data=data,\n            palette='tab20',\n            kind=\"box\", # boxen\n            height=8\n            )\n'''","a7cfb4dd":"sns.catplot(x=\"Global_Sales\", \n            y=\"Genre\",\n            data=data,\n            palette='tab20',\n            kind=\"boxen\", # boxen\n            height=8\n            )","26fbc9ed":"platform_count = Counter(data.Platform)","108c62f1":"data.nunique().sort_values(ascending=False)","0790c645":"platform_count = Counter(data.Platform) \nmost_platform  = platform_count.most_common(20)\nplatform_name,count = zip(*most_platform)\nplatform_name,count = list(platform_name),list(count)\n\nprint(platform_name)\nprint(count)","3ba653ae":"# visualization\n\nplt.figure(figsize=(15,10))\nax=sns.barplot(x=platform_name, y=count, palette='rocket')\nplt.xlabel('Platform')\nplt.ylabel('Frequency')\nplt.title('Most common 20 of Platform')\nplt.show()","e71449a5":"# 2013-2016 \nnew_data = data[(data.Year>2012) & (data.Year<2017)]\n\nplt.figure(figsize=(15,10))\nsns.catplot(x=\"Year\",\n            y=\"Global_Sales\",\n            kind=\"bar\", # point\n            hue=\"Platform\",\n            data=new_data,\n            edgecolor=None,\n            height=8.27,\n            aspect=11.7\/8.27,ci=None)\nplt.show()","df5cb06e":"data1=data[['Year','Genre','Global_Sales']]\ndata1=data1.set_index('Year')\ndata2010=[]\nfor i in range(2010, 2017):\n    data2010.append([sum(data1.loc[i].Genre=='Shooter'),\n                     sum(data1.loc[i].Genre=='Sports'),\n                     sum(data1.loc[i].Genre=='Action'),\n                     sum(data1.loc[i].Genre=='Role-Playing')\n                    ])\ndf=pd.DataFrame(data2010,columns = ['Shooter' , 'Sports', 'Action','Role-Playing'])\ndf['Year']=[2010,2011,2012,2013,2014,2015,2016]\ndf","9117c91d":"f,ax1 = plt.subplots(figsize =(20,10))\n\nsns.pointplot(x='Year',y='Action',data=df,color='lime',alpha=0.7)\nsns.pointplot(x='Year',y='Shooter',data=df,color='red',alpha=0.7)\nsns.pointplot(x='Year',y='Sports',data=df,color='blue',alpha=0.7)\nsns.pointplot(x='Year',y='Role-Playing',data=df,color='orange',alpha=0.7)\n\nplt.xlabel('Years',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.text(5.7,240,'Action',color='lime',fontsize = 15,style = 'italic')\nplt.text(5.7,230,'Shooter',color='red',fontsize = 15,style = 'italic')\nplt.text(5.7,220,'Sports',color='blue',fontsize = 15,style = 'italic')\nplt.text(5.7,210,'Role-Playing',color='orange',fontsize = 15,style = 'italic')\nplt.grid()","96c140c6":"iris=pd.read_csv('..\/input\/iris\/Iris.csv')\niris.corr()","818545d7":"sns.jointplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=iris)\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# height=8","eff99d53":"#correlation map\niriscorr = iris.drop([\"Id\"],axis=1).corr()\nf, ax = plt.subplots(figsize=(7,7))\nsns.heatmap(iriscorr, annot=True, linewidths=0.2, fmt='.2f', ax=ax, cmap=\"rocket_r\" )\nplt.show()","d8a96548":"sns.catplot(x=\"Origin\", \n            y=\"Horsepower\",\n            data=cars,\n            palette='inferno',\n            kind=\"boxen\",\n            height=8\n            )\nplt.savefig('graph.png')","b72eeb13":"fmri.head()","05fad89d":"f, ax = plt.subplots(figsize=(10,8))\nsns.stripplot(x=\"subject\",\n              y=\"signal\",\n              data=fmri,\n              ax=ax,\n              palette=\"hsv\")","d8e03ae1":"f, ax = plt.subplots(figsize=(10,8))\nsns.stripplot(x=\"signal\",\n              y=\"subject\",\n              data=fmri,\n              ax=ax,\n              palette=\"hsv\")","43337363":"f, ax = plt.subplots(figsize=(10,8))\nsns.stripplot(x=\"subject\",\n              y=\"signal\",\n              data=fmri,\n              jitter=False,\n              alpha=0.25,\n              ax=ax,\n              palette=\"hsv\")\nplt.savefig(\"graph1.png\")","a7874b63":"f, ax = plt.subplots(figsize=(8,8))\nsns.swarmplot(x=\"region\",\n              y=\"signal\",\n              data=fmri\n              )","910edb70":"f, ax = plt.subplots(figsize=(8,8))\nsns.swarmplot(x=\"region\",\n              y=\"signal\",\n              hue=\"event\",\n              data=fmri,\n              palette=\"rocket\"\n              )","58dec4d7":"f, ax = plt.subplots(figsize=(8,8))\nsns.swarmplot(x=\"region\",\n              y=\"signal\",\n              data=fmri,\n              palette=\"CMRmap\",\n              alpha=0.5\n              )\nsns.boxplot(x=\"region\",\n            y=\"signal\",\n            data=fmri,\n            palette=\"Set1\",\n            )","95c8f19d":"df1.head()","c5b0b0a3":"f, ax = plt.subplots(figsize=(10,8))\nsns.countplot(x=\"color\",\n              hue=\"cut\",\n              data=df1,\n              edgecolor=None,\n              palette=\"inferno\",\n              ax=ax)","94f2d1c7":"\nsns.pairplot(iris, kind=\"reg\",\n             x_vars=[\"SepalLengthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             y_vars=[\"SepalLengthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             height=5)","775903a9":"sns.pairplot(iris, kind=\"reg\",\n             x_vars=[\"SepalLengthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             y_vars=[\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             height=5)","4e9fad6a":"f, ax = plt.subplots(figsize=(8,8))\nsns.violinplot(x=\"Origin\", y=\"Horsepower\", data=cars, ax=ax, inner=\"points\")","09f04d85":"sns.catplot(x=\"Origin\", y=\"Horsepower\", data=cars, kind=\"violin\", height=8)","65e11c5f":"cars[\"Old\"] = cars.Year < 76","db920f70":"sns.catplot(x=\"Origin\",\n            y=\"Horsepower\",\n            hue = \"Old\",\n            data=cars,\n            split=True, # You need to turn on this parameter!\n            inner = \"stick\", \n            kind=\"violin\",\n            palette=\"Blues\",\n            height=8\n           )","27908bd6":"sns.lmplot(x=\"PetalLengthCm\", y=\"PetalWidthCm\", data=iris, height=7)","81827d23":"sns.regplot(x=\"PetalLengthCm\", y=\"PetalWidthCm\", data=iris,order=3)","c2e6d646":"sns.lmplot(x=\"SepalLengthCm\",\n           y=\"PetalWidthCm\",\n           hue=\"Species\",\n           data=iris,\n           height=7)","837307f1":"cylinder8 = cars.loc[cars.Cylinders == 8]\ncylinder5 = cars.loc[cars.Cylinders == 5]\n\nf, ax = plt.subplots(figsize=(10,8))\n\nsns.kdeplot(cylinder8.Horsepower, cylinder8.Weight, cmap=\"Reds\", shade=True, shade_lowest=False, alpha=0.9)\nsns.kdeplot(cylinder5.Horsepower, cylinder5.Weight, cmap=\"Blues\", shade=True, shade_lowest=False, alpha=1)","54e08ec9":"f, ax = plt.subplots(figsize=(7,7))\nsns.distplot(df1.depth, kde=False)","07595665":"f, ax = plt.subplots(figsize=(7,7))\nsns.distplot(df1.depth, hist=False, kde=True)","e4287080":"f, ax = plt.subplots(figsize=(7,7))\nsns.distplot(df1.depth)","bc98c029":"<a id=\"22\"><\/a>\n### Multiple regression with lmplot","25722049":"> To do so, just change the location of x and y **seaborn** takes care of the rest.","66660cf4":"<a id=\"13\"><\/a> \n# Box Plot \n\n> Boxplots are a standardized way of displaying the distribution of data based on a five number summary (\u201cminimum\u201d, first quartile (Q1), median, third quartile (Q3), and \u201cmaximum\u201d).","6bc2f286":"### References\n\n* https:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners\n \n* https:\/\/www.datafloyd.com\/tr\/seaborn-kutuphanesi-ile-gorsellestirme","30730eaf":"![](https:\/\/miro.medium.com\/max\/1838\/1*2c21SkzJMf3frPXPAR_gZA.png)","c6638642":"### Tip: You can turn off the vibration parameter by setting \"**jitter = False**\".","080382a3":"<a id=\"6\"><\/a> \n## Bar Plot","3b902069":"<a id=\"9\"><\/a>\n#### Example 1: <font color=#696969>**Scatter representation with jointplot**<\/font> ","7cf8d5a2":"<a id=\"27\"><\/a> \n# CONCLUSION\n\nIf you like it, please upvote :)","63a5778b":"> **Tip: The default behavior of the distplot function is to have both the histogram and kde plotted.**","0ca262c2":"## Bar Plot, Point Plot","961288a9":"<a id=\"21\"><\/a> \n## lmplot and regplot (linear model plots)\n\n> The **lmplot** and **regplot** functions are used to represent the linear (or nth degree) relationship between two variables.","5bce9bc4":"<a id=\"23\"><\/a>\n# KDE Plot","93ea8c04":"<a id=\"4\"><\/a> \n#### Example 2: <font color=#696969>show line graphs with relplot<\/font>","68eb3edd":"<a id=\"16\"><\/a> \n## Swarm Plot","d96f7844":"<a id=\"26\"><\/a>\n### plot the kde(kernel density estimation) with the distplot","277753c6":"<a id=\"14\"><\/a> \n## *boxenplot*","f9faadf0":"> **countplot** shows the numbers in each category. Here we just need to write x or y. If we want, we can set the **hue** parameter.","51a0b5e2":"<a id=\"20\"><\/a> \n## Violin Plot\n\n> **This is the favorite chart of many people. With \"Kde: kernel density estimation\" method, the violin-like distributions are drawn.**","ed60e075":"# Auther dataset","147d4c18":"If we wish, we can assign any variable as color in this swarm chart. For example, let's assign the variable **\"event\"** as **hue**.","912d2a4d":"> **Tip: When the number of categories is high, you can choose to move the categorical variable to the y-axis, that is, visualize the chart horizontally.**","8ef91e6f":"<a id=\"17\"><\/a> \n### Swarm + Box plot","0d055cce":"### With catplot","4775609b":"## Tip: If the x and y variables are not the same, we cannot see the histograms in between.","adf602e1":"<a id=\"2\"><\/a> \n## Relational Plot(relplot)\n<a id=\"3\"><\/a> \n#### Example 1: <font color=#696969>binary (and more) variable analysis with relplot<\/font> ","3118fc4f":"<a id=\"18\"><\/a> \n## Count Plot","6544928c":"<a id=\"1\"><\/a> \n# Why use seaborn?\n\n* seaborn allows you to make beautiful visualizations with very short codes.\n* If you use pandas for your data analysis, it is a perfect match for you.\n* Optimized for statistical analysis.\n* It is a well-known and widespread tool among data scientists.\n","8674506f":"<a id=\"15\"><\/a> \n## Strip Plot","c63fb44f":"<a id=\"12\"><\/a> \n## Heatmap","e767a379":"<a id=\"19\"><\/a> \n## Pair Plot","5587bf81":"<a id=\"25\"><\/a>\n### plot the histogram with the distplot","2abf980b":"<a id=\"24\"><\/a>\n# distplot (distribution plots)\n\n **distplot** is used to plot univariate distributions.\n \n>  This function does not use dataframe. For this reason, we need to give the variable we want to draw directly.","950673b0":"\n### Warning: the \"swarm plot\" data set may run very slowly when large."}}