{"cell_type":{"415e1a02":"code","ef0ecc51":"code","0db7aebb":"code","ada1c12e":"code","8e03735c":"code","bd90104d":"code","2a1417fd":"code","2634e766":"code","b1c93b50":"code","5a9cf2ec":"code","b8525561":"code","047a5407":"code","9c03b5cf":"code","d0666e10":"code","1757b6d0":"code","290f4dc3":"code","9e33353c":"code","e5867000":"code","e0ac00aa":"code","4622cfc9":"code","0e40474d":"code","b0287479":"code","52d47ec2":"code","9dcae771":"code","c2b8c752":"code","94d91f83":"code","a28d70d1":"code","5854406f":"code","4c35d191":"code","2bc4b92b":"code","19f9298b":"code","da0f006a":"code","093c01fa":"code","236154b0":"code","ada3eb14":"code","ac82faea":"code","dcc0990b":"code","e7ce8326":"code","f0baa4a6":"code","c33de43a":"code","6737cbed":"code","69fab269":"code","fd73b5f5":"code","02f61659":"code","a8ee734d":"code","e1646b76":"code","e288af32":"code","f8a5eb47":"code","56fa688e":"code","f0ace389":"code","d395ca33":"code","f0b23538":"code","27009898":"code","62d3f5eb":"code","e1a084c0":"code","98dd4ff7":"code","77c63c70":"code","539d3e53":"code","d9912f5e":"code","c1231918":"code","389606e3":"code","59c942cd":"code","af738b5f":"code","be04c417":"code","ad67adeb":"code","646a7944":"code","e8837470":"code","eb3c8ef4":"code","6c848fae":"code","eecfc047":"code","949b22aa":"code","f3675ef6":"code","a6598ae8":"code","c452259c":"code","871f237a":"code","6972a5f7":"code","491f5062":"code","138a6f82":"code","61a57539":"code","fd44c440":"code","13cde5c2":"code","864f09bb":"code","dbadb7f9":"code","32bb6f39":"code","9d3adc0f":"code","f832d318":"markdown","5adb3db2":"markdown"},"source":{"415e1a02":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport re","ef0ecc51":"data_1970_2017 = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/RoadAccidentsPersonsKilledandInjuredfrom1970to2017.csv\")","0db7aebb":"data_1970_2017.head()","ada1c12e":"fig = px.line(data_1970_2017, x=\"Years\", y=\"Total Number of Persons Killed (in numbers)\")\nfig.show()","8e03735c":"fig = px.area(data_1970_2017, x=\"Years\", y=\"Total Number of Persons Killed (in numbers)\", color=\"Years\",line_group=\"Years\")\nfig.show()","bd90104d":"fig = px.line(data_1970_2017, x=\"Years\", y=\"Population of India (in thousands)\")\nfig.show()","2a1417fd":"# fig = px.line(data_1970_2017, x=\"Years\", y=\"Road Length (in kms)\")\n# fig.show()\nimport plotly.graph_objects as go\nfig = go.Figure(data=go.Scatter(x=data_1970_2017[\"Years\"], y=data_1970_2017[\"Population of India (in thousands)\"]))\nfig.show()","2634e766":"data_1970_2017.corr().nlargest(1,'Total Number of Persons Killed (in numbers)')","b1c93b50":"data_1970_2017.columns","5a9cf2ec":"data_correlation = data_1970_2017.iloc[:,[2,4,5,6]]\n# data_1970_2017.corr()\nfig, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(data_correlation.corr(), annot = True, linewidths=.5,linecolor='red', fmt='.1f', ax=ax)\nplt.show()","b8525561":"data_state_2017 = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/StateUT-wise Type of Road Accidents in 2017.csv\")","047a5407":"data_1970_2017.shape","9c03b5cf":"Top_fatal_accident = data_state_2017.iloc[[0,11,12,13,14,23,27,33]]","d0666e10":"fig = go.Figure(data=[\n    go.Bar(name='Total Accidents', x=Top_fatal_accident['States\/UTs'], y=Top_fatal_accident['Total Accidents'], text=Top_fatal_accident['Total Accidents']),\n    go.Bar(name='Fatal Accidents', x=Top_fatal_accident['States\/UTs'], y=Top_fatal_accident['Fatal Accidents'], text=Top_fatal_accident['Fatal Accidents'])\n    \n])\n# Change the bar mode\nfig.update_layout(barmode='stack')\nfig.show()","1757b6d0":"Top_fatal_states = data_state_2017.nlargest(10,'Fatal Accidents').iloc[1:]\nTop_accidents = data_state_2017.nlargest(10,'Total Accidents').iloc[1:]","290f4dc3":"fig = px.bar(Top_fatal_states, x='States\/UTs', y='Fatal Accidents', text='Fatal Accidents', color='States\/UTs',  width=800, height=400)\n# fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n# fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","9e33353c":"fig = px.bar(Top_accidents, x='States\/UTs', y='Total Accidents', text='Total Accidents', color='States\/UTs',  width=800, height=400)\nfig.show()","e5867000":"data_occurance_actual = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/State UT-wise Road Accidents as per the Time of occurrence during 2014 and 2016.csv\")","e0ac00aa":"data_occurance = data_occurance_actual.iloc[[0,11,12,13,14,23,27,33],[1,11,12,13,14,15,16,17,18]]","4622cfc9":"data_occurance","0e40474d":"data_occurance = data_occurance.rename(columns=lambda x: x.replace(' - 2016','')) ","b0287479":"data_occurance = data_occurance.T","52d47ec2":"data_occurance = data_occurance.rename(columns={0:'Andhra Pradesh', 11:'Karnataka', 12:'Kerala', 13:'Madhya Pradesh', 14:'Maharashtra', 23:'Tamil Nadu', 27:'Uttar Pradesh', 33:'Delhi'})","9dcae771":"data_occurance = data_occurance.drop(['States\/Uts'], axis=0)","c2b8c752":"data_occurance","94d91f83":"data_occurance['Time'] = data_occurance.index","a28d70d1":"data_occurance.reset_index(inplace = True) \ndata_occurance =data_occurance.drop(['index'], axis=1)","5854406f":"data_occurance","4c35d191":"data_occurance = pd.melt(data_occurance,id_vars=['Time'],var_name='States', value_name='Number of person killed')","2bc4b92b":"data_occurance","19f9298b":"fig = px.line(data_occurance, x='Time', y=\"Number of person killed\", color = 'States')\nfig.show()","da0f006a":"data_helmet_actual = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/StateUT-wise Accidents Victims Classified according to Non-Use of Safety Device (Non Wearing of Hel.csv\")","093c01fa":"data_helmet = data_helmet_actual.iloc[[0,11,12,13,14,23,27,33]]","236154b0":"data_helmet","ada3eb14":"fig = px.bar(data_helmet, x='States\/UTs', y='Persons Killed', text='Persons Killed', color='States\/UTs', title= \"Person killed without using helmet\",  width=800, height=400)\nfig.show()","ac82faea":"fig = px.pie(data_helmet, names='States\/UTs', values='Persons Killed', title= \"Person killed without using helmet\")\nfig.show()","dcc0990b":"data_driver_responsibility_actual = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/StateUT-wise Accidents Classified according to Responsibilities of Driver during 2014 and 2016.csv\")","e7ce8326":"data_driver_responsibility = data_driver_responsibility_actual.iloc[[0,11,12,13,14,23,27,33],[1,69,72,75,78,81,84,87,90]]","f0baa4a6":"data_driver_responsibility = data_driver_responsibility.rename(columns=lambda x: re.sub(r' \\-.*', \"\",x))","c33de43a":"data_driver_responsibility = data_driver_responsibility.T","6737cbed":"data_driver_responsibility = data_driver_responsibility.rename(columns={0:'Andhra Pradesh', 11:'Karnataka', 12:'Kerala', 13:'Madhya Pradesh', 14:'Maharashtra', 23:'Tamil Nadu', 27:'Uttar Pradesh', 33:'Delhi'})","69fab269":"data_driver_responsibility","fd73b5f5":"data_driver_responsibility = data_driver_responsibility.drop(['State\/ UT'], axis=0)\ndata_driver_responsibility['Irresponsibility'] = data_driver_responsibility.index\ndata_driver_responsibility.reset_index(inplace = True)\ndata_driver_responsibility =data_driver_responsibility.drop(['index'], axis=1)\ndata_driver_responsibility = pd.melt(data_driver_responsibility,id_vars=['Irresponsibility'],var_name='States', value_name='Person killed')","02f61659":"data_driver_responsibility","a8ee734d":"# fig = px.line(data_driver_responsibility, x='Irresponsibility', y=\"Person killed\", color = 'States',  width=1600, height=800)\nfig = px.line(data_driver_responsibility, x='Irresponsibility', y=\"Person killed\", color = 'States')\nfig.show()","e1646b76":"data_weather_actual = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/StateUT-wise Accidents Classified according to Type of Weather Condition during 2014 and 2016.csv\")","e288af32":"data_weather = data_weather_actual.iloc[[0,11,12,13,14,23,27],[1,6,9,15,18,21,24,27,30,33,36]]\ndata_weather = data_weather.rename(columns=lambda x: re.sub(r'\\-.*','',x))\ndata_weather = data_weather.T\ndata_weather = data_weather.rename(columns={0:'Andhra Pradesh', 11:'Karnataka', 12:'Kerala', 13:'Madhya Pradesh', 14:'Maharashtra', 23:'Tamil Nadu', 27:'Uttar Pradesh'})","f8a5eb47":"data_weather = data_weather.drop(['State\/ UT'], axis=0)\ndata_weather['Weather condition'] = data_weather.index\ndata_weather.reset_index(inplace = True)\ndata_weather =data_weather.drop(['index'], axis=1)","56fa688e":"data_weather","f0ace389":"data_weather = pd.melt(data_weather,id_vars=['Weather condition'],var_name='States', value_name='Person killed')\ndata_weather","d395ca33":"fig = px.line(data_weather, x='Weather condition', y=\"Person killed\", color = 'States')\nfig.show()","f0b23538":"data_vehicle_defect_actual = pd.read_csv(\"\/kaggle\/input\/vehicle-defect\/StateUT-wise Accidents classified according to Vehicular Defect during 2012 and 2016.csv\")","27009898":"data_vehicle_defect_actual.head()","62d3f5eb":"data_vehicle_defect = data_vehicle_defect_actual.iloc[[0,11,12,13,14,23,27,33],[1,18,21,24,27]]\ndata_vehicle_defect = data_vehicle_defect.rename(columns=lambda x: re.sub(r' \\-.*', \"\",x))\ndata_vehicle_defect","e1a084c0":"data_vehicle_defect = data_vehicle_defect.T\ndata_vehicle_defect = data_vehicle_defect.rename(columns={0:'Andhra Pradesh', 11:'Karnataka', 12:'Kerala', 13:'Madhya Pradesh', 14:'Maharashtra', 23:'Tamil Nadu', 27:'Uttar Pradesh', 33:'Delhi'})\ndata_vehicle_defect = data_vehicle_defect.drop(['State\/ UT'], axis=0)\ndata_vehicle_defect['Vehicle defect type'] = data_vehicle_defect.index\ndata_vehicle_defect.reset_index(inplace = True)\ndata_vehicle_defect =data_vehicle_defect.drop(['index'], axis=1)","98dd4ff7":"data_vehicle_defect = pd.melt(data_vehicle_defect,id_vars=['Vehicle defect type'],var_name='States', value_name='Person killed')","77c63c70":"data_vehicle_defect","539d3e53":"fig = px.line(data_vehicle_defect, x='Vehicle defect type', y=\"Person killed\", color = 'States')\nfig.show()","d9912f5e":"data_location_actual = pd.read_csv(\"\/kaggle\/input\/indian-road-accident-statistics\/State UT-wise Accidents classified according to Type of Location during 2014 and 2016.csv\")","c1231918":"data_location = data_location_actual.iloc[[0,11,12,13,14,23,27,33],[1,48,51,54,60,63,72,75,78,81]]","389606e3":"data_location = data_location.rename(columns=lambda x: re.sub(r' \\-.*', \"\",x))\ndata_location = data_location.T\ndata_location = data_location.rename(columns={0:'Andhra Pradesh', 11:'Karnataka', 12:'Kerala', 13:'Madhya Pradesh', 14:'Maharashtra', 23:'Tamil Nadu', 27:'Uttar Pradesh', 33:'Delhi'})\ndata_location = data_location.drop(['State\/ UT'], axis=0)\ndata_location['Location'] = data_location.index\ndata_location.reset_index(inplace = True)\ndata_location =data_location.drop(['index'], axis=1)\ndata_location = pd.melt(data_location,id_vars=['Location'],var_name='States', value_name='Person killed')","59c942cd":"fig = px.line(data_location, x='Location', y=\"Person killed\", color = 'States')\nfig.show()","af738b5f":"data_per_thousand_actual = pd.read_csv(\"\/kaggle\/input\/indianroadaccidentstatistics\/StateUT-wise Severity of Road Accidents in India from 2014 to 2017.csv\")","be04c417":"data_per_thousand = data_per_thousand_actual.iloc[[0,11,12,13,14,23,27,33],:]\ndata_per_thousand = data_per_thousand.rename(columns=lambda x: re.sub(r'.*\\- ', \"\",x))\ndata_per_thousand = data_per_thousand.T","ad67adeb":"data_per_thousand = data_per_thousand.rename(columns={0:'Andhra Pradesh', 11:'Karnataka', 12:'Kerala', 13:'Madhya Pradesh', 14:'Maharashtra', 23:'Tamil Nadu', 27:'Uttar Pradesh', 33:'Delhi'})\ndata_per_thousand = data_per_thousand.drop(['States\/UTs'], axis=0)\ndata_per_thousand['Year'] = data_per_thousand.index\ndata_per_thousand.reset_index(inplace = True)\ndata_per_thousand =data_per_thousand.drop(['index'], axis=1)\ndata_per_thousand = pd.melt(data_per_thousand,id_vars=['Year'],var_name='States', value_name='Person killed')","646a7944":"fig = px.line(data_per_thousand, x='Year', y=\"Person killed\", color = 'States')\nfig.show()","e8837470":"Accident_dataset = data_state_2017.iloc[:,[0,1]]\nAccident_dataset = pd.merge(Accident_dataset, data_helmet_actual.iloc[:,[0,1]])\nAccident_dataset = Accident_dataset.rename(columns={'Persons Killed':'Without using helmet'})\ndummy = data_driver_responsibility_actual.iloc[:,[1,69,72,75,78,81,84,87,90]]","eb3c8ef4":"dummy = dummy.rename(columns={'State\/ UT':'States\/UTs'})\nAccident_dataset = pd.merge(Accident_dataset, dummy)\ndummy = data_location_actual.iloc[:,[1,48,51,54,60,63,72,75,78,81]]\ndummy = dummy.rename(columns={'State\/ UT':'States\/UTs'})","6c848fae":"Accident_dataset = pd.merge(Accident_dataset, dummy)\ndummy = data_occurance_actual.iloc[:,[1,11,12,13,14,15,16,17,18]]\ndummy = dummy.rename(columns={'States\/Uts':'States\/UTs'})\nAccident_dataset = pd.merge(Accident_dataset, dummy)","eecfc047":"dummy = data_vehicle_defect_actual.iloc[:,[1,18,21,24,27]]\ndummy = dummy.rename(columns={'State\/ UT':'States\/UTs'})\nAccident_dataset = pd.merge(Accident_dataset, dummy)","949b22aa":"dummy = data_weather_actual.iloc[:,[1,6,9,15,18,21,24,27,30,33,36]]\ndummy = dummy.rename(columns={'State\/ UT':'States\/UTs'})\nAccident_dataset = pd.merge(Accident_dataset, dummy)","f3675ef6":"Accident_dataset = Accident_dataset.rename(columns=lambda x: re.sub(r' \\-.*', \"\",x))\nAccident_dataset.columns","a6598ae8":"Accident_dataset_value = Accident_dataset\nAccident_total_count = Accident_dataset.iloc[36,1:]","c452259c":"Accident_dataset_value[Accident_dataset_value.isnull().any(axis=1)]","871f237a":"Accident_dataset_value = Accident_dataset_value.drop([36])\nAccident_dataset_value = Accident_dataset_value.fillna(Accident_dataset_value.mean())\nAccident_dataset_value = Accident_dataset_value.set_index('States\/UTs')\nAccident_dataset_percentage = Accident_dataset_value\/Accident_dataset_value[Accident_dataset_value.columns].sum()*100","6972a5f7":"Accident_total_count = pd.DataFrame(Accident_total_count).T\nAccident_total_count.rename(index={36:'Total person killed'},inplace=True)\nAccident_dataset_percentage = pd.concat([Accident_dataset_percentage, Accident_total_count])\nAccident_dataset_percentage = Accident_dataset_percentage.append(pd.Series(name='Threshold percentage'))\n# Accident_dataset_percentage.append(pd.Series(), ignore_index=True)\n# Accident_dataset_percentage.iloc[37,:] = Accident_dataset_percentage.iloc[36,:]\/36\n# Accident_dataset_percentage","491f5062":"Accident_dataset_percentage = Accident_dataset_percentage.iloc[:,:].astype('float')\nAccident_dataset_percentage","138a6f82":"column_dict = {0: \"Fatal Accidents\", 1: \"Without using helmet\", 2: \"Intake of Alcohal\", 3: \"Exceeding lawful speed\", 4: \"Jumping Red Light\", 5: \"Driving on wrong side\", 6: \"Jumping\/Changing lanes\", 7: \"Overtaking\", 8: \"Using Mobile Phones while driving\", 9: \"Asleep or Fatigued or Sick\", 10: \"Near School\/College\/any other educational Institutes\", 11: \"Pedestrian crossing\", 12: \"Market Place\", 13: \"Near a Religious Place\", 14: \"Near Hospital\", 15: \"Narrow bridge or culverts\", 16: \"Near Petrol Pump\", 17: \"Near Bus Stand\", 18: \"Near or on Road under Construction\", 19: \"06-900hrs\", 20: \"09-1200hrs\", 21: \"12-1500hrs\", 22: \"15-1800hrs\", 23: \"18-2100hrs\", 24: \"21-2400hrs\", 25: \"00-300hrs\", 26: \"03-600hrs\", 27: \"Defective brakes\", 28: \"Defective Steering\/Axil\", 29: \"Punctured\/burst Typres\", 30: \"Worn out Tyres\", 31: \"Mist\/fog\", 32: \"Cloudy\", 33: \"Heavy rain\", 34: \"Flooding of slipways\/rivulers\", 35: \"Hail\/sleet\", 36: \"snow\", 37: \"Strong wind\", 38: \"Dust storm\", 39: \"Very hot\", 40: \"Very cold\"}","61a57539":"for data in column_dict.keys():\n    a = np.sum(Accident_dataset_percentage.iloc[0:36,[data]].nlargest(5,column_dict[data]))\/5\n    b = np.sum(Accident_dataset_percentage.iloc[0:36,[data]].nlargest(8,column_dict[data]))\/8\n    c = np.sum(Accident_dataset_percentage.iloc[0:36,[data]].nlargest(10,column_dict[data]))\/10\n    print(a[0],b[0],c[0])","fd44c440":"for data in column_dict.keys():\n    Accident_dataset_percentage.iloc[37,[data]] = np.sum(Accident_dataset_percentage.iloc[0:36,[data]].nlargest(8,column_dict[data]))\/8","13cde5c2":"Accident_dataset_percentage.index.names=[None]\nAccident_dataset_percentage = Accident_dataset_percentage.reset_index()\nAccident_dataset_percentage = Accident_dataset_percentage.rename(columns={'index': 'States\/UTs'})\nAccident_dataset_percentage","864f09bb":"Accident_dataset_percentage.nlargest(15,'Fatal Accidents')[2:]","dbadb7f9":"Accident_dataset_percentage.columns","32bb6f39":"# Accident_dataset_percentage.to_csv(\"Road_accident_dataset.csv\")","9d3adc0f":"Accident_dataset_percentage.to_csv(\"Road_accident_no_index_dataset.csv\", encoding='utf-8', index=False)","f832d318":"**Exploratory data analysis**","5adb3db2":"Merging features into a single dataset"}}