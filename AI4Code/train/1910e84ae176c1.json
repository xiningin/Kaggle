{"cell_type":{"0bd63123":"code","62d5cf3d":"code","08766aab":"code","b60f9636":"code","a9cdca25":"code","49297352":"code","e144ee63":"code","8fd0525b":"code","eb0d30ad":"code","a11bb869":"code","bb9ce7c9":"code","578ac983":"code","7b92ed50":"code","921ab4ca":"code","92b8db64":"code","74e59702":"code","5ffd779e":"code","38234cca":"code","495e314c":"code","3665ddb5":"code","938171de":"code","0b5556e4":"code","9f192dd3":"code","86fff4af":"code","2b4e9494":"code","ec194b1a":"code","362b1d9b":"code","7d49c94f":"markdown","b03b66d0":"markdown","e8b446b8":"markdown","acaf9a3f":"markdown","3099dc3a":"markdown","d078ea1f":"markdown","a5cd6dd6":"markdown"},"source":{"0bd63123":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMPDxEQDhMQEBIQEBUXEBUREhgQEhAXFRUWFxYSExMaKCgjGRslGxcYIjIhJiorLi8uGB8zODMvNyotMSsBCgoKDg0NFQ8QGjMfHx0rKystLSsrKystKy0vLSsrKystLSs3LTAtKysrLSstLSs3LS03Ky0uLS0vLTc3NysrK\/\/AABEIAK4BIgMBIgACEQEDEQH\/xAAbAAEAAQUBAAAAAAAAAAAAAAAABAIDBQYHAf\/EADwQAAICAQIDBQYFAgQGAwAAAAECAAMRBBIFITEGEyJBURUyU5GT0RRSYXGBkqEHI0JyYnOxssHwFjM0\/8QAFwEBAQEBAAAAAAAAAAAAAAAAAAECA\/\/EACMRAQADAAEDAwUAAAAAAAAAAAABESEDAkFREmGRIjFCoeH\/2gAMAwEAAhEDEQA\/AO1RETboREQEREBERAREQEREBERAREQERMfxPjVGmKLfYENjBVHM9TgE46L+p5SxEzkLETP2ZCJFfiFQfuzYgbIGM9CfdB9CfIHrJUIRESBERAREQEREBERAREQEREBERARESskREjRERAottVFLOyqo6liFA\/cmRfa2n+PR9VPvJmJ5tHoPlLhiJ7W0\/wAej6qfePa2n+PR9VPvJe0eg+UbR6D5S4uIntbT\/Ho+qn3j2tp\/j0fVT7yXtHoPlG0eg+UYYie1tP8AHo+qn3j2tp\/j0fVT7yXtHoPlG0eg+UYYie1tP8ej6qfePa2n+PR9VPvJe0eg+UbB6D5RhiJ7X0\/x6Pqp95I0+pS0E1OlgBwSjBwD6EiV7R6D5T0DHSTExRqLhWjO5wqKSx64AGTNW4tr7Ea0sEoD1h97r3r1ooZSwA5BgSoC5PNx+s2q2sMpVgCrAhgehB6gzR+JaE3aq9e9crpdOFKahcVW12ZYr34II5geI5OVHM4M68MReunHEXqPwDWn8N3Gms76trAoFtfd2VuzBgMqSMEBmDc\/dI9BN70ep7wHKlGRtrqee04B6jqCCDn9Zoeh4LisW6ewUJTeGC4LXXWclXfuPg94gLjnuJ85uvBuFrpKzWjWWbnLM1h3OxPqcDyE1z+m7hrl9PZNssCqWYhVAySxwAPUk9JE9raf49H1U+8mETzYPQfKcMcUT2tp\/j0fVT7x7W0\/x6Pqp95L2j0HyjaPQfKXFxE9raf49H1U+8e1tP8AHo+qn3kvaPQfKNo9B8owxE9raf49H1U+8e1tP8ej6qfeS9o9B8o2j0HyjDET2tp\/j0fVT7x7W0\/x6Pqp95L2j0HyjaPQfKMMRPa2n+PR9VPvL+n1ddue6euzHXY4fGemcdJc2D0HynoUDoAP2kxMexESBERARESskREjRERAREQEREBERAREQEjX61EtqqY4e\/d3YwSG2Dc3Py5STMfxXhY1G072rZFYIyYypZq23jPmNg+ZgVaPi1NyqyWL\/mM61hjsZzW7I2xTgsMqeY68j5z2vitLOyLYjFBlyGBVeTHm3TICNn0mPXszWGBV3UbgWUEhSFvsvRQAccmsYZIPLGMEZni9mlxhrHIFS1rhVBVUR0T9zh+fLBx0xCMp7QpO3FtR352YsU78cjs5+LmPKRddrNOEqvuVWV8GpjXvYZUvkcsjwgn+JZ1HAjYwd7nOGrYgKFUtXabRhR65wc7jhRgg5zVruArdVTUXYChAqkAZBAUC1M+7au0FW8snkcwJOuepLEZ0DWnPd7a99nhGTtPXkD\/eXfaFXIb03HYdu4B8OVVSUPMZLDr6yNquEi2qut2DitQD3ta2rZgAbmVv9XLIIPmestJwEKAveuUWyqzDBWctU1Ry1h5nPdD+o\/oAE5uJUgEm6kANtJNigBuu0nPI4B5SttbWCymysFF3OC6gqv5mHkOY5zE6Ls0lWzD2N3aBE3ndhFrsrUEknysbpgegHPNT9nwUNfeOFyjDAAYPWaiG3jxYzUvIEdTz6YDMVWK6hkIZSMgqQwI9QR1lci8N0YorCAlvEzEnqS7FmPzJ6kn1JPOSoUiIgIiICIiAiIgIiICIiAiIlZIiJGiIiAiIgIiICIiAiIgIiICInIf8RuOueM1aDVa3UcM0PcB+80+Ua12z71i8wueXPIG3pzyCTLr08nPOwui1VOsb8PxBeKcLdPft1AvupsxyAIz5jGMgYbpkTS+zfbvUaPjmrXW3X2aGzXXUE3WM9elPev3ZTdkIBjBAx4cn\/TJZbu+Z7OdaLiNx7W6jTG640LoAy0mxjSGxV4hXnbnmeePMzAcI41qW0vahm1GoLaa20acm5yaAGuwKjnwdB0x0EWW7JE4toez+sfgq8UHGeJV2\/hmu226h2oym47Dk9DjHPPXoZ0H\/AA045bxDhWm1Oo52sHV2AA7w1uyb8DkM7cnHnmLIltEREqkREBERAREQEREBERAREQERErJERI0REQEREBERAREQEREBERATmHbftHpk4kNDx3SU\/gnq3abUsj2NuwuRlea4O4Hbz90nkZ0+WtTpktXZaiWKequodT\/B5QkuIdj9PpV7SUf\/AB5rn0gpb8acualyH8O5+ZGe7xnz6GSeyXZ2viZ7SaS3AL69jU5Ge6sFl+x\/4PX1BInZdLpa6l20pXWv5a0CL8hKqqFQkoqKWOW2qBu\/U46yUlOF\/wCEl2obtDZXrgRfp9A1D5949y1SKWPmcAc\/Pr5y7wX\/APH2u\/513\/dfO3DToG37E3nq20bj+7dZ4NKgDAImH98bR4\/93r184opynsL\/AIa6HW8M0d+p\/Eubawzp+IZashj0UdOnlOq6HR10VJTSi111qFRVGAoHQCXa0CgKoCgdABgD9gJVLSxBERCkREBERAREQEREBERAREQERErJERI0REQEREBERAREQEREBERAREQESLr0cgd2WHvZ24B9w7ev\/FiQ71vHJS+MnaeTHJVMZ5jlnf8Ap\/aBlomKAuLsPGqluuRyHeD3T\/sz5fMyugWi1N28rjDZwAMbsEkdT7vkD\/GYGSiIgIiICIiAiIgIiICIiAiIgIiICIiVkiIkaIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIlZIiJGiIiAiIgWNdq1oqsusJCU1s7kAsQqKWYgDmeQPKY7h\/GnsaoWae2pL6y9dm5LUGAG22lCdjFTkdVOCN2cZyOtR2qsWoothRhWXXegYg7S6jGVz1E1ThnZ969RTZRpl4eqiz8UlV++jUbq2ArrpXw++Q\/eFVPhxjxHESWcbtHpmruei\/T6hqKGtZK9RVnaFLAsxOEU\/mYgDOScTG8Q7b6ehtYrlSNDp1tuxdXuJceGpEzktnaMnAy6jnmYrUdlLzw\/S6dFr7yrgmr0tniAHe3UUqoB81Lo3P+Zk+LcEuto4pWgXdq9ElVOWABcUuhBPkMsOcJadxTtGun4f+PNbWrioqmnZbms76xK07thyfO8EY6yRXxyp7NOtZ3pqtPZdXaCNmyvuuufUWg\/wcyjtNoX1GmFdQBcajSPzOOVOqptfn\/tRpr+v7L6hNVc2k7htO+j1nc13DKU6jUmoshXzpdkLYwcFn8iBBbZdPx\/S2JZZXqdM6UjNzJejLUOeDYwOFHI9Z6eO6XufxH4nTdwW2i3vk7ot02784zy6TVLOz2pta5ramtD6WhFF2pVbN1OoFvJqVC1kDmhAxlRuxL9XCtauGOWA1TuCDpxrQhpVFL3bNhbcGBI8Wzb4jgxZbY041W12nqqItXVUXW12VsHrK0tSDgjrnvhgj0M8PG6le9bWWldO9Ss9jhEY2qGUAnp1A\/eYLszwC\/T2aRrlUdwvExZizvOeq1dV1WDyLZVWycDmOkv8AFOB2223napWzXaC1csOaac1mwkfptPLzgtlz2g0gpGoOq0vcltot79O6LDqofOM\/pPdVx3S1be91Omr3qrJvuRN6uSFZcnmCQcEek13X8BuOp1FyVsd+uFtT03im+sHRU0M6BvA2XRgVfqDnqJC02l1FepFTUafUXDg61uAyUqu++4KCAoGwgePaBzXkp6BZbb7+MVVNaL3qpWru\/HZcigmwEgEZyvunrjPlCcd0rWJUup0xttANSC5C9gYblKLnJBHMY8prml7MXVmlW22rS\/Dsux5v+FpdHsweedxU\/wAynifBdXbcfD4BxPT6gbbK66jXVdU5OwLve7ahzvbHLkegiy2d0vafS2VXXG6quujUPTY1lqKqujbeZzgZ6jPMgiSL+O6WtK3fUaZEuGaWa5FW0ZUZrJPiGWUcvzD1mCThGortS0VLb3HENVcq94oNiakPiysnkLF3Yw2ORbB9XB+z9ter0+osStQp4i7IjbhQ2rtoZEXpk4R9xAxlj6wW2arXVuKyllbC9d1JVwRauN26vHvDBByJi345YbdVXTpnu\/Bsq2EWohctTXdhFbr4bAOZHOYrsVpg9+otR1t02neynQOp3KUtcX3bWHIqrFKhjp3JEmU9mVs1Wvt1IcpqLqjWFvtRHRdNTWwsrRgp8SMPEDkY8pS2Q0faPS2igrfUrampLaa3sVLWSxSynuyc9A39J9Jdo45prK7La9Rp3rp\/+11uRkq8\/GwOF\/mYTi3Zt7m4iteypNVwynTUHyQodTlSo5hcWJ0\/8SJb2fttW5m053GrTqFt11j2Oarxadlg5IExlCeZbOQozmFtjftBpFpW9tVpRSzFVsN6CtmGcqHzgnkeX6SV+Oq8X+ZX4ahY3jHhrbdttPoh2thunhPpNQHA9UQHdbGddRa1T13U1a2pHqrX\/MYL3NxLKQQwPhCcyQYHBtZXW+K6LbL+EVaVu7daKqbajqDnbgeAi4AbR1XoAYsttJ41pg\/dnUafft3bO9QPtCBy23OcbDuz6c5d4dxKnUp3mmtqvQHBamxbVB9NykjM1bUdmbn0+trG1Hv\/AAZrO\/bv\/DV07q2dclQWrdc4PJicGZXs7w567dRdZW9RtWpR3mobU2uK95y5yVUAuQMc8dfICrbPREQpERAREQERErJERI0REQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERKyRESNEREBERAS1beFOCHOfyozf9JdiBEs4gijLB1Hq1bAfMiW\/bFP5j\/SZOIjaPQS4zN9kD2xT+Y\/0mPbNP5j\/SZO2j0EbR6CXGa5PMfH9Uae8WKGTmD0PTocSPrOIrU6qwY7lJyozjBUYx+pYSYBKLKVYgsASPdOOa5\/KfKR06fdEt4tUqo5J2uxCnHXB25x6Zxz\/USl+M1r728csnK9Bhzz\/hGP8ftJaaVAqKEXFYAQEZ246Yz+0DSoBgImOXLaMcuY5fpkxhPsiHjNXPJYYz\/pPPABOP4Of2B9J4ONVZAO5csF8S4AJYrzPlzUiS20iEglV8OccuXMbTkefIkfsT6yo6ZM52JkHI8I5Hmc\/wBz85fpYmOvtKCnHaWxgtz\/AOHzy4C\/ue7b5SlePVnHJgepB5YGxnznz5D5mTxpKwMBEA9Nox5jH9z8zH4Sv8idMe6OmMY+RIlvpYrl8x8IQ45VjPj6ZHhPPkpx+4DrL1nEkU45nkh5D4jBUX9yT95cu0FbqUZF2nqANvp5j9h8hK\/wleMbE6Y90HkTkj9s85nCI5fMIun4xVYyqpY78bTtIBypYc\/2Bk8mUChQchVz67Rn\/wB5mXIb6Y6vyQPbFP5j\/SZ57Yp\/Mf6TJ+0egjaPQRizfZA9s0\/mP9JldfFK2OE3MfRUZj+\/ISZtHoPlAUS4zXX5\/SwmqBONtgz61sB\/JIkiImW4vuREQpERAREQERErJERI0REQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERKy\/\/2Q==',width=400,height=400)","62d5cf3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport matplotlib.pyplot as plt\nimport warnings\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","08766aab":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsaltmancsv\/altman.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'altman.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","b60f9636":"df.isnull().sum()","a9cdca25":"cols_to_drop=['Unnamed: 2','Unnamed: 3', 'Unnamed: 4', 'Unnamed: 5']\ndf=df.drop(cols_to_drop,axis=1)\ndf.columns","49297352":"#Code from Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/police-shooting-eda-interactive-map\/comments\n\nfrom colorama import Fore, Style\n\ndef count(string: str, color=Fore.RED):\n    \"\"\"\n    Saves some work \n    \"\"\"\n    print(color+string+Style.RESET_ALL)","e144ee63":"def statistics(dataframe, column):\n    count(f\"The Average value in {column} is: {dataframe[column].mean():.2f}\", Fore.RED)\n    count(f\"The Maximum value in {column} is: {dataframe[column].max()}\", Fore.BLUE)\n    count(f\"The Minimum value in {column} is: {dataframe[column].min()}\", Fore.YELLOW)\n    count(f\"The 25th Quantile of {column} is: {dataframe[column].quantile(0.25)}\", Fore.GREEN)\n    count(f\"The 50th Quantile of {column} is: {dataframe[column].quantile(0.50)}\", Fore.CYAN)\n    count(f\"The 75th Quantile of {column} is: {dataframe[column].quantile(0.75)}\", Fore.MAGENTA)","8fd0525b":"# Print Offset Column Statistics\nstatistics(df, '1_manobra_reprodutivel ')","eb0d30ad":"# Let's plot The 1st Reproducible Maneuver (A Primeira Manobra Reprodut\u00edvel)\nplt.style.use(\"classic\")\nsns.distplot(df['1_manobra_reprodutivel '], color='blue')\nplt.title(f\"First Reproducible Maneuver [\\u03BC : {df['1_manobra_reprodutivel '].mean():.2f} conditions | \\u03C3 : {df['1_manobra_reprodutivel '].std():.2f} conditions]\")\nplt.xlabel(\"First Reproducible Maneuver\")\nplt.ylabel(\"Count\")\nplt.show()","a11bb869":"# Print Offset Column Statistics\nstatistics(df, 'Maior_SNIP_alcancado')","bb9ce7c9":"# Let's plot The Highest SNIP Achieved (Maior SNIP Alcan\u00e7ado)\nplt.style.use(\"classic\")\nsns.distplot(df['Maior_SNIP_alcancado'], color='red')\nplt.title(f\"Highest SNIP Achieved [\\u03BC : {df['Maior_SNIP_alcancado'].mean():.2f} conditions | \\u03C3 : {df['Maior_SNIP_alcancado'].std():.2f} conditions]\")\nplt.xlabel(\"Highest SNIP Achieved\")\nplt.ylabel(\"Count\")\nplt.show()","578ac983":"corr = df.corr()\ncorr.style.background_gradient(cmap = 'coolwarm')","7b92ed50":"plt.figure(figsize=(20,4))\nplt.subplot(131)\nsns.countplot(x= '1_manobra_reprodutivel ', data = df, palette=\"gist_stern\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.subplot(132)\nsns.countplot(x= 'Maior_SNIP_alcancado', data = df, palette=\"ocean\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.show()","921ab4ca":"import plotly.express as px\n\nplot_data = df.groupby(['1_manobra_reprodutivel '], as_index=False).Maior_SNIP_alcancado.sum()\n\nfig = px.line(plot_data, x='1_manobra_reprodutivel ', y='Maior_SNIP_alcancado', title='1st Reproducible Maneuver Vs. The Highest SNIP')\nfig.show()","92b8db64":"import matplotlib.gridspec as gridspec\nfrom scipy.stats import skew\nfrom sklearn.preprocessing import RobustScaler,MinMaxScaler\nfrom scipy import stats\nimport matplotlib.style as style\nstyle.use('seaborn-colorblind')","74e59702":"def plotting_3_chart(df, feature): \n    ## Creating a customized chart. and giving in figsize and everything. \n    fig = plt.figure(constrained_layout=True, figsize=(10,6))\n    ## crea,ting a grid of 3 cols and 3 rows. \n    grid = gridspec.GridSpec(ncols=3, nrows=3, figure=fig)\n    #gs = fig3.add_gridspec(3, 3)\n\n    ## Customizing the histogram grid. \n    ax1 = fig.add_subplot(grid[0, :2])\n    ## Set the title. \n    ax1.set_title('Histogram')\n    ## plot the histogram. \n    sns.distplot(df.loc[:,feature], norm_hist=True, ax = ax1)\n\n    # customizing the QQ_plot. \n    ax2 = fig.add_subplot(grid[1, :2])\n    ## Set the title. \n    ax2.set_title('QQ_plot')\n    ## Plotting the QQ_Plot. \n    stats.probplot(df.loc[:,feature], plot = ax2)\n\n    ## Customizing the Box Plot. \n    ax3 = fig.add_subplot(grid[:, 2])\n    ## Set title. \n    ax3.set_title('Box Plot')\n    ## Plotting the box plot. \n    sns.boxplot(df.loc[:,feature], orient='v', ax = ax3 );\n \n\nprint('Skewness: '+ str(df['Maior_SNIP_alcancado'].skew())) \nprint(\"Kurtosis: \" + str(df['Maior_SNIP_alcancado'].kurt()))\nplotting_3_chart(df, 'Maior_SNIP_alcancado')","5ffd779e":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Blues')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","38234cca":"plot_count(\"Maior_SNIP_alcancado\", \"The highest SNIP achieved\", df,4)","495e314c":"cat = []\nnum = []\nfor col in df.columns:\n    if df[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","3665ddb5":"plt.style.use('dark_background')\nfor col in df[num].drop(['Maior_SNIP_alcancado'],axis=1):\n    plt.figure(figsize=(8,5))\n    plt.plot(df[col].value_counts(),color='Red')\n    plt.xlabel(col)\n    plt.ylabel('The highest SNIP achieved')\n    plt.tight_layout()\n    plt.show()","938171de":"g = (sns.jointplot(\"Maior_SNIP_alcancado\", \"1_manobra_reprodutivel \",data=df, color=\"r\").plot_joint(sns.kdeplot, zorder=0, n_levels=6))","0b5556e4":"fig=sns.lmplot(x=\"Maior_SNIP_alcancado\", y=\"1_manobra_reprodutivel \",data=df)","9f192dd3":"plt.figure(figsize=(18,9))\nsns.factorplot(x=col,y='Maior_SNIP_alcancado',data=df)\nplt.tight_layout()\nplt.show()","86fff4af":"!pip install dabl\nimport dabl","2b4e9494":"dabl.detect_types(df)","ec194b1a":"dabl.plot(df, target_col=\"Maior_SNIP_alcancado\")","362b1d9b":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Programming is more than an important practical art. It is also a gigantic undertaking in the foundations of knowledge, Grace Hopper quote' )","7d49c94f":"#Codes from Thor the God of Thunder","b03b66d0":"#Codes by Carl McBride Ellis  https:\/\/www.kaggle.com\/carlmcbrideellis\/absolute-beginners-titanic-eda-using-dabl","e8b446b8":"#Maximal Static Respiratory and Sniff Pressures in Healthy Children\n\nAuthors: Rahul Verma, Jackie Chiang, Hong Qian, Reshma Amin - PMID: 30562038 DOI: 10.1513\/AnnalsATS.201808-506OC\n\nRespiratory muscle strength in children can be assessed by maximal inspiratory pressures (MIP), maximal expiratory pressures (MEP), and sniff nasal inspiratory pressures (SNIP). However, previous studies involved small cohorts of healthy children and reported wide reference ranges.https:\/\/pubmed.ncbi.nlm.nih.gov\/30562038\/","acaf9a3f":"#I uploaded Bland-Altman file downloading from the Dataset. Then I uploaded just Bland_Altman.\n\nWhy? Because only the Database was avaiable. Have a peek above. There are only 2 files. The Dataset has 6 files plus Database. ","3099dc3a":"#Bland Altman analysis\n\nCitation: Giavarina D. Understanding Bland Altman analysis. Biochem Med (Zagreb). 2015;25(2):141-151. Published 2015 Jun 5. doi:10.11613\/BM.2015.015\n\nIn 1983 Altman and Bland (B&A) proposed an alternative analysis, based on the quantification of the agreement between two quantitative measurements by studying the mean difference and constructing limits of agreement.\n\nThe B&A plot analysis is a simple way to evaluate a bias between the mean differences, and to estimate an agreement interval, within which 95% of the differences of the second method, compared to the first one, fall. Data can be analyzed both as unit differences plot and as percentage differences plot.\nThe B&A plot method only defines the intervals of agreements, it does not say whether those limits are acceptable or not. Acceptable limits must be defined a priori, based on clinical necessity, biological considerations or other goals.https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC4470095\/","d078ea1f":"#Code from Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/police-shooting-eda-interactive-map\/comments","a5cd6dd6":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRoTDBmDo9ZnSA8H2n9Ao3i4YktBlnADt_HFw&usqp=CAU)slideplayer.com"}}