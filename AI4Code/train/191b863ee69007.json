{"cell_type":{"c6fae676":"code","cbcf2922":"code","a2ab3519":"code","f8abb1a5":"code","a5a275f3":"code","4d803d73":"code","2a16663f":"code","abe4abef":"code","14a27e54":"code","4a7b13fd":"code","575bc92f":"code","04debe6c":"code","1e09bc1d":"code","3a1f02d3":"code","366f6728":"code","e20abfc0":"code","695c7e5d":"code","21230b1f":"code","56cd5cd2":"code","94f51e57":"code","bd8cc535":"code","3f71c067":"code","52fc611f":"code","22e41fe9":"code","6d737d92":"code","d7041aaf":"code","94990d08":"code","445260da":"code","ed57963e":"code","a449c5c5":"code","f63f2326":"code","4b6ebf68":"code","fb7a922d":"code","7d1abcee":"code","34fea960":"code","9784288c":"code","aa68aa0f":"markdown","ae27625f":"markdown","6bfa6dbf":"markdown","9431266c":"markdown"},"source":{"c6fae676":"import numpy as np \nimport pandas as pd\n\n\n%matplotlib inline\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nfrom plotly.offline import init_notebook_mode, iplot\n\n# for visualization\nimport plotly.graph_objs as go\nimport plotly.express as px\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cbcf2922":"cwur = pd.read_csv('\/kaggle\/input\/world-university-rankings\/cwurData.csv')\ntimes = pd.read_csv('\/kaggle\/input\/world-university-rankings\/timesData.csv')\nattainment = pd.read_csv('\/kaggle\/input\/world-university-rankings\/educational_attainment_supplementary_data.csv')\nshanghai = pd.read_csv('\/kaggle\/input\/world-university-rankings\/shanghaiData.csv')\ncountry = pd.read_csv('\/kaggle\/input\/world-university-rankings\/school_and_country_table.csv')","a2ab3519":"fee = pd.read_csv('\/kaggle\/input\/world-university-rankings\/education_expenditure_supplementary_data.csv', engine='python')","f8abb1a5":"cwur['country'].replace('USA', 'United States of America', inplace=True)","a5a275f3":"times.head()","4d803d73":"times['num_students'] = times['num_students'].str.replace(',', '')\nnumstudents = times[times['num_students'].notna()]\nnumstudents['num_students'] = numstudents['num_students'].astype(int)","2a16663f":"times['num_students'].fillna(23873, inplace=True)\ntimes['num_students'] = times['num_students'].astype(int)","abe4abef":"south_korea = times.loc[times['country'] == 'South Korea']\nUnited_States_of_America = times.loc[times['country'] == 'United States of America']\nUnited_Kingdom = times.loc[times['country'] == 'United Kingdom']\nGermany = times.loc[times['country'] == 'Germany']\nAustralia = times.loc[times['country'] == 'Australia']\nCanada = times.loc[times['country'] == 'Canada']\nJapan = times.loc[times['country'] == 'Japan']\nItaly = times.loc[times['country'] == 'Italy']\nSpain = times.loc[times['country'] == 'Spain']\nChina = times.loc[times['country'] == 'China']\nNetherlands = times.loc[times['country'] == 'Netherlands']\nFrance = times.loc[times['country'] == 'France']\nTaiwan = times.loc[times['country'] == 'Taiwan']\nSweden = times.loc[times['country'] == 'Sweden']\nSwitzerland = times.loc[times['country'] == 'Switzerland']","14a27e54":"trace1 = go.Scatter(\n                    x = times.world_rank,\n                    y = times.research,\n                    mode = \"lines+markers\",\n                    name = \"research\",\n                    marker = dict(color = 'rgba(16, 126, 80, 0.8)'),\n                    text= times.university_name)\ntrace2 = go.Scatter(\n                    x = times.world_rank,\n                    y = times.total_score,\n                    mode = \"lines+markers\",\n                    name = \"total_score\",\n                    marker = dict(color = 'rgba(246, 226, 80, 0.8)'),\n                    text= times.university_name)\n\ntrace3 = go.Scatter(\n                    x = times.world_rank,\n                    y = times.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= times.university_name)\n\ndata = [trace1, trace2, trace3]\nlayout = dict(xaxis= dict(title= 'World Rank', ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","4a7b13fd":"trace1 = go.Scatter(\n                    x = times.world_rank,\n                    y = times.income,\n                    mode = \"lines+markers\",\n                    name = \"income\",\n                    marker = dict(color = 'rgba(16, 126, 80, 0.8)'),\n                    text= times.university_name)\ntrace2 = go.Scatter(\n                    x = times.world_rank,\n                    y = times.international,\n                    mode = \"lines+markers\",\n                    name = \"international\",\n                    marker = dict(color = 'rgba(246, 226, 80, 0.8)'),\n                    text= times.university_name)\n\ndata = [trace1, trace2]\nlayout = dict(xaxis= dict(title= 'World Rank', ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","575bc92f":"X = times['country']\n\nplt.figure(figsize = (16,10))\nplt.xticks(fontsize=12, rotation=90 )\nsns.countplot(x='country', data=times)","04debe6c":"south_korea2014 = times.loc[times.year == 2014]\nsouth_korea2014 = south_korea2014.loc[south_korea2014.country == 'South Korea']\nsouth_korea2015 = times.loc[times.year == 2015]\nsouth_korea2015 = south_korea2015.loc[south_korea2015.country == 'South Korea']\nsouth_korea2016 = times.loc[times.year == 2016]\nsouth_korea2016 = south_korea2016.loc[south_korea2016.country == 'South Korea']\n\ntrace1 = go.Scatter(x = south_korea2014.teaching,\n                    y = south_korea2014.world_rank,\n                    mode = 'markers',\n                    name = '2014',\n                    marker = dict(color = 'rgba(200, 120, 55, 98)')\n)\n\ntrace2 = go.Scatter(x = south_korea2015.teaching,\n                    y = south_korea2015.world_rank,\n                    mode = 'markers',\n                    name = '2015',\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)')\n)\n\ntrace3 = go.Scatter(x = south_korea2016.teaching,\n                    y = south_korea2016.world_rank,\n                    mode = 'markers',\n                    name = '2016',\n                    marker = dict(color = 'rgba(50, 250, 55, 0.8)')\n)\n\ndata = [trace1, trace2, trace3]\nlayout = dict(title = 'South Korea students teaching vs world rank 2014~2016',\n             xaxis = dict(title = 'Teaching'),\n             yaxis = dict(title = 'World rank'))\nfig = go.Figure(data = data, layout = layout)\nfig","1e09bc1d":"south_korea = south_korea.loc[south_korea.year == 2016]\nsouth_korea = south_korea.head(5)\n\ntrace1 = go.Bar(x = south_korea.university_name,\n                y = south_korea.teaching,\n                name = 'teaching',\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5))\n)\ntrace2 = go.Bar(x = south_korea.university_name,\n                y = south_korea.research,\n                name = 'research',\n                marker = dict(color = 'rgba(12, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5))\n)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\", width=800, height=600)\nfig = go.Figure(data = data, layout = layout)\nfig","3a1f02d3":"south_korea_2016 = south_korea.loc[south_korea['year'] == 2016]","366f6728":"south_korea_2016['num_students'].mean()","e20abfc0":"top_10_times_2011 = times.head(10)\ntop_10_times_2012 = times.loc[times['year'] == 2012].head(10)\ntop_10_times_2013 = times.loc[times['year'] == 2013].head(10)\ntop_10_times_2014 = times.loc[times['year'] == 2014].head(10)\ntop_10_times_2015 = times.loc[times['year'] == 2015].head(10)\ntop_10_times_2016 = times.loc[times['year'] == 2016].head(10)","695c7e5d":"bottom_10_times_2011 = times.loc[times['year'] == 2011].tail(10)\nbottom_10_times_2012 = times.loc[times['year'] == 2012].tail(10)\nbottom_10_times_2013 = times.loc[times['year'] == 2013].tail(10)\nbottom_10_times_2014 = times.loc[times['year'] == 2014].tail(10)\nbottom_10_times_2015 = times.loc[times['year'] == 2015].tail(10)\nbottom_10_times_2016 = times.loc[times['year'] == 2016].tail(10)","21230b1f":"top_10_times = top_10_times_2011.append(top_10_times_2012)\ntop_10_times = top_10_times.append(top_10_times_2013)\ntop_10_times = top_10_times.append(top_10_times_2014)\ntop_10_times = top_10_times.append(top_10_times_2015)\ntop_10_times = top_10_times.append(top_10_times_2016)","56cd5cd2":"bottom_10_times = bottom_10_times_2011.append(bottom_10_times_2012)\nbottom_10_times = bottom_10_times.append(bottom_10_times_2013)\nbottom_10_times = bottom_10_times.append(bottom_10_times_2014)\nbottom_10_times = bottom_10_times.append(bottom_10_times_2015)\nbottom_10_times = bottom_10_times.append(bottom_10_times_2016)","94f51e57":"top_10_times['international_students_num'] = top_10_times.international_students.str.extract('(\\d+)')\nbottom_10_times['international_students_avg'] = bottom_10_times.international_students.str.extract('(\\d+)')","bd8cc535":"top_10_times.head()","3f71c067":"top_10_times['international_students_num'] = top_10_times['international_students_num'].astype(int)","52fc611f":"international_students_avg = bottom_10_times[bottom_10_times['international_students_avg'].notna()]","22e41fe9":"international_students_avg['international_students_avg'] = international_students_avg['international_students_avg'].astype(int)","6d737d92":"bottom_10_times['international_students_avg'].fillna('11', inplace=True)","d7041aaf":"bottom_10_times['international_students_avg'].isnull().sum()","94990d08":"bottom_10_times['international_students_avg'] = bottom_10_times['international_students_avg'].astype(int)","445260da":"avg = bottom_10_times[bottom_10_times['num_students'].notna()]","ed57963e":"avg['num_students'] = avg['num_students'].astype(int)","a449c5c5":"bottom_10_times['num_students'].fillna('24271', inplace=True)","f63f2326":"bottom_10_times['num_students'] = bottom_10_times['num_students'].astype(int)","4b6ebf68":"cnt_ = bottom_10_times['country'].value_counts()\nfig = { \"data\": [{\n            \"values\": cnt_.values,\n            \"labels\": cnt_.index,\n            \"domain\": {\"x\": [0, .5]},\n            \"name\": \"Train types\",\n            \"hoverinfo\":\"label+percent+name\",\n            \"hole\": .7,\n            \"type\": \"pie\"\n        }],\n        \"layout\": {            \n            \"title\":\"Pie chart\",\n            \"annotations\": [{\n            \"font\": { \"size\": 20},\n        \"showarrow\": False,\n        \"text\": \"Pie Chart\",\n        \"x\": 0.50,\n        \"y\": 1\n        },\n        ]\n    }\n}\niplot(fig)","fb7a922d":"USA_2014 = times.loc[times.year == 2014]\nUSA_2014 = USA_2014.loc[USA_2014.country == 'United States of America']\nUSA_2015 = times.loc[times.year == 2015]\nUSA_2015 = USA_2015.loc[USA_2015.country == 'United States of America']\nUSA_2016 = times.loc[times.year == 2016]\nUSA_2016 = USA_2016.loc[USA_2016.country == 'United States of America']\n\ntrace1 = go.Scatter(x = USA_2014.teaching,\n                    y = USA_2014.world_rank,\n                    mode = 'markers',\n                    name = '2014',\n                    marker = dict(color = 'rgba(200, 120, 55, 98)')\n)\n\ntrace2 = go.Scatter(x = USA_2015.teaching,\n                    y = USA_2015.world_rank,\n                    mode = 'markers',\n                    name = '2015',\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)')\n)\n\ntrace3 = go.Scatter(x = USA_2016.teaching,\n                    y = USA_2016.world_rank,\n                    mode = 'markers',\n                    name = '2016',\n                    marker = dict(color = 'rgba(50, 250, 55, 0.8)')\n)\n\ndata = [trace1, trace2, trace3]\nlayout = dict(title = 'United States of America students teaching vs world rank 2014~2016',\n             xaxis = dict(title = 'Teaching'),\n             yaxis = dict(title = 'World Rank'))\nfig = go.Figure(data = data, layout = layout)\nfig","7d1abcee":"USA_2016 = times.loc[times.year == 2016]\nUSA_2016 = USA_2016.loc[USA_2016.country == 'United States of America']\nUK_2016 = times.loc[times.year == 2016]\nUK_2016 = UK_2016.loc[UK_2016.country == 'United Kingdom']\nGermany_2016 = times.loc[times.year == 2016]\nGermany_2016 = Germany_2016.loc[Germany_2016.country == 'Germany']\nAustralia_2016 = times.loc[times.year == 2016]\nAustralia_2016 = Australia_2016.loc[Australia_2016.country == 'Australia']\nCanada_2016 = times.loc[times.year == 2016]\nCanada_2016 = Canada_2016.loc[Canada_2016.country == 'Canada']\nJapan_2016 = times.loc[times.year == 2016]\nJapan_2016 = Japan_2016.loc[Japan_2016.country == 'Japan']\nItaly_2016 = times.loc[times.year == 2016]\nItaly_2016 = Italy_2016.loc[Italy_2016.country == 'Italy']\nChina_2016 = times.loc[times.year == 2016]\nChina_2016 = China_2016.loc[China_2016.country == 'China']\nNetherlands_2016 = times.loc[times.year == 2016]\nNetherlands_2016 = Netherlands_2016.loc[Netherlands_2016.country == 'Netherlands']\nFrance_2016 = times.loc[times.year == 2016]\nFrance_2016 = France_2016.loc[France_2016.country == 'France']\nSweden_2016 = times.loc[times.year == 2016]\nSweden_2016 = Sweden_2016.loc[Sweden_2016.country == 'Sweden']\nTaiwan_2016 = times.loc[times.year == 2016]\nTaiwan_2016 = Taiwan_2016.loc[Taiwan_2016.country == 'Taiwan']\nSpain_2016 = times.loc[times.year == 2016]\nSpain_2016 = Spain_2016.loc[Spain_2016.country == 'Spain']\nsouth_korea2016 = times.loc[times.year == 2016]\nsouth_korea2016 = south_korea2016.loc[south_korea2016.country == 'South Korea']\nSwitzerland_2016 = times.loc[times.year == 2016]\nSwitzerland_2016 = Switzerland_2016.loc[Switzerland_2016.country == 'Switzerland']\n\ntrace1 = go.Scatter(x = USA_2016.teaching,\n                    y = USA_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(255, 55, 255, 255)'),\n                    name = 'USA'\n)\ntrace2 = go.Scatter(x = UK_2016.teaching,\n                    y = UK_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(155, 215, 55, 55)'),\n                    name = 'UK'\n)\ntrace3 = go.Scatter(x = Germany_2016.teaching,\n                    y = Germany_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(135, 255, 55, 55)'),\n                    name = 'Germany'\n)\ntrace4 = go.Scatter(x = Australia_2016.teaching,\n                    y = Australia_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(55, 55, 55, 123)'),\n                    name = 'Australia'\n)\ntrace5 = go.Scatter(x = Canada_2016.teaching,\n                    y = Canada_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(155, 55, 55, 125)'),\n                    name = 'Canada'\n)\ntrace6 = go.Scatter(x = Japan_2016.teaching,\n                    y = Japan_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(125, 55, 55, 55)'),\n                    name = 'Japan'\n)\ntrace7 = go.Scatter(x = Italy_2016.teaching,\n                    y = Italy_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(55, 65, 5, 5)'),\n                    name = 'Italy'\n)\ntrace8 = go.Scatter(x = China_2016.teaching,\n                    y = China_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(235, 55, 55, 55)'),\n                    name = 'China'\n)\ntrace9 = go.Scatter(x = Netherlands_2016.teaching,\n                    y = Netherlands_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(18, 55, 95, 65)'),\n                    name = 'Netherlands'\n)\ntrace10 = go.Scatter(x = France_2016.teaching,\n                    y = France_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(155, 55, 55, 55)'),\n                    name = 'France'\n)\ntrace11 = go.Scatter(x = Sweden_2016.teaching,\n                    y = Sweden_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(55, 55, 55, 55)'),\n                    name = 'Sweden'\n)\ntrace12 = go.Scatter(x = Taiwan_2016.teaching,\n                    y = Taiwan_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(255, 55, 55, 55)'),\n                    name = 'Taiwan'\n)\ntrace13 = go.Scatter(x = Spain_2016.teaching,\n                    y = Spain_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(65, 75, 95, 55)'),\n                    name = 'Spain'\n)\ntrace14 = go.Scatter(x = south_korea2016.teaching,\n                    y = south_korea2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(205, 125, 155, 55)'),\n                    name = 'South Korea'\n)\ntrace15 = go.Scatter(x = Switzerland_2016.teaching,\n                    y = Switzerland_2016.world_rank,\n                    mode = 'markers',\n                    marker = dict(color = 'rgba(155, 5, 5, 55)'),\n                    name = 'Switzerland'\n)\n\n\ndata = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15]\nlayout = dict(title = 'The distribution of the ranking by the top 15 countries in 2016.',\n             xaxis = dict(title = 'Teaching'),\n             yaxis = dict(title = 'World rank'))\nfig = go.Figure(data = data, layout = layout)\nfig","34fea960":"trace1 = go.Box( y= times.teaching,\n                name = 'teaching',\n                marker = dict(color = 'rgba(12, 12, 140)')\n\n)\ntrace2 = go.Box( y= times.total_score,\n                name = 'total_score',\n                marker = dict(color = 'rgb(225, 12, 140)')\n\n)\ntrace3 = go.Box( y= times.international,\n                name = 'international',\n                marker = dict(color = 'rgb(95, 192, 250)')\n\n)\ntrace4 = go.Box( y= times.research,\n                name = 'research',\n                marker = dict(color = 'rgb(95, 52, 20)')\n\n)\ntrace5 = go.Box( y= times.income,\n                name = 'income',\n                marker = dict(color = 'rgb(110, 72, 240)')\n\n)\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = dict(width = 600, height = 600)\nfig = go.Figure(data = data, layout = layout)\nfig","9784288c":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\ncountries = times['country']\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(countries))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","aa68aa0f":"### South Korea","ae27625f":"### USA","6bfa6dbf":"### The comparison of major and minor universities.","9431266c":"# EDA"}}