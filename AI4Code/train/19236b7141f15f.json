{"cell_type":{"9adbba2c":"code","b6f59175":"code","addff793":"code","c7f710c4":"code","e42823c1":"code","24213d21":"code","8c4d27f8":"code","704b0eec":"code","766d57db":"code","009a5aa5":"code","d38d0866":"code","151a3fea":"code","02aeca82":"code","873316de":"code","66c8bfc9":"code","94d788c5":"code","be1ca1af":"code","c7799fba":"code","44279a42":"code","37c0a8f9":"markdown","47fd1958":"markdown","0a9501b4":"markdown","ff3090aa":"markdown","3c77f27a":"markdown","3c94f78a":"markdown","e04b863e":"markdown","54716908":"markdown","d68f778d":"markdown","ae996e27":"markdown"},"source":{"9adbba2c":"pip install pytrends","b6f59175":"import numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.express as px\nfrom pytrends.request import TrendReq\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","addff793":"open_line_data = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_line_list_data.csv')\ndata = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv', date_parser = 'ObservationDate')\ndata.rename(columns = {'Country\/Region':'Country', 'ObservationDate':'Date'}, inplace = True)\nall_data = data.copy()\ndata = data.groupby(['Date','Country']).sum().reset_index().sort_values('Date', ascending=False)\ndata = data.drop_duplicates(subset = ['Country'])","c7f710c4":"Confirmed = data.Confirmed.sum()\nDeaths = data.Deaths.sum()\nRecovered = data.Recovered.sum()\n\nsizes = [Confirmed, Recovered, Deaths]\nlabels = ['Confirmed', 'Recovered', 'Deaths']\n\nexplode = (0.1, 0.07,0.07)\nfig1, ax1 = plt.subplots()\nax1.set_title('Covid-19 total')\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=65, colors = ['orange','green','grey'])\n\nax1.axis('equal')  \nplt.tight_layout()\nplt.show()\nprint('On {}  - - - Confirmed: {}; Recovered: {}; Deaths: {}.'.format(list(data.Date)[0],\n                                                                      Confirmed,Recovered,Deaths))","e42823c1":"from colorama import Fore, Back, Style\nclosed = int(data.Deaths.sum()+data.Recovered.sum())\nactive = int(data.Confirmed.sum() - closed)\nprint(Fore.CYAN, 'Closed cases: ', closed)\nprint('Active cases:', active)\nprint('Cases which had an outcome: \\n Recovered: {} ({}%) \\n Deaths: {} ({}%)'.format(\n            int(data.Recovered.sum()), ((data.Recovered.sum()\/closed)*100).round(2),\n            int(data.Deaths.sum()), ((data.Deaths.sum()\/closed)*100).round(2)))","24213d21":"pytrends = TrendReq()\npytrends.build_payload(\n    ['quarantine', 'toilet paper'],\n    cat=0, timeframe='2020-02-01 2020-04-09')\n\ntrend = pytrends.interest_over_time()\ntrend['timestamp'] = pd.to_datetime(trend.index)","8c4d27f8":"sns.set(style=\"ticks\", rc={\"lines.linewidth\": 3})\nplt.figure(figsize= (10, 8))\nplt.title('Trend google searches')\nsns.lineplot(x = 'timestamp', y = 'quarantine', data = trend, label = 'quarantine')\nsns.lineplot(x = 'timestamp', y = 'toilet paper', data = trend, label = 'toilet paper')\nplt.xlabel('Time')\nplt.ylabel('Popularity dynamic')\nplt.legend()","704b0eec":"pytrends = TrendReq()\npytrends.build_payload(\n    ['netflix', 'mask'],\n    cat=0, timeframe='2020-02-01 2020-04-09')\n\ntrend = pytrends.interest_over_time()\ntrend['timestamp'] = pd.to_datetime(trend.index)\n\nplt.figure(figsize= (10, 8))\nplt.title('Trend google searches')\nsns.lineplot(x = 'timestamp', y = 'netflix', data = trend, label = 'netflix')\nsns.lineplot(x = 'timestamp', y = 'mask', data = trend, label = 'mask')\nplt.xlabel('Time')\nplt.ylabel('Popularity dynamic')\nplt.legend()","766d57db":"pytrends = TrendReq()\npytrends.build_payload(\n    ['netflix', 'mask', 'quarantine', 'toilet paper', 'coronavirus'],\n    cat=0, timeframe='2020-02-01 2020-04-09')\n\ntrend = pytrends.interest_over_time()\ntrend['timestamp'] = pd.to_datetime(trend.index)\n\nplt.figure(figsize= (10, 8))\nplt.title('Trend google searches')\nsns.lineplot(x = 'timestamp', y = 'netflix', data = trend, label = 'netflix')\nsns.lineplot(x = 'timestamp', y = 'mask', data = trend, label = 'mask')\nsns.lineplot(x = 'timestamp', y = 'quarantine', data = trend, label = 'quarantine')\nsns.lineplot(x = 'timestamp', y = 'toilet paper', data = trend, label = 'toilet paper')\nsns.lineplot(x = 'timestamp', y = 'coronavirus', data = trend, label = 'coronavirus')\nplt.xlabel('Time')\nplt.ylabel('Popularity dynamic')\nplt.legend()","009a5aa5":"open_line_data.columns","d38d0866":"open_line_data.drop(['Unnamed: '+str(x) for x in range(21,27)],axis=1,inplace=True)\nopen_line_data.drop('Unnamed: 3',axis=1,inplace=True)","151a3fea":"open_line_data.death.value_counts() # We need to clear this column","02aeca82":"def int_func(x): # All date values we will reduce into 1\n    try:\n        if int(x) != 0:\n            y = 1\n            return y\n        else: return x\n    except: return 1\n    \nopen_line_data.death = open_line_data.death.apply(lambda x: int_func(x))","873316de":"death_list = open_line_data.query('death == 1').death\ndeath_age = open_line_data.query('death == 1').age # make Series with ages of people who died\nfig = px.box(title = 'Ages of Covid-19 deaths',x=death_list, y=death_age)\nfig.show()","66c8bfc9":"confirmed = all_data.groupby('Date')['Confirmed'].sum()\nrecovered = all_data.groupby('Date')['Recovered'].sum()\ndead = all_data.groupby('Date')['Deaths'].sum()","94d788c5":"import plotly.graph_objects as go\n\n\nfig = go.Figure()\nfig.add_trace(go.Line(x= confirmed.index, y = confirmed, name = 'Confirmed',\n                      line = dict(color = '#ff9a00', width=3)))\nfig.add_trace(go.Line(x= recovered.index, y = recovered, name = 'Recovered',\n                      line = dict(color = '#4BE159', width=3)))\nfig.add_trace(go.Line(x= dead.index, y = dead, name = 'Deaths',\n                      line = dict(color = '#7A7172', width=3)))\n\nfig.update_layout(legend_title='<b> Cases: <\/b>')\nfig.update_xaxes(ticks=\"inside\", title_text=\"Date\")\nfig.update_yaxes(ticks=\"outside\", title_text=\"Num of cases\")\nfig.update_layout(title_text='Covid-19 timeline cases')\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()","be1ca1af":"italy = all_data.query('Country == \"Italy\"').copy()\nitaly_confirmed = italy.groupby('Date')['Confirmed'].sum()\nitaly_recovered = italy.groupby('Date')['Recovered'].sum()\nitaly_dead = italy.groupby('Date')['Deaths'].sum()\n\n\nfig = go.Figure()\nfig.add_trace(go.Line(x= italy_confirmed.index, y = italy_confirmed, name = 'Confirmed',\n                      line = dict(color = '#ff9a00', width=4)))\n\nfig.add_trace(go.Line(x= italy_recovered.index, y = italy_recovered, name = 'Recovered',\n                      line = dict(color = '#4BE159', width=4)))\n              \nfig.add_trace(go.Line(x= italy_dead.index, y = italy_dead, name = 'Deaths',\n                      line = dict(color = '#7A7172', width=4)))\n\nfig.add_trace(go.Line(x=['02\/23\/2020','02\/23\/2020'], y=[0,italy_confirmed.max()],\n                      name = 'First lockdowns',line = dict(color = '#353839', dash = 'dash')))\n\nfig.add_trace(go.Line(x=['03\/04\/2020','03\/04\/2020'], y=[0,italy_confirmed.max()],\n                      name = 'Schools closed',line = dict(color = '#353839', dash = 'dash')))\n\nfig.add_trace(go.Line(x=['03\/09\/2020','03\/09\/2020'], y=[0,italy_confirmed.max()],\n                      name = 'Nationwide lockdown',line = dict(color = '#353839', dash = 'dash')))\n\nfig.add_trace(go.Line(x=['03\/22\/2020','03\/22\/2020'], y=[0,italy_confirmed.max()],\n                      name = 'Factories are closed',line = dict(color = '#353839', dash = 'dash')))\n\nfig.update_layout(legend_title='<b> Cases: <\/b>')\nfig.update_xaxes(ticks=\"inside\", title_text=\"Date\")\nfig.update_yaxes(ticks=\"outside\", title_text=\"Num of cases\")\nfig.update_layout(title_text='Covid-19 in Italy')\n\nfig.show()","c7799fba":"ukraine = all_data.query('Country == \"Ukraine\"')\nukraine_confirmed = ukraine.groupby('Date')['Confirmed'].sum()\nukraine_recovered = ukraine.groupby('Date')['Recovered'].sum()\nukraine_dead = ukraine.groupby('Date')['Deaths'].sum()\n\n\nfig = go.Figure()\nfig.add_trace(go.Line(x= ukraine_confirmed.index, y = ukraine_confirmed, name = 'Confirmed',\n                      line = dict(color = '#ff9a00', width=4)))\n\nfig.add_trace(go.Line(x= ukraine_recovered.index, y = ukraine_recovered, name = 'Recovered',\n                      line = dict(color = '#4BE159', width=4)))\n              \nfig.add_trace(go.Line(x= ukraine_dead.index, y = ukraine_dead, name = 'Deaths',\n                      line = dict(color = '#7A7172', width=4)))\n\nfig.add_trace(go.Line(x=['03\/11\/2020','03\/11\/2020'], y=[0,ukraine_confirmed.max()],\n                      name = 'First lockdowns',line = dict(color = '#353839', dash = 'dash')))\n\nfig.add_trace(go.Line(x=['03\/25\/2020','03\/25\/2020'], y=[0,ukraine_confirmed.max()],\n                      name = 'State of emergency',line = dict(color = '#353839', dash = 'dash')))\n\n\nfig.update_layout(legend_title='<b> Cases: <\/b>')\nfig.update_xaxes(ticks=\"inside\", title_text=\"Date\")\nfig.update_yaxes(ticks=\"outside\", title_text=\"Num of cases\")\nfig.update_layout(title_text='Covid-19 in Ukraine')\n\nfig.show()","44279a42":"from IPython.core.display import HTML\nHTML('''<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/1934710\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/1934710\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>''')","37c0a8f9":"On March 3, the World Health Organization established the death rate from COVID-19 as 3.4%[[1]](https:\/\/www.kaggle.com\/bugonort\/covid-19-analysis\/#Links).\n\n> Globally, about 3.4% of reported COVID-19 cases have died. By comparison, seasonal flu generally kills far fewer than 1% of those infected.","47fd1958":"## Google trends\n\nLet's see how Google\u2019s queries changed during the COVID-19 pandemic.","0a9501b4":"# COVID-19 short analysis & data visualization\nI don\u2019t want to pour a lot of water in the introduction, you already know everything about what is COVID-19. Instead, I propose to immediately go to a brief analysis and look at the growth trends in the number of infected and mortality.","ff3090aa":"Here you need to understand that coronavirus, like other viruses, has its own growth rate[[2](https:\/\/www.kaggle.com\/bugonort\/covid-19-analysis\/#Links)]. Also, you need to understand that the growth rate of the number of people infected before and after special measures taken by the country can vary. You also need to take into account that after the introduction of quarantine, approximately 2-14 more days of the incubation period pass, so that people who become infected when they come in contact with others before quarantine is introduced can become ill and appear on the graph after. In addition, each country has a different number of tests and a different quality of patient screening.","3c77f27a":"# Growth\nLet's look at the increase in the number of infected, recovering, and dying from COVID 19. Graphs can be scaled.","3c94f78a":"## Age mortality\nI left this point here as an example only. It does not carry statistical value, since it relies on a too small data set.","e04b863e":"But this dataset contains only ages for 2\/28\/2020 and have only 1085 rows which is too small, especially when real death cases is about 108512.\n","54716908":"It seems that the peak of requests fell in mid-March and is already gradually subsiding. Although Netflix Request remains in trend, quarantine is still ongoing.","d68f778d":"# Bonus graph","ae996e27":"# Links\n1. [WHO Director-General's opening remarks at the media briefing on COVID-19 - 3 March 2020](https:\/\/www.who.int\/dg\/speeches\/detail\/who-director-general-s-opening-remarks-at-the-media-briefing-on-covid-19---3-march-2020)-World Health Organization, March 3, 2020\n2. [https:\/\/youtu.be\/Kas0tIxDvrg](https:\/\/youtu.be\/Kas0tIxDvrg) - Exponential growth and epidemics"}}