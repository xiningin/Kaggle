{"cell_type":{"316ff9fa":"code","353ac929":"code","22c0ea35":"code","2baa4d26":"code","dce2402c":"code","189e52ec":"code","b5400206":"code","187b981d":"code","c93bcb00":"code","3008a3a3":"code","102c79e7":"code","a1945cdc":"code","fdf00979":"code","215031ea":"code","e5c04706":"code","9325a5d2":"code","c82e2aa6":"code","2495c555":"code","fe73cf57":"code","8825bbf1":"code","8da44f8e":"code","e61d969d":"code","9d6d5062":"code","8552b78a":"markdown","616d6918":"markdown","8e511487":"markdown"},"source":{"316ff9fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","353ac929":"data = pd.read_csv('..\/input\/googleplaystore.csv')\n","22c0ea35":"data.info()","2baa4d26":"data.Installs=data.Installs.apply(lambda x: x.replace('+','') if '+' in str(x) else x)\ndata.Installs=data.Installs.apply(lambda x: x.replace(',','') if ',' in str(x) else x)\ndata.Installs=data.Installs.replace('Free',np.nan)\ndata.Installs=pd.to_numeric(data.Installs)\n\n\n","dce2402c":"data.Reviews = data.Reviews.apply(lambda x: x.replace('M','') if 'M' in str(x) else x)\ndata.Reviews = data.Reviews.apply(lambda x: x.strip('.') if '.' in str(x) else x)\ndata.Reviews = pd.to_numeric(data.Reviews)","189e52ec":"data.Size = data.Size.apply(lambda x: x.strip('M') if 'M' in str(x) else x)\ndata.Size = data.Size.apply(lambda x: x.strip('Varies with device') if 'Varies with device' in str(x) else x)\ndata.Size = data.Size.apply(lambda x: x.strip('k') if 'k' in str(x) else x)\ndata.Size = data.Size.apply(lambda x: x.strip('+') if '+' in str(x) else x)\ndata.Size = data.Size.apply(lambda x: x.replace(',','') if ',' in str(x) else x)\ndata.Size = pd.to_numeric(data.Size)","b5400206":"data.Price = data.Price.apply(lambda x: x.strip('Prise') if 'Prise' in str(x) else x)\ndata.Price = data.Price.apply(lambda x: x.strip('$') if '$' in str(x) else x)\ndata.Price = data.Price.apply(lambda x: x.strip('Everyone') if 'Everyone' in str(x) else x)\ndata.Price = pd.to_numeric(data.Price)","187b981d":"\ndata.plot()\nplt.show()\n","c93bcb00":"data.corr()","3008a3a3":"f,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(), annot = True,linewidths = .5, fmt = '.3f',ax=ax)\nplt.show()","102c79e7":"data.columns = [each.split()[0]+\"_\"+each.split()[1] if (len(each.split())>1) else each for each in data.columns]\n","a1945cdc":"data.Content_Rating.unique()      \n","fdf00979":"Everyone = data[data.Content_Rating == \"Everyone\"]\nTeen =  data[data.Content_Rating == \"Teen\"]\nEveryone_10 = data[data.Content_Rating == \"Everyone 10+\"]\nMature_17  =  data[data.Content_Rating == \"Mature 17+\"]\nAdults_only_18 = data[data.Content_Rating == \"Adults only 18+\"]\nUnrated =  data[data.Content_Rating == \"Unrated\"]\n\nEveryone1 = float(len(Everyone))\nTeen1 =  float(len(Teen))\nEveryone_101 =float(len(Everyone_10))\nMature_171  =  float(len(Mature_17))\nAdults_only_181 = float(len(Adults_only_18))\nUnrated1 =  float(len(Unrated))\n\nx = np.array(['Everyone','Teen','Everyone_10','Mature_17','Adults_only_18','Unrated'])\ny = np.array([Everyone1,Teen1,Everyone_101,Mature_171,Adults_only_181,Unrated1])\n\n","215031ea":"plt.bar(x,y)\nplt.xticks(x,x,rotation=90)\nplt.show()","e5c04706":"data.Installs.plot(kind = 'line',color = 'b',label = 'Installs',linewidth = 1,alpha = .5,grid = True,linestyle = '-')\nplt.legend(loc='upper right')\n\nplt.show()","9325a5d2":"dataexam = data.copy()\n","c82e2aa6":" dataexam = dataexam.sort_values(['Installs','App'],ascending = False)","2495c555":"dataexam.head()","fe73cf57":"most_categories = data.Category.value_counts().sort_values(ascending = False)","8825bbf1":"label = np.array(most_categories.index)\nvalue = np.array(most_categories.values)","8da44f8e":"plt.subplots(figsize=(18, 18))\nplt.bar(label,value,align = 'center',width= 0.8)\nplt.xticks(label,label,rotation = 90)\nplt.show()","e61d969d":"dataexam1 = data.loc[:,['Installs' , 'Rating']]\ndataexam1.plot()","9d6d5062":"data.App[dataexam.Category =='FAMILY']","8552b78a":"## After that clean the data from object\n- Remove the '+'   and   ',' from Installs columns for convert numeric\n- After that remove the other objects from numeric columns for convert numeric\n","616d6918":"## Copying the data  because of dont change data\n- Then sorting Installs and Apps ","8e511487":"# First examine to data"}}