{"cell_type":{"6d55b14b":"code","cdaea192":"code","6db213dd":"code","33b884cc":"code","aa51a6f0":"code","1304f95a":"code","0e17b089":"code","f39cce08":"code","bd7d55c9":"code","f646da98":"code","67416885":"code","2d584d6d":"code","da91bcd2":"markdown","586d8ab2":"markdown","d921dd0e":"markdown"},"source":{"6d55b14b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cdaea192":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches","6db213dd":"# Import data\nsurvey_data = pd.read_csv(\"https:\/\/cocl.us\/datascience_survey_data\")\nsurvey_data.head()","33b884cc":"# Rename first column name\nsurvey_data = survey_data.rename(columns = {'Unnamed: 0':'Topics'}, inplace = False)\n\n#Set 'Topics' as index\nsurvey_data.set_index(\"Topics\", inplace=True)\nsurvey_data","aa51a6f0":"# Sort data by \"Very Interested\" column\nsurvey_data = survey_data.sort_values(by='Very interested', ascending=False)\n\n# Change data to percentages\nsurvey_data_pct = survey_data\/2233.00*100.00","1304f95a":"# Visualize the percentage of the respondents' interest in the different data science topics surveyed\n\n# Set color for each topic\ncolors_list = ['#5cb85c', '#5bc0de', '#d9534f']\n\n# Create bar chart\nax = survey_data_pct.plot(kind='bar', \n                     figsize=(20, 8),\n                     color=colors_list,\n                     width=0.8,\n                     rot=90,\n)\nplt.xlabel('', fontsize=14)\nplt.ylabel('', fontsize=14)\nplt.title(\"Percentage of Respondents' Interests in Data Science Areas\", fontsize=16)\nplt.xticks(fontsize = 14)\nplt.legend(prop={\"size\":14})\n\n# Add data label\nfor i in ax.patches:\n    ax.annotate(\"%.2f\" % i.get_height(), \n                (i.get_x() + i.get_width() \/ 2., \n                 i.get_height()), \n                ha='center', \n                va='center', \n                xytext=(0, 10), \n                textcoords='offset points',\n               fontsize=14)\n\n# Hide Y-axis\nax.axes.yaxis.set_visible(False)\n\n# Remove left, top, right borders\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_visible(False)\nax.spines[\"top\"].set_visible(False)","0e17b089":"# Setup for geospatial charts\n\n!conda install -c conda-forge folium=0.5.0 --yes\nimport folium\n\nprint('Folium installed and imported!')","f39cce08":"# Import Data\nsf_crime = pd.read_csv(\"https:\/\/cocl.us\/sanfran_crime_dataset\")\n\n# Rename columns\nsf_crime = sf_crime.rename(columns = {'PdDistrict':'District'}, inplace = False)\nsf_crime","bd7d55c9":"# Count total number of crimes by neighbourhood\ncrime_by_hood = sf_crime.groupby('District').IncidntNum.count()\n\n# Convert to dataframe\ndf_hood = pd.DataFrame(crime_by_hood)\n\n# Reset index\ndf_hood.reset_index(level=0, inplace=True)\n\n# Rename column\ndf_hood = df_hood.rename(columns = {'IncidntNum':'Total_Crime'}, inplace = False)\ndf_hood","f646da98":"# download San Fransisco geojson file\n!wget --quiet https:\/\/cocl.us\/sanfran_geojson\n    \nprint('GeoJSON file downloaded!')","67416885":"# San Francisco latitude and longitude values\nlatitude = 37.77\nlongitude = -122.42\n\n# create map and display it\nsf_crime_map = folium.Map(location=[latitude, longitude], zoom_start=12)\n\n# display the map of San Francisco\nsf_crime_map","2d584d6d":"sanfran_geo = r'https:\/\/cocl.us\/sanfran_geojson'\n\nsf_crime_map.choropleth(geo_data=sanfran_geo,\n                       data=df_hood,\n                       columns=['District', 'Total_Crime'],\n                       key_on='feature.properties.DISTRICT',\n                       fill_color='YlOrRd', \n                       fill_opacity=0.7, \n                       line_opacity=0.2,\n                       legend_name='Crime Rate in San Fransisco'\n                      )\n\n# Display map\nsf_crime_map","da91bcd2":"# IBM Data Visualization with Python\nHello everyone!\n\nThis is my first published notebook :)\n\nIn this notebook I will be answering the questions for my final assignment for IBM Data Visualization with Python course on [Coursera](https:\/\/www.coursera.org\/learn\/python-for-data-visualization\/home\/welcome)","586d8ab2":"# Data Science Survey Data - Barplot","d921dd0e":"# SF Crime - Choropleth map"}}