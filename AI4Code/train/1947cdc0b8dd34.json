{"cell_type":{"ceaf7c47":"code","5fe025db":"code","144eb322":"code","f6d15b6e":"code","293a620d":"code","7d79267f":"code","8cf21e7d":"code","10e49aa3":"code","5c6b2351":"code","d9c829d1":"code","91ea4f0f":"code","7f65cb72":"code","b1a314a7":"code","d05e3838":"code","aad8ac3e":"markdown","a8c239d2":"markdown"},"source":{"ceaf7c47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5fe025db":"df = pd.read_excel('\/kaggle\/input\/covid19-outbreak-epidemiological-line-list-data\/nCoV2019_2020_line_list_open.xlsx')\ndf.head()","144eb322":"df.dtypes","f6d15b6e":"df = df.rename(columns={'wuhan(0)_not_wuhan(1)':'wuhan'})","293a620d":"df[\"wuhan\"].plot.hist()\nplt.show()","7d79267f":"dfcorr=df.corr()\ndfcorr","8cf21e7d":"sns.heatmap(dfcorr,annot=True,cmap='pink')\nplt.show()","10e49aa3":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.country)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","5c6b2351":"def plot_feature(df,col):\n    plt.figure(figsize=(14,6))\n    plt.subplot(1,2,1)\n    if df[col].dtype == 'int64':\n        df[col].value_counts().sort_index().plot()\n    else:\n        mean = df.groupby(col)['wuhan'].mean()\n        df[col] = df[col].astype('chronic_disease_binary')\n        levels = mean.sort_values().index.tolist()\n        df[col].cat.reorder_categories(levels,inplace=True)\n        df[col].value_counts().plot()\n    plt.xticks(rotation=45)\n    plt.xlabel(col)\n    plt.ylabel('Counts')\n    plt.subplot(1,2,2)\n    \n    if df[col].dtype == 'int64' or col == 'wuhan':\n        mean = df.groupby(col)['wuhan'].mean()\n        std = df.groupby(col)['wuhan'].std()\n        mean.plot()\n        plt.fill_between(range(len(std.index)),mean.values-std.values,mean.values + std.values, \\\n                        alpha=0.1)\n    else:\n        sns.boxplot(x = col,y='wuhan',data=df)\n    plt.xticks(rotation=45)\n    plt.ylabel('wuhan')\n    plt.show()","d9c829d1":"plot_feature(df,'wuhan')","91ea4f0f":"plt.style.use('ggplot')\ndf['wuhan'].value_counts().plot()\nplt.show()","7f65cb72":"df['wuhan'].mean()","b1a314a7":"plt.figure(figsize=(10,5))\ndf['wuhan'].plot(kind='hist',bins=50)\nplt.show()","d05e3838":"sns.pairplot(df)\nplt.show()","aad8ac3e":"codes from Thor the God of Thunder (Avenger Marvel?) https:\/\/www.kaggle.com\/thorgodofthunder\/advertising-regression-eda-model-building","a8c239d2":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke"}}