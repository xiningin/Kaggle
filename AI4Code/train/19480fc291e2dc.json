{"cell_type":{"98493053":"code","d8dc230c":"code","e79d6a14":"code","8734a332":"code","42bf2227":"code","6d7eddeb":"code","d32a7b15":"code","95da1a1e":"code","2b6a4eb0":"code","36633fb6":"code","be45f3e0":"code","79336832":"code","b2faf39b":"code","3ff45cdc":"code","d3b23661":"code","5a9cfe39":"code","d6e0d368":"code","f628860d":"code","1cea01b5":"code","a3b0adba":"code","d0d471ab":"code","70e47124":"code","55564561":"markdown","20d512a8":"markdown","2936db0b":"markdown","b939be3f":"markdown","99be252c":"markdown","12fc23d4":"markdown"},"source":{"98493053":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8dc230c":"import pandas as pd\nfrom matplotlib import pyplot as plt","e79d6a14":"# Import the data\ndf=pd.read_csv('..\/input\/pharma-company-patent-data\/IPC_MATRIX_38_PHARMA_COMPANY.csv')\ndf.head()\ndf","8734a332":"df.shape","42bf2227":"# each column represent the International Patent Classification a company may file for\ndf.columns","6d7eddeb":"df.iloc[:,0]","d32a7b15":"# drop last row and column \nnew_df=df.drop(columns=['COMPANY','SUM'],index=37)\nnew_df","95da1a1e":"new_df.info()","2b6a4eb0":"# import the cosine_similarity library\nfrom sklearn.metrics.pairwise import cosine_similarity","36633fb6":"df_cosine=pd.DataFrame(cosine_similarity(new_df,dense_output=True))\ndf_cosine","be45f3e0":"from sklearn.cluster import KMeans\ncs = []\nplt.figure(figsize=(10,6))\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(df_cosine)\n    cs.append(kmeans.inertia_)\nplt.plot(range(1, 11), cs)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('CS')\nplt.show()","79336832":"#Importing required modules\n \nfrom sklearn.datasets import load_digits\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\nimport numpy as np","b2faf39b":"#Load Data\ndata = df_cosine\npca = PCA(2)","3ff45cdc":"#Transform the data\ntransform = pca.fit_transform(data)\n \n#Import KMeans module\nfrom sklearn.cluster import KMeans","d3b23661":"#Initialize the class object\nkmeans = KMeans(n_clusters= 3)\n \n#predict the labels of clusters.\nlabel = kmeans.fit_predict(transform)\n \n#Getting unique labels\nu_labels = np.unique(label)\n","5a9cfe39":"display (label)\ndisplay (u_labels)","d6e0d368":"\ndata={'Name':df['COMPANY'].drop(index=37),'Cluster':label}\ncompany_list=pd.DataFrame(data)\ncompany_list","f628860d":"kmeans.cluster_centers_","1cea01b5":"#plotting the results:\nplt.figure(figsize=(10,6))\nfor i in u_labels:\n    plt.scatter(transform[label == i , 0] , transform[label == i , 1] , label = i)\nplt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color='purple',marker='+',label='centroid')\nplt.legend()\nplt.savefig('cluster.png')\nplt.show()","a3b0adba":"!pip install openpyxl\n","d0d471ab":"df_cosine.to_excel(\"cosine_similarity.xlsx\")","70e47124":"company_list.to_excel(\"company_and_clusters.xlsx\")","55564561":"### the optimal cluster are 3 ","20d512a8":"# K-MEANS CLUSTERS","2936db0b":"# K_MEANS ELBOWS FUNCTION TO CREATE THE OPTIMAL CLUSTERS","b939be3f":"# COMPANIES LIST AND CLUSTERS","99be252c":"# EXPORT DATA TO EXCEL FILE\n","12fc23d4":"# COSINE SIMILARITY MATRIX CREATION"}}