{"cell_type":{"d60fcfa9":"code","5609ef21":"code","cc9e4e19":"code","af322079":"code","3bb75ef7":"code","75e24903":"code","f9ecd255":"code","1ce8354f":"code","8d9fa17a":"code","052d4dcc":"code","5b5d778a":"code","c88aec32":"markdown","b3693b86":"markdown","9efd5662":"markdown","4d636c95":"markdown","34f02d8d":"markdown","c77dc1a6":"markdown","5d13bffb":"markdown","e06762f6":"markdown","2f98c57c":"markdown","541751ae":"markdown"},"source":{"d60fcfa9":"!pip install autokeras","5609ef21":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nfrom keras.utils import np_utils\nfrom keras.callbacks import ReduceLROnPlateau\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n%matplotlib inline\n\nfrom keras.datasets import mnist\nfrom autokeras.image.image_supervised import ImageClassifier","cc9e4e19":"train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\n\nY_train = train[\"label\"]\nX_train = train.drop(labels = [\"label\"],axis = 1) ","af322079":"X_train.isnull().any().describe()","3bb75ef7":"test.isnull().any().describe()","75e24903":"X_train = X_train\/255.0\ntest = test\/255.0\n\nX_train = X_train.values.reshape(-1,28,28,1)\ntest = test.values.reshape(-1,28,28,1)","f9ecd255":"# plotting the first five training images\nfig = plt.figure(figsize=(20,20))\nfor i in range(5):\n    ax = fig.add_subplot(1, 5, i+1, xticks=[], yticks=[])\n    ax.imshow(X_train[i].reshape(28,28), cmap='gray')\n    ax.set_title(str(Y_train[i]))","1ce8354f":"# print the first five encoded training labels\nprint('One-hot Encoded labels:')\nprint(Y_train[:10])","8d9fa17a":"random_seed = 2\nX_train, X_val, Y_train, Y_val = train_test_split(X_train, Y_train, test_size = 0.1, random_state=random_seed)\nprint(X_train.shape, Y_train.shape)","052d4dcc":"clf = ImageClassifier(verbose=True)\nclf.fit(X_train, Y_train, time_limit=3 * 60 * 60)\nclf.final_fit(X_train, Y_train, X_val, Y_val, retrain=True)\nY = clf.evaluate(X_val, Y_val)\nprint(Y)","5b5d778a":"submission = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nsubmission['Label'] = Y_val\nsubmission.to_csv('submission.csv',index=False)","c88aec32":"# Data Preparation","b3693b86":"# The AutoKeras Model","9efd5662":"# Loading Data","4d636c95":"# Check for Null or Missing Values","34f02d8d":"## Examining the Training Data","c77dc1a6":"# Data Import","5d13bffb":"## Applying One-hot Encoding to Labels","e06762f6":"# Make Submission","2f98c57c":"## Normalization, Reshaping, Label Encoding","541751ae":"## Splitting the Data"}}