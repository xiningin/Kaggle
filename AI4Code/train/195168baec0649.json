{"cell_type":{"5f994b0d":"code","25ec1445":"code","f14e7f09":"code","beaf0e45":"code","e7164626":"code","bd99b699":"code","4c3ec607":"code","dded4b4b":"code","2ef426cf":"code","ca9126f2":"code","7b3aa1dc":"code","ba60a410":"code","bd13bb19":"code","dcbdad85":"code","571bfc5a":"code","d010afb7":"code","733b73a7":"code","5fb3aa3d":"code","eae909d9":"code","111ffaa0":"code","e491d310":"code","a39e0278":"code","1143a356":"code","4caae844":"code","b881adaa":"code","3c4c0b88":"code","6a3a3bac":"code","f267e260":"code","9dcf72ef":"code","44f0eec5":"code","57b7fafe":"code","613a85a4":"code","6646cc27":"code","2a86c261":"markdown","39bc48a5":"markdown","7f4ac9c1":"markdown","5c3e95a3":"markdown","1142a1df":"markdown","35ddaeb4":"markdown","92dadc82":"markdown","a89419a3":"markdown","09c0f954":"markdown","470db27f":"markdown","4ea1f724":"markdown","000dcdb0":"markdown","ea5f3be5":"markdown","d82796f0":"markdown"},"source":{"5f994b0d":"import pandas as pd\nfrom pandas import Series, DataFrame\n%pylab inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","25ec1445":"!pip install '..\/input\/klib-library-python\/klib-0.1.3-py3-none-any.whl'","f14e7f09":"import klib","beaf0e45":"sentiments_df = pd.read_csv('..\/input\/yelp-coffee-reviews\/sentiments_by_shop.csv', encoding = 'ISO-8859-1')","e7164626":"klib.missingval_plot(sentiments_df)","bd99b699":"klib.corr_mat(sentiments_df)","4c3ec607":"klib.corr_plot(sentiments_df)","dded4b4b":" klib.cat_plot(sentiments_df)","2ef426cf":"klib.dist_plot(sentiments_df['num_reviews'])\nklib.dist_plot(sentiments_df['rating'])","ca9126f2":"ratings_df = pd.read_csv('..\/input\/yelp-coffee-reviews\/ratings_and_sentiments.csv', encoding='ISO-8859-1')\nratings_df = ratings_df.drop_duplicates()\nratings_df = ratings_df.replace('#VALUE!', np.nan)\nratings_df['vibe_sent'] = pd.to_numeric(ratings_df['vibe_sent'])\nratings_df['parking_sent'] = pd.to_numeric(ratings_df['vibe_sent'])\nratings_df['coffee_sent'] = pd.to_numeric(ratings_df['coffee_sent'])\nratings_df['food_sent'] = pd.to_numeric(ratings_df['food_sent'])\nshops_df = pd.pivot_table(ratings_df, index = 'coffee_shop_name')","7b3aa1dc":"klib.missingval_plot(ratings_df)","ba60a410":"klib.corr_mat(ratings_df)","bd13bb19":"klib.corr_plot(ratings_df)","dcbdad85":"klib.dist_plot(ratings_df['overall_sent'])\nklib.dist_plot(ratings_df['num_rating'])","571bfc5a":" klib.cat_plot(ratings_df)","d010afb7":"ratings_df['num_rating'].value_counts().plot(kind='bar', title = 'Distribution of Ratings')","733b73a7":"overall_sent_ser = ratings_df['overall_sent'].value_counts()\noverall_sent_ser.plot(kind='bar', title = 'Distribution of Sentiment')","5fb3aa3d":"ratings_df.mean()","eae909d9":"def categorize_rating(row):\n    num = row['num_rating']\n    if num == 5.0:\n        return \"good\"\n    elif num == 4.0:\n        return \"neutral\"\n    else:\n        return \"bad\"\n\nratings_df['cat_rating'] = ratings_df.apply(categorize_rating, axis = 1)","111ffaa0":"mask = ratings_df['cat_rating'] == \"good\"\ngood_ratings_ser = ratings_df[mask]['overall_sent'].value_counts()\nprint(\"Average sentiment: \", ratings_df[mask]['overall_sent'].mean())\ngood_ratings_ser.plot(kind = 'bar', title = \"Distribution of sentiment for good ratings (5 star)\")","e491d310":"mask = ratings_df['cat_rating'] == \"neutral\"\nneutral_ratings_ser = ratings_df[mask]['overall_sent'].value_counts()\nprint(\"Average sentiment: \", (ratings_df[mask]['overall_sent'].mean()))\nneutral_ratings_ser.plot(kind = 'bar', title = \"Distribution of sentiment for neutral ratings (4 star)\")","a39e0278":"mask = ratings_df['cat_rating'] == \"bad\"\nbad_ratings_ser = ratings_df[mask]['overall_sent'].value_counts()\nprint(\"Average sentiment: \", (ratings_df[mask]['overall_sent'].mean()))\nbad_ratings_ser.plot(kind = 'bar', title = \"Distribution of sentiment for bad ratings (3, 2, 1 star)\")","1143a356":"compare_sent_of_ratings_df = pd.concat([overall_sent_ser, good_ratings_ser, neutral_ratings_ser, bad_ratings_ser], axis=1)\ncompare_sent_of_ratings_df.columns = ['all_reviews','good_reviews','neutral_reviews','bad_reviews']\n\ndef calc_percent_change(row, col):\n    try:\n        col_pc = row[col]\/compare_sent_of_ratings_df[col].sum()\n        all_pc = row['all_reviews']\/compare_sent_of_ratings_df['all_reviews'].sum()\n        pc_change = (col_pc - all_pc) \/ all_pc \n    except:\n        pc_change = None\n    return pc_change\n\ncolumns = ['good_reviews','neutral_reviews','bad_reviews']\nfor c in columns:\n    c_new = \"PC_\" + c\n    compare_sent_of_ratings_df[c_new] = compare_sent_of_ratings_df.apply(calc_percent_change, args = (c,) ,axis = 1)","4caae844":"fig, axes = plt.subplots(nrows=5, ncols=3)\nfig.subplots_adjust(hspace=1, wspace = 1)\nratings_df['vibe_sent'].value_counts().plot(kind = 'bar',ax=axes[0,0], title = 'Vibe Sentiment',figsize=(15,8))\nratings_df['tea_sent'].value_counts().plot(kind = 'bar',ax=axes[0,1], title = 'Tea Sentiment')\nratings_df['service_sent'].value_counts().plot(kind = 'bar',ax=axes[1,0], title = 'Service Sentiment')\nratings_df['seating_sent'].value_counts().plot(kind = 'bar',ax=axes[1,1], title = 'Seating Sentiment')\nratings_df['price_sent'].value_counts().plot(kind = 'bar',ax=axes[0,2], title = 'Price Sentiment')\nratings_df['parking_sent'].value_counts().plot(kind = 'bar',ax=axes[1,2], title = 'Parking Sentiment')\nratings_df['location_sent'].value_counts().plot(kind = 'bar',ax=axes[2,1], title = 'Location Sentiment')\nratings_df['alcohol_sent'].value_counts().plot(kind = 'bar',ax=axes[3,1], title = 'Alcohol Sentiment')\nratings_df['coffee_sent'].value_counts().plot(kind = 'bar',ax=axes[3,0], title = 'Coffee Sentiment')\nratings_df['food_sent'].value_counts().plot(kind = 'bar',ax=axes[4,0], title = 'Food Sentiment')\nratings_df['hours_sent'].value_counts().plot(kind = 'bar',ax=axes[2,0], title = 'Hours Sentiment')\nratings_df['internet_sent'].value_counts().plot(kind = 'bar',ax=axes[3,2], title = 'Internet Sentiment')\nratings_df['local_sent'].value_counts().plot(kind = 'bar',ax=axes[2,2], title = 'Local Sentiment')","b881adaa":"compare_df = pd.concat([ratings_df.mean(),ratings_df.std()], axis=1, join='outer')\ncompare_df.columns = ['mean','std_deviation']\ncompare_df","3c4c0b88":"good_ratings_avg_df = ratings_df[ratings_df['cat_rating'] == \"good\"].mean()\nbad_ratings_avg_df = ratings_df[ratings_df['cat_rating'] == \"bad\"].mean()\nneutral_ratings_avg_df = ratings_df[ratings_df['cat_rating'] == \"neutral\"].mean()\noverall_ratings_avg_df = ratings_df.mean()\n\ncompare_att_sent_df = pd.concat([overall_ratings_avg_df, good_ratings_avg_df, neutral_ratings_avg_df, bad_ratings_avg_df], axis=1)\ncompare_att_sent_df.columns = ['all_reviews','good_reviews','neutral_reviews','bad_reviews']\ncompare_att_sent_df","6a3a3bac":"def calc_percent_change_2(row, col):\n    try:\n        pc_change = (row[col] - row['all_reviews']) \/ row['all_reviews'] \n    except:\n        pc_change = None\n    return pc_change\n\ncolumns = ['good_reviews','neutral_reviews','bad_reviews']\nfor c in columns:\n    c_new = \"PC_\" + c\n    compare_att_sent_df[c_new] = compare_att_sent_df.apply(calc_percent_change_2, args = (c,) ,axis = 1)\n\ncompare_att_sent_df","f267e260":"import seaborn as sns\nsns.set_style(\"white\")\nsns.set_palette(sns.color_palette(\"Paired\"))\n\nsorted_to_chart = compare_att_sent_df.sort_values(by='PC_good_reviews', ascending=False)\nsorted_to_chart['dummy'] = sorted_to_chart.PC_good_reviews.apply(lambda x: 1 if x > 0 else 0)\n\nplt.figure(figsize=(10,10))\nfig = sns.barplot(y=sorted_to_chart.index, x=sorted_to_chart.PC_good_reviews, hue=sorted_to_chart.dummy)\n\nplt.title('Percent change for good reviews', fontsize=24)\nplt.ylabel('')\nplt.xlabel('Percent Difference',fontsize=20)\nloc, labels = plt.xticks()\nyloc, ylabels=plt.yticks()\nplt.yticks(fontsize=16)\nplt.xticks(fontsize=18)\nhandles, labels = fig.get_legend_handles_labels()\nplt.legend(handles=[handles[1],handles[0]], labels = ['Increased sentiment','Decreased sentiment'], loc=0, fontsize=15 )\nplt.tight_layout()\nplt.show()\n","9dcf72ef":"sorted_to_chart = compare_att_sent_df.sort_values(by='PC_neutral_reviews', ascending=False)\nsorted_to_chart['dummy'] = sorted_to_chart.PC_neutral_reviews.apply(lambda x: 1 if x > 0 else 0)\n\nplt.figure(figsize=(10,10))\nfig = sns.barplot(y=sorted_to_chart.index, x=sorted_to_chart.PC_neutral_reviews, hue=sorted_to_chart.dummy)\n\nplt.title('Percent change for neutral reviews', fontsize=24)\nplt.ylabel('')\nplt.xlabel('Percent Difference',fontsize=20)\nloc, labels = plt.xticks()\nyloc, ylabels=plt.yticks()\nplt.yticks(fontsize=16)\nplt.xticks(fontsize=18)\nhandles, labels = fig.get_legend_handles_labels()\nplt.legend(handles=[handles[1],handles[0]], labels = ['Increased sentiment','Decreased sentiment'], loc=0, fontsize=15 )\nplt.tight_layout()\nplt.show()","44f0eec5":"sorted_to_chart = compare_att_sent_df.sort_values(by='PC_bad_reviews', ascending=False)\nsorted_to_chart['dummy'] = sorted_to_chart.PC_bad_reviews.apply(lambda x: 1 if x > 0 else 0)\n\nplt.figure(figsize=(10,10))\nfig = sns.barplot(y=sorted_to_chart.index, x=sorted_to_chart.PC_bad_reviews, hue=sorted_to_chart.dummy)\n\nplt.title('Percent change for bad reviews', fontsize=24)\nplt.ylabel('')\nplt.xlabel('Percent Difference',fontsize=20)\nloc, labels = plt.xticks()\nyloc, ylabels=plt.yticks()\nplt.yticks(fontsize=16)\nplt.xticks(fontsize=18)\nhandles, labels = fig.get_legend_handles_labels()\nplt.legend(handles=[handles[1],handles[0]], labels = ['Increased sentiment','Decreased sentiment'], loc=0, fontsize=15 )\nplt.tight_layout()\nplt.show()","57b7fafe":"review_count = ratings_df['coffee_shop_name'].value_counts()\nshops_df['num_reviews'] = review_count\nshops_df_filter = shops_df[shops_df['num_reviews']>49].sort_values(by=['num_rating'], ascending = False)\ntop_10_shops_df = shops_df_filter.head(10).reset_index()\nbottom_10_shops_df = shops_df_filter.tail(10).reset_index()","613a85a4":"compare_shops_avg_df = pd.concat([top_10_shops_df.mean(),bottom_10_shops_df.mean()], axis=1)\ncompare_shops_avg_df.columns = ['top_10','bottom_10']\nprint(\"The average rating of Top 10 is \", compare_shops_avg_df['top_10']['num_rating'])\nprint(\"The average sentiment of Top 10 is \", compare_shops_avg_df['top_10']['overall_sent'])\nprint(\"The average rating of Bottom 10 is \", compare_shops_avg_df['bottom_10']['num_rating'])\nprint(\"The average sentiment of Bottom 10 is \", compare_shops_avg_df['bottom_10']['overall_sent'])\nplot_df = compare_shops_avg_df.drop(compare_shops_avg_df.index[[1,8,9,16]])\nplot_df.plot(kind = 'bar', title = 'Comparison of sentiments toward attributes of top and bottom coffee shops')","6646cc27":"shops_df_filter = shops_df_filter.sort_values(by=['overall_sent'], ascending = False)\ntop_10_sent_df = shops_df_filter.head(10)\nprint(\"TOP SHOPS BY RATING\")\nprint(top_10_shops_df[['coffee_shop_name','overall_sent','num_rating']])\nprint(\"\\n \\n\")\nprint(\"TOP SHOPS BY SENTIMENT\")\nprint(top_10_sent_df[['overall_sent','num_rating']])","2a86c261":"**Findings:** \n1. The mean above shows the average sentiment of all reviews regarding this attribute, and the standard deviation is a measure of variety in sentiment. \n2. From the data above, you can see that people have the most positive sentiment towards coffee, parking, vibe, food and service (when they are mentioned). \n3. On average, the sentiments are neutral regarding tea, price, location, alcohol, hours, internet and local. However, every attribute has a standard deviation higher than .25 sentiment, meaning that many of the neutral attributes could frequently be given negative sentiments.","39bc48a5":"**Findings**: \n1. The average sentiment of \"good reviews\" is 1.478, \"neutral reviews\" is 1.168, and \"bad reviews\" is -.002 as compared to the overall average sentiment of 1.097. 2. Most good reviews, have a sentiment of 2, while neutral reviews have a sentiment of 1 and negative reviews have a sentiment of 0. \n3. This demonstrates how reviews are naturally positively skewed, either by human nature of not wanting to be overly negative in a public forum about a bad experience (since Yelp does tie your user profile to reviews), or because even when we are critiquing an experience, we tend to use less strong words and compliment the redeeming qualities.","7f4ac9c1":"**Findings:** \n1. You can see the biggest difference in average sentiment occurs on attributes of coffee and service. \n2. Top 10 coffee shops have much higher average sentiments in these attributes than bottom 10 coffee shops. Interestingly, bottom 10 coffee shops have a higher sentiment towards parking and vibe. \n3. This suggests that even if a coffee shop is rated poorly, patrons are more likely to comment positively about the vibe or parking available.","5c3e95a3":"### Becoming a top coffee shop - what are the major differences between the top 10 coffee shops and bottom 10 coffee shops?\nNote: Selected top 10 and bottom 10 by average rating with more than 50 reviews.","1142a1df":"## Does sentiment vary based on \"good ratings\", \"bad ratings\" or \"neutral ratings\"?\n1. As you can see above, star ratings can be interpreted very differently when you see their distribution. \n2. Adjusted the model to have new variables - \u201cgood rating\u201d if the rating was 5 stars, \u201cbad rating\u201d if the rating was less than 4 stars, and \"neutral rating\" if the rating was 4 stars.","35ddaeb4":"**Findings:** \n1. Average sentiment increases on all attributes except location, seating and hours for \"good reviews\" with a 5 star rating. \n2. The highest percent change comes from sentiment around Price with a 93% change, suggesting that if people are giving a 5 star review, they are more likely to express a stronger positive sentiment towards the price of the coffee shop.","92dadc82":"### What are the top 10 coffee shops by rating? What are the top 10 coffee shops by sentiment?","a89419a3":"**Findings:**\n1. The average rating from all reviews of Austin coffee shops is 4.169 out of 5. The distribution above also shows that online reviews are heavily positively skewed, with over 80.7% of reviews being 4 or 5 stars.\n\n2. This suggests that in the review world, giving less than 4 stars as a rating qualifies as a \u201cbad review\u201d, giving 4 stars is actually fairly neutral, and giving 5 stars means it was a top quality experience.","09c0f954":"**Findings:**\n1. The average overall sentiment of a review was 1.107, meaning slightly positive. \n2. 73.2% of reviews are positive (> 0 overall sentiment), as compared to 16.6% neutral and 10.2% negative.\n3. Review sentiments are rarely \"extreme\" with a sentiment greater than or equal to 3, or less than or equal to -3. \n4. This suggests that reviews on coffee shops are overall positive and comparatively moderate in their sentiment.","470db27f":"**Findings**: \n1. The average bad review (1, 2 or 3 stars) has significantly more negative sentiment towards price with a -222% change in sentiment. \n2. This suggests that when people are reviewing coffee shops negatively, they are likely to express the strongest negative sentiment towards the price - perhaps that they didn't get the value for which they believe they paid for. \n\n3. Also notably, service, internet, coffee, and food have more than -50 percent changes in sentiment suggesting these attributes are also more likely to be discussed with a strong negative sentiment in bad reviews.","4ea1f724":"**Findings:** \n1. For \"neutral reviews\" of 4 stars, the highest percent change in positive sentiment are seating and internet with 34% and 25% change respectively. \n2. This suggests that people giving a coffee shop a 4 star rating are more likely to have strong positive sentiment around seating and internet - meaning these two attributes could play a strong role in having a neutral experience at a coffee shop (not overly great and not horrible). \n\n3. Also notably, neutral reviews are more likely to have negative sentiment around whether or not the coffee shop was local - suggesting that even if a coffee shop is a good experience, if it's not local, people are more likely to give it a 4 star rating.","000dcdb0":"# Yelp Coffee Shop Reviews Analysis","ea5f3be5":"### What is the distribution of ratings versus overall sentiments for reviews overall?","d82796f0":"### What does the distribution of sentiment look like around each attribute? Are there attributes that are more polarizing or elicit stronger sentiments than others?"}}