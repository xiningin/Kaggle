{"cell_type":{"24c8d04c":"code","1bec74b9":"code","072a089f":"code","68768275":"code","7996f1b0":"code","2208bb75":"code","b9af0e4e":"code","fc587170":"code","a35aeb20":"code","f1817fad":"code","0ceddcbd":"code","a7f8750e":"code","45753523":"code","8b12cefe":"code","6dd7a10c":"code","361543d5":"code","dce6be78":"code","aa6f195a":"code","37a69ba1":"code","75763aac":"code","29bb5435":"code","3b1a1d45":"code","5d1c4ef7":"code","93752f33":"code","d82ed788":"code","c156e9e3":"code","380205b1":"code","7ab9534d":"code","3709c517":"code","771da7d7":"code","595547c7":"markdown","6e0f68dc":"markdown","c6f780ec":"markdown","2c8524a4":"markdown","3ce336e3":"markdown","adbc5ad6":"markdown","b683eb29":"markdown","064e8c43":"markdown","a0b49a30":"markdown","d1e79d94":"markdown"},"source":{"24c8d04c":"!pip install -q fastai==2.2.5 fastcore==1.3.19","1bec74b9":"from fastai.tabular.all import *\n\nSEED = 42\nset_seed(SEED, reproducible=True)","072a089f":"path = Path('\/kaggle\/input\/tabular-playground-series-jan-2021')\npath.ls()","68768275":"train_df = pd.read_csv(path\/'train.csv')\ntrain_df.head()","7996f1b0":"y_names = ['target']\ncont_names = list(train_df.columns.values)[1:-1]\ncat_names = []\nprocs = [Categorify, FillMissing, Normalize]\nsplits = RandomSplitter(seed=SEED)(range_of(train_df))\nbs = 256","2208bb75":"db = TabularPandas(\n    train_df, \n    procs=procs, \n    cat_names=cat_names, \n    cont_names=cont_names, \n    y_names=y_names, \n    y_block=RegressionBlock(),\n    splits=splits,\n)","b9af0e4e":"dls = db.dataloaders(bs=bs)\ndls.show_batch()","fc587170":"model_name = 'nn'","a35aeb20":"# save the best model so far\ncbs = [SaveModelCallback(monitor='_rmse', comp=np.less, fname=model_name+'_best')]","f1817fad":"learn = tabular_learner(dls, layers=[200, 100], metrics=rmse, cbs=cbs)","0ceddcbd":"learn.lr_find()","a7f8750e":"learn.fit_one_cycle(20, 1e-2)","45753523":"learn.show_results()","8b12cefe":"learn.load(model_name+'_best')","6dd7a10c":"preds, targs = learn.get_preds()\nnn_preds = preds.squeeze(1)","361543d5":"rmse(preds, targs)","dce6be78":"X_train, y_train = dls.train.xs, dls.train.ys.values.ravel()\nX_valid, y_valid = dls.valid.xs, dls.valid.ys.values.ravel()","aa6f195a":"!pip install -q xgboost","37a69ba1":"from xgboost import XGBRegressor\nmodel_name = 'xgb'","75763aac":"model = XGBRegressor(n_estimators=100, max_depth=8, learning_rate=0.1, subsample=0.5)\nmodel.fit(X_train, y_train)","29bb5435":"xgb_preds = tensor(model.predict(X_valid))","3b1a1d45":"rmse(xgb_preds, tensor(y_valid))","5d1c4ef7":"test_df = pd.read_csv(path\/'test.csv')\ntest_df.head()","93752f33":"test_dl = dls.test_dl(test_df)","d82ed788":"preds = tensor(model.predict(test_dl.xs))\nxgb_preds = preds","c156e9e3":"preds, _ = learn.get_preds(dl=test_dl)\nnn_preds = preds.squeeze(1)","380205b1":"submit = pd.read_csv(path\/'sample_submission.csv')\nsubmit['target'] = xgb_preds # nn_preds\nsubmit.head()","7ab9534d":"# Ensemling on the validation set \n# Go back to the upper part to see the final rmse\n\n# avg_val_preds = (nn_preds + xgb_preds) \/ 2\n# preds = avg_val_preds","3709c517":"# Ensemling on the test set \n\n# avg_test_preds = (nn_preds + xgb_preds) \/ 2\n# preds = avg_test_preds","771da7d7":"submit.to_csv('submission.csv', index=False)","595547c7":"## Process data","6e0f68dc":"## Evaluate on validation data","c6f780ec":"## Ensembling\n- Remember to set the same the seed value for `splitter` to have the same validation set","2c8524a4":"## ML Training","3ce336e3":"## Make predictions on test data","adbc5ad6":"## Submit to Kaggle\n- Download the `submission.csv` file and submit","b683eb29":"## Import libraries & data\n- `fastai` releases updates frequently, so I won't guarantee this notebook will work with versions later than the one specified here\n- This notebook demonstrates how to quickly build both train a tabular NN model in `fastai` and use its `TabularPandas` api to train other ML models such as `xgboost`","064e8c43":"| Model    | Min RMSE (Validation) |\n|----------|----------|\n| nn    | 0.7124   |\n| xgb | 0.7027   |\n| nn + xgb   | 0.7017   |","a0b49a30":"## NN Training","d1e79d94":"If you are doing **ensembling** below, take note that `preds=avg_val_preds`"}}