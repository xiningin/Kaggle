{"cell_type":{"6c6bc8a8":"code","895bdcd1":"code","f98a5e0b":"code","889ff071":"code","d5eaa169":"code","7f3b1e97":"code","8ced0b0a":"code","737d09b5":"code","23364f7e":"markdown"},"source":{"6c6bc8a8":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.integrate import odeint\nfrom mpl_toolkits import mplot3d\n\nsns.set()\nsns.set_style(\"darkgrid\")\nsns.set_palette([\"#364f6b\", \"#fc2263\", \"#3fc1c9\", \"#F8D53A\", \"#8f2d56\"])\nplt.rcParams['figure.figsize'] = [19\/2.54,5]","895bdcd1":"# Modelagem do Sistema Chlorine Dioxide-Iodine-Malonic Acid (CDIMA)\n\n# Sistema CDIMA\ndef cdima_system(z,t):\n    x = z[0]\n    y = z[1]\n    \n    dxdt = alpha - x - (4*x*y)\/(1+x**2)\n    dydt = beta*x*(1 - (y\/(1+x**2)))\n    \n    return [dxdt, dydt]\n\n# Estado Estacion\u00e1rio\ndef x_st(alpha):\n    return alpha\/5\n\ndef y_st(alpha):\n    return 1 + (alpha\/5)**2\n\n# Beta Cr\u00edtico\ndef beta_c(alpha):\n    return (3*alpha\/5) - (25\/alpha)\n\nt = np.linspace(0,60,int(1e5))","f98a5e0b":"# Curvas de Derivadas Nulas\n\nalpha = 2\nx_null = np.linspace(1e-3,10,1000)\nyx_null = (alpha - x_null)*(1+x_null**2)\/(4*x_null)\nyy_null = 1 + x_null**2\n\nplt.plot(x_null, yx_null);\nplt.plot(x_null, yy_null);\nplt.ylim([-5, 40]);\nplt.xlim([-0.1, 4]);","889ff071":"# Sistema para alpha = 10 e beta = 2 - O ciclo limite \u00e9 um atrator\n\n## Par\u00e2metros\nalpha = 10\nbeta = 2\n\n## C\u00e1lculos da localiza\u00e7\u00e3o do ponto fixo e de beta cr\u00edtico\nprint(x_st(alpha), y_st(alpha))\nprint(beta_c(alpha))\n\n## C\u00e1lculos de \\tau e \\Delta\ntau = (3*x_st(alpha)**2 - 5 - beta*x_st(alpha))\/(1+x_st(alpha)**2)\nDelta = (5*beta*x_st(alpha))\/(1+x_st(alpha)**2)\n\nprint(tau, Delta)\n\n## Resolu\u00e7\u00e3o do Sistema com condi\u00e7\u00e3o inicial fora do Ciclo Limite\nz = odeint(cdima_system,[0,0],t)\n\n\n## Resolu\u00e7\u00e3o do Sistema com condi\u00e7\u00e3o inicial dentro do Ciclo Limite\nz2 = odeint(cdima_system,[1.5,5],t)\n\n## Gr\u00e1ficos\nplt.plot(t,z[:,0], label='x(t)');\nplt.plot(t,z[:,1], label='y(t)');\nplt.legend();\nplt.xlabel(r'$t$');\nplt.ylabel(r'$x, y$');\n\nplt.figure(2)\nplt.plot(z[:,0], z[:,1]);\nplt.scatter(x_st(alpha), y_st(alpha), marker='o', s=80, c='#f8d53a', zorder=3, label='Estado Estacion\u00e1rio');\nplt.arrow(z[1000,0], z[1000,1], z[1002,0]-z[1000,0], z[1002,1]-z[1000,1], shape='full', width=0.05, color='#35406e', zorder=3);\nplt.plot(z2[:,0], z2[:,1]);\nplt.arrow(z2[1000,0], z2[1000,1], z2[1002,0]-z2[1000,0], z2[1002,1]-z2[1000,1], shape='full', width=0.05, color='orangered', zorder=3);\nplt.legend();\nplt.xlabel(r'$x$');\nplt.ylabel(r'$y$');\nplt.show();","d5eaa169":"# Sistema para alpha = 10 e beta = 4 - O ponto de equil\u00edbrio \u00e9 um atrator\n\n## Par\u00e2metros\nalpha = 10\nbeta = 4\n\n## C\u00e1lculos da localiza\u00e7\u00e3o do ponto fixo e de beta cr\u00edtico\nprint(x_st(alpha), y_st(alpha))\nprint(beta_c(alpha))\n\n## Resolu\u00e7\u00e3o do Sistema\nz = odeint(cdima_system,[0,0],t)\n\n## Gr\u00e1ficos\nplt.figure(3)\nplt.plot(t,z[:,0], label='x(t)');\nplt.plot(t,z[:,1], label='y(t)');\nplt.legend();\nplt.xlabel(r'$t$');\nplt.ylabel(r'$x, y$');\n\nplt.figure(4)\nplt.plot(z[:,0], z[:,1]);\nplt.scatter(x_st(alpha), y_st(alpha), marker='o', s=80, c='#f8d53a', zorder=3, label='Estado Estacion\u00e1rio');\nplt.arrow(z[1000,0], z[1000,1], z[1002,0]-z[1000,0], z[1002,1]-z[1000,1], shape='full', width=0.05, color='#35406e', zorder=3);\nplt.legend();\nplt.xlabel(r'$x$');\nplt.ylabel(r'$y$');\nplt.show();","7f3b1e97":"# Plano de fases 3D com a varia\u00e7\u00e3o de beta - alpha = 10\n\nbeta_values = [1, 2, 3, 4, 5]\n\nx_3D = []\ny_3D = []\n\nfor i in beta_values:\n    beta = i\n    z = odeint(cdima_system, [0,0], t)\n    x_3D.append(z[:,0])\n    y_3D.append(z[:,1])\n    \nx_3D = np.array(x_3D)\ny_3D = np.array(y_3D)\n\nsns.set_style(\"whitegrid\")\n\nplt.figure(5, figsize=(10,20))\nax = plt.axes(projection='3d')\n\nj = 0\nfor row in x_3D:\n    ax.plot3D(x_3D[j,:], y_3D[j,:], beta_values[j], zdir='x')\n    j+=1\n    \nax.view_init(10,310);\nax.set_xlabel(r'$\\beta$', fontsize=15);\nax.set_ylabel(r'$x$', fontsize=15);\nax.set_zlabel(r'$y$', fontsize=15);\n\nax.set_xticks(beta_values);\n\nplt.savefig('cdima_plano_de_fases_3D.pdf')","8ced0b0a":"# Varia\u00e7\u00e3o de \\alpha e \\beta na regi\u00e3o de estabilidade\n\nbeta_values = [1.5, 3, 7]\nalpha_values = [5, 6, 7]\nt = np.linspace(0,25,1000)\n\nplt.figure(6);\nsns.set_style(\"darkgrid\")\nfig, axs = plt.subplots(len(beta_values),len(alpha_values), sharex=True, sharey= True, figsize=(10,8));\n\nk = 0\nm = 0\nfor i in alpha_values:\n    alpha = i    \n    axs[k,0].set(ylabel=r'$\\alpha = %.1f$' %alpha)\n    \n    for j in beta_values:\n        beta = j\n        z = odeint(cdima_system, [0,0], t)\n        axs[k,m].plot(t, z[:,0], label = '$x(t)$')\n        axs[k,m].plot(t, z[:,1], label = '$y(t)$')        \n        \n        axs[0,m].set_title(r'$\\beta = %.1f$' %beta)\n        m+=1\n    k+=1\n    m=0\naxs[2,1].set(xlabel=r'$t$');","737d09b5":"# Varia\u00e7\u00e3o de \\alpha e \\beta na regi\u00e3o de instabilidade\n\nbeta_values = [0.2, 0.6, 1]\nalpha_values = [10, 15, 20]\nt = np.linspace(0,40,1000)\n\nplt.figure(7);\nsns.set_style(\"darkgrid\");\nfig, axs = plt.subplots(len(beta_values),len(alpha_values), sharex=True, sharey= True, figsize=(10,8));\n\nk = 0\nm = 0\nfor i in alpha_values:\n    alpha = i    \n    axs[k,0].set(ylabel=r'$\\alpha = %.1f$' %alpha);\n    \n    for j in beta_values:\n        beta = j\n        z = odeint(cdima_system, [0,0], t)\n        axs[k,m].plot(t, z[:,0], label = '$x(t)$');\n        axs[k,m].plot(t, z[:,1], label = '$y(t)$'); \n        \n        axs[0,m].set_title(r'$\\beta = %.1f$' %beta);\n        m+=1\n    k+=1\n    m=0\naxs[2,1].set(xlabel=r'$t$');","23364f7e":"## An\u00e1lise Din\u00e2mica do Oscilador Qu\u00edmico de Di\u00f3xido de Cloro-Iodo-\u00c1cido Mal\u00f4nico\n\nUniversidade Federal do Rio de Janeiro - UFRJ  \nModelagem e Simula\u00e7\u00e3o de Processos - COQ791\nProf. Pr\u00edamo A. Melo"}}