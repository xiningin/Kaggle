{"cell_type":{"5dee18d9":"code","2a80c00a":"code","125a1b9d":"code","898025cd":"code","393ab2f1":"code","44ffa64e":"code","8190b544":"code","fe0009fa":"code","8819ffc2":"code","42474063":"code","78715844":"code","a7c00efd":"code","0547cd68":"code","ed6b3ad0":"code","0ea83152":"code","a457860a":"code","70059719":"code","312b7d5e":"code","d1e0522d":"code","5a952f4f":"code","5142c399":"code","360167e8":"code","14d04310":"code","8e80b537":"code","c80c2d13":"code","08dd1e2d":"code","8e33a886":"code","1cb18601":"code","76df394f":"code","6486fe18":"code","782f070f":"code","95d5266f":"code","2c508d0d":"code","6418ebcd":"code","c55730d1":"code","d7322f2f":"code","230ccc13":"code","9e719432":"code","7f629bf4":"code","7f3b19e0":"code","daf6bd94":"code","41397b45":"code","50a26bdb":"code","77293d3a":"code","9a8ea69a":"code","f21d5617":"code","f340d48f":"code","04632a02":"code","eee3da18":"code","fd61356c":"code","600ab3c9":"code","45a95fc2":"code","35b8de47":"code","6cea9a91":"markdown","33534335":"markdown","c07382c9":"markdown","85dc23db":"markdown"},"source":{"5dee18d9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","2a80c00a":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.head()","125a1b9d":"train.isnull().sum()","898025cd":"sns.heatmap(train.isnull(),yticklabels=False)","393ab2f1":"sns.countplot(x='Survived',data=train,hue='Sex',palette=\"jet_r\")\nplt.title('Survived vs Sex');","44ffa64e":"sns.countplot(x='Survived',data=train,hue='Pclass',palette=\"jet_r\")\nplt.title('Survived vs PClass');","8190b544":"sns.countplot(x='SibSp',data=train,palette=\"jet_r\")","fe0009fa":"sns.set_style('whitegrid')\ntrain['Age'].hist()","8819ffc2":"sns.boxplot(x='Pclass',y='Age',data=train,palette=\"jet_r\")","42474063":"sns.violinplot(x='Pclass',y='Age',data=train,palette=\"jet_r\")","78715844":"def fillAge(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","a7c00efd":"train['Age'] = train[['Age','Pclass']].apply(fillAge,axis=1)","0547cd68":"train.isnull().sum()","ed6b3ad0":"sns.heatmap(train.isnull(),yticklabels=False)","0ea83152":"train.drop(['Cabin'],axis=1,inplace=True)","a457860a":"sns.heatmap(train.isnull(),yticklabels=False)","70059719":"train.dropna(inplace=True)","312b7d5e":"sns.heatmap(train.isnull(),yticklabels=False)","d1e0522d":"train.head()","5a952f4f":"cat_feat = [i for i in train.columns if train.dtypes[i]=='object']\ncat_feat","5142c399":"sex = pd.get_dummies(train['Sex'],drop_first=True)","360167e8":"embark = pd.get_dummies(train['Embarked'],drop_first=True)","14d04310":"train = pd.concat([train,sex,embark],axis=1)","8e80b537":"train.head()","c80c2d13":"train.drop(['Name','Sex','Ticket','Embarked'],axis=1,inplace=True)","08dd1e2d":"train.head()","8e33a886":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head()","1cb18601":"test.isnull().sum()","76df394f":"test['Age'] = test[['Age','Pclass']].apply(fillAge,axis=1)","6486fe18":"test.isnull().sum()","782f070f":"test.drop(['Cabin'],axis=1,inplace=True)","95d5266f":"test.isnull().sum()","2c508d0d":"test['Fare'] = test['Fare'].fillna(test['Fare'].median())","6418ebcd":"test.isnull().sum()","c55730d1":"test.head()","d7322f2f":"sex = pd.get_dummies(test['Sex'],drop_first=True)","230ccc13":"embark = pd.get_dummies(test['Embarked'],drop_first=True)","9e719432":"test = pd.concat([test,sex,embark],axis=1)","7f629bf4":"test.head()","7f3b19e0":"test.drop(['Name','Sex','Ticket','Embarked'],axis=1,inplace=True)","daf6bd94":"test.head()","41397b45":"train.head()","50a26bdb":"X = train.drop('Survived',axis=1)\ny = train['Survived']","77293d3a":"from sklearn.model_selection import train_test_split","9a8ea69a":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.30,random_state=101)","f21d5617":"from sklearn.linear_model import LogisticRegression","f340d48f":"logmodel = LogisticRegression(solver='liblinear')\nlogmodel.fit(X_train,y_train)","04632a02":"y_predct = logmodel.predict(X_test)","eee3da18":"from sklearn.metrics import confusion_matrix\nsns.heatmap(confusion_matrix(y_test,y_predct),annot=True,fmt=\".1f\")","fd61356c":"from sklearn .metrics import classification_report\nprint(classification_report(y_test,y_predct))","600ab3c9":"prediction = logmodel.predict(test)","45a95fc2":"prediction","35b8de47":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': prediction})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\noutput.head()","6cea9a91":"## Data Cleaning","33534335":"## Explorartory Data Analysis","c07382c9":"## predictions on test data","85dc23db":"## Converting Categorical Features"}}