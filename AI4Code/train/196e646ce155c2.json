{"cell_type":{"a6281fcc":"code","c9ba79fa":"code","41a3a97f":"code","b945b4da":"code","7aba7523":"code","24539f36":"code","2b1d8ab0":"code","b93de984":"code","d67921ac":"code","58e69c28":"code","2b8ff9da":"code","80e2cfc4":"code","b539fcf0":"code","61e6a713":"code","dee80bf2":"code","e66f0009":"code","51e04e1a":"code","cf9d027b":"code","7690efc3":"code","f1083804":"code","db5fa02a":"code","cac64713":"code","42026036":"code","1a813c2f":"code","c2931f17":"code","f09086f2":"code","a07c7c47":"code","84d54a1c":"code","b88af360":"code","5ed94cba":"markdown","87245fea":"markdown","513ed858":"markdown","dfbbfc67":"markdown","a1bdd91e":"markdown","95cde4f9":"markdown","a9ddd355":"markdown","03069e09":"markdown","3663dfa3":"markdown","e7885dd1":"markdown","180a0d73":"markdown","bf0cde12":"markdown","485400a9":"markdown","5fe34bb1":"markdown","072966ea":"markdown","129f65f8":"markdown","f1189d71":"markdown","082604f4":"markdown","c1df8372":"markdown","243050ae":"markdown"},"source":{"a6281fcc":"import pandas as pd\nimport sklearn\nimport matplotlib.pyplot as plt\nimport numpy as np","c9ba79fa":"df = pd.read_csv('..\/input\/train.csv')\npd.set_option('display.max_rows', 200)  # para visualizar todas as linhas das an\u00e1lises\npd.set_option('display.max_columns', 200) # para visualizar todas as colunas da tabela \n\ndf","41a3a97f":"df.shape","b945b4da":"df.columns[df.isna().any()].tolist()","7aba7523":"df.dtypes == object","24539f36":"df[\"rooms\"].value_counts().plot(kind=\"bar\")","2b1d8ab0":"df[\"estadocivil1\"].value_counts().plot(kind=\"pie\")","b93de984":"df[\"parentesco1\"].value_counts().plot(kind=\"pie\")","d67921ac":"df[\"overcrowding\"].value_counts().plot(kind=\"pie\")","58e69c28":"df[\"mobilephone\"].value_counts().plot(kind=\"bar\")","2b8ff9da":"df[\"SQBescolari\"].value_counts().plot(kind=\"bar\")","80e2cfc4":"df[\"SQBhogar_total\"].value_counts().plot(kind=\"bar\")","b539fcf0":"df[\"SQBdependency\"].value_counts().plot(kind=\"pie\")","61e6a713":"nadf = df.dropna()\nnadf\n","dee80bf2":"nadf.shape","e66f0009":"len(df) - len(nadf)","51e04e1a":"tdf = pd.read_csv('..\/input\/test.csv')\ntdf","cf9d027b":"tdf.shape","7690efc3":"natdf = tdf.dropna()\nnatdf","f1083804":"natdf.shape","db5fa02a":"len(tdf) - len(natdf)","cac64713":"Xdf = df[[\"hacdor\", \"rooms\", \"hacapo\", \"v14a\", \"refrig\", \"r4h1\", \"r4h2\", \"r4h3\", \"r4m1\", \"r4m2\", \"r4m3\", \"r4t1\", \"r4t2\", \"r4t3\", \"tamhog\", \"tamviv\", \"escolari\", \"hhsize\", \"paredblolad\", \"paredzocalo\", \"paredpreb\", \"pareddes\", \"paredmad\", \"paredzinc\", \"paredfibras\", \"paredother\", \"pisomoscer\", \"pisocemento\", \"pisoother\", \"pisonatur\", \"pisonotiene\", \"pisomadera\", \"techozinc\", \"techoentrepiso\", \"techocane\", \"techootro\", \"cielorazo\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \"public\", \"planpri\", \"noelec\", \"coopele\", \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\", \"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\", \"elimbasu1\", \"elimbasu2\", \"elimbasu3\", \"elimbasu4\", \"elimbasu5\", \"elimbasu6\", \"epared1\", \"epared2\", \"epared3\", \"etecho1\", \"etecho2\", \"etecho3\", \"eviv1\", \"eviv2\", \"eviv3\", \"dis\", \"male\", \"female\", \"estadocivil1\", \"estadocivil2\", \"estadocivil3\", \"estadocivil4\", \"estadocivil5\", \"estadocivil6\", \"estadocivil7\", \"parentesco1\", \"parentesco2\", \"parentesco3\", \"parentesco4\", \"parentesco5\", \"parentesco6\", \"parentesco7\", \"parentesco8\", \"parentesco9\", \"parentesco10\", \"parentesco11\", \"parentesco12\", \"hogar_nin\", \"hogar_adul\", \"hogar_mayor\", \"hogar_total\", \"instlevel1\", \"instlevel2\", \"instlevel3\", \"instlevel4\", \"instlevel5\", \"instlevel6\", \"instlevel7\", \"instlevel8\", \"instlevel9\", \"bedrooms\", \"overcrowding\", \"tipovivi1\", \"tipovivi2\", \"tipovivi3\", \"tipovivi4\", \"tipovivi5\", \"computer\", \"television\", \"mobilephone\", \"qmobilephone\", \"lugar1\", \"lugar2\", \"lugar3\", \"lugar4\", \"lugar5\", \"lugar6\", \"area1\", \"area2\", \"age\", \"SQBescolari\", \"SQBage\", \"SQBhogar_total\", \"SQBedjefe\", \"SQBhogar_nin\", \"SQBovercrowding\", \"SQBdependency\", \"agesq\"]]\nYdf = df.Target\n\nXtdf = tdf[[\"hacdor\", \"rooms\", \"hacapo\", \"v14a\", \"refrig\", \"r4h1\", \"r4h2\", \"r4h3\", \"r4m1\", \"r4m2\", \"r4m3\", \"r4t1\", \"r4t2\", \"r4t3\", \"tamhog\", \"tamviv\", \"escolari\", \"hhsize\", \"paredblolad\", \"paredzocalo\", \"paredpreb\", \"pareddes\", \"paredmad\", \"paredzinc\", \"paredfibras\", \"paredother\", \"pisomoscer\", \"pisocemento\", \"pisoother\", \"pisonatur\", \"pisonotiene\", \"pisomadera\", \"techozinc\", \"techoentrepiso\", \"techocane\", \"techootro\", \"cielorazo\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \"public\", \"planpri\", \"noelec\", \"coopele\", \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\", \"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\", \"elimbasu1\", \"elimbasu2\", \"elimbasu3\", \"elimbasu4\", \"elimbasu5\", \"elimbasu6\", \"epared1\", \"epared2\", \"epared3\", \"etecho1\", \"etecho2\", \"etecho3\", \"eviv1\", \"eviv2\", \"eviv3\", \"dis\", \"male\", \"female\", \"estadocivil1\", \"estadocivil2\", \"estadocivil3\", \"estadocivil4\", \"estadocivil5\", \"estadocivil6\", \"estadocivil7\", \"parentesco1\", \"parentesco2\", \"parentesco3\", \"parentesco4\", \"parentesco5\", \"parentesco6\", \"parentesco7\", \"parentesco8\", \"parentesco9\", \"parentesco10\", \"parentesco11\", \"parentesco12\", \"hogar_nin\", \"hogar_adul\", \"hogar_mayor\", \"hogar_total\", \"instlevel1\", \"instlevel2\", \"instlevel3\", \"instlevel4\", \"instlevel5\", \"instlevel6\", \"instlevel7\", \"instlevel8\", \"instlevel9\", \"bedrooms\", \"overcrowding\", \"tipovivi1\", \"tipovivi2\", \"tipovivi3\", \"tipovivi4\", \"tipovivi5\", \"computer\", \"television\", \"mobilephone\", \"qmobilephone\", \"lugar1\", \"lugar2\", \"lugar3\", \"lugar4\", \"lugar5\", \"lugar6\", \"area1\", \"area2\", \"age\", \"SQBescolari\", \"SQBage\", \"SQBhogar_total\", \"SQBedjefe\", \"SQBhogar_nin\", \"SQBovercrowding\", \"SQBdependency\", \"agesq\"]]","42026036":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=20)\n\nfrom sklearn.model_selection import cross_val_score\nscores = cross_val_score(knn, Xdf, Ydf, cv=20)\nscores\n","1a813c2f":"np.mean(scores)","c2931f17":"knn.fit(Xdf,Ydf)","f09086f2":"YtPred = knn.predict(Xtdf)\nYtPred","a07c7c47":"df_YtPred = pd.DataFrame(index=tdf.Id,columns=['Target'])\ndf_YtPred['Target'] = YtPred\ndf_YtPred","84d54a1c":"df_YtPred.shape","b88af360":"df_YtPred.to_csv('myPred2.csv')","5ed94cba":"## 1. Bibliotecas","87245fea":"Os atributos que possuem valores n\u00e3o num\u00e9ricos s\u00e3o: \"Id\", \"idhogar\", \"dependency\", \"edjefe\" e \"edjefa\".","513ed858":"## 5. Aplicando o classificador kNN \n\nO classificador k - Nearest Neighbors (kNN) ser\u00e1 aplicado na base de teste com k=20 e cv=20. Ap\u00f3s calcular a taxa de acur\u00e1cia obtida na valida\u00e7\u00e3o cruzada, ser\u00e1 gerado um vetor de predi\u00e7\u00e3o da coluna \"Target\" para a base de teste. Por fim, este vetor ser\u00e1 convertido em \".csv\" e enviado para o Kaggle de forma a computar qual foi a taxa de acur\u00e1cia atingida com rela\u00e7\u00e3o aos dados reais.\n","dfbbfc67":"### 3.1. Removendo valores faltantes","a1bdd91e":"N\u00famero de linhas removidas:","95cde4f9":"Assim como ocorreu na base de treino,boa parte dos dados \u00e9 disperdi\u00e7ada ao remover os valores faltantes. \nPortanto, o teste do classificador ser\u00e1 feito em cima do dataframe com valores faltantes, s\u00f3 que com atributos \nque n\u00e3o faltam valores.","a9ddd355":"## 2. Base de treino - An\u00e1lises e Adapta\u00e7\u00e3o","03069e09":"Os atributos que possuem valores faltantes s\u00e3o: \"v2a1\", \"v18q1\", \"rez_esc\", \"meaneduc\" e \"SQBmeaned\".","3663dfa3":"Criando umda dataframe para armezenar a predi\u00e7\u00e3o realizada e preenchendo-o.","e7885dd1":"# PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es\n\nTeste do classificador kNN na base da competi\u00e7\u00e3o \"Costa Rican Household Poverty Level Prediction\". Inicilamente \u00e9 feito o carregamento da base e an\u00e1lise de alguns dos atributos que ser\u00e3o selecionados para aplicar o classificador.\n\nAutor: Vinicius A. C. Miquelin Data: 19\/08\/18","180a0d73":"## 4. Convers\u00e3o de categoria para n\u00famero\n\nN\u00e3o ser\u00e1 necess\u00e1rio converter atributos categ\u00f3ricos para num\u00e9ricos visto que todos os atributos selecionados s\u00e3o num\u00e9ricos. ","bf0cde12":"Agora ser\u00e3o encontrados os atributos que possuem valores faltantes.","485400a9":"Exportando o dataframe com predi\u00e7\u00e3o para o formato \".csv\".\n\nObs.: A coluna de 'Id' n\u00e3o foi criada da mesma maneira que a de 'Target', pois no momento de exportar para o formato \".csv\", o \u00edndice das colunas aparece na tabela. Adicionando a coluna de 'Id', acaba ficando duplicada a coluna de valores dos \u00edndices.","5fe34bb1":"Nota-se que boa parte dos dados \u00e9 disperdi\u00e7ada ao remover os valores faltantes. Portanto, o treino do classificador ser\u00e1 feito em cima do dataframe com valores faltantes, s\u00f3 que com atributos que n\u00e3o faltam valores.","072966ea":"## 3. Base de teste - Adapta\u00e7\u00e3o\n\nComo foi feito para a base treino, ser\u00e3o retiradas da base e teste as linhas que possuem \"NaN\", ou seja, nas quais faltam dados. ","129f65f8":"### 2.1. Analisando e gerando gr\u00e1ficos\n\nOs atributos selecionados para implementar o classificador foram \"hacdor\", \"rooms\", \"hacapo\", \"v14a\", \"refrig\", \"r4h1\", \"r4h2\", \"r4h3\", \"r4m1\", \"r4m2\", \"r4m3\", \"r4t1\", \"r4t2\", \"r4t3\", \"tamhog\", \"tamviv\", \"escolari\", \"hhsize\", \"paredblolad\", \"paredzocalo\", \"paredpreb\", \"pareddes\", \"paredmad\", \"paredzinc\", \"paredfibras\", \"paredother\", \"pisomoscer\", \"pisocemento\", \"pisoother\", \"pisonatur\", \"pisonotiene\", \"pisomadera\", \"techozinc\", \"techoentrepiso\", \"techocane\", \"techootro\", \"cielorazo\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \"public\", \"planpri\", \"noelec\", \"coopele\", \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\", \"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\", \"elimbasu1\", \"elimbasu2\", \"elimbasu3\", \"elimbasu4\", \"elimbasu5\", \"elimbasu6\", \"epared1\", \"epared2\", \"epared3\", \"etecho1\", \"etecho2\", \"etecho3\", \"eviv1\", \"eviv2\", \"eviv3\", \"dis\", \"male\", \"female\", \"estadocivil1\", \"estadocivil2\", \"estadocivil3\", \"estadocivil4\", \"estadocivil5\", \"estadocivil6\", \"estadocivil7\", \"parentesco1\", \"parentesco2\", \"parentesco3\", \"parentesco4\", \"parentesco5\", \"parentesco6\", \"parentesco7\", \"parentesco8\", \"parentesco9\", \"parentesco10\", \"parentesco11\", \"parentesco12\", \"hogar_nin\", \"hogar_adul\", \"hogar_mayor\", \"hogar_total\", \"instlevel1\", \"instlevel2\", \"instlevel3\", \"instlevel4\", \"instlevel5\", \"instlevel6\", \"instlevel7\", \"instlevel8\", \"instlevel9\", \"bedrooms\", \"overcrowding\", \"tipovivi1\", \"tipovivi2\", \"tipovivi3\", \"tipovivi4\", \"tipovivi5\", \"computer\", \"television\", \"mobilephone\", \"qmobilephone\", \"lugar1\", \"lugar2\", \"lugar3\", \"lugar4\", \"lugar5\", \"lugar6\", \"area1\", \"area2\", \"age\", \"SQBescolari\", \"SQBage\", \"SQBhogar_total\", \"SQBedjefe\", \"SQBhogar_nin\", \"SQBovercrowding\", \"SQBdependency\" e \"agesq\". Abaixo seguem as an\u00e1lises feitas para alguns destes atributos.","f1189d71":"### 2.2. Removendo valores faltantes\n\nAgora ser\u00e3o retiradas da base de treino as linhas que possuem \"NaN\", ou seja, nas quais faltam dados.","082604f4":"Agora ser\u00e3o encontrados os atributos com valores n\u00e3o num\u00e9ricos.","c1df8372":"Acur\u00e1cia obtida na valida\u00e7\u00e3o cruzada com cv=20.","243050ae":"N\u00famero de linhas removidas:"}}