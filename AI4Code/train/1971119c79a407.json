{"cell_type":{"7d7f5790":"code","71bfc33f":"code","d99147cf":"code","41961928":"code","dfa49969":"code","a1d91e97":"code","a1ddbdd2":"code","f5038603":"code","0fd64176":"code","44c13b7e":"code","6efeb834":"code","bee613cc":"code","5867e96d":"code","902229db":"code","6c718453":"code","4a6b6dde":"code","41be33a1":"code","ae891bfc":"code","298f27c9":"code","d8099139":"code","043335d8":"code","7b56c222":"code","d048cf77":"code","cc58714b":"code","092f02c5":"code","24c848db":"code","22a86f27":"code","c5c4fad0":"code","86a6414a":"code","03b3f66b":"code","4c97bdfd":"markdown","7d2ed66f":"markdown","7de4a0db":"markdown","48531cb6":"markdown","abbfc1c6":"markdown","7332e849":"markdown","2b098667":"markdown","c0c00a30":"markdown","a8aa2c8c":"markdown","77f7ec15":"markdown","9eee1abb":"markdown","03429a54":"markdown","fd642ef6":"markdown","14242c62":"markdown","7d030d98":"markdown","734c3234":"markdown","b3dd7d6f":"markdown","3ee7c2d2":"markdown","f40adee0":"markdown","b2816fb0":"markdown","91c57d41":"markdown","71eef574":"markdown","3a94b431":"markdown","02b82361":"markdown","7bfb8f68":"markdown"},"source":{"7d7f5790":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.express as px\n\nimport cufflinks as cf \n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\n%matplotlib inline\nsns.set_style(\"whitegrid\")\nplt.style.use(\"fivethirtyeight\")\n\nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nfrom plotly import tools\ninit_notebook_mode(connected=True)  \nimport plotly.figure_factory as ff\nimport random\n","71bfc33f":"def random_colors(number_of_colors):\n    color = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n                 for i in range(number_of_colors)]\n    return color","d99147cf":"# Importing the 2017,2018,2019 and 2020 survey dataset\n\n#Importing the 2020 Dataset\ndf_2020 = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndf_2020.columns = df_2020.iloc[0]\ndf_2020=df_2020.drop([0])\n\n\n#Importing the 2019 Dataset\ndf_2019 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf_2019.columns = df_2019.iloc[0]\ndf_2019=df_2019.drop([0])\n\n#Importing the 2018 Dataset\ndf_2018 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\ndf_2018.columns = df_2018.iloc[0]\ndf_2018=df_2018.drop([0])\n\n#Importing the 2017 Dataset\ndf_2017=pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv',encoding='ISO-8859-1')","41961928":"df_2020[\"In which country do you currently reside?\"].replace(to_replace =\"United States of America\", \n                 value =\"USA\",regex=True,inplace=True)\ndf_2020[\"In which country do you currently reside?\"].replace(to_replace =\"United Kingdom of Great Britain and Northern Ireland\", \n                 value =\"UK\",regex=True,inplace=True)\ndf_2019[\"In which country do you currently reside?\"].replace(to_replace =\"United States of America\", \n                 value =\"USA\",regex=True,inplace=True)\ndf_2019[\"In which country do you currently reside?\"].replace(to_replace =\"United Kingdom of Great Britain and Northern Ireland\", \n                 value =\"UK\",regex=True,inplace=True)\ndf_2018[\"In which country do you currently reside?\"].replace(to_replace =\"United States of America\", \n                 value =\"USA\",regex=True,inplace=True)\ndf_2018[\"In which country do you currently reside?\"].replace(to_replace =\"United Kingdom of Great Britain and Northern Ireland\", \n                 value =\"UK\",regex=True,inplace=True)\ndf_2017[\"Country\"].replace(to_replace =\"United States of America\", \n                 value =\"USA\",regex=True,inplace=True)\ndf_2017[\"Country\"].replace(to_replace =\"United States\", \n                 value =\"USA\",regex=True,inplace=True)\ndf_2017[\"Country\"].replace(to_replace =\"United Kingdom of Great Britain and Northern Ireland\", \n                 value =\"UK\",regex=True,inplace=True)","dfa49969":"c_20 = df_2020[\"In which country do you currently reside?\"].value_counts()[\"India\"]\nc_19 = df_2019[\"In which country do you currently reside?\"].value_counts()[\"India\"]\nc_18 = df_2018[\"In which country do you currently reside?\"].value_counts()[\"India\"]\nc_17 = df_2017[\"Country\"].value_counts()[\"India\"]\n\ndata = [go.Bar(\n    x = [\"2020\",\"2019\",\"2018\",\"2017\"],\n    y = [c_20,c_19,c_18,c_17],\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n)]\n\nlayout = go.Layout(\n   {\n      \"title\":\"Indian Respondants Trend (2017-2020)\",\n   },\n    xaxis=dict(title=\"Years\"),\n    yaxis=dict(title=\"Number of Respondants\"),\n)\n\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)","a1d91e97":"from plotly.subplots import make_subplots\nfig = make_subplots(rows=2, cols=2)\nc_20 = df_2020[\"In which country do you currently reside?\"].value_counts()[:10]\n\nc_19 = df_2019[\"In which country do you currently reside?\"].value_counts()[:10]\n\nc_18 = df_2018[\"In which country do you currently reside?\"].value_counts()[:10]\n\nc_17 = df_2017[\"Country\"].value_counts()[:10]\n\nfig.add_trace(\n    go.Bar(\n    y = c_20.index,\n    x = c_20.values,\n    orientation = \"h\",\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n,name=\"2020\"\n),\n    row=1, col=1\n)\n\nfig.add_trace(\n        go.Bar(\n    y = c_19.index,\n    x = c_19.values,\n    orientation = \"h\",\n    marker = dict(color = 'red',line=dict(color='#000000', width=1.5))\n,name=\"2019\"\n),\n    row=1, col=2\n)\n\nfig.add_trace(\n     go.Bar(\n    y = c_18.index,\n    x = c_18.values,\n    orientation = \"h\",\n    marker = dict(color = 'yellow',line=dict(color='#000000', width=1.5))\n,name=\"2018\"\n),\n    row=2, col=1\n)\n\nfig.add_trace(\n     go.Bar(\n    y = c_17.index,\n    x = c_17.values,\n    orientation = \"h\",\n    marker = dict(color = 'pink',line=dict(color='#000000', width=1.5))\n,name=\"2017\"\n),\n    row=2, col=2\n)\n\nfig.update_layout(height=900, width=1500, title_text=\" World VS India \")\nfig.show()","a1ddbdd2":"from plotly.subplots import make_subplots\nfig = make_subplots(rows=4, cols=1)\nc_20 = df_2020[\"In which country do you currently reside?\"].value_counts()\n\nc_19 = df_2019[\"In which country do you currently reside?\"].value_counts()\n\nc_18 = df_2018[\"In which country do you currently reside?\"].value_counts()\n\nc_17 = df_2017[\"Country\"].value_counts()","f5038603":"fig = go.Figure(\n        go.Treemap(\n    labels = c_20.index,\n    parents=['World']*len(c_20),\n    values = c_20\n)\n)\n\nfig.update_layout(title = 'Country of Survey Participants (2020)')\nfig.show()","0fd64176":"fig = go.Figure(\n        go.Treemap(\n    labels = c_19.index,\n    parents=['World']*len(c_19),\n    values = c_19\n)\n)\n\nfig.update_layout(title = 'Country of Survey Participants (2019)')\nfig.show()","44c13b7e":"fig = go.Figure(\n        go.Treemap(\n    labels = c_18.index,\n    parents=['World']*len(c_18),\n    values = c_18\n)\n)\n\nfig.update_layout(title = 'Country of Survey Participants (2018)')\nfig.show()","6efeb834":"fig = go.Figure(\n        go.Treemap(\n    labels = c_17.index,\n    parents=['World']*len(c_17),\n    values = c_17\n)\n)\n\nfig.update_layout(title = 'Country of Survey Participants (2017)')\nfig.show()","bee613cc":"l = df_2020[\"In which country do you currently reside?\"].value_counts()[:6].index.tolist()\nl.pop(2)","5867e96d":"gender_year2020 = []\nfor i in l:\n    year_data = df_2020.groupby(\"In which country do you currently reside?\").get_group(i)[\"What is your gender? - Selected Choice\"].value_counts().tolist()\n    gender_year2020.append(year_data[:2]) \n\ngender_year2019 = []\nfor i in l:\n    year_data = df_2019.groupby(\"In which country do you currently reside?\").get_group(i)[\"What is your gender? - Selected Choice\"].value_counts().tolist()\n    gender_year2019.append(year_data[:2]) \n\ngender_year2018 = []\nfor i in l:\n    year_data = df_2018.groupby(\"In which country do you currently reside?\").get_group(i)[\"What is your gender? - Selected Choice\"].value_counts().tolist()\n    gender_year2018.append(year_data[:2]) \n\ngender_year2017 = []\nfor i in l:\n    year_data = df_2017.groupby(\"Country\").get_group(i)[\"GenderSelect\"].value_counts().tolist()\n    gender_year2017.append(year_data[:2]) ","902229db":"g_20 = df_2020.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your gender? - Selected Choice\"].value_counts()\ng_19 = df_2019.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your gender? - Selected Choice\"].value_counts()\ng_18 = df_2018.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your gender? - Selected Choice\"].value_counts()\ng_17 = df_2017.groupby(\"Country\").get_group(\"India\")[\"GenderSelect\"].value_counts()\n\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(\n    go.Bar(\n    y = g_20.index,\n    x = g_20.values,\n    orientation = \"h\",\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n,name=\"2020\"\n),\n    row=1, col=1\n)\n\nfig.add_trace(\n        go.Bar(\n    y = g_19.index,\n    x = g_19.values,\n    orientation = \"h\",\n    marker = dict(color = 'red',line=dict(color='#000000', width=1.5))\n,name=\"2019\"\n),\n    row=1, col=2\n)\n\nfig.add_trace(\n     go.Bar(\n    y = g_18.index,\n    x = g_18.values,\n    orientation = \"h\",\n    marker = dict(color = 'yellow',line=dict(color='#000000', width=1.5))\n,name=\"2018\"\n),\n    row=2, col=1\n)\n\nfig.add_trace(\n     go.Bar(\n    y = g_17.index,\n    x = g_17.values,\n    orientation = \"h\",\n    marker = dict(color = 'pink',line=dict(color='#000000', width=1.5))\n,name=\"2017\"\n),\n    row=2, col=2\n)\n\nfig.update_layout(height=900, width=1500, title_text=\" Gender Distributions\")\nfig.show()","6c718453":"def get_gender(l,gender):\n    list_of_gender = []\n    \n    for i in l:\n        list_of_gender.append(i[gender])\n    return list_of_gender","4a6b6dde":"trace1 = go.Bar(x=l, y=get_gender(gender_year2020,0),name=\"Male\")\ntrace2 = go.Bar(x=l, y=get_gender(gender_year2020,1),name=\"Female\")\n# trace2 = go.Bar(x=l, y=gender_year2019,name=\"2019\")\n# trace3 = go.Bar(x=l, y=gender_year2018,name=\"2018\")\n# trace4 = go.Bar(x=l, y=gender_year2017,name=\"2017\")\n\n# Fill out  data with our traces\ndata = [trace1, trace2]\n\n# Create layout and specify title, legend and so on\nlayout = go.Layout(title=\"Comparison wrt TOP 5 Countries (2020)\",\n                   xaxis=dict(title=\"Countries\"),\n                   legend=dict(x=1.0, y=0.5)\n                   ,barmode=\"group\")\n\n# Create figure with all prepared data for plot\nfig = go.Figure(data=data, layout=layout)\n# Create a plot in your Python script directory with name \"bar-chart.html\"\niplot(fig)\n\ntrace1 = go.Bar(x=l, y=get_gender(gender_year2019,0),name=\"Male\")\ntrace2 = go.Bar(x=l, y=get_gender(gender_year2019,1),name=\"Female\")\n# trace2 = go.Bar(x=l, y=gender_year2019,name=\"2019\")\n# trace3 = go.Bar(x=l, y=gender_year2018,name=\"2018\")\n# trace4 = go.Bar(x=l, y=gender_year2017,name=\"2017\")\n\n# Fill out  data with our traces\ndata = [trace1, trace2]\n\n# Create layout and specify title, legend and so on\nlayout = go.Layout(title=\"Comparison wrt TOP 5 Countries (2019)\",\n                   xaxis=dict(title=\"Countries\"),\n                   legend=dict(x=1.0, y=0.5)\n                   ,barmode=\"group\")\n\n# Create figure with all prepared data for plot\nfig = go.Figure(data=data, layout=layout)\n# Create a plot in your Python script directory with name \"bar-chart.html\"\niplot(fig)\ntrace1 = go.Bar(x=l, y=get_gender(gender_year2018,0),name=\"Male\")\ntrace2 = go.Bar(x=l, y=get_gender(gender_year2018,1),name=\"Female\")\n# trace2 = go.Bar(x=l, y=gender_year2019,name=\"2019\")\n# trace3 = go.Bar(x=l, y=gender_year2018,name=\"2018\")\n# trace4 = go.Bar(x=l, y=gender_year2017,name=\"2017\")\n\n# Fill out  data with our traces\ndata = [trace1, trace2]\n\n# Create layout and specify title, legend and so on\nlayout = go.Layout(title=\"Comparison wrt TOP 5 Countries (2018)\",\n                   xaxis=dict(title=\"Countries\"),\n                   legend=dict(x=1.0, y=0.5)\n                   ,barmode=\"group\")\n\n# Create figure with all prepared data for plot\nfig = go.Figure(data=data, layout=layout)\n# Create a plot in your Python script directory with name \"bar-chart.html\"\niplot(fig)\n\ntrace1 = go.Bar(x=l, y=get_gender(gender_year2017,0),name=\"Male\")\ntrace2 = go.Bar(x=l, y=get_gender(gender_year2017,1),name=\"Female\")\n# trace2 = go.Bar(x=l, y=gender_year2019,name=\"2019\")\n# trace3 = go.Bar(x=l, y=gender_year2018,name=\"2018\")\n# trace4 = go.Bar(x=l, y=gender_year2017,name=\"2017\")\n\n# Fill out  data with our traces\ndata = [trace1, trace2]\n\n# Create layout and specify title, legend and so on\nlayout = go.Layout(title=\"Comparison wrt TOP 5 Countries (2017)\",\n                   xaxis=dict(title=\"Countries\"),\n                   legend=dict(x=1.0, y=0.5)\n                   ,barmode=\"group\")\n\n# Create figure with all prepared data for plot\nfig = go.Figure(data=data, layout=layout)\n# Create a plot in your Python script directory with name \"bar-chart.html\"\niplot(fig)\n","41be33a1":"!pip install pywaffle","ae891bfc":"from pywaffle import Waffle\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=5,\n    columns=20,\n    values=g_20,\n    colors = random_colors(len(g_20)),\n    title={'label': 'Gender Distribution(2020)', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(g_20.index, g_20) ],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.4), 'ncol': len(df_2020.groupby(\"In which country do you currently reside?\").get_group('India')), 'framealpha': 0},\n    font_size=30, \n    icons = 'child',\n    figsize=(20, 5),  \n    icon_legend=True\n)","298f27c9":"from pywaffle import Waffle\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=5,\n    columns=20,\n    values=g_19,\n    colors = random_colors(len(g_19)),\n    title={'label': 'Gender Distribution(2019)', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(g_19.index, g_19) ],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.4), 'ncol': len(df_2019.groupby(\"In which country do you currently reside?\").get_group('India')), 'framealpha': 0},\n    font_size=30, \n    icons = 'child',\n    figsize=(12, 5),  \n    icon_legend=True\n)","d8099139":"\nfrom pywaffle import Waffle\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=5,\n    columns=25,\n    values=g_18,\n    colors = random_colors(len(g_18)),\n    title={'label': 'Gender Distribution(2018)', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(g_18.index, g_18) ],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.4), 'ncol': len(df_2018.groupby(\"In which country do you currently reside?\").get_group('India')), 'framealpha': 0},\n    font_size=30, \n    icons = 'child',\n    figsize=(12, 5),  \n    icon_legend=True\n)","043335d8":"from pywaffle import Waffle\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=5,\n    columns=18,\n    values=g_17,\n    colors = random_colors(len(g_17)),\n    title={'label': 'Gender Distribution(2017)', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(g_17.index, g_17) ],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.4), 'ncol': len(df_2017.groupby(\"Country\").get_group('India')), 'framealpha': 0},\n    font_size=30, \n    icons = 'child',\n    figsize=(12, 5),  \n    icon_legend=True\n)","7b56c222":"a_20 = df_2020.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your age (# years)?\"].value_counts()\na_18 = df_2018.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your age (# years)?\"].value_counts()\na_19 = df_2019.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your age (# years)?\"].value_counts()\na_17 = df_2017.groupby(\"Country\").get_group('India')[\"Age\"]\nda_17 = pd.DataFrame(a_17)\ndef convert_age(age):\n    if 22.0 <= age <= 24.0:\n        return \"22-24\"\n    if 18.0 <= age <= 21.0:\n        return \"18-21\"\n    if 30.0 <= age <= 34.0:\n        return \"30-34\"\n    if 40.0 <= age <= 44.0:\n        return \"40-44\"\n    if 60.0 <= age <= 69.0:\n        return \"60-69\"\n    if 25.0 <= age <= 29.0:\n        return \"25-29\"\n    if 35.0 <= age <= 39.0:\n        return \"35-39\"\n    if 55.0 <= age <= 59.0:\n        return \"55-59\"\n    if 50.0 <= age <= 54.0:\n        return \"50-54\"\n    if 45.0 <= age <= 49.0:\n        return \"45-49\"\n    if 70.0 <= age <= 79.0:\n        return \"70-79\"\nda_17[\"Age\"] = da_17[\"Age\"].apply(lambda x : convert_age(x))\n\ng_20 = df_2020.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your gender? - Selected Choice\"].value_counts()\ng_19 = df_2019.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your gender? - Selected Choice\"].value_counts()\ng_18 = df_2018.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your gender? - Selected Choice\"].value_counts()\n\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(\n    go.Bar(\n    x = a_20.index,\n    y = a_20.values,\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n    ,name=\"2020\"\n),\n    row=1, col=1\n)\n\nfig.add_trace(\n        go.Bar(\n    x = a_19.index,\n    y = a_19.values,\n    marker = dict(color = 'red',line=dict(color='#000000', width=1.5))\n,name=\"2019\"\n),\n    row=1, col=2\n)\n\nfig.add_trace(\n     go.Bar(\n    x = a_18.index,\n    y = a_18.values,\n    marker = dict(color = 'yellow',line=dict(color='#000000', width=1.5))\n,name=\"2018\"\n),\n    row=2, col=1\n)\n\nfig.add_trace(\n     go.Bar(\n    x = da_17[\"Age\"].value_counts().index,\n    y = da_17[\"Age\"].value_counts().values,\n    marker = dict(color = 'pink',line=dict(color='#000000', width=1.5))\n,name=\"2017\"\n),\n    row=2, col=2\n)\n\nfig.update_layout(height=1000, width=800, title_text=\" Age Distributions\")\nfig.show()","d048cf77":"trace = go.Pie(labels = list(a_20.index), values = list(a_20.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Age Distribution 2020\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\n\ntrace = go.Pie(labels = list(a_19.index), values = list(a_19.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Age Distribution 2019\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(a_18.index), values = list(a_18.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Age Distribution 2018\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(da_17[\"Age\"].value_counts().index), values = list(da_17[\"Age\"].value_counts().values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Age Distribution 2017\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)","cc58714b":"e_20 = df_2020.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\"].value_counts()\ne_18 = df_2018.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\"].value_counts()\ne_19 = df_2019.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\"].value_counts()\ne_17 = df_2017.groupby(\"Country\").get_group(\"India\")[\"FormalEducation\"].value_counts()\n\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(\n    go.Bar(\n    x = e_20.index,\n    y = e_20.values,\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n    ,name=\"2020\"\n),\n    row=1, col=1\n)\n\nfig.add_trace(\n        go.Bar(\n    x = e_19.index,\n    y = e_19.values,\n    marker = dict(color = 'red',line=dict(color='#000000', width=1.5))\n,name=\"2019\"\n),\n    row=1, col=2\n)\n\nfig.add_trace(\n     go.Bar(\n    x = e_18.index,\n    y = e_18.values,\n    marker = dict(color = 'yellow',line=dict(color='#000000', width=1.5))\n,name=\"2018\"\n),\n    row=2, col=1\n)\n\nfig.add_trace(\n     go.Bar(\n    x = e_17.index,\n    y = e_17.values,\n    marker = dict(color = 'pink',line=dict(color='#000000', width=1.5))\n,name=\"2017\"\n),\n    row=2, col=2\n)\n\nfig.update_layout(height=1500, width=1000, title_text=\" Formal Education\")\nfig.show()","092f02c5":"trace = go.Pie(labels = list(e_20.index), values = list(e_20.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Formal Education 2020\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\n\ntrace = go.Pie(labels = list(e_19.index), values = list(e_19.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Formal Education 2019\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(e_18.index), values = list(e_18.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Formal Education 2018\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(e_17.index), values = list(e_17.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Formal Education 2017\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)","24c848db":"from subprocess import check_output\nfrom wordcloud import WordCloud, STOPWORDS\nimport matplotlib as mpl\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=[36, 12])\nwordcloud1 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(e_20.index))\nax1.imshow(wordcloud1)\nax1.axis('off')\nax1.set_title('Formal Education in 2020',fontsize=20);\n\nwordcloud2 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(e_19.index))\nax2.imshow(wordcloud2)\nax2.axis('off')\nax2.set_title('Formal Education in 2019',fontsize=20);\n\nwordcloud3 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(e_19.index))\nax3.imshow(wordcloud3)\nax3.axis('off')\nax3.set_title('Formal Education in 2018',fontsize=20);\n\nwordcloud4 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(e_17.index))\nax4.imshow(wordcloud4)\nax4.axis('off')\nax4.set_title('Formal Education in 2017',fontsize=20);","22a86f27":"p_20 = df_2020.groupby(\"In which country do you currently reside?\").get_group('India')[\"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\"].value_counts()\np_19 = df_2019.groupby(\"In which country do you currently reside?\").get_group('India')[\"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\"].value_counts()\np_18 = df_2018.groupby(\"In which country do you currently reside?\").get_group('India')[\"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\"].value_counts()\np_17 = df_2017.groupby(\"Country\").get_group('India')[\"CurrentJobTitleSelect\"].value_counts()\n\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(\n    go.Bar(\n    x = p_20.index,\n    y = p_20.values,\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n    ,name=\"2020\"\n),\n    row=1, col=1\n)\n\nfig.add_trace(\n        go.Bar(\n    x = p_19.index,\n    y = p_19.values,\n    marker = dict(color = 'red',line=dict(color='#000000', width=1.5))\n,name=\"2019\"\n),\n    row=1, col=2\n)\n\nfig.add_trace(\n     go.Bar(\n    x = p_18.index,\n    y = p_18.values,\n    marker = dict(color = 'yellow',line=dict(color='#000000', width=1.5))\n,name=\"2018\"\n),\n    row=2, col=1\n)\n\nfig.add_trace(\n     go.Bar(\n    x = p_17.index,\n    y = p_17.values,\n    marker = dict(color = 'pink',line=dict(color='#000000', width=1.5))\n,name=\"2017\"\n),\n    row=2, col=2\n)\n\nfig.update_layout(height=1500, width=800, title_text=\" Current Profession \")\nfig.show()","c5c4fad0":"trace = go.Pie(labels = list(p_20.index), values = list(p_20.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Profession 2020\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\n\ntrace = go.Pie(labels = list(p_19.index), values = list(p_19.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Profession 2019\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(p_18.index), values = list(p_18.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Profession 2018\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(p_17.index), values = list(p_17.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Profession 2017\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)","86a6414a":"from subprocess import check_output\nfrom wordcloud import WordCloud, STOPWORDS\nimport matplotlib as mpl\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=[36, 12])\nwordcloud1 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(p_20.index))\nax1.imshow(wordcloud1)\nax1.axis('off')\nax1.set_title('Job Titles in 2020',fontsize=20);\n\nwordcloud2 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(p_19.index))\nax2.imshow(wordcloud2)\nax2.axis('off')\nax2.set_title('Job Titles in 2019',fontsize=20);\n\nwordcloud3 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(p_19.index))\nax3.imshow(wordcloud3)\nax3.axis('off')\nax3.set_title('Job Titles in 2018',fontsize=20);\n\nwordcloud4 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(p_17.index))\nax4.imshow(wordcloud4)\nax4.axis('off')\nax4.set_title('Job Titles in 2017',fontsize=20);","03b3f66b":"s_20 = df_2020.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your current yearly compensation (approximate $USD)?\"].value_counts()\ns_19 = df_2019.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your current yearly compensation (approximate $USD)?\"].value_counts()\ns_18 = df_2018.groupby(\"In which country do you currently reside?\").get_group('India')[\"What is your current yearly compensation (approximate $USD)?\"].value_counts()\ns_17 = df_2017.groupby(\"Country\").get_group('India')[\"CompensationAmount\"].value_counts()\n\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(\n    go.Bar(\n    x = s_20.index,\n    y = s_20.values,\n    marker = dict(color = 'blue',line=dict(color='#000000', width=1.5))\n    ,name=\"2020\"\n),\n    row=1, col=1\n)\n\nfig.add_trace(\n        go.Bar(\n    x = s_19.index,\n    y = s_19.values,\n    marker = dict(color = 'red',line=dict(color='#000000', width=1.5))\n,name=\"2019\"\n),\n    row=1, col=2\n)\n\nfig.add_trace(\n     go.Bar(\n    x = s_18.index,\n    y = s_18.values,\n    marker = dict(color = 'yellow',line=dict(color='#000000', width=1.5))\n,name=\"2018\"\n),\n    row=2, col=1\n)\n\n\nfig.update_layout(height=1500, width=800, title_text=\" Current Salary \")\nfig.show()\n\ntrace = go.Pie(labels = list(s_20.index), values = list(s_20.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Salary 2020\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\n\ntrace = go.Pie(labels = list(s_19.index), values = list(s_19.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Salary 2019\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\ntrace = go.Pie(labels = list(s_18.index), values = list(s_18.values),\n                            hole = 0.2,\n               marker=dict(colors = random_colors(3), \n                           line=dict(color='#000000', width=2)\n                           ))\ndata = [trace]\nlayout = go.Layout(\n   {\n      \"title\":\"Current Salary 2018\",\n   }\n)\n\nfig = go.Figure(data=data,layout = layout)\niplot(fig)\n\ntrace1 = go.Bar(x=s_20.index, y=s_20.values,name=\"2020\")\ntrace2 = go.Bar(x=s_19.index, y=s_19.values,name=\"2019\")\n\n# Fill out  data with our traces\ndata = [trace1, trace2]\n# Create layout and specify title, legend and so on\n\nlayout = go.Layout(title=\"Salary Comparison (2020 VS 2019) \",\n                   xaxis=dict(title=\"Salary\"),\n                   legend=dict(x=1.0, y=0.5)\n                   ,barmode=\"group\")\n\n\n# Create figure with all prepared data for plot\nfig = go.Figure(data=data, layout=layout)\n# Create a plot in your Python script directory with name \"bar-chart.html\"\niplot(fig)","4c97bdfd":"<font size=\"+3\" color=blue><b> <center><u> Indians On Kaggle Platform \ud83c\uddee\ud83c\uddf3\ud83c\udf0d<\/u><\/center><\/b><\/font>","7d2ed66f":"Conclusion:-\n* Most of the Indian Kagglers are currently Student. ","7de4a0db":"<a id=\"top\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center> Table of content <\/center><\/h3>\n\n* [Respondants](#21)\n* [Gender](#24)\n* [Age](#26)\n* [Formal Education](#27)\n* [Current Profession](#28)\n* [Current Salary](#29)","48531cb6":"Conclusion:-\n* Most of the Indians have age under 30, Which Means In future chances are that most of the GM and Masters would be from India provided that the kind of skilled workforce we have.","abbfc1c6":"<a id=\"27\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center> Education <\/center><\/h3>","7332e849":"### If these kernels impress you,give them an <font size=\"+3\" color=\"red\"><b>Upvote<\/b><\/font>.<br>","2b098667":"<a id=\"28\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center> Professional <\/center><\/h3>","c0c00a30":"<a id=\"24\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center> Gender <\/center><\/h3>","a8aa2c8c":"<font size=\"+2\" color=blue ><b>Please <font size=\"+3\" color=\"red\"><b>Upvote<\/b><\/font> my kernel and keep it in your favourite section if you think it is helpful.<\/b><\/font>","77f7ec15":"Conclusion:-\n* Most of the Indian Kagglers have Bachelors Degree followed by master degree. \n","9eee1abb":"Conclusion:-\n* Indian Respondants are increasing Per Year. \n* Indians are dominating the chart.","03429a54":"<a href=\"#top\" class=\"btn btn-success btn-lg active\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOP<\/a>","fd642ef6":"<a id=\"23\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  World VS India Trend (2017-2020)  <\/center><\/h3>","14242c62":"<a id=\"2.2\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>   Import Dataset   <\/center><\/h3>\n","7d030d98":"<a id=\"2.1\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  Import Libraries   <\/center><\/h3>","734c3234":"Conclusion:-\n* Most of the Indian Kagglers are Earns Less than 20000. ","b3dd7d6f":"<a id=\"3\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  Exploratory Data Analysis <\/center><\/h3>","3ee7c2d2":"<a id=\"2\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  Load and Check Data  <\/center><\/h3>","f40adee0":"<a id=\"22\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  Indian Respondants Trend (2017-2020)  <\/center><\/h3>\n","b2816fb0":"<a id=\"26\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center> Age <\/center><\/h3>","91c57d41":"<a id=\"21\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  Indian Users are Increasing on Kaggle ? <\/center><\/h3>","71eef574":"<a id=\"1\"><\/a>\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center>  Introduction  <\/center><\/h3>","3a94b431":"![image.png](attachment:image.png)","02b82361":"<a id=\"29\"><\/a>\n<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\"> <center> Salary <\/center><\/h2>","7bfb8f68":"Conclusion:-\n* Male to Female Ratio is Very Bad in Indian Kagglers. "}}