{"cell_type":{"6f0acc66":"code","e13e6c5b":"code","aafec628":"code","63d3171d":"code","255d7a10":"code","ae3605c1":"code","23d85224":"code","69a1c7a6":"code","beb2ad24":"code","720836bd":"code","68e3a86c":"code","e2c2609c":"code","51075608":"markdown","43d0557b":"markdown","a3e2e828":"markdown","d4551edf":"markdown","8e92b775":"markdown","39bf2e72":"markdown","efdc830c":"markdown","e3ba311e":"markdown"},"source":{"6f0acc66":"import pandas as pd\nimport numpy as np","e13e6c5b":"\n\nds_1 = pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\nds_2 = pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv\")","aafec628":"ds_1.info()","63d3171d":"ds_2.info()","255d7a10":"ds_1.columns","ae3605c1":"\nds_1['class_2']=ds_2['class']","23d85224":"ds_1.info()","69a1c7a6":"ds_1.describe()","beb2ad24":"x = ds_1.iloc[:, :-2]\ny = ds_1.iloc[:,-2:]\n","720836bd":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2)\n","68e3a86c":"from sklearn.ensemble import RandomForestClassifier\nres = []\nacc_class =[]\nacc_class2=[]\nfor i in range(1,100):\n    classifier = RandomForestClassifier(n_estimators=i)\n    classifier.fit(X_train, y_train)\n    y_pred = classifier.predict(X_test)\n    res.append((y_pred==y_test).sum())\n    ","e2c2609c":"for a,b in res:\n    acc_class.append(a\/62)\n    acc_class2.append(b\/62)\n        \nmax_class = max(acc_class)\nmax_class2 = max(acc_class2)\nif max_class>max_class2:\n    print(\"the most accurate n_estimator is: \", acc_class.index(max_class), \"and the prediction accuracy is: \", max_class*100)\nelse:\n    print(\"the most accurate n_estimator is: \", acc_class2.index(max_class2), \"and the prediction accuracy is: \", max_class2*100)\n","51075608":"Since all dataset has very few column and all of them are numerical and present critical feature for classification into one of the many they are all selected for the feature variable 'x'. And the two classification columns are sliced into target 'y'.","43d0557b":"# 2.3 Classification model and training testing loop ","a3e2e828":"#   1.1 Loading Pandas files","d4551edf":"# 2. Starting steps for ML model\nBegin the ML modelling by segregating the dataframe into features and target","8e92b775":"In the codecell below, I have defined a loop for to iterate for for 100 values of n_estimator. For each n_estimator, the model is trained and fitted on the split data and consequent classification of class and class2 is performed. \nThe number of instances where predicted value matches test case is counted and percentage of correct predictions is noted.\nThe prediction values with most correct correct predicitons for test cases is singled out and corresponding index value denotes the value of n_estimator.","39bf2e72":"Clearly, from the two codecells above, no column has a missing value and there seems no outlier either.","efdc830c":"# 2.2 Splitting the target and features \ninto train and test at 80% and 20% respectively.","e3ba311e":"# 1.2 Creating additional column\nSince the two datasets have same features except for the last column which is class of patients, I have combined them into a single dataframe."}}