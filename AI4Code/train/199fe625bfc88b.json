{"cell_type":{"094db449":"code","d1e9fd98":"code","1251036b":"code","dffeb26c":"code","7ab96ad5":"code","df5ebfe9":"code","6b2a6897":"code","ccf52c4e":"code","8e3cfc96":"code","ed19b7a6":"code","b89a352c":"markdown","42aa8c6a":"markdown"},"source":{"094db449":"import numpy as np \nimport pandas as pd \nimport tensorflow as tf\nimport os\nimport random\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d1e9fd98":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","1251036b":"TRAINING_DIR = '\/kaggle\/input\/dogs-cats-images\/dataset\/training_set\/'\nnum_cat_images_train = len(os.listdir(os.path.join(TRAINING_DIR,'cats')))\nnum_dog_images_train = len(os.listdir(os.path.join(TRAINING_DIR,'dogs')))\nprint('Cat images:',num_cat_images_train)\nprint('Dog images:',num_dog_images_train)\nprint('Total:',num_cat_images_train + num_dog_images_train)","dffeb26c":"TESTING_DIR = '\/kaggle\/input\/dogs-cats-images\/dataset\/test_set\/'\nnum_cat_images_test = len(os.listdir(os.path.join(TESTING_DIR,'cats')))\nnum_dog_images_test = len(os.listdir(os.path.join(TESTING_DIR,'dogs')))\nprint('Cat images:',num_cat_images_test)\nprint('Dog images:',num_dog_images_test)\nprint('Total:',num_cat_images_test+num_dog_images_test)","7ab96ad5":"train_datagen = ImageDataGenerator(\n    rescale = 1.\/255,\n    rotation_range=40,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    fill_mode='nearest'\n)\n\ntrain_generator = train_datagen.flow_from_directory(\n    TRAINING_DIR,\n    batch_size = 128,\n    target_size = (150,150),\n    class_mode = 'binary'\n)","df5ebfe9":"validation_datagen = ImageDataGenerator(\n    rescale = 1.\/255,\n    rotation_range=40,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    fill_mode='nearest'\n)\n\nvalidation_generator = validation_datagen.flow_from_directory(\n    TESTING_DIR,\n    batch_size = 128,\n    target_size = (150,150),\n    class_mode = 'binary'\n)","6b2a6897":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,GlobalAveragePooling2D,Conv2D,Dropout,MaxPooling2D","ccf52c4e":"model = Sequential([\n    Conv2D(32,(3,3),activation='relu',input_shape=(150,150,3)),\n    MaxPooling2D(2, 2),\n    Conv2D(64, (3, 3),activation='relu'),\n    MaxPooling2D(2, 2),\n    Conv2D(128, (3, 3),activation='relu'),\n    MaxPooling2D(2, 2),\n    GlobalAveragePooling2D(),\n    Dense(512,activation='relu'),\n    Dense(1,activation='sigmoid')\n])\nmodel.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])\nmodel.summary()","8e3cfc96":"from tensorflow.keras.callbacks import EarlyStopping,ModelCheckpoint,ReduceLROnPlateau\nearly_cb = EarlyStopping(monitor='val_loss',patience=7)\nrlrp_cb = ReduceLROnPlateau(monitor='val_loss',patience=3,factor=0.5,min_lr=0.000001)\nmodel_cp = ModelCheckpoint(filepath='\/kaggle\/working\/my_model.h5',monitor='val_acc',save_best_only=True,save_weights_only=True,mode='max')","ed19b7a6":"history = model.fit_generator(train_generator,\n                              epochs=20,\n                              verbose=1,\n                              validation_data=validation_generator,\n                             callbacks=[early_cb,rlrp_cb,model_cp])","b89a352c":"## Let us have a look at the number of training and testing images ","42aa8c6a":"## Next we setup the train and test image generators"}}