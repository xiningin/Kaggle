{"cell_type":{"cad7c457":"code","c9524220":"code","ed4956a9":"code","497b00bb":"code","9f37fa2c":"code","72109906":"code","36a47a1d":"code","981eccdc":"code","0099ca4e":"code","a770647a":"code","1ade50a6":"code","fb9825be":"code","8a5eac47":"code","ef250b77":"code","1e74b43b":"code","4b64e6f9":"code","05cae67c":"code","3cc8c62c":"code","913d0428":"markdown","d03b1c95":"markdown","70de22da":"markdown","3de77624":"markdown","95f94022":"markdown","525a5121":"markdown","282a62ff":"markdown","98a0fab5":"markdown","f8e6554a":"markdown","a0a2255e":"markdown"},"source":{"cad7c457":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import model_selection\nfrom sklearn import metrics","c9524220":"data = pd.read_csv('..\/input\/HR_comma_sep.csv')\ndata.info()   # \u6ca1\u6709\u7f3a\u5931\u503c","ed4956a9":"data.head()","497b00bb":"data.describe()","9f37fa2c":"data[data.isnull().values == True]","72109906":"data_copy = data.copy(deep = True)  #\u5bf9\u539f\u59cb\u6570\u636e\u505a\u4e00\u4e2a\u62f7\u8d1d\ndata_copy.describe()","36a47a1d":"data['satisfBin'] = pd.cut(data['satisfaction_level'],[0.08,0.44,0.6129,0.82,1.0])\ndata['evaluBin'] = pd.cut(data['last_evaluation'], [0.35,0.56,0.72,0.87,1.0])\ndata['hoursBin'] = pd.qcut(data['average_montly_hours'], 4) \n\nlabel = LabelEncoder()\ndata['satisf_code'] = label.fit_transform(data['satisfBin'])\ndata['evalu_code'] = label.fit_transform(data['evaluBin'])\ndata['sales_code'] = label.fit_transform(data['sales'])\ndata['salary_code'] = label.fit_transform(data['salary'])\ndata['hours_code'] = label.fit_transform(data['hoursBin'])\n\nTarget = ['left']\ndata_x = ['satisfBin','evaluBin','number_project','hoursBin','time_spend_company','Work_accident',\n          'promotion_last_5years','sales','salary',]\n\ndata_xy_Bin = data_x + Target  # \u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u7c7b\u522b\nprint('Bin X Y: ', data_xy_Bin, '\\n')\n\ndata_dummy = pd.get_dummies(data.drop(columns='left'))  # \u5c06\u7c7b\u522b\u53d8\u91cf\u8f6c\u6362\u4e3a\u5206\u7c7b\u53d8\u91cf\ndata_x_dummy = data_dummy.columns.tolist()\ndata_xy_dummy = Target + data_x_dummy\nprint('Dummy X Y: ', data_xy_dummy, '\\n')\n\ndata_dummy.head()","981eccdc":"salary_left = pd.crosstab(data['salary'], data['left'])\nsalary_left = salary_left.reindex(index = ['low','medium','high'])\nsalary_left.plot(kind='bar')","0099ca4e":"sales_left = pd.crosstab(data['sales'], data['left'])\nsales_left.plot(kind = 'bar')   ","a770647a":"plt.figure(figsize=[10,6])\n\nplt.subplot(121)\nplt.boxplot(data['satisfaction_level'], showmeans = True, meanline = True)\nplt.title('satisfaction_level Boxplot')\nplt.ylabel('satisfaction_level (#)')\n\nplt.subplot(122)\nsb.countplot(x = data['left'],data = data, hue = 'satisfBin')\n\nsatis_left_ = pd.crosstab(data['satisfBin'],data['left'])\nsatis_left_.plot.pie(y=1, autopct='%.2f', figsize=(10,6))","1ade50a6":"plt.figure(figsize=[16,8])\n\nplt.subplot(131)\nplt.boxplot(data['last_evaluation'], showmeans = True, meanline = True)\nplt.title('last_evaluation of staffs')\nplt.ylabel('last_evaluation (#)')\n\nplt.subplot(133)\nplt.boxplot(data[data['left']==1]['last_evaluation'], showmeans = True, meanline = True)\nplt.title('last_evaluation of left')\nplt.ylabel('last_evaluation (#)')\n\nplt.subplot(132)\nsb.countplot(x = data['left'],data = data, hue = 'evaluBin')\n\nsatis_left_ = pd.crosstab(data['evaluBin'],data['left'])\nsatis_left_.plot.pie(y=1, autopct='%.2f', figsize=(10,6))","fb9825be":"fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(14,12))\n\nsb.boxplot(x = 'promotion_last_5years', y = 'time_spend_company', hue = 'left', data = data, ax = axis1)\naxis1.set_title('promotion vs work_year left Comparison')\n\nsb.boxplot(x = 'promotion_last_5years', y = 'average_montly_hours', hue = 'left', data = data, ax = axis2)\naxis2.set_title('promotion vs montly_hours left Comparison')\n\nsb.boxplot(x = 'promotion_last_5years', y ='number_project', hue = 'left', data = data, ax = axis3)\naxis3.set_title('promotion vs number_project left Comparison')","8a5eac47":"X = data_dummy\ny = data_copy[Target]\nXtrain, Xtest, ytrain, ytest = model_selection.train_test_split(X, y, test_size = 0.3, random_state = 42)\nmodel = LogisticRegression()\nmodel.fit(Xtrain, ytrain)","ef250b77":"pred = model.predict(Xtest)\nmetrics.accuracy_score(ytest, pred)  # \u8f93\u51fa\u9884\u6d4b\u7cbe\u786e\u5ea6","1e74b43b":"metrics.confusion_matrix(ytest, pred)  # \u8f93\u51fa\u6df7\u6dc6\u77e9\u9635,\u884c\u8868\u793a\u771f\u5b9e\u503c\uff0c\u5217\u8868\u793a\u9884\u6d4b\u503c","4b64e6f9":"print(metrics.classification_report(ytest, pred))","05cae67c":"model_selection.cross_val_score(LogisticRegression(), X, y, scoring='accuracy', cv=10)  # \u8f93\u51fa10\u4efd\u4ea4\u53c9\u9a8c\u8bc1","3cc8c62c":"result = ytest.copy(deep=True)\nresult.insert(1,'predict_left', pred)\nresult.to_csv(\"left_predictions.csv\", index=False)","913d0428":"### 2.\u5404\u90e8\u95e8\u5458\u5de5\u79bb\u804c\u60c5\u51b5\u5206\u6790\n* \u53ef\u4ee5\u770b\u5230\u9500\u552e\u4eba\u5458\u79bb\u804c\u4eba\u6570\u6700\u591a\uff0c\u6280\u672f\u4eba\u5458\u6b21\u4e4b","d03b1c95":"### 4.\u7ee9\u6548\u8bc4\u4f30\u4e0e\u662f\u5426\u79bb\u804c\u7684\u5206\u5e03\n* \u53ef\u4ee5\u770b\u5230\u7ee9\u6548\u8bc4\u4f30\u7684\u5747\u503c\u4e3a0.72\uff0c\u7ee9\u6548\u8bc4\u4f30\u4f4e\u4e8e\u5e73\u5747\u503c\u7684\u79bb\u804c\u7387\u4e3a47.07%\uff0c\u800c\u7ee9\u6548\u8bc4\u4f30\u9ad8\u4e8e\u5e73\u5747\u503c\u7684\u670952.93%\u7684\u4eba\u79bb\u804c\uff0c\u57fa\u672c\u6301\u5e73\n* \u79bb\u804c\u4eba\u5458\u7684\u7ee9\u6548\u8bc4\u4f30\u5e73\u5747\u503c\u4e3a0.8\uff0c\u8bf4\u660e\u7ee9\u6548\u8bc4\u4f30\u8f83\u9ad8\u7684\u4eba\u79bb\u804c\u7387\u8f83\u9ad8\uff0c\u8d85\u8fc7\u4e8630.86%","70de22da":"\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u4f46\u662f\u6211\u4eec\u8981\u5bf9\u6570\u636e\u505a\u4e00\u4e9b\u9884\u5904\u7406,\u5c06satisfaction,last_evaluation,average_montly_hours\u79bb\u6563\u53d8\u91cf\u8fde\u7eed\u5316\uff0c\nsale\u548csalary\u8f6c\u6362\u4e3a\u7c7b\u522b","3de77624":"# \u5efa\u6a21\uff1a\u903b\u8f91\u56de\u5f52","95f94022":"### \u7ed3\u8bba\uff1a\u79bb\u804c\u5458\u5de5\u6709\u5982\u4e0b\u7279\u70b9\n* \u85aa\u8d44\u4e0d\u9ad8\n* \u5bf9\u516c\u53f8\u6ee1\u610f\u5ea6\u8f83\u4f4e\uff0c\u5927\u591a\u96c6\u4e2d\u57280.44\u4ee5\u4e0b\n* \u7ee9\u6548\u8bc4\u4f30\u8f83\u9ad8\uff0c\u5927\u591a\u96c6\u4e2d\u57280.8\n* \u6708\u5e73\u5747\u5de5\u4f5c\u65f6\u957f\u8f83\u9ad8\uff0c\u5927\u591a\u90fd\u8d85\u8fc7\u4e86\u5e73\u5747\u6c34\u5e73\uff08\u5e73\u5747\u6c34\u5e73\u4e3a201h\uff09\n* \u53c2\u52a0\u9879\u76ee\u8f83\u591a\n* 5\u5e74\u5185\u6ca1\u6709\u5347\u804c","525a5121":"#### \u53d8\u91cf\u8bf4\u660e\uff1a\n* \u81ea\u53d8\u91cf\uff1a\u6ee1\u610f\u5ea6,\u7ee9\u6548\u8bc4\u4f30,\u53c2\u52a0\u8fc7\u7684\u9879\u76ee\u6570,\u5e73\u5747\u6bcf\u6708\u5de5\u4f5c\u65f6\u957f(\u5355\u4f4d\uff1ah),\u5de5\u4f5c\u5e74\u9650,\u662f\u5426\u53d1\u751f\u8fc7\u5de5\u4f5c\u5dee\u9519,5\u5e74\u5185\u662f\u5426\u5347\u804c,\u804c\u4e1a,\u85aa\u6c34\n* \u56e0\u53d8\u91cf\uff1a\u662f\u5426\u79bb\u804c\uff080-\u5728\u804c\uff0c1-\u79bb\u804c\uff09","282a62ff":"### 5.\u591a\u56e0\u7d20\u5206\u6790\n* \u53ef\u4ee5\u770b\u51fa5\u5e74\u5185\u6ca1\u6709\u5347\u804c\u7684\u5458\u5de5\u79bb\u804c\u7387\u8f83\u9ad8\n* \u53c2\u52a0\u9879\u76ee\u8d8a\u591a\u7684\u5458\u5de5\u79bb\u804c\u7387\u8f83\u9ad8\n* \u6708\u5e73\u5747\u5de5\u4f5c\u65f6\u957f\u8d8a\u957f\u7684\u5458\u5de5\u79bb\u804c\u7387\u8f83\u9ad8","98a0fab5":"## \u6570\u636e\u5904\u7406","f8e6554a":"### 3.\u6ee1\u610f\u5ea6\u4e0e\u662f\u5426\u79bb\u804c\u7684\u5206\u5e03\n* \u53ef\u4ee5\u770b\u5230\u5458\u5de5\u5bf9\u516c\u53f8\u7684\u6ee1\u610f\u5ea6\u7684\u5e73\u5747\u503c\u4e3a61.3%\uff0c\u6ee1\u610f\u5ea6\u4f4e\u4e8e\u5e73\u5747\u503c\u7684\u5458\u5de5\u79bb\u804c\u4eba\u6570\u8f83\u591a\uff0c\u5360\u6bd472.98%","a0a2255e":"## \u6570\u636e\u5206\u6790\n### 1.\u5458\u5de5\u85aa\u8d44\u4e0e\u662f\u5426\u79bb\u804c\u7684\u5206\u5e03\n* \u53ef\u4ee5\u770b\u5230\u5de5\u8d44\u8d8a\u9ad8\u7684\u4eba\u79bb\u804c\u7684\u8d8a\u5c11\uff0c\u6240\u4ee5\u63d0\u9ad8\u85aa\u8d44\u4e5f\u662f\u4e00\u4e2a\u51cf\u5c11\u5458\u5de5\u6d41\u5931\u7684\u624b\u6bb5"}}