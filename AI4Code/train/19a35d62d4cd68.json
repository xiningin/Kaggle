{"cell_type":{"fbb57a84":"code","cba3f570":"code","3d73d167":"code","76caa64a":"code","5ed6c8e5":"code","325c0158":"code","87350562":"code","ffc95298":"code","06fe7c62":"code","fea99a64":"code","02b9cdd5":"code","e80ddadd":"code","04f18ae2":"code","833fab9b":"code","8813ef33":"code","945c33fb":"code","c7b1d4c4":"code","22afc531":"code","9eec00fe":"code","6ff2e83d":"code","103ca5c3":"code","5be7d243":"code","774f3fc1":"code","1ce7b7f7":"code","5709b7df":"code","a14cf9ef":"code","bef44a4c":"markdown","78bc6d71":"markdown","df1d5a58":"markdown","2b3ea6c5":"markdown","b7b7b799":"markdown","efb22ef6":"markdown","3f079db8":"markdown","6795733b":"markdown","bc88eb8a":"markdown","502a8e6c":"markdown","ea16bfc1":"markdown","d5d4cc75":"markdown","858be079":"markdown"},"source":{"fbb57a84":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings('ignore')\npd.set_option('max_columns',None)\nstyle.use(\"fivethirtyeight\")\nstyle.use('seaborn-poster')\nplt.rcParams['font.family'] = 'sans-serif'\n\n%matplotlib inline","cba3f570":"#customer = pd.read_csv('marketing_campaign.csv', sep='\\t')\n\"\"\"\"\"\"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ncustomer = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep='\\t')\n","3d73d167":"customer.head()","76caa64a":"for col in customer.columns:\n    if (customer[col].dtypes == \"object\"):\n        print(f'Columns: {col} is Object type')\n    if (customer[col].nunique()==1):\n        customer = customer.drop(col, axis = 1)\n        print(f'Column: {col} is dropped')","5ed6c8e5":"# convert\ncustomer['Dt_Customer'] = pd.to_datetime(customer['Dt_Customer'])","325c0158":"# missing Values\nmissing = customer.isnull().sum().sort_values(ascending=False)\nmissing = missing[missing>0]\nrows = customer.shape[0]; cols= customer.shape[1]\nprint(f'Data have: {rows} rows and {cols} columns')\nprint(f'Column {missing.index[0]} : having {missing.values[0]} missing values, with {round((missing.values[0]\/rows)*100,2)}%')","87350562":"# Droping missing values\ncustomer = customer.dropna()\n# or fill missing values with mean: customer.fillna(customer.Income.mean(),inplace=True)","ffc95298":"# Dublicate rows\ncustomer.duplicated().sum()\n# There is not duplicate values","06fe7c62":"import datetime as dt\ncustomer['Age'] = 2015 - customer.Year_Birth\n\ncustomer['Month_Customer'] = 12.0 * (2015 - customer.Dt_Customer.dt.year ) + (1 - customer.Dt_Customer.dt.month)\ncustomer['TotalSpendings'] =  customer.MntWines + customer.MntFruits + customer.MntMeatProducts + customer.MntFishProducts + customer.MntSweetProducts + customer.MntGoldProds\n\ncustomer.loc[(customer['Age'] >= 13) & (customer['Age'] <= 19), 'AgeGroup'] = 'Teen'\ncustomer.loc[(customer['Age'] >= 20) & (customer['Age']<= 39), 'AgeGroup'] = 'Adult'\ncustomer.loc[(customer['Age'] >= 40) & (customer['Age'] <= 59), 'AgeGroup'] = 'Middle Age Adult'\ncustomer.loc[(customer['Age'] > 60), 'AgeGroup'] = 'Senior Adult'\n\ncustomer.Marital_Status = customer.Marital_Status.replace({'Together': 'Partner', 'Married': 'Partner',\n                                                           'Divorced': 'Single', 'Widow': 'Single', \n                                                           'Alone': 'Single', 'Absurd': 'Single', 'YOLO': 'Single'\n                                                          })\n\ncustomer.loc[(customer['Marital_Status'] == 'Partner'), 'nb_familly'] = customer.Kidhome + customer.Teenhome + 2\ncustomer.loc[(customer['Marital_Status'] == 'Single'), 'nb_familly'] = customer.Kidhome + customer.Teenhome  + 1\ncustomer[\"Total_Promos\"] = customer[\"AcceptedCmp1\"]+ customer[\"AcceptedCmp2\"]+ customer[\"AcceptedCmp3\"]+ customer[\"AcceptedCmp4\"]+ customer[\"AcceptedCmp5\"]\ncustomer['NumTotalPurchases'] = customer['NumWebPurchases'] + customer['NumCatalogPurchases'] + customer['NumStorePurchases'] + customer['NumDealsPurchases']","fea99a64":"# Droped unusefull data\ncols_droped = ['ID', 'Year_Birth', 'Kidhome', 'Teenhome', 'Dt_Customer',\n             'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1','AcceptedCmp2',\n            'Response', 'NumWebPurchases','NumWebPurchases','NumCatalogPurchases',\n            'NumStorePurchases','NumDealsPurchases','NumWebVisitsMonth'\n            ]\ncustomer = customer.drop(cols_droped, axis = 1)","02b9cdd5":"def boxplots_custom(dataset, columns_list, rows, cols, suptitle,size=(20,16)):\n    fig, axs = plt.subplots(rows, cols,  figsize=size)\n    fig.suptitle(suptitle,y=0.93, size=16)\n    axs = axs.flatten()\n    for i, data in enumerate(columns_list):\n        if i % cols == 0:\n            axs[i].set_ylabel('Values')\n        sns.boxplot( data=dataset[data], orient='v', ax=axs[i])\n        axs[i].set_title(data)","e80ddadd":"numerical_cols=['Income', 'Recency', 'MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts',\n                'MntSweetProducts', 'MntGoldProds', 'Complain', 'Age', 'Month_Customer', 'TotalSpendings',\n                'nb_familly', 'Total_Promos', 'NumTotalPurchases']\n                \nboxplots_custom(dataset=customer, columns_list=numerical_cols, rows=3, cols=5, suptitle='Boxplots before deleting outliers')","04f18ae2":"cols_del_out =['Income', 'MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts',\n                'MntSweetProducts', 'MntGoldProds', 'Month_Customer', 'NumTotalPurchases']\n\nQ1 = customer[cols_del_out].quantile(0.1)\nQ3 = customer[cols_del_out].quantile(0.85)\nIQR = Q3 - Q1\ncustomer_f = customer[~((customer[cols_del_out] < (Q1 - 1.5 * IQR)) |(customer[cols_del_out] > (Q3 + 1.5 * IQR))).any(axis=1)]\n\npourcentage_deleting = round((customer.shape[0]-customer_f.shape[0])*100\/customer.shape[0],2)\nprint(f'{pourcentage_deleting}% deleting from customer data')","833fab9b":"pip install openpyxl","8813ef33":"# Label Encoder\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\ncustomer_save= customer_f.copy()\nLE = LabelEncoder()\nnew_df= pd.DataFrame()\nfor col in customer_f.columns:\n    if (customer_f[col].dtypes ==\"object\"):\n        new_df[col]=customer_f[col]\n        customer_f[col]=LE.fit_transform(customer_f[col].astype(str))   \n","945c33fb":"#Scaling\nscaler = StandardScaler()\nscaler.fit(customer_f)\ncustomer_f_s = pd.DataFrame(scaler.transform(customer_f),columns=customer_f.columns)","c7b1d4c4":"from sklearn.decomposition import PCA\npca = PCA(n_components=4)\npca.fit(customer_f_s)\ncustomer_f_s_pca = pd.DataFrame(pca.transform(customer_f_s), columns=([\"col1\",\"col2\",\"col3\",\"col4\"]))\ncustomer_f_s_pca.describe().T","22afc531":"sns.set(rc={'figure.figsize':(20,10)})\nsns.boxplot(data=customer_f_s_pca, orient=\"h\", palette=\"Set2\")","9eec00fe":"from yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import Birch\nBP = Birch(threshold=0.0001)\n\n# Quick examination of elbow method to find numbers of clusters to make.\nprint('Elbow Method to determine the number of clusters to be formed:')\nElbow_M = KElbowVisualizer(BP, k=10)\nElbow_M.fit(customer_f_s_pca)\nElbow_M.show()","6ff2e83d":"#Initiating the Birch Clustering model with number ELBOW cluster\nBP = Birch(threshold=0.0001, n_clusters=Elbow_M.elbow_value_)\n# fit model and predict clusters\nBP_customer_f_s_pca = BP.fit_predict(customer_f_s_pca)\n#Adding the Clusters feature to the orignal dataframe.\ncustomer_f[\"Clusters\"]= BP_customer_f_s_pca\ncustomer_save['Clusters']=BP_customer_f_s_pca","103ca5c3":"#Plotting countplot of clusters\nimport matplotlib.pyplot as plt\npl = sns.countplot(x=customer_f[\"Clusters\"])\npl.set_title(\"Distribution Of The Clusters\")\nplt.show()","5be7d243":"customer_f_g = customer_f.groupby(['Clusters']).median()\ncustomer_f0 = pd.DataFrame({'MntFruits': customer_f_g.MntFruits,\n                    'MntMeatProducts': customer_f_g.MntMeatProducts,\n                    'MntFishProducts': customer_f_g.MntFishProducts,\n                    'MntSweetProducts': customer_f_g.MntSweetProducts,\n                    'MntWines' : customer_f_g.MntWines,\n                    'MntGoldProds' : customer_f_g.MntGoldProds},\n                   index=customer_f_g.index).sort_values(by=['Clusters'], ascending=False)\ncustomer_f0.plot.barh(stacked=True)","774f3fc1":"cols1=['Clusters', 'Income', 'Month_Customer', 'TotalSpendings',  'NumTotalPurchases']\ncustomer_f1 = customer_f[cols1]\nsns.pairplot(customer_f1, hue='Clusters', palette='viridis')","1ce7b7f7":"def barplots_custom(dataset, columns_list, rows, cols, suptitle,size=(20,16)):\n    fig, axs = plt.subplots(rows, cols,  figsize=size)\n    plt.subplots_adjust(hspace = 0.5, wspace=0.3)\n    fig.suptitle(suptitle,y=1, size=18)\n    \n    axs = axs.flatten()\n    for i, col in enumerate(columns_list):\n        axs[i].set_ylabel('Values')\n        sns.barplot(x='Clusters', y=col, data=dataset,\n                    orient='h', ax=axs[i], palette='magma')\n        axs[i].set_title(col)","5709b7df":"customer_f.to_excel('.\/Customer_personality_analysis.xlsx')","a14cf9ef":"cols2=['Education', 'Marital_Status', 'nb_familly', 'AgeGroup', 'Total_Promos', 'Complain']\nbarplots_custom(dataset=customer_f, columns_list=cols2, rows=3, cols=2, suptitle='Barplots categorical values')","bef44a4c":"### PCA","78bc6d71":"### Label Encoder & Standard Scaler","df1d5a58":"# To be continued ...","2b3ea6c5":"# <a id=\"2\"><\/a><p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">IMPORTING LIBRARIES & LOADING DATA<\/p>","b7b7b799":"# <a id=\"5\"><\/a><p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">EVALUATING MODELS<\/p>","efb22ef6":"# <a id=\"1\"><\/a><p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">ABOUT DATASET<\/p>","3f079db8":"# <a id=\"3\"><\/a><p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">DATA CLEANING & DATA PREPROCESSING<\/p>","6795733b":"### KElbow","bc88eb8a":"# <p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:200%;text-align:center;border-radius:10px 10px;\">Customer personality analiysis<\/p>\n\n<img src=\"https:\/\/raw.githubusercontent.com\/meafekih\/images\/master\/customer_personality.png\">\n\nIn this project, \n\n<a id='top'><\/a>\n<p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">TABLE OF CONTENTS<\/p>\n\n       \n* [1. ABOUT DATASET](#1)\n    \n    \n* [2. IMPORTING LIBRARIES & LOADING DATA](#2)\n\n    \n* [3. DATA CLEANING & DATA PREPROCESSING](#3)\n \n    \n* [4. DIMENSIONALITY REDUCTION & CLUSTERING](#4) \n      \n    \n* [5. EVALUATING MODELS](#5)\n    \n    \n* [6. CONCLUSION](#6)","502a8e6c":"### Data preparation","ea16bfc1":"# <a id=\"6\"><\/a><p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">CONCLUSION<\/p>","d5d4cc75":"# <a id=\"4\"><\/a><p style=\"background-color:#FFF9ED;font-family:arial;color:#7e17b9;border-style:solid;font-size:100%;text-align:center;border-radius:10px 10px;\">DIMENSIONALITY REDUCTION & CLUSTERING<\/p>","858be079":"\n## Context\n\n**Problem Statement**\n\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers. \n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\n\n## Content\n\n**Attributes**\n\n**People**\n\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\n**Products**\n\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\n**Promotion**\n\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n**Place**\n\n* NumWebPurchases: Number of purchases made through the company\u2019s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month\n\n## Target\n\n<h3>Need to perform clustering to summarize customer segments.<\/h3>"}}