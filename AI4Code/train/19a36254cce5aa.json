{"cell_type":{"c9216999":"code","73f2f159":"code","2b60ffdd":"code","24681f3c":"code","dbc6d068":"code","60da501e":"code","a687c0ac":"code","3891cc33":"code","46af189e":"code","0e491c71":"code","96dafc7e":"code","4ee80a17":"code","bd2b9063":"code","89b8527b":"code","042b2953":"code","59673212":"code","4acd6508":"code","2c7e1605":"code","775253e0":"code","42690764":"code","6c815d45":"code","ce091388":"code","c6114e18":"code","613b5ad8":"code","2d35da74":"code","80b14106":"code","cbddb086":"code","d1e8b7a4":"code","750c833e":"code","dfc44914":"code","4ccce089":"markdown","2c673538":"markdown","8a18838f":"markdown","8511c00e":"markdown","30528e4d":"markdown","5a3d9d82":"markdown","6b25a6d8":"markdown","cdaf54ab":"markdown"},"source":{"c9216999":"import datetime as dt\nimport pandas as pd","73f2f159":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nfile='..\/input\/world-happiness-report-20152021\/2021.csv'      ","2b60ffdd":"!pip install dataprep","24681f3c":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","dbc6d068":"df = pd.read_csv(file)","60da501e":"# Start of Pandas Profiling process\nstart_time = dt.datetime.now()\nprint(\"Started at \", start_time)","a687c0ac":"try:\n    create_report(df)\nexcept:\n    print(\"problem to generate report\")","3891cc33":"print('Dataprep finished!!')\nfinish_time = dt.datetime.now()\nprint(\"Finished at \", finish_time)\nelapsed = finish_time - start_time\nprint(\"Elapsed time: \", elapsed)","46af189e":"!pip install git+git:\/\/github.com\/AutoViML\/AutoViz.git\n!pip install xlrd","0e491c71":"# Start of AutoViz process\nstart_time = dt.datetime.now()\nprint(\"Started at \", start_time)","96dafc7e":"df = pd.read_csv(file)\ndf.head()","4ee80a17":"from autoviz.AutoViz_Class import AutoViz_Class\n\nAV = AutoViz_Class()\ndftc = AV.AutoViz(\n    filename='', \n    sep='' , \n    depVar='Class', \n    dfte=df, \n    header=0, \n    verbose=1, \n    lowess=False, \n    chart_format='png', \n    max_rows_analyzed=300000, \n    max_cols_analyzed=30\n)","bd2b9063":"print('AutoViz finished!!')\nfinish_time = dt.datetime.now()\nprint(\"Finished at \", finish_time)\nelapsed = finish_time - start_time\nprint(\"Elapsed time: \", elapsed)","89b8527b":"from pandas_profiling import ProfileReport","042b2953":"df = pd.read_csv(file)","59673212":"# Start of Pandas Profiling process\nstart_time = dt.datetime.now()\nprint(\"Started at \", start_time)","4acd6508":"report = ProfileReport(df)","2c7e1605":"report","775253e0":"print('Pandas Profling finished!!')\nfinish_time = dt.datetime.now()\nprint(\"Finished at \", finish_time)\nelapsed = finish_time - start_time\nprint(\"Elapsed time: \", elapsed)","42690764":"!pip install sweetviz","6c815d45":"import sweetviz as sv","ce091388":"# Start of Pandas Profiling process\nstart_time = dt.datetime.now()\nprint(\"Started at \", start_time)","c6114e18":"df = pd.read_csv(file)","613b5ad8":"advert_report = sv.analyze([df, 'Data'])","2d35da74":"advert_report.show_html()","80b14106":"print('SweetViz finished!!')\nfinish_time = dt.datetime.now()\nprint(\"Finished at \", finish_time)\nelapsed = finish_time - start_time\nprint(\"Elapsed time: \", elapsed)","cbddb086":"!pip install lux-api","d1e8b7a4":"import lux\nimport pandas as pd","750c833e":"df = pd.read_csv(file)","dfc44914":"df","4ccce089":"<a id='2'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center\">2. \ud83d\udcca AutoViz \ud83d\udcda<\/p>\n\nAutoViz stands out of the crowd of freeware Pythonic Rapid EDA Automation tools, doing things in a very fast way, the way better than its close freeware rivals like SweetViz or Pandas Profiling","2c673538":"![sweetviz.gif](attachment:sweetviz.gif)","8a18838f":"<a id='3'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center\">3. \ud83d\udcca Pandas Profiling \ud83d\udcda<\/p>","8511c00e":"In this notebook we are going to compare the top Auto EDA libraries that really facilite the dataset analysis and visualziation!\n\nThe main idea is that you can compare time to plot and results of each AutoEda library so you can select the best for your work.","30528e4d":"<a id='4'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center\">4. \ud83d\udcca SweetViz \ud83d\udcda<\/p>","5a3d9d82":"<a id='5'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center\">5. \ud83d\udcca Lux \ud83d\udcda<\/p>","6b25a6d8":"# References\n\nThe references to the blog posts below may be helpful in your deeper delve into the universe of AutoViz\n\n* Pandas Profiling GitHub - https:\/\/github.com\/pandas-profiling\/pandas-profiling\n* Dan Roth, AutoViz: A New Tool for Automated Visualization - https:\/\/towardsdatascience.com\/autoviz-a-new-tool-for-automated-visualization-ec9c1744a6ad\n* George Vyshnya, PROs and CONs of Rapid EDA Tools - https:\/\/medium.com\/sbc-group-blog\/pros-and-cons-of-rapid-eda-tools-e1ccd159ab07\n* SweetViz - https:\/\/towardsdatascience.com\/sweetviz-automated-eda-in-python-a97e4cabacde\n* DataPrep - https:\/\/sfu-db.github.io\/dataprep\/user_guide\/eda\/plot.html","cdaf54ab":"<a id='1'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center\">1. \ud83d\udcca Dataprep \ud83d\udcda<\/p>"}}