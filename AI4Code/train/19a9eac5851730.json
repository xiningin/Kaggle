{"cell_type":{"345c2ca9":"code","bf615d4f":"code","014d6688":"code","dece0515":"code","cf8ec0d0":"code","76db60f1":"code","9daa7d5a":"code","432ebc65":"code","20b88024":"code","ff014196":"code","0dbfc93f":"code","1861a81a":"code","6b146a4e":"code","95cdf157":"code","1129776d":"code","83e5a011":"code","8ffd9941":"code","74c324da":"code","a551a135":"code","118b4620":"code","11bc02ad":"code","1a8a4877":"code","44052a7a":"code","eb6fee1d":"code","f3e3d32c":"code","d73c16ff":"code","282e28a3":"code","cc2c8845":"code","7a2fcef0":"code","189766f4":"code","a82546b6":"code","de7522b1":"code","dc25a87f":"code","0f4463be":"code","f25489ce":"code","84021784":"code","7140bddb":"code","647334bf":"code","9a4aad0a":"code","63e2df74":"code","e2f4d762":"code","38715ff6":"code","559ac94f":"code","d69c56ab":"code","f2c8481f":"code","7fd9be6b":"code","21b338e9":"code","de90c005":"code","f6812822":"code","20bbf95d":"code","2cb1984b":"code","b3312bb7":"code","e241c3a9":"code","7cbb84d2":"code","ae9d24cd":"code","fd1fec6c":"code","d33e4337":"code","adb3edfe":"code","0399f979":"code","f1ab366b":"markdown","299454a8":"markdown","aa25b701":"markdown","f3f4fa2d":"markdown","cffe4b08":"markdown","99979169":"markdown","6082b84f":"markdown","fbb90c01":"markdown","b02beec7":"markdown","06b69a6b":"markdown","d31c9bef":"markdown","18d23634":"markdown","0d336ea5":"markdown","265c7536":"markdown","eff0cf3c":"markdown","5f109096":"markdown","14354ec9":"markdown","46ca81a3":"markdown","9d9bec7f":"markdown","a9807cc7":"markdown","d8fccc86":"markdown","577c84e1":"markdown","4ad3f9a0":"markdown","6deae14f":"markdown","76b4d2f9":"markdown","cfa62c4d":"markdown","41e11f37":"markdown","6a5f3a42":"markdown","f3d5909b":"markdown","2dff9717":"markdown","4eba5253":"markdown","2cc2bbbb":"markdown","13335f13":"markdown"},"source":{"345c2ca9":"import numpy as np  # linear algebra\nimport pandas as pd  # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2 , f_classif\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import SGDRegressor\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import Ridge\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')","bf615d4f":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","014d6688":"train.head()","dece0515":"test.head()","cf8ec0d0":"print(train.shape)\nprint('-'*50)\nprint(test.shape)","76db60f1":"print('Train.describe')\ntrain.describe().T","9daa7d5a":"print('Test.describe')\ntest.describe().T","432ebc65":"data = pd.concat([train, test],axis=0,sort=False)","20b88024":"num_features=[col for col in train.columns if train[col].dtype!='O']\nnum_features","ff014196":"cat_features=[col for col in train.columns if train[col].dtype=='O']\ncat_features","0dbfc93f":"null = pd.DataFrame({'Null Values' : data.isna().sum().sort_values(ascending=False), 'Percentage Null Values' : (data.isna().sum().sort_values(ascending=False)) \/ (data.shape[0]) * (100)})\nnull","1861a81a":"null_counts = data.isna().sum().sort_values(ascending=False)\/len(data)\nplt.figure(figsize=(16,8))\nplt.xticks(np.arange(len(null_counts))+0.5,null_counts.index,rotation='vertical')\nplt.ylabel('fraction of rows with missing data')\nplt.bar(np.arange(len(null_counts)),null_counts)","6b146a4e":"data.drop([\"PoolQC\",\"MiscFeature\",\"Alley\",\"Fence\"],axis=1,inplace=True) ","95cdf157":"data = data.copy()","1129776d":"### lets create a function so that I can easily do it for all features\ndef Random_value_imputation(feature):\n    random_sample=data[feature].dropna().sample(data[feature].isnull().sum())               \n    random_sample.index=data[data[feature].isnull()].index\n    data.loc[data[feature].isnull(),feature]=random_sample","83e5a011":"for col in data:\n    Random_value_imputation(col)","8ffd9941":"null_counts = data.isna().sum().sort_values(ascending=False)\/len(data)\nplt.figure(figsize=(16,8))\nplt.xticks(np.arange(len(null_counts))+0.5,null_counts.index,rotation='vertical')\nplt.ylabel('fraction of rows with missing data')\nplt.bar(np.arange(len(null_counts)),null_counts)","74c324da":"for col in cat_features:\n    print('{} has {} values '.format(col,train[col].unique()))\n    print('\\n')","a551a135":"data.columns","118b4620":"duplicate = data.duplicated()\nprint(duplicate.sum())","11bc02ad":"co_relation=data.corr()\nco_relation","1a8a4877":"co_relation=pd.DataFrame(data.corr()[\"SalePrice\"]) \nco_relation","44052a7a":"plt.rcParams['figure.figsize'] = (30, 15)\ncorr_df = data.corr()\nsns.heatmap(corr_df,annot=True , cmap=\"YlGnBu\")","eb6fee1d":"plt.rcParams['figure.figsize'] = (50, 10)\nfor i,col in enumerate(num_features):\n    plt.subplot(2,20,i+1)\n    sns.boxplot(data[col], color = '#CD853F')","f3e3d32c":"plt.figure(figsize=(200,200))\nfor i,feature in enumerate(num_features):\n    plt.subplot(5,9,i+1 , facecolor='#ADD8E6' )\n    data[feature].hist()\n    plt.title(feature)","d73c16ff":"#scatterplot\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(data[cols], size = 2.5 , palette = 'seaborn')\nplt.show();","282e28a3":"plt.rcParams['figure.figsize'] = (30, 15)\nsns.catplot(x = data['SalePrice'] ,data = data.sort_values('SalePrice',ascending=False),kind='swarm' , color = 'g')","cc2c8845":"sd1 = np.sort(data['SalePrice'])\ncdf = np.linspace(1\/data['SalePrice'].size, 1, data['SalePrice'].size)\n\nplt.plot(sd1, cdf, label=\"SalePrice CDF\"  )\nplt.hist(data['SalePrice'], histtype=\"step\", density=True, alpha=0.3 )\nplt.legend();","7a2fcef0":"# Defining violin and scatter plot & kde_plot functions\u00b6\n\ndef violin(col):\n    plt.rcParams['figure.figsize'] = (10, 8)\n    fig = px.violin(data, y=col, box = True , color='#D2691E',)\n    return fig.show()\n\ndef scatters(col1,col2):\n    plt.rcParams['figure.figsize'] = (10, 8)\n    fig = px.scatter(data, x=col1, y=col2 )\n    return fig.show()\n\ndef make_kdeplot(feature) : \n    plt.rcParams['figure.figsize'] = (10, 8)\n    sns.kdeplot(data[feature], shade=True)","189766f4":"px.violin(data,y='YearBuilt')","a82546b6":"make_kdeplot('SalePrice')","de7522b1":"make_kdeplot('YearBuilt')","dc25a87f":"make_kdeplot('TotalBsmtSF')","0f4463be":"make_kdeplot('GrLivArea')","f25489ce":"px.violin(data,y='SalePrice')","84021784":"px.violin(data,y='FullBath')","7140bddb":"px.violin(data,y='BedroomAbvGr')","647334bf":"px.violin(data,y='KitchenAbvGr')   ","9a4aad0a":"px.violin(data,y='TotRmsAbvGrd')","63e2df74":"scatters('TotalBsmtSF','SalePrice') ","e2f4d762":"scatters('EnclosedPorch','SalePrice') ","38715ff6":"scatters('OpenPorchSF','SalePrice') ","559ac94f":"scatters('WoodDeckSF','SalePrice')","d69c56ab":"data = pd.get_dummies(data)","f2c8481f":"data.head()","7fd9be6b":"y=data['SalePrice']\nX=data.drop('SalePrice',axis=1)\ncols=X.columns\ncols","21b338e9":"#Splitting data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=44, shuffle =True)","de90c005":"#Splitted Data\nprint('X_train shape is ' , X_train.shape)\nprint('X_test shape is ' , X_test.shape)\nprint('y_train shape is ' , y_train.shape)\nprint('y_test shape is ' , y_test.shape)","f6812822":"print('Original X Shape is ' , X.shape)","20bbf95d":"FeatureSelection = SelectKBest(score_func= chi2 ,k=40) # score_func can = f_classif \nX = FeatureSelection.fit_transform(X, y)","2cb1984b":"#showing X Dimension \nprint('X Shape is ' , X.shape)\nprint('Selected Features are : ' , FeatureSelection.get_support())","b3312bb7":"def predict(ml_model):          \n    model=ml_model.fit(X_train,y_train)\n    print('Training score : {}'.format(model.score(X_train,y_train)))\n    y_prediction=model.predict(X_test)\n    print('predictions are: \\n {}'.format(y_prediction[:10]))\n    print('\\n')\n    r2_score=metrics.r2_score(y_test,y_prediction)\n    print('r2 score: {}'.format(r2_score))\n    print('MAE:',metrics.mean_absolute_error(y_test,y_prediction))\n    print('MSE:',metrics.mean_squared_error(y_test,y_prediction))\n    print('RMSE:',np.sqrt(metrics.mean_squared_error(y_test,y_prediction)))\n    sns.distplot(y_test-y_prediction)","e241c3a9":"predict(RandomForestRegressor(ccp_alpha=0.1,n_estimators=50, max_depth = 70))","7cbb84d2":"predict(GradientBoostingRegressor(alpha=.9 , n_estimators=12,learning_rate=0.5, max_depth=12))","ae9d24cd":"predict(LinearRegression())","fd1fec6c":"predict(Lasso(max_iter=20,alpha=2))","d33e4337":"predict(Ridge(solver='auto',alpha=0.5,  max_iter=12))","adb3edfe":"predict(KNeighborsRegressor(n_neighbors=3,\n   \n    weights='distance',\n    algorithm='ball_tree',\n    leaf_size=40,\n    p=4,\n    metric='minkowski',\n    metric_params=None,\n    n_jobs=None,))","0399f979":"predict(DecisionTreeRegressor(max_depth=25,random_state=33))","f1ab366b":"* Analysing Distributions of data","299454a8":"<a id = '11.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Random Forest Algorithm<\/strong><\/p>","aa25b701":"* Total unique categories in our categorical features to check if any dirtiness in data or not","f3f4fa2d":"####    Link            https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/data\n\n###   description of each column\n* SalePrice - the property's sale price in dollars. This is the target variable that you're trying to * * predict.\n* MSSubClass: The building class\n* MSZoning: The general zoning classification\n* LotFrontage: Linear feet of street connected to property\n* LotArea: Lot size in square feet\n* Street: Type of road access\n* Alley: Type of alley access\n* LotShape: General shape of property\n* LandContour: Flatness of the property\n* Utilities: Type of utilities available\n* LotConfig: Lot configuration\n* LandSlope: Slope of property\n* Neighborhood: Physical locations within Ames city limits\n* Condition1: Proximity to main road or railroad\n* Condition2: Proximity to main road or railroad (if a second is present)\n* BldgType: Type of dwelling\n* HouseStyle: Style of dwelling\n* OverallQual: Overall material and finish quality\n* OverallCond: Overall condition rating\n* YearBuilt: Original construction date\n* YearRemodAdd: Remodel date\n* RoofStyle: Type of roof\n* RoofMatl: Roof material\n* Exterior1st: Exterior covering on house\n* Exterior2nd: Exterior covering on house (if more than one material)\n* MasVnrType: Masonry veneer type\n* MasVnrArea: Masonry veneer area in square feet\n* ExterQual: Exterior material quality\n* ExterCond: Present condition of the material on the exterior\n* Foundation: Type of foundation\n* BsmtQual: Height of the basement\n* BsmtCond: General condition of the basement\n* BsmtExposure: Walkout or garden level basement walls\n* BsmtFinType1: Quality of basement finished area\n* BsmtFinSF1: Type 1 finished square feet\n* BsmtFinType2: Quality of second finished area (if present)\n* BsmtFinSF2: Type 2 finished square feet\n* BsmtUnfSF: Unfinished square feet of basement area\n* TotalBsmtSF: Total square feet of basement area\n* Heating: Type of heating\n* HeatingQC: Heating quality and condition\n* CentralAir: Central air conditioning\n* Electrical: Electrical system\n* 1stFlrSF: First Floor square feet\n* 2ndFlrSF: Second floor square feet\n* LowQualFinSF: Low quality finished square feet (all floors)\n* GrLivArea: Above grade (ground) living area square feet\n* BsmtFullBath: Basement full bathrooms\n* BsmtHalfBath: Basement half bathrooms\n* FullBath: Full bathrooms above grade\n* HalfBath: Half baths above grade\n* Bedroom: Number of bedrooms above basement level\n* Kitchen: Number of kitchens\n* KitchenQual: Kitchen quality\n* TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n* Functional: Home functionality rating\n* Fireplaces: Number of fireplaces\n* FireplaceQu: Fireplace quality\n* GarageType: Garage location\n* GarageYrBlt: Year garage was built\n* GarageFinish: Interior finish of the garage\n* GarageCars: Size of garage in car capacity\n* GarageArea: Size of garage in square feet\n* GarageQual: Garage quality\n* GarageCond: Garage condition\n* PavedDrive: Paved driveway\n* WoodDeckSF: Wood deck area in square feet\n* OpenPorchSF: Open porch area in square feet\n* EnclosedPorch: Enclosed porch area in square feet\n* 3SsnPorch: Three season porch area in square feet\n* ScreenPorch: Screen porch area in square feet\n* PoolArea: Pool area in square feet\n* PoolQC: Pool quality\n* Fence: Fence quality\n* MiscFeature: Miscellaneous feature not covered in other categories\n* MiscVal: $Value of miscellaneous feature\n* MoSold: Month Sold\n* YrSold: Year Sold\n* SaleType: Type of sale\n* SaleCondition: Condition of sale\n","cffe4b08":"<a id = '3.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Importing dataset <\/strong><\/p>","99979169":"<a id = '13.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Linear Regression Algorithm<\/strong><\/p> ","6082b84f":"<a id = '11.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>convert categorical variable into dummy<\/strong><\/p>","fbb90c01":"<img src=\"https:\/\/pangeamortgages.com\/wp-content\/uploads\/2020\/12\/What-Makes-House-Prices-Go-Up-Or-Down1.png\" alt=\"What Makes House Prices Go Up Or Down? - Pangea Mortgages\" jsname=\"HiaYvf\" jsaction=\"load:XAeZkd;\" class=\"n3VNCb\" data-noaft=\"1\" style=\"margin-left: 5%; float: center;  border:5px solid ; width:90%; height : 100%;\">","b02beec7":" <a id = '8.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>check co-relation in data<\/strong><\/p>","06b69a6b":"<a id = '0.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Table of Contents<\/strong><\/p> \n\n* [Info about data](#1.0)\n* [Importing libraries](#2.0)\n* [Importing dataset](#3.0)\n* [Preparing data for Analysis & Modelling](#4.0)\n* [Extract Numerical & Categorical Features](#5.0)\n* [Checking for null values](#6.0)\n* [delete data duplicated](#7.0)\n* [check co-relation in data](#8.0)\n* [Exploratory Data Analysis (EDA)](#9.0)\n* [Separate dependent & independent features](#10.0)\n* [convert categorical variable into dummy](#11.0)\n* [Feature Selection by KBest](#12.0)\n\n* [Defining function For ML models](#13.0)\n    * [Random Forest Algorithm](#11.0)\n    * [Gradient Boosting](#12.0)\n    * [Linear Regression Algorithm](#13.0)\n    * [Lasso Algorithm](#15.0)\n    * [Ridge Algorithm](#16.0)\n    * [K-Neighbors Algorithm](#17.0)\n    * [Decision Tree Algorithm](#18.0)\n","d31c9bef":"* Empirical Cumulative Distribution Functions for `SalePrice`","18d23634":"<a id = '18.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Decision Tree Algorithm<\/strong><\/p>","0d336ea5":"<a id = '12.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Gradient Boosting<\/strong><\/p> \n","265c7536":"<a id = '2.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Importing libraries<\/strong><\/p>","eff0cf3c":"<a id = '13.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Defining function For ML models<\/strong><\/p>","5f109096":"<p style = \"font-size : 42px; color : \t#D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>EDA & prediction House price<\/strong><\/p>","14354ec9":" <a id = '5.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Extract Numerical & Categorical Features<\/strong><\/p>","46ca81a3":"<a id = '7.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>delete data duplicated<\/strong><\/p>","9d9bec7f":"<a id = '9.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Exploratory Data Analysis (EDA)<\/strong><\/p>","a9807cc7":" <a id = '6.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Checking for null values<\/strong><\/p> ","d8fccc86":"<a id = '17.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>K-Neighbors Algorithm<\/strong><\/p> ","577c84e1":"* The described method will help to see how data has been spread for numerical values.\n* We can clearly see the minimum value, mean values, different percentile values, and maximum values.","4ad3f9a0":"* I Clean missing values using Random Value Imputation Because This the best way to To maintain distrbuation For each feature.","6deae14f":"<a id = '12.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Feature Selection by KBest<\/strong><\/p>","76b4d2f9":"<a id = '15.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Lasso Algorithm<\/strong><\/p>","cfa62c4d":"* I will build an important functions that we'll need , to know the relationship & the correlations between features & each other ","41e11f37":"<a id = '16.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Ridge Algorithm<\/strong><\/p> ","6a5f3a42":"<a id = '4.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Preparing data for Analysis & Modelling<\/strong><\/p>","f3d5909b":"##  <p style=\"background-color:#BCDBF9;color:black;font-size:19px;text-align:center;border-radius:12px 10px;border:2px solid blue;\">My Github\ud83d\udc68\u200d\ud83d\udcbb<\/p>\n\n<a href = \"https:\/\/github.com\/AhmedMMahrous\"><img src=\"https:\/\/raw.githubusercontent.com\/Potential17\/Potential17\/master\/github-logo-octocat-.gif\" alt=\"alihrhera (Ali Tarek Hrhera) \u00b7 GitHub\" jsname=\"HiaYvf\" jsaction=\"load:XAeZkd;\" class=\"n3VNCb\"  style=\"margin-left: 40%;  border:5px solid ; width:20%; height : 20%;\"><\/a>","2dff9717":"<a id = '10.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Separate dependent & independent features<\/strong><\/p>","4eba5253":"* Threre is no data duplicated","2cc2bbbb":"<a id = '1.0'><\/a>\n<p style = \"font-size : 42px; color : \t#D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Info about data<\/strong><\/p> ","13335f13":"* I will drop [`PoolQC`, `MiscFeature`, `Alley`, `Fence`] column because it has above 90% of missing values\u00b6"}}