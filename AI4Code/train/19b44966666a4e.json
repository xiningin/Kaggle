{"cell_type":{"714158f8":"code","811c5274":"code","a58121e4":"code","e272bded":"code","983c2fae":"code","b78b4119":"code","bfff0417":"code","162a27da":"code","53a33f3b":"code","97dc142d":"code","1adbb6ea":"code","bfcb848f":"code","115df406":"code","ce9cef48":"code","8d25ec41":"code","0b493f55":"code","d40ec572":"code","f4eac3d9":"code","414f942f":"code","aa7eea15":"markdown","132a6b16":"markdown","d692730a":"markdown","31cc6886":"markdown","98447381":"markdown","b9caa39c":"markdown","0cfb098c":"markdown","627155f3":"markdown","ca10bf84":"markdown","2f24e1a1":"markdown","d9c6784f":"markdown","43e43f6c":"markdown","22ef9dae":"markdown"},"source":{"714158f8":"import pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv('..\/input\/creditcard.csv')\ndf.head()","811c5274":"df.dtypes","a58121e4":"df.describe()","e272bded":"df.isnull().sum()","983c2fae":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ncorr = df.corrwith(df['Class']).reset_index()\ncorr.columns = ['Index','Correlations']\ncorr = corr.set_index('Index')\ncorr = corr.sort_values(by=['Correlations'], ascending = False)\nplt.figure(figsize=(4,15))\nfig = sns.heatmap(corr, annot=True, fmt=\"g\", cmap='YlGnBu')\nplt.title(\"Correlation of Variables with Class\")\nplt.show()","b78b4119":"plt.figure(figsize=(15,4))\nfig = sns.distplot(df['Time'], kde=False, color=\"green\")\nplt.show()","bfff0417":"plt.figure(figsize=(8,4))\nfig = sns.violinplot(x=df[\"Amount\"], color=\"lightblue\")\nplt.show()","162a27da":"plt.figure(figsize=(8,4))\nfig = plt.scatter(x=df[df['Class'] == 1]['Time'], y=df[df['Class'] == 1]['Amount'], color=\"c\")\nplt.title(\"Time vs Transaction Amount in Fraud Cases\")\nplt.show()","53a33f3b":"plt.figure(figsize=(8,4))\nfig = plt.scatter(x=df[df['Class'] == 0]['Time'], y=df[df['Class'] == 0]['Amount'], color=\"dodgerblue\")\nplt.title(\"Time vs Transaction Amount in Legit Cases\")\nplt.show()","97dc142d":"df.hist(figsize=(20,20), color = \"salmon\")\nplt.show()","1adbb6ea":"plt.figure(figsize=(7,5))\nfig = sns.countplot(x=\"Class\", data=df)\nplt.show()","bfcb848f":"from sklearn.ensemble import IsolationForest\nfrom sklearn.model_selection import train_test_split","115df406":"inliers = df[df.Class==0]\ninliers = inliers.drop(['Class'], axis=1)\noutliers = df[df.Class==1]\noutliers = outliers.drop(['Class'], axis=1)\ninliers_train, inliers_test = train_test_split(inliers, test_size=0.30, random_state=42)","ce9cef48":"inliers_train.head()","8d25ec41":"inliers_test.head()","0b493f55":"model = IsolationForest()\nmodel.fit(inliers_train)\ninlier_pred_test = model.predict(inliers_test)\noutlier_pred = model.predict(outliers)","d40ec572":"print(\"Accuracy in Detecting Legit Cases:\", list(inlier_pred_test).count(1)\/inlier_pred_test.shape[0])\nprint(\"Accuracy in Detecting Fraud Cases:\", list(outlier_pred).count(-1)\/outlier_pred.shape[0])","f4eac3d9":"from sklearn.neighbors import LocalOutlierFactor\n\nmodel = LocalOutlierFactor(novelty=True)\nmodel.fit(inliers_train)\ninlier_pred_test = model.predict(inliers_test)\noutlier_pred = model.predict(outliers)","414f942f":"print(\"Accuracy in Detecting Legit Cases:\", list(inlier_pred_test).count(1)\/inlier_pred_test.shape[0])\nprint(\"Accuracy in Detecting Fraud Cases:\", list(outlier_pred).count(-1)\/outlier_pred.shape[0])","aa7eea15":"Finding correlation of different variables with the target variable","132a6b16":"**Please UPVOTE this kernel if you like it**","d692730a":"Now lets check for null values","31cc6886":"Distribution of Amount","98447381":"Lets check the datatypes of all the columns and see if there are any discrepancies","b9caa39c":"**Please UPVOTE this kernel if it helps**","0cfb098c":"Lets us load the dataset","627155f3":"Let us try plotting the amount and time and see if we can differentiate the fraud cases using just these two","ca10bf84":"Now let us separate the legit and fraud cases so we can train the Isolation Forest using the legit cases","2f24e1a1":"Distribution of Class","d9c6784f":"Simple Description of all the columns","43e43f6c":"Distribution of the Time Variable","22ef9dae":"As we can see clearly Isolation Forest performs much better than LocalOutlierFactor"}}