{"cell_type":{"4b0ad756":"code","047fc24b":"code","3b1e160d":"code","5d1450a5":"code","243ec2e8":"code","733301b2":"code","78555d9e":"code","9f3b62df":"code","f02f8d49":"code","19111441":"code","162ca592":"code","9b4b5ece":"code","8e4574d5":"code","4935f6ca":"code","c9fc65e7":"code","9b2faa06":"code","f6217a41":"code","563d8f4c":"code","f8b1748f":"code","6a79bb2d":"code","3c6dbb0c":"code","6a59a09c":"code","3ec6d239":"code","22d1b425":"code","4c8406bf":"code","d00472d5":"code","b78fb11d":"code","0d12f4f4":"code","25af5f20":"code","3774d9c9":"code","3a36e068":"code","bc71b3fb":"code","771685a6":"code","1ddcc958":"code","9daa4731":"code","38965fbd":"code","7bdb4d3d":"code","2dfa97d8":"code","01ef3383":"markdown","2e2c404d":"markdown"},"source":{"4b0ad756":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","047fc24b":"from sklearn.model_selection import  train_test_split,RepeatedStratifiedKFold,cross_val_score","3b1e160d":"trained = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')               # importing datasets\ntrained.head()     ","5d1450a5":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","243ec2e8":"trained.shape","733301b2":"test.shape","78555d9e":"trained.describe().T","9f3b62df":"test.describe().T","f02f8d49":"trained.info()","19111441":"test.info()","162ca592":"trained.isnull().sum()","9b4b5ece":"test.isnull().sum()","8e4574d5":"trained.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)","4935f6ca":"test.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)","c9fc65e7":"trained.head(10)","9b2faa06":"test.head(10)","f6217a41":"trained.isnull().sum()   ","563d8f4c":"test.isnull().sum()   ","f8b1748f":"# filling the null values with its mean\ntrained['Age'].fillna(trained['Age'].mean(),inplace=True)\ntrained['Age']","6a79bb2d":"# filling the null values with its mean\ntest['Age'].fillna(trained['Age'].mean(),inplace=True)\ntest['Age']","3c6dbb0c":"trained.isnull().sum()","6a59a09c":"trained['Embarked'].replace('nan',np.nan,inplace=True)\ntrained['Embarked'].fillna(trained['Embarked'].mode()[0],inplace=True)","3ec6d239":"trained.isnull().sum()","22d1b425":"test['Embarked'].replace('nan',np.nan,inplace=True)\ntest['Embarked'].fillna(test['Embarked'].mode()[0],inplace=True)","4c8406bf":"trained.head()","d00472d5":"trained['Sex']=trained['Sex'].map({'male':0,'female':1})\n\ntrained['Sex']","b78fb11d":"test['Sex']=test['Sex'].map({'male':0,'female':1})\n\ntest['Sex']","0d12f4f4":"trained['Embarked']=trained['Embarked'].map({'S':0,'C':1,'Q':2})\n\ntest['Embarked']=test['Embarked'].map({'S':0,'C':1,'Q':2})","25af5f20":"trained.head()","3774d9c9":"trained.isnull().any()","3a36e068":"test['Fare'].replace(('nan',np.nan),inplace=True)\ntest['Fare'].fillna(test['Fare'].mean(),inplace=True)","bc71b3fb":"test.isnull().any()","771685a6":"trained['Embarked'].unique()","1ddcc958":"x=trained.drop(['Survived'],axis=1)\n\ny=trained['Survived']","9daa4731":"from sklearn.model_selection import train_test_split \nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25,random_state=0)","38965fbd":"#appling KNN model for k=1\nfrom sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()\n\nknn.fit(x_train, y_train)\n\npred = knn.predict(x_test)","7bdb4d3d":"#accuracy,confusion matrix and classification report\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\nprint(\"accuracy score for trained data\",accuracy_score(y_train,knn.predict(x_train)))\nprint(\"accuracy score is\",accuracy_score(y_test,pred))\n\nprint(\"Confusion matrix\",confusion_matrix(y_test,pred))\n\nprint(\"Report\",classification_report(y_test,pred))","2dfa97d8":"prediction = pd.DataFrame(pred)\nsubs_d = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubs_d['Survived'] = prediction\nsubs_d.to_csv('Submissionsd1.csv', index = False)","01ef3383":"Converting categorical data to numerical.","2e2c404d":"predict (Survived)"}}