{"cell_type":{"2679cb4b":"code","7c833695":"code","f26520b4":"code","ff0cb086":"code","aacd3294":"code","8073ba2c":"code","2bd826fa":"code","0a000061":"code","1eaf57c8":"code","8c99f977":"code","c6c7c719":"code","704028a0":"code","62c2e13d":"code","ab70e5c8":"code","61a94b67":"code","abc35e5f":"code","f4c104f9":"code","8c909c56":"code","7dea6937":"code","e237bfb8":"code","9c95b87f":"code","6032f17b":"code","3652163b":"code","318a8568":"code","3a32b314":"code","8ed055da":"code","98e87853":"code","3ab133e2":"code","6eb46413":"code","2423e9e5":"code","57841551":"code","a357791e":"code","6b8ae750":"code","15ee4168":"code","327f6b89":"code","3f2445f1":"code","6e521efd":"code","61f0de25":"code","3d25e56b":"code","e34b1ee9":"code","2ad9980a":"code","0ffdd9fe":"code","a4c55d55":"code","db86aac9":"code","050c457c":"code","386645b0":"code","fd8773df":"code","a501635e":"code","6e224c82":"code","14c9f011":"code","e98d17e3":"code","307b9d16":"code","1aa8f57e":"code","ca33fab4":"code","5afdc807":"code","00b8e52c":"code","fe47c327":"code","590c117f":"markdown","1a9b7c9d":"markdown","0f19d252":"markdown","b4f5dd7d":"markdown","ea09b9b9":"markdown","7aec924b":"markdown","9158190b":"markdown","e3496655":"markdown","c25857fd":"markdown","b05aab61":"markdown","828bb13e":"markdown","66141b6e":"markdown","42041832":"markdown","8b7b1658":"markdown","675d3f8a":"markdown","60c046c1":"markdown","260f2c48":"markdown","aba6ebda":"markdown","e9f9c699":"markdown","b07b4940":"markdown"},"source":{"2679cb4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7c833695":"\nimport numpy as np\nimport pandas as pd \n\n\ndf = pd.read_csv('..\/input\/xAPI-Edu-Data.csv')\n\ndf.head(30)","f26520b4":"print(df.shape)\ndf.isnull().sum()","ff0cb086":"import seaborn as sns\nimport matplotlib.pyplot as plt","aacd3294":"df","8073ba2c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n#breakdown by class\nsns.countplot(x=\"Topic\", data=df, palette=\"muted\");\nplt.show()","2bd826fa":"df['Failed'] = np.where(df['Class']=='L',1,0)\nsns.factorplot('Topic','Failed',data=df,size=9)","0a000061":"pd.crosstab(df['Class'],df['Topic'])","1eaf57c8":"sns.countplot(x='Class',data=df,palette='PuBu')\nplt.show()\ndf.Class.value_counts()","8c99f977":"sns.countplot(x='ParentschoolSatisfaction',data = df, hue='Class',palette='bright')\nplt.show()","c6c7c719":"sns.factorplot('Relation','Failed',data=df)","704028a0":"from scipy.stats import ttest_ind\nt, p = ttest_ind(df[df.Relation == \"Father\"].Failed, df[df.Relation == \"Mum\"].Failed)","62c2e13d":"print(\"t\u5024,p\u5024\")\nprint(t,p)","ab70e5c8":"sns.factorplot(\"gender\",\"Failed\",data=df)","61a94b67":"t, p = ttest_ind(df[df.gender == \"M\"].Failed, df[df.gender == \"F\"].Failed)\nprint(\"t\u5024,p\u5024\")\nprint(t,p)","abc35e5f":"Raised_hand = sns.boxplot(x=\"Class\", y=\"raisedhands\", data=df)\nRaised_hand = sns.swarmplot(x=\"Class\", y=\"raisedhands\", data=df, color=\".15\")\nplt.show()","f4c104f9":"ax = sns.boxplot(x=\"Class\", y=\"Discussion\", data=df)\nax = sns.swarmplot(x=\"Class\", y=\"Discussion\", data=df, color=\".25\")\nplt.show()","8c909c56":"Vis_res = sns.boxplot(x=\"Class\", y=\"VisITedResources\", data=df)\nVis_res = sns.swarmplot(x=\"Class\", y=\"VisITedResources\", data=df, color=\".25\")\nplt.show()","7dea6937":"Anounce_bp = sns.boxplot(x=\"Class\", y=\"AnnouncementsView\", data=df)\nAnounce_bp = sns.swarmplot(x=\"Class\", y=\"AnnouncementsView\", data=df, color=\".25\")\nplt.show() ","e237bfb8":"sns.pairplot(df.drop('Failed',axis=1),hue='Class')","9c95b87f":"Facetgrid = sns.FacetGrid(df,hue='Failed',size=6)\nFacetgrid.map(sns.kdeplot,'raisedhands',shade=True)\nFacetgrid.set(xlim=(0,df['raisedhands'].max()))\nFacetgrid.add_legend()","6032f17b":"Facetgrid = sns.FacetGrid(df,hue='Failed',size=7)\nFacetgrid.map(sns.kdeplot,'Discussion',shade=True)\nFacetgrid.set(xlim=(0,df['Discussion'].max()))\nplt.show()","3652163b":"Facetgrid = sns.FacetGrid(df,hue='Failed',size=7)\nFacetgrid.map(sns.kdeplot,'VisITedResources',shade=True)\nFacetgrid.set(xlim=(0,df['VisITedResources'].max()))\nplt.show()","318a8568":"df2 = df.loc[:,[\"raisedhands\",\"VisITedResources\",\"AnnouncementsView\",\"Discussion\"]]","3a32b314":"feature_names = [\"raisedhands\",\"VisITedResources\",\"AnnouncementsView\",\"Discussion\"]","8ed055da":"correlation_matrix = np.corrcoef(df2.transpose())","98e87853":"sns.heatmap(correlation_matrix, annot=True,xticklabels=feature_names,yticklabels=feature_names)\n","3ab133e2":"df.groupby('Topic').median()","6eb46413":"df['AbsBoolean'] = df['StudentAbsenceDays']\ndf['AbsBoolean'] = np.where(df['AbsBoolean'] == 'Under-7',0,1)\ndf['AbsBoolean'].groupby(df['Topic']).mean()","2423e9e5":"df['TotalQ'] = df['Class']\ndf['TotalQ'].loc[df.TotalQ == 'L'] = 0.0\ndf['TotalQ'].loc[df.TotalQ == 'M'] = 1.0\ndf['TotalQ'].loc[df.TotalQ == 'H'] = 2.0\n\n\n\n\ny = np.array(df['TotalQ'])\n","57841551":"df.columns","a357791e":"categorical_features = ['gender', 'NationalITy', 'PlaceofBirth', 'StageID', 'GradeID',\n       'SectionID', 'Topic', 'Semester', 'Relation','ParentAnsweringSurvey', 'ParentschoolSatisfaction',\n       'StudentAbsenceDays']","6b8ae750":"categorical_features","15ee4168":" X = pd.get_dummies(df.iloc[:,0:16],columns=categorical_features)","327f6b89":"X","3f2445f1":"from sklearn.cluster import KMeans\ny_pred = pd.DataFrame()\nfor i in range(5):\n    kmeans = KMeans(n_clusters = i+2)\n    kmeans.fit(X)\n    y_pred[\"cluster_\"+str(i)] = kmeans.predict(X)","6e521efd":"# \u30ef\u30f3\u30db\u30c3\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u305f\u3081\u306b\u30ab\u30c6\u30b4\u30ea\u30fc\u5316\u3059\u308b\na =y_pred.astype(str)\na.dtypes","61f0de25":"clustering = pd.get_dummies(a)","3d25e56b":"clustering","e34b1ee9":"X_train = pd.concat([X,clustering],axis=1)","2ad9980a":"X_train = pd.concat([X_train,y_pred.iloc[:,4]],axis=1)","0ffdd9fe":"X_train['cluster_4'].astype(str)","a4c55d55":"sns.pairplot(X_train.loc[:,[\"raisedhands\",\"VisITedResources\",\"AnnouncementsView\",\"Discussion\",\"cluster_4\"]],hue='cluster_4')","db86aac9":"from sklearn.cross_validation import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\n\nX_train, X_test, y_train, y_test = train_test_split(\n         X_train.drop('cluster_4',axis=1), y, test_size=0.3, random_state=0)\n\n\n","050c457c":"from sklearn.svm import SVC\n\nsvm = SVC(kernel='linear', C=2.0, random_state=0)\nsvm.fit(X_train, y_train)\n\ny_pred = svm.predict(X_test)\nprint('Misclassified samples: %d' % (y_test != y_pred).sum())","386645b0":"from sklearn.metrics import accuracy_score\nprint('Accuracy: %.2f' % accuracy_score(y_test, y_pred))","fd8773df":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","a501635e":"from sklearn.ensemble import RandomForestClassifier\nrnd_clf = RandomForestClassifier(n_estimators=500,max_leaf_nodes=20,random_state=990)\nrnd_clf.fit(X_train,y_train)\ny_pred = rnd_clf.predict(X_test)\nprint('Misclassified samples: %d' % (y_test != y_pred).sum())","6e224c82":"from sklearn.metrics import accuracy_score\nprint('Accuracy: %.2f' % accuracy_score(y_test, y_pred))","14c9f011":"print(classification_report(y_test, y_pred))","e98d17e3":" np.sort(rnd_clf.feature_importances_[:92])[::-1]","307b9d16":"rnd_clf.n_features_","1aa8f57e":"random_forest_feature = pd.DataFrame({\"feature\":X_train.columns,\"importance\":rnd_clf.feature_importances_})","ca33fab4":"random_forest_feature=random_forest_feature.sort_values(by = \"importance\",ascending=False)[:20]","5afdc807":"random_forest_feature","00b8e52c":"random_forest_feature.loc[:,'importance'][::-1]","fe47c327":"n_features = 20\nplt.barh(range(20),random_forest_feature.loc[:,'importance'][::-1], align='center')\nplt.yticks(np.arange(n_features),random_forest_feature.loc[:,'feature'][::-1])\nplt.xlabel(\"Feature importance\")\nplt.ylabel(\"Feature\")\nplt.ylim(-1, n_features)","590c117f":"\u9069\u5408\u7387\u3082\u518d\u73fe\u7387\u3082F1\u5024\u3082\u307b\u3068\u3093\u3069\u540c\u3058\u304f\u3089\u3044\u306e\u5024\u306b\u306a\u3063\u305f\u3002\n\n\u6b21\u306b\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306b\u3088\u308a\u91cd\u8981\u306a\u7279\u5fb4\u91cf\u3092\u898b\u3066\u3044\u304f\u3002","1a9b7c9d":"\u307e\u305f\u3001\u4e09\u3064\u306e\u5206\u5e03\u3092\u307f\u308b\u3068\u6210\u7e3e\u304c\u826f\u3044\u751f\u5f92\u306b\u306f\u3063\u304d\u308a\u3057\u305f\u7279\u9577\u306f\u5c11\u306a\u3044\u304c\u3001\u6210\u7e3e\u304c\u60aa\u3044\u751f\u5f92\u306b\u306f\u660e\u78ba\u306b\u7279\u5fb4\u304c\u3042\u308a\u305d\u3046\u3067\u3042\u308b\u3002","0f19d252":"\u660e\u3089\u304b\u306b\u30af\u30e9\u30b9\u3054\u3068\u306b\u5206\u5e03\u304c\u9055\u3046\u3088\u3046\u3067\u3042\u308b\u3002","b4f5dd7d":"\u6bcd\u89aa\u304c\u5b50\u4f9b\u306e\u8cac\u4efb\u3092\u3068\u308b\u5834\u5408\u306e\u307b\u3046\u304cLow\u30af\u30e9\u30b9\u3068\u306a\u3063\u3066\u3044\u308b\u751f\u5f92\u306e\u6570\u304c\u5c11\u306a\u3044\u3088\u3046\u3067\u3042\u308b\u3002\n\u7d71\u8a08\u7684\u691c\u5b9a\u3067\u3053\u306e\u5dee\u3092\u78ba\u8a8d\u3057\u3066\u3044\u304f\u3002","ea09b9b9":"\uff14\u9805\u9593\u306e\u30da\u30a2\u30d7\u30ed\u30c3\u30c8\u3092\u898b\u308b\u3068\u3001\u3084\u306f\u308a\u3001\u30af\u30e9\u30b9\u3054\u3068\u306b\u7279\u5fb4\u304c\u3042\u308b\u3088\u3046\u3060\u3002","7aec924b":"\u6027\u5225\u306b\u95a2\u3057\u3066\u8a00\u3048\u3070\u7537\u6027\u306e\u307b\u3046\u304clow\u30af\u30e9\u30b9\u751f\u5f92\u304c\u591a\u3044\u3044\u7528\u3067\u3042\u308b\u3002","9158190b":"\u5341\u5206p\u5024\u306f\u5c0f\u3055\u305d\u3046\u3067\u3042\u308b\u3002","e3496655":"\u30c7\u30fc\u30bf\u306f\uff14\uff18\uff10\u884c\u306a\u306e\u3067\u3060\u3044\u3076\u5c0f\u3055\u3044\u3002\u6b20\u640d\u5024\u306f\u306a\u3057\u3002","c25857fd":"**\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30de\u30b7\u30f3\u3000\u7dda\u5f62SVC\u3000**","b05aab61":"\u8a13\u7df4\u30bb\u30c3\u30c8\u3068\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u5206\u3051\u308b\u3002","828bb13e":"1. low\u30af\u30e9\u30b9\u306e\u591a\u3044IT\u3084Math\u3067\u8cc7\u6599\u3092\u898b\u3066\u3044\u308b\u56de\u6570\u304c\u5c11\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n1. \u3069\u3046\u3044\u3046\u308f\u3051\u304b\u3001\u8cc7\u6599\u3092\u8aad\u3080\u56de\u6570\u304c\u591a\u3044\u306b\u3082\u304b\u304b\u308f\u3089\u305aChemistry\u306flow\u30af\u30e9\u30b9\u306e\u751f\u5f92\u304c\u591a\u3044\u3002\n1. Spanish\u3001French\u3068\u3044\u3063\u305f\u8a9e\u5b66\u79d1\u76ee\u306fdiscussion\u304c\u4f4e\u3044\u304c\u79d1\u76ee\u306e\u7279\u6027\u4e0a\u3001\u8b70\u8ad6\u304c\u96e3\u3057\u3044\u306e\u3060\u308d\u3046\u3002Failed==0\u306e\u78ba\u7387\u5206\u5e03\u304c\u4e8c\u3064\u306e\u5c71\u3092\u6301\u3064\u7406\u7531\u3068\u601d\u308f\u308c\u308b\u3002","66141b6e":"1. Geology\u306e\u751f\u5f92\u306f\u6b20\u5e2d\u304c\u5c11\u306a\u3044\u3002Chemistry\u306e\u751f\u5f92\u306f\u6b20\u5e2d\u304c\u591a\u3044\u3002","42041832":"k-means\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3092\u4f5c\u3063\u3066\u3044\u304f\u3002","8b7b1658":"IT\u3084\u5316\u5b66\u3067Low\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u751f\u5f92\u304c\u591a\u304f\u3001\u5730\u8cea\u5b66\u306e\u6388\u696d\u3067\u306f\u4e00\u4eba\u3082\u3044\u306a\u3044\u3002","675d3f8a":"\u4e00\u5fdc\u3059\u3079\u3066\u306b\u6b63\u306e\u76f8\u95a2\u304c\u3042\u3063\u305f\u3051\u3069\u3001\u624b\u3092\u4e0a\u3052\u308b\u3053\u3068\u3068\u3001\u8cc7\u6599\u3092\u898b\u308b\u3053\u3068\u306e\u76f8\u95a2\u304c\u5927\u304d\u3044\u3002\n\u8cc7\u6599\u3092\u307f\u3066\u6388\u696d\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u304b\u3089\u624b\u3092\u4e0a\u3052\u3089\u308c\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002","60c046c1":"\u6388\u696d\u306e\u8cc7\u6599\u3092\u307f\u308b\u751f\u5f92\u304c\u30ec\u30d9\u30eb\u306e\u9ad8\u3044\u30af\u30e9\u30b9\u306e\u751f\u5f92\u3067\u3042\u308b\u3088\u3046\u3060\u3002\n","260f2c48":"**\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316**\n\u751f\u5f92\u306e\u30af\u30e9\u30b9\u3068\u305d\u306e\u4ed6\u306e\u7279\u5fb4\u91cf\u306e\u95a2\u4fc2\u3092\u898b\u3066\u3044\u304f\u3002","aba6ebda":"\u7d50\u5c40\u306e\u3068\u3053\u308d\u3001\u304e\u3085\u304e\u3087\u3046\u306e\u8cc7\u6599\u3092\u307f\u3066\u3044\u308b\u304b\u3001\u6b20\u5e2d\u306e\u56de\u6570\u3001\u6388\u696d\u3067\u624b\u3092\u4e0a\u3052\u305f\u56de\u6570\u3001\u30a2\u30ca\u30a6\u30f3\u30b9\u3092\u898b\u308b\u304b\u3069\u3046\u304b\u304c\u91cd\u8981\u3067\u3042\u308b\u3088\u3046\u3067\u3059\u3002","e9f9c699":"IT\u3084\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u6388\u696d\u304c\u591a\u3044\u3002","b07b4940":"\u7dd2\u9928\u901a\u308a\u3060\u304c\u3001\u89aa\u306e\u5b66\u6821\u3078\u306e\u6e80\u8db3\u5ea6\u304c\u3088\u3044\u5834\u5408\u3067\u306fLow\u30af\u30e9\u30b9\u306e\u5b50\u306f\u5c11\u306a\u304f\u3001\u6e80\u8db3\u5ea6\u304c\u4f4e\u3044\u5834\u5408\u306fHigh\u30af\u30e9\u30b9\u306e\u751f\u5f92\u306f\u5c11\u306a\u3044\u3002"}}