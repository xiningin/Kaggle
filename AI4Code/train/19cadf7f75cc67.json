{"cell_type":{"55d303ab":"code","9723212d":"code","519d1169":"code","2826fba8":"code","3da2ba02":"code","bcf3ef25":"code","f9089437":"code","2641af14":"code","95d5b8bd":"code","7626bb2e":"code","85d27f01":"code","e063648a":"code","aa37045a":"code","b985bcff":"code","89300551":"code","fd2cba34":"code","54e788fa":"code","69d2d103":"code","5de61f5b":"code","8906ceb8":"code","168d2b9d":"code","48158e58":"code","267f590f":"code","43e79e13":"code","cc8312b9":"code","7657177f":"code","d925fd71":"code","af52acf9":"code","9d03d553":"code","605360cc":"code","e4a6870c":"code","074ebdaf":"code","710a0aff":"code","1ddefb6d":"code","58874532":"code","3d2bf7b3":"code","7836bbbe":"code","6411b106":"markdown","b157d532":"markdown","3517df3f":"markdown","c5a9fb08":"markdown","691b3645":"markdown","18bc2cac":"markdown","c5d99664":"markdown","0be0ed8b":"markdown","3c1668f1":"markdown","cb18cb45":"markdown","9e3a4965":"markdown","297e25be":"markdown"},"source":{"55d303ab":"!pip install dnspython -q","9723212d":"import pandas as pd\nimport numpy as np\nimport pymongo","519d1169":"# version\nprint(pymongo.version)","2826fba8":"def mongoConecta(url, database, collection):\n    mongo_url = url\n    cliente = pymongo.MongoClient(mongo_url)\n    DB = cliente[database]\n    DC = DB[collection]\n    return DC","3da2ba02":"# Mongo Connect\nfrom setup_tutorial import MDB # file with dataconnect ==> url=\"YOUR URL MONGODB\", database='YOUR DATABASE', collection='YOUR COLLECTION'\nurlMDB, databaseMDB, collectionMDB = MDB()\n\n# get a collection in pymongo\ncollection = mongoConecta(url=urlMDB,  database=databaseMDB, collection=collectionMDB)","bcf3ef25":"# clear collection\ncollection.delete_many({})","f9089437":"# database & collection\nf'Database: {collection.database.name}', f'Collection: {collection.name}'","2641af14":"# or \ncollection.full_name","95d5b8bd":"# creating employee register \n\nemployee = {\n    'id_doc': '12345A',\n    'name': 'Anne',\n    'age': 25,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 6000,\n    'position': 'Manager',\n    'department': 'Sales',\n    'status': 1\n}\n","7626bb2e":"employee","85d27f01":"# insert one document on database.collection tutorialDB.tutorialC\nid = collection.insert_one(employee).inserted_id\n# showing idObject inserted\nid","e063648a":"# insert other document on database.collection tutorialDB.tutorialC\nemployee = {\n    'id_doc': '12345B',\n    'name': 'Bruna',\n    'age': 32,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 3000,\n    'position': 'Seller',\n    'department': 'Sales',\n    'status': 1\n}\nid = collection.insert_one(employee).inserted_id\nid","aa37045a":"# insert many documents on collection tutorialDB.tutorialC\n# the structure is array with 3 dicts ==> [{dict1}, {dict2}, {dict3}]\nemployees = [{\n    'id_doc': '12345C',\n    'name': 'Carla',\n    'age': 29,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 3000,\n    'position': 'Seller',\n    'department': 'Sales',\n    'status': 1\n},\n{\n    'id_doc': '12345D',\n    'name': 'David',\n    'age': 27,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 3000,\n    'position': 'Seller',\n    'department': 'Sales',\n    'status': 1\n},\n{\n    'id_doc': '12345E',\n    'name': 'Eduarda',\n    'age': 31,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 3500,\n    'position': 'Data Analist',\n    'department': 'Sales',\n    'status': 1\n}]\n\nids = collection.insert_many(employees)","b985bcff":"# to find one document on collection\n\ncollection.find_one()\n# it'll return the first document","89300551":"# to find many documents on collection\n\n[doc for doc in collection.find()]","fd2cba34":"# This code will return document with id_doc == \"12345C\" \n[doc for doc in collection.find({'id_doc': '12345C'})]","54e788fa":"# here, this code will find all sellers\n[doc for doc in collection.find({'position': 'Seller'})]","69d2d103":"# now, we'll find sellers filtered sorted by ages\n[doc for doc in collection.find({'position': 'Seller'}).sort('age')]","5de61f5b":"# list employees | age is great than 31\n[doc for doc in collection.find({'age': {'$gt': 31}})]","8906ceb8":"# list employees | age is greater or eq than 31\n[doc for doc in collection.find({'age': {'$gte': 31}})]","168d2b9d":"# list employees | age is less than 27\n[doc for doc in collection.find({'age': {'$lt': 27}})]","48158e58":"# find by ObjectID\nemployee = {\n    'id_doc': '12345F',\n    'name': 'Francis',\n    'age': 55,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 3000,\n    'position': 'Accounter',\n    'department': 'Finances',\n    'status': 1\n}\nid = collection.insert_one(employee).inserted_id\nid","267f590f":"# find by ObjectID\ncollection.find_one({'_id': id})","43e79e13":"# insert without position info\nemployee = {\n    'id_doc': '12345G',\n    'name': 'Gustavo',\n    'age': 43,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'salary': 3000,\n    'department': 'Marketing',\n    'status': 1\n}\nid = collection.insert_one(employee).inserted_id\ncollection.find_one({'_id': id})","cc8312b9":"# insert without position info\nemployee = {\n    'id_doc': '12345H',\n    'name': 'Henry',\n    'age': 23,\n    'location': {\n      'city': 'Sao Paulo',\n      'country': 'Brazil'},\n    'position': None,\n    'salary': 2000,\n    'department': 'Marketing',\n    'status': 1\n}\nid = collection.insert_one(employee).inserted_id\ncollection.find_one({'_id': id})","7657177f":"# list all documents without position field\n[doc for doc in collection.find({'position': {'$exists': False}})]","d925fd71":"# list all documents with value position is None\n[doc for doc in collection.find({'position': None})]","af52acf9":"# update one document\n[doc for doc in collection.find({'id_doc': '12345G'})]","9d03d553":"collection.update_one({'id_doc': '12345G'}, {'$set': {'position': 'MKT Analyst'}})\n[doc for doc in collection.find({'id_doc': '12345G'})]","605360cc":"# update many documents\n[doc for doc in collection.find({'department': 'Marketing'})]","e4a6870c":"collection.update_many({'department': 'Marketing'}, {'$set': {'position': 'MKT Analyst', 'salary': 2500}})\n[doc for doc in collection.find({'department': 'Marketing'})]","074ebdaf":"collection.count_documents({})","710a0aff":"collection.count_documents({'department': 'Marketing'})","1ddefb6d":"# new documents\nemployees = [{\n    'id_doc': 'train1',\n    'name': 'X',\n    'position': 'Stocker',\n    'department': '3part',\n    'status': 1\n},\n{\n    'id_doc': 'train2',\n    'name': 'Y',\n    'position': 'Stocker',\n    'department': '3part',\n    'status': 1\n},\n{\n    'id_doc': 'train3',\n    'name': 'Z',\n    'position': 'Stocker',\n    'department': '3part',\n    'status': 1\n}]\n# insert many documents\ncollection.insert_many(employees)\n# list all documents (only id_doc, names and deparment and depart)\n[print(doc, sep='\\n') for doc in collection.find({}, \n                                                 {'_id':0, 'id_doc':1, \n                                                  'name':1, 'department': 1})]","58874532":"# list all documents from 3part department\n[print(doc, sep='\\n') for doc in collection.find({'department': '3part'}, \n                                                 {'_id':0, 'id_doc':1, \n                                                  'name':1, 'department': 1})]","3d2bf7b3":"# delete one document\ncollection.delete_one({'id_doc': 'train1'})\n# list all documents from 3part department\n[print(doc, sep='\\n') for doc in collection.find({'department': '3part'}, \n                                                 {'_id':0, 'id_doc':1, \n                                                  'name':1, 'department': 1})]","7836bbbe":"# delete many documents\ncollection.delete_many({'department': '3part'})\n# list all documents\n[print(doc, sep='\\n') for doc in collection.find({}, \n                                                 {'_id':0, 'id_doc':1, \n                                                  'name':1, 'department': 1})]","6411b106":"# Document\n\nDocuments in pymongo is represented like a dictionary like below and stored using json-style documents.\n\n    employee = {\n      'id_doc': '12345A',\n      'name': 'Anne',\n      'age': 25,\n      'location': {\n        'city': 'Sao Paulo',\n        'country': 'Brazil'},\n      'salary': 6000,\n      'position': 'Manager',\n      'department': 'Sales'\n      'status': 1\n    }","b157d532":"**Delete documents**","3517df3f":"# Basic commands to CRUD on mongoDB","c5a9fb08":"**Insert Many documents**","691b3645":"**Queries document**","18bc2cac":"**Counting documents**","c5d99664":"**Insert One document**","0be0ed8b":"**List One document**","3c1668f1":"**Advanced Queryes**\n\n[operators mongoDB](https:\/\/docs.mongodb.com\/manual\/reference\/operator\/query\/)","cb18cb45":"**Update**","9e3a4965":"# Creating mongoDB Connection","297e25be":"**List All documents**"}}