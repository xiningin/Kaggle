{"cell_type":{"894e5ddd":"code","d292b3ad":"code","135602c0":"code","1b284309":"code","5d157e57":"code","e26dc47b":"code","5c893101":"code","ec37572c":"code","f88e139e":"code","d6af3c12":"code","ed170402":"code","e17cadd5":"markdown","0b82acbb":"markdown","f7074d18":"markdown","284f021b":"markdown","22677205":"markdown"},"source":{"894e5ddd":"import numpy as np \nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom tensorflow import keras\nfrom tensorflow.keras.layers import Conv1D, MaxPooling1D, Dense, LeakyReLU\nfrom tensorflow.keras.layers import Flatten, Activation, BatchNormalization\nfrom tensorflow.keras.losses import BinaryCrossentropy\nfrom tensorflow.keras import layers\nimport tensorflow as tf","d292b3ad":"data_dictionary = pd.read_csv(\"..\/input\/widsdatathon2021\/DataDictionaryWiDS2021.csv\")\nunlabeled = pd.read_csv(\"..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\")\ntraining = pd.read_csv(\"..\/input\/widsdatathon2021\/TrainingWiDS2021.csv\")","135602c0":"column_datatype_mapping = dict(zip(data_dictionary['Variable Name'], data_dictionary['Data Type']))\ndel training['Unnamed: 0']\ndel unlabeled['Unnamed: 0']\ntraining.diabetes_mellitus.value_counts()","1b284309":"print(len(training), len(unlabeled))\n\nall_data = training.drop(['diabetes_mellitus'], axis=1).append(unlabeled,ignore_index=True).drop(['encounter_id', \n                          'hospital_id'], axis=1)\n\nfor col in all_data.columns:\n    if all_data.dtypes[col] == \"object\":\n        all_data[col] = all_data[col].fillna(\"NA\")\n        all_data[col] = LabelEncoder().fit_transform(all_data[col])\n        all_data[col]= all_data[col].astype('category')\n    elif column_datatype_mapping[col] == \"binary\":\n        all_data[col] = all_data[col].fillna(-1)\n    elif column_datatype_mapping[col] == \"numeric\":\n        all_data[col] = all_data[col].fillna(0)\n    else:\n        all_data[col] = all_data[col].fillna(all_data[col].median())\n    \nlen(all_data)","5d157e57":"all_data['weight'] = all_data['bmi']*(all_data['height']\/100)*(all_data['height']\/100)","e26dc47b":"df_train = all_data.iloc[:len(training)]#[selected_columns]\ndf_pred = all_data.iloc[-len(unlabeled):].reset_index(drop=True)#[selected_columns]\nY = training['diabetes_mellitus']\nx_train, x_test, y_train, y_test = train_test_split(df_train, Y, test_size=0.20, random_state=42,shuffle=True )","5c893101":"x_train = x_train.values.reshape(-1, x_train.shape[1], 1)  # reshaping for convnet\nx_test = x_test.values.reshape(-1, x_test.shape[1], 1)  # reshaping for convnet","ec37572c":"def build_model():\n    model = keras.models.Sequential()\n    model.add(Conv1D(384, kernel_size=3, input_shape=x_train.shape[1:]))\n    model.add(BatchNormalization())\n    model.add(Activation('relu'))\n    model.add(MaxPooling1D(pool_size=2))\n    model.add(Conv1D(32, kernel_size=3))\n    model.add(BatchNormalization())\n    model.add(Activation('relu'))\n    model.add(Flatten()) \n    model.add(Dense(1))\n    model.add(Activation(\"sigmoid\"))\n    model.compile(optimizer=keras.optimizers.Adam(lr=0.001),\n                  loss=BinaryCrossentropy(label_smoothing=0.0921),\n                  metrics=[tf.keras.metrics.AUC(name = 'auc'), \"accuracy\"])\n    return model\n    ","f88e139e":"model = build_model()\nmodel.fit(x=x_train, y=y_train,\n          epochs=25, batch_size=2048,\n          callbacks=[tf.keras.callbacks.EarlyStopping('val_auc', mode='max',patience=3)],\n          validation_data=(x_test, y_test))","d6af3c12":"model.fit(df_train.values.reshape(-1, df_pred.shape[1], 1), Y,\n          epochs=3,\n          batch_size=1024)","ed170402":"pd.DataFrame({\n    'encounter_id': unlabeled['encounter_id'].values,\n    'diabetes_mellitus': model.predict_proba(\n        df_pred.values.reshape(-1, df_pred.shape[1], 1)).flatten()\n             }).to_csv('.\/Prediction_with_CNN1D.csv',index=False)\n","e17cadd5":"### **Data import**","0b82acbb":"### **Basic preprocessing**","f7074d18":"### **Build model**","284f021b":"### **Make Prediction**","22677205":"### **Train test split and reshaping**"}}