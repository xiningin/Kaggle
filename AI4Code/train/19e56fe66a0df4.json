{"cell_type":{"a26d327c":"code","981296ea":"code","a6c91bee":"code","ae86921f":"code","5627e345":"code","4284dbe0":"code","24d5dc48":"code","d40f6b8f":"code","12c770cb":"code","8f2b7738":"code","d1592e3a":"code","a00dd0ed":"code","850b7499":"code","0dbf22a7":"code","556ddbb9":"code","256defe7":"code","4c64f76d":"code","b093cb48":"code","860c7a79":"code","84d86a75":"code","a8acafdf":"code","361cfc60":"code","7477ddd4":"code","376933fa":"code","35721cd6":"code","345da914":"code","0916e50d":"markdown","18b89e33":"markdown","fee8d40e":"markdown","62b5b0d0":"markdown","aadd7b0a":"markdown","59a6656a":"markdown","d0df3808":"markdown","ef8813d4":"markdown","7e89cd29":"markdown","1383c555":"markdown","b7326fd4":"markdown","9fb80888":"markdown","1245ce7c":"markdown","379a7fb0":"markdown","c939a4e7":"markdown","38d67d55":"markdown","ac642ad3":"markdown"},"source":{"a26d327c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","981296ea":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","a6c91bee":"df = pd.read_csv('\/kaggle\/input\/churn-for-bank-customers\/churn.csv')\ndf.sample(5)","ae86921f":"df.info()","5627e345":"df_drop = df.drop(columns = ['RowNumber','CustomerId','Surname'])\ndf_drop.head()","4284dbe0":"df_drop.duplicated().sum()","24d5dc48":"numeric = ['float64','int64']\n\ndf_numerical = df_drop.select_dtypes(include=numeric)\ncolumn_numerical = df_numerical.columns\n\ndf_categorical = df_drop.select_dtypes('object')\ncolumn_categorical = df_categorical.columns","d40f6b8f":"\ndf_numerical.describe()","12c770cb":"df_categorical.describe()","8f2b7738":"labels = 'Exited', ' Retained'\nsizes = [20.37, 100-20.37]\nexplode = (0, 0.1)\n\nfig1, ax1 = plt.subplots(figsize=(8, 5))\n\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.2f%%',\n        shadow=False, startangle=0, textprops = {'size': 'x-large'}, colors = ['lightseagreen','lightgrey'])\nax1.axis('equal')\n\nplt.title(\"Proportion of customer exited and retained\", size = 16)","d1592e3a":"plt.figure(figsize=(12,10))\nfor i in range(0,len(column_numerical)):\n    plt.subplot(3,len(column_numerical)\/3, i+1)\n    sns.boxplot(y = df_numerical[column_numerical[i]], color='green',orient = 'v')\n    plt.tight_layout()","a00dd0ed":"plt.figure(figsize=(12,8))\nfor i in range(0,len(column_numerical)):\n    plt.subplot(3,3,i+1)\n    sns.distplot(df_numerical[column_numerical[i]], color='green')\n    plt.tight_layout()","850b7499":"df_wo_exited = df_drop.drop(columns = 'Exited')\ndf_wo_exited","0dbf22a7":"plt.figure(figsize=(25,10))\nfor i in range(0,len(df_wo_exited.columns)):\n    plt.subplot(2,len(df_wo_exited.columns)\/2,i+1)\n    sns.histplot(df_drop, x = df_drop[df_drop.columns[i]], hue = 'Exited')\n    plt.tight_layout()","556ddbb9":"df_onehot = df_drop.copy()\n\nfor i in column_categorical:\n    df_onehot[i] = df_onehot[i].astype('category').cat.codes\n    ","256defe7":"plt.figure(figsize=(12,8))\nsns.heatmap(df_onehot.corr(), cmap='Blues', annot=True, fmt = '.2f')","4c64f76d":"df_age = df_drop.copy()\n\ndf_age['age_segmentation'] = np.where(df_drop['Age'] <= 20, '1-20',\n                                      np.where(df_drop['Age'] <= 30, '21-30',\n                                              np.where(df_drop['Age'] <= 40, '31-40',\n                                                      np.where(df_drop['Age'] <= 50, '41-50',\n                                                              np.where(df_drop['Age'] <= 60, '51-60',\n                                                                      np.where(df_drop['Age'] <= 70, '61-70',\n                                                                              np.where(df_drop['Age'] <= 80, '71-80', '90++')))))))\n                                                \ndf_age.sample(5)","b093cb48":"df_age = df_age.groupby(['age_segmentation','Exited']).agg({'Gender' : 'count'}).reset_index()\ndf_age.columns = ['age_segmentation','Exited','user_count']\ndf_age['Exited'] = df_age['Exited'].apply(lambda x : 'Exited' if x == 1 else 'Retained')\ndf_age","860c7a79":"plt.figure(figsize=(12,8))\nsns.barplot(data = df_age, x = 'age_segmentation', y = 'user_count', hue = 'Exited', palette = 'Purples')\nplt.ylabel('Total User')","84d86a75":"df_geo = df_drop.groupby(['Geography','Exited']).agg({'Gender':'count'}).reset_index()\ndf_geo.columns = ['Geography','Exited','user_count']\n\ndf_geo","a8acafdf":"sns.barplot(data=df_geo, x = 'Geography',y='user_count', hue='Exited',palette = 'Purples')","361cfc60":"## 3.3 Product type","7477ddd4":"df_product = df_drop.groupby(['NumOfProducts','Exited']).agg({'Gender' : 'count'}).reset_index()\n\ndf_product.columns = ['NumOfProducts','Exited','user_count']\n\ndf_product['total_user'] = df_product.groupby(['NumOfProducts'])['user_count'].transform('sum')\n\ndf_product['Percentage'] = round(df_product['user_count']\/df_product['total_user']*100,2)\ndf_product['Percentage'] = df_product['Percentage'].astype(str)\ndf_product['Percentage'] = df_product['Percentage']+'%'\n\ndf_product['Exited'] = df_product['Exited'].apply(lambda x : 'Exited' if x == 1 else 'Retained')\ndf_product","376933fa":"plt.figure(figsize=(12,8))\nsns.barplot(data= df_product, x = 'NumOfProducts', y ='user_count', hue='Exited', palette='Purples')\n\nplt.title('Product Types and the Churn Rate', loc = 'center', fontweight = 'bold', fontsize=20)\n\nplt.xlabel('Number of Products', fontsize = 16, fontdict = {'weight' :'bold'})\nplt.ylabel('User Count', fontsize=16, fontdict = {'weight' :'bold'})\n\nplt.legend(loc = 'center right')\n\nplt.text(x = -0.32 , y = df_product['user_count'][0] - 150, s = df_product['Percentage'][0], fontsize = 12)\nplt.text(x = 0.07 , y = df_product['user_count'][1] - 150, s = df_product['Percentage'][1], fontsize = 12)\nplt.text(x = 0.68 , y = df_product['user_count'][2] - 150, s = df_product['Percentage'][2], fontsize = 12)\nplt.text(x = 1.1 , y = df_product['user_count'][3] + 100, s = df_product['Percentage'][3], fontsize = 12)\nplt.text(x = 1.68, y = df_product['user_count'][4] + 100, s = df_product['Percentage'][4], fontsize = 12)\nplt.text(x = 2.07, y = df_product['user_count'][5] + 100, s = df_product['Percentage'][5], fontsize = 12)\nplt.text(x = 3.07 , y = df_product['user_count'][6] + 100, s = df_product['Percentage'][6], fontsize = 12)","35721cd6":"df_credit = df_drop.loc[:, ['CreditScore','Exited']]\n\nlabels = [\"{0} - {1}\".format(i, i + 99) for i in range(300, 800, 100)]\ndf_credit['Classification'] = pd.cut(df_credit.CreditScore, range(300, 900, 100), right=False, labels=labels)\n\ndf_credit = df_credit.groupby(['Exited','Classification']).agg({'CreditScore':'count'}).reset_index()\ndf_credit.columns = ['Exited','CreditScore','user_count']\n\ndf_credit['sum'] = df_credit.groupby('CreditScore')['user_count'].transform('sum')\n\ndf_credit['percentage'] = round(df_credit['user_count'] * 100 \/ df_credit['sum'],2)\ndf_credit['percentage'] = df_credit['percentage'].astype(str)\ndf_credit['percentage'] = df_credit['percentage'] + '%'\n\ndf_credit['Exited'] = df_credit['Exited'].apply(lambda x : 'Exited' if x == 1 else 'Retained')\ndf_credit.transpose()","345da914":"plt.figure(figsize=(12,8))\nsns.barplot(data = df_credit, x = 'CreditScore', y = 'user_count', hue='Exited', palette = 'Blues')","0916e50d":"# 3. Insights","18b89e33":"## 2.1 Ratio of customer exited and retained","fee8d40e":"# 2. Exploratory Data Analysis (EDA)","62b5b0d0":"## 2.2 Barplot and distribution","aadd7b0a":"Highlight :\n1. From the barplot we can see that `CreditScore` and `Age` have outliers, before machine learning(ML) we need to remove those outliers\n2. `NumOfProducts` and `Exited` also have outliers, but these 2 features are categorical in normal sense, so we will not remove those outliers\n3. The `EstimatedSalary` is distributed evenly.","59a6656a":"Summary highlight:\n1. The bank has 10,000 customers\n2. The dataset has **14 features**, but `RowNumber`, `CustomerID` and `Surname` are removed.\n3. There are **no duplicate** and **no null value** from the dataset\n4. Most of the customer are located at **France**\n5. Most of the customer's credit score is around 650 which considered as **fair**\n6. Customer's `age` are vary, ranging from 19 to 92\n7. The dataset only has tenure up to 10 years","d0df3808":"### **Foreword**\n  \nHello everyone, this is the first notebook that I made since I start learning data science. I was hoping that for whoever read this notebook can give me feedback, it may from the coding, visualization used, insight, business recommendation, etc. Thank you very much!!!","ef8813d4":"# 1. General Information about the Dataset","7e89cd29":"## 2.3 Heatmap","1383c555":"### **Problem Background**\n\nCustomer churn is **the percentage of customers that stopped using bank's product or service during a certain time frame**. Losing customer mean losing revenue, so in long term it might have a serious impact on the bank. As most of us already know, customer acquisition is costing more than customer retention but in term of revenue, moreover, the `retained customer` will give the bank more money than `new customer`. \n\nTherefore, when `new customer` churn (higher acquisition cost, lower revenue), the bank might suffer from short term loss, but when `retained customer` churn(lower retention cost, high revenue), the bank revenue will decrease. That is why predicting customer behavior that is going to churn is very important. In fact, by simply reaching out to the customer early enough, 11% of the churn can be avoided.\n\nNote: In this dataset, the columns `Exited` mean churn","b7326fd4":"Insight summary:\n1. The majority of the customer is adult around 31-40 years old\n2. Older customer around 51-60 years old, even though only a small portion of the customer, but they have a tendency to exit the bank.\n3. 30% of customer in Germany exit the bank\n4. Product number 1 and 2 are the most common product used by the customer, meanwhile product number 3 and 4 are rarely used but has higher exit rate\n5. Most of the customer has credit score of 600-699 \n","9fb80888":"Summary :\n1. Customer with low `CreditScore` has the tendency to exit\n2. Most of bank's customer come from France, but in Germany more customer exit\n3. Customer ranging from 50-60 years old have the tendency to exit\n4. `NumOfProducts` 3 and 4 have more customer exit, although only a small number of customer use that  products\n5. Interesting graph from `Balance`, more customer with `Balance` around 0 don't exit","1245ce7c":"## 3.2 Geography","379a7fb0":"1. Considering the geography, customer in Germany have the tendency to churn. The bank needs to focus on improving facilities in Germany, for example : are there enough bank's branches in `Germany`? are there enough ATM machines in `Germany`? are there any advertisement or promotion for new user and retained user?\n\n2. Older people (51-60) years old might need a better product or promotion, such as a better retirement plan, higher interest or so on. \n\n3. The bank need to stop using `product number` `3` and `4`, because there are less likely to be chosen and the churn rate is high. Therefore, the bank can focus on promoting `product number` `1` and `2`. For the product number 1, the company can review customer satisfaction and opinion, because the churn rate reach up to 27%. ","c939a4e7":"# 4. Business Recommendation","38d67d55":"## 3.4 Credit Score","ac642ad3":"## 3.1 Age"}}