{"cell_type":{"13715a12":"code","723e9f12":"code","71dbdbd7":"code","a39af377":"code","3d7a5bd6":"code","53ed85fd":"code","dec41ea9":"code","4a606e6f":"code","3e122ad9":"code","c17dddcb":"code","70b73c14":"code","eeddbc4e":"code","7f7d5be9":"code","a09171e2":"code","ce0b4858":"code","4d31fed5":"markdown","80b4872b":"markdown","4a10b9f3":"markdown","80794e97":"markdown","1061dbbe":"markdown"},"source":{"13715a12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","723e9f12":"df = pd.read_csv('\/kaggle\/input\/heart-disease-prediction-using-logistic-regression\/framingham.csv')\ndf.head()","71dbdbd7":"df.isnull().sum()","a39af377":"df.info()\ndf.head()\ndf.describe()","3d7a5bd6":"data = df.fillna(0)\ny = data.TenYearCHD.values\nx_data = data.drop([\"TenYearCHD\"],axis = 1)","53ed85fd":"x_data","dec41ea9":"df.dropna(axis=0, inplace=True)\nX=df.iloc[:,:-1].values\ny=df.iloc[:,-1].values\ndf.head()","4a606e6f":"df_1=df[df['TenYearCHD']==1]\ndf_2=df[df['TenYearCHD']==0]\nprint(df_1['glucose'].mean()-df_2['glucose'].mean())","3e122ad9":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.30,random_state=42)","c17dddcb":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","70b73c14":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state=0)\nclassifier.fit(X_train,y_train)\ny_pred = classifier.predict(X_test)\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\nrecall = cm[0][0]\/(cm[0][0] + cm[1][0])\nprint(recall)","eeddbc4e":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(X)\nX = scaler.transform(X)","7f7d5be9":"from sklearn.model_selection import train_test_split\n\n# memisahkan data untuk training dan testing\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.33, random_state=42)","a09171e2":"from sklearn.svm import SVC\n\n# membuat objek SVC dan memanggil fungsi fit untuk melatih model\nclf = SVC()\nclf.fit(X_train, y_train)","ce0b4858":"clf.score(X_test, y_test)","4d31fed5":"Algoritma Support Vector Machines jauh lebih termotivasi secara geometris dibanding menggunakan regresi logistik, akan tetapi perbandingan dengan akurasi regresi logistik tidak terlampau jauh, yaitu dengan akurasi 83% \/ 0.84","80b4872b":"# **Klasifikasi Menggunakan SVC**","4a10b9f3":"# **Klasifikasi Menggunakan Logistic Regression**","80794e97":"**Kesimpulan**\n\nMaka kesimpulannya adalah SVM dan regresi logistik umumnya bekerja sebanding dalam praktiknya. Gunakan SVM dengan kernel nonlinier jika data tidak dapat dipisahkan secara linear. Jika sebaliknya, maka menggunakan regresi logistik lebih dahulu dan lihat hasil akurasi data menggunakan metode regresi logistik. Jika akurtasi menggunakan metode regresi logistik kurang, maka coba SVM dengan kernel non-linear.","1061dbbe":"Pada klasifikasi penyakit hati menggunakan regresi logistik yang bersifat lebih memaksimalkan kemungkinan kelas posterior, maka didapat hasil akurasi 85% \/ 0.85"}}