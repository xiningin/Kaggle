{"cell_type":{"fef20abb":"code","6ae1067d":"code","d1951316":"code","8edebe14":"code","0cfe2ef3":"markdown","273ffc31":"markdown","4879bdfa":"markdown","4b3b5129":"markdown","919cca46":"markdown"},"source":{"fef20abb":"import pandas as pd\nimport numpy as np\n\nall_sensors = pd.read_csv('..\/input\/goodnight1\/hrb_sample_1.csv', header=2, index_col='Time', parse_dates=['Time'])\nhbr_sensor   = pd.DataFrame()\n# Resampling to 1s\noriginal_signal   = all_sensors['HR (bpm)']\nhbr_sensor['hbr'] = original_signal.resample('1S').mean()\n# Normalization\nrmin = hbr_sensor['hbr'].min()\nrmax =  hbr_sensor['hbr'].max()\nhbr_sensor['hbr'] = [(r-rmin)\/(rmax-rmin) for r in hbr_sensor['hbr']]","6ae1067d":"# ommit first 15 minutes - falling sleep before starting first potential cycle\nshift = 900\nhbr_sensor =  hbr_sensor[shift:]\n# Smoothing by rolling average\nrolling_window = 600 # 10 minutes\n\nhbr_sensor['mean'] = hbr_sensor['hbr'].rolling(rolling_window).mean()","d1951316":"# Searching for cycles not longer than 10800 seconds -3 hours\n# shifted signals are stored in separated series\nmax_cycle = 10800\nstep = 300\nfor i in range(shift + step,max_cycle,step):\n    hbr_sensor[str(i)] = hbr_sensor['mean'].shift(i)\n\n# For correlation analysis take part where there is shifted signal\nhbr_sensor_left = hbr_sensor.iloc[max_cycle:]\n\n# Calculate correlations using Pearsons method\ncorr = hbr_sensor_left.corr()\n\n# Spot maximum correlation index and its value\nmax_corr_ind =  corr.loc['mean'][2:].idxmax()\nmax_corr = corr.loc['mean'][2:].max()\n","8edebe14":"# Draw results\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\nfrom mpl_toolkits.axes_grid1 import axes_grid\n\nfig = plt.figure() \nfig.set_size_inches(10, 20)\n\ngs = gridspec.GridSpec(4, 1, figure=fig) \n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[1, 0])\nax2 = fig.add_subplot(gs[2, 0])\n\nax0.get_xaxis().set_visible(False)\nax0.set_ylabel('Heart beat rate')\noriginal_signal.plot(ax=ax0,title='Original heart rate signal while sleeping')\nhbr_sensor['mean'].plot(ax=ax1,title='Normalized original + Shifted')\nhbr_sensor_left[str(max_corr_ind)].plot(ax=ax1)\nax1.legend(['Normalized','Normalized and shifted by ' + max_corr_ind + ' s'])\nax1.set_ylabel('Signal')\ncorr.loc['mean'][2:].plot(ax=ax2, title='Correlation: Signal vs. Signal shifed by x seconds')\n\nax2.annotate('max correlation found at ' + max_corr_ind + 's', xy=(list(corr[2:].index).index(max_corr_ind), max_corr),  xycoords='data',\n            xytext=(0.8, 0.5), textcoords='axes fraction',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='top',\n            )\nax2.set_xlabel('Shift time in seconds')\nax2.set_ylabel('Correlation')\nplt.show()\n","0cfe2ef3":"Everybody says 'do not take work personally'. \nSometimes it is not possible.\nEspecially if you analyze your **own sleeping heart beat rate**.\nThe notebook is designed to calculate sleeping cycle period.\nIt is achieved by simple methods which are often applied while preparing data. \nIt was created for educational purposes but hope it may give someone fun or inspiration.","273ffc31":"Falling sleep period (e.g. 15 minutes) is taken away from analysis.\nSmoothing by rolling average is applied using 10 minutes window.","4879bdfa":" I used Polar OH1 sensor to colect data. At the beginning:\n1.  Heart beat rate file is read.\n1.  It is resampled to 1 second\n1.  Then it is normalized","4b3b5129":"The idea to find length od **sleep cycle time** is based on similiarities between **cleaned signal** and **shifted cleaned** signal.\nNumber of test signals with different shifts are created.\nI assumed that **sleep cycle time** is shorter than 3 hours.\nThen correlations between signals is calculated using Pearson method.\n\nShifted signal with maximum correlation is assumed to point at the **sleep cycle time** to be found.","919cca46":"The diagrams below may explain more about the idea. \n"}}