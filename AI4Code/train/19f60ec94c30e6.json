{"cell_type":{"5f8dc8c9":"code","8bd0a05b":"code","644a2edf":"code","105954f2":"code","d6d98501":"code","b3c6d450":"code","4f4595ed":"code","6ca8f10d":"code","6bb05850":"code","e7ff6da5":"code","82cde6d9":"code","c325b93c":"code","edce9606":"code","c29dce02":"code","db34a4e2":"code","84d089e2":"code","36573381":"code","be172f33":"code","c61e39cc":"code","4d496865":"code","acc2c65b":"code","2f1e9066":"markdown","e0845352":"markdown","dfa4d58d":"markdown","a0ab10c3":"markdown","7b66b02b":"markdown","84661f57":"markdown","b2253499":"markdown","9715ec45":"markdown","f230a7ac":"markdown","ce588697":"markdown","9fd7a271":"markdown"},"source":{"5f8dc8c9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px # for visualization \nimport plotly.offline as py \nimport plotly.graph_objs as go \nfrom plotly.figure_factory import create_table # for creating nice table ","8bd0a05b":"# load built-in gapminder dataset from plotly \ngapminder = px.data.gapminder() ","644a2edf":"# examine first few rows \ngapminder.head() ","105954f2":"# create a publication quality table \ntable = create_table(gapminder.head(10))\npy.iplot(table)","d6d98501":"# filtering data for Canada and store into a variable called canada_data \ncanada_data = px.data.gapminder().query(\"country == 'Canada' \")","b3c6d450":"# create bar charts \nfig = px.bar(canada_data, x='year', y='pop', height=400)\nfig.show() ","4f4595ed":"# let's add color by lifeExp and other parameters \nfig = px.bar(canada_data, x='year', y='pop', color='lifeExp', labels={'pop': 'Population of Canada'}, height=400)\nfig.show() ","6ca8f10d":"# filter 2007 data only from dataset \ngapminder2007 = gapminder.query('year == 2007')\n\n# create scatter plot \nfig = px.scatter(gapminder2007, x='gdpPercap', y='lifeExp')\nfig.show() ","6bb05850":"# color by continent \nfig = px.scatter(gapminder2007, x='gdpPercap', y='lifeExp', color='continent')\nfig.show() ","e7ff6da5":"# create a bubble chart \nfig = px.scatter(gapminder2007, x='gdpPercap', y='lifeExp', color='continent', size='pop', size_max=60)\nfig.show() ","82cde6d9":"# hover name \nfig = px.scatter(gapminder2007, x='gdpPercap', y='lifeExp', color='continent', size='pop', size_max=60, \n                 hover_name='country')\nfig.show() ","c325b93c":"# create a facet plot \nfig = px.scatter(gapminder, x='gdpPercap', y='lifeExp', color='continent', size='pop', size_max=60, \n                hover_name='country', facet_col='continent')\nfig.show() ","edce9606":"# log scale on x-axis \nfig = px.scatter(gapminder, x='gdpPercap', y='lifeExp', color='continent', size='pop', size_max=60, \n                hover_name='country', facet_col='continent', log_x=True)\nfig.show()","c29dce02":"# let's add animation \nfig = px.scatter(gapminder, x='gdpPercap', y='lifeExp', color='continent', size='pop', size_max=40, \n                hover_name='country', log_x=True, animation_frame='year',\n                 animation_group='country', range_x=[25, 10000], range_y=[25,90])\nfig.show()","db34a4e2":"# customize the labels \nfig = px.scatter(gapminder, x='gdpPercap', y='lifeExp', color='continent', size='pop', size_max=40, \n                hover_name='country',log_x=True, animation_frame='year',\n                 animation_group='country', range_x=[25, 10000], range_y=[25,90], \n                labels=dict(pop=\"Population\", gdpPercap=\"GDP Per Capita\", lifeExp=\"Life Expectency\"))\nfig.show()","84d089e2":"# create a map using line_geo()\nfig = px.line_geo(gapminder.query('year == 2007'), locations='iso_alpha', color='continent', projection='orthographic')\nfig.show() ","36573381":"# create a map using choropleth\nfig = px.choropleth(gapminder, locations='iso_alpha', color='lifeExp', hover_name='country', \n                    animation_frame='year', color_continuous_scale=px.colors.sequential.Plasma, projection='natural earth')\nfig.show() ","be172f33":"# print available themes or template \nimport plotly.io as pio\npio.templates","c61e39cc":"# let's use plotly_dark in our previous bar chart \nfig = px.bar(canada_data, x='year', y='pop', color='lifeExp', labels={'pop': 'Population of Canada'},\n             height=400, template='plotly_dark')\nfig.show()","4d496865":"# seaborn\nfig = px.bar(canada_data, x='year', y='pop', color='lifeExp', labels={'pop': 'Population of Canada'},\n             height=400, template='seaborn')\nfig.show()","acc2c65b":"# ggplot2 \nfig = px.bar(canada_data, x='year', y='pop', color='lifeExp', labels={'pop': 'Population of Canada'},\n             height=400, template='ggplot2')\nfig.show()","2f1e9066":"## Task-6: Create Interactive Bubble Charts","e0845352":"## Task-1: Import Libraries ","dfa4d58d":"## 10: Using Plotly Template in Any Graphs","a0ab10c3":"## Task-3: Creating a Table ","7b66b02b":"## Further Reading \n- https:\/\/plotly.com\/python\/templates\/\n- https:\/\/plotly.com\/python\/plotly-fundamentals\/\n- https:\/\/plotly.com\/python\/plotly-express\/","84661f57":"## Task-5: Plot Life Expectency vs GDP Per Capita","b2253499":"# Explore the Gapminder Dataset with Plotly Express\nIn this notebook I'll try to explore gapminder dataset using interactive data visualization library called Plotly. About the Dataset:\n[Data Source](https:\/\/www.gapminder.org\/tools\/#$state$time$value=2007;;&chart-type=bubbles)\n\n- Task-1: Import Libraries \n- Task-2: Loading Dataset \n- Task-3: Creating Table \n- Task-4: Quick Visualizations with Bar Charts \n- Task-5: Plot Life Expectency `vs` GDP Per Capita\n- Task-6: Create Interactive Bubble Charts \n- Task-7: Create Interactive Animations and Facet Plots \n- Task-8: Interactive Line Plots and Area Plots \n- Task-9: Represent Geographic Data as Animated Maps\n- Task-10: Using Plotly Template in Any Graphs ","9715ec45":"## Task-9: Represent Geographic Data as Animated Maps","f230a7ac":"## Task-4: Quick Visualizations with Bar Charts","ce588697":"## Task-7: Create Interactive Animations and Facet Plots","9fd7a271":"## Task-2: Loading the Dataset "}}