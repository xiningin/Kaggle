{"cell_type":{"46b811cf":"code","80b391bc":"code","3a883c2a":"code","0140619a":"code","6a0e50ea":"code","fbd74bde":"code","82ab9a11":"code","70dd17c2":"markdown","28e03ec5":"markdown","1f2b1a66":"markdown","9a8567ac":"markdown","9b8d8006":"markdown"},"source":{"46b811cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80b391bc":"!pip install matrixconverters","3a883c2a":"from matrixconverters.read_ptv import ReadPTVMatrix\nthe_matrix = ReadPTVMatrix(filename=\"..\/input\/matrices-legresley\/LeGresley_4908.mtx\")","0140619a":"from scipy.io import mmread\na = mmread('..\/input\/matrices-legresley\/LeGresley_4908.mtx')","6a0e50ea":"!pip install scanpy","fbd74bde":"import scanpy as sc","82ab9a11":"sc.read_mtx('..\/input\/matrices-legresley\/LeGresley_4908.mtx')\n","70dd17c2":"![](https:\/\/img.yumpu.com\/52828420\/1\/500x640\/patrick-legresley-nvidia.jpg)yumpu.com","28e03ec5":"OSError: Flag of round procedure doesn't exist","1f2b1a66":"#Nothing happened after the snippet above.","9a8567ac":"I have no clue about what I should do from now. Hence, I'll stop, and wait the Datasets author or any other kaggler to work with mtx files.","9b8d8006":"\"LeGresley research focuses on the development of reduced order models for use in design and optimization. To be computationally feasible the order of some systems, such as an aeroelastic system with millions of degrees of freedom, may need to be reduced. He is currently investigating the use of Proper Orthogonal Decomposition (POD) as a means to construct linear based models, with the ultimate goal of applying these models to Aerodynamic Shape Optimization (ASO) and Multidisciplinary Design Optimization (MDO) problems.\"\n\nhttp:\/\/aero-comlab.stanford.edu\/plegresl\/index.html"}}