{"cell_type":{"e302c44d":"code","4e2947c2":"code","057b437e":"code","956a1a53":"code","398a845e":"code","71ce95ba":"code","5d18c8de":"code","384997ae":"code","ff2d5945":"code","cc2fbe6e":"code","17cbbfd7":"code","9e624af2":"code","acde301e":"code","52127eed":"code","29d5247b":"code","5a9987ec":"code","be368f41":"code","af1001aa":"code","23d4efb8":"code","bf39515c":"code","1c07b602":"code","fed3c339":"code","c3455dc3":"code","94bd80c8":"code","aa7458fb":"code","bd0a18c9":"code","09089628":"code","d90bc0a8":"code","0e5df450":"code","7fdef9d2":"code","ee9f4c04":"code","ee46484b":"code","de9b108a":"code","7cc8ab1e":"code","4d1899aa":"code","219a0e2b":"code","578f6c36":"code","2ab52adb":"code","b18e81bd":"code","4d568d51":"code","a861b0c4":"code","4f0f9cba":"code","f13e21b7":"code","6d7b0984":"code","32aa1b43":"code","37b60209":"code","4058d8e5":"code","d54b9b75":"code","8d2d20fb":"code","6f12e566":"code","653cfe35":"code","8e06efc1":"code","45c5bca9":"code","f80db955":"code","b9eb6416":"code","1a966a69":"code","16815b89":"code","aa9b4629":"code","3ded5497":"code","bc365f7a":"code","cf43bc1e":"code","ad6994b1":"code","e141c7dc":"code","9f76299f":"code","024b0ec0":"code","9a23b798":"code","19e680a6":"code","ff2c229c":"markdown","e6a082a8":"markdown","38502a0a":"markdown","b7adb4ce":"markdown","be634035":"markdown","a818b7f4":"markdown","aaf5d61f":"markdown","f69aead0":"markdown","c0f40855":"markdown","1228fa4c":"markdown","1140eaba":"markdown","7d4899f4":"markdown","d0777f92":"markdown","f542f4d8":"markdown","ea0b193c":"markdown","eed1406e":"markdown"},"source":{"e302c44d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4e2947c2":"# Load data\ndf = pd.read_csv(\"\/kaggle\/input\/web-traffic-time-series-forecasting\/train_1.csv.zip\", compression = \"zip\")\ndf.head()","057b437e":"# Transpose rows and columns\ndf = df.T\ndf.head()","956a1a53":"df = df.reset_index()\ndf.head()","398a845e":"# Capture 1st rows of data and make it column header\ncolumn_header = df.iloc[0,:].values\n\ndf.columns = column_header","71ce95ba":"df.head()","5d18c8de":"# Drop 1st row\ndf = df.drop(0, axis = 0)","384997ae":"df.head()","ff2d5945":"# Rename Page column to Date column\ndf = df.rename(columns = {\"Page\" : \"Date\"})\n\ndf.head()","cc2fbe6e":"# Check data type of date column\nprint(df[\"Date\"].dtype)","17cbbfd7":"# Convert Date column to datetime datatype\ndf[\"Date\"] = pd.to_datetime(df[\"Date\"])","9e624af2":"# Check Date column datatype again\nprint(df[\"Date\"].dtype)","acde301e":"# Set Date column as index\ndf = df.set_index(\"Date\")","52127eed":"df.head()","29d5247b":"# Finding number of access types and agents\naccess_types = []\nagents = []\nfor column in df.columns:\n    access_type = column.split(\"_\")[-2]\n    agent = column.split(\"_\")[-1]\n    access_types.append(access_type)\n    agents.append(agent)","5a9987ec":"# Counting access types\nfrom collections import Counter\naccess_dict = Counter(access_types)\naccess_dict","be368f41":"print(\"Number of topics with all-access type:\", access_dict[\"all-access\"])\nprint(\"Number of topics with desktop access:\", access_dict[\"desktop\"])\nprint(\"Number of topics with mobile-web access:\", access_dict[\"mobile-web\"])","af1001aa":"access_df = pd.DataFrame({\"Access type\" : access_dict.keys(),\n                          \"Number of columns\" : access_dict.values()})\naccess_df","23d4efb8":"# Counting agents\nagents_dict = Counter(agents)\nagents_dict","bf39515c":"print(\"Number of topics with spider as agent:\", agents_dict[\"spider\"])\nprint(\"Number of topics with all-agents as agent:\", agents_dict[\"all-agents\"])","1c07b602":"agents_df = pd.DataFrame({\"Agent\" : agents_dict.keys(),\n                          \"Number of columns\" : agents_dict.values()})\nagents_df","fed3c339":"# Identifying number of columns with null values with respect to access type\ndef count_null_columns(pattern):\n    pattern_columns = [column for column in df.columns if pattern in column]\n    return len(df[pattern_columns].isnull().sum()[df[pattern_columns].isnull().sum() > 0])\n\nno_of_cols_with_nulls = [count_null_columns(access_type) for access_type in access_df[\"Access type\"]]\n\naccess_df[\"No of columns with nulls\"] = no_of_cols_with_nulls\n\naccess_df","c3455dc3":"# Identifying number of columns with null values with respect to agents\ndef count_null_columns(pattern):\n    pattern_columns = [column for column in df.columns if pattern in column]\n    return len(df[pattern_columns].isnull().sum()[df[pattern_columns].isnull().sum() > 0])\n\nno_of_cols_with_nulls = [count_null_columns(agent) for agent in agents_df[\"Agent\"]]\n\nagents_df[\"No of columns with nulls\"] = no_of_cols_with_nulls\n\nagents_df","94bd80c8":"# Calculating percentage of null values in access types\naccess_df[\"% of nulls\"] = access_df[\"No of columns with nulls\"] \/ access_df[\"Number of columns\"] * 100\n\naccess_df","aa7458fb":"# Calculating percentage of null values in agents\nagents_df[\"% of nulls\"] = agents_df[\"No of columns with nulls\"] \/ agents_df[\"Number of columns\"] * 100\n\nagents_df","bd0a18c9":"df.columns[86543].split(\"_\")[-3:]","09089628":"\"_\".join(df.columns[86543].split(\"_\")[-3:])","d90bc0a8":"df.columns[86543]","0e5df450":"projects = []\nfor column in df.columns:\n    project = column.split(\"_\")[-3] # Extracting language code from column name (topic name)\n    projects.append(project)","7fdef9d2":"project_dict = Counter(projects)\nproject_dict","ee9f4c04":"project_df = pd.DataFrame({\"Project\" : project_dict.keys(),\n                           \"Number of columns\" : project_dict.values()})\n\nproject_df","ee46484b":"# Identifying number of columns with null values with respect to projects\ndef count_null_columns(pattern):\n    pattern_columns = [column for column in df.columns if pattern in column]\n    return len(df[pattern_columns].isnull().sum()[df[pattern_columns].isnull().sum() > 0])\n\nno_of_cols_with_nulls = [count_null_columns(project) for project in project_df[\"Project\"]]\n\nproject_df[\"No of columns with nulls\"] = no_of_cols_with_nulls\n\nproject_df","de9b108a":"# Calculating percentage of null values\nproject_df[\"% of nulls\"] = project_df[\"No of columns with nulls\"] \/ project_df[\"Number of columns\"] * 100\n\nproject_df","7cc8ab1e":"project_df.sort_values(by = \"% of nulls\", ascending = False)","4d1899aa":"df.columns","219a0e2b":"required_column_names = [column for column in df.columns if \"commons.wikimedia.org\" in column]","578f6c36":"df[required_column_names].sum().mean()","2ab52adb":"df[required_column_names]","b18e81bd":"project_df[\"Project\"]","4d568d51":"def extract_total_views(project):\n    required_column_names = [column for column in df.columns if project in column]\n    total_views = df[required_column_names].sum().sum()\n    return total_views","a861b0c4":"total_views = []\nfor project in project_df[\"Project\"]:\n    total_views.append(extract_total_views(project))\n    \ntotal_views","4f0f9cba":"project_df[\"Total views\"] = total_views\nproject_df","f13e21b7":"def extract_average_views(project):\n    required_column_names = [column for column in df.columns if project in column]\n    average_views = df[required_column_names].sum().mean()\n    return average_views","6d7b0984":"average_views = []\nfor project in project_df[\"Project\"]:\n    average_views.append(extract_average_views(project))\n    \naverage_views","32aa1b43":"project_df[\"Average views\"] = average_views\nproject_df","37b60209":"project_df['Total views'] = project_df['Total views'].astype('int64')\nproject_df['Average views'] = project_df['Average views'].astype('int64')\nproject_df","4058d8e5":"project_df_sorted = project_df.sort_values(by = \"Average views\", ascending = False)\nproject_df_sorted","d54b9b75":"import seaborn as sns\nimport matplotlib.pyplot as plt","8d2d20fb":"plt.figure(figsize = (10,6))\nsns.barplot(x = project_df_sorted[\"Project\"], y = project_df_sorted[\"Average views\"])\nplt.xticks(rotation = \"vertical\")\nplt.title(\"Average views per each project\")\nplt.show()","6f12e566":"en_wikipedia_org_columns = [column for column in df.columns if \"en.wikipedia.org\" in column]\n\ntop_pages_en = df[en_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_en","653cfe35":"df[top_pages_en.index].plot(figsize = (16,9))","8e06efc1":"es_wikipedia_org_columns = [column for column in df.columns if \"es.wikipedia.org\" in column]\n\ntop_pages_es = df[es_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_es","45c5bca9":"df[top_pages_es.index].plot(figsize = (16,9))","f80db955":"ru_wikipedia_org_columns = [column for column in df.columns if \"ru.wikipedia.org\" in column]\n\ntop_pages_ru = df[ru_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_ru","b9eb6416":"df[top_pages_ru.index].plot(figsize = (16,9))","1a966a69":"de_wikipedia_org_columns = [column for column in df.columns if \"de.wikipedia.org\" in column]\n\ntop_pages_de = df[de_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_de","16815b89":"df[top_pages_de.index].plot(figsize = (16,9))","aa9b4629":"ja_wikipedia_org_columns = [column for column in df.columns if \"ja.wikipedia.org\" in column]\n\ntop_pages_ja = df[ja_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_ja","3ded5497":"df[top_pages_ja.index].plot(figsize = (16,9))","bc365f7a":"fr_wikipedia_org_columns = [column for column in df.columns if \"fr.wikipedia.org\" in column]\n\ntop_pages_fr = df[fr_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_fr","cf43bc1e":"df[top_pages_fr.index].plot(figsize = (16,9))","ad6994b1":"zh_wikipedia_org_columns = [column for column in df.columns if \"zh.wikipedia.org\" in column]\n\ntop_pages_zh = df[zh_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_zh","e141c7dc":"df[top_pages_zh.index].plot(figsize = (16,9))","9f76299f":"commons_wikipedia_org_columns = [column for column in df.columns if \"commons.wikimedia.org\" in column]\n\ntop_pages_commons = df[commons_wikipedia_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_commons","024b0ec0":"df[top_pages_commons.index].plot(figsize = (16,9))","9a23b798":"mediawiki_org_columns = [column for column in df.columns if \"www.mediawiki.org\" in column]\n\ntop_pages_mediawiki = df[mediawiki_org_columns].mean().sort_values(ascending = False)[0:5]\ntop_pages_mediawiki","19e680a6":"df[top_pages_mediawiki.index].plot(figsize = (16,8))","ff2c229c":"Percentae of missing values is almost same with each agents. So there is no pattern in missing values.","e6a082a8":"columns with projects commons.wikimedia.org and www.mediawiki.org have 48% columns with null values","38502a0a":"## Popular pages in \"www.mediawiki.org\"","b7adb4ce":"## Splitting data based on different access types and different agents.","be634035":"## Splitting data based on different projects (like 'en.wikipedia.org')","a818b7f4":"## Popular pages in \"fr.wikipedia.org\"","aaf5d61f":"## Popular pages in \"de.wikipedia.org\"","f69aead0":"## Interchanging Rows and Column of data to get it in proper time series format","c0f40855":"Now the data is in proper time series format.","1228fa4c":"Percentage of missing values in each access type is almost same. So there is no pattern in missing values.","1140eaba":"## Popular pages in \"commons.wikipedia.org\"","7d4899f4":"## Popular pages in \"en.wikipedia.org\"","d0777f92":"## Popular pages in \"zh.wikipedia.org\"","f542f4d8":"## Popular pages in \"es.wikipedia.org\"","ea0b193c":"## Popular pages in \"ja.wikipedia.org\"","eed1406e":"## Popular pages in \"ru.wikipedia.org\""}}