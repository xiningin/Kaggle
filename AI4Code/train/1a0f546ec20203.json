{"cell_type":{"9f695442":"code","9c24c009":"code","e4154bcb":"code","afb4c050":"code","968a5e83":"code","6f5df123":"code","bd8f81b4":"code","3f7fb1e7":"code","4ddbb9a2":"code","f3aca00f":"code","ad1f2251":"code","dc561f97":"code","0009fe91":"code","2fa6f2b9":"code","a1b474c7":"code","a9dddfae":"code","dd5cb943":"code","90420378":"code","04d75c81":"code","0db004af":"code","d7186639":"code","c2fb4d00":"code","a33bce83":"code","fbb07d3a":"code","928314cc":"code","5a0eb388":"code","af8861cd":"code","d2037a02":"code","c0fe4175":"code","70f13783":"code","b46d7108":"code","2606ccac":"code","186a44ad":"code","9d647d31":"code","0baadac0":"code","bf6c7e96":"markdown","731cf09d":"markdown","234cfe29":"markdown","de420d22":"markdown","79beaf22":"markdown","8a937afb":"markdown","1744cde3":"markdown","dfa0d7ac":"markdown","eb4f29ba":"markdown","0a3c749f":"markdown","7345a97e":"markdown","2f3292d4":"markdown","429272ec":"markdown","e925336a":"markdown","6021c0bf":"markdown","4af97c8d":"markdown","38ca9b64":"markdown","64660377":"markdown","3d541633":"markdown","cb77d61b":"markdown","3ed61008":"markdown","9a8401df":"markdown"},"source":{"9f695442":"import warnings\nwarnings.filterwarnings(\"ignore\")","9c24c009":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","e4154bcb":"from fastai import *\nfrom fastai.vision import *\nimport os, os.path\n\nimport pandas as pd\n\nfrom fastai.callbacks.tracker import *","afb4c050":"batchsize = 64\ndefault_epoch = 50 #might be cutoff by callback\nnp.random.seed(2)","968a5e83":"path = Path('\/kaggle\/input\/birds-uk-8classes-subset\/Aves_subset_8classes_distributionSimilarToFullSet')\npath.ls()","6f5df123":"# labels_to_images_list = []\n# folders = os.listdir(path)\n# for folder in folders:\n#     folder_path = os.path.join(path, folder)\n#     if (os.path.isdir(folder_path)):\n#         if (len(os.listdir(folder_path)) is not None):\n#             files = os.listdir(folder_path)\n#             for file in files:\n#                 labels_to_images_list.append([folder,file])\n# len_dataset = len(labels_to_images_list)\n# len_dataset","bd8f81b4":"csv_train = Path('\/kaggle\/input\/smallset-csvs\/Aves_subset_8classes_distributionSimilarToFullSet_train.csv')\ncsv_test = Path('\/kaggle\/input\/smallset-csvs\/Aves_subset_8classes_distributionSimilarToFullSet_test.csv')","3f7fb1e7":"imagelist_train = ImageList.from_csv(path,csv_train)\nimagelist_test = ImageList.from_csv(path,csv_test)","4ddbb9a2":"df_train = pd.read_csv(csv_train, header=None)\ndf_test = pd.read_csv(csv_test, header=None)\n\ndf_all = df_train.append(df_test)\n\ndf_all","f3aca00f":"len_dataset = len(df_all.index)\nlen_dataset","ad1f2251":"tfms = get_transforms()","dc561f97":"#create training databunch\n\ndata = ImageDataBunch.from_csv(path=path, csv_labels=csv_train, valid_pct=0.2, seed=seed,delimiter=\",\", ds_tfms=tfms, size=256, bs=batchsize, num_workers=0).normalize(imagenet_stats)\n\ndata","0009fe91":"data = (ImageList.from_csv(path,csv_train,delimiter=\",\")\n        .split_by_rand_pct(valid_pct=0.2)\n        .label_from_df(cols=1) \n        .transform(tfms, size=256)\n        .databunch(bs=batchsize, num_workers=0)\n        .normalize(imagenet_stats))\n\ndata","2fa6f2b9":"#create test databunch\n\ndata_test = (ImageList.from_df(df_all, path)\n        .split_by_list(imagelist_train, imagelist_test)\n        .label_from_df(cols=1) \n        .transform(tfms, size=256)\n        .databunch(bs=batchsize, num_workers=0)\n        .normalize(imagenet_stats))\n\ndata_test","a1b474c7":"print(data.classes)","a9dddfae":"data.items","dd5cb943":"data.show_batch(rows=3, figsize=(7,6))","90420378":"kappa = KappaScore()\nkappa.weights = \"quadratic\"\n\nlearn = cnn_learner(data, models.resnet34, metrics=[accuracy,kappa],callback_fns=[partial(EarlyStoppingCallback, monitor='valid_loss', min_delta=0.01, patience=5, mode = 'auto')])\nlearn.model_dir = \"\/kaggle\/working\"","04d75c81":"#default LR here is 3e-3\nlearn.fit_one_cycle(4)","0db004af":"learn.unfreeze()","d7186639":"#learn.lr_find()","c2fb4d00":"#learn.recorder.plot()","a33bce83":"learn.unfreeze()\nlearn.fit_one_cycle(default_epoch, max_lr=slice(3e-6,1e-4)) # <-- ADJUST depending on lr_finder plot outcome","fbb07d3a":"learn.recorder.plot_losses()","928314cc":"interp = ClassificationInterpretation.from_learner(learn)\nlosses,idxs = interp.top_losses()\nlen(data.valid_ds)==len(losses)==len(idxs)","5a0eb388":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","af8861cd":"interp.plot_top_losses(9, figsize=(15,11))","d2037a02":"interp.most_confused(min_val=2)","c0fe4175":"learn.data.valid_dl = data_test.valid_dl\nlearn.unfreeze()","70f13783":"learn.validate(data.valid_dl, metrics = [accuracy,kappa])","b46d7108":"interp = ClassificationInterpretation.from_learner(learn)\nlosses,idxs = interp.top_losses()\nlen(data.valid_ds)==len(losses)==len(idxs)","2606ccac":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","186a44ad":"interp.plot_top_losses(9, figsize=(15,11))","9d647d31":"interp.most_confused(min_val=2)","0baadac0":"learn.export(\"\/kaggle\/working\/model.pkl\")","bf6c7e96":"### Preparations","731cf09d":"Create dataframe of image names and labels. Concatenate train and test to make df_all","234cfe29":"For an explanation of freezing and unfreezing, see fastai L2 and start of L5\n\nFor a summary of how to select LR, see fastai L3","de420d22":"### Unfrozen Training","79beaf22":"Get path of the image folders:","8a937afb":"Get sample count:","1744cde3":"New data set made up of 8 classes, with similar distribution of images numbers as the whole dataset.","dfa0d7ac":"### Model export","eb4f29ba":"Load the path of the image name csvs","0a3c749f":"### Frozen Training","7345a97e":"### Test Set","2f3292d4":"Confusion matrix and top losses:","429272ec":"Set up data bunch, i.e. 1) load image to label; 2) split dataset into training and validation partition","e925336a":"### Analysis of Training","6021c0bf":"### Setup","4af97c8d":"Create image lists of train and test images","38ca9b64":"Plot the losses over epochs","64660377":"Switch the learner's dataloader to the test dataloader (allows the use of the same learner for the test analysis)","3d541633":"Create learner with metrics and ensure output from learn directs to kaggle working directory","cb77d61b":"num_workers is the number of CPUs to use","3ed61008":"### Data gathering\n\nWe import the dataset samples (images, organised in folders) together with their labels (from CSV). We use the labels to split the dataset into training and test partitions (85\/15) by using two separate label files (_train.csv; _test.csv).\nFor automatic preparation of the partitions, see `utils\/dataset_splitter_toCSV.py`.\n\n\nAs for a validation set, we will use ImageDataBunch's built-in splitting to separate off the validation partition.","9a8401df":"**Tweaking watchlist**\nget_transforms: look into how it works and how to adjust (data augmentation) (L6)\n\nnormalize(image_stats): look into"}}