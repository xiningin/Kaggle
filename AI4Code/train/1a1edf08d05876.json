{"cell_type":{"8c17cc58":"code","5535c322":"code","2bb84529":"code","2398c128":"code","1fff4e07":"code","0425c035":"code","cc28d247":"code","e7d6ba98":"code","dbb26654":"code","c4455a13":"code","fbb0dbad":"code","af17b01b":"code","8b0c482a":"code","45af5cdf":"markdown","a8bc8694":"markdown","70e24861":"markdown","d21ce702":"markdown","86c0c110":"markdown","bee18483":"markdown","1b74ab98":"markdown","f271f420":"markdown","7f9dcd31":"markdown","83c5a8e6":"markdown","04232993":"markdown","edfc5049":"markdown","4db9b406":"markdown","162c6172":"markdown","941fc718":"markdown","71a48a0d":"markdown","f58ce76c":"markdown","e9eb125d":"markdown","cd278129":"markdown","935c8cef":"markdown"},"source":{"8c17cc58":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5535c322":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","2bb84529":"E_seller = pd.read_csv('..\/input\/online-shoppers-intention\/online_shoppers_intention.csv')\nE_seller.head()","2398c128":"print(E_seller.info())","1fff4e07":"E_seller[['OperatingSystems', 'Browser', 'Region', 'TrafficType']]=E_seller[['OperatingSystems', 'Browser', 'Region', 'TrafficType']].astype(str)\nE_seller=E_seller.fillna(0)\nprint(E_seller.info())","0425c035":"E_seller.describe()","cc28d247":"# Transaction Not Completed VS. Transaction Completed\n\nreve_count=E_seller['Revenue'].value_counts()\n\ntransaction=reve_count.plot.bar(width=0.8, color=['gray', 'orange']) \ntransaction.set_title('Whether or not the transaction happened?', color='red', fontsize=16)\ntransaction.set_xlabel('Transaction Happened', color='black', fontsize=14)\ntransaction.set_ylabel('Visits Count', color='black', fontsize=14)\ntransaction.set_xticklabels(('False', 'True'), rotation='horizontal')\ntransaction.text(-0.17, 9200, str((~E_seller['Revenue']).sum()), fontsize=15, color='white', fontweight='bold')\ntransaction.text(0.88, 800, str(E_seller['Revenue'].sum()), fontsize=15, color='white', fontweight='bold')\n\nplt.show()","e7d6ba98":"# Sum Visit Weekday vs. Sum Visit Weekend\n\nweekend_count=E_seller['Weekend'].value_counts()\n\nweekend=weekend_count.plot.bar(width=0.8, color=['gray', 'orange']) \nweekend.set_title('Whether or not visits on weekend?', color='red', fontsize=16)\nweekend.set_xlabel('On Weekend', color='black', fontsize=14)\nweekend.set_ylabel('Visits Count', color='black', fontsize=14)\nweekend.set_xticklabels(('False', 'True'), rotation='horizontal')\nweekend.text(-0.12, 8500, str((~E_seller['Weekend']).sum()), fontsize=15, color='white', fontweight='bold')\nweekend.text(0.88, 1800, str(E_seller['Weekend'].sum()), fontsize=15, color='white', fontweight='bold')\n\nplt.show()\n\n\n# Averave Daily Visit Weekday vs. Average Daily Visit Weekend\n\nx=[i for i in range(1,3)]\ny=[(~E_seller['Weekend']).sum()\/5, E_seller['Weekend'].sum()\/2]\n\nbars = plt.bar(x, height=y, width=.7, color=['gray', 'orange'])\n\nxlocs, xlabs = plt.xticks()\nxlocs=[i for i in x]\nxlabs=[i for i in x]\n\nplt.title('Whether more daily average visits on weekday or weekend?', color='red', fontsize=16)\nplt.xlabel('Visit On', color='black', fontsize=14)\nplt.ylabel('Average Daily Visit', color='black', fontsize=14)\nplt.xticks(xlocs, ('Weekday', 'Weekend'))\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x()+0.18, yval-200, yval, fontsize=15, color='white', fontweight='bold')\n    \nplt.show()","dbb26654":"# Average Daily transaction on Weekdays VS. on Weekends\n\nweekend_revenue_avg = E_seller.query('Weekend == True & Revenue == True')['Revenue'].count()\/2\nweekday_revenue_avg = E_seller.query('Weekend == False & Revenue == True')['Revenue'].count()\/5\n\nb=[weekday_revenue_avg, weekend_revenue_avg]\na=[j for j in range(len(b))]\n\nbars = plt.bar(a, height=b, width=.7, color=['gray', 'orange'])\n\nxlocs, xlabs = plt.xticks()\n\nxlocs=[j for j in a]\nxlabs=[j for j in b]\n\nplt.title('Whether more daily transaction on weekdays or weedends?', color='red', fontsize=16)\nplt.xlabel('Transaction On', color='black', fontsize=14)\nplt.ylabel('Average Transaction', color='black', fontsize=14)\nplt.xticks(xlocs, ('Weekday', 'Weekend'))\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x()+0.22, yval-30, yval, fontsize=15, color='white', fontweight='bold')\n    \nplt.show()\n\n\n# Average Daily Transaction Rate on Weekdays VS. on Weekends\n\nweekend_revenue_pct = round(E_seller.query('Weekend == True & Revenue == True')['Revenue'].count()\/E_seller.query('Weekend == True')['Revenue'].count()*100, 2)\nweekday_revenue_pct = round(E_seller.query('Weekend == False & Revenue == True')['Revenue'].count()\/E_seller.query('Weekend == False')['Revenue'].count()*100, 2)\n\nd=[weekday_revenue_pct, weekend_revenue_pct]\nc=[k for k in range(len(d))]\n\nbars = plt.bar(c, height=d, width=.7, color=['gray', 'orange'])\n\nxlocs, xlabs = plt.xticks()\n\nxlocs=[k for k in c]\nxlabs=[k for k in d]\n\nplt.title('Whether higher daily transaction rate on weekdays or weedends?', color='red', fontsize=16)\nplt.xlabel('Transaction On', color='black', fontsize=14)\nplt.ylabel('Average Transaction', color='black', fontsize=14)\nplt.xticks(xlocs, ('Weekday', 'Weekend'))\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x()+0.22, yval-2, str(yval)+'%', fontsize=15, color='white', fontweight='bold')\n","c4455a13":"# Regions Online Visitors In\n\nregion_count=E_seller['Region'].value_counts()\nregion=region_count.plot.barh(width=0.6) \nregion.set_title('Which regions visitors online shopping in?', color='red', fontsize=16)\nregion.set_xlabel('Visitor Count', color='black', fontsize=14)\nregion.set_ylabel('Region', color='black', fontsize=14)\n\nfor i, v in enumerate(region_count):\n    region.text(v+3, i-0.2, str(v), color='black', fontsize=10, fontweight='bold')\n\nplt.show()\n\n\n# Important Regions with Most Online Visitors\n\nregion1 = E_seller.query('Region == \"1\"')['Region'].count()\nregion2 = E_seller.query('Region == \"2\"')['Region'].count()\nregion3 = E_seller.query('Region == \"3\"')['Region'].count()\nregion4 = E_seller.query('Region == \"4\"')['Region'].count()\nregion_rest = E_seller['Region'].count() - region1 - region2 - region3 -region4\n\nregion_value = [region1, region3, region2, region4, region_rest]\nregion_name = ['Region 1', 'Region 3', 'Region 2', 'Region 4', 'Region 5~9']\nregion_colors = ['orange', 'orange', 'gray', 'gray', 'gray']\nplt.pie(region_value, labels=region_name, colors=region_colors, startangle=60, explode=(0.1, 0.06, 0.03, 0.03, 0.03), autopct='%.1f%%', textprops={'fontsize': 12})\nplt.title('Which regions are more import?', color='red', fontsize=16)\n\nplt.show()","fbb0dbad":"# Important Regions with Most Online Transaction\n\nregion1 = E_seller.query('Region == \"1\" & Revenue == True')['Region'].count()\nregion2 = E_seller.query('Region == \"2\" & Revenue == True')['Region'].count()\nregion3 = E_seller.query('Region == \"3\" & Revenue == True')['Region'].count()\nregion4 = E_seller.query('Region == \"4\" & Revenue == True')['Region'].count()\nregion_rest = E_seller.query('Revenue == True')['Region'].count() - region1 - region2 - region3 -region4\n\nregion_value = [region1, region3, region2, region4, region_rest]\nregion_name = ['Region 1', 'Region 3', 'Region 2', 'Region 4', 'Region 5~9']\nregion_colors = ['orange', 'orange', 'gray', 'gray', 'gray']\nplt.pie(region_value, labels=region_name, colors=region_colors, startangle=60, explode=(0.1, 0.06, 0.03, 0.03, 0.03), autopct='%.1f%%', textprops={'fontsize': 12})\nplt.title('Which regions are more valuable?', color='red', fontsize=16)\n\nplt.show()","af17b01b":"# Operating systems visitors use\n\nsystem_count=E_seller['OperatingSystems'].value_counts()\nsystem=system_count.plot.barh(width=0.6) \nsystem.set_title('Which operating systems visitors prefer?', color='red', fontsize=18)\nsystem.set_xlabel('Visitor Count', color='black', fontsize=14)\nsystem.set_ylabel('Operating System', color='black', fontsize=14)\n\nfor i, v in enumerate(system_count):\n    system.text(v+100, i-0.1, str(v), color='black', fontsize=10, fontweight='bold')\n\nplt.show()\n\n\n# Browsers visitors use\n\nbrowser_count=E_seller['Browser'].value_counts()\nbrowser=browser_count.plot.barh(width=0.6) \nbrowser.set_title('Which browser visitors prefer?', color='red', fontsize=18)\nbrowser.set_xlabel('Visitor Count', color='black', fontsize=14)\nbrowser.set_ylabel('Browser', color='black', fontsize=14)\n\nfor i, v in enumerate(browser_count):\n    browser.text(v+100, i-0.2, str(v), color='black', fontsize=10, fontweight='bold')\n\nplt.show()","8b0c482a":"# Valuables related to completed transaction\n\ncorr_df = E_seller.query('Revenue == True & Weekend == True')\nE_seller_corr = corr_df.select_dtypes(include=['float64'])\ncorr = E_seller_corr.corr()\nfig = plt.figure()\nax = fig.add_subplot(111)\ncax = ax.matshow(corr,cmap='coolwarm', vmin=-1, vmax=1)\nfig.colorbar(cax)\nticks = np.arange(0,len(E_seller_corr.columns),1)\nax.set_xticks(ticks)\nplt.xticks(rotation=90)\nax.set_yticks(ticks)\nax.set_xticklabels(E_seller_corr.columns)\nax.set_yticklabels(E_seller_corr.columns)\nplt.show()\n\ncorr.style.background_gradient(cmap='coolwarm')","45af5cdf":"### 7. Which operating systems & browsers visitors prefer?\n","a8bc8694":"### 4. Which regions are important?\n","70e24861":"### STRATEGY INSPIRATION:  \n`Invest more efforts to improve Weekend Online Sales`\n\n`A. Target Region 1 and Region 3 as Key Areas of Promotion`\n\n`B. Optimize Shopping Experience on Operating System #2, #1, and #3 & Browser #2 and #1`\n\n`C. Increase Content Quality for higher Conversion Rate`","d21ce702":"### INSIGHT:  `Less Transaction BUT Higher Transaction Rate, Weekend is More Valuable Time`","86c0c110":"### 3. Whether more transaction on weekday or weedend?","bee18483":"### INSIGHT:  `~60% Visitors are In TWO Regions, Region 1 & Region 3`","1b74ab98":"### 1. How's the Transaction performance?","f271f420":"### 5. Which regions are more valuable?","7f9dcd31":"### INSIGHT:  `Operating System #2, #1, and #3 & Browser #2 and #1 are Most Favorites`","83c5a8e6":"### 8. What helps transaction completion?","04232993":"### INSIGHT:  `First-sight Attractiveness & Longer Page Viewing Morelikely Leads to Revenue`\n","edfc5049":"### Data Anylysis","4db9b406":"#### INSIGHT:  `Only 20% Transaction Completed, Big room for improvement`","162c6172":"### 2. Whether more average visits on weekdays or weekends?","941fc718":"### Data Content","71a48a0d":"To better understand the dataset, here's the descriptions of each column:\n\n1. Administrative: Number of Administrative Pages viewed by an online visitor;\n2. Administrative_Duration: Seconds of Time of Administrative Pages viewed by an online visitor;\n3. Informational: Number of Informational Pages viewed by an online visitor;\n4. Informational_Duration: Seconds of Time of Informational Pages viewed by an online visitor;\n5. ProductRelated: Number of Product Related Pages viewed by an online visitor;\n6. ProductRelated_Duration: Seconds of Time of Product Related Pages viewed by an online visitor;\n7. BounceRates: Percentage of the visitor exiting pages without triggering any additional tasks;\n8. ExitRates: Percentage of pageviews the visitor ended at;\n9. PageValues: Average Page Value calculated by the visitor purchase transaction value divide all pageviews;\n10. SpecialDay: Closeness of the pageviewing day to a special day or holiday;\n11. Month: Month of the pageviewing;\n12. OperatingSystems: Operating system which an online visitor uses for pageviewing;\n13. Browser: Browser which an online visitor uses for pageviewing;\n14. Region: Geographic region where an online visitor locates;\n15. TrafficType: Traffic category of an online visitor belongs to;\n16. VisitorType: Visitor categorized in New Visitor, Returning Visitor, or Other;\n17. Weekend: Whether or not an online visitor visits on weekend;\n18. Revenue: Whether or not an online visitor completes the purchase.","f58ce76c":"# # **HOW TO INCREASE WEEKEND ONLINE SALES**\n\n# # # # *Introduction*\n\nAs COVID-19 continues to spread across the globe and most people of the world are practicing 'Stay Home, Save Life', ONLIE SHOPPING is not only an option anymore, but an essential daily life solution.\n\nWe have reasons to believe that online sales will play a more important role in our business. It's also believed that now is the right time to improved our online performance.\n\nBased on the 'Online Sales Data' we collected as follows, let's take a close look to find facts and inspiration hepls business stratege.","e9eb125d":"### Data Cleansing","cd278129":"### INSIGHT:  `Region 1 Brings In the Most Transactions`","935c8cef":"### INSIGHT:  `~24% Less Visits on Weekends, Potential Needs Attention`"}}