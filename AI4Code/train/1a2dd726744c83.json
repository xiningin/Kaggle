{"cell_type":{"04cf8e1a":"code","08740272":"code","8996d3d2":"code","535aa835":"code","b45cd281":"code","0481b6ba":"code","dc9605c0":"code","26e768f7":"code","96eef668":"code","c0756fa9":"code","a144cb00":"code","8075b4a3":"code","59ededbc":"code","1638a9ab":"code","808275b7":"code","7ea684a5":"code","e4b47f27":"code","11765639":"code","bf3f6408":"code","1596b8ae":"code","5b156809":"code","a96f518b":"code","a386fa87":"code","1af32378":"markdown","843ed929":"markdown","e38790eb":"markdown","79fee36a":"markdown","711ab558":"markdown","6563becb":"markdown","53bd0915":"markdown","bbc27a3f":"markdown","3fcb887d":"markdown","8329c3b5":"markdown","46a05240":"markdown","51a68a71":"markdown","9d97a379":"markdown","a73b0e87":"markdown","5d5438d3":"markdown","726a2508":"markdown","560dbb05":"markdown","ba3fd2af":"markdown","148a8258":"markdown","26b4baf3":"markdown"},"source":{"04cf8e1a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","08740272":"from sklearn import preprocessing\nimport matplotlib.pylab as plt\n%matplotlib inline\nimport xgboost as xgb","8996d3d2":"train_transaction = pd.read_csv('..\/input\/ieee-fraud-detection\/train_transaction.csv', index_col='TransactionID')\ntest_transaction = pd.read_csv('..\/input\/ieee-fraud-detection\/test_transaction.csv', index_col='TransactionID')\n\ntrain_identity = pd.read_csv('..\/input\/ieee-fraud-detection\/train_identity.csv', index_col='TransactionID')\ntest_identity = pd.read_csv('..\/input\/ieee-fraud-detection\/test_identity.csv', index_col='TransactionID')\n\nsample_submission = pd.read_csv('..\/input\/ieee-fraud-detection\/sample_submission.csv', index_col='TransactionID')","535aa835":"train = train_transaction.merge(train_identity, how='left', left_index=True, right_index=True)\ntest = test_transaction.merge(test_identity, how='left', left_index=True, right_index=True)","b45cd281":"train.columns[54:393]","0481b6ba":"train.iloc[:,54:393].corr()","dc9605c0":"train.loc[:,[\"V319\",\"V320\"]].corr()","26e768f7":"train.loc[:,[\"V109\",\"V110\"]].corr()","96eef668":"train.loc[:,[\"V329\",\"V330\"]].corr()","c0756fa9":"train.loc[:,[\"V316\",\"V331\"]].corr()","a144cb00":"train.loc[:,[\"V4\",\"V5\"]].corr()","8075b4a3":"train[\"diff_V319_V320\"] = np.zeros(train.shape[0])\n\ntrain.loc[train[\"V319\"]!=train[\"V320\"],\"diff_V319_V320\"] = 1\n\ntest[\"diff_V319_V320\"] = np.zeros(test.shape[0])\n\ntest.loc[test[\"V319\"]!=test[\"V320\"],\"diff_V319_V320\"] = 1\n\ntrain[\"diff_V109_V110\"] = np.zeros(train.shape[0])\n\ntrain.loc[train[\"V109\"]!=train[\"V110\"],\"diff_V109_V110\"] = 1\n\ntest[\"diff_V109_V110\"] = np.zeros(test.shape[0])\n\ntest.loc[test[\"V109\"]!=test[\"V110\"],\"diff_V109_V110\"] = 1\n\ntrain[\"diff_V329_V330\"] = np.zeros(train.shape[0])\n\ntrain.loc[train[\"V329\"]!=train[\"V330\"],\"diff_V329_V330\"] = 1\n\ntest[\"diff_V329_V330\"] = np.zeros(test.shape[0])\n\ntest.loc[test[\"V329\"]!=test[\"V330\"],\"diff_V329_V330\"] = 1\n\n\ntrain[\"diff_V316_V331\"] = np.zeros(train.shape[0])\n\ntrain.loc[train[\"V331\"]!=train[\"V316\"],\"diff_V316_V331\"] = 1\n\ntest[\"diff_V316_V331\"] = np.zeros(test.shape[0])\n\ntest.loc[test[\"V316\"]!=test[\"V331\"],\"diff_V316_V331\"] = 1\n\n\ntrain[\"diff_V4_V5\"] = np.zeros(train.shape[0])\n\ntrain.loc[train[\"V4\"]!=train[\"V5\"],\"diff_V4_V5\"] = 1\n\ntest[\"diff_V4_V5\"] = np.zeros(test.shape[0])\n\ntest.loc[test[\"V4\"]!=test[\"V5\"],\"diff_V4_V5\"] = 1","59ededbc":"plt.bar(train.groupby(\"diff_V319_V320\").mean().isFraud.index,train.groupby(\"diff_V319_V320\").mean().isFraud.values)\n","1638a9ab":"plt.bar(train.groupby(\"diff_V109_V110\").mean().isFraud.index,train.groupby(\"diff_V109_V110\").mean().isFraud.values)","808275b7":"plt.bar(train.groupby(\"diff_V329_V330\").mean().isFraud.index,train.groupby(\"diff_V329_V330\").mean().isFraud.values)","7ea684a5":"plt.bar(train.groupby(\"diff_V316_V331\").mean().isFraud.index,train.groupby(\"diff_V316_V331\").mean().isFraud.values)","e4b47f27":"plt.bar(train.groupby(\"diff_V4_V5\").mean().isFraud.index,train.groupby(\"diff_V4_V5\").mean().isFraud.values)","11765639":"train = train.drop(\"diff_V109_V110\",axis=1)\ntest = test.drop(\"diff_V109_V110\",axis=1)\n\ntrain = train.drop(\"diff_V329_V330\",axis=1)\ntest = test.drop(\"diff_V329_V330\",axis=1)\n\ntrain = train.drop(\"diff_V316_V331\",axis=1)\ntest = test.drop(\"diff_V316_V331\",axis=1)\n\n\ntrain = train.drop(\"diff_V4_V5\",axis=1)\ntest = test.drop(\"diff_V4_V5\",axis=1)\n","bf3f6408":"print(train.shape)\nprint(test.shape)\n\ny_train = train['isFraud'].copy()\n\n# Drop target, fill in NaNs\nX_train = train.drop('isFraud', axis=1)\nX_test = test.copy()\nX_train = X_train.fillna(-999)\nX_test = X_test.fillna(-999)","1596b8ae":"del train, test, train_transaction, train_identity, test_transaction, test_identity\n","5b156809":"# Label Encoding\nfor f in X_train.columns:\n    if X_train[f].dtype=='object' or X_test[f].dtype=='object': \n        lbl = preprocessing.LabelEncoder()\n        lbl.fit(list(X_train[f].values) + list(X_test[f].values))\n        X_train[f] = lbl.transform(list(X_train[f].values))\n        X_test[f] = lbl.transform(list(X_test[f].values))   ","a96f518b":"clf = xgb.XGBClassifier(n_estimators=500,\n                        n_jobs=4,\n                        max_depth=9,\n                        learning_rate=0.05,\n                        subsample=0.9,\n                        colsample_bytree=0.9,\n                        missing=-999)\n\nclf.fit(X_train, y_train)","a386fa87":"sample_submission['isFraud'] = clf.predict_proba(X_test)[:,1]\nsample_submission.to_csv('simple_xgboost.csv')","1af32378":"# Before going to main content\nnew feature was being created.\n\nV1 V319-V320\n\nV7 V109-V110\n\nV12 V329-V330\n\nV14 V316-V331\n\nV18 V4-V5\n \n\n**Sorry, I want to update quickly this kernel, but I can't because these days kernel's commiting is too busy! **\n\nThis kernel is using official kernel for judging whether my new feature is meaningful.\n\nThe official kernel is here(https:\/\/www.kaggle.com\/inversion\/ieee-simple-xgboost)\n\nAnd that the feature which I made is explained in detail here ( https:\/\/www.kaggle.com\/yasagure\/how-do-we-treat-with-similar-columns-v319-v321\/edit\/run\/18988983)","843ed929":"# Feature engineering\nI picked up these 3 pairs of columns. ","e38790eb":"# How V-feature is?","79fee36a":"# Is it useful?\nThe score of V5 is 0.9367.\n\nThe official score was 0.9366.\n\nThe score seem to be  improved.\n\nThe score of V8(V109-V110 added) is not unknown. Soon, I tell you it. \u2190the diff V109-V110 does not seem to be useful.\n\nAlso, the diff V329-V330 does not seem to be useful.","711ab558":"# look at appearance of this new feature ","6563becb":"There seem to be difference, but the gap of \"diff_V109_V110\" is small.\n\nIn Version7, I found that \"diff_V109_V110\" is not meaningful. I deleted.\n\nIn Version13, I found that \"diff_V329_V330\" is not meaningful. I deleted.\n\nIn Version20, I found that \"diff_V4_V5\" is not meaningful. I deleted.\n\nI feel that when the gap is big, the column is meaningful.","53bd0915":"# Introduction - Do they match?\n**Some people throw away similar columns, but it is good thing?**\n\nEveryone found that there is a lot of similar columns in this dataset.\n\nV319-V320 and V109-V110 are good example of them.\n\nHow should we \"use\" it?\n\nMost people throw away the data, but I think that I can get useful information from it.\n\n**My idea is paying attention to whether they match each other.**","bbc27a3f":"## V109-V110","3fcb887d":"V features have a lot of similar columns.\n\nLet's look at it.","8329c3b5":"## V329-V330","46a05240":"# data cleaning","51a68a71":"## Label Encoding\nWe cannot use literal features for XGB, so these features are changes.\n\nFor example, [H,G,W,A] \u2192[0,1,2,3]\n\nThe number of the words is often related to the numeral([0,1,2,3]).","9d97a379":"## V316-V331","a73b0e87":"# load dataset","5d5438d3":"We want to both of data -\"identity\" and \"transaction\"-\n\nThe identity data should be added to transaction data. ","726a2508":"## V4-V5","560dbb05":"# Conclusion\nSome people think this is useful, but others not.\n\nIf you interested in it, please use for your model and judge wheter these columns are useful for your model.","ba3fd2af":"## V319-V320","148a8258":"# Model","26b4baf3":"They seem to be similar."}}