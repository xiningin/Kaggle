{"cell_type":{"0270c313":"code","a403d3eb":"code","2f6053cf":"code","7e554e43":"code","3a9acfb6":"code","03173a22":"code","75c1da90":"code","add9b313":"code","e7c561cc":"code","9c401b1a":"code","eaa3d058":"code","bd6ec31d":"code","54ad92ea":"code","190237e0":"code","371a9880":"code","2bcc472d":"markdown","e97b60e8":"markdown","3ec9e8be":"markdown","5035ee9f":"markdown","8e07442f":"markdown","bd4065ba":"markdown","26e7f352":"markdown","1db70e7f":"markdown","ed5ea467":"markdown","6730d338":"markdown","f71c66d7":"markdown","00967cf8":"markdown","1a0efd75":"markdown","91230e37":"markdown","435ab75b":"markdown"},"source":{"0270c313":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a403d3eb":"# import data\ndata = pd.read_csv(\"..\/input\/column_2C_weka.csv\")","2f6053cf":"data.head()","7e554e43":"data.tail()","3a9acfb6":"data[\"class\"].unique()","03173a22":"data.info()","75c1da90":"# create new two datas\nA = data[data[\"class\"] == \"Abnormal\"]\nN = data[data[\"class\"] == \"Normal\"]","add9b313":"# visualize\nplt.scatter(A.pelvic_radius,A.sacral_slope,color = \"red\",label = \"Abnormal\")\nplt.scatter(N.pelvic_radius,N.sacral_slope,color = \"blue\",label = \"Normal\")\nplt.xlabel(\"pelvic_radius\")\nplt.ylabel(\"sacral_slope\")\nplt.legend()\nplt.show()","e7c561cc":"# class column's type change to integer.\ndata[\"class\"] = [1 if each == \"Abnormal\" else 0 for each in data[\"class\"] ]\ndata.head()","9c401b1a":"y = data[\"class\"].values\nx_data = data.loc[:,data.columns != 'class']","eaa3d058":"# normalization\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))","bd6ec31d":"# train test split\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3, random_state=1)","54ad92ea":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3)  #n_neighbors = k\nknn.fit(x_train,y_train)  # the model is creating\nknn.predict(x_test)  # prediction ","190237e0":"print(\"{} nn score:{}\".format(3,knn.score(x_test,y_test)))","371a9880":"# find k value\nscore_list = []  # we store the values we find in this list.\nfor each in range(1,25):\n    knn2 = KNeighborsClassifier(n_neighbors = each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n    \n# visualize\nplt.plot(range(1,25),score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","2bcc472d":"We don't need to cleaning data because samples full and types are float.","e97b60e8":"We should split dataframe as train and test. Train part will learn and test part will prediction.","3ec9e8be":"Then examine the data set. We should get information about our data.","5035ee9f":"We can see high accuracy when k=20.","8e07442f":"**KNN**\n\nAccording to this algorithm, which is used in classification, feature extraction during classification is used to look at the closeness of the new individual to be categorized to k of the previous individuals.\nFor example, you want to classify a new element for k = 3. in this case the nearest 3 of the old classified elements are taken. If these elements are included in the class, the new element is also included in that class. The euclide distance can be used in the distance calculation.","bd4065ba":"Normalization:\nRescaling data to have values between 0 and 1. This is usually called feature scaling. One possible formula to achieve this is: (x - min(x))\/(max(x)-min(x))","26e7f352":"Class column's type should be integer or categorical.","1db70e7f":"Let's crate x and y.","ed5ea467":"**Hi, i make knn algorithm in the kernel. I hope you like it.**","6730d338":"Class column has two sample: Abnormal and Normal. We use binary classification.","f71c66d7":"Firstly append dataframe.","00967cf8":"Let's create KNN model.","1a0efd75":"How successful we estimate?","91230e37":"What should be best successfully k value?","435ab75b":"Thank you for reviewing my kernel. See you again."}}