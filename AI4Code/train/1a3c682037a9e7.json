{"cell_type":{"89f8ee8f":"code","486a4e87":"code","2a3f1358":"code","d17bf2ce":"code","dddb3f68":"code","cb3ded33":"code","30471ca4":"code","559f34de":"code","4cc3b792":"code","56da447a":"code","80461f5b":"code","5fd2ccb1":"code","cff720ae":"code","56fd497c":"code","f48bef45":"code","d4426bb8":"code","f1ddedda":"code","ecd87f4b":"code","dd8ebcf7":"code","0065a68a":"code","b9f34031":"code","d7cdecba":"code","c688dd94":"code","dbfeb8e8":"code","3ef6f7a5":"code","86fa8740":"code","0a3fed25":"code","b60b8f30":"markdown","b924485f":"markdown","372393d7":"markdown","cf040656":"markdown","18528740":"markdown","4dffd8db":"markdown","9ce5d209":"markdown","0eec390f":"markdown","48e36e3f":"markdown","6c567dd3":"markdown","f0d0890d":"markdown","4d8a3686":"markdown","4e3a812f":"markdown"},"source":{"89f8ee8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","486a4e87":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nplt.style.use(['ggplot'])\n# read training file\ndf_train=pd.read_csv('\/kaggle\/input\/airplane-accidents-severity-dataset\/train.csv')\ndf_train.head(5)","2a3f1358":"#if any nan\ndf_train.isnull().sum()","d17bf2ce":"# Replace All strings into integres\nreplacements = {\n  1: 'Minor_Damage_And_Injuries',\n  2: 'Significant_Damage_And_Fatalities',\n  3: 'Significant_Damage_And_Serious_Injuries',\n  4: 'Highly_Fatal_And_Damaging'\n}\n#df_train.Severity=df_train['Severity'].replace(replacements, inplace=True)","dddb3f68":"from scipy.stats import norm\nsns.distplot(df_train.Safety_Score, fit=norm, kde=False)","cb3ded33":"g = sns.boxplot(x=\"Safety_Score\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Safety_Score\", y=\"Severity\", data=df_train, color=\".2\")","30471ca4":"sns.distplot(df_train.Days_Since_Inspection,fit=norm, kde=False)","559f34de":"g = sns.boxplot(x=\"Days_Since_Inspection\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Days_Since_Inspection\", y=\"Severity\", data=df_train, color=\".2\")","4cc3b792":"sns.distplot(df_train.Total_Safety_Complaints, fit=norm, kde=False)","56da447a":"g = sns.boxplot(x=\"Total_Safety_Complaints\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Total_Safety_Complaints\", y=\"Severity\", data=df_train, color=\".2\")","80461f5b":"sns.distplot(df_train.Control_Metric, fit=norm, kde=False)","5fd2ccb1":"g = sns.boxplot(x=\"Control_Metric\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Control_Metric\", y=\"Severity\", data=df_train, color=\".2\")","cff720ae":"sns.distplot(df_train.Turbulence_In_gforces, fit=norm, kde=False)","56fd497c":"g = sns.boxplot(x=\"Turbulence_In_gforces\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Turbulence_In_gforces\", y=\"Severity\", data=df_train, color=\".2\")","f48bef45":"sns.distplot(df_train.Cabin_Temperature, fit=norm, kde=False)","d4426bb8":"g = sns.boxplot(x=\"Cabin_Temperature\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Cabin_Temperature\", y=\"Severity\", data=df_train, color=\".2\")","f1ddedda":"sns.distplot(df_train.Accident_Type_Code, fit=norm, kde=False)","ecd87f4b":"g = sns.boxplot(x=\"Accident_Type_Code\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Accident_Type_Code\", y=\"Severity\", data=df_train, color=\".2\")","dd8ebcf7":"sns.distplot(df_train.Max_Elevation, fit=norm, kde=False)","0065a68a":"g = sns.boxplot(x=\"Max_Elevation\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Max_Elevation\", y=\"Severity\", data=df_train, color=\".2\")","b9f34031":"sns.distplot(df_train.Violations, fit=norm, kde=False)","d7cdecba":"g = sns.boxplot(x=\"Violations\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Violations\", y=\"Severity\", data=df_train, color=\".2\")","c688dd94":"sns.distplot(df_train.Adverse_Weather_Metric, fit=norm, kde=False)","dbfeb8e8":"g = sns.boxplot(x=\"Adverse_Weather_Metric\", y=\"Severity\", data=df_train, whis=np.inf)\ng = sns.swarmplot(x=\"Adverse_Weather_Metric\", y=\"Severity\", data=df_train, color=\".2\")","3ef6f7a5":"# dropping Accident Id\ndf_train.drop('Accident_ID',1,inplace=True)","86fa8740":"g = sns.PairGrid(df_train)\ng = g.map_diag(plt.hist, edgecolor=\"b\")\ng = g.map_offdiag(plt.scatter, edgecolor=\"w\", s=40)","0a3fed25":"g = sns.PairGrid(df_train)\ng = g.map_upper(plt.scatter)\ng = g.map_lower(sns.kdeplot, cmap=\"Blues_d\")\ng = g.map_diag(sns.kdeplot, lw=3, legend=False)","b60b8f30":"3. Total_Safety_Complaints","b924485f":"7. Accident_Type_Code","372393d7":"1. Safety_Score ","cf040656":"4. Control_Metric","18528740":"8. Max_Elevation","4dffd8db":"* **Columns Visualisation**","9ce5d209":"2. Days_Since_Inspection","0eec390f":"9. Violations","48e36e3f":"10. Adverse_Weather_Metric","6c567dd3":"*Here is just the visualization of every field, If you like please upvote it.*","f0d0890d":"5. Turbulence_In_gforces","4d8a3686":"* ***Scatter and density plots:***","4e3a812f":"6. Cabin_Temperature"}}