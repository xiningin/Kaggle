{"cell_type":{"e146c50c":"code","1658cc02":"code","af3fe5da":"code","37509cc2":"code","2bbd7ef4":"markdown"},"source":{"e146c50c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1658cc02":"!pip install -q -U transformers","af3fe5da":"from transformers import AutoTokenizer\ntokenizer = AutoTokenizer.from_pretrained('distilbert-base-uncased')","37509cc2":"\nmaxlen = 50\n\n#tokens\nmaxqnans = np.int((maxlen-20)\/2)\ncorpus_tokenized = [\"[CLS] \"+\n             \" \".join(tokenizer.tokenize(re.sub(r'[^\\w\\s]+|\\n', '', \n             str(txt).lower().strip()))[:maxqnans])+\n             \" [SEP] \" for txt in corpus]\n\n#masks\nmasks = [[1]*len(txt.split(\" \")) + [0]*(maxlen - len(\n           txt.split(\" \"))) for txt in corpus_tokenized]\n\n#idx\nidx = [tokenizer.encode(seq.split(\" \")) for seq in txt_seq]\n    \n# padding\ntxt_seq = [txt + \" [PAD]\"*(maxlen-len(txt.split(\" \"))) if len(txt.split(\" \")) != maxlen else txt for txt in corpus_tokenized]\n    \n#segments\nsegments = [] \nfor seq in txt_seq:\n    temp, i = [], 0\n    for token in seq.split(\" \"):\n        temp.append(i)\n        if token == \"[SEP]\":\n             i += 1\n    segments.append(temp)\n    \n#vector\nX_train = [np.asarray(idx, dtype='int32'), \n           np.asarray(masks, dtype='int32'), \n           np.asarray(segments, dtype='int32')]","2bbd7ef4":"# https:\/\/stackoverflow.com\/questions\/69744494\/textencodeinput-must-be-uniontextinputsequence-tupleinputsequence-inputseque\/69757133?noredirect=1#comment123469641_69757133"}}