{"cell_type":{"d2473483":"code","90895a73":"code","2b75c307":"code","ebb93db2":"code","4501a938":"code","1fb089bd":"code","09b067cb":"code","7e5020fe":"code","590ebb14":"code","2c01591c":"code","4f11b976":"code","d24815ef":"code","d7b949a2":"markdown","3f810873":"markdown","d9750e11":"markdown","393a0ea9":"markdown","0c2de77e":"markdown","583be477":"markdown","649d5f8a":"markdown","487184f8":"markdown","a86c57f2":"markdown","41aac542":"markdown","479a9048":"markdown","74a68b49":"markdown"},"source":{"d2473483":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly as py\nimport plotly_express as px\nimport plotly.graph_objects as go\nfrom matplotlib import pyplot as plt\nimport folium\nfrom folium import plugins\nfrom plotly.offline import init_notebook_mode, iplot\nimport os\ninit_notebook_mode()\n\ndf = pd.read_csv('\/kaggle\/input\/cornell-car-rental-dataset\/CarRentalData.csv')","90895a73":"df_fuelType = pd.DataFrame(df.fuelType.value_counts()).reset_index()\ndf_fuelType.rename(columns = {'index':'fuelType', 'fuelType':'count'}, inplace=True)\n\nfig = px.pie(df_fuelType, values = 'count', names='fuelType', title = 'Fuel Type of Rented Cars')\nfig.show()","2b75c307":"print(\"Rating Statistics:\")\nprint(df['rating'].describe())\n\nfig = px.histogram(df, x = 'rating', title = 'Histogram of Rental Car Rating')\nfig.show()\n","ebb93db2":"print(\"Renter Trips Taken Statistics:\")\nprint(df['renterTripsTaken'].describe())\n\nfig = px.histogram(df, x = 'renterTripsTaken', title = 'Histogram of Renter Trips Taken')\nfig.show()","4501a938":"print(\"Review Count Statistics:\")\nprint(df['reviewCount'].describe())\n\nfig = px.histogram(df, x = 'reviewCount', title = 'Histogram of Review Count')\nfig.show()","1fb089bd":"def get_average_lat_long(city, ltype):\n    choices = df[df['location.city'] == city]\n    lat = choices['location.latitude'].mean()\n    long = choices['location.longitude'].mean()\n    if ltype == 0:\n        return lat\n    else:\n        return long\n\ndf_location = pd.DataFrame(df['location.city'].value_counts()).reset_index()\ndf_location.rename(columns = {'index':'city', 'location.city':'count'}, inplace=True)\ndf_location['latitude'] = df_location['city'].apply(lambda x: get_average_lat_long(x, 0))\ndf_location['longitude'] = df_location['city'].apply(lambda x: get_average_lat_long(x, 1))\ndf_location['text'] = df_location['city'] + '<br>Car Rentals ' + (df_location['count']).astype(str)\n\nlimits = [(0,2),(3,10),(11,50),(51,100),(101,1000)]\ncolors = [\"royalblue\",\"crimson\",\"lightseagreen\",\"orange\",\"lightgrey\"]\ncities = []\nscale = 0.5\n\nfig = go.Figure()\n\nfor i in range(len(limits)):\n    lim = limits[i]\n    df_sub = df_location[lim[0]:lim[1]]\n    fig.add_trace(go.Scattergeo(\n        locationmode = 'USA-states',\n        lon = df_sub['longitude'],\n        lat = df_sub['latitude'],\n        text = df_sub['text'],\n        marker = dict(\n            size = df_sub['count']\/scale,\n            color = colors[i],\n            line_color='rgb(40,40,40)',\n            line_width=0.5,\n            sizemode = 'area'\n        ),\n        name = '{0} - {1}'.format(lim[0],lim[1])))\n\nfig.update_layout(\n        title_text = 'Car Rentals by City<br>(Click legend to toggle traces)',\n        showlegend = True,\n        geo = dict(\n            scope = 'usa',\n            landcolor = 'rgb(217, 217, 217)',\n        )\n    )\n\nfig.show()","09b067cb":"\ndf_state = pd.DataFrame(df['location.state'].value_counts()).reset_index()\ndf_state.rename(columns = {'index':'state', 'location.state':'count'}, inplace=True)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df_state['state'], # Spatial coordinates\n    z = df_state['count'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = \"Number of Cars Rented\",\n))\n\nfig.update_layout(\n    title_text = 'Car Rentals by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","7e5020fe":"df_owner = pd.DataFrame(df['owner.id'].value_counts()).reset_index()\ndf_owner.rename(columns = {'index':'owner_id', 'owner.id':'number of rental cars'}, inplace=True)\n\nprint('Total Number of Unique Rental Cars per Owner Statistics:')\nprint(df_owner['number of rental cars'].describe())\n\n\nfig = px.histogram(df_owner, x = 'number of rental cars', title='Total Number of Unique Rental Cars per Owner')\nfig.show()","590ebb14":"print('Daily Rate of Car Rental Statistics:')\nprint(df['rate.daily'].describe())\n\nfig = px.histogram(df, x = 'rate.daily', title='Daily Rate of Car Rental')\nfig.show()","2c01591c":"df_make_model = df.groupby(['vehicle.make', 'vehicle.model']).size().reset_index()\ndf_make_model.rename(columns = {0:'count'}, inplace=True)\ndf_make_model.replace('Mercedes-benz', 'Mercedes-Benz', inplace=True)\ndf_make_model['make_count'] = df_make_model['vehicle.make'].apply(lambda x : df_make_model[df_make_model['vehicle.make'] == x]['count'].sum())\ndf_make_model.sort_values(by = 'make_count', ascending=False, inplace=True)\n\nfig = px.bar(df_make_model[df_make_model['make_count'] >45], x = 'vehicle.make', y='count', color = 'vehicle.model', title='Make and Model of Top 25 Most Rented Cars')\nfig.update_layout(showlegend = False)\nfig.show()","4f11b976":"df_vehicleType = pd.DataFrame(df['vehicle.type'].value_counts()).reset_index()\ndf_vehicleType.rename(columns = {'index':'vehicle.type', 'vehicle.type':'count'}, inplace=True)\n\nfig = px.pie(df_vehicleType, values = 'count', names='vehicle.type', title = 'Vehicle Type of Rented Cars')\nfig.show()","d24815ef":"print('Vehicle Year Statistics:')\nprint(df['vehicle.year'].describe())\n\nfig = px.histogram(df, x = 'vehicle.year', title='Year of Vehicle')\nfig.show()","d7b949a2":"Daily Rate:","3f810873":"Make and Model:","d9750e11":"Owner Id:","393a0ea9":"Vehicle Year:","0c2de77e":"# 1. Basic Data Inspection\nLet's make some plots for each column to inspect some key aspects of the data","583be477":"Renter Trips Taken:","649d5f8a":"Fuel Type:","487184f8":"Further Analysis Coming Soon... Please upvote if you enjoyed!","a86c57f2":"Vehicle Type:","41aac542":"Review Count:","479a9048":"Rating: ","74a68b49":"Location:"}}