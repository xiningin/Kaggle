{"cell_type":{"249fb622":"code","8fb4219e":"code","67167468":"code","9c3b3ecb":"code","a545f1e4":"code","2ce4358f":"code","414ff6c1":"code","8d2fc179":"code","716b8fed":"code","14799b6c":"code","951c8158":"code","97317654":"code","c43630c3":"code","4a9c93dc":"code","ab60f9e7":"code","80ee9817":"code","6df66875":"code","e42ef26e":"code","1159f5cf":"code","d0ec09e4":"markdown","61e7a8c9":"markdown","35c21039":"markdown","45f724b4":"markdown","190fd13b":"markdown","1064113e":"markdown","911e6a4a":"markdown","f344bf96":"markdown"},"source":{"249fb622":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8fb4219e":"!pip install klib\nimport klib","67167468":"df_reviews = pd.read_csv('\/kaggle\/input\/airbnb-eda\/reviews.csv')\ndf_calendar = pd.read_csv('\/kaggle\/input\/airbnb-eda\/calendar.csv')\ndf_listings = pd.read_csv('\/kaggle\/input\/airbnb-eda\/listings.csv')","9c3b3ecb":"df_reviews.head()\ndf_calendar.head()\ndf_listings.head()","a545f1e4":"df_reviews.info()\n#df_reviews.isnull().any()  # C\u00f3digo alternativo.","2ce4358f":"df_calendar.info()","414ff6c1":"df_listings.info()","8d2fc179":"df_listings['host_is_superhost'] = df_listings['host_is_superhost'].map({'f':'False', 't':'True'})\ndf_listings['price'] = df_listings['price'].apply(lambda p: float(p.replace('$', '').replace(',','')))","716b8fed":"#df_listings.columns\ndf_listings_parcial = df_listings [['id', 'host_id', \n       'host_response_rate', 'host_acceptance_rate',\n       'host_is_superhost','host_listings_count', 'host_total_listings_count', \n       'host_has_profile_pic', 'host_identity_verified', 'accommodates',  'bedrooms', 'amenities', 'price', 'number_of_reviews',\n       'number_of_reviews_ltm', 'number_of_reviews_l30d', 'review_scores_rating', 'review_scores_accuracy',\n       'review_scores_cleanliness', 'review_scores_checkin',\n       'review_scores_communication', 'review_scores_location',\n       'review_scores_value', 'instant_bookable',\n       'calculated_host_listings_count',\n       'calculated_host_listings_count_entire_homes',\n       'calculated_host_listings_count_private_rooms',\n       'calculated_host_listings_count_shared_rooms', 'reviews_per_month']]\n","14799b6c":"df_listings_parcial.head(30)\n#df_listings_parcial.info()\n#df_listings_parcial.shape","951c8158":"klib.corr_mat(df_listings_parcial)","97317654":"klib.dist_plot(df_listings_parcial.iloc[:,2:22])","c43630c3":"plt.figure(figsize = (20, 12))\ncorr = df_listings_parcial.corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\nsns.set(style = 'whitegrid')\nsns.heatmap(corr, mask=mask, \n            cmap='coolwarm', \n            center=0,\n            square=True, \n            linewidths=.6)\nplt.title(\"Correla\u00e7\u00e3o das vari\u00e1veis - Listing Parcial\", fontsize = 17)\nplt.show()","4a9c93dc":"df_listings_parcial['host_is_superhost'].map({'f':False, 't':True})\ndf_listing_superhost = df_listings_parcial[['host_listings_count','accommodates', 'bedrooms',\n                                            'review_scores_checkin', 'review_scores_communication','review_scores_value', 'host_is_superhost']].copy()\n\n# Estilo escolhido dentre as op\u00e7\u00f5es do seaborn\n\n\nsns.set(style=\"ticks\")\nsns.pairplot(df_listing_superhost, hue='host_is_superhost')\n#plt.suptitle ('Vis\u00e3o gr\u00e1fica de 6 features par \u00e0 par', fontsize=20)","ab60f9e7":"df_gastos = df_listings[['price', 'host_is_superhost', 'neighbourhood_cleansed','property_type']]\ndf_gastos.head(50)","80ee9817":"#fig, ax = plt.subplots(figsize= (12, 20) )\n\nsns.set_theme(style=\"ticks\", color_codes=True)\nsns.catplot(y= \"neighbourhood_cleansed\", x=\"price\", data=df_gastos,  height=8,  aspect=15\/15)","6df66875":"sns.catplot(y= \"property_type\", x=\"price\", data=df_gastos,  height=12,  aspect=15\/15)","e42ef26e":"sns.catplot(y= \"neighbourhood_cleansed\", x=\"price\",  kind=\"box\", data=df_gastos,  height=8,  aspect=30\/15)","1159f5cf":"sns.catplot(y= \"neighbourhood_cleansed\", x=\"price\",  kind=\"violin\", hue= 'host_is_superhost', split=True,  data=df_gastos,  height=12,  aspect=4\/2)","d0ec09e4":"### Vamos analisar a distribui\u00e7\u00e3o de algumas vari\u00e1veis. Podemos usar 'slices' no dataframe e avaliar outras vari\u00e1veis.","61e7a8c9":"### Podemos usar a fun\u00e7\u00e3o 'pairplot' do Seaborn para avaliarmos as distribui\u00e7\u00f5es de diversas 'features' (atributos dos dados) frente a uma vari\u00e1vel escolhida como refer\u00eancia. No caso abaixo escolhi um conjunto de 'features' sendo avaliadas dado que um determinado 'Host' seja um 'superhost' ou n\u00e3o. Esta mesma ideia poder\u00e1 ser aplicada a outras vari\u00e1veis discretas dos nossos dados.","35c21039":"### Com a fun\u00e7\u00e3o DataFrame.info podemos obter informa\u00e7\u00f5es como o n\u00famero de linhas de cada DtaFrame bem como se h\u00e1 valores nulos e o seu Dtype.","45f724b4":"#### Avaliar o cabe\u00e7alho de cada DataFrame","190fd13b":"### A bibilioteca a seguir do Seaborn nos permite plotar a correla\u00e7\u00e3o das vari\u00e1veis (Conceito de heatmap)","1064113e":"### Esta matriz nos mostra as correla\u00e7\u00f5es de alguns atributos escolhidos.","911e6a4a":"### Vamos trabalhar com um subconjunto do dataframe Df_listings  acima. Iniciando com os dados n\u00famericos pela facilidade de uso das fun\u00e7\u00f5es.","f344bf96":"### Altera\u00e7\u00f5es de alguns dados para melhor tratamento na apresenta\u00e7\u00e3o dos dados."}}