{"cell_type":{"c5ffc78e":"code","9672a168":"code","4699fbab":"code","6eeb62e6":"code","45952cff":"code","82e7f063":"code","e2b99eaf":"code","4617d2ef":"code","127ee2ed":"code","d6ed0565":"markdown","c2e9c099":"markdown"},"source":{"c5ffc78e":"import pandas as pd\nimport numpy as np\nimport sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nimport matplotlib.gridspec as gridspec\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable","9672a168":"confirmed = pd.read_csv('..\/input\/Confirmed.csv')\nfig,ax = plt.subplots(figsize = (20,20))\ntitle = plt.title('Confirmed Cases by Location', fontsize=20)\ntitle.set_position([0.5, 1.05])\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nworld.plot(ax = ax, color='grey', edgecolor='black',linewidth=1, alpha=0.1)\nsns.scatterplot(confirmed.Lon,confirmed.Lat,size=confirmed[\"4_2\"], ax=ax)","4699fbab":"confirmed_china = confirmed[confirmed[\"Country\"] == 'Mainland China']\nfig,ax = plt.subplots(figsize = (20,20))\ntitle = plt.title('Confirmed Cases in China', fontsize=20)\ntitle.set_position([0.5, 1.05])\nchina = gpd.read_file('..\/input\/province.shp')\nchina.plot(ax = ax, color='grey', edgecolor='black',linewidth=1, alpha=0.1)\nsns.scatterplot(confirmed_china.Lon,confirmed_china.Lat,size=confirmed_china[\"4_2\"], ax=ax)","6eeb62e6":"\nconfirmed_by_country = pd.read_csv('..\/input\/confirmed_by_country.csv')\nworld_confirmed = world.merge(confirmed_by_country, on='name', how='left')\nworld_confirmed[\"TotalConfirmed\"].fillna(0, inplace=True)","45952cff":"fig,ax = plt.subplots(figsize = (20,10))\ntitle = plt.title('Confirmed Cases Comparison by Country', fontsize=20)\ntitle.set_position([0.5, 1.05])\nworld_confirmed.plot( column='TotalConfirmed', \n                  cmap='YlOrRd', legend=True, ax=ax\n                  ,vmin=0, vmax=50\n                  ,edgecolor='black',linewidth=0.1)\nax.axes.get_xaxis().set_visible(False)\nax.axes.get_yaxis().set_visible(False)","82e7f063":"confirmed_china_province = pd.read_csv('..\/input\/confirmed_china_province.csv')\nchina_confirmed = china.merge(confirmed_china_province, on='NAME', how='left')\nchina_confirmed[\"TotalConfirmed\"].fillna(0, inplace=True)","e2b99eaf":"fig,ax = plt.subplots(figsize = (20,10))\ntitle = plt.title('Confirmed Cases in China by Provinces', fontsize=20)\ntitle.set_position([0.5, 1.05])\nchina_confirmed.plot( column='TotalConfirmed', \n                  cmap='YlOrRd', legend=True, ax=ax\n                  ,vmin=1, vmax=1500\n                  ,edgecolor='black',linewidth=0.1)\nax.axes.get_xaxis().set_visible(False)\nax.axes.get_yaxis().set_visible(False)","4617d2ef":"recovery_percentage = pd.read_csv('..\/input\/recovery_percentage.csv')\nchina_recovery_percentage = china.merge(recovery_percentage, on='NAME', how='left')\nchina_recovery_percentage[\"RecoveryPercentage\"].fillna(0, inplace=True)\n\ndeath_percentage = pd.read_csv('..\/input\/Death_percentage.csv')\nchina_death_percentage = china.merge(death_percentage, on='NAME', how='left')\nchina_death_percentage[\"DeathPercentage\"].fillna(0, inplace=True)","127ee2ed":"f,ax=plt.subplots(1,2,figsize=(20,5))\n\nchina_recovery_percentage.plot( column='RecoveryPercentage', \n                  cmap='Greens', legend=True, ax=ax[0]\n                  ,edgecolor='black',linewidth=0.1)\n\nchina_death_percentage.plot( column='DeathPercentage', \n                  cmap='YlOrRd', legend=True, ax=ax[1]\n                  ,edgecolor='black',linewidth=0.1)\n\nf.suptitle('Recovered and Death Percentages', fontsize=14)\nax[0].set_title('Recovered Percent', fontsize=12)\nax[1].set_title('Death Percent', fontsize=12)\nax[0].axes.get_xaxis().set_visible(False)\nax[0].axes.get_yaxis().set_visible(False)\nax[1].axes.get_xaxis().set_visible(False)\nax[1].axes.get_yaxis().set_visible(False)","d6ed0565":"## To Be Continued....","c2e9c099":"## Spatial Analysis"}}