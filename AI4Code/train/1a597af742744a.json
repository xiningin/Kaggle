{"cell_type":{"dd3085dc":"code","ac4c16b5":"code","aaa95298":"code","4a376c90":"code","51f8f4f8":"code","fe151fd9":"code","896897d1":"code","1b53da65":"code","503df0fe":"code","c5ea640f":"code","2c79853e":"code","23c8a3c8":"code","81e4c323":"code","b095c3bc":"code","b7ec2bc7":"code","c650bc19":"code","d3018090":"code","36e82cce":"code","1b11c50a":"code","4e280b73":"code","dd1a86e3":"code","4488e93a":"code","a302a55f":"code","7a25bcfa":"code","f01853da":"code","d0369b25":"code","be71a5fe":"code","12223fbf":"code","38e5d987":"code","8f718f39":"code","0bd20357":"code","8b654084":"code","d46df529":"code","1fd46c42":"code","f18a95b0":"code","ed3eeb4c":"code","e815fcc5":"code","290fa8db":"code","7d84b42e":"code","ab792727":"code","10b1aa50":"code","8eb7315f":"code","421f4ef4":"code","fa1f1dff":"code","72f2fe08":"code","198c3f4a":"code","c3dcca9d":"code","100cc70e":"code","6daaddf2":"code","022b91da":"code","50d3d940":"code","13716a7a":"code","67c19740":"markdown","35fb4026":"markdown","53d22b3e":"markdown","7d30b595":"markdown","f7188319":"markdown","95f20438":"markdown","3fe7c9ce":"markdown","5e6acfc9":"markdown","fa61f4eb":"markdown","bf9162b5":"markdown","efe42fe8":"markdown","46e2767c":"markdown","755b88a6":"markdown","479389e4":"markdown","0750d3b4":"markdown","b93c7aa9":"markdown","d2216879":"markdown","58c59b30":"markdown","583a85a4":"markdown","896bfa96":"markdown","2468d50a":"markdown","3e336d6c":"markdown","c449c58e":"markdown","a5b7bb21":"markdown","e73fc973":"markdown","a56a008d":"markdown","f4e9e1f4":"markdown","80753c13":"markdown","43486bf4":"markdown","1a169baf":"markdown","e866c9a4":"markdown","73ab6338":"markdown"},"source":{"dd3085dc":"import pandas as pd","ac4c16b5":"import numpy as np","aaa95298":"import matplotlib.pyplot as plt","4a376c90":"### Import Data","51f8f4f8":"data = pd.read_csv(\"..\/input\/uber-request-data\/Uber Request Data.csv\")","fe151fd9":"print(data.shape)","896897d1":"data.columns = ['Request_ID','Pickup_Point','Driver_ID','Status','Request_Timestamp','Drop_Timestamp']","1b53da65":"data[\"Request_Timestamp\"] = pd.to_datetime(data[\"Request_Timestamp\"])","503df0fe":"data[\"Request_Hour\"] = data[\"Request_Timestamp\"].dt.hour","c5ea640f":"data[\"Drop_Timestamp\"] = pd.to_datetime(data[\"Drop_Timestamp\"])","2c79853e":"data[\"Drop_Hour\"] = data[\"Drop_Timestamp\"].dt.hour","23c8a3c8":"data.drop(['Request_Timestamp', 'Drop_Timestamp'], axis='columns', inplace=True)","81e4c323":"print(data)","b095c3bc":"cancelled_trips = data[data['Status'] == 'Cancelled']","b7ec2bc7":"print(cancelled_trips.shape)","c650bc19":"no_cars_available = data[data['Status'] == 'No Cars Available']","d3018090":"print(no_cars_available.shape)","36e82cce":"completed_trips = data[data['Status'] == 'Trip Completed']","1b11c50a":"print(completed_trips.shape)","4e280b73":"print(cancelled_trips.value_counts())","dd1a86e3":"y = np.array([1264, 2650, 2831])","4488e93a":"statuslabels = [\"Cancelled\", \"No Cars Available\", \"Trip Completed\"]","a302a55f":"plt.pie(y, labels = statuslabels, autopct = '%2.2f%%')","7a25bcfa":"x = [\"Supply\", \"Demand\"]","f01853da":"y = np.array([2831, 6745])","d0369b25":"plt.pie(y, labels = x, autopct = '%2.2f%%')","be71a5fe":"cancelled_hour = cancelled_trips['Request_Hour'].tolist()","12223fbf":"notavailable_hour = no_cars_available['Request_Hour'].tolist()","38e5d987":"range = (0, 23)","8f718f39":"bins = 24","0bd20357":"def plots(q):\n    plt.hist(q, bins, range, color = 'green', histtype = 'bar', rwidth = 0.8)\n    plt.xlabel('Time Slots')\n    plt.ylabel(\"Number of Trips\")","8b654084":"plots(cancelled_hour)","d46df529":"plots(notavailable_hour)","1fd46c42":"city_to_airport = data[(data.Status != 'Trip Completed') & (data.Pickup_Point == 'City')]","f18a95b0":"print(city_to_airport.shape)","ed3eeb4c":"airport_to_city = data[(data.Status != 'Trip Completed') & (data.Pickup_Point == 'Airport')]","e815fcc5":"print(airport_to_city.shape)","290fa8db":"p = [\"Failed Trips from Airport to City\", \"Failed Trips from City to Airport\"]","7d84b42e":"q = np.array([1911, 2003])","ab792727":"plt.pie(q, labels = p, autopct = '%2.2f%%')","10b1aa50":"city_to_airport_cancelled = data[(data.Status == 'Cancelled') & (data.Pickup_Point == 'City')]","8eb7315f":"city_to_airport_not_available = data[(data.Status == 'No Cars Available') & (data.Pickup_Point == 'City')]","421f4ef4":"airport_to_city_cancelled = data[(data.Status == 'Cancelled') & (data.Pickup_Point == 'Airport')]","fa1f1dff":"airport_to_city_not_available = data[(data.Status == 'No Cars Available') & (data.Pickup_Point == 'Airport')]","72f2fe08":"city_to_airport_cancelled_hour = city_to_airport_cancelled['Request_Hour'].tolist()","198c3f4a":"plots(city_to_airport_cancelled_hour)","c3dcca9d":"city_to_airport_not_available_hour = city_to_airport_not_available['Request_Hour'].tolist()","100cc70e":"plots(city_to_airport_not_available_hour)","6daaddf2":"airport_to_city_cancelled_hour = airport_to_city_cancelled['Request_Hour'].tolist()","022b91da":"plots(airport_to_city_cancelled_hour)","50d3d940":"airport_to_city_not_available_hour = airport_to_city_not_available['Request_Hour'].tolist()","13716a7a":"plots(airport_to_city_not_available_hour)","67c19740":"### Filter all the completed trips from the data","35fb4026":"### Plot a histogram to show the time slots when trips got cancelled","53d22b3e":"### Filter all the trips where cars were not available from the data","7d30b595":"### Plot a bar chart to show the supply demand gap","f7188319":"### Filter cancelled trips from city to airport","95f20438":"### Change Column Names","3fe7c9ce":"### Plot a histogram to show the time slots when cars were not available for city to airport trip","5e6acfc9":"### Plot a pie chart to show the number of trips of each type","fa61f4eb":"### Filter unsuccesful trips from city to airport","bf9162b5":"#### 1. Heavy demand in the city from 4 AM to 11 PM","efe42fe8":"### Convert the hours column to list format","46e2767c":"### Filter unsuccessful trips from airport to city","755b88a6":"### Import Libraries","479389e4":"#### 2. Heavy demand at the airport from 5 PM to 11 PM","0750d3b4":"### Plot a histogram to show the time slots when cars were not availabale for airport to city trip","b93c7aa9":"### Conclusion","d2216879":"### Plot a histogram to show the time slots when trip from airport to city got cancelled","58c59b30":"### Delete Request Timestamp and Drop Timestamp columns","583a85a4":"### Convert the hours column to list format","896bfa96":"### Fetch hour from the timestamp to plot time slots","2468d50a":"### Convert timestamp datatype to object","3e336d6c":"### Filter trips from city to airport when cars were not available","c449c58e":"### Plot a histogram to show the time slots when cars were not available","a5b7bb21":"### Convert the hours column to list format","e73fc973":"### Filter all the cancelled trips from the data","a56a008d":"### Convert the hours column to list format","f4e9e1f4":"### Filter cancelled trips from airport to city","80753c13":"### Plot a histogram to show the time slots when trip from city to airport got cancelled","43486bf4":"### Print Columns and Rows","1a169baf":"### Filter trips from airport to city when cars were not available","e866c9a4":"### Convert the hours column to list format","73ab6338":"### Plot a bar to show the gap between unsuccessful trips from city to airport and from airport to city"}}