{"cell_type":{"326d3132":"code","5f04b59b":"code","258c0dbf":"code","653ae8c5":"code","ee5cf976":"code","e5e98573":"code","b76bc579":"code","7983a20d":"code","f0ed688e":"code","9c297e02":"code","72d6d694":"code","9809c15e":"code","cb2a7255":"code","4ed028bb":"code","aeef83ff":"code","3f23632e":"code","9bef1698":"code","dcc1ccdb":"code","169c6ad6":"code","013e65a7":"code","2a4022db":"code","f7a4d630":"markdown","a44d36c4":"markdown","f0c6fcc0":"markdown","11f910d8":"markdown","ff51e611":"markdown","473684db":"markdown","ceaf6449":"markdown","b1171785":"markdown","43b05703":"markdown","5596a6cf":"markdown","40925772":"markdown","832e4dae":"markdown","6f79710c":"markdown","435fe8d0":"markdown","ef20e9e2":"markdown","b091c70d":"markdown","06f4d5b9":"markdown","9d1e8443":"markdown","019d6f1c":"markdown"},"source":{"326d3132":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f04b59b":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","258c0dbf":"planets = sns.load_dataset('planets')","653ae8c5":"planets.head(10)[['method','year','distance']].sort_values(by='distance').style.bar(color= 'lightblue',subset='distance').hide_index()","ee5cf976":"mpg = sns.load_dataset('mpg')\npd.qcut(x=mpg['mpg'],q=4,labels = [1,2,3,4])","e5e98573":"tips = sns.load_dataset('tips')\ntips.pivot_table(columns = 'sex',values = 'total_bill',aggfunc = 'mean',index ='size',margins=True)","b76bc579":"def mean_divided_by_2(col):\n    return (col.mean())\/2\nmpg.agg(['mean','std',mean_divided_by_2])","7983a20d":"tips.melt(id_vars='tip',value_vars='sex')","f0ed688e":"def color_below_20_red(value):\n    if(type(value)==type('')):\n        return 'color:black'\n    else:\n        color ='red' if value <=20 else 'black'\n        return 'color: {}'.format(color)\nplanets.head(10).style.applymap(color_below_20_red)","9c297e02":"mpg.select_dtypes('object')","72d6d694":"mpg.select_dtypes('number')","9809c15e":"mpg.head(10).style.hide_index().hide_columns(['mpg','origin'])","cb2a7255":"mpg['mpg'].hist()","4ed028bb":"pd.get_dummies(mpg['origin'])","aeef83ff":"mpg.query(\"mpg <= 11 & origin == 'usa'\")","3f23632e":"mpg['mpg'].mask(mpg['mpg'] <20, 'More than 20')","9bef1698":"pd.crosstab(index = mpg['origin'],columns =mpg['model_year'],values = mpg['mpg'],aggfunc='mean')","dcc1ccdb":"mpg ['name'].apply(lambda x: len(str(x)))","169c6ad6":"mpg['origin'].factorize()","013e65a7":"pd.plotting.scatter_matrix(mpg,figsize=(10,10))\nplt.show()","2a4022db":"pd.plotting.boxplot(mpg['mpg'])","f7a4d630":"# hist","a44d36c4":"# QCut\nqcut function would bin the continuous variable where the bin size would be equal-sized based on rank or based on sample quantile.","f0c6fcc0":"# To be continued..","11f910d8":"# select_dtypes\nThis method is used to select the columns in our Data Frame based on the specific data type. For example 'number' or 'object'.","ff51e611":"# .query\nThis method allows selection using a string expression.","473684db":"# Style.applymap","ceaf6449":"# .mask\nIt is used to replace specific values with another value that meets the condition given.","b1171785":"# Scatter Matrix\nThis is a simple function but quite useful in our data analysis life. The main thing is simple, it creates a scatter plot between all the numerical variables within your data frame.\n\nFor the plot in the diagonal position (the variable within themselves) would be a distribution plot (either histogram or KDE).","43b05703":"# AGG\nJust like the name, this method creates an aggregation table. It means, we put our intended aggregation in the .agg method and all the numerical columns are processed by the aggregation function which creates the table.","5596a6cf":"# Get_Dummies\n\nThe get_dummies function is used to create new features based on the categorical class in one variable with the value of the new features is 0 or 1; 0 mean not present, 1 mean present.\n\nOne Hot Encoding mostly used when you need to transform your categorical data into numerical.","40925772":"# .apply\nThis method accepting a function and applied it to the whole data (either in row ways or columns way). What the function return is the result.","832e4dae":"# BoxPlot\na method for graphically depicting groups of numerical data through their quartiles. The box extends from the Q1 to Q3 quartile values of the data, with a line at the median (Q2). The whiskers extend from the edges of the box to show the range of the data. By default, they extend no more than 1.5 * IQR (IQR = Q3 - Q1) from the edges of the box, ending at the farthest data point within that interval. Outliers are plotted as separate dots.","6f79710c":"# factorize\nThe numerical array you just see is the classes in the categorical variable encoded as a numerical value. How to know which number represents what class? That is why we also get unique classes.\n\nIn the sample below 0 is usa, 1 is japan, and 2 is europe. Just like the unique position.","435fe8d0":"# Melt\nThis method is a reverse from the pivot method when we break down every value and variable to another table.","ef20e9e2":"Credits --> [Cornellius Yudha Wijaya](https:\/\/www.linkedin.com\/in\/cornellius-yudha-wijaya\/)","b091c70d":"# Crosstab\nThis function would help us to create a pivot table of categorical classes with an aggregation function of a numerical column as the values, although you could also create a count between categorical classes as well.","06f4d5b9":"# Pivot Table\nIt creates a pivot table based on the categorical object we passed on the columns parameter with the values parameter accepting numerical values.","9d1e8443":"# Style.hide_index and style.hide_columns.","019d6f1c":"# Style Bar\nAllows you to create a barplot of numerical column inside your Data Frame."}}