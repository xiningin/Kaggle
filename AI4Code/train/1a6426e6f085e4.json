{"cell_type":{"daa2f4b3":"code","3958542c":"code","7b3218dd":"code","053488b0":"code","17cfbb64":"code","1ebe6883":"code","ad7b48ac":"code","265c3af0":"code","dcc505fb":"code","392ce587":"code","239d29cb":"code","6f9dc600":"code","1a4fc8f9":"code","f2cde0df":"code","405a0a0e":"code","103926de":"code","033c1584":"code","7c64b6c9":"code","247d6ae0":"code","2bc9369a":"code","8e9d1902":"code","fc3144e5":"code","97c47104":"code","ae47eafb":"code","8577eba2":"code","d5964846":"code","23864602":"code","15513bfe":"code","423dd823":"code","40f9222b":"code","4dfad317":"code","97bb4ca3":"code","e91dcc48":"code","e500d17d":"code","33ac0d51":"markdown","1f3a3fbc":"markdown","a99ee32f":"markdown"},"source":{"daa2f4b3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nimport seaborn as sns\n%matplotlib inline\nplt.style.use('seaborn')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3958542c":"data = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\ndata.head()","7b3218dd":"# Checking the list of countries\n\ndata['Q3'].unique()","053488b0":"# Keeping only data from European countries\n\ncountries = ['Russia', 'Greece', 'Belgium', 'Poland', 'Italy', 'Spain', \n          'United Kingdom of Great Britain and Northern Ireland',\n         'France', 'Switzerland', 'Sweden', 'Netherlands', 'Ukraine',\n         'Romania', 'Austria', 'Belarus', 'Ireland', 'Portugal',\n         'Denmark', 'Germany', 'Norway', 'Czech Republic']\n\ndf = data[data['Q3'].isin(countries)].copy()\ndf.head()","17cfbb64":"# Checking the list and the number of countries\n\nprint('List of European countries available in the dataset:\\n\\n', df['Q3'].unique())\nprint('\\nNumber of unique countries:', df['Q3'].nunique())","1ebe6883":"# Checking the shape of the dataframe\n\nprint('Number of samples:', df.shape[0])\nprint('Number of features per sample:', df.shape[1])","ad7b48ac":"# Defining a function to plot bar charts\n\ndef plot_bar(df, col_name, title, x_label, y_label):\n    sns.barplot(x=df[col_name].value_counts(),\n               y=df[col_name].value_counts().index,\n               data=df, palette='rocket')\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(title)","265c3af0":"# Defining a function to plot pie charts\n\ndef plot_pie(col_name, title):\n    fig1, ax1 = plt.subplots()\n    ax1.pie(df[col_name].value_counts(), startangle=90)\n    \n    # create legend from labels and percentages\n    percentages = (df[col_name].value_counts().values \/ \n                   sum(df[col_name].value_counts().values)) * 100\n    labels = [f\"{l} {s:0.1f}%\" for l, s in zip(df[col_name].value_counts().index, percentages)]\n    ax1.legend(labels=labels, title='Categories and Percentages',\n              bbox_to_anchor=(1,1), loc = \"upper right\", fontsize=12, \n               bbox_transform=plt.gcf().transFigure)\n    \n    # draw center circle\n    centre_circle = plt.Circle((0,0),0.70,fc='white')\n    fig = plt.gcf()\n    fig.gca().add_artist(centre_circle)\n    \n    ax1.axis('equal')  \n    plt.tight_layout()  \n    plt.title(title)","dcc505fb":"# Defining a function to plot bar chart\n# by combining questions with multiple parts\n\ndef plot_bar_combined(df, col_name, title, x_label, y_label):\n    # filter the parts based on question number\n    d = df.filter(like=col_name,axis=1)\n    \n    sns.barplot(x=d.count(axis=0),\n               y=d.T.mode(axis=1)[0].values,\n               data=d, palette='rocket')\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(title)","392ce587":"# Plotting Age distribution\n\nplot_bar(df, 'Q1', 'Age Distribution among European Kagglers', 'Count', 'Age')","239d29cb":"# Plotting Country distribution\n\nplot_bar(df, 'Q3', 'Country-wise Distribution of European Kagglers', 'Count', 'Country')","6f9dc600":"# Plotting Education distribution\n\nplot_bar(df, 'Q4', 'Distribution of Education among European Kagglers', 'Count', 'Education')","1a4fc8f9":"# How many people pursued a master's or higher education in Romania?\n\ndegrees = [\"Master\u2019s degree\", \"Doctoral degree\", \"Professional doctorate\"]\nres = len(df[(df['Q3']==\"Romania\") \n             & (df['Q4'].isin(degrees))])\nprint(\"Number of people in Romania that own a Master's degree or pursued a higher education:\", res)","f2cde0df":"# Plotting Experience distribution\n\nplot_bar(df, 'Q6', 'Distribution based on Years of Experience', 'Count', 'Experience')","405a0a0e":"# Plotting Gender distibution\n\nplot_pie('Q2', 'Gender-wise distribution')","103926de":"# Plotting distibution of Utilised Programming Languages\n\nplot_bar_combined(df, 'Q7','Distibution of Used Programming Languages among European Kagglers','Count','Programming Language')","033c1584":"# Plotting distribution of Recommended Programming Languages\n\nplot_pie('Q8','Distibution of Recommended Programming Languages')","7c64b6c9":"# What is the ratio of programming in Python per country?\n\n# divide number of people who use Python in a certain country\n# by total number of people in that country\n((df.groupby('Q3')['Q7_Part_1'].count() \/ \n  df['Q3'].value_counts()) * 100).round(2).sort_values(ascending=False)","247d6ae0":"# How many people choose programming in R over Python?\n\nres = len(df[(~df['Q7_Part_2'].isnull()) \n             & (df['Q7_Part_1'].isnull())])\nprint('Number of people who chose programming in R over Python:', res)","2bc9369a":"# How many people own a Data Scientist job position in Romania?\n\nprint('Number of Data Scientists in Romania:',\n      len(df[(df['Q5']=='Data Scientist') & (df['Q3']=='Romania')]))","8e9d1902":"# Gender distribution among Data Scientists in Romania\n\ndf2 = df[(df['Q5']=='Data Scientist') & (df['Q3']=='Romania')]\n\nplt.pie(df2['Q2'].value_counts())\nlabels = [f'{l} {s}' for l, s in zip(df2['Q2'].value_counts().index, df2['Q2'].value_counts().values)]\nplt.legend(labels=labels, title='Gender and Count', bbox_to_anchor=(1,1))\nplt.title('Gender distribution among Data Scientists in Romania')","fc3144e5":"# Distribution of Romanian Kagglers based on Job title, Age and Gender\n\nsns.catplot(x='Q1', y='Q5', hue='Q2', data=df[df['Q3']=='Romania'], height=5, aspect=4)\nplt.xlabel('Age')\nplt.ylabel('Job title')\nplt.title('Distribution of Romanian Kagglers based on Job title, Age, and Gender')","97c47104":"# What is the distribution of experience with ML methods in Romania?\n\nplot_bar(df['Q15'], df['Q3']=='Romania', \"Distribution of experience with ML methods in Romania\", \"Count\", \"Experience\")","ae47eafb":"# What is the distribution of utilised ML algorithms in Romania?\n\nplot_bar_combined(df[df['Q3']=='Romania'], 'Q17', 'Distribution of used ML algorithms in Romania','Count', 'ML Algorithm')","8577eba2":"# What is the ratio of utilising CNNs per country?\n\n# divide the number of people who use CNNs in a certain country\n# by the total number of people in a country\n((df.groupby(['Q3'])['Q17_Part_7'].count() \/ \n  df['Q3'].value_counts()) * 100).round(2).sort_values(ascending=False)","d5964846":"# What is the distribution of utilised computing platforms in Romania?\n\nplot_bar(df['Q11'], df['Q3']=='Romania', \"Distribution of utilised computing platforms in Romania\", \"Count\", \"Computing platform\")","23864602":"# What is the most used IDE?\n\n# Steps: - filter parts of a certain question\n#        - apply value_count() on the columns to count non null data\n#        - sum the values\n#        - sort the values in descending order\n#        - select the index of the first row to get the column name of the most used IDE\n#        - since there is only one unique value in the columns we apply mode() (get the most frequent value) to get that value\n\ncol = df.filter(like='Q9', axis=1).apply(pd.Series.value_counts).sum().sort_values(ascending=False).head(1).index\nprint('The most used IDE:', str(df[col].mode().values).strip(\"['']\"))","15513bfe":"# What Interactive Notebooks do European Kagglers use?\n\nplot_bar_combined(df, 'Q10','Distribution of utilised Hosted Notebook Products','Count','Hosted Notebook Platform')","423dd823":"# How many people utilise Google Colaboratory instead of Kaggle Notebook?\n\nres = len(df[(~df['Q10_Part_2'].isnull()) \n             & (df['Q10_Part_1'].isnull())])\nprint('Number of people who use Google Colab instead of Kaggle:', res)","40f9222b":"# Where do Kagglers usually publicly share their work?\n\nplot_bar_combined(df, 'Q39','Distribution of Platforms where European Kagglers share their work','Count','Hosting Platform')","4dfad317":"# What is the most used Business Intelligence Tool?\n\nd = df['Q35'].value_counts().head(1).index.values\nprint('The most used BI Tool:', str(d).strip(\"['']\"))","97bb4ca3":"# How many people utilise Tableau instead of MSPowerBI?\n\nres = len(df[(~df['Q34_A_Part_5'].isnull()) \n             & (df['Q34_A_Part_2'].isnull())])\nprint('Number of people who use Tableau instead of PowerBI:', res)","e91dcc48":"# How many people use both Matplotlib and Seaborn to visualize data?\n\nres = len(df[(~df['Q14_Part_1'].isnull()) \n             & (~df['Q14_Part_2'].isnull())])\nprint('Number of people who use both Matplotlib and Seaborn for Data Visualisation:', res)","e500d17d":"# What is the most used Big Data Product?\n\ncol = df.filter(like='Q32', axis=1).apply(pd.Series.value_counts).sum().sort_values(ascending=False).head(1).index\nprint('The most used Big Data Product:', str(df[col].mode().values).strip(\"['']\"))","33ac0d51":"<h4> &ensp; The main purpose of this notebook is to analyse European Kaggle users and find patterns in their behaviour and preferences. \n    <br><br> &ensp; Since I come from Romania, my aim was to find out what it takes to be a Data Scientist in this country, considering the fact that there are few Data Science job opportunities available in the IT sector. <\/h4>","1f3a3fbc":"# Exploratory Data Analysis","a99ee32f":"<div style=\"background-color:#ADD8E6;\">\n    <h1 style=\"text-align:center; padding:50px;\"> EDA: Kaggle Data Scientists in Europe <\/h1>\n<\/div>"}}