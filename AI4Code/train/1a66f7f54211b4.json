{"cell_type":{"803a3900":"code","b6b01bcc":"code","59365b12":"code","481ec00f":"code","45121402":"code","ff96d419":"code","cb5fbd16":"code","bf1f7494":"code","f14e27d0":"code","acdccb08":"code","7d14102e":"code","62a5c662":"markdown","f7cd81b4":"markdown","36d0b09e":"markdown"},"source":{"803a3900":"# data analysis and wrangling\r\nimport pandas as pd\r\nimport numpy as np\r\nimport random as rnd\r\n\r\n# visualization\r\nimport seaborn as sns\r\nimport matplotlib.pyplot as plt\r\n%matplotlib inline\r\nimport plotly.graph_objs as go \r\nimport plotly.express as px\r\n\r\n# machine learning\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn.metrics import accuracy_score, mean_absolute_error\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nfrom sklearn.tree import DecisionTreeClassifier\r\n\r\nprint('setup complete')","b6b01bcc":"df = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\r\ndf.head()","59365b12":"df.isnull().sum()","481ec00f":"sns.set(rc={'figure.figsize':(10,10)})\r\n\r\nfor i in df.columns:\r\n    plt.hist(df[i])\r\n    plt.title(i)\r\n    plt.show()","45121402":"sns.heatmap(df.corr(), annot=True)\r\nsns.set(rc={'figure.figsize':(15,15)})\r\nplt.title('Relation between variables')\r\nplt.show()","ff96d419":"def helper(row):\r\n    if row.quality < 4.5:\r\n        return 0\r\n    elif row.quality < 6.5:\r\n        return 1\r\n    else:\r\n        return 2\r\ndf[\"quality\"] = df.apply(helper,axis=1)","cb5fbd16":"df.head(10)","bf1f7494":"sns.set(rc={'figure.figsize':(6,6)})\r\n\r\nfor i in [0,1,2]:\r\n    up_df = df[df['quality']==i]\r\n    plt.hist(up_df['alcohol'])\r\n    print(f\"Alcohol mean: {up_df['alcohol'].mean()}\")\r\n    plt.title(f\"Quality:{i}\")\r\n    plt.show()","f14e27d0":"y = ['quality']\r\nfeatures = ['fixed acidity', 'volatile acidity','citric acid', 'residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']\r\n\r\nx_train, x_test, y_train, y_test = train_test_split(df[features], df[y])","acdccb08":"clf = KNeighborsClassifier(n_neighbors=7)\r\nclf.fit(x_train, y_train)\r\n\r\ny_predict = clf.predict(x_test)","7d14102e":"print(f'MAE: {mean_absolute_error(y_test, y_predict)}')\r\nprint(f'Accuracy: {accuracy_score(y_test, y_predict)*100}%')","62a5c662":"We can conclude that the amount of alcohol is highly correlated to the quality of the wine \r\nNow I would like to know what distinguishes bad wine from ok wine from top-notch wine, I'm going to divide the wine to facilitate\r\n\r\n- 0: bad\r\n- 1: ok\r\n- 2: good ","f7cd81b4":"Seems like the model fitted pretty well, the MAE is pretty low and the accuracy is almost 100%","36d0b09e":"# EDA (exploratory data analysis)"}}