{"cell_type":{"2a29a59b":"code","5be4ea54":"code","b9933aec":"code","0d55f537":"code","4aef0a46":"markdown","af0038d7":"markdown"},"source":{"2a29a59b":"# Setup all imports\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pandas as pd\nimport gensim\nimport nltk\n\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom collections import defaultdict\n\n# Load data\nfile_list = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        file_list += [os.path.join(dirname, filename)]\n        \nfake_news =  pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/Fake.csv',)\ntrue_news =  pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/True.csv')\n\n# Add classifiaction\nfake_news[\"classification\"] = \"false\"\ntrue_news[\"classification\"] = \"true\"\n\n# Concarnate data and make all text lowercase\nnews_data = pd.concat([true_news, fake_news], axis =0)\nnews_data[\"title\"] = news_data[\"title\"].apply(lambda x: x.lower())\nnews_data[\"text\"] = news_data[\"text\"].apply(lambda x: x.lower())\n\nprint(\"Setup finished\")","5be4ea54":"# Preprocess titles\ntitle_corpus         = news_data.title.tolist()\ntrue_title_corpus    = true_news.title.tolist()\nfake_title_corpus    = fake_news.title.tolist()\n\n# Split corpus by white space and filter out stopwords\nstoplist          = set('for a of the and to in u.s. as on [video] (video) '.split(' '))\ntitle_corpus      = [[word for word in title.split() if word not in stoplist]  for title in title_corpus]\ntrue_title_corpus = [[word for word in title.split() if word not in stoplist]  for title in true_title_corpus]\nfake_title_corpus = [[word for word in title.split() if word not in stoplist]  for title in fake_title_corpus]\n\n#### CONTINUE FROM HERE\n\n\n# Count word frequencies\nfrequency = defaultdict(int)\nfor title in title_corpus:\n    for word in title:\n        frequency[word] += 1\n        \n# Make dataframe of word frequencies\nwords, count = list(frequency.keys()), list(frequency.values())\nfrequency_df = pd.DataFrame({\"words\": words, \"count\": count})\n\n# Remove low frequency words\ntitle_corpus = [[token for token in title if frequency[token] > 1] for title in title_corpus]","b9933aec":"# Run to add function for plotting wordcloud\ndef plot_wordcloud(text, mask = None, max_words = 400, max_font_size = 120, more_stopwords = None, figure_size = (16.0,8.0), \n                   title = None, title_size = 40, image_color = False):\n    stopwords = set(STOPWORDS)\n    if(more_stopwords != None):\n        stopwords = stopwords.union(more_stopwords)\n\n    wordcloud = WordCloud(background_color='white',\n                    stopwords = stopwords,\n                    max_words = max_words,\n                    max_font_size = max_font_size, \n                    random_state = 42,\n                    mask = mask)\n    wordcloud.generate(text)\n    \n    plt.figure(figsize=figure_size)\n    if image_color:\n        image_colors = ImageColorGenerator(mask);\n        plt.imshow(wordcloud.recolor(color_func=image_colors), interpolation=\"bilinear\");\n        plt.title(title, fontdict={'size': title_size,  \n                                  'verticalalignment': 'bottom'})\n    else:\n        plt.imshow(wordcloud);\n        plt.title(title, fontdict={'size': title_size, 'color': 'green', \n                                  'verticalalignment': 'bottom'})\n    plt.axis('off');\n    plt.tight_layout()  ","0d55f537":"title_corpus_bag_of_words = \"\"\nfor title in title_corpus:\n    for word in title:\n        title_corpus_bag_of_words += word + \" \"\n        \nword_cloud_mask = np.array(Image.open('\/kaggle\/input\/trump-pic\/trump2.jpg'))\n\nplot_wordcloud (title_corpus_bag_of_words, \n                mask         = word_cloud_mask, \n                max_words    =300, \n                max_font_size=120, \n                title        = 'Fake news', \n                title_size   =50)    ","4aef0a46":"# Analyze titles:\n","af0038d7":"## Visualise the frequency of words"}}