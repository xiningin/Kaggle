{"cell_type":{"9f523d50":"code","803f9ce5":"code","ca27a3ad":"code","3989fb5c":"code","8c6bdb79":"code","1eee1f7f":"code","dff28734":"code","8c2a9861":"code","956d66d8":"code","7baae904":"code","c5c4bb24":"code","b0a11a57":"code","b7e2a4eb":"code","1d86f57f":"code","e1efb55c":"code","927d640a":"code","dc961a80":"code","21f35606":"code","129ac8bf":"code","f67f0d05":"code","72f01778":"code","b0b933b1":"code","630ec238":"markdown","32817701":"markdown","c12cc3d8":"markdown","1b8f1225":"markdown","5bab9ea8":"markdown","9ff4d278":"markdown","f019c5ca":"markdown","4d520d98":"markdown","7e1f5745":"markdown","0e1cef54":"markdown","a806834c":"markdown","1c7aa552":"markdown","94c58555":"markdown"},"source":{"9f523d50":"# Libraries\nimport re\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS","803f9ce5":"# Import data\ntrain = pd.read_csv('\/kaggle\/input\/tweet-sentiment-extraction\/train.csv')\n\n# Adding interesting variables for analysis\ntrain['length'] = train['text'].apply(lambda x:len(str(x)))\ntrain['word_counts'] = train['text'].apply(lambda x:len(str(x).split()))","ca27a3ad":"# Print first rows of train\ntrain.head()\nprint(f'{train.shape[0]} observations, {train.shape[1]} columns')","3989fb5c":"# Count samples per category\nprint(train['sentiment'].value_counts(), \"\\n\")\nprint(train['sentiment'].value_counts(normalize=True))","8c6bdb79":"x = ['Neutral', 'Positive', 'Negative']\ny = [11118, 8582, 7781]\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['40% of tweets', '31% of tweets', '29% of tweets'])])\n\n# Customize aspect\n#marker_color='rgb(158,202,225)'\nfig.update_traces(marker_line_color='midnightblue',\n                  marker_line_width=1.)\nfig.update_layout(title_text='Distribution of sentiment')\nfig.show()","1eee1f7f":"neutral = train[train['sentiment'] == 'neutral']\npositive = train[train['sentiment'] == 'positive']\nnegative = train[train['sentiment'] == 'negative']","dff28734":"#neutral_text\nprint(\"Neutral tweet example  :\",neutral['text'].values[1])\n# Positive tweet\nprint(\"Positive Tweet example :\",positive['text'].values[1])\n#negative_text\nprint(\"Negative Tweet example :\",negative['text'].values[1])","8c2a9861":"x = train.length.values\n\nfig = go.Figure(data=[go.Histogram(x=x,\n                                   marker_line_width=1, \n                                   marker_line_color=\"midnightblue\", \n                                   xbins_size = 5)])\n\nfig.update_layout(title_text='Distribution of tweet lengths')\nfig.show()","956d66d8":"x1 = neutral.length.values\nx2 = positive.length.values\nx3 = negative.length.values\n\nfig = go.Figure(data=[go.Histogram(x=x1,\n                                   marker_line_width=1, \n                                   marker_line_color=\"midnightblue\", \n                                   xbins_size = 5, \n                                   opacity = 0.5)])\n\nfig.update_layout(title_text='Distribution of neutral tweet lengths')\nfig.show()\n\nfig = go.Figure(data=[go.Histogram(x=x2,\n                                   marker_line_width=1, \n                                   marker_color='rgb(50,202,50)', \n                                   xbins_size = 5, \n                                   marker_line_color=\"midnightblue\", \n                                   opacity = 0.5)])\n\nfig.update_layout(title_text='Distribution of positive tweet lengths')\nfig.show()\n\nfig = go.Figure(data=[go.Histogram(x=x3,\n                                   marker_line_width=1, \n                                   marker_color='crimson', \n                                   xbins_size = 5, \n                                   marker_line_color=\"midnightblue\", \n                                   opacity = 0.5)])\n\nfig.update_layout(title_text='Distribution of negative tweet lengths')\nfig.show()","7baae904":"y1 = neutral.length.values\ny2 = positive.length.values\ny3 = negative.length.values\n\nfig = go.Figure()\n\nfig.add_trace(go.Box(y=y1, \n                     name=\"Neutral\", \n                     marker_line_width=1, \n                     marker_line_color=\"midnightblue\"))\n\nfig.add_trace(go.Box(y=y2, \n                     name=\"Positive\", \n                     marker_line_width=1, \n                     marker_color = 'rgb(50,202,50)'))\n\nfig.add_trace(go.Box(y=y3, \n                     name=\"Negative\", \n                     marker_line_width=1, \n                     marker_color = 'crimson'))\n\nfig.update_layout(title_text=\"Box Plot tweet lengths\")\n\nfig.show()","c5c4bb24":"indexes = [index for index, tweet in enumerate(train['text']) if len(str(tweet)) <= 5 ]\ntrain.iloc[indexes,:]","b0a11a57":"indexes = [index for index, tweet in enumerate(train['text']) if len(str(tweet)) == 3 ]\ntrain.iloc[indexes,:]","b7e2a4eb":"x = train.word_counts.values\n\nfig = go.Figure(data=[go.Histogram(x=x,\n                                   marker_line_width=1, \n                                   marker_line_color=\"midnightblue\")])\n\nfig.update_layout(title_text='Distribution of tweet lengths')\nfig.show()","1d86f57f":"x1 = neutral.word_counts.values\nx2 = positive.word_counts.values\nx3 = negative.word_counts.values\n\nfig = go.Figure(data=[go.Histogram(x=x1,\n                                   marker_line_width=1, \n                                   marker_line_color=\"midnightblue\", \n                                   opacity = 0.5)])\n\nfig.update_layout(title_text='Distribution of neutral tweet lengths')\nfig.show()\n\nfig = go.Figure(data=[go.Histogram(x=x2,\n                                   marker_line_width=1, \n                                   marker_color='rgb(50,202,50)', \n                                   marker_line_color=\"midnightblue\", \n                                   opacity = 0.5)])\n\nfig.update_layout(title_text='Distribution of positive tweet lengths')\nfig.show()\n\nfig = go.Figure(data=[go.Histogram(x=x3,\n                                   marker_line_width=1, \n                                   marker_color='crimson', \n                                   marker_line_color=\"midnightblue\", \n                                   opacity = 0.5)])\n\nfig.update_layout(title_text='Distribution of negative tweet lengths')\nfig.show()","e1efb55c":"y1 = neutral.word_counts.values\ny2 = positive.word_counts.values\ny3 = negative.word_counts.values\n\nfig = go.Figure()\n\nfig.add_trace(go.Box(y=y1, \n                     name=\"Neutral\", \n                     marker_line_width=1, \n                     marker_line_color=\"midnightblue\"))\n\nfig.add_trace(go.Box(y=y2, \n                     name=\"Positive\", \n                     marker_line_width=1, \n                     marker_color = 'rgb(50,202,50)'))\n\nfig.add_trace(go.Box(y=y3, \n                     name=\"Negative\", \n                     marker_line_width=1, \n                     marker_color = 'crimson'))\n\nfig.update_layout(title_text=\"Box Plot word counts\")\n\nfig.show()","927d640a":"train.info()","dc961a80":"sentences = train['selected_text'].values\nprint(list(sentences).index(np.nan))","21f35606":"print(sentences[13133])\ntrain = train.drop(13133, axis=0)","129ac8bf":"# Find emoji patterns\nemoji_pattern = re.compile(\"[\"\n        u\"\\U0001F600-\\U0001F64F\"  # emoticons\n        u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n        u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n        u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           \"]+\", flags=re.UNICODE)","f67f0d05":"# Basic function to clean the text\ndef clean_text(text):\n    text = str(text)\n    # Remove emojis\n    text = emoji_pattern.sub(r'', text)\n    # Remove identifications\n    text = re.sub(r'@\\w+', '', text)\n    # Remove links\n    text = re.sub(r'http.?:\/\/[^\/s]+[\/s]?', '', text)\n    return text.strip().lower()\n\ntrain['text'] = train['text'].apply(lambda x:clean_text(x))","72f01778":"def wordcloud(df, text = 'text'):\n    \n    # Join all tweets in one string\n    corpus = \" \".join(str(review) for review in df[text])\n    print (f\"There are {len(corpus)} words in the combination of all review.\")\n    \n    wordcloud = WordCloud(max_font_size=50, \n                          max_words=100,\n                          collocations = False,\n                          background_color=\"white\").generate(corpus)\n    \n    plt.figure(figsize=(15,15))\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.show()\n\nwordcloud(df = train)","b0b933b1":"print('Neutral Wordcloud')\nwordcloud(df = neutral)\n\nprint('Positive Wordcloud')\nwordcloud(df = positive)\n\nprint('Negative Wordcloud')\nwordcloud(df = negative)","630ec238":"It can also be seen on these boxplots that the minimum tweets length value is close to zero. Let's take a closer look at these tweets.","32817701":"# <div id=\"chap2\">2. Distribution of tweets length<\/div>","c12cc3d8":"# <div id=\"chap1\">1. Basic manipulations<\/div>","1b8f1225":"# <div id=\"chap3\">3. Shorter tweets<\/div>","5bab9ea8":"## <div id=\"summary\">Table of contents<\/div>\n\n**<font size=\"2\"><a href=\"#chap1\">1. Basic manipulations<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap2\">2. Distribution of tweets length<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap3\">3. Shorter tweets<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap4\">4. Distribution of word counts<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap5\">5. Cleaning tweets<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap6\">6. Wordcloud<\/a><\/font>**","9ff4d278":"# <div id=\"chap6\">6. Wordcloud<\/div>","f019c5ca":"# <div id=\"chap5\">5. Cleaning tweets<\/div>","4d520d98":"All the mallest tweets are neutral.","7e1f5745":"<div align='center'><font size=\"5\" color='#353B47'>Tweet Sentiment Extraction<\/font><\/div>\n<div align='center'><font size=\"4\" color=\"#353B47\">Data Cleaning and Wordclouds<\/font><\/div>\n<br>\n<hr>","0e1cef54":"There are words under 5 letters that can describe a positive or negative sentiment: good, lame... Most of these short tweets are neutral though.","a806834c":"<hr>\n<br>\n<div align='justify'><font color=\"#353B47\" size=\"4\">Thank you for taking the time to read this notebook. I hope that I was able to answer your questions or your curiosity and that it was quite understandable. <u>any constructive comments are welcome<\/u>. They help me progress and motivate me to share better quality content. I am above all a passionate person who tries to advance my knowledge but also that of others. If you liked it, feel free to <u>upvote and share my work.<\/u> <\/font><\/div>\n<br>\n<div align='center'><font color=\"#353B47\" size=\"3\">Thank you and may passion guide you.<\/font><\/div>","1c7aa552":"# <div id=\"chap4\">4. Distribution of word counts<\/div>","94c58555":"### Example of sentiment"}}