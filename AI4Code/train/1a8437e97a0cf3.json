{"cell_type":{"d07edb5e":"code","d45975a0":"code","8e78ae6f":"code","2e49997b":"code","8f4f501f":"code","9df092d9":"code","2bda4c97":"code","818d8385":"code","b5a535c8":"code","bb54717e":"code","5c7bd59d":"code","37a0ea12":"code","26585bf5":"code","160f5b0b":"code","346189a8":"code","53b00489":"code","6b9776d3":"code","3c14dfd4":"code","7623b163":"code","663efbc6":"code","8679e426":"code","5c4bec7a":"code","1926a112":"markdown","760cb638":"markdown","d7b786f5":"markdown","9b298975":"markdown","702fd13b":"markdown","c53d7250":"markdown","f7d7edab":"markdown","f2e14cd8":"markdown","aae678a9":"markdown","21c9fe49":"markdown","b4bf5797":"markdown","472b4c74":"markdown","a55d2461":"markdown","e8552aaf":"markdown","2eb8f3db":"markdown","93840679":"markdown"},"source":{"d07edb5e":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nfrom keras.layers import Dense, BatchNormalization, Dropout, LSTM\nfrom keras.models import Sequential\nfrom keras.utils import to_categorical\nfrom sklearn.metrics import precision_score, recall_score, confusion_matrix, classification_report, accuracy_score, f1_score\nfrom keras import callbacks","d45975a0":"import pandas as pd\ndata=pd.read_csv(\"..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\ndata.head()","8e78ae6f":"data.info()","2e49997b":"#first of all let us evaluate the target and find out if our data is imbalanced or not\ncols= [\"#86C2DE\",\"#FDB355\"]\nsns.countplot(x= data[\"target\"], palette= cols)","8f4f501f":"# Correlation amongst numeric attributes\ncorrmat = data.corr()\ncmap = sns.diverging_palette(200,-10,s=50, l=75, n=6, as_cmap=True)\nplt.subplots(figsize=(7,7))\nsns.heatmap(corrmat,cmap= cmap,annot=True, square=True)","9df092d9":"# plot male and female employees in the company\n\ncols= [\"#86C2DE\",\"#FDB355\"]\nsns.countplot(x= data[\"gender\"], palette= cols)","2bda4c97":"# Get list of categorical variables\ns = (data.dtypes == \"object\")\nobject_cols = list(s[s].index)\n\nprint(\"Categorical variables:\")\nprint(object_cols)","818d8385":"# Missing values in categorical variables\n\nfor i in object_cols:\n    print(i, data[i].isnull().sum())","b5a535c8":"# Filling missing values with mode of the column in value\n\nfor i in object_cols:\n    data[i].fillna(data[i].mode()[0], inplace=True)","bb54717e":"# Get list of numeric variables\nt = (data.dtypes == \"float64\")\nnum_cols = list(t[t].index)\n\nprint(\"Numeric variables:\")\nprint(num_cols)","5c7bd59d":"# Missing values in numeric variables\n\nfor i in num_cols:\n    print(i, data[i].isnull().sum())","37a0ea12":"#Evauating education_level over training hours\ncolours = [\"#D0DBEE\", \"#C2C4E2\", \"#EED4E5\", \"#D1E6DC\", \"#BDE2E2\"]\nplt.figure(figsize=(12,8))\nDays_of_week=sns.barplot(x=data['education_level'],y=\"training_hours\",data=data, ci =None,palette = colours)\nDays_of_week.set_title(\"Education Level over training hours\")\nDays_of_week.set_ylabel(\"Training Hours\")\nDays_of_week.set_xlabel(\"Education Level\")","26585bf5":"# Apply label encoder to each column with categorical data\nlabel_encoder = LabelEncoder()\nfor i in object_cols:\n    data[i] = label_encoder.fit_transform(data[i])\n    \ndata.info()","160f5b0b":"# Prepairing attributes of scale data\n\nfeatures = data.drop(['target'], axis=1) # dropping target and extra columns\n\ntarget = data['target']\n\n#Set up a standard scaler for the features\ncol_names = list(features.columns)\ns_scaler = preprocessing.StandardScaler()\nfeatures = s_scaler.fit_transform(features)\nfeatures = pd.DataFrame(features, columns=col_names) \n\nfeatures.describe().T","346189a8":"#Detecting outliers\n#looking at the scaled features\ncolours = [\"#D0DBEE\", \"#C2C4E2\", \"#EED4E5\", \"#D1E6DC\", \"#BDE2E2\"]\nplt.figure(figsize=(20,10))\nsns.boxenplot(data = features,palette = colours)\nplt.xticks(rotation=90)\nplt.show()","53b00489":"X = features\ny = target\n\n# Splitting test and training sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n\nX.shape","6b9776d3":"#Early stopping\nearly_stopping = callbacks.EarlyStopping(\n    min_delta=0.001, # minimium amount of change to count as an improvement\n    patience=20, # how many epochs to wait before stopping\n    restore_best_weights=True,\n)\n\n# Initialising the NN\nmodel = Sequential()\n\n# layers\nmodel.add(Dense(units = 25, kernel_initializer = 'uniform', activation = 'relu', input_dim = 13))\nmodel.add(Dense(units = 25, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dense(units = 5, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n\n# Compiling the ANN\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n\n# Train the ANN\nhistory = model.fit(X_train, y_train, batch_size = 32, epochs = 150,callbacks=[early_stopping], validation_split=0.2)","3c14dfd4":"history_df = pd.DataFrame(history.history)\n\nplt.plot(history_df.loc[:, ['loss']], \"#BDE2E2\", label='Training loss')\nplt.plot(history_df.loc[:, ['val_loss']],\"#C2C4E2\", label='Validation loss')\nplt.title('Training and Validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend(loc=\"best\")\n\nplt.show()","7623b163":"history_df = pd.DataFrame(history.history)\n\nplt.plot(history_df.loc[:, ['accuracy']], \"#BDE2E2\", label='Training accuracy')\nplt.plot(history_df.loc[:, ['val_accuracy']], \"#C2C4E2\", label='Validation accuracy')\n\nplt.title('Training and Validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()","663efbc6":"# Predicting the test set results\ny_pred = model.predict(X_test)\ny_pred = (y_pred > 0.5)","8679e426":"# confusion matrix\nimport numpy as np\ncmap1 = sns.diverging_palette(260,-10,s=50, l=75, n=5, as_cmap=True)\nplt.subplots(figsize=(12,8))\ncf_matrix = confusion_matrix(y_test, y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), cmap = cmap1, annot = True, annot_kws = {'size':15})","5c4bec7a":"print(classification_report(y_test, y_pred))","1926a112":"**Categorical variables**","760cb638":"**Point to note:**\n\n* There are missing values in the dataset\n* Dataset includes categorical and numerical values","d7b786f5":"<div style=\"color:#262A49;\n           display:fill;\n           border-radius:0px;\n           background-color:#86C2DE;\n           font-size:177%;\n           font-family:Verdana;\n           font-weight:200; \n           padding-left: 400px; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\nCONCLUSION\n<\/p>\n<\/div>","9b298975":"**About the data :**\n\nThis dataset designed to understand the factors that lead a person to leave current job for HR researches too. By model(s) that uses the current credentials,demographics,experience data you will predict the probability of a candidate to look for a new job or will work for the company, as well as interpreting affected factors on employee decision.\n\nThe whole data divided to train and test . Target isn't included in test but the test target values data file is in hands for related tasks. A sample submission correspond to enrollee_id of test set provided too with columns : enrollee _id , target","702fd13b":"[Lets Connect on LinkedIn!](https:\/\/www.linkedin.com\/in\/krupa-gajjar-02011999\/)","c53d7250":"<div style=\"color:#262A49;\n           display:fill;\n           border-radius:0px;\n           background-color:#C2C4E2;\n           font-size:177%;\n           font-family:Verdana;\n           font-weight:200; \n           padding-left: 450px; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\n LIBRARIES\n<\/p>\n<\/div>\n\n# Import Libraries","f7d7edab":"<div style=\"color:#485053;\n           display:fill;\n           border-radius:0px;\n           background-color:#86C2DE;\n           font-size:200%;\n           padding-left:400px; \n           font-family:Verdana;\n           font-weight:600; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\n HR ANALYTICS\n<\/p>\n<\/div>\n\n![](https:\/\/www.thehrdigest.com\/wp-content\/uploads\/2020\/01\/hr-analytics.jpg)","f2e14cd8":"**Numerical variables**\n* Filling numerical variables with median of the column value","aae678a9":"<div style=\"color:#262A49;\n           display:fill;\n           border-radius:0px;\n           background-color:#86C2DE;\n           font-size:177%;\n           font-family:Verdana;\n           font-weight:200; \n           padding-left: 400px; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\nMODEL BUILDING\n<\/p>\n<\/div>","21c9fe49":"<div style=\"color:#262A49;\n           display:fill;\n           border-radius:0px;\n           background-color:#C2C4E2;\n           font-size:177%;\n           font-family:Verdana;\n           font-weight:200; \n           padding-left: 430px; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\n LOADING DATA\n<\/p>\n<\/div>\n\n","b4bf5797":"**Label encoder the categorical value**","472b4c74":"No outliers to remove!","a55d2461":"<div style=\"color:#262A49;\n           display:fill;\n           border-radius:0px;\n           background-color:#86C2DE;\n           font-size:177%;\n           font-family:Verdana;\n           font-weight:200; \n           padding-left: 400px; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\nDATA PREPROCESSING\n<\/p>\n<\/div>","e8552aaf":"<div style=\"color:#485053;\n           display:fill;\n           border-radius:0px;\n           background-color:#86C2DE;\n           font-size:177%;\n           padding-left:300px; \n           font-family:Verdana;\n           font-weight:200; \n           letter-spacing:0.5px;\n           \">\n\n<p style=\"padding: 15px;\n          color:white;\n          text-align: center;\">\n\n DATA VISUALIZATION AND CLEANING\n<\/p>\n<\/div>","2eb8f3db":"# **Count plot of target column**","93840679":"There are no missing values in numeric data. Hence no need to fill."}}