{"cell_type":{"71acc9cc":"code","e74c4b56":"code","f9232c7b":"code","57e89ad8":"code","fb33282f":"code","3fdd1d8f":"code","2e549f6f":"code","9256027e":"code","50d6ca65":"code","8d2d5d23":"code","4df3b080":"code","fde2476c":"code","d5cb56ed":"code","6b6a7fb9":"code","99679699":"code","f4523abb":"code","e8237915":"code","92532ca3":"code","c64c2ab7":"code","aa6786a3":"code","400d6a12":"code","81480076":"code","8c6e0a34":"code","7fc54717":"code","9ec78053":"code","5240e4de":"code","93be902e":"code","bba3acea":"code","20d17167":"code","a2aa2903":"code","3528af36":"code","80f8f435":"code","175fecd4":"code","84b1a97d":"code","e0c76a5f":"code","ad3b2564":"code","ff8ea918":"code","4e77b88b":"code","f4d1c984":"code","c4e9a7f7":"code","057cbd27":"code","9202cffb":"code","5248b5bd":"code","fa46bbf3":"code","c3281e0a":"code","836ecc4e":"code","65382ba4":"markdown","cd010836":"markdown","2b710a5f":"markdown","0e0d45c6":"markdown","67a92891":"markdown","6b5d7523":"markdown","480a5674":"markdown","fb07c99f":"markdown","b6006207":"markdown","b7e285aa":"markdown","c04349af":"markdown","01e36ed4":"markdown","c4e147a7":"markdown","f265f1a7":"markdown","2ef3fa8e":"markdown","92f846cb":"markdown","7062931f":"markdown","40388c1e":"markdown"},"source":{"71acc9cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e74c4b56":"# importing standard libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f9232c7b":"df=pd.read_csv(r\"\/kaggle\/input\/usa-housing-listings\/housing.csv\")\ndf.head()","57e89ad8":"df.info()","fb33282f":"df.describe()","3fdd1d8f":"df.isna().sum()","2e549f6f":"df=df.drop([\"id\",\"url\",\"region_url\",\"image_url\",\"description\"],axis=1)","9256027e":"df=df.drop([\"state\"],axis=1)","50d6ca65":"df['laundry_options'] = df['laundry_options'].fillna(df['laundry_options'].mode()[0])\ndf['parking_options'] = df['parking_options'].fillna(df['parking_options'].mode()[0])\ndf['lat'] = df['lat'].fillna(df['lat'].mean())\ndf['long'] = df['long'].fillna(df['long'].mean())","8d2d5d23":"# Checking how many values present\ndf.laundry_options.value_counts()","4df3b080":"# Checking how many values present\ndf.parking_options.value_counts()","fde2476c":"# Checking how many values present\ndf.region.value_counts()","d5cb56ed":"# Checking how many values present\ndf.type.value_counts()","6b6a7fb9":"# Checking how many values present\ndf.baths.value_counts()","99679699":"# we can convert this float values to int\ndf[\"baths\"]=df[\"baths\"].astype(\"int\")","f4523abb":"# Checking how many values present\ndf.beds.value_counts()","e8237915":"outlier1 = ((df[\"beds\"]>4) | (df[\"baths\"]>4))\nprint(\"There is {} outlier\".format(df[outlier1][\"beds\"].count()))","92532ca3":"df = df[~outlier1]","c64c2ab7":"df.hist(figsize=(30,10))","aa6786a3":"outlier2 = ((df[\"sqfeet\"]<120) | (df[\"sqfeet\"]>5000) | (df[\"price\"]<100) | (df[\"price\"]>10000))\nprint(\"There is {} outlier\".format(df[outlier2][\"cats_allowed\"].count()))","400d6a12":"df = df[~outlier2]","81480076":"df.describe()","8c6e0a34":"df=df.drop([\"cats_allowed\"],axis=1)\ndf.rename(columns = {'dogs_allowed':'pets_allowed'}, inplace = True) ","7fc54717":"sns.countplot(df[\"type\"])\nfig = plt.gcf()\nfig.set_size_inches(15,10)\nplt.title('Which type of house is more')","9ec78053":"sns.barplot(x=df[\"type\"],y=df[\"price\"])\nfig = plt.gcf()\nfig.set_size_inches(15,10)\nplt.title('Which type of house has more price')","5240e4de":"sns.barplot(x=df[\"type\"],y=df[\"sqfeet\"])\nfig = plt.gcf()\nfig.set_size_inches(15,10)\nplt.title('Which type of house has more sqfeet')","93be902e":"sns.barplot(x=df[\"parking_options\"],y=df[\"price\"])\nfig = plt.gcf()\nfig.set_size_inches(15,10)\nplt.title('Which type of parking option has more price')","bba3acea":"from sklearn.preprocessing import LabelEncoder","20d17167":"le=LabelEncoder()\ndb=df","a2aa2903":"db[\"region\"]=le.fit_transform(df[\"region\"])\ndb[\"type\"]=le.fit_transform(df[\"type\"])\ndb[\"laundry_options\"]=le.fit_transform(df[\"laundry_options\"])\ndb[\"parking_options\"]=le.fit_transform(df[\"parking_options\"])","3528af36":"db.head()","80f8f435":"x=db.drop(columns=[\"price\"])\ny=db[\"price\"]","175fecd4":"plt.figure(figsize=(20,30), facecolor='white')\nplotnumber = 1\n\nfor column in x:\n    if plotnumber<=16 :\n        ax = plt.subplot(4,4,plotnumber)\n        plt.scatter(x[column],y)\n        plt.xlabel(column,fontsize=20)\n        plt.ylabel('Price',fontsize=20)\n    plotnumber+=1\nplt.tight_layout()","84b1a97d":"from sklearn.preprocessing import StandardScaler\nscalar=StandardScaler()\nx_scaled=scalar.fit_transform(x)","e0c76a5f":"x_scaled","ad3b2564":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvif = pd.DataFrame()\nvif[\"VIF\"] = [variance_inflation_factor(x_scaled,i) for i in range(x_scaled.shape[1])]\nvif[\"Features\"] = x.columns\nvif","ff8ea918":"corrl = db.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(corrl, cbar=True, square= True,fmt='.1f', annot=True, annot_kws={'size':12}, cmap='twilight_shifted_r')","4e77b88b":"from sklearn.model_selection import train_test_split","f4d1c984":"x_train,x_test,y_train,y_test = train_test_split(x_scaled,y,test_size = 0.30,random_state=470)","c4e9a7f7":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import LinearRegression","057cbd27":"dtr = DecisionTreeRegressor()\nran = RandomForestRegressor(n_estimators=90)\nlin = LinearRegression()","9202cffb":"models = {\"Decision tree\" : dtr,\n          \"Random forest\" : ran,\n          \"Linear Regression\" : lin}\nscores= { }","5248b5bd":"for key, value in models.items():    \n    model = value\n    model.fit(x_train, y_train)\n    scores[key] = model.score(x_test, y_test)","fa46bbf3":"scores_frame = pd.DataFrame(scores, index=[\"Accuracy Score\"]).T\nscores_frame.sort_values(by=[\"Accuracy Score\"], axis=0 ,ascending=False, inplace=True)\nscores_frame","c3281e0a":"y_pred=ran.predict(x_test)","836ecc4e":"from sklearn import metrics\nprint('R^2:',metrics.r2_score(y_test, y_pred))\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_test, y_pred))*(len(y_train)-1)\/(len(y_train)-x_train.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_test, y_pred))\nprint('MSE:',metrics.mean_squared_error(y_test, y_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","65382ba4":"# Splitting the dataset for train and test","cd010836":"# Model Evaluation","2b710a5f":"## we can see that the Random Forest Regression is giving good results than other models","0e0d45c6":"### By comparing the above results we can take the Random forest Regressor for the estimation of house rent, with Random forrest regressor we can estimate the house rent with 86% accuracy","67a92891":"# Conclusion","6b5d7523":"### A house can have maximum of 4 bedrooms and above that are not the normal range\n### so we can remove the entries above 4\n### If there is maximum of 4 bedrooms then the bathroom will be maximum of 4\n### So we can remove the values above 4","480a5674":"# Before imputing the null values let's remove the unwanted features as these features does not play any role in the estimation of house rent","fb07c99f":"# Importing the models for training the dataset","b6006207":"### Now let's impute the null values with proper values of central tendencies","b7e285aa":"# Data Visualization","c04349af":"With region name itself we can know in which state the house is located , so there is no use for this state column.\nso we can remove this state column also.","01e36ed4":"The most important feature is sqfeet,region,type,no of bedrooms and bathrooms\nOther features also play a role for rental price but that is of less importance\nBut we can take the other features also for estimation, as all those combining together play some role in estimation.","c4e147a7":"## Label Encoding the categorical string values","f265f1a7":"### we can see there are two columns named dogs_allowed & cats_allowed\n### we can combine those make a single column","2ef3fa8e":"### We can see there are \"0\" values present in the column of price and sq feet\n### According to zoning regulations, the minimum square footage for a house is 120 square feet (single room house).\n### so we can remove the entries which are below 120\n### The sq feet for a big houses can be around 5,000 sqfeeet at the maximum\n### so we can remove the values above 5,000\n### so we can have the values above 100 for price and less than 10,000 as the minimum sq feet is 120 and maximum is 5,000.\n### At the maximum a person can pay 10,000 dollars as rent, if above that means he may buy his own house and pay the EMI rather than paying rent monthly.","92f846cb":"### From the above graph and the vif we can say that there is no multicollinearity in this dataset","7062931f":"## Also checking multicollinearity with heatmap","40388c1e":"## Scatter plot to understand the relation"}}