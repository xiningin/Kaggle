{"cell_type":{"92db6a07":"code","6c63ced6":"code","9b40b76e":"code","62aa52c3":"code","f9c2d05f":"code","0698850a":"code","f342d068":"code","86fd6115":"code","ae2848ab":"code","7d378410":"code","d76e5c57":"code","89fd12c3":"code","10df2bd9":"code","9ab6ee15":"code","2651ade5":"code","5aedc4d3":"code","de9fdf53":"code","6505e455":"code","860fcb6c":"code","4048134f":"code","0946c578":"markdown","2cf49b3a":"markdown","81745774":"markdown","1f289187":"markdown","4453cd6f":"markdown","3776499b":"markdown","10969476":"markdown","4f087f0e":"markdown","f12b307a":"markdown","5d2eb49f":"markdown","b9e3bc0a":"markdown","c6dc4f55":"markdown"},"source":{"92db6a07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c63ced6":"from matplotlib import pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport re\nimport seaborn as sns","9b40b76e":"df = pd.read_csv(\"..\/input\/steam-video-games\/steam-200k.csv\", header=None, index_col=None, names=['UserID', 'Game', 'Action', 'Hours', 'Other'])\ndf.head()","62aa52c3":"df.describe()","f9c2d05f":"df.Action.unique()","0698850a":"len(df.Game.unique())","f342d068":"len(df.UserID.unique())","86fd6115":"game_counts = df.groupby('Game')['Game'].agg('count').sort_values(ascending=False)\ngame_counts = pd.DataFrame({'game': game_counts.index, 'n': game_counts.values})[0:20]\nsns.barplot(y = 'game', x = 'n', data = game_counts)","ae2848ab":"game_counts = df.groupby('Game')['Hours'].agg(np.sum).sort_values(ascending=False)\ngame_counts = pd.DataFrame({'game': game_counts.index, 'hours': game_counts.values})[0:20]\nsns.barplot(y = 'game', x = 'hours', data = game_counts)","7d378410":"user_counts = df.groupby('UserID')['Hours'].agg(np.sum).sort_values(ascending=False)\nuser_counts = pd.DataFrame({'user': user_counts.index, 'hours': user_counts.values})[0:50]\nuser_counts['hours'].plot.bar()\nplt.title('Top 50 users hours played')\nplt.ylabel('Hours')","d76e5c57":"user_counts = df.groupby('UserID')['UserID'].agg('count').sort_values(ascending=False)\nuser_df = pd.DataFrame({'user': user_counts.index, 'n': user_counts.values})\nuser_df.head()","89fd12c3":"n_events = np.sum(user_df['n'])\ncsum = np.cumsum(100.0*user_df['n']\/n_events)\n\n# 80% of data\nthreshold = 80.0\n\nthreshold_idx = np.argmin(np.abs(csum-threshold))\nplt.plot(csum)\nplt.axvline(threshold_idx, color='r')\nplt.title('cumulative sum of user event counts')\nprint('We have found that {} users out of {} ({}%) in total explain {}% of the events in the data.'.format(threshold_idx, user_df.shape[0], 100.0*threshold_idx\/user_df.shape[0], threshold))","10df2bd9":"game_counts = df.groupby('Game')['Game'].agg('count').sort_values(ascending=False)\ngame_df = pd.DataFrame({'game': game_counts.index, 'n': game_counts.values})\ngame_df.head()","9ab6ee15":"n_events = np.sum(game_df['n'])\ncsum = np.cumsum(100.0*game_df['n']\/n_events)\n\n# 80% of data\nthreshold = 80.0\n\nthreshold_idx = np.argmin(np.abs(csum-threshold))\nplt.plot(csum)\nplt.axvline(threshold_idx, color='r')\nplt.title('cumulative sum of game event counts')\nprint('We have found that {} games out of {} ({}%) in total explain {}% of the events in the data.'.format(threshold_idx, game_df.shape[0], 100.0*threshold_idx\/user_df.shape[0], threshold))","2651ade5":"top_users = df.groupby('UserID')['Hours'].agg(np.sum).sort_values(ascending=False).index[1000:1100]\ntop_games = df.groupby('Game')['Hours'].agg(np.sum).sort_values(ascending=False).index[0:80]","5aedc4d3":"dff = df[df['UserID'].isin(top_users)]\ndff = dff[dff['Game'].isin(top_games)]\npivoted = pd.pivot_table(dff, values='Hours', index=['UserID'], columns=['Game'], aggfunc=np.sum).fillna(0)\ns = pivoted.max().max()\npivoted = pivoted \/ s\npivoted.shape","de9fdf53":"sns.clustermap(pivoted, figsize=(20,16))","6505e455":"df_user = df[df['UserID']==101339059]\ndf_user = df_user[df_user['Action']=='play']\ndf_user.head(10)","860fcb6c":"df.sort_values(by=['Hours'], axis=0, ascending=False)","4048134f":"#df_removepop = df.","0946c578":"# Conclusion and Hypothesis evaluation (May 12, 2020)\n\n\n1. There are 'series-loyal' fans\n**Yes**. \nFootball Manager 2011~2015 are clustered at one place. FM 2014 is not far too.\nCall of Duty and Counter Strike series are clustered together as well.\n\n2. There are 'bandwagon users' and who shift among the most popular games (EX: DOTA 2 users play CS:GO as well.)\n**Popular games do have impact.**. Popular games such as DOTA 2, and CS:GO (which are esports games as well) are associated with most users.\nHowever, the most hardcore users play only the game that they are dedicated to.\n\n3. There are Triple A gamers\n**No**. Single player Triple A games such as Skyrim, Payday 2, Total War : Rome 2, Dark Souls 2, Civilization V don't cluster together\n\nOther observations\n\n4. As said in 2, esports game users tend to play that game only.\n\n5. It does not play according to popular belief. Both Total War and Crusader Kings\/Europa Universalis are historical simulators. However, the user base do not seem to cluster together. Maybe because they are time-consuming, and a player only dedicates to one.\n\n6. Console games could have played an impact. Dark Souls series tend to be further from the norm because players would have first played on PS.\n\nFurther observation plans\n\n1. Going to observe once more after cleansing all esports games. (No DOTA 2, CS:GO, CoD, TF2)\n\n2. Would somehow try to tie in the Genre as well. However, I would have hard time discerning Crusader Kings from Total War relying on Steam tags.\n\n\nUser 101339059 looks like me who likes historical and turn based games. 1000+ hours in Rome 2!!","2cf49b3a":"This is the graph according to user play time.\n\nMultiplayer games such as DOTA 2 and CS:GO trump this chart.\n\nAlso, never-ending single player sandbox games such as Civilization 5, Football Manager, and Grand Theft Auto are in the chart as well.\n\n**This statstic could be a marker for which games have the most fervent users (or consumes most time).**","81745774":"User action analysis\n\n**Since more user actions imply that more users have bought \/ played the game, it could mean more user attention.**","1f289187":"# User pattern cluster map\n\nNow its time to make a cluster map.\n\nAs its the cluster map made with the 50 most hardcore users and 80 most popular games, there are severe biases (regarding CS:GO and DOTA 2 user population)\n\nThrough this map, Let's evaluate the hypotheses I made.","4453cd6f":"# Work in Progress","3776499b":"# Does the Pareto Principle(20-80 Rule) apply to Steam as well?\n\nThese are the most active 5 users.","10969476":"# Steam game analysis\n\nhttps:\/\/dnagooner.tistory.com\/50 \ud55c\uad6d\uc778\uc774\ub77c\uba74 \uc5ec\uae30\uc11c \ubc88\uc5ed\ubcf8\uc744 \ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\nSteam is world's largest gaming platform.\nSteam recommends video games according to the user's preferences.\nSteam has several criterions that it uses to recommend games. Those are play time, series, genre and associative rules.\n\nI have made the following hypotheses with myself and my friends' recommendations.\n\n1. There are 'series-loyal' users, and Steam recommends according to it.\n2. There are users who play the 'popular games', and they are recommended by thus (DOTA 2 players play CS:GO, and PUBG as well. Their genres may be different, but they jump into the bandwagon anyway\n3. Further elaborating on the bandwagon theory, there are users who play AAA games which earn GOTY awards.\n\n![image.png](attachment:image.png)\n\nWe never get tired of seeing Gaben and his Steam sale memes.\n\nNow Steam is no longer a child's business, as Gabe Newell is much richer than Donald Trump.","4f087f0e":"# Data set description\n\nIn this dataset, there are two user actions\n\nThe following list is the list of most popular games in 2017, when this dataset was uploaded\n\n1. DOTA 2\n2. Team Fortress 2 (TF2)\n3. Counter Strike : Global Offensive (CS:GO)\n4. Unturned\n5. Left 4 Dead 2","f12b307a":"Now lets check out the games.\n\n**Games are more polarized.**\n\n**6.71% account for 80%.**","5d2eb49f":"Just in case you wanted to see the most hardcore users...","b9e3bc0a":"Now I've plotted with a user activity threshold of 80%\n\n17.1% of users are responsible for 80% of data.\n\nSomewhat more polarized than 20-80.","c6dc4f55":"How long did the most enthusiastic gamer play games for?\n\n**He played around 12000 hours. Civilization V too.**"}}