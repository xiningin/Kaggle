{"cell_type":{"73c1872a":"code","d58c9e75":"code","7128fd1b":"code","95caac3d":"code","754785ae":"code","138375f4":"code","dfcd1bce":"code","e7739529":"code","da3840f3":"code","b82ae705":"code","0abbd3ac":"code","3c3c1a7d":"code","ec0e522b":"code","06f5139d":"code","f2540041":"code","3584f7b0":"code","63d8f8e5":"markdown","b3a8e25a":"markdown","ccd3ab22":"markdown","aee53558":"markdown","fd43296e":"markdown","484c876b":"markdown","96068446":"markdown","8a143038":"markdown","a9bd18a7":"markdown","1a29929c":"markdown","71d9b488":"markdown","100d5bba":"markdown","7a715265":"markdown","ded0268e":"markdown","1899e478":"markdown","d1f513d4":"markdown","0bf95b2d":"markdown","04783a1b":"markdown","b26ad03a":"markdown","0260e647":"markdown","da087219":"markdown","1267c7ab":"markdown","31619104":"markdown","b890b7e6":"markdown","1ff5aa42":"markdown","6337e758":"markdown"},"source":{"73c1872a":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt","d58c9e75":"dfconfirmed=pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndfdeaths=pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\ndfrecovered=pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')","7128fd1b":"import collections\n\ndef stripZeros(df):\n    count=0\n    for x in df.values[0]:\n        count+=1\n        if(x!=0):\n            return count-1, df.iloc[:,count-1:]\n\ndfcountry= collections.defaultdict(dict)\n\ndfcountry['rs']['population']=6963764\ndfcountry['bg']['population']=6951482\ndfcountry['ro']['population']=19405156\ndfcountry['hr']['population']=4076246\ndfcountry['si']['population']=2094060\ndfcountry['it']['population']=60238522\ndfcountry['gr']['population']=10724599\ndfcountry['se']['population']=10338368\ndfcountry['es']['population']=47100396\ndfcountry['de']['population']=83149300\ndfcountry['sk']['population']=5456362\n\ndfcountry['rs']['day'], dfcountry['rs']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Serbia'].iloc[:,4:])\ndfcountry['bg']['day'], dfcountry['bg']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Bulgaria'].iloc[:,4:])\ndfcountry['ro']['day'], dfcountry['ro']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Romania'].iloc[:,4:])\ndfcountry['hr']['day'], dfcountry['hr']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Croatia'].iloc[:,4:])\ndfcountry['si']['day'], dfcountry['si']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Slovenia'].iloc[:,4:])\ndfcountry['it']['day'], dfcountry['it']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Italy'].iloc[:,4:])\ndfcountry['gr']['day'], dfcountry['gr']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Greece'].iloc[:,4:])\ndfcountry['se']['day'], dfcountry['se']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Sweden'].iloc[:,4:])\ndfcountry['es']['day'], dfcountry['es']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Spain'].iloc[:,4:])\ndfcountry['de']['day'], dfcountry['de']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Germany'].iloc[:,4:])\ndfcountry['sk']['day'], dfcountry['sk']['confirmed']=stripZeros(dfconfirmed.loc[dfconfirmed['Country\/Region']=='Slovakia'].iloc[:,4:])\n\ndfcountry['rs']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Serbia'].iloc[:,4+dfcountry['rs']['day']:]\ndfcountry['bg']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Bulgaria'].iloc[:,4+dfcountry['bg']['day']:]\ndfcountry['ro']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Romania'].iloc[:,4+dfcountry['ro']['day']:]\ndfcountry['hr']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Croatia'].iloc[:,4+dfcountry['hr']['day']:]\ndfcountry['si']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Slovenia'].iloc[:,4+dfcountry['si']['day']:]\ndfcountry['it']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Italy'].iloc[:,4+dfcountry['it']['day']:]\ndfcountry['gr']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Greece'].iloc[:,4+dfcountry['gr']['day']:]\ndfcountry['se']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Sweden'].iloc[:,4+dfcountry['se']['day']:]\ndfcountry['es']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Spain'].iloc[:,4+dfcountry['es']['day']:]\ndfcountry['de']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Germany'].iloc[:,4+dfcountry['de']['day']:]\ndfcountry['sk']['deaths']=dfdeaths.loc[dfdeaths['Country\/Region']=='Germany'].iloc[:,4+dfcountry['sk']['day']:]\n\ndfcountry['rs']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Serbia'].iloc[:,4+dfcountry['rs']['day']:]\ndfcountry['bg']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Bulgaria'].iloc[:,4+dfcountry['bg']['day']:]\ndfcountry['ro']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Romania'].iloc[:,4+dfcountry['ro']['day']:]\ndfcountry['hr']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Croatia'].iloc[:,4+dfcountry['hr']['day']:]\ndfcountry['si']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Slovenia'].iloc[:,4+dfcountry['si']['day']:]\ndfcountry['it']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Italy'].iloc[:,4+dfcountry['it']['day']:]\ndfcountry['gr']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Greece'].iloc[:,4+dfcountry['gr']['day']:]\ndfcountry['se']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Sweden'].iloc[:,4+dfcountry['se']['day']:]\ndfcountry['es']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Spain'].iloc[:,4+dfcountry['es']['day']:]\ndfcountry['de']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Germany'].iloc[:,4+dfcountry['de']['day']:]\ndfcountry['sk']['recovered']=dfrecovered.loc[dfrecovered['Country\/Region']=='Germany'].iloc[:,4+dfcountry['sk']['day']:]","95caac3d":"dfstemp=pd.read_excel('https:\/\/data.gov.rs\/sr\/datasets\/r\/a57afd99-85d5-4f8e-9740-5363e6ceb40e')\ndfstemp.head(15)","754785ae":"dfsarr=dfstemp['Vrednost'].values\ndfsarr=dfsarr.reshape(-1,17)\ndfs=pd.DataFrame(data=dfsarr, columns=['RESP_TOTAL','HOSP_TOTAL','POZITOVNO_DAN','POZ_UKUPNO','TEST_DAN','TEST_UKUPNO','UMRLI_DAN','UMM_DAN','UMZ_DAN','UMR_UKUPNO','PROS_GOD_DAN','PROC1','PROC2','PROC3','PROC4','IZLECENO_UKUPNO','PROC5'])","138375f4":"plt.rcParams[\"figure.figsize\"] = (14,10)\nplt.rcParams.update({'font.size': 16})\nplt.yscale('log') \n\nplt.title('Number of confirmed cases in selected countries since day 1')\nplt.plot(dfcountry['rs']['confirmed'].values[0],linewidth=4.0)\nplt.plot(dfcountry['bg']['confirmed'].values[0])\nplt.plot(dfcountry['hr']['confirmed'].values[0])\nplt.plot(dfcountry['si']['confirmed'].values[0])\nplt.plot(dfcountry['gr']['confirmed'].values[0])\nplt.plot(dfcountry['ro']['confirmed'].values[0])\nplt.plot(dfcountry['it']['confirmed'].values[0])\nplt.plot(dfcountry['se']['confirmed'].values[0])\nplt.plot(dfcountry['es']['confirmed'].values[0])\nplt.plot(dfcountry['de']['confirmed'].values[0])\nplt.plot(dfcountry['sk']['confirmed'].values[0])\nplt.xlabel('Days since first occurence')\nplt.ylabel('Number of confirmed cases (log)')\nplt.legend(['RS','BG','HR','SI','GR','RO','IT','SE','ES','DE','SK'])\nplt.grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","dfcd1bce":"plt.rcParams[\"figure.figsize\"] = (14,10)\nplt.rcParams.update({'font.size': 16})\n\nfig, ax = plt.subplots(2, 2, figsize=(17, 10))\nplt.subplots_adjust(wspace=0.2, hspace=0.8)\n\nax[0,0].set_title('Number of recovered confirmed cases\\n in selected countries (region) since day 1')\nax[0,0].plot(dfcountry['rs']['recovered'].values[0],linewidth=4.0)\nax[0,0].plot(dfcountry['bg']['recovered'].values[0])\nax[0,0].plot(dfcountry['hr']['recovered'].values[0])\nax[0,0].plot(dfcountry['si']['recovered'].values[0])\nax[0,0].plot(dfcountry['gr']['recovered'].values[0])\nax[0,0].plot(dfcountry['ro']['recovered'].values[0])\nax[0,0].set_xlabel('Days since first occurence')\nax[0,0].set_ylabel('Number of recovered cases')\nax[0,0].legend(['RS','BG','HR','SI','GR','RO'])\nax[0,0].grid(color='gray', ls = '-.', lw = 0.2)\n\n\nax[0,1].set_title('Number of recovered confirmed cases\\n in selected countries since day 1')\nax[0,1].plot(dfcountry['it']['recovered'].values[0])\nax[0,1].plot(dfcountry['se']['recovered'].values[0])\nax[0,1].plot(dfcountry['es']['recovered'].values[0])\nax[0,1].plot(dfcountry['de']['recovered'].values[0])\nax[0,1].set_xlabel('Days since first occurence')\nax[0,1].set_ylabel('Number of recovered cases')\nax[0,1].legend(['IT','SE','ES','DE'])\nax[0,1].grid(color='gray', ls = '-.', lw = 0.2)\n\nax[1,0].set_title('Number of recovered confirmed cases\\n in selected countries (region) since day 1\\n per 100,000 population')\nax[1,0].plot(100000*dfcountry['rs']['recovered'].values[0]\/dfcountry['rs']['population'],linewidth=4.0)\nax[1,0].plot(100000*dfcountry['bg']['recovered'].values[0]\/dfcountry['bg']['population'])\nax[1,0].plot(100000*dfcountry['hr']['recovered'].values[0]\/dfcountry['hr']['population'])\nax[1,0].plot(100000*dfcountry['si']['recovered'].values[0]\/dfcountry['si']['population'])\nax[1,0].plot(100000*dfcountry['gr']['recovered'].values[0]\/dfcountry['gr']['population'])\nax[1,0].plot(100000*dfcountry['ro']['recovered'].values[0]\/dfcountry['ro']['population'])\nax[1,0].set_xlabel('Days since first occurence')\nax[1,0].set_ylabel('Number of recovered cases')\nax[1,0].legend(['RS','BG','HR','SI','GR','RO'])\nax[1,0].grid(color='gray', ls = '-.', lw = 0.2)\n\nax[1,1].set_title('Number of recovered confirmed cases\\n in selected countries since day 1\\n per 100,000 population')\nax[1,1].plot(100000*dfcountry['it']['recovered'].values[0]\/dfcountry['it']['population'])\nax[1,1].plot(100000*dfcountry['se']['recovered'].values[0]\/dfcountry['se']['population'])\nax[1,1].plot(100000*dfcountry['es']['recovered'].values[0]\/dfcountry['es']['population'])\nax[1,1].plot(100000*dfcountry['de']['recovered'].values[0]\/dfcountry['de']['population'])\nax[1,1].set_xlabel('Days since first occurence')\nax[1,1].set_ylabel('Number of recovered cases')\nax[1,1].legend(['IT','SE','ES','DE'])\nax[1,1].grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","e7739529":"plt.rcParams[\"figure.figsize\"] = (14,10)\nplt.rcParams.update({'font.size': 16})\n\nfig, ax = plt.subplots(1, 2, figsize=(17, 5))\nplt.subplots_adjust(wspace=0.2, hspace=0.8)\n\nax[0].set_title('Number of deaths per 100,000 population\\n of selected countries (region) since day 1')\nax[0].plot(100000*dfcountry['rs']['deaths'].values[0]\/dfcountry['rs']['population'],linewidth=4.0)\nax[0].plot(100000*dfcountry['bg']['deaths'].values[0]\/dfcountry['bg']['population'])\nax[0].plot(100000*dfcountry['hr']['deaths'].values[0]\/dfcountry['hr']['population'])\nax[0].plot(100000*dfcountry['si']['deaths'].values[0]\/dfcountry['si']['population'])\nax[0].plot(100000*dfcountry['gr']['deaths'].values[0]\/dfcountry['gr']['population'])\nax[0].plot(100000*dfcountry['ro']['deaths'].values[0]\/dfcountry['ro']['population'])\nax[0].set_xlabel('Days since first occurence')\nax[0].set_ylabel('Mortality rate')\nax[0].legend(['RS','BG','HR','SI','GR','RO'])\nax[0].grid(color='gray', ls = '-.', lw = 0.2)\n\nax[1].set_title('Number of deaths per 100,000 population\\n of selected countries since day 1')\nax[1].plot(100000*dfcountry['it']['deaths'].values[0]\/dfcountry['it']['population'])\nax[1].plot(100000*dfcountry['se']['deaths'].values[0]\/dfcountry['se']['population'])\nax[1].plot(100000*dfcountry['es']['deaths'].values[0]\/dfcountry['es']['population'])\nax[1].plot(100000*dfcountry['de']['deaths'].values[0]\/dfcountry['de']['population'])\nax[1].set_xlabel('Days since first occurence')\nax[1].set_ylabel('Mortality rate')\nax[1].legend(['IT','SE','ES','DE'])\nax[1].grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","da3840f3":"plt.rcParams[\"figure.figsize\"] = (14,10)\nplt.rcParams.update({'font.size': 16})\n\nplt.title('Rate of number of deaths vs confirmed cases in\\n selected countries since day 1 (%)')\nplt.plot(100*dfcountry['rs']['deaths'].values[0]\/dfcountry['rs']['confirmed'].values[0],linewidth=4.0)\nplt.plot(100*dfcountry['bg']['deaths'].values[0]\/dfcountry['bg']['confirmed'].values[0])\nplt.plot(100*dfcountry['hr']['deaths'].values[0]\/dfcountry['hr']['confirmed'].values[0])\nplt.plot(100*dfcountry['si']['deaths'].values[0]\/dfcountry['si']['confirmed'].values[0])\nplt.plot(100*dfcountry['gr']['deaths'].values[0]\/dfcountry['gr']['confirmed'].values[0])\nplt.plot(100*dfcountry['ro']['deaths'].values[0]\/dfcountry['ro']['confirmed'].values[0])\nplt.plot(100*dfcountry['it']['deaths'].values[0]\/dfcountry['it']['confirmed'].values[0])\nplt.plot(100*dfcountry['se']['deaths'].values[0]\/dfcountry['se']['confirmed'].values[0])\nplt.plot(100*dfcountry['es']['deaths'].values[0]\/dfcountry['es']['confirmed'].values[0])\nplt.plot(100*dfcountry['de']['deaths'].values[0]\/dfcountry['de']['confirmed'].values[0])\nplt.xlabel('Days since first occurence')\nplt.ylabel('Number of deaths vs confirmed cases (%)')\nplt.legend(['RS','BG','HR','SI','GR','RO','IT','SE','ES','DE'])\nplt.grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","b82ae705":"plt.rcParams.update({'font.size': 13})\n\nfig, ax = plt.subplots(2, 1, figsize=(17, 10))\nplt.subplots_adjust(wspace=0.2, hspace=0.8)\ns=dfs['HOSP_TOTAL'].values.size\n\nax[0].plot(dfs['HOSP_TOTAL'])\nax[0].set_title('Number of hospitalized confirmed cases in RS')\nax[0].set_xlabel('Days since first occurence')\nax[1].set_xlabel('Days since first occurence')\nax[0].set_ylabel('Number of patients')\nax[1].set_ylabel('Number of patients')\nax[1].plot(dfs['RESP_TOTAL'])\nax[1].set_title('Number of confirmed cases in ICU in RS')\nax[1].axvspan(s-2, s-1, color='red', alpha=0.3)\nax[1].axvspan(s-3, s-2, color='red', alpha=0.2)\nax[1].axvspan(s-4, s-3, color='red', alpha=0.1)\nax[0].axvspan(s-2, s-1, color='red', alpha=0.3)\nax[0].axvspan(s-3, s-2, color='red', alpha=0.2)\nax[0].axvspan(s-4, s-3, color='red', alpha=0.1)\nax[0].grid(color='gray', ls = '-.', lw = 0.2)\nax[1].grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","0abbd3ac":"s=dfs['POZ_UKUPNO'].values.size\nplt.rcParams[\"figure.figsize\"] = (13,9)\nplt.rcParams.update({'font.size': 14})\nplt.plot(100*dfs['RESP_TOTAL'].values\/dfs['HOSP_TOTAL'].values)\nplt.plot(100*dfs['RESP_TOTAL'].values\/dfs['POZ_UKUPNO'].values)\nplt.title('Rate of ICU vs hospitalized\/confirmed cases in RS (%)')\nplt.xlabel('Days since first occurence')\nplt.ylabel('Rate of ICU vs hospitalized vs confirmed cases (%)')\nplt.axvspan(s-2, s-1, color='red', alpha=0.3)\nplt.axvspan(s-3, s-2, color='red', alpha=0.2)\nplt.axvspan(s-4, s-3, color='red', alpha=0.1)\nplt.legend(['ICU vs hospitalized','ICU vs confirmed'])\nplt.grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","3c3c1a7d":"s=dfs['POZ_UKUPNO'].values.size\nplt.rcParams[\"figure.figsize\"] = (13,9)\nplt.rcParams.update({'font.size': 14})\nplt.plot(100*dfs['POZ_UKUPNO'].values\/dfs['TEST_UKUPNO'].values)\nplt.plot(100*dfs['POZITOVNO_DAN'].values\/dfs['TEST_DAN'].values)\nplt.title('Rate of confirmed vs tested cases in RS (%)')\nplt.xlabel('Days since first occurence')\nplt.ylabel('Rate of confirmed vs tested cases (%)')\nplt.axvspan(s-2, s-1, color='red', alpha=0.3)\nplt.axvspan(s-3, s-2, color='red', alpha=0.2)\nplt.axvspan(s-4, s-3, color='red', alpha=0.1)\nplt.legend(['Cumulative','Daily'])\nplt.grid(color='gray', ls = '-.', lw = 0.2)\n\nplt.show()","ec0e522b":"dfsztemp=pd.read_excel('https:\/\/data.gov.rs\/sr\/datasets\/r\/1977833a-36f2-445e-916a-ef51b217d3a0')\ndfsztemp.head()","06f5139d":"plt.rcParams[\"figure.figsize\"] = (18,8)\nplt.rcParams.update({'font.size': 15})\n\nplt.title('Distribution of confirmed cases across country in RS (top 30)')\nplt.xlabel('City')\nplt.ylabel('Number of confirmed cases')\n\ndfgar=dfsztemp.groupby('\u041c\u0435\u0441\u0442\u043e (\u041c\u0423\u041f)').count().sort_values('\u041f\u043e\u043b', ascending=False)['\u041f\u043e\u043b']\nbars = plt.bar(dfgar.index[0:30], dfgar.values[0:30], color='y')\nplt.grid(color='gray', ls = '-.', lw = 0.2)\nplt.xticks(rotation=90)\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x(), yval + 5, yval, fontsize=12)\n\nplt.show()","f2540041":"dfgop=dfsztemp.groupby('\u041e\u043f\u0448\u0442\u0438\u043d\u0430 (\u041c\u0423\u041f)').count().sort_values('\u041f\u043e\u043b', ascending=False)['\u041f\u043e\u043b']\ndfz = pd.DataFrame({'Mesto':dfgop.index, 'Zarazeni':dfgop.values})\ndfo=pd.read_csv('..\/input\/opstine.csv', header=None, names=['Mesto', 'Stanovnika'])\ndfcombined = pd.merge(dfz, dfo, on='Mesto', how='inner')\ndfcombined['Zarazenipo1000']=round(1000*dfcombined['Zarazeni']\/dfcombined['Stanovnika'],1)\ndel dfcombined['Zarazeni']\ndel dfcombined['Stanovnika']\ndfcombined=dfcombined.sort_values('Zarazenipo1000', ascending=False)\ndfcombined.head()","3584f7b0":"plt.rcParams[\"figure.figsize\"] = (18,8)\nplt.rcParams.update({'font.size': 15})\n\nplt.title('Distribution of confirmed cases in municipalities in RS per 1000 capita (2008 census data)')\nplt.xlabel('Municipality')\nplt.ylabel('Number of confirmed cases per 1000')\n\nbars1 = plt.bar(dfcombined['Mesto'].values[0:30], dfcombined['Zarazenipo1000'].values[0:30], color='r')\nplt.grid(color='gray', ls = '-.', lw = 0.2)\nplt.xticks(rotation=90)\n\nplt.show()","63d8f8e5":"Remember that number of confirmed cases could also be interpreted as: number of cases treated or monitored by national health systems? Then, this visual shows how many of those treated or monitored \u2013 die. This indicator could be used to measure how one national system deals with the most difficult cases \u2013 how they are good in actually saving lives.","b3a8e25a":"Basically, it does not mean a thing. You can\u2019t use this visual to make any conclusions about how different countries are doing. However, if you interpret this number as number of cases treated OR monitored by a health system, it could make sense to use it for some analyses that consider the health system capacity.","ccd3ab22":"# How well the system is doing in treating cases with light\/medium symptoms?","aee53558":"Data is downloaded from the sources above and transformed to a shape convenient for the later use.","fd43296e":"Those two curves are getting close one to another, because since the beginning of April, ALL confirmed cases are being hospitalized (one way or another). Another issue is that, cases without any of the symptoms are also hospitalized since beginning of April. We don\u2019t know how many of those there are.","484c876b":"This indicator is regularly tracked by epidemiologists in Serbia and often used to illustrate the progress. On April 16th, they informally announced that 5% value of this indicator is a milestone for starting considering relaxation of government measures. It is not clear whether they are tracking cumulative or daily.","96068446":"It uses two live datasets. First is the most widely used data on confirmed, recovered cases and deaths in all countries, managed by Johns Hopkins Center for Systems Science and Engineering (JHU CSSE) (https:\/\/systems.jhu.edu\/). They also run great dashboard (https:\/\/coronavirus.jhu.edu\/map.html) from the beginning of crisis. Data for real-time use are published on github, here - https:\/\/github.com\/CSSEGISandData\/COVID-19. Another is daily report data (https:\/\/data.gov.rs\/sr\/datasets\/dnevni-izveshtaj-covid-19\/), managed by Serbian Open Data Portal (http:\/\/data.gov.rs\/). It shows much more detailed information (comparing to JHU CSSE) in a time-series format about how the crisis progresses in Serbia. JHU CSSE data is updated at 02:00 CET. Daily report data is updated around 15:30 CET.","8a143038":"This is my personal dashboard for tracking the progress of Covid-19 epidemic in time, in Serbia. It shows visualizations which I personally use to make my own personal perceptions about it. I am not an epidemiologist, I am a mechanical engineer experienced in data analysis. Thus, the choice of indicators is mostly driven by one\u2019s engineer intuition, not a formal domain education. There are lots of weaknesses of the approach, mostly due to: 1) many obvious issues in data acquisition (testing methodology), 2) health system protocols and rules change in time, 3) very poor data coverage, namely, inability to get representative data. Having said that, the approach is something I consider the least bad in a given circumstances.","a9bd18a7":"This is potentially most important question. Virus activity, as it was called by Serbian epidemiologists in multiple occasions is the rate of confirmed vs tested cases.","1a29929c":"Also, pretty much useless indicator from at least two reasons. First and obvious, nobody knows how many non-registered cases (symptomatic or asymptomatic) recovers. Second, recovery could be formally defined differently in different health systems.","71d9b488":"# (In)Famous log curve","100d5bba":"Mortality is defined as number of deaths per 100000 population. Don\u2019t get scared \u2013 it will always go up. Mind the gradient and current number, though.","7a715265":"# What is the threat to a Serbian National Health System?","ded0268e":"How many hospitalized confirmed cases, OR what\u2019s the threat to a health system capacity in terms of number of beds? How many confirmed cases in intensive care, OR what\u2019s the threat to a health system to deal with cases with the most difficult symptoms? The problem is that we don\u2019t know what hospitalization exactly means.","1899e478":"# Mortality rates in selected countries","d1f513d4":"# How many recovered?","0bf95b2d":"# Geographic distribution of cases","04783a1b":"This is a bonus, but not advertised at the beginning of the notebook as it is based on highly unreliable data, not organized as time-series. Some recent efforts in making this data more convenient are visible but still not significant.","b26ad03a":"Comparing between countries MAY make sense, but ONLY: in the SPECIFIC day since first occurrence AND if you KNOW for sure that two countries you compare have same protocols for declaring deaths by Covid AND if testing coverage in those countries is similar.","0260e647":"The visual shows how many (percentage) of those who have some symptoms (treated or monitored by health system) end up on the ventilation.","da087219":"Mind that since beginning of April, ALL confirmed cases are being hospitalized. Those with light or no symptoms are being \u201chospitalized\u201d in improvised hospitals \u2013 sport halls, fair buildings, etc. Those with medium or difficult symptoms are sent to \u201creal\u201d hospitals. Unfortunately, data does not make difference \u2013 we don\u2019t know how many of those confirmed are with light and how many with medium or difficult symptoms.","1267c7ab":"If the lethality trend is downward, that may mean that the country is increasing the testing coverage, meaning that patients with very light or no symptoms are also tested.","31619104":"# How active is the virus?","b890b7e6":"Still, it comes handy for trolling those who still believe that 5G antennas and migrant populations are used for spreading the virus.","1ff5aa42":"# Mortality\/lethality, a slightly different view","6337e758":"# Getting and preparing data"}}