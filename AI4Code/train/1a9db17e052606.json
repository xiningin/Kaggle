{"cell_type":{"0ba9ed8a":"code","9f6bd3d8":"code","a680d6f9":"code","02e26548":"code","3405d8f3":"code","f2d696ae":"code","0433b7f6":"code","800d21db":"code","e433353b":"code","bbe1a7ad":"code","92670eca":"code","39c3d9b1":"code","f1465e6e":"code","286ee161":"code","3842f868":"code","2ec7fdae":"code","4a6759c5":"code","6abdfe5c":"code","083f333c":"code","1e2b5e71":"code","677ce76c":"code","8b35cc95":"markdown","61054145":"markdown","7bf6173f":"markdown","098d8a77":"markdown","c5ed6747":"markdown","5bc9d867":"markdown","38cb1db1":"markdown","5c9993b2":"markdown","8942dc84":"markdown","61474ccb":"markdown","d5afb22f":"markdown","01f5627e":"markdown","f15ac3ce":"markdown","b353a2e9":"markdown","f5b78ebc":"markdown","ca877471":"markdown","73ad9c28":"markdown","f1422ee6":"markdown","72209a6a":"markdown"},"source":{"0ba9ed8a":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier, RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score, mean_absolute_error\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegressionCV\n\nfrom imblearn.under_sampling import RandomUnderSampler\nimport numpy as np\n","9f6bd3d8":"df = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndf.head(5)","a680d6f9":"sns.pairplot(df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n       'pH', 'sulphates', 'alcohol']])","02e26548":"sns.pairplot(df, x_vars=['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n       'pH', 'sulphates', 'alcohol'], y_vars='quality')","3405d8f3":"fig, ax = plt.subplots(figsize=(10,8))\n\ncorrelation = df.corr()\nsns.heatmap(correlation, cmap='coolwarm', annot=True, fmt=\".2f\")\n\nplt.xticks","f2d696ae":"sns.countplot(df['quality'], data=df)","0433b7f6":"labels = ['bad', 'good']\nbins = [2,6.5,8]\ndf['quality'] = pd.cut(df['quality'], bins=bins, labels=labels)","800d21db":"label_enc = LabelEncoder()\ndf['quality'] = label_enc.fit_transform(df['quality'])","e433353b":"X = df.drop('quality', axis=1)\ny = df['quality']","bbe1a7ad":"resampler = RandomUnderSampler(random_state=0, replacement=True)\nresampler.fit(X,y)\nX_resampled, y_resampled = resampler.fit_resample(X,y)","92670eca":"sns.countplot(y_resampled)","39c3d9b1":"X_resampled.isnull().sum()","f1465e6e":"X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.2, random_state=42)","286ee161":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","3842f868":"model2 = LogisticRegressionCV(cv=5,random_state=0)\nmodel2.fit(X_train,y_train)\npred2 = model2.predict(X_test)\nprint(mean_absolute_error(y_test,pred2))\nprint(accuracy_score(y_test,pred2))","2ec7fdae":"print(classification_report(y_test,pred2))","4a6759c5":"model1 = RandomForestClassifier(n_estimators=50, max_depth=10, max_features='log2')\n\nparam_grid = {\n    'n_estimators' : [50,1000],\n    'max_depth': [1,100],\n    'max_features': ['auto', 'sqrt', 'log2']\n}\n\n\nCV_rfc = GridSearchCV(estimator=model1, param_grid=param_grid, cv= 5)\nCV_rfc.fit(X, y)\nprint (CV_rfc.best_params_)","6abdfe5c":"model1 = RandomForestClassifier(n_estimators=50, max_depth=100, max_features='log2')\n\nmodel1.fit(X_train,y_train)\npred1 = model1.predict(X_test)\nprint(mean_absolute_error(y_test,pred1))\nprint(accuracy_score(y_test,pred1))","083f333c":"print(classification_report(y_test,pred1))","1e2b5e71":"clf = GradientBoostingClassifier(n_estimators=40,  learning_rate=0.2, max_depth=1)\n\nclf.fit(X_train,y_train)\npred3 = clf.predict(X_test)\nprint(mean_absolute_error(y_test,pred3))\nprint(accuracy_score(y_test,pred3))","677ce76c":"print(classification_report(y_test,pred3))","8b35cc95":"### Logistic Regression","61054145":"### Check dataset classes balance","7bf6173f":"### Random Forest Classifier","098d8a77":"As we can see some features have linear dependency. In this case we need to check there correlation,\nin case if it is high, than we will drop on of it or using two of them create new feature.","c5ed6747":"First we will check if features correlate with each other. \nEasy can use function pairplot to visualize it.","5bc9d867":"Split dataset on train and test","38cb1db1":"### Gradient Boosting","5c9993b2":"Normalize data","8942dc84":"#### Upsample dataset","61474ccb":"## Import ","d5afb22f":"### Correlation Matrix","01f5627e":"## Data Exploration","f15ac3ce":"As we can see, labels are not balanced. So we need first to transform it to binary labels and unsample it","b353a2e9":"## Reading Input","f5b78ebc":"Now we have balanced dataset","ca877471":"### Check for linerity","73ad9c28":"Check linear relationship between the features and the target.","f1422ee6":"## Data PreProcessing","72209a6a":"## Model training"}}