{"cell_type":{"c9d64046":"code","4cd086d7":"code","e3e3ba28":"code","fca6f98a":"code","e7c2074d":"code","f9833b25":"code","83bea638":"code","09ccddd9":"code","7c3c9208":"code","b39b514b":"code","b2af3615":"code","7efe144b":"code","b53d36ce":"code","d79c32bf":"code","ff7a77a8":"code","e14d7101":"code","23a098e9":"code","deb967b7":"code","a7436bfe":"code","7b9af547":"code","016d5e02":"code","e889431f":"code","120fa059":"code","27f2120a":"code","2a546a81":"code","44b62b16":"code","daa87466":"code","4c1dd2c1":"code","e2ae6eff":"code","365b1b7c":"markdown","19f7b652":"markdown","aba85659":"markdown","5808c0ab":"markdown","52ff74cd":"markdown"},"source":{"c9d64046":"import pandas as pd\nimport numpy as np","4cd086d7":"titanic = pd.read_csv('..\/input\/train.csv', header = 0, dtype={'Age': np.float64})\ntitanic.tail()","e3e3ba28":"titanic.describe()","fca6f98a":"#Name column can never decide survival of a person, hence we can safely delete it\ndel titanic[\"Name\"]\ntitanic.head()","e7c2074d":"del titanic[\"Ticket\"]\ntitanic.head()","f9833b25":"del titanic[\"Fare\"]\ntitanic.head()","83bea638":"del titanic['Cabin']\ntitanic.head()","09ccddd9":"# Changing Value for \"Male, Female\" string values to numeric values , male=1 and female=2\ndef getNumber(str):\n    if str==\"male\":\n        return 1\n    else:\n        return 2\ntitanic[\"Gender\"]=titanic[\"Sex\"].apply(getNumber)\n#We have created a new column called \"Gender\" and \n#filling it with values 1,2 based on the values of sex column\ntitanic.head()","7c3c9208":"#Deleting Sex column, since no use of it now\ndel titanic[\"Sex\"]\ntitanic.head()","b39b514b":"titanic.isnull().sum()","b2af3615":"meanS= titanic[titanic.Survived==1].Age.mean()\nmeanS","7efe144b":"titanic[\"age\"]=np.where(pd.isnull(titanic.Age) & titanic[\"Survived\"]==1  ,meanS, titanic[\"Age\"])\ntitanic.head()","b53d36ce":"titanic.isnull().sum()","d79c32bf":"# Finding the mean age of \"Not Survived\" people\nmeanNS=titanic[titanic.Survived==0].Age.mean()\nmeanNS","ff7a77a8":"titanic.age.fillna(meanNS,inplace=True)\ntitanic.head()","e14d7101":"titanic.isnull().sum()","23a098e9":"del titanic['Age']\ntitanic.head()","deb967b7":"# Finding the number of people who have survived \n# given that they have embarked or boarded from a particular port\n\nsurvivedQ = titanic[titanic.Embarked == 'Q'][titanic.Survived == 1].shape[0]\nsurvivedC = titanic[titanic.Embarked == 'C'][titanic.Survived == 1].shape[0]\nsurvivedS = titanic[titanic.Embarked == 'S'][titanic.Survived == 1].shape[0]\nprint(survivedQ)\nprint(survivedC)\nprint(survivedS)","a7436bfe":"survivedQ = titanic[titanic.Embarked == 'Q'][titanic.Survived == 0].shape[0]\nsurvivedC = titanic[titanic.Embarked == 'C'][titanic.Survived == 0].shape[0]\nsurvivedS = titanic[titanic.Embarked == 'S'][titanic.Survived == 0].shape[0]\nprint(survivedQ)\nprint(survivedC)\nprint(survivedS)","7b9af547":"titanic.dropna(inplace=True)\ntitanic.head()","016d5e02":"titanic.isnull().sum()","e889431f":"#Renaming \"age\" and \"gender\" columns\ntitanic.rename(columns={'age':'Age'}, inplace=True)\ntitanic.head()","120fa059":"titanic.rename(columns={'Gender':'Sex'}, inplace=True)\ntitanic.head()","27f2120a":"def getEmb(str):\n    if str==\"S\":\n        return 1\n    elif str=='Q':\n        return 2\n    else:\n        return 3\ntitanic[\"Embark\"]=titanic[\"Embarked\"].apply(getEmb)\ntitanic.head()","2a546a81":"del titanic['Embarked']\ntitanic.rename(columns={'Embark':'Embarked'}, inplace=True)\ntitanic.head()","44b62b16":"#Drawing a pie chart for number of males and females aboard\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n\nmales = (titanic['Sex'] == 1).sum() \n#Summing up all the values of column gender with a \n#condition for male and similary for females\nfemales = (titanic['Sex'] == 2).sum()\nprint(males)\nprint(females)\np = [males, females]\nplt.pie(p,    #giving array\n       labels = ['Male', 'Female'], #Correspndingly giving labels\n       colors = ['green', 'yellow'],   # Corresponding colors\n       explode = (0.15, 0),    #How much the gap should me there between the pies\n       startangle = 0)  #what start angle should be given\nplt.axis('equal') \nplt.show()","daa87466":"# More Precise Pie Chart\nMaleS=titanic[titanic.Sex==1][titanic.Survived==1].shape[0]\nprint(MaleS)\nMaleN=titanic[titanic.Sex==1][titanic.Survived==0].shape[0]\nprint(MaleN)\nFemaleS=titanic[titanic.Sex==2][titanic.Survived==1].shape[0]\nprint(FemaleS)\nFemaleN=titanic[titanic.Sex==2][titanic.Survived==0].shape[0]\nprint(FemaleN)","4c1dd2c1":"chart=[MaleS,MaleN,FemaleS,FemaleN]\ncolors=['lightskyblue','yellowgreen','Yellow','Orange']\nlabels=[\"Survived Male\",\"Not Survived Male\",\"Survived Female\",\"Not Survived Female\"]\nexplode=[0,0.05,0,0.1]\nplt.pie(chart,labels=labels,colors=colors,explode=explode,startangle=100,counterclock=False,autopct=\"%.2f%%\")\nplt.axis(\"equal\")\nplt.show()","e2ae6eff":"#x_test=pd.read_csv(\"\/Users\/anirbandutta\/Desktop\/Machine Learning\/test_titanic_x_test.csv\")\n#x_test.head()\n#same for x_test..","365b1b7c":"### Fill the null values of the Age column. Fill mean Survived age(mean age of the survived people) in the column where the person has survived and mean not Survived age (mean age of the people who have not survived) in the column where person has not survived###\n","19f7b652":"### We want to check if \"Embarked\" column is is important for analysis or not, that is whether survival of the person depends on the Embarked column value or not###\n","aba85659":"As there are significant changes in the survival rate based on which port the passengers aboard the ship. \nWe cannot delete the whole embarked column(It is useful). \nNow the Embarked column has some null values in it and hence we can safely say that deleting some rows from total rows will not affect the result. So rather than trying to fill those null values with some vales. We can simply remove them.","5808c0ab":"### Creating a new \"Age\" column , filling values in it with a condition if goes True then given values (here meanS) is put in place of last values else nothing happens, simply the values are copied from the \"Age\" column of the dataset###","52ff74cd":"# Performing Data Cleaning and Analysis\n\n1. Understanding meaning of each column:\nData Dictionary: \nVariable Description\n\nSurvived - Survived (1) or died (0)\nPclass - Passenger\u2019s class (1 = 1st, 2 = 2nd, 3 = 3rd)\nName - Passenger\u2019s name\nSex - Passenger\u2019s sex\nAge - Passenger\u2019s age\nSibSp - Number of siblings\/spouses aboard\nParch - Number of parents\/children aboard (Some children travelled only with a nanny, therefore parch=0 for them.)\nTicket - Ticket number\nFare - Fare\nCabin - Cabin\nEmbarked - Port of embarkation (C = Cherbourg, Q = Queenstown, S = Southampton)\n\n2. Analysing which columns are completely useless in predicting the survival and deleting them\nNote - Don't just delete the columns because you are not finding it useful. Or focus is not on deleting the columns. Our focus is on analysing how each column is affecting the result or the prediction and in accordance with that deciding whether to keep the column or to delete the column or fill the null values of the column by some values and if yes, then what values."}}