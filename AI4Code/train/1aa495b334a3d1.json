{"cell_type":{"3a1831d1":"code","98b23942":"code","4233d558":"code","48978e08":"code","d146ab75":"code","b91ee15f":"code","59e5f7a3":"code","a9c92094":"code","e51d3b9e":"code","6c32a76c":"code","74f81b12":"code","c0aa4fdf":"code","eb2e97b6":"code","fcf60fbe":"code","15150da8":"code","97430e00":"code","708ebfb3":"code","f047c5b5":"code","7cdc823c":"code","ad930175":"code","9ec48906":"code","d7f89a46":"code","4fb67aba":"code","71ba9f75":"code","b65eaa94":"code","57705fbf":"code","e1edf5eb":"code","1c7315bb":"code","c85b5329":"code","d3b0133d":"code","a77612c0":"code","fa03b52f":"code","4cc351a7":"code","4f8c506e":"code","1ed9c496":"code","e1c9731f":"code","049021bd":"markdown","f2e4b7b7":"markdown","91e01dee":"markdown","e70f76c2":"markdown","2597c266":"markdown","0dd6a94f":"markdown","eb2a5373":"markdown","b8e89754":"markdown","d343a547":"markdown","7b5ca88e":"markdown","326eaf2e":"markdown","875f3c94":"markdown","2611449d":"markdown","fb253835":"markdown","61aafffa":"markdown","b10e1a04":"markdown","668961db":"markdown","8098e5c8":"markdown","6425e4aa":"markdown","1181de97":"markdown","4992914e":"markdown","b9766ad6":"markdown","99ca9ebc":"markdown","5a186c20":"markdown","ba2f784d":"markdown","67e3fdf2":"markdown","47e80b1e":"markdown","cd9affe5":"markdown","de17d646":"markdown","e8470b94":"markdown","a6d99853":"markdown","7e29a430":"markdown","00031ba8":"markdown","4b5ea1ac":"markdown","db23dd12":"markdown","bc9005d6":"markdown","3b7dbf27":"markdown","9287db6b":"markdown","5a6ab694":"markdown","0ae90561":"markdown","05e28dd9":"markdown","22fa0f96":"markdown","5a6d21ca":"markdown","d930dfb6":"markdown","f8f6f93a":"markdown","23af2b2e":"markdown","6bb8d80f":"markdown","fc3a1951":"markdown","f7ffb097":"markdown","b3e4cb0b":"markdown","14145ace":"markdown","7dda9b1e":"markdown"},"source":{"3a1831d1":"from __future__ import division\nimport numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objects as go\nimport plotly.tools as tls\n","98b23942":"data = pd.read_csv('\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv', encoding = \"utf-8\")","4233d558":"data = data.drop(['Q2_OTHER_TEXT', 'Q5_OTHER_TEXT', 'Q9_OTHER_TEXT', 'Q13_OTHER_TEXT', 'Q14_Part_1_TEXT', 'Q14_Part_2_TEXT', 'Q14_Part_3_TEXT', 'Q14_Part_4_TEXT', \n           'Q14_Part_5_TEXT', 'Q14_OTHER_TEXT', 'Q17_OTHER_TEXT', 'Q18_OTHER_TEXT', \n          'Q19_OTHER_TEXT', 'Q20_OTHER_TEXT', 'Q21_OTHER_TEXT', 'Q24_OTHER_TEXT',\n          'Q25_OTHER_TEXT', 'Q26_OTHER_TEXT', 'Q27_OTHER_TEXT', 'Q28_OTHER_TEXT', 'Q29_OTHER_TEXT',\n          'Q30_OTHER_TEXT', 'Q31_OTHER_TEXT', 'Q32_OTHER_TEXT', 'Q33_OTHER_TEXT', \n          'Q34_OTHER_TEXT'], axis=1)","48978e08":"plt.figure(figsize=(15,8))\nvis1 = sns.countplot(data['Q1'].iloc[1:].sort_values(ascending=True), palette='summer')\nplt.xlabel('Age', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=0, size=13)\nplt.title('Age distribution', fontsize=15)\n\nfor p in vis1.patches:\n    vis1.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","d146ab75":"plt.figure(figsize=(15,8))\nvis2 = sns.countplot(data['Q2'].iloc[1:].sort_values(ascending=True), palette='summer')\nplt.xlabel('Gender', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=0, size=13)\nplt.title('Gender distribution', fontsize=15)\n\nfor p in vis2.patches:\n    vis2.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","b91ee15f":"male_count = len(data[data['Q2'] == 'Male'])\nfemale_count = len(data[data['Q2'] == 'Female'])\n\nprint('Percentage of female: {:.2f} %' .format(female_count\/len(data['Q2'].iloc[1:])*100))\nprint('Percentage of male: {:.2f} %' .format(male_count\/len(data['Q2'].iloc[1:])*100))","59e5f7a3":"plt.figure(figsize=(15,8))\ndata1 = pd.DataFrame(data.iloc[1:]['Q3'].value_counts().sort_values(ascending=False)).reset_index().head(20)\nvis3 = sns.barplot(data1['index'], data1.Q3, palette='summer')\nplt.xlabel('Top countries', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=80)\nplt.title('Country distribution', fontsize=15)\n\nfor p in vis3.patches:\n    vis3.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","a9c92094":"data2 = pd.DataFrame(data.iloc[1:]['Q4'].value_counts().sort_values(ascending=False)).reset_index().head(25)\ndata2.head()\nplt.figure(figsize=(15,8))\nvis4 = sns.barplot(y=data2['index'], x=data2.Q4, palette='summer')\nplt.xlabel('Count', fontsize=15)\nplt.ylabel('', fontsize=15)\nplt.xticks(rotation=0, fontsize=13)\nplt.yticks(rotation=0, fontsize=15)\nplt.title('Education distribution', fontsize=20)\n\n# for p in vis4.patches:\n#     vis4.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n#                ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","e51d3b9e":"data3 = pd.DataFrame(data.iloc[1:]['Q5'].value_counts().sort_values(ascending=False)).reset_index().head(25)\nplt.figure(figsize=(15,8))\nsns.barplot(y=data3['index'], x=data3.Q5, palette='summer')\nplt.xlabel('Count', fontsize=15)\nplt.ylabel('', fontsize=15)\nplt.xticks(rotation=0, fontsize=13)\nplt.yticks(rotation=0, fontsize=15)\nplt.title('Job of Kaggle users', fontsize=20)","6c32a76c":"data4 = pd.DataFrame(data.loc[1:, 'Q16_Part_1': 'Q16_Part_12']).reset_index()\ndata4.drop('index', axis=1, inplace=True)\ndata4.head()\na =pd.DataFrame(pd.value_counts(data4.values.flatten())).reset_index()\na.columns = ['A', 'B']","74f81b12":"plt.figure(figsize=(15,8))\nvis5 = sns.barplot(data=a, x='A', y='B', palette='summer')\nplt.xlabel('Development environments', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=80)\nplt.title('The most popular development environments', fontsize=15)\n\nfor p in vis5.patches:\n    vis5.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","c0aa4fdf":"data5 = pd.DataFrame(data.loc[1:, 'Q17_Part_1': 'Q17_Part_12']).reset_index()\ndata5.drop('index', axis=1, inplace=True)\ndata55 =pd.DataFrame(pd.value_counts(data5.values.flatten())).reset_index()\ndata55.columns = ['A', 'B']","eb2e97b6":"plt.figure(figsize=(15,8))\nvis6 = sns.barplot(data=data55, x='A', y='B', palette='summer')\nplt.xlabel('Notebook products', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=80)\nplt.title('The most popular notebook products', fontsize=15)\n\nfor p in vis6.patches:\n    vis6.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","fcf60fbe":"data6 = pd.DataFrame(data.loc[1:, 'Q18_Part_1': 'Q18_Part_12']).reset_index()\ndata6.drop('index', axis=1, inplace=True)\ndata66 =pd.DataFrame(pd.value_counts(data6.values.flatten())).reset_index()\ndata66.columns = ['A', 'B']","15150da8":"plt.figure(figsize=(15,8))\nvis7 = sns.barplot(data=data66, x='A', y='B', palette='summer')\nplt.xlabel('Programming languages', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular programming languages', fontsize=15)\n\nfor p in vis7.patches:\n    vis7.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","97430e00":"data8 = pd.DataFrame(data.loc[1:, 'Q20_Part_1': 'Q20_Part_12']).reset_index()\ndata8.drop('index', axis=1, inplace=True)\ndata8.head()\n\ndata88 =pd.DataFrame(pd.value_counts(data8.values.flatten())).reset_index()\ndata88.columns = ['A', 'B']\ndata88.head(5)\n\nplt.figure(figsize=(15,8))\nvis8 = sns.barplot(data=data88, x='A', y='B', palette='summer')\nplt.xlabel('Data visualisation methods\/tools', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular data visualisation methods\/tools', fontsize=15)\n\nfor p in vis8.patches:\n    vis8.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","708ebfb3":"data9 = pd.DataFrame(data.loc[1:, 'Q24_Part_1': 'Q24_Part_12']).reset_index()\ndata9.drop('index', axis=1, inplace=True)\n\ndata99 =pd.DataFrame(pd.value_counts(data9.values.flatten())).reset_index()\ndata99.columns = ['A', 'B']","f047c5b5":"plt.figure(figsize=(15,8))\nvis9 = sns.barplot(data=data99, x='A', y='B', palette='summer')\nplt.xlabel('Algorithms', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('Machine learning algorithms', fontsize=15)\n\nfor p in vis9.patches:\n    vis9.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","7cdc823c":"data10 = pd.DataFrame(data.loc[1:, 'Q25_Part_1': 'Q25_Part_7']).reset_index()\ndata10.drop('index', axis=1, inplace=True)\n\ndata100 =pd.DataFrame(pd.value_counts(data10.values.flatten())).reset_index()\ndata100.columns = ['A', 'B']","ad930175":"plt.figure(figsize=(15,8))\nvis10 = sns.barplot(data=data100, x='A', y='B', palette='summer')\nplt.xlabel('ML tools', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=80)\nplt.title('The most popular machine learning tools', fontsize=15)\n\nfor p in vis10.patches:\n    vis10.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","9ec48906":"data11 = pd.DataFrame(data.loc[1:, 'Q26_Part_1': 'Q26_Part_7']).reset_index()\ndata11.drop('index', axis=1, inplace=True)\n\ndata111 =pd.DataFrame(pd.value_counts(data11.values.flatten())).reset_index()\ndata111.columns = ['A', 'B']","d7f89a46":"plt.figure(figsize=(15,8))\nvis11 = sns.barplot(data=data111, x='A', y='B', palette='summer')\nplt.xlabel('Computer vision methods', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=80)\nplt.title('The most popular computer vision methods', fontsize=15)\n\nfor p in vis11.patches:\n    vis11.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","4fb67aba":"data12 = pd.DataFrame(data.loc[1:, 'Q27_Part_1': 'Q27_Part_6']).reset_index()\ndata12.drop('index', axis=1, inplace=True)\n\ndata122 =pd.DataFrame(pd.value_counts(data12.values.flatten())).reset_index()\ndata122.columns = ['A', 'B']","71ba9f75":"plt.figure(figsize=(15,8))\nvis12 = sns.barplot(data=data122, x='A', y='B', palette='summer')\nplt.xlabel('NLP methods', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=80)\nplt.title('The most popular NLP methods', fontsize=15)\n\nfor p in vis12.patches:\n    vis12.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","b65eaa94":"data13 = pd.DataFrame(data.loc[1:, 'Q28_Part_1': 'Q28_Part_12']).reset_index()\ndata13.drop('index', axis=1, inplace=True)\n\ndata133 =pd.DataFrame(pd.value_counts(data13.values.flatten())).reset_index()\ndata133.columns = ['A', 'B']","57705fbf":"plt.figure(figsize=(15,8))\nvis13 = sns.barplot(data=data133, x='A', y='B', palette='summer')\nplt.xlabel('ML frameworks', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular ML frameworks', fontsize=15)\n\nfor p in vis13.patches:\n    vis13.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","e1edf5eb":"data17 = pd.DataFrame(data.loc[1:, 'Q32_Part_1': 'Q32_Part_12']).reset_index()\ndata17.drop('index', axis=1, inplace=True)\n\ndata177 =pd.DataFrame(pd.value_counts(data17.values.flatten())).reset_index()\ndata177.columns = ['A', 'B']","1c7315bb":"plt.figure(figsize=(15,8))\nvis17 = sns.barplot(data=data177, x='A', y='B', palette='summer')\nplt.xlabel('Machine learning products', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular machine learning products', fontsize=15)\n\nfor p in vis17.patches:\n    vis17.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","c85b5329":"data14 = pd.DataFrame(data.loc[1:, 'Q29_Part_1': 'Q29_Part_12']).reset_index()\ndata14.drop('index', axis=1, inplace=True)\n\ndata144 =pd.DataFrame(pd.value_counts(data14.values.flatten())).reset_index()\ndata144.columns = ['A', 'B']","d3b0133d":"plt.figure(figsize=(15,8))\nvis14 = sns.barplot(data=data144, x='A', y='B', palette='summer')\nplt.xlabel('Cloud platforms', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular cloud platforms', fontsize=15)\n\nfor p in vis14.patches:\n    vis14.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","a77612c0":"data15 = pd.DataFrame(data.loc[1:, 'Q30_Part_1': 'Q30_Part_12']).reset_index()\ndata15.drop('index', axis=1, inplace=True)\n\ndata155 =pd.DataFrame(pd.value_counts(data15.values.flatten())).reset_index()\ndata155.columns = ['A', 'B']","fa03b52f":"plt.figure(figsize=(15,8))\nvis15 = sns.barplot(data=data155, x='A', y='B', palette='summer')\nplt.xlabel('Cloud platforms', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=70)\nplt.title('The most popular specific cloud platforms', fontsize=15)\n\nfor p in vis15.patches:\n    vis15.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","4cc351a7":"data16 = pd.DataFrame(data.loc[1:, 'Q31_Part_1': 'Q31_Part_12']).reset_index()\ndata16.drop('index', axis=1, inplace=True)\n\ndata166 =pd.DataFrame(pd.value_counts(data16.values.flatten())).reset_index()\ndata166.columns = ['A', 'B']","4f8c506e":"plt.figure(figsize=(15,8))\nvis16 = sns.barplot(data=data166, x='A', y='B', palette='summer')\nplt.xlabel('Big data products', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular big data products', fontsize=15)\n\nfor p in vis16.patches:\n    vis16.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","1ed9c496":"data18 = pd.DataFrame(data.loc[1:, 'Q34_Part_1': 'Q34_Part_12']).reset_index()\ndata18.drop('index', axis=1, inplace=True)\n\ndata188 =pd.DataFrame(pd.value_counts(data18.values.flatten())).reset_index()\ndata188.columns = ['A', 'B']","e1c9731f":"plt.figure(figsize=(15,8))\nvis18 = sns.barplot(data=data188, x='A', y='B', palette='summer')\nplt.xlabel('Databases', fontsize=15)\nplt.ylabel('Count', fontsize=15)\nplt.xticks(rotation=50)\nplt.title('The most popular databases', fontsize=15)\n\nfor p in vis18.patches:\n    vis18.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","049021bd":"1. Jupyter\n2. Visual Studio\n3. RStudio\n4. Pycharm\n\nThe advantage has of course Jupyter!","f2e4b7b7":"![Data-Scientists.jpg](attachment:Data-Scientists.jpg)","91e01dee":"2.1. Development Environments","e70f76c2":"1. Scikit-Learn\n2. Tensorflow\n3. Keras\n4. RandomoForest","2597c266":"1. Image classification - VGC, Inception\n2. General purpose tools\n3. Image segmentation - U-Net, Mask","0dd6a94f":"1. General analysis of Kaggle Survey 2019","eb2a5373":"5. Big Data Tools","b8e89754":"4.2. Specified cloud platforms","d343a547":"**This is the third time Kaggle Community attached Machine Learning and Data Science Survey.** \n\nAffter reading the questions I decided to explorer basically dataset but to focus on **technologies** which Kaggle's users use. \nAs an aspiring **Data Scientist** I want to get knowledge how to become well prepared, perfectly learned future Enginner in Data and Machine Learning. What is more I want to share with Kaggle this outputs to connect all of the beginner, because explorind data is amazingly siphisticated and addictive. ","7b5ca88e":"1.4. Education of Kaggle users","326eaf2e":"2.2. Notebook products","875f3c94":"**Kaggle ML & DS Survey\n**","2611449d":"3.6. Machine learning products","fb253835":"3.1. Machine Learning algorithms","61aafffa":"1.3. Country distribution","b10e1a04":"2.3. Programming language","668961db":"**What aspiring Data Scientist should learn and master?**\n\n**BASICS: evelopment environments, visualisations, programming language**\n\nDevelopment environments:\n1. Jupyter - Notebook, Lab\n2. Visual Studio\n3. RStudio\n4. Pycharm\nThe most popular is Jupyter and it can be chosen as the first one.\n\nNotebook products:\n1. Kaggle kernels\n2. Google Colab\n3. Binder, JupyterHUB\nProbably the best option to create own portfolio is having Kaggle profile\n\nProgramming language:\n1. Python\n2. SQL\n3. R\n4. Java\nPython should be the first choose to starts adventure as data scientist.\n\nData visualisation methods, tools\n1. Matplotlib\n2. Seaborn\n3. Ggplot\n4. Plotly\nHere are the best visualisation tools to create charts.\n\n**MACHINE LEARNING**\n\nMachine Learning algorithms:\n1. Linear and Logistic Regressions\n2. Decision Trees and Random Forests\n3. Gradient Boosting\n4. Neural networks\n5. Bayesian \nThe most popular and every data siecntist has to know.\n\nMachine learning tools:\n1. Automated model selection - sklearn\n2. Imguag, albumentation\n\nComputer vision methods:\n1. Image classification - VGC, Inception\n2. General purpose tools\n3. Image segmentation - U-Net, Mask\n\nNatural Language Processing Methods:\n1. Word embeddings - GLoVe, fastText\n2. Encoder-decodedr models - seq2seq, vanilla transformers\n3. Transformer language methods - GPT-2, BERT\n\nMachine Learning frameworks:\n1. Scikit-Learn\n2. Tensorflow\n3. Keras\n4. RandomoForest\nScikit learn and tensorflow are the most popular and we have to know them.\n\nMachine learning products:\n1. Google cloud machine learning engine\n2. Azure Machine learning studio\n3. Amazon SageMaker\n4. SAS\n\n**CLOUD PLATFORMS**\n\nCloud platforms:\n1. AWS\n2. Google Cloud\n3. Microsoft Azure\n\nSpecific cloud platform products:\n1. None\n2. AWS Elastic Search\n3. Google Compute Engine\n4. AWS Lambda\n\n**BIG DATA\nDATABASES**\n\nBig Data products:\n1. Google Big Query\n2. Databricks\n3. AWS Redshift\n4. Google Cloud Dataflow\n\n**BIG DATA\nDATABASES**\n\nDatabases:\n1. MySQL\n2. PostgresSQL\n3. Microsoft SQL Server\n4. SQLite","8098e5c8":"I decided to focus this Notebook on later questions about programming languages, methods, tools etc to create** KAGGLE'S GUIDE FOR ASPIRING DATA SCIENTIST**.\nAfter that everyone who wants to change job, get first job with Data will be now sure what are the best things to learn and master!","6425e4aa":"5.1. Specific Big Data Products","1181de97":"- More than 80 % of people here are Males\n- Number of Females is much more lower - only about 16% of Kaggle Community","4992914e":"1. None\n2. AWS Elastic Search\n3. Google Compute Engine\n4. AWS Lambda","b9766ad6":"![juniorzy-w-It.png](attachment:juniorzy-w-It.png)","99ca9ebc":"3.4. Natural Language Processing Methods","5a186c20":"1. Google cloud machine learning engine\n2. Azure Machine learning studio\n3. Amazon SageMaker\n4. SAS","ba2f784d":"- Majority of people here are with Master Degree\n- On the second place we can see Bachelors\n- Amazing is that also Doctoral and Professional degrees are among us","67e3fdf2":"3. Machine Learning\n\nIn the next field I focused on machine learning methods, products, algorithms.","47e80b1e":"1.1. Age distribution between Kaggle users","cd9affe5":"6.1. Relational databases products","de17d646":"3.3. Computer Vision Methods","e8470b94":"- The biggest community on Kaggle create India and USA\n- There are also people here from Brazil, Asian and West Countries. \n- The smallest community is from Europe\n- I am from Poland and since now I have never met here someone from my country :)","a6d99853":"1. None\n2. Automated model selection - sklearn\n3. Imguag, albumentation","7e29a430":"1. Word embeddings - GLoVe, fastText\n2. Encoder-decodedr models - seq2seq, vanilla transformers\n3. Transformer language methods - GPT-2, BERT","00031ba8":"- First place is for Data Scientists\n- Second is for Students - so for people who are interested in analysis or just like me - are aspiring Data Scientists","4b5ea1ac":"1. Linear and Logistic Regressions\n2. Decision Trees and Random Forests\n3. Gradient Boosting\n4. Neural networks\n5. Bayesian ","db23dd12":"* * 2.4. Data visualisation methods, tools","bc9005d6":"- As we can see the biggest number of Kaggle users we can see in range 18 - 39\n- There are also users after 40\n- This is amazing that Kaggle community embrace people in every age - it means that we can learn many things from probalby people who are more experienced than us\n- Fo aspiring Data Scientists Kaggle Community can become amazing public forum to gain knowledge!","3b7dbf27":"3.5 Machine learning frameworks","9287db6b":"1. None\n2. Kaggle kernels\n3. Google Colab","5a6ab694":"7. Summary","0ae90561":"2. Programming basics for aspiring Data Scientists","05e28dd9":"1. Matplotlib\n2. Seaborn\n3. Ggplot\n4. Plotly","22fa0f96":"1.2. Gender distribution","5a6d21ca":"1. AWS\n2. Google Cloud\n3. Microsoft Azure","d930dfb6":"4.1. Cloud platforms","f8f6f93a":"Every data scientist has to have knowledge about cloud platforms","23af2b2e":"3.2. Machine Learning Tools","6bb8d80f":"1.5. Kaggle's users' jobs","fc3a1951":"4. Cloud platforms","f7ffb097":"6. Databases","b3e4cb0b":"1. Python\n2. SQL\n3. R\n4. Java\n\nThe most popular languages are of course Python and SQL. ","14145ace":"1. MySQL\n2. PostgresSQL\n3. Microsoft SQL Server\n4. SQLite","7dda9b1e":"1. Google Big Query\n2. Databricks\n3. AWS Redshift\n4. Google Cloud Dataflow"}}