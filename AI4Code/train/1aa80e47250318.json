{"cell_type":{"8c9514ef":"code","d4bfb454":"code","c16ca014":"code","41025547":"code","31c3a7e8":"code","e36cdbbb":"code","83457fd4":"code","98967912":"code","8169c0e8":"code","fff9f942":"code","d977d9b2":"code","d7b5d99c":"code","0d19ef9b":"code","b8e0f31a":"code","8de25cb7":"code","93e36965":"markdown","ac3fbe83":"markdown","4a6f1bdf":"markdown","8877f12b":"markdown"},"source":{"8c9514ef":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","d4bfb454":"#import \nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, learning_curve, KFold\nfrom sklearn.preprocessing import MinMaxScaler, OneHotEncoder, StandardScaler\nimport random\nfrom sklearn.svm import SVC\nimport sklearn.metrics as sk\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree","c16ca014":"#\u8bfb\u53d6\u6570\u636e\u96c6\ndf = pd.read_csv('\/kaggle\/input\/bank-marketing\/bank-additional-full.csv', sep = ';')\ndf.shape","41025547":"#\u5c55\u793a\ndf.head()","31c3a7e8":"#\u4fe1\u606f\ndf.info()","e36cdbbb":"#\u5220\u9664\u65e0\u5173\u7ec4\ndf1=df.drop(columns=['day_of_week','month','contact','poutcome','pdays'],axis=1)\ndf1","83457fd4":"#\u5c06\u5e03\u5c14\u53d8\u91cf\u66ff\u6362\u62100\u548c1\ndf1.y.replace(('yes', 'no'), (1, 0), inplace=True)\ndf1.default.replace(('yes', 'no'), (1, 0), inplace=True)\ndf1.housing.replace(('yes', 'no'), (1, 0), inplace=True)\ndf1.loan.replace(('yes', 'no'), (1, 0), inplace=True)\ndf1","98967912":"#\u6784\u5efa\u526f\u672c\ndf2 = pd.get_dummies(df1)\ndf2.head()","8169c0e8":"#\u5bf9\u53d8\u91cf\u8fdb\u884c\u63cf\u8ff0\u7edf\u8ba1\ndf3=df2.drop(columns=['job_unknown','marital_divorced','education_unknown'],axis=1)\ndf3.describe().T","fff9f942":"#\u7ed8\u56fe\nplt.figure(figsize=(14,8))\ndf3.corr()['y'].sort_values(ascending = False).plot(kind='bar')","d977d9b2":"#\u521b\u5efa\u4e8c\u5206\u7c7b\u76ee\u6807\ndf_target=df3[['y']].values\ndf_features=df3.drop(columns=['y'],axis=1).values\nx1_train, x1_test, y1_train, y1_test = train_test_split(df_features, df_target, test_size = 0.3, random_state = 0)","d7b5d99c":"sc = StandardScaler()\nx1_train = sc.fit_transform(x1_train)\nx1_test = sc.transform(x1_test)","0d19ef9b":"#\u521b\u5efa\u6a21\u578b\nprint('MODEL SVM',end='\\n')\nlsvclassifier = SVC(kernel='linear')\nlsvclassifier.fit(x1_train, y1_train)\n\n#K\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff085\uff09\naccuracies = cross_val_score(estimator = lsvclassifier, X = x1_train, y = y1_train, cv = 5)\nmean_svm_linear=accuracies.mean()\nstd_svm_linear=accuracies.std()\n\n#\u8bc4\u4f30\nprint('After 5 fold cross validation:')\nprint('Mean of Accuracies: ',mean_svm_linear*100,end='\\n')\nprint('Standard deviation of Accuracies',std_svm_linear*100,end='\\n')\n\n#\u6d4b\u8bd5\u96c6\u4e0a\u9884\u6d4b\ny_predl = lsvclassifier.predict(x1_test)\n\n#\u8f93\u51fa\u6df7\u6dc6\u77e9\u9635\uff08\u5bf9\u9884\u6d4b\u7ed3\u679c\u8f93\u51fa\u5305\u62ec precision  recall  f1-score  support\uff08\u88ab\u5206\u5165\u5230\u67d0\u4e00\u7c7b\u7684\u652f\u6301\u9879\uff09\uff09\nprint('Test Output:')\nprint('Confusion Matrix:')\nprint(sk.confusion_matrix(y1_test,y_predl))\nprint('Classification Report:')\nprint(sk.classification_report(y1_test,y_predl))\nprint('Accuracy: ',sk.accuracy_score(y1_test, y_predl, normalize=True, sample_weight=None))","b8e0f31a":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import RFE\n\n#\u521b\u5efa\u6a21\u578b\nprint('logistic Model',end='\\n')\nregressor = LogisticRegression()#LR\nrfe = RFE(regressor, 20)#RFE\u53cd\u590d\u6784\u5efaLR\u6a21\u578b\uff0c\u5e76\u9012\u5f52\u9009\u62e9\u6700\u597d\u7684\u7279\u5f81\nrfe = rfe.fit(x1_train, y1_train)\n\n\n#K\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff085\uff09\naccuracies = cross_val_score(estimator = rfe, X = x1_train, y = y1_train, cv = 5)\nmean_lr=accuracies.mean()\nstd_lr=accuracies.std()\n\n#\u8bc4\u4f30\nprint('After 5 fold cross validation:')\nprint('Mean of Accuracies: ',mean_lr*100,end='\\n')\nprint('Standard deviation of Accuracies',std_lr*100,end='\\n')\n\n#\u6d4b\u8bd5\u96c6\u4e0a\u9884\u6d4b\ny_predl = rfe.predict(x1_test)\n\n#\u8f93\u51fa\u6df7\u6dc6\u77e9\u9635\uff08\u5bf9\u9884\u6d4b\u7ed3\u679c\u8f93\u51fa\u5305\u62ec precision  recall  f1-score  support\uff08\u88ab\u5206\u5165\u5230\u67d0\u4e00\u7c7b\u7684\u652f\u6301\u9879\uff09\uff09\nprint('Test Output:')\nprint('Confusion Matrix:')\nprint(sk.confusion_matrix(y1_test,y_predl))\nprint('Classification Report:')\nprint(sk.classification_report(y1_test,y_predl))\nprint('Accuracy: ',sk.accuracy_score(y1_test, y_predl, normalize=True, sample_weight=None))","8de25cb7":"from sklearn.naive_bayes import GaussianNB\n#\u521b\u5efa\u6a21\u578b\nprint('native_bayes Model',end='\\n')\nclf = GaussianNB()#BY\nclf.fit(x1_train, y1_train)\n\n#K\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff085\uff09\naccuracies = cross_val_score(estimator = clf, X = x1_train, y = y1_train, cv = 5)\nmean_clf=accuracies.mean()\nstd_clf=accuracies.std()\n\n#\u8bc4\u4f30\nprint('After 5 fold cross validation:')\nprint('Mean of Accuracies: ',mean_clf*100,end='\\n')\nprint('Standard deviation of Accuracies',std_clf*100,end='\\n')\n\n#\u6d4b\u8bd5\u96c6\u4e0a\u9884\u6d4b\ny_predl = clf.predict(x1_test)\n\n#\u8f93\u51fa\u6df7\u6dc6\u77e9\u9635\uff08\u5bf9\u9884\u6d4b\u7ed3\u679c\u8f93\u51fa\u5305\u62ec precision  recall  f1-score  support\uff08\u88ab\u5206\u5165\u5230\u67d0\u4e00\u7c7b\u7684\u652f\u6301\u9879\uff09\uff09\uff09\nprint('Test Output:')\nprint('Confusion Matrix:')\nprint(sk.confusion_matrix(y1_test,y_predl))\nprint('Classification Report:')\nprint(sk.classification_report(y1_test,y_predl))\nprint('Accuracy: ',sk.accuracy_score(y1_test, y_predl, normalize=True, sample_weight=None))","93e36965":"# \u8d1d\u53f6\u65af","ac3fbe83":"# logistic","4a6f1bdf":"#**Data** **Preprocessing**","8877f12b":"# SVM\n"}}