{"cell_type":{"05bcfb4b":"code","aad384b1":"code","5f7d6901":"code","961bb9e2":"code","0e26eb36":"code","7c881edd":"code","172dbb9f":"code","d2816572":"code","a51120b0":"code","1027aff3":"code","66feb7f9":"code","efe9570d":"code","19432096":"code","973bf3b5":"code","5cef51ae":"code","292973f9":"code","f79de025":"code","7b33c9cb":"code","a1fe01ca":"code","dbf0aecf":"code","3a692832":"code","c6306034":"code","d606eb35":"code","3100a583":"code","82b50f24":"code","097babbd":"code","99276ac9":"code","f6c53067":"code","4cb394b9":"code","6603100e":"code","8150ec6a":"code","13a04d38":"code","ecd81fef":"code","8998ef33":"code","7f85b00b":"code","83641339":"code","57ac6b26":"code","3f61d4d8":"code","ba3663e5":"code","cb52c6c8":"markdown","afd0922e":"markdown","6e508a84":"markdown","0a98ea15":"markdown","3f4554f3":"markdown","03d25dbb":"markdown","7f12c6b4":"markdown","8bf19da9":"markdown","e7bb59f7":"markdown","41362525":"markdown","2324065d":"markdown","9d412dc6":"markdown","22b5bcf4":"markdown","80b68e5a":"markdown","10dc1f21":"markdown","c0283fc0":"markdown","06570136":"markdown","da10a359":"markdown","f4f1df83":"markdown","a81c3f59":"markdown","93fe853b":"markdown","58d65c42":"markdown","c8d7c89c":"markdown","e2c93c6a":"markdown","16e5a7f4":"markdown","f870f949":"markdown","54e8f869":"markdown","532c6fe5":"markdown","31f76e8b":"markdown","1ca3523d":"markdown","4d790b93":"markdown","b4d759f9":"markdown","a5d3d0fc":"markdown","1fbdefec":"markdown","495eb38c":"markdown"},"source":{"05bcfb4b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","aad384b1":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score","5f7d6901":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nimport os","961bb9e2":"data =pd.read_csv('..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv')","0e26eb36":"data.head()","7c881edd":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndata['Survived'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived',data=data,ax=ax[1])\nax[1].set_title('Survived')\nplt.show()","172dbb9f":"data['Sex'].value_counts()\n","d2816572":"fig = plt.subplots(nrows = 1, ncols = 2, figsize = (14,14))\n\nsize = data.Sex.value_counts().values\n\ncolors = ['orange', 'yellow']\nlabels = data.Sex.value_counts().index\nexplode = [0, 0]\n\ncircle = plt.Circle((0, 0), 0.3, color = 'white')\n\nplt.subplot(1, 2, 1)\nplt.pie(size, colors = colors, labels = labels, explode = explode, shadow = True, autopct = '%.2f%%')\nplt.title('Gender', fontsize = 30)\np = plt.gcf()\np.gca().add_artist(circle)\nplt.axis('off')\nplt.legend()\n\nsize = data.Category.value_counts().values\n\ncolors = [ 'crimson', 'lightgreen']\nlabels = data.Category.value_counts().index\nexplode = [0, 0]\n\ncircle = plt.Circle((0, 0), 0.3, color = 'white')\n\nplt.subplot(1, 2, 2)\nplt.pie(size, colors = colors, labels = labels, explode = explode, shadow = True, autopct = '%.2f%%')\nplt.title('Passenger vs Crew', fontsize = 30)\np = plt.gcf()\np.gca().add_artist(circle)\nplt.axis('off')\nplt.legend()\n\nplt.show()\n","a51120b0":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Show death counts by country\nprint(data.Country.value_counts())\n\nax = sns.barplot(\n    x = data['Country'].value_counts().keys(), \n    y = data['Country'].value_counts().values\n)\nax.set_xticklabels(ax.get_xticklabels(), rotation = 90)\nplt.show()","1027aff3":"\nplt.figure(figsize=(20,10))\n\nvalues = data['Lastname'].value_counts().tolist()[:10]\nnames = list(dict(data['Lastname'].value_counts()).keys())[:10]\n\nsns.barplot(\n    x=names,\n    y=values)\n\nplt.show()","66feb7f9":"plt.figure(figsize=(10,8))\nsns.distplot(data['Age'],color= 'orange')\nplt.title('Passenger age distribution',size=20)\nplt.axvline(data['Age'].median(),color='blue',label='Median age')\nplt.legend()","efe9570d":"plt.figure(figsize=(10,8))\nplt.title('Age distribution of men and women.')\ng = sns.kdeplot(data['Age'].loc[data['Sex'] == 'M'], \n                shade= True, label='Male').set_xlabel('Age')\ng = sns.kdeplot(data['Age'].loc[data['Sex'] == 'F'], \n                shade=True, label='Female')\n\nplt.axvline(data['Age'].loc[data['Sex']== 'M'].median(),color='green',label='Median age- Male')\nplt.axvline(data['Age'].loc[data['Sex']== 'F'].median(),color='red',label='Median age- Female')\n\nplt.grid()","19432096":"fig=plt.figure(figsize=(20,5))\nsns.violinplot(x ='Age', y = 'Category', data = data)\nplt.show()","973bf3b5":"plt.figure(figsize=(18,15))\n\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise:\nlabels = 'Adult', 'Senior', 'Child', 'Youth','NA'\nsizes = [668, 164, 14, 142,1]\nexplode = (0, 0, 0, 0,0)  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","5cef51ae":"data[data.Age<1]","292973f9":"data[data.Lastname=='ZELMIN']\n","f79de025":"plt.figure(figsize=(20,10))\nsns.boxplot(x ='Country', y = 'Age', data = data)\nplt.show()","7b33c9cb":"grp =data.groupby(\"Age\")\n\nplt.figure(figsize=(16,5))\nplt.plot(grp[\"Survived\"].agg(np.mean),'r--',color='g')\nplt.xticks(rotation=90)\nplt.title(\"Age V\/s Survived\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Survived\")\nplt.show()","a1fe01ca":"f,ax=plt.subplots(1,2,figsize=(16,7))\ndata['Survived'][data['Sex']=='M'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[0],shadow=True)\ndata['Survived'][data['Sex']=='F'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[1],shadow=True)\nax[0].set_title('Survived (male)')\nax[1].set_title('Survived (female)')\n\nplt.show()","dbf0aecf":"plt.figure(figsize=(12,8))\nsns.countplot(x='Category',hue='Sex',data=data)\nplt.title('Genderwise Survival')\nplt.show()","3a692832":"plt.figure(figsize=(12,8))\np = sns.countplot(x = 'Category', hue = 'Survived', data = data\n                ).set_title('Number of survivors among passengers and crew')","c6306034":"c_survived = data['Category'][(data['Category'] == 'C')& (data['Survived'] == 1)].count()\nc_all = data['Category'][data['Category'] == 'C'].count()\np_survived = data['Category'][(data['Category'] == 'P') & (data['Survived'] == 1)].count()\np_all = data['Category'][data['Category'] == 'P'].count()\nc_percent = c_survived \/ c_all * 100\np_percent = p_survived \/ p_all * 100\nprint(f'The percentage of survivors among the crew members: {round(c_percent, 3)}%')\nprint(f'The percentage of survivors among the passengers: {round(p_percent, 3)}%')","d606eb35":"pd.crosstab([data.Sex, data.Survived], [data.Country], margins=True).style.background_gradient(cmap='autumn_r')","3100a583":"# heatplot\nplt.figure(figsize=(12,8))\n\ncorr = data.corr(\"pearson\")\nsns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True,annot=True)\n","82b50f24":"data.describe()","097babbd":"data.info()","99276ac9":"data=data.drop(['PassengerId','Firstname','Lastname'],axis=1) #drop columns that will have no effect on model predictions\n","f6c53067":"X = data.drop(['Survived'], axis=1)\n\ny = data['Survived']","4cb394b9":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\n","6603100e":"X_train.shape, X_test.shape\n","8150ec6a":"data.head()","13a04d38":"!pip install --upgrade category_encoders\n","ecd81fef":"import category_encoders as ce\n# encode categorical variables with one-hot encoding\n\nencoder = ce.OneHotEncoder(cols=['Country', 'Sex', 'Category'])\n\nX_train = encoder.fit_transform(X_train)\n\nX_test = encoder.transform(X_test)\n","8998ef33":"X_train.head()","7f85b00b":"X_train.shape, X_test.shape\n","83641339":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.tree import DecisionTreeClassifier\n\n\ndtc = DecisionTreeClassifier(random_state = 42)\naccuracies = cross_val_score(dtc, X_train, y_train, cv=2)\ndtc.fit(X_train,y_train)\n\nprint(\"Train Score:\",np.mean(accuracies))\nprint(\"Test Score:\",dtc.score(X_test,y_test))","57ac6b26":"from sklearn.metrics import make_scorer, accuracy_score\nfrom sklearn.model_selection import GridSearchCV\n\n# Choose the type of classifier. \nclf = DecisionTreeClassifier()\n\n# Choose some parameter combinations to try\nparameters  = {'criterion':['gini','entropy'],'max_depth':[20,30,40,50,70,90,120,150],'max_leaf_nodes': [9,10,11,12], 'random_state': [42,73,94]}\n\n\n# Type of scoring used to compare parameter combinations\nacc_scorer = make_scorer(accuracy_score)\n\n# Run the grid search\ngrid_obj = GridSearchCV(clf, parameters, scoring=acc_scorer)\ngrid_obj = grid_obj.fit(X_train, y_train)\n\n# Set the clf to the best combination of parameters\nclf1 = grid_obj.best_estimator_\nclf1","3f61d4d8":"print(\"Test Score:\",clf1.score(X_test,y_test))","ba3663e5":"print(\"Train Score:\",clf1.score(X_train,y_train))","cb52c6c8":"## Sex vs Survived","afd0922e":"### Obeservation \nOk! so its safe to say **that crew members saved themselves proactively than saving the passengers**. Looking at the Doughnut chart our assumption about imbancled data was correct. \n\nThe survival percentage is almost double compare to the passenger catagory. It is the opposite of what happend in RMS Titanic.\n\nWell lets now observe which contry was at maximum loss.","6e508a84":"## Age vs Category","0a98ea15":"We can conclude that the survivers of the unfortunate ship: were young adults- Male and crew aboard had higher chance of survival than passengers. \n","3f4554f3":"## Sex vs Category","03d25dbb":"### Observation 2\nVery well, according to the plot above there were more passenges survived compared to the crew members. But this can also be possible because passengers were more compared to the crew. We need to find the survival rate of both the categories. \nWe will find out the count of survived members of each categories and divide them by 100 to find the survival percentage.","7f12c6b4":"## Sex vs Category vs Survive","8bf19da9":"### Observation2\nThere was a family in the ship with the child and infant. Unfortunately no one survived. \nTo Do: You may set an age less than 12 and see which passenger was with the child. There could be one or more famiies onboard. ","e7bb59f7":"### Observation\n\nUnfortunately the Children below the age of 5 and Senior Adults above the age of 65 could not survive. \nMost of the Adults and Youths were able to save their lives. \nDid the gender played role in the survival? Lets see. ","41362525":"### Observation\n\nAs per the donut chart it can be concluded that there where equal number of male and female passengers on the unfortunate ship. We can also conclude that the ratio of passangers are more compare to the ratio of crew members. The gender data is somewhat balanced but the category data is imbalanced","2324065d":"Facts\nWhen was the Sinking of the Estonia: September 28, 1994\nWhere was the Sinking of the Estonia: Near the Turku Archipelago, in the Baltic Sea\nWhat was the Sinking of the Estonia death toll: 852 passengers and crew\n\nInteresting things to investigate about the data:\n\nWho's more likely to survive the sinking based on data?\nIs age an indicator for survival?\nIs gender an indicator for survival?\nDid the crew aboard have a higher chance of survival than passengers?\n","9d412dc6":"### Observation 1\nIn the above normalization curve the median age of both the gender is around 45 years. Let us observe the age distribution of each gender and know their median age.","22b5bcf4":"## Feature Scaling- One Hot Encoding\n\n![image.png](attachment:image.png)\n\n[Image Source](https:\/\/chrisalbon.com\/machine_learning\/preprocessing_structured_data\/one-hot_encode_nominal_categorical_features\/)\n\n\nTo update the `category_encoders` module, keep the internet ON (At right sidebar Settings > Internet [slider ON]). It will convert all the object data types into machine readable data (numerical).","80b68e5a":"### Observation\n\nOnly 13.9% passengers on ship survived. \n","10dc1f21":"## Country VS Age","c0283fc0":"### Observation\n\nThere were more passengers and less crew which is logical. The crew's median age is between the range of 30 to 45 and the passanges' age is between 30-65. \nHence, falling under the age median age group of 40-60 as observed in age distribution normalization curve. \n\nAs we have already divided the ages into groups lets' check the percentage of Adults, Youth, Senior, Child were travelling.","06570136":"### Nationalities onboard","da10a359":"Decent Accuracy score! You may use Ensembel Methods like adaboost and XGboost to see the difference. I hope liked it. Thank You for rading. If there is any suggestions or inputs kindly let me know in the comments below. ","f4f1df83":"# Feature Engineering","a81c3f59":"## Age vs Survived","93fe853b":"## Age Group ","58d65c42":"## How many Survived?","c8d7c89c":"### Gender ","e2c93c6a":"## Finding Correlation using Heat Map ","16e5a7f4":"### Popular Surname lost lives","f870f949":"### Obeservation 1\nThere were more men in passenger category. Where as there were more females in the crew. Lets see who survie the most amongst the category","54e8f869":"### Observation 1: \nMost of them were adults.It is also show 1.3% were children.\nLets check if there was an infant on the ship.\n","532c6fe5":"## Age Distribution ","31f76e8b":"### Observation\n\nThere were few Senior Adults from Estonia, Finland, Denmark. \nSweden, Estinia,Gemary, Great Brtain had the most number of Senior adults.\nAs there was one Canadian on board, it can be concluded that he was a senior adult.  ","1ca3523d":"## Sex Vs Country Vs Survive ","4d790b93":"### Observation\n\nThe shade of red indicates the highest to the lowset. Here we got the exact number of gender survived the incident. \nThere were more females than male on board, unfortunately, only 27 could survive.","b4d759f9":"### Observation \n\nMore number of Male survived compared to female. lets observe the age group of male and female survived.","a5d3d0fc":"## Data Pre-processing\n\nThe model can take the numerical data. Before plugging in the data into the model it is important to pre-process it. In this case there are no missing values so there is no need to drop or replace the value. \n\nAs, passenger ID, Firstname and Lastname coloumn has no affect on out passenger classification, with the help of `drop` function we will delete these columns","1fbdefec":"### Observation 2\n\nThe age distribution are quite similar to each other. The curves are masking each other except the top right distibution. It can be concluded that the median age of female was more then male.\n","495eb38c":"## Passengers onboard\n\n\n"}}