{"cell_type":{"ed1d6445":"code","51a7f5e3":"code","bd09c6eb":"code","6eb235a3":"code","f2fb6f89":"code","23e77573":"code","f45a0b1e":"code","9e0d79eb":"code","bf6b9d9c":"code","e7a2c009":"code","e7aea08f":"code","9ae7bb11":"code","dd7023ee":"code","20a0b239":"code","607228c4":"code","e843fc49":"code","97a98c72":"code","2f0d0bd5":"code","6832438e":"code","bb698b9c":"code","54d8e49e":"code","d5882e11":"code","13d02e3a":"code","8cb05354":"code","1ce1e817":"code","8563e551":"code","ec430e41":"code","78ef2e17":"code","df707655":"code","2d4835c5":"code","b71115fa":"markdown","b1ec2d6d":"markdown","2707e8fd":"markdown","00334ddf":"markdown","0e0b5001":"markdown","2fa5f4c2":"markdown"},"source":{"ed1d6445":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm\nfrom sklearn.metrics import  accuracy_score","51a7f5e3":"#loading dataset \nloan_dataset = pd.read_csv('\/train_u6lujuX_CVtuZ9i (1).csv')","bd09c6eb":"loan_dataset.head()\nprint('The Data Shape is :', loan_dataset.shape)","6eb235a3":"loan_dataset.head()","f2fb6f89":"type(loan_dataset) # to tell you the type of data","23e77573":"# some statistics\nloan_dataset.describe() #this data are printed only for numerical values","f45a0b1e":"#finding nulls\nloan_dataset.isnull().sum()","9e0d79eb":"#Dorp Missing Values(and this lead to drop the entire row)\nloan_dataset = loan_dataset.dropna()","bf6b9d9c":"#Make sure thier are NO Missing Values\nloan_dataset.isnull().sum()","e7a2c009":"#Label Encoding\nloan_dataset.replace({\"Loan_Status\" : {\"N\" : 0, \"Y\" : 1}}, inplace=True)","e7aea08f":"loan_dataset.head()","9ae7bb11":"#Dependents column values\nloan_dataset['Dependents'].value_counts()","dd7023ee":"# Replacing the +3 to 4\nloan_dataset =  loan_dataset.replace(to_replace = '3+', value = 4)","20a0b239":"#Dependents column values\nloan_dataset['Dependents'].value_counts()","607228c4":"#Education & loant status\nsns.countplot(x='Education', hue='Loan_Status',data=loan_dataset)","e843fc49":"#Married & loan status\nsns.countplot(x='Married', hue='Loan_Status',data=loan_dataset)","97a98c72":"#Gender & loan status\nsns.countplot(x='Gender', hue='Loan_Status',data=loan_dataset)","2f0d0bd5":"#Self_Employed\t & loan status\nsns.countplot(x='Self_Employed', hue='Loan_Status',data=loan_dataset)","6832438e":"#Property_Area\t & loan status\nsns.countplot(x='Property_Area', hue='Loan_Status',data=loan_dataset)","bb698b9c":"#Credit_History\t & loan status\nsns.countplot(x='Credit_History', hue='Loan_Status',data=loan_dataset)","54d8e49e":"# Convert Catogerical columns to numerical\nloan_dataset = loan_dataset.replace({'Married' : {'Yes' : 1, 'No' : 0}, \n                                     'Gender' : {'Male' : 1, 'Female' : 0},\n                                     'Education' : {'Graduate' : 1, 'Not Graduate' : 0},\n                                     'Self_Employed' : {'Yes' : 1, 'No' : 0},\n                                     'Property_Area' : {'Rural' : 0, 'Urban' : 1, 'Semiurban' : 2}})","d5882e11":"loan_dataset.head()","13d02e3a":"# Spearating data & label \nX = loan_dataset.drop(columns=['Loan_ID','Loan_Status'], axis=1)\nY = loan_dataset['Loan_Status']\nprint(X, Y)\n","8cb05354":"#Splitting data into train and test\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.22)","1ce1e817":"SVMModel = svm.SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',\n    max_iter=-1, probability=False, random_state=None, shrinking=True,\n    tol=0.001, verbose=False)","8563e551":"# training the data\nSVMModel.fit(X_train,Y_train)","ec430e41":"# Model Score\ntrain_score = SVMModel.score(X_train,Y_train)\nprint('The Train Score is :', train_score)\ntest_score = SVMModel.score(X_test,Y_test)\nprint('The Test Score is :', test_score)","78ef2e17":"#Model prediction\ntrain_Model_prediction = SVMModel.predict(X_train)\ntest_Model_prediction = SVMModel.predict(X_test)","df707655":"#Accuracy Score on traing data\ntrain_accuracy = accuracy_score(train_Model_prediction, Y_train)\nprint('The Train Accuracy Score is :', train_accuracy)\n#Accuracy Score on test data\ntest_accuracy = accuracy_score(test_Model_prediction, Y_test)\nprint('The Train Accuracy Score is :', test_accuracy)","2d4835c5":"data_to_predict = X_test\nmake_prediction = SVMModel.predict(data_to_predict)\nprint('The Predictied Data is :', make_prediction)\nreal_data = Y_test\nprint('The Real Data is :', real_data)","b71115fa":"Making A Predictive System","b1ec2d6d":"Data Collection and processing","2707e8fd":"Data Visualiation","00334ddf":"Evaluation ","0e0b5001":"Importing Libraries","2fa5f4c2":"Training the Model BY SVM "}}