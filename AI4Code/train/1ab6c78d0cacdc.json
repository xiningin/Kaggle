{"cell_type":{"604f17bb":"code","720021f7":"code","f4d5785f":"code","8e7e19b6":"code","671e1f88":"code","db477cab":"code","1903a230":"code","4fe86794":"code","29c3e500":"code","5b7979f7":"code","48ae1718":"code","f89a2d7b":"code","288c2f4c":"code","867d21fa":"code","eeab288b":"code","0310602c":"markdown","329522a0":"markdown","bc2ecc9b":"markdown","de35ec32":"markdown","ded65376":"markdown","63a7dff6":"markdown","43e1ec42":"markdown","423b5533":"markdown","313f3d95":"markdown","2dba4752":"markdown","99f58a25":"markdown"},"source":{"604f17bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","720021f7":"df=pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head(10)","f4d5785f":"df.info()","8e7e19b6":"df.describe()","671e1f88":"df['Genre'].value_counts().plot.pie(explode=[0.02,0.02],autopct='%1.2f%%',shadow=True,figsize=(6,6))\n\nplt.show()","db477cab":"sns.distplot(df['Year'],color='Red',kde=True)","1903a230":"plt.figure(figsize=(10,10))\nplt.title('Price of books')\nsns.distplot(df['Price'],color='Blue',kde=True)\nplt.show()","4fe86794":"plt.figure(figsize=(10,10))\nplt.title('Review of books')\nsns.distplot(df['Reviews'],color='green',kde=True)\nplt.show()","29c3e500":"plt.figure(figsize=(12,8))\n\ntotal = float(len(df[\"Name\"]) )\nax = sns.countplot(x=\"User Rating\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","5b7979f7":"#Analysis of user rating given by the name \nno_of_rated_books_per_name = df.groupby(by='Name')['User Rating'].count().sort_values(ascending=False)\nno_of_rated_books_per_name.head(5)","48ae1718":"#Analysis of user rating given by the Author \nno_of_rated_books_per_Author = df.groupby(by='Author')['User Rating'].count().sort_values(ascending=False)\nno_of_rated_books_per_Author.head(5)","f89a2d7b":"C=df['User Rating'].mean()\nm = df['Reviews'].quantile(0.1565)\nq_books = df.copy().loc[df['Reviews'] >= m]\nq_books.shape\nprint(m)","288c2f4c":"def weighted_rating(df, m=m, C=C):\n    v = df['Reviews']\n    R = df['User Rating']\n    # Perhitungan berdasarkan rumus IMDB\n    a=(v\/(v+m) * R) + (m\/(m+v) * C)\n    return a","867d21fa":"q_books['score'] = q_books.apply(weighted_rating, axis=1)","eeab288b":"#Top 10 rated books\nq_books.groupby(['Name','Author','Genre'], as_index=False)[['User Rating', 'Reviews', 'score']].mean().sort_values(by='score', ascending=False).head(10)","0310602c":"# Conclusion","329522a0":"3. Price","bc2ecc9b":"# 2. Exploration Data ","de35ec32":"Here are the top 10 books to be displayed by the recommendation system to the above customer based on the purchase history of other customers in the Amazon","ded65376":"A recommendation system is a system that refers to predicting a number of items or data for future users, then making it a recommendation for the top item. One of the reasons why it is necessary to use a recommendation system is because users have many choices to use because of the prevalence of the internet.Recommeder system creates a similarity between the user and items and exploits the similarity between user\/item to make recommendations.","63a7dff6":"5. Rating","43e1ec42":"# 1. Data Overview","423b5533":"4. Reviews","313f3d95":"1. **Genre**","2dba4752":"# **Recommendation System**","99f58a25":"2. Year"}}