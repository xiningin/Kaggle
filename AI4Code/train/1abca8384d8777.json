{"cell_type":{"148b51fc":"code","8de546a5":"code","e0e97ebd":"code","b904eb75":"code","56b9b1fe":"code","fccf7b39":"code","4502ffa7":"code","1bcab8cc":"code","08bd54c7":"code","5b0ce3b3":"code","90ca1a6c":"code","22c5a9d1":"code","6b249622":"code","70c4cd4f":"code","0a1df3a3":"code","7f1ea906":"code","1fc037c1":"code","3f9539b6":"code","16a9d47b":"code","68a6a66f":"code","ded3411a":"code","cf231424":"code","4d10306c":"markdown","7d8c3959":"markdown","66af3eb0":"markdown","bc14fb0d":"markdown","fa5e2d15":"markdown","e7131ac1":"markdown","ded4fdb8":"markdown","b42d965e":"markdown","0741199f":"markdown","8a666e0b":"markdown","0ae3c609":"markdown","eaed10cd":"markdown","996744b6":"markdown","7a445ced":"markdown","219c7169":"markdown","501cd110":"markdown","769ba2ab":"markdown","51a44795":"markdown","870a20b4":"markdown","14ea91fe":"markdown","652eb6e2":"markdown"},"source":{"148b51fc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nos.listdir(\"..\/input\")","8de546a5":"data = pd.read_csv(\"..\/input\/train.csv\")\ndata.head()","e0e97ebd":"print(data.dtypes)","b904eb75":"print(\"Total count:\", len(data))\nprint()\nprint(round((data.Survived.value_counts()\/len(data)) * 100,2))","56b9b1fe":"def get_uniquevals(df):\n    print(\"-\"*40)\n    for col in df.columns:\n        if len(df[col].unique()) <= 10:\n            print(\"{} - Unqiue Values:\".format(df[col].name))\n            print(df[col].unique())\n            print()\n            print(\"{} - # of occurences of each values:\".format(df[col].name))\n            print(df[col].value_counts())\n        else:\n            print(\"{} has {} unqiue values:\".format(df[col].name,len(df[col].unique())))\n        print(\"-\"*40)","fccf7b39":"get_uniquevals(data)","4502ffa7":"def getnullcounts(df):\n    print(\"-\"*20)\n    non_nullcols = []\n    for col in df.columns:\n        if df[col].isna().sum() > 0:\n            print(\"{} : {}\".format(df[col].name, df[col].isna().sum()))\n        else:\n            non_nullcols.append(df[col].name)\n    print(\"-\"*20)\n    print('Non-null features:\\n',', '.join(non_nullcols))\n    print(\"-\"*20)","1bcab8cc":"getnullcounts(data)","08bd54c7":"def feature_elimination(df):\n    print('Features to be considered for elimiation:')\n    for col in df.columns:\n        if len(df[col].unique()) == (len(df)) and df[col].dtype != 'object':\n            print(df[col].name)\n        if len(df[col].unique()) > (len(df)*0.50) and df[col].dtype == 'object':\n            print(df[col].name)","5b0ce3b3":"feature_elimination(data)","90ca1a6c":"f, ax = plt.subplots(figsize=(11,5))\nsns.boxplot(x='Survived', y=\"Age\",  data=data);","22c5a9d1":"f, ax = plt.subplots(figsize=(11,5))\nsns.boxplot(x=\"Sex\", y=\"Age\", hue=\"Survived\", data=data);","6b249622":"f, ax = plt.subplots(figsize=(7,3))\nsns.barplot(x='Sex', y=\"Survived\",  data=data);","70c4cd4f":"sns.barplot(x=\"Pclass\", y=\"Survived\", data=data);","0a1df3a3":"sns.barplot(x=\"Pclass\", y=\"Survived\",hue=\"Sex\", data=data);","7f1ea906":"sns.barplot(x=\"SibSp\", y=\"Survived\", data=data);","1fc037c1":"sns.barplot(x=\"Parch\", y=\"Survived\", data=data);","3f9539b6":"data[\"family\"] = data[\"SibSp\"] + data[\"Parch\"]\ndata[\"occumpanied\"] = data[\"family\"].apply(lambda x: 0 if x == 0 else 1)\nsns.barplot(x=\"Survived\", y=\"occumpanied\", data=data);","16a9d47b":"sns.distplot(data['Age'].dropna());","68a6a66f":"survived = data.loc[data['Survived']==1,\"Age\"].dropna()\nsns.distplot(survived)\nplt.title(\"Survived\");","ded3411a":"not_survived = data.loc[data['Survived']==0,\"Age\"].dropna()\nsns.distplot(not_survived)\nplt.title(\"Not Survived\");","cf231424":"sns.pairplot(data.dropna());","4d10306c":"Note: These are suggestions as the number of distinct values are high. Care should be taken before elimination.\nfor example \"Name\" can be used to create a feature called \"title\" which can be used for prediction","7d8c3959":"### Proportion of target (Survived)","66af3eb0":"Those who are occumpanied by a family member (elder or siblings) had high survival rate","bc14fb0d":"Passenger Class 1 has high survival rate","fa5e2d15":"Very less chances for age > 60+ to survive (except some outliers)","e7131ac1":"Infants had high survival rate and elderly passengers above 65+ were less likely to survive","ded4fdb8":"We can see that numbers are represted as int or float in this dataset and data type conversion is not needed here.","b42d965e":"### Visual Exploration","0741199f":"Gives clarity to the above finding that Male has very less chances for age > 60+","8a666e0b":"More the siblings less the survival chance","0ae3c609":"This dataset has a decent proportion of target class and it is not skewed to any one.","eaed10cd":"### Loading dataset","996744b6":"### Null Values","7a445ced":"Number of female passengers survived is more than male passengers","219c7169":"### Feature Elimination","501cd110":"Pclass, Sex, SibSp, Parch and Embarked are having **less distinct values** and they can be converted to numeric values ","769ba2ab":"### Unique Values","51a44795":"Age & Embarked has null values which should be imputed before prediction","870a20b4":"### Data types","14ea91fe":"### Importing required packages","652eb6e2":"Passengers aged between 18-38 had high survival rate compared to others"}}