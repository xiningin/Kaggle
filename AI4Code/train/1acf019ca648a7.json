{"cell_type":{"83b1db31":"code","7f4c4e46":"code","a7db46bc":"code","1c618ed1":"code","0664663b":"code","9f3a2cee":"code","4039a8ba":"code","7697160f":"code","a862ae3f":"code","59247371":"code","0ef20e57":"code","34dbf230":"code","9ab8f2ee":"code","5dfd3a5b":"code","080c77ac":"code","9996e101":"code","e54c8519":"code","2626ebe5":"code","13b9e9a6":"code","4275f666":"code","b4f61db6":"code","6cc18fb1":"code","9fde73c9":"code","0a563c04":"code","791c1bf4":"code","caa51e8d":"code","9c25f3ec":"code","17d445a0":"code","ac9c5afb":"code","533f3071":"code","fbe4cb70":"code","c1cc0d01":"markdown","ff2eadcf":"markdown","04d7654e":"markdown","2438ce9e":"markdown","5c5e1f58":"markdown","65e92fab":"markdown","6517cefb":"markdown","d4df3af0":"markdown","142e033c":"markdown","5a313b4e":"markdown","81663bdb":"markdown"},"source":{"83b1db31":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nnp.random.seed(42)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7f4c4e46":"df = pd.read_csv(\"\/kaggle\/input\/credit-card-customers\/BankChurners.csv\")\ndf.head()","a7db46bc":"df.columns","1c618ed1":"unwanted_cols = ['CLIENTNUM','Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',\n       'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2']\ndf.drop(unwanted_cols, inplace=True, axis=1)","0664663b":"df.columns","9f3a2cee":"cat_cols = df.columns[df.dtypes == 'object']\ncat_cols","4039a8ba":"df.isna().sum()","7697160f":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(16,10))\ncorr = df.corr()\nsns.heatmap(corr.abs(), \n        xticklabels=corr.columns,\n        yticklabels=corr.columns, annot=True)","a862ae3f":"\nfor col in cat_cols:\n    g = sns.catplot(x=col,\n                hue=\"Attrition_Flag\",\n                data=df, kind=\"count\",\n                height=6, aspect=.8)\nplt.show()","59247371":"cat_cols","0ef20e57":"df[\"Attrition_Flag\"] = df[\"Attrition_Flag\"].map({'Existing Customer':0, 'Attrited Customer':1})","34dbf230":"df[\"Gender\"] = df.Gender.map({'M':0, 'F':1})","9ab8f2ee":"df[\"Education_Level\"].unique()","5dfd3a5b":"education_mappping = {\n    \"Uneducated\":0,\n    \"High School\":1,\n    \"Graduate\": 2,\n    \"College\": 3,\n    \"Post-Graduate\":4,\n    \"Doctorate\":5,\n    \"Unknown\": -9\n}\ndf[\"Education_Level\"] = df[\"Education_Level\"].map(education_mappping)","080c77ac":"df[\"Marital_Status\"].unique()","9996e101":"df[\"Marital_Status\"] = df[\"Marital_Status\"].map({'Married':1, 'Single':0, 'Unknown':-99, 'Divorced':2})","e54c8519":"df[\"Income_Category\"].unique()","2626ebe5":"earning_map = {\n    '$60K - $80K':2, 'Less than $40K':0, '$80K - $120K':3, '$40K - $60K':1,\n       '$120K +':4, 'Unknown':-999\n}\ndf[\"Income_Category\"] = df[\"Income_Category\"].map(earning_map)","13b9e9a6":"df[\"Card_Category\"].unique()","4275f666":"df[\"Card_Category\"] = df[\"Card_Category\"].map({'Blue':0, 'Gold':2, 'Silver':1, 'Platinum':3})","b4f61db6":"df.head()","6cc18fb1":"df.dtypes","9fde73c9":"from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom numpy import mean\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import StratifiedKFold, cross_val_score, train_test_split","0a563c04":"target = df[\"Attrition_Flag\"]\ndf.drop([\"Attrition_Flag\"], inplace=True, axis=1)","791c1bf4":"df.shape","caa51e8d":"target.shape","9c25f3ec":"X_train, X_test, y_train, y_test = train_test_split(df, target,test_size=0.2, stratify=target)","17d445a0":"cv = StratifiedKFold(n_splits=10, shuffle=True, random_state=1)\nxgb_model = XGBClassifier(\n    learning_rate=0.09,\n    n_estimators=250,\n    max_depth=3,\n    objective= 'binary:logistic',\n    subsample = 0.75,\n    alpha= 0.01,\n    gamma= 0.1,\n    min_child_weight = 3,\n    use_label_encoder = False,\n    colsample_bytree = 0.8,\n    eval_metric='logloss'\n                     )\n# scores = cross_val_score(xgb_model, X_train, y_train, scoring='accuracy', cv=cv)\n# print(scores*100)\n# print(\"XGB cross validation score:\",mean(scores)*100)","ac9c5afb":"xgb_model.fit(X_train, y_train)\nfrom sklearn.metrics import roc_auc_score\ny_train_pred = xgb_model.predict(X_train)\nprint(\"LGB train accuracy:\",roc_auc_score(y_train_pred,y_train)*100)\ny_pred = xgb_model.predict(X_test)\nprint(\"XGB test accuracy:\",roc_auc_score(y_pred,y_test)*100)","533f3071":"lgb_model = LGBMClassifier(learning_rate=0.09,\n                       num_leaves = 250,\n                       boosting_type='gbdt',\n                       objective='binary',\n                       metric='binary_logloss,auc',\n                       max_depth = 3,\n                       n_estimators=2500, subsample_for_bin=40000, \n                       min_split_gain=2, min_child_weight=2, min_child_samples=5, subsample=0.9)","fbe4cb70":"lgb_model.fit(X_train, y_train)\ny_train_pred = lgb_model.predict(X_train)\nprint(\"LGB train accuracy:\",roc_auc_score(y_train_pred,y_train)*100)\ny_pred = lgb_model.predict(X_test)\nprint(\"LGB test accuracy:\",roc_auc_score(y_pred,y_test)*100)","c1cc0d01":"**Testing the XGB model**","ff2eadcf":"# Visualization","04d7654e":"**Testing the LGB model**","2438ce9e":"No Null values present","5c5e1f58":"# Pre-processing","65e92fab":"# Model","6517cefb":"**Visualize categorical columns**","d4df3af0":"Label encoding the categorical columns","142e033c":"Categorical columns: Attrition_Flag, Gender, Education_Level, Marital_Status, Income_Category, Card_Category","5a313b4e":"**Prepare the train-test sets**","81663bdb":"Removing unwanted columns"}}