{"cell_type":{"a4f00b13":"code","37a934a2":"code","08fa9e12":"code","b3073df7":"code","0acac5d5":"code","8efc4129":"code","2e3a2e37":"code","9826a022":"code","2f92afe8":"code","95037bd6":"code","ba32fddd":"code","558c9c44":"code","47b48992":"code","4e08c29f":"code","ab2c1f89":"code","f14ed06d":"code","4158ac85":"code","9dd31935":"code","ca2d68f9":"code","715c2ee2":"code","2c448635":"code","93acad0f":"code","35469de9":"code","719843bb":"code","7265eaa7":"code","085ea24c":"code","2cabe862":"code","5298d5f8":"code","264a2a8c":"code","11a0cf13":"code","9292f2bf":"markdown","016b32c0":"markdown","08d9660a":"markdown","150b88ab":"markdown"},"source":{"a4f00b13":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","37a934a2":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","08fa9e12":"df.head()","b3073df7":"df.describe()","0acac5d5":"df.info()","8efc4129":"sns.heatmap(df.corr())","2e3a2e37":"df['cp'].value_counts()","9826a022":"df.head()","2f92afe8":"features = df.iloc[: , :-1]\ntarget = df['target']","95037bd6":"features.dtypes","ba32fddd":"from sklearn.model_selection import train_test_split, GridSearchCV\n\nX_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.33, random_state=42)","558c9c44":"from sklearn import tree\nfrom sklearn.metrics import f1_score\n\nclf_tree = tree.DecisionTreeClassifier(criterion='entropy',random_state=42)\nclf_tree.fit(X_train, y_train)\n\ntree_y_pred = clf_tree.predict(X_test)\n\nf1_score(y_test, tree_y_pred)","47b48992":"clf_tree = GridSearchCV(clf_tree , {\n    'criterion': ['entropy', 'gini'],\n    'max_depth': [2, 5, 10, 15],\n    'min_samples_split': [2, 3, 5, 7],\n    'max_features': [2, 4, 6, 8]\n}, return_train_score=False)\n\nclf_tree.fit(features, target)\nclf_tree.cv_results_","4e08c29f":"data = pd.DataFrame(clf_tree.cv_results_)","ab2c1f89":"data.head()","f14ed06d":"final_data = data[['param_max_depth', 'param_max_features', 'param_min_samples_split', 'mean_test_score']]","4158ac85":"final_data.head()","9dd31935":"final_data.nlargest(5, 'mean_test_score')","ca2d68f9":"# The best params for decision tree\nclf_tree.best_params_","715c2ee2":"# The best score for decision tree \nclf_tree.best_score_","2c448635":"from sklearn.linear_model import LogisticRegression\n\nclf_lr = LogisticRegression(random_state=42, max_iter=500)","93acad0f":"clf_lr = clf_lr.fit(X_train, y_train)\n\nlr_y_pred = clf_lr.predict(X_test)\n\nf1_score(y_test, lr_y_pred)\n\n# Logistic Regression provided 82% accuracy (best one so far)","35469de9":"from sklearn.ensemble import RandomForestClassifier\n\nclf_rf = RandomForestClassifier(random_state=42)\n\nclf_rf = clf_rf.fit(X_train, y_train)\n\nrf_y_pred = clf_rf.predict(X_test)\n\nf1_score(y_test, rf_y_pred)\n\n# Random Forest provided 86% accuracy without tuning any parameters (best one)","719843bb":"param_grid = { \n    'n_estimators': [100, 200],\n    'max_depth' : [3,4],\n    'criterion' :['gini', 'entropy'],\n    'min_samples_leaf' : [1,2,3],\n    'min_samples_split' : [2,3]\n}\n\nclf_rfc = RandomForestClassifier(random_state=42)\n\nclf_rfc = GridSearchCV(estimator = clf_rfc , param_grid = param_grid, cv=3, return_train_score=False)","7265eaa7":"clf_rfc.fit(X_train, y_train)","085ea24c":"clf_rfc.cv_results_","2cabe862":"rfc_df = pd.DataFrame(clf_rfc.cv_results_)","5298d5f8":"rfc_df.head()","264a2a8c":"clf_rfc.best_params_","11a0cf13":"clf_rfc.best_score_","9292f2bf":"### DecisionTreeClassifier","016b32c0":"# COLUMNS actual meanings\n\nage\n\nsex \n\nchest pain type (4 values) \n\nresting blood pressure \n\nserum cholestoral in mg\/dl \n\nfasting blood sugar > 120 mg\/dl\n\nresting electrocardiographic results (values 0,1,2)\n\nmaximum heart rate achieved \n\nexercise induced angina \n\noldpeak = ST depression induced by exercise relative to rest \n\nthe slope of the peak exercise ST segment \n\nnumber of major vessels (0-3) colored by flourosopy \n\nthal: 3 = normal; 6 = fixed defect; 7 = reversable defect","08d9660a":"### Random Forest Classifier","150b88ab":"### Logistic Regression Classifier"}}