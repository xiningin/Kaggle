{"cell_type":{"f0719d9f":"code","b593f176":"code","2d87c892":"code","45db9871":"code","b728f508":"code","ee92fa11":"code","b3dca64e":"code","04133fc2":"code","ed41318c":"code","32596cb6":"code","52e0b96f":"code","17015c3a":"code","e83c5788":"code","a17af806":"code","2b2660b1":"code","5a3f5247":"code","12430980":"code","dddb84e3":"code","946c47b8":"code","e03292d2":"code","74bd6ead":"code","e0e7141e":"code","c373882c":"code","8666de9d":"code","6cc46e66":"code","cebeedb7":"code","6ae43028":"code","de6db3a6":"code","0adfc443":"code","fbbc52ee":"code","c62d35c4":"code","5fb37f4c":"code","5f348fed":"code","ad5d3973":"code","49f14db3":"code","b76b60c9":"code","11969674":"code","986b8a71":"code","066fc8c2":"code","9af3d886":"code","e4cbeda9":"code","5b3e2360":"code","cb2174f0":"code","27513f86":"code","6b9fb36e":"code","1f55309e":"markdown","b2ef7acf":"markdown","d6bc862d":"markdown","e93162a8":"markdown","d9e3fd12":"markdown","45755093":"markdown","68845f78":"markdown","c7bb7110":"markdown","fc1b0f03":"markdown","f52bf72b":"markdown","030825c4":"markdown","0258e02b":"markdown","5c1f2960":"markdown","e38058f4":"markdown","d0968a08":"markdown","b33717a7":"markdown","510d4ab7":"markdown","98526188":"markdown","48f58278":"markdown"},"source":{"f0719d9f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import confusion_matrix,accuracy_score,precision_score,recall_score","b593f176":"dataframe=pd.read_csv(\"..\/input\/iris\/Iris.csv\")","2d87c892":"dataframe.shape","45db9871":"dataframe.head()","b728f508":"dataframe.tail()","ee92fa11":"dataframe.info()","b3dca64e":"dataframe.describe()","04133fc2":"del dataframe['Id']","ed41318c":"# Verifying column is deleted\ndataframe","32596cb6":"dataframe.value_counts()","52e0b96f":"dataframe.isnull().sum()","17015c3a":"dataframe.hist(figsize=(17,12),color='purple')\nplt.show()","e83c5788":"plt.figure(figsize=(12,6))\nplt.title(\"Sepal length vs Sepal width\")\nsns.scatterplot(x=dataframe[\"SepalLengthCm\"],y=dataframe[\"SepalWidthCm\"],hue=dataframe[\"Species\"],\n                palette=[\"green\",\"orange\",\"blue\"],s=150)\nplt.show()","a17af806":"plt.figure(figsize=(12,6))\nplt.title(\"Petal length vs Petal width\")\nsns.scatterplot(x=dataframe[\"PetalLengthCm\"], y=dataframe[\"PetalWidthCm\"], hue=dataframe[\"Species\"],\n                palette=[\"green\",\"orange\",\"blue\"],s=150)\nplt.show()","2b2660b1":"corr=dataframe.corr()","5a3f5247":"sns.heatmap(dataframe.corr(), annot=True)\nplt.title('Correlation Matrix')\nplt.show()","12430980":"sns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=dataframe)\nplt.title('Boxplot of Iris Species')\nplt.show()","dddb84e3":"# we will drop Species since its target variable\n# X is Independent Variable\n\nX=dataframe[[\"SepalLengthCm\",\"SepalWidthCm\",'PetalLengthCm','PetalWidthCm']]","946c47b8":"# y is dependent variable\n\ny=dataframe[[\"Species\"]]","e03292d2":"X.shape","74bd6ead":"X","e0e7141e":"y.shape","c373882c":"y","8666de9d":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)","6cc46e66":"X_train.shape","cebeedb7":"X_train","6ae43028":"X_test.shape","de6db3a6":"X_test","0adfc443":"y_train.shape","fbbc52ee":"y_train","c62d35c4":"y_test.shape","5fb37f4c":"y_test","5f348fed":"dtc=DecisionTreeClassifier()","ad5d3973":"dtc","49f14db3":"# printing type of dtc \ntype(dtc)","b76b60c9":"dtc.fit(X_train,y_train)","11969674":"y_predict=dtc.predict(X_test)","986b8a71":"y_predict","066fc8c2":"print(len(y_predict))","9af3d886":"a=accuracy_score(y_predict,y_test)\n\nprint('Accuracy Score=',a*100,'%')","e4cbeda9":"c=confusion_matrix(y_predict,y_test)\n\nprint(c)","5b3e2360":"fig, ax = plt.subplots(figsize=(7.5, 7.5))\nax.matshow(c, cmap=plt.cm.Blues, alpha=0.3)\nfor i in range(c.shape[0]):\n    for j in range(c.shape[1]):\n        ax.text(x=j, y=i,s=c[i, j], va='center', ha='center', size='xx-large')\nplt.xlabel('Predictions', fontsize=18)\nplt.ylabel('Actuals', fontsize=18)\nplt.title('Confusion Matrix', fontsize=18)\nplt.show()","cb2174f0":"pip install pydotplus","27513f86":"from six import StringIO\nfrom IPython.display import Image\nfrom sklearn.tree import export_graphviz\nimport pydotplus","6b9fb36e":"dot_data=StringIO()\nexport_graphviz(dtc,out_file=dot_data,feature_names=[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n                filled=True,\n                rounded=True)\n               \ngraph=pydotplus.graph_from_dot_data(dot_data.getvalue())\nImage(graph.create_png())","1f55309e":"- ### ScatterPLot of Sepal length vs Sepal width","b2ef7acf":"# Importing Library","d6bc862d":" - ### Box Plot","e93162a8":"- ## Building Decision Tree Classifier  ","d9e3fd12":"# Visualization of Data","45755093":"- ### Install this library to plot Decision Tree graph","68845f78":"# Plotting Decision Tree Graph","c7bb7110":"- ### Printing Confusion Matrix","fc1b0f03":"#  Evaluation of Model ","f52bf72b":"- ### Printing Accuracy Score","030825c4":"* ### Histogram of the dataset ","0258e02b":"- ### Here we are splittting our data using train_test_split() ","5c1f2960":"- ### Checking for Null values ","e38058f4":"#  Loading Dataset","d0968a08":"#  Building Decision Tree Classifer","b33717a7":"- ### Creating and Plotting Correlation Matrix","510d4ab7":"- ## But first Split our data into Training and Testing ","98526188":"- ### ScaterPlot of Petal length vs Petal width","48f58278":"* We will delete ID column"}}