{"cell_type":{"7c6bf1cf":"code","b14d3028":"code","27bb9faf":"code","9d6fc3d0":"code","ad2634f2":"code","39467ebc":"code","a1339915":"code","0798487c":"code","e1e38ec5":"code","6b25500b":"code","80263cad":"code","3c77dc08":"code","30afc66a":"code","636e1161":"code","fef6b4b5":"code","01193aa0":"code","c59722fd":"code","47fddb6d":"code","c441f033":"code","f68beb80":"code","0569a59f":"code","1a229dc2":"code","d743b4eb":"code","597234af":"code","11f62ffb":"code","17b68e32":"code","3df88845":"code","e531d39a":"markdown","0652dced":"markdown","4ae5bcaa":"markdown","e2f1d3d4":"markdown","f44adaa8":"markdown","8e65e963":"markdown","f7466fd4":"markdown","00ecfb2c":"markdown","a544fbb8":"markdown","5aaf7a11":"markdown"},"source":{"7c6bf1cf":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","b14d3028":"data = pd.read_csv(r'\/kaggle\/input\/exchange-rate\/exchange-rate-twi.csv')\ndata.columns = ['Month','Exchange Rate TWI']\n\ndata.head()","27bb9faf":"len(data.Month)","9d6fc3d0":"from datetime import date\nfrom dateutil.relativedelta import relativedelta\nfor i in range(0,len(data.Month)):\n    data.Month[i] = date(1990,1,1) + relativedelta(months=+i)\n\ndata.head()","ad2634f2":"data = data.set_index('Month')\ndata.head()","39467ebc":"data.plot(figsize=(20, 4))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Exchange Rate TWI')\nplt.show(block=False)","a1339915":"train_len = 212\ntrain = data[0:train_len] # first 212 months as training set\ntest = data[train_len:]","0798487c":"y_hat_avg = test.copy()\ny_hat_avg['avg_forecast'] = train['Exchange Rate TWI'].mean()","e1e38ec5":"train['Exchange Rate TWI'].mean()","6b25500b":"plt.figure(figsize=(20,4))\nplt.grid()\nplt.plot(train['Exchange Rate TWI'], label='Train')\nplt.plot(test['Exchange Rate TWI'], label='Test')\nplt.plot(y_hat_avg['avg_forecast'], label='Simple average forecast')\nplt.legend(loc='best')\nplt.title('Simple Average Method')\nplt.show()","80263cad":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Exchange Rate TWI'], y_hat_avg['avg_forecast'])).round(2)\nmape = np.round(np.mean(np.abs(test['Exchange Rate TWI']-y_hat_avg['avg_forecast'])\/test['Exchange Rate TWI'])*100,2)\nAccuracy=100-mape\nresults = pd.DataFrame({'Method':['Simple Average Method'], 'MAPE': [mape], 'RMSE': [rmse],'Accuracy':[Accuracy]})\nresults = results[['Method', 'RMSE', 'MAPE','Accuracy']]\nresults","3c77dc08":"y_hat_naive = test.copy()\ny_hat_naive['naive_forecast'] = train['Exchange Rate TWI'][train_len-1]","30afc66a":"train['Exchange Rate TWI'][train_len-1]","636e1161":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Exchange Rate TWI'], label='Train')\nplt.plot(test['Exchange Rate TWI'], label='Test')\nplt.plot(y_hat_naive['naive_forecast'], label='Naive forecast')\nplt.legend(loc='best')\nplt.title('Naive Method')\nplt.show()","fef6b4b5":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Exchange Rate TWI'], y_hat_naive['naive_forecast'])).round(2)\nmape = np.round(np.mean(np.abs(test['Exchange Rate TWI']-y_hat_naive['naive_forecast'])\/test['Exchange Rate TWI'])*100,2)\nAccuracy=(100- mape)\nresults = pd.DataFrame({'Method':['Naive Method'], 'MAPE': [mape], 'RMSE': [rmse],'Accuracy':[Accuracy]})\nresults = results[['Method', 'RMSE', 'MAPE','Accuracy']]\nresults","01193aa0":"y_hat_sma = data.copy()\nma_window = 12\ny_hat_sma['sma_forecast'] = data['Exchange Rate TWI'].rolling(ma_window).mean()\ny_hat_sma['sma_forecast'][train_len:] = y_hat_sma['sma_forecast'][train_len-1]","c59722fd":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Exchange Rate TWI'], label='Train')\nplt.plot(test['Exchange Rate TWI'], label='Test')\nplt.plot(y_hat_sma['sma_forecast'], label='Simple moving average forecast - 12 Months')\nplt.legend(loc='best')\nplt.title('Simple Moving Average Method - 12 Months')\nplt.show()","47fddb6d":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Exchange Rate TWI'], y_hat_sma['sma_forecast'][train_len:])).round(2)\nmape = np.round(np.mean(np.abs(test['Exchange Rate TWI']-y_hat_sma['sma_forecast'][train_len:])\/test['Exchange Rate TWI'])*100,2)\nAccuracy=(100- mape)\nresults = pd.DataFrame({'Method':['Simple Moving Average Method - 12 Months'], 'MAPE': [mape], 'RMSE': [rmse],'Accuracy':[Accuracy]})\nresults = results[['Method', 'RMSE', 'MAPE','Accuracy']]\nresults","c441f033":"y_hat_sma = data.copy()\nma_window = 6\ny_hat_sma['sma_forecast'] = data['Exchange Rate TWI'].rolling(ma_window).mean()\ny_hat_sma['sma_forecast'][train_len:] = y_hat_sma['sma_forecast'][train_len-1]","f68beb80":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Exchange Rate TWI'], label='Train')\nplt.plot(test['Exchange Rate TWI'], label='Test')\nplt.plot(y_hat_sma['sma_forecast'], label='Simple moving average forecast - 6 months')\nplt.legend(loc='best')\nplt.title('Simple Moving Average Method- 6 months')\nplt.show()\n\n","0569a59f":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Exchange Rate TWI'], y_hat_sma['sma_forecast'][train_len:])).round(2)\nmape = np.round(np.mean(np.abs(test['Exchange Rate TWI']-y_hat_sma['sma_forecast'][train_len:])\/test['Exchange Rate TWI'])*100,2)\nAccuracy=(100- mape)\nresults = pd.DataFrame({'Method':['Simple Moving Average Method- 6 months'], 'MAPE': [mape], 'RMSE': [rmse],'Accuracy':[Accuracy]})\nresults = results[['Method', 'RMSE', 'MAPE','Accuracy']]\nresults","1a229dc2":"y_hat_sma = data.copy()\nma_window = 3\ny_hat_sma['sma_forecast'] = data['Exchange Rate TWI'].rolling(ma_window).mean()\ny_hat_sma['sma_forecast'][train_len:] = y_hat_sma['sma_forecast'][train_len-1]\n","d743b4eb":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Exchange Rate TWI'], label='Train')\nplt.plot(test['Exchange Rate TWI'], label='Test')\nplt.plot(y_hat_sma['sma_forecast'], label='Simple moving average forecast - 3 months')\nplt.legend(loc='best')\nplt.title('Simple Moving Average Method- 3 months')\nplt.show()\n\n\n","597234af":"\nfrom sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Exchange Rate TWI'], y_hat_sma['sma_forecast'][train_len:])).round(2)\nmape = np.round(np.mean(np.abs(test['Exchange Rate TWI']-y_hat_sma['sma_forecast'][train_len:])\/test['Exchange Rate TWI'])*100,2)\nAccuracy=(100- mape)\nresults = pd.DataFrame({'Method':['Simple Moving Average Method- 3 months'], 'MAPE': [mape], 'RMSE': [rmse],'Accuracy':[Accuracy]})\nresults = results[['Method', 'RMSE', 'MAPE','Accuracy']]\nresults","11f62ffb":"y_hat_sma = data.copy()\nma_window = 1\ny_hat_sma['sma_forecast'] = data['Exchange Rate TWI'].rolling(ma_window).mean()\ny_hat_sma['sma_forecast'][train_len:] = y_hat_sma['sma_forecast'][train_len-1]","17b68e32":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Exchange Rate TWI'], label='Train')\nplt.plot(test['Exchange Rate TWI'], label='Test')\nplt.plot(y_hat_sma['sma_forecast'], label='Simple moving average forecast - 1 months')\nplt.legend(loc='best')\nplt.title('Simple Moving Average Method- 1 months')\nplt.show()","3df88845":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Exchange Rate TWI'], y_hat_sma['sma_forecast'][train_len:])).round(2)\nmape = np.round(np.mean(np.abs(test['Exchange Rate TWI']-y_hat_sma['sma_forecast'][train_len:])\/test['Exchange Rate TWI'])*100,2)\nAccuracy=(100- mape)\nresults = pd.DataFrame({'Method':['Simple Moving Average Method- 1 months'], 'MAPE': [mape], 'RMSE': [rmse],'Accuracy':[Accuracy]})\nresults = results[['Method', 'RMSE', 'MAPE','Accuracy']]\nresults","e531d39a":"The TWI is a nominal effective krone exchange rate calculated on the basis of NOK exchange rates against the currencies of Norway's 25 main trading partners (geometric average using the OECD's trade weights).","0652dced":"Out of all Methods used, we opt for Simple Moving Average Method with a window of 12 months, because of low RMSE & MAPE with high Accuracy ","4ae5bcaa":"## 12 Months window","e2f1d3d4":"## 3 Months window\n\n","f44adaa8":"# Simple average method","8e65e963":"# Simple moving average method","f7466fd4":"## Business Input , Month 0 equals 1990-01-01","00ecfb2c":"## 6 Months window","a544fbb8":"## 1 Months window","5aaf7a11":"# Naive method"}}