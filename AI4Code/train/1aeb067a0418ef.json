{"cell_type":{"2acba24f":"code","febf7210":"code","bd983d6d":"code","b29769f1":"code","c23d6fe6":"code","86c98d78":"code","4e2e517d":"code","3363a6db":"code","9e39c9b7":"code","2cc63b67":"code","6b3e0f05":"code","d0d94627":"code","43182df0":"code","1a4bfd0c":"code","e8070b17":"code","5cfce94d":"code","2ea58d7d":"code","f8628f3b":"code","1c1f58b2":"code","f212d5ff":"code","210b3fe8":"code","3b097dee":"markdown","870171cd":"markdown","42a67616":"markdown","33c3c7e8":"markdown","d628bd29":"markdown","24bad54b":"markdown","25531654":"markdown","cfb20cbb":"markdown"},"source":{"2acba24f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","febf7210":"import numpy as np\nimport pandas as pd \nimport os\nimport random\nimport matplotlib.pyplot as plt\nimport seaborn as sns","bd983d6d":"train = pd.read_csv('\/kaggle\/input\/ml4e-forest-cover-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/ml4e-forest-cover-prediction\/test.csv')\nsoil = pd.read_csv('\/kaggle\/input\/ml4e-forest-cover-prediction\/soil_data.csv')","b29769f1":"# Note: Setting a seed is important to ensure reproducibility of your results\ndef seedAll(seed_value = 42):\n    np.random.seed(seed_value)\n    random.seed(seed_value)\n    os.environ['PYTHONHASHSEED'] = str(seed_value)\n\nseedAll(seed_value=101)","c23d6fe6":"print(train.describe())\ntrain.head(3)","86c98d78":"print(test.shape)\ntest.head(3)","4e2e517d":"soil.head(3)","3363a6db":"for col in train.columns[1:-1]:\n    print(f'{col}: {train[col].skew()}')","9e39c9b7":"g = sns.FacetGrid(train, hue=\"Cover_Type\",height=7,palette=\"magma\")\ng.map(sns.distplot, \"Elevation\")\nplt.legend(title=\"Cover_Type\")\nplt.title(\"Elevation\")","2cc63b67":"g = sns.FacetGrid(train, hue=\"Cover_Type\",height=7,palette=\"hsv\")\ng.map(sns.distplot, \"Horizontal_Distance_To_Roadways\")\nplt.legend(title=\"Cover_Type\")\nplt.title(\"Horizontal_Distance_To_Roadways\")","6b3e0f05":"cols = ['Horizontal_Distance_to_Hydrology','Vertical_Distance_to_Hydrology','Hillshade_9am','Hillshade_Noon']\nfig,a = plt.subplots(4,1,figsize=(6,14))\nfor i,col in enumerate(cols):\n    sns.distplot(train[col],ax=a[i])\n    a[i].set_title(col)\nplt.tight_layout()","d0d94627":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score","43182df0":"train_data = train.merge(soil,how=\"inner\",on=\"id\")\ntest_data = test.merge(soil,how=\"inner\",on=\"id\")","1a4bfd0c":"FEATURES = train_data.drop(['id','Cover_Type'],axis=1).columns","e8070b17":"sc = StandardScaler()\ntrain_data.loc[:,FEATURES] = sc.fit_transform(train_data.loc[:,FEATURES])\ntest_data.loc[:,FEATURES] = sc.transform(test_data.loc[:,FEATURES])","5cfce94d":"X_train,X_val,Y_train,Y_val = train_test_split(train_data.loc[:,FEATURES],train_data[\"Cover_Type\"],test_size=0.3,random_state=101)","2ea58d7d":"print(f'X_train: {X_train.shape}')\nprint(f'X_val: {X_val.shape}')","f8628f3b":"rf = RandomForestClassifier()\nrf.fit(X_train,Y_train)","1c1f58b2":"f1_score(Y_val,rf.predict(X_val),average='micro')","f212d5ff":"ss = pd.read_csv('..\/input\/ml4e-forest-cover-prediction\/sample_submission.csv')","210b3fe8":"ss.loc[:,'Cover_Type'] = rf.predict(test_data.loc[:,FEATURES])\nss.to_csv('.\/sub.csv',index=False)","3b097dee":"\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n  <h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" role=\"tab\" aria-controls=\"home\">Table of Contents<\/h3>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#load\" role=\"tab\" aria-controls=\"profile\" target=\"_self\">Loading Files and Setting seed<span class=\"badge badge-primary badge-pill\">1<\/span><\/a>\n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#check-out\" role=\"tab\" aria-controls=\"profile\" target=\"_self\">Check out the Data<span class=\"badge badge-primary badge-pill\">2<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#pre\" role=\"tab\" aria-controls=\"messages\" target=\"_self\">Data Pre-Processing and baseline model<span class=\"badge badge-primary badge-pill\">3<\/span><\/a>\n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#submission\" role=\"tab\" aria-controls=\"messages\" target=\"_self\">How to make Submission<span class=\"badge badge-primary badge-pill\">4<\/span><\/a>\n  \n\n<\/div>\n","870171cd":"Please note that this model is probably hugely overfitted. You may play with the parameters or choose a completely different model","42a67616":"# <a id=\"check-out\">Check out the Data( Basic EDA)<\/a>\n**Note:**<a style=\"color:red\">This is not an extensive EDA. We are only checking out the given data and plotting a few visualizations that may or may not be important<\/a>\n<br> Explore the data as much as you can to gain insights","33c3c7e8":"# <a style=\"color:Green\"> <strong>Starter Notebook for Forest Cover Prediction(ml4e-inclass)<\/strong><\/a>","d628bd29":"# <a id=\"submission\"> How to make Submission<\/a>\nSave the predictions of your model in a DataFrame with two columns, the ids and corresponding cover_type. Save the DataFrame as a csv file and submit at the competitions page.","24bad54b":"# <a id=\"load\"> Loading Files and Setting seed<\/a>","25531654":"## <a id=\"model\"> Basic Model<\/a>\nThe validation set up is only for demonstration `if you submit the predictions of this model the leaderboard score will dissapoint you`. RandomForest has solely been used for demonstration. The choice of approach is completely up to you.","cfb20cbb":"# <a id=\"pre\">Data Pre-Processing and baseline model<\/a>\n**This doesn't involve any feature transformation or feature engineering**\n<br>\n* You may build new features from existing ones if you deem necessary. \n* You may also apply transformations on the features for example to remove skewness or to perform binning\n"}}