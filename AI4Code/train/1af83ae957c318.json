{"cell_type":{"2b340bd1":"code","d5732863":"code","acf02bd2":"code","75ee1968":"code","cb13a268":"code","37677c41":"code","aee3ca0f":"code","4fb987f6":"code","ef009448":"code","dd8005e0":"code","9809798c":"code","549d9101":"code","a7064976":"code","bbe6fa44":"code","d1ae335e":"code","c4747670":"code","87b908b5":"code","8fc309ec":"code","3fc9b0ca":"code","e47f494c":"code","d7fe5743":"code","7f234fe6":"code","fbcd3aa4":"code","ef31e221":"code","18f8b9f6":"code","14b4bc7d":"code","4281d531":"markdown"},"source":{"2b340bd1":"# Necessary Library\n%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport pandas_profiling\n\nfrom sklearn.cluster import KMeans \nimport pylab as pl\nfrom sklearn import cluster\n\nimport matplotlib.pyplot as plt \nplt.rc(\"font\", size=14)\nimport seaborn as sns\nsns.set(style=\"white\")\nsns.set(style=\"whitegrid\", color_codes=True)","d5732863":"#load the data to dataframe\ndata = pd.read_csv(\"..\/input\/card-usage\/CreditCardUsage.csv\")","acf02bd2":"pandas_profiling.ProfileReport(data)","75ee1968":"data.duplicated().sum()","cb13a268":"data.drop_duplicates(inplace = True)","37677c41":"data.isna().sum()","aee3ca0f":"data['CREDIT_LIMIT']=data['CREDIT_LIMIT'].fillna(data['CREDIT_LIMIT'].mean())","4fb987f6":"data['MINIMUM_PAYMENTS']=data['MINIMUM_PAYMENTS'].fillna(data['MINIMUM_PAYMENTS'].mean())","ef009448":"data.isna().sum()","dd8005e0":"data.drop(labels=['CUST_ID','ONEOFF_PURCHASES'],axis=1,inplace=True)","9809798c":"pandas_profiling.ProfileReport(data)\n","549d9101":"data.corr()\n","a7064976":"sns.heatmap(data.corr())","bbe6fa44":"data.head()","d1ae335e":"data.shape\n","c4747670":"data.info()\n","87b908b5":"data.describe().T\n","8fc309ec":"from sklearn.preprocessing import StandardScaler\nX = data.values[:,1:]\nX = np.nan_to_num(X)\nClus_dataSet = StandardScaler().fit_transform(X)\nClus_dataSet","3fc9b0ca":"clusterNum = 3\nk_means = KMeans(init = \"k-means++\", n_clusters = clusterNum, n_init = 12)\nk_means.fit(X)\nlabels = k_means.labels_\nprint(labels)","e47f494c":"Nc = range(1, 20)\nkmeans = [KMeans(n_clusters=i) for i in Nc]\nkmeans\nscore = [kmeans[i].fit(X).score(X) for i in range(len(kmeans))]\nscore\npl.plot(Nc,score)\npl.xlabel('Number of Clusters')\npl.ylabel('Score')\npl.title('Elbow Curve')\npl.show()","d7fe5743":"kn = KMeans(n_clusters=6)\nkn.fit(X)","7f234fe6":"kn.inertia_","fbcd3aa4":"Nc = range(1, 20)\nkmeans = [KMeans(n_clusters=i) for i in Nc]\nkmeans\nscore = [kmeans[i].fit(X).inertia_ for i in range(len(kmeans))]\nscore\npl.plot(Nc,score)\npl.xlabel('Number of Clusters')\npl.ylabel('Sum of within sum square')\npl.title('Elbow Curve')\npl.show()","ef31e221":"data['label']=kn.labels_","18f8b9f6":"sns.set_palette(\"RdBu_r\", 6)\nsns.scatterplot(data['BALANCE'],data['PURCHASES'],hue=data['label'],palette=\"RdBu_r\")","14b4bc7d":"sns.set_palette('Set1')\nsns.scatterplot(data['PURCHASES'],data['PAYMENTS'],hue=data['label'],palette='Set2')","4281d531":"# Preprocessing"}}