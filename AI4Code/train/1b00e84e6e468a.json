{"cell_type":{"70776264":"code","1f96431c":"code","f21fb854":"code","4b4c2fd6":"code","fd5a4fe0":"code","90615145":"code","e5e32a47":"code","b7ab9004":"code","9a1f7a37":"code","7c68d635":"code","2e4c47a5":"code","b6ab0314":"code","0108b8b1":"code","9902c151":"code","b3297c0b":"code","11b3a147":"code","c163616f":"code","29553e3e":"code","58366c93":"code","5c280fe7":"code","063a6640":"code","3817e228":"code","8fd20d89":"code","69c00174":"code","411335be":"code","19d14a10":"code","ee5e1001":"code","b18c45df":"code","db7afb34":"code","a7445b65":"code","e05ec39c":"code","df8a8c92":"code","129baa3e":"markdown","6d6fb64c":"markdown","34610d57":"markdown","ba328ad9":"markdown","73ce1a95":"markdown","70f7670c":"markdown","ca1b9cb4":"markdown"},"source":{"70776264":"!pip install pip --upgrade\n!pip install fastai --upgrade","1f96431c":"import pathlib\nfrom pathlib import Path\nfrom fastai.vision.all import *","f21fb854":"import pandas as pd","4b4c2fd6":"path = Path('..\/input\/digit-recognizer')","fd5a4fe0":"path.ls()","90615145":"df_sample_submission = pd.read_csv(path\/'sample_submission.csv'); df_sample_submission.head()","e5e32a47":"df_train = pd.read_csv(path\/'train.csv'); df_train.shape","b7ab9004":"df_test = pd.read_csv(path\/'test.csv'); df_test.shape","9a1f7a37":"path = Path('\/kaggle\/working')","7c68d635":"path.ls()","2e4c47a5":"train_path = path\/'train'\ntest_path = path\/'test'\ntrain_path.mkdir()\ntest_path.mkdir()","b6ab0314":"for i, row in enumerate(df_train.values):\n    dir = train_path\/str(row[0])\n    dir.mkdir(exist_ok=True)\n    img_arr = row[1:].reshape(28, 28).astype(np.uint8)\n    Image.fromarray(img_arr, \"L\").save(dir\/f\"{i}.png\")","0108b8b1":"for i, row in enumerate(df_test.values):\n    img_arr = row.reshape(28, 28).astype(np.uint8)\n    Image.fromarray(img_arr, \"L\").save(test_path\/f\"{i}.png\")","9902c151":"mnist = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(),\n    get_y=parent_label,\n    batch_tfms=Normalize(imagenet_stats)\n)","b3297c0b":"dls = mnist.dataloaders(train_path, batch_size=1024)","11b3a147":"len(dls.train), len(dls.valid)","c163616f":"dls.train.show_batch()","29553e3e":"dls.valid.show_batch()","58366c93":"arch = resnet101","5c280fe7":"learn = cnn_learner(dls, arch)\nlr_min, lr_steep = learn.lr_find()","063a6640":"print(f\"min\/10: {lr_min:.3}, steepest: {lr_steep:.3}\")","3817e228":"print(f\"best option: {(lr_min + lr_steep)\/2:.3}\")","8fd20d89":"learn = cnn_learner(dls, arch, metrics=accuracy, lr=0.01)\nlearn.fine_tune(7)","69c00174":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","411335be":"test_len = len(test_path.ls())\ntest_fns = L()\nfor i in range(test_len):\n    fn = test_path\/f\"{i}.png\"\n    test_fns.append(fn)","19d14a10":"test_fns","ee5e1001":"test_dl = dls.test_dl(test_fns)","b18c45df":"preds = learn.get_preds(dl=test_dl)[0].argmax(dim=1)","db7afb34":"preds","a7445b65":"df_result = pd.DataFrame(\n    {\n        \"Label\": preds.tolist()\n    }\n)\ndf_result.index += 1","e05ec39c":"df_result","df8a8c92":"df_result.to_csv(path\/\"attempt3.csv\", index_label=\"ImageId\")","129baa3e":"# Create DataLoaders","6d6fb64c":"# Read csv","34610d57":"# Save images\n","ba328ad9":"# Import packages","73ce1a95":"# Install packages","70f7670c":"# Predict and export submission","ca1b9cb4":"# Train"}}