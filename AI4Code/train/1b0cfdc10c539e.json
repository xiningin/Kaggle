{"cell_type":{"25471d11":"code","95391d2a":"code","2d70cd3f":"code","748b12a2":"code","f09bebea":"code","f2b96cde":"code","def7d3ce":"code","42a9e554":"markdown"},"source":{"25471d11":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom catboost import CatBoostRegressor, Pool\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv')","95391d2a":"print(f'train: {len(train)}, test: { len(test)}')\ntrain.head()","2d70cd3f":"# obj_feat_train = list(train.loc[:, train.dtypes == 'object'].columns.values)\n# obj_feat_test = list(test.loc[:, test.dtypes == 'object'].columns.values)\n# for feature in obj_feat_train:\n#     train[feature] = pd.Series(train[feature], dtype=\"category\")\n# for feature in obj_feat_test:\n#     test[feature] = pd.Series(train[feature], dtype=\"category\")","748b12a2":"x_train = train.drop(columns=['id', 'target'])\ny_train = train['target']\nx_train = x_train.values\ny_train = y_train.values\n\nx_train, x_valid, y_train, y_valid = train_test_split(x_train, y_train, test_size=0.2, random_state=42)","f09bebea":"#categorical_features = [col for c, col in enumerate(train.columns) if 'cat' in col]\ncategorical_features =[0,1,2, 3, 4, 5, 6, 7, 8, 9]","f2b96cde":"# ,feature_name = categorical_features, categorical_feature=categorical_features\nmodel = CatBoostRegressor(verbose=True, loss_function='MultiRMSE')\nmodel.fit(x_train, y_train, cat_features=categorical_features)","def7d3ce":"submission = test\nids = submission['id'].values\nsubmission.drop('id', inplace=True, axis=1)\n\n\nx = submission.values\ny = model.predict(x)\n\noutput = pd.DataFrame({'id': ids, 'target': y})\noutput.to_csv(\"submission.csv\", index=False)\n","42a9e554":"Minimal Lines of Code to do the Prediction on test data."}}