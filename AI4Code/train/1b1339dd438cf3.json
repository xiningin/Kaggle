{"cell_type":{"fd8d0c7c":"code","c80624ca":"code","99db87f6":"code","c6d36ae3":"code","ef5bc30d":"code","86334b72":"code","6b03798c":"code","25d2eac4":"code","ac7c5612":"code","c23990e1":"code","fca1e771":"code","f001a5d9":"code","c8988361":"code","efd9ed7e":"code","0255925c":"code","a5448f6d":"code","9d9e1ce0":"code","5b9b10c7":"code","a9f5ab6c":"code","4322daf6":"code","32aa05d3":"code","4e825aad":"code","e2054f5b":"code","a414bca4":"code","19d1ec18":"code","f2c119e7":"code","aa81ce14":"code","b675435b":"code","6f092f0f":"code","c9dfc161":"code","a08311fc":"code","20f73357":"code","c5ab18e3":"code","ac686292":"code","4e3d3fd0":"code","0cd1a2e3":"code","4145406a":"code","1d85c25d":"code","c225a0be":"code","b9e78e5d":"markdown","5c259fdf":"markdown","54a93928":"markdown","9abf51a3":"markdown","a35c9e55":"markdown","36f2ca3e":"markdown","1cbe136c":"markdown","fdd1643c":"markdown","6a1c8d31":"markdown"},"source":{"fd8d0c7c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom xgboost import XGBRegressor\nfrom catboost import CatBoostRegressor\n\nfrom sklearn.model_selection import RandomizedSearchCV\n","c80624ca":"train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntrain.head()","99db87f6":"pd.set_option('display.max_columns', None)","c6d36ae3":"train.head()","ef5bc30d":"# Printing numeric columns and its count\n\nnum_cols = train._get_numeric_data().columns \ndisplay(num_cols)\nprint()\nprint(\"Count: \", len(num_cols))","86334b72":"import warnings\nwarnings.filterwarnings('ignore')","6b03798c":"# Drawing box plots to check for outliers\n\nplt.figure(figsize = (25,45))\nfor i in enumerate(num_cols):\n        plt.subplot(13,3,i[0]+1)\n        sns.boxplot(train[i[1]])\n        plt.xlabel(i[1])","25d2eac4":"train.describe()","ac7c5612":"\ntrain[train['LotFrontage']>200]\ntrain[train['LotArea']>50000]\ntrain[train['MasVnrArea']>500]\ntrain[train['BsmtFinSF1']>2000]\ntrain[train['TotalBsmtSF']>2000]\ntrain[train['1stFlrSF']>3000]\ntrain[train['2ndFlrSF']>2000]\ntrain[train['GrLivArea']>3000]\ntrain[train['GarageArea']>1000]\ntrain[train['WoodDeckSF']>500]\ntrain[train['MiscVal']>8000]\ntrain[train['SalePrice']>400000]","c23990e1":"# Index to be removed\n\nindex = [58,161,178,185,231,278,349,389,440,\n         473,496,515,527,591,661,664,691,769,\n         798,803,898,1046,1142,1169,1182,1243,\n         1353,1373]\n\ntrain = train.drop(labels=index, axis=0)","fca1e771":"train","f001a5d9":"print(\"Shape of train data:\", train.shape)","c8988361":"#Printing columns with Null values for train data\n\nNull_train = train.isnull().sum()\nNull_train[Null_train > 0]","efd9ed7e":"# Droping the columns with more missing values\ncolumns = ['Alley', 'PoolQC','Fence','MiscFeature']\n\ntrain = train.drop(columns, axis=1)","0255925c":"train.shape","a5448f6d":"Null_train = train.isnull().sum()\nNull_train[Null_train > 0]","9d9e1ce0":"def preprocessing_data(df):\n    for label,content in df.items():\n        if pd.api.types.is_numeric_dtype(content):\n            if pd.isnull(content).sum():\n                df[label] = content.fillna(content.mean())\n        \n        if not pd.api.types.is_numeric_dtype(content):\n            df[label] = pd.Categorical(content).codes+1\n        \n    return df","5b9b10c7":"train = preprocessing_data(df=train)\ntrain","a9f5ab6c":"# Distribution of target variable \nplt.figure(figsize=(10,5))\nsns.displot(train['SalePrice'], kde = True, color = 'Green')\nplt.xticks(rotation=90)\nplt.show()","4322daf6":"# Log transformation of prices\nplt.figure(figsize=(10,5))\nsns.displot(np.log(train['SalePrice']),kde = True, color = 'Black')\nplt.show()","32aa05d3":"labels = ['Normal', 'Partial', 'Abnormal', 'Family', 'Alloca', 'AdjLand']\n\ncolors = ['gold', 'silver', 'red', 'maroon', 'grey', 'green']\n\nfig, ax = plt.subplots(figsize=(10,5))\nax.pie(train['SaleCondition'].value_counts(), labels=labels, colors=colors,autopct='%1.1f%%', shadow=True,startangle=30)\nplt.axis('equal')\nplt.show()","4e825aad":"plt.figure(figsize=(10,5))\nsns.scatterplot(data=train, x='LotArea', y='SalePrice');","e2054f5b":"X = train.drop('SalePrice',axis=1)\ny = train['SalePrice']","a414bca4":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=42)","19d1ec18":"# RandomForestRegressor\nclf1 = RandomForestRegressor(random_state=1)\nclf1.fit(X_train, y_train)\n\ny_preds1 = clf1.predict(X_test)\n\nprint(f\"Accuracy Score : {clf1.score(X_test, y_test)}\")\n","f2c119e7":"# GradientBoost\nclf2 = GradientBoostingRegressor(random_state=1)\nclf2.fit(X_train, y_train)\n\ny_preds2 = clf2.predict(X_test)\nprint(f\"Accuracy Score : {clf2.score(X_test, y_test)}\")","aa81ce14":"#XGB\nnp.random.seed(42)\nclf3 = XGBRegressor()\nclf3.fit(X_train, y_train)\n\ny_preds3 = clf3.predict(X_test)\nprint(f\"Accuracy Score : {clf3.score(X_test, y_test)}\")","b675435b":"# Catboost\nnp.random.seed(42)\nclf4 = CatBoostRegressor(verbose=0)\nclf4.fit(X_train, y_train)\n\ny_preds4 = clf4.predict(X_test)\nclf4.score(X_test, y_test)","6f092f0f":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test,y_preds4,squared=False)","c9dfc161":"test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest.head()","a08311fc":"test_columns = ['Alley', 'PoolQC','Fence','MiscFeature']\n\n\ntest = test.drop(test_columns, axis=1)\n","20f73357":"test.head()","c5ab18e3":"test.shape","ac686292":"test = preprocessing_data(df=test)\ntest","4e3d3fd0":"model = CatBoostRegressor(verbose=0)\n\nmodel.fit(X_train, y_train)\nmodel.score(X_test, y_test)","0cd1a2e3":"predictions = model.predict(test)","4145406a":"submission = pd.DataFrame()\nsubmission['Id'] = test['Id']\nsubmission['SalePrice'] = predictions","1d85c25d":"submission","c225a0be":"submission.to_csv('submission', index=False)","b9e78e5d":"## Outliers","5c259fdf":"## Modelling","54a93928":"# Evaluation Metric","9abf51a3":"## visualization","a35c9e55":"### Removing outliers ","36f2ca3e":"## Split the Dataset","1cbe136c":"## Import Test Data","fdd1643c":"## Preprocessing Data","6a1c8d31":"### Submission File"}}