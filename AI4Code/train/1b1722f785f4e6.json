{"cell_type":{"a5c17d64":"code","92e07902":"code","edd75ba2":"code","91d3c3e1":"code","a99937cc":"code","b867975d":"code","30fd61c0":"code","f99ca87a":"code","43fa069e":"code","147bfff7":"code","706239d1":"code","bf55691d":"code","78c5d688":"code","27d34fd6":"code","b5d0976b":"code","8a2c96f3":"code","0bcf5e0a":"code","04a44471":"code","c935ac2a":"code","20278a1f":"code","02a9f2bc":"code","4ca22fd8":"code","e90a6b11":"code","664ec8f9":"code","6788d8de":"code","1ff7a709":"markdown","fc1cbece":"markdown","e0add355":"markdown","d98df7ba":"markdown","28edfd42":"markdown","c11a7563":"markdown","c2d7978f":"markdown","10e7d81b":"markdown","607f848a":"markdown","8fbbb67b":"markdown","7fdcfcd7":"markdown","7b46d99c":"markdown","93593480":"markdown","ad23c6f6":"markdown","c879e9f0":"markdown","5faf9953":"markdown","63a198bd":"markdown","377738a3":"markdown","96d1ae64":"markdown"},"source":{"a5c17d64":"! pip install turicreate\nimport turicreate","92e07902":"# Reading the data and creating an SFrame of the data\npeople = turicreate.SFrame.read_csv('..\/input\/documentreterival\/people_wiki.csv')\n\n# Exploring dataset\npeople.head()","edd75ba2":"people.shape","91d3c3e1":"obama = people[people['name'] == 'Barack Obama']\nobama['text']","a99937cc":"BradPitt = people[people['name'] == 'Brad Pitt'] \nBradPitt['text']","b867975d":"# Creating new 'word_count' column for obama article\nobama['word_count'] = turicreate.text_analytics.count_words(obama['text'])\nobama","30fd61c0":"# let's view some words count in 'word_count' column for obama\nobama['word_count'][:30]","f99ca87a":"# Creating a table containg two columns 'word' and 'count' for obama using its 'word_count' column\nobama_word_count_table = obama[['word_count']].stack('word_count', new_column_name= ['word', 'count'])\nobama_word_count_table.head(5)","43fa069e":"obama_word_count_table.sort('count', ascending= False)","147bfff7":"# Creating 'word_count' column for for entire corpus of article (i.e. for all rows 'text' column in the dataframe)\npeople['word_count'] = turicreate.text_analytics.count_words(people['text'])\npeople.head(5)","706239d1":"# Computing 'tfidf' (i.e 'Term Frequency-Inverse Document Frequecy') using 'text' column for dataset \npeople['tfidf'] = turicreate.text_analytics.tf_idf(people['text'])\npeople.head(5)","bf55691d":"obama = people[people['name'] == 'Barack Obama']\nobama[['tfidf']].stack('tfidf', new_column_name= ['word', 'count']).sort('count', ascending= False)","78c5d688":"BradPitt = people[people['name'] == 'Brad Pitt']\nBradPitt[['tfidf']].stack('tfidf', new_column_name= ['word', 'count']).sort('count', ascending= False)","27d34fd6":"clinton = people[people['name'] == 'Bill Clinton']\nbeckham = people[people['name'] == 'David Beckham']","b5d0976b":"turicreate.distances.cosine(obama['tfidf'][0], clinton['tfidf'][0])","8a2c96f3":"turicreate.distances.cosine(obama['tfidf'][0],beckham['tfidf'][0])","0bcf5e0a":"knn_model = turicreate.nearest_neighbors.create(people, features= ['tfidf'], label= 'name')","04a44471":"knn_model.query(obama)","c935ac2a":"EltonJohn = people[people['name'] == 'Elton John']\nEltonJohn","20278a1f":"# top five word according to word counts for 'Elton John'\nEltonJohn_word_count_table = EltonJohn[['word_count']].stack('word_count', new_column_name= ['word', 'count'])\nEltonJohn_word_count_table.sort('count', ascending= False).head(5)","02a9f2bc":"# top five word according to tfidf for 'Elton John'\nEltonJohn_tfidf_table = EltonJohn[['tfidf']].stack('tfidf', new_column_name= ['word', 'tfidf'])\nEltonJohn_tfidf_table.sort('tfidf', ascending= False).head(5)","4ca22fd8":"victoria = people[people['name'] == 'Victoria Beckham']\npaul = people[people['name'] == 'Paul McCartney']","e90a6b11":"# Cosine distance between 'Elton John' and 'Victoria Beckham'\nturicreate.distances.cosine(EltonJohn['tfidf'][0], victoria['tfidf'][0])","664ec8f9":"# Cosine distance between 'Elton John' and 'Paul McCartney'\nturicreate.distances.cosine(EltonJohn['tfidf'][0], paul['tfidf'][0])","6788d8de":"knn_model.query(EltonJohn)","1ff7a709":"# Document retrieval from Wikipedia data","fc1cbece":"## Manually evaluate the distance between certain people's articles","e0add355":"### Examine the TF-IDF for the Brad Pitt article","d98df7ba":"'Elton John' is much closer to 'Paul McCartney' than he is to 'Victoria Beckham'.        \nIt makes sence, because 'Elton John' and 'Paul McCartney' both have similarities like they bothare singer, songwriter and composer where as 'Elton John' and 'Victoria Beckham' both have just one similarity i.e. they both are singers.\n\n---","28edfd42":"---","c11a7563":"#### Explore the entry for actor Brad Pitt","c2d7978f":"Here, Obama is much closer to Clinton than he is to Beckham. Since, lower the cosine distance closer the two articles are.","10e7d81b":"## Compare top words according to word counts to TF-IDF for 'Elton John'","607f848a":"---\n---","8fbbb67b":"### Get the word counts for obama article","7fdcfcd7":"### Is Obama closer to Clinton or to Beckham?","7b46d99c":"### Sort the word counts for the obama article ","93593480":"### Nearest Neighbor to Elton John","ad23c6f6":"## Manually evaluate the distances and Comparing for similarties","c879e9f0":"## Explore the data\n\n#### Taking a look at the entry for 44th President of the US, Mr. Barack Hussein Obama","5faf9953":"### Use model for retrieval... for example, who is closest to Obama?","63a198bd":"# Apply nearest neighbors for retrieval of Wikipedia articles\n\n### Build the NN model","377738a3":"### Examine the TF-IDF for the Obama article","96d1ae64":"## Compute TF-IDF for the entire corpus of articles"}}