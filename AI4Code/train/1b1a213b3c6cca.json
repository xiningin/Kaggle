{"cell_type":{"31b2609b":"code","7ce96fd0":"code","ccda1338":"code","e8e92b63":"code","58e68f5c":"code","e8984844":"code","20508c09":"code","898420bc":"code","bd66660b":"code","677cb9e9":"code","bc08fc5f":"code","a7814994":"code","aab02082":"code","9ccc13be":"code","b9c7c785":"code","0dc5c46b":"code","3ca72bd7":"code","51fa6bb0":"code","fdf30ba2":"code","5fe79c11":"markdown","5cedd4c0":"markdown","09d0ffd4":"markdown","a6811235":"markdown","36c4cfc4":"markdown","c8f34ef6":"markdown","bff5adae":"markdown","8f879ba9":"markdown","b5729b10":"markdown"},"source":{"31b2609b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/dataset\/images'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ce96fd0":"import warnings\nwarnings.filterwarnings(\"ignore\", category=UserWarning, module=\"torch.nn.functional\")","ccda1338":"from fastai import *\nfrom fastai.vision import *","e8e92b63":"path = Path(\"..\/input\/dataset\/images\")","58e68f5c":"classes = ['bee', 'other_insect', 'wasp', 'other_noinsect']","e8984844":"import numpy as np\nnp.random.seed(42)\ndata = ImageDataBunch.from_folder(path, train=\".\", valid_pct=0.2,\n                                  ds_tfms=get_transforms(), size=224, num_workers=4).normalize(imagenet_stats)","20508c09":"data.classes","898420bc":"data.show_batch(rows=4, figsize=(7,8))","bd66660b":"data.classes, data.c, len(data.train_ds), len(data.valid_ds)","677cb9e9":"learn = cnn_learner(data, models.resnet34, metrics=[error_rate, accuracy])","bc08fc5f":"learn.fit_one_cycle(3)","a7814994":"learn.model_dir='\/kaggle\/working' \nlearn.save(\"stage_0.bee_wasp\")","aab02082":"learn.load('stage_0.bee_wasp')","9ccc13be":"learn.unfreeze()","b9c7c785":"learn.lr_find()","0dc5c46b":"learn.recorder.plot()","3ca72bd7":"learn.fit_one_cycle(2, max_lr=slice(3e-5,3e-4))","51fa6bb0":"learn.model_dir='\/kaggle\/working' \nlearn.save(\"stage_02.bee_wasp\")","fdf30ba2":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","5fe79c11":"### Getting the learning rate ###","5cedd4c0":"### That's it!! ###","09d0ffd4":"### The dataset has 4 labels and I only got 100 (total of 400) images for each class to check the performance with less data ###","a6811235":"### Confusion Matrix ###","36c4cfc4":"### Choosing a good learning rate increased the accuracy to 96,25%!!!","c8f34ef6":"### Using the Resnet34 model (a pre-trained model) ###","bff5adae":"# Let's get the libraries\nFastai by Jeremy Howard https:\/\/www.fast.ai\/about\/","8f879ba9":"### Here's the ImageDataBunch object to put together all the train\/test\/validation data in order to have the necessary transformations to the images ###","b5729b10":"### 4 labels, 320 images for training, 80 images for validation ###"}}