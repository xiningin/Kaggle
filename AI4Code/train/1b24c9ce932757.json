{"cell_type":{"87fb95e7":"code","1d44f5af":"code","cabe5100":"code","150f6bb6":"code","656765e9":"code","26a1a381":"code","218c175c":"code","db33d69e":"code","c6cb2814":"code","8ba6c8a3":"code","a2230fb2":"code","b6e6d806":"code","45d6d18f":"code","c8bfb314":"markdown","50e767ff":"markdown","154298a7":"markdown","fb698038":"markdown","68a10ce9":"markdown","b3f0c98c":"markdown","dccd2359":"markdown","291ff5e4":"markdown","16aba215":"markdown","d8314c9a":"markdown"},"source":{"87fb95e7":"from sklearn.datasets import fetch_california_housing\nimport random\nimport numpy as np\nimport pandas as pd\n\n\n# Verisetini dahil edelim\n\ndataset = fetch_california_housing()\ntrain, target = pd.DataFrame(dataset.data), pd.DataFrame(dataset.target)\ntrain.columns = ['0','1','2','3','4','5','6','7']\ntrain.insert(loc=len(train.columns), column='target', value=target)","1d44f5af":"#Verisetinin ilk s\u00fctununun %40'\u0131n\u0131 bo\u015f veriler ile doldural\u0131m \ncolumn = train['0']\nmissing_pct = int(column.size * 0.4)\ni = [random.choice(range(column.shape[0])) for _ in range(missing_pct)]\ncolumn[i] = np.NaN\ntrain","cabe5100":"#Sci-kit Learn k\u00fct\u00fcphanesinden SimpleImputer yard\u0131m\u0131yla eksik verileri ortalamalar\u0131 ile doldural\u0131m.\nfrom sklearn.impute import SimpleImputer\nimp_mean = SimpleImputer( strategy='mean') # Median atama i\u00e7in \"median\" \u015feklinde strategy parametresini de\u011fi\u015ftiriniz\nimp_mean.fit(train)\nimputed_train_df = pd.DataFrame(imp_mean.transform(train))\nimputed_train_df","150f6bb6":"# Verisetinin ilk s\u00fctununun %40'\u0131n\u0131 bo\u015f veriler ile doldural\u0131m \ncolumn = train['0']\nmissing_pct = int(column.size * 0.4)\ni = [random.choice(range(column.shape[0])) for _ in range(missing_pct)]\ncolumn[i] = np.NaN\ntrain","656765e9":"from sklearn.impute import SimpleImputer\nimp_mean = SimpleImputer( strategy='most_frequent')\nimp_mean.fit(train)\nimputed_train_df = pd.DataFrame(imp_mean.transform(train))\nimputed_train_df","26a1a381":"# Verisetinin ilk s\u00fctununun %40'\u0131n\u0131 bo\u015f veriler ile doldural\u0131m \ncolumn = train['0']\nmissing_pct = int(column.size * 0.4)\ni = [random.choice(range(column.shape[0])) for _ in range(missing_pct)]\ncolumn[i] = np.NaN\ntrain","218c175c":"!pip install impyute","db33d69e":"%time\nfrom impyute.imputation.cs import fast_knn\n\nimputed_training=pd.DataFrame(fast_knn(train.values, k=30))\nimputed_training","c6cb2814":"# Verisetinin ilk s\u00fctununun %40'\u0131n\u0131 bo\u015f veriler ile doldural\u0131m \ncolumn = train['0']\nmissing_pct = int(column.size * 0.4)\ni = [random.choice(range(column.shape[0])) for _ in range(missing_pct)]\ncolumn[i] = np.NaN\ntrain","8ba6c8a3":"%time\nfrom impyute.imputation.cs import mice\n\nimputed_training=pd.DataFrame(mice(train.values))\nimputed_training","a2230fb2":"# Verisetinin ilk s\u00fctununun %40'\u0131n\u0131 bo\u015f veriler ile doldural\u0131m \ncolumn = train['0']\nmissing_pct = int(column.size * 0.4)\ni = [random.choice(range(column.shape[0])) for _ in range(missing_pct)]\ncolumn[i] = np.NaN\ntrain","b6e6d806":"!pip install datawig","45d6d18f":"%time\nimport datawig\n\ndf_train, df_test = datawig.utils.random_split(train)\n\n#Initialize a SimpleImputer model\nimputer = datawig.SimpleImputer(\n    input_columns=['1','2','3','4','5','6','7', 'target'], # s\u00fctun bilgilerini veriyoruz\n    output_column= '0', # atama yapaca\u011f\u0131m\u0131z s\u00fctunu g\u00f6steriyoruz\n    output_path = 'imputer_model' # metrikleri ve \u00e7\u0131kt\u0131 verisini depoluyoruz\n    )\n\n# fit i\u015flemini ger\u00e7ekle\u015ftiriyoruz\nimputer.fit(train_df=df_train, num_epochs=50)\n\n# Eksik de\u011ferleri at\u0131yor ve orijinal de\u011ferlere e\u015fitliyoruz\nimputed = imputer.predict(df_test)\npd.DataFrame(imputed)","c8bfb314":"# Yol 4 - En s\u0131k kullan\u0131lan de\u011fer ile doldurmak.\n\nKategorik verilerle de \u00e7al\u0131\u015fan bu y\u00f6ntem eksik de\u011feri her kolonda ki en \u00e7ok kullan\u0131lan de\u011fer ile doldurur.\n\nArt\u0131lar\u0131:\n\n * Kategorik verilerle iyi \u00e7al\u0131\u015f\u0131r.\n\nEksileri:\n\n * Sadece s\u00fctun boyutunda \u00e7al\u0131\u015f\u0131r ve di\u011fer \u00f6zelliklerle aras\u0131nda korelasyon kurmaz. \n * Veride ki sapmay\u0131 artt\u0131rabilir.","50e767ff":"# Yol 5 - K-NN kullanarak doldurmak.\n\nK-NN algoritmas\u0131 basit s\u0131n\u0131fland\u0131rma konular\u0131nda kullan\u0131lan bir algoritmad\u0131r ve \u00f6z\u00fcnde \"\u00f6zellik benzerli\u011fi\" bulmak vard\u0131r. Yani bu algoritma di\u011fer de\u011fi\u015fkenler aras\u0131nda da ba\u011flant\u0131 kurarak en benzerini bulur ve onun atamas\u0131n\u0131 yapar. \n\nArt\u0131lar\u0131:\n * Ortalama, median ve en s\u0131k kullan\u0131lan de\u011feri atamaktan daha iyi sonu\u00e7lar verebilir. \n\nEksileri: \n * K-NN \u00e7al\u0131\u015fma mant\u0131\u011f\u0131 t\u00fcm veriyi haf\u0131zada tutmaya dayand\u0131\u011f\u0131 i\u00e7in i\u015f g\u00fcc\u00fc artar.\n * K-NN ayk\u0131r\u0131 g\u00f6zlemlere \u00e7ok duyarl\u0131d\u0131r.","154298a7":"# Yol 2 - Hi\u00e7 bir \u015fey yapma. \n\nEn kolay y\u00f6ntem bu, eksik veriyle u\u011fra\u015fma i\u015fini algoritmaya b\u0131rakmak. Baz\u0131 algoritmalar eksik veriyi kendi i\u00e7erisinde en iyi atamay\u0131 bulacak \u015fekilde tasarlanm\u0131\u015ft\u0131r ve eksik veriyi kendisi giderir. ","fb698038":"# Ekzik G\u00f6zlemler Hakk\u0131nda\n\nGer\u00e7ek hayatta kar\u015f\u0131m\u0131za \u00e7\u0131kan veri setlerinin i\u00e7erisinde bolca eksik veri bulunmakta. Bu eksik veriler verisetleri i\u00e7erisinde genellikle \"NaN\" value, bo\u015f de\u011fer veya ba\u015fka bo\u015fluk doldurucularla (-,?) kar\u015f\u0131m\u0131za \u00e7\u0131kmakta. Bir makine \u00f6\u011frenmesi modelini \u00e7ok fazla eksik de\u011feri olan bir veri setiyle e\u011fitmek modelin kalitesini b\u00fcy\u00fck \u00f6l\u00e7\u00fcde etkiler. Scikit-learn algoritmalar\u0131 gibi baz\u0131 algoritmalar verilen verinin tamam\u0131n\u0131n n\u00fcmerik ve anlaml\u0131 de\u011ferlerle olu\u015ftu\u011funu varsayar. \n\nBu problemle ba\u015fa \u00e7\u0131kman\u0131n yollar\u0131ndan birisi eksik eksik de\u011feri olan g\u00f6zlemi ortadan kald\u0131rmakt\u0131r ancak buda \u00e7ok say\u0131da eksik g\u00f6zlem olan verisetleri i\u00e7in iyi sonu\u00e7lar vermez ve ger\u00e7ekten anlaml\u0131 olan verilerin kayb\u0131na yol a\u00e7abilir. Di\u011fer bir yol ise bu eksik verilere verisetinin g\u00f6zlemleri arac\u0131l\u0131\u011f\u0131yla atama yapmak olabilir. \n\nEksik verinin ay\u0131r\u0131c\u0131 \u00fc\u00e7 ana tipi vard\u0131r, bunlar: \n\n1. Tamamen rassal bir \u015fekilde kay\u0131p olan veri.\n2. Rassal bir \u015fekilde kay\u0131p olan veri.\n3. Rassal bir durum s\u00f6z konusu olmadan kay\u0131p olan veri.\n\nBiz bu kernel \u00fczerinde eksik veriden kurtulman\u0131n N \u00e7e\u015fit yolunu g\u00f6rece\u011fiz. ","68a10ce9":"# Yol 1 - Eksik de\u011ferler ta\u015f\u0131yan g\u00f6zlemleri sil.","b3f0c98c":"> strategy parametresi \"backfill\" ve \"ffill\" gibi parametrelerde almaktad\u0131r.","dccd2359":"# Kaynaklar\n\n* [6 Different Ways to Compensate for Missing Values In a Dataset (Data Imputation with examples)](https:\/\/towardsdatascience.com\/6-different-ways-to-compensate-for-missing-values-data-imputation-with-examples-6022d9ca0779)","291ff5e4":"# Yol 7 - Derin \u00f6\u011frenme kullanarak atama yapma (Datawig).\n\nBu y\u00f6ntem kategorik ve n\u00fcmerik olmayan \u00f6zelliklerle \u00e7ok iyi \u00e7al\u0131\u015f\u0131r. Datawig makine \u00f6\u011frenmesi modellerini derin \u00f6\u011frenme kullanarak veriseti i\u00e7erisinde ki eksik de\u011ferleri gidermek i\u00e7in kullan\u0131lan bir k\u00fct\u00fcphanedir ve CPU ve GPU ile kullan\u0131labilir.\n\nArt\u0131lar\u0131: \n * Di\u011fer y\u00f6ntemlere bakarak olduk\u00e7a do\u011fru sonu\u00e7lar \u00e7\u0131kart\u0131r.\n * Feature Encoder gibi kategorik veriyle ilgilenmeye yarayan fonksiyonlar\u0131 vard\u0131r.\n * CPU ve GPU destekler.\n\nEksileri: \n * Tek s\u00fctuna g\u00f6re atama yapar.\n * B\u00fcy\u00fck verisetleri ile \u00e7ok yava\u015f olabilir.\n * Hedef s\u00fctunla ilgili bilgi i\u00e7eren s\u00fctunlar\u0131 belirtmek gerekiyor.","16aba215":"# Yol 6 - Zincirleme denkler yard\u0131m\u0131yla \u00c7ok de\u011fi\u015fkenli atama yapmak.\n\nBu atama y\u00f6ntemi eksik de\u011feri birden fazla defa doldurarak \u00e7al\u0131\u015f\u0131r. \u00c7oklu atama y\u00f6ntemleri tekli atama y\u00f6ntemlerinden \u00e7ok daha iyi \u00e7al\u0131\u015f\u0131r, \u00e7ok esnektir ve farkl\u0131 t\u00fcrlerde ki farkl\u0131 de\u011fi\u015fkenlerle \u00e7al\u0131\u015fabilir. ","d8314c9a":"# Yol 3 - Medyan ve Ortalama ile Doldurmak.\n\nBu y\u00f6ntem eksik olmayan de\u011ferlerin ortalamas\u0131n\u0131 yada medyan\u0131n\u0131 alarak eksik olan de\u011ferleri doldurmaya yarar ve s\u00fctun bazl\u0131d\u0131r. Sadece n\u00fcmerik veri ile kullan\u0131labilir. \n\nArt\u0131lar\u0131:\n\n * Kolay ve h\u0131zl\u0131d\u0131r. \n * K\u00fc\u00e7\u00fck n\u00fcmerik verisetleriyle ile iyi \u00e7al\u0131\u015f\u0131r.\n\nEksileri:\n\n * Sadece s\u00fctun boyutunda \u00e7al\u0131\u015f\u0131r ve di\u011fer \u00f6zelliklerle aras\u0131nda korelasyon kurmaz. \n * Kategorik de\u011fi\u015fkenlerde iyi sonu\u00e7 vermez.\n * Yeterince g\u00fcvenilir de\u011fil. "}}