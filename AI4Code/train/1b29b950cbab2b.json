{"cell_type":{"a5f98621":"code","f4e5ccb6":"code","819043e9":"code","44bc3a92":"code","cb91ac29":"code","43f90078":"code","8ee01ebd":"code","87d92e34":"code","29738123":"code","9bb7730a":"code","1dc07f59":"code","0a49b58f":"code","47ad65b6":"code","fa41af91":"code","e88e98ef":"code","cc17ae55":"code","519c607b":"code","0990ff61":"markdown","bdc0b1cb":"markdown","87490e2a":"markdown","53f1846c":"markdown"},"source":{"a5f98621":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4e5ccb6":"## import the packages \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set()\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix","819043e9":"## load the data\ndata = pd.read_csv(\"..\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv\")","44bc3a92":"## check the data\ndata.head()","cb91ac29":"## check the info of the data\ndata.info()","43f90078":"## check for missing values\ndata.isnull().sum()","8ee01ebd":"## the columns\ndata.columns","87d92e34":"## plot the age feature \nsns.distplot(data[\"age\"])","29738123":"## plot the target variable\nsns.countplot(data[\"target\"])","9bb7730a":"## plot the heat map\ng = data.corr()\ndf_ = g.index\ng = sns.heatmap(data[df_].corr())","1dc07f59":"## select dependent and independent features \nX = data.drop(\"target\", axis=1)\ny = data[\"target\"]","0a49b58f":"## split the dataset into training and testing\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","47ad65b6":"## import the model\n## we'll be using the random forest classidier \n\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\n\nY_prediction = random_forest.predict(X_test)\n\nrandom_forest.score(X_train, y_train)","fa41af91":"print(classification_report(y_test, Y_prediction))","e88e98ef":"print(confusion_matrix(y_test, Y_prediction))","cc17ae55":"## plot the confusion matrix in a heat map\nsns.heatmap(confusion_matrix(y_test, Y_prediction), annot=True, cmap=\"mako\")","519c607b":"## feature importance\nfeat_importances = pd.Series(random_forest.feature_importances_, index=X.columns)\nfeat_importances.nlargest(13).plot(kind='barh')","0990ff61":"# Modelling and Predicting","bdc0b1cb":"### Suggestions and corrections are welcomed :)","87490e2a":"# introduction\n\n#### A heart attack occurs when an artery supplying your heart with blood and oxygen becomes blocked. Fatty deposits build up over time, forming plaques in your heart's arteries. If a plaque ruptures, a blood clot can form and block your arteries, causing a heart attack.","53f1846c":"# EDA"}}