{"cell_type":{"6cded0fe":"code","a8e1f8b4":"code","7381f48c":"code","5f036bd5":"code","42ad791b":"code","0126d5f5":"code","7c76d126":"code","3c6dd317":"code","b8d9da2a":"code","5ceea847":"code","f6ea2123":"code","f9ff45d0":"code","73f30ae0":"code","855f7670":"code","6a1571dc":"code","7dd2306d":"code","73c3df9d":"markdown","0061a672":"markdown","c6dde4f1":"markdown","f46c315e":"markdown","ee0f652f":"markdown","600c6f92":"markdown","2b8902cd":"markdown","aa1ea9ea":"markdown","e1de81b8":"markdown","438936a4":"markdown","3908d56c":"markdown","825a2929":"markdown"},"source":{"6cded0fe":"!pip install ..\/input\/python-datatable\/datatable-0.11.0-cp37-cp37m-manylinux2010_x86_64.whl","a8e1f8b4":"import riiideducation\nimport pandas as pd\nimport numpy as np\nimport datatable as dt","7381f48c":"# saving the dataset in .jay (binary format)\ndt.fread(\"..\/input\/riiid-test-answer-prediction\/train.csv\").to_jay(\"train.jay\")","5f036bd5":"%%time\n\n# reading the dataset from .jay format\nimport datatable as dt\n\ntrain = dt.fread(\"train.jay\")\n\nprint(train.shape)","42ad791b":"%%time\n\ntrain = train.to_pandas()[['content_id','prior_question_had_explanation','answered_correctly']]","0126d5f5":"train.head()","7c76d126":"train.shape","3c6dd317":"## Answer df is the train data with only info about answers i.e containing no lectures\nanswer_df = train.query('answered_correctly != -1')\ndel train","b8d9da2a":"answer_df.describe()","5ceea847":"answer_df[['content_id','answered_correctly']].groupby(['content_id']).agg('mean').plot()","f6ea2123":"answer_df[['prior_question_had_explanation','answered_correctly']].groupby(['prior_question_had_explanation']).agg('mean').plot(kind='bar')","f9ff45d0":"average_student_performance = answer_df.describe()['answered_correctly'][1]\naverage_student_performance","73f30ae0":"%%time\n## Calculate accuracy by content and explanation\nc_exp_acc = answer_df[['content_id','prior_question_had_explanation','answered_correctly']].groupby(['content_id','prior_question_had_explanation']).agg('mean').reset_index()\nc_exp_acc.columns = ['content_id','prior_question_had_explanation', 'content_explanation_acc']\nc_exp_acc.head()\ndel answer_df","855f7670":"# You can only call make_env() once, so don't lose it!\nenv = riiideducation.make_env()","6a1571dc":"iter_test = env.iter_test()","7dd2306d":"for (test_df, sample_prediction_df) in iter_test:\n\n    ## Add the calculated heuristics by content and question explanation\n    ## Then fill the missing values by the average question answer.\n    test_df = test_df.merge(c_exp_acc, how = 'left', on = ['content_id','prior_question_had_explanation'])\n    test_df['answered_correctly'] = test_df['content_explanation_acc'].fillna(average_student_performance)\n    \n\n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])","73c3df9d":"We don't need lectures data, we only need questions.","0061a672":"The percentage of students answering correctly changes from a question to another.\n\nWe even note that that are two questions that have really low scores with percentages of students answering correctly lower than  0.1!\n\nTO DO:\n\n   Look into those questions.","c6dde4f1":"The bar plot above confirms that, on average, students perform better when they have checked the explanation of their previous answer.","f46c315e":"## Presentation of the solution:\nThis is a simplistic solution that you can begin with, that gave good roc_auc results.\n\nThere are two assumptions for this heuristic model:\n\n1. Questions differ in difficulty. There are some questions easier than others.\n2. Checking the correctness of one's answer after responding to the question influences the performance on the next question.\n\n## Modeling of the solution:\n\nWe measure question difficulty by calculating the percentage of students who answered it correctly\n\nWe will do a **target-based Encoding** on the question difficulty and whether the student looked at the prior quesion explanation combined.\n\n\n\n","ee0f652f":"On average, 65% of questions are answered correctly.\n","600c6f92":"# **Load Data** (whole Dataset)","2b8902cd":"# Verification of the assumptions.","aa1ea9ea":"# Heuristic model","e1de81b8":"On average 65,72% of students perform well on questions.\n\nWe will use this statistic to fill in the missing question data on the dataset.","438936a4":"In this competition, the challenge is to create algorithms for *Knowledge Tracing* the modeling of student knowledge over time. \n\nThe goal is to accurately predict how students will perform on future interactions;  We will predict whether students are able to answer their next questions correctly.\n","3908d56c":"# Riiid! Answer Correctness Prediction\n## Track knowledge states of 1M+ students in the wild\n\n\n![](https:\/\/www.riiid.co\/assets\/opengraph.png)","825a2929":"I am only going to use content_id and prior_question_had_explanation as features for this heuristic model.\n\nI am loading the whole dataset using datatable. ( Many thanks to @Vopani, check his notebook [here](https:\/\/www.kaggle.com\/rohanrao\/riiid-with-blazing-fast-rid)\n\n\n**{**  The only issue with this, is that I would rather read only three columns from the beggining. Instead of all dumping the whole table and then extracting the three columns. I'm not sure datatable in Python allows this. Can anyone help me with this? (Pandas allows this with the argument usecols in readcsv method)    **}**"}}