{"cell_type":{"5f0e3471":"code","566c1f99":"code","4fac6b20":"code","9110d03e":"code","e5291db8":"code","ddc95a62":"code","5d353954":"code","91f54dd6":"code","9efc8587":"code","7122e418":"markdown"},"source":{"5f0e3471":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom plotly import __version__\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()","566c1f99":"df_region=pd.read_csv(\"..\/input\/tourists-by-region\/international-tourist-arrivals-by-world-region.csv\")\ndf_region.head()","4fac6b20":"df_region[\"No of tourist in million\"]=df_region[\" (arrivals)\"]\/1000000\ndf_region.rename(columns={\"Entity\":\"Region\"},inplace=True)\ndf_region.drop(columns=[\"Code\",\" (arrivals)\"],inplace=True)\ndf_region.set_index(\"Year\",inplace=True)\ndf_region.tail()","9110d03e":"colors_list = ['red','lightgreen','lightcoral','lightskyblue','yellow']\nexplode_list = [0.1,0.05,0,0,0.1]\ndf_region[df_region.index==2018]['No of tourist in million'].plot(kind='pie',\n                                                                 figsize=(10,6),autopct='%1.1f%%',pctdistance=1.11,\n                                                                 colors=colors_list,explode = explode_list,labels=None,\n                                                                 startangle=90,shadow=True)\nplt.title('Region-wise tourists distribution for Y2018 ',y=1.12)\nplt.legend(df_region[df_region.index==2018].Region,loc = 'upper left')\nplt.axis('equal')\nplt.show()","e5291db8":"fig,ax=plt.subplots(figsize=(4,2.5),dpi=144)\ncolor=plt.cm.Dark2(range(5))\ny=df_region[df_region.index==2018][\"Region\"]\nwidth=df_region[df_region.index==2018][\"No of tourist in million\"]\nax.barh(y=y,width=width,color=color)\nax.set_title(\"Region-wise tourists distribution for Y2018\")\nax.set_xlabel(\"tourist in million\")\n","ddc95a62":"def nice_axes(ax): #so that we don't have set grid,facecolor etc everytime.\n    ax.set_facecolor('.8')  # 0 to 1 ->black to white resp\n    ax.tick_params(labelsize=8, length=0)\n    ax.grid(True, axis='x', color='white')\n    ax.set_axisbelow(True)                  # make it false and see change \n    [spine.set_visible(False) for spine in ax.spines.values()]  # make it true and see change\n    \nnice_axes(ax)\nfig\n\n","5d353954":"years=list(df_region.index.unique())","91f54dd6":"from IPython.display import HTML\nfrom matplotlib.animation import FuncAnimation\n","9efc8587":"colors=plt.cm.Dark2(range(5))\ndef bar_chart(year):\n    ax.clear()\n    y=df_region[df_region.index==year][\"Region\"]\n    width=df_region[df_region.index==year][\"No of tourist in million\"]\n    ax.barh(y=y,width=width,color=color)\n\n    ax.set_title(year)\n    ax.set_xlabel(\"tourist in million\")\n    nice_axes(ax)\nfig, ax = plt.subplots(figsize=(10,6))\nanimator = FuncAnimation(fig, bar_chart, frames=years)\nHTML(animator.to_jshtml())\n    ","7122e418":"for more on bar-chart race see the link: https:\/\/www.dunderdata.com\/blog\/create-a-bar-chart-race-animation-in-python-with-matplotlib"}}