{"cell_type":{"20e9c9b1":"code","81c5ecbf":"code","0f8cad3d":"code","31d6b257":"code","d7f7571c":"code","6c31fe30":"code","547a11b8":"code","8c6a4ded":"code","c2eb5d85":"code","97a1ef4a":"code","1d668e74":"code","ceacc71c":"code","ddc3b09a":"code","b1a6143d":"markdown","a1a522b8":"markdown","c6766fab":"markdown","889e07ca":"markdown","4ac49a74":"markdown","3eda04c3":"markdown","55cda20c":"markdown","d2e3d313":"markdown","b9ab2846":"markdown","eb0b5486":"markdown","4c76022e":"markdown","d549c969":"markdown"},"source":{"20e9c9b1":"import numpy as np\nimport tensorflow.keras as tf","81c5ecbf":"train_inputs = np.load(\"\/kaggle\/input\/k\/adribricorts\/titanic-notebook-preprocessing\/Titanic_Train.npz\")[\"inputs\"].astype(np.float)\ntrain_targets = np.load(\"\/kaggle\/input\/k\/adribricorts\/titanic-notebook-preprocessing\/Titanic_Train.npz\")[\"targets\"].astype(np.int)\n\nvalidation = (np.load(\"\/kaggle\/input\/k\/adribricorts\/titanic-notebook-preprocessing\/Titanic_Validation.npz\")[\"inputs\"].astype(np.float),\n              np.load(\"\/kaggle\/input\/k\/adribricorts\/titanic-notebook-preprocessing\/Titanic_Validation.npz\")[\"targets\"].astype(np.int))\n\ntest = np.load(\"\/kaggle\/input\/k\/adribricorts\/titanic-notebook-preprocessing\/Titanic_Test.npz\")[\"inputs\"].astype(np.float)\nids = np.load(\"\/kaggle\/input\/k\/adribricorts\/titanic-notebook-preprocessing\/Titanic_Test.npz\")[\"passengerId\"].astype(np.int)","0f8cad3d":"input_size = 8\noutput_size = 1\n\ntopology = [50, 100, 200, 1]\nhidden_layers = len(topology)\n\nmodel = tf.models.Sequential()","31d6b257":"for i in range (hidden_layers):\n    \n    if i < (hidden_layers - 1):\n        \n        model.add(tf.layers.Dense(units = topology[i], activation = \"relu\"))\n        \n    if i == (hidden_layers - 1):\n        \n        model.add(tf.layers.Dense(units = topology[i], activation = \"sigmoid\"))","d7f7571c":"model.compile (optimizer = \"adam\", loss = \"binary_crossentropy\", metrics = [\"accuracy\"])","6c31fe30":"MAX_EPOCHS = 100\nBATCH_SIZE = 32\nEARLY_STOPPING = tf.callbacks.EarlyStopping (patience = 4)","547a11b8":"model.fit (\n           x = train_inputs, \n           y = train_targets, \n           validation_data = validation,\n           epochs = MAX_EPOCHS,\n           batch_size = BATCH_SIZE,\n           callbacks = [EARLY_STOPPING]\n          )","8c6a4ded":"predictions = model.predict (test)","c2eb5d85":"import pandas as pd","97a1ef4a":"rd_pred = []\n\nfor i in predictions:\n    \n    if i[0] >= 0.5:\n        \n        rd_pred.append(1)\n        \n    else:\n        rd_pred.append(0)","1d668e74":"new_ids = []\n\nfor i in ids:\n    \n    new_ids.append(i[0])","ceacc71c":"dic = {\"PassengerId\" : new_ids, \"Survived\" : rd_pred}\nresult = pd.DataFrame(dic)\nresult","ddc3b09a":"result.to_csv (\"Titanic_predictions.csv\", index = False)","b1a6143d":"### Hyperparameters","a1a522b8":"### Outline and first layer","c6766fab":"### Fitting ANN","889e07ca":"### Adding layers","4ac49a74":"## ANN","3eda04c3":"## Results","55cda20c":"# Titanic Notebook - Neural Net","d2e3d313":"## Export to .csv","b9ab2846":"## Importing data","eb0b5486":"### Compiling ANN","4c76022e":"## Libraries","d549c969":"## Prediction"}}