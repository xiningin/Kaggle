{"cell_type":{"f7daf755":"code","b4ac409a":"code","508a9a57":"code","722e0e99":"code","e6ef6700":"code","a3a4f088":"code","f6be04b6":"code","fb2c97bf":"code","155604a8":"code","5d406bfa":"code","9cfd27f6":"code","77c1e53f":"code","6f23bf46":"code","4d89f419":"code","aea79b61":"markdown","bdc4c881":"markdown","00959469":"markdown","a7c87e44":"markdown","15a68ee2":"markdown","509c8e06":"markdown","6f003ee1":"markdown","9a502f5d":"markdown","9b05f4d1":"markdown"},"source":{"f7daf755":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b4ac409a":"# Read data from file\n\ndata=pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","508a9a57":"# Seeing the first 5 of the data\ndata.head()","722e0e99":"# Getting information about data\ndata.info()","e6ef6700":"# Find out how many columns are in the data\ndata.columns","a3a4f088":"# Data correlation map\n# Figsize: width and height values of the table to be formed\n# Heatmap:table to be formed\n# Cbar_kws: deciding whether the table is horizontal or vertical\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax,cbar_kws={\"orientation\": \"horizontal\"})\nplt.show()\n","f6be04b6":"data.Age.plot(kind = 'line', color = 'g',label = 'Age',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.Special.plot(color = 'b',label = 'Special',linewidth=1, alpha = 0.5,grid = True,linestyle = '-')\ndata.Overall.plot(color = 'r',label = 'Overall',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\n\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","fb2c97bf":"# Scatter Plot \n# Kind : The type of chart that will occur\n# x = Composure, y = Marking\ndata.plot(kind='scatter', x='Composure', y='Marking',alpha = 0.3,color = 'blue')\nplt.xlabel('Composure')              # label = name of label\nplt.ylabel('Marking')\nplt.title('Composure Marking Scatter Plot') ","155604a8":"# Histogram\n# bins = number of bar in figure\ndata.Age.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","5d406bfa":"dictionarys={'ISTANBUL':'Ey\u00fcp','KASTAMONU':'Cide','IZMIR':'Bornova','ANTALYA':'Kemer'}\n\nprint(dictionarys.keys())\nprint(dictionarys.values())\n\n# Nested Disitonarys \n\nmyfamily = {\n  \"child1\" : {\n    \"name\" : \"Emil\",\n    \"year\" : 2004\n  },\n  \"child2\" : {\n    \"name\" : \"Tobias\",\n    \"year\" : 2007\n  },\n  \"child3\" : {\n    \"name\" : \"Linus\",\n    \"year\" : 2011\n  }\n}\n\nprint(myfamily)","9cfd27f6":"# update values\ndictionarys['ISTANBUL']='Sisli'\nprint(dictionarys)\n\n# add values\ndictionarys['ANKARA']='Kecioren'\nprint(dictionarys)\n\n#delete values\ndel dictionarys ['IZMIR']\nprint(dictionarys)\n\n#check values\nprint('ANKARA' in dictionarys )\n\n# clear data\ndictionarys.clear()\nprint(dictionarys)\n","77c1e53f":"\nindex=0\nwhile index != 7 :\n    \n    print('index' , index)\n    index=index+1\n   \n","6f23bf46":"listdata=[1,2,3,4,5,6,7]\n\nfor each in listdata :\n    print('index',each)\n    \n    # Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(listdata):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionarys={'ISTANBUL':'Ey\u00fcp','KASTAMONU':'Cide','IZMIR':'Bornova','ANTALYA':'Kemer'}\nfor key,values in dictionarys.items():\n    print(key,\" : \",values)\nprint('')","4d89f419":"''","aea79b61":"Histogram plot","bdc4c881":"Lets practice some other properties update, add, check, remove key, remove all entries and remove dicrionary.","00959469":"Scatter plot\n","a7c87e44":"WHILE  LOOPS\n","15a68ee2":"WHILE and FOR LOOPS\nWe will learn most basic while and for loops","509c8e06":"Line Plots\n","6f003ee1":"**MATPLOTL\u0130B**","9a502f5d":"**DICTIONARY**","9b05f4d1":"**For Loops**\n"}}