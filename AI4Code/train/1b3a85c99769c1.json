{"cell_type":{"a3d6addf":"code","77d02377":"code","58e9f75d":"code","0a17c085":"code","751cf283":"code","4948230b":"code","aa73c1ca":"code","d2cd2dfa":"code","9c1ef39a":"code","df138b8b":"code","0f0f98a3":"code","a36f8100":"code","3677ee42":"code","c2cdd9b2":"code","b9740f6a":"code","21909705":"code","6eeb2005":"code","72b4f854":"code","11e9c85d":"code","3dea6180":"code","e659246c":"code","be190606":"code","a6554062":"code","778b6a07":"markdown","09677a74":"markdown","307b9df3":"markdown","a343ca16":"markdown","336e12c6":"markdown","11abd13c":"markdown","f1118a1e":"markdown"},"source":{"a3d6addf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport os \n\n!pip install ZipFile       \nfrom zipfile import ZipFile \nos.listdir('..\/input\/sberbank-russian-housing-market')","77d02377":"train_df = pd.read_csv(ZipFile(\"..\/input\/sberbank-russian-housing-market\/train.csv.zip\").open('train.csv'), parse_dates=['timestamp'])\ntest_df = pd.read_csv(ZipFile(\"..\/input\/sberbank-russian-housing-market\/test.csv.zip\").open('test.csv'), parse_dates=['timestamp'])\nmacro_df = pd.read_csv(ZipFile(\"..\/input\/sberbank-russian-housing-market\/macro.csv.zip\").open('macro.csv'), parse_dates=['timestamp'])","58e9f75d":"df_train=train_df.copy()","0a17c085":"df_train['price_doc_log'] = np.log1p(df_train['price_doc'])","751cf283":"df_train.head()","4948230b":"type(df_train)\ndf_train.shape","aa73c1ca":"df_train.info()","d2cd2dfa":"df_train.describe().T","9c1ef39a":"columns_with_missing_values = df_train.columns[df_train.isnull().any()]\ndf_train[columns_with_missing_values].isnull().sum()","df138b8b":"# To hold variable names\nlabels = [] \n\n# To hold the count of missing values for each variable \nvaluecount = [] \n\n# To hold the percentage of missing values for each variable\npercentcount = [] \n\nfor col in columns_with_missing_values:\n    labels.append(col)\n    valuecount.append(df_train[col].isnull().sum())\n    # df_train.shape[0] will give the total row count\n    percentcount.append(df_train[col].isnull().sum()\/df_train.shape[0])\n","0f0f98a3":"ind = np.arange(len(labels))\n\nfig, (ax1, ax2) = plt.subplots(2,1,figsize=(18,36))\n\nrects = ax1.barh(ind, np.array(valuecount), color='green')\nax1.set_yticks(ind)\nax1.set_yticklabels(labels, rotation='horizontal')\nax1.set_xlabel(\"Count of missing values\")\nax1.set_title(\"Variables with missing values\")\n\nrects = ax2.barh(ind, np.array(percentcount), color='pink')\nax2.set_yticks(ind)\nax2.set_yticklabels(labels, rotation='horizontal')\nax2.set_xlabel(\"Percentage of missing values\")\nax2.set_title(\"Variables with missing values\")","a36f8100":"\nplt.figure(figsize=(18, 36))\n\n# cubehelix palette is a part of seaborn that produces a colormap\ncmap = sns.cubehelix_palette(light=1, as_cmap=True, reverse=True)\nsns.heatmap(df_train.isnull(), cmap=cmap)","3677ee42":"# Histogram of response(price_doc) variable:\nf, ax = plt.subplots(figsize=(7,5))\nsns.despine(f)\nsns.histplot(df_train['price_doc'], bins = 50, kde=True )\nplt.show()","c2cdd9b2":"# Scatterplot of response(price_doc) variable:\nplt.scatter(range(df_train.shape[0]), np.sort(df_train.price_doc.values), color=\"red\")\nplt.xlabel('Index', fontsize=20)\nplt.ylabel('Price', fontsize=20)\nplt.show()","b9740f6a":"# Histogram of log of response variable:\nf, ax = plt.subplots(figsize=(7,5))\nsns.despine(f)\nsns.histplot(df_train['price_doc_log'], bins = 50, kde=True )\nplt.show()","21909705":"# Scatterplot of log of response variable:\nplt.scatter(range(df_train.shape[0]), np.sort(df_train.price_doc_log.values), color=\"red\")\nplt.xlabel('Index', fontsize=20)\nplt.ylabel('Price', fontsize=20)\nplt.show()","6eeb2005":"train_monthgrp = df_train.groupby('timestamp')['price_doc'].aggregate(np.median).reset_index()\nplt.figure(figsize=(24, 16))\nsns.lineplot(x=\"timestamp\",y=\"price_doc\", data=train_monthgrp)\nplt.ylabel('Median Price', fontsize=18)\nplt.xlabel('Year Month', fontsize=18)\nplt.xticks(rotation='vertical')\nplt.show()","72b4f854":"# Price vs. Sq-Meter:\nsns.regplot(x = 'full_sq', y = 'price_doc', data = df_train[df_train['full_sq'] < 1000], fit_reg = False, color=\"red\")\nplt.show()","11e9c85d":"# Scatterplot vs. Number of Rooms:\nsns.regplot(x = 'num_room', y = 'price_doc', data = df_train, fit_reg = False, color=\"red\")\nplt.show()","3dea6180":"plt.figure(figsize=(12,8))\nsns.countplot(x='floor', data=df_train)\nplt.ylabel('Count', fontsize=12)\nplt.xlabel('floor number', fontsize=12)\nplt.xticks(rotation='vertical')\nplt.show()","e659246c":"temp_df = df_train.groupby(['floor'])['price_doc'].aggregate(np.median).reset_index()\nplt.figure(figsize=(12,10))\nsns.pointplot(x='floor', y='price_doc', data=temp_df)\nplt.ylabel('Median Price', fontsize=12)\nplt.xlabel('Floor number', fontsize=12)\nplt.xticks(rotation='vertical')\nplt.show()","be190606":"plt.figure(figsize=(12,8))\nsns.countplot(x=\"max_floor\", data=df_train)\nplt.ylabel('Count', fontsize=12)\nplt.xlabel('Max floor number', fontsize=12)\nplt.xticks(rotation='vertical')\nplt.show()","a6554062":"temp_df = df_train.groupby(['max_floor'])['price_doc'].aggregate(np.median).reset_index()\nplt.figure(figsize=(12,8))\nsns.pointplot(x=\"max_floor\", y=\"price_doc\", data=temp_df)\nplt.ylabel('Median Price', fontsize=12)\nplt.xlabel('Max Floor number', fontsize=12)\nplt.xticks(rotation='vertical')\nplt.show()","778b6a07":"Distribution (as expected) of housing prices is quite skewed. Let's try logging and drawing the plots again.","09677a74":"And let's plot the response variable against some of the predictors.","307b9df3":"Let's see total number of floors in the plot. ","a343ca16":"The response variable (price_doc) represents the housing prices we're trying to predict. \nLet's start by drawing some graphs to visualize the distribution:","336e12c6":"here the count plot of floor variable.","11abd13c":"The distribution is right skewed. There are some  drops in between (5 to 6, 9 to 10, 12 to 13, 17 to 18). Now let us see how the price changes with respect to floors.\n","f1118a1e":"Firstly, a sudden increace in the 26th floor. After that, the most sudden increase in the house price is also observed at floor 33."}}