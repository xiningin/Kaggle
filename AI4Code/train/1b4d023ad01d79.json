{"cell_type":{"816873c8":"code","d2f038d1":"code","8c596f8d":"code","f31dca44":"code","ededd6dd":"code","61485d1f":"code","92d9f38b":"code","bce05027":"code","86606215":"markdown"},"source":{"816873c8":"import pandas as pd\nimport numpy as np\nimport lightgbm as lgb","d2f038d1":"tr_df = pd.read_csv(\"..\/input\/train.csv\") \nts_df = pd.read_csv(\"..\/input\/test.csv\")\n\ntr_df.head()","8c596f8d":"tr = tr_df.drop(['id','target'], axis=1)\nts = ts_df.drop('id', axis=1)\nt = tr_df[\"target\"].values","f31dca44":"prd = ts_df[['id']].copy()\nprd['target'] = 0","ededd6dd":"pm = {'objective': 'binary'}","61485d1f":"%%time\ncn = 'wheezy-copper-turtle-magic'\nfor i in range(512):    \n    x = (tr[cn]==i)\n    j = (ts[cn]==i)    \n    l_tr = lgb.Dataset(tr[x].values, label=t[x])    \n    l_h = lgb.cv(pm,l_tr,metrics=['auc'])                     \n    bst = np.array(l_h['auc-mean']).argmax()\n    ml = lgb.train(pm, l_tr, num_boost_round=bst)\n    prd.loc[j,'target'] = ml.predict(ts[j].values,num_iteration=ml.best_iteration)","92d9f38b":"prd.head()","bce05027":"prd.to_csv(\"submission.csv\", index=False)","86606215":"Easy start kernel"}}