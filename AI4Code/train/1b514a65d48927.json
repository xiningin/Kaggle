{"cell_type":{"100b6565":"code","02052b40":"code","c761bbc5":"code","f61db8ce":"code","6c47068c":"code","101d11ed":"code","078d2853":"code","6ada9b8e":"code","dd7fd685":"code","882e18b3":"code","61fc45a2":"code","62b0e037":"code","0bf836df":"code","1cb5723b":"code","deabd572":"code","dc5fc76b":"code","68feb895":"code","ee31b12b":"code","32478368":"code","5cd173f7":"code","980e3d01":"code","92fce5cd":"code","0882c37d":"code","ea370db9":"code","65ec633e":"code","da05ad1c":"code","687d1d49":"code","acc84538":"code","6d98b1ac":"markdown","88f46977":"markdown"},"source":{"100b6565":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","02052b40":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/stedy\/Machine-Learning-with-R-datasets\/master\/insurance.csv')\ndf","c761bbc5":"df.isnull().sum()","f61db8ce":"df.sex.replace({'male':1,'female':0},inplace=True)\ndf.smoker.replace({'yes':1,'no':0},inplace=True)","6c47068c":"df.region.unique()","101d11ed":"df.region.replace({'southeast':1,'southwest':2,'northwest':3,'northeast':4},inplace=True)","078d2853":"df","6ada9b8e":"y = df.charges\nX = df.drop(['charges'],axis = 1)","dd7fd685":"from sklearn.model_selection import train_test_split\nX_train ,X_test, y_train,y_test = train_test_split(X,y)","882e18b3":"from sklearn.preprocessing import StandardScaler \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.pipeline import make_pipeline\nfrom xgboost import XGBRegressor","61fc45a2":"score = {}\npipe = make_pipeline(StandardScaler(),LinearRegression())\npipe.fit(X_train,y_train)\nscore['Linear_regression'] = pipe.score(X_test,y_test)","62b0e037":"pipe = make_pipeline(StandardScaler(),RandomForestRegressor())\npipe.fit(X_train,y_train)\nscore['random forest'] = pipe.score(X_test,y_test)","0bf836df":"pipe = make_pipeline(StandardScaler(),XGBRegressor(max_depth=5,learning_rate = 0.05,n_jobs=5))\npipe.fit(X_train,y_train)\nscore['XGB'] = pipe.score(X_test,y_test)","1cb5723b":"score","deabd572":"predict = pipe.predict(X_test)","dc5fc76b":"from sklearn.metrics import mean_absolute_error\nmae = mean_absolute_error(predict,y_test)\nmae","68feb895":"import tensorflow as tf","ee31b12b":"Model = tf.keras.Sequential([\n    tf.keras.layers.Dense(100),\n    tf.keras.layers.Dense(10),\n    tf.keras.layers.Dense(1)\n]\n)\nModel.compile(\n    loss = tf.keras.losses.mae,\n    optimizer = tf.keras.optimizers.Adam(lr = 0.01),\n    metrics = ['mae']\n)\nModel.fit(X_train,y_train,epochs= 200)","32478368":"from tensorflow.keras.utils import plot_model\nplot_model(model_1,show_shapes=True)","5cd173f7":"ev = Model.evaluate(X_test,y_test)","980e3d01":"tf.random.set_seed(42)\nmodel_1 = tf.keras.Sequential([\n                               tf.keras.layers.Dense(64,activation='relu'),\n                               tf.keras.layers.Dense(32,activation='relu'),\n                               tf.keras.layers.Dense(16,activation='relu'),\n                               tf.keras.layers.Dense(1,activation='relu'),\n                               \n                        \n])\nmodel_1.compile(loss=tf.keras.losses.mae,\n                optimizer = tf.keras.optimizers.Adam(lr = 0.001),\n                metrics = ['mae']   \n)\nmodel_1.fit(X_train,y_train,batch_size=32,\n            epochs = 300\n            )\n","92fce5cd":"ev_1 = model_1.evaluate(X_test,y_test)\nev_1","0882c37d":"tf.random.set_seed(42)\nmodel_2 = tf.keras.Sequential([\n                               tf.keras.layers.Dense(128,activation='relu'),\n                               tf.keras.layers.Dense(64,activation='relu'),\n                               tf.keras.layers.Dense(32,activation='relu'),\n                               tf.keras.layers.Dense(16,activation='relu'),\n                               tf.keras.layers.Dense(1,activation='relu'),\n                               \n                        \n])\nmodel_2.compile(loss=tf.keras.losses.mae,\n                optimizer = tf.keras.optimizers.Adam(lr = 0.001),\n                metrics = ['mae']   \n)\nmodel_2.fit(X_train,y_train,batch_size=32,\n            epochs = 500\n            )\n","ea370db9":"ev_2 = model_2.evaluate(X_test,y_test)","65ec633e":"model_3 = tf.keras.Sequential([\n  tf.keras.layers.Dense(128, activation='relu'),                             \n  tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dense(64, activation='relu'),\n  tf.keras.layers.Dense(32, activation='relu'),\n  tf.keras.layers.Dense(16, activation='relu'),\n  tf.keras.layers.Dense(1)  \n])\n\nmodel_3.compile(loss=tf.keras.losses.mae,\n                          optimizer=tf.keras.optimizers.Adam(lr=0.01),\n                          metrics=[\"mae\"])\n\nmodel_3.fit(X_train,y_train,\n                        batch_size=32,\n                        epochs=1000)","da05ad1c":"ev_3 = model_3.evaluate(X_test,y_test)","687d1d49":"model_4 = tf.keras.Sequential([\n  tf.keras.layers.Dense(128, activation='relu'),                             \n  tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dense(64, activation='relu'),\n  tf.keras.layers.Dense(32, activation='relu'),\n  tf.keras.layers.Dense(16, activation='relu'),\n  tf.keras.layers.Dense(1)  \n])\n\nmodel_4.compile(loss=tf.keras.losses.mae,\n                          optimizer=tf.keras.optimizers.Adam(lr=0.01),\n                          metrics=[\"mae\"])\n\nmodel_4.fit(X_train,y_train,\n                        batch_size=32,\n                        epochs=1500)","acc84538":"ev_4 = model_4.evaluate(X_test,y_test)","6d98b1ac":"# Now we'll try to build diffrent models with diffrent hidden layers","88f46977":"# So adding another layer didn't help much\nlet's try to increse the number of epochs and decrease the number of hidden layers"}}