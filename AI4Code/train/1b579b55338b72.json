{"cell_type":{"6c04c03b":"code","477c122a":"code","deab2010":"code","e28655bd":"code","0fd34e62":"code","5a6b502c":"code","2c02014a":"code","3cd0cbf1":"code","b619f41b":"code","f13b97d9":"code","42b67641":"code","ce39bda0":"code","5d8a2107":"code","e68ab31c":"code","4b8dfb4f":"code","1485fe3e":"code","01e54183":"code","599aac94":"code","c984fc4d":"code","ce0ae7e4":"code","7acc5e9c":"code","345b8253":"code","d4504a22":"code","02763990":"markdown","d63f4cee":"markdown","94a38e0a":"markdown","6aece664":"markdown","d0f5e394":"markdown","d53c9951":"markdown","a3535c50":"markdown","8278c232":"markdown","fd6dd534":"markdown","85eef37f":"markdown","dbdb5a14":"markdown","f0d9d415":"markdown"},"source":{"6c04c03b":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier","477c122a":"df = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","deab2010":"df","e28655bd":"df.isna().sum()","0fd34e62":"df.describe()","5a6b502c":"for i in range (0,df.shape[1]-1):\n    sns.jointplot(x = df.output,y = df.iloc[:,i])","2c02014a":"for i in range (0,df.shape[1]):\n    df.iloc[:,i].plot(kind = 'density')\n    plt.show()","3cd0cbf1":"pd.options.mode.chained_assignment = None  # default='warn'\nfor i in range (0,df.shape[1]):\n    df.iloc[:,i][df.iloc[:,i] > np.percentile(df.iloc[:,i],[99])[0] ] = df.iloc[:,i].median()\n","b619f41b":"df.corr()","f13b97d9":"sns.heatmap(df.corr())","42b67641":"#Converting age in different grops\nfor i in range(0,df.shape[0]):\n    if 29 <= df.iloc[i,0] < 45 :\n        df.iloc[i,0] = 0\n    elif 45 <= df.iloc[i,0] < 60 :\n        df.iloc[i,0] = 1\n    elif 60 <= df.iloc[i,0] < 78 :\n        df.iloc[i,0] = 2","ce39bda0":"x = df.drop(['output'],axis = 1)","5d8a2107":"y = df.output","e68ab31c":"#ss = StandardScaler()\n#x = ss.fit_transform(x)","4b8dfb4f":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","1485fe3e":"rfc = RandomForestClassifier(n_estimators=100,min_samples_leaf=7,random_state=10)\nrfc.fit(x_train,y_train)\n(accuracy_score(y_test,rfc.predict(x_test)))","01e54183":"aa = []\nfor i in np.arange(0,100):\n    rfc = RandomForestClassifier(n_estimators=100,min_samples_leaf=7,random_state=i)\n    rfc.fit(x_train,y_train)\n    aa.append(accuracy_score(y_test,rfc.predict(x_test)))","599aac94":"min(aa),np.mean(aa),max(aa)","c984fc4d":"plt.figure(figsize=(15, 5))\nplt.plot(np.arange(0,100),aa)\nplt.show()","ce0ae7e4":"xgb = XGBClassifier(\n            max_depth= 4,\n            alpha= 10,\n            learning_rate= 0.2,\n            n_estimators=100)\nxgb.fit(x_train,y_train)\naccuracy_score(y_test,xgb.predict(x_test))\n#I am not going to use variable random_state for Xgboost because a single fitting take more time as compare to lightgbm.","7acc5e9c":"h = []\nfor i in np.arange(0,100):\n    x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=i)\n    lgb = LGBMClassifier(max_depth= 4,reg_alpha=10,learning_rate= 0.01)\n    lgb.fit(x_train,y_train)\n    acc = accuracy_score(y_test,lgb.predict(x_test))\n    h.append(acc)","345b8253":"max(h)","d4504a22":"plt.figure(figsize=(15, 6))\nplt.plot(np.arange(0,100),h)\nplt.annotate(\"Max\",(h.index(max(h)),max(h)),xytext=(15, 0.93),arrowprops=dict(arrowstyle='->', color='red',  linewidth=3, mutation_scale=50))\nplt.show()","02763990":"<h1 id=\"heading\">\n<span style=\"font-size:22px;\">Checking for NaN value.<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading\" target ='_self'><\/a>\n<\/h1>","d63f4cee":"<span style=\"font-size:18px;color:crimson;\">***Here you can see the variation of result just changing the random_state.***","94a38e0a":"<h1 id=\"heading7\">\n<span style=\"font-size:22px;\">XGBoost<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading7\" target ='_self'><\/a>\n<\/h1>","6aece664":"<h1 id=\"heading5\">\n<span style=\"font-size:18px;color:green;\">Most of see random_state as a random number just for getting same results if rerun the same model but actually setting a good random_state can increase your model's accuracy. There isn't any trick to pick a random_state we just have to iterate it and hope for getting better results.<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading5\" target ='Note'><\/a>\n<\/h1>","d0f5e394":"<h1 id=\"heading2\">\n<span style=\"font-size:22px;\">Outliers Treatment.<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading2\" target ='_self'><\/a>\n<\/h1>","d53c9951":"<h1 id=\"heading3\">\n<span style=\"font-size:22px;\">Loading Data<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading3\" target ='_self'><\/a>\n<\/h1>","a3535c50":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#2BAE66FF;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;color:#FCF6F5FF;\">This is the maximum accuracy that I have got. If you find this notebook helpful don't forget to upvote.<\/p>","8278c232":"<span style=\"font-size:18px;color:crimson;\">***Skewness***","fd6dd534":"<span style=\"font-size:18px;color:crimson;\">***Correlation***","85eef37f":"<h1 id=\"heading6\">\n<span style=\"font-size:22px;\">Random Forest with variable random_state.<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading6\" target ='_self'><\/a>\n<\/h1>","dbdb5a14":"<h1 id=\"heading4\">\n<span style=\"font-size:22px;\">Random Forest.<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading4\" target ='_self'><\/a>\n<\/h1>","f0d9d415":"<h1 id=\"heading8\">\n<span style=\"font-size:22px;\">LightGBM with variable random_state.<\/span>\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/alampalsingh\/notebook004d896e8c#heading8\" target ='_self'><\/a>\n<\/h1>"}}