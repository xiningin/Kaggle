{"cell_type":{"84e91fe0":"code","d1702847":"code","b9b23b20":"code","f188a0f7":"code","e23e8cc9":"code","c4334b9f":"code","fadd784d":"code","bb5ddf1f":"code","ae519f06":"markdown"},"source":{"84e91fe0":"import numpy as np\nimport matplotlib.pyplot as pl\nimport pandas as pd\n\ndataset = pd.read_csv('..\/input\/churn-predictions-personal\/Churn_Predictions.csv')\nx=dataset.iloc[: , 3:13].values\ny=dataset.iloc[: ,-1].values\n\nprint(x)","d1702847":"from sklearn.preprocessing import LabelEncoder , OneHotEncoder\nx[:,1]=LabelEncoder().fit_transform(x[:,1])\nx[:,2]=LabelEncoder().fit_transform(x[:,2])\n\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nx = np.array(ct.fit_transform(x))\n\n\n\n\n","b9b23b20":"\n#splitting the dataset\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)\n\n","f188a0f7":"#feature_scaling\nfrom sklearn.preprocessing import StandardScaler as sc\nx_train=sc().fit_transform(x_train)\nx_test=sc().fit_transform(x_test)\n\n","e23e8cc9":"\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nclassfier= Sequential()\nclassfier.add(Dense(units=6,activation='relu'))\nclassfier.add(Dense(units=6,activation='relu'))\nclassfier.add(Dense(units=1,activation='sigmoid'))\nclassfier.compile(optimizer='adam', loss='binary_crossentropy',metrics=['accuracy'])\n","c4334b9f":"\nclassfier.fit(x_train,y_train,batch_size=10,epochs=10)\n","fadd784d":"y_pred = classfier.predict(x_test)\ny_pred = (y_pred > 0.5)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))\n","bb5ddf1f":"\n\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n","ae519f06":"encoding the categorical data "}}