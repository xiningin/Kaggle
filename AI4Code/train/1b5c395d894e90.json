{"cell_type":{"12b4043b":"code","c8e42e72":"code","e850e52c":"code","fe9137df":"code","1b979395":"code","3462f669":"code","4c495c3c":"code","a2487761":"code","de3f6132":"code","7e224cac":"code","86785e74":"code","154e7182":"code","1161892f":"code","844d670f":"code","bf23cb0f":"code","e2e110f0":"code","cb09e779":"code","b91a1906":"code","4836186b":"code","f4ba71c1":"markdown"},"source":{"12b4043b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8e42e72":"df = pd.read_csv(\"\/kaggle\/input\/world-of-beers\/beer_list.csv\",\n                  engine=\"python\", sep=\",\")\ndf.head()","e850e52c":"df.isnull().sum()","fe9137df":"#Code by Rashik Rahman  https:\/\/www.kaggle.com\/rashikrahmanpritom\/insights-on-disney-movies-gross\n\n# Sort data by Styles in descending order \nStyle_desc = df.sort_values(by='Style', ascending=False) \n\n# Display the top 10 Styles \nStyle_desc.head(10)","1b979395":"#Code by Rashik Rahman https:\/\/www.kaggle.com\/rashikrahmanpritom\/insights-on-disney-movies-gross\/notebook\n\n# Extract year from release_date and store it in a new column\ndf['release_year'] = pd.DatetimeIndex(df['Date']).year\n\n# Compute mean of adjusted gross per genre and per year\ngroup = df.groupby(['Style','release_year']).mean()\n\n# Convert the GroupBy object to a DataFrame\nStyle_yearly = group.reset_index()\n\n# Inspect genre_yearly \nprint(Style_yearly.head())\n\n\n# Plot the data  \n\ng=sns.relplot(kind='line', x='release_year', y='Catalog', hue='Style', data=Style_yearly)\ng.fig.set_size_inches(10,10)\nplt.title('Beer Style trend')","3462f669":"#Let's find 10 beers\nprint('10 Breweries\/beers are:\\n\\n',df['Style'].value_counts().head(10))","4c495c3c":"df['Brewery\/Beer'].value_counts().head(10).plot(kind='bar')","a2487761":"#Code by Muhammad Rizwan Amanat https:\/\/www.kaggle.com\/muhammadrizwanamanat\/top-five\n\n#Top Selling Beers wrt Score\ndf[['Brewery\/Beer', 'Score']].value_counts().head(5)","de3f6132":"#Some Visualization\ndf[['Style', 'Score']].value_counts().head(5).plot(kind='barh');","7e224cac":"#Some Visualization\ndf[['Location', 'Score']].value_counts().head(5).plot(kind='barh', color='r');","86785e74":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Beer's Style by Score\ntop_beer = df.sort_values(by='Score', ascending=False)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_beer.Style, x=top_beer.Score)\nplt.xticks()\nplt.xlabel('Score')\nplt.ylabel('Beer Style')\nplt.title('Top 20 Styles')\nplt.show()","154e7182":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Beer's Style by Score\ntop_beer = df.sort_values(by='Score', ascending=False)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_beer.Location, x=top_beer.Score)\nplt.xticks()\nplt.xlabel('Score')\nplt.ylabel('Location')\nplt.title('Top 20 Locations')\nplt.show()","1161892f":"df = df.rename(columns={'Brewery\/Beer':'brewery'})","844d670f":"#Code by Siti K https:\/\/www.kaggle.com\/khotijahs1\/2020-indonesia-university-rank\/comments\n\n#The Best 20 Beer's Style by Score\ntop_beer = df.sort_values(by='Score', ascending=False)[:20]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_beer.brewery, x=top_beer.Score)\nplt.xticks()\nplt.xlabel('Score')\nplt.ylabel('Brewery')\nplt.title('Top 20 Breweries')\nplt.show()","bf23cb0f":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.brewery)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","e2e110f0":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Location)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","cb09e779":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Style)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Dark2_r', background_color=\"salmon\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","b91a1906":"import plotly.express as px\n\nfig = px.scatter(df, x=\"brewery\", y=\"Score\", color=\"Location\", title='Breweries Scores')\nfig.show()","4836186b":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here' )","f4ba71c1":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRQbzAowHZUu3P3qgDtpREmiydgOWkW5PQ4_g&usqp=CAU)amazon.com"}}