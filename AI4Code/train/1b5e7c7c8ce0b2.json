{"cell_type":{"f9d9e3ba":"code","49790d2f":"code","59bfbe32":"code","ed884365":"code","1435654b":"code","c73e91b6":"code","3a9e00c7":"code","0078fe39":"code","00e7388d":"code","0d525c64":"code","c8571e5c":"code","66fab52c":"code","f488fcbd":"code","311e7c25":"code","6a5fff3c":"code","eb553265":"code","2025128a":"code","611e838c":"code","e27f740e":"code","0afd7614":"code","b94ae792":"markdown","f279ae34":"markdown","e87f5215":"markdown","b3eac3e0":"markdown","fa2676bd":"markdown","eadec34f":"markdown"},"source":{"f9d9e3ba":"!pip install pycaret","49790d2f":"!pip install shap","59bfbe32":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nfrom pycaret.regression import setup, blend_models, create_model, finalize_model, plot_model, predict_model, interpret_model\nimport shap\nfrom fbprophet import Prophet","ed884365":"df_train = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/test.csv')\npseudolabels =pd.read_csv('..\/input\/tps-jul2021-07lightautoml\/LightAutoML_submission.csv')","1435654b":"df_train['date_time'] = pd.to_datetime(df_train['date_time'])\ndf_test['date_time'] = pd.to_datetime(df_test['date_time'])","c73e91b6":"test = df_test.copy()\nfor col in ['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']:\n    df_test[col] = pseudolabels[col]\n\ntest = df_test.drop(['target_carbon_monoxide', 'target_nitrogen_oxides'], axis=1)","3a9e00c7":"train = pd.concat([df_train, df_test], sort=False,axis=0)","0078fe39":"train","00e7388d":"test","0d525c64":"def do_pycaret(target, train, test, categorical_features):\n    reg = setup(data=train, target=target, categorical_features=categorical_features, silent= True)\n    catboost = create_model(\"catboost\")\n    et = create_model(\"et\")\n    lightgbm = create_model(\"lightgbm\")\n    gbr = create_model(\"gbr\")\n    rf = create_model(\"rf\")\n    blend = blend_models(estimator_list= [catboost, et, lightgbm, gbr, rf], optimize='RMSLE')\n    predh = predict_model(blend)\n    final = finalize_model(blend)\n    pred = predict_model(final, data=test)\n    return(pred, catboost, lightgbm, rf)","c8571e5c":"train1 = train.drop(['target_nitrogen_oxides'], axis=1)\npred1, catboost1, lightgbm1, rf1 = do_pycaret('target_carbon_monoxide', train1, test, None)\npred1","66fab52c":"interpret_model(catboost1)","f488fcbd":"interpret_model(lightgbm1)","311e7c25":"interpret_model(rf1)","6a5fff3c":"train3 = train.drop(['target_carbon_monoxide'], axis=1)\npred3, catboost3, lightgbm3, rf3 = do_pycaret('target_nitrogen_oxides', train3, test, None)\npred3","eb553265":"interpret_model(catboost3)","2025128a":"interpret_model(lightgbm3)","611e838c":"interpret_model(rf3)","e27f740e":"submission = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')\nsubmission.target_carbon_monoxide = pred1.Label\nsubmission.target_benzene = pseudolabels.target_benzene\nsubmission.target_nitrogen_oxides = pred3.Label\nsubmission","0afd7614":"submission.to_csv('pycaret_withpseudolabels_submission.csv',index=False)","b94ae792":"#### Nitrogen oxides","f279ae34":"#### Carbon monoxide","e87f5215":"## Pseudo labels\nSpecial thanks to [this notebook](https:\/\/www.kaggle.com\/alexryzhkov\/tps-lightautoml-baseline-with-pseudolabels).","b3eac3e0":"# Tabular Playground Series - Jul 2021\nContinued from [last time ](https:\/\/www.kaggle.com\/astashiro\/tps-jul2021-07lightautoml).","fa2676bd":"### Merge predictions","eadec34f":"### Predict with Pycaret"}}