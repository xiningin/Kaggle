{"cell_type":{"9d9b2c9f":"code","1e2baacb":"code","ffdef234":"code","811d702a":"code","d5e7172e":"code","b79122aa":"code","6ff70560":"code","7c250099":"code","bb88fe99":"code","5695acbc":"code","5403448b":"code","a301d87d":"code","f0cd6360":"code","69d962e1":"code","6f8e5820":"code","0cfe077f":"code","b60c07d3":"code","9e193e39":"code","13d4dde6":"code","88c769cb":"code","331b1cf2":"code","9629121e":"code","8d4624a8":"code","50b31673":"code","1d2eff4d":"code","ce6029c9":"code","7c6c22d4":"code","1cb1ba68":"code","b9132a55":"code","4a9a043a":"code","bc4756de":"code","328017a2":"markdown","5a2b7459":"markdown","5f50b6c6":"markdown","962f29e5":"markdown","e0068c0e":"markdown","265fe5f8":"markdown"},"source":{"9d9b2c9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1e2baacb":"country1 = \"Brazil\"\ncountry2 = \"Italy\"","ffdef234":"data = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-3\/train.csv\")\ndata.head()","811d702a":"data = data[(data[\"Country_Region\"] == country1) & (data[\"ConfirmedCases\"] > 0)]\ndata.head()","d5e7172e":"data.info()","b79122aa":"data.drop([\"Province_State\", \"Id\", \"Country_Region\"], axis=1, inplace=True)\ndata.info()","6ff70560":"data.reset_index(inplace = True, drop=True)\ndata[\"Day\"] = data.index + 1","7c250099":"data.head(39)","bb88fe99":"data[\"IncresedCases\"] = 0\nfor index in range(1, len(data)):\n    data.loc[index, \"IncresedCases\"] = data.loc[index, \"ConfirmedCases\"] \/ data.loc[index-1, \"ConfirmedCases\"] - 1","5695acbc":"data[\"IncresedFatalities\"] = 0\nfor index in range(1, len(data)):\n    if data.loc[index, \"Fatalities\"] == 0 or data.loc[index-1, \"Fatalities\"] == 0:\n        data.loc[index, \"IncresedFatalities\"] = 0\n    else:\n        data.loc[index, \"IncresedFatalities\"] = data.loc[index, \"Fatalities\"] \/ data.loc[index-1, \"Fatalities\"] - 1\ndata.head(1)","5403448b":"data[\"NewCases\"] = 0\nfor index in range(1, len(data)):\n    data.loc[index, \"NewCases\"] = data.loc[index, \"ConfirmedCases\"] - data.loc[index-1, \"ConfirmedCases\"]\n\ndata[\"NewFatalities\"] = 0\nfor index in range(1, len(data)):\n    data.loc[index, \"NewFatalities\"] = data.loc[index, \"Fatalities\"] - data.loc[index-1, \"Fatalities\"]","a301d87d":"import matplotlib.pyplot as plt\nimport seaborn as sns\nf, ax = plt.subplots(nrows=1, ncols=2, figsize=(24,6))\nax[0].plot(data[\"Day\"],data[\"ConfirmedCases\"], \"b.-\", label=\"ConfirmedCases\", markersize=15)\nax[0].plot(data[\"Day\"],data[\"Fatalities\"], \"r.-\", label=\"Fatalities\", markersize=15)\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country1}: Confirmed Cases X Fatalities - Linear')\nax[0].legend(ncol=2, loc=\"upper left\", frameon=True)\n\nax[1].set(yscale=\"log\")\nax[1].plot(data[\"Day\"],data[\"ConfirmedCases\"], \"b.-\", label=\"ConfirmedCases\", markersize=15)\nax[1].plot(data[\"Day\"],data[\"Fatalities\"], \"r.-\", label=\"Fatalities\", markersize=15)\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country1}: Confirmed Cases X Fatalities - Logarithmic')\nax[1].legend(ncol=2, loc=\"upper left\", frameon=True)","f0cd6360":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(24,6))\nsns.barplot(x=\"Day\", y=\"ConfirmedCases\", data=data, color=\"b\", label=\"Confirmed Cases\", ax=ax[0])\nsns.barplot(x=\"Day\", y=\"Fatalities\", data=data, color=\"r\", label=\"Fatalities\", ax=ax[0])\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country1}: Confirmed Cases X Fatalities - Linear')\nax[0].legend(ncol=2, loc=\"upper left\", frameon=True)\n\nax[1].set(yscale=\"log\")\nsns.barplot(x=\"Day\", y=\"ConfirmedCases\", data=data, color=\"b\", label=\"Confirmed Cases\")\nsns.barplot(x=\"Day\", y=\"Fatalities\", data=data, color=\"r\", label=\"Fatalities\")\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country1}: Confirmed Cases X Fatalities - Logarithmic')\nax[1].legend(ncol=2, loc=\"upper left\", frameon=True)","69d962e1":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(24,6))\nsns.barplot(x=\"Day\", y=\"NewCases\", data=data, color=\"#808080\", label=\"Confirmed Cases\", ax=ax[0])\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country1}: New Confirmed Cases')\n\nsns.barplot(x=\"Day\", y=\"NewFatalities\", data=data, color=\"#808080\", label=\"Fatalities\")\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country1}: New Confirmed Fatalities')","6f8e5820":"fig, ax = plt.subplots(figsize=(12,6))\nsns.barplot(x=\"Day\", y=\"NewCases\", data=data, color=\"b\", label=\"Confirmed Cases\")\nsns.barplot(x=\"Day\", y=\"NewFatalities\", data=data, color=\"r\", label=\"Fatalities\")\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1}: New Confirmed Cases X New Fatalities')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","0cfe077f":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(24,6))\nax[0].plot(data[\"Day\"],data[\"IncresedCases\"]*100, \"b.-\", label=\"ConfirmedCases\")\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country1}: Daily Increased Cases - Percentage')\nax[0].legend(ncol=2, loc=\"upper left\", frameon=True)\n\nax[1].plot(data[\"Day\"],data[\"IncresedFatalities\"]*100, \"r.-\", label=\"Fatalities\")\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country1}: Daily Increased Fatalities - Percentage')\nax[1].legend(ncol=2, loc=\"upper left\", frameon=True)","b60c07d3":"data2 = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-3\/train.csv\")\ndata2 = data2[(data2[\"Country_Region\"] == country2) & (data2[\"ConfirmedCases\"] > 0)]\nlen(data2)\ndata2.head(65)","9e193e39":"data2.reset_index(inplace = True, drop=True)\ndata2[\"Day\"] = data2.index + 1\ndata2[\"IncresedCases\"] = 0\nfor index in range(1, len(data2)):\n    data2.loc[index, \"IncresedCases\"] = data2.loc[index, \"ConfirmedCases\"] \/ data2.loc[index-1, \"ConfirmedCases\"] - 1\n\ndata2[\"IncresedFatalities\"] = 0 \nfor index in range(1, len(data2)):     \n    if data2.loc[index, \"Fatalities\"] == 0 or data2.loc[index-1, \"Fatalities\"] == 0:         \n        data2.loc[index, \"IncresedFatalities\"] = 0     \n    else:         \n        data2.loc[index, \"IncresedFatalities\"] = data2.loc[index, \"Fatalities\"] \/ data2.loc[index-1, \"Fatalities\"] - 1\n\ndata2[\"NewCases\"] = 0\nfor index in range(1, len(data2)):\n    data2.loc[index, \"NewCases\"] = data2.loc[index, \"ConfirmedCases\"] - data2.loc[index-1, \"ConfirmedCases\"]\n\ndata2[\"NewFatalities\"] = 0\nfor index in range(1, len(data2)):\n    data2.loc[index, \"NewFatalities\"] = data2.loc[index, \"Fatalities\"] - data2.loc[index-1, \"Fatalities\"]\n    \ndata2.head(10)\n\n","13d4dde6":"data2.drop([\"Province_State\", \"Id\", \"Country_Region\"], axis=1, inplace=True)\ndata2.tail(10)\n","88c769cb":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(24,6))\nax[0].plot(data2[\"Day\"],data2[\"ConfirmedCases\"], \"b.-\", label=\"ConfirmedCases\", markersize=15)\nax[0].plot(data2[\"Day\"],data2[\"Fatalities\"], \"r.-\", label=\"Fatalities\", markersize=15)\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country2}: Confirmed Cases X Fatalities - Linear')\nax[0].legend(ncol=2, loc=\"upper left\", frameon=True)\n\nax[1].set(yscale=\"log\")\nax[1].plot(data2[\"Day\"],data2[\"ConfirmedCases\"], \"b.-\", label=\"ConfirmedCases\", markersize=15)\nax[1].plot(data2[\"Day\"],data2[\"Fatalities\"], \"r.-\", label=\"Fatalities\", markersize=15)\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country2}: Confirmed Cases X Fatalities - Logarithmic')\nax[1].legend(ncol=2, loc=\"upper left\", frameon=True)","331b1cf2":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(30,6))\nsns.barplot(x=\"Day\", y=\"NewCases\", data=data2, color=\"#808080\", label=\"Confirmed Cases\", ax=ax[0])\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country2}: New Confirmed Cases')\n\nsns.barplot(x=\"Day\", y=\"NewFatalities\", data=data2, color=\"#808080\", label=\"Fatalities\")\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country2}: New Confirmed Fatalities')","9629121e":"fig, ax = plt.subplots(figsize=(20,6))\nsns.barplot(x=\"Day\", y=\"NewCases\", data=data2, color=\"b\", label=\"Confirmed Cases\")\nsns.barplot(x=\"Day\", y=\"NewFatalities\", data=data2, color=\"r\", label=\"Fatalities\")\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country2}: New Confirmed Cases X New Fatalities')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","8d4624a8":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(30,6))\nax[0].plot(data2[\"Day\"],data2[\"IncresedCases\"]*100, \"b.-\", label=\"ConfirmedCases\")\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country2}: Daily Increased Cases - Percentage')\nax[0].legend(ncol=2, loc=\"upper left\", frameon=True)\n\nax[1].plot(data2[\"Day\"],data2[\"IncresedFatalities\"]*100, \"r.-\", label=\"Fatalities\")\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country2}: Daily Increased Fatalities - Percentage')\nax[1].legend(ncol=2, loc=\"upper left\", frameon=True)","50b31673":"f, ax = plt.subplots(figsize=(20,10))\nax.plot(data[\"Day\"],data[\"ConfirmedCases\"], \"b*-\", label=country1, markersize=15)\nax.plot(data2[\"Day\"],data2[\"ConfirmedCases\"], \"g.-\", label=country2, markersize=15)\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1} X {country2}: Confirmed Cases - Linear')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","1d2eff4d":"smallestsize = min(len(data), len(data2))\nsmallestsize","ce6029c9":"f, ax = plt.subplots(figsize=(16,6))\nax.plot(data[\"Day\"][:smallestsize],data[\"ConfirmedCases\"][:smallestsize], \"b*-\", label=country1, markersize=15)\nax.plot(data2[\"Day\"][:smallestsize],data2[\"ConfirmedCases\"][:smallestsize], \"g.-\", label=country2, markersize=15)\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1} X {country2}: Confirmed Cases - Linear')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","7c6c22d4":"f, ax = plt.subplots(figsize=(12,6))\nax.set(yscale=\"log\")\nax.plot(data[\"Day\"],data[\"ConfirmedCases\"], \"b*-\", label=country1, markersize=15)\nax.plot(data2[\"Day\"],data2[\"ConfirmedCases\"], \"g.-\", label=country2, markersize=15)\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1} X {country2}: Confirmed Cases - Logarithmic')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","1cb1ba68":"f, ax = plt.subplots(figsize=(20,10))\nax.plot(data[\"Day\"],data[\"Fatalities\"], \"b*-\", label=country1, markersize=15)\nax.plot(data2[\"Day\"],data2[\"Fatalities\"], \"g.-\", label=country2, markersize=15)\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1} X {country2}: Fatalities - Linear')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","b9132a55":"f, ax = plt.subplots(figsize=(16,6))\nax.plot(data[\"Day\"][:smallestsize],data[\"Fatalities\"][:smallestsize], \"b*-\", label=country1, markersize=15)\nax.plot(data2[\"Day\"][:smallestsize],data2[\"Fatalities\"][:smallestsize], \"g.-\", label=country2, markersize=15)\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1} X {country2}: Fatalities - Linear')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","4a9a043a":"f, ax = plt.subplots(figsize=(20,10))\nax.set(yscale=\"log\")\nax.plot(data[\"Day\"],data[\"Fatalities\"], \"b*-\", label=country1, markersize=15)\nax.plot(data2[\"Day\"],data2[\"Fatalities\"], \"g.-\", label=country2, markersize=15)\nax.set_xlabel('Day')\nax.set_ylabel('People')\nax.set_title(f'{country1} X {country2}: Fatalities - Logarithmic')\nax.legend(ncol=2, loc=\"upper left\", frameon=True)","bc4756de":"f, ax = plt.subplots(nrows=1, ncols=2, figsize=(30,6))\nax[0].plot(data[\"Day\"][:smallestsize],data[\"NewCases\"][:smallestsize], \"b*-\", label=country1, markersize=15)\nax[0].plot(data2[\"Day\"][:smallestsize],data2[\"NewCases\"][:smallestsize], \"g.-\", label=country2, markersize=15)\nax[0].set_xlabel('Day')\nax[0].set_ylabel('People')\nax[0].set_title(f'{country1} X {country2}: New Confirmed Cases')\n\nax[1].plot(data[\"Day\"][:smallestsize],data[\"NewFatalities\"][:smallestsize], \"b*-\", label=country1, markersize=15)\nax[1].plot(data2[\"Day\"][:smallestsize],data2[\"NewFatalities\"][:smallestsize], \"g.-\", label=country2, markersize=15)\nax[1].set_xlabel('Day')\nax[1].set_ylabel('People')\nax[1].set_title(f'{country1} X {country2}: New Confirmed Fatalities')","328017a2":"# Comparing both countries","5a2b7459":"# First country plots:","5f50b6c6":"# Second Country Plot:","962f29e5":"# Covid-19 Country Data Plot\n\nI made this because I was curious about seeing Brazilian data about COVID-19.\nLater I plot Italy and compare both countries' data.\n\nThe countries can be changed on country1 and country2 variables.\n\nI accept any tips or recommendations, I am starting now on using Kaggle and Python (pandas, seaborn, etc.)\n\nThanks","e0068c0e":"# First country data:","265fe5f8":"# Second country data:"}}