{"cell_type":{"1e3e2d36":"code","fcdfe778":"code","a1fdd87c":"code","b3cad969":"code","ab03b845":"code","dacb324c":"code","2eb1491a":"code","cbd55381":"code","76d30c09":"code","7002bb4e":"code","239af293":"code","395d6014":"code","cedc9ec2":"code","da70cee4":"code","637aef0d":"code","d9209a5c":"code","d39d9849":"code","43944e99":"code","87be60dc":"code","0ee2b211":"markdown","a9a4615d":"markdown","04833d01":"markdown","a0c37c13":"markdown","f4567b07":"markdown","0f9dbda6":"markdown","7f4cc6c0":"markdown"},"source":{"1e3e2d36":"#importing lib\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly.graph_objs import *\nimport plotly.graph_objs as go\ninit_notebook_mode()","fcdfe778":"k = pd.read_csv('..\/input\/commodity_trade_statistics_data.csv')","a1fdd87c":"world = k[k['year']==2016]","b3cad969":"world.head()","ab03b845":"world['country_or_area'].nunique()","dacb324c":" sns.heatmap(world.isnull())","2eb1491a":"trade=world.dropna()\nsns.heatmap(trade.isnull())","cbd55381":"trade.info()","76d30c09":"top_quantity = trade.drop(columns=['comm_code','commodity']).groupby(by='country_or_area').agg({'quantity':sum})","7002bb4e":"#summing","239af293":"x = top_quantity['quantity'].nlargest(10)","395d6014":"let = [Bar(\n            y=x,\n            x=x.keys(),\n            marker = dict(\n            color = 'rgba(25, 82, 1, .9)'\n            ),\n            name = \"Contractor's amount earned per project\"\n    )]\nlayout1 = go.Layout(\n    title=\"Top 10 Quantity\",\n    xaxis=dict(\n        title='Country',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=18,\n            color='#7f7f7f'\n               )\n    ),\n    yaxis=dict(\n        title='Total Amount of Quantity',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=18,\n            color='#7f7f7f'\n        )\n    )\n)\nmyFigure2 = go.Figure(data = let, layout = layout1)\niplot(myFigure2)","cedc9ec2":"# Top Exporters ","da70cee4":"ex = trade[trade['flow']=='Export']","637aef0d":"top_Export = ex.drop(columns=['comm_code','commodity']).groupby(by='country_or_area').agg({'quantity':sum})","d9209a5c":"g = top_Export['quantity'].nlargest(10)","d39d9849":"next = [Bar(\n            y=g,\n            x=g.keys(),\n            marker = dict(\n            color = 'rgba(25, 82, 1, .9)'\n            ),\n            name = \"Contractor's amount earned per project\"\n    )]\nlayout1 = go.Layout(\n    title=\"Top 10 Exporters\",\n    xaxis=dict(\n        title='Country',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=30,\n            color='#7f7f7f'\n               )\n    ),\n    yaxis=dict(\n        title='Total Amount of Quantity',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=22,\n            color='#7f7f7f'\n        )\n    )\n)\nmyFigure2 = go.Figure(data = next, layout = layout1)\niplot(myFigure2)","43944e99":"cat = k.groupby('flow')['year'].count()","87be60dc":"fig = { \n    \"data\":[{\n        \"values\":cat,\n        \"labels\":cat.keys(),\n        \"domain\": {\"x\": [0, 1]},\n        \"name\": \"Type\",\n        \"hoverinfo\":\"label+percent+name\",\n        \"hole\": .4,\n        \"type\": \"pie\",\n        \"textinfo\": \"value\"\n    }],\n    \"layout\":{\n        \"title\":\"Ratio of Import and Export\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 13\n                },\n                \"showarrow\": False,\n                \"text\": \"DISTRIBUTION\",\n                \"x\": 0.7,\n                \"y\": 0.5\n            }]\n    }\n}\n\ntrace = go.Pie(labels = cat.keys(), \n               values=cat,textinfo='value', \n               hoverinfo='label+percent', \n               textfont=dict(size = 15))\niplot(fig)","0ee2b211":"This data covers 122 different countries. \nWhich proides of with a lot of data. ","a9a4615d":"Reading the csv file","04833d01":"Checking the head to see the columns and values we got. ","a0c37c13":"Branching off to just the year 2016","f4567b07":"## Pie chart for the values of Export and Import","0f9dbda6":"We can see that there is some missing data.","7f4cc6c0":"In the kernel i will analyze the world commodity trade statistics. \n\n-\tFirst I will clean the data \n-\tFind the top trader \n-\tFind the top exporters \n-\tAnalyzing export and import \n\nFeel free to give me some critics! \n"}}