{"cell_type":{"c3ae0163":"code","6bd48e2e":"code","ca2c6a28":"code","f9fb8109":"code","26445d9f":"code","144cd08e":"code","5a4d356a":"code","380b860c":"code","d9f49daf":"code","a3e44f1d":"code","65b353e6":"code","d8ed988a":"code","d98aac9a":"code","bac716ce":"code","7befa0d0":"code","9184d6e9":"code","3c82f57a":"code","bfe38784":"code","d3b13b2b":"code","3419fb3b":"code","be58ca44":"code","1cd91000":"code","5b432660":"code","47c9d50b":"code","7fc19f97":"code","e5d5e7c8":"code","c08bdc95":"code","30918af5":"code","3393750b":"markdown","04634098":"markdown","92008a1f":"markdown","fb5e3e1e":"markdown","d2d6dc2e":"markdown","0040bf90":"markdown","99d48e1e":"markdown","d9675796":"markdown"},"source":{"c3ae0163":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","6bd48e2e":"df = pd.read_csv('..\/input\/fish-market\/Fish.csv')","ca2c6a28":"df.info()","f9fb8109":"df.describe()","26445d9f":"df.isnull().sum()","144cd08e":"df[df.values==0]","5a4d356a":"df.drop([40],inplace = True)","380b860c":"df[35:45]","d9f49daf":"\nX = df.iloc[:, [0,2,3,4,5,6]].values","a3e44f1d":"y = df.iloc[:,[1]].values","65b353e6":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\nct = ColumnTransformer(transformers = [('encoder',OneHotEncoder(),[0])], remainder = 'passthrough')\nX = ct.fit_transform(X)","d8ed988a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)","d98aac9a":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression(fit_intercept=False)\nlr.fit(X_train, y_train)","bac716ce":"y_pred = lr.predict(X_test)","7befa0d0":"from sklearn import metrics\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))  ","9184d6e9":"lr.score(X_train, y_train)","3c82f57a":"y_pred","bfe38784":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree=5)","d3b13b2b":"Xtip = X[:,0:7].copy()","3419fb3b":"for i in range(8,len(X[0])):\n  X_col = poly_reg.fit_transform(X[:,i:(i+1)])\n  X_colN = X_col[:,1:].copy()\n  Xtip = np.concatenate((Xtip,X_colN), axis = 1)","be58ca44":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(Xtip, y, test_size = 0.2, random_state = 0)","1cd91000":"from sklearn.linear_model import LinearRegression\npoly_lr = LinearRegression()\npoly_lr.fit(X_train, y_train)","5b432660":"poly_y_pred = poly_lr.predict(X_test)","47c9d50b":"from sklearn.metrics import r2_score\nr2_score(y_test, poly_y_pred)","7fc19f97":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, poly_y_pred, squared=False)","e5d5e7c8":"y_test.mean()","c08bdc95":"poly_y_pred","30918af5":"y_test","3393750b":"# As seen from above cell, We have managed to reduce the RMSE and at the same time the R-Squared has been increased","04634098":"# Now trying to decrease the RMSE, increase R-square and solve the negative predicted values problem by using the Multinomial(Multilinear+Polynomial) Regression Model","92008a1f":"# Encoding the species column","fb5e3e1e":"##some of the predicted values are negative which shows non-linearity of the data, hence a linear model was unable to fit it","d2d6dc2e":"# Will try to predict weight using multiple linear regression","0040bf90":"# Checking for zero value","99d48e1e":"# Checking for Null Values","d9675796":"#Dropping it"}}