{"cell_type":{"d0b371b1":"code","9a02e2ba":"code","900f11a2":"code","8a2db815":"code","5f33c0fc":"code","e0870b62":"code","d5edb107":"markdown","34631a5a":"markdown"},"source":{"d0b371b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9a02e2ba":"import pickle\n\ndef load_embeddings(path):\n    with open(path,'rb') as f:\n        emb_arr = pickle.load(f)\n    return emb_arr","900f11a2":"from keras.preprocessing import text\n\ntokenizer = text.Tokenizer(num_words=100, filters='',lower=False)\ntokenizer.fit_on_texts(['\u043f\u0440\u0438\u0432\u0435\u0442', '\u043a\u0430\u043a \u0434\u0435\u043b\u0430', '\u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0442\u0435\u043a\u0441\u0442'])","8a2db815":"MAX_FEATURES = 30","5f33c0fc":"def get_coefs(word, *arr):\n    return word, np.asarray(arr, dtype='float32')\n\ndef build_matrix(word_index, path):\n    embedding_index = load_embeddings(path)\n    embedding_matrix = np.zeros((MAX_FEATURES + 1, 300))\n    unknown_words = []\n    \n    for word, i in word_index.items():\n        if i <= MAX_FEATURES:\n            try:\n                embedding_matrix[i] = embedding_index[word]\n            except KeyError:\n                try:\n                    embedding_matrix[i] = embedding_index[word.lower()]\n                except KeyError:\n                    try:\n                        embedding_matrix[i] = embedding_index[word.title()]\n                    except KeyError:\n                        unknown_words.append(word)\n    return embedding_matrix, unknown_words","e0870b62":"emb_matrix, unknown_words = build_matrix(tokenizer.word_index, '..\/input\/cc.ru.300.pickle')","d5edb107":"## Build embedding matrix:","34631a5a":"> ## Loading:"}}