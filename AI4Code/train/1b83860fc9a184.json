{"cell_type":{"3acb8f40":"code","bf5e718b":"code","260e8745":"code","c4f0e3f9":"code","5a378afa":"code","a5b417c6":"code","7a7d607d":"code","96f24469":"code","c20ebf1f":"code","5812d0f8":"code","f433ac0c":"code","98029697":"code","20bda00f":"code","51f016f7":"code","2745e78e":"code","28f6e5a5":"code","c90bc3c6":"code","da2cde86":"code","1c23b40d":"code","2e4ba3ee":"code","3d9d9cd0":"code","f466b292":"code","4137d9dd":"code","29a527fa":"code","c64c5146":"code","b51d7de2":"code","95dde1a4":"code","8cb1ae99":"code","2ae99f3d":"markdown","982cef4b":"markdown","50e68e24":"markdown","83d716df":"markdown","a339e72d":"markdown","31428c10":"markdown","e3bec8b4":"markdown","b47b268e":"markdown","96b1f14c":"markdown","334d172f":"markdown","4f87b9c6":"markdown","2e83c0c9":"markdown","c36049b1":"markdown","223927f7":"markdown","b841c4bb":"markdown","27d868f9":"markdown"},"source":{"3acb8f40":"import pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nimport shap\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nfrom sklearn.model_selection import train_test_split","bf5e718b":"df=pd.read_csv('..\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')\ndf.describe()","260e8745":"def age(row):\n    if row<=40:\n        return 1\n    if row>40 and row<=60:\n        return 2\n    if row>60:\n        return 3    ","c4f0e3f9":"def co(row):\n    if row<200:\n        return 1\n    if row>=200and row<239:\n        return 2\n    if row>=239:\n        return 3    ","5a378afa":"df['agetype']=df['age'].apply(age)\ndf['cholevel']=df['chol'].apply(co)","a5b417c6":"df.head()","7a7d607d":"df.loc[df.target== 1].age.min()","96f24469":"df.loc[(df.target== 1)].agetype.value_counts()","c20ebf1f":"df.loc[(df.target== 1)].cp.value_counts()","5812d0f8":"df.loc[(df.cholevel == 1) & (df.target== 1)].sum()","f433ac0c":"df.loc[(df.target== 1)].sex.value_counts()","98029697":"#scatterplot\n# Set the width and height of the figure\nplt.figure(figsize=(14,7))\nsns.scatterplot(x=df['age'], y=df['chol'])\n#common regression line\nsns.regplot(x=df['age'], y=df['chol'])","20bda00f":"#scatterplot\n# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n#color coded plot \nsns.scatterplot(x=df['trestbps'], y=df['chol'], hue=df['target'])","51f016f7":"#Barplot\n# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=df['agetype'], y=df['target'])","2745e78e":"#scatterplot\n# Set the width and height of the figure\nplt.figure(figsize=(14,7))\nsns.scatterplot(x=df['trestbps'], y=df['thalach'])\n#common regression line\nsns.regplot(x=df['trestbps'], y=df['thalach'])","28f6e5a5":"# Histogram\nplt.figure(figsize=(10,6))\nsns.distplot(a=df['thalach'], kde=False)","c90bc3c6":"# KDE plot (density plot)(continueous)\nplt.figure(figsize=(10,6))\nsns.kdeplot(data=df['oldpeak'], shade=True)","da2cde86":"# 2D KDE plot\nplt.figure(figsize=(10,6))\nsns.jointplot(x=df['trestbps'], y=df['oldpeak'], kind=\"kde\")","1c23b40d":"df['cholevel'].value_counts()","2e4ba3ee":"d=[50,94,159]\nlab=['normal','moderate','high']","3d9d9cd0":"# Creating plot \nfig = plt.figure(figsize =(16, 9))\nplt.title('Cholestrol level of people ')\nplt.pie(d,labels=lab )   \n# show plot \nplt.show() ","f466b292":"y=df['target']\nX=df.drop(['target','chol','age'],axis=1)","4137d9dd":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","29a527fa":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","c64c5146":"from sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier(n_estimators = 9, criterion = 'entropy', random_state = 0)\nclf.fit(X_train,y_train)","b51d7de2":"# Predicting the Test set results\ny_pred = clf.predict(X_test)\nprint('accuracy of the model: ',accuracy_score(y_test,y_pred)*100)","95dde1a4":"# Predicting the Test set results\ny_pred = clf.predict(X_test)\n# Making the Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","8cb1ae99":"#SHAP VALUES\nexplainer = shap.TreeExplainer(clf)\nshap_values = explainer.shap_values(X_test)\n\nshap.summary_plot(shap_values[1], X_test, plot_type=\"bar\")","2ae99f3d":"# FEATURE IMPORTANCE","982cef4b":"#                            HEART ATTACK POSSIBILITY\n![hart.png](attachment:hart.png)\n","50e68e24":"Which type of chest pain is more severe according to the data?","83d716df":"# CREATING MORE UNDERSTANDABLE FEATURES","a339e72d":"# Feature Scaling","31428c10":"# EDA","e3bec8b4":"# READING DATASET","b47b268e":"30 people had heart attack.","96b1f14c":"Minimum age of a person which is more likely to have heart attack?","334d172f":"Which age type had most heart attacks?","4f87b9c6":"Which sex is more vulnerable towards heart attack?","2e83c0c9":"# IMPORTING LIBRARIES","c36049b1":"# DATA VISUALISATION","223927f7":"# TRAINING THE MODEL","b841c4bb":"How many people had heart attack when there cholestrol level is normal?","27d868f9":"# SPLITING THE DATASET"}}