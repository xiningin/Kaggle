{"cell_type":{"cd913549":"code","32e91b3a":"code","01f75e7a":"code","9ccd98f2":"code","14414474":"code","8c40fdcd":"code","1f266e11":"code","5a02df15":"code","e39b6405":"code","9ad674bf":"code","967189e2":"code","9fafa680":"code","42015ab4":"code","ee076ca8":"code","9c8c6398":"code","572f0e08":"code","2c13c1b2":"code","0f64e90f":"code","9e1941cc":"code","2b561d50":"code","7bba582d":"code","f32c4462":"code","65836052":"code","7c2f845a":"code","3ed3c70b":"code","8317e478":"code","50ab915e":"code","f1b43316":"code","c7710226":"code","d010a6d0":"code","37682643":"code","10cf025e":"code","1e6394f0":"code","7636fdaf":"code","12022e89":"code","d3478d7b":"code","0a1b5dbe":"code","fbafa19f":"code","f1c3b9e1":"code","01f520cf":"code","1992e7d8":"code","e71b3d61":"code","1aa6792c":"code","c36b936d":"code","eb789792":"code","47f2881d":"code","fb55cf7c":"code","b2c721e7":"code","38030c1a":"code","1f954a6a":"code","496baa6d":"code","7b8a7647":"code","fd010f11":"code","65a61977":"code","f514bc46":"markdown","b276fb31":"markdown","bea2c76c":"markdown","344bf334":"markdown","bb5424ab":"markdown","a332aed1":"markdown","835349c8":"markdown","807a3ec7":"markdown","2337de6f":"markdown","6919ee25":"markdown","6ba6fc63":"markdown","78f0c6c1":"markdown","bac1a27d":"markdown","51cc957b":"markdown","f88b6a2e":"markdown","e04e4393":"markdown","726d9c99":"markdown"},"source":{"cd913549":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","32e91b3a":"data=pd.read_csv(\"..\/input\/fifa19eda\/fifa_eda.csv\")\ndata.head()","01f75e7a":"data=data.drop(\"ID\",axis=1)","9ccd98f2":"data.head()","14414474":"data.describe()","8c40fdcd":"data[\"Club\"].unique()\ndata[\"Club\"].value_counts()","1f266e11":"data[\"Nationality\"].unique()\ndata[\"Nationality\"].value_counts()","5a02df15":"data.shape","e39b6405":"data.isnull().sum()","9ad674bf":"data['Club'] = data['Club'].fillna('Club not provided') \ndata.isnull().sum()","967189e2":"data['Value'].fillna(0, inplace=True)\ndata['International Reputation'].fillna(-1, inplace=True)\ndata['Skill Moves'].fillna(-1, inplace=True)\ndata['Contract Valid Until'].fillna(0, inplace=True)\ndata.isnull().sum()","9fafa680":"plt.boxplot(data[\"Age\"])\nplt.show()","42015ab4":"plt.boxplot(data[\"Wage\"])\nplt.show()","ee076ca8":"data=data[(data[\"Wage\"]<250)]\nplt.boxplot(data[\"Wage\"])\nplt.show()","9c8c6398":"plt.boxplot(data[\"Value\"])\nplt.show()","572f0e08":"data=data[(data[\"Value\"]<65000)]\nplt.boxplot(data[\"Value\"])\nplt.show()","2c13c1b2":"plt.boxplot(data[\"Release Clause\"])\nplt.show()","0f64e90f":"data=data[(data[\"Release Clause\"]<180000)]\nplt.boxplot(data[\"Release Clause\"])\nplt.show()","9e1941cc":"data[\"Position\"].unique()\ndata[\"Position\"].value_counts()","2b561d50":"data.shape","7bba582d":"national = data['Nationality'].value_counts()[:10]\nnational.plot.bar()\nplt.title('10 Most Common Nationalities')","f32c4462":"plt.scatter(data[\"Potential\"],data[\"Release Clause\"])\nplt.title(\"Potential x Release Clause\")\nplt.show()","65836052":"plt.scatter(data[\"Potential\"],data[\"Age\"])\nplt.title(\"Potential x Age\")\nplt.show()","7c2f845a":"plt.scatter(data[\"International Reputation\"],data[\"Overall\"])\nplt.title(\"International Reputation x Overall\")\nplt.show()","3ed3c70b":"data1=data.copy()","8317e478":"# Choosing players based on Age, Overall, Potential and Skill Moves for above positions\ndata1=data1.drop([\"Height\",\"Weight\",\"Wage\",\"Value\",\"Joined\",\"Contract Valid Until\",\"Release Clause\",\"International Reputation\"],axis=1)","50ab915e":"data1.head()","f1b43316":"data1.describe()","c7710226":"data1=data1[(data1['Age'] >= 18) & (data1['Age'] <= 35)]","d010a6d0":"data1.describe()","37682643":"data1=data1[(data[\"Overall\"]>=60) & (data[\"Overall\"]<=95)]\ndata1=data1[(data[\"Potential\"]>=60) & (data[\"Potential\"]<=95)]\ndata1=data1[(data[\"Skill Moves\"]>=2) & (data[\"Skill Moves\"]<=4)]\ndata1.describe()","10cf025e":"data1.head(10)","1e6394f0":"data1=data1.sort_values(by=['Potential'],ascending=False)\ndata1.head(15)","7636fdaf":"dataST=data1[(data1[\"Position\"]==\"ST\") | (data1[\"Position\"]==\"CF\")]","12022e89":"dataST.head(10)","d3478d7b":"dataGK=data[(data[\"Position\"]==\"GK\")]\ndataGK=dataGK.drop([\"Height\",\"Weight\",\"Wage\",\"Value\",\"Joined\",\"Contract Valid Until\",\"Release Clause\",\"International Reputation\"],axis=1)\ndataGK.head(20)","0a1b5dbe":"dataMD=data1[ (data1[\"Position\"]==\"CDM\") | (data1[\"Position\"]==\"LCM\") | (data1[\"Position\"]==\"RCM\") ]","fbafa19f":"dataMD.head(10)","f1c3b9e1":"dataW=data1[ (data1[\"Position\"]==\"LW\") | (data1[\"Position\"]==\"RW\") ]\ndataW.head(10)","01f520cf":"dataBF=data1[ (data1[\"Position\"]==\"CB\") | (data1[\"Position\"]==\"LB\") | (data1[\"Position\"]==\"RB\") ]\ndataBF.head(10)","1992e7d8":"data2=data.copy()\ndata2.head()","e71b3d61":"# Choosing players based on Low Release Clause\ndata2=data2.drop([\"Height\",\"Weight\",\"International Reputation\",\"Overall\",\"Potential\",\"Skill Moves\",\"Height\",\"Weight\"],axis=1)\ndata2.head()","1aa6792c":"data2.describe()","c36b936d":"data2=data2[(data2[\"Release Clause\"]>=500.00) & (data2[\"Release Clause\"]<=5000.00)]\ndata2.head(10)","eb789792":"dataGK2=data2[ (data2[\"Position\"]==\"GK\") ]\ndataGK2.head(5)","47f2881d":"# Merging dataframes to find best Goalkeeper based on potential and release clause \nintersectGK=dataGK2.merge(dataGK,how=\"inner\",on=[\"Name\"])\nintersectGK=intersectGK.drop([\"Age_y\",\"Nationality_y\",\"Club_y\",\"Preferred Foot_y\",\"Position_y\"],axis=1)\nintersectGK=intersectGK.sort_values(by=\"Potential\",ascending=False)\nintersectGK = intersectGK.rename({'Age_x':'Age', 'Nationality_x':'Nationality', 'Club_x':'Club', 'Preferred Foot_x':'Preferred Foot','Position_x':'Position'}, axis=1)\nintersectGK.head()","fb55cf7c":"dataST2=data2[ (data2[\"Position\"]==\"ST\") | (data2[\"Position\"]==\"CF\")]\ndataST2.head(5)","b2c721e7":"# Merging dataframes to find best Striker based on potential and release clause \nintersectST=dataST2.merge(dataST,how=\"inner\",on=[\"Name\"])\nintersectST=intersectST.drop([\"Age_y\",\"Nationality_y\",\"Club_y\",\"Preferred Foot_y\",\"Position_y\"],axis=1)\nintersectST=intersectST.sort_values(by=\"Potential\",ascending=False)\nintersectST = intersectST.rename({'Age_x':'Age', 'Nationality_x':'Nationality', 'Club_x':'Club', 'Preferred Foot_x':'Preferred Foot','Position_x':'Position'}, axis=1)\nintersectST.head(5)","38030c1a":"dataBF2=data2[ (data2[\"Position\"]==\"LB\") | (data2[\"Position\"]==\"RB\") | (data[\"Position\"]==\"CB\")]\ndataBF2.head(5)","1f954a6a":"# Merging dataframes to find best Back Players based on potential and release clause \nintersectBF=dataBF2.merge(dataBF,how=\"inner\",on=[\"Name\"])\nintersectBF=intersectBF.drop([\"Age_y\",\"Nationality_y\",\"Club_y\",\"Preferred Foot_y\",\"Position_y\"],axis=1)\nintersectBF=intersectBF.sort_values(by=\"Potential\",ascending=False)\nintersectBF = intersectBF.rename({'Age_x':'Age', 'Nationality_x':'Nationality', 'Club_x':'Club', 'Preferred Foot_x':'Preferred Foot','Position_x':'Position'}, axis=1)\nintersectBF.head(10)","496baa6d":"dataMD2=data2[ (data2[\"Position\"]==\"CDM\") | (data2[\"Position\"]==\"RCM\") | (data[\"Position\"]==\"LCM\")]\ndataMD2.head(5)","7b8a7647":"# Merging dataframes to find best Midfielders based on potential and release clause \nintersectMD=dataMD2.merge(dataMD,how=\"inner\",on=[\"Name\"])\nintersectMD=intersectMD.drop([\"Age_y\",\"Nationality_y\",\"Club_y\",\"Preferred Foot_y\",\"Position_y\"],axis=1)\nintersectMD=intersectMD.sort_values(by=\"Potential\",ascending=False)\nintersectMD = intersectMD.rename({'Age_x':'Age', 'Nationality_x':'Nationality', 'Club_x':'Club', 'Preferred Foot_x':'Preferred Foot','Position_x':'Position'}, axis=1)\nintersectMD.head(10)","fd010f11":"dataW2=data2[ (data2[\"Position\"]==\"LW\") | (data2[\"Position\"]==\"RW\")]\ndataW2.head(5)","65a61977":"# Merging dataframes to find best Wing players based on potential and release clause \nintersectW=dataW2.merge(dataW,how=\"inner\",on=[\"Name\"])\nintersectW=intersectW.drop([\"Age_y\",\"Nationality_y\",\"Club_y\",\"Preferred Foot_y\",\"Position_y\"],axis=1)\nintersectW=intersectW.sort_values(by=\"Potential\",ascending=False)\nintersectW =intersectW.rename({'Age_x':'Age', 'Nationality_x':'Nationality', 'Club_x':'Club', 'Preferred Foot_x':'Preferred Foot','Position_x':'Position'}, axis=1)\nintersectW.head(10)","f514bc46":"**CENTRE FORWARD OR STRIKER**\n\n","b276fb31":"### **IMPORTING MODULES**","bea2c76c":"##### **STRIKER OR CENTRE FORWARD**","344bf334":"##### **WINGPLAYERS**","bb5424ab":"## **CONCLUSION**\n* We observe that:\n * Most players are from England\n * With increase in Potential, Release Clause increases \n * There is no correlation between Age and Potential of a player\n* According to 4-3-3 formation we had to choose 4 Back Players, 2 Wing Players, 3 Midfielders and 1 Striker or Centre Forward.\nChosen players:\n * Centre Forward: Andre Silva (*Striker*)\n * WingPlayers:  Galeno (*Left Wing*), R Nelson (*Right Wing*)\n * MidFielders: M. Kova\u010di\u0107 (*Left Centre Midefielder*), S. Tonali (*Central Defensive Midfielder*), G. Lo Celso (*Right Centre Midfielder*)\n * BackFour: A. Hakimi (*Left Back*), M. Varnier, N. P\u00e9rez (*Centre Back*), S. Vrsaljko (*Right Back*)\n * GoalKeeper: A. Lunin\n\n ","a332aed1":"##### **GOALKEEPER**","835349c8":"**MIDFIELDER**","807a3ec7":"## **INTRODUCTION**\nHello everyone. I am new to kaggle and this is the first dataset I worked on. Let me know how I can improve my code.  \n\nFIFA is a series of association football video games developed and released annually by Electronic Arts under the EA Sports label. Here we will be dealing with the data from FIFA 19 having all the details of available football players such as Age, Nationality,  \nOur task was to make an efficient team with high potential and low release clause (cost effective). Chosen Formation: 4-3-3\n","2337de6f":"**BACKFOUR**","6919ee25":" # **4-3-3 FORMATION**","6ba6fc63":"##### **BACKFOUR**","78f0c6c1":"##### **MIDFIELDERS**","bac1a27d":"### **FINDING OUTLIERS**","51cc957b":"**GOALKEEPER**","f88b6a2e":"![picture](https:\/\/drive.google.com\/uc?export=view&id=1m-ze9U6c0piNFlh-iCCLIvjV80ltnpaN)","e04e4393":"### **DATA CLEANING**","726d9c99":"**WINGPLAYERS**"}}