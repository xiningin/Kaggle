{"cell_type":{"7fdb4fb9":"code","7a729aaf":"code","f4b0d094":"code","2db8993f":"code","2386258e":"code","b05f2ccb":"code","7fb48366":"code","e035d179":"code","eb84380a":"code","bf90df1b":"code","3d7b9fbb":"code","9639910b":"code","d9358f35":"code","834e591d":"code","ac20722a":"markdown","8f0cfde6":"markdown","f08811d6":"markdown","15749adf":"markdown","f4d97e84":"markdown","528479e7":"markdown","4c3a80b1":"markdown","cd699b55":"markdown","735195d2":"markdown"},"source":{"7fdb4fb9":"import numpy as np\nimport tensorflow as tf\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nfrom scipy.stats.mstats import hmean ","7a729aaf":"# N = length of last name = 8\n# S = (8 % 5) + 1 = 4\n\nN_SAMPLES = 10000\nN_TEST = 1000\n\n# Lengths up to S + 5\nMAX_TIMESTEPS = 9\nMASK_VALUE = 1\n\ntrain_X = np.random.uniform(size=(N_SAMPLES, MAX_TIMESTEPS, 1))\ntrain_L = np.random.randint(2, MAX_TIMESTEPS, N_SAMPLES)\n\ntest_X = np.random.uniform(size=(N_TEST, MAX_TIMESTEPS, 1))\ntest_L = np.random.randint(2, MAX_TIMESTEPS, N_TEST)","f4b0d094":"for i in range(N_SAMPLES):\n    train_X[i, train_L[i]:] = MASK_VALUE","2db8993f":"for i in range(N_TEST):\n    test_X[i, test_L[i]:] = MASK_VALUE","2386258e":"train_y = hmean(train_X, axis=1)\ntest_y = hmean(test_X, axis=1)","b05f2ccb":"input_ = tf.keras.Input(shape=(None, 1))\nmasked = tf.keras.layers.Masking(MASK_VALUE)(input_)\nlstm1 = tf.keras.layers.LSTM(32, return_sequences=True)(masked)\nlstm2 = tf.keras.layers.LSTM(32)(lstm1)\noutput = tf.keras.layers.Dense(1)(lstm2)\n\nmodel = tf.keras.Model(inputs=input_, outputs=output)\nmodel.summary()","7fb48366":"model.compile('adam', 'mse')","e035d179":"hist = model.fit(train_X, train_y, epochs=8)","eb84380a":"prediction = model.predict(test_X)","bf90df1b":"prediction[:8]","3d7b9fbb":"test_y[:8]","9639910b":"mean_squared_error(test_y, prediction)","d9358f35":"mean_absolute_error(test_y, prediction)","834e591d":"np.percentile(test_y, np.arange(0, 100, 10)) ","ac20722a":"### Mean absolute error","8f0cfde6":"### Train the model for 8 epochs","f08811d6":"### Compile the model by providing the optimization algorithm and the loss function","15749adf":"### Mean squared error","f4d97e84":"### Import all the needed modules","528479e7":"### Decile error","4c3a80b1":"### Define the connections of the nodes in the network and verify the model\n\nThe ```Masking``` layer removes the numbers whose values are equal to 1. This allows us to tell the network that the data lengths are different.\n\nThe ```return_sequence``` flag defines if the LSTM should return only the last or the full sequence.","cd699b55":"### Generate random values and calculate the label using the problem\n\nThe model shold be able to learn how to calculate the harmonic mean of a sequence.\n\nTo define data with different lengths, we set the unused parts of the data as 1.","735195d2":"# Recurrent Network\n\nThis notebook shows how to create a recurrent network"}}