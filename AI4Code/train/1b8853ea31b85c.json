{"cell_type":{"60febc0a":"code","d4f41ffa":"code","bb5cc378":"code","6d02481f":"code","182f8b96":"code","b3210fe2":"code","0223210c":"code","7c904c12":"code","f980dfdb":"code","b4417fbc":"code","252b946c":"code","3ed7f5c2":"code","bab3416c":"code","700d513f":"code","563c6ab6":"code","e8038b8a":"code","3e995214":"code","87871a06":"code","a05f5538":"code","98cb67fd":"code","b5dc9aff":"code","796ecb54":"code","f941d1cb":"code","7877b7ae":"code","c5d9b7d7":"code","ba228296":"code","3d6a3427":"code","bc75e066":"code","fd6296ab":"code","0d7ce93e":"code","e63b97cb":"code","0bc952e7":"code","2a906753":"code","f33a5442":"code","d6ddd248":"code","90e4ef68":"code","e4cb374e":"code","4e65d230":"code","f9524744":"code","e8d65871":"code","9e7f7526":"code","7fdce98d":"code","5a657212":"code","f7195739":"code","e2870039":"code","3b945c9b":"code","9306f454":"code","465117a6":"code","638d44e1":"code","fbb207be":"markdown","7b512ff7":"markdown","57b6ea6a":"markdown","f7f4f29a":"markdown"},"source":{"60febc0a":"import numpy as np \nimport pandas as pd \nimport plotly.express as px\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d4f41ffa":"melb= pd.read_csv(\"\/kaggle\/input\/melbourne-housing-snapshot\/melb_data.csv\")\nsales=pd.read_csv(\"\/kaggle\/input\/sales-forecasting\/train.csv\")","bb5cc378":"melb=melb[0:1000]","6d02481f":"x=[0, 1, 2, 3, 4, 5, 6]\ny=[0, 2, 4, 5, 5.5, 7, 9]\n\nfig = px.scatter(x, y)\nfig.show()","182f8b96":"df = px.data.iris()","b3210fe2":"df.head()","0223210c":"fig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", color='petal_width')\nfig.show()","7c904c12":"fig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", color='species')\nfig.show()","f980dfdb":"fig = px.scatter(df, y=\"petal_length\", x=\"petal_width\", color=\"species\", symbol=\"species\")\nfig.update_traces(marker_size=10)\n","b4417fbc":"melb.info()","252b946c":"fig = px.scatter(melb, x=\"Lattitude\", y=\"Longtitude\", marginal_x=\"histogram\", marginal_y=\"rug\",color=\"Type\")\nfig.show()","3ed7f5c2":"fig = px.scatter(melb, x=\"Price\", y=\"YearBuilt\", color=\"Type\", facet_col=\"Rooms\", )\nfig.show()","bab3416c":"fig = px.scatter(melb, x=\"Price\", y=\"YearBuilt\", color=\"Rooms\", facet_col=\"Type\", )\nfig.show()","700d513f":"fig = px.scatter(melb, x=\"BuildingArea\", y=\"Distance\", color=\"Rooms\", facet_col=\"Type\", )\nfig.show()","563c6ab6":"fig = px.scatter(melb, x=\"BuildingArea\", y=\"Distance\", color=\"Car\", facet_col=\"Type\", )\nfig.show()","e8038b8a":"#linear regression\n\ndf = px.data.tips()\nfig = px.scatter(df, x=\"total_bill\", y=\"tip\", trendline=\"ols\")\nfig.show()","3e995214":"x = np.linspace(0, 10, 1000)\ny= 3*x**2 - 2*x**2 + 4*x- 5\n\nfig = px.line(x=x ,y =y,labels={'x':'x', 'y':'y'})\nfig.show()","87871a06":"x = np.linspace(0, 10, 1000)\ny= np.sin(x)\n\nfig = px.line(x=x ,y =y,labels={'x':'x', 'y':'sin(x)'})\nfig.show()","a05f5538":"df = px.data.stocks()\nfig = px.line(df, x='date', y=\"MSFT\")\nfig.show()","98cb67fd":"df = px.data.stocks()\nfig = px.line(df, x='date', y=[\"MSFT\",\"GOOG\",'FB',\"AMZN\"])\nfig.show()","b5dc9aff":"df = px.data.gapminder().query(\"continent == 'Oceania'\")","796ecb54":"df.head()","f941d1cb":"fig = px.line(df, x='year', y='pop', color='country')\nfig.show()\n","7877b7ae":"fig = px.line(df, x='year', y='pop', color='country',markers=True)\nfig.show()\n","c5d9b7d7":"import plotly.graph_objects as go\n#combined plots\nN=100\nrandom_x = np.linspace(0, 5, N)\nrandom_y0 = np.random.randn(N) + 5\nrandom_y1 = np.random.randn(N)\nrandom_y2 = np.random.randn(N) - 5\n\n\nfig = go.Figure()\n\n# Add traces\nfig.add_trace(go.Scatter(x=random_x, y=random_y0,\n                    mode='lines+markers',\n                    name='lines+markers'))\nfig.add_trace(go.Scatter(x=random_x, y=random_y1,\n                    mode='markers',\n                    name='markers'))\nfig.add_trace(go.Scatter(x=random_x, y=random_y2,\n                    mode='lines',\n                    name='lines'))\n\nfig.show()","ba228296":"df = px.data.gapminder().query(\"country == 'Australia'\")","3d6a3427":"fig = px.bar(df, x='year', y='pop')\nfig.show()","bc75e066":"sales=sales[0:100]","fd6296ab":"sales.info()","0d7ce93e":"fig = px.bar(sales, x=\"State\", y=\"Sales\")\nfig.show()","e63b97cb":"fig = px.bar(sales, x=\"State\", y=\"Sales\",color='Category')\nfig.show()","0bc952e7":"fig = px.bar(sales, x=\"Category\", y=\"Sales\",color='Segment')\nfig.show()","2a906753":"fig = px.bar(sales, x=\"Category\", y=\"Sales\",color=\"Segment\",pattern_shape=\"Segment\", pattern_shape_sequence=[\".\", \"x\", \"+\"])\nfig.show()","f33a5442":"data = px.data.gapminder()\n\ndata_canada = data[data.country == 'Canada']\nfig = px.bar(data_canada, x='year', y='pop',\n             hover_data=['lifeExp', 'gdpPercap'], color='lifeExp',\n             labels={'pop':'population of Canada'}, height=400)\nfig.show()","d6ddd248":"fig = px.bar(data_canada, x='year', y='pop',\n             hover_data=['lifeExp', 'gdpPercap'], color='gdpPercap',\n             labels={'pop':'population of Canada'}, height=400)\nfig.show()","90e4ef68":"df = px.data.gapminder().query(\"continent == 'Oceania'\")","e4cb374e":"df.head()","4e65d230":"fig = px.bar(df, x='year', y='pop',barmode='stack',color='country')\nfig.show()","f9524744":"fig = px.bar(df, x='year', y='lifeExp',barmode='stack',color='country')\nfig.show()","e8d65871":"x = ['Suzuki', 'Honda', 'Tata']\ny = [100, 40, 60]\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['50 % Share', '20 % Share', '30 % Share'])])\n\nfig.update_layout(title_text='Sales Data')\nfig.show()","9e7f7526":"#uniform text size\n\ndf = px.data.gapminder().query(\"continent == 'Asia' and year == 2007and pop > 8000000\")\nfig = px.bar(df, y='pop', x='country', text='pop')\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.show()","7fdce98d":"sales.info()","5a657212":"fig = px.pie(sales, values='Sales', names='State', title='Sales Per State in US')\nfig.show()","f7195739":"fig = px.pie(sales, values='Sales', names='Segment', title='Sales Per Segment in US')\nfig.show()","e2870039":"fig = px.pie(sales, values='Sales', names='Category', title='Sales Per Category in US')\nfig.show()","3b945c9b":"#setting colours\n\ndf = px.data.tips()\nfig = px.pie(df, values='tip', names='day', color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","9306f454":"labels = ['Apple','Microsoft','Amazon','Alphabet']\nvalues = [2252, 1966, 1711, 1538]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","465117a6":"#donut chart\n\nlabels = ['CAR','BIKE','BUS','TRAIN']\nvalues = [1500, 2500, 6800, 9000]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","638d44e1":"#donut chart\n\nlabels = ['CAR','BIKE','BUS','TRAIN']\nvalues = [1500, 2500, 6800, 9000]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0.1, 0.1, 0.2, 0.1])])\nfig.show()","fbb207be":"# Pie Chart","7b512ff7":"# Line Plots","57b6ea6a":"# Bar Plots","f7f4f29a":"# Scatter Plots"}}