{"cell_type":{"f9ceb75c":"code","ca125c59":"code","7a35af79":"code","875e7e22":"code","80b787ad":"code","a4b7992e":"code","fcca8faa":"code","87a9f5b0":"code","44c44479":"code","d5f06276":"code","78910b58":"code","d87696db":"code","25ce6dcc":"code","0b877531":"code","01d94478":"code","eefaec96":"code","e38902be":"code","dde44f65":"code","81bec72e":"code","042afd37":"code","510111e8":"code","94a81a76":"code","58b7d46b":"code","96981bff":"code","4fa96220":"code","25bb904e":"code","38de9493":"code","461d7c6e":"code","1932bc66":"code","50ab4b11":"code","117909ab":"code","eac7521c":"code","039ba1ae":"code","1339496f":"code","fd1561ce":"code","b69905c3":"code","f03f39b0":"code","f2d36d77":"code","ef05ab39":"code","b1c33e34":"code","490c305d":"code","e0c5a70c":"code","902e1034":"code","34901c8c":"code","599e0f61":"code","9e72f372":"code","caf6828c":"code","5c4b36d5":"code","2e6a15d0":"code","24792794":"code","f1ee7fc4":"code","30e18d85":"code","b801fe8b":"markdown","0bdf935e":"markdown","463462a5":"markdown","df7c2f3c":"markdown","16ecddd0":"markdown","4f6f4864":"markdown","49393fd2":"markdown","c4fd3f0c":"markdown","1d347399":"markdown","f80f4921":"markdown","c9bc8b2e":"markdown","b7a4526d":"markdown","6152ab0b":"markdown","23e133ef":"markdown","ecd2008f":"markdown","60918f70":"markdown","24fcca67":"markdown","fd22ca0d":"markdown","bdf7c221":"markdown","ce7d8766":"markdown","04bba11d":"markdown","095f9eae":"markdown","8ebe4279":"markdown","86213eb5":"markdown","6176bd8d":"markdown","cd840f51":"markdown","fac57097":"markdown","35744c84":"markdown","ca90710d":"markdown","17f071bb":"markdown","631828ef":"markdown","9b15844f":"markdown"},"source":{"f9ceb75c":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, ImageColorGenerator\nfrom matplotlib import rcParams\nrcParams['figure.figsize'] = (15, 8)\n\n#ignoring all the warnings because we don't need them\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ca125c59":"stop_data = pd.read_csv('..\/input\/minneapolis-police-stops-and-police-violence\/police_stop_data.csv')\nforce_data = pd.read_csv('..\/input\/minneapolis-police-stops-and-police-violence\/police_use_of_force.csv')","7a35af79":"stop_data.head(3)","875e7e22":"stop_data.tail(3)","80b787ad":"stop_data.shape","a4b7992e":"stop_data.info()","fcca8faa":"stop_data.describe()","87a9f5b0":"print(\"Missing Data\")\nmiss_me = stop_data.isnull().sum()\nmiss_me[miss_me>0]","44c44479":"numerical_cols = [col for col in stop_data.columns \n                  if stop_data[col].dtype!='object']\n\nprint(f\"Numerical Columns:\\n{numerical_cols}\")","d5f06276":"categorical_cols = [col for col in stop_data.columns\n                    if stop_data[col].dtype=='object']\n\nprint(f\"Categorical Columns:\\n{categorical_cols}\")","78910b58":"census_2010 = {'white': ['63.8'], \n        'black': ['18.6'], \n        'hispanic': ['10.5'],\n        'asian': ['5.6'],\n        'other': ['5.6'],\n        'american_indian': ['2.0']}\n\ncensus_2010_df = pd.DataFrame(census_2010, columns = ['white','black','hispanic','asian','other','american_indian']).transpose()\ncensus_2010_df.columns = ['Percentage of Population']\ncensus_2010_df['Percentage of Population'] = census_2010_df['Percentage of Population'].astype(float)","d87696db":"census_2010_df.style.background_gradient(cmap='Purples', subset=['Percentage of Population'])","25ce6dcc":"# Bar Plot\nfig1 = px.bar(census_2010_df, x=census_2010_df.index, \n              y=census_2010_df['Percentage of Population'], color=census_2010_df.index, \n              color_discrete_sequence=px.colors.qualitative.Pastel)\n\nfig1.update_layout(title={\n                  'text': \"Demographics of Minneapolis City\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                  template='ggplot2')\n\n# -----------------------------------------------------------\n\n# Pie Chart\nfig2 = px.pie(census_2010_df, census_2010_df.index, \n              census_2010_df['Percentage of Population'], \n              color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.5)\n\nfig2.update_layout(title={\n                  'text': \"Demographics of Minneapolis City (Pie Chart)\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig2.update_traces(textposition='inside', textinfo='percent+label', pull=[0, 0.2])\n\nfig2.data[0].marker.line.width = 1\nfig2.data[0].marker.line.color = \"black\"\n\nfig1.show()\nfig2.show()","0b877531":"stop_data['race'].value_counts()","01d94478":"# Bar Plot\nfig1 = px.bar(stop_data['race'].value_counts(), color_discrete_sequence=[px.colors.qualitative.Pastel])\n\nfig1.update_layout(title={\n                  'text': \"Minneapolis Police Stops by Race\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Race\", \n                  yaxis_title=\"Total Number\",\n                  showlegend=False\n                 )\n\n# -------------------------------------------------------------\n\n# Funnel Plot\nfig2 = px.funnel(stop_data['race'].value_counts(), color_discrete_sequence=[px.colors.qualitative.Pastel])\nfig2.update_layout(template='ggplot2', showlegend=False)\n\nfig1.show()\nfig2.show()","eefaec96":"# Fill missing values with 'None'\nstop_data['reason'] = stop_data['reason'].fillna('None')\n\nstop_reason = stop_data['reason'].unique()\n\nprint(\"Different Reasons for Stopping the vehicle:\")\nfor x in stop_reason:\n    print(x)","e38902be":"print(\"Total Number of Cases:\")\nstop_data['reason'].value_counts()","dde44f65":"# Bar Chart\nfig1 = px.bar(stop_data['reason'].value_counts(), color_discrete_sequence=[px.colors.qualitative.Pastel])\n\nfig1.update_layout(title={\n                  'text': \"Reason for Police Stops\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Reason\", \n                  yaxis_title=\"Total Number\",\n                  showlegend=False\n                 )\n# ----------------------------------------------------\n\n# Pie Chart\nfig2 = px.pie(stop_data, stop_data['reason'], \n              color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.3)\n\nfig2.update_layout(title={\n                  'text': \"Reasons for Police Stops (Pie Chart)\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig2.update_traces(textposition='inside', textinfo='percent+label', pull=(0.05))\n\nfig2.data[0].marker.line.width = 1\nfig2.data[0].marker.line.color = \"black\"\n\nfig1.show()\nfig2.show()","81bec72e":"fig = px.bar(stop_data['problem'].value_counts(), color_discrete_sequence=[px.colors.qualitative.Pastel])\n\nfig.update_layout(title={\n                  'text': \"Problem Stated by Police\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Problem\", \n                  yaxis_title=\"Total Number\",\n                  showlegend=False\n                 )\n\nfig.show()","042afd37":"problem_stop = stop_data.groupby('race')[['problem']].count().reset_index()\nproblem_stop.sort_values(by='problem',  ascending=False).style.background_gradient(cmap='Reds', subset=['problem'])","510111e8":"fig1 = px.bar(problem_stop, problem_stop['race'], \n              problem_stop['problem'], \n              color_discrete_sequence = [px.colors.qualitative.Plotly])\n\nfig1.update_layout(title={\n                  'text': \"Problem based on Race\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Race\", \n                  yaxis_title=\"Problem\",\n                 )\n\n# ----------------------------------------------------\n\nfig2 = go.Figure(data=[go.Scatter(\n    x=problem_stop['race'], y=problem_stop['problem'],\n    mode='markers',\n    marker=dict(\n        color= px.colors.qualitative.Plotly,\n        size=[20, 140, 60, 50, 40, 30, 70, 90],\n    )\n    )])\n\nfig2.update_layout(template='ggplot2',\n                   xaxis_title='Race',\n                   yaxis_title='Problem')\n\nfig1.show()\nfig2.show()","94a81a76":"word = stop_data['callDisposition']\n\ntext = \" \".join(str(each) for each in word.unique())\n\nwordcloud = WordCloud(max_words=200, colormap='Set3', background_color=\"white\").generate(text)\n\nplt.figure(figsize=(17,10))\n\nplt.imshow(wordcloud, interpolation='Bilinear')\n\nplt.axis(\"off\")\n\nplt.figure(1,figsize=(12, 12))\n\nplt.title(\"Word Cloud of Call Disposition\", size=20)\n\nplt.show()","58b7d46b":"personSearch_df = stop_data[stop_data['personSearch'] == 'YES']\n\nsearch_person = personSearch_df.groupby('race')['personSearch'].count().reset_index()\n\nsearch_person.sort_values(by='personSearch', ascending=False).style.background_gradient(cmap='Oranges', subset=['personSearch'])","96981bff":"fig = px.pie(search_person, search_person['race'], search_person['personSearch'], color_discrete_sequence=px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Person Search based on Race\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig.update_traces(textposition='inside', textinfo='percent+label', pull=[0, 0.2])\n\nfig.data[0].marker.line.width = 1\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","4fa96220":"vehicleSearch_df = stop_data[stop_data['vehicleSearch'] == 'YES']\n\nsearch_vehicle = vehicleSearch_df.groupby('race')['vehicleSearch'].count().reset_index()\n\nsearch_vehicle.sort_values(by='vehicleSearch', ascending=False).style.background_gradient(cmap='Oranges', subset=['vehicleSearch'])","25bb904e":"fig = px.pie(search_vehicle, search_vehicle['race'], search_vehicle['vehicleSearch'], color_discrete_sequence=px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Vehicle Search based on Race\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig.update_traces(textposition='inside', textinfo='percent+label', pull=[0, 0.2])\n\nfig.data[0].marker.line.width = 1\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","38de9493":"stop_data['neighborhood'].nunique()","461d7c6e":"stop_data['neighborhood'].value_counts().to_frame(name='# Police Stops').head(15).style.background_gradient(cmap='Blues', subset=['# Police Stops'])","1932bc66":"fig = px.bar(stop_data['neighborhood'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\nfig.update_layout(title={\n                  'text': \"# Police Stops in Different Neighbourhoods\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Neighbourhood\", \n                  yaxis_title=\"# Police Stops\",\n                  height=700,\n                  showlegend=False\n                 )","50ab4b11":"fig = px.bar(stop_data['gender'].value_counts(), color_discrete_sequence = [px.colors.qualitative.Pastel])\nfig.update_layout(title={\n                  'text': \"Police Stops Based on Gender\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Gender\", \n                  yaxis_title=\"# Police Stops\",\n                  showlegend=False\n                 )\nfig.show()","117909ab":"force_data.head(3)","eac7521c":"force_data.columns","039ba1ae":"force_data.info()","1339496f":"force_data.describe()","fd1561ce":"fig = px.bar(force_data['Race'].value_counts(), color_discrete_sequence = [px.colors.qualitative.Pastel])\n\nfig.update_layout(title={\n                  'text': \"Police Violence by Race\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Race\", \n                  yaxis_title=\"# Police Violence\",\n                  showlegend=False\n                 )\n\n\nfig.show()","b69905c3":"force_data['ForceType'].unique()","f03f39b0":"fig = px.pie(force_data, force_data['ForceType'], color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.5)\n\nfig.update_layout(title={\n                  'text': \"Type of Force by Police\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.data[0].marker.line.width = 1\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","f2d36d77":"force_race = force_data.groupby(['Race'])[['ForceType']].count().reset_index()\nforce_race.sort_values(by='ForceType', ascending=False).style.background_gradient(cmap='summer', subset=['ForceType'])","ef05ab39":"fig = px.pie(force_race, force_race['Race'], force_race['ForceType'], color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.5)\n\nfig.update_layout(title={\n                  'text': \"Force Type Based on Race\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig.update_traces(textposition='inside', textinfo='percent+label', pull=[0, 0.1])\n\nfig.data[0].marker.line.width = 2\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","b1c33e34":"force_data['ForceTypeAction'].unique()","490c305d":"fig = px.bar(force_data['ForceTypeAction'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Action of Force Type\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title={'text': \"Action\"}, \n                  yaxis_title=\"# Police Violence\",\n                  height=1000,\n                  showlegend=False\n                 )\n\nfig.show()","e0c5a70c":"white_action = force_data[force_data['Race'] == 'White']\nfig = px.bar(white_action['ForceTypeAction'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Action of Force Type on White People\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title={'text': \"Action\"}, \n                  yaxis_title=\"# Police Violence\",\n                  height=1000,\n                  showlegend=False\n                 )\n\nfig.show()","902e1034":"white_action['ForceTypeAction'].value_counts()","34901c8c":"black_action = force_data[force_data['Race'] == 'Black']\nfig = px.bar(black_action['ForceTypeAction'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Action of Force Type on Black People\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title={'text': \"Action\"}, \n                  yaxis_title=\"# Police Violence\",\n                  height=1000,\n                  showlegend=False\n                 )\n\nfig.show()","599e0f61":"black_action['ForceTypeAction'].value_counts()","9e72f372":"print(f\"Total number of unique Problems: {force_data['Problem'].nunique()}\")","caf6828c":"fig = px.bar(force_data['Problem'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Problem Reported by Police\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Problem\", \n                  yaxis_title=\"Count\",\n                  height=700,\n                  showlegend=False\n                 )\n\nfig.show()","5c4b36d5":"fig = px.pie(force_race, force_data['SubjectInjury'], color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.5)\n\nfig.update_layout(title={\n                  'text': \"# Times Subject Was Injured\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.data[0].marker.line.width = 2\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","2e6a15d0":"fig = px.pie(force_data, force_data['Sex'], color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.5)\n\nfig.update_layout(title={\n                  'text': \"Gender of Subject\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white')\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.data[0].marker.line.width = 2\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","24792794":"fig = px.pie(force_data, force_data['EventAge'], color_discrete_sequence=px.colors.qualitative.Pastel, hole=0.6)\n\nfig.update_layout(title={\n                  'text': \"Age of Subject\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'},\n                   height=600,\n                  template='plotly_white', \n                  showlegend=False)\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.data[0].marker.line.width = 2\nfig.data[0].marker.line.color = \"black\"\n\nfig.show()","f1ee7fc4":"fig = px.bar(force_data['TypeOfResistance'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Type of Resistance by Subject\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Type\", \n                  yaxis_title=\"Count\",\n                  height=700,\n                  showlegend=False\n                 )\n\nfig.show()","30e18d85":"fig = px.bar(force_data['Neighborhood'].value_counts(), color_discrete_sequence = px.colors.qualitative.Pastel)\n\nfig.update_layout(title={\n                  'text': \"Neighbourhood of Incident\",\n                  'y':0.98,\n                  'x':0.5,\n                  'xanchor': 'center',\n                  'yanchor': 'top'}, \n                  template='ggplot2', \n                  xaxis_title=\"Neighbourhood\", \n                  yaxis_title=\"# of Incidents\",\n                  height=700,\n                  showlegend=False\n                 )\n\nfig.show()","b801fe8b":"# Data Visualization (Police Use of Force)","0bdf935e":"<div style=\"color:white;\n           display:inline-block;\n           border-radius:5px;\n           background-color:#EC2566;\n           font-family:Verdana\">\n    <p style=\"color:white; padding:7px; font-size:110%;\">Above chart shows that, Black people are searched a lot more when compared to any other race. We should keep in mind that this data is only of Minneapolis where Black people are minority.\n    <\/p>\n<\/div>","463462a5":"## Different types of Action used on White People","df7c2f3c":"## Type of Resistance","16ecddd0":"## Police Stops by Race","4f6f4864":"## Age of Subject","49393fd2":"<div style=\"color:white;\n           display:inline-block;\n           border-radius:5px;\n           background-color:#EC2566;\n           font-family:Verdana\">\n    <p style=\"color:white; padding:7px; font-size:110%;\">According to the above table derived from the official database of Minneapolis Police Department, we can clearly see that Police are more suspicious of Black people. Although Black people are only make 17.5% of total Minneapolis Residents. Hence, the numbers dont add up here and the picture of Racial Discrimination  is quite clear.\n    <\/p>\n<\/div>","c4fd3f0c":"## Reason for Stop","1d347399":"Well we are not at all surprised by this result. The picture is very clear. And we simply can not deny this after looking at all these visualizations. Police brutality and racism must be stopped.","f80f4921":"## Police Stops Based on Gender","c9bc8b2e":"## Force Type by Police (Based on Race)","b7a4526d":"<div style=\"color:white;\n           display:inline-block;\n           border-radius:5px;\n           background-color:#EC2566;\n           font-family:Verdana\">\n    <p style=\"color:white; padding:7px; font-size:110%;\">We can again see that, most number of incidents occured in 'Downtown West' Area.\n    <\/p>\n<\/div>","6152ab0b":"## Action of Force Type by Police","23e133ef":"## Force Used (Based on Gender)","ecd2008f":"# Police Stop Data Analysis","60918f70":"## Call Disposition Word Cloud","24fcca67":"> In this kernel, we are going to visualize the **Minneapolis Police Interactions by Race**. Racism has been a problem for a very long time. Recent incidents have raised many questions on the police department of **Minneapolis**. In this report, we are goint to find out: Are the police in Minneapolis are Racially Biased?","fd22ca0d":"## Loading Data","bdf7c221":"## Missing Data","ce7d8766":"## Person Search & Vehicle Search","04bba11d":"<div style=\"color:white;\n           display:inline-block;\n           border-radius:5px;\n           background-color:#EC2566;\n           font-size:90%;\n           font-family:Verdana\">\n    <h2 style=\"color:white; padding:7px;\">If you like this notebook, please give it an upvote as it keeps me motivated to create more quality kernels.\n    <\/h2>\n<\/div>","095f9eae":"<div style=\"color:white;\n           display:inline-block;\n           border-radius:5px;\n           background-color:#EC2566;\n           font-family:Verdana\">\n    <p style=\"color:white; padding:7px; font-size:110%;\">From the above bar chart, we can see that Police uses 'Body weight to pin' in most of the cases followed by 'Punches'. One thing that we should take a note here is that in action type 'Neck Restraint' fourteen (14) times the subject lost conciousness. This should be banned everywhere. There are other ways to restraint the subject.\n    <\/p>\n<\/div>","8ebe4279":"<div style=\"color:white;\n           display:inline-block;\n           border-radius:5px;\n           background-color:#EC2566;\n           font-family:Verdana\">\n    <p style=\"color:white; padding:7px; font-size:110%;\">Here in the pie chart above, We can clearly see that 'black' people are in minority when compared to 'white' people but later on we will see that, 'black' people have significantly more number of stops by Police, which is alarming.\n    <\/p>\n<\/div>","86213eb5":"## # Times Subject Was Injured?","6176bd8d":"## Minneapolis Police Violence by Race","cd840f51":"## Numerical and Categorical Columns","fac57097":"## Problem Stated by Police","35744c84":"## Neighbourhood (Most Number of Police Stops)","ca90710d":"Neighbourhoods you are most likely to be pulled over by the Police.","17f071bb":"## Force Type by Police","631828ef":"## Demographic of Minneapolis","9b15844f":"# Data Visualization (Police Stop Data)"}}