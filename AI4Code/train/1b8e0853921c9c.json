{"cell_type":{"5fec2993":"code","b62c58aa":"code","567e5ac1":"code","723b6b44":"code","c983da0c":"code","397528ec":"code","581550c4":"code","35bce0f6":"code","1b0aa2fc":"code","ceb616ef":"code","ebd44298":"code","34f2fa67":"code","cb37a952":"markdown","247931a7":"markdown","936ca52b":"markdown","4ac5df32":"markdown","f0beed4b":"markdown","d310c489":"markdown","df9f6d39":"markdown","e9d715ba":"markdown"},"source":{"5fec2993":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.linalg import eigh\nimport random\nfrom sklearn.manifold import TSNE","b62c58aa":"df = pd.read_csv('..\/input\/train.csv')\ndf.info()","567e5ac1":"print(df.head())\ndf = df[:1000]","723b6b44":"\"Seperating labels and feature vectors\"\nlabel = df.label\ndata = df.drop('label', axis = 1)","c983da0c":"def print_index(id):\n    idx = id\n    grid_data = data.iloc[idx].values.reshape(28,28)\n    plt.imshow(grid_data, interpolation = None, cmap = 'gray')\n    plt.title(label[idx])","397528ec":"print_index(random.randint(0, 1000)) ","581550c4":"standardized_data = StandardScaler().fit_transform(data)\nprint(standardized_data.shape)","35bce0f6":"cov_matrix = np.dot(standardized_data.T, standardized_data)\nvalues, vectors = eigh(cov_matrix, eigvals = (782, 783))\nnew_data = np.dot(vectors.T, standardized_data.T)\nprint(new_data.shape)\nxdash = np.vstack((new_data, label)).T\nprint(xdash.shape)","1b0aa2fc":"df = pd.DataFrame(data = xdash, columns = ('1st Principal', '2nd Principal', 'Labels'))\nsns.FacetGrid(df, hue = 'Labels', height = 7).map(plt.scatter, '1st Principal', '2nd Principal').add_legend()\nplt.title('PCA on MNIST')\nplt.show()","ceb616ef":"model = TSNE(n_components = 2, random_state = 0)\ntsne_model = model.fit_transform(standardized_data)","ebd44298":"tsne_data = np.vstack((tsne_model.T, label)).T\n# tsne_data.shape\n# labels.shape\ntse_df = pd.DataFrame(data= tsne_data, columns=('Dim_1', 'Dim_2', 'Labels'))","34f2fa67":"sns.FacetGrid(tse_df, hue = 'Labels', height = 6).map(plt.scatter, 'Dim_1', 'Dim_2').add_legend()\nplt.show()","cb37a952":"## 4. Visualizing in 2D space. ","247931a7":"We have 28x28 px images flattened into 784 px per datapoint. hence for each datapoint we have 784 columns. \nlabel field is the class attribute for which numeric digit this image belongs to. ","936ca52b":"It is visible that t-SNE performs much better dimensionality reduction as the clusters formed in PCA are very sparse but in t-SNE they are much closer.","4ac5df32":"## 6. t-SNE :\nt-SNE, stands for t distribution Stochastic Neighborhood Embedding, is a state of the art technique used tor dimensionality reduction and visualizing higher dimension data easily. ","f0beed4b":"## 1. Loading Data ","d310c489":"## 3. Column Standardization : \nData preprocessing such that the mean of each feature vector lies at the origin and standard deviation of each feature vector is 1. ","df9f6d39":"## 4. PCA Mathematics : \n1. Finding Co variance matrix for the fiven feature matrix as X<sup>T<\/sup>X.\n2. Since we are going from 784 dimensions to 2 dimensions, we only need highest 2 eigen values and vectors(V). \n3. Data matrix in 2 dimensions will be equal to X<sup>'<\/sup><sub>i<\/sub> = X<sup>T<\/sup><sub>i<\/sub>V.","e9d715ba":"## 2. Visualizing Data \nMaking this function to show random datapoint and it corresponding value. "}}