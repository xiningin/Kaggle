{"cell_type":{"903be37e":"code","cac896bc":"code","7ca7b3a2":"code","772a649e":"code","c3dcd277":"code","4d1dc558":"code","73ba6593":"code","8bb39543":"code","454f1ed6":"code","7fdbf81a":"code","c0cad9c4":"code","b77f5a6c":"code","ae84096c":"code","85d7e096":"code","64ff88d2":"code","6d079003":"code","38e8ef81":"code","9feba840":"code","764729e1":"code","7cbb9a05":"code","ca28fbfa":"code","68d1ef0a":"code","3b578d02":"code","426d3997":"code","c41859ce":"code","43973b61":"code","0c861e1d":"code","f4fe3277":"code","67d6babf":"markdown"},"source":{"903be37e":"import pandas as pd","cac896bc":"mall_df = pd.read_csv (\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","7ca7b3a2":"mall_df","772a649e":"mall_df.isnull().values.ravel().sum()","c3dcd277":"mall_df.isna().sum()","4d1dc558":"mall_df_0 = pd.get_dummies(mall_df)","73ba6593":"corr= mall_df_0.corr()\ncorr","8bb39543":"import seaborn as sns","454f1ed6":"sns.heatmap(corr, linewidths = 0.5, annot=True, center=0, cmap=\"YlGnBu\")","7fdbf81a":"mall_df.describe()","c0cad9c4":"sns.pairplot(mall_df)","b77f5a6c":"def outliers (mall_df):\n    import numpy as np\n    import statistics as sts\n\n    for i in mall_df.describe().columns:\n        No = np.array(mall_df[i])\n        p=[]\n        Q1 = mall_df[i].quantile(0.25)\n        Q3 = mall_df[i].quantile(0.75)\n        IQR = Q3 - Q1\n        LTV= Q1 - (1.5 * IQR)\n        UTV= Q3 + (1.5 * IQR)\n        for j in No:\n            if j <= LTV or j>=UTV:\n                p.append(sts.median(No))\n            else:\n                p.append(j)\n        mall_df[i]=p\n    return mall_df","ae84096c":"mall_df_out = outliers(mall_df)","85d7e096":"mall_df_out","64ff88d2":"mall = mall_df_out.iloc[:, [3, 4]].values","6d079003":"mall","38e8ef81":"from sklearn.cluster import KMeans","9feba840":"wcss = []\nfor i in range(1, 11):\n    model_km = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    model_km.fit(mall)\n    wcss.append(model_km.inertia_)","764729e1":"wcss","7cbb9a05":"wcss_df = pd.DataFrame(wcss)\nwcss_df","ca28fbfa":"import matplotlib.pyplot as plt","68d1ef0a":"plt.plot(wcss_df)\nplt.title('The Elbow Method', fontsize = 20)\nplt.xlabel('No. of Clusters')\nplt.ylabel('wcss')","3b578d02":"import scipy.cluster.hierarchy as sch","426d3997":"dendrogram = sch.dendrogram(sch.linkage(mall[0:10], method = 'single'))\nplt.title('Dendrogram')\nplt.xlabel('Customers')\nplt.ylabel('Ecuclidean Distance')\nplt.show()","c41859ce":"model_kmns = KMeans(n_clusters= 5, init='k-means++', random_state=0)","43973b61":"predict = model_kmns.fit_predict(mall)","0c861e1d":"predict","f4fe3277":"plt.scatter(mall[predict == 0, 0], mall[predict == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(mall[predict == 1, 0], mall[predict == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(mall[predict == 2, 0], mall[predict == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(mall[predict == 3, 0], mall[predict == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(mall[predict == 4, 0], mall[predict == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(model_kmns.cluster_centers_[:, 0], model_kmns.cluster_centers_[:, 1], s = 100, c = 'yellow', label = 'Centroids')\nplt.title('Customers clusters')\nplt.xlabel('Annual Income')\nplt.ylabel('Spending Score')\nplt.legend()\nplt.show()","67d6babf":"**Dendogram**"}}