{"cell_type":{"395e46c8":"code","7777642e":"code","e48e0c08":"code","91cf45eb":"code","4e8ab484":"code","469b6e44":"code","61e39b7b":"code","c03777af":"code","78c31cc5":"code","79317edf":"code","6251dd11":"code","4f757eea":"code","91f94a0d":"code","3c29f8a5":"code","02cc7640":"code","6372fc98":"code","77aa23cc":"code","78762c7c":"code","28182ab9":"code","366a23d6":"code","33c7d122":"code","320d70e6":"code","3c4d9ef2":"code","958fd1d8":"markdown","cada0372":"markdown","a3a57b8f":"markdown","066fabde":"markdown","1a6105c4":"markdown","64d7a908":"markdown","339f0daa":"markdown","b6f2d925":"markdown","96a52633":"markdown","a710ef1f":"markdown","84ff1006":"markdown","81ffd163":"markdown","1b0e0a45":"markdown","e37b8513":"markdown","d67d737f":"markdown","6819547d":"markdown","27693121":"markdown"},"source":{"395e46c8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7777642e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e48e0c08":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\")","91cf45eb":"train","4e8ab484":"test","469b6e44":"submission","61e39b7b":"sns.displot(train.target)","c03777af":"train.target.value_counts()","78c31cc5":"target = train.target\n\ntrain_copy = train.copy()\n\ncombi = train_copy.drop('target', axis=1).append(test)\ncombi","79317edf":"combi.isnull().sum().sum()","6251dd11":"combi.info()","4f757eea":"combi.describe()","91f94a0d":"combi.drop('id', axis=1, inplace=True)\ncombi","3c29f8a5":"combi = (combi - combi.min()) \/ (combi.max() - combi.min())\ncombi","02cc7640":"#combi = (combi - combi.mean()) \/ combi.std()\n#combi","6372fc98":"y = target\nX = combi[: len(train)]\nX_test = combi[len(train) :]","77aa23cc":"from sklearn.feature_selection import SelectPercentile, chi2\n\ntransformer = SelectPercentile(chi2, percentile=25)\n\nX = transformer.fit_transform(X, y)\nX_test = transformer.transform(X_test)\n\nX.shape, X_test.shape","78762c7c":"from sklearn.model_selection import train_test_split\n\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.10, random_state=42)\nX_train.shape, X_val.shape, y_train.shape, y_val.shape","28182ab9":"from sklearn.linear_model import LogisticRegressionCV\n\nmodel = LogisticRegressionCV(Cs=50, cv=5, random_state=42).fit(X_train, y_train)\nprint(model.score(X_train, y_train))","366a23d6":"y_pred = model.predict(X_val)\nprint(model.score(X_val, y_val))","33c7d122":"from sklearn.metrics import confusion_matrix\n\nprint(confusion_matrix(y_val, y_pred))","320d70e6":"prediction = model.predict(X_test)","3c4d9ef2":"submission.target = prediction\n\nsubmission.to_csv('submission.csv', index=False)\nsubmission = pd.read_csv(\"submission.csv\")\nsubmission\n","958fd1d8":"Analyse combi","cada0372":"Drop target and create combined dataframe","a3a57b8f":"Import, load and read","066fabde":"Split","1a6105c4":"Normalise","64d7a908":"Define X, y and X_test","339f0daa":"Drop ID because it adds no value to prediction","b6f2d925":"Confusion matrix","96a52633":"For this competition, you will be predicting a binary target based on 100 feature columns given in the data. All columns are continuous.\n\nThe data is synthetically generated by a GAN that was trained on a real-world dataset used to identify spam emails via various extracted features from the email.","a710ef1f":"Predict on validation set","84ff1006":"Standardise","81ffd163":"Check for null values","1b0e0a45":"Prepare prediction for submission","e37b8513":"Predict on X_test","d67d737f":"Feature selection","6819547d":"Analyse target","27693121":"Select model"}}