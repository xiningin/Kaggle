{"cell_type":{"5d1eac64":"code","b937d069":"code","9f6e7442":"code","4499aea4":"code","e6f5eac7":"code","e0593a55":"code","ceb6e200":"code","90ae6b77":"code","9804b053":"code","44db3de0":"code","d02f3df7":"code","bf8d371c":"code","a9a87324":"code","66dc0e6d":"code","98be2a99":"code","fa67feaa":"code","610f838a":"code","d5fc1cdd":"code","c481988e":"code","f1f7a881":"code","4de1ca69":"markdown","fb26cfb8":"markdown","61e22c73":"markdown","63652788":"markdown","36e366aa":"markdown","f784955c":"markdown","43800930":"markdown","dbab6357":"markdown","bb151d9f":"markdown","bbead831":"markdown","01088aa6":"markdown","369fb5ae":"markdown","9e7c8b62":"markdown","bd7bffde":"markdown","25a17a32":"markdown","1393d17f":"markdown","ea052312":"markdown","e5cebf0d":"markdown"},"source":{"5d1eac64":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b937d069":"#reading data from csv file\ndata=pd.read_csv('\/kaggle\/input\/wine-quality\/winequalityN.csv')\nprint(data.head())","9f6e7442":"data.info()","4499aea4":"dummies=pd.get_dummies(data['type'])\ndata=pd.concat([dummies,data],axis=1)\n#1st column is of type,not required\ndata= data.drop('type', 1)\nprint(data.head())","e6f5eac7":"data.isna().sum()","e0593a55":"data=data.apply(lambda x: x.fillna(x.mean(),axis=0))\ndata.isna().sum()","ceb6e200":"import seaborn as sns\ncorr=data.corr(method='pearson')\n#using heatmap to plot correlation\nsns.heatmap(corr,cmap=\"YlGnBu\",annot=True)","90ae6b77":"#coorelation for density with quality is minimum hence dropping it\ndata= data.drop('density', 1)","9804b053":"sns.pairplot(data)","44db3de0":"X = data.iloc[:, :-1].values\ny = data.iloc[:,12].values","d02f3df7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","bf8d371c":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","a9a87324":"from sklearn.neighbors import KNeighborsClassifier\nKNNclassifier=KNeighborsClassifier()\nKNNclassifier.fit(X_train,y_train)\nKNNpredict=KNNclassifier.predict(X_test)","66dc0e6d":"from sklearn.svm import SVC\nSVMlinear=SVC(kernel='linear')\nSVMlinear.fit(X_train,y_train)\nSVMlinear_predict=SVMlinear.predict(X_test)","98be2a99":"from sklearn.svm import SVC\nSVMrbf=SVC(kernel='rbf')\nSVMrbf.fit(X_train,y_train)\nSVMrbf_predict=SVMrbf.predict(X_test)","fa67feaa":"from sklearn.svm import SVC\nSVMpoly=SVC(kernel='poly')\nSVMpoly.fit(X_train,y_train)\nSVMpoly_predict=SVMpoly.predict(X_test)","610f838a":"from sklearn.naive_bayes import GaussianNB\nNB=GaussianNB()\nNB.fit(X_train,y_train)\nNB_predict=NB.predict(X_test)","d5fc1cdd":"from sklearn.tree import DecisionTreeClassifier\nDecisionTree=DecisionTreeClassifier(criterion='entropy',random_state=0)\nDecisionTree.fit(X_train,y_train)\nDecisionTree_predict=DecisionTree.predict(X_test)","c481988e":"from sklearn.ensemble import RandomForestClassifier\nRFC=RandomForestClassifier(n_estimators=12,criterion='entropy',random_state=0)\nRFC.fit(X_train,y_train)\nRFC_predict=RFC.predict(X_test)","f1f7a881":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy of KNN Classifier\",accuracy_score(y_test,KNNpredict)*100)\nprint(\"Accuracy of SVM Classifier(kernel=linear))\",accuracy_score(y_test,SVMlinear_predict)*100)\nprint(\"Accuracy of SVM Classifier(kernel=rbf)\",accuracy_score(y_test,SVMrbf_predict)*100)\nprint(\"Accuracy of SVM Classifier(kernel=poly)\",accuracy_score(y_test,SVMpoly_predict)*100)\nprint(\"Accuracy of naive Bayes Classifier\",accuracy_score(y_test,NB_predict)*100)\nprint(\"Accuracy of Decision Tree Classifier\",accuracy_score(y_test,DecisionTree_predict)*100)\nprint(\"Accuracy of Random Forest Classifier\",accuracy_score(y_test,RFC_predict)*100)","4de1ca69":"**Creating Dummy variables for 'type' column**","fb26cfb8":"**SVM Kernel Model(kernel= 'rbf')**","61e22c73":"**KNN Model**","63652788":"**Filling Null Values with Mean **","36e366aa":"**SVM Kernel Model(kernel= 'poly')**","f784955c":"**Finding Null values in Each Column**","43800930":"**SVM Kernel Model(kernel= 'linear')**","dbab6357":"**Find co-relation of all the columns pairwise (Pearson Correlation)**","bb151d9f":"**Random Forest Model**","bbead831":"**Decision Tress Model**","01088aa6":"**Accuracy Score For each model**","369fb5ae":"**Using pairplot to view type of data**","9e7c8b62":"[](http:\/\/)","bd7bffde":"**Scaling the model so that higher values dont impact the results**","25a17a32":"**Naive Bayes Model**","1393d17f":"**Splitting data into traning and test set**","ea052312":"**Creating X and Y matrices for model creation**","e5cebf0d":"**Wine Quality Classification Using Multiple Models**"}}