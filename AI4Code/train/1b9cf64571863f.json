{"cell_type":{"bfa88918":"code","c7b57549":"code","7249e1ed":"code","38270aed":"code","e71d7d8c":"code","3a85620e":"code","00d1509b":"code","d7979c5a":"code","0ee8d3ba":"code","b4b55bc2":"code","c9220b16":"code","b7abb580":"code","6152cbef":"code","b5234fc0":"code","f9edce0d":"code","c8866fd6":"code","45a25d3a":"code","d8d2f432":"code","1109d819":"code","444fa637":"code","e8a992a2":"code","6864d842":"code","8ed0e93b":"code","7a0f6df8":"code","554e59d6":"code","851a8a91":"code","ecbf3b7f":"code","0bb79667":"code","27255c02":"code","fa0ddbbf":"code","4cef2811":"code","456ef6de":"code","cfb48a05":"code","4a25c959":"code","98fa7d5c":"code","324b5aed":"code","7ddab5b8":"code","38ceabeb":"code","ecafb83f":"code","86db8c9b":"code","a04f93ae":"code","74f1a395":"code","b44801a0":"code","202d696e":"code","5f8c6e5e":"code","2daf86f3":"code","47f28faf":"code","e157250f":"code","9c3e70e2":"code","5964bb0f":"code","cb02915b":"code","1b6f5786":"code","077f979b":"code","781e9dbc":"code","91d68920":"code","9fdfab94":"code","eafc7c2d":"code","02a6da62":"code","c660ffd0":"code","5a4fe220":"code","2cde19fb":"code","3fb10dee":"code","c14d53d7":"code","a3979982":"code","450d5410":"code","e3f8bdb8":"code","01e3cf2c":"code","587e2dee":"code","a2099381":"code","a405947b":"code","71580751":"code","9ae650b0":"code","301ebc4e":"code","51828dd5":"code","bb252520":"code","d3ff95e8":"code","96cfa757":"code","98b1d43e":"code","8f2cfdcb":"code","eaaf9849":"code","d0de364a":"code","800d2abd":"code","d8ab45e6":"code","19b77dae":"code","94db6b18":"code","39b67ed8":"code","3d1f9a17":"markdown","911900ca":"markdown","38f62fa7":"markdown"},"source":{"bfa88918":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import svm\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split","c7b57549":"df = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","7249e1ed":"df.head()","38270aed":"df.shape","e71d7d8c":"df.info()","3a85620e":"df.describe()","00d1509b":"df['DEATH_EVENT'].value_counts()","d7979c5a":"sns.countplot(df['DEATH_EVENT'])\nplt.title('Death Counts')","0ee8d3ba":"df['anaemia'].value_counts()","b4b55bc2":"sns.countplot(df['anaemia'])\nplt.title(\"Anaemia Count\")","c9220b16":"df['diabetes'].value_counts()","b7abb580":"sns.countplot(df['diabetes'])\nplt.title('Diabetes Count')","6152cbef":"df['high_blood_pressure'].value_counts()","b5234fc0":"sns.countplot(df['high_blood_pressure'])\nplt.title('High Blood Pressure Count')","f9edce0d":"fig, ax =plt.subplots(ncols=5, figsize = (15,3))\nsns.countplot(df['anaemia'], ax=ax[0])\nsns.countplot(df['diabetes'], ax=ax[1])\nsns.countplot(df['high_blood_pressure'], ax=ax[2])\nsns.countplot(df['sex'], ax=ax[3])\nsns.countplot(df['smoking'], ax=ax[4])\nfig.show()","c8866fd6":"df['age'].hist(bins = 15, color = 'c')\nplt.title(\"Age Histogram\")","45a25d3a":"df['creatinine_phosphokinase'].hist(bins = 30, color = 'c')\nplt.title(\"Creatinine Phosphokinase Histogram\")","d8d2f432":"df['ejection_fraction'].hist(bins = 13, color = 'c')\nplt.title(\"Ejection Fraction Histogram\")","1109d819":"df['platelets'].hist(bins = 10, color = 'c')\nplt.title(\"Platelets Histogram\")","444fa637":"df['serum_creatinine'].hist(bins = 30, color = 'c')\nplt.title(\"Serum Creatinine Histogram\")","e8a992a2":"df['serum_sodium'].hist(bins = 30, color = 'c')\nplt.title(\"Serum Sodium Histogram\")","6864d842":"df['time'].hist(bins = 30, color = 'c')\nplt.title(\"Time Histogram\")","8ed0e93b":"corr = df.corr()\ncorr","7a0f6df8":"fig, ax = plt.subplots(figsize=(9,9))\nsns.heatmap(corr, \n        xticklabels=corr.columns,\n        yticklabels=corr.columns,\n        vmin = -1.0, vmax = 1.0,\n        center = 0, annot = False)","554e59d6":"X = df.drop([\"DEATH_EVENT\"], axis = 1)","851a8a91":"y = df['DEATH_EVENT']","ecbf3b7f":"from sklearn.pipeline import Pipeline","0bb79667":"rf = RandomForestClassifier()","27255c02":"scaler = MinMaxScaler()","fa0ddbbf":"rf_pipe = Pipeline([('Scaler', scaler), ('RandomForest', rf)])","4cef2811":"rf_params = {'RandomForest__n_estimators': [100, 200, 600],\n             'RandomForest__max_features': [3,5,6]\n             }","456ef6de":"from sklearn.model_selection import GridSearchCV","cfb48a05":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state = 9)","4a25c959":"rf_grid = GridSearchCV(rf_pipe, param_grid = rf_params, cv = 8, scoring = \"accuracy\")\nrf_grid.fit(X_train, y_train)","98fa7d5c":"rf_grid.cv_results_\nrf_grid_results = pd.DataFrame(rf_grid.cv_results_)","324b5aed":"rf_grid_results","7ddab5b8":"rf_grid.best_score_","38ceabeb":"rf_grid.best_params_","ecafb83f":"rf_pred = rf_grid.predict(X_test)","86db8c9b":"rf_acc = accuracy_score(y_test, rf_pred)\nrf_acc","a04f93ae":"rf_conf = confusion_matrix(y_test, rf_pred)\nrf_conf","74f1a395":"rf_conf = pd.DataFrame(data = rf_conf, columns = [['Pred:No Failure', 'Pred: Failure']], index = [['Act: No Failure', 'Act: Failure']])","b44801a0":"sns.heatmap(rf_conf, annot = True)","202d696e":"rf_fn= rf_conf.iloc[1,0]\nrf_fn","5f8c6e5e":"rf_tp = rf_conf.iloc[1,1]\nrf_tp","2daf86f3":"rf_prec = rf_tp\/(rf_fn + rf_tp)\nrf_prec","47f28faf":"svc = svm.SVC()","e157250f":"svc_pipe = Pipeline([('Scaler', scaler), ('svc', svc )])","9c3e70e2":"gamma_range = range(1,10)","5964bb0f":"c_range = range(1,10)","cb02915b":"svc_params = dict(svc__gamma = gamma_range, svc__C = c_range)","1b6f5786":"svc_grid = GridSearchCV(svc_pipe, param_grid = svc_params, cv = 8, scoring = \"accuracy\", n_jobs=-1)","077f979b":"svc_grid.fit(X_train, y_train)","781e9dbc":"svc_results = pd.DataFrame(svc_grid.cv_results_)","91d68920":"svc_results","9fdfab94":"svc_grid.best_score_","eafc7c2d":"svc_grid.best_params_","02a6da62":"svc_pred = svc_grid.predict(X_test)","c660ffd0":"svc_acc = accuracy_score(y_test, svc_pred)\nsvc_acc","5a4fe220":"svc_conf = confusion_matrix(y_test, svc_pred)\nsvc_conf","2cde19fb":"svc_conf = pd.DataFrame(data = svc_conf, columns = [['Pred:No Failure', 'Pred: Failure']], index = [['Act: No Failure', 'Act: Failure']])","3fb10dee":"sns.heatmap(svc_conf, annot = True)","c14d53d7":"svc_fn = svc_conf.iloc[1,0]\nsvc_fn","a3979982":"svc_tp = svc_conf.iloc[1,1]\nsvc_tp","450d5410":"svc_prec = svc_tp\/(svc_tp + svc_fn)\nsvc_prec","e3f8bdb8":"mlp = MLPClassifier()","01e3cf2c":"mlp_pipe = Pipeline([('scaler', scaler), ('mlp', mlp)])","587e2dee":"mlp_params = {'mlp__solver': ['sgd'],\n              'mlp__hidden_layer_sizes': [(10,10,10),(15,15,15),(20,20,20),(30,30,30),(40,40,40)],\n              'mlp__max_iter': [2000,6000,8000,10000]\n             }","a2099381":"mlp_grid = GridSearchCV(mlp_pipe, param_grid = mlp_params, cv=8, scoring = \"accuracy\", n_jobs=-1)","a405947b":"mlp_grid.fit(X_train, y_train)","71580751":"mlp_results = pd.DataFrame(mlp_grid.cv_results_)","9ae650b0":"mlp_results","301ebc4e":"mlp_grid.best_score_","51828dd5":"mlp_grid.best_params_","bb252520":"mlp_pred = mlp_grid.predict(X_test)","d3ff95e8":"mlp_acc = accuracy_score(y_test, mlp_pred)\nmlp_acc","96cfa757":"mlp_conf = confusion_matrix(y_test, mlp_pred)\nmlp_conf","98b1d43e":"mlp_conf = pd.DataFrame(data = mlp_conf, columns = [['Pred:No Failure', 'Pred: Failure']], index = [['Act: No Failure', 'Act: Failure']])","8f2cfdcb":"sns.heatmap(mlp_conf, annot = True)","eaaf9849":"mlp_fn = mlp_conf.iloc[1,0]\nmlp_fn","d0de364a":"mlp_tp = mlp_conf.iloc[1,1]\nmlp_tp","800d2abd":"mlp_prec = mlp_tp\/(mlp_tp + mlp_fn)\nmlp_prec","d8ab45e6":"results = pd.DataFrame({'Model': ['Random Forest',\n                                  'Support Vector Machine',\n                                  'Artifical Neural Network'],\n                        'Accuracy': [rf_acc,\n                                     svc_acc,\n                                     mlp_acc],\n                        'Precision': [rf_prec,\n                                    svc_prec,\n                                    mlp_prec]\n                       })","19b77dae":"results = results.set_index(\"Model\")","94db6b18":"results = results.sort_values(by=\"Precision\", ascending = False)","39b67ed8":"ax = results.plot(kind = 'bar', title = \"Model Results\", figsize = (7,5), legend = True, fontsize = 12)","3d1f9a17":"# Support Vector Machine","911900ca":"# Artificial Neural Network","38f62fa7":"# Random Forest"}}