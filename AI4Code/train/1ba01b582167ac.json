{"cell_type":{"c18b67c3":"code","f5e13a34":"code","3a5db6c3":"markdown","145a2501":"markdown","c7ce4908":"markdown","a5b593f9":"markdown","b2b1d9c5":"markdown","1d3a65cf":"markdown","3d321fea":"markdown","751126d6":"markdown","1e18fda9":"markdown","f1be9084":"markdown","6d8a26d3":"markdown","ba4a0327":"markdown","76e201ce":"markdown","b3fa6841":"markdown"},"source":{"c18b67c3":"!python3 -m pip install -U pip\n!python3 -m pip install -U datatable\n!wget https:\/\/raw.githubusercontent.com\/vopani\/datatableton\/main\/data\/datatableton_sample.zip","f5e13a34":"import datatable as dt","3a5db6c3":"**Exercise 64: Join `orders_all` to `returns` on `Order ID` and assign it to `sales`**","145a2501":"**Exercise 61: Read all the files together from `datatableton_sample.zip`, assign the list of frames to `data` and print the name of each file**","c7ce4908":"**Exercise 69: Display the Categories that had orders in either of the three months but never together**","a5b593f9":"**Exercise 65: Update `users` by joining `sales` to it on `Return ID` and `Category ID`**","b2b1d9c5":"**Exercise 67: Display the Categories that had orders in each of the three months**","1d3a65cf":"<center>\n    <h1>DatatableTon<\/h1>\n    \ud83d\udcaf datatable exercises\n    <br>\n    <br>\n    <a href='https:\/\/github.com\/vopani\/datatableton\/blob\/master\/LICENSE'>\n        <img src='https:\/\/img.shields.io\/badge\/license-Apache%202.0-blue.svg?logo=apache'>\n    <\/a>\n    <a href='https:\/\/github.com\/vopani\/datatableton'>\n        <img src='https:\/\/img.shields.io\/github\/stars\/vopani\/datatableton?color=yellowgreen&logo=github'>\n    <\/a>\n    <a href='https:\/\/twitter.com\/vopani'>\n        <img src='https:\/\/img.shields.io\/twitter\/follow\/vopani'>\n    <\/a>\n<\/center>","3d321fea":"<center>\n    This is Set 7: Multiple Frames (Exercises 61-70) of <b>DatatableTon<\/b>: <i>\ud83d\udcaf datatable exercises<\/i>\n    <br>\n    You can find all the exercises and solutions on <a href=\"https:\/\/github.com\/vopani\/datatableton#exercises-\">GitHub<\/a>\n<\/center>","751126d6":"**Prerequisites**\n* The `datatable` package should be upgraded to the latest version (or v1.0.0+).\n* The sample dataset [datatableton_sample.zip](https:\/\/github.com\/vopani\/datatableton\/blob\/main\/data\/datatableton_sample.zip) will be used for the exercises.","1e18fda9":"**Exercise 68: Display the Categories that had orders only in Jan but not in Feb and Mar**","f1be9084":"**Exercise 63: Append all rows of `orders_jan`, `orders_feb` and `orders_mar` into a single frame and assign it to `orders_all`**","6d8a26d3":"**Exercise 66: Display the Categories that had orders in Jan or Mar**","ba4a0327":"**Exercise 70: One-hot encode the column `Region` in `users`, assign it to `ohe_region` and append it back to `users`**","76e201ce":"**Exercise 62: Assign the frames `orders_jan.csv`, `orders_feb.csv`, `orders_mar.csv`, `returns.csv` and `users.csv` in `data` to individual frames `orders_jan`, `orders_feb`, `orders_mar`, `returns` and `users` respectively and display the head of each frame**","b3fa6841":"\u2705 This completes Set 7: Multiple Frames (Exercises 61-70) of **DatatableTon**: *\ud83d\udcaf datatable exercises*\n\n#### Set 08 \u2022 Time Series \u2022 Intermediate \u2022 Exercises 71-80\n\n| Style | Colab | Kaggle | Binder | GitHub |\n| ----- | ----- | ------ | ------ | ------ |\n| Exercises | [![Open in Colab](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20Colab&labelColor=grey&color=blue&logo=google-colab)](https:\/\/colab.research.google.com\/github\/vopani\/datatableton\/blob\/main\/notebooks\/08_time_series_exercises.ipynb) | [![Open in Kaggle](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20Kaggle&labelColor=grey&color=blue&logo=kaggle)](https:\/\/www.kaggle.com\/rohanrao\/datatableton-time-series-exercises) | [![Open in Binder](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20Binder&labelColor=grey&color=blue&logo=data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFkAAABZCAMAAABi1XidAAAB8lBMVEX\/\/\/9XmsrmZYH1olJXmsr1olJXmsrmZYH1olJXmsr1olJXmsrmZYH1olL1olJXmsr1olJXmsrmZYH1olL1olJXmsrmZYH1olJXmsr1olL1olJXmsrmZYH1olL1olJXmsrmZYH1olL1olL0nFf1olJXmsrmZYH1olJXmsq8dZb1olJXmsrmZYH1olJXmspXmspXmsr1olL1olJXmsrmZYH1olJXmsr1olL1olJXmsrmZYH1olL1olLeaIVXmsrmZYH1olL1olL1olJXmsrmZYH1olLna31Xmsr1olJXmsr1olJXmsrmZYH1olLqoVr1olJXmsr1olJXmsrmZYH1olL1olKkfaPobXvviGabgadXmsqThKuofKHmZ4Dobnr1olJXmsr1olJXmspXmsr1olJXmsrfZ4TuhWn1olL1olJXmsqBi7X1olJXmspZmslbmMhbmsdemsVfl8ZgmsNim8Jpk8F0m7R4m7F5nLB6jbh7jbiDirOEibOGnKaMhq+PnaCVg6qWg6qegKaff6WhnpKofKGtnomxeZy3noG6dZi+n3vCcpPDcpPGn3bLb4\/Mb47UbIrVa4rYoGjdaIbeaIXhoWHmZYHobXvpcHjqdHXreHLroVrsfG\/uhGnuh2bwj2Hxk17yl1vzmljzm1j0nlX1olL3AJXWAAAAbXRSTlMAEBAQHx8gICAuLjAwMDw9PUBAQEpQUFBXV1hgYGBkcHBwcXl8gICAgoiIkJCQlJicnJ2goKCmqK+wsLC4usDAwMjP0NDQ1NbW3Nzg4ODi5+3v8PDw8\/T09PX29vb39\/f5+fr7+\/z8\/Pz9\/v7+zczCxgAABC5JREFUeAHN1ul3k0UUBvCb1CTVpmpaitAGSLSpSuKCLWpbTKNJFGlcSMAFF63iUmRccNG6gLbuxkXU66JAUef\/9LSpmXnyLr3T5AO\/rzl5zj137p136BISy44fKJXuGN\/d19PUfYeO67Znqtf2KH33Id1psXoFdW30sPZ1sMvs2D060AHqws4FHeJojLZqnw53cmfvg+XR8mC0OEjuxrXEkX5ydeVJLVIlV0e10PXk5k7dYeHu7Cj1j+49uKg7uLU61tGLw1lq27ugQYlclHC4bgv7VQ+TAyj5Zc\/UjsPvs1sd5cWryWObtvWT2EPa4rtnWW3JkpjggEpbOsPr7F7EyNewtpBIslA7p43HCsnwooXTEc3UmPmCNn5lrqTJxy6nRmcavGZVt\/3Da2pD5NHvsOHJCrdc1G2r3DITpU7yic7w\/7Rxnjc0kt5GC4djiv2Sz3Fb2iEZg41\/ddsFDoyuYrIkmFehz0HR2thPgQqMyQYb2OtB0WxsZ3BeG3+wpRb1vzl2UYBog8FfGhttFKjtAclnZYrRo9ryG9uG\/FZQU4AEg8ZE9LjGMzTmqKXPLnlWVnIlQQTvxJf8ip7VgjZjyVPrjw1te5otM7RmP7xm+sK2Gv9I8Gi++BRbEkR9EBw8zRUcKxwp73xkaLiqQb+kGduJTNHG72zcW9LoJgqQxpP3\/Tj\/\/c3yB0tqzaml05\/+orHLksVO+95kX7\/7qgJvnjlrfr2Ggsyx0eoy9uPzN5SPd86aXggOsEKW2Prz7du3VID3\/tzs\/sSRs2w7ovVHKtjrX2pd7ZMlTxAYfBAL9jiDwfLkq55Tm7ifhMlTGPyCAs7RFRhn47JnlcB9RM5T97ASuZXIcVNuUDIndpDbdsfrqsOppeXl5Y+XVKdjFCTh+zGaVuj0d9zy05PPK3QzBamxdwtTCrzyg\/2Rvf2EstUjordGwa\/kx9mSJLr8mLLtCW8HHGJc2R5hS219IiF6PnTusOqcMl57gm0Z8kanKMAQg0qSyuZfn7zItsbGyO9QlnxY0eCuD1XL2ys\/MsrQhltE7Ug0uFOzufJFE2PxBo\/YAx8XPPdDwWN0MrDRYIZF0mSMKCNHgaIVFoBbNoLJ7tEQDKxGF0kcLQimojCZopv0OkNOyWCCg9XMVAi7ARJzQdM2QUh0gmBozjc3Skg6dSBRqDGYSUOu66Zg+I2fNZs\/M3\/f\/Grl\/XnyF1Gw3VKCez0PN5IUfFLqvgUN4C0qNqYs5YhPL+aVZYDE4IpUk57oSFnJm4FyCqqOE0jhY2SMyLFoo56zyo6becOS5UVDdj7Vih0zp+tcMhwRpBeLyqtIjlJKAIZSbI8SGSF3k0pA3mR5tHuwPFoa7N7reoq2bqCsAk1HqCu5uvI1n6JuRXI+S1Mco54YmYTwcn6Aeic+kssXi8XpXC4V3t7\/ADuTNKaQJdScAAAAAElFTkSuQmCC)](https:\/\/mybinder.org\/v2\/gh\/vopani\/datatableton\/main?filepath=notebooks%2F08_time_series_exercises.ipynb) | [![Open in GitHub](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20GitHub&labelColor=grey&color=blue&logo=github)](https:\/\/github.com\/vopani\/datatableton\/blob\/main\/notebooks\/08_time_series_exercises.ipynb) |\n| Solutions | [![Open in Colab](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20Colab&labelColor=grey&color=blue&logo=google-colab)](https:\/\/colab.research.google.com\/github\/vopani\/datatableton\/blob\/main\/notebooks\/08_time_series_solutions.ipynb) | [![Open in Kaggle](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20Kaggle&labelColor=grey&color=blue&logo=kaggle)](https:\/\/www.kaggle.com\/rohanrao\/datatableton-time-series-solutions) | [![Open in Binder](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20Binder&labelColor=grey&color=blue&logo=data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFkAAABZCAMAAABi1XidAAAB8lBMVEX\/\/\/9XmsrmZYH1olJXmsr1olJXmsrmZYH1olJXmsr1olJXmsrmZYH1olL1olJXmsr1olJXmsrmZYH1olL1olJXmsrmZYH1olJXmsr1olL1olJXmsrmZYH1olL1olJXmsrmZYH1olL1olL0nFf1olJXmsrmZYH1olJXmsq8dZb1olJXmsrmZYH1olJXmspXmspXmsr1olL1olJXmsrmZYH1olJXmsr1olL1olJXmsrmZYH1olL1olLeaIVXmsrmZYH1olL1olL1olJXmsrmZYH1olLna31Xmsr1olJXmsr1olJXmsrmZYH1olLqoVr1olJXmsr1olJXmsrmZYH1olL1olKkfaPobXvviGabgadXmsqThKuofKHmZ4Dobnr1olJXmsr1olJXmspXmsr1olJXmsrfZ4TuhWn1olL1olJXmsqBi7X1olJXmspZmslbmMhbmsdemsVfl8ZgmsNim8Jpk8F0m7R4m7F5nLB6jbh7jbiDirOEibOGnKaMhq+PnaCVg6qWg6qegKaff6WhnpKofKGtnomxeZy3noG6dZi+n3vCcpPDcpPGn3bLb4\/Mb47UbIrVa4rYoGjdaIbeaIXhoWHmZYHobXvpcHjqdHXreHLroVrsfG\/uhGnuh2bwj2Hxk17yl1vzmljzm1j0nlX1olL3AJXWAAAAbXRSTlMAEBAQHx8gICAuLjAwMDw9PUBAQEpQUFBXV1hgYGBkcHBwcXl8gICAgoiIkJCQlJicnJ2goKCmqK+wsLC4usDAwMjP0NDQ1NbW3Nzg4ODi5+3v8PDw8\/T09PX29vb39\/f5+fr7+\/z8\/Pz9\/v7+zczCxgAABC5JREFUeAHN1ul3k0UUBvCb1CTVpmpaitAGSLSpSuKCLWpbTKNJFGlcSMAFF63iUmRccNG6gLbuxkXU66JAUef\/9LSpmXnyLr3T5AO\/rzl5zj137p136BISy44fKJXuGN\/d19PUfYeO67Znqtf2KH33Id1psXoFdW30sPZ1sMvs2D060AHqws4FHeJojLZqnw53cmfvg+XR8mC0OEjuxrXEkX5ydeVJLVIlV0e10PXk5k7dYeHu7Cj1j+49uKg7uLU61tGLw1lq27ugQYlclHC4bgv7VQ+TAyj5Zc\/UjsPvs1sd5cWryWObtvWT2EPa4rtnWW3JkpjggEpbOsPr7F7EyNewtpBIslA7p43HCsnwooXTEc3UmPmCNn5lrqTJxy6nRmcavGZVt\/3Da2pD5NHvsOHJCrdc1G2r3DITpU7yic7w\/7Rxnjc0kt5GC4djiv2Sz3Fb2iEZg41\/ddsFDoyuYrIkmFehz0HR2thPgQqMyQYb2OtB0WxsZ3BeG3+wpRb1vzl2UYBog8FfGhttFKjtAclnZYrRo9ryG9uG\/FZQU4AEg8ZE9LjGMzTmqKXPLnlWVnIlQQTvxJf8ip7VgjZjyVPrjw1te5otM7RmP7xm+sK2Gv9I8Gi++BRbEkR9EBw8zRUcKxwp73xkaLiqQb+kGduJTNHG72zcW9LoJgqQxpP3\/Tj\/\/c3yB0tqzaml05\/+orHLksVO+95kX7\/7qgJvnjlrfr2Ggsyx0eoy9uPzN5SPd86aXggOsEKW2Prz7du3VID3\/tzs\/sSRs2w7ovVHKtjrX2pd7ZMlTxAYfBAL9jiDwfLkq55Tm7ifhMlTGPyCAs7RFRhn47JnlcB9RM5T97ASuZXIcVNuUDIndpDbdsfrqsOppeXl5Y+XVKdjFCTh+zGaVuj0d9zy05PPK3QzBamxdwtTCrzyg\/2Rvf2EstUjordGwa\/kx9mSJLr8mLLtCW8HHGJc2R5hS219IiF6PnTusOqcMl57gm0Z8kanKMAQg0qSyuZfn7zItsbGyO9QlnxY0eCuD1XL2ys\/MsrQhltE7Ug0uFOzufJFE2PxBo\/YAx8XPPdDwWN0MrDRYIZF0mSMKCNHgaIVFoBbNoLJ7tEQDKxGF0kcLQimojCZopv0OkNOyWCCg9XMVAi7ARJzQdM2QUh0gmBozjc3Skg6dSBRqDGYSUOu66Zg+I2fNZs\/M3\/f\/Grl\/XnyF1Gw3VKCez0PN5IUfFLqvgUN4C0qNqYs5YhPL+aVZYDE4IpUk57oSFnJm4FyCqqOE0jhY2SMyLFoo56zyo6becOS5UVDdj7Vih0zp+tcMhwRpBeLyqtIjlJKAIZSbI8SGSF3k0pA3mR5tHuwPFoa7N7reoq2bqCsAk1HqCu5uvI1n6JuRXI+S1Mco54YmYTwcn6Aeic+kssXi8XpXC4V3t7\/ADuTNKaQJdScAAAAAElFTkSuQmCC)](https:\/\/mybinder.org\/v2\/gh\/vopani\/datatableton\/main?filepath=notebooks%2F08_time_series_solutions.ipynb) | [![Open in GitHub](https:\/\/img.shields.io\/static\/v1?label=&message=Open%20in%20GitHub&labelColor=grey&color=blue&logo=github)](https:\/\/github.com\/vopani\/datatableton\/blob\/main\/notebooks\/08_time_series_solutions.ipynb) |\n\nYou can find all the exercises and solutions on [GitHub](https:\/\/github.com\/vopani\/datatableton#exercises-)"}}