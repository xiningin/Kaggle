{"cell_type":{"32c151ee":"code","fd18aaf1":"code","e8a05483":"markdown"},"source":{"32c151ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd18aaf1":"install.packages('tidyverse')\nlibrary(tidyverse)\ninstall.packages('dplyr')\nlibrary(dplyr)\ninstall.packages('ggplot2')\nlibrary(ggplot2)\n\ndaily_activity<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/dailyActivity_merged.csv')\nhead(daily_activity)\ncolnames(daily_activity)\nmin(daily_activity$Calories)\n\ndaily_sleep<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/sleepDay_merged.csv')\nhead(daily_sleep)\n\ndaily_steps<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/dailySteps_merged.csv')\nhead(daily_steps)\ncolnames(daily_steps)\nsummary(daily_steps)\nglimpse(daily_steps)\n\nminutes_sleep<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/minuteSleep_merged.csv')\nhead(minutes_sleep)\n\nmax(daily_sleep$TotalMinutesAsleep)\nmin(daily_sleep$TotalMinutesAsleep)\n\nmax(daily_steps$StepTotal)\nmin(daily_steps$StepTotal)\n\ndaily_steps%>%\n  count(daily_steps$StepTotal==0)\n\n\nfiltered_steps<-daily_steps%>%\n  filter(daily_steps$StepTotal>0)\nhead(filtered_steps)\nmin(filtered_steps$StepTotal)\n\nggplot(data=daily_sleep)+\n  geom_smooth(mapping=aes(x=Id,y=TotalMinutesAsleep))+\n  facet_wrap(~TotalTimeInBed)\n\nhead(filtered_steps)\ntail(filtered_steps)\nfiltered_steps%>%\n  count(filtered_steps$StepTotal==0)\n\nfiltered_steps%>%\n  group_by(filtered_steps$Id)\nhead(filtered_steps)\n\nsummary_filtered_steps<-filtered_steps%>%\n  group_by(Id)%>%\n  summarise(sum_steps=sum(StepTotal),avg_steps=mean(StepTotal),number_step_entries=length(StepTotal))\nhead(summary_filtered_steps)\ntail(summary_filtered_steps)\nhead(summary_filtered_steps$avg_steps)\n\nsummary_filtered_steps$step_level=case_when(\n  summary_filtered_steps$avg_steps>=10000 ~ 'Very Active',\n  summary_filtered_steps$avg_steps>=5000 ~ 'Mildly Active',\n  summary_filtered_steps$avg_steps>=1000 ~ 'Little Active',\n  summary_filtered_steps$avg_steps<1000 ~ 'Inactive'\n)\nggplot(data=summary_filtered_steps)+\n  geom_point(mapping=(aes(x=avg_steps,y=number_step_entries,color=step_level)))+\n  facet_wrap(~step_level)\nggplot(data=summary_filtered_steps)+\n  geom_smooth(mapping=(aes(x=number_step_entries,y=avg_steps)))\nsummary_sleep<-daily_sleep%>%\n  group_by(Id)%>%\n  summarise(sum_sleep_mins=sum(TotalMinutesAsleep),avg_sleep_mins=mean(TotalMinutesAsleep),number_sleep_entries=length(TotalMinutesAsleep))\n\nhead(summary_sleep)\nmax(daily_sleep$TotalMinutesAsleep)\nmin(daily_sleep$TotalMinutesAsleep)\n\nsummary_sleep$sleep_level=case_when(\n  summary_sleep$avg_sleep_mins>=480 ~ 'Well Rested',\n  summary_sleep$avg_sleep_mins>=360 ~ 'Moderately Rested',\n  summary_sleep$avg_sleep_mins>=240 ~ 'Poorly Rested',\n  summary_sleep$avg_sleep_mins<240 ~ 'Not Rested',\n)\nhead(summary_sleep)\n\nggplot(data=summary_sleep)+\n  geom_point(mapping=(aes(x=avg_sleep_mins,y=number_sleep_entries,color=sleep_level)))+\n  facet_wrap(~sleep_level)\nggplot(data=summary_sleep)+\n  geom_smooth(mapping=(aes(x=number_sleep_entries,y=avg_sleep_mins)))\n\n\nsleep_steps<-merge(summary_sleep,summary_filtered_steps,on='Id')\nhead(sleep_steps)\n\nggplot(data=sleep_steps)+\n  geom_bar(mapping=(aes(x=sleep_level,fill=step_level)))+\n  labs(title='Sleep Level vs Step Level')\n\nggplot(data=sleep_steps)+\n  geom_bar(mapping=(aes(x=step_level,fill=sleep_level)))+\n  labs(title='Step Level vs Sleep Level')\n\nggplot(data=sleep_steps)+\n  geom_line(mapping=(aes(x=avg_steps,y=avg_sleep_mins)))+\n  labs(title='Average Steps vs Average Sleep')\n\nggplot(data=sleep_steps)+\n  geom_line(mapping=(aes(x=avg_sleep_mins,y=avg_steps)))+\n  labs(title='Average Sleep vs Average Steps')\n\nggplot(data=sleep_steps)+\n  geom_line(mapping=(aes(x=avg_sleep_mins,y=avg_steps)))+\n  labs(title='Steps vs Sleep based on Sleep Level')+\n  facet_wrap(~step_level)\n  \n","e8a05483":"---\ntitle: \"Fitness Tracker Report\"\nauthor: \"Karan Saxena\"\ndate: \"01\/05\/2021\"\noutput: html_document\n---\n\n\n## Goal of this project\nThis project will identify trends in fitness tracker usage and recommend growth opportunities through specific marketing efforts of Leaf, a Bellabeat product. Findings will be presented to Cheif Creative Office, Founder and Marketing Analytics Team.\n \n \n## Deliverables\n 1. A clear summary of the business task\n 2. A description of all data sources used\n 3. Documentation of any cleaning or manipulation of data\n 4. A summary of analysis\n 5. Supporting visualizations and key findings\n 6. Top high-level content recommendations based on your analysis\n \n## Data Sources\n Data source provided by the company \n * Data from Mobius Kaggle file. Access data file [here](https:\/\/www.kaggle.com\/arashnic\/fitbit)\n * CSV files of data contains 30 observations from 2016-03-12 to 2016-05-12.\n\n```## Prepare environment ###\nInstall tiyverse, ggplot2 and dplyr packages.\n \n ```{r}\n install.packages('tidyverse')\n library(tidyverse)\n \n install.packages('ggplot2')\n library(ggplot2)\n \n install.packages('dplyr')\n library(dplyr)\n \n\n```\n### Downloaded datasets from Kaggle and uploaded into RStudio\nData files saved on GoogleDrive in project folder. The Leaf product tracks activity, sleep and steps so I uploaded 4 files.\n * dailyActivity_merged\n * dailySteps_merged\n * minuteSleep_merged\n * sleepDay_merged\n \n ```{r}\n daily_activity<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/dailyActivity_merged.csv')\n daily_sleep<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/sleepDay_merged.csv')\n daily_steps<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/dailySteps_merged.csv')\n minutes_sleep<-read.csv('C:\/Users\/Karan\/OneDrive\/Documents\/minuteSleep_merged.csv')\n ```\n ### Explore data sets to determine columns and data type. \n ```{r}\n head(daily_activity)\n colnames(daily_activity)\n \n head(minutes_sleep)\n colnames(minutes_sleep)\n str(minutes_sleep)\n \n head(daily_sleep)\n colnames(daily_sleep)\n ```\n \n \nCheck data in daily_steps data frame to see if there are unexpected large or small values.\n ```{r}\n max(daily_steps$StepTotal)\n min(daily_steps$StepTotal)\n \n max(daily_sleep$TotalMinutesAsleep)\n min(daily_sleep$TotalMinutesAsleep)\n ```\n The minimum time for sleep had some value, but the minimum steps recorded was 0 so I determined how many observations had 0 daily steps.\n ```{r}\n daily_steps %>% \n   count(daily_steps$StepTotal == 0) #77 observations had 0 steps\n ```\n \n \n Created data frame with summary of the daily_steps.csv file with 0 values removed. The summary includes sum of all steps, average steps and the number of step entries per Id.\n \n I assigned a rating of the activity levels in a new column called step_level. The levels of the activity rating are Very Active (10,000+ steps), Moderate Active (5,000-9,999 steps), Low Active (1,000-4,999 steps) and Inactive (below 1,000 steps).   \n ```{r}\n summary_filtered_steps <- daily_steps %>% \n   filter(StepTotal > 0) %>% \n   group_by(Id) %>% \n   summarize(sum_steps = sum(StepTotal), avg_steps = mean(StepTotal), number_step_entries = length(StepTotal))\n   summary_filtered_steps$step_level = case_when(\n       summary_filtered_steps$avg_steps >= 10000 ~ \"Very Active\",\n       summary_filtered_steps$avg_steps >= 5000 ~ \"Mildly Active\",\n       summary_filtered_steps$avg_steps >= 1000 ~ \"Low Active\",\n       summary_filtered_steps$avg_steps < 1000 ~ \"Inactive\"\n     )\n \n head(summary_filtered_steps)\n \n ```\n## Quick plot of step summary data\n  Scatter plot to see if there is a correlation of number of step entries and average steps. All users with   10,000 or more steps (Very Active) logged their entries more than 20 times. Users with at least 5,000 average steps had more entries than users with less than 5,000 steps. \n  ```{r}\n ggplot(data = summary_filtered_steps) +\n   geom_point(mapping = aes(x=avg_steps, y=number_step_entries, color = step_level))+\n   facet_wrap(~step_level)\n \n ```\n \n Summary of daily_sleep data frame using head() function to review data.\n ```{r}\n head(daily_sleep)\n ```\n \n Created data frame with summary of the daily_sleep. The summary includes sum of all minutes asleep, average sleep minutes and the number of sleep entries per Id.\n \n I assigned a rating of the sleep levels in a new column called sleep_level based on the minutes of sleep. The levels of the sleep rating are Well Rested (480 and above minutes), Moderately Rested (360-479 minutes), Poorly Rested (240-359 minutes) and Not Rested (below 240 minutes).   \n ```{r}\n summary_sleep <- daily_sleep %>% \n   group_by(Id) %>% \n   summarize(sum_sleep_mins = sum(TotalMinutesAsleep), avg_sleep_mins = mean(TotalMinutesAsleep), number_sleep_entries = length(TotalMinutesAsleep)) \n \n summary_sleep$sleep_level = case_when(\n     summary_sleep$avg_sleep_mins >= 480 ~ \"Well Rested\",\n     summary_sleep$avg_sleep_mins >= 360 ~ \"Moderately Rested\",\n     summary_sleep$avg_sleep_mins >= 240 ~ \"Poorly Rested\",\n     summary_sleep$avg_sleep_mins < 240 ~ \"Not Rested\"\n )\n \n head(summary_sleep)\n ```\n \n### Quick plot of sleep summary data\n Plot to see if there is a relationship between number of entries and average minutes of sleep. Those users with more than 10 entries had more minutes of sleep on average.\n ```{r}\n ggplot(data= summary_sleep)+\n   geom_smooth(mapping = aes(x = number_sleep_entries, y = avg_sleep_mins))\n \n ```\n \n\n### Created new data frame by merging Sleep summary data with Steps summary data by the common field \"Id\".\n ```{r}\n sleep_steps <- merge(summary_sleep, summary_filtered_steps, by = 'Id')\n head(sleep_steps)\n \n ```\n \n \n## Visualizations of summary data\nThe bar charts shows that the biggest group of users are moderately rested and moderately active.\n ```{r}\n ggplot(data = sleep_steps) +\n   geom_bar(mapping = aes(x=sleep_level, fill=step_level))+\n   labs(title='Sleep Level vs Step Level')\n ```\n \n ```{r}\n ggplot(data = sleep_steps) +\n   geom_bar(mapping = aes(x=step_level, fill=sleep_level))+\n   labs(title='Step Level vs Sleep Level')\n ```\n \n \n Plot to compare Average Steps to Average Sleep time and vice versa. I was expecting a stong positive coorelation between step and sleep, but that was not the case. This graph shows very little coorelation between the two factors. Higher minutes of sleep did not mean higher m=number of steps.\n ```{r}\n ggplot(data = sleep_steps) +\n   geom_line(mapping = aes(x=avg_sleep_mins, avg_steps))+\n   geom_smooth(mapping = aes(x=avg_sleep_mins, avg_steps))+\n   labs(title='Average Steps vs Average Sleep Time')\nggplot(data=sleep_steps)+\n  geom_line(mapping=(aes(x=avg_sleep_mins,y=avg_steps)))+\n  labs(title='Average Sleep vs Average Steps')\n \n ```\n \n \nSplit into activity levels, we can identify that users with more than 10,000 steps per day slept less than 400 minutes. The users walking between 5,000-10,000 steps slept between 360-480 minutes.\n ```{r}\n ggplot(data = sleep_steps) +\n   geom_line(mapping = aes(x=avg_sleep_mins, avg_steps))+\n   labs(title='Steps vs Sleep based on Sleep Level')+\n   facet_wrap(~step_level)\n ```\n \n## Summary\n **Limitations of Data** \n Due to small sample size, data from 5 years ago and a short span of observations. We are unable to determine which products were worn to track the data.\n \n 10% of the observations for steps were not tracked, but all of the users tracked sleep data which can be due to a design issue.\n \n There is not a correlation between increasing steps and increasing sleep. However, the data shows the majority of users between 5,000-10,000 steps slept between 360-480 minutes per night.  \n \n## Reccomendations\n\n In order to grow sales of the Leaf products, we can adjust the marketing efforts to track increase steps to a moderate level for better sleep. Since 10% of observations were missing for step tracking and all observations were complete for sleep, we need to look further into the reason for the missing values. It might be a design issue, a technical issue or an opportunity to market activity tracking as much as sleep tracking.\n\n\n"}}