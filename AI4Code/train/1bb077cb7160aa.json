{"cell_type":{"f898bfe9":"code","2f220e93":"code","891e5d15":"code","a30e3045":"code","8e40a516":"code","7859a223":"code","4aad88d1":"code","a40ffa38":"code","9312378e":"code","336d4536":"code","1f22ed43":"code","97277e83":"code","4ba9c6c4":"markdown","18a2c9fa":"markdown"},"source":{"f898bfe9":"from tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport shutil\nimport os\nimport keras","2f220e93":"train = pd.read_csv('..\/input\/plant-pathology-2021-fgvc8\/train.csv')\nprint(train.shape)\ntrain.head()","891e5d15":"seed = 32\ntarget_size = (380, 380)\n# target_size = (299, 299)\nbatch_size = 16\ntest_img = '..\/input\/plant-pathology-2021-fgvc8\/test_images'\nsubmission = pd.read_csv('..\/input\/plant-pathology-2021-fgvc8\/sample_submission.csv')\nsubmission.head()","a30e3045":"# import cv2\n# import numpy as np\n# def get_cut_image(image):\n#     img = cv2.blur(image,(3,3))\n#     copy = np.uint8(img)\n#     canny = cv2.Canny(copy, 145, 165)\n#     box = np.argwhere(canny>0)\n#     y1,x1 = box.min(axis=0)\n#     y2,x2 = box.max(axis=0)\n#     cut_img = img[y1:y2, x1:x2]\n#     cut_img = cv2.resize(cut_img, target_size)\n#     cut_img = cut_img.astype(\"float32\")*(1.)\/255\n#     return np.array(cut_img)","8e40a516":"from keras.preprocessing.image import ImageDataGenerator\n## v0\npos = ImageDataGenerator(\n    rescale=1.\/255,\n    brightness_range=[0.5, 1.5],\n    rotation_range=15, #45\n    shear_range=0.2,\n    zoom_range=0.3, #0.2 \n    featurewise_center=False, #\n    featurewise_std_normalization=False, #\n    horizontal_flip=True,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    vertical_flip=True,)\n#     validation_split= 0.2,\n#     preprocessing_function = get_cut_image)\n## V1\n# pos = ImageDataGenerator(\n#     rescale=1.\/255,\n#     rotation_range=15, \n#     width_shift_range=0.2,\n#     height_shift_range=0.2,\n#     zoom_range=0.2,\n#     shear_range=0.3,\n#     horizontal_flip=True,\n#     vertical_flip=True,\n#     validation_split= 0.2,)","7859a223":"test_generator = pos.flow_from_dataframe(\n                  submission,\n                  directory = test_img,\n                  x_col = 'image',\n                  y_col = 'labels',\n                  class_mode = \"raw\",\n                  batch_size=batch_size,\n                  target_size = target_size,\n                  color_mode=\"rgb\",\n                  shuffle = False,\n                  seed = seed,)","4aad88d1":"model = keras.models.load_model(\"..\/input\/b4cvk20726\/B4(oversample)4Fold_cv_BC_2552.h5\",compile=False)\ntta_steps = 5\npredictions = []\n\nfor i in range(tta_steps):\n    preds = model.predict(test_generator)\n    predictions.append(preds)\n\npred_M1 = np.mean(predictions, axis=0)","a40ffa38":"model = keras.models.load_model(\"..\/input\/m1-test123-m2sample\/B4_labeln2_cv.h5\",compile=False)\ntta_steps = 5\npredictions = []\n\nfor i in range(tta_steps):\n    preds = model.predict(test_generator)\n    predictions.append(preds)\n\npred_M2 = np.mean(predictions, axis=0)","9312378e":"predmean = (pred_M1 + pred_M2) \/ 2.","336d4536":"np.around(predmean, decimals=2)","1f22ed43":"perdict = (predmean>0.33)\nn_label = ['complex', 'frog_eye_leaf_spot', 'healthy', 'powdery_mildew', 'rust', 'scab']\nanswer = []\n\nfor i in range(perdict.shape[0]):\n    temp = []\n    for j, k in enumerate(n_label):\n        if perdict[i, j]:\n            temp.append(k)\n    answer.append(temp)\n    \nanswer = [' '.join(n) for n in answer]\n\nsubmission['labels'] = np.array(answer)\nsubmission","97277e83":"submission.to_csv('submission.csv', index=False)","4ba9c6c4":"## M_2","18a2c9fa":"## M_1"}}