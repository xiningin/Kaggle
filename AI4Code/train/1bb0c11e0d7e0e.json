{"cell_type":{"8dab4e86":"code","b895ac46":"code","296fd35a":"code","01ff6664":"code","6a5b4882":"code","8dc50d05":"code","83499bda":"code","682a78bf":"code","0bd7dd63":"code","e9f1e04c":"code","5b98aec5":"code","f3c2affb":"code","fc145bf6":"code","0511e0d8":"code","3a988e18":"code","823cd98a":"code","885f5b40":"code","c64b9f18":"code","2fd166a5":"code","ae8bde5a":"code","7f5cd8bd":"code","577007f8":"code","3a84433b":"code","3c16e527":"code","5b6e9413":"code","86e6392b":"markdown","1b51df0b":"markdown","6a4251d1":"markdown","bf3a9edc":"markdown"},"source":{"8dab4e86":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b895ac46":"df = pd.read_csv('\/kaggle\/input\/bank-note-authentication-uci-data\/BankNote_Authentication.csv')\ndf.head()","296fd35a":"df.shape","01ff6664":"df.isna().sum()","6a5b4882":"df.info()","8dc50d05":"df.describe()","83499bda":"df['class'].value_counts()","682a78bf":"df['class'].value_counts().plot(kind=\"bar\")","0bd7dd63":"df.corr()","e9f1e04c":"df.hist(bins=30,figsize=(11,9))","5b98aec5":"df.info()","f3c2affb":"df.sample()","fc145bf6":"X = df.drop('class',axis=1)\ny = df['class']\nX.head()","0511e0d8":"X.shape, y.shape","3a988e18":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,random_state=1)","823cd98a":"X_train.head()","885f5b40":"y_train.head()","c64b9f18":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\nX=scaler.fit_transform(X)\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.fit_transform(X_test)\n\n\nprint(\"X_train:\\n\", X_train)\nprint(\"\\n\")\nprint(\"X_test:\\n\", X_test)\n","2fd166a5":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\nclassifire = LogisticRegression(solver='liblinear',random_state=1)\n\nclassifire.fit(X_train, y_train)\naccuracies = cross_val_score(estimator = classifire,X=X_train,y=y_train,cv=10)\n\nprint(\"Accuracies:\\n \",accuracies)","ae8bde5a":"print(\"Mean Accuracies: \",accuracies.mean())\nclassifire_pred = classifire.predict(X_test)\nclassifire_pred","7f5cd8bd":"from sklearn import metrics\ncm = metrics.confusion_matrix(y_test,classifire_pred,labels=[0,1])\n\ncm","577007f8":"from sklearn.svm import SVC\nsvm_classifire = SVC(kernel=\"linear\")\n\nsvm_classifire.fit(X_train,y_train)\n\nsvm_accuracies = cross_val_score(estimator=svm_classifire,X=X_train,y=y_train,cv=10)\n\nprint(\"Accuracies:\\n \",svm_accuracies)","3a84433b":"print(\"Mean Accuracy:\",svm_accuracies.mean())\nsvm_classifire_pred = svm_classifire.predict(X_test)\nsvm_classifire_pred\n","3c16e527":"cm = metrics.confusion_matrix(y_test,svm_classifire_pred,labels=[0,1])\n\n\n\ncm","5b6e9413":"print(\"LogisticRegression: {0:.4f}%\".format(accuracies.mean()*100))\nprint(\"\\n\")\nprint(\"Support Vector Machine: {0:.4f}%\".format(svm_accuracies.mean()*100))\nprint(\"\\n\")\n","86e6392b":"## count class","1b51df0b":"# Banknote authentication Data Set\n\n\n> *  Abstract: Data were extracted from images that were taken for the evaluation of an authentication procedure for banknotes.\n\n> 1. Data Set Characteristics:  \n\n    -Multivariate\n         -Number of Instances: 1372\n\n    -Attribute Characteristics: Real\n\n    -Number of Attributes:5\n\n    -Date Donated: 2013-04-16\n\n    -Associated Tasks: Classification\n\n\n> 2. Source:\n\n    Owner of database: Volker Lohweg (University of Applied Sciences, Ostwestfalen-Lippe, volker.lohweg '@' hs-owl.de)\n    Donor of database: Helene D\u00c3\u00b6rksen (University of Applied Sciences, Ostwestfalen-Lippe, helene.doerksen '@' hs-owl.de)\n    Date received: August, 2012\n\n\n> 3. Data Set Information:\n\n   - Data were extracted from images that were taken from genuine and forged banknote-like specimens. For digitization, an industrial camera usually used for print inspection was used. The final images have 400x 400 pixels. Due to the object lens and distance to the investigated object gray-scale pictures with a resolution of about 660 dpi were gained. Wavelet Transform tool were used to extract features from images.\n\n\n> 4. Attribute Information:\n\n    1. variance of Wavelet Transformed image (continuous)\n    2. skewness of Wavelet Transformed image (continuous)\n    3. curtosis of Wavelet Transformed image (continuous)\n    4. entropy of image (continuous)\n    5. class (integer)","6a4251d1":"## Load dataset","bf3a9edc":"## Data Modeling"}}