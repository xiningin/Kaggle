{"cell_type":{"583fc5fa":"code","85a6fea9":"code","50d7ad0d":"code","c43121ff":"code","9d6e2dd0":"code","1887c0e6":"markdown","8bd6e951":"markdown","375579ef":"markdown"},"source":{"583fc5fa":"import pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')","85a6fea9":"cities = pd.read_csv('..\/input\/cities.csv')\ncities.head()","50d7ad0d":"from matplotlib import collections  as mc\nimport matplotlib.animation as animation\n\ndef create_path_animation(cities, paths, interval=300):\n    def update(i):\n        coords = cities[['X', 'Y']].values\n        ordered_coords = coords[paths[i]]\n        xs, ys = zip(*ordered_coords)\n        plt.cla()\n        plt.plot(xs, ys,  lw=1., ms=10, c='blue')\n        plt.xlim(0, cities.X.max())\n        plt.ylim(0, cities.Y.max())\n        plt.title('step=' + str(i))\n        plt.axis('off')\n\n    fig = plt.figure(figsize = (6, 4))\n    ani = animation.FuncAnimation(fig, update, interval=interval, frames = len(paths), repeat=False)\n    ani.save(f\"sample.gif\", writer='imagemagick')","c43121ff":"# Create sample path\npaths = []\nfor i in range(1, 10):\n    paths.append(list(range(i)))","9d6e2dd0":"# Create and save animation gif.\ncreate_path_animation(cities, paths)","1887c0e6":"Required: imagemagick","8bd6e951":"<img src=\"sample.gif\">","375579ef":"# Animation paths."}}