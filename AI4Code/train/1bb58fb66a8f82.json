{"cell_type":{"813c4ffe":"code","e2162ce8":"code","89125da7":"code","14746fd1":"code","13409c59":"code","2fc0fcd8":"code","e7aeb29e":"code","7e76d85c":"code","4c51bcd3":"code","2d9f0d8b":"code","7ce75e15":"code","9a327a36":"code","9d7d13e5":"code","955ea972":"code","4d7933a3":"code","9eadf8eb":"code","4fb00d28":"code","a59cceab":"code","90eb5d35":"code","74249ef0":"code","279127c1":"code","0323e089":"code","b3689b0f":"code","67f350f5":"code","031b9c6d":"code","e0ea8081":"code","3f6839ed":"code","595fa35a":"code","b6372ddc":"code","dff6b3c9":"code","90e2d72d":"code","366ec9e0":"code","c624040a":"code","feb3a4c0":"code","168caeec":"code","b7f5399c":"code","8146f548":"code","ba19756d":"code","f8331000":"code","11a9f0e8":"code","aa72f78d":"code","947c39e9":"code","74bb18f9":"code","97c62d69":"code","04701236":"code","37056231":"code","ae292d59":"code","b7f32eaf":"code","fa6ddc59":"code","b7497a85":"code","7f74a70e":"code","43b1f5a0":"code","46485330":"code","a96b9cb8":"code","139df0e0":"code","0e1a26c7":"code","ec654614":"markdown","aefb75da":"markdown","2bca63c7":"markdown","3e07620e":"markdown","1b3c9e0f":"markdown","0b547cb9":"markdown","e3fd9b83":"markdown","9a935d24":"markdown","0a3c90a1":"markdown","2cf6b1cf":"markdown","d255c8d9":"markdown","1209ee5f":"markdown","7bb64457":"markdown","ef4b5131":"markdown","953fcb98":"markdown","2a30c324":"markdown","a401a82a":"markdown","dae16159":"markdown","36e8a092":"markdown","819a4cfb":"markdown","6709210b":"markdown","53c4c076":"markdown","27cd063a":"markdown","5874bad2":"markdown","f37a764f":"markdown","1a68db10":"markdown","1ff876af":"markdown","a8d1b9ff":"markdown","a4cfcc58":"markdown","5236e323":"markdown","76259d0b":"markdown","6868a921":"markdown","1d67fec3":"markdown","268960f6":"markdown","dd525d9f":"markdown","621b86df":"markdown","ac9f1c35":"markdown","59423d6c":"markdown","424c765f":"markdown","7ef32336":"markdown","f356a178":"markdown","60efe17f":"markdown","fe77777e":"markdown","78a127c3":"markdown","c3a6834e":"markdown","67cb29ea":"markdown","b131e4ce":"markdown","32445f27":"markdown","81736b6c":"markdown","9986440d":"markdown"},"source":{"813c4ffe":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","e2162ce8":"#lets import data from csv file\n\ntrain=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","89125da7":"train.head()","14746fd1":"#Passengerid is a unique identity of passengers so this does not matter to Survival of a Passenger So, let's drop Passengerid feature\ntrain=train.drop(['PassengerId'],1)\ntrain.head()","13409c59":"train['Pclass'].unique()","2fc0fcd8":"sns.countplot(x=train['Pclass'])","e7aeb29e":"sns.catplot(x='Pclass',y='Survived',data=train,kind='bar')","7e76d85c":"#lets see top 5 row data\ntrain['Name'].head()","4c51bcd3":"#let's extract Titles of Passengers\ntrain['Title']=train['Name'].str.extract('([A-Za-z]+)\\.',)","2d9f0d8b":"train['Title'].unique()","7ce75e15":"sns.countplot(y=train['Title'])","9a327a36":"sns.catplot(y='Title',x='Survived',data=train,kind='bar')","9d7d13e5":"#we do not need Name longer so,Let's drop it\ntrain=train.drop(['Name'],1)\ntrain.head()","955ea972":"sns.countplot(train['Sex'])","4d7933a3":"sns.catplot(x='Sex',y='Survived',data=train,kind='bar')","9eadf8eb":"sns.catplot(x='Sex',y='Survived',data=train,kind='bar',hue='Pclass')","4fb00d28":"train['Age_Band']=pd.cut(train['Age'],5)","a59cceab":"sns.catplot(y=\"Age_Band\",x='Survived',data=train,kind='bar')","90eb5d35":"sns.catplot(y=\"Age_Band\",x='Survived',data=train,kind='bar',hue='Pclass')","74249ef0":"g = sns.FacetGrid(train, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","279127c1":"g = sns.FacetGrid(train, col='Survived',row='Sex')\ng.map(plt.hist, 'Age', bins=20)","0323e089":"g = sns.FacetGrid(train, row='Survived',col='Pclass')\ng.map(plt.hist, 'Age', bins=20)","b3689b0f":"g = sns.FacetGrid(train, row='Survived',col='Embarked')\ng.map(plt.hist, 'Age', bins=20)","67f350f5":"grid = sns.FacetGrid(train, row='Embarked', size=2.2, aspect=1.6)\ngrid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex')\ngrid.add_legend()","031b9c6d":"train=train.drop(['Age_Band'],1)","e0ea8081":"train['FamilySize']=train['SibSp']+train['Parch']\ntrain=train.drop(['SibSp','Parch'],1)","3f6839ed":"sns.catplot(x='FamilySize',y='Survived',data=train,kind='bar')","595fa35a":"sns.catplot(x='FamilySize',y='Survived',data=train,kind='bar',hue='Sex')","b6372ddc":"sns.catplot(x='FamilySize',y='Survived',data=train,kind='bar',hue='Pclass')","dff6b3c9":"train=train.drop(['Ticket'],1)\ntrain.head()","90e2d72d":"train['Cabin'].isnull().sum()","366ec9e0":"train['Cabin']=train['Cabin'].fillna('NA')","c624040a":"train.Cabin.unique()","feb3a4c0":"train['Cabin']=train['Cabin'].astype(str).str[0]\ntrain['Cabin'].unique()","168caeec":"sns.catplot(x='Cabin',y='Survived',data=train,kind='bar')","b7f5399c":"sns.catplot(x='Cabin',y='Survived',data=train,col='Sex',kind='bar')","8146f548":"sns.catplot(x='Cabin',y='Survived',data=train,col='Pclass',kind='bar')","ba19756d":"sns.catplot(x='Cabin',y='Survived',data=train,col='Pclass',row='Sex',kind='bar')","f8331000":"print(train['Embarked'].unique())\nprint(train['Embarked'].isnull().sum())","11a9f0e8":"train['Embarked']=train['Embarked'].fillna(train['Embarked'].value_counts().index[0])\nprint(train['Embarked'].unique())","aa72f78d":"sns.catplot(x='Embarked',y='Survived',data=train,kind='bar')","947c39e9":"train.head()","74bb18f9":"corr=train.corr().sort_values(by='Survived',ascending=False).round(2)\nplt.subplots(figsize=(8, 6))\nsns.heatmap(corr, vmax=.8, square=True);","97c62d69":"train.isnull().sum()","04701236":"print(train.Pclass.unique())\nprint(train.Sex.unique())","37056231":"for i in ['male','female']:\n    for j in [3,1,2]:\n        print(i,j)\n        temp_dataset=train[(train['Sex']==i) &  (train['Pclass']==j)]['Age'].dropna()\n        print(temp_dataset)\n        print(str(temp_dataset.median())+\"  \"+str(i)+\"  \"+str(j))\n        train.loc[(train.Age.isnull()) & (train.Sex==i) & (train.Pclass==j),'Age']=int(temp_dataset.median())","ae292d59":"train.isnull().sum()","b7f32eaf":"train.head()","fa6ddc59":"train=pd.get_dummies(columns=['Pclass','Sex','Cabin','Embarked','Title'],data=train)\ntrain.head()","b7497a85":"train['Age_Band']=pd.cut(train['Age'],5)\ntrain['Age_Band'].unique()","7f74a70e":"train.loc[(train['Age']<=16.136),'Age']=1\ntrain.loc[(train['Age']>16.136) & (train['Age']<=32.102),'Age']=2\ntrain.loc[(train['Age']>32.102) & (train['Age']<=48.068),'Age']=3\ntrain.loc[(train['Age']>48.068) & (train['Age']<=64.034),'Age']=4\ntrain.loc[(train['Age']>64.034) & (train['Age']<=80.),'Age']=5\ntrain['Age'].unique()","43b1f5a0":"train=train.drop(['Age_Band'],1)","46485330":"train['Fare_Band']=pd.cut(train['Fare'],3)\ntrain['Fare_Band'].unique()","a96b9cb8":"train.loc[(train['Fare']<=170.776),'Fare']=1\ntrain.loc[(train['Fare']>170.776) & (train['Fare']<=314.553),'Fare']=2\ntrain.loc[(train['Fare']>314.553) & (train['Fare']<=513),'Fare']=3\ntrain=train.drop(['Fare_Band'],1)","139df0e0":"train.head()","0e1a26c7":"train=pd.get_dummies(columns=['Age','Fare'],data=train)\ntrain.head()","ec654614":"This feature is to hard to find is it usefull for use or not? So, Let's do some oprations and find the meaningfull data","aefb75da":"Greate, We have Done all the PrePrecessing","2bca63c7":"# Name","3e07620e":"Here we can findout relation between features","1b3c9e0f":"here we can see that highest number of passengers travelling in class 3,Lets see relation between Pclass and Survival","0b547cb9":"Now it seems like meaningfull data","e3fd9b83":"Now, Age and Fare also include in Categorical data","9a935d24":"# Embarked","0a3c90a1":"All the Feedback and Suggestion appreciated, Please Upvote if you find any usefull","2cf6b1cf":"* Sibsb:Number of Sibling\n* Parch:Number of Parents ","d255c8d9":"more ligher color means more co-related to each other","1209ee5f":"Thank you","7bb64457":"we allready seen plot which contain relation with other features so no need to see here","ef4b5131":"here we can see that how the survival changes with the age","953fcb98":"Pclass id for define Ticket class. Like Economical class,business class\n1. class 3 for higher class\n2. class 2 for midddel class\n3. class 1 for lowwer class\nSo, let's visualize this data","2a30c324":"Here we can see that lowwer age passengers are more likely to survive and higger age likely to not survive","a401a82a":"# Cabin","dae16159":"Let's use One-Hot Encoding for Categorical data","36e8a092":"Great, All missing data done","819a4cfb":"using this features we can create new fature Family","6709210b":"female is more likely to survive","53c4c076":"# PassengerID","27cd063a":"# Feature Engineering","5874bad2":"there are lots of unique values are here so, Let's take first character of Cabin ","f37a764f":"Now, You can apply Modeling.","1a68db10":"We have imported some libraries which will help us for data handling and data visualization\n1. numpy and pandas for math and data oprations\n2. Seaborn and Matplotlib is a one of the best libraries for data visulization","1ff876af":"there are 2 missing values here, so let's replace it with most frequent value","a8d1b9ff":"Hello Everyone,\n\nHere I am going to Explanation and Visualization of data and we will handle data Missing and Feature Scaling","a4cfcc58":"above count plot showing number of title we have in our data","5236e323":"We can create Band for Age and Fare So, let's create it","76259d0b":"Here we have total 11 features as an input(PassengerId,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked) and 1 feature as output(Survived) so let's see all data one by one","6868a921":"# SibSp\/Parch","1d67fec3":"# Ticket","268960f6":"Survival probility as per familysize","dd525d9f":"Great, We have done all the Features","621b86df":"# Missing Values","ac9f1c35":"as we can see to the dat its look like this does not matter for our model, but it matters lot let's extract some data from it","59423d6c":"here we have only one feature which have some missing data","424c765f":"here we can see that lots of data are missing so lets fill \"NA\"","7ef32336":"As per Barplot, we can say that class 1 passengers mostly likely to survive","f356a178":"# Pclass","60efe17f":"# Age","fe77777e":"# Sex","78a127c3":"we will do all the opration with train data only because in train data we have both input and output data","c3a6834e":"Ticket is also like Passengerid which does not matter to Survivel of Passengers","67cb29ea":"this all are unique titles we got from names","b131e4ce":"here we can see that relation of sex-Pclass-Survived","32445f27":"Male is more than female in the Titanic","81736b6c":"<h1>Check out my other Notebooks<\/h1><font size='4'>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/top-5-on-leaderboard\" target=\"_blank\">House Price<\/a><br>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/basic-visualization-for-beginners\" target=\"_blank\">Basic Visualization<\/a><br>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/titanic-top-6\" target=\"_blank\">Titanic Notebook<\/a><br>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/nlp-for-beginners\" target=\"_blank\">NLP<\/a><br><font>","9986440d":"now we can see some meaningfull of title feature"}}