{"cell_type":{"02b669ec":"code","5d226034":"code","5d9fdd3f":"code","c6654513":"code","6381bd95":"code","f97e35e1":"code","dae69220":"code","6ecef88e":"markdown","f773ee38":"markdown","b5dee8ab":"markdown","c1ad2e53":"markdown","c19c1a88":"markdown","cf961163":"markdown","bd8d6298":"markdown","d4e11e1a":"markdown","6c294386":"markdown","9c4965ce":"markdown"},"source":{"02b669ec":"from mpl_toolkits.basemap import Basemap\nimport folium\nimport numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport pycountry\nimport datetime\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom pylab import rcParams\nrcParams['figure.figsize'] = 10, 10\nimport bq_helper\nfrom bq_helper import BigQueryHelper\nhelper = BigQueryHelper('bigquery-public-data', 'noaa_gsod')\n\ndef plotPointsOnMap(dataframe,beginIndex,endIndex,latitudeColumn,latitudeValue,longitudeColumn,longitudeValue,zoom):\n    df = dataframe[beginIndex:endIndex]\n    location = [latitudeValue,longitudeValue]\n    plot = folium.Map(location=location,zoom_start=zoom)\n    for i in range(0,len(df)):\n        popup = folium.Popup(str(df.name[i:i+1]))\n        folium.Marker([df[latitudeColumn].iloc[i],df[longitudeColumn].iloc[i]],popup=popup).add_to(plot)\n    return(plot)\n\ndef color_coded_map(df, center_lat, center_lon, zoom):  \n    # Adapted from  https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps\n    m = folium.Map(location=[center_lat, center_lon],\n                   zoom_start = zoom)\n    for index, row in df.iterrows():\n        folium.CircleMarker( [row['lat'], row['lon']] , radius=10, \n                             color=custom_colormap(row['avg_temp']), \n                             fill=True, fill_opacity=1.0,            \n                             fill_color=custom_colormap(row['avg_temp']), \n                             popup=row['name'] ).add_to(m)\n    custom_colormap.add_to(m)\n    folium.TileLayer(tiles='Stamen Toner',name=\"Stamen Toner\").add_to(m)\n    folium.TileLayer(tiles='Stamen Terrain',name=\"Stamen Terrain\").add_to(m)\n    folium.TileLayer(tiles='cartodbpositron',name=\"cartodbpositron\").add_to(m)\n    folium.LayerControl().add_to(m)       \n    return m\n\ndef mapAvgTemperature(df,latitude,longitude):\n    # adapted from https:\/\/www.kaggle.com\/anhuang\/visualization-of-global-climatic-change\n    df_ = df#.sample(5000)\n    m = Basemap(projection='aea',lat_0=latitude, lon_0=longitude, resolution='l', area_thresh=1,rsphere=1,height=1, width=1)# projection='cyl'\n    m.drawmapboundary()\n    m.drawcoastlines()\n    parallels = np.arange(-90.,90,30.)\n    m.drawparallels(parallels,labels=[False,True,True,False])\n    meridians = np.arange(0.,350.,30.)\n    m.drawmeridians(meridians,labels=[True,False,False,True])\n    lon = df_['lon'].tolist()\n    lat = df_['lat'].tolist()\n    df_['avg_temp'] = df_['avg_temp'].astype(int)\n    temp = df_['avg_temp'].tolist()\n    xpt,ypt = m(lon,lat)\n    cm = plt.cm.get_cmap('jet')\n    m.scatter(xpt, ypt, c=temp, cmap=cm, vmin = -70, vmax=100, s = 10, alpha = 0.4) \n    plt.gcf().set_size_inches(18.5, 10.5)\n    plt.colorbar()\n    plt.show()\n\ndef displayTemperaturePlots(weatherData):\n    # Adapted from # https:\/\/www.kaggle.com\/tanatiem\/eda-bangkok-weather\n    plt.style.use('bmh')\n    # Plot #1\n    # melt to display\n    data = pd.melt(weatherData, 'year', ['temp','min','max'], \n                   var_name='variable', value_name='degree')\n    # Avg, Min, Max temp. boxplot\n    ax = sns.boxplot(x='year',y='degree',hue='variable', hue_order=['min','temp','max'],\n               data=data)\n    ax.set_ylabel('Degree Fahrenheit')\n    plt.show()\n    # Plot #2\n    # for labeling\n    months = ['Jan','Feb','Mar','Apr','May','Jun',\n              'Jul','Aug','Sep','Oct','Nov','Dec']\n    data = weatherData.groupby(['mo'], as_index=False)[['temp','min','max']].mean()\n    ax = data[['temp','min','max']].plot();\n    ax.set_ylabel('Temperature (F)')\n    ax.set_xlabel('Month')\n    ax.set_xticks(np.arange(0,12))\n    ax.set_xticklabels(months)\n    ax.set_title('Average Daily Temperature by Month');\n    plt.show()\n    # Plot #3\n    month_df = weatherData.groupby(['year','mo'], as_index=False)[['temp']].mean()\n    # Temperature heatmap\n    data = month_df.pivot('year','mo','temp')\n    data.columns = months\n    sns.heatmap(data, cmap='YlOrRd',annot=True, fmt='.1f', vmin=27)\n    plt.title('Average Daily Temperature (F) by Month')\n    plt.yticks(rotation=0)\n    plt.show()\n    \ndef cleanWeatherData(dataframe):\n    # Adapted from # https:\/\/www.kaggle.com\/tanatiem\/eda-bangkok-weather\n    weather=dataframe\n    weather['temp'] = weather['temp'].replace({ 9999.9 : np.nan })\n    weather['min'] = weather['min'].replace({ 9999.9 : np.nan })\n    weather['max'] = weather['max'].replace({ 9999.9 : np.nan })\n    weather['date'] = weather.apply(lambda x:datetime.datetime(int(x.year), int(x.mo), int(x.da)),axis=1)\n    weather = weather.set_index('date')\n    start_date = '{}010101'.format(years[0]) #0101\n    end_date = weather.index.max().strftime('%Y%m%d')\n    missing = weather[weather.isnull().any(axis=1)].index\n    weather = weather.interpolate()\n    weather['year'] = weather.index.year\n    weather['mo'] = weather.index.month\n    weather['da'] = weather.index.day\n    data = weather[['temp','min','max']]\n    data.reset_index(inplace=True)\n    data.columns = ['Date','Avg Temp', 'Min Temp', 'Max Temp']\n    return(data)","5d226034":"avgTemps = '''\nSELECT \n    stn, avg_temp, lat,lon, name\nFROM(\n    SELECT stn,AVG(data.temp) AS avg_temp\n    FROM `bigquery-public-data.noaa_gsod.gsod2019` AS data\n    GROUP BY stn) temp_\nINNER JOIN \n    `bigquery-public-data.noaa_gsod.stations`AS stations\nON \n    temp_.stn = stations.usaf\n'''\n\ntempsAtStationName = '''\nSELECT\n    year, mo, da, temp, min, max\nFROM\n    `bigquery-public-data.noaa_gsod.gsod{}` a\n    INNER JOIN `bigquery-public-data.noaa_gsod.stations` b ON a.stn = b.usaf\nWHERE\n    country = 'US' AND name = '{}'\n'''\nyears = range(2010, 2020)\nboulderWeather = [helper.query_to_pandas(tempsAtStationName.format(i, \"BOULDER MUNICIPAL AIRPORT\")) for i in years]\nboulderWeather = pd.concat(boulderWeather)\ncleanBoulderWeather = cleanWeatherData(boulderWeather)\nmountainWeather = [helper.query_to_pandas(tempsAtStationName.format(i, \"BERTHOUD PASS\")) for i in years]\nmountainWeather = pd.concat(mountainWeather)\ncleanMountainWeather = cleanWeatherData(mountainWeather)\n\navgTemps = helper.query_to_pandas_safe(avgTemps)\navgTemps = avgTemps.dropna(axis=0)\n\nlat= 40\nlon= -105\nco_latitudeLower = avgTemps['lat'] > lat-5\nco_latitudeUpper = avgTemps['lat'] < lat+2\nco_longitudeLower = avgTemps['lon'] > lon-5\nco_longitudeUpper = avgTemps['lon'] < lon+5\nco_only = avgTemps[co_latitudeLower & co_latitudeUpper & co_longitudeLower & co_longitudeUpper]\nco_only.head(10)","5d9fdd3f":"mapAvgTemperature(avgTemps,40,-105)","c6654513":"custom_colormap = \\\n    folium.StepColormap( ['purple','blue','green','yellow','orange','red'], \n                         vmin=0, vmax=100,\n                         index=[0,20,40,60,80,100],\n                        caption='Degrees Fahrenheit')\n\ntemperature_map = color_coded_map(co_only, 40,-105, 8)\ntemperature_map","6381bd95":"print(\"BOULDER MUNICIPAL AIRPORT\"+' :\\n')\ndisplayTemperaturePlots(boulderWeather)","f97e35e1":"print(\"BERTHOUD PASS\"+' :\\n')\ndisplayTemperaturePlots(mountainWeather)","dae69220":"plotPointsOnMap(co_only,0,500,'lat',lat,'lon',lon,8)","6ecef88e":"*Step 2: Write queries for average daily temperature in USA and Colorado*","f773ee38":"**Credit:**\n* Some functions for mapping and plotting were adapted from https:\/\/www.kaggle.com\/anhuang\/visualization-of-global-climatic-change, https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps, and https:\/\/www.kaggle.com\/tanatiem\/eda-bangkok-weather.  See comments in code cells for more detail.","b5dee8ab":"In the mountains the avg daily temperatures mostly stay between 5F and 55F.","c1ad2e53":"*Step 4: Plot temperatures in Colorado (2010-2020, degrees Fahrenheit)*","c19c1a88":"# Average Daily Temperatures in Colorado (2010-2020)\n**[NOAA](https:\/\/data.noaa.gov\/dataset\/dataset\/global-surface-summary-of-the-day-gsod) Global Surface Summary of the Day**","cf961163":"There are many weather stations in Colorado.","bd8d6298":"In the city the avg daily temperatures mostly stay between 25F and 95F.","d4e11e1a":"*Step 1: Import Python modules and define helper functions*","6c294386":"*Step 3: Map of average daily temperature in the USA in 2019  (degrees Fahrenheit)*","9c4965ce":"*Step 4: Map average daily temperature in Colorado in 2019  (degrees Fahrenheit)*"}}