{"cell_type":{"18e8f75e":"code","fc9c60ad":"code","80df9b6d":"markdown","054c8fb9":"markdown","af8eccbe":"markdown","9e86585b":"markdown","5189f566":"markdown"},"source":{"18e8f75e":"!unzip \/kaggle\/input\/ab-ru-transformer\/run.zip -d \/kaggle\/working","fc9c60ad":"%cd \/kaggle\/working\n!zip -r \/kaggle\/working\/run.zip run\/*\n!rm -rf \/kaggle\/working\/run","80df9b6d":"!pip install OpenNMT-tf\nimport os\nimport re\nfrom os import listdir\nfrom os.path import isfile, join\n# How many hours would you want this training to last\n# \n# default is 9 hours\nhours = 9\n# \n# \nsteps = hours*60*25\nonlyfiles = [f for f in listdir(\"\/kaggle\/working\/run\") if isfile(join(\"\/kaggle\/working\/run\", f))]\nfor file in onlyfiles:\n    m = re.search('ckpt-(.+?).data', file)\n    if m:\n        found = m.group(1)\nfound = int(found)+ steps\nsetup_text = \"\"\"\nmodel_dir: \/kaggle\/working\/run\n\ndata:\n  train_features_file: \/kaggle\/input\/abrudata\/src-train.txt\n  train_labels_file: \/kaggle\/input\/abrudata\/tgt-train.txt\n  eval_features_file: \/kaggle\/input\/abrudata\/src-val.txt\n  eval_labels_file: \/kaggle\/input\/abrudata\/tgt-val.txt\n  source_vocabulary: \/kaggle\/input\/abrudata\/src-vocab.txt\n  target_vocabulary: \/kaggle\/input\/abrudata\/tgt-vocab.txt\n\ntrain:\n  maximum_features_length: 500\n  maximum_labels_length: 500\n  save_checkpoints_steps: \"\"\" + str(steps) + \"\"\"\n  keep_checkpoint_max: 1\n  max_step: \"\"\" + str(found) + \"\"\"\n  \"\"\"\nwith open('data.yml','w+') as f:\n  f.write(setup_text)","054c8fb9":"# Training:","af8eccbe":"!rm -rf \/kaggle\/working\/run\/avg\n!rm \/kaggle\/working\/data.yml","9e86585b":"# Preprocess step:","5189f566":"!onmt-main --model_type TransformerRelative --config data.yml \\\n--auto_config train --with_eval"}}