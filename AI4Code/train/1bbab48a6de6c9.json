{"cell_type":{"1670d72b":"code","628f2760":"code","7ec3bc92":"code","8e616d3d":"code","5ff034a6":"code","a97e9f6c":"code","29c39861":"code","b6f24b8e":"code","7494deee":"code","960a6bbb":"code","e4dcc27f":"code","dde939b4":"code","dcd22450":"code","a381bd83":"code","3778a659":"code","a887a5f7":"code","017af859":"code","b1777c6e":"code","4712e9a1":"code","33f9537d":"code","5874dade":"code","d90eee93":"code","ac704ac0":"code","83d02547":"code","40da87c0":"code","a3200209":"code","e5e92fd4":"code","dbd8e6c7":"code","4f22f875":"code","f3645651":"code","de081edd":"code","0fb0f3d1":"code","bf4a9d20":"code","881ca9eb":"code","01f5ba17":"code","0d314b4e":"code","c971fb7c":"code","db63af72":"code","b2e2e8c9":"code","f84fa30a":"code","c03ffe2f":"code","cd50c5eb":"code","c6999e84":"code","b6cbde6f":"code","5c0af17c":"code","c029a14f":"code","b17e3680":"code","8320ecd3":"code","b684ad4b":"code","65471982":"code","1e3813eb":"code","a4d96ee3":"code","fe534934":"code","19e8d179":"code","c464ded5":"code","8832b390":"code","40569884":"code","05884bf1":"code","ed62d5e5":"code","0af6d772":"code","cf86bab5":"code","38ddb478":"code","1ff27d58":"code","c6ba179a":"code","b41a0b31":"code","7612c163":"code","3c981d96":"code","5995fda3":"code","eda39df5":"code","ca21a44d":"code","d871319f":"code","967817de":"code","fc9aaa2a":"code","3cf437b2":"code","a3fe0875":"markdown","1ae29593":"markdown","4552c6ac":"markdown","d35c20d3":"markdown","b9039658":"markdown","9ab3c8eb":"markdown","8ca50f58":"markdown","7d5edf52":"markdown","d8d131ce":"markdown","703019ed":"markdown","9828529e":"markdown","b623c4aa":"markdown","66c6b2ad":"markdown","0abc8775":"markdown","1c75afa1":"markdown","cce5e010":"markdown","23f28716":"markdown","fd4c704e":"markdown","5ad4d139":"markdown","7ed873bd":"markdown","96eb1c0d":"markdown","878703e6":"markdown","2f31ab25":"markdown","0b107b4c":"markdown","fccf3d36":"markdown","958b36ec":"markdown","33be8d1a":"markdown","b24187e8":"markdown","e21fed84":"markdown","c25634af":"markdown","4d33ceac":"markdown","e9f26166":"markdown","975e440b":"markdown","5e0d42e6":"markdown","a44b8c85":"markdown","caec8abf":"markdown"},"source":{"1670d72b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","628f2760":"# importing necessary libraries and warnings\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(color_codes = True)\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","7ec3bc92":"# Reading the dataset\ndata= pd.read_csv(\"\/kaggle\/input\/unsupervised-learning-on-country-data\/Country-data.csv\")\ndata","8e616d3d":"# Checking shape\ndata.shape","5ff034a6":"# Describing data\ndata.describe()","a97e9f6c":"# data info\ndata.info()","29c39861":"# checking data types\ndata.dtypes","b6f24b8e":"# Convert exports, imports and health spending percentages tpo absolute values\ndata['exports'] = data['exports']*data['gdpp']\/100\ndata['imports'] = data['imports']*data['gdpp']\/100\ndata['health'] = data['health']*data['gdpp']\/100","7494deee":"# Checking null values\ndata.isnull().sum()","960a6bbb":"# Plotting histogram for each numerical column\nplt.figure(figsize=[20,15])\nfor i in enumerate(data.describe().columns):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(data[i[1]], color='darkorange',kde_kws={'color':'royalblue'})\nplt.show()","e4dcc27f":"# sorting gdp value for each country\ngdp = data.sort_values(by = ['gdpp'], ascending=True)\ngdp","dde939b4":"# plotting top 10 countries with highest and lowest gdp\nplt.figure(figsize=[15,8])\nplt.subplot(2,1,1)\nsns.barplot(gdp.country.head(10), gdp.gdpp.head(10))\nplt.title(\"Top 10 countries having lowest GDP\")\nplt.subplot(2,1,2)\nsns.barplot(gdp.country.tail(10), gdp.gdpp.tail(10))\nplt.title(\"\\nTop 10 countries having Highest GDP\")\nplt.tight_layout()\nplt.show()","dcd22450":"# sorting net income per person for each country\nincome = data.sort_values(by = ['income'], ascending=True)\nincome","a381bd83":"#plotting top 10 countries with highest and lowest income\nplt.figure(figsize=[15,8])\nplt.subplot(2,1,1)\nsns.barplot(income.country.head(10), income.income.head(10))\nplt.title(\"Top 10 countries having lowest net income per person\")\nplt.subplot(2,1,2)\nsns.barplot(income.country.tail(10), income.income.tail(10))\nplt.title(\"\\nTop 10 countries having Highest net income per person\")\nplt.tight_layout()\nplt.show()","3778a659":"# sorting health for each country\nhealth = data.sort_values(by = ['health'], ascending=True)\nhealth","a887a5f7":"#plotting top 10 countries spent lowest and highest health per capita\nplt.figure(figsize=[15,8])\nplt.subplot(2,1,1)\nsns.barplot(health.country.head(10), health.health.head(10))\nplt.title(\"Top 10 countries spent lowest health per capita\")\nplt.subplot(2,1,2)\nsns.barplot(health.country.tail(10), health.health.tail(10))\nplt.title(\"\\nTop 10 countries spent Highest health per capita\")\nplt.tight_layout()\nplt.show()","017af859":"# sorting child mortality for each country below 5 years per 1000 live births\nchild = data.sort_values(by = ['child_mort'], ascending=False)\nchild","b1777c6e":"#plotting top 10 countries with highest and lowest child mortality\nplt.figure(figsize=[15,8])\nplt.subplot(2,1,1)\nsns.barplot(child.country.head(10), child.child_mort.head(10))\nplt.title(\"Top 10 countries high Death of children under 5 years of age per 1000 live births\")\nplt.subplot(2,1,2)\nsns.barplot(child.country.tail(10), child.child_mort.tail(10))\nplt.title(\"\\nBottom 10 countries low Death of children under 5 years of age per 1000 live births\") \nplt.tight_layout()\nplt.show()","4712e9a1":"# sorting life expectency for each country\nlife = data.sort_values(by = ['life_expec'], ascending=False)\nlife","33f9537d":"#plotting top 10 countries with highest and lowest life_expec\nplt.figure(figsize=[15,8])\nplt.subplot(2,1,1)\nsns.barplot(life.country.head(10), life.life_expec.head(10))\nplt.title(\"Top 10 countries with high life expectency\\n\")\nplt.subplot(2,1,2)\nsns.barplot(life.country.tail(10), life.life_expec.tail(10))\nplt.title(\"\\nBottom 10 countries with low life expectency\\n\") \nplt.tight_layout()\nplt.show()","5874dade":"# Pair plot for all numerical variables\nsns.pairplot(data)\nplt.show()","d90eee93":"# checking correlation for the data\ncorrelation = data.corr()\ncorrelation","ac704ac0":"# Heapmat for given data\nplt.figure(figsize=[12,8])\nsns.heatmap(correlation, annot=True, cmap='RdYlGn')\nplt.title('Heatmap\\n')\nplt.show()","83d02547":"# Resetting index before outlier treatment\ndata.reset_index()","40da87c0":"# checking outliers using boxplot for each numerical column before outlier treatment\nplt.figure(figsize=[20,15])\nfor i in enumerate(data.describe().columns):\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(data[i[1]])\n\nplt.show()","a3200209":"# Removing the lower range outliers for countries with low child mortality, low inflation and low total fertility\nlow_range = ['child_mort','inflation','total_fer']\nfor column in low_range:\n    Q1 = data[column].quantile(0.05)\n    data = data[(data[column]>= Q1)]","e5e92fd4":"# Removing the upper range outliers for countries with high income, GDP, imports, exports, life_expectancy and health\nhigh_range = ['exports', 'health', 'imports','income','gdpp','life_expec']\nfor column in high_range:\n    Q3 = data[column].quantile(0.95)\n    data = data[(data[column] <= Q3)]","dbd8e6c7":"# plotting boxplot again after outlier treatment\nplt.figure(figsize=[20,15])\nfor i in enumerate(data.describe().columns):\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(data[i[1]], color='g')\nplt.show()","4f22f875":"# Checking shape after outlier treatment\ndata.shape","f3645651":"# creating data with only numerical columns\nclusterdata = data.iloc[:,1:]\nclusterdata.head()","de081edd":"# Scaling data\nscaler = StandardScaler()\n\ncluster_scaled = scaler.fit_transform(clusterdata)\ncluster_scaled.shape","0fb0f3d1":"data.columns","bf4a9d20":"# Creating dataframe with scaled data and assigning column names\ncluster_scaled = pd.DataFrame(cluster_scaled)\ncluster_scaled.columns = ['child_mort', 'exports', 'health', 'imports', 'income',\n                          'inflation', 'life_expec', 'total_fer', 'gdpp']\ncluster_scaled.head()","881ca9eb":"# Hopkins test\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","01f5ba17":"# checking Hopkins values\nHopkins = []\nfor i in range(5):\n    Hopkins.append(hopkins(cluster_scaled))","0d314b4e":"# Taking average hopkins value\nsum(Hopkins)\/len(Hopkins)","c971fb7c":"# elbow-curve\/SSD\nssd = []\nrange_n_clusters = [2,3,4,5,6,7,8,9,10,11,12]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(cluster_scaled)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.figure(figsize=[12,8])\nplt.plot(range_n_clusters,ssd)\nplt.xticks([2,3,4,5,6,7,8,9,10,11,12])\nplt.title(\"Plot for k-value vs SSD(Sum of squared Distances)\")\nplt.xlabel('k')\nplt.ylabel('SSD')\nplt.show()","db63af72":"# silhouette analysis\nrange_n_clusters = [2,3,4,5,6,7,8,9,10,11,12]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(cluster_scaled)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(cluster_scaled, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","b2e2e8c9":"# final model with k=3\nkmeans = KMeans(n_clusters=3, max_iter=50, random_state= 100)\nkmeans.fit(cluster_scaled)","f84fa30a":"kmeans.labels_","c03ffe2f":"# Assigning labels to main data formed by k-means\ndata['K_means_labels'] = kmeans.labels_","cd50c5eb":"data.head()","c6999e84":"# plotting box plots with gdpp and k-means cluster labels\nsns.boxplot(x = 'K_means_labels', y = 'gdpp', data= data)\nplt.show()","b6cbde6f":"# plotting box plots with child_mort and k-means cluster labels\nsns.boxplot(x = 'K_means_labels', y = 'child_mort', data= data)\nplt.show()","5c0af17c":"# plotting box plots with income and k-means cluster labels\nsns.boxplot(x = 'K_means_labels', y = 'income', data= data)\nplt.show()","c029a14f":"# scatter plot for income vs gdpp with cluster labels formed \n\nplt.figure(figsize=[12,8])\nsns.scatterplot(data.income, data.gdpp,hue = data.K_means_labels, palette='Set1')\nplt.show()","b17e3680":"# scatter plot for income vs child_mort with cluster labels formed \n\nplt.figure(figsize=[12,8])\nsns.scatterplot(data.income, data.child_mort,hue = data.K_means_labels, palette='Set1')\nplt.show()","8320ecd3":"# scatter plot for gdpp vs child_mort with cluster labels formed \n\nplt.figure(figsize=[12,8])\nsns.scatterplot(data.gdpp, data.child_mort,hue = data.K_means_labels, palette='Set1')\nplt.show()","b684ad4b":"# Hierarchical clustering with single linkage\nmergings = linkage(cluster_scaled, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","65471982":"# creating 3 clusters using cut_tree method\ncluster_labels_single = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels_single","1e3813eb":"data['Hierachical_single'] = cluster_labels_single","a4d96ee3":"# plotting box plots with gdpp\nsns.boxplot(x = 'Hierachical_single', y = 'gdpp', data= data)\nplt.show()","fe534934":"# plotting box plots with income\nsns.boxplot(x = 'Hierachical_single', y = 'income', data= data)\nplt.show()","19e8d179":"# plotting box plots with childmort\nsns.boxplot(x = 'Hierachical_single', y = 'child_mort', data= data)\nplt.show()","c464ded5":"# scatter plot for income vs gdpp with cluster labels formed \nplt.figure(figsize=[12,8])\nsns.scatterplot(data.income, data.gdpp,hue = data['Hierachical_single'], palette='Set1')\nplt.show()","8832b390":"# scatter plot for child_mort vs gdpp with cluster labels formed\nplt.figure(figsize=[12,8])\nsns.scatterplot(data.child_mort, data.gdpp,hue = data['Hierachical_single'], palette='Set1')\nplt.show()","40569884":"# scatter plot for child_mort vs income with cluster labels formed \nplt.figure(figsize=[12,8])\nsns.scatterplot(data.child_mort, data.income,hue = data['Hierachical_single'], palette='Set1')\nplt.show()","05884bf1":"# Hierarchical clustering with complete linkage\nmergings = linkage(cluster_scaled, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","ed62d5e5":"# creating 3 clusters using cut_tree method\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","0af6d772":"# Assigning cluster labels to the main data\ndata['Hierarchical_complete'] = cluster_labels","cf86bab5":"data","38ddb478":"# plotting box plots with gdpp\nsns.boxplot(x = 'Hierarchical_complete', y = 'gdpp', data= data)\nplt.show()","1ff27d58":"# plotting box plots with income\nsns.boxplot(x = 'Hierarchical_complete', y = 'income', data= data)\nplt.show()","c6ba179a":"# plotting box plots with child_mort\nsns.boxplot(x = 'Hierarchical_complete', y = 'child_mort', data= data)\nplt.show()","b41a0b31":"# scatter plot for income vs gdpp with cluster labels formed \nplt.figure(figsize=[12,8])\nsns.scatterplot(data.income, data.gdpp,hue = data.Hierarchical_complete, palette='Set1')\nplt.show()","7612c163":"# scatter plot for child_mort vs gdpp with cluster labels formed\nplt.figure(figsize=[12,8])\nsns.scatterplot(data.child_mort, data.gdpp,hue = data.Hierarchical_complete, palette='Set1')\nplt.show()","3c981d96":"# scatter plot for child_mort vs income with cluster labels formed \nplt.figure(figsize=[12,8])\nsns.scatterplot(data.child_mort, data.income,hue = data.Hierarchical_complete, palette='Set1')\nplt.show()","5995fda3":"data.head()","eda39df5":"# Countries recommended by k-means clustering\ndata[data['K_means_labels'] == 0]['country']","ca21a44d":"#countries recommended by hierarchical clustering complete linkage\ndata[data['Hierarchical_complete'] == 0]['country']","d871319f":"# Checking common countries recommended by k-means and hierarchical clustering\nbackward_countries = data[(data['K_means_labels'] == 0) & (data['Hierarchical_complete'] == 0)]\nbackward_countries","967817de":"backward_countries.shape","fc9aaa2a":"# sorting backward countries with gdp, income, child_mort\n\nTop10_backward_countries = backward_countries.sort_values(by=['gdpp','income','child_mort'])[:10]","3cf437b2":"Top10_backward_countries","a3fe0875":"Since the value is 0.84 there is a high tendency to cluster this data","1ae29593":"### Hopkins Statistics:\nThe Hopkins statistic, is a statistic which gives a value which indicates the cluster tendency, in other words: how well the data can be clustered.\n\n- If the value is between {0.01, ...,0.3}, the data is regularly spaced.\n\n- If the value is around 0.5, it is random.\n\n- If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster.","4552c6ac":"1. > Removing the lower range outliers for countries with low child mortality, low inflation and low total fertility. \n2. > Removing the upper range outliers for countries with high income, GDP, imports, exports, life_expectancy and health.\n3. > Here, we are using soft capping method for removing these outliers with quantiles of 0.05 for lower range and 0.95 for higher range","d35c20d3":"___Inferences___:\n\n1. > From the above plot, most of the average income per person and gdp per capita is observed in the range of 0-15000\n2. > On average, we can infer that life expectancy of a person for most of the countries is observed between 60-80\n3. > Child mortality (Death of children under 5 years of age per 1000 live births) seems to be below 50 in most of the countries, only few countries child mortality is above 100.\n","b9039658":"## Step 2: Exploratory Data analysis","9ab3c8eb":"## Step 1: Reading and understanding data","8ca50f58":"## Step 7: Reporting 5 or more backward countries","7d5edf52":"### Complete linkage","d8d131ce":"Since there are no null values proceeding to further step","703019ed":"#### SSD (Elbow curve method)","9828529e":"__Top 10 backward countries:__\n\n>1. Burundi\n>2. Liberia\n>3. Congo, Dem. Rep.\n>4. Niger\t\n>5. Sierra Leone\n>6. Madagascar\n>7. Mozambique\n>8. Central African Republic\t\n>9. Malawi\n>10. Eritrea\n","b623c4aa":"We can see that single linkage clustering is not promising since most of the data points are clustered in single cluster label and only few data points are in remaining clusters. Lets proceed further to check the complete linkage","66c6b2ad":"So, we need to check the countries having k-means cluster label = 1 and hierarchical cluster label = 0","0abc8775":"___Inferences___:\n\n1. > From the above plot, we can see that top 5 countries with lowest child mortality are ___Iceland, Luxembourg, Singapore, Sweden and Finland___\n2. > Top 5 countries with highest child mortality are ___Haiti, Sierra Leone, Chad, Central African Republic and Mali.___","1c75afa1":"___Inferences___:\n\n1. > From the above plot, we can see that top 5 countries spent lowest health per capita are ___Eritrea, Madagascar,\tCentral African Republic, Niger and Myanmar___\n2. > Top 5 countries spent highest health per capita are ___United States, Switzerland, Norway, Luxembourg and Denmark.___","cce5e010":"Lets divide the entire process of clustering into steps:\n\n* Step 1: Reading and understanding data\n* Step 2: Exploratory Data analysis\n* a) Data cleaning\n* b) univariate Analysis\n* c) Bivariate Analysis\n* Step 3: Outlier Treatment\n* Step 4: Scaling data\n* Step 5: Creating k-means clustering algorithm and visualising clusters formed\n* Step 6: Creating Hierarchical algorithm and visualising clusters formed\n* Step 7: Reporting 5 or more backward countries","23f28716":"Finally we can see that using, Hierarchical complete linkage clustering method, clusters have been formed as\n\nlabel = 0, low income, low GDP and high child mortality\n\nlabel = 1, high income, high GDP and low child mortality\n\nlabel = 2, moderate income, moderate GDP and high child mortality\n\nInorder to suggest the backward countries, we should focus on data where cluster label = 0","fd4c704e":"### c) Bivariate Analysis","5ad4d139":"### a) Data cleaning","7ed873bd":"From the above scores, we can see that for n=2 seems to be higher, however, with 2 clusters we are won't be able to extract the backward countries and lets proceed further by taking k = 3 as number of clusters","96eb1c0d":"___Inferences___:\n\n1. > From the above plot, we can see that top 10 countries have the same life expectancy of 80-82 years approximately. \n2. > Top 5 countries with lowest life expectancy are ___Haiti, Lesotho, Central African Republic,Zambia and Malawi.___","878703e6":"### Finding the Optimal Number of Clusters","2f31ab25":"## Step 4: Scaling data","0b107b4c":"## Step 6: Creating Hierarchical algorithm and visualising clusters formed\n","fccf3d36":"___Inferences___:\n\n1. > From the above plot, we can see that top 5 countries having lowest GDP are ___Burundi, Liberia, Congo, Dem. Rep., Niger and Sierra Leone.___\n2. > Top 5 countries having highest GDP are ___Luxembourg, Norway, Switzerland, Qatar and Denmark.___","958b36ec":"## Step 3: Outlier Treatment\n","33be8d1a":"## Step 5: Creating k-means clustering algorithm and visualising clusters formed","b24187e8":"### Silhouette Analysis\n\n$$\\text{silhouette score}=\\frac{p-q}{max(p,q)}$$\n\n$p$ is the mean distance to the points in the nearest cluster that the data point is not a part of\n\n$q$ is the mean intra-cluster distance to all the points in its own cluster.\n\n* The value of the silhouette score range lies between -1 to 1. \n\n* A score closer to 1 indicates that the data point is very similar to other data points in the cluster, \n\n* A score closer to -1 indicates that the data point is not similar to the data points in its cluster.","e21fed84":"### a) Univariate analysis","c25634af":"___Inferences___:\n\n1. > From the above plot, we can see that top 5 countries having lowest net income per person are ___Congo, Dem. Rep.,Liberia,Burundi Niger and Central African Republic___\n2. > Top 5 countries having highest net income per person are ___Qatar, Luxembourg, Brunei, Kuwait and Singapore.___","4d33ceac":"Finally we can see that using, k-means clustering method, clusters have been formed as\n\nlabel = 0, low income, low GDP and high child mortality\n\nlabel = 1, high income, high GDP and low child mortality\n\nlabel = 2, moderate income, moderate GDP and low child mortality\n\nInorder to suggest the backward countries, we should focus on data where cluster label = 0\n\nLets proceed further to check Hierarchical clustering","e9f26166":"**Inferences:**\n> 1. From the above plot, we can infer that there is a high correlation between income and GDP, so, if average net income per person increases the GDP of the country will also increase.\n> 2. If child mortality(Death of children under 5 years of age per 1000 live births) decreases the life expectancy will also decreases.\n> 3. If you spend more on Health , then the child mortality will reduce and it will increase the GDP rate.","975e440b":"___Our main task is to cluster the countries by the factors mentioned above and then present solution and recommendations to the CEO___","5e0d42e6":"### Single linkage","a44b8c85":"From the above plot we can clearly see that elbow has been formed at k = 3 or k = 5\n\nFurther, lets proceed with Silhouette Analysis to check the best k value","caec8abf":"This is my solution approach, let me know in case if you have any questions.\n\nThank you and Keep learning!"}}