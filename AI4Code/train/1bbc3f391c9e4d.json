{"cell_type":{"85082554":"code","8efb0484":"code","396046d6":"code","b21988bb":"code","b5a992b7":"code","a5bdf42a":"code","1301fde5":"code","aaba08b2":"code","3552bd1d":"code","5db61f67":"code","aa8bf93e":"code","7acfcc21":"code","3c8510e8":"code","bf89fdea":"code","a3f4530c":"code","4c9d19cf":"code","7d26c94a":"code","85709a47":"code","8599cae5":"code","d6d14635":"code","54a4c945":"code","91c0cf74":"code","57891fa7":"code","15957828":"code","daab3f1b":"code","fac34d0d":"code","8e6d71e6":"code","ba38ab5e":"code","2177b9ba":"code","f63a9b72":"code","0448335d":"code","3e98a053":"markdown"},"source":{"85082554":"import numpy as np\nimport pandas as pd\nfrom pandas import datetime\nimport matplotlib.pyplot as plt","8efb0484":"def parser(x):\n    return datetime.strptime(x, \"%Y-%m\")","396046d6":"data = pd.read_csv(\"..\/input\/sales-cars.csv\", index_col = 0, parse_dates=[0], date_parser = parser)","b21988bb":"data.shape","b5a992b7":"data.head()","a5bdf42a":"data.columns","1301fde5":"data.plot()","aaba08b2":"from statsmodels.graphics.tsaplots import plot_acf\nplot_acf(data)","3552bd1d":"data.shift(1)","5db61f67":"diff_data = data.diff(periods=1)","aa8bf93e":"diff_data.head()","7acfcc21":"diff_data = diff_data[1:]","3c8510e8":"plot_acf(diff_data)","bf89fdea":"diff_data.head()","a3f4530c":"diff_data.plot()","4c9d19cf":"x = data.values\ntrain = x[:27]\ntest = x[27:]","7d26c94a":"train.size, test.size","85709a47":"from statsmodels.tsa.ar_model import AR\nfrom sklearn.metrics import mean_squared_error\nar_model = AR(train)\nar_fit = ar_model.fit()","8599cae5":"predictions = ar_fit.predict(start=27, end=36)","d6d14635":"plt.plot(test)\nplt.plot(predictions, color='red')","54a4c945":"from statsmodels.tsa.arima_model import ARIMA\narima_model = ARIMA(train, order=(2,1,0))\narima_fit = arima_model.fit()","91c0cf74":"print(arima_fit.aic)","57891fa7":"predictions = arima_fit.forecast(steps=9)[0]","15957828":"print(predictions)","daab3f1b":"plt.plot(test)\nplt.plot(predictions, color='red')","fac34d0d":"import itertools\np=d=q = range(0,5)\npdq = list(itertools.product(p,d,q))","8e6d71e6":"pdq","ba38ab5e":"import warnings\nwarnings.filterwarnings('ignore')","2177b9ba":"for param in pdq:\n    try:\n        arima_model = ARIMA(train, order=param)\n        arima_fit = arima_model.fit()\n        aic = arima_fit.aic\n        print(param, aic)\n    except:\n        continue","f63a9b72":"arima_model = ARIMA(train, order=(3,2,4))\narima_fit = arima_model.fit()\npredictions = arima_fit.forecast(steps=9)[0]\nprint(predictions)","0448335d":"plt.plot(test)\nplt.plot(predictions, color='red')","3e98a053":"# libraries"}}