{"cell_type":{"a7f8a0ac":"code","456a3538":"code","7ab2311b":"code","200b9f19":"code","12e1aa3f":"code","959fd506":"code","3fb03933":"code","29946dd5":"code","82752137":"code","78379d29":"code","e6c77685":"code","f55341fc":"code","17a1221c":"code","c7b597c3":"code","9ea9539b":"code","3412e541":"code","7e8952c7":"code","a605f05c":"code","37e623cb":"code","3a3f5363":"code","080bf77c":"code","135ea21b":"code","5cabc59e":"code","1a7332b1":"code","eca1ecb4":"code","e834db6f":"code","29b30ab6":"code","611818e2":"code","8f834d44":"code","40c36ede":"code","415c059b":"code","c4709530":"code","4778b4dd":"code","1da9afed":"code","f0a0b875":"code","31a4813e":"code","d03a82aa":"code","7f3a4426":"code","17da8d9e":"code","edde0c6b":"code","0d0ca6d8":"code","450c7d06":"code","4b9fdb2d":"markdown","3669900d":"markdown","d9be2d7f":"markdown","2acfac29":"markdown","44a6a68e":"markdown","c83b4ff2":"markdown","7ff84b7f":"markdown","c3cc16d3":"markdown","47fa64d6":"markdown","d922d8d6":"markdown","1a7fc8a9":"markdown","d786a039":"markdown","b5c3051c":"markdown","ba4d89bf":"markdown"},"source":{"a7f8a0ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","456a3538":"wine_reviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\")\n","7ab2311b":"wine_reviews.shape","200b9f19":"wine_reviews.info()","12e1aa3f":"import missingno as msno\n\nmsno.matrix(wine_reviews)","959fd506":"wine_reviews.head()","3fb03933":"# 1\ubc88\uc9f8 \uceec\ub7fc index\ub85c \uac00\uc838\uc624\uae30\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\nreviews","29946dd5":"import pandas as pd #Library to handle with dataframes\nimport matplotlib.pyplot as plt # Library to plot graphics\nimport numpy as np # To handle with matrices\nimport seaborn as sns # to build modern graphics\nfrom scipy.stats import kurtosis, skew # it's to explore some statistics of numerical values\nfrom scipy import stats","82752137":"reviews.country.count()","78379d29":"# \uacb0\uce21\uce58 \ud655\uc778\nreviews.shape[0] - reviews.country.count()","e6c77685":"print(reviews.country.nunique()) # nunique\uc5d0\ub294 \uacb0\uce21\uce58\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc74c\nreviews.country.unique()","f55341fc":"no_country = reviews[reviews['country'].isnull()]\nno_country","17a1221c":"# \uad6d\uac00 \uacb0\uce21\uce58 \ud589\uc758 \uc640\uc774\ub108\ub9ac \ub9ac\uc2a4\ud2b8 \uc0dd\uc131 \nprint(no_country['winery'].nunique())\nwinery_no_country = no_country['winery'].unique()\nwinery_no_country","c7b597c3":"# \uacb0\uce21\uce58 \uc5c6\ub294 \uad6d\uac00 \ub9ac\uc2a4\ud2b8 \uc0dd\uc131 \ncountry_list = reviews['country'].dropna(axis=0).unique()\nprint(len(country_list))\ncountry_list","9ea9539b":"# \uad6d\uac00\uba85\uc774 \uc5c6\ub294 winery\uc758 \uad6d\uac00\uac12 \ub3c4\ucd9c\ncountry_winery = reviews.loc[(reviews.country.isin(country_list) & reviews.winery.isin(winery_no_country))]\ndf_country_by_winery = country_winery.loc[:, ['country','winery']].drop_duplicates()\ndf_country_by_winery","3412e541":"# dict\ud615\ud0dc\ub85c \ubcc0\uacbd\ndf_country_by_winery_dict = dict(zip(df_country_by_winery.winery, df_country_by_winery.country))\ndf_country_by_winery_dict","7e8952c7":"df_country_by_winery_dict.keys()\ndf_country_by_winery_dict.values()\ndf_country_by_winery_dict['Barton & Guestier']","a605f05c":"# \uc640\uc774\ub108\ub9ac\ubcc4\ub85c \uad6d\uac00\uac12\uc774 2\uac1c \uc774\uc0c1\uc778 \ub370\uc774\ud130\uac00 \uc788\ub294\uc9c0 \ud655\uc778 \ndf = reviews.loc[reviews.winery.isin(df_country_by_winery.index)]\ndf.loc[:, ['country','winery']].drop_duplicates().sort_values(by=['winery'])","37e623cb":"# nan\uac12 \ucc44\uc6b8 \ubcf5\uc0ac\ubcf8 \uc0dd\uc131\n\nrenew_reviews = reviews.copy()\nrenew_reviews","3a3f5363":"# \ub9e4\ud551 \ud568\uc218 \uc0dd\uc131\ndef item_mapping(df, dictionary, colsource, coltarget):\n    dict_keys = list(dictionary.keys())\n    dict_values = list(dictionary.values())\n    for x in range(len(dict_keys)):\n        df.loc[df[colsource]==dict_keys[x], coltarget] = dict_values[x]\n    return(df)\n\nitem_mapping(renew_reviews, df_country_by_winery_dict, 'winery', 'country')","080bf77c":"print(renew_reviews[renew_reviews['country'].isnull()].shape)\nrenew_reviews[renew_reviews['country'].isnull()]","135ea21b":"# \uc6d0\ubcf8 \ub370\uc774\ud130 country \uac12\nreviews_by_country = reviews.groupby('country')[['description']].count().sort_values(by=\"description\", ascending=False)\nreviews_by_country.columns = ['count']\nreviews_by_country.head(10)","5cabc59e":"renew_reviews_by_country = renew_reviews.groupby('country')[['description']].count().sort_values(by=\"description\", ascending=False)\nrenew_reviews_by_country.columns = ['count']\nrenew_reviews_by_country.head(10)","1a7332b1":"reviews_by_country['count'].sum()","eca1ecb4":"renew_reviews_by_country['count'].sum()","e834db6f":"renew_reviews.describe()","29b30ab6":"# define the size of figures that I will build\nplt.figure(figsize=(16,5))\n\nplt.subplot(1,2,1) # this will create a grid of 1 row and 2 columns; this is the first graphic\ng = sns.countplot(x='points', data=renew_reviews, color='forestgreen') # seting the seaborn countplot to known the points distribuition\ng.set_title(\"Points Count distribuition \", fontsize=20) # seting title and size of font\ng.set_xlabel(\"Points\", fontsize=15) # seting xlabel and size of font\ng.set_ylabel(\"Count\", fontsize=15) # seting ylabel and size of font\n\nplt.subplot(1,2,2)  # this will set the second graphic of our grid\nplt.scatter(range(renew_reviews.shape[0]), np.sort(renew_reviews.points.values), color='forestgreen') # creating a cumulative distribution\nplt.xlabel('Index', fontsize=15)  # seting xlabel and size of font\nplt.ylabel('Points Dist(US)', fontsize=15)  # seting ylabel and size of font\nplt.title(\"Points Distribuition\", fontsize=20) # seting title and size of font\n\nplt.show() #rendering the graphs","611818e2":"# \ud3ec\uc778\ud2b8 \uce74\ud14c\uace0\ub9ac\ud654 \ud558\uc5ec \ube44\uc728 \ud655\uc778\ud558\uae30\n\ndef cat_points(points):\n    if points in list(range(80,83)):\n        return 0\n    elif points in list(range(83,87)):\n        return 1\n    elif points in list(range(87,90)):\n        return 2\n    elif points in list(range(90,94)):\n        return 3\n    elif points in list(range(94,98)):\n        return 4\n    else:\n        return 5\n\nrenew_reviews[\"rating_cat\"] = renew_reviews[\"points\"].apply(cat_points)","8f834d44":"total = len(renew_reviews)\nplt.figure(figsize=(14,6))\n\ng = sns.countplot(x='rating_cat', color='darkgreen',\n                  data=renew_reviews)\ng.set_title(\"Point Categories Counting Distribution\", fontsize=20)\ng.set_xlabel(\"Categories \", fontsize=15)\ng.set_ylabel(\"Total Count\", fontsize=15)\n\nsizes=[]\n\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}%'.format((height\/total)*100),\n            ha=\"center\", fontsize=14) \n    \ng.set_ylim(0, max(sizes) * 1.15)\n\nplt.show()","40c36ede":"renew_reviews['price_log'] = np.log(renew_reviews['price'])","415c059b":"plt.figure(figsize=(14,5))\n\ng1 = plt.subplot(121)\ng1 = sns.distplot(np.log(renew_reviews['price'].dropna() + 1),\n                  color='darkgreen')\ng1.set_title(\"Price Log distribuition  \", fontsize=20)\ng1.set_xlabel(\"Price(Log)\", fontsize=15)\ng1.set_ylabel(\"Frequency LOG\", fontsize=15)\n\nplt.subplot(122)\nplt.scatter(range(renew_reviews.shape[0]), np.sort(renew_reviews.price.values), \n            color='darkgreen')\nplt.xlabel('Index', fontsize=15)\nplt.ylabel('Prices(US)', fontsize=15)\nplt.title(\"Distribuition of prices\", fontsize=20)\n\n\nplt.show()","c4709530":"# $300 \ubbf8\ub9cc \uc640\uc778 \uc2dc\uac01\ud654\n\nplt.figure(figsize=(12,5))\n\ng = sns.distplot(renew_reviews[renew_reviews['price'] < 300]['price'], color='darkgreen')\ng.set_title(\"Price Distribuition Filtered 300\", fontsize=20)\ng.set_xlabel(\"Prices(US)\", fontsize=15)\ng.set_ylabel(\"Frequency Distribuition\", fontsize=15)\n\n\nplt.show()","4778b4dd":"plt.figure(figsize=(14,6))\n\ncountry = renew_reviews.country.value_counts()[:20] # \uc0c1\uc704 20\uac1c\uad6d\n\ng = sns.countplot(x='country', \n                  data=renew_reviews[renew_reviews.country.isin(country.index.values)],\n                 color='darkgreen')\ng.set_title(\"Country Of Wine Origin Count\", fontsize=20)\ng.set_xlabel(\"Country's \", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\n\nplt.show()","1da9afed":"plt.figure(figsize=(10,4))\n\ng = sns.regplot(x='points', y='price_log', \n                data=renew_reviews, line_kws={'color':'red'},\n                x_jitter=True, fit_reg=True, color='darkgreen')\ng.set_title(\"Points x Price Distribuition\", fontsize=20)\ng.set_xlabel(\"Points\", fontsize= 15)\ng.set_ylabel(\"Price (log)\", fontsize= 15)\n\nplt.show()","f0a0b875":"plt.figure(figsize=(16,12))\n\nplt.subplot(2,1,1)\ng = sns.boxplot(x='country', y='price_log',\n                  data=renew_reviews.loc[(renew_reviews.country.isin(country.index.values))],\n                 color='darkgreen')\ng.set_title(\"Price by Country Of Wine Origin\", fontsize=20)\ng.set_xlabel(\"Country's \", fontsize=15)\ng.set_ylabel(\"Price Dist(US)\", fontsize=15)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\n\nplt.subplot(2,1,2)\ng1 = sns.boxplot(x='country', y='points',\n                   data=renew_reviews[renew_reviews.country.isin(country.index.values)],\n                 color='darkgreen')\ng1.set_title(\"Points by Country Of Wine Origin\", fontsize=20)\ng1.set_xlabel(\"Country's \", fontsize=15)\ng1.set_ylabel(\"Points\", fontsize=15)\ng1.set_xticklabels(g1.get_xticklabels(),rotation=45)\n\nplt.subplots_adjust(hspace = 0.6,top = 0.9)\n\nplt.show()","31a4813e":"plt.figure(figsize=(14,15))\n\nprovinces = renew_reviews['province'].value_counts()[:20]\n\n# count\nplt.subplot(3,1,1)\ng = sns.countplot(x='province', \n                  data=renew_reviews.loc[(renew_reviews.province.isin(provinces.index.values))], \n                  color='darkgreen')\ng.set_title(\"Province Of Wine Origin \", fontsize=20)\ng.set_xlabel(\"Provinces\", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\n\n# price\nplt.subplot(3,1,2)\ng1 = sns.boxplot(y='price', x='province',\n                  data=renew_reviews.loc[(renew_reviews.province.isin(provinces.index.values))], \n                  color='darkgreen')\ng1.set_title(\"Province Of Wine Origin \", fontsize=20)\ng1.set_xlabel(\"Province\", fontsize=15)\ng1.set_ylabel(\"Price\", fontsize=15)\ng1.set_xticklabels(g1.get_xticklabels(),rotation=45)\n\n# piont\nplt.subplot(3,1,3)\ng2 = sns.boxplot(y='points', x='province',\n                  data=renew_reviews.loc[(renew_reviews.province.isin(provinces.index.values))], \n                  color='darkgreen')\ng2.set_title(\"Province Of Wine Origin\", fontsize=20)\ng2.set_xlabel(\"Provinces\", fontsize=15)\ng2.set_ylabel(\"Points\", fontsize=15)\ng2.set_xticklabels(g2.get_xticklabels(),rotation=45)\n\nplt.subplots_adjust(hspace = 0.6,top = 0.9)\n\nplt.show()","d03a82aa":"renew_reviews.taster_name.nunique()","7f3a4426":"plt.figure(figsize=(14,16))\n\n\nplt.subplot(3,1,1)\ng = sns.countplot(x='taster_name', data=renew_reviews, color='darkgreen')\ng.set_title(\"Taster Name Count\", fontsize=20)\ng.set_xlabel(\"Taster Name\", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\n\nplt.subplot(3,1,2)\ng1 = sns.boxplot(y='price_log', x='taster_name', data=renew_reviews, \n                 color='darkgreen')\ng1.set_title(\"Taster Name Wine Values Distribuition \", fontsize=20)\ng1.set_xlabel(\"Taster Name\", fontsize=15)\ng1.set_ylabel(\"Price\", fontsize=15)\ng1.set_xticklabels(g1.get_xticklabels(),rotation=45)\n\nplt.subplot(3,1,3)\ng2 = sns.boxplot(y='points', x='taster_name',\n                  data=renew_reviews, color='darkgreen')\ng2.set_title(\"Taster Name Points Distribuition\", fontsize=20)\ng2.set_xlabel(\"Taster Name\", fontsize=15)\ng2.set_ylabel(\"Points\", fontsize=15)\ng2.set_xticklabels(g2.get_xticklabels(),rotation=45)\n\nplt.subplots_adjust(hspace = 0.6,top = 0.9)\n\nplt.show()","17da8d9e":"plt.figure(figsize=(14,16))\n\nvariety = renew_reviews.variety.value_counts()[:20]\n\nplt.subplot(3,1,1)\ng = sns.countplot(x='variety', \n                  data=renew_reviews.loc[(renew_reviews.variety.isin(variety.index.values))], \n                  color='darkgreen')\ng.set_title(\"TOP 20 Variety \", fontsize=20)\ng.set_xlabel(\" \", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\n\nplt.subplot(3,1,2)\ng1 = sns.boxplot(y='price_log', x='variety',\n                  data=renew_reviews.loc[(renew_reviews.variety.isin(variety.index.values))], \n                 color='darkgreen')\ng1.set_title(\"Price by Variety's\", fontsize=20)\ng1.set_xlabel(\"\", fontsize=15)\ng1.set_ylabel(\"Price\", fontsize=15)\ng1.set_xticklabels(g1.get_xticklabels(),rotation=45)\n\nplt.subplot(3,1,3)\ng2 = sns.boxplot(y='points', x='variety',\n                  data=renew_reviews.loc[(renew_reviews.variety.isin(variety.index.values))], \n                 color='darkgreen')\ng2.set_title(\"Points by Variety's\", fontsize=20)\ng2.set_xlabel(\"Variety's\", fontsize=15)\ng2.set_ylabel(\"Points\", fontsize=15)\ng2.set_xticklabels(g2.get_xticklabels(),rotation=90)\n\nplt.subplots_adjust(hspace = 0.7,top = 0.9)\n\nplt.show()","edde0c6b":"from wordcloud import WordCloud, STOPWORDS\n\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(\n    background_color='white',\n    stopwords=stopwords,\n    max_words=300,\n    max_font_size=200, \n    width=1000, height=800,\n    random_state=42,\n).generate(\" \".join(renew_reviews['description'].astype(str)))\n\nprint(wordcloud)\nfig = plt.figure(figsize = (12,14))\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - DESCRIPTION\",fontsize=25)\nplt.axis('off')\nplt.show()","0d0ca6d8":"# StipWords Update\n\nnewStopWords = ['fruit', \"Drink\", \"black\", 'wine', 'drink']\nstopwords.update(newStopWords)\n\nwordcloud = WordCloud(\n    background_color='white',\n    stopwords=stopwords,\n    max_words=300,\n    max_font_size=200, \n    width=1000, height=800,\n    random_state=42,\n).generate(\" \".join(renew_reviews['description'].astype(str)))\n\nprint(wordcloud)\nfig = plt.figure(figsize = (12,14))\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - DESCRIPTION\",fontsize=25)\nplt.axis('off')\nplt.show()","450c7d06":"wordcloud = WordCloud(\n    background_color='white',\n    stopwords=stopwords,\n    max_words=300,\n    max_font_size=200, \n    width=1000, height=800,\n    random_state=42,\n).generate(\" \".join(renew_reviews['title'].astype(str)))\n\nprint(wordcloud)\nfig = plt.figure(figsize = (12,14))\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TITLES\",fontsize=25)\nplt.axis('off')\nplt.show()","4b9fdb2d":"## WORDCLOUDS OF DESCRIPTIONS","3669900d":"## Points and Prices","d9be2d7f":"> country \uce7c\ub7fc nan \uac12 63\uac1c\uc5d0\uc11c 31\uac1c\ub85c \uc904\uc784","2acfac29":"> \ub300\ubd80\ubd84\uc758 \uc640\uc778\uc740 $100 \uc774\ud558\uc5d0 \ubd84\ud3ec\ub418\uc5b4 \uc788\ub294\uc810 \ud655\uc778 \uac00\ub2a5","44a6a68e":"## Country \uacb0\uce21\uac12 \ucc44\uc6b0\uae30","c83b4ff2":"## Variety","7ff84b7f":"- counrty\uac00 nan \uac12\ub4e4\uc758 region1, region2 \uceec\ub7fc \ubaa8\ub450 nan \uac12\uc784 \ud655\uc778\n- \ud558\uc9c0\ub9cc winery\uac12\uc740 \uac00\uc9c0\uace0 \uc788\ub294 \uc810 \ud655\uc778\n- winery \uac12\uc744 \ud65c\uc6a9\ud558\uc5ec country nan\uac12 \ub9e4\ud551\uac00\ub2a5\ud55c \uc810 \ud655\uc778","c3cc16d3":"> \uc8fc\uc694 10\uad6d\uc5d0 \uc788\uc5b4\uc120 nan\uac12\uc774 \uc8fc\uc694\ud558\uac8c \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub294 \uc810 \ud655\uc778","47fa64d6":"## Country","d922d8d6":"> - points \uac12\uc740 80~100 \uc0ac\uc774\uc5d0 \ubd84\ud3ec\ud558\uace0 \uc788\uc74c \ud655\uc778 \uac00\ub2a5(80\uc774\uc0c1 \ub370\uc774\ud130\ub9cc \uc218\uc9d1)\n> - price\uc758 \uacbd\uc6b0 \uac00\uaca9\uc740 \ucd5c\uc18c\uac12, \ucd5c\ub300\uac12 \ud45c\uc900\ud3b8\ucc28 \ud655\uc778\uc2dc \ub113\uac8c \ubd84\ud3ec\ud558\uace0 \uc788\uc74c \ud655\uc778 \uac00\ub2a5","1a7fc8a9":"## WORDCLOUD OF WINE TITLES","d786a039":"> \uac00\uc7a5 \ub192\uc740 \uac00\uaca9\uc758 \uc640\uc778\uc774 \uac00\uc7a5 \ub192\uc740 \ud3c9\uc810\uc744 \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\uc740\uc810 \ud655\uc778 \uac00\ub2a5","b5c3051c":"## Taster","ba4d89bf":"## Province"}}