{"cell_type":{"ef2c47a6":"code","acc7e46a":"code","5438a771":"code","0949a54e":"code","a45b29d0":"code","bf210f0f":"code","bfa264eb":"code","5121814c":"code","a18ea39e":"code","113761aa":"code","fb45b743":"code","a9992389":"code","1912a6fc":"code","6db60453":"code","82bb76e9":"code","b295f2c4":"code","e49caed2":"code","a9aad371":"code","27bbd400":"code","c8135893":"code","949f8c22":"code","25b7c569":"code","be6d8b40":"code","dc655d9d":"code","402a3204":"code","b96fe37d":"code","5a4c640a":"code","b132adcb":"code","76034b1f":"code","ecc9f13a":"code","7f9ccb16":"code","01c8acf1":"code","f747ee3d":"code","406f81fb":"code","76d30a0e":"code","1d058f78":"code","f31ebc99":"code","1b9d559a":"code","2c1db81f":"code","ab770c2a":"code","8a1712ed":"code","269bd248":"code","d5cbcadb":"code","cca7a494":"code","2a92d4cd":"code","c4b9f95b":"code","0cfa78d4":"code","49870d61":"code","0b4aa4d7":"code","57760a6a":"code","237f3a2b":"code","0202dabf":"code","dd3a0129":"code","2623a965":"code","0b78a778":"code","fc82811c":"code","cdd6f789":"code","0e7f6e4f":"code","89b05e4c":"code","54adb77e":"code","2402384d":"markdown","bf748287":"markdown","16e568c5":"markdown","c207375e":"markdown","da436755":"markdown","75d04291":"markdown","11fe8241":"markdown","559c3b90":"markdown","91c4a726":"markdown","3aceaf24":"markdown","1eeaec51":"markdown","26587ebb":"markdown","1f66f070":"markdown","bbb6dafc":"markdown","57b649fc":"markdown","d627eb77":"markdown","ed229a11":"markdown","e8263e49":"markdown","feb89e4c":"markdown","45070609":"markdown","91c4c0cb":"markdown","8bc286dc":"markdown","4672870e":"markdown","29750cdf":"markdown","87f2260e":"markdown","09a020ba":"markdown","4b754493":"markdown","5add446a":"markdown","ea558658":"markdown","c4887d89":"markdown","e4554567":"markdown","17e46447":"markdown","1feedf02":"markdown","3c723238":"markdown","6251f005":"markdown","2c1bf575":"markdown","cbb1663b":"markdown","b7497c13":"markdown","bfbf1145":"markdown","95195848":"markdown","88e54f66":"markdown","50344922":"markdown","7d668615":"markdown","05b3b9e9":"markdown","0ed20776":"markdown","13db2245":"markdown","8e155375":"markdown","4e438c23":"markdown","060dab96":"markdown","5346033f":"markdown","77762394":"markdown","da6e3248":"markdown","8ef9c699":"markdown","86f0806a":"markdown"},"source":{"ef2c47a6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","acc7e46a":"df = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","5438a771":"df.head()","0949a54e":"df.info()","a45b29d0":"df.groupby('quality').mean()['fixed acidity'].plot(kind='bar')\nplt.ylabel('Mean Fixed Acidity')","bf210f0f":"sns.lmplot(x='volatile acidity',y='quality',data=df)","bfa264eb":"df.groupby('quality').mean()['volatile acidity'].plot(kind='bar')\nplt.ylabel('Mean Volatile Acidity')","5121814c":"df.groupby('quality').mean()['citric acid'].plot(kind='bar')\nplt.ylabel('Mean Citric Acid Level')","a18ea39e":"df.groupby('quality').mean()['residual sugar'].plot(kind='bar')\nplt.ylabel('Mean Residual Sugar Level')","113761aa":"df.groupby('quality').mean()['chlorides'].plot(kind='bar')\nplt.ylabel('Mean Chloride Level')","fb45b743":"df.groupby('quality').mean()['free sulfur dioxide'].plot(kind='bar')\nplt.ylabel('Mean Free Sulfur Dioxide')","a9992389":"sns.scatterplot(x='free sulfur dioxide',y='quality',data=df)","1912a6fc":"df.groupby('quality').mean()['total sulfur dioxide'].plot(kind='bar')\nplt.ylabel('Mean Total Sulfur Dioxide Level')","6db60453":"df.groupby('quality').mean()['density'].plot(kind='bar')\nplt.ylabel('Mean Density')\nplt.ylim(0.99,1)","82bb76e9":"df.groupby('quality').mean()['pH'].plot(kind='bar')\nplt.ylabel('Mean pH Level')","b295f2c4":"df.groupby('quality').mean()['sulphates'].plot(kind='bar')\nplt.ylabel('Mean Sulphate Level')","e49caed2":"df.groupby('quality').mean()['alcohol'].plot(kind='bar')\nplt.ylabel('Mean Alcohol Level')","a9aad371":"series = pd.Series(df.corr()['quality'])\nseries.drop('quality').plot(kind='bar')","27bbd400":"plt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True)","c8135893":"sns.scatterplot(x='fixed acidity',y='citric acid',hue='quality',data=df)","949f8c22":"df['citric acid percentage'] = df['citric acid'] \/ (df['citric acid'] + df['fixed acidity'])","25b7c569":"df.groupby('quality').mean()['citric acid percentage'].plot(kind='bar')\nplt.ylabel('Mean Citric Acid Percentage')","be6d8b40":"sns.scatterplot(x='fixed acidity',y='density',hue='quality',data=df)","dc655d9d":"sns.scatterplot(x='fixed acidity',y='pH',hue='quality',data=df)","402a3204":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='volatile acidity',y='citric acid',hue='quality',data=df)","b96fe37d":"sns.scatterplot(x='citric acid',y='pH',hue='quality',data=df)","5a4c640a":"sns.scatterplot(x='residual sugar',y='density',hue='quality',data=df)","b132adcb":"sns.scatterplot(x='chlorides',y='sulphates',hue='quality',data=df)","76034b1f":"sns.scatterplot(x='free sulfur dioxide',y='total sulfur dioxide',hue='quality',data=df)\nplt.plot(range(0,71),range(0,71))","ecc9f13a":"df['free sulfur dioxide percentage'] = df['free sulfur dioxide'] \/ (df['free sulfur dioxide'] + df['total sulfur dioxide'])\ndf.groupby('quality').mean()['free sulfur dioxide percentage'].plot(kind='bar')\nplt.ylabel('Mean Free Sulfur Dioxide Percentage')","7f9ccb16":"df.corr()['quality']","01c8acf1":"sns.scatterplot(x='alcohol',y='density',hue='quality',data=df)","f747ee3d":"df = df.drop(['free sulfur dioxide','fixed acidity'],axis=1)","406f81fb":"df.head()","76d30a0e":"sns.countplot(x='quality',data=df)","1d058f78":"df.groupby('quality').count()['pH'] * 100 \/len(df)","f31ebc99":"df['new_rating'] = df['quality'].apply(lambda x: 1 if x >= 6 else 0)","1b9d559a":"sns.countplot(x='new_rating',data=df)","2c1db81f":"df['new_rating'].value_counts() * 100 \/ len(df)","ab770c2a":"X = df.drop(['quality','new_rating'],axis=1)\ny = df['new_rating']\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","8a1712ed":"from sklearn.linear_model import LogisticRegression\nlogmodel = LogisticRegression(max_iter=1500)\nlogmodel.fit(X_train, y_train)\nlogmodelpreds = logmodel.predict(X_test)","269bd248":"from sklearn.metrics import confusion_matrix, classification_report\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,logmodelpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,logmodelpreds))","d5cbcadb":"from sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier()\ntree.fit(X_train, y_train)\ntreepreds = tree.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,treepreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,treepreds))","cca7a494":"from sklearn.ensemble import RandomForestClassifier\nforest = RandomForestClassifier(n_estimators=100)\nforest.fit(X_train, y_train)\nforestpreds = forest.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,forestpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,forestpreds))","2a92d4cd":"from sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(X_train, y_train)\nsvcpreds = svc.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,svcpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,svcpreds))","c4b9f95b":"param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} \nfrom sklearn.model_selection import GridSearchCV\ngrid = GridSearchCV(SVC(),param_grid,refit=True,verbose=3)\ngrid.fit(X_train,y_train)","0cfa78d4":"grid.best_estimator_\ngridpreds = grid.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,gridpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,gridpreds))","49870d61":"from xgboost import XGBClassifier\nxgb = XGBClassifier()\nxgb.fit(X_train, y_train)\nxgbpreds = xgb.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,xgbpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,xgbpreds))","0b4aa4d7":"df = df.drop('new_rating',axis=1)\ndf.head()","57760a6a":"df = df[['volatile acidity','citric acid','residual sugar','chlorides','total sulfur dioxide','density','pH','sulphates','alcohol','citric acid percentage','free sulfur dioxide percentage','quality']]\ndf.head(2)","237f3a2b":"data = df.values\nX = data[:, :-1]\ny = data[:, -1]\nX_columns = df.columns[:-1]\ny_columns = df.columns[-1]\n\nfrom imblearn.over_sampling import SMOTE\noversample = SMOTE()\nX, y = oversample.fit_sample(X, y)\n\nX_sampled = pd.DataFrame(X, columns=X_columns)\ny_sampled = pd.DataFrame(y, columns=[y_columns])\ndf = pd.concat([X_sampled,y_sampled],axis=1)","0202dabf":"sns.countplot(x='quality',data=df)","dd3a0129":"df['quality'].value_counts()","2623a965":"X = df.drop('quality',axis=1)\ny = df['quality']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=101)","0b78a778":"logmodel = LogisticRegression(max_iter=5000)\nlogmodel.fit(X_train, y_train)\nlogmodelpreds = logmodel.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,logmodelpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,logmodelpreds))\n","fc82811c":"tree = DecisionTreeClassifier()\ntree.fit(X_train, y_train)\ntreepreds = tree.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,treepreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,treepreds))","cdd6f789":"forest = RandomForestClassifier(n_estimators=100)\nforest.fit(X_train, y_train)\nforestpreds = forest.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,forestpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,forestpreds))","0e7f6e4f":"svc = SVC()\nsvc.fit(X_train, y_train)\nsvcpreds = svc.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,svcpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,svcpreds))","89b05e4c":"param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} \nfrom sklearn.model_selection import GridSearchCV\ngrid = GridSearchCV(SVC(),param_grid,refit=True,verbose=3)\ngrid.fit(X_train,y_train)\n\ngrid.best_estimator_\ngridpreds = grid.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,gridpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,gridpreds))","54adb77e":"xgb = XGBClassifier()\nxgb.fit(X_train, y_train)\nxgbpreds = xgb.predict(X_test)\n\nprint(\"Confusion Matrix: \")\nprint(confusion_matrix(y_test,xgbpreds))\nprint(\"-\" * 50)\nprint(\"Classification Report: \")\nprint(classification_report(y_test,xgbpreds))","2402384d":"We can see that we have a total of 11 features that can be used to predict the value of target variable \"quality\". ","bf748287":"The relationship between these two variables is clearly negative for the same reasons as the relationship between fixed acidity and pH.\n\n#### 1.2.6: Residual Sugar v Density","16e568c5":"Let us now check the distribution of our target class by producing a countplot.","c207375e":"We also notice that each feature is in a numerical format and that we have a total of 1599 different wines stored within our dataset.\n\n### 1.1: Impact of Features on our Target Variable\n\nIn this section we shall attempt to understand how each of our features in turn impacts the quality rating of wine. \n\n#### 1.1.1: Fixed Acidity","da436755":"Our random forest classifier achieved 80% accuracy.\n\n#### 3.1.4: Support Vector Machines","75d04291":"As with free sulfur dioxide above, it is difficult to determine whether this feature is an important factor. Further investigation on the relatonship between the \"free sulfur dioxide\" and \"total sulfur dioxide\" shall be done in section 1.2\n\n#### 1.1.8: Density","11fe8241":"We can see that, despite a negative relationship shown in the graph, there is no clear relationship between the density of the wine and its quality. The range of densities contained within our dataset is so small that any relationship would be insignificant. As a result, we can assume that there is no relationship between these two variables.\n\n#### 1.1.9: pH","559c3b90":"Let us check that the technique worked and that we have balanced classes.","91c4a726":"The plot and series above show that we now posses 681 wines for each quality rating, meaning that we have a perfectly balanced dataset as required. Let us now move on to create training and testing sets for this data.","3aceaf24":"We can see a clear negative relationship between these two variables.\n\n## 2: Data Preprocessing\n\nIn this section we shall manipulate our dataset for use in the machine learning algorithms that we shall implement in section 3. \n\nFrom the analysis we perform in section 1, we identified 5 key variables in predicting wine quality. These were alcohol, sulphates, chlorides, citric acid and volatile acidity. We also created two new variables, citric acid percentage and free sulfur dioxide percentage, which we also found to be useful. \n\nWe must now remove any variables which we find are not useful or variables that may cause multicolinearity issues. As a result, we shall remove the columns free sulfur dioxide and fixed acidity.","1eeaec51":"Our XGBoost model achieved 78% accuracy.\n\nIn summary, each of our models achieved at least 70% accuracy. The reason for this relatively low score may be due to the fact that there were lots of cases that were located close to boundary between \"good\" and \"bad\", since about 40% of our datapoints belonged to both quality rating 5 or 6. However, our random forest model managed to achieve a much better 80% accuracy. \n\n### 3.2 Predicting Quality Rating\n\nIn this section we shall attempt to solve our original problem of predicting the quality rating of wine given its chemical features. Note that our dataset was extremely unbalanced, which was the major reason for considering the \"good\" v \"bad\" problem above. In order to predict exact quality ratings, we will need to balance our dataset. We can do this using a technique known as SMOTE, which will synthetically produce more samples of the under represented classes. Let us apply this method and then check the number of each wine within eavh quality rating. \n\nFirst, we shall remove the \"new_rating\" target column since it is no longer needed.","26587ebb":"## 3: Model Creation and Analysis\n\nIn this section we shall create and analyse machine learning models in order to predict the quality of wine. \n\n### 3.1: \"Good\" vs \"Bad\" Predictions\n\nIn this section, we shall make use of the \"new_rating\" feature created above to predict whether a wine is either \"good\" or \"bad\". We shall implement a range of machine learning algorithms and attempt to determine which method produces the most accuracy. In this case, we are considering a binary classification problem. Let us begin implementing and analysing the following algorithms:\n\n1. Logistic Regression (75%)\n2. Decision Tree (74%)\n3. Random Forest (80%)\n4. Support Vector Machines (77%)\n5. XGBoost (78%)\n\n#### 3.1.1: Logistic Regression\n\nWe first need to import the Logistic Regression model from scikit-learn. We will then fit the model using our training data, followed by creating predictions using our testing data.","1f66f070":"It is difficult to determine whether this feature has a significant impact on our target variable. For wines with a quality of above 5, as the level of free sulfur dioxide decreases, the quality of wine increases. However, for wines rated as either a 3 or 4, the reverse of this statement is true. \n\nWe shall leave this variable within our dataset as it appears like there is some hidden information within this feature.\n\n#### 1.1.7: Total Sulfur Dioxide","bbb6dafc":"Our support vector machine classifier only achieved 58% accuracy. However, we can use a grid search to attempt to alter the model parameters and achieve a higher accuracy.","57b649fc":"The first thing to notice is that the level of free sulfur dioxide is always less than or equal to the total sulfir dioxide level, which makes intuitive sense. Let us investigate whether the percentage of free sulfur dixoide impacts the quality of wine.","d627eb77":"We can clearly visualise a strong, postive relationship between the citric acid level and the wine's quality. This feature is an important factor in predicting the quality rating.\n\n#### 1.1.4: Residual Sugar","ed229a11":"# Predicting Red Wine Quality\n\nIn this project we shall attempt to understand which chemical features of red wine are the most important factors which contribute to the quality of red wine. \n\nThe dataset used within this project is the 'Red Wine Quality' dataset uploaded to Kaggle by UCI Machine Learning.\n\nThroughout the duration of the project, we shall focus on the following tasks:\n\n0. Package and Data Imports\n1. Exploratory Data Analysis and Visualisation\n2. Data Preprocessing\n3. Model Creation and Analysis\n    1. 'Good' vs 'Bad' Wine predictions\n    2. Predicting Quality Ratings\n    \n## 0: Package and Data Imports\n\nLet us first import the data visualisation libraries that will be needed for the next section.","e8263e49":"Our support vector machine achieves only 37% accuracy. Let us use a grid search to attempt to improve this accuracy.","feb89e4c":"Our grid search has increased the accuracy we were able to achieve from 37% to 82%.\n\n#### 3.2.5: XGBoost","45070609":"We can see that the decision tree model implemented achieved 74% accuracy.\n\n#### 3.1.3: Random Forest","91c4c0cb":"Our logistic regression model achieved 56% accuracy.\n\n#### 3.2.2 Decision Tree","8bc286dc":"As with density above, there is no significant relationshio between the pH level of a wine and its quality.\n\n#### 1.1.10: Sulphates","4672870e":"From the two plots shown above, we can clearly see a strong negative relationship between the quality of wine and its volatile acidity level. Hence, we can deduce that this feature is a significant factor in the prediction of our target variable.\n\n#### 1.1.3: Citric Acid","29750cdf":"We can now clearly see that we have a much more balanced dataset as a result of the new rating system we have implemented.\n\nWe are now able to split our data into training and test sets for use in our machine learning algorithms. ","87f2260e":"Our random forest model has performed the best out of the models created so far, achieving 85% accuracy on our test data.\n\n#### 3.2.4: Support Vector Machines","09a020ba":"Let us reorder the columns of order dataframe so that our target variable shows in the last column.","4b754493":"The plot above shows the average fixed acidity number for each wine grouped by the quality rating it has been given. We can see that the value of this feature does not significantly change with the quality rating. As a result, we can determine that this features is not a useful predictor of the target variable.\n\n#### 1.1.2: Volatile Acidity","5add446a":"Our XGBoost model achieved a 75% accuracy.","ea558658":"Here, we see a clear negative relationshio between these variables. This intuitively makes sense, since pH is a direct measure of how acidic or alkaline a substance is. The more acidic the wine is, the lower the pH value is because of the scale that is used when measuring pH levels. A substance with 0pH is extremelty acidic, 7pH is neutral and 13pH is extremely alkaline. \n\n#### 1.2.4: Volatile Acidity v Citric Acid","c4887d89":"The negative relationship between these variables is clear. Volatile acidity is commonly used as a measure of wine spoilage, and manufactures aim to keep the level of volatile acidity negligible. This may be the reason why we see more high quality wines to the top left of the scatter plot above. This is because in this region the citric acid levels are high, which contribute to the taste of the wine, and the volatile acidity levels are low, which reduce the spoilage. \n\n#### 1.2.5: Citric Acid v pH","e4554567":"Now that we have oversampled and split our data into training and test sets, we are now in a position to begin implementing machine learning models to predict the quality of wine.\n\n#### 3.2.1: Logistic Regression","17e46447":"Once again we can see a clear positive relationship between these two variables.\n\n#### 1.2.3: Fixed Acidity v pH","1feedf02":"Despite tuning the parameters, we were only able to achieve a 77% accuracy using Support Vector Machines.\n\n#### 3.1.5: XGBoost","3c723238":"The plot of the mean sulphate level by quality class shows a clear, positive relationship between the two variables. This feature is an important factor in predicting the quality of wine.\n\n#### 1.1.11: Alcohol","6251f005":"We have managed to significantly improve the accuracy of predictions to 77% by using a decision tree.\n\n#### 3.2.3: Random Forest","2c1bf575":"We can see that we have an extremely unbalanced dataset, which may lead to issues when implementing our algorithms. Let us see how unbalanced the dataset really is.","cbb1663b":"The positive relationship between these two variables is difficult to be seen since the correlation between them is only 0.37. \n\n#### 1.2.7: Chlorides v Sulphates","b7497c13":"Let us now produce a confusion matrix and a classification report to determine the accuracy of our model.","bfbf1145":"Let us check the split that this has produced.","95195848":"We can now implement the SMOTE technique to oversample our dataset which will result in perfectly balanced classes.","88e54f66":"We can see a slightly positive linear relationship between these two variables. We notice that the majority of the high quality wines are plotted in the left hand part of this graph. This is due to the negative relationship that chlorides have with the wine quality.\n\n#### 1.2.8: Free Sulfur Dioxide v Total Sulfur Dioxide","50344922":"Our correlation value has been shown to be equal to approximately 0.2, which suggests that there is enough of a relationship to consider this variable for predicting wine quality. \n\n#### 1.2.9: Alcohol v Density","7d668615":"From the above plot, we can determine that, on average, a low chloride level leads to a higher quality of wine. This feature is an important factor when predicting the quality of wine.\n\n#### 1.1.6: Free Sulfur Dioxide","05b3b9e9":"We see that over 80% of our data points belong to either quality rating 5 or 6. However, if we reclassify our points as \"good\" if they have a quality rating of at least 6 and \"bad\" otherwise, then we should achieve a much more balanced dataset. Let us create a new target variable called \"new_rating\" that contains a 1 if the wine is \"good\" and a 0 if the wine is \"bad\".","0ed20776":"Since we are attempt to solve a binary classification problem, the key metric to consider is accuracy. In this case, our logistic regression model achieved 75% when predicting wines from the testing set. \n\nThe process we shall undertake for the implementation of each model type will be similar to the process we have just undertaken for our logistic regression model. Let us now work through each model in turn and find out its accuracy.\n\n#### 3.1.2: Decision Tree","13db2245":"The plot above shows no clear linear relationship between the quality of wine and the level of residual sugar contained within it.\n\n#### 1.1.5: Chlorides","8e155375":"We shall now import the data into a dataframe called 'df'.","4e438c23":"We can see that for each quality rating there is a differet average free sulfur dioxide percentage, but there does not exist a clear relationship between these variables. Let us check this by calculating the correlation between these features.","060dab96":"Once again, we can see a clear relationship between these variables.\n\nIn summary, we have found that there seem to be 5 main factors that influence the quality of wine. These are:\n\n - Alcohol\n - Sulphates\n - Chlorides\n - Citric Acid\n - Volatile Acidity\n \nLet us produce a plot of the correlation values of all our features to our target variable to confirm these findings.","5346033f":"We can clearly see that the 5 columns mentioned above seem to have a high correlation value, in absolute terms. However, it also seems that the density and total sulfur dioxide features are also significantly correlated to our target variable. \n\n### 1.2: Feature Relationships\n\nNow that we have determined which features have an impact on our target variable, we shall now begin to investigate the relationships between our features. We shall do this by producing a correlation heatmap.","77762394":"We can clearly see that the as the average citric acid percentage of the wine increases, the quality score associated to the wine also increases. This is due to the fact that acids impart the fundamental features of a wines taste. We have found another useful characteristic of our target variable. \n\n#### 1.2.2: Fixed Acidity v Density","da6e3248":"## 1: Exploratory Data Analysis and Visualisation\n\nIn this section we shall attempt to understand the relationship between our data features and the target variable. We shall first check some basic information regarding the dataframe we have created.","8ef9c699":"The first thing to note is that the level of fixed acidity within a wine is always greater than the level of citric acid. This is because citric acid is one of the types of acid considered in the fixed acidity value. We notice a clear positive relationship between these two features, which is why the value of 0.67 in the correlation matrix appears. \n\nLet us investigate whether the percentage of the citric acid has an effect on the quality of wine. ","86f0806a":"The heatmap above shows the correlation values between each of the features. We shall now investigate values that have a large absolute value.\n\n#### 1.2.1: Fixed Acidity v Citric Acid"}}