{"cell_type":{"185d4822":"code","4363c9bb":"code","9ab0e5dc":"code","703ee188":"code","05105aff":"code","65d8dcc5":"code","db38b41f":"code","78f12dcf":"code","9cd1c7ca":"code","cb9c31e0":"code","dc7be279":"code","9618a453":"code","29e64ad1":"code","b2fddb0b":"code","c48d357f":"code","618bdc36":"code","ea1cd61a":"code","9e1cad8d":"code","9821edd2":"markdown","4053635e":"markdown","e14990a6":"markdown","ee825363":"markdown","4a7bfabc":"markdown","8b1c9cc5":"markdown"},"source":{"185d4822":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport networkx as nx\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4363c9bb":"df1 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare-ridership-2017\/2017 Data\/Bikeshare Ridership (2017 Q1).csv')\ndf2 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare-ridership-2017\/2017 Data\/Bikeshare Ridership (2017 Q2).csv')\ndf3 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare-ridership-2017\/2017 Data\/Bikeshare Ridership (2017 Q3).csv')\ndf4 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare-ridership-2017\/2017 Data\/Bikeshare Ridership (2017 Q4).csv')","9ab0e5dc":"df1['start'] = pd.to_datetime(df1['trip_start_time'], dayfirst=True)","703ee188":"df2['start'] = pd.to_datetime(df2['trip_start_time'], dayfirst=True)","05105aff":"df3['start'] = pd.to_datetime(df3['trip_start_time'], dayfirst=True)","65d8dcc5":"df4['start'] = pd.to_datetime(df4['trip_start_time'], dayfirst=True)","db38b41f":"df = df1.copy()\ndf = df.append([df2, df3, df4], sort=False)\ndf = df.copy()","78f12dcf":"df['hour'] = df['start'].dt.hour.values\ndf['week'] = df['start'].dt.week.values\ndf['day'] = df['start'].dt.day.values\ndf['weekday'] = df['start'].dt.day_name()\ndf.index = df.start.dt.date.values\ndf.index.name = 'index'\ndf['counter'] = 1","9cd1c7ca":"df2017 = df.copy()","cb9c31e0":"daily = df2017.day.value_counts().sort_index()\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=daily.index, y=daily.values)\nplt.box(on=None)\nplt.xticks(daily.index-1);\nplt.xlabel('Day Index');","dc7be279":"'The busiest Date of the year are {}'.format(list(daily.sort_values(ascending=False)[:5].index.values))","9618a453":"week = df2017.week.value_counts().sort_index()\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=week.index, y=week.values)\nplt.box(on=None)\nplt.xticks(week.index-1);\nplt.xlabel('Week Index');","29e64ad1":"'The busiest Week of the year are {}'.format(list(week.sort_values(ascending=False)[:5].index.values))","b2fddb0b":"weekday = df2017.weekday.value_counts(ascending=True)\n\nplt.figure(figsize=(10,6))\norder=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nsns.barplot(x=weekday.index, y=weekday.values, order=order)\nplt.box(on=None)\nplt.xlabel('Day of the Week Index');","c48d357f":"print('The busiest day of the year is ', list(weekday.sort_values()[:3].index))","618bdc36":"period = df2017.groupby('hour').sum()\n\nplt.figure(figsize=(8,6))\nsns.barplot(x=period.index, y=period.trip_duration_seconds.values\/3600, palette='gnuplot2_r')\nplt.box(on=None)\nplt.xlabel('Time range');\nplt.ylabel('Total trip in Hours');","ea1cd61a":"weekday = df2017.groupby('weekday').sum().sort_values('trip_duration_seconds')\n\nplt.figure(figsize=(8,6))\nsns.barplot(x=weekday.index, y=weekday.trip_duration_seconds.values\/3600, palette='gnuplot2_r')\nplt.box(on=None)\nplt.ylabel('Total trip in Hours');","9e1cad8d":"df2017['counter'] = 1\nuser = df2017.groupby(['user_type']).sum()\n\nplt.figure(figsize=(10,10));\nplt.subplot(1,2,1)\nplt.pie(user.counter.values, startangle=180, labels=user.index, autopct='%.1f%%', explode=(.05,0));\nplt.title('Casual vs Member Trip Number');\nplt.xlabel\nplt.subplot(1,2,2)\nplt.pie(user.trip_duration_seconds.values, startangle=180, labels=user.index, autopct='%.1f%%', explode=(.05,0));\nplt.title('Casual vs Member Trip Duration');","9821edd2":"**2017 Bike Sharing Analysis**","4053635e":"Preparation will add new coloumns. \n* 'hour' : info related to time the trip were initiate. A day is divide into 4 time range, a 6 hours range.\n* 'week' : info related to the week number of the trip started\n* 'day' : info related to the date number of the trip started\n* 'weekday' : info related to the dayname of the trip started\n* 'counter' : additional info to count number of the trip","e14990a6":"And the busiest day are weekend","ee825363":"as we can see from above, the busiest hour are from 12:00 till 20:00","4a7bfabc":"Member user are generating 78% of total number of trip but only contribute 52.6% of total duration of the trip.\n\non the other hand, Casual user only generate 22% of the trip number, but account for 47.4% of the total trip's duration ","8b1c9cc5":"**Read the Dataset**"}}