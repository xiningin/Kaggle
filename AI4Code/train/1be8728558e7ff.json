{"cell_type":{"e4c6ce1b":"code","d94a4536":"code","6a53e006":"code","11eb6b42":"code","7fc277cc":"code","bf0d4dde":"code","ed8f383c":"code","1f79eeff":"code","d3368cff":"code","d1979f47":"code","32270858":"code","7b87cfa6":"code","8895a51e":"code","1eb3724d":"code","79545033":"code","fc1cb78a":"code","4bb9cbcf":"code","56ce294a":"code","00e3a49e":"code","c739e003":"code","b8480fdd":"code","47412f19":"code","1a581e85":"code","162155fd":"code","71e80eab":"code","91ff78b6":"code","02a2b56a":"code","919eb2ad":"code","c101f8cc":"code","76ef1d54":"code","cf9afa28":"code","8af85db2":"code","2784a34e":"code","4da64be7":"code","f26bd43c":"code","d00640f4":"code","1485a1d4":"code","2f5a5d0e":"code","75cf8766":"code","b2409065":"code","0773cbc8":"code","a184fa8f":"code","21b826ce":"code","e426f771":"code","b2893041":"code","0d84ef69":"code","cd57b40b":"code","3d3e392a":"code","35c509be":"markdown"},"source":{"e4c6ce1b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","d94a4536":"housing=pd.read_csv('downloads\/train.csv')","6a53e006":"housing.head()","11eb6b42":"housing.info()","7fc277cc":"housing.describe()","bf0d4dde":"housing.isnull().sum()","ed8f383c":"housing.columns","1f79eeff":"null_value=housing.columns[housing.isnull().any()]","d3368cff":"null_value","d1979f47":"housing[null_value].isnull().sum()","32270858":"housing.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","7b87cfa6":"housing.head()","8895a51e":"housing['LotFrontage']=housing['LotFrontage'].fillna(housing['LotFrontage'].mode()[0])\nhousing['MasVnrType']=housing['MasVnrType'].fillna(housing['MasVnrType'].mode()[0])\nhousing['MasVnrArea']=housing['MasVnrArea'].fillna(housing['MasVnrArea'].mode()[0])\nhousing['BsmtQual']=housing['BsmtQual'].fillna(housing['BsmtQual'].mode()[0])\nhousing['BsmtCond']=housing['BsmtCond'].fillna(housing['BsmtCond'].mode()[0])\nhousing['BsmtExposure']=housing['BsmtExposure'].fillna(housing['BsmtExposure'].mode()[0])\nhousing['BsmtFinType1']=housing['BsmtFinType1'].fillna(housing['BsmtFinType1'].mode()[0])\nhousing['BsmtFinType2']=housing['BsmtFinType2'].fillna(housing['BsmtFinType2'].mode()[0])\nhousing['GarageType']=housing['GarageType'].fillna(housing['GarageType'].mode()[0])\nhousing['GarageYrBlt']=housing['GarageYrBlt'].fillna(housing['GarageYrBlt'].mode()[0])\nhousing[ 'GarageFinish']=housing[ 'GarageFinish'].fillna(housing[ 'GarageFinish'].mode()[0])\nhousing['GarageQual']=housing['GarageQual'].fillna(housing['GarageQual'].mode()[0])\nhousing['GarageCond']=housing['GarageCond'].fillna(housing['GarageCond'].mode()[0])","1eb3724d":"housing.isnull().sum()","79545033":"obj_col=[]\nnum_col=[]\nfor col in housing.columns:\n    if housing[col].dtype=='O':\n        obj_col.append(col)\n    else:\n        num_col.append(col)","fc1cb78a":"print(obj_col)\nprint(num_col)","4bb9cbcf":"for col in obj_col:\n    plt.figure(figsize=(10,8))\n    sns.violinplot(housing[col],housing['SalePrice'])\n    plt.xlabel(col)\n    plt.ylabel('price')","56ce294a":"for col in num_col:\n    plt.figure(figsize=(10,8))\n    sns.jointplot(x=housing[col],y=housing['SalePrice'],kind='reg')\n    plt.xlabel(col)\n    plt.ylabel('price')","00e3a49e":"plt.figure(figsize=(25,22))\nsns.heatmap(housing.corr(),annot=True,cmap='Greens')","c739e003":"housing_test=pd.read_csv('downloads\/test.csv')","b8480fdd":"housing_test.head()","47412f19":"housing_test.shape","1a581e85":"housing_test.isnull().sum()","162155fd":"housing_test.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","71e80eab":"housing_test['LotFrontage']=housing_test['LotFrontage'].fillna(housing_test['LotFrontage'].mode()[0])\nhousing_test['MasVnrType']=housing_test['MasVnrType'].fillna(housing_test['MasVnrType'].mode()[0])\nhousing_test['MasVnrArea']=housing_test['MasVnrArea'].fillna(housing_test['MasVnrArea'].mode()[0])\nhousing_test['BsmtQual']=housing_test['BsmtQual'].fillna(housing_test['BsmtQual'].mode()[0])\nhousing_test['BsmtCond']=housing_test['BsmtCond'].fillna(housing_test['BsmtCond'].mode()[0])\nhousing_test['BsmtExposure']=housing_test['BsmtExposure'].fillna(housing_test['BsmtExposure'].mode()[0])\nhousing_test['BsmtFinType1']=housing_test['BsmtFinType1'].fillna(housing_test['BsmtFinType1'].mode()[0])\nhousing_test['BsmtFinType2']=housing_test['BsmtFinType2'].fillna(housing_test['BsmtFinType2'].mode()[0])\nhousing_test['GarageType']=housing_test['GarageType'].fillna(housing_test['GarageType'].mode()[0])\nhousing_test['GarageYrBlt']=housing_test['GarageYrBlt'].fillna(housing_test['GarageYrBlt'].mode()[0])\nhousing_test[ 'GarageFinish']=housing_test[ 'GarageFinish'].fillna(housing_test[ 'GarageFinish'].mode()[0])\nhousing_test['GarageQual']=housing_test['GarageQual'].fillna(housing_test['GarageQual'].mode()[0])\nhousing_test['GarageCond']=housing_test['GarageCond'].fillna(housing_test['GarageCond'].mode()[0])\n","91ff78b6":"housing_test.columns[housing_test.isnull().any()]","02a2b56a":"housing_test['Electrical']=housing_test['Electrical'].fillna(housing_test['Electrical'].mode()[0])","919eb2ad":"housing_test.isnull().sum().sum()","c101f8cc":"obj_col=[]\nnum_col=[]\nfor col in housing_test.columns:\n    if housing_test[col].dtype=='O':\n        obj_col.append(col)\n    else:\n        num_col.append(col)","76ef1d54":"#one hot encoding\nhousing1=housing.copy()\nhousing1=pd.get_dummies(housing1, columns=['MSZoning', 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual', 'Functional', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition'], drop_first=True)","cf9afa28":"housing1.head()","8af85db2":"housing1.columns","2784a34e":"housing_test1=housing_test.copy()\nhousing_test1=pd.get_dummies(housing_test1, columns=['MSZoning', 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual', 'Functional', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition'], drop_first=True)","4da64be7":"housing_test1.head()","f26bd43c":"x_train=housing1.drop('SalePrice',axis=1)\ny_train=housing1[['SalePrice']]\n","d00640f4":"from sklearn.linear_model import LinearRegression","1485a1d4":"lr=LinearRegression()","2f5a5d0e":"lr.fit(x_train,y_train)","75cf8766":"lr.intercept_,lr.coef_","b2409065":"predictions=lr.predict(x_train)","0773cbc8":"a=predictions[:439]","a184fa8f":"a","21b826ce":"b=housing_test['Id']","e426f771":"b","b2893041":"pred=pd.Series(list(a))","0d84ef69":"idd=pd.Series(list(b))","cd57b40b":"df=pd.DataFrame([idd,pred])","3d3e392a":"df.to_csv('akshay.csv')","35c509be":"now we are going to drop the columns which are having high null values"}}