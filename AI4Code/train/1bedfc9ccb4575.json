{"cell_type":{"cf3e4d8d":"code","877abf81":"code","00a28b9f":"code","19220629":"code","335c4374":"code","68eb17a2":"code","105151e0":"code","547fdb49":"code","4bb62960":"code","b8bbda9c":"code","73c78fe2":"code","de55715c":"code","642b56e8":"code","bce69c2c":"code","95d524ca":"code","83be6f65":"code","cbf1fce3":"code","646f71bc":"code","ce76978c":"code","7d07e2b0":"code","2c95b3c0":"code","f9cac5bb":"code","84d96e09":"code","c73f65d2":"code","bee42b9b":"code","b32b4b82":"code","7a3eb7c8":"code","286ba33d":"code","c7baebb1":"code","116ba2de":"code","24c33d1e":"code","7069a8ed":"code","7d4452d7":"code","c3c885e2":"markdown","0c44d1ac":"markdown","63e0b065":"markdown","53a5847f":"markdown","8e800bb7":"markdown","83833b1e":"markdown","55ba4142":"markdown","60617769":"markdown","86b3ac0d":"markdown","5e56c829":"markdown","a9920976":"markdown","b63556ad":"markdown","7d9c9b02":"markdown","77a691c4":"markdown","7cac7d86":"markdown","0f743f85":"markdown"},"source":{"cf3e4d8d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","877abf81":"NA_2002 = pd.read_csv(\"..\/input\/predict-pakistan-elections-2018\/National Assembly 2002 - Updated.csv\",encoding = \"ISO-8859-1\")\nNA_2008 = pd.read_csv(\"..\/input\/predict-pakistan-elections-2018\/National Assembly 2008.csv\",encoding = \"ISO-8859-1\")\nNA_2013 = pd.read_csv(\"..\/input\/predict-pakistan-elections-2018\/National Assembly 2013 - Updated.csv\",encoding = \"ISO-8859-1\")","00a28b9f":"print('Data Dimentions of NA_2002:',NA_2002.shape)\nprint('Data Dimentions of NA_2008:',NA_2008.shape)\nprint('Data Dimentions of NA_2013:',NA_2013.shape)","19220629":"print(\"NA_ 2002.csv\")\nNA_2002.info()\nprint(\"NA_2008.csv\")\nNA_2008.info()\nprint(\"NA_2013.csv\")\nNA_2013.info()","335c4374":"NA_2008['Turnout'] = NA_2008['Turnout'].str.rstrip('%').str.rstrip(' ')\nNA_2013['Turnout'] = NA_2013['Turnout'].str.rstrip('%').str.rstrip(' ')\nNA_2008['Turnout'] = pd.to_numeric(NA_2008['Turnout'], errors='coerce')\nNA_2013['Turnout'] = pd.to_numeric(NA_2013['Turnout'], errors='coerce')","68eb17a2":"NA_2008.rename(columns={'Unnamed: 0':'District'}, inplace=True)\nNA_2013.rename(columns={'Unnamed: 0':'District'}, inplace=True)","105151e0":"NA_2013 = NA_2013.drop('Unnamed: 11', axis=1)","547fdb49":"print(\"NA_ 2002.csv\")\nNA_2002.info()\nprint(\"NA_2008.csv\")\nNA_2008.info()\nprint(\"NA_2013.csv\")\nNA_2013.info()","4bb62960":"print('First 5 Rows of NA_2002')\nNA_2002.head()","b8bbda9c":"NA_2002.rename(columns={'Constituency_title':'ConstituencyTitle', 'Candidate_Name':'CandidateName', 'Total_Valid_Votes':'TotalValidVotes', 'Total_Rejected_Votes':'TotalRejectedVotes', 'Total_Votes':'TotalVotes', 'Total_Registered_Voters':'TotalRegisteredVoters', }, inplace=True)\nNA_2002.columns","73c78fe2":"print('First 5 Rows of NA_2008')\nNA_2008.head()","de55715c":"print('First 5 Rows of NA_2013')\nNA_2013.head()","642b56e8":"print(\"NA_2002\", NA_2002.isnull().any(), \"\\nNA_2008: \", NA_2008.isnull().any(), \"\\nNA_2013:\", NA_2013.isnull().any())","bce69c2c":"df = pd.concat([NA_2002, NA_2008, NA_2013])\ndf.shape","95d524ca":"df.head()","83be6f65":"df.isnull().any()","cbf1fce3":"# get all the unique values in the 'District' column\n#df['District'] = df['District'].astype(str)\ndist = df['District'].unique()\n#dist.sort()\ndist","646f71bc":"# convert to lower case\ndf['District'] = df['District'].str.lower()\n# remove trailing white spaces\ndf['District'] = df['District'].str.strip()","ce76978c":"dist = df['District'].unique()\n#dist.sort()\ndist","7d07e2b0":"import fuzzywuzzy\nfrom fuzzywuzzy import process\nimport chardet","2c95b3c0":"# get the top 10 closest matches to \"charsadda\"\nmatches = fuzzywuzzy.process.extract(\"charsadda\", dist, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n\n# take a look at them\nmatches","f9cac5bb":"# function to replace rows in the provided column of the provided dataframe\n# that match the provided string above the provided ratio with the provided string\ndef replace_matches_in_column(df, column, string_to_match, min_ratio = 90):\n    # get a list of unique strings\n    strings = df[column].unique()\n    \n    # get the top 10 closest matches to our input string\n    matches = fuzzywuzzy.process.extract(string_to_match, strings, \n                                         limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n\n    # only get matches with a ratio > 90\n    close_matches = [matches[0] for matches in matches if matches[1] >= min_ratio]\n\n    # get the rows of all the close matches in our dataframe\n    rows_with_matches = df[column].isin(close_matches)\n\n    # replace all rows with close matches with the input matches \n    df.loc[rows_with_matches, column] = string_to_match","84d96e09":"# use the function we just wrote to replace close matches to \"charsadda\" \nreplace_matches_in_column(df=df, column='District', string_to_match=\"charsadda\")\ndist = df['District'].unique()\n#dist.sort()\ndist","c73f65d2":"replace_matches_in_column(df=df, column='District', string_to_match=\"nowshera\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"rawalpindi\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"sheikhupura\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"shikarpur\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"nankana sahib\")","bee42b9b":"del dist\n\npty = df['Party'].unique()\npty.sort()\npty","b32b4b82":"df['Party'] = df['Party'].replace(['MUTTHIDA\\xa0MAJLIS-E-AMAL\\xa0PAKISTAN'], 'Muttahidda Majlis-e-Amal Pakistan')\ndf['Party'] = df['Party'].replace(['Pakistan Muslim League'], 'Pakistan Muslim League (QA)')\n#converting text to lower case & removing white spaces\ndf['Party'] = df['Party'].str.lower()\ndf['Party'] = df['Party'].str.strip()","7a3eb7c8":"replace_matches_in_column(df=df, column='Party', string_to_match=\"Balochistan National Movement\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Independent\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Istiqlal Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Jamote Qaumi Movement\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Labour Party Pakistan\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Mohib-e-Wattan Nowjawan Inqilabion Ki Anjuman (MNAKA)\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Muttahida Qaumi Movement\") # Muttahida Qaumi Movement Pakistan\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Muttahidda Majlis-e-Amal\") # Muttahidda Majlis-e-Amal Pakistan\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"National Peoples Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Nizam-e-Mustafa Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pak Muslim Alliance\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Awami Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Democratic Party\")\n# After analyzing each of the below strings.\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (QA)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (N)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (J)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (F)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Peoples Party Parliamentarians\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Peoples Party(Shaheed Bhutto)\", min_ratio =95)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Peoples Party(Sherpao)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Tehreek-e-Insaf\", min_ratio =95)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Saraiki Sooba Movement Pakistan\", min_ratio =95)","286ba33d":"df['Party'] = df['Party'].str.lower()\n# few fixes taken from https:\/\/www.kaggle.com\/usman786\/exploratory-data-analysis-for-interesting-insights\/notebook\ndf['Party'].replace(['muttahida qaumi movement pakistan'], 'muttahida qaumi movement', inplace = True)\ndf['Party'].replace(['indeindependentdente','independent (retired)','indepndent'], 'independent',inplace = True)\ndf['Party'].replace(['indeindependentdente','independent (retired)','indepndent'], 'independent',inplace = True)\ndf['Party'].replace(['muttahidda majlis-e-amal pakistan','mutthida\\xa0majlis-e-amal\\xa0pakistan'\n                     ,'mutthida\u00ef\u00bf\u00bdmajlis-e-amal\u00ef\u00bf\u00bdpakistan'] \n                     ,'muttahidda majlis-e-amal' ,inplace = True)\ndf['Party'].replace(['nazim-e-mistafa'], 'nizam-e-mustafa party' ,inplace = True)\ndf['Party'].replace(['pakistan muslim league (qa)'], 'pakistan muslim league (q)' ,inplace = True)\ndf['Party'].replace(['pakistan muslim league council'], 'pakistan muslim league (c)' ,inplace = True)\ndf['Party'].replace(['pakistan muslim league \\x93h\\x94 haqiqi'], 'pakistan muslim league haqiqi' ,inplace = True)\ndf['Party'].replace(['pakistan muslim league(z)'], 'pakistan muslim league (z)' ,inplace = True)\ndf['Party'].replace(['pakistan peoples party(shaheed bhutto)'], 'pakistan peoples party (shaheed bhutto)' ,inplace = True)\ndf['Party'].replace(['pakistan peoples party parliamentarians'], 'pakistan peoples party parliamentarians' ,inplace = True)\ndf['Party'].replace(['pakistan sariaki party'], 'Pakistan Siraiki Party (T)' ,inplace = True)\ndf['Party'].replace(['pasban'], 'pasban pakistan' ,inplace = True)\ndf['Party'].replace(['qaumi watan party (sherpao)'], 'qaumi watan party' ,inplace = True)\ndf['Party'].replace(['tehreek-e-suba hazara'], 'tehreek-e-suba hazara pakistan' ,inplace = True)\n#...\ndf['Party'].replace(['pashtoonkhwa milli awami party'], 'pakhtoonkhwa milli Awami party' ,inplace = True)\ndf['Party'].replace(['pakistan amn party'], 'pakistan aman party' ,inplace = True)\ndf['Party'].replace(['pakistan awami inqelabi'], 'Pakistan Awami Inqelabi League' ,inplace = True)\ndf['Party'].replace(['pakistan freedom party'], 'pakistan freedom movement' ,inplace = True)\ndf['Party'].replace(['pakistan insani haqook party (pakistan human rights party)'], 'pakistan human rights party' ,inplace = True)\ndf['Party'].replace(['awami justice party'], 'awami justice party pakistan' ,inplace = True)\ndf['Party'].replace(['indeindependentdent'], 'independent' ,inplace = True)\ndf['Party'].replace(['jamiat ulama-e-pakistan  (noorani)'], 'jamiat ulama-e-pakistan (noorani)' ,inplace = True)\ndf['Party'].replace(['jumiat ulma-e-islam(nazryati)'], 'jamiat ulma-e-islam nazryati pakistan' ,inplace = True)\ndf['Party'].replace(['majlis-e-wahdat-e-muslimeen pakistan'], 'Majlis Wahdat-e-Muslimeen Pakistan' ,inplace = True)\ndf['Party'].replace(['markazi jamat-al-hadais'], 'Markazi Jamiat Ahl-e-Hadith' ,inplace = True)\ndf['Party'].replace(['mohib-e-wattan nowjawan inqilabion ki anjuman (mnaka)'], 'Muhib-e-Watan Noujawan Anqlabion Ki Anjuman (MNAKA)' ,inplace = True)\n\npty = df['Party'].unique()\npty.sort()\npty","c7baebb1":"#convert textual content to lower case & remove trailing white spaces\ndf['CandidateName'] = df['CandidateName'].str.lower()\ndf['CandidateName'] = df['CandidateName'].str.strip()\n# remove mr at the beginning of names.\ndf['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"mr \", value=\"\")\ndf['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"mrs \", value=\"\")\ndf['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"miss \", value=\"\")\n#df['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"mis \", value=\"\")\ndf['CandidateName'].head(10)","116ba2de":"cn = df['CandidateName'].unique()\ncn.sort()\nprint(\"cn size: \", cn.shape, \"\\nValues: \", cn) ","24c33d1e":"# Lets observe few to set the threshold for fuzzywuzzy\nfuzzywuzzy.process.extract(\"zumurad khan\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\nfuzzywuzzy.process.extract(\"zobaida jalal\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >79\n#fuzzywuzzy.process.extract(\"barkat ali\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\n#fuzzywuzzy.process.extract(\"sher muhammad baloch\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\n#fuzzywuzzy.process.extract(\"gulab baloch\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\n#fuzzywuzzy.process.extract(\"babu gulab\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90","7069a8ed":"replace_matches_in_column(df=df, column='CandidateName', string_to_match=\"zumurad khan\", min_ratio=92)\nreplace_matches_in_column(df=df, column='CandidateName', string_to_match=\"zobaida jalal\", min_ratio=80)\nreplace_matches_in_column(df=df, column='CandidateName', string_to_match=\"barkat ali\", min_ratio=90)\nreplace_matches_in_column(df=df, column='CandidateName', string_to_match=\"muhammad yasin baloch\", min_ratio=90)\n\nfor candi in df['CandidateName'].unique(): # 7000\n    replace_matches_in_column(df=df, column='CandidateName', string_to_match=candi, min_ratio=90)\n\n# let us know the loop is completed\nprint(\"All done!\")","7d4452d7":"df.to_csv('NA_2002-18.csv', index=None) ","c3c885e2":"## Loading data using pandas.read_csv","0c44d1ac":"## Importing liabraries required","63e0b065":"Renaming Unnamed column to district","53a5847f":"Looking of Nan values in Data\n","8e800bb7":"### Issues in data:\nUnnamed Columns in NA_2008 and NA_2013.\n\nTotal number of columns in NA_2013 because there is and extra Unnamed column with no data.\n\nData type of Turnout Column is not approriate. It must be float64.","83833b1e":"### Rechecking data","55ba4142":"### Cleaning data","60617769":"# Next Steps in progress..","86b3ac0d":"## Getting information about dataset","5e56c829":"### Concat all 3 datasets into 1:","a9920976":"Droping extra column \"Unnamed\" with no data","b63556ad":"# Wrangling of Pak Election DATA","7d9c9b02":"Saving this concatinated file as 'NA2002-18.csv' ","77a691c4":"Changing Data type of Turnout to flot.","7cac7d86":" ### Please Upvote this notebook and comment about my work.**","0f743f85":"Column names are different in NA_2002.\n\nWe will change them to make all columns nemes similar."}}