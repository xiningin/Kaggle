{"cell_type":{"73bcb228":"code","d2a7d6bc":"code","34ca7387":"code","a628aa47":"code","f785b1a8":"code","5f04a1e1":"code","5ce58100":"code","89dab7b5":"code","3cb55294":"code","ea907e03":"code","ee312672":"code","dcf70912":"code","81c5651c":"code","a4f93277":"code","5e63b33f":"code","d212f999":"code","6ba88ba9":"code","ec87fef7":"code","faa7c31c":"code","4b28107d":"code","9705644f":"code","84bb5767":"code","2ecab6bb":"code","e23c3dc8":"code","74df97d7":"code","759a0984":"code","93f4bb37":"code","22fc7844":"code","af94da1e":"code","9f843c7d":"code","3b218a67":"code","e6fa3cbf":"code","a6f22861":"code","561e229f":"code","11e75a45":"code","d905a674":"code","877d2002":"code","b5c81fe4":"code","6566bd8a":"code","8553e744":"code","dcfe6093":"code","4a3d612d":"code","b41586f5":"code","29835b1c":"code","1394a596":"code","7e44cdb5":"code","bbb29a6c":"code","dbe0633c":"code","31b74aa6":"code","f2c1ab10":"code","dfbbb8dc":"code","5072e7c0":"code","43b36dd4":"code","d78ab246":"code","70c91dd2":"code","0d968e40":"code","72c7ec81":"code","650aa4c8":"code","2eb13d8d":"code","69fa68cd":"code","295f469b":"code","703e29ca":"markdown","9014eedf":"markdown","c7ea995b":"markdown","52e73404":"markdown"},"source":{"73bcb228":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2a7d6bc":"# function that returns great of two numbers\n\ndef func_greater(a,b):\n    \n    if (a>b):\n        return ('first integer ' + str(a))\n    elif (a==b):\n        return 'equal'\n    else:\n        return ('second integer ' + str(b))","34ca7387":"func_greater(6,5)","a628aa47":"def func_sq(a):\n    return a**2","f785b1a8":"lst = [1,2,3]\n\nprint(lst)\n\nlst.append(4)\n\nprint(lst)","5f04a1e1":"def func_printlst(lst):\n    for item in lst:\n        print(item)","5ce58100":"func_printlst(lst)","89dab7b5":"var = input()","3cb55294":"lst = var.split()","ea907e03":"for item in lst:\n    print(item)","ee312672":"for i in range(10):\n    print(i)","dcf70912":"range(10)","81c5651c":"for i in range(5):\n       for j in range(2):\n            print(\"i \",i)\n            print(\"j \",j)","a4f93277":"df_pgen1 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')","5e63b33f":"type(df_pgen1)","d212f999":"df_pgen1","6ba88ba9":"# to see top n rows\n\ndf_pgen1.head(50)","ec87fef7":"# to see bottom n rows\n\ndf_pgen1.tail(10)","faa7c31c":"df_pgen1.info()","4b28107d":"df_pgen1.describe()","9705644f":"df_pgen1['SOURCE_KEY'].unique()","84bb5767":"len(df_pgen1['SOURCE_KEY'].unique())","2ecab6bb":"?pd.unique","e23c3dc8":"df_pgen1['DC_POWER'].max()","74df97d7":"df_pgen1['AC_POWER'].max()","759a0984":"df_pgen1[['AC_POWER','DC_POWER','DATE_TIME']]","93f4bb37":"?pd.DataFrame.iloc","22fc7844":"df_pgen1.iloc[:,6].mean()","af94da1e":"df_pgen1['TOTAL_YIELD']","9f843c7d":"def func(df, col):\n    return df[col].mean()","3b218a67":"func(df_pgen1,'TOTAL_YIELD')","e6fa3cbf":"df_pgen1.head(800)","a6f22861":"df_pgen1['DC_POWER'].mean()","561e229f":"df_pgen1[df_pgen1['SOURCE_KEY']=='1BY6WEcLGh8j5v7']","11e75a45":"df_pgen1[df_pgen1['SOURCE_KEY']=='1BY6WEcLGh8j5v7']['DC_POWER'].mean()","d905a674":"df_pgen1[df_pgen1['DATE_TIME']=='15-05-2020 09:15']","877d2002":"df_pgen1['SOURCE_KEY'].value_counts()","b5c81fe4":"# 34 days, 24 hours, 4 readings per hour\n\n34*24*4","6566bd8a":"df_pgen1[df_pgen1['SOURCE_KEY']=='YxYtjZvoooNbGkE']['DATE_TIME'].value_counts()","8553e744":"df_pgen1['DATE_TIME'].value_counts()","dcfe6093":"df_pgen1.info()","4a3d612d":"df_pgen1['DATE_TIME'] = pd.to_datetime(df_pgen1['DATE_TIME'],format = '%d-%m-%Y %H:%M')","b41586f5":"df_pgen1['DATE'] = df_pgen1['DATE_TIME'].apply(lambda x:x.date())\ndf_pgen1['TIME'] = df_pgen1['DATE_TIME'].apply(lambda x:x.time())","29835b1c":"df_pgen1.info()","1394a596":"df_pgen1['TIME']","7e44cdb5":"df_pgen1['DATE'] = pd.to_datetime(df_pgen1['DATE'],format = '%Y-%m-%d')","bbb29a6c":"df_pgen1['HOUR'] = pd.to_datetime(df_pgen1['TIME'],format='%H:%M:%S').dt.hour\ndf_pgen1['MINUTES'] = pd.to_datetime(df_pgen1['TIME'],format='%H:%M:%S').dt.minute","dbe0633c":"df_pgen1.info()","31b74aa6":"#df_pgen1['DATE'] = df_pgen1['DATE_TIME'].dt.date","f2c1ab10":"#df_pgen1[df_pgen1['SOURCE_KEY']=='YxYtjZvoooNbGkE']['DATE_TIME'].value_counts()\nlen(df_pgen1['DATE'].unique()) ","dfbbb8dc":"df_pgen1['DATE'].value_counts()","5072e7c0":"#df_pgen1 = df_pgen1.sort_values('DATE')\ndf_pgen1['DATE'].value_counts().sort_index()","43b36dd4":"# for every date\/day - 22 inverters, 24 hours, 4 times per hour\n\n22*24*4","d78ab246":"df_pgen1[df_pgen1['DATE']=='2020-05-21']['HOUR'].value_counts()","70c91dd2":"22*4","0d968e40":"df_pgen1[df_pgen1['DATE']=='2020-05-21'][df_pgen1['HOUR']==7]","72c7ec81":"df_pgen1[df_pgen1['DATE']=='2020-05-16']['SOURCE_KEY'].value_counts()","650aa4c8":"24*4","2eb13d8d":"import matplotlib.pyplot as plt","69fa68cd":"_, ax = plt.subplots(1, 1, figsize=(18, 9))\n\ndf_subset = df_pgen1[df_pgen1['DATE']=='2020-05-21']\n\n\nax.plot(df_subset.DATE_TIME,\n        df_subset.DC_POWER\/10,\n        marker = 'o',\n        linestyle='',\n        label='DC_POWER'\n       )\n\nax.plot(df_subset.DATE_TIME,\n        df_subset.AC_POWER,\n        marker = 'o',\n        linestyle='',\n        label='AC_POWER'\n       )\n\nax.grid()\nax.margins(0.05)\nax.legend()\nplt.title('DC Power and AC Power over 34 Days')\nplt.xlabel('Date and Time')\nplt.ylabel('Power')\nplt.show()","295f469b":"df_subset","703e29ca":"=   means assignment\n==  means check if equal","9014eedf":"Recap of yesterday. Let's clear doubts if any.\n\n\n### Today we will cover \n1. Load CSV\n2. Initial look at the data - .info, .describe, .head\n3. Choosing a column\n4. Basic information - value_counts, mean, min, max\n5. Choosing rows - by number, by condition","c7ea995b":"inbuilt function\nuser defined function\nmodule function\n\nobject method","52e73404":"1. How to read a CSV file and load a dataframe\n2. How to review the dataframe - head, tail, info, describe\n3. How to choose one column and multiple columns\n4. How to call statistical methods on a column"}}