{"cell_type":{"03bd84e8":"code","6cd229a2":"code","1b1cb99d":"code","fd9af3d5":"code","b2b85ddb":"code","7dfdae4c":"code","47723713":"code","e298e851":"code","48a1b2d0":"code","bc19640b":"code","e2bdef38":"code","e6f00392":"markdown","68832aea":"markdown","6eaa6c1e":"markdown","4ef4423f":"markdown","d39097c0":"markdown","86e72d6e":"markdown","27ee83b2":"markdown","a4ef5e96":"markdown","a3ecace5":"markdown","e79429e1":"markdown","ffaca05a":"markdown","ae7c8c7d":"markdown","3411275c":"markdown"},"source":{"03bd84e8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","6cd229a2":"train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')","1b1cb99d":"BREATH_LENGTH = 80\nnum_train_breaths = len(train) \/\/ BREATH_LENGTH\nnum_test_breaths  = len(test)  \/\/ BREATH_LENGTH","fd9af3d5":"r_values = train['R'].unique()\nc_values = train['C'].unique()","b2b85ddb":"train_u_in = {}\nbreath_ids = {}\n\nfor r in r_values:\n    for c in c_values:\n        rc_combo = str(r) + '_' + str(c)\n        current_dat = train[(train['R'] == r) & (train['C'] == c)]\n        train_u_in[rc_combo] = np.reshape(current_dat['u_in'].values, (-1, BREATH_LENGTH))\n        breath_ids[rc_combo] = current_dat['breath_id'][::BREATH_LENGTH].values","7dfdae4c":"print(train_u_in['50_10'][0,:10])","47723713":"first_50_10_breath = train[(train['breath_id'] == breath_ids['50_10'][0])]\nprint(first_50_10_breath['u_in'][:10].values)","e298e851":"def find_nn(which):\n    current_u_in = test['u_in'][which*BREATH_LENGTH:(which+1)*BREATH_LENGTH].values\n    rc_combo = str(test['R'][which*BREATH_LENGTH]) + '_' + str(test['C'][which*BREATH_LENGTH])\n    \n    chi2 = np.sum((train_u_in[rc_combo] - current_u_in)**2, axis = -1)\n    nn = breath_ids[rc_combo][np.argmin(chi2)]\n    \n    plt.plot(current_u_in, label = 'test')\n    plt.plot(train[train['breath_id'] == nn]['u_in'].values, label = 'train')\n    plt.legend()\n    plt.ylabel('u_in')\n    plt.xlabel('time step')\n    plt.show()\n\nfor idx in range(5):\n    find_nn(idx)","48a1b2d0":"STORE_NN = 10\n\nnn_breath_id = np.zeros((num_test_breaths, STORE_NN), dtype = int)\n\nfor idx in range(num_test_breaths):\n    if idx % 1000 == 0:\n        print(idx)\n        \n    current_u_in = test['u_in'][idx*BREATH_LENGTH:(idx+1)*BREATH_LENGTH].values\n    current_name = str(test['R'][idx*BREATH_LENGTH]) + '_' + str(test['C'][idx*BREATH_LENGTH])\n    \n    chi2 = np.sum((train_u_in[current_name] - current_u_in)**2, axis = -1)\n    nn_breath_id[idx] = breath_ids[current_name][np.argsort(chi2)[:STORE_NN]]","bc19640b":"current_u_in = test['u_in'][BREATH_LENGTH:2*BREATH_LENGTH].values\nnn = nn_breath_id[1]\n\nfor i in range(STORE_NN):\n    plt.plot(train[train['breath_id'] == nn[i]]['u_in'].values)\nplt.scatter(range(BREATH_LENGTH), current_u_in, label = 'test', color = 'k')\nplt.legend()\nplt.ylabel('u_in')\nplt.xlabel('time step')\nplt.xlim([0,20])\nplt.show()","e2bdef38":"np.savetxt('nn.txt', nn_breath_id)","e6f00392":"# Number of data points per breath, number of breaths in test and train data","68832aea":"# Find the nearest u_in curve for the first five test breaths","6eaa6c1e":"In this notebook we for each breath in the test file find the breath in the train file that\n1. has the same R and C values as the test breath\n2. has the most similar u_in as measured by chi squared value\n\nWe save the nearest neighbor breath_id.\n\nWe build on the [exploratory analysis](https:\/\/www.kaggle.com\/motloch\/ventilator-pressure-train-data-exploration) we did earlier. The results are used for [submission](https:\/\/www.kaggle.com\/motloch\/ventilator-pressure-use-nn-u-in-same-r-c) leading to score 0.650.\n\nVersion 4: stores information about several nearest neighbors, not just one","4ef4423f":"Test we got the ordering right when reshaping - first ten u_in values for the first breath with R = 50, C = 10","d39097c0":"# Import libraries","86e72d6e":"# Use numpy array directly (for speed). Separate breaths with different R, C values","27ee83b2":"For the first five test breaths, find the breaths with the same R and C that have the most similar u_in (defined through chi squared). \n\nPlot both test and train u_in curves to check.","a4ef5e96":"# Load train and test data","a3ecace5":"Sanity check on the results","e79429e1":"# List of R and C values","ffaca05a":"# Introduction","ae7c8c7d":"For each combination of R\/C we store 2D array of u_in (BREATH_LENGTH = 80 numbers for each breath) and the list of breath_id for the breaths with this R\/C combination. \n\nFor quick lookup we store the results in dictionaries.","3411275c":"# Find nearest neighbors for each test breath and save"}}