{"cell_type":{"bd5337fb":"code","5f5613bd":"code","9ff87b1a":"code","2e09d34c":"code","48a51bbc":"code","c6c62b00":"code","2143a9d2":"code","aa587476":"code","ff88ce34":"code","23f8cf8c":"code","68c8e01c":"code","13f3275d":"code","09991d30":"code","c76d5ddb":"code","62e677a6":"code","4b9fa2d2":"code","bb994150":"markdown","76d13c8b":"markdown","04b31bb4":"markdown"},"source":{"bd5337fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f5613bd":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nfrom glob import glob\n%matplotlib inline","9ff87b1a":"df0 = pd.read_csv('..\/input\/sales-prediction\/Sales_January_2019.csv')\ndf1 = pd.read_csv('..\/input\/sales-prediction\/Sales_February_2019.csv')\ndf2 = pd.read_csv('..\/input\/sales-prediction\/Sales_March_2019.csv')\ndf3 = pd.read_csv('..\/input\/sales-prediction\/Sales_April_2019.csv')\ndf4 = pd.read_csv('..\/input\/sales-prediction\/Sales_May_2019.csv')\ndf5 = pd.read_csv('..\/input\/sales-prediction\/Sales_June_2019.csv')\ndf6 = pd.read_csv('..\/input\/sales-prediction\/Sales_July_2019.csv')\ndf7 = pd.read_csv('..\/input\/sales-prediction\/Sales_August_2019.csv')\ndf8 = pd.read_csv('..\/input\/sales-prediction\/Sales_September_2019.csv')\ndf9 = pd.read_csv('..\/input\/sales-prediction\/Sales_October_2019.csv')\ndf10 = pd.read_csv('..\/input\/sales-prediction\/Sales_November_2019.csv')\ndf11 = pd.read_csv('..\/input\/sales-prediction\/Sales_December_2019.csv')\n","2e09d34c":"df_new = pd.concat([df0,df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,df11])\ndf_new.to_csv('df.csv',index=False)\ndf = pd.read_csv('df.csv')\ndf.head()","48a51bbc":"df.shape","c6c62b00":"df.info()","2143a9d2":"df.isnull().sum()","aa587476":"df.dropna(how='any',inplace=True)","ff88ce34":"print(df[pd.to_numeric(df['Price Each'], errors='coerce').isnull()])","23f8cf8c":"df = df[df['Price Each'].str[0:10] != 'Price Each']","68c8e01c":"df['Order Date']=pd.to_datetime(df['Order Date'],errors='coerce')\ndf['Price Each']=pd.to_numeric(df['Price Each'],errors='coerce')\ndf['Quantity Ordered']=pd.to_numeric(df['Quantity Ordered'],errors='coerce')\ndf['Order ID']=pd.to_numeric(df['Order ID'],errors='coerce')","13f3275d":"df['Sales']=df['Quantity Ordered']*df['Price Each']","09991d30":"df['City']=df['Purchase Address'].apply(lambda x: x.split(',')[1]+' '+x.split(',')[2])","c76d5ddb":"df['Month']= df['Order Date'].dt.month\ndf['Year']= df['Order Date'].dt.year","62e677a6":"df.groupby('Month').Sales.sum().nlargest()","4b9fa2d2":"df.groupby('City').Sales.sum().nlargest()","bb994150":"## what was the best month for sales nd how much earned that month?","76d13c8b":"## Which City sold the most product","04b31bb4":"how to convert string into int\/float"}}