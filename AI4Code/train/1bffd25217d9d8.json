{"cell_type":{"3ab3ac92":"code","ca48aa60":"code","9f8e40b9":"code","56511895":"code","6b25ce2d":"code","12077edc":"code","a8a45359":"code","d3e35936":"code","405bb293":"code","05c7e68b":"code","d665fd14":"markdown","b5ffb2f6":"markdown","edaeb3fd":"markdown","9c55312a":"markdown","2b458396":"markdown","72a8935d":"markdown","dfcf5de1":"markdown","95b8e710":"markdown","ffaef37d":"markdown","98a374e6":"markdown"},"source":{"3ab3ac92":"from pyarrow import parquet as pq\nimport pandas as pd\nimport os\nfrom sklearn.metrics import r2_score\nimport glob\nimport re\nimport matplotlib.pyplot as plt\nimport numpy as np","ca48aa60":"def std_ask_bid_price_and_size(df_train=None, mode='train'):\n    feature_list=[\"ask_price1\", \"ask_price2\", \"bid_price1\", \"bid_price2\", \"ask_size1\", \"ask_size2\", \"bid_size1\", \"bid_size2\"]\n    #statistic_list=[\"mean\",\"median\",\"std\",\"count\",\"sum\"]\n    if mode == 'train':\n        list_order_book_file = glob.glob('\/kaggle\/input\/optiver-realized-volatility-prediction\/book_train.parquet\/*')\n    else:\n        list_order_book_file = glob.glob('\/kaggle\/input\/optiver-realized-volatility-prediction\/book_test.parquet\/*')        \n\n    \n    for kkk, iii in enumerate(list_order_book_file):\n        df_order=pd.read_parquet(iii)\n        #df_order_feature = df_order.groupby(\"time_id\")[feature_list].agg(statistic_list).reset_index()\n        df_order_feature = df_order.groupby(\"time_id\")[feature_list].agg(ask_size1_std=('ask_size1', 'std'),ask_size2_std=('ask_size2', 'std'),bid_size1_std=('bid_size1', 'std'),bid_size2_std=('bid_size2', 'std'),ask_price1_std=('ask_price1', 'std'),ask_price2_std=('ask_price2', 'std'),bid_price1_std=('bid_price1', 'std'),bid_price2_std=('bid_price2', 'std')).reset_index()\n        result = re.search(r'=\\d+$', iii)\n        stock_id_plus_equal=result.group()\n        stock_id=stock_id_plus_equal.strip(\"=\")\n        df_order_feature['stock_id']=int(stock_id)\n        #df_order_feature_target = pd.merge(df_order_feature,df_train,on=['stock_id', 'time_id'],how='left')\n        \n        if kkk ==0:\n            df_order_feature_all=df_order_feature\n        else:\n            df_order_feature_all=pd.concat([df_order_feature_all, df_order_feature])\n    \n    df_order_feature_all['row_id'] = df_order_feature_all['stock_id'].astype(str) + '-' + df_order_feature_all['time_id'].astype(str)\n    df_order_feature_all=df_order_feature_all.drop(columns=[\"time_id\", \"stock_id\"])\n    #df_order_feature_all.drop(columns=[\"time_id\", \"stock_id\"])\n    if mode == 'train':\n        df_joined = df_train.merge(df_order_feature_all, on =['row_id'], how = 'left')\n    else:\n        df_joined=df_order_feature_all\n    \n    return df_joined","9f8e40b9":"train=pd.read_csv('\/kaggle\/input\/optiver-realized-volatility-prediction\/train.csv')\n\ntrain['row_id'] = train['stock_id'].astype(str) + '-' + train['time_id'].astype(str)\ntrain = train[['row_id','target']]\n","56511895":"train=std_ask_bid_price_and_size(df_train=train, mode='train')\ntrain.head()","6b25ce2d":"import lightgbm as lgb\n\nmodel = lgb.LGBMRegressor(objective='regression', learning_rate=0.1, n_estimators=1000,\n                          max_depth=5, min_child_weight=1.0, colsample_bytree=0.8,\n                          subsample=0.8, reg_alpha=0.0, reg_lambda=1.0)","12077edc":"feature_columns=['ask_price1_std', 'ask_price2_std','bid_price1_std', 'bid_price2_std']\n\n\ntrain_x=train[feature_columns]\ntrain_y=train['target']","a8a45359":"model.fit(np.log(train_x.values), np.log(train_y.values))","d3e35936":"test=std_ask_bid_price_and_size(mode='test')\ntest.head()","405bb293":"test_x=test[feature_columns]\ntest_pred=model.predict(np.log(test_x.values))","05c7e68b":"\ndf_submit=pd.DataFrame({'row_id':test['row_id'],\n                       'target':np.exp(test_pred)})\ndf_submit.to_csv(\"submission.csv\", index=False)","d665fd14":"**\u4ee5\u4e0b\u3001\u8981\u7de8\u96c6\u3002**row_id\u3068\u63a8\u5b9a\u7d50\u679c\u306edataframe\u3092\u4f5c\u6210\u3057CSV\u5316\u3002\u5bfe\u6570\u3068\u3063\u3066\u306a\u3044\u5834\u5408\u306f'target'\u306enp.exp\u3092\u53d6\u308a\u9664\u3044\u3066\u304f\u3060\u3055\u3044\u3002","b5ffb2f6":"**\u4ee5\u4e0b\u3001\u8981\u7de8\u96c6\u3002**\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3002\u81ea\u5206\u304c\u4f5c\u3063\u305f\u7279\u5fb4\u91cf\u4f5c\u6210\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\u7279\u5fb4\u91cf\u306edataframe\u3092\u53d6\u5f97\u3059\u308b","edaeb3fd":"**\u4ee5\u4e0b\u3001\u8981\u7de8\u96c6\u3002**train\u7528\u306e\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3002\u81ea\u5206\u304c\u4f5c\u3063\u305f\u7279\u5fb4\u91cf\u751f\u6210\u95a2\u6570\u306b\u3001train.csv\u306edf\u3092\u6e21\u3057\u3066\u3001\u7279\u5fb4\u91cf\u3068target\u3092\u3082\u3064dataframe\u3092\u53d7\u3051\u53d6\u308b","9c55312a":"**\u4ee5\u4e0b\u3001\u8981\u7de8\u96c6\u3002**\u4e0a\u3067\u751f\u6210\u3057\u305f\u3001\u7279\u5fb4\u91cf\u3068target\u3092\u6301\u3064dataframe\u304b\u3089\u3001train_x\uff08\u7279\u5fb4\u91cf\u306e\u307f\u306edataframe\uff09\u3068train_y\uff08target\u306e\u307f\u306edataframe\uff09\u3092\u4f5c\u6210","2b458396":"**\u4ee5\u4e0b\u3001\u8981\u7de8\u96c6\u3002**train\u306e\u6642\u306b\u4f7f\u7528\u3057\u305f\u7279\u5fb4\u91cf\u306b\u7d5e\u308a\u3001\u30c7\u30fc\u30bf\u3092\u30e2\u30c7\u30eb\u306b\u6e21\u3057\u3066\u63a8\u5b9a\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\u5bfe\u6570\u3092\u3068\u3063\u3066\u5b66\u7fd2\u3055\u305b\u3066\u306a\u3044\u5834\u5408\u306fnp.log\u3092\u53d6\u308a\u9664\u3044\u3066\u304f\u3060\u3055\u3044","72a8935d":"\u4ee5\u4e0b\u3001\u3044\u3058\u308b\u5fc5\u8981\u306a\u3057","dfcf5de1":"\u3044\u3058\u308b\u5fc5\u8981\u306a\u3057","95b8e710":"**\u4ee5\u4e0b\u8981\u7de8\u96c6\u3002**light_gbm\u30e2\u30c7\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3057\u3066\u5b66\u7fd2\u3002\u50d5\u306fx,y\u3068\u3082\u306b\u5bfe\u6570\u3092\u3068\u3063\u3066\u5b66\u7fd2\u3055\u305b\u305f\u306e\u3067\u3001\u305d\u3046\u3055\u305b\u305f\u304f\u306a\u3044\u5834\u5408\u306fnp.log\u3092\u53d6\u308a\u9664\u3044\u3066\u304f\u3060\u3055\u3044","ffaef37d":"**\u4ee5\u4e0b\u3001\u8981\u7de8\u96c6\u3002**train\u306e\u5834\u5408\u3001train.csv\u306edataframe\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\u305d\u308c\u306b\u751f\u6210\u3057\u305f\u7279\u5fb4\u91cf\u5217\u3092\u7d50\u5408\u3057\u3001\u7d50\u5408\u3057\u305f\u95a2\u6570\u3092\u8fd4\u3059\u3088\u3046\u306b\u4f5c\u308b\uff08row_id\u3092\u4f5c\u6210\u3057\u3001row_id\u3067\u7d50\u5408\u3055\u305b\u308b\uff09\u3002test\u306e\u5834\u5408\u3001\u305f\u3060\u4f5c\u6210\u3057\u305f\u7279\u5fb4\u91cf\u5217\u3092\u6301\u3064dataframe\u3092\u8fd4\u3059\u3088\u3046\u306b\u4f5c\u308b\u3002","98a374e6":"kaggle\u30b3\u30f3\u30da\u521d\u53c2\u6226\u306e\u521d\u5fc3\u8005\u304c\u3001\u521d\u3081\u3066\u6295\u7a3f\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u7cbe\u5ea6\u306f\u5168\u7136\u307e\u3060\u307e\u3060\u3067\u3059\u304c\u3001\u79c1\u3068\u540c\u3058\u3088\u3046\u306a\u521d\u5fc3\u8005\u306e\u65b9\u304c\u3001\u5927\u4f53\u3069\u3093\u306a\u611f\u3058\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u3051\u3070\u3044\u3044\u306e\u304b\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u304b\u3080\u304d\u3063\u304b\u3051\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u4ee5\u4e0b\u30b3\u30e1\u30f3\u30c8\u3067\u306f\u3001\u3068\u306b\u304b\u304f\u81ea\u5206\u304c\u4f5c\u3063\u305f\u7279\u5fb4\u91cf\u3067\u4e00\u56de\u63d0\u51fa\u3057\u305f\u3044\u521d\u5fc3\u8005\u306e\u65b9\u5411\u3051\u306b\u3001\u3069\u3053\u3092\u3069\u3046\u3044\u3058\u308c\u3070\u3088\u3044\u304b\u3092\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306fLGB\u3092\u4f7f\u3063\u3066\u307e\u3059\uff09"}}