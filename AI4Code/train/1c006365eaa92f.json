{"cell_type":{"e6342d23":"code","25b82cb9":"code","488755d5":"code","74edb804":"code","859bf18d":"code","a38e5b66":"code","b560b160":"code","15fd428d":"code","e53cbbdc":"code","5870cc52":"code","880fac1b":"code","782e0734":"code","690603ab":"code","2f2ebdcf":"code","be0a6fab":"code","35c3c384":"code","93716d3a":"code","dcab0036":"code","d04cd528":"code","05f933b9":"code","34e83cfb":"code","bf79db69":"code","9807d031":"code","4c4c65c8":"code","150dccd6":"code","2b6b470f":"code","fca78b8d":"code","6fba635e":"code","fbea8e10":"code","86090444":"code","bde99d9a":"code","e8e781fa":"markdown","ae7f9f61":"markdown","ac238e10":"markdown","c3fb3352":"markdown","a552b6ef":"markdown","dd42067d":"markdown","30e82906":"markdown","e8e1b533":"markdown","43eefa0a":"markdown","f908fd0b":"markdown","35213416":"markdown","2f101d1d":"markdown"},"source":{"e6342d23":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","25b82cb9":"# plt.style.use('darkgrid')\n# sns.set_theme(style=\"darkgrid\")\nsns.set_style('whitegrid')","488755d5":"housing_df = pd.read_csv('\/kaggle\/input\/california\/housing_CA.csv')","74edb804":"housing_df.head()","859bf18d":"housing_df.tail()","a38e5b66":"housing_df.shape","b560b160":"housing_df.dtypes","15fd428d":"housing_df['ocean_proximity'].value_counts(normalize=True)","e53cbbdc":"housing_df.isnull().sum()","5870cc52":"housing_df.describe()","880fac1b":"housing_df.hist(bins=50, figsize=(18,15))\nplt.show()","782e0734":"#Convert ocean_proximity dtype into Category\nhousing_df['ocean_proximity'] = housing_df['ocean_proximity'].astype('category')","690603ab":"housing_df['ocean_proximity'].dtype","2f2ebdcf":"#Imputing missing values in total_bedrooms \nhousing_df['total_bedrooms'].fillna(housing_df['total_bedrooms'].mean(), inplace=True)","be0a6fab":"housing_df.isnull().sum()","35c3c384":"#Visualizing Geographical Data\nfig = plt.gcf()\nfig.set_size_inches(12, 8)\nax = sns.scatterplot(x='longitude', \n                         y='latitude', \n                         data=housing_df, \n                         alpha=0.4, \n                         size=housing_df['population']\/100,\n                         sizes=(20,200), \n                         hue='median_house_value', \n                         palette='vlag')\n\nnorm = plt.Normalize(housing_df['median_house_value'].min(), housing_df['median_house_value'].max())\nsm = plt.cm.ScalarMappable(cmap = 'vlag', norm = norm)\nsm.set_array([])\nax.get_legend().remove()\nax.figure.colorbar(sm)\nplt.tight_layout()\nplt.show()","93716d3a":"#Visualize ocean_proximity\nhousing_df['ocean_proximity'].value_counts(normalize=True)\nhousing_df['ocean_proximity'].value_counts(normalize=True).plot.barh()\nplt.xlabel('% of houses from Ocean')\nplt.ylabel('Ocean Proximity')\nplt.title('% of Houses within Ocean Proximity')\nplt.tight_layout()\nplt.show()","dcab0036":"#Visualize the median_house_value relationship with housing_median_age, total_bedrooms, median_income, \nfrom pandas.plotting import scatter_matrix\nnames = ['median_house_value', 'housing_median_age', 'total_rooms','median_income']\nscatter_matrix(housing_df[names], figsize=(13,10))\nplt.tight_layout()\nplt.show()","d04cd528":"correlation_matrix = housing_df[names].corr()\ncorrelation_matrix['median_house_value'].sort_values(ascending=False)","05f933b9":"sns.relplot(kind='scatter', data=housing_df, x='median_income', y='median_house_value', alpha=0.1,)\nplt.tight_layout()\nplt.show()","34e83cfb":"# #Import the required libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import cross_val_score","bf79db69":"#Fetching data to numpy array\nX = housing_df.drop(['median_house_value','ocean_proximity'], axis=1).values\ny = housing_df['median_house_value'].values.reshape(-1,1)\n\n#Split the data into training and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","9807d031":"#Feature Scaling\nstd_scaler = StandardScaler()\nX_train = std_scaler.fit_transform(X_train)\nX_test = std_scaler.fit_transform(X_test)","4c4c65c8":"y_train = std_scaler.fit_transform(y_train)\ny_test = std_scaler.fit_transform(y_test)","150dccd6":"#Instantiate Linear Regressor\nlinreg = LinearRegression()\nlinreg.fit(X_train,y_train)","2b6b470f":"print('Score on Training set:', linreg.score(X_train, y_train))\nprint('Score on Test set:', linreg.score(X_test, y_test))","fca78b8d":"from sklearn.linear_model import Ridge\nX_train_R, X_test_R, y_train_R, y_test_R = train_test_split(X, y, test_size = 0.3, random_state=42)\n\n# ridge = Ridge(alpha=0.01, normalize=True)\n# ridge.fit(X_train_R, y_train_R)\n\n#---------------------------------------------\ntrain_score = []\ntest_score = []\nalpha_ = np.linspace(-1, 1, 10).reshape(-1,1)\nfor x in alpha_:\n    ridge = Ridge(alpha=x, normalize=True)\n    ridge.fit(X_train_R, y_train_R)\n    train_score.append(ridge.score(X_train_R, y_train_R))\n    test_score.append(ridge.score(X_test_R, y_test_R))\nprint(train_score)\nprint(test_score)","6fba635e":"plt.plot(alpha_, train_score, label='Training Accuracy')\nplt.plot(alpha_, test_score, '--', label='Test Accuracy')\nplt.xlabel('Alpha Value')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.tight_layout()\nplt.show()","fbea8e10":"print('Score on Training set:', ridge.score(X_train_R, y_train_R))\nprint('Score on Test set:', ridge.score(X_test_R, y_test_R))","86090444":"from sklearn.linear_model import Lasso\nX_train_l, X_test_l, y_train_l, y_test_l = train_test_split(X, y, test_size = 0.3, random_state=42)\nlasso = Lasso(alpha=0.01, normalize=True)\nlasso.fit(X_train_l, y_train_l)","bde99d9a":"print('Score on Training set:', lasso.score(X_train_l, y_train_l))\nprint('Score on Test set:', lasso.score(X_test_l, y_test_l))","e8e781fa":"<b>California housing prices: red is expensive, blue is cheaper, and larger circles indicates areas with a larger population.<\/b>","ae7f9f61":"<p style='color:Green'><b>Ocean_proximity<\/b> consist of <b>categorical values<\/b>. Data type can be converted into <b>'Category'<\/b>.<\/p>","ac238e10":"<b>Data Cleaning<\/b>","c3fb3352":"<p><b>Data Exploration<\/b><\/p>","a552b6ef":"<p><b>Importing Data into DataFrame 'housing_df'<\/b><\/p>","dd42067d":"<p style='color:Green'>From above, it is clear that a strong positive correlation exists between median_house_value and median_income. Let's plot them on ScatterPlot.<\/p>","30e82906":"<p style='color:Green'>Need to handle missing values in <b>'total_bedroom'.<\/b><\/p>","e8e1b533":"<p><b>Importing Libraries<\/b><\/p>","43eefa0a":"![californiaactualfeature.jpg](attachment:californiaactualfeature.jpg)","f908fd0b":"<b>Data Visualisation<\/b>","35213416":"<b>Prepare the Data For Machine Learning Algorithm.<\/b>","2f101d1d":"# House Price Prediction (Dataset = California)"}}