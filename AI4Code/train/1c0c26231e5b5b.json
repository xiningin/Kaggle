{"cell_type":{"5ed9403a":"code","1ee7114b":"code","f13cf437":"code","5673a5ab":"code","e57e2eaa":"code","9ca896a6":"code","5a1e8f03":"code","a38f90ff":"code","b345aa72":"code","665c81c0":"code","dc102dcf":"code","accfc402":"code","3d781208":"code","e0de6c9b":"markdown"},"source":{"5ed9403a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ee7114b":"fake_data = pd.read_csv('..\/input\/fake-and-real-news-dataset\/Fake.csv')\nreal_data = pd.read_csv('..\/input\/fake-and-real-news-dataset\/True.csv')","f13cf437":"print(fake_data.isnull().sum())\nprint(real_data.isnull().sum())","5673a5ab":"print(fake_data.shape)\nprint(real_data.shape)","e57e2eaa":"fake_data['subject'].value_counts()","9ca896a6":"real_data['subject'].value_counts()","5a1e8f03":"fake_data['Real'] = False\nreal_data['Real'] = True","a38f90ff":"df = pd.concat([fake_data,real_data])\ndf.head()","b345aa72":"df = df[['subject','Real']]\ndf.isnull().sum()","665c81c0":"one_hot_encoded_training_predictors = pd.get_dummies(df)","dc102dcf":"X = one_hot_encoded_training_predictors.iloc[:,0:4]\ny = one_hot_encoded_training_predictors.iloc[:,4]","accfc402":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=1)","3d781208":"dt = DecisionTreeClassifier(random_state=1)\ndt.fit(X_train,y_train)\ny_pred = dt.predict(X_test)\nprint(accuracy_score(y_test,y_pred))","e0de6c9b":"I choose subject feature to look up, because in true data we have only politicsNews and worldNews subjects."}}