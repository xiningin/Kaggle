{"cell_type":{"b5dfa2d8":"code","dbb93456":"code","e8bb7633":"code","c740c984":"code","7114b2a6":"code","49c5ded2":"code","11f80202":"code","51da355e":"code","bc0760b7":"code","b497ba69":"code","056b4a15":"code","e5e0d09d":"code","320b1c96":"code","10d47619":"code","f72a97bf":"code","342d45e9":"code","929f710c":"code","bbf64ae0":"code","b61e84cb":"code","75d3de23":"markdown","a0a9c45c":"markdown","79a1488a":"markdown","448661ba":"markdown","b849041d":"markdown","0481b775":"markdown","c12b9759":"markdown","23055f91":"markdown","dbf07e4c":"markdown","fe89681b":"markdown","d9446c15":"markdown","e4a1aaa9":"markdown","5953d2f2":"markdown","ff3b0c94":"markdown","f1fca843":"markdown","549f0b53":"markdown","16511d43":"markdown","3f3609b3":"markdown","976a3b43":"markdown","c202d6e3":"markdown","c9db7bb6":"markdown","4c0ae227":"markdown"},"source":{"b5dfa2d8":"### Import required python packages\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n### The below code helps to see all the columns\npd.pandas.set_option('display.max_columns',None)","dbb93456":"### Read the training data\ndataset = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","e8bb7633":"### The first step in any ML project is to view the data after loading it\ndataset.head()","c740c984":"### The below code provides with the structure of the dataframe - number of rows and columns\ndataset.shape","7114b2a6":"### The below code provides with the column names in the dataframe\ndataset.columns","49c5ded2":"### Method 1 -  I have used a hit and trial method till the missing value for any variable comes to zero for head() function\ndataset.isnull().sum().sort_values(ascending=False).head(20)","11f80202":"### Method 2\n###Creating a list comprehension to see all those columns with null values\nnull_columns = [column for column in dataset.columns if dataset[column].isnull().sum() > 0]\n\n###Displaying all the missing values\nfor column in null_columns:\n    print(column, np.round(dataset[column].isnull().mean(), 4),' % missing values')","51da355e":"### In the below code, we are categorizing all the variables which do not belong to datatype as 'Object'\nnum_columns = [column for column in dataset.columns if dataset[column].dtypes != 'O']\n\nprint('The number of numerical variables in the dataset are {}'. format(len(num_columns)))\n\ndataset[num_columns].head()","bc0760b7":"### Again a list comprehension to extract all the variables that have 'Yr' or 'Year' in their names\ndate_columns = [column for column in num_columns if 'Yr' in column or 'Year' in column]\n\n### let's explore the content of these year variables\nprint(date_columns)\n\nfor column in date_columns:\n    print(column,(dataset[column]).unique())","b497ba69":"### In the below code, i am trying the see how the price is varing with the time the house was sold\ndataset.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('Year Sold')\nplt.ylabel('Median House Price')\nplt.title(\"House Price vs YearSold\")","056b4a15":"### In the below set of code, i am trying to find outhow old is the house, number of years for any remodelling\n### done and number of years for the garage to be built. Post which, I will see how these parameters have affected the saleprice\nfor column in date_columns:\n    if column != 'YrSold':\n        data1 = dataset.copy()\n        data1[column] = data1['YrSold'] - data1[column]\n        \n        plt.scatter(data1[column],data1['SalePrice'])\n        plt.xlabel(column)\n        plt.ylabel('SalePrice')\n        plt.show()","e5e0d09d":"### Identify discrete variables. We are setting the threshold of 25 (different number of labels) to identify \n### whether the variable is discrete or not\ndis_columns = [column for column in num_columns if len(dataset[column].unique())< 25 and column not in date_columns+['Id']]\n\nprint('The number of discrete variables are {}'.format(len(dis_columns)))","320b1c96":"for column in dis_columns:\n    data = dataset.copy()\n    data.groupby(column)['SalePrice'].median().plot.bar()\n    plt.xlabel(column)\n    plt.ylabel('SalePrice')\n    plt.title(column)\n    plt.show()","10d47619":"### Identify continous variables.\n\ncont_columns = [column for column in num_columns if column not in dis_columns and column not in date_columns + ['Id'] ]\n\nprint('The total number of continous variables are {}'.format(len(cont_columns)))","f72a97bf":"for column in cont_columns:\n    plt.hist(dataset[column],bins=15)\n    plt.xlabel(column)\n    plt.ylabel('Count')\n    plt.title(column)\n    plt.show()\n    ","342d45e9":"### Applying log transformation\n\nfor column in cont_columns:\n    data = dataset.copy()\n    if 0 in data[column].unique():\n        pass\n    else:\n        data[column] = np.log(data[column])\n        data['SalePrice'] = np.log(data['SalePrice'])\n    plt.scatter(x = data[column],y = data['SalePrice'])\n    plt.xlabel(column)\n    plt.ylabel('SalePrice')\n    plt.title(column)\n    plt.show()","929f710c":"### In the below code we will classify the categorical variable as datatype as 'object'\ncat_columns = [column for column in dataset.columns if dataset[column].dtypes == 'O']\n\nprint('The number of categorical variables are {}'.format(len(cat_columns)))\n\nfor column in cat_columns:\n    print('The number of different categories in the variable - {} are {}'.format(column,len(dataset[column].unique())))","bbf64ae0":"for column in cat_columns:\n    data = dataset.copy()\n    data.groupby(column)['SalePrice'].median().plot.bar()\n    plt.xlabel(column)\n    plt.ylabel('SalePrice')\n    plt.title(column)\n    plt.show()","b61e84cb":"for column in cont_columns:\n    data = dataset.copy()\n    if 0 in data[column].unique():\n        pass\n    else:\n        data[column] = np.log(data[column])\n    sns.boxplot(data[column])\n    plt.ylabel(column)\n    plt.title(column)\n    plt.show()\n ","75d3de23":"    Some of the variables have normal distribution, while some doesnt have. This will need us to apply log transformation","a0a9c45c":"     We can see that the price has decreased over the years. Let's more deep-dive into this","79a1488a":"    Let's try to understand if there is any impact of the year columns on the sales price","448661ba":"### 3) Identify Outliers","b849041d":"    The next step is to categorize the variables into numerical and categorical variables and understand the \n    relationship between these variables and the dependent variable","0481b775":"# Data Exploration: House Prices: Advanced Regression Techniques ","c12b9759":"### 1) Missing Value Treatment","23055f91":"The below notebook is made for learning purpose. It helps to understand on how to explore the dataset with large number of variables.\n\nThis notebook has been created based on my learning from awesome content available on the web and kaggle. ","dbf07e4c":"### 2) Identify Numerical Variable","fe89681b":"    From the Dataset we have 4 year variables. Let's extract those variables.","d9446c15":"## Data Exploration","e4a1aaa9":"        Now, let's see the relationship between the categorical variables and dependent variables","5953d2f2":"### 3) Identify Categorical Variable","ff3b0c94":"# This was basic data exploration. I am still learning and will try to come with feature engineering","f1fca843":"    It is clearly visible that there is a relationship between discrete variables and salesprice","549f0b53":"    Now, let's see how the relationship between the numerical discrete variable and dependent variable varies","16511d43":"#### Numerical variables are usually of 2 types:\n\n      1. Continous variable \n      2. Discrete Variables","3f3609b3":"## Initial Steps","976a3b43":"In data exploration, we try to analyse the data to understand the below scenarios:\n\n    *Any missing values\n    *Explore the distribution of the numerical variables \n    *Explore all the categorical variables\n    *Relationship between independent and dependent features\n    *Check in case of any ouliers in the data\n","c202d6e3":"    Now, Lets analyse the continuous values by creating histograms to understand the distribution","c9db7bb6":"    You will note that I have used list comprehension to perform most of the operation during the data exploration stage. \n    The main purpose of the list comprehension is to reduce the number of lines of codes. This dataset has 81 variables. \n    Hence, running code for each and every variable one by one will be cumbersome.","4c0ae227":"DateTime\/ Temporal Variable"}}