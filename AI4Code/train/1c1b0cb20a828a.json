{"cell_type":{"d26f3602":"code","65a437bc":"code","aa14fd21":"code","7095eb0a":"code","38746568":"code","1d52a6d3":"code","b9d04807":"code","7de7415f":"code","c9ddd4a8":"code","85f038e5":"code","04a14d01":"code","a15238ca":"code","ac9ec32b":"code","1d41b678":"code","4452a58c":"code","75aab8f1":"code","fd9867d4":"code","4f763b70":"code","7e11133f":"code","2bb100da":"code","45d401da":"code","20b9f92e":"code","23ade3e2":"code","c33dcdb6":"code","56aa31dc":"code","98553bac":"code","341cf679":"code","9bc1335c":"code","ed7052c7":"code","1532152d":"code","b9d43108":"code","67b152ca":"code","ad7cda94":"code","5190415b":"markdown","577996d9":"markdown","f944a83e":"markdown","ec790dc8":"markdown","7be6ff2c":"markdown","879aeb55":"markdown"},"source":{"d26f3602":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","65a437bc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","aa14fd21":"avocado=pd.read_csv('..\/input\/avocado-prices\/avocado.csv')","7095eb0a":"avocado","38746568":"avocado=avocado[avocado.region != 'TotalUS']","1d52a6d3":"sns.distplot(avocado['AveragePrice'])","b9d04807":"print('skewness: ',avocado['AveragePrice'].skew())\nprint('kurtosis: ',avocado['AveragePrice'].kurt())","7de7415f":"X=avocado.drop(['Unnamed: 0','Date','AveragePrice','Small Bags','Large Bags','XLarge Bags','year'],axis=1)\nY=avocado['AveragePrice']","c9ddd4a8":"X=pd.get_dummies(X,columns=['type','region'])","85f038e5":"X","04a14d01":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","a15238ca":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=47)","ac9ec32b":"regress=LinearRegression()","1d41b678":"regress.fit(X_train,Y_train)","4452a58c":"Y_pred=regress.predict(X_test)","75aab8f1":"from sklearn.metrics import r2_score\nfrom sklearn.model_selection import cross_val_score","fd9867d4":"print(r2_score(Y_test,Y_pred))","4f763b70":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor","7e11133f":"regress_1=DecisionTreeRegressor(random_state=70)","2bb100da":"regress_1.fit(X_train,Y_train)","45d401da":"Y_pred_1=regress_1.predict(X_test)","20b9f92e":"print(r2_score(Y_pred_1,Y_test))","23ade3e2":"regress_2=RandomForestRegressor(n_estimators=20,random_state=70)","c33dcdb6":"regress_2.fit(X_train,Y_train)","56aa31dc":"Y_pred_2=regress_2.predict(X_test)","98553bac":"print(r2_score(Y_pred_2,Y_test))","341cf679":"print('scores = ',cross_val_score(regress,X,Y,cv=5))\nprint('scores_1= ',cross_val_score(regress_1,X,Y,cv=5))\nprint('scores_2= ',cross_val_score(regress_2,X,Y,cv=5))","9bc1335c":"scores = cross_val_score(regress,X,Y,cv=5)\nscores_1 = cross_val_score(regress_1,X,Y,cv=5)\nscores_2 = cross_val_score(regress_2,X,Y,cv=5)","ed7052c7":"avg_score=np.mean(scores)\navg_score_1=np.mean(scores_1)\navg_score_2=np.mean(scores_2)","1532152d":"print(avg_score)\nprint(avg_score_1)\nprint(avg_score_2)","b9d43108":"from sklearn.metrics import mean_squared_error","67b152ca":"print('mse = ',np.sqrt(mean_squared_error(Y_test,Y_pred)))\nprint('mse_1 = ',np.sqrt(mean_squared_error(Y_test,Y_pred_1)))\nprint('mse_2 = ',np.sqrt(mean_squared_error(Y_test,Y_pred_2)))","ad7cda94":"Y_pred_2","5190415b":"The independent variables taken are 'Total Volume', '4046', '4225', '4770', 'type', 'region'. The numbers mentioned before are the 'Price Look Up' codes assigned for Small\/Medium Hass, Large Hass, Extra Large Hass avocadoes respectively. Since we have 2 kinds of avocadoes and around 50 regions given in the data set, dummy variabes are created for these categorical variables.","577996d9":"So the distribution curve is skewed slightly on the positive side and is platykurtic.","f944a83e":"From the above r2 score we can conclude that the linear regression model has an accuracy of 53%. So we will check with Decision tree and Random forest regressions to see if they produce any better results.","ec790dc8":"So apparently regress_2 i.e; Random Forest Regression is the best model.","7be6ff2c":"For analysis, 'AveragePrice' is taken as the dependent variable. Since the distribution curve looks close to normal there is no need to perform any further transformations to the data.","879aeb55":"So in this data there are 2 different kinds of avocadoes.\n1. **Conventional**. These avocadoes are grown using conventional farming techniques which include the usage of pesticides and other syntheytic chemical fertilizers to get the highest possible yield of crops.\n2. **Organic**.These avocadoes are grown using sustainable ways and fertilizers of organic origin such as compost manure, green manure, bone meal etc, are used.\n\nData has been collected from different regions in the USA. Data is also given for the whole of USA under the region name 'TotalUSA', but since the analysis is being done on prices in different regions of the country the rows consisting 'TotalUSA' can be dropped."}}