{"cell_type":{"e1110ae8":"code","29c38266":"code","acd596f8":"code","12b30302":"code","968fd466":"code","0504e89f":"code","b7ca5fa9":"code","61283584":"code","7d4b715d":"code","c1cd8e38":"code","06abea36":"code","02685bdb":"code","20a15d28":"code","e36d4ff0":"code","54dff9af":"code","ea3342d7":"code","d8c43991":"code","9ff2679c":"code","2c4a36e3":"code","5375b5be":"code","798e57a7":"code","dd6c61f1":"code","0ccd6a32":"code","f3944361":"code","dafef39e":"code","06b5a195":"code","11cfb39f":"code","6905a05b":"markdown","902aa38f":"markdown","2512ab7f":"markdown","73dd3c69":"markdown","8a0d0ae7":"markdown","3ae8f1e8":"markdown","643e9455":"markdown","2a40936c":"markdown","a3ff3145":"markdown","cc4f04fc":"markdown","7d42bb68":"markdown","8f8340aa":"markdown","3660a8cb":"markdown","0f6bc098":"markdown","8264fff6":"markdown","d482c2f4":"markdown","eb48fe05":"markdown","9936d916":"markdown"},"source":{"e1110ae8":"# start Our Engine\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns","29c38266":"# import Our Data\nraw_data = pd.read_csv('..\/input\/trip-advisor-hotel-reviews\/tripadvisor_hotel_reviews.csv')","acd596f8":"# See Our Data\nraw_data.head()","12b30302":"# check missing data\nraw_data.isnull().sum()","968fd466":"# Check for whitespace strings\n\n# Empty list for Our index \nblanks = []  \n\nfor i,rv,lb in raw_data.itertuples(): # change dataframe into tuples\n    if type(rv)==str:            # avoid NaN values\n        if rv.isspace():         # find 'review' data only include space in text\n            blanks.append(i)     # add matching index numbers to the list\n        \nlen(blanks) # how many number of index only has space in review column","0504e89f":"# create a list of our conditions\nconditions = [\n    (raw_data['Rating'] > 3),\n    (raw_data['Rating'] < 3),\n    (raw_data['Rating'] == 3)\n    ]\n\n# create a list of the values we want to assign for each condition\nvalues = ['Positive','Negative','Neutral']\n\n# create a new column and use np.select to assign values to it using our lists as arguments\nraw_data['Sentiment'] = np.select(conditions, values)","b7ca5fa9":"raw_data.head()","61283584":"# import Our nlp machine\nimport spacy\nnlp = spacy.load('en_core_web_lg')","7d4b715d":"# create token list\ntoken_list = []\n\nfor rv in raw_data['Review']:\n    doc = nlp(rv, disable=['parser', 'tagger', 'ner']) # disable for speed\n    tokens = [n.lemma_ for n in doc if(n.is_punct == False and n.is_stop == False)] # remove punctution and stopwords\n    x = \" \".join(tokens) # turn list into string\n    token_list.append(x) ","c1cd8e38":"# add column tokens\nraw_data['Tokens'] = token_list","06abea36":"# checkpoint\ndf = raw_data.copy()","02685bdb":"# We have cleaned the data, so We don't need review data anymore\ndf.drop('Review', axis=1,inplace=True)","20a15d28":"df.head()","e36d4ff0":"# Invite Our assistant\nfrom collections import Counter","54dff9af":"# words counter\ncollect_words = Counter([word for token in df['Tokens'] for word in token.split()])","ea3342d7":"# make pandas table, top 25\nfreq_words = pd.DataFrame(collect_words.most_common(25))","d8c43991":"# columns name\nfreq_words.columns = ['word','count']","9ff2679c":"freq_words","2c4a36e3":"# Class count\ncount_positive, count_negative, count_neutral = df['Sentiment'].value_counts()","5375b5be":"# Divide by class\ndf_positive = df[df['Sentiment'] == 'Positive']\ndf_negative = df[df['Sentiment'] == 'Negative']\ndf_neutral = df[df['Sentiment'] == 'Neutral']","798e57a7":"print(count_positive)\nprint(count_negative)\nprint(count_neutral)","dd6c61f1":"# under sampling\ndf_positive_under = df_positive.sample(count_neutral)\ndf_negative_under = df_negative.sample(count_neutral)\n\ndf_test_under = pd.concat([df_positive_under, df_negative_under, df_neutral], axis=0)","0ccd6a32":"df_test_under['Sentiment'].value_counts()","f3944361":"# split the data\nfrom sklearn.model_selection import train_test_split\n\nX = df_test_under['Tokens']\ny = df_test_under['Sentiment']\n\nX_train, X_test, y_train, y_test = train_test_split(X,y)","dafef39e":"# Start the Engine\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.svm import LinearSVC\n\ntext_clf = Pipeline([('tfidf', TfidfVectorizer()),\n                     ('clf', LinearSVC()),\n])\n\n# Feed the training data through the pipeline\ntext_clf.fit(X_train, y_train)","06b5a195":"predictions = text_clf.predict(X_test)","11cfb39f":"from sklearn.metrics import classification_report\n\n# Print a classification report\nprint(classification_report(y_test,predictions))","6905a05b":"I think We need add a column that show is the rating number means positive, negative, or neutral. <br>\nCause, It's more meaningful than 1, 2, 3, 4, 5. <br>\nIn this case, There are 3 categories:<br>\n1. Positive, include rating 4 and 5\n2. Neutral, include rating 3\n3. Negative, include rating 1 and 2","902aa38f":"# Sentiment Analysis","2512ab7f":"It's balanced now","73dd3c69":"Because We have balanced the data, so We should look Our Model's accuracy.<br>\nas You can see, Our model has **70%** accuracy.\nYeeaaa :)","8a0d0ae7":"# Mission\n\nIn this case I was trying to figuring Out, <br>\nwhat are the key aspects should be considered by a Hotel\/Villa management<br>\nand I did a litttle bit of sentiment analysis","3ae8f1e8":"## Balancing Data","643e9455":"There is no Missing data and Whitespace strings. So, We don't need to clean the data","2a40936c":"## Tokenizer","a3ff3145":"# Key Aspect in Hotel\n\nI tried to count the number of each word to figuring out what are the key aspects of a Hotel","cc4f04fc":"Based on the result above, We can conclude that There is some **Key Aspects** which should be considered by Hotel Management, such as:\n1. **Hotel Room**\n2. **Staff\/Service**\n3. **Cleanness\/Hygiene**\n4. **Restaurant\/Food**\n5. **Pool\/Beach**","7d42bb68":"# Data Overview","8f8340aa":"## Accuracy","3660a8cb":"## Rating Categories","0f6bc098":"## Make a Model","8264fff6":"# Clean Data","d482c2f4":"<img src=\"https:\/\/images.unsplash.com\/photo-1603076534270-364861eac82d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\" alt=\"resort_img\">","eb48fe05":"## Missing Value","9936d916":"<span>Photo by <a href=\"https:\/\/unsplash.com\/@uvastrishamarie?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Trisha Marie Uvas<\/a> on <a href=\"https:\/\/unsplash.com\/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash<\/a><\/span>"}}