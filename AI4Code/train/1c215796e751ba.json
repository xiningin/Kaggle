{"cell_type":{"444d8b3c":"code","c38eaf8a":"code","b4107052":"code","43cf8ecb":"code","784e4a21":"code","57c0b437":"code","b9ff94b6":"code","816b258b":"code","0270bed5":"code","3b0219c3":"code","d173853a":"code","dcb06663":"code","0b446f45":"code","cbffd7dd":"code","04decbe5":"code","f7f1ae2f":"code","cd83da7f":"code","e5bd0530":"code","f0f8f9e5":"code","d8befd85":"code","68fa1e86":"markdown"},"source":{"444d8b3c":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tcs-share\/TCS.NS (1).csv')\nnetflix.head()","c38eaf8a":"netflix=netflix[['Date','Close']]\nnetflix.head()","b4107052":"netflix.info()","43cf8ecb":"!pip install pycaret-ts-alpha","784e4a21":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","57c0b437":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","b9ff94b6":"netflix = netflix.asfreq('d')\nnetflix.index","816b258b":"netflix.head()","0270bed5":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","3b0219c3":"data=netflix.Close\ndata","d173853a":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","dcb06663":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","0b446f45":"## Create a model manually\nmodel = exp.create_model(\"exp_smooth\")\nmodel","cbffd7dd":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","04decbe5":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","f7f1ae2f":"tuned_model = exp.tune_model(model,optimize = 'R2')\ntuned_model","cd83da7f":"exp.predict_model(tuned_model)","e5bd0530":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","f0f8f9e5":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","d8befd85":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","68fa1e86":"# "}}