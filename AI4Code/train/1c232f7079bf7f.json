{"cell_type":{"d4d8d924":"code","08c8b073":"code","ef89c5e4":"code","a1a9d9de":"code","6218a1a1":"code","d86d70aa":"code","b8595a16":"code","279613f1":"code","73c51a8f":"code","46fa880c":"code","12fbb376":"code","ce6706d8":"code","388425ec":"code","ec5a0850":"code","b89d8947":"code","69cdd86a":"code","c0795832":"code","d66c4f06":"code","2865f4ad":"markdown","7a9f5a52":"markdown"},"source":{"d4d8d924":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.impute import SimpleImputer\nimport xgboost as xgb\nfrom sklearn.metrics import f1_score, recall_score\nfrom sklearn.model_selection import GridSearchCV","08c8b073":"#import train data\ndf = pd.read_csv('\/kaggle\/input\/iba-ml1-mid-project\/train.csv')\ndf.head()","ef89c5e4":"#drop first column and replace dataframe\ndf.drop(['Id'], axis=1, inplace = True)","a1a9d9de":"#distinct values of column\nprint(df['credit_line_utilization'].unique())\n\n#counts of non-null values\ndf['credit_line_utilization'].value_counts()","6218a1a1":"#firstly, replace ',' with '.'\ndf['credit_line_utilization'] = df['credit_line_utilization'].str.replace(',','.')\n\n#convert object to float\ndf['credit_line_utilization'] = df['credit_line_utilization'].astype(float)","d86d70aa":"#independent columns\nX = df.iloc[:,:-1]\n\n#target\ny = df['defaulted_on_loan']","b8595a16":"X_train, X_test, y_train, y_test = train_test_split(X,y, random_state=42)","279613f1":"model = Pipeline(steps = [ (\"preprocessing\", Pipeline(steps = [\n                           (\"imputer\",SimpleImputer(strategy = \"most_frequent\")),\n                           (\"scaler\",MinMaxScaler()),])),\n                           (\"model\", xgb.XGBClassifier(use_label_encoder=False, max_depth=None))\n])","73c51a8f":"prm_search = {\n    \"preprocessing__scaler\":[MinMaxScaler(),StandardScaler()],\n    \"model__max_depth\": [3,5,7],\n    \"model__eval_metric\": ['logloss', 'error']\n}","46fa880c":"model = GridSearchCV(model, prm_search, cv = 5)\n#model.fit(X_train,y_train)","12fbb376":"model.fit(X_train,y_train)\n\nprint('roc_auc_score: ', roc_auc_score(model.predict(X_test),y_test))","ce6706d8":"test_data = pd.read_csv('\/kaggle\/input\/iba-ml1-mid-project\/test.csv')","388425ec":"test_data.info()","ec5a0850":"test_data.drop(['Id'], axis=1, inplace = True)","b89d8947":"#firstly, replace ',' with '.'\ntest_data['credit_line_utilization'] = test_data['credit_line_utilization'].str.replace(',','.')\n\n#convert object to float\ntest_data['credit_line_utilization'] = test_data['credit_line_utilization'].astype(float)","69cdd86a":"sub = model.predict_proba(test_data)[:, 1]\nsub","c0795832":"sample = pd.read_csv('\/kaggle\/input\/iba-ml1-mid-project\/sample_submission.csv')","d66c4f06":"sub = pd.DataFrame(model.predict_proba(test_data)[:, 1])\nsub = pd.concat([sample['Id'], sub],axis=1)\nsub.columns = ('Id', 'Predicted')\nsub.to_csv('submission.csv', index = False)","2865f4ad":"# 3. Model","7a9f5a52":"ROC stands for curves receiver or operating characteristic curve. It illustrates in a binary classifier system the discrimination threshold created by plotting the true positive rate vs false positive rate. The roc_auc_score always runs from 0 to 1, and is sorting predictive possibilities."}}