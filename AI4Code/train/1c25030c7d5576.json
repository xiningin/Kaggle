{"cell_type":{"6c7c6f24":"code","c6f64137":"code","199d5898":"code","ac154673":"code","e4c617f8":"code","1cae6a27":"code","a224c349":"code","60c1dc4a":"code","5649746f":"code","7582c181":"code","0fa97584":"code","0dc141f3":"code","b04202f8":"code","88e2d8c6":"code","53e41391":"code","df5a7de4":"code","13fa73d1":"code","c294cf36":"code","a2d70adf":"code","02efd245":"code","0f8cfb04":"code","4669faa1":"code","1d94aa35":"code","f5b9be49":"code","e83f681f":"code","90740207":"code","2eea4413":"code","79946ae8":"code","c85301db":"code","81ac6584":"code","2ea50d8e":"code","54af3766":"code","a639d256":"code","55f83dbb":"code","dc24c8cf":"code","01ca73dd":"code","32323ced":"code","91464f12":"markdown","76275c22":"markdown","4b24eb44":"markdown","ecca8194":"markdown","736f62bd":"markdown","7d6ccdfc":"markdown","c4b57e40":"markdown","5e6b0e11":"markdown","cf4e4031":"markdown","7cd9951f":"markdown","bc7f53ef":"markdown","ae416686":"markdown","3f85149f":"markdown","80ceeb93":"markdown","3f3ab45c":"markdown","2b273fc7":"markdown"},"source":{"6c7c6f24":"# \u307e\u305a\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046\n!ls ..\/input\/*","c6f64137":"# \u57fa\u672c\u7684\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\nimport numpy as np # \u7dda\u5f62\u4ee3\u6570\nimport pandas as pd # \u30c7\u30fc\u30bf\u306e\u52a0\u5de5, CSV\u30d5\u30a1\u30a4\u30eb\u306eI\/O (e.g. pd.read_csv)\nimport random as rd # \u4e71\u6570\u306e\u751f\u6210\nimport datetime # manipulating date formats\n# \u53ef\u8996\u5316\u7528\nimport matplotlib.pyplot as plt # basic plotting\nimport seaborn as sns # for prettier plots\n\n\n# \u6642\u7cfb\u5217\u89e3\u6790\u7528\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom pandas.plotting import autocorrelation_plot\nfrom statsmodels.tsa.stattools import adfuller, acf, pacf,arma_order_select_ic\nimport statsmodels.formula.api as smf\nimport statsmodels.tsa.api as smt\nimport statsmodels.api as sm\nimport scipy.stats as scs\n\n\n# \u8a2d\u5b9a\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n","199d5898":"# \u5168\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\nsales=pd.read_csv(\"..\/input\/sales_train.csv\")\n\n# \u8a2d\u5b9a\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nitem_cat=pd.read_csv(\"..\/input\/item_categories.csv\")\nitem=pd.read_csv(\"..\/input\/items.csv\")\nsub=pd.read_csv(\"..\/input\/sample_submission.csv\")\nshops=pd.read_csv(\"..\/input\/shops.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\")","ac154673":"# \u65e5\u4ed8\u30ab\u30e9\u30e0\u3092\u6b63\u3057\u304f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\nsales.date=sales.date.apply(lambda x:datetime.datetime.strptime(x, '%d.%m.%Y'))\n# \u78ba\u8a8d\nprint(sales.info())","e4c617f8":"# \u5fc5\u8981\u306a\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u6708\u6b21\u30ec\u30d9\u30eb\u3067\u96c6\u8a08\n\nmonthly_sales=sales.groupby([\"date_block_num\",\"shop_id\",\"item_id\"])[\n    \"date\",\"item_price\",\"item_cnt_day\"].agg({\"date\":[\"min\",'max'],\"item_price\":\"mean\",\"item_cnt_day\":\"sum\"})\n\n## \u30b3\u30fc\u30c9\u3092\u30d6\u30ec\u30a4\u30af\u30c0\u30a6\u30f3\u3057\u3066\u7406\u89e3\u3057\u3066\u3044\u304d\u307e\u3059:\n# \u65e5\u4ed8\u30d6\u30ed\u30c3\u30af\uff08\u6708\uff09\u3068shop_id\u3001item_id\u306b\u3088\u308b\u96c6\u8a08\n# date,item_price,item_cnt(sales)\u306e\u5404\u30ab\u30e9\u30e0\u3092\u9078\u629e\n# \u3069\u306e\u30ab\u30e9\u30e0\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u96c6\u7d04\u3092\u884c\u3046\u304b\u3092\u793a\u3059\u8f9e\u66f8\u3092\u7528\u610f\n# \u65e5\u4ed8\u306e\u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\n# item_price\u306e\u5e73\u5747\u5024\n# \u58f2\u4e0a\u9ad8\u306e\u5408\u8a08","1cae6a27":"# take a peak\nmonthly_sales.head(20)","a224c349":"# \u30ab\u30c6\u30b4\u30ea\u3054\u3068\u306e\u30a2\u30a4\u30c6\u30e0\u6570\nx=item.groupby(['item_category_id']).count()\nx=x.sort_values(by='item_id',ascending=False)\nx=x.iloc[0:10].reset_index()\nx\n# plot\nplt.figure(figsize=(8,4))\nax= sns.barplot(x.item_category_id, x.item_id, alpha=0.8)\nplt.title(\"Items per Category\")\nplt.ylabel('# of items', fontsize=12)\nplt.xlabel('Category', fontsize=12)\nplt.show()","60c1dc4a":"ts=sales.groupby([\"date_block_num\"])[\"item_cnt_day\"].sum()\nts.astype('float')\nplt.figure(figsize=(16,8))\nplt.title('Total Sales of the company')\nplt.xlabel('Time')\nplt.ylabel('Sales')\nplt.plot(ts);","5649746f":"plt.figure(figsize=(16,6))\nplt.plot(ts.rolling(window=12,center=False).mean(),label='Rolling Mean');\nplt.plot(ts.rolling(window=12,center=False).std(),label='Rolling sd');\nplt.legend();","7582c181":"import statsmodels.api as sm\n# \u7a4d\u7b97\nres = sm.tsa.seasonal_decompose(ts.values,freq=12,model=\"multiplicative\")\n#plt.figure(figsize=(16,12))\nfig = res.plot()\n#fig.show()","0fa97584":"# \u52a0\u7b97\u30e2\u30c7\u30eb\nres = sm.tsa.seasonal_decompose(ts.values,freq=12,model=\"additive\")\n#plt.figure(figsize=(16,12))\nfig = res.plot()\n#fig.show()","0dc141f3":"# R\u30d0\u30fc\u30b8\u30e7\u30f3\u306epython\u3078\u306e\u79fb\u690d\n\n# alas ! rpy2 does not exist in Kaggle kernals :( \n# from rpy2.robjects import r\n# def decompose(series, frequency, s_window, **kwargs):\n#     df = pd.DataFrame()\n#     df['date'] = series.index\n#     s = [x for x in series.values]\n#     length = len(series)\n#     s = r.ts(s, frequency=frequency)\n#     decomposed = [x for x in r.stl(s, s_window, **kwargs).rx2('time.series')]\n#     df['observed'] = series.values\n#     df['trend'] = decomposed[length:2*length]\n#     df['seasonal'] = decomposed[0:length]\n#     df['residual'] = decomposed[2*length:3*length]\n#     return df","b04202f8":"# \u5b9a\u5e38\u6027\u306e\u691c\u5b9a\ndef test_stationarity(timeseries):\n    \n    #Perform Dickey-Fuller test:\n    print('Results of Dickey-Fuller Test:')\n    dftest = adfuller(timeseries, autolag='AIC')\n    dfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in dftest[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print (dfoutput)\n\ntest_stationarity(ts)\n","88e2d8c6":"# \u30c8\u30ec\u30f3\u30c9\u3092\u53d6\u308a\u9664\u304f\nfrom pandas import Series as Series\n# create a differenced series\ndef difference(dataset, interval=1):\n    diff = list()\n    for i in range(interval, len(dataset)):\n        value = dataset[i] - dataset[i - interval]\n        diff.append(value)\n    return Series(diff)\n\n# invert differenced forecast\ndef inverse_difference(last_ob, value):\n    return value + last_ob\n\n","53e41391":"ts=sales.groupby([\"date_block_num\"])[\"item_cnt_day\"].sum()\nts.astype('float')\nplt.figure(figsize=(16,16))\nplt.subplot(311)\nplt.title('Original')\nplt.xlabel('Time')\nplt.ylabel('Sales')\nplt.plot(ts)\nplt.subplot(312)\nplt.title('After De-trend')\nplt.xlabel('Time')\nplt.ylabel('Sales')\nnew_ts=difference(ts)\nplt.plot(new_ts)\nplt.plot()\n\nplt.subplot(313)\nplt.title('After De-seasonalization')\nplt.xlabel('Time')\nplt.ylabel('Sales')\nnew_ts=difference(ts,12)       # \u5b63\u7bc0\u6027\u306f12\u304b\u6708\u3068\u304a\u304f\nplt.plot(new_ts)\nplt.plot()","df5a7de4":"# \u5b63\u7bc0\u6027\u3092\u9664\u3044\u305f\u4e0a\u3067\u3001\u6539\u3081\u3066\u5b9a\u5e38\u6027\u306e\u691c\u5b9a\u3092\u884c\u3046\ntest_stationarity(new_ts)","13fa73d1":"def tsplot(y, lags=None, figsize=(10, 8), style='bmh',title=''):\n    if not isinstance(y, pd.Series):\n        y = pd.Series(y)\n    with plt.style.context(style):    \n        fig = plt.figure(figsize=figsize)\n        #mpl.rcParams['font.family'] = 'Ubuntu Mono'\n        layout = (3, 2)\n        ts_ax = plt.subplot2grid(layout, (0, 0), colspan=2)\n        acf_ax = plt.subplot2grid(layout, (1, 0))\n        pacf_ax = plt.subplot2grid(layout, (1, 1))\n        qq_ax = plt.subplot2grid(layout, (2, 0))\n        pp_ax = plt.subplot2grid(layout, (2, 1))\n        \n        y.plot(ax=ts_ax)\n        ts_ax.set_title(title)\n        smt.graphics.plot_acf(y, lags=lags, ax=acf_ax, alpha=0.5)\n        smt.graphics.plot_pacf(y, lags=lags, ax=pacf_ax, alpha=0.5)\n        sm.qqplot(y, line='s', ax=qq_ax)\n        qq_ax.set_title('QQ Plot')        \n        scs.probplot(y, sparams=(y.mean(), y.std()), plot=pp_ax)\n\n        plt.tight_layout()\n    return ","c294cf36":"# AR(1)\u904e\u7a0b\u3092alpha = 0.6\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\nnp.random.seed(1)\nn_samples = int(1000)\na = 0.6\nx = w = np.random.normal(size=n_samples)\n\nfor t in range(n_samples):\n    x[t] = a*x[t-1] + w[t]\nlimit=12    \n_ = tsplot(x, lags=limit,title=\"AR(1)process\")","a2d70adf":"# AR(2)\u904e\u7a0b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\n\nn = int(1000)\nalphas = np.array([.444, .333])\nbetas = np.array([0.])\n\n# Python\u3067\u306f\u3001\u30bc\u30ed\u30e9\u30b0\u306e\u5024\u30921\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n# AR\u30e2\u30c7\u30eb\u306e\u30a2\u30eb\u30d5\u30a1\u306f\u5426\u5b9a\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306b\u3082\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n# AR(p)\u30e2\u30c7\u30eb\u306e\u5834\u5408\u306f\u3001MA\u306e\u30d9\u30fc\u30bf\u5024\u30920\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n# \u8a73\u7d30\u306f statsmodels.org \u306e\u4f8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nar = np.r_[1, -alphas]\nma = np.r_[1, betas]\n\nar2 = smt.arma_generate_sample(ar=ar, ma=ma, nsample=n) \n_ = tsplot(ar2, lags=12,title=\"AR(2) process\")","02efd245":"# MA(1)\u904e\u7a0b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\nn = int(1000)\n# set the AR(p) alphas equal to 0\nalphas = np.array([0.])\nbetas = np.array([0.8])\n# add zero-lag and negate alphas\nar = np.r_[1, -alphas]\nma = np.r_[1, betas]\nma1 = smt.arma_generate_sample(ar=ar, ma=ma, nsample=n) \nlimit=12\n_ = tsplot(ma1, lags=limit,title=\"MA(1) process\")","0f8cfb04":"# MA(2)\u904e\u7a0b\u3092betas=0.6, 0.4\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\nn = int(1000)\nalphas = np.array([0.])\nbetas = np.array([0.6, 0.4])\nar = np.r_[1, -alphas]\nma = np.r_[1, betas]\n\nma3 = smt.arma_generate_sample(ar=ar, ma=ma, nsample=n)\n_ = tsplot(ma3, lags=12,title=\"MA(2) process\")","4669faa1":"# ARMA(2, 2)\u30e2\u30c7\u30eb\u3092alphas=[0.5,-0.25], betas=[0.5,-0.3]\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\nmax_lag = 12\n\nn = int(5000) # lots of samples to help estimates\nburn = int(n\/10) # number of samples to discard before fit\n\nalphas = np.array([0.8, -0.65])\nbetas = np.array([0.5, -0.7])\nar = np.r_[1, -alphas]\nma = np.r_[1, betas]\n\narma22 = smt.arma_generate_sample(ar=ar, ma=ma, nsample=n, burnin=burn)\n_ = tsplot(arma22, lags=max_lag,title=\"ARMA(2,2) process\")","1d94aa35":"# aic\u3067\u6700\u9069\u306a\u9806\u756a\u3092\u9078\u3076 \n# \u6700\u5c0f\u306eaic\u5024\u304c\u52dd\u3064\nbest_aic = np.inf \nbest_order = None\nbest_mdl = None\n\nrng = range(5)\nfor i in rng:\n    for j in rng:\n        try:\n            tmp_mdl = smt.ARMA(arma22, order=(i, j)).fit(method='mle', trend='nc')\n            tmp_aic = tmp_mdl.aic\n            if tmp_aic < best_aic:\n                best_aic = tmp_aic\n                best_order = (i, j)\n                best_mdl = tmp_mdl\n        except: continue\n\n\nprint('aic: {:6.5f} | order: {}'.format(best_aic, best_order))\n","f5b9be49":"# aic\u3067\u6700\u9069\u306a\u9806\u756a\u3092\u9078\u3076 \n# \u6700\u5c0f\u306eaic\u5024\u304c\u52dd\u3064\nbest_aic = np.inf \nbest_order = None\nbest_mdl = None\n\nrng = range(5)\nfor i in rng:\n    for j in rng:\n        try:\n            tmp_mdl = smt.ARMA(new_ts.values, order=(i, j)).fit(method='mle', trend='nc')\n            tmp_aic = tmp_mdl.aic\n            if tmp_aic < best_aic:\n                best_aic = tmp_aic\n                best_order = (i, j)\n                best_mdl = tmp_mdl\n        except: continue\n\n\nprint('aic: {:6.5f} | order: {}'.format(best_aic, best_order))\n","e83f681f":"# best_mdl.predict()\u3092\u4f7f\u3063\u3066\u6b21\u306e\u5024\u3092\u4e88\u6e2c\u3059\u308b\u3060\u3051\u3067\u3059\u3002","90740207":"# \u65e5\u4ed8\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u3057\u3066\u6642\u7cfb\u5217\u306b\u8ffd\u52a0\u3059\u308b\nts=sales.groupby([\"date_block_num\"])[\"item_cnt_day\"].sum()\nts.index=pd.date_range(start = '2013-01-01',end='2015-10-01', freq = 'MS')\nts=ts.reset_index()\nts.head()","2eea4413":"from fbprophet import Prophet\n# prophet\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3067pandas df\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n# ( date column named as DS and the value column as Y)\nts.columns=['ds','y']\nmodel = Prophet( yearly_seasonality=True) #instantiate Prophet with only yearly seasonality as our data is monthly \nmodel.fit(ts) #fit the model with your dataframe","79946ae8":"# predict for five months in the furure and MS - month start is the frequency\nfuture = model.make_future_dataframe(periods = 5, freq = 'MS')  \n# now lets make the forecasts\nforecast = model.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","c85301db":"model.plot(forecast)","81ac6584":"model.plot_components(forecast)","2ea50d8e":"total_sales=sales.groupby(['date_block_num'])[\"item_cnt_day\"].sum()\ndates=pd.date_range(start = '2013-01-01',end='2015-10-01', freq = 'MS')\n\ntotal_sales.index=dates\ntotal_sales.head()","54af3766":"# \u6708\u6b21\u306e\u8ca9\u58f2\u30c7\u30fc\u30bf\u304b\u3089\u30a2\u30a4\u30c6\u30e0\u30fb\u30b9\u30c8\u30a2\u306e\u30e6\u30cb\u30fc\u30af\u306a\u7d44\u307f\u5408\u308f\u305b\u3092\u53d6\u5f97\u3059\u308b\nmonthly_sales=sales.groupby([\"shop_id\",\"item_id\",\"date_block_num\"])[\"item_cnt_day\"].sum()\n# arrange it conviniently to perform the hts \nmonthly_sales=monthly_sales.unstack(level=-1).fillna(0)\nmonthly_sales=monthly_sales.T\ndates=pd.date_range(start = '2013-01-01',end='2015-10-01', freq = 'MS')\nmonthly_sales.index=dates\nmonthly_sales=monthly_sales.reset_index()\nmonthly_sales.head()","a639d256":"import time\nstart_time=time.time()\n\n# Bottoms up\n# Calculating the base forecasts using prophet\n# From HTSprophet pachage -- https:\/\/github.com\/CollinRooney12\/htsprophet\/blob\/master\/htsprophet\/hts.py\nforecastsDict = {}\nfor node in range(len(monthly_sales)):\n    # take the date-column and the col to be forecasted\n    nodeToForecast = pd.concat([monthly_sales.iloc[:,0], monthly_sales.iloc[:, node+1]], axis = 1)\n#     print(nodeToForecast.head())  # just to check\n# rename for prophet compatability\n    nodeToForecast = nodeToForecast.rename(columns = {nodeToForecast.columns[0] : 'ds'})\n    nodeToForecast = nodeToForecast.rename(columns = {nodeToForecast.columns[1] : 'y'})\n    growth = 'linear'\n    m = Prophet(growth, yearly_seasonality=True)\n    m.fit(nodeToForecast)\n    future = m.make_future_dataframe(periods = 1, freq = 'MS')\n    forecastsDict[node] = m.predict(future)\n    if (node== 10):\n        end_time=time.time()\n        print(\"forecasting for \",node,\"th node and took\",end_time-start_time,\"s\")\n        break\n    ","55f83dbb":"monthly_shop_sales=sales.groupby([\"date_block_num\",\"shop_id\"])[\"item_cnt_day\"].sum()\n# get the shops to the columns\nmonthly_shop_sales=monthly_shop_sales.unstack(level=1)\nmonthly_shop_sales=monthly_shop_sales.fillna(0)\nmonthly_shop_sales.index=dates\nmonthly_shop_sales=monthly_shop_sales.reset_index()\nmonthly_shop_sales.head()","dc24c8cf":"start_time=time.time()\n\n# Calculating the base forecasts using prophet\n# From HTSprophet pachage -- https:\/\/github.com\/CollinRooney12\/htsprophet\/blob\/master\/htsprophet\/hts.py\nforecastsDict = {}\nfor node in range(len(monthly_shop_sales)):\n    # take the date-column and the col to be forecasted\n    nodeToForecast = pd.concat([monthly_shop_sales.iloc[:,0], monthly_shop_sales.iloc[:, node+1]], axis = 1)\n#     print(nodeToForecast.head())  # just to check\n# rename for prophet compatability\n    nodeToForecast = nodeToForecast.rename(columns = {nodeToForecast.columns[0] : 'ds'})\n    nodeToForecast = nodeToForecast.rename(columns = {nodeToForecast.columns[1] : 'y'})\n    growth = 'linear'\n    m = Prophet(growth, yearly_seasonality=True)\n    m.fit(nodeToForecast)\n    future = m.make_future_dataframe(periods = 1, freq = 'MS')\n    forecastsDict[node] = m.predict(future)\n    ","01ca73dd":"#predictions = np.zeros([len(forecastsDict[0].yhat),1]) \nnCols = len(list(forecastsDict.keys()))+1\nfor key in range(0, nCols-1):\n    f1 = np.array(forecastsDict[key].yhat)\n    f2 = f1[:, np.newaxis]\n    if key==0:\n        predictions=f2.copy()\n       # print(predictions.shape)\n    else:\n       predictions = np.concatenate((predictions, f2), axis = 1)","32323ced":"predictions_unknown=predictions[-1]\npredictions_unknown","91464f12":"## \u6642\u7cfb\u5217\u89e3\u6790\u306e\u57fa\u790e:\n\n\u5f93\u6765\u306e\u69d8\u3005\u306a\u6642\u7cfb\u5217\u30e2\u30c7\u30eb\u306e\u57fa\u672c\u7684\u306a\u6982\u5ff5\u3068\u3001\u305d\u306e\u80cc\u666f\u306b\u3042\u308b\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u3068\u3092\u7167\u3089\u3057\u5408\u308f\u305b\u306a\u304c\u3089\u3001\u7406\u89e3\u3092\u6df1\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u76ee\u7684:\n\u300c\u3053\u306e\u30ab\u30fc\u30cd\u30eb\u306f\u3001\u521d\u5fc3\u8005\u306e\u305f\u3081\u306e\u6642\u7cfb\u5217\u306b\u95a2\u3059\u308b\u69d8\u3005\u306a\u6982\u5ff5\u306e\u4fdd\u5b58\u5834\u6240\u3068\u3057\u3066\u4f5c\u3089\u308c\u307e\u3057\u305f\u304c\u3001\u5c02\u9580\u5bb6\u306e\u65b9\u306b\u3082\u78ba\u8a8d\u7528\u3068\u3057\u3066\u5f79\u7acb\u3064\u3053\u3068\u3092\u9858\u3063\u3066\u3044\u307e\u3059 :)\u300d\n\n\u3068\u306e\u3053\u3068\u3067\u3059(\u5192\u982d\u30ea\u30f3\u30af\u5148\u306e\u8457\u8005\u306e\u65b9\u3088\u308a)\u3002\u3042\u308a\u304c\u305f\u3044\u9650\u308a\u3067\u3059\u306d\u3002\u3002\n\n## \u3082\u304f\u3058:\n* \u30b3\u30f3\u30da\u3068\u30c7\u30fc\u30bf\u306e\u6982\u8981\n* \u30c7\u30fc\u30bf\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n* \u57fa\u672c\u7684\u306a\u63a2\u67fb\/EDA\n* \u5358\u4e00\u306e\u6642\u7cfb\u5217\n    * \u5b9a\u5e38\u6027\n    * \u5b63\u7bc0\u6027\u3001\u30c8\u30ec\u30f3\u30c9\u3001\u6b8b\u4f59\n    * AR , MA , ARMA , ARIMA\n    * AIC\u3092\u7528\u3044\u305fP\u3068Q\u306e\u9078\u629e\n    * ETS\n    * Prophet\n    * UCM\n* \u968e\u5c64\u578b\u6642\u7cfb\u5217\n    * \u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\n    * AHP\n    * PHA \n    * FP \n    \n    \n## \u30b3\u30f3\u30da\u3068\u30c7\u30fc\u30bf\u306e\u6982\u8981:\n\n\u3053\u306e\u30b3\u30f3\u30da\u3067\u306f\u3001\u30ed\u30b7\u30a2\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4f1a\u793e\u306e\u6765\u6708\u306e\u5168\u88fd\u54c1\u30fb\u5168\u5e97\u8217\u306e\u7dcf\u58f2\u4e0a\u9ad8\u3092\u4e88\u6e2c\u3059\u308b\u3068\u3044\u3046\u8ab2\u984c\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002-[1c company](http:\/\/1c.ru\/eng\/title.htm). \n\n**\u5bfe\u8c61\u3068\u306a\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4f1a\u793e\u306f\u4f55\u3092\u3084\u308b\u304b?:**\n\n1C: Enterprise 8\u30b7\u30b9\u30c6\u30e0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u65e5\u5e38\u7684\u306a\u4f01\u696d\u6d3b\u52d5\u306e\u81ea\u52d5\u5316\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u7ba1\u7406\u4f1a\u8a08\u3001\u30d3\u30b8\u30cd\u30b9\u4f1a\u8a08\u3001\u4eba\u4e8b\u7ba1\u7406\u3001CRM\u3001SRM\u3001MRP\u306a\u3069\u3001\u7d4c\u6e08\u30fb\u7d4c\u55b6\u6d3b\u52d5\u306e\u3055\u307e\u3056\u307e\u306a\u30d3\u30b8\u30cd\u30b9\u30bf\u30b9\u30af\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n**\u30c7\u30fc\u30bf**:\n\u5e97\u8217\u3068\u5546\u54c1\u306e\u7d44\u307f\u5408\u308f\u305b\u3054\u3068\u306b\u65e5\u6b21\u306e\u58f2\u4e0a\u30c7\u30fc\u30bf\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306e\u8ab2\u984c\u306f\u6708\u6b21\u30ec\u30d9\u30eb\u3067\u306e\u58f2\u4e0a\u4e88\u6e2c\u3067\u3059\u3002\n\n## \u30a4\u30f3\u30dd\u30fc\u30c8:\n","76275c22":"## \u3053\u308c\u306f\u306a\u306b\uff1f\n\u500b\u4eba\u7684\u306a\u5b66\u7fd2\u306e\u305f\u3081\u3001[\u3053\u3061\u3089](https:\/\/www.kaggle.com\/jagangupta\/time-series-basics-exploring-traditional-ts)\u3092\u7ffb\u8a33\u3057\u306a\u304c\u3089\u5185\u5bb9\u3092\u3064\u3051\u52a0\u3048\u3066\u3044\u3063\u305f\u3082\u306e\u3067\u3059\u3002\n\n(\u65e5\u672c\u8a9e\u306b\u76f4\u3057\u306a\u304c\u3089\u8aad\u3080\u306e\u9762\u5012\uff01\u3068\u3044\u3046\u65b9\u3005\u5411\u3051\u306b\u5f79\u7acb\u3066\u3070\u671b\u5916\u306e\u559c\u3073\u3067\u3059\u3002vote\u306f\u30ea\u30f3\u30af\u5148\u306e\u65b9\u306b\u5dee\u3057\u4e0a\u3052\u3066\u304f\u3060\u3055\u3044)","4b24eb44":"\u52a0\u6cd5\u30e2\u30c7\u30eb\u3092\u4eee\u5b9a\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n> yt=St+Tt+Et \n\n\u3053\u3053\u3067yt\u306f\u671f\u9593t\u306e\u30c7\u30fc\u30bf\u3001St\u306f\u671f\u9593t\u306e\u5b63\u7bc0\u6210\u5206\u3001Tt\u306f\u671f\u9593tt\u306e\u30c8\u30ec\u30f3\u30c9\u30fb\u30b5\u30a4\u30af\u30eb\u6210\u5206\u3001Et\u306f\u671f\u9593t\u306e\u6b8b\u4f59\uff08\u307e\u305f\u306f\u30a4\u30ec\u30ae\u30e5\u30e9\u30fc\u3001\u30a8\u30e9\u30fc\uff09\u6210\u5206\u3067\u3059\u3002\nMultiplicative\u30e2\u30c7\u30eb\u3082\u540c\u69d8\u3067\u3059\u3002\n\n> yt=St  x Tt x Et \n\n## \u5b9a\u5e38\u6027:\n\n![q](https:\/\/static1.squarespace.com\/static\/53ac905ee4b003339a856a1d\/t\/5818f84aebbd1ac01c275bac\/1478031479192\/?format=750w)\n\nStationarity\uff08\u5b9a\u5e38\u6027\uff09\u3068\u306f\u3001\u6642\u7cfb\u5217\u306e\u6642\u9593\u7684\u4e0d\u5909\u6027\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3059\u306a\u308f\u3061\u3001\u6642\u7cfb\u5217\u306e2\u3064\u306e\u70b9\u306f\u3001\u4e92\u3044\u306b\u3069\u308c\u3060\u3051\u96e2\u308c\u3066\u3044\u308b\u304b\u3060\u3051\u3067\u95a2\u4fc2\u3057\u3066\u304a\u308a\u3001\u65b9\u5411\uff08\u524d\u9032\uff0f\u5f8c\u9000\uff09\u306b\u3088\u3063\u3066\u306f\u95a2\u4fc2\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u6642\u7cfb\u5217\u304c\u5b9a\u5e38\u306e\u5834\u5408\u3001\u30e2\u30c7\u30eb\u5316\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002\u7d71\u8a08\u7684\u306a\u30e2\u30c7\u30ea\u30f3\u30b0\u624b\u6cd5\u306f\u3001\u6642\u7cfb\u5217\u304c\u5b9a\u5e38\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u305f\u308a\u3001\u5fc5\u8981\u3068\u3057\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u5b9a\u5e38\u6027\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u8907\u6570\u306e\u691c\u5b9a\u304c\u3042\u308a\u307e\u3059\u3002\n* ADF( Augmented Dicky Fuller Test) \n* KPSS \n* PP (Phillips-Perron test)\n\n\u3053\u3053\u3067\u306f\u3001\u6700\u3082\u4e00\u822c\u7684\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bADF\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u6ce8: [Excel\u3067Dicky Fuller\u30c6\u30b9\u30c8\u3092\u884c\u3046\u305f\u3081\u306e\u30ac\u30a4\u30c9](http:\/\/www.real-statistics.com\/time-series-analysis\/stochastic-processes\/dickey-fuller-test\/)\n\n[\u305d\u306e\u4ed6\u306e\u4fbf\u5229\u306a\u30ac\u30a4\u30c9](http:\/\/www.blackarbs.com\/blog\/time-series-analysis-in-python-linear-models-to-garch\/11\/1\/2016#AR) \n\n[\u30aa\u30b9\u30b9\u30e1\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https:\/\/github.com\/ultimatist\/ODSC17\/blob\/master\/Time%20Series%20with%20Python%20(ODSC)%20STA.ipynb)\n","ecca8194":"\u3082\u3061\u308d\u3093\u3001\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u306e\u767a\u898b\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u6642\u7cfb\u5217\u306e\u30d1\u30fc\u30c8\u306b\u9032\u3093\u3067\u307f\u307e\u3057\u3087\u3046\u3002\n\n# \u5358\u4e00\u306e\u6642\u7cfb\u5217:\n\n\u76ee\u7684\u306f\u3001\u3042\u308b\u5e97\u8217\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u304a\u3051\u308b\u7fcc\u6708\u306e\u58f2\u4e0a\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u5404\u5e97\u8217\u30a2\u30a4\u30c6\u30e0\u306e\u7d4c\u6642\u7684\u306a\u58f2\u4e0a\u306f\u3001\u305d\u308c\u81ea\u4f53\u304c\u6642\u7cfb\u5217\u3067\u3059\u3002\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8abf\u3079\u308b\u524d\u306b\u3001\u307e\u305a\u5358\u4e00\u306e\u6642\u7cfb\u5217\u3092\u4e88\u6e2c\u3059\u308b\u65b9\u6cd5\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u4f1a\u793e\u5168\u4f53\u306e\u6708\u3054\u3068\u306e\u7dcf\u58f2\u4e0a\u9ad8\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u6708\u3054\u3068\u306e\u7dcf\u58f2\u4e0a\u9ad8\u3092\u8a08\u7b97\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n","736f62bd":"## MA(1) process -- has ACF cut off at lag=1","7d6ccdfc":"## \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u306e\u6b21\u6570\u304cARMA(2,2)\u3067\u3042\u308b\u3053\u3068\u3092\u6b63\u3057\u304f\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\n\n### \u3053\u308c\u3092\u30bb\u30fc\u30eb\u30b9\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n","c4b57e40":"## \u3053\u3053\u304b\u3089\u5148\u306f\u5c11\u3057\u307c\u3093\u3084\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u3042\u307e\u308a\u660e\u78ba\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u4e0a\u8a18\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:\n\nACF Shape\t| Indicated Model |\n-- | -- |\n\u6307\u6570\u95a2\u6570\u7684\u306b\u3001\u30bc\u30ed\u307e\u3067\u6e1b\u8870\u3059\u308b |\t\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb\u3002\u90e8\u5206\u81ea\u5df1\u76f8\u95a2\u30d7\u30ed\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u6b21\u6570\u3092\u7279\u5b9a\u3059\u308b |\n\u6b63\u3068\u8ca0\u3092\u4ea4\u4e92\u306b\u7e70\u308a\u8fd4\u3059\u3001\u30bc\u30ed\u306b\u6e1b\u8870\u3059\u308b \u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb |  \u90e8\u5206\u81ea\u5df1\u76f8\u95a2\u30d7\u30ed\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u9806\u5e8f\u3092\u7279\u5b9a\u3059\u308b |\n1\u3064\u4ee5\u4e0a\u306e\u30b9\u30d1\u30a4\u30af\u3001\u6b8b\u308a\u306f\u57fa\u672c\u7684\u306b\u30bc\u30ed | \u79fb\u52d5\u5e73\u5747\u30e2\u30c7\u30eb\u3001\u30d7\u30ed\u30c3\u30c8\u304c\u30bc\u30ed\u306b\u306a\u308b\u5834\u6240\u3067\u9806\u5e8f\u3092\u8b58\u5225 |\n\u6570\u56de\u306e\u30e9\u30b0\u306e\u5f8c\u306b\u6e1b\u8870 |\t\u6df7\u5408\u81ea\u5df1\u56de\u5e30\u30fb\u79fb\u52d5\u5e73\u5747\uff08ARMA\uff09\u30e2\u30c7\u30eb | \n\u3059\u3079\u3066\u30bc\u30ed\u307e\u305f\u306f\u30bc\u30ed\u306b\u8fd1\u3044 | \u30c7\u30fc\u30bf\u306f\u57fa\u672c\u7684\u306b\u30e9\u30f3\u30c0\u30e0 |\n\u4e00\u5b9a\u306e\u9593\u9694\u3067\u9ad8\u3044\u5024\u304c\u51fa\u308b | \u5b63\u7bc0\u6027\u81ea\u5df1\u56de\u5e30\u9805\u3092\u542b\u3080 |\n\u30bc\u30ed\u307e\u3067\u6e1b\u8870\u3057\u306a\u3044 |\t\u7cfb\u5217\u306f\u5b9a\u5e38\u7684\u3067\u306a\u3044 |\n\n\n## AR\u3068MA\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u9806\u756a\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u3001\u30b7\u30b9\u30c6\u30e0\u7684\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","5e6b0e11":"**\u30d1\u30c3\u3068\u898b\u3066\u308f\u304b\u308b\u3053\u3068:**\n\u660e\u3089\u304b\u306b\u300c\u5b63\u7bc0\u6027\u300d\uff08\u4f8b\uff1a\u3042\u308b\u6642\u671f\u306b\u58f2\u4e0a\u304c\u30d4\u30fc\u30af\u306b\u306a\u308b\uff09\u304c\u3042\u308a\u3001\u300c\u30c8\u30ec\u30f3\u30c9\u300d\u306f\u6e1b\u5c11\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001\u30c8\u30ec\u30f3\u30c9\u3001\u5b63\u7bc0\u6027\u3001\u6b8b\u5dee\u306b\u5206\u89e3\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n","cf4e4031":"## MA(2) process -- has ACF cut off at lag=2","7cd9951f":"# Prophet: \n\n\u6700\u8fd1\u3001Facebook\u306e\u7814\u7a76\u306b\u3088\u3063\u3066\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5316\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u975e\u5e38\u306b\u6709\u671b\u306a\u30c4\u30fc\u30eb\u3067\u3001\u30a4\u30e9\u30a4\u30e9\u3059\u308b**\u30d5\u30e9\u30c3\u30c8\u30e9\u30a4\u30f3**\u306e\u89e3\u6c7a\u306b\u3001\u3057\u3070\u3057\u3070\u975e\u5e38\u306b\u4fbf\u5229\u3067\u8fc5\u901f\u306a\u89e3\u6c7a\u7b56\u3068\u306a\u308a\u307e\u3059\u3002\n\n![\u30d5\u30e9\u30c3\u30c8\u30e9\u30a4\u30f3](https:\/\/i.stack.imgur.com\/fWzyX.jpg)\n\n\u78ba\u304b\u306b\u3001\u9069\u5207\u306a\u524d\u51e6\u7406\u3092\u884c\u3044\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u614e\u91cd\u306b\u8abf\u6574\u3059\u308c\u3070\u3001\u4e0a\u306e\u30b0\u30e9\u30d5\u306e\u3088\u3046\u306a\u3053\u3068\u306f\u8d77\u3053\u3089\u306a\u3044\u3068\u8a00\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u5b9f\u969b\u306e\u3068\u3053\u308d\u3001\u79c1\u305f\u3061\u306e\u307b\u3068\u3093\u3069\u306f\u3001\u305d\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u5fcd\u8010\u529b\u3082\u5c02\u9580\u77e5\u8b58\u3082\u6301\u3061\u5408\u308f\u305b\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001\u307b\u3068\u3093\u3069\u306e\u5b9f\u7528\u7684\u306a\u30b7\u30ca\u30ea\u30aa\u3067\u306f\u3001\u4e88\u6e2c\u304c\u5fc5\u8981\u306a\u6642\u7cfb\u5217\u304c\u305f\u304f\u3055\u3093\u3042\u308b\u3068\u3044\u3046\u4e8b\u5b9f\u304c\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306e\u30b3\u30f3\u30da\u3067\u306f\u3001\u5e97\u8217\u3068\u30a2\u30a4\u30c6\u30e0\u30ec\u30d9\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3064\u3044\u3066\u3001\u7fcc\u6708\u306e\u58f2\u4e0a\u3092\u4e88\u6e2c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u6570\u306f\u6570\u5343\u306b\u3082\u53ca\u3076\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3082\u30461\u3064\u306e\u512a\u308c\u305f\u6a5f\u80fd\u306f\u3001\u5178\u578b\u7684\u306a**sklearn**\u306e\u69cb\u6587\u306b\u5f93\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002\n\nProphet\u30e1\u30bd\u30c3\u30c9\u306e\u6838\u3068\u306a\u308b\u306e\u306f\u30014\u3064\u306e\u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u306a\u308b\u52a0\u6cd5\u56de\u5e30\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\n* \u30d4\u30fc\u30b9\u30ef\u30a4\u30ba\u30fb\u30ea\u30cb\u30a2\u307e\u305f\u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u6210\u9577\u66f2\u7dda\u306e\u30c8\u30ec\u30f3\u30c9\u3002Prophet\u306f\u3001\u30c7\u30fc\u30bf\u304b\u3089\u30c1\u30a7\u30f3\u30b8\u30dd\u30a4\u30f3\u30c8\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u30c8\u30ec\u30f3\u30c9\u306e\u5909\u5316\u3092\u81ea\u52d5\u7684\u306b\u691c\u51fa\u3057\u307e\u3059\u3002\n* \u30d5\u30fc\u30ea\u30a8\u7d1a\u6570\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u5316\u3055\u308c\u305f\u5e74\u9593\u306e\u5b63\u7bc0\u6210\u5206\n* \u30c0\u30df\u30fc\u5909\u6570\u3092\u4f7f\u3063\u305f\u9031\u5358\u4f4d\u306e\u5b63\u7bc0\u6210\u5206\n* \u30e6\u30fc\u30b6\u30fc\u304c\u63d0\u4f9b\u3057\u305f\u91cd\u8981\u306a\u795d\u65e5\u306e\u30ea\u30b9\u30c8\n\n**prophet\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308b\u305f\u3081\u306e\u30ea\u30bd\u30fc\u30b9:**\n* https:\/\/www.youtube.com\/watch?v=95-HMzxsghY\n* https:\/\/facebook.github.io\/prophet\/docs\/quick_start.html#python-api\n* https:\/\/research.fb.com\/prophet-forecasting-at-scale\/\n* https:\/\/blog.exploratory.io\/is-prophet-better-than-arima-for-forecasting-time-series-fa9ae08a5851","bc7f53ef":"\u51c4\u3044\u3067\u3059\u306d\u3002\u30d7\u30ed\u30d5\u30a7\u30c3\u30c8\u304b\u3089\u306e\u30c8\u30ec\u30f3\u30c9\u3084\u5b63\u7bc0\u611f\u306f\u3001\u4ee5\u524d\u306b\u4f1d\u7d71\u7684\u306a\u65b9\u6cd5\u3067\u884c\u3063\u305f\u3082\u306e\u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n## UCM:\n\nUnobserved Components Model\u306e\u7565\u3067\u3059\u3002\u3053\u3053\u3067\u306e\u76f4\u611f\u306f\u3001prophet\u306e\u305d\u308c\u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u6642\u7cfb\u5217\u3092\u30c8\u30ec\u30f3\u30c9\u3001\u5b63\u7bc0\u3001\u30b5\u30a4\u30af\u30eb\u3068\u3044\u3063\u305f\u69cb\u6210\u8981\u7d20\u306b\u5206\u89e3\u3057\u3001\u305d\u308c\u3089\u3092\u56de\u5e30\u3055\u305b\u3001\u69cb\u6210\u8981\u7d20\u306e\u6b21\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u4e88\u6e2c\u3057\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u307e\u3059\u3002\n\n\u6b8b\u5ff5\u306a\u304c\u3089\u3001Python\u3067\u3053\u306e\u30e2\u30c7\u30eb\u3092\u5b9f\u884c\u3067\u304d\u308b\u826f\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\/\u30b3\u30fc\u30c9\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f :( \n\nUCM\u306eR\u30d0\u30fc\u30b8\u30e7\u30f3: https:\/\/bicorner.com\/2015\/12\/28\/unobserved-component-models-in-r\/\n\n# \u968e\u5c64\u578b\u6642\u7cfb\u5217:\n\nThe [Forecasting: principles and practice](https:\/\/www.otexts.org\/fpp\/9\/4) , \u306f\u3001Rob J Hyndman\u6c0f\u306b\u3088\u308b\u4e88\u6e2c\u306e\u305f\u3081\u306e\u7a76\u6975\u306e\u53c2\u8003\u66f8\u3067\u3059\u3002\n\u5f7c\u306f\u3001\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305f\u3001\u3042\u308b\u3044\u306f\u968e\u5c64\u7684\u306a\u4e88\u6e2c\u3092\u6271\u3046\u305f\u3081\u306e\u57fa\u672c\u3092\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30b7\u30ca\u30ea\u30aa\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nHyndman\u306f\u3053\u306e\u968e\u5c64\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u63a8\u5b9a\u3059\u308b\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002\u76f4\u611f\u7684\u306b\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u8a00\u8449\u3092\u7c21\u7565\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n### \u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u30a2\u30d7\u30ed\u30fc\u30c1:\n* \u4efb\u610f\u306e\u65b9\u6cd5\u3067\u30d9\u30fc\u30b9\u30ec\u30d9\u30eb\u306e\u30b7\u30ea\u30fc\u30ba\u3092\u3059\u3079\u3066\u4e88\u6e2c\u3057\u3001\u305d\u308c\u3092\u30c8\u30c3\u30d7\u306b\u96c6\u7d04\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n* \u5229\u70b9: \u5358\u7d14\u3067\u3042\u308b\u3053\u3068\u3001\u96c6\u8a08\u306b\u3088\u3063\u3066\u60c5\u5831\u304c\u5931\u308f\u308c\u306a\u3044\u3053\u3068\u3002\n* \u4e0d\u5229\u306a\u70b9: \u4e0b\u4f4d\u30ec\u30d9\u30eb\u306f\u30ce\u30a4\u30ba\u304c\u591a\u3044\n\n### \u30c8\u30c3\u30d7\u30c0\u30a6\u30f3\u30a2\u30d7\u30ed\u30fc\u30c1:\n* \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3092\u6700\u521d\u306b\u4e88\u6e2c\u3059\u308b\u3002(\u4f8b\uff1a\u7dcf\u58f2\u4e0a\u9ad8\u3092\u6700\u521d\u306b\u4e88\u6e2c\u3059\u308b)\n* \u6b21\u306b\u3001\u30d9\u30fc\u30b9\u30ec\u30d9\u30eb\u306e\u4e88\u6e2c\u306b\u4e0e\u3048\u308b\u5fc5\u8981\u306e\u3042\u308b\u7dcf\u58f2\u4e0a\u9ad8\u306e\u5272\u5408\u3092\u793a\u3059**\u91cd\u307f**\u3092\u8a08\u7b97\u3057\u307e\u3059\uff08\u4f8b\uff1a\u7dcf\u58f2\u4e0a\u9ad8\u306b\u5bfe\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u58f2\u4e0a\u306e\u8ca2\u732e\u5ea6\uff09\u3002\n* \u300c\u30a6\u30a7\u30a4\u30c8\u300d\u3092\u7b97\u51fa\u3059\u308b\u65b9\u6cd5\u306f\u3055\u307e\u3056\u307e\u3067\u3059\u3002\n    * **\u904e\u53bb\u306e\u5e73\u5747\u6bd4\u7387** - \u904e\u53bb\u6570\u30f6\u6708\u9593\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u58f2\u4e0a\u8ca2\u732e\u5ea6\u306e\u5358\u7d14\u5e73\u5747\u5024\n    * **\u904e\u53bb\u306e\u5e73\u5747\u5024\u306b\u5360\u3081\u308b\u5272\u5408** - Weight\u306f\u3001\u4e0b\u4f4d\u30b7\u30ea\u30fc\u30ba\u306e\u5e73\u5747\u5024\u3068\u5168\u30b7\u30ea\u30fc\u30ba\u306e\u5e73\u5747\u5024\u306e\u6bd4\u7387\u3067\u3059\u3002\n    * **\u4e88\u60f3\u3055\u308c\u308b\u5272\u5408** - \u904e\u53bb\u306e\u5272\u5408\u306e\u5909\u5316\u304b\u3089\u5c06\u6765\u306e\u5272\u5408\u3092\u4e88\u6e2c\u3059\u308b\n* \u3053\u308c\u3089\u306e\u30a6\u30a7\u30a4\u30c8\u3092\u4f7f\u3063\u3066\u3001\u30d9\u30fc\u30b9\u3068\u306a\u308b\u4e88\u6e2c\u5024\u3084\u305d\u306e\u4ed6\u306e\u30ec\u30d9\u30eb\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\n### \u30df\u30c9\u30eb\u30a2\u30a6\u30c8:\n* \u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u3068\u30c8\u30c3\u30d7\u30c0\u30a6\u30f3\u306e\u4e21\u65b9\u3092\u4f75\u7528\u3059\u308b\u3002\n* \u4f8b\uff1a\u5e97\u8217-\u30a2\u30a4\u30c6\u30e0\u30ec\u30d9\u30eb\u306e\u4e88\u6e2c\u3092\u884c\u3046\u554f\u984c\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n    * \u4e2d\u9593\u30ec\u30d9\u30eb\uff08\u5e97\u8217\uff09\u3092\u53d6\u308a\u3001\u5e97\u8217\u306e\u4e88\u6e2c\u3092\u898b\u3064\u3051\u308b\u3002\n    * \u30dc\u30c8\u30e0\u30ba\u30a2\u30c3\u30d7\u3067\u5168\u4f53\u306e\u58f2\u4e0a\u9ad8\u3092\u6c42\u3081\u308b\u3002\n    * \u6bd4\u4f8b\u3092\u4f7f\u3063\u3066\u5e97\u8217\u306e\u58f2\u4e0a\u3092\u5206\u89e3\u3057\u3001\u30c8\u30c3\u30d7\u30c0\u30a6\u30f3\u30fb\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u30a2\u30a4\u30c6\u30e0\u30ec\u30d9\u30eb\u306e\u58f2\u4e0a\u3092\u6c42\u3081\u308b\u3002\n    \n### \u6700\u9069\u306a\u7d44\u307f\u5408\u308f\u305b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1:\n* \u3059\u3079\u3066\u306e\u5c64\u3092\u72ec\u7acb\u3057\u3066\u4e88\u6e2c\u3059\u308b\n* \u3059\u3079\u3066\u306e\u5c64\u304c\u72ec\u7acb\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u968e\u5c64\u9593\u306e\u6574\u5408\u6027\u304c\u53d6\u308c\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n    * \u4f8b\uff1a\u30a2\u30a4\u30c6\u30e0\u304c\u72ec\u7acb\u3057\u3066\u4e88\u6e2c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5e97\u8217\u3067\u8ca9\u58f2\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u5408\u8a08\u306f\u3001\u5e97\u8217\u306e\u4e88\u6e2c\u8ca9\u58f2\u984d\u3068\u306f\u4e00\u81f4\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30d2\u30f3\u30c9\u30de\u30f3\u306f\u300c\u96c6\u7d04\u7684\u306a\u4e00\u8cab\u6027\u300d\u3068\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n* \u4e88\u6e2c\u3092\u968e\u5c64\u3068\u6574\u5408\u3055\u305b\u308b\u305f\u3081\u306e\u30a2\u30c9\u30db\u30c3\u30af\u306a\u8abf\u6574\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u8a08\u7b97\u3068\u8abf\u6574\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\n### \u7406\u8ad6\u306f\u3082\u3046\u3044\u3044\u3002\u4e88\u6e2c\u3092\u59cb\u3081\u307e\u3057\u3087\u3046\uff01\n\u4eca\u56de\u306e\u554f\u984c\u3067\u306f\u3001\u30a2\u30a4\u30c6\u30e0\u6570\u304c22170\u3001\u30b9\u30c8\u30a2\u6570\u304c60\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u4e88\u6e2c\u3059\u3079\u304d\u6642\u7cfb\u5217\uff08\u30a2\u30a4\u30c6\u30e0\u3068\u30b9\u30c8\u30a2\u306e\u7d44\u307f\u5408\u308f\u305b\uff09\u306f\u3001**\u7d04100\u4e07\u500b**\u3082\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u305d\u308c\u3089\u3092\u4e00\u3064\u4e00\u3064\u8a2d\u5b9a\u3059\u308b\u306e\u306f\u307b\u3068\u3093\u3069\u4e0d\u53ef\u80fd\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u305d\u308c\u3092\u4ee3\u884c\u3057\u3066\u304f\u308c\u308bProphet\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u30dc\u30c8\u30e0\u30ba\u30a2\u30c3\u30d7\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u3053\u3067\u306f\u4ed6\u306b\u3082\u8003\u616e\u3059\u3079\u304d\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n* \u3059\u3079\u3066\u306e\u5e97\u8217\u304c\u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u8ca9\u58f2\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\n* \u65b0\u5546\u54c1\u304c\u51fa\u305f\u3089\u3069\u3046\u3059\u308b\uff1f\n* \u88fd\u54c1\u304c\u68da\u304b\u3089\u53d6\u308a\u9664\u304b\u308c\u305f\u5834\u5408\u306f\uff1f","ae416686":"~10\u56de\u306e\u4e88\u6e2c\u3067\uff5e16\u79d2\u3002100\u4e07\u56de\u306e\u4e88\u6e2c\u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u308c\u3067\u306f\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3002\n\n# \u30df\u30c9\u30eb\u30a2\u30a6\u30c8:\n\u5e97\u8217\u30ec\u30d9\u30eb\u3067\u4e88\u6e2c\u3057\u3066\u307f\u307e\u3057\u3087\u3046","3f85149f":"## AR(2) process -- has ACF tailing out and PACF cutting off at lag=2","80ceeb93":"## \u811a\u6ce8:\n\n\u79c1\u306f\u7d71\u8a08\u5b66\u3092\u5c02\u653b\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u91cd\u8981\u306a\u6280\u8853\u304c\u629c\u3051\u3066\u3044\u305f\u308a\u3001\u5185\u5bb9\u306b\u9593\u9055\u3044\u304c\u3042\u3063\u305f\u308a\u3057\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6642\u7cfb\u5217\u306b\u95a2\u3059\u308b\u5225\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u3053\u3053\u306b\u8ffd\u52a0\u3059\u308b\u4e88\u5b9a\u3067\u3001\u6700\u8fd1\u306e\u6642\u7cfb\u5217\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\uff08Favorita\u3001Recruit\u306a\u3069\uff09\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u3053\u306e\u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u9069\u5fdc\u3055\u305b\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30e1\u30f3\u30c8\u3084\u30a2\u30c3\u30d7\u30f4\u30a9\u30fc\u30c8\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002) ","3f3ab45c":"## AR(1) process -- has ACF tailing out and PACF cutting off at lag=1","2b273fc7":"### \u5909\u63db\u5f8c\u3001DF\u691c\u5b9a\u306ep\u5024\u306f5%\u4ee5\u5185\u306b\u53ce\u307e\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u7cfb\u5217\u306e\u5b9a\u5e38\u6027\u3092\u4eee\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u5148\u307b\u3069\u5b9a\u7fa9\u3057\u305f\u9006\u5909\u63db\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3001\u7c21\u5358\u306b\u5143\u306e\u30b7\u30ea\u30fc\u30ba\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u65e9\u901f\u3001\u4e88\u6e2c\u3092\u884c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# AR, MA, ARMA:\nTL: \u30e2\u30c7\u30eb\u306eDR\u7248:\n\nMA - \u7cfb\u5217\u306e\u6b21\u306e\u5024\u306f\u3001\u524d\u306en\u500b\u306e\u5024\u306e\u5e73\u5747\u306e\u95a2\u6570\nAR - \u6b21\u306e\u5024\u306e\u8aa4\u5dee(\u5e73\u5747\u5024\u306e\u5dee)\u306f\u3001\u524d\u306en\u500b\u306e\u5024\u306e\u8aa4\u5dee\u306e\u95a2\u6570\nARMA - \u4e21\u8005\u306e\u6df7\u5408\n\n\u3067\u306f\u3001\u6642\u7cfb\u5217\u304cAR\u30d7\u30ed\u30bb\u30b9\u306a\u306e\u304bMA\u30d7\u30ed\u30bb\u30b9\u306a\u306e\u304b\u3092\u8abf\u3079\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u65e9\u901f\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff01"}}