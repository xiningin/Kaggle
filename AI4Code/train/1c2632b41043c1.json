{"cell_type":{"e96ea515":"code","c025ccc0":"code","ffe1a977":"code","a16389f0":"code","8095e336":"code","7a92c7b8":"code","a6a14925":"code","36119ec7":"code","eef1b856":"code","a18af23f":"code","cde1e463":"code","c954388a":"code","d367cb63":"code","4d657634":"code","e73e6081":"code","14420c86":"code","0954b9b5":"code","ccca64ee":"code","0ca1dcd8":"code","99892218":"code","26f89ad2":"code","4176918b":"code","cf67475b":"code","c19a1774":"code","7c05de67":"code","20bbd645":"code","0adbb7f2":"code","7c4ed5e6":"code","246cb840":"code","3ad18b6c":"code","83835320":"code","93b7a2aa":"code","18df039b":"code","4c37dc84":"code","50d7a834":"code","55584ad6":"code","aaa36907":"code","bbd18cf9":"code","f339157c":"code","47486ed5":"code","3d0bf574":"code","a42945b7":"code","b4256d97":"code","acbc77ed":"code","05d221f8":"code","0b68642f":"code","987ea0d3":"code","dab82df2":"code","f090cb5e":"code","b9e8acf5":"markdown","b944872f":"markdown","652b94da":"markdown","e0ff6930":"markdown","e941387f":"markdown","3666936c":"markdown","d39eee90":"markdown","9c114914":"markdown","5e4421ff":"markdown","cd2ce266":"markdown","4d7176ea":"markdown","dbd64531":"markdown","163ed505":"markdown"},"source":{"e96ea515":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c025ccc0":"#Read in the data\ndf = pd.read_csv(\"..\/input\/API_EN.ATM.CO2E.PC_DS2_en_csv_v2_10576797.csv\")","ffe1a977":"meta_data= pd.read_csv('..\/input\/Metadata_Country_API_EN.ATM.CO2E.PC_DS2_en_csv_v2_10576797.csv')","a16389f0":"df.shape","8095e336":"meta_data.info()","7a92c7b8":"#Look at the first few rows\ndf.head()","a6a14925":"#Look at the column names\ndf.columns","36119ec7":"#How many unique values does Inidcator code have?\ndf['Unnamed: 63'].tail()","eef1b856":"df.info()","a18af23f":"#Drop unnecessary columns\ndf_dropped =df.drop(['Indicator Name','Indicator Code', 'Unnamed: 63'], axis = 1)","cde1e463":" #Rename the required columns\n    df_dropped.rename(columns={'Country Name':'country_name','Country Code':'country_code'}, inplace = True)    ","c954388a":"meta_data.rename(columns={'Country Code': 'country_code','IncomeGroup':'incomegroup','SpecialNotes':'specialnotes',\n                           'TableName':'tablename'}, inplace = True)","d367cb63":"df_dropped.shape","4d657634":"#Drop the unwanted column Unnamed5 which has all nan values\nmeta_data.drop('Unnamed: 5', axis = 1, inplace = True)","e73e6081":"meta_data.columns","14420c86":"meta_data.shape","0954b9b5":"#Check if some country code from the main data  is not in the metadata \ndf_dropped[~df_dropped['country_code'].isin(meta_data['country_code'])]","ccca64ee":"#Remove the above row\ndf_dropped = df_dropped.drop(df_dropped.index[108])","0ca1dcd8":"df_dropped.shape","99892218":"#Now merge both the datas\nmerged_byincome= pd.merge(df_dropped, meta_data, on ='country_code', how ='inner')","26f89ad2":"#Check \nmerged_byincome.shape","4176918b":"merged_byincome.head()","cf67475b":"merged_byincome.info()","c19a1774":"merged_byincome.columns","7c05de67":"# Reshape data\n byincome_melted= pd.melt(merged_byincome, id_vars=['country_name','country_code', 'Region', 'incomegroup','specialnotes',\n                                             'tablename'], var_name= 'year', value_name= 'co2_emissions')\n","20bbd645":"byincome_melted.shape","0adbb7f2":"#Year column are float, change the data type to date to int\nbyincome_melted['year']= byincome_melted['year'].astype('int')","7c4ed5e6":"#Check for duplicates\nbyincome_melted.duplicated().sum()","246cb840":"#Check the new reshaped dataframe : SEE some null values\nbyincome_melted.info()","3ad18b6c":"#Check for missing values\nbyincome_melted.isnull().sum()","83835320":"byincome_melted.head()","93b7a2aa":"byincome_melted.describe()","18df039b":"# DRop the data with null values \n\n   byincome_melted.dropna(inplace = True)","4c37dc84":"byincome_melted.shape","50d7a834":"byincome_melted.head()","55584ad6":"byincome_melted.describe()","aaa36907":"#We see one negative value for the co2 emission which is not correct as per the information provided\n#Check\nbyincome_melted.loc[byincome_melted['co2_emissions'] <0]","bbd18cf9":"byincome_melted.loc[byincome_melted['co2_emissions'] < 0 , 'co2_emissions']= 0","f339157c":"#Verify any row does not exist with vale less than zero\nbyincome_melted.loc[byincome_melted['co2_emissions'] <0]","47486ed5":"byincome_melted.head()","3d0bf574":"#Let us first look at the CO2 emission distribution \n\nbyincome_melted.describe()","a42945b7":"#Export the dataframe to a csv file \nbyincome_melted.to_csv('global_warming.csv', index= False, header =True)","b4256d97":"binsize = 5\nbins= np.arange(0, byincome_melted['co2_emissions'].max() + 5 , binsize)\nplt.figure(figsize=[8,5])\nplt.hist(data= byincome_melted, x= 'co2_emissions', bins = bins)\nplt.show()","acbc77ed":"#Let us look at the number of regions by their counts\nbyincome_melted['Region'].value_counts()","05d221f8":"base_color = sns.color_palette()[0]","0b68642f":"fig,ax = plt.subplots(nrows = 2, figsize= [10,10])\nsns.countplot(data = byincome_melted, y= 'Region',  color = base_color, ax= ax[0]);\nsns.countplot(data=byincome_melted, y ='incomegroup', color =base_color, ax= ax[1]);","987ea0d3":"byincome_melted.reset_index(inplace= True, drop = True)","dab82df2":"byincome_melted.head()","f090cb5e":"columns = ['Region', 'incomegroup']\nfig, ax = plt.subplots(ncols= 1, nrows = 2, figsize = [18,15])\n\nfor col in range(len(columns)):\n    var= columns[col]\n    sns.boxplot(data=byincome_melted, x= var, y= 'co2_emissions', ax= ax[col], color = base_color);","b9e8acf5":"NOW the data is cleaned.","b944872f":"Now let us visually look at the counts of Region and income groups.","652b94da":"Above, we see that Sub-saharn Africa region is the highest in count in this dataset. And High income countries are are most frequent here.","e0ff6930":"#### Cleaning","e941387f":"Questions I have of this data\n* How does the distribution of Co2 emission look like?\n* Have Co2 emissions increased over time\n* How does co2 emission for low income countries compare to high income countries?\n* How do the co2 emission differ between the regions?","3666936c":"Above, we see that among the regions, North America has the highest median value of the CO2 emissions than the other regions. Middle East and North Africa have a greater bunch of outliers and show high values nearing 100 metric tons per capita. The lowest number of emissions are shown by South Asia.\n\nIn the second boxplot, it is seen that the high income countries have higher emissions than the others. The overall CO2 emissions show increasing trend as the income level rises for a country.","d39eee90":"Need to add the second data file, the 'Metadata.csv' for more information on the income level of the countries\naccording to the information provided in the original abstract by Author: Boryana Aleksova \nAs per the documentation, the co2 is measured in metric tons per capita.","9c114914":"## Dataset Overview \nThis data set is about the global warming co2 emissions by various countries in the time period  between 1960 to 2014. The data has information about low income and high income countries and countries are  categorized by regions. The data is sourced from this kernel : Who is responsible for the global warming? by Author: Boryana Aleksova. This gives more information about the Kyoto protocol to which few countries have committed to control their CO2 emissions. \n","5e4421ff":"Need to convert the year from float to integer datatype and then melt the data frame to get the correct structure \nfor tidyness so that the co2 values are as one observation  for each year.","cd2ce266":" ## Exploratory analysis\n  Univariate analysis","4d7176ea":" ## Bivariate Relationships\n Further exploratory and explanatory I have done in Tableau. Below is the link:\n https:\/\/public.tableau.com\/profile\/anasudame#!\/vizhome\/GlobalWarming-Dash\/Dashboard1","dbd64531":"Above we see that the distribution for co2 emissions is skewed to the right because of the varied range of values; the minimum being zero and the maximum being 100.","163ed505":"### Preliminary data assessment"}}