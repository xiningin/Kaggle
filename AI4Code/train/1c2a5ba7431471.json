{"cell_type":{"c9649ea9":"code","6226cc21":"code","f4c7a038":"code","81d88a15":"code","6d026a79":"code","9fe703cf":"code","c62627cd":"code","0b566e71":"code","63dce552":"code","cd4fba33":"code","4abe305c":"code","e6cc384f":"code","a5f4b881":"code","429113ad":"code","47798954":"code","8d4c8fd6":"code","e9a63256":"code","90a914de":"code","346a5ecb":"code","bf731273":"code","37a41048":"code","145ee574":"code","7f1aa515":"code","5b50a645":"code","9252c3f1":"code","208917ab":"code","b1075eb2":"code","2da096dd":"code","d1022302":"markdown","36c96e89":"markdown","ac59183b":"markdown","9a0fbe2b":"markdown"},"source":{"c9649ea9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n### Graphic libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns ","6226cc21":"df_train =pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/train.csv\")","f4c7a038":"df_train.head()","81d88a15":"df_train.info()","6d026a79":"df_train.isna().sum()","9fe703cf":"df_train.describe()","c62627cd":"df_test=pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/test.csv\")","0b566e71":"df_test.head()","63dce552":"df_test.isnull().sum()\n","cd4fba33":"df_train.shape","4abe305c":"df_train[\"target\"].hist(bins=40, edgecolor='b', linewidth=1.0,\n              xlabelsize=8, ylabelsize=8, grid=False, figsize=(6,2), color='red')    \nplt.tight_layout(rect=(0, 0, 1.2, 1.2))   \nplt.suptitle('Target Plot', x=0.65, y=1.25, fontsize=14); ","e6cc384f":"sns.boxplot('target', data = df_train)","a5f4b881":"sns.set_style(\"white\")\nsns.set_color_codes(palette='deep')\nf, ax = plt.subplots(figsize=(8, 7))\n#Check the new distribution \nsns.distplot(df_train['target'], color=\"b\");\nax.xaxis.grid(False)\nax.set(ylabel=\"Frequency\")\nax.set(xlabel=\"Target\")\nax.set(title=\"Target distribution\")\nsns.despine(trim=True, left=True)\nplt.show()","429113ad":"#data = pd.concat([_train['target'], train['OverallQual']], axis=1)\ncorrelation_train=df_train.corr()\nsns.set(font_scale=2)\nplt.figure(figsize = (50,35))\nax = sns.heatmap(correlation_train, annot=True,annot_kws={\"size\": 25},fmt='.1f',cmap='PiYG', linewidths=.5)","47798954":"#plotting correlations\nnum_feat=df_train.columns[df_train.dtypes!=object]\nnum_feat=num_feat[1:-1] \nlabels = []\nvalues = []\nfor col in num_feat:\n    labels.append(col)\n    values.append(np.corrcoef(df_train[col].values, df_train.target.values)[0,1])\n    \nind = np.arange(len(labels))\nwidth = 0.9\nfig, ax = plt.subplots(figsize=(12,40))\nrects = ax.barh(ind, np.array(values), color='red')\nax.set_yticks(ind+((width)\/2.))\nax.set_yticklabels(labels, rotation='horizontal')\nax.set_xlabel(\"Correlation coefficient\")\nax.set_title(\"Correlation Coefficients w.r.t TArget\");","8d4c8fd6":"df_train.columns","e9a63256":"x = df_train.iloc[:, 1:15].values  \nprint(x) \ny = df_train.iloc[:, -1].values ","90a914de":"# check lightgbm version\nimport lightgbm\nfrom lightgbm import LGBMRegressor\n","346a5ecb":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(x\n                                                    , y, test_size=0.10, random_state=0)","bf731273":"LGB = LGBMRegressor(max_depth=6, learning_rate=0.15, colsample_bytree=0.8, n_estimators=600,reg_alpha=0.001,reg_lambda=0.000001,n_jobs=2,min_child_weight=5)\nLGB.fit(X_train,y_train)","37a41048":"y_pred = LGB.predict(X_test)","145ee574":"from sklearn import metrics\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","7f1aa515":"from sklearn import metrics\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","5b50a645":"preds=LGB.predict(df_test.iloc[:,1:].values)","9252c3f1":"sub=pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv\")","208917ab":"sub","b1075eb2":"sub.target = preds","2da096dd":"sub.to_csv(\"submission.csv\", index=False)","d1022302":"Data is clean with continues target variable. let's make split into 70:30 train and validation data. and drop id column. ","36c96e89":"Now let's check test data.","ac59183b":"## EDA\n\n","9a0fbe2b":"Correlations"}}