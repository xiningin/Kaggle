{"cell_type":{"aade5f71":"code","afad520b":"code","8c432415":"code","10a0a83f":"code","6d4d48b2":"code","3d09ea0c":"code","9833ad92":"code","6aa20ada":"code","b308e64b":"code","6339212c":"code","2dd17418":"code","a30a6fdb":"code","877ac78b":"code","45b1056a":"code","c1dc21d4":"code","becf6f9e":"code","67ec9e19":"code","10c5d5ea":"code","2edd1fe5":"code","b94f63e6":"code","f561ffc5":"code","6db463f8":"code","ae202722":"code","3acd6279":"code","003c9abb":"code","72629298":"code","e0c3c0f5":"code","7abe7d73":"code","2b7ba76c":"code","c4f3241a":"code","a61b6256":"code","20bbdaf0":"code","ee6dc817":"code","1ee3802e":"code","111d1afc":"code","818fa3a7":"code","95ff1510":"code","7681d105":"code","a4f60677":"code","00d3d3bb":"code","578c5366":"code","2d293b00":"code","93bf5599":"code","0365f64d":"code","3212b7be":"code","ba695a8e":"code","ea89184e":"code","97339039":"code","413b71d6":"code","6ddbba3e":"code","3713dd9d":"code","70625e41":"code","3d7567dd":"code","db018e7d":"code","8570ad47":"code","cd28841b":"code","4eaf4d73":"code","332f9114":"code","7746cb95":"code","799c358e":"code","c9ab0fbf":"code","99ad21a0":"code","dd8e6eb9":"code","f8b1c019":"code","61a4d1c2":"code","09d7b5fb":"code","c482a83d":"code","a61df722":"code","d3bb8d4f":"code","c1a20335":"code","978d6067":"code","60f351d5":"code","6c4c8bb8":"code","d45d2764":"code","c8605bef":"code","00567bb7":"code","3b15442d":"code","d1dd023f":"code","11d89aa8":"code","75118e58":"code","5129c9ee":"code","c20b53cc":"code","9aa8c367":"markdown","8ae70222":"markdown","97578614":"markdown","a16b7ae9":"markdown","73e4b70c":"markdown","2d79a0f1":"markdown","7a6c8cc1":"markdown","8449279f":"markdown","a101d633":"markdown","5619c3c7":"markdown","a777455e":"markdown","4569e3c2":"markdown","d8418a0d":"markdown","366a4d30":"markdown","ce13148b":"markdown","02100b9c":"markdown","291c9778":"markdown","780dac4f":"markdown","1ace2214":"markdown","e0455f66":"markdown","c5f04df1":"markdown","390379d9":"markdown","c6a9ae0c":"markdown","f9baf2ff":"markdown","2bf57ab5":"markdown","c33831a3":"markdown","c63352c7":"markdown","9db6a07c":"markdown","6bd5108b":"markdown","79d2ef05":"markdown","d02991b0":"markdown","ced4fded":"markdown","2b0b2bec":"markdown","d4181b44":"markdown","0527cc22":"markdown","b4b645b5":"markdown","dba3f80b":"markdown","15e3ba87":"markdown","975116fe":"markdown","636265be":"markdown","a0baae9c":"markdown","721401e4":"markdown","b5085b4d":"markdown","55a04d5a":"markdown","d2eeb49a":"markdown","3624653c":"markdown","b6c5512d":"markdown","716f5472":"markdown","7ece784c":"markdown","aa933b4d":"markdown","afd9a2f0":"markdown","a168e085":"markdown","20c37f5c":"markdown","9863c1df":"markdown","7fed5d64":"markdown","caf466de":"markdown","9346c810":"markdown","b6ce43bf":"markdown","7d73681c":"markdown","2274125b":"markdown","13110d21":"markdown","acbd13ff":"markdown","9b6b3fc0":"markdown","5740495a":"markdown","52b6271e":"markdown","d808c93e":"markdown","60bc9051":"markdown","34f5ffca":"markdown","6d818452":"markdown","1211905b":"markdown","f6637ebc":"markdown"},"source":{"aade5f71":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","afad520b":"df = pd.read_csv('..\/input\/automobile-dataset\/Automobile_data.csv')\ndf.head()","8c432415":"df.describe().round(2)","10a0a83f":"df.info()","6d4d48b2":"df['normalized-losses'].value_counts()","3d09ea0c":"df = df.replace('?', np.nan)\ndf.isna().sum()","9833ad92":"df.info()","6aa20ada":"df['normalized-losses'].astype(str).astype(float)","b308e64b":"for col in df.select_dtypes(include=\"object\"):\n    try:\n        df[col] = df[col].astype(str).astype(float)\n    except:\n        pass","6339212c":"df.info()","2dd17418":"df.select_dtypes(include = 'object').head()","a30a6fdb":"df[['num-of-doors']].value_counts()","877ac78b":"df[['num-of-cylinders']].value_counts()","45b1056a":"df['num-of-doors'] = df['num-of-doors'].replace({'four':4, 'two':2})\ndf['num-of-doors'].value_counts()","c1dc21d4":"df['num-of-cylinders'].replace({'four':4,'six':6,'five':5,'eight':8,'two':2,'three':3,'twelve':12}, inplace = True)\ndf['num-of-cylinders'].value_counts()","becf6f9e":"df.describe().round(2).T","67ec9e19":"plt.figure(figsize = (15,15))\nsns.heatmap(df.corr(),annot = True);","10c5d5ea":"sns.countplot(data=df, x='body-style', hue='num-of-doors')","2edd1fe5":"df[df['num-of-doors'].isna()]","b94f63e6":"df['num-of-doors'].fillna(4, inplace = True)","f561ffc5":"df[df['stroke'].isna()]","6db463f8":"plt.figure(figsize = (14,6))\nplt.subplot(1,2,1)\nsns.regplot(data=df, x='engine-size',y='bore', order = 3)\nplt.title('Bore vs Engine-size')\nplt.subplot(1,2,2)\nsns.regplot(data=df, x='engine-size',y='stroke', order = 2)\nplt.title('Stroke vs Engine-size');","ae202722":"df['bore'].fillna(3, inplace = True)\ndf['stroke'].fillna(3, inplace = True)","3acd6279":"df[df['horsepower'].isna()]","003c9abb":"df[['horsepower']].describe().round(1)","72629298":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.regplot(data=df, x='horsepower',y='engine-size')\nplt.subplot(1,2,2)\nsns.regplot(data=df, x='horsepower',y='price');","e0c3c0f5":"df[df['engine-size'].between(130,134)].sort_values(['engine-size'],ascending = True)","7abe7d73":"df[df['price'].between(9000,10000)].sort_values(['price'],ascending = True)","2b7ba76c":"df[df['price'].between(9000,10000)]['horsepower'].mode()","c4f3241a":"df['horsepower'].fillna(116, inplace = True)","a61b6256":"for col in df:\n    if df[col].isna().sum()>0: print(col,':', df[col].isna().sum())","20bbdaf0":"df[df['price'].isna()]","ee6dc817":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.regplot(data=df, x='price',y='engine-size')\nplt.subplot(1,2,2)\nsns.regplot(data=df, x='price',y='horsepower');","1ee3802e":"plt.figure(figsize = (16,4))\nsns.boxplot(data=df, x='make', y='price')\nplt.xticks(rotation = 45);","111d1afc":"df_3 = df[df['make'].isin(['audi','isuzu','porsche'])]\nsns.boxplot(data=df_3, x=\"make\", y=\"price\")","818fa3a7":"# Lets look at the price\/horsepower variation with respect to the make\n\nsns.lmplot(data=df_3,\n           x='price',\n           y='horsepower',\n           hue='make',\n           col_wrap = 4,\n           col='make',\n           height = 4, \n           sharex = False,\n           sharey = False)\nplt.ylim(ymin=0);","95ff1510":"df[df['price'].isna()][['make','horsepower','price']]","7681d105":"df.loc[df['make']=='audi'][['price']].fillna(25000, inplace = True)\ndf[df['make']=='isuzu'][['price']].fillna(7000, inplace = True)\ndf[df['make']=='porsche'][['price']].fillna(37500, inplace = True)","a4f60677":"df['price'] = df['price'].fillna(pd.Series(np.where(df['make'] == 'audi', 25000, \n                                                    np.where(df['make']=='isuzu', 7000,\n                                                            np.where(df['make']=='porsche',37500, df['price'].mean())))))\n","00d3d3bb":"df[df['price'].isna()][['make','horsepower','price']]","578c5366":"for col in df:\n    if df[col].isna().sum()>0: print(col,'\\t', df[col].isna().sum())","2d293b00":"df[df['peak-rpm'].isna()]","93bf5599":"df[df['horsepower'].between(115,117)]","0365f64d":"plt.figure(figsize = (20,5))\nplt.subplot(1,2,1)\nsns.regplot(data=df, x='peak-rpm',y='stroke')\nplt.subplot(1,2,2)\nsns.regplot(data=df, x='peak-rpm',y='compression-ratio');\n","3212b7be":"plt.figure(figsize = (20,5))\nsns.countplot(data=df, x='peak-rpm')\nplt.xticks(rotation = 45);","ba695a8e":"df['peak-rpm'].fillna(4500, inplace = True)","ea89184e":"for col in df:\n    if df[col].isna().sum()>0: print(col,'\\t', df[col].isna().sum())","97339039":"plt.figure(figsize=(20,5))\nsns.countplot(data=df, x='normalized-losses');","413b71d6":"df['normalized-losses'].plot(kind = 'box')","6ddbba3e":"df['normalized-losses'].plot(kind = 'hist')","3713dd9d":"df[df['normalized-losses'].isna()]","70625e41":"df.groupby(by = 'make', axis = 0).mean().round(1)","3d7567dd":"plt.figure(figsize = (20,5))\nsns.boxplot(data=df, x='make', y='normalized-losses');","db018e7d":"df['normalized-losses']= df.groupby(df.make).transform(lambda x: x.fillna(x.mean()))\ndf[df['normalized-losses'].isna()]","8570ad47":"for col in df:\n    if df[col].isna().sum()>0: print(col, df[col].isna().sum())","cd28841b":"plt.figure(figsize = (15,15))\nsns.heatmap(df.corr(), annot= True);","4eaf4d73":"from statsmodels.stats.outliers_influence import variance_inflation_factor as vif \n\n# the independent variables set \nX = df.select_dtypes(include = [\"float64\",\"int64\"])\n  \n# VIF dataframe \nvif_data = pd.DataFrame() \nvif_data[\"feature\"] = X.columns \n  \n# calculating VIF for each feature \nvif_data[\"VIF\"] = [vif(X.values, i) \n                          for i in range(len(X.columns))] \n  \nvif_data[vif_data[\"VIF\"]<100000].round(2)","332f9114":"volume = df['length']*df['width']*df['height']","7746cb95":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = df.select_dtypes(include = [\"float64\",\"int64\"])\nX = X.drop(columns = \"symboling\")\nstd_trs = sc.fit_transform(X)","799c358e":"std_trs","c9ab0fbf":"std_trs.shape","99ad21a0":"from sklearn.decomposition import PCA\npca1 = PCA().fit(std_trs)\nplt.plot(np.cumsum(pca1.explained_variance_ratio_))\nplt.xlabel('Number of components')\nplt.ylabel('Cumulative explained variance')\nplt.grid(True, linestyle = \"--\")","dd8e6eb9":"pca = PCA(n_components = 8)\nx_pca = pca.fit_transform(std_trs)","f8b1c019":"df_pca = pd.DataFrame(x_pca)\ndf_pca","61a4d1c2":"plt.scatter(x_pca[:,0],x_pca[:,1], cmap = 'RdYlBu')\nplt.xlabel('First PC')\nplt.ylabel('Second PC')","09d7b5fb":"sns.scatterplot(x = x_pca[:,0],y = x_pca[:,1], hue = X['num-of-doors'])","c482a83d":"df.shape","a61df722":"df_obj = df.select_dtypes(include = \"object\")","d3bb8d4f":"new_df = pd.concat([df_obj, df_pca,  df['symboling']], axis = 1 )\nnew_df.head()","c1a20335":"new_df = pd.get_dummies(new_df, drop_first = True)\nnew_df.shape","978d6067":"X = new_df.drop('symboling', axis = 1)\ny = new_df.symboling","60f351d5":"from sklearn.ensemble import ExtraTreesRegressor\nmodel = ExtraTreesRegressor()\nmodel.fit(X,y)","6c4c8bb8":"print(model.feature_importances_)","d45d2764":"feature_plot = pd.Series(model.feature_importances_,index = X.columns)\nfeature_plot","c8605bef":"feature_plot.nsmallest(10).plot(kind = 'barh')\nplt.xticks(rotation = 45);","00567bb7":"y.value_counts()","3b15442d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, random_state=0)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","d1dd023f":"def algo(model):\n    model.fit(X_train, y_train)\n    model_pred = model.predict(X_test)\n    print(\"The mean squared error using {} is {} \".format(model, (mean_squared_error(model_pred, y_test).round(3))))\n    print(\"Covariance % is \", model.score(X_train, y_train).round(3))","11d89aa8":"from sklearn.metrics import mean_squared_error\nimport math","75118e58":"from sklearn.linear_model import LinearRegression\nalgo(LinearRegression())","5129c9ee":"from sklearn.linear_model import Lasso\nalgo(Lasso())","c20b53cc":"from sklearn.linear_model import LassoLars\nalgo(LassoLars())","9aa8c367":"### Imputing by Visualizing","8ae70222":"From above we can estimate,    \n- for an Audi with horsepower 160, the price can be around 25000  \n- for an isuzu with horsepower 70, the price can be around 7000  \n- for a  porsche with horsepower 288, the price can be around 375000","97578614":"### Calculating VIF","a16b7ae9":"In this notebook, we have followed the following process\n1. Data Cleaning\n    *      Finding null values\n    *      Replacing those null values\n    *      Plotting graphs to better understand relationship of variables with null values\n      \n   \n2. Exploratory Data Analysis\n    *      Heatmap of collinearity\n    *      Other Plots\n      \n    \n3. Data Preprocessing\n    *      Checking for multicollinearity\n    *      Tabulating VIF to tackle multicollinearity\n    *      Using PCA for reducing numerical variables\n    *      Performing one hot encoding on categorical variables\n      \n    \n4. Machine Learning Modelling\n    *      Train Test Split\n    *      Linear Regression Automated \n    *      Lasso Method\n    *      Lasso Lars    ","73e4b70c":"### Linear Regression","2d79a0f1":"We will impute the values accordingly.","7a6c8cc1":"#### 2. Plotting Cumulative Explained Variance","8449279f":"### Imputing by mode","a101d633":"Considering the above data analysis, I will impute the value '116' into the horsepower missing data.","5619c3c7":"In order to proceed with machine learning, our first step is to check for multicollinearity if any.","a777455e":"#### 1. Standard Scaling the numerical variables","4569e3c2":"We can use linear regression algorithms to arrive at the above outcome","d8418a0d":"Content Overview\n   1. Data Cleaning\n   2. Visualization\n   3. Model Building","366a4d30":"Procedure for PCA\n1. Scale the numerical variables using standard scalar\n2. Plot explained variance ratio to decide optimum n value\n3. Apply PCA to those scaled variables\n4. Plot scatterplots to see the data distribution","ce13148b":"Contrary to our assumption, horespower seems to be constant despite change in peak rpm.  \nHowever, there seems to some relation of peak-rpm with compression ratio and stroke.  \nLets visually check our assumption.","02100b9c":"#### Imputing Price column","291c9778":"# Remaining\nReduce categorical variables  \nMachine Learning Modelling","780dac4f":"#### Thrid, we impute horsepower column","1ace2214":"Clearly, we need to convert the dtypes into appropriate types.","e0455f66":"#### First, we impute the num-of-doors column.  \nWe know logically that number of doors depends on body-style of car.  \nThat is, convertible and hardtop have two doors, while rest have 4.  \nLet's check our understanding using graphs.","c5f04df1":"As we see, there is '?' symbol within the column values.  \nWe will need to replace it with null value at the moment.  \nWhy with null value ?  \nBecause only then we can convert it to numerical type variable,  \nand perform statistical operations on it like calculating mean, mode, median etc.  \nUsing those values, we can impute the missing data.","390379d9":"## Machine Learning Model\n####                    to predict Symboling","c6a9ae0c":"  Currently, we don't seem to have enough understanding of which variable to remove using the above graphs.  \n  Hence, we will keep all the variables in and work on it after looking at the results.","f9baf2ff":"## Anova Test","2bf57ab5":"From the above graph, we realize our understanding was partially correct.  \n(This is exactly why we should always check our assumptions using visual representations.)  ","c33831a3":"### Understanding the data","c63352c7":"Now that we have imputed all the missing values, and in the process have done EDA, we can move on to modelling.","9db6a07c":"If you liked the notebook or found any worthwhile takeaway, please do leave a like.  \nThank you!","6bd5108b":"'stroke' and 'bore' are dimensions of the cylinder in an automobile engine.  \nThat is, we may see some correlation between these variables.  \nLets check our understanding using graphical representation.","79d2ef05":"From the above output, we see that there are several variables which show multi-collinearity in this data.  ","d02991b0":"It looks like we have converted them all.  \nBut lets check it once to confirm.","ced4fded":"The above charts certainly give us a better picture of the data distribution of price.","2b0b2bec":"Clearly, bore is linear to engine-size.  \nWe will impute the missing values of bore accordingly.  \nWhile stroke seems to be concentrated at one point.  ","d4181b44":"Now lets see which other columns have missing values that we need to impute.","0527cc22":"##### 2-March-21","b4b645b5":"Instead of manually converting each mistyped variable to float, lets automate it using a loop.","dba3f80b":"To do this, first I need to see which variable has a relation with normalized-values.  \nFor this, we will plot several graphs and analyze to understand the distribution better.","15e3ba87":"## Automobile Dataset Analysis","975116fe":"# Machine Learning Modelling","636265be":"There are three ways to handle multi-collinearity\n1. Calculate VIF and remove manually the variables whose VIF is greater than 10\n2. Combine multiple variables in a meaningful manner\n3. Use PCA to automatically reduce the dimension","a0baae9c":"The autmobile dataset comprises of multiple characetistics of several automobiles.  \nIn this notebook, we will draw meaningful inferences that will give us an insight into the autombile industry.","721401e4":"### Principal Component Analysis","b5085b4d":"Lets check the normalized-losses object variable a bit more closely to confirm our suspicion.","55a04d5a":"### Combining the variables","d2eeb49a":"Immediately we notice that many variables are same for both the missing value rows.  \nLets see more observations around the data 116 horsepower.  ","3624653c":"By above code, we can merge three variables into one.  \nSimilarly, we can use domain knowledge are merge other variables such as num-of-cylinders and engine-size, or bore and stroke, etc.","b6c5512d":"From above we can estimate,    \n- for an Audi with horsepower 160, the price can be around 25000  \n- for an isuzu with horsepower 70, the price can be around 7000  \n- for a  porsche with horsepower 288, the price can be around 375000","716f5472":"From the above table, we see two variables that can be converted to numeric type.  \nLet's check these variables first.","7ece784c":"From above code, we have replaced '?' with null value in the entire dataframe.  \nNext we check the dtypes of the variables.","aa933b4d":"## Handling Null Values","afd9a2f0":"### Feature Importance ","a168e085":"#### Fifth, we impute Peak RPM","20c37f5c":"Lets impute the missing values accordingly","9863c1df":"### Handling Multicollinearity","7fed5d64":"#### 3. Applying Principal Component Analysis","caf466de":"We see from above two charts that price seems to have a more accurate relation with horsepower than does engine-size.  \nLogically too this makes sense. Two cars of different make may have same engine-size but will have different price.","9346c810":"#### To replace missing values of horsepower\nWe must first check which variable does it more correspond to.","b6ce43bf":"As the body-style of these cars is sedan, we can impute num-of-doors as 4, as seen from above graphical representation.","7d73681c":"### Train Test Split","2274125b":"Clearly, these can be replaced with their respective numeric values.  \nLet's replace them accordingly.","13110d21":"Lets look at the missing data of price column again, but this time with just horespower and make.","acbd13ff":"#### Imputing null values for normalized-losses","9b6b3fc0":"Lets impute the missing values accordingly","5740495a":"First, we will find the correlation of each variable combination.  \nThis will enable us to decide which variable to compare with when handling null values.","52b6271e":"In our missing data for stroke and bore, the engine size was at 70 and 80 units.  \nEyeballing those values in these graphs, it seems that  \nFor engine size = 70, bore = 3.0, stroke = 3.0  \nFor engine size = 80, bore = 3.0, stroke = 3.0","d808c93e":"#### Second, we will impute the stroke and bore columns","60bc9051":"From above, it seems there are no null values.   \nHowever, from df.head() we have seen there are values with '?' symbol amidst them.    \nWe will need to impute those values.","34f5ffca":"From the count column of the above table, we can see which columns have missing values.  \nWe will impute them one by one.","6d818452":"We also notice that several features which are supposed to be numeric (such as normalized-losses,  price, horsepower, etc) are object type.  \nThis most likely means they too have '?' symbol within its values.","1211905b":"To test the dependency of categorical variable    \nAnova Testing (cat with num)  \nChi square test (cat with cat)","f6637ebc":"We know from our understanding that price of a car depends on two major factors.  \nFirst, the brand (make). Second, the performance (engine).  \nLets check our assumption through visual representation."}}