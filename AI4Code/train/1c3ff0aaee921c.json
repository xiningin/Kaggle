{"cell_type":{"a3a41127":"code","2ce0f8d2":"code","f2f41ebf":"code","0d77cb38":"code","11a5a314":"code","e93e6839":"code","bbffbe45":"code","1774ec22":"code","f03df844":"code","25868dcb":"code","ffc8ca09":"code","165eeb0f":"code","10e664e4":"code","b0766eb3":"code","2b8af846":"code","6b491b89":"code","eb2f7ff3":"code","a836303f":"code","03a0a0b6":"code","988298ab":"code","186da72d":"code","1bc5509d":"code","074356f8":"markdown","94a7f2e3":"markdown","780f2dc7":"markdown","67909178":"markdown","1a7a3474":"markdown","81de85c3":"markdown","7288b97d":"markdown","e6d8637d":"markdown","15bde781":"markdown","d41a8a91":"markdown","206515bf":"markdown","60b39f16":"markdown","7b7e7f18":"markdown","74d2d5bf":"markdown","fae5218f":"markdown","348defe9":"markdown"},"source":{"a3a41127":"# Imports and constants\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\n\nplt.rcParams['figure.figsize'] = [20, 5]\n\nrace_groups = {\n    'AFRICAN AMERICAN': 'AFRICAN AMERICAN',\n    'ASIAN INDIAN': 'ASIAN\/PACIFIC ISLANDER',\n    'CAMBODIAN': 'ASIAN\/PACIFIC ISLANDER',\n    'CAUCASIAN': 'CAUCASIAN',\n    'CHINESE': 'ASIAN\/PACIFIC ISLANDER',\n    'FILIPINO': 'ASIAN\/PACIFIC ISLANDER',\n    'GUAMANIAN': 'ASIAN\/PACIFIC ISLANDER',\n    'HAWAIIAN': 'ASIAN\/PACIFIC ISLANDER',\n    'HISPANIC\/LATIN\/MEXICAN': 'HISPANIC\/LATIN\/MEXICAN',\n    'JAPANESE': 'ASIAN\/PACIFIC ISLANDER',\n    'KOREAN': 'ASIAN\/PACIFIC ISLANDER',\n    'LAOTIAN': 'ASIAN\/PACIFIC ISLANDER',\n    'OTHER': 'OTHER',\n    'OTHER ASIAN': 'ASIAN\/PACIFIC ISLANDER',\n    'PACIFIC ISLANDER': 'ASIAN\/PACIFIC ISLANDER',\n    'SAMOAN': 'ASIAN\/PACIFIC ISLANDER',\n    'UNKNOWN': 'UNKNOWN',\n    'VIETNAMESE': 'ASIAN\/PACIFIC ISLANDER'\n}","2ce0f8d2":"# Arrest table and derived fields\n\narrests = (\n    pd\n    .read_csv('..\/input\/sjpd-incidents-arrests-charges\/AB Data_010115-093020_v2.csv',\n              dtype={\n                  'ARREST BOOKING NO_PK': 'str',\n                  'GO NO': 'str',\n                  'PIN': 'category',\n                  'AGE': 'Int64',\n                  'SEX': 'category',\n                  'RACE': 'category',\n                  'ETHNICITY': 'category',\n                  'ARREST TIME': 'str',\n                  'LOCATION OF ARREST_BLOCK': 'category',\n                  'ARREST REASON': 'category',\n                  'ARREST TYPE': 'category',\n                  'BEAT': 'category',\n                  'SUMMARY OF FACTS': 'category',\n                  'ARREST OFFICER': 'category',\n                  'officer_name': 'category',\n                  'CURRENT STATUS': 'category',\n                  'YOUNG OFFENDER': 'category'\n              },\n              parse_dates=['ARREST DATE']\n             )\n    .drop(columns='GO NO')\n    .drop_duplicates()\n)\n\narrests['DISTRICT'] = arrests.BEAT.str[0].astype('category')\narrests['RACE_GROUP'] = arrests.apply(lambda x: race_groups.get(x.RACE), axis=1)\narrests['ETHNIC_GROUP'] = arrests.apply(lambda x: race_groups.get(x.ETHNICITY), axis=1)\narrests['OFFICER_KNOWN'] = np.where(arrests['ARREST OFFICER'].isnull(), False, True)\n\narrests.describe(include='all', datetime_is_numeric=True)","f2f41ebf":"# Suspects listed in the arrests table (Person ID Number)\npeople = (\n    arrests\n    .groupby('PIN')\n    .agg(\n        RACE=('RACE', lambda x: pd.Series.mode(x)[0]), # mode may return multiple values!\n        RACE_GROUP=('RACE_GROUP', lambda x: pd.Series.mode(x).get(0)),\n        AGE=('AGE', pd.Series.max)\n    )\n)","0d77cb38":"charges = pd.read_csv('..\/input\/sjpd-incidents-arrests-charges\/Charge Data_010115-093020_v2.csv',\n                      dtype={\n                          'GO NO': 'category',\n                          'PIN': 'category',\n                          'STATUTE': 'category',\n                          'CLASS': 'category',\n                          'CHARGE DESCRIPTION': 'category',\n                          'OFFENSE TIME': 'category',\n                          'BOND AMT': 'float',\n                          'WARRANT NUMBER': 'category',\n                          'SEVERITY': 'category'\n                      },\n                      parse_dates=['OFFENSE DATE'],\n                     )\ncharges.describe(include='all', datetime_is_numeric=True)","11a5a314":"(\n    arrests\n    .groupby('OFFICER_KNOWN')\n    .agg(\n        Count=('ARREST BOOKING NO_PK','count'),\n        TopSummary=('SUMMARY OF FACTS', pd.Series.mode)\n    )\n    .sort_values(by='Count', ascending=False)\n)","e93e6839":"(\n    charges\n     .rename(columns={'BOND AMT': 'BOND'})\n     .groupby(\"CHARGE DESCRIPTION\")\n     .agg({'BOND': ['min', 'mean', 'median', 'max', 'std', 'count']})\n     ['BOND']\n     .query(\"(count > 15) & (std > 0)\")\n     .sort_values(by='std', ascending=False)\n)","bbffbe45":"deviating_bond = (\n    charges\n    .rename(columns={'BOND AMT': 'BOND'})\n    .groupby(\"CHARGE DESCRIPTION\")\n    .agg(Count=('BOND', 'count'), Std=('BOND', 'std'))\n    .query(\"(Count > 15) & (Std > 0)\")\n    .index\n)","1774ec22":"arrests['CURRENT STATUS'].value_counts(normalize=True)","f03df844":"def percent_arrested(series):\n    outcomes = series.value_counts(normalize=True)\n    return outcomes['CHARGED\/BOOKED'] if 'CHARGED\/BOOKED' in outcomes else 0\n\n(\n    arrests\n    .groupby('RACE_GROUP')\n    .agg(\n        ArrestRate=('CURRENT STATUS', percent_arrested),\n        SampleSize=('CURRENT STATUS', 'count')\n    )\n    .sort_values(by=['SampleSize','ArrestRate'], ascending=False)\n)","25868dcb":"(\n    arrests\n    .groupby(['SEX'])\n    .agg(\n        ArrestRate=('CURRENT STATUS', percent_arrested),\n        SampleSize=('CURRENT STATUS', 'count')\n    )\n)","ffc8ca09":"stops_by_age = (\n    arrests\n    .groupby(\n        pd.cut(arrests.AGE, [0,5,12,15,18,25,35,50,65,80,100])\n    )\n    .agg(\n        ArrestRate=('CURRENT STATUS', percent_arrested),\n        StopCount=('CURRENT STATUS', 'count'),\n        TopStopReason=('SUMMARY OF FACTS', pd.Series.mode)\n    )\n)\nstops_by_age","165eeb0f":"booked = arrests.query(\"`CURRENT STATUS` == 'CHARGED\/BOOKED'\")['AGE']\ncited = arrests.query(\"`CURRENT STATUS` == 'CITED'\")['AGE']","10e664e4":"# Stops by District and Race\nimport functools\n\ndef find_token_rate(s, token):\n    return round(s.value_counts(normalize=True).get(token, 0), 2)\n\n#race_beats = (\n#    arrests\n#    .groupby('DISTRICT')\n#    .agg(\n#        TotalStops=('DISTRICT', 'count'),\n#        HispanicStops=('RACE_GROUP', functools.partial(find_token_rate, token='HISPANIC\/LATIN\/MEXICAN')),\n#        BlackStops=('RACE_GROUP', functools.partial(find_token_rate, token='AFRICAN AMERICAN')),\n#        WhiteStops=('RACE_GROUP', functools.partial(find_token_rate, token='CAUCASIAN')),\n#        AsianStops=('RACE_GROUP', functools.partial(find_token_rate, token='ASIAN\/PACIFIC ISLANDER')),\n#    )\n#    .query('TotalStops > 2')\n#    .sort_values(by=['TotalStops'], ascending=False)\n#)\n#race_beats\n#race_beats.sort_values(by='TotalStops').drop(columns='TotalStops').plot(kind='bar', stacked=True)\n","b0766eb3":"(\n    arrests\n    .groupby('SUMMARY OF FACTS')\n    .agg(\n        count=('SUMMARY OF FACTS', 'count')\n    )\n    .sort_values(by='count', ascending=False)\n    [0:20]\n)","2b8af846":"(\n    arrests\n    .query('AGE < 18', engine='python')\n    .groupby('SUMMARY OF FACTS')\n    .agg(\n        count=('SUMMARY OF FACTS', 'count')\n    )\n    .sort_values(by='count', ascending=False)\n    [0:20]\n)","6b491b89":"(\n    arrests\n    .groupby(['RACE_GROUP','SEX'])\n    .agg(\n        TotalStops=('ARREST BOOKING NO_PK', 'count'),\n        TopStop=('SUMMARY OF FACTS', pd.Series.mode)\n    )\n    .query('TotalStops > 15')\n)","eb2f7ff3":"child_vandalism = (\n    charges\n    .query(\"`CHARGE DESCRIPTION` == 'VANDALISM'\")\n    .merge(people, on='PIN', how='left')\n    .assign(Warrant=lambda x: ~pd.isnull(x['WARRRANT NUMBER']))\n    .query('(AGE < 18) & (Warrant == False)', engine='python')\n)\n(\n    child_vandalism\n    .groupby('RACE_GROUP')\n    .agg({\n        'BOND AMT': ['min', 'median', 'mean', 'max'],\n        'RACE_GROUP': 'count',\n    })\n)\n#sns.kdeplot(data=child_vandalism, x='BOND AMT')","a836303f":"(\n    arrests\n    .groupby(['RACE_GROUP'])#, 'SEX'])\n    .agg(\n        TotalStops=('ARREST BOOKING NO_PK', 'count'),\n        PeopleStopped=('PIN', 'nunique'),\n    )\n    .assign(AvgStopsPerPerson=lambda x: x['TotalStops'] \/ x['PeopleStopped'])\n    #.sort_values(by=['AvgStopsPerPerson','TotalStops'], ascending=False)\n    .plot(kind='bar', y='AvgStopsPerPerson')\n)","03a0a0b6":"sns.heatmap(pd.crosstab(arrests['AGE'], [arrests['RACE_GROUP'], arrests['SEX']]))","988298ab":"sns.heatmap(pd.crosstab(arrests['AGE'], arrests['CURRENT STATUS']))","186da72d":"sns.heatmap(pd.crosstab(arrests['DISTRICT'], arrests['RACE_GROUP']))","1bc5509d":"repeated_stops_by_race = (\n    arrests\n    .groupby('PIN')\n    .agg(\n        RaceGroup=('RACE_GROUP', pd.Series.mode),\n        RaceCount=('RACE_GROUP', pd.Series.nunique),\n        TotalStops=('ARREST BOOKING NO_PK', 'count')\n    )\n    .query('RaceCount == 1')\n)\n\nsns.heatmap(pd.crosstab(repeated_stops_by_race.RaceGroup, repeated_stops_by_race.TotalStops), norm=LogNorm())","074356f8":"## ...overall?","94a7f2e3":"# Most common reasons for stops","780f2dc7":"# Average stops per person based on race and sex","67909178":"## ...based on their age?","1a7a3474":"# Load tables and create basic derived fields and tables","81de85c3":"# Bail for children charged with vandalism (without a warrant)","7288b97d":"## By race and sex","e6d8637d":"# How consistent is bond for similar charges?","15bde781":"# How likely are people to be arrested (instead of cited)... ","d41a8a91":"# Repeated stops by race","206515bf":"## Overall","60b39f16":"# What sorts of arrests are missing the 'officer' field?","7b7e7f18":"### About `ARREST BOOKING NO_PK` and `GO NO`\n\nEach `ARREST BOOKING` number represents a single arrest\/citation event. Each may have multiple `GO NO` associated with it, but should have at most one unique value for every other column (e.g. only a single person (`PIN`) will be listed for a given arrest\/citation event)","74d2d5bf":"## For children","fae5218f":"## ...based on their sex?","348defe9":"## ...based on their race?"}}