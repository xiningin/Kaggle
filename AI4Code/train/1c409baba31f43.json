{"cell_type":{"4aca6a67":"code","67a4fcf3":"code","b584b80e":"code","5585395c":"code","2aad9fea":"code","3b9a925b":"code","8ab65edf":"code","5cfd747f":"markdown"},"source":{"4aca6a67":"import numpy as np\nimport pandas as pd\nimport json","67a4fcf3":"#\u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0444\u0430\u0439\u043b:\ndata = pd.read_csv(\"..\/input\/ga-customer-revenue-prediction\/train.csv\", converters={'device': json.loads, 'geoNetwork': json.loads, 'totals': json.loads, 'trafficSource': json.loads}).sample(frac=0.2)\n\n#\u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0432 json'e:\ndevice = pd.DataFrame(data['device'].tolist()).filter(items=['browser', 'isMobile', 'operatingSystem', 'deviceCategory'])\ngeoNetwork = pd.DataFrame(data['geoNetwork'].tolist()).filter(items=['continent', 'subContinent', 'country', 'region', 'metro', 'city', 'networkDomain'])\ntotals = pd.DataFrame(data['totals'].tolist())\ntrafficSource = pd.DataFrame(data['trafficSource'].tolist()).filter(items=['campaign', 'source', 'medium', 'keyword', 'isTrueDirect', 'referralPath', 'adContent'])\n\n#\u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b:\ndata = data.drop(labels = ['device', 'geoNetwork', 'totals', 'trafficSource', 'sessionId', 'visitId', 'fullVisitorId'], axis='columns')\n\n#\u0421\u043a\u043b\u0435\u0438\u043c \u0432\u0441\u0451 \u0432 \u043e\u0434\u0438\u043d \u0444\u0440\u0435\u0439\u043c:\ndata = data.join(device).join(geoNetwork).join(totals).join(trafficSource)","b584b80e":"#\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445:\nint_cols = ['visits', 'hits', 'pageviews', 'bounces', 'newVisits', 'transactionRevenue']\nbool_cols = ['isTrueDirect']\nstring_cols = ['channelGrouping', 'deviceCategory', 'region', 'metro', 'city']\nfor col in int_cols:\n    data[col].fillna(0, inplace=True)\nfor col in bool_cols:\n    data[col].fillna(False, inplace=True)\nfor col in string_cols:\n    data[col].fillna('(not set)')\n    data.replace({ col: { 'not available in demo dataset': '(not set)'}})\n    \ndata['socialEngagementType'] = data['socialEngagementType'] == 'Engaged'","5585395c":"from sklearn.ensemble import GradientBoostingRegressor, RandomForestRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split, KFold, cross_val_score\n\ny = data['transactionRevenue']\nx = data.filter(items = ['visits', 'hits', 'pageviews', 'bounces', 'newVisits'])\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)","2aad9fea":"models = [GradientBoostingRegressor(), RandomForestRegressor(), LinearRegression()]","3b9a925b":"Result = pd.DataFrame()\ntmp = pd.DataFrame()\n\n#\u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f:\nfor model in models:\n    model_name = str(model)\n    scores = np.array([])\n    for i in range(10):\n        fold = KFold(n_splits=5, shuffle=True)\n        score = cross_val_score(estimator=model, X=x, y=y, cv=fold, scoring='r2')\n        scores = np.append(scores, score)\n    tmp['\u041e\u0446\u0435\u043d\u043a\u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430'] = pd.Series(scores)\n    tmp['\u041c\u043e\u0434\u0435\u043b\u044c'] = model_name\n    Result = Result.append(tmp)","8ab65edf":"Result","5cfd747f":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3.\n\n\u041e\u0431\u0443\u0447\u0438\u0442\u044c \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0437\u0430\u0434\u0430\u0447\u0435 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438. \u0412 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u0434\u0430\u0447\u0430 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u044b\u0440\u0443\u0447\u043a\u0438 \u0441 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430 Gstore. \u0414\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u0442\u0443\u0442 https:\/\/www.kaggle.com\/c\/ga-customer-revenue-prediction\/data (\u0444\u0430\u0439\u043b train.csv). \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e 10% \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 (!) \u0441\u0442\u0440\u043e\u043a \u0434\u0430\u043d\u043d\u044b\u0445. \n\n\u0417\u0430\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b:\n- \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 (\u043d\u0435 \u043c\u0435\u043d\u0435\u0435 10, \u0432 \u0442.\u0447. \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 5 \u0440\u0430\u0441\u0447\u0451\u0442\u043d\u044b\u0445, \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0449\u0438\u0445 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u044f\u0432\u043d\u043e), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043c\u043e\u0447\u044c \u0432 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438. \u041f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u043f\u043e\u044f\u0441\u043d\u0438\u0442\u044c, \u043f\u043e\u0447\u0435\u043c\u0443 \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u0430\u0436\u0435\u043d. \n- \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438, \u0432\u043a\u043b\u044e\u0447\u0430\u044f GBM \u043d\u0430 \u0434\u0435\u0440\u0435\u044c\u0432\u044f\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u0439, \u043b\u0435\u0441 \u0440\u0435\u0448\u0435\u043d\u0438\u0439, SVM, \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f. \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u2013 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u043e\u0442 \u0432\u044b\u0440\u0443\u0447\u043a\u0438 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \n- \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \n- \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e 5-fold \u043a\u0440\u043e\u0441\u0441 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \n- \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e 20 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0439 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u044e \u043e\u0446\u0435\u043d\u043a\u0438 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \n- \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u0440\u0438\u043a \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e boxplot\u043e\u0432, \u0442\u0430\u043a\u0436\u0435 \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0435 \u0440\u0430\u043d\u0435\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e."}}