{"cell_type":{"c71e33cf":"code","294d22ca":"code","215683f6":"code","85939846":"code","bb56be53":"code","7808511d":"code","ac120faa":"code","04e33559":"code","1a060c22":"code","636a5512":"code","65d1999d":"code","7a836f8f":"code","6d0308de":"code","bc4725d2":"code","9a00a706":"code","8287554e":"code","622c116d":"code","11d032b5":"code","8260509d":"code","0f9df4c9":"code","dc9face2":"code","5307f33f":"code","84845015":"markdown","ff8fbd30":"markdown","72b31b95":"markdown","28a95e58":"markdown","efc669ac":"markdown","cc1fee65":"markdown","b19626b0":"markdown","4b68079b":"markdown"},"source":{"c71e33cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","294d22ca":"pip install impyute","215683f6":"import matplotlib.pyplot as plt\nimport seaborn as sb\nimport plotly.express as px\nfrom impyute.imputation.cs import mice\n%matplotlib inline","85939846":"df = pd.read_csv('..\/input\/co2-ghg-emissionsdata\/co2_emission.csv')\ndf.head()","bb56be53":"print(df.dtypes,'\\n\\n',df.isna().sum())","7808511d":"df.rename(columns = {'Annual CO\u2082 emissions (tonnes )':'Emissions'},inplace =True)\ndf.drop(columns = ['Code'],axis =1,inplace = True)\ndf.head()","ac120faa":"temp = df.groupby('Entity').sum().reset_index()","04e33559":"#exploring the data using treemap\n\nfig = px.treemap(temp,path = ['Entity'],values = 'Emissions')\nfig.show()","1a060c22":"fig = plt.figure(figsize = (15,10))\nplt.plot(df.pivot(index = 'Entity',columns = 'Year',values = 'Emissions').isna().sum())\nplt.title('Number of countries without data across the years')\n#plt.text(df.pivot(index = 'Region',columns = 'Year',values = 'Emissions').isna().sum()[1960],s='1960')","636a5512":"dfPivot = df.pivot(index = 'Entity',columns = 'Year',values = 'Emissions')\ndfPivot.loc[(dfPivot.isna().sum(axis = 1) == 0)]","65d1999d":"China = dfPivot.query(\"Entity == 'China'\").fillna(0)\nRegionDF = dfPivot.loc[(dfPivot.isna().sum(axis = 1) == 0)].append(China)","7a836f8f":"sb.set_style('whitegrid')\nRegionDF.T.plot(figsize = (20,15))","6d0308de":"CountryDF = dfPivot.loc[(dfPivot.isna().sum(axis =1) != 0)].append(dfPivot.query(\"Entity == ['China','United States','United Kingdom']\"))\nCountryDF = CountryDF.loc[:,1960:2017].T\nCountryDF","bc4725d2":"CountryDF.isna().sum().sum()","9a00a706":"imputed = mice(CountryDF.values)\nCountryDF = pd.DataFrame(imputed,columns = CountryDF.columns,index = CountryDF.index)\nCountryDF.isna().sum().sum()","8287554e":"CountryDF = CountryDF.T","622c116d":"CountryDF['CAGR'] = (CountryDF[2017]-CountryDF[1960])**(1\/57)-1\nCountryDF","11d032b5":"CountryDF['AnnualGrowthRate'] = (((CountryDF[2017]-CountryDF[1960])\/CountryDF[1960])*100)\/57\nTop10Growth = CountryDF.sort_values(by=['AnnualGrowthRate'],ascending = False)[1:10]\nTop10Growth","8260509d":"Top10 = CountryDF.sort_values(by=[2017],ascending = False)[1:10]\nTop10","0f9df4c9":"Top10.drop(columns = ['AnnualGrowthRate','CAGR']).T.plot(figsize = (18,12),title = 'Emissions over the years')","dc9face2":"Top10[2017].plot(kind = 'bar',figsize = (18,12))\nplt.title('Emissions in 2017')","5307f33f":"np.log10(Top10Growth['AnnualGrowthRate']).plot(kind = 'bar',figsize = (18,12),title = 'Emissions growth since 1960')","84845015":"As it turns out,regions of the world (including United States, United Kingdom) have data since 1751. As 'Asia and Pacific (Other)' has same footprint as that of China's, assume China also as a region and adding to the region dataframe","ff8fbd30":"> ## Creating annual growth rate column taking 1960 as baseline","72b31b95":"Checking for emission values across the time range","28a95e58":"## Data Understanding and transformation\n### Exploring data, checking the data types, looking for missing values and renaming\/ommiting variables","efc669ac":"Let's confine our exploration of emissions to top 10 countries from the latest year 2017 and with highest rate of growth rate over the years","cc1fee65":"As many countires still missing values, let's impute the data so that we can calculate growth rates of emissions","b19626b0":"As we can see,data is not available for most of the countires\/regions prior to 1960s.\nSo, lets see the dataframe which contains zero null values","4b68079b":"## Measuring overall Emissions footprint for the given Entities"}}