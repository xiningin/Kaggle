{"cell_type":{"79378a76":"code","0af0585b":"code","adabbd70":"code","e46e94dc":"code","726e50a8":"code","51bf2359":"code","f3d1442e":"code","f91216ac":"code","47ac09af":"code","1bd72727":"code","ff8a9a2e":"code","05f55e96":"code","ae12e9a6":"code","f2a1837f":"code","198f21a3":"code","67dcd5c9":"code","c8756d9e":"code","e8d05002":"code","52743f5e":"code","add1bef0":"code","355218c8":"code","eb2898fc":"code","59ec7578":"code","d2045f63":"markdown","ee39be35":"markdown","c44a1fed":"markdown","02ad3250":"markdown","95ed78c7":"markdown"},"source":{"79378a76":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom scipy import stats\nimport matplotlib.image as mpimg\nimport os\nimport plotly.express as px\nimport plotly.graph_objects as go\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ndf = pd.read_csv('\/kaggle\/input\/forbes-2021-global-500-companies-statistics\/Forbes-2021-Global-500-Companies-Statistics.csv')\ndf[['Sales $', 'Profit $', 'Assets $', 'Market Value $']] = df[['Sales $', 'Profit $', 'Assets $', 'Market Value $']] \/ 100000000000\ndf = df.rename(columns = {\n    'Sales $' : 'sales_kkk',\n    'Profit $' : 'profit_kkk',\n    'Assets $' : 'assets_kkk',\n    'Market Value $' : 'market_value_kk'})","0af0585b":"# calculations\ntop_sales = df[['Name', 'sales_kkk']] \\\n    .sort_values('sales_kkk', ascending = False) \\\n    .head(5) \\\n    .sort_values('sales_kkk', ascending = True) \\\n    .reset_index(drop = True)\n\n# vis\nfig = plt.figure(figsize  = (13, 6), facecolor='#4E5D6C')\nax = fig.add_axes([0, 0, 1, 1])\nax.barh(y = top_sales['Name'], width = top_sales['sales_kkk'], color = 'crimson')\nplt.xticks([])\nplt.yticks([])\nax.tick_params(length= 0, colors='white', grid_color='black', labelsize = 16)\nax.set_facecolor('#4E5D6C')\nfor i in range(0, 5, 1):\n    plt.text(top_sales['sales_kkk'][i], i, f\"{round(top_sales['sales_kkk'][i], 2)} kkk\", color = 'white', fontsize = 16, fontweight = 'bold')\nfor i in range(0, 5, 1):\n    plt.text(0, i, f\"{top_sales['Name'][i]}\", color = 'white', fontsize = 16, fontweight = 'bold')\nplt.title('Top 5 companies by profit', x = 0.18, y = 1, color = 'white', fontsize = 24, fontweight = 'bold')\nsns.despine(bottom = True, left = True)\nplt.title('Top 5 companies by sales', x = 0.18, y = 1, color = 'white', fontsize = 24, fontweight = 'bold')\nplt.show()","adabbd70":"top_profit = df[['Name', 'profit_kkk']] \\\n    .sort_values('profit_kkk', ascending = False) \\\n    .head(5) \\\n    .sort_values('profit_kkk', ascending = True) \\\n    .reset_index(drop = True)\n\ntop_profit['Name'] = top_profit['Name'].replace('Saudi Arabian Oil Company (Saudi Aramco)', 'SAOC')\n\n# vis\nfig = plt.figure(figsize  = (13, 6), facecolor = '#4E5D6C')\nax = fig.add_axes([0, 0, 1, 1])\nax.barh(y = top_profit['Name'], width = top_profit['profit_kkk'], color = 'crimson')\nplt.xticks([])\nplt.yticks([])\nax.tick_params(length= 0, colors='white', grid_color='black', labelsize = 16)\nax.set_facecolor('#4E5D6C')\nfor i in range(0, 5, 1):\n    plt.text(top_profit['profit_kkk'][i], i, f\"{round(top_profit['profit_kkk'][i], 2)} kkk\", color = 'white', fontsize = 16, fontweight = 'bold')\nfor i in range(0, 5, 1):\n    plt.text(0, i, f\"{top_profit['Name'][i]}\", color = 'white', fontsize = 16, fontweight = 'bold')\nplt.title('Top 5 companies by profit', x = 0.18, y = 1, color = 'white', fontsize = 24, fontweight = 'bold')\nsns.despine(bottom = True, left = True)\nplt.show()","e46e94dc":"top_assets = df[['Name', 'assets_kkk']] \\\n    .sort_values('assets_kkk', ascending = False) \\\n    .head(5) \\\n    .sort_values('assets_kkk', ascending = True) \\\n    .reset_index(drop = True)\n\n# vis\nfig = plt.figure(figsize  = (13, 6), facecolor = '#4E5D6C')\nax = fig.add_axes([0, 0, 1, 1])\nax.barh(y = top_assets['Name'], width = top_assets['assets_kkk'], color = 'crimson')\nplt.xticks([])\nplt.yticks([])\nax.tick_params(length= 0, colors='white', grid_color='black', labelsize = 16)\nax.set_facecolor('#4E5D6C')\nfor i in range(0, 5, 1):\n    plt.text(top_assets['assets_kkk'][i], i, f\"{round(top_assets['assets_kkk'][i], 2)} kkk\", color = 'white', fontsize = 16, fontweight = 'bold')\nfor i in range(0, 5, 1):\n    plt.text(0, i, f\"{top_assets['Name'][i]}\", color = 'white', fontsize = 16, fontweight = 'bold')\nplt.title('Top 5 companies by assets', x = 0.185, y = 1, color = 'white', fontsize = 24, fontweight = 'bold')\nsns.despine(bottom = True, left = True)\nplt.show()","726e50a8":"top_mv = df[['Name', 'market_value_kk']] \\\n    .sort_values('market_value_kk', ascending = False) \\\n    .head(5) \\\n    .sort_values('market_value_kk', ascending = True) \\\n    .reset_index(drop = True)\ntop_mv['Name'] = top_mv['Name'].replace('Saudi Arabian Oil Company (Saudi Aramco)', 'SAOC')\n\n# vis\nfig = plt.figure(figsize  = (13, 6), facecolor= '#4E5D6C')\nax = fig.add_axes([0, 0, 1, 1])\nax.barh(y = top_mv['Name'], width = top_mv['market_value_kk'], color = 'crimson')\nplt.xticks([])\nplt.yticks([])\nax.tick_params(length= 0, colors='white', grid_color='black', labelsize = 16)\nax.set_facecolor('#4E5D6C')\nfor i in range(0, 5, 1):\n    plt.text(top_mv['market_value_kk'][i], i, f\"{round(top_mv['market_value_kk'][i], 2)} kkk\", color = 'white', fontsize = 16, fontweight = 'bold')\nfor i in range(0, 5, 1):\n    plt.text(0, i, f\"{top_mv['Name'][i]}\", color = 'white', fontsize = 16, fontweight = 'bold')\nplt.title('Top 5 companies by market value', x = 0.235, y = 1, color = 'white', fontsize = 24, fontweight = 'bold')\nsns.despine(bottom = True, left = True)\nplt.show()","51bf2359":"# calculations\ncountries_by_sales = df \\\n    .groupby('Country', as_index = False) \\\n    .agg({'sales_kkk' : 'sum', 'Name' : 'count'}) \\\n    .sort_values('sales_kkk', ascending = False) \\\n    .reset_index(drop = True) \\\n    .rename(columns = {'sales_kkk' : 'sum_of_sales', 'Name' : 'count'}) \ncountries_by_sales['mean'] = countries_by_sales['sum_of_sales'] \/ countries_by_sales['count']\n\n# vis\nfig = px.choropleth(data_frame = countries_by_sales, \n                  locations = 'Country',\n                  locationmode = 'country names',\n                  color = 'sum_of_sales',\n                  projection = 'robinson',\n                  hover_name = 'Country',\n                  color_continuous_scale = 'reds')\nfig.update_layout(\n    title = dict(\n        text ='Sum of sales by country',\n        x = 0.19,\n        font = dict(\n            color = 'white',\n            size = 26)),\n    plot_bgcolor = '#4E5D6C',\n    paper_bgcolor = '#4E5D6C',\n    geo = dict(bgcolor = '#4E5D6C', framecolor = 'white'),\n    coloraxis_colorbar = dict(\n        tickfont = dict(\n            color = 'white'),\n        title = dict(\n                text = 'Sum of sales',\n                font = dict(\n                    color = 'white',\n                    size = 18)),\n        ticks = 'outside',\n        tickcolor = 'white')\n    )\nfig.show()","f3d1442e":"fig = plt.figure(facecolor = '#4E5D6C')\nax = fig.add_axes([0, 0, 1.2, 0.1])\nplt.text(0, 1, f'''From chart we can see that \u0441ompanies from the USA and China have the most sum of sales. \nThe percentage of sales of companies from these countries is {round(countries_by_sales.head(2)['sum_of_sales'].sum() \/ countries_by_sales['sum_of_sales'].sum() * 100, 2)}% of the total sales.\nUSA - {round(countries_by_sales.head(2)['sum_of_sales'][0] \/ countries_by_sales['sum_of_sales'].sum() * 100, 2)}%;\nChina - {round(countries_by_sales.head(2)['sum_of_sales'][1] \/ countries_by_sales['sum_of_sales'].sum() * 100, 2)}%.''', \n         color = 'white', fontsize = 13, fontweight = 'bold')\nax.set_facecolor('#4E5D6C')\nax.axis('off')\nplt.show()","f91216ac":"# calculations\nusa_sales = df[['Country', 'Name', 'sales_kkk']] \\\n    .query(\"Country == 'United States'\") \\\n    .sort_values('sales_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = usa_sales.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[usa_sales['Name'], # 1st column\n                       usa_sales['sales_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by sales in USA',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","47ac09af":"# calculations\nchina_sales = df[['Country', 'Name', 'sales_kkk']] \\\n    .query(\"Country == 'China'\") \\\n    .sort_values('sales_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = china_sales.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[china_sales['Name'], # 1st column\n                       china_sales['sales_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by sales in China',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","1bd72727":"# calculations\ncountries_by_profit = df \\\n    .groupby('Country', as_index = False) \\\n    .agg({'profit_kkk' : 'sum', 'Name' : 'count'}) \\\n    .sort_values('profit_kkk', ascending = False) \\\n    .reset_index(drop = True) \\\n    .rename(columns = {'profit_kkk' : 'sum_of_profit', 'Name' : 'count'}) \ncountries_by_profit['mean'] = countries_by_profit['sum_of_profit'] \/ countries_by_profit['count']\n\n# vis\nfig = px.choropleth(data_frame = countries_by_profit, \n                  locations = 'Country',\n                  locationmode = 'country names',\n                  color = 'sum_of_profit',\n                  projection = 'robinson',\n                  hover_name = 'Country',\n                  color_continuous_scale = 'reds')\nfig.update_layout(\n    title = dict(\n        text ='Sum of profit by country',\n        x = 0.19,\n        font = dict(\n            color = 'white',\n            size = 26)),\n    plot_bgcolor = '#4E5D6C',\n    paper_bgcolor = '#4E5D6C',\n    geo = dict(bgcolor = '#4E5D6C', framecolor = 'white'),\n    coloraxis_colorbar = dict(\n        tickfont = dict(\n            color = 'white'),\n        title = dict(\n                text = 'Sum of profit',\n                font = dict(\n                    color = 'white',\n                    size = 18)),\n        ticks = 'outside',\n        tickcolor = 'white')\n    )\nfig.show()","ff8a9a2e":"fig = plt.figure(facecolor = '#4E5D6C')\nax = fig.add_axes([0, 0, 1.2, 0.1])\nplt.text(0, 1, f'''From chart we can see that \u0441ompanies from the USA, China and Japan have the most sum of profit. \nThe percentage of sales of companies from these countries is {round(countries_by_profit.head(3)['sum_of_profit'].sum() \/ countries_by_profit['sum_of_profit'].sum() * 100, 2)}% of the total profit.\nUSA - {round(countries_by_profit.head(3)['sum_of_profit'][0] \/ countries_by_profit['sum_of_profit'].sum() * 100, 2)}%;\nChina - {round(countries_by_profit.head(3)['sum_of_profit'][1] \/ countries_by_profit['sum_of_profit'].sum() * 100, 2)}%;\nJapan - {round(countries_by_profit.head(3)['sum_of_profit'][2] \/ countries_by_profit['sum_of_profit'].sum() * 100, 2)}%.''', \n         color = 'white', fontsize = 13, fontweight = 'bold')\nax.set_facecolor('#4E5D6C')\nax.axis('off')\nplt.show()","05f55e96":"# calculations\nusa_profit = df[['Country', 'Name', 'profit_kkk']] \\\n    .query(\"Country == 'United States'\") \\\n    .sort_values('profit_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = usa_profit.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[usa_profit['Name'], # 1st column\n                       usa_profit['profit_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by profit in USA',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","ae12e9a6":"# calculations\nchi_profit = df[['Country', 'Name', 'profit_kkk']] \\\n    .query(\"Country == 'China'\") \\\n    .sort_values('profit_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = chi_profit.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[chi_profit['Name'], # 1st column\n                       chi_profit['profit_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by profit in China',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","f2a1837f":"# calculations\njap_profit = df[['Country', 'Name', 'profit_kkk']] \\\n    .query(\"Country == 'Japan'\") \\\n    .sort_values('profit_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = jap_profit.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[jap_profit['Name'], # 1st column\n                       jap_profit['profit_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by profit in Japan',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","198f21a3":"# calculations\ncountries_by_assets = df \\\n    .groupby('Country', as_index = False) \\\n    .agg({'assets_kkk' : 'sum', 'Name' : 'count'}) \\\n    .sort_values('assets_kkk', ascending = False) \\\n    .reset_index(drop = True) \\\n    .rename(columns = {'assets_kkk' : 'sum_of_assets', 'Name' : 'count'}) \ncountries_by_assets['mean'] = countries_by_assets['sum_of_assets'] \/ countries_by_assets['count']\n\n# vis\nfig = px.choropleth(data_frame = countries_by_assets, \n                  locations = 'Country',\n                  locationmode = 'country names',\n                  color = 'sum_of_assets',\n                  projection = 'robinson',\n                  hover_name = 'Country',\n                  color_continuous_scale = 'reds')\nfig.update_layout(\n    title = dict(\n        text ='Sum of assets by country',\n        x = 0.19,\n        font = dict(\n            color = 'white',\n            size = 26)),\n    plot_bgcolor = '#4E5D6C',\n    paper_bgcolor = '#4E5D6C',\n    geo = dict(bgcolor = '#4E5D6C', framecolor = 'white'),\n    coloraxis_colorbar = dict(\n        tickfont = dict(\n            color = 'white'),\n        title = dict(\n                text = 'Sum of profit',\n                font = dict(\n                    color = 'white',\n                    size = 18)),\n        ticks = 'outside',\n        tickcolor = 'white')\n    )\nfig.show()","67dcd5c9":"fig = plt.figure(facecolor = '#4E5D6C')\nax = fig.add_axes([0, 0, 1.2, 0.1])\nplt.text(0, 1, f'''From chart we can see that \u0441ompanies from the USA, China and Japan have the most sum of assets. \nThe percentage of assets of companies from these countries is {round(countries_by_assets.head(3)['sum_of_assets'].sum() \/ countries_by_assets['sum_of_assets'].sum() * 100, 2)}% of the total assets.\nUSA - {round(countries_by_assets.head(3)['sum_of_assets'][0] \/ countries_by_assets['sum_of_assets'].sum() * 100, 2)}%;\nChina - {round(countries_by_assets.head(3)['sum_of_assets'][1] \/ countries_by_assets['sum_of_assets'].sum() * 100, 2)}%;\nJapan - {round(countries_by_assets.head(3)['sum_of_assets'][2] \/ countries_by_assets['sum_of_assets'].sum() * 100, 2)}%.\nThe USA and China have almost equal sum of assets. The USA and China have almost equal amounts of assets. \nIn previous charts, the USA had a significantly larger sum compared to China.''', \n         color = 'white', fontsize = 13, fontweight = 'bold')\nax.set_facecolor('#4E5D6C')\nax.axis('off')\nplt.show()","c8756d9e":"# calculations\nusa_assets = df[['Country', 'Name', 'assets_kkk']] \\\n    .query(\"Country == 'United States'\") \\\n    .sort_values('assets_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = usa_assets.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[usa_assets['Name'], # 1st column\n                       usa_assets['assets_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by assets in USA',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","e8d05002":"# calculations\nchi_assets = df[['Country', 'Name', 'assets_kkk']] \\\n    .query(\"Country == 'China'\") \\\n    .sort_values('assets_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = chi_assets.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[chi_assets['Name'], # 1st column\n                       chi_assets['assets_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by assets in China',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","52743f5e":"# calculations\njap_assets = df[['Country', 'Name', 'assets_kkk']] \\\n    .query(\"Country == 'Japan'\") \\\n    .sort_values('assets_kkk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = jap_assets.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[jap_assets['Name'], # 1st column\n                       jap_assets['assets_kkk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 500, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by assets in Japan',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","add1bef0":"# calculations\ncountries_by_mv = df \\\n    .groupby('Country', as_index = False) \\\n    .agg({'market_value_kk' : 'sum', 'Name' : 'count'}) \\\n    .sort_values('market_value_kk', ascending = False) \\\n    .reset_index(drop = True) \\\n    .rename(columns = {'market_value_kk' : 'sum_of_mv', 'Name' : 'count'}) \ncountries_by_mv['mean'] = countries_by_mv['sum_of_mv'] \/ countries_by_mv['count']\n\n# vis\nfig = px.choropleth(data_frame = countries_by_mv, \n                  locations = 'Country',\n                  locationmode = 'country names',\n                  color = 'sum_of_mv',\n                  projection = 'robinson',\n                  hover_name = 'Country',\n                  color_continuous_scale = 'reds')\nfig.update_layout(\n    title = dict(\n        text ='Sum of market value by country',\n        x = 0.19,\n        font = dict(\n            color = 'white',\n            size = 26)),\n    plot_bgcolor = '#4E5D6C',\n    paper_bgcolor = '#4E5D6C',\n    geo = dict(bgcolor = '#4E5D6C', framecolor = 'white'),\n    coloraxis_colorbar = dict(\n        tickfont = dict(\n            color = 'white'),\n        title = dict(\n                text = 'Sum of market value',\n                font = dict(\n                    color = 'white',\n                    size = 18)),\n        ticks = 'outside',\n        tickcolor = 'white')\n    )\nfig.show()","355218c8":"fig = plt.figure(facecolor = '#4E5D6C')\nax = fig.add_axes([0, 0, 1.2, 0.1])\nplt.text(0, 1, f'''From chart we can see that \u0441ompanies only from the USA have the most sum of assets. \nThe percentage of assets of companies from these country is {round(countries_by_mv.head(1)['sum_of_mv'].sum() \/ countries_by_mv['sum_of_mv'].sum() * 100, 2)}% of the total market value.''', \n         color = 'white', fontsize = 13, fontweight = 'bold')\nax.set_facecolor('#4E5D6C')\nax.axis('off')\nplt.show()","eb2898fc":"# calculations\nusa_mv = df[['Country', 'Name', 'market_value_kk']] \\\n    .query(\"Country == 'United States'\") \\\n    .sort_values('market_value_kk', ascending = False) \\\n    .head(5) \\\n    .reset_index(drop = True) \\\n    .drop('Country', axis = 1)\n\n# vis\nfig = go.Figure(data=[go.Table(\n    header=dict(values = usa_mv.columns,\n                line_color = '#4E5D6C',\n                fill_color = 'crimson',\n                align='left',\n                font = dict(color = 'white', size = 16)),\n    cells=dict(values=[usa_mv['Name'], # 1st column\n                       usa_mv['market_value_kk']], # 2nd column\n               line_color='#4E5D6C',\n               fill_color='#4E5D6C',\n               align='left',\n               font = dict(color = 'white')))\n])\n\nfig.update_layout(width = 550, \n                  height = 350,\n                  title = dict(\n                      text ='Top companies by market value in USA',\n                      font = dict(\n                          color = 'white',\n                          size = 26)),\n                  plot_bgcolor = '#4E5D6C',\n                  paper_bgcolor = '#4E5D6C')\nfig.show()","59ec7578":"# calculations\nnumber_of_countries = df['Country'] \\\n    .value_counts() \\\n    .to_frame() \\\n    .reset_index() \\\n    .rename(columns = {'index' : 'Country', 'Country' : 'count'}) \\\n    .head(5)\nnumber_of_countries['Country'] = number_of_countries['Country'].replace('United Kingdom', 'UK')\n\n# vis\nfig = plt.figure(figsize  = (13, 6), facecolor= '#4E5D6C')\nax = fig.add_axes([0, 0, 1, 1])\nax.barh(y = number_of_countries['Country'], width = number_of_countries['count'], color = 'crimson')\nax.invert_yaxis()\nplt.xticks([])\nplt.yticks([])\nax.tick_params(length= 0, colors='white', grid_color='black', labelsize = 16)\nax.set_facecolor('#4E5D6C')\nfor i in range(0, 5, 1):\n    plt.text(number_of_countries['count'][i], i, f\"{round(number_of_countries['count'][i], 2)}\", color = 'white', fontsize = 16, fontweight = 'bold')\nfor i in range(0, 5, 1):\n    plt.text(0, i, f\"{number_of_countries['Country'][i]}\", color = 'white', fontsize = 16, fontweight = 'bold')\nplt.title('Top 5 countries by number of companies in rating', x = 0.35, y = 1, color = 'white', fontsize = 24, fontweight = 'bold')\nsns.despine(bottom = True, left = True)\nplt.show()","d2045f63":"<div style='color:white;\n           background-color:#4E5D6C;\n           '>  \n<b><h4 style='text-align:left; color: white'> This dataset about 500 companies in forbes rating. Dataset has next columns:  <\/h4><\/b>  \n<b><h4 style='text-align:left; color: white'>-Rank - place in rating<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Name - company name<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Country - company country<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>and financial indicators<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Sales<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Profit<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Assets<\/h4><\/b> \n<b><h4 style='text-align:left; color: white'>-Market value.<\/h4><\/b>  ","ee39be35":"<div style='color:white;\n           background-color:#4E5D6C;\n           '>  \n<b><h4 style='text-align:left; color: white'>And so I completed the first task, but I also want to analyze the top 5 companies of the top some countries for each parameter.<\/h4><\/b>  ","c44a1fed":"<div style='color:white;\n           background-color:#4E5D6C;\n           '>  \n<b><h4 style='text-align:left; color: white'>And so, I completed both tasks. It was an interesting data set for me. In this notebook, I decided to make an experiment with the design style. I hope you like it.<\/h4><\/b>  ","02ad3250":"<div style='color:white;\n           background-color:#4E5D6C;\n           '>  \n<b><h4 style='text-align:left; color: white'> Firstly I will do first task. The author suggests to analyze the top 5 companies by 4 parameters:<\/h4><\/b>  \n<b><h4 style='text-align:left; color: white'>-Sales;<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Profit;<\/h4><\/b>\n<b><h4 style='text-align:left; color: white'>-Assets;<\/h4><\/b> \n<b><h4 style='text-align:left; color: white'>-Market value.<\/h4><\/b>     \n<b><h4 style='text-align:left; color: white'>Let's do it.<\/h4><\/b>     ","95ed78c7":"<div style='color:white;\n           background-color:#4E5D6C;\n           '>  \n<b><h4 style='text-align:left; color: white'>In the second task author suggests to find which country (top 5 countries) have highest companies count in forbes global 500 list.<\/h4><\/b>  \n<b><h4 style='text-align:left; color: white'>Let's do it.<\/h4><\/b>  "}}