{"cell_type":{"125f75ff":"code","98776697":"code","9da85c8b":"code","51dbf162":"code","de544909":"code","053846be":"code","f8371d5d":"code","09602f82":"code","a8973af5":"code","10fe04b9":"code","22e8166c":"code","089d6d28":"code","fc591fd4":"code","2cfd1231":"code","7fd04420":"code","4f08c28f":"code","2d357cc5":"code","fd5f1656":"code","e3c03fc7":"code","8d6b28ec":"code","59890d56":"code","710abeff":"code","67d93ca5":"code","8577efec":"code","1733ce9d":"code","341b9db0":"code","10eb44b7":"code","0592b71f":"markdown","8d79d273":"markdown","0cd7b211":"markdown"},"source":{"125f75ff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nfrom collections import Counter\n%matplotlib inline\nimport os\nprint(os.listdir(\"..\/input\"))\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n","98776697":"data=pd.read_csv('..\/input\/2017.csv')\ndatax=pd.read_csv('..\/input\/2016.csv')\ndataz=pd.read_csv('..\/input\/2015.csv')\n","9da85c8b":"data.info()  #data of 2017","51dbf162":"data.corr","de544909":"#correlation\nf,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","053846be":"#The happiest 10 countries in 2017\ndata.head(10)","f8371d5d":"#The unhappiest 10 countries in 2017\ndata.tail(10)","09602f82":"data.columns","a8973af5":"recolumn = ['Country', 'HappinessRank', 'HappinessScore', 'WhiskerHigh',\n       'WhiskerLow', 'EconomyGDPperCapita', 'Family',\n       'HealthLifeExpectancy', 'Freedom', 'Generosity',\n       'TrustGovernmentCorruption', 'DystopiaResidual']\ndata.columns = recolumn","10fe04b9":"data.columns","22e8166c":"# Line Plot # relation between happiness and GPD\ndata.HappinessScore.plot(kind = 'line', color = 'g',label = 'HappinessScore',linewidth=5,alpha = 0.5, grid = True,linestyle = ':')\ndata.EconomyGDPperCapita.plot(color = 'r',label = 'GDPperCapita',linewidth=2, alpha = 0.9,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     \nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Happiness&GPD')       \nplt.show()","089d6d28":"# Scatter Plot   # relation between happiness and GPD\n# x = HapinessScore, y = EconomyGDPperCapita\ndata.plot(kind='scatter', x='HappinessScore', y='EconomyGDPperCapita',alpha = 1,color = 'red')\nplt.xlabel('HappinessScore')              # label = name of label\nplt.ylabel('EconomyGDPperCapita')\nplt.title('Happiness-GPD Scatter Plot')            # title = title of plot","fc591fd4":"# Freedom of Countries Histogram\ndata.Freedom.plot(kind = 'hist',bins = 20,figsize = (10,10))\nplt.show()","2cfd1231":"series = data['Family']        # data['Family'] = series\nprint(type(series))\ndata_frame = data[['Family']]  # data[['Family']] = data frame\nprint(type(data_frame))","7fd04420":"x = data['HappinessScore']<3     # In 2017 there are only 2 countries that have lower HappinessScore value than 154 \ndata[x]","4f08c28f":"\ndata[np.logical_and(data['EconomyGDPperCapita']<0.3, data['HappinessScore']>3.4 )]","2d357cc5":"data.describe()","fd5f1656":"data.boxplot(column='TrustGovernmentCorruption')  #visualizing outliers for TrustGovernmentCorruption","e3c03fc7":"# Melting the frame\ndata_new = data.head()    # I only take 5 rows into new data\nmelted = pd.melt(frame=data_new,id_vars = 'Country', value_vars= ['HappinessScore','EconomyGDPperCapita'])\nmelted","8d6b28ec":"melted.pivot(index = 'Country', columns = 'variable',values='value')","59890d56":"# concatenating the frames\ndata1= data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row\n\ndata1= data['HappinessScore'].head()\ndata2= data['EconomyGDPperCapita'].head()\nconc_data_col = pd.concat([data1,data2],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col","710abeff":"data.dtypes","67d93ca5":"# Plotting all data \ndata1 = data.loc[:,[\"HappinessScore\",\"EconomyGDPperCapita\"]]\ndata1.plot()\n# it is confusing","8577efec":"# subplots\ndata1.plot(subplots = True)\nplt.show()","1733ce9d":"data['Country'].unique()","341b9db0":"recolumn = ['Country', 'HappinessRank', 'HappinessScore', 'WhiskerHigh',\n       'WhiskerLow', 'EconomyGDPperCapita', 'Family',\n       'HealthLifeExpectancy', 'Freedom', 'Generosity',\n       'TrustGovernmentCorruption', 'DystopiaResidual']\ndata.columns = recolumn\n","10eb44b7":"#Bar Plot for Happiness \ncountry_list = list(data['Country'].unique())\nhappinessScore_ratio=[]\nfor i in country_list:\n    x = data[data['Country']==i]\n    happinessScore_rate = sum(x.HappinessScore)\/len(x)\n    happinessScore_ratio.append(happinessScore_rate)\nveri = pd.DataFrame({'country_list': country_list,'happinessScore_ratio':happinessScore_ratio})\nnew_index = (veri['happinessScore_ratio'].sort_values(ascending=False)).index.values\nsorted_veri = veri.reindex(new_index)\n\nplt.figure(figsize=(25,10))\nsns.barplot(x=sorted_veri['country_list'], y=sorted_veri['happinessScore_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('Countries')\nplt.ylabel('Happiness')\nplt.title('Happiness of Countries in 2017')","0592b71f":"**How much happy we are...**","8d79d273":"**There are 7 countries which have higher happiness score value than 3.4 despite they have lower GDP value than 0.3**","0cd7b211":"mean_happiness = sum(data.HappinessScore)\/len(data.HappinessScore)\ndata[\"HappinessScore_level\"] = [\"Happy\" if i > mean_happy else \"Unhappy\" for i in data.HappinessScore]\ndata.loc[:20,[\"HappinessScore_level\",\"HappinessScore\"]] \nmelted = pd.melt(frame=data,id_vars = 'Country', value_vars= ['HappinessScore_level'])\nmelted"}}