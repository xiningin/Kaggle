{"cell_type":{"e482b9fd":"code","5a1c8a2e":"code","96feeb64":"code","6ea3c86b":"code","05fdd70d":"code","37a29f12":"code","d2fb5c23":"code","abdf7c5e":"code","ddc11673":"code","b0e7df12":"code","93b09958":"code","0ea94d3f":"code","0ba574fd":"code","08b94fa7":"markdown","8aafaded":"markdown","a861005e":"markdown","b67bcfc0":"markdown","91e0f056":"markdown","416c05c3":"markdown","9f899b4e":"markdown","043d8607":"markdown","ac45ee01":"markdown","6ae01e72":"markdown","43aa7ca4":"markdown","7bcf72a0":"markdown","ebe055bd":"markdown","eb2096b7":"markdown","d713c431":"markdown","11ada585":"markdown","3cce112e":"markdown","4228a7c8":"markdown","616a041e":"markdown","a96bee90":"markdown","96a17109":"markdown","c7bca127":"markdown","ee94e2c6":"markdown","056db77c":"markdown"},"source":{"e482b9fd":"import pandas as pd\n\ndf = pd.read_csv('..\/input\/cookie_cats.csv')\ndf.head()","5a1c8a2e":"df.info()","96feeb64":"df.groupby('version').count()","6ea3c86b":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use(\"seaborn\")\nplt.figure(figsize=(5,2))\n\nsns.boxplot(y = \"sum_gamerounds\", data = df, )\n\n\n","05fdd70d":"df['sum_gamerounds'].describe()","37a29f12":"# Counting the number of players for each number of gamerounds \nplot_df = df.groupby('sum_gamerounds')['userid'].count()\nplot_df","d2fb5c23":"# Plot the distribution of players that played 0 to 100 game rounds during their first week playing the game.\n%matplotlib inline\n\nax = plot_df[:100].plot(figsize=(10,6))\nax.set_title(\"The number of players that played 0-100 game rounds during the first week\")\nax.set_ylabel(\"Number of Players\")\nax.set_xlabel('# Game rounds')","abdf7c5e":"df['retention_1'].sum() \/ df['retention_1'].count() # When using .sum(), T\/F will first be converted to 1\/0.\n\n# Equivalent to df['retention_1'].mean()\n# Mean is calculated by summing the values and dividing by the total number of values.","ddc11673":"df.groupby('version')['retention_1'].mean()","b0e7df12":"# Creating an list with bootstrapped means for each AB-group\nboot_1d = []\nfor i in range(1000):\n    boot_mean = df.sample(frac = 1,replace = True).groupby('version')['retention_1'].mean()\n    boot_1d.append(boot_mean)\n    \n# Transforming the list to a DataFrame\nboot_1d = pd.DataFrame(boot_1d)\n    \n# A Kernel Density Estimate plot of the bootstrap distributions\nboot_1d.plot(kind='density')","93b09958":"# Adding a column with the % difference between the two AB-groups\nboot_1d['diff'] = (boot_1d.gate_30 - boot_1d.gate_40)\/boot_1d.gate_40*100\n\n# Ploting the bootstrap % difference\nax = boot_1d['diff'].plot(kind='density')\nax.set_title('% difference in 1-day retention between the two AB-groups')\n\n# Calculating the probability that 1-day retention is greater when the gate is at level 30\nprint('Probability that 1-day retention is greater when the gate is at level 30:',(boot_1d['diff'] > 0).mean())","0ea94d3f":"df.groupby('version')['retention_7'].sum() \/ df.groupby('version')['retention_7'].count()","0ba574fd":"# Creating a list with bootstrapped means for each AB-group\nboot_7d = []\nfor i in range(500):\n    boot_mean = df.sample(frac=1,replace=True).groupby('version')['retention_7'].mean()\n    boot_7d.append(boot_mean)\n    \n# Transforming the list to a DataFrame\nboot_7d = pd.DataFrame(boot_7d)\n\n# Adding a column with the % difference between the two AB-groups\nboot_7d['diff'] = (boot_7d.gate_30 - boot_7d.gate_40)\/boot_7d.gate_40*100\n\n# Ploting the bootstrap % difference\nax = boot_7d['diff'].plot(kind='density')\nax.set_title('% difference in 7-day retention between the two AB-groups')\n\n# Calculating the probability that 7-day retention is greater when the gate is at level 30\nprint('Probability that 7-day retention is greater when the gate is at level 30:',(boot_7d['diff'] > 0).mean())","08b94fa7":"<p>When a player installed the game, he or she was randomly assigned to either gate_30 or gate_40. The number of players is roughly the same in the control and test group, nice!","8aafaded":"<p>As we can see, 50% of players played fewer than 16 game rounds during the first week after installation, and 75% of players played fewer than 51 rounds.\n<p>Nearly 4000 players did not even play a single round after installation. Possible reasons may include:\n<ul>\n    <li>They downloaded a number of new games at the same time and were attracted by other games.\n    <li>They opened the app but did not like the design\/interface\/music, so they quit even before playing the game.\n    <li>They have not started playing the game yet.\n    <li>......\n<\/ul>\n\n<p>Another number worth attention is that more than 14,000 players played fewer than three rounds. For these players, the reasons for leaving may include: <\/p>\n<ul>\n    <li>They did not enjoy the game. (This is probably the most common reason).\n    <li>The game turned out to be different from what they expected.\n    <li>The game was too easy and they got bored of it.\n    <li>......\n<\/ul>\n\nIt is important to understand why a large number of players quit the game at an early stage. Tactile Entertainment can try to collect player feedback, for example, through an in-app survey.","a861005e":"### 2.2 Check missing values","b67bcfc0":"**Insights:**\n<ul>\n    <li><strong>Like with 1-day retention, 7-day retention is slightly lower when the gate is at level 40<\/strong> (18.2%) than when the gate is at level 30 (19.0%). \n    <li><strong>This difference is also larger than for 1-day retention<\/strong>, presumably because more players have had time to hit the first gate. \n    <li> <strong>The overall 7-day retention is lower than the overall 1-day retention<\/strong>; fewer people play a game a week after installing than a day after installing.\n<\/ul>\n<p>But as before, let's use bootstrap analysis to figure out how certain we should be of the difference between the AB-groups.<\/p>","91e0f056":"#### *1-day retention for each AB-group*","416c05c3":"Clearly, there is an outlier. This player played about 50,000 game rounds during the first week! Due to this outlier, this boxplot is extremely skewed and not very informative. To learn about the behavior of the majority of the players, we will check the percentiles.","9f899b4e":"It appears that <strong>there was a slight decrease in 1-day retention when the gate was moved to level 40<\/strong> (44.2%) compared to the control when it was at level 30 (44.8%). It's a small change, but even small changes in retention can have a large impact. But while we are certain of the difference in the data, how certain should we be that a gate at level 40 will be worse in the future?\n<p>There are a couple of ways we can get at the certainty of these retention numbers. Here we will use bootstrapping: We will repeatedly re-sample our dataset (with replacement) and calculate 1-day retention for those samples. The variation in 1-day retention will give us an indication of how uncertain the retention numbers are.","043d8607":"Luckily, there is no missing value in this dataset.\n### 2.3 Count the number of players in each group","ac45ee01":"From this chart, we can see that the most likely % difference is around 1% - 2%, and that <strong>96% of the distribution is above 0%, in favor of a gate at level 30. <\/strong>","6ae01e72":"#### *Bootstrapping: Should we be confident in the difference?*","43aa7ca4":"# <center>Mobile Games: A\/B Testing & Player Retention <\/center> \n\n## Table of Contents\n\n1. **[Project Background](#1)**\n2. **[About the Data](#2)**\n3. **[Analyzing Player Behavior ](#3)**\n4. **[Comparing 1-day Retention](#4)**\n5. **[Comparing 7-day Retention](#5)**\n6. **[Conclusion](#6)**","7bcf72a0":"## Part 6. Conclusion  <a name= '6'><\/a>\n<p>The bootstrap result tells us that <strong>there is strong evidence that 7-day retention is higher when the gate is at level 30 than when it is at level 40.<\/strong> The conclusion is: If we want to keep retention high \u2014 both 1-day and 7-day retention \u2014 we should not move the gate from level 30 to level 40. \n<p>There are, of course, other metrics we could look at, like the number of game rounds played or how much in-game purchases are made by the two AB-groups. But retention <em>is<\/em> one of the most important metrics. If we don't retain our player base, it doesn't matter how much money they spend in-game.<\/p>\n\n\n<p>So, why is retention higher when the gate is positioned earlier? One could expect the opposite: The later the obstacle, the longer people are going to engage with the game. But this is not what the data tells us. The theory of <em>hedonic adaptation<\/em> can give one explanation for this. \n<p>In short, <strong>hedonic adaptation is the tendency for people to get less and less enjoyment out of a fun activity over time if that activity is undertaken continuously.<\/strong> By forcing players to take a break when they reach a gate, their enjoyment of the game is prolonged. But <strong>when the gate is moved to level 40, fewer players make it far enough, and they are more likely to quit the game because they simply got bored of it. <\/strong><\/p>","ebe055bd":"### 2.1 Load the AB-test data","eb2096b7":"<p>The data is from 90,189 players that installed the game while the AB-test was running. The variables are:<\/p>\n<ul>\n<li><code>userid<\/code> - a unique number that identifies each player.<\/li>\n<li><code>version<\/code> - whether the player was put in the control group (<code>gate_30<\/code> - a gate at level 30) or the test group (<code>gate_40<\/code> - a gate at level 40).<\/li>\n<li><code>sum_gamerounds<\/code> - the number of game rounds played by the player during the first week after installation\n<li><code>retention_1<\/code> - did the player come back and play 1 day after installing?<\/li>\n<li><code>retention_7<\/code> - did the player come back and play 7 days after installing?<\/li>\n<\/ul>\n<p>When a player installed the game, he or she was randomly assigned to either <code>gate_30<\/code> or <code>gate_40<\/code>. <\/p>","d713c431":"#### *Overall 1-day retention*","11ada585":"## Part 5. Comparing 7-day Retention  <a name= '5'><\/a>\nThe bootstrap analysis tells us that there is a high probability that 1-day retention is better when the gate is at level 30. However, since players have only been playing the game for one day, it is likely that most players haven't reached level 30 yet. That is, many players won't have been affected by the gate, even if it's as early as level 30. <p>But after having played for a week, more players should have reached level 40, and therefore it makes sense to also look at 7-day retention.","3cce112e":"## Part 2. About the Data  <a name= '2'><\/a>","4228a7c8":"## Part 1. Project Background <a name= '1'><\/a>","616a041e":"The distribution is highly skewed, with a long tail on the right. A huge number of players played fewer than 20 rounds and left the game. For rounds greater than 60, the number of players stayed steady at about 300.","a96bee90":"These two distributions above represent the bootstrap uncertainty over what the underlying 1-day retention could be for the two AB-groups. There seems to be some evidence of a difference, albeit small. Let's plot the % difference to have a closer look.","96a17109":"## Part 3. Analyzing Player Behavior  <a name= '3'><\/a>\n\nWe will plot a boxplot to visualize the distribution of 'sum_gamerounds', which would give us a rough idea of how many game rounds were played by a player during the first week after installing the game.","c7bca127":"## Part 4. Comparing 1-day Retention  <a name= '4'><\/a>\n\n<p>In the plot above we can see that some players install the game but then never play it, some players just play a couple of game rounds in their first week, and some get really hooked! What we want is for players to like the game and to get hooked. \n<p>A common metric in the video gaming industry for how fun and engaging a game is <strong>1-day retention: the percentage of players that comes back and plays the game one day after they have installed it.<\/strong>  The higher 1-day retention is, the easier it is to retain players and build a large player base. <\/p>","ee94e2c6":"<p>This project is based on a mini project from <a href=\"https:\/\/www.datacamp.com\/projects\/184\">Datacamp<\/a>.<\/p>\n<p><a href=\"https:\/\/www.facebook.com\/cookiecatsgame\">Cookie Cats<\/a> is a hugely popular mobile puzzle game developed by <a href=\"http:\/\/tactile.dk\">Tactile Entertainment<\/a>. It's a classic \"connect three\"-style puzzle game where the player must connect tiles of the same color to clear the board and win the level. It also features singing cats. Check out this short demo:<\/p>\n<p><a href=\"https:\/\/youtu.be\/GaP5f0jVTWE\"><img src=\"https:\/\/s3.amazonaws.com\/assets.datacamp.com\/production\/project_184\/img\/cookie_cats_video.jpeg\" style=\"width: 500px\"><\/a><\/p>\n<p>As players progress through the levels of the game, they will <strong>occasionally encounter gates that force them to wait a non-trivial amount of time or make an in-app purchase to progress<\/strong>. In addition to driving in-app purchases, these gates serve the important purpose of giving players an enforced break from playing the game, hopefully resulting in that the player's enjoyment of the game being increased and prolonged.<p>But where should the gates be placed? Initially the first gate was placed at level 30. <strong>In this project, we're going to analyze an AB-test where we moved the first gate in Cookie Cats from level 30 to level 40. In particular, we will look at the impact on player retention.<\/strong> <\/p>\n<p><img src=\"https:\/\/s3.amazonaws.com\/assets.datacamp.com\/production\/project_184\/img\/cc_gates.png\" alt=\"\"><\/p>","056db77c":"A little less than half of the players come back one day after installing the game. Now that we have a benchmark, let's look at how 1-day retention differs between the two AB-groups."}}