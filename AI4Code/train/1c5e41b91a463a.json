{"cell_type":{"73420c17":"code","051a8874":"code","818ecd84":"code","6fa0c290":"code","9eb37cbf":"code","aa6d3eff":"code","2c9b1d4c":"code","9e1e0143":"code","cd92dad7":"code","ea7a37cb":"code","e2ecd2c6":"code","fa2f35a7":"code","31c6c42d":"code","3585dabc":"code","fb7db9a3":"code","b7a5d1a8":"code","2a2463a1":"code","0fc47843":"code","d9a4dc9b":"code","9ca95345":"code","b1294e74":"code","a473ebcd":"code","9660e3d6":"code","46044f8e":"code","421d30f1":"code","d1e32f26":"code","7db9a96e":"code","815857dc":"code","2753bc8e":"code","3a12eb2f":"code","1154702b":"code","be11fe0c":"code","c6cb2da0":"code","679f6cd5":"code","c8ae5644":"code","50ccd7a9":"code","7a4200e5":"code","a48b3fef":"code","bbe6f816":"code","c9819320":"code","9b7b8b68":"code","da0e1311":"code","104c9e06":"code","bd4c705b":"code","deb0af87":"code","13a99dc1":"code","8bd0292d":"code","f29be43d":"code","56cd46d4":"code","045ab8e1":"code","89cbeb4a":"code","a657fcc4":"code","1bb36fdf":"code","c01a5003":"code","f0fd400e":"code","792c60fa":"code","cfb7d6c2":"code","ac0255e2":"code","0641928f":"code","8ce65d28":"code","dfdc61ce":"code","2e5579f0":"code","16c8b4ea":"code","de0a1c3f":"code","137a372c":"code","9a95aad5":"code","749fc661":"code","d60f9a9b":"code","01c07292":"code","ac7c4bcd":"code","2b0e4c31":"code","9fd78e36":"code","8bf58298":"code","be5f8de7":"code","1da26067":"code","d6194551":"code","5d3b5e16":"code","6c9a6583":"code","381693c9":"code","f7164393":"code","0db1b60c":"code","f1f44498":"code","697a546b":"code","0a5b3a61":"code","bae7f3dd":"code","567b85f0":"code","219be9bb":"code","f24e7c4f":"code","0345ee17":"code","08916679":"code","2c24ee10":"code","3fd61b98":"code","06dfe030":"code","8ae035f9":"code","3a9f877f":"code","419a32b2":"markdown","68654bde":"markdown","bf120d84":"markdown","14c0308f":"markdown","482f6645":"markdown","7b9294b3":"markdown","3202ef3d":"markdown","64f8d7cf":"markdown","5e7e484e":"markdown","a15a2954":"markdown","5818cf96":"markdown","a976d0a1":"markdown","7e9c688a":"markdown","d3fe5e4a":"markdown","f903d656":"markdown","69b50c0a":"markdown","ac75f91c":"markdown","485a9e13":"markdown","2b0f3242":"markdown","8edc604a":"markdown","9602ad67":"markdown"},"source":{"73420c17":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","051a8874":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score, GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, MinMaxScaler, MaxAbsScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.calibration import CalibratedClassifierCV\nfrom sklearn.naive_bayes import BernoulliNB\nfrom scipy import stats\nfrom scipy.special import boxcox1p\nfrom catboost import CatBoostClassifier,  Pool\nfrom xgboost import XGBClassifier","818ecd84":"train = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/train.csv')\ntrain.head()","6fa0c290":"test = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv')\ntest.head()","9eb37cbf":"sample_submission = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv')\nsample_submission.head()","aa6d3eff":"train.shape","2c9b1d4c":"test.shape","9e1e0143":"train.info()","cd92dad7":"train.isnull().sum()","ea7a37cb":"test.isnull().sum()","e2ecd2c6":"train.drop('id', axis=1, inplace = True)","fa2f35a7":"test.drop('id', axis=1, inplace = True)","31c6c42d":"train.describe().T\\\n        .style.bar(subset=['mean'], color=px.colors.qualitative.G10[0])\\\n        .background_gradient(subset=['std'], cmap='Greens')\\\n        .background_gradient(subset=['50%'], cmap='BuGn')","3585dabc":"train.plot.hist(subplots=True, legend=True, layout=(10,5), figsize=(100,80), title=\"Histogram for all features\")\n    \n# We can see that data is right skewed","fb7db9a3":"test.plot.hist(subplots=True, legend=True, layout=(10,5), figsize=(100,80), title=\"Histogram for all features\")\n    \n# We can see that data is right skewed","b7a5d1a8":"# There are also some negative values in dataframe\nfor i in train.columns:\n    value = train[i].value_counts()\n    print(value)","2a2463a1":"# There are also some negative values in dataframe\nfor i in test.columns:\n    value = test[i].value_counts()\n    print(value)","0fc47843":"X = train.iloc[:,0:50]\ny = train.iloc[:,50:]","d9a4dc9b":"np.seterr(divide = 'ignore')\nfor i in X.columns:\n    #X[i] = np.where(X[i]>0, np.log1p(X[i]), 0)\n    X[i] = np.log(X[i]-(min(X[i]-1)))","9ca95345":"np.seterr(divide = 'ignore')\nfor i in test.columns:\n    #test[i] = np.where(test[i]>0, np.log1p(test[i]), 0)\n    test[i] = np.log(test[i]-(min(test[i]-1)))","b1294e74":"X.plot.hist(subplots=True, legend=True, layout=(10,5), figsize=(100,80), title=\"Histogram for all features\")","a473ebcd":"test.plot.hist(subplots=True, legend=True, layout=(10,5), figsize=(100,80), title=\"Histogram for all features\")","9660e3d6":"label = LabelEncoder()\ny = label.fit_transform(y)\ny = np.ravel(y)","46044f8e":"X_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.2, random_state = 42)","421d30f1":"skfold = StratifiedKFold(n_splits=5)","d1e32f26":"pipe_lr = Pipeline([\n    ('scaler', StandardScaler()),\n    ('lr', LogisticRegression(multi_class='multinomial', n_jobs=-1))\n])","7db9a96e":"pipe_lr.fit(X_train,y_train)","815857dc":"pipe_lr.score(X_test,y_test)","2753bc8e":"# cross_validation_score = cross_val_score(pipe_lr, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","3a12eb2f":"pipe_cat = Pipeline([\n    ('scaler', StandardScaler()),\n    ('cat', CatBoostClassifier(loss_function='MultiClass',eval_metric='MultiClass', verbose=False))\n])","1154702b":"# train_pool = Pool(data=X_train, label=y_train)\n# test_pool = Pool(data=X_test, label=y_test.values) ","be11fe0c":"pipe_cat.fit(X_train,y_train)\n# pipe_cat.fit(train_pool)","c6cb2da0":"pipe_cat.score(X_test,y_test)","679f6cd5":"# cross_validation_score = cross_val_score(pipe_cat, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","c8ae5644":"pipe_sgd = Pipeline([\n    ('scaler', StandardScaler()),\n    ('sgd', SGDClassifier(alpha=0.001, early_stopping=True,n_jobs=-1))\n])","50ccd7a9":"pipe_sgd.fit(X_train,y_train)","7a4200e5":"pipe_sgd.score(X_test,y_test)","a48b3fef":"# cross_validation_score = cross_val_score(pipe_sgd, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","bbe6f816":"pipe_rf = Pipeline([\n    ('scaler', StandardScaler()),\n    ('rf', RandomForestClassifier())\n])","c9819320":"pipe_rf.fit(X_train,y_train)","9b7b8b68":"pipe_rf.score(X_test,y_test)","da0e1311":"# cross_validation_score = cross_val_score(pipe_rf, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","104c9e06":"pipe_lgbm = Pipeline([\n    ('scaler', StandardScaler()),\n    ('lgbm', LGBMClassifier(n_estimators=150, num_leaves=35, objective='multiclass'))\n])","bd4c705b":"pipe_lgbm.fit(X_train,y_train)","deb0af87":"pipe_lgbm.score(X_test,y_test)","13a99dc1":"# cross_validation_score = cross_val_score(pipe_lgbm, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","8bd0292d":"pipe_bnb = Pipeline([\n    ('scaler', StandardScaler()),\n    ('bnb', BernoulliNB(alpha=7.0))\n])","f29be43d":"pipe_bnb.fit(X_train,y_train)","56cd46d4":"pipe_bnb.score(X_test,y_test)","045ab8e1":"# cross_validation_score = cross_val_score(pipe_bnb, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","89cbeb4a":"pipe_xgb = Pipeline([\n    ('scaler', StandardScaler()),\n    ('xgb', XGBClassifier())\n])","a657fcc4":"pipe_xgb.fit(X_train,y_train)","1bb36fdf":"pipe_xgb.score(X_test,y_test)","c01a5003":"# cross_validation_score = cross_val_score(pipe_xgb, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","f0fd400e":"params_lr = [{\n    'lr__penalty': ['l2'],\n    'lr__C': [0.01,0.1,1.0,2.0],\n    'lr__solver': ['newton-cg', 'lbfgs', 'sag', 'saga']\n    },\n    {\n    'lr__penalty': ['l1'],\n    'lr__C': [0.01,0.1,1.0,2.0],\n    'lr__solver': ['saga']\n    }\n]    ","792c60fa":"hyper_search = GridSearchCV(pipe_lr, params_lr)\nhyper_search.fit(X,y)","cfb7d6c2":"hyper_search.best_params_","ac0255e2":"pipe_lr = hyper_search.best_estimator_","0641928f":"pipe_lr.fit(X_train,y_train)","8ce65d28":"pipe_lr.score(X_test,y_test)","dfdc61ce":"# cross_validation_score = cross_val_score(pipe_lr, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","2e5579f0":"params_sgd = {\n        'sgd__loss' : ['log','modified_huber'],\n        'sgd__penalty' : ['l2', 'l1'],\n        'sgd__alpha' : [0.0001,0.001],\n        'sgd__learning_rate' : ['constant','optimal','invscaling'],\n        'sgd__eta0' : [0.1]\n}","16c8b4ea":"hyper_search = GridSearchCV(pipe_sgd, params_sgd)\nhyper_search.fit(X,y)","de0a1c3f":"hyper_search.best_params_","137a372c":"pipe_sgd = hyper_search.best_estimator_","9a95aad5":"pipe_sgd.fit(X_train,y_train)","749fc661":"pipe_sgd.score(X_test,y_test)","d60f9a9b":"# cross_validation_score = cross_val_score(pipe_sgd, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","01c07292":"# params_rf = {\n#     'rf__n_estimators': [50,100,150],\n#     'rf__criterion' : ['gini', 'entropy'],\n#     'rf__min_samples_split' : [2,3,4],\n#     'rf__max_features': ['auto', 'sqrt', 'log2']\n#     }","ac7c4bcd":"# hyper_search = GridSearchCV(pipe_rf, params_rf)\n# hyper_search.fit(X,y)","2b0e4c31":"# hyper_search.best_params_","9fd78e36":"# pipe_rf = hyper_search.best_estimator_","8bf58298":"# pipe_rf.fit(X_train,y_train)","be5f8de7":"# pipe_rf.score(X_test,y_test)","1da26067":"# cross_validation_score = cross_val_score(pipe_rf, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","d6194551":"params_lgbm = [\n    {\n    'lgbm__boosting_type': ['gbdt'],\n    'lgbm__num_leaves': [30,35,40,45],\n    'lgbm__learning_rate': [0.001,0.01,0.1],\n    'lgbm__n_estimators' : [50,100,150],\n    },\n    {\n    'lgbm__boosting_type': ['dart'],\n    'lgbm__num_leaves': [30,35,40,45],\n    'lgbm__learning_rate': [0.001,0.01,0.1],\n    'lgbm__n_estimators' : [50,100,150],   \n    }\n]","5d3b5e16":"hyper_search = GridSearchCV(pipe_lgbm, params_lgbm)\nhyper_search.fit(X,y)","6c9a6583":"hyper_search.best_params_","381693c9":"pipe_lgbm = hyper_search.best_estimator_","f7164393":"pipe_lgbm.fit(X_train,y_train)","0db1b60c":"pipe_lgbm.score(X_test,y_test)","f1f44498":"# cross_validation_score = cross_val_score(pipe_lgbm, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","697a546b":"params_bnb = {\n    'bnb__alpha': [1.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0]\n    }","0a5b3a61":"hyper_search = GridSearchCV(pipe_bnb, params_bnb)\nhyper_search.fit(X,y)","bae7f3dd":"hyper_search.best_params_","567b85f0":"pipe_bnb = hyper_search.best_estimator_","219be9bb":"pipe_bnb.fit(X_train,y_train)","f24e7c4f":"pipe_bnb.score(X_test,y_test)","0345ee17":"# cross_validation_score = cross_val_score(pipe_bnb, X, y, cv=skfold)\n# print(np.mean(cross_validation_score))","08916679":"vote = VotingClassifier(estimators=[\n    ('lgbm',pipe_lgbm),('cat',pipe_cat),('xgb',pipe_xgb),('bnb',pipe_bnb),('lr',pipe_lr),('sgd',pipe_sgd),('rf',pipe_rf)], voting='soft')","2c24ee10":"vote.fit(X_train, y_train)","3fd61b98":"vote.score(X_test,y_test)","06dfe030":"probability_predictions= vote.predict_proba(test)\nprobability_predictions","8ae035f9":"sample_submission.iloc[:,1:5] = probability_predictions\nsample_submission","3a9f877f":"sample_submission.to_csv('submission.csv',index=False)","419a32b2":"## \ud83d\ude80 Tuning BernoulliNB","68654bde":"## \ud83d\ude80 XGBoost","bf120d84":"# \ud83d\udc49  Building Model Pipeline","14c0308f":"# \ud83d\udc49  Load train and test datasets","482f6645":"## \ud83d\ude80 BernoulliNB","7b9294b3":"## \ud83d\ude80 Tuning SGDClassifier","3202ef3d":"# \ud83d\udc49 Data Preprocessing","64f8d7cf":"## \ud83d\ude80  Catboost","5e7e484e":"## \ud83d\ude80 Logistic Regression","a15a2954":"## \ud83d\ude80 SGDClassifier","5818cf96":"# \ud83d\udc49  Exploratory Data Analysis (EDA)","a976d0a1":"# \ud83d\udc49 Submission","7e9c688a":"## \ud83d\ude80 Tuning Logistic Regression","d3fe5e4a":"## \ud83d\ude80 RandomForestClassifier","f903d656":"# \ud83d\udc49 Import Libraries","69b50c0a":"## \ud83d\ude80 LightGBM","ac75f91c":"## \ud83d\ude80 Tuning LightGBM","485a9e13":"### \ud83d\ude80 Log transforming features to remove right skewness of data","2b0f3242":"## \ud83d\ude80 Tuning RandomForestClassifier","8edc604a":"# \ud83d\udc49 Hyperparameters Tuning","9602ad67":"# \ud83d\udc49 Voting Classifier"}}