{"cell_type":{"c0ab9075":"code","766b580f":"code","ad2c844c":"code","c8cc7e7c":"code","99c82518":"code","37fe08a2":"code","ec8ed692":"code","3d0342f9":"code","ec4b8544":"code","41f072ba":"code","97888e18":"code","acc566fc":"code","c3780a52":"code","6e5e98c9":"code","0272b631":"code","bb59911b":"code","286f464d":"markdown","78b22e6d":"markdown","4e31e4ec":"markdown","f84e2af6":"markdown","31d8d0b8":"markdown","51f71ada":"markdown","2b08ecd8":"markdown","ed452e46":"markdown","05e7e48d":"markdown","dc27e8d9":"markdown","aee6418e":"markdown","9c70aa78":"markdown","92a27b98":"markdown","87a5c758":"markdown","ccff529f":"markdown","a1f00623":"markdown","6bec9c74":"markdown","c8f9455d":"markdown"},"source":{"c0ab9075":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nsurvey_2020 = pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\", dtype = \"object\")\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","766b580f":"Questions = survey_2020.iloc[0,:]\nsurvey_2020 = survey_2020.drop(index=0)\nsurvey_2020.reset_index(drop=True)","ad2c844c":"PK = survey_2020[survey_2020['Q3']==\"Pakistan\"]\nWORLD = survey_2020[survey_2020['Q3']!=\"Pakistan\"]\n#WORLD = WORLD.drop(index=0)\n#WORLD.reset_index(drop=True)","c8cc7e7c":"import plotly.express as px\nPK = PK.rename(columns = {\"Q2\": \"Gender\"})\nfig = px.histogram(PK[\"Gender\"], histnorm='probability density',title='Pakistan: Gender identity')\nfig.show()","99c82518":"import plotly.express as px\nWORLD = WORLD.rename(columns = {\"Q2\": \"Gender\"})\nfig = px.histogram(WORLD[\"Gender\"], histnorm='probability density',title='World: Gender identity')\nfig.show()","37fe08a2":"PK = PK.rename(columns = {\"Q1\": \"Age\"})\n\nPK[\"Age\"].where(PK[\"Gender\"]==\"Man\").hist()\n","ec8ed692":"WORLD = WORLD.rename(columns = {\"Q1\": \"Age\"})\n\nWORLD[\"Age\"].where(WORLD[\"Gender\"]==\"Man\").hist()","3d0342f9":"PK[\"Age\"].where(PK[\"Gender\"]==\"Woman\").hist()","ec4b8544":"WORLD[\"Age\"].where(WORLD[\"Gender\"]==\"Woman\").hist()","41f072ba":"PK_Women = PK[PK[\"Gender\"]==\"Woman\"]\nPK_Women[\"Age\"].isnull().sum()\nPK_Men = PK[PK[\"Gender\"]==\"Man\"]\nPK_Men[\"Age\"].isnull().sum()","97888e18":"W_Women = WORLD[WORLD[\"Gender\"]==\"Woman\"]\nW_Women[\"Age\"].isnull().sum()\nW_Men = WORLD[WORLD[\"Gender\"]==\"Man\"]\nW_Men[\"Age\"].isnull().sum()","acc566fc":"import plotly as py\nimport numpy as np\nimport plotly.graph_objs as go\n\nW_groups = PK_Women[\"Age\"].unique()\nwomen_bins = {}\nfor idx, group in enumerate(W_groups):\n    #print(idx,group)\n    #print(PK_Women[PK_Women[\"Age\"]==group].Age.count())\n    women_bins[group] = PK_Women[PK_Women[\"Age\"]==group].Age.count()\nsorted_women_bins = []\nfor i in sorted(women_bins.keys()):\n    #print(i,women_bins[i])\n    sorted_women_bins.append(women_bins[i])\nM_groups = PK_Men[\"Age\"].unique()\nmen_bins = {}\nfor idx, group in enumerate(M_groups):\n    #print(idx,group)\n    #print(PK_Men[PK_Men[\"Age\"]==group].Age.count())\n    men_bins[group] = PK_Men[PK_Men[\"Age\"]==group].Age.count()\nsorted_men_bins = []\nfor i in sorted(men_bins.keys()):\n    #print(i,men_bins[i])\n    sorted_men_bins.append(men_bins[i])\n\nsorted_women_bins = np.array(sorted_women_bins)\n\n\n\nlayout = go.Layout(yaxis=go.layout.YAxis(title='Age'),\n                   xaxis=go.layout.XAxis(\n                       range=[-25, 80],\n                       tickvals=[-25,-20,-15,-10,-5,0,5,10,15, 25, 55, 65,80],\n                       ticktext=[25,20,15,10,5,0,5,10,15, 25, 55, 65, 80],\n                       title='Count'),\n                   barmode='overlay',\n                   bargap=0.1)\ny = list(sorted(men_bins.keys()))\n\ndata = [go.Bar(y=y,\n               x=sorted_men_bins,\n               orientation='h',\n               name='Men',\n               hoverinfo='x',\n               marker=dict(color='powderblue')\n               ),\n        go.Bar(y=y,\n               x=sorted_women_bins*-1,\n               orientation='h',\n               name='Women',\n               text = sorted_women_bins,\n               hoverinfo='text',\n               marker=dict(color='seagreen')\n               )]\n\npy.offline.iplot(dict(data=data, layout=layout))","c3780a52":"# Pakistan Women \n\nW_groups = PK_Women[\"Age\"].unique()\n\nwomen_bins = {}\nfor idx, group in enumerate(W_groups):\n    #print(idx,group)\n    #print(PK_Women[PK_Women[\"Age\"]==group].Age.count())\n    women_bins[group] = PK_Women[PK_Women[\"Age\"]==group].Age.count()\nsorted_women_bins = []\nfor i in sorted(women_bins.keys()):\n    #print(i,women_bins[i])\n    sorted_women_bins.append(women_bins[i])\n\n#print(\"\\n\")    \n\n# World Women \n\nWW_groups = W_Women[\"Age\"].unique()\n\nw_women_bins = {}\nfor idx, group in enumerate(WW_groups):\n    #print(idx,group)\n    #print(PK_Women[PK_Women[\"Age\"]==group].Age.count())\n    w_women_bins[group] = W_Women[W_Women[\"Age\"]==group].Age.count()\n\nsorted_w_women_bins = []\nfor i in sorted(w_women_bins.keys()):\n    #print(i,w_women_bins[i])\n    sorted_w_women_bins.append(w_women_bins[i])\n    \n# Pakistan Man    \n\nM_groups = PK_Men[\"Age\"].unique()\nmen_bins = {}\nfor idx, group in enumerate(M_groups):\n    #print(idx,group)\n    #print(PK_Men[PK_Men[\"Age\"]==group].Age.count())\n    men_bins[group] = PK_Men[PK_Men[\"Age\"]==group].Age.count()\nsorted_men_bins = []\nfor i in sorted(men_bins.keys()):\n    #print(i,men_bins[i])\n    sorted_men_bins.append(men_bins[i])\n\n\n# World Man    \n\nWM_groups = W_Men[\"Age\"].unique()\nw_men_bins = {}\nfor idx, group in enumerate(WM_groups):\n    #print(idx,group)\n    #print(PK_Men[PK_Men[\"Age\"]==group].Age.count())\n    w_men_bins[group] = W_Men[W_Men[\"Age\"]==group].Age.count()\nsorted_w_men_bins = []\nfor i in sorted(w_men_bins.keys()):\n    #print(i,w_men_bins[i])\n    sorted_w_men_bins.append(w_men_bins[i])","6e5e98c9":"sorted_women_bins = np.array(sorted_women_bins)\nsorted_w_women_bins= np.array(sorted_w_women_bins)\n\n\nlayout = go.Layout(yaxis=go.layout.YAxis(title='Age'),\n                   xaxis=go.layout.XAxis(\n                       range=[-0.5, 0.3],\n                       tickvals=[-0.5,-0.4,-0.3,-0.2,-0.1,0,0.1,0.2],\n                       ticktext=[0.5,0.4,0.3,0.2,0.2,0.1, 0,0.1,0.2],\n                       title='Percentage'),\n                   barmode='overlay',\n                   bargap=0.1)\ny = list(sorted(w_men_bins.keys()))\ndata = [\n        go.Bar(y=y,\n               x=(sorted_women_bins\/np.sum(sorted_women_bins))*-1,\n               orientation='h',\n               name='Pakistani Women',\n               text=-1 * sorted_women_bins,\n               hoverinfo='text',\n               marker=dict(color='Green')\n               ),\n    \n        go.Bar(y=y,\n               x=(sorted_w_women_bins\/np.sum(sorted_w_women_bins)),\n               orientation='h',\n               name = \"Women of the World\",\n               opacity=0.5,\n               marker=dict(color='blue')\n               )]\n\npy.offline.iplot(dict(data=data, layout=layout))","0272b631":"sorted_women_bins = np.array(sorted_women_bins)\nsorted_w_women_bins= np.array(sorted_w_women_bins)\n\n\nlayout = go.Layout(yaxis=go.layout.YAxis(title='Age'),\n                   xaxis=go.layout.XAxis(\n                       range=[-0.5, 0.3],\n                       tickvals=[-0.5,-0.4,-0.3,-0.2,-0.1,0,0.1,0.2],\n                       ticktext=[0.5,0.4,0.3,0.2,0.2,0.1, 0,0.1,0.2],\n                       title='Percentage'),\n                   barmode='overlay',\n                   bargap=0.1)\ny = list(sorted(w_men_bins.keys()))\ndata = [\n        go.Bar(y=y,\n               x=(sorted_men_bins\/np.sum(sorted_men_bins))*-1,\n               orientation='h',\n               name='Pakistani Men',\n               text=-1 * sorted_men_bins,\n               hoverinfo='text',\n               marker=dict(color='Green')\n               ),\n    \n        go.Bar(y=y,\n               x=(sorted_w_men_bins\/np.sum(sorted_w_men_bins)),\n               orientation='h',\n               name = \"Men of the World\",\n               opacity=0.5,\n               marker=dict(color='blue')\n               )]\n\npy.offline.iplot(dict(data=data, layout=layout))","bb59911b":"\nlayout = go.Layout(yaxis=go.layout.YAxis(title='Age'),\n                   xaxis=go.layout.XAxis(\n                       range=[-0.5, 0.5],\n                       tickvals=[-0.5,0.5],\n                       ticktext=[0.5, 0, 0.5],\n                       title='Percentage'),\n                   barmode='overlay',\n                   bargap=0.1)\ny = list(sorted(w_men_bins.keys()))\ndata = [go.Bar(y=y,\n               x=sorted_men_bins\/np.sum(sorted_men_bins),\n               orientation='h',\n               name='Pakistani Men',\n               hoverinfo='x',\n               marker=dict(color='powderblue')\n               ),\n\n        go.Bar(y=y,\n               x=sorted_w_men_bins\/np.sum(sorted_w_men_bins),\n               orientation='h',\n               hoverinfo='x',\n               showlegend=True,\n               name = \"Men of the World\",\n               opacity=0.5,\n               marker=dict(color='teal')\n               ),\n        go.Bar(y=y,\n               x=(sorted_women_bins\/np.sum(sorted_women_bins))*-1,\n               orientation='h',\n               name='Pakistani Women',\n               text=-1 * sorted_women_bins,\n               hoverinfo='text',\n               marker=dict(color='seagreen')\n               ),\n        go.Bar(y=y,\n               x=(sorted_w_women_bins\/np.sum(sorted_w_women_bins))*-1,\n               orientation='h',\n               text=-1 * sorted_w_women_bins,\n               hoverinfo='text',\n               name=\"Women of the World\",\n               showlegend=True,\n               opacity=0.2,\n               marker=dict(color='darkgreen')\n               )]\n\npy.offline.iplot(dict(data=data, layout=layout))","286f464d":"Ah ! the things that you have to do for creating visualization ... ","78b22e6d":"# Insights","4e31e4ec":"# A Better visualization of the gender distribution? ","f84e2af6":"![](http:\/\/)**Lets compare how different or similar the pursuits of pakistani men and women are in 2020. **","31d8d0b8":"Checking for missing values here. ","51f71ada":"# The gender divide ","2b08ecd8":"Lets quickly inquire how the age is distributed... ","ed452e46":"1. We have no responses from women over the age of 40 ? \n2. Is there hope ? Althought the general number paint a very bleak image of the general participation of women in terms of numbers but if we look at the number of participants in the range of 30 - 40 the gap is smaller. So, I am assuming that women who are in this age demographic are usally working at a professional level. We will dig a little deeper a bit latter. ","05e7e48d":"# An Insight ","dc27e8d9":"![image.png](attachment:image.png) ","aee6418e":"# Gender distribution by AGE ! ","9c70aa78":"# A rosy picture for the women of my land ! I am so excited !! ","92a27b98":"# Gender Participation: Pakistan Vs the rest of the World ","87a5c758":"Nothing to worry about here... Lets proceed... ","ccff529f":"# Please take a while and go through my notebook, An upvote although not essential but  is highly appreciated. ","a1f00623":"2. The perentage of participation is equal to the overall participation of women in the world. ","6bec9c74":"1. Do you know that Islamic Republic of Pakistan officially recognizes three genders MALE, FEMALE and TRANS-GENDERS. You can read more Here at [https:\/\/www.npr.org\/sections\/thetwo-way\/2018\/05\/09\/609700652\/pakistan-passes-historic-transgender-rights-bill](http:\/\/) As you can see that nobody identified as non-binary in the survey. Is this because of the taboo in the Pakistani society of being a transgender ?  AH ! Controversy !! Too much to unpack here.**(UPVOTE ME if you want more analysis)**","c8f9455d":"# Thats all for now FOLKS ! don't forget to upvote me please "}}