{"cell_type":{"270afcb6":"code","ba094cfa":"code","14fe5cd3":"code","60b73819":"code","64d0e0d7":"code","91d7263b":"code","2c9f0c07":"code","b61364b7":"code","5a4418dd":"code","af18800f":"code","43277979":"code","eade7165":"code","849f25d8":"code","77731581":"code","039c1726":"code","7dae387c":"code","6de0aa92":"code","58161e32":"code","50a699c1":"code","ed5559d2":"code","f065057b":"code","662958f6":"code","b9b0ef66":"code","61b125bf":"code","d1a1f13d":"code","5805d694":"code","0f33a6a4":"code","2c192a9c":"code","8e882129":"code","5af037c2":"code","b8a1333e":"code","54eb2ef1":"code","fff7af95":"code","0386fe74":"code","f69dd7b2":"code","02c6249a":"code","e1b4e4ab":"markdown","d2166d71":"markdown","e82a318c":"markdown","f8829b6c":"markdown","22c3cc29":"markdown","e1309e65":"markdown","3c75c391":"markdown","ec346bf2":"markdown","304c2e5a":"markdown","da799fbe":"markdown"},"source":{"270afcb6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.io as pio\nimport math \n%matplotlib inline","ba094cfa":"df = pd.read_csv('..\/input\/covid19-country-level-data-for-epidemic-model\/Country_Level_Info.csv')\ndf.head()","14fe5cd3":"df.tail()","60b73819":"df.shape","64d0e0d7":"df.isna().sum()","91d7263b":"df.info()","2c9f0c07":"df.describe(include='int')","b61364b7":"df.describe(include='object')","5a4418dd":"filtered_df = df[df['alpha-3_code'].isnull()]\nfiltered_df","af18800f":"df_code.shape","43277979":"filtered_df['Country_Region'].value_counts()","eade7165":"df=df.drop(['alpha-3_code'],axis=1)","849f25d8":"df.columns","77731581":"df.corr()","039c1726":"df.groupby(['Country_Region']).mean().round(decimals=4)","7dae387c":"df['Date'] = pd.to_datetime(df['Date'],format='%Y\/%m\/%d')","6de0aa92":"df['Date'].dtype","58161e32":"df['Date_Month'] = df['Date'].map(lambda x: x.strftime('%m'))\n\ndf['Date_Year'] = df['Date'].map(lambda x: x.strftime('%Y'))\n\ndf['Date_Date'] = df['Date'].map(lambda x: x.strftime('%m%d'))\n\n#df","50a699c1":"df['Date_Month'].dtype","ed5559d2":"df_filtered_country=df[df['Country_Region']=='India']\n\n#df_filtered_country#.sort_values('Total_Confirmed_Cases',ascending=False)\n\n#df_filtered_by_month=df[df['Date_Month']== '02']\n\n#df_filtered_month_country=df_filtered__by_month[df_filtered__by_month['Country_Region']== 'US']\n\n#df_filtered_month_country","f065057b":"group_date_month = df_filtered_country.groupby(['Date_Month','Country_Region']).max()#.reset_index()\n\ngroup_date_month\n\n#group_date_month.get_group('Afghanistan')\n\n#group_date_month.(lambda x: x['Country_Region'] == 'Afghanistan')","662958f6":"# for whole dataset\n\ngroup_date_month = df.groupby(['Date_Month','Country_Region']).max()#.reset_index()\n\n#group_date_month.get_group('Afghanistan')\n\n#group_date_month.apply(lambda x: x['Country_Region'] == 'Afghanistan', axis=1)\n\ngroup_date_month","b9b0ef66":"#Create sorted data table for Countries by Total confirmed Cases\n\nsorted_data=df.groupby('Country_Region').max().reset_index()\n\nsorted_data=sorted_data.sort_values('Total_Confirmed_Cases', ascending=False)\n\nsorted_data = sorted_data.head(20)\n\nsorted_data","61b125bf":"# Create a plot\n\nplt.figure(figsize=(25,8))\n\n# Add title\nplt.title(\"Total cases by Country\")\n\n#grouped_data=df.groupby('Country_Region').sum().reset_index()\n\n#grouped_data=grouped_data.sort_values('Total_Confirmed_Cases', ascending=False)\n#grouped_data\n#y_pos = np.arange(len(bars))\n\ng = sns.barplot(x=\"Total_Confirmed_Cases\", y=\"Country_Region\", data=sorted_data,\n            color=\"b\",label=\"Total\")\n           \n    \n#label=\"Total\", aspect=.7,hue = \"Country_Region\",orient=\"v\" , #errcolor='.26'\n#sns.barplot(x = grouped_data['Total_Confirmed_Cases'], y=grouped_data)\n#df['Total_Confirmed_Cases'].sum()","d1a1f13d":"sorted_data1=sorted_data.sort_values('Total_Confirmed_Cases', ascending=False)\n\nfig = px.sunburst(\n    data_frame = sorted_data1,\n    path = ['Country_Region', 'Total_Confirmed_Cases', 'Total_Recovered_Cases'],\n    values = 'Total_Confirmed_Cases',\n    hover_name= 'Country_Region',\n    #color = \"Country_Region\",\n    color_discrete_sequence=px.colors.qualitative.Pastel,\n    maxdepth = -1,\n    branchvalues='remainder'\n)\n\nfig.update_traces(textinfo='label+percent root')\nfig.update_layout(margin=dict(t=0, l=0, r=0, b=0))\n\n\nfig.show()","5805d694":"#ax = sns.scatterplot(x=df['date_month'], y=df['Total_Confirmed_Cases'], data=df)\n\ntemp =df[df['Country_Region']=='Italy']\n\nplt.title(\"Active Cases in Italy\")\n\nax = sns.lineplot(x=temp.Date_Month, y=temp.Remaining_Confirmed_Cases, data=temp)\n\nax.set(xlabel='Months', ylabel='Active Cases')\n\nplt.show()","0f33a6a4":"total = df.groupby('Date')['Total_Confirmed_Cases', 'Total_Fatalities', \n                           'Total_Recovered_Cases', 'Remaining_Confirmed_Cases'].sum().reset_index()\n\ntotal = total[total['Date'] == max(total['Date'])].reset_index(drop=True)\n\ntotal\n\n#Acive cases(remaining_Confirm_cases) = Total cases - Total Death - Total Recovery","2c192a9c":"plt.figure(figsize= (40,10))\n\nplt.xticks(rotation = 90 ,fontsize = 10)\n\nplt.yticks(fontsize = 10)\n\n#plt.xlabel('Day by Day',fontsize = 30)\n\n#plt.ylabel('Total_Confirmed_Cases',fontsize = 30)\n\nplt.title(\"Worldwide Confirmed Cases Over Time\" , fontsize = 30)\n\ntotal_cases = df.groupby('Date')['Date', 'Total_Confirmed_Cases'].max()#.reset_index()\n\n#total_cases['Date'] = pd.to_datetime(total_cases['Date'])\n\n\nax = sns.pointplot( x = total_cases.Date.dt.date ,y = total_cases.Total_Confirmed_Cases )#, color = 'r')\n\nax.set(xlabel='Day by Day', ylabel='Total_Confirmed_Cases')\nplt.show()","8e882129":"\nsorted_data_active = sorted_data.sort_values('Remaining_Confirmed_Cases', ascending=False)\n\nsorted_data_active = sorted_data_active.head(35)\n\n#sorted_data_active","5af037c2":"fig = px.bar(sorted_data_active, x='Country_Region', y='Remaining_Confirmed_Cases', \n             text='Remaining_Confirmed_Cases', title = 'Most Active Cases around the World')\n\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')#, yaxis=dict(title='USD (millions)')\n\nfig.show()\n#py.offline.iplot(fig)","b8a1333e":"sorted_data_deaths=sorted_data.sort_values('Total_Fatalities', ascending=False)\n\nsorted_data_death = sorted_data_deaths.head(35)\n\n#sorted_data_death","54eb2ef1":"fig = px.bar(sorted_data_death, x='Country_Region', y='Total_Fatalities', \n             text='Total_Fatalities', title = 'Most Death Cases around the World')\n\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\n\nfig.show()","fff7af95":"total_new_cases = df.groupby('Country_Region')['Country_Region', \n                                               'Total_Recovered_Cases', 'Total_Confirmed_Cases','Total_Fatalities'].max()#.reset_index()\ntotal_new_cases=total_new_cases.sort_values('Total_Confirmed_Cases', ascending = False)\ntotal_new_cases=total_new_cases.head(35)\n#total_new_cases","0386fe74":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=total_new_cases.Country_Region,\n                y=total_new_cases.Total_Confirmed_Cases,\n                name='Confirmed',\n                marker_color='rgb(55, 83, 109)',\n                #hovertemplate = 'Confirmed:%{y:.2f}',\n                ))\nfig.add_trace(go.Bar(x=total_new_cases.Country_Region,\n                y=total_new_cases.Total_Recovered_Cases,\n                name='Recovered',\n                marker_color='rgb(26, 118, 255)'\n                ))\n\nfig.add_trace(go.Bar(x=total_new_cases.Country_Region,\n                y=total_new_cases.Total_Fatalities,\n                name='Deaths',\n                marker_color='rgb(200, 20, 25)'\n                     \n                ))\n\nfig.update_layout(\n    title='Total Cases vs. Total Recovered',\n    xaxis_tickfont_size=10,\n    yaxis=dict(\n        title='COVID-19 Cases',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=1,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.1 # gap between bars of the same location coordinate.\n)\n\nfig.show()","f69dd7b2":"temp = df.groupby('Country_Region')['Country_Region', 'Total_Fatalities', 'Total_Recovered_Cases', \n                                    'Total_Confirmed_Cases'].max()\n\ntemp['Rate_of_Deaths'] = round(temp['Total_Fatalities']\/temp['Total_Confirmed_Cases'], 3)*100\ntemp['Rate_of_Recovery'] = round(temp['Total_Recovered_Cases']\/temp['Total_Confirmed_Cases'], 3)*100\n\ntemp = temp.sort_values('Total_Confirmed_Cases', ascending=False)\n\ntemp = temp.head(35)\n\n#temp","02c6249a":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=temp.Country_Region,\n                         y=temp.Rate_of_Recovery,\n                         mode='lines',\n                         name='Recovery Rate',\n                         marker_color='rgb(0, 20, 20)'))\n\nfig.add_trace(go.Scatter(x=total_new_cases.Country_Region,\n                     y=temp.Rate_of_Deaths,\n                     mode='lines',\n                     name='Death Rate',\n                     marker_color='rgb(255, 0, 0)' ))\n\n#data = [trace1, trace2]\nfig.update_layout(\n    title='Deaths vs Recovery based for the Countries having highest number of Cases',\n    xaxis_tickfont_size=10,\n    yaxis=dict(\n        title='Percentage',\n        zeroline = True,\n        showline = True,\n        titlefont_size=16,\n        tickfont_size=14))\n              \n#fig = dict(data = data, layout = layo`aaut)\n\n#fig.show()","e1b4e4ab":"## Compare Rate of Recovery vs Rate of Death for each Country","d2166d71":"## How is Italy doing after containing the spread of virus?","e82a318c":"# Fields Details:\n\nDate: The date of the record.\n\nCountryRegion: The name of the country\/region. \n\n-alpha-3code: country code for that can be used for map visualization.\n\nPopulation: The population of the given country\/region.\n\nTotalConfirmedCases: Cumulative confirmed cases.\n\nTotal_Fatalities: Cumulative fatalities.\n\nTotalRecoveredCases: Cumulative recovered cases.\n\nNewConfirmedCases: Daily new confirmed cases.\n\nNew_Fatalities: Daily new fatalities.\n\nNewRecoveredCases: Daily new recovered cases.\n\nRemainingConfirmedCases: Remaining infected cases which equal to (cumulative confirmed cases - cumulative recovered cases - cumulative fatalities).","f8829b6c":"## Which country has most Active COVID cases?","22c3cc29":"## Which Country has most number of deaths from COVID?","e1309e65":"## Show the trend of Total Number of Cases worldwide by each day","3c75c391":"## Compare Confirmed Cases vs Total Recovered vs Total Deaths for Top 30 countries","ec346bf2":"### Which countries has highest number of COVID cases in the world?","304c2e5a":"# Feature Engineering","da799fbe":"## What percentage is distrubution of COVID cases around the world?"}}