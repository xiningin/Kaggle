{"cell_type":{"6b7495af":"code","5e62082c":"code","c9d21a3f":"code","cf8d940c":"code","9564c31b":"code","b7dcdeb8":"code","c5e371cb":"code","7e16cc77":"code","93daf7e0":"code","e8822be4":"code","dc7b8d15":"code","9d31b4d7":"code","4375b85b":"code","3951e2a3":"code","7b7c2518":"code","94ebf38f":"code","e2bcd6ab":"code","f8b2016f":"markdown","c6c591d6":"markdown","75cc45f8":"markdown","219ff82a":"markdown","bef8fa5d":"markdown","51ae4a95":"markdown","08dd4a00":"markdown","f5a5f001":"markdown","582347eb":"markdown"},"source":{"6b7495af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5e62082c":"advertising = pd.read_csv('..\/input\/tvmarketing.csv')#Telling the computer what to read and from where\nadvertising.head(5)","c9d21a3f":"advertising.info()#get information about the dataset\n","cf8d940c":"advertising.describe()","9564c31b":"import seaborn as sns#load plotting packages\n%matplotlib inline\nsns.pairplot(advertising, x_vars=['TV'], y_vars= 'Sales', height=7, aspect=0.9, kind='scatter')","b7dcdeb8":"#y=mx+c or y= c+ m*TV\nX= advertising['TV']\nX.head()","c5e371cb":"y= advertising['Sales']\ny.head()","7e16cc77":"from sklearn.model_selection import train_test_split#split your data to predict from available data\nX_train, X_test, y_train, y_test = train_test_split(X,y,train_size=0.7,random_state=100 )\n","93daf7e0":"# Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","e8822be4":"import numpy as np\nX_train = X_train[:, np.newaxis]#add a second dimension\nX_test = X_test[:, np.newaxis]\nprint(X_train.shape)#see how it looks like\n","dc7b8d15":"from sklearn.linear_model import LinearRegression #import package for linear regression\nlr = LinearRegression()#Creating a LinearRegression object\nlr.fit(X_train, y_train)#Run Linear Regression on prepared data\n","9d31b4d7":"y_pred = lr.predict(X_test)#Derive predictions from the test dataset: X_test\n#print (y_pred.shape)","4375b85b":"import matplotlib.pyplot as plt#Import another plotting package\nlr_line = [i for i in range(1,61,1)]#create indices for your prediciton\ngraph = plt.figure()#create an object named graph to title the graph\nplt.plot(lr_line, y_test, color=\"green\", linewidth=3)#Actual Values\nplt.plot(lr_line, y_pred, color=\"purple\", linestyle='-.')#Predicted Values\ngraph.suptitle(\"Actual versus Predicted Values\")#Title\nplt.xlabel(\"Index\")#label the axis\nplt.ylabel(\"Sales\")","3951e2a3":"#This time you do not need to import the package since you've done it earlier\n#1 create indices for your prediciton\n#2 create an object named graph to title the graph\n#3 plot the Error Values that are defined by the difference between the Actual Values and the Predicted Values \n#4 Title the graph as \"Error in Predicted Values\"\n#5 xlabel should be plotted as \"Index\"\n#6 ylabel should be plotted as \"ytest-ypred\"","7b7c2518":"#from sklearn.metrics import mean_squared_error, r2_score\n#mse = mean_squared_error(y_test, y_pred)\n#r_squared = r2_score(y_test, y_pred)","94ebf38f":"#print('Mean_Squared_Error :' ,mse)\n#print('r_square_value :' ,r_squared)","e2bcd6ab":"#plt.scatter(y_test,y_pred, color=\"red\")#plot to see y values from test set versus predicted y values ","f8b2016f":"**Importing and Running Linear Regression**","c6c591d6":"**Assigning the x and y values**","75cc45f8":"**Uncomment the following code to see and understand error values and scores of this Linear Prediction model**","219ff82a":"**Predicting with the test values**","bef8fa5d":"**Congrats! Now you know how to run Linear Regression models and how to see their error margins. You can import your own datasets and do regression on them using the code provided here.**","51ae4a95":"**Splitting Data**","08dd4a00":"**Fork this notebook**. **Rename your copy**. **Do not Edit this copy**","f5a5f001":"**Now Create a graph that shows the error in this Linear Prediction**","582347eb":"**Run the codes below and try to understand the executions**"}}