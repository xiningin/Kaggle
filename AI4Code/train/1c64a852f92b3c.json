{"cell_type":{"de3a4c9c":"code","c149f84e":"code","cdb78ab1":"code","529c8fd6":"code","f5459bfd":"code","59b47ac0":"code","59fbbc39":"code","9044b0d7":"code","fac96d9e":"code","4983e057":"code","01517ba1":"code","1bdd8d1f":"code","325cdb02":"markdown","41f2a976":"markdown","4d5d3d1a":"markdown"},"source":{"de3a4c9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c149f84e":"train=pd.read_csv('\/kaggle\/input\/gujarati-news-dataset\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/gujarati-news-dataset\/valid.csv')","cdb78ab1":"train.head()","529c8fd6":"test.head()","f5459bfd":"X=train['headline']\ny=train['label']","59b47ac0":"train['label'].value_counts()","59fbbc39":"from sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.svm import LinearSVC\n\ntext_clf = Pipeline([('tfidf', TfidfVectorizer()),\n                     ('clf', LinearSVC()),\n])","9044b0d7":"text_clf.fit(X, y)  ","fac96d9e":"test_X=test['headline']\ntest_y=test['label']","4983e057":"predictions = text_clf.predict(test_X)","01517ba1":"predictions","1bdd8d1f":"from sklearn import metrics\n\ncm = metrics.confusion_matrix(test_y, predictions)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix'\nplt.title(all_sample_title, size = 15);","325cdb02":"## The final check..","41f2a976":"## Does it work on gujarati datasets?","4d5d3d1a":"Yes, it does work.."}}