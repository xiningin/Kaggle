{"cell_type":{"50d74295":"code","352c2937":"code","03378ed9":"code","ff06a008":"code","50eb2478":"code","12749512":"code","1c44ceed":"code","820fd859":"code","df1942c3":"code","a27f4968":"code","ca7dc01c":"code","5c9ef7c4":"code","2635ba3f":"code","b07e2ffa":"code","987cf6a7":"code","f5e322ce":"code","46805965":"code","76d1fd49":"code","275f8ea2":"code","d06fce9e":"markdown"},"source":{"50d74295":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","352c2937":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-mar-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-mar-2021\/test.csv')","03378ed9":"train.head()","ff06a008":"test.head()","50eb2478":"train.info()","12749512":"test.info()","1c44ceed":"cat_train = [feature for feature in train.columns if 'cat' in feature]\ncont_train =[feature for feature in train.columns if 'cont' in feature]\ncat_test = [feature for feature in test.columns if 'cat' in feature]\ncont_test =[feature for feature in test.columns if 'cont' in feature]","820fd859":"i = 1\nplt.figure()\nfig, ax = plt.subplots(6, 2,figsize=(20, 24))\nfor feature in cont_train:\n    plt.subplot(6, 2,i)\n    sns.histplot(train[feature],color=\"blue\", kde=True)\n    plt.xlabel(feature, fontsize=9); plt.legend()\n    i += 1\nplt.show()","df1942c3":"i = 1\nplt.figure()\nfig, ax = plt.subplots(6, 2,figsize=(20, 24))\nfor feature in cont_test:\n    plt.subplot(6, 2,i)\n    sns.histplot(test[feature],color=\"blue\", kde=True)\n    plt.xlabel(feature, fontsize=9); plt.legend()\n    i += 1\nplt.show()","a27f4968":"train  = train.drop('id', axis = 'columns')\ntest  = test.drop('id', axis = 'columns')","ca7dc01c":"plt.figure(figsize=(12,12))\nsns.heatmap(train.corr(), annot=True)","5c9ef7c4":"plt.figure(figsize=(12,12))\nsns.heatmap(test.corr(), annot=True)","2635ba3f":"sns.catplot(x=\"target\", kind=\"count\", data=train)","b07e2ffa":"categorical_cols = ['cat'+str(i) for i in range(19)]\ncontinous_cols = ['cont'+str(i) for i in range(11)]","987cf6a7":"cols=categorical_cols+continous_cols\ntrain_objs_num = len(train)\ndataset = pd.concat(objs=[train[cols], test[cols]], axis=0)\ndataset_preprocessed = pd.get_dummies(dataset,columns=categorical_cols)\ntrain_preprocessed = dataset_preprocessed[:train_objs_num]\ntest_preprocessed = dataset_preprocessed[train_objs_num:]","f5e322ce":"from sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import StratifiedKFold\n\nfrom lightgbm import LGBMClassifier\n\n\npreds = np.zeros(test.shape[0])        \nkf = StratifiedKFold(n_splits=5,random_state=48,shuffle=True)                  \nauc=[]   # list contains AUC for each fold  \nn=0   \nfor trn_idx, test_idx in kf.split(train_preprocessed,train['target']):\n    X_tr,X_val=train_preprocessed.iloc[trn_idx],train_preprocessed.iloc[test_idx]\n    y_tr,y_val=train['target'].iloc[trn_idx],train['target'].iloc[test_idx]\n    model = LGBMClassifier() \n    model.fit(X_tr,y_tr,eval_set=[(X_val,y_val)],early_stopping_rounds=100,verbose=False) \n    preds+=model.predict_proba(test_preprocessed)[:, 1]\/kf.n_splits \n    auc.append(roc_auc_score(y_val, model.predict_proba(X_val)[:, 1])) \n    print(n+1,auc[n])                                                                                       \n    n+=1     ","46805965":"preds","76d1fd49":"sub = pd.read_csv('\/kaggle\/input\/tabular-playground-series-mar-2021\/sample_submission.csv')\nsub.head()","275f8ea2":"sub['target'] = preds\nsub.to_csv('Subs.csv', index=False)","d06fce9e":"High correlated features in train datasest (above 0.7):\n1. cont0 - cont10\n2. cont7 - cont10\n3. cont0 - cont7"}}