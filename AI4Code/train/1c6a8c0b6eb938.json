{"cell_type":{"a27ae8f5":"code","c6e38ad7":"code","e3d04112":"code","0856cacf":"code","38ad5d79":"code","1c95b213":"code","6a7f3dd5":"code","9c1e4ce7":"code","bcd59bc4":"code","aef63c9c":"code","d099f4db":"code","32140b8f":"code","6b695710":"code","cb9fac30":"code","9b8df5fd":"code","01af76f7":"code","5ec90c80":"code","c13b5633":"code","39c52479":"code","b6063c26":"code","c6e549b1":"code","636ce3b9":"code","a54454d2":"code","b37f8a57":"code","8ddaab81":"code","772a6abb":"code","271c5b04":"code","ad4a2356":"code","a5654c4a":"code","329b6876":"code","bbb1fc0e":"code","06fb93a5":"code","c2fb3a86":"code","8f408fc6":"code","934ba432":"code","2daa8c6a":"code","5acec9b0":"code","1fad1577":"code","26b6d9a7":"code","b1b1a60a":"code","4f6b1fa0":"code","fe9b2cd0":"code","5c145de7":"code","7a75a145":"code","ce5cdc9e":"code","bff10090":"code","82a53d44":"code","5a8cf539":"code","07a13f5d":"code","838f11fb":"markdown","152587f3":"markdown","460eeef8":"markdown","20a0478b":"markdown","e382533e":"markdown","99396863":"markdown","0fcf7099":"markdown","59b6309b":"markdown","fb63a58f":"markdown","f009b221":"markdown","e924f32d":"markdown","d8b2fb8a":"markdown","3e180c71":"markdown","4ae16b58":"markdown","09f81335":"markdown","56990574":"markdown","05357d11":"markdown","ae6c5b58":"markdown","efa621d1":"markdown","f561de28":"markdown","88cc5d63":"markdown","e673cdcf":"markdown","37dc60f0":"markdown"},"source":{"a27ae8f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c6e38ad7":"!pip install openpyxl","e3d04112":"df = pd.read_excel('\/kaggle\/input\/teens-favourite-apps\/Teens Favorite Apps.xlsx')\ndf.head()","0856cacf":"df.isnull().sum()","38ad5d79":"df[\"App\"].value_counts()","1c95b213":"#Code by Ayush Yadav https:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook\n\nfavorite_app=['App','Survey Date','Date','% of Teens']","6a7f3dd5":"#Code by Ayush Yadav https:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook \n\nfor i in favorite_app:\n    if i!='Survey Date':\n        plt.figure(figsize=(8,6))\n        df[i].value_counts().plot.pie(autopct='%1.1f%%')\n        centre=plt.Circle((0,0),0.7,fc='white')\n        fig=plt.gcf()\n        fig.gca().add_artist(centre)\n        plt.xlabel(i)\n        plt.ylabel('')\n        plt.figure();","9c1e4ce7":"#Code by Ayush Yadav https:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook \n\nplt.figure(figsize=(10,8))\nsns.countplot(df['App'],hue=df['% of Teens']);","bcd59bc4":"#Code by Ayush Yadav https:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook \n\nplt.figure(figsize=(15,8))\nsns.lineplot(df['Date'],df['App'],hue=df['% of Teens']);","aef63c9c":"#Code by Ayush Yadav https:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook \n\nplt.figure(figsize=(10,8))\nsns.countplot(df['Survey Date'],\n              hue=df['% of Teens']);","d099f4db":"#https:\/\/stackoverflow.com\/questions\/62759022\/typeerror-invalid-type-promotion-while-fitting-a-logistic-regression-model-in-s\n#Answered by Sal_H\n\ndf['Date'] = pd.to_datetime(df['Date'],infer_datetime_format=True)","32140b8f":"#https:\/\/stackoverflow.com\/questions\/62759022\/typeerror-invalid-type-promotion-while-fitting-a-logistic-regression-model-in-s\n#Answered by Sal_H\n\ndf['Date']=df['Date'].apply(lambda x: x.toordinal())","6b695710":"x=df.copy()\nx.drop('App',axis=1,inplace=True)\ny=df['App']","cb9fac30":"cat=[i for i in x.columns if x[i].dtypes=='O']","9b8df5fd":"from sklearn.preprocessing import OrdinalEncoder,LabelEncoder\nencode=OrdinalEncoder()\nlabe=LabelEncoder()","01af76f7":"#using ordinal encoder for independent features\nfor i in cat:\n    x[i]=encode.fit_transform(x[i].values.reshape(-1,1))\n\n#Using label encoder for Label Column\ny=labe.fit_transform(y)","5ec90c80":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()","c13b5633":"xd=scaler.fit_transform(x)\nx=pd.DataFrame(xd,columns=x.columns)","39c52479":"from sklearn.ensemble import RandomForestClassifier\nm=RandomForestClassifier()\nm.fit(x,y)","b6063c26":"#plot graph of feature importances for better visualization\nfeat_importances = pd.Series(m.feature_importances_, index=x.columns)\nplt.figure(figsize=(10,8))\nfeat_importances.nlargest(10).plot(kind='barh')\nplt.show()","c6e549b1":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","636ce3b9":"selection = SelectKBest(score_func=chi2, k='all')\nfit = selection.fit(x,y)","a54454d2":"dfscores = pd.DataFrame(fit.scores_)\ndfcolumns = pd.DataFrame(x.columns)\nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['Features','Score']  #naming the dataframe columns","b37f8a57":"print(featureScores.nlargest(10,'Score'))  #print10??? best features I have only 4!\nfeat=list(featureScores.nlargest(10,'Score')['Features'])","8ddaab81":"from sklearn.decomposition import PCA\npca = PCA().fit(x)","772a6abb":"fig, ax = plt.subplots(figsize=(20,10))\nxi = np.arange(1, 4, step=1)\nyi = np.cumsum(pca.explained_variance_ratio_)\n\nplt.ylim(0.0,1.1)\nplt.plot(xi, yi, marker='o', linestyle='--', color='b')\n\nplt.xlabel('Number of Components')\nplt.xticks(np.arange(0, 3, step=1)) #change from 0-based array index to 1-based human-readable label\nplt.ylabel('Cumulative variance (%)')\nplt.title('The number of components needed to explain variance')\n\nplt.axhline(y=1, color='r', linestyle='-')\nplt.text(0.5, 0.85, '100% cut-off threshold', color = 'red', fontsize=16)\n\nax.grid(axis='x')\nplt.show()","271c5b04":"pca=PCA(n_components=3)\nx=pca.fit_transform(x)\nx=pd.DataFrame(x)\nx.head()","ad4a2356":"from sklearn.model_selection import train_test_split,cross_val_score\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\n\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report,roc_auc_score,roc_curve","a5654c4a":"xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=7)","329b6876":"model=RandomForestClassifier()\nmodel.fit(xtrain,ytrain)\np=model.predict(xtest)\ns=cross_val_score(model,x,y,cv=4)","bbb1fc0e":"print('Accuracy',np.round(accuracy_score(p,ytest),4))\nprint('----------------------------------------------------------')\nprint('Mean of Cross Validation Score',np.round(s.mean(),4))\nprint('----------------------------------------------------------')\nprint('Confusion Matrix')\nprint(confusion_matrix(p,ytest))\nprint('----------------------------------------------------------')\nprint('Classification Report')\nprint(classification_report(p,ytest))","06fb93a5":"model=XGBClassifier(verbosity=0)\nmodel.fit(xtrain,ytrain)\np=model.predict(xtest)\ns=cross_val_score(model,x,y,cv=4)","c2fb3a86":"print('Accuracy',np.round(accuracy_score(p,ytest),4))\nprint('----------------------------------------------------------')\nprint('Mean of Cross Validation Score',np.round(s.mean(),4))\nprint('----------------------------------------------------------')\nprint('Confusion Matrix')\nprint(confusion_matrix(p,ytest))\nprint('----------------------------------------------------------')\nprint('Classification Report')\nprint(classification_report(p,ytest))","8f408fc6":"from sklearn.model_selection import RandomizedSearchCV","934ba432":"params={'n_estimators':[100, 300, 500, 700],\n        'min_samples_split':[1,2,3,4],\n        'min_samples_leaf':[1,2,3,4],\n        'max_depth':[None,1,2,3,4,5,6,7,8,9,10,15,20,25,30,35,40]}","2daa8c6a":"g=RandomizedSearchCV(RandomForestClassifier(),params,cv=4)","5acec9b0":"g.fit(xtrain,ytrain)","1fad1577":"print(g.best_estimator_)\nprint(g.best_params_)\nprint(g.best_score_)","26b6d9a7":"m=RandomForestClassifier(max_depth=20, min_samples_leaf=4, min_samples_split=4,n_estimators=700)\nm.fit(xtrain,ytrain)\np=m.predict(xtest)\nscore=cross_val_score(m,x,y,cv=4)","b1b1a60a":"print('Accuracy',np.round(accuracy_score(p,ytest),4))\nprint('----------------------------------------------------------')\nprint('Mean of Cross Validation Score',np.round(s.mean(),4))\nprint('----------------------------------------------------------')\nprint('Confusion Matrix')\nprint(confusion_matrix(p,ytest))\nprint('----------------------------------------------------------')\nprint('Classification Report')\nprint(classification_report(p,ytest))","4f6b1fa0":"params={'n_estimators':[100,200,300,400,500],\n      'learning_rate':[0.001,0.01,0.10,],\n      'subsample':[0.5,1],\n      'max_depth':[1,2,3,4,5,6,7,8,9,10]}","fe9b2cd0":"g=RandomizedSearchCV(XGBClassifier(),params,cv=4)","5c145de7":"g.fit(xtrain,ytrain)","7a75a145":"print(g.best_estimator_)\nprint(g.best_params_)\nprint(g.best_score_)","ce5cdc9e":"m=XGBClassifier(max_depth=10,learning_rate=0.1,n_estimators=500,subsample=0.5)\nm.fit(xtrain,ytrain)\np=m.predict(xtest)\nscore=cross_val_score(m,x,y,cv=4)","bff10090":"print('Accuracy',np.round(accuracy_score(p,ytest),4))\nprint('----------------------------------------------------------')\nprint('Mean of Cross Validation Score',np.round(s.mean(),4))\nprint('----------------------------------------------------------')\nprint('Confusion Matrix')\nprint(confusion_matrix(p,ytest))\nprint('----------------------------------------------------------')\nprint('Classification Report')\nprint(classification_report(p,ytest))","82a53d44":"model=XGBClassifier(max_depth=2,learning_rate=0.01,n_estimators=500,subsample=1)\nmodel.fit(xtrain,ytrain)\np=model.predict(xtest)\nscore=cross_val_score(model,x,y,cv=4)","5a8cf539":"print('Accuracy',np.round(accuracy_score(p,ytest),4))\nprint('----------------------------------------------------------')\nprint('Mean of Cross Validation Score',np.round(s.mean(),4))\nprint('----------------------------------------------------------')\nprint('Confusion Matrix')\nprint(confusion_matrix(p,ytest))\nprint('----------------------------------------------------------')\nprint('Classification Report')\nprint(classification_report(p,ytest))","07a13f5d":"import joblib\njoblib.dump(model,'Retention.obj')","838f11fb":"#Attention xi=np.arange (1,4, step=1)  I wrote 4 because there are 4 features.\n\nThen,  plt.xticks(np.arange(0,3, step=1)  I wrote 3, one less than 4.\nOn the original code was 73 and 72","152587f3":"#XGBoost","460eeef8":"#Evaluation Metrics","20a0478b":"#Next time instead of the \"analysis\" I tried above. I'll just Google it!\n\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTTZ7OMFqCT762SAnXdNX2Gh3goosx72nQniQ&usqp=CAU)visualcapitalist.com","e382533e":"#Since I got TypeError: invalid type promotion at the snippet below:\n\nxd=scaler.fit_transform(x)\n\nRun pd.to_datetime to avoid that error. That will Date \"become\" int64 instead of datetime.","99396863":"#Hyperparameter Tuning","0fcf7099":"#The best Model","59b6309b":"![](https:\/\/www.familyzone.com\/hubfs\/Instagram%20Template%20%281%29-702912-edited.jpg)familyzone.com","fb63a58f":"#Using chi2 test","f009b221":"#Separating the label from rest of the features","e924f32d":"#Using Feature importance of Random Forest","d8b2fb8a":"#Number of components I wrote one less than the 4 features.\n\nOn the original code was 29 (features choosen).\n\n#Don\u2019t choose the number of components manually. \n\nInstead of that, use the option that allows you to set the variance of the input that is supposed to be explained by the generated components.","3e180c71":"#Univariate Analysis","4ae16b58":"#Scaling\n\n#Scale the data to the range between 0 and 1 before using PCA!","09f81335":"#Encoding Categorical Features","56990574":"#On the original cv=10. I changed to 4 (number of features??). To avoid errors.","05357d11":"##Code by Ayush Yadav https:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook","ae6c5b58":"#Random Forest","efa621d1":"#PCA","f561de28":"#Thank you Ayush Yadav for the script.\n\nhttps:\/\/www.kaggle.com\/smokingkrils\/indian-e-commerce-analysis-and-customer-retention\/notebook","88cc5d63":"#To avoid error add k='all' in the snippet below. Otherwise you'll get:\n\nValueError: k should be >=0, <= n_features = 3; got 10. Use k='all' to return all features.","e673cdcf":"#XGBoost","37dc60f0":"#On the plotted chart, we see what number of principal components we need.\n\nhttps:\/\/www.mikulskibartosz.name\/pca-how-to-choose-the-number-of-components\/"}}