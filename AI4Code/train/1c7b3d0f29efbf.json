{"cell_type":{"1891f3d6":"code","f386200b":"code","4b3a4394":"code","baf56db4":"code","c6078631":"code","5004ec5a":"code","32e21d59":"code","0c5725f3":"code","c34aede5":"code","0217c7f6":"code","de106ded":"code","0b53e7cf":"code","ab6e5423":"code","49c68125":"markdown","08d3bf2f":"markdown","85bc231b":"markdown","c0278d5b":"markdown","e55057d8":"markdown","0a1fc3e8":"markdown","00ba2e60":"markdown","c7638dbe":"markdown","a5694622":"markdown","e1567c6f":"markdown","e7b9eb9b":"markdown","c028514b":"markdown","3142cd67":"markdown","137c2066":"markdown","b858b676":"markdown","bc57d924":"markdown","780e17ab":"markdown","b4fe7918":"markdown","fb349623":"markdown","8c2d74e9":"markdown","b1c31b09":"markdown","3c2f6659":"markdown","4a9fb3d4":"markdown","fad20f43":"markdown","9664a02b":"markdown","50a60bb7":"markdown","844a4151":"markdown","98a67845":"markdown"},"source":{"1891f3d6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(action=\"ignore\")\n\nimport plotly as py\nimport plotly.graph_objects as go\nfrom plotly import tools\n\n# function to drop first row with questions\ndef drop(df):\n    df = df.drop(df.index[0])\n    return df\n\n# read the data for 2017, 2018, 2019, and 2020\ndf_2017 = pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv',encoding='latin1')\ndf_2018 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv',encoding='latin1')\ndf_2019 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf_2020 = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\n\n# drop first row with questions\ndf_2018 = drop(df_2018)\ndf_2019 = drop(df_2019)\ndf_2020 = drop(df_2020)\n\n# get questions numbering\nnum_qn = df_2020.columns\n\n# calculation of relative % of female\/woman in the participants\nstat_2017 = df_2017[\"GenderSelect\"][0:].value_counts()\nf_2017 = round(stat_2017[\"Female\"]\/np.sum(stat_2017)*100,2)\n\nstat_2018 = df_2018[\"Q1\"][0:].value_counts()\nf_2018 = round(stat_2018[\"Female\"]\/np.sum(stat_2018)*100,2)\n\nstat_2019 = df_2019[\"Q2\"][0:].value_counts()\nf_2019 = round(stat_2019[\"Female\"]\/np.sum(stat_2019)*100,2)\n\nstat_2020 = df_2020[\"Q2\"][0:].value_counts()\nf_2020 = round(stat_2020[\"Woman\"]\/np.sum(stat_2020)*100,2)","f386200b":"color = ['rgb(49,130,189)']\ncolor_m = ['rgb(49,130,189)', '#de6560']\n\nmode_size = [12]\nline_size = [5]\n\nx_data = np.vstack((np.arange(2017, 2021),)*1)\n\ny_data = np.array([\n    [f_2017, f_2018,\n     f_2019, f_2020]\n])\n\nfig = go.Figure()\n\nfor i in range(0, 1):\n    fig.add_trace(go.Scatter(x=x_data[i], y=y_data[i], mode='lines',\n        line=dict(color=color[i], width=line_size[i]),\n        connectgaps=True,\n    ))\n\n    # endpoints\n    fig.add_trace(go.Scatter(\n        x=[x_data[i][0], x_data[i][-1]],\n        y=[y_data[i][0], y_data[i][-1]],\n        mode='markers',\n        marker=dict(color=color_m[i], size=mode_size[i])\n    ))\n\nfig.update_layout(\n        title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Increase in percentage of female participants<\/span>\",\n        xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='PT sans',\n            size=15,\n            color='rgb(82, 82, 82)',\n \n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    autosize=False,\n    margin=dict(\n        autoexpand=True,\n        l=200,\n        r=20,\n        t=100,\n    ),\n    width = 600,\n    height = 400,\n    showlegend=False,\n    plot_bgcolor='white'\n)\n\nannotations = []\n\n\nfor y_trace, color in zip(y_data, color):\n    \n    annotations.append(dict(xref='paper', x=0.04, y=y_trace[0],\n                                  xanchor='left', yanchor='bottom',\n                                  text='{}%'.format(y_trace[0]),\n                                  font=dict(family='PT sans',\n                                            size=18,\n                                           color='rgb(82, 82, 82)'),\n                                  showarrow=False))\n    \n    annotations.append(dict(xref='paper', x=0.9, y=y_trace[3],\n                                  xanchor='right', yanchor='middle',\n                                  text='{}%'.format(y_trace[3]),\n                                  font=dict(family='PT sans',\n                                            size=18,\n                                           color='rgb(82, 82, 82)'),\n                                  showarrow=False))\n\nannotations.append(dict(xref='paper', yref='paper', x=0.5, y=-0.2,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2017 - 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","4b3a4394":"age_2020 = df_2020[df_2020[\"Q2\"] == \"Woman\"][\"Q1\"].value_counts()\nage = []\npercent_age = []\nfor i,j in enumerate(age_2020.index):\n    age.append(j)\n    percent_age.append(round(age_2020[i]\/np.sum(age_2020)*100, 2))\n    \ncolor_first = '#de6560'\ncolor_rest = '#98c1d9'\n\nx_data = age\ny_data = percent_age\n\nwhite = \"<b style='color: #fff; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\nblack = \"<b style='color: #000; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\n\ntrace = go.Bar(\n    y = x_data,\n    x = y_data,\n    orientation = \"h\",\n    marker = dict(color = [color_first] + [color_rest]*10),\n    text = y_data,\n    texttemplate = [white]*6 + [black]*5,\n    textposition = [\"inside\"]*6 +[\"outside\"]*5,\n)\n\n\n\nlayout = dict(  \n    title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Age groups<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>female paricipants<\/span><br>\",\n    margin = dict(t=150),  \n    legend=dict(\n                orientation=\"h\",\n                yanchor='top',xanchor='center',\n                y= 1.06,x=0.5,\n                font=dict(size= 16),\n               ),\n    \n    xaxis=dict(side=\"top\",\n               showline=True,\n               showgrid=True,\n               showticklabels=True,\n               linecolor='rgb(204, 204, 204)',\n               linewidth=2,\n               ticks='outside',\n               tickfont=dict(\n                   family='PT sans',\n                   size=14,\n                   color='rgb(82, 82, 82)'\n               ),\n              ),\n    \n    yaxis= dict(autorange=\"reversed\",\n                       tickfont=dict(\n                            family='PT sans',\n                            size=18,\n                       ),\n                   color='rgb(82, 82, 82)'\n               ),\n    \n    barmode = \"group\",\n    bargap = 0.05,\n    bargroupgap =0.1,\n    width = 900,\n    height= 550,\n    plot_bgcolor='white'  \n)\n\n\nfig = go.Figure(data = trace, layout = layout)\n\nfig.add_annotation(dict(xref='paper', yref='paper', x=0.5, y=0,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\n\nfig.show()","baf56db4":"import pycountry\n\ncountry_2020 = df_2020[df_2020[\"Q2\"] == \"Woman\"][\"Q3\"]\ncountry_2020 = country_2020.value_counts()\n\ncountry = []\npercent = []\nfor i,j in enumerate(country_2020.index):\n    country.append(j)\n    percent.append(round(country_2020[i]\/np.sum(country_2020)*100, 3))\n\ncountry[1] = \"United States\"\ncountry[4] = \"United Kingdom\"\ncountry[7] = \"Russian Federation\"\ncountry[12] = \"Iran, Islamic Republic of\"\ncountry[13] = \"Taiwan, Province of China\"\ncountry[20] = \"Korea, Republic of\"\ncountry[-1] = \"Korea, Democratic People's Republic of\"\n    \ninput_countries = country\n\ncountries = {}\nfor cntry in pycountry.countries:\n    countries[cntry.name] = cntry.alpha_3\n\ncodes = [countries.get(cntry, 'Unknown code') for cntry in input_countries]\n\ndel codes[2:3]\ndel percent[2:3]","c6078631":"fig = go.Figure(data=go.Choropleth(\n    locations = codes,\n    z = percent,\n    text = percent,\n    colorscale = 'Reds',\n    autocolorscale=False,\n    reversescale=False,\n    marker_line_color='darkgray',\n    marker_line_width=0.5,\n    colorbar_title = \"<span style='color:#000; font-size:20px; font-family:PT Sans'> %<\/span><br>\",\n))\n\nfig.update_layout(\n    title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Location<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>female participants<\/span><br>\",\n    margin = dict(t=150),\n    geo=dict(\n        showframe=False,\n        showcoastlines=False,\n        projection_type='equirectangular',\n    ),\n    width = 800, \n    height = 550,\n    annotations = [dict(xref='paper', yref='paper', x=0.5, y=0,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False)\n                  ]\n)\n\nfig.show()","5004ec5a":"education_2020 = df_2020[df_2020[\"Q2\"] == \"Woman\"][\"Q4\"].value_counts()\neducation = []\npercent_edu = []\nfor i,j in enumerate(education_2020.index):\n    education.append(j)\n    percent_edu.append(round(education_2020[i]\/np.sum(education_2020)*100, 2))\n","32e21d59":"color_first = '#de6560'\ncolor_rest = '#98c1d9'\n\nx_data = percent_edu\ny_data = education\n\nwhite = \"<b style='color: #fff; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\nblack = \"<b style='color: #000; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\n\ntrace = go.Bar(\n    x = x_data ,\n    y = y_data,\n    orientation = \"h\",\n    marker = dict(color = [color_first] + [color_rest]*6),\n    text = x_data,\n    texttemplate = [white]*2 +[black]*5,\n    textposition = [\"inside\"]*2 +[\"outside\"]*5,\n)\n\nlayout = dict(\n    title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Level of education<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>female participants<\/span><br>\",\n    margin = dict(t=150),\n    legend=dict(orientation=\"h\",\n                yanchor='top',xanchor='center',\n                y= 1.06,x=0.5,\n                font=dict(size= 16),\n               ),\n    xaxis=dict(autorange=\"reversed\",\n               side=\"right\",\n               showline=True,\n               showgrid=True,\n               showticklabels=True,\n               linecolor='rgb(204, 204, 204)',\n               linewidth=2,\n               ticks='outside',\n               tickfont=dict(\n                   family='PT sans',\n                   size=14,\n                   color='rgb(82, 82, 82)'\n               ),\n              ),\n    yaxis= dict(autorange=\"reversed\",\n                side = \"right\",\n                       tickfont=dict(\n                            family='PT sans',\n                            size=18,\n                            color='rgb(82, 82, 82)',\n                       ),\n               ),\n    barmode = \"group\",\n    bargap = 0.05,\n    bargroupgap =0.1,\n    width = 900,\n    height= 500,\n    plot_bgcolor='white'  \n)\n\n\nfig = go.Figure(data = trace, layout = layout)\n\nfig.add_annotation(dict(xref='paper', yref='paper', x=1, y=-0.11,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\nfig.show()","0c5725f3":"qns = [x for x in num_qn]\n\ndef data(qnn):\n    qn = [x for x in qns if qnn in x]\n    name = []\n    \n    for q in qn:\n        for x in df_2020[q].unique():\n            name.append(x)\n    name = [x for x in name if str(x) != \"nan\"]\n    name = [x.strip(' ') for x in name]\n\n    name_percent = ((df_2020.shape[0] - df_2020[qn].isnull().sum()))\/df_2020.shape[0]\n    name_percent.index = name\n\n    name_percent = name_percent.sort_values(ascending=False)\n\n    name = []\n    percent_name = []\n    for i,j in enumerate(name_percent.index):\n        name.append(j)\n        percent_name.append(round(name_percent[i]*100, 2))\n        \n    return name, percent_name","c34aede5":"language, percent_lng = data(\"Q7\")\n\ncolor_first = '#de6560'\ncolor_rest = '#98c1d9'\n\nx_data = percent_lng\ny_data = language\n\nwhite = \"<b style='color: #fff; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\nblack = \"<b style='color: #000; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\n\ntrace = go.Bar(\n    x = x_data,\n    y = y_data,\n    orientation = \"h\",\n    marker = dict(color = [color_first] + [color_rest]*12),\n    text = x_data,\n    texttemplate = [white]*7 +[black]*6,\n    textposition = [\"inside\"]*7 +[\"outside\"]*6,\n)\n\nlayout = dict(\n  title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Popularity of programming languages<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>all participants<\/span><br>\",\n    margin = dict(t=150),\n    legend=dict(orientation=\"h\",\n                yanchor='top',xanchor='center',\n                y= 1.06,x=0.5,\n                font=dict(size= 16),\n               ),\n    xaxis=dict(side=\"top\",\n               showline=True,\n               showgrid=True,\n               showticklabels=True,\n               linecolor='rgb(204, 204, 204)',\n               linewidth=2,\n               ticks='outside',\n               tickfont=dict(\n                   family='PT sans',\n                   size=14,\n                   color='rgb(82, 82, 82)'\n               ),\n              ),\n    yaxis= dict(autorange=\"reversed\",\n                       tickfont=dict(\n                            family='PT sans',\n                            size=18,\n                            color='rgb(82, 82, 82)',\n                       ),\n               ),\n    barmode = \"group\",\n    bargap = 0.05,\n    bargroupgap =0.1,\n    width = 800,\n    height= 550,\n    plot_bgcolor='white'  \n)\n\n\n\nfig = go.Figure(data = trace, layout = layout)\n\nfig.add_annotation(dict(xref='paper', yref='paper', x=0.5, y=0,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\n\n\nfig.show()\n\n","0217c7f6":"ide, percent_ide = data(\"Q9\")\n\ncolor_first = '#de6560'\ncolor_rest = '#98c1d9'\n\nx_data = percent_ide\ny_data = ide\n\nwhite = \"<b style='color: #fff; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\nblack = \"<b style='color: #000; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\n\ntrace = go.Bar(\n    y = y_data,\n    x = x_data,\n    orientation = \"h\",\n    marker = dict(color = [color_first] + [color_rest]*11),\n    text = percent_ide,\n    texttemplate = [white]*8 +[black]*4,\n    textposition = [\"inside\"]*8 +[\"outside\"]*4,\n)\n\nlayout = dict(\n    title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>IDE popularity<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>all participants<\/span><br>\",\n    margin = dict(t=150),\n    legend=dict(orientation=\"h\",\n                yanchor='top',xanchor='center',\n                y= 1.06,x=0.5,\n                font=dict(size= 16),\n               ),\n    xaxis=dict(autorange=\"reversed\",\n               side=\"top\",\n               showline=True,\n               showgrid=True,\n               showticklabels=True,\n               linecolor='rgb(204, 204, 204)',\n               linewidth=2,\n               ticks='outside',\n               tickfont=dict(\n                   family='PT sans',\n                   size=14,\n                   color='rgb(82, 82, 82)'\n               ),\n              ),\n    yaxis= dict(autorange=\"reversed\",\n                side=\"right\",\n                       tickfont=dict(\n                            family='PT sans',\n                            size=18,\n                            color='rgb(82, 82, 82)',\n                       ),\n               ),\n    barmode = \"group\",\n    bargap = 0.05,\n    bargroupgap =0.1,\n    width = 900,\n    height= 550,\n    plot_bgcolor='white'  \n)\n\n\nfig = go.Figure(data = trace, layout = layout)\n                \nfig.add_annotation(dict(xref='paper', yref='paper', x=0.9, y=-0.03,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\nfig.show()","de106ded":"wtl, percent_wtl = data(\"Q37\")\nwtlm, percent_wtlm = data(\"Q39\")","0b53e7cf":"color_first = '#de6560'\ncolor_rest = '#98c1d9'\n\nx_data = percent_wtl\ny_data = wtl\n\nwhite = \"<b style='color: #fff; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\nblack = \"<b style='color: #000; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\n\ntrace = go.Bar(\n    y = y_data,\n    x = x_data,\n    orientation = \"h\",\n    marker = dict(color = [color_first] + [color_rest]*11),\n    text = percent_wtl,\n    texttemplate = [white]*8 +[black]*4,\n    textposition = [\"inside\"]*8 +[\"outside\"]*4,\n)\n\nlayout = dict(\n    title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Learning platform popularity<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>all participants<\/span><br>\",\n    margin = dict(t=150),\n    legend=dict(orientation=\"h\",\n                yanchor='top',xanchor='center',\n                y= 1.06,x=0.5,\n                font=dict(size= 16),\n               ),\n    xaxis=dict(autorange=\"reversed\",\n               side=\"top\",\n               showline=True,\n               showgrid=True,\n               showticklabels=True,\n               linecolor='rgb(204, 204, 204)',\n               linewidth=2,\n               ticks='outside',\n               tickfont=dict(\n                   family='PT sans',\n                   size=14,\n                   color='rgb(82, 82, 82)'\n               ),\n              ),\n    yaxis= dict(autorange=\"reversed\",\n                side=\"right\",\n                       tickfont=dict(\n                            family='PT sans',\n                            size=18,\n                            color='rgb(82, 82, 82)',\n                       ),\n               ),\n    barmode = \"group\",\n    bargap = 0.05,\n    bargroupgap =0.1,\n    width = 900,\n    height= 550,\n    plot_bgcolor='white'  \n)\n\n\nfig = go.Figure(data = trace, layout = layout)\n                \nfig.add_annotation(dict(xref='paper', yref='paper', x=0.9, y=-0.03,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\nfig.show()","ab6e5423":"\ncolor_first = '#de6560'\ncolor_rest = '#98c1d9'\n\nx_data = percent_wtlm\ny_data = wtlm\n\nwhite = \"<b style='color: #fff; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\nblack = \"<b style='color: #000; font-size:15px; font-family:PT Sans'> %{text}% <\/b>\"\n\ntrace = go.Bar(\n    x = x_data,\n    y = y_data,\n    orientation = \"h\",\n    marker = dict(color = [color_first] + [color_rest]*12),\n    text = x_data,\n    texttemplate = [white]*7 +[black]*6,\n    textposition = [\"inside\"]*7 +[\"outside\"]*6,\n)\n\nlayout = dict(\n  title = \"<span style='color:#000; font-size:25px; font-family:PT Sans'>Popularity of media platforms<\/span><br><span style='color:#969696; font-size: 20px; font-family:PT Sans'>all participants<\/span><br>\",\n    margin = dict(t=150),\n    legend=dict(orientation=\"h\",\n                yanchor='top',xanchor='center',\n                y= 1.06,x=0.5,\n                font=dict(size= 16),\n               ),\n    xaxis=dict(side=\"top\",\n               showline=True,\n               showgrid=True,\n               showticklabels=True,\n               linecolor='rgb(204, 204, 204)',\n               linewidth=2,\n               ticks='outside',\n               tickfont=dict(\n                   family='PT sans',\n                   size=14,\n                   color='rgb(82, 82, 82)'\n               ),\n              ),\n    yaxis= dict(autorange=\"reversed\",\n                       tickfont=dict(\n                            family='PT sans',\n                            size=18,\n                            color='rgb(82, 82, 82)',\n                       ),\n               ),\n    barmode = \"group\",\n    bargap = 0.05,\n    bargroupgap =0.1,\n    width = 800,\n    height= 550,\n    plot_bgcolor='white'  \n)\n\n\n\nfig = go.Figure(data = trace, layout = layout)\n\nfig.add_annotation(dict(xref='paper', yref='paper', x=0.1, y=0,\n                              xanchor='center', yanchor='top',\n                              text='Source: 2020 Kaggle Machine Learning & ' +\n                                   'Data Science Survey',\n                              font=dict(family='PT sans',\n                                        size=12,\n                                        color='rgb(150,150,150)'),\n                              showarrow=False))\n\n\n\nfig.show()\n\n","49c68125":"- Image with Monthy Python sketches are:\"The Lumberjack Song\" https:\/\/en.wikipedia.org\/wiki\/The_Lumberjack_Song, \"The Spanish Inquisition\" https:\/\/en.wikipedia.org\/wiki\/The_Spanish_Inquisition_(Monty_Python); \"Dead parrot sketch\" https:\/\/en.wikipedia.org\/wiki\/Dead_Parrot_sketch; \"The Ministry of Silly Walks\" https:\/\/en.wikipedia.org\/wiki\/The_Ministry_of_Silly_Walks; ","08d3bf2f":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_5.png?raw=true\" style=\"width: 800px;\"\/>","85bc231b":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_2.png?raw=true\" style=\"width: 700px;\"\/>","c0278d5b":"<span style='color:#000; font-size:25px; font-family:PT Sans'> References <\/span>","e55057d8":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>This magic snake suggested to the girl to show the world of data science. In this situation, it was like being in a dream to the girl. She decided to follow it, rather thinking that it is something unreal. However, one question was bothering her. <\/span>","0a1fc3e8":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>The girl was really grateful to the snake, as she has learned how to start. She has found answers to bothering questions. The figures she saw were very encouraging and she has no fear anymore.<\/span>\n\n<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_8.png?raw=true\" style=\"width: 800px;\"\/>","00ba2e60":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Moreover, female participants are highly educated. People with Master's, Bachelor's, and Doctor degrees are in the top three, representing more than 90% of female participants.<\/span>","c7638dbe":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>The girl was more than happy to learn these facts. She was very young, 21 years old, doing her Bachelor's study, and she had many friends from India and the US. She might think to meet them even here. However, she had a question about the programming language she need to learn to be able to work with data.<\/span>","a5694622":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_6.png?raw=true\" style=\"width: 800px;\"\/>","e1567c6f":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_1.png?raw=true\" width=\"600px\">","e7b9eb9b":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Girl was wondering if the Python programming language is named after a snake. However, true story was revealed.<\/span>","c028514b":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_3.png?raw=true\" style=\"width: 650px;\"\/>","3142cd67":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>While she was wandering, something strange happened. She heard a voice, but it wasn't a human being, it was a snake. Not an ordinary one, it was talking. Looked like an ordinary python, with a pattern on its skin, but was talking one.<\/span>","137c2066":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_9.png?raw=true\" style=\"width: 800px;\"\/>","b858b676":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Moreover, the majority of female participants are very young. The top three age categories are 22 - 24 years old, followed by 25 - 29 and 18 - 21. It highlights an interest in the field of Data Science and implies that a broad spectrum of analytical tools studied at Kaggle would lead to an increase in the number of qualitative scientific works. <\/span>","bc57d924":"- Images of a python were edited from the \"How to a Draw a Cute Snake\" https:\/\/www.wedrawanimals.com\/how-to-draw-a-cute-snake\/ ","780e17ab":"<span style='color:#000; font-size:35px; font-family:PT Sans'>AMAZING ADVENTURE<\/span>\n\n<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Once upon a time, a young and bright girl was wandering around and suddenly started thinking out loud. She had many thoughts. She wanted to become a scientist, wanted to improve people's lives, do something very good for our planet. She knew that she needs to learn, need to study programming, study how to handle big data that help her to test hypothesizes, and find answers to a question - why? The famous story of John Snow, who used data analysis found the reason for the cholera outbreak in London in 1854 and therefore had helped to save many lives, was inspiring for her. However, she was new to this and had so many unanswered questions.<\/span>","b4fe7918":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_4.png?raw=true\" style=\"width: 700px;\"\/>","fb349623":"- Images of a girl and the very last image were edited from the report \"State of Machine Learning and Data Science 2020\"\nhttps:\/\/www.kaggle.com\/kaggle-survey-2020","8c2d74e9":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Python is the most popular programming language with more than 77% of participants speaking it. Second and third places are taken by SQL and R. <\/span>","b1c31b09":"***","3c2f6659":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Online courses on Coursera and Kaggle are the most popular. Media platforms, such as Kaggle notebooks, forums, or Youtube have proven to be really helpful. Almost 40 % of participants are using them.<\/span>\n","4a9fb3d4":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Now the girl has learned that she can start working with Jupyter products. However, she still had an issue in understanding what to do and how to do it. She needed some guidance and was looking for information about the courses and media platforms that might be of great help to her. Platforms that help her to make the first steps, guide her through obstacles, and help to grow into a great scientist.<\/span>","fad20f43":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>Passed some time. The girl has already joined Kaggle, made new friends, and really thankful for this amazing adventure.<\/span>\n\n<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>The End.<\/span>","9664a02b":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>The problem that women are underrepresented within science is well known. And we currently are fighting to overcome this problem. It is great to see that analysis of 4  annual surveys show an increase in the relative number of female participants over the last 4 years. It might indicate that the real increase in the percentage of female community in Kaggle, as well as in the field of Data Science.  <\/span>","50a60bb7":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>To show the girl how to easily start working with Python and learn it well, the snake took her on a trip to Jupyter. The fantastic planet. That happens to be the most popular integrated development environment (IDE). <\/span>","844a4151":"<span style='color:#000; font-size:18px; font-family:PT Sans; line-height: 1.5'>The participants are scattered all over the world, meaning that Kaggle community is very international. People from Brazil, Russia, India, the USA are in constant intercommunication, discussing problems, sharing solutions, and even competing with each other. <\/span>","98a67845":"<img src=\"https:\/\/github.com\/alexkhachikyan\/images_kaggle_survey\/blob\/main\/image_7.png?raw=true\" style=\"width: 700px;\"\/>"}}