{"cell_type":{"92080d85":"code","9d909d2c":"code","b4cde9e1":"code","d1fc63de":"code","22059b7b":"code","be9cd302":"code","e2a7d272":"code","b3cccdda":"code","5b82d688":"code","ff4fffa2":"markdown","c91aefac":"markdown","b7c86021":"markdown","3c2d9a71":"markdown","f7b63033":"markdown","af8b3eeb":"markdown","94513414":"markdown","af87d717":"markdown","af039fcf":"markdown","5b65c6c9":"markdown"},"source":{"92080d85":"!cp -r ..\/input\/uscovid19 .","9d909d2c":"import pandas as pd\nimport pandasql as ps\nimport json\nfrom folium import Map, LayerControl, Choropleth\nimport numpy\nimport os\nfrom PIL import Image\nimport glob\nimport subprocess","b4cde9e1":"def plot_map(date, df):\n    maximum = df[df[\"date\"] == date][\"cases\"].max()\n    m = Map(location = [37,-98],\n        zoom_start = 4)\n    Choropleth(geo_data = GEOJSON_PATH + GEOJSON_FILE,\n                name = 'choropleth',\n                data = df[df[\"date\"] == date],\n                columns = ['state','cases'],\n                key_on = 'feature.properties.name',\n                fill_opacity = 0.7,\n                line_opacity = 0.2,\n                line_color = 'red',\n                fill_color = 'YlOrRd',\n                bins = [0,2,4,6,9,12],\n              ).add_to(m)\n    LayerControl().add_to(m)\n    return m","d1fc63de":"GEOJSON_PATH = \".\/uscovid19\/GeoJson\/\"\nCSV_DIRECTORY = \"..\/input\/us-counties-covid-19-dataset\/\"\nFILE_NAME = \"us-counties.csv\"\nGEOJSON_FILE = \"us-states.json\"\ndf = pd.read_csv(f\"{CSV_DIRECTORY}{FILE_NAME}\")","22059b7b":"\nq1 = \"\"\"\nselect distinct date, state, sum(cases) as cases from df group by date, state\n\"\"\"\n\ncases_df = ps.sqldf(q1, locals())\n\ncases_df[\"cases\"] = cases_df[\"cases\"].apply(lambda x : numpy.log(x))\nprint(cases_df.columns)\n","be9cd302":"gj = json.load(open(f\"{GEOJSON_PATH}{GEOJSON_FILE}\"))\n","e2a7d272":"for date in cases_df[cases_df['date'] > '2020-03-01'].date.unique():\n    maps = plot_map(f\"{date}\", cases_df)\n    maps.save(f\".\/uscovid19\/Maps\/{date}.html\")\n","b3cccdda":"# for file in os.listdir(f\".\/Maps\/\"):\n#     command = f\"cutycapt --url=file:\/\/{os.getcwd()}\/Maps\/{file} --out=.\/images\/{file.split('.')[0]}.png --delay=1000\"\n#     subprocess.run(command.split(\" \"))","5b82d688":"# pip install pillow==6.2.2\n\nfiles = sorted(glob.glob('.\/uscovid19\/images\/*.png'))\nimages = list(map(lambda file: Image.open(file), files))\nimages[0].save('us_covid-19_visualization_cases.gif', save_all=True, append_images=images[1:], duration=120, loop=0)\n","ff4fffa2":"The following command simply loops through all files saved under `Maps`, opens them, and takes a screenshot.\n\n`sudo apt-get install cutycapt` installs the software.","c91aefac":"The following imports our necessary packages","b7c86021":"We read the GeoJson file to get the boudaries of the states in The US.","3c2d9a71":"We define an SQL query via string and run it using pandasql.\n\nIt basically treats the dataframe as a sql table and runs the defined query.\n\nFor visualizing conveniences, we convert the scale into a logarithmic scale by applying the natural log to the number of cases.","f7b63033":"<img src=\".\/uscovid19\/us_covid-19_visualization_cases.gif\">","af8b3eeb":"# US Covid-19 Realtime Heatmap Visualization\n## Sources\n- us geojson : https:\/\/github.com\/PublicaMundi\/MappingAPI\/blob\/master\/data\/geojson\/us-states.json\n- github : https:\/\/github.com\/andy971022\/us-covid-19-visualization\n\n## Final Output\n<img src=\".\/uscovid19\/us_covid-19_visualization_cases.gif\">\n\n## My Personal Blog : [http:\/\/andy971022.com\/](http:\/\/andy971022.com\/)","94513414":"The following collects all screenshots from the previous results and makes a gif image out of it.","af87d717":"We then plot the data onto the map and save the map into an html file","af039fcf":"This function creates a map object  ","5b65c6c9":"We then instantiate our variables"}}