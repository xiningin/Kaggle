{"cell_type":{"a495e22e":"code","a85190d9":"code","b3580746":"code","1defb524":"code","3ff5c5ef":"code","61c21d44":"code","2ec1ee1c":"code","3650ce46":"code","a6bc358a":"code","a7b41f47":"code","a1c36744":"code","f631b6e2":"code","92c77e84":"code","e8aefe63":"code","bb723c64":"markdown","3351186c":"markdown","d9825b4e":"markdown","afe2c28f":"markdown","025d727a":"markdown","e14baba1":"markdown","ad41c1da":"markdown","5469b4ba":"markdown","31e576fc":"markdown","f12f02f3":"markdown"},"source":{"a495e22e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a85190d9":"import matplotlib.pyplot as plt","b3580746":"df = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndf.head()","1defb524":"print(df.shape) # show's there are 215 samples and 15 features\ndf.describe() # Salary has count 148, thus it has NaN Values, which was because they are not placed, so their salary can be assigned to zero","3ff5c5ef":"df.corr()","61c21d44":"#  Draw a histogram for degreep.\ndegree_p_vals = df[\"degree_p\"]\nw = 2\nn = int((degree_p_vals.max() - degree_p_vals.min())\/w)\ndegree_p_vals.hist(bins=n)","2ec1ee1c":"\ndegree_p_vals_sp = df[df[\"status\"]==\"Placed\"][\"degree_p\"]\ndegree_p_vals_snp = df[df[\"status\"]!=\"Placed\"][\"degree_p\"]\ndegree_p_vals_sp.hist(bins=n,color='lightgreen',alpha=0.7,label=\"Placed\")\ndegree_p_vals_snp.hist(bins=n,color='firebrick',alpha=0.5,label=\"Not Placed\")\nplt.legend()","3650ce46":"selector = 'gender'\nselector_val=\"M\"\ndegree_p_vals_sp = df[df[selector]==selector_val][\"degree_p\"]\ndegree_p_vals_snp = df[df[selector]!=selector_val][\"degree_p\"]\ndegree_p_vals_sp.hist(bins=n,color='lightgreen',alpha=0.7,label=\"Male\")\ndegree_p_vals_snp.hist(bins=n,color='firebrick',alpha=0.5,label=\"Female\")\nplt.legend()","a6bc358a":"df[\"degree_p\"].plot(kind='box')","a7b41f47":"selector = 'gender'\nselector_val=\"M\"\ndegree_p_vals_M = df[df[selector]==selector_val][\"degree_p\"]\ndegree_p_vals_FM = df[df[selector]!=selector_val][\"degree_p\"]\n\nfig, axs = plt.subplots(1,2)\nfig.suptitle('Box Plot for Degree % based on gender')\n\ndegree_p_vals_M.plot(kind='box',ax=axs[0],title='Male')\ndegree_p_vals_FM.plot(kind='box',ax=axs[1],title='Female')\nplt.legend()","a1c36744":"from sklearn.preprocessing import LabelEncoder\ndf_f = df[[\"workex\",\"gender\",\"degree_p\"]].copy()\nfig, axs = plt.subplots(1,4)\nindex = 0\nfor title,data in df_f.groupby(['workex','gender']):\n    title = list(title)\n    if title[1]==\"F\":\n        title[1] = \"Female\"\n    else:\n        title[1] = \"Male\"\n    \n    if 'Y' in title[0]:\n        title[0] = ' \\nwith \\nwork exp'\n    else:\n        title[0] = ' \\nwithout \\nwork exp'\n    \n    data.plot(kind='box',ax=axs[index],title=title[1]+title[0])\n    index = index + 1","f631b6e2":"import seaborn as sns\nsns.distplot(df['degree_p'])","92c77e84":"# Differentiate based on status \nimport seaborn as sns\nfig, axs = plt.subplots(1,2)\nindex = 0\nfor title,data in df.groupby('status'):\n    print(title)\n    sns.distplot(data['degree_p'],ax=axs[index],axlabel=title)\n    index = index+1\nplt.legend()","e8aefe63":"# Differentiate based on status \nimport seaborn as sns\nfig, axs = plt.subplots(1,2)\nindex = 0\nfor title,data in df.groupby('status'):\n    print(title)\n    sns.distplot(data['degree_p'], hist=True, kde=True, \n                 bins=n, ax=axs[index],\n                 hist_kws={'edgecolor':'black'},\n                 kde_kws={'color': 'blue'})\n    index = index+1","bb723c64":"# (ii) Draw a boxplot for degreep \n## Fig4.","3351186c":"# (i) Histogram for Degree_P\n## Fig1\nUse appropriate bin width ","d9825b4e":"## Fig 8","afe2c28f":"# (iv) Which of the above three types of plots is more useful for interpretation and how\nAns)\nI have notices below observation from above plots\n* Fig 1 show we can observe that histogram is left scewed.\n    * Majority of them lie in in 62% to 72%.\n* From Fig 2 it can be observed that \n    * person with degree percentage above 80 % has high chances of getting placed.\n    * person with degree percentage below 55 % has lowest chances of getting placed.\n* With reference to Fig 2 and Fig 3 it can be said that out of 10 min 8 would be Female with degree percente above 80%\n* From Fig 4, we can identify there are few outlier and major of them are from Female\n* Fig 6, implies the Percentage seems most percentage is around 65 %, except for Female with work experience, they tend to have higher percentage which would be around 70%\n\n## I would prefer to use Histogram as it had helped in analysing most of the information, but as a confirmation other plots helps in confirmation and deeper understanding of the data","025d727a":"## Fig 5","e14baba1":"# (iii) Draw a density plot for degree_p\n## Fig 7","ad41c1da":"## Using faceting introduce gender \n## Fig 3","5469b4ba":"## Differentiate based on status (Fig 2)","31e576fc":"## Using faceting introduce Using faceting introduce workex and gender together  and gender together \n## Fig 6","f12f02f3":"## Fig 9"}}