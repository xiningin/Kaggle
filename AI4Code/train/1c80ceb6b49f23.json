{"cell_type":{"7ca13bc8":"code","29977c21":"code","b4e7f3ac":"code","514318c7":"code","9155f673":"code","97ac93e4":"code","969d8512":"code","1d816f0c":"code","f00ca583":"code","f60f101f":"markdown","4ee2c266":"markdown","ab736706":"markdown","2c57160b":"markdown","a5e86b2c":"markdown"},"source":{"7ca13bc8":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","29977c21":"df_train = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/test.csv')","b4e7f3ac":"df_train.head()","514318c7":"df_test.head()","9155f673":"features = [col for col in df_train.columns if col not in ['id', 'target']]","97ac93e4":"plt.figure(figsize=(10,5))\nsns.histplot(data = df_train.target,kde = True,color = 'g')\nplt.title('Target Distribution')\nplt.show()","969d8512":"i=1\nplt.figure()\nfig,ax = plt.subplots(5,3, figsize=(14,24))\nfor x in features:\n    plt.subplot(5,3,i)\n    sns.histplot(df_train[x],color = 'green',kde = True,bins = 100,label = 'Train')\n    sns.histplot(df_test[x],color = 'blue',kde = True,bins = 100,label = 'Test')\n    plt.legend()\n    i=i+1\nplt.show()","1d816f0c":"fig = plt.figure(figsize=(18, 18))\ngs = fig.add_gridspec(4, 4)\ngs.update(wspace=0.5, hspace=0.5)\n\nbackground_color = \"#fbfbfb\"\n\nrun_no = 0\nfor row in range(0, 4):\n    for col in range(0, 4):\n        locals()[\"ax\"+str(run_no)] = fig.add_subplot(gs[row, col])\n        locals()[\"ax\"+str(run_no)].set_facecolor(background_color)\n        for s in [\"top\",\"right\",\"left\"]:\n            locals()[\"ax\"+str(run_no)].spines[s].set_visible(False)\n        run_no += 1\n\nrun_no = 0\nfor feature in features:\n        sns.histplot(df_train[feature] ,ax=locals()[\"ax\"+str(run_no)], color='#f0a692',kde = True)\n        run_no += 1\n        \nax0.text(-0.4, 4.9, 'Features Distribution on Train Dataset', fontsize=20, fontweight='bold', fontfamily='serif')\nax0.text(-0.4, 4.5, 'All features have bimodal or multimodal', fontsize=13, fontweight='light', fontfamily='serif')\n\nfor s in [\"top\", \"bottom\", \"right\",\"left\"]:\n    ax14.spines[s].set_visible(False)\n    ax15.spines[s].set_visible(False)\n\nax14.tick_params(axis='x', bottom=False)\nax14.tick_params(axis='y', left=False)\nax14.get_xaxis().set_visible(False)\nax14.get_yaxis().set_visible(False)\n\nax15.tick_params(axis='x', bottom=False)\nax15.tick_params(axis='y', left=False)\nax15.get_xaxis().set_visible(False)\nax15.get_yaxis().set_visible(False)","f00ca583":"plt.figure(figsize=(16,8))\nsns.heatmap(data = df_train.corr(),cmap=\"inferno\", annot = True)","f60f101f":"#### cont6 to cont13 has strong correlation","4ee2c266":"### Target column has ***bimodal*** distribution and also ***left skewed***.\n\n#### lets look into distribution of train and test data","ab736706":"From the above plots, we can see that the train and test data are same.","2c57160b":"#### The dataset has all ***continuous*** features.\n\n#### 1. Independent Features : cont1,\tcont2,\tcont3,\tcont4,\tcont5,\tcont6,\tcont7,\tcont8,\tcont9,\tcont10,\tcont11,\tcont12,\tcont13,\tcont14\n\n#### 2. Dependent Feature : target ( which we want to predict for test set)\n\n* #### There are 300k rows ,16 columns in train set and 200k rows, 15 columns in test set.\n* #### There are no missing values in train and test set.","a5e86b2c":"### EDA of Training Data "}}