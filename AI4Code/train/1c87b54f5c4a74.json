{"cell_type":{"66de68ae":"code","4f553361":"code","4f548c16":"code","acd3968b":"code","e289fe1e":"code","24e4d253":"code","6cd311a8":"code","a2040f3c":"code","e19c3d98":"code","5fc63fa8":"code","158c1933":"code","80cc5c64":"code","f8f168bd":"code","88c4dfcf":"code","d6ba7008":"code","0ce978f3":"code","12dc6c2c":"code","e8ba887c":"code","d6652b45":"code","ac6ef4e1":"code","72c3e257":"code","6b1acf90":"code","7a5e7a11":"code","60e0331b":"code","83fdb760":"code","54f58771":"code","c56eb89a":"code","103b80a5":"code","bb06f692":"code","fd0ede9a":"code","401c4dcf":"code","8fa18f4e":"code","ebb71167":"code","ee6be356":"code","a32950d8":"code","657bd275":"code","4ea58b1b":"code","a528bb30":"code","4d6e16b3":"code","43c10bb0":"code","7df9aca1":"code","c4ad7585":"code","5ec6faf1":"code","33a0fecb":"code","2d9e0bcc":"code","187e86ba":"markdown","41bf990d":"markdown","fd271bca":"markdown"},"source":{"66de68ae":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4f553361":"#Import Packages\n\nimport tensorflow as tf\nfrom pathlib import Path\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom sklearn.feature_extraction import text\nimport matplotlib.pyplot as plt\nimport string\nimport re","4f548c16":"input_folder = Path(\"\/kaggle\/input\")\ninput_file = input_folder\/\"hamilton-lyrics\"\/\"ham_lyrics.csv\"","acd3968b":"df = pd.read_csv(input_file,encoding = \"ISO-8859-1\")","e289fe1e":"df.head()","24e4d253":"# Get Title Counts\ndf['title'].value_counts().sort_index()","6cd311a8":"# Filter Data with more than 3 words\ndf = df[df['lines'].apply(lambda x: len(x.split(\" \")) > 3)]","a2040f3c":"# Punctuation Regex\npunct = re.compile(r'[!\\\\\"#$%&\\'()*+,-.\/:;<=>?@\\[\\]^_`{|}~0-9]+')","e19c3d98":"#Get Frequency Counts after processing => Lowercase + remove numbers, punctuation + strip whitespace\ncv = text.CountVectorizer(lowercase=True,preprocessor=lambda x: punct.sub(\"\",x.strip()).lower(),stop_words='english')","5fc63fa8":"op = cv.fit_transform(df[\"lines\"])","158c1933":"df_freq = pd.DataFrame(op.toarray(),columns=cv.get_feature_names())","80cc5c64":"df_freq.head()","f8f168bd":"freq_words = df_freq.sum(axis=0)","88c4dfcf":"freq_words.sort_values(ascending=False)","d6ba7008":"wc = WordCloud(width=600,height=300).generate_from_frequencies(freq_words)","0ce978f3":"plt.rcParams[\"figure.figsize\"] = (20,5)\nplt.imshow(wc)","12dc6c2c":"#Store processed text in a new column\ndf['cleaned_lines'] = df['lines'].apply(lambda x: punct.sub(\"\",x.strip()).lower())","e8ba887c":"# Join lines of a song by title\ndf_song = df.groupby('title',sort=False).apply(lambda x: \" \".join(x['cleaned_lines']))","d6652b45":"df_song.iloc[0]","ac6ef4e1":"from tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences","72c3e257":"num_words = 5000\noov_token = '<UNK>'\npad_type = 'post'\ntrunc_type = 'post'","6b1acf90":"tokenizer = Tokenizer(num_words=num_words,oov_token=oov_token)","7a5e7a11":"tokenizer.fit_on_texts(df_song)","60e0331b":"seqs = tokenizer.texts_to_sequences(df_song)","83fdb760":"n_grams = 11\ngram_seqs = []\nn_seqs = len(seqs)\nfor i in seqs:\n    n_i = len(i)\n    for j in range(n_i-n_grams):\n        gram_seqs.append(i[j:j+n_grams])","54f58771":"labels = [i[-1] for i in gram_seqs]\ninputs = [i[:-1] for i in gram_seqs]","c56eb89a":"from sklearn.preprocessing import OneHotEncoder\nfrom keras.utils import to_categorical\nfrom keras import Model\nfrom keras.layers import Dense, Embedding, LSTM, Input, Bidirectional","103b80a5":"encoded_labels = to_categorical(labels,num_classes=num_words)","bb06f692":"class lyrics_generator(Model):\n    def __init__(self):\n        super(lyrics_generator,self).__init__()\n        self.embedding = Embedding(num_words,64,input_length=n_grams-1)\n        self.lstm = Bidirectional(LSTM(20))\n        self.dense = Dense(num_words,activation='softmax')\n    \n    def call(self,x):\n        x = self.embedding(x)\n        x = self.lstm(x)\n        x = self.dense(x)\n        return x\n    \n    def model(self):\n        x = Input(shape=(n_grams-1))\n        return Model(inputs=[x], outputs=self.call(x))","fd0ede9a":"m = lyrics_generator()","401c4dcf":"dataset = tf.data.Dataset.from_tensor_slices((inputs,encoded_labels)).batch(64)","8fa18f4e":"m.compile(optimizer = tf.keras.optimizers.Adam(learning_rate=0.001)\n          ,loss=tf.keras.losses.CategoricalCrossentropy()\n         ,metrics=[tf.keras.metrics.CategoricalAccuracy()])","ebb71167":"m.model().summary()","ee6be356":"history = m.fit(dataset,epochs=200,verbose=0)","a32950d8":"print(\"Loss: {} and Accuracy: {}\".format(history.history['loss'][-1],history.history['categorical_accuracy'][-1]))","657bd275":"def write_lyric(text,text_length=10):\n    for i in range(text_length):\n        seqs_test = tokenizer.texts_to_sequences([text])\n        seqs_test = pad_sequences(seqs_test,maxlen=n_grams-1,value=1)\n        pred_probs = m(seqs_test)\n        index = tf.argmax(pred_probs,axis=1)[0].numpy()\n        word = tokenizer.index_word[index]\n        text = text+\" \"+word\n    return text","4ea58b1b":"write_lyric(\"the man\")","a528bb30":"write_lyric(\"he was\")","4d6e16b3":"write_lyric(\"alexander\")","43c10bb0":"write_lyric(\"there was\")","7df9aca1":"write_lyric(\"it has\")","c4ad7585":"write_lyric(\"I am\")","5ec6faf1":"write_lyric(\"Eliza\")","33a0fecb":"write_lyric(\"sir\")","2d9e0bcc":"write_lyric(\"Thomas Jefferson\",text_length=50)","187e86ba":"CREDITS to [anasofiauzsoy](https:\/\/www.kaggle.com\/anasofiauzsoy\/writing-hamilton-lyrics-with-tensorflow-r) for her Notebook written in R. This is a port to Python","41bf990d":"![](https:\/\/lionsgateccrc.org\/wp-content\/uploads\/2018\/10\/hamilton.jpg)","fd271bca":"Hamilton is an incredibly popular musical about the life of Alexander Hamilton by Lin-Manuel Miranda. It's about five years old, but many people, like me, hadn't seen it until this past week, when the film version came out on Disney Plus.\n\nLet's see if we can take the lyrics from the show's songs, and use Tensorflow to build a text generation model to write new ones. I've used R in this notebook- if you're interested in seeing a Python version, leave a comment and let me know, and I can work on that. Let's get started!"}}