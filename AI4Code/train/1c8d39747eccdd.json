{"cell_type":{"d5c85a5c":"code","9efde25d":"code","d074752a":"code","d507dae5":"code","72f56d25":"code","e27f8424":"code","433a5018":"code","4598e76a":"code","0a2e6769":"code","cc7d18c5":"code","887d786e":"code","11f12621":"code","6e76984d":"code","c2bb6294":"code","8994f814":"markdown","c40bf6b1":"markdown","d88bba20":"markdown","51fadb62":"markdown","0c3db677":"markdown","7b9c8fc0":"markdown","8d537e87":"markdown","065bfd7f":"markdown","8a2061e9":"markdown"},"source":{"d5c85a5c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9efde25d":"data=pd.read_csv(r'\/kaggle\/input\/twitter-user-gender-classification\/gender-classifier-DFE-791531.csv',encoding='latin1')\n","d074752a":"data.head()\n","d507dae5":"data=pd.concat([data.gender,data.description],axis=1)\ndata.dropna(axis=0,inplace=True)\ndata.head()","72f56d25":"data.gender=[1 if k=='female' else 0 for k in data.gender]\ndata.gender.value_counts()","e27f8424":"#cleaning data\nimport re\n\nfirst=data.description[4]\ndescription=re.sub(\"[^a-zA-Z]\",\" \",first)\ndescription=description.lower()\ndescription","433a5018":"#classification i\u00e7in gereksiz kelime\n\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\n","4598e76a":"description=nltk.word_tokenize(description)\ndescription","0a2e6769":"#a=stopwords.words()\n#a\ndescription=[word for word in description if not word in set(stopwords.words('english'))]\n#description","cc7d18c5":"\nimport nltk as nlp\n\nlemma=nlp.WordNetLemmatizer()\ndescription=[lemma.lemmatize(word) for word in description]\n#description\n","887d786e":"description=\" \".join(description)\ndescription","11f12621":"description_list=[]\nfor description in data.description:\n    description=re.sub(\"[^a-zA-Z]\",\" \",description)\n    description=description.lower()\n    description=nltk.word_tokenize(description)\n    #description=[word for word in description if not word in set(stopwords.words('english'))]\n    description=[lemma.lemmatize(word) for word in description]\n    description=\" \".join(description)\n    description_list.append(description)\n    \n    \n    ","6e76984d":"from sklearn.feature_extraction.text import CountVectorizer\nmax_features=5000#kelimelerin i\u00e7inden en cok kullan\u0131lanlar\u0131 se\u00e7\ncount_vectorizer=CountVectorizer(max_features=max_features,stop_words='english')\nsparce_matrix=count_vectorizer.fit_transform(description_list).toarray()\nprint('en s\u0131k {} kelime: {}'.format(max_features,count_vectorizer.get_feature_names()))\n","c2bb6294":"y=data.iloc[:,0].values#male or female classes\nx=sparce_matrix\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=42)\n#with naive bayes\nfrom sklearn.naive_bayes import GaussianNB\nnb=GaussianNB()\nnb.fit(x_train,y_train)\n#prediction\ny_pred=nb.predict(x_test)\nprint('accuracy:( : ',nb.score(y_pred.reshape(-1,1),y_test))\n","8994f814":"<a id=3><\/a><br>\n### Regular Expression (RE)","c40bf6b1":"<a id=1><\/a><br>\n## Import Twitter Data","d88bba20":"# Natural Language Process\n<font color='blue'>\n<br>Content:\n    \n1. [Import Twitter Data](#1)\n1. [Natural language process in only one description](#2)\n    * [Regular Expression (RE)](#3)\n    * [Irrelavant Words (Stopwords)](#4)\n    * [Lemmatization](#5)\n1. [Data Cleaning](#6)\n1. [Bag of Words](#7)\n1. [Text Classification](#8)\n","51fadb62":"<a id=2><\/a><br>\n## Natural language process in only one description","0c3db677":"<a id=7><\/a><br>\n## Bag of Words","7b9c8fc0":"<a id=8><\/a><br>\n## Text Classification","8d537e87":"<a id=4><\/a><br>\n### Irrelavant Words (Stopwords)","065bfd7f":"<a id=6><\/a><br>\n##  Data Cleaning","8a2061e9":"<a id=5><\/a><br>\n###  Lemmatization"}}