{"cell_type":{"47e770df":"code","b4eda1a5":"code","98180a31":"code","770414c8":"code","b277f689":"code","2eb7c86b":"code","4ca1ccb5":"code","01c7d2fe":"code","bc679197":"code","a62164ba":"code","ca78eec4":"code","3aed99ca":"code","2957461b":"code","e8f07776":"code","961d4b81":"code","1e45be9c":"code","95c00c94":"code","663b70c0":"code","de2a731d":"code","e36aa530":"code","0e8822ad":"code","515ecb71":"code","95f8dcb7":"code","7a0e880f":"code","285e6e6c":"code","dd113e24":"code","1c135908":"code","80a14845":"code","fbe5c314":"code","4c58e6a7":"code","085a2798":"code","ef25be1c":"code","68591e21":"code","ff57636a":"code","f4c628f6":"code","655c004e":"code","acfd60d7":"code","9e79bb88":"code","e7575bed":"code","cd75ccb5":"code","c1948913":"code","df6f8fcb":"code","ccafb61d":"code","13ee0a1d":"code","c67cb404":"code","77f6f6f8":"code","9ed49986":"code","93abbed6":"code","7e256524":"code","3b0910cb":"code","b3729591":"code","e28f3909":"code","44457254":"code","5db72c68":"code","486b5fb9":"code","fcf0ad16":"code","7e9b6862":"code","338df3f4":"code","ccfdaebb":"code","fde9b19e":"code","e7fedcd8":"code","08caeec8":"code","0d5222f3":"code","71e8a04d":"code","9fbd9427":"code","cb78ef9d":"code","d326e176":"markdown","174b0d34":"markdown"},"source":{"47e770df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b4eda1a5":"train=pd.read_csv(\"\/kaggle\/input\/time-series-datasets\/Electric_Production.csv\")","98180a31":"len(train)","770414c8":"train.head()","b277f689":"train1=train[\"IPG2211A2N\"]","2eb7c86b":"plt.plot(train1)","4ca1ccb5":"train1=train1.values.reshape(-1,1)","01c7d2fe":"from sklearn.preprocessing import MinMaxScaler\nscale=MinMaxScaler(feature_range=(0,1))\nscale=scale.fit(train1)\n","bc679197":"scale.data_min_","a62164ba":"normalize=scale.transform(train1)","ca78eec4":"normalize[:5]","3aed99ca":"res=normalize.flatten()","2957461b":"res[:5]","e8f07776":"tt={}\n\nww=[]\nuu=[]\ndef make(a,b):\n        m=0\n        k=0\n        while k<394:\n            qq=[]\n            for i in range(b):\n                        u=a[m]\n                        m=m+1\n                        qq.append(u)\n            ww.append(qq)  \n            uu.append(a[m])\n   \n            m=k+1\n            k=k+1\n\n   \n        ","961d4b81":"make(res,3)","1e45be9c":"ww[:5]","95c00c94":"from numpy import array","663b70c0":"www=array(ww)","de2a731d":"www[:5]","e36aa530":"uu=array(uu)","0e8822ad":"xtrain,ytrain=www[:325],uu[:325]","515ecb71":"xtest,ytest=www[325:],uu[325:]","95f8dcb7":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import LSTM","7a0e880f":"model=Sequential()\nmodel.add(Bidirectional(LSTM(50,activation=\"relu\",input_shape=(394,1))))\n\nmodel.add(Dense(1))\nmodel.compile(optimizer='adam', loss='mse')","285e6e6c":"xtrain = xtrain.reshape(xtrain.shape[0], xtrain.shape[1], 1)\nxtest = xtest.reshape(xtest.shape[0], xtest.shape[1], 1)","dd113e24":"model.fit(xtrain,ytrain,validation_data=(xtest,ytest),epochs=50,batch_size=40,verbose=0)","1c135908":"y_pred=model.predict(xtest)","80a14845":"y_pred[:5]","fbe5c314":"ypred=scale.inverse_transform(y_pred)","4c58e6a7":"ytest=ytest.reshape(-1,1)","085a2798":"ytest=scale.inverse_transform(ytest)","ef25be1c":"ypred[:5]","68591e21":"from sklearn.metrics import mean_squared_error\nnp.sqrt(mean_squared_error(ytest,ypred))","ff57636a":"train1=pd.read_csv(\"\/kaggle\/input\/time-series-datasets\/monthly-beer-production-in-austr.csv\")\n","f4c628f6":"train1.head()","655c004e":"trainx=train1[\"Monthly beer production\"]","acfd60d7":"plt.plot(trainx)","9e79bb88":"trainx=trainx.values.reshape(-1,1)","e7575bed":"from sklearn.preprocessing import MinMaxScaler\nscale=MinMaxScaler(feature_range=(0,1))\nscale=scale.fit(trainx)","cd75ccb5":"scale.data_min_","c1948913":"normalize=scale.transform(trainx)","df6f8fcb":"normalize[:5]","ccafb61d":"res=normalize.flatten()","13ee0a1d":"res[:5]","c67cb404":"len(trainx)","77f6f6f8":"len(res)","9ed49986":"tt={}\n\nww=[]\nuu=[]\ndef make(a,b):\n        m=0\n        k=0\n        mm=476-b\n        while k<mm:\n            qq=[]\n            for i in range(b):\n                        u=a[m]\n                        m=m+1\n                        qq.append(u)\n            ww.append(qq)  \n            uu.append(a[m])\n   \n            m=k+1\n            k=k+1\n","93abbed6":"make(res,3)","7e256524":"ww[:5]","3b0910cb":"uu=array(uu)","b3729591":"www=array(ww)","e28f3909":"xtrain,ytrain=www[:325],uu[:325]","44457254":"xtest,ytest=www[325:],uu[325:]","5db72c68":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import LSTM\nfrom keras.layers import Bidirectional","486b5fb9":"model=Sequential()\nmodel.add(LSTM(50,activation=\"relu\",input_shape=(473,1)))\n\nmodel.add(Dense(1))\nmodel.compile(optimizer='adam', loss='mse')","fcf0ad16":"xtrain = xtrain.reshape(xtrain.shape[0], xtrain.shape[1], 1)\nxtest = xtest.reshape(xtest.shape[0], xtest.shape[1], 1)","7e9b6862":"model.fit(xtrain,ytrain,validation_data=(xtest,ytest),epochs=50,verbose=2)","338df3f4":"y_pred=model.predict(xtest)","ccfdaebb":"y_pred[:5]","fde9b19e":"ypred=scale.inverse_transform(y_pred)","e7fedcd8":"ytest=ytest.reshape(-1,1)","08caeec8":"ytest=scale.inverse_transform(ytest)","0d5222f3":"ypred[:5]","71e8a04d":"ytest[:5]","9fbd9427":"from keras.layers import Bidirectional","cb78ef9d":"from sklearn.metrics import mean_squared_error\nnp.sqrt(mean_squared_error(ytest,ypred))","d326e176":"\n20.93-bidirectional\n20.79-bidirectional+stackedlstm\n21.03619-stackedlstm\n21.5480163-lstm","174b0d34":"lstm=8.333\nstacked lstm-7.85\nbidirectional-stackedlstm=8.3666\nbidirectional-9.30199\n"}}