{"cell_type":{"ae26ce6c":"code","343518ac":"code","09124abe":"code","8d22eae6":"code","837527da":"code","2012ff9d":"code","9eaf3298":"code","14ed61c6":"code","4153edc6":"code","12e654b2":"code","6522f243":"code","2203e80c":"code","ee27404d":"code","7e3880d6":"code","7bc65bcf":"code","26c034fc":"code","31bded83":"code","6006dd3c":"code","1f651f33":"code","fab5989f":"code","b277322d":"code","ae97ffd8":"code","5b4fd5ff":"code","bd2308fb":"code","82228efd":"code","650403d5":"code","804df9eb":"code","af256284":"code","01f2c1ff":"code","b7728c66":"code","ada04d00":"code","7f5b1992":"code","c9aa8e6c":"code","3ec3b60f":"code","0bcce219":"code","3363b154":"markdown","b536f259":"markdown","9b9b9edc":"markdown","103a60a0":"markdown","8e508d87":"markdown","201c7960":"markdown","6fbbda31":"markdown","10ca61cc":"markdown","a2a9ed3b":"markdown","670f8ac4":"markdown","5ed19526":"markdown","7d2797f7":"markdown","71e2d71f":"markdown","cccdbd69":"markdown","eb60524c":"markdown","0e90af2a":"markdown"},"source":{"ae26ce6c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","343518ac":"import seaborn as sns\nimport matplotlib.pyplot as plt","09124abe":"#Importando dataset\ndf= pd.read_csv('\/kaggle\/input\/hmeq-data\/hmeq.csv')\ndf.shape\n","8d22eae6":"df.head()","837527da":"df.info()","2012ff9d":"graf1 = sns.barplot(x=df.BAD, y=df.BAD, data=df, estimator=lambda x: len(x) \/ len(df) * 100)\ngraf1.set(ylabel=\"Percent\")","9eaf3298":"sns.distplot(df.LOAN.dropna())\nplt.title('Distribui\u00e7\u00e3o de quantidade de emprestimo')\nplt.xlabel('Valor')\nplt.ylabel('Quantidade')\n","14ed61c6":"sns.distplot(df.MORTDUE.dropna())\nplt.title('Distribi\u00e7\u00e3o do valor do empr\u00e9stimo ')\nplt.ylabel('Quantidade')\nplt.xlabel('Valor da divida')","4153edc6":"sns.distplot(df.VALUE.dropna())\nplt.title('Distribui\u00e7\u00e3o do valor do imovel')\nplt.xlabel('Valor')\nplt.ylabel('Quantidade')","12e654b2":"plt.title('Distribui\u00e7ao de anos de trabalho')\nsns.distplot(df.YOJ.dropna())\nplt.xlabel('Anos trabalhaos')\nplt.ylabel('Quantidade')","6522f243":"a = df.REASON.copy()\na[pd.isnull(a)==True] = 'Missing'\nsns.countplot(a, hue = df.BAD)\nplt.title('Status de Emprestimo para pagar outro emprestimo')\nplt.xlabel('Motivo')\nplt.ylabel('Quantidade')","2203e80c":"b = df.JOB.copy()\nb[pd.isnull(b)==True] = 'Missing'\nsns.countplot(b, hue= df.BAD)\nplt.title('Emprestimo por Cargo')\nplt.ylabel('Quantidade')\nplt.xlabel('Cargo')","ee27404d":"def dist_boxplot(x, **kwargs):\n    ax = sns.distplot(x, hist_kws=dict(alpha=0.2))\n    ax2 = ax.twinx()\n    sns.boxplot(x=x, ax=ax2)\n    ax2.set(ylim=(-5, 5))\n\ng = sns.FacetGrid(df, col=\"BAD\")\ng1 = g.map(dist_boxplot, 'CLAGE', data = df)\n\ng = sns.FacetGrid(df, col=\"BAD\")\ng2 = g.map(dist_boxplot, 'NINQ', data = df)\n\ng = sns.FacetGrid(df, col=\"BAD\")\ng3 = g.map(dist_boxplot, 'CLNO', data = df)\n\ng = sns.FacetGrid(df, col=\"BAD\")\ng4 = g.map(dist_boxplot, 'DEBTINC', data = df)","7e3880d6":"# input de valores na varial DEBTINC pela media de acordo com a descri\u00e7\u00e3o da coluna REASON\ndf.loc[(df.REASON == 'HomeImp') & (pd.isnull(df.DEBTINC) == True),'DEBTINC'] = np.mean(df.loc[df.REASON == 'HomeImp','DEBTINC'])\ndf.loc[(df.REASON == 'DebtCon') & (pd.isnull(df.DEBTINC) == True),'DEBTINC'] = np.mean(df.loc[df.REASON == 'DebtCon','DEBTINC'])\ndf.loc[(pd.isnull(df.REASON) == True) & (pd.isnull(df.DEBTINC) == True),'DEBTINC'] = np.mean(df.loc[pd.isnull(df.REASON) == True,'DEBTINC'])\ndf.info()","7bc65bcf":"#input de 0 para valores faltantes na coluna de credito inadimplente \ndf.loc[pd.isnull(df.DELINQ)==True, 'DELINQ'] = 0\ndf.loc[pd.isnull(df.JOB)==True, 'JOB'] = 'Missing'","26c034fc":"df.isnull().sum()","31bded83":"df = df.fillna(0)","6006dd3c":"df.shape","1f651f33":"df.info()","fab5989f":"\nimport sklearn\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nimport scikitplot as skplt\nfrom sklearn.model_selection import cross_val_score","b277322d":"df_rf = pd.get_dummies(df, df.dtypes[(df.dtypes==np.object) | (df.dtypes=='category')].index.values, drop_first=True)\ndf_rf.head()","ae97ffd8":"train, test = train_test_split(df_rf, test_size=0.20, random_state=42)","5b4fd5ff":"train, valid = train_test_split(train, test_size=0.20, random_state=42)\n\ntrain.shape, valid.shape, test.shape","bd2308fb":"df_rf.info()","82228efd":"rf = RandomForestClassifier(n_jobs=-1, oob_score=True, n_estimators = 150, random_state=150)","650403d5":"feats = [c for c in df_rf.columns if c not in ['BAD']]\nfeats","804df9eb":"rf.fit(train[feats],train['BAD'])","af256284":"# Prevendo os dados de valida\u00e7\u00e3o\npreds_val = rf.predict(valid[feats])\n","01f2c1ff":"accuracy_score(valid['BAD'], preds_val)","b7728c66":"preds_test = rf.predict(test[feats])\n\npreds_test","ada04d00":"accuracy_score(test['BAD'], preds_test)","7f5b1992":"skplt.metrics.plot_confusion_matrix(test['BAD'], preds_test)","c9aa8e6c":"train, test = train_test_split(df_rf, test_size=0.20, random_state=42)\ntrain.shape, test.shape","3ec3b60f":"scores = cross_val_score(rf, train[feats], train['BAD'], n_jobs=-1, cv=5)\n\nscores, scores.mean()","0bcce219":"scores = cross_val_score(rf, test[feats], test['BAD'], n_jobs=-1, cv=5)\n\nscores, scores.mean()","3363b154":"# Analise Explorat\u00f3ria","b536f259":"Sera apresentado a seguir estudo para base de emprestimo HMEQ.CSV, com analise exploratoria dos dados e modelo preditivo em random forest com e sem cross validation.","9b9b9edc":"A marioria dos emprestimos sao para pagamento de outras dividas, o maior volume de pessos que procuram emprestimos tem o cargo classificados como outros","103a60a0":"20% dos Clientes sao maus pagadores ","8e508d87":"### **Incio do modelo de Random Forest**","201c7960":"## Criando Modelo de Random Forest","6fbbda31":"separando o base treino em treino e valida\u00e7\u00e3o","10ca61cc":"Apos a primeira tentativa usando o modelo de random forest, \u00e9 possivel observar uma acuracia de 91% considerado muito boa para o modelo.","a2a9ed3b":"Criando um novo dataframe para o modelo de random forest com inclusao de colunas dummy","670f8ac4":"As variaveis CLAGE, NINQ, CLNO e DEBTINC parecem variar bastante em rela\u00e7\u00e3o \u00e0 vari\u00e1vel BAD e podem servir como poss\u00edveis preditores.","5ed19526":"**Substituindo valores faltantes em Dectinc","7d2797f7":"# **Trabalho de conclusao - Data Mining e Machine Learning II**","71e2d71f":"Apos a realiza\u00e7\u00e3o do random foreste usando o metodo de valida\u00e7\u00e3o cruzada de 5 conjuntos, obtivemos 92,4% de acuracia na base de treino,1% melhor que o primeito modelo de random forest testado anteriormente. Quando aplicando o mesmo modelo na base de teste tivemos o resultado de 89,3 que ainda assim \u00e9 condiderado um bom modelo.","cccdbd69":"## Revendo Random Forest utilizando Cross Validation","eb60524c":"Separado o novo dataframe em traino e teste","0e90af2a":"Temos algumas colunas sem registro(NaN),principalmente a coluna de Debtinc com 1267 valores faltantes."}}