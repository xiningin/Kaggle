{"cell_type":{"98192ba6":"code","693056e5":"code","fb444b2a":"code","126a662d":"code","a92d9566":"code","0ef57954":"code","89739956":"code","09c29137":"code","f1530393":"code","fea16f71":"code","8529f9d0":"code","b64c0bd0":"code","28ea85f3":"code","d2683cba":"code","8344ad01":"code","886b883f":"code","379c6c62":"code","a7ade6ec":"code","4e713681":"code","8a517ea3":"code","c1b94073":"code","cbbeccdf":"code","996f09d2":"code","cc028e7a":"code","3ac6e5f6":"code","2a109fb8":"code","6bb27e5e":"code","9c6c9505":"code","ee6dcbef":"code","ae3a9b09":"code","098e9442":"code","4596295d":"code","10b465ad":"code","dcb52969":"code","0d17850c":"code","4d0c8909":"code","a29a8e0e":"code","3ec1cd46":"code","5be27d49":"code","aa6f1dad":"code","074efe94":"code","0bf0c51c":"code","e7603233":"code","b1ea0b0f":"code","d198ba6a":"code","6237a985":"code","c77bc89f":"code","2d4d703f":"code","5c488006":"code","f98c9215":"markdown","a5f8e459":"markdown","9203474f":"markdown","72ee3cee":"markdown","6f0c70a7":"markdown","fa139335":"markdown","62f77c9c":"markdown","6ac05427":"markdown","028f7301":"markdown","3bec8bda":"markdown","a04f90dd":"markdown","90ab4649":"markdown","6b32b255":"markdown"},"source":{"98192ba6":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tqdm import tqdm\nfrom cycler import cycler\n\nplt.style.use('grayscale')\nfrom wordcloud import WordCloud\nimport missingno as msno\nimport plotly.express as px","693056e5":"df_dist=pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\ndf_dist.head()","fb444b2a":"df_locale=df_dist.groupby(by=df_dist['locale']).count().reset_index()\ndisplay(df_locale)","126a662d":"sns.set_theme(style=\"whitegrid\")\nfig_dims=(20,10)\n\nfig, ax = plt.subplots(figsize=fig_dims)\n\ng=sns.countplot(x=df_dist[\"locale\"], data=df_locale,palette='terrain', ax=ax)\ng.set(title=\" District Count\")\n\n\n\n\nfor bar in g.patches:\n    \n  # Using Matplotlib's annotate function and\n  # passing the coordinates where the annotation shall be done\n  # x-coordinate: bar.get_x() + bar.get_width() \/ 2\n  # y-coordinate: bar.get_height()\n  # free space to be left to make graph pleasing: (0, 8)\n  # ha and va stand for the horizontal and vertical alignment\n    g.annotate(format(bar.get_height(), '.2f'), \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height()), ha='center', va='center',\n                   size=12, xytext=(0, 8),\n                   textcoords='offset points',color='blue')\n","a92d9566":"\nlabels=list(df_locale['locale'])\nvalue=list(df_locale['district_id'])\n\n\nexplode=[]\n\nfor i in range(len(value)):\n    index=value.index(max(value))\n    explode.append(0)    \nexplode[index]=0.05\n","0ef57954":"\nfig1, ax1 = plt.subplots(figsize=fig_dims)\nax1.pie(value, \n        explode=explode, \n        labels=labels, \n        autopct='%1.1f%%',\n        shadow=True, startangle=90,pctdistance=0.7)\nax1.axis('equal')\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()","89739956":"df_state=df_dist.groupby(by=df_dist['locale']).size()\n","09c29137":"sns.set_theme(style=\"whitegrid\")\n\nfig_dims=(20,10)\n\nfig, ax = plt.subplots(figsize=fig_dims)\n\ng=sns.countplot(x=df_dist[\"state\"], data=df_state,palette='winter' ,ax=ax,order=df_dist.state.value_counts().index)\ng.set_xticklabels(g.get_xticklabels(),rotation=45,fontsize='x-large',horizontalalignment='right',color='#b07d0e')\n\nfor bar in g.patches:\n\n  # Using Matplotlib's annotate function and\n  # passing the coordinates where the annotation shall be done\n  # x-coordinate: bar.get_x() + bar.get_width() \/ 2\n  # y-coordinate: bar.get_height()\n  # free space to be left to make graph pleasing: (0, 8)\n  # ha and va stand for the horizontal and vertical alignment\n    g.annotate(format(bar.get_height(), '.0f'), \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height()), ha='center', va='center',\n                   size=15, xytext=(0, 8),\n                   textcoords='offset points',color='#5234eb')","f1530393":"df_prod_info=pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')\n\ndf_prod_info","fea16f71":"df_prod_info.columns","8529f9d0":"df_prod_info.info()","b64c0bd0":"df_company=df_prod_info.groupby(['Provider\/Company Name']).size().sort_values(ascending=False)","28ea85f3":"df_company","d2683cba":"top_n_company=15\ndf_company=df_company[:top_n_company]\ndf_company","8344ad01":"fig, ax = plt.subplots(figsize=fig_dims)\ng=sns.countplot(x=df_prod_info[\"Provider\/Company Name\"], data=df_company,palette=\"cool\",ax=ax,\n                order=df_company.index)\ng.set_xticklabels(g.get_xticklabels(),rotation=45,fontsize='x-large',horizontalalignment='right',color='red')\ng.set_xlabel('Product\/company name',fontsize = 20)\ng.set_ylabel('Count',fontsize = 20 )\n\nfor bar in g.patches:\n  # Using Matplotlib's annotate function and\n  # passing the coordinates where the annotation shall be done\n  # x-coordinate: bar.get_x() + bar.get_width() \/ 2\n  # y-coordinate: bar.get_height()\n  # free space to be left to make graph pleasing: (0, 8)\n  # ha and va stand for the horizontal and vertical alignment\n    g.annotate(format(bar.get_height(), '.2f'), \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height()), ha='center', va='center',\n                   size=20, xytext=(0, 8),\n                   textcoords='offset points',color='blue')","886b883f":"df_prod_info.groupby(['Sector(s)']).size().sort_values(ascending=False)\n\n","379c6c62":"df_prod_info.head(10)","a7ade6ec":"\nsector_dic ={'PreK-12':  0,\n             'Higher Ed':0,\n             'Corporate':0  }\n\nfor i in df_prod_info['Sector(s)']:\n    try:\n        \n        if 'PreK-12' in i :\n            sector_dic['PreK-12']= sector_dic['PreK-12']+1    \n        if 'Higher Ed' in i :\n            sector_dic['Higher Ed']=sector_dic['Higher Ed'] +1\n        if 'Corporate' in i :\n            sector_dic['Corporate']=sector_dic['Corporate'] +1\n            \n            # elemenet nan Value\n    except:\n        #print(i)\n        pass\n","4e713681":"da=sector_dic.keys()\nva=list(sector_dic.values())","8a517ea3":"\n# print(plt.style.available)\nfig, ax = plt.subplots(figsize=(10,5))\n\nax.bar(da, va,color='red')\nplt.title('Sector uses')","c1b94073":"df_state_locale=df_dist.groupby(['locale','state']).size().reset_index(name='size')\n\n#df_state_locale","cbbeccdf":"f, ax = plt.subplots(figsize=(40, 25))\nsns.despine(f)\nax = sns.barplot(\n    data=df_state_locale,\n    x=\"state\", y=\"size\", hue=\"locale\",\n    ci=\"sd\",\n    palette=\"Dark2\")\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=45,fontsize='xx-large',horizontalalignment='right',color='red')\n\nax.legend(title='Locale', fontsize='25', title_fontsize='25',bbox_to_anchor= (1,1))\nplt.title('Locale vs State',fontsize='55')","996f09d2":"pef=df_prod_info.groupby(['Primary Essential Function']).size().sort_values(ascending=False).reset_index(name='size')","cc028e7a":"f, ax = plt.subplots(figsize=(10, 10))\n\nsns.barplot(y=pef['Primary Essential Function'],x=pef['size'])\nsns.lineplot(y=pef['Primary Essential Function'],x=pef['size'],\n             color='blue', err_style=\"bars\")","3ac6e5f6":"df_prod_info","2a109fb8":"files_dir=os.listdir('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/')\n#files_dir","6bb27e5e":"df=pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/'+ files_dir[0])","9c6c9505":"df.head()","ee6dcbef":"df.info","ae3a9b09":"df.isnull().sum()","098e9442":"df.head()","4596295d":"path='..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'","10b465ad":"def merge_allfiles():\n    df_all=[]\n    for i in tqdm(files_dir):\n        df=(pd.read_csv(os.path.join(path,i)))\n        district_id= i[:-4]\n        # print(district_id)\n        df['district_id']=int(district_id)\n        # print(df.iloc[4:10])\n        # df=(df.iloc[4:10])\n        df_all.append(df)\n\n    df_merge=pd.concat(df_all,ignore_index=True)\n    print(df_merge)\n\n    # print(df1)\n    # print(df.head)\n    # print(df.columns)\n    df_merge.to_csv('all_engagement_merger.csv',sep=',',index=False)\n    \n#merge_allfiles()","dcb52969":"df_merge=pd.read_csv(\"..\/input\/covid-19-engagement-data\/all_engagement_merger.csv\")","0d17850c":"df_engagement=df_merge.merge(df_dist,on='district_id')","4d0c8909":"df_engagement.agg(['max','min'])","a29a8e0e":"df_engagement.head()","3ec1cd46":"df_engagement.info()","5be27d49":"f, ax = plt.subplots(figsize=(10, 10))\n\ng=sns.countplot(x=df_engagement[\"pct_black\/hispanic\"], data=df_engagement, palette=\"cool\",ax=ax,)\n\ng.set_xticklabels(g.get_xticklabels(),rotation=45,fontsize='x-large',horizontalalignment='right',color='red')\n","aa6f1dad":"cloud = WordCloud(width=500, height=500).generate(\" \".join(df_engagement['state'].astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')","074efe94":"df_engagement.isnull().sum()","0bf0c51c":"msno.bar(df_engagement,color='orange', sort=\"ascending\", figsize=(10,10), fontsize=12)\nplt.show()","e7603233":"df_engagement['engagement_index'].agg(['max','min','mean','median'])","b1ea0b0f":"df_prod_info=df_prod_info.rename({'LP ID':'lp_id'},axis=1)\ndf_prod_info.head()","d198ba6a":"df_engagement.head()","6237a985":"df_all=df_engagement.merge(df_prod_info,on='lp_id')","c77bc89f":"df_all.head()","2d4d703f":"fig = px.line( data_frame=df_all.groupby([\"time\",\"locale\"])[\"engagement_index\"].sum().reset_index(),\n              x=[\"time\"], y=\"engagement_index\",title='engagement index by Locale',\n              template=\"plotly_dark\", width=1400, height=500,color='locale')\nfig.show()","5c488006":"fig = px.line( data_frame=df_all.groupby([\"time\",\"Provider\/Company Name\"])[\"engagement_index\"].sum().reset_index(),\n              x=[\"time\"], y=\"engagement_index\",title='engagement index by Locale',\n              template=\"plotly_dark\", width=1500, height=500,color='Provider\/Company Name')\nfig.show()","f98c9215":"Sub-urbs impact in  all-most in all state  from above graph\n\n *  ***mainly Connecticut and Massachusetts***","a5f8e459":"# Import Libraries","9203474f":"![npr.brightspotcdn.png](attachment:265b9b72-c5fc-4e5c-a4d7-4fdff5ebb1b5.png)","72ee3cee":"# Top 'N' provider company","6f0c70a7":"**> *From Above word cloud there are many 'state'  inormation are missing.***","fa139335":"let's see what is count of district   ","62f77c9c":"# From Above plot Suburbs count is high","6ac05427":"# Read files \n 1- District Info\n \n 2- Products Info\n ","028f7301":"Covid Impact on Study\n                         ............  .................           ![1_D5r35lv-P85wbfbXMGzYWw.png](attachment:e0ffde73-ccc0-496a-b435-60ad65147444.png)","3bec8bda":"## Locale count plot","a04f90dd":"Meta and Data Link\n\nengagement data folder:\n *     4 digit of file name link to district_info --> district_id\n *     ip_id --> product_info --> LP_id","90ab4649":"> Let's find out the NaN or missing value in total engagement data set after merger to district_info data set","6b32b255":"Let see if we can fill missing engagement index"}}