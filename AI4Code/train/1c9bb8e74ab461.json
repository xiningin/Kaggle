{"cell_type":{"f2bfcd78":"code","16a92ed3":"code","3980fa61":"code","ea7750bf":"code","411a5dbc":"code","e70730ae":"code","86af3652":"code","85df724c":"code","c0476815":"code","5813968e":"code","0a0f7362":"code","44cb969a":"code","f93c9a29":"code","77b3fdee":"code","689a0ebb":"code","50c299dd":"code","b29aa558":"code","e354616d":"code","3e2104c9":"code","7c2d99f7":"code","fff68f97":"code","f87efd96":"code","ed975206":"code","2e427c22":"code","fa5a5f2f":"code","8e960f0e":"code","ba4cd8a6":"code","b9b1ed6b":"code","eb2bc988":"code","0addac99":"code","c8f6ed8e":"code","c67893fb":"code","2b7a9254":"code","31165de5":"code","59d10a73":"code","340b552c":"code","882bd74e":"code","9e5f1104":"code","13194d53":"code","3651a9a1":"code","6272f9e4":"code","43ef5d97":"code","4ba6beef":"code","1b022f27":"markdown","bb1a2038":"markdown","fa968d5e":"markdown","769d39a8":"markdown","eabfc43e":"markdown","39d524f6":"markdown","6ad9b95b":"markdown","46ace70b":"markdown","6bad8dc7":"markdown","5c356dcf":"markdown","ebcb2417":"markdown","43025a1e":"markdown","f7d64331":"markdown","79be94b3":"markdown","fe33b6df":"markdown","0ab68070":"markdown","e50cbdbd":"markdown","8932b2bd":"markdown","975ba298":"markdown","844c3d2d":"markdown","5ff940bb":"markdown","e27befba":"markdown","b7df05fb":"markdown","2a77f74d":"markdown","e34272e8":"markdown","229ae3b2":"markdown","997d875d":"markdown","24f9aa75":"markdown","dfa75e4e":"markdown","0f95d3a2":"markdown","619d94ce":"markdown","6fd9bb3c":"markdown","83e5b6a3":"markdown"},"source":{"f2bfcd78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16a92ed3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom scipy.stats import norm, boxcox\nfrom scipy import stats\nfrom imblearn.over_sampling import SMOTE\n","3980fa61":"df = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndf.head()","ea7750bf":"print('Shape of the dataset')\nprint(df.shape)\n","411a5dbc":"print('Checking for the null values')\nprint(df.isnull().sum())","e70730ae":"df.info()","86af3652":"df.describe()","85df724c":"sns.countplot(x ='quality', data = df)","c0476815":"from collections import Counter\nCounter(df['quality'])","5813968e":"sns.boxplot(x=\"quality\",y=\"alcohol\", data=df)","0a0f7362":"plot = plt.figure(figsize=(15,7))\nsns.boxplot(x=\"quality\",y=\"residual sugar\", data=df)","44cb969a":"sns.boxplot(x=\"quality\",y=\"volatile acidity\", data=df)","f93c9a29":"plot = plt.figure(figsize=(15,7))\nsns.boxplot(x=\"quality\",y=\"pH\", data=df)","77b3fdee":"plot = plt.figure(figsize=(15,7))\nsns.barplot(x=\"quality\",y=\"pH\", data=df)","689a0ebb":"correlation = df.corr()\nplt.figure(figsize=(14,14))\nsns.heatmap(correlation, cbar=True, square=True, fmt = '.2f', annot = True, annot_kws={'size':15}, cmap = 'coolwarm')","50c299dd":"cols = ['fixed acidity', 'volatile acidity', 'citric acid','residual sugar', 'chlorides', 'free sulfur dioxide', 'density', 'pH', 'sulphates', 'alcohol'] # one or more\n\nQ1 = df[cols].quantile(0.25)\nQ3 = df[cols].quantile(0.75)\nIQR = Q3 - Q1\n\ndf = df[~((df[cols] < (Q1 - 1.5 * IQR)) |(df[cols] > (Q3 + 1.5 * IQR))).any(axis=1)]","b29aa558":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"fixed acidity\"], plot = plt)\nplt.show()","e354616d":"df[\"fixed acidity\"], lam_fixed_acidity = boxcox(df[\"fixed acidity\"])","3e2104c9":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"fixed acidity\"], plot = plt)\nplt.show()","7c2d99f7":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"residual sugar\"], plot = plt)\nplt.show()","fff68f97":"df[\"residual sugar\"], lam_fixed_acidity = boxcox(df[\"residual sugar\"])","f87efd96":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"residual sugar\"], plot = plt)\nplt.show()","ed975206":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"free sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"free sulfur dioxide\"], plot = plt)\nplt.show()","2e427c22":"df[\"free sulfur dioxide\"], lam_fixed_acidity = boxcox(df[\"free sulfur dioxide\"])","fa5a5f2f":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"free sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"free sulfur dioxide\"], plot = plt)\nplt.show()","8e960f0e":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"total sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"total sulfur dioxide\"], plot = plt)\nplt.show()","ba4cd8a6":"df[\"total sulfur dioxide\"], lam_fixed_acidity = boxcox(df[\"total sulfur dioxide\"])","b9b1ed6b":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"total sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"total sulfur dioxide\"], plot = plt)\nplt.show()","eb2bc988":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"alcohol\"], fit=norm, color=\"orange\")\nplt.title(\"alcohol Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"alcohol\"], plot = plt)\nplt.show()","0addac99":"df[\"alcohol\"], lam_fixed_acidity = boxcox(df[\"alcohol\"])","c8f6ed8e":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"alcohol\"], fit=norm, color=\"orange\")\nplt.title(\"alcohol Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"alcohol\"], plot = plt)\nplt.show()","c67893fb":"X = df.drop('quality',axis=1)","2b7a9254":"# diving\nreviews = []\nfor i in df['quality']:\n    if i >= 3 and i <= 4:\n        reviews.append('1')\n    elif i >= 5 and i <= 7:\n        reviews.append('2')\n    elif i == 8:\n        reviews.append('3')\ndf['Reviews'] = reviews","31165de5":"\nCounter(df['Reviews'])","59d10a73":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)\n","340b552c":"from sklearn.decomposition import PCA\npca = PCA()\nX_pca = pca.fit_transform(X)\n","882bd74e":"#Plot the graph to find the principal components\nplt.figure(figsize=(10,10))\nplt.plot(np.cumsum(pca.explained_variance_ratio_), 'ro-')\nplt.grid()","9e5f1104":"#AS per the graph, we can see that 8 principal components attribute for 90% of variation in the data. \n#we shall pick the first 8 components for our prediction.\npca_new = PCA(n_components=8)\nX_new = pca_new.fit_transform(X)\n","13194d53":"X_train, X_test, Y_train, Y_test = train_test_split(X_new, reviews, test_size = 0.25)","3651a9a1":"sm = SMOTE(random_state=14)\nX_train, Y_train = sm.fit_resample(X_train, Y_train)","6272f9e4":"import collections\nprint(\"change in value of count after using smote:\", collections.Counter(Y_train))","43ef5d97":"model = RandomForestClassifier()\nmodel.fit(X_train, Y_train)","4ba6beef":"X_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)\nprint('Accuracy : ', test_data_accuracy)","1b022f27":"**SMOTE**\nSmote is a technique which is used when there is imbalance in dataset. \nFixing the imbalance dataset.","bb1a2038":"# Standarisation\nStandardization comes into picture when features of input data set have large differences between their ranges, or simply when they are measured in different measurement units (e.g., Pounds, Meters, Miles \u2026 etc).\n\nThese differences in the ranges of initial features causes trouble to many machine learning models. For example, for the models that are based on distance computation, if one of the features has a broad range of values, the distance will be governed by this particular feature.","fa968d5e":"There is no null values in the dataset.","769d39a8":"**checking the relation between the residual sugar and Quality**","eabfc43e":"**PCA for Dimension Reduction**","39d524f6":"**Treating outliers**","6ad9b95b":"5. alcohol","46ace70b":"we can see that there is no correlation between the residual sugar and quality.\nSo, we will drop this column as it has not contribution in determining the qulaity.","6bad8dc7":"**Checking for skewness**","5c356dcf":"3. free sulfur dioxide","ebcb2417":"**Cheking the no. of rows, mean value of each rows, std and five number summary**","43025a1e":"Fixing skewness using boxcox","f7d64331":"**Random forest classifier**","79be94b3":"**checking the relation between the alcohol and Quality**","fe33b6df":"**checking the relation between the volatile acidity and Quality**","0ab68070":"**Quality count**","e50cbdbd":"**Checking No. of rows and columns**","8932b2bd":"**Spliting the data in train and test**","975ba298":"**Instead of checking one by one we can use correlation matrix and heat map to analyse the correlation between each feature at once**","844c3d2d":"**Checking the accuracy**","5ff940bb":"2. residual sugar","e27befba":"**Loading the red wine quality dataset**","b7df05fb":"Preprocessing the data","2a77f74d":"# **Exploring the dataset**","e34272e8":"**Checking for null values**","229ae3b2":"1. fixed acidity","997d875d":"We can see that as we are increasing the alcohol the quality of wine is improving.","24f9aa75":"**checking the relation between the pH acidity and Quality**","dfa75e4e":"**Importing Required Libraries**","0f95d3a2":"4. total sulfur dioxide","619d94ce":"Fixing skewness using boxcox","6fd9bb3c":"**Checking the data types of each feautes and nows of rows and null count**","83e5b6a3":"# **Multiclassification**"}}