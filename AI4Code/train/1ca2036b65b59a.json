{"cell_type":{"4a00b222":"code","4c9e0214":"code","6dcb24ab":"code","58c6d173":"code","dcf63129":"code","16fc3104":"code","2f2d0426":"markdown"},"source":{"4a00b222":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c9e0214":"train_data=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()\ntrain_data.describe()","6dcb24ab":"test_data=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","58c6d173":"women=train_data.loc[train_data.Sex=='female'][\"Survived\"]\nrate_women=sum(women)\/len(women)\nprint(\"% of women who survived:\",rate_women)","dcf63129":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","16fc3104":"from sklearn.ensemble import RandomForestClassifier\ny=train_data[\"Survived\"]  #Output Column\nfeatures=[\"Pclass\",\"Sex\",\"SibSp\",\"Parch\"]\nX=pd.get_dummies(train_data[features]) \nX_test=pd.get_dummies(test_data[features])\n\n### \nmodel=RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1) #no. of trees,Depth,method of generating RNumber\nmodel.fit(X,y)\npredictions=model.predict(X_test)\noutput=pd.DataFrame({'PassengerId':test_data.PassengerId,'Survived':predictions})\noutput.to_csv('my_submission.csv',index=False)\nprint(\"Our Solution is succesfully saved\")","2f2d0426":"### Model : Random Forest"}}