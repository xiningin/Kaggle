{"cell_type":{"f2ff2669":"code","4332f59f":"code","e037822e":"code","5ab78783":"code","08f0cab3":"markdown","78da14e3":"markdown","96477ae2":"markdown","59e54079":"markdown"},"source":{"f2ff2669":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4332f59f":"def bmi_to_h(bmi, m, new=False):\n    \n    if new:\n        return ((1.3 * m) \/ bmi) ** (1\/2.5)\n    \n    else:\n        return (m \/ bmi) ** (1\/2)\n\nm = np.linspace(30, 160, 100)\nbmi_lim = np.array([18.5, 25, 30, 35, 40]).reshape(-1, 1)\n\nh_calc = bmi_to_h(bmi_lim, m)\nh_calc_n = bmi_to_h(bmi_lim, m, True)","e037822e":"colors = ['#00a4ff', '#40ffb7', '#b7ff40', '#ffb900', '#ff3000', '#800000']\nclas = ['Under Weight', 'Normal Weight', 'Obesity (I)', 'Obesity (II)', 'Obesity (III)', 'Obesity (IV)']\n\nfig, ax = plt.subplots(1, 2, figsize=(15, 5))\n#\n\nfor i in range(bmi_lim.size):\n    ax[0].plot(m, h_calc[i], color='k')\n    ax[1].plot(m, h_calc_n[i], color='k')\n    if i == 0:\n        ax[0].fill_between(m, y2=h_calc[i], y1=2, color=colors[i], label = clas[i])\n        ax[1].fill_between(m, y2=h_calc_n[i], y1=2, color=colors[i], label = clas[i])\n    else:\n        ax[0].fill_between(m, y2=h_calc[i], y1=h_calc[i-1], color=colors[i], label = clas[i])\n        ax[1].fill_between(m, y2=h_calc_n[i], y1=h_calc_n[i-1], color=colors[i], label = clas[i])\n        \n        if i == bmi_lim.size-1:\n            ax[0].fill_between(m, y1=h_calc[i], y2=0, color=colors[i+1], label = clas[i+1])\n            ax[1].fill_between(m, y1=h_calc_n[i], y2=0, color=colors[i+1], label = clas[i+1])\n            \n    ax[0].set_ylim(1.4, 2)\n    ax[0].set_xlim(30, 130)\n    ax[1].set_ylim(1.4, 2)\n    ax[1].set_xlim(30, 130)\n    ax[0].set_title('Traditional Formula')\n    ax[1].set_title('New Formula')\n    ax[0].set_xlabel('Weight (kg)')\n    ax[0].set_ylabel('Height (m)')\n    ax[1].set_xlabel('Weight (kg)')\n    ax[1].set_ylabel('Height (m)')\n    ax[0].legend()\n    ax[1].legend()","5ab78783":"fig, ax = plt.subplots(1, 1, figsize=(12, 6))\n\nfor i in range(bmi_lim.size):\n    if i == 0:\n        ax.plot(m, h_calc[i], color='k', lw=3, label= 'Trad. Formula')\n        ax.plot(m, h_calc_n[i], color='m', lw=3, label= 'New Formula')\n    ax.plot(m, h_calc[i], color='k', lw=3)\n    ax.plot(m, h_calc_n[i], color='m', lw=3)\n    ax.fill_between(m, y2=h_calc[i], y1=h_calc_n[i], color=colors[i], label=clas[i])\n\nax.set_title('New Classifications')\nax.set_xlabel('Weight (kg)')\nax.set_ylabel('Height (m)')\nax.axhline(1.69, color='k', ls='--')\nax.set_ylim(1.4, 2)\nax.set_xlim(30, 130)\nax.set_ylim(1.4, 2)\nax.legend()\nax.set_xlim(30, 130);","08f0cab3":"As the article said, the impact is that for people below 1.69 m, their BMI will be higher, for people above it, their BMI will be smaller.","78da14e3":"## Motivation","96477ae2":"The purpose of this notebook is to visualize the impact of [Body mass index new formula](https:\/\/people.maths.ox.ac.uk\/trefethen\/bmi.html). This formula was proposed to reduce BMI of taller people and increase to the shorter ones. It must be emphasized that The new formula proposed is not based on epidemiological studies and they may not be a improvement, for all kinds of reasons. But, for machine learning problems, it's interesting to verify if the change in the metric would cause any sort of effect, for good or for worse, to predict certain health issues. The formulas are the ones below.","59e54079":"$$BMI = \\dfrac{M}{H^2}$$\n$$BMI_{new} = 1.3\\dfrac{M}{H^{2.5}}$$"}}