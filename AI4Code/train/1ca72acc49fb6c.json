{"cell_type":{"f3ff145b":"code","9f390429":"code","6a856c46":"code","8a1b95b7":"code","245b157f":"code","f832f379":"code","423d40a9":"code","39c3e286":"code","2edba2fd":"code","bce3e5cd":"code","549d3d82":"code","fa340025":"code","c1253e4b":"code","4e7beed1":"code","d43923c7":"code","0dd8655f":"code","25fe5380":"code","deed7ac5":"code","04143117":"code","f27a7b0d":"code","b90b98d1":"code","d992e7e7":"code","f892d393":"code","f13d54fb":"code","8b519fe4":"code","ed2508f6":"code","597576e6":"code","ea3fd572":"code","93655f32":"code","1be7c76b":"code","91a7f42b":"code","11075b6c":"markdown","538bac35":"markdown","a83af2c4":"markdown","c3567c29":"markdown","9e4cea0d":"markdown","c166b32f":"markdown","fe31f432":"markdown","c977b819":"markdown","e5f4909e":"markdown","89263be8":"markdown","5c31fcc4":"markdown","c8e3601a":"markdown","b4a24a0d":"markdown","bda02bef":"markdown","94a02855":"markdown","2f9a0e34":"markdown","3eaf8c9e":"markdown","c46ee91e":"markdown","16ad290a":"markdown","3aa0ed4c":"markdown"},"source":{"f3ff145b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.offline import iplot\nfrom scipy.stats import pearsonr\nimport statsmodels.api as sm\nfrom statsmodels.sandbox.regression.predstd import wls_prediction_std\nfrom sklearn.preprocessing import scale\nfrom sklearn.preprocessing import normalize\nimport scipy.cluster.hierarchy as shc\nfrom scipy import stats\nsns.set_style(\"darkgrid\")\nplt.style.use(\"fivethirtyeight\")\nimport warnings\nwarnings.filterwarnings('ignore')","9f390429":"df=pd.read_csv('..\/input\/world-happiness\/2019.csv')","6a856c46":"df.columns","8a1b95b7":"df.head(10)","245b157f":"df.shape","f832f379":"df.min()","423d40a9":"df.style.background_gradient(cmap='Blues')","39c3e286":"df.info()","2edba2fd":"df.describe().style.background_gradient(cmap='Blues')","bce3e5cd":"df.isna().sum()","549d3d82":"df.corr().style.background_gradient(cmap=\"Greens\")","fa340025":"plt.figure(figsize=(20,8))\nsns.heatmap(df.corr(), annot=True);","c1253e4b":"df.rename(columns = {'Overall rank':'RANK', 'Country or region':'REGION','GDP per capita':'GDP','Social support':'SCOICL','Healthy life expectancy'\n                    :'HIE','Freedom to make life choices':'FTMLC','Perceptions of corruption':'CORUP'}, inplace = True)","4e7beed1":"df.columns","d43923c7":"df1=df[['Score','RANK','GDP','CORUP']]","0dd8655f":"df1.head(3)","25fe5380":"cormat=df1.corr()","deed7ac5":"sns.heatmap(cormat, annot=True);","04143117":"differ=df['Score'].max()-df['Score'].min()\nz=round(differ\/3,3)\nlow=df['Score'].min()+z\nmid=low+z","f27a7b0d":"cat=[]\nfor i in df.Score:\n    if(i>0 and i<low):\n        cat.append('Low')\n    elif(i>low and i<mid):\n         cat.append('Mid')\n    else:\n         cat.append('High')\ndf['Category']=cat  ","b90b98d1":"color = (df.Category == 'High' ).map({True: 'background-color: lightblue',False:'background-color: red'})\ndf.style.apply(lambda s: color)","d992e7e7":"fig = px.bar(df, x='REGION', y='Score',\n             hover_data=['RANK', 'GDP', 'SCOICL', 'HIE', 'FTMLC'], color='GDP')\nfig.show()","f892d393":"ndf=pd.pivot_table(df, index = 'REGION', values=[\"Score\",\"SCOICL\"])\nndf[\"Score\"]=ndf[\"Score\"]\/max(ndf[\"Score\"])\nndf[\"SOCIAL\"]=ndf[\"SCOICL\"]\/max(ndf[\"SCOICL\"])\nsns.jointplot(ndf.SCOICL,ndf.Score,kind=\"kde\",height=10,space=0.5)\nplt.savefig('graph.png')\nplt.show()","f13d54fb":"df.columns","8b519fe4":"fig = px.scatter_matrix(df,dimensions=['RANK', 'GDP', 'SCOICL', 'HIE', 'FTMLC','CORUP'],color='Category')\nfig.show()","ed2508f6":"y = df['GDP']\nx =  df[['RANK', 'SCOICL', 'HIE', 'FTMLC','CORUP']]\nmodel = sm.OLS(y, x)\nresults = model.fit()\nprint(results.summary())","597576e6":"print('Parameters: ', results.params)\nprint('Standard errors: ', results.bse)","ea3fd572":"data = dict(type = 'choropleth', \n           locations = df['REGION'],\n           locationmode = 'country names',\n           colorscale='RdYlGn',\n           z = df['Score'], \n           text = df['REGION'],\n           colorbar = {'title':'Score'})\n\nlayout = dict(title = 'Geographical Visualization of Happiness Score', geo = dict(showframe = True, projection = {'type': 'azimuthal equal area'}))\n\nchoromap3 = go.Figure(data = [data], layout=layout)\niplot(choromap3)","93655f32":"df2=df.drop(['REGION', 'RANK','Category'], axis=1)","1be7c76b":"df2.head()","91a7f42b":"fig = ff.create_dendrogram(df2, color_threshold=1)\nfig.update_layout(width=2000, height=500)\nfig.show()","11075b6c":"# SEE THE COLUMNS AND DATA AND ALSO DO BASIC STATISTICS","538bac35":"darker the color gradient higher the index.","a83af2c4":"# clustering","c3567c29":"# REORGNISED THE COLUMNS NAME","9e4cea0d":"# COUNT THE FEATURES FOR EACH COUNTRIES IN BAR PLOT","c166b32f":"# building a ordinary linear regression model","fe31f432":"# LOAD DATA","c977b819":"# the above pair plot we can visualise the correlation in between the parameters like gdp, social supprt, freedom, health, rank, corruption. and how all this parameters varies in the high, mid, low happy countries. ","e5f4909e":"# Geographical Visualization of Score","89263be8":"# Visualization of the percentage of happiness according to regions and social support affecting it.\nWith the joint plot we can see the correlation between the two features.","5c31fcc4":"we can see that there is no null value*.*","c8e3601a":"# FINDING MISSING VALUE","b4a24a0d":"# BASIC VISUALIZATION","bda02bef":"# correlation in between the columns","94a02855":"HEATMAP","2f9a0e34":"1. above barplot give us a clean idea about score for each countries in terms of social supprt, freedom, health, rank. color is varied for gdp. if gdp is high color is yellow and blue for low gdp.\n2. please hover the mouse for detail view.","3eaf8c9e":"in the above model we can observed the t test value, p value, std err, skewness, kurtosis and all the statistical parameters. ","c46ee91e":"# LOAD THE LIBRARIES","16ad290a":"in clustering the x axis represent the serial no of countries according their rank.","3aa0ed4c":"it has 156 rows and 9 columns."}}