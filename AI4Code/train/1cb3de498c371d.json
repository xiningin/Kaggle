{"cell_type":{"50eeb8e3":"code","a18ea8c3":"code","34d22d26":"code","b6376560":"code","84101d34":"code","534100f9":"code","60581d47":"code","792f188c":"code","2a71826f":"code","5105cbf7":"code","394806e5":"code","695e16e6":"code","e2962653":"code","d55c7027":"code","070df764":"code","1802b3d2":"code","5ac0edbc":"code","e8d33c99":"code","0bae35a9":"code","bb31f7d8":"code","9c039f24":"code","c980bdc5":"code","c6b07eb6":"code","4139d7a4":"code","10912531":"code","88ca5488":"markdown","043047d3":"markdown","66ddff33":"markdown","e7145299":"markdown","648e6eea":"markdown","f67a51c5":"markdown","53880f2b":"markdown","122d6eb1":"markdown","d0385c0b":"markdown","ab200db6":"markdown","2e13ea8c":"markdown","08bcb588":"markdown","9db268df":"markdown","03f358d4":"markdown","76ead432":"markdown","5b56ddce":"markdown","e6381823":"markdown","e1ac50bc":"markdown","5ec94792":"markdown","8b4d02ff":"markdown","248ec9a2":"markdown"},"source":{"50eeb8e3":"# !pip install pandasql\n# !pip install plotly","a18ea8c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(f\"Using file(s): {os.path.join(dirname, filename)}\")\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34d22d26":"# Imports\n\nimport pprint\nimport sqlite3\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom matplotlib import pyplot as plt\nfrom plotly.subplots import make_subplots","b6376560":"# Connect to dataset and form dataFrames to run analytics on\n\ncon = sqlite3.connect(\"..\/input\/mental-health-in-the-tech-industry\/mental_health.sqlite\")\n\nquestions_df = pd.read_sql_query(\"SELECT * from Question\", con)\n\nanswers_df = pd.read_sql_query(\"SELECT * from Answer\", con)\nanswers_df.columns = ['AnswerText', 'SurveyID',\t'UserID', 'questionid']\n\nsurveys_df = pd.read_sql_query(\"SELECT * from Survey\", con)\n# display(surveys_df)","84101d34":"# Form a singular df with all present Q&As\nqa = pd.merge(answers_df, questions_df, how='left', on='questionid')\n# display(qa)","534100f9":"# qa.to_csv(\".\/qa_df.csv\", index=False)","60581d47":"# Get a list of all survey years\nsurvey_years = list(surveys_df[\"SurveyID\"])\n# print(\"Survey Years: \", survey_years)","792f188c":"gender_through_years = qa.query(\"questionid == 2\")\n# gender_through_years.groupby(\"UserID\")\n# display(gender_through_years)","2a71826f":"temp_groupby = None\ngender_distribution = \\\n{\n    \"male\": [0, 0, 0, 0, 0],\n    \"female\": [0, 0, 0, 0, 0],\n    \"transgender\": [0, 0, 0, 0, 0],\n    \"non_binary\": [0, 0, 0, 0, 0],\n    \"queer\": [0, 0, 0, 0, 0],\n    \"gender_fluid\": [0, 0, 0, 0, 0],\n    \"other\": [0, 0, 0, 0, 0]\n}\n\n\nfor idx, year in enumerate(surveys_df[\"SurveyID\"]):\n    temp = gender_through_years[gender_through_years[\"SurveyID\"] == year]\n    temp_groupby = temp.groupby('AnswerText').count()\n#     display(temp_groupby)\n    \n    for answer, row in temp_groupby.iterrows():\n#         print((answer), type(row[1]))\n        if \"trans\" in answer.lower() or \"ftm\" in answer.lower() or \"mtf\" in answer.lower():                     # Using short formms to catch all cases. \n#             print(\"Transgender: \", answer)\n            gender_distribution[\"transgender\"][idx] = gender_distribution[\"transgender\"][idx] + row[1]\n        elif \"fluid\" in answer.lower():                                                           \n#             print(\"Gender-fluid: \", answer)\n            gender_distribution[\"gender_fluid\"][idx] = gender_distribution[\"gender_fluid\"][idx] + row[1]\n        elif \"female\" in answer.lower() or \"she\" in answer.lower() or \"femina\" in answer.lower():                                                           \n#             print(\"Female: \", answer)\n            gender_distribution[\"female\"][idx] = gender_distribution[\"female\"][idx] + row[1]\n        elif (\"non\" in answer.lower() and \"binary\" in answer.lower()) or \"nb\" in answer.lower():                                                           \n#             print(\"Non-binary: \", answer)\n            gender_distribution[\"non_binary\"][idx] = gender_distribution[\"non_binary\"][idx] + row[1]\n        elif \"queer\" in answer.lower():                                                           \n#             print(\"Queer: \", answer)\n            gender_distribution[\"queer\"][idx] = gender_distribution[\"queer\"][idx] + row[1]\n        elif \"male\" in answer.lower() or \"guy\" in answer.lower() or \"swm\" in answer.lower() or \"masculino\" in answer.lower():                                                           \n#             print(\"Male: \", answer)\n            gender_distribution[\"male\"][idx] = gender_distribution[\"male\"][idx] + row[1]\n        else:\n#             print(\"Other: \", answer)\n            gender_distribution[\"other\"][idx] = gender_distribution[\"other\"][idx] + row[1]\n#     print(\"---------------------------------------------------------\")","5105cbf7":"print(f\"Gender distribution: \\n\")\npprint.pprint(gender_distribution)","394806e5":"plt.figure(figsize=(15,7))\nfor key in gender_distribution.keys():\n    plt.plot(gender_distribution.get(key), \"o-\", label=key.title().replace(\"_\", \" \"))\n    \n    if key is \"male\" or key is \"female\":                                    # Annotating points only for male and female as the other numbers are very less\n        for x in range(len(survey_years)):\n            plt.annotate(gender_distribution.get(key)[x], # this is the text\n                         (x, gender_distribution.get(key)[x]), # these are the coordinates to position the label\n                         textcoords=\"offset points\", # how to position the text\n                         xytext=(0,10), # distance from text to points (x,y)\n                         ha='center') # horizontal alignment can be left, right or center\n\n\nplt.legend(title=\"Legend\", frameon=False)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.xticks(range(len(survey_years)), survey_years, rotation=90)\nplt.title(label=\"Absolute distribution of genders taking the \\\"Mental Health in Tech\\\" Survey\",\n          fontsize=14,\n          y=1.05\n         )\nplt.savefig(\".\/Absolute Gender Distribution.png\", dpi=600, transparent=True)\nplt.show()","695e16e6":"age_group = qa.query(\"questionid == 1\")[[\"SurveyID\", \"AnswerText\"]]\nprint(\"-\"*50, \"\\nBefore Filtering\\n\", \"-\"*50, sep=\"\")\nprint(f\"Minimum age: \", age_group[\"AnswerText\"].astype(\"int\").min())\nprint(f\"Maximum age: \", age_group[\"AnswerText\"].astype(\"int\").max())\nprint(f\"Mean age: \", round(age_group[\"AnswerText\"].astype(\"int\").mean(), 2))\nprint(f\"Median age: \", age_group[\"AnswerText\"].astype(\"int\").median())\nprint()\n\nx = age_group[(age_group.SurveyID == year) & \\\n                               (age_group.AnswerText.astype(\"int\") >= 15) & \\\n                               (age_group.AnswerText.astype(\"int\") <= 90)]\nprint(\"-\"*50, \"\\nAfter Filtering\\n\", \"-\"*50, sep=\"\")\nprint(f\"Minimum age: \", x[\"AnswerText\"].astype(\"int\").min())\nprint(f\"Maximum age: \", x[\"AnswerText\"].astype(\"int\").max())\nprint(f\"Mean age: \", round(x[\"AnswerText\"].astype(\"int\").mean(), 2))\nprint(f\"Median age: \", x[\"AnswerText\"].astype(\"int\").median())","e2962653":"age_group = qa.query(\"questionid == 1\")[[\"SurveyID\", \"AnswerText\"]]\nage_dict = {}\n\nfor year in survey_years:\n#     print(\"Working with year: \", year)\n    age_dict[year] = age_group[(age_group.SurveyID == year) & \\\n                               (age_group.AnswerText.astype(\"int\") >= 15) & \\\n                               (age_group.AnswerText.astype(\"int\") <= 90)] \\\n                        .AnswerText \\\n                        .astype(\"int\") \\\n                        .sort_values() \\\n                        .tolist()\n    \naxarr = pd.DataFrame(dict([ (k,pd.Series(v)) for k,v in age_dict.items() ])) \\\n        .hist(\n            figsize=(20,7), \n            xrot=90,sharex=True\n        )\nfor ax in axarr.flatten():\n    ax.set_xlabel(\"Age\")\n    ax.set_ylabel(\"No. of people\")\n    \nplt.suptitle(\"Age Distribution of Participants Taking The Survey\", fontsize=15)\nplt.savefig(\".\/Age Distribution.png\", dpi=600, transparent=True)","d55c7027":"country_df = qa.query(\"questionid == 3\")[[\"SurveyID\", \"AnswerText\"]]\n# country_df\n\ncountry_dict = {}\n\nfor year in survey_years:\n#     print(\"Working with year: \", year)\n    year_country_df = country_df[(country_df.SurveyID == year)]\n    value_counts = year_country_df.value_counts()\n    temp_dict = {}\n    \n    for country_name, country_no in zip(value_counts.index, value_counts):\n        country_name = country_name[1]  ## Subscript [1] is used to deal with the multi index part. Print the following to understand better: 'year_country_df.value_counts().index'\n        \n        # Handle USA separately since the name changed in the survey and both the values are present in the answer\n        if country_name == \"United States\" or  country_name == \"United States of America\":\n            temp_dict[\"USA\"] = int(country_no)\n\n        else:\n            temp_dict[country_name] = int(country_no)\n    \n    country_dict[year] = temp_dict\n#     break\n\ncountry_df = pd.DataFrame(country_dict)\ncountry_df.to_csv(\".\/Countries taking the survey.csv\", index=False)\ndisplay(country_df)","070df764":"for column in country_df.columns:\n#     print(\"Working with column: \", column)\n    count_df = country_df[column] \\\n                .sort_values(ascending=False) \\\n#                 .head(5)\n    count_df_others_sum = count_df[6:].sum()\n    temp_df = count_df.head(5)\n    temp_df.loc[\"Others\"] = count_df_others_sum\n#     print(temp_df)\n    \n    fig = px.pie(temp_df,\n            values=column, \n            names=temp_df.index,\n            title=\"Top 5 countries taking the survey \"+str(column),\n            labels={\n                \"index\":\"Country\"\n            })\n    fig.update_traces(textposition='inside', textinfo='percent+label')\n#     fig.write_image(\".\/Top 5 countries taking the survey every year_\"+str(column)+\".png\")    \n\n    fig.update_layout(template=\"plotly_dark\")\n    fig.show()","1802b3d2":"seek_help_yoy = qa.query(\"questionid == 7\")\n# seek_help_yoy","5ac0edbc":"percent_yoy = []\ntot_yoy = []\nfor year in survey_years:\n    tmp = seek_help_yoy[(seek_help_yoy.SurveyID == year)][[\"AnswerText\", \"UserID\", \"SurveyID\"]]\n    tmp2 = tmp.AnswerText.value_counts()\n    \n    percent_yoy.append((tmp2.loc[\"1\"] \/ (tmp2.loc[\"1\"]+tmp2.loc[\"0\"])) * 100)    # Percentage of participant each year who seeked help\n    tot_yoy.append((tmp2.loc[\"1\"]+tmp2.loc[\"0\"]))                                # Total no.  of participant each year who took part\n#     display(tmp2)","e8d33c99":"# fig = px.line(x=survey_years, y=percent_yoy,\n#              labels=dict(x=\"Year\", y=\"% people seeking help\", color=\"Time Period\"))\n# # fig.update_traces(textposition='inside')\n# fig.add_bar(x=survey_years, y=percent_yoy, name=\"% people seeking help\")\n# fig.update_layout(title_text=\"% of participants seeking help YoY\")\n# fig.update_layout(showlegend=False)\n# fig.show()","0bae35a9":"# Create figure with secondary y-axis\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\n# Add traces\nfig.add_trace(\n    go.Scatter(x=survey_years, y=percent_yoy, name=\"% of participants seeking help\"),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=survey_years, y=tot_yoy, name=\"No. of participants\"),\n    secondary_y=True,\n)\n\n# Add figure title\nfig.update_layout(\n    title_text=\"Percent of participants seeking help YoY\",\n    template=\"plotly_dark\"\n)\n\n# Set x-axis title\nfig.update_xaxes(title_text=\"Survey Year\")\n\n# Set y-axes titles\nfig.update_yaxes(title_text=\"% of participants seeking help\", secondary_y=False)\nfig.update_yaxes(title_text=\"No. of participants\", secondary_y=True)\n\nfig.show()","bb31f7d8":"employment_df = qa.query(\"questionid == 5\")[[\"AnswerText\", \"UserID\"]].set_index('UserID')\nemployment_df = employment_df[employment_df['AnswerText'] != '-1'] \n# display(employment_df)\n# type(employment_df)\n# display(employment_df.describe(include='all'))\n# display(employment_df.value_counts())\n\nprint(f\"How many total people work in an enterprise: {employment_df.value_counts()[0]}\")\nprint(f\"How many total people are self employed: {employment_df.value_counts()[1]}\")","9c039f24":"diagnosed_df = qa.query(\"questionid == 34\")[[\"AnswerText\", \"UserID\"]].set_index('UserID')\ndiagnosed_df = diagnosed_df[diagnosed_df['AnswerText'] != '-1']                                # Only consider Yes\/No answers\n# display(diagnosed_df)\n# display(diagnosed_df.describe())\n# display(diagnosed_df.value_counts())\n\n\nprint(f\"No. of people diagnosed with a mental health illness: {diagnosed_df.value_counts()[0]}\")\nprint(f\"No. of people NOT diagnosed with a mental health illness: {diagnosed_df.value_counts()[1]}\")","c980bdc5":"# Join employment with diagnosed and group by on employment \nemp_diag_join = employment_df.join(diagnosed_df,\n                     on=\"UserID\",\n                     how=\"inner\",\n                     lsuffix=\"_employment\",\n                     rsuffix='_diagnosed')\n# Drop the index\nemp_diag_join.reset_index(drop=True, inplace=True)","c6b07eb6":"# Separate all the values\ncorp_diag = emp_diag_join.value_counts()[0]\nprint(f\"Enterprise and diagnosed: {corp_diag}\")\n\ncorp_notdiag = emp_diag_join.value_counts()[1]\nprint(f\"Enterprise and not diagnosed: {corp_notdiag}\")\n\nself_diag = emp_diag_join.value_counts()[2]\nprint(f\"Self employed and diagnosed: {self_diag}\")\n\nself_notdiag = emp_diag_join.value_counts()[3]\nprint(f\"Self employed and not diagnosed: {self_notdiag}\")","4139d7a4":"fig = px.bar([[corp_diag, corp_notdiag], [self_diag, self_notdiag]],\n            labels={\n                \"variable\":\"Diagnosed\",\n                \"value\":\"Count\",\n                \"index\":\"Self employed?\"\n            })\n\nfig.update_layout(\n    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [0, 1],\n        ticktext = ['Working at a corporate', 'Self employed']\n    ),\n    title=\"Does working in a corporate cause more mental health issues?\",\n    xaxis_title=\"\",\n    yaxis_title=\"Count\",\n    \n    template=\"plotly_dark\"\n)\n\nfig.update_layout(showlegend=False)\nfig.show()","10912531":"px.imshow(emp_diag_join.apply(lambda x : pd.factorize(x)[0]).corr(method='pearson', min_periods=1))","88ca5488":"As we see agin the number of people diagnosed with a mental illness is almost double of that of people not diagnosed","043047d3":"# Bibliography:\n1. https:\/\/www.iqmetrix.com\/blog\/lets-talk-its-time-to-get-serious-about-mental-illness-in-tech\n2. https:\/\/www.mentalhealth.org.uk\/statistics\/mental-health-statistics-people-seeking-help\n3. https:\/\/www.who.int\/mental_health\/media\/en\/712.pdf?ua=1\n4. https:\/\/colab.research.google.com\/drive\/1XjXAFhTO6oikEyjOUh0YWw0-rdjR0b-L?usp=sharing#scrollTo=w5uc_zV6MCl6","66ddff33":"Finally, to complete this analysis we plot them on a chart where the x-axis represents whether or not the person works at an enterprise.\n\nThe y-axis represents the number of people either diagnosed or not diagnosed, stacked on top of each other to give us a better vizualization of the total number","e7145299":"# Conclusion\n\nWith a survey this extensive and which has run over so many years the amount of answers one could find out are virtually boundless. However, ANTHONY INTHAVONG has done an amazing job representing the much more categorical questions. To me it seemed to be oiling a well-oiled wheel to be running these analysis again. Please head over to the below link for these visualizations.\n\nThis is my first ever Kaggle notebook. I have always wanted to do this but somehow never really got around to it, but now I have. If you like the work please upvote it. If you have suggestions,\/feedbacks or criticism please feel free to reach me. Thank you for checking this out :)","648e6eea":"In the graph above we see that the number of total participants has significantly decreased over the years, majority of whom are male. The number of women taking the survey mainly remain constant. Number of people of other genders are very low and it is difficult to establish any pattern as they reamain low throughout the time period.","f67a51c5":"# Mental Health in Tech\n\n\nWorking in the tech industry is often portrayed as this beautiful place with sunshine and rainbows. Where butterflies fly amock and flowers bloom every couple hours. A place where the \u2018geeks\u2019 and \u2018nerds\u2019 of this world sit in front of dimly lit dark screens with green text converting heaps of data into useful, meaningful information with a couple of simple keystrokes.\n\nWhile this may **seem** true to a certain extent, this is in fact far away from ground reality. Tech is one of the fastest moving industry where people want answers even before they could formulate their problems. Where clients want fully-fleged software solutions even before they can describe what it is that they want this solution to do exactly.\n\nWith the fast-paced environment comes a lot of pressure to deliver quality production ready deliverables. In addition with the advent of new methodologies such as Agile, Peer programming and XP (Extreme Programming) workers are now under more stress than ever before to perform and deliver. \n\n\nAccording to OSMI data, 51% of tech professionals have been diagnosed with a mental health condition. By comparison, 19.1% of U.S. adults experience mental illness, according to the National Alliance on Mental Illness.\n\nA study by Michael Freeman found that entrepreneurs are 50% more likely to report having a mental health condition:\n\nFounders are:\n2x more likely to suffer from depression\n6x more likely to suffer from ADHD\n3x more likely to suffer from substance abuse\n10x more likely to suffer from bi-polar disorder\n2x more likely to have psychiatric hospitalization\n2x more likely to have suicidal thoughts\n\nThe terrifying problem with mental illness is that it is invisible; it's a private battle that people have, and it's hard to know when people need help.","53880f2b":"# Age groups taking the survey\nWe tried extracting some information about the age of participants in the survey, including but not limited to the youngest, oldest, and the median age of the participants.\n\nHowever, the data provided was dirty and this insight could not be derived very easily. This is because below we see the maximum age entered by user 364 is **329**, which makes it rather unbelievable. Similarly, the minimum age entered is **-99**, which again is difficult to believe. This is why you always implement end user validation.\n\nThe cells below has the 20 largest smallest and largest data points, some of which makes believing them difficult, if not straight up impossible.","122d6eb1":"# Countries taking the survey\n\nThe Mental Health in Tech Survey was published interantionally with a lot of countries taking part. We have a total of 80 countries over the course of six years. Some of these countries have very significant number of participants while others have very less. \n\nThe below table shows the top 5 and bottom 5 countries taking part in the survey.","d0385c0b":"> Personal note: I have always wanted to plot a interactive graph, and now I did","ab200db6":"Since plotiing so many country data on a plot will virtually make the graph unreadable, we decided to plot the top 5 countries for each year. The below graphs display the same.\n\nOn hovering over the graph we get a pop-up of the country and the number of people taking part from that country in that year.","2e13ea8c":"# Gender in Tech\n\nTech (and STEM as large) has been a male-dominated field for a very long time, Even with corporates actively encouraging females for tech positions via CSR activities, the ratio doesn\u2019t seem to improve. \n\nOut of 100 FTSE companies, only 7 are run by women and there are only 38 women CEO's in the Fortune 500 companies.\n\nIn the below section we explore this dynamic in the survey. On exploring the dataset we see genders more than just 'male' or 'female'. We plot them on a graph with respect to time, hence showing how certain gender roles may\/may not have increased\/decreased over time","08bcb588":"Credit: This notebook is majorly inspired by the some notebooks that came before this, especially but not limited to **GUILLAUME S**, and **ANTHONY INTHAVONG**.\n \n Thank you !!","9db268df":"> Personal note: I have also wanted to do a double y-axis graph since I saw a covid data-viz. in the newspaper. doing this was very satisfying.","03f358d4":"# Employment status  - self employed vs employed by a corporate enterprise. Do corporates harm mental health more?\n\nA conventional belief is that people working in enterprises are more likely to fall victim to mental health related issues. We take upon ourselves to explore this notion in the section below. Does working in an enterprise really cause more mental health issues? We have ignored the enterprise size herein and this could be taken up at a later point of time.","76ead432":"Lastly, we plot a correlation matrix using Seaborn to see if there is any correlation between working at an enterprise and having been diagnosed with a mental health disorder: there is not as per this data set","5b56ddce":"We notice that even though the maximum and minimum age changes the median and mean remain almost unchanged, albeit shifting towards the right a bit.\n\nNext, we plot these values onto charts, depending on year-wise to see the distribution of ages.","e6381823":"In the chart below we explore this question in some depth. How many people are actually willing to seek out mental health treatment? The blue line indicates people who seek out help while the red line signifies the total number of person, giving us a baseline to measure against.\n\nWe observe that as years go on the percent of people seeking out help for mental health increases even though the total number of people taking the survey decreased. One explanation for this can be as the total number decreases the percent value increases with time. With sufficient dat, this hypothesis could be proven, or, disproven","e1ac50bc":"However, bfore we plot the graph, we take a look at the bare numbers that make up the graph. \n\nEach row represent the top genders which are manually selected.\nInside each row is a list of numbers which corresponds to the total participants of the gender who took the survey the corresponding year (2014, 2016, 2017, 2018, and 2019).","5ec94792":"As we see most people work in an enterprise, the datasets are imbalanced. \nWe will now find out how many people are diagnosed:","8b4d02ff":"# How many people are actually willing to seek out treatment?\n\nDue to the stigma surrounding mental health and the alienation of people who are diagnosed with mental health issues very few people actually seek out treatment even after they have a proper diagnosis, this is even more widespread in some Asian countries.\n\nOne adult in eight (12.1%) receives mental health treatment, with 10.4% receiving medication and 3% receiving psychological therapy. The overlap within the statistics is due to 1.3% of those receiving treatment reporting receiving both medication and psychological therapy.\n\nFor those with common mental health problems, 36.2% reported receiving treatment. The proportion of people with a common mental health problem using mental health treatment has significantly increased. Around one person in four aged 16\u201374 with symptoms of a common mental health problem was receiving some kind of mental health treatment in 2000 (23.1%) and 2007 (24.4%). By 2014, this has increased to more than one in three (37.3%) (see chart below).2One adult in eight (12.1%) receives mental health treatment, with 10.4% receiving medication and 3% receiving psychological therapy. The overlap within the statistics is due to 1.3% of those receiving treatment reporting receiving both medication and psychological therapy.\n\nFor those with common mental health problems, 36.2% reported receiving treatment. The proportion of people with a common mental health problem using mental health treatment has significantly increased. Around one person in four aged 16\u201374 with symptoms of a common mental health problem was receiving some kind of mental health treatment in 2000 (23.1%) and 2007 (24.4%). By 2014, this has increased to more than one in three (37.3%)","248ec9a2":"Now, we are going to get all the combinations of people who are either working in an enterprise and\/or are diagnosed with a mental health illness"}}