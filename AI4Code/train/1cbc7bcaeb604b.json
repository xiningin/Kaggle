{"cell_type":{"5bb0821f":"code","406dbbd2":"code","a382e8d8":"code","ad0491a6":"code","b430cad9":"code","981de0f7":"code","86a97fc5":"code","312cf680":"code","51376ae2":"code","98ce9ad8":"code","abaa7242":"code","cabe3c51":"code","60bba3e4":"code","947d5c44":"code","294c7951":"code","a79f1970":"code","2c1a9ffa":"code","3e37dfb4":"code","1048c079":"code","6506ffa2":"code","351e8fa5":"code","37228675":"code","9c17cea4":"code","9c532697":"code","e06679e4":"code","41c2b92d":"code","ed4b1d26":"code","273bb578":"code","52c388fc":"code","117b71d9":"code","34961112":"code","117a301d":"code","a3e3c875":"code","75a22058":"markdown","0d24850d":"markdown","6cb803da":"markdown","8ef570c7":"markdown","9829db15":"markdown","f0e99042":"markdown"},"source":{"5bb0821f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping\n\nfrom sklearn.metrics import classification_report,confusion_matrix\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","406dbbd2":"df = pd.read_csv(\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")","a382e8d8":"df.head()","ad0491a6":"df.columns","b430cad9":"### Remove id and Unnamed: 32\n\ndf.drop([\"Unnamed: 32\",\"id\"],axis=1,inplace=True)","981de0f7":"df.head()","86a97fc5":"df.info()","312cf680":"df.describe().transpose()","51376ae2":"df.isnull().sum() ### No Null Values in the dataset","98ce9ad8":"plt.figure(figsize=(8,5))\nax = sns.countplot(x='diagnosis',data=df)\nfor p in ax.patches:\n    ax.annotate('{:}'.format(p.get_height()), (p.get_x()+0.35, p.get_height()+5),fontweight='bold',color='red')","abaa7242":"sns.pairplot(df.loc[:,'diagnosis':'fractal_dimension_mean'],hue='diagnosis')","cabe3c51":"label_encoder = LabelEncoder()","60bba3e4":"df[\"diagnosis\"] = label_encoder.fit_transform(df[\"diagnosis\"])","947d5c44":"plt.figure(figsize=(24,15))\nsns.heatmap(df.corr(),mask=np.triu(df.corr()),annot=True,fmt='.1f',cmap='viridis')","294c7951":"corr = df.corr()\ncorr_mat = corr[((corr > 0.6) | (corr < -0.6))]\nplt.figure(figsize=(24,15))\nsns.heatmap(corr_mat,mask=np.triu(corr_mat),annot=True,fmt='.1f',cmap='viridis')","a79f1970":"df.corr()[\"diagnosis\"].sort_values(ascending=False).drop(\"diagnosis\").plot(kind='bar',figsize=(12,6))\nplt.title(\"Overall Correlation of features with Diagnosis\")","2c1a9ffa":"X = df.drop('diagnosis',axis=1).values\ny = df[\"diagnosis\"].values","3e37dfb4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","1048c079":"scaler = MinMaxScaler()","6506ffa2":"X_train = scaler.fit_transform(X_train)","351e8fa5":"X_test = scaler.transform(X_test)","37228675":"X_train.shape","9c17cea4":"model = Sequential()\n\n\nmodel.add(Dense(30,activation='relu'))\nmodel.add(Dense(15,activation='relu'))\n\n##Binary Classification\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy')\n","9c532697":"model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=600)","e06679e4":"loss = pd.DataFrame(model.history.history)\nloss.plot()","41c2b92d":"early_stop = EarlyStopping(monitor='val_loss',mode='min',verbose=1,patience=25)","ed4b1d26":"model = Sequential()\n\n\nmodel.add(Dense(30,activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(15,activation='relu'))\nmodel.add(Dropout(0.5))\n\n##Binary Classification\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy')\n","273bb578":"model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=600,callbacks=[early_stop])","52c388fc":"loss_df_drop = pd.DataFrame(model.history.history)\nloss_df_drop.plot()","117b71d9":"predictions = model.predict_classes(X_test)\n","34961112":"print(classification_report(y_true=y_test,y_pred=predictions))","117a301d":"print(confusion_matrix(y_test,predictions))","a3e3c875":"sns.heatmap(confusion_matrix(y_test,predictions),annot=True,fmt='.0f')","75a22058":"### Model Creation","0d24850d":"### Correlation Matrix","6cb803da":"### Model seems to overfit the data, so to prevent this we can retrain the model using Earlystop and Dropout layers","8ef570c7":"### Conclusion: Model is very good in classifying Beningn and Malignant Classes using Dropout and Earlystopping method by preventing overfitting in Neural Networks","9829db15":"### Exploratory Data Analysis","f0e99042":"### Data Preprocessing"}}