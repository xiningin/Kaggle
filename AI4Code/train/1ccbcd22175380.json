{"cell_type":{"b34d3fa5":"code","590c32d3":"code","1e33da4a":"code","9438658b":"code","0e0d8853":"code","cfd85cec":"code","8979bae6":"code","25338129":"code","8b2bd125":"code","ca83fb11":"code","d07f3048":"code","37ca3864":"code","a6e134ea":"code","8ff21677":"code","a05e6296":"markdown","ba3e39b5":"markdown","210d42df":"markdown","b6fbf8bf":"markdown","ba233d15":"markdown"},"source":{"b34d3fa5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","590c32d3":"ESR = pd.read_csv('\/kaggle\/input\/epileptic-seizure-recognition\/Epileptic Seizure Recognition.csv')\nESR = ESR.drop(columns = ESR.columns[0]) \nESR.head()","1e33da4a":"cols = ESR.columns\ntgt = ESR.y\ntgt[tgt > 1] = 0\nax = sn.countplot(tgt,label=\"Count\")\nnon_seizure, seizure = tgt.value_counts()\nprint('The number of trials for the non-seizure class is:', non_seizure)\nprint('The number of trials for the seizure class is:', seizure)","9438658b":"ESR.isnull().sum().sum()","0e0d8853":"ESR.describe()","cfd85cec":"Y = ESR.iloc[:,178].values\nY.shape","8979bae6":"Y[Y>1]=0\nY","25338129":"X = ESR.iloc[:,1:178].values\nX.shape","8b2bd125":"from sklearn.model_selection import train_test_split, cross_val_score\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2)","ca83fb11":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","d07f3048":"from sklearn.svm import SVC\nclf = SVC()\nclf.fit(X_train, y_train)\ny_pred_svc = clf.predict(X_test)\nacc_svc = round(clf.score(X_train, y_train) * 100, 2)\nprint(\"Accuracy is:\",(str(acc_svc)+'%'))","37ca3864":"new_input1 = [ESR.iloc[6, :177]]\nnew_input1","a6e134ea":"new_output = clf.predict(new_input1)\nnew_output","8ff21677":"new_output\nif new_output==[1]:\n    print('\"yes\" you might get seizure be conscious about it')\nelse:\n    print('You are safe no worries :)')","a05e6296":"# SVM Algorithm Projection","ba3e39b5":"# Importing Libraries and Data","210d42df":"# Prediction of Output\n\nWe take a row from the dataset which represents EEG of a person at a given period of time and will try to predict the output. The output is binary; either the person will have chances of getting seizure or he will be safe.","b6fbf8bf":"# Accuracy:\n\n- We used Support Vector Machines algorithm to train the data for Seizure Occurence\n- We achieved 98.2 % accuracy.","ba233d15":"# EDA\n\nThe dataset has 2 categories:\n- Occurence of Seizure class\n- Non Seizure class"}}