{"cell_type":{"707b4c8c":"code","405b0b38":"code","5c3d67bc":"code","c41dd2a5":"code","0c0e763a":"code","710991e7":"code","3e9b0c8d":"code","82f4dff8":"code","d82e45e0":"code","f690549f":"code","77869871":"code","bdc633db":"code","1125db9b":"code","6a09735f":"code","52236272":"code","13894d1d":"code","5b0516be":"code","e7cc525d":"code","ae2a3ffb":"code","7943078f":"code","143728d3":"code","93b86b7a":"code","801f38f2":"code","c63d089e":"code","8deb3490":"code","628405e9":"markdown"},"source":{"707b4c8c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","405b0b38":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport nltk.classify.util\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn import metrics\nfrom sklearn.metrics import roc_curve, auc\nfrom nltk.classify import NaiveBayesClassifier\nimport numpy as np\nimport re\nimport string\nimport nltk\n%matplotlib inline\n","5c3d67bc":"df = pd.read_csv(\"..\/input\/consumer-reviews-of-amazon-products\/1429_1.csv\")\nlow_memory=False\ndf.head()","c41dd2a5":"df.columns","0c0e763a":"from IPython.display import HTML\ncat_hist = df.groupby('categories',as_index=False).count()\nHTML(pd.DataFrame(cat_hist['categories']).to_html())","710991e7":"df_new = df[[ 'name', 'brand',\n       'categories', 'reviews.doRecommend',\n       'reviews.numHelpful', 'reviews.rating', \n       'reviews.text', 'reviews.title', 'reviews.username']]","3e9b0c8d":"df_new.head(5)","82f4dff8":"import csv\nfrom collections import Counter\nfilename='\/kaggle\/input\/consumer-reviews-of-amazon-products\/1429_1.csv'\nwith open(filename, 'r') as f:\n    column = (row[17] for row in csv.reader(f))\n    print(\"Most frequent value: {0}\".format(Counter(column).most_common()[0][0]))","d82e45e0":"from collections import Counter\nfilename='\/kaggle\/input\/consumer-reviews-of-amazon-products\/1429_1.csv'\nwith open(filename, 'r') as f:\n    column = (row[14] for row in csv.reader(f))\n    print(\"Most frequent value: {0}\".format(Counter(column).most_common()[0][0]))","f690549f":"df_reviews = df[[ 'reviews.rating','reviews.text', 'reviews.title',]]","77869871":"df_reviews.head(5)","bdc633db":"df_classify = df_reviews[df_reviews[\"reviews.rating\"].notnull()]\ndf_classify[\"sentiment\"] = df_classify[\"reviews.rating\"] >= 4\ndf_classify[\"sentiment\"] = df_classify[\"sentiment\"].replace([True , False] , [\"Postive\" , \"Negative\"])\n\n# Lets count positive and negative review\ndf_classify[\"sentiment\"].value_counts().plot.bar()","1125db9b":"reviews=pd.DataFrame(df.groupby('reviews.rating').size().sort_values(ascending=False).rename('No of Users').reset_index())\nreview.head()","6a09735f":"import pandas as pd\nadd = \"..\/input\/consumer-reviews-of-amazon-products\/1429_1.csv\"\nreviews = pd.read_csv(add,low_memory=False)\nreviews.columns = ['id', 'name', 'asins', 'brand', 'categories', 'keys', 'manufacturer','date', 'dateAdded', 'dateSeen',\n       'didPurchase', 'doRecommend', 'id','numHelpful', 'rating', 'sourceURLs','text', 'title', 'userCity',\n       'userProvince', 'username']","52236272":"reviews.nunique()","13894d1d":"reviews.isnull().sum()","5b0516be":"reviews.drop(labels=['didPurchase','id','userCity','userProvince'],axis=1,inplace=True)","e7cc525d":"reviews.isnull().sum()","ae2a3ffb":"from matplotlib import pyplot\n%matplotlib inline\n\nstar = reviews.rating.value_counts()\nprint(\"*** Rating distribution ***\")\nprint(star)\nstar.sort_index(inplace=True)\nstar.plot(kind='bar',title='Amazon customer ratings',figsize=(6,6),style='Solarize_Light2')","7943078f":"NPS_score = round (100*((star.loc[5])-sum(star.loc[1:3]))\/sum(star.loc[:]),2)\nprint (\" NPS score of Amazon is : \"  + str(NPS_score))","143728d3":"kindle = reviews[reviews.name=='Amazon Kindle Paperwhite - eBook reader - 4 GB - 6 monochrome Paperwhite - touchscreen - Wi-Fi - black,,,']\n","93b86b7a":"kindle.isnull().sum()","801f38f2":"kindle_s = kindle.rating.value_counts()\nkindle_s.sort_index(inplace=True)\n\nKindle_NPS_score = round (100*(kindle_s[5]-sum(kindle_s[1:3]))\/sum(kindle_s),2)\nprint (\" NPS score of Kindle is : \"  + str(Kindle_NPS_score))\n#better NPS than overall amazon\nkindle_s.plot(kind='bar',title='Amazon customer ratings for Kindle',figsize=(6,6),style='Solarize_Light2')","c63d089e":"kindle.doRecommend.value_counts()","8deb3490":"kindle.rating.hist(by=kindle.doRecommend,figsize=(12,6))\n","628405e9":"**Importing Libraries**"}}