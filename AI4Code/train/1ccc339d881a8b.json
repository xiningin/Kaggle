{"cell_type":{"64692b1b":"code","4e328183":"code","459bc210":"code","5a8d2581":"code","9e7ab086":"code","c880b1d4":"code","a31dd60b":"code","c7c63dd5":"code","a1a8217c":"code","ad23d1f0":"code","07558c21":"code","a3cb31af":"code","b604ae0b":"code","8d41564b":"code","2add5d8a":"code","aa63ff07":"code","0afc0461":"code","f8e516a2":"code","fb5c7869":"code","0f879a4e":"code","188cf747":"code","bcea154b":"code","3f9e402d":"markdown","a9a7137f":"markdown","115f9501":"markdown","5ad7668c":"markdown","22b03e62":"markdown","9ec724c7":"markdown","08838dce":"markdown","840074c0":"markdown","3d3627e3":"markdown","a7a32645":"markdown","7dc83b0b":"markdown","d194503e":"markdown","30eef2d1":"markdown","b07ae5cb":"markdown","1a69360e":"markdown","f5efa688":"markdown","861133c2":"markdown","68b275dc":"markdown","a62444ce":"markdown","d38eaf38":"markdown"},"source":{"64692b1b":"import pandas as pd\nimport numpy as np\n\nimport warnings \nwarnings.filterwarnings('ignore')\n\n#ploting libraries\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n#feature engineering\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\n#train test split\nfrom sklearn.model_selection import train_test_split\n\n#metrics\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.metrics import classification_report, confusion_matrix, precision_recall_curve, auc, roc_curve\n\n#cross validation\nfrom sklearn.model_selection  import cross_val_score as CVS\n\n#ML models\nfrom xgboost import XGBClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n","4e328183":"# load dataset\n\nmushroom = pd.read_csv(\"..\/input\/mushrooms\/Mushrooms.csv\")\n\n#first five rows of the dataset\nmushroom.head()","459bc210":"# Shape of dataset\n\nmushroom.shape","5a8d2581":"# data information\n\nmushroom.info()","9e7ab086":"# visualize the count of edible and poisonous mushrooms using Seaborn\ncount = mushroom['class'].value_counts()\nplt.figure(figsize=(8,7))\nsns.barplot(count.index, count.values)\nplt.ylabel('Count', fontsize=12)\nplt.xlabel('Class', fontsize=12)\nplt.title('Number of poisonous\/edible mushrooms')\nplt.show()","c880b1d4":"fig, ax = plt.subplots(figsize=(10,7))\nsns.countplot(data=mushroom,x='cap-shape')","a31dd60b":"fig, ax = plt.subplots(figsize=(10,7))\nsns.countplot(data=mushroom,x='cap-shape',hue='class')","c7c63dd5":"mushroom.groupby('cap-shape')['class'].value_counts()","a1a8217c":"#Stats of dataset\n\nmushroom.describe()","ad23d1f0":"mushroom = mushroom.astype('category')\nmushroom.dtypes","07558c21":"#intialize label encoder\nLE = LabelEncoder()\n\n#change the categorical varaiables to numerical variables\nlabelencoder=LabelEncoder()\nfor column in mushroom.columns:\n    mushroom[column] = LE.fit_transform(mushroom[column])\n    \nmushroom.head()","a3cb31af":"mushroom['veil-type']","b604ae0b":"mushroom = mushroom.drop(['veil-type'], axis=1)","8d41564b":"plt.figure(figsize=(20,15))\nsns.heatmap(mushroom.corr(), annot=True,)","2add5d8a":"X = mushroom.drop(['class'], axis=1)\ny = mushroom['class']\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.1)","aa63ff07":"# LogisticRegression\n\nlr = LogisticRegression(solver=\"lbfgs\", max_iter=500)\nlr.fit(X_train, y_train)\nprint(\"Test Accuracy: {}%\".format(round(lr.score(X_test, y_test)*100,2)))\n\n# Classification report of Logistic Regression Classifier\ny_pred_lr = lr.predict(X_test)\nprint(\"Logistic Regression Classifier report: \\n\\n\", classification_report(y_test, y_pred_lr))","0afc0461":"# DecisionTreeRegressor\n\nfrom sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\ndt.fit(X_train, y_train)\n\ny_pred_dt = dt.predict(X_test)\nprint(\"Decision Tree Classifier report: \\n\\n\", classification_report(y_test, y_pred_dt))\nprint(\"Test Accuracy: {}%\".format(round(dt.score(X_test, y_test)*100, 2)))","f8e516a2":"#RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=100, random_state=42)\nrf.fit(X_train, y_train)\nprint(\"Test Accuracy: {}%\".format(round(rf.score(X_test, y_test)*100, 2)))\ny_pred_rf = rf.predict(X_test)\nprint(\"Random Forest Classifier report: \\n\\n\", classification_report(y_test, y_pred_rf))","fb5c7869":"# AdaBoostClassifier\n\nfrom sklearn.ensemble import AdaBoostClassifier\n\nada= AdaBoostClassifier(n_estimators = 100)\nprint(ada)\nada.fit(X_train, y_train)\npredada = ada.predict(X_test)\nprint(\"Test Accuracy: {}%\".format(round(ada.score(X_test, y_test)*100, 2)))\nprint(\"Random Forest Classifier report: \\n\\n\", classification_report(y_test, predada))","0f879a4e":"#  KNeighborsClassifier\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\npredknn = knn.predict(X_test)\n        \nprint(\"Test Accuracy: \", accuracy_score(predknn, y_test))\nprint(\"KNN Classifier report: \\n\\n\", classification_report(y_test, predknn))\n\n","188cf747":"import pickle\n\nfilename = 'mushroom.pkl'\npickle.dump(dt,open(filename, 'wb'))\nloaded_model = pickle.load(open(filename, 'rb'))\nloaded_model.predict(X_test)","bcea154b":"# Predicting some of the X_test results and matching it with true i.e. y_test values using Decision Tree Classifier.\n\na = np.array(y_test)\npredicted = np.array(y_pred_dt)\ndf_con = pd.DataFrame({\"orginal\":a, \"predicted\":predicted}, index = range(len(a)))\ndf_con","3f9e402d":"#### We see that all the column values are converted to ordinal and there are no categorical values left!\n#### Also, the column \u201cveil-type\u201d is 0 and not contributing to the data so we\u2019ll remove it.","a9a7137f":"####  \u2018e\u2019 and \u2018p\u2019 represents the count of the unique values i.e. 4208 and 3916 respectively. From the bar plot, we see that the dataset is balanced.","115f9501":"## Save the model","5ad7668c":"## Finding the best algorithm:","22b03e62":"## Importing Dataset and Data Information","9ec724c7":" ## Predictions","08838dce":"#### - all conical mushrooms are poisonous\n#### - all sunken mushrooms edible","840074c0":"# Mushroom","3d3627e3":"## Mushrooms are a rich, low calorie source of fiber, protein, and antioxidants. Mushrooms make a delicious addition to pizza, pasta, salads, and more.They\u2019re marvelous on pizza and decadent in soups and sauces, but if you\u2019re about to cook with mushrooms you picked yourself, proceed with caution.The most common dangerous mushrooms are those belonging to the Amanita genus, especially Amanita phalloides, aptly called \u201cdeath cap\u201d mushrooms. They contain toxic compounds called amatoxins that damage liver cells.\n","a7a32645":"####  - Our dataset has no missing values\n####  - All the columns have non numerical data ","7dc83b0b":"###  Most of the classification methods hit 100% accuracy with this dataset.\n\n### Also, from the classifier report we saw that our train and test data is balanced.","d194503e":"#### As we can see, the predicted and the true values match 100%.\n### Woohoo! Congratulations!!! We can now eat healthy mushrooms!! YAY!","30eef2d1":"## Data Manipulation\n#### The data is categorical so we\u2019ll use LabelEncoder to convert it to ordinal. LabelEncoder converts each value in a column to a number.","b07ae5cb":"![Mushroom](https:\/\/kj1bcdn.b-cdn.net\/media\/45838\/thumbnail-march-2021-22-1.jpg)","1a69360e":"![mush](https:\/\/www.jokejive.com\/images\/jokejive\/be\/bed032c25e287d303cc883857b4d7a4e.jpeg)\n","f5efa688":"## Importing Libraries","861133c2":"## Data Visualisation","68b275dc":"## Train test split","a62444ce":"#### There are 8124 rows and 23 coloumns in our dataset","d38eaf38":"### This data set includes descriptions of hypothetical samples corresponding to 23 species of gilled mushrooms in the Agaricus and Lepiota Family (pp. 500-525). Each species is identified as definitely edible, definitely poisonous, or of unknown edibility and not recommended. This latter class was combined with the poisonous one. The Guide clearly states that there is no simple rule for determining the edibility of a mushroom; no rule like \"leaflets three, let it be'' for Poisonous Oak and Ivy.\n\n\n### In this project we need to predict the \"Class\" column"}}