{"cell_type":{"aeb29046":"code","6f4f8ed6":"code","0a61dace":"code","8e0a01c1":"code","d0dc44cc":"code","f9dd57c1":"code","58316869":"code","97c80099":"code","fe3e0648":"code","c4a439bb":"code","1606dffb":"code","ba34c028":"code","b697e325":"code","722995f5":"code","6ae5821c":"code","84d903cc":"code","85813bd4":"code","23d9c6ff":"code","e838bb6f":"code","6801f832":"code","50479b5b":"code","1eeb0681":"code","e21d76f0":"code","c702f05f":"code","924fdde0":"code","85c9dbe2":"code","dfde2224":"code","ddc41afb":"code","9c26d19e":"code","201e4c1f":"code","9cc73e54":"code","8a31e2f8":"code","e23d758d":"code","5727e829":"code","13752d42":"code","6e21b429":"code","be28a61d":"code","863b2c68":"code","a1e0233b":"code","3f678857":"code","5872fed1":"code","8c83b6f5":"code","53a2376a":"code","17b60dee":"code","dc81c00b":"code","37a9c0ac":"code","f5b8c2fb":"code","c2843116":"code","a0d8afe7":"code","8c4ea6e0":"code","385d80a7":"code","55da1332":"code","861cdac6":"code","9fb1035c":"code","d2af498c":"code","040088be":"code","5bb5e852":"code","a95e5c3f":"code","7a5f0df4":"code","46a720af":"code","f11e2c0e":"code","51b781f3":"code","bd7c03f7":"markdown","3e2fb103":"markdown","f974119c":"markdown","eac05192":"markdown","51360474":"markdown","3c32063b":"markdown"},"source":{"aeb29046":"# Load in libraries\n\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\n\n#libraries for handling data\nimport pandas as pd\nimport numpy as np\nimport math\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nfrom sklearn.preprocessing import MinMaxScaler\nmmscaler = MinMaxScaler()\nfrom sklearn.preprocessing import RobustScaler\nrscaler = RobustScaler()\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.metrics import r2_score, mean_squared_error\nimport datetime\nfrom datetime import datetime, time\n\n#libraries for data visualization\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib.pylab as pylab\nimport seaborn as sns\n\n#libaries for modelling\n# Regression Modelling Algorithms\nimport statsmodels.api as sm\n#from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor , GradientBoostingRegressor","6f4f8ed6":"groups = pd.read_csv('..\/input\/groups.csv')\ngroup_memberships = pd.read_csv('..\/input\/group_memberships.csv')\nschool_memberships = pd.read_csv('..\/input\/school_memberships.csv')\ntags = pd.read_csv('..\/input\/tags.csv')\nanswers = pd.read_csv('..\/input\/answers.csv')\nemails = pd.read_csv('..\/input\/emails.csv')\ncomments = pd.read_csv('..\/input\/comments.csv')\nquestions = pd.read_csv('..\/input\/questions.csv')\nmatches = pd.read_csv('..\/input\/matches.csv')\nprofessionals = pd.read_csv('..\/input\/professionals.csv')\nstudents = pd.read_csv('..\/input\/students.csv')\ntag_questions = pd.read_csv('..\/input\/tag_questions.csv')\ntag_users =pd.read_csv('..\/input\/tag_users.csv')","0a61dace":"def get_meta_info_about_columns_and_tables(df_arr, df_name_arr):\n    tables = []\n    columns = []\n    for df, name in zip(df_arr, df_name_arr):\n        columns.extend(df.columns.values)\n        tables.extend([name] * len(df.columns))\n    return pd.DataFrame({'table': tables, 'column': columns})","8e0a01c1":"tables_columns_info = get_meta_info_about_columns_and_tables(\n    [\n        professionals,\n        tag_users,\n        students,\n        tag_questions,\n        groups,\n        emails,\n        group_memberships,\n        answers,\n        comments,\n        matches,\n        tags,\n        questions,\n        school_memberships\n    ],\n    [\n        'professionals',\n        'tag_users',\n        'students',\n        'tag_questions',\n        'groups',\n        'emails',\n        'group_memberships',\n        'answers',\n        'comments',\n        'matches',\n        'tags',\n        'questions',\n        'school_memberships'\n    ]\n)","d0dc44cc":"tables_columns_info.head(10)","f9dd57c1":"tables_columns_info[tables_columns_info.column.str.contains('group')]","58316869":"professionals['professionals_date_joined'] = pd.to_datetime(professionals['professionals_date_joined'], errors='coerce')\nstudents['students_date_joined'] = pd.to_datetime(students['students_date_joined'], errors='coerce')\nemails.emails_date_sent = pd.to_datetime(emails.emails_date_sent, errors='coerce')\nanswers.answers_date_added = pd.to_datetime(answers.answers_date_added , errors='coerce')\ncomments.comments_date_added = pd.to_datetime(comments.comments_date_added, errors='coerce')\nquestions.questions_date_added = pd.to_datetime(questions.questions_date_added, errors = 'coerce')","97c80099":"groups.head(3)","fe3e0648":"groups.info()","c4a439bb":"groups.isnull().sum()","1606dffb":"answers.head()","ba34c028":"students.head(3)","b697e325":"students.info()","722995f5":"students.isnull().sum()","6ae5821c":"students.students_location.nunique()","84d903cc":"students_locations_top = students.students_location.value_counts().sort_values(ascending = False).head(10)","85813bd4":"students_locations_top","23d9c6ff":"students_locations_top.plot.bar()","e838bb6f":"groups.columns","6801f832":"groups.groups_group_type.unique()","50479b5b":"groups.groups_group_type.nunique()","1eeb0681":"groups.groups_group_type.value_counts()","e21d76f0":"#groups.groups_group_type.value_counts().sort_values(ascending=True).plot.pie(title='Group Types')\ngroups.groups_group_type.value_counts().sort_values(ascending=True).plot(kind='pie',autopct='%1.1f%%', title='Group Types')\nplt.xlabel('')\nplt.ylabel('')","c702f05f":"#groups.groups_group_type.value_counts().sort_values(ascending=True).plot.barh(title='Group Types')\ngroups.groups_group_type.value_counts().sort_values(ascending=True).plot(kind='barh', title='horizoneal bar graph')\nplt.xlabel('counts')\nplt.ylabel('group types')","924fdde0":"#groups.groups_group_type.value_counts().plot.bar()\n#groups.groups_group_type.value_counts().sort_values(ascending=True).plot.bar(title='group types')\ngroups.groups_group_type.value_counts().sort_values(ascending=True).plot(kind='bar', title='group types', figsize=(5, 5))","85c9dbe2":"temp = groups.groups_group_type.value_counts()\ntemp = temp.reset_index()","dfde2224":"temp.head()","ddc41afb":"sns.barplot(x=\"groups_group_type\", y='index', data=temp, color=\"cyan\")","9c26d19e":"emails.head()","201e4c1f":"emails.columns","9cc73e54":"emails.emails_frequency_level.unique()","8a31e2f8":"professionals.head()","e23d758d":"professionals.professionals_location.nunique()","5727e829":"professionals_location_top = professionals.professionals_location.value_counts().sort_values(ascending=True).head(10)\nprofessionals_location_top","13752d42":"professionals_location_topChart = professionals_location_top.plot.pie(autopct='%1.0f%%')\nplt.xlabel('')\nplt.ylabel('')","6e21b429":"students.head()","be28a61d":"students.students_id.count()","863b2c68":"students.students_date_joined.isnull().sum()","a1e0233b":"students['students_date_joined_year'] = students['students_date_joined'].dt.year\nstudents['students_date_joined_month'] = students.students_date_joined.dt.month\nstudents['students_date_joined_day'] = students.students_date_joined.dt.day","3f678857":"students_count =students['students_id'].groupby(students['students_date_joined_year']).count()\nstudents_count","5872fed1":"students_count.plot.line()","8c83b6f5":"school_memberships.head()","53a2376a":"school_memberships.school_memberships_school_id.nunique()","17b60dee":"questions.head()","dc81c00b":"questions.quest_added_year = questions.questions_date_added.dt.year","37a9c0ac":"questions.questions_id.groupby(questions.quest_added_year).count().plot(kind='bar')","f5b8c2fb":"np.cumsum(questions.questions_id.groupby(questions.quest_added_year).count()).plot(kind='bar')","c2843116":"df = pd.merge(questions, answers, how='left', left_on='questions_id', right_on='answers_question_id')\ndf = pd.merge(df, tag_questions, how ='left', left_on='questions_id', right_on='tag_questions_question_id')\ndf = pd.merge(df, tags, how='left', left_on='tag_questions_tag_id', right_on='tags_tag_id')\ndf = pd.merge(df, group_memberships, how='left', left_on='answers_author_id', right_on='group_memberships_user_id')\ndf = pd.merge(df, groups,how='left', left_on='group_memberships_group_id', right_on='groups_id')","a0d8afe7":"df.head().transpose()","8c4ea6e0":"df.questions_date_added = pd.to_datetime(df.questions_date_added, errors='coerce')\ndf.quest_added_date = df.questions_date_added.dt.date","385d80a7":"g1 =df.questions_id.groupby(df.quest_added_date).count()\ng1.plot()","55da1332":"df.tags_tag_name.nunique()","861cdac6":"top_tags = df.questions_id.groupby(df.tags_tag_name).count().sort_values(ascending=False).head(10)","9fb1035c":"top_tags.plot.bar()","d2af498c":"df['duration_answers'] = (pd.to_datetime(df.answers_date_added) - pd.to_datetime(df.questions_date_added) ).dt.days","040088be":"df.duration_answers.describe()","5bb5e852":"df.duration_answers.groupby(df.groups_group_type).describe()","a95e5c3f":"sns.distplot(df.duration_answers.dropna())","7a5f0df4":"sns.kdeplot(df.duration_answers.dropna(), shade=True, color='r')","46a720af":"sns.kdeplot(df.duration_answers.dropna()[df.tags_tag_name=='college'], label='college', shade=False)\nsns.kdeplot(df.duration_answers.dropna()[df.tags_tag_name=='career'], label='career', shade=False)\nsns.kdeplot(df.duration_answers.dropna()[df.tags_tag_name=='engineering'], label='engineering', shade=False)","f11e2c0e":"sns.kdeplot(df.duration_answers.dropna()[df.groups_group_type=='competition'], label='competition')\n#sns.kdeplot(df.duration_answers.dropna()[df.groups_group_type=='youth program'], label='youth program')\nsns.kdeplot(df.duration_answers.dropna()[df.groups_group_type=='mentorship program'], label='mentorship program')","51b781f3":"df.duration_answers.groupby(df.groups_group_type).mean()","bd7c03f7":"cumulated number of questions per year","3e2fb103":"See how long it takes the questions to be answered","f974119c":"Top 10 student locations","eac05192":"groups","51360474":"# Merging data sets","3c32063b":"Students"}}