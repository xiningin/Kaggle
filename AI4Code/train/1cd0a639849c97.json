{"cell_type":{"4b65e976":"code","68fed078":"code","3767b2b1":"code","4063be0d":"code","26065900":"code","d901bf46":"code","518dff98":"code","52c3fc44":"code","59805409":"code","acdeafc8":"code","6964af55":"code","780c45f6":"code","1bf3782f":"code","70865b5c":"code","0329ffc6":"code","9e2ae98a":"code","1d6d67cd":"code","daf48c98":"code","936dc390":"code","cdfff963":"code","d66ace7a":"code","548599bc":"code","3b719075":"code","d8d3857b":"code","7abf7cd7":"code","653b353e":"code","d3128cf2":"code","df5603e9":"code","d3c24036":"code","3e03a834":"code","7284a93d":"code","7ac596d2":"markdown","9d3b3a58":"markdown","0debb2b3":"markdown","f6b4f194":"markdown","ecb5627d":"markdown","cb5c7743":"markdown","8277a0ee":"markdown","da24f9e1":"markdown","a8b27833":"markdown","85431c8d":"markdown","ec0122b0":"markdown","c4fe7372":"markdown","40167105":"markdown","f3a33cd2":"markdown","eec88759":"markdown","03a84d80":"markdown","ffcd6e35":"markdown","18531638":"markdown","11464973":"markdown","a07305ac":"markdown","ffaecc47":"markdown","eb572666":"markdown","c8c180f4":"markdown","09232d3a":"markdown","0bbf70c0":"markdown","ee787a82":"markdown","1bfe00c3":"markdown","8bae5768":"markdown","a3791199":"markdown","703fed0a":"markdown","c4bf8e09":"markdown","2e739506":"markdown","20362289":"markdown","450451df":"markdown","e2b51371":"markdown","192d1965":"markdown","d332d816":"markdown","2723eda1":"markdown","fe948d25":"markdown","18c1533a":"markdown","d1440088":"markdown","1a6dad8f":"markdown","f9c40e6d":"markdown","10109739":"markdown","a2e5fa0f":"markdown","3b5b06e0":"markdown","5da5b44a":"markdown","c26aa092":"markdown","802f41d7":"markdown","fca47f20":"markdown","9b3ec7f4":"markdown","9a6f630b":"markdown","9d565af2":"markdown","69d83bd8":"markdown","0d31be8d":"markdown","e99df676":"markdown","c71b59fe":"markdown","8a3a9020":"markdown","32184495":"markdown","cc406ee7":"markdown","42bd4413":"markdown","543fd7a7":"markdown","0ea01517":"markdown","4929027a":"markdown","92ceaaf7":"markdown","95c2411e":"markdown","56b3058c":"markdown","c1feece2":"markdown","8437ce54":"markdown","f0e494d4":"markdown"},"source":{"4b65e976":"import pandas as pd\nimport plotly.express as px\nimport matplotlib.pyplot as plt \nfrom plotnine import *\nimport numpy as np","68fed078":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3767b2b1":"data1=pd.read_csv('\/kaggle\/input\/statjbnu1\/data1.csv')\ndata2=pd.read_csv('\/kaggle\/input\/statjbnu1\/data2.csv')\ndata3=pd.read_csv('\/kaggle\/input\/statjbnu1\/data3.csv')\ndata4=pd.read_csv('\/kaggle\/input\/yearair\/yearair.csv')\ndata5=pd.read_csv('\/kaggle\/input\/income\/income.csv')\ndata6=pd.read_csv('\/kaggle\/input\/greeen\/green.csv')","4063be0d":"data1","26065900":"data2","d901bf46":"data3","518dff98":"data4","52c3fc44":"data5","59805409":"data6","acdeafc8":"\uc870\uc0ac\uc77c\uc790=data1['\uc870\uc0ac\uc77c\uc790']\ndf1=data1.iloc[:,5:].assign(\uc870\uc0ac\uc77c\uc790=\uc870\uc0ac\uc77c\uc790).groupby('\uc870\uc0ac\uc77c\uc790').agg(sum).T.melt().groupby('\uc870\uc0ac\uc77c\uc790').agg(sum).reset_index()\nfig=px.pie(df1,values='value',names='\uc870\uc0ac\uc77c\uc790')\nfig.show()","6964af55":"\ud638\uc120=data1['\ud638\uc120']\ndf1=data1.iloc[:,5:].assign(\ud638\uc120=\ud638\uc120).groupby('\ud638\uc120').agg(sum).melt().rename(columns={'variable':'time'}).groupby('time').agg(sum).reset_index()\ndf2=df1.assign(sort=list(map(lambda x: int(x.replace(':','')), df1.time))).sort_values('sort').copy().iloc[:,:-1].reset_index(drop=True)\nfig=df2.plot.line(backend='plotly',\n                 x='time',\n                 y='value')\nfig.update_yaxes(matches=None,showticklabels=True)","780c45f6":"\ud638\uc120=data1['\ud638\uc120']\ndf1=data1.iloc[:,5:].assign(\ud638\uc120=\ud638\uc120).groupby('\ud638\uc120').agg(sum).T.reset_index().rename(columns={'index':'time'}).melt(id_vars='time')\nfig=df1.plot.line(backend='plotly',\n                 x='time',\n                 y='value',\n                 color='\ud638\uc120',\n                 facet_col='\ud638\uc120',\n                 facet_col_wrap=3,\n                 facet_col_spacing=0.06)\nfig.update_yaxes(matches=None,showticklabels=True)","1bf3782f":"\ud638\uc120=data1['\ud638\uc120']\ndf1=data1.iloc[:,5:].assign(\ud638\uc120=\ud638\uc120).groupby('\ud638\uc120').agg(sum).T.melt().groupby('\ud638\uc120').agg(sum).reset_index()\nfig=df1.plot.bar(backend='plotly',\n                 x='\ud638\uc120',\n                 y='value')\nfig.update_yaxes(matches=None,showticklabels=True)","70865b5c":"df1=data2.drop('\uc5ed\uc0ac\uba85',axis=1).groupby('\ud638\uc120').agg(sum).reset_index()\ndf1.assign(\ud638\uc120=list(map(lambda x: str(x) + '\ud638\uc120', df1.\ud638\uc120))).melt(id_vars='\ud638\uc120').rename(columns={'variable':'\uc624\uc5fc\ubb3c\uc9c8'}).plot.bar(x='\ud638\uc120',y='value',color='\uc624\uc5fc\ubb3c\uc9c8',backend='plotly')","0329ffc6":"data4.columns\ndata4.columns = ['year','PM10', 'CO2', 'HCHO', 'CO']\ndata4=data4.sort_values(by='year')\ndata_4=data4.assign(year=list(map(lambda x: x [:4] , data4['year'])))\nwith plt.style.context('seaborn-dark'):\n    plt.xkcd(scale=0, length=100)\n    data_4.plot.line(x='year',figsize=(25,7),subplots=True,layout=(1,4))","9e2ae98a":"df_1=data2.iloc[:,2:].rename(columns={'\ubbf8\uc138\uba3c\uc9c0(PM10)':'PM10','\uc774\uc0b0\ud654\ud0c4\uc18c(CO2)':'CO2','\ud3ec\ub984\uc54c\ub370\ud788\ub4dc(HCHO)':'HCHO','\uc77c\uc0b0\ud654\ud0c4\uc18c(CO)':'CO'}).eval('value=PM10+CO2+HCHO+CO').iloc[:,-1]\ndf_2=data2.iloc[:,:2]\ndf1=df_2.assign(value=df_1).assign(\ud658\uc2b9\uc5ed\uad6c\ubd84=list(map(lambda x: str(x[-1]), df_2.\uc5ed\uc0ac\uba85)))\nlinenumber=['1','2','3','4','5','6','7','8']\ndef transfer(x):\n    if x in linenumber:\n        return('\ud658\uc2b9\uc5ed')\n    else:\n        return('\uc77c\ubc18\uc5ed')\ndf1['\ud658\uc2b9\uc5ed\uad6c\ubd84']=list(map(transfer,df1['\ud658\uc2b9\uc5ed\uad6c\ubd84']))\nfig=df1.plot.scatter(backend='plotly',\n                     x='\uc5ed\uc0ac\uba85',\n                     y='value',\n                     color='\ud658\uc2b9\uc5ed\uad6c\ubd84'\n                    )\nfig.update_yaxes(matches=None,showticklabels=True)","1d6d67cd":"df1=data3.assign(\uc11c\uc6b8\uacbd\uae30\uad6c\ubd84=list(map(lambda x: x[-1], data3.\uc790\uce58\uad6c))).query(\"\uc11c\uc6b8\uacbd\uae30\uad6c\ubd84 == '\uad6c'\").set_index('\uc790\uce58\uad6c').drop('\ubd80\ud3c9\uad6c',axis=0).reset_index()\ndf2=data3.drop(['\uc5f0\ubc88','\ud574\ub2f9\uc5ed(\ud638\uc120)'],axis=1)\nseoul=list(df1['\uc790\uce58\uad6c'])\ndef region(x):\n    if x in seoul:\n        return('\uc11c\uc6b8')\n    elif x == '\ubd80\ud3c9\uad6c':\n        return('\uc778\ucc9c')\n    else:\n        return('\uacbd\uae30')\ndf2['\uc9c0\uc5ed']=list(map(region,df2['\uc790\uce58\uad6c']))\ndf2.plot.bar(x='\uc790\uce58\uad6c',y='\uc5ed\uac1c\uc218',text='\uc5ed\uac1c\uc218',color='\uc9c0\uc5ed',backend='plotly')","daf48c98":"\ud638\uc120=data1['\ud638\uc120']\ndf1=data1.iloc[:,5:].assign(\ud638\uc120=\ud638\uc120).groupby('\ud638\uc120').agg(sum).iloc[:-2,:].T.melt().groupby('\ud638\uc120').agg(sum).reset_index().rename(columns={'value':'\ud63c\uc7a1\ub3c4'})\ndf2=data2.drop('\uc5ed\uc0ac\uba85',axis=1).groupby('\ud638\uc120').agg(sum).reset_index()\ndf3=df2.assign(\ud638\uc120=list(map(lambda x: str(x) + '\ud638\uc120', df2.\ud638\uc120))).melt(id_vars='\ud638\uc120')\ndf4=df1.merge(df3).rename(columns={'\ud638\uc120':'line','\ud63c\uc7a1\ub3c4':'congestion','variable':'pollutants','value':'pollutants value'})\ndf5=df4.assign(pollutants=list(map(lambda x: x.split('(')[-1][:-1], df4.pollutants))).assign(line=list(map(lambda x: str(x[0]), df4.line)))\nggplot(df5)+geom_point(aes(x='congestion',y='pollutants value',color='line'),size=2.2)+facet_wrap('pollutants')","936dc390":"\ud638\uc120=data1['\ud638\uc120']\ndf1=data1.iloc[:,5:].assign(\ud638\uc120=\ud638\uc120).groupby('\ud638\uc120').agg(sum).iloc[:-2,:].T.melt().groupby('\ud638\uc120').agg(sum).reset_index().rename(columns={'value':'\ud63c\uc7a1\ub3c4'})\ndf2=data2.drop('\uc5ed\uc0ac\uba85',axis=1).melt(id_vars='\ud638\uc120').groupby('\ud638\uc120').agg(sum).reset_index()\ndf3=df2.assign(\ud638\uc120=list(map(lambda x: str(x) + '\ud638\uc120', df2.\ud638\uc120)))\ndf4=df1.merge(df3).rename(columns={'\ud638\uc120':'line','\ud63c\uc7a1\ub3c4':'congestion','value':'pollutants value'})\ndf5=df4.assign(line=list(map(lambda x: str(x[0]), df4.line)))\nggplot(df5)+geom_point(aes(x='congestion',y='pollutants value',color='line'),size=2.2)","cdfff963":"#\uc5ed\uc744 \uc790\uce58\uad6c\ubcc4\ub85c \ubb36\ub294 \uacfc\uc815\n\uc5ed\uba85=data1['\uc5ed\uba85']\ndf1=data1.iloc[:,5:].assign(\uc5ed\uba85=\uc5ed\uba85).groupby('\uc5ed\uba85').agg(sum).T.melt().groupby('\uc5ed\uba85').agg(sum).rename({'\uc11c\uc6b8\uc5ed':'\uc11c\uc6b8','\uc2e0\ucd0c(\uc9c0\ud558)':'\uc2e0\ucd0c','\uc62c\ub9bc\ud53d\uacf5\uc6d0(\ud55c\uad6d\uccb4\ub300)':'\uc62c\ub9bc\ud53d\uacf5\uc6d0','\ubbf8\uc544\uc0bc\uac70\ub9ac':'\ubbf8\uc544\uc0ac\uac70\ub9ac','\uc2e0\ucc9c':'\uc7a0\uc2e4\uc0c8\ub0b4','\ucd1d\uc2e0\ub300\uc785\uad6c':'\uc774\uc218'}).reset_index().rename(columns={'value':'\ud63c\uc7a1\ub3c4'})\ndf2=data3.rename(columns={'\ud574\ub2f9\uc5ed(\ud638\uc120)':'\uc5ed\uba85'})\nstation=list(df2['\uc5ed\uba85'])\ndef district(x):\n    for i in range(0,31):\n        if x in station[i]:\n            return(df2.\uc790\uce58\uad6c[i])\n    else:\n        return('-')\ndf1['\uc790\uce58\uad6c']=list(map(district,df1['\uc5ed\uba85']))","d66ace7a":"df3=df1.groupby('\uc790\uce58\uad6c').agg(sum)\ndf4=df2.drop(['\uc5f0\ubc88','\uc5ed\uba85'],axis=1).set_index('\uc790\uce58\uad6c')\ndf5=df3.merge(df4,left_index=True,right_index=True).reset_index()\nfig=df5.plot.scatter(backend='plotly',\n                     x='\uc5ed\uac1c\uc218',\n                     y='\ud63c\uc7a1\ub3c4',\n                     color='\uc790\uce58\uad6c',\n                     height=760)\nfig.update_yaxes(matches=None,showticklabels=True)","548599bc":"#\uc5ed\uc744 \uc790\uce58\uad6c\ubcc4\ub85c \ubb36\ub294 \uacfc\uc815\n\uc5ed\uba85=data1['\uc5ed\uba85']\ndf1=data1.iloc[:,5:].assign(\uc5ed\uba85=\uc5ed\uba85).groupby('\uc5ed\uba85').agg(sum).T.melt().groupby('\uc5ed\uba85').agg(sum).rename({'\uc11c\uc6b8\uc5ed':'\uc11c\uc6b8','\uc2e0\ucd0c(\uc9c0\ud558)':'\uc2e0\ucd0c','\uc62c\ub9bc\ud53d\uacf5\uc6d0(\ud55c\uad6d\uccb4\ub300)':'\uc62c\ub9bc\ud53d\uacf5\uc6d0','\ubbf8\uc544\uc0bc\uac70\ub9ac':'\ubbf8\uc544\uc0ac\uac70\ub9ac','\uc2e0\ucc9c':'\uc7a0\uc2e4\uc0c8\ub0b4','\ucd1d\uc2e0\ub300\uc785\uad6c':'\uc774\uc218'}).reset_index().rename(columns={'value':'\ud63c\uc7a1\ub3c4'})\ndf2=data3.rename(columns={'\ud574\ub2f9\uc5ed(\ud638\uc120)':'\uc5ed\uba85'})\nstation=list(df2['\uc5ed\uba85'])\ndef district(x):\n    for i in range(0,31):\n        if x in station[i]:\n            return(df2.\uc790\uce58\uad6c[i])\n    else:\n        return('-')\ndf1['\uc790\uce58\uad6c']=list(map(district,df1['\uc5ed\uba85']))","3b719075":"df3=df1.groupby('\uc790\uce58\uad6c').agg(sum).reset_index()\ndf4=df3.assign(\uc11c\uc6b8\uacbd\uae30\uad6c\ubd84=list(map(lambda x: x[-1], df3.\uc790\uce58\uad6c))).query(\"\uc11c\uc6b8\uacbd\uae30\uad6c\ubd84 == '\uad6c'\").set_index('\uc790\uce58\uad6c').drop('\ubd80\ud3c9\uad6c',axis=0).iloc[:,:-1]\ndf5=data5.set_index('\uc790\uce58\uad6c').rename(columns={'\uc18c\ub4dd\uc218\uc900':'\uc18c\ub4dd\uc21c\uc704'})\ndf6=df5.merge(df4,left_index=True,right_index=True).reset_index().sort_values('\uc18c\ub4dd\uc21c\uc704').reset_index(drop=True)\nfig=df6.plot.scatter(backend='plotly',\n                     x='\uc18c\ub4dd\uc21c\uc704',\n                     y='\ud63c\uc7a1\ub3c4',\n                     color='\uc790\uce58\uad6c',\n                     height=760)\nfig.update_traces(textposition='top center')\nfig.update_yaxes(matches=None,showticklabels=True)","d8d3857b":"#\uc5ed\uc744 \uc790\uce58\uad6c\ubcc4\ub85c \ubb36\ub294 \uacfc\uc815\ndf1=data2.iloc[:,1:].rename(columns={'\uc5ed\uc0ac\uba85':'\uc5ed\uba85'})\nlinenumber=['1','2','3','4','5','6','7','8']\ndef transfer(x):\n    if x[-1] in linenumber:\n        return(x[:-1])\n    else:\n        return(x)\ndf1['\uc5ed\uba85']=list(map(transfer,df1['\uc5ed\uba85']))\ndf2=df1.groupby('\uc5ed\uba85').agg(sum).rename({'\uc11c\uc6b8\uc5ed':'\uc11c\uc6b8','\uc2e0\ucd0c(\uc9c0\ud558)':'\uc2e0\ucd0c','\uc62c\ub9bc\ud53d\uacf5\uc6d0(\ud55c\uad6d\uccb4\ub300)':'\uc62c\ub9bc\ud53d\uacf5\uc6d0','\ubbf8\uc544\uc0bc\uac70\ub9ac':'\ubbf8\uc544\uc0ac\uac70\ub9ac','\uc2e0\ucc9c':'\uc7a0\uc2e4\uc0c8\ub0b4','\ucd1d\uc2e0\ub300\uc785\uad6c':'\uc774\uc218','\ubc29 \ud654':'\ubc29\ud654'}).reset_index()\ndf3=data3.rename(columns={'\ud574\ub2f9\uc5ed(\ud638\uc120)':'\uc5ed\uba85'})\nstation=list(df3['\uc5ed\uba85'])\ndef district(x):\n    for i in range(0,31):\n        if x in station[i]:\n            return(df3.\uc790\uce58\uad6c[i])\n    else:\n        return('-')\ndf2['\uc790\uce58\uad6c']=list(map(district,df2['\uc5ed\uba85']))","7abf7cd7":"df4=df2.iloc[:,1:].groupby('\uc790\uce58\uad6c').agg(sum).reset_index().melt(id_vars='\uc790\uce58\uad6c').set_index('\uc790\uce58\uad6c')\ndf5=df3.drop(['\uc5f0\ubc88','\uc5ed\uba85'],axis=1).set_index('\uc790\uce58\uad6c')\ndf6=df4.merge(df5,left_index=True,right_index=True).reset_index().rename(columns={'variable':'\uc624\uc5fc\ubb3c\uc9c8','value':'\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58'})\nfig=df6.plot.scatter(backend='plotly',\n                     x='\uc5ed\uac1c\uc218',\n                     y='\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58',\n                     color='\uc790\uce58\uad6c',\n                     facet_col='\uc624\uc5fc\ubb3c\uc9c8',\n                     facet_col_wrap=2,\n                     facet_col_spacing=0.06,\n                     height=720\n                    )\nfig.update_yaxes(matches=None,showticklabels=True)","653b353e":"#\uc5ed\uc744 \uc790\uce58\uad6c\ubcc4\ub85c \ubb36\ub294 \uacfc\uc815\ndf1=data2.iloc[:,1:].rename(columns={'\uc5ed\uc0ac\uba85':'\uc5ed\uba85'})\nlinenumber=['1','2','3','4','5','6','7','8']\ndef transfer(x):\n    if x[-1] in linenumber:\n        return(x[:-1])\n    else:\n        return(x)\ndf1['\uc5ed\uba85']=list(map(transfer,df1['\uc5ed\uba85']))\ndf2=df1.groupby('\uc5ed\uba85').agg(sum).rename({'\uc11c\uc6b8\uc5ed':'\uc11c\uc6b8','\uc2e0\ucd0c(\uc9c0\ud558)':'\uc2e0\ucd0c','\uc62c\ub9bc\ud53d\uacf5\uc6d0(\ud55c\uad6d\uccb4\ub300)':'\uc62c\ub9bc\ud53d\uacf5\uc6d0','\ubbf8\uc544\uc0bc\uac70\ub9ac':'\ubbf8\uc544\uc0ac\uac70\ub9ac','\uc2e0\ucc9c':'\uc7a0\uc2e4\uc0c8\ub0b4','\ucd1d\uc2e0\ub300\uc785\uad6c':'\uc774\uc218','\ubc29 \ud654':'\ubc29\ud654'}).reset_index()\ndf3=data3.rename(columns={'\ud574\ub2f9\uc5ed(\ud638\uc120)':'\uc5ed\uba85'})\nstation=list(df3['\uc5ed\uba85'])\ndef district(x):\n    for i in range(0,31):\n        if x in station[i]:\n            return(df3.\uc790\uce58\uad6c[i])\n    else:\n        return('-')\ndf2['\uc790\uce58\uad6c']=list(map(district,df2['\uc5ed\uba85']))","d3128cf2":"df4=df2.iloc[:,1:].melt(id_vars='\uc790\uce58\uad6c').groupby('\uc790\uce58\uad6c').agg(sum).rename(columns={'value':'\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58'})\ndf5=df3.drop(['\uc5f0\ubc88','\uc5ed\uba85'],axis=1).set_index('\uc790\uce58\uad6c')\ndf6=df4.merge(df5,left_index=True,right_index=True).reset_index()\nfig=df6.plot.scatter(backend='plotly',\n                     x='\uc5ed\uac1c\uc218',\n                     y='\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58',\n                     color='\uc790\uce58\uad6c',\n                     height=720\n                    )\nfig.update_yaxes(matches=None,showticklabels=True)","df5603e9":"#\uc5ed\uc744 \uc790\uce58\uad6c\ubcc4\ub85c \ubb36\ub294 \uacfc\uc815\ndf1=data2.iloc[:,1:].rename(columns={'\uc5ed\uc0ac\uba85':'\uc5ed\uba85'})\nlinenumber=['1','2','3','4','5','6','7','8']\ndef transfer(x):\n    if x[-1] in linenumber:\n        return(x[:-1])\n    else:\n        return(x)\ndf1['\uc5ed\uba85']=list(map(transfer,df1['\uc5ed\uba85']))\ndf2=df1.groupby('\uc5ed\uba85').agg(sum).rename({'\uc11c\uc6b8\uc5ed':'\uc11c\uc6b8','\uc2e0\ucd0c(\uc9c0\ud558)':'\uc2e0\ucd0c','\uc62c\ub9bc\ud53d\uacf5\uc6d0(\ud55c\uad6d\uccb4\ub300)':'\uc62c\ub9bc\ud53d\uacf5\uc6d0','\ubbf8\uc544\uc0bc\uac70\ub9ac':'\ubbf8\uc544\uc0ac\uac70\ub9ac','\uc2e0\ucc9c':'\uc7a0\uc2e4\uc0c8\ub0b4','\ucd1d\uc2e0\ub300\uc785\uad6c':'\uc774\uc218','\ubc29 \ud654':'\ubc29\ud654'}).reset_index()\ndf3=data3.rename(columns={'\ud574\ub2f9\uc5ed(\ud638\uc120)':'\uc5ed\uba85'})\nstation=list(df3['\uc5ed\uba85'])\ndef district(x):\n    for i in range(0,31):\n        if x in station[i]:\n            return(df3.\uc790\uce58\uad6c[i])\n    else:\n        return('-')\ndf2['\uc790\uce58\uad6c']=list(map(district,df2['\uc5ed\uba85']))","d3c24036":"df4=df2.iloc[:,1:].melt(id_vars='\uc790\uce58\uad6c').groupby('\uc790\uce58\uad6c').agg(sum).rename(columns={'value':'\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58'})\ndf5=data6.drop(['\ub179\uc9c0\ud604\ud669(1)','2017','2018'],axis=1).rename(columns={'\uc790\uce58\uad6c(1)':'\uc790\uce58\uad6c','\uac1c\uc18c\/\uba74\uc801(1)':'\uad6c\ubd84','2019':'\ub179\uc9c0\ud604\ud669'}).set_index('\uc790\uce58\uad6c')\ndf6=df5.merge(df4,left_index=True,right_index=True).reset_index()","3e03a834":"df7=df6.query(\"\uad6c\ubd84=='\uac1c\uc18c'\")\nfig=df7.plot.scatter(backend='plotly',\n                     x='\ub179\uc9c0\ud604\ud669',\n                     y='\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58',\n                     color='\uc790\uce58\uad6c',\n                     title='\ub179\uc9c0\uc2dc\uc124 \uac1c\uc218 - \ub300\uae30\uc0c1\ud0dc'\n                    )\nfig.update_yaxes(matches=None,showticklabels=True)","7284a93d":"df7=df6.query(\"\uad6c\ubd84=='\uba74\uc801'\")\nfig=df7.plot.scatter(backend='plotly',\n                     x='\ub179\uc9c0\ud604\ud669',\n                     y='\uc624\uc5fc\ubb3c\uc9c8 \uce21\uc815\uce58',\n                     color='\uc790\uce58\uad6c',\n                     title='\ub179\uc9c0\uc2dc\uc124 \uba74\uc801 - \ub300\uae30\uc0c1\ud0dc'\n                    )\nfig.update_yaxes(matches=None,showticklabels=True)","7ac596d2":"### data 1 (\uc9c0\ud558\ucca0 \ud63c\uc7a1\ub3c4 \uc815\ubcf4)","9d3b3a58":"#### \ud638\uc120\ubcc4 \ud63c\uc7a1\ub3c4\uc5d0 \ub530\ub978 \ub300\uae30\uc0c1\ud0dc \ube44\uad50","0debb2b3":"##### \u203b \ub179\uc9c0\uc2dc\uc124 \uac1c\uc218 - \ub300\uae30\uc0c1\ud0dc \uadf8\ub798\ud504","f6b4f194":"#### \ud658\uc2b9\uc5ed \ub300\uae30\uc0c1\ud0dc \ud2b9\uc774\uc810 \ubd84\uc11d","ecb5627d":"### data 3 (\uc790\uce58\uad6c\ubcc4 \uc9c0\ud558\ucca0\uc5ed \uc815\ubcf4)","cb5c7743":"#### \ud638\uc120\ubcc4 \ub300\uae30\uc0c1\ud0dc \ube44\uad50","8277a0ee":"- \uc624\uc5fc\ubb3c\uc9c8\uc758 \ucd1d\ud569\uac12\uc73c\ub85c \uacc4\uc0b0\uc2dc, 2,3,4\ud638\uc120\uc744 \uc81c\uc678\ud558\uba74 \ud638\uc120\uc758 \ud63c\uc7a1\ub3c4\uac00 \ub192\uc744\uc218\ub85d \uc624\uc5fc\uc218\uce58\uac00 \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc74c.","da24f9e1":"#### \uc9c0\ud558\ucca0 \ud658\ud48d\uad6c \uadfc\ucc98 \ub179\uc9c0\uc2dc\uc124 \uac1c\uc218\uc640 \uba74\uc801\uc5d0 \ub530\ub978 \ub300\uae30\uc0c1\ud0dc (data 6 \uc0ac\uc6a9)","a8b27833":"- \ud300\uc7a5: \uc7a5\uc218\ube48(202021337)\n- \ud300\uc6d0: \uc1a1\ub3c4\ub2f4(202016228)","85431c8d":"- \uad6d\uac00\ud1b5\uacc4\ud3ec\ud138\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc9c0\ud558\ucca0 \ud658\uae30\uad6c \uc8fc\ubcc0 \ub179\uc9c0\uc2dc\uc124 \uc815\ubcf4\uc774\ub2e4.","ec0122b0":"<\uc5ed\uc0ac \ub300\uae30\uc0c1\ud0dc>\n- \ubaa8\ub4e0 \ud638\uc120\uc5d0\uc11c \uc624\uc5fc\ubb3c\uc9c8 \uad6c\uc131\uc694\uc18c\uac00 \ube44\uc2b7\ud55c \ube44\uc728\uc744 \ubcf4\uc784\u00a0\n- \ubbf8\uc138\uba3c\uc9c0(PM10): \ud574\uac00 \uac08\uc218\ub85d \ud558\ud5a5\uc138, \uc774\uc0b0\ud654\ud0c4\uc18c(CO2): \ud574\uac00 \uac08\uc218\ub85d \uc0c1\uc2b9\uc138\u00a0\n- \ud658\uc2b9\/\uc77c\ubc18\uc5ed\uc758 \ub300\uae30 \uc0c1\ud0dc \ucc28\uc774 \uc5c6\uc74c\n- \ucd1d\ud569 \uac12\uc73c\ub85c \ubd24\uc744 \ub54c, \ud63c\uc7a1\ub3c4\uac00 \ub192\uc744\uc218\ub85d\u00a0\uc624\uc5fc\uc218\uce58\uac00 \ub192\uc74c\u00a0\n- \uc5ed \uac1c\uc218\uac00 \ub9ce\uc744\uc218\ub85d \uc624\uc5fc \uc218\uce58\uac00 \ub192\uc74c (\uc1a1\ud30c\uad6c, \uc911\uad6c, \uac15\ub0a8\uad6c)\n- \uc9c0\ud558\ucca0 \ud658\ud48d\uad6c \uadfc\ucc98 \ub179\uc9c0\uc2dc\uc124\uacfc \uc5f0\uad00\uc774 \uc5c6\uc74c\u00a0","c4fe7372":"### data 3 (\uc790\uce58\uad6c\ubcc4 \uc9c0\ud558\ucca0\uc5ed \uc815\ubcf4)","40167105":"- \uc11c\uc6b8\uad50\ud1b5\uacf5\uc0ac\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc5f0\ub3c4\ubcc4 \uc9c0\ud558\ucca0\uc5ed \uacf5\uae30\uc9c8 \uce21\uc815\uacb0\uacfc \uc815\ubcf4\uc774\ub2e4.\n- PM10 : \ubbf8\uc138\uba3c\uc9c0, CO2 : \uc774\uc0b0\ud654\ud0c4\uc18c, HCHO : \ud3ec\ub984\uc54c\ub370\ud788\ub4dc, CO : \uc77c\uc0b0\ud654\ud0c4\uc18c","f3a33cd2":"<\ud63c\uc7a1\ub3c4>\n- \uc8fc\ub9d0 > \ud3c9\uc77c\u00a0\n- 18:00\uacbd \ud63c\uc7a1\ub3c4 \uac00\uc7a5 \ub192\uc74c\u00a0\n- \uc790\uce58\uad6c\ubcc4 \uc5ed\uc758 \uac1c\uc218\uac00 \ub9ce\uc744\uc218\ub85d\u00a0\ud63c\uc7a1\ub3c4\uac00 \ub192\uc74c\u00a0\n- \uc790\uce58\uad6c\ubcc4 \uc18c\ub4dd \uc21c\uc704\uac00 \ub192\uc744\uc218\ub85d\u00a0\ud63c\uc7a1\ub3c4\uac00 \ub192\uc74c\u00a0","eec88759":"- \uc11c\uc6b8\uad50\ud1b5\uacf5\uc0ac\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130\ub85c 30\ubd84\uac04 \uc9c0\ub098\ub294 \uc5f4\ucc28\ub4e4\uc758 \ud3c9\uade0 \ud63c\uc7a1\ub3c4\ub97c \uce21\uc815\ud55c \uc790\ub8cc\uc774\ub2e4. (\ub2e8\uc704: %).\n- \uc870\uc0ac \uc77c\uc790(\ud3c9\uc77c, \ud1a0\uc694\uc77c, \uc77c\uc694\uc77c), \ud638\uc120, \uc5ed \ubc88\ud638, \uc5ed\uba85, \uc0c1\ud558\uc120 \uad6c\ubd84, 30\ubd84 \ub2e8\uc704 \ubcc4 \ud63c\uc7a1\ub3c4 \ub370\uc774\ud130\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4.","03a84d80":"1. \ubbf8\uc138\uba3c\uc9c0(PM10), \ud3ec\ub984\uc54c\ub370\ud788\ub4dc(HCHO), \uc77c\uc0b0\ud654\ud0c4\uc18c(CO): \ud638\uc120\uc758 \ud63c\uc7a1\ub3c4\uc640 \uc624\uc5fc\uc218\uce58 \uc0ac\uc774\uc5d0 \uc5f0\uad00\uc131\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc74c.\n2. \uc774\uc0b0\ud654\ud0c4\uc18c(CO2): \ud638\uc120\uc758 \ud63c\uc7a1\ub3c4\uac00 \ud074\uc218\ub85d \uc624\uc5fc\uc218\uce58\uac00 \ub300\uccb4\uc801\uc73c\ub85c \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc74c.","ffcd6e35":"- \uc790\uce58\uad6c\ubcc4 \uc5ed\uc758 \uac1c\uc218\uac00 \ub9ce\uc744\uc218\ub85d \ud63c\uc7a1\ub3c4\uac00 \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc74c.","18531638":"- \ud658\uc2b9\uc5ed\uc5d0\uc11c \uc624\uc5fc\ubb3c\uc9c8\uc758 \uc218\uce58\uc758 \ud2b9\uc774\uc810\uc744 \ucc3e\uc9c0 \ubabb\ud568 > \ud658\uc2b9\uc5ed, \uc77c\ubc18\uc5ed\uc758 \ub300\uae30\uc0c1\ud0dc\ub294 \ud070 \ucc28\uc774\uac00 \uc5c6\uc74c.","11464973":"### Data Analysis","a07305ac":"### data 1 + data 3","ffaecc47":"- https:\/\/www.data.go.kr\/data\/15071311\/fileData.do\n- https:\/\/data.seoul.go.kr\/dataList\/OA-2732\/F\/1\/datasetView.do\n- https:\/\/www.gimi9.com\/dataset\/www-data-go-kr-data-filedata-15081868\n- https:\/\/biz.chosun.com\/site\/data\/html_dir\/2019\/01\/11\/2019011102294.html\n- https:\/\/kosis.kr\/statHtml\/statHtml.do?orgId=201&tblId=DT_201_00368_2015&conn_path=I2\n- https:\/\/www.kaggle.com\/c\/statjbnu1\/data","eb572666":"- \ubaa8\ub4e0 \ud638\uc120\uc5d0\uc11c \uc624\uc5fc\ubb3c\uc9c8\uc758 \uad6c\uc131\uc694\uc18c\ub4e4\uc774 \ube44\uc2b7\ud55c \ube44\uc728\uc744 \ubcf4\uc784.\n- 7>5>2\ud638\uc120\uc5d0\uc11c \uc624\uc5fc\ubb3c\uc9c8\uc758 \uc218\uce58\uac00 \uac00\uc7a5 \ub192\uc74c.","c8c180f4":"### data 6 (\uc790\uce58\uad6c\ubcc4 \uc9c0\ud558\ucca0 \ud658\uae30\uad6c \uc8fc\ubcc0 \ub179\uc9c0\uc2dc\uc124 \uc815\ubcf4)","09232d3a":"### data 2 + data 3","0bbf70c0":"#### \uc2dc\uac04\ub300\ubcc4 \ud63c\uc7a1\ub3c4 \ube44\uad50","ee787a82":"- 2>7>5\ud638\uc120\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \ud63c\uc7a1\ub3c4\ub97c \ubcf4\uc784.","1bfe00c3":"### data 5 (\uc11c\uc6b8\ud2b9\ubcc4\uc2dc \uc790\uce58\uad6c\ubcc4 \uc18c\ub4dd\uc218\uc900)","8bae5768":"1. \ubbf8\uc138\uba3c\uc9c0(PM10): 2007\ub144\uc5d0 \uac00\uc7a5 \ub192\uc740 \uc218\uce58\ub97c \uae30\ub85d\ud558\uace0, \uc774\ud6c4 \ub300\uccb4\ub85c \ud558\ud5a5\uc138\ub97c \ubcf4\uc784.\n2. \uc774\uc0b0\ud654\ud0c4\uc18c(CO2): 2007\ub144 ~ 2014\ub144\uae4c\uc9c0 \uc0c1\uc2b9\uc138\ub97c \ubcf4\uc774\ub2e4\uac00 2015\ub144\uc5d0 \uc218\uce58\uac00 \ud558\ub77d\ud558\uc600\uc73c\ub098 \ub2e4\uc2dc \ub300\ud3ed \uc0c1\uc2b9\ud568.\n3. \ud3ec\ub984\uc54c\ub370\ud788\ub4dc(HCHO): 2010\ub144\uc5d0 \uac00\uc7a5 \ub192\uc740 \uc218\uce58\ub97c \uae30\ub85d\ud558\uace0, \uc774\ud6c4 \ubcc0\ub3d9\ud3ed\uc774 \ub9e4\uc6b0 \ud07c.\n4. \uc77c\uc0b0\ud654\ud0c4\uc18c(CO): \ubcc0\ub3d9\ud3ed\uc774 \ub9e4\uc6b0 \ud06c\uba70, 2014\ub144\uc5d0 \uac00\uc7a5 \ub192\uc740 \uc218\uce58\ub97c \uae30\ub85d\ud558\uc600\uc73c\ub098 \uc774\ud6c4 \ub300\ud3ed \ud558\ub77d\ud558\ub2e4\uac00 \ub2e4\uc2dc \uc0c1\uc2b9\ud568.","a3791199":"##### \u203b \ud638\uc120 \uc815\ubcf4 \ud3ec\ud568","703fed0a":"##### \u203b \uc624\uc5fc\ubb3c\uc9c8 \uc885\ub958 \uc815\ubcf4 \ud3ec\ud568 (CO : \uc77c\uc0b0\ud654\ud0c4\uc18c, CO2 : \uc774\uc0b0\ud654\ud0c4\uc18c, HCHO : \ud3ec\ub984\uc54c\ub370\ud788\ub4dc, PM10 : \ubbf8\uc138\uba3c\uc9c0)","c4bf8e09":"### Data Description ","2e739506":"#### \ud638\uc120\ubcc4 \ud63c\uc7a1\ub3c4 \ube44\uad50","20362289":"`-` read data ","450451df":"### Read Data ","e2b51371":"- \uacbd\uae30\ub3c4\uc5d0\uc11c \ub300\uccb4\ub85c \uc9c0\ud558\ucca0\uc758 \uac1c\uc218\uac00 \ub0ae\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc74c.","192d1965":"- \uc11c\uc6b8\uad50\ud1b5\uacf5\uc0ac \uad00\ud560 \uc790\uce58\uad6c\ubcc4 \uc9c0\ud558\ucca0\uc5ed \uc815\ubcf4\uc774\uba70, \uc5f0\ubc88, \uc790\uce58\uad6c, \ud574\ub2f9 \uc5ed(\ud638\uc120), \uc5ed \uac1c\uc218\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4.","d332d816":"#### \uc694\uc77c\ubcc4 \ud63c\uc7a1\ub3c4 \ube44\uad50 (\ud3c9\uc77c, \uc8fc\ub9d0)","2723eda1":"### data 2 (\uc5ed\uc0ac \ub300\uae30 \uc815\ubcf4)","fe948d25":"- \ud638\uc120\ubcc4 \ud63c\uc7a1\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc2dc\uac04\ub300\n1. 1\ud638\uc120: 16:30 (\ucd9c\uadfc, \ub4f1\uad50 \uc2dc\uac04\ub300\uc778 8:00\uc5d0 \ube44\uad50\uc801 \ud55c\uc0b0\ud568)\n2. 2\ud638\uc120: 18:30 (22:00\uc5d0\uc11c\ub3c4 \ub192\uc740 \uc218\uce58 \uae30\ub85d)\n3. 3,4,6,8\ud638\uc120, \uc131\uc218\uc9c0\uc120: 18:00\n4. 5\ud638\uc120: 17:00\n5. 7\ud638\uc120: 17:30\n6. \uc2e0\uc815\uc9c0\uc120: 8:00","18c1533a":"##### \u203b data2\uc5d0 \uc131\uc218\uc9c0\uc120, \uc2e0\uc815\uc9c0\uc120\uc758 \ub370\uc774\ud130\uac00 \uc5c6\uc73c\ubbc0\ub85c 1~8\ud638\uc120\uc758 \ub370\uc774\ud130\ub9cc \ub2e4\ub8f8","d1440088":"#### \uc790\uce58\uad6c\ubcc4 \uc5ed \uac1c\uc218\uc5d0 \ub530\ub978 \ub300\uae30\uc0c1\ud0dc \ube44\uad50","1a6dad8f":"##### \u203b \uc624\uc5fc\ubb3c\uc9c8 \uc885\ub958 \uc815\ubcf4 \ud3ec\ud568 (CO : \uc77c\uc0b0\ud654\ud0c4\uc18c, CO2 : \uc774\uc0b0\ud654\ud0c4\uc18c, HCHO : \ud3ec\ub984\uc54c\ub370\ud788\ub4dc, PM10 : \ubbf8\uc138\uba3c\uc9c0)","f9c40e6d":"#### \uc790\uce58\uad6c\ubcc4 \uc5ed \uac1c\uc218\uc5d0 \ub530\ub978 \ud63c\uc7a1\ub3c4 \ube44\uad50","10109739":"- \uc8fc\ub9d0(60.8%) > \ud3c9\uc77c(39.2%)\ub85c \uc8fc\ub9d0\uc5d0 \uc9c0\ud558\ucca0 \ud63c\uc7a1\ub3c4\uac00 \ub354 \ub192\uc74c.","a2e5fa0f":"#### \uc790\uce58\uad6c\ubcc4 \uc5ed\uc758 \uac1c\uc218","3b5b06e0":"### Import ","5da5b44a":"### \ud300\uba85: <\ub370\uc774\ud130\uc880\ubcf4\ub0b4\uc870>\ud300","c26aa092":"- \uc790\uce58\uad6c\ubcc4 \uc18c\ub4dd\uc21c\uc704\uac00 \ub192\uc744\uc218\ub85d \ud63c\uc7a1\ub3c4\uac00 \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc74c.","802f41d7":"`-` \uc5c5\ub85c\ub4dc\ub41c \ub370\uc774\ud130 \ud655\uc778 ","fca47f20":"### Conclusion and Summary","9b3ec7f4":"#### \uc790\uce58\uad6c\ubcc4 \uc18c\ub4dd\uc5d0 \ub530\ub978 \ud63c\uc7a1\ub3c4 \ube44\uad50 (data 5 \uc0ac\uc6a9)","9a6f630b":"- \uc9c0\ud558\ucca0 \ud658\ud48d\uad6c \uadfc\ucc98 \ub179\uc9c0\uc2dc\uc124 \uac1c\uc218, \uba74\uc801\uacfc \uc5ed\uc0ac \ub300\uae30\uc0c1\ud0dc\ub294 \uc5f0\uad00\uc131\uc774 \uc5c6\uc74c","9d565af2":"- \uc870\uc120\ube44\uc988(\uc870\uc120\uc77c\ubcf4)\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc11c\uc6b8\ud2b9\ubcc4\uc2dc \uc790\uce58\uad6c\ubcc4 \uc18c\ub4dd\uc218\uc900 \uc815\ubcf4\uc774\ub2e4.\n- \uc18c\ub4dd\uc218\uc900\uc740 \uc18c\ub4dd \uc21c\uc704 \ub370\uc774\ud130\ub85c \ub098\ud0c0\ub098\uc788\ub2e4. \uc989 \uac12\uc774 \uc791\uc744\uc218\ub85d \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc740 \uac83, \uac12\uc774 \ud074\uc218\ub85d \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uac83\uc774\ub2e4.","69d83bd8":"### data 2 (\uc5ed\uc0ac \ub300\uae30 \uc815\ubcf4)","0d31be8d":"- \uc11c\uc6b8 \uc5f4\ub9b0 \ub370\uc774\ud130 \uad11\uc7a5\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130\ub85c \uc11c\uc6b8\ud2b9\ubcc4\uc2dc \uc9c0\ud558\ucca0 \uc5ed\uc0ac \ub0b4 \uacf5\uae30\uc9c8\uc744 \uce21\uc815\ud558\ub294 \uc790\ub8cc\uc774\ub2e4.\n- \uce21\uc815\uc7a5\ube44\uac00 \uc124\uce58\ub41c \uc5ed\uc0ac\uc5d0 \ud55c\ud558\uc5ec \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud558\uba70 \uce21\uc815\uac12\uc740 \ubbf8\uc138\uba3c\uc9c0(PM10), \uc774\uc0b0\ud654\ud0c4\uc18c(CO2), \ud3ec\ub984\uc54c\ub370\ud788\ub4dc(HCHO), \uc77c\uc0b0\ud654\ud0c4\uc18c(CO)\uc774\ub2e4.\n- \uc790\ub8cc \uc911 \ud658\uc2b9\uc5ed\uc778 \uacbd\uc6b0 \uc5ed\uc0ac\uba85 \ub9c8\uc9c0\ub9c9\uc5d0 \uc22b\uc790\uac00 \uc788\uc73c\uba70 (\uc608\uc2dc: '\uc11c\uc6b8\uc5ed1') \uc774\ub54c \uc22b\uc790\uc758 \uc758\ubbf8\ub294 \uc9c0\ud558\ucca0 \ud638\uc120\uc744 \uc758\ubbf8\ud55c\ub2e4. \uc989 \uc11c\uc6b8\uc5ed\uc758 \uacbd\uc6b0 1\ud638\uc120\uacfc 4\ud638\uc120\uc774 \uad50\ucc28\ud558\ub294\ub370 \uc774\uc911 1\ud638\uc120\uc740 '\uc11c\uc6b8\uc5ed1'\ub85c 4\ud638\uc120\uc740 '\uc11c\uc6b8\uc5ed4'\ub85c \ud45c\ud604\ud55c\ub2e4.","e99df676":"##### \u203b \ub179\uc9c0\uc2dc\uc124 \uba74\uc801 - \ub300\uae30\uc0c1\ud0dc \uadf8\ub798\ud504","c71b59fe":"##### \u203b \uc624\uc5fc\ubb3c\uc9c8 \uc885\ub958 \uc815\ubcf4 \ubbf8\ud3ec\ud568 (\uc885\ub958 \uad00\uacc4\uc5c6\uc774 \uc624\uc5fc\ubb3c\uc9c8\uc758 \ucd1d\ud569\uac12\uc73c\ub85c \uacc4\uc0b0)","8a3a9020":"### data 1 + data 2","32184495":"##### \u203b \ud638\uc120 \uc815\ubcf4 \ubbf8\ud3ec\ud568","cc406ee7":"##### \u203b \uc624\uc5fc\ubb3c\uc9c8 \uc885\ub958 \uc815\ubcf4 \ubbf8\ud3ec\ud568 (\uc885\ub958 \uad00\uacc4\uc5c6\uc774 \uc624\uc5fc\ubb3c\uc9c8\uc758 \ucd1d\ud569\uac12\uc73c\ub85c \uacc4\uc0b0)","42bd4413":"### References","543fd7a7":"### data 4 (\uc5f0\ub3c4\ubcc4 \uc9c0\ud558\ucca0\uc5ed \uacf5\uae30\uc9c8 \uce21\uc815 \uc815\ubcf4)","0ea01517":"### data 1 (\uc9c0\ud558\ucca0 \ud63c\uc7a1\ub3c4 \uc815\ubcf4)","4929027a":"# \uc804\ubd81\ub300\ud559\uad50 \ud1b5\uacc4\ud559\uacfc \ub370\uc774\ud130\uacbd\uc9c4\ub300\ud68c (2022) ","92ceaaf7":"- \ub300\uccb4\ub85c \uc5ed \uac1c\uc218\uac00 \ub9ce\uc744\uc218\ub85d\u00a0\uc624\uc5fc\uc218\uce58\uac00\u00a0\uc99d\uac00\ud558\ub294 \uacbd\ud5a5\uc744 \ubcf4\uc784.\n- \uc5ed\uc758 \uac1c\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740\u00a0\uc1a1\ud30c\uad6c, \uc911\uad6c, \uac15\ub0a8\uad6c\uc5d0\uc11c\u00a0\uc624\uc5fc\ubb3c\uc9c8 \uc218\uce58\uac00 \uac00\uc7a5 \ub192\uac8c \uac80\ucd9c\ub428.","95c2411e":"#### \uc5f0\ub3c4\ubcc4 \ub300\uae30\uc0c1\ud0dc \ube44\uad50 (data 4 \uc0ac\uc6a9)","56b3058c":"<\ud638\uc120\uc815\ubcf4 \ud3ec\ud568, \ubbf8\ud3ec\ud568 \ub458 \ub2e4 \ub300\uccb4\ub85c 18:00\uacbd\uc5d0 \ud63c\uc7a1\ub3c4\uac00 \uac00\uc7a5 \ub192\uc74c>","c1feece2":"- \ubaa8\ub4e0\u00a0\uc624\uc5fc\ubb3c\uc9c8\uc5d0\uc11c \uc5ed\uc758 \uac1c\uc218\uac00 \ub9ce\uc740 \uc790\uce58\uad6c\uc77c\uc218\ub85d \uc624\uc5fc\ubb3c\uc9c8 \uc218\uce58\uac00 \ub192\uc74c.\u00a0\n- \uc5ed\uc758 \uac1c\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc1a1\ud30c\uad6c, \uc911\uad6c\uc5d0\uc11c \ubaa8\ub4e0 \uc624\uc5fc\ubb3c\uc9c8 \uc218\uce58\uac00 \uac00\uc7a5 \ub192\uac8c \uac80\ucd9c\ub428.","8437ce54":"<2,5,7\ud638\uc120\uc5d0\uc11c \ud63c\uc7a1\ub3c4, \uc624\uc5fc\ubb3c\uc9c8 \uc218\uce58\uac00 \uac00\uc7a5 \ub192\uc74c>","f0e494d4":"- \ucd9c\uadfc, \ub4f1\uad50 \uc2dc\uac04\ub300\uc778 7:30 ~ 8:00 \uc0ac\uc774\uc5d0 \uc9c0\ud558\ucca0 \ud63c\uc7a1\ub3c4\uac00 \uac00\ud30c\ub978 \uc0c1\uc2b9\uc138\ub97c \ubcf4\uc774\ub2e4\uac00 8:00 \uc774\ud6c4 \ud558\ub77d\uc138\ub97c \ubcf4\uc784.\n- \ud1f4\uadfc, \ud558\uad50 \uc2dc\uac04\ub300\uc778 16:30 ~ 18:30 \uc5d0\uc11c \uc9c0\ud558\ucca0 \ud63c\uc7a1\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc218\uce58\ub97c \uae30\ub85d\ud568.\n- 18:30 \uc774\ud6c4 \uafb8\uc900\ud55c \ud558\ub77d\uc138\ub97c \ubcf4\uc784."}}