{"cell_type":{"ed9ac0ba":"code","b6ce7a6b":"code","eb531b70":"code","d104a049":"code","ed4d0adc":"code","4850661d":"code","87eba113":"code","2a7474ff":"code","5bfdf706":"code","1674c298":"code","833cadc6":"code","e5ea56c9":"code","84b575d4":"code","72d3fedc":"markdown","21fc510f":"markdown","a90359d3":"markdown","df258b78":"markdown","9415baff":"markdown","5f84f446":"markdown","1cac7846":"markdown","46451442":"markdown","ef7976cc":"markdown","6151f82b":"markdown","5fb3f263":"markdown","5f480c91":"markdown"},"source":{"ed9ac0ba":"from matplotlib.offsetbox import TextArea, DrawingArea, OffsetImage, AnnotationBbox\nfrom matplotlib.collections import PatchCollection\nfrom matplotlib.patches import PathPatch\nfrom mpl_toolkits.basemap import Basemap\nfrom matplotlib.patches import Polygon\nfrom geopy.geocoders import Nominatim\nimport matplotlib.pyplot as plt\nfrom matplotlib import image\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\n\n\nplt.rcParams['font.family'] = \"Krungthep\"","b6ce7a6b":"data=pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\ncontinents=pd.read_csv(\"..\/input\/country-mapping-iso-continent-region\/continents2.csv\")\ncases=pd.read_csv(\"..\/input\/covid19-global-dataset\/worldometer_coronavirus_summary_data.csv\")\n\ndata_region=data.merge(continents[[\"region\", \"sub-region\"]], left_on=data.country, right_on=continents.name).drop(columns=[\"key_0\"]).rename(columns={\"sub-region\":\"subregion\"})\n\ngeolocator = Nominatim(user_agent=\"geoapiExercises\")\nlatitude, longitude, country=[], [], []\nfor c in data_region.country.unique().tolist():\n    location=geolocator.geocode(c)\n    longitude.append(location[1][0])\n    latitude.append(location[1][1])\n    country.append(c)\n\ncountries=pd.DataFrame({\"country\":country, \"latitude\":latitude, \"longitude\":longitude})\ndata_region=data_region.merge(countries, on=\"country\")\n\ncases.loc[:, \"country\"]=cases[\"country\"].replace([\"UK\", \"Isle Of Man\", \"USA\"], [\"United Kingdom\", \"Isle of Man\", \"United States\"])\ncases_df=pd.DataFrame()\nfor i in data_region.country.unique():\n    df=cases[cases[\"country\"]==\"{}\".format(i)]\n    cases_df=cases_df.append(df)\n\ncases_df.reset_index(drop=True, inplace=True)\ncases_df.loc[:, \"total_cases_per_hundred\"]=round(cases_df[\"total_cases_per_1m_population\"]\/10000)\ncases_df.loc[:, \"total_recovered_rate\"]=cases_df[\"total_recovered\"]\/cases_df[\"total_confirmed\"]","eb531b70":"def map_country_name(df, countries, color):\n    for c in countries:\n        df_=df.query(\"country=='{}'\".format(c)).reset_index(drop=True)\n        ax1.text(df_.latitude[0]-3, df_.longitude[0], df_.country[0], color=color, fontsize=12, fontweight=\"bold\", zorder=10)\n        \ndef map_shape_colored(countries):\n    patches, index, country, count=[], [], \"\", 0\n    m.readshapefile(\"..\/input\/world-countries-shape-3\/World_Countries\", \"world\")\n    country_lis=[]\n    for info, shape in zip(m.world_info, m.world):   \n        if info[\"COUNTRY\"] in countries:\n            if info[\"COUNTRY\"]!= country:\n                index.append(count)\n                country=info[\"COUNTRY\"]\n            count+=1\n            #The shapes, in this case, are of the type Polygon. To create it, the coordinates must be in a numpy array. The second argument sets the polygon to be closed\n            patches.append(Polygon(np.array(shape), True)) \n            country_lis.append(info[\"COUNTRY\"])\n    index.append(-1)      \n    return index, patches\n\ndef create_date_df(df, date):\n    \n    data_region_vaccine_ratio=df.query(\"date=='{}'\".format(date))[\"vaccines\"].value_counts(normalize=True).reset_index()\n    vaccine_index = {vaccine:index for index, vaccine in enumerate(data_region_vaccine_ratio[\"index\"])}\n    \n    return data_region_vaccine_ratio, vaccine_index\n    \ndef create_region_date_df(df, date, colors):\n    \n    data_region_date=df.query(\"date=='{}'\".format(date)).sort_values(by=[\"total_vaccinations_per_hundred\"], ascending=False).reset_index(drop=True)\n#     print(data_region_date)\n    sns.barplot(x=\"country\", y=\"total_vaccinations_per_hundred\", data=data_region_date, palette=colors, alpha=0.7, ax=ax2)\n\n    ax2.set_title(\"Total Vaccinations per Hundred\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n    ax2.set_xlabel(\"\")\n    ax2.set_ylabel(\"\")\n    \n    return data_region_date\n\ndef data_region_vaccine_ratio_plot(df, palette):\n    #[\"#c9643c\",\"#dd6e42\",\"#e3a47a\",\"#e8dab2\",\"#e9e2ce\",\"#eaeaea\",\"#d5e0e5\",\"#c0d6df\",\"#88a2ad\",\"#4f6d7a\", \"#384D56\"]\n    sns.barplot(x=\"vaccines\", y=\"index\", data=df, palette=palette, alpha=0.7, ax=ax3)\n    ax3.set_title(\"Type of Vaccines Used (Around the World)\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n    ax3.tick_params(axis=\"y\", which=\"both\", length=0, direction=\"in\", pad=-430)\n    ax3.set_xlabel(\"\")\n    ax3.set_ylabel(\"\")\n    ax3.invert_xaxis()\n    \ndef data_region_vaccine_flag_plot(df, vaccine_index):\n    sns.scatterplot(x=df[\"country\"], y=[vaccine_index[i] for i in df[\"vaccines\"]], alpha=0.7, ax=ax4)\n    ax4.set_title(\"Type of Vaccines Used\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n    plt.setp(ax4.get_yticklabels(), visible=False)\n    ax4.tick_params(axis=\"y\", which=\"both\", length=0)\n    ax4.set_xlabel(\"\")\n\n\n    for x, y in zip(df[\"country\"], [vaccine_index[i] for i in df[\"vaccines\"]]):\n        flag = plt.imread(\"..\/input\/flagsaroundtheworld\/{}.png\".format(x.lower()))\n        imagebox = OffsetImage(flag, zoom=0.065)\n        ab = AnnotationBbox(imagebox, (x, y), bboxprops =dict(edgecolor=\"white\"))\n        ax4.add_artist(ab)\n\ndef recovered_rate(df, order_color):\n    df_all=pd.DataFrame()\n    for c in df.country.unique():\n        df=cases_df.query(\"country=='{}'\".format(c))\n        df_all=df_all.append(df)\n\n    cases=df_all.sort_values(by=[\"total_cases_per_1m_population\"], ascending=False).reset_index()\n    cases_color = [order_color.get(k) for k in cases.country]\n    sns.barplot(x=\"country\", y=\"total_cases_per_1m_population\", data=cases, palette=cases_color, alpha=0.7, ax=ax5)\n    ax5.set_title(\"Total Cases per Million\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n    ax5.set_xlabel(\"\")\n    ax5.set_ylabel(\"\")\n    \n    recovered=df_all.sort_values(by=[\"total_recovered_rate\"], ascending=False).reset_index()\n    recovered_color = [order_color.get(k) for k in recovered.country]\n    sns.barplot(x=\"country\", y=\"total_recovered_rate\", data=recovered, palette=recovered_color, alpha=0.7, ax=ax6)\n    ax6.set_title(\"Total Recovered Rate\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n    ax6.set_xlabel(\"\")\n    ax6.set_ylabel(\"\")\n    \n # for i in data_region.date.unique().tolist():\n#     print(i)\n#     df=data_region.query(\"date=='{}'\".format(i))\n#     print(\"len of df:\" +str(len(df)))\n#     print(\"len of missing in date:\" +str(df[\"total_vaccinations\"].isna().sum()))\n#     print(\"diff:\" +str(len(df) - df[\"total_vaccinations\"].isna().sum())+\"\\n\")   ","d104a049":"data_region_sa=data_region[(data_region[\"subregion\"]==\"Southern Asia\") & (data_region[\"date\"]==\"2021-02-01\")].reset_index()\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-02-01\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.2)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat = 0, llcrnrlon = 50, urcrnrlat = 40, urcrnrlon = 115, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Southern Asia Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\n\nmap_country_name(data_region_sa, data_region_sa.country.unique().tolist(), \"#1D3C45\")    \nindex, patches=map_shape_colored(data_region_sa.country.unique().tolist())\nfor i, color in zip(index, [\"#d08c60\", \"#D2601A\", \"#FFF1E1\", \"#f6aa1c\"]):\n        ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, edgecolor='k', linewidths=1, zorder=3))\n\npalette_order=[\"#D2601A\", \"#f6aa1c\", \"#FFF1E1\", \"#d08c60\"]\ndata_region_date=create_region_date_df(data_region_sa, \"2021-02-01\", palette_order)\n\npalette=[\"#c9643c\",\"#dd6e42\",\"#e3a47a\",\"#e8dab2\",\"#e9e2ce\",\"#eaeaea\",\"#d5e0e5\",\"#c0d6df\",\"#88a2ad\",\"#4f6d7a\", \"#384D56\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_sa, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","ed4d0adc":"data_region_sea_ea=data_region[((data_region[\"subregion\"]==\"South-eastern Asia\") | (data_region[\"subregion\"]==\"Eastern Asia\")) & (data_region[\"date\"]==\"2021-01-27\")]\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-01-27\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.2)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat =-10 , llcrnrlon = 50, urcrnrlat = 55, urcrnrlon = 150,  ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"South-Eastern & Eastern Asia Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\n\nmap_country_name(data_region_sea_ea, data_region_sea_ea.country.unique().tolist(), \"#283655\")    \nindex, patches=map_shape_colored(data_region_sea_ea.country.unique().tolist())\nfor i, color in zip(index, [\"#ffe1a8\", \"#e26d5c\", \"#472d30\", \"#723d46\"]):\n    ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, linewidths=1, alpha=0.7, zorder=3))\nax1.add_collection(PatchCollection(patches[index[1] : index[2]], facecolor=\"#e26d5c\", linewidths=1, alpha=0.7, zorder=3))\nax1.add_collection(PatchCollection(patches[index[3] : index[4]], facecolor=\"#f1a782\", linewidths=1, alpha=0.7, zorder=5))\n\npalette_order=[\"#723d46\",\"#e26d5c\",\"#f1a782\",\"#ffe1a8\"]\ndata_region_date=create_region_date_df(data_region_sea_ea, \"2021-01-27\", palette_order)\n\npalette=[\"#723d46\",\"#aa5551\",\"#e26d5c\",\"#e67c66\",\"#ea8a6f\",\"#ee9979\",\"#f1a782\",\"#f5b68c\",\"#f8c495\",\"#ffe1a8\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_sea_ea, order_color)\n  \nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","4850661d":"data_region_wa=data_region[(data_region[\"subregion\"]==\"Western Asia\") & (data_region[\"date\"]==\"2021-01-29\")].dropna(subset=[\"total_vaccinations\"]).reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-01-29\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.2)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=10 , llcrnrlon= 15, urcrnrlat = 50, urcrnrlon = 80, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Western Asia Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\nmap_country_name(data_region_wa, data_region_wa.country.unique().tolist(), \"#283655\")  \nindex, patches=map_shape_colored(data_region_wa.country.unique().tolist())\n\nfor i, color in zip(index, [\"#c18c5d\",\"#ce796b\",\"#495867\",\"#ecc8af\",\"#857262\",\"#e7ad99\"]):\n    ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, linewidths=1, zorder=3))\nax1.add_collection(PatchCollection(patches[index[5] : index[6]], facecolor=\"#e7ad99\", linewidths=1, alpha=0.7, zorder=5))\n\npalette_order=[\"#495867\",\"#857262\",\"#c18c5d\",\"#ce796b\",\"#e7ad99\",\"#ecc8af\"]\ndata_region_date=create_region_date_df(data_region_wa, \"2021-01-29\", palette_order)\n\npalette=[\"#495867\",\"#676565\",\"#857262\",\"#a37f60\",\"#c18c5d\",\"#c88364\",\"#ce796b\",\"#db9382\",\"#e7ad99\",\"#ecc8af\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_wa, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","87eba113":"data_region_ne=data_region[(data_region[\"subregion\"]==\"Northern Europe\") & (data_region[\"date\"]==\"2021-02-02\")].dropna(subset=[\"total_vaccinations_per_hundred\"]).reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-02-02\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\nm = Basemap(llcrnrlat=40 , llcrnrlon= -30, urcrnrlat = 80, urcrnrlon = 35, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Northern Europe Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\ncountry_list=data_region_ne.country.unique().tolist()\ncountry_list.remove(\"Isle of Man\")\nmap_country_name(data_region_ne, country_list, \"#283655\")\n\ndf=data_region.query(\"country=='Isle of Man'\").reset_index(drop=True)\nax1.text(df.latitude[0]-3, df.longitude[0]-3, df.country[0], color=\"#283655\", fontsize=12, fontweight=\"bold\", zorder=10)\n    \nindex, patches=map_shape_colored(data_region_ne.country.unique().tolist())\n\n\nfor i, color in zip(index, [\"#e3a47a\",\"#e9e2ce\",\"#eaeaea\", \"#88a2ad\", \"#e8dab2\",\"#c0d6df\",\"#d5e0e5\",\"#dd6e42\",\"#dd6e42\"]):\n    ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, linewidths=1, zorder=3)) \nax1.add_collection(PatchCollection(patches[index[5] : index[6]], facecolor=\"#c0d6df\", linewidths=1, alpha=0.7, zorder=5))\nax1.add_collection(PatchCollection(patches[index[7] : index[8]], facecolor=\"#dd6e42\", linewidths=1, alpha=0.7, zorder=5))\n\npalette=[\"#dd6e42\",\"#e0895e\",\"#e3a47a\",\"#e8dab2\",\"#e9e2ce\",\"#eaeaea\",\"#d5e0e5\",\"#c0d6df\",\"#88a2ad\"]\ndata_region_date=create_region_date_df(data_region_ne, \"2021-02-02\", palette)\nax2.tick_params(axis=\"x\", rotation=20)\n\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\nax4.tick_params(axis=\"x\", rotation=20)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_ne, order_color)\nax5.tick_params(axis=\"x\", rotation=20)\nax6.tick_params(axis=\"x\", rotation=20)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","2a7474ff":"data_region_ee=data_region[(data_region[\"subregion\"]==\"Eastern Europe\") & (data_region[\"date\"]==\"2021-02-02\")].reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-02-02\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=35 , llcrnrlon= 5, urcrnrlat = 60, urcrnrlon = 45, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Eastern Europe Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\nmap_country_name(data_region_ee, data_region_ee.country.unique().tolist(), \"#283655\") \nindex, patches=map_shape_colored(data_region_ee.country.unique().tolist())\n\nfor i, color in zip(index,  [\"#fe938c\",\"#e6b89c\",\"#ead2ac\",\"#9cafb7\",\"#4281a4\"]):\n        ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, edgecolor='k', linewidths=1, alpha=0.7, zorder=3))\n        \npalette_order=[\"#4281a4\",\"#9cafb7\",\"#e6b89c\",\"#ead2ac\",\"#fe938c\"]\ndata_region_date=create_region_date_df(data_region_ee, \"2021-02-02\", palette_order)\n\npalette=[\"#4281a4\",\"#6f98ae\",\"#86a4b3\",\"#9cafb7\",\"#c3c1b2\",\"#ead2ac\",\"#e8c5a4\",\"#e6b89c\",\"#f2a694\",\"#fe938c\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_ee, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","5bfdf706":"data_region_we=data_region[(data_region[\"subregion\"]==\"Western Europe\") & (data_region[\"date\"]==\"2021-01-31\")].reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-01-31\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=35 , llcrnrlon= -10, urcrnrlat = 60, urcrnrlon = 30, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Western Europe Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\ncountry_list=data_region_we.country.unique().tolist()\ncountry_list.remove(\"Austria\")\ndf=data_region.query(\"country=='Austria'\").reset_index(drop=True)\nax1.text(df.latitude[0]+1, df.longitude[0], df.country[0], color=\"#283655\", fontsize=12, fontweight=\"bold\", zorder=10)\n\nmap_country_name(data_region_we, country_list, \"#1D3C45\") \nindex, patches=map_shape_colored(data_region_we.country.unique().tolist())\n\nfor i, color in zip(index,  [\"#b2b187\",\"#da6e48\",\"#f4d58d\",\"#cd3a26\",\"#708d81\",\"#668075\",\"#bf0603\"]):\n         ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, edgecolor='k', linewidths=1, alpha=0.7, zorder=3))\n\npalette_order=[\"#bf0603\",\"#cd3a26\",\"#da6e48\",\"#f4d58d\",\"#b2b187\",\"#708d81\",\"#668075\"]\ndata_region_date=create_region_date_df(data_region_we, \"2021-01-31\", palette_order)\n\npalette=[\"#bf0603\",\"#cd3a26\",\"#da6e48\",\"#e7a26b\",\"#f4d58d\",\"#b2b187\",\"#919f84\",\"#708d81\",\"#6b877b\",\"#668075\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_we, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","1674c298":"data_region_se=data_region[(data_region[\"subregion\"]==\"Southern Europe\") & (data_region[\"date\"]==\"2021-02-01\")].dropna(subset=[\"total_vaccinations_per_hundred\"]).reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-02-01\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=27 , llcrnrlon= -15, urcrnrlat = 55, urcrnrlon = 30, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Southern Europe Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\ncountry_list=data_region_se.country.unique().tolist()\ncountry_list.remove(\"Spain\")\ndf=data_region.query(\"country=='Spain'\").reset_index(drop=True)\nax1.text(df.latitude[0]+1, df.longitude[0], df.country[0], color=\"#283655\", fontsize=12, fontweight=\"bold\", zorder=10)\n\nmap_country_name(data_region_se, country_list, \"#1D3C45\")    \nindex, patches=map_shape_colored(data_region_se.country.unique().tolist())\n\nfor i, color in zip(index,  [\"#f95738\",\"#ee964b\",\"#f47742\",\"#f4d35e\",\"#41698e\",\"#f1b555\",\"#7a94a5\",\"#ebebd3\", \"#d68c45\"]):\n         ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, edgecolor='k', linewidths=1, alpha=0.7, zorder=3))\n\npalette_order=[\"#083d77\",\"#41698e\",\"#7a94a5\",\"#ebebd3\",\"#f4d35e\",\"#f1b555\",\"#ee964b\",\"#f47742\",\"#f95738\"]\ndata_region_date=create_region_date_df(data_region_se, \"2021-02-01\", palette_order)\n\npalette=[\"#083d77\",\"#41698e\",\"#7a94a5\",\"#ebebd3\",\"#f4d35e\",\"#f1b555\",\"#ee964b\",\"#f47742\",\"#f95738\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_se, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","833cadc6":"data_region_na=data_region[(data_region[\"subregion\"]==\"Northern America\") & (data_region[\"date\"]==\"2021-02-02\")].reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-02-02\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=0 , llcrnrlon= -180, urcrnrlat = 90, urcrnrlon = -30, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Northern America Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\nmap_country_name(data_region_na, data_region_na.country.unique().tolist(), \"#1D3C45\")    \nindex, patches=map_shape_colored(data_region_na.country.unique().tolist())\n\nax1.add_collection(PatchCollection(patches[index[0] : index[1]], facecolor=\"#F2A568\", linewidths=1, alpha=0.7, zorder=3))\nax1.add_collection(PatchCollection(patches[index[1] : index[2]], facecolor=\"#707469\", linewidths=1, alpha=0.7, zorder=3))\n\npalette_order=[\"#707469\",\"#F2A568\"]\ndata_region_date=create_region_date_df(data_region_na, \"2021-02-02\", palette_order)\n\npalette=[\"#4c5657\",\"#707469\",\"#94927b\",\"#b8b08d\",\"#d5c290\",\"#f2d492\",\"#f2b576\",\"#f2a568\",\"#f29559\",\"#f39f68\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_na, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","e5ea56c9":"data_region_lac=data_region[(data_region[\"subregion\"]==\"Latin America and the Caribbean\") & (data_region[\"date\"]==\"2021-01-28\")].dropna(subset=[\"total_vaccinations_per_hundred\"]).reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-01-28\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=-65 , llcrnrlon= -160, urcrnrlat = 35, urcrnrlon = 5, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Latin America and the Caribbean Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\n\nmap_country_name(data_region_lac, data_region_lac.country.unique().tolist(), \"#1D3C45\")    \nindex, patches=map_shape_colored(data_region_lac.country.unique().tolist())\n\nfor i, color in zip(index,  [\"#89bd9e\",\"#e26f65\",\"#a3c099\",\"#eba47f\",\"#e57f76\", \"#f0c987\"]):\n    ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, edgecolor='k', linewidths=1, alpha=0.7, zorder=3))\n\npalette_order=[\"#89bd9e\",\"#a3c099\",\"#f0c987\",\"#eba47f\",\"#e57f76\",\"#e26f65\"]\ndata_region_date=create_region_date_df(data_region_lac, \"2021-01-28\", palette_order)\n\npalette=[\"#688e77\",\"#729c83\",\"#7dac90\",\"#89bd9e\",\"#a3c099\",\"#f0c987\",\"#eba47f\",\"#e57f76\",\"#e26f65\",\"#df5e53\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_lac, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","84b575d4":"data_region_nf=data_region[(data_region[\"subregion\"]==\"Northern Africa\") & (data_region[\"date\"]==\"2021-01-30\")].dropna(subset=[\"total_vaccinations_per_hundred\"]).reset_index(drop=True)\ndata_region_vaccine_ratio, vaccine_index=create_date_df(data_region, \"2021-01-30\")\n\nfig=plt.figure(figsize=(27, 12))\ngs=fig.add_gridspec(2, 3)\ngs.update(wspace=0.1, hspace=0.25)\nax1=fig.add_subplot(gs[0, 0])\nax2=fig.add_subplot(gs[0, 1])\nax3=fig.add_subplot(gs[1, 0])\nax4=fig.add_subplot(gs[1, 1], sharey=ax3, sharex=ax2)\nax5=fig.add_subplot(gs[0, 2])\nax6=fig.add_subplot(gs[1, 2])\n\nfig.set_facecolor(\"#eddcd2\")\n\nm = Basemap(llcrnrlat=0 , llcrnrlon= -25, urcrnrlat = 50, urcrnrlon = 60, ax=ax1)\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color=\"#ffffff\", lake_color = \"#a8dadc\");\nax1.set_title(\"Northern Africa Map\", size=16, loc=\"left\", pad=10, fontweight=\"bold\")\n\nmap_country_name(data_region_nf, data_region_nf.country.unique().tolist(), \"#1D3C45\")    \nindex, patches=map_shape_colored(data_region_nf.country.unique().tolist())\n\nfor i, color in zip(index,  [\"#ffefd3\",\"#ffc49b\",\"#adb6c4\"]):\n    ax1.add_collection(PatchCollection(patches[i : i+1], facecolor=color, edgecolor='k', linewidths=1, alpha=0.7, zorder=3))\n\npalette_order=[\"#adb6c4\",\"#ffefd3\",\"#ffc49b\"]\ndata_region_date=create_region_date_df(data_region_nf, \"2021-01-30\", palette_order)\n\npalette=[\"#294c60\",\"#4a6779\",\"#6b8192\",\"#adb6c4\",\"#d6d3cc\",\"#ffefd3\",\"#ffdab7\",\"#ffc49b\",\"#ffb685\",\"#ffa970\"]\ndata_region_vaccine_ratio_plot(data_region_vaccine_ratio, palette=palette)\n\ndata_region_vaccine_flag_plot(data_region_date, vaccine_index)\n\norder=[tick.get_text() for tick in ax2.get_xticklabels()]\norder_color={}\nfor o, c in zip(order, palette_order):\n    order_color[\"{}\".format(o)]=c\nrecovered_rate(data_region_nf, order_color)\n\nfor s in [\"top\",\"right\",\"left\", \"bottom\"]:\n    for ax in [ax1, ax2, ax3, ax4, ax5, ax6]:\n        ax.spines[s].set_visible(False)","72d3fedc":"### Southern Europe","21fc510f":"### Latin America and the Caribbean","a90359d3":"## COVID-19 World Vaccination Progress\n\n\n* This notebook explored the COVID-19 world vaccination progress based on different regions and specific on column\n   \u300e total vaccinations per hundred \u300f. Since they are missing values around dataset, I didn't find any specific date suit for every region. I picked the date based on the countries in each region that has least missing data. It might be inconsistent throughout the region but the date got pick were actually very close, mostly at the end of January or the begining of February, I think it still provide some interesting information.\n\n\n* About the plots, Each region has plot include six subplots. Plot on the top-left is the map of the region with the countries; top-middle shows the total vaccinations per hundred across the countries; bottom-left displays type of vaccines used (percentage) on the specific date around the globe and it shares the y-axis with bottom-middle which shows the type of vaccines used in different countries.","df258b78":"### Southern Asia","9415baff":"#### Interesting Things Found\n\n* Pupular vaccines used around the world are **Pfizer\/BioNTech** and **Moderna**.\n* Type of vaccines used in Europe are pretty consistent. Most of them are Pfizer\/BioNTech and Moderna compare to other regions which are quite diverse.\n\n\n\n\n* Countries in Western Asia generally have higher total vaccinations ratio especially in Israel and United Arab Emirates compare to other Asia countries.\n* In Northern Europe, United Kingdom has highest total vaccinations ratio and quite a gap to others.\n* Northern Africa has lowest total vaccinations ratio after Southern Asia.\n\n\nThanks for reading my notebook, if you have any suggestion please feel free to leave comments.\nThis notebook is still in progress, I will update soon!","5f84f446":"### Eastern Europe","1cac7846":"### Northern Europe","46451442":"### Northern America","ef7976cc":"### South-Eastern & Eastern Asia","6151f82b":"### Western Europe","5fb3f263":"### Northern Africa","5f480c91":"### Western Asia"}}