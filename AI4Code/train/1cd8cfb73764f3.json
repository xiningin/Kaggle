{"cell_type":{"045911d0":"code","7ce2a201":"code","3b697027":"code","5668adb8":"code","5d609fef":"code","024d2522":"code","d0065b4e":"code","8ac125a1":"code","695800df":"code","cdb439b9":"code","bf2bc05c":"code","81919d4a":"code","96bd464d":"code","46a35578":"code","63e24287":"code","87ee00ea":"code","ec3b3511":"code","8564fa1c":"code","b3a99add":"code","af6dabf2":"code","244b1c9c":"code","584d7e21":"code","bd3a2168":"code","42e447c5":"code","7ba12e30":"code","d62e508d":"code","eb4eedf8":"code","cb9eb0db":"code","5a0ec1de":"code","d6f38ab0":"code","3755d6ca":"code","60d2ee79":"markdown","57aa1ed8":"markdown","923575ea":"markdown","4dff74b9":"markdown","19badf66":"markdown","03244370":"markdown","f213766b":"markdown"},"source":{"045911d0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')","7ce2a201":"d=pd.read_csv('\/kaggle\/input\/supermarket-sales\/supermarket_sales.csv')\nprint(\"Dataset contains {} row and {} colums\".format(d.shape[0],d.shape[1]))","3b697027":"d.head(10)\n","5668adb8":"d.info()","5d609fef":"d.describe()","024d2522":"d.corr()","d0065b4e":"np.round(d.corr(),2)","8ac125a1":"plt.figure(dpi=125)\nsns.heatmap(np.round(d.corr(),2),annot=True,cmap='RdYlBu_r')\nplt.show()","695800df":"plt.figure(figsize=(12,6),dpi=100)\nsns.regplot(x='Quantity',y='cogs',data=d,color='green')\nplt.xlabel('Quantity')\nplt.ylabel('Cost of Goods Sale')\nplt.title('Quantity v Cost of Goods Sale',fontsize=15)\nplt.show()","cdb439b9":"\nd.hist(figsize=(12,12))\nplt.show()","bf2bc05c":"plt.figure(figsize=(14,6))\nplt.style.use('fivethirtyeight')\nax= sns.countplot('Gender', data=d , palette = 'copper')\nax.set_xlabel(xlabel= \"Gender\",fontsize=18)\nax.set_ylabel(ylabel = \"Gender count\", fontsize = 18)\nax.set_title(label = \"Gender count in supermarket\", fontsize = 20)\nplt.show()\n\nd.groupby(['Gender']). agg({'Total':'sum'})","81919d4a":"sns.catplot(x='Product line',y='Unit price',hue='Gender',data=d,aspect=3)\nplt.xlabel('Product Type')\nplt.ylabel('Unit Price')\nplt.show()","96bd464d":"plt.figure(dpi=125)\nsns.countplot(y ='Product line', hue = \"Gender\", data = d) \nplt.xlabel('Count')\nplt.ylabel('Product Type')\nplt.show()","46a35578":"d.groupby(['Customer type']). agg({'Total':'sum'})","63e24287":"plt.figure(figsize=(14,6))\nax = sns.countplot(x = \"Customer type\", hue = \"Branch\", data = d, palette= \"rocket_r\")\nax.set_title(label = \"Customer type in different branch\", fontsize = 25)\nax.set_xlabel(xlabel = \"Branches\", fontsize = 16)\nax.set_ylabel(ylabel = \"Customer Count\", fontsize = 16)","87ee00ea":"plt.figure(dpi=125)\nsns.countplot(d['Payment'])\nplt.xlabel('Payment Method')\nplt.ylabel('Count')\nplt.title('Which Payment Method is most used?')\nA,B,C =d.Payment.value_counts()\n\nprint('E-wallet -',A)\nprint('Cash -',B)\nprint('Credit Card -',C)\nplt.show()","ec3b3511":"plt.figure(figsize = (14,6))\nax = sns.countplot(x=\"Payment\", hue = \"Branch\", data = d, palette= \"tab20\")\nax.set_title(label = \"Payment distribution in all branches\", fontsize= 25)\nax.set_xlabel(xlabel = \"Payment method\", fontsize = 16)\nax.set_ylabel(ylabel = \"Peple Count\", fontsize = 16)","8564fa1c":"plt.figure(dpi=125)\nsns.countplot(y ='Product line', hue = \"City\", data = d) \nplt.xlabel('Count')\nplt.ylabel('Product Type')\nplt.show()","b3a99add":"d[\"Time\"]= pd.to_datetime(d[\"Time\"])\nd[\"Hour\"]= (d[\"Time\"]).dt.hour\nplt.figure(figsize=(14,6)) \nSalesTime = sns.lineplot(x=\"Hour\", y =\"Quantity\", data = d).set_title(\"product sales per Hour\")","af6dabf2":"plt.figure(figsize=(14,6)) \nrating_vs_sales = sns.lineplot(x=\"Total\", y= \"Rating\", data=d)","244b1c9c":"sns.catplot(y ='Rating',x='Quantity', data = d,kind='boxen',aspect=3) \nplt.xlabel('Quantity')\nplt.ylabel('Rating')\nplt.show()","584d7e21":"plt.figure(figsize = (5,20),dpi=100)\nax = sns.relplot(y= \"Product line\", x = \"gross income\", data = d)\n","bd3a2168":"x = d.iloc[:,6].values.reshape(-1,1)\ny = d.iloc[:,-2].values","42e447c5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 1\/3, random_state = 0)\n\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","7ba12e30":"plt.figure(figsize=(30,10))\nplt.scatter(X_train, y_train, color = 'red')\nplt.plot(X_train, regressor.predict(X_train), color = 'blue')\nplt.title('Gross percent vs unit price')\nplt.xlabel('Unit price')\nplt.ylabel('Gross percent')\nplt.show()","d62e508d":"plt.figure(figsize=(20,7))\nplt.scatter(X_test, y_test, color = 'green')\nplt.plot(X_train, regressor.predict(X_train), color = 'red')\nplt.title('Gross percent vs unit price')\nplt.xlabel('Unit price')\nplt.ylabel('Gross percent')\nplt.show()","eb4eedf8":"# Import label encoder \nfrom sklearn import preprocessing \n\n# label_encoder object knows how to understand word labels. \nlabel_encoder = preprocessing.LabelEncoder() \n\n# Encode labels in column 'species'. \nd['Product line']= label_encoder.fit_transform(d['Product line']) \n\nd['Product line'].unique()","cb9eb0db":"x = d.iloc[:,5].values.reshape(-1,1)\ny = d.iloc[:,-2].values","5a0ec1de":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)","d6f38ab0":"from sklearn.ensemble import RandomForestRegressor \n  \n # create regressor object \nregressor = RandomForestRegressor(n_estimators = 100, random_state = 0) \n  \n# fit the regressor with x and y data \nregressor.fit(x, y)","3755d6ca":"plt.figure(figsize=(20,7))\nX_grid = np.arange(min(x), max(x), 0.01)  \n  \n# reshape for reshaping the data into a len(X_grid)*1 array,  \n# i.e. to make a column out of the X_grid value                   \nX_grid = X_grid.reshape((len(X_grid), 1)) \n# Scatter plot for original data \nplt.scatter(x, y, color = 'blue')   \n  \n# plot predicted data \nplt.plot(X_grid, regressor.predict(X_grid),  \n         color = 'green')  \nplt.title('Product Line vs Rating') \nplt.ylabel('Rating') \nplt.xlabel('Product line') \nplt.show()","60d2ee79":"# Customer & Branches","57aa1ed8":"# Product and gross income","923575ea":"# PREDICTION","4dff74b9":"# gender ","19badf66":"# Rating VS Quantity","03244370":"# Rating VS Sales","f213766b":"# Sells time"}}