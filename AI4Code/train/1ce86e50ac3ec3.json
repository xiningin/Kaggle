{"cell_type":{"5cbfae79":"code","90dc25d8":"code","aae58ae5":"code","88f86e0f":"code","58295590":"code","1670f24a":"code","28b993ec":"code","813a15bb":"code","229addf5":"code","ee83a85f":"code","6a450fb0":"code","1c7a5051":"code","c6570eea":"code","dd349aab":"code","19a00310":"code","a9d8a392":"code","dcb1971c":"code","44de3b36":"code","7e061ccb":"code","d24802f4":"code","79d2f27a":"code","abd3299d":"code","36ccf0ce":"code","0a42f98d":"code","617d0a55":"code","90d98a0d":"code","90c00cea":"code","5768501d":"code","05983e7b":"code","75a5adb3":"code","e9a5a027":"code","dc4727bc":"code","03d9ab2f":"code","45c6d512":"code","ded2b9ce":"code","018498ec":"code","94347e63":"code","fe832c66":"code","4019f26c":"markdown","fe403113":"markdown","7741e97c":"markdown","f57704dd":"markdown","4baf612c":"markdown","caf3e130":"markdown","7eb05837":"markdown","d0033f7c":"markdown","2a3ec693":"markdown","3c11cc7b":"markdown","6b6693a2":"markdown","31042de6":"markdown","b8b96efb":"markdown","e07df1a1":"markdown","139a8ee7":"markdown","079f6321":"markdown","48e9437d":"markdown","0afba4e4":"markdown","ec335980":"markdown","b7496613":"markdown","6209ab44":"markdown","9779070a":"markdown","b210570b":"markdown","59503fa5":"markdown","7ccaf06c":"markdown","cb26155c":"markdown","3e49b0ce":"markdown","cb9111c8":"markdown","f4250a4b":"markdown","9cc3fbd5":"markdown","a47b080f":"markdown","f809f8a3":"markdown","3f0a8624":"markdown"},"source":{"5cbfae79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90dc25d8":"#importing library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error\nfrom sklearn.preprocessing import OneHotEncoder,OrdinalEncoder,StandardScaler,MinMaxScaler,PowerTransformer,FunctionTransformer\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import AdaBoostRegressor,GradientBoostingRegressor,RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom xgboost import XGBRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\nimport cufflinks as cf\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\nfrom plotly import tools\n\n\n%matplotlib inline \n","aae58ae5":"#load and check the shape .\ndf=pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\n#check the data \ndf.head()","88f86e0f":"#check the rows and columns number.\nprint(f\"number of rows:--> {df.shape[0]} and number of columns:--> {df.shape[1]}\")","58295590":"#chack the data information\ndf.info()","1670f24a":"#check for missing values \ndef checking_m(df):\n    null_v = df.isnull().sum().sort_values(ascending=False)\n    null_percent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\n    null_v = pd.concat([null_v, null_percent], axis=1, keys=['Missing_Number', 'Missing_Percent'])\n    return null_v\n\nchecking_m(df)","28b993ec":"#check for dublicated rows\nprint(\"Numbers of duplicated rows :\",df.duplicated().sum())","813a15bb":"#dropping the duplicated rows \ndf=df.drop_duplicates(keep=\"first\")\nprint(\"After removing,now number of duplicated rows are:\",df.duplicated().sum())","229addf5":"#check data description\ndf.describe().T.style.bar(subset=['mean'], color='#205ff2').background_gradient(subset=['std'], cmap='mako').background_gradient(subset=['50%'], cmap='coolwarm')","ee83a85f":"#check the correlation between terget and each of columns\ndf.corr()[\"charges\"]","6a450fb0":"plt.figure(figsize=(20,10))\n\n#plot heat map\nsns.heatmap(df.corr(),annot=True,cmap=\"gist_rainbow\",linecolor='black')","1c7a5051":"cat_col=[\"sex\",\"smoker\",\"region\",\"children\"]","c6570eea":"colors=[\"#00FFFF\",\"#FFA500\",\"#ADD8E6\",\"#ED00D9\",\"#ED1400\"]\ntextprops = {\"fontsize\":22}\ni=1\nplt.figure(figsize=(25,90))\nfor col in cat_col:\n    plt.subplot(11,2,i)\n    sns.countplot(data=df,x=col,palette=\"gist_rainbow\")\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"count\",fontsize=25)\n    i=i+1\n    plt.subplot(11,2,i)\n    df[col].value_counts().plot(kind=\"pie\",autopct=\"%.2f%%\",colors=colors,textprops=textprops,shadow=True, radius = 1.1)\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"count\",fontsize=25)\n    i=i+1\n\nplt.show()","dd349aab":"#analysis sex vs smoker columns combinely \nsns.countplot(df[\"sex\"],hue=df[\"smoker\"],palette=\"gist_rainbow\")","19a00310":"i=1\nplt.figure(figsize=(25,90))\nfor col in cat_col:\n    \n    plt.subplot(11,2,i)\n    sns.boxplot(df[col],df[\"charges\"])\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"charges\",fontsize=25)\n    i=i+1\n\nplt.show()","a9d8a392":"#anlysis numerical columns\nsns.pairplot(df,hue=\"sex\")","dcb1971c":"#analysis chareges columns\nplt.figure(figsize=(18,4))\nplt.subplot(121)\nsns.histplot(df[\"charges\"],color=\"#00FFFF\")\nplt.title(\"Charges\")\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=12)\nplt.xlabel(\"charges\",fontsize=15)\n\n","44de3b36":"#analysis age and bmi columns\nplt.figure(figsize=(18,8))\nplt.subplot(121)\nsns.histplot(df[\"age\"],color=\"#ADD8E6\",fill=True)\nplt.title(\"Age\")\nplt.xticks(fontsize=25)\nplt.yticks(fontsize=25)\nplt.xlabel(\"Age\",fontsize=25)\nplt.ylabel(\"count\",fontsize=25)\n    \n\nplt.subplot(122)\nsns.histplot(df[\"bmi\"],color=\"#ED00D9\")\nplt.title(\"BMI\")\nplt.xticks(fontsize=25)\nplt.yticks(fontsize=25)\nplt.xlabel(\"BMI\",fontsize=25)\nplt.ylabel(\"count\",fontsize=25)\n   \n\nplt.show()\n","7e061ccb":"#analysis age vs charges columns \nplt.figure(figsize=(20,8))\nsns.jointplot(df[\"age\"],df[\"charges\"],kind=\"hist\")","d24802f4":"#analysis bmi vs charges columns \nplt.figure(figsize=(20,8))\nsns.jointplot(df[\"bmi\"],df[\"charges\"],kind=\"hist\")","79d2f27a":"#numerical - categorical col analysis\nplt.figure(figsize=(18,8))\nplt.subplot(121)\nsns.barplot(df[\"sex\"],df[\"charges\"],hue=df[\"smoker\"],palette=\"gist_rainbow\")\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel(\"Sex\",fontsize=20)\nplt.ylabel(\"Charges\",fontsize=20) \n \n\nplt.subplot(122)\nsns.barplot(df[\"region\"],df[\"bmi\"],hue=df[\"sex\"],palette= 'gist_rainbow')\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel(\"Region\",fontsize=20)\nplt.ylabel(\"BMI\",fontsize=20)\n \n\n\nplt.show()\n","abd3299d":"#checking for outlier in age col...\nsns.boxplot(df[\"age\"],palette=\"gist_rainbow\") #colors=[\"#00FFFF\",\"#FFA500\",\"#ADD8E6\",\"#ED00D9\",\"#ED1400\"]","36ccf0ce":"#outliers in bmi col...\nsns.boxplot(df[\"bmi\"],palette=\"gist_rainbow\")","0a42f98d":"#first check the distribution...\nsns.distplot(df[\"bmi\"],kde=True,color=\"red\")","617d0a55":"#With this function we detect the outliers \ndef outlier(data):\n\n    mean=data.mean()\n    std=data.std()\n    mini=data.min()\n    maxi=data.max()\n\n    #let find the boundaries for outlier\n    highest=data.mean() + 3*data.std()\n    lowest=data.mean() - 3*data.std()\n\n        #finally, let find the outlier\n    outliers=df[(data>highest) | (data<lowest)]\n        \n\n    return outliers\n","90d98a0d":"#outliers detection and remove  \nnew=pd.DataFrame(df[\"bmi\"],columns=[\"bmi\"])\nfor col in new.columns:\n    test=outlier(df[col])\n    print(\"columns name :\",col)\n    print(\"numbers of outliers:\",len(test))\n    print(\"\\n\")\n    print(test)\n    print(\"<<<<<<<<<------------------------------------->>>>>>>>>\")\n    df=df.drop(test.index,axis=0)                        #drop the outliers by thier index\n   \n    \n","90c00cea":"#function that will change  bmi to a category\ndef weightCondition(bmi):\n  if bmi<18.5:\n    return \"Underweight\"\n  elif (bmi>= 18.5)&(bmi< 24.986):\n    return \"Normal\"\n  elif (bmi >= 25) & (bmi < 29.926):\n    return \"Overweight\"\n  else:\n    return \"Obese\"\ndf[\"weight_Condition\"]=[weightCondition(val) for val in df[\"bmi\"] ]\ndf.head(5)","5768501d":"#get the features and terget col\nY=df.charges\nX=df.drop([\"charges\"],axis=1)\n#train test split  \nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=42)\nprint(\"X_train shape: \",x_train.shape)\nprint(\"X_test shape: \",x_test.shape)\nprint()\nprint(\"Y_train shape: \",y_train.shape)\nprint(\"Y_test shape: \",y_test.shape)\n","05983e7b":"x_train.head()","75a5adb3":"x_train[\"weight_Condition\"].unique()","e9a5a027":"#pipe1 contain 2 encoder ,one hot encoder and ordinal encoder\n#ohe encode sex,smoker,region\n#ordinal encode the weight_condition col because we arrange the order on this col\n#pipe2 just scale all the columns \npipe1=ColumnTransformer(transformers=[(\"OHE\",OneHotEncoder(sparse=False,drop=\"first\"),\n                                       [\"sex\",\"smoker\",\"region\"]),\n                                     (\"ordinal\",OrdinalEncoder(categories=[['Underweight','Normal','Overweight','Obese']]),\n                                      [\"weight_Condition\"])]\n                        ,remainder=\"passthrough\")\npipe2=ColumnTransformer(transformers=[(\"scaling\",StandardScaler(),[0,1,2,3,4,5,6,7,8])],\n                        remainder=\"passthrough\")\n\npipe=Pipeline([(\"pipe1\",pipe1),(\"pipe2\",pipe2)])\nx_train=pd.DataFrame(pipe.fit_transform(x_train))\nx_test=pd.DataFrame(pipe.transform(x_test))\nx_train.head()","dc4727bc":"#this function used to evalute the models with features and terget.\ndef models_score(models, x_train, x_test, y_train, y_test):    \n    \n    scores = {}\n    \n    for name, model in models.items():\n        model.fit(x_train, y_train)\n        y_pred=model.predict(x_test) \n        scores[name] =r2_score(y_test,y_pred)\n        #printing the model name and accuracy !!!!!\n        print(\"Model name: \",model)\n        print(\"R2 score :--->>\",r2_score(y_test,y_pred))\n        print(\"MSE\",mean_squared_error(y_test,y_pred))\n        print(\"MAE\",mean_absolute_error(y_test,y_pred))\n        print(\"\\n<<<<------------------------------------------------------------->>>>\\n\")\n           \n   \n    model_scores = pd.DataFrame(scores, index=['R2 Score']).transpose()\n    model_scores = model_scores.sort_values('R2 Score',ascending=False)\n    return model_scores","03d9ab2f":"#initialize the models \nmodels = {\"LinearRegression\":LinearRegression(),\n          \"AdaBoost\":AdaBoostRegressor(learning_rate= 0.001,loss='exponential',n_estimators= 50,random_state=42),\n          \"GradiantBoost\":GradientBoostingRegressor(criterion= 'mse',learning_rate= 0.05, loss=\"ls\",n_estimators= 100,random_state=42),\n         \"RandomForest\":RandomForestRegressor(criterion='mae',n_estimators=150,max_depth=8,random_state=42),\n         \"XgBoost\": XGBRegressor(),\n         \"KNeighborsRegressor\":KNeighborsRegressor(metric ='minkowski',n_neighbors= 9, weights= 'distance')}","45c6d512":"#Calling the function\nmodel_scores = models_score(models, x_train, x_test, y_train, y_test)","ded2b9ce":"model_scores","018498ec":"model_scores = model_scores.reset_index().rename({\"index\":\"Algorithms\"}, axis = 1)\n\nmodel_scores.style.bar()","94347e63":"fig = px.bar(data_frame = model_scores,\n             x=\"Algorithms\",\n             y=\"R2 Score\",\n             color=\"Algorithms\", title = \"<b>Models Score<\/b>\", template = 'plotly_dark')\n\nfig.update_layout(bargap=0.2)\n\nfig.show()","fe832c66":"label = model_scores['Algorithms']\nvalue = model_scores['R2 Score']\n\nfig = go.Figure(data=[go.Pie(labels = label, values = value, rotation = 90)])\n\nfig.update_traces(textposition='inside',\n                  textinfo='percent+label',\n                  marker=dict(line=dict(color='#000000', width = 1.5)))\n\nfig.update_layout(title_x=0.5,\n                  title_font=dict(size=20),\n                  uniformtext_minsize=15)\n\nfig.show()","4019f26c":"<a id=\"2\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83c\udfb0 Load the dataset<\/p>","fe403113":"<a id=\"8\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\ude82Features Engineering<\/p>","7741e97c":"<a id=\"5\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udcc8 Statistical information of Dataframe <\/p>","f57704dd":"<b> No highly correlated independent features or no multicolinarity problems \ud83d\ude0e","4baf612c":"<a id=\"1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83c\udfb0 Importing Libraries<\/p>","caf3e130":"<a id=\"8.2\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\ude82Change  bmi to category<\/p>","7eb05837":"we got some female smoker and male smoker but also we realized that most of the female are non smoker compare to male ","d0033f7c":"<a id=\"4\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\uded2Missing values <\/p>","2a3ec693":"![healthcare_costs.jpg](attachment:healthcare_costs.jpg)","3c11cc7b":"<a id=\"4.1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83e\udd3c\u200d\u2640\ufe0fDuplicated rows <\/p>","6b6693a2":"<b>\ud83d\ude4b\u200d\u2642\ufe0f\ud83d\ude4b\u200d\u2640\ufe0f Hi all !!! we are going to work with insurance cost prediction dataset,If you like this notebook then plz consider a upvote for me and if don't plz drop your advise or comment so that i improve my skill \ud83d\ude0e\ud83d\ude0e","31042de6":"all the columns are scalled ","b8b96efb":" # [Back to Contents or Top\ud83c\udfaf\ud83c\udfaf](#100)","e07df1a1":"<a id=\"8\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83e\udd16 Create & Train Model<\/p>","139a8ee7":"<a id=\"\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83c\udf08Thank you \ud83c\udf83 Happy kaggling\ud83d\udc45<\/p>","079f6321":"<a id=\"\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\"> \ud83d\udea2Data Story<\/p>","48e9437d":"<a id=\"10\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udcca Visualize Model Score<\/p>","0afba4e4":"<a id=\"7\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83d\udd25 EDA & Visualization<\/p>","ec335980":"<a id=\"100\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83d\udccb TABLE OF CONTENTS<\/p>","b7496613":"all is well ,no outlier is detected","6209ab44":"<a id=\"8.4\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83d\udc31\u200d\ud83c\udfcdEncoding and scaling<\/p>","9779070a":"<b>No missing or Nan values found , great \ud83d\ude01","b210570b":"# Data attributes:\n\n1. age: age of primary beneficiary.\n\n2. sex: insurance contractor gender, female, male.\n\n3. bmi: Body mass index, providing an understanding of body, weights that are relatively high or low relative to height,\nobjective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9.\n\n4. children: Number of children covered by health insurance \/ Number of dependents.\n\n5. smoker: Smoking.\n\n6. region: the beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n\n7. charges: Individual medical costs billed by health insurance.","59503fa5":"<a id=\"8.1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\ude82Outliers detection<\/p>","7ccaf06c":"* [1. Importing Libraries](#1)\n\n* [2. Load the data](#2)\n    \n* [3. Meta information of dataframe](#3)\n    \n* [4.Missing values.](#4)\n\n* [3.1 Duplicated rows.](#4.1)\n    \n* [4.Statistical information of Dataframe](#5) \n\n* [5.Visualize correlation of independent features and check multicolinarity problems](#6)\n    \n* [6. EDA & Visualization](#7)\n    \n* [7. \ud83c\udfcdFeature Engineering](#8)\n\n    * [7.1.\ud83c\udfcdoutliers detection](#8.1)\n    \n    * [7.2.\ud83c\udfcdChange BMI to category](#8.2)\n    \n    * [7.3.\ud83c\udfcdTrain test split](#8.3)\n       \n    * [7.4.Encoding and Scaling Features](#8.4)\n       \n    \n\n* [8. Create & Train Model](#8)\n\n* [9. Models Score](#9)\n\n* [10. Visualize Models Score](#10)\n\n\n\n\n","cb26155c":"<a id=\"3\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udcdd Meta information \n    about Dataframe<\/p>","3e49b0ce":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n          text-align: center; font-size:250%;border-radius:20px 80px;\">Insurance Cost Prediction<\/p>","cb9111c8":"<b> Oh no , 1 duplicated rows found \ud83e\udd75,let's remove it \ud83d\ude19","f4250a4b":"<b>oho,some outlier is found in bmi col.","9cc3fbd5":"<a id=\"8.3\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83d\udc31\u200d\ud83c\udfcdTrain test split<\/p>","a47b080f":"<b>the outliers are removed ,great!!!!!!","f809f8a3":"<a id=\"9\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83e\uddee Models Score<\/p>","3f0a8624":"<a id=\"6\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:red;color: Black;font-weight: bold;\n              text-align: center; font-size:150%;border-radius:20px 80px;\">\ud83c\udfb0 Visualize correlation of independent features and check multicolinarity problems <\/p>"}}