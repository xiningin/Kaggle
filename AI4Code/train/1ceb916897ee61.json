{"cell_type":{"45039afb":"code","0ffa7ada":"code","feae274b":"code","66c33ccd":"code","a2a15363":"code","1980f264":"code","e1d98842":"code","a2eb20d5":"markdown","e8402417":"markdown","651e7f99":"markdown","d5d7fb3d":"markdown","5fcbd117":"markdown","006a5358":"markdown"},"source":{"45039afb":"!pip install fuggle>=0.0.9","0ffa7ada":"from fuggle import setup, Plot, PlotBar, PlotBarH, PlotLine\nsetup(\"native\", {\"fuggle.sqlite.path\":\"\/kaggle\/input\/california-traffic-collision-data-from-switrs\"})","feae274b":"%%fsql\nSELECT parties, COUNT(*) AS ct FROM (\n    SELECT case_id, MAX(party_number) AS parties \n        FROM switrs.sqlite.parties \n        GROUP BY case_id\n) GROUP BY parties\nOUTPUT USING PlotBar(x=\"parties\", order_by=[\"parties\"], title=\"Case Parties Count\", logy=true)","66c33ccd":"%%fsql\nSELECT party_age, COUNT(*) AS ct \n    FROM switrs.sqlite.parties \n    WHERE at_fault\n    GROUP BY party_age\nOUTPUT USING PlotBar(x=\"party_age\", order_by=[\"party_age\"], title=\"At-fault Age\")\n\nSELECT party_age,\n    SUM(CASE WHEN party_sex=\"male\" THEN 1 ELSE 0 END) AS male,\n    SUM(CASE WHEN party_sex=\"male\" THEN 0 ELSE 1 END) AS female\n    FROM switrs.sqlite.parties \n    WHERE at_fault AND party_sex IN ('male', 'female')\n    GROUP BY party_age\nOUTPUT USING PlotLine(x=\"party_age\", order_by=[\"party_age\"], title=\"At-fault Age & Sex\")","a2a15363":"%%fsql\nSELECT victim_degree_of_injury, COUNT(*) AS ct \n    FROM switrs.sqlite.victims\n    GROUP BY victim_degree_of_injury\n    ORDER BY ct DESC\nPRINT ROWS 100\n\nSELECT CASE \n        WHEN victim_degree_of_injury='no injury' THEN 0.0\n        WHEN victim_degree_of_injury='complaint of pain' THEN 1.0\n        WHEN victim_degree_of_injury='7' THEN 1.0 \/\/ possible injury\n        WHEN victim_degree_of_injury='other visible injury' THEN 2.0\n        WHEN victim_degree_of_injury='6' THEN 2.0 \/\/ Suspected Minor Injury\n        WHEN victim_degree_of_injury='5' THEN 3.0 \/\/ Suspected Serious Injury\n        WHEN victim_degree_of_injury='severe injury' THEN 3.0\n        WHEN victim_degree_of_injury='killed' THEN 4.0\n        ELSE 0.0 END AS degree, COUNT(*) AS ct \n    FROM switrs.sqlite.victims\n    GROUP BY 1\n    ORDER BY ct DESC\nOUTPUT USING PlotBar(x=\"degree\", order_by=\"ct desc\", title=\"Counts over Redefined Injury Degree\")","1980f264":"%%fsql\nSELECT victim_seating_position, COUNT(*) AS ct \n    FROM switrs.sqlite.victims \n    GROUP BY victim_seating_position\nOUTPUT USING PlotBar(x=\"victim_seating_position\", order_by=\"ct desc\", title=\"Victim Seating Position Counts\")\n\nSELECT victim_seating_position, AVG(degree) AS injury_degree \n    FROM (\n        SELECT *, CASE \n            WHEN victim_degree_of_injury='no injury' THEN 0.0\n            WHEN victim_degree_of_injury='complaint of pain' THEN 1.0\n            WHEN victim_degree_of_injury='7' THEN 1.0 \/\/ possible injury\n            WHEN victim_degree_of_injury='other visible injury' THEN 2.0\n            WHEN victim_degree_of_injury='6' THEN 2.0 \/\/ Suspected Minor Injury\n            WHEN victim_degree_of_injury='5' THEN 3.0 \/\/ Suspected Serious Injury\n            WHEN victim_degree_of_injury='severe injury' THEN 3.0\n            WHEN victim_degree_of_injury='killed' THEN 4.0\n            ELSE 0.0 END AS degree\n        FROM switrs.sqlite.victims\n    )\n    WHERE victim_seating_position BETWEEN '0' AND '9'\n    GROUP BY victim_seating_position\nOUTPUT USING PlotBar(x=\"victim_seating_position\", order_by=\"injury_degree desc\", title=\"Injury Degree vs Seating Positions\")\n\nSELECT victim_age,\n    AVG(CASE WHEN victim_sex=\"male\" THEN degree ELSE NULL END) AS male,\n    AVG(CASE WHEN victim_sex=\"male\" THEN NULL ELSE degree END) AS female\n    FROM (\n        SELECT *, CASE \n            WHEN victim_degree_of_injury='no injury' THEN 0.0\n            WHEN victim_degree_of_injury='complaint of pain' THEN 1.0\n            WHEN victim_degree_of_injury='7' THEN 1.0 \/\/ possible injury\n            WHEN victim_degree_of_injury='other visible injury' THEN 2.0\n            WHEN victim_degree_of_injury='6' THEN 2.0 \/\/ Suspected Minor Injury\n            WHEN victim_degree_of_injury='5' THEN 3.0 \/\/ Suspected Serious Injury\n            WHEN victim_degree_of_injury='severe injury' THEN 3.0\n            WHEN victim_degree_of_injury='killed' THEN 4.0\n            ELSE 0.0 END AS degree\n        FROM switrs.sqlite.victims\n    )\n    WHERE victim_sex IN ('male', 'female') AND victim_age<100\n    GROUP BY victim_age\nOUTPUT USING PlotLine(x=\"victim_age\", order_by=[\"victim_age\"], title=\"Injury Degree vs Age & Sex\")","e1d98842":"%%fsql\nratio = \n    SELECT \n        CASE WHEN vehicle_make='CHEV' THEN 'CHEVROLET' \n             WHEN vehicle_make='TOYO' THEN 'TOYOTA' \n             WHEN vehicle_make='TOYT' THEN 'TOYOTA' \n             WHEN vehicle_make='NISS' THEN 'NISSAN' \n             WHEN vehicle_make='HOND' THEN 'HONDA' \n             ELSE vehicle_make END AS vehicle_make,\n        SUM(CASE WHEN at_fault THEN 1.0 ELSE 0.0 END)\/COUNT(*) AS ratio\n    FROM switrs.sqlite.parties \n    WHERE vehicle_make IS NOT NULL\n    GROUP BY 1\n    \ninjury = \n    SELECT \n        CASE WHEN vehicle_make='CHEV' THEN 'CHEVROLET' \n             WHEN vehicle_make='TOYO' THEN 'TOYOTA' \n             WHEN vehicle_make='TOYT' THEN 'TOYOTA' \n             WHEN vehicle_make='NISS' THEN 'NISSAN' \n             WHEN vehicle_make='HOND' THEN 'HONDA' \n             ELSE vehicle_make END AS vehicle_make,\n        AVG(degree) AS injury_degree,\n        AVG(CASE WHEN at_fault THEN degree ELSE NULL END) AS at_fault_injury_degree,\n        AVG(CASE WHEN NOT at_fault THEN degree ELSE NULL END) AS not_at_fault_injury_degree\n    FROM (\n            SELECT *, CASE \n                WHEN victim_degree_of_injury='no injury' THEN 0.0\n                WHEN victim_degree_of_injury='complaint of pain' THEN 1.0\n                WHEN victim_degree_of_injury='7' THEN 1.0 \/\/ possible injury\n                WHEN victim_degree_of_injury='other visible injury' THEN 2.0\n                WHEN victim_degree_of_injury='6' THEN 2.0 \/\/ Suspected Minor Injury\n                WHEN victim_degree_of_injury='5' THEN 3.0 \/\/ Suspected Serious Injury\n                WHEN victim_degree_of_injury='severe injury' THEN 3.0\n                WHEN victim_degree_of_injury='killed' THEN 4.0\n                ELSE 0.0 END AS degree\n            FROM switrs.sqlite.victims\n        ) AS a \n        INNER JOIN switrs.sqlite.parties AS b \n        ON a.case_id = b.case_id AND a.party_number = b.party_number\n    WHERE vehicle_make IS NOT NULL\n    GROUP BY 1\n    \npopular = \n    SELECT \n        CASE WHEN vehicle_make='CHEV' THEN 'CHEVROLET' \n             WHEN vehicle_make='TOYO' THEN 'TOYOTA' \n             WHEN vehicle_make='TOYT' THEN 'TOYOTA' \n             WHEN vehicle_make='NISS' THEN 'NISSAN' \n             WHEN vehicle_make='HOND' THEN 'HONDA' \n             ELSE vehicle_make END AS vehicle_make,\n        COUNT(*) AS popular \n    FROM switrs.sqlite.parties \n    WHERE vehicle_make IS NOT NULL\n    GROUP BY 1\n    ORDER BY popular DESC LIMIT 30\n    \nSELECT * FROM ratio LEFT SEMI JOIN popular ON ratio.vehicle_make = popular.vehicle_make\nOUTPUT USING PlotBar(x=\"vehicle_make\", order_by=\"ratio desc\", title=\"Most Popular Cars At-fault Ratio\")\n\nSELECT * FROM injury LEFT SEMI JOIN popular ON injury.vehicle_make = popular.vehicle_make\nOUTPUT USING PlotBar(x=\"vehicle_make\", order_by=\"injury_degree desc\", title=\"Most Popular Cars Average Injury Degree in Accidents\")","a2eb20d5":"# California Traffic Collisions EDA using Fugue SQL (part 1)\n\nFind more information about Fugue SQL [here](https:\/\/fugue-tutorials.readthedocs.io\/en\/latest\/tutorials\/sql.html)\n\nIt's super fun to explore this dataset, there is a lot of information to explore. In this notebook, we focus on exploring the table `parties` and `victims`. And you will only see SQL here, it's expressive and powerful.\n\n## Setup\n\nInstall [fuggle](https:\/\/github.com\/fugue-project\/fuggle) and set pandas(native) as the backend. We can also use Spark as the backend, but for this notebook, it's not necessary, we heavily rely on sqlite to process the SQL statements.","e8402417":"### What cars are causing accidents? What cars are safer in accidents?\n\n* Lexus has the lowest at-fault ratio, does it mean people who choose Lexus are more cautious or Lexus is safer to drive?\n* when you are at fault, the degree of injury is generally but slightly higher","651e7f99":"### What determines injury degree?\n\n[This](https:\/\/tims.berkeley.edu\/help\/SWITRS.php#Victim_Level) explains the seating position codes and degree of injury. (Thanks Alex Gude!)\n\nThe injury degree needs to be redefined, and the value should reflect the severity. The raw value is a mix of string and numbers, we need to map them from `0` to `4` based on severity.\n\n","d5d7fb3d":"Also, as seen from the first chart in the following, the most common seating positions are from `0` to `9`, so we will only consider them. Here are some interesting findings:\n\n* position `1` (driver) has significantly higher average degree of injury compared to other seating positions\n* position `3` is easy to be injured, but way less severe than driver position\n* female's average degree of injury is lower than male's","5fcbd117":"### Compute the at-fault count based on age and sex\n\nFrom the charts we can see\n* age 17-20 have the highest at-fault count, they are mostly new drivers\n* female at-fault count is significantly lower than male at every age","006a5358":"## EDA\n\n### Stats on number of parties involved in accidents"}}