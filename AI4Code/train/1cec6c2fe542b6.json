{"cell_type":{"460c2d3f":"code","226aa23c":"code","4f7dd005":"code","e8a85a3c":"code","46ead69d":"code","10b1a4a4":"code","2646d6ea":"code","8f5404cf":"code","58ec9416":"code","ee9b757a":"code","fd5b0a06":"code","750144de":"markdown","4a1ebc79":"markdown","f87e786f":"markdown","e89e37fc":"markdown","d6130d39":"markdown","a03373ee":"markdown"},"source":{"460c2d3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","226aa23c":"train_df = pd.read_csv('\/kaggle\/input\/1056lab-import-car-insurance-prediction\/train.csv', index_col=0)\ntest_df = pd.read_csv('\/kaggle\/input\/1056lab-import-car-insurance-prediction\/test.csv', index_col=0)","4f7dd005":"train_df","e8a85a3c":"test_df","46ead69d":"train_df.dtypes","10b1a4a4":"test_df.dtypes","2646d6ea":"numeric_columns = ['wheel-base', 'length', 'width', 'height', 'curb-weight', 'engine-size', 'compression-ratio', 'city-mpg', 'highway-mpg']\n\nX_train = train_df[numeric_columns].to_numpy()\ny_train = train_df['symboling'].to_numpy()\nX_test = test_df[numeric_columns].to_numpy()","8f5404cf":"from sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)","58ec9416":"p_test = model.predict(X_test)","ee9b757a":"submit_df = pd.read_csv('\/kaggle\/input\/1056lab-import-car-insurance-prediction\/sampleSubmission.csv', index_col=0)\nsubmit_df['symboling'] = p_test\nsubmit_df","fd5b0a06":"submit_df.to_csv('submission.csv')","750144de":"# Making a submission file","4a1ebc79":"# DataFrame","f87e786f":"# Column types\nIf it is `object`, then it may contains some missing values.","e89e37fc":"# Predicting","d6130d39":"# Selecting features and converting to NumPy\nI only use the numeric features, that does not include missing values.","a03373ee":"# Linear Regression"}}