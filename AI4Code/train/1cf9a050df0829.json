{"cell_type":{"83182e76":"code","b9015f6e":"code","93260923":"code","ea0ff64c":"code","b702b83b":"code","10e47d7e":"code","3ced2bbc":"code","0c7c28d1":"code","34c94482":"code","c0592192":"code","dcb52f2d":"code","18510fe2":"code","a0ee7ec8":"code","bbbcd978":"code","2145b01d":"code","4b173634":"code","24c00b5d":"code","94bd92bf":"code","3e636008":"code","ac42a059":"code","4dfd5925":"code","a5589490":"code","70e49793":"code","ecc5b952":"code","45754b2c":"markdown","a4b07e30":"markdown","55568653":"markdown","65411113":"markdown","3f4730b3":"markdown","293614a8":"markdown","c9891c28":"markdown","7a3bb4a8":"markdown","e784b2b4":"markdown","c91bd7d7":"markdown","0330cebc":"markdown","c14f61d8":"markdown","8c61e3e5":"markdown","5bf7c730":"markdown","b9b837d1":"markdown","66e1c602":"markdown","a9343e48":"markdown"},"source":{"83182e76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b9015f6e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.decomposition import NMF\nfrom sklearn.preprocessing import Normalizer, MaxAbsScaler\nfrom sklearn.pipeline import make_pipeline\nfrom scipy.sparse import csr_matrix\nimport scipy.sparse as sp\nfrom itertools import islice, cycle\nfrom more_itertools import pairwise\nfrom tqdm.auto import tqdm\nimport os\nfrom lightfm.data import Dataset\nfrom lightfm import LightFM\nfrom collections import Counter\nfrom scipy.stats import pearsonr\nos.environ['OPENBLAS_NUM_THREADS'] = '1'\nos.environ['MKL_NUM_THREADS'] = '1'\npd.options.mode.chained_assignment = None  # default='warn'","93260923":"class PopularRecommender():\n    def __init__(self, max_K=100, days=30, item_column='item_id', dt_column='date'):\n        self.max_K = max_K\n        self.days = days\n        self.item_column = item_column\n        self.dt_column = dt_column\n        self.recommendations = []\n        \n    def fit(self, df):\n        min_date = df[self.dt_column].max().normalize() - pd.DateOffset(days=self.days)\n        self.recommendations = df.loc[df[self.dt_column] > min_date, self.item_column].value_counts().head(self.max_K).index.values\n    \n    def recommend(self, users=None, N=10):\n        recs = self.recommendations[:N]\n        if users is None:\n            return recs\n        else:\n            return list(islice(cycle([recs]), len(users)))","ea0ff64c":"def less_books(genres):\n    if len(genres) <= 1:\n        return ''.join(genres)\n    for k in range(1, len(list_of_genres)):\n        small_list = [i for i in genres.split(',') if i in list_of_genres[:k]]\n        if len(small_list) > 0:\n            return ''.join(small_list)","b702b83b":"def count_same_genre(df, user):\n    return (df[df.user_id == user].less_genres.values[-1] == df[df.user_id == user].less_genres.values[-2]) & (df[df.user_id == user].less_genres.values[-1] == df[df.user_id == user].less_genres.values[-3])","10e47d7e":"def count_same_author_2(df, user):\n    return df[df.user_id == user].authors.values[-1] == df[df.user_id == user].authors.values[-2]","3ced2bbc":"def cutting(word):\n    if len(str(word)) > 4:\n        return str(word)[:4]\n    else:\n        word = str(word)\n        word = word.replace(\"-\",\"\")\n        word = word.replace(\".\",\"\")\n        word = word.replace(\" \",\"\")\n        word = word.replace(\"\u0432\",\"\")\n        word = word.replace(\"\u0434\u043e\",\"\")\n        return str(word)","0c7c28d1":"def authors_recomendations(users, df):\n    recs = []\n    for user in users:\n        books = pd.DataFrame(df[(df.authors.isin(df_users_authors.loc[user]['authors']))\n                                    & (df.start_date > \"2019-11-30\")].item_id.value_counts()[:20])\n        old_books = pd.Series(df[df.user_id==user].item_id.unique())\n        rec = np.array(books[~books.index.isin(old_books.values)].index)[:10]\n        recs.append(rec)\n    return recs\n\ndef genres_recomendations(users, df):\n    recs = []\n    for user in users:\n        genre = df_good_read_genres[df_good_read_genres.user_id==user]['best_genre'].values\n        books = pd.DataFrame(df[(df.less_genres.isin(genre))\n                                    & (df.start_date > \"2019-11-30\")].item_id.value_counts()[:20])\n        old_books = pd.Series(df[df.user_id==user].item_id.unique())\n        rec = np.array(books[~books.index.isin(old_books.values)].index)[:10]\n        recs.append(rec)\n    return recs\n\ndef manual_len(x):\n    return len([i for i in x]) \n\ndef array_sum(ar_1, ar_2):\n    return np.append(ar_1, ar_2)[:10]","34c94482":"def make_submission(df, id_col='user_id', predicted_col='item_id'):\n    \n    df_copy = df.copy()\n    df_copy.loc[:, id_col] = df_copy[id_col].astype(str)\n    df_copy.loc[:, predicted_col] = df_copy[predicted_col].astype(str)\n    df_copy = df_copy.groupby(id_col, as_index=False).agg({predicted_col: lambda x: ' '.join(list(x))})\n    df_copy.rename(columns={id_col: 'Id', predicted_col: 'Predicted'}, inplace=True)\n    \n    return df_copy[['Id', 'Predicted']]","c0592192":"df_items = pd.read_csv(\"..\/input\/mts-ml-summer-school\/items.csv\")\ndf_users = pd.read_csv(\"..\/input\/mts-ml-summer-school\/users.csv\")\ndf_interactions = pd.read_csv(\"..\/input\/mts-ml-summer-school\/interactions.csv\")\ndf_sample = pd.read_csv(\"..\/input\/mts-ml-summer-school\/sample_submission.csv\")","dcb52f2d":"# choose items with good years (digit) and bad ones \ndf_items_with_years = df_items[df_items.year.str.isdigit() == True]\ndf_items_without_years = df_items[df_items.year.str.isdigit() != True]\n\n# change dtype and take a median for each author\ndf_items_with_years['year'] = df_items_with_years['year'].astype('int64')\nyears_dict = df_items_with_years.groupby('authors')['year'].median()\n\n# use this data for replacing values in the bad part and then fillna\nfor author, year in years_dict.items():\n    df_items_without_years.loc[df_items_without_years['authors'].isin([author]), 'year'] = int(year)\ndf_items_without_years.year = df_items_without_years.year.fillna(0)\n\n# concatenate parts\ndf_items = pd.concat([df_items_with_years, df_items_without_years])\n\n# use it    \ndf_items.year = df_items.year.agg(cutting)","18510fe2":"# genres to category\ndf_items['genres'] = df_items['genres'].astype('category')\n# dictionary with genres\ngenres_dict = dict(df_items['genres'].str.split(',').explode().value_counts())\n# list of genres sorted by popularity\nlist_of_genres = [*genres_dict.keys()]\ndf_items['less_genres'] = df_items.genres.agg(less_books)\n# get mean rating for each book\nmean_item_rate = df_interactions.groupby('item_id')['rating'].mean()\nmean_item_rate = round(mean_item_rate)\n# add it to items\ndf_items = df_items.merge(pd.DataFrame(mean_item_rate), how='left', left_on='id', right_on='item_id')\ndf_items['less_genres'] = df_items['less_genres'].astype('category')","a0ee7ec8":"df_items.head()","bbbcd978":"df_items.id = df_items.id.astype('str')\ndf_users.user_id = df_users.user_id.astype('str')\ndf_interactions.user_id = df_interactions.user_id.astype('str')\ndf_interactions.item_id = df_interactions.item_id.astype('str')\ndf_sample.Id = df_sample.Id.astype('str')\n\ndf_interactions['start_date'] = pd.to_datetime(df_interactions['start_date'])\n\ntrain = df_interactions.merge(df_items, how='left', left_on='item_id', right_on='id')\ntrain = train.merge(df_users, how='left', on='user_id')","2145b01d":"df_train = train\ndf_test = train[train.user_id.isin(df_sample.Id.unique())]\n\nprint('train and test parts are ready')\n\n\"\"\"\nCommon readers\n\"\"\"    \n\nuser_count = df_test.groupby('user_id')['item_id'].count()\n\ncommon_ind_1 = user_count[user_count < 9].index\ndf_test_gr = df_test[~df_test.user_id.isin(common_ind_1)]\ndf_good_read_genres = pd.DataFrame(df_test.groupby('user_id')['less_genres'].apply(list))\ndf_good_read_genres = df_good_read_genres.reset_index()\ndf_good_read_genres = df_good_read_genres[~df_good_read_genres.user_id.isin(common_ind_1)]\ndef top_genres(genres):\n    c = Counter(genres)\n    top = c.most_common(1)\n    return list(top)[0][0]\ndf_good_read_genres[\"best_genre\"] = df_good_read_genres.less_genres.apply(top_genres)\ndef top_genres(genres):\n    c = Counter(genres)\n    top = c.most_common(1)\n    return list(top)[0][1]\ndf_good_read_genres[\"top_genres\"] = df_good_read_genres.less_genres.apply(top_genres)\ndf_good_read_genres[\"len_genres\"] = df_good_read_genres.less_genres.apply(len)\nusers_with_many_genres = np.array(df_good_read_genres[~(df_good_read_genres.top_genres*5 > df_good_read_genres.len_genres)].user_id)\ndf_many = df_test[df_test.user_id.isin(users_with_many_genres)]\nmany_genres_count = df_many.groupby('user_id')['item_id'].count()\ncommon_ind_2 = many_genres_count[(many_genres_count > 10) & (many_genres_count != 0)].index\ncommon_ind = np.append(np.array(common_ind_1), np.array(common_ind_2))\n\n#print('common readers are ready')\n\n\"\"\"\nClassic readers\n\"\"\"\n\ndf_test_not_common = df_test[~df_test.user_id.isin(common_ind)]\ndf_test_not_common['digit_year'] = df_test_not_common.year.apply(str.isdigit)\nnon_digit_index = df_test_not_common.loc[((df_test_not_common.digit_year == False) == True)].index\ndf_test_not_common = df_test_not_common.drop(non_digit_index)\ndf_test_not_common.year = df_test_not_common.year.astype('int64')\ndf_test_not_common = df_test_not_common[~(df_test_not_common.year == 0) | (df_test_not_common.year > 2021)]\nusers_years = df_test_not_common.groupby('user_id')['year'].median()\nclassic_ind = np.array(users_years[(users_years.notna()) & (users_years < 1937)].index)\n\n#print('classic readers are ready')\n\n\"\"\"\nAuthors readers\n\"\"\"\n\ndf_test_not_cc = df_test_not_common[~df_test_not_common.user_id.isin(classic_ind)]\ndf_for_authors = df_test_not_cc.copy()\ndf_for_authors = df_for_authors.dropna(subset = ['authors'])\ndf_users_authors = pd.DataFrame(df_for_authors.groupby('user_id')['authors'].apply(list))\ndf_users_authors['authors_count'] = df_users_authors.authors.agg(len)\nauthors_ind = np.array(df_users_authors[(df_users_authors.authors_count > 0) & (df_users_authors.authors_count < 10)].index)\n\n#print('authors readers are ready')\n\n\"\"\"\nGenre readers\n\"\"\"\n\ndf_test_genr = df_test_not_cc[~df_test_not_cc.user_id.isin(authors_ind)]\ngenres_ind = np.array(df_test_genr.user_id.unique())\n\n#print('genre readers are ready')\n\n\"\"\"\nSex of common readers\n\"\"\"\n\n\ncommon_ind_w = df_test[(df_test.sex==0.0) & (df_test.user_id.isin(common_ind))].user_id.unique()\ncommon_ind_m = df_test[(df_test.sex==1.0) & (df_test.user_id.isin(common_ind))].user_id.unique()\ncommon_ind_u = df_test[df_test.user_id.isin(np.setdiff1d(common_ind, np.append(common_ind_w, common_ind_m)))].user_id.unique()\n\n#print('sex parts are ready')\n\n\"\"\"\nCommon and classic recommendations\n\"\"\"\n\ndf_common_w = pd.DataFrame({'user_id': common_ind_w})\npop = PopularRecommender(days=26, dt_column='start_date')\npop.fit(df_train[df_train.sex==0.0])\ndf_common_w['item_id'] = pop.recommend(df_common_w['user_id'], N=10)\n\ndf_common_m = pd.DataFrame({'user_id': common_ind_m})\npop = PopularRecommender(days=26, dt_column='start_date')\npop.fit(df_train[df_train.sex==1.0])\ndf_common_m['item_id'] = pop.recommend(df_common_m['user_id'], N=10)\n\ndf_common_u = pd.DataFrame({'user_id': common_ind_u})\npop = PopularRecommender(days=26, dt_column='start_date')\npop.fit(df_train[(df_train.sex!=1.0)&(df_train.sex!=0.0)])\ndf_common_u['item_id'] = pop.recommend(df_common_u['user_id'], N=10)\n\ntemp_train = df_train.copy()\ntemp_train['digit_year'] = temp_train.year.apply(str.isdigit)\ntemp_train = temp_train[~temp_train.digit_year==False]\ntemp_train.year = temp_train.year.astype('int64')\ndf_classic = pd.DataFrame({'user_id': classic_ind})\npop = PopularRecommender(days=26, dt_column='start_date')\npop.fit(temp_train[temp_train.year < 1937])\ndf_classic['item_id'] = pop.recommend(df_classic['user_id'], N=10)\n\n#print('common and classic recs are ready')\n\n\"\"\"\nAuthors and genre recommendations\n\"\"\"\n\ndf_author = pd.DataFrame({'user_id': authors_ind})\ndf_author['item_id'] = authors_recomendations(df_author['user_id'], df_train)\n\ndf_genre = pd.DataFrame({'user_id': genres_ind})\ndf_genre['item_id'] = genres_recomendations(df_genre['user_id'], df_train)\n\n#print('authors and genre recs are ready')\n\n\"\"\"\nCalculations\n\"\"\"\n\nrecs = pd.concat([df_common_w, df_common_m, df_common_u, df_classic, df_author, df_genre])\nrecs = recs.reset_index(drop=True)\nrecs['length'] = recs.item_id.agg(manual_len)\nfor ind in recs[recs['length'] != 10]['user_id'].index:\n    recs.iat[ind, 1] =  array_sum(recs.iloc[ind, 1], recs.iloc[0,1])\nrecs = recs.drop('length', axis=1)","4b173634":"user_3plus = list(set([k for k,v in dict(train[train.user_id.isin(df_test.user_id.unique())].user_id.value_counts()).items() if v > 2]))\ntrain[train.user_id.isin(user_3plus)].shape","24c00b5d":"count = 0\nlist_users = []\nfor user in user_3plus:\n    if count_same_genre(train[train.user_id.isin(user_3plus)], user):\n        count += 1\n        list_users.append(user)","94bd92bf":"count_aut_2 = 0\nlist_users_aut_2 = []\nfor user in user_3plus:\n    if count_same_author_2(train[train.user_id.isin(user_3plus)], user):\n        count_aut_2 += 1\n        list_users_aut_2.append(user)","3e636008":"recs = pd.concat([df_common_w, df_common_m, df_common_u, df_classic, df_author, df_genre])\nrecs = recs.reset_index(drop=True)\nrecs['length'] = recs.item_id.agg(manual_len)\nfor ind in recs[recs['length'] != 10]['user_id'].index:\n    recs.iat[ind, 1] =  array_sum(recs.iloc[ind, 1], recs.iloc[0,1])\nrecs = recs.drop('length', axis=1)","ac42a059":"dict_preds_genres = {}\nfor user in list_users:\n    genre = train[train.user_id == user].less_genres.values[-1]\n    if genre not in dict_preds_genres:\n        top_genre_ids = list(train[(train.start_date > '2019-10-01') &\n                                   (train.less_genres == genre)].item_id.value_counts().index)[:20]\n        dict_preds_genres[genre] = np.array(top_genre_ids)\n    pred = np.setdiff1d(dict_preds_genres[genre], train[train.user_id == user].item_id.unique())[:10]\n    row_index = recs[recs.user_id == user].index\n    recs.at[row_index, 'item_id'] = [pred]","4dfd5925":"dict_preds_aut_2 = {}\nfor user in list_users_aut_2:\n    author = train[train.user_id == user].authors.values[-1]\n    if author not in dict_preds_aut_2:\n        top_author_ids_2 = list(train[(train.start_date > '2019-10-01') &\n                                   (train.authors == author)].item_id.value_counts().index)[:20]\n        dict_preds_aut_2[author] = np.array(top_author_ids_2)\n    pred = np.setdiff1d(dict_preds_aut_2[author], train[train.user_id == user].item_id.unique())[:10]\n    row_index = recs[recs.user_id == user].index\n    recs.at[row_index, 'item_id'] = [pred]","a5589490":"recs = recs.append(pd.DataFrame([[\"10309\", recs.iloc[0,1]], ['156235', recs.iloc[0,1]]],\n                         columns=['user_id','item_id']), ignore_index=True)\nrecs = recs.explode('item_id')\nrecs['rank'] = recs.groupby('user_id').cumcount() + 1\nrecs.item_id = recs.item_id.astype('str')\nrecs.item_id = recs.item_id.apply(str.strip)\nrecs.item_id = recs.item_id.apply(str.lstrip)","70e49793":"submission = make_submission(recs)\nsubmission.to_csv('submission.csv', index=False)\nsubmission.head(5)","ecc5b952":"def add_last_books_info(df):\n    \n    df = df.sort_values('start_date')\n    \n    last_index = df.drop_duplicates(['user_id'], keep='last').index\n    not_last = np.setdiff1d(train.index, last_index)\n    df_not_last = df.loc[not_last]\n    \n    penult_index = df_not_last.drop_duplicates(['user_id'], keep='last').index\n    not_penult = np.setdiff1d(df_not_last.index, penult_index)\n    df_not_penult = df_not_last.loc[not_penult]\n    \n    bef_penult_index = df_not_penult.drop_duplicates(['user_id'], keep='last').index\n    \n    df['last_date'] = 0\n    df['penult'] = 0\n    df['bef_penult'] = 0\n    \n    df.loc[last_index, ['last_date']] = 1\n    df.loc[penult_index, ['penult']] = 1\n    df.loc[bef_penult_index, ['bef_penult']] = 1\n    \n    df_last_penult = df[(df.last_date==1) | (df.penult==1)]\n    dupl_auth_index = df_last_penult[df_last_penult.duplicated(['user_id', 'authors'], keep=False)].index\n    \n    df_last_penult_bef = df[(df.last_date==1) | (df.penult==1) | (df.bef_penult==1)]\n    users_3_genres = np.array([k for k, v in dict(df_last_penult_bef[df_last_penult_bef.duplicated(['user_id', 'less_genres'], keep=False)].user_id.value_counts()).items() if v == 3])\n    dupl_genre_index = df_last_penult_bef[df_last_penult_bef.user_id.isin(users_3_genres)].index\n    \n    df['dupl_auth'] = 0\n    df['dupl_genr'] = 0\n    df.loc[dupl_auth_index, ['dupl_auth']] = 1\n    df.loc[dupl_genre_index, ['dupl_genr']] = 1\n    \n    return df","45754b2c":"### Preparing","a4b07e30":"### Functions","55568653":"\u042f \u0440\u0435\u0448\u0438\u043b \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e \u0448\u0435\u0441\u0442\u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u0433\u0440\u0443\u043f\u043f\u0430\u043c:\n\n- \u043e\u0431\u0449\u0438\u0435 \u043c\u0443\u0436\u0447\u0438\u043d\u044b (\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u0443\u0436\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043b\u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043a\u043d\u0438\u0433, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0434\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0433\u043d\u043e\u0437);\n- \u043e\u0431\u0449\u0438\u0435 \u0436\u0435\u043d\u0449\u0438\u043d\u044b;\n- \u043e\u0431\u0449\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u0430;\n- \u043b\u044e\u0431\u0438\u0442\u0435\u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u0438\u043a\u0438 (\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0439 \u0433\u043e\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043c\u0438 \u043a\u043d\u0438\u0433 \u043c\u0435\u043d\u044c\u0448\u0435 1937);\n- \u0444\u0430\u043d\u0430\u0442\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0436\u0430\u043d\u0440\u0430 (\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043a\u043e\u0441 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043e\u0434\u043d\u043e\u0433\u043e \u0436\u0430\u043d\u0440\u0430)\n- \u0444\u0430\u043d\u0430\u0442\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0430 (\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043a\u043e\u0441 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043e\u0434\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0430)\n\n\u0414\u043b\u044f \u043f\u0435\u0440\u0432\u044b\u0445 \u0447\u0435\u0442\u044b\u0440\u0435\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u0434\u0430\u0435\u0442 \u0432\u0438\u0434\u043e\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 PopularRecommender. \u0414\u043b\u044f \u0434\u0432\u0443\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 - \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0442\u0435\u0445 \u0436\u0430\u043d\u0440\u043e\u0432 \u0438 \u0430\u0432\u0442\u043e\u0440\u043e\u0432, \u0447\u0442\u043e \u044d\u0442\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0447\u0438\u0442\u0430\u043b\u0438.","65411113":"\u0414\u043b\u044f \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 PopularRecommender \u044f \u0445\u043e\u0442\u0435\u043b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c, \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043d\u0438\u043c\u0443\u043c \u0442\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: \u0430\u0432\u0442\u043e\u0440, \u0433\u043e\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f, \u0436\u0430\u043d\u0440. \u0421 \u043f\u0435\u0440\u0432\u044b\u043c \u044f \u043e\u0441\u043e\u0431\u044b\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043d\u0435 \u0432\u0438\u0434\u0435\u043b. \u0414\u0432\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u0438 \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0438.\n\n\u0421 \u0433\u043e\u0434\u0430\u043c \u044f \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u043b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0442\u0430\u043a\u0442\u0438\u043a\u0443: \n- \u043d\u0430\u0434\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438. \u0412 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0438 df_items, \u0433\u0434\u0435 \u0433\u043e\u0434 - \u044d\u0442\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u0446\u0438\u0444\u0440, \u0432\u043e \u0432\u0442\u043e\u0440\u0443\u044e - \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435;\n- \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043c\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0439 \u0433\u043e\u0434 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0430;\n- \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u043c \u0435\u0433\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f\u043c \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0439 \u0447\u0430\u0441\u0442\u0438;\n- \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0443\u043b\u044f\u043c\u0438;\n- \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u043e\u0431\u0435 \u0447\u0430\u0441\u0442\u0438 df_items;\n- \u0447\u0438\u0441\u0442\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u043e\u0442 \u0431\u0443\u043a\u0432 \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.","3f4730b3":"### Loading","293614a8":"\u0416\u0430\u043d\u0440\u044b \u0432 \u0438\u0445 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0438\u0434\u0435 \u043c\u043d\u0435 \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u043b\u0438\u0441\u044c \u0438\u0437-\u0437\u0430 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439. \u042f \u0437\u0430\u043c\u0435\u0442\u0438\u043b, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0441\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0436\u0430\u043d\u0440, \u0442\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u043d\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0432 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438. \u0424\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u043a\u0430 \u043e\u0441\u0442\u0430\u043d\u0435\u0442\u0441\u044f \u0444\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u043a\u043e\u0439, \u0434\u0435\u0442\u0435\u043a\u0442\u0438\u0432\u044b - \u0434\u0435\u0442\u0435\u043a\u0442\u0438\u0432\u0430\u043c\u0438, \u0430 \u043b\u044e\u0431\u043e\u0432\u043d\u044b\u0439 \u0440\u043e\u043c\u0430\u043d - \u043b\u044e\u0431\u043e\u0432\u043d\u044b\u043c \u0440\u043e\u043c\u0430\u043d\u043e\u043c.\n\n\u042f \u0441\u043e\u0437\u0434\u0430\u043b \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0436\u0430\u043d\u0440\u043e\u0432: \u043e\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043a \u043d\u0430\u0438\u043c\u0435\u043d\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c. \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043b \u0435\u0433\u043e \u043a \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 'less_genres', \u0433\u0434\u0435 \u0431\u044b\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0442\u043e\u043f\u043e\u0432\u044b\u0439 \u0436\u0430\u043d\u0440.\n\n\u0415\u0449\u0435 \u044f \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043d\u0438\u0433\u0435, \u043d\u043e \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c \u043d\u0435 \u0443\u0441\u043f\u0435\u043b.","c9891c28":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0436\u0430\u043d\u0440\u043e\u0432 \u0438 \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0441\u0440\u0435\u0434\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u043a\u043d\u0438\u0433","7a3bb4a8":"### Update. \u041a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430\u0434\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u043d\u0430\u043c\u043d\u043e\u0433\u043e (!) \u0431\u044b\u0441\u0442\u0440\u0435\u0435","e784b2b4":"### Cleaning","c91bd7d7":"### Prediction","0330cebc":"\u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 id \u0432 \u0441\u0442\u0440\u043e\u043a\u0438, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0432\u0441\u0435 \u0442\u0440\u0438 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430 \u0432 \u043e\u0434\u0438\u043d.","c14f61d8":"\u0418\u043c\u0435\u043d\u043d\u043e \u044d\u0442\u043e\u0442 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u0432\u044b\u0431\u0438\u043b 0.01277.\n\n\u0410 \u0434\u0430\u043b\u044c\u0448\u0435 \u043c\u043d\u0435 \u043d\u0430\u0434\u043e \u0431\u044b\u043b\u043e \u043f\u0440\u0435\u0440\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043d\u0435\u0434\u0435\u043b\u044e. \u041a\u043e\u0433\u0434\u0430 \u044f \u0432\u0435\u0440\u043d\u0443\u043b\u0441\u044f \u0437\u0430 \u0434\u0432\u0430 \u0434\u043d\u044f \u0434\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f, \u0441\u0442\u0430\u043b\u043e \u044f\u0441\u043d\u043e, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u0434\u0430\u043b\u0435\u043a\u043e \u043d\u0435 \u0442\u0430\u043a \u0445\u043e\u0440\u043e\u0448, \u043a\u0430\u043a \u043c\u043e\u0433\u043b\u043e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f. \u0418 \u043d\u043e\u0432\u044b\u0445 \u0438\u0434\u0435\u0439 \u0442\u043e\u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u043e\u0441\u044c. \u042f \u0440\u0435\u0448\u0438\u043b, \u0447\u0442\u043e \u0431\u0443\u0434\u0443 \u043f\u043e\u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c:\n\n- \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u043c \u0438 \u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u0430\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 1 \u0438 2 \u044f\u043d\u0432\u0430\u0440\u044f (\u043d\u0435 \u0443\u0432\u0438\u0434\u0435\u043b \u043f\u043e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043c \u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u043e\u0442\u043c\u0435\u043b \u0438\u0434\u0435\u044e);\n- \u0442\u0440\u0435\u043d\u0434\u044b (\u043f\u043e\u0442\u0440\u0430\u0442\u0438\u043b \u043d\u0430 \u043d\u0438\u0445 \u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0438 \u0434\u0430\u0436\u0435 \u0432\u044b\u043b\u043e\u0436\u0438\u043b \u043d\u043e\u0443\u0442\u0431\u0443\u043a, \u043d\u043e \u0432 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 \u0441 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u043f\u043e\u043b\u0443 \u043e\u043d\u0438 \u043d\u0435 \u0434\u0430\u043b\u0438 \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u0430);\n- BM25;\n- \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043e\u0442 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0440\u0430\u043d\u0435\u0435 \u043e\u0446\u0435\u043d\u043e\u043a.\n\n\u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443 \u043c\u0435\u043d\u044f \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0431\u044b\u043b\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0440\u0438 \u0447\u0430\u0441\u0430 \u0434\u043d\u0435\u043c, \u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u043e\u0432 \u043f\u043e\u0437\u0434\u043d\u043e \u0432\u0435\u0447\u0435\u0440\u043e\u043c. \u0418 \u0437\u0434\u0435\u0441\u044c \u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043b \u0442\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 ))\n\n\u042f \u043e\u0442\u043b\u043e\u0436\u0438\u043b Implicit \u043d\u0430 \u043f\u043e\u0442\u043e\u043c. \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0431\u044b\u043b \u0443\u0432\u0435\u0440\u0435\u043d, \u0447\u0442\u043e \u0432\u0441\u0451 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f \u0432 \u0442\u0440\u0438 \u0447\u0430\u0441\u0430 \u043d\u043e\u0447\u0438 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435. \u0418 c Implicit \u043d\u0435 \u0445\u043e\u0442\u0435\u043b \u0443\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0433\u043e\u043d\u043a\u0443: \u043f\u0435\u0440\u0435\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u0438\u0441\u043a\u0443\u0441\u0438\u0438, \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0438 \u0438 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u0441\u0432\u043e\u044e \u043c\u043e\u0434\u0435\u043b\u044c.\n\n\u0410 \u0434\u043d\u0435\u043c \u044f \u0437\u0430\u043d\u0438\u043c\u0430\u043b\u0441\u044f \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430\u043c\u0438. \u0421\u043c\u043e\u0442\u0440\u0435\u043b \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438\u0437 sample \u0438 \u043f\u044b\u0442\u0430\u043b\u0441\u044f \u043f\u043e\u0439\u043c\u0430\u0442\u044c \u0433\u043b\u0430\u0437\u0430\u043c\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c. \u0421 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430\u043c\u0438 \u0431\u044b\u043b\u0430 \u0442\u043e\u0441\u043a\u0430, \u0437\u0430\u0442\u043e \u044f \u043e\u0431\u0440\u0430\u0442\u0438\u043b \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0447\u0430\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0447\u0438\u0442\u0430\u043b\u0430 \u043f\u043e\u0434\u0440\u044f\u0434 \u043a\u043d\u0438\u0433\u0438 \u043e\u0434\u043d\u0438\u0445 \u0438 \u0442\u0435\u0445 \u0430\u0432\u0442\u0440\u043e\u0432 (\u0443\u0432\u0438\u0434\u0435\u043b \u044d\u0442\u043e \u043d\u0430 \u0444\u0430\u043d\u0430\u0442\u0435 \u0417\u044b\u043a\u043e\u0432\u0430). \u042d\u0442\u043e \u0431\u044b\u043b\u043e \u043e\u0444\u0438\u0433\u0435\u043d\u043d\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e: \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043d\u0438\u0433\u0438 \u0438\u0437 \u0446\u0438\u043a\u043b\u0430, \u0432\u0440\u043e\u0434\u0435 \"\u041a\u043e\u043b\u0435\u0441\u0430 \u0412\u0440\u0435\u043c\u0435\u043d\u0438\" \u0443 \u0414\u0436\u043e\u0440\u0434\u0430\u043d\u0430 \u0438\u043b\u0438 \"\u0417\u0435\u043c\u043d\u043e\u0433\u043e \u043a\u0440\u0443\u0433\u0430\" \u0443 \u0410\u0431\u0435\u0440\u043a\u0440\u043e\u043c\u0431\u0438, \u0442\u043e \u043e\u043d \u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c \u0438\u0445 \u0447\u0438\u0442\u0430\u0442\u044c.\n\n\u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0435 \u0443 \u043c\u0435\u043d\u044f \u0443\u0436\u0435 \u0431\u044b\u043b\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e, \u043d\u043e \u043c\u0435\u043d\u0435\u0435 \u0436\u0435\u0441\u0442\u043a\u043e. \u042f \u043f\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043b \u043d\u043e\u0432\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u0435\u0433\u043e \u043a \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 PopularRecommender \u0438 \u043f\u043e\u043d\u044f\u043b, \u0447\u0442\u043e \u043e\u043d \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u043e.\n\n\u0412\u0435\u0447\u0435\u0440\u043e\u043c \u044f \u0441\u043e\u0431\u0438\u0440\u0430\u043b\u0441\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0435\u0433\u043e \u0441 Implicit \u0438 \u043c\u043e\u0435\u0439 \u0431\u0430\u0437\u043e\u0432\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e (\u0434\u043e\u043f\u0443\u0441\u043a\u0430\u043b, \u0447\u0442\u043e \u0435\u0435 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u043f\u043e\u0440\u0435\u0437\u0430\u0442\u044c). \u041d\u043e \u043a\u043e\u0433\u0434\u0430 \u0441\u0435\u043b \u0437\u0430 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u0432 22 \u0447\u0430\u0441\u0430, \u0442\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b, \u0447\u0442\u043e \u043f\u044f\u0442\u0438 \u0447\u0430\u0441\u043e\u0432 \u0437\u0430\u043f\u0430\u0441\u0430 \u0438 \u0443 \u043c\u0435\u043d\u044f \u043d\u0435\u0442. \u0410 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0430\u043f\u0434\u0435\u0439\u0442 \u0431\u044b\u043b \u0437\u0432\u0435\u0440\u0441\u043a\u0438 \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u043c... \u041c\u043d\u0435 \u043e\u0441\u0442\u0430\u0432\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0434\u0435\u044f\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0441\u0443\u043c\u0435\u044e \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u043d\u0435 \u0431\u043b\u0435\u0441\u043d\u0443\u0432 \u043a\u0440\u0438\u0432\u0438\u0437\u043d\u043e\u0439 \u0440\u0443\u043a, \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u043a \u0431\u0430\u0437\u0435","8c61e3e5":"### Libarires","5bf7c730":"#### Genres","b9b837d1":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u044e \u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b\u0432\u0435\u043b\u043e \u043c\u0435\u043d\u044f \u043d\u0435 \u043d\u0430 \u0441\u0430\u043c\u043e\u0435 \u043a\u0440\u0443\u0442\u043e\u0435 25 \u043c\u0435\u0441\u0442\u043e, \u0438 \u044f \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u044e \u043f\u043e\u0447\u0435\u043c\u0443. \u041d\u0430 \u043c\u043e\u0439 \u0432\u0437\u0433\u043b\u044f\u0434, \u0441\u0430\u043c\u0430\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f - \u044d\u0442\u043e PopularRecommender (\u0438\u043b\u0438 Trends) + BM25 + \u0438\u043d\u0434\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n\nBM25 \u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435 \u0443\u0441\u043f\u0435\u043b \u0434\u0430\u0436\u0435 \u0432 \u0431\u0430\u0437\u0435, \u0431\u0430\u043d\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u0445\u0432\u0430\u0442\u0438\u043b\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0415\u0449\u0435 \u0431\u044b \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u043e\u0432, \u0438 \u0431\u044b\u043b \u0431\u044b \u0448\u0430\u043d\u0441, \u043d\u043e \u0443\u0432\u044b... ))\n\n\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0443, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c. \u041d\u0430\u0447\u043d\u0443 \u0441 \u0442\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0440\u0435\u0448\u0435\u043d\u0438\u044f, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b \u0441\u043a\u043e\u0440 \u043d\u0430 \u043f\u0430\u0431\u043b\u0438\u043a\u0435 0.01277 \u0438 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u043e\u0435 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043e\u0435 \u043c\u0435\u0441\u0442\u043e (\u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0437\u0430 \u0434\u0435\u0432\u044f\u0442\u044c \u0434\u043d\u0435\u0439 \u0434\u043e \u043a\u043e\u043d\u0446\u0430). \u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u044d\u0442\u043e \u0431\u044b\u043b \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 47-\u0433\u043e \u043c\u0435\u0441\u0442\u0430","66e1c602":"\u041f\u0435\u0440\u0432\u044b\u0439 \u0441\u0430\u0431\u043c\u0438\u0442 \u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b \u0442\u043e\u043b\u044c\u043a\u043e \u0432 23.40. \u041d\u0438 \u043e \u043a\u0430\u043a\u043e\u043c BM25 \u0443\u0436\u0435 \u043d\u0435 \u043c\u043e\u0433\u043b\u043e \u0438\u0434\u0442\u0438 \u0438 \u0440\u0435\u0447\u0438 ((( \u0412\u0441\u0435, \u0447\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u0440\u0443\u0447\u0438\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 (\u0441 \u043a\u0430\u043a\u043e\u0439 \u0438\u043c\u0435\u043d\u043d\u043e \u0434\u0430\u0442\u044b \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0442\u043e\u043f\u044b \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0438 \u0436\u0430\u043d\u0440\u043e\u0432).\n\n\u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u044d\u0442\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0441\u043a\u043e\u0447\u0438\u0442\u044c \u043d\u0430 \u0442\u0440\u0435\u0442\u044c\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u043f\u0430\u0431\u043b\u0438\u043a\u0435, \u043d\u043e \u044f \u043f\u043e\u043d\u0438\u043c\u0430\u043b, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u043b\u0435\u0442\u0438\u0442 \u0432\u043d\u0438\u0437: \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0447\u0430\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043a\u0430\u0437\u0430\u043b\u0430\u0441\u044c \u043c\u043d\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0439, \u0430 \u0432\u043e\u0442 \u0432 \u0435\u0435 \u0431\u0430\u0437\u0435, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043d\u0430 PopularRecommender \u044f \u0441\u0438\u043b\u044c\u043d\u043e \u0441\u043e\u043c\u043d\u0435\u0432\u0430\u043b\u0441\u044f.\n\n\u0422\u0430\u043a \u043e\u043d\u043e \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c )) \u041d\u043e, \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e, \u0431\u044b\u043b\u043e \u043a\u0440\u0430\u0439\u043d\u0435 \u043a\u0440\u0443\u0442\u043e \u0438 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0430 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0447\u0430\u0441 \u0435\u0449\u0435 \u0438 \u0441 \u0445\u043e\u0440\u043e\u0448\u0435\u0439 \u0434\u043e\u043b\u0435\u0439 \u0430\u0434\u0440\u0435\u043d\u0430\u043b\u0438\u043d\u0430.\n\nPS. \u042f \u0443\u0436\u0435 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b \u043f\u0438\u0441\u0430\u0442\u044c, \u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0432\u0441\u0435 \u0435\u0449\u0435 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f. \u0421\u0435\u0439\u0447\u0430\u0441 \u043e\u043d\u0430 \u043f\u0440\u0435\u043a\u0440\u0430\u0442\u0438\u0442 \u044d\u0442\u043e \u0434\u0435\u043b\u043e, \u0438 \u044f \u0441\u0434\u0435\u043b\u0430\u044e \u043d\u043e\u0443\u0442\u0431\u0443\u043a \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u043c )","a9343e48":"#### Years"}}