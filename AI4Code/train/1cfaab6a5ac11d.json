{"cell_type":{"a5b7096c":"code","25bd58d6":"code","2d6f0037":"code","01b59ae6":"code","2f3f377b":"code","e8e5d82a":"code","9490d056":"code","c17d8c3f":"code","709cf49b":"code","82430821":"code","b0869a74":"code","d0fa0f54":"code","b4491dda":"code","14a1bf44":"code","212b5564":"code","9ee9a608":"code","8dd3854b":"code","7f73b1e7":"code","ea3f31a9":"code","193f705f":"code","f4ee7a59":"code","f62611e4":"code","64e8cb48":"code","2d5cd4cb":"code","58d9a9c1":"code","87187d55":"code","c449a6d2":"code","b82ce0d7":"code","146c61b6":"code","2ea50c27":"code","62854b59":"code","8354dd7a":"code","7dab99bc":"code","72b8359c":"code","97543709":"code","94a14bf7":"code","d7942f5c":"code","d687c846":"code","bf6f753d":"code","a937142d":"code","16c98b5f":"code","60158e9f":"code","9e598e8a":"code","09c4c93e":"code","b2c767d8":"code","affb1601":"code","3e792ed6":"code","c686a428":"code","9dae636f":"code","0af0f06c":"markdown","3175defb":"markdown","fe97a29d":"markdown","f75ca257":"markdown","f00277c1":"markdown","44bf29f6":"markdown","67b61fd2":"markdown","6a24d181":"markdown","eca9eca2":"markdown","1942c179":"markdown","a1abb1d5":"markdown","deb41d6e":"markdown","8b03b68d":"markdown","ac1b1936":"markdown","54ef9c55":"markdown","d5996fcf":"markdown","a65e2377":"markdown","41f8e9a7":"markdown","d163f304":"markdown","d86ce7cf":"markdown","38cb1c08":"markdown","9a4e522b":"markdown","7cde1e5b":"markdown","606928fd":"markdown","0be3e34a":"markdown","7c5dedb5":"markdown","4112d661":"markdown","7429fe49":"markdown","f9c29032":"markdown","c32d6fa1":"markdown","775b6d38":"markdown","6ca5e601":"markdown","ef76a0a5":"markdown","5b2a4102":"markdown","c67acf87":"markdown","5041fc1c":"markdown","bcc415ab":"markdown","d26ae684":"markdown","1e3f0a31":"markdown","53ed5162":"markdown","0da8ee64":"markdown","3f1cb880":"markdown","0a05b711":"markdown","05f9dc32":"markdown","7cfcf039":"markdown"},"source":{"a5b7096c":"from IPython.display import Image\nfrom IPython.core.display import HTML \nImage(url= \"https:\/\/www.jagranjosh.com\/imported\/images\/E\/GK\/CAUSES-AIR-POLLUTION-DELHI.png\")","25bd58d6":"!pip install pandas numpy seaborn","2d6f0037":"import numpy as np\nimport pandas as pd\nfrom math import pi\nimport seaborn as sns\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","01b59ae6":"dfstation_hour = pd.read_csv(\"\/kaggle\/input\/air-quality-data-in-india\/station_hour.csv\")\ndfcity_hour    = pd.read_csv(\"\/kaggle\/input\/air-quality-data-in-india\/city_hour.csv\")\ndfstation_day  = pd.read_csv(\"\/kaggle\/input\/air-quality-data-in-india\/station_day.csv\")\ndfcity_day     = pd.read_csv(\"\/kaggle\/input\/air-quality-data-in-india\/city_day.csv\")\ndfstations     = pd.read_csv(\"\/kaggle\/input\/air-quality-data-in-india\/stations.csv\")","2f3f377b":"print(\"List of Columns in each dataframe : \",'\\n')\nprint('dfStation_hour : ',list(dfstation_hour.columns),'\\n')\nprint(\"dfcity_hour : \",list(dfcity_hour.columns),'\\n')\nprint(\"dfstation_day : \",list(dfstation_day.columns),'\\n')\nprint(\"dfCity day : \",list(dfcity_day.columns),'\\n')\nprint(\"dfStation : \",list(dfstations.columns),'\\n')","e8e5d82a":"!pip install missingno","9490d056":"from missingno import matrix","c17d8c3f":"print('Missing Values of : dfstation_hour')\nmatrix(dfstation_hour)","709cf49b":"print('Missing Values of : dfcity_hour')\nmatrix(dfcity_hour)","82430821":"print('Missing Values of : dfstation_day') \nmatrix(dfstation_day) ","b0869a74":"print('Missing Values of : dfcity_day')    \nmatrix(dfcity_day)","d0fa0f54":"print('Missing Values of : dfstations')    \nmatrix(dfstations)    ","b4491dda":"dfstation_hour.isnull().sum()\ndfcity_hour.isnull().sum()   \ndfstation_day.isnull().sum()\ndfcity_day.isnull().sum()\ndfstations.isnull().sum()","14a1bf44":"dfstation_hour.AQI_Bucket = dfstation_hour.AQI_Bucket.fillna('Unknown')\ndfcity_hour.AQI_Bucket = dfcity_hour.AQI_Bucket.fillna('Unknown')\ndfstation_day.AQI_Bucket = dfstation_day.AQI_Bucket.fillna('Unknown') \ndfcity_day.AQI_Bucket = dfcity_day.AQI_Bucket.fillna('Unknown')","212b5564":"dfstations.Status = dfstations.Status.fillna('Unknown')","9ee9a608":"plt.figure(figsize=(10,2))\nsns.countplot(y='Status',data = dfstations,palette='viridis')\nsns.set(style=\"whitegrid\", font_scale= 1.5)","8dd3854b":"active_station = dfstations[dfstations['Status']=='Active'].sort_values(by='City')\nplt.figure(figsize=(7,17))\nsns.countplot(y='City',data = active_station,palette='viridis')\nsns.set(style=\"whitegrid\", font_scale=1.5)","7f73b1e7":"active_station['City'].value_counts().nlargest(5)","ea3f31a9":"inactive_station = dfstations[dfstations['Status']=='Inactive'].sort_values(by='City')\nplt.figure(figsize=(10,2))\nsns.countplot(y='City',data = inactive_station,palette='viridis')\nsns.set(style=\"whitegrid\", font_scale=1.5)","193f705f":"unknown_station = dfstations[dfstations['Status']=='Unknown'].sort_values(by='City')\nplt.figure(figsize=(7,20))\nsns.countplot(y='City',data = unknown_station,palette='viridis')\nsns.set(style=\"whitegrid\", font_scale=1.5)","f4ee7a59":"unknown_station['City'].value_counts().nlargest(5)","f62611e4":"print(len(dfcity_day['City'].unique()),'Cities :',dfcity_day['City'].unique())","64e8cb48":"print('Start date in Data : ',dfcity_day['Date'].min())\nprint('End Date in Data   : ',dfcity_day['Date'].max())","2d5cd4cb":"dfcity_day.shape  #No of Rows and columns\ndfcity_day.head() # First 5 Rows\ndfcity_day.describe() \ndfcity_day['City'].unique() #Get Unique Names of all cities","58d9a9c1":"dfcity_day.interpolate(limit_direction=\"both\",inplace=True)\ndfcity_day.isnull().sum()","87187d55":"plt.rcParams['figure.figsize'] = [20,7];\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndf_Ahmedabad = dfcity_day[dfcity_day['City'] == 'Ahmedabad']\ndf_Ahmedabad['Year'] = pd.DatetimeIndex(df_Ahmedabad['Date']).year\ndf_Ahmedabad['Month'] = pd.DatetimeIndex(df_Ahmedabad['Date']).month\nsns.lineplot(data = df_Ahmedabad.groupby('Year').mean().drop(['AQI','Month'],axis=1),dashes=False)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);","c449a6d2":"df_Delhi = dfcity_day[dfcity_day['City'] == 'Delhi']\ndf_Delhi['Year'] = pd.DatetimeIndex(df_Delhi['Date']).year\ndf_Delhi['Month'] = pd.DatetimeIndex(df_Delhi['Date']).month\nsns.lineplot(data = df_Delhi.groupby('Year').mean().drop(['AQI','Month','PM10'],axis=1),dashes=False)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);","b82ce0d7":"df_Mumbai = dfcity_day[dfcity_day['City'] == 'Mumbai']\ndf_Mumbai['Year'] = pd.DatetimeIndex(df_Mumbai['Date']).year\ndf_Mumbai['Month'] = pd.DatetimeIndex(df_Mumbai['Date']).month\nsns.lineplot(data = df_Mumbai.groupby('Year').mean().drop(['AQI','Month','PM10'],axis=1),dashes=False)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);","146c61b6":"df_Bengaluru = dfcity_day[dfcity_day['City'] == 'Bengaluru']\ndf_Bengaluru['Year'] = pd.DatetimeIndex(df_Bengaluru['Date']).year\ndf_Bengaluru['Month'] = pd.DatetimeIndex(df_Bengaluru['Date']).month\nsns.lineplot(data = df_Bengaluru.groupby('Year').mean().drop(['AQI','Month','PM10'],axis=1),dashes=False)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);","2ea50c27":"df_Kolkata = dfcity_day[dfcity_day['City'] == 'Kolkata']\ndf_Kolkata['Year'] = pd.DatetimeIndex(df_Kolkata['Date']).year\ndf_Kolkata['Month'] = pd.DatetimeIndex(df_Kolkata['Date']).month\nsns.lineplot(data = df_Kolkata.groupby('Year').mean().drop(['AQI','Month','PM10'],axis=1),dashes=False)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);","62854b59":"df_Chennai = dfcity_day[dfcity_day['City'] == 'Chennai']\ndf_Chennai['Year'] = pd.DatetimeIndex(df_Chennai['Date']).year\ndf_Chennai['Month'] = pd.DatetimeIndex(df_Chennai['Date']).month\nsns.lineplot(data = df_Chennai.groupby('Year').mean().drop(['AQI','Month','PM10'],axis=1),dashes=False)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);","8354dd7a":"plt.rcParams['figure.figsize'] = (12, 20);\nsns.set(palette='hls')\nsns.set_context(\"notebook\", font_scale=2, rc={\"lines.linewidth\": 3})\n\ndfcity_day['Month'] = pd.DatetimeIndex(dfcity_day['Date']).month\ndf_city_month_pivot_table = dfcity_day.fillna(0).sort_values(by=['City'], ascending=False) \\\n                                .pivot_table(values='CO', index='City', columns='Month', aggfunc=np.mean).fillna(0)\ndf_city_month_pivot_table = df_city_month_pivot_table.apply(lambda x: x*100\/sum(x), axis=1)\n\ndf_city_month_pivot_table.rename(columns={1:'Jan' ,2:'Feb' ,3:'Mar' ,4:'Apr' ,5:'May' ,6:'Jun',7:'Jul' ,8:'Aug' ,9:'Sep' ,10:'Oct' ,11:'Nov' ,12:'Dec'},inplace = True)\n\nax = df_city_month_pivot_table.plot(kind='barh', stacked=True, title='CO levels across Cities and Months')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Months');\nax.set_xlabel('CO levels across 12 months');","7dab99bc":"plt.rcParams['figure.figsize'] = (12, 20);\nsns.set(palette='Paired')\nsns.set_context(\"notebook\", font_scale=2, rc={\"lines.linewidth\": 3})\n\ndfcity_day['Month'] = pd.DatetimeIndex(dfcity_day['Date']).month\ndf_city_month_pivot_table = dfcity_day.fillna(0).sort_values(by=['City'], ascending=False) \\\n                                .pivot_table(values='PM2.5', index='City', columns='Month', aggfunc=np.mean).fillna(0)\ndf_city_month_pivot_table = df_city_month_pivot_table.apply(lambda x: x*100\/sum(x), axis=1)\n\ndf_city_month_pivot_table.rename(columns={1:'Jan' ,2:'Feb' ,3:'Mar' ,4:'Apr' ,5:'May' ,6:'Jun',7:'Jul' ,8:'Aug' ,9:'Sep' ,10:'Oct' ,11:'Nov' ,12:'Dec'},inplace = True)\n\nax = df_city_month_pivot_table.plot(kind='barh', stacked=True, title='PM2.5 levels across Cities and Months',grid=True)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Months');\nax.set_xlabel('PM2.5 levels across 12 months');","72b8359c":"df_city_month_pivot_table = dfcity_day.fillna(0).sort_values(by=['AQI', 'AQI_Bucket'], ascending=False).pivot_table(values='AQI', index='City', columns='AQI_Bucket', aggfunc=np.mean).fillna(0)\nplt.rcParams['figure.figsize'] = (12, 20)\nax = df_city_month_pivot_table.apply(lambda x: x*100\/sum(x), axis=1).plot(kind='barh', stacked=True, title='AQI Bucket By Cities')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Cities');\nax.set_xlabel('AQI Bucket');","97543709":"def AQ_acceptability(aqi_bucket):\n    results = []\n    for each_aqi_bucket in aqi_bucket.values:\n        result = \"Acceptable\" if each_aqi_bucket in [\"Good\", \"Satisfactory\"] else \"Unacceptable\"\n        results.append(result)\n    return results\n\ndfcity_day['AQ_acceptability'] = AQ_acceptability(dfcity_day['AQI_Bucket'])","94a14bf7":"df_city_month_pivot_table = dfcity_day.fillna(0).sort_values(by=['AQI', 'AQ_acceptability'], ascending=False).pivot_table(values='AQI', index='City', columns='AQ_acceptability', aggfunc=np.mean).fillna(0)\nplt.rcParams['figure.figsize'] = (12, 20)\nax = df_city_month_pivot_table.apply(lambda x: x*100\/sum(x), axis=1).plot(kind='barh', stacked=True, title='AQ Acceptability and Cities: listed by Acceptable AQ',colormap='bwr')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Cities');\nax.set_xlabel('AQ Acceptabilit');","d7942f5c":"dfcity_day['Day'] = pd.to_datetime(dfcity_day['Date']).dt.day_name()\ncats = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']","d687c846":"plt.rcParams['figure.figsize'] = (15, 8);                                 \nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndfAhmedabad = dfcity_day[dfcity_day['City'] == 'Ahmedabad']\nax = dfAhmedabad.groupby('Day').mean().reindex(cats).drop('AQI',axis=1).plot(kind = 'line',y=['CO', 'NO', 'NO2', 'NOx', 'O3', 'PM10', 'PM2.5','SO2'],title = 'Ahmedabad : Day Wise pollutant')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Ahmedabad : Day wise pollutant data');\nax.set_xlabel('Day of the Week');","bf6f753d":"plt.rcParams['figure.figsize'] = (15, 8);                                 \nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndfDelhi = dfcity_day[dfcity_day['City'] == 'Delhi']\nax = dfDelhi.groupby('Day').mean().reindex(cats).drop('AQI',axis=1).plot(kind = 'line',y=['CO', 'NO', 'NO2', 'NOx', 'O3', 'PM10', 'PM2.5','SO2'],title = 'Delhi : Day Wise pollutant')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Delhi : Day wise pollutant data');\nax.set_xlabel('Day of the Week');","a937142d":"plt.rcParams['figure.figsize'] = (15, 8);                                 \nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndfMumbai = dfcity_day[dfcity_day['City'] == 'Mumbai']\nax = dfMumbai.groupby('Day').mean().reindex(cats).drop('AQI',axis=1).plot(kind = 'line',y=['CO', 'NO', 'NO2', 'NOx', 'O3', 'PM10', 'PM2.5','SO2'],title = 'Mumbai : Day Wise pollutant')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Mumbai : Day wise pollutant data');\nax.set_xlabel('Day of the Week');","16c98b5f":"plt.rcParams['figure.figsize'] = (15, 8);                                 \nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndfBengaluru = dfcity_day[dfcity_day['City'] == 'Bengaluru']\nax = dfBengaluru.groupby('Day').mean().reindex(cats).drop('AQI',axis=1).plot(kind = 'line',y=['CO', 'NO', 'NO2', 'NOx', 'O3', 'PM10', 'PM2.5','SO2'],title = 'Bengaluru : Day Wise pollutant')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\n\nax.set_ylabel('Bengaluru : Day wise pollutant data');\nax.set_xlabel('Day of the Week');","60158e9f":"plt.rcParams['figure.figsize'] = (15, 8);                                 \nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndfKolkata = dfcity_day[dfcity_day['City'] == 'Kolkata']\nax = dfKolkata.groupby('Day').mean().reindex(cats).drop('AQI',axis=1).plot(kind = 'line',y=['CO', 'NO', 'NO2', 'NOx', 'O3', 'PM10', 'PM2.5','SO2'],title = 'Kolkata : Day Wise pollutant')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Kolkata : Day wise pollutant data');\nax.set_xlabel('Day of the Week');","9e598e8a":"plt.rcParams['figure.figsize'] = (15, 8);                                 \nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3})\n\ndfChennai = dfcity_day[dfcity_day['City'] == 'Chennai']\nax = dfChennai.groupby('Day').mean().reindex(cats).drop('AQI',axis=1).plot(kind = 'line',y=['CO', 'NO', 'NO2', 'NOx', 'O3', 'PM10', 'PM2.5','SO2'],title = 'Chennai : Day Wise pollutant')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.);\nax.set_ylabel('Chennai : Day wise pollutant data');\nax.set_xlabel('Day of the Week');","09c4c93e":"df_CO = dfcity_day.pivot(index='Date', columns='City', values='CO')\ndf_CO = df_CO.fillna(df_CO.mean())\ndfCO_Apr2020 = df_CO.loc['2020-04-01':'2020-04-30']\ndfCO_Jan2020 = df_CO.loc['2020-01-01':'2020-01-30']","b2c767d8":"sns.set(palette='Paired');\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3});\nfig, ax = plt.subplots(figsize = (15,6));\nsns.lineplot(dfCO_Apr2020.index,dfCO_Apr2020['Mumbai'],ax=ax,color='red');\nax.legend(['April 2020']);\nax.set_ylabel('April 2020',color='red')\n\nax2 = ax.twinx()\nsns.lineplot(dfCO_Jan2020.index,dfCO_Jan2020['Mumbai'],ax=ax2,color='blue');\nax2.legend(['January 2020']);\nax2.set_xticklabels(labels=range(1,31), rotation=0, ha='right');\nax2.set_ylabel('January 2020',color='blue')\n\nplt.title('Mumbai CO Data for Januray 2020 and April 2020');\n","affb1601":"sns.set(palette='Paired');\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 3});\nfig, ax = plt.subplots(figsize = (15,6));\nsns.lineplot(dfCO_Apr2020.index,dfCO_Apr2020['Kolkata'],ax=ax,color='red');\nax.set_ylabel('April 2020',color='red')\n\nax2 = ax.twinx()\nsns.lineplot(dfCO_Jan2020.index,dfCO_Jan2020['Kolkata'],ax=ax2,color='blue');\nax2.set_xticklabels(labels=range(1,31), rotation=0, ha='right');\nax2.set_ylabel('January 2020',color='blue')\n\nplt.title('Kolkata CO Data for Januray 2020 and April 2020');","3e792ed6":"df_PM25 = dfcity_day.pivot(index='Date', columns='City', values='PM2.5')\ndf_PM25 = df_PM25.fillna(df_PM25.mean())\ndfPM25_Apr2020 = df_PM25.loc['2020-04-01':'2020-04-30']\ndfPM25_Jan2020 = df_PM25.loc['2020-01-01':'2020-01-30']","c686a428":"sns.set(palette='Paired');\nsns.set_context(\"notebook\", font_scale= 1.5, rc={\"lines.linewidth\": 3});\nfig, ax = plt.subplots(figsize = (15,6));\nsns.lineplot(dfPM25_Apr2020.index,dfPM25_Apr2020['Ahmedabad'],ax=ax,color='red');\nax.set_ylabel('April 2020',color='red')\n\nax2 = ax.twinx()\nsns.lineplot(dfPM25_Jan2020.index,dfPM25_Jan2020['Ahmedabad'],ax=ax2,color='blue');\nax2.set_xticklabels(labels=range(1,31), rotation=0, ha='right');\nax2.set_ylabel('January 2020',color='blue')\n\nplt.title('Ahmedabad PM2.5 Data for Januray 2020 and April 2020');\n","9dae636f":"sns.set(palette='Paired');\nsns.set_context(\"notebook\", font_scale= 1.5, rc={\"lines.linewidth\": 3});\nfig, ax = plt.subplots(figsize = (15,6));\nsns.lineplot(dfPM25_Apr2020.index,dfPM25_Apr2020['Delhi'],ax=ax,color='red');\nax.set_ylabel('April 2020',color='red')\n\nax2 = ax.twinx()\nsns.lineplot(dfPM25_Jan2020.index,dfPM25_Jan2020['Delhi'],ax=ax2,color='blue');\nax2.set_xticklabels(labels=range(1,31), rotation=0, ha='right');\nax2.set_ylabel('January 2020',color='blue')\n\nplt.title('Delhi PM2.5 Data for Januray 2020 and April 2020');\n","0af0f06c":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n    => For all given cities, CO level in winter season ( December , January and February ) is more compare to other months data.","3175defb":"## Exploring Stations Dataset","fe97a29d":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n=> Above graph shows, data spread between Active and unknown stations.","f75ca257":"The National Air Quality Index (AQI) was launched in New Delhi on September 17, 2014, under the Swachh Bharat Abhiyan.\n\nhttps:\/\/en.wikipedia.org\/wiki\/Air_quality_index\n\n-> This dataset is taken from Kaggle with 5 csv files\nhttps:\/\/www.kaggle.com\/rohanrao\/air-quality-data-in-india\n\n1. city_day.csv\n2. city_hour.csv\n3. station_day.csv\n4. station_hour.csv\n5. stations.csv","f00277c1":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n    => For all given cities, PM2.5 level in winter season ( December , January and February ) is also more compare to other months data.","44bf29f6":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n=> Mumbai and Kolkata 'CO' Data readings for Januray 2020 and April 2020 months shows considerable reduction in values, One the major reasons could be COVID-19.  \n<r>\n=>Similarly other Cities data also can be explored.","67b61fd2":"### City Wise Yearly Average Polution data","6a24d181":"### PM2.5 levels across Cities and Months","eca9eca2":"### AQI Bucket and Cities","1942c179":"#### Chennai Day Wise Pollution ","a1abb1d5":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n=> Above Weekdays vs Weekend Pollution data graphs shows that generally pollutant readings decreases in weekend.(specially PM10)","deb41d6e":"#### COVID-19 Effect : Januray 2020 and April 2020 'PM2.5' Data Check","8b03b68d":"#### Ahmedabad Day Wise Pollution ","ac1b1936":"## Exploring City Day Dataset","54ef9c55":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n<b>   -> AQ Acceptability and cities shows that Metro(Major) cities like Delhi, Mumbai, Ahmedabad, Chennai are under Unacceptable category of Air Quality !!!  <\/b>\n<br>","d5996fcf":"### CO levels across Cities and Months","a65e2377":"### City Wise number of Unknown stations","41f8e9a7":"### Top 5 station with number of unknown stations","d163f304":"#### Mumbai Yearly Average Polution data","d86ce7cf":"### City Wise number of Active stations","38cb1c08":"## Data Preparation and Cleaning","9a4e522b":"### importing Required Libraries and jupyter settings","7cde1e5b":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n<b>   -> matrix from  missingno is the matrix visualization of missing values. !!!  <\/b>\n<br>\n<b>  -> White color shows missing values. <\/b>\n","606928fd":"### AQ Acceptability and Cities: listed by Acceptable AQ","0be3e34a":"### Weekday vs Weekend Polution","7c5dedb5":"#### Delhi Yearly Average Polution data","4112d661":"#### Bengaluru Day Wise Pollution ","7429fe49":"#### Mumbai Day Wise Pollution ","f9c29032":"### Fill Missing Data using Linear interpolation","c32d6fa1":"### Missing Values","775b6d38":"#### Kolkata  Day Wise Pollution ","6ca5e601":"# Air Quality index Data Analysis","ef76a0a5":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n=> Ahmedabad and Delhi 'PM2.5' Data readings for Januray 2020 and April 2020 months shows considerable reduction in values, One the major reasons could be COVID-19.  \n<r>\n=>Similarly other Cities data also can be explored.","5b2a4102":"#### Kolkata Yearly Average Polution data","c67acf87":"#### Ahmedabad Yearly Average Polution data","5041fc1c":"#### Bengaluru Yearly Average Polution data","bcc415ab":"### Count of types of station","d26ae684":"### City Wise number of Inactive stations","1e3f0a31":"### Filling Missing Values ( AQI_Bucket and Status Columns)","53ed5162":"#### Chennai Yearly Average Polution data","0da8ee64":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n<b>   -> DataFrame.isnull().sum() is the method to get missing values in numbers of perticular dataframe. !!!  <\/b>\n<br>","3f1cb880":"### Top 5 station with number of Active stations","0a05b711":"#### Delhi Day Wise Pollution ","05f9dc32":"<i><p style=\"font-size:16px; background-color: #FFFF20; border: 3px solid blue; margin: 20px; padding: 10px;\"> \n<b>   => Each City Data shows different plot for each pollutants PM2.5, PM10, NO, NO2, NOx, NH3, CO, SO2,O3, Benzene, Toluene & Xylene.  <\/b>\n<br>\n<b>    => In an Average Secenario,  Yearly Mean of each pollutants shows that From Year 2017 Pollution has increased and reduced from 2019 to 2020.(due to COVID 19 Pendemic!!) <\/b>","7cfcf039":"#### COVID-19 Effect : Januray 2020 and April 2020 'CO' Data Check"}}