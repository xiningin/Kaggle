{"cell_type":{"33c16996":"code","7402992c":"code","be1d4806":"markdown","4218cc22":"markdown"},"source":{"33c16996":"import pandas as pd\n\n#1- \u0130lk 10 kaydi getiriniz\n\ndf=pd.read_csv(\"..\/input\/nbaplayers\/nba.csv\")\nresult=df.head(10)\n\n#2-Toplam ka\u00e7 kay\u0131t vard\u0131r ?\nresult=len(df.index)\n\n#3-T\u00fcm oyuncular\u0131n toplam maa\u015f ortalamas\u0131 nedir?\n#result=df[\"Salary\"].sum()\/len(df.index) #bu benim buldu\u011fum \u00e7\u00f6z\u00fcm\nresult=df[\"Salary\"].mean()               #bu direkt ortalamas\u0131 bunu kullan\n\n\n#4- En y\u00fcksek maa\u015f ne kadard\u0131r ?\nresult=df[\"Salary\"].max()\n\n#5- En y\u00fcksek maa\u015f\u0131 alan oyuncu kimdir ?\n\nresult=df[df[\"Salary\"]==df[\"Salary\"].max()][\"Name\"].iloc[0]\n\n#6- Ya\u015f\u0131 20-25 aras\u0131nda olan oyuncular\u0131n isim ve oynad\u0131klar\u0131 tak\u0131m adlar\u0131\n\nresult=df[( (df[\"Age\"]>=20 )&(df[\"Age\"]<=25))][[\"Name\",\"Team\",\"Age\"]].sort_values(\"Age\",ascending=False) #azalan \u015fekilde s\u0131ralad\u0131k baya iyi bu fonksiyon\n\n #7- \"John Holland\" isimli oyuncunun oynadigi takim hangisidir ?\nresult=df[(df[\"Name\"]==\"John Holland\")][\"Team\"].iloc[0] #iloc[0] ile direkt string bilgiyi ald\u0131k baya \u00f6nemli bu unutma\n\n#8- Tak\u0131mlara g\u00f6re oyuncular\u0131n ortalama maa\u015f bilgileri nedir?\nresult=df.groupby(\"Team\").mean()[\"Salary\"]\n\n#9- Ka\u00e7 farkl\u0131 tak\u0131m mevcut ?\nresult=len(df.groupby(\"Team\")) #len metoduyla bulmak daha kolay uzunlu\u011fu \nresult=df[\"Team\"].nunique() #tekrarlamayan de\u011ferlerin say\u0131s\u0131n\u0131 vericek buda ba\u015fka bir y\u00f6ntem bulmak i\u00e7in nunique\n\n#10- Her tak\u0131mda ka\u00e7 oyuncu oynamaktad\u0131r\n\nresult=df[\"Team\"].value_counts()\n\n#11- \u0130smi i\u00e7inde \"and\" ge\u00e7en kay\u0131tlar\u0131 bulunuz\n\ndf=df.dropna() #bunu yapmazsak altta hata verebiliyor \u00e7\u00fcnk\u00fc NAN DE\u011eERLER VARSA SORUN \u00c7IKARIYOR BU Y\u00dcZDEN \n               #dropna() ile o sat\u0131rlar\u0131(NAN OLAN) sildik \nresult=df[df[\"Name\"].str.contains(\"and\")] #.str.contains(\"\") kullanmay\u0131 unutma .str den ge\u00e7i\u015f yap\u0131yoruz baya kullan\u0131\u015fl\u0131 i\u00e7inde and olanlar\u0131 buldu hemen\n\n\nprint(result)","7402992c":"import pandas as pd\n\ndf=pd.read_csv(\"..\/input\/youtube-data\/GBvideos.csv\")\n\n#1- ilk 10 kaydi getiriniz.\nresult=df.head(10)\n\n#2- ikinci 5 kaydi getiriniz.\nresult=df[5:20].head(5)\n\n#3- Dataset' de bulunan kolon isimleri ve sayisini bulunuz\nresult=df.columns     #kolon isimlerini d\u00f6nd\u00fcr\u00fcr\nresult=len(df.columns) #len ile bunlar bir dizi \u015feklinde oldu\u011fu i\u00e7in say\u0131s\u0131n\u0131 d\u00f6nd\u00fcr\u00fcr\u00fcz 16 d\u00f6ner\n\n#4- A\u015fa\u011f\u0131daki baz\u0131 kolonlar\u0131 silin ve kalan kolonlar\u0131 listeleyiniz S\u0130LME \u0130\u015eLEM\u0130 BAYA \u0130Y\u0130 VE \u00d6NEML\u0130\u0130\u0130\u0130\u0130\u0130\u0130\u0130\u0130\n#(thumbnail_link,comment_disabled,ratings_disabled,video_error_or_removed,description)\ndf=df.drop([\"thumbnail_link\",\"comments_disabled\",\"ratings_disabled\",\"video_error_or_removed\",\"description\",\"trending_date\"],axis=1)\nresult=df\n\n#5- Be\u011fenme (like) ve be\u011fenmeme (dislike) sayilarinin ortalamsini bulunuz.\nresult=df[\"likes\"].mean()\nresult=df[\"dislikes\"].mean()\n\n#6- ilk 50 videonun like ve dislike kolonlarini getiriniz\nresult=df.head(50)[[\"likes\",\"dislikes\"]]\n\n#7- en \u00e7ok g\u00f6r\u00fcnt\u00fclenen video hangisidir\nresult=df[df[\"views\"]==df[\"views\"].max()][\"title\"].iloc[0] #true false ile i\u00e7inde max de\u011fere sahip views kolonunu d\u00f6nd\u00fcr dedik\n                                                        #iloc[0] ile sadece ismi istedi\u011fi i\u00e7in string ismi d\u00f6nd\u00fcrd\u00fck tek\n\n#8- en d\u00fc\u015f\u00fck g\u00f6r\u00fcnt\u00fclenen video hangisidir\nresult=df[df[\"views\"]==df[\"views\"].min()][\"title\"].iloc[0]\n\n#9- En fazla g\u00f6r\u00fcnt\u00fclenen ilk 10 video hangisidir?\nresult=df.sort_values(\"views\",ascending=False).head(10)[[\"title\",\"views\"]]\n\n#10- Kategoriye g\u00f6re be\u011feni ortalamar\u0131n\u0131 s\u0131ral\u0131 \u015fekilde getiriniz\nresult=df.groupby(\"category_id\").mean().sort_values(\"likes\")[\"likes\"]\n\n#11- Kategoriye g\u00f6re yorum say\u0131lar\u0131n\u0131 yukar\u0131dan a\u015fa\u011f\u0131ya s\u0131ralay\u0131n\u0131z.\nresult=df.groupby(\"category_id\").sum().sort_values(\"comment_count\",ascending=False)[\"comment_count\"]\n\n#12- Her kategoride kac video vard\u0131r?\nresult=df[\"category_id\"].value_counts()\n\n#13- Her videonun title uzunlugunun bilgisini yeni bir kolonda g\u00f6steriniz\ndf[\"title_len\"]=df[\"title\"].apply(len)\nresult=df\n\n#*******************************BU SORU \u00c7OK \u00d6NEML\u0130 VE D\u0130\u011eERLER\u0130NE G\u00d6RE DAHA ZOR******************************\n#14- Her video i\u00e7in kullan\u0131lan tag say\u0131s\u0131n\u0131 yeni kolonda g\u00f6steriniz (| i\u015faretinden b\u00f6l\u00fccez tagleri bu biraz zor 20.14 dersi sorusu)\ndf[\"tag_count\"]=df[\"tags\"].apply(lambda x: x.split('|')) #bu liste d\u00f6nd\u00fcr\u00fcr ayr\u0131 ayr\u0131\n\ndf[\"tag_count\"]=df[\"tags\"].apply(lambda x: len(x.split('|'))) #buda tag say\u0131s\u0131n\u0131 s\u00f6nd\u00fcr\u00fcr\n\n\n#****************************************EN \u00d6NEML\u0130 SORULARDAN B\u0130R\u0130S\u0130****************************\n#15- En pop\u00fcler videolar\u0131 listeleyiniz.(like\/dislike oran\u0131na g\u00f6re)\n\n\ndef likedislikeOranHesapla(dataset):\n    likesList=list(dataset[\"likes\"]) #like say\u0131lar\u0131n\u0131 ald\u0131k ama liste olarak istiyoruz o y\u00fczden list() kulland\u0131k\n    dislikesList=list(dataset[\"dislikes\"])\n    \n    liste=list(zip(likesList,dislikesList)) #tuple list haline getiriyoruz zip() ile \u00f6nemliii tuple lar (1020,230), (201,233) (likesay\u0131s\u0131,dislikesay\u0131s\u0131) gibi\n    \n    oranListesi=[]\n\n    for like,dislike in liste:\n        if(like+dislike)==0:           #like veya dislike yoksa 2 side 0 sa direkt 0 ekliyoruz\n            oranListesi.append(0)\n        else:                         #e\u011fer like ve dislike toplam\u0131 0 de\u011filse bu sefer oran\u0131 d\u00f6nd\u00fcr\u00fcyoruz s\u0131k\u0131nt\u0131 yok yani\n            oranListesi.append(like\/(like+dislike))\n\n    return oranListesi\n\n\ndf[\"begeni_orani\"]=likedislikeOranHesapla(df)\n\nresult=df.sort_values(\"begeni_orani\",ascending=False)[[\"title\",\"likes\",\"dislikes\",\"begeni_orani\"]]\n\nprint(result)","be1d4806":"# Youtube","4218cc22":"# NBA"}}