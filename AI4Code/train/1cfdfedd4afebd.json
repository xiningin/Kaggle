{"cell_type":{"e2c9f74e":"code","1c411f1e":"code","7ef8fe6f":"code","8291b6f7":"code","19d35d3a":"code","31ab0a92":"code","0d9f4e69":"code","88a971ac":"code","5c38fdb6":"code","b2736a23":"code","31c79c51":"code","47b43ae8":"code","e87c4d00":"code","2139c752":"code","b1c02ef7":"code","44219633":"code","67fe99f5":"code","0a429c41":"code","5f69abfd":"code","0b854df4":"code","35e816ca":"code","cd9723b7":"code","6cebe18b":"code","9e0a2cae":"code","7032ac91":"code","b0112fac":"code","259fb694":"code","4ff9b628":"code","809f1d91":"code","aba2815d":"code","e8d65b02":"code","969599e9":"code","4934d70e":"code","8a835233":"markdown","eb52ab04":"markdown"},"source":{"e2c9f74e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c411f1e":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport sklearn\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing","7ef8fe6f":"df = pd.read_csv('..\/input\/hyundai-used-car-listing\/hyundi.csv')","8291b6f7":"df.head()","19d35d3a":"\ndf.isnull().sum()","31ab0a92":"plt.figure(figsize=(10,5))\ndf['transmission'].value_counts().plot(kind = 'bar',color = 'green')\nplt.show()","0d9f4e69":"plt.figure(figsize=(10,5))\ndf['fuelType'].value_counts().plot(kind = 'bar',color = 'gold')\nplt.show()","88a971ac":"df['price'].value_counts()","5c38fdb6":"df['price'].nunique()","b2736a23":"le = LabelEncoder()","31c79c51":"df['transmission'] = le.fit_transform(df['transmission'])\ndf['fuelType'] = le.fit_transform(df['fuelType'])","47b43ae8":"df.head()","e87c4d00":"df['model'].value_counts().plot(kind='barh',color = 'black')\ndf['model'].value_counts()","2139c752":"df['model'] = le.fit_transform(df['model'])","b1c02ef7":"df['model'].value_counts()","44219633":"df.head()","67fe99f5":"df.columns","0a429c41":"X = df[['model', 'year', 'transmission', 'mileage', 'fuelType',\n       'tax(\u00a3)', 'mpg', 'engineSize']]","5f69abfd":"Y = df[['price']]","0b854df4":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33)","35e816ca":"from sklearn.linear_model import LinearRegression","cd9723b7":"model = LinearRegression()","6cebe18b":"model.fit(X_train,Y_train)","9e0a2cae":"pred = model.predict(X_test)","7032ac91":"from sklearn import metrics\nfrom sklearn.metrics import r2_score, mean_squared_error","b0112fac":"print('R2_score is ',(r2_score(Y_test,pred)))","259fb694":"print('The MSE is' , (mean_squared_error(Y_test,pred)))","4ff9b628":"from sklearn.tree import DecisionTreeRegressor","809f1d91":"dtr = DecisionTreeRegressor()","aba2815d":"dtr.fit(X_train,Y_train)","e8d65b02":"predicted = dtr.predict(X_test)","969599e9":"print('R2_score is ',(r2_score(Y_test,predicted)))","4934d70e":"print('The MSE is' , (mean_squared_error(Y_test,predicted)))","8a835233":"## Encoding","eb52ab04":"# Null Values"}}