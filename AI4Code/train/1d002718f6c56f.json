{"cell_type":{"1937de45":"code","7b7bac86":"code","6b8413b3":"code","76c0289b":"code","fd543d0c":"code","01627009":"code","5f9e99f2":"code","ec422ce9":"code","cb38d851":"code","7528823f":"markdown","5efdc3d5":"markdown","6f26fd30":"markdown","9f6348b0":"markdown","8d1ad546":"markdown","48592138":"markdown","17553d54":"markdown","62bb0f6a":"markdown","f8f6b711":"markdown","d735c7fe":"markdown","01db7999":"markdown","037f3e03":"markdown"},"source":{"1937de45":"!pip install -q --upgrade wandb","7b7bac86":"import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nimport matplotlib.pyplot as plt","6b8413b3":"# Import wandb\nimport wandb\n\ntry:\n    from kaggle_secrets import UserSecretsClient\n    user_secrets = UserSecretsClient()\n    secret_value_0 = user_secrets.get_secret(\"wandb_api\")\n    wandb.login(key=secret_value_0)\n\n    anony=None\nexcept:\n    anony = \"must\"\n    print('If you want to use your W&B account, go to Add-ons -> Secrets and add your W&B access token. Use the Label name as \"wandb_api\". \\nGet your W&B access token from here: https:\/\/wandb.ai\/authorize')","76c0289b":"CONFIG = {'competition': 'petfinder', \n          '_wandb_kernel': 'ayut'}","fd543d0c":"ROOT_PATH = Path('..\/input\/petfinder-pawpularity-score')\nTRAIN_IMGS_PATH = ROOT_PATH \/ 'train\/'","01627009":"# Read csv file\ntrain_df = pd.read_csv(f'{ROOT_PATH}\/train.csv')\ntrain_df.head()","5f9e99f2":"columns = train_df.columns.tolist()\ncolumns.insert(1, 'image')\nprint(columns)","ec422ce9":"# Initialize a W&B run to log images\nrun = wandb.init(project='petfinder-viz', config=CONFIG, anonymous=anony) # W&B Code 1\n\ndata_at = wandb.Table(columns=columns) # W&B Code 2\n\nfor i in tqdm(range(len(train_df))):\n    row = train_df.loc[i]\n    img_id = row.Id\n\n    data_at.add_data(img_id,                                            \n                     wandb.Image(f'{TRAIN_IMGS_PATH}\/{img_id}.jpg'),\n                     *tuple(row.values[1:])) # W&B Code 3\n\nwandb.log({'Raw Petfinder data': data_at}) # W&B Code 4\nwandb.finish() # W&B Code 5","cb38d851":"# This is just to display the W&B run page in this interactive session.\nfrom IPython import display\n\n# we create an IFrame and set the width and height\niF = display.IFrame(run.url, width=1080, height=720)\niF","7528823f":"# Quick EDA using W&B Tables","5efdc3d5":"The code cell below logs the entire dataset of this competition.","6f26fd30":"# Visualize Dataset Interactively using W&B Tables","9f6348b0":"In this kernel, we will use Weights and Biases Tables feature to interactively perform basic EDA. The purpose of creating this kernel is many fold:\n* Educate fellow Kagglers to use W&B Tables.\n* Perform Basic EDA.\n* Show how this can be useful for model performance visualization. (Working on it)\n\nW&B Tables let you to log, query, and analyze data interactively. This can help you understand your dataset, visualize model predictions, and share insights in a central dashboard. \n\n\nWhy should you use W&B Tables?\n\n* It is suited for quick EDA.\n\n* It helps understand the data better with few lines of code. Here's a [quick colab notebook](http:\/\/wandb.me\/tables-quickstart).\n\n* It lets you see the \"actual\" data in it's entirety. With matplotlib based visualization you will have to plot everything in batches and it not very scalable.\n\n* You can filter, sort and group data which can help answer some fundamental questions.\n\n* It is well suited to visualize model predictions and compare models on example level. You can check out [this Kaggle kernel](https:\/\/www.kaggle.com\/ayuraj\/better-data-understanding-with-w-b-tables) to learn more about model prediction visualization.\n\nRead more about Tables [here](https:\/\/wandb.ai\/wandb\/posts\/reports\/Announcing-W-B-Tables-Iterate-on-Your-Data--Vmlldzo4NTMxNDU).","8d1ad546":"### Groupby \"Pawpularity\"\n\nYou can groupby any column in the W&B Tables.\n* Click on the triple dot icon in the column name of your choice.\n* Click on Group by.\n\n![img](https:\/\/i.imgur.com\/kVyKYbX.png)\n\n* There are a total of 100 unique \"pawpularity\" values. \n* You can visualize examples belonging to each pawpularity value.\n* You can see the distribution for other columns.  \n\n![img](https:\/\/i.imgur.com\/bPe43Xp.png)\n\n! Note that you cannot do multiple grouping. ","48592138":"### Count\n\nYou can easily add of a count column and sort it in ascending and descending order. \n\n![img](https:\/\/i.imgur.com\/5sptLco.gif)","17553d54":"### Number of images\n\nThere are a total of 9912 images. You can see this in the annotated image below. Also note all the column names. \n\n![img](https:\/\/i.imgur.com\/m28sGYX.png)","62bb0f6a":"It only requires 5 lines of extra code to get the power of W&B Tables. \n\n1. You first need to initialize a W&B run using `wandb.init` API. This step is common for any W&B Logging.\n2. Create a `wandb.Table` object. Imagine this to be an empty Pandas Dataframe. \n3. Iterate through each row of the `train.csv` file and `add_data` to the `wandb.Table` object. Imagine this to be appending new rows to your Dataframe. \n4. Log the W&B Tables using `wandb.log` API. You will use this API to log almost anything to W&B.\n5. In a Juypter like interactive session, you need to call `wandb.finish` to close the initialized W&B run. ","f8f6b711":"The code cell below imports W&B and login using Kaggle secrets.","d735c7fe":"# Dataset","01db7999":"### [Check out the W&B Tables $\\rightarrow$](https:\/\/wandb.ai\/ayush-thakur\/petfinder-viz\/runs\/1k1frhav)\n\n![img](https:\/\/i.imgur.com\/cV9ycET.gif)","037f3e03":"# Imports and Setup"}}