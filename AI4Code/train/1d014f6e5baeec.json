{"cell_type":{"5c79cfc4":"code","e28abc87":"code","1e7c434a":"code","76fd0fd5":"code","c63cfe9f":"code","07c2ed80":"code","54e5f777":"code","8924a19c":"code","7a0542e0":"code","bf90017c":"code","0a7cd468":"code","67fcbf74":"code","ddcadd25":"code","dbed775e":"code","c272ddab":"code","6df270ed":"code","f74abbbe":"code","8a22fbe5":"code","1b56a739":"code","483112d2":"code","25d0797f":"code","b9be20a9":"code","34eb0e7e":"code","e9a5a156":"code","81d264de":"code","d51a0585":"code","1e5a9eef":"code","c69cca37":"code","2ba465a4":"markdown","7afb3995":"markdown","338db391":"markdown","f5e85f9d":"markdown","242c85d5":"markdown","99caca0c":"markdown","5353546f":"markdown","8f75e7e5":"markdown","85c551cb":"markdown","3f3e30d0":"markdown","e34e85f7":"markdown","6dada619":"markdown","27222654":"markdown","c04cb9e0":"markdown"},"source":{"5c79cfc4":"# Importing library for posting youtube videos in frame\nfrom IPython.display import IFrame, YouTubeVideo\nYouTubeVideo('aerq4byr7ps',width=600, height=400)","e28abc87":"\"\"\"Importing required libraries\"\"\"\n# Import libraries\nimport numpy as np\nimport pandas as pd\nfrom datetime import date\nimport pandas_profiling as pp\n\n\n'''Customize visualization\nSeaborn and matplotlib visualization.'''\nimport altair as alt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n%matplotlib inline\nimport folium \nfrom folium import plugins\n\n\n'''Plotly visualization .'''\nimport plotly.offline as py\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected = True) # Required to use plotly offline in jupyter notebook\n\n\n'''Display markdown formatted output like bold, italic bold etc.'''\nfrom IPython.display import Markdown\ndef bold(string):\n    display(Markdown(string))","1e7c434a":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(\"Path of Coronavirus Dataset : \")\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","76fd0fd5":"\"\"\"Loading and reading the dataset\"\"\"\n# Load coronavirus dataset\ndata = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\")\n\n# View dataset\ndata.head()","c63cfe9f":"\"\"\"Statistics and info of dataset\"\"\"\n#  info of dataset\ndata.info(verbose=True, null_counts = False)","07c2ed80":"# Describe dataset\ndata.describe()","54e5f777":"# Other way to describe the data\ndata.describe(include=\"O\")","8924a19c":"\"\"\"Profiling of entire data using ProfileReport\"\"\"\n# An alternative to describe\/info\nprofile = pp.ProfileReport(data)\nprofile","7a0542e0":"# The report can also be exported into an interactive HTML file with the following code.\nprofile.to_file(\"hosuing_data_profiling.html\")\n\n# Click on Toggle details to get more details","bf90017c":"\"\"\"Data Cleaning\"\"\"\n# From data.info(), we can see that date column is of type object\n# Convert Date and Last_Update column to datatime format\ndata['Date'] = data['Date'].apply(pd.to_datetime)\ndata['Last_Update'] = data['Last_Update'].apply(pd.to_datetime)\ndata.head()","0a7cd468":"# Let's furthur divide Last_Update date into day and hour\ndata['Day'] = data['Last_Update'].apply(lambda x:x.day)\ndata['Hour'] = data['Last_Update'].apply(lambda x:x.hour)\n# View data\ndata.head()","67fcbf74":"\"\"\"Let's look of the feature info\"\"\"\n# Again checking the dataset info\ndata.info(verbose=True, null_counts = False)\n\n# Now dates columns are updated to datatime64 datatype","ddcadd25":"# List of affected countries \ncountries = data['Country'].unique().tolist()\nprint(countries)\n# Note that China and Mainland China have been reported separately.\n\n# Total countries affected by virus\nprint(\"\\nTotal countries affected by virus: \",len(countries))","dbed775e":"# Combining China and Mainland China cases\ndata['Country'].replace({'Mainland China':'China'},inplace=True)\ncountries = data['Country'].unique().tolist()\nprint(countries)\nprint(\"\\nTotal countries affected by virus: \",len(countries))\n\n# Note now we have combined China and Mainland China with China.","c272ddab":"# Doing manupulation on Date column to get date\nbold(\"**Present Global Scenario for Latest Data**\")\nd = data['Date'][-1:].astype('str')\nyear = int(d.values[0].split('-')[0])\nmonth = int(d.values[0].split('-')[1])\nday = int(d.values[0].split('-')[2].split()[0])\n\ndata_latest = data[data['Date'] > pd.Timestamp(date(year,month,day))]\ndata_latest.head()","6df270ed":"# Some more insights\nbold('**Present Gobal condition: Confirmed, Death and Recovered**')\nprint('Globally Confirmed Cases: ',data_latest['Confirmed'].sum())\nprint('Global Deaths Cases: ',data_latest['Deaths'].sum())\nprint('Globally Recovered Cases: ',data_latest['Recovered'].sum())","f74abbbe":"# Let's look the various Provinces\/States affected\ndata_latest.groupby(['Country','Province\/State']).sum()","8a22fbe5":"# Country wise confirmed, death and recovered cases.\nbold(\"** Country wise confirmed, death and recovered cases, 4th february 2020**\")\ntemp_data = data_latest.groupby('Country')['Confirmed','Deaths','Recovered'].sum().reset_index()\n\ncm = sns.light_palette(\"green\", as_cmap=True)\n\n# Set CSS properties for th elements in dataframe\nth_props = [\n  ('font-size', '12px'),\n  ('text-align', 'center'),\n  ('font-weight', 'bold'),\n  ('color', '#6d6d6d'),\n  ('background-color', '#f7f7f9')\n  ]\n\n## Set CSS properties for td elements in dataframe\ntd_props = [\n  ('font-size', '12px'),\n  ('color', 'black')\n   ]\n\n# Set table styles\nstyles = [\n  dict(selector=\"th\", props=th_props),\n  dict(selector=\"td\", props=td_props)\n  ]\n\n(temp_data.style\n  .background_gradient(cmap=cm, subset=[\"Confirmed\",\"Deaths\",\"Recovered\"])\n  .highlight_max(subset=[\"Confirmed\",\"Deaths\",\"Recovered\"])\n  .set_caption('*China Have most confirmed, deaths & recovered cases.')\n  .set_table_styles(styles))","1b56a739":"# Creating a dataframe with total no of confirmed cases for every country\nnumber_of_countries = len(data_latest['Country'].value_counts())\n\ncases = pd.DataFrame(data_latest.groupby('Country')['Confirmed'].sum())\ncases['Country'] = cases.index\ncases.index=np.arange(1,number_of_countries+1)\n\nglobal_cases = cases[['Country','Confirmed']]\n#global_cases.sort_values(by=['Confirmed'],ascending=False)\nglobal_cases","483112d2":"# Provinces where deaths have taken place\nbold(\"**Provinces where deaths have taken place**\")\ndata_latest.groupby('Country')['Deaths'].sum().sort_values(ascending=False)[:5]","25d0797f":"# Importing the world_coordinates dataset\nworld_coordinates = pd.read_csv('..\/input\/world-coordinates\/world_coordinates.csv')\n\n# Merging the coordinates dataframe with original dataframe\nworld_data = pd.merge(world_coordinates,global_cases,on='Country')\nworld_data.head()","b9be20a9":"world_map = folium.Map(location=[10, -20], zoom_start=2.3,tiles='Stamen Toner')\n\nfor lat, lon, value, name in zip(world_data['latitude'], world_data['longitude'], world_data['Confirmed'], world_data['Country']):\n    folium.CircleMarker([lat, lon],\n                        radius=10,\n                        popup = ('<strong>Country<\/strong>: ' + str(name).capitalize() + '<br>'\n                                '<strong>Confirmed Cases<\/strong>: ' + str(value) + '<br>'),\n                        color='red',\n                        \n                        fill_color='red',\n                        fill_opacity=0.7 ).add_to(world_map)\nworld_map","34eb0e7e":"china_data_latest = data_latest[data_latest['Country']=='China'][[\"Province\/State\",\"Confirmed\",\"Deaths\",\"Recovered\"]]\n\nbold(\"**Present Scenario of China Condition, February 2020**\")\n\ncm = sns.light_palette(\"green\", as_cmap=True)\n\n# Set CSS properties for th elements in dataframe\nth_props = [\n  ('font-size', '11px'),\n  ('text-align', 'center'),\n  ('font-weight', 'bold'),\n  ('color', '#6d6d6d'),\n  ('background-color', '#f7f7f9')\n  ]\n\n## Set CSS properties for td elements in dataframe\ntd_props = [\n  ('font-size', '11px'),\n  ('color', 'black')\n   ]\n\n# Set table styles\nstyles = [\n  dict(selector=\"th\", props=th_props),\n  dict(selector=\"td\", props=td_props)\n  ]\n\n(china_data_latest.style\n  .background_gradient(cmap=cm, subset=[\"Confirmed\",\"Deaths\",\"Recovered\"])\n  .highlight_max(subset=[\"Confirmed\",\"Deaths\",\"Recovered\"])\n  .set_table_styles(styles))","e9a5a156":"# Top 10 Infected State in China\nbars = alt.Chart(china_data_latest.head(10)).mark_bar(color='orange',opacity=0.7).encode(\n    x='Confirmed:Q',\n    y=alt.Y('Province\/State:O', sort='-x')\n).properties(\n    title={\n    \"text\":['Top 10 Infected State in China'],\n    \"subtitle\":['*Hubei have most confirmed cases'],\n    \"fontSize\":15,\n    \"fontWeight\": 'bold',\n    \"font\":'Courier New',\n    }\n)\n\ntext = bars.mark_text(\n    align='left',\n    baseline='middle',\n    dx=3  # Nudges text to right so it doesn't appear on top of the bar\n).encode(\n    text='Confirmed:Q'    \n)\n\n(bars + text).properties( height=300, width=600)","81d264de":"# Top 10 States With Recovered Cases in China\ntemp_data = china_data_latest[china_data_latest['Recovered']> 0]\nbars = alt.Chart(temp_data.head(10)).mark_bar(color='green',opacity=0.7).encode(\n    x='Recovered:Q',\n    y=alt.Y('Province\/State:O', sort='-x')\n).properties(\n    title={\n    \"text\":['Top 10 States With Recovered Cases in China'],\n    \"subtitle\":['*Hubei, Guangdong, Zhejiang have most recovered cases'],\n    \"fontSize\":15,\n    \"fontWeight\": 'bold',\n    \"font\":'Courier New',\n    }\n)\n\ntext = bars.mark_text(\n    align='left',\n    baseline='middle',\n    dx=3  # Nudges text to right so it doesn't appear on top of the bar\n).encode(\n    text='Recovered:Q'    \n)\n\n(bars + text).properties( height=300, width=600)","d51a0585":"# States With Deaths Case in China\ntemp = china_data_latest[china_data_latest['Deaths'] > 0]\nbars = alt.Chart(temp.head(10)).mark_bar(color='red',opacity=0.7).encode(\n    x='Deaths:Q',\n    y=alt.Y('Province\/State:O', sort='-x')\n).properties(\n    title={\n    \"text\":['States With Deaths Case in China'],\n    \"subtitle\":['*Hubei, Henan,Heilongjiang have most deaths cases'],\n    \"fontSize\":15,\n    \"fontWeight\": 'bold',\n    \"font\":'Courier New',\n    }\n)\n\ntext = bars.mark_text(\n    align='left',\n    baseline='middle',\n    dx=3  # Nudges text to right so it doesn't appear on top of the bar\n).encode(\n    text='Deaths:Q'    \n)\n\n(bars + text).properties( height=300, width=600)","1e5a9eef":"# Confirmed vs Recovered vs Death figures of Provinces of China other than Hubei\n# bold(\"**Confirmed vs Recovered vs Death figures of Provinces of China other than Hubei**\")\nf, ax = plt.subplots(figsize=(15, 10))\n\n\nsns.barplot(x=\"Confirmed\", y=\"Province\/State\", data=china_data_latest[1:],\n            label=\"Confirmed\", color=\"orange\",alpha=0.7)\n\n\nsns.barplot(x=\"Recovered\", y=\"Province\/State\", data=china_data_latest[1:],\n            label=\"Recovered\", color=\"g\",alpha=0.7)\n\n\nsns.barplot(x=\"Deaths\", y=\"Province\/State\", data=china_data_latest[1:],\n            label=\"Deaths\", color=\"r\",alpha=0.7)\n\n# Add a legend and informative axis label\nax.set_title('Confirmed vs Recovered vs Death figures of Provinces of China other than Hubei', fontsize=20, fontweight='bold', position=(0.53, 1.05))\nax.legend(ncol=2, loc=\"lower right\", frameon=True)\nax.set(xlim=(0, 24), ylabel=\"\",\n       xlabel=\"Stats\")\nsns.despine(left=True, bottom=True)\n","c69cca37":"india_data_latest = data_latest[data_latest['Country']=='India'][[\"Province\/State\",\"Confirmed\",\"Deaths\",\"Recovered\"]]\n\nbold(\"**Present Scenario of India Condition, February 2020**\")\n\ncm = sns.light_palette(\"green\", as_cmap=True)\n\n# Set CSS properties for th elements in dataframe\nth_props = [\n  ('font-size', '11px'),\n  ('text-align', 'center'),\n  ('font-weight', 'bold'),\n  ('color', '#6d6d6d'),\n  ('background-color', '#f7f7f9')\n  ]\n\n## Set CSS properties for td elements in dataframe\ntd_props = [\n  ('font-size', '11px'),\n  ('color', 'black')\n   ]\n\n# Set table styles\nstyles = [\n  dict(selector=\"th\", props=th_props),\n  dict(selector=\"td\", props=td_props)\n  ]\n\n(india_data_latest.style\n  .background_gradient(cmap=cm, subset=[\"Confirmed\",\"Deaths\",\"Recovered\"])\n  .highlight_max(subset=[\"Confirmed\",\"Deaths\",\"Recovered\"])\n  .set_table_styles(styles))","2ba465a4":"### Youtube Video For More Information","7afb3995":"### How did the recent outbreak occur?\nThe recent outbreak of coronavirus is believed to have occurred in a market for illegal wildlife in the central Chinese city of Wuhan. Chinese health authorities and the WHO are investigating the outbreak of the recent coronavirus which has claimed 17 lives and reportedly infected hundreds.","338db391":"### 2. Present Scenario of China","f5e85f9d":"## Exploratory Data Analysis","242c85d5":"## Summary","99caca0c":"### What Next!!\nThis was a simple EDA and lots of analysis can be done.\n\n__Give me your feedback and if you find my kernel helpful please UPVOTE will be appreciated.__","5353546f":"### RECOMMENDATIONS AND ADVICE FOR THE PUBLIC\n\nDuring previous outbreaks due to other coronavirus (Middle-East Respiratory Syndrome (MERS) and Severe Acute Respiratory Syndrome (SARS), human-to-human transmission occurred through droplets, contact and fomites, suggesting that the transmission mode of the 2019-nCoV can be similar. The basic principles to reduce the general risk of transmission of acute respiratory infections include the following:\n\n* Avoiding close contact with people suffering from acute respiratory infections.\n* Frequent hand-washing, especially after direct contact with ill people or their environment.\n* Avoiding unprotected contact with farm or wild animals.\n* People with symptoms of acute respiratory infection should practice cough etiquette (maintain distance, cover coughs and sneezes with disposable tissues or clothing, and wash hands).\n* Within healthcare facilities, enhance standard infection prevention and control practices in hospitals, especially inemergency departments. WHO does not recommend any specific health measures for travellers. In case of symptoms suggestive of respiratory illness either during or after travel, travellers are encouraged to seek medical attention and share their travel history with their healthcare provider.\n\n__SOURCE__: __WHO Report__","8f75e7e5":"## Data Analysis on Present Scenario ","85c551cb":"1. Gobal Condition\n    * Till now 17,295 globally confirmed cases with 362 deaths.\n    * The first death has been reported outside of China, in the Philippines. The patient was a close contact of the first patient confirmed in the Philippines.\n    \n    \n2. China Contion\n    * 17, 114 Confirmed cases in Mainland China with 361 deaths and 478 recovered.\n    \n    \n3. Wuhan City\n    * 11,177 Confirmed cases including 350 deaths and 295 recovered.","3f3e30d0":"### How is India responding to the outbreak?\nAccording to the Health Ministry, 9150 passengers have been screened for the novel coronavirus. Till now, no case of novel coronavirus has been reported in India. Health ministry has asked travellers from China to report to the nearest health facility in case they do not feel well. The ministry has asked authorities at seven airports of Delhi, Mumbai, Kolkata, Chennai, Bengaluru, Hyderabad and Cochin to screen those travelling from China.","e34e85f7":"### What is coronavirus?\nThe coronavirus is a family of viruses that can cause a range of illnesses in humans including common cold and more severe forms like SARS and MERS which are life-threatening. The virus is named after its shape which takes the form of a crown with protrusions around it and hence is known as coronavirus.","6dada619":"# Introduction","27222654":"### COUNTRY RESPONSE\n\n__China__:\n\n* National authorities are conducting active case finding in all provinces;\n* Since 14 January 2020, 35 infrared thermometers have been installed in airports, railway stations, long-distance bus stations, and ferry terminals;\n* Search expanded for additional cases within and outside of Wuhan City;\n* Active \/ retroactive case finding in medical institutions in Wuhan City;\n* The Huanan Seafood Wholesale Market in Wuhan city was closed on 1 January 2020 for environmental sanitation and disinfection. Market inspection in expansion to other markets;\n* Public education on disease prevention and environmental hygiene further strengthened in public places across the city, farmers\u2019 markets in particular.\n","c04cb9e0":"### 1. Present Scenario: Globally"}}