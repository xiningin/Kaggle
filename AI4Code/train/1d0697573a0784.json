{"cell_type":{"28f8e6e7":"code","a6d387a4":"code","e2197993":"code","8c0bd1fa":"code","12b67090":"code","47f14d5e":"markdown","543d896d":"markdown","6aa6cfa2":"markdown","a36758c9":"markdown"},"source":{"28f8e6e7":"import cv2 as cv\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom matplotlib.patches import Rectangle ","a6d387a4":"plt.figure(figsize=(20, 20))\nplt.title(\"Original\")\nplt.imshow(mpimg.imread('..\/input\/opencv-samples-images\/WaldoBeach.jpg'))\nplt.show()\n","e2197993":"\n\nimg = cv.imread('..\/input\/opencv-samples-images\/WaldoBeach.jpg',0)\n\ntemplate =img[500:650, 500:600]\n# template =img[500:650, 200:300]\nplt.imshow(template,cmap = 'gray')\nplt.title('template'), plt.xticks([]), plt.yticks([])\n\nplt.show()\n","8c0bd1fa":"img2 = img.copy()\nw, h = template.shape[::-1]\n# All the 6 methods for comparison in a list\nmethods = ['cv.TM_CCOEFF', 'cv.TM_CCOEFF_NORMED', 'cv.TM_CCORR',\n            'cv.TM_CCORR_NORMED', 'cv.TM_SQDIFF', 'cv.TM_SQDIFF_NORMED']\nplt.figure(figsize=(20, 20))\nplt.imshow(mpimg.imread('..\/input\/opencv-samples-images\/WaldoBeach.jpg'))\nplt.title('Detected Point')\nresult=[]\n\nfor meth in methods:\n    img = img2.copy()\n    method = eval(meth)\n    # Apply template Matching\n    res = cv.matchTemplate(img,template,method)\n    min_val, max_val, min_loc, max_loc = cv.minMaxLoc(res)\n    # If the method is TM_SQDIFF or TM_SQDIFF_NORMED, take minimum\n    if method in [cv.TM_SQDIFF, cv.TM_SQDIFF_NORMED]:\n        top_left = min_loc\n    else:\n        top_left = max_loc\n\n    result+=[(meth,top_left,w,   h)]\n \n    ax = plt.gca()\n    ax.add_patch( Rectangle(top_left, \n                       w,   h,\n                        fc ='none',  \n                        ec ='b', \n                        lw = 4) ) \n\n    \nplt.show()\n    ","12b67090":"index=160\nplt.figure(figsize=(20, 20))\nfor r in result:\n    index+=1\n    plt.subplot(index),plt.imshow(res,cmap = 'gray')\n    template =img[ r[1][1]:r[1][1]+r[3], r[1][0]: r[1][0]+r[2]]\n    plt.imshow(template,cmap = 'gray')\n    plt.title(r[0]), plt.xticks([]), plt.yticks([])\n\nplt.show()","47f14d5e":"  **Thankyou for Reading and Do Upvote If you liked !!!**","543d896d":"<h2 style='background:blue; border:0; color:white'><center> References <\/center><h2>","6aa6cfa2":"<h2 style='background:blue; border:0; color:white'><center> Load Libraries <\/center><h2>","a36758c9":"* https:\/\/docs.opencv.org\/master\/df\/dfb\/group__imgproc__object.html\n* https:\/\/opencv-python-tutroals.readthedocs.io\/en\/latest\/py_tutorials\/py_imgproc\/py_template_matching\/py_template_matching.html"}}