{"cell_type":{"f338c4dc":"code","b98b71cb":"code","bac033e8":"code","594929aa":"code","a11e3c19":"code","7507b468":"code","fe1f9301":"code","8b2d3fc9":"code","e1c6cd09":"code","d9d81699":"code","d1571202":"code","43cca470":"code","c0770aa8":"code","3dc20b29":"markdown","c394505d":"markdown","c203c514":"markdown","c9bd4b77":"markdown","9eb319ee":"markdown","2d52d66d":"markdown","030012a3":"markdown","ff6b3ec9":"markdown","2d90e63f":"markdown","d7bcfd26":"markdown","a3e452a7":"markdown","ce7085ff":"markdown"},"source":{"f338c4dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b98b71cb":"df = pd.read_csv('..\/input\/best-books-of-the-19th-century\/GoodReads_Books.csv')","bac033e8":"df.head()","594929aa":"df.loc[df.Book_Name == 'Name not Availible']","a11e3c19":"df.loc[df.Book_Name == 'Name not Availible']\ndf = df.drop(df.loc[df.Book_Name == 'Name not Availible'].index)","7507b468":"df[['Book_Name','Author_Name', 'Book_Rating']].sort_values(by='Book_Rating', ascending=False).head(10).reset_index(drop=True)","fe1f9301":"df.Author_Name.value_counts().head(20).plot(kind='barh',figsize=(8,8),title='Authors with more books',color='Gray')","8b2d3fc9":"#The Book_rating column was like type object, so let's make it float64\ndf.Book_Rating = df.Book_Rating.astype('float64')","e1c6cd09":"plt.figure(figsize=(8,7))\nplt.title('Frequency of the book rating')\nsns.histplot(data=df.Book_Rating, kde=True, color='Gray')","d9d81699":"plt.figure(figsize=(8,7))\nplt.title('Frequency of the book rating')\nsns.histplot(data=df[df.Book_Rating > 2.5].Book_Rating, kde=True, color='Gray')","d1571202":"df[df.Book_Rating < 3][['Book_Name', 'Author_Name', 'Book_Rating']]. reset_index(drop=True)","43cca470":"df1 = df.groupby('Author_Name').Book_Rating.agg(sum)\ndf1 = pd.DataFrame(df1)\nfigure, axes = plt.subplots(1, 2, figsize=(12,8), gridspec_kw={'wspace': 0.5})\nfigure.suptitle('Comparison in the top 20 of reviews')\ndf1.sort_values(by='Book_Rating', ascending=False).head(20).plot(kind='barh',title='Authors rating sum', color='Gray', ax=axes[0])\ndf.Author_Name.value_counts().head(20).plot(kind='barh',title='Authors with more books',color='Gray', ax=axes[1])","c0770aa8":"df.Book_Rating.mean()\na = df.Book_Rating[df.Book_Rating < df.Book_Rating.mean()].count()\nb = df.Book_Rating[df.Book_Rating > df.Book_Rating.mean()].count()\nprint(f'Number of books that are below average: {a}\\nNumber of books that are above average: {b}')","3dc20b29":"There are some values \u200b\u200bmissing from the data set, so let's remove them","c394505d":"The data set is distributed in this way:","c203c514":"Now let's see the frequency of the book rating","c9bd4b77":"## Now let's make some comparisons about the evaluations and the authors","9eb319ee":"We can see that the values are more concentrated between 3 and 5, so let's exclude values less than 3 from the next graph","2d52d66d":"We can see that there is an almost equal distribution of books in relation to the average.","030012a3":"# Conclusion\nI am new to data analysis but I think I did the initial analysis that was possible with this dataset.\nIf you have any tips for anything else I could do, I would appreciate it.","ff6b3ec9":"There are only 14 books rated less than 3, and only one has a rating of 0","2d90e63f":"We can see that the evaluations are more concentrated between 3 and 4.5.\nSo let's see how many are below 3","d7bcfd26":"As we can see, the two graphs have some differences, this means that the number of books is not directly proportional to the sum of the evaluations, at least in some of the cases.","a3e452a7":"# Top 10 best books\nlet's see which are the top 10 books according to the user rate","ce7085ff":"Now let's see who are the authors who wrote the books contained in that dataset"}}