{"cell_type":{"a98aa4cf":"code","cde175ea":"code","e7b30a41":"code","607a5ee5":"code","acf516b9":"code","1fd5d6f9":"code","0d187798":"code","acaf4374":"code","5476b3ae":"code","cce1f895":"code","10605001":"code","cb13dd0d":"code","be7dc765":"code","4fa20c62":"code","c5612c54":"code","70324cbf":"code","51e12b49":"code","89658d4e":"code","32dc8e3d":"code","4410c6e4":"code","066fc356":"code","cc9486d3":"code","6ab6ffc4":"code","4193def4":"code","eb6e85f8":"code","1cc90770":"code","cb029b07":"code","861546e2":"code","76e383e4":"code","f8337684":"code","e78d0f5e":"code","570b9ef8":"code","000a7a71":"code","ca63f358":"code","a57e80b7":"markdown","4c8186e7":"markdown","5d15f720":"markdown","ae933a01":"markdown","c514c424":"markdown","b7b8d4f4":"markdown","41e3e861":"markdown","5d107a0d":"markdown","23601f18":"markdown","507b8640":"markdown","395ec5ef":"markdown","1854ddae":"markdown","566d18f7":"markdown","bee00048":"markdown","f24b1692":"markdown","db8d0166":"markdown","c659bd0f":"markdown","5ce802ce":"markdown"},"source":{"a98aa4cf":"import os \n# Disable warnings, set Matplotlib inline plotting and load Pandas package\nimport warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime\nfrom pytz import timezone\nfrom dateutil import tz\nfrom datetime import datetime, timedelta\nimport geojson\nimport geopandas as gpd  \nfrom fiona.crs import from_epsg\nimport os, json\nfrom shapely.geometry import shape, Point, Polygon, MultiPoint\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport osmnx as ox\n\n\nimport os \n# Disable warnings, set Matplotlib inline plotting and load Pandas package\nimport warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\nimport numpy as np\n#pd.options.display.mpl_style = 'default'\nfrom datetime import datetime\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom pytz import timezone\nfrom dateutil import tz\nimport geojson\nimport geopandas as gpd\nfrom fiona.crs import from_epsg\nimport os, json\nfrom shapely.geometry import shape, Point, Polygon, MultiPoint\n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom geopandas.tools import sjoin\nfrom sklearn.neighbors import KernelDensity\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.cm as cm\n\nimport plotly.express as px\n\nimport folium","cde175ea":"DF_and = pd.read_csv('..\/input\/belgium-obu\/Anderlecht_15.csv', header=None)\nDF_and.columns = ['datetime','street_id','count','vel']\nnRow_and, nCol_and = DF_and.shape\n\nDF_bxl = pd.read_csv('..\/input\/belgium-obu\/Bxl_15.csv', header=None)\nDF_bxl.columns = ['datetime','street_id','count','vel']\nnRow_bxl, nCol_bxl = DF_bxl.shape\n\nDF_bel = pd.read_csv('..\/input\/belgium-obu\/Bel_15.csv', header=None)\nDF_bel.columns = ['datetime','street_id','count','vel']\nnRow_bel, nCol_bel = DF_bel.shape\n\nprint(f'in Anderlecht 15 min there are {nRow_and} rows and {nCol_and} columns')\nprint(f'in Bruxelles 15 min there are {nRow_bxl} rows and {nCol_bxl} columns')\nprint(f'in Belgium 15 min there are {nRow_bel} rows and {nCol_bel} columns')","e7b30a41":"DF_bel.head()","607a5ee5":"DF_bel.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'sum'}).plot(figsize=(20,5), color = 'red', rot=45, title='Belgium')\nplt.show()","acf516b9":"DF_bel.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'mean'}).plot(figsize=(20,5), color = 'blue', rot=45, title='Belgium')\nplt.show()","1fd5d6f9":"DF_bel_sum = DF_bel.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'sum'}).reset_index()\nDF_bel_sum['time'] = pd.to_datetime(DF_bel_sum['datetime']).dt.time\nDF_bel_sum['DayOfWeek'] = pd.to_datetime(DF_bel_sum['datetime']).dt.dayofweek\n\nDF_bel_working_ = DF_bel_sum[DF_bel_sum['DayOfWeek'] < 5]\nDF_bel_saturday_ = DF_bel_sum[DF_bel_sum['DayOfWeek'] == 5]\nDF_bel_sunday_ = DF_bel_sum[DF_bel_sum['DayOfWeek'] == 6]\n","0d187798":"import seaborn as sns\n\nsns.distplot(DF_bel_sum['count'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})\n","acaf4374":"sns.distplot(DF_bel_working_['count'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})\n\n","5476b3ae":"start = datetime.strptime('03:00:00', '%H:%M:%S').time()\nend = datetime.strptime('15:00:00', '%H:%M:%S').time()\n\nDF_bel_working_day = DF_bel_working_[DF_bel_working_['time'].between(start, end)]\n\n\nstart = datetime.strptime('15:00:00', '%H:%M:%S').time()\nmiddle_1 = datetime.strptime('23:59:00', '%H:%M:%S').time()\nmiddle_2 = datetime.strptime('00:00:00', '%H:%M:%S').time()\nend = datetime.strptime('02:59:00', '%H:%M:%S').time()\n\nDF_bel_working_night_1 = DF_bel_working_[DF_bel_working_['time'].between(start, middle_1)]\nDF_bel_working_night_2 = DF_bel_working_[DF_bel_working_['time'].between(middle_2, end)]\n\nDF_bel_working_night = pd.concat([DF_bel_working_night_1, DF_bel_working_night_2], axis=0)\n","cce1f895":"sns.distplot(DF_bel_working_day['count'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})\n","10605001":"sns.distplot(DF_bel_working_night['count'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})\n","cb13dd0d":"sns.distplot(DF_bel_saturday_['count'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})\n\n","be7dc765":"sns.distplot(DF_bel_sunday_['count'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})","4fa20c62":"DF_bel_sum_vel = DF_bel.sort_values(by=['datetime']).groupby(['datetime']).agg({'vel':'mean'}).reset_index()\nDF_bel_sum_vel['time'] = pd.to_datetime(DF_bel_sum_vel['datetime']).dt.time\nDF_bel_sum_vel['DayOfWeek'] = pd.to_datetime(DF_bel_sum_vel['datetime']).dt.dayofweek\n\nDF_bel_working_vel = DF_bel_sum_vel[DF_bel_sum_vel['DayOfWeek'] < 5]\nDF_bel_saturday_vel = DF_bel_sum_vel[DF_bel_sum_vel['DayOfWeek'] == 5]\nDF_bel_sunday_vel = DF_bel_sum_vel[DF_bel_sum_vel['DayOfWeek'] == 6]","c5612c54":"## total distribution","70324cbf":"sns.distplot(DF_bel_sum_vel['vel'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})","51e12b49":"## workind days distribution","89658d4e":"sns.distplot(DF_bel_working_vel['vel'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})","32dc8e3d":"## saturdays distribution","4410c6e4":"sns.distplot(DF_bel_saturday_vel['vel'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})","066fc356":"## sundays distribution","cc9486d3":"sns.distplot(DF_bel_sunday_vel['vel'], hist=False, kde=True, \n             bins= 200, color = 'blue',\n             hist_kws={'edgecolor':'black'})","6ab6ffc4":"\n# ---------- plot working days\n\nDF_bel_working = DF_bel_working_.groupby('time').agg({'count':['mean','std']})\nDF_bel_working.columns = ['mean','std']\nDF_bel_working['mean + std'] = DF_bel_working['mean'] + DF_bel_working['std']\nDF_bel_working['mean - std'] = DF_bel_working['mean'] - DF_bel_working['std']\n\nax = DF_bel_working[['mean']].plot(color=\"orange\", title = 'avg working days daily pattern')\nDF_bel_working[['mean + std']].plot.area(ax=ax, color=\"gray\", alpha=0.2)\nDF_bel_working[['mean - std']].plot.area(ax=ax, color=\"white\")\nplt.show()\n\n\n# ---------- plot saturdays\n\nDF_bel_saturday = DF_bel_saturday_.groupby('time').agg({'count':['mean','std']})\nDF_bel_saturday.columns = ['mean','std']\nDF_bel_saturday['mean + std'] = DF_bel_saturday['mean'] + DF_bel_saturday['std']\nDF_bel_saturday['mean - std'] = DF_bel_saturday['mean'] - DF_bel_saturday['std']\n\nax = DF_bel_saturday[['mean']].plot(color=\"orange\", title = 'avg saturdays daily pattern')\nDF_bel_saturday[['mean + std']].plot.area(ax=ax, color=\"gray\", alpha=0.2)\nDF_bel_saturday[['mean - std']].plot.area(ax=ax, color=\"white\")\nplt.show()\n\n\n# ---------- plot sundays\n\nDF_bel_sunday = DF_bel_sunday_.groupby('time').agg({'count':['mean','std']})\nDF_bel_sunday.columns = ['mean','std']\nDF_bel_sunday['mean + std'] = DF_bel_sunday['mean'] + DF_bel_sunday['std']\nDF_bel_sunday['mean - std'] = DF_bel_sunday['mean'] - DF_bel_sunday['std']\n\nax = DF_bel_sunday[['mean']].plot(color=\"orange\", title = 'avg sundays daily pattern')\nDF_bel_sunday[['mean + std']].plot.area(ax=ax, color=\"gray\", alpha=0.2)\nDF_bel_sunday[['mean - std']].plot.area(ax=ax, color=\"white\")\nplt.show()\n\n\n\n# ---------- plot all together\n\nDF_bel_working['avg working days'] = DF_bel_working[['mean']]\nDF_bel_saturday['avg saturdays'] = DF_bel_saturday[['mean']]\nDF_bel_sunday['avg sunday'] = DF_bel_sunday[['mean']]\n\nax = DF_bel_working[['avg working days']].plot(color=\"red\", title = 'avg  day pattern')\nDF_bel_saturday[['avg saturdays']].plot(ax=ax, color=\"green\")\nDF_bel_sunday[['avg sunday']].plot(ax=ax, color=\"blue\")\nplt.show()","4193def4":"DF_bel['datetime'] = pd.to_datetime(DF_bel['datetime'])\nDF_bel['date'] = DF_bel['datetime'].dt.date","eb6e85f8":"plt_date = DF_bel.groupby('date').agg({'count':'sum'})\n\nax = plt_date.plot.bar(figsize=(20,5), alpha=0.5)\nplt_date.plot(alpha=0.5, color ='red', ax=ax )\nplt.show()","1cc90770":"DF_bel['DayOfWeek'] = DF_bel['datetime'].dt.dayofweek\n\n# working days\nDF_bel_working_ = DF_bel[DF_bel['DayOfWeek'] < 5]\n\nDF_bel_working_.groupby('date').agg({'count':'sum'}).plot.bar(figsize=(20,5), alpha=0.5)\nplt.show()","cb029b07":"DF_bel_working = DF_bel_working_.groupby('date').agg({'count':'sum'}).reset_index()\nDF_bel_working['Month'] = pd.to_datetime(DF_bel_working['date']).dt.month\n\n\nfig = px.box(DF_bel_working, x='Month', y=\"count\", hover_data=[\"date\"])\nfig.show()","861546e2":"DF_and.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'sum'}).plot(figsize=(20,5), color = 'red', rot=45, title='Anderlecht-Normal')\nplt.show()","76e383e4":"DF_and_sum = DF_and.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'mean'}).reset_index()\nDF_and_sum['time'] = pd.to_datetime(DF_and_sum['datetime']).dt.time\nDF_and_sum['DayOfWeek'] = pd.to_datetime(DF_and_sum['datetime']).dt.dayofweek\n\nDF_and_working_ = DF_and_sum[DF_and_sum['DayOfWeek'] < 5]","f8337684":"# ---------- plot working days\n\nDF_and_working = DF_and_working_.groupby('time').agg({'count':['mean','std']})\nDF_and_working.columns = ['mean','std']\nDF_and_working['mean + std'] = DF_and_working['mean'] + DF_and_working['std']\nDF_and_working['mean - std'] = DF_and_working['mean'] - DF_and_working['std']\n\nax = DF_and_working[['mean']].plot(color=\"orange\", title = 'avg working days daily pattern')\nDF_and_working[['mean + std']].plot.area(ax=ax, color=\"gray\", alpha=0.2)\nDF_and_working[['mean - std']].plot.area(ax=ax, color=\"white\")\nplt.show()","e78d0f5e":"DF_and_21 = pd.read_csv('..\/input\/belgium-obu\/Anderlecht_15_2021.csv', header=None)\nDF_and_21.columns = ['datetime','street_id','count','vel']\nnRow_and, nCol_and = DF_and.shape","570b9ef8":"DF_and_21.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'sum'}).plot(figsize=(20,5), color = 'red', rot=45, title='Anderlecht-Covid')\nplt.show()","000a7a71":"DF_and_21_sum = DF_and_21.sort_values(by=['datetime']).groupby(['datetime']).agg({'count':'mean'}).reset_index()\nDF_and_21_sum['time'] = pd.to_datetime(DF_and_21_sum['datetime']).dt.time\nDF_and_21_sum['DayOfWeek'] = pd.to_datetime(DF_and_21_sum['datetime']).dt.dayofweek\n\nDF_and_21_working_ = DF_and_21_sum[DF_and_21_sum['DayOfWeek'] < 5]","ca63f358":"# ---------- plot working days\n\nDF_and_21_working = DF_and_21_working_.groupby('time').agg({'count':['mean','std']})\nDF_and_21_working.columns = ['mean','std']\nDF_and_21_working['mean + std'] = DF_and_21_working['mean'] + DF_and_21_working['std']\nDF_and_21_working['mean - std'] = DF_and_21_working['mean'] - DF_and_21_working['std']\n\nax = DF_and_21_working[['mean']].plot(color=\"orange\", title = 'avg working days daily pattern')\nDF_and_21_working[['mean + std']].plot.area(ax=ax, color=\"gray\", alpha=0.2)\nDF_and_21_working[['mean - std']].plot.area(ax=ax, color=\"white\")\nplt.show()","a57e80b7":"# general import","4c8186e7":"## working days distribution","5d15f720":"## saturdays distribution","ae933a01":"## visualise pattern","c514c424":"## count trucks: split working days, saturdays and sundays","b7b8d4f4":"## spot outlier days","41e3e861":"# working in progress...","5d107a0d":"# load datasets","23601f18":"## visualise average daily pattern","507b8640":"## sundays distribution","395ec5ef":"## total distribution","1854ddae":"outliers\n\n* first days of january\n* 13-02-2020","566d18f7":"## working days: day\/night","bee00048":"## avg vel trcuks on streets: split working days, saturdays and sundays","f24b1692":"## covid time","db8d0166":"## once upon time","c659bd0f":"## consider working days ","5ce802ce":"# Belgium"}}