{"cell_type":{"bec1c34a":"code","c7f6c474":"code","c83eb14c":"code","78699a14":"code","ac65d832":"code","eca0c1e9":"code","d480f1be":"code","9995addd":"code","828823e8":"code","62e76ac5":"code","b69dbbc2":"code","16dd0a13":"code","c9113401":"code","c605f1b5":"code","8f6db47a":"code","f3d15caf":"code","c9f492dc":"code","30b2392f":"code","490bdec0":"code","c0ea678a":"markdown","7277d115":"markdown","99f2305a":"markdown","8e56b0ed":"markdown","6e50be51":"markdown","0b291584":"markdown","e7a52a88":"markdown","e338ddad":"markdown","48fe6f5c":"markdown","5b12d00e":"markdown"},"source":{"bec1c34a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nfrom scipy.stats import skew\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline\nimport warnings\n\ndef fxn():\n    warnings.warn(\"deprecated\", DeprecationWarning)\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    fxn()\nimport os\nprint(os.listdir(\"..\/input\"))","c7f6c474":"data = pd.read_csv('..\/input\/train.csv')\ndata.head()","c83eb14c":"numerical_features = data.select_dtypes(include=[np.number])\nnumerical_features.columns","78699a14":"data.describe()","ac65d832":"data.drop('PassengerId', axis = 1).hist(figsize=(30,20), layout=(4,3))\nplt.plot()","eca0c1e9":"skew_values = skew(data[numerical_features.columns], nan_policy = 'omit')\npd.concat([pd.DataFrame(list(numerical_features.columns), columns=['Features']), \n           pd.DataFrame(list(skew_values), columns=['Skewness degree'])], axis = 1,) ","d480f1be":"missing_values = data.isnull().sum().sort_values(ascending = False)\npercentage_missing_values = missing_values\/len(data)\ncombine_data = pd.concat([missing_values, percentage_missing_values], axis = 1, keys= ['Missing values count', 'Percentage'])\npd.pivot_table(combine_data, index=combine_data.index,margins=True ) ","9995addd":"plt.figure(figsize=(20,10))\nsns.heatmap(data.drop('PassengerId', axis = 1).corr(), square=True, annot=True, vmax= 1,robust=True, yticklabels=1)\nplt.show()","828823e8":"plt.figure(figsize=(20,10))\nsns.boxplot(data = data.drop('PassengerId', axis = 1))\nplt.show()","62e76ac5":"# Let's see survival and Fare relation\nvar = 'Fare'\nplt.scatter(x = data[var], y = data['Survived'])\nplt.xlabel('Fare')\nplt.ylabel('Survived')\nplt.show()","b69dbbc2":"plt.figure(figsize=(20,5))\nsns.boxplot(x =data[var])\nplt.show()","16dd0a13":"data.drop(data[data['Fare']> 100].index,  inplace= True)","c9113401":"data.drop(['Age', 'Cabin'], axis = 1, inplace=True)","c605f1b5":"data.dropna(inplace=True)","8f6db47a":"categorical_features = data.select_dtypes(include=[np.object])\ncategorical_features.columns","f3d15caf":"print('Sex has {} unique values: {}'.format(len(data.Sex.unique()),data.Sex.unique()))\nprint('Embarked has {} unique values: {}'.format(len(data.Embarked.unique()),data.Embarked.unique()))","c9f492dc":"data.drop(['Name', 'Ticket'], axis = 1, inplace=True)","30b2392f":"data  = pd.get_dummies(data)","490bdec0":"data.head()","c0ea678a":"# Bivariate Analysis\n- Understanding one features stats wiht respect to other features","7277d115":"# Outliers detection and removal","99f2305a":"- Scatter plot is good way to visualise data sparsity on general.\n- Fare vs.  Survived shows few points are loosly available\n- Let's plot box plot to see outliers in detail","8e56b0ed":"# Categorical Features Encoding\n- Name, Sex, Ticket, Embarked are categorical features\n- Name and Ticket are not relevant features (drop them)\n- Encode Sex and Embarked into numbers using inbuilt functions\n- Using dummy encoding is best option here","6e50be51":"# Univariate Analysis\n - Univariate Analysis is plays vital role to understand each features values statistics (mean, median, standard deviation), pattern, misisng values, outliers presence. It is always recommended to undergo Univariate analysis.","0b291584":"# **Competition Description**\n\nThe sinking of the RMS Titanic is one of the most infamous shipwrecks in history.  On April 15, 1912, during her maiden voyage, the Titanic sank after colliding with an iceberg, killing 1502 out of 2224 passengers and crew. This sensational tragedy shocked the international community and led to better safety regulations for ships.\n\nOne of the reasons that the shipwreck led to such loss of life was that there were not enough lifeboats for the passengers and crew. Although there was some element of luck involved in surviving the sinking, some groups of people were more likely to survive than others, such as women, children, and the upper-class.\n\nIn this challenge, we ask you to complete the analysis of what sorts of people were likely to survive. In particular, we ask you to apply the tools of machine learning to predict which passengers survived the tragedy.\n\nIn this article I have more focussed on exploratory data analysis.","e7a52a88":"- Survived is good related with Pclass and Fare\n- Pclass is enough correlated with Fare\n- Age with SbSP and Pclass\n- SbSP with Parch","e338ddad":"For normally distributed data, the skewness should be about 0. For unimodal continuous distributions, a skewness value > 0 means that there is more weight in the right tail of the distribution. The function skewtest can be used to determine if the skewness value is close enough to 0, statistically speaking.\n\n- Fare, parch and SibSp are high positively skewed\n- Pclass is negatively skewed\n\n##### Feature Type Classification\n- Numerical - Age, Fare, SibSp, Parch\n- Categorical - Survival, Pclass, Sex, Parch, Cabin, Embarked\n    - Nominal - Sex, Cabin, Embarked\n    - Ordinal - Pclass\n    - Interval - ","48fe6f5c":"# Missing Values Treatment\n\n- Cabin has >70 % missing values, hence, it's better to drop this column than fill up\n- Age has -37 % correlation with Pclass, while Pclass has -34% correlation with Survived\n- As Age and Pclass is correlated, it is better to remove one of them\n- AS Age has just -0.077% correlated with Survived, remove Age \n\n- Hence, in this problem missing values are handled by dropping columns (Age and Cabin) and droping rows","5b12d00e":"- **This is cleaned data to be used for pre-processing, modeling and evaluation.**"}}