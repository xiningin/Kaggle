{"cell_type":{"88e3ab59":"code","417a1516":"code","be573d6b":"code","15169aa7":"code","470e94c2":"code","c5ad14d1":"code","912d1a1c":"code","fb46fb9e":"code","7a1733fa":"code","f6cc5608":"code","8a51c4b4":"code","c5dbb62d":"code","c5e82479":"code","d8a0456e":"code","933787c4":"code","4da34b00":"code","8d597c6b":"code","0e97e18d":"code","c901bf0c":"code","b7f6e53e":"markdown","e96b7f9c":"markdown","c139b2fe":"markdown","d0ee3c86":"markdown","28109391":"markdown","f6ef00ce":"markdown"},"source":{"88e3ab59":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline","417a1516":"df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","be573d6b":"fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(11,5))\n\ntypes = df.type.unique()\ntypes_count = df['type'].value_counts()\n\nax1.bar(types, types_count, color=['#1597E5', '#FEE440'])\nax1.grid(axis='y', linestyle='--', alpha=0.75)\nax1.tick_params(axis='both', labelsize=12)\n\nax2.pie(types_count, labels=types,\n       shadow=True, startangle=90, wedgeprops={'edgecolor':'white'},\n       autopct='%1.1f%%', explode=[0.1, 0], colors=['#1597E5', '#FEE440'],\n       textprops={'fontsize':12})\n\nplt.tight_layout()","15169aa7":"sns.catplot(y='release_year', kind='count', data=df, height=10)","470e94c2":"top5 = df['country'].value_counts()[:5].to_frame(name='count')","c5ad14d1":"countries = top5.index \ntypes = df.type.unique()","912d1a1c":"mc = list()\ntc = list()\nfor i in countries:\n    for x in types:\n        pilt = (df['country'] == i)\n        if x == 'Movie':\n            item1 = df.loc[pilt, 'type'].value_counts()['Movie']\n            mc.append(item1)\n        else:\n            item2 = df.loc[pilt, 'type'].value_counts()['TV Show']\n            tc.append(item2)","fb46fb9e":"top5['movies'] = mc\ntop5['tv_shows'] = tc\ntop5.insert(0, \"country\", countries, True)\ntop5.index = [0,1,2,3,4]","7a1733fa":"top5","f6cc5608":"x_indexes = np.arange(len(top5.country.unique()))\nwidth = 0.25","8a51c4b4":"mvs = top5['movies']\ntvs = top5['tv_shows']","c5dbb62d":"plt.figure(figsize=(13,6))\n\nplt.bar(x_indexes - (width\/2), mvs, width=width, label='Movies', color='#1597E5')\nplt.bar(x_indexes + (width\/2), tvs, width=width, label='TV Show', color='#FEE440')\n\nplt.title('Top 5 Countries', fontsize=14)\nplt.yticks(fontsize=14)\nplt.xticks(ticks=x_indexes, labels=countries, fontsize=14)\n\nplt.grid(axis='y', alpha=0.5)\nplt.legend(prop={'size':14})\nplt.tight_layout()","c5e82479":"#Movies\nmovie_filter = (df['type'] == 'Movie')\nnew_df = df[movie_filter][['type', 'duration']]\n\nnew_df = new_df.dropna()\nnew_df['duration'] = new_df['duration'].str.replace(' min', '').astype(int)","d8a0456e":"#TV Shows\ntv_filter = (df['type'] == 'TV Show')\nnew_df2 = df[tv_filter][['type', 'duration']]\n\nnew_df2 = new_df2.dropna()\nnew_df2['duration'] = new_df2['duration'].apply(lambda x: int(x.split()[0]))","933787c4":"fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(16,5))\n\nax1.hist(new_df['duration'], bins=11, color='#1597E5')\nax1.set_title('Movies Duration Distribution', fontsize=16)\nax1.set_xlabel('Minutes', fontsize=14)\nax1.tick_params(axis='both', labelsize=14)\nax1.grid(axis='y', linestyle='--', alpha=0.5)\n\nax2.hist(new_df2['duration'], bins=9, color='#FEE440')\nax2.set_title('TV Shows Duration Distribution', fontsize=16)\nax2.set_xlabel('Seasons', fontsize=14)\nax2.tick_params(axis='both', labelsize=14)\nax2.grid(axis='y', linestyle='--', alpha=0.5)\n\nplt.tight_layout()","4da34b00":"cast_df = df['cast']\ncast_df = cast_df.dropna()","8d597c6b":"casts = [cast for i in cast_df for cast in i.split(',')]\ncasts_unique = list()\n\nfor cast in casts:\n    if cast not in casts_unique:\n        casts_unique.append(cast)\n        \nrecords = list()\n\nfor cast in casts_unique:\n    cast_count = casts.count(cast)\n    records.append([cast_count, cast])\n\nrecords.sort(reverse=True)","0e97e18d":"top10_casts = [i for i in records[:10]]\nfor cast in top10_casts:\n    cast[1] = ' '.join(cast[1].split())\n\ntop10_casts.sort(reverse=False)","c901bf0c":"plt.figure(figsize=(13,6))\n\nsns.barplot(y=[name[1] for name in top10_casts], x=[count[0] for count in top10_casts], palette='Blues_d')\nplt.title('Top 10 Casts', fontsize=16)\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\n\nplt.grid(axis='x', linestyle='--', alpha=0.75)\nplt.gca().invert_yaxis()","b7f6e53e":"**Compare The Numbers of Movies and TV Shows**","e96b7f9c":"**Movies and TV Shows Durations**","c139b2fe":"**Netflix Shows Count Per Year**","d0ee3c86":"**Import Libraries**","28109391":"**Top 5 Countries Movies and TV Shows**","f6ef00ce":"**Top 10 Casts**"}}