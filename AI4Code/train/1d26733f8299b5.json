{"cell_type":{"3e823b4f":"code","55b8b6b5":"code","9fd2037d":"code","878f8209":"code","2819a53e":"code","0f24aa61":"code","ef4a6054":"code","40d2ef5e":"code","fbb75145":"code","8c2909e1":"code","01d0610d":"code","97cb3692":"code","5cfdb58e":"code","db905911":"code","be012e26":"code","e32e5c1d":"code","fc87fec4":"code","3752d187":"code","f9a3c0fe":"code","2b0ffbc7":"code","c0990ec8":"code","1c6b7652":"code","e301dbce":"code","26ba4d47":"code","bc6341d6":"markdown","f53fe7b3":"markdown","5e6f0b31":"markdown","4922d262":"markdown"},"source":{"3e823b4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55b8b6b5":"# Getting the CSV file in 'SalData' and creating a DataFrame for the same\nSalData = pd.read_csv(\"\/kaggle\/input\/income\/train.csv\")\nSalData = pd.DataFrame(SalData, columns = SalData.columns )\nSalData","9fd2037d":"# Checking the info() which will give a quick glance to our Dataset\nSalData.info()","878f8209":"#Checking for Null Values in DataFrame\nSalData.isnull().values.any() ","2819a53e":"#Checking which specific column has the null value\nSalData.isnull().sum()","0f24aa61":"# Changing the column name to 'predclass' and furthur deleting the previous column\nSalData['predclass'] = SalData['income_>50K']\ndel SalData['income_>50K']","ef4a6054":"# Printing all the Unique values from the columns\nprint('workclass',SalData.workclass.unique())\nprint('education',SalData.education.unique())\nprint('marital-status',SalData['marital-status'].unique())\nprint('occupation',SalData.occupation.unique())\nprint('relationship',SalData.relationship.unique())\nprint('race',SalData.race.unique())\nprint('gender',SalData.gender.unique())\nprint('native-country',SalData['native-country'].unique())","40d2ef5e":"import seaborn as sns\nimport matplotlib.pyplot as plt","fbb75145":"# Plotting the 'predclass'\nfig = plt.figure(figsize=(20,1))\nplt.style.use('seaborn-ticks')\nsns.countplot(y=\"predclass\", data=SalData)\n\n# Where 0 is Salary<50K and 1 is Salary>50K\n# Here we can see income level less than 50K is more than 3 times of those above 50K","8c2909e1":"SalData[['education', 'educational-num']].groupby(['education'], as_index=False).mean().sort_values(by='educational-num', ascending=False)","01d0610d":"# Plotting 'education' column\nfig = plt.figure(figsize=(20,3))\nplt.style.use('seaborn-ticks')\nsns.countplot(y=\"education\", data=SalData)","97cb3692":"# Plotting 'marrital-status' column\nfig = plt.figure(figsize=(20,2))\nplt.style.use('seaborn-ticks')\nsns.countplot(y=\"marital-status\", data=SalData)","5cfdb58e":"# Plotting 'occupation' column\nplt.style.use('seaborn-ticks')\nplt.figure(figsize=(20,4)) \nsns.countplot(y=\"occupation\", data=SalData)","db905911":"# Plotting 'workclass' column\nplt.style.use('seaborn-ticks')\nplt.figure(figsize=(20,3)) \nsns.countplot(y=\"workclass\", data=SalData)","be012e26":"# One Hot Encoding\nOHEdata = pd.get_dummies(SalData)","e32e5c1d":"# Here you can see the number of column has increased from 16 to 106 \n# to know more visit: https:\/\/www.geeksforgeeks.org\/ml-one-hot-encoding-of-datasets-in-python\/\nOHEdata.columns","fc87fec4":"# Train Test Split the Data\nX = OHEdata.drop(['predclass'], axis = 1)","3752d187":"y = OHEdata['predclass']\ny.head()","f9a3c0fe":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 5)","2b0ffbc7":"X_train","c0990ec8":"X_test","1c6b7652":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train_sc = sc.fit_transform(X_train)\nX_test_sc = sc.transform(X_test)","e301dbce":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n\n\nDT_classifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 1219)\nDT_classifier.fit(X_train, y_train)\ny_pred_DT = DT_classifier.predict(X_test)\naccuracy_score(y_test, y_pred_DT)","26ba4d47":"from sklearn.neighbors import KNeighborsClassifier\n\nknn_classifier = KNeighborsClassifier(n_neighbors = 7, metric = 'minkowski', p = 5)\nknn_classifier.fit(X_train, y_train)\ny_pred_knn = knn_classifier.predict(X_test)\naccuracy_score(y_test, y_pred_knn)","bc6341d6":"# One-Hot-Encoding","f53fe7b3":"# Information about Dataset","5e6f0b31":"# Plotting","4922d262":"# Train-Test-Split"}}