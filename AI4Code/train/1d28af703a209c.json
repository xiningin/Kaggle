{"cell_type":{"4484ecfb":"code","333e3417":"code","23705f89":"code","f4f0aaf3":"code","b0aa7c90":"code","b21c86c5":"code","9bc8a1e0":"code","22bd5a0c":"markdown","3b93242d":"markdown","385cdc23":"markdown"},"source":{"4484ecfb":"import pandas as pd\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport warnings\n\nfrom bokeh.io import show, output_notebook\nfrom bokeh.plotting import figure\nfrom bokeh.models import Range1d\nfrom bokeh.models import DatetimeTickFormatter\n\nwarnings.filterwarnings(\"ignore\")","333e3417":"btc = pd.read_csv('..\/input\/bitcoinP.csv')\nbtc.describe()","23705f89":"btc.head()","f4f0aaf3":"EMA = pd.DataFrame(index=['Date']) #create new dataframe for EMA\nEMA = btc[['Date','Close']][0:].copy() #copy Date and Close Price from btc dataframe\nEMA['EMA12'] = EMA['Close'].ewm(12).mean() #12 period moving average\nEMA['EMA26'] = EMA['Close'].ewm(26).mean() #26 period moving average\nEMA.head()","b0aa7c90":"rows = len(EMA)\n\n#separate negative and possitve EMA signal\nfor i in range (0,rows):\n    if EMA.loc[i,'EMA12'] < EMA.loc[i,'EMA26']:\n        EMA.loc[i,'NEGATIVE'] = EMA.loc[i,'EMA12']\n    elif EMA.loc[i,'EMA12'] > EMA.loc[i,'EMA26']: \n        EMA.loc[i,'POSSITIVE'] = EMA.loc[i,'EMA12']\n","b21c86c5":"fig1 = figure(plot_width = 700, plot_height = 500, \n           x_axis_label = 'Date', y_axis_label = 'Price')\n\nfig1.title.text = \"BITCOIN Close Price\"\nfig1.title.align = \"center\"\n\nfig1.xaxis.formatter=DatetimeTickFormatter(\n        hours=[\"%d\/%m\/%Y\"],\n        days=[\"%d\/%m\/%Y\"],\n        months=[\"%d\/%m\/%Y\"],\n        years=[\"%d\/%m\/%Y\"],\n    )\n\nx = [dt.datetime.strptime(date,'%d-%b-%y').date() for date in EMA['Date']] \ny = btc['Close']\nema26 = EMA['EMA26']\npossitive = EMA['POSSITIVE']\nnegative = EMA['NEGATIVE']\n\nfig1.line(x, y, color = 'darkslategray', alpha=1.0,line_width=1.5, legend='Close Price' )\nfig1.line(x, ema26, color = 'darkkhaki',alpha=1.0,line_width=1.5, line_dash=[1, 1],legend='EMA26')\nfig1.line(x, possitive, color = 'mediumaquamarine',alpha=1.0,line_width=1.5, legend='EMA12 > EMA26')\nfig1.line(x, negative, color = 'indianred',alpha=1.0,line_width=1.5, legend='EMA12 < EMA26')\n\nfig1.legend.location = \"top_left\"\nfig1.legend.border_line_color = \"black\"\n\nfig1.border_fill_color = \"whitesmoke\"\n\noutput_notebook()\n\nshow(fig1)\n\n","9bc8a1e0":"MACD = pd.DataFrame(index=['Date']) #create new dataframe for MACD\nMACD = btc[['Date','Close']][0:].copy() #copy Date and Close Price from btc dataframe\nMACD['MACD']=EMA['EMA12']-EMA['EMA26']#calculate MACD\nMACD['SIGNAL']= MACD['MACD'].ewm(9).mean()#calculate signal\nMACD['HIST']=MACD['MACD']-MACD['SIGNAL']#calculate histogram\n\nHIST = btc[['Date']][0:].copy() \n\nfor i in range(0,rows):\n    if MACD.loc[i,'HIST']>0:\n        HIST.loc[i,'POSSITIVE']=MACD.loc[i,'HIST']\n    else:\n        HIST.loc[i,'NEGATIVE']=MACD.loc[i,'HIST']\n        \n\n#Create MACD chart\n\nfig2 = figure(plot_width = 700, plot_height = 500, \n           x_axis_label = 'Date', y_axis_label = '')\n\nfig2.title.text = \"MACD (12,26,9)\"\nfig2.title.align = \"center\"\n\nfig2.xaxis.formatter=DatetimeTickFormatter(\n        hours=[\"%d\/%m\/%Y\"],\n        days=[\"%d\/%m\/%Y\"],\n        months=[\"%d\/%m\/%Y\"],\n        years=[\"%d\/%m\/%Y\"],\n    )\n\nx = [dt.datetime.strptime(date,'%d-%b-%y').date() for date in EMA['Date']] \nSIGNAL = MACD['SIGNAL']\nMACD = MACD['MACD']\nPOSSITIVE = HIST['POSSITIVE']\nNEGATIVE = HIST['NEGATIVE']\n\nfig2.vbar(x, top = POSSITIVE, width=0.1, color = 'mediumaquamarine')\nfig2.vbar(x, top = NEGATIVE, width=0.1,color = 'indianred')\nfig2.line(x, SIGNAL, color = 'darkslategray', alpha=1.0,line_width=2, legend='Signal' )\nfig2.line(x, MACD, color = 'slategray',alpha=0.75,line_width=1.5, legend='MACD')\n\nfig2.y_range = Range1d(-400, 400) \n\nfig2.legend.location = \"bottom_left\"\nfig2.legend.border_line_color = \"black\"\n\nfig2.border_fill_color = \"whitesmoke\"\n\noutput_notebook()\n\nshow(fig2)\n","22bd5a0c":"**Calculate MACD **\n\nMACD or Moving Average Convergence Divergence is a momentum indicator calculated by substracting the longer EMA from shorter EMA. The signal line refers to the moving average curve of MACD. In this kernel, the signal line averaged the MACD every 9 periods. ","3b93242d":"# BITCOIN 2013 -2017 : EMA, MACD indicators\nThis kernel analyzed and visualized the historical exponentiail moving average curve (EMA) and the historical moving average convergence divergence (MACD) of Bitocoin\n\n\n**READ DATASET**","385cdc23":"**Calculate exponential moving average (EMA) values**\n\n\"A moving average (MA) is a widely used indicator in technical analysis that helps smooth out price action by filtering out  the \u201cnoise\u201d from random price fluctuations. It is a trend-following, or lagging, indicator because it is based on past prices.\"\nCredit: https:\/\/www.investopedia.com\/terms\/m\/movingaverage.asp#ixzz5QbbzH266\n\nLook more details about mathematical description from wikipedia.\nhttps:\/\/en.wikipedia.org\/wiki\/Moving_averag"}}