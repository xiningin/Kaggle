{"cell_type":{"bae484f0":"code","5b3e2061":"code","16ed03a6":"code","23dc2903":"code","90e803b8":"code","f184e0b3":"code","df606b87":"code","cc3b8d05":"code","abb7a661":"code","a367ef6a":"code","20fec582":"code","34d66b2d":"code","14adbcad":"code","e3794f48":"code","f014cf07":"code","1a2ce62e":"code","81ae9095":"code","224e183e":"code","5643b4f9":"code","bbe80676":"code","7195655a":"code","0499f511":"code","dbb14bd3":"code","a3bb9d26":"code","663f67b9":"code","239e0459":"code","5ceb1cb8":"code","e484ed18":"code","e7425659":"code","e0264ef3":"code","c6cb5283":"code","c90cc010":"code","fe345850":"code","fa375160":"code","a9a38775":"code","a99684da":"code","00911a22":"code","d2a27d90":"code","24f9a0e6":"code","0b54bf24":"code","459a08d1":"code","b10d23bc":"code","6b1133be":"code","67a0c7df":"code","70e4043a":"code","a8f0a099":"code","225d3dc6":"code","46c662fb":"code","59dc4601":"code","8942bdbf":"code","a9ed4f6b":"code","b117cdbe":"markdown","0c8fc264":"markdown","8d925ff5":"markdown","06001bce":"markdown","6878b699":"markdown","03d079f0":"markdown","444a5649":"markdown","876cd563":"markdown","1f4ce8b3":"markdown","505a5331":"markdown","9860ca49":"markdown","4c789dde":"markdown","ada51989":"markdown","41402a79":"markdown","65333442":"markdown","9bb5bbf4":"markdown","fcd55639":"markdown","87ed0244":"markdown","2c0dbd3c":"markdown","f5bc7e6b":"markdown","ffb341a4":"markdown","2e39f79e":"markdown","26434293":"markdown","44d261dd":"markdown","9c03e9cc":"markdown","c4486cd7":"markdown","8b24a7ed":"markdown","b0b2bd02":"markdown","13aa84a2":"markdown","58152ebd":"markdown","2dcce607":"markdown","adc36e6d":"markdown","f22d6a55":"markdown","159470fa":"markdown","7ef38d83":"markdown","f79f6ed8":"markdown","0ac00359":"markdown","175f43ec":"markdown","17018edf":"markdown","f5a11d27":"markdown","ba062ca1":"markdown"},"source":{"bae484f0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom pandas.plotting import scatter_matrix\nimport matplotlib.pyplot as plt\nplt.style.use(\"fivethirtyeight\")\n\nimport plotly.express as px\nfrom sklearn.preprocessing import MinMaxScaler\nimport warnings as wr\nwr.filterwarnings('ignore')\n","5b3e2061":"#reading training and testing data\n\nimport pandas as pd\ngender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")","16ed03a6":"train.head()","23dc2903":"train.describe().T.style.bar(subset=[\"mean\"],color=\"#606ff2\").background_gradient(\nsubset=[\"std\"],cmap=\"PuBu\").background_gradient(subset=[\"50%\"],cmap=\"PuBu\")","90e803b8":"train.info()","f184e0b3":"#count NA values\ntrain.isnull().sum()","df606b87":"train=train.drop([\"PassengerId\",\"Ticket\",\"Cabin\"],axis=1)\ntrain.head()","cc3b8d05":"train.shape","abb7a661":"# filling NaN values using pandas Fillna\n\ntrain[\"Age\"].fillna(train[\"Age\"].mean(),inplace=True)\ntrain['Embarked'].fillna(train['Embarked'].mode()[0],inplace=True)","a367ef6a":"print(f'Number of people dead as 0 are {train.Survived.value_counts()[0]} and Number of people survived as 1 are {train.Survived.value_counts()[1]}')\nsns.countplot(train[\"Survived\"])\nax = plt.axes()\nax.set_facecolor(\"green\")\n\nplt.show()","20fec582":"#visualisation how many pasanger survived and how many dead \n#here we make a function for visulisation bar chart \n\ndef bar_chart(column):\n    survived=train[train[\"Survived\"]==1][column].value_counts()\n    dead=train[train[\"Survived\"]==0][column].value_counts()\n    df1=pd.DataFrame([survived,dead])\n    df1.index=[\"Survived\",\"Dead\"]\n    df1.plot(kind=\"bar\",figsize=(10,5))\n    ax = plt.axes()\n    ax.set_facecolor(\"green\")","34d66b2d":"#here we can see relation between sex and Survived\n\nbar_chart(\"Sex\")","14adbcad":"\ntrain.loc[train['Sex'] == \"male\", 'Sex'] = 0\ntrain.loc[train['Sex'] == \"female\", 'Sex'] = 1","e3794f48":"print(f'Number of people having sex as male are {train.Sex.value_counts()[0]} and Number of people having sex as female are {train.Sex.value_counts()[1]}')\nsns.countplot(train[\"Sex\"])\nplt.show()","f014cf07":"#by this visualisation we can see relation between pasenger class and Survived\n\nbar_chart(\"Pclass\")","1a2ce62e":"print(f'Number of people travel in 1st class are {train.Pclass.value_counts()[1]} and Number of people travil in 3rd class are {train.Pclass.value_counts()[3]}')\nsns.countplot(train[\"Pclass\"])\nplt.show()","81ae9095":"\n#by this visualisation we can see relation between pasenger SibSp and Survived\n\nbar_chart(\"SibSp\")\n    ","224e183e":"\ndef box_plot(column):\n    train.boxplot(by=\"Survived\",column=[column],grid=True)\n    ax = plt.axes()\n    ax.set_facecolor(\"green\")\n","5643b4f9":"#counting total values in SibSp\nprint(train[\"SibSp\"].value_counts())\n\nbox_plot(\"SibSp\")","bbe80676":"#here we chacking largest values row on column Sibsp\ntrain.nlargest(12,[\"SibSp\"])","7195655a":"#now we gpoing to remove outliers\ntrain=train.drop([159,180,201,324,792,846,863])\ntrain.shape","0499f511":"#by this visualisation we can see relation between pasenger parch and Survived\nbar_chart(\"Parch\")","dbb14bd3":"#counting total values in parch\nprint(train[\"Parch\"].value_counts())\nbox_plot(\"Parch\")","a3bb9d26":"#here we chacking largest values row on column parch\ntrain.nlargest(6,[\"Parch\"])","663f67b9":"#now we gpoing to remove outliers\ntrain=train.drop([678,13,25,610,638,885])\ntrain.shape","239e0459":"#here wr checking outliers \nf,ax=plt.subplots()\nsns.violinplot(data=train.iloc[:,5:7])\nsns.despine(offset=10,trim=True)\n","5ceb1cb8":"#here we drow boxplot between fare and Survived\nbox_plot(\"Fare\")","e484ed18":"#here we going to ploat scaterplot to see data distirbution\nsns.relplot(x=\"Pclass\",y=\"Fare\",hue=\"Survived\",data=train);\n","e7425659":"def hist(column):\n    train[column].plot(kind = 'hist',bins = 200,figsize = (6,6))\n    plt.title(column)\n    plt.xlabel(column)\n    plt.ylabel(\"Frequency\")\n    ax = plt.axes()\n    ax.set_facecolor(\"black\")\n    plt.show()","e0264ef3":"hist(\"Fare\")","c6cb5283":"fig=px.scatter(train,x=\"Age\",y=\"Survived\",size=\"Fare\",color=\"Fare\",log_x=True,size_max=50,\n              template=\"plotly_dark\",title=\"Age vs survived\")\nfig.show()","c90cc010":"fig=px.scatter_3d(train,x=\"Age\",y=\"Survived\",z=\"Fare\",color=\"Fare\",log_x=True,size_max=60,\n              template=\"plotly_dark\",title=\"Age vs survived vs Fare\")\nfig.show()","fe345850":"#here we drow boxplot between Age and Survived\nbox_plot(\"Age\")","fa375160":"#here we going to ploat scaterplot to see data distirbution\nsns.relplot(x=\"Pclass\",y=\"Age\",hue=\"Survived\",data=train);","a9a38775":"#making histogram on Age\nhist(\"Age\")","a99684da":"# here we use scater plot to display data  \n    \ntrain[train.Survived ==1].plot(kind='scatter', x='Age', y='Fare',color=\"red\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Fare\")\nplt.title(\"Survived ==1\")\nplt.grid(True)\nax = plt.axes()\nax.set_facecolor(\"black\")\nplt.show()","00911a22":"#by this visualisation we can see relation between pasenger Embarked and Survived\nbar_chart(\"Embarked\")","d2a27d90":"#counting total values in Embarked\nprint(train['Embarked'].value_counts())","24f9a0e6":"#here we going to ploat scaterplot to see data distirbution\nsns.relplot(x=\"Embarked\",y=\"Fare\",hue=\"Survived\",data=train);","0b54bf24":"#Here we encode Embarked in Rank\ntrain.loc[train['Embarked'] == \"C\", 'Embarked'] = 0\ntrain.loc[train['Embarked'] == \"Q\", 'Embarked'] = 1\ntrain.loc[train['Embarked'] == \"S\", 'Embarked'] = 2","459a08d1":"train[\"Title\"]=train[\"Name\"].str.split(',',expand=True)[1].str.split('.',expand=True)[0]\ntrain[\"Title\"].unique()","b10d23bc":"train[\"Title\"]=train[\"Title\"].replace([\" Don\",\" Rev\",\" Dr\",\" Major\",\" Lady\",\" Sir\",\" Col\",\" Capt\",\" the Countess\",\" Jonkheer\"],\"Rare\")\ntrain[\"Title\"]=train[\"Title\"].replace([\" Mlle\", \" Ms\",\" Dona\"],\" Miss\")\ntrain[\"Title\"]=train[\"Title\"].replace([\" Mme\",\" Mrs\"],\" Mr\")\ntrain[\"Title\"].unique()\n","6b1133be":"#Here we encode title in Rank\nmapping={' Mr':0, ' Miss':1, ' Master':2, 'Rare':3}\ntrain[\"Title\"]=train[\"Title\"].map(mapping)","67a0c7df":"bar_chart(\"Title\")","70e4043a":"#counting total values in Title\nprint(train[\"Title\"].value_counts())","a8f0a099":"train.head()","225d3dc6":"train=train.drop([\"Name\"],axis=1)\ntrain.head()","46c662fb":"#here we going to ploat scaterplot to see data distirbution\nsns.relplot(x=\"Title\",y=\"Fare\",hue=\"Survived\",data=train);","59dc4601":"#ploting pair plot\nplt.figure(figsize=(10, 10))\ng=sns.PairGrid(train,hue=\"Survived\")\ng.map_offdiag(sns.scatterplot)\ng.add_legend\nplt.show()","8942bdbf":"#checking feature dependance on outcome\n\nplt.figure(figsize=(10, 10))\nsns.heatmap(train.corr(), annot=True, linewidths=0.05, fmt= '.2f',cmap=\"magma\")\nplt.show()","a9ed4f6b":"\ndf=train.drop([\"Age\",\"Fare\"],axis=1)\ndf.head()","b117cdbe":"* more passenger(634) bord from Southamption\n* less passenger(76) bord from Queenstown","0c8fc264":"\n## Data description\n\n**Here we have 12 columns-**\n\n* PassengerId : ID of Passenger\n* Pclass : Passenger class (1=1st,2=2nd,3=3rd)\n* Survived : Survival (0=No,1=Yes)\n* Sex : sex(male & female)\n* Name : name of passengers\n* Age : age of passengers\n* Sibsp : Number of Siblings\n* Parch : Number of Parents\n* Ticket : passenger ticket number\n* Fare : Passenger fare(British pound)\n* Cabin : cabin\n* Embarked : Port of Embarkation(C=Cherbourg ,Q=Queenstown, S=Southamption)","8d925ff5":"# SibSp column","06001bce":"**Importing important libraries**","6878b699":"**here we essaly say that in top of chart have a outliers. we also see data destrebution**","03d079f0":"## Please do a upvote if you like it\n\n### Thank you","444a5649":"* by the above chart we can say that there are more chance to survived for those who bord from Southamption\n\n* Passenger traveilling from Cherbourg port survived more than other port passenger","876cd563":"Here we can see 90% people have 0 to 2 siblings rest are we considerd as outlier","1f4ce8b3":"**here we make another function to visualisation  boxplot to see the outliers**\nby boxplot we see data visualisation distribution in 1st 3ed & 3 quatile and we also understand relation between Fare and Survived and we can find out outliers . You can see top right have a outliers ","505a5331":"People have 0 Siblings have more chance to dead","9860ca49":"here you can see there are lot of otliers(above 200) in fare ","4c789dde":"* Now we can say populaton of male is graterthan as female\n* females have more chance to survived \n* males have less chance to survived","ada51989":"# Parch column","41402a79":"**by this visualisation we can understand that females have more chance to survived and male have less chance to Survived**","65333442":"**by this graph we can see Frequency of age. here we findout that more people are between  25 to 35 year old**","9bb5bbf4":"* Now we can say 3rd class have more passenger 491\n* 1st & 2nd class have same passenger 216 & 190\n","fcd55639":"**making title feature using Name**","87ed0244":"# Sex column","2c0dbd3c":"**by this boxplot we can see that lees than 10 year old people have more chance to dead and between 20 to 35 have chance to survived**","f5bc7e6b":"# Frome EDA we got\n\n* Cabin column have lots of null values so we drop it,\n* Ticket and paddenger Id is not usefull and does not have impact on survivl so drop it.\n* Passenger travelling in higher class have more chance to survived\n* Females survived more then Males.\n* In the 1st class Females were more then Males it is also a resion that females have more chance to survived.\n* Passenger travelling with siblings ,parents have more chance to survived.\n* Passenger traveilling from Cherbourg port survived more than other port passenger.","ffb341a4":"## 3-D Scatter","2e39f79e":"# Name column","26434293":"# Exploratory-Data-Analysis","44d261dd":"\n* now we have 8 features and one(survived) outcome feature.\n* 891 total number of record\n ","9c03e9cc":"<center><h1 style=\"font-size:300%;\"><b style=\"color:red;\">Titanic EDA and Cleaning<\/b><\/h1><\/center>","c4486cd7":"# Embarked column","8b24a7ed":"# Age Column","b0b2bd02":"* here we are droping passengerId bcoz there is no need for prediction\n* we droping Cabin bcoz there is 80% NaN value and ticket also\n* Age & Embarked have less missing value so we simply fill it using pandas fillna","13aa84a2":"here we easily findout that which features are important to survived . we also see data dependance","58152ebd":"* here we can see that 1st class Passenger have more chance to Survived\n* 3ed class passanger have more chance to Dead** ","2dcce607":"### Bubbled Scatter","adc36e6d":"**now we can replace many titles with a more comman name as Rare**","f22d6a55":" * It seem data is balanced there are 342 people survived and 549 is dead\n * This is over outcome feature we need to predict on testing data ","159470fa":"# Fare column","7ef38d83":"* So we can say people have 0 parents have more chance to dead\n* 95 % passenger have 0 ,1 or 2 parents rest are we considerd as outlier\nNow we are going to remove those outliers ","f79f6ed8":"### pair plot","0ac00359":"* Now we going to encode featue sex in Rank 0 for male and 1 for female","175f43ec":" # Data Preprocessing","17018edf":"# Pclass column\n","f5a11d27":"**here we use histogram .A histogram displays the shape and spread of continuous sample data.**","ba062ca1":"# Survived column"}}