{"cell_type":{"c5fad5b6":"code","7f001523":"code","6eb10b34":"code","b4acc77a":"code","ccb417aa":"code","c3765463":"code","da2974ae":"code","40a3ae3a":"code","de4206b0":"code","6cd73bd2":"code","60684d11":"code","1e788a19":"code","880c19ab":"code","6b0a9844":"code","8a335a99":"code","355f2231":"code","be591959":"markdown","bf3a1fed":"markdown","782edfe6":"markdown","3de9604f":"markdown","329f389e":"markdown","f7750dd0":"markdown","bdb18de6":"markdown","927f7885":"markdown"},"source":{"c5fad5b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly.express as px\n\ntry:\n    import apyori\nexcept:\n    !pip install apyori\n\nfrom apyori import apriori\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f001523":"data = pd.read_csv(\"\/kaggle\/input\/groceries-dataset\/Groceries_dataset.csv\")\nprint(\"Data Dimension:\", data.shape)\ndata.head()","6eb10b34":"data.isnull().any()","b4acc77a":"print(\"Total number of unique products are:\", len(data['itemDescription'].unique()))","ccb417aa":"#Top 10 frequently sold products\nprint(\"Top 10 frequently sold products(Tabular Representation)\")\nx = data['itemDescription'].value_counts().sort_values(ascending=False)[:10]\nx","c3765463":"fig = px.bar(x= x.index, y= x.values)\nfig.update_layout(title_text= \"Top 10 frequently sold products (Graphical Representation)\", xaxis_title= \"Products\", yaxis_title=\"Count\")\nfig.show()","da2974ae":"# Exploring Higher sales by time of the year:\ndata[\"Year\"] = data['Date'].str.split(\"-\").str[-1]\ndata[\"Month-Year\"] = data['Date'].str.split(\"-\").str[1] + \"-\" + data['Date'].str.split(\"-\").str[-1]\ndata.head()","40a3ae3a":"fig1 = px.bar(data[\"Month-Year\"].value_counts(ascending=False), \n              orientation= \"v\", \n              color = data[\"Month-Year\"].value_counts(ascending=False),\n               labels={'value':'Count', 'index':'Date','color':'Meter'})\n\nfig1.update_layout(title_text=\"Exploring higher sales by the date\")\n\nfig1.show()","de4206b0":"products = data['itemDescription'].unique()","6cd73bd2":"#one hot encoding the products:\n\ndummy = pd.get_dummies(data['itemDescription'])\ndata.drop(['itemDescription'], inplace =True, axis=1)\n\ndata = data.join(dummy)\n\ndata.head()","60684d11":"# Transaction: If a customer bought multiple products in one day, it will be considered as 1 transaction:\n\ndata1 = data.groupby(['Member_number', 'Date'])[products[:]].sum()\ndata1 = data1.reset_index()[products]\n\nprint(\"New Dimension\", data1.shape)\ndata1.head()","1e788a19":"#Replacing all non-zero values with the name of the product:\n\ndef product_names(x):\n    for product in products:\n        if x[product] >0:\n            x[product] = product\n    return x\n\ndata1 = data1.apply(product_names, axis=1)\ndata1.head()","880c19ab":"print(\"Total Number of Transactions:\", len(data1))","6b0a9844":"#Removing Zeros, Extracting the list of items bought per customer\n\nx = data1.values\nx = [sub[~(sub==0)].tolist() for sub in x if sub [sub != 0].tolist()]\ntransactions = x\ntransactions[0:10]","8a335a99":"rules = apriori(transactions, min_support = 0.00030, min_confidence = 0.05, min_lift = 3, max_length = 2, target = \"rules\")\nassociation_results = list(rules)\nprint(association_results[0])","355f2231":"for item in association_results:\n    \n    pair = item[0]\n    items = [x for x in pair]\n    \n    print(\"Rule : \", items[0], \" -> \" + items[1])\n    print(\"Support : \", str(item[1]))\n    print(\"Confidence : \",str(item[2][0][2]))\n    print(\"Lift : \", str(item[2][0][3]))\n    \n    print(\"=============================\") ","be591959":"# Association Rule - Market Basket Analysis\n- Affinity analysis is a data analysis and data mining technique that discovers co-occurrence relationships among different items.\n- Market basket analysis is a technique which identifies the stength of association between pairs of products purchased together.\n<br><br>\n- It is good to have a threshold metric for association rules.<br>\n     The two main options are \"confidence\" and \"lift\".\n- **Confidence** is the proportion of all baskets of the selected itemset that also contains the consequent item.\n\n- **Lift** is the influence that an itemset has on the consequent item. ","bf3a1fed":"<div class=\"alert alert - block alert-info\">\n<h1> Table of Contents <\/h1><\/div> <a class =\"anchor\" id = \"0.1\"><\/a>\n\n1. [Importing Libraries](#1)\n2. [Loading Dataset](#2)\n3. [Data Exploration](#3)\n4. [Feature Engineering](#4)\n5. [Apriori Algorithm](#5)","782edfe6":"<div class =\"alert alert - block alert-warning\">\n    <h4>Observations <\/h4><\/div>\n- Milk is purchased the highest followed by vegetables <br>\n- The most purchases are during August\/Sepetember, while February\/March has the leats demands","3de9604f":"<div class =\"alert alert - block alert-info\">\n    <h1> 2. Loading Dataset<\/h1><\/div><a class =\"anchor\" id = \"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","329f389e":"<div class =\"alert alert - block alert-info\">\n    <h1>5. Apriori Algorithm<\/h1><\/div><a class=\"anchor\" id =\"5\"><\/a>\n    \n[Back to Table of Contents](#0.1)","f7750dd0":"<div class=\"alert alert - block alert-info\">\n<h1>1. Importing Libraries <\/h1><\/div> <a class =\"anchor\" id = \"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","bdb18de6":"<div class =\"alert alert - block alert-info\">\n    <h1> 4. Feature Engineering<\/h1><\/div><a class=\"anchor\" id =\"4\"><\/a>\n    \n[Back to Table of Contents](#0.1)","927f7885":"<div class =\"alert alert - block alert-info\">\n    <h1> 3. Data Exploration<\/h1><\/div><a class=\"anchor\" id =\"3\"><\/a>\n    \n[Back to Table of Contents](#0.1)"}}