{"cell_type":{"e1685b61":"code","7b98ec80":"code","3efa0987":"code","2fce112d":"code","35fbd0d2":"code","e212eaa7":"code","e076e264":"code","c22cfb73":"code","7194cb12":"code","bff26e36":"code","6fa9340a":"code","964014c7":"code","7a0a84d3":"code","0a768059":"code","dc1ce982":"code","b7d12ad5":"code","c51a8a92":"code","71dc7c4c":"code","e2a26000":"code","aa2a39d7":"markdown","2a3ff7c6":"markdown","c08ca596":"markdown","106b7336":"markdown","79c4652e":"markdown","52fca1d9":"markdown","b7a5bc8e":"markdown","514e4d89":"markdown","df8db355":"markdown"},"source":{"e1685b61":"import numpy as np\nimport pandas as pd\nimport cv2, random, os\nfrom PIL import Image\nfrom tqdm.notebook import tqdm","7b98ec80":"ls  ..\/input\/tuberculosis-tb-chest-xray-dataset\/TB_Chest_Radiography_Database","3efa0987":"images_path = '..\/input\/tuberculosis-tb-chest-xray-dataset\/TB_Chest_Radiography_Database\/Tuberculosis\/'\nos.listdir(images_path)[:10]","2fce112d":"from matplotlib import pyplot as plt\n\n# Reading the input image\nimg = cv2.imread(images_path+'Tuberculosis-675.png')\n\n# Converting to gray scale image from 3 channels to single channel\ngray_img = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\nplt.figure(figsize=(10,10))\nplt.imshow(gray_img,cmap=\"gray\")","35fbd0d2":"\nhist=cv2.calcHist(gray_img,[0],None,[256],[0,256])\ngray_img_eqhist=cv2.equalizeHist(gray_img)\nhist1=cv2.calcHist(gray_img_eqhist,[0],None,[256],[0,256])\n\nplt.subplot(121)\nplt.title(\"gray Image\")\nplt.plot(hist)\nplt.subplot(122)\nplt.title(\"hist_equal\")\nplt.plot(hist1)\nplt.show()","e212eaa7":"# applying histogram equalization\n\neqhist_images=np.concatenate((gray_img,gray_img_eqhist),axis=1)\nplt.figure(figsize=(20,20))\nplt.imshow(eqhist_images,cmap=\"gray\")\nplt.axis('OFF')\nplt.title('Gray Image                                                                     Histogram Equalization Image')\n\nplt.show()","e076e264":"clahe=cv2.createCLAHE(clipLimit=3)\ngray_img_clahe=clahe.apply(gray_img_eqhist)\nimages=np.concatenate((gray_img, gray_img_eqhist, gray_img_clahe),axis=1)\nplt.figure(figsize=(20,20))\nplt.imshow(images,cmap=\"gray\")\nplt.axis('OFF')\nplt.title('Gray Image                                      Histogram Equalization Image                                          CLAHE Image ')\nplt.show()","c22cfb73":"image_complement = cv2.bitwise_not(gray_img)\nplt.figure(figsize=(20,20))\nplt.imshow(np.hstack((gray_img, image_complement)),cmap='gray')\nplt.title('Gray Image                                                                     Complement Image')\nplt.show()","7194cb12":"img = cv2.imread(images_path+os.listdir(images_path)[9])\ngray_img = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)  \n\ngray_img = gray_img\/255.0\nim_power_law_transformation = cv2.pow(gray_img, 0.6)\nplt.figure(figsize=(20,20))\nplt.imshow(np.hstack((gray_img*255, im_power_law_transformation*255)),cmap='gray')\nplt.title('Gray Image                                                                     Gamma Image')\nplt.show()\n# cv2.imwrite(os.listdir(images_path)[9],im_power_law_transformation*255)","bff26e36":"def bcet(img):\n    Lmin = np.min(img) # MINIMUM OF INPUT IMAGE\n    Lmax = np.max(img) # MAXIMUM OF INPUT IMAGE\n    Lmean = np.mean(img) #MEAN OF INPUT IMAGE\n    LMssum = np.mean(img * img) #MEAN SQUARE SUM OF INPUT IMAGE\n\n    Gmin = 0 #MINIMUM OF OUTPUT IMAGE\n    Gmax = 255 #MAXIMUM OF OUTPUT IMAGE\n    Gmean = 110 #MEAN OF OUTPUT IMAGE\n\n    bnum = Lmax * Lmax *(Gmean-Gmin) - LMssum*(Gmax-Gmin) + Lmin * Lmin *(Gmax-Gmean)\n    bden = 2*(Lmax*(Gmean-Gmin)-Lmean*(Gmax-Gmin)+Lmin*(Gmax-Gmean))\n\n    b = bnum\/bden\n\n    a = (Gmax-Gmin)\/((Lmax-Lmin)*(Lmax+Lmin-2*b))\n\n    c = Gmin - a*(Lmin-b) * (Lmin-b)\n\n    y = a*(img-b) * (img-b) +c #PARABOLIC FUNCTION\n    y = np.array(y, dtype=np.uint8)\n\n    return y","6fa9340a":"bcet_img = bcet(gray_img)\nplt.figure(figsize=(20,20))\nplt.imshow(np.hstack((gray_img, im_power_law_transformation)),cmap='gray')\nplt.title('Gray Image                                                                     BCET Image')\nplt.show()","964014c7":"# images_path","7a0a84d3":"# ls","0a768059":"# os.makedirs('hist_equal')\n# os.makedirs('clahe')\n# os.makedirs('complement')\n# os.makedirs('gamma')\n# os.makedirs('bcet')\n\n# for ind, i in tqdm(enumerate(os.listdir(images_path))):\n#     img = cv2.imread(images_path+i)\n#     gray_img = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)    \n    \n#     img_eqhist = cv2.equalizeHist(gray_img)\n\n#     img_clahe = clahe.apply(gray_img_eqhist)\n\n#     img_complement = cv2.bitwise_not(gray_img)\n    \n#     img_bcet = bcet(gray_img)\n    \n#     gray_img = gray_img\/255.0\n#     img_gamma = cv2.pow(gray_img, 0.6)\n\n    \n    \n#     cv2.imwrite('hist_equal\/'+i, img_eqhist)\n#     cv2.imwrite('clahe\/'+i, img_clahe)\n#     cv2.imwrite('complement\/'+i, img_complement)\n#     cv2.imwrite('bcet\/'+i, img_bcet)\n#     cv2.imwrite('gamma\/'+i, img_gamma*255)","dc1ce982":"# ls","b7d12ad5":"# for i in ['hist_equal', 'clahe', 'complement', 'gamma', 'bcet']:\n#     print(i, len(os.listdir(i)),os.listdir(i)[:8])\n#     img = cv2.imread(i+'\/'+os.listdir(i)[0])\n#     img1 = cv2.imread(i+'\/'+os.listdir(i)[1])\n#     img2 = cv2.imread(i+'\/'+os.listdir(i)[2])\n#     img3 = cv2.imread(i+'\/'+os.listdir(i)[3])\n#     img4 = cv2.imread(i+'\/'+os.listdir(i)[4])\n#     img5 = cv2.imread(i+'\/'+os.listdir(i)[5])\n#     img6 = cv2.imread(i+'\/'+os.listdir(i)[6])\n#     img7 = cv2.imread(i+'\/'+os.listdir(i)[7])\n#     plt.figure(figsize=(20,20))\n#     plt.imshow(np.hstack([img, img1, img2, img3, img4, img5, img6, img7]))\n#     plt.show()","c51a8a92":"# mkdir total","71dc7c4c":"# !cp -r clahe total\/clahe\n# !cp -r gamma total\/gamma\n# !cp -r complement total\/complement\n# !cp -r hist_equal total\/hist_equal\n# !cp -r bcet total\/bcet","e2a26000":"# !zip -r total.zip total","aa2a39d7":"#### Run the above cell to created zip file and download","2a3ff7c6":"# Creating Datasets\n\n* To create folders for each augmentation and to download. Please enable the below cells and download the dataset.","c08ca596":"### Contrast Limited Adaptive Histogram Equalization(CLAHE)","106b7336":"### Gamma correction (Works well with chest X-RAY images. Even worked well for covid detection)","79c4652e":"Five different image enhancement techniques: \n==========================================\n\n* Histogram equalization (HE), \n* Contrast limited adaptive histogram equalization (CLAHE), \n* Image complement, \n* **Gamma correction (Works really well)** and \n* Balance Contrast Enhancement Technique (BCET)\n\nThese techniques are implemented by reffering the below paper.\n\nRef paper: https:\/\/arxiv.org\/pdf\/2012.02238.pdf\n","52fca1d9":"<a href=\"total.zip\">TO Download Please click this<\/a>","b7a5bc8e":"### Histogram Equalization","514e4d89":"### Image complement","df8db355":"### Balance Contrast Enhancement Technique (BCET)"}}