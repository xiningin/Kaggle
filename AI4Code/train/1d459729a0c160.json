{"cell_type":{"f19d34f7":"code","27ffb700":"code","be47c8c2":"code","965b0b70":"code","ba4383fe":"code","14543ba5":"code","f183e469":"code","adbf8d14":"code","d4f2b5ec":"code","7bbaf4be":"code","c74102a9":"code","cb937736":"code","7f53059a":"code","ed5cca1d":"code","8fa8b17e":"code","53b617a6":"code","fa9c6559":"markdown","80b5ecb4":"markdown","4ceeebc8":"markdown","9add761c":"markdown","abb054a9":"markdown","971f00f2":"markdown","46aca4bc":"markdown"},"source":{"f19d34f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27ffb700":"#Read dataset from price.csv as dataset variable\ndataset=pd.read_csv('\/kaggle\/input\/nyse\/prices.csv')","be47c8c2":"#Showing the list of dataset that we have\ndataset","965b0b70":"dataset.isnull().sum() # To make sure theres no 0 \"zero\" data on the dataset","ba4383fe":"dataset.isna().any() # To make sure theres no notavaible data or \"NaN\" data on the dataset ","14543ba5":"dataset.info() # To see The information of type of data from dataset","f183e469":"udataset = dataset[dataset['symbol'] == 'AAL'] # we can just change the 'AAL' with other symbol company","adbf8d14":"udataset","d4f2b5ec":"udataset['open'].plot(figsize=(16,6)) #Ploting \"open\" from udataset ","7bbaf4be":"data = pd.DataFrame(udataset)\ndata","c74102a9":"sigmaxy = 0; sigmax = 0; sigmaxs= 0 #initialitation variable\ntdata = len(udataset.open) #total data\nx = np.linspace(0,tdata-1, tdata)#time stamp as list from 0 to total of open dataset \ny = data.open","cb937736":"# Calculation finding alpha and beta \nsigmax  = x.sum()\nsigmay  = y.sum()\nsigmaxy = (y*x).sum()\nsigmaxs = (x**2).sum()\nymean = sigmay\/tdata\nxmean = sigmax\/tdata\nbeta = (tdata*sigmaxy - sigmax*sigmay)\/(tdata*sigmaxs - sigmax**2)\nalpha = ymean - beta*xmean\nprint('parameter a', alpha)\nprint('parameter b', beta)","7f53059a":"ypred = beta*x + alpha\nplt.figure(figsize=(16, 6))\nplt.plot(x,y, color='blue', linewidth = 0.5)\nplt.plot(x, ypred, color='red')","ed5cca1d":"def lsma(n, tdata): #least square moving averag, data integer\n  plt.clf()\n  plt.figure(figsize=(16, 6))\n  for j in range(0, tdata-1):\n    a = x[j:j+n] ## var x\n    b = y[j:j+n] ## var y \n    #print(a,b) ## remove \"#\" to see the calculation of uses data\n    sigmax  = a.sum()\n    sigmay  = b.sum()\n    sigmaxy = (a*b).sum()\n    sigmaxs = (a**2).sum()\n    ymean = sigmay\/tdata\n    xmean = sigmax\/tdata\n    \n    beta = (tdata*sigmaxy - sigmax*sigmay)\/(tdata*sigmaxs - sigmax**2)\n    alpha = ymean - beta*xmean \n    #print(beta,alpha) ## remove \"#\" to see the result of alpha and beta\n    ypred = beta*a + alpha\n    plt.plot(a,b, color='blue', linewidth = 0.5)\n    plt.scatter(j, np.mean(ypred), color='red', s = 1)","8fa8b17e":"lsma50 = lsma(50, tdata) #sequence 10 data per regresion","53b617a6":"lsma100 = lsma(100, tdata)","fa9c6559":"The data we used significanly lower just with 251 rows and 7 columns is because we just selecting the data with WLTW row or Willis Towers Watson PLC Company.\n","80b5ecb4":"the regresion is not too good to be analyzed, so we can use moving average as addition. where we count regreseion every sequence.","4ceeebc8":"**Least Square Moving Average (LSMA)**","9add761c":"![image.png](attachment:f366f9f0-f74f-4f6d-84b1-fa7e13f515cd.png)\n","abb054a9":"![image.png](attachment:521e8ede-bde0-4cac-9a42-edc20e366c3d.png)","971f00f2":"As we know the data is so much is theres multiple company in the dataset so to make it simple i will use just one company and we can change it later just by changing the code with symbol of the company","46aca4bc":"**USING LEAST SQUARE**"}}