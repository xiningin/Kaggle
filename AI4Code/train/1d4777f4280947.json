{"cell_type":{"7ace67a7":"code","d6f10bb7":"code","94ec6a37":"code","b617cf9e":"code","e025c451":"code","eedff0c9":"code","9fea0f1d":"code","e294ac3d":"code","97b4f185":"code","5c013ae2":"code","2e39a5b7":"code","4fe52150":"markdown","80e031ad":"markdown","33b7ea12":"markdown","7b62115f":"markdown","99dea4a9":"markdown","5259f747":"markdown"},"source":{"7ace67a7":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import LinearSVC, SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier","d6f10bb7":"data = pd.read_csv('..\/input\/early-stage-diabetes-risk-prediction-dataset\/diabetes_data_upload.csv')","94ec6a37":"data","b617cf9e":"data.info()","e025c451":"{column: len(data[column].unique()) for column in data.columns}","eedff0c9":"def preprocess_inputs(df):\n    df = df.copy()\n    \n    # Binary-encode Gender column\n    df['Gender'] = df['Gender'].replace({'Female': 0, 'Male': 1})\n    \n    # Binary-encode the symptom columns\n    for column in df.columns.drop(['Age', 'Gender', 'class']):\n        df[column] = df[column].replace({'No': 0, 'Yes': 1})\n    \n    # Split df into X and y\n    y = df['class']\n    X = df.drop('class', axis=1)\n    \n    # Train-test split\n    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, shuffle=True, random_state=1)\n    \n    # Scale X\n    scaler = StandardScaler()\n    scaler.fit(X_train)\n    X_train = pd.DataFrame(scaler.transform(X_train), index=X_train.index, columns=X_train.columns)\n    X_test = pd.DataFrame(scaler.transform(X_test), index=X_test.index, columns=X_test.columns)\n    \n    return X_train, X_test, y_train, y_test","9fea0f1d":"X_train, X_test, y_train, y_test = preprocess_inputs(data)","e294ac3d":"X_train","97b4f185":"y_train","5c013ae2":"models = {\n    \"                   Logistic Regression\": LogisticRegression(),\n    \"                   K-Nearest Neighbors\": KNeighborsClassifier(),\n    \"                         Decision Tree\": DecisionTreeClassifier(),\n    \"Support Vector Machine (Linear Kernel)\": LinearSVC(),\n    \"   Support Vector Machine (RBF Kernel)\": SVC(),\n    \"                        Neural Network\": MLPClassifier(),\n    \"                         Random Forest\": RandomForestClassifier(),\n    \"                     Gradient Boosting\": GradientBoostingClassifier()\n}\n\nfor name, model in models.items():\n    model.fit(X_train, y_train)\n    print(name + \" trained.\")","2e39a5b7":"for name, model in models.items():\n    print(name + \": {:.2f}%\".format(model.score(X_test, y_test) * 100))","4fe52150":"# Preprocessing","80e031ad":"# Task for Today  \n\n***\n\n## Diabetes Risk Prediction  \n\nGiven *patient symptom data*, let's try to predict whether a given patient will be **at risk for diabetes** or not.\n\nWe will use a variety of classification models to make our predictions.","33b7ea12":"# Results","7b62115f":"# Getting Started","99dea4a9":"# Training","5259f747":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/zWnPsPdivKM"}}