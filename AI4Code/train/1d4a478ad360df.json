{"cell_type":{"549c0bd5":"code","1ddda53a":"code","5db93dde":"code","26ba9985":"code","83a2a272":"code","2ba22512":"code","e759930b":"code","278e5e65":"code","3a91280f":"code","a927796a":"code","fb6fceb3":"code","19bc9fd6":"code","2672e1bd":"code","ca6e953b":"code","ad7b2a03":"code","042c2423":"code","947807ed":"code","40d89ec2":"code","3801f26d":"code","623da083":"code","c355c259":"code","f9f038f7":"code","6864081b":"code","7c41fbce":"code","ca216bcf":"code","21bc3cd4":"code","83a39c12":"code","74b48490":"code","f7e6696d":"code","31792ff8":"code","81c021d6":"code","fa2ca582":"code","8c42dee2":"code","74f44c8e":"code","606aa2c2":"code","2f8ba23b":"code","9c3f0b47":"code","cf47ca1a":"code","2920663e":"code","4cce684c":"code","61da1161":"code","5252af56":"code","69045cc8":"code","dc9fc646":"code","93080bdc":"code","8ce4826e":"code","891cfce7":"code","92ce176d":"code","960aedea":"code","35bda969":"code","efff5a98":"code","d76e3fce":"code","85425563":"code","98e7cd95":"code","554213e5":"code","9b1335e6":"code","f15e7743":"code","553abde2":"code","15c93456":"code","fdb345bc":"code","b95cc629":"code","fb3eca31":"code","59530c6b":"code","af8c19c5":"code","86abf4f1":"code","82d355fa":"code","f28020f6":"code","97cc5749":"code","80c29019":"code","a43ca8a9":"code","791adf34":"code","2c951804":"code","fbd2d8ce":"code","ab8977c5":"code","198feed4":"code","d37fe3e4":"code","7bc9047f":"code","aa1eb9ec":"code","3d0fcf1d":"code","434039c9":"code","c90b04eb":"code","fb3bfad2":"code","1a40b05c":"code","f3b55504":"markdown","628a5c5a":"markdown","bdd6600b":"markdown"},"source":{"549c0bd5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ddda53a":"import matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom pylab import rcParams\n# figure size in inches\n%matplotlib inline\nimport plotly.graph_objs as go\nimport plotly\nplotly.offline.init_notebook_mode()\n","5db93dde":"df_health =  pd.read_csv('..\/input\/health-nutrition-and-population-statistics-2016\/3eecf100-8116-4fd4-8a05-61c7301e0bb0_Data.csv',index_col=0)","26ba9985":"df = pd.read_csv('\/kaggle\/input\/obesity-among-adults-by-country-19752016\/obesity-cleaned.csv', index_col=0)","83a2a272":"df_country = pd.read_csv(\"\/kaggle\/input\/country-population-from-1960-to-2018\/API_SP.POP.TOTL_DS2_en_csv_v3_988606.csv\")","2ba22512":"df_country.head()","e759930b":"df_country1 = df_country[[\"Country Name\",\"2016\"]]","278e5e65":"df_country1.head()","3a91280f":"df.head()","a927796a":"df_country1[\"Country Name\"].unique()","fb6fceb3":"df.Country.unique()","19bc9fd6":"countrymap = {'Afghanistan':'Afghanistan','Albania':'Albania','Algeria':'Algeria','Andorra':'Andorra','Angola':'Angola','Antigua and Barbuda':'Antigua and Barbuda','Argentina':'Argentina','Armenia':'Armenia','Australia':'Australia','Austria':'Austria','Azerbaijan':'Azerbaijan','Bahamas':'Bahamas','Bahrain':'Bahrain','Bangladesh':'Bangladesh','Barbados':'Barbados','Belarus':'Belarus','Belgium':'Belgium','Belize':'Belize','Benin':'Benin','Bhutan':'Bhutan','Bosnia and Herzegovina':'Bosnia and Herzegovina','Botswana':'Botswana','Brazil':'Brazil','Brunei Darussalam':'Brunei Darussalam','Bulgaria':'Bulgaria','Burkina Faso':'Burkina Faso','Burundi':'Burundi','Cabo Verde':'Cabo Verde','Cambodia':'Cambodia','Cameroon':'Cameroon','Canada':'Canada','Central African Republic':'Central African Republic','Chad':'Chad','Chile':'Chile','China':'China','Colombia':'Colombia','Comoros':'Comoros','Congo':'Congo','Congo, Dem. Rep.':'Democratic Republic of the Congo','Costa Rica':'Costa Rica','Croatia':'Croatia','Cuba':'Cuba','Cyprus':'Cyprus','Czech Republic':'Czechia','Denmark':'Denmark','Djibouti':'Djibouti','Dominica':'Dominica','Dominican Republic':'Dominican Republic','Ecuador':'Ecuador','Egypt':'Egypt','El Salvador':'El Salvador','Equatorial Guinea':'Equatorial Guinea','Eritrea':'Eritrea','Estonia':'Estonia','Eswatini':'Eswatini','Ethiopia':'Ethiopia','Fiji':'Fiji','Finland':'Finland','France':'France','Gabon':'Gabon','Gambia':'Gambia','Georgia':'Georgia','Germany':'Germany','Ghana':'Ghana','Greece':'Greece','Grenada':'Grenada','Guatemala':'Guatemala','Guinea':'Guinea','Guinea-Bissau':'Guinea-Bissau','Guyana':'Guyana','Haiti':'Haiti','Honduras':'Honduras','Hungary':'Hungary','Iceland':'Iceland','India':'India','Indonesia':'Indonesia','Iran, Islamic Rep.':'Iran (Islamic Republic of)','Iraq':'Iraq','Ireland':'Ireland','Israel':'Israel','Italy':'Italy','Jamaica':'Jamaica','Japan':'Japan','Jordan':'Jordan','Kazakhstan':'Kazakhstan','Kenya':'Kenya','Kiribati':'Kiribati','Korea, Dem. People\u2019s Rep.':'Democratic Peoples Republic of Korea','Korea, Rep.':'Republic of Korea','Kuwait':'Kuwait','Lao PDR':'\"Lao Peoples Democratic Republic\"','Latvia':'Latvia','Lebanon':'Lebanon','Lesotho':'Lesotho','Liberia':'Liberia','Libya':'Libya','Lithuania':'Lithuania','Luxembourg':'Luxembourg','Madagascar':'Madagascar','Malawi':'Malawi','Malaysia':'Malaysia','Maldives':'Maldives','Mali':'Mali','Malta':'Malta','Marshall Islands':'Marshall Islands','Mauritania':'Mauritania','Mauritius':'Mauritius','Mexico':'Mexico','Micronesia, Fed. Sts.':'Micronesia (Federated States of)','Moldova':'Republic of Moldova','Monaco':'Monaco','Mongolia':'Mongolia','Montenegro':'Montenegro','Morocco':'Morocco','Mozambique':'Mozambique','Myanmar':'Myanmar','Namibia':'Namibia','Nauru':'Nauru','Nepal':'Nepal','Netherlands':'Netherlands','New Zealand':'New Zealand','Nicaragua':'Nicaragua','Niger':'Niger','Nigeria':'Nigeria','North Macedonia':'Republic of North Macedonia','Norway':'Norway','Oman':'Oman','Pakistan':'Pakistan','Palau':'Palau','Panama':'Panama','Papua New Guinea':'Papua New Guinea','Paraguay':'Paraguay','Peru':'Peru','Philippines':'Philippines','Poland':'Poland','Portugal':'Portugal','Qatar':'Qatar','Romania':'Romania','Russian Federation':'Russian Federation','Rwanda':'Rwanda','Samoa':'Samoa','San Marino':'San Marino','Sao Tome and Principe':'Sao Tome and Principe','Saudi Arabia':'Saudi Arabia','Senegal':'Senegal','Serbia':'Serbia','Seychelles':'Seychelles','Sierra Leone':'Sierra Leone','Singapore':'Singapore','Slovenia':'Slovenia','Solomon Islands':'Solomon Islands','Somalia':'Somalia','South Africa':'South Africa','South Sudan':'South Sudan','Spain':'Spain','Sri Lanka':'Sri Lanka','St. Kitts and Nevis':'Saint Kitts and Nevis','St. Lucia':'Saint Lucia','St. Vincent and the Grenadines':'Saint Vincent and the Grenadines','Sudan':'Sudan','Sudan':'Sudan (former)','Suriname':'Suriname','Sweden':'Sweden','Switzerland':'Switzerland','Syrian Arab Republic':'Syrian Arab Republic','Tajikistan':'Tajikistan','Tanzania':'United Republic of Tanzania','Thailand':'Thailand','Timor-Leste':'Timor-Leste','Togo':'Togo','Tonga':'Tonga','Trinidad and Tobago':'Trinidad and Tobago','Tunisia':'Tunisia','Turkey':'Turkey','Turkmenistan':'Turkmenistan','Tuvalu':'Tuvalu','Uganda':'Uganda','Ukraine':'Ukraine','United Arab Emirates':'United Arab Emirates','United Kingdom':'United Kingdom of Great Britain and Northern Ireland','United States':'United States of America','Uruguay':'Uruguay','Uzbekistan':'Uzbekistan','Vanuatu':'Vanuatu','Venezuela, RB':'Venezuela (Bolivarian Republic of)','Vietnam':'Viet Nam','Yemen':'Yemen','Zambia':'Zambia','Zimbabwe':'Zimbabwe'}","2672e1bd":"df2 = df_country1.copy()","ca6e953b":"df2['Country Name'] = df2['Country Name'].map(countrymap)","ad7b2a03":"df3 = df2.rename(columns={\"Country Name\": \"Country\"})","042c2423":"df4 = df3.dropna()","947807ed":"df4.head()","40d89ec2":"df_country_population = df4.copy()","3801f26d":"df['Sex'].unique()","623da083":"df.isna().sum()","c355c259":"df.Country.unique()","f9f038f7":"df.Year.unique()","6864081b":"x = \"0.5 [0.2-1.1]\"","7c41fbce":"df[\"Obesity (%)\"].unique()","ca216bcf":"df[\"Obesity\"]= df[\"Obesity (%)\"].apply(lambda x: (x.split(\" \")[0]))","21bc3cd4":"df2 = df[df[\"Obesity\"] != \"No\"]","83a39c12":"df2.head()","74b48490":"df2[\"Obesity\"] = df2[\"Obesity\"].apply(lambda x: float(x))","f7e6696d":"df2.info()","31792ff8":"df3 = df2.drop(\"Obesity (%)\",axis=\"columns\")","81c021d6":"df3.head()","fa2ca582":"rcParams['figure.figsize'] = 16, 8\nall_sexes = df3[df3[\"Sex\"]==\"Both sexes\"].groupby(\"Year\").Obesity.mean()\nmale = df3[df3[\"Sex\"]==\"Male\"].groupby(\"Year\").Obesity.mean()\nfemale = df3[df3[\"Sex\"]==\"Female\"].groupby(\"Year\").Obesity.mean()\nplt.plot(all_sexes,linestyle='solid',marker='o',label=\"Obesity% of both Sexes\")\nplt.plot(male,linestyle='dashed',marker='.',label=\"Obesity% of male\")\nplt.plot(female,linestyle='dashdot',marker='^',label=\"Obesity% female\")\nplt.xlabel('Year', fontsize=20)\nplt.ylabel('Obesity%', fontsize=20)\nplt.title('Mean Obesity by Year', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","8c42dee2":"fig = plt.figure(figsize=(16,8))\n \ntop_obese_countries = df3[(df3[\"Year\"]==2016) & (df3[\"Sex\"]==\"Both sexes\") & (df3[\"Obesity\"] > 33)].groupby(\"Country\").Obesity.sum().sort_values(ascending=False)\ntop_obese_countries.plot(kind=\"bar\",title='Countries with 1\/3 of population Obese in 2016', fontsize=20)","74f44c8e":"countries = df3[\"Country\"].unique()\n","606aa2c2":"years = df3[\"Year\"].unique()\n","2f8ba23b":"# One time code.\n'''df_all_sexes = pd.DataFrame()\ndf_male = pd.DataFrame()\ndf_female = pd.DataFrame()\nd = {}\nm = {}\nf = {}\nfor country in countries:\n    d[\"Country\"] = country\n    m[\"Country\"] = country\n    f[\"Country\"] = country\n    for year in years:\n        d[year] = df3[(df3[\"Country\"] == country) & (df3[\"Year\"] == year) & (df3[\"Sex\"]==\"Both sexes\")].Obesity.iloc[0]\n        m[year] = df3[(df3[\"Country\"] == country) & (df3[\"Year\"] == year) & (df3[\"Sex\"]==\"Male\")].Obesity.iloc[0]\n        f[year] = df3[(df3[\"Country\"] == country) & (df3[\"Year\"] == year) & (df3[\"Sex\"]==\"Female\")].Obesity.iloc[0]\n    df_all_sexes = df_all_sexes.append(d, ignore_index=True)\n    df_male = df_male.append(m, ignore_index=True)\n    df_female = df_female.append(f, ignore_index=True)'''","9c3f0b47":"#One time code to save the file to Output Directory\n#df_female.to_csv('..\/input\/eda-obesity-files\/df_female.csv', index=False)\n#df_male.to_csv('..\/input\/eda-obesity-files\/df_male.csv', index=False)\n#df_all_sexes.to_csv('..\/input\/eda-obesity-files\/df_all_sexes.csv', index=False)","cf47ca1a":"df_female = pd.read_csv('..\/input\/eda-obesity-files\/df_female.csv')\ndf_male = pd.read_csv('..\/input\/eda-obesity-files\/df_male.csv')\ndf_all_sexes = pd.read_csv('..\/input\/eda-obesity-files\/df_all_sexes.csv')","2920663e":"df_all_sexes.head()","4cce684c":"df_male.head()","61da1161":"df_female.head()","5252af56":"df_all_sexes[\"variation\"] = df_all_sexes[\"2016\"] - df_all_sexes[\"1975\"]\ndf_male[\"variation\"] = df_male[\"2016\"] - df_male[\"1975\"]\ndf_female[\"variation\"] = df_female[\"2016\"] - df_female[\"1975\"]","69045cc8":"df_all_sexes[\"variation\"].describe()","dc9fc646":"df_male[\"variation\"].describe()","93080bdc":"df_female[\"variation\"].describe()","8ce4826e":"df_all_sexes[df_all_sexes[\"variation\"] == df_all_sexes[\"variation\"].max()]","891cfce7":"df_female[df_female[\"variation\"] == df_female[\"variation\"].max()]","92ce176d":"df_male[df_male[\"variation\"] == df_male[\"variation\"].max()]","960aedea":"df_all_sexes[df_all_sexes[\"variation\"] == df_all_sexes[\"variation\"].min()]","35bda969":"fig = plt.figure()\nplt.subplot(2, 2, 1)\nrcParams['figure.figsize'] = 16, 8\nbins=np.linspace(0, 35, 5)\nplt.hist(df_male[\"variation\"],bins=bins, facecolor='yellow', label=\"Male\" )\nplt.xlabel('% Variation', fontsize=20)\nplt.title('Variation in ' + str(2016-1975) + 'Years', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 2)\nplt.hist(df_female[\"variation\"],bins=bins, facecolor='green', label=\"Female\" )\nplt.xlabel('% Variation', fontsize=20)\nplt.title('Variation in ' + str(2016-1975) + 'Years', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 3)\nplt.hist(df_all_sexes[\"variation\"],bins=bins,facecolor='blue', label=\"Both Sexes\")\nplt.xlabel('% Variation', fontsize=20)\nplt.title('Variation in ' + str(2016-1975) + 'Years', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","efff5a98":"rcParams['figure.figsize'] = 16, 8\nfig = plt.figure()\nplt.subplot(2, 2, 1)\ncountries = [\"India\",\"Pakistan\",\"Afghanistan\",\"Bangladesh\",\"Nepal\",\"Sri Lanka\",\"Bhutan\"]\nfor country in countries:\n    plt.plot(df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Year,df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Obesity, label=country )\nplt.xlabel('Year', fontsize=20)\nplt.title('Indian Subcontinent ', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 2)\ncountries = [\"Cambodia\",\"Indonesia\",\"Laos\",\"Malaysia\",\"Myanmar\",\"Philippines\",\"Singapore\",\"Thailand\",\"Vietnam\"]\nfor country in countries:\n    plt.plot(df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Year,df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Obesity, label=country )\nplt.xlabel('Year', fontsize=20)\nplt.title('South East Asia ', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 3)\ncountries = [\"China\",\"Japan\",\"Mongolia\",\"Democratic People's Republic of Korea\",\"Republic of Korea\"]\nfor country in countries:\n    plt.plot(df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Year,df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Obesity, label=country )\nplt.xlabel('Year', fontsize=20)\nplt.title('East Asia ', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 4)\ncountries = [\"Kazakhstan\",\"Kyrgyzstan\",\"Tajikistan\",\"Turkmenistan\",\"Uzbekistan\"]\nfor country in countries:\n    plt.plot(df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Year,df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Obesity, label=country )\nplt.xlabel('Year', fontsize=20)\nplt.title('Central Asia ', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","d76e3fce":"rcParams['figure.figsize'] = 16, 8\nfig = plt.figure()\nplt.subplot(2, 2, 1)\ncountries = [\"United States of America\",\"Mexico\",\"Canada\",\"Guatemala\",\"Cuba\"]\nfor country in countries:\n    plt.plot(df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Year,df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Obesity, label=country )\nplt.xlabel('Year', fontsize=20)\nplt.title('North Americas ', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.subplot(2, 2, 2)\ncountries = [\"Brazil\",\"Colombia\",\"Argentina\",\"Peru\",\"Venezuela\",\"Chile\",\"Paraguay\",\"Uruguay\"]\nfor country in countries:\n    plt.plot(df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Year,df3[(df3[\"Country\"]==country) & (df3[\"Sex\"]==\"Both sexes\")].Obesity, label=country )\nplt.xlabel('Year', fontsize=20)\nplt.title('South Americas ', fontsize=20)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","85425563":"df_country_population.head()","98e7cd95":"df_country_population1 = df_country_population.rename(columns={\"2016\": \"Population\"})","554213e5":"df8 = df3[(df3[\"Year\"]==2016) & (df3[\"Sex\"]==\"Both sexes\")]","9b1335e6":"df8.head()","f15e7743":"countries = df_country_population1.Country.unique()\ncountries_2 = df8.Country.unique()\ndf9 = pd.DataFrame()\nk= {}\nfor country in countries:\n    k[\"Country\"] = country\n    k[\"Population\"] = df_country_population1[df_country_population1[\"Country\"] == country].Population.iloc[0]\n    if country in countries_2:\n        k[\"Obesity\"] = df8[df8[\"Country\"] == country].Obesity.iloc[0]\n    df9 = df9.append(k, ignore_index=True)\ndf9.Obesity.unique()","553abde2":"df9.info()","15c93456":"#let us check non NA values\ndf9.isna().sum()","fdb345bc":"df9[\"Number_of_obese\"] = ((df9[\"Population\"] * df9[\"Obesity\"])\/100)","b95cc629":"df9.info()","fb3eca31":"df9[\"Number_of_obese\"].describe()","59530c6b":"fig = plt.figure(figsize=(16,8))\nrcParams['figure.figsize'] = 16, 8\ndf10 = df9[df9[\"Number_of_obese\"] > df9[\"Number_of_obese\"].mean()].sort_values(by=\"Number_of_obese\",ascending=True)\nplt.barh(df10[\"Country\"],df10[\"Number_of_obese\"])\nplt.ylabel('Countries', fontsize=20)\nplt.xlabel('Number of Obese people (as of 2016 data)')\nplt.grid(True)\nplt.xticks(rotation=90)\nplt.tight_layout()","af8c19c5":"#Plotting on the WorldMap using plotly\nx = df9.groupby(\"Country\")[\"Obesity\"].mean().sort_values()\ndata = dict(type = 'choropleth',\n            locations = x.index,\n            locationmode = 'country names',\n            colorscale= 'Portland',\n            text= x.index,\n            z=x,\n            colorbar = {'title':'Obesity %', 'len':200,'lenmode':'pixels' })\nlayout = dict(geo = {'scope':'world'},title=\"Obesity % around the world\")\ncol_map = go.Figure(data = [data],layout = layout)\ncol_map.show()","86abf4f1":"pd.options.display.max_columns = None\ndf_health.head()","82d355fa":"dfhealth1  = df_health.rename(columns={\"Country Name\":\"country\",\n\"Malnutrition prevalence, height for age (% of children under 5) [SH.STA.STNT.ZS]\":\"malnutrition_rate\",\n\"Adolescent fertility rate (births per 1,000 women ages 15-19) [SP.ADO.TFRT]\":\"adolescent_fertility_rate\",\n\"Age at first marriage, female [SP.DYN.SMAM.FE]\":\"female_age_first_marriage\",\n\"Age at first marriage, male [SP.DYN.SMAM.MA]\":\"male_age_first_marriage\",\n\"Age dependency ratio (% of working-age population) [SP.POP.DPND]\":\"working_age_dependency_ratio\",\n\"Age dependency ratio, old [SP.POP.DPND.OL]\":\"old_age_dependency_ratio\",\n\"Age dependency ratio, young [SP.POP.DPND.YG]\":\"young_age_dependency_ratio\",\n\"Birth rate, crude (per 1,000 people) [SP.DYN.CBRT.IN]\":\"birth_rate\",\n\"Capital health expenditure (% of GDP) [SH.XPD.KHEX.GD.ZS]\":\"capital_health_expenditure_gdp\",\n\"Community health workers (per 1,000 people) [SH.MED.CMHW.P3]\":\"community_health_workers\",\n\"Consumption of iodized salt (% of households) [SN.ITK.SALT.ZS]\":\"iodized_salt_consumption\",\n\"Current health expenditure (% of GDP) [SH.XPD.CHEX.GD.ZS]\":\"health_expenditure_gdp\",\n\"Current health expenditure per capita (current US$) [SH.XPD.CHEX.PC.CD]\":\"health_expenditure_usd\",\n\"Diabetes prevalence (% of population ages 20 to 79) [SH.STA.DIAB.ZS]\":\"diabetes_prevelance_rate\",\n\"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]\":\"physicians_rate\",\n\"Population growth (annual %) [SP.POP.GROW]\":\"population_growth_annual\",\n\"Population, female (% of total population) [SP.POP.TOTL.FE.ZS]\":\"population_growth_annual_female\",\n\"Population, male (% of total population) [SP.POP.TOTL.MA.ZS]\":\"population_growth_annual_male\",\n\"Primary completion rate, female (% of relevant age group) [SE.PRM.CMPT.FE.ZS]\":\"primary_completion_female\",\n\"Primary completion rate, male (% of relevant age group) [SE.PRM.CMPT.MA.ZS]\":\"primary_completion_male\",\n\"Primary completion rate, total (% of relevant age group) [SE.PRM.CMPT.ZS]\":\"primary_completion_total\",\n\"Public spending on education, total (% of GDP) [SE.XPD.TOTL.GD.ZS]\":\"spending_on_education_of_gdp\",\n\"Rural population [SP.RUR.TOTL]\":\"rural_population\",\n\"Rural population (% of total population) [SP.RUR.TOTL.ZS]\":\"rural_population_percent\",\n\"Rural population growth (annual %) [SP.RUR.TOTL.ZG]\":\"rural_population_growth_rate\",\n\"School enrollment, primary (% gross) [SE.PRM.ENRR]\":\"school_enrollment_gross\",\n\"School enrollment, primary, female (% gross) [SE.PRM.ENRR.FE]\":\"school_enrollment_female_gross\",\n\"School enrollment, primary, male (% gross) [SE.PRM.ENRR.MA]\":\"school_enrollment_male_gross\",\n\"School enrollment, secondary (% gross) [SE.SEC.ENRR]\":\"secondary_school_enrollment_gross\",\n\"School enrollment, secondary, female (% gross) [SE.SEC.ENRR.FE]\":\"secondary_school_enrollment_female_gross\",\n\"School enrollment, secondary, male (% gross) [SE.SEC.ENRR.MA]\":\"secondary_school_enrollment_male_gross\",\n\"Sex ratio at birth (male births per female births) [SP.POP.BRTH.MF]\":\"sex_ratio\",\n\"Share of women employed in the nonagricultural sector (% of total nonagricultural employment) [SL.EMP.INSV.FE.ZS]\":\"women_employement_nonagricultrure\",\n\"Smoking prevalence, females (% of adults) [SH.PRV.SMOK.FE]\":\"smoking_females_pct\",\n\"Smoking prevalence, males (% of adults) [SH.PRV.SMOK.MA]\":\"smoking_males_pct\",\n\"Smoking prevalence, total, ages 15+ [SH.PRV.SMOK]\":\"smoking_total_pct\",\n\"Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age) [SH.ALC.PCAP.LI]\":\"alcohol_consumption_per_capita\",\n\"Total alcohol consumption per capita, female (liters of pure alcohol, projected estimates, female 15+ years of age) [SH.ALC.PCAP.FE.LI]\":\"alcohol_consumption_female_per_capita\",\n\"Total alcohol consumption per capita, male (liters of pure alcohol, projected estimates, male 15+ years of age) [SH.ALC.PCAP.MA.LI]\":\"alcohol_consumption_male_per_capita\",\n\"Urban population (% of total population) [SP.URB.TOTL.IN.ZS]\":\"Urbanpopulation_pct\",\n\"Urban population growth (annual %) [SP.URB.GROW]\":\"Urbanpopulation_growth\"})","f28020f6":"dfhealth1.head()","97cc5749":"dfhealth2 = dfhealth1[[\"country\",\"malnutrition_rate\",\"adolescent_fertility_rate\",\"female_age_first_marriage\",\"male_age_first_marriage\",\"working_age_dependency_ratio\",\"old_age_dependency_ratio\",\"young_age_dependency_ratio\",\"birth_rate\",\"capital_health_expenditure_gdp\",\"community_health_workers\",\"iodized_salt_consumption\",\"health_expenditure_gdp\",\"health_expenditure_usd\",\"diabetes_prevelance_rate\",\"physicians_rate\",\"population_growth_annual\",\"population_growth_annual_female\",\"population_growth_annual_male\",\"primary_completion_female\",\"primary_completion_male\",\"primary_completion_total\",\"spending_on_education_of_gdp\",\"rural_population\",\"rural_population_percent\",\"rural_population_growth_rate\",\"school_enrollment_gross\",\"school_enrollment_female_gross\",\"school_enrollment_male_gross\",\"secondary_school_enrollment_gross\",\"secondary_school_enrollment_female_gross\",\"secondary_school_enrollment_male_gross\",\"sex_ratio\",\"women_employement_nonagricultrure\",\"smoking_females_pct\",\"smoking_males_pct\",\"smoking_total_pct\",\"alcohol_consumption_per_capita\",\"alcohol_consumption_female_per_capita\",\"alcohol_consumption_male_per_capita\",\"Urbanpopulation_pct\",\"Urbanpopulation_growth\"]]","80c29019":"dfhealth3 = dfhealth2.dropna()","a43ca8a9":"dfhealth3['country'] = dfhealth3['country'].map(countrymap)","791adf34":"dfhealth4 = dfhealth3.dropna()","2c951804":"dfhealth4.country.unique()","fbd2d8ce":"c  = ['malnutrition_rate', 'adolescent_fertility_rate',\n       'female_age_first_marriage', 'male_age_first_marriage',\n       'working_age_dependency_ratio', 'old_age_dependency_ratio',\n       'young_age_dependency_ratio', 'birth_rate',\n       'capital_health_expenditure_gdp', 'community_health_workers',\n       'iodized_salt_consumption', 'health_expenditure_gdp',\n       'health_expenditure_usd', 'diabetes_prevelance_rate', 'physicians_rate',\n       'population_growth_annual', 'population_growth_annual_female',\n       'population_growth_annual_male', 'primary_completion_female',\n       'primary_completion_male', 'primary_completion_total',\n       'spending_on_education_of_gdp', 'rural_population',\n       'rural_population_percent', 'rural_population_growth_rate',\n       'school_enrollment_gross', 'school_enrollment_female_gross',\n       'school_enrollment_male_gross', 'secondary_school_enrollment_gross',\n       'secondary_school_enrollment_female_gross',\n       'secondary_school_enrollment_male_gross', 'sex_ratio',\n       'women_employement_nonagricultrure', 'smoking_females_pct',\n       'smoking_males_pct', 'smoking_total_pct',\n       'alcohol_consumption_per_capita',\n       'alcohol_consumption_female_per_capita',\n       'alcohol_consumption_male_per_capita', 'Urbanpopulation_pct',\n       'Urbanpopulation_growth']","ab8977c5":"dfhealth5 = dfhealth4.copy()","198feed4":"def check_dots(x):\n    if x ==\"..\":\n        return np.NaN\n    else:\n        return float(x)\n","d37fe3e4":"for col in c:\n    dfhealth5.loc[:, col] = dfhealth5[col].apply(lambda x: check_dots(x))","7bc9047f":"dfhealth6= dfhealth5.drop(['secondary_school_enrollment_gross','secondary_school_enrollment_male_gross','secondary_school_enrollment_female_gross','primary_completion_male','primary_completion_total','primary_completion_female','physicians_rate','spending_on_education_of_gdp','malnutrition_rate','iodized_salt_consumption','community_health_workers','women_employement_nonagricultrure','male_age_first_marriage','female_age_first_marriage','diabetes_prevelance_rate'],axis=\"columns\")","aa1eb9ec":"dfhealth7 = dfhealth6.fillna(dfhealth6.mean())","3d0fcf1d":" dfn1 = pd.merge(left=dfhealth7, right=df9, left_on='country', right_on='Country')","434039c9":"dfn2 = dfn1.drop([\"Country\"],axis=\"columns\")","c90b04eb":"dfn2.head()","fb3bfad2":"corr = dfn2.corr()\ncorr.style.background_gradient(cmap='coolwarm').set_precision(2)","1a40b05c":"x = dfn2.groupby(\"Urbanpopulation_pct\")[\"Obesity\"].mean().sort_values()\n#y = dfn2.groupby(\"rural_population_percent\")[\"Obesity\"].mean().sort_values()\nplt.scatter(x.index,x)\n#plt.scatter(y.index,y)\nplt.grid(True)\nplt.xticks(rotation=90)\nplt.tight_layout()\nx","f3b55504":"Observations\n====================\n\n* Obesity rate of male & female follows the same curve, however, females are more susceptible to obesity than men\n* 15 countries have more than 1\/3 of population obese\n* 6 countries have more than 1\/2 of the population Obese i.e. Nauru, Cook Islands, Palau, Marshall Islands, Tuvalu, Niue\n* In past 41 years:\n\t* Average Variation of Obesity is 12% among the Men\n\t* Average Variation of Obesity is 14.5% among the Women\n\t* Tuvalu had variation for over 33.7% \n\t* VietNam has the least variation of 2%\n\t* Obesity Variation among females is on higher side then men\n* USA has the most number of Obese people, followed by China and India [Version 9]\n* Urbanization has contributed to Obesity, but it is not the only factor as the data is still distributed in the scatter plot\n* Map it with data of continents [Done but not useful]\n    \n    \nTo Do \n====================\n\n* Map with dietary habits","628a5c5a":"# EDA","bdd6600b":"# The Exploratory data analysis for Obesity within countries\n\n\nObesity is a complex disease involving an excessive amount of body fat. Obesity isn't just a cosmetic concern. It is a medical problem that increases your risk of other diseases and health problems, such as heart disease, diabetes, high blood pressure and certain cancers.\n\nThere are many reasons why some people have difficulty avoiding obesity. Usually, obesity results from a combination of inherited factors, combined with the environment and personal diet and exercise choices.[1]\n\nThe data analysis will involve the following steps:\n\n\n1. Data Cleaning\n2. Data Combining\n2. Data Analysis\n\n\n\n# References\n\n1. https:\/\/www.mayoclinic.org\/diseases-conditions\/obesity\/symptoms-causes\/syc-20375742\n\n"}}