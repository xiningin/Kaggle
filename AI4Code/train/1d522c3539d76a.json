{"cell_type":{"602b7adb":"code","3d89310f":"code","74ffa8ff":"code","2d3b94bb":"code","dd0cd425":"code","e030ea75":"code","28532571":"code","a64e6655":"code","5b9a9bf8":"code","fbd1d6eb":"code","61629bee":"code","b7eaccd6":"code","96f4aa87":"markdown","4ab839e2":"markdown","1efb1e19":"markdown"},"source":{"602b7adb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d89310f":"df=pd.read_csv('\/kaggle\/input\/position-salaries\/Position_Salaries.csv')","74ffa8ff":"df.head(n=4)","2d3b94bb":"df.info()","dd0cd425":"df.isnull().sum()","e030ea75":"#Split the dataset into X and y\nX=df.iloc[:,[1]].values\ny=df['Salary'].values\nprint(X.shape)\nprint(y.shape)","28532571":"#Apply Linear Regression and check whether the regession line fits all the observations or not\n\nfrom sklearn.linear_model import LinearRegression\nmodel_lr=LinearRegression()\nmodel_lr.fit(X,y)\ny_predict=model_lr.predict(X)\n\nplt.scatter(X,y,color='red')\nplt.plot(X,y_predict,color=\"blue\")\nplt.title(\"Linear Regression Model (Level Vs Salary)\")\nplt.xlabel(\"Employee's Level\")\nplt.ylabel(\"Salary\")\nplt.show()","a64e6655":"#Apply the polynomial regression on this same dataset and see how this is working.\n#Apply degree=2\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial=PolynomialFeatures(degree=2)\nX_poly=polynomial.fit_transform(X)\nmodel_plr=LinearRegression()\nmodel_plr.fit(X_poly,y)\ny_predict_poly=model_plr.predict(X_poly)\n\nplt.scatter(X,y,color=\"green\")\nplt.plot(X,y_predict_poly,color=\"red\")\nplt.title(\"Polynomial Regression (Position Level Vs Salary)\")\nplt.xlabel(\"Position Level\")\nplt.ylabel(\"Salary\")\nplt.show()","5b9a9bf8":"#Apply Degree = 3\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial=PolynomialFeatures(degree=3)\nX_poly=polynomial.fit_transform(X)\nmodel_plr=LinearRegression()\nmodel_plr.fit(X_poly,y)\ny_predict_poly=model_plr.predict(X_poly)\n\nplt.scatter(X,y,color=\"green\")\nplt.plot(X,y_predict_poly,color=\"red\")\nplt.title(\"Polynomial Regression (Position Level Vs Salary)\")\nplt.xlabel(\"Position Level\")\nplt.ylabel(\"Salary\")\nplt.show()","fbd1d6eb":"#Apply Degree = 4\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial=PolynomialFeatures(degree=4)\nX_poly=polynomial.fit_transform(X)\nmodel_plr=LinearRegression()\nmodel_plr.fit(X_poly,y)\ny_predict_poly=model_plr.predict(X_poly)\n\nplt.scatter(X,y,color=\"green\")\nplt.plot(X,y_predict_poly,color=\"red\")\nplt.title(\"Polynomial Regression (Position Level Vs Salary)\")\nplt.xlabel(\"Position Level\")\nplt.ylabel(\"Salary\")\nplt.show()","61629bee":"#Predict the model with new or unseen data\n#First try with Linear regression\nlist_level=[3,12,11.5,6.5,7,8,9,3,10.5]\nlist_level=np.reshape(np.array(list_level),newshape=(len(list_level),1))\nprint(\"Prediction based on Linear Regression\")\nprint(model_lr.predict(list_level))\nprint(\"\\n\")\n#First try with Ploynomial Linear regression\nlist_level=[3,12,11.5,6.5,7,8,9,3,10.5]\nlist_level=np.reshape(np.array(list_level),newshape=(len(list_level),1))\nlist_level=polynomial.transform(list_level)\nprint(\"Prediction Based on Polynomial Regression\")\nprint(model_plr.predict(list_level))","b7eaccd6":"X","96f4aa87":"From this prediction we can tell that poly regression algorithm works fine compare to linear regression","4ab839e2":"From the above graph we can see that on degree : 4, the curve covers all the observations.","1efb1e19":"From the above it is clearly shown that the regression line doesn't fit all the observations."}}