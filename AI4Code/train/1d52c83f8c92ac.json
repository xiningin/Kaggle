{"cell_type":{"8bc10185":"code","e1ed74ce":"code","a3b19c6e":"code","25bc5ea0":"code","f499571d":"code","43511c99":"code","fa744617":"code","bfcc116d":"code","62e5ac66":"code","e14433cd":"code","1d6260b7":"markdown","89b23da2":"markdown","8b55cdba":"markdown","859e0306":"markdown","dc08dbb1":"markdown","eab34396":"markdown","e03974c9":"markdown","3aa17909":"markdown"},"source":{"8bc10185":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\nimport time\nstart_time = time.time()","e1ed74ce":"!pip install bar_chart_race","a3b19c6e":"# import the package\nimport bar_chart_race as bcr\nfrom IPython.display import HTML","25bc5ea0":"#reading the csv file\ndf = pd.read_csv('\/kaggle\/input\/corona-virus-brazil\/brazil_covid19.csv')\ndf.head()","f499571d":"cases = df.pivot_table(index='date', columns='state', values='cases')\ndeaths = df.pivot_table(index='date', columns='state', values='deaths')\nregion_cases = df.pivot_table(index='date', columns='region', values='cases')\nregion_deaths = df.pivot_table(index='date', columns='region', values='deaths')","43511c99":"cases_bcr_html = bcr.bar_chart_race(\n    df=cases,\n    filename=None,\n    figsize=(7, 4),\n    title='Casos de COVID-19 por Estados.',\n    cmap='tab20c')\nHTML(cases_bcr_html)","fa744617":"deaths_bcr_html = bcr.bar_chart_race(\n    df=deaths,\n    filename=None,\n    figsize=(7, 4),\n    title='Mortes COVID-19 por Estados.',\n    cmap='tab20c')\nHTML(deaths_bcr_html)","bfcc116d":"region_cases_bcr_html = bcr.bar_chart_race(\n    df=region_cases,\n    orientation='v',\n    filename=None,\n    figsize=(7, 4),\n    title='Casos de COVID-19 por regi\u00e3o.',\n    cmap='tab20c')\nHTML(region_cases_bcr_html)","62e5ac66":"region_deaths_bcr_html = bcr.bar_chart_race(\n    df=region_deaths,\n    orientation='v',\n    filename=None,\n    figsize=(7, 4),\n    title='Mortes de COVID-19 por regi\u00e3o.',\n    cmap='tab20c')\nHTML(region_deaths_bcr_html)","e14433cd":"print(f\"This kernel took {(time.time() - start_time)\/60:.2f} minutes to run\")","1d6260b7":"## Installing the packages.","89b23da2":"## Reshaping the data format as required to use.\n### I will create 4 bar chart race, two horizontal and two vertical, the horizontal plot will be with cases and death by State, the vertical plot  will be with cases and death by reagion.","8b55cdba":"## Bar Chart Race with Cases by State.","859e0306":"## Bar Chart Race deaths by State.","dc08dbb1":"# Bar Chart Race.\n## It's a python package that make bar race much more easier. \n\n### You can see more information in the GitHub Repository.\n\n### [Bar Chart Race GitHub](https:\/\/github.com\/dexplo\/bar_chart_race)","eab34396":"### Thank you!!!!","e03974c9":"## Bar Chart Race deaths by region.","3aa17909":"## Bar Chart Race cases by region."}}