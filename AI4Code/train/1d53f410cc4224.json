{"cell_type":{"e23a80ed":"code","7600463e":"code","461fe28c":"code","c2ce85ca":"code","62a516be":"code","432f8d1b":"code","ce2bc0c2":"code","897f5922":"code","0e226d1b":"code","12e5c016":"code","b34ac888":"code","08fc54f6":"code","62e170b7":"code","6beb2b40":"code","625ccad2":"markdown","6d50ef40":"markdown","ddd2df3c":"markdown"},"source":{"e23a80ed":"#importing necessary modules\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report, roc_auc_score, roc_curve, auc","7600463e":"#importing data\ndata = pd.read_csv(\"..\/input\/creditcard.csv\")\ndata.head()","461fe28c":"#checking Unbalanced Data\ncount_classes = pd.value_counts(data['Class'])\ncount_classes_log = np.log10(count_classes)\ncount_classes.plot(kind = \"bar\")\nplt.xlabel(\"Class\")\nplt.ylabel(\"Frequency\")\nplt.show()","c2ce85ca":"# Log graph\ncount_classes_log.plot(kind = 'bar')\nplt.xlabel(\"Class\")\nplt.ylabel(\"log_Frequency\")\nplt.show()","62a516be":"#Scaling data\ndata['normAmount'] = StandardScaler().fit_transform(data['Amount'].values.reshape(-1, 1))\ndata =  data.drop([\"Time\", \"Amount\"], axis = 1)\ndata.head()","432f8d1b":"#Splitting into Feature and label data\nx = data.drop([\"Class\"], axis = 1)\ny = data[\"Class\"]","ce2bc0c2":"#performing SMOTE to solve Unbalanced Classes\nsmote = SMOTE(random_state= 42)\nx_new, y_new = smote.fit_sample(x, y)\nprint(len(y_new[y_new == 1]))","897f5922":"#splitting into train-test data\nx_train, x_test, y_train, y_test = train_test_split(x_new, y_new, random_state = 42, test_size = 0.2 )","0e226d1b":"#fitting RandomForestClassifier Model\nrf =  RandomForestClassifier()\nrf.fit(x_train, y_train)","12e5c016":"#Predicting labels\ny_pred = rf.predict(x_test)","b34ac888":"#measuring Accuracy Score\naccuracy_score(y_test, y_pred)","08fc54f6":"#Measuring Roc_Auc score\nroc_auc_score(y_test, y_pred)","62e170b7":"#Preparing ROC curve\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(y_test, y_pred)\nroc_auc = auc(false_positive_rate, true_positive_rate)","6beb2b40":"#Plotting ROC Curve\nplt.title('ROC CURVE')\nplt.plot(false_positive_rate, true_positive_rate, 'b',\nlabel='AUC = %0.2f'% roc_auc)\nplt.legend(loc='lower right')\nplt.plot([0,1],[0,1],'r--')\nplt.xlim([-0.1,1.2])\nplt.ylim([-0.1,1.2])\nplt.ylabel('True_Positive_Rate')\nplt.xlabel('False_Positive_Rate')\nplt.show()","625ccad2":"**This gives us a better view of how imbalanced classes are.**","6d50ef40":"**As we can see values in various columns are not scaled and using such unscaled values can cause our classifiers to give inaccurate results.**","ddd2df3c":" **This Shows Imabalanced Classes. As you can see Class 1 i.e frauds is almost 0. To get a better view of this we will take a look at Log of values**"}}