{"cell_type":{"3e92660e":"code","a6fa9df6":"code","e38a1d91":"code","452ee435":"code","4dd8196f":"code","52a84c19":"code","95e18914":"code","f190b19c":"code","7526b4a9":"code","c6823412":"code","e51e3dce":"code","df7f0b99":"code","83117227":"code","87cde135":"code","2b1516b7":"code","5e7c57c2":"code","0d502170":"code","67164e11":"markdown","dfe4a307":"markdown","023707bf":"markdown","923cef9c":"markdown","861504e0":"markdown"},"source":{"3e92660e":"import pandas as pd","a6fa9df6":"df = pd.read_csv('..\/input\/BlackFriday.csv')","e38a1d91":"df.shape","452ee435":"df.dtypes","4dd8196f":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","52a84c19":"age_order = list(df['Age'].unique())\nage_order.sort()\n\ngroup_by_user = df.groupby(['User_ID', 'Age']).sum().reset_index()","95e18914":"sns.set()\n\nfig = plt.figure(figsize=(14,16))\nax1 = fig.add_subplot(211)\nax2 = fig.add_subplot(212)\n\nax1.set_title('Valor gasto por produto x Idade', fontsize=20)\nsns.violinplot(x='Age', y='Purchase', data=df, order=age_order, ax=ax1)\nax1.set_xlabel('Idade', fontsize=12)\nax1.set_ylabel('Valor do produto', fontsize=12)\n\nax2.set_title('Valor total gasto por cliente x Idade', fontsize=20)\nsns.violinplot(x='Age', y='Purchase', data=group_by_user, order=age_order, ax=ax2)\nax2.set_xlabel('Idade', fontsize=12)\nax2.set_ylabel('Valor gasto', fontsize=12)\nplt.show()","f190b19c":"n = 10","7526b4a9":"df['Product_ID'].value_counts().head(n)","c6823412":"most_bought_items = list(df['Product_ID'].value_counts().head(n).index)\nmost_bought_items.reverse()","e51e3dce":"sns.set()\n\ndimensions = (14, 8)\nfig, ax = plt.subplots(figsize=dimensions)\n\nsns.countplot(x='Product_ID', data=df, order=most_bought_items, ax=ax)\nplt.title('Produtos mais comprados', fontsize=20)\nplt.xlabel('Produto', fontsize=15)\nplt.ylabel('Quantidade', fontsize=15)\nplt.show()","df7f0b99":"# Considerando o total de gastos por cliente\ngroup_by_user = df.groupby(['User_ID', 'Age', 'Occupation']).sum().reset_index()\n\nonly_most_frequent_occupations = group_by_user[group_by_user['Occupation'].isin(group_by_user['Occupation'].value_counts().head(5).index)]\nonly_most_frequent_occupations = only_most_frequent_occupations.sort_values(by='Age')\n\noccupation_order = list(only_most_frequent_occupations['Occupation'].unique())\noccupation_order.sort()","83117227":"sns.set()\nplt.figure(figsize=(16, 10))\nsns.boxenplot(x='Occupation', y='Purchase', hue='Age', data=only_most_frequent_occupations, order=occupation_order)\nplt.title('Gasto total por cliente - valores segregados por ocupa\u00e7\u00e3o e idade\\n', fontsize=18)\nplt.xlabel('Ocupa\u00e7\u00e3o do cliente', fontsize=13)\nplt.ylabel('Valor gasto', fontsize=13)\nplt.legend(loc=1, title='Idade', title_fontsize=13)\nplt.ylim(0, 4000000)\nplt.show()","87cde135":"df['Marital_Status'].unique()","2b1516b7":"# trazer todos os user_ID das compras maiores que 9000\npurchases_over_9000 = df[df['Purchase'] > 9000]\n\n# considerando apenas os clientes\ncustomers_over_9000 = purchases_over_9000.drop_duplicates(subset='User_ID')","5e7c57c2":"purchases_over_9000 = purchases_over_9000.groupby(['Occupation', 'Marital_Status']).count().reset_index()\ncustomers_over_9000 = customers_over_9000.groupby(['Occupation', 'Marital_Status']).count().reset_index()","0d502170":"fig = plt.figure(figsize=(14,16))\nax1 = fig.add_subplot(211)\nax2 = fig.add_subplot(212)\n\n# Values of each group\nbars1 = np.array(purchases_over_9000[purchases_over_9000['Marital_Status'] == 0]['User_ID'])\nbars2 = np.array(purchases_over_9000[purchases_over_9000['Marital_Status'] == 1]['User_ID'])\n \n# Heights of bars1 + bars2\nbars = np.add(bars1, bars2).tolist()\n \n# The position of the bars on the x-axis\nr = [int(i) * 3 for i in list(purchases_over_9000['Occupation'].unique())]\n \n# Names of group and bar width\nnames = list(purchases_over_9000['Occupation'].unique())\nbarWidth = 2\n\nax1.bar(r, bars1, edgecolor='white', width=barWidth)\nax1.bar(r, bars2, bottom=bars1, edgecolor='white', width=barWidth)\n\nax1.set_xticks(r)\nax1.set_xticklabels(names)\nax1.set_xlabel('Ocupa\u00e7\u00e3o do cliente', fontsize=15)\nax1.set_ylabel('Quantidade de produtos vendidos', fontsize=15)\nax1.set_title('Vendas acima de $9000 de acordo com perfil do cliente\\n', fontsize=20)\nax1.legend(['0', '1'], fontsize=13, title='Estado civil', title_fontsize=15)\n\n# Values of each group\nbars1 = np.array(customers_over_9000[customers_over_9000['Marital_Status'] == 0]['User_ID'])\nbars2 = np.array(customers_over_9000[customers_over_9000['Marital_Status'] == 1]['User_ID'])\n \n# Heights of bars1 + bars2\nbars = np.add(bars1, bars2).tolist()\n \n# The position of the bars on the x-axis\nr = [int(i) * 3 for i in list(customers_over_9000['Occupation'].unique())]\n \n# Names of group and bar width\nnames = list(customers_over_9000['Occupation'].unique())\nbarWidth = 2\n\nax2.bar(r, bars1, edgecolor='white', width=barWidth)\nax2.bar(r, bars2, bottom=bars1, edgecolor='white', width=barWidth)\n\nax2.set_xticks(r)\nax2.set_xticklabels(names)\nax2.set_xlabel('Ocupa\u00e7\u00e3o do cliente', fontsize=15)\nax2.set_ylabel('Quantidade de clientes', fontsize=15)\nax2.legend(['0', '1'], fontsize=13, title='Estado civil', title_fontsize=15)\n\n\nplt.show()","67164e11":"# Quest\u00e3o 1\n\nConstrua um ou mais gr\u00e1ficos do tipo violino que permita(m) a compara\u00e7\u00e3o entre o valor gasto e a idade dos compradores. ","dfe4a307":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio 3\n\n* **Data de entrega:** 13\/07\/2019 \n* **Professor:**  Matheus Mota\n* **Aluno:** Francis Pimentel Gon\u00e7alves\n* **RA:** 100420","023707bf":"# Quest\u00e3o 3\n\nRepresente graficamente a distribui\u00e7\u00e3o dos valores gastos em cada faixa et\u00e1ria dos compradores associados \u00e0s 5 ocupa\u00e7\u00f5es mais frequentes.","923cef9c":"# Quest\u00e3o 2\n\nRepresente graficamente os N produtos mais comprados, onde N > 8.","861504e0":"# Quest\u00e3o 4\n\nRepresente visualmente a rela\u00e7\u00e3o entre ocupa\u00e7\u00e3o e estado civil das compras com valor maior que nove mil."}}