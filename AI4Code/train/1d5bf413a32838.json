{"cell_type":{"8df4fb59":"code","806ae3a6":"code","827c4242":"code","2dff60ba":"code","3e2eff98":"code","3eb5eec0":"code","c4990740":"code","679309e0":"code","5bfb9caf":"code","a37a5c4b":"code","037a55aa":"code","64112387":"code","76e5b70b":"markdown","c6db50d2":"markdown"},"source":{"8df4fb59":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","806ae3a6":"# import movie data set and look at columns\nmovie = pd.read_csv(\"..\/input\/movie.csv\")\nmovie.columns","827c4242":"# what we need is that movie id and title\nmovie = movie.loc[:,[\"movieId\",\"title\"]]\nmovie.head(10)","2dff60ba":"# import rating data and look at columsn\nrating = pd.read_csv(\"..\/input\/rating.csv\")\nrating.columns","3e2eff98":"# what we need is that user id, movie id and rating\nrating = rating.loc[:,[\"userId\",\"movieId\",\"rating\"]]\nrating.head(10)","3eb5eec0":"# then merge movie and rating data\ndata = pd.merge(movie,rating)","c4990740":"# now lets look at our data \ndata.head(10)","679309e0":"data.shape","5bfb9caf":"data = data.iloc[:1000000,:]","a37a5c4b":"# lets make a pivot table in order to make rows are users and columns are movies. And values are rating\npivot_table = data.pivot_table(index = [\"userId\"],columns = [\"title\"],values = \"rating\")\npivot_table.head(10)","037a55aa":"movie_watched = pivot_table[\"Bad Boys (1995)\"]\nsimilarity_with_other_movies = pivot_table.corrwith(movie_watched)  # find correlation between \"Bad Boys (1995)\" and other movies\nsimilarity_with_other_movies = similarity_with_other_movies.sort_values(ascending=False)\nsimilarity_with_other_movies.head()","64112387":"movie_watched = pivot_table[\"Ace Ventura: When Nature Calls (1995)\"]\nsimilarity_with_other_movies = pivot_table.corrwith(movie_watched)  # find correlation between \"Ace Ventura: When Nature Calls (1995) \" and other movies\nsimilarity_with_other_movies = similarity_with_other_movies.sort_values(ascending=False)\nsimilarity_with_other_movies.head()","76e5b70b":"Reference : https:\/\/www.kaggle.com\/kanncaa1\/recommendation-systems-tutorial","c6db50d2":"## Conclusion\n* What we learn is that\n* User based recommentation systems\n* Item based recommentation systems\n* How to find correlation or similarity between two vectors\n* Then we make very basic movie recommendation system."}}