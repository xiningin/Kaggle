{"cell_type":{"3c000bb0":"code","ab6e017e":"code","a81cd9c4":"code","6f077c7b":"code","b1a787a9":"code","95f06098":"code","6bdf99b7":"code","807d0662":"code","1dd44a45":"code","1b8e110d":"code","465abb5d":"code","914eedc0":"code","430f8408":"code","0381ce0f":"code","eb25c9c0":"code","2c8760c6":"code","56df3984":"code","dcbc39ed":"code","c2c198d0":"code","6a996387":"code","5ec58032":"code","20a5082b":"code","afd8e55c":"code","76ff3488":"code","acdddd40":"code","b17a77f4":"code","a6f510eb":"code","73d278d0":"markdown","4b6d5792":"markdown","8c8a01c2":"markdown","ec1e8b21":"markdown","fc6021b6":"markdown","a434f27d":"markdown","737e75a4":"markdown","bffd7652":"markdown","0135cfa9":"markdown","52437f7e":"markdown","d7726510":"markdown","fd0a5cca":"markdown","15c3e3e4":"markdown","790ba1ad":"markdown","83e2890c":"markdown","f1f2339a":"markdown","b45be774":"markdown","067e8b62":"markdown","2d67e0d3":"markdown","55e55ee1":"markdown","dc46cb12":"markdown","83feae66":"markdown","2cea7db0":"markdown","4e59cf08":"markdown","8063f6fd":"markdown","0e59a2df":"markdown","ed4af1db":"markdown","6fe7e1e4":"markdown","43903fdb":"markdown","60128cbe":"markdown","1a5aca4a":"markdown","af429369":"markdown","2ab1cf46":"markdown","af20b187":"markdown","13ac8086":"markdown","bff7ad3c":"markdown","32738e65":"markdown","4ad75da1":"markdown","795a8095":"markdown","9849f15f":"markdown","1d3cc0aa":"markdown","ca0dbc36":"markdown"},"source":{"3c000bb0":"import pandas as pd\nimport numpy as np\n\nimport plotly.graph_objects as go\nimport plotly.express as px","ab6e017e":"data = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","a81cd9c4":"data.head()","6f077c7b":"questions = data.loc[0]\ndata.drop(0, axis=0, inplace=True)\n\n#students and professional dataframes\ndf_stud = data[data.Q5 == 'Student']\ndf_prof = data[data.Q5 != 'Student']","b1a787a9":"fig = px.bar(x=data.Q1.value_counts().index,  \n             y=data.Q1.value_counts().values, \n             text=data.Q1.value_counts().values,\n             labels={\"x\": \"age group\",\n                     \"y\": \"members\"})\nfig.show()","95f06098":"fig = px.bar(x=data.Q2.value_counts().index,  \n             y=data.Q2.value_counts().values, \n             text=data.Q2.value_counts().values,\n             labels={\"x\": \"gender\",\n                     \"y\": \"members\"})\nfig.show()","6bdf99b7":"q = data.Q3.value_counts()[:10]\nfig = px.bar(x=q.index,  \n             y=q.values, \n             text=q.values,\n             labels={\"x\": \"country\",\n                     \"y\": \"members\"})\nfig.show()","807d0662":"langs = df_stud.Q3.value_counts().index\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=langs,\n    y=df_stud.Q8.value_counts().values,\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=langs,\n    y=df_prof.Q8.value_counts().values,\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","1dd44a45":"q = data.Q4.value_counts()\nfig = px.bar(x=q.index,  \n             y=q.values, \n             text=q.values,\n             labels={\"x\": \"education\",\n                     \"y\": \"members\"})\nfig.show()","1b8e110d":"q = data.Q5.value_counts()\nfig = px.bar(x=q.index,  \n             y=q.values, \n             text=q.values,\n             labels={\"x\": \"current role\",\n                     \"y\": \"members\"})\nfig.show()","465abb5d":"q = data.Q6.value_counts()\nfig = px.bar(x=q.index,  \n             y=q.values, \n             text=q.values,\n             labels={\"x\": \"years of coing exp.\",\n                     \"y\": \"members\"})\nfig.show()","914eedc0":"q = {}\nfor i in range(1,13):\n    q.update(dict(data[f\"Q7_Part_{i}\"].value_counts()))\nfig = px.bar(x=q.keys(),  \n             y=q.values(), \n             text=q.values(),\n             labels={\"x\": \"preffered language\",\n                     \"y\": \"\"})\nfig.update_layout(\n    xaxis={'categoryorder':'total descending'}\n)\nfig.show()","430f8408":"q = data.Q8.value_counts()\nfig = px.bar(x=q.index,  \n             y=q.values, \n             text=q.values,\n             labels={\"x\": \"programming language\",\n                     \"y\": \"\"})\nfig.show()","0381ce0f":"df_stud = data[data.Q5 == 'Student']\ndf_prof = data[data.Q5 != 'Student']\n\nlangs = df_stud.Q8.value_counts().index\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=langs,\n    y=df_stud.Q8.value_counts().values,\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=langs,\n    y=df_prof.Q8.value_counts().values,\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","eb25c9c0":"q = {}\nfor i in range(1,4):\n    q.update(dict(data[f\"Q12_Part_{i}\"].value_counts()))\nq.update(dict(data[f\"Q12_OTHER\"].value_counts()))\nfig = px.bar(x=q.keys(),  \n             y=q.values(), \n             text=q.values(),\n             labels={\"x\": \"hardware\",\n                     \"y\": \"\"})\nfig.show()","2c8760c6":"q12_columns = [column for column in data.columns if 'Q12' in column]\n\ndf_q12 = pd.DataFrame()\n\nfor column in q12_columns:\n    hardware = data[column].dropna().unique()[0]\n    df_q12.loc['Student', hardware] = df_stud[column].notnull().sum() \/ len(df_stud)\n    df_q12.loc['Professional', hardware] = df_prof[column].notnull().sum() \/ len(df_prof)\n\n\nhardwares = df_q12.columns\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=hardwares,\n    y=df_q12.loc['Student'],\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=hardwares,\n    y=df_q12.loc['Professional'],\n    name='Professional',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","56df3984":"times = df_stud.Q13.value_counts().index\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=times,\n    y=df_stud.Q13.value_counts().values \/ len(df_stud),\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=times,\n    y=df_prof.Q13.value_counts().values \/ len(df_prof),\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","dcbc39ed":"q = data.Q15.value_counts()\nfig = px.bar(x=q.index,  \n             y=q.values, \n             text=q.values,\n             labels={\"x\": \"exp in ml\",\n                     \"y\": \"\"})\nfig.show()","c2c198d0":"q = {}\nfor i in range(1,16):\n    q.update(dict(data[f\"Q16_Part_{i}\"].value_counts()))\nfig = px.bar(x=q.keys(),  \n             y=q.values(), \n             text=q.values(),\n             labels={\"x\": \"framework\",\n                     \"y\": \"\"})\nfig.show()","6a996387":"q16_columns = [column for column in data.columns if 'Q16' in column]\ndf_q16 = pd.DataFrame()\n\nfor column in q16_columns:\n    hardware = data[column].dropna().unique()[0]\n    df_q16.loc['Student', hardware] = df_stud[column].notnull().sum() \/ len(df_stud)\n    df_q16.loc['Professional', hardware] = df_prof[column].notnull().sum() \/ len(df_prof)\n\nframeworks = df_q16.columns\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=frameworks,\n    y=df_q16.loc['Student'],\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=frameworks,\n    y=df_q16.loc['Professional'],\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","5ec58032":"q17_columns = [column for column in data.columns if 'Q17' in column]\ndf_q17 = pd.DataFrame()\n\nfor column in q17_columns:\n    hardware = data[column].dropna().unique()[0]\n    df_q17.loc['Student', hardware] = df_stud[column].notnull().sum() \/ len(df_stud)\n    df_q17.loc['Professional', hardware] = df_prof[column].notnull().sum() \/ len(df_prof)\n\nml_algos = df_q17.columns\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=ml_algos,\n    y=df_q17.loc['Student'],\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=ml_algos,\n    y=df_q17.loc['Professional'],\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","20a5082b":"q26_columns = [column for column in data.columns if 'Q26_A' in column]\ndf_q26 = pd.DataFrame()\n\nfor column in q26_columns:\n    hardware = data[column].dropna().unique()[0]\n    df_q26.loc['Student', hardware] = df_stud[column].notnull().sum() \/ len(df_stud)\n    df_q26.loc['Professional', hardware] = df_prof[column].notnull().sum() \/ len(df_prof)\n\ncc = df_q26.columns\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=cc,\n    y=df_q26.loc['Student'],\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=cc,\n    y=df_q26.loc['Professional'],\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","afd8e55c":"q = data.Q24.value_counts()[:10]\nfig = go.Figure(go.Pie(\n    labels = q.index,\n    values = q.values,\n    pull=[0.1, 0, 0, 0]\n))\nfig.show()","76ff3488":"q = data.Q25.value_counts()\nfig = go.Figure(go.Pie(\n    labels = q.index,\n    values = q.values,\n    pull=[0.1, 0, 0, 0]\n))\nfig.show()","acdddd40":"q29_columns = [column for column in data.columns if 'Q29_A' in column]\ndf_q29 = pd.DataFrame()\n\nfor column in q29_columns:\n    hardware = data[column].dropna().unique()[0]\n    df_q29.loc['Student', hardware] = df_stud[column].notnull().sum() \/ len(df_stud)\n    df_q29.loc['Professional', hardware] = df_prof[column].notnull().sum() \/ len(df_prof)\n\n\nfig = go.Figure(data=[\n    go.Bar(name='student', x=df_q29.columns, y=df_q29.loc['Student'], marker_color='indianred'),\n    go.Bar(name='professionals', x=df_q29.columns, y=df_q29.loc['Professional'], marker_color='lightsalmon')\n])\n\nfig.update_layout(barmode='stack')\nfig.show()","b17a77f4":"q = {}\nfor i in range(1,12):\n    q.update(dict(data[f\"Q37_Part_{i}\"].value_counts()))\nfig = go.Figure(go.Pie(\n    labels = list(q.keys()),\n    values = list(q.values()),\n    pull=[0.1, 0, 0, 0]\n))\nfig.show()","a6f510eb":"q37_columns = [column for column in data.columns if 'Q37' in column]\ndf_q37 = pd.DataFrame()\n\nfor column in q37_columns:\n    hardware = data[column].dropna().unique()[0]\n    df_q37.loc['Student', hardware] = df_stud[column].notnull().sum() \/ len(df_stud)\n    df_q37.loc['Professional', hardware] = df_prof[column].notnull().sum() \/ len(df_prof)\n\nplatform = df_q37.columns\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=platform,\n    y=df_q37.loc['Student'],\n    name='student',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=platform,\n    y=df_q37.loc['Professional'],\n    name='prefessional',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","73d278d0":"professional are using **Linear or Logistic regression, DT or RF, GBM, Bayersian approaches** more percentage than students<br\/>","4b6d5792":"## What is your age (# years)?","8c8a01c2":"## Q8: What programming language would you recommend an aspiring data scientist to learn first?","ec1e8b21":"## Q16: Which of the following machine learning frameworks do you use on a regular basis? (student vs professional)","fc6021b6":"In this notebook i will try to show graph plots of someof the questions in the dataset\n\nmain goal is to compare students response and professional response","a434f27d":"## Q15: For how many years have you used machine learning methods?","737e75a4":"master's and bachemor's degree srudents are using kaggle more than other degrees","bffd7652":"## Q13: Approximately how many times have you used a TPU (tensor processing unit)? student\/professional","0135cfa9":"## Q3: In which country do you currently reside? (top-10)","52437f7e":"## Q16: Which of the following machine learning frameworks do you use on a regular basis?","d7726510":"very less people use GPUs and TPUs","fd0a5cca":"1-5 year experienced are more","15c3e3e4":"## Q37: On which platforms have you begun or completed data science courses?","790ba1ad":"students and professionals almost use **Sciit-learn, Tensorflow, PyTorch** in same percentage<br\/>\nProfessionals seems to use **Xgboost, LightGBM, CatBoost** more preccentage than students","83e2890c":"## Q8: What programming language would you recommend an aspiring data scientist to learn first? (student vs professional)","f1f2339a":"## What is your gender?","b45be774":"## Q12: Which types of specialized hardware do you use on a regular basis? (student vs prefessional)","067e8b62":"most kagglers are from age group 25-29","2d67e0d3":"## Q26: Which of the following cloud computing platforms do you use on a regular basis? (student vs professional)","55e55ee1":"## Q5: Select the title most similar to your current role (or most recent title if retired):","dc46cb12":"## Q7: What programming languages do you use on a regular basis? ","83feae66":"more professionals are using TPUs than students <br\/>\nmore students are using GPUs than professionals <br\/>\nmore than 30% people in both students and professionals are not any of them","2cea7db0":"## Q37: On which platforms have you begun or completed data science courses? (student vs prfessional)","4e59cf08":"## Q25: Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (\u200b approximate $USD\u200b )?","8063f6fd":"Overall, more people are taking courses from coursera, followed by kaggle Learn Courses and Udemy","0e59a2df":"male kagglers are 4 times than female kagglers","ed4af1db":"## Q17: Which of the following ML algorithms do you use on a regular basis? (student vs professional)","6fe7e1e4":"less than one year experience people are more. That might mean that number of people joined in 2020 are double the members joind in 2019 (assuming that people are practicing from joining)","43903fdb":"students are not using any cloud computing platforms","60128cbe":"## Q4: What is the highest level of formal education that you have attained or plan to attain within the next 2 years?","1a5aca4a":"## Q6: For how many years have you been writing code and\/or programming?","af429369":"students are not using any big data products","2ab1cf46":"## Q24: What is your current yearly compensation (\u200b approximate $USD\u200b )?","af20b187":"## Q29: Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis? (student vs professional)","13ac8086":"scikit-learn is more famous than others <br\/>\nTensorflow and keras are used almost same number of people","bff7ad3c":"professional prefer python too. That means python is more used in industry","32738e65":"again python is more preferred as first step for data science","4ad75da1":"india has more kagglers followed by USA","795a8095":"professional are using kaggle more than students  -- (students who used kaggle might become professionals)","9849f15f":"## Q12: Which types of specialized hardware do you use on a regular basis?","1d3cc0aa":"professionals are taking courses more than students","ca0dbc36":"python is more preferred"}}