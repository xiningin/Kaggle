{"cell_type":{"33615140":"code","aec90ce2":"code","7746351c":"code","4f14f3ae":"code","cfdc39e9":"code","2b5b7d4e":"code","55e8198b":"code","9797fb1c":"code","db4deef5":"code","b92893f3":"code","246b5330":"markdown","10a0ea62":"markdown","3c35b5f6":"markdown","901f10a7":"markdown","54df3464":"markdown","17e831aa":"markdown","9fd6df4b":"markdown","658722f9":"markdown"},"source":{"33615140":"import os\n\n# Work in PC, Kaggle, Colab\nIN_PC = ('VSCODE_CWD' in os.environ) and (not 'AK_KAGGLE_ENV' in os.environ)\nIN_DOCKER = ('AK_KAGGLE_ENV' in os.environ)\nIN_COLAB = ('COLAB_GPU' in os.environ)\n# DATA_PATH = \"..\/..\/data\" if os.path.exists(\"..\/..\/data\") and IN_PC else \"..\/..\/..\/data\" if os.path.exists(\"..\/..\/..\/data\") and IN_PC else \"\/kaggle\"\n\nif IN_PC:\n    DATA_PATH = os.path.abspath(\"..\/..\/data\") if os.path.isdir(\"..\/..\/data\") else os.path.abspath(\"..\/..\/..\/data\")\nelif IN_COLAB:\n    DATA_PATH = \"\/content\/drive\/MyDrive\/Colab_Kaggle\/data\"\nelse:\n    DATA_PATH = \"\/kaggle\"\n    \n\n# for dirname, _, filenames in os.walk(DATA_PATH + '\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n        \n# shutil.copy(DATA_PATH + '\/input\/00000-01\/fix.db', DATA_PATH + '\/working\/fix.db')","aec90ce2":"if IN_COLAB:\n    from google.colab import drive\n    drive.mount('\/content\/drive');\n\n# !pip install colab_ssh --upgrade\n# from colab_ssh import launch_ssh_cloudflared, init_git_cloudflared\n# launch_ssh_cloudflared(password=\"1\")","7746351c":"# !pip install -q datatable\n# !pip install -q catboost\n# !pip install -q optuna\n# !pip install -q kaggle\n\nif IN_COLAB:\n    !pip install -q torchsummary\n    !pip install -q torchsummaryX\n    !pip install -q pytorch-model-summary\n    !pip install -q torchinfo\n\n# !git clone --recursive https:\/\/github.com\/Microsoft\/LightGBM\n# %cd \/content\/LightGBM\n# !mkdir build\n# !cmake -DUSE_GPU=1 #avoid ..\n# !make -j$(nproc)\n# # # # !sudo apt-get -y install python-pip\n# # # # !sudo -H pip install setuptools pandas numpy scipy scikit-learn -U\n# %cd \/content\/LightGBM\/python-package\n# !sudo python setup.py install \u2014 precompile","4f14f3ae":"import os\nimport numpy as np \nimport pandas as pd\nimport time\nimport gc\nimport warnings\n\nimport joblib\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nfrom copy import deepcopy\n\nfrom sklearn.model_selection import *\nfrom sklearn.impute import *\nfrom sklearn.preprocessing import *\nfrom sklearn.metrics import *\n\nfrom tqdm.notebook import tqdm\n\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\n# pd.set_option('float_format', '{:f}'.format)\npd.set_option('float_format', '{:,}'.format)\nwarnings.filterwarnings('ignore')","cfdc39e9":"n_splits = 5\ntarget_col='Cover_Type' # name of target column\nid_col='Id'\ncompetition='tps1221'\nfullname_competition ='tabular-playground-series-dec-2021'\n\nWORKING_PATH = DATA_PATH + '\/working\/'+ competition + '\/'\nPKL_PATH = DATA_PATH + '\/working\/'+ competition + '\/pkl\/'\nBOOSTERS_PATH = PKL_PATH + 'boosters\/'","2b5b7d4e":"%%time\n\nif IN_PC or IN_COLAB:\n    train = joblib.load(PKL_PATH + 'train-32.pkl')\n    test = joblib.load(PKL_PATH + 'test-32.pkl').drop(columns=[id_col])\n    submission = joblib.load(PKL_PATH + 'submission-32.pkl')\nelse:\n    train = joblib.load(DATA_PATH + '\/input\/tps1221data\/' + 'train-32.pkl')\n    test = joblib.load(DATA_PATH + '\/input\/tps1221data\/' + 'test-32.pkl').drop(columns=[id_col])\n    submission = joblib.load(DATA_PATH + '\/input\/tps1221data\/' + 'submission-32.pkl')","55e8198b":"target_df = pd.DataFrame(train[target_col].value_counts()).reset_index()\ntarget_df.columns = [target_col, 'count']\nfig = px.bar(data_frame =target_df, \n             x = 'Cover_Type',\n             y = 'count' , \n             color = \"count\",\n             color_continuous_scale=\"Emrld\") \nfig.show()\n# target_df.sort_values(by =target_col , ignore_index = True)","9797fb1c":"plt.figure(figsize=(10,5))\nax = sns.countplot(x=train[target_col])\nplt.title(\"Exploring Train Data\")\nplt.xlabel(\"Cover Type\")\nax.bar_label(ax.containers[0])\nplt.show()","db4deef5":"fig, ax = plt.subplots(figsize=(12 , 12))\ncorr = train.drop(columns=[id_col]).corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr,\n        square=True, center=0, linewidth=0.2,\n        cmap=sns.diverging_palette(250, 20, as_cmap=True),\n        mask=mask, ax=ax) \nax.set_title('Feature Correlation', loc='left', fontweight='bold')\nplt.show()","b92893f3":"train.iloc[:, :-1].describe().T.sort_values(by='std' , ascending = False)\\\n                     .style.background_gradient(cmap='GnBu')\\\n                     .bar(subset=[\"max\"], color='#BB0000')\\\n                     .bar(subset=[\"mean\",], color='green')","246b5330":"# DATA_PATH","10a0ea62":"# Features Correlation","3c35b5f6":"# Load Data\n* \ud83d\ude4f [[TPS-1221] Load data 50.36% faster](https:\/\/www.kaggle.com\/akmeghdad\/tps-1221-load-data-50-36-faster)","901f10a7":"# EDA","54df3464":"# Imports","17e831aa":"# Exploring Train Data","9fd6df4b":"# Colab","658722f9":"# Variables"}}