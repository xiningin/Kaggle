{"cell_type":{"661d0e7b":"code","4dfbb52f":"code","5078dbb3":"code","445cabe8":"code","68d3a857":"code","5f4f0f7a":"code","3ee292b3":"code","21df8ee7":"code","59021e7c":"code","646730d4":"code","c203c7b7":"code","650b16db":"code","ceedb667":"markdown","68776408":"markdown","dbbde6dc":"markdown","73b96564":"markdown","c64404f8":"markdown","2124557e":"markdown","f632b59a":"markdown","88c3c550":"markdown","647dd3a3":"markdown","1209f269":"markdown","ef9f7dcf":"markdown","165271d7":"markdown"},"source":{"661d0e7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4dfbb52f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cv2\nimport os","5078dbb3":"def image_read(image1, image2, title1 = \"\", title2 = \"\"):\n    fig = plt.figure(figsize = (15, 15))\n    ax1 = fig.add_subplot(121)\n    ax1.imshow(image1, cmap = \"gray\")\n    ax1.set(xticks = [], yticks = [], title = title1)\n    ax2 = fig.add_subplot(122)\n    ax2.imshow(image2, cmap = \"gray\")\n    ax2.set(xticks = [], yticks = [], title = title2)","445cabe8":"path = \"\/kaggle\/input\/car-plate-detection\/images\/Cars108.png\"","68d3a857":"image = cv2.imread(path)\nplot_image = image_read(image, image, title1 = \"Original\", title2 = \"Original\")","5f4f0f7a":"gray = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)\n\nimage_read(image, gray, title1 = \"Original\", title2 = \"Gray\")","3ee292b3":"smooth = cv2.bilateralFilter(gray, 9, 75, 75)\n\nimage_read(gray, smooth, title1 = \"Gray\", title2 = \"Smooth\")","21df8ee7":"edge = cv2.Canny(smooth, 70, 400)\nimage_read(smooth, edge, title1 = \"Smooth\", title2 = \"Edge\")","59021e7c":"contours, new = cv2.findContours(edge.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)\n\nimage_copy = image.copy()\n\n_ = cv2.drawContours(image_copy, contours, -1, (255, 0, 0), 2)\n\nimage_read(edge, image_copy, title1 = \"Edge\", title2 = \"Contours\")","646730d4":"contours = sorted(contours, key = cv2.contourArea, reverse = True)[:5]\n\nimage_reduced = edge.copy()\n_ = cv2.drawContours(image_reduced, contours, -1, (255, 0, 0), 2)\n\nimage_read(image_copy, image_reduced, title1 = \"Original\", title2 = \"Reduced\")","c203c7b7":"plate = None\n\nfor i in contours:\n    a = cv2.arcLength(i, True)\n    edge_count = cv2.approxPolyDP(i, 0.02 * a, True)\n    if len(edge_count) == 5:\n        x, y, w, h = cv2.boundingRect(i)\n        plate = image[y:y+h, x:x+w]\n        break\n\ncv2.imwrite(\"plate.png\", plate)","650b16db":"image_read(plate, image, title1 = \"Plate\", title2 = \"Original\")","ceedb667":"Flula\u015ft\u0131rma i\u015fleminden sonra kenar ve k\u00f6\u015felerin \u00e7izdirilmesi i\u015flemi. A\u015fa\u011f\u0131da g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi flu g\u00f6r\u00fcnt\u00fcde kenar ve k\u00f6\u015feler daha net \u00e7\u0131kmaktad\u0131r. Resmin orjinal hali kullan\u0131lsa g\u00f6r\u00fcnt\u00fc arka plan\u0131ndaki di\u011fer objeler veya araca yans\u0131yan g\u00f6lgeler vs gibi bunlar\u0131nda kenar ve k\u00f6\u015feleri \u00e7izilecek b\u00f6ylece daha karma\u015f\u0131k bir g\u00f6r\u00fcnt\u00fc elde edilecek.\n\nKenar k\u00f6\u015fe \u00e7izdirmek i\u00e7in yine cv2 i\u00e7indeki Canny'i kullan\u0131yorum. Canny fonksiyonu parametre olarak bir g\u00f6r\u00fcnt\u00fc, minimum e\u015fik de\u011feri ve maksimum e\u015fik de\u011feri al\u0131yor. Minimum ve maksimum e\u015fik de\u011ferlerinin anlam\u0131 \u015fu: \u00e7izilen b\u00fct\u00fcn kenarlar i\u00e7inden hangilerinin ger\u00e7ek kenar hangilerinin ise ger\u00e7ek olmayan kenarlar oldu\u011funu tespit ediyor. \u00d6rne\u011fin resmin arka plan\u0131nda bir s\u00fcr\u00fc a\u011fa\u00e7 bulunmakta e\u011fer max e\u015fik de\u011ferini k\u00fc\u00e7\u00fck tutarsak g\u00f6r\u00fcnt\u00fc arka plan\u0131nda daha fazla kenar bulacak bu da g\u00f6r\u00fcnt\u00fc daha kar\u0131\u015f\u0131k hale sokacakt\u0131r ayn\u0131 zamanda max e\u015fik de\u011ferini \u00e7ok y\u00fcksek tutmak plaka yerinde herhangi bir kenar k\u00f6\u015fe bulamamas\u0131na neden olabilir.\n\nE\u011fer kenar-k\u00f6\u015fe yo\u011funlu max e\u015fi\u011fin \u00fczerinde ise bu kesinlikle kenard\u0131r, e\u011fer kenar-k\u00f6\u015fe yo\u011funlu\u011fu min e\u015fik de\u011ferinin alt\u0131nda ise buras\u0131 kesinlikle kenar de\u011fildir mant\u0131\u011f\u0131 ile \u00e7al\u0131\u015fmaktad\u0131r.\n\nCanny --> [https:\/\/opencv-python-tutroals.readthedocs.io\/en\/latest\/py_tutorials\/py_imgproc\/py_canny\/py_canny.html](http:\/\/)","68776408":"Kenar-k\u00f6\u015fe tespiti sonras\u0131nda kontur i\u015flemine geldik. Buradaki mant\u0131k ayn\u0131 renk ve yo\u011funlu\u011fa sahip olan t\u00fcm kesintisiz noktalar\u0131 s\u0131n\u0131rlar\u0131 boyunca birle\u015ftirir. Yani k\u0131saca kenar ve k\u00f6\u015feleri \u00e7er\u00e7eve i\u00e7ine al\u0131yor diyebiliriz.","dbbde6dc":"Plaka tespit \u00e7al\u0131\u015fmas\u0131 yapmak i\u00e7in kullanaca\u011f\u0131m temel k\u00fct\u00fcphane CV2.\n\nAyn\u0131 zamanda \u00e7al\u0131\u015fman\u0131n en alt\u0131nda yararland\u0131\u011f\u0131m ve faydal\u0131 olabilece\u011fini d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm kaynaklar\u0131 payla\u015ft\u0131m g\u00f6z atablirsiniz.","73b96564":"Se\u00e7ilen resmin g\u00f6r\u00fcnt\u00fcs\u00fc a\u015fa\u011f\u0131daki gibidir.","c64404f8":"108 nolu resim se\u00e7ildi. Farkl\u0131 bir resimde denemek i\u00e7in 108 rakam\u0131 yerine data i\u00e7erisindeki numaralardan herhangi birisini verebilirsiniz.","2124557e":"Son a\u015famada yukar\u0131 ald\u0131\u011f\u0131m\u0131z 5 kontur i\u00e7in yapt\u0131\u011f\u0131m\u0131z i\u015flem uzunluklar\u0131n\u0131 hesaplamak ve aralar\u0131ndaki dikd\u00f6rgene(plaka \u015fekli) benzeyen kontur i\u00e7in resim \u00fczerindeki koordinatlar\u0131n\u0131 tespit etmek. Koordinatlar tespit edildikten sonra resim \u00fczerinde bulunana bu koordinatlara ait alan kesilerek plakaya ait olmas\u0131 muhtemel alan elimizde kal\u0131yor.\n\nTekrar s\u00f6ylemekte fayda var bu e\u015fik de\u011ferleri, max kontur say\u0131s\u0131 bu resim i\u00e7in ge\u00e7erlidir. Data i\u00e7indeki di\u011fer resimlerde de \u00e7al\u0131\u015fabilir fakat tamam\u0131nda ayn\u0131 de\u011ferler ile kullan\u0131lmas\u0131 her seferinde plakay\u0131 do\u011fru getirece\u011fini garanti etmez.","f632b59a":"Siyah-beyaz g\u00f6r\u00fcnt\u00fcye \u00e7evirdikten sonra resmi flu hale getiriyoruz. Bunun nedeni ise resim \u00fczerindeki g\u00fcr\u00fclt\u00fcleri temizlemektir. Resmin g\u00fcr\u00fclt\u00fcleri temizlendi\u011fimde kenar ve k\u00f6\u015fe hatlar\u0131 daha keskin bir duruma gelir bunun faydas\u0131 ise resimdeki birbirinden ba\u011f\u0131ms\u0131z objelerin daha rahat se\u00e7ilmesini sa\u011flar \u00f6rne\u011fin resimdeki araban\u0131n ba\u015flad\u0131\u011f\u0131 yerler ilk resme k\u0131yasla daha net belli olmaktad\u0131r ayn\u0131 \u015fekilde plaka ilk resme g\u00f6re ikinci resimde daha belirgindir. Belirginden kas\u0131t netlik de\u011fil kar\u0131\u015ft\u0131rmayal\u0131m belirginlikten kas\u0131t g\u00f6r\u00fcnt\u00fc i\u00e7indeki farkl\u0131la\u015fmay\u0131 ifade etmektedir.\n\nG\u00fcr\u00fclt\u00fc temizleme i\u015flemi i\u00e7in cv2 i\u00e7indeki bilateral filtre kullan\u0131lm\u0131\u015ft\u0131r.\n\nBilateral Filtre i\u00e7in d\u00f6k\u00fcman --> [https:\/\/docs.opencv.org\/master\/d4\/d13\/tutorial_py_filtering.html](http:\/\/)","88c3c550":"Umar\u0131m faydal\u0131 olmu\u015ftur.\n\nBu \u00e7al\u0131\u015fma i\u00e7in kulland\u0131\u011f\u0131m kaynaklar.\n\n* [https:\/\/github.com\/ertugruldeniz\/plakatanimasistemi\/blob\/master\/ErtugrulDeniz_Plaka_Tanima_Sistemi.pdf](http:\/\/)\n\n* [https:\/\/www.youtube.com\/watch?v=UgGLo_QRHJ8&ab_channel=EdwardPie](http:\/\/)\n\n* [https:\/\/www.kitapyurdu.com\/kitap\/python-ile-imgeden-veriye-goruntu-isleme-ve-uygulamalari\/539377.html](http:\/\/)\n\n\u00c7al\u0131\u015fmaya oy ve yorum vererek destes olabilirsiniz.\n\nTe\u015fekk\u00fcrler.","647dd3a3":"Resmi ald\u0131ktan sonra format\u0131n\u0131 de\u011fi\u015ftiriyoruz. RGB resimden Siyah-Beyaz resme ge\u00e7iyoruz. Bunun nedeni i\u015flemlerin siyah-beyaz g\u00f6r\u00fcnt\u00fcler daha basit ve kolay olmas\u0131d\u0131r. Normal RGB renklere sahip g\u00f6r\u00fcnt\u00fclerin 3 kanal\u0131 bulunmaktad\u0131r siyah-beyaz g\u00f6r\u00fcnt\u00fclerde ise kanal say\u0131s\u0131 1'dir. Kullan\u0131m\u0131 daha kolay oldu\u011fu i\u00e7in siyah-beyaz g\u00f6r\u00fcnt\u00fc tercih edilmi\u015ftir.","1209f269":"\u0130\u015fe \u00f6nce se\u00e7ece\u011fimiz herhangi bir resmi grafik \u00fczerinde \u00e7izdirmekle ba\u015flayal\u0131m.\n\nimage read ad\u0131nda bir fonsiyon yaratarak 2 resim ve 2 ba\u015fl\u0131k almas\u0131n\u0131 s\u00f6yl\u00fcyoruz. \u0130ki resim olmas\u0131 nedeni resimleri birbirleri ile kar\u015f\u0131la\u015ft\u0131rabilmemiz.","ef9f7dcf":"Kontur i\u015fleminden sonra \u00e7\u0131kan t\u00fcm konturlar\u0131n alan b\u00fcy\u00fckl\u00fcklerine g\u00f6re s\u0131ral\u0131yoruz. En fazla alana sahip 5 (bu resme ait olan-de\u011fi\u015febilir.) konturu i\u015faretliyoruz. Yani k\u00fc\u00e7\u00fck alana sahip olanlar eleniyor, \u00f6rne\u011fin yukar\u0131daki a\u011fa\u00e7lar\u0131n sahip oldu\u011fu baz\u0131 alanlar gibi.","165271d7":"Merhaba,\n\nBu \u00e7al\u0131\u015fma sayfas\u0131nda ara\u00e7 g\u00f6r\u00fcnt\u00fcs\u00fc \u00fczerindeki plakan\u0131n yerini tespit etmeye \u00e7al\u0131\u015faca\u011f\u0131z.\n\nPlaka yer tesipiti t\u00fcm resimler \u00fczerinden de\u011fil rastgele se\u00e7ilen bir foto\u011fraf \u00fczerinden ger\u00e7ekle\u015fecektir. A\u015fa\u011f\u0131daki ad\u0131mlar\u0131 uygularak y\u00f6ntem di\u011fer resimler ile de genelle\u015ftirilebilir.\n\n\u0130yi e\u011flenceler."}}