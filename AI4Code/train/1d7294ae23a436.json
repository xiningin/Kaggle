{"cell_type":{"ff35454c":"code","d89ac445":"code","101f49ca":"code","923ada2d":"code","2e3c6cba":"code","e56ed555":"code","9b1bb5b2":"code","0ffa4f93":"code","147a21ee":"code","343fa740":"code","021e16aa":"code","ca693e99":"code","9a02724c":"code","535f05e5":"code","052b5d16":"code","9df98103":"code","901275d2":"code","99f2b670":"code","457347b5":"code","63fe6088":"code","b6472f7b":"code","766ec4b5":"code","d704cd37":"code","1fe7ee1f":"code","5d9cbfa5":"code","926f2f8b":"code","253a75d7":"code","7a109837":"code","231d3536":"code","4ddce506":"code","9a2ca309":"code","1cb42737":"code","53abc2e3":"code","df22129f":"code","8b59c344":"code","b8dc3705":"code","f146d1af":"code","abd187f5":"code","e6df3293":"code","094aa483":"code","fa40b82a":"markdown","8155ec80":"markdown","db1180d0":"markdown","a63768cc":"markdown","c7a4cadf":"markdown","0956b64e":"markdown","32c24beb":"markdown","f539eda5":"markdown","fc50b4ff":"markdown","1dd7e418":"markdown","09c15dcc":"markdown","a12558db":"markdown","2a52c785":"markdown","21e2b543":"markdown","fd4c5a48":"markdown","0277604a":"markdown","a3211cea":"markdown","d243487c":"markdown","bc2f43d8":"markdown","250234cb":"markdown"},"source":{"ff35454c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d89ac445":"df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")","101f49ca":"df.info()","923ada2d":"df.head()","2e3c6cba":"df.drop(\"PassengerId\",axis=1,inplace=True)","e56ed555":"sns.countplot(df['Pclass'])","9b1bb5b2":"sns.countplot(df['Survived'])","0ffa4f93":"sns.countplot(df['Survived'],hue=df['Sex'],palette='twilight_shifted_r')","147a21ee":"sns.countplot(df['Survived'],hue=df['Pclass'],palette='viridis')","343fa740":"sns.countplot(df['SibSp'])","021e16aa":"sns.countplot(df['Parch'])","ca693e99":"sns.distplot(df['Age'],kde=False,bins=40)","9a02724c":"sns.boxplot(df['Age'])","535f05e5":"df.isnull().sum()","052b5d16":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","9df98103":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=df,palette='winter')","901275d2":"def age_fill(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","99f2b670":"df['Age'] = df[['Age','Pclass']].apply(age_fill,axis=1)","457347b5":"df['Cabin'] = df['Cabin'].apply(lambda x: 0 if pd.isnull(x) else 1)","63fe6088":"df['Embarked'].value_counts()","b6472f7b":"df['Embarked'].fillna(value='S',inplace=True)","766ec4b5":"df.head()","d704cd37":"def extract_title(arg):\n    return arg.split(' ')[1]\n\ndf['Title'] = df['Name'].apply(extract_title)\n#df['Title'] = df['Name'].apply(lambda x: x.split(' ')[1])  equivalent lambda function\ndf.drop('Name',axis=1,inplace=True)","1fe7ee1f":"df.drop(['Ticket','Fare'],axis=1,inplace=True)","5d9cbfa5":"#you may also use function approach to convert the data. But let's see with LabelEncoder\nfrom sklearn.preprocessing import LabelEncoder\nencoder_sex = LabelEncoder()\nencoder_embarked = LabelEncoder()\nencoder_title = LabelEncoder()","926f2f8b":"df['Sex'] = encoder_sex.fit_transform(df['Sex'])\ndf['Embarked'] = encoder_embarked.fit_transform(df['Embarked'])\ndf['Title'] = encoder_title.fit_transform(df['Title'])","253a75d7":"df['Class_sex'] = df['Pclass'].astype(str) + df['Sex'].astype(str)\nencoder_Class_sex = LabelEncoder()\ndf['Class_sex'] = encoder_Class_sex.fit_transform(df['Class_sex'])","7a109837":"df","231d3536":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","4ddce506":"#Don't drop the PassengerId is it neccassary for submission\ntest.drop(['Ticket','Fare'],axis=1,inplace=True)","9a2ca309":"test['Age'] = test[['Age','Pclass']].apply(age_fill,axis=1)","1cb42737":"test['Title'] = test['Name'].apply(extract_title)\ntest.drop('Name',axis=1,inplace=True)","53abc2e3":"test['Cabin'] = test['Cabin'].apply(lambda x: 0 if pd.isnull(x) else 1)","df22129f":"test.head()","8b59c344":"test['Sex'] = encoder_sex.transform(test['Sex'])\ntest['Embarked'] = encoder_embarked.transform(test['Embarked'])","b8dc3705":"test['Title'].value_counts()","f146d1af":"test.loc[test['Title']=='Khalil,','Title'] = 'Mr.'\ntest.loc[test['Title']=='Palmquist,','Title'] = 'Mr.'\ntest.loc[test['Title']=='Brito,','Title'] = 'Mr.'","abd187f5":"test['Title'] = encoder_title.transform(test['Title'])","e6df3293":"test['Class_sex'] = test['Pclass'].astype(str) + test['Sex'].astype(str)\ntest['Class_sex'] = encoder_Class_sex.transform(test['Class_sex'])","094aa483":"test.to_csv(\"test.csv\",index=False)\ndf.to_csv(\"train.csv\",index=False)","fa40b82a":"* Cabin has most of the values as null.\n* Age is partially missing.\n* Only few columns were missing in Embarked.","8155ec80":"The black dots on the right of image represents the outliers in the Age. <br>\n","db1180d0":"Now lets convert the categorical values into numerical ones.","a63768cc":"# Importing and Reading the Data","c7a4cadf":"Lets save our pre-processed data and publish as a new dataset so next time while modelling we can use this cleaned data instead doing the same from beginning.<br>\n<br>\n**Note for Begginers:**  For publishing our own data hit the Save Version button and hit commit. Now once your notebook is executed you can create a new dataset from the output at the bottom of the notebook","0956b64e":"Passenger Id is just a unique Id given to each passengers, so it has no use in Modelling and can be dropped.<br>\nSibSp refers to the siblings and spouses along with the person in the titanic. <br>\nParch refers to the parents\/ Childern abroad the titanic.","32c24beb":"Continue with  my another notebook [Modelling Titanic](https:\/\/www.kaggle.com\/aakashveera\/modelling-titanic). It has the modelling section with several Machine Learning Algorithms and the submission on kaggle","f539eda5":"Some of the titles in test set were not in training set labelEncoder throws error while transforming a unseen data.<br>\nKhalil,Palmquist,Brito were the three and all three were men lets convert it into Mr","fc50b4ff":"# Filling out missing values","1dd7e418":"Let's Extract out the titles from the Name","09c15dcc":"In this notebook lets explore the data and do the Pre-processing and feature engineering alone. <br>\nPlease check out my another notebook [Modelling Titanic](https:\/\/www.kaggle.com\/aakashveera\/modelling-titanic). It has the modelling section with several Machine Learning Algorithms","a12558db":"Most of the People were alone on the titanic ship.<br>\nThe below image shows the Age distribution. **Titanic has more people from 18-35 years old**","2a52c785":"Here we can see that 1st class people were mostly around 30 -50 <br>\n2nd class people were mostly around 28 - 38 and 3rd class people were younger than both. <br>\nSo it will good to fill the null values based on thier class","21e2b543":"Ticket and Fare mostly represents the class of the person. Since it is available as a seperate feature both can be dropped.","fd4c5a48":"# EDA & Visualizations","0277604a":"Now let's do the same feature Engineering with test set","a3211cea":"# Feature Engineering","d243487c":"## Cabin and Embarked","bc2f43d8":"## Age","250234cb":"Lets covert all the null values as 0 and cabins as 1 and fill the most repeated values on Embarked"}}