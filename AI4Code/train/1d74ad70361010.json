{"cell_type":{"d6c84c24":"code","df4002a0":"code","d973606f":"code","7c5186a3":"code","05dd8d9f":"code","2e1e1ecf":"code","3e01cdf9":"code","f3878bfc":"code","13bab9ab":"code","cf17a122":"code","c107f33b":"markdown","a150fc83":"markdown","10840289":"markdown","0e6a90c8":"markdown","dd83e8ef":"markdown","45877b7e":"markdown","4fcf2083":"markdown","7a97e922":"markdown","402be095":"markdown"},"source":{"d6c84c24":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","df4002a0":"def plot_features(ax, features, color='blue', title=''):\n    ax.scatter(np.arange(len(features)), features, c=color)\n    ax.set_ylabel('Feature Value')\n    ax.set_xlabel('Feature #')\n    ax.set_title(title)\n    \ndef plot_one_vs_class(ax, idx, class_features, title=''):\n    for i, feat in enumerate(class_features):\n        if i == idx: continue\n        plot_features(ax, feat, 'grey')\n    \n    plot_features(ax, class_features[idx], title=title)","d973606f":"train_features = pd.read_csv('..\/input\/lish-moa\/train_features.csv')\ntrain_targets = pd.read_csv('..\/input\/lish-moa\/train_targets_scored.csv')\ntrain_targets_ns = pd.read_csv('..\/input\/lish-moa\/train_targets_nonscored.csv')\ntest_features = pd.read_csv('..\/input\/lish-moa\/test_features.csv')\nsample_submission = pd.read_csv('..\/input\/lish-moa\/sample_submission.csv')","7c5186a3":"target = 'radiopaque_medium'\ntarget_df = train_features[train_targets[target] == 1].reset_index(drop=True)\ntarget_features = target_df.values[:, 4:]\nfig, ax = plt.subplots(2, 1, figsize=(20, 10))\nplot_one_vs_class(ax[0], 0, target_features)\nplot_one_vs_class(ax[1], 1, target_features)","05dd8d9f":"target = 'igf-1_inhibitor'\ntarget_df = train_features[train_targets[target] == 1].reset_index(drop=True)\ntarget_features = target_df.values[:, 4:]\nfig, ax = plt.subplots(2, 1, figsize=(20, 10))\nplot_one_vs_class(ax[0], 6, target_features)\nplot_one_vs_class(ax[1], 2, target_features)","2e1e1ecf":"x = np.mean(train_features.values[:, -100:], axis=1)\ny = np.std(train_features.values[:, 4:-100].astype(np.float), axis=1)","3e01cdf9":"fig, ax = plt.subplots(1, 1, figsize=(12, 12))\nax.scatter(x, y, c='blue')\nax.set_xlabel('Average Cell Viability')\nax.set_ylabel('Standard Deviation of Gene Expression')\nplt.show()","f3878bfc":"fig, ax = plt.subplots(1, 1, figsize=(20, 5))\nplot_features(ax, train_features[y > 7].values[0, 4:])","13bab9ab":"targets = train_targets.columns[1:][train_targets[y > 7].values[0, 1:].astype(np.bool)]\nprint('\\n'.join(targets))","cf17a122":"target = 'proteasome_inhibitor'\ndata = x[train_targets[target] == 1]\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\nax.hist(data, 20, color='blue')\nax.set_xlabel('Average Cell Viability')\nax.set_ylabel('Count')\nax.set_xlim(-10, 10)\nax.set_title(target)\nplt.show()","c107f33b":"## Dive deeper","a150fc83":"## Take a look at some examples\n\nFirst, we will look at the `radiopaque_medium` target. You will notice this target is not cytotoxic (does not kill cells) and the cell viability values seem pretty much contained between -2 and 2.","10840289":"We can see that there is indeed a strong correlation between these two variables. We can also see that there are very few positive average cell viability values.\n\nThere's also a single outlier in the top-left, an example with very high variablity and low cell viability. Let's have a look at it","0e6a90c8":"Wow! So we can see this drug killed pretty much all the cells and had a drastic effect on the gene output. We can see that although the drug killed all the cells, there appears to be a marked increase in some gene expression. Maybe these features are reveresed?\n\nSo what kind of drug is this, anyways?","dd83e8ef":"## Read in data","45877b7e":"## Experiment and iterate\n\nOne takeaway you might make from this plot is that for proteasome_inhibitor you might be able to come up with some rule like:\n - If avg. cell viability is less than -2.5, then it could *possibly* be proteasome_inhibitor.\n - If avg. cell viability is greater than -2.5, then it can't be proteasome_inhibitor.\n\nHowever, when I put this rule to the test, it turns out it doesn't actually hold true. I made an experimental submission where if a row had avg. cell viability greater than 0.0 (to be conservative), I would set it's probability to 0.0 for the proteasome_inhibitor target. Suprisingly, it resulted in a small increase in the reported loss.","4fcf2083":"The proteasome_inhibitor is a common target in our dataset with a high tendency towards cytotoxicity. Let's take a look at the average cell viability values for this target","7a97e922":"And next we'll look at the `igf-1_inhibitor` target. Unlike the previous MoA, this target is often cytotoxic and we will see some clear effects in the cell viability data with increasing dose\/time.","402be095":"## Take away an insight\n\nYou may also pick up on something else from this graph: **the larger the decrease in cell viability, the larger the gene data variability**. This makes perfect sense from the biologist point of view. If the compound induces cell death, it will likely also cause some large changes to the production of mRNA.\n\nSo, next let's take a look at these correlations across the whole dataset. On the x axis we will put the average cell viability values. And on the y axis we will put the standard deviation of the gene features."}}