{"cell_type":{"d8d43630":"code","3ab9ad8f":"code","7c093e5c":"code","28d1943c":"code","a322d5aa":"code","fadc44e1":"code","c66ee12a":"code","cd96ad8f":"code","77bf94fa":"code","77e77246":"code","6e45395d":"code","70a0874e":"code","a0121066":"code","6409a2b7":"code","d4680a8c":"code","b4745492":"code","a3893bdc":"code","e054d655":"code","1a6c9cc3":"markdown","8f5649cd":"markdown","d9be1132":"markdown"},"source":{"d8d43630":"import os\nimport random\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport cv2","3ab9ad8f":"os.listdir('..\/input\/landmark-retrieval-2021\/')","7c093e5c":"df = pd.read_csv('..\/input\/landmark-retrieval-2021\/train.csv', index_col=0)\ndf.head()","28d1943c":"#Code By Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/google-landmark-retrieval-2020-eda\n\ndef create_full_path(name):\n    return os.path.join(\n        '..\/input\/landmark-retrieval-2021\/train\/',\n        name[0],\n        name[1],\n        name[2],\n        f'{name}.jpg'\n    )","a322d5aa":"#Code By Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/google-landmark-retrieval-2020-eda\n\ndef vis(_id):\n    arr = df[df['landmark_id'] == _id].index.tolist()\n\n    plt.figure(figsize=(16, 16))\n    for i, name in enumerate(arr):\n        img = cv2.imread(create_full_path(name))\n        plt.subplot(4, 3, i + 1)\n        plt.imshow(img)\n        plt.xticks([])\n        plt.yticks([])\n        if i >= 11:\n            break\n    plt.suptitle(_id)\n    plt.show()","fadc44e1":"#Code By Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/google-landmark-retrieval-2020-eda\n\nvis(random.choice(df['landmark_id'].unique()))","c66ee12a":"import torch\nimport fastai\nfrom fastai.tabular.all import *\nfrom fastai.text.all import *\nfrom fastai.vision.all import *\nfrom fastai.medical.imaging import *\nfrom fastai import *\n\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)","cd96ad8f":"from PIL import Image\n\nimg = Image.open(\"..\/input\/landmark-retrieval-2021\/train\/0\/0\/0\/00001b2ba2c69ac5.jpg\")\nimg","77bf94fa":"#Code by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef visualize_images(path, n_images, is_random=True, figsize=(16, 16)):\n    plt.figure(figsize=figsize)\n    w = int(n_images ** .5)\n    h = math.ceil(n_images \/ w)\n    \n    all_names = os.listdir(path)\n    image_names = all_names[:n_images]   \n    if is_random:\n        image_names = random.sample(all_names, n_images)\n            \n    for ind, image_name in enumerate(image_names):\n        img = cv2.imread(os.path.join(path, image_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n        plt.subplot(h, w, ind + 1)\n        plt.imshow(img)\n        plt.xticks([])\n        plt.yticks([])\n    \n    plt.show()","77e77246":"landmarks_JPG_PATH = '..\/input\/landmark-retrieval-2021\/train\/0\/0\/0'","6e45395d":"visualize_images(landmarks_JPG_PATH, 9)","70a0874e":"#Code by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef show_color_histogram(path):\n    image_names = os.listdir(path)\n    image_name = random.choice(image_names)\n    img = cv2.imread(os.path.join(path, image_name))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    fig = make_subplots(1, 2)\n\n    fig.add_trace(go.Image(z=img), 1, 1)\n    for channel, color in enumerate(['red', 'green', 'blue']):\n        fig.add_trace(\n            go.Histogram(\n                x=img[..., channel].ravel(), \n                opacity=0.5,\n                marker_color=color, \n                name='%s channel' %color\n            ), 1, 2)\n    fig.update_layout(height=400)\n    fig.show()","a0121066":"#Code by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef color_hist_visualization(image_path, figsize=(16, 4)):\n    plt.figure(figsize=figsize)\n    \n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    plt.subplot(1, 4, 1)\n    plt.imshow(img)\n    plt.axis(\"off\")\n    \n    colors = [\"red\", \"green\", \"blue\"]\n    for i in range(len(colors)):\n        plt.subplot(1, 4, i + 2)\n        plt.hist(\n            img[:, :, i].reshape(-1),\n            bins=25,\n            alpha=0.5,\n            color=colors[i],\n            density=True\n        )\n        plt.xlim(0, 255)\n        plt.xticks([])\n        plt.yticks([])","6409a2b7":"#Code by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\nimg_path = '..\/input\/landmark-retrieval-2021\/train\/0\/0\/0\/0000fb2148d6c0e4.jpg'\ncolor_hist_visualization(img_path)\n\nimg_path = '..\/input\/landmark-retrieval-2021\/train\/2\/0\/2\/20200a7671167ac4.jpg'\ncolor_hist_visualization(img_path)\n\nimg_path = '..\/input\/landmark-retrieval-2021\/train\/6\/0\/0\/6000a31590ca910f.jpg'\ncolor_hist_visualization(img_path)","d4680a8c":"#Code by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\n\nshow_color_histogram(landmarks_JPG_PATH)","b4745492":"#Code by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef batch_visualization(path, n_images, is_random=True, figsize=(16, 16)):\n    plt.figure(figsize=figsize)\n    \n    w = int(n_images ** .5)\n    h = math.ceil(n_images \/ w)\n    \n    all_names = os.listdir(path)\n    \n    image_names = all_names[:n_images]\n    if is_random:\n        image_names = random.sample(all_names, n_images)\n    \n    for ind, image_name in enumerate(image_names):\n        img = cv2.imread(os.path.join(path, image_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n        plt.subplot(h, w, ind + 1)\n        plt.imshow(img)\n        plt.axis(\"off\")\n    \n    plt.show()","a3893bdc":"batch_visualization(landmarks_JPG_PATH, 1, is_random=True, figsize=(5, 5))","e054d655":"batch_visualization(landmarks_JPG_PATH, 4, is_random=True, figsize=(10, 10))","1a6c9cc3":"#Forever Yaroslav Isaienkov \n\nhttps:\/\/www.kaggle.com\/ihelon\/google-landmark-retrieval-2020-eda ","8f5649cd":"#Thank you Yaroslav Isaienkov for all the wonderful work you shared with us.","d9be1132":"#This work is a Tribute to Yaroslav Isaienkov to show all the admiration, respect and gratitude for the work he shared with Kaggle community."}}