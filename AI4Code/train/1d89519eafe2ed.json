{"cell_type":{"c643f26e":"code","6b84d759":"code","678dac13":"code","07022550":"code","8eaabcd2":"code","96b89bd4":"code","4c8b7d1a":"code","2765caaf":"code","aed6c1ce":"code","32f54112":"code","44a58eed":"code","a38756a7":"code","9b82680a":"code","b267c180":"code","39d6a30c":"code","e82af487":"code","c0a24c57":"code","0ed1a997":"code","e67ceff4":"code","fda693d9":"code","0f2aaa5f":"code","23ba7974":"code","3d035ea8":"code","a7511d52":"code","cba866b1":"markdown","cbb7522d":"markdown","2e77803d":"markdown","a1db2fc3":"markdown","6daddfac":"markdown","c32c9db9":"markdown","0d94ca67":"markdown","b1a7eda2":"markdown"},"source":{"c643f26e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\n%matplotlib inline","6b84d759":"# Read in white wine data \nwhite = pd.read_csv(\"http:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/wine-quality\/winequality-white.csv\", sep=';')\n\n# Read in red wine data \nred = pd.read_csv(\"http:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/wine-quality\/winequality-red.csv\", sep=';')","678dac13":"# Print info on white wine\nprint(white.info())","07022550":"# Print info on red wine\nprint(red.info())","8eaabcd2":"white.describe()","96b89bd4":"red.describe()","4c8b7d1a":"pd.isnull(red).count()","2765caaf":"pd.isnull(white).count()","aed6c1ce":"fig, ax = plt.subplots(1, 2)\n\nax[0].hist(red.alcohol, 10, facecolor='red', alpha=0.5, label=\"Red wine\")\nax[1].hist(white.alcohol, 10, facecolor='white', ec=\"black\", lw=0.5, alpha=0.5, label=\"White wine\")\n\nfig.subplots_adjust(left=0, right=1, bottom=0, top=0.5, hspace=0.05, wspace=1)\nax[0].set_ylim([0, 1000])\nax[0].set_xlabel(\"Alcohol in % Vol\")\nax[0].set_ylabel(\"Frequency\")\nax[1].set_xlabel(\"Alcohol in % Vol\")\nax[1].set_ylabel(\"Frequency\")\n#ax[0].legend(loc='best')\n#ax[1].legend(loc='best')\nfig.suptitle(\"Distribution of Alcohol in % Vol\")\n\nplt.show()","32f54112":"sns.pairplot(data=red, diag_kind = 'kde')","44a58eed":"sns.pairplot(data=white, diag_kind = 'kde')","a38756a7":"# Add `type` column to `red` with value 1\nred['type'] = 1\n\n# Add `type` column to `white` with value 0\nwhite['type'] = 0\n\n# Append `white` to `red`\nwines = red.append(white, ignore_index=True)\nwines.tail()","9b82680a":"# Specify the data \nX=wines.iloc[:,0:11]\n\n# Specify the target labels and flatten the array\ny= np.ravel(wines.type)\n#y= wines.type\n\n# Split the data up in train and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","b267c180":"y_test[0:10]","39d6a30c":"# Define the scaler \nscaler = StandardScaler().fit(X_train)\n\n# Scale the train set\nX_train = scaler.transform(X_train)\n\n# Scale the test set\nX_test = scaler.transform(X_test)","e82af487":"# Using Tensorflow Keras instead of the original Keras\n\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\n\n# define the model architecture\n\n# Initialize the constructor\nmodel = Sequential()\n\n# Add an input layer \nmodel.add(Dense(12, activation='sigmoid', input_shape=(11,)))\n\n# Add one hidden layer \nmodel.add(Dense(8, activation='sigmoid'))\n\n# Add an output layer \nmodel.add(Dense(1, activation='sigmoid'))","c0a24c57":"model.compile(loss='binary_crossentropy',\n              optimizer='adam',\n              metrics=['accuracy'])\n                   \nhistory = model.fit(X_train, y_train,epochs=20, batch_size=1, verbose=1)","0ed1a997":"y_pred = np.round(model.predict(X_test))","e67ceff4":"y_pred[0:10]","fda693d9":"loss, acc = model.evaluate(X_test, y_test, verbose=0)\nprint('Test Accuracy: %.3f' % acc)\n\n\nloss, acc = model.evaluate(X_train, y_train, verbose=0)\nprint('Test Accuracy: %.3f' % acc)\n","0f2aaa5f":"from sklearn import metrics\n\nprint(pd.DataFrame(metrics.confusion_matrix(y_test, y_pred, labels=[0 ,1]), index=['true:White', 'true:Red'], columns=['pred:White', 'pred:Red']))","23ba7974":"print(history.history)","3d035ea8":"%matplotlib inline\nfrom matplotlib import pyplot\nfrom numpy import where\n\n# plot loss during training\npyplot.subplot(211)\npyplot.title('Accuracy')\npyplot.plot(history.history['accuracy'], label='train')\npyplot.legend()","a7511d52":"%matplotlib inline\nfrom matplotlib import pyplot\nfrom numpy import where\n\n# plot loss during training\npyplot.subplot(211)\npyplot.title('Loss')\npyplot.plot(history.history['loss'], label='train')\npyplot.legend()","cba866b1":"## 4. Checking for null values:","cbb7522d":"## 6. Building Deep Neural Network","2e77803d":"## 2. Importing Library:","a1db2fc3":"## 3. Loading Dataset:","6daddfac":"## 7.Prediction:","c32c9db9":"## 5. EDA","0d94ca67":"# **Table of Content** \ud83d\udcdd\n> ### 1. Introduction\n> ### 2. Importing Library\n> ### 3. Loading Dataset\n> ### 4. Checking for Null Values\n> ### 5. EDA\n> ### 6. Splitting Data\n> ### 7. Building Model\n> ### 8. Predicting ","b1a7eda2":"## 1. Introduction:\n> ### This notebook is about Wine classification uisng Deep Neural Network.\n> ### Data is gather from this link [White](http:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/wine-quality) and [Red](http:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/wine-quality)\n"}}