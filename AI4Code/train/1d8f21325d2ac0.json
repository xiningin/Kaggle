{"cell_type":{"2e2ff949":"code","f47e613f":"code","94063ce7":"code","84edc241":"code","2f9594e0":"code","864b5857":"code","b42251af":"code","f98b8a73":"code","1a17301a":"code","294bd560":"code","c1d18e90":"code","2c0d4aaa":"code","933df891":"code","d8538356":"code","29aa3bbe":"code","bbec846b":"code","b2a51a70":"code","cc984adf":"code","36b81c4c":"code","8e5b60df":"code","d39f4192":"code","effcb3fb":"code","faa2f72e":"code","4bfec301":"code","16fe2fc8":"code","85ac000f":"markdown","d36f1973":"markdown","7e7754c6":"markdown","4121880c":"markdown","bcf45938":"markdown","25acebd9":"markdown","34115198":"markdown","71e3610f":"markdown","ce298d22":"markdown","e6037d05":"markdown","c1265a5c":"markdown","8db73e7e":"markdown","fb6fe7b3":"markdown","97796157":"markdown","7a160e14":"markdown","1122c73e":"markdown","26e817b6":"markdown","c575c081":"markdown","ccd2d457":"markdown","70154fee":"markdown","219061ff":"markdown"},"source":{"2e2ff949":"#\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a, \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0444\u0430\u0439\u043b\u0430\nimport pandas as pd              #\u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Pandas\nimport numpy as np               #\u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Numpy\nimport seaborn as sns            #\u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Seaborn\nimport matplotlib.pyplot as plt  #\u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Matplotlib\n\n\ndata = pd.read_csv('..\/input\/telecom-users\/telecom_users.csv')  #\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\ndata.head()","f47e613f":"#\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\ndata.info()","94063ce7":"# \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0443\u044e\u0449\u0438\u043c \u0442\u0438\u043f\u0430\u043c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u0449\u0435\u0439 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.\nnew_type_list = []\nfor i in data['TotalCharges']:\n    try:\n        i = float(i)\n    except:\n        i = 0\n    new_type_list.append(i)\n\ndata['TotalCharges'] = new_type_list","84edc241":"#\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0442\u0438\u043f\u0430\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\ndata.dtypes","2f9594e0":"#\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\ndata.describe()","864b5857":"# \u041f\u043e\u043b\u0447\u0443\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e \u043d\u0435\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c\ndata.describe(include=[np.object])","b42251af":"# \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u043e\u0442\u0442\u043e\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434\ncount = data.describe(include=[np.object]).loc['count','Churn']\nChurn = count - data.describe(include=[np.object]).loc['freq','Churn']\nprint(f'\u041f\u0440\u043e\u0446\u0435\u043d\u0442 \u043e\u0442\u0442\u043e\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 {Churn * 100 \/\/ count}%')","f98b8a73":"# \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0441 ID \u043a\u043b\u0438\u0435\u043d\u0442\u0430\ndel data['customerID']","1a17301a":"# \u0414\u043b\u044f \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u044f \u043d\u0430 \u043a\u043b\u0430\u0441\u0441\u044b \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u043c:\n# \u0414\u0430\u043d\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u043f\u0440\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\ndef classificator(data_frame):  #\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0444\u0443\u043d\u043a\u0438\u0446\u044e\n    for feature in list(data_frame.columns):      # \u0417\u0430\u0434\u0430\u0435\u043c \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u043e\u043b\u043e\u043d\u043e\u043a\n        if data_frame[feature].dtype == 'O':      # \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0443\u044e\u0449\u0438\u0445 \u0442\u0438\u043f\u0443 \u0434\u0430\u043d\u044b\u0445 \"Objekt\"\n            data_frame[feature].replace(['Yes', 'No'], [1, 0], inplace=True)   # \u0417\u0430\u043c\u0435\u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 'Yes' \u0438 'No' \u043d\u0430 0 \u0438 1\n            for iteration, value in enumerate(list(data_frame[feature].unique())):  # \u0418\u0442\u0435\u0440\u0430\u0442\u043e\u0440 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\n                if type(value) == str:         # \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0434\u043b\u044f \u0437\u0430\u043c\u0435\u043d\u044b \u043d\u0435\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n                    if data_frame[feature].nunique() > 2:  # \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043a\u043e\u043c\u043f\u0435\u043d\u0441\u0430\u0446\u0438\u0438 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u043e\u0433\u043e \u043d\u043e\u043c\u0435\u0440\u0430 \u0434\u043b\u044f \n                        iteration += 1                     # \u0442\u0435\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u0431\u044b\u043b\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 'Yes' \u0438 'No'\n                    data_frame[feature].replace(value, iteration, inplace=True)  # \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u0441\u0435\u0445 \u043d\u0435\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0443\u0449\u0439 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \ndata_new = data.copy()\nclassificator(data_new)\ndata_new","294bd560":"#\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0441\u0432\u044f\u0437\u0438 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14,12))\nplt.title('Correlation of Features', y=1, size=15)\nsns.heatmap(data_new.corr(),linewidths=0.1,vmax=1.0, \n            square=True, cmap=colormap, linecolor='white', annot=True, fmt='.2g')\nplt.show()","c1d18e90":"#\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0431\u0435\u0437\u044b\u043c\u044f\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0434\u0438\u043a\u0442\u043e\u0440 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439, \u043c\u043e\u0436\u0435\u043c \u0435\u0433\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c.\ndel data['Unnamed: 0']","2c0d4aaa":"# \u041f\u043e\u0441\u043c\u0442\u043e\u0442\u0440\u0438\u043c \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438\nsecurity_data = data_new[['Churn', 'OnlineSecurity', 'TechSupport', 'OnlineBackup', 'DeviceProtection', 'PaperlessBilling']].groupby('Churn').agg('sum')\nsecurity_data.iloc[0,:] = security_data.iloc[0,:]\/\/((data_new.Churn.count()-data_new.Churn.sum())\/100)\nsecurity_data.iloc[1,:] = security_data.iloc[1,:]\/\/(data_new.Churn.sum()\/100)\nsecurity_data","933df891":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u044d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0435\nlabels = security_data.columns  # \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 \u043f\u043e x\npercent_0 = security_data.iloc[0,:]  # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432\npercent_1 = security_data.iloc[1,:]  # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 \u0443\u0448\u0435\u0434\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432\n\nx = np.arange(len(labels))  # \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043f\u043e x\nwidth = 0.3  # \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u0448\u0438\u0440\u0438\u043d\u044b \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\nfig, ax = plt.subplots(figsize=(10,5))  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0438\u0433\u0443\u0440\u044b \u0438 \u043e\u0441\u0435\u0439\nrects1 = ax.bar(x - width\/2, percent_0, width, label='\u041e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u044b')  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u043e\u0442\u0441\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445\nrects2 = ax.bar(x + width\/2, percent_1, width, label='\u0423\u0448\u0435\u0434\u0448\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u044b')   # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u0443\u0448\u0435\u0434\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445\n\n# \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 \u0434\u043b\u044f \u043e\u0441\u0435\u0439, \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u043b\u0435\u0433\u0435\u043d\u0434\u044b\nax.set_ylabel('\u041f\u0440\u043e\u0446\u0435\u043d\u0442\u044b')\nax.set_xlabel('\u0423\u0441\u043b\u0443\u0433\u0438')\nax.set_title('\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\u0438 \u0443\u0441\u043b\u0443\u0433 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438, %')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend(bbox_to_anchor=(1, 1.02), loc='upper left')\n\n# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0441 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\u043c\u0438\ndef autolabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        # \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0439\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height), # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u0447\u0435\u043a \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0434\u043b\u044f \u0442\u0435\u043a\u0441\u0442\u0430\n                    xytext=(0, 2),    # \u0412\u044b\u0441\u043e\u0442\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430\u0434 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\u0438\n                    # \u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n                    textcoords=\"offset points\",  \n                    ha='center', va='bottom')\n\nautolabel(rects1)  # \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445\nautolabel(rects2)  # \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0432\u0442\u043e\u0440\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445\n\nplt.show()","d8538356":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u0443\u0448\u0435\u0434\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0441\u043b\u0443\u0433\npercent_churn = data_new[data_new.Churn==1][['Churn','tenure']].groupby('tenure').sum()\npercent_churn.Churn = list(map(lambda x: x \/ (data_new.Churn.sum() \/ 100), percent_churn.Churn))\nplt.figure(figsize=(8,5))\nplt.title('\u041f\u0440\u043e\u0446\u0435\u043d\u0442 \u043e\u0442\u0442\u043e\u043a\u0430 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438', y=1.03, size=15)\nplt.xlabel('\u041c\u0435\u0441\u044f\u0446\u044b')\nplt.ylabel('\u041f\u0440\u043e\u0446\u0435\u043d\u0442\u044b')\nplt.plot(percent_churn.index, percent_churn.Churn)\nplt.show()","29aa3bbe":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0434\u044b\u043d\u043d\u044b\u0435 \u043e \u043c\u0435\u0441\u044f\u0447\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0435 \u0437\u0430 \u0441\u0432\u044f\u0437\u044c \u0441\u0440\u0435\u0434\u0438 2 \u0433\u0440\u0443\u043f\u043f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432\nsns.set(style=\"whitegrid\") \nax = sns.catplot('Churn', 'MonthlyCharges', data=data_new, aspect=1.1, height=5, kind='box') \ny_0 = data_new.MonthlyCharges[data_new.Churn==0].median()\ny_1 = data_new.MonthlyCharges[data_new.Churn==1].median()\nax = sns.lineplot(x=[-0.3,0.3], y=y_0)\nax = sns.lineplot(x=[0.7,1.3], y=y_1)","bbec846b":"from sklearn.neighbors import KNeighborsClassifier  #\u0418\u043c\u043f\u043e\u0440\u0442 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \"K-\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439\"\nfrom sklearn.ensemble import GradientBoostingClassifier, RandomForestClassifier #\u0418\u043c\u043f\u043e\u0440\u0442 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \"\u0413\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u044b\u0439 \u0431\u0443\u0441\u0442\u0438\u043d\u0433\" \u0438 \"\u0420\u0430\u043d\u0434\u043e\u043c\u043d\u044b\u0439 \u043b\u0435\u0441\"\nfrom sklearn.linear_model import LogisticRegression  #\u0418\u043c\u043f\u043e\u0440\u0442 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \"\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f\"\nfrom sklearn.svm import SVC  #\u0418\u043c\u043f\u043e\u0440\u0442 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \"\u041c\u0435\u0442\u043e\u0434 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432\"\n\n#\u0418\u043c\u043f\u043e\u0440\u0442 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\nfrom sklearn.model_selection import GridSearchCV, train_test_split, StratifiedKFold\n\n#\u0418\u043c\u043f\u043e\u0440\u0442 \u043c\u0435\u0442\u0440\u0438\u043a \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438\nfrom sklearn.metrics import recall_score, precision_score, accuracy_score\nfrom sklearn.metrics import roc_auc_score","b2a51a70":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432\n\nknn_params = {'n_neighbors' : np.arange(1, 10, 1)}  # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 KNeighborsClassifier\n\ngbc_params = {'learning_rate': np.arange(0.1, 0.6, 0.1)}   # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 GradientBoostingClassifier\n\nrfc_params = {'n_estimators': range(10, 100, 10),  # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 RandomForestClassifier\n              'min_samples_leaf': range(1, 7)}\n\nsvc_params = {'kernel': ['linear', 'rbf'], \n'C': np.arange(0.1, 1, 0.2)}                       # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 SVC\n\nlr_params = {'C': np.arange(0.2, 1, 0.1)} # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 LogisticRegression\n\nskf = StratifiedKFold(n_splits=8, random_state=17) # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438","cc984adf":"# \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435\ny = data_new['Churn']\nx = data_new[['tenure', 'OnlineSecurity', 'TechSupport', 'OnlineBackup', 'DeviceProtection', 'MonthlyCharges', 'PaperlessBilling']]","36b81c4c":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u043a\u0443 \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\nprint('\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 -', y.sum())\nprint('\u041e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 -', y.count() - y.sum())","8e5b60df":"# \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=.3,  stratify=y, random_state=17)","d39f4192":"# GridSearch \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\n\nknn = KNeighborsClassifier()                       # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 KNeighborsClassifier\ngbc = GradientBoostingClassifier(random_state=17)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 GradientBoostingClassifier\nrfc = RandomForestClassifier(random_state=17)      # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 RandomForestClassifier\nsvc = SVC(random_state=17, probability=True)       # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 SVC\nlr = LogisticRegression(random_state=17,\n                        #class_weight = {1:5},\n                        solver = 'liblinear')      # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 LogisticRegression\n\ngscv_knn = GridSearchCV(estimator=knn, param_grid=knn_params, cv=skf)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f KNeighborsClassifier\ngscv_gbc = GridSearchCV(estimator=gbc, param_grid=gbc_params, cv=skf)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f GradientBoostingClassifier\ngscv_rfc = GridSearchCV(estimator=rfc, param_grid=rfc_params, cv=skf)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f RandomForestClassifier\ngscv_svc = GridSearchCV(estimator=svc, param_grid=svc_params, cv=skf)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f SVC\ngscv_lr = GridSearchCV(estimator=lr, param_grid=lr_params, cv=skf)     # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f LogisticRegression\n\nknn_model = gscv_knn.fit(X_train, y_train)  # \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 KNeighborsClassifier \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\ngbc_model = gscv_gbc.fit(X_train, y_train)  # \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 GradientBoostingClassifier \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\nrfc_model = gscv_rfc.fit(X_train, y_train)  # \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 RandomForestClassifier \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\nsvc_model = gscv_svc.fit(X_train, y_train)  # \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 SVC \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\nlr_model = gscv_lr.fit(X_train, y_train)    # \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 LogisticRegression \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438","effcb3fb":"# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043b\u0443\u0447\u0448\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\nprint('\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:')\nprint(f'KNeighborsClassifier %s \\nGradientBoostingClassifier %s \\nRandomForestClassifier %s \\nSVC %s \\nLogisticRegression %s' %(\n                                                                gscv_knn.best_params_,\n                                                                gscv_gbc.best_params_,\n                                                                gscv_rfc.best_params_,\n                                                                gscv_svc.best_params_,\n                                                                gscv_lr.best_params_))","faa2f72e":"# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n\nknn_predict = knn_model.predict(X_test)\ngbc_predict = gbc_model.predict(X_test)\nrfc_predict = rfc_model.predict(X_test)\nsvc_predict = svc_model.predict(X_test)\nlr_predict = lr_model.predict(X_test)","4bfec301":"# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u043d\u043e\u0442\u044b \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432\nmetrics_scores = [recall_score, precision_score, accuracy_score]\npredicts = [knn_predict, gbc_predict, rfc_predict, svc_predict, lr_predict]\nmodels_names = ['KNeighbors', 'GradientBoosting', 'RandomForest', 'SVC', 'LogisticRegression']\nscores_names = ['recall_score', 'precision_score', 'accuracy_score']\nvalues_list = []\nfor i, score in enumerate(metrics_scores):\n    for predict in predicts:\n        values_list.append(round(score(y_test, predict),3))    \n    \n    x = np.arange(len(models_names))  # \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043f\u043e x\n    \n    fig, ax = plt.subplots(figsize=(10,5))  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0438\u0433\u0443\u0440\u044b \u0438 \u043e\u0441\u0435\u0439\n    rects = ax.bar(x, values_list, 0.6)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445\n    \n    # \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 \u0434\u043b\u044f \u043e\u0441\u0435\u0439, \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u043b\u0435\u0433\u0435\u043d\u0434\u044b\n    ax.set_ylabel('\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438')\n    ax.set_xlabel('\u041c\u043e\u0434\u0435\u043b\u0438')\n    ax.set_title(f'\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f {scores_names[i]} \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438')\n    ax.set_xticks(x)\n    ax.set_xticklabels(models_names)\n    \n    # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0441 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\u043c\u0438\n    def autolabel(rects):\n        for rect in rects:\n            height = rect.get_height()\n            # \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0439\n            ax.annotate('{}'.format(height),\n                        xy=(rect.get_x() + rect.get_width() \/ 2, height), # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u0447\u0435\u043a \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0434\u043b\u044f \u0442\u0435\u043a\u0441\u0442\u0430\n                        xytext=(0, 2),    # \u0412\u044b\u0441\u043e\u0442\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430\u0434 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\u0438\n                        # \u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n                        textcoords=\"offset points\",  \n                        ha='center', va='bottom')\n    \n    autolabel(rects)  # \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    values_list = []\n\nplt.show()","16fe2fc8":"# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 ROC-AUC score \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432\n\nauc_list = []\nmodels = [knn_model, gbc_model, rfc_model, svc_model, lr_model]\nfor model in models:\n    proba = model.predict_proba(X_test)\n    auc_list.append(round(roc_auc_score(y_test, proba[:, 1]),3))\n    \nx = np.arange(len(models_names))  # \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043f\u043e x\n\nfig, ax = plt.subplots(figsize=(10,5))  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0438\u0433\u0443\u0440\u044b \u0438 \u043e\u0441\u0435\u0439\nrects = ax.bar(x, auc_list, 0.6)  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445\n\n# \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 \u0434\u043b\u044f \u043e\u0441\u0435\u0439, \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u043b\u0435\u0433\u0435\u043d\u0434\u044b\nax.set_ylabel('\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438')\nax.set_xlabel('\u041c\u043e\u0434\u0435\u043b\u0438')\nax.set_title('\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f roc_auc_score \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438')\nax.set_xticks(x)\nax.set_xticklabels(models_names)\n\n# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0441 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\u043c\u0438\ndef autolabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        # \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0439\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height), # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u0447\u0435\u043a \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0434\u043b\u044f \u0442\u0435\u043a\u0441\u0442\u0430\n                    xytext=(0, 2),    # \u0412\u044b\u0441\u043e\u0442\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430\u0434 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\u0438\n                    # \u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n                    textcoords=\"offset points\",  \n                    ha='center', va='bottom')\n\nautolabel(rects)  # \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\nvalues_list = []\n\nplt.show()","85ac000f":"\u041f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435\u0442, \u043d\u043e \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445.","d36f1973":"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0442\u043e\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0430 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041b\u0443\u0447\u0448\u0438\u043c\u0438 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0432 \u0440\u0435\u0448\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \"\u0420\u0430\u043d\u0434\u043e\u043c\u043d\u044b\u0439 \u043b\u0435\u0441\", \"\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f\", \"K-\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439\", \"\u041c\u0435\u0442\u043e\u0434 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432\", \"\u0413\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u044b\u0439 \u0431\u0443\u0441\u0442\u0438\u043d\u0433\".","7e7754c6":"\u0411\u043e\u043b\u044c\u0448\u0435 20% \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0443\u0448\u043b\u0438 \u0432 \u043f\u0435\u0440\u0432\u044b\u0435 \u043c\u0435\u0441\u044f\u0446\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438.","4121880c":"\u041c\u0435\u0434\u0438\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0442\u0442\u043e\u043a\u0430 \u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c \u0432\u044b\u0448\u0435 \u0447\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443 \u0433\u0440\u0443\u043f\u043f\u044b \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e \u0447\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0443\u0448\u0435\u0434\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u0443\u043b\u0441\u0443\u0433\u0430\u043c\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u044d\u0442\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043b\u043e, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u0430 \u0443\u0441\u043b\u0443\u0433\u0438.","bcf45938":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 roc_auc_score \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432 GradientBoosting, LogisticRegression \u0438 RandomForest. ","25acebd9":"# 2. \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0438 \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0433\u0438\u043f\u043e\u0442\u0435\u0437","34115198":"# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b:\n&nbsp;&nbsp;&nbsp;&nbsp;\n<br><br>\n&nbsp;&nbsp;&nbsp;&nbsp; \u041b\u044e\u0431\u043e\u0439 \u0431\u0438\u0437\u043d\u0435\u0441 \u0445\u043e\u0447\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. \u0414\u043b\u044f \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u0446\u0435\u043b\u0438 \u0432\u0430\u0436\u043d\u043e \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u044b\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u044c \u043d\u043e\u0432\u044b\u0445, \u043d\u043e \u0438 \u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445. \u0423\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043e\u0431\u043e\u0439\u0434\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0434\u0435\u0448\u0435\u0432\u043b\u0435, \u0447\u0435\u043c \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u044c \u043d\u043e\u0432\u043e\u0433\u043e. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0430\u0431\u043e \u0437\u0430\u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0432 \u0443\u0441\u043b\u0443\u0433\u0430\u0445 \u0431\u0438\u0437\u043d\u0435\u0441\u0430 \u0438 \u0441 \u043d\u0438\u043c \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u043e\u0436\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u0442\u043e\u0433\u0434\u0430 \u043a\u0430\u043a \u043e \u0441\u0442\u0430\u0440\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e \u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u043c. \n <br>\n\n&nbsp;&nbsp;&nbsp;&nbsp; \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u0443\u044f \u043e\u0442\u0442\u043e\u043a, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u043e\u0432\u0440\u0435\u043c\u044f \u0441\u0440\u0435\u0430\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u043e\u043f\u044b\u0442\u0430\u0442\u044c\u0441\u044f \u0443\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u043e\u0447\u0435\u0442 \u0443\u0439\u0442\u0438. \u041e\u043f\u0438\u0440\u0430\u044f\u0441\u044c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0443\u0441\u043b\u0443\u0433\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0435\u043c\u0443 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043f\u044b\u0442\u0430\u044f\u0441\u044c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0445\u043e\u0434\u0435 \u043e\u0442 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u044d\u0442\u043e\u043c\u0443 \u0437\u0430\u0434\u0430\u0447\u0430 \u0443\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043b\u0435\u0433\u0447\u0435 \u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u0447\u0435\u043c \u0437\u0430\u0434\u0430\u0447\u0430 \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u044b \u0435\u0449\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0437\u043d\u0430\u0435\u043c.<br>\n\n&nbsp;&nbsp;&nbsp;&nbsp; \u0417\u0434\u0435\u0441\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 \u0442\u0435\u043b\u0435\u043a\u043e\u043c\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438. \u0412 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u0447\u0442\u0438 \u0448\u0435\u0441\u0442\u0438 \u0442\u044b\u0441\u044f\u0447\u0430\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0438\u0445 \u0434\u0435\u043c\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u0445, \u0443\u0441\u043b\u0443\u0433\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043e\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f, \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430, \u043c\u0435\u0442\u043e\u0434\u0435 \u043e\u043f\u043b\u0430\u0442\u044b, \u0440\u0430\u0437\u043c\u0435\u0440\u0435 \u043e\u043f\u043b\u0430\u0442\u044b. \n<br>\n\n&nbsp;&nbsp;&nbsp;&nbsp; C\u0442\u043e\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0430 \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0442\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n1. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \n2. \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0438 \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0433\u0438\u043f\u043e\u0442\u0435\u0437.\n3. \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0442\u043e\u043a\u0430. \n4. \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \n\n_________\n\n[Codebook](#Codebook) <br>\n[1. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445](#1.-\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435-\u0434\u0430\u043d\u043d\u044b\u0445)<br>\n[2. \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0438 \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0433\u0438\u043f\u043e\u0442\u0435\u0437](#2.-\u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439-\u0438-\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u0433\u0438\u043f\u043e\u0442\u0435\u0437)<br>\n[3. \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0442\u043e\u043a\u0430](#3.-\u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435-\u043c\u043e\u0434\u0435\u043b\u0435\u0439-\u0434\u043b\u044f-\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f-\u043e\u0442\u0442\u043e\u043a\u0430)<br>\n[4. \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0435\u0439](#4.-\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435-\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430-\u043c\u043e\u0434\u0435\u043b\u0435\u0439) <br>\n","71e3610f":"**\u0412\u044b\u0432\u043e\u0434\u044b \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0445:**\n* \u041f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u043e\u0440\u0430 TotalCharges. \u0412\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b, \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0431\u0435\u0437 \u043e\u0448\u0438\u0431\u043e\u043a \u0438 \u0438\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u043e\u043a.\n* \u041c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0441\u044f\u0447\u043d\u044b\u0439 \u043f\u043b\u0430\u0442\u0435\u0436 \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u0430\u0431\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 70.4 \u0443.\u0435.\n* \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 - \u043c\u0443\u0436\u0447\u0438\u043d\u044b.\n* \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0435\u043d\u0441\u0438\u043e\u043d\u0435\u0440\u043e\u0432 \u043c\u0435\u043d\u044c\u0448\u0435 \u0447\u0435\u043c 25%.\n* \u041c\u0435\u0434\u0438\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0447\u0443\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 29. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 - 72.\n* \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u0442 \u0432 \u0431\u0440\u0430\u043a\u0435 \u0430 \u0442\u0430\u043a \u0436\u0435 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0438\u0436\u0434\u0438\u0432\u0435\u043d\u0446\u0435\u0432.\n* \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f Fiber optic.\n* \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438.\n* \u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438\u043c\u0435\u044e\u0442 \u0442\u0438\u043f \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 Month-to-month.\n* \u0411\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0431\u0435\u0437\u0431\u0443\u043c\u0430\u0436\u043d\u044b\u0439 \u0431\u0438\u043b\u043b\u0438\u043d\u0433.\n* Electronic check \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \u043e\u043f\u043b\u0430\u0442\u044b.\n* \u041f\u0440\u043e\u0446\u0435\u043d\u0442 \u043e\u0442\u0442\u043e\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u043b 26%","ce298d22":"2.2 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0441\u0432\u044f\u0437\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c","e6037d05":"\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e\u0447\u0442\u0438 \u0432 3 \u0440\u0430\u0437\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 \u0447\u0435\u043c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445. \u041f\u0440\u0438 \u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0441\u0442\u0440\u0430\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u043e y.","c1265a5c":"# 4. \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 ","8db73e7e":"2.1 \u041f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443.","fb6fe7b3":"\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 \u044d\u0442\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043d\u0430\u043c \u043e \u0442\u043e\u043c \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043e\u0442\u043a\u0430\u0436\u0435\u0442\u0441\u044f \u043e\u0442 \u0443\u0441\u043b\u0443\u0433 \u0441\u0432\u044f\u0437\u0438, \u0435\u0441\u043b\u0438 \u0443 \u043d\u0435\u0433\u043e \u043d\u0435 \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0443\u0441\u043b\u0443\u0433\u0438 \u043f\u043e \u043e\u043d\u043b\u0430\u0439\u043d \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438, \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0435, \u0437\u0430\u0449\u0438\u0442\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u043c\u0443 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445. \u0422\u0430\u043a \u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043e\u0442\u0442\u043e\u043a\u0430 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0435\u0437\u0431\u0443\u043c\u0430\u0436\u043d\u043e\u0433\u043e \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0430. \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443 \u043e\u0442\u0442\u043e\u043a\u043e\u043c, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u0438 \u043c\u0435\u044f\u0447\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u043e\u0439 \u044f\u0432\u043b\u044f\u0435\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c\u0438 \u0441\u0432\u044f\u0437\u044f\u043c\u0438.","97796157":"\u041e\u0441\u043e\u0431\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0437\u0430\u043c\u0435\u0442\u043d\u0430 \u0443 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0443\u0441\u043b\u0443\u0433 OnlineSecurity \u0438 TechSupport. \u041e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u044d\u0442\u0438\u043c\u0438 \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438 \u0432 3 \u0440\u0430\u0437\u0430 \u0447\u0430\u0449\u0435, \u0443\u0441\u043b\u0443\u0433\u0438 OnlineBackup \u0438 DeviceProtection \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0441\u043f\u0440\u043e\u0441\u043e\u043c \u0443 \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0432 \u043f\u043e\u0447\u0442\u0438 2 \u0440\u0430\u0437\u0430 \u0447\u0430\u0449\u0435. \u0421 \u0431\u0435\u0441\u0431\u0443\u043c\u0430\u0436\u043d\u044b\u043c \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u043e\u043c \u043a\u0430\u0440\u0442\u0438\u043d\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0438\u043d\u0430\u0447\u0435 - \u043d\u0430 21% \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u043c \u0441\u0447\u0451\u0442\u043e\u043c \u0432 \u0433\u0440\u0443\u043f\u043f\u0435 \u043e\u0442\u0442\u043e\u043a\u0430.","7a160e14":"## Codebook\n\n`telecom_users.csv` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:<br><br>\n\n&nbsp;&nbsp;&nbsp;&nbsp; `customerID` \u2013 id \u043a\u043b\u0438\u0435\u043d\u0442\u0430<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `gender` \u2013 \u043f\u043e\u043b \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (male\/female)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `SeniorCitizen` \u2013 \u044f\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u0435\u043d\u0441\u0438\u043e\u043d\u0435\u0440\u043e\u043c (1, 0)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `Partner` \u2013 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u0432 \u0431\u0440\u0430\u043a\u0435 (Yes, No)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `Dependents` \u2013 \u0435\u0441\u0442\u044c \u043b\u0438 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0436\u0434\u0438\u0432\u0435\u043d\u0446\u044b (Yes, No)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `tenure` \u2013 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u044f\u0432\u043b\u044f\u043b\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `PhoneService` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 (Yes, No)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `MultipleLines` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u044b\u0445 \u043b\u0438\u043d\u0438\u0439 (Yes, No, No phone service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `InternetService` \u2013 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (DSL, Fiber optic, No)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `OnlineSecurity` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430 \u043e\u043d\u043b\u0430\u0439\u043d-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 (Yes, No, No internet service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `OnlineBackup` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430 online backup (Yes, No, No internet service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `DeviceProtection` \u2013 \u0435\u0441\u0442\u044c \u043b\u0438 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441\u0442\u0440\u0430\u0445\u043e\u0432\u043a\u0430 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f (Yes, No, No internet service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `TechSupport` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 (Yes, No, No internet service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `StreamingTV` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430 \u0441\u0442\u0440\u0438\u043c\u0438\u043d\u0433\u043e\u0432\u043e\u0433\u043e \u0442\u0435\u043b\u0435\u0432\u0438\u0434\u0435\u043d\u0438\u044f (Yes, No, No internet service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `StreamingMovies` \u2013 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430 \u0441\u0442\u0440\u0438\u043c\u0438\u043d\u0433\u043e\u0432\u043e\u0433\u043e \u043a\u0438\u043d\u043e\u0442\u0435\u0430\u0442\u0440\u0430 (Yes, No, No internet service)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `Contract` \u2013 \u0442\u0438\u043f \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (Month-to-month, One year, Two year)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `PaperlessBilling` \u2013 \u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u0431\u0435\u0437\u0431\u0443\u043c\u0430\u0436\u043d\u044b\u043c \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u043e\u043c (Yes, No)<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `PaymentMethod` \u2013 \u043c\u0435\u0442\u043e\u0434 \u043e\u043f\u043b\u0430\u0442\u044b (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `MonthlyCharges` \u2013 \u043c\u0435\u0441\u044f\u0447\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u043f\u043b\u0430\u0442\u044b \u043d\u0430 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `TotalCharges` \u2013 \u043e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u043b \u0437\u0430 \u0443\u0441\u043b\u0443\u0433\u0438 \u0437\u0430 \u0432\u0441\u0435 \u0432\u0440\u0435\u043c\u044f<br>\n&nbsp;&nbsp;&nbsp;&nbsp; `Churn` \u2013 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u043b \u043b\u0438 \u043e\u0442\u0442\u043e\u043a (Yes or No)<br>","1122c73e":"# 1. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","26e817b6":"\u0412 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u043c\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438.","c575c081":"**\u0412\u044b\u0432\u043e\u0434 \u043f\u043e \u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u043e\u0432\u0435\u0434\u0451\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430**\n\n* \u041e\u0434\u043d\u043e\u0439 \u0438\u0437 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u043f\u0440\u0438\u0447\u0438\u043d \u043e\u0442\u0442\u043e\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0443\u0441\u043b\u0443\u0433\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0447\u0435\u0442\u043e\u0432. \n* \u041f\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u043e\u043a \u043d\u0430 \u0443\u0441\u043b\u0443\u0433\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438, \u0443\u0448\u0435\u0434\u0448\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u044b \u043f\u0435\u0440\u0435\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u043b\u0438 \u0437\u0430 \u043c\u0435\u0441\u044f\u0447\u043d\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u044c\u044e.\n* \u041e\u043a\u043e\u043b\u043e 20% \u0443\u0448\u0435\u0434\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0430\u0441\u044c \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438 \u043e\u043a\u043e\u043b\u043e \u043c\u0435\u0441\u044f\u0446\u0430. \u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0442\u0442\u043e\u043a\u0430 \u0443\u0448\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u0443\u044f\u0441\u044c \u0441\u0432\u044f\u0437\u044c\u044e \u043c\u0435\u043d\u0435\u0435 \u0433\u043e\u0434\u0430.","ccd2d457":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443 unique, \u0432 \u043d\u0435\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.\n\u0414\u0430\u043d\u043d\u044b\u0435 \u0447\u0438\u0441\u0442\u044b\u0435. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043f\u043e\u043b\u0435 gender 2 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0442.\u0435. \u0444\u043e\u0440\u043c\u0430 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e\u043b\u0430 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430.","70154fee":"# 3. \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0442\u043e\u043a\u0430","219061ff":"\u0421 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 Churn \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0441\u043b\u0430\u0431\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c \u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432: **Tenure, OnlineSecurity, TechSupport, OnlineBackup, DeviceProtection, MonthlyCharges, PaperlessBilling**."}}