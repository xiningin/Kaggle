{"cell_type":{"bcd2ed45":"code","f08fd447":"code","5f89640d":"code","3c964660":"code","0de46f17":"code","5b3569e3":"code","39620335":"code","65b0670c":"code","bb4a0ff7":"code","558a55fa":"code","72dff8ec":"code","db63dbdc":"markdown"},"source":{"bcd2ed45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f08fd447":"import pandas as pd\nimport numpy as np\nimport multiprocessing\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nimport gc\nfrom time import time\nimport datetime\nfrom tqdm import tqdm_notebook\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold, TimeSeriesSplit\nfrom sklearn.metrics import roc_auc_score\nwarnings.simplefilter('ignore')\n\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom scipy import sparse as ss\nfrom sklearn.linear_model import LogisticRegression","5f89640d":"files = ['..\/input\/ieee-fraud-detection\/test_identity.csv', \n         '..\/input\/ieee-fraud-detection\/test_transaction.csv',\n         '..\/input\/ieee-fraud-detection\/train_identity.csv',\n         '..\/input\/ieee-fraud-detection\/train_transaction.csv',\n         '..\/input\/ieee-fraud-detection\/sample_submission.csv']","3c964660":"%%time\ndef load_data(file):\n    return pd.read_csv(file)\n\nwith multiprocessing.Pool() as pool:\n    test_id, test_tr, train_id, train_tr, sub = pool.map(load_data, files)","0de46f17":"train = pd.merge(train_tr, train_id, on='TransactionID', how='left')\ntest = pd.merge(test_tr, test_id, on='TransactionID', how='left')\n\ndel test_id, test_tr, train_id, train_tr\ngc.collect()","5b3569e3":"startdate = datetime.datetime.strptime('2017-11-30', '%Y-%m-%d')\ntrain['TransactionDT'] = train['TransactionDT'].apply(lambda x: (startdate + datetime.timedelta(seconds = x)))","39620335":"train = train[train['TransactionDT']>'2018-04-01']\nprint(train.shape)","65b0670c":"not_feature_cols = ['TransactionID','isFraud','TransactionDT']\nobj_cols = []\nfor c in train.columns:\n    if train[c].dtype=='object':\n        obj_cols.append(c)\ncard_cols = ['card' + str(i) for i in range(1,6)]\nid_cols = ['id_14']\nobj_cols = obj_cols + card_cols + id_cols\nprint('object columns:', len(obj_cols), ','.join(obj_cols))\n\nnum_cols = [x for x in train.columns if x not in not_feature_cols + obj_cols]\nprint('number columns:', len(num_cols), ','.join(num_cols))\n\n\n","bb4a0ff7":"\nt1 = train[num_cols]\nt1 = t1.astype('float32')\nt1.fillna(0, inplace=True)\nst = StandardScaler()\nt1 = st.fit_transform(t1)\n\nt2 = train[obj_cols]\n# t2.fillna('na', inplace=True)\nt2 = t2.astype('str')\ne1 = OneHotEncoder(handle_unknown='ignore')\ne1.fit(t2)\nt2 = e1.transform(t2)\nx = ss.hstack((t1, t2))\nprint(x.shape)\nlr = LogisticRegression()\nlr.fit(x, train['isFraud'])","558a55fa":"print(len(test))\nt1 = test[num_cols]\nt1 = t1.astype('float32')\nt1.fillna(0, inplace=True)\nt1 = st.transform(t1)\n\nt2 = test[obj_cols]\nt2 = t2.astype('str')\nt2 = e1.transform(t2)\ntest_x = ss.hstack((t1, t2))\nprint(test_x.shape)","72dff8ec":"pred = lr.predict_proba(test_x)[:, 1]\nresult = test[['TransactionID']]\nresult['isFraud'] = pred\nresult.to_csv('submission.csv', index=None)","db63dbdc":"# just for fun"}}