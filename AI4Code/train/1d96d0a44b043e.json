{"cell_type":{"e3e3a189":"code","acbaff8a":"code","466ecb86":"code","02928008":"code","a0a04129":"code","e01adba6":"code","e7750a3c":"code","85a54e4f":"code","a989ee23":"code","82d814ec":"code","b5ae6511":"code","099b3fd5":"code","27acdff7":"code","a50c00d5":"code","08ef1b69":"code","bd134332":"code","2644925b":"code","6e878ec5":"code","c4e455d3":"code","c55af601":"code","9e7d4c40":"code","a0dc984d":"code","18d78a29":"code","41644f4c":"markdown","37e12e23":"markdown","a948a82b":"markdown","e6a1359d":"markdown","b15c258d":"markdown"},"source":{"e3e3a189":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","acbaff8a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px","466ecb86":"df=pd.read_csv('..\/input\/pfizer-vaccine-tweets\/vaccination_tweets.csv')","02928008":"df.head(10)","a0a04129":"df.shape","e01adba6":"df.isna().sum()","e7750a3c":"sns.countplot(data=df,x='user_verified').set_title('Verified Users')","85a54e4f":"df['timestamp'] = df['date'].apply(lambda x : pd.to_datetime(str(x)))\ndf['Month']=df['timestamp'].dt.month\ndf['date']=df['timestamp'].dt.date","a989ee23":"sns.countplot(data=df,x='Month').set_title('No.of Tweets by Month')","82d814ec":"df.sort_values('date')\n\nplt.figure(figsize=(15,8))\nax=sns.countplot(data=df,x='date').set_title('No.of Tweets by Date')\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=60)\nax","b5ae6511":"fig = px.histogram(df, x=df['date'],title='No.of Tweets by Date')\nfig.update_traces(marker_color='green')\nfig","099b3fd5":"fig = px.histogram(df, x=df['text'].str.len(),nbins=15,title='Tweets Length')\nfig","27acdff7":"import string\nimport nltk\nimport warnings\nimport re\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)","a50c00d5":"# Removing Twitter Handles\ndef remove_pattern(input_txt, pattern):\n    r = re.findall(pattern, input_txt)\n    for i in r:\n        input_txt = re.sub(i, '', input_txt)\n        \n    return input_txt","08ef1b69":"df['text_new'] = np.vectorize(remove_pattern)(df['text'], \"@[\\w]*\")","bd134332":"# Removing Punctuations, Numbers, and Special Characters\ndf['text_new'] = df['text_new'].str.replace(\"[^a-zA-Z#]\", \" \")","2644925b":"# Removing Short Words\ndf['text_new'] = df['text_new'].apply(lambda x: ' '.join([w for w in x.split() if len(w)>3]))","6e878ec5":"df['text_new']","c4e455d3":"# Tokenization\ntokenized_tweet = df['text_new'].apply(lambda x: x.split())\ntokenized_tweet.head()","c55af601":"# Stemming\nfrom nltk.stem.porter import *\nstemmer = PorterStemmer()\n\ntokenized_tweet = tokenized_tweet.apply(lambda x: [stemmer.stem(i) for i in x]) # stemming\ntokenized_tweet.head()","9e7d4c40":"for i in range(len(tokenized_tweet)):\n    tokenized_tweet[i] = ' '.join(tokenized_tweet[i])\ndf['text_new'] = tokenized_tweet","a0dc984d":"df['text_new']","18d78a29":"all_words = ' '.join([text for text in df['text_new']])\nfrom wordcloud import WordCloud\nwordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(all_words)\n\nplt.figure(figsize=(10, 7))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis('off')\nplt.show()","41644f4c":"## Wordcloud","37e12e23":"# Basic EDA","a948a82b":"### Reference : https:\/\/www.analyticsvidhya.com\/blog\/2018\/07\/hands-on-sentiment-analysis-dataset-python\/","e6a1359d":"# Natural Language Processing","b15c258d":"**Work in Progress**"}}