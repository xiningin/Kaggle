{"cell_type":{"a7846784":"code","2c91c070":"code","89440d7a":"code","0be26c16":"code","ef18f1fc":"code","a1b998ca":"code","575ad55f":"code","1ec936fb":"code","e29a9384":"code","4ba65bfa":"code","54bb114a":"code","5ec8cc6d":"code","4d455fe5":"code","06f1e858":"markdown","f0f4a935":"markdown","1c2a0bf2":"markdown","a80f4cb8":"markdown","38485e77":"markdown","11fca6bc":"markdown","fc779e7d":"markdown","34f5fa38":"markdown","1a95d24a":"markdown","51b6b87c":"markdown","405e553c":"markdown","cc661721":"markdown","e90b565d":"markdown","52f5da41":"markdown","3a0455cc":"markdown","a1ae105b":"markdown"},"source":{"a7846784":"# # This Python 3 environment comes with many helpful analytics libraries installed\n# # It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# # For example, here's several helpful packages to load\n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# # Input data files are available in the read-only \"..\/input\/\" directory\n# # For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2c91c070":"import tensorflow as tf\nfrom keras.preprocessing.image import ImageDataGenerator","89440d7a":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\ntraining_set = train_datagen.flow_from_directory(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\",\n                                                 target_size = (64, 64),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')","0be26c16":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory(\"..\/input\/chest-xray-pneumonia\/chest_xray\/test\",\n                                            target_size = (64, 64),\n                                            batch_size = 32,\n                                            class_mode = 'binary')","ef18f1fc":"cnn = tf.keras.models.Sequential()","a1b998ca":"cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=[64, 64, 3]))","575ad55f":"cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))","1ec936fb":"cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu'))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))","e29a9384":"cnn.add(tf.keras.layers.Flatten())","4ba65bfa":"cnn.add(tf.keras.layers.Dense(units=128, activation='relu'))","54bb114a":"cnn.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","5ec8cc6d":"cnn.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","4d455fe5":"cnn.fit(x = training_set, validation_data = test_set, epochs = 25)","06f1e858":"# Importing the libraries","f0f4a935":"# Initialising the CNN","1c2a0bf2":"# Get the Test data accuracy 91% while train data set accuracy: 96%.","a80f4cb8":"# Preprocessing the Training set","38485e77":"# Part 3 - Training the CNN","11fca6bc":"# Step 5 - Output Layer","fc779e7d":"# Step 1 - Convolution","34f5fa38":"# Step 3 - Flattening","1a95d24a":"# Part 2 - Building the CNN","51b6b87c":"# Training the CNN on the Training set and evaluating it on the Test set","405e553c":"# Step 4 - Full Connection","cc661721":"# Part 1 - Data Preprocessing","e90b565d":"# Step 2 - Pooling","52f5da41":"# Preprocessing the Test set","3a0455cc":"# Compiling the CNN","a1ae105b":"# Adding a second convolutional layer"}}