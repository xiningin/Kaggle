{"cell_type":{"76b34c7f":"code","8fd1b756":"code","2c6d8ab4":"code","cdeb46cd":"code","a2357d86":"code","c7c4c769":"markdown","fb50e5b9":"markdown","d51aa152":"markdown"},"source":{"76b34c7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8fd1b756":"fpath = '\/kaggle\/input\/santa-workshop-tour-2019\/family_data.csv'\ndata = pd.read_csv(fpath)\n\nfpath = '\/kaggle\/input\/santa-workshop-tour-2019\/sample_submission.csv'\nsubmission = pd.read_csv(fpath)","2c6d8ab4":"data.n_people.sum()","cdeb46cd":"data.n_people.hist(bins=7)","a2357d86":"import numpy as np\nimport pandas as pd\n#define when to visit\nfamily_day=[] #the day to visit Satan for each family\ndays_n_ppl=pd.DataFrame({'ppl':np.zeros(100)}) #temporal df\n\n#assign each family to the day which has smallers number of people\nfor i in range (5000):\n    target_index=data.iloc[i,:].iloc[1:11]-1\n    target=days_n_ppl.iloc[target_index,:][days_n_ppl.iloc[target_index,:]==days_n_ppl.iloc[target_index,:].min()].dropna() #pickup the nth date which has minimum aggregated n_people\n    \n    #add family once the day is fixed for the family\n    days_n_ppl[days_n_ppl.index==target.index[0]]=days_n_ppl[days_n_ppl.index==target.index[0]]+data.iloc[i,11]\n    family_day.append(target.index[0]+1)\n   \nsubmission=pd.DataFrame({'family_id':np.arange(0,5000),\n                         'assigned_day':family_day})\nsubmission.assigned_day=submission.assigned_day+1\nsubmission.to_csv(f'submission.csv',index=False)","c7c4c769":"#### The only constraints we have are number of ppl in a day is >=125 AND <=300\n##### therefore, firstly lets just calculate the total sum of ppl","fb50e5b9":"##### ok, since we have 21,003 ppl against 100 days, on average one day has 210 ppl which satisfies the constraints\n##### but just in case, lets check the distribution of n_people in a family","d51aa152":"#### so it was found that number of people in a family varies from 2 to 8.\n#### This means when we add one family to a date, which only increases 8 people at most.\n#### Therefore, below would suffice the constraints\n##### 1. calculate how many ppl are in each date\n##### 2. choose the date which is the least crowded"}}