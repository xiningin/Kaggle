{"cell_type":{"40f97e82":"code","94d88017":"code","7ca8c593":"code","80849ab1":"code","2a27387c":"code","be396536":"code","2706384b":"code","3cf119ab":"code","a0902c10":"code","050f6cd0":"code","3b51d197":"code","10d2568e":"code","9c542fd1":"code","37cc7ad9":"code","dbc11ef7":"code","d2b99d57":"code","f5b5d4f8":"code","5825ab2b":"code","19c7fc80":"code","8b6f63ee":"code","ddd5378c":"code","4982d47b":"code","b33edb77":"code","68dcfe78":"code","364de1e2":"code","fe0479a9":"code","a985e29d":"code","6eb4ee67":"code","1c9e8bb5":"code","bbe54e43":"code","dae9845b":"code","4df50ca8":"code","5f809752":"code","023c3ae7":"code","10a5f076":"code","f2dac103":"code","588f926e":"code","d8dbd80e":"code","ba22d7ae":"code","f8a9efee":"code","f6827993":"code","57c27160":"code","f5c84bb9":"code","9a5d64f1":"code","fd097397":"code","05b73238":"code","1409d71d":"code","a1c5eb5b":"code","22427cf1":"code","d8e91b3c":"code","423d8272":"code","4f472abe":"code","b64d5572":"code","d69166fb":"code","1df63d5a":"markdown"},"source":{"40f97e82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","94d88017":"data = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","7ca8c593":"data.corr()","80849ab1":"data= data.drop('CustomerID',axis=1)","2a27387c":"from sklearn.preprocessing import LabelEncoder\ndata['Gender'] = LabelEncoder().fit_transform(data['Gender'])","be396536":"data.corr()","2706384b":"import matplotlib.pyplot as plt\nimport seaborn as sns","3cf119ab":"for i in data.columns:\n    \n    sns.distplot(data[i])\n    plt.show()","a0902c10":"from sklearn.preprocessing import StandardScaler\ndata.columns","050f6cd0":"for i in ['Age','Annual Income (k$)','Spending Score (1-100)']:\n    data[i] = StandardScaler().fit_transform(data[[i]])","3b51d197":"for i in enumerate(['Age','Annual Income (k$)','Spending Score (1-100)']):\n    plt.subplot(2,2,i[0]+1)\n    sns.distplot(data[i[1]])","10d2568e":"from sklearn.cluster import KMeans","9c542fd1":"data.columns","37cc7ad9":"data = data[['Annual Income (k$)','Spending Score (1-100)']]","dbc11ef7":"model = KMeans(n_clusters=3)\nmodel.fit(data)","d2b99d57":"model.inertia_,model.n_iter_","f5b5d4f8":"model.labels_","5825ab2b":"elbow = []\nfor i in range(2,10):\n    model = KMeans(n_clusters = i ,init='k-means++', n_init = 10 ,max_iter=100, \n                        tol=0.0001,  random_state= 111  , algorithm='elkan')\n    model.fit(data)\n    elbow.append(model.inertia_)","19c7fc80":"plt.plot(elbow)","8b6f63ee":"from sklearn.metrics import silhouette_score\n","ddd5378c":"sil_score =[]\nfor i in range(2,10):\n    model = KMeans(n_clusters = i ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 42  , algorithm='elkan')\n    model.fit(data)\n    score = silhouette_score(data,model.labels_)\n    sil_score.append(score)\n    ","4982d47b":"plt.plot(sil_score)","b33edb77":"model = (KMeans(n_clusters = 3 ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 42 , algorithm='elkan'))\nmodel.fit(data)\nmodel.inertia_,silhouette_score(data,model.labels_)","68dcfe78":"from sklearn.decomposition import PCA","364de1e2":"pca =PCA(n_components=2)\npcadata = pca.fit_transform(data)","fe0479a9":"model = (KMeans(n_clusters = 3 ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 42 , algorithm='elkan'))\nmodel.fit(pcadata)\nmodel.inertia_,silhouette_score(pcadata,model.labels_)","a985e29d":"from sklearn.pipeline import Pipeline","6eb4ee67":"preprocessor = Pipeline(\n    [\n        (\"scaler\", StandardScaler()),\n         (\"pca\", PCA(n_components=2, random_state=42)),\n        \n    ]\n    )","1c9e8bb5":"cluster = Pipeline(\n[\n    ('kmeans',KMeans(n_clusters = 3 ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 42 , algorithm='elkan'))\n]\n)","bbe54e43":"pipe = Pipeline([\n    ('preprocessor',preprocessor),\n    ('cluster',cluster)\n])","dae9845b":"pipe.fit(data)","4df50ca8":"label = pipe['cluster']['kmeans'].labels_\nlabel","5f809752":"silhouette_score(data,label)","023c3ae7":"data.columns\n","10a5f076":"import seaborn as sns\nimport matplotlib.pyplot as plt\nc=['red','green','blue']\nsns.scatterplot(x=data['Annual Income (k$)'],y=data['Spending Score (1-100)'],palette='Accent_r',hue = label)\n","f2dac103":"data = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","588f926e":"data['savings'] = data['Annual Income (k$)'] - data['Spending Score (1-100)']\ndata.head()","d8dbd80e":"data.corr()","ba22d7ae":"data = data.drop(['CustomerID'],axis=1)","f8a9efee":"data = data[['Annual Income (k$)','Spending Score (1-100)','savings']]","f6827993":"for i in data.columns:\n    data[i] = StandardScaler().fit_transform(data[[i]])","57c27160":"elbow=[]\nsscore = []\nfor i in range(2,11):\n    model = KMeans(n_clusters=i,init='k-means++', n_init = 10 ,max_iter=300,  random_state= 42 , algorithm='elkan')\n    model.fit(data)\n    elbow.append(model.inertia_)\n    score = silhouette_score(data,model.labels_)\n    sscore.append(score)","f5c84bb9":"plt.plot(elbow)","9a5d64f1":"plt.plot(sscore)","fd097397":"model = KMeans(n_clusters = 4)\nmodel.fit(data)\nsilhouette_score(data,model.labels_)","05b73238":"pca.fit(data)","1409d71d":"preprocessor = Pipeline(\n    [\n        (\"scaler\", StandardScaler()),\n         (\"pca\", PCA(n_components=2, random_state=42)),\n        \n    ]\n    )","a1c5eb5b":"cluster = Pipeline(\n[\n    ('kmean',KMeans(n_clusters=4,init='k-means++', n_init = 10 ,max_iter=300,  random_state= 42 , algorithm='elkan'))\n]\n)","22427cf1":"pca = Pipeline(\n[\n    ('preprocessor',preprocessor),\n    ('cluster',cluster)\n])","d8e91b3c":"pca.fit(data)","423d8272":"pcamodel = PCA(n_components=2, random_state=42)\npcadata = pcamodel.fit_transform(data)","4f472abe":"silhouette_score(pcadata,pca['cluster']['kmean'].labels_)*100","b64d5572":"data.columns\nlabel = pca['cluster']['kmean'].labels_","d69166fb":"sns.scatterplot(x = data['Annual Income (k$)'],y = data['savings'],palette='Accent_r',hue = label)","1df63d5a":"> 1. * # Elbow Method"}}