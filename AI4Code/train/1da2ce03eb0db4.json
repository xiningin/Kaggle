{"cell_type":{"f9143331":"code","848e12d0":"code","1a8a708a":"code","c83b28a3":"code","3a045d0c":"code","4f332e1c":"code","cae458c3":"code","5e801395":"code","7b6cc2ea":"code","2e1b07a0":"code","8b03f5bc":"code","5ad39680":"code","1948f6fc":"code","fe16b9ff":"code","d31d3cc9":"code","039eb500":"code","24964663":"code","8425ce96":"code","ee68bc8b":"markdown"},"source":{"f9143331":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","848e12d0":"# importing alll the necessary packages to use the various classification algorithms\nfrom sklearn.linear_model import LogisticRegression  # for Logistic Regression algorithm\nfrom sklearn.model_selection import train_test_split #to split the dataset for training and testing\nfrom sklearn.neighbors import KNeighborsClassifier  # for K nearest neighbours\nfrom sklearn import svm  #for Support Vector Machine (SVM) Algorithm\nfrom sklearn import metrics #for checking the model accuracy\nfrom sklearn.tree import DecisionTreeClassifier #for using Decision Tree Algoithm","1a8a708a":"df=pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')\ndf.head()","c83b28a3":"df.shape","3a045d0c":"df.describe()","4f332e1c":"df.sample(5)","cae458c3":"df.info()","5e801395":"# library & dataset\nimport seaborn as sns\n#df = sns.load_dataset('iris')\n \n# Make boxplot for one group only\nsns.violinplot(x=df['species'],y=df[\"petal_width\"])\n#sns.plt.show()\n","7b6cc2ea":"sns.violinplot(x=df['species'],y=df[\"petal_length\"])","2e1b07a0":"sns.violinplot(x=df['species'],y=df[\"sepal_length\"])","8b03f5bc":"sns.violinplot(x=df['species'],y=df[\"sepal_width\"])","5ad39680":"# Make default histogram of sepal length\nsns.distplot( df[\"petal_length\"],bins=10)\n#sns.plt.show()\n \n# Control the number of bins\n#sns.distplot( df[\"sepal_length\"], bins=20 )\n#sns.plt.show()\n","1948f6fc":"df","fe16b9ff":"g=sns.pairplot(df,hue=\"species\")","d31d3cc9":"X = df.drop(['species'],axis=1).values\ny = df['species'].values\nX_train,X_test,y_train,y_test = train_test_split(X,y,random_state=0)","039eb500":"knn=KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train,y_train)\ny_pred=knn.predict(X_test)\nprint(y_pred)\nknn.score(X_test,y_test)","24964663":"metrics.accuracy_score(y_test,y_pred)","8425ce96":"metrics.f1_score(y_test,y_pred,average='weighted')","ee68bc8b":"Violin plots show distribution density in a way similar to box plots but much more descriptive.The above 4 charts are used to indicate each feature for the 3 species of irises.\n\nSentosa's petal length and width are clearly distinguished from the other 2 species while it has the upper hand in sepal width overall. The other 2 species versicolor and viginica are quite similar and a bit difficult to distinguish from each other except virginica is bigger than versicolor overall in all 4 features. "}}