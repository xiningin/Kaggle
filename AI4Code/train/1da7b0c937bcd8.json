{"cell_type":{"0c94a836":"code","b7784e9c":"code","d7b46066":"code","cbcf1283":"code","683a7ce2":"code","ec256343":"code","d541672c":"code","50dd4d90":"code","ac5b93c9":"code","281150d9":"code","df6f3bed":"code","df39b595":"code","50f405c4":"code","63c2e3be":"code","3416a57f":"code","dae2e5da":"code","8ddea504":"code","38a81776":"code","eb7079ac":"code","6a846759":"code","3a7dcff5":"code","22d34ea6":"code","a596c84b":"markdown","583c2d01":"markdown","be733ad1":"markdown","095b7e79":"markdown","384e5fa4":"markdown","e9c9664e":"markdown","430e81dc":"markdown","debd04c1":"markdown","7895b0f0":"markdown","8d544627":"markdown","59035cdf":"markdown"},"source":{"0c94a836":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","b7784e9c":"from catboost import CatBoostClassifier\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import log_loss","d7b46066":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cbcf1283":"df1 = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/train.csv\")\ndf2 = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/test.csv\")\nsam = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/sample_submission.csv\")","683a7ce2":"# display(df1.info())\n# df1.describe().transpose()","ec256343":"MV = df1.isnull().sum()\nprint(f'Missing Value:\\n{MV[MV > 0]}')","d541672c":"df1['target'].value_counts(normalize=True).plot(kind='bar')\ndf1['target'].value_counts()","50dd4d90":"data1 = df1.copy()\ndic = {\"Class_1\":0, \"Class_2\":1, \"Class_3\":2, \"Class_4\":3}\ndata1['target'].replace(dic, inplace=True)","ac5b93c9":"X = data1.drop(columns = ['id','target'])\ndisplay(X)","281150d9":"y = data1.target\ndisplay(y)","df6f3bed":"train_X, val_X, train_y, val_y = train_test_split(X, y, test_size=0.20, random_state=123) ","df39b595":"data2 = df2.copy()\nXX = data2.drop(columns = ['id'])\ndisplay(XX)","50f405c4":"model1 = CatBoostClassifier(iterations=17000,\n                            learning_rate=0.01,\n                            depth=4,\n                            loss_function='MultiClass',\n                            od_wait=1000,\n                            od_type='Iter',                           \n                            min_data_in_leaf=1,\n                            max_ctr_complexity=15,\n                            task_type='GPU',\n                            devices='0:1')                            \n                            \nmodel1.fit(X, y, verbose=1000)\npred1 = model1.predict_proba(XX)\npred1 = np.clip(pred1, 0.08, 0.95)\ndisplay(pred1) ","63c2e3be":"model1.feature_importances_","3416a57f":"sub1 = sam.copy()\ndisplay(sub1, pred1, pred1.shape)","dae2e5da":"sub1['Class_1'] = pred1[:,0] \nsub1['Class_2'] = pred1[:,1] \nsub1['Class_3'] = pred1[:,2] \nsub1['Class_4'] = pred1[:,3] \ndisplay(sub1)","8ddea504":"sub1.to_csv(\"submission1.csv\",index=False)\n# Public Score: 1.08627","38a81776":"sub2 = pd.read_csv('..\/input\/lightautoml-baseline-tps-may-2021\/lightautoml_2variants_ensemble.csv')\ndisplay(sub2)","eb7079ac":"sub2.to_csv(\"submission2.csv\",index=False)\n# Public Score: 1.08593","6a846759":"def generate(main, support, coeff):\n    \n    g = main.copy()    \n    for i in main.columns[1:]:\n        \n        res = []\n        lm, Is = [], []        \n        lm = main[i].tolist()\n        ls = support[i].tolist()  \n        \n        for j in range(len(main)):\n            res.append((lm[j] * coeff) + (ls[j] * (1.- coeff)))            \n        g[i] = res\n        \n    return g","3a7dcff5":"sub = generate(sub2, sub1, 0.60)\ndisplay(sub)","22d34ea6":"sub.to_csv(\"submission.csv\",index=False)\n!ls","a596c84b":"<div class=\"alert alert-success\">  \n<\/div>","583c2d01":"<div class=\"alert alert-success\">  \n<\/div>","be733ad1":"<div class=\"alert alert-success\">  \n<\/div>","095b7e79":"## CatBoostClassifier()","384e5fa4":"## Import","e9c9664e":"<div class=\"alert alert-success\">  \n<\/div>","430e81dc":"<div>\n    <h1 align=\"center\">Tabular Playground Series - May 2021<\/h1>\n<\/div>","debd04c1":"## TabularUtilizedAutoML()\n\nThanks to: @alexryzhkov\nhttps:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-baseline-tps-may-2021","7895b0f0":"<div class=\"alert alert-success\">  \n<\/div>","8d544627":"## Data Set","59035cdf":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">If you find this work useful, please don't forget upvoting :)<\/h1>\n    \n    \n    \n    \n<\/div>"}}