{"cell_type":{"5584cba8":"code","6d59b3b0":"code","8ede3960":"code","93776db7":"code","9af99db6":"code","a7616358":"code","98db856a":"code","35ec06be":"code","75218dbb":"code","409698d4":"code","bf781c53":"code","8fc24cc2":"code","385d66c4":"code","bd456e17":"code","72de64c8":"code","e28d318e":"code","e77b634d":"code","750446b2":"code","3c22999d":"code","49b2760a":"code","70cbb0c1":"markdown","5bfab4e9":"markdown"},"source":{"5584cba8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","6d59b3b0":"tx = pd.read_csv('\/kaggle\/input\/house-prices-data\/train.csv')","8ede3960":"tx.drop(['Id','PoolQC','MiscFeature','Alley','Fence'],axis=1,inplace=True)","93776db7":"year_all = ['YearBuilt', 'YearRemodAdd','YrSold','MoSold','GarageYrBlt']\nfor i in tx:\n  if (tx[i].dtypes == object and i != 'FireplaceQu') or i in year_all:\n    tx[i] = tx[i].fillna(tx[i].mode()[0])","9af99db6":"cat_data = []\nfor i in tx:\n  if len(tx[i].unique()) <=10:\n    cat_data.append(i)","a7616358":"#BarPlot\nnr_rows = 16\nnr_cols = 3\nfig, axs = plt.subplots(nr_rows, nr_cols, figsize=(nr_cols*4,nr_rows*3), squeeze=False)\ni = 0\nfor r in range(0,nr_rows):\n    for c in range(0, nr_cols):\n      if i< len(cat_data):\n        x = tx[cat_data[i]]\n        sns.barplot(x, tx['SalePrice'], alpha=0.9,ax = axs[r][c])\n        plt.ylabel('SalePrice', fontsize=12)\n        plt.xlabel(cat_data[i], fontsize=12)\n        i+=1\nplt.tight_layout()    \nplt.show()","98db856a":"g = sns.FacetGrid(tx, col=\"SaleType\", height=4, aspect=.5)\ng.map(sns.barplot, \"SaleCondition\", \"SalePrice\")","35ec06be":"#CountPlot\nnr_rows = 16\nnr_cols = 3\nfig, axs = plt.subplots(nr_rows, nr_cols, figsize=(nr_cols*4,nr_rows*3), squeeze=False)\ni = 0\nfor r in range(0,nr_rows):\n    for c in range(0, nr_cols):\n      if i< len(cat_data):\n        x = tx[cat_data[i]]\n        sns.countplot(x, data = tx, ax = axs[r][c])\n        #plt.ylabel('SalePrice', fontsize=12)\n        plt.xlabel(cat_data[i], fontsize=12)\n        i+=1\nplt.tight_layout()    \nplt.show()","75218dbb":"#BoxPlot\nnr_rows = 16\nnr_cols = 3\nfig, axs = plt.subplots(nr_rows, nr_cols, figsize=(nr_cols*4,nr_rows*3), squeeze=False)\ni = 0\nfor r in range(0,nr_rows):\n    for c in range(0, nr_cols):\n      if i< len(cat_data):\n        sns.boxplot(x=tx[cat_data[i]], y = tx['SalePrice'], data=tx, ax = axs[r][c])\n        plt.ylabel('SalePrice', fontsize=12)\n        plt.xlabel(cat_data[i], fontsize=12)\n        i+=1\nplt.tight_layout()    \nplt.show()","409698d4":"#ScatterPlot\ng = sns.FacetGrid(tx, col=\"LotShape\", hue=\"Street\")\ng.map(sns.scatterplot, \"LotFrontage\", \"SalePrice\", alpha=.7)\ng.add_legend()\n#g.fig.subplots_adjust(wspace=.1, hspace=.1 )\n\ng = sns.FacetGrid(tx, col=\"LotShape\", hue=\"Street\" )\ng.map(sns.scatterplot, \"LotArea\", \"SalePrice\", alpha=.7  )\ng.add_legend()","bf781c53":"#DistPlot\nfor i in cat_data:\n  g = sns.FacetGrid(tx, col=i)\n  g.map(sns.distplot, \"SalePrice\")","8fc24cc2":"g = sns.FacetGrid(tx, col=\"TotRmsAbvGrd\", hue=\"KitchenAbvGr\" )\ng.map(sns.scatterplot, \"BedroomAbvGr\", \"SalePrice\", alpha=.7  )\ng.add_legend()","385d66c4":"g = sns.FacetGrid(tx, col=\"OverallQual\", height=8, aspect=.5)\ng.map(sns.barplot, \"OverallCond\", \"SalePrice\")","bd456e17":"g = sns.FacetGrid(tx, col=\"LotShape\", height=8, aspect=.5)\ng.map(sns.barplot, \"LotConfig\", \"LotArea\")","72de64c8":"g = sns.FacetGrid(tx, col=\"Condition2\", height=8, aspect=.5)\ng.map(sns.barplot, \"OverallCond\", \"SalePrice\")","e28d318e":"g = sns.FacetGrid(tx, col=\"MSZoning\", height=8, aspect=.5)\ng.map(sns.barplot, \"MSSubClass\", \"SalePrice\")","e77b634d":"int_col = tx.select_dtypes(exclude=object).columns\nfor i in int_col:\n    tx[i] = tx[i].fillna(tx[i].mean())\nlen(int_col)","750446b2":"\n#Univariate Analysis\nnr_rows = 13\nnr_cols = 3\nfig, axs = plt.subplots(nr_rows, nr_cols, figsize=(nr_cols*4,nr_rows*3), squeeze=False)\ni = 0\nfor r in range(0,nr_rows):\n    for c in range(0, nr_cols):\n      if i< len(int_col):\n        #sns.jointplot(x = np.log1p(tx[int_col[i]]), y = np.log1p(tx['SalePrice']), data = tx, kind = 'reg', ax = axs[r][c])\n        sns.scatterplot(x = np.log1p(tx[int_col[i]]), y = np.log1p(tx['SalePrice']), data = tx, ax = axs[r][c])\n        plt.ylabel('SalePrice', fontsize=12)\n        plt.xlabel(int_col[i], fontsize=12)\n        i+=1\n      else:\n        break\nplt.tight_layout()    \nplt.show()\n","3c22999d":"#BoxPlot\nnr_rows = 13\nnr_cols = 3\nfig, axs = plt.subplots(nr_rows, nr_cols, figsize=(nr_cols*4,nr_rows*3), squeeze=False)\ni = 0\nfor r in range(0,nr_rows):\n    for c in range(0, nr_cols):\n      if i< len(int_col):\n        sns.boxplot(x=tx[int_col[i]], ax = axs[r][c])\n        #plt.ylabel('SalePrice', fontsize=12)\n        plt.xlabel(int_col[i], fontsize=12)\n        i+=1\nplt.tight_layout()    \nplt.show()","49b2760a":"# Skewness & Kurtosis\n\nint_feature = np.log1p(tx.select_dtypes(exclude=object).copy())\n\nf, axes = plt.subplots(12, 3, figsize=(50, 100), sharex=True)\nc = 0\nfor i in range(10):\n  for j in range(3):\n    #sns.histplot(int_feature.iloc[:,c], kde=True, ax=axes[i,j])#skyblue\n    #sns.displot(int_feature.iloc[:,c], color=\"red\",kind = 'hist', ax=axes[i,j])#skyblue\n    sns.kdeplot(int_feature.iloc[:,c], color=\"red\", cumulative=True, bw=1.5, ax=axes[i,j])\n    #sns.displot(data=int_feature, x=int_feature.iloc[:,c], kde=True)\n    c+=1\nfor i, ax in enumerate(axes.reshape(-1)):\n    ax.text(x=0.97, y=0.97, transform=ax.transAxes, s=\"Skewness: %f\" % int_feature.iloc[:,i].skew(),\\\n        fontweight='demibold', fontsize=20, verticalalignment='top', horizontalalignment='right',\\\n        backgroundcolor='white', color='xkcd:poo brown')\n    ax.text(x=0.97, y=0.91, transform=ax.transAxes, s=\"Kurtosis: %f\" % int_feature.iloc[:,i].kurt(),\\\n        fontweight='demibold', fontsize=20, verticalalignment='top', horizontalalignment='right',\\\n        backgroundcolor='white', color='xkcd:dried blood')\nplt.tight_layout()","70cbb0c1":"<h1> Categorical Data Visualization <\/h1>","5bfab4e9":"<h1> Numerical Data Visualization<h1>"}}