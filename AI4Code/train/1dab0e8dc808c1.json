{"cell_type":{"6240fff1":"code","de46138d":"code","3486b9e4":"code","c3e7e655":"code","e4d78813":"code","990f2b33":"code","204fb561":"code","fdc563a7":"code","d5487794":"code","c95247d8":"code","603e98fb":"code","cb5f237e":"code","904ed8b3":"code","5f8335be":"code","589321e2":"code","43ade517":"code","42964ace":"code","5dbb418b":"code","8eb7c2c3":"code","249b99d2":"markdown","3b144a47":"markdown","13f738fe":"markdown","89f37e84":"markdown","04773f4f":"markdown","25cf3526":"markdown","7714ba0f":"markdown","2856fa4c":"markdown","a75ed988":"markdown","a328b6d4":"markdown","0e736774":"markdown","edb298b4":"markdown","0cc0e8d1":"markdown","a59b3476":"markdown","06081485":"markdown","b2e43f2d":"markdown"},"source":{"6240fff1":"import pandas as pd\nimport keras\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom keras.layers import Dense,Flatten\nimport pydot\nimport scikitplot as skplt","de46138d":"df=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndf.head()","3486b9e4":"X=df.iloc[:,1:]\ny=df.iloc[:,0]\nX.shape,y.shape","c3e7e655":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.1,random_state=1)","e4d78813":"X_train.shape,X_test.shape,y_train.shape,y_test.shape","990f2b33":"X_train=X_train\/255\nX_test=X_test\/255","204fb561":"model=keras.models.Sequential()","fdc563a7":"model.add(Dense(units = 128, kernel_initializer = 'he_uniform',activation='relu',input_dim = 784))","d5487794":"model.add(Dense(10,activation='softmax'))","c95247d8":"model.compile(optimizer = 'Adamax', loss = 'sparse_categorical_crossentropy', metrics = ['accuracy'])","603e98fb":"model.summary()","cb5f237e":"keras.utils.plot_model(model)","904ed8b3":"model_history=model.fit(X_train, y_train,validation_split=0.1,epochs = 25)","5f8335be":"pd.DataFrame(model_history.history).plot(figsize=(8, 5))\nplt.grid(True)\nplt.gca().set_ylim(0, 1)\nplt.show()","589321e2":"model.evaluate(X_test,y_test)","43ade517":"y_pred=np.argmax(model.predict(X_test).round(2),axis=1)","42964ace":"y_pred","5dbb418b":"skplt.metrics.plot_confusion_matrix(y_test,y_pred,figsize=(20,20))","8eb7c2c3":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","249b99d2":"# Building Neural Network","3b144a47":"# Adding First Hidden Layer","13f738fe":"# Normalizing the pixels","89f37e84":"### Reading Data","04773f4f":"# Evaluating accuracy on test set","25cf3526":"# Structure of Model","7714ba0f":"### Importing Libraries","2856fa4c":"# Making prediction from model","a75ed988":"# Fitting the model","a328b6d4":"# Loss And Accuracy Plot","0e736774":"# Adding Output Layer\nSince we have 10 class to predict, we will be using softmax as activation function for output layer.","edb298b4":"# Confusion Matrix","0cc0e8d1":"# Splitting Into Train And Test Set","a59b3476":"### Seperating Label from Data","06081485":"# Classification Report","b2e43f2d":"# Model Summary"}}