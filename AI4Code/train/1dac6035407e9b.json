{"cell_type":{"011910fd":"code","0b5b2727":"code","a1e578cd":"code","3368e968":"code","0811f721":"code","265de99c":"code","699c71c1":"code","b9b43460":"code","1b5979bc":"code","678a7000":"code","a05ed3fe":"code","7306beb9":"code","2893cf4e":"code","43295c5a":"code","a0b4ba50":"code","0a306f57":"code","87dfc7f1":"code","54436c48":"code","153626ec":"code","f6b198b6":"code","93dc53c1":"code","36b6c35d":"code","fb195506":"code","02d9880b":"code","d2bc10d4":"code","e723ff99":"code","5d43d5be":"code","d3cfae80":"code","0b5dc7b5":"code","3aa76d58":"code","44a29a4d":"code","5324d71b":"code","d2387a6d":"code","17c16f85":"code","909f2580":"code","e3848a75":"code","e5f7d703":"code","44226421":"code","374868bd":"code","9f8ca131":"code","c3f5019c":"markdown","658e95f5":"markdown","d0d3afce":"markdown","dd9eaae8":"markdown","b6459af1":"markdown","b019a448":"markdown","b4e49c68":"markdown","9d4b65f1":"markdown","a8b21405":"markdown","2d397bb6":"markdown","17855a0a":"markdown","a4c6f471":"markdown","b3f7bd0d":"markdown"},"source":{"011910fd":"## define configuration\nPATH_TRAIN = '..\/input\/tabular-playground-series-aug-2021\/train.csv'\nPATH_TEST = '..\/input\/tabular-playground-series-aug-2021\/test.csv'\n\nPATH_AUTOGLUON_SUBMISSION = 'submission_autogluon.csv'\nPATH_FLAML_SUBMISSION = 'submission_flaml.csv'\nPATH_H2OAML_SUBMISSION = 'submission_h2oaml.csv'\nPATH_LAML_SUBMISSION = 'submission_laml.csv'\nPATH_MLJAR_SUBMISSION = 'submission_mljar.csv'\nPATH_TPOT_SUBMISSION = 'submission_tpot.csv'\n\nMAX_MODEL_RUNTIME_MINS = 5\nMAX_MODEL_RUNTIME_SECS = MAX_MODEL_RUNTIME_MINS * 60","0b5b2727":"## prepare data\nimport gc\nimport os\nimport shutil\nimport datatable as dt\nfrom pathlib import Path\n\ntrain = dt.fread(PATH_TRAIN)\ntest = dt.fread(PATH_TEST)\n\ntarget = train['loss'].to_numpy().ravel()\n\ndel train[:, ['id', 'loss']]\ntest_ids = test[:, 'id']\ntest = test[:, train.names]","a1e578cd":"## install packages\n!python3 -m pip install -q \"mxnet<2.0.0\"\n!python3 -m pip install -q autogluon\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","3368e968":"## import packages\nfrom autogluon.tabular import TabularPredictor","0811f721":"## train model\ntrain['target'] = dt.Frame(target)\n\nmodel_autogluon = TabularPredictor(\n    problem_type='regression',\n    label='target'\n)\n\nmodel_autogluon.fit(train_data=train.to_pandas(), time_limit=MAX_MODEL_RUNTIME_SECS)\n\ndel train['target']","265de99c":"## check leaderboard\nmodel_autogluon.leaderboard()","699c71c1":"## generate predictions\npreds_autogluon = dt.Frame(model_autogluon.predict(test.to_pandas()))","b9b43460":"## create submission\nsubmission = dt.Frame(\n    id=test_ids,\n    loss=preds_autogluon\n)\n\nsubmission.head()","1b5979bc":"## save submission\nsubmission.to_csv(PATH_AUTOGLUON_SUBMISSION)","678a7000":"## clear memory\nshutil.rmtree('AutogluonModels')\n\ndel model_autogluon\n\ngc.collect()","a05ed3fe":"## install packages\n!python3 -m pip install -q flaml","7306beb9":"## import packages\nfrom flaml import AutoML","2893cf4e":"## train model\nmodel_flaml = AutoML()\n\nmodel_flaml.fit(X_train=train.to_pandas(), y_train=target, time_budget=MAX_MODEL_RUNTIME_SECS, task='regression', metric='mse')","43295c5a":"## generate predictions\npreds_flaml = dt.Frame(model_flaml.predict(test.to_pandas()))","a0b4ba50":"## create submission\nsubmission = dt.Frame(\n    id=test_ids,\n    loss=preds_flaml\n)\n\nsubmission.head()","0a306f57":"## save submission\nsubmission.to_csv(PATH_FLAML_SUBMISSION)","87dfc7f1":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\nos.remove('default.log')\n\ndel model_flaml\n\ngc.collect()","54436c48":"## import packages\nimport h2o\nfrom h2o.automl import H2OAutoML","153626ec":"## prepare data\nh2o.init()\n\nh2o_train = h2o.H2OFrame(train.to_pandas())\nh2o_test = h2o.H2OFrame(test.to_pandas())\n\nh2o_train['target'] = h2o.H2OFrame(target)","f6b198b6":"## train model\nfeatures = [x for x in h2o_train.columns if x not in ['id', 'target']]\n\nmodel_h2oaml = H2OAutoML(\n    max_runtime_secs=MAX_MODEL_RUNTIME_SECS,\n    stopping_metric='RMSE',\n    sort_metric='RMSE'\n)\n\nmodel_h2oaml.train(x=features, y='target', training_frame=h2o_train)","93dc53c1":"## check leaderboard\nmodel_h2oaml.leaderboard","36b6c35d":"## generate predictions\npreds_h2oaml = dt.Frame(model_h2oaml.leader.predict(h2o_test).as_data_frame().predict)","fb195506":"## create submission\nsubmission = dt.Frame(\n    id=test_ids,\n    loss=preds_h2oaml\n)\n\nsubmission.head()","02d9880b":"## save submission\nsubmission.to_csv(PATH_H2OAML_SUBMISSION)","d2bc10d4":"## clear memory\nh2o.cluster().shutdown()\n\ndel model_h2oaml\n\ngc.collect()","e723ff99":"## install packages\n!python3 -m pip install -q lightautoml","5d43d5be":"## import packages\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML\nfrom lightautoml.tasks import Task","d3cfae80":"## train model\ntrain['target'] = dt.Frame(target)\n\nmodel_laml = TabularAutoML(\n    task=Task('reg'),\n    timeout=MAX_MODEL_RUNTIME_SECS\n)\n\nmodel_laml.fit_predict(train_data=train.to_pandas(), roles={'target': 'target'})\n\ndel train['target']","0b5dc7b5":"## generate predictions\npreds_laml = model_laml.predict(test.to_pandas()).data.ravel()","3aa76d58":"## create submission\nsubmission = dt.Frame(\n    id=test_ids,\n    loss=preds_laml\n)\n\nsubmission.head()","44a29a4d":"## save submission\nsubmission.to_csv(PATH_LAML_SUBMISSION)","5324d71b":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\ndel model_laml\n\ngc.collect()","d2387a6d":"!python3 -m pip install -q mljar-supervised\n!python3 -m pip install -q -U graphviz","17c16f85":"## import packages\nfrom supervised import AutoML","909f2580":"## train model\nmodel_mljar = AutoML(\n    total_time_limit=MAX_MODEL_RUNTIME_SECS,\n    eval_metric='rmse',\n    results_path='.\/mljar'\n)\n\nmodel_mljar.fit(X=train.to_pandas(), y=target)","e3848a75":"## check leaderboard\nmodel_mljar.get_leaderboard()","e5f7d703":"## generate predictions\npreds_mljar = dt.Frame(model_mljar.predict(test.to_pandas()))","44226421":"## create submission\nsubmission = dt.Frame(\n    id=test_ids,\n    loss=preds_mljar\n)\n\nsubmission.head()","374868bd":"## save submission\nsubmission.to_csv(PATH_MLJAR_SUBMISSION)","9f8ca131":"## clear memory\nshutil.rmtree('mljar')\n\ndel model_mljar\n\ngc.collect()","c3f5019c":"## H2O AutoML\n<img src='https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/_images\/h2o-automl-logo.jpg' width='150px'>\n\n[H2O AutoML](https:\/\/www.h2o.ai\/products\/h2o-automl) is an automated machine learning library open sourced by [H2O.ai](https:\/\/h2o.ai)","658e95f5":"This is just a baseline submission over which a lot of improvement can be made. You can read more about MLJAR's workflow, settings, hyperparameters, interpretability and more here:\n\n* [Documentation of MLJAR](https:\/\/supervised.mljar.com)","d0d3afce":"## LightAutoML\n<img src='https:\/\/github.com\/sberbank-ai-lab\/LightAutoML\/blob\/master\/imgs\/LightAutoML_logo_small.png?raw=true' width='150px'>\n\n[LightAutoML](https:\/\/github.com\/sberbank-ai-lab\/LightAutoML) is a framework for automatic classification and regression model creation open sourced by [Sberbank](https:\/\/www.sberbank.com) AI Lab.","dd9eaae8":"This is just a baseline submission over which a lot of improvement can be made. You can read more about H2O AutoML's workflow, settings, hyperparameters, interpretability and more here:\n\n* [Documentation of H2O AutoML](https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/automl.html)\n* [Deep dive of H2O AutoML](https:\/\/github.com\/vopani\/fortyone#automl-series-)","b6459af1":"## FLAML\n<img src='https:\/\/github.com\/microsoft\/FLAML\/raw\/main\/docs\/images\/FLAML.png' width='150px'>\n\n[FLAML](https:\/\/microsoft.github.io\/FLAML) is a fast and light automl library open sourced by [Microsoft](https:\/\/opensource.microsoft.com)","b019a448":"This is just a baseline submission over which a lot of improvements can be made. You can read more about AutoGluon's workflow, settings, hyperparameters, optimizations and more here:\n\n* [Documentation of AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html)","b4e49c68":"**Auto**mated **M**achine **L**earning (**AutoML**) has become widely adopted for building, experimenting and productionizing various types of machine learning models across business use-cases.\n\nThere are different open source solutions available and this notebook explores a simple baseline solution for some of them on the [Kaggle TPS (August 2021) competition](https:\/\/www.kaggle.com\/c\/tabular-playground-series-aug-2021).\n\n* [AutoGluon](#AutoGluon)\n* [FLAML](#FLAML)\n* [H2O AutoML](#H2O-AutoML)\n* [LightAutoML](#LightAutoML)\n* [MLJAR](#MLJAR)","9d4b65f1":"This is just a baseline submission over which a lot of improvements can be made. You can read more about FLAML's workflow, settings, hyperparameters, optimizations and more here:\n\n* [Documentation of FLAML](https:\/\/microsoft.github.io\/FLAML)","a8b21405":"## AutoGluon\n<img src='https:\/\/user-images.githubusercontent.com\/16392542\/77208906-224aa500-6aba-11ea-96bd-e81806074030.png' width='250px'>\n\n[AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html) is an automl library open sourced by [Amazon](http:\/\/amazon.com\/aws)","2d397bb6":"This is just a baseline submission over which a lot of improvements can be made. You can read more about LightAutoML's workflow, settings, hyperparameters, optimizations and more here:\n\n* [Documentation of LightAutoML](https:\/\/lightautoml.readthedocs.io\/en\/latest\/index.html)","17855a0a":"<div align='center'>\n    <h1>AutoML Tutorial<\/h1>\n    <img src='https:\/\/github.com\/vopani\/fortyone\/blob\/main\/images\/automl_banner_530_x_455.png?raw=true'>\n<\/div>","a4c6f471":"## MLJAR\n<img src='attachment:d0486310-5fea-49fd-b080-e8959658eb99.png' width='150px'>\n\n[MLJAR](https:\/\/mljar.com) is an automated machine learning tool for tabular data","b3f7bd0d":"## Similar Tutorials\nSimilar tutorials on other Kaggle TPS competitions are published here:\n\n* [AutoML Tutorial: TPS (January 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-january-2021)\n* [AutoML Tutorial: TPS (February 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-february-2021)\n* [AutoML Tutorial: TPS (March 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-march-2021)\n* [AutoML Tutorial: TPS (April 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-april-2021)\n* [AutoML Tutorial: TPS (May 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-may-2021)\n* [AutoML Tutorial: TPS (June 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-june-2021)\n* [AutoML Tutorial: TPS (July 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-july-2021)"}}