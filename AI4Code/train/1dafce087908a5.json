{"cell_type":{"9c4fd9de":"code","0bb8e69a":"code","f58f7853":"code","9ca38ec7":"code","5cdd6584":"code","c7878ad3":"code","3afc4b7a":"code","af893c89":"code","73cc5f41":"code","21a103dd":"code","52a53b5c":"code","ca56eae8":"code","228b3e48":"code","76d76ffa":"code","e4854047":"code","7b1f5b1f":"code","0899a3b6":"code","a8f241f4":"code","e0d49421":"code","0ee2e8ab":"code","d80d220e":"code","54ca063f":"code","dba084d8":"code","065dd00b":"code","dcd0f528":"code","73193c8b":"code","58ce3a1f":"markdown","d373ce5a":"markdown","14a926bd":"markdown","49ffe1e9":"markdown","60b5780d":"markdown","a4d5474d":"markdown","ed49dade":"markdown","49b3b7ca":"markdown","8931ad5b":"markdown","b9fab30c":"markdown","5e40063f":"markdown","b42998ff":"markdown","e458b57d":"markdown","40e2a946":"markdown","eb2a18b4":"markdown"},"source":{"9c4fd9de":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0bb8e69a":"data = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndata.head(3)","f58f7853":"data.info()","9ca38ec7":"data.isnull().any()","5cdd6584":"data.describe()","c7878ad3":"data['gender'] = data['gender'].apply(lambda x : x.title())\ndata = data[data['math score'] > 0]\n\nsns.set_color_codes(\"muted\")\nsns.set_style('darkgrid')\nsns.set(font_scale = 1.25)\n\nfig, (ax1, ax2) = plt.subplots(nrows = 1, ncols = 2, figsize = (12, 6))\n\nfig.suptitle('Gender Proportion', fontsize = 20)\nsns.countplot(data['gender'], ax = ax1, palette = 'Paired')\nax2.pie(data['gender'].value_counts(), labels = ['Female', 'Male'], explode=(0.1, 0), autopct = '%1.1f%%', shadow = True, colors = ['lightblue', 'b'])\nplt.show()","3afc4b7a":"race = data['race\/ethnicity'].value_counts().to_frame('Count')\nfig, (ax1, ax2) = plt.subplots(nrows = 1, ncols = 2, figsize = (12, 6))\n\nfig.suptitle('Ethnicity Proportion', fontsize = 20)\nsns.countplot(data['race\/ethnicity'].sort_values(), ax = ax1)\nax2.pie(race['Count'], labels = race.index, autopct = '%1.1f%%', shadow = True, explode = (0.1, 0, 0, 0, 0))\nplt.show()","af893c89":"level = data['parental level of education'].value_counts().to_frame('Count')\n\nfig, ((ax1), (ax2)) = plt.subplots(nrows = 2, ncols = 1, figsize = (12, 15))\n\nfig.suptitle('Parental Level of Education Proportion', fontsize = 20)\nsns.countplot(data['parental level of education'].sort_values(), ax = ax1)\nax2.pie(level['Count'], labels = level.index, autopct = '%1.1f%%', shadow = True)\nplt.show()","73cc5f41":"lunch = data['lunch'].value_counts().to_frame('Count')\n\nsns.set_style('darkgrid')\nfig, (ax1, ax2) = plt.subplots(nrows = 1, ncols = 2, figsize = (12, 6))\n\nfig.suptitle('Lunch Proportion', fontsize = 20)\nsns.countplot(data['lunch'], ax = ax1, palette = 'hls')\nax2.pie(lunch['Count'], labels = lunch.index, explode=(0.1, 0), autopct = '%1.1f%%', shadow = True, colors = ['pink', 'lightblue'])\nplt.show()","21a103dd":"test = data['test preparation course'].value_counts().to_frame('Count')\n\nfig, (ax1, ax2) = plt.subplots(nrows = 1, ncols = 2, figsize = (12, 6))\n\nfig.suptitle('Test Preparation Course Proportion', fontsize = 20)\nsns.countplot(data['test preparation course'], ax = ax1, palette = 'magma')\nax2.pie(test['Count'], labels = test.index, explode=(0.1, 0), autopct = '%1.1f%%', shadow = True, colors = ['purple', 'b'])\nplt.show()","52a53b5c":"plt.figure(figsize = (7, 7))\nsns.heatmap(data.corr())\nplt.show()","ca56eae8":"fig, ax1 = plt.subplots(nrows = 1, ncols = 1, figsize = (12, 6))\n\nfig.suptitle('Math Test Score Distribution', fontsize = 20)\nsns.distplot(data['math score'], ax = ax1, color = 'm')\nplt.show()","228b3e48":"bins = [0, 40, 50, 60, 70, 80, 100]\nmath = pd.cut(data['math score'], bins).value_counts().to_frame('Count')\n\nplt.figure(figsize = (6, 6))\nplt.pie(math['Count'], labels = math.index, autopct = '%1.1f%%', shadow = True)\nplt.title('Math Score', fontsize = 20)\nplt.show()","76d76ffa":"plt.figure(figsize = (10, 6))\nsns.scatterplot(x = data.index, y = data['math score'])\nplt.show()","e4854047":"male_score = data[data['gender'] == 'Male']\nfemale_score = data[data['gender'] == 'Female']\n\nplt.figure(figsize = (10, 6))\nsns.distplot(male_score['math score'], color = 'r', label = 'Male')\nsns.distplot(female_score['math score'], color = 'g', label = 'Female')\nplt.legend()\nplt.show()","7b1f5b1f":"fig, ((ax1, ax2), (ax3, ax4), (ax5, ax6)) = plt.subplots(nrows = 3, ncols = 2, figsize = (12, 12))\n\naxes = [ax1, ax2, ax3, ax4, ax5, ax6]\n\neducation_levels = data['parental level of education'].unique()\n\nfor i, ax in zip(education_levels, axes):\n    \n    sns.distplot(data['math score'][data['parental level of education'] == i], label = i, ax = ax)\n    ax.legend()","0899a3b6":"plt.figure(figsize = (8, 6))\nsns.distplot(data['math score'][data['test preparation course'] == 'completed'], label = 'Completed', color = 'b')\nsns.distplot(data['math score'][data['test preparation course'] == 'none'], label = 'Not Completed', color = 'r')\nplt.legend()\nplt.show()","a8f241f4":"data['gender'] = data['gender'].replace({'Male' : 1, 'Female' : 0})\n\ndata['test preparation course'] = data['test preparation course'].replace({'completed' : 1, 'none' : 0})\n\ndata['lunch'] = data['lunch'].replace({'standard' : 1, 'free\/reduced' : 0})\n\ndata['parental level of education'] = data['parental level of education'].replace({\"bachelor's degree\" : 'bachelor degree',\n                                                                                  \"associate's degree\" : 'associate degree',\n                                                                                  \"master's degree\" : 'master degree'})","e0d49421":"edu_dummies = pd.get_dummies(data['parental level of education'])\nrace_dummies = pd.get_dummies(data['race\/ethnicity'])\n\ndata = pd.concat([data, edu_dummies, race_dummies], axis = 1)\n\ndata.drop(['race\/ethnicity', 'parental level of education', 'reading score', 'writing score'], axis = 1, inplace = True)","0ee2e8ab":"data.head()","d80d220e":"from sklearn.model_selection import train_test_split","54ca063f":"X = data.drop('math score', axis = 1)\ny = data['math score']","dba084d8":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0, test_size = 0.35)","065dd00b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\n\nfrom sklearn.metrics import mean_absolute_error","dcd0f528":"#Logistic Regression\nl_reg = LogisticRegression(C = 0.1, solver = \"liblinear\").fit(X_train, y_train)\nl_reg_pred = l_reg.predict(X_test)\n\n#Decision Tree\ntree_reg = DecisionTreeRegressor().fit(X_train, y_train)\ntree_pred = tree_reg.predict(X_test)\n\n#Random Forest\nforest_reg = RandomForestRegressor().fit(X_train, y_train)\nforest_pred = forest_reg.predict(X_test)\n\n#K-Nearest Neighbors\nneighbors = KNeighborsRegressor(n_neighbors= 15).fit(X_train, y_train)\nneighbors_pred = neighbors.predict(X_test)","73193c8b":"reg = ['Logistic Regression', 'Decision Tree Regressor', 'Random Forest Regressor', 'KNN Regressor']\npred = [l_reg_pred, tree_pred, forest_pred, neighbors_pred]\n\nfor r, p in zip(reg, pred):\n    print(r)\n    print('Mean Absolute Error:', mean_absolute_error(y_test, p))\n    print()","58ce3a1f":"+ So, clearly most of the students who had completed test prepration course scored more.\n\n# Data Preprocessing","d373ce5a":"### Race\/Ethnicity","14a926bd":"### Correlation Matrix","49ffe1e9":"### Dummy Coding Scheme","60b5780d":"# Let me know in the comment section if can add anytihng else or any better approach for Model Selection.\n\n### Upvote if you like my work\n# Thanks.....\n","a4d5474d":"+ Looks like if a student is good at reading might also be good at writing but can't say anything about maths. Here I'm only predicting maths performance.\n\n# Analysis on Target Values\n\n### Math score","ed49dade":"### Parental level of education","49b3b7ca":"### Gender","8931ad5b":"## Missing Values\/Null Values","b9fab30c":"### Lunch","5e40063f":"# Model Selection","b42998ff":"+ Almost 49% of students have maths score above 60.\n+ Let's see male and female students maths score distribution.","e458b57d":"### Test preparation course","40e2a946":"+ There are more male students than female students whose math score is greater than 65 or 70.\n+ Now, let's look how parental education level is affecting students performance in maths.","eb2a18b4":"+ Next let's see how Test Preparation Course is affecting students performance."}}