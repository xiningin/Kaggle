{"cell_type":{"65116e46":"code","dff433f5":"code","50691b00":"code","7bfc2c64":"code","7940b791":"code","855df2e2":"code","31421164":"code","20bf605c":"code","587bdcbc":"code","cfde9081":"code","5e276a40":"code","0b127c03":"code","52b6bf12":"code","cc2ea2c4":"code","24618ed6":"code","8dd4f426":"code","282bf472":"code","78c2a9c4":"code","46192193":"code","a6aa30bc":"code","7ee353cb":"code","03856bce":"code","3486820e":"code","0653b11a":"code","fc5810ff":"code","50de6e3d":"code","5ffa2949":"code","1ef30cfb":"code","c1b33b8b":"code","d5a603f0":"code","7a73f113":"code","067a63c6":"code","fac4b6c5":"code","b37b7422":"code","ff9a43a1":"code","e84dd90b":"code","6fd3d269":"code","0812680d":"code","ccbfc2d4":"code","6fcdde6b":"code","5c1fff15":"code","3890595c":"code","9368bf7c":"code","7e643a50":"code","6c814754":"code","aff53ed7":"code","5ea5cfe7":"code","3aed06fc":"code","427895f5":"code","fdb95ea5":"code","6a3effdd":"code","2eb4e654":"code","5fea002c":"code","df55ce20":"code","d7b69cf1":"code","194a6fd7":"code","f48d083e":"markdown"},"source":{"65116e46":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dff433f5":"print (\"A+B\")","50691b00":"l=[1,5,3]\nl.sort()   #sort(l)","7bfc2c64":"l","7940b791":"df=pd.read_csv('..\/input\/heights-and-weights\/data.csv')","855df2e2":"df.head()","31421164":"df['Height']","20bf605c":"df['Weight']","587bdcbc":"df.iloc[:,[0]]","cfde9081":"df.mean()","5e276a40":"df.std()","0b127c03":"df.hist()","52b6bf12":"df.plot()","cc2ea2c4":"df.plot('Height','Weight')","24618ed6":"df['Height'].plot(kind='hist')","8dd4f426":"df[(df['Height'] >= 1.55) & (df['Height'] < 1.60)]","282bf472":"from sklearn.neural_network import MLPRegressor","78c2a9c4":"X=df['Height']\nY=df['Weight']","46192193":"nreg = MLPRegressor()","a6aa30bc":"X.values","7ee353cb":"X.values.reshape(-1,1)","03856bce":"nreg.fit(X.values.reshape(-1,1),Y)","3486820e":"from sklearn.linear_model import LinearRegression","0653b11a":"linreg=LinearRegression()","fc5810ff":"linreg.fit(X.values.reshape(-1,1),Y)","50de6e3d":"Ypred = linreg.predict(X.values.reshape(-1,1))","5ffa2949":"Y-Ypred     #prediction error","1ef30cfb":"X","c1b33b8b":"import matplotlib.pyplot as plt","d5a603f0":"plt.plot(X,Y,'r')\nplt.plot(X, Ypred, 'b')\nplt.legend(['true value','predicted value'])","7a73f113":"df['New column'] = Ypred*2+1","067a63c6":"df","fac4b6c5":"Z1=np.array([1,2])","b37b7422":"Z1","ff9a43a1":"Z1[0]","e84dd90b":"Z1[1]","6fd3d269":"np.concatenate((Z1, np.array([4])), axis=0)","0812680d":"Z=np.array([[1,2],[3,4]])","ccbfc2d4":"Z","6fcdde6b":"Z2=np.array([[1],[5]])","5c1fff15":"Z2","3890595c":"Z3=np.hstack((Z,Z2))","9368bf7c":"Z3[0,1]","7e643a50":"Z3[0][1]","6c814754":"Z3[0][1]","aff53ed7":"Z3","5ea5cfe7":"Z3[(Z3 > 2).all(axis=1),(Z3 > 3).any(axis=0)]","3aed06fc":"(Z3 < 4).any(axis=1)","427895f5":"Z","fdb95ea5":"Z+np.array([[4,5],[6,7]])","6a3effdd":"Z2","2eb4e654":"np.dot(Z,Z2)","5fea002c":"Z.mean()","df55ce20":"Z","d7b69cf1":"Z[:,1].mean()","194a6fd7":"df.values","f48d083e":"Text explaining what happens"}}