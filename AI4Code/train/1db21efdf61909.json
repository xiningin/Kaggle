{"cell_type":{"17d3b570":"code","e213035f":"code","e5e2b58c":"code","01babcc4":"code","6bba07c3":"code","ef73565b":"code","9e717dff":"code","35c82c22":"code","719ed2bc":"code","3a92c474":"code","af96f8f1":"code","d6a5b3c9":"code","d59529cd":"markdown","8ca5e174":"markdown","33647f1e":"markdown","b931b29d":"markdown","4339502b":"markdown","9869c0c4":"markdown"},"source":{"17d3b570":"from sklearn.datasets import make_regression,make_classification\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression","e213035f":"X, y = make_classification(n_samples=50000,n_features=5,n_informative=3)","e5e2b58c":"X[:3]","01babcc4":"y[:3]","6bba07c3":"X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.25, random_state=42)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","ef73565b":"X_train[:5]","9e717dff":"y_train[:5]","35c82c22":"X_test[:5]","719ed2bc":"y_test[:5]","3a92c474":"# it takes a list of tuples as parameter\npipeline = Pipeline([\n    ('scaler',StandardScaler()),\n    ('clf', LogisticRegression())\n\t])\n\n# use the pipeline object as you would\n# a regular classifier\npipeline.fit(X_train,y_train)","af96f8f1":"y_preds = pipeline.predict(X_test)\ny_preds","d6a5b3c9":"accuracy_score(y_test,y_preds)","d59529cd":"# make pineline (scale & estimator)","8ca5e174":"# check score","33647f1e":"# make Data","b931b29d":"# predict Test Data","4339502b":"# split train test data","9869c0c4":"## n_sample : num of sample \n## n_feature : num of feature \n## n_informative : num of informative feature\nThe number of informative features. Each class is composed of a number of gaussian clusters each located around the vertices of a hypercube in a subspace of dimension n_informative. For each cluster, informative features are drawn independently from N(0, 1) and then randomly linearly combined within each cluster in order to add covariance. The clusters are then placed on the vertices of the hypercube."}}