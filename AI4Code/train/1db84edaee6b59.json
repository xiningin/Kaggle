{"cell_type":{"92eeaea1":"code","1b801e63":"code","50f82b52":"code","45f2c3b4":"code","47b214f0":"code","17e7d603":"code","e32949ec":"code","3026e6bb":"code","b960ea12":"code","022e499d":"code","17ccf9c8":"code","fd3dd8be":"code","cb8302d6":"code","43a2bb49":"code","4638dcbb":"code","c5960e15":"code","f710f83f":"code","5a663ab2":"code","65d8383a":"code","caea0aef":"code","f1d466f7":"code","818c24a2":"code","f29fc30a":"code","12fc299c":"code","7bfd9ffd":"code","43d30e95":"code","663e5699":"code","a99a048d":"code","a8eb097c":"code","7e33dcce":"code","d1709779":"markdown","079073f7":"markdown","497ccb97":"markdown","84004faa":"markdown","f5c54957":"markdown"},"source":{"92eeaea1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1b801e63":"df = pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.head()","50f82b52":"#delete a column\ndf = df.drop(columns=['Id'])\ndf.head()","45f2c3b4":"#display stats about data\ndf.describe()","47b214f0":"#basic info about data\ndf.info()\n","17e7d603":"#display no. of samples on each class\ndf['Species'].value_counts()","e32949ec":"#check for null values\ndf.isnull().sum()","3026e6bb":"df['SepalLengthCm'].hist()","b960ea12":"df['SepalWidthCm'].hist()","022e499d":"df['PetalLengthCm'].hist()","17ccf9c8":"\ndf['PetalWidthCm'].hist()","fd3dd8be":"#scatter plot \ncolors = ['red','orange','blue']\nspecies = ['Iris-virginica','Iris-versicolor','Iris-setosa']","cb8302d6":"for i in range(3):\n    x = df[df['Species']==species[i]]\n    plt.scatter(x['SepalLengthCm'],x['SepalWidthCm'],c=colors[i],label=species[i])\n    plt.xlabel(\"Sepal Length\")\n    plt.ylabel(\"Sepal Width\")   \n    plt.legend()","43a2bb49":"for i in range(3):\n    x = df[df['Species'] == species[i]]\n    plt.scatter(x['PetalLengthCm'], x['PetalWidthCm'], c = colors[i], label=species[i])\nplt.xlabel(\"Petal Length\")\nplt.ylabel(\"Petal Width\")\nplt.legend()","4638dcbb":"for i in range(3):\n    x = df[df['Species'] == species[i]]\n    plt.scatter(x['SepalLengthCm'], x['PetalLengthCm'], c = colors[i], label=species[i])\nplt.xlabel(\"Sepal Length\")\nplt.ylabel(\"Petal Length\")\nplt.legend()","c5960e15":"for i in range(3):\n    x = df[df['Species'] == species[i]]\n    plt.scatter(x['SepalWidthCm'], x['PetalWidthCm'], c = colors[i], label=species[i])\nplt.xlabel(\"Sepal Width\")\nplt.ylabel(\"Petal Width\")\nplt.legend()","f710f83f":"df.corr()","5a663ab2":"corr = df.corr()\nfig, ax = plt.subplots(figsize=(5,4))\nsns.heatmap(corr,annot=True,ax=ax,cmap='coolwarm')","65d8383a":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","caea0aef":"df['Species'] = le.fit_transform(df['Species'])\ndf.head()","f1d466f7":"from sklearn.model_selection import train_test_split\n#train-70, test-30\nx = df.drop(columns=['Species'])\ny = df['Species']\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.30)","818c24a2":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()","f29fc30a":"model.fit(x_train,y_train)","12fc299c":"#print metric to get performance\nprint(\"Accuracy: \",model.score(x_test,y_test)*100)","7bfd9ffd":"from sklearn.neighbors import KNeighborsClassifier\nmodel = KNeighborsClassifier()","43d30e95":"model.fit(x_train,y_train)","663e5699":"# print metric to get performance\nprint(\"Accuracy: \",model.score(x_test, y_test) * 100)","a99a048d":"#decision tree\nfrom sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()","a8eb097c":"model.fit(x_train,y_train)","7e33dcce":"# print metric to get performance\nprint(\"Accuracy: \",model.score(x_test, y_test) * 100)","d1709779":"  **Preprocessing the dataset**","079073f7":"**Label Encoder**","497ccb97":"**Corelation Matrix**","84004faa":"**Model Training**","f5c54957":"**Exploratory Data Analysis**"}}