{"cell_type":{"a879d31d":"code","55f91182":"code","b0f0267a":"code","6d127043":"code","8d0109d7":"code","22426f5b":"code","3a2347d6":"code","64052e21":"code","c57b5d58":"code","38b75c55":"code","ff47b5f9":"code","9b528555":"code","7e63d7a0":"code","33d842f2":"code","45e26f30":"code","23180679":"code","ab68285d":"code","4f2f95de":"code","900c7c8f":"code","34ab4b0c":"code","6192abf8":"code","5db30fe3":"code","0fe7c830":"code","5deb6958":"markdown","f1afa685":"markdown"},"source":{"a879d31d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55f91182":"!pip install keras-mdn-layer","b0f0267a":"train = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/train.csv\")","6d127043":"from sklearn.model_selection import train_test_split","8d0109d7":"X = train.drop(['id','target'],axis=1).values\ny = train['target'].values","22426f5b":"X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.4, random_state=42)","3a2347d6":"from tensorflow import keras\nimport mdn\n\nN_HIDDEN = 100\nN_MIXES = 5\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(N_HIDDEN, batch_input_shape=(None, 14), activation='relu'))\nmodel.add(keras.layers.Dense(N_HIDDEN, activation='relu'))\nmodel.add(mdn.MDN(1, N_MIXES))\nmodel.compile(loss=mdn.get_mixture_loss_func(1, N_MIXES), optimizer=keras.optimizers.Adam())\nmodel.summary()","64052e21":"history = model.fit(x=X_train, y=y_train,epochs=100, batch_size = 3000)","c57b5d58":"preds = model.predict(X_test)","38b75c55":"preds","ff47b5f9":"preds[:10]","9b528555":"y_samples = np.apply_along_axis(mdn.sample_from_output, 1, preds, 1, N_MIXES, temp=1.0,sigma_temp = 0.3)","7e63d7a0":"cv_preds = y_samples[:,0][:,0]","33d842f2":"pd.Series(cv_preds).hist(bins=200)","45e26f30":"from sklearn.metrics import mean_squared_error","23180679":"mean_squared_error(y_test, cv_preds, squared=False)","ab68285d":"test = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/test.csv\").drop(['id'],axis=1)","4f2f95de":"sub = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv\")","900c7c8f":"finalgroup = model.predict(test)\nfinal_samples = np.apply_along_axis(mdn.sample_from_output, 1, finalgroup, 1, N_MIXES, temp=1.0,sigma_temp=0.3)","34ab4b0c":"final_preds = final_samples[:,0][:,0]","6192abf8":"pd.Series(final_preds).hist(bins=200)","5db30fe3":"sub['target'] = final_preds\nsub","0fe7c830":"sub.to_csv(\"submission.csv\",index=False)","5deb6958":"Why doesn't this do better?\n\nMDN encourages model to predict further away from 8. However, closer to 8 is a 'safe' bet. ","f1afa685":"should I change how the sampling is done below to get better results???"}}