{"cell_type":{"0f2284b6":"code","5bc15647":"code","625f436a":"code","48d4e544":"code","d9a0b9a7":"code","39ca2d2c":"code","ecdb8c9d":"code","9283386b":"code","2158dd77":"code","3315064f":"code","f720e556":"code","c7f694b9":"code","8ddaa973":"code","826bcc96":"code","43300b4c":"code","383a24cc":"code","24de7a25":"code","626311a3":"code","4ca77f13":"code","3a7a7240":"code","fe251e78":"code","f5a604c6":"code","e2113f1a":"markdown"},"source":{"0f2284b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5bc15647":"df = pd.read_csv(\"\/kaggle\/input\/ufcdata\/data.csv\")","625f436a":"#filter the necessary columns from the main DataFrame\ndf = df[[\"R_fighter\",\"B_fighter\",\"Winner\",\"B_win_by_KO\/TKO\",'R_win_by_KO\/TKO']]","48d4e544":"#split the DataFrame into red and blue\n#filter each fighter in DataFrames by the highest occurance of 'Win by KO\/TKO'\ndf_blue = pd.DataFrame(df.groupby(['B_fighter'], sort=False)['B_win_by_KO\/TKO'].max())","d9a0b9a7":"df_red = pd.DataFrame(df.groupby(['R_fighter'], sort=False)['R_win_by_KO\/TKO'].max())","39ca2d2c":"#further cleaning up the DataFrames\ndf_blue[\"fighter\"] = df_blue.index","ecdb8c9d":"df_blue.set_index(np.arange(1774),inplace =True)","9283386b":"df_blue = df_blue[[\"fighter\",'B_win_by_KO\/TKO']]","2158dd77":"df_blue[\"KO\/TKO\"] = df_blue[\"B_win_by_KO\/TKO\"] ","3315064f":"del df_blue[\"B_win_by_KO\/TKO\"]","f720e556":"df_red[\"fighter\"] = df_red.index","c7f694b9":"df_red.set_index(np.arange(1334),inplace =True)","8ddaa973":"df_red.rename(columns={\n    'R_win_by_KO\/TKO':'KO\/TKO'\n},inplace =True)","826bcc96":"df_red = df_red[[\"fighter\",'KO\/TKO']] ","43300b4c":"#merge the two DataFrames \n#filter each fighter to the highest occurance of 'Win by KO\/TKO'\ndf_KO1 = pd.concat([df_red,df_blue])","383a24cc":"df_KO = pd.DataFrame(df_KO1.groupby(['fighter'], sort=False)['KO\/TKO'].max())","24de7a25":"df_KO[\"fighter1\"] = df_KO.index","626311a3":"df_KO.set_index(np.arange(1915),inplace = True)","4ca77f13":"df_KO.rename(columns={\n    'fighter1':'fighter'\n},inplace =True)\n","3a7a7240":"df_KO = df_KO[['fighter','KO\/TKO']]","fe251e78":"#arrange in descending order\ndf_KO = df_KO.sort_values(by = 'KO\/TKO',ascending =False)","f5a604c6":"df_KO","e2113f1a":"**Question: Person who has won more fights by KO\/TKO?**"}}