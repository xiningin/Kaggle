{"cell_type":{"e969271f":"code","daf741e9":"code","53ba3ea8":"code","e8efb2f8":"code","7ac9aa77":"code","054613d9":"code","66a8213e":"code","a83a9805":"code","ff06f52c":"code","1127ceb1":"code","269423bd":"code","afabb772":"code","37d19fbd":"code","d0cd6d53":"code","d6df08b6":"code","97d6ebfc":"code","3f8f858d":"code","1e100704":"code","9f69bdd4":"code","b1a9c7d2":"code","0ab7c6b2":"code","77c03042":"code","ef5d4e9b":"code","eb202e75":"code","8abbfe0f":"code","1091c2eb":"markdown","45ef36c6":"markdown","8754a505":"markdown","39f2f3b0":"markdown","8f3d7529":"markdown","a59b68c9":"markdown","f1da2228":"markdown","4c036ee3":"markdown","df906d42":"markdown","6637fd7c":"markdown","5c215d7f":"markdown","ca532cd4":"markdown","22e0c77f":"markdown","ddaf46cd":"markdown","09efaf11":"markdown","fffcf6e8":"markdown","e04a9d31":"markdown"},"source":{"e969271f":"import numpy as np\nimport pandas as pd\n#import matplotlib.pyplot as plt\nimport matplotlib, matplotlib.pyplot as plt\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\n#from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.feature_selection import RFECV\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\n\nfrom sklearn.metrics import confusion_matrix, classification_report, roc_auc_score\nimport xgboost as xgb","daf741e9":"bureau = pd.read_csv('..\/input\/home-credit-default-risk\/bureau.csv')","53ba3ea8":"bureau.shape","e8efb2f8":"cat_features = bureau.select_dtypes(include='object').columns.tolist()\ncat_features","7ac9aa77":"bureau_cat = bureau[cat_features] \nbureau_cat","054613d9":"onehot_encoder = OneHotEncoder(sparse=False, handle_unknown = 'ignore')\nbureau_cat_encode = pd.DataFrame(onehot_encoder.fit_transform(bureau_cat))\nbureau_cat_encode","66a8213e":"feature_encode = onehot_encoder.get_feature_names(cat_features)\nbureau_cat_encode.columns = feature_encode\nbureau_cat_encode","a83a9805":"num_features = ['SK_ID_CURR', 'DAYS_CREDIT', 'CREDIT_DAY_OVERDUE', 'DAYS_CREDIT_ENDDATE', 'CNT_CREDIT_PROLONG', 'AMT_CREDIT_SUM', 'AMT_CREDIT_SUM_OVERDUE', 'DAYS_CREDIT_UPDATE', 'DAYS_CREDIT']\nbureau_num = bureau[num_features] \nbureau_proc = pd.concat([bureau_num, bureau_cat_encode], axis=1)\nprint(bureau_proc.shape)\nprint(bureau_num.shape)\nprint(bureau_cat_encode.shape)","ff06f52c":"bureau_proc_sum = bureau_proc.groupby(['SK_ID_CURR']).sum()\nbureau_proc_mean = bureau_proc.groupby(['SK_ID_CURR']).mean()","1127ceb1":"bureau_proc_final = pd.merge(bureau_proc_sum, bureau_proc_mean, how='left', on='SK_ID_CURR')","269423bd":"bureau_proc_final.to_csv('bureau_proc_final.csv', index=True)","afabb772":"bureau_proc_final = pd.read_csv('bureau_proc_final.csv')","37d19fbd":"application_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\napplication_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')","d0cd6d53":" 'SK_ID_CURR' in application_train.columns","d6df08b6":"train_merged = pd.merge(application_train, bureau_proc_final, how='left', on='SK_ID_CURR')\ntest_merged = pd.merge(application_test, bureau_proc_final, how='left', on='SK_ID_CURR')\nprint(application_train.shape)\nprint(train_merged.shape)\nprint(application_test.shape)\nprint(test_merged.shape)","97d6ebfc":"train_merged.drop('SK_ID_CURR', axis=1, inplace=True)\ntest_merged.drop('SK_ID_CURR', axis=1, inplace=True)","3f8f858d":"num_features_1 = train_merged.select_dtypes(include='int64').columns.tolist()\nnum_features_1.remove('TARGET')","1e100704":"num_features_2 = train_merged.select_dtypes(include='float64').columns.tolist()","9f69bdd4":"cat_features = train_merged.select_dtypes(include='object').columns.tolist()","b1a9c7d2":"num_features = num_features_1 + num_features_2\nfeatures = num_features + cat_features\n\n\nnum_transformer = Pipeline(\n    steps = [\n        ('imputer', SimpleImputer(strategy='mean')),\n       # ('scaler', MinMaxScaler())  \n        ('scaler', StandardScaler())  \n    ]\n)\n\ncat_transformer = Pipeline(\n    steps = [\n        ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n        ('onehot', OneHotEncoder(handle_unknown='ignore'))\n    ]\n)\n\npreprocessor = ColumnTransformer(\n    transformers = [\n        ('num', num_transformer, num_features),\n        ('cat', cat_transformer, cat_features)\n    ]\n)","0ab7c6b2":"preprocessor.fit(train_merged[features])\nX_train = preprocessor.transform(train_merged[features])\nX_test = preprocessor.transform(test_merged[features])\n\ny_train = train_merged.TARGET.values\n\nprint('X_train shape:', X_train.shape)\nprint('y_train shape:', y_train.shape)\nprint('X_test shape: ', X_test.shape)","77c03042":"xgb_model = xgb.XGBClassifier(objective=\"binary:logistic\", random_state=42, eval_metric=\"auc\", max_depth=4,learning_rate=0.277, gamma=0.382)\nxgb_model.fit(X_train, y_train)","ef5d4e9b":"print(roc_auc_score(y_train, xgb_model.predict_proba(X_train)[:,1]))","eb202e75":"submission = pd.read_csv('..\/input\/home-credit-default-risk\/sample_submission.csv')\nsubmission['TARGET'] =xgb_model.predict_proba(X_test)[:,1]\nsubmission.head()","8abbfe0f":"submission.to_csv('my_submission.csv', index=False)","1091c2eb":"## Extract numerical and categorical features for further processing: impute, scaling, one-hot encoding","45ef36c6":"## Extract numerical features and combine into the encoded categorical data","8754a505":"# Get prediction","39f2f3b0":"## Shape","8f3d7529":"# Explore and process bureau data","a59b68c9":"## Subset categorical features from bureau data","f1da2228":"## Check if 'SK_ID_CURR' in the train data","4c036ee3":"# Process application_train\/test","df906d42":"## Merge bureau_proc_final to application data","6637fd7c":"# Home Credit Default Risk Prediction\n**Xin Zhao**\n<br>\nThis is a case study on Home Credit Default Risk Prediction using data from Home Credit Group and various machine learning algorithms. Techniques on feature selection and principal component analysis are also considered. In the end, XGBoost algorithm is selected. The prediction AUC score is 0.75. ","5c215d7f":"## Group sum and mean bureau data by loan ID","ca532cd4":"# Train XGB model","22e0c77f":"## Onehot encode the categorical features","ddaf46cd":"# Save the submission ","09efaf11":"## Drop ID columns for training","fffcf6e8":"# Calculate training accuracy","e04a9d31":"## Categorical features in bureau"}}