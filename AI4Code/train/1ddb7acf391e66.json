{"cell_type":{"e7695126":"code","8a6cb73e":"code","e9f4b9da":"code","ecd8c360":"code","6eea528f":"code","d1fe7dc8":"code","62a352e7":"code","81bc69f2":"code","fab6fe74":"code","de44e5e4":"code","46a5e115":"code","69b03478":"code","9952c8fb":"code","c5a23ed0":"code","c054bf24":"code","b8be92b1":"markdown","c30a20c0":"markdown","13215ed0":"markdown","f3159d3a":"markdown","51ef1a90":"markdown","4d16aa7f":"markdown","7781dba6":"markdown","caf5139d":"markdown","fa99cb2e":"markdown","f3181c6b":"markdown","a9623007":"markdown","d81ac2c2":"markdown"},"source":{"e7695126":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a6cb73e":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport pylab as pl\nimport numpy as np\n%matplotlib inline","e9f4b9da":"df = pd.read_csv(r\"\/kaggle\/input\/fuelconsump\/FuelConsumptionCo2.csv\")\n#  dataset\ndf.head()\n\n","ecd8c360":"#data summarization\ndf.describe()","6eea528f":"#some features to explore\ncdf = df[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB','CO2EMISSIONS']]\ncdf.head(10)","d1fe7dc8":"viz = cdf[['CYLINDERS','ENGINESIZE','CO2EMISSIONS','FUELCONSUMPTION_COMB']]\nviz.hist()\nplt.show()","62a352e7":"plt.scatter(cdf.FUELCONSUMPTION_COMB, cdf.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"FUELCONSUMPTION_COMB\")\nplt.ylabel(\"Emission\")\nplt.show()","81bc69f2":"plt.scatter(cdf.ENGINESIZE, cdf.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"Engine size\")\nplt.ylabel(\"Emission\")\nplt.show()","fab6fe74":"plt.scatter(cdf.CYLINDERS, cdf.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"Cylinders\")\nplt.ylabel(\"CO2Emission\")\nplt.show()","de44e5e4":"# Splitting the dataset into the Training set and Test set\n\nmsk = np.random.rand(len(df)) < 0.8\ntrain = cdf[msk]\ntest = cdf[~msk]","46a5e115":"plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"Engine size\")\nplt.ylabel(\"CO2Emission\")\nplt.show()","69b03478":"plt.scatter(test.ENGINESIZE, test.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"Engine size\")\nplt.ylabel(\"CO2Emission\")\nplt.show()","9952c8fb":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\ntrain_x = np.asanyarray(train[['ENGINESIZE']])\ntrain_y = np.asanyarray(train[['CO2EMISSIONS']])\nregr.fit (train_x, train_y)\n# The coefficients\nprint ('Coefficients: ', regr.coef_)\nprint ('Intercept: ',regr.intercept_)","c5a23ed0":"plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')\nplt.plot(train_x, regr.coef_[0][0]*train_x + regr.intercept_[0], '-r')\nplt.xlabel(\"Engine size\")\nplt.ylabel(\"Emission\")","c054bf24":"from sklearn.metrics import r2_score\n\ntest_x = np.asanyarray(test[['ENGINESIZE']])\ntest_y = np.asanyarray(test[['CO2EMISSIONS']])\ntest_y_ = regr.predict(test_x)\n\nprint(\"Mean absolute error: %.2f\" % np.mean(np.absolute(test_y_ - test_y)))\nprint(\"Residual sum of squares (MSE): %.2f\" % np.mean((test_y_ - test_y) ** 2))\nprint(\"R2-score: %.2f\" % r2_score(test_y_ , test_y) )","b8be92b1":"# **plot b\/w FUELCONSUMPTION_COMB and CO2Emission**","c30a20c0":"**plot b\/w  Cylinders and CO2Emission**","13215ed0":"**Evaluation**","f3159d3a":"**Reading the data**","51ef1a90":"**we can plot each of these fearues**","4d16aa7f":"# Data Exploration","7781dba6":"Creating train and test dataset","caf5139d":"Train data distribution","fa99cb2e":"**Modeling**","f3181c6b":"Importing Needed packages","a9623007":"**plot b\/w Engine size and CO2Emission**","d81ac2c2":"**Test data distribution**"}}