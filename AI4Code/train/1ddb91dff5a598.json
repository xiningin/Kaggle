{"cell_type":{"ba8a58f7":"code","0cea7799":"code","c3c40dba":"code","a82075b5":"code","4c65cf94":"code","d2502512":"code","d5c7a5e1":"code","092c5937":"code","94cd9a7f":"code","f2adce07":"code","851d4c6c":"code","a780a69a":"code","ab802178":"code","3c6f52fd":"code","c938dec1":"code","06b17af1":"code","32b6020b":"code","6558c6b1":"code","f19f410f":"code","50199521":"markdown"},"source":{"ba8a58f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nwine = pd.read_csv('\/kaggle\/input\/wine-quality-binary-classification\/wine.csv', encoding='ISO-8859-1')","0cea7799":"#importing necessary libraries\nimport numpy as np \nimport pandas as pd \nimport warnings\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.neural_network import MLPClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\n","c3c40dba":"wine.head()","a82075b5":"wine.isnull().sum()","4c65cf94":"# plt.figure(figsize=(40,25))\n# plt.subplots_adjust(left=0, bottom=0.5, right=0.9, top=0.9, wspace=0.5, hspace=0.8)\n# plt.subplot(141)\n# plt.title('Percentage of good and bad quality wine',fontsize = 20)\n# wine['quality'].value_counts().plot.pie(autopct=\"%1.1f%%\")","d2502512":"wine.drop(['quality'], axis=1, inplace=True)\n","d5c7a5e1":"wine.head()","092c5937":"X = wine.iloc[:,[8,10]]\n# X=wine","94cd9a7f":"X","f2adce07":"X = X.values","851d4c6c":"X","a780a69a":"wcss = []\nfor i in range(1, 11):\n kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n kmeans.fit(X)\n wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","ab802178":"kmeans = KMeans(n_clusters = 2, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(X)","3c6f52fd":"\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 10, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 10, c = 'blue', label = 'Cluster 2')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 50, c = 'yellow', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('pH')\nplt.ylabel('Alcohol')\nplt.legend()\nplt.show()","c938dec1":"kmeans.cluster_centers_","06b17af1":"kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(X)","32b6020b":"y_kmeans","6558c6b1":"\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 10, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 10, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 10, c = 'green', label = 'Cluster 3')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 50, c = 'yellow', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('pH')\nplt.ylabel('Alcohol')\nplt.legend()\nplt.show()","f19f410f":"kmeans.cluster_centers_","50199521":"## **Krish Sukhani**\n## **TE IT**\n## **Batch D**\n## **59**\n"}}