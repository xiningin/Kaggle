{"cell_type":{"7728a7cc":"code","3eef323d":"code","49486ccd":"code","8cbfa80c":"code","a52fcb53":"code","82755943":"code","6938ba97":"code","e1f4bd26":"code","87d9b9bc":"code","6618d684":"code","f268a566":"code","15da1420":"code","d04fa6a3":"code","cf6fc542":"code","ee9f8a14":"code","2fb265c3":"code","a88bfc54":"code","67252462":"code","230defbd":"code","3769f594":"code","8f1c3a8e":"code","cc438cc8":"code","35270886":"code","99db6878":"code","5dea9bbe":"code","7702fc0e":"code","667ec96c":"code","7ae9474e":"code","6b430e34":"code","07d11a66":"code","220458c1":"code","5bbca43b":"code","1a02289b":"code","14d79d85":"markdown","a0f9476f":"markdown","4fbb52c7":"markdown","d0377e9a":"markdown","a0b602b4":"markdown","7c61a49b":"markdown","3aed7e23":"markdown","cfe5221c":"markdown","30735c16":"markdown","c11fd2e2":"markdown","ebf4f8a1":"markdown","1237da73":"markdown","ca9dc532":"markdown","185a314d":"markdown","f2a7c19e":"markdown","cf88ffd4":"markdown","87a03cdc":"markdown","4e2e4652":"markdown"},"source":{"7728a7cc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom scipy import stats \nfrom sklearn.cluster import AgglomerativeClustering\nfrom sklearn.preprocessing import normalize\nimport scipy.cluster.hierarchy as shc\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3eef323d":"df = pd.read_csv(\"\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")\ndf.head()","49486ccd":"df.shape","8cbfa80c":"df.info()","a52fcb53":"df.columns","82755943":"df.isnull().sum()","6938ba97":"df.describe()","e1f4bd26":"plt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True,fmt=\".1f\",cmap=\"BrBG\")","87d9b9bc":"sns.boxplot(y=\"Annual Income (k$)\",data=df)\n","6618d684":"q1=df[\"Annual Income (k$)\"].quantile(0.25)\nq3=df[\"Annual Income (k$)\"].quantile(0.75)\nIQR=q3-q1\nlow_lim=q1-1.5*IQR\nupper_lim=q3+1.5*IQR\nprint(f\"Lower limit:{low_lim}\")\nprint(f\"Upper limit:{upper_lim}\")\n","f268a566":"outlier=[]\nfor x in df[\"Annual Income (k$)\"]:\n    if (x>upper_lim) or (x<low_lim):\n        outlier.append(x)\nprint(f\"The outliers in the Annual Income feature are:{outlier}\")\n    ","15da1420":"len(outlier)","d04fa6a3":"df.loc[df[\"Annual Income (k$)\"]>=137,\"Annual Income (k$)\"]=61.5","cf6fc542":"#Boxplot after the removal of outliers\nsns.boxplot(y=\"Annual Income (k$)\",data=df)","ee9f8a14":"#Checking the outlier for Spending Score\nsns.boxplot(y=\"Spending Score (1-100)\",data=df)","2fb265c3":"#Checking the outliers for Age\nsns.boxplot(y=\"Age\",data=df)","a88bfc54":"sns.scatterplot(x=\"Annual Income (k$)\",y=\"Spending Score (1-100)\",data=df)","67252462":"clus=df.iloc[:,[3,4]].values\nprint(clus[:5])","230defbd":"#wcss= within cluster sum of sqaures\n# we need to calculate the wcss beucase we need the elbow curve\n# to identify the no. of cluster requirement.\nwcss = []\nfor i in range(1,11):\n    kmeans=KMeans(n_clusters=i,init='k-means++',random_state=24)\n    kmeans.fit(clus)\n    \n    wcss.append(kmeans.inertia_)\n\nprint(wcss)","3769f594":"fig=plt.figure(figsize=(8,6))\nplt.plot(range(1,11),wcss)\nplt.title(\"Elbow Curve\")\nplt.xlabel(\"Number of Clusters\")\nplt.ylabel(\"WCSS\")\nplt.show()","8f1c3a8e":"kmeans=KMeans(n_clusters=6,init=\"k-means++\",random_state=24)\ny_kmeans=kmeans.fit_predict(clus)\nprint(y_kmeans[:5])\nprint(np.unique(y_kmeans))","cc438cc8":"cluster_centers=kmeans.cluster_centers_\ncluster_centers","35270886":"plt.figure(figsize=(10,8))\nplt.scatter(clus[y_kmeans==0,0],clus[y_kmeans==0,1],s=60,c='orange',label='Cluster1',marker=\"+\")\nplt.scatter(clus[y_kmeans==1,0],clus[y_kmeans==1,1],s=60,c='lime',label='Cluster2',marker=\"*\")\nplt.scatter(clus[y_kmeans==2,0],clus[y_kmeans==2,1],s=60,c='red',label='Cluster3',marker=\"x\")\nplt.scatter(clus[y_kmeans==3,0],clus[y_kmeans==3,1],s=60,c='blue',label='Cluster4',marker=\"_\")\nplt.scatter(clus[y_kmeans==4,0],clus[y_kmeans==4,1],s=60,c='brown',label='Cluster5',marker=\"o\")\nplt.scatter(clus[y_kmeans==5,0],clus[y_kmeans==5,1],s=60,c='yellow',label='Cluster6',marker=\"^\")\n\nplt.scatter(cluster_centers[:,0],cluster_centers[:,1],s=100,c='cyan',label='Centroids')\n\nplt.title(\"Mall Customer Segmentation\")\nplt.xlabel(\"Annual Income\")\nplt.ylabel(\"Spending Score\")\nplt.show()","99db6878":"label=kmeans.labels_\nprint(label)","5dea9bbe":"df[\"clus_km\"]=label\ndf.sample(10)","7702fc0e":"df.groupby(\"clus_km\").mean()","667ec96c":"new_input=[[20,70]]\nnew_output= kmeans.predict(new_input)\nprint(f\"New Input:{new_input},New Output:{new_output}\")","7ae9474e":"df=df.drop([\"Gender\"],axis=1)\ndata_scaled=normalize(df)\ndata_scaled=pd.DataFrame(data_scaled,columns=df.columns)\ndata_scaled.head()","6b430e34":"plt.figure(figsize=(12,8))\nplt.title(\"Dendograms\")\ndend=shc.dendrogram(shc.linkage(data_scaled,method='ward'))\nplt.axhline(y=4,color='r',linestyle='--')","07d11a66":"agg_model=AgglomerativeClustering(n_clusters=2,affinity='euclidean',linkage='ward')\ny_agg=agg_model.fit_predict(data_scaled)\nprint(y_agg)","220458c1":"plt.figure(figsize=(10,7))\nplt.scatter(data_scaled['Annual Income (k$)'],data_scaled['Spending Score (1-100)'],c=y_agg)","5bbca43b":"df=df.drop([\"CustomerID\",\"clus_km\"],axis=1)\ndf.head()","1a02289b":"new_input=[[17,54],[23,65]]\nnew_output=agg_model.fit_predict(new_input)\nprint(f\"New Input:{new_input} and New Output:{new_output}\")","14d79d85":"We have two clusters as this line cuts the dendogram at two points. Let's now apply hierarchical clustering for 2 clusters.","a0f9476f":"**KMeans Clustering**","4fbb52c7":"Removing the outlier with the median value i.e 61.5 because median are not affected by outlier so we will replace the outlier with median.\n","d0377e9a":"**Checking Outliers**","a0b602b4":"**Conclusions**","7c61a49b":"Forming the clusters on the basis of Annual Income and Spending Score Features","3aed7e23":"**Prediction the label for any random case of Annual Income and Spending Score**","cfe5221c":"**Conclusion**","30735c16":"**Visualizing the annual income vs spending score for deciding the no. of cluster**","c11fd2e2":"**Removing the outlier**","ebf4f8a1":"We can clearly visualize the two clusters here after implementing the hierarchical clustering.","1237da73":"optimum value of cluster is 6.\nwe choose the no. of cluster after which the decrease in wcss become low or almost constant.","ca9dc532":"we can clearly see the 6 cluster with distinct sepration between each datapoints.\n using this info we can run target advertisment for diffrent group with diffrent need\n to increase our sales and profit.\n we can also decide to provide coupon and we can messure the effect of coupon on sales in    diffrent groups.","185a314d":"**Prediction the label for any random case of Annual Income and Spending Score**","f2a7c19e":"first we need to decide the number of cluster so we will use elbow curve.Visualizing the elbow curve and  scatter plot we can easily decide how many cluster we accuratly need.","cf88ffd4":"**Hierarchical Clustering**","87a03cdc":"**Adding a new column depicting the label of the clusters as clus_km**","4e2e4652":"There are no outliers in Spending Score and Age Columns"}}