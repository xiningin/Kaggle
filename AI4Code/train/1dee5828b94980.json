{"cell_type":{"6a486ad2":"code","5b6f0485":"code","c70b01b8":"code","3f3a6b1f":"code","d5d30fb4":"code","005ee56a":"code","dccdeb3b":"code","5167b839":"code","3eb1f67f":"code","90ab6ad8":"code","2bc71589":"code","c46b6f28":"code","404d354a":"code","a30b2916":"code","c9dd447c":"code","0a2805ec":"code","3f0f97cb":"code","9121b4a3":"markdown","fd826524":"markdown","fa9efcaf":"markdown","ea6a0cd2":"markdown","bc46bef6":"markdown","aeca8178":"markdown","a8f9fb67":"markdown","5c337316":"markdown","47368dd0":"markdown","a89088cc":"markdown","d745eabf":"markdown","d272ede6":"markdown","527bbb65":"markdown","b3b1b3d9":"markdown"},"source":{"6a486ad2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5b6f0485":"import seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom scipy import stats\nimport numpy as np","c70b01b8":"# Read data\nbottle = pd.read_csv('..\/input\/calcofi\/bottle.csv')\ncast = pd.read_csv('..\/input\/calcofi\/cast.csv')","3f3a6b1f":"bottle.head()","d5d30fb4":"cast.head()","005ee56a":"# check data info\n\nbottle.info()","dccdeb3b":"bottle_data = bottle[['T_degC', 'Salnty']]\n\nbottle_data.columns = ['Temperature(deg)', 'Salinity']","5167b839":"bottle_data.head()","3eb1f67f":"bottle_data.isnull().sum()","90ab6ad8":"bottle_data = bottle_data.dropna(how='any', axis=0)","2bc71589":"# check the data again\n\nbottle_data.info()","c46b6f28":"# Linear Regression\n\nslope, intercept, r_value, p_value, std_err = stats.linregress(bottle_data['Temperature(deg)'], bottle_data['Salinity'])\n\nr_value_squared = r_value**2\nsns.set_theme(color_codes=True)\nax = sns.regplot(data=bottle_data, x='Temperature(deg)', y='Salinity',\n                 scatter_kws={'alpha': 0.1, 'color':'#57B956'},\n                 line_kws={'label':\"y = {sl} x + {inter} and $R^2:{rs}$\".format(sl=round(slope,2), inter=round(intercept,2), rs=round(r_value_squared,2)), 'color': '#4682b4'})\nax.legend()\nplt.gcf().set_size_inches(12, 6)\nplt.show()","404d354a":"from sklearn.metrics import r2_score\n\nax = sns.scatterplot(data=bottle_data, x='Temperature(deg)', y='Salinity', alpha=0.1, color='g')\n\nz1 = np.poly1d(np.polyfit(bottle_data['Temperature(deg)'], bottle_data['Salinity'], 1))\nz2 = np.poly1d(np.polyfit(bottle_data['Temperature(deg)'], bottle_data['Salinity'], 2))\nz3 = np.poly1d(np.polyfit(bottle_data['Temperature(deg)'], bottle_data['Salinity'], 3))\nz4 = np.poly1d(np.polyfit(bottle_data['Temperature(deg)'], bottle_data['Salinity'], 4))\nz5 = np.poly1d(np.polyfit(bottle_data['Temperature(deg)'], bottle_data['Salinity'], 5))\n\nr2_score_z1 = r2_score(bottle_data['Salinity'], z1(bottle_data['Temperature(deg)']))\nr2_score_z2 = r2_score(bottle_data['Salinity'], z2(bottle_data['Temperature(deg)']))\nr2_score_z3 = r2_score(bottle_data['Salinity'], z3(bottle_data['Temperature(deg)']))\nr2_score_z4 = r2_score(bottle_data['Salinity'], z4(bottle_data['Temperature(deg)']))\nr2_score_z5 = r2_score(bottle_data['Salinity'], z5(bottle_data['Temperature(deg)']))\n\nplt.plot(bottle_data['Temperature(deg)'], z1(bottle_data['Temperature(deg)']), 'o', label= \"Linear Regression,  $R^2:{rs}$\".format(rs=round(r2_score_z1,3)))\nplt.plot(bottle_data['Temperature(deg)'], z2(bottle_data['Temperature(deg)']), 'o', label= \"Polynomial Regression order 2,  $R^2:{rs}$\".format(rs=round(r2_score_z2,3)))\nplt.plot(bottle_data['Temperature(deg)'], z3(bottle_data['Temperature(deg)']), 'o', label= \"Polynomial Regression order 3,  $R^2:{rs}$\".format(rs=round(r2_score_z3,3)))\nplt.plot(bottle_data['Temperature(deg)'], z4(bottle_data['Temperature(deg)']), 'o', label= \"Polynomial Regression order 4,  $R^2:{rs}$\".format(rs=round(r2_score_z4,3)))\nplt.plot(bottle_data['Temperature(deg)'], z5(bottle_data['Temperature(deg)']), 'o', label= \"Polynomial Regression order 5,  $R^2:{rs}$\".format(rs=round(r2_score_z5,3)))\nplt.gcf().set_size_inches(12, 6)\nplt.legend()\nplt.show()","a30b2916":"r2_ = r2_score","c9dd447c":"from sklearn.linear_model import LinearRegression\n\nX = bottle_data['Temperature(deg)'].values.reshape(-1,1)\ny = bottle_data['Salinity']\n\nlin_regressor = LinearRegression()\nlin_regressor.fit(X, y)\nr2 = r2_score(y, lin_regressor.predict(X))\n\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.pipeline import make_pipeline\n\npolyreg2=make_pipeline(PolynomialFeatures(degree=2),LinearRegression())\npolyreg2.fit(X, y)\nr2_p2 = r2_score(y, polyreg2.predict(X))\n\npolyreg3=make_pipeline(PolynomialFeatures(degree=3),LinearRegression())\npolyreg3.fit(X, y)\nr2_p3 = r2_score(y, polyreg3.predict(X))\n\npolyreg4=make_pipeline(PolynomialFeatures(degree=4),LinearRegression())\npolyreg4.fit(X, y)\nr2_p4 = r2_score(y, polyreg4.predict(X))\n\npolyreg5=make_pipeline(PolynomialFeatures(degree=5),LinearRegression())\npolyreg5.fit(X, y)\nr2_p5 = r2_score(y, polyreg5.predict(X))","0a2805ec":"ax = sns.scatterplot(data=bottle_data, x='Temperature(deg)', y='Salinity', alpha=0.1, color='g')\nplt.plot(X, lin_regressor.predict(X), 'o', label= \"Linear Regression,  $R^2:{rs}$\".format(rs=round(r2,3)))\nplt.plot(X, polyreg2.predict(X), 'o', label= \"Polynomial Regression order 2,  $R^2:{rs}$\".format(rs=round(r2_p2,3)))\nplt.plot(X, polyreg3.predict(X), 'o', label= \"Polynomial Regression order 3,  $R^2:{rs}$\".format(rs=round(r2_p3,3)))\nplt.plot(X, polyreg4.predict(X), 'o', label= \"Polynomial Regression order 4,  $R^2:{rs}$\".format(rs=round(r2_p4,3)))\nplt.plot(X, polyreg5.predict(X), 'o', label= \"Polynomial Regression order 5,  $R^2:{rs}$\".format(rs=round(r2_p5,3)))\n\nplt.gcf().set_size_inches(12, 6)\nplt.legend()\nplt.show()","3f0f97cb":"# correlation between the two properties:\n\nfrom scipy.stats import pearsonr\n\ncorr, _ = pearsonr(bottle_data['Temperature(deg)'], bottle_data['Salinity'])\ncorr","9121b4a3":"Let's create a DataFrame with the 2 columns of interest: Temperature in degrees and Salinity.","fd826524":"**Conclusion:** The linear regression presents a low $R^2$. Also, the plot shows that the linear equation presents a poor fit to the data. So, let's try a polynomial fit.","fa9efcaf":"## 4. Polynomial Regression using machine learning","ea6a0cd2":"In this exercise it is proposed linear and polynomial regressions to the data and the correlation analysis.","bc46bef6":"**Conclusion:** there are 2 types of data: water from the bottle and water from the cast, but the one that has the temperature and salinity is the data from the bottle. So let's ignore the cast data.","aeca8178":"Check the exhisting null values and delete the rows with it.","a8f9fb67":"## 2. Perform a Linear Regression to see how the two variables relate","5c337316":"**Conclusion:** Both variables are fully correlated since the corr value is 0.5.","47368dd0":"## 1. Import Dataset and selecting the data to work with","a89088cc":"**Conclusion:** Linear Regression presents the lower  \ud835\udc452 , whereas Polynomial Regression of order 4 and 5 present the higher  \ud835\udc452 . However, all results are low fit.","d745eabf":"## 3. Perform a Linear and Polynomial Regression to see how the two variables relate","d272ede6":"**Conclusion:** Linear Regression presents the lower $R^2$, whereas Polynomial Regression of order 4 and 5 present the higher $R^2$. However, all results are low fit.","527bbb65":"# Question: How related is water salinity with temperature?","b3b1b3d9":"**Main conclusion**:\n\ni) Two analysis of linear and polinomial  regression were performed. Results are the same.\n\nii) Results showed that polynomial equations of order 4 or 5 are the ones that better fit the results. However, the fit s not high (has low $R^2$).\n\niii) Results show that the correlation between water temperature and salinity are around 0.5."}}