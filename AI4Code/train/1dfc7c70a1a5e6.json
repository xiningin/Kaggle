{"cell_type":{"b55f17cc":"code","e925f13c":"code","f5e1709c":"code","d1933d66":"code","332f0aea":"code","4c0fb921":"code","bcf59555":"code","af5874e9":"code","44fe47bf":"code","3f26f229":"code","ba2d873d":"code","b82f2ca2":"code","8b4eb7f3":"code","6a398b43":"code","d65ff5e6":"code","827aabb0":"code","7e4c5a03":"code","f06996a9":"code","4f5a5ee3":"markdown","c28a9692":"markdown","9aa4787a":"markdown","a0f403c4":"markdown"},"source":{"b55f17cc":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport skimage.transform","e925f13c":"Image_Files=[]\nsrc1='..\/input\/first-half-training\/training_half\/Training_half'\nsrc2='..\/input\/rvlcdip-iii\/training_second_half\/Training_second_half'\nsrc3='..\/input\/rvlcdip-ii\/training\/Training'","f5e1709c":"C={'letter': 0,\n   'form': 1,\n   'email': 2,\n   'handwritten': 3,\n   'advertisement': 4,\n   'scientific report': 5,\n   'scientific publication': 6,\n   'specification': 7,\n   'file folder': 8,\n   'news article': 9,\n   'budget': 10,\n   'invoice': 11,\n   'presentation': 12,\n   'questionnaire': 13,\n   'resume': 14,\n   'memo': 15}\n","d1933d66":"C={'form': 0,\n   'budget': 1,\n   'invoice': 2,\n   }\n","332f0aea":" \nfor file in sorted(os.listdir(src1)):\n     for k,v in C.items():\n        if k in file:\n            pair=dict()\n            pair[src1+'\/'+file]=v\n            Image_Files.append(pair)\n            break \n            \n","4c0fb921":"os.listdir('..\/input\/document-classification')","bcf59555":"\nfor file in os.listdir(src2):\n     for k,v in C.items():\n        if k in file:\n            pair=dict()\n            pair[src2+'\/'+file]=v\n            Image_Files.append(pair)\n            \n","af5874e9":"\nfor file in os.listdir(src3):\n    for k,v in C.items():\n        if k in file:\n            pair=dict()\n            pair[src3+'\/'+file]=v\n            Image_Files.append(pair)  ","44fe47bf":" len(Image_Files)","3f26f229":"from sklearn.utils import shuffle\nImage_Files=shuffle(Image_Files)","ba2d873d":"Image_Files","b82f2ca2":" temp_dict=Image_Files[400]\n for k,v in temp_dict.items():\n    image=plt.imread(k)\n    print(image.shape)\n    plt.imshow(image)","8b4eb7f3":"import cv2\nimage = cv2.cvtColor(image,cv2.COLOR_GRAY2RGB)\nplt.imshow(image)\n","6a398b43":"def generator(batchsize):\n    i = 0 \n    while True: \n        Xtrain = np.ndarray(shape=(batchsize,224,224,3),dtype='float32') \n        Ytrain = np.ndarray(shape=(batchsize,3),dtype='float32') \n        count = 0 \n        while count < batchsize: \n            temp_dict = Image_Files[i]\n            for k,v in temp_dict.items():\n                image = plt.imread(k)\n                label = v\n            image = cv2.cvtColor(image,cv2.COLOR_GRAY2RGB)    \n            newImage = skimage.transform.resize(image, (224, 224), mode='constant') \n            Xtrain[count] = newImage \n            new_label=np.zeros(3)\n            new_label[label]=1;\n            Ytrain[count] = new_label\n            count = count + 1 \n            i = (i+1)%len(Image_Files) \n        yield (Xtrain, Ytrain)  ","d65ff5e6":"import keras\nfrom keras import applications\nfrom keras import optimizers\nfrom keras.models import Sequential, Model \nfrom keras.layers import Dropout, Flatten, Dense, GlobalAveragePooling2D\nfrom keras import backend as k \nfrom keras.callbacks import ModelCheckpoint, LearningRateScheduler, TensorBoard, EarlyStopping\n ","827aabb0":"from keras.applications.resnet50 import ResNet50\nfrom keras.applications.vgg16 import VGG16\nfrom keras.applications.mobilenet_v2 import MobileNetV2","7e4c5a03":"from keras.models import load_model\npath='..\/input\/document-classification\/Epoch6_to_10_ResNet50.h5'\nmodel=load_model(path)   \nbatch=64\nepoch=14\nhistory = model.fit_generator( generator(batch), steps_per_epoch = (len(Image_Files)\/\/batch),initial_epoch=10, epochs = epoch, verbose = 1)","f06996a9":"\nos.system('echo saving_model')\nmodel.save('Epoch11_to_15_ResNet50.h5')\n","4f5a5ee3":"**Model Training**","c28a9692":"**Plotting some Images**","9aa4787a":"**Generator Definiton**","a0f403c4":"**Check the size of Image Files**"}}