{"cell_type":{"c0fc2156":"code","3f98d19c":"code","db6ce27d":"code","95176b31":"code","d546bef5":"code","c85f5330":"code","fde85100":"code","187ab742":"code","747d3ec0":"code","db24d70c":"code","10c5f5f2":"code","4e7232de":"code","82b94f7a":"code","66e2685b":"code","9bc37306":"code","ee59d8db":"code","dc55c4cf":"code","8f31e588":"code","86455055":"code","7464ab09":"code","17ba8675":"code","2ddd0453":"code","9ecf990b":"code","c0a38256":"code","0647efcc":"markdown","ac1b9184":"markdown","918b8e3f":"markdown","b8516a4a":"markdown","055ae20f":"markdown","2cd81589":"markdown","8a38ee49":"markdown","14143fb5":"markdown","5a4ec33f":"markdown","4e1b1b6c":"markdown","79e1fc88":"markdown","bb34f852":"markdown","bebe16af":"markdown","eb611254":"markdown","36c21252":"markdown","e85dd755":"markdown","d9242fae":"markdown","4d40485d":"markdown","aa882be9":"markdown","a49e7650":"markdown","30856085":"markdown","689fa8ed":"markdown","4fc7cc78":"markdown","7b5f6577":"markdown"},"source":{"c0fc2156":"!pip install fastai -q --upgrade","3f98d19c":"import fastai\nprint(fastai.__version__)","db6ce27d":"import numpy as np\nimport pandas as pd\nimport os\nfrom pathlib import Path\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nfrom fastai.vision.all import *\nfrom fastai.callback.all import *","95176b31":"path = Path('..\/input\/digit-recognizer\/')\nos.listdir(path)","d546bef5":"train = pd.read_csv(path \/ 'train.csv')\ntest = pd.read_csv(path \/ 'test.csv')\nsub = pd.read_csv(path \/ 'sample_submission.csv')","c85f5330":"train.head()","fde85100":"TRAIN_DIR = Path('..\/TRAIN')\nTEST_DIR = Path('..\/TEST')","187ab742":"for i in range(10):\n    try:\n        os.makedirs(TRAIN_DIR\/str(i))\n    except:\n        pass","747d3ec0":"sorted(os.listdir(TRAIN_DIR))","db24d70c":"try:\n    os.makedirs(TEST)\nexcept:\n    pass","10c5f5f2":"def array_to_img_file(img_array, filepath):\n    img_array = img_array.reshape(28,28).astype(np.uint8)\n    img = Image.fromarray(img_array)\n    img.save(filepath)","4e7232de":"for i, row in train.iterrows():\n    label, digit = row[0], row[1:]\n    folder = TRAIN_DIR \/ str(label)\n    filename = f'{i}.jpg'\n    filepath = folder\/filename\n    img_array = digit.values\n    \n    array_to_img_file(img_array, filepath)","82b94f7a":"for i, digit in test.iterrows():\n    folder = TEST_DIR\n    filename = f'{i}.jpg'\n    filepaht = folder \/ filename\n    \n    array_to_img_file(img_array, filepath)","66e2685b":"batch_tfms = [*aug_transforms()]\nitem_tfms = RandomResizedCrop(460, min_scale = 0.75, ratio = (1.,1.))\nbs = 8","9bc37306":"os.path.abspath(TRAIN_DIR)","ee59d8db":"train_path = Path('\/kaggle\/')","dc55c4cf":"dls = ImageDataLoaders.from_folder(\n    path = train_path,\n    train = 'TRAIN',\n    valid_pct = 0.1,\n    seed = 44,\n    item_tfms = item_tfms,\n    batch_tfms = [*aug_transforms()],\n    bs = bs\n)","8f31e588":"dls.show_batch()","86455055":"dls.vocab","7464ab09":"learn = cnn_learner(dls, resnet18, metrics = [accuracy])","17ba8675":"learn.lr_find()","2ddd0453":"learn.fit_one_cycle(1)","9ecf990b":"learn.unfreeze()","c0a38256":"learn.fit_one_cycle(3, lr_max = slice(1e-3, 1e-2))","0647efcc":"Similary we store all the test images in the Test folder on which we will be making our predictions.","ac1b9184":"Lets start by creating a directory for each of the 10 numbers that we will be classifying","918b8e3f":"## Installing Fastai\nLets start by installing the latest version of fastai with the following command.****","b8516a4a":"Our image data is stored as pixel values in every row of the dataframe along with the label pertaining to the image under the 'label' column. However fastai only accepts images as files for the given task. So our first task would be to convert the image pixel values from the dataframe to imagefiles and storing them in the respective folder of their label.\n","055ae20f":"Now we shall write a function that converts an individual image array into PIL image object and stores it as a .jpg file.","2cd81589":"## Importing Libraries\n\nWe will be requiring libraries for a number of tasks. We start of by importing some basic libraries inherent for various projects and additionally we import the vision library from fastai since our project is primarily a computer vision task.\n","8a38ee49":"About Freezing and Unfreezing: \n\nFreezing prevents the weights of a neural network layer from being modified during the backward pass of training. You progressively 'lock-in' the weights for each layer to reduce the amount of computation in the backward pass and decrease training time.\n\nYou can unfreeze a model if you decide you want to continue training - an example of this is transfer learning: start with a pre-trained model, unfreeze the weights, then continuing training on a different dataset. When you choose to freeze is a balance between freezing early enough to gain computational speed-up without freezing too early with weights that result in inaccurate predictions.","14143fb5":"\nWhile traditional programming practices recommend avoiding the importing the entire library, the fastai library is an exception as it is specifically designed to support this issue and will only import necessary pieces into the environment.   ","5a4ec33f":"Here we define a new path for fastai to know where our TRAIN directory and TEST directory have been stored. Next up we split our training data into a train set comprising of 90% of data and a validation set to evaluate our model performace comprising of 10% of data. We define a seed to a number which will make sure that the same permutation of data is generated and distributed each time the kernel runs. We next add the data transforms and define a batch size. To ensure the notebook does not run out of memory, a smaller batch size is advisable.","4e1b1b6c":"Fastai also provides a function to find the optimal learning rate that might yield an optimal performance for the model.","79e1fc88":"## DataLoaders","bb34f852":"Here we are able to visualize our training data.","bebe16af":"Lets check whether the latest version of fastai has been installed. At the time of writing this kernel, the latest version seems to be version 2.2.5","eb611254":"It is recommended that the root of the datafiles be saved as a *Path object*. This makes accessing the datafiles much easier.","36c21252":"## Data Augmentation","e85dd755":"Voila! We achieve great results with a few lines of code!\nIf you like this notebook please give an upvote as it would help me create more content like this.\n\nP.S - This is an incomplete notebook, complete one with interpretations and predictions will be updated soon.","d9242fae":"For natural photo images such as the ones we are using here, a standard set of augmentations that we have found work pretty well are provided with the aug_transforms function. To tell fastai we want to use these transforms on a batch, we use the batch_tfms parameter while item_tfms work on individual images.","4d40485d":"For the learning rate, You don't want to pick the point at which loss is lowest; you want to pick the point at which it is dropping fastest per step. In this case it seems to drop at around 1e-3 to 1e-2 where the loss drops the steepest and then rises.","aa882be9":"The general motto around Deep Learning models is that 'More the data, better performs the model'. But in practice, there may not always be an abundance of usable data. How can then we get more data to enhance the performance of our models? The answer is data augmentation. Data Augmentation makes minor alterations to the input dataset by transforming, flipping, rotating etc. A major advantage of augmentation is that no extra memory is utilized to store the augmented images, the model will create the augmented image, learn from them and forget about them!\n\nHere we perform some basic augmentations.","a49e7650":"## Learner and fitting the data to the model","30856085":"## Adjusting the data","689fa8ed":"DataLoaders is a class in fastai which is very essential to provide data to the model. It stores multiple dataloader objects that we pass to it, normally a train set and a validation set. It assembles our input data which is suitable to load to our model.","4fc7cc78":"Fastai provides various state of the art models to be used with for image classification. We will need to make a model to train our data on. We shall use the smaller resnet18 for this specific task as our priorities concern performance along with speed. ","7b5f6577":"## What is fastai?\nFastai is a deep learning library built on top of Pytorch which makes it super easy to incorporate state-of-the-art techniques in a wide number of tasks such as Computer Vision, Natural Language Processing, Tabular classification and regression, Segmentation and what not. One of the main highlights of fastai is the ability of newbies at Deep Learning to follow the DO-LEARN-DO method of learning i.e understanding and practising code alongside prying open the mechanisms of deep learning packed with dense mathematics. This paradigm of learning accelerates work in a given field and ensures a holistic understanding of the subject matter. \n\nI thank Jeremy Howard and Rachel Thomas for bringing fastai to us."}}