{"cell_type":{"fa47388f":"code","4130ed43":"code","4aff5413":"code","9fc143e9":"code","1a6a02bf":"code","8394c06a":"code","09981775":"code","bf6027b1":"code","c42b0e2f":"code","55eb1d7e":"code","25daf853":"code","3256be5d":"code","0da22a7c":"code","bd373545":"code","db6a9f55":"code","a7cb4059":"code","d78c33e6":"code","e04c5bbd":"code","259cfd01":"code","b353edef":"code","3eccc1d1":"markdown","d0081df9":"markdown","1daf352e":"markdown","aaa20586":"markdown","16837508":"markdown","d0129c69":"markdown","25302f29":"markdown","cc70fefb":"markdown","dc1010b1":"markdown","820321f3":"markdown","0123dcd8":"markdown","a8a139f0":"markdown","2b250260":"markdown","87821310":"markdown","46f9b9d6":"markdown","7a2938c1":"markdown","616ee69d":"markdown","cb7762a9":"markdown","31da7b53":"markdown","60a4dfc5":"markdown","c3bc24d9":"markdown"},"source":{"fa47388f":"5 + 4 * 9 % (3 + 1) \/ 6 - 1\n","4130ed43":"Number = int(input('Enter the number : '))\n\nif Number % 2 == 0:\n    print('Even')\nelse:\n    print('Odd')","4aff5413":"Number = int(input('Enter the number for the multiplication  table : '))\nfor i in range(1,11):\n    print(Number, 'X', i, '=', Number*i )","9fc143e9":"for i in range (2000,3201):\n    if i%7==0:\n        if i%5!=0:\n            print(i ,end=',')\nprint('\\b')\n        ","1a6a02bf":"import collections as c\nl = [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7]  \nc = c.Counter(type(x).__name__ for x in l)\nprint(dict(c))","8394c06a":"list1 = [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7] \nprint(list1)\n\nresult = sum(filter(lambda i: isinstance(i,int),list1))\nresult1 = result + sum(filter(lambda j: isinstance(j,float),list1))\nprint('sum of numeric datatypes from the above list', result1)","09981775":"li = [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7]\n'-'.join(filter(lambda x: type(x)==str,li))\n","bf6027b1":"# Declaring list\nlist1 = [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7]\n\ndef my_func(l):\n    dict1 = {}\n     \n    dict1['sum of all numbers (exclude bool)'] = sum([float(i) for i in l if type(i)== int or type(i)== float])\n    dict1['count of all str'] = len([str(i) for i in l if type(i)== str])\n    return dict1\n\nmy_func(list1)","c42b0e2f":"li = [5, 7, 22, 97, 54, 62, 77, 23, 73, 61]\n\n# i. Use loops to get the answer\nodd_list = []\nfor x in li:\n    if x % 2 != 0:\n        odd_list.append(x)\nprint('Using loops to get the answer :',odd_list)\n        \n# ii. Use list comprehensions\n\nodd_list = [x for x in li if x % 2 !=0]\nprint('list comprehensions :',odd_list)\n\n# iii. Use lambda function with filter\n\nodd_list = list(filter(lambda x: (x % 2 != 0), li))\nprint ('lambda function with filter :',odd_list)","55eb1d7e":"from statistics import mean\ndef my_agg(l1,agg_type):\n    agg_type = agg_type.lower()\n    l1 = [i if str(i).isnumeric() else 0 for i in l1]\n    if agg_type == 'sum':\n        result = 0\n        for i in l1:\n            result = result + i\n        return result\n        if agg_type == 'count':\n            result = len(l1)\n        return result\n    \n    \n    if agg_type == 'max':\n        result = max(l1)\n        return result\n    \n    if agg_type == 'min':\n        result = min(l1)\n        return result\n    \n    if agg_type == 'mean':\n        result = mean(l1)\n        return result\n    \n    \n    \nmy_agg([1,2,2,3,4],'mean')\n    ","25daf853":"shape_name = input('Enter the name of shape whose area you want to find : ')\n\ndef calculate_area(name):\n    name = name.lower()\n    \n    if name == 'square':\n        s = int(input(\"Enter square's side length : \"))\n\n        # calculate area of square\n        sqt_area = s * s\n        print(f'The area of square is {sqt_area}.')\n        \n    elif name == 'rectangle':\n        l = int(input(\"Enter rectangle's length : \"))\n        w = int(input(\"Enter rectangle's width : \"))\n\n        # calculate area of rectangle\n        rect_area = l * w\n        print(f'The area of rectangle is {rect_area}.') \n        \n    elif name == 'circle':\n        r = int(input(\"Enter circle's radius length: \"))\n        pi = 3.14\n\n        # calculate area of circle\n        circ_area = pi * r * r\n        print(f'The area of triangle is {circ_area}. ')\n        \n        \ncalculate_area(shape_name)","3256be5d":"l1 = ['January', 'February', 'March', 'May', 'June', 'September', 'December']\nl2 = ['January', 'February', 'April', 'June', 'October', 'December']\n\ndef my_func(l1,l2):\n    x=set(l1)\n    y=set(l2)\n    result = {}\n    result['Matched'] = list(x.intersection(y))\n    result['only in l1'] =list( x-y)\n    result['only in l2'] = list(y-x)\n    return result\nmy_func(l1,l2)","0da22a7c":"x = int(input('Enter a number : '))\ndef test_prime(n):\n    if (n==1):\n        return False\n    elif (n==2):\n        return True;\n    else:\n        for x in range(2,n):\n            if(n % x==0):\n                return False\n        return True             \nprint(test_prime(x))\n    ","bd373545":"num = int(input('Enter a number : '))\nfact = 1\nif num < 0:\n    print('factorial does not exist for negative numbers')\nelif num == 0:\n   print('The factorial of 0 is 1')\nelse:\n    for i in range(1, num + 1):\n        fact = fact * i\n    print('Factorial of',num ,'is',fact)\n    ","db6a9f55":"num = int(input('Enter a number : '))\ndict1 = {i: i * i for i in range(1, num + 1)}\ndict1 \n","a7cb4059":"numbers = input('Enter a sequence of comma-separated numbers : ' )\n\nnumbers_split = numbers.split(',')\n\nnumber_tuple = tuple(numbers_split)\n\nprint(numbers_split , end = ' ')\nprint(number_tuple)","d78c33e6":"words = input('Enter a comma separated sequence of words : ')\nwords_split = words.split(',')\nwords_split.sort()\nprint ((', ').join(words_split))","e04c5bbd":"words = input('Enter a sequence of whitespace separated words : ')\nwords1 = words.split(' ')\nwords1 = set(words1)\nsorted_words = sorted(words1)\nprint((' ').join(sorted_words))","259cfd01":"sentense = input('Enter a sentence : ')\nsentense = list(sentense)\n\nupper,lower = 0 , 0\n\nfor i in sentense:\n    if i.isupper():\n        upper = upper + 1\n        \n    if i.islower():\n        lower = lower + 1\n    else:\n        pass\n        \nprint('UPPER CASE ',upper,'LOWER CASE ',lower)","b353edef":"str1 = input('Enter a string : ')\nstr1 = str1[::-1]\nprint(str1)","3eccc1d1":"Q15. With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.\n\nSuppose the following input is supplied to the program: 8\nThen, the output should be: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}\nHints: In case of input data being supplied to the question, it should be assumed to be a console input. Consider using dict()\n\n","d0081df9":"Q6: Add all values from the list with numeric datatypes \n    [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7] ","1daf352e":"Q5: Count the elements of each datatype inside the list and display in output\n    [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7]    ","aaa20586":"Q13: write a UDF to check if a number is prime or not.","16837508":"Q10: Write a UDF to return the descriptives [sum, count, min, mean, max] for a list of n number of input \n    numbers.","d0129c69":"Q11: Write an udf to calculate the area of different shapes\n\nTake shape and dimensions as arguments to udf as follows : \n\n1. square which has side\n2. rectangle which has length and width\n3. circle which has radius\n\nThe shape should be a positional argument and it's dimensions are taken as kwargs\n\nPerform proper validation for the user inputs and then calculate area.\n\nE.g. if shape is square, ensure kwargs has \"side\" and if so, then you may return the area, else display appropriate error message like \"Please enter 'side' for a square\"","25302f29":"Q16. Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.\nSuppose the following input is supplied to the program: 34,67,55,33,12,98\n    Then, the output should be: ['34', '67', '55', '33', '12', '98'] ('34', '67', '55', '33', '12', '98')\n\nHints: In case of input data being supplied to the question, it should be assumed to be a console input. you may use tuple() method to convert list to tuple\n","cc70fefb":"Q7: Concat all str datatypes with hyphen as a delimiter\n    [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7] ","dc1010b1":"Q8: Write a UDF that takes list as input and returns sum of all numbers \n    (exclude bool) and count of all str \n    [2, 3, 'Py', '10', 1, 'SQL', 5.5, True, 3, 'John', None, 7] \n    \nHint:\n-----\ndef my_func:\n    -- your code\n        \nmy_func(l1)\n output --> {'Sum': xxx, 'Count_of_Strs': xxx}","820321f3":"Q12: Write a UDF to reconcile the values within two lists.\n    l1 = ['January', 'February', 'March', 'May', 'June', 'September', 'December']\n    l2 = ['January', 'February', 'April', 'June', 'October', 'December']\n\nHint:\n-----\ndef func(l1, l2):\n    your code here...\n    \nOutput:\n{'Matched': ['January', 'February', 'June', 'December'],\n    'Only in l1': ['March', 'May', 'September'],\n        'Only in l2': ['April', 'October']}","0123dcd8":"Q2: Write a program to check if a Number is Odd or Even. Take number as a input from user at runtime.","a8a139f0":"Q1: What is the output of following expression\n    5 + 4 * 9 % (3 + 1) \/ 6 - 1","2b250260":"Q9: Get only odd numbers from the following list and store the numbers in new list\n    li = [5, 7, 22, 97, 54, 62, 77, 23, 73, 61]\n\n    i. Use loops to get the answer\n   ii. Use list comprehensions\n  iii. Use lambda function with filter","87821310":"Q3: Write a program to display the multiplication table by taking a number as input. \n    [Hint : Use print statement inside of a loop]","46f9b9d6":"Q19. Write a program that accepts a sentence and calculate the number of upper case \n letters and lower case letters.\n#Suppose the following input is supplied to the program: Hello world!\n#Then, the output should be: UPPER CASE 1 LOWER CASE 9\n\n#Hints: In case of input data being supplied to the question, it should be assumed to be a console input.\n","7a2938c1":"Q17. Write a program that accepts a comma separated sequence of words as input and \n prints the words in a comma-separated sequence after sorting them alphabetically.\n\n Suppose the following input is supplied to the program: without,hello,bag,world\n Then, the output should be: bag,hello,without,world\n\nHints: In case of input data being supplied to the question, it should be assumed to be a console input.\n","616ee69d":"Q18. Write a program that accepts a sequence of whitespace separated words \n as input and prints the words after removing all duplicate words and sorting them alphanumerically.\n Suppose the following input is supplied to the program: hello world and practice makes perfect and hello world again\n Then, the output should be: again and hello makes perfect practice world\n\n#Hints: In case of input data being supplied to the question, it should be assumed to be a console input.\n#We use set container to remove duplicated data automatically and then use sorted() to sort the data.\n","cb7762a9":"Q14. Write a program which can compute the factorial of a given numbers. \n   The results should be printed in a comma-separated sequence on a single line. \n input() function can be used for getting user(console) input\n\n\nSuppose the input is supplied to the program:  8  \nThen, the output should be:  40320 \nHints: In case of input data being supplied to the question, it should be assumed to be a console input. \n","31da7b53":"## Python Basic Programming Exercises","60a4dfc5":"Q4: Write a program which will find all numbers between 2000 and 3200 which are divisible by 7 \n    but are not a multiple of 5.\n \nNote: The numbers obtained should be printed in a comma-separated sequence on a single line.","c3bc24d9":"Q20. Write a program that takes a string and returns reversed string. i.e. if input is \"abcd123\" output should be \"321dcba\""}}