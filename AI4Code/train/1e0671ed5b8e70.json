{"cell_type":{"fc02ad3d":"code","273e62ee":"code","e527c99f":"code","2a3f37a5":"code","bcf5b819":"code","736f8064":"code","f35f27e7":"code","10643348":"code","9dd6fec2":"code","a75c7767":"code","3791446b":"code","47d04e2e":"code","21138913":"code","c6626dd6":"code","fc8292d4":"code","08ca17e0":"code","512e6df4":"code","946c4cf5":"code","8b81d010":"code","42ed7400":"code","3a1a259f":"code","fbcb677d":"code","aee3981d":"code","e3973019":"code","bad9ec9e":"code","4f4d93c8":"code","ac7675c5":"code","d624dda9":"code","6d643ccd":"code","ed560c4e":"code","82e3099d":"code","91bdf58e":"code","95027049":"markdown","1abd0b85":"markdown","eb19fb3e":"markdown","74c725e7":"markdown","cd8e02a1":"markdown","3cc783c5":"markdown","91d88118":"markdown","e729eb81":"markdown","ea75a9aa":"markdown","2228b14b":"markdown","22a8e9c7":"markdown","2b11e21f":"markdown","44acbca1":"markdown","6959aa5c":"markdown","69e2ab63":"markdown","ed863d2f":"markdown","e8cb9c1a":"markdown","b1af5606":"markdown","477125ed":"markdown","16cce471":"markdown","1a7dbca1":"markdown","d2b5a360":"markdown","13a69707":"markdown","5040e664":"markdown","2f1318c9":"markdown"},"source":{"fc02ad3d":"import numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('white')\nsns.set_context('notebook')\n\nimport plotly.io as pio\nimport plotly.express as px\n\npio.templates.default = \"plotly_white\"\n\npd.set_option('display.max_columns', None)","273e62ee":"df=pd.read_csv('..\/input\/football-events\/events.csv')\nginf=pd.read_csv('..\/input\/football-events\/ginf.csv')\n","e527c99f":"definitions = open(\"..\/input\/football-events\/dictionary.txt\", \"r\").readlines()","2a3f37a5":"ginf['goal_differential_home-away']=ginf['fthg']-ginf['ftag']\n\nhome_perf=ginf.groupby('ht')['goal_differential_home-away'].mean().sort_values()\naway_perf=(-1*ginf.groupby('at')['goal_differential_home-away'].mean()).sort_values()","bcf5b819":"fig, ax=plt.subplots(nrows=2,figsize=(12,12))\n\nax[0].set_title('Home team goal difference')\npd.concat([home_perf.iloc[:10],home_perf.iloc[-10:]]).plot(kind='barh',ax=ax[0])\n\nax[0].spines[\"right\"].set_visible(False)\nax[0].spines[\"top\"].set_visible(False)\nax[0].spines[\"bottom\"].set_visible(False)\nax[0].spines[\"left\"].set_visible(False)\n\n\nax[1].set_title('Away team goal difference')\npd.concat([away_perf.iloc[:10],away_perf.iloc[-10:]]).plot(kind='barh',ax=ax[1],color='green')\n\nax[1].spines[\"right\"].set_visible(False)\nax[1].spines[\"top\"].set_visible(False)\nax[1].spines[\"bottom\"].set_visible(False)\nax[1].spines[\"left\"].set_visible(False)\n\nax[0].set_xticks([])\nax[1].set_xticks([])\n\nplt.tight_layout()","736f8064":"ginf['odd_diff_home-away']=ginf['odd_h']-ginf['odd_a']\n\nginf['beating_odds']=ginf['odd_diff_home-away']*np.sign(ginf['goal_differential_home-away'])","f35f27e7":"medians=ginf[ginf['beating_odds']>0].groupby(['at'])['beating_odds'].median().sort_values() #takes care of outliers but count is important too\ncounts=ginf[ginf['beating_odds']>0].groupby(['at'])['beating_odds'].count().sort_values(ascending=False)","10643348":"fig,ax=plt.subplots()\nmedians.iloc[-10:].plot(kind='barh',ax=ax,color='red')\nax.set_title('Best teams at beating the odds',fontsize=15)\nax.spines[\"right\"].set_visible(False)\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\n\nplt.xticks([])\nplt.show()","9dd6fec2":"pd.DataFrame(counts).transpose()","a75c7767":"easy=-1*ginf[ginf['beating_odds']<0].groupby(['ht'])['beating_odds'].median().sort_values() #takes care of outliers bad count is important too","3791446b":"import plotly.graph_objects as go\n\nfig = go.Figure(data=[go.Scatter(\n    x=easy.iloc[:10].index, y=[50 for i in range(1,11)],\n    mode='markers',\n    marker_size=np.power(easy.iloc[:10].values,1.2))\n])\n\nfig.update_yaxes(visible=False, showticklabels=False)\nfig.show()","47d04e2e":"goals=df[df['shot_outcome']==1]\ngoals=goals[goals['text'].apply(lambda x:'Goal' in x)]\n\ngoals.shape","21138913":"ginf['fthg'].sum()+ginf['ftag'].sum()","c6626dd6":"#selecting last minute goals\nlate=goals[goals['time']>85]\n\n#merging with ginf to select the matches that include last minute goals\nlate=late[['id_odsp','event_team']].merge(ginf[['id_odsp','ht','at','goal_differential_home-away']],on='id_odsp')\nlate['event_team_is_ht']=late['event_team']==late['ht']\n\n#selecting draws and 1-goal margin wins (inclusing last minute wins and last minute honour goals). \nlate=late[late['goal_differential_home-away'].isin([-1,0,1])]","fc8292d4":"#Selecting last minute wins\nlast_min_win=late[(late['goal_differential_home-away']*late['event_team_is_ht'].apply(lambda x: 1 if x==True else -1))==1] \n\n#Selecting ties\nlast_min_tie=late[late['goal_differential_home-away']==0]\n\nlast_min=pd.concat([last_min_win,last_min_tie]).drop_duplicates(subset='id_odsp')","08ca17e0":"fig,ax=plt.subplots()\npd.DataFrame(last_min.groupby('event_team')['goal_differential_home-away'].count().sort_values()).iloc[-10:].plot(kind='barh',ax=ax,color='red')\n\nax.set_title('Last-minute teams',fontsize=15)\nax.spines[\"right\"].set_visible(False)\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\n\nplt.xticks([])\nax.get_legend().remove()\nplt.show()","512e6df4":"# last_min[last_min['event_team']=='Valencia'].head()\n# #To Check\n# df[df['id_odsp']=='YeAJV0sf\/'].iloc[-15:]\n# ginf[ginf['id_odsp']=='jRPmWlS6\/']","946c4cf5":"teams=df[['id_odsp','event_team','event_type','location','assist_method','situation']]","8b81d010":"team_names=teams['event_team'].unique()","42ed7400":"yellow=(teams.groupby('event_team')['event_type'].apply(lambda x: (x==4).sum())+teams.groupby('event_team')['event_type'].apply(lambda x: (x==5).sum())) #yellow_cards\nred=teams.groupby('event_team')['event_type'].apply(lambda x: (x==6).sum()) #red_cards\nfoul=teams.groupby('event_team')['event_type'].apply(lambda x: (x==3).sum()) #fouls\n","3a1a259f":"situation=teams.dropna().groupby('event_team')['situation'].value_counts()\nlocation=teams.dropna().groupby('event_team')['location'].value_counts()\nassist_method=teams.dropna().groupby('event_team')['assist_method'].value_counts()","fbcb677d":"#The ugliest piece of code I've ever written\nd=dict()\nfor var in ['situation','location','assist_method']:\n    un=teams[var].unique().tolist()\n    l=[]\n    for i in un:\n        sample=teams[teams[var]==i]\n        l.append(sample.dropna().groupby('event_team')[var].count())\n    d[var]=l","aee3981d":"nb_goals=goals.groupby('event_team')['event_team'].count()","e3973019":"data=pd.concat([yellow,red,foul],axis=1)\ndata.columns=['yellow','red','foul']\ndata['team']=data.index\ndata['goals']=nb_goals\ndata.drop(['foul','red','yellow'],axis=1,inplace=True)","bad9ec9e":"for var in ['situation','location','assist_method']:\n    un=teams[var].unique().tolist()\n    l=[]\n    for i in range(len(un)):\n        data[var+'_'+str(un[i])]=data['team'].map(d[var][i].to_dict())","4f4d93c8":"data.dropna(axis=1, how='all', inplace=True)\ndata.fillna(0, inplace=True)","ac7675c5":"data.head()","d624dda9":"from sklearn.cluster import KMeans","6d643ccd":"kmeans = KMeans(n_clusters=5, random_state=0)\nkmeans.fit(data.drop(['team'],axis=1))\ndata['labels']=kmeans.labels_","ed560c4e":"from sklearn.decomposition import PCA\npca = PCA(2)\n \n#Transform the data\ndata2 = pca.fit_transform(data.drop('team',axis=1))","82e3099d":"data['var_1']=data2[:,0]\ndata['var_2']=data2[:,1]","91bdf58e":"col=['orange','blue','green','red','yellow']\n\n\nfig, ax = plt.subplots(figsize=(25,12))\n\nfig.suptitle('Team Similarity',fontsize=30)\nfor i in range (5):\n    filt=data[data['labels']==i]\n    t=filt['team'].tolist()\n    ax.scatter(filt['var_1'],filt['var_2'],color=col[i],s=40)\n    \n    if 'Real Madrid' in t or 'Arsenal' in t:\n        for j, txt in enumerate(t):\n            ax.annotate(txt, (filt['var_1'].iloc[j], filt['var_2'].iloc[j]),fontsize=15)\n    else:\n        for j, txt in enumerate(t):\n            if j%4==0:\n                ax.annotate(txt, (filt['var_1'].iloc[j], filt['var_2'].iloc[j]),fontsize=15)\n\nplt.axis('off')\nplt.show()","95027049":"Features are:\n* On-pitch violence (yellow cards, red cards, fouls)\n* Goalscoring circumstances (play situation, play location, assist method)\n* Goal count.\n\nTo learn more about the features' definitions, check the file 'dictionary.txt'","1abd0b85":"# Best teams at beating the odds? And which teams can disappoint at home?\n\nThese are teams that had the odds stacked against them (betting odds) and won an away game. \nBy consequence, this includes teams that lose relatively easy home games.","eb19fb3e":"We can see that Liverpool and Lyon seem to be the teams that beat their odds consistently. This may seem like a feat, but it's maybe due to the fact that they are already good (but not so good) teams (this was between 2011 and 2017, pre Klopp). Therefore their odds are not as small as one thinks. If we want to look at miracle teams, we use the previous metric which is the median). If we want to look for one-time wonders we can use the higher percentiles.","74c725e7":"# Last minute savers","cd8e02a1":"### KMeans","3cc783c5":"Last minute savers are goals scored after the 85th minute and caused their team to salvage a draw or win.\nHere, we look for teams that score the most last minute savers.","91d88118":"#### Violence","e729eb81":"Well, we aren't losing much","ea75a9aa":"#### Goalscoring circumstances","2228b14b":"Let's look at teams that have missed easy games at home.","22a8e9c7":"Let's check goal count in ginf","2b11e21f":"In this notebook, we will analyse football events from 2011 to 2017 to come up with a few insights regarding football teams in Europe's top 5 leagues. Finally, we will visualize team similarity using Kmeans clustering.","44acbca1":"Unsurprisingly, the magic trio (Real Madrid, Barca, Bayern) headline when it comes to both home and away performance. Barcelona is the strongest at home and Bayern is the scariest team away.","6959aa5c":"The KMeans clustering split the data into 5 clusters. The right-side cluster contains the most popular teams in Europe. It doesn't include Premier League clubs since at the time they weren't as strong as other clubs. They are included in the 2nd cluster to the right. Going to the left the teams become weaker.","69e2ab63":"Barcelona, how surprising!! XD","ed863d2f":"### Feature Engineering (play situation count, goal situations, assist methods, fouls)","e8cb9c1a":"# Team similarity (KMeans)","b1af5606":"By best\/worst, we're talking in terms of average goal difference (home goals-away goals). This metric captures both the inclination to win and the scoring performance.","477125ed":"In this section, we prepare a dataset for team performance and apply KMeans clustering.","16cce471":"#### Concatenating data","1a7dbca1":"#### Goals","d2b5a360":"# Which teams are the best\/worst in their home\/away games?","13a69707":"# Football Team Analysis and Team Similarity","5040e664":"Other than the median, we can look at the count as well to look for teams that consistently beat odds. This seems like a good metric however it can be a bit misleading. Let's look at the cell output below","2f1318c9":"To double check the validity of my approach, I took a look at a few matches and verified the last minute saver using the code below."}}