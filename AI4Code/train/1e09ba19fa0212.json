{"cell_type":{"6832c532":"code","20119502":"code","f7f32bf7":"code","ef1db40d":"code","c5c1da6e":"code","6769c344":"code","f9813ab4":"code","fff3c9bd":"code","f01984c8":"markdown","97151b81":"markdown","1165c9c4":"markdown","147697ee":"markdown"},"source":{"6832c532":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","20119502":"import time","f7f32bf7":"x = np.random.rand(1000000)\ny = np.random.rand(1000000)\n\nt_start = time.time()\nresult = np.dot(x,y)\nt_end = time.time()\n\nprint(result)\nprint(\"Vectorized version time-take:\" + str(1000*(t_end - t_start)) + \" ms\")\n\nfor_result = 0\nt_start = time.time()\nfor i in range(1000000):\n    for_result += x[i]*y[i]\nt_end = time.time()\n\nprint(for_result)\nprint(\"For loop version time-take:\" + str(1000*(t_end - t_start)) + \" ms\")","ef1db40d":"A = np.array([[56.0, 0.0, 4.4, 68.0],\n            [1.2, 104.0, 52.0, 8.0],\n            [1.8, 135.0, 99.0, 0.9]])\nprint(A)","c5c1da6e":"summation = A.sum(axis = 0)  # axis = 0 means vertically.\nsummation","6769c344":"summation.reshape(1,4)","f9813ab4":"percentage = 100*A\/(summation.reshape(1,4))  # We have a 3*4 matrix and we divide it 1*4 matrix.\nprint(percentage)","fff3c9bd":"a = np.random.randn(12288, 150)\na.shape = (12288, 150)\nb = np.random.randn(150, 45)\nb.shape = (150, 45)\nc = np.dot(a,b) \nc.shape","f01984c8":"Results are same but doing same prosedure with for loop takes a lot of time.","97151b81":"**Extra:**","1165c9c4":"## Vectorization","147697ee":"## Broadcasting"}}