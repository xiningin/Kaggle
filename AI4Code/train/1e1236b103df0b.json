{"cell_type":{"89d4722e":"code","188584e3":"code","67a1f345":"code","60652184":"code","4f4addc6":"code","69cd2ff9":"code","54ff733f":"code","47b6a45d":"code","ee11fa05":"code","6ec17b92":"code","60f7487b":"code","a296316c":"code","8193862b":"code","9fd45c36":"code","4c78b81d":"code","d8a2a06e":"code","3653b8eb":"code","5b92fb1c":"code","dd682686":"code","9acb447a":"code","a036cb90":"code","6c45d16f":"code","0e30da3b":"code","6dffa177":"code","801889bd":"code","7010d7cc":"code","4d2ef242":"code","e30e11c3":"code","492b9eb8":"code","2c50b78b":"code","22999c4c":"code","494b1c38":"code","2a04e8fb":"code","662be22b":"code","b43475f6":"code","1914c1c2":"code","e51dc86a":"code","34f3ba5f":"code","28a6869a":"code","d7c3d2d8":"code","9c78301e":"code","7dedbe93":"code","26673ddc":"code","b511cbc0":"code","466e8a30":"code","f2c9e860":"code","39ce6ac1":"code","da9604c8":"code","636749e5":"code","c08de0c7":"code","580e8264":"code","11b151d7":"code","8221c586":"code","4d950a9c":"code","11773d95":"code","355b709b":"code","67d12dbe":"code","d9b777c8":"code","83df952f":"code","deec05ac":"code","3911645b":"code","0865d91c":"code","4ec36bed":"code","e0b4a9a9":"code","c0d0d7fa":"code","474df64c":"code","880d929f":"code","234c6996":"code","820dfe74":"code","055f04d1":"code","0b3f7098":"code","81ddb0c3":"code","c3bdc0e8":"code","ef9b15fa":"code","1505ae27":"code","9138d5a3":"code","21c76866":"code","f5c9cc75":"code","7593cbeb":"code","ee17c8fe":"code","eef8497f":"code","b685e185":"code","726b2f36":"code","f392fe19":"code","e52b7b91":"code","3c48e1f6":"code","e6877f45":"code","5503248f":"code","bb30eca1":"code","0f380dc3":"code","5e490771":"code","cc2582b2":"code","e08b90a8":"code","2ab70276":"markdown","4a40c675":"markdown","507b7fa0":"markdown","8b162225":"markdown","96beb556":"markdown","ca47fa5d":"markdown","58c5fcab":"markdown"},"source":{"89d4722e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","188584e3":"Survey=pd.read_csv(\"..\/input\/SurveySchema.csv\")\nSurvey.head()","67a1f345":"FreeResponses=pd.read_csv('..\/input\/freeFormResponses.csv')\nFreeResponses.head()","60652184":"MultipleResponses=pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\")\nMultipleResponses.head()","4f4addc6":"India=MultipleResponses.loc[MultipleResponses['Q3'] == 'India']","69cd2ff9":"India.head()","54ff733f":"TotalIndia=len(India)\nTotalIndia","47b6a45d":"MaleIndia=len(India[India['Q1']=='Male'])\nMaleIndia","ee11fa05":"FemaleIndia=len(India[India['Q1']=='Female'])\nFemaleIndia","6ec17b92":"India.Q1.unique()","60f7487b":"Prefersay=len(India[India['Q1']=='Prefer not to say'])\nPrefersay","a296316c":"Preferself=len(India[India['Q1']=='Prefer to self-describe'])\nPreferself","8193862b":"import matplotlib.pyplot as plt ","9fd45c36":"names = ['Male', 'Female','Not to Say','self-describe']\nvalues = [MaleIndia,FemaleIndia,Prefersay,Preferself]\nplt.figure(1, figsize=(19, 7))\nplt.subplot(131)\nplt.bar(names, values)\nplt.xlabel('Category') \n# naming the y axis \nplt.ylabel('Number of people') \n  \n# giving a title to my graph \nplt.title('Distribution of Male and Female') \nplt.show()","4c78b81d":"India.Q4.unique()","d8a2a06e":"Bachelor=India.loc[India['Q4'] == 'Bachelor\u2019s degree']\nLBach=len(Bachelor)\nLBach","3653b8eb":"Masters=India.loc[India['Q4'] == 'Master\u2019s degree']\nLMast=len(Masters)\nLMast","5b92fb1c":"OnlyStudy=India.loc[India['Q4'] == 'Some college\/university study without earning a bachelor\u2019s degree']\nLOn=len(OnlyStudy)\nLOn","dd682686":"Proffesional=India.loc[India['Q4'] == 'Professional degree']\nLProff=len(Proffesional)\nLProff","9acb447a":"Doctoral=India.loc[India['Q4'] == 'Doctoral degree']\nLDoct=len(Doctoral)\nLDoct","a036cb90":"PreferNot=India.loc[India['Q4'] == 'I prefer not to answer']\nLPre=len(PreferNot)\nLPre","6c45d16f":"NA=India.Q4.isna().sum()\nNA","0e30da3b":"# x-coordinates of left sides of bars  \nleft = [1, 2, 3, 4, 5,6,7] \n  \n# heights of bars \nheight =[LBach, LMast,LOn,LProff,LDoct,LPre,NA]\n  \n# labels for bars \ntick_label =['Bachelor','Masters','OnlyStudy','Proffesional','Doctoral','PreferNot','NotAvailable']\n  \n# plotting a bar chart \nplt.bar(left, height, tick_label = tick_label, \n        width = 0.8, color = ['red', 'green','orange','yellow','blue','black','pink']) \n  \n# naming the x-axis \nplt.xlabel('No. of people') \n# naming the y-axis \nplt.ylabel('Degree') \n# plot title \nplt.title('Distribution of degree') \n# function to show the plot \nplt.show() ","6dffa177":"labels = 'Bachelor','Masters','OnlyStudy','Proffesional','Doctoral','PreferNot','NotAvailable'\nsizes =  [LBach, LMast,LOn,LProff,LDoct,LPre,NA]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue','blue','orange','red']\nexplode = (0, 0, 0, 0,0,0,0)  \n \n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=30)\n\nplt.axis('equal')\nplt.show()\n\n","801889bd":"India.Q12_MULTIPLE_CHOICE.unique()","7010d7cc":"Advance=India.loc[India['Q12_MULTIPLE_CHOICE'] == 'Advanced statistical software (SPSS, SAS, etc.)']\nLAdvance=len(Advance)\nLAdvance","4d2ef242":"Local=India.loc[India['Q12_MULTIPLE_CHOICE'] == 'Local or hosted development environments (RStudio, JupyterLab, etc.)']\nLLocal=len(Local)\nLLocal","e30e11c3":"Basic=India.loc[India['Q12_MULTIPLE_CHOICE'] == 'Basic statistical software (Microsoft Excel, Google Sheets, etc.)']\nLBasic=len(Basic)\nLBasic","492b9eb8":"Bussiness=India.loc[India['Q12_MULTIPLE_CHOICE'] == 'Business intelligence software (Salesforce, Tableau, Spotfire, etc.)']\nLBussiness=len(Bussiness)\nLBussiness","2c50b78b":"Cloud=India.loc[India['Q12_MULTIPLE_CHOICE'] == 'Cloud-based data software & APIs (AWS, GCP, Azure, etc.)']\nLCloud=len(Cloud)\nLCloud","22999c4c":"Other=India.loc[India['Q12_MULTIPLE_CHOICE'] == 'Other']\nLOther=len(Other)\nLOther","494b1c38":"NAA=India.Q12_MULTIPLE_CHOICE.isna().sum()\nNAA","2a04e8fb":"label = 'Advance','Local','Basic','Bussiness','Cloud','Other','NotAvailable'\ns =  [LAdvance, LLocal,LBasic,LBussiness,LCloud,LOther,NAA]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue','blue','orange','red']\nexplode = (0, 0, 0, 0,0,0,0)  \n \n# Plot\nplt.pie(s, explode=explode, labels=label, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=30)\n\nplt.axis('equal')\nplt.show()","662be22b":"India.Q9.unique()","b43475f6":"First=India.loc[India['Q9'] == '0-10,000']\nLFirst=len(First)\nLFirst","1914c1c2":"Second=India.loc[India['Q9'] == '30-40,000']\nLSecond=len(Second)\nLSecond","e51dc86a":"Third=India.loc[India['Q9'] == '20-30,000']\nLThird=len(Third)\nLThird","34f3ba5f":"Fourth=India.loc[India['Q9']=='10-20,000']\nLFourth=len(Fourth)\nLFourth","28a6869a":"Fifth=India.loc[India['Q9']=='50-60,000']\nLFifth=len(Fifth)\nLFifth","d7c3d2d8":"Sixth=India.loc[India['Q9']=='70-80,000']\nLSixth=len(Sixth)\nLSixth","9c78301e":"Seventh=India.loc[India['Q9']=='40-50,000']\nLSeventh=len(Seventh)\nLSeventh","7dedbe93":"Eighth=India.loc[India['Q9']=='150-200,000']\nLEighth=len(Eighth)\nLEighth\n","26673ddc":"Ninth=India.loc[India['Q9']=='60-70,000']\nLNinth=len(Ninth)\nLNinth","b511cbc0":"Tenth=India.loc[India['Q9']=='80-90,000']\nLTenth=len(Tenth)\nLTenth","466e8a30":"Eleventh=India.loc[India['Q9']=='100-125,000']\nLEleventh=len(Eleventh)\nLEleventh","f2c9e860":"Twelve=India.loc[India['Q9']=='90-100,000']\nLTwelve=len(Twelve)\nLTwelve","39ce6ac1":"Thirteen=India.loc[India['Q9']=='125-150,000']\nLThirteen=len(Thirteen)\nLThirteen","da9604c8":"Fourteen=India.loc[India['Q9']=='300-400,000']\nLFourteen=len(Fourteen)\nLFourteen","636749e5":"Fifteen=India.loc[India['Q9']=='200-250,000']\nLFifteen=len(Fifteen)\nLFifteen","c08de0c7":"Sixteen=India.loc[India['Q9']=='500,000+']\nLSixteen=len(Sixteen)\nLSixteen","580e8264":"Seventeen=India.loc[India['Q9']=='250-300,000']\nLSeventeen=len(Seventeen)\nLSeventeen","11b151d7":"Eighteen=India.loc[India['Q9']=='400-500,000']\nLEighteen=len(Eighteen)\nLEighteen","8221c586":"names = ['0-10,000','30-40,000', '20-30,000', '10-20,000', '50-60,000', '70-80,000',\n       '40-50,000', '150-200,000', '60-70,000', '80-90,000',\n       '100-125,000', '90-100,000', '125-150,000', '300-400,000',\n       '200-250,000', '500,000+', '250-300,000', '400-500,000']\nvalues = [LFirst,LSecond,LThird,LFourth,LFifth,LSixth,LSeventh,LEighth,LNinth,LTenth,LEleventh,LTwelve,LThirteen,LFourteen,LFifteen,LSixteen,LSeventeen,LEighteen]\nplt.figure(1, figsize=(79, 20))\nplt.subplot(131)\nplt.bar(names, values)\nplt.xlabel('Category') \n# naming the y axis \nplt.ylabel('Number of people') \n  \n# giving a title to my graph \nplt.title('Distribution of Salaries') \nplt.show()","4d950a9c":"MaleIndia1=(India[India['Q1']=='Male'])\nMaleIndia1.head()","11773d95":"FirstMale=MaleIndia1.loc[MaleIndia1['Q9'] == '0-10,000']\nLFirstMale=len(FirstMale)\nLFirstMale","355b709b":"SecondMale=MaleIndia1.loc[MaleIndia1['Q9'] == '30-40,000']\nLSecondMale=len(SecondMale)\nLSecondMale","67d12dbe":"ThirdMale=MaleIndia1.loc[MaleIndia1['Q9'] == '20-30,000']\nLThirdMale=len(ThirdMale)\nLThirdMale","d9b777c8":"FourthMale=MaleIndia1.loc[MaleIndia1['Q9']=='10-20,000']\nLFourthMale=len(FourthMale)\nLFourthMale","83df952f":"FifthMale=MaleIndia1.loc[MaleIndia1['Q9']=='50-60,000']\nLFifthMale=len(FifthMale)\nLFifthMale","deec05ac":"SixthMale=MaleIndia1.loc[MaleIndia1['Q9']=='70-80,000']\nLSixthMale=len(SixthMale)\nLSixthMale","3911645b":"SeventhMale=MaleIndia1.loc[MaleIndia1['Q9']=='40-50,000']\nLSeventhMale=len(SeventhMale)\nLSeventhMale","0865d91c":"EighthMale=MaleIndia1.loc[MaleIndia1['Q9']=='150-200,000']\nLEighthMale=len(EighthMale)\nLEighthMale","4ec36bed":"NinthMale=MaleIndia1.loc[MaleIndia1['Q9']=='60-70,000']\nLNinthMale=len(NinthMale)\nLNinthMale","e0b4a9a9":"TenthMale=MaleIndia1.loc[MaleIndia1['Q9']=='80-90,000']\nLTenthMale=len(TenthMale)\nLTenthMale","c0d0d7fa":"EleventhMale=MaleIndia1.loc[MaleIndia1['Q9']=='100-125,000']\nLEleventhMale=len(EleventhMale)\nLEleventhMale","474df64c":"TwelveMale=MaleIndia1.loc[MaleIndia1['Q9']=='90-100,000']\nLTwelveMale=len(TwelveMale)\nLTwelveMale","880d929f":"ThirteenMale=MaleIndia1.loc[MaleIndia1['Q9']=='125-150,000']\nLThirteenMale=len(ThirteenMale)\nLThirteenMale","234c6996":"FourteenMale=MaleIndia1.loc[MaleIndia1['Q9']=='300-400,000']\nLFourteenMale=len(FourteenMale)\nLFourteenMale","820dfe74":"FifteenMale=MaleIndia1.loc[MaleIndia1['Q9']=='200-250,000']\nLFifteenMale=len(FifteenMale)\nLFifteenMale","055f04d1":"SixteenMale=MaleIndia1.loc[MaleIndia1['Q9']=='500,000+']\nLSixteenMale=len(SixteenMale)\nLSixteenMale","0b3f7098":"SeventeenMale=MaleIndia1.loc[MaleIndia1['Q9']=='250-300,000']\nLSeventeenMale=len(SeventeenMale)\nLSeventeenMale","81ddb0c3":"EighteenMale=MaleIndia1.loc[MaleIndia1['Q9']=='400-500,000']\nLEighteenMale=len(EighteenMale)\nLEighteenMale","c3bdc0e8":"names = ['0-10,000','30-40,000', '20-30,000', '10-20,000', '50-60,000', '70-80,000',\n       '40-50,000', '150-200,000', '60-70,000', '80-90,000',\n       '100-125,000', '90-100,000', '125-150,000', '300-400,000',\n       '200-250,000', '500,000+', '250-300,000', '400-500,000']\nvalues = [LFirstMale,LSecondMale,LThirdMale,LFourthMale,LFifthMale,LSixthMale,LSeventhMale,LEighthMale,LNinthMale,LTenthMale,LEleventhMale,LTwelveMale,LThirteenMale,LFourteenMale,LFifteenMale,LSixteenMale,LSeventeenMale,LEighteenMale]\nplt.figure(1, figsize=(79, 20))\nplt.subplot(131)\nplt.bar(names, values)\nplt.xlabel('Category') \n# naming the y axis \nplt.ylabel('Number of Male') \n  \n# giving a title to my graph \nplt.title('Distribution of Salaries') \nplt.show()","ef9b15fa":"FemaleIndia1=(India[India['Q1']=='Female'])\nFemaleIndia1.head()","1505ae27":"FirstFemale=FemaleIndia1.loc[FemaleIndia1['Q9'] == '0-10,000']\nLFirstFemale=len(FirstFemale)\nLFirstFemale","9138d5a3":"SecondFemale=FemaleIndia1.loc[FemaleIndia1['Q9'] == '30-40,000']\nLSecondFemale=len(SecondFemale)\nLSecondFemale","21c76866":"ThirdFemale=FemaleIndia1.loc[FemaleIndia1['Q9'] == '20-30,000']\nLThirdFemale=len(ThirdFemale)\nLThirdFemale","f5c9cc75":"FourthFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='10-20,000']\nLFourthFemale=len(FourthFemale)\nLFourthFemale","7593cbeb":"FifthFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='50-60,000']\nLFifthFemale=len(FifthFemale)\nLFifthFemale","ee17c8fe":"SixthFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='70-80,000']\nLSixthFemale=len(SixthFemale)\nLSixthFemale","eef8497f":"SeventhFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='40-50,000']\nLSeventhFemale=len(SeventhFemale)\nLSeventhFemale","b685e185":"EighthFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='150-200,000']\nLEighthFemale=len(EighthFemale)\nLEighthFemale","726b2f36":"NinthFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='60-70,000']\nLNinthFemale=len(NinthFemale)\nLNinthFemale","f392fe19":"TenthFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='80-90,000']\nLTenthFemale=len(TenthFemale)\nLTenthFemale","e52b7b91":"EleventhFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='100-125,000']\nLEleventhFemale=len(EleventhFemale)\nLEleventhFemale","3c48e1f6":"TwelveFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='90-100,000']\nLTwelveFemale=len(TwelveFemale)\nLTwelveFemale","e6877f45":"ThirteenFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='125-150,000']\nLThirteenFemale=len(ThirteenFemale)\nLThirteenFemale","5503248f":"FourteenFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='300-400,000']\nLFourteenFemale=len(FourteenFemale)\nLFourteenFemale","bb30eca1":"FifteenFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='200-250,000']\nLFifteenFemale=len(FifteenFemale)\nLFifteenFemale","0f380dc3":"SixteenFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='500,000+']\nLSixteenFemale=len(SixteenFemale)\nLSixteenFemale","5e490771":"SeventeenFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='250-300,000']\nLSeventeenFemale=len(SeventeenFemale)\nLSeventeenFemale","cc2582b2":"EighteenFemale=FemaleIndia1.loc[FemaleIndia1['Q9']=='400-500,000']\nLEighteenFemale=len(EighteenFemale)\nLEighteenFemale","e08b90a8":"n = ['0-10,000','30-40,000', '20-30,000', '10-20,000', '50-60,000', '70-80,000',\n       '40-50,000', '150-200,000', '60-70,000', '80-90,000',\n       '100-125,000', '90-100,000', '125-150,000', '300-400,000',\n       '200-250,000', '500,000+', '250-300,000', '400-500,000']\nv = [LFirstFemale,LSecondFemale,LThirdFemale,LFourthFemale,LFifthFemale,LSixthFemale,LSeventhFemale,LEighthFemale,LNinthFemale,LTenthFemale,LEleventhFemale,LTwelveFemale,LThirteenFemale,LFourteenFemale,LFifteenFemale,LSixteenFemale,LSeventeenFemale,LEighteenFemale]\nplt.figure(1, figsize=(79, 20))\nplt.subplot(131)\nplt.bar(n, v)\nplt.xlabel('Category') \n# naming the y axis \nplt.ylabel('Number of Female') \n  \n# giving a title to my graph \nplt.title('Distribution of Salaries') \nplt.show()","2ab70276":"**Distribution of Salaries for Male**","4a40c675":"![](https:\/\/goo.gl\/xeAewJ)**People using different tools in India**","507b7fa0":"\n> ![](https:\/\/goo.gl\/NA6gmQ)\n**Distribution of people according to degree**","8b162225":"**Viewing all the three datasets**","96beb556":"**Distribution of Salaries in Female**","ca47fa5d":"**Distribution of Male and Female in India**","58c5fcab":"![](http:\/\/goo.gl\/guKGFT)\n**Investigating  about the country India**"}}