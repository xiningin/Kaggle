{"cell_type":{"e12bb84c":"code","39d32071":"code","c31d75e3":"code","fa1a169f":"code","517c3555":"code","b0f557d4":"code","2b28157b":"code","b54d6fca":"code","74738e29":"code","c16ae366":"code","af3b4e01":"code","b5c2381b":"code","dc7a38be":"code","92be3eb2":"code","98ba17b8":"markdown","e9e45c8a":"markdown","baf972bf":"markdown","83472ca3":"markdown","5cad36da":"markdown","3f4f120c":"markdown","c560bc38":"markdown"},"source":{"e12bb84c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# Matplot Lib\nimport matplotlib.pyplot as plt\n        \nimport seaborn as sns\n# Sklearn Libraries\nfrom sklearn.model_selection import train_test_split\n\n# Any results you write to the current directory are saved as output.","39d32071":"ecoli_df = pd.read_csv(\"\/kaggle\/input\/ecoli-uci-dataset\/ecoli.csv\")\n\necoli_df.head()","c31d75e3":"ecoli_df.shape","fa1a169f":"ecoli_df.describe()","517c3555":"print(ecoli_df['SITE'].unique())\nprint(len(ecoli_df['SITE'].unique()))","b0f557d4":"print(ecoli_df.groupby(['SITE']).agg(['count']))","2b28157b":"groups = ecoli_df.groupby(['SITE'])\n# Plot\nfig, ax = plt.subplots()\nax.margins(0.05)\nfor name, group in groups:\n    ax.plot(group.MCG, group.GVH, marker='o', linestyle='', label=name)\nax.legend(numpoints=1, loc='upper left')\n\nplt.show()","b54d6fca":"sns.scatterplot(x=ecoli_df.MCG, y=ecoli_df.GVH, hue=ecoli_df.SITE, style = ecoli_df.SITE)","74738e29":"sns.pairplot(ecoli_df)","c16ae366":"X = ecoli_df.iloc[:,1:7]\nprint(X.head())\ny = ecoli_df.iloc[:,8]\nprint(y.head())","af3b4e01":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\nprint(\"Size of X:\", X.shape)\nprint(\"Size of y:\", y.shape)\nprint(\"Size of X_train:\", X_train.shape)\nprint(\"Size of y_train:\", y_train.shape)\nprint(\"Size of X_test:\", X_test.shape)\nprint(\"Size of y_test:\", y_test.shape)\n","b5c2381b":"# Threshold for removing correlated variables\nthreshold = 0.9\n\n# Absolute value correlation matrix\ncorr_matrix = X_train.corr().abs()\ncorr_matrix.head()","dc7a38be":"# Upper triangle of correlations\nupper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))\nupper.head()","92be3eb2":"# Select columns with correlations above threshold\nto_drop = [column for column in upper.columns if any(upper[column] > threshold)]\n\nprint('There are %d columns to remove.' % (len(to_drop)))","98ba17b8":"No features to be dropped","e9e45c8a":"## Plots for understanding","baf972bf":"## Extracting features and labels\nNeglecting 'SEQUENCE_NAME' for features and selecting 'SITE' for labels and rest for features ","83472ca3":"## Train Test Split","5cad36da":"Size of dataset","3f4f120c":"## Counting no of unique classes","c560bc38":"## Primary Feature Selection\nChecking for correlated features and threshold is set to 0.9."}}