{"cell_type":{"1abbaaaa":"code","13c97ad2":"code","1e232bec":"code","ab23cf84":"code","0a2cc213":"code","8d8b54e2":"code","4b53409d":"code","ccb4218c":"code","efa8db1f":"code","54f98bbb":"code","36a870de":"code","f02d74ff":"code","7c035cc4":"code","5f8ac210":"code","89f9f7b8":"code","1947ec92":"code","9cde708e":"code","3dc22d02":"code","4ee16d7e":"code","87eb270b":"code","7b98bcb2":"code","bf3bd626":"code","8d6c7c96":"code","dfadd230":"code","3d9bced8":"code","1608d1f5":"code","448a32e6":"code","cc954dcc":"code","ed26283d":"code","d7a44ee7":"code","587d4652":"code","c34497cd":"code","a5c9aeea":"code","f370928d":"code","ab2ced48":"code","a8fe06e7":"code","be570537":"code","6213a40b":"code","6b7f03f6":"code","26cdaaff":"code","9677e3f2":"code","c38e6e96":"code","36a53674":"code","2e1fedae":"code","62f71b43":"code","e2fc6a0c":"code","9a70e36d":"code","5928104d":"code","76bb4b75":"code","5c8326c6":"code","c9904407":"code","0cf436a7":"code","8f8e7706":"code","7bd9c657":"code","fbe00c2b":"code","ac8f572f":"code","2a7895a3":"code","cc0e7527":"code","009b62e5":"code","b7e5311e":"code","3edb66a8":"code","5a726e58":"markdown","5b3509ea":"markdown","12062d5d":"markdown","a288bcc1":"markdown","08fd0855":"markdown","e4c2786f":"markdown","2b88cc98":"markdown","eaa4fc0e":"markdown","e35a3773":"markdown","9cbc8eea":"markdown","f725985b":"markdown","cd48dd33":"markdown"},"source":{"1abbaaaa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium import plugins\nfrom wordcloud import WordCloud\nimport re\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13c97ad2":"data = pd.read_csv(\"\/kaggle\/input\/ufo-sightings\/scrubbed.csv\")","1e232bec":"data.info()","ab23cf84":"data.head(5).T","0a2cc213":"print(\"Unique states:\")\nprint(data.state.unique())\nprint(\"Proportion of NaNs: %.2f\" % (sum(data.country.isnull())\/data.shape[0]))\nprint(\"Unique shapes:\")\nprint(data['shape'].unique())\nprint(\"Proportion of NaNs: %.2f\" % (sum(data['shape'].isnull())\/data.shape[0]))","8d8b54e2":"def custom_to_datetime(date):\n    if date[11:13] == '24':\n        x = date[:11] + '23:59'\n    elif date[10:12] == '24':\n        x = date[:10] + '23:59'\n    elif date[9:11] == '24':\n        x = date[:9] + '23:59'\n    else:\n        return pd.to_datetime(date)\n    return pd.to_datetime(x)\n\ndata.index = np.arange(0, len(data))\ndata['datetime'] = data['datetime'].apply(custom_to_datetime)  \ndata['date posted'] = pd.to_datetime(data['date posted'])\n\ndata['country'] = data['country'].fillna('unknown')\ndata['state'] = data['state'].fillna('unknown')\ndata['shape'] = data['shape'].fillna('unknown')\ndata['comments'] = data['comments'].fillna('unknown')\n\ndata['shape'] = data['shape'].astype('category')\ndata['state'] = data['state'].astype('category')\ndata['country'] = data['country'].astype('category')\n\ndata['duration (seconds)'] = pd.to_numeric(data['duration (seconds)'], errors='coerce')\ndata['latitude'] = pd.to_numeric(data['latitude'], errors='coerce')\ndata['longitude '] = pd.to_numeric(data['longitude '], errors='coerce')    \n\ndata.loc[: ,'latitude'].replace({0.0: np.nan}, inplace=True)\ndata.loc[: ,'longitude '].replace({0.0: np.nan}, inplace=True)\ndata.loc[: ,'duration (seconds)'].replace({0.0: np.nan}, inplace=True)\n#data['month'] = data['datetime'].dt.month\n#data['weekday'] = data['datetime'].dt.weekday\ndata['month'] = pd.DatetimeIndex(data['datetime']).month #creates column 'month' stripping the year from datetime_zero\ndata['year'] = pd.DatetimeIndex(data['datetime']).year #creates column 'year' stripping the year from datetime_zero\ndata['day'] = pd.DatetimeIndex(data['datetime']).day #creates column 'day' stripping the year from datetime_zero\ndata['hour'] = pd.DatetimeIndex(data['datetime']).hour #creates column 'hour' stripping the year from datetime_zero\n","4b53409d":"data.info()","ccb4218c":"data.isnull().sum()","efa8db1f":"data.shape","54f98bbb":"data.head(100).T","36a870de":"data = data.dropna(thresh=8)","f02d74ff":"data.shape","7c035cc4":"data.info()","5f8ac210":"##Y\u0131llara g\u00f6re g\u00f6r\u00fclme s\u0131kl\u0131\u011f\u0131\nyears_data = data['year'].value_counts()\nyears_index = years_data.index  \nyears_values = years_data.values\nplt.figure(figsize=(15,8))\nplt.xticks(rotation = 60)\nplt.title('UFO Sightings since 1943', fontsize=18)\nplt.xlabel(\"Year\", fontsize=14)\nplt.ylabel(\"Number of reports\", fontsize=14)\nyears_plot = sns.barplot(x=years_index[:80],y=years_values[:80], palette = \"Blues_d\")\n\n## ","89f9f7b8":"## Aylara g\u00f6re ufo report s\u0131kl\u0131klar\u0131\norder = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\"August\", \"September\", \n         \"October\", \"November\", \"December\"]\ndata['month'] = data['datetime'].dt.month_name() #turns month numbers into month names\nmonth_data = data[\"month\"].value_counts()\nmonth_index = month_data.index  \nmonth_values = month_data.values\nplt.figure(figsize=(15,8))\nplt.title('UFO Sightings by Month', fontsize=18)\nplt.xlabel(\"Month\",fontsize=14)\nplt.ylabel(\"Number of reports\", fontsize=14)\nmonth_plot = sns.barplot(x=month_index[:60],y=month_values[:60], palette = \"Blues\", order=order)\n\n","1947ec92":"# Aylar\u0131n g\u00fcnlerine bakacak olursak en \u00e7ok ay\u0131n 15inde ve 1inde raporlanm\u0131\u015f.\nday_data = data['day'].value_counts() \nday_index = day_data.index \nday_values =day_data.values\nplt.figure(figsize=(15,8))\nplt.title('UFO Sightings by Day', fontsize=18)\nplt.xlabel(\"Day of the Month\", fontsize=14)\nplt.ylabel(\"Number of reports\", fontsize=14)\nday_plot = sns.barplot(x=day_index[::],y=day_values[::], palette = \"pastel\")","9cde708e":"#En \u00e7ok Cumartesi g\u00fcnleri ufo g\u00f6r\u00fclm\u00fc\u015f.\ndata['weekday'] = data['datetime'].dt.day_name()\norder = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\nweekday_data = data['weekday'].value_counts()\nweekday_index = weekday_data.index \nweekday_values = weekday_data.values\nplt.figure(figsize=(15,8))\nplt.title('UFO Sightings by Day of the Week', fontsize=18)\nplt.xlabel(\"Day of the week\", fontsize=14)\nplt.ylabel(\"Number of reports\", fontsize=14)\nsns.set_palette(\"pastel\")\nweekday_plot = sns.barplot(x=weekday_index[:60],y=weekday_values[:60], order = order)","3dc22d02":"# Hangi saatlerde raporlama artm\u0131\u015f?\nhour_data = data['hour'].value_counts() \nhour_index = hour_data.index \nhour_values =hour_data.values\nplt.figure(figsize=(15,8))\nplt.title('UFO Sightings by Hour', fontsize=18)\nplt.xlabel(\"Time\", fontsize=14)\nplt.ylabel(\"Number of reports\", fontsize=14)\nhour_plot = sns.barplot(x=hour_index[:60],y=hour_values[:60], palette = 'Purples')","4ee16d7e":"data.shape","87eb270b":"data.head().T\n","7b98bcb2":"sns.set(style='darkgrid')\nplt.figure(figsize=(20,10))\nax = sns.countplot(y='shape', data=data, \\\n                   order = data['shape'].value_counts().index).\\\nset_title('G\u00f6ky\u00fcz\u00fcnde G\u00f6r\u00fclen Cisimlerin G\u00f6r\u00fclme S\u0131kl\u0131k Grafi\u011fi')\n#plt.xticks(rotation=90)\n\nplt.ylabel('\u015eekil T\u00fcr\u00fc', fontsize=20)\nplt.xlabel('Number', fontsize=20)","bf3bd626":"\nimport plotly.express as px\nfigure = px.scatter(data,\"hour\",\"shape\",color = \"shape\", size = \"hour\", hover_data = [\"city\"])\nfigure.show()","8d6c7c96":"data.columns","dfadd230":"data[data.city=='sewickly']\n","3d9bced8":"data[data.city=='mansfield']\n","1608d1f5":"data.iloc[31542].comments","448a32e6":"data.iloc[9698].comments","cc954dcc":"fireball_man = [data[data.city=='mansfield'].comments]","ed26283d":"mansfield_comments = pd.DataFrame(fireball_man).T","d7a44ee7":"mansfield_comments","587d4652":"masfield_comments_list = mansfield_comments.values.tolist()","c34497cd":"masfield_comments_list","a5c9aeea":"fires = []\nfor sub_list in masfield_comments_list:\n    for string in sub_list:\n        if 'fire' in string:\n            fires.append(string)\nprint(fires)\n        ","f370928d":"mans = []\nfor sub_list in masfield_comments_list:\n    for string in sub_list:\n        if 'fire' in string:\n            mans.append(string)\nprint(mans)\n        ","ab2ced48":"data[\"shape\"].unique()\n","a8fe06e7":"years = data.year.unique()\nyears.sort()\nyears","be570537":"ax = sns.catplot(y='state',\n            data=data,\n            kind='count',\n            height=15,\n            order = data['state'].value_counts().index)\n\nax.fig.suptitle('Eyaletlere G\u00f6re Ufo G\u00f6rme S\u0131kl\u0131k Grafi\u011fi', x=0.5, y=1,fontsize = 25)\n\nplt.ylabel('Eyalet', fontsize=20)\nplt.xlabel('Number', fontsize=20)","6213a40b":"sns.set(style='darkgrid')\nplt.figure(figsize=(20,10))\nax = sns.countplot(x='country', data=data,\\\n                  order = data['country'].value_counts().index, log=True).\\\nset_title('\u00dclkelere G\u00f6re UFo Raporlama S\u0131kl\u0131k Grafi\u011fi', fontsize=25)\n\nplt.ylabel('Number, log', fontsize=20)\nplt.xlabel('\u00dclke', fontsize=20)","6b7f03f6":"sample =data.loc[(~data['latitude'].isna())].sample(10000)\n\nMap = folium.Map(zoom_start=2)\nfor lat, long in zip(sample['latitude'], sample['longitude ']):\n    folium.Circle((lat, long),\n                   radius=0.1,\n                   color='red',\n                   fill_color='#3186cc',\n                   ).add_to(Map)\nMap","26cdaaff":"sample =data.loc[ (data['country'] == 'us') & (~data['latitude'].isna())].sample(5000)\n\nMap = folium.Map(location=(41.526653, -101.103882), zoom_start=2.7)\nfor lat, long in zip(sample['latitude'], sample['longitude ']):\n    folium.Circle((lat, long),\n                   radius=0.01,\n                   color='red',\n                   fill_color='#3186cc',\n                   ).add_to(Map)\nMap","9677e3f2":"words = [i for i in data.comments.dropna()]\n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=2048,\n                          height=1024\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","c38e6e96":"from transformers import AutoTokenizer, AutoModelForSequenceClassification\nimport torch\n","36a53674":"tokenizer = AutoTokenizer.from_pretrained('nlptown\/bert-base-multilingual-uncased-sentiment')\n\nmodel = AutoModelForSequenceClassification.from_pretrained('nlptown\/bert-base-multilingual-uncased-sentiment')","2e1fedae":"tokens = tokenizer.encode('It was good but couldve been better. Great', return_tensors='pt')","62f71b43":"result = model(tokens)\n","e2fc6a0c":"result.logits\n","9a70e36d":"tokens[0]","5928104d":"tokenizer.decode(tokens[0])","76bb4b75":"result = model(tokens)","5c8326c6":"result","c9904407":"int(torch.argmax(result.logits))+1\n","0cf436a7":"Comments = [i for i in data[\"comments\"]]","8f8e7706":"Comments[0]","7bd9c657":"df = pd.DataFrame(np.array(Comments), columns=['comments'])","fbe00c2b":"df","ac8f572f":"df.comments.iloc[53]","2a7895a3":"def sentiment_score(comments):\n    tokens = tokenizer.encode(comments, return_tensors='pt')\n    result = model(tokens)\n    return int(torch.argmax(result.logits))+1","cc0e7527":"sentiment_score(df[\"comments\"].iloc[528])","009b62e5":"df[\"comments\"].iloc[528]","b7e5311e":"#df['sentiment'] = df['comments'].apply(lambda x: sentiment_score(x[:512]))","3edb66a8":"df","5a726e58":"* 20-23 aras\u0131 UFO raporlama say\u0131s\u0131 ciddi \u015fekilde artm\u0131\u015f. G\u00f6ky\u00fcz\u00fc karanl\u0131kken emin olamad\u0131\u011f\u0131m\u0131z cisimleri bile daha net g\u00f6r\u00fcr\u00fcz. Bu y\u00fczden ak\u015fam saatlerinde UFO g\u00f6r\u00fcn\u00fcm\u00fc daha s\u0131k.","5b3509ea":"* 2000'li y\u0131llar\u0131n ba\u015flamas\u0131 ile birlikte g\u00f6r\u00fclen ufo say\u0131lar\u0131nda ciddi bir art\u0131\u015f g\u00f6zlemlenmi\u015f. Fakat 2014 y\u0131l\u0131nda keskin bir d\u00fc\u015f\u00fc\u015f g\u00f6zlemleniyor. 2014 y\u0131l\u0131n\u0131n ortalarar\u0131nda \u00e7al\u0131\u015fma durdurulmu\u015f. ","12062d5d":"* California eyaleti a\u00e7\u0131k ara ile raporlamada birinci. Sonras\u0131nda yar\u0131s\u0131ndan da az raporlama olan Washington geliyor. 1906 y\u0131l\u0131ndan 2014 y\u0131l\u0131na kadar olan n\u00fcfus de\u011fi\u015fikliklerine bakt\u0131\u011f\u0131m\u0131zda:\n* CA 1906 --> 1.976.000  2014 --> 38.253.768 \n* WA 1906 --> 904.000  2014 --> 7.057.531\n* California eyaletinin n\u00fcfusu a\u00e7\u0131k ara di\u011ferlerinden fazla. Bu nedenle UFO raporunun daha fazla olmas\u0131 normal. Anormal bir duruma sahip oldu\u011funu d\u00fc\u015f\u00fcnm\u00fcyorum.","a288bcc1":"* \u0130stisna olarak: pyramid,round,flare,hexagon,crescent ve dome \u015fekilleri ortaya \u00e7\u0131k\u0131yor.\n* shape round olan ve shape dome olan nadir UFO'lar ayn\u0131 saatte (23) Ayn\u0131 eyaletten g\u00f6r\u00fclm\u00fc\u015f.\n* \u015fekli round ve dome olanlar\u0131n di\u011fer verilerini kar\u015f\u0131la\u015ft\u0131r\u0131rsak daha iyi sonu\u00e7 elde edebiliriz.","08fd0855":"* Bu Mansfield'da g\u00f6r\u00fclen UFO haberini internette ara\u015ft\u0131rd\u0131\u011f\u0131mda 200 y\u0131l \u00f6nce Mansfield'da ufo g\u00f6ren biri hakk\u0131nda yaz\u0131lm\u0131\u015f makale ile \u00e7ok yak\u0131n yorumda bulundu\u011funu farkettim. O y\u00fczden Mansfield'da farkl\u0131 zamanlarda g\u00f6r\u00fclen UFO'lar\u0131n yorumlar\u0131na bakmakta fayda var.\n[Masfield 200 years age ufo sighting](https:\/\/www.mansfieldnewsjournal.com\/story\/news\/local\/2014\/10\/27\/author-investigates-year-old-ufo-sighting\/18026911\/) \n* B\u00f6yle bir benzerli\u011fin olmas\u0131 ya bu haberin taklit edildi\u011fini ya da ger\u00e7ekten g\u00f6r\u00fcld\u00fc\u011f\u00fcn\u00fc d\u00fc\u015f\u00fcnd\u00fcr\u00fcyor.","e4c2786f":"float64(1): longitude <br>\nobject(10): datetime, city, state, country, shape, duration(seconds), duration(hours\/min), date posted, latitude","2b88cc98":"*  En fazla haziran,temmuz ve a\u011fustos aylar\u0131nda ufo g\u00f6zlem raporlamas\u0131 var. Yaz aylar\u0131nda daha \u00e7ok raporlama oldu\u011fu ortaya \u00e7\u0131k\u0131yor. Bunun sebebi s\u0131cak havalarda daha fazla insan\u0131n d\u0131\u015far\u0131 \u00e7\u0131kmas\u0131 olabilir. ","eaa4fc0e":"* Yap\u0131lan yorumlardan duygu analizi yapmaya \u00e7al\u0131\u015ft\u0131m. Bunun i\u00e7in bert-base-multilingual-uncased-sentiment modelini kulland\u0131m.","e35a3773":"* Amerika'n\u0131n UFO Report oran\u0131 a\u00e7\u0131k ara ile di\u011fer \u00fclkelerden fazla.","9cbc8eea":"* Cumartesi ve pazar g\u00fcnlerinde fazla g\u00f6r\u00fclme sebebinin yine d\u0131\u015fardaki insan say\u0131s\u0131n\u0131n art\u0131\u015f\u0131 ile ili\u015fkili oldu\u011funu d\u00fc\u015f\u00fcn\u00fcyorum.","f725985b":"<a id = \"1\"><\/a>\n## Load And Check Data","cd48dd33":"* Bir \u0131\u015f\u0131k oldu\u011fundan bahsetmenin d\u0131\u015f\u0131nda bakarsak, triangle ve circle g\u00f6renler di\u011ferlerinden olduk\u00e7a fazla. \u015eeklinin neye benzedi\u011finin tan\u0131mlanmad\u0131\u011f\u0131 durumlar da fazla."}}