{"cell_type":{"60b4b9ee":"code","475d086e":"code","458821e8":"code","53381df0":"code","74181c42":"code","dec03103":"code","5be48424":"code","c932dc34":"code","2b108d53":"code","cad96bd8":"code","ba877095":"code","12783138":"code","89724b59":"code","9602f170":"code","91dfc7e7":"code","b5804769":"code","7dd98962":"code","9c4eaf7a":"code","02d0b127":"code","d8bc610d":"code","2c72f80d":"code","7aa410bf":"code","39fd0e07":"code","2215ca2c":"code","f010c8d7":"code","7d4ecc2b":"code","0ee6e53f":"code","d67100a7":"code","68f88e79":"code","ecbd7267":"code","02f06a48":"code","ef02b7d6":"code","e021055e":"code","fb0552dd":"code","71d6d0b6":"code","001e387f":"code","e467fde2":"code","b8a34e1b":"code","6d8b797f":"code","1087135f":"markdown","e516ebfb":"markdown"},"source":{"60b4b9ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","475d086e":"raw_data= pd.read_csv(\"..\/input\/indian-startup-funding\/startup_funding.csv\")","458821e8":"df = raw_data.copy()","53381df0":"df.head(5)","74181c42":"df.shape","dec03103":"df.info()","5be48424":"(df.isnull().sum()\/len(df)*100).sort_values(ascending = False).round(2)","c932dc34":"df.drop(['Remarks','Sr No'],axis=1,inplace = True)","2b108d53":"df.columns","cad96bd8":"df.rename(columns={'Date dd\/mm\/yyyy': 'Date', 'City  Location': 'City','InvestmentnType': 'Investment Type','Amount in USD': 'Amount(USD)'}, inplace=True)","ba877095":"df.columns","12783138":"df['Amount(USD)'].unique()","89724b59":"df['Amount(USD)'] = df['Amount(USD)'].str.replace(',','')\n\ndf['Amount(USD)'] = df['Amount(USD)'].str.replace('Undisclosed','0')\n\ndf['Amount(USD)'] = df['Amount(USD)'].str.replace('undisclosed','0')\n\ndf['Amount(USD)'] = df['Amount(USD)'].str.replace('unknown','0')\n","9602f170":"df['Amount(USD)'].sort_values(ascending=True).unique()","91dfc7e7":"df['Amount(USD)'] = df['Amount(USD)'].apply(lambda x : str(x).replace(\"\\\\\\\\xc2\\\\\\\\xa0\",''))\ndf['Amount(USD)'] = df['Amount(USD)'].apply(lambda x : str(x).replace(\"+\",''))","b5804769":"df['Amount(USD)'] = df['Amount(USD)'].str.replace('N\/A','0')\ndf['Amount(USD)'] = df['Amount(USD)'].str.replace('nan','0')","7dd98962":"df['Amount(USD)'].unique()","9c4eaf7a":"df['Amount(USD)'] = pd.to_numeric(df['Amount(USD)'])","02d0b127":"type(df['Amount(USD)'][0])","d8bc610d":"df.head(100)","2c72f80d":"df['City'].unique()","7aa410bf":"df['City'] = df['City'].apply(lambda x: str(x).replace('\\\\\\\\xc2\\\\\\\\xa0',''))","39fd0e07":"df['City'] = df['City'].apply(lambda x: str(x).replace('Bengaluru','Bangalore'))\n\ndf['City'] = df['City'].apply(lambda x: str(x).replace('New Delhi','Delhi'))\n\ndf['City'] = df['City'].apply(lambda x: str(x).replace('Kolkatta','Kolkata'))\n\ndf['City'] = df['City'].apply(lambda x: str(x).replace('Gurgaon','Gurugram'))\n\ndf['City'] = df['City'].apply(lambda x: str(x).replace('nan','India'))","2215ca2c":"df['City'].unique()","f010c8d7":"sum(df['Date'].str.len() != 10)","7d4ecc2b":"df[df['Date'].str.len() > 10]","0ee6e53f":"df['Date'] = df['Date'].str.replace('\\\\xc2\\\\xa010\/7\/2015','10\/07\/2015')\n\ndf['Date'] = df['Date'].str.replace('\\\\\\\\xc2\\\\\\\\xa010\/7\/2015','10\/07\/2015')\n\n#df['Date'] = df['Date'].str.replace('10\/7\/2015','10\/07\/2015')\n\ndf['Date'] = df['Date'].str.replace('22\/01\/\/2015','22\/01\/2015')","d67100a7":" df.at[2606,'Date']='10\/07\/2015'","68f88e79":"df[df['Date'].str.len() > 10]","ecbd7267":"df['Startup Name'] = df['Startup Name'].apply(lambda x: str(x).replace('\\\\xc2\\\\xa0',''))\ndf['Startup Name'] = df['Startup Name'].apply(lambda x: str(x).replace('\\\\\\\\xc2\\\\\\\\xa0',''))","02f06a48":"df['Startup Name'].sort_values(ascending=True)","ef02b7d6":"df","e021055e":"df['Investment Type'].unique()","fb0552dd":"\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('Pre-series A','Pre-Series A'))\n\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('pre-series A','Pre-Series A'))\n\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('pre-Series A','Pre-Series A'))\n\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('Pre Series A','Pre-Series A'))\n\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('Seed\\\\\\\\nFunding','Seed Funding'))\n\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('Private\\\\\\\\nEquity','PrivateEquity'))\n\ndf['Investment Type'] = df['Investment Type'].apply(lambda x: str(x).replace('Crowd funding','Crowd Funding'))","71d6d0b6":"df['Investors Name'] = df['Investors Name'].apply(lambda x: str(x).replace('\\\\xc2\\\\xa0',''))\ndf['Investors Name'] = df['Investors Name'].apply(lambda x: str(x).replace('\\\\\\\\xc2\\\\\\\\xa0',''))","001e387f":"df['Industry Vertical'] = df['Industry Vertical'].apply(lambda x: str(x).replace('\\\\xc2\\\\xa0',''))\ndf['Industry Vertical'] = df['Industry Vertical'].apply(lambda x: str(x).replace('\\\\\\\\xc2\\\\\\\\xa0',''))","e467fde2":"df[['Investment Type','Industry Vertical','SubVertical','Investors Name']]=df[['Investment Type','Industry Vertical','SubVertical','Investors Name']].fillna('UnDisclosed')","b8a34e1b":"df['SubVertical'] = df['SubVertical'].apply(lambda x: str(x).replace('\\\\xc2\\\\xa0',''))\ndf['SubVertical'] = df['SubVertical'].apply(lambda x: str(x).replace('\\\\\\\\xc2\\\\\\\\xa0',''))\n\ndf['Investors Name'] = df['Investors Name'].apply(lambda x: str(x).replace('\\\\xe2\\\\x80\\\\x99s',''))\ndf['Investors Name'] = df['Investors Name'].apply(lambda x: str(x).replace('\\\\xc3\\\\x98',''))\n\ndf['Investors Name']=df['Investors Name'].fillna('UnDisclosed')\ndf['SubVertical']=df['SubVertical'].fillna('UnDisclosed')","6d8b797f":"df[df['Investors Name']=='UnDisclosed']","1087135f":"**Visualization using Tableau:**\n<div class='tableauPlaceholder' id='viz1632584495501' style='position: relative'><noscript><a href='#'><img alt='Indian Startup fundings ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;In&#47;IndianStartupfunding&#47;IndianStartupfundings&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='IndianStartupfunding&#47;IndianStartupfundings' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;In&#47;IndianStartupfunding&#47;IndianStartupfundings&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-US' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1632584495501');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1300px';vizElement.style.minHeight='1007px';vizElement.style.maxHeight='1827px';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","e516ebfb":"#Industry Vertical,SubVertical,City Location,Investors Name,InvestmentnType,Amount in USD,Remarks have missing values"}}