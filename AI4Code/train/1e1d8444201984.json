{"cell_type":{"e71c29c3":"code","a8fed690":"code","b5aa1add":"code","c83ebca2":"code","de28b40a":"code","2a255711":"code","c169d9a1":"code","ce5142fa":"code","f1b82478":"code","5cbcd839":"code","9ba7ec4d":"code","459f94a2":"code","360dac5d":"code","0bc19373":"code","a5dba386":"code","a2fc1f96":"code","b2a5ad81":"code","a49c4dee":"code","5bca08a3":"code","4998a55c":"code","2f6868b5":"code","25dfde2c":"code","44660748":"code","ec05b175":"code","76ea5323":"markdown","f9914387":"markdown","f7947246":"markdown","0fd41762":"markdown","9c0a78cb":"markdown","0c31c867":"markdown","6acef9d9":"markdown","2c64bfc5":"markdown","86f96ed4":"markdown","fa0f15f7":"markdown","141e3ff1":"markdown","cf2a81a9":"markdown","df1c97fc":"markdown"},"source":{"e71c29c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8fed690":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","b5aa1add":"sns.set(rc={'figure.figsize':(11.7,8.27)})","c83ebca2":"factmarketsales = pd.read_excel('..\/input\/global-market-sales\/FactMarketSales.xlsx')\norders = pd.read_excel('..\/input\/global-market-sales\/Orders.xlsx')\nproducts = pd.read_excel('..\/input\/global-market-sales\/Products.xlsx')\nshippings = pd.read_excel('..\/input\/global-market-sales\/Shippings.xlsx')","de28b40a":"df_all = factmarketsales.merge(orders,on='OrderCode').merge(products,on='ProductId').merge(shippings,on='OrderCode')\ndf_all.head(5)","2a255711":"#heatmap of the profit by sub category\ndf_pivot = df_all.pivot_table(values='Profit',index=['Category','SubCategory'],columns='OrderPriority',aggfunc='sum')\nsns.heatmap(df_pivot,annot=True)","c169d9a1":"#bar cart for the sales and profit for each order priority\nby_priority = df_all.groupby(['OrderPriority']).sum()[['Sales','Profit']]\nby_priority.plot(kind='bar')","ce5142fa":"#distribution plot of sales\nsns.distplot(df_all['Sales'])","f1b82478":"#jointplot between saes and profit\nsns.jointplot(data=df_all,x='Profit',y='Sales',kind='reg')","5cbcd839":"#Profit and sales value by shipping region\nby_region = df_all.groupby(['ShippingRegion']).sum()[['Profit','Sales']]\nby_region.plot(kind='bar')","9ba7ec4d":"#number of sales divided by region for each category\nsns.barplot(x=\"Sales\", y=\"ShippingRegion\", hue=\"Category\",data=df_all, palette=\"coolwarm\")","459f94a2":"#amount of profit obtained by region for each category\nsns.barplot(x=\"Profit\", y=\"ShippingRegion\", hue=\"Category\",data=df_all, palette=\"coolwarm\")","360dac5d":"#X and y arrays\nX = df_all[['Sales','Shipping Cost','Discount']]\ny = df_all['Profit']","0bc19373":"from sklearn.model_selection import train_test_split","a5dba386":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101)","a2fc1f96":"from sklearn.linear_model import LinearRegression","b2a5ad81":"lm = LinearRegression()\nlm.fit(X_train,y_train)","a49c4dee":"print(lm.intercept_)","5bca08a3":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","4998a55c":"predictions = lm.predict(X_test)","2f6868b5":"plt.scatter(y_test,predictions)","25dfde2c":"sns.distplot((y_test-predictions),bins=100);","44660748":"from sklearn import metrics","ec05b175":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","76ea5323":"# Prediction from Our Model","f9914387":"# Gain some graphical insight","f7947246":"# Regression Evaluation Metric","0fd41762":"# Start linear regression analysis","9c0a78cb":"Compile all Data in Dataset with the OrderCode and ProductId as the key for the merging","0c31c867":"Let's now begin to train out regression model! We will need to first split up our data into an X array that contains the features to train on, and a y array with the target variable, in this case the Profit column. We will toss out the non corelated columns because they have no correlation for the performance of the Profit.","6acef9d9":"# Introduction\nGreetings! This is an automatically-generated kernel with starter code demonstrating how to read in the data and begin exploring. Click the blue \"Edit Notebook\" or \"Fork Notebook\" button at the top of this kernel to begin editing.\nIn this section we will do some exploratory analysis and regressive linear analysis by using global-market-sales data. This dataset consists of four files which are related one to another by particular columns. We will start to compile one to another and see the track record of the company from these data and at the end we will try to create a regression linear analysis for some variables within this dataset.","2c64bfc5":"set the figure size for the seaborn graphic. ","86f96ed4":"# **Import the Data**","fa0f15f7":"Below are the coefficients that represent correlation between profit, shipping cost and dicount variable.","141e3ff1":"**Train Test Split**\n\nNow let's split the data into a training set and a testing set. We will train out model on the training set and then use the test set to evaluate the model.","cf2a81a9":"# Model Evaluation","df1c97fc":"**Creating and Training the Model**"}}