{"cell_type":{"2cd2c969":"code","5bf74993":"code","5c823bfd":"code","0f5caca7":"code","1b4c261d":"code","c7d0bbca":"code","e9fcfe9d":"code","7d281ec1":"code","eaa26fc8":"code","eeb1bad0":"code","7b409212":"code","4aae62a6":"code","79ca5b99":"code","70ff2a70":"code","0ac13bcb":"code","b98784cd":"code","64650c96":"code","97f97871":"code","219146f9":"code","c3fcf01f":"markdown","4d1528a2":"markdown","9b6d5e41":"markdown","325390cd":"markdown","151f24ac":"markdown","2d250fd2":"markdown","636c5a6f":"markdown"},"source":{"2cd2c969":"from IPython.display import clear_output\n!pip3 install pycaret[full] --user\nclear_output()\n\nimport numpy as np\nimport pandas as pd \n\nfrom sklearn.model_selection import train_test_split\n\nfrom pycaret.classification import *\nfrom imblearn.combine import *","5bf74993":"TARGET = \"Class\"\nSEED = 2021\nVAL_SET_SIZE = 0.25\n\nCRITERIA = \"auc\"\n\nMODEL_NAME = \"lightgbm\"\nDATA_PATH = \"..\/input\/creditcardfraud\/creditcard.csv\"\n\ndef getLabelCount(df,target):\n    return sorted([( labelValue,len(df.loc[df[target] == labelValue]) ) for labelValue in df[target].unique()])","5c823bfd":"df= pd.read_csv(DATA_PATH)","0f5caca7":"df.head()","1b4c261d":"df.columns","c7d0bbca":"getLabelCount(df,TARGET)","e9fcfe9d":"X = df.drop([TARGET],axis = 1)\ny = df[TARGET]","7d281ec1":"X_train, X_val, y_train, y_val = train_test_split(X,y,test_size=VAL_SET_SIZE,random_state=SEED)","eaa26fc8":"smote = SMOTETomek(random_state=SEED)\nX_train_over,y_train_over = smote.fit_resample(X_train,y_train)","eeb1bad0":"pd.Series(y_train_over).value_counts()","7b409212":"df = X_train_over\ndf[TARGET] = y_train_over","4aae62a6":"getLabelCount(df,TARGET)","79ca5b99":"clf1 = setup(data = df, \n             silent=True,\n             target = TARGET, \n             fix_imbalance = True,\n             fix_imbalance_method=smote\n            )","70ff2a70":"model = create_model(MODEL_NAME,fold=2)","0ac13bcb":"df_credit_after_create = predict_model(model)\ndf_credit_after_create.head()","b98784cd":"tuneModel = tune_model(model,optimize = CRITERIA,fold =2)","64650c96":"df_credit_after_tune = predict_model(tuneModel)\ndf_credit_after_tune.head()","97f97871":"finalModel = finalize_model(tuneModel)","219146f9":"df_credit_after_final = predict_model(finalModel)\ndf_credit_after_final.head()","c3fcf01f":"# create model","4d1528a2":"### balanced label count ","9b6d5e41":"# tune model ","325390cd":"# target balancing ","151f24ac":"# finalize model","2d250fd2":"### unbalanced target count ","636c5a6f":"# init pycaret"}}