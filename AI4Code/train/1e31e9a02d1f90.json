{"cell_type":{"7ba62993":"code","ca59bffe":"code","97ec633e":"code","ffd9ef86":"code","3f011f17":"code","3eac9f20":"code","69d8c579":"code","45a3c426":"code","fbbc0868":"code","9a151f1e":"code","7005dd68":"code","246a1dda":"code","00ac993b":"code","7c5834f0":"code","facb77ce":"code","438c3aeb":"code","746d0637":"code","5b7407b8":"code","0f7661b0":"code","d4a86835":"code","a9c337f3":"code","0521b9e0":"code","667ac9b8":"code","b66eb474":"code","b81fa1b8":"code","42350c40":"code","ad1b1764":"code","e24c9ca7":"code","0c0e68a4":"code","0e91429a":"code","b27a7b01":"code","75ee3426":"code","14912374":"code","60482e6b":"code","2b837146":"code","877a7c86":"code","13810814":"code","4cdbc987":"markdown","d973db12":"markdown","21b4a8b8":"markdown","1577258b":"markdown","32e88f72":"markdown","069a0f82":"markdown","e2d4adad":"markdown","c61c8457":"markdown","66b82ecf":"markdown","e79ae924":"markdown","fe0468e1":"markdown","dd6e135c":"markdown","2a5017c9":"markdown","5f197912":"markdown","6b4cfe56":"markdown","28caa28f":"markdown"},"source":{"7ba62993":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the ","ca59bffe":"import warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(\"ignore\")","97ec633e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score","ffd9ef86":"bank_df=pd.read_excel(\"\/kaggle\/input\/bank-loan-modelling\/Bank_Personal_Loan_Modelling.xlsx\",'Data')\nbank_df.head()","3f011f17":"bank_df.shape","3eac9f20":"bank_df.info()","69d8c579":"bank_df.describe()","45a3c426":"bank_df.columns","fbbc0868":"bank_df.isnull().sum()","9a151f1e":"categorical=[col for col in bank_df.columns if bank_df[col].nunique()<=5]\ncontinous=[col for col in bank_df.columns if bank_df[col].nunique()>5]\nprint(categorical)\nprint(continous)","7005dd68":"categorical.remove(\"Personal Loan\")\ncontinous.remove(\"ID\")\nprint(categorical)\nprint(continous)","246a1dda":"fig=plt.figure(figsize=(20,10))\nfor i,col in enumerate(continous):\n    ax=fig.add_subplot(2,3,i+1)\n    sns.distplot(bank_df[col])","00ac993b":"fig=plt.figure(figsize=(20,10))\nfor i,col in enumerate(categorical):\n    ax=fig.add_subplot(2,3,i+1)\n    sns.countplot(bank_df[col])","7c5834f0":"sns.pairplot(bank_df,\n    x_vars=['Age', 'Experience', 'Income', 'ZIP Code', 'CCAvg', 'Mortgage'],\n    y_vars=['Age', 'Experience', 'Income', 'ZIP Code', 'CCAvg', 'Mortgage'],\n             diag_kind=\"kde\",hue=\"Personal Loan\")\nplt.show()","facb77ce":"bank_df.drop_duplicates(inplace=True)","438c3aeb":"bank_df.shape","746d0637":"bank_df.set_index(\"ID\",inplace=True)","5b7407b8":"bank_df.head()","0f7661b0":"bank_df.drop(\"ZIP Code\",axis=1,inplace=True)","d4a86835":"corr=bank_df.corr()\nplt.figure(figsize=(10,10))\nplt.title('Correlation')\nax=sns.heatmap(corr, annot=True, square=True)\nbottom, top = ax.get_ylim()\nax.set_ylim(bottom + 0.5, top - 0.5)","a9c337f3":"bank_df.drop('Experience',axis=1,inplace=True)","0521b9e0":"bank_df['Extra_serv']=bank_df['Online']+bank_df['CreditCard']","667ac9b8":"bank_df[['Extra_serv','Online','CreditCard','Personal Loan']].corr()","b66eb474":"bank_df.drop(['Online','CreditCard'],axis=1,inplace=True)","b81fa1b8":"bank_df.head()","42350c40":"X = bank_df.drop('Personal Loan', axis=1)\ny = bank_df['Personal Loan']","ad1b1764":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=100)","e24c9ca7":"X_train.head()","0c0e68a4":"scaler=StandardScaler()","0e91429a":"X_train[['Age','Income','Family','CCAvg','Education','Mortgage','Extra_serv']]=scaler.fit_transform(X_train[['Age','Income','Family','CCAvg','Education','Mortgage','Extra_serv']])\nX_train.head()","b27a7b01":"X_test[['Age','Income','Family','CCAvg','Education','Mortgage','Extra_serv']]=scaler.fit_transform(X_test[['Age','Income','Family','CCAvg','Education','Mortgage','Extra_serv']])\nX_test.head()","75ee3426":"dt = DecisionTreeClassifier()\ndt.fit(X_train, y_train)","14912374":"y_train_pred = dt.predict(X_train)\ny_test_pred = dt.predict(X_test)","60482e6b":"tree_score=f1_score(y_test,y_test_pred)\ntree_score","2b837146":"print(accuracy_score(y_train, y_train_pred))\nconfusion_matrix(y_train, y_train_pred)","877a7c86":"print(accuracy_score(y_test, y_test_pred))\nconfusion_matrix(y_test, y_test_pred)","13810814":"print(classification_report(y_test,y_test_pred))","4cdbc987":"# Train Test split","d973db12":"# Understanding and Reading Data","21b4a8b8":"# Data Preparation","1577258b":"Means no duplicates","32e88f72":"Most people are Ungrad\n\nmost people does not have securities account\n\nmost people does not have CD account\n\nmost people use Internet banking\n\nmost people does not have credit card","069a0f82":"# Decision Tree Classifier","e2d4adad":"**Thank You for Reading :)**\n\n**Comments and Suggestions are welcome :)**\n\n","c61c8457":"# Scaling","66b82ecf":"1. ID: Customer ID\n2. Age: Customer's age in completed years\n3. Experience: #years of professional experience\n4. Income: Annual income of the customer\n5. ZIP Code: Home Address ZIP code.\n6. Family: Family size of the customer\n7. CCAvg: Avg. spending on credit cards per month\n8. Education: Education Level. 1: Undergrad; 2: Graduate; 3:Advanced\/Professional\n9. Mortgage: Value of house mortgage if any.\n10. Personal Loan: Did this customer accept the personal loan offered in the last campaign?\n11. Securities Account: Does the customer have a securities account with the bank?\n12. CD Account: Does the customer have a certificate of deposit (CD) account with the bank?\n13. Online: Does the customer use internet banking facilities?\n14. Credit card: Does the customer use a credit card issued by the bank?","e79ae924":"# Data Cleaning","fe0468e1":"We will drop Experience","dd6e135c":"# Data Visulization","2a5017c9":"'CCAvg' Seems good feature for performing classification.","5f197912":"### Distplot","6b4cfe56":"So Mortgage has maximum values as 0\n\nZIP Code is of some particular area.\n\nExpirence and Age are uniformly distributed.","28caa28f":"### Countplot"}}