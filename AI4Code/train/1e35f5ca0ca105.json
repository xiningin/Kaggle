{"cell_type":{"c18d6d83":"code","8db1454b":"code","e2d32d8f":"code","4c33900e":"code","6fcfc570":"markdown","db1ab1ff":"markdown"},"source":{"c18d6d83":"import re\nimport numpy as np\nimport pandas as pd\nfrom sklearn.base import BaseEstimator, ClassifierMixin","8db1454b":"class womenChildrenSurvive(BaseEstimator, ClassifierMixin):\n    \"\"\" Custom classifier predicting all women\n        and children survive and all men die\"\"\"\n\n    def predict(self, X):\n        X = X.copy()\n        X['Title'] = X['Name'].apply(self._getTitle)\n        return np.array(X.apply(self._rule, axis=1))\n    \n    def _rule(self, X):\n        \"\"\" Decision rules to predict survival \"\"\"\n        if (X['Sex'] == 'female') | (X['Title'] == 'Master'):\n            return 1\n        else:\n            return 0\n        \n    def _getTitle(self, x):\n        \"\"\" Extract Title from Name \"\"\"\n        return re.split(',|\\.', x)[1].strip()","e2d32d8f":"# Define paths to test and training data\ntrainPath = '\/kaggle\/input\/titanic\/train.csv'\ntestPath = '\/kaggle\/input\/titanic\/test.csv'\ntarget = 'Survived'\nindex = 'PassengerId'\n\n# Read training data\nX = pd.read_csv(trainPath, index_col=index)\n# Drop target from X and save to seperate variable\ny = X.pop(target)\n\n# Initalise Estimator and score training data\nmodel = womenChildrenSurvive()\nprint(f'Training Score: {model.score(X, y):3.3%}')","4c33900e":"# Read test data\ntest = pd.read_csv(testPath, index_col=index)\n# Make predictions and submit\npredictions = model.predict(test)\nsubmission = pd.DataFrame(\n    {'PassengerID': test.index, 'Survived': predictions})\nsubmission.to_csv('submission.csv', index=False)","6fcfc570":"# Predictions without Machine Learning\n - I wrote this barebones kernel to illustrate, using a simple example, how we can build a custom scikit-learn Estimator class.\n   - Building a custom Estimator may be overkill for an example like this but the principals can be extended to much more complex models.\n   - It is also a very clean way to encapsulate our code.\n   - Since we inherit from BaseEstimator and ClassifierMixin, we can use it just like any other Estimator and we get the .score() method for free.\n - In this example I use a simple rule to predict survival.\n   - **All women and children survive, all others perish.**\n - Women and children can be identified using just Sex and Name, since boys are given the title 'Master'.","db1ab1ff":"## Custom Estimator\n  - Barebones example of a custom Estimator class with hard-coded rules to predict survival.\n  - We don't need a *.fit()* method (since there is no training of data).\n  - The methods *._rule()* and *._getTitle()* are split from *.predict()* to improve readability."}}