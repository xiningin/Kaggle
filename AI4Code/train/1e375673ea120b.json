{"cell_type":{"db3e03eb":"code","0c8e2ca0":"code","c61619d2":"code","555171cb":"code","e9e87a85":"code","3b2192e1":"code","0f3cd24e":"code","ccf7fe35":"code","defde6de":"code","c58afd43":"code","fad74466":"code","0b5dde80":"code","7fcc9d72":"code","eb0df807":"markdown","2a5645e9":"markdown","7e39b2c6":"markdown","8d63a199":"markdown","a8eb4469":"markdown","f78de121":"markdown","d4617dba":"markdown","40401f9e":"markdown","a2932144":"markdown","11279fcc":"markdown","9392c37a":"markdown","52a17003":"markdown","7d878200":"markdown","4b40c919":"markdown","b3212a2b":"markdown","e328cc25":"markdown","b89cc32c":"markdown","857efecd":"markdown","d9f323a3":"markdown","457a0575":"markdown","cc6727a5":"markdown","7d3db0ec":"markdown","f0196c6d":"markdown","0c18fe24":"markdown","7b22d5f7":"markdown","8183f257":"markdown","c7ce7432":"markdown","74cc1ad0":"markdown"},"source":{"db3e03eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c8e2ca0":"import pandas as pd\nimport numpy as np\nimport random\nimport matplotlib.pyplot as plt\ntrain=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\nplt.style.use('dark_background')\nplt.figure(figsize=(10,7))\nplt.scatter(train[\"PassengerId\"].head(),train[\"PassengerId\"].head())\nfor x,y in zip(train[\"PassengerId\"].head(),train[\"PassengerId\"].head()):\n    plt.text(x-0.2,y+0.1,(x,y))\nplt.title(\"Positive Correlation\",fontdict={\"fontsize\":30})\nplt.xlabel(\"variable1\",fontdict={\"fontsize\":20})\nplt.ylabel(\"variable2\",fontdict={\"fontsize\":20})\nplt.grid(color=\"white\",axis=\"y\")\nplt.tight_layout()\nplt.show()","c61619d2":"train.columns","555171cb":"data=pd.DataFrame({\"variable1\":[i for i in range(5)],\"variable2\":sorted([i for i in range(5)],reverse=True)})\nplt.figure(figsize=(15,7))\nplt.scatter(data[\"variable1\"],data[\"variable2\"])\nfor x,y in zip([i for i in range(5)],sorted([i for i in range(5)],reverse=True)):\n    plt.text(x+0.1,y+0.1,(x,y))\nplt.title(\"Negatively Correlation\",fontdict={\"fontsize\":50})\nplt.xlabel(\"variable1\",fontdict={\"fontsize\":20})\nplt.ylabel(\"variable2\",fontdict={\"fontsize\":20})\nplt.margins(0.2)\nplt.tight_layout()\nplt.grid(color=\"white\",axis=\"y\")\nplt.show()","e9e87a85":"x=[random.randint(0,22) for i in range(5)]\ny=[random.randint(0,22) for i in range(5)]\ndata=pd.DataFrame({\"variable1\":x,\"variable2\":y})\nplt.figure(figsize=(15,7))\nplt.scatter(data[\"variable1\"],data[\"variable2\"])\nplt.title(\"Non-linear\/No correlation\",fontdict={\"fontsize\":50})\nplt.xlabel(\"variable1\",fontdict={\"fontsize\":20})\nplt.ylabel(\"variable2\",fontdict={\"fontsize\":20})\nfor x,y in zip(x,y):\n    plt.text(x+0.2,y+0.2,(x,y))\nplt.grid(axis=\"y\",color=\"white\")\nplt.margins(0.2)\nplt.tight_layout()\nplt.show()","3b2192e1":"data=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\nimport pandas as pd\nplt.figure(figsize=(15,8))\nplt.scatter(x=data[\"Age\"].head(20),y=data[\"Pclass\"].head(20),marker=\"*\",label=\"Title 1\",color=\"r\")\nplt.text(data[\"Age\"].head(20).mean(),data[\"Pclass\"].head(20).mean(),\"Age vs Pclass\",fontdict={\"fontsize\":20})\nx=[i for i in range(20)]\ny=[random.randint(0,22) for i in range(20)]\nplt.scatter(x,y,marker=\".\",label=\"Title 2\",color=\"yellow\")\nplt.text(pd.DataFrame(x).mean(),pd.DataFrame(y).mean(),\"random number\",fontdict={\"fontsize\":20})\nplt.title(\"TWO CATEGORY OF DATA\",fontdict={\"fontsize\":30})\nplt.xlabel(\"AGE\",fontdict={\"fontsize\":20})\nplt.ylabel(\"Pclass\",fontdict={\"fontsize\":20})\nplt.legend()\nplt.tight_layout()\nplt.margins(0.2)\nplt.show()","0f3cd24e":"plt.figure(figsize=(15,7))\nplt.scatter(x=data[\"Age\"].head(20),y=data[\"Pclass\"].head(20),c=\"g\",cmap=\"Greens\",alpha=0.75)\ncbar =plt.colorbar()\nplt.title(\"USE COLORBAR TO DIFFERENTIATE\",fontdict={\"fontsize\":30})\nplt.xlabel(\"AGE\",fontdict={\"fontsize\":20})\nplt.ylabel(\"Pclass\",fontdict={\"fontsize\":20})\nplt.margins(0.2)\nplt.tight_layout()\nplt.show()","ccf7fe35":"x = [3, 1, 3] \ny = [3, 2, 1] \nx1 = [2, 4, 6, 8]\ny1 = [3, 5, 7, 9]\nplt.figure(figsize=(15,8))\nplt.fill_between(x, y, color='green', alpha=0.5)\nplt.plot(x, y,linewidth=10)\nplt.plot(x1, y1, '-.')\nplt.xlabel(\"X-axis\",fontdict={\"fontsize\":20})  \nplt.ylabel(\"Y-axis\",fontdict={\"fontsize\":20})  \nplt.title(\"Any suitable title\",fontdict={\"fontsize\":30})\nplt.legend([\"Line\"])\nplt.grid(axis=\"y\")\nplt.tight_layout()\nplt.show()","defde6de":"x = ['A', 'B', 'C', 'D']\ny1 = [10, 20, 10, 30]\ny2 = [20, 25, 15, 25]\nplt.figure(figsize=(15,8))\nplt.bar(x, y1, color='r',zorder=3)\nplt.bar(x, y2, bottom=y1, color='b',zorder=3)\nplt.title(\"Stacked Bar Chart\",fontdict={\"fontsize\":30})\nplt.xlabel(\"X\",fontdict={\"fontsize\":20})\nplt.ylabel(\"Y\",fontdict={\"fontsize\":20})\nplt.grid()\nplt.legend([\"X,Y1\",\"X,Y2\"])\nplt.show()","c58afd43":"x = [1, 2, 3, 4, 5, 6, 7, 4] \nplt.figure(figsize=(15,8))\nplt.hist(x, bins = [1, 2, 3, 4, 5, 6, 7],zorder=3)\nplt.title(\"Histogram\",fontdict={\"fontsize\":30})\nplt.xlabel(\"BINS\",fontdict={\"fontsize\":20})\nplt.ylabel(\"VALUES\",fontdict={\"fontsize\":20})\nplt.grid(axis=\"y\")\nplt.legend()\nplt.show()","fad74466":"series1 = np.random.randn(500, 1)\nseries2 = np.random.randn(400, 1)\nplt.figure(figsize=(15,9))\nplt.hist(series1,zorder=3)\nplt.hist(series2,zorder=3)\nplt.title(\"Combined Graph\",fontdict={\"fontsize\":30})\nplt.grid()\nplt.xlabel(\"Bins\",fontdict={\"fontsize\":20})\nplt.ylabel(\"VALUES\",fontdict={\"fontsize\":20})\nplt.show()","0b5dde80":"x = [1, 2, 3, 4] \ne  =(0.1, 0, 0, 0)\nplt.figure(figsize=(15,10))\nplt.pie(x, explode = e,labels=[\"A\",\"B\",\"C\",\"D\"],colors=[\"r\",\"g\",\"y\",\"b\"],autopct='%1.1f%%', shadow=True)\nplt.title(\"Pie chart\",fontdict={\"fontsize\":30})\nplt.margins(0.2)\nplt.axis(\"equal\")\nplt.show()","7fcc9d72":"size = 6\ncars = ['AUDI', 'BMW', 'FORD', \n        'TESLA', 'JAGUAR', 'MERCEDES']\n  \ndata = np.array([[23, 16], [17, 23],\n                 [35, 11], [29, 33],\n                 [12, 27], [41, 42]])\n  \n# normalizing data to 2 pi\nnorm = data \/ np.sum(data)*2 * np.pi\n  \n# obtaining ordinates of bar edges\nleft = np.cumsum(np.append(0, \n                           norm.flatten()[:-1])).reshape(data.shape)\n  \n# Creating color scale\ncmap = plt.get_cmap(\"tab20c\")\nouter_colors = cmap(np.arange(6)*4)\ninner_colors = cmap(np.array([1, 2, 5, 6, 9,\n                              10, 12, 13, 15,\n                              17, 18, 20 ]))\n  \n# Creating plot\nfig, ax = plt.subplots(figsize =(10, 7),\n                       subplot_kw = dict(polar = True))\n  \nax.bar(x = left[:, 0],\n       width = norm.sum(axis = 1),\n       bottom = 1-size,\n       height = size,\n       color = outer_colors, \n       edgecolor ='w',\n       linewidth = 1,\n       align =\"edge\")\n  \nax.bar(x = left.flatten(),\n       width = norm.flatten(),\n       bottom = 1-2 * size,\n       height = size,\n       color = inner_colors,\n       edgecolor ='w',\n       linewidth = 1,\n       align =\"edge\")\n  \nax.set(title =\"Nested pie chart\")\nax.set_axis_off()\n  \n# show plot\nplt.show()","eb0df807":"#TIPS<br>\ny-axis should start with 0 value\nChoose interpretable bin boundaries","2a5645e9":"<a id=\"bar_plot\"><\/a>\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nBar Plot<\/h1>\n<\/div>","7e39b2c6":"#DO","8d63a199":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nTypes of Plotting \n<\/h1>\n<\/div>","a8eb4469":"#Do\u2019s\n* Start the y-axis at zero \u2013 Our eyes are sensitive to the area of bars on a chart. If those bars are truncated, the viewer might draw the wrong conclusions.\n* Label the axes \u2013 Labeling the axes gives your viewer context.\n* Put value labels on bars \u2013 This helps to preserve the clean lines of the bar lengths\n#Don\u2019ts:\n* Use too many colors \u2013 Avoid the \u2018rainbow effect.\u2019 Using a single color, or varying shades of the same color, is a much better practice. You can highlight one bar in particular if that is the message you wan\u2019t to get across.\n* Use 3-D imagery or distracting visuals \u2013 Adding unnecessary visuals can make your chart hard to read and a bit of an eye-sore.","f78de121":"<\/div>*  positive or negative, <br>\n*  strong (data present closely) or weak (data present with minimum distance), <br>\n*  linear or nonlinear<br>\n<b>NOTE :<\/b> The data present in graph with any  combination  of relationship \n","d4617dba":"Matplotlib is an amazing visualization library in Python for 2D plots of arrays. Matplotlib is a multi-platform data visualization library built on NumPy arrays and designed to work with the broader SciPy stack. It was introduced by John Hunter in the year 2002.\n\nOne of the greatest benefits of visualization is that it allows us visual access to huge amounts of data in easily digestible visuals. Matplotlib consists of several plots like line, bar, scatter, histogram etc.","40401f9e":"<a id=\"scatter_plot1\"><\/a>\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nScatter plot\n<\/h1>\n","a2932144":"# DATA IN GRAPH\nThe points or dots on the graph represents the x,y coordinates or ordered pairs.\n\n#Do\u2019s:\n* Start the x-axis at zero \u2013 Otherwise your viewer might draw inaccurate conclusion.\n* Clearly label your axes \u2013 Make sure the viewer knows what they are evaluating.\n* Remove distracting chart elements \u2013 Grids, varying colors, and bulky legends can distract the viewer from quickly seeing the overall trend.\n* Zoom in on the y-axis if your data set starts above zero \u2013 In certain cases, changing the scale of the y-axis makes it easier for the viewer to see the trend and explore the data closer.\n\n#Don\u2019ts:\n* Compare more than 5-7 lines \u2013 You don\u2019t want your chart to become cluttered or hard to read. Visualize the data you need to tell your story, nothing more.\n* Use too many colors to distinguish the different data sets \u2013 Less is more.Try to use color to highlight one specific point","11279fcc":"A bar chart describes the comparisons between the discrete categories.","9392c37a":"![best-python-data-visualization-tutorial-seaborn.jpg](attachment:3621b3e6-5dcb-42df-a0a9-8d9dbb1304cb.jpg)","52a17003":"<a id=\"pie_plot\"><\/a>\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nPie Plot<\/h1>\n<\/div>","7d878200":"\n* It is a type of bar plot where the X-axis represents the bin ranges while the Y-axis gives information about frequency.\n* represent whether the distribution is skewed or symmetric, and if there are any outliers.<br>\nPositive SKEW =  mode < median < mean <br>\nNegative SkEW =  mode > median > mean","4b40c919":"#Do\u2019s:<br>\n* Use scatter plots when you have a lot of data \u2013 Scatter plots lend themselves to large data sets.\n* Use regression lines to guess Y if you have X \u2013 Helpful when estimating certain unknown data points.\n* Start the Y-axis at 0 \u2013 If you set the Y-axis above 0 it skews the way your graph looks, and your data won\u2019t be presented accurately\n#Don\u2019ts<br>\n* Compare too many regression lines \u2013 A scatter plot can get messy if you try to compare too many relationships\/trends.\n* Exclude outliers \u2013 Outliers may feel like they aren\u2019t adding to your story, but they are still an important part of the data set. They are useful when trying to fully understand the distribution of your data.","b3212a2b":"Line Chart is used to represent a relationship between two data X and Y on a different axis","e328cc25":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nMatplotlib Plotting Tutorial\n<\/h1>\n<\/div>\n","b89cc32c":"*  Compare too many categories \u2013 Nobody likes a messy pie chart. Too many segments makes your pie chart almost impossible to read and doesn\u2019t do your data any justice.\n*  Use a pie chart if your segments end up being roughly the same size \u2013 This means your data is too hard to distinguish. Use a bar or column chart instead.\n*  Compare two pie charts side by side \u2013 A line or area chart would work better.\n*  Use 3-D imagery or tilt your pie chart \u2013 This often makes your data impossible to read, because your viewer is trying to quickly compare angles","857efecd":"**we observe a relationship between two variables in a scatter plot, it does not mean that changes in one variable are responsible for changes in the other. This gives rise to the common phrase in statistics that correlation does not imply causation. It is possible that the observed relationship is driven by some third variable that affects both of the plotted variables, that the causal link is reversed, or that the pattern is simply coincidental.<br>\n#Disadvantage<br>\n       when your data present too much it overlay with other data","d9f323a3":"#Don\u2019ts <br>\nUsing unequal bin sizes","457a0575":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nInterpreting correlation as causation\n<\/h1>\n<\/div>","cc6727a5":"\n  ![images (1).jpg](attachment:2adf081f-1f01-4b70-b4ee-1a2d19dce7a1.jpg)\n","7d3db0ec":"\n* [1.SCATTER PLOT](#scatter_plot1)\n* [2.LINE PLOT](#line_plot)\n* [3.BAR PLOT](#bar_plot)\n* [4.HISTOGRAM PLOT](#histogram_plot)\n* [5.PIE PLOT](#pie_plot)","f0196c6d":"*  Make sure your segments add up to 100 \u2013 Sounds obvious, but this is a common mistake.\n*  Use when comparing percentages people are familiar with \u2013 25%, 75%, 100%.\n*  Keep it clean and consistent \u2013 Compare just a few categories to get your point across.","0c18fe24":"<a id=\"histogram_plot\"><\/a>\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nHistogram Plot<\/h1>\n<\/div>\n","7b22d5f7":"A Pie Chart is a circular statistical plot that can display only one series of data. The area of the chart is the total percentage of the given data","8183f257":"#Don\u2019ts","c7ce7432":"<a id=\"line_plot\"><\/a>\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nLine Plot\n<\/h1>\n<\/div>","74cc1ad0":"<\/div>\n* Scatter plots are used to observe relationships between variables.<br>\n* scatter plot not only report the values of individual data points, but also patterns when the data are taken as a whole\n\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nTypes of Relationship\n    <\/h1>\n"}}