{"cell_type":{"20b1bff1":"code","34860ac9":"code","237f44d4":"code","4adc3120":"code","86188a27":"code","431bcdae":"code","6ea96bf0":"code","9ca86dea":"code","328c6c59":"code","42c9ce90":"code","78552dd9":"code","fdb2e369":"code","14bc4f9f":"code","1dd2401c":"code","74b76d70":"code","24c4d5d9":"code","8d1afc89":"code","07158335":"code","385d32e9":"code","cc4169c6":"code","ebc255fa":"code","788b20aa":"code","6622fffa":"code","fc7c1300":"code","74fc859b":"code","35634360":"code","08efcb8e":"code","5b8a060a":"code","38ea6697":"code","f3f5029e":"code","01615413":"code","f290a471":"code","91996b66":"code","5e49d4ac":"code","035a77d2":"code","7440b1d7":"code","fa04820e":"code","c3dbc838":"code","ffe75452":"code","9209a7c3":"code","d03e0e1d":"code","4fb03534":"code","2eae04f8":"code","9a21e33f":"code","4b34f01a":"code","7ca3010a":"code","437721af":"code","19ed673d":"code","2dcfacf0":"code","6a7b52c2":"code","a58530d3":"code","3b920372":"code","44ec8855":"code","8e9510ac":"code","e2470561":"code","7801894d":"code","f874089f":"code","81e45209":"markdown","ab7b383a":"markdown","2668e40c":"markdown","ce625abc":"markdown","d851fc14":"markdown","f9139805":"markdown","1a603a9b":"markdown","e783416e":"markdown","ca1f2f06":"markdown","0e2b99a3":"markdown"},"source":{"20b1bff1":"# importing the required libraries\nimport pandas as pd\n\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as pyo\nfrom plotly.offline import init_notebook_mode,iplot\nimport cufflinks as cf\nimport numpy as np\n\n# Manipulating the default plot size\n#plt.rcParams['figure.figsize'] = 10, 12\nplt.rcParams['figure.figsize']=25,18\n# Disable warnings \nimport warnings\nwarnings.filterwarnings('ignore')","34860ac9":"pyo.init_notebook_mode(connected=True)\ncf.go_offline()","237f44d4":"df=pd.read_csv(\"..\/input\/covid-19-data\/covid_19_data.csv\")\ndf","4adc3120":"df.head()","86188a27":"df.shape","431bcdae":"df.rename(columns = {'Country\/Region':'Country'}, inplace=True)","6ea96bf0":"df.head()","9ca86dea":"df.rename(columns={'Province\/State':'State'}, inplace = True)","328c6c59":"df.tail()","42c9ce90":"df.info()","78552dd9":"df.isnull().sum()","fdb2e369":"## for normalizing data from e+05 to normal form\n\npd.options.display.float_format ='{:.2f}'.format ","14bc4f9f":"df.describe()","1dd2401c":"#df.style.background_gradient(cmap='Reds')","74b76d70":"death =df.groupby('ObservationDate').sum()['Deaths'].reset_index()\ndeath","24c4d5d9":"recovered = df.groupby('ObservationDate').sum()['Recovered'].reset_index()\nrecovered","8d1afc89":"confirmed = df.groupby('ObservationDate').sum()['Confirmed'].reset_index()\nconfirmed","07158335":"confirmed.plot(kind ='bar',x ='ObservationDate',y ='Confirmed')\nplt.show()","385d32e9":"#Pandas vis\n\nconfirmed.plot(kind ='bar',x ='ObservationDate',y ='Confirmed')\nplt.show()","cc4169c6":"sns.barplot(x =confirmed['ObservationDate'],y=confirmed['Confirmed'])","ebc255fa":"#seaborn\nsns.barplot(x =confirmed['ObservationDate'],y=confirmed['Confirmed'])","788b20aa":"#plotly\n\nconfirmed.iplot(kind='bar',x='ObservationDate',y='Confirmed',xTitle='ObservationDate',yTitle=\"Confirmed\")","6622fffa":"death.iplot(kind='bar',x='ObservationDate',y='Deaths',xTitle='ObservationDate',yTitle=\"Deaths\")","fc7c1300":"recovered.iplot(kind='bar',x='ObservationDate',y='Recovered',xTitle='ObservationDate',yTitle=\"Recovered\")","74fc859b":"from fbprophet import Prophet","35634360":"death =df.groupby('ObservationDate').sum()['Deaths'].reset_index()\ndeath","08efcb8e":"confirmed.head()","5b8a060a":"confirmed.tail()","38ea6697":"recovered = df.groupby('ObservationDate').sum()['Recovered'].reset_index()\nrecovered","f3f5029e":"recovered.head()","01615413":"recovered.tail()","f290a471":"death =df.groupby('ObservationDate').sum()['Deaths'].reset_index()\ndeath","91996b66":"death.head()","5e49d4ac":"death.tail()","035a77d2":"#confirmed['ds'] = confirmed['ds'].dt.date #yy-mm-date\nconfirmed.columns = ['ds','y']\nconfirmed","7440b1d7":"confirmed['ds'] = pd.to_datetime(confirmed['ds'])\nconfirmed","fa04820e":"confirmed.tail()","c3dbc838":"pd.set_option('display.max.rows',None)\npd.set_option('display.float_format', lambda x: '%.3f' % x)","ffe75452":"m = Prophet(interval_width=0.95)\nm.fit(confirmed)\nfuture = m.make_future_dataframe(periods=20)","9209a7c3":"future.tail(15)","d03e0e1d":"#predicting the future with date, and upper and lower limit of y value\nforecast = m.predict(future)","4fb03534":"forecast.tail(100)","2eae04f8":"forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(140)","9a21e33f":"confirmed_forecast_plot = m.plot(forecast)","4b34f01a":"confirmed_forecast_plot= m.plot_components(forecast)","7ca3010a":"death.columns = ['ds','y']\ndeath['ds'] = pd.to_datetime(death['ds'])","437721af":"m = Prophet(interval_width=0.95)\nm.fit(death)\nfuture = m.make_future_dataframe(periods=131)\nfuture.tail(30)","19ed673d":"forecast = m.predict(future)","2dcfacf0":"forecast","6a7b52c2":"forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(140)","a58530d3":"death_forecast_plot = m.plot(forecast)","3b920372":"death_forecast_plot = m.plot_components(forecast)","44ec8855":"recovered.columns = ['ds','y']\nrecovered['ds'] = pd.to_datetime(recovered['ds'])","8e9510ac":"m = Prophet(interval_width=0.95)\nm.fit(recovered)\nfuture = m.make_future_dataframe(periods=131)\nfuture.tail(20)","e2470561":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(140)","7801894d":"recovered_forecast_plot = m.plot(forecast)","f874089f":"recovered_forecasting_plot = m.plot_components(forecast)","81e45209":"## 4.3 Forecasting Worldwide Recovered Cases with Prophet (Base model)\n\nGenerating a week ahead forecast of confirmed cases of NCOVID-19 using Prophet, with 95% prediction interval by creating a base model with no tweaking of seasonality-related parameters and additional regressors.","ab7b383a":" ### 4.1 Forecasting Confirmed NCOVID-19 Cases Worldwide with Prophet (Base model)\n \n Generating a week ahead forecast of confirmed cases of NCOVID-19 using Prophet, with 95% prediction interval by creating a base model with no tweaking of seasonality-related parameters and additional regressors.","2668e40c":"The input to Prophet is always a dataframe with two columns: ds and y. The ds (datestamp) column should be of a format expected by Pandas, ideally YYYY-MM-DD for a date or YYYY-MM-DD HH:MM:SS for a timestamp. The y column must be numeric, and represents the measurement we wish to forecast.","ce625abc":"# prediction of deaths","d851fc14":"# DATA ANALYSIS","f9139805":"# DATA VISUALIZATION","1a603a9b":"The predict method will assign each row in future a predicted value which it names yhat. If you pass in historical dates, it will provide an in-sample fit. The forecast object here is a new dataframe that includes a column yhat with the forecast, as well as columns for components and uncertainty intervals.","e783416e":"# Reading the datasets","ca1f2f06":"# Making the Prediction using FB Prophet","0e2b99a3":"You can plot the forecast by calling the Prophet.plot method and passing in your forecast dataframe."}}