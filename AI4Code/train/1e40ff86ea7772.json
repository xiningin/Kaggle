{"cell_type":{"b8abca0b":"code","edd36f59":"code","c7471cec":"code","29041114":"code","e1a31ba7":"code","e56a70ce":"code","5265873f":"code","91405674":"code","185e7ae9":"code","d4993e6b":"markdown","d927d782":"markdown"},"source":{"b8abca0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","edd36f59":"# reading data from dataset\ndf = pd.read_csv(\"..\/input\/mock_bank_data_original_PART1.csv\")\ndf.head(10)","c7471cec":"#  look at the current state of missing values in our dataset\ndf.isnull().sum()\n\n#  checking account balance (\"cheq_balance\")   and savings account balances (\"savings_balance\") \n#  have 23 and 91 missing values, respectively.","29041114":"# Let's compute the mean of cheq_balance by state\n\ndf.groupby(['state']).mean()['cheq_balance']","e1a31ba7":"df.groupby(['state']).mean()['savings_balance']\n","e56a70ce":"# Let's go ahead and fill in these missing values by using the Pandas 'groupby' and 'transform' functionality, along with a lambda function. \n# We then round the result in the line of code beneath.","5265873f":"# Replace cheq_balance NaN with mean cheq_balance of same state\ndf['cheq_balance'] = df.groupby('state').cheq_balance.transform(lambda x: x.fillna(x.mean()))\ndf.cheq_balance = df.cheq_balance.round(2)\ndf.cheq_balance.head()","91405674":"# Replace savings_balance NaN with mean savings_balance of same state\ndf['savings_balance'] = df.groupby('state').savings_balance.transform(lambda x: x.fillna(x.mean()))\ndf.savings_balance = df.savings_balance.round(2)\ndf.savings_balance.head()","185e7ae9":"# Checking the results \ndf.isnull().sum()","d4993e6b":"- It should be clear to see why such group-based imputation is a valid approach to a problem such as this. The mean savings account balance difference between California (\\$9174.56) and New York (\\$10443.61), for example, is nearly \\$1270. Taking an overall mean of \\$9603.64 to fill in missing values would not provide the most accurate picture.","d927d782":"### Group-based Imputation\n\nReference: https:\/\/www.kdnuggets.com\/2017\/09\/python-data-preparation-case-files-group-based-imputation.html\n\nTo learn about GroupBy (Video): https:\/\/www.youtube.com\/watch?v=Wb2Tp35dZ-I"}}