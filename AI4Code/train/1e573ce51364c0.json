{"cell_type":{"ee2259f5":"code","b10a6ea5":"code","104d4cc1":"code","b1d24c41":"code","3430560a":"code","83abd42e":"code","65979467":"code","4c3fe9a1":"code","ff9d6ce4":"code","b05747dc":"code","8964c276":"code","a8040c42":"code","014494f6":"code","52c61384":"code","816c534d":"markdown","a4fd82b2":"markdown","bc912487":"markdown"},"source":{"ee2259f5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport sklearn.metrics as metrics\nimport sklearn.model_selection as ms\nimport tensorflow as tf\nfrom tensorflow import keras\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b10a6ea5":"data = pd.read_csv(r'..\/input\/fetal-health-classification\/fetal_health.csv')\ndata.sample(5)","104d4cc1":"data.isnull().sum()","b1d24c41":"data.info()","3430560a":"data_corr = data.corr()['fetal_health']\ndata_corr.sort_values()","83abd42e":"X = data.copy()\nX.drop('fetal_health', axis=1, inplace=True)\ny = data['fetal_health'].copy()\n","65979467":"X_train_full, X_test, y_train_full, y_test = ms.train_test_split(X, y, stratify=y, random_state=42)\nX_train, X_validation, y_train, y_validation = ms.train_test_split(X_train_full, y_train_full, stratify= y_train_full, random_state=42)","4c3fe9a1":"X_train.shape","ff9d6ce4":"model = keras.models.Sequential([\n                    keras.layers.Input(shape=X_train.shape[1], name='input'),\n                    keras.layers.Dense(250, activation='relu'),\n                    keras.layers.Dense(125, activation='relu'),\n                     keras.layers.Dense(4, activation='softmax', name='output')\n                    ])\n\nmodel.compile(\n            loss='sparse_categorical_crossentropy',\n            optimizer='sgd',\n            metrics= ['accuracy']\n            )\n\nmodel.summary()","b05747dc":"history = model.fit(X_train, y_train, epochs=30, validation_data=(X_validation, y_validation))","8964c276":"metrics_df = pd.DataFrame(history.history)\nmetrics_df.sample()","a8040c42":"print(f'Avg Training Accuracy: {round(metrics_df.accuracy.mean() * 100, 1)}')\nprint(f'Avg Validation Accuracy: {round(metrics_df.val_accuracy.mean() * 100, 1)}')","014494f6":"metrics_df.plot()\nplt.ylim((0,1))","52c61384":"model.evaluate(X_test, y_test)","816c534d":"# Building Neural Network Model","a4fd82b2":"# Performance on Testing Data","bc912487":"# Performance"}}