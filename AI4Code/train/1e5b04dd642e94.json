{"cell_type":{"1577a312":"code","8e51aeb0":"code","59ae2518":"code","e6863ee5":"code","751471df":"code","0c670c80":"code","65a40dd3":"code","0dc1210b":"code","97f640dd":"code","4f7f401e":"code","34677024":"code","988e689a":"code","351c0533":"code","77854933":"code","6ce691cc":"code","de721b19":"code","4776233f":"code","af5c5aae":"code","1a5beb7e":"code","8cc1356b":"code","1277118d":"code","f1fe2848":"code","eca8b8aa":"code","5470d0f5":"code","cbcab0d7":"code","52b888fc":"code","4b44831b":"code","7b0d25af":"code","121b1a6d":"code","17e5d186":"code","50cdbd79":"markdown","1f2e8b11":"markdown","dd59e585":"markdown","dbc86895":"markdown","0c2355e3":"markdown","8b5b8f5f":"markdown","0e824077":"markdown","06818763":"markdown","6b471b68":"markdown","b364d139":"markdown","9a246a9a":"markdown","b78d163e":"markdown","a9e792ab":"markdown","635701c8":"markdown","636d5069":"markdown","8b27125f":"markdown","d69b1c80":"markdown","4a4cf49f":"markdown","8ee0dda0":"markdown","78c9406e":"markdown","0767aa81":"markdown","0bdf7ccd":"markdown","ef8953a9":"markdown","82c0d33a":"markdown","16d522e7":"markdown","61d6e5fa":"markdown","ace8d755":"markdown","e6f4e930":"markdown","d9077003":"markdown","b450c55b":"markdown","d55cceca":"markdown","809e763d":"markdown","219a5c27":"markdown","c334f8eb":"markdown","9e40a2c2":"markdown","5feab0d5":"markdown","4f424133":"markdown","22e2ad03":"markdown","3116d613":"markdown","a2891d41":"markdown","fc2cb0c5":"markdown","c381600b":"markdown"},"source":{"1577a312":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e51aeb0":"dataset = pd.read_csv('\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv')\ndataset.head()","59ae2518":"dataset.shape # in the form of (rows,cols)","e6863ee5":"print (list(dataset.columns))","751471df":"drop_columns = [\"sofifa_id\",\"player_url\",\"dob\",\"long_name\",\"nation_position\",\"loaned_from\",\"nation_jersey_number\"]\ndataset = dataset.drop(drop_columns, axis = 1)","0c670c80":"dataset.columns = [c.replace(' ', '') for c in dataset.columns]","65a40dd3":"dataset.isnull().sum()","0dc1210b":"dataset = dataset.fillna(0)\ndataset.isnull().sum()","97f640dd":"cleaned_dataset = dataset[['short_name', 'age', 'height_cm', 'weight_kg', 'nationality', 'club',\n       'overall', 'potential', 'value_eur', 'wage_eur', 'player_positions',\n       'preferred_foot', 'international_reputation', 'weak_foot',\n       'skill_moves', 'work_rate', 'body_type', 'real_face',\n       'release_clause_eur']]","4f7f401e":"import plotly\nimport plotly.graph_objects as go\nimport plotly.express as px","34677024":"fig = px.histogram(cleaned_dataset['age'], title= \"\ud835\udc03\ud835\udc22\ud835\udc2c\ud835\udc2d\ud835\udc2b\ud835\udc22\ud835\udc1b\ud835\udc2e\ud835\udc2d\ud835\udc22\ud835\udc28\ud835\udc27 \ud835\udc28\ud835\udc1f \ud835\udc00\ud835\udc20\ud835\udc1e \ud835\udc28\ud835\udc1f \ud835\udc0f\ud835\udc25\ud835\udc1a\ud835\udc32\ud835\udc1e\ud835\udc2b\ud835\udc2c\", x=\"age\",barmode=\"group\",nbins = 20,color_discrete_sequence=['green'])\nfig.update_layout(bargap=0.01)\nfig.show()","988e689a":"counts_Nationality = cleaned_dataset[\"nationality\"].value_counts()\ncounts_Nationality = counts_Nationality.reset_index()\ntop10= counts_Nationality.iloc[0:10,:]\nprint(top10)","351c0533":"fig_nations = px.bar(top10, title= \"Top 10 nations\",x=\"index\", y=\"nationality\",labels={\n                     \"index\": \"Nations\",\n                     \"nationality\": \"No. of players\"\n                 })\nfig_nations.show()","77854933":"fig = px.pie(cleaned_dataset.head(50),names='nationality',title='Percentage of Nations of the Top 50 FIFA Players')\nfig.show()","6ce691cc":"fig = px.pie(cleaned_dataset.head(50),names='club',title='Percentage of Clubs among the Top 50 FIFA Players')\nfig.show()","de721b19":"from plotly.subplots import make_subplots\nfig = make_subplots(rows=1, cols=1)\nfig.add_trace(go.Histogram(histfunc=\"count\",  x=cleaned_dataset[\"preferred_foot\"]),row=1, col=1)\nfig.show()\npx.pie(cleaned_dataset,'preferred_foot')","4776233f":"fig = px.bar(cleaned_dataset.head(10), y='potential',x='short_name',color='age',\n             labels={'Overall Rating v Nation of Top 20'}, height=400)\nfig.update_layout(title='Comparison of Potential of Top 10 FIFA Players',xaxis_title='Player Name',yaxis_title='Potential')\nfig.show()","af5c5aae":"repocount = cleaned_dataset[\"international_reputation\"].value_counts()\nrepocount = repocount.reset_index()\nreputation_rankings= repocount.iloc[0:]\nprint(reputation_rankings)","1a5beb7e":"fig_repo = px.bar(reputation_rankings,x=\"index\", y=\"international_reputation\",labels={\n                     \"index\": \"Level\",\n                     \"international_reputation\": \"Numbers\"\n                 },color_discrete_sequence=['chocolate'])\nfig_repo.show()","8cc1356b":"cleaned_dataset.loc[dataset['international_reputation'] == 4].head()","1277118d":"cleaned_dataset.loc[dataset['international_reputation'] == 5].head()","f1fe2848":"overall_wage = cleaned_dataset.groupby(\"nationality\", as_index=False)[\"wage_eur\",\"overall\"].mean()\noverall_wage.sort_values(by=\"wage_eur\",inplace=True,ascending=False)\noverall_wage.head()\ntopwage10 = overall_wage.iloc[0:5,:]\nprint(topwage10)","eca8b8aa":"fig_wage = px.bar(topwage10,y=\"nationality\", x=\"wage_eur\",labels={\n                     \"nationality\": \"Nationality\",\n                     \"wage_eur\": \"Wage\"\n                 },orientation=\"h\",color_discrete_sequence=['turquoise'])\n\nfig_wage.show()","5470d0f5":"cleaned_dataset.sort_values(\"potential\", axis = 0, ascending = False)[['short_name', 'club','potential', 'overall','value_eur']].head(10)","cbcab0d7":"fig = go.Figure(data=go.Scatter(x=cleaned_dataset['overall'],y=cleaned_dataset['value_eur'],mode='markers',marker=dict(size=10,color=cleaned_dataset['age'],showscale=True),text=cleaned_dataset['short_name']))\nfig.update_layout(title='Scatter Plot for Overall Rating v Value in Euros',xaxis_title='Overall Rating',yaxis_title='Value in Euros')\n\nfig.show()","52b888fc":"fig = go.Figure(data=go.Scatter(x=cleaned_dataset['potential'],y=cleaned_dataset['wage_eur'],mode='markers',marker=dict(size=10,color=cleaned_dataset['age'],showscale=True),text=cleaned_dataset['short_name']))\nfig.update_layout(title='Scatter Plot for Potential Rating v Wage in Euros',xaxis_title='Potential Rating',yaxis_title='Wage in Euros')\nfig.show()","4b44831b":"cleaned_dataset['BMI'] = cleaned_dataset['weight_kg'] \/ (cleaned_dataset['height_cm'] \/ 100) ** 2  #Calculating BMI and creating a column.","7b0d25af":"fig = px.histogram(cleaned_dataset['weight_kg'], labels={\n                     \"weight_kg\": \"Weight Distribution\",\n                     \"count\": \"No. of players\"},title= \"Weight Of Players\", x=\"weight_kg\",barmode=\"group\",nbins = 10,color_discrete_sequence=['red'])\nfig.update_layout(bargap=0.01)\nfig.show()","121b1a6d":"fig = go.Figure(data=go.Scatter(x=cleaned_dataset['overall'],y=cleaned_dataset['BMI'],mode='markers',marker=dict(size=10,color=cleaned_dataset['age'],showscale=True),text=cleaned_dataset['short_name']))\nfig.update_layout(title='Scatter Plot for Overall Rating vs BMI of a Player',xaxis_title='Overall Rating',yaxis_title='BMI of a Player')\nfig.show()","17e5d186":"fig = px.scatter_3d(cleaned_dataset.head(10), x='potential', y='overall', z='value_eur',\n              color='short_name')\nfig.update_layout(title='3D Plot of Potential, Overall and Value in Euros of Top 10 FIFA Players')\nfig.show()","50cdbd79":"Now, I will check if the dataset has any null values or not.","1f2e8b11":"Thus, I learned about Exploratory Data Analysis using the FIFA 20 player dataset.\nThis is the end of notebook. Hope you enjoyed it!","dd59e585":"Since we have a few columns like **lb,lcb,etc.**  which have null values, I will fill them with 0 as values, so as the dataset has no null values. ","dbc86895":"Thus, highest number of players are from **France**, followed by **Brazil**.","0c2355e3":"We will now compare players on the basis of their values and potential.","8b5b8f5f":"Thus, **L. Messi** is the highest paid footballer of all time.","0e824077":"We will now see the distribution of weight of players and their BMIs vs their index.","06818763":"Thus, most of the players prefer **right** foot for playing.","6b471b68":"Let's list out the top 10 players by potential.","b364d139":"## Top rated Players by ranking","9a246a9a":"The next thing we will do is finding the total rows and columns. ","b78d163e":"**It might just happen at times that column names might have spaces in it, so we will check and remove these spaces, otherwise it may require special attention.**","a9e792ab":"### Wages and Value of Players","635701c8":"## Preferred Foot","636d5069":"# Conclusion","8b27125f":"## Weight and BMI","d69b1c80":"We will use the FIFA 20 Dataset out of the above given datasets.","4a4cf49f":"Now we will try to drop as many columns as possible which won't be helpful for analysis.","8ee0dda0":"Now we will plot the weight distribution of Players","78c9406e":"Thus, **Neymar Jr.** is the player with the highest value of **105.5M**.","0767aa81":"Now we will list all the columns. Doing so will help us decide which all columns to use and which ones to drop. This is will help us clean the dataset and make it easier for using the dataset by keeping only the relevant data.","0bdf7ccd":"Now, we will check the preferred foot while playing.","ef8953a9":"### Percentages of Nations of top 50 FIFA players","82c0d33a":"Here is a 3D plot comparing Potential, Overall and Value in Euros of Top 10 FIFA Players.","16d522e7":"Thus, we see that the maximum numbers of players are from **England** which are **1667**.","61d6e5fa":"Thus, the player with the highest BMI is **Adebayo Akinfenwa** with a BMI of 34.17","ace8d755":"Finally now that the data is cleaned, I will be using **Plotly** to perform data visualization.","e6f4e930":"### Percentage of Clubs among the top 50 FIFA players","d9077003":"First of all, lets find the age distributions of all the players and also the top 10 nationalities of players.","b450c55b":"I will now be using the columns listed below for performing the EDA.","d55cceca":"Thus, **Manchester City** has the highest representation among the top 50 FIFA players.","809e763d":"Thus, **Dominican Republic** has the highest wage.","219a5c27":"# Reading the Data","c334f8eb":"# Analyzing and Cleaning the Dataset","9e40a2c2":"### International Reputation","5feab0d5":"Thus, most of the players have weight in the range of **70-80** kg.","4f424133":"Graph showing potential of Players.","22e2ad03":"Thus, we see there are **5** reputation rankings.\n\nLet's plot this now.","3116d613":"# 3D Plots","a2891d41":"# Visualizing the Data","fc2cb0c5":"Let us find the top 5 countries by wages.","c381600b":"As the proportion of players who have International Reputation of 4 and 5 is not clear in the graphs, it is because these players are very less in number. Thus, we will see them in the section below."}}