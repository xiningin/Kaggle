{"cell_type":{"4bfa3c23":"code","38ef3352":"code","a30eab97":"code","301280fd":"code","473d0438":"code","d5691c84":"code","cdee3cbf":"code","b712439c":"code","e395be69":"code","714e1f5f":"code","405e4c2a":"code","fc3d54cd":"code","76a21002":"code","5b744523":"code","98cd8f77":"code","3009a326":"code","42f4c1e7":"code","8047e74d":"code","c989c4b7":"code","a013e033":"markdown","bd264e10":"markdown","50a27e5e":"markdown","2ef2fea3":"markdown","cb58b58f":"markdown","30da5f09":"markdown","c68fbcea":"markdown","a2b7db94":"markdown","2e4c1d26":"markdown"},"source":{"4bfa3c23":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport cv2\nfrom keras.preprocessing.image import img_to_array\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\"))\n\n\n# Any results you write to the current directory are saved as output.","38ef3352":"parasitized_data = os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\")\nprint(\"Parasitized Data =\",parasitized_data[:10])\nuninfected_data=os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\")\nprint(\"Uninfected Data = \",uninfected_data[:10])","a30eab97":"for i in range(5):\n    img=cv2.imread(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\/\"+parasitized_data[i])\n    plt.imshow(img)\n    plt.title(\"Parasitized\")\n    plt.show()","301280fd":"for i in range(5):\n    img=cv2.imread(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\/\"+uninfected_data[i])\n    plt.imshow(img)\n    plt.title(\"Uninfected\")\n    plt.show()","473d0438":"data=[]\nlabels=[]\nfor i in parasitized_data:\n    try:\n        img=plt.imread(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\/\"+i)\n        img_resize=cv2.resize(img,(40,40))\n        img_array=img_to_array(img_resize)\n        data.append(img_array)\n        labels.append(1)\n    except:\n        None\nfor i in uninfected_data:\n    try:\n        img=plt.imread(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\/\"+i)\n        img_resize=cv2.resize(img,(40,40))\n        img_array=img_to_array(img_resize)\n        data.append(img_array)\n        labels.append(0)\n    except:\n        None\n\n","d5691c84":"image_data=np.array(data)\nlabels=np.array(labels)\n","cdee3cbf":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(image_data,labels,test_size=0.14,random_state=42)","b712439c":"x_train_shape=x_train.shape[0]\nx_test_shape=x_test.shape[0]\n\nX_train_flatten=x_train.reshape(x_train_shape,x_train.shape[1]*x_train.shape[2]*x_train.shape[3])\nX_test_flatten=x_test.reshape(x_test_shape,x_test.shape[1]*x_test.shape[2]*x_test.shape[3])","e395be69":"x_train=X_train_flatten.T\nx_test=X_test_flatten.T\ny_train=y_train.T\ny_test=y_test.T","714e1f5f":"# a=size (x_train.shape[0])\ndef initializing_parameters(a):\n    w=np.full((a,1),0.01)\n    b=0.0\n    return w,b\ndef sigmoid(z):\n    y_head=1\/(1+np.exp(-z))\n    return y_head","405e4c2a":"def forward_propagation(w,b,x_train,y_train):\n    z=np.dot(w.T,x_train)+b\n    y_head=sigmoid(z)\n    loss=-(1-y_train)*np.log(1-y_head)-y_train*np.log(y_head) # -(1-y)log(1-y^)-ylog(y^) y=y_train y^=y_head\n    cost=(np.sum(loss))\/x_train.shape[0]\n    #Backward Propagation\n    new_w=np.dot(x_train,((y_head-y_train).T))\/x_train.shape[1]\n    new_b=np.sum(y_head-y_train)\/x_train.shape[1]\n    return new_w,new_b,cost","fc3d54cd":"def update(w,b,x_train,y_train,learning_rate,number_iteration):\n    #for visualization\n    for i in range(number_iteration):\n        new_w,new_b,cost=forward_propagation(w,b,x_train,y_train)\n        w=w-learning_rate*new_w\n        b=b-learning_rate*new_b\n        if(i%10==0):\n            print(\"Cost After Iteration {} : {}\".format(i,cost))\n        parameters={\"weight\":w,\"bias\":b}\n    return parameters,new_w,new_b","76a21002":"def predict(w,b,x_test):\n    y_head=sigmoid(np.dot(w.T,x_test)+b)\n    prediction=np.zeros((1,x_test.shape[1]))\n    for i in range(y_head.shape[1]):\n        if(y_head[0,i]>0.5):\n            prediction[0,i]=1\n        else:\n            prediction[0,i]=0\n    return prediction\n        ","5b744523":"def logistic_regression(x_train,x_test,y_train,y_test,learning_rate,number_iteration):\n    a=x_train.shape[0]\n    w,b=initializing_parameters(a)\n    parameters,new_w,new_b=update(w,b,x_train,y_train,learning_rate,number_iteration)\n    \n    prediction_test=predict(parameters[\"weight\"],parameters[\"bias\"],x_test)\n    prediction_train=predict(parameters[\"weight\"],parameters[\"bias\"],x_train)\n    print(\"train accuracy: {} \".format(100 - np.mean(np.abs(prediction_train - y_train)) * 100))\n    print(\"test accuracy: {} \".format(100 - np.mean(np.abs(prediction_test - y_test)) * 100))\n    \n    ","98cd8f77":"logistic_regression(x_train, x_test, y_train, y_test,learning_rate = 0.01, number_iteration = 130) \n# Number Iteration can be increased\n# Learning rate can be reduced.","3009a326":"import warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nfrom sklearn.linear_model import LogisticRegression\nLogisticRegression(solver='lbfgs')","42f4c1e7":"\nlogistic=LogisticRegression(random_state=42,max_iter=130)\nlogistic.fit(x_train.T,y_train.T)","8047e74d":"logistic.score(x_test.T,y_test.T) # Test accuracy","c989c4b7":"logistic.score(x_train.T,y_train) # Train accuracy","a013e033":"**One can clearly see the difference between the infected and uninfected. You can observe a small clot inside the cellular image for infected while for the uninfected the cellular image is clean without any clots.**","bd264e10":"**What is Malaria ? **\nMalaria is a disease transmitted from person to person by a mosquito sting, manifested by sweat caused by fever, chills and seizures.\n","50a27e5e":"**We've adjusted the picture sizes.**","2ef2fea3":"**Visualized data**","cb58b58f":"**We shredded the data for training and testing.**","30da5f09":"**Transposes of the data were obtained.**","c68fbcea":"**You must have the same data size to process it. So we adjusted the data sizes.**","a2b7db94":"**Reading data**","2e4c1d26":"**Logistic Regression with Sklearn**"}}