{"cell_type":{"3628a443":"code","8a7c09c1":"code","e8e25f4d":"code","3a855378":"code","13e5cae6":"code","e0e78d64":"code","ab4219dc":"code","272b372d":"code","8ffa2886":"code","bdac72bf":"code","0fcd1091":"code","766411a2":"code","a9e0cd23":"code","2b0b70d7":"code","7821cc56":"markdown","eba879e3":"markdown","4400dd87":"markdown","ad043c21":"markdown"},"source":{"3628a443":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nwarnings.filterwarnings(\"ignore\")\n\n# Any results you write to the current directory are saved as output.","8a7c09c1":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno","e8e25f4d":"train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\nprint(train.shape)","3a855378":"train.head()","13e5cae6":"train.describe()","e0e78d64":"plt.style.use('fivethirtyeight')\nsns.distplot(train.SalePrice)","ab4219dc":"from fitter import Fitter\nf = Fitter(train.SalePrice)\nf.fit()\n# may take some time since by default, all distributions are tried\n# but you call manually provide a smaller set of distributions\n# Fitting a lot of Distribution Function to find the best one.","272b372d":"f.summary()","8ffa2886":"# This Graph is to compare your graph against a Normal Distribution\nfrom scipy import stats\nfig = plt.figure()\nax1 = fig.add_subplot(211)\nprob = stats.probplot(train.SalePrice, dist=stats.norm, plot=ax1)\nax1.set_xlabel('')\nax1.set_title('Probplot against normal distribution')","bdac72bf":"fig = plt.figure()\nax2 = fig.add_subplot(212)\nYt, gamma = stats.boxcox(train.SalePrice)\nprob = stats.probplot(Yt, dist=stats.norm, plot=ax2)\nax1.set_xlabel('')\nax1.set_title('Probplot against normal distribution')","0fcd1091":"## This shows that SalePrice is now Close to normal and can be used better- WE'll be using this whenever necessary\nsns.distplot(Yt)","766411a2":"!pip install dabl","a9e0cd23":"import dabl\ndabl.plot(train, target_col = 'SalePrice')","2b0b70d7":"msno.heatmap(train)","7821cc56":"*JohnsonSu is the best fitting distribution to the Target Variable. Will be Helpful later*","eba879e3":"### let's Transform this Sales price - We can use BoxCox Transformation to convert to normal distribtion","4400dd87":"### df.describe shows that 38 Columns are Numeric, hence the others are categorical according to algo, we need to check again though","ad043c21":"### Things to Focus on EDA is Missing data adn outliers."}}