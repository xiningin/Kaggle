{"cell_type":{"0cb76cbd":"code","51fbd8cb":"code","33d9ab35":"code","16fdbdff":"code","fc8f6868":"code","3df11b9b":"code","08612020":"code","bad3d17b":"code","d79cb51a":"code","bcedafbe":"code","f32ecaf9":"code","b088593e":"code","cb5cfa01":"code","ae39b448":"code","157b5c00":"code","49d96a57":"markdown","4c401f6d":"markdown","d52e295f":"markdown","ca18e9d0":"markdown","727e224c":"markdown","ddabb436":"markdown"},"source":{"0cb76cbd":"import pandas as pd\npd.set_option('max_rows',100)\npd.set_option('max_columns',400)\nimport numpy as np\nimport matplotlib.pyplot as plt","51fbd8cb":"PYTHON_PATH = '..\/input\/py_packages.json'\nR_PATH = '..\/input\/r_packages.json'","33d9ab35":"def load_and_preprocessing(PATH):\n    # Load dataframe from PATH.\n    df = pd.read_json(PATH)    \n    \n    library = pd.DataFrame(columns=['Import','Name','NotebookId'])\n    for i, row in df.iterrows():\n        for j, column in row.iteritems():\n            if column != None:\n                column.append(f'Notebook {i+1}')\n                library = library.append(pd.Series(column, index=['Import','Name','NotebookId'] ), ignore_index=True)\n            \n    # Using RegEx for data cleaning.\n    \"\"\"\n    CASE 1:\n        Correcting the importing of package in 'r_packages.json'.\n    Case 2:\n        Few of the names have quotes around the package names.\n    \"\"\"\n    # Case 1\n    library.Import.replace(['^y\\('],['library('],regex=True,inplace=True)\n    \n    # Case 2\n    library.Name.replace(['^\\''],[''],regex=True,inplace=True)\n    library.Name.replace(['\\'$'],[''],regex=True,inplace=True)\n    \n    \n    # Removing values with length in columns Name and Import\n    library[(library.Name.str.len()>1)&(library.Import.str.len()>1)]\n    \n    library[['Name','Import']] = library[['Name','Import']].astype('category')\n    return library","16fdbdff":"PYTHON = load_and_preprocessing(PYTHON_PATH)\nPYTHON.name = 'Python' \nR = load_and_preprocessing(R_PATH)\nR.name = 'R'","fc8f6868":"PYTHON.info()","3df11b9b":"R.info()","08612020":"PYTHON.head(10)","bad3d17b":"R.head(10)","d79cb51a":"pd.DataFrame(PYTHON.Name.value_counts(sort=True,ascending=False)).head(10)","bcedafbe":"pd.DataFrame(R.Name.value_counts(sort=True,ascending=False)).head(10)","f32ecaf9":"from mlxtend.frequent_patterns import apriori\n\ndef plot_most_frequent(dd):\n    # Group Packages based on Notebooks \n    df = pd.DataFrame(dd.groupby('NotebookId')['Name'].apply(list).reset_index(name = \"Packages\"))\n    \n    # Creating Sparse matrix to be used in Apriori\n    association=df.drop('Packages', 1).join(df.Packages.str.join('|').str.get_dummies())\n    association.drop('NotebookId',axis=1,inplace=True)\n    \n    # Apriori using mlxtend.frequent_patterns\n    frequentItems = pd.DataFrame(apriori(association, min_support=0.2, use_colnames=True))\n    frequentItems.sort_values(by='support',ascending=False,inplace=True)\n    \n    # Horizontal Bar Plot showing support and frequent items on X and Y axis respectively    \n    frequentItems.plot(kind='barh',x='itemsets',y='support',title=f'Libraries Most Frequently Used in {dd.name}',sort_columns=True,figsize = (10,5),legend=False)\n\ndef count_of_libraries(dd):\n    # Creating subplots of size 20X10\n    fig, axes = plt.subplots(ncols=2,figsize = (20,10))\n    \n    # Grouping NotebookIds to find count of libaries used in each notebook.\n    df = pd.DataFrame(dd.groupby('NotebookId').size().reset_index(name = \"Count\"))\n    \n    # Plotting Probability Distribution and Box plot for the count of libraries used.\n    df.plot(kind='kde',x='NotebookId',y=\"Count\",sort_columns=True,legend=False,ax=axes[0],title='Count of Libraries used in {dd.name}',xlim=(df['Count'].min()-1,df['Count'].max()+1))\n    df.plot(kind='box',y=\"Count\",grid=False,ax=axes[1],title='Count of Libraries used in {dd.name}')","b088593e":"plot_most_frequent(R)","cb5cfa01":"plot_most_frequent(PYTHON)","ae39b448":"count_of_libraries(PYTHON)","157b5c00":"count_of_libraries(R)","49d96a57":"***`Python Implementation`*** of [Kaggler's Favorite Packages](http:\/\/www.kaggle.com\/rebeccaturner\/kaggler-s-favorite-packages) by  **[Rachael Tatman (non-admin)](https:\/\/www.kaggle.com\/rebeccaturner)**.\n\n\nLink for the live coding session video showing ***`R Implementation`***  **[Kaggle Live-Coding: What are Kaggler's favorite packages?](https:\/\/www.youtube.com\/watch?v=AfQhklPwE6o)**","4c401f6d":"## Visualization","d52e295f":"## Analysis of count of packages used per notebook :-","ca18e9d0":"This dataset contains information on what packages were imported in a sample of public R and Python kernels. Kernels were selected by looking for notebooks that contained the word \"import\" (for Python) or \"library\" (for R). Then the names of the packages were extracted using the following regular expressions:\n\n`For R: \"[library|require]\\\\(([a-zA-Z\\\\.0-9']*)\\\\)\"`\n\n`For Python: \"(?`","727e224c":"## Libraries which are used frequently together :-","ddabb436":"<center><b><i>You found this notebook helpful or you just liked it , some upvotes would be very much appreciated<br>That will keep me motivated :)<\/i><\/b><\/center>"}}