{"cell_type":{"fa76a643":"code","3a8a0c29":"code","d2f4e413":"code","bd5d2ca3":"code","adc020af":"code","8d04c4a9":"code","662bb48f":"code","9192b818":"code","80dbf7bd":"code","ab96107a":"code","254b3014":"code","ed037f89":"code","09e7a6a5":"code","df34bfbd":"code","362cffb1":"code","b927fb7d":"code","7c5adfde":"code","f616d96c":"code","bd653fb6":"code","391041bf":"code","12e5d0b2":"code","433fb98d":"code","106c69dd":"code","2bb14b32":"code","cd3f4a13":"code","5737cc4e":"code","dea4ea39":"code","dd0146f2":"code","a419592b":"code","9dacca9a":"code","e256406f":"code","64afcd1f":"code","58134b9b":"code","f86fba9c":"code","017335ec":"code","11885af4":"code","c28f605b":"code","9968dfc7":"code","362eccf9":"markdown","7348d719":"markdown","31fdb3eb":"markdown","011a4f5c":"markdown","cd2ed38d":"markdown","70c08221":"markdown","f473fa4c":"markdown","2aa698a3":"markdown","fe1d54a5":"markdown","d0e3121b":"markdown","afca59fe":"markdown","3fcc9565":"markdown","33cbac70":"markdown","0a27d459":"markdown","1a77a14b":"markdown","04ace6a5":"markdown","21371328":"markdown","a25966c1":"markdown","874aee80":"markdown"},"source":{"fa76a643":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3a8a0c29":"# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3001\u30b5\u30f3\u30d7\u30eb\u30b5\u30d6\u30df\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\ntrain = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\ngender_submission = pd.read_csv('..\/input\/gender_submission.csv')","d2f4e413":"train.head(5)","bd5d2ca3":"print(train.shape) # \u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\nprint(test.shape) # \u672c\u756a\u4e88\u6e2c\u7528\u30c7\u30fc\u30bf\nprint(gender_submission.shape) # \u63d0\u51fa\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb","adc020af":"print(train.columns) # \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u5217\u540d\nprint('-' * 10) # \u533a\u5207\u308a\u3092\u633f\u5165\nprint(test.columns) # \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5217\u540d","8d04c4a9":"train.info()","662bb48f":"test.info()","9192b818":"train.head()","80dbf7bd":"train.isnull().sum() \n# isnull()\u306f\u3001\u6b20\u640d\u5024\u306b\u5bfe\u3057True\u3092\u8fd4\u3057\u3001\u6b20\u640d\u5024\u4ee5\u5916\u306b\u306fFalse\u3092\u8fd4\u3059\n# sum()\u306f\u3001True\u30921\u3001False\u30920\u3068\u3057\u3066\u5408\u8a08\u3059\u308b\n# \u3088\u3063\u3066df.isnull().sum()\u3067\u6b20\u640d\u5024\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b","ab96107a":"test.isnull().sum()","254b3014":"# train\u3068test\u3092\u7e26\u306b\u9023\u7d50\ndf_full = pd.concat([train, test], axis=0, sort=False)\n\nprint(df_full.shape) # df_full\u306e\u884c\u6570\u3068\u5217\u6570\u3092\u78ba\u8a8d\n\ndf_full.describe() # df_full\u306e\u8981\u7d04\u7d71\u8a08\u91cf","ed037f89":"#percentiles\u306b10%\u304b\u308990%\u307e\u3067\u309210%\u523b\u307f\u3067\u6307\u5b9a\ndf_full.describe(percentiles=[.1, .2, .3, .4, .5, .6, .7, .8, .9])","09e7a6a5":"# include\u5f15\u6570\u306b'O'\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u578b\u306e\u8981\u7d20\u6570\u3001\u30e6\u30cb\u30fc\u30af\u6570\u3001\u6700\u983b\u5024\u3001\u6700\u983b\u5024\u306e\u51fa\u73fe\u56de\u6570\u3092\u8868\u793a\ndf_full.describe(include = 'O')","df34bfbd":"# warnings\u3092\u7121\u8996\u3059\u308b\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\nimport pandas_profiling as pdp  # pandas_profiling\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\npdp.ProfileReport(train)  # \u30ec\u30dd\u30fc\u30c8\u306e\u4f5c\u6210","362cffb1":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport japanize_matplotlib\n# japanize_matplotlib\u306f\u53f3\u306eSettinges\u306ePackages\u304b\u3089\u3001\u3092install\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n\n# \u672c\u6587\u3068\u540c\u69d8\u306b\u9752\uff13\u8272\u306e\u8272\u306b\u3059\u308b\u5834\u5408\n# sns.set_palette(\"Blues_r\", 3) # \u9752\uff13\u8272\u306e\u30b9\u30bf\u30a4\u30eb\n\n\n# fontsize\u306e\u8a2d\u5b9a\nplt.rcParams[\"font.size\"] = 18\n\n# \u30b5\u30a4\u30ba\u306e\u8a2d\u5b9a\nplt.rcParams['figure.figsize'] = (8.0, 6.0)","b927fb7d":"sns.countplot(x='Survived', data=train)\nplt.title('\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.xticks([0,1],['\u6b7b\u4ea1\u8005', '\u751f\u5b58\u8005'])\nplt.show()","7c5adfde":"# \u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u6570\u3092\u8868\u793a\u3059\u308b\ndisplay(train['Survived'].value_counts())\n\n# \u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u5272\u5408\u3092\u8868\u793a\u3059\u308b\ndisplay(train['Survived'].value_counts()\/len(train['Survived']))","f616d96c":"# \u7537\u5973\u5225\u306e\u751f\u5b58\u8005\u6570\u3092\u53ef\u8996\u5316\nsns.countplot(x='Sex', hue='Survived', data=train)\nplt.title('\u7537\u5973\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.legend(['\u6b7b\u4ea1','\u751f\u5b58'])\nplt.show()","bd653fb6":"# Sex\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['Sex'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057Sex\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['Sex'], train['Survived'], normalize = 'index'))","391041bf":"# \u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u5225\u306e\u751f\u5b58\u8005\u6570\u3092\u53ef\u8996\u5316\nsns.countplot(x='Pclass', hue='Survived', data=train)\nplt.title('\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.legend(['\u6b7b\u4ea1','\u751f\u5b58'])\nplt.show()","12e5d0b2":"# Pclass\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['Pclass'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057Pclass\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['Pclass'], train['Survived'], normalize='index'))","433fb98d":"# \u5168\u4f53\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(train['Age'].dropna(), kde=False, bins=30 ,label='\u5168\u4f53')\n\n# \u6b7b\u4ea1\u8005\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(train[train['Survived'] == 0].Age.dropna(), kde=False, bins=30, label='\u6b7b\u4ea1')\n\n# \u751f\u5b58\u8005\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(train[train['Survived'] == 1].Age.dropna(), kde=False, bins=30, label='\u751f\u5b58')\n\nplt.title('\u4e57\u8239\u8005\u306e\u5e74\u9f62\u306e\u5206\u5e03') # \u30bf\u30a4\u30c8\u30eb\nplt.legend(); # \u51e1\u4f8b\u3092\u8868\u793a","106c69dd":"# \u5e74\u9f62\u3092\uff18\u7b49\u5206\u3057\u3001CategoricalAge\u3068\u3044\u3046\u5909\u6570\u3092\u4f5c\u6210\ntrain['CategoricalAge'] = pd.cut(train['Age'], 8)\n\n# CategoricalAge\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['CategoricalAge'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057CategoricalAge\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['CategoricalAge'], train['Survived'], normalize='index'))","2bb14b32":"sns.countplot(x='SibSp', data = train)\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u5144\u5f1f\u30fb\u914d\u5076\u8005\u306e\u6570');","cd3f4a13":"# SibSp\u304c0\u304b1\u3067\u3042\u308c\u3070\u305d\u306e\u307e\u307e\u30012\u4ee5\u4e0a\u3067\u3042\u308c\u30702\u3067\u3042\u308b\u7279\u5fb4\u91cfSibSp_0_1_2over\u3092\u4f5c\u6210\ntrain['SibSp_0_1_2over'] = [i if i <=1 else 2 for i in train['SibSp']]\n\n# SibSp_0_1_2over\u3054\u3068\u306b\u96c6\u8a08\u3057\u3001\u53ef\u8996\u5316 \nsns.countplot(x='SibSp_0_1_2over', hue='Survived', data=train)\nplt.legend(['\u6b7b\u4ea1', '\u751f\u5b58'])\nplt.xticks([0,1,2], ['0\u4eba', '1\u4eba', '2\u4eba\u4ee5\u4e0a'])\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u5144\u5f1f\u30fb\u914d\u5076\u8005\u306e\u6570\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.show()","5737cc4e":"# SibSp\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['SibSp_0_1_2over'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057SibSp\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['SibSp_0_1_2over'], train['Survived'], normalize='index'))","dea4ea39":"sns.countplot(x='Parch', data = train)\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u4e21\u89aa\u30fb\u5b50\u4f9b\u306e\u6570');","dd0146f2":"# 2\u4ee5\u4e0b\u3067\u3042\u308c\u3070\u305d\u306e\u307e\u307e\u306e\u6570\u30013\u4ee5\u4e0a\u306f3\u3068\u3044\u3046\u5909\u63db\u3092\u884c\u3046\ntrain['Parch_0_1_2_3over'] = [i if i <=2 else 3 for i in train['Parch']]\n\n# Parch_0_1_2_3over\u3054\u3068\u306b\u96c6\u8a08\u3057\u53ef\u8996\u5316\nsns.countplot(x='Parch_0_1_2_3over',hue='Survived', data = train)\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u4e21\u89aa\u30fb\u5b50\u4f9b\u306e\u6570\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.legend(['\u6b7b\u4ea1','\u751f\u5b58'])\nplt.xticks([0, 1, 2, 3], ['0\u4eba', '1\u4eba', '2\u4eba', '3\u4eba\u4ee5\u4e0a'])\nplt.xlabel('Parch')\nplt.show()","a419592b":"# Parch\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['Parch_0_1_2_3over'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057Parch\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['Parch_0_1_2_3over'], train['Survived'], normalize='index'))\n","9dacca9a":"#SibSp\u3068Parch\u304c\u540c\u4e57\u3057\u3066\u3044\u308b\u5bb6\u65cf\u306e\u6570\u30021\u3092\u8db3\u3059\u3068\u5bb6\u65cf\u306e\u4eba\u6570\u3068\u306a\u308b\ntrain['FamilySize']=train['SibSp']+ train['Parch']+ 1\n\n# IsAlone\u30920\u3068\u3057\u30012\u884c\u76ee\u3067FamilySize\u304c2\u4ee5\u4e0a\u3067\u3042\u308c\u30701\u306b\u3057\u3066\u3044\u308b\ntrain['IsAlone'] = 0\ntrain.loc[train['FamilySize'] >= 2, 'IsAlone'] = 1\n\n# IsAlone\u3054\u3068\u306b\u53ef\u8996\u5316\nsns.countplot(x='IsAlone', hue = 'Survived', data = train)\nplt.xticks([0, 1], ['1\u4eba', '2\u4eba\u4ee5\u4e0a'])\n\nplt.legend(['\u6b7b\u4ea1', '\u751f\u5b58'])\nplt.title('\uff11\u4ebaor\uff12\u4eba\u4ee5\u4e0a\u3067\u4e57\u8239\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.show()","e256406f":"# IsAlone\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['IsAlone'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057IsAlone\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['IsAlone'], train['Survived'], normalize='index'))","64afcd1f":"sns.distplot(train['Fare'].dropna(), kde=False, hist=True)\nplt.title('\u904b\u8cc3\u306e\u5206\u5e03');","58134b9b":"train['CategoricalFare'] = pd.qcut(train['Fare'], 4)\ntrain[['CategoricalFare', 'Survived']].groupby(['CategoricalFare'], as_index=False).mean()\n\n# CategoricalFare\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(train['CategoricalFare'], train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057CategoricalFare\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(train['CategoricalFare'], train['Survived'], normalize='index'))","f86fba9c":"train['Name'][0:5]","017335ec":"# \u656c\u79f0\u3092\u62bd\u51fa\u3057\u3001\u91cd\u8907\u3092\u7701\u304f\nset(train.Name.str.extract(' ([A-Za-z]+)\\.', expand=False))","11885af4":"# \u656c\u79f0\u3092count\u3059\u308b\ntrain.Name.str.extract(' ([A-Za-z]+)\\.', expand=False).value_counts()","c28f605b":"# df_train\u306bTitle\u5217\u3092\u4f5c\u6210\u3001Title\u5217\u306e\u5024\u306f\u656c\u79f0\ntrain['Title'] = train.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\n# df_train\u306eTitle\u5217\u306e\u5024\u3054\u3068\u306b\u5e73\u5747\u5024\u3092\u7b97\u51fa\ntrain.groupby('Title').mean()['Age']","9968dfc7":"# \u5909\u63db\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u6210\ndef title_to_num(title):\n    if title == 'Master':\n        return 1\n    elif title == 'Miss':\n        return 2\n    elif title == 'Mr':\n        return 3\n    elif title == 'Mrs':\n        return 4\n    else:\n        return 5\n\n# test\u306b\u3082title\u5217\u3092\u4f5c\u6210\ntest['Title'] = test.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\n# \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u7528\u3044\u3066\u5909\u63db\ntrain['Title_num'] = [title_to_num(i) for i in train['Title']]\ntest['Title_num'] = [title_to_num(i) for i in test['Title']]","362eccf9":"# 4.3\u5404\u7279\u5fb4\u3068target\u3068\u306e\u95a2\u4fc2\u3092\u53ef\u8996\u5316\n","7348d719":"## 4.3.6 \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306b\u4e57\u3063\u3066\u3044\u308b\u4e21\u89aa\u30fb\u5b50\u4f9b\u306e\u6570","31fdb3eb":"## 4.3.1 \u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005","011a4f5c":"## 4.1.8 \u8981\u7d04\u7d71\u8a08\u91cf\u306e\u8868\u793a","cd2ed38d":"## 4.3.8 \u904b\u8cc3\u306e\u5206\u5e03","70c08221":"## 4.1.3 \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u884c\u6570\u3068\u5217\u6570\u3092\u78ba\u8a8d","f473fa4c":"## 4.3.3 \u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9","2aa698a3":"## 4.2.14 \uff11\u4eba\u3067\u4e57\u8239\u3057\u3066\u3044\u308b\u304b\uff12\u4eba\u4ee5\u4e0a\u3067\u4e57\u8239\u3057\u3066\u3044\u308b\u304b","fe1d54a5":"## 4.1.6 df.head()\u3067\u6982\u8981\u306e\u78ba\u8a8d","d0e3121b":"## 4.1.4 \u5217\u306e\u540d\u524d\u306e\u78ba\u8a8d","afca59fe":"## 4.3.2 \u6027\u5225","3fcc9565":"# 4.1 \u30c7\u30fc\u30bf\u306e\u6982\u8981\u306e\u78ba\u8a8d\n# 4.1.1 Kernel\u306e\u4f5c\u6210\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8","33cbac70":"## 4.3.9 \u540d\u524d","0a27d459":"# 4.2 pandas-profiling\u3092\u7528\u3044\u3066\u5404\u7279\u5fb4\u3092\u500b\u5225\u306b\u628a\u63e1","1a77a14b":"## 4.1.2 \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u3064\u3044\u3066","04ace6a5":"## 4.1.7 \u6b20\u640d\u5024\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u78ba\u8a8d","21371328":"## 4.3.4 \u5e74\u9f62\u306e\u5206\u5e03","a25966c1":"## 4.1.5 df.info()\u3067\u6982\u8981\u306e\u78ba\u8a8d","874aee80":"## 4.3.5 \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306b\u4e57\u3063\u3066\u3044\u308b\u5144\u5f1f\u30fb\u914d\u5076\u8005\u306e\u6570"}}