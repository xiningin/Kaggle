{"cell_type":{"83ced56f":"code","b4c00ece":"code","1d0cf553":"code","2cf4c9ea":"code","05ad938f":"code","e633b668":"code","a94bf7c2":"code","3ad382ee":"code","84a4f3e4":"code","147f1ce5":"code","fd91b6be":"code","2b324e14":"code","9db67f42":"code","59489997":"code","a2a3aa66":"code","d64e4c62":"code","42a9579d":"code","7f52d375":"code","247cf37e":"code","e696d226":"code","6e28e2a7":"code","4015d356":"code","7f1bd298":"code","0c87e590":"code","1054a059":"code","759427c8":"code","4d89fe05":"code","5915c62b":"code","a56a3c02":"code","b84b7578":"code","71965c06":"code","0d73f630":"code","f23b930a":"code","06027eb7":"code","7e041cbd":"code","385ab1ba":"code","7839fc25":"code","521528bc":"code","7a57ff7a":"code","80edcd49":"code","8401a2c3":"code","2ca25761":"code","6f1eb8cc":"code","d2f17c20":"code","afddca23":"code","5c3a9cc8":"code","70c51283":"code","48db189b":"code","c7dd89cd":"code","1880fe74":"code","b1972dd8":"code","78b42855":"code","e7276a15":"code","79ad19fc":"code","2ac7fc15":"markdown","9da4c5ec":"markdown","2ca059c1":"markdown","b7780c62":"markdown","94d7682d":"markdown","e5f2d282":"markdown","3e753299":"markdown","c9765b1f":"markdown","f81b8362":"markdown","a1a2c765":"markdown","37449758":"markdown","3a7a7580":"markdown","6df61de4":"markdown","bdbe8217":"markdown","49b545c6":"markdown"},"source":{"83ced56f":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt ","b4c00ece":"df = pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/CAR DETAILS FROM CAR DEKHO.csv')\ndf.head().style.background_gradient(axis=0)","1d0cf553":"plt.figure(figsize=(8,6),dpi = 150)\nsns.boxplot(data = df , x ='fuel' , y='selling_price')","2cf4c9ea":"plt.figure(figsize=(8,3),dpi=150)\nsns.histplot(data = df ,x ='selling_price',bins=20,hue='fuel')","05ad938f":"plt.figure(figsize=(6,4),dpi = 150)\nsns.scatterplot(data = df , x = 'year',y = 'selling_price',hue='fuel')","e633b668":"plt.figure(figsize=(6,4),dpi = 150)\nsns.countplot(data = df , x ='seller_type',hue='owner')","a94bf7c2":"plt.figure(figsize=(5,3),dpi=150)\nsns.distplot(df[\"selling_price\"], color = 'g')","3ad382ee":"plt.figure(figsize=(5,3),dpi=150)\nsns.distplot(df[\"year\"], color = 'g');","84a4f3e4":"plt.figure(figsize=(5,3),dpi=150)\nsns.heatmap(df.corr(),annot = True)","147f1ce5":"df.info()","fd91b6be":"df.isnull().sum()","2b324e14":"from sklearn.preprocessing import LabelEncoder","9db67f42":"lab = LabelEncoder()","59489997":"\ndf.head()","a2a3aa66":"df['name'] = lab.fit_transform(df['name'])\ndf['fuel'] = lab.fit_transform(df['fuel'])\ndf['seller_type'] = lab.fit_transform(df['seller_type'])\ndf['transmission'] = lab.fit_transform(df['transmission'])\ndf['owner'] = lab.fit_transform(df['owner'])","d64e4c62":"df.head()","42a9579d":"plt.figure(figsize=(5,3),dpi=150)\nsns.heatmap(df.corr(),annot = True)","7f52d375":"X = df.drop('name',axis=1)\ny = df['selling_price']","247cf37e":"from sklearn.model_selection import train_test_split","e696d226":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","6e28e2a7":"from sklearn.linear_model import LinearRegression","4015d356":"model = LinearRegression()","7f1bd298":"model.fit(X_train,y_train)","0c87e590":"test_predections = model.predict(X_test)","1054a059":"residuals = y_test - test_predections","759427c8":"plt.figure(figsize=(10,6),dpi=150)\nsns.scatterplot(x=y_test,y=residuals)\nplt.axhline(y=0,color ='r')\nplt.ylabel('Error Residual')","4d89fe05":"from sklearn.metrics import mean_absolute_error , mean_squared_error","5915c62b":"MAE = mean_absolute_error(y_test,test_predections)\nMAE","a56a3c02":"sns.histplot(data = df ,x ='selling_price',bins=20)","b84b7578":"df['selling_price'].mean()","71965c06":"MSE = mean_squared_error(y_test,test_predections)\nMSE","0d73f630":"RMSE = np.sqrt(MSE)\nRMSE","f23b930a":"model.fit(X,y)","06027eb7":"df['model_predection'] = np.round(model.predict(X),1)","7e041cbd":"df","385ab1ba":"df['Residual'] = np.round(df['selling_price'] - df['model_predection'],1)\ndf","7839fc25":"from sklearn.preprocessing import StandardScaler","521528bc":"scaler = StandardScaler()","7a57ff7a":"X_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","80edcd49":"scaled_model = LinearRegression()","8401a2c3":"scaled_model.fit(X_train,y_train)","2ca25761":"predections = scaled_model.predict(X_test)","6f1eb8cc":"MAE = mean_absolute_error(y_test,predections)\nMAE","d2f17c20":"MSE = mean_squared_error(y_test,predections)\nMSE","afddca23":"RMSE = np.sqrt(MSE)\nRMSE","5c3a9cc8":"res =y_test-predections","70c51283":"plt.figure(figsize=(10,6),dpi=150)\nsns.scatterplot(x=y_test,y=res)\nplt.axhline(y=0,color ='r')\nplt.ylabel('Error Residual')","48db189b":"X = scaler.fit_transform(X)","c7dd89cd":"final_model = LinearRegression()","1880fe74":"final_model.fit(X,y)","b1972dd8":"X[0]","78b42855":"final_model.predict([[-1.44507431, -0.76774602,  0.08113906,  1.01499338,  0.44819164,\n        0.33927557, -0.66507931]])","e7276a15":"df['scaled_model_predection'] = final_model.predict(X)","79ad19fc":"df","2ac7fc15":"# Lets create the final_model ","9da4c5ec":"# Create Machine learning model :","2ca059c1":"# As we see there is no missing data D:","b7780c62":"# Another Model But with **DataScaling** , because there is **GaP** between Cells : ","94d7682d":"# We should convert any object data to Numeric data and this is through **LabelEncoder**:","e5f2d282":"# Now as we see the data that was text has been transformed to **Numeric** :","3e753299":"# Lets divid the data to X and y : ","c9765b1f":"# Error Metrics are now better than the previous model : ","f81b8362":"# Checking the data info: ","a1a2c765":"# DataFrame Reading","37449758":"# Data Visalization to understand data :","3a7a7580":"# Old DataFrame Before applying LableEncoder to convert any Text \"Object\" to \"Numeric\" : ","6df61de4":"# Now we are going to check errors are distributed around Zero or not if distributed we will use linear regression:","bdbe8217":"# Model Evaluation : ","49b545c6":"# Train test split :"}}