{"cell_type":{"656488bf":"code","04731bfe":"code","1a589f23":"code","649e2c34":"code","20df9d68":"code","bb4e4283":"code","63335086":"code","37b652a0":"code","f4fe3141":"code","2a8217f8":"code","18d42a0b":"code","3f6be0ae":"code","72cdd6fc":"code","429dece2":"code","4422aeba":"code","2614b4b6":"code","afa398af":"code","50dbf920":"code","e4e9d925":"code","54c12596":"code","670d1307":"code","63189c24":"code","a1a9d925":"code","327b7fd6":"code","86dfa7dc":"code","17e9a22d":"code","9397dfc8":"code","0e7ffff4":"code","7f79164d":"code","596e1146":"code","ef7d3b01":"code","b31d972e":"code","20a46ce3":"code","7d987c19":"code","1356bd4f":"code","10b2f411":"code","39a952d9":"code","33f7d92c":"code","25954e63":"code","158a418d":"code","129ab58e":"markdown","2a8ccd7b":"markdown","47cd01bc":"markdown","f273a0eb":"markdown","6d8348a5":"markdown","2eb32f2e":"markdown","320e219f":"markdown","8d0baf0f":"markdown","86d49d49":"markdown","216a3808":"markdown","c5b08279":"markdown","17e0fdca":"markdown","21905a05":"markdown","dcbcbbca":"markdown","8d4f8a76":"markdown","ebd36c0f":"markdown","e9cd47d7":"markdown","99a34b0f":"markdown","526566fe":"markdown","8f0d79b9":"markdown","44b26a49":"markdown","bba225d5":"markdown","23f8189d":"markdown","531ed702":"markdown","bc1c71f0":"markdown","c6724d85":"markdown","80684414":"markdown","202860fe":"markdown","2dee25d1":"markdown","43d975b6":"markdown","e6ad1805":"markdown","6365602e":"markdown","67eced37":"markdown","09321421":"markdown"},"source":{"656488bf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","04731bfe":"df = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\ndf.head()","1a589f23":"df.info()","649e2c34":"df.shape","20df9d68":"df.describe()","bb4e4283":"df.isnull().sum()","63335086":"df['LoanAmount'] = df['LoanAmount'].fillna(df['LoanAmount'].mean())","37b652a0":"df['Credit_History'] = df['Credit_History'].fillna(df['Credit_History'].median())","f4fe3141":"df.isnull().sum()","2a8217f8":"df.dropna(inplace=True)","18d42a0b":"df.isnull().sum()","3f6be0ae":"df.shape","72cdd6fc":"sns.countplot(df['Gender'],hue=df['Loan_Status'])\nprint(pd.crosstab(df['Gender'],df['Loan_Status']))","429dece2":"sns.countplot(df['Married'],hue=df['Loan_Status'])\nprint(pd.crosstab(df['Married'],df['Loan_Status']))","4422aeba":"sns.countplot(df['Education'],hue=df['Loan_Status'])\nprint(pd.crosstab(df['Education'],df['Loan_Status']))","2614b4b6":"sns.countplot(df['Self_Employed'],hue=df['Loan_Status'])\nprint(pd.crosstab(df['Self_Employed'],df['Loan_Status']))","afa398af":"sns.countplot(df['Property_Area'],hue=df['Loan_Status'])\nprint(pd.crosstab(df['Property_Area'],df['Loan_Status']))","50dbf920":"df['Loan_Status'].replace('Y',1,inplace=True)\ndf['Loan_Status'].replace('N',0,inplace=True)","e4e9d925":"df['Loan_Status'].value_counts()","54c12596":"df.Gender=df.Gender.map({'Male':1,'Female':0})\ndf['Gender'].value_counts()","670d1307":"df.Married=df.Married.map({'Yes':1,'No':0})\ndf['Married'].value_counts()","63189c24":"df.Dependents=df.Dependents.map({'0':0,'1':1,'2':2,'3+':3})\ndf['Dependents'].value_counts()","a1a9d925":"df.Education=df.Education.map({'Graduate':1,'Not Graduate':0})\ndf['Education'].value_counts()","327b7fd6":"df.Self_Employed=df.Self_Employed.map({'Yes':1,'No':0})\ndf['Self_Employed'].value_counts()","86dfa7dc":"df.Property_Area=df.Property_Area.map({'Urban':2,'Rural':0,'Semiurban':1})\ndf['Property_Area'].value_counts()","17e9a22d":"df['LoanAmount'].value_counts()","9397dfc8":"df['Loan_Amount_Term'].value_counts()","0e7ffff4":"df['Credit_History'].value_counts()","7f79164d":"plt.figure(figsize=(16,5))\nsns.heatmap(df.corr(),annot=True)\nplt.title('Correlation Matrix (for Loan Status)')","596e1146":"df.head()","ef7d3b01":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import svm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics","b31d972e":"X = df.iloc[1:542,1:12].values\ny = df.iloc[1:542,12].values","20a46ce3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=0)","7d987c19":"print(X_train)","1356bd4f":"print(X_test)","10b2f411":"print(y_train)","39a952d9":"model = LogisticRegression()\nmodel.fit(X_train,y_train)\n\nlr_prediction = model.predict(X_test)\nprint('Logistic Regression accuracy = ', metrics.accuracy_score(lr_prediction,y_test))","33f7d92c":"model = svm.SVC()\nmodel.fit(X_train,y_train)\n\nsvc_prediction = model.predict(X_test)\nprint('SVM accuracy = ', metrics.accuracy_score(svc_prediction,y_test))","25954e63":"model = DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\n\ndt_prediction = model.predict(X_test)\nprint('Decision Tree accuracy = ', metrics.accuracy_score(dt_prediction,y_test))","158a418d":"model = KNeighborsClassifier()\nmodel.fit(X_train,y_train)\n\nknn_prediction = model.predict(X_test)\nprint('KNN accuracy = ', metrics.accuracy_score(knn_prediction,y_test))","129ab58e":"### K-Nearest Neighbors (KNN)","2a8ccd7b":"Here, we can see that People living in **Semi-Urban** Area have more chance to get the Loan.","47cd01bc":"#### Comparison between Property Area for getting the Loan:","f273a0eb":"### Let's replace the Variable values to Numerical form & display the Value Counts\n\nThe data in Numerical form avoids disturbances in building the model. ","6d8348a5":"### Importing & Loading the dataset","2eb32f2e":"#### Comparison between Self-Employed or Not in getting the Loan:","320e219f":"### Logistic Regression (LR)","8d0baf0f":"Here, we can see that a **Graduate Individual** has more chance of getting the Loan.","86d49d49":"### Dataset Info:","216a3808":"### Support Vector Machine (SVM)","c5b08279":"#### Comparison between Married Status in getting the Loan:","17e0fdca":"### Importing Packages for Classification algorithms","21905a05":"### Checking the Missing Values","dcbcbbca":"### Exploratory Data Analyis","8d4f8a76":"**CONCLUSION:**\n\n1. The Loan Status is heavily dependent on the Credit History for Predictions.\n2. The Logistic Regression algorithm gives us the maximum Accuracy (79% approx) compared to the other 3 Machine Learning Classification Algorithms.","ebd36c0f":"#### Comparison between Education Status of an Individual in getting the Loan:","e9cd47d7":"From the above figure, we can see that **Credit_History** (Independent Variable) has the maximum correlation with **Loan_Status** (Dependent Variable). Which denotes that the Loan_Status is heavily dependent on the Credit_History.","99a34b0f":"Here, we can see that the **Married Person** has more chance of getting the Loan.","526566fe":"#### Comparison between Genders in getting the Loan:","8f0d79b9":"### Now, Let's drop all the missing values remaining.","44b26a49":"Here, we can see that **Not Self-Employed** has more chance of getting the Loan.","bba225d5":"### Display the Correlation Matrix","23f8189d":"### Dataset Description:","531ed702":"### Importing the Libraries","bc1c71f0":"### Dataset Shape:","c6724d85":"Here, we have dropped all the missing values to avoid disturbances in the model. The Loan Prediction requires all the details to work efficiently and thus the missing values are dropped.","80684414":"### Decision Tree","202860fe":"### Let's check the Missing values for the final time!","2dee25d1":"### Final DataFrame","43d975b6":"### Now, Let's check the final Dataset Shape","e6ad1805":"### Let's confirm if there are any missing values in 'LoanAmount' & 'Credit_History'","6365602e":"#### First we will fill the Missing Values in \"LoanAmount\" & \"Credit_History\" by the 'Mean' & 'Median' of the respective variables.","67eced37":"### Splitting the data into Train and Test set","09321421":"Here, we can see that the **Males** have more chances to get the Loan."}}