{"cell_type":{"838af86c":"code","aaf81785":"code","949e435a":"code","8f75e517":"code","28cbf215":"code","b0842c39":"code","072f9078":"code","9bdcdebe":"code","3061c63e":"code","6a4c30f3":"code","f30f64ad":"code","4823190a":"code","afd184fa":"code","f8031f3d":"code","d59d0688":"code","920bbb3b":"code","9bb69d4d":"code","c2f816bd":"code","bf83f267":"code","24d97785":"code","906e4fce":"code","8e881ea2":"code","a2277195":"code","dc8e9daf":"code","d24fc3d7":"code","6e033db7":"code","a123f0cb":"code","640219c3":"code","26040748":"code","d09cb491":"code","bdfa4188":"code","d6581273":"code","e7871166":"code","7e01085f":"code","2da0b043":"code","f5231672":"code","09623e9e":"markdown","7533b717":"markdown","dab9812b":"markdown","7b0c775e":"markdown","7031c1b3":"markdown","3a7c35fe":"markdown","8d892ec2":"markdown","1c860f8c":"markdown","486c2728":"markdown","b866662f":"markdown","c7db25ea":"markdown","fecf24d3":"markdown","eee39972":"markdown","c8fc22f4":"markdown","c608a43f":"markdown","7fe9de14":"markdown","6a7a476b":"markdown","b8664f45":"markdown","407a9811":"markdown","81cd121a":"markdown","b8476872":"markdown","010a8490":"markdown","10975673":"markdown","396edfcd":"markdown","970e97ea":"markdown","a4847631":"markdown","19fb04aa":"markdown","b2e9a472":"markdown","5a6b0736":"markdown","b2817ff5":"markdown","4d66a9e1":"markdown","c3bc3705":"markdown","6fedb1eb":"markdown","1477bef5":"markdown","6cc099f4":"markdown","75fca447":"markdown","8c630b59":"markdown"},"source":{"838af86c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npd.options.display.max_rows= None\npd.options.display.max_columns= None","aaf81785":"df= pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv', parse_dates= True, index_col= 'Sno')\ndf['Date']= pd.to_datetime(df['Date']).dt.date\ndf['Last Update']= pd.to_datetime(df['Last Update']).dt.date\ndf.set_index('Date', inplace= True)\ndf.head(5)","949e435a":"df.shape","8f75e517":"df.describe()","28cbf215":"# Checking for NA values\nprint('Column\\t\\t#Missing')\ndf.isna().sum()","b0842c39":"df['Country'].replace({'Mainland China': 'China'}, inplace= True)\nrecent_cp_df= df.groupby(['Country', 'Province\/State']).last()\nrecent_cp_df","072f9078":"recent_cp_df_c= recent_cp_df.groupby('Country').agg({'Confirmed': 'sum', 'Deaths': 'sum', 'Recovered': 'sum'})\nrecent_cp_df_c['Recovery Rate']= recent_cp_df_c['Recovered']\/recent_cp_df_c['Confirmed']\nrecent_cp_df_c['Mortality Rate']= recent_cp_df_c['Deaths']\/recent_cp_df_c['Confirmed']\nrecent_c_df=  df\n\nfor i in recent_cp_df_c.index:\n    recent_c_df= recent_c_df[(recent_c_df['Country']!=i)]\n    \nrecent_c_df= recent_c_df.groupby(['Country']).last()\nrecent_c_df.drop(['Province\/State', 'Last Update'], axis= 1, inplace= True)\nrecent_c_df['Recovery Rate']= recent_c_df['Recovered']\/recent_c_df['Confirmed']\nrecent_c_df['Mortality Rate']= recent_c_df['Deaths']\/recent_c_df['Confirmed']\n\nrecent_df= pd.concat([recent_cp_df_c, recent_c_df], axis= 0)\nrecent_df","9bdcdebe":"for i in ['Brazil', 'Ivory Coast', 'Mexico']:\n    df= df[(df['Country']!=i)]\n\nrecent_df_nc= recent_df.drop(['China']).sort_values(['Confirmed'], ascending= False)\nrecent_df_nc","3061c63e":"f, ax = plt.subplots(figsize=(20, 10))\nsns.barplot(x= recent_df_nc[\"Confirmed\"], y= recent_df_nc.index, label=\"Confirmed\", color=\"yellow\").set_title('Global Corona outbreak stats for all countries except China', size= 20)\nsns.barplot(x= recent_df_nc[\"Recovered\"], y= recent_df_nc.index, label=\"Recovered\", color=\"green\")\nsns.barplot(x= recent_df_nc[\"Deaths\"], y= recent_df_nc.index, label=\"Deaths\", color=\"red\")\nsns.despine(left= True)\nax.legend(ncol=3, loc=\"lower right\")\nax.set(ylabel=\"Countries\", xlabel=\"Values\")","6a4c30f3":"print('Globally, these are the total numbers reported yet: ')\nrecent_df.agg({'Confirmed': 'sum', 'Deaths': 'sum', 'Recovered': 'sum', 'Recovery Rate': 'mean', 'Mortality Rate': 'mean'}).to_frame()","f30f64ad":"clist= df['Country'].unique().tolist()\n\nprint('Following ' + str(len(clist)) + ' countries were affected: ')\nprint(clist)","4823190a":"print('Sorted by confirmed cases:')\nrecent_df.sort_values(['Confirmed'], ascending= False)","afd184fa":"print('Sorted by Mortality rate:')\nrecent_df.sort_values(['Mortality Rate'], ascending= False)","f8031f3d":"print('Sorted by recovery rate:')\nrecent_df.sort_values(['Recovery Rate'], ascending= True)","d59d0688":"!pip install folium\nimport folium","920bbb3b":"coord_df= pd.read_csv('..\/input\/corona-analysis-files\/world_coordinates.csv', index_col= 'Country')\ncoord_df.head()","9bb69d4d":"recent_df= recent_df.join(coord_df, how= 'inner')\nrecent_df.drop(['Brazil', 'Mexico'], inplace= True)\nrecent_df","c2f816bd":"world_map = folium.Map(location=[35.861660, 80.195397], zoom_start= 3, tiles='Stamen Toner')\noutbreaks = folium.map.FeatureGroup()\n\nfor lt, ln, nm, cnfrm, rec, mor in zip(recent_df['latitude'], recent_df['longitude'], recent_df.index, recent_df['Confirmed'], recent_df['Recovery Rate'], recent_df['Mortality Rate']):\n    ss= '<b>Country: <\/b>' + nm + '<br><b>#Confirmed: <\/b>' + str(int(cnfrm)) + '<br><b>Recovery rate: <\/b>' + str(round(rec, 2)) + '<br><b>Mortality rate: <\/b>' + str(round(mor, 2))\n    folium.Marker([lt, ln], popup= ss).add_to(world_map) \n    folium.CircleMarker([lt, ln], radius= 0.05*int(cnfrm), color= 'red').add_to(world_map) \n    \nworld_map","bf83f267":"wc = r'..\/input\/corona-analysis-files\/world_countries.json' # geojson file\ntscale= np.linspace(0, recent_df['Confirmed'].max()+1, 6, dtype=int).tolist()\n\nworld_map = folium.Map(location=[035.861660, 104.195397], zoom_start=2, tiles='Stamen Toner')\nworld_map.choropleth(\n    geo_data= wc,\n    data= recent_df,\n    columns=[recent_df.index, 'Confirmed'],\n    key_on='feature.properties.name',\n    threshold_scale= tscale,\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Corona Outbreak strength',\n)\n\nworld_map","24d97785":"china_recent_p_df= recent_cp_df.loc[['China']].reset_index(level= 0, drop= True)\n\nprint('Following ' + str(china_recent_p_df.shape[0]) + ' Chinese provinces were affected: ')\nprint(china_recent_p_df.index.values)","906e4fce":"china_recent_p_df['Recovery Rate']= china_recent_p_df['Recovered']\/china_recent_p_df['Confirmed']\nchina_recent_p_df['Mortality Rate']= china_recent_p_df['Deaths']\/china_recent_p_df['Confirmed']\n\nchina_recent_p_df_s= china_recent_p_df.sort_values(['Confirmed'], ascending= False)\nchina_recent_p_df_s","8e881ea2":"f, ax = plt.subplots(figsize=(20, 10))\nsns.set(style=\"whitegrid\")\nsns.barplot(x= china_recent_p_df_s[\"Confirmed\"], y= china_recent_p_df_s.index, label=\"Confirmed\", color=\"yellow\").set_title('Corona outbreak stats for all affected provinces in China', size= 20)\nsns.barplot(x= china_recent_p_df_s[\"Recovered\"], y= china_recent_p_df_s.index, label=\"Recovered\", color=\"green\")\nsns.barplot(x= china_recent_p_df_s[\"Deaths\"], y= china_recent_p_df_s.index, label=\"Deaths\", color=\"red\")\nsns.despine(left= True, bottom= True)\nax.legend(ncol=3, loc=\"lower right\")\nax.set(ylabel=\"Chinese provinces\", xlabel=\"Values\")","a2277195":"china_recent_p_df_s.drop('Hubei', inplace= True)\n\nf, ax = plt.subplots(figsize=(20, 10))\nsns.barplot(x= china_recent_p_df_s[\"Confirmed\"], y= china_recent_p_df_s.index, label=\"Confirmed\", color=\"yellow\").set_title('Corona outbreak stats for all affected provinces in China except Hubei', size= 20)\nsns.barplot(x= china_recent_p_df_s[\"Recovered\"], y= china_recent_p_df_s.index, label=\"Recovered\", color=\"green\")\nsns.barplot(x= china_recent_p_df_s[\"Deaths\"], y= china_recent_p_df_s.index, label=\"Deaths\", color=\"red\")\nsns.despine(left= True, bottom= True)\nax.legend(ncol=3, loc=\"lower right\")\nax.set(ylabel=\"Provinces other than Hubei\", xlabel=\"Values\")","dc8e9daf":"china_recent_p_df.drop(['Hong Kong'], inplace= True)\nchina_recent_p_df.sort_values(['Recovery Rate'])","d24fc3d7":"china_recent_p_df.sort_values(['Mortality Rate'], ascending= False)","6e033db7":"wc = r'..\/input\/corona-analysis-files\/china.json' # geojson file\ntscale= np.linspace(china_recent_p_df['Confirmed'].min(), china_recent_p_df['Confirmed'].max()+1, 6, dtype=int).tolist()\n\nworld_map = folium.Map(location=[35.861660, 105.195397], zoom_start= 4, tiles='Mapbox Bright')\nworld_map.choropleth(\n    geo_data= wc,\n    data= china_recent_p_df,\n    columns=[china_recent_p_df.index, 'Confirmed'],\n    key_on='feature.properties.name',\n    threshold_scale= tscale,\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Corona Outbreak strength in China'\n)\n\nworld_map","a123f0cb":"clatlon= pd.read_csv('..\/input\/corona-analysis-files\/China_Provinces_LatLon.csv', index_col= 'Province\/State')\nclatlon.drop(['Unnamed: 0'], axis= 1, inplace= True)","640219c3":"china_recent_p_df= china_recent_p_df.join(clatlon, how= 'inner')\nchina_recent_p_df","26040748":"world_map = folium.Map(location=[35.861660, 110.195397], zoom_start= 5, tiles='Stamen Toner')\noutbreaks = folium.map.FeatureGroup()\n    \nfor lt, ln, cd, cnfrm, rec, mor in zip(china_recent_p_df['LAT'], china_recent_p_df['LON'], china_recent_p_df.index, china_recent_p_df['Confirmed'], china_recent_p_df['Recovery Rate'], china_recent_p_df['Mortality Rate']):\n    ss= '<b>Province:<\/b> ' + cd + '<br><b>#Confirmed: <\/b>' + str(int(cnfrm)) + '<br><b>Recovery rate: <\/b>' + str(round(rec, 2)) + '<br><b>Mortality rate: <\/b>' + str(round(mor, 2))\n    folium.Marker([lt, ln], popup= ss).add_to(world_map)    \n    folium.CircleMarker([lt, ln], radius= 0.05*int(cnfrm), color= 'red').add_to(world_map) \n    \nworld_map","d09cb491":"spread_df= df.groupby(df.index)['Country'].nunique().to_frame()\n\nf, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(x= spread_df.index, y= spread_df['Country']).set_title('Number of Countries affected by Corona virus over time', size= 20)\nsns.despine(left= True)\nax.set(ylabel=\"Values\", xlabel=\"Timeline\")","bdfa4188":"over_time_df= df.groupby(df.index).agg({'Confirmed': 'sum', 'Deaths': 'sum', 'Recovered': 'sum'})\nover_time_df['Recovery rate']= over_time_df['Recovered']\/over_time_df['Confirmed']\nover_time_df['Mortality rate']= over_time_df['Deaths']\/over_time_df['Confirmed']\n\nf, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(x= over_time_df.index, y=  over_time_df['Confirmed'], label= 'Confirmed', color= 'blue').set_title(\"#Confirmed Cases, Deaths & Recoveries over time all over the world\", size= 20)\nsns.lineplot(x= over_time_df.index, y=  over_time_df['Deaths'], label= 'Deaths', color= 'red')\nsns.lineplot(x= over_time_df.index, y=  over_time_df['Recovered'], label= 'Recovered', color= 'green')\nsns.despine(left= True)\nax.legend(ncol=3, loc=\"upper left\")\nax.set(ylabel=\"Values\", xlabel=\"Timeline\", )","d6581273":"f, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(x= over_time_df.index, y=  over_time_df['Recovery rate'], label= 'Confirmed', color= 'green').set_title(\"Mortality rate & Recovery rate over time all over the world\", size= 20)\nsns.lineplot(x= over_time_df.index, y=  over_time_df['Mortality rate'], label= 'Deaths', color= 'red')\nsns.despine(left= True)\nax.legend(ncol=2, loc=\"upper left\")\nax.set(ylabel=\"Values\", xlabel=\"Timeline\")","e7871166":"china_over_time_df= df[(df['Country']=='China')]\nchina_over_time_df.groupby(china_over_time_df.index).agg({'Confirmed': 'sum', 'Deaths': 'sum', 'Recovered': 'sum'})\nnp_china_over_time_df= china_over_time_df.groupby(china_over_time_df.index).agg({'Confirmed': 'sum', 'Deaths': 'sum', 'Recovered': 'sum'})\nnp_china_over_time_df['Recovery rate']= np_china_over_time_df['Recovered']\/np_china_over_time_df['Confirmed']\nnp_china_over_time_df['Mortality rate']= np_china_over_time_df['Deaths']\/np_china_over_time_df['Confirmed']\n\nf, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(x= np_china_over_time_df.index, y=  np_china_over_time_df['Confirmed'], label= 'Confirmed', color= 'blue').set_title(\"#Confirmed Cases, Deaths & Recoveries over time in China\", size= 20)\nsns.lineplot(x= np_china_over_time_df.index, y=  np_china_over_time_df['Deaths'], label= 'Deaths', color= 'red')\nsns.lineplot(x= np_china_over_time_df.index, y=  np_china_over_time_df['Recovered'], label= 'Recovered', color= 'green')\nsns.despine(left= True)\nax.legend(ncol=3, loc=\"upper left\")\nax.set(ylabel=\"Values\", xlabel=\"Timeline\", )","7e01085f":"f, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(x= np_china_over_time_df.index, y=  np_china_over_time_df['Recovery rate'], label= 'Confirmed', color= 'green').set_title(\"Mortality rate & Recovery rate  over time all over the world\")\nsns.lineplot(x= np_china_over_time_df.index, y=  np_china_over_time_df['Mortality rate'], label= 'Deaths', color= 'red')\nsns.despine(left= True)\nax.legend(ncol=2, loc=\"upper left\")\nax.set(ylabel=\"Values\", xlabel=\"Timeline\")","2da0b043":"china_over_time_df.set_index('Province\/State')\nchina_over_time_df['Mortality rate']= china_over_time_df['Deaths']\/china_over_time_df['Confirmed']\nchina_over_time_df['Recovery rate']= china_over_time_df['Recovered']\/china_over_time_df['Confirmed']\nchina_over_time_df.fillna(0, inplace= True)\n\nf, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Hubei')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Hubei')].index, y=  'Confirmed', label= 'Hubei', color= 'red').set_title(\"Comparison of confirmed cases in Hubei vs other Chinese provinces\", size= 20)\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Guangdong')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Guangdong')].index, y=  'Confirmed', label= 'Guangdong', color= 'green')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Henan')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Henan')].index, y=  'Confirmed', label= 'Henan', color= 'blue')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Zhejiang')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Zhejiang')].index, y=  'Confirmed', label= 'Zhejiang', color= 'black')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Hunan')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Hunan')].index, y=  'Confirmed', label= 'Hunan', color= 'pink')\n\nsns.despine(left= True)\nax.legend(ncol=5, loc=\"upper left\")\nax.set(ylabel=\"Values\", xlabel=\"Timeline\", )","f5231672":"f, ax = plt.subplots(figsize=(20, 10))\nax.grid(True)\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Guangdong')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Guangdong')].index, y=  'Confirmed', label= 'Guangdong', color= 'green')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Henan')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Henan')].index, y=  'Confirmed', label= 'Henan', color= 'blue')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Zhejiang')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Zhejiang')].index, y=  'Confirmed', label= 'Zhejiang', color= 'black')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Hunan')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Hunan')].index, y=  'Confirmed', label= 'Hunan', color= 'pink')\nsns.lineplot(data= china_over_time_df[(china_over_time_df['Province\/State']=='Anhui')], x= china_over_time_df[(china_over_time_df['Province\/State']=='Anhui')].index, y=  'Confirmed', label= 'Anhui \t', color= 'red').set_title(\"Confirmed cases over time in Chinese provinces except Hunan\", size= 20)\n\nsns.despine(left= True)\nax.legend(ncol=5, loc=\"upper left\")\nax.set(ylabel=\"Values\", xlabel=\"Timeline\", )","09623e9e":"# Visualizations: Corona Outbreak numbers all over the world","7533b717":"# How did the virus spread over time in China?","dab9812b":"# Do we have any missing values?","7b0c775e":"# How is China coping with this outbreak?","7031c1b3":"# Data seems to be cumulative here.\n- So to get the latest figures, we should try to gety the latest entry for each country & each province.\n- We cannot simply sum the figures to produce the numbers.\n- We also notice China has been repeated twice: once as China, then again as Mainland China.","3a7c35fe":"- We check how the countries have been affected by sorting the number of confirmed cases, recoveries & deaths in each of them.","8d892ec2":"# Confirmed vs Deaths vs Recovered for all countries except China","1c860f8c":"# What is the most recent situation?","486c2728":"- Printing the first five rows of the dataset, followed by it's shape and structure, to get a basic overview of the data we are dealing with.","b866662f":"- China has the highest number of outbreaks, which we knew earlier from the dataframes.\n- We see that the southern parts of the world, e.g. South America & Africa remain largely unaffected.\n- Mostly the northern and the eastern parts of the world have been affected.","c7db25ea":"- The province of Hubei has the highest mortality rate.\n- We can assume the provinces having high mortality rates to be closer to Hubei, & those having low mortality rates away from Hubei. We shall check the same using Choropleth visualizations.\n- The Zhejiang province, despite having a large number of confirmed cases, does not have a single confirmed death, and a high recovery rate.","fecf24d3":"# Corona outbreak effect on Hubei vs other provinces in China","eee39972":"# Visualizations: Corona confirmed cases using Choropleth in China:","c8fc22f4":"- Our approach is to present the global situation through two separate approaches:\n- once, for the countries having provinces in the dataset so we can have a province-level understanding\n- and then, globally in a country wise situation","c608a43f":"- This shows that our assumption about high mortality rates in provinces neighboring Wuhan was correct.","7fe9de14":"### In terms of mortality rate, China seems to be quite low. This is a good indication.\n- Philippines has the highest mortality rate, however it has few confirmed cases.","6a7a476b":"# We should be concerned about the countries having low recovery rates.\n- Hong Kong, Canada, Taiwan & US have very poor recovery rates while having a significant number of confirmed cases.\n- However most countries in our dataset have hgh recovery rates, and that is a good indication.\n- Some countries have recovery rate 1; among them India has the highest number of confirmed cases.","b8664f45":"# Visualizations: Corona Outbreak numbers in China","407a9811":"- All figures in this graph are very much influenced by the figures from China; we shall see the proof later.\n- This data is from all the affected countries including China; that is why we are not able to obtain high recovery rates despite some countries having 100% recovery rate.\n- At the end of January the recovery rate was shadowed by the mortality rate \n- Around the beginning of February the recovery rates started to spike up, while the mortality rates show a gradual decline.","81cd121a":"# How did the virus spread over time globally?","b8476872":"- We notice how once Hubei is dropped, the right limit in x axis drops from 60,000 to almost 1,400.\n- Deaths have been reported in quite a few Chinese provinces, but these figures are quite low.\n- In almost all of the Chinese provinces, the number of recoveries is also quite strong, since the green portion takes up almost half of the bar length in each case. However in the last chart for Hubei, the green portion failed to cover even a quarter of the whole length.\n- In almost all the parameters, Hubei has been affected the worst.","010a8490":"<h1 align= 'center'><b>An attempt to analyze the global Corona virus outbreak.<\/b><\/h1>","10975673":"# Visualizations: Corona confirmed cases using Choropleths","396edfcd":"# What is the global situation?","970e97ea":"### In terms of confirmed cases, it seems the South Asian countries were affected the most.\n- After China, which is the centre of the outbreak, the neighboring countries: \n- Japan, Singapore, Thailand & Hong Kong were affected the worst in terms of all 3 parameters.\n- Singapore & Thailand among them seems to be handling the situation best with the highest number of confirmed cases\n- yet with zero deaths & highest number of recoveries.\n- Australia, in the southernmost end, was also affected, but has a high recovery rate.\n- Surprisingly, France has a high mortality rate despite not being an Asian country. We might want to look into it.","a4847631":"### Country wise situation globally:","19fb04aa":"# What are the countries affected? How are they affected? How are they recovering?","b2e9a472":"### Country & province wise situation (for countries having provinces in the dataset):","5a6b0736":"# Conclusion: The Hubei province can be assumed to be the origin of the virus. \n- Wuhan, as we know, the centre of the outbreak, is also the capital of the Hubei province, which has the most confirmed cases.\n- Hubei has a worryingly low recovery rate, compared to the other provinces.\n- China occupied Hong Kong has 0 confirmed cases; we may drop that column.","b2817ff5":"- Mostly the neighboring countries of China in south east Asia have been affected.\n- US has also been affected strongly in comparison; we can attribute this to the large number of Chinese immigrants or resisdents in US.\n- Also, in most of the affected countries, deaths due to Corona virus has not occured, or has not been reported yet.","4d66a9e1":"- All figures in this graph are very much influenced by the figures from China; we shall see the proof later.\n- While we have not been able to contain the outbreak yet, it is a good indicator that the number of recoveries is increasing with time.\n- The number of deaths is still increasing, but very slowly. The slope is very gradual. We will examine this further.","c3bc3705":"- We notice NA values for Brazil, Ivory Coast & Mexico. We can drop them since they have no confirmed cases.","6fedb1eb":"- China, being the largest country, has many provinces. We try to figure out where it all started.","1477bef5":"- Both the above plots for China mirror the global trend in terms of all the three parameters that we plotted earlier. This again shows how strong the influence of China on the impact of this outbreak is.","6cc099f4":"## We try to plot the virus outbreak in Chinese provinces over time.\n- We cannot plot all the 26 Chinese provinces into a single legible graph.\n- We shall consider only those provinces having significant number of confirmed cases: Hubei, Guangdong, Henan, Zhejiang, Hunan & Anhui.","75fca447":"- This gives us an idea about how severely the province of Hubei has been affected, in comparison to other Chinese provinces, or even other countries.\n- We notice how the number of deaths in Hubei alone outnumbers the confirmed cases in all the other provinces. This is very unfortunate, to say the least.","8c630b59":"- Among the provinces, Inner Mongolia, Hubei, Xinjiang, Heilongjiang & Guangxi have extremely low recovery rates (<0.25).\n- Other provinces like Anhui, Jiangxi, Guangdong, Henan, Zhejiang, Hunan have almost 1000 or more confirmed cases, but have moderately low recovery rates (<0.5).\n- Provinces Taiwan, Macau, Gansu & Qinghai seem relatively unaffected by this outbreak; they have high recovery rates."}}