{"cell_type":{"bddf0cdb":"code","5ad6d2a3":"code","ca0ae806":"code","33d7d9d8":"code","dc0f9fe7":"code","e70d2f6e":"code","f2a04fd9":"code","ef1e6dc7":"code","39688d04":"code","316c96c5":"code","5f833ed8":"code","1f98429f":"code","ccb4fae6":"code","c8cc03f4":"code","19d38a30":"code","6c99ed44":"code","f4bcba61":"code","748ccec2":"code","1fd95f85":"code","116833ea":"code","60b328ce":"code","27be030c":"code","2dfd41f1":"code","9e9d2834":"code","c1eaa0d5":"code","f9e52565":"code","d91fc090":"code","0a56fb03":"code","71c3f950":"code","c1cb0991":"code","e9319632":"code","47176cd7":"code","a06951aa":"code","69abad21":"code","0e38623c":"code","58c70a79":"code","d7913e95":"code","7a84565c":"code","61edbbbe":"code","5d7a06ad":"code","f5dbaba1":"code","a00101f0":"code","377eeec5":"code","5cfd0cdd":"code","ce1d32b9":"code","0e9b1da0":"code","f53437db":"code","40b81dfc":"code","c96cb036":"code","92e73fc6":"code","1315ec4b":"code","40cde29e":"code","585ea7de":"code","fc0032a8":"code","56c510bc":"code","555bb426":"code","7e358ae1":"code","ec13425c":"code","d0898cb0":"code","a51f7da8":"code","fc7ca9cf":"markdown","9f8a943c":"markdown","c268bd4f":"markdown","970e6a8a":"markdown","33bf5b9e":"markdown"},"source":{"bddf0cdb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.model_selection import KFold\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_squared_error,r2_score\nimport glob\nimport missingno as msno\nfrom fbprophet import Prophet\n%matplotlib inline\nplt.rcParams['figure.figsize'] = (10, 7)\nfrom datetime import datetime, timedelta\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5ad6d2a3":"colors = [\"windows blue\", \"amber\", \"faded green\", \"dusty purple\"]\nsns.set(rc={\"figure.figsize\": (20,10), \"axes.titlesize\" : 18, \"axes.labelsize\" : 12, \n            \"xtick.labelsize\" : 14, \"ytick.labelsize\" : 14 })","ca0ae806":"path =r'..\/input\/beijing-multisite-airquality-data-set\/' # use your path\nallFiles = glob.glob(path + \"\/*.csv\")\nframe = pd.DataFrame()\nlist_ = []\nfor file_ in allFiles:\n    df = pd.read_csv(file_,index_col=None, header=0)\n    list_.append(df)\nframe = pd.concat(list_)\n\ncols = ['No', 'year', 'month', 'day', 'hour', 'PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3', 'TEMP',\n       'PRES', 'DEWP', 'RAIN', 'wd', 'WSPM', 'station']\nframe = frame[cols]\nframe = frame.sort_values(['station', 'year'])\n\nframe.tail(3)","33d7d9d8":"frame.describe()","dc0f9fe7":"frame.info()","e70d2f6e":"frame.shape","f2a04fd9":" #summarising number of missing values in each column\nframe.isnull().sum()","ef1e6dc7":"# percentage of missing values in each column\nround(frame.isnull().sum()\/len(frame.index), 2)*100","39688d04":"frame['PM2.5'].describe()","316c96c5":"frame['PM2.5'].fillna(frame['PM2.5'].median(), inplace=True)","5f833ed8":"# percentage of missing values in each column\nround(frame.isnull().sum()\/len(frame.index), 2)*100","1f98429f":"frame['PM10'].describe()","ccb4fae6":"frame['PM10'].fillna(frame['PM10'].median(), inplace=True)\nframe['SO2'].fillna(frame['SO2'].median(), inplace=True)\nframe['NO2'].fillna(frame['NO2'].mean(), inplace=True)\nframe['CO'].fillna(frame['CO'].median(), inplace=True)\nframe['O3'].fillna(frame['O3'].median(), inplace=True)","c8cc03f4":"# percentage of missing values in each column\nround(frame.isnull().sum()\/len(frame.index), 2)*100","19d38a30":"frame.head(15)","6c99ed44":"df = frame[['SO2','year','station']].groupby([\"year\"]).median().reset_index().sort_values(by='year',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='year', y='SO2', data=df)\n","f4bcba61":"df = frame[['NO2','year','station']].groupby([\"year\"]).median().reset_index().sort_values(by='year',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='year', y='NO2', data=df,markers='o', color='red')","748ccec2":"df = frame[['CO','year','station']].groupby([\"year\"]).median().reset_index().sort_values(by='year',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='year', y='CO', data=df,markers='o', color='olive')","1fd95f85":"df = frame[['O3','year','station']].groupby([\"year\"]).median().reset_index().sort_values(by='year',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='year', y='O3', data=df,markers='o', color='blue')","116833ea":"df = frame[['PM2.5','year','station']].groupby([\"year\"]).median().reset_index().sort_values(by='year',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='year', y='PM2.5', data=df,markers='o', color='red')","60b328ce":"df = frame[['PM10','year','station']].groupby([\"year\"]).median().reset_index().sort_values(by='year',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='year', y='PM10', data=df,markers='o', color='red')","27be030c":"frame.head()","2dfd41f1":"df_2017 = frame[frame['year']==2017]\n","9e9d2834":"df_2017.head()","c1eaa0d5":"df = df_2017[['SO2','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='SO2', data=df)","f9e52565":"df = df_2017[['NO2','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='NO2', data=df)","d91fc090":"df = df_2017[['CO','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='CO', data=df)","0a56fb03":"df = df_2017[['O3','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='O3', data=df)","71c3f950":"df = df_2017[['PM2.5','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='PM2.5', data=df)","c1cb0991":"df = df_2017[['PM10','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='PM10', data=df)","e9319632":"df = df_2017[['WSPM','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='WSPM', data=df)","47176cd7":"df = df_2017[['TEMP','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='TEMP', data=df)","a06951aa":"df = df_2017[['PRES','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='PRES', data=df)","69abad21":"df = df_2017[['WSPM','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='WSPM', data=df)","0e38623c":"df = df_2017[['DEWP','hour','station']].groupby([\"hour\"]).median().reset_index().sort_values(by='hour',ascending=False)\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='hour', y='DEWP', data=df)","58c70a79":"df_2017.dtypes","d7913e95":"# creating date field for further analysis by extracting day of the week, month etc.\ndf_2017['date']=pd.to_datetime(df_2017[['year', 'month', 'day']])","7a84565c":"df_2017.dtypes","61edbbbe":"df_2017.head()","5d7a06ad":"# function to find day of the week based on the date field\nimport calendar\ndef findDay(date): \n    dayname = calendar.day_name[date.weekday()]\n    return dayname","f5dbaba1":"df_2017['day_week'] = df_2017['date'].apply(lambda x: findDay(x))\ndf_2017.head()","a00101f0":"df_2017.tail()","377eeec5":"custom_day = {'Monday':0, 'Tuesday':1,'Wednesday':2,'Thursday':3,'Friday':4,'Saturday':5,'Sunday':6}","5cfd0cdd":"\ndf = df_2017[['SO2','day_week','station']].groupby([\"day_week\"]).median().reset_index().sort_values(by='day_week',ascending=True)\ndf = df.iloc[df['day_week'].map(custom_day).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='day_week', y='SO2', data=df)","ce1d32b9":"df = df_2017[['NO2','day_week','station']].groupby([\"day_week\"]).median().reset_index().sort_values(by='day_week',ascending=True)\ndf = df.iloc[df['day_week'].map(custom_day).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='day_week', y='NO2', data=df)","0e9b1da0":"df = df_2017[['O3','day_week','station']].groupby([\"day_week\"]).median().reset_index().sort_values(by='day_week',ascending=True)\ndf = df.iloc[df['day_week'].map(custom_day).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='day_week', y='O3', data=df)","f53437db":"df = df_2017[['CO','day_week','station']].groupby([\"day_week\"]).median().reset_index().sort_values(by='day_week',ascending=True)\ndf = df.iloc[df['day_week'].map(custom_day).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='day_week', y='CO', data=df)","40b81dfc":"frame.month.replace([1,2,3,4,5,6,7,8,9,10,11,12], ['Jan', 'Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'], inplace=True)","c96cb036":"frame['month'].value_counts()","92e73fc6":"custom_dict = {'Jan':0, 'Feb':1,'Mar':2,'Apr':3,'May':4,'Jun':5,'Jul':6,'Aug':7,'Sep':8,'Oct':9,'Nov':10,'Dec':11}\ndf = frame[['SO2','month','station']].groupby([\"month\"]).median().reset_index().sort_values(by='month',ascending=True)\ndf = df.iloc[df['month'].map(custom_dict).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='month', y='SO2', data=df)","1315ec4b":"df = frame[['NO2','month','station']].groupby([\"month\"]).median().reset_index().sort_values(by='month',ascending=True)\ndf = df.iloc[df['month'].map(custom_dict).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='month', y='NO2', data=df)","40cde29e":"df = frame[['O3','month','station']].groupby([\"month\"]).median().reset_index().sort_values(by='month',ascending=True)\ndf = df.iloc[df['month'].map(custom_dict).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='month', y='O3', data=df)","585ea7de":"df = frame[['CO','month','station']].groupby([\"month\"]).median().reset_index().sort_values(by='month',ascending=True)\ndf = df.iloc[df['month'].map(custom_dict).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='month', y='CO', data=df)","fc0032a8":"df = frame[['PM2.5','month','station']].groupby([\"month\"]).median().reset_index().sort_values(by='month',ascending=True)\ndf = df.iloc[df['month'].map(custom_dict).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='month', y='PM2.5', data=df)","56c510bc":"df = frame[['PM10','month','station']].groupby([\"month\"]).median().reset_index().sort_values(by='month',ascending=True)\ndf = df.iloc[df['month'].map(custom_dict).argsort()]\nf,ax=plt.subplots(figsize=(15,5))\nsns.pointplot(x='month', y='PM10', data=df)","555bb426":"frame['station'].value_counts()","7e358ae1":"f = plt.figure(figsize=(30,8))\nsns.boxplot(x='station', y='SO2', data=frame.dropna(axis=0).reset_index())","ec13425c":"f = plt.figure(figsize=(30,8))\nsns.boxplot(x='station', y='NO2', data=frame.dropna(axis=0).reset_index())","d0898cb0":"f = plt.figure(figsize=(30,8))\nsns.boxplot(x='station', y='CO', data=frame.dropna(axis=0).reset_index())","a51f7da8":"f = plt.figure(figsize=(30,8))\nsns.boxplot(x='station', y='O3', data=frame.dropna(axis=0).reset_index())","fc7ca9cf":"converting month values to month name for better understanding","9f8a943c":"# Hourly Analysis of Pollutants in 2017","c268bd4f":"# Imputing Missing Values","970e6a8a":"# Analysis of Pollutants monthwise in a year 2017","33bf5b9e":"# Analysis of Pollutants in day of the week"}}