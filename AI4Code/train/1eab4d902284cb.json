{"cell_type":{"8d022784":"code","29cf3c4b":"code","c8355ab0":"code","3779e226":"code","d5cf2f9c":"code","8078f5c9":"code","82257735":"code","1c62160c":"code","c2038e56":"code","ef8273ad":"code","87e6beb1":"code","b44a747a":"code","bbe51c98":"code","7531374a":"code","680d74c0":"code","e8e656b2":"code","e34576fd":"code","3ec6ea79":"code","9be9df04":"code","f6b88266":"code","b0fbbc92":"code","a65a075a":"code","9333db3b":"markdown","c4edff82":"markdown","049869a0":"markdown","69cfa18a":"markdown","def6ec02":"markdown","80d1667b":"markdown","d08cce3d":"markdown","91e40b0d":"markdown","aaee3ff5":"markdown","d21bd2d7":"markdown","4d6d6814":"markdown","7b65dfc7":"markdown","65d26d49":"markdown","54b04e5f":"markdown","c056d8ec":"markdown","9b8ad2ab":"markdown","77b5ea79":"markdown","c41f56de":"markdown","3f485882":"markdown","b88415d3":"markdown","8544357e":"markdown"},"source":{"8d022784":"import os\nimport cv2\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport sys\n%matplotlib inline","29cf3c4b":"def load_images_from_folder(folder):\n    paths = []\n    for filename in os.listdir(folder):\n        paths.append(folder+'\/'+filename)\n    return paths","c8355ab0":"images = []\npath = \"..\/input\/insect-identification-from-habitus-images\/database\/\"\nfor f in ['9444427','9491931','1037293','4475099']:#os.listdir(path):\n    images += load_images_from_folder(path+f)\nprint(images[0])","3779e226":"def imshow(im):\n    plt.imshow(im,cmap='gray')\n    plt.show() \n\nfig, pltx = plt.subplots(1, 5)\nfor i in range(5):\n    imgtest = cv2.imread(images[i],0)\n    pltx[i].imshow(imgtest,cmap='gray')\nplt.show() ","d5cf2f9c":"imgtest=cv2.imread(images[0],0)","8078f5c9":"def resize(mat):\n    mat2 = cv2.resize(mat, (50,50), interpolation = cv2.INTER_AREA);\n    return mat2\n\nfig, pltx = plt.subplots(1, 2,figsize=(20,20))\npltx[0].imshow(imgtest, cmap='gray');\npltx[1].imshow(resize(imgtest), cmap='gray');\nplt.show();","82257735":"def linearContrast(mat):\n    floatmat = np.float32(mat);\n    contrastFloatMat = (((floatmat)-mat.min())*255\/(mat.max()-mat.min()))\n    return np.uint8(contrastFloatMat)\n\nprint(linearContrast(resize(imgtest)).min())\nprint(linearContrast(resize(imgtest)).max())\nprint(resize(imgtest).min())\nprint(resize(imgtest).max())\nfig, pltx = plt.subplots(1, 2,figsize=(20,20))\npltx[0].imshow(resize(imgtest), cmap='gray');\npltx[1].imshow(linearContrast(resize(imgtest)), cmap='gray');\nplt.show();","1c62160c":"def tryDropBackground(mat):\n    bgr = cv2.split(mat);\n    alpha = (bgr[0]-bgr[0]+255)*(bgr[0]<=150);\n    mat2 = cv2.merge([bgr[0],bgr[0],bgr[0],alpha]);\n    return mat2\ntmat = tryDropBackground(linearContrast(imgtest))\n\nfig, pltx = plt.subplots(1, 2,figsize=(20,20))\npltx[0].imshow(linearContrast(resize(imgtest)), cmap='gray');\npltx[1].imshow(tryDropBackground(linearContrast(resize(imgtest))), cmap='gray');\nplt.show();\n","c2038e56":"def getRotatedPhoto(mat,angle):\n    h,w = mat.shape[:2]\n    M2 = np.array([[1, 0, (max(w, h)-w)\/\/2],[ 0, 1, (max(w, h)-h)\/\/2]],dtype=np.float32);\n    mat = cv2.warpAffine(mat, M2, (max(w, h),max(w, h)))\n    M = cv2.getRotationMatrix2D((max(w, h)\/\/2,max(w, h)\/\/2), angle, 1)\n    mat = cv2.warpAffine(mat, M, (max(w, h),max(w, h)))\n    return mat\n\nimshow(getRotatedPhoto(imgtest,45))","ef8273ad":"i=0\nprint(len(images))\nimagepath = images[0]\ni+=1\nfig, pltx = plt.subplots(1, 4,figsize=(20,20))\n\nmat = imgtest;                                                    pltx[0].imshow(mat, cmap='gray');\nmat = resize(mat);                                                pltx[1].imshow(mat, cmap='gray'); \nmat = linearContrast(mat);                                        pltx[2].imshow(mat, cmap='gray');\nmat = tryDropBackground(mat);                                     pltx[3].imshow(mat, cmap='gray');\nplt.show();\ncv2.imwrite(\"..\/working\/\"+str(i)+\"_\"+str(45)+\".png\",mat);\n\n!ls ..\/working","87e6beb1":"!rm -rf goodphotos\n!mkdir goodphotos\ni=0\nfor imagepath in images:\n    i=i+1\n    src = cv2.imread(imagepath,1)\n    mat = src;                                                        \n    mat = resize(mat); \n    mat = linearContrast(mat);                                       \n    mat = tryDropBackground(mat); \n    cv2.imwrite(\"goodphotos\/\"+str(i)+\".png\",mat);\n\nprint(len(os.listdir(\"goodphotos\")))","b44a747a":"#https:\/\/docs.opencv.org\/4.x\/d7\/d9f\/tutorial_linux_install.html\n!rm -rf opencv opencv.zip\n!wget -O opencv.zip https:\/\/github.com\/opencv\/opencv\/archive\/3.4.15.zip 1> \/dev\/null\n!unzip -qq opencv.zip 1> \/dev\/null\n!mv opencv-3.4.15 opencv\n!ls","bbe51c98":"#https:\/\/stackoverflow.com\/questions\/52117968\/trying-to-compile-opencv-traincascade-for-opencv-3-4-3\n!ls\n!rm -r build\n!mkdir build\n!cd build && cmake \\\n          -BUILD_opencv_apps=ON \\\n          -DCMAKE_BUILD_TYPE=Release \\\n          -DBUILD_opencv_python2=OFF \\\n          -DBUILD_opencv_python3=OFF \\\n          -DINSTALL_C_EXAMPLES=OFF \\\n          -DBUILD_TESTS=OFF \\\n          -DBUILD_PERF_TESTS=OFF \\\n          -DCMAKE_INSTALL_PREFIX=..\/out \\\n          -DBUILD_JAVA=OFF \\\n          -DBUILD_FAT_JAVA_LIB=OFF \\\n          -DENABLE_PYLINT=OFF \\\n          -DENABLE_FLAKE8=OFF \\\n          ..\/opencv 1> \/dev\/null \\\n          && make -j1 1> \/dev\/null \\\n          && make install 1> \/dev\/null\n\n!ls build","7531374a":"!ls build\/bin\/","680d74c0":"filenames = os.listdir(\"goodphotos\")\nprint(filenames[0])\nprint(str(len(filenames))+\" photos\")\noutputstring = \"\"\nfor filename in filenames:\n    mat = cv2.imread(\"goodphotos\/\"+filename)\n    h,w = mat.shape[:2]\n    outputstring+=\"goodphotos\/\"+filename+\" 1 0 0 \"+str(h)+\" \"+str(w)+\"\\r\\n\"\nwith open(\"info.txt\",\"w\") as file:\n    file.write(outputstring)\n!head info.txt","e8e656b2":"!mkdir bgs\n\nfilenames = os.listdir(\"..\/input\/unsplash-random-images-collection\/unsplash-images-collection\")\nprint(filenames[0])\noutputstring = \"\"\nfor filename in filenames:\n    mat = cv2.imread(\"..\/input\/unsplash-random-images-collection\/unsplash-images-collection\/\"+filename)\n    #mat = getMatWithEdges(mat)\n    cv2.imwrite(\"bgs\/\"+filename,mat)\n    \n    outputstring+=\"bgs\/\"+filename+\"\\r\\n\"\nwith open(\"bg.txt\",\"w\") as file:\n    file.write(outputstring)\n!head bg.txt","e34576fd":"\n!.\/build\/bin\/opencv_createsamples \\\n            -info info.txt \\\n            -vec vec.txt \\\n            -bg bg.txt \\\n            -num 400 \\\n            -w 70 -h 70 \\\n            -maxyangle 0.5 \\\n            -maxxangle 0.5","3ec6ea79":"!rm -rf cascade\n!mkdir cascade","9be9df04":"!.\/build\/bin\/opencv_traincascade \\\n            -vec vec.txt \\\n            -bg bg.txt \\\n            -data cascade\\\n            -numPos 100 \\\n            -numNeg 500 \\\n            -w 70 -h 70 \\\n            -numStages 15 \\\n            -maxDepth 1 \\\n            -numThreads 1 \\\n            -featureType HAAR","f6b88266":"import math\ndef pointRotate(x,y,angle):\n    dist = math.hypot(x,y)    \n    angle2 = math.atan2(y,x)\n    x2 = dist*math.cos(angle*3.14\/180+angle2)    \n    y2 = dist*math.sin(angle*3.14\/180+angle2)\n    return (int(x2),int(y2))\npointRotate(0,10,90)","b0fbbc92":"angle = -45\nrmat=np.zeros((100,100,3),np.uint8)\ncv2.line(rmat,(50,50),(80,50),(0,255,0),2)\ncv2.rectangle(rmat,(80,50),(81,51),(0,255,0),7)\nrmat=getRotatedPhoto(rmat,angle)\n(x,y)=pointRotate(80-50,50-50,-angle)\nx=x+50\ny=y+50\ncv2.line(rmat,(x,y),(50,50),(255,0,0),1)\ncv2.rectangle(rmat,(x,y),(x+1,y+1),(255,0,0),3)\nimshow(rmat)","a65a075a":"#https:\/\/docs.opencv.org\/3.4\/db\/d28\/tutorial_cascade_classifier.html\n#https:\/\/www.geeksforgeeks.org\/python-opencv-cv2-rectangle-method\/\ncascade = cv2.CascadeClassifier()\ncascade.load(\"cascade\/cascade.xml\")\nfilenames = os.listdir(\"..\/input\/insects-photos-to-check-my-coursework\")\nfor filename in filenames:\n    mat = getRotatedPhoto(cv2.imread(\"..\/input\/insects-photos-to-check-my-coursework\/\"+filename),0)\n    mat2 = linearContrast(mat);\n    for i in range(0,360,30):\n        mat3 = getRotatedPhoto(mat2,i)\n        rectangles = cascade.detectMultiScale(mat3)\n        for (x,y,w,h) in rectangles:\n            x2=x\n            y2=y+h\n            x3=x+w\n            y3=y+h\n            x4=x+w\n            y4=y\n            centerx = mat3.shape[:2][0]\/\/2            \n            centery = mat3.shape[:2][1]\/\/2\n            x-=centerx\n            y-=centery\n            x2-=centerx\n            y2-=centery\n            x3-=centerx\n            y3-=centery\n            x4-=centerx\n            y4-=centery\n            x,y=pointRotate(x,y,-i)            \n            x2,y2=pointRotate(x2,y2,-i)\n            x3,y3=pointRotate(x3,y3,-i)\n            x4,y4=pointRotate(x4,y4,-i)\n            x+=centerx\n            y+=centery\n            x2+=centerx\n            y2+=centery\n            x3+=centerx\n            y3+=centery\n            x4+=centerx\n            y4+=centery\n            cv2.line(mat,(x,mat3.shape[:2][0]-y),(x2,mat3.shape[:2][0]-y2),(0,255,0),2)      \n            cv2.line(mat,(x2,mat3.shape[:2][0]-y2),(x3,mat3.shape[:2][0]-y3),(0,255,0),2)\n            cv2.line(mat,(x3,mat3.shape[:2][0]-y3),(x4,mat3.shape[:2][0]-y4),(0,255,0),2)\n            cv2.line(mat,(x4,mat3.shape[:2][0]-y4),(x,mat3.shape[:2][0]-y),(0,255,0),2)\n    mat2 = 255-mat2\n    for i in range(0,360,30):\n        mat3 = getRotatedPhoto(mat2,i)\n        rectangles = cascade.detectMultiScale(mat3)\n        for (x,y,w,h) in rectangles:\n            x2=x\n            y2=y+h\n            x3=x+w\n            y3=y+h\n            x4=x+w\n            y4=y\n            centerx = mat3.shape[:2][0]\/\/2\n            centerx = mat3.shape[:2][1]\/\/2\n            x-=centerx\n            y-=centery\n            x2-=centerx\n            y2-=centery\n            x3-=centerx\n            y3-=centery\n            x4-=centerx\n            y4-=centery\n            x,y=pointRotate(x,y,-i)            \n            x2,y2=pointRotate(x2,y2,-i)\n            x3,y3=pointRotate(x3,y3,-i)\n            x4,y4=pointRotate(x4,y4,-i)\n            x+=centerx\n            y+=centery\n            x2+=centerx\n            y2+=centery\n            x3+=centerx\n            y3+=centery\n            x4+=centerx\n            y4+=centery\n            cv2.line(mat,(x,mat3.shape[:2][0]-y),(x2,mat3.shape[:2][0]-y2),(0,255,0),2)      \n            cv2.line(mat,(x2,mat3.shape[:2][0]-y2),(x3,mat3.shape[:2][0]-y3),(0,255,0),2)\n            cv2.line(mat,(x3,mat3.shape[:2][0]-y3),(x4,mat3.shape[:2][0]-y4),(0,255,0),2)\n            cv2.line(mat,(x4,mat3.shape[:2][0]-y4),(x,mat3.shape[:2][0]-y),(0,255,0),2)\n            \n    plt.imshow(mat,cmap='gray')\n    plt.show() \n\n","9333db3b":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f:<\/span>","c4edff82":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u0441 \u043e\u0444\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 OpenCV:<\/span>","049869a0":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 vec.txt - \u0444\u0430\u0439\u043b\u0430, \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u0441\u043a\u0430\u0434\u0430 \u0412\u0438\u043e\u043b\u044b-\u0414\u0436\u043e\u043d\u0441\u0430:<\/div>","69cfa18a":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u0441\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","def6ec02":" <span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432:<\/span>","80d1667b":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","d08cce3d":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","91e40b0d":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0443\u0442\u0438\u043b\u0438\u0442 \u0434\u043b\u044f \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043a\u0438 \u043a\u0430\u0441\u043a\u0430\u0434\u0430 \u0412\u0438\u043e\u043b\u044b-\u0414\u0436\u043e\u043d\u0441\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445:<\/span>","aaee3ff5":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u043d \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","d21bd2d7":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439:<\/span>","4d6d6814":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:<\/span>","7b65dfc7":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u0442\u043e\u0447\u043a\u0438 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0443\u0433\u043e\u043b \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0446\u0435\u043d\u0442\u0440\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 (0;0):<\/div>","65d26d49":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u0442\u043e\u0447\u043a\u0438 \u0438 \u043c\u0430\u0442\u0440\u0438\u0446\u044b:<\/div>","54b04e5f":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0421\u0431\u043e\u0440\u043a\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 OpenCV:<\/span>","c056d8ec":" <span style=\"font-family:Times New Roman; font-size:14pt;\">\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a:<\/span>","9b8ad2ab":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 info.txt - \u0444\u0430\u0439\u043b\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043d\u0430\u0441\u0435\u043a\u043e\u043c\u044b\u0445 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 (\u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0447\u0442\u043e \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u043d\u0430\u0441\u0435\u043a\u043e\u043c\u043e\u0435 \u0438 \u043e\u043d\u043e \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u0432\u0441\u044e \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u0430\u0434\u0440\u0430):<\/div>","77b5ea79":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043f\u0443\u0442\u0435\u0439 \u043a \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u0430\u043c:<\/span>","c41f56de":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 bg.txt - \u0444\u0430\u0439\u043b\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u044b \u043d\u0430\u0441\u0435\u043a\u043e\u043c\u044b\u0435:<\/div>","3f485882":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f:<\/span>","b88415d3":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043a\u0430 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0412\u0438\u043e\u043b\u044b-\u0414\u0436\u043e\u043d\u0441\u0430:<\/div>","8544357e":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430:<\/div>"}}