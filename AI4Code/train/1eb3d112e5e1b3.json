{"cell_type":{"1e4ec0ae":"code","fa88c6ad":"code","183d3cae":"code","d14340ba":"code","72eca051":"code","59a231d7":"code","f26def60":"code","6d64680b":"code","86bda89f":"code","0cf4ad26":"code","44974b3a":"code","61c63f39":"code","24937340":"code","9adb2037":"code","662aa2d3":"code","9dbf17e4":"code","6a735c39":"code","4d528916":"code","6cf0a035":"code","2324ebda":"code","32b0c543":"code","a49d76db":"code","b9f6fa4c":"code","73853cb6":"markdown","22660ef2":"markdown","0ee83a4b":"markdown","b58b51f4":"markdown","51cf8331":"markdown","8215df5a":"markdown","fa319a23":"markdown","821ecc9e":"markdown","eaa05a2d":"markdown","94b0f0c2":"markdown","ad3bfc96":"markdown","d17335fa":"markdown","230261fe":"markdown","f8d16dd9":"markdown","ef8dcea1":"markdown","a2fba7df":"markdown","12328547":"markdown"},"source":{"1e4ec0ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa88c6ad":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv(\"\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")\ndata.head()","183d3cae":"round(data.isnull().sum() \/ len(data), 4)","d14340ba":"data.corr().style.background_gradient(cmap='coolwarm')","72eca051":"data[\"neighbourhood_group\"].value_counts()","59a231d7":"b\u00f6lge = [\"Manhattan\", \"Brooklyn\", \"Queens\", \"Bronx\", \"Staten Island\"]\n\nmanhattan = data.loc[data[\"neighbourhood_group\"] == b\u00f6lge[0]]\nbrooklyn = data.loc[data[\"neighbourhood_group\"] == b\u00f6lge[1]]\nqueens = data.loc[data[\"neighbourhood_group\"] == b\u00f6lge[2]]\nbronx = data.loc[data[\"neighbourhood_group\"] == b\u00f6lge[3]]\nstaten_island = data.loc[data[\"neighbourhood_group\"] == b\u00f6lge[4]]\n\nort_\u00fccretler = [manhattan[\"price\"].mean(), brooklyn[\"price\"].mean(),\n               queens[\"price\"].mean(), bronx[\"price\"].mean(),\n               staten_island[\"price\"].mean()]\n\nort_b\u00f6lge = {\n    \n    \"manhattan\": round(ort_\u00fccretler[0]),\n    \"brooklyn\": round(ort_\u00fccretler[1]),\n    \"queens\": round(ort_\u00fccretler[2]),\n    \"bronx\": round(ort_\u00fccretler[3]),\n    \"staten_island\": round(ort_\u00fccretler[4])\n}\n\nort_b\u00f6lge","f26def60":"sns.barplot(x = b\u00f6lge, y = ort_\u00fccretler)","6d64680b":"sns.scatterplot(x = data[\"latitude\"], y = data[\"longitude\"], data = data,\n               hue = data[\"neighbourhood_group\"])","86bda89f":"manh = []\nmanhattan_index = manhattan.index\n\nfor i in manhattan_index:\n    \n    if manhattan[\"price\"][i] > 350:\n        manh.append(1)\n    else:\n        manh.append(0)\n\nmanhattan[\"yuksek_ucret\"] = manh\nsns.scatterplot(x = manhattan[\"latitude\"], y = manhattan[\"longitude\"],\n               data = manhattan, hue = manhattan[\"yuksek_ucret\"])","0cf4ad26":"br = []\nbrooklyn_index = brooklyn.index\n\nfor i in brooklyn_index:\n    \n    if brooklyn[\"price\"][i] > 200:\n        br.append(1)\n    else:\n        br.append(0)\n\nbrooklyn[\"yuksek_ucret\"] = br\nsns.scatterplot(x = brooklyn[\"latitude\"], y = brooklyn[\"longitude\"],\n               data = brooklyn, hue = brooklyn[\"yuksek_ucret\"])","44974b3a":"que = []\nqueens_index = queens.index\n\nfor i in queens_index:\n    \n    if queens[\"price\"][i] > 200:\n        que.append(1)\n    else:\n        que.append(0)\n\nqueens[\"yuksek_ucret\"] = que\nsns.scatterplot(x = queens[\"latitude\"], y = queens[\"longitude\"],\n               data = queens, hue = queens[\"yuksek_ucret\"])","61c63f39":"bro = []\nbronx_index = bronx.index\n\nfor i in bronx_index:\n    \n    if bronx[\"price\"][i] > 200:\n        bro.append(1)\n    else:\n        bro.append(0)\n\nbronx[\"yuksek_ucret\"] = bro\nsns.scatterplot(x = bronx[\"latitude\"], y = bronx[\"longitude\"],\n               data = bronx, hue = bronx[\"yuksek_ucret\"])","24937340":"sta = []\nstaten_island_index = staten_island.index\n\nfor i in staten_island_index:\n    \n    if staten_island[\"price\"][i] > 150:\n        sta.append(1)\n    else:\n        sta.append(0)\n\nstaten_island[\"yuksek_ucret\"] = sta\nsns.scatterplot(x = staten_island[\"latitude\"], y = staten_island[\"longitude\"],\n               data = staten_island, hue = staten_island[\"yuksek_ucret\"])","9adb2037":"df = pd.concat([manhattan, queens, bronx, staten_island, brooklyn], axis = 0)\nsns.scatterplot(x = df[\"latitude\"], y = df[\"longitude\"],\n               data = df, hue = df[\"yuksek_ucret\"])","662aa2d3":"print(\"Ortalma yorum say\u0131s\u0131: \", round(data[\"number_of_reviews\"].mean()))","9dbf17e4":"data[\"number_of_reviews\"].describe()","6a735c39":"az_yorum = data.loc[data[\"number_of_reviews\"] < 6]\ncok_yorum = data.loc[data[\"number_of_reviews\"] > 5]\n\nyorum_ucret = [az_yorum[\"price\"].mean(), cok_yorum[\"price\"].mean()]\nyorum = [\"Az_Yorum\", \"\u00c7ok_Yorum\"]\n\nsns.barplot(x = yorum, y = yorum_ucret)","4d528916":"round(pd.pivot_table(data = data, values = [\"price\"], index = [\"room_type\"],\n                         aggfunc = \"mean\"))\n\n","6cf0a035":"manhattan_room = round(pd.pivot_table(data = manhattan, values = [\"price\"], \n                                columns = [\"neighbourhood\"], index = [\"room_type\"], \n                                aggfunc = \"mean\", fill_value = 0))\nmanhattan_room","2324ebda":"yabanc\u0131 = [18497228,151728547,133425456,79269209,112439306,55197031,120047243,138349238,201403610,201403610,201403610,201403610,201403610,269078124,\n269078124,269078124,232169947,42804325,122963021,196058543,196058543,196058543,196058543,196058543,\n24755691,125492013,125492013,107234799,265422938,265422938,25915648,25915648,20630497,97044757,97044757,229278227,270327975,270327975,39394883,\n224900105,253640919,236355800,43128266,43128266,43128266,69366248,61303786,20019653,32392762,16828799,204006071,51087754,215116298,\n28996758,245014802,73655921,267933377,8905097,20985328,20985328,43264429,269297229,95642648,95642648,269308830,269822492,218511760,118839768,93315723,269837702,\n104475208,16562278,129324501,224867226,130013537,141400974,115567902,6725061,7107154,23046080,4498389,26819014,56177749,157093664,157093664,\n9352452,1495881,24740606,67211684,40317143,40317143,210779293,210779293,4439578,13422723,94820583,1510920,21653460,21653460,21940002,264618293,17898332,88827816,40219037,4665764,17075886,195803,1319462,1319462,51550484,51550484,250771864,\n79489045,18217011,40225443,14729523,21492250,69131589,7252221,7252221,23684,20161989,67923313,3102648,21279472,123646786,123646786,34075689,34075689,34075689,21383358,40696448,52529356,29599415,49121324,\n231707114,34556469,34556469,24707177,5953913,175166282,960013,10221694,127784473,10238618,11256721,254119216,36522433,7558452,7558452,88329273,19704368,12459436,12459436,163152195,85526404,3879852,152872412,\n51329030]\n\nyabanc\u0131_m\u0131 = []\n\nfor i in data[\"host_id\"]:\n    if i in yabanc\u0131:\n        yabanc\u0131_m\u0131.append(1)\n    else:\n        yabanc\u0131_m\u0131.append(0)\n\n\ndf = data.copy()\ndf[\"yabanc\u0131_m\u0131\"] = yabanc\u0131_m\u0131\n\nprint(\"yabanc\u0131 ort: \", round(df.loc[df[\"yabanc\u0131_m\u0131\"] == 1][\"price\"].mean()),\n      \"yerli ort: \", round(df.loc[df[\"yabanc\u0131_m\u0131\"] == 0][\"price\"].mean()))\n","32b0c543":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom xgboost import XGBRegressor\n\ndata = data.drop([\"id\", \"name\", \"host_name\", \"last_review\"], axis = 1)\ncols = [\"neighbourhood_group\", \"neighbourhood\", \"room_type\"]\n\nle = LabelEncoder()\nfor i in cols:\n    data[i] = le.fit_transform(data[i])\n\nx = data.drop([\"price\"], axis = 1)\ny = data[\"price\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33)\n\nxgb = XGBRegressor()\nxgb.fit(x_train, y_train)\nxgb_tahmin = xgb.predict(x_test)\n\nrmse = np.sqrt(mean_squared_error(y_test, xgb_tahmin))\nr2 = r2_score(y_test, xgb_tahmin)\n\nprint(\"RMSE: \", round(rmse), \"R2 Skor: \", round(r2,4))","a49d76db":"sonuc = pd.DataFrame({'Ger\u00e7ek De\u011ferler': np.array(y_test).flatten(), 'Tahminler': xgb_tahmin.flatten()})\nsonuc.head(10)","b9f6fa4c":"print(\"Te\u015fekk\u00fcrler ! :)\")","73853cb6":"Di\u011fer b\u00f6lgeler i\u00e7in ayn\u0131s\u0131 yaparsak.","22660ef2":"Bu \u00f6rnek \u00e7al\u0131\u015fmadaki bulgular:\n\n* Yerle\u015fim yerlerine g\u00f6re fiyatlarda de\u011fi\u015fik vard\u0131r.\n* Mahallere g\u00f6re fiyatlar de\u011fi\u015fmektedir.\n* Oda tipine g\u00f6re fiyat de\u011fi\u015fmektedir fakat baz\u0131 mahallerde bu durum ters i\u015fleyebilir.\n* Daha fazla yorum yap\u0131lm\u0131\u015f evler daha fazla tercih edilmi\u015f bu y\u00fczden de daha d\u00fc\u015f\u00fck fiyatta olmalar\u0131 muhtemeldir.\n* \u00dccretlerin daha \u00e7ok artt\u0131\u011f\u0131 yer Manhattan ile Brooklyn kesi\u015fimi olan yerlerdir. Bunun d\u0131\u015f\u0131nda k\u0131y\u0131 yerle\u015fim yerlerinde de fiyatlar ortalamadan daha y\u00fcksek olabilir.\n\n\u015eimdi xgboost ile fiyat tahmininde bulunal\u0131m.\n","0ee83a4b":"Daha fazla yorum alan dairelerin \u00fccreti daha d\u015f\u00fck \u00e7\u0131kt\u0131. Bu fiyat d\u00fc\u015f\u00fck ise daha fazla talep ve bu nedenler daha fazla yorum alma durumundan kaynalan\u0131yor diyebiliriz.","b58b51f4":"Yorumlara g\u00f6re \u00fccretin ortalamas\u0131.\n\nGenel ortalaman\u0131n alt\u0131nda ve \u00fcst\u00fcnde yorum alan dairelerin ortalama \u00fccretleri nas\u0131l?","51cf8331":"Datada Newyork \u015fehrine ait 5 farkl\u0131 b\u00f6lge var. Bu b\u00f6lgelerin \u00f6nce ortalama \u00fccretlerine bakal\u0131m.","8215df5a":"Kullan\u0131c\u0131lara g\u00f6re.\n\nBuradaki bak\u0131\u015f a\u00e7\u0131s\u0131 tam olarak do\u011fru mu bilmiyorum ama d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm \u015fey \u015fu data i\u00e7erisinde ilan\u0131 veren ki\u015filerin isimleri mevcut bu isimlerden ki\u015finin yabanc\u0131 olup olmad\u0131\u011f\u0131 \u00e7\u0131karilabilir. Di\u011fer kernellarda insanlar genellikle isim host_id gibi de\u011fi\u015fkenleri datadan en ba\u015fta \u00e7\u0131kar\u0131yorlar ama belkide ki\u015fileri yerli ve yabanc\u0131 diye ay\u0131rabilirsek \u00fccrette de bir farkl\u0131l\u0131k yaratabiliriz. Fakat ne yaz\u0131k ki bunu tam olarak nas\u0131l yapabilece\u011fimi \u00e7\u00f6zemedim.\n\nA\u015fa\u011f\u0131daki kod \u00e7ok yar\u0131m datan\u0131n datam\u0131n\u0131 temsil edemiyor manuel haz\u0131rland\u0131 bu y\u00fczden ne \u00e7ok g\u00fcveniyorum ne de be\u011feniyorum ama yine de payla\u015f\u0131yorum.\n\nA\u015fa\u011f\u0131daki listede bulunan id'lerin isimleri \u00e7ince ve rus\u00e7a alfabelerdeki harflerden olu\u015fuyor. Dedi\u011fim gibi \u00e7ok basit ve manuel olarak alabildiklerim bunlar 159 tane isim yakalayabildim.\n\nFikrim ilan veren yabanc\u0131 ki\u015filerin gecelik \u00fccretleri daha d\u00fc\u015f\u00fck olaca\u011f\u0131 konusunda yani ortlama fiyat\u0131 200 dolar olan bir yerde ayn\u0131 m\u00fchit, ayn\u0131 \u00f6zelliklere sahip ev vs gibi ko\u015fullarda yabanc\u0131 ki\u015filerin \u00f6rne\u011fin 170 dolar veya 180 dolar gibi fiyat verdikleri ama tabikide bunu kesin bir \u015fekilde kan\u0131tlayam\u0131yorum.","fa319a23":"**New York Airbnb Datas\u0131**","821ecc9e":"Mahallere g\u00f6re asl\u0131nda genelden farkl\u0131l\u0131k g\u00f6steren yerler var \u00f6rne\u011fin Financial District payla\u015f\u0131ml\u0131 odalar \u00f6zel odalardan daha pahal\u0131 ayn\u0131 \u015fekilde SoHo'da da durum ayn\u0131 yada Washington Heights'de payla\u015f\u0131ml\u0131 ve \u00f6zel oda fiyat\u0131 birbirine \u00e7ok yak\u0131n.","eaa05a2d":"\u015eimdi \u00f6rne\u011fin en fazla ortalama \u00fccretin oldu\u011fu Manhattan b\u00f6lgesinde y\u00fcksek ve d\u00fc\u015f\u00fck \u00fccretlerin oldu\u011fu yerleri g\u00f6rmeye \u00e7al\u0131\u015fal\u0131m. Belki buradan belirli bir mahalle veya yerle\u015fim yerlerine ait \u00fccret farkl\u0131l\u0131klar\u0131n\u0131 bulabiliriz. \u00d6rne\u011fin mekan\u0131n ana cadde \u00fczerinde olmas\u0131 veya e\u011flence yerlerine mesafesi gibi etkenler onun fiyat\u0131n\u0131 de\u011fi\u015ftiriyor olabilir.","94b0f0c2":"Oda tiplerine g\u00f6re fiyat nas\u0131l de\u011fi\u015fiyor?","ad3bfc96":"Dairelerin \u00fccretleri en fazla iken payla\u015f\u0131ml\u0131 odalar en d\u00fc\u015f\u00fck \u00fccrete sahiptirler.","d17335fa":"Datan\u0131n %50'si 5 yorum alm\u0131\u015f g\u00f6z\u00fck\u00fcyor bu y\u00fczden 5 alt\u0131 ve \u00fcst\u00fc olarak b\u00f6lece\u011fim.","230261fe":"\u00dccretlerin en fazla oldu\u011fu b\u00f6lge Manhattan olarak g\u00f6z\u00fck\u00fcyor \u015fimdi harita \u00fczerinden b\u00f6lgelerin yerlerini g\u00f6relim.","f8d16dd9":"Merhaba,\n\nBu \u00f6rnekte Newyork airbnb a\u00e7\u0131k datas\u0131 ile kiralanan oda\/dairelerin neler oldu\u011funu, kira bedellerini, bedellerin nelere g\u00f6re de\u011fi\u015fti\u011fi gibi data \u00fczerinden \u00e7e\u015fitli \u00e7\u0131kar\u0131mlar yapmaya \u00e7al\u0131\u015faca\u011f\u0131z.","ef8dcea1":"Bunun i\u00e7in Manhattan'da fiyat\u0131n 350 $ \u00fczeri yerleri (tamamen kendi se\u00e7imim de\u011fi\u015ftirilebilir) i\u015faretleyece\u011fim ve belirli bir yerde mi toplanm\u0131\u015flar buna bakaca\u011f\u0131m.","a2fba7df":"\u00d6rne\u011fin Manhattan'\u0131n i\u00e7erisinde bu durum nas\u0131l","12328547":"\u015eimdi hepsini beraber g\u00f6rmek istersek"}}