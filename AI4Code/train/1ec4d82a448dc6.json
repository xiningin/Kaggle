{"cell_type":{"977ac8bf":"code","b5f8ac58":"code","165554d4":"code","4a3b4ed3":"code","2ca2e9fb":"code","59ca6694":"code","bd3c830f":"code","4283a0ab":"code","83b7029e":"code","45da28de":"code","875da79a":"code","48fdc5ea":"code","3b3e93d0":"code","3378eeed":"code","9a139efc":"code","190568fb":"code","9a48d69f":"code","119935c5":"markdown","40e65890":"markdown","eb1a25c6":"markdown","738d2600":"markdown","a31fa243":"markdown","0e091391":"markdown","4dfeb00d":"markdown","3a3b7913":"markdown","097ee560":"markdown","69ab5578":"markdown"},"source":{"977ac8bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sys\nimport os\nimport cv2 as cv\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport skimage\nimport skimage.io\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5f8ac58":"IMAGE_PATH = '..\/\/input\/\/art-pictogram\/\/pictogram\/\/'\nIMAGE_WIDTH = 64\nIMAGE_HEIGHT = 64\nIMAGE_CHANNELS = 1\nRANDOM_STATE = 42","165554d4":"os.listdir(\"..\/\/input\/\/art-pictogram\")","4a3b4ed3":"image_files = list(os.listdir(IMAGE_PATH))\nprint(\"Number of image files: {}\".format(len(image_files)))","2ca2e9fb":"def create_file_name(x):\n    file_name = f\"input_{x[0]}_{x[1]}_{x[2]}.png\"\n    return file_name","59ca6694":"#data_df[\"file\"] = data_df.apply(create_file_name, axis=1)","bd3c830f":"#data_df.head()","4283a0ab":"def read_image_sizes(file_name):\n    image = skimage.io.imread(IMAGE_PATH + file_name)\n    return list(image.shape)","83b7029e":"#m = np.stack(data_df['file'].apply(read_image_sizes))\n#df = pd.DataFrame(m,columns=['w','h'])\n#data_df = pd.concat([data_df,df],axis=1, sort=False)","45da28de":"#print(f\"Images widths #: {data_df.w.nunique()},  heights #: {data_df.h.nunique()}\")\n#print(f\"Images widths values: {data_df.w.unique()},  heights values: {data_df.h.unique()}\")","875da79a":"#data_df.head()","48fdc5ea":"def show_images(df, isTest=False):\n    f, ax = plt.subplots(10,15, figsize=(15,10))\n    for i,idx in enumerate(df.index):\n        dd = df.iloc[idx]\n        image_name = dd['file']\n        image_path = os.path.join(IMAGE_PATH, image_name)\n        img_data = cv.imread(image_path)\n        ax[i\/\/15, i%15].imshow(img_data)\n        ax[i\/\/15, i%15].axis('off')\n    plt.show()","3b3e93d0":"#df = data_df.loc[data_df.suite_id==1].sort_values(by=[\"sample_id\",\"value\"]).reset_index()\n#show_images(df)","3378eeed":"import numpy as np\nimport pandas as pd \nimport cv2\nfrom fastai.vision import *\nfrom wordcloud import WordCloud, STOPWORDS\nfrom collections import Counter\nfrom nltk.corpus import stopwords\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport shutil\nfrom glob import glob\n%matplotlib inline\n!pip freeze > '..\/working\/dockerimage_snapshot.txt'","9a139efc":"#Codes from Paul Mooney https:\/\/www.kaggle.com\/paultimothymooney\/collections-of-paintings-from-50-artists\/data\n\ndef makeWordCloud(df,column,numWords):\n    topic_words = [ z.lower() for y in\n                       [ x.split() for x in df[column] if isinstance(x, str)]\n                       for z in y]\n    word_count_dict = dict(Counter(topic_words))\n    popular_words = sorted(word_count_dict, key = word_count_dict.get, reverse = True)\n    popular_words_nonstop = [w for w in popular_words if w not in stopwords.words(\"english\")]\n    word_string=str(popular_words_nonstop)\n    wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white',\n                          max_words=numWords,\n                          width=1000,height=1000,\n                         ).generate(word_string)\n    plt.clf()\n    plt.imshow(wordcloud)\n    plt.axis('off')\n    plt.show()\n\ndef plotImages(artist,directory):\n    print(artist)\n    multipleImages = glob(directory)\n    plt.rcParams['figure.figsize'] = (15, 15)\n    plt.subplots_adjust(wspace=0, hspace=0)\n    i_ = 0\n    for l in multipleImages[:25]:\n        im = cv2.imread(l)\n        im = cv2.resize(im, (128, 128)) \n        plt.subplot(5, 5, i_+1) #.set_title(l)\n        plt.imshow(cv2.cvtColor(im, cv2.COLOR_BGR2RGB)); plt.axis('off')\n        i_ += 1\n\nnp.random.seed(7)","190568fb":"print(os.listdir(\"..\/input\/art-pictogram\/pictogram\/\"))","9a48d69f":"img_dir='..\/input\/art-pictogram\/pictogram'\npath=Path(img_dir)\ndata = ImageDataBunch.from_folder(path, train=\".\", \n                                  valid_pct=0.2,\n                                  ds_tfms=get_transforms(do_flip=False,flip_vert=False, max_rotate=0,max_lighting=0.3),\n                                  size=299,bs=64, \n                                  num_workers=0).normalize(imagenet_stats)\nprint(f'Classes: \\n {data.classes}')\ndata.show_batch(rows=8, figsize=(40,40))","119935c5":"We have only images so the 3 snippets below may be useful for Other Dataset.\nCheck that each line in the dataset has a corresponding image in the image list. We don't have a csv file to correspond to each image.","40e65890":"#Codes from Gabriel Preda https:\/\/www.kaggle.com\/gpreda\/chinese-mnist-exploratory-data-analysis","eb1a25c6":"#Image sizes.","738d2600":"#Explore image data\n\nCheck how many images are stored in the image folder.","a31fa243":"#Load the data\n\nLet's see first what data files do we have in the root directory.","0e091391":"#Check the distribution of images width and height.","4dfeb00d":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke ","3a3b7913":"#What\u2019s a Pictogram?\n\nThe chemical\u2019s label contains several standardized pieces of information, including a signal word, a hazard statement, health hazard information, manufacturer or distributor contact details, and a pictogram, which is a graphic that visually provides important information to the worker handling the chemical.\n\nWhile all label information is useful, the pictograms are especially valuable if workers hurriedly grab chemicals without taking the time to read a lengthy label. Pictograms are also a practical tool for workers who have trouble reading or who aren\u2019t native English speakers and readers.\n\nThe images, combined with simple language, allow workers to immediately know what dangers the chemical presents. And since the information is always in the same location on labels, it takes less time to find essential details. This can be a lifesaver in case of a spill or if the chemical comes into contact with a worker\u2019s skin, eyes or other body part.\n\nThere are nine pictograms, with eight of them enforced (the environment pictogram is not mandatory).\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRolukQlMCnlWM9aTSyVTfGrSmQCoylF57h2g&usqp=CAU)https:\/\/www.emcins.com\/losscontrol\/insights-d\/2017\/11\/pictograms\/","097ee560":"#Glimpse the dataframe with the new columns.","69ab5578":"#Enter the Pictogram! by Kai Tomboc - December 4, 2018\n\nTake a moment to imagine a world without signs and symbols \u2014 from universal icons such as hearts and smileys to Facebook\u2019s thumbs-up sign.\n\nWill there be confusion and chaos? Or do you think humans will find other ways to communicate?\n\nAccording to literary theorist Kenneth Burke, humans are symbols-based species. In his Theory of Identification, Burke believes that people naturally respond to symbolism in their quest for identity.  For Burke, we use \u201ca symbolic means of inducing cooperation in beings that by nature respond to symbols\u201d in communication.\n\nThe great thing about using signs and symbols in communication, whether it\u2019s for school or business, is they can be both functional and artistic at the same time.\n\nIn today\u2019s era of unlimited data and free-flowing information, we often make the mistake of leaving less time and attention in sharing information through signs and symbols. As a result, you end up with an audience trying to make sense of your cluttered, confusing set of symbols, words, and numbers.\n\nSo now what? Enter the pictogram!https:\/\/www.easel.ly\/blog\/how-to-make-pictograms\/\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTSoUXyFj4dkwV5-o5GmTaS1rdRkcgCTyIUKg&usqp=CAU)easel.ly"}}