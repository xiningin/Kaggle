{"cell_type":{"94862aa2":"code","5cb9b89d":"code","4ae0241b":"code","ba8223fa":"code","1a95f129":"code","663c878c":"code","2f2c4cb1":"code","8a07dd62":"code","0b29b19e":"code","284c7424":"code","7921da19":"code","88ed8b52":"code","ba96cf43":"code","29e074bb":"code","3fe00b8c":"code","78b95e17":"code","df6cf4bd":"code","d96bab65":"code","f00d3900":"markdown","722ce63d":"markdown","f981a7b6":"markdown","ba096f64":"markdown","4665bfae":"markdown","390aad17":"markdown","732b9a71":"markdown","2217b13d":"markdown","6952429b":"markdown","42c55c01":"markdown"},"source":{"94862aa2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5cb9b89d":"path=\"..\/input\/alegeri-locale-bucuresti-2020-geocoded\/PrimariaBucuresti.csv\"\ndf= pd.read_csv(path)","4ae0241b":"df.head()","ba8223fa":"dif_column = -df['DAN NICU\u015eOR DANIEL-voturi'] + df[\"FIREA GABRIELA-PARTIDUL SOCIAL DEMOCRAT-voturi\"]\ndf[\"diferenta\"] = dif_column","1a95f129":"from simple_folium import simple_folium\nhelp(simple_folium)","663c878c":"df.columns","2f2c4cb1":"import folium","8a07dd62":"map_alegeri = folium.Map(location=[44.4174, 26.09],\n                    zoom_start = 12) # Uses lat then lon. The bigger the zoom number, the closer in you get\nmap_alegeri# Calls the map to display","0b29b19e":"map_alegeri = folium.Map(location=[44.4174, 26.09],\n                        tiles = \"Stamen Toner\",\n                        zoom_start = 12)\nmap_alegeri","284c7424":"from folium import plugins\nfrom folium.plugins import HeatMap","7921da19":"heatmapArr = df[['Latitude', 'Longitude','diferenta']].values\n","88ed8b52":"map_alegeri = folium.Map(location=[44.4174, 26.09],\n                    zoom_start = 12) \n\nHeatMap(heatmapArr).add_to(map_alegeri)\n#hm.add_to(map_alegeri)\n# Display the map\nmap_alegeri","ba96cf43":"dif_column2 = df['DAN NICU\u015eOR DANIEL-voturi'] - df[\"FIREA GABRIELA-PARTIDUL SOCIAL DEMOCRAT-voturi\"]\ndf[\"diferenta2\"] = dif_column2","29e074bb":"heatmapArr2 = df[['Latitude', 'Longitude','diferenta2']].values","3fe00b8c":"map_alegeri = folium.Map(location=[44.4174, 26.09],\n                    zoom_start = 12) \n\nHeatMap(heatmapArr2).add_to(map_alegeri)\n#hm.add_to(map_alegeri)\n# Display the map\nmap_alegeri","78b95e17":"from folium import plugins","df6cf4bd":"df.head()","d96bab65":"map_hooray = folium.Map(location=[df.Latitude.median(), df.Longitude.median()],\n                        tiles = \"Stamen Toner\",\n                        zoom_start = 12)\n#colormap = {0.0: 'pink', 0.3: 'blue', 0.5: 'green',  0.7: 'yellow', 1: 'red'}\nHeatMap(heatmapArr2,min_opacity=0.1).add_to(map_hooray)\nHeatMap(heatmapArr,min_opacity=0.1).add_to(map_hooray)\n\n\n\n#hm.add_to(map_alegeri)\n# Display the map\n\nmap_hooray\n","f00d3900":"Center the map\/Centrare Harta","722ce63d":"##Preview of folio script","f981a7b6":"simple_folium(df=df, lat_col=\"Latitude\", lon_col=\"Longitude\", \n              text_cols=[\"DAN NICU\u015eOR DANIEL-voturi\",\"FIREA GABRIELA-PARTIDUL SOCIAL DEMOCRAT-voturi\"], \n              map_name=\"Alegeri Locale Bucuresti\")","ba096f64":"**New Visual Style**\nThanks:\nhttps:\/\/www.kaggle.com\/daveianhickey\/how-to-folium-for-maps-heatmaps-time-data","4665bfae":"**Nicusor DaN**\nHeatmap with weights ","390aad17":"Load simple_folium from utility\u00b6\nThis code is also available as a Kaggle Utility Script. It can be loaded form url under File->Add Utility Script Url: https:\/\/www.kaggle.com\/dannellyz\/simple-folium\/","732b9a71":"#### Data file\nalegeri-locale-bucuresti-2020-geocoded\/PrimariaBucuresti.csv\nA precinct or voting district, in Romania, is the smallest unit into which electoral districts are divided, there are two features for precint: \n* precinct_nr \n* precinct_name","2217b13d":"**Gabriela Firea**\nThe map illustrates low values for the center of the city.","6952429b":"**First and Second Place Heatmap**\nRed: First Place number of Votes\nPurple: Second Place number of Votes","42c55c01":"#### Context\n*Romania held local elections amid the epidemic on Sunday 27 September\nIndependent candidate Nicusor Dan, supported by a center-right coalition made of the ruling National Liberal Party (PNL) and the alliance between Save Romania Union (USR) and the Freedom, Unity and Solidarity Party (PLUS) (USR-PLUS Alliance), won  the race for the Capital's General Mayor office, beating incumbent Mayor Gabriela Firea, vice-chair of the Social Democratic Party (PSD).*\n#### Load the Geocoded File with the partial results:\n"}}