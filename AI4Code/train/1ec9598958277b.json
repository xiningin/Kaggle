{"cell_type":{"e45ad9aa":"code","d9e82348":"code","760bafd3":"code","c8db55dd":"code","12526696":"code","3ac39aab":"code","8053b4bf":"code","7b6b931e":"code","a1747e9a":"code","4b957c38":"code","4c14d6aa":"code","fad91e31":"code","edf0267b":"markdown","73a8d333":"markdown","64cf30a3":"markdown","b69c31fc":"markdown","98f5ffe8":"markdown","9a3cd186":"markdown"},"source":{"e45ad9aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom tqdm import tqdm\nimport numpy as np\nimport pandas as pd\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nimport os\nfrom sklearn.model_selection import train_test_split\n\n# Any results you write to the current directory are saved as output.","d9e82348":"df_train = pd.read_json('..\/input\/train.json')\ndf_test = pd.read_json('..\/input\/test.json')","760bafd3":"df_train.head()","c8db55dd":"#\u5229\u7528\u8bcd\u888b\u5bf9\u7279\u5f81\u8fdb\u884c\u5904\u7406\ndf_train_ing = df_train.ingredients\ndf_test_ing = df_test.ingredients\n\nword_train = [' '.join(x) for x in df_train_ing]\nword_test = [' '.join(x) for x in df_test_ing]\ntfidfvec = TfidfVectorizer(binary=True)\nX_train = tfidfvec.fit_transform(word_train)\nX_test = tfidfvec.transform(word_test)\nY_train = df_train.cuisine","12526696":"X_train, X_val, Y_train, Y_val = train_test_split(X_train, Y_train, train_size=0.85)","3ac39aab":"RF = RandomForestClassifier(n_estimators=900, oob_score=True)\nRF.fit(X_train,Y_train)","8053b4bf":"RF.oob_score_, RF.score(X_val, Y_val)","7b6b931e":"Y_test = RF.predict(X_test)","a1747e9a":"Y_test","4b957c38":"df_output = pd.DataFrame(np.array([df_test.id, Y_test]).T, columns=['id','cuisine']).set_index('id')","4c14d6aa":"df_output.head()","fad91e31":"df_output.to_csv('output_RF.csv')","edf0267b":"\u4f7f\u7528\u968f\u673a\u68ee\u6797\u8fdb\u884c\u8bad\u7ec3","73a8d333":"\u5c06\u6700\u540e\u7ed3\u679c\u8f93\u5165\u4e3aCSV\u6587\u4ef6","64cf30a3":"\u5c06\u8bad\u7ec3\u96c6\u5207\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6","b69c31fc":"\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u9884\u6d4b","98f5ffe8":"\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u5305\u62ec\u5bf9\u4e8e\u5206\u7c7b\u5b57\u7b26\u578b\u7279\u5f81\u8fdb\u884c\u7f16\u7801\u3002","9a3cd186":"\u8bfb\u53d6json\u683c\u5f0f\u6570\u636e"}}