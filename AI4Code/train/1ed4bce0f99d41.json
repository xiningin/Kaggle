{"cell_type":{"614dc636":"code","497744ed":"code","3b73016f":"code","65b2bb56":"code","f27bced9":"code","fcd19d2c":"code","db7ba869":"code","7b21395c":"code","cec469b2":"code","f97dd333":"code","4e5169a1":"code","41a4f058":"code","16113386":"code","d0b0743c":"code","db7bd24e":"markdown","c56e22e0":"markdown","2a009dbd":"markdown","a356b52f":"markdown","4caf72a9":"markdown","acfac345":"markdown","07222683":"markdown","cb98a985":"markdown","d9f4cff5":"markdown","8af05541":"markdown","3eeb7b79":"markdown","2c558d71":"markdown","b47f1350":"markdown","e5d5a221":"markdown","0da58739":"markdown","26d3349a":"markdown","edb8cd8b":"markdown","a7dba188":"markdown","a00f2b27":"markdown"},"source":{"614dc636":"import tensorflow as tf\nfrom keras.preprocessing.image import ImageDataGenerator","497744ed":"tf.__version__","3b73016f":"train_datagen = ImageDataGenerator(\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True)\ntraining_set = train_datagen.flow_from_directory(\n        '..\/input\/cat-and-dogs\/dataset\/training_set',\n        target_size=(64, 64),\n        batch_size=32,\n        class_mode='binary')","65b2bb56":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory(\n    '..\/input\/cat-and-dogs\/dataset\/test_set',                                          target_size = (64, 64),\n    batch_size = 32,\n    class_mode = 'binary')","f27bced9":"cnn = tf.keras.models.Sequential()","fcd19d2c":"cnn.add(tf.keras.layers.Conv2D(\n    filters= 32,\n    kernel_size = 3,\n    activation = 'relu',\n    input_shape = [64,64,3]\n))","db7ba869":"cnn.add(tf.keras.layers.MaxPool2D(\n    pool_size = 2,\n    strides = 2\n))","7b21395c":"cnn.add(tf.keras.layers.Conv2D(\n    filters= 32,\n    kernel_size = 3,\n    activation = 'relu',\n))\ncnn.add(tf.keras.layers.MaxPool2D(\n    pool_size = 2,\n    strides = 2\n))","cec469b2":"cnn.add(tf.keras.layers.Flatten())","f97dd333":"cnn.add(tf.keras.layers.Dense(\n    units=128, \n    activation='relu'\n))","4e5169a1":"cnn.add(tf.keras.layers.Dense(\n    units=1, \n    activation='sigmoid'\n))","41a4f058":"cnn.compile(\n    optimizer = 'adam', \n    loss = 'binary_crossentropy', \n    metrics = ['accuracy']\n    )","16113386":"cnn.fit(\n    x = training_set, \n    validation_data = test_set, \n    epochs = 25\n    )","d0b0743c":"import numpy as np\nfrom keras.preprocessing import image\ntest_image = image.load_img('..\/input\/cat-and-dogs\/dataset\/single_prediction\/cat_or_dog_1.jpg', target_size = (64, 64))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n    prediction = 'dog'\nelse:\n    prediction = 'cat'\nprint(prediction)","db7bd24e":"### Step 4 - Full Connection","c56e22e0":"### Step 5 - Output Layer","2a009dbd":"### Step 2 - Pooling","a356b52f":"### Training the CNN on the Training set and evaluating it on the Test set","4caf72a9":"### Step 3 - Flattening","acfac345":"## Part 4 - Making a single prediction","07222683":"### Step 1 - Convolution","cb98a985":"## Part 1 - Data Preprocessing","d9f4cff5":"# Convolutional Neural Network","8af05541":"## Part 3 - Training the CNN","3eeb7b79":"### Adding a second convolutional layer","2c558d71":"# Hope You like it. I'll be updating this code for finding accuracy of our model on test set so stay tuned.","b47f1350":"Our Model is Trained Well and it identifies test image correctly","e5d5a221":"## Part 2 - Building the CNN","0da58739":"### Importing the libraries","26d3349a":"### Preprocessing the Training set","edb8cd8b":"### Initialising the CNN","a7dba188":"### Compiling the CNN","a00f2b27":"### Preprocessing the Test set"}}