{"cell_type":{"29bb4278":"code","5df2411a":"code","9b3f69b9":"code","0c11d590":"code","7b316f8b":"code","5b0e1b88":"code","46c52c9e":"code","54962d89":"code","ec6f2e5d":"code","9732b48e":"code","b17bd20e":"code","5ba37dd4":"code","fb36991e":"code","214eee67":"code","5d887c21":"code","16c9df47":"code","51785f6b":"code","7aa4b856":"code","aa540794":"code","f30d7b49":"code","026b9961":"code","0a125743":"code","9eb14750":"code","8f02f7dd":"code","2ab1b203":"code","1b9a0dde":"code","f504e30d":"code","05e0fb90":"code","d7a5e4d5":"code","b81d8485":"code","37e492e9":"code","acc1834a":"code","6420ef3e":"markdown","21d99224":"markdown","39ee0aa5":"markdown","906bf11b":"markdown","3907124c":"markdown","a2de12ba":"markdown","5b6997d1":"markdown"},"source":{"29bb4278":"import pandas as pd\ndf=pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","5df2411a":"df.shape","9b3f69b9":"df['Class'].value_counts()\n","0c11d590":"import matplotlib.pyplot as plt","7b316f8b":"def draw_histograms(dataframe, features, rows, cols):\n    fig=plt.figure(figsize=(20,20))\n    for i, feature in enumerate(features):\n        ax=fig.add_subplot(rows,cols,i+1)\n        dataframe[feature].hist(bins=20,ax=ax,facecolor='midnightblue')\n        ax.set_title(feature+\" Distribution\",color='DarkRed')\n        ax.set_yscale('log')\n    fig.tight_layout()  \n    plt.show()\n\ndraw_histograms(df,df.columns,8,4)","5b0e1b88":"#### Independent and Dependent Features\nX=df.drop(\"Class\",axis=1)\ny=df.Class","46c52c9e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nfrom sklearn.model_selection import KFold\nimport numpy as np\nfrom sklearn.model_selection import GridSearchCV\n\n","54962d89":"log_class=LogisticRegression(solver='liblinear')\ngrid={'C':10.0 **np.arange(-2,3),'penalty':['l1','l2']}\ncv=KFold(n_splits=5,random_state=None,shuffle=False)","ec6f2e5d":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.75)","9732b48e":"clf=GridSearchCV(log_class,grid,cv=cv,n_jobs=-1,scoring='f1_macro')\nclf.fit(X_train,y_train)","b17bd20e":"y_pred=clf.predict(X_test)\n","5ba37dd4":"import seaborn as sns\n","fb36991e":"# confusion Matrix\ncm=confusion_matrix(y_test,y_pred)\nconf_matrix=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nplt.figure(figsize = (8,5))\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"YlGnBu\");\n\n","214eee67":"print(accuracy_score(y_test,y_pred))\n\n","5d887c21":"2*0.69*0.72\/(0.72+0.69)\n","16c9df47":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(criterion='gini', max_depth=10, min_samples_split=5, min_samples_leaf=1)\nclassifier.fit(X_train,y_train)","51785f6b":"y_pred=classifier.predict(X_test)","7aa4b856":"# confusion Matrix\ncm=confusion_matrix(y_test,y_pred)\nconf_matrix=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nplt.figure(figsize = (8,5))\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"YlGnBu\");","aa540794":"print(accuracy_score(y_test,y_pred))","f30d7b49":"print(classification_report(y_test,y_pred))\n","026b9961":"from collections import Counter\nCounter(y_train)","0a125743":"from imblearn.under_sampling import RandomUnderSampler  \n\nunder_sampler = RandomUnderSampler()\nX_train_ns,y_train_ns= under_sampler.fit_resample(X_train,y_train)\nprint(\"The number of classes before fit {}\".format(Counter(y_train)))\nprint(\"The number of classes after fit {}\".format(Counter(y_train_ns)))","9eb14750":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier()\nclassifier.fit(X_train_ns,y_train_ns)\n","8f02f7dd":"y_pred=classifier.predict(X_test)","2ab1b203":"# confusion Matrix\ncm=confusion_matrix(y_test,y_pred)\nconf_matrix=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nplt.figure(figsize = (8,5))\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"YlGnBu\");","1b9a0dde":"print(accuracy_score(y_test,y_pred))","f504e30d":"print(classification_report(y_test,y_pred))","05e0fb90":"RANDOM_STATE = 2018\nNUM_ESTIMATORS = 100\ntarget = 'Class'\npredictors = ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\\\n       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19',\\\n       'V20', 'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28',\\\n       'Amount']","d7a5e4d5":"from sklearn.ensemble import AdaBoostClassifier\nclf = AdaBoostClassifier(random_state=RANDOM_STATE,\n                         algorithm='SAMME.R',\n                         learning_rate=0.8,\n                             n_estimators=NUM_ESTIMATORS)","b81d8485":"clf.fit(df[predictors],df['Class'].values)","37e492e9":"y_pred = clf.predict(df[predictors])","acc1834a":"cm = pd.crosstab(df[target].values, y_pred, rownames=['Actual'], colnames=['Predicted'])\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cm, \n            xticklabels=['Not Fraud', 'Fraud'],\n            yticklabels=['Not Fraud', 'Fraud'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Darkblue\", cmap=\"Blues\")\nplt.title('Confusion Matrix', fontsize=8)\nplt.show()","6420ef3e":"**<font size=\"6\">6. AdaBoost Classifier:<font>**","21d99224":"**<font size=\"6\">2. Data Analysis from charts of various distributions<font>**","39ee0aa5":"**<font size=\"6\">1. Importing of Credit Card Fraud Dataset<font>**","906bf11b":"**<font size=\"6\">5. Under Sampling on Unbalanced Data set using RandomUnderSampler<font>**\n","3907124c":"Weighted Neural Network With Keras\nDefine Weights\nFit the model with thos specific weights","a2de12ba":"**<font size=\"6\">4. Random Forest: <font>**","5b6997d1":"**<font size=\"6\">3. Logistic Regression: <font>**"}}