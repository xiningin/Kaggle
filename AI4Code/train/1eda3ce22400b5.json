{"cell_type":{"7c47eb3e":"code","1ab95cf0":"code","5b10f8ef":"code","6ac72601":"code","9ddf030c":"code","a5810339":"code","e976f4ad":"code","1ca72380":"code","fe7fb6db":"code","cb93258d":"code","01e2fbc6":"code","98979445":"code","f6aee481":"code","bba79810":"code","7f9be894":"code","3f395849":"code","22ecb0c7":"markdown","233c97cc":"markdown","dd43691a":"markdown","92b50d56":"markdown","1a0c57a6":"markdown"},"source":{"7c47eb3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport datetime\nimport requests\nimport warnings\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ab95cf0":"icovid = pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\nicovid['Date'] = pd.to_datetime(icovid['Date'],dayfirst = True)\nage_details = pd.read_csv('..\/input\/covid19-in-india\/AgeGroupDetails.csv')\nhospital_beds = pd.read_csv('..\/input\/covid19-in-india\/HospitalBedsIndia.csv')\nindividual_details = pd.read_csv('..\/input\/covid19-in-india\/IndividualDetails.csv')\nicovid.head(3)","5b10f8ef":"confirmed_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\nconfirmed_df.head()\ndeaths_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\nrecovered_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')\nlatest_data = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_daily_reports\/04-04-2020.csv')","6ac72601":"world_confirmed = confirmed_df.iloc[:,-1].sum()\nworld_recovered = recovered_df.iloc[:,-1].sum()\nworld_deaths = deaths_df.iloc[:,-1].sum()\nworld_active = world_confirmed - (world_recovered - world_deaths)\nworld_active\nlabels = ['Active','Recovered','Deceased']\nsizes = [world_active,world_recovered,world_deaths]\ncolor= ['orange','pink','yellow']\nexplode = [0,0,0.2]\nplt.figure(figsize= (15,10))\nplt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=9, explode =explode,colors = color)\nplt.title('World COVID-19 Cases',fontsize = 30)\n","9ddf030c":"plt.figure(figsize=(10,10))\nsizes,labels=[],['Missing', 'Male', 'Female']\nsizes.append(individual_details[\"gender\"].isnull().sum())\nsizes.append(individual_details[\"gender\"].value_counts()[0])\nsizes.append(individual_details[\"gender\"].value_counts()[1])\nplt.pie(sizes,labels=labels,autopct='%1.1f%%',explode=[0,0,0.2],colors=[\"pink\",\"cyan\",\"yellow\"])\nplt.title('Percentage of Gender',fontsize = 20)","a5810339":"plt.figure(figsize=(10,10))\nsizes,labels=[],['Male', 'Female']\nsizes.append(individual_details[\"gender\"].value_counts()[0])\nsizes.append(individual_details[\"gender\"].value_counts()[1])\nplt.pie(sizes,labels=labels,autopct='%1.1f%%',explode=[0,0],colors=[\"cyan\",\"yellow\"],startangle=90)\nplt.title('Percentage of Gender',fontsize = 20)","e976f4ad":"dates = list(confirmed_df.columns[4:])\ndates=list(pd.to_datetime(dates))\ndates_india = dates[8:]\ndates_india\ndf1 = confirmed_df.groupby('Country\/Region').sum()\ndf1=df1.reset_index()\ndf2 = deaths_df.groupby('Country\/Region').sum().reset_index()\ndf3 = recovered_df.groupby('Country\/Region').sum().reset_index()\n","1ca72380":"k = df1[df1['Country\/Region']=='India'].loc[:,'1\/30\/20':]\nindia_confirmed = k.values.tolist()[0] \n\nk = df2[df2['Country\/Region']=='India'].loc[:,'1\/30\/20':]\nindia_deaths = k.values.tolist()[0] \n\nk = df3[df3['Country\/Region']=='India'].loc[:,'1\/30\/20':]\nindia_recovered = k.values.tolist()[0] \n\nplt.figure(figsize= (15,10))\nplt.xticks(rotation = 90 ,fontsize = 11)\nplt.yticks(fontsize = 10)\nplt.xlabel(\"Dates\",fontsize = 20)\nplt.ylabel('Total cases',fontsize = 20)\nplt.title(\"Total Confirmed, Active, Death in India\" , fontsize = 20)\n\nax1 = plt.plot_date(y= india_confirmed,x= dates_india,label = 'Confirmed',linestyle ='-',color = 'b')\nax2 = plt.plot_date(y= india_recovered,x= dates_india,label = 'Recovered',linestyle ='-',color = 'g')\nax3 = plt.plot_date(y= india_deaths,x= dates_india,label = 'Death',linestyle ='-',color = 'r')\nplt.legend();","fe7fb6db":"icovid = pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\n#icovid['Date'] = pd.to_datetime(icovid['Date'],dayfirst = True)\nicovid.drop([\"ConfirmedIndianNational\",\"ConfirmedForeignNational\",\"Time\",\"Sno\"],axis=1,inplace=True)\nicovid.rename(columns={\"State\/UnionTerritory\":\"State\"},inplace=True)\nicovid.head()","cb93258d":"datelist=icovid[\"Date\"].unique()\niconfirm=pd.DataFrame({'Date':datelist})\nfor state in icovid.State.unique():\n        datalist=[]\n        for date in datelist:\n            d=icovid[(icovid[\"Date\"]==date) & (icovid[\"State\"]==state)]\n            if(len(d[\"State\"])>0):\n                datalist.append(d[\"Confirmed\"].values[0])\n            else:\n                datalist.append(0)\n        iconfirm[state]=datalist","01e2fbc6":"iconfirm.head()","98979445":"iconfirmed=iconfirm.set_index(\"Date\")\niconfirmed=iconfirmed.T\niconfirmed.tail()","f6aee481":"icovid.State.unique()","bba79810":"plt.figure(figsize=(20,5))\n#qu=input(\"\\nEnter State to know the maximum number of confirmed case in a particular day:\")\nqu=\"Maharashtra\"\nr=iconfirmed.loc[qu].diff().tolist()\nr.pop(0)\nprint(\"\\nFor\",qu,\"State The maximum number of confirmed cases is\",iconfirmed.loc[qu].diff().max(),\"on\",datelist[r.index(max(r))+1])","7f9be894":"iconfirmed.loc[\"Kerala\"]","3f395849":"#list1=list(input(\"Enter 2 space separated State name for comparative study: \").split(\",\"))\nlist1=[\"West Bengal\",\"Tamil Nadu\"]\nplt.figure(figsize=(20,5))\niconfirmed.loc[list1[1]].plot()\niconfirmed.loc[list1[0]].plot()\nplt.legend()","22ecb0c7":"**INDEX**\nA ON GOING NOTEBOOK\nLOTS OF INTERACTING & INTERESTING INSIGHTS ABOUT CORONA","233c97cc":"On Kaggle we do not have an option for Input so we have to comment out\nthe input part.","dd43691a":"As we see most of the Gender data is missing therefore we ignore those data in the next plot","92b50d56":"I WILL COMPLETE THIS NOTEBOOK VERY QUICKLY TRYING TO DO SOME INTERESTING STUFF","1a0c57a6":"Some More Plottings"}}