{"cell_type":{"d5cea8fe":"code","3cbec016":"code","f06007b9":"code","e167135e":"code","65612106":"code","4b077035":"code","0f7b75fb":"code","1a03ffa5":"code","b42c8f3a":"code","250911bd":"code","03061e82":"code","03b0a33f":"code","d9aff2fb":"code","5ffe69ce":"code","57d1cc3a":"markdown","c74a03a4":"markdown","04e7eb4e":"markdown","f4ea8c2a":"markdown","e91df585":"markdown","697657dc":"markdown","f04ba543":"markdown","e599efcd":"markdown"},"source":{"d5cea8fe":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\nplt.rcParams[\"figure.figsize\"] = (12, 6)","3cbec016":"adult_train = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\", na_values='?', index_col= 0)\nadult_test = pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\", na_values='?', index_col= 0)","f06007b9":"# Explorando a base de dados de treino\nadult_train","e167135e":"# Explorando a base de dados de teste\nadult_test","65612106":"adult_train = adult_train.drop_duplicates(keep='first')","4b077035":"adult_train = adult_train.dropna()","0f7b75fb":"# Quantificando os valores das colunas 'income', 'sex' e 'race'\nadult_train['income'] = LabelEncoder().fit_transform(adult_train['income'])\nadult_train['sex'] = LabelEncoder().fit_transform(adult_train['sex'])\nadult_train['race'] = LabelEncoder().fit_transform(adult_train['race'])\nadult_test['sex'] = LabelEncoder().fit_transform(adult_test['sex'])\nadult_test['race'] = LabelEncoder().fit_transform(adult_test['race'])\n\n# Analisando a correla\u00e7\u00e3o das vari\u00e1veis para determinar quais par\u00e2metros ser\u00e3o usados para treino\nsns.heatmap(adult_train.corr(), annot = True, cmap = 'Reds')\nplt.show()","1a03ffa5":"X_train = adult_train[[\"age\",\"education.num\", \"sex\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]]\nY_train = adult_train.income\n\n# Escolhendo o melhor classificador\nk = 10\nbestknn = KNeighborsClassifier(n_neighbors=10)\nscores = cross_val_score(bestknn, X_train, Y_train, cv=10)\nscoresaux = scores[0]\nlista = [20, 30, 40, 50]\n\nfor k in lista:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    scores = cross_val_score(knn, X_train, Y_train, cv=10)\n    if scores[0] > scoresaux:\n        bestknn = knn\n        bestscores = scores\n    scoresaux = scores[0]","b42c8f3a":"# Exibindo resultados do treino\nbestscores","250911bd":"bestknn.fit(X_train,Y_train)","03061e82":"X_test = adult_test[[\"age\",\"education.num\", \"sex\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]]","03b0a33f":"Y_test = knn.predict(X_test)","d9aff2fb":"Y_test","5ffe69ce":"# Exportando resultados para um arquivo .csv\nresults = pd.DataFrame(data=Y_test).replace(to_replace=[0,1], value=['<=50K','>50K'])\nresults.columns = ['income']\nresults.to_csv(\"resultados.csv\", index = True, index_label = 'Id')","57d1cc3a":"# 2. Prepara\u00e7\u00e3o de dados","c74a03a4":"## 2.2 Remo\u00e7\u00e3o de dados faltantes","04e7eb4e":"# 3.Treino do classificador","f4ea8c2a":"# 4.Teste do classificador","e91df585":"## 2.3 An\u00e1lise de correla\u00e7\u00e3o dos dados","697657dc":"# 5. Resultados","f04ba543":"## 2.1 Remo\u00e7\u00e3o de linhas duplicadas","e599efcd":"# 1. Importando todas as bibliotecas que ser\u00e3o usadas"}}