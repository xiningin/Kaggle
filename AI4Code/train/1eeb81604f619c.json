{"cell_type":{"69533da1":"code","df01fff4":"code","90902a44":"code","43f51b2d":"code","8def7872":"code","c31dd65c":"code","3da5f2d6":"code","901cc18e":"code","24aa7de6":"code","428b846f":"code","5a555583":"code","a1a16ac0":"code","6aea1751":"code","40e879cb":"code","3e78fd10":"code","058266e5":"code","af55a582":"code","ec4c00d4":"code","1f46b104":"code","6bd4313d":"code","e0879db2":"code","93d49d2b":"code","95f7a95c":"code","2dee94ea":"code","6854c52a":"code","508863c0":"code","04cce8d9":"markdown","2532c944":"markdown","5061fcd3":"markdown","a6563a3b":"markdown","5920e7df":"markdown","8886cede":"markdown","1aca6124":"markdown","eec0d01f":"markdown","c96dc028":"markdown","94ca389e":"markdown","d057e017":"markdown","508095fd":"markdown","859c61d4":"markdown","3c34ed30":"markdown","b51b71a9":"markdown","51754965":"markdown","7777d1fa":"markdown","20b683cc":"markdown"},"source":{"69533da1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","df01fff4":"train=pd.read_csv('..\/input\/train.csv')\ntest=pd.read_csv('..\/input\/test.csv')\n","90902a44":"train.head()","43f51b2d":"train.info()","8def7872":"train.describe()","c31dd65c":"test.head()","3da5f2d6":"test.describe()","901cc18e":"test.info()","24aa7de6":"\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","428b846f":"target=train['Survived']","5a555583":"def aloner(d):\n    if d>0:\n        return 1\n    else:\n        return 0\ntrain['Family_Size']=train['SibSp']+train['Parch']\ntrain['Alone']=train['Family_Size'].transform(lambda f:aloner(f))\ntest['Family_Size']=test['SibSp']+test['Parch']\ntest['Alone']=test['Family_Size'].transform(lambda f:aloner(f))","a1a16ac0":"import re\ntrain['Honorific']=train['Name'].transform(lambda f:re.findall('(Mr|Mrs|Master|Miss)',f))\ntest['Honorific']=test['Name'].transform(lambda f:re.findall('(Mr|Mrs|Master|Miss)',f))","6aea1751":"train.Age=pd.cut(train.Age,bins=[-100,0,15,25,35,50,70,100],labels=['invalid','1','2','3','4','5','rest'])\ntest.Age=pd.cut(test.Age,bins=[-100,0,15,25,35,50,70,100],labels=['invalid','1','2','3','4','5','rest'])","40e879cb":"train.Fare=pd.cut(test.Fare,bins=[-100,0,10,50,1000],labels=['invalid','1','2','rest'])\ntest.Fare=pd.cut(test.Fare,bins=[-100,0,10,50,1000],labels=['invalid','1','2','rest'])","3e78fd10":"%%html\n<div class='tableauPlaceholder' id='viz1535710855713' style='position: relative'><noscript><a href='#'><img alt='various features alongside Survived ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic_610&#47;Story1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Titanic_610&#47;Story1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic_610&#47;Story1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535710855713');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1016px';vizElement.style.height='991px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","058266e5":"%%html\n<div class='tableauPlaceholder' id='viz1535718122614' style='position: relative'><noscript><a href='#'><img alt='Story 2 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic2_32&#47;Story2&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Titanic2_32&#47;Story2' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic2_32&#47;Story2&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535718122614');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1016px';vizElement.style.height='991px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","af55a582":"from sklearn.preprocessing import LabelEncoder as le\nfrom sklearn.preprocessing import OneHotEncoder as ohe\nfor c in train.columns:\n    if train[c].dtype=='object' :\n        z1=le().fit_transform(train[c].astype(str))\n        train[c]=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\n        z1=le().fit_transform(test[c].astype(str))\n        test[c]=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(train['Age'].astype(str))\ntrain['Age']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(test['Age'].astype(str))\ntest['Age']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(train['Fare'].astype(str))\ntrain['Fare']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))\nz1=le().fit_transform(test['Fare'].astype(str))\ntest['Fare']=ohe(sparse=False).fit_transform(z1.reshape(len(z1),1))","ec4c00d4":"target=train['Survived']\ntrain=train.drop(['PassengerId','Survived','Name','Ticket','Cabin'],axis=1)\ntest=test[train.columns]","1f46b104":"from scipy.stats import mode\ntrain=train.apply(lambda f:f.fillna(f.mode()[0]))\ntest=test.apply(lambda f:f.fillna(f.mode()[0]))","6bd4313d":"from sklearn.model_selection import train_test_split as tts\nrfC={'n_estimators':[2000,2500,1500],'max_depth':[6]}\n","e0879db2":"xtrain,xtest,ztrain,ztest=tts(train,target,train_size=0.7)","93d49d2b":"from sklearn.model_selection import GridSearchCV as grc\nmodel=grc(RandomForestClassifier(),rfC)\nmodel.fit(xtrain,ztrain)","95f7a95c":"print(model.best_params_,model.best_score_)","2dee94ea":"from sklearn.metrics import accuracy_score as acs\nprint(acs(ztest,model.predict(xtest)))","6854c52a":"a=pd.DataFrame(model.predict(test[train.columns]))\na.index=pd.read_csv('..\/input\/test.csv')['PassengerId']\na.columns=['Survived']\na.index.name='PassengerId'","508863c0":"a.to_csv('result.csv')","04cce8d9":"**VISUALIZATION BY TABLEAU**","2532c944":"1-Generating new features -->Family and Alone","5061fcd3":"**Converting categorical data to numeric form**","a6563a3b":"> **FEATURE ENGINEERING ****\n","5920e7df":"**Checking the accuracy of my model using sklearn.metrics**","8886cede":"**Looking at the description and info of train and test dataset**","1aca6124":"**Converting Target as pandas Series **","eec0d01f":"**Preparing result as csv file**","c96dc028":"4-Converting Fare in binned form","94ca389e":"**Summarizing my findings**","d057e017":"> **After preparing data...its time for prediction ****","508095fd":"**Dropping Some unnecessary Features**\ncabin has more than 70% of the data missing","859c61d4":"**Filling NA values***","3c34ed30":"**We would be using Random Forest Classifier for prediction\nfor this prediciton purpose...i would be dividing train data in train set and validation  dataset in ration  7:3\nWe would be trying to get best set of parameters using gridSearchCV **","b51b71a9":"3-Dividing Age in bins","51754965":"**Reading the train and test dataset ****","7777d1fa":"**Importing Required ML models from sklearn for prediction purposes**","20b683cc":"2-Generating 'Honorific' feature from name feature"}}