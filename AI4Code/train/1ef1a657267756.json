{"cell_type":{"b7fb21d7":"code","492e85ce":"code","60ffb91d":"code","fc893488":"markdown"},"source":{"b7fb21d7":"import numpy as np","492e85ce":"def nearest(l:list) -> list:\n    \n    d = np.inf\n    a, b = 0, 0\n    \n    n = len(l)\n    for i in range(n-1):\n        for j in range(i+1,n):\n            if (l[i][0]-l[j][0]) ** 2 + (l[i][1]-l[j][1]) ** 2 < d:\n                d = (l[i][0]-l[j][0]) ** 2 + (l[i][1]-l[j][1]) ** 2\n                a, b = i, j\n    return round(np.sqrt(d),2), l[a], l[b]\n                ","60ffb91d":"nearest([(1, 1), (-1, -1), (3, 4), (6, 1), (-1, -6), (-4, -3)])","fc893488":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Google.\n\nGiven a set of points (x, y) on a 2D cartesian plane, find the two closest points. For example, given the points [(1, 1), (-1, -1), (3, 4), (6, 1), (-1, -6), (-4, -3)], return [(-1, -1), (1, 1)]."}}