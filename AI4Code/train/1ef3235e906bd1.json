{"cell_type":{"4329bc85":"code","682d5af6":"code","64d1c634":"code","30bcf8d6":"code","ba805e09":"code","a5c1702a":"code","a58902a5":"code","baf9fc6e":"code","1cabe894":"markdown","09a8fcd7":"markdown","b8cbc5d9":"markdown","d4e2e085":"markdown"},"source":{"4329bc85":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","682d5af6":"import itertools\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.stats.api as sms\nfrom scipy.stats import ttest_1samp, shapiro, levene, ttest_ind, mannwhitneyu, pearsonr, spearmanr, kendalltau, \\\n    f_oneway, kruskal\nfrom statsmodels.stats.proportion import proportions_ztest\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 10)\npd.set_option('display.float_format', lambda x: '%.5f' % x)","64d1c634":"df_control = pd.read_excel(\"..\/input\/ab-testingdataset\/ab_testing.xlsx\", sheet_name=\"Control Group\")\ndf_control.head()","30bcf8d6":"df_test = pd.read_excel(\"..\/input\/ab-testingdataset\/ab_testing.xlsx\", sheet_name=\"Test Group\")\ndf_test.head()","ba805e09":"test_stat, pvalue = shapiro(df_control[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","a5c1702a":"test_stat, pvalue = shapiro(df_test[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","a58902a5":"test_stat, pvalue = levene(df_control[\"Purchase\"], df_test[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","baf9fc6e":"test_stat, pvalue = ttest_ind(df_control[\"Purchase\"], df_test[\"Purchase\"], equal_var=True)\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","1cabe894":"* **Yukar\u0131da yer alan kontrol ve test gruplar\u0131n\u0131n p de\u011ferleri 0,05 ten b\u00fcy\u00fck oldu\u011fu i\u00e7in hipotezi reddedemiyoruz yani normallik sa\u011flan\u0131yor ve varyanslar homojendir!**\n* **Bu y\u00fczden bu verilere parametrik test yani t testi uygulayal\u0131m**","09a8fcd7":"> * > H0: M1 = M2 (\u0130ki grup ortalamalar\u0131 aras\u0131nda istatistiksel olarak anlaml\u0131 fark yoktur.\n> * > H1: M1 != M2 (\u0130ki grup ortalamalar\u0131 aras\u0131nda istatistiksel olarak anlaml\u0131 fark yoktur.","b8cbc5d9":"**p value de\u011feri 0,05 ten b\u00fcy\u00fck oldu\u011fu i\u00e7in hipotezi reddedemiyoruz, yani iki grup aras\u0131nda istariksel olarak anlaml\u0131 fark yoktur.**\n* Yeni sistemin eski sisteme oranla \u00e7ok fazla getirisi yoktur, yeni sisteme ge\u00e7mek \u00f6nerilmez. Test yapmaya devam edebiliriz.\n","d4e2e085":"\n> Normallik Varsay\u0131m\u0131\n\n\n* H0: Normal da\u011f\u0131l\u0131m varsay\u0131m\u0131 sa\u011flanmaktad\u0131r.\n* H1:..sa\u011flanmamaktad\u0131r."}}