{"cell_type":{"c532eea4":"code","5704010e":"code","199c2c8f":"code","be61738c":"code","6c6ebf80":"code","523e136b":"code","93d75a41":"code","8b55fd7d":"code","4fde82ca":"code","ce6c3330":"markdown","f8877c82":"markdown"},"source":{"c532eea4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5704010e":"import dask.dataframe as dd\ndf = dd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',low_memory=False,\n                dtype={'row_id': 'int64',\n                        'timestamp': 'int64',\n                        'user_id': 'int32',\n                        'content_id':'int16',\n                       'content_type_id': 'int8',\n                       'task_container_id':'int16',\n                       'user_answer': 'int8',\n                       'answered_correctly':'int8',\n                       'prior_question_elapsed_time':'float32',\n                       'prior_question_had_explanation':'boolean'\n\n                      }\n                )","199c2c8f":"df.dtypes","be61738c":"train = df","6c6ebf80":"!pip install chart_studio\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')","523e136b":"train.columns","93d75a41":"content_acc = train.query('answered_correctly != -1').groupby('content_id')['answered_correctly'].mean().to_dict()","8b55fd7d":"import riiideducation\n\n# You can only call make_env() once, so don't lose it!\nenv = riiideducation.make_env()\niter_test = env.iter_test()\n\ndef add_content_acc(x):\n    if x in content_acc.keys():\n        return content_acc[x]\n    else:\n        return 0.5\n\n\ntest = pd.read_csv(\"\/kaggle\/input\/riiid-test-answer-prediction\/example_test.csv\")\nfor (test, sample_prediction_df) in iter_test:\n    test['answered_correctly'] = test['content_id'].apply(add_content_acc).values\n    env.predict(test.loc[test['content_type_id'] == 0, ['row_id', 'answered_correctly']])","4fde82ca":"test","ce6c3330":"#### some references were taken from Piantic....","f8877c82":"## Loading large training file quickly"}}