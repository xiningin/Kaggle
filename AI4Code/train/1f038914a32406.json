{"cell_type":{"c36b16b8":"code","ec938fab":"code","bad8987a":"code","75fb953d":"code","d51d229c":"code","6532d5ac":"code","e68bde90":"code","15f2e8c0":"code","4ed1ea25":"code","2ff8d5c9":"code","2e336c07":"code","461b1afd":"code","69f6d649":"code","ef1dd338":"code","98b6b760":"markdown","616acf63":"markdown","dcf816e8":"markdown","15650a88":"markdown","d1537d15":"markdown","8e7caf18":"markdown","4b058fcd":"markdown","10bb1212":"markdown","f0b6a9ee":"markdown","43f83e92":"markdown","a2442168":"markdown","24d39dab":"markdown","1072e084":"markdown","f5a1be84":"markdown"},"source":{"c36b16b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ec938fab":"# read BlackFriday.csv file data from input directory and create dataframe named data\ndata = pd.read_csv(\"..\/input\/BlackFriday.csv\")","bad8987a":"# check information about columns data \ndata.info()","75fb953d":"# Let's see first 10 data of dataframe to have knowledge data itself.\ndata.head(10)","d51d229c":"data.Product_Category_2.fillna(0, inplace=True)\ndata.Product_Category_3.fillna(0, inplace=True)","6532d5ac":"# display columns \ndata.columns","e68bde90":"# check statictical information about numeric data columns \ndata.describe()","15f2e8c0":"data.corr()","4ed1ea25":"#correlation map\nf,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()\n","2ff8d5c9":"# define function\ndef setAgeCategory (pAge):\n    if pAge ==  \"0-17\" :\n        return 1\n    elif pAge ==  \"18-25\" :\n        return 2 \n    elif pAge ==  \"26-35\" :\n        return 3\n    elif pAge ==  \"36-45\" :\n        return 4\n    elif pAge ==  \"46-50\" :\n        return 5\n    elif pAge ==  \"51-55\" :\n        return 6\n    elif pAge ==  \"55+\" :\n        return 7\n    else:\n        return 0\n\n# add new columns to data \ndata[\"AgeCategory\"] = data.apply(lambda row: setAgeCategory( row[\"Age\"]),axis=1)\ndata[\"GenderCategory\"] = [1 if each == \"F\" else 0 for each in data.Gender ]\ndata.info()","2e336c07":"# filter people between 46-50(AgeCategory =5), Marital_Status=1 , City_Category =A\ndata1 = data[ (data.AgeCategory ==5 ) & (data.Marital_Status ==1) & (data.City_Category == \"A\")]\ndata1.info()","461b1afd":"# Draw histogram \n# age frequency of data !! locks session ??\n#plt.hist(data.Age,bins=10)\n#plt.xlabel(\"age\")\n#plt.ylabel(\"frequency\")\n#plt.title(\"histogram\")\n#plt.legend()\n#plt.show()\n\n# AgeCategory frequency of data  \nplt.hist(data.AgeCategory,bins=7)\nplt.xlabel(\"AgeCategory\")\nplt.ylabel(\"frequency\")\nplt.title(\"histogram\")\nplt.legend()\nplt.show()\n","69f6d649":"print(data.groupby(['Occupation']).groups.keys())\n\nsf1= data.groupby('Occupation')['Product_Category_1'].sum()\ndataByOcc = pd.DataFrame({'Occupation':sf1.index, 'Product_Category_1':sf1.values})\n\nsf2= data.groupby('Occupation')['Product_Category_2'].sum()\ndataByOcc['Product_Category_2'] =sf2\n\n# for ages \nsf1= data.groupby('AgeCategory')['Product_Category_1'].sum()\ndataByAge = pd.DataFrame({'AgeCategory':sf1.index, 'Product_Category_1':sf1.values})\n\nsf2= data.groupby('AgeCategory')['Product_Category_2'].sum()\ndataByAge['Product_Category_2'] =sf2\n\n","ef1dd338":"# draw line graph in subplot\nplt.subplot(2,2,1)\nplt.plot( dataByOcc.Occupation, dataByOcc.Product_Category_1, color=\"red\", label=\"Product_Category_1\" )\nplt.plot( dataByOcc.Occupation, dataByOcc.Product_Category_2, color=\"blue\", label=\"Product_Category_2\" )\nplt.xlabel(\"Occupation\")\nplt.ylabel(\"Product_Category count\")\n\n# draw scatter graph in subplot\nplt.subplot(2,2,2)\nplt.scatter(dataByOcc.Occupation ,dataByOcc.Product_Category_1, color=\"r\", label=\"Product_Category_1\")\nplt.scatter(dataByOcc.Occupation ,dataByOcc.Product_Category_2, color=\"b\", label=\"Product_Category_2\")\nplt.xlabel(\"Occupation\")\nplt.ylabel(\"Product Counts\")\nplt.title(\"scatter plot\")\nplt.show()\n\n# draw line graph in subplot\nplt.subplot(2,2,3)\nplt.plot( dataByAge.AgeCategory, dataByAge.Product_Category_1, color=\"red\", label=\"Product_Category_1\" )\nplt.plot( dataByAge.AgeCategory, dataByAge.Product_Category_2, color=\"blue\", label=\"Product_Category_2\" )\nplt.xlabel(\"AgeCategory\")\nplt.ylabel(\"Product_Category count\")\n\n# draw scatter graph in subplot\nplt.subplot(2,2,4)\nplt.scatter(dataByAge.AgeCategory ,dataByAge.Product_Category_1, color=\"r\", label=\"Product_Category_1\")\nplt.scatter(dataByAge.AgeCategory ,dataByAge.Product_Category_2, color=\"b\", label=\"Product_Category_2\")\nplt.xlabel(\"AgeCategory\")\nplt.ylabel(\"Product Counts\")\nplt.title(\"scatter plot\")\nplt.show()\n","98b6b760":"Draw 2x2  grid subplot","616acf63":"<a id=\"1\"><\/a> \n# 1. Read and Analize Data by using Pandas library\n\nIn this session , we will also import all libraries which will be used in homework . You can import in anywhere , but now I prefer to do like this ","dcf816e8":"After reading csv file , we will check data by using **info()** method of dataframe , we can see column names and types . <br>\nIf we execute command , we will see there are 537577  entries in file .<br>\nFor Product_Category_1 column , 164278 of 537577 are non-null and that means rest are null<br>\nFor Product_Category_2 column , 370591 of 537577 are non-null and that means rest are null<br>\nOther columns are all full and there is no empty data \n","15650a88":"Get **Occupation** keys and count of Product Category1 and  Product Category2 for occupation","d1537d15":"[**Go to Top**](#0)","8e7caf18":"Seaborn correlation map will help us for selecting features. \nParameters for Seaborn heatmap method :\n    * annot = show numbers in boxes \n    * linewidth = line widths between boxes\n    * fmt = precision after decimal point for correlations\n    * figsize = to size figure, we can draw big or small figure by setting this parametes \n  \n  In this graph below , we will see there is negative correlation between Product_Category_1 and Product_Category_2. That may mean , if somebody buys  Product_Category_1 then (s)he does not buy Product_Category_2  .<br>\n  There is negative correlation between purchase and Product_Category_1.  Number of person who buys more Product_Category_1 is small . Number of person who buys less Product_Category_1 is big ","4b058fcd":"we can see there are NaN mvalues for Product_Category_2 and Product_Category_3. I want to fill them with zero ","10bb1212":"Other way to see column names (but only names not information about data ) is using **columns** variable of dataframe","f0b6a9ee":"[**Go to Top**](#0)","43f83e92":"By using **describe** method of dataFrame , we can learn some statistical information such as mean(average), max, min etc about data ","a2442168":"<a id=\"3\"><\/a>\n# 3. Draw Graphs by using Matplotlib library","24d39dab":"[**Go to Top**](#0)","1072e084":"<a id=\"0\"><\/a> \n# ANALYZE \"BLACK FRIDAY\" DATA\nIn this homework , I will analyze \"Black Friday\" data with Python libraries that I learned so far.\n\n**Content:**\n1. [Read and Analyze Data by using Pandas library](#1)\n2. [Filter Data and Add New Columns](#2)\n3. [Draw Graphs by using Matplotlib library](#3)\n\n\n\n","f5a1be84":"<a id=\"2\"><\/a>\n# 2. Filter Data and Add New Columns\n\n"}}