{"cell_type":{"ddc8b817":"code","c52bb166":"code","8852aafb":"markdown"},"source":{"ddc8b817":"!pip install pulp\nprint('PuLP for Optimization Problem - start')\nfrom pulp import *\nmodel = LpProblem(\"Minimization problem - Scheduling: \", LpMinimize)\ndays = list(range(7))\n\nx = LpVariable.dicts('staff_', days, lowBound=0, cat='Integer')\nmodel += lpSum(x[i] for i in days)\nmodel += x[0] + x[3] + x[4] + x[5] + x[6] >= 20\nmodel += x[0] + x[1] + x[4] + x[5] + x[6] >= 14\nmodel += x[0] + x[1] + x[2] + x[5] + x[6] >= 11\nmodel += x[0] + x[1] + x[2] + x[3] + x[6] >= 15\nmodel += x[0] + x[1] + x[2] + x[3] + x[4] >= 22\nmodel += x[1] + x[2] + x[3] + x[4] + x[5] >= 12\nmodel += x[2] + x[3] + x[4] + x[5] + x[6] >= 25\n\nmodel.solve()","c52bb166":"#Solution\n# The status of the solution is printed to the screen\nprint(\"Model Status:\", LpStatus[model.status])\n\n# Each of the variables is printed with it's resolved optimum value\nfor v in model.variables():\n    print(v.name, \"=\", v.varValue)\n\n# The optimised objective function value is printed to the screen\nprint(\"The optimised objective function= \", value(model.objective))\n\nprint('PuLP for Optimization Problem - end')","8852aafb":"# Supply Chain Analytics in Python\n## A scheduling problem\nThe situation: The expected demand of drivers: {Days_of_week, Numbers_of_drivers_needed = Monday : 20, Tuesday : 14, Wednesday : 11, Thursday : 15, Friday : 22, Saturday : 12, Sunday : 25}\n\n**Objective Function: How many drivers we require to hire**\n\n**Constraints: Each driver works for 5 consecutive days, followed by 2 days off, repeated weekly**\n\nSource: [Datacamp](https:\/\/campus.datacamp.com\/courses\/supply-chain-analytics-in-python)"}}