{"cell_type":{"ce85994f":"code","bd392d35":"code","2df70007":"code","aee86196":"code","a05c46b6":"code","4d2a8c44":"code","a1b83472":"code","4f439f47":"code","1481036b":"code","045d1faa":"code","0c73eb8e":"code","77fb09e7":"code","1d0e55c4":"code","4be27c63":"code","9690f55f":"code","4c093264":"code","5c06e2ed":"code","95973c4f":"code","27e75573":"code","905c8cd0":"code","6f360e27":"code","b2579dab":"code","72562483":"code","d3bda3b5":"markdown","dd627bcf":"markdown","9c10bd57":"markdown","97eef6d4":"markdown","c80a45e2":"markdown"},"source":{"ce85994f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd392d35":"titanic = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntitanic_test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntitanic.head()","2df70007":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","aee86196":"sns.heatmap(titanic.isnull(),yticklabels=False,cbar=False)\n","a05c46b6":"plt.figure(figsize=(12,8))\nsns.boxplot(x='Pclass',y='Age',data=titanic,palette='winter')","4d2a8c44":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass == 1:\n            return 38\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n    ","a1b83472":"\ntitanic['Age'] = titanic[['Age','Pclass']].apply(impute_age,axis=1)","4f439f47":"\nsns.heatmap(titanic.isnull(),yticklabels=False,cbar=False,cmap='viridis')","1481036b":"titanic.drop('Cabin',axis=1,inplace=True)","045d1faa":"titanic.head()","0c73eb8e":"titanic.dropna(inplace = True)","77fb09e7":"titanic.info()","1d0e55c4":"sex = pd.get_dummies(titanic['Sex'],drop_first = True)\nembark = pd.get_dummies(titanic['Embarked'],drop_first=True)","4be27c63":"titanic.drop(['Sex','Embarked','Name','Ticket'],axis = 1,inplace=True)","9690f55f":"titanic = pd.concat([titanic,sex,embark],axis =1)","4c093264":"titanic.head()","5c06e2ed":"from sklearn.model_selection import train_test_split\n","95973c4f":"X_train, X_test, y_train, y_test = train_test_split(titanic.drop('Survived',axis=1), \n                                                    titanic['Survived'], test_size=0.30, \n                                                    random_state=101)","27e75573":"from sklearn.linear_model import LogisticRegression","905c8cd0":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","6f360e27":"prediction = logmodel.predict(X_test)","b2579dab":"from sklearn.metrics import classification_report","72562483":"print(classification_report(y_test,prediction))","d3bda3b5":"# Building a Logistic Regression Model","dd627bcf":"**Cleaning the Data**","9c10bd57":"Converting Categorical Features","97eef6d4":"By heatmap we come to know that there is not much data about Cabin. Hence removing it would be beneficial.","c80a45e2":"We observe that wealthier passengers in the higher class tend to be older and in 3rd class younger people travelled.\nSo average ages are 38, 29 and 24 respectively.We use these ages to impute based on Pclass"}}