{"cell_type":{"bd5af081":"code","fa6e10a1":"code","5a221226":"code","76ab3806":"code","011aef9a":"code","ecd2a2c0":"code","2261ac89":"code","23a15d3e":"code","82b0d74f":"code","179a4d43":"code","74a4fd9f":"code","8cb13846":"code","8594db31":"code","751fe864":"code","97ba2fd2":"code","fb5345cd":"code","e6ccc8df":"markdown","971526c1":"markdown","73a1ea19":"markdown","69c4132b":"markdown","e0037ebb":"markdown","af9f72f2":"markdown","fdc36010":"markdown","4f3857c1":"markdown","e07bfda0":"markdown","122c4eb1":"markdown","e0151c23":"markdown","bad1c545":"markdown"},"source":{"bd5af081":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa6e10a1":"df=pd.read_csv('..\/input\/my-datasets\/advertising.csv')\ndf.head()","5a221226":"df.info()\n#1000 rows with 10 columns\n#data type on right tell us what, if any we need to change for our machine learning model","76ab3806":"df.isnull().sum().sum()","011aef9a":"df.describe()\n#generate descriptive statistics that summarize the central tendency, dispersion and shape of a dataset\u2019s distribution, excluding NaN values.\n\n","ecd2a2c0":"sns.pairplot(df)","2261ac89":"fig, ax = plt.subplots(figsize=(12,12)) \nsns.heatmap(df.corr(),annot=True,cmap=\"YlGnBu\")","23a15d3e":"sns.histplot(df['Age'], kde=False, bins=30)","82b0d74f":"#jointplot showing Area Income versus Age\nsns.jointplot(data=df, x='Age', y='Area Income')","179a4d43":"#jointplot showing kde distributions of Daily Time spent on site vs Age\nsns.jointplot(data=df, x='Age', y='Daily Time Spent on Site', kind='kde', color='blue',fill='True')","74a4fd9f":"#jointplot of Daily Internet Usage vs Daily Time Spent on Site\nsns.jointplot(data=df, x='Daily Internet Usage', y='Daily Time Spent on Site', color='purple')","8cb13846":"#Let's make a pairplot with Clicked on Ad as HUE because we do want to answer that question\nsns.pairplot(df, hue='Clicked on Ad')","8594db31":"df.head(1)","751fe864":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#Split data into features and target\n\nX = df[['Daily Time Spent on Site','Age','Area Income','Daily Internet Usage','Male']] #add nuimerical features\ny = df['Clicked on Ad'] #target column\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\n\n#Train and fit logistic regression model on training set\n\nlrmodel=LogisticRegression()\nlrmodel.fit(X_train, y_train) #training the model\n\n#Make predictions\npredictions = lrmodel.predict(X_test) #predicting values for the testing data off of training data\n#passing in test data as X_test","97ba2fd2":"acc_logreg = round(accuracy_score(predictions, y_test)*100, 2)\nacc_logreg","fb5345cd":"print(classification_report(y_test, predictions))\nprint(confusion_matrix(y_test, predictions))","e6ccc8df":"Histogram normally distribution about 35 years of age","971526c1":"Good precision and recal score, in the 90's\nA few mislabeled data from the confusion matrix at the bottom 8 and 14","73a1ea19":"# LOGISTIC REGRESSION\nA classification algorithim where the response variable is categorical. Example:\nUse a credit score and bank balance to predict whether a customer with default Response varialble = Default or No Default\nUse average rebounds per game and average ponts per game to predicts if a basketball player will get drafted to the NBA Response variable = Drafted or Not Drafted\nBased on square footage and number of bedrooms to predict if a house price will be over 200K Response varialbe = Yes or No\np(X) = e\u03b20 + \u03b21X1 + \u03b22X2 + \u2026 + \u03b2pXp \/ (1 + e\u03b20 + \u03b21X1 + \u03b22X2 + \u2026 + \u03b2pXp)\n\nUse of the probability threshold to classify the observation as either 1 or 0.\n\nFor example, we might say that observations with a probability greater than or equal to 0.5 will be classified as \u201c1\u201d and all other observations will be classified as \u201c0.\u201d\n\n![image.png](attachment:image.png)","69c4132b":"# EXPLORATORY DATA ANALYSIS","e0037ebb":"# SPLIT, TRAIN AND PREDICT THE MODEL","af9f72f2":"And we can kind of see the relationship between the Area Income versus Age.\n\nA little scattered but it does look like there's a trend that the only start earning stuff once you start getting into your 20s which makes sense.\n\nAnd then as you get older into your 30's looks like your income maybe starts to increase but as you get even older than that towards retirement either you start getting no income or it drops.","fdc36010":"Well it looks like to be almost a circular pattern in this paired diagram.\nLooks like we can definitely see two clusters here.  One on the top right -  as you go higher in daily Internet usage and higher in daily time spent on the site.\n\nAnd on the botton left, if you spend less time on the internet you also spend less time on the site.\n\n","4f3857c1":"Correlation between:\n* Clicked on Ad and Age, \n* Daily Internet Usage and Daily Time Spent on Site,\n","e07bfda0":"Let's analyize if a particular internet user **clicked on an advertisement** on a company website. We will try to create a model that will predict whether or not they will click on an ad based off the features of that user.\n\nThis data set contains the following features:\n\n* 'Daily Time Spent on Site': consumer time on site in minutes\n* 'Age': cutomer age in years\n* 'Area Income': Avg. Income of geographical area of consumer\n* 'Daily Internet Usage': Avg. minutes a day consumer is on the internet\n* 'Ad Topic Line': Headline of the advertisement\n* 'City': City of consumer\n* 'Male': Whether or not consumer was male\n* 'Country': Country of consumer\n* 'Timestamp': Time at which consumer clicked on Ad or closed window\n* 'Clicked on Ad': 0 or 1 indicated clicking on Ad\n","122c4eb1":"Can see that there is relationship between Clicked on Ad and areas such as Age, and Daily Time Spent on Site,and Area Income.  These factors seems to have a relationship on whether they clicked on the ad.\nThe blue and orange seperation is a good indicator.","e0151c23":"train test split and we need to train our model.\nChoose features we want to train on - add numerical data.  Can not add strings unless we convert to numeric.","bad1c545":"# EVALUATION METRICS\nAccuracy score and classification report for the model"}}