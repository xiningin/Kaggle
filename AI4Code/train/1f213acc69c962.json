{"cell_type":{"e35b0865":"code","a605a5bf":"code","51941632":"code","55a6829d":"code","54765fb9":"code","d201ce0b":"code","3d9792c7":"code","197fe01a":"code","4dd35e54":"code","d48c8ee7":"code","9c9b59fb":"code","d19b90a7":"code","32f1e06e":"code","0971dcc3":"code","0c11b448":"code","5b0a1ffc":"code","ec3c9ac3":"code","aed8345f":"code","775bb6d1":"code","c4ee1cd8":"code","6ccb0f68":"code","b7c14a50":"code","6ffb26f0":"code","20964330":"code","d30c2115":"code","3c25a707":"code","e9772eb7":"code","5ce762ac":"code","a2795ac6":"code","f6809ad4":"code","2d7ccafe":"code","e8864dac":"code","7df54f67":"code","a54d425f":"code","713dbb8f":"code","ceaf2e3e":"code","f8eb006e":"code","96ad8467":"code","3110e937":"code","76a3dd41":"code","2c9d25da":"code","5f848346":"code","04ee9caa":"code","c71d4b00":"code","2360a20d":"code","9190051d":"code","09581b93":"code","2d9a5c5a":"code","bf39fce3":"markdown"},"source":{"e35b0865":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a605a5bf":"df = pd.read_csv('..\/input\/imdb-dataset-of-50k-movie-reviews\/IMDB Dataset.csv')","51941632":"df.head()","55a6829d":"# one reivew\ndf['review'][0]","54765fb9":"# 10K sample of data\ndf = df.sample(10000)","d201ce0b":"df.shape","3d9792c7":"df.info()","197fe01a":"# replacing the sentiment Positive - 1 and Negtive - 0\ndf['sentiment'].replace({'positive': 1, 'negative': 0}, inplace=True)","4dd35e54":"df.head(2)","d48c8ee7":"# Function to clean html tag\nimport re\nclean = re.compile('<.*?>')\nre.sub(clean, '', df.iloc[1].review)","9c9b59fb":"# function to clean html tag\ndef clean_html(text):\n    clean = re.compile('<.*?>')\n    return re.sub(clean,'', text)","d19b90a7":"df['review'] = df['review'].apply(clean_html)","32f1e06e":"# converting everything to lower case\ndf['review'] = df['review'].apply(lambda x: x.lower())","0971dcc3":"df['review']","0c11b448":"# Function to remove special characters\ndef remove_special(text):\n    x = ''\n    \n    for i in text:\n        if i.isalnum():  # alpha numeric\n            x += i\n        else:\n            x += ' '\n    return x","5b0a1ffc":"remove_special(' the classic 18 = or 18+  use of word.it & is calles ')","ec3c9ac3":"df['review'] = df['review'].apply(remove_special)","aed8345f":"# Remove the stop words\nimport nltk","775bb6d1":"from nltk.corpus import stopwords","c4ee1cd8":"# for example\n\nlen(stopwords.words('english'))","6ccb0f68":"def remove_stopwords(text):\n    x=[]\n    for i in text.split():\n        if i not in stopwords.words('english'):\n            x.append(i)\n            \n    y=x[:]\n    x.clear()\n    return y","b7c14a50":"remove_stopwords('Abhishek is a very good boy')","6ffb26f0":"df['review'] = df['review'].apply(remove_stopwords)","20964330":"df.head()","d30c2115":"# perform steming\nfrom nltk.stem.porter import PorterStemmer\nps = PorterStemmer()","3c25a707":"y = []\ndef stem_words(text):\n    for i in text:\n        y.append(ps.stem(i))\n    z=y[:]\n    y.clear()\n    return z","e9772eb7":"# how stem works\nstem_words(['I', 'loved', 'loving', 'it'])","5ce762ac":"df['review'] = df['review'].apply(stem_words)","a2795ac6":"df","f6809ad4":"# join back\ndf['review'] = df['review'].apply(lambda x: ' '.join(x))","2d7ccafe":"df['review']","e8864dac":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features=1000)","7df54f67":"X = cv.fit_transform(df['review']).toarray()","a54d425f":"X.shape","713dbb8f":"X","ceaf2e3e":"X[0].mean()","f8eb006e":"y = df.iloc[:,-1].values","96ad8467":"y.shape","3110e937":"# Now we split the data in traning and test\nfrom sklearn.model_selection import train_test_split","76a3dd41":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=.2)","2c9d25da":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","5f848346":"# Model training \nfrom sklearn.naive_bayes import GaussianNB, MultinomialNB, BernoulliNB","04ee9caa":"# Craeting object\nclf1 = GaussianNB()\nclf2 = MultinomialNB()\nclf3 = BernoulliNB()","c71d4b00":"clf1.fit(X_train, y_train)\nclf2.fit(X_train, y_train)\nclf3.fit(X_train, y_train)","2360a20d":"y_pred1 = clf1.predict(X_test)\ny_pred2 = clf2.predict(X_test)\ny_pred3 = clf3.predict(X_test)","9190051d":"y_test.shape, y_pred1.shape","09581b93":"from sklearn.metrics import accuracy_score","2d9a5c5a":"print('Gaussian: ', accuracy_score(y_test, y_pred1))\nprint('Multinomial: ', accuracy_score(y_test, y_pred2))\nprint('Bernoulli: ', accuracy_score(y_test, y_pred3))","bf39fce3":"# Text cleaning\n\n1. Sample 10000 rows\n2. Remove html tags\n3. Remove special characters\n4. Converting every thing to lower case\n5. Removing Stop words (the, an, of...)\n6. Stemming"}}