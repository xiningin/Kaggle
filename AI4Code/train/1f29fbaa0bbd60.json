{"cell_type":{"b87e8fb9":"code","cea166d3":"code","68bd8f7a":"code","32fddff5":"code","cabbefdc":"code","160529aa":"code","cdf35055":"code","2a9590e8":"code","695561fd":"code","54c8a8b8":"code","7e55cb59":"code","188bb242":"code","9c59d68a":"code","e185a70c":"code","17bf796c":"code","b9bed670":"code","64d13abe":"code","f1d3850d":"code","6b0a996e":"code","0cbb3c0d":"code","bbc583dc":"code","dd06c06c":"code","503930b1":"code","0a0cbe89":"code","1dc1e08b":"code","988db554":"code","dfa7a9eb":"code","9a6aac42":"code","dc025775":"code","3a15d469":"code","4e1d41fc":"code","477bde38":"code","93583d54":"code","82faf178":"code","5dad6170":"code","efb16c73":"code","ad197f6b":"code","8c771a6b":"code","b5bc8371":"code","b32e086a":"code","adec1660":"code","c8b8bd7a":"code","def48947":"code","293646de":"code","f4f1ea77":"code","d7b818e6":"code","57b69534":"code","306a502d":"code","4075cbe1":"code","18778989":"code","e3ce862e":"code","6dee744c":"code","b19f49b6":"code","e597b07e":"code","51ecaac8":"code","cc79548b":"code","d602bbbd":"code","17699122":"code","31d67a5a":"code","64cd2f80":"code","7502d03a":"code","c80bed19":"code","078b3d92":"code","f0867793":"code","2ff007f6":"code","a9fd4ed0":"code","7945af7b":"code","d43e8bc8":"code","474df55b":"code","be0f66a4":"code","a3d59c61":"code","ff1084ab":"code","a7f820c4":"code","d1ab2b46":"code","cbbc8c14":"code","6abbaaf1":"code","cd35f3ab":"code","f2eda70c":"code","afcfde89":"code","5278f02c":"code","f0f96bdb":"code","3830e1cf":"code","a00a105c":"code","14fbfd16":"code","641fd3c8":"code","7624c6f2":"code","353cc9f4":"code","b09d7b00":"code","6feeed3e":"code","5617e04e":"code","c498333f":"code","a233affd":"code","f6ee7c75":"code","c57c257e":"code","f704ad1f":"code","d252efed":"code","934b1efc":"code","f2eb76e7":"markdown","2bbeeae6":"markdown","f281b1d2":"markdown","890f1124":"markdown","4d18eb12":"markdown","4a3aec9d":"markdown","798a555f":"markdown","e966ac63":"markdown","645e6fb8":"markdown","154cfea8":"markdown","291ec3f0":"markdown","0d092cb1":"markdown"},"source":{"b87e8fb9":"#Import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","cea166d3":"# load dataset\ndf = pd.read_csv(\"..\/input\/6-method\/train.csv\")","68bd8f7a":"df.shape","32fddff5":"df.head(6)","cabbefdc":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","160529aa":"df.head(6)","cdf35055":"df.tail(6)","2a9590e8":"df.info()","695561fd":"df.isnull().sum()","54c8a8b8":"plt.figure(figsize=(12,12))\nsns.heatmap(df.isnull())","7e55cb59":"null_var = df.isnull().sum()\/df.shape[0] *100\nnull_var","188bb242":"drop_columns  = null_var[null_var >17].keys()\ndrop_columns","9c59d68a":"df2_drop_clm=df.drop(columns=drop_columns)","e185a70c":"df2_drop_clm.shape","17bf796c":"sns.heatmap(df2_drop_clm.isnull())","b9bed670":"df3_drop_rows = df2_drop_clm.dropna()","64d13abe":"df3_drop_rows.shape","f1d3850d":"plt.figure(figsize=(25,25))\nsns.heatmap(df3_drop_rows.isnull())","6b0a996e":"df3_drop_rows.isnull().sum().sum()","0cbb3c0d":"df3_drop_rows.select_dtypes(include=['int64','float64']).columns","bbc583dc":"sns.distplot(df['MSSubClass'])","dd06c06c":"sns.distplot(df3_drop_rows['MSSubClass'])","503930b1":"sns.distplot(df['MSSubClass'])\nsns.distplot(df3_drop_rows['MSSubClass'])","0a0cbe89":"num_var = ['MSSubClass', 'LotArea', 'OverallQual', 'OverallCond',\n       'YearBuilt', 'YearRemodAdd', 'MasVnrArea', 'BsmtFinSF1', 'BsmtFinSF2',\n       'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF',\n       'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath',\n       'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces',\n       'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF',\n       'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal',\n       'MoSold', 'YrSold', 'SalePrice']\n\nplt.figure(figsize=(25,25))       \nfor i,var in enumerate(num_var):\n    plt.subplot(9,4,i+1)\n    sns.distplot(df[var], bins=20)\n    sns.distplot(df3_drop_rows[var], bins=20)","1dc1e08b":"df3_drop_rows.select_dtypes(include=['object']).columns","988db554":"pd.concat([df['MSZoning'].value_counts()\/df.shape[0] * 100, \n          df3_drop_rows['MSZoning'].value_counts()\/df3_drop_rows.shape[0] * 100], axis=1,\n         keys=['MSZoning_org', 'MSZoning_clean'])","dfa7a9eb":"def cat_var_dist(var):\n    return pd.concat([df[var].value_counts()\/df.shape[0] * 100, \n          df3_drop_rows[var].value_counts()\/df3_drop_rows.shape[0] * 100], axis=1,\n         keys=[var+'_org', var+'clean'])\n    ","9a6aac42":"cat_var_dist('MSZoning')","dc025775":"df = pd.read_csv(\"..\/input\/6-method\/train.csv\")","3a15d469":"df.shape","4e1d41fc":"pd.set_option('display.max_columns',None)\npd.set_option('display.max_rows',None)","477bde38":"df.head(6)","93583d54":"df.tail(6)","82faf178":"df.info()","5dad6170":"df.isnull().sum()","efb16c73":"missing_value_per = df.isnull().sum()\/df.shape[0] * 100\nmissing_value_per","ad197f6b":"missing_value_clm_gre_20 = missing_value_per[missing_value_per > 20].keys()\nmissing_value_clm_gre_20","8c771a6b":"df2_drop_clm = df.drop(columns=missing_value_clm_gre_20)\ndf2_drop_clm.shape","b5bc8371":"df3_num=df2_drop_clm.select_dtypes(include=['int64','float64'])\ndf3_num.head()\n    ","b32e086a":"plt.figure(figsize=(16,9))\nsns.heatmap(df3_num.isnull())","adec1660":"df3_num[df3_num.isnull().any(axis=1)]","c8b8bd7a":"df3_num.isnull().sum()","def48947":"missing_num_var = [var for var in df3_num.columns if df3_num[var].isnull().sum()>0]\nmissing_num_var","293646de":"plt.figure(figsize=(10,10))\nsns.set()\nfor i, var in enumerate(missing_num_var):\n    plt.subplot(2,2,i+1)\n    sns.distplot(df3_num[var], bins=20, kde_kws={'linewidth':5, 'color':'#DC143C'})","f4f1ea77":"df4_num_mean = df3_num.fillna(df3_num.mean())\ndf4_num_mean.isnull().sum().sum()","d7b818e6":"plt.figure(figsize=(10,10))\nsns.set()\nfor i, var in enumerate(missing_num_var):\n    plt.subplot(2,2,i+1)\n    sns.distplot(df3_num[var], bins=20, kde_kws={'linewidth':8, 'color':'red'}, label=\"Original\",)\n    sns.distplot(df4_num_mean[var], bins=20, kde_kws={'linewidth':5, 'color':'green'},label=\"Mean\",)\n    plt.legend()","57b69534":"df5_num_median = df3_num.fillna(df3_num.median())\ndf5_num_median.isnull().sum().sum()","306a502d":"plt.figure(figsize=(10,10))\nsns.set()\nfor i, var in enumerate(missing_num_var):\n    plt.subplot(2,2,i+1)\n    sns.distplot(df3_num[var], bins=20,hist=False, kde_kws={'linewidth':8, 'color':'red'}, label=\"Original\",)\n    sns.distplot(df4_num_mean[var], bins=20,hist=False, kde_kws={'linewidth':5, 'color':'green'},label=\"Mean\",)\n    sns.distplot(df5_num_median[var], bins=20,hist=False, kde_kws={'linewidth':3, 'color':'k'},label=\"Median\",)\n    plt.legend()","4075cbe1":"for i, var in enumerate(missing_num_var):\n    plt.figure(figsize=(10,10))\n    plt.subplot(3,1,1)\n    sns.boxplot(df[var])\n    plt.subplot(3,1,2)\n    sns.boxplot(df4_num_mean[var])\n    plt.subplot(3,1,3)\n    sns.boxplot(df5_num_median[var])","18778989":"df_concat = pd.concat([df3_num[missing_num_var],df4_num_mean[missing_num_var],df5_num_median[missing_num_var]], axis=1)","e3ce862e":"df_concat[df_concat.isnull().any(axis=1)]","6dee744c":"#Load dataset\ndf = pd.read_csv(\"..\/input\/6-method\/train.csv\")","b19f49b6":"df.shape","e597b07e":"pd.set_option('display.max_columns',None)\npd.set_option('display.max_rows',None)","51ecaac8":"df.head()","cc79548b":"missing_value_clm_gre_20 = ['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature']\ndf2_drop_clm = df.drop(columns=missing_value_clm_gre_20)\ndf2_drop_clm.shape","d602bbbd":"df3_num=df2_drop_clm.select_dtypes(include=['int64','float64'])\ndf3_num.shape","17699122":"df3_num.isnull().sum()","31d67a5a":"num_var_miss = ['LotFrontage', 'MasVnrArea', 'GarageYrBlt']\ndf3_num[num_var_miss][df3_num[num_var_miss].isnull().any(axis=1)]","64cd2f80":"df['LotConfig'].unique()","7502d03a":"df[df.loc[:,'LotConfig'] == \"Inside\"][\"LotFrontage\"].replace(np.nan,df[df.loc[:,'LotConfig'] == \"Inside\"][\"LotFrontage\"].mean())","c80bed19":"df_copy = df.copy()\nfor var_class in df['LotConfig'].unique():\n    df_copy.update(df[df.loc[:,'LotConfig'] == var_class][\"LotFrontage\"].replace(np.nan,df[df.loc[:,'LotConfig'] == var_class][\"LotFrontage\"].mean()))","078b3d92":"df_copy.isnull().sum()","f0867793":"df_copy = df.copy()\nnum_vars_miss = ['LotFrontage', 'MasVnrArea', 'GarageYrBlt']\ncat_vars = ['LotConfig','MasVnrType','GarageType']\nfor cat_var, num_var_miss in zip(cat_vars,num_vars_miss):\n    for var_class in df[cat_var].unique():\n        df_copy.update(df[df.loc[:,cat_var] == var_class][num_var_miss].replace(np.nan,df[df.loc[:,cat_var] == var_class][num_var_miss].mean()))","2ff007f6":"df_copy[num_vars_miss].isnull().sum()","a9fd4ed0":"df_copy[df_copy[['MasVnrType']].isnull().any(axis=1)]","7945af7b":"df_copy[df_copy[['GarageType']].isnull().any(axis=1)]","d43e8bc8":"df_copy = df.copy()\nnum_vars_miss = ['LotFrontage', 'MasVnrArea', 'GarageYrBlt']\ncat_vars = ['LotConfig','Exterior2nd','KitchenQual']\nfor cat_var, num_var_miss in zip(cat_vars,num_vars_miss):\n    for var_class in df[cat_var].unique():\n        df_copy.update(df[df.loc[:,cat_var] == var_class][num_var_miss].replace(np.nan,df[df.loc[:,cat_var] == var_class][num_var_miss].mean()))","474df55b":"df_copy[num_vars_miss].isnull().sum()","be0f66a4":"plt.figure(figsize=(10,10))\nsns.set()\nfor i, var in enumerate(num_vars_miss):\n    plt.subplot(2,2,i+1)\n    sns.distplot(df[var], bins=20, kde_kws={'linewidth':8, 'color':'red'}, label=\"Original\",)\n    sns.distplot(df_copy[var], bins=20, kde_kws={'linewidth':5, 'color':'green'},label=\"Mean\",)\n    plt.legend()","a3d59c61":"df_copy_median = df.copy()\nnum_vars_miss = ['LotFrontage', 'MasVnrArea', 'GarageYrBlt']\ncat_vars = ['LotConfig','Exterior2nd','KitchenQual']\nfor cat_var, num_var_miss in zip(cat_vars,num_vars_miss):\n    for var_class in df[cat_var].unique():\n        df_copy_median.update(df[df.loc[:,cat_var] == var_class][num_var_miss].replace(np.nan,df[df.loc[:,cat_var] == var_class][num_var_miss].median()))","ff1084ab":"df_copy_median[num_vars_miss].isnull().sum()","a7f820c4":"plt.figure(figsize=(10,10))\nsns.set()\nfor i, var in enumerate(num_vars_miss):\n    plt.subplot(2,2,i+1)\n    sns.distplot(df[var], bins=20, kde_kws={'linewidth':8, 'color':'red'}, label=\"Original\")\n    sns.distplot(df_copy[var], bins=20, kde_kws={'linewidth':5, 'color':'green'},label=\"Mean\")\n    sns.distplot(df_copy_median[var], bins=20, kde_kws={'linewidth':3, 'color':'k'},label=\"Median\")\n    plt.legend()","d1ab2b46":"for i, var in enumerate(num_vars_miss):\n    plt.figure(figsize=(10,10))\n    plt.subplot(3,1,1)\n    sns.boxplot(df[var])\n    plt.subplot(3,1,2)\n    sns.boxplot(df_copy[var])\n    plt.subplot(3,1,3)\n    sns.boxplot(df_copy_median[var])","cbbc8c14":"import numpy as np\nimport pandas as pd \nfrom sklearn.impute import SimpleImputer","6abbaaf1":"train = pd.read_csv(\"..\/input\/6-method\/train.csv\")\ntest = pd.read_csv(\"..\/input\/6-method\/test.csv\")\nprint(\"shape of train df = \",train.shape)\nprint(\"shape of test df = \",test.shape)","cd35f3ab":"train.head()","f2eda70c":"X_train=train.drop(columns=\"SalePrice\")\ny_train=train[\"SalePrice\"]\nprint(\"shape of X_train df = \",X_train.shape)\nprint(\"shape of y_train df = \",y_train.shape)","afcfde89":"num_vars=X_train.select_dtypes(include=[\"int64\",\"float64\"]).columns","5278f02c":"num_vars","f0f96bdb":"X_train[num_vars].isnull().sum()","3830e1cf":"imputer_mean = SimpleImputer(strategy='mean')\n#imputer_mean = SimpleImputer(strategy='constant', fill_value=99)","a00a105c":"imputer_mean.fit(X_train[num_vars])","14fbfd16":"imputer_mean.statistics_","641fd3c8":"imputer_mean.transform(X_train[num_vars])","7624c6f2":"X_train[num_vars] = imputer_mean.transform(X_train[num_vars])\ntest[num_vars] = imputer_mean.transform(test[num_vars])","353cc9f4":"X_train[num_vars].isnull().sum()","b09d7b00":"test[num_vars].isnull().sum()","6feeed3e":"cat_vars=X_train.select_dtypes(include=[\"O\"]).columns\ncat_vars","5617e04e":"X_train[cat_vars].isnull().sum()","c498333f":"imputer_mode = SimpleImputer(strategy='most_frequent')\n#imputer_mean = SimpleImputer(strategy='constant', fill_value=99)\nimputer_mode","a233affd":"imputer_mode.fit(X_train[cat_vars])","f6ee7c75":"imputer_mode.statistics_","c57c257e":"X_train[cat_vars] = imputer_mode.transform(X_train[cat_vars])\ntest[cat_vars] = imputer_mode.transform(test[cat_vars])","f704ad1f":"X_train[cat_vars].isnull().sum()","d252efed":"test[cat_vars].isnull().sum()","934b1efc":"X_train.isnull().sum().sum()","f2eb76e7":"# What are the Methods to Handle Missing Values\/Data?","2bbeeae6":"# 1. Ignore Missing Values Row \/ Delete Row & Columns\n\nThis is the simple method to clean missing data by just deleting rows and columns.","f281b1d2":"In general, there are the best 6 methods to handle missing data or values. It is the part of Data Preprocessing and this is the most important step to build Machine Learning\/Data Science project. The following are the most popular methods to handle missing data.\n\n\u2022Ignore missing values row \/ Delete row\n\n\u2022Fill missing value manually\n\n\u2022Use global constant\n\n\u2022Measure of central tendency (Mean, Median & Mode)\n\n\u2022Measure of central tendency for each class\n\n\u2022Most probable value ( ML Algorithms)","890f1124":"# Data Cleaning\nMissing value imputation using Scikit-Learn\nfor Numeric and Categorical Variables\/Data","4d18eb12":"# Numerical Missing Value Imputation","4a3aec9d":"# Numerical Missing Value Imputation By Class","798a555f":"# Categorical Missing Value Imputation ","e966ac63":"# Data Distribution","645e6fb8":"Data is a powerful weapon to handle the world on the finger.","154cfea8":"# Data Cleaning\nMethod - Delete Rows & Columns","291ec3f0":"# Median","0d092cb1":"# Missing value imputation by Mean, Median"}}