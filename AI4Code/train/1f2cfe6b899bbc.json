{"cell_type":{"2c22006f":"code","fb3e0fb4":"code","cc2c5832":"code","6ad739c3":"code","c708e227":"code","0b4eb40f":"code","ca53a37c":"code","313824e3":"code","a5583958":"code","e07543c8":"code","50cc08d2":"code","3dc0ee07":"code","f398a98d":"code","01fdaa6d":"code","d4aba635":"code","aa89f3b6":"code","43ffec2c":"code","76795b75":"markdown","3d816a85":"markdown","3cdbbe3c":"markdown"},"source":{"2c22006f":"import warnings\nwarnings.filterwarnings(\"ignore\")\n    \nimport numpy as np\nimport pandas as pd\nfrom pandas import plotting\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\nfrom sklearn import preprocessing\n\nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nfrom plotly import tools\ninit_notebook_mode(connected = True)\nimport plotly.figure_factory as ff\n\nimport os\nprint(os.listdir('..\/input\/'))","fb3e0fb4":"!pip install xlrd xlwt openpyxl","cc2c5832":"all_data = pd.read_excel('..\/input\/clustering\/for_clustering.xlsx', index_col = 0)\nprint(all_data.shape)\nall_data.head(3)","6ad739c3":"all_data.describe()","c708e227":"def miss(data):\n    miss_data = data.copy(deep = True)\n    miss_data_na = (miss_data.isnull().sum() \/ len(miss_data)) * 100\n    miss_data_na = miss_data_na.drop(miss_data_na[miss_data_na == 0].index).sort_values(ascending = False)[:30]\n    missing_data = pd.DataFrame({'Missing Ratio' :miss_data_na})\n    missing_data\n    return(missing_data)\n\nmiss(all_data).head(5)","0b4eb40f":"all_data.info()","ca53a37c":"all_data = all_data.reset_index()\nall_data.dropna(inplace = True)\nencod_gen = preprocessing.LabelEncoder()\nall_data.Gender = encod_gen.fit_transform(all_data.Gender.values)\nencod_age = preprocessing.LabelEncoder()\nall_data.Age_group = encod_age.fit_transform(all_data.Age_group.values)\nprint(all_data.shape)\nall_data.head(3)","313824e3":"plt.rcParams['figure.figsize'] = (12, 8)\n\n\nplotting.andrews_curves(all_data.sample(frac = 0.015).drop(['Id_client', 'Gender'], axis = 1).astype(int), 'Age_group')\nplt.title('Andrew Curves for Gender', fontsize = 20)\nplt.show()","a5583958":"from sklearn.cluster import KMeans\n\nwcss = []\nfor i in range(1, 11):\n    km = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    km.fit(all_data.sample(frac = 0.05))\n    wcss.append(km.inertia_)\n    \nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method', fontsize = 20)\nplt.xlabel('No. of Clusters')\nplt.ylabel('wcss')\nplt.show()","e07543c8":"data[y_means == 0]","50cc08d2":"data = all_data.sample(frac = 0.03).values\n\nkm = KMeans(n_clusters = 5, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\ny_means = km.fit_predict(data)\n\nplt.scatter(data[y_means == 0, 0], data[y_means == 0, 1], s = 100, c = 'pink')\nplt.scatter(data[y_means == 1, 0], data[y_means == 1, 1], s = 100, c = 'yellow')\nplt.scatter(data[y_means == 2, 0], data[y_means == 2, 1], s = 100, c = 'cyan')\nplt.scatter(data[y_means == 3, 0], data[y_means == 3, 1], s = 100, c = 'magenta')\nplt.scatter(data[y_means == 4, 0], data[y_means == 4, 1], s = 100, c = 'orange')\nplt.scatter(km.cluster_centers_[:,0], km.cluster_centers_[:, 1], s = 50, c = 'blue')\n\nplt.style.use('fivethirtyeight')\nplt.title('K Means Clustering', fontsize = 20)\nplt.xlabel('x')\nplt.ylabel('y')\nplt.legend()\nplt.grid()\nplt.show()","3dc0ee07":"import scipy.cluster.hierarchy as sch\n\ndata = all_data.sample(frac = 0.03).values\n\ndendrogram = sch.dendrogram(sch.linkage(data, method = 'ward'))\nplt.title('Dendrogam', fontsize = 20)\nplt.xlabel('Customers')\nplt.ylabel('Ecuclidean Distance')\nplt.show()","f398a98d":"data = all_data.sample(frac = 0.03)\nx = data[['Age', 'InWeek_amount', 'Count_transac']].values\nkm = KMeans(n_clusters = 5, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\nkm.fit(x)\nlabels = km.labels_\ncentroids = km.cluster_centers_","01fdaa6d":"data['labels'] =  labels\ntrace1 = go.Scatter3d(\n    x= data['Age'],\n    y= data['InWeek_amount'],\n    z= data['Count_transac'],\n    mode='markers',\n     marker=dict(\n        color = data['labels'], \n        size= 10,\n        line=dict(\n            color= data['labels'],\n            width= 12\n        ),\n        opacity=0.8\n     )\n)\ndf = [trace1]\n\nlayout = go.Layout(\n    title = 'Character vs Gender vs Alive or not',\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    ),\n    scene = dict(\n            xaxis = dict(title  = 'Age'),\n            yaxis = dict(title  = 'InWeek_amount'),\n            zaxis = dict(title  = 'Count_transac')\n        )\n)\n\nfig = go.Figure(data = df, layout = layout)\npy.iplot(fig)","d4aba635":"import numpy as np\nfrom sklearn.manifold import TSNE","aa89f3b6":"data = all_data.sample(frac = 0.1).values\ndata_embedded = TSNE(n_components = 2).fit_transform(data)\nprint(data_embedded.shape)\nplt.rcParams['figure.figsize'] = (10.0, 10.0)\nproj = pd.DataFrame(data_embedded)\nproj.columns = [\"comp_1\", \"comp_2\"]\nsns.lmplot(\"comp_1\", \"comp_2\", data = proj ,fit_reg=False)","43ffec2c":"data = all_data.sample(frac = 0.1).values\ndata_embedded = TSNE(n_components = 3).fit_transform(data)\nproj = pd.DataFrame(data_embedded)\nproj.columns = [\"comp_1\", \"comp_2\", \"comp_3\"]\n\n\ntrace1 = go.Scatter3d(\n    x= proj['comp_1'],\n    y= proj['comp_2'],\n    z= proj['comp_3'],\n    mode='markers',\n     marker=dict(\n        size= 10,\n        line=dict(\n            width= 12\n        ),\n        opacity=0.8\n     )\n)\ndf = [trace1]\n\nlayout = go.Layout(\n    title = 'Character vs Gender vs Alive or not',\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    ),\n    scene = dict(\n            xaxis = dict(title  = 'comp_1'),\n            yaxis = dict(title  = 'comp_2'),\n            zaxis = dict(title  = 'comp_3')\n        )\n)\n\nfig = go.Figure(data = df, layout = layout)\npy.iplot(fig)","76795b75":"\u0413\u043b\u044f\u043d\u0435\u043c \u043d\u0430 \u043a\u0440\u0438\u0432\u044b\u0435 \u042d\u043d\u0434\u0440\u044e \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043c. \u041d\u0430\u0433\u043b\u044f\u0434\u043d\u043e \u0447\u0442\u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0440\u0430\u0437\u0431\u0438\u0442\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0433\u0440\u0443\u043f\u043f\u044b","3d816a85":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438","3cdbbe3c":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 exel \u0444\u0430\u0439\u043b\u0430\u043c\u0438"}}