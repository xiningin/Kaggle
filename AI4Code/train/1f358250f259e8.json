{"cell_type":{"a9ef1655":"code","88395fd2":"code","b02438bd":"code","163e0425":"code","8cd787c1":"code","baf21cc8":"code","226dea1a":"code","e7fceedc":"code","d9b1d5b6":"code","ca83e9b6":"code","52ef17f7":"markdown","1d5254d6":"markdown","633688dc":"markdown"},"source":{"a9ef1655":"import pandas as pd\nfrom pandas_profiling import ProfileReport\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","88395fd2":"train = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/train.csv', index_col=0)\nX_test = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/test.csv', index_col=0)\nsubmission = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')","b02438bd":"y_train = train['Survived']\nX_train = train.drop('Survived', axis=1)","163e0425":"profile_train = ProfileReport(X_train, title=\"Pandas Profiling Train Dataset\", explorative=False)","8cd787c1":"profile_train.to_widgets()","baf21cc8":"profile_test = ProfileReport(X_train, title=\"Pandas Profiling Test Dataset\", explorative=False)","226dea1a":"profile_test.to_widgets()","e7fceedc":"X_train = X_train[[\"Pclass\", \"Age\", \"Fare\",\"SibSp\", \"Parch\", \"Sex\", \"Embarked\"]]\nX_test = X_test[[\"Pclass\", \"Age\", \"Fare\",\"SibSp\", \"Parch\", \"Sex\", \"Embarked\"]]","d9b1d5b6":"categorical_features = ['Embarked', 'Sex', 'Pclass']\ncategorical_transformer = OneHotEncoder(handle_unknown='ignore')\n\nnumeric_features = ['Age', 'Fare']\nnumeric_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())])\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('cat', categorical_transformer, categorical_features),\n        ('num', numeric_transformer, numeric_features) ])\n\nclf = RandomForestClassifier(random_state = 42, n_jobs=-1)\n\npipe = Pipeline(steps=[('preprocessor', preprocessor),\n                       ('classifier', clf)])\n\npipe = pipe.fit(X_train,y_train)","ca83e9b6":"submission.loc[:, 'Survived'] = pipe.predict(X_test)\nsubmission.to_csv('submission.csv', index = False)","52ef17f7":"# Random Forest Baseline","1d5254d6":"# Test Profile Report","633688dc":"# Train Profile Report"}}