{"cell_type":{"7bd2b50a":"code","0343cd43":"code","5ed2816a":"code","9b803346":"code","3f7371c9":"code","104ace5c":"code","f26dd2c9":"code","695873dd":"code","172d1df6":"code","5e42a0ee":"code","0384305f":"code","e82c4be8":"code","218f440c":"code","1c5fe494":"code","4426b6af":"code","9875a15b":"code","a6aef021":"code","2c9bd802":"code","00e4adbd":"code","81a42f1d":"code","37799eb1":"code","9cc12314":"code","70824e42":"code","b938fc9c":"code","96b5c02a":"code","0b4bcfbe":"code","07470675":"code","e3c96707":"code","f47e6561":"code","4132bc91":"code","b9f10363":"code","3e6f3374":"code","2010e300":"code","9f2378a9":"code","6fc1bfc0":"code","6aecaceb":"code","c6c753a5":"code","86f284a6":"code","d28aedfe":"code","c4041c29":"code","f147d906":"code","1d276e07":"code","9bdfeb58":"code","07b7958a":"code","d73ed341":"code","53799758":"code","398e9091":"code","1651e796":"code","5c9d933c":"code","1352c3b4":"code","425f4df8":"code","a500dd3a":"code","b39396dd":"code","14e8597d":"code","84bc2af1":"code","5fcfc749":"code","ebdc3e8e":"code","93edd670":"code","2ef1c25a":"code","0f3edc08":"code","e2bc639d":"code","830db70f":"code","6ee5ecf7":"code","0b24e0b3":"code","8d18f7b6":"code","729cd59e":"code","8d44fad8":"code","1f41ce45":"code","a9383f88":"code","2dce7ffd":"code","ee35975d":"code","c1e21ef6":"code","40ff2d27":"code","c2a8608c":"code","8a217524":"code","7acbce91":"code","1e31ab66":"code","840b4a38":"code","7a49da8c":"code","e187e15d":"code","8be407c5":"code","1e59b68a":"code","427aa98c":"code","8965ff93":"code","8085531c":"code","09b4847f":"code","0e1db1ee":"code","660e4a49":"code","7ad8b8ad":"code","93a137f9":"code","397ab450":"code","f5322f2c":"code","02485e5f":"code","ce98a6fd":"code","cc8d09b4":"code","45f79c8f":"code","dd2c5a1b":"code","0f93242a":"code","1535edd9":"code","7a8921ee":"code","475d3e95":"code","103f18b2":"code","512357e9":"code","87161a17":"code","b48232d2":"code","a35f1202":"code","bba587a9":"code","cde1276c":"code","ab6bf71a":"code","f862be2f":"code","25c2513b":"code","fb699392":"code","5fcbc274":"code","1cd29eb0":"code","f653334b":"code","8e32beef":"code","1a057da1":"code","7dc71a39":"code","b94893ab":"code","36236567":"code","f7855c95":"code","847392ed":"code","48a602b3":"code","7d3883d6":"code","171b6eea":"code","9d42d415":"code","622aa158":"code","0f6dc93d":"code","e86cec2e":"code","6d21b3d5":"code","3982f659":"code","08fd8978":"code","e73470af":"code","8965084a":"code","f4af114f":"code","a845ef52":"code","740d936c":"code","de51697c":"code","4e34a208":"code","9ea34e37":"code","432c2623":"code","bee39122":"code","9716f696":"code","8cf63e6d":"code","7a98260f":"code","7b798383":"code","d7d63e55":"code","00e4527f":"code","561e48dc":"code","fd3d1dd5":"code","e0cbf1c5":"code","5b09922d":"code","7907d78e":"code","a6591af3":"code","bde80605":"code","99a71a76":"code","854dbe64":"code","fa4bbd79":"code","6ad14e13":"code","9381c31a":"code","97a18be2":"code","5583a202":"code","daa79b69":"code","7c720cfa":"code","1289b289":"code","cd831644":"code","28e2224b":"code","68668fc2":"code","fb718573":"code","28c03c5d":"code","2082521d":"code","3c30fa43":"code","05ea0afa":"code","de14f2ee":"code","a24b6a38":"code","95699aba":"code","b812da7a":"code","b2c94768":"code","f43c95b1":"code","cce043d7":"code","757db967":"code","fa19898e":"code","fe9f61c3":"code","29c4964c":"code","3f5fc85d":"code","efd0476c":"code","70332ddd":"code","1eb4a83d":"code","fe58fb39":"code","b4964d17":"code","75395da2":"code","f71681c6":"code","fad0a0cf":"code","79b2caf2":"code","acb79a6d":"code","c080940b":"code","25b0434c":"code","807bf135":"code","94d9be81":"code","be833c2a":"code","3a3a1df0":"code","429d0668":"code","2fafc1c8":"code","db710959":"code","c96c5b77":"code","abf81ecf":"code","01d739d4":"code","a942a32b":"code","00525719":"code","8aa68cc3":"code","b114ce90":"code","66ac1f56":"code","0265a576":"code","d6a193a1":"code","f7a798da":"code","c366d8ff":"code","5545873d":"code","db736f59":"code","72beba7d":"code","09939f31":"code","95562576":"code","cc226e06":"code","f8baa90e":"code","0836c03b":"code","a88a4232":"code","757f7bfe":"code","66776378":"code","54631810":"code","b9fb5291":"code","1e168ebb":"code","8f5de155":"code","ef1abb78":"code","c3b5d454":"code","6272cc6b":"code","53a8944b":"code","f9b09883":"code","b07e847e":"markdown","3c5cfaf5":"markdown","eee6081b":"markdown","70335124":"markdown","a0807eb7":"markdown","acbcecb5":"markdown","ab6a096e":"markdown","fb430920":"markdown","1d5c467b":"markdown","c85f8a25":"markdown","2f6e58b5":"markdown","85cfedb9":"markdown","7071abd5":"markdown","87906332":"markdown","754025f7":"markdown","c5bb5728":"markdown","e1569d2d":"markdown","923d94b3":"markdown","ea0583e9":"markdown","d30a1d19":"markdown","5d561e37":"markdown","53288568":"markdown","419e4365":"markdown","24ce4673":"markdown","c7b714e8":"markdown"},"source":{"7bd2b50a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nfrom matplotlib import cbook, rc_params_from_file, rcParamsDefault\nimport plotly.express as px\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn import metrics\nimport squarify\n\n#classifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error,r2_score, mean_absolute_error\n\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import *\n\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0343cd43":"train = pd.read_csv(r\"\/kaggle\/input\/big-mart-sales-prediction\/Train.csv\")\ntest = pd.read_csv(r\"\/kaggle\/input\/big-mart-sales-prediction\/Test.csv\")","5ed2816a":"print(train.shape)\ntrain.head()","9b803346":"train.info()","3f7371c9":"print(test.shape)\ntest.head()","104ace5c":"test.info()","f26dd2c9":"df = pd.concat([train, test],ignore_index=True)\nprint(train.shape, test.shape, df.shape)","695873dd":"print(df.shape)\ndf.head()","172d1df6":"df.notnull().tail()","5e42a0ee":"df.dropna(how = 'any').shape","0384305f":"df.duplicated().sum()","e82c4be8":"df.loc[df.duplicated(keep = 'last'), :]","218f440c":"df.loc[df.duplicated(keep = False), :]","1c5fe494":"df.drop_duplicates(keep = 'first').shape","4426b6af":"df.drop_duplicates(keep = 'last').shape","9875a15b":"df.drop_duplicates(keep = False).shape","a6aef021":"df.drop_duplicates(subset = ['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', \n                             'Outlet_Identifier', 'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type','Outlet_Type', \n                             'Item_Outlet_Sales']).shape","2c9bd802":"df.info()","00e4adbd":"df.columns","81a42f1d":"df.isnull().sum()","37799eb1":"df['Item_Weight'] = df['Item_Weight'].fillna(df['Item_Weight'].mode()[0])\ndf['Outlet_Size'] = df['Outlet_Size'].fillna(df['Outlet_Size'].mode()[0])","9cc12314":"df.isnull().sum()","70824e42":"df.nunique()","b938fc9c":"#Filter categorical variables\ncategorical_columns = [x for x in df.dtypes.index if df.dtypes[x]=='object']\n#Exclude ID cols and source:\ncategorical_columns = [x for x in categorical_columns if x not in ['Item_Identifier','Outlet_Identifier','source']]\n#Print frequency of categories\nfor col in categorical_columns:\n    print('\\nFrequency of Categories for varible %s'%col)\n    print(df[col].value_counts())","96b5c02a":"df.apply(lambda x: x.dtype)","0b4bcfbe":"df.columns.to_series().groupby(df.dtypes).groups","07470675":"round((df.apply(lambda x:x.isnull().sum())\/len(df))*100,2)","e3c96707":"total_miss = df.isnull().sum()\nperc_miss = total_miss\/df.isnull().count()*100\n\nmissing_data = pd.DataFrame({'Total missing':total_miss,'% missing':perc_miss})\n\nmissing_data.sort_values(by='Total missing',ascending=False).head(3)","f47e6561":"(df.isnull().sum()\/len(df))*100","4132bc91":"# find the unique values from categorical features\nfor col in df.select_dtypes(include='object').columns:\n    print(col)\n    print(df[col].unique())","b9f10363":"for column in df.columns:\n    print(column,df[column].nunique())","3e6f3374":"categorical_features = [feature for feature in df.columns if ((df[feature].dtypes=='O') & (feature not in ['deposit']))]\ncategorical_features","2010e300":"for feature in categorical_features:\n    print('The feature is {} and number of categories are {}'.format(feature,len(df[feature].unique())))","9f2378a9":"numerical_data = df.select_dtypes(include=np.number) # select_dtypes selects data with numeric features\nnumerical_col = numerical_data.columns \n\nprint(\"Numeric Features:\")\nprint(numerical_data.head())\nprint(\"====\"*20)","6fc1bfc0":"categorical_data = df.select_dtypes(exclude=np.number) # we will exclude data with numeric features\ncategorical_col = categorical_data.columns                          # we will store the categorical features in a variable\n\nprint(\"Categorical Features:\")\nprint(categorical_data.head())\nprint(\"====\"*20)","6aecaceb":"### numerical \nnumerical_cols = list(df.select_dtypes(exclude=['object']))\nnumerical_cols","c6c753a5":"### categorical\ncategorical_cols = list(df.select_dtypes(include=['object']))\ncategorical_cols","86f284a6":"#Check target label split over categorical features and find the count\nfor categorical_feature in categorical_features:\n    print(df.groupby(['Item_Outlet_Sales',categorical_feature]).size())","d28aedfe":"# list of numerical variables\nnumerical_features = [feature for feature in df.columns if ((df[feature].dtypes != 'O') & (feature not in ['y']))]\nprint('Number of numerical variables: ', len(numerical_features))\n\n# visualise the numerical variables\ndf[numerical_features].head()","c4041c29":"#Discrete Numerical Features\ndiscrete_feature=[feature for feature in numerical_features if len(df[feature].unique())<25]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","f147d906":"#Continuous Numerical Features\ncontinuous_features=[feature for feature in numerical_features if feature not in discrete_feature+['deposit']]\nprint(\"Continuous feature Count: {}\".format(len(continuous_features)))","1d276e07":"cols_with_missing = [col for col in df.columns \n                                 if df[col].isnull().any()]\ncols_with_missing","9bdfeb58":"df.describe()","07b7958a":"df.corr()","d73ed341":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),annot=True)","53799758":"df.hist(figsize=(15,15))\nplt.show()","398e9091":"sns.pairplot(df)","1651e796":"def bar_plot(variable):\n    var = df[variable]\n    varValue = var.value_counts()\n    plt.figure(figsize=(15,3))\n    plt.bar(varValue.index, varValue,color=['#00008b','#00e5ee','#cd1076', '#008080','#cd5555','red','blue',])\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    \n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","5c9d933c":"categorical_cols = ['Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']\nfor c in categorical_cols:\n    bar_plot(c)","1352c3b4":"categorcial_variables = ['Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']\nfor col in categorcial_variables:\n    plt.figure(figsize=(10,4))\n    sns.barplot(df[col].value_counts().values, df[col].value_counts().index)\n    plt.title(col)\n    plt.tight_layout()","425f4df8":"for i in df.describe().columns:\n    sns.boxplot(df[i].dropna())\n    plt.show()","a500dd3a":"def Count_categorcial_variables(df):\n    categorcial_variables = df.select_dtypes(include=['object']).columns.tolist()\n    #fig = plt.figure(figsize=(14, 18))\n\n    for index, col in enumerate(categorcial_variables):\n        print(\"------------\",col,\" value counts---------------------\")\n        print(df[col].value_counts())\n        \n        #fig.add_subplot(3, 2, index+1)\n        #dataframe[col].value_counts()[:20].plot(kind='bar', title=col, color = \"royalblue\")\n        #plt.tight_layout()\n        \n    print(\"\\n\\n------------Number of categories in each columns---------------------\")\n    for i in categorcial_variables:\n        a = df[i].unique()\n        print(\"There are {} categories in {}\".format(len(a),i))\nCount_categorcial_variables(df)","b39396dd":"#Determine the average weight per item:\nitem_avg_weight = df.pivot_table(values='Item_Weight', index='Item_Identifier')\n\n#Get a boolean variable specifying missing Item_Weight values\nmiss_bool = df['Item_Weight'].isnull() \n\n#Impute data and check #missing values before and after imputation to confirm\nprint('Orignal #missing: %d'% sum(miss_bool))\ndf.loc[miss_bool,'Item_Weight'] = df.loc[miss_bool,'Item_Identifier'].apply(lambda x: item_avg_weight[x])\nprint('Final #missing: %d'% sum(df['Item_Weight'].isnull()))","14e8597d":"df['Item_Fat_Content'].value_counts()","84bc2af1":"plt.figure(figsize=(10,5))\nsns.countplot(y = df['Item_Fat_Content'])","5fcfc749":"plt.figure(figsize=(10,10))\ndf['Item_Fat_Content'].value_counts().plot.pie(autopct=\"%0.2f%%\")","ebdc3e8e":"df['Item_Type'].value_counts()","93edd670":"plt.figure(figsize=(10,5))\nsns.countplot(y = df['Item_Type'])","2ef1c25a":"plt.figure(figsize=(10,10))\ndf['Item_Type'].value_counts().plot.pie(autopct=\"%0.2f%%\")","0f3edc08":"df['Item_MRP'].value_counts()","e2bc639d":"df['Outlet_Identifier'].value_counts()","830db70f":"plt.figure(figsize=(10,5))\nsns.countplot(y = df['Outlet_Identifier'])","6ee5ecf7":"plt.figure(figsize=(10,10))\ndf['Outlet_Identifier'].value_counts().plot.pie(autopct=\"%0.2f%%\")","0b24e0b3":"df['Outlet_Establishment_Year'].value_counts()","8d18f7b6":"plt.figure(figsize=(10,5))\nsns.countplot(y = df['Outlet_Establishment_Year'])","729cd59e":"plt.figure(figsize=(10,10))\ndf['Outlet_Establishment_Year'].value_counts().plot.pie(autopct=\"%0.2f%%\")","8d44fad8":"df['Outlet_Size'].value_counts()","1f41ce45":"plt.figure(figsize=(10,7))\nsns.countplot(y = df['Outlet_Size'])","a9383f88":"plt.figure(figsize=(15,10))\ndf['Outlet_Size'].value_counts().plot.pie(autopct=\"%0.2f%%\")","2dce7ffd":"df['Outlet_Location_Type'].value_counts()","ee35975d":"plt.figure(figsize=(10,7))\nsns.countplot(y = df['Outlet_Location_Type'])","c1e21ef6":"plt.figure(figsize=(15,10))\ndf['Outlet_Location_Type'].value_counts().plot.pie(autopct=\"%0.2f%%\")","40ff2d27":"df['Outlet_Type'].value_counts()","c2a8608c":"plt.figure(figsize=(10,7))\nsns.countplot(y = df['Outlet_Type'])","8a217524":"plt.figure(figsize=(15,10))\ndf['Outlet_Type'].value_counts().plot.pie(autopct=\"%0.2f%%\")","7acbce91":"df['Item_Outlet_Sales'].value_counts()","1e31ab66":"df['Item_Fat_Content'] = df['Item_Fat_Content'].map({'Low Fat': 0, 'Regular': 1, 'LF': 2, 'reg': 3, 'low fat': 4})\ndf.head()","840b4a38":"plt.figure(figsize = (10, 10))\nsns.distplot(x = df['Item_Visibility'])","7a49da8c":"plt.figure(figsize = (10, 10))\nsns.distplot(x = df['Item_MRP'])","e187e15d":"plt.figure(figsize = (10, 10))\nsns.distplot(x = df['Outlet_Establishment_Year'])","8be407c5":"sns.jointplot(x = \"Item_Fat_Content\", y = \"Item_Outlet_Sales\", data = df)","1e59b68a":"sns.jointplot(x = \"Item_Visibility\", y = \"Item_Outlet_Sales\", data = df)","427aa98c":"sns.jointplot(x = \"Item_MRP\", y = \"Item_Outlet_Sales\", data = df)","8965ff93":"sns.jointplot(x = \"Outlet_Identifier\", y = \"Item_Outlet_Sales\", data = df)\nplt.xticks(rotation = 90)","8085531c":"sns.jointplot(x = \"Outlet_Establishment_Year\", y = \"Item_Outlet_Sales\", data = df)","09b4847f":"sns.jointplot(x = \"Outlet_Size\", y = \"Item_Outlet_Sales\", data = df)","0e1db1ee":"sns.jointplot(x = \"Outlet_Location_Type\", y = \"Item_Outlet_Sales\", data = df)","660e4a49":"sns.jointplot(x = \"Outlet_Type\", y = \"Item_Outlet_Sales\", data = df)\nplt.xticks(rotation = 90)","7ad8b8ad":"plt.figure(figsize = (15,7))\nsns.barplot(data = df, y = 'Item_Outlet_Sales', x = 'Item_Fat_Content')","93a137f9":"plt.figure(figsize=(15,7))\nsns.barplot(data = df, y = 'Item_Outlet_Sales', x = 'Item_Type')\nplt.xticks(rotation = 90)","397ab450":"plt.figure(figsize=(15,7))\nsns.barplot(data = df, y = 'Item_Outlet_Sales', x = 'Outlet_Location_Type')","f5322f2c":"plt.figure(figsize=(15,7))\nsns.barplot(data = df, y = 'Item_Outlet_Sales', x = 'Outlet_Size')","02485e5f":"plt.figure(figsize=(15,7))\nsns.barplot(data = df, y = 'Item_Outlet_Sales', x = 'Outlet_Establishment_Year')","ce98a6fd":"plt.subplots(figsize = (15,4))\nsns.barplot(y = df['Outlet_Identifier'], x= df['Item_Outlet_Sales'])","cc8d09b4":"plt.figure(figsize=(15,7))\nsns.barplot(x = 'Item_Type', y = 'Item_Outlet_Sales',hue = 'Outlet_Type', data = df)\nplt.xticks(rotation = 90)","45f79c8f":"plt.figure(figsize=(20,6))\nsns.barplot(x = 'Outlet_Type',y = 'Item_Outlet_Sales',hue = 'Outlet_Location_Type',data = df)","dd2c5a1b":"plt.figure(figsize=(20,6))\nsns.barplot(x = 'Item_Type',y ='Item_Weight',data = df)","0f93242a":"plt.figure(figsize=(20,6))\nsns.barplot(y='Item_Outlet_Sales',hue='Outlet_Type',x='Outlet_Location_Type',data=df)","1535edd9":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Location_Type', data = df) ","7a8921ee":"plt.figure(figsize = [12,9])\nsns.boxplot(x = 'Item_Type', y = 'Item_Outlet_Sales', data = df)\nplt.xticks(rotation = 90)","475d3e95":"plt.figure(figsize = [20,7])\nsns.boxplot(x = 'Outlet_Identifier', y = 'Item_Outlet_Sales', data = df)","103f18b2":"plt.figure(figsize = [20,7])\nsns.boxplot(x = 'Outlet_Size', y = 'Item_Outlet_Sales', data = df)","512357e9":"plt.figure(figsize = [20,7])\nsns.boxplot(x = 'Outlet_Location_Type', y = 'Item_Outlet_Sales', data = df)","87161a17":"plt.figure(figsize = [20,7])\nsns.boxplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', data = df)","b48232d2":"plt.figure(figsize=(16,10))\ntemp_col = ['Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']\nfor i, col in enumerate(temp_col):\n    plt.subplot(2,2,i+1)\n    sns.boxplot(data=df, y='Item_Outlet_Sales', x=col)\n    plt.xlabel(col, fontsize=14)","a35f1202":"plt.subplots(figsize = (25,4))\nsns.boxplot(x = df['Item_Type'], y= df['Item_Outlet_Sales'])","bba587a9":"plt.subplots(figsize = (15,4))\nsns.boxplot(y = df['Outlet_Identifier'], x= df['Item_Outlet_Sales'])","cde1276c":"plt.subplots(figsize = (15,4))\nsns.boxplot(y = df['Outlet_Size'], x= df['Item_Outlet_Sales'])","ab6bf71a":"plt.figure(figsize=(20,6))\nsns.boxplot(y='Item_Outlet_Sales',hue='Outlet_Type',x='Outlet_Location_Type',data=df)","f862be2f":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Type', y = 'Item_Outlet_Sales',hue = 'Outlet_Type', data = df)\nplt.xticks(rotation = 90)","25c2513b":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Type', y = 'Item_Outlet_Sales',hue = 'Outlet_Size', data = df)\nplt.xticks(rotation = 90)","fb699392":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Size', data = df)","5fcbc274":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Type', data = df)","1cd29eb0":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Location_Type', data = df)","f653334b":"plt.figure(figsize=(20,7))\nsns.boxplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Establishment_Year', data = df)","8e32beef":"fig,axes=plt.subplots(2,2,figsize=(15,12))\nsns.boxplot(x='Outlet_Establishment_Year',y='Item_Outlet_Sales',hue='Outlet_Size',ax=axes[0,0],data=df)\nsns.boxplot(x='Outlet_Size',y='Item_Outlet_Sales',hue='Outlet_Size',ax=axes[0,1],data=df)\nsns.boxplot(x='Outlet_Location_Type',y='Item_Outlet_Sales',hue='Outlet_Size',ax=axes[1,0],data=df)\nsns.boxplot(x='Outlet_Type',y='Item_Outlet_Sales',hue='Outlet_Size',ax=axes[1,1],data=df)","1a057da1":"plt.figure(figsize = (15,10))\n\nplt.subplot(211)\nsns.boxplot(x='Outlet_Identifier', y='Item_Outlet_Sales', data=df, palette=\"Set1\")\n\nplt.subplot(212)\nsns.boxplot(x='Item_Type', y='Item_Outlet_Sales', data=df, palette=\"Set1\")\n\nplt.show()","7dc71a39":"plt.figure(figsize=(20,7))\nsns.countplot(x = 'Item_Fat_Content', hue = 'Outlet_Type', data = df)","b94893ab":"plt.figure(figsize=(20,7))\nsns.countplot(x = 'Item_Fat_Content', hue = 'Outlet_Size', data = df)","36236567":"plt.figure(figsize=(20,7))\nsns.countplot(x = 'Item_Fat_Content',hue = 'Outlet_Location_Type', data = df)","f7855c95":"plt.figure(figsize=(20,7))\nsns.countplot(x = 'Item_Fat_Content',hue = 'Outlet_Size', data = df)","847392ed":"plt.figure(figsize=(20,7))\nsns.countplot(x = 'Item_Type',hue = 'Outlet_Size', data = df)\nplt.xticks(rotation = 90)","48a602b3":"plt.figure(figsize=(20,7))\nsns.countplot(x = 'Item_Type',hue = 'Outlet_Type', data = df)\nplt.xticks(rotation = 90)","7d3883d6":"plt.figure(figsize=(20,6))\nsns.countplot(hue='Outlet_Type',x='Outlet_Location_Type',data=df)","171b6eea":"plt.figure(figsize=(20,7))\nsns.violinplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Location_Type', data = df)","9d42d415":"plt.figure(figsize=(20,7))\nsns.violinplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales',hue = 'Outlet_Size', data = df)","622aa158":"plt.figure(figsize=(20,6))\nsns.violinplot(y = 'Item_Outlet_Sales', x = 'Outlet_Location_Type', data = df)","0f6dc93d":"plt.figure(figsize=(20,6))\nsns.violinplot(y = 'Item_Outlet_Sales', x = 'Item_Fat_Content', data = df)","e86cec2e":"plt.figure(figsize=(20,6))\nsns.violinplot(y = 'Item_Outlet_Sales', x = 'Item_Type', data = df)","6d21b3d5":"plt.figure(figsize=(20,6))\nsns.violinplot(y = 'Item_Outlet_Sales', x = 'Outlet_Identifier', data = df)","3982f659":"plt.figure(figsize=(20,6))\nsns.violinplot(y = 'Item_Outlet_Sales', x = 'Outlet_Establishment_Year', data = df)","08fd8978":"plt.figure(figsize = (15,10))\n\nplt.subplot(211)\nsns.violinplot(x='Outlet_Identifier', y='Item_Outlet_Sales', data=df, palette=\"Set1\")\n\nplt.subplot(212)\nsns.violinplot(x='Item_Type', y='Item_Outlet_Sales', data=df, palette=\"Set1\")\nplt.xticks(rotation = 90)\n\nplt.show()","e73470af":"plt.figure(figsize=(20,7))\nsns.scatterplot(y = 'Item_Outlet_Sales',x = 'Item_Type',hue = 'Outlet_Location_Type', data = df)\nplt.xticks(rotation = 90)","8965084a":"plt.figure(figsize = (20,7))\nsns.scatterplot(x = 'Item_Weight', y = 'Item_Outlet_Sales', hue = 'Item_Type', data = df)","f4af114f":"plt.figure(figsize = (20,7))\nsns.scatterplot(x= 'Item_Visibility', y = 'Item_Outlet_Sales', hue = 'Item_Type', data = df)","a845ef52":"plt.figure(figsize = (20,7))\nsns.scatterplot(x= 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Type', data = df)\nplt.xticks(rotation = 90)","740d936c":"plt.figure(figsize = (20, 7))\nsns.scatterplot(x= 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)\nplt.xticks(rotation = 90)","de51697c":"sns.scatterplot(x = 'Outlet_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Location_Type', data = df)","4e34a208":"sns.scatterplot(x = 'Outlet_Location_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Type', data = df)","9ea34e37":"sns.scatterplot(y = 'Item_Fat_Content', x = 'Item_Outlet_Sales', hue = 'Outlet_Type', data = df)","432c2623":"sns.scatterplot(y = 'Item_Fat_Content', x = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)","bee39122":"fig,axes=plt.subplots(1,1,figsize=(12,8))\nsns.scatterplot(x='Item_MRP',y='Item_Outlet_Sales',hue='Item_Fat_Content',size='Item_Weight',data=df)","9716f696":"fig,axes=plt.subplots(1,1,figsize=(10,8))\nsns.scatterplot(x='Item_MRP',y='Item_Outlet_Sales',hue='Item_Fat_Content',size='Item_Weight',data=df)\nplt.plot([69,69],[0,5000])\nplt.plot([137,137],[0,5000])\nplt.plot([203,203],[0,9000])","8cf63e6d":"sums = df['Item_Outlet_Sales'].groupby(df['Outlet_Identifier']).sum().reset_index(name='Sales')\n# sums\nplt.figure(figsize=(10,10))\nplt.pie(sums['Sales'], labels=sums['Outlet_Identifier'], rotatelabels=True,autopct='%1.1f%%');\nplt.show()","7a98260f":"sums = df['Item_Outlet_Sales'].groupby(df['Item_Type']).sum().reset_index(name='Sales')\n# sums\nplt.figure(figsize=(10,10))\nplt.pie(sums['Sales'], labels=sums['Item_Type'], rotatelabels=True,autopct='%1.1f%%');","7b798383":"for i in df['Outlet_Identifier'].unique():\n  # print(i)\n    sums = df['Item_Outlet_Sales'].groupby(df['Item_Type']).count().reset_index(name='Sales')\n    plt.figure(figsize=(10,10))\n    plt.title('Outlet_Identifier is'+ i)\n    plt.pie(sums['Sales'], labels=sums['Item_Type'], rotatelabels=False,autopct='%1.1f%%');","d7d63e55":"sums = df['Item_Type'].groupby(df['Item_Type']).count().reset_index(name='counts')\n# sums\nplt.figure(figsize=(10,10))\nplt.pie(sums['counts'], labels=sums['Item_Type'], rotatelabels=True,autopct='%1.1f%%');","00e4527f":"# Check what type of items in each and every OUtlet\nfor i in df['Outlet_Identifier'].unique():\n    sums = df['Item_Type'].groupby(df['Item_Type']).count().reset_index(name='counts')\n    plt.figure(figsize=(10,10))\n    plt.title('Outlet_Identifier is'+ i)\n    plt.pie(sums['counts'], labels=sums['Item_Type'], rotatelabels=False,autopct='%1.1f%%');","561e48dc":"sums = df['Item_Outlet_Sales'].groupby(df['Outlet_Type']).sum().reset_index(name='Sales')\n# sums\nplt.figure(figsize=(10,10))\nplt.pie(sums['Sales'], labels=sums['Outlet_Type'], rotatelabels=True,autopct='%1.1f%%');","fd3d1dd5":"sums = df['Item_Outlet_Sales'].groupby(df['Outlet_Size']).sum().reset_index(name='Sales')\n# sums\nplt.figure(figsize=(10,10))\nplt.pie(sums['Sales'], labels=sums['Outlet_Size'], rotatelabels=True,autopct='%1.1f%%');","e0cbf1c5":"figures, axes = plt.subplots(3, 2, figsize=(25, 15))\n\nsns.pointplot(y = 'Item_Outlet_Sales', x = 'Item_Type', data = df, hue = 'Outlet_Type', ax = axes[0,0])\nsns.pointplot(y = 'Item_Outlet_Sales', x = 'Item_Type', data = df, hue = 'Outlet_Establishment_Year', ax = axes[0,1])\nsns.pointplot(y = 'Item_Outlet_Sales', x = 'Item_Type', data = df, hue = 'Outlet_Location_Type', ax = axes[1,0])\nsns.pointplot(y = 'Item_Outlet_Sales', x = 'Item_Type', data = df, hue = 'Outlet_Size', ax = axes[1,1])\nsns.pointplot(y = 'Item_Outlet_Sales', x = 'Item_Fat_Content', data = df, hue = 'Outlet_Type', ax = axes[2,0])\nsns.pointplot(y = 'Item_Outlet_Sales', x = 'Item_Fat_Content', data = df, hue = 'Outlet_Location_Type', ax = axes[2,1])\n\nplt.show()","5b09922d":"table = pd.pivot_table(df,index=['Item_Fat_Content','Outlet_Establishment_Year'])\ntable","7907d78e":"table = pd.pivot_table(df, values = 'Item_Outlet_Sales',index = 'Outlet_Type')\ntable","a6591af3":"table = pd.pivot_table(df, values = 'Item_Visibility', index = 'Item_Identifier')\ntable","bde80605":"table = pd.pivot_table(df, values = 'Outlet_Type', columns = 'Outlet_Identifier',aggfunc = lambda x:x.mode())\ntable","99a71a76":"df.pivot_table(values='Outlet_Type', columns='Outlet_Size',aggfunc=lambda x:x.mode())","854dbe64":"df.pivot_table(values='Outlet_Location_Type', columns='Outlet_Type',aggfunc=lambda x:x.mode())","fa4bbd79":"table = pd.pivot_table(df,index=['Item_Fat_Content','Outlet_Size'])\ntable","6ad14e13":"table = pd.pivot_table(df,index=['Item_Fat_Content','Outlet_Type'])\ntable","9381c31a":"table = pd.pivot_table(df,index=['Item_Fat_Content','Outlet_Location_Type'])\ntable","97a18be2":"table = pd.pivot_table(df,index=['Outlet_Type','Item_Type'])\ntable","5583a202":"table = pd.pivot_table(df,index=['Outlet_Size','Item_Type'])\ntable","daa79b69":"table = pd.pivot_table(df,index=['Outlet_Location_Type','Item_Type'])\ntable","7c720cfa":"table = pd.pivot_table(df,index=['Outlet_Size','Item_Fat_Content'])\ntable","1289b289":"table = pd.pivot_table(df,index=['Outlet_Type','Item_Fat_Content'])\ntable","cd831644":"table = pd.pivot_table(df,index=['Outlet_Location_Type','Item_Fat_Content'])\ntable","28e2224b":"table = pd.pivot_table(df,index=['Outlet_Establishment_Year','Item_Fat_Content'])\ntable","68668fc2":"pd.crosstab(df['Item_Fat_Content'],df['Outlet_Size']).style.background_gradient(cmap = 'winter')","fb718573":"pd.crosstab(df['Item_Fat_Content'],df['Outlet_Type']).style.background_gradient(cmap = 'cool')","28c03c5d":"pd.crosstab(df['Item_Fat_Content'],df['Item_Type']).style.background_gradient(cmap = 'ocean')","2082521d":"pd.crosstab(df['Item_Fat_Content'],df['Outlet_Establishment_Year']).style.background_gradient(cmap = 'spring')","3c30fa43":"pd.crosstab(df['Item_Fat_Content'],df['Outlet_Location_Type']).style.background_gradient(cmap = 'summer')","05ea0afa":"pd.crosstab(df['Item_Type'],df['Outlet_Type']).style.background_gradient(cmap = 'autumn')","de14f2ee":"pd.crosstab(df['Item_Type'],df['Outlet_Size']).style.background_gradient(cmap = 'twilight')","a24b6a38":"pd.crosstab(df['Item_Type'],df['Outlet_Establishment_Year']).style.background_gradient(cmap = 'flag')","95699aba":"pd.crosstab(df['Item_Type'],df['Outlet_Size']).style.background_gradient(cmap = 'Wistia')","b812da7a":"pd.crosstab(df['Item_Type'],df['Outlet_Location_Type']).style.background_gradient(cmap = 'bwr')","b2c94768":"pd.crosstab(df['Outlet_Size'],df['Outlet_Type']).style.background_gradient(cmap = 'seismic')","f43c95b1":"pd.crosstab(df['Outlet_Establishment_Year'],df['Outlet_Type']).style.background_gradient(cmap = 'PRGn')","cce043d7":"pd.crosstab(df['Outlet_Location_Type'],df['Outlet_Type']).style.background_gradient(cmap = 'PuOr')","757db967":"fat = df['Item_Fat_Content'].value_counts()\n\nplt.style.use('default')\nplt.figure(figsize = (7, 5))\nsquarify.plot(sizes = fat.values, label = fat.index, value = fat.values)\nplt.title('Item Fat Content Distribution', fontdict = {'fontname' : 'Monospace', 'fontsize' : 20, 'fontweight' : 'bold'})\nplt.show()","fa19898e":"type1 = df['Item_Type'].value_counts()\n\nplt.style.use('default')\nplt.figure(figsize = (15, 10))\nsquarify.plot(sizes = type1.values, label = type1.index, value = type1.values)\nplt.title('Item Type Distribution', fontdict = {'fontname' : 'Monospace', 'fontsize' : 20, 'fontweight' : 'bold'})\nplt.show()","fe9f61c3":"year = df['Outlet_Establishment_Year'].value_counts()\n\nplt.style.use('default')\nplt.figure(figsize = (7, 5))\nsquarify.plot(sizes = year.values, label = year.index, value = year.values)\nplt.title('Outlet Establishment Year Distribution', fontdict = {'fontname' : 'Monospace', 'fontsize' : 20, 'fontweight' : 'bold'})\nplt.show()","29c4964c":"size = df['Outlet_Size'].value_counts()\n\nplt.style.use('default')\nplt.figure(figsize = (7, 5))\nsquarify.plot(sizes = size.values, label = size.index, value = size.values)\nplt.title('Outlet Size Distribution', fontdict = {'fontname' : 'Monospace', 'fontsize' : 20, 'fontweight' : 'bold'})\nplt.show()","3f5fc85d":"location = df['Outlet_Location_Type'].value_counts()\n\nplt.style.use('default')\nplt.figure(figsize = (7, 5))\nsquarify.plot(sizes = location.values, label = location.index, value = location.values)\nplt.title('Outlet Location Type Distribution', fontdict = {'fontname' : 'Monospace', 'fontsize' : 20, 'fontweight' : 'bold'})\nplt.show()","efd0476c":"type2 = df['Outlet_Type'].value_counts()\n\nplt.style.use('default')\nplt.figure(figsize = (7, 5))\nsquarify.plot(sizes = type2.values, label = type2.index, value = type2.values)\nplt.title('Outlet Type Distribution', fontdict = {'fontname' : 'Monospace', 'fontsize' : 20, 'fontweight' : 'bold'})\nplt.show()","70332ddd":"plt.figure(figsize=(15,10))\nsns.lineplot(df['Item_Type'],df['Item_Outlet_Sales'])","1eb4a83d":"plt.figure(figsize=(15,10))\nsns.lineplot(df['Outlet_Identifier'],df['Item_Outlet_Sales'])","fe58fb39":"plt.figure(figsize=(15,10))\nsns.lineplot(df['Outlet_Establishment_Year'],df['Item_Outlet_Sales'])","b4964d17":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Type', data = df)","75395da2":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)","f71681c6":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Location_Type', data = df)","fad0a0cf":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Establishment_Year', data = df)","79b2caf2":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Item_Fat_Content', data = df)","acb79a6d":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Outlet_Type', y = 'Item_Outlet_Sales', hue = 'Item_Type', data = df)","c080940b":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Outlet_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Location_Type', data = df)","25b0434c":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Outlet_Location_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)","807bf135":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Location_Type', data = df)","94d9be81":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Type', data = df)","be833c2a":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)","3a3a1df0":"plt.figure(figsize = (20,7))\nsns.lineplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Establishment_Year', data = df)","429d0668":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Establishment_Year', data = df)","2fafc1c8":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)","db710959":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Type', data = df)","c96c5b77":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Item_Fat_Content', y = 'Item_Outlet_Sales', hue = 'Outlet_Location_Type', data = df)","abf81ecf":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Outlet_Location_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Size', data = df)","01d739d4":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Outlet_Type', y = 'Item_Outlet_Sales', hue = 'Outlet_Location_Type', data = df)","a942a32b":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Outlet_Type', y = 'Item_Outlet_Sales', hue = 'Item_Type', data = df)","00525719":"plt.figure(figsize = (20,7))\nsns.boxenplot(x = 'Item_Type', y = 'Item_Outlet_Sales', hue = 'Item_Fat_Content', data = df)","8aa68cc3":"average_sales    = df.groupby('Item_Type')[\"Item_Outlet_Sales\"].mean()\npct_change_sales = df.groupby('Item_Type')[\"Item_Outlet_Sales\"].sum().pct_change()\npct_change_sales","b114ce90":"average_sales","66ac1f56":"# plot average sales per Item_Type\nfig, (axis1,axis2) = plt.subplots(2,1,sharex=True,figsize=(15,8))\n\nfig1 = average_sales.plot(legend=True,ax=axis1,marker='o',colormap=\"flag\", title=\"Average Sales Per Item_Type\")\nfig1.set_xticks(range(len(average_sales)))\nfig1.set_xticklabels(average_sales.index.tolist(), rotation=90)\n\n# plot precent change for sales per Item_Type\nfig2 = pct_change_sales.plot(legend=True,ax=axis2,marker='o',rot=90,colormap=\"summer\",title=\"Sales Percent Change Per Item_Type\")","0265a576":"df.groupby(['Outlet_Location_Type','Outlet_Size'])['Outlet_Size'].count()","d6a193a1":"df.groupby(['Outlet_Identifier','Outlet_Size'])['Outlet_Size'].count()","f7a798da":"df.groupby(['Outlet_Type','Outlet_Size'])['Outlet_Size'].count()","c366d8ff":"df.groupby(['Outlet_Type'])['Item_Visibility'].mean()","5545873d":"df['Item_Type'] = df['Item_Type'].map({'Snack Foods': 0, 'Fruits and Vegetables': 1, 'Household': 2, 'Frozen Foods': 3, \n                                       'Dairy': 4, 'Baking Goods': 5, 'Canned': 6, 'Health and Hygiene': 7, 'Meat': 8, \n                                       'Soft Drinks': 9, 'Breads': 10, 'Hard Drinks': 11, 'Starchy Foods': 12, 'Others': 13, \n                                      'Breakfast': 14, 'Seafood': 15})\ndf.head()","db736f59":"df['Outlet_Identifier'] = df['Outlet_Identifier'].map({'OUT027': 0, 'OUT045': 1, 'OUT046': 2, 'OUT013': 3, 'OUT035': 4,\n                                                       'OUT049': 5, 'OUT017': 6, 'OUT018': 7, 'OUT010': 8, 'OUT019': 9})\ndf.head()","72beba7d":"df['Outlet_Size'] = df['Outlet_Size'].map({'High': 0, 'Medium': 1, 'Small': 2})\ndf.head()","09939f31":"df['Outlet_Location_Type'] = df['Outlet_Location_Type'].map({'Tier 3': 0, 'Tier 2': 1, 'Tier 1': 2})\ndf.head()","95562576":"df['Outlet_Type'] = df['Outlet_Type'].map({'Supermarket Type1': 0, 'Grocery Store': 1, 'Supermarket Type3': 2, \n                                           'Supermarket Type2': 3})\ndf.head()","cc226e06":"df = df.dropna()\n#print(df)\ndf.head()","f8baa90e":"df.dropna(inplace = True)\ndf.isnull().sum()","0836c03b":"#Classifiers\nX = df.loc[:, ['Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier', \n               'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']]\nX.head()","a88a4232":"Y = df.loc[:, ['Item_Outlet_Sales']]\nY.head()","757f7bfe":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25, random_state = 42, shuffle = True)","66776378":"regressor = LinearRegression()  \nregressor.fit(X_train, Y_train) #training the algorithm\n#To retrieve the intercept:\nprint(regressor.intercept_)\n\n#For retrieving the slope:\nprint(regressor.coef_)","54631810":"Y_pred = regressor.predict(X_test)\nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_pred)))","b9fb5291":"# Model initialization\nregression_model = LinearRegression()\n# Fit the data(train the model)\nregression_model.fit(X, Y)\n# Predict\nY_pred = regression_model.predict(X)\n\n# model evaluation\nrmse = mean_squared_error(Y, Y_pred)\nr2 = r2_score(Y, Y_pred)\n\n# printing values\nprint('Slope:' ,regression_model.coef_)\nprint('Intercept:', regression_model.intercept_)\nprint('Root mean squared error: ', rmse)\nprint('R2 score: ', r2)","1e168ebb":"import statsmodels.api as sm\n\nX = np.random.rand(100)\nY = X + np.random.rand(100)*0.1\n\nresults = sm.OLS(Y,sm.add_constant(X)).fit()\n\nprint(results.summary())\n\nplt.scatter(X,Y)\n\nX_plot = np.linspace(0,1,100)\nplt.plot(X_plot, X_plot*results.params[0] + results.params[1])\n\nplt.show()","8f5de155":"regressor = DecisionTreeRegressor(max_depth=15,min_samples_leaf=300)\nregressor.fit(X_train, Y_train)","ef1abb78":"Y_pred = regressor.predict(X_test)\nY_pred","c3b5d454":"print('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_pred)))","6272cc6b":"regressor = RandomForestRegressor(n_estimators=100,max_depth=6, min_samples_leaf=50,n_jobs=4)\nregressor.fit(X_train, Y_train)","53a8944b":"Y_pred = regressor.predict(X_test)\nY_pred","f9b09883":"print('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_pred)))","b07e847e":"***Some observations:****\n\n1. 'Item_Visibility' has a min value of zero. This makes no practical sense because when a product is being sold in a store, the visibility cannot be 0.\n2. 'Outlet_Establishment_Years' vary from 1985 to 2009. The values might not be apt in this form. Rather, if we can convert them to how old the particular store is, it should have a better impact on sales.\n3. The lower \u2018count\u2019 of \"Item_Weight\" and \"Item_Outlet_Sales\" confirms the findings from the missing value check.","3c5cfaf5":"# Decision Tree ","eee6081b":"# Boxen Plot","70335124":"> This tells us that there are 1549 products and 10 outlets\/stores (which was also mentioned in problem statement). Another thing that should catch attention is that Item_Type has 16 unique values. ","a0807eb7":"# Violin Plot","acbcecb5":"# Data Cleaning\n\nThis step typically involves imputing missing values and treating outliers. Though outlier removal is very important in regression techniques, advanced tree based algorithms are impervious to outliers. So I\u2019ll leave it to you to try it out. We\u2019ll focus on the imputation step here, which is a very important step.","ab6a096e":"# Groupby Plot","fb430920":"# Cross Tab","1d5c467b":"# Random Forest Model","c85f8a25":"# Point Plot","2f6e58b5":"# Training And Testing Data","85cfedb9":"# Univariate Analysis","7071abd5":"# Linear Regression","87906332":"# Bar Plot","754025f7":"# Scatter Plot","c5bb5728":"# Line Plot","e1569d2d":"# Count Plot","923d94b3":"# Joint Plot","ea0583e9":"# Imputing Missing Values\n\nWe found two variables with missing values \u2013 Item_Weight and Outlet_Size. Lets impute the former by the average weight of the particular item. This can be done as:","d30a1d19":"# Dist Plot","5d561e37":"# Box Plot","53288568":"The output gives us following observations:\n\n1. Item_Fat_Content: Some of \u2018Low Fat\u2019 values mis-coded as \u2018low fat\u2019 and \u2018LF\u2019. Also, some of \u2018Regular\u2019 are mentioned as \u2018regular\u2019.\n2. Item_Type: Not all categories have substantial numbers. It looks like combining them can give better results.\n3. Outlet_Type: Supermarket Type2 and Type3 can be combined. But we should check if that\u2019s a good idea before doing it.","419e4365":"# Pivot Table","24ce4673":"***The Hypotheses***\n> I came up with the following hypothesis while thinking about the problem. These are just my thoughts and you can come-up with many more of these. Since we\u2019re talking about stores and products, lets make different sets for each.\n\n***Store Level Hypotheses:***\n\n1. City type: Stores located in urban or Tier 1 cities should have higher sales because of the higher income levels of people there.\n2. Population Density: Stores located in densely populated areas should have higher sales because of more demand.\n3. Store Capacity: Stores which are very big in size should have higher sales as they act like one-stop-shops and people would prefer getting everything from one place\n4. Competitors: Stores having similar establishments nearby should have less sales because of more competition.\n5. Marketing: Stores which have a good marketing division should have higher sales as it will be able to attract customers through the right offers and advertising.\n6. Location: Stores located within popular marketplaces should have higher sales because of better access to customers.\n7. Customer Behavior: Stores keeping the right set of products to meet the local needs of customers will have higher sales.\n8. Ambiance: Stores which are well-maintained and managed by polite and humble people are expected to have higher footfall and thus higher sales.\n\n***Product Level Hypotheses:***\n\n1. Brand: Branded products should have higher sales because of higher trust in the customer.\n2. Packaging: Products with good packaging can attract customers and sell more.\n3. Utility: Daily use products should have a higher tendency to sell as compared to the specific use products.\n4. Display Area: Products which are given bigger shelves in the store are likely to catch attention first and sell more.\n5. Visibility in Store: The location of product in a store will impact sales. Ones which are right at entrance will catch the eye of customer first rather than the ones in back.\n6. Advertising: Better advertising of products in the store will should higher sales in most cases.\n7. Promotional Offers: Products accompanied with attractive offers and discounts will sell more.","c7b714e8":"# Pie Chart"}}