{"cell_type":{"8d6f30e9":"code","eedeef8e":"code","47f4d648":"code","ea7efbcf":"code","63c3d901":"code","e0a805a9":"code","70c9e2cc":"code","1ad578dd":"code","fcf1191a":"code","8e7f8bfd":"code","a0b3217f":"code","df98a256":"code","dc008ad3":"code","5d512317":"code","e225c4a4":"code","08e698ba":"code","ebaa8107":"code","7e6f4461":"code","6e847330":"markdown","6b51941a":"markdown","275ddcf8":"markdown","5c1d4c8b":"markdown","ce8d56c1":"markdown","530e1e4d":"markdown","e9dfc022":"markdown"},"source":{"8d6f30e9":"# GiNZA\u3068spaCy\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n! pip install ginza > \/dev\/null 2>&1\n! python -m spacy download ja_core_news_sm > \/dev\/null 2>&1\n\nimport pkg_resources, imp\nimp.reload(pkg_resources)","eedeef8e":"import os\nimport random\nimport time\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import StratifiedKFold\nimport spacy\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set()\ntqdm.pandas()","47f4d648":"def set_seed(seed):\n    os.environ[\"PYTHONHASHSEED\"] = str(seed)\n    random.seed(seed)\n    np.random.seed(seed)\n\nset_seed(42)","ea7efbcf":"train = pd.read_csv(\"..\/input\/rkcup-1\/train.csv\")\ntest = pd.read_csv(\"..\/input\/rkcup-1\/test.csv\")\n\ndisplay(train)\ndisplay(test)","63c3d901":"# \u76ee\u7684\u5909\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nplt.hist(train[\"target\"], alpha=1, label=\"train\")\nplt.xlabel(\"Target\")\nplt.ylabel(\"Count\")\nplt.legend()\nplt.show()","e0a805a9":"# \u5358\u8a9e\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\ntrain[\"word_count\"] = train[\"separated_text\"].map(lambda x: len(x.split()))\ntest[\"word_count\"] = test[\"separated_text\"].map(lambda x: len(x.split()))\n\nplt.hist(train[\"word_count\"], alpha=0.7, label=\"train\")\nplt.hist(test[\"word_count\"], alpha=0.7, label=\"test\")\nplt.xlabel(\"Word count\")\nplt.ylabel(\"Count\")\nplt.legend()\nplt.show()","70c9e2cc":"# \u9577\u3044\u30af\u30c1\u30b3\u30df\nprint(\"Train\")\nprint(train.sort_values(by=\"word_count\", ascending=False)[[\"text\", \"word_count\", \"target\"]][:5].values.tolist())\nprint(\"Test\")\nprint(test.sort_values(by=\"word_count\", ascending=False)[[\"text\", \"word_count\"]][:5].values.tolist())","1ad578dd":"# \u77ed\u3044\u30af\u30c1\u30b3\u30df\nprint(\"Train\")\nprint(train.sort_values(by=\"word_count\", ascending=False)[[\"text\", \"word_count\", \"target\"]][-20:].values.tolist())\nprint(\"Test\")\nprint(test.sort_values(by=\"word_count\", ascending=False)[[\"text\", \"word_count\"]][-20:].values.tolist())","fcf1191a":"def featurize(sentences):\n    nlp = spacy.load(\"ja_ginza\")\n    feats = []\n    for sentence in tqdm(sentences):\n        feat = nlp(sentence, disable=['ner']).vector\n        feats.append(feat)\n    return np.array(feats)","8e7f8bfd":"X_train = featurize(train[\"text\"].values)\nX_test = featurize(test[\"text\"].values)\n\nprint(X_train.shape)\nprint(X_test.shape)","a0b3217f":"# Out-of-fold\u306a\u4e88\u6e2c\u3092\u5165\u308c\u3066\u3044\u304f\u305f\u3081\u306e\u914d\u5217\noof = np.zeros(len(train), dtype=float)\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u63a8\u8ad6\u7d50\u679c\u3092\u5165\u308c\u3066\u3044\u304f\u305f\u3081\u306e\u914d\u5217\ntest_pred = np.zeros(len(test), dtype=float)\n\nn_splits = 5\n\nskf = StratifiedKFold(n_splits=n_splits, random_state=42, shuffle=True)\ny = train[\"target\"].values\nfor i, (trn_idx, val_idx) in enumerate(skf.split(train, y)):\n    print(val_idx[:10])\n    X_trn = X_train[trn_idx]\n    X_val = X_train[val_idx]\n    y_trn = y[trn_idx]\n    y_val = y[val_idx]\n\n    clf = LogisticRegression(C=10, max_iter=1000, random_state=42)\n    clf.fit(X_trn, y_trn)\n\n    y_val_pred = clf.predict_proba(X_val)[:, 1]\n    score = roc_auc_score(y_true=y_val, y_score=y_val_pred)\n    print(f\"Fold {i + 1} AUC score: {score:.4f}\")\n\n    oof[val_idx] = y_val_pred.reshape(-1)\n\n    y_test_pred = clf.predict_proba(X_test)[:, 1]\n    test_pred += y_test_pred.reshape(-1) \/ n_splits\n    \nscore = roc_auc_score(y_true=y, y_score=oof)\nprint(f\"OOF AUC: {score:.4f}\")","df98a256":"train[\"pred\"] = oof\ntest[\"pred\"] = test_pred","dc008ad3":"# \u4e88\u6e2c\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nplt.hist(train[\"pred\"], alpha=0.7, label=\"train\")\nplt.hist(test[\"pred\"], alpha=0.7, label=\"test\")\nplt.xlabel(\"Predicted score\")\nplt.ylabel(\"Count\")\nplt.legend()\nplt.show()","5d512317":"# \u30d9\u30b9\u30c820\ndisplay(train.sort_values(by=\"pred\", ascending=False)[[\"text\", \"pred\", \"target\"]][:20])\ndisplay(test.sort_values(by=\"pred\", ascending=False)[[\"text\", \"pred\"]][:20])","e225c4a4":"# \u30ef\u30fc\u30b9\u30c820\ndisplay(train.sort_values(by=\"pred\")[[\"text\", \"pred\", \"target\"]][:20])\ndisplay(test.sort_values(by=\"pred\")[[\"text\", \"pred\"]][:20])","08e698ba":"# \u5927\u304d\u304f\u5916\u3057\u305f\u3082\u306e(False Positive)\ndisplay(train.query(\"target == 0\").sort_values(by=\"pred\", ascending=False)[[\"text\", \"pred\", \"target\"]][:20])","ebaa8107":"# \u5927\u304d\u304f\u5916\u3057\u305f\u3082\u306e(False Negative)\ndisplay(train.query(\"target == 1\").sort_values(by=\"pred\")[[\"text\", \"pred\", \"target\"]][:20])","7e6f4461":"train[[\"id\", \"pred\", \"target\"]].to_csv(\"oof_ginza.csv\", index=False)\ntest[[\"id\", \"pred\"]].rename(columns={\"pred\": \"target\"}).to_csv(\"sub_ginza.csv\", index=False)","6e847330":"# \u6e96\u5099\n\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3001\u4e71\u6570\u30b7\u30fc\u30c9\u306e\u56fa\u5b9a\u3001\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\u3002","6b51941a":"# \u7279\u5fb4\u62bd\u51fa\nGiNZA\u306e300\u6b21\u5143\u306e\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u3092\u4f7f\u3044\u307e\u3059\u3002\u6587\u7ae0\u306e\u57cb\u3081\u8fbc\u307f\u306f\u3001\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u306e\u5e73\u5747\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002","275ddcf8":"# GiNZA\u306e\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u3068\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306b\u3088\u308b\u6975\u6027\u5224\u5b9a + \u7c21\u5358\u306a\u4e88\u6e2c\u7d50\u679c\u306e\u5206\u6790\n\u8352\u5c45\u3055\u3093\u306e TF-IDF + LogisticRegression \u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\uff1a\nhttps:\/\/www.kaggle.com\/hidehisaarai1213\/rkcup-1-tfidf-logisticregression-baseline  \n\u3092\u5143\u306b\u3001GiNZA\u3067\u7279\u5fb4\u62bd\u51fa\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002 \n\nGiNZA\u306f\u3001\u4eca\u56de\u306e\u3058\u3083\u3089\u3093\u30b3\u30fc\u30d1\u30b9\u3092\u516c\u958b\u3057\u3066\u3044\u308bMegagon Labs\u304c\u958b\u767a\u3057\u3066\u3044\u308bNLP\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u65e5\u672c\u8a9e\u306e\u4fc2\u308a\u53d7\u3051\u89e3\u6790\u3092\u59cb\u3081\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3067\u306f\u3001GiNZA\u306e\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306a\u5206\u985e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u3001\u7d50\u679c\u306e\u5206\u6790\u3092\u884c\u3044\u307e\u3059\u3002","5c1d4c8b":"# \u30e2\u30c7\u30ea\u30f3\u30b0\u3068\u8a55\u4fa1","ce8d56c1":"# \u7d50\u679c\u306e\u53ef\u8996\u5316\nOOF AUC\u304c0.93\u3067\u3042\u308b\u3053\u3068\u304b\u3089\u3082\u5206\u304b\u308b\u901a\u308a\u3001\u6982\u306d\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002  \n\u76ee\u7684\u5909\u6570\u3068\u4e88\u6e2c\u304c\u4e56\u96e2\u3057\u3066\u3044\u308b\u3082\u306e\u306b\u76ee\u3092\u5411\u3051\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n- negative\u3092\u9ad8\u304f\u4e88\u6e2c\u3057\u3066\u3044\u308b\u3082\u306e\n  - \u300c\u7b11\u9854\u304c\u306a\u3044\u300d\u3001\u300c\u554f\u984c\u306f\u5915\u98df\u300d\u3001\u300c\u6e29\u6cc9\u304c\u306c\u308b\u304b\u3063\u305f\u300d\u306e\u3088\u3046\u306apositive\u3063\u307d\u3044\u5358\u8a9e\u3092\u6253\u3061\u6d88\u3059\u69cb\u9020\u3092\u6301\u3064\u6587\uff08\u4fc2\u308a\u53d7\u3051\u3092\u7121\u8996\u3057\u305f\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u306e\u5e73\u5747\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u5bfe\u51e6\u304c\u96e3\u3057\u3044\uff09\n  - \u300c\u3061\u3087\u3063\u3068\u75b2\u308c\u307e\u3057\u305f\u300d\u3084\u300c\u30b3\u30b9\u30d1\u304c\u60aa\u3044\u300d\u306b\u9ad8\u3044\u30b9\u30b3\u30a2\u304c\u3064\u304f\u306e\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u2026\n- positive\u3092\u4f4e\u304f\u4e88\u6e2c\u3057\u3066\u3044\u308b\u3082\u306e\n  - \u300c\u8a00\u3046\u3053\u3068\u306a\u3057\u300d\u3001\u300c\u6c17\u306b\u306a\u3089\u306a\u3044\u300d\u306e\u3088\u3046\u306a\u5426\u5b9a\u6587\uff08\u4fc2\u308a\u53d7\u3051\u3092\u7121\u8996\u3057\u305f\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u306e\u5e73\u5747\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u5bfe\u51e6\u304c\u96e3\u3057\u3044\uff09\n  - \u300c\u75b2\u308c\u304c\u53d6\u308c\u305f\u300d\u3001\u300c\u554f\u984c\u304c\u306a\u304b\u3063\u305f\u300d\u306e\u3088\u3046\u306a\u300c\u5426\u5b9a\u7684\u306a\u30cb\u30e5\u30a2\u30f3\u30b9\u3092\u6301\u3064\u5358\u8a9e\u306e\u5426\u5b9a\u300d\uff08\u3053\u308c\u3082\u8a9e\u9806\u3092\u6368\u3066\u3066\u3044\u308b\u305f\u3081\u5bfe\u51e6\u304c\u96e3\u3057\u3044\uff09\n\n\u300c\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u3092\u5e73\u5747\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u6cd5\u306e\u6839\u672c\u7684\u306a\u554f\u984c\u304c\u660e\u3089\u304b\u306b\u306a\u308a\u307e\u3057\u305f\u3002  \n\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001BERT\u306e\u3088\u3046\u306a\u8a9e\u9806\u3092\u8003\u616e\u3067\u304d\u308b\u30e2\u30c7\u30eb\u3067\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u308b\u304b\u8a66\u3059\u3001\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002","530e1e4d":"# \u57fa\u790e\u96c6\u8a08\n- positive:negative\u306e\u6bd4\u7387\u306f8:2\u304f\u3089\u3044\n- \u30af\u30c1\u30b3\u30df\u6587\u306e\u534a\u5206\u8d85\u304c10\u8a9e\u4ee5\u5185\n- \u30af\u30c1\u30b3\u30df\u6587\u306f\u6700\u5927\u306779\u8a9e","e9dfc022":"# \u4e88\u6e2c\u306e\u63d0\u51fa"}}