{"cell_type":{"224ef640":"code","2e92b4e3":"code","d1dd7f7f":"code","f1348e5c":"code","e11bfe55":"code","9a767fea":"code","0185857d":"code","42f4b42d":"code","3cbd0f96":"code","6116ff07":"code","9c9945cc":"markdown","81b0075e":"markdown","2b49c3e8":"markdown","83f8bfca":"markdown"},"source":{"224ef640":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2e92b4e3":"import matplotlib.pyplot as plt\n%matplotlib inline\ndf = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\ndf.head()","d1dd7f7f":"df.info()","f1348e5c":"platforms = df[\"Platform\"].value_counts().index[:15]\ngames = df['Platform'].value_counts().values[:15]\nwith plt.style.context('ggplot'):\n    plt.figure(figsize = (10, 6))\n    plt.barh(platforms[::-1], games[::-1])\n    plt.xticks(fontweight = 'bold')\n    plt.yticks(fontweight = 'bold')\n    plt.title('Distribution of Games on Various Platform')\n    plt.xlabel('Number of Games Avilable')\n    plt.show()","e11bfe55":"game_name = df.iloc[0:10]['Name']\nglobal_sale = df.iloc[0:10]['Global_Sales']\nwith plt.style.context('seaborn'):\n    plt.figure(figsize = (8, 5))\n    rects = plt.barh(game_name[::-1], global_sale[::-1])\n    plt.xlabel('In Millions')\n    plt.title('Top 10 Ranked Games In The World')\n    plt.show()","9a767fea":"fig, axs = plt.subplots(2, 2, figsize = (10, 8), sharey = True, sharex = True)\nplt.style.use('fivethirtyeight')\n\n#North America Sales\nTop_Five_games = df.loc[0:4, 'Name']\nsales_NA = df.loc[0:4, 'NA_Sales']\naxs[0, 0].barh(Top_Five_games[::-1], sales_NA[::-1])\naxs[0, 0].set(title = 'Sales In North-America')\n\n#Europian Union Sales\nsales_EU = df.loc[0:4, 'EU_Sales']\naxs[0, 1].barh(Top_Five_games[::-1], sales_EU[::-1])\naxs[0, 1].set_title('Sales In Europian Union')\n\n#Japan Sales\nsales_JP = df.loc[0:4, 'JP_Sales']\naxs[1, 0].barh(Top_Five_games[::-1], sales_JP[::-1])\naxs[1, 0].set_title('Sales In Japan')\naxs[1, 0].set_xlabel('In Millions', fontsize = 11)\n\n#Other Places\nsales_Other = df.loc[0:4, 'Other_Sales']\naxs[1, 1].barh(Top_Five_games[::-1], sales_Other[::-1])\naxs[1, 1].set_title('Sales In Other Region')\naxs[1, 1].set_xlabel('In Millions', fontsize = 11)\n\nfig.suptitle('Performance of Top 5 Ranked Games In Diffrent Regions', fontweight = 'bold',\n            fontsize = 22)\n\nfig.show()\n","0185857d":"Total_sales = df['Global_Sales'].sum()\nEU_Sales = (df['EU_Sales'].sum() \/ Total_sales)*100\nNA_Sales = (df['NA_Sales'].sum() \/ Total_sales)*100\nJP_Sales = (df['JP_Sales'].sum() \/ Total_sales)*100\nOther_Sales = (df['Other_Sales'].sum() \/ Total_sales)*100\n\nplt.pie([EU_Sales, NA_Sales, JP_Sales, Other_Sales], labels = ['EU', 'NA', 'JP', 'Other'],\n       autopct = '%1.1f%%', shadow = True, pctdistance=0.6, startangle=90,\n        wedgeprops={'edgecolor': 'black'})\nplt.show()","42f4b42d":"Group_by_object = df.groupby('Publisher')\nPubls= Group_by_object['Global_Sales'].sum().sort_values(ascending = False).head(10).index\nSales = Group_by_object['Global_Sales'].sum().sort_values(ascending = False).head(10).values  #or nlargest(10)\nwith plt.style.context('seaborn-whitegrid'):\n    plt.barh(Publs[::-1], Sales[::-1], color = '#555555')\n    plt.xlabel('In Millions', fontsize = '12')\n    plt.title('Top 10 Publisher In The World', fontweight = 'bold')\n    plt.show()","3cbd0f96":"df1 = df['Year'].copy()\ndf1.dropna(inplace = True)\nyears = df1.astype('int64')\nwith plt.style.context('ggplot'):\n    plt.figure(figsize = (9, 4))\n    plt.hist(years,bins = range(1980, 2021),  edgecolor = 'white')\n    plt.xticks(range(1980, 2021), rotation = 90, fontweight = 'bold')\n    plt.yticks(fontweight = 'bold')\n    plt.ylabel('Number Of Games Relesed')\n    plt.title('Number Of Games Relesed Every Years')\n    plt.show()","6116ff07":"groupby_genre = df.groupby('Genre')\ngenre = groupby_genre['Global_Sales'].sum().nlargest(12).index\nvalue = groupby_genre['Global_Sales'].sum().nlargest(12).values\n\nwith plt.style.context('seaborn'):\n    plt.barh(genre[::-1], value[::-1], color = '#555555')\n    plt.xlabel('In Millions')\n    plt.title('Sales Based On Genre', fontweight = 'bold')\n    plt.show()","9c9945cc":"By Observing above figure we can say that **Action** games are more popular than other genre games.","81b0075e":"**Nintindo** Publishes more games compare to other publishers.","2b49c3e8":"By seeing above two figures, we can say that the game which Dominates in **North America** , that game can easily come in top ranked list. And in **North America** Video games are more popular compare to rest of the world. ","83f8bfca":"During the period 2006 to 2012 large number of video games are relesed."}}