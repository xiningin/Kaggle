{"cell_type":{"61acc9b3":"code","7237d7b6":"code","49e60aa0":"code","1e8f13e1":"code","3cd53ce6":"code","5e7b2c3c":"code","16823bf7":"code","811ae8fc":"code","70eb4ad8":"code","454c2033":"code","216ffda4":"code","c8942332":"code","b980319d":"code","07f16947":"code","191a9470":"code","9f6d0bd4":"code","7c7356a0":"code","8c79018b":"code","7b39a5ef":"code","ed350213":"code","cc68238d":"code","91752b9e":"code","eb946fab":"code","8696564a":"code","7e9cf22b":"code","e576c539":"code","2e4dd5f8":"code","ed8a54bd":"code","48498b60":"code","0e697781":"code","9f332316":"code","b75b239d":"code","2cd76f3d":"code","e5506d25":"code","f1cc65b3":"code","0153ed6d":"markdown","239a8864":"markdown","ff3e4ebe":"markdown","0ca46a3c":"markdown","ba6cf07e":"markdown","112c5d28":"markdown","67d4d628":"markdown","3ba9b8fa":"markdown","44d46ffd":"markdown","5047dca6":"markdown","4409e1f6":"markdown","a6ccb801":"markdown","a02db326":"markdown","3d4f132d":"markdown","3c8504e2":"markdown","3d0c40bd":"markdown","df0d38e3":"markdown","33760262":"markdown","50639b0e":"markdown","6c09b65d":"markdown","0ca1fc1b":"markdown"},"source":{"61acc9b3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7237d7b6":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(style='dark')\nimport plotly.express as px\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\ndata = pd.read_csv('..\/input\/spotify.csv', encoding='ISO-8859-1')\n\ndata.head()\n","49e60aa0":"#Dropping the Unnamed: 0 column\ndata.drop('Unnamed: 0', axis=1, inplace=True)","1e8f13e1":"data.info()","3cd53ce6":"#Checking if there are any null\/missing values in the dataset\ndata.isna().sum()\nsns.heatmap(data.isnull(), cbar=False)","5e7b2c3c":"#Changing a few column names for better readability\ndata.rename(columns={'title':'song', 'artist':'artist', 'top genre':'genre', 'year':'year', 'bpm':'beats_per_minute','nrgy':'energy',\n                    'dnce':'danceability','dB':'loudness','live':'liveness', 'val':'valence', 'dur':'length', 'acous':'acousticness',\n                    'spch':'speechiness','pop':'popularity'}, inplace=True)\ndata.columns","16823bf7":"data.describe()","811ae8fc":"data['genre'].nunique()","70eb4ad8":"data['genre'].value_counts().head(10)","454c2033":"data['genre'].value_counts().head(10).plot.pie(figsize=(10,10))","216ffda4":"data['artist'].nunique()","c8942332":"data['artist'].value_counts().head(10)","b980319d":"data['artist'].value_counts().head(10).plot.bar()","07f16947":"data.beats_per_minute.describe()","191a9470":"def grouping(x):\n    if x<=100:\n        return '<100'\n    elif x<=150:\n        return '101-150'\n    elif x<=200:\n        return '151-200'\n    else:\n        return '>200'\n    \ngroups = data.beats_per_minute.apply(grouping)\nvalues = groups.value_counts()\nlabels = values.index\nfig = px.pie(data, values=values,names=labels)\nfig.update_layout(title = 'BPM Distribution')\nfig.show()","9f6d0bd4":"data[data['beats_per_minute']>200]","7c7356a0":"fig= px.scatter(data[data['beats_per_minute']>200], x='popularity',\ny='beats_per_minute', hover_name='song', color='beats_per_minute',\n               size='acousticness')\nfig.show()","8c79018b":"fig = px.violin(data, y=\"danceability\", color=\"year\", points='all', hover_name='song', hover_data=['artist'])\nfig.show()","7b39a5ef":"fig = px.violin(data, y=\"danceability\", color=\"year\", points='all', hover_name='song', hover_data=['artist'])\nfig.show()","ed350213":"fig = px.violin(data, y=\"energy\", color=\"year\", points='all', hover_name='song', hover_data=['artist'])\nfig.show()\n","cc68238d":"fig = px.scatter(data, x='danceability', y='energy',color='energy',\n                hover_name='song',hover_data=['artist','year'])\nfig.show()","91752b9e":"fig = px.scatter(data, x=\"popularity\", y=\"length\", color='length', hover_name='song', hover_data=['artist','year'])\nfig.show()","eb946fab":"fig = px.scatter(data, x=\"popularity\", y=\"speechiness\", color='year', hover_name='song', hover_data=['artist','year','length'])\nfig.show()","8696564a":"fig = px.scatter(data.query('year==2019'),x='artist',y='popularity',\n                 hover_name='song',color='popularity')\nfig.show()","7e9cf22b":"fig = px.scatter(data[data['genre'].str.contains('hip hop')], x=\"artist\", y=\"popularity\", hover_name='song')\nfig.show()","e576c539":"kp = data[data['artist']=='Katy Perry']\nkp","2e4dd5f8":"kp.song.count()","ed8a54bd":"data[data['artist']=='Katy Perry']['year'].value_counts()","48498b60":"fig = px.scatter(data[data['artist']=='Katy Perry'], x='popularity',y='year',\n                hover_name='song',hover_data=['artist','year'])\nfig.show()","0e697781":"data.sort_values(by='popularity',ascending=False).head(10)[['song','artist','year','popularity']]","9f332316":"correlations = data.corr()\nfig = plt.figure(figsize=(14,10))\nsns.heatmap(correlations, annot=True, cmap='GnBu_r',center=1)","b75b239d":"le = LabelEncoder()\nfor column in data.columns.values:\n  if data[column].dtypes == 'object':\n    le.fit(data[column].values)\n    data[column] = le.transform(data[column])\n\ndata.head()\n","2cd76f3d":"X = data.drop('loudness',axis=1)\ny=data.loudness\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)","e5506d25":"lr = LinearRegression()\nlr.fit(X_train, y_train)\n\ny_pred = lr.predict(X_test)\nprint(mean_squared_error(y_test, y_pred))","f1cc65b3":"svr= SVR(C=0.5)\nsvr.fit(X_train, y_train)\n\ny_pred=svr.predict(X_test)\nprint(mean_squared_error(y_test,y_pred))","0153ed6d":"As we can see from the pie chart given above, only 3 songs have bpm greter than 200. Lets see which songs are those.","239a8864":"Pop seems to be the hottest thing during the last decade and looks like the decade belonged to Katy Perry. So lets anaylze her music.","ff3e4ebe":"**Correlation Map**","0ca46a3c":"Lets analyze the beats_per_minute feature of the dataset","ba6cf07e":"Let's have a look into the relationship between beats_per_minute and popularity of these 3 songs","112c5d28":"**Support Vector Regression**","67d4d628":"Linear Regression","3ba9b8fa":"Let's visualize top 10 genres using a pie chart","44d46ffd":"Now lets visualize this","5047dca6":"Lets visualize the top 10 artists of the decade","4409e1f6":"**Relationships between different variables**","a6ccb801":"3. Energy","a02db326":"**Lets see what the year 2019 was like**","3d4f132d":"As we can see in the output pane above, Katy Perry had 17 songs in the top charts throughout the decade. Now lets see year-wise performance of her music.","3c8504e2":"Exploratory Data Analysis","3d0c40bd":"2. Popularity","df0d38e3":"Lets analyze the hiphop songs from the dataset","33760262":"As we can see, we had some of the most popular songs of the decade at the end of it.","50639b0e":"The closer the mean_squared_error to zero, the better the result.","6c09b65d":"Other Features:\n1. Danceability","0ca1fc1b":"Now lets have a look at the top 10 most popular songs of the decade"}}