{"cell_type":{"6e1b32ac":"code","0fba0ba2":"code","ab5e245f":"code","3402037c":"code","08e1a5e7":"code","8bdcf160":"code","5bc7a9b7":"code","976cdb72":"code","48193db6":"code","11943c2a":"code","1aef9954":"code","b72ce78e":"code","9360bde4":"code","ff823dd3":"code","08d20d17":"code","86035dd4":"code","d2ad55b5":"code","e1dac2a4":"code","cc8723ef":"code","a26982f4":"markdown","bedb649b":"markdown","e2ec8a4d":"markdown","7e9c2f73":"markdown","52c7e6c1":"markdown","0017ffa4":"markdown","d584caa7":"markdown","722efd63":"markdown","e233d431":"markdown","21155baf":"markdown","9f9be92a":"markdown","551b83fc":"markdown"},"source":{"6e1b32ac":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPool2D, Dense, Flatten, Input\nfrom keras.callbacks import EarlyStopping\nfrom kerastuner import RandomSearch","0fba0ba2":"!ls \/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/","ab5e245f":"idg=ImageDataGenerator(rescale=1.\/255)\n\ntrain_gen=idg.flow_from_directory(directory='\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/',target_size=(128,128),class_mode='binary',batch_size=32)\nvalid_gen=idg.flow_from_directory(directory='\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/val\/',target_size=(128,128),class_mode='binary',batch_size=32)\ntest_gen=idg.flow_from_directory(directory='\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/',target_size=(128,128),class_mode='binary',batch_size=32)\n","3402037c":"model=Sequential([\n        Input(shape=(128,128,3)),\n        Conv2D(32,3,activation='relu'),\n        MaxPool2D(pool_size=2),\n        Conv2D(32,3,activation='relu'),\n        MaxPool2D(pool_size=3),\n        Flatten(),\n        Dense(100,activation='relu'),\n        Dense(1,activation='sigmoid')        \n])\n","08e1a5e7":"print(model.summary())","8bdcf160":"model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","5bc7a9b7":"callback=EarlyStopping(monitor='val_loss',patience=5,min_delta=3)","976cdb72":"hist=model.fit(train_gen,validation_data=valid_gen,epochs=3,batch_size=32,callbacks=callback)","48193db6":"plt.plot(pd.DataFrame(hist.history))","11943c2a":"model.evaluate(test_gen)","1aef9954":"import kerastuner","b72ce78e":"def mymodel(kt) :\n    model=keras.models.Sequential()\n    model.add(Input(shape=(128,128,3)))\n    for i in range(kt.Int('number_of_conv2d_layers',1,5)):\n        model.add(Conv2D(filters=kt.Int(f'{i}_conv2d_filters',32,256,32),kernel_size=kt.Choice(f'{i}_kernel_choice',values=[3,5,7]),activation='relu'))\n        model.add(MaxPool2D(pool_size=(2,2)))\n    model.add(Flatten())\n    for i in range(kt.Int('number_of_dense_layers',1,4)):\n        model.add(Dense(units=kt.Int(f'{i}_dense_neuron',1,50,10),activation='relu'))\n    model.add(Dense(units=1,activation='sigmoid'))\n    model.compile(optimizer=kt.Choice('compiler_optimizer',values=['adam','rmsprop']),loss='binary_crossentropy',metrics='accuracy')\n    return model","9360bde4":"tuner=RandomSearch(mymodel,objective='val_accuracy',max_trials=3,executions_per_trial=1,directory='mydirectory',project_name='mytuning')","ff823dd3":"tuner.search_space_summary()","08d20d17":"tuner.search(train_gen,validation_data=valid_gen,epochs=1,batch_size=1)","86035dd4":"tuner.results_summary()","d2ad55b5":"best_model=tuner.get_best_models(num_models=1)[0]","e1dac2a4":"best_model.summary()","cc8723ef":"best_model.evaluate(test_gen)","a26982f4":"## Tuning the Hyperparams","bedb649b":"# Pneumonia Detection Tuning with Keras-Tuner for best performance","e2ec8a4d":"We can see that the accuracy is not pretty good with our simple convolutional neural network. Let's tweak the hyper parameters and see the result.","7e9c2f73":"We have the train, test and validation data given.","52c7e6c1":"Let's train our model and see the performance.","0017ffa4":"Before getting into the tuning, we'll just create a random Convolutional Neural Network with few layers and check its performance.","d584caa7":"### See you!","722efd63":"As the data is given as a folder, I will be using keras ImageDataGenerator for processing the data.","e233d431":"I will create a normal function for our KerasTuner. But before starting, let's have a quick look into the hyperparameters and stuffs we need to tune.\n\n1. We don't have any idea about how many number of Convolutional layers (i.e. Conv2D) and Pooling layers (i.e. MaxPool\/AveragePool) are best for the model, which is one of the things needed to find. <br>\n2. We have to tune the filters and kernel_size parameters in Convolutional layer also. <br>\n3. We will decide the number of dense layers along with the number of neurons they have to have. <br>\n4. Lastly, we will tune for the best optimizer for our model.","21155baf":"We will use this best model to evaluate our test data","9f9be92a":"### We tuned every possible hyperparameters and got 83% of accuracy, which is pretty much nicer than what we'd gotten before.\n","551b83fc":"There are number of different ways to perform pneumonia detection using Keras. But selecting the best hyperparameters for the best result is always a headache. Here I will demonstrate hyperparameter tuning using Keras-Tuner where I will work on Chest X-Ray Images and try to select the best hyperparameters for the model we will be creating. "}}