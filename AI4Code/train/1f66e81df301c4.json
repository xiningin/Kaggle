{"cell_type":{"381806d6":"code","18ea78e3":"code","84037912":"code","922abd6c":"code","5f7d9955":"code","58e0d73c":"code","575f6ff0":"code","727627fb":"code","fbb9a625":"code","86787927":"code","49fe3640":"code","65e71f17":"code","a995f47b":"code","94846c94":"code","50d7ba0f":"code","408fd00f":"code","abeb4a78":"code","9ed3218b":"code","1ff3f101":"markdown","41a70b60":"markdown","2e058ecc":"markdown","0e327577":"markdown","1984c18a":"markdown","6ec41fa4":"markdown","819436a3":"markdown","b8fa1cc7":"markdown","fb088f6e":"markdown","bd1d6f8d":"markdown","d1b904d3":"markdown","95ac80dd":"markdown","dcc6ee2f":"markdown","f1d128ec":"markdown"},"source":{"381806d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport seaborn as sns\nimport os\nprint(os.listdir(\"..\/input\"))\nplt.rcParams['figure.figsize'] = (12.0, 8.0) \nplt.rcParams['figure.dpi'] = 300 \n# Any results you write to the current directory are saved as output.","18ea78e3":"dataStudent = pd.read_csv('..\/input\/students.csv',encoding='utf-8')\ndataTeacher = pd.read_csv('..\/input\/professionals.csv',encoding='utf-8')","84037912":"dataTeacher.head()","922abd6c":"dataStudent.head()","5f7d9955":"dataStudent.info()","58e0d73c":"dataTeacher.info()","575f6ff0":"dataStudentLoc = dataStudent['students_location']\ndataStudentDat = dataStudent['students_date_joined']\ndataTeacherLoc = dataTeacher['professionals_location']\ndataTeacherInd = dataTeacher['professionals_industry']\ndataTeacherHea = dataTeacher['professionals_headline']\ndataTeacherDat = dataTeacher['professionals_date_joined']\ndataStudentDat","727627fb":"dataStudentLoc = dataStudentLoc.dropna(how='any')\ndataTeacherLoc = dataTeacherLoc.dropna(how='any')\ndataTeacherInd = dataTeacherInd.dropna(how='any')\ndataTeacherHea = dataTeacherHea.dropna(how='any')\ndataStudentLoc","fbb9a625":"def sorted(dataset):\n    datasetNum = dataset.value_counts()\n    datasetLab = dataset.unique()\n    \n    return np.column_stack((datasetLab,datasetNum))\n    \n# dataStudentLocNum = dataStudentLoc.value_counts()\n# dataStudentLocLab = dataStudentLoc.unique()\n# studentLoc = np.column_stack((dataStudentLocLab,dataStudentLocNum))\nstudentLoc = sorted(dataStudentLoc)\nteacherLoc = sorted(dataTeacherLoc)\nteacherInd = sorted(dataTeacherInd)\nteacherHea = sorted(dataTeacherHea)\nteacherInd","86787927":"def cutDate(dataset):\n    for i in range(len(dataset)):\n        dataset[i] = dataset[i][:4]\n        \n    return dataset\n\nstudentDat = cutDate(dataStudentDat)\nteacherIDat = cutDate(dataTeacherDat)\nstudentDat","49fe3640":"from collections import Counter\nstudentDat = Counter(studentDat)\nteacherIDat = Counter(teacherIDat)\nteacherIDat","65e71f17":"studentx = studentLoc[:,1]\nstudenty = studentLoc[:,0]\nstudenty[:9]","a995f47b":"sns.barplot(studentx[:9],studenty[:9])\nplt.xlabel(\"Number\",fontsize=15)\nplt.ylabel(\"Loc\",fontsize=15)\nplt.title(\"Student's address distribution top ten\")\nplt.show()","94846c94":"teacherx = teacherLoc[:,1]\nteachery = teacherLoc[:,0]\nsns.barplot(teacherx[:9],teachery[:9])\nplt.title(\"Teacher's address distribution top ten\")\nplt.xlabel(\"Number\",fontsize=15)\nplt.ylabel(\"Loc\",fontsize=15)\nplt.show()","50d7ba0f":"studentDatX = studentDat.keys()\nstudentDatY = studentDat.values()\nteacherDatX = teacherIDat.keys()\nteacherDatY = teacherIDat.values()\nplt.plot(studentDatX,studentDatY,'r',label='student')\nplt.plot(teacherDatX,teacherDatY,'b',label='teacher')\nplt.title(\" increase in the number of students and teachers per year\")\nplt.xlabel('Years')\nplt.ylabel('Number')\nplt.legend()\nplt.show()","408fd00f":"teacherInd","abeb4a78":"teacherIndlab = teacherInd[:,0]\nteacherIndnum = teacherInd[:,1]\nexplode = (0.02,0.015,0.012,0.010,0.01,0.1,0.005,0,0)\nplt.pie(teacherIndnum[:9],labels=teacherIndlab[:9],explode=explode,autopct='%1.1f%%',shadow=True)\nplt.axis('equal')\nplt.legend()\n \nplt.show()\n# teacherIndlab","9ed3218b":"teacherHealab = teacherHea[:,0]\nteacherHeanum = teacherHea[:,1]\nexplode = (0.02,0.015,0.012,0.010,0.01,0.1,0.005,0,0)\nplt.pie(teacherHeanum[:9],labels=teacherHealab[:9],explode=explode,autopct='%1.1f%%',shadow=True)\nplt.axis('equal')\nplt.legend()\n \nplt.show()\n# teacherHealab","1ff3f101":"### Teacher's address distribution top ten","41a70b60":"### Sorting and categorizing years by collections","2e058ecc":"### Line chart showing the increase in the number of students and teachers per year","0e327577":"### Slice the date, accurate to the year, you can also choose the month. At the same time, you can also process it by converting it to a date object in pandas.","1984c18a":"### Define simple functions and complete classification statistics to synthesize new arrays","6ec41fa4":"# Simple processing of data","819436a3":"\n    This is my first time posting a work on kaggle. This work is to help you learn machine learning by extracting various data and merging new array objects. After that, I will continue to explore the content of the remaining data sets, and at the end look for interesting questions and build model predictions or classifications to solve the problem.\n    Here, I am very willing to communicate with you and build friendships and even team up.\n    thank you all.","b8fa1cc7":"### Separate X, Y from Counter","fb088f6e":"### Student's address distribution top ten","bd1d6f8d":"# Drawing graphics","d1b904d3":"### Pie chart of professionals_industry","95ac80dd":"### Missing value processing","dcc6ee2f":"#  Understanding of data","f1d128ec":"### Separate individual labels"}}