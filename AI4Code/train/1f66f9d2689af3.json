{"cell_type":{"27034ed7":"code","08ec4938":"code","1c02c6f0":"code","3d3d3c30":"code","4070c71a":"code","ba61beba":"code","c07e3535":"code","c47f53fd":"code","dafc4255":"code","2089bc31":"code","8aeaed66":"code","40034ce2":"code","1072f484":"code","f178e3fe":"code","c42a36f4":"code","5215062f":"code","45a4dd89":"code","02794a1f":"code","35453824":"code","d30a2396":"code","d29050f3":"code","f362011a":"code","58efc309":"code","fb0ad627":"code","61522a6b":"markdown","2062e5ac":"markdown","f0d16a55":"markdown","79ce29fb":"markdown","b8caaefd":"markdown","7653c570":"markdown","ef2633d4":"markdown","4fc53cf1":"markdown","b2003603":"markdown"},"source":{"27034ed7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","08ec4938":"import matplotlib.pyplot as plt \nimport seaborn as sns\n","1c02c6f0":"df =pd.read_csv('\/kaggle\/input\/usa-housing\/USA_Housing.csv')","3d3d3c30":"%matplotlib inline","4070c71a":"df.head()","ba61beba":"df.info()","c07e3535":"df.describe()","c47f53fd":"sns.pairplot(df)","dafc4255":"sns.heatmap(df.corr(),annot = True)","2089bc31":"df.columns","8aeaed66":"X = df[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n       'Avg. Area Number of Bedrooms', 'Area Population']]\ny = df['Price']","40034ce2":"from sklearn.model_selection import train_test_split\n","1072f484":"X_train , X_test, y_train ,y_test = train_test_split(\n    X ,y ,test_size = 0.4, random_state = 101\n)","f178e3fe":"from sklearn.linear_model import LinearRegression","c42a36f4":"lm = LinearRegression()","5215062f":"lm.fit(X_train , y_train )","45a4dd89":"print(\"intercept\")\nprint(lm.intercept_)","02794a1f":"print(\"coefficeints\")\nprint(lm.coef_)","35453824":"predictions = lm.predict(X_test)\npredictions","d30a2396":"plt.scatter(y_test,predictions)","d29050f3":"# we would like to visualize the preditions\nsns.distplot(y_test - predictions)","f362011a":"from sklearn.metrics import mean_absolute_error , mean_squared_error","58efc309":"mean_absolute_error(y_test , predictions)","fb0ad627":"mean_squared_error(y_test , predictions)","61522a6b":"# **predictions **","2062e5ac":"#### evaluating the model","f0d16a55":"# EDA","79ce29fb":"**our histogram of residual is normally distributed which implies that our model was the correct choice **","b8caaefd":"** we like to get rid of the address column since it does not have anything that can be used in linear regression model  **","7653c570":"**next step is to evaluate our model **","ef2633d4":"# linear regression","4fc53cf1":"**since we have the results of actual values we would like to know how accurate is our prediction**","b2003603":"**now that we have selected the feature and target variables we would like to split the data into training set for building the model and testing set for testing the model**"}}