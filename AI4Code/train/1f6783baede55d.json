{"cell_type":{"e28988a5":"code","dbb03b5f":"code","2602bd7a":"code","1c84f6ff":"code","f529e351":"code","e356e3ef":"code","cde75be2":"code","21638a4d":"code","37a579fa":"code","ee455bbe":"code","be5d25fa":"code","11634537":"code","2e2b2200":"code","cd5d7121":"code","7aa3a0c5":"code","42e98abd":"code","fe2bcb62":"code","f4c0b90b":"code","1ef34141":"code","606a5ebc":"code","a1c6ba64":"code","3438c32f":"code","fee164e4":"code","f7b2fa75":"code","e94d3af5":"code","ae546e57":"code","95053879":"code","b6b31014":"code","2774389b":"code","a73b9091":"code","61c8c8d7":"code","d424e7fe":"code","c39741d3":"code","475a5207":"code","b42e4e0c":"code","3c556516":"code","bcad98d1":"markdown","32df33c8":"markdown","a0451035":"markdown","c407643f":"markdown","32dfa507":"markdown","bc910a4e":"markdown","dfcf4ef6":"markdown","f1a3a1a5":"markdown","1ca1882b":"markdown","dccd1e82":"markdown","037f4ade":"markdown","73e3d1d2":"markdown","a7d819d2":"markdown","28da1e7a":"markdown","9463eb67":"markdown","907822b2":"markdown","51b21826":"markdown","daa4fb43":"markdown","359cb6d9":"markdown"},"source":{"e28988a5":"import warnings\nwarnings.filterwarnings(action='ignore')\nimport numpy as np\nfrom numpy import median\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotnine import *\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nimport plotly.figure_factory as ff\n","dbb03b5f":"df=pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.info()","2602bd7a":"#checking for duplicates and missinng values\nprint(df.duplicated().sum())\nprint(df.isnull().sum().sum())","1c84f6ff":"plt.style.context('bmh')\nfig, axes = plt.subplots(2,2, figsize=(8,8),constrained_layout=True)\n\naxes[0,0].hist(df.PetalLengthCm, color='mediumseagreen',edgecolor='black', alpha=0.8)\naxes[0,0].set_title('PetalLengthCm Distribution', fontsize=10, fontweight='bold')\naxes[0,0].set_xlabel('PetalLengthCm')\n\naxes[0,1].hist(df[df.Species=='Iris-setosa'].PetalLengthCm, label= 'Iris-setosa',edgecolor='black', color='mediumpurple',alpha=0.8)\naxes[0,1].hist(df[df.Species=='Iris-versicolor'].PetalLengthCm, label= 'Iris-versicolor',edgecolor='black', color='pink',alpha=0.8)\naxes[0,1].hist(df[df.Species=='Iris-virginica'].PetalLengthCm, label= 'Iris-virginica',edgecolor='black', color='aqua',alpha=0.8)\naxes[0,1].set_title('PetalLengthCm Distribution by Species', fontsize=10, fontweight='bold')\naxes[0,1].set_xlabel('PetalLengthCm')\naxes[0,1].legend(loc=\"upper right\")\n\naxes[1,0].hist2d(df.PetalLengthCm, df.PetalWidthCm, cmap='Greens', bins=20)\naxes[1,0].set_title('PetalLengthCm and PetalWidthCm Distributions', fontsize=10, fontweight='bold')\naxes[1,0].set_xlabel('PetalLengthCm')\naxes[1,0].set_ylabel('PetalWidthCm')\n\naxes[1,1].scatter(df.PetalLengthCm, df.PetalWidthCm, color='mediumseagreen', edgecolor='black')\naxes[1,1].set_title('PetalLengthCm and PetalWidthCm Relationship', fontsize=10, fontweight='bold')\naxes[1,1].set_xlabel('PetalLengthCm')\naxes[1,1].set_ylabel('PetalWidthCm');\n","f529e351":"# setting my own palette\nmypalette = ['mediumpurple', 'pink','aqua']\nsns.set_palette(mypalette)\nsns.palplot(sns.color_palette())","e356e3ef":"ax=sns.countplot(x=\"Species\", data=df)\nax.set_title(\"Countplot of Species\")\nplt.show()","cde75be2":"fig, axes = plt.subplots(1,3, figsize=(15,5))\n\nax1=sns.distplot(df.PetalLengthCm, bins=30, hist_kws={'edgecolor':'k'}, color='mediumseagreen',ax=axes[0])\nax1.set_title('Histogram + KDE', fontsize=12)\nax1=sns.despine()\n\nax2=sns.distplot(df.PetalLengthCm, hist=False, rug= True, color='mediumseagreen',ax=axes[1])\nax2.set_title('KDE', fontsize=12)\nax2=sns.despine()\n\ndef cdf (column):\n    n=len(column)\n    x=np.sort(column)\n    y=np.arange(1, n+1)\/n\n    return x,y\n\nxPetalLength, yPetalLength = cdf(df.PetalLengthCm)\nax3=sns.lineplot(xPetalLength, yPetalLength, color='mediumseagreen',ax=axes[2])\nax3.set_title('Cumulative Distribution Function', fontsize=12)\nax3=sns.despine()\n\nfig.suptitle('PetalLength distribution', fontsize=12, fontweight='bold');","21638a4d":"fig, axes = plt.subplots(1,3, figsize=(15,5))\n\nax1=sns.distplot(df[df.Species=='Iris-setosa'].PetalLengthCm, hist_kws={\"edgecolor\":\"k\"}, ax=axes[0])\nax1=sns.distplot(df[df.Species=='Iris-versicolor'].PetalLengthCm, hist_kws={\"edgecolor\":\"k\"},ax=axes[0])\nax1=sns.distplot(df[df.Species=='Iris-virginica'].PetalLengthCm, hist_kws={\"edgecolor\":\"k\"},ax=axes[0])\nax1.set_title('Histogram by Species', fontsize=12)\nax1=sns.despine()\n\nax2=sns.distplot(df[df.Species=='Iris-setosa'].PetalLengthCm, hist=False, kde_kws={\"shade\": True},ax=axes[1])\nax2=sns.distplot(df[df.Species=='Iris-versicolor'].PetalLengthCm, hist=False,kde_kws={\"shade\": True}, ax=axes[1])\nax2=sns.distplot(df[df.Species=='Iris-virginica'].PetalLengthCm, hist=False,kde_kws={\"shade\": True}, ax=axes[1])\nax2.set_title('KDE by Species', fontsize=12)\nax2=sns.despine()\n\nxsePetalLength, ysePetalLength = cdf(df[df.Species=='Iris-setosa'].PetalLengthCm)\nxvePetalLength, yvePetalLength = cdf(df[df.Species=='Iris-versicolor'].PetalLengthCm)\nxviPetalLength, yviPetalLength = cdf(df[df.Species=='Iris-virginica'].PetalLengthCm)\nax3=sns.lineplot(xsePetalLength, ysePetalLength, ax=axes[2])\nax3=sns.lineplot(xvePetalLength, yvePetalLength, ax=axes[2])\nax3=sns.lineplot(xviPetalLength, yviPetalLength, ax=axes[2])\nax3.set_title('Cumulative Distribution Function by Species', fontsize=12)\nax3=sns.despine()\n\nfig.suptitle('PetalLength distribution by Species', fontsize=12, fontweight='bold');","37a579fa":"fig, axes = plt.subplots(1,4, figsize=(20,5),sharey=True)  \n\nax1= sns.stripplot(x='Species', y='PetalLengthCm', data=df, jitter=True,  ax=axes[0])\nax1.set_title('Stripplot', fontsize=14)\nax1=sns.despine()\n\nax2= sns.swarmplot(x='Species', y='PetalLengthCm', data=df, ax=axes[1])\nax2.set_title('Swarmplot', fontsize=14)\nax2=sns.despine()\n\nax3= sns.boxplot(x='Species', y='PetalLengthCm', data=df, ax=axes[2])\nax3.set_title('Boxplot', fontsize=14)\nax3=sns.despine()\n\nax4= sns.violinplot(x='Species', y='PetalLengthCm', data=df, ax=axes[3])\nax4.set_title('Violinplot', fontsize=14)\nax4=sns.despine()\n\n\nfig.suptitle('PetalLength distribution by Species', fontsize=12, fontweight='bold');","ee455bbe":"fig, axes = plt.subplots(1,2, figsize=(10,5), sharey=True)\n\nax1=sns.barplot(x='Species', y='PetalLengthCm', data= df, edgecolor='black',ax=axes[0])\nax1.set_title('Mean PetalLength by Species', fontsize=12, fontweight='bold')\nax1=sns.despine()\n\nax2=sns.pointplot(x='Species', y='PetalLengthCm', estimator=np.median, data= df, ax=axes[1], color='mediumseagreen')\nax2.set_title('Median PetalLength by Species', fontsize=12, fontweight='bold')\nax2=sns.despine()","be5d25fa":"# scatter\nax= sns.scatterplot(x='PetalLengthCm', y='PetalWidthCm', data=df, hue=\"Species\")\nax.set_title('Scatterplot of PetalLengthCm x PetalWidthCm')","11634537":"# bubble\nax= sns.scatterplot(x='PetalLengthCm', y='PetalWidthCm',size='SepalLengthCm', hue=\"Species\",data=df)\nax.set_title('Bubbleplot of PetalLengthCm x PetalWidthCm + SepalLengthCm')","2e2b2200":"fig, axes = plt.subplots(1,2, figsize=(10,5))  \n\nax1=sns.regplot(x='PetalLengthCm', y='PetalWidthCm', data=df, color='mediumseagreen',order=1, ax=axes[0])\nax1.set_title('Regression Plot', fontsize=14)\nax1=sns.despine()\n\nax2=sns.residplot(x='PetalLengthCm', y='PetalWidthCm', data=df, color='grey',order=1, ax=axes[1])\nax2.set_title('Residual Plot', fontsize=14)\nax2=sns.despine()","cd5d7121":"sns.lmplot(x='PetalLengthCm', y='PetalWidthCm', data=df, hue='Species', col='Species');","7aa3a0c5":"g=sns.FacetGrid(df, col='Species', hue='Species')\ng.map(sns.distplot,'PetalLengthCm', hist=False, kde_kws={\"shade\": True},rug= True);","42e98abd":"sns.jointplot(data=df, x='PetalLengthCm', y='PetalWidthCm',color='mediumseagreen');","fe2bcb62":"j=sns.JointGrid(data=df, x='PetalLengthCm', y='PetalWidthCm')\nj=j.plot_joint(sns.regplot, color='mediumseagreen')\nj=j.plot_marginals(sns.kdeplot, color='mediumseagreen', shade=True);","f4c0b90b":"sns.pairplot(df.drop(\"Id\", axis=1),hue='Species');","1ef34141":"p=sns.PairGrid(df.drop(\"Id\", axis=1),hue='Species')\np=p.map_upper(sns.regplot)\np=p.map_diag(sns.kdeplot, shade=True)\np=p.map_lower(sns.kdeplot)\np=p.add_legend()","606a5ebc":"fig1=go.Figure([go.Bar(x=df.Species.value_counts().index, y=df.Species.value_counts(),\n                      marker_color=[ 'pink','mediumpurple','aqua'])])\nfig1.update_layout(title_text=\"Countplot of Species\", xaxis={'categoryorder':'category ascending'})\nfig1.show()","a1c6ba64":"# the use of pie chart is controversial. Some might say it's hard compare sizes of angles and\/or the pieces'areas. \n# The donuts chart can be a better option (not better than barplot, I think)\n#donuts plot reference: https:\/\/plotly.com\/python\/pie-charts\/#using-an-explicit-mapping-for-discrete-colors\nfig2=go.Figure(data=[go.Pie(labels= df.Species.value_counts().index, values=df.Species.value_counts(), hole=0.5)])\nfig2.update_traces(textfont_size=15, marker=dict(colors=['pink','mediumpurple','aqua'], line=dict(color='#000000', width=2)))\nfig2.update_layout(title_text=\"Donutplot of Species\")\nfig2.show()","3438c32f":"fig3= go.Figure(data=[go.Histogram(x=df.PetalLengthCm, marker_color='mediumseagreen')])\nfig3.update_layout(title_text=\"Histogram of PetalLengthCm\")\nfig3.show()","fee164e4":"fig4 = ff.create_distplot([df.PetalLengthCm.tolist()], ['df'], show_hist=False)\nfig4.update_layout(title_text=\"KDE + Rug plot ofPetalLengthCm\")\nfig4.show()","f7b2fa75":"# strip charts\nfig5= px.strip(df,x='Species', y='PetalLengthCm')\nfig5.update_layout(title_text=\"Stripplot of Species x PetalLengthCm\")\nfig5.show()","e94d3af5":"fig6 = go.Figure()\nfig6.add_trace(go.Box(y=df[df.Species=='Iris-setosa'].PetalLengthCm, name='Iris-setosa', marker_color='mediumpurple'))\nfig6.add_trace(go.Box(y=df[df.Species=='Iris-versicolor'].PetalLengthCm, name='Iris-versicolor', marker_color='pink'))\nfig6.add_trace(go.Box(y=df[df.Species=='Iris-virginica'].PetalLengthCm, name='Iris-virginica',marker_color='aqua'))\nfig6.update_layout(title_text=\"Boxplots of PetalLengthCm by Species\")\nfig6.show()","ae546e57":"fig7 = go.Figure()\nfig7.add_trace(go.Violin(y=df[df.Species=='Iris-setosa'].PetalLengthCm, name='Iris-setosa', box_visible=True, marker_color='mediumpurple'))\nfig7.add_trace(go.Violin(y=df[df.Species=='Iris-versicolor'].PetalLengthCm, name='Iris-versicolor', box_visible=True,marker_color='pink'))\nfig7.add_trace(go.Violin(y=df[df.Species=='Iris-virginica'].PetalLengthCm, name='Iris-virginica', box_visible=True,marker_color='aqua'))\nfig7.update_layout(title_text=\"Boxplots of PetalLengthCm by Species\")\nfig7.show()","95053879":"fig8=go.Figure(data=go.Scatter(x=df.PetalLengthCm, y= df.PetalWidthCm, mode='markers'))\nfig8.update_layout(title_text=\"Scatterplot of PetalLengthCm x PetalWidthCm\")\nfig8.show()","b6b31014":"fig9 = px.scatter(df, x='PetalLengthCm', y='PetalWidthCm', color=\"Species\",\n                 marginal_x=\"box\", marginal_y=\"box\",\n                 title=\"distributions\")\nfig9.update_layout(title_text=\"Scatterplot of PetalLengthCm x PetalWidthCm\")\nfig9.show()","2774389b":"fig10= px.scatter(df, x='PetalLengthCm', y='PetalWidthCm', trendline='ols')\nfig10.update_layout(title_text=\"Regression plot of PetalLengthCm x PetalWidthCm\")\nfig10.show()","a73b9091":"# table! \nfig12=go.Figure(data=[go.Table(header=dict(values=list(df.columns)),\n                              cells=dict(values=[df.Id, df.SepalLengthCm, df.SepalWidthCm, df.PetalLengthCm,\n                                                df.PetalWidthCm, df.Species]))])\nfig12.show()","61c8c8d7":"fig=make_subplots(rows=2, cols=2, \n                  vertical_spacing=0.3,\n                  horizontal_spacing=0.3,\n                  specs=[[{'type':'xy'},{'type':'xy'}],\n                        [{'type':'xy'},{'type':'xy'}]],\n                  subplot_titles=('Histogram by Species', 'Boxplot by Species',\n                                  'CDF  by Species', 'ScatterPlot by Species'))\n\n################################################################################\n\nfig.add_trace(go.Histogram(x=df[df.Species=='Iris-setosa'].PetalLengthCm,\n                          marker_color='mediumpurple',\n                          name='Setosa'),\n                          row=1, col=1)\n\n\nfig.add_trace(go.Histogram(x=df[df.Species=='Iris-versicolor'].PetalLengthCm,\n                          marker_color='pink',\n                          name='Versicolor'),\n                          row=1, col=1)\n\nfig.add_trace(go.Histogram(x=df[df.Species=='Iris-virginica'].PetalLengthCm,\n                          marker_color='aqua',\n                          name='Virginica'),\n                          row=1, col=1)\n\n################################################################################\n\nfig.add_trace(go.Box(y=df[df.Species=='Iris-setosa'].PetalLengthCm,\n                          marker_color='mediumpurple',\n                          name='Setosa',\n                          showlegend=False),\n                          row=1, col=2)\n\nfig.add_trace(go.Box(y=df[df.Species=='Iris-versicolor'].PetalLengthCm,\n                          marker_color='pink',\n                          name='Versicolor',\n                          showlegend=False),\n                          row=1, col=2)\n\nfig.add_trace(go.Box(y=df[df.Species=='Iris-virginica'].PetalLengthCm,\n                          marker_color='aqua',\n                          name='Virginica',\n                          showlegend=False),\n                          row=1, col=2)\n\n################################################################################\n\nfig.add_trace(go.Scatter(x=xsePetalLength, y=ysePetalLength,\n                         marker_color='mediumpurple',\n                         name='Setosa',\n                         showlegend=False),\n                         row=2, col=1)\n\nfig.add_trace(go.Scatter(x=xvePetalLength, y=yvePetalLength,\n                         marker_color='pink',\n                         name='Versicolor',\n                         showlegend=False),\n                         row=2, col=1)\n\nfig.add_trace(go.Scatter(x=xviPetalLength, y=yviPetalLength,\n                         marker_color='aqua',\n                         name='Virginica',\n                         showlegend=False),\n                         row=2, col=1)\n\n################################################################################\n\nfig.add_trace(go.Scatter(x=df[df.Species=='Iris-setosa'].PetalLengthCm,\n                         y=df[df.Species=='Iris-setosa'].PetalWidthCm,\n                         mode='markers',\n                         marker_color='mediumpurple',\n                         name='Setosa',\n                         showlegend=False),\n                         row=2, col=2)\n\nfig.add_trace(go.Scatter(x=df[df.Species=='Iris-versicolor'].PetalLengthCm,\n                         y=df[df.Species=='Iris-versicolor'].PetalWidthCm,\n                         mode='markers',\n                         marker_color='pink',\n                         name='Versicolor',\n                         showlegend=False),\n                         row=2, col=2)\n\nfig.add_trace(go.Scatter(x=df[df.Species=='Iris-virginica'].PetalLengthCm,\n                         y=df[df.Species=='Iris-virginica'].PetalWidthCm,\n                         mode='markers',\n                         marker_color='aqua',\n                         name='Virginica',\n                         showlegend=False),\n                         row=2, col=2)\n\n################################################################################\n\nfig.update_xaxes(title_text='PetalLenth', row=1, col=1)\nfig.update_xaxes(title_text='', row=1, col=2)\nfig.update_xaxes(title_text='PetalLenth', row=2, col=1)\nfig.update_xaxes(title_text='PetalLenth', row=2, col=2)\n\nfig.update_yaxes(title_text='', row=1, col=1)\nfig.update_yaxes(title_text='PetalLenth', row=1, col=2)\nfig.update_yaxes(title_text='', row=2, col=1)\nfig.update_yaxes(title_text='PetalWidth', row=2, col=2)\n\n################################################################################\n\nfig.update_layout(template='plotly_dark',\n                 title='Statistical Plots',\n                 width=650,\n                 height=600,\n                 font=dict(size=12),\n                 barmode='overlay')\n\nfig.update_traces(opacity=0.9)\nfig.show()\n","d424e7fe":"(ggplot(df)+\naes(x='PetalLengthCm')+\ngeom_histogram(aes(fill='Species'),bins=30, color='black', size=0.3, alpha=0.7)+\nscale_fill_manual(values=('mediumpurple', 'pink','aqua'))+\nggtitle('Distribution PetalLengthCm by Species'))","c39741d3":"(ggplot(df)+\naes(x='Species', y='PetalLengthCm')+\ngeom_violin(aes(fill='Species'),size=0.7, color='black',alpha=0.5)+\ngeom_boxplot(aes(fill='Species'),size=0.7, color='black',alpha=0.5, width=0.1)+\nscale_fill_manual(values=('mediumpurple', 'pink','aqua'))+\nggtitle('Distribution PetalLengthCm by Species'))","475a5207":"(ggplot(df)+\naes(x='PetalLengthCm')+\nstat_ecdf(aes(color='Species'), size=1)+\nscale_color_manual(values=('mediumpurple', 'pink','aqua'))+\nggtitle('Cumulative Distribution Functions: PetalLengthCm'))","b42e4e0c":"(ggplot(df)+\naes(x='PetalLengthCm', y='PetalWidthCm')+\ngeom_point(aes(fill='Species', size='SepalWidthCm'), color='black',alpha=0.8)+\nscale_color_manual(values=('mediumpurple', 'pink','aqua'))+\nscale_fill_manual(values=('mediumpurple', 'pink','aqua'))+\nggtitle('PetalLengthCm x PetalWidthCm'))","3c556516":"(ggplot(df)+\naes(x='PetalLengthCm', y='PetalWidthCm')+\ngeom_point(aes(fill='Species'), color= 'black',alpha=0.8)+\ngeom_smooth(aes(color='Species'), method='lm')+\nscale_color_manual(values=('mediumpurple', 'pink','aqua'))+\nscale_fill_manual(values=('mediumpurple', 'pink','aqua'))+\nfacet_wrap('Species')+\nggtitle('PetalLengthCm x PetalWidthCm'))","bcad98d1":"## Subplots!","32df33c8":"# 3- Plotnine\nPlotnine is a python library based on ggplot2!\nI'm going to show some examples","a0451035":"# 2- Seaborn\nLet's dive into the deep","c407643f":"## 2.1- Plots","32dfa507":"### Relationships plots: scatterplot, regressionplot and bubleplot to show relationship between numerical variables","bc910a4e":"### Stripplots, Swarmplots, Boxplot and Violinplots to show comparison between distributions. ","dfcf4ef6":"# 4- Plotly\nInteractive visualizations\n\nSource: https:\/\/plot.ly\/python\/","f1a3a1a5":"# 0 - Knowing the dataset","1ca1882b":"### Distribution plots: countplot, donut plot and histogram to show the distribution of one variable. ","dccd1e82":"### Relationships plots: barplot and pointplot to show relationship between numerical and categorical variables.","037f4ade":"## 2.4 - Pair\nHere, I am going to use pairplot and Pairgrid (more powerfull) to compare distributions and check relationships selecting all variables.","73e3d1d2":"# 1- Brief talk about matplotlib x seaborn\nSeaborn is a python library for statistical visualizations, built on top of matplotlib.\nDespite seaborn uses matplotlib behind the scenes, sometimes it's necessary to use matplotlib directly to do some customizations.\n(Source: https:\/\/seaborn.pydata.org\/introduction.html)","a7d819d2":"# Exploring visualizations with python\nThe goal here is to explore some python visualizations libraries. After a brief talk about matplotlib, I'm going to focus in seaborn and interactive visualizations with Plotly. After this, I'm going to show an alternative for ggplot2 lovers (like me!)   \n\nDistribution plots:  \n* Countplot: shows how many observations in each category.  \n* Histogram: shows how many observations fall into an interval of continuous data.  \n* Kernel Density Estimate: shows the probability density curve.\n* Empirical Cumulative Distribution Function: maps values to its percentile rank and shows the percentage of values that are equal to or lower.  \n* Stripplot: shows the distribution of values by category.  \n* Swarmplot: shows the distribution of values by category with ajusted points to avoid overlapping.  \n* Boxplot: shows the distribution highlighting quartiles and outliers.  \n* Violinplot: shows the distribution highlighting quartiles and outliers + kernel density plots on side.   \n\nRelationship plots:\n\n* Barplot: shows, with bars, estimates of central tendency + confidence intervals (relationship between numeric and categoric).  \n* Pointplot: shows, with points,  estimates of central tendency + confidence intervals (relationship between numeric and categoric).   \n* Scatterplot: shows the relationship between 2 numerical variables.  \n* Bubleplot: shows the relationship among 3 numerical variables.  \n* Regression: helps visualizing a linear relationship.   \n\n\n\nEdit: On Sep\/2020 I did some organization improvements here. \n","28da1e7a":"### Relationships plots: scatterplot and regressionplot to show relationship between numerical variables","9463eb67":"## 2.3 - Joint\nHere, I am going to use jointplot and Jointgrid (more powerfull) to compare distributions and check relationships selecting 2 variables.","907822b2":"### Stripplots, Boxplot and Violinplots to show comparison between distributions. ","51b21826":"### Distribution plots: countplot, histogram, KDE plot and ECDF plot to show the distribution of one variable. ","daa4fb43":"## 2.2 - Faceting\nAnother way to see the diferents distributions\/relationships is faceting!\nHere, besides lmplot(), I'm going to use Facetgrid.  \n(we could use factorplot, it is simpler, but less powerfull).","359cb6d9":"### Histogram, KDE plot and ECDF plot to show comparison between distributions. "}}