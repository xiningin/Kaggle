{"cell_type":{"b483c4d3":"code","1a0a3954":"code","738a909c":"code","c0bf3f3b":"code","452ea4e6":"code","36f52591":"code","0f002720":"code","70cbc847":"code","04bece65":"code","2e144bde":"code","57a1ddfc":"code","703790b7":"code","56d6d00a":"code","1ed16773":"code","9a11088e":"code","556db979":"markdown"},"source":{"b483c4d3":"import pandas as pd\nimport numpy as np\nfrom sklearn import ensemble\nfrom sklearn import metrics\nfrom sklearn import model_selection","1a0a3954":"df = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\ndf.columns\ndf.head(2)","738a909c":"# if __name__ == __main__:\ndf = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\nX  = df.drop('price_range', axis = 1).values\ny  = df['price_range'].values","c0bf3f3b":"#n_jobs=-1 so that it can use all the cores of the system\nclassifier = ensemble.RandomForestClassifier(n_jobs=-1)","452ea4e6":"param_grid = {\n    \"n_estimators\": [100, 200, 300, 400],\n    \"max_depth\": [1, 3, 5, 7],\n    \"criterion\": [\"gini\", \"entropy\"]\n}","36f52591":"model = model_selection.GridSearchCV(\n    estimator = classifier,\n    param_grid = param_grid,\n    scoring = \"accuracy\",\n    verbose = 10,  #max_value\n    n_jobs = 1,\n    \n    #stratified fold is recomended\n    # if we dont specify cv = 5 but it is still going to use cv = 5\n    # if we have categoris as target or its binalry then is it going to use stratified k-fold \n    cv = 5   \n)","0f002720":"model.fit(X,y)","70cbc847":"print(model.best_score_)\nprint(model.best_estimator_.get_params())","04bece65":"# here we need to pay attention to only three parameters\n# 'criterion': 'entropy',\n# 'max_depth': 7,\n# 'n_estimators': 400","2e144bde":"classifier = ensemble.RandomForestClassifier(criterion ='entropy', max_depth = 7, n_estimators = 400,\n                                             n_jobs=-1)","57a1ddfc":"from sklearn.model_selection import cross_val_score","703790b7":"score = cross_val_score(classifier,X,y)","56d6d00a":"print('scores\\n',score)\nprint('\\n cv values', score.shape)\n# so as we said earlier cv=5 is defult values","1ed16773":"score.mean()","9a11088e":"score = cross_val_score(classifier,X,y, cv=10)\nprint('scores\\n',score)\nprint('\\ncv values', score.shape)\nprint('\\nScore_Mean', score.mean())","556db979":"# Grid_Search_On_RANDOM_FOREST_CLASSIFIER\n### you have to do everything inside the cross-validation loop\n### as long as we do that we are not overfillting the model"}}