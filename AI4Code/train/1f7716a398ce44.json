{"cell_type":{"5db315ca":"code","63f538b3":"code","91a6f974":"code","420e4eda":"code","984893f6":"code","5d2505ae":"code","b4b151cb":"code","bcf61e6f":"code","6110f9cd":"code","34b81abc":"code","977f4a29":"code","3e0029e7":"code","ad50b3c4":"code","4bc3ebcd":"code","4376a0f0":"code","e01a98f9":"code","0dd02408":"code","f9d54036":"code","e195a205":"code","59d52c3f":"code","465bf22e":"code","0e48bbce":"code","0179cfdd":"code","76daf042":"code","864125f5":"code","56b75f68":"code","7d8d2807":"markdown","ef15663a":"markdown","9c802f5d":"markdown","ae428146":"markdown","3d0d0fa2":"markdown","15314ce3":"markdown","971351de":"markdown","e2de45fc":"markdown","4ae943b4":"markdown","6f2529e2":"markdown","506333d4":"markdown"},"source":{"5db315ca":"import numpy as np\nimport pandas as pd\nimport scipy\nimport sklearn","63f538b3":"from sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import OneHotEncoder","91a6f974":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_validate","420e4eda":"df_train = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/train.csv', index_col='id')\ndf_test = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/test.csv', index_col='id')","984893f6":"sample_submission = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/sample_submission.csv', index_col='id')","5d2505ae":"binvar = ['bin_' + str(i) for i in range(1,5)]\nordvar = ['ord_' + str(i) for i in range(6)]\nnomvar = ['nom_' + str(i) for i in range(10)]\ndmvar  = ['day', 'month']","b4b151cb":"df_work = df_train.copy()\ny_train = df_work['target'].copy()\ndf_work = pd.concat([df_work.drop('target', axis = 1), df_test])","bcf61e6f":"df_work.drop('bin_0', inplace=True, axis=1)","6110f9cd":"df_work['bin_3'] = df_work['bin_3'].map({'F':0, 'T':1})\ndf_work['bin_4'] = df_work['bin_4'].map({'N':0, 'Y':1})","34b81abc":"df_work['ord_0'] = df_work['ord_0'] - 1","977f4a29":"ord1dict = {'Novice':0, 'Contributor':1, 'Expert':2, 'Master':3, 'Grandmaster':4}\ndf_work['ord_1'] = df_work['ord_1'].map(ord1dict)","3e0029e7":"ord2dict = {'Freezing':0, 'Cold':1, 'Warm':2, 'Hot':3, 'Boiling Hot':4, 'Lava Hot':5}\ndf_work['ord_2'] = df_work['ord_2'].map(ord2dict)","ad50b3c4":"oe = OrdinalEncoder(categories='auto')\ndf_work[ordvar[3:]] = oe.fit_transform(df_work[ordvar[3:]])\nfor var, cl in zip(ordvar[3:], oe.categories_):\n    print(var)\n    print(cl)","4bc3ebcd":"df_work[ordvar] = StandardScaler().fit_transform(df_work[ordvar])","4376a0f0":"df_work[nomvar[5:]].nunique()","e01a98f9":"df_work['nom_5'] = df_work['nom_5'].str[4:]\ndf_work['nom_6'] = df_work['nom_6'].str[3:]\ndf_work['nom_7'] = df_work['nom_7'].str[3:]\ndf_work['nom_8'] = df_work['nom_8'].str[3:]\ndf_work['nom_9'] = df_work['nom_9'].str[3:]","0dd02408":"df_work[nomvar[5:]].nunique()","f9d54036":"enc = OneHotEncoder(categories = 'auto', dtype = 'float64', drop = 'first')\nnom_matrix = enc.fit_transform(df_work[nomvar])\ndf_work.drop(nomvar, inplace=True, axis=1)","e195a205":"enc = OneHotEncoder(categories='auto', dtype = 'float64', drop = 'first')\ndm_matrix = enc.fit_transform(df_work[dmvar])\ndf_work.drop(dmvar, inplace=True, axis=1)","59d52c3f":"df_work.columns","465bf22e":"df_work_sprs =scipy.sparse.hstack([nom_matrix,\n                                   scipy.sparse.coo_matrix(df_work).astype('float64'),\n                                   dm_matrix]).tocsr()\ndisplay(df_work_sprs)","0e48bbce":"X_train = df_work_sprs[:y_train.shape[0]]\nX_test = df_work_sprs[y_train.shape[0]:]","0179cfdd":"%%time\n\nC = 0.12\n\nclf = LogisticRegression(C=C, solver='lbfgs', max_iter=1000, verbose=0, n_jobs=-1)\n\n\nscore = cross_validate(clf, X_train, y_train, cv=3, scoring=\"roc_auc\")\nmean = score['test_score'].mean()\nprint(score['test_score'])\nprint('C =', C, f'{mean:.8f}')","76daf042":"%%time\n\nclf = LogisticRegression(C=C, solver='lbfgs', max_iter=1000, verbose=0, n_jobs=-1)\nclf.fit(X_train, y_train)","864125f5":"y_preds = clf.predict_proba(X_test)[:,1]","56b75f68":"sample_submission['target'] = y_preds\nsample_submission.to_csv('submission.csv')","7d8d2807":"# One hot encoding nomvars & dmvars","ef15663a":"# Ord vars","9c802f5d":"# Training","ae428146":"# Cross-validation","3d0d0fa2":"# Read data","15314ce3":"# Definitely there is something covered in nom vars 5 - 9 but I didn't get it. Still cutting some letters works for me","971351de":"# Bin vars","e2de45fc":"# Nom vars","4ae943b4":"# Creating submission file","6f2529e2":"# Note: Use C-ordered arrays or CSR matrices containing 64-bit floats for optimal performance;\n#       any other input format will be converted (and copied).","506333d4":"# Scaling ord vars"}}