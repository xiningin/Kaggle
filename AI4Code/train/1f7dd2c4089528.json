{"cell_type":{"d2a5b67f":"code","cbe17239":"code","22c5bc7c":"code","099fd94d":"code","f480ea25":"code","59c86bcc":"code","c235198c":"code","dfa49db7":"code","118a7d8a":"code","f45493c6":"code","5cb78a79":"code","e3b09337":"code","35fd0358":"code","c11f5e16":"code","d797b8e7":"code","4290f651":"code","65e9ed27":"markdown","7317c9f5":"markdown","36c30068":"markdown"},"source":{"d2a5b67f":"##### This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cbe17239":"pip install openpyxl","22c5bc7c":"#getting the dataset\ngender = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\ngender.head()","099fd94d":"#Describing statistics about data\ngender.describe()","f480ea25":"#Collecting information about dataset\ngender.info()","59c86bcc":"#Gettimg count for each category\ngender.Discipline.value_counts()","c235198c":"#Looking for null values\ngender.isna().sum()","dfa49db7":"#Getting count of duplicates\ngender.duplicated().sum()","118a7d8a":"import matplotlib.pyplot as plt\n%matplotlib inline\nfig = plt.figure(figsize = (20, 40))\n \n# creating the bar plot for Male and Female participant\nplt.barh(gender.Discipline,gender.Male.sort_values(), color = 'Teal', alpha = 0.7)\nplt.barh(gender.Discipline,gender.Female.sort_values(), color = 'Red', height= 0.4)\ncolors = {'Female':'red', 'Male':'Teal'}         \nlabels = list(colors.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors[label]) for label in labels]\nplt.legend(handles, labels)\nplt.ylabel('Discipline', fontsize = 20)\nplt.xlabel('Total Participants', fontsize = 20)","f45493c6":"#Understanding the distribution of data using boxplot\n# setting the dimensions of the plot\nimport seaborn as sn\nfig, ax = plt.subplots(figsize=(10, 5))\n  \n# drawing the plot\nsn.boxplot(gender.Female)\nsn.swarmplot(gender.Female, color=\".25\")\nplt.show()","5cb78a79":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(10, 5))\n  \n# drawing the plot\nsn.boxplot(gender.Male)\nsn.swarmplot(gender.Male, color=\".25\")\nplt.show()","e3b09337":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(10, 5))\n  \n# drawing the plot\nsn.boxplot(gender.Total)\nsn.swarmplot(gender.Total, color=\".25\")\nplt.show()","35fd0358":"import scipy.stats as stats\nimport pylab","c11f5e16":"#Checking whether data is normally distributed\nstats.probplot(gender.Male, dist = 'norm', plot = pylab)","d797b8e7":"#Checking whether data is normally distributed\nstats.probplot(gender.Female, dist = 'norm', plot = pylab)","4290f651":"#Checking whether data is normally distributed\nstats.probplot(gender.Total, dist = 'norm', plot = pylab)","65e9ed27":"***For a data to be normally distributed, most of the data points should fall on the straight line in the given plot. ***","7317c9f5":"# ***The following method is not exclusive and exhaustive in itself. There are a lot of processes that could be further used to perform the analysis. I have used the most common ones to get a bird eye view of dataset.***","36c30068":"# ***EDA Gender Data***"}}