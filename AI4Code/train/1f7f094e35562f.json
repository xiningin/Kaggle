{"cell_type":{"ad28bb33":"code","1f6bb0d7":"code","3e515f41":"code","22ed289b":"code","159e9bf9":"code","c13ce94a":"code","be839e4a":"code","96f57b20":"markdown","80743967":"markdown","23662ca4":"markdown"},"source":{"ad28bb33":"import cv2\nimport matplotlib.pyplot as plt","1f6bb0d7":"#helper function to plot an image. \n#open cv reads the image in BGR format,so we have to first convert the image to RGB and then plot it.\ndef plot(image):\n    image= cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n    plt.imshow(image)","3e515f41":"img= cv2.imread(\"..\/input\/leena-image\/leena.png\")\nplot(img)","22ed289b":"#function thats create pencil sketch like effect of an image. \n#it accepts image and spits out image.\ndef sketch(img):\n    gray_img= cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\n    \n    invert_img= cv2.bitwise_not(gray_img)\n    \n    smooth_invert = cv2.GaussianBlur(invert_img, (27,27),sigmaX=0,sigmaY=0)\n\n    def dodgev2(x,y):\n        return cv2.divide(x,255-y, scale=256)\n     \n    final_image = dodgev2(gray_img, smooth_invert)\n    \n    return final_image","159e9bf9":"sketched_image=sketch(img)\nplot(sketched_image)","c13ce94a":"def cartoonify(img):\n    num_filters = 1\n    \n    for i in range(num_filters):\n        img_color = cv2.bilateralFilter(img, d=9,sigmaColor=9,sigmaSpace=7)\n        \n    img_gray= cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    \n    img_blur= cv2.medianBlur(img_gray,5)\n    \n    img_edge= cv2.adaptiveThreshold(img_blur,255,cv2.ADAPTIVE_THRESH_MEAN_C,cv2.THRESH_BINARY,9,C=9)\n    \n    img_edge= cv2.cvtColor(img_edge,cv2.COLOR_GRAY2RGB)\n    \n    img_cartoon= cv2.bitwise_and(img_color, img_edge)\n    \n    return img_cartoon\n","be839e4a":"cartoon_image=cartoonify(img)\nplot(cartoon_image)","96f57b20":"# SKETCH EFFECT","80743967":"#  CARTOON EFFECT ","23662ca4":"# ORIGINAL IMAGE"}}