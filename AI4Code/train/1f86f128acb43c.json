{"cell_type":{"61457493":"code","fb7c852b":"code","a5ddac39":"code","3533310e":"code","e8071bc4":"code","362e3aa3":"code","2813d2c7":"code","cf302223":"code","109a1ef9":"code","5ea6b0ae":"markdown","f4107ee7":"markdown","fa9ca5f8":"markdown","dcb1f467":"markdown","0596d98e":"markdown","520cc24d":"markdown","ae5c89cd":"markdown"},"source":{"61457493":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport folium\nfrom folium import plugins\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport missingno as msno\n\nimport os","fb7c852b":"# version check \n\nprint(f'numpy : {np.__version__}')\nprint(f'pandas : {pd.__version__}')\nprint(f'matplotlib : {mpl.__version__}')\nprint(f'folium : {folium.__version__}')","a5ddac39":"# configuration for notebook\n\npd.options.display.max_columns = 40  ","3533310e":"PATH = '\/kaggle\/input\/birdsong-recognition\/'\ntrain = pd.read_csv(f'{PATH}\/train.csv')\ntest = pd.read_csv(f'{PATH}\/test.csv')","e8071bc4":"print(train.shape)\ntrain.head(3)","362e3aa3":"msno.matrix(train)","2813d2c7":"fig, ax = plt.subplots(1, 1, figsize=(20, 5), dpi=200)\nebird_code = train['ebird_code'].value_counts()\nax.bar(ebird_code.index, ebird_code, color='#6EB5FF')\n\nax.text(134, 105, \n        '100 samples for 134 birsds',)\n\n\nax.text(235, 120,\n        f\"mean : {ebird_code.mean():.2f} std: {ebird_code.std():.2f}\",\n        color=\"black\", fontsize=11, fontweight='bold',\n         bbox=dict(boxstyle='round', pad=0.3, color='lightgray')\n)\n\nax.set_ylim(0, 130)\nax.set_xticks([])\nax.margins(0.01, 0.01)\n\nax.set_title('Distribution : bird type', \n             fontsize=15, fontweight='bold', fontfamily='serif',\n             x=0.075, y=1.04,)\n\n\n\nplt.tight_layout()\nplt.show()","cf302223":"train['latitude'] = train['latitude'].apply(lambda x : float(x) if '.' in x else None)\ntrain['longitude'] = train['longitude'].apply(lambda x : float(x) if '.' in x else None)\n\ntry : \n    train.drop(['license', 'file_type'], inplace=True)\nexcept :\n    pass","109a1ef9":"m = folium.Map()\n\ntrain_for_map = train[['latitude', 'longitude', 'species']].dropna()\n\n# Marker Cluster\nplugins.MarkerCluster(train_for_map[['latitude', 'longitude']].values,\n                      list(train_for_map['species'].apply(str).values)\n).add_to(m)\n\n# Mouse Check\nformatter = \"function(num) {return L.Util.formatNum(num, 3) + ' \u00ba ';};\"\nplugins.MousePosition(\n    position='topright',\n    separator=' | ',\n    empty_string='NaN',\n    lng_first=True,\n    num_digits=20,\n    prefix='Coordinates:',\n    lat_formatter=formatter,\n    lng_formatter=formatter,\n).add_to(m)\n\n# minimap\nminimap = plugins.MiniMap()\nm.add_child(minimap)\n\n\nm\n\n","5ea6b0ae":"## [ebird_type, species] Distribution : Bird Type","f4107ee7":"There are many birds with 100 data, but there is definitely little data.","fa9ca5f8":"## [Birdcall Identification] EDA with Visualization\n\nThe current data is a very EDA pleasant situation dealing with voice data, geography data, date data, text data, and structured data. (This information can later be used for pseudo labeling, etc.)\n\nLet's take a look at the overall flow.","dcb1f467":"## Data Load & Feature Check","0596d98e":"## [latitude, longitude] Check Location by Cluster\n\nSince there is latitude and longitude information obtained from new data, you can get some information about the distribution of birds by drawing it as a heat map or cluster.\n\nProbably using text information would be a better structured dataset, but I hope someone else will make it.","520cc24d":"You can see the most in the United States and then the most in Europe.","ae5c89cd":"## Setting for EDA\n\nIf you are curious about my environment, you can also check the settings."}}