{"cell_type":{"25a9e23c":"code","22bd52e0":"code","7c0e1377":"code","e47b16f7":"code","2c4ec53b":"code","99c48280":"code","eb97a831":"code","533c67b0":"code","b72f76ae":"code","2ad0051f":"code","f54eec65":"code","fc39a9e5":"code","7c2f9c6f":"code","176d7cea":"code","daf81f76":"code","dc9a3924":"code","0055b90d":"code","68c88781":"code","ba090877":"code","d675b743":"code","83592b5d":"code","50585bbf":"code","8193297c":"markdown"},"source":{"25a9e23c":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\n%matplotlib inline\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = (15, 6)","22bd52e0":"df = pd.read_csv('..\/input\/international-airline-passengers.csv')","7c0e1377":"df.head()","e47b16f7":"df = df.drop(df.index[144])","2c4ec53b":"df['Month'] = pd.to_datetime(df['Month'],yearfirst=True)","99c48280":"df.info()","eb97a831":"df.index = df['Month']","533c67b0":"df = df.drop('Month',axis=1)","b72f76ae":"df.columns = ['Passengers']","2ad0051f":"df.head()","f54eec65":"df.plot()","fc39a9e5":"from statsmodels.tsa.stattools import adfuller as adf\ndef test_stationarity(timeseries):\n    \n    #Determing rolling statistics\n    rolmean = timeseries.rolling(12).mean()\n    rolstd = timeseries.rolling(12).std()\n\n    #Plot rolling statistics:\n    orig = plt.plot(timeseries, color='blue',label='Original')\n    mean = plt.plot(rolmean, color='red', label='Rolling Mean')\n    std = plt.plot(rolstd, color='black', label = 'Rolling Std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean & Standard Deviation')\n    plt.show(block=False)\n    \n    ","7c2f9c6f":"test_stationarity(df)","176d7cea":"output = (adf(df['Passengers']))","daf81f76":"output","dc9a3924":"dfoutput = pd.Series(output[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\nfor key,value in output[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\nprint(dfoutput)","0055b90d":"#estimating trend and seasonlity\nfrom statsmodels.tsa.seasonal import seasonal_decompose\ndecomposition = seasonal_decompose(df)\n\ntrend = decomposition.trend\nseasonal = decomposition.seasonal\nresidual = decomposition.resid\n\nplt.subplot(411)\nplt.plot(df, label='Original')\nplt.legend(loc='best')\nplt.subplot(412)\nplt.plot(trend, label='Trend')\nplt.legend(loc='best')\nplt.subplot(413)\nplt.plot(seasonal,label='Seasonality')\nplt.legend(loc='best')\nplt.subplot(414)\nplt.plot(residual, label='Residuals')\nplt.legend(loc='best')\nplt.tight_layout()","68c88781":"#we will first use arimax to account only for trend and then later will use sarimax to account for both trend and seasonality","ba090877":"#divide into train and validation set\ntrain = df[:int(0.7*(len(df)))]\nvalid = df[int(0.7*(len(df))):]\n\n#plotting the data\nax = train.plot()\nvalid.plot(ax=ax)","d675b743":"#building the model\nfrom pmdarima.arima import auto_arima\nmodel = auto_arima(train, trace=True, error_action='ignore', suppress_warnings=True)\nmodel.fit(train)\n\nforecast = model.predict(n_periods=len(valid))\nforecast = pd.DataFrame(forecast,index = valid.index,columns=['Prediction'])\n\n#plot the predictions for validation set\nplt.plot(train, label='Train')\nplt.plot(valid, label='Valid')\nplt.plot(forecast, label='Prediction')\nplt.legend(loc='best')\nplt.show()","83592b5d":"#using sarimax to account for seasonality and then forecasting\n#building the model\nfrom pmdarima.arima import auto_arima\nmodel = auto_arima(train, trace=True, error_action='ignore', suppress_warnings=True,seasonal=True,m=12,D=1)\nmodel.fit(train)\n\nforecast = model.predict(n_periods=len(valid))\nforecast = pd.DataFrame(forecast,index = valid.index,columns=['Prediction'])\n\n#plot the predictions for validation set\nplt.plot(train, label='Train')\nplt.plot(valid, label='Valid')\nplt.plot(forecast, label='Prediction')\nplt.legend(loc='best')\nplt.show()","50585bbf":"#will add in more theory to explain better","8193297c":"As p-value is quite greater than critical value, there is non stationarity which can be seen from an increasing rolling mean"}}