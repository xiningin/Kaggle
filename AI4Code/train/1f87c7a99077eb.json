{"cell_type":{"b8e87f35":"code","a054deeb":"code","7a471f7b":"code","9671e3fe":"code","430975fc":"code","3c6eaedc":"code","c05d2bc8":"code","ee7828ec":"code","6843d068":"code","d6c379e2":"code","68baaed4":"code","a29a3d4f":"code","2f39733c":"markdown","74580ab9":"markdown","0fbec829":"markdown"},"source":{"b8e87f35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a054deeb":"import cv2\nimport random\nfrom glob import glob\nfrom matplotlib import pyplot as plt\n%matplotlib inline","7a471f7b":"train = glob(\"\/kaggle\/input\/arya-hw-lines\/train\/train\/*.tif\")\ntest = glob(\"\/kaggle\/input\/arya-hw-lines\/test\/test\/*\")","9671e3fe":"i = random.randint(0, len(train))\nimage = cv2.imread(train[i], 0)\nlabel = open(train[i].split(\".\")[0]+\".gt.txt\").read()\nplt.imshow(image, cmap=\"gray\")\nprint(label)","430975fc":"i = random.randint(0, len(train))\nimage = cv2.imread(train[i], 0)\nlabel = open(train[i].split(\".\")[0]+\".gt.txt\").read()\nplt.imshow(image, cmap=\"gray\")\nprint(label)","3c6eaedc":"i = random.randint(0, len(train))\nimage = cv2.imread(train[i], 0)\nlabel = open(train[i].split(\".\")[0]+\".gt.txt\").read()\nplt.imshow(image, cmap=\"gray\")\nprint(label)","c05d2bc8":"i = random.randint(0, len(train))\nimage = cv2.imread(train[i], 0)\nlabel = open(train[i].split(\".\")[0]+\".gt.txt\").read()\nplt.imshow(image, cmap=\"gray\")\nprint(label)","ee7828ec":"i = random.randint(0, len(train))\nimage = cv2.imread(train[i], 0)\nlabel = open(train[i].split(\".\")[0]+\".gt.txt\").read()\nplt.imshow(image, cmap=\"gray\")\nprint(label)","6843d068":"i = random.randint(0, len(train))\nimage = cv2.imread(train[i], 0)\nlabel = open(train[i].split(\".\")[0]+\".gt.txt\").read()\nplt.imshow(image, cmap=\"gray\")\nprint(label)","d6c379e2":"labels = glob(\"\/kaggle\/input\/arya-hw-lines\/train\/train\/*.txt\")\nlabels = list(map(lambda x: open(x).read(), labels))","68baaed4":"from collections import OrderedDict\nfrom itertools import chain\n\nunique_chars = list(OrderedDict.fromkeys(chain.from_iterable(labels)))\nprint(unique_chars)","a29a3d4f":"print(len(unique_chars))","2f39733c":"## Loading the train and test data","74580ab9":"## Unique Characters present in the labels","0fbec829":"## Some random samples of the train data"}}