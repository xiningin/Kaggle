{"cell_type":{"a5f978d0":"code","060b371d":"code","204281e4":"code","b3ec9985":"code","1ccddbcb":"code","822c8f8c":"code","1eee668a":"code","e4f9b325":"code","cf610bb0":"code","78ef657f":"code","a1f837f5":"code","c9fc2477":"code","aa6d7235":"code","e663ecdb":"code","479f0909":"code","2e454eb0":"code","fc475dde":"code","c9732f11":"code","123fb58a":"code","d48a7f6d":"code","842245c4":"code","b703d224":"code","11975b26":"markdown","d4c9a0f5":"markdown","1ffba374":"markdown","3bbb4b41":"markdown","0072c2e8":"markdown","26a68b96":"markdown","b6f73fcc":"markdown","150571a2":"markdown","a8a33715":"markdown","22b551ab":"markdown","34dd0f6e":"markdown"},"source":{"a5f978d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","060b371d":"import seaborn as sns\nfrom geopandas.tools import geocode\nfrom geopy.geocoders import Nominatim\nimport folium\nfrom folium.plugins import MarkerCluster","204281e4":"data = pd.read_csv('\/kaggle\/input\/all-space-missions-from-1957\/Space_Corrected.csv')","b3ec9985":"data.dtypes","1ccddbcb":"data.drop(data.columns[[0,1]],axis=1,inplace=True)","822c8f8c":"data.dtypes","1eee668a":"sns.heatmap(data=pd.isna(data),yticklabels=False,cmap='YlGn')","e4f9b325":"data.rename(columns={' Rocket':'Rocket'},inplace=True)","cf610bb0":"data.head()","78ef657f":"data.drop(data.columns[[5]],axis=1,inplace=True)","a1f837f5":"result=pd.DataFrame(columns=['Location','Coordinates'])\nresult['Location']=data['Location'].unique()","c9fc2477":"result","aa6d7235":"result['Location_2']=result['Location'].str.split(',').str[1]","e663ecdb":"locator = Nominatim(user_agent='myGeocoder')\nfor i in range(result.shape[0]):\n    if locator.geocode(result.loc[i]['Location_2'])!=None:\n        result.loc[i,'Coordinates'] = locator.geocode(result.loc[i]['Location_2'])[1]\n    else:\n        result.loc[i,'Coordinates'] = None","479f0909":"result","2e454eb0":"data_1=data","fc475dde":"data_1=data_1.merge(result,how='left',on='Location')","c9732f11":"data_1","123fb58a":"data_1[pd.isna(data_1.Coordinates)][['Location']].value_counts()","d48a7f6d":"data_1.loc[data_1.Location_2==' Plesetsk Cosmodrome','Coordinates']=[[62.925644,40.577878]]\ndata_1.loc[data_1.Location_2==' Kiritimati Launch Area','Coordinates']=[[0,-154]]\ndata_1.loc[data_1.Location_2==' M?\u0081hia Peninsula','Coordinates']=[[-39.15,177.9]]\ndata_1.loc[data_1.Location_2==' Palmachim Airbase','Coordinates']=[[31.897778,34.690556]]\ndata_1.loc[data_1.Location_2==' Yasny Cosmodrome','Coordinates']=[[51.05,59.966667]]\ndata_1.loc[data_1.Location_2==' San Marco Launch Platform','Coordinates']=[[-2.938333,40.2125]]\ndata_1.loc[data_1.Location_2==' RAAF Woomera Range Complex','Coordinates']=[[-30.9553,136.5322]]\ndata_1.loc[data_1.Location_2==' Wenchang Satellite Launch Center','Coordinates']=[[19.614354,110.951057]]\ndata_1.loc[data_1.Location_2==' Alc?\u203antara Launch Center','Coordinates']=[[-2.339444,-44.4175]]\ndata_1.loc[data_1.Location_2==' Shahrud Missile Test Site','Coordinates']=[[36.418056,54.976389]]\ndata_1.loc[data_1.Location_2==' Barents Sea Launch Area','Coordinates']=[[69.5,34.2]]","842245c4":"sns.heatmap(data=pd.isna(data_1),yticklabels=False,cmap='YlGn')","b703d224":"m = folium.Map(location=[0, 0],zoom_start=2)\nmc = MarkerCluster()\nfor i in range(data_1.shape[0]):\n    mc.add_child(folium.Marker(location=list(data_1.loc[i]['Coordinates']),popup = folium.Popup(data_1.loc[i]['Location'])))\nm.add_child(mc)","11975b26":"Preparing table for feeding unique locations to Geocode","d4c9a0f5":"Checking for missing values","1ffba374":"Using folium to map launch site coordinates","3bbb4b41":"Dropping 'Rocket' column, which has significant missing values and there is no meaningful way to adjust using existing values","0072c2e8":"Using Geocode to retrieve lat\/long values","26a68b96":"Hardcoding missing coordinates","b6f73fcc":"First 2 columns are redundant","150571a2":"So far other submissions have mapped\/geocoded using plotly. Although robust, plotly geographical plots are not visually appealing. <br>\nHere attempt is made to map all launch sites using folium library's 'Marker cluster' plugin to address this weakness.","a8a33715":"![](http:\/\/rocketrundown.com\/wp-content\/uploads\/2020\/01\/Spaceflight-in-2019.jpg)","22b551ab":"Creating a copy of data for backup","34dd0f6e":"Importing relevant libraries"}}