{"cell_type":{"784c7adf":"code","f62a75f3":"code","89639888":"code","5a6c24f6":"code","5e52fbeb":"code","01afd7d5":"code","b6dab58d":"code","061d483d":"code","3d6e4d34":"markdown"},"source":{"784c7adf":"pip install mglearn","f62a75f3":"import mglearn\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","89639888":"from sklearn.neighbors import KNeighborsRegressor\nX,y = mglearn.datasets.make_wave(n_samples=40)","5a6c24f6":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,random_state=0)","5e52fbeb":"reg = KNeighborsRegressor(n_neighbors=3)\nreg.fit(X_train,y_train)","01afd7d5":"reg.predict(X_test)","b6dab58d":"reg.score(X_test,y_test) #R^2 ","061d483d":"fig,axes = plt.subplots(1,3,figsize=(15,4))\nline = np.linspace(-3,3,1000).reshape(-1,1)\nfor n_neighbors,ax in zip([1,3,9],axes):\n    reg = KNeighborsRegressor(n_neighbors=n_neighbors)\n    reg.fit(X_train,y_train)\n    ax.plot(line,reg.predict(line))\n    ax.plot(X_train,y_train,'^',c=mglearn.cm2(0),markersize=8)\n    ax.plot(X_test,y_test,'v',c=mglearn.cm2(1),markersize=8)\n    ax.set_title(\"{} neighbor(s)\\n train score: {:.2f} test score: {:.2f}\".format(n_neighbors\n     ,reg.score(X_train,y_train),reg.score(X_test,y_test)))\n    ax.set_xlabel('Feature')\n    ax.set_ylabel('Target')\naxes[0].legend([\"Model Predictions\",\"Trainig Data\/Target\",\"Test Data\/Target\"],loc=\"best\")","3d6e4d34":"K-nearest Neighbors Regression done using the Wave Dataset. Reference taken from Introduction to ML with Python-O'Reilly"}}