{"cell_type":{"d76fa091":"code","5f2a424c":"code","cc8d8309":"code","5386875a":"code","881d01c8":"code","8c958d54":"code","c71c9e58":"code","a1629888":"code","fdd50e93":"code","4eec964a":"code","3c042cee":"code","284c8a3d":"code","4ce71e0a":"code","68b82199":"code","0a3fae89":"code","6dffb78d":"code","9f8adf97":"code","7d6c346e":"code","5ed55b26":"code","222d182f":"code","2471a047":"code","4220e202":"code","6fe712db":"code","d9a8d399":"code","488cbd8c":"code","6e0d3f5f":"code","6c8c3fa0":"code","0d9c5642":"code","76f973a4":"code","fe50011f":"code","59cec4f2":"markdown","b6fc8392":"markdown","5a0e2b3a":"markdown","945e891a":"markdown","46078e81":"markdown","902eb737":"markdown","0d291169":"markdown","25e96c63":"markdown","6b944c24":"markdown","3cd2a60d":"markdown","251403f0":"markdown","c2efa3cf":"markdown","50789f92":"markdown","a28b2eec":"markdown","b7568b15":"markdown","2b518a9b":"markdown","23c74aec":"markdown","ffbcb3e5":"markdown","2f039564":"markdown","69030747":"markdown"},"source":{"d76fa091":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f2a424c":"df = pd.read_csv('\/kaggle\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\ndf","cc8d8309":"tdf = df.copy()\ntdf\n","5386875a":"print(type(tdf))\nprint(\"********************\")\nprint(tdf.shape)  #satir ve sutun sayilari hakkinda bilgi verir\nprint(\"********************\")\nprint(tdf.size) # icinde kac eleman oldugunu soyler\nprint(\"********************\")\nprint(tdf.dtypes)\nprint(\"********************\")\nprint(tdf.index)  # index hakkinda bize bilgiler verir\nprint(\"********************\")\nprint(tdf.columns)\n","881d01c8":"tdf.describe()","8c958d54":"tdf.info()","c71c9e58":"tdf.shape","a1629888":"tdf.size","fdd50e93":"dtypes=tdf.dtypes\ndtypes = pd.DataFrame(dtypes, columns = ['dtypes'] )\ndtypes","4eec964a":"nonnull = pd.DataFrame(tdf.count(), columns = ['nonnull'] )\nnonnull","3c042cee":"isnull = pd.DataFrame(tdf.isnull().sum(), columns = ['isnull'] )\nisnull","284c8a3d":"nununique = pd.DataFrame(tdf.nunique(), columns = ['nununique'] )\nnununique","4ce71e0a":"frames = [ dtypes, nonnull, isnull, nununique]\nframes1= pd.concat((frames), axis = 1, ignore_index = False)\nframes1.reset_index(inplace=True)\nframes1=frames1.rename(columns={'index':\"Columns\"})\nframes1","68b82199":"tdf.columns = map(str.lower, tdf.columns)\ntdf","0a3fae89":"tdf.raintoday.replace('No', 'noRain', inplace=True)\ntdf.raintomorrow.replace('No', 'noRain', inplace=True)\ntdf.raintoday.replace('Yes', 'Rain', inplace=True)\ntdf.raintomorrow.replace('Yes', 'Rain', inplace=True)\ntdf","6dffb78d":"tdf['date'] = pd.to_datetime(tdf['date'], format='%Y-%m-%d').dt.strftime('%d\/%m\/%Y')\ntdf\n","9f8adf97":"tdf['difference'] = tdf['maxtemp'] - tdf['mintemp']\ntdf.difference","7d6c346e":"tdf.drop(['evaporation', 'sunshine'], axis=1, inplace=True)\ntdf","5ed55b26":"cities = tdf.drop_duplicates(subset = [\"location\"])\ncities.location\n\n\n","222d182f":"tdf.loc[tdf.groupby('location').rainfall.idxmax()]","2471a047":"tdf[tdf.location == 'Albury'].sort_values(by='maxtemp', ascending=False)\n","4220e202":" tdf.isna().sum()","6fe712db":"tdf.dropna(subset=['windgustdir'], inplace=True)\ntdf","d9a8d399":"tdf1 = df.copy()\ntdf1=tdf1.sort_values(by='Location').groupby('Location').agg({'Evaporation': max, 'Sunshine':max})\ntdf1\n#sort_values(by='Location')","488cbd8c":"tdf2 = df.copy()\ntdf2=tdf2.sort_values(by='Location').groupby('Location').agg({'Evaporation': min, 'Sunshine':min})\ntdf2","6e0d3f5f":"tdf3 = df.copy()\ntdf3=tdf3.groupby(tdf3.Location)[['Evaporation', 'Sunshine']].median()\ntdf3","6c8c3fa0":"tdf4 = pd.merge(pd.merge(tdf1,tdf2,on='Location', suffixes=[None,'_min']),tdf3,on='Location',suffixes=['_max','_median'])\ntdf4 = tdf4[['Evaporation_max', 'Evaporation_min', 'Sunshine_max', 'Sunshine_min', 'Evaporation_median', 'Sunshine_median']]\ntdf4","0d9c5642":"tdf","76f973a4":"Perth=tdf[tdf.location == 'Perth'].sort_values(by='maxtemp', ascending=False)\nPerth.date.iloc[0]\n\n\n","fe50011f":"tdf.groupby(\"location\").mean()","59cec4f2":"13) Create a new column called \"difference\", calculate the difference between maxtemp and mintemp columns for each row, and store the value in this new column.","b6fc8392":"15) Filter out all the data for the city 'Albury' and then sort according to maxtemp column.","5a0e2b3a":"1. Read the dataset as a dataframe. Create a copy of your dataframe. Solve the rest of the questions using this dataframe copy.","945e891a":"17) Remove the rows with NaN values in \"windgustdir\" column from the dataframe permanently.","46078e81":"\n6. Find out the null counts of the columns and save the result as a dataframe.","902eb737":"3. Find out the shape and size info of the dataset.","0d291169":"8) Merge the dataframes you created in questions 4-5-6-7. Expected output:","25e96c63":"11) Change the data type of \"date\" (object) column to datetime64 and reformat the date as DD\/MM\/YYYY.","6b944c24":"14) Remove the evaporation and sunshine columns from the dataset permanently.","3cd2a60d":"2. Find out the describe and info attributes of the dataframe. Analyze these information and create a short write-up according to your findings.","251403f0":"10) Change all the No values to NoRain and all the Yes values to Rain in raintoday and raintomorrow columns.","c2efa3cf":"20) Group your dataframe by location and find out the averages of all numeric values.","50789f92":"14) Find out the most rainy day for each city.","a28b2eec":"5) Find out the non-null counts of the columns and save the result as a dataframe.","b7568b15":"16) Find out the NaN counts for each column.","2b518a9b":"9) Lowercase all column names.","23c74aec":"7) Find out the unique counts of the columns and save the result as a dataframe.","ffbcb3e5":"19) Find out the hottest day of \"Perth\". Example output: Timestamp('2015-01-05 00:00:00')","2f039564":"4. Find out the types values of the columns and save the result as a dataframe.","69030747":"18) Create a new dataframe, use \"Location\" column as the index of the dataframe, display the min, max, and median values of \"evaporation\" and \"sunshine\" columns in this dataframe."}}