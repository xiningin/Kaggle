{"cell_type":{"8496b55c":"code","fb59985e":"code","c83c2d7d":"code","8b07ada6":"code","a34e6377":"code","18b59187":"code","44ae7abb":"code","daf5ef2f":"code","fb7ffb7b":"code","5e16e752":"code","e1f86987":"code","1b7bdab1":"code","c9bac3ad":"code","eb7ac4f6":"code","76c1c243":"code","56c817af":"code","1bd61b2b":"code","36b39a76":"code","79e8ec84":"code","96369e59":"code","bdb0549a":"code","41d09c27":"code","e970ca6a":"markdown","6a0d3198":"markdown","471e67c3":"markdown","5eed34fb":"markdown","fcc9b251":"markdown","a73b5ed3":"markdown","1d218493":"markdown","148cadc7":"markdown","5e41a7b3":"markdown","d8d9d32c":"markdown","822aaf7c":"markdown","590af079":"markdown","b753c76b":"markdown","8f9ee1e8":"markdown","adf5d316":"markdown","6b95d03e":"markdown"},"source":{"8496b55c":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","fb59985e":"data_train = pd.read_csv('..\/input\/train.csv')\ndata_test = pd.read_csv('..\/input\/test.csv')","c83c2d7d":"data_train.info()","8b07ada6":"data_train.head()","a34e6377":"data_list=[data_train,data_test]\ndata_combine = pd.concat(data_list,axis=0, join='outer',join_axes=None,ignore_index=False,levels=None,names=None,keys=['data_train','data_test'],\n                         verify_integrity=False)","18b59187":"list_columns = list(data_combine.columns)\n\ncolumn_int          = []\ncolumn_int_nan      = []\ncolumn_int_notnan   = []\ncolumn_float        = []\ncolumn_float_nan    = []\ncolumn_float_natnan = []\ncolumn_object       = []\n\nfor i in list_columns:\n    if data_combine[i].dtypes==int:\n        column_int.append(i)\n        if data_combine[i].isnull().sum()==0:\n            column_int_notnan.append(i)\n        else:\n            column_int_nan.append(i)\n    elif data_combine[i].dtypes==float:\n        column_float.append(i)\n        if data_combine[i].isnull().sum()==0:\n            column_float_notnan.append(i)\n        else:\n            column_float_nan.append(i)\n    else :#object\n        column_object.append(i)","44ae7abb":"column_nan_list=[column_int_nan,column_float_nan]\nfor column in column_nan_list:\n    print(data_combine[column].isnull().sum())\n    print('-'*30)\nprint(data_combine.shape)","daf5ef2f":"print('1%:',len(data_combine)*0.01)\nprint('5%:',len(data_combine)*0.05)\nprint('10%:',len(data_combine)*0.1)","fb7ffb7b":"column_float_nan_001=[]\ncolumn_float_nan_005=[]\ncolumn_float_nan_01 =[]\n\nfor i in list(column_float_nan):\n        if data_combine[i].isnull().sum() <= 29:\n            column_float_nan_001.append(i)\n        elif data_combine[i].isnull().sum() > 29 and data_combine[i].isnull().sum() <= 292:\n            column_float_nan_005.append(i)\n        else:\n            column_float_nan_01.append(i)","5e16e752":"for i in column_float_nan_001:\n    print(i)\n    print(data_combine[i][:3])","e1f86987":"for column in ['BsmtFinSF1','BsmtFinSF2','BsmtUnfSF','GarageArea','MasVnrArea','TotalBsmtSF']:\n    data_combine[column].fillna(int(data_combine[column].mean()),inplace=True)\nfor column in ['BsmtFullBath','BsmtHalfBath','GarageCars']:\n    data_combine[column].fillna(int(data_combine[column].mode()),inplace=True)\n\ndata_combine[column_float_nan_001].isnull().sum()","1b7bdab1":"for i in column_float_nan_005:\n    print(i)\n    print(data_combine[i][:3])","c9bac3ad":"list_GarageYrBlt_was_missing = list(data_combine['GarageYrBlt'].isnull())\n\nfor i in range(len(list_GarageYrBlt_was_missing)):\n    if list_GarageYrBlt_was_missing[i]==False:\n        list_GarageYrBlt_was_missing[i]=1\n    else:\n        list_GarageYrBlt_was_missing[i]=0\n\ndata_combine['GarageYrBlt_was_missing']=list_GarageYrBlt_was_missing\ndata_combine['GarageYrBlt'].fillna(int(data_combine['GarageYrBlt'].mean()),inplace=True)\n\ndata_combine[column_float_nan_005].isnull().sum()","eb7ac4f6":"for i in column_float_nan_01:\n    print(i)\n    print(data_combine[i][:3])\n#SalePrice\u4e0d\u8655\u7406","76c1c243":"list_LotFrontage_was_missing = list(data_combine['LotFrontage'].isnull())\n\nfor i in range(len(data_combine)):\n    if list_LotFrontage_was_missing[i]==False:\n        list_LotFrontage_was_missing[i]=1\n    else:\n        list_LotFrontage_was_missing[i]=0\n\ndata_combine['LotFrontage_was_missing']=list_LotFrontage_was_missing\ndata_combine['LotFrontage'].fillna(int(data_combine['LotFrontage'].mean()),inplace=True)\n\ndata_combine[column_float_nan_01].isnull().sum()","56c817af":"for column in column_object:\n    print(column)\n    print ('n_unique: ',data_combine[column].nunique())\n    print(data_combine[column].unique(),'\\n')","1bd61b2b":"pd.get_dummies(data_combine['Alley']).head()","36b39a76":"data_combine=data_combine.join(pd.get_dummies(data_combine[column_object]).astype(int))\nfor columns in column_object:\n    data_combine.drop([columns],axis = 1,inplace=True)","79e8ec84":"column_float.remove('SalePrice')\nfor columns in column_float:\n    data_combine[columns]=data_combine[columns].astype(int)","96369e59":"data_train=data_combine.head(1460)\ndata_train['SalePrice']=data_train['SalePrice'].astype(int)\ndata_test=data_combine.tail(1459)\ndata_test=data_test.drop(['SalePrice'],axis=1)\ndata_train.to_csv('train_data.csv')\ndata_test.to_csv('test_data.csv')","bdb0549a":"data_train.info()","41d09c27":"data_train.head()","e970ca6a":"### Add 'LotFrontage_was_missing' and fillna 'LotFrontage'","6a0d3198":"1. SalePrice - the property's sale price in dollars. This is the target variable that you're trying to predict.\n1. MSSubClass: The building class\n1. MSZoning: The general zoning classification\n1. LotFrontage: Linear feet of street connected to property\n1. LotArea: Lot size in square feet\n1. Street: Type of road access\n1. Alley: Type of alley access\n1. LotShape: General shape of property\n1. LandContour: Flatness of the property\n1. Utilities: Type of utilities available\n1. LotConfig: Lot configuration\n1. LandSlope: Slope of property\n1. Neighborhood: Physical locations within Ames city limits\n1. Condition1: Proximity to main road or railroad\n1. Condition2: Proximity to main road or railroad (if a second is present)\n1. BldgType: Type of dwelling\n1. HouseStyle: Style of dwelling\n1. OverallQual: Overall material and finish quality\n1. OverallCond: Overall condition rating\n1. YearBuilt: Original construction date\n1. YearRemodAdd: Remodel date\n1. RoofStyle: Type of roof\n1. RoofMatl: Roof material\n1. Exterior1st: Exterior covering on house\n1. Exterior2nd: Exterior covering on house (if more than one material)\n1. MasVnrType: Masonry veneer type\n1. MasVnrArea: Masonry veneer area in square feet\n1. ExterQual: Exterior material quality\n1. ExterCond: Present condition of the material on the exterior\n1. Foundation: Type of foundation\n1. BsmtQual: Height of the basement\n1. BsmtCond: General condition of the basement\n1. BsmtExposure: Walkout or garden level basement walls\n1. BsmtFinType1: Quality of basement finished area\n1. BsmtFinSF1: Type 1 finished square feet\n1. BsmtFinType2: Quality of second finished area (if present)\n1. BsmtFinSF2: Type 2 finished square feet\n1. BsmtUnfSF: Unfinished square feet of basement area\n1. TotalBsmtSF: Total square feet of basement area\n1. Heating: Type of heating\n1. HeatingQC: Heating quality and condition\n1. CentralAir: Central air conditioning\n1. Electrical: Electrical system\n1. 1stFlrSF: First Floor square feet\n1. 2ndFlrSF: Second floor square feet\n1. LowQualFinSF: Low quality finished square feet (all floors)\n1. GrLivArea: Above grade (ground) living area square feet\n1. BsmtFullBath: Basement full bathrooms\n1. BsmtHalfBath: Basement half bathrooms\n1. FullBath: Full bathrooms above grade\n1. HalfBath: Half baths above grade\n1. Bedroom: Number of bedrooms above basement level\n1. Kitchen: Number of kitchens\n1. KitchenQual: Kitchen quality\n1. TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n1. Functional: Home functionality rating\n1. Fireplaces: Number of fireplaces\n1. FireplaceQu: Fireplace quality\n1. GarageType: Garage location\n1. GarageYrBlt: Year garage was built\n1. GarageFinish: Interior finish of the garage\n1. GarageCars: Size of garage in car capacity\n1. GarageArea: Size of garage in square feet\n1. GarageQual: Garage quality\n1. GarageCond: Garage condition\n1. PavedDrive: Paved driveway\n1. WoodDeckSF: Wood deck area in square feet\n1. OpenPorchSF: Open porch area in square feet\n1. EnclosedPorch: Enclosed porch area in square feet\n1. 3SsnPorch: Three season porch area in square feet\n1. ScreenPorch: Screen porch area in square feet\n1. PoolArea: Pool area in square feet\n1. PoolQC: Pool quality\n1. Fence: Fence quality\n1. MiscFeature: Miscellaneous feature not covered in other categories\n1. MiscVal: $Value of miscellaneous feature\n1. MoSold: Month Sold\n1. YrSold: Year Sold\n1. SaleType: Type of sale\n1. SaleCondition: Condition of sale","471e67c3":"# Combine Data","5eed34fb":"# Process Float","fcc9b251":"### Add 'GarageYrBlt_was_missing' and fillna 'GarageYrBlt'","a73b5ed3":"# Change datypes","1d218493":"# Import","148cadc7":"# Read Files","5e41a7b3":"# Process object","d8d9d32c":"## column_float_nan_001","822aaf7c":"## column_float_nan_005","590af079":"### fillna ","b753c76b":"# Column Classification","8f9ee1e8":"### One-Hot Encoding","adf5d316":"# Split Data","6b95d03e":"## column_float_nan_01"}}