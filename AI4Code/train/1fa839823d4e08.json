{"cell_type":{"6352c594":"code","740c6799":"code","03440cc8":"code","1ef3e623":"code","f8cfe13e":"code","8a8daa48":"code","5dce7793":"code","00696881":"code","bd3a8425":"code","85b0ccbf":"code","ae4cdf26":"code","c5fad5fc":"code","50f56d8e":"markdown","08129d92":"markdown"},"source":{"6352c594":"#importing necessary libraries\nimport os\nimport numpy as np\nimport pandas as pd\nfrom datetime import datetime\nimport matplotlib.pyplot as plt","740c6799":"#checking asset details\nasset_details=pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/asset_details.csv\")\nprint(asset_details.shape)\nasset_details.head()","03440cc8":"#checking sample submission file\nex_sub=pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/example_sample_submission.csv\")\nprint(ex_sub.shape)\nex_sub.head()","1ef3e623":"#checking example test file\nex_test=pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/example_test.csv\")\nprint(ex_test.shape)\nex_test.head()","f8cfe13e":"#checking train file\ntrain=pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/train.csv\")\nprint(train.shape)\ntrain.head()","8a8daa48":"#checking supplemental train file\nsup_train=pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/supplemental_train.csv\")\nprint(sup_train.shape)\nsup_train.head()","5dce7793":"#checkinbg the mathematical detail of train dataset\ntrain.describe()","00696881":"#checking the count in each column and therew data type\ntrain.info(show_counts =True)","bd3a8425":"#checking the null values\ntrain.isna().sum()","85b0ccbf":"#count of number of cryptocoin\nplt.hist(train['Asset_ID'],bins=np.unique(train['Asset_ID']))","ae4cdf26":"#assest details\nasset_details","c5fad5fc":"#bitcoin and there count\nfor i in asset_details.index:\n    print(asset_details['Asset_Name'][i],\": \\t\",list(train['Asset_ID'].values).count(i))","50f56d8e":"* train.csv - The training set\n    * timestamp - A timestamp for the minute covered by the row.\n    * Asset_ID - An ID code for the cryptoasset.\n    * Count - The number of trades that took place this minute.\n    * Open - The USD price at the beginning of the minute.\n    * High - The highest USD price during the minute.\n    * Low - The lowest USD price during the minute.\n    * Close - The USD price at the end of the minute.\n    * Volume - The number of cryptoasset units traded during the minute.\n    * VWAP - The volume weighted average price for the minute.\n    * Target - 15 minute residualized returns. See the 'Prediction and Evaluation' section of this notebook for details of      how the target is calculated.\n \n \n* example_test.csv - An example of the data that will be delivered by the time series API.\n\n* example_sample_submission.csv - An example of the data that will be delivered by the time series API. The data is just copied from train.csv.\n\n* asset_details.csv - Provides the real name and of the cryptoasset for each Asset_ID and the weight each cryptoasset receives in the metric.\n\n* gresearch_crypto - An unoptimized version of the time series API files for offline work. You may need Python 3.7 and a Linux environment to run it without errors.\n\n* supplemental_train.csv - After the submission period is over this file's data will be replaced with cryptoasset prices from the submission period. In the Evaluation phase, the train, train supplement, and test set will be contiguous in time, apart from any missing data. The current copy, which is just filled approximately the right amount of data from train.csv is provided as a placeholder.","08129d92":"<b>Describing Dataset<\/b>"}}