{"cell_type":{"8ff05c99":"code","dd8657a8":"code","fbd15c62":"code","784f1742":"code","66c5c417":"code","85b7bba4":"code","93f031bd":"code","fc575124":"code","5c20422a":"code","fac637ad":"code","952916a6":"markdown","e5f8c872":"markdown","19ccf3e9":"markdown","370eba79":"markdown"},"source":{"8ff05c99":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ny_test = pd.read_csv('y_test.csv')\ny_train = pd.read_csv('y_train.csv')\nx_test = pd.read_csv('x_test.csv')\nx_train = pd.read_csv('x_train.csv')","dd8657a8":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\n\ndef performance(ytrue, ypredicted):\n    print(\"MSE: \",np.sqrt(mean_squared_error(ytrue, ypredicted))) \n    print(\"MAE: \", np.sqrt(mean_absolute_error(ytrue, ypredicted))) ","fbd15c62":"#!pip install lightgbm","784f1742":"import lightgbm as lgb\nmodel = lgb.LGBMRegressor(objective='regression',num_leaves=5,\n                              learning_rate=0.05, n_estimators=720,\n                              max_bin = 55, bagging_fraction = 0.8,\n                              bagging_freq = 5, feature_fraction = 0.2319,\n                              feature_fraction_seed=9, bagging_seed=9,\n                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)\nmodel.fit(x_train, y_train)","66c5c417":"del y_test;\ndel y_train;\ndel x_test;\ndel x_train;\n\nimport gc;\ngc.collect();","85b7bba4":"weather_test = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/weather_test.csv')\ntest = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/test.csv')\nbuilding_metadata = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/building_metadata.csv')\n\ntest = pd.merge(test,building_metadata,how = 'left') \ntest = pd.merge(test,weather_test, on = ['site_id','timestamp'], how = 'left')","93f031bd":"gc.collect();","fc575124":"y_lgbm = model.predict(test)","5c20422a":"import pandas as pd\n\nsubmission = pd.DataFrame(y_lgbm)","fac637ad":"submission_2.to_csv('submission.csv',index=False)","952916a6":"#### We could not take the test data provided by kaggle, as after we do preprocessing the RAM is full.","e5f8c872":"# Models implementation","19ccf3e9":"## Light GBM","370eba79":"#### We already implemented 3 models in Kaggle notebook (LR, SGD Regressor and LGBM) on new_train and validation (Which are splitted from train to choose the model \"LGBM\"), then we fine tuned LGBM and trained it on all training data"}}