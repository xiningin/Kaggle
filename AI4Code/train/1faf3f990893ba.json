{"cell_type":{"7ec0253d":"code","f54af512":"code","0ae8b7ba":"code","3cfafcbe":"code","96bfae10":"code","7ce89f22":"code","3a88ce9e":"code","564b7346":"code","db996bfa":"code","33c51c5a":"code","86421477":"code","bb11ba8f":"code","ac773baa":"code","4e9dbe6f":"code","dd758602":"code","bed50c38":"code","c6e64782":"code","cf5b082c":"code","3cf3fe5e":"code","0dc2b5b3":"code","517d953c":"code","1434a59b":"code","b83334bd":"code","98f20cc2":"code","fec42c22":"code","d0616b01":"markdown","612e4b84":"markdown","11700be7":"markdown","445165f2":"markdown"},"source":{"7ec0253d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f54af512":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","0ae8b7ba":"# dataset check\ndf.head(5)","3cfafcbe":"# data type & missing value check\ndf.info()","96bfae10":"# rows and columns(7787 records and 12 columns)\ndf.shape","7ce89f22":"# sum of null values\ndf.isnull().sum()","3a88ce9e":"# missing values ratio\ndf.isnull().sum()\/len(df)*100","564b7346":"# since the missing value ratio of director is high, I will drop it\n\ndf.drop('director', axis = 1, inplace=True)","db996bfa":"df.isnull().sum()","33c51c5a":"df.date_added.fillna('unknown', inplace=True)","86421477":"# Data preprocessing : date_added -> year_added\ndf['year_added'] = df.date_added.apply(lambda x : str(x).split(',')[-1])","bb11ba8f":"# Replace missing values with maximum\ndf.year_added.value_counts()\n\ndf['year_added'] = df.year_added.apply(lambda x : str(x).replace('unknown', '2019'))","ac773baa":"# removing extra space\ndf['year_added'] = df.year_added.apply(lambda x : str(x).replace(' ', ''))","4e9dbe6f":"df.year_added.value_counts()","dd758602":"df.isnull().sum()","bed50c38":"#displaying the most occurred country\ndf.country.value_counts()","c6e64782":"#filling null values of country with most occuring country\ndf.country.fillna(\"United_states\",inplace= True)","cf5b082c":"#displaying the most occurred rating\ndf.rating.value_counts()","3cf3fe5e":"#filling null values of rating with most occuring rating\ndf.rating.fillna(\"TV-MA\",inplace= True)","0dc2b5b3":"# displaying all the countries with most contribution to netflix content\nx= df.country.value_counts().head(20)\nplt.figure(figsize=(10,10))\nsns.set_style(\"whitegrid\")   #set style to whitegrid\nax= sns.barplot(x.values,x.index)   #using bar for visualization\nax.set_xlabel(\"Number of content\")\nax.set_ylabel(\"Number of country\")","517d953c":"# distribution of type of content on netflix \nplt.figure(figsize=(10,10))\n\nx= df.type.value_counts()\nsns.countplot(x= \"type\",data= df)","1434a59b":"plt.figure(figsize=(15,5))\nsns.histplot(df.release_year[df.type=='Movie'],color='r')\nsns.histplot(df.release_year[df.type=='TV Show'],color='y')\nplt.legend(['Movie','TV Show'])\nplt.show()","b83334bd":"# content distribution based on rating\nplt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"rating\", data=df,order=df['rating'].value_counts().index[0:20])","98f20cc2":"# content distribution based on rating : South Korea\nplt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"rating\", data=df,order=df.rating[df.country=='South Korea'].value_counts().index[0:20])","fec42c22":"x= df.rating.value_counts()\nplt.figure(figsize=(10,10))\n\nlabels= list(x.index)\nplt.pie(x.values,labels= labels,autopct= \"%1.1f%%\")\nplt.show()","d0616b01":"data info","612e4b84":"# Visualization","11700be7":"# Thank you!","445165f2":"# EDA"}}