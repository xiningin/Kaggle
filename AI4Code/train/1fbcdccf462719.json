{"cell_type":{"ab77a978":"code","0d4bc221":"code","ecbf8a5f":"code","6cccf82f":"code","cb80dc5d":"code","d66b83c9":"code","9c2a47c7":"code","d105e3e1":"code","7c687aba":"code","c935724b":"code","d0ba6ebb":"markdown","bdb4245e":"markdown","8dd93442":"markdown","55a7dd7e":"markdown","ef8ccfdf":"markdown","844a6260":"markdown","71f4b9f3":"markdown","ee9cd1a0":"markdown","7d0f4b22":"markdown"},"source":{"ab77a978":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0d4bc221":"df = pd.read_excel('\/kaggle\/input\/lottery-br\/megas.xls')\ndf","ecbf8a5f":"df.info()","6cccf82f":"df2 = df.drop(['date_occured','lottery'], axis=1)\ndf2 = df2.to_numpy()","cb80dc5d":"type(df2)","d66b83c9":"df2","9c2a47c7":"df2.sort(axis=1)\ndf2","d105e3e1":"df2 = pd.DataFrame({'Draw1': df2[:, 0], 'Draw2': df2[:, 1], 'Draw3': df2[:, 2], 'Draw4': df2[:, 3], 'Draw5': df2[:, 4], 'Draw6': df2[:, 5]})\ndf2","7c687aba":"df3 = pd.concat([df, df2], axis=1, sort=False)\ndf3","c935724b":"df3 = df3.drop(['ball_01','ball_02','ball_03','ball_04','ball_05','ball_06'], axis=1)\ndf3","d0ba6ebb":"# The solution","bdb4245e":"# Cleaning","8dd93442":"# Changing DataFrame to Arrays","55a7dd7e":"# Checking","ef8ccfdf":"\n# Thank You!\n## Is there a way to make this code better? Leave your comment below!","844a6260":"# The problem  (II)","71f4b9f3":"# Changing Arrays to DataFrame","ee9cd1a0":"# Wow! Fantastic!","7d0f4b22":"# Showing"}}