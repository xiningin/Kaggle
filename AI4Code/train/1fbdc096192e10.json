{"cell_type":{"b3754b4a":"code","f9d88bbb":"code","2477cf9a":"code","fc6d3ffd":"code","6788574e":"code","729745e2":"code","03b08fe1":"code","eb12fd12":"code","768327a6":"code","eefb5283":"code","4d3a8bea":"code","c39a8b5c":"code","4a303957":"code","ee7df79b":"code","96342912":"code","e75f8fed":"code","dd05a78a":"code","9e4ba2e6":"code","c23685ee":"code","b322b014":"code","99a9f584":"code","89b477a5":"code","804b8ab7":"code","5d1dab7e":"code","898e3599":"code","762e8637":"code","ba698d3c":"code","08969b08":"code","0a22589b":"code","683042ca":"code","239a53d4":"code","5f7d96e3":"code","ac286638":"code","3a9749ea":"markdown","7b2c7507":"markdown","1d43add7":"markdown","3a8a1f44":"markdown","22397edd":"markdown","68ed7f49":"markdown","1bd91fba":"markdown","18de13b0":"markdown","b8e2199f":"markdown","565a7664":"markdown","99732272":"markdown","1217d003":"markdown","be13200b":"markdown"},"source":{"b3754b4a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9d88bbb":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd. read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","2477cf9a":"train_df.columns","fc6d3ffd":"train_df.head()","6788574e":"train_df.describe()","729745e2":"train_df.info()","03b08fe1":"def bar_plot(variable):\n    \"\"\"\n        input : variable such as Sex\n        output : bar plot & calue count\n        \n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index , varValue) #x ve y axis\n    plt.xticks(varValue.index,varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}:\\n{}\".format(variable,varValue))","eb12fd12":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","768327a6":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))\n    #\u00c7ok karmaa\u015f\u0131k o y\u00fczden bunlar\u0131 plot edemiyoruz","eefb5283":"def plot_hist(variable):\n    plt.figure(figsize= (9,3))\n    plt.hist(train_df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(f\"{variable} distribution with histogram\")\n    plt.show()","4d3a8bea":"numericVar = [\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","c39a8b5c":"train_df.head()","4a303957":"# Pclass - Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby(\"Pclass\").mean().sort_values(by=\"Survived\",ascending = False)","ee7df79b":"# Sex - Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby(\"Sex\").mean().sort_values(by=\"Survived\",ascending= False)","96342912":"# SibSp - Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby(\"SibSp\").mean().sort_values(by=\"Survived\",ascending= False)","e75f8fed":"# Parch - Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby(\"Parch\").mean().sort_values(by=\"Survived\",ascending= False)","dd05a78a":"# Cabin - Survived \ntrain_df[[\"Cabin\",\"Survived\"]].groupby(\"Cabin\").mean().sort_values(by=\"Survived\",ascending=False)","9e4ba2e6":"# Age - Survived\ntrain_df[[\"Age\",\"Survived\"]].groupby(\"Age\").mean().sort_values(by=\"Survived\",ascending=False)","c23685ee":"def detect_outliers(df,features):\n    outlier_indices=[]\n    \n    for c in features:\n    \n        # First quantile\n        Q1 = np.percentile(df[c],25)\n        \n        # Third quantile\n        Q3 = np.percentile(df[c],75)\n        \n        # IQR\n        IQR = Q3 - Q1\n        \n        # Outlier step\n        outlier_step = IQR * 1.5\n        \n        # detect outliers and their indices\n        outliers_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index \n        \n        # store indices\n        outlier_indices.extend(outliers_list_col)\n        \n    outlier_indices = Counter(outlier_indices)    # counter ka\u00e7 tane ne oldu\u011funu say\u0131yor.\n    multiple_outliers = list(i for i,v in outlier_indices.items() if v>2)\n    return multiple_outliers\n    ","b322b014":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","99a9f584":"# Drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis=0).reset_index(drop = True)","89b477a5":"# Concat two datasets\ntrain_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis=0).reset_index(drop=True)","804b8ab7":"train_df.columns[train_df.isnull().any()]","5d1dab7e":"train_df.isnull().sum()","898e3599":"train_df[train_df[\"Embarked\"].isnull()]","762e8637":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()\n# C liman\u0131 olarak estimate edebiliyoruz.","ba698d3c":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")","08969b08":"train_df[train_df[\"Fare\"].isnull()]","0a22589b":"avgFare_3 = np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"])\ntrain_df[\"Fare\"] = train_df.fillna(avgFare_3)","683042ca":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd. read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","239a53d4":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","5f7d96e3":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","ac286638":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","3a9749ea":"<a id = '1'><\/a><br>\n# Load and Check","7b2c7507":"* float64(2) : Fare,Age\n* int64(5) : Pclass,SibSp,Parch,Survived,PassengerId\n* object(5) : Name,Sex,Ticket,Cabin,Embarked","1d43add7":"<a id = '3'><\/a><br>\n# Univariate Variable Analysis\n        * Categorical Variable : Survived,Sex,Pclass,Embarked,Cabin,Name,Ticket,SibSp and Parch\n        * Numerical Variable : Age,Fare and PassengerId","3a8a1f44":"<a id = '9'><\/a>\n## Finding Missing Value","22397edd":"<a id = '6'><\/a>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived\n* Cabin - Survived\n* Age - Survived","68ed7f49":"<a id = '8'><\/a>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","1bd91fba":"<a id = '7'><\/a>\n# Outlier Detection","18de13b0":"<a id = '5'><\/a><br>\n## Numerical Variable","b8e2199f":"NEW","565a7664":"<a id = '10'><\/a>\n## Fill Missing Value\n* Embarked 2 missing values\n* Fare 1 missing values","99732272":"**INTRODUCTION**\nThe Titanic sinking which is the one of the most notorious shipwrecks in the history. In 1912 , during her voyage sank after colliding with an iceberg , killing 1502 out of 2224 people in the ship.\n\n<font color = 'red'>\n    Content : \n\n\n1. [Load and Check](#1)\n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable Analysis](#4)\n        * [Numerical Variable Analysis](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Finding Missing Value](#9)\n    * [Fill Missing Value](#10)","1217d003":"<a id = '2'><\/a><br>\n# Variable Description\n1. PassengerId : Unique ID passenger\n1. Survived : Binary variable {1 , if passenger survived ; 0 , otherwise}\n1. Pclass : Passenger class\n1. Name \n1. Sex\n1. Age\n1. SibSp : Number of siblings and spouses\n1. Parch : Number of parents and childeren\n1. Ticket\n1. Fare : Cost of ticket\n1. Cabin : Categorical room \n1. Embarked : Points where passengers get in the ship\n","be13200b":"<a id = '4'><\/a>\n## Categorical Variable"}}