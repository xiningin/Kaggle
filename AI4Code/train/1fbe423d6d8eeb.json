{"cell_type":{"3c3760d8":"code","8a144eec":"code","515648f8":"code","238f0c53":"code","83c4a973":"code","f3160299":"code","432b35a4":"code","6040bb83":"code","0a4aca72":"code","8ce87a15":"code","8a4377e9":"code","5ef8a6e3":"code","b57fbac7":"markdown","53560c8d":"markdown","5260ad6a":"markdown","9dfc3562":"markdown"},"source":{"3c3760d8":"%load_ext autoreload\n%autoreload 2","8a144eec":"import re\nfrom pathlib import Path\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport plotly.graph_objects as go","515648f8":"sns.set_style('white')\n\npd.set_option('max_columns', 400) # 20\npd.set_option('max_rows', 400) # 60\npd.set_option('max_colwidth', 400) # 50\n\nDATA_PATH = Path('..\/input\/kaggle-survey-2020\/')","238f0c53":"raw_df = pd.read_csv(DATA_PATH\/'kaggle_survey_2020_responses.csv', skiprows=[1])\nraw_df.shape","83c4a973":"questions = pd.read_csv(DATA_PATH\/'kaggle_survey_2020_responses.csv', nrows=1)\n\nquestions_df = pd.DataFrame({\n    'question_id': questions.columns.str.extract('(Q\\d+(_[AB])*)')[0].unique(),\n    'question_text': questions.loc[0].str.extract('(.*[\\:\\?]).*')[0].unique()\n}).iloc[1:]\nquestions_df = questions_df.sort_values('question_id', key=lambda x: x.str[1:].str.zfill(2))\n\nquestions_df.shape","f3160299":"def preprocess_multiple_choices(s):\n    res = tuple(sorted(set(s) - {np.nan}))\n    res = tuple(map(lambda x: str(x).strip(), res))\n    return res\n\ndef num_range_sort_order(s):\n    res = re.search(r'[\\d,]+', s).group()\n    res = int(res.replace(',', ''))\n    return res","432b35a4":"df = pd.DataFrame()\n\n### Duration (in seconds)\n\ndf['duration'] = raw_df['Time from Start to Finish (seconds)'].copy()\n\n### Question 1 (\"What is your age (# years)?\")\n\ndf['age'] = raw_df['Q1'].copy()\ndf['age'] = df['age'].astype('category')\nage_categories = df['age'].cat.categories.tolist()\ndf['age'].cat.set_categories(age_categories, ordered=True, inplace=True)\n\n### Question 2 (\"What is your gender (# years)?\")\n\ndf['gender'] = raw_df['Q2'].copy()\ndf['gender'] = df['gender'].astype('category')\ngenders = ['Man', 'Woman', 'Nonbinary', 'Prefer not to say', 'Prefer to self-describe']\ndf['gender'].cat.set_categories(genders, inplace=True)\n\n### Question 3 (\"In which country do you currently reside?\")\n\ndf['country'] = raw_df['Q3'].copy()\ndf['country'] = df['country'].astype('category')\n\n### Question 4 (\"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\")\n\ndf['highest_education_level'] = raw_df['Q4'].copy()\ndf['highest_education_level'] = df['highest_education_level'].astype('category')\n\neducation_levels = [\n    'No formal education past high school', 'Some college\/university study without earning a bachelor\u2019s degree',\n    'Bachelor\u2019s degree', 'Master\u2019s degree', 'Doctoral degree', 'Professional degree', \n    'I prefer not to answer'\n]\ndf['highest_education_level'].cat.set_categories(education_levels, inplace=True)\n\n### Question 4 (\"Select the title most similar to your current role (or most recent title if retired)\")\n\ndf['job_title'] = raw_df['Q5'].copy()\ndf['job_title'] = df['job_title'].astype('category')\n\njob_titles = [\n    'Business Analyst',\n    'Data Analyst', 'Data Engineer', 'Data Scientist', 'DBA\/Database Engineer',\n    'Machine Learning Engineer', 'Product\/Project Manager',\n    'Research Scientist', 'Software Engineer', 'Statistician', 'Student',\n    'Currently not employed', 'Other'\n]\ndf['job_title'].cat.set_categories(job_titles, inplace=True)\n\n### Question 6 (\"For how many years have you been writing code and\/or programming?\")\n\ndf['programming_experience'] = raw_df['Q6'].copy()\ndf['programming_experience'] = df['programming_experience'].astype('category')\n\nprogramming_experience_years = [\n    'I have never written code', \n    '< 1 years', '1-2 years', '3-5 years', \n    '5-10 years', '10-20 years', '20+ years'\n]\ndf['programming_experience'].cat.set_categories(programming_experience_years, inplace=True)\n\n### Question 7 (\"What programming languages do you use on a regular basis?\")\n\ndf['programming_languages'] = raw_df.filter(regex='Q7').apply(preprocess_multiple_choices, axis=1)\n\n### Question 8 (\"What programming language would you recommend an aspiring data scientist to learn first?\")\n\ndf['programming_language_to_learn'] = raw_df['Q8'].copy()\ndf['programming_language_to_learn'] = df['programming_language_to_learn'].astype('category')\n\n### Question 9 (\"Which of the following integrated development environments (IDE's) do you use on a regular basis?\")\n\ndf['ide'] = raw_df.filter(regex='Q9').apply(preprocess_multiple_choices, axis=1)\n\n### Question 10 (\"Which of the following hosted notebook products do you use on a regular basis?\")\n\ndf['hosted_notebooks'] = raw_df.filter(regex='Q10').apply(preprocess_multiple_choices, axis=1)\n\n### Question 11 (\"What type of computing platform do you use most often for your data science projects?\")\n\ndf['computing_platform'] = raw_df['Q11'].copy()\ndf['computing_platform'] = df['computing_platform'].astype('category')\n\n### Question 12 (\"Which types of specialized hardware do you use on a regular basis?\")\n\ndf['specialized_hardware'] = raw_df.filter(regex='Q12').apply(preprocess_multiple_choices, axis=1)\n\n### Question 13 (\"Approximately how many times have you used a TPU (tensor processing unit)?\")\n\ndf['tpu_using_count'] = raw_df['Q13'].copy()\ndf['tpu_using_count'] = df['tpu_using_count'].astype('category')\n\ntpu_using_counts = [\n    'Never', 'Once', \n    '2-5 times', '6-25 times', 'More than 25 times'\n]\ndf['tpu_using_count'].cat.set_categories(tpu_using_counts, ordered=True, inplace=True)\n\n### Question 14 (\"What data visualization libraries or tools do you use on a regular basis?\")\n\ndf['visualization_libraries'] = raw_df.filter(regex='Q14').apply(preprocess_multiple_choices, axis=1)\n\n### Question 15 (\"For how many years have you used machine learning methods?\")\n\ndf['ml_experience'] = raw_df['Q15'].copy()\ndf['ml_experience'] = df['ml_experience'].astype('category')\n\nml_experience_years = [\n    'I do not use machine learning methods', 'Under 1 year', '1-2 years',\n    '2-3 years', '3-4 years', '4-5 years', '5-10 years', \n    '10-20 years', '20 or more years'\n]\ndf['ml_experience'].cat.set_categories(ml_experience_years, ordered=True, inplace=True)\n\n### Question 16 (\"Which of the following machine learning frameworks do you use on a regular basis?\")\n\ndf['ml_frameworks'] = raw_df.filter(regex='Q16').apply(preprocess_multiple_choices, axis=1)\n\n### Question 17 (\"Which of the following ML algorithms do you use on a regular basis?\")\n\ndf['ml_algorithms'] = raw_df.filter(regex='Q17').apply(preprocess_multiple_choices, axis=1)\n\n### Question 18 (\"Which categories of computer vision methods do you use on a regular basis?\")\n\ndf['cv_methods'] = raw_df.filter(regex='Q18').apply(preprocess_multiple_choices, axis=1)\n\n### Question 19 (\"Which of the following natural language processing (NLP) methods do you use on a regular basis?\")\n\ndf['nlp_methods'] = raw_df.filter(regex='Q19').apply(preprocess_multiple_choices, axis=1)\n\n### Question 20 (\"What is the size of the company where you are employed?\")\n\ndf['company_size'] = raw_df['Q20'].copy()\ndf['company_size'] = df['company_size'].astype('category')\n\ncompany_size = sorted(df['company_size'].cat.categories, key=num_range_sort_order)\ndf['company_size'].cat.set_categories(company_size, ordered=True, inplace=True)\n\n### Question 21 (\"Approximately how many individuals are responsible for data science workloads at your place of business?\")\n\ndf['company_ds_count'] = raw_df['Q21'].copy()\ndf['company_ds_count'] = df['company_ds_count'].astype('category')\n\ncompany_ds_count = sorted(df['company_ds_count'].cat.categories, key=num_range_sort_order)\ndf['company_ds_count'].cat.set_categories(company_ds_count, ordered=True, inplace=True)\n\n### Question 22 (\"Does your current employer incorporate machine learning methods into their business?\")\n\ndf['is_ml_used'] = raw_df['Q22'].copy()\ndf['is_ml_used'] = df['is_ml_used'].astype('category')\n\n### Question 23 (\"Select any activities that make up an important part of your role at work\")\n\ndf['analytics_activities'] = raw_df.filter(regex='Q23').apply(preprocess_multiple_choices, axis=1)\n\n### Question 24 (\"What is your current yearly compensation (approximate $USD)?\")\n\ndf['yearly_compensation'] = raw_df['Q24'].copy()\ndf['yearly_compensation'] = df['yearly_compensation'].astype('category')\n\nyearly_compensation = sorted(df['yearly_compensation'].cat.categories, key=num_range_sort_order)\ndf['yearly_compensation'].cat.set_categories(yearly_compensation, ordered=True, inplace=True)\n\n### Question 25 (\"Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?\")\n\ndf['ml_money_spent_5_years'] = raw_df['Q25'].copy()\ndf['ml_money_spent_5_years'] = df['ml_money_spent_5_years'].astype('category')\n\nml_money_spent_5_years = sorted(df['ml_money_spent_5_years'].cat.categories, key=num_range_sort_order)\ndf['ml_money_spent_5_years'].cat.set_categories(ml_money_spent_5_years, ordered=True, inplace=True)\n\n### Question 26-A (\"Which of the following cloud computing platforms do you use on a regular basis?\")\n\ndf['cloud_platforms_a'] = raw_df.filter(regex='Q26_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 26-B (\"Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?\")\n\ndf['cloud_platforms_b'] = raw_df.filter(regex='Q26_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 27-A (\"Do you use any of the following cloud computing products on a regular basis?\")\n\ndf['cloud_products_a'] = raw_df.filter(regex='Q27_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 27-B (\"In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?\")\n\ndf['cloud_products_b'] = raw_df.filter(regex='Q27_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 28-A (\"Do you use any of the following machine learning products on a regular basis?\")\n\ndf['ml_products_a'] = raw_df.filter(regex='Q28_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 28-B (\"In the next 2 years, do you hope to become more familiar with any of these specific machine learning products?\")\n\ndf['ml_products_b'] = raw_df.filter(regex='Q28_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 29-A (\"Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?\")\n\ndf['big_data_products_a'] = raw_df.filter(regex='Q29_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 29-B (\"Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years?\")\n\ndf['big_data_products_b'] = raw_df.filter(regex='Q29_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 30 (\"Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often?\")\n\ndf['big_data_product'] = raw_df['Q30'].copy()\ndf['big_data_product'] = df['big_data_product'].astype('category')\n\n### Question 31-A (\"Which of the following business intelligence tools do you use on a regular basis?\")\n\ndf['bi_tools_a'] = raw_df.filter(regex='Q31_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 31-B (\"Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?\")\n\ndf['bi_tools_b'] = raw_df.filter(regex='Q31_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 32 (\"Which of the following business intelligence tools do you use most often?\")\n\ndf['bi_tool'] = raw_df['Q32'].copy()\ndf['bi_tool'] = df['bi_tool'].astype('category')\n\n### Question 33-A (\"Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?\")\n\ndf['automl_tools_categories_a'] = raw_df.filter(regex='Q33_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 33-B (\"Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?\")\n\ndf['automl_tools_categories_b'] = raw_df.filter(regex='Q33_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 34-A (\"Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?\")\n\ndf['automl_tools_a'] = raw_df.filter(regex='Q34_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 34-B (\"Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?\")\n\ndf['automl_tools_b'] = raw_df.filter(regex='Q34_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 35-A (\"Do you use any tools to help manage machine learning experiments?\")\n\ndf['ml_experiments_tools_a'] = raw_df.filter(regex='Q35_A').apply(preprocess_multiple_choices, axis=1)\n\n### Question 35-B (\"In the next 2 years, do you hope to become more familiar with any of these tools for managing ML experiments?\")\n\ndf['ml_experiments_tools_b'] = raw_df.filter(regex='Q35_B').apply(preprocess_multiple_choices, axis=1)\n\n### Question 36 (\"Where do you publicly share or deploy your data analysis or machine learning applications?\")\n\ndf['ml_sharing_tools'] = raw_df.filter(regex='Q36').apply(preprocess_multiple_choices, axis=1)\n\n### Question 37 (\"On which platforms have you begun or completed data science courses?\")\n\ndf['course_platforms'] = raw_df.filter(regex='Q37').apply(preprocess_multiple_choices, axis=1)\n\n### Question 38 (\"What is the primary tool that you use at work or school to analyze data?\")\n\ndf['primary_analytics_tool'] = raw_df['Q38'].copy()\ndf['primary_analytics_tool'] = df['primary_analytics_tool'].astype('category')\n\n### Question 39 (\"Who\/what are your favorite media sources that report on data science topics?\")\n\ndf['media_sources'] = raw_df.filter(regex='Q39').apply(preprocess_multiple_choices, axis=1)","6040bb83":"df.head(1).T","0a4aca72":"questions_df","8ce87a15":"def sliding_window(arr, window_size):\n    return tuple(arr[x: x + window_size] for x in range(len(arr) - window_size + 1))\n\ndef calculate_flow_stats(df, flow_windows, flow_transition_name, \n                         top_n=5, line_width=500, length_limit=500):\n    flow_filter = flow_windows.apply(lambda x: flow_transition_name in x)\n    flow_stats = (df.loc[flow_filter, flow_transition_name[0]]\n                    .value_counts(normalize=True, dropna=False)\n                    .iloc[:top_n])\n    \n    flow_stats.index = flow_stats.index.map(str)\n    flow_stats.index = flow_stats.index.str.strip()\n    flow_stats.index = flow_stats.index.str.wrap(line_width, expand_tabs=True)\n    flow_stats.index = flow_stats.index.str.replace('\\n', '<br>')\n    \n    flow_stats_df = flow_stats.reset_index()\n    flow_stats_df.columns = [flow_transition_name[0], 'prop']\n\n    flow_stats_string = flow_stats_df.to_string(index=False, header=False).replace('\\n', '<br>')\n    flow_stats_string = 'Stats text is too long' if len(flow_stats_string) > length_limit else flow_stats_string\n    return flow_stats_string","8a4377e9":"survey_df = df.drop('duration', axis=1)\nsurvey_df = survey_df.applymap(lambda x: np.nan if x==() else x)\n\nsurvey_mask_df = survey_df.notnull().astype('int8')\nsurvey_mask_df[:] = np.where(survey_mask_df == 1, survey_mask_df.columns, '')\n\nidx_to_question_map = dict(zip(range(len(survey_df.columns)), survey_df.columns))\nquestion_to_idx_map = dict(zip(survey_df.columns, range(len(survey_df.columns))))\n\nflow = (survey_mask_df.apply(lambda questions: tuple(x for x in questions if len(x) > 0), axis=1)\n                      .replace(idx_to_question_map))\n\nflow_transitions = flow.apply(sliding_window, window_size=2).explode()\nflow_windows = flow.apply(sliding_window, window_size=2)\n\nflow_df = flow_transitions.value_counts().reset_index()\nflow_df.columns = ['transition', 'count']\nflow_df[['source', 'target']] = flow_df['transition'].apply(pd.Series)\nflow_df['source'] = flow_df['source'].replace(question_to_idx_map)\nflow_df['target'] = flow_df['target'].replace(question_to_idx_map)\nflow_df['link_stats'] = flow_df['transition'].apply(lambda x: calculate_flow_stats(survey_df, flow_windows, flow_transition_name=x))","5ef8a6e3":"line_width = 30\n\nlabels = questions_df['question_id'] + ': ' + survey_mask_df.columns \nlabels = list(labels) \n\nnode_questions = questions_df['question_text'].str.wrap(line_width).str.replace('\\n', '<br>')\n\nlink = dict(source = flow_df['source'], \n            target = flow_df['target'], \n            value = flow_df['count'],\n            customdata = flow_df['link_stats'],\n            hovertemplate='<b>Source:<\/b> %{source.label}<br><br>%{customdata}<br><br><b>Target:<\/b> %{target.label}')\nnode = dict(label = labels, \n            customdata = node_questions,\n            hovertemplate='%{customdata}')\n\ndata = go.Sankey(link = link, node = node, orientation = 'v', valueformat='d')\n\nfig = go.Figure(data, layout = {'height': 3000, 'width': 800})\nfig.update_layout(\n    title={'text': 'Survey flow', 'x': 0.5},\n    font=dict(size = 12),\n    hoverlabel = {'align': 'right', 'namelength': -1}\n)\nfig.show()","b57fbac7":"## Preprocess questions data","53560c8d":"## Review data","5260ad6a":"## Load data","9dfc3562":"## Explore survey flow"}}