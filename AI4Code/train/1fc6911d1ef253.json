{"cell_type":{"732645f4":"code","5cdbc4c7":"code","05babb14":"code","d16250a9":"code","bc34b056":"code","72faaf1e":"code","236e5883":"code","4fcfa168":"code","60c6a729":"code","794eaf52":"code","37f5bb5f":"code","e866767f":"code","e6250949":"code","50958b54":"code","7cea9af1":"code","80f15b0b":"code","c11743a5":"code","127cffaf":"code","d3fc3b1e":"code","c8790429":"code","df77ff9c":"code","de79e55f":"code","1ed1eaf7":"code","1119f404":"code","0bddd18b":"markdown","0bed6ae3":"markdown","7aa39466":"markdown","d00502f7":"markdown","d9f42585":"markdown","c8bae764":"markdown","7f378777":"markdown","15c76508":"markdown","beb89bac":"markdown","1159732a":"markdown","37830a93":"markdown","20767c7f":"markdown","80cf822b":"markdown","6abb316f":"markdown","1cc72f40":"markdown","9b2c57ef":"markdown","b15c8ddb":"markdown","9088a877":"markdown","601a201d":"markdown","3b863cc9":"markdown","d1af050e":"markdown","299985e0":"markdown","83198172":"markdown","ed0dcc82":"markdown","1c9ce2a9":"markdown","346d4547":"markdown","638095cb":"markdown","43810c5f":"markdown","cf340db7":"markdown","58bae322":"markdown","6e9e5fd4":"markdown","cbee0b35":"markdown","4d565a21":"markdown","51d6e3ce":"markdown","b564e77c":"markdown","afdf83ef":"markdown","a4a5df3f":"markdown","b8a4f1b4":"markdown","ce3a149e":"markdown"},"source":{"732645f4":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler","5cdbc4c7":"pip install --upgrade plotly","05babb14":"class ColumnData:\n    date = 'Date'\n    province = 'Province'\n    island = 'Island'\n    cases = 'Total Cases'\n    deaths = 'Total Deaths'\n    recovered = 'Total Recovered'\n    actives_cases = 'Total Active Cases'\n    population = 'Population'\n    area = 'Area (km2)'\n    mortality = 'Mortality'\n    density = 'Population Density'","d16250a9":"def create_bins(df, columns, q=5):\n    for column in columns:\n        df[column] = pd.qcut(df[column], q, duplicates='drop').cat.codes","bc34b056":"def normalize_data(df, columns):\n    minMaxScaler = MinMaxScaler()\n    df[columns] = minMaxScaler.fit_transform(d[columns])","72faaf1e":"data = pd.read_csv('..\/input\/codig30\/covid_19_indonesia_time_series_all.csv')\n\ndata.head()","236e5883":"data = data[[\n    ColumnData.date,\n    ColumnData.province,\n    ColumnData.island,\n    ColumnData.cases,\n    ColumnData.deaths,\n    ColumnData.recovered,\n    ColumnData.actives_cases,\n    ColumnData.population,\n    ColumnData.area,\n    ColumnData.density\n]]","4fcfa168":"data = data.dropna(axis=0, how=\"any\")","60c6a729":"data[ColumnData.date] = pd.to_datetime(data.Date, infer_datetime_format=True).dt.date","794eaf52":"data[ColumnData.mortality] = data[ColumnData.deaths] \/ data[ColumnData.cases]","37f5bb5f":"dfl = data[\n    [ColumnData.date, ColumnData.cases, ColumnData.deaths, ColumnData.recovered]\n].groupby(ColumnData.date).sum().reset_index()\n\ndfl = dfl[(dfl[ColumnData.cases] >= 100)].melt(id_vars=ColumnData.date,\n                                               value_vars=[ColumnData.cases, ColumnData.deaths, ColumnData.recovered])","e866767f":"vis_lp = px.line(dfl, x=ColumnData.date, y='value', color='variable')\nvis_lp.update_layout(title='COVID-19 in Indonesia: total number of cases over time',\n                     xaxis_title='Indonesia', yaxis_title='Number of cases',\n                     legend=dict(x=0.02, y=0.98))\nvis_lp.show()","e6250949":"pd.options.mode.chained_assignment = None\nlimit = 5\ngroup = data.groupby(ColumnData.province)\nt = group.tail(1).sort_values(ColumnData.cases, ascending=False).set_index(ColumnData.province).drop(\n    columns=[ColumnData.date])\n\ns = data[(data[ColumnData.province].isin([i for i in t.index[:limit]]))]\ns = s[(s[ColumnData.cases] >= 100)]\n\n# vis_lp = visualization line plot\nvis_lp2 = px.line(s, x=ColumnData.date, y=ColumnData.cases, color=ColumnData.province)\nvis_lp2.update_layout(title='COVID-19 in Indonesia: total number of cases over time',\n                      xaxis_title=ColumnData.date, yaxis_title='Number of cases',\n                      legend_title='<b>Top %s provinces<\/b>' % limit,\n                      legend=dict(x=0.02, y=0.98))\nvis_lp2.show()","50958b54":"heatmap = data[(data[ColumnData.cases] >= 100)].sort_values([ColumnData.date, ColumnData.province])\nvis_hmap = go.Figure(data=go.Heatmap(\n    z=heatmap[ColumnData.cases],\n    x=heatmap[ColumnData.date],\n    y=heatmap[ColumnData.province],\n    colorscale='Viridis'))\n\nvis_hmap.update_layout(\n    title='COVID-19 in Indonesia: number of cases over time', xaxis_nticks=45)\n\nvis_hmap.show()","7cea9af1":"t.replace({'Jawa': 0, 'Sulawesi': 1, 'Kalimantan': 2, 'Sumatera': 3, 'Maluku': 4, 'Papua': 5, 'Nusa Tenggara': 6},\n          inplace=True)\n\nfig, ax = plt.subplots(figsize=(12, 10))\nsns.heatmap(t.corr(), vmin=0, cmap='YlGnBu')\nplt.show()","80f15b0b":"corr = t.corr().iloc[[0, 1]].transpose()\ncorr = corr[(corr[ColumnData.cases] > 0.25)].sort_values(ColumnData.cases, ascending=False)\nfeatures = corr.index.tolist()\nfeatures.append(ColumnData.mortality)\nprint('Selected features:', features)\n\nd = t[features].copy()\nd.head()","c11743a5":"create_bins(d, [\n    ColumnData.cases,\n    ColumnData.deaths,\n    ColumnData.recovered,\n    ColumnData.actives_cases,\n    ColumnData.population,\n    ColumnData.mortality,\n    ColumnData.density\n], q=7)\n\nnormalize_data(d, d.columns)\nd.head()","127cffaf":"#selecting features  \nX = d[['Mortality', 'Total Cases','Total Active Cases', 'Population Density', 'Population', 'Total Deaths']]  ","d3fc3b1e":"from sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n#Elbow Method - Inertia plot\ninertia = []\n#looping the inertia calculation for each k\nfor k in range(1, 10):\n    #Assign KMeans as cluster_model\n    cluster_model = KMeans(n_clusters = k, random_state = 24)\n    #Fit cluster_model to X\n    cluster_model.fit(X)\n    #Get the inertia value\n    inertia_value = cluster_model.inertia_\n    #Append the inertia_value to inertia list\n    inertia.append(inertia_value)\n##Inertia plot\nplt.plot(range(1, 10), inertia)\nplt.title('The Elbow Method - Inertia plot', fontsize = 20)\nplt.xlabel('No. of Clusters')\nplt.ylabel('WCSS')\nplt.show()","c8790429":"kmeans = KMeans(n_clusters=6)\npred = kmeans.fit_predict(d[d.columns])\nt['K-means'], d['K-means'] = [pred, pred]\nd[d.columns].sort_values(['K-means', ColumnData.mortality, ColumnData.cases, ColumnData.actives_cases, ColumnData.density], ascending=False).style.background_gradient(\n    cmap='YlGnBu', low=0, high=0.2)","df77ff9c":"vis_tmap = px.treemap(t.reset_index(), path=['K-means', ColumnData.province], values=ColumnData.cases)\nvis_tmap.update_layout(title='K-means clusters')\nvis_tmap.show()","de79e55f":"vis_tmap = px.treemap(t.reset_index(), path=['K-means', ColumnData.province], values=ColumnData.mortality)\nvis_tmap.update_layout(title='K-means clusters')\nvis_tmap.show()","1ed1eaf7":"c = t.sort_values(['K-means', ColumnData.cases], ascending=False)\ndata = [go.Bar(x=c[(c['K-means'] == i)].index, y=c[(c['K-means'] == i)][ColumnData.cases],\n               text=c[(c['K-means'] == i)][ColumnData.cases], name=i) for i in range(0, 6)]\n\nvis_bar = go.Figure(data=data)\nvis_bar.update_layout(title='K-means Clustering: number of cases by cluster',\n                      xaxis_title='Indonesia State', yaxis_title='Deaths per case')\nvis_bar.show()","1119f404":"# visualization using bar chart\n# visualization mortality rate by clusters\nc = t.sort_values(['K-means', ColumnData.mortality], ascending=False)\ndata = [go.Bar(x=c[(c['K-means'] == i)].index, y=c[(c['K-means'] == i)][ColumnData.mortality],\n               text=c[(c['K-means'] == i)][ColumnData.mortality], name=i) for i in range(0, 6)]\ndata.append(\n    go.Scatter(\n        x=t.sort_values(ColumnData.mortality, ascending=False).index,\n        y=np.full((1, len(t.index)), 0.03).tolist()[0],\n        marker_color='black',\n        name='Indonesian avg'\n    )\n)\n\nvis_bar2 = go.Figure(data=data)\nvis_bar2.update_layout(title='K-means Clustering: mortality rate by cluster',\n                       xaxis_title='Indonesian states', yaxis_title='Deaths per case')\nvis_bar2.show()\n","0bddd18b":"Jumlah kasus dan kematian dalam kurun waktu, setiap data dibagi jika jumlah kasus melebihi 100.\n","0bed6ae3":"Dalam penelitian ini tahapan yang dilakukan adalah : \n1) Tahap Pengumpulan Data, \n2) Tahap Processing Data, \n3) Visualisasi, \n4) Modelling, Pengujian Data dan Analisis Data dan \n5) Output\/Insight","7aa39466":"Menggunakan WCSS dengan Metode Elbow Graph untuk menentukan nilai cluster(k)","d00502f7":"Mendefinisikan normalize_data untuk normalizing data","d9f42585":"Membuat format data pada tanggal menjadi date.","c8bae764":"Hasil Klasterisasi 6 klaster terbagi menjadi :\n* Klaster 1 (Cluster 0) : Bengkulu, Sulawesi Tengah, Kalimantan Tengah, Maluku Utara dan Gorontalo. Dengan rataan Tingkat kemungkinan Kematian 18% dan Total Kasus 10.348.\n> Klaster ini memiliki total kasus yang tergolong sedikit namun persentase tingkat kematiannya cukup banyak, dalam cluster ini perlu ditingkatkan terutama kinerja tenaga medis dan semangat pasien dalam menangani kasus COVID-19 serta tindakan-tindakan preventif yang dapat dilakukan dari masing-masing individu sesuai dengan protokol kesehatan yang ada.\n* Klaster 2 (Cluster 1) : Jawa Timur, Jawa Tengah, Sumatera Utara, Sulawesi Selatan, Riau, Banten, DKI Jakarta, Sumatera Barat dan Jawa Barat. Dengan rataan Tingkat kemungkinan Kematian 31% dan Total Kasus 241.327.\n> Klaster ini memiliki total kasus paling dan tingkat kematian paling tinggi maka perlu lebih ditingkatkan kembali kesadaran dari tiap individu-nya dalam menerapkan protokol Kesehatan dan melakukan berbagai tindakan preventif pencegahan COVID-19 lainnya, namun jika dilihat dari persentase kemungkinan kematian tidak berbanding jauh dengan Klaster 5 yang memiliki total kasus yang lebih sedikit, maka bisa disimpulkan bahwa tenaga medis dan pasien di kluster 2 sudah cukup baik dalam menangani kasus COVID-19.\n* Klaster 3 (Cluster 2) : Jambi, Kepulauan Bangka Belitung, Nusa Tenggara Timur, Kalimantan Utara, Kalimantan Barat, Sulawesi Barat. Dengan tingkat kemungkinan Kematian 7% dan Total Kasus 4687.\n> Klaster ini memiliki persentase tingkat kematian yang cukup rendah dan total kasus juga rendah maka Tindakan yang perlu dilakukan dalam cluster ini yaitu tindakan preventif dalam pencegahan COVID-19.\n* Klaster 4 (Cluster 3) : Sulawesi Tenggara, Papua, Papua Barat, Maluku. Dengan tingkat kemungkinan Kematian 5% dan Total Kasus 17.641.\n> Klaster ini memiliki persentase kematian yang cukup rendah dan tingkat kematian yang termasuk banyak, maka dapat disimpulkan dalam klaster ini tenaga medis dan pasien sudah cukup baik dalam menangani kasus COVID-19 namun kesadaran individu dalam melakukan Tindakan preventif masih rendah.\n* Klaster 5 (Cluster 4) :  Nusa Tenggara Barat, Sumatera Selatan, Kalimantan Selatan, Sulawesi Utara, Aceh, Kalimantan Timur, Bali. Dengan tingkat kemungkinan Kematian 30% dan Total Kasus 52.704.\n> Klaster ini memiliki total kasus paling dan tingkat kematian ke-2 tertinggi maka perlu lebih ditingkatkan kembali kesadaran dari tiap individu-nya dalam menerapkan protokol Kesehatan dan melakukan berbagai tindakan preventif pencegahan COVID-19 lainnya, namun jika dilihat dari persentase kemungkinan kematian tidak berbanding jauh dengan Klaster 2 yang memiliki total kasus jauh lebih banyak bahkan 4x nya,  namun persentase kemungkinan kematian nya tidak berbanding jauh maka bisa disimpulkan bahwa penanganan tenaga medis dan pasien COVID-19 perlu ditingkatkan kembali.\n* Klaster 6 (Cluster 5) : Lampung, Daerah Istimewa Yogyakarta, dan Kepulauan Riau. Dengan tingkat kemungkinan Kematian 8% Total Kasus 6742.\n> Klaster ini memiliki persentase tingkat kematian yang cukup tinggi jika dilihat dari total kasus tergolong rendah maka perlu ditingkatkan kinerja dalam penanganan COVID-19  baik dari tim tenaga medis maupun pasien COVID-19 nya.\n","7f378777":"# Output\/Insight","15c76508":"# Modelling, Pengujian Data dan Analisis Data","beb89bac":"Visualisasi menggunakan heatmap untuk menunjukkan perkembangan dari penyebaran covid dalam beberapa minggu terakhir","1159732a":"# Processing","37830a93":"Memilih kolom yang akan digunakan","20767c7f":"Mendefiniskan nama kolom dalam dataset agar memudahkan dalam proses pengkodean selanjutnya","80cf822b":"Visualisasi line plot 5 provinsi dengan jumlah kasus dan kematian tertinggi","6abb316f":"Menghapus jika ada data yang kosong","1cc72f40":"> Pada visualisasi diatas merupakan peta sebaran COVID-19 pada 34 provinsi di Indonesia menggunakan visualisasi heatmap yang menunjukkan tingkat keparahan atau tingginya kasus perhari nya dengan menunjukkan perubahan warna. Dalan visualisasi ini didapatkan DKI Jakarta memiliki perubahan warna yang signifikan yang menandakan DKI Jakarta mendapati tingkat kasus yang lebih banyak.","9b2c57ef":"Visualisasi jumlah perkembangan kasus dengan line plot","b15c8ddb":"Dari fitur yang dipilih akan dilakukan binning menjadi 7 bagian dan selanjutnya dilakukan normalisasi data sehingga mengurangi adanya outliers dan data lebih mudah dipahami dengan jarak antara 0-1","9088a877":"K-means Clustering dengan k=6","601a201d":"Pada karakteristik data diketahui bahwa rata-rata kasus baru setiap harinya sebanyak 1.713 kasus dengan kasus baru terbanyak yang terjadi pada 8 Oktober 2020 dengan jumlah kasus mencapai 4.850 kasus. Hingga 11 Oktober 2020 tercatat sebanyak 333.449 kasus dengan jumlah pasien sembuh sebanyak 255.027 orang dan jumlah pasien yang meninggal sebanyak 11.844 orang. DKI Jakarta menempati posisi pertama dengan jumlah kasus tertinggi yakni sebanyak 86.963 kasus. Provinsi dengan jumlah kasus paling banyak lainnya yaitu Jawa Timur, Jawa Barat, Jawa Tengah dan Sulawesi Selatan. Sedangkan provinsi dengan tingkat kematian paling tinggi akibat COVID-19 yaitu provinsi Jawa Timur. Dari hasil ini didapatkan bahwa Jumlah kematian pasien COVID-19 di suatu provinsi bukan acuan utama dalam menentukan klaster penanganan COVID-19, disamping menghitung jumlah kematian pasien ada indikator lain yang dapat mempengaruhi pembagian klasterisasi dalam penentuan penanganan COVID-19 di Indonesia Seperti tingkat kemungkinan kematian, jumlah kasus yang masih aktif, kepadatan penduduk dan luas area provinsi tersebut.","3b863cc9":"Import library package yang diperlukan","d1af050e":"# Pengumpulan data\n\nData yang digunakan dalam penelitian ini adalah data mengenai kasus COVID-19 di Indonesia yang diambil dari website AtapData (atapdata.ai). Jumlah data yang digunakan mencapai 7098 data dari tanggal 1 Maret hingga 11 Oktober 2020 di 34 provinsi Indonesia. Data yang terdapat dalam dataset ini berupa : Date, Location ISO Code, Location, New Cases, New Deaths, New Recovered, New Active Cases, Total Cases, Total Deaths, Total Recovered, Total Active Cases, Location Level, City or Regency, Province, Country, Continent, Island, Time Zone, Special Status, Total Regencies, Total Cities, Total Districts, Total Urban Villages, Total Rural Villages, Area (km2), Population, Population Density, Longitude, Latitude, New Cases per Million, Total Cases per Million, New Deaths per Million, Total Deaths per Million, Case Fatality Rate, Case Recovered Rate, Growth Factor of New Cases dan Growth Factor of New Deaths.","299985e0":"Normalisasi, binning dan splitting dataset","83198172":"> Pada visualisasi diatas dapat terlihat elbow pada 2 dan 6. dan dalam pengujian ini saya menggunakan k=6 agar lebih terlihat dan dapat lebih dapat insight yang diberikan","ed0dcc82":"Mendefinisikan create bins untuk splitting & binning data","1c9ce2a9":"Proses ini bertujuan untuk mengelompokkan setiap provinsi di Indonesia ke dalam beberapa klaster tertentu sehingga dapat mengetahui daerah-daerah dengan jumlah kasus yang tergolong banyak dan jumlah kasus yang tergolong sedikit. Korelasi fitur dikategorikan berdasarkan pulau utama di Indonesia. Variabel-variabel yang digunakan dalam K-Means clustering adalah jumlah kasus kematian, jumlah kasus kesembuhan, jumlah kasus aktif, ukuran kepadatan populasi, luas area dan kemungkinan kematian","346d4547":"**Dataset asli saya dapatkan dari situs [atapdata.ai](http:\/\/)**","638095cb":"Dari hasil visualisasi korelasi matriks didapatkan korelasi antar fitur. Berdasarkan eksplorasi data yang telah diolah maka kami dapat melihat korelasi yang lebih kuat dengan jumlah kasus yaitu fitur berikut : \n1. Total Cases\n2. Total Recovered\n3. Total Active Cases\n4. Population Density\n5. Total Deaths\n6. Population\n7. Mortality\n\nfitur-fitur ini yang akan digunakan untuk pengolahan data selanjutnya.","43810c5f":"> Pada visualisasi digambarkan kasus COVID-19 di Indonesia pada bulan Maret 2020 hingga Oktober 2020 mengalami peningkatan secara signifikan. Rata-rata kasus baru setiap harinya sebanyak 1.713 kasus. Jumlah kasus COVID-19 hingga 11 Oktober 2020 tercatat sebanyak 333.449 kasus dengan jumlah pasien sembuh sebanyak 255.027 orang dan jumlah pasien yang meninggal sebanyak 11.844 orang.","cf340db7":"Membaca dan menampilkan 5 data","58bae322":"Analisis hasil pengujian","6e9e5fd4":"Splitting dataset dengan memilih fitur yang akan digunakan yaitu 'Total Cases', 'Total Recovered', 'Total Active Cases', 'Population Density', 'Total Deaths', 'Population', 'Mortality'","cbee0b35":"Membuat kolom baru yaitu \u2018Mortality\u2019 ","4d565a21":"Visualisasi Jumlah kasus aktif dari tiap provinsi dari masing-masing cluster menggunakan bar chart","51d6e3ce":"Menggunakan korelasi matriks","b564e77c":"> Pada visualisasi data 5 provinsi dengan jumlah kasus terkonfirmasi paling tinggi dari waktu ke waktu. Hingga 11 Oktober 2020 tercatat bahwa kasus terbanyak terjadi pada provinsi DKI jakarta yakni sebanyak 86.963 kasus. Disusul provinsi Jawa Timur sebanyak 46.984 kasus, provinsi Jawa Barat sebanyak 27.236 kasus, provinsi Jawa Tengah sebanyak 26.401 kasus, dan di posisi kelima adalah provinsi Sulawesi Selatan sebanyak 16.738 kasus. ","afdf83ef":"Visualisasi dengan Treemap hasil Klasterisasi Provinsi","a4a5df3f":"Visualisasi Jumlah kemungkinan Kematian\t dari tiap provinsi dari masing-masing cluster.","b8a4f1b4":"# Visualisasi","ce3a149e":"> Pada visualisasi diagram batang yang menunjukkan visualisasi tingkat kemungkinan kematian dari tiap-tiap provinsi menurut cluster yang telah dibagi sebelumnya. Dari ke-6 cluster diatas, cluster 1,2,4, dan 5 berada di atas rata-rata kemungkinan kematian di Indonesia dan Cluster 1 merupakan cluster yang memiliki tingkat kematian yang cukup besar dibandingkan cluster yang lain, Sedangkan provinsi yang memiliki tingkat kematian tergolong rendah terdapat pada cluster 2.   "}}