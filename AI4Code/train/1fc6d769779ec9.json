{"cell_type":{"339a3ec2":"code","a1b4764b":"code","952b5012":"code","b18c370b":"code","9a348e1d":"code","e891384a":"code","a525ea6c":"code","a2c6099c":"code","057ba74e":"code","42d839da":"code","d4a02bf9":"code","400df795":"code","aaee3f97":"code","18f1597e":"code","8dba17cd":"code","82d94e2e":"code","da9edc55":"code","174a79b2":"code","8fcb2cb8":"code","1853e0be":"code","142dff80":"code","ac73a078":"code","951b7271":"code","5b723eb7":"code","2092dc87":"code","30da7e49":"code","e38c2f93":"code","f070f4a8":"code","9b1883e3":"code","0f7d7b4d":"code","1a426657":"code","22e33647":"code","a6eed8ad":"code","c553f320":"code","bfd34f0c":"code","00c5dbec":"code","a8719f02":"code","a4dccd20":"code","8465f529":"code","02138949":"code","a812cbd9":"code","0ad26d62":"code","9d369225":"code","62a0ad05":"code","b49061d1":"code","61b3b1dc":"code","8da8ba24":"code","0a4e165d":"code","06fd5dac":"code","6343083f":"code","331ea681":"code","2eeac78a":"code","41401974":"code","77141403":"code","362189b6":"code","a4bfa90c":"code","5835d415":"code","db04aa22":"code","1e80f93d":"code","3e365adb":"code","144c6f2b":"code","2ac296ea":"code","5f0028c4":"code","da39ca4f":"code","6ec2062e":"markdown","9ecafdbb":"markdown","5dc9f16b":"markdown","bc2018ad":"markdown","93b389f3":"markdown","a4ce8a59":"markdown","4ab01f05":"markdown","c943ceaf":"markdown","8e0baae1":"markdown","74f8d260":"markdown","d2d900a3":"markdown","980cdedb":"markdown","238f413a":"markdown","39033c9c":"markdown","7b57b412":"markdown","f5db2ec8":"markdown","60ec3551":"markdown"},"source":{"339a3ec2":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom catboost import CatBoostRegressor\nfrom sklearn.linear_model import LinearRegression,RidgeCV,Ridge,Lasso,LassoCV,ElasticNet,ElasticNetCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import preprocessing\nfrom sklearn.metrics import mean_squared_error,r2_score\nimport xgboost\nimport lightgbm\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nimport plotly_express as px\nimport plotly","a1b4764b":"df=pd.read_csv(\"..\/input\/california-housing-prices\/housing.csv\")\ndf.head()","952b5012":"df.info()","b18c370b":"df.isnull().sum()","9a348e1d":"df.groupby(\"ocean_proximity\")[\"total_bedrooms\"].mean()","e891384a":"df['total_bedrooms'] = df['total_bedrooms'].fillna(df.groupby('ocean_proximity')['total_bedrooms'].transform('mean'))","a525ea6c":"df.isnull().sum()","a2c6099c":"access_token = 'pk.eyJ1IjoiYWJkdWxrZXJpbW5lc2UiLCJhIjoiY2s5aThsZWlnMDExcjNkcWFmaWUxcmh3YyJ9.s-4VLvmoPQFPXdu9Mcd6pA'\npx.set_mapbox_access_token(access_token)","057ba74e":"fig = px.scatter_mapbox(\n    df, lat=\"latitude\", lon=\"longitude\",\n    size=\"median_house_value\", size_max=15,\n    color=\"ocean_proximity\", color_continuous_scale=px.colors.cyclical.IceFire,\n    hover_name=\"ocean_proximity\",           \n    zoom=3,\n    width=600, height=600\n)\nfig.layout.coloraxis.showscale = False\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.show()","42d839da":"corr = df.iloc[:,2:,].corr()\nplt.figure(figsize=(8,8))\nsns.heatmap(corr, annot = True)\nplt.show()","d4a02bf9":"sns.catplot(x=\"ocean_proximity\",kind='violin', y=\"median_house_value\",data=df);","400df795":"plt.figure(figsize=(12,12))\nplt.subplot(3,2,1)\nsns.boxplot(x='total_rooms',data=df)\nplt.subplot(3,2,2)\nsns.boxplot(x='total_bedrooms',data=df)\nplt.subplot(3,2,3)\nsns.boxplot(x='population',data=df)\nplt.subplot(3,2,4)\nsns.boxplot(x='households',data=df)\nplt.subplot(3,2,5)\nsns.boxplot(x='housing_median_age',data=df)\nplt.subplot(3,2,6)\nsns.boxplot(x='median_income',data=df)\nplt.show()","aaee3f97":"Q1 = df.quantile(0.25)\nQ3 = df.quantile(0.75)\nIQR =Q3-Q1\nIQR","18f1597e":"df = df[~((df < (Q1-1.5 * IQR)) |(df > (Q3 + 1.5 * IQR))).any(axis=1)]","8dba17cd":"lbe = LabelEncoder().fit_transform(df[\"ocean_proximity\"])\nlbe","82d94e2e":"df[\"new_ocean_proximity\"] = LabelEncoder().fit_transform(df[\"ocean_proximity\"])\ndf.head()","da9edc55":"df.drop(columns='ocean_proximity',inplace=True)\ndf.drop(columns='longitude',inplace=True)\ndf.drop(columns='latitude',inplace=True)","174a79b2":"std_df=preprocessing.scale(df)\nstd_df","8fcb2cb8":"std_df=pd.DataFrame(std_df,columns=['housing_median_age',\n                                    'total_rooms',\n                                   'total_bedrooms','population',\n                                   'households',\n                                   'median_income',\n                                   'median_house_value',\n                                   'new_ocean_proximity'])","1853e0be":"std_df.describe().T","142dff80":"x=std_df.drop([\"median_house_value\"],axis=1)#ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler\ny=std_df[\"median_house_value\"]#ba\u011f\u0131ml\u0131 de\u011fi\u015fken","ac73a078":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.40,random_state=42)","951b7271":"ridge_model = Ridge().fit(x_train, y_train)","5b723eb7":"ridge_alpha= 10**np.linspace(10,-2,100)*0.5","2092dc87":"ridgecv = RidgeCV(alphas =ridge_alpha, scoring = \"neg_mean_squared_error\", cv = 10, normalize = True).fit(x_train,y_train)","30da7e49":"ridgecv.alpha_","e38c2f93":"ridge_tuned = Ridge(alpha = ridgecv.alpha_).fit(x_train,y_train)","f070f4a8":"r_y_pred = ridge_tuned.predict(x_test)\nr_mse=mean_squared_error(y_test,r_y_pred)\nprint(\"Ridge Regresyon Modeli Hata Kareler Ortalamas\u0131\",r_mse)","9b1883e3":"lasso_model = Lasso().fit(x_train,y_train)","0f7d7b4d":"lasso_alphas = 10**np.linspace(20,-2,100)*0.5","1a426657":"lasso_cv_model = LassoCV(alphas =lasso_alphas, cv = 10, max_iter = 100000).fit(x_train, y_train)","22e33647":"lasso_cv_model.alpha_","a6eed8ad":"lasso_tuned = Lasso(alpha =lasso_cv_model.alpha_).fit(x_train, y_train)","c553f320":"l_y_pred = lasso_tuned.predict(x_test)\nl_mse=mean_squared_error(y_test,l_y_pred)\nprint(\"Lasso Regresyon Modeli Hata Kareler Ortalamas\u0131\",l_mse)","bfd34f0c":"enet_model = ElasticNet().fit(x_train,y_train)","00c5dbec":"enet_alphas = 10**np.linspace(10,-2,100)*0.5","a8719f02":"enet_cv_model = ElasticNetCV(alphas =enet_alphas, cv = 10).fit(x_train, y_train)","a4dccd20":"enet_cv_model.alpha_","8465f529":"enet_tuned = ElasticNet(alpha = enet_cv_model.alpha_).fit(x_train, y_train)","02138949":"e_y_pred = enet_tuned.predict(x_test)\ne_mse=mean_squared_error(y_test,e_y_pred)\nprint(\"ElasticNet Regresyon Modeli Hata Kareler Ortalamas\u0131\",e_mse)","a812cbd9":"catb_model = CatBoostRegressor().fit(x_train, y_train)","0ad26d62":"catb_params = {\"iterations\": [200,500,1000],\n              \"learning_rate\": [0.01,0.1],\n              \"depth\": [3,6,8]}","9d369225":"catb_cv_model = GridSearchCV(catb_model, \n                           catb_params, \n                           cv = 5, \n                           n_jobs = -1, \n                           verbose = 2).fit(x_train, y_train)","62a0ad05":"catb_cv_model.best_params_","b49061d1":"catb_tuned = CatBoostRegressor(depth = 8, iterations =200, learning_rate = 0.1).fit(x_train, y_train)","61b3b1dc":"c_y_pred = catb_tuned.predict(x_test)\nc_mse=mean_squared_error(y_test,c_y_pred)\nprint(\"CatBoost Regresyon Modeli Hata Kareler Ortalamas\u0131\",c_mse)","8da8ba24":"knn_model=KNeighborsRegressor().fit(x_train,y_train)","0a4e165d":"knn_params={\"n_neighbors\":np.arange(1,100,1)}","06fd5dac":"knn_cv_model=GridSearchCV(knn_model,knn_params,cv=10).fit(x_train,y_train)","6343083f":"knn_cv_model.best_params_","331ea681":"knn_tuned=KNeighborsRegressor(n_neighbors=knn_cv_model.best_params_[\"n_neighbors\"]).fit(x_train,y_train)","2eeac78a":"knn_y_pred=knn_tuned.predict(x_test)\nknn_mse=mean_squared_error(y_test, knn_y_pred)\nprint(\"KNeighbors Regresyon Modeli Hata Kareler Ortalamas\u0131\",knn_mse)","41401974":"lgbm = LGBMRegressor()\nlgbm_model=lgbm.fit(x_train, y_train)","77141403":"lgbm_params = {\"learning_rate\": [0.01, 0.1, 0.5, 1],\n              \"n_estimators\": [20,40,100,200,500,1000],\n              \"max_depth\": [1,2,3,4,5,6,7,8,9,10]}","362189b6":"lgbm_cv_model = GridSearchCV(lgbm, \n                             lgbm_params, \n                             cv = 10, \n                             n_jobs = -1, \n                             verbose =2).fit(x_train, y_train)","a4bfa90c":"print(lgbm_cv_model.best_params_)","5835d415":"lgbm_tuned = LGBMRegressor(learning_rate = 0.01, \n                          max_depth = 10, \n                          n_estimators = 1000).fit(x_train, y_train)","db04aa22":"lgbm_y_pred = lgbm_tuned.predict(x_test)\nlgbm_mse=mean_squared_error(y_test, lgbm_y_pred)\nprint(\"LightGbm Modeli Hata Kareler Ortalamas\u0131\",lgbm_mse)","1e80f93d":"xgb = XGBRegressor().fit(x_train,y_train)","3e365adb":"xgb_params = {\"learning_rate\": [0.1,0.01,0.5],\n             \"max_depth\": [2,3,4,5,8],\n             \"n_estimators\": [100,200,500,1000],\n             \"colsample_bytree\": [0.4,0.7,1]}","144c6f2b":"xgb_cv=GridSearchCV(xgb,xgb_params,cv=5,n_jobs=-1,verbose=2).fit(x_train,y_train)","2ac296ea":"xgb_cv.best_params_","5f0028c4":"xgb_tuned=XGBRegressor(colsample_bytree=1,\n                       learning_rate=0.1,\n                       max_depth=5,\n                       n_estimators=200).fit(x_train,y_train)\nxgb_y_pred=xgb_tuned.predict(x_test)","da39ca4f":"xgb_mse=mean_squared_error(y_test,xgb_y_pred)\nprint(\"XGBOOST Modeli Hata Kareler Ortalamas\u0131:\",xgb_mse)","6ec2062e":"## Standardizasyon\n* Standardizasyon, de\u011ferlerin ortalama etraf\u0131nda bir birim standart sapma ile ortaland\u0131\u011f\u0131 ba\u015fka bir \u00f6l\u00e7eklendirme tekni\u011fidir.\n* De\u011fi\u015fknelerin \u00f6l\u00e7eklerinin birbirinden \u00e7ok farkl\u0131 olmas\u0131 durumunda bu de\u011fi\u015fkenlerin analizlere ve modele e\u015fit katk\u0131da bulunamazlar.\n* Bu y\u00fczden de\u011fi\u015fkenlerin standartla\u015ft\u0131r\u0131lmas\u0131 do\u011fru analiz i\u00e7in \u00f6nemli bir yere sahiptpir. \n* \u00d6rne\u011fin 0\u2013100 aral\u0131\u011f\u0131nda ve 0\u20131 aral\u0131\u011f\u0131nda yer alan iki de\u011fi\u015fken \u00fczerinde standardizasyon ger\u00e7ekle\u015ftirilmezse 0\u2013100 aral\u0131\u011f\u0131ndaki de\u011fi\u015fkenin modeldeki a\u011f\u0131rl\u0131\u011f\u0131 daha fazla olacakt\u0131r. \n* Bu sorunu ortadan kald\u0131rmak i\u00e7in verileri k\u0131yaslanabilir \u00f6l\u00e7ekelere d\u00f6n\u00fc\u015ftremek gerekir. \n* Veri standardizasyonu ile bu sorunu ortadan kald\u0131rabiliriz.","9ecafdbb":"## Ridge Modeli","5dc9f16b":"## Ayk\u0131r\u0131 Verileri Tespit Etme ve De\u011fer Atama\n* Ayk\u0131r\u0131 veriler; bir veri setindeki g\u00f6zlemlerin geri kalan\u0131ndan b\u00fcy\u00fck \u00f6l\u00e7\u00fcde farkl\u0131 olan g\u00f6zlemlerdir.\n* Ayk\u0131r\u0131 g\u00f6zlemleri g\u00f6rselle\u015ftirmek i\u00e7in bir \u00e7ok teknik var biz burada en yayg\u0131n olan kutu grafi\u011fi ( Box Plot ) kullanaca\u011f\u0131z.\n* Ayk\u0131r\u0131 g\u00f6zlemleri belirleyebilmemiz i\u00e7in box plotta g\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi s\u0131n\u0131r de\u011ferlerini tan\u0131mlamam\u0131z gerekiyor. Bunun i\u00e7in IQR tekni\u011fini kullan\u0131yoruz.\n* Q1, de\u011fi\u015fkenin ilk \u00e7eyrelik k\u0131sm\u0131 ( 0.25 )\n* Q3, de\u011fi\u015fkenin \u00fc\u00e7\u00fcnc\u00fc \u00e7eyrekli\u011fi oluyor ( 0. 75 )\n* Q3-Q1 ile IQR de\u011ferini hesapl\u0131yoruz.\n* Q1-Q3-IQR tamam \u015fimdi s\u0131rada alt s\u0131n\u0131r ve \u00fcst s\u0131n\u0131r de\u011ferlerinde.\n* Alt s\u0131n\u0131r : Q1\u20131.5*IQR\n* \u00dcst s\u0131n\u0131r : Q3 + 1.5*IQR\n* Alt s\u0131n\u0131r\u0131n alt\u0131ndaki ve \u00fcst s\u0131n\u0131r\u0131n \u00fcst\u00fcndeki de\u011ferler ayk\u0131r\u0131 de\u011fer olarak tan\u0131mlanacak\n","bc2018ad":"## Korelasyon Matrisi\n* Korelasyon matrisinde de\u011ferler, -1 ile +1 aras\u0131ndad\u0131r. -1' e yak\u0131n de\u011ferler negatif y\u00f6ndeki ili\u015fkiyi, +1'e yak\u0131n de\u011ferler pozitif y\u00f6ndeki ili\u015fkiyi temsil eder.\n* Pozitif korelasyona sahip iki de\u011fi\u015fkenin de\u011ferleri birlikte artar veya birlikte azal\u0131r.\n* Negatif korelasyona sahip iki de\u011fi\u015fkenlerden birinin de\u011feri artarken di\u011ferininki azal\u0131r.\n* De\u011ferin 0'a yak\u0131n olmas\u0131 durumu ise bu iki de\u011fi\u015fken aras\u0131nda bir ba\u011flant\u0131 olmad\u0131\u011f\u0131n\u0131 g\u00f6sterir.","93b389f3":"## ElasticNet Regresyon Modeli","a4ce8a59":"## Eksik Veri Tespit Etme ve De\u011fer Atama\n* Veri setlerinde eksik veri(missing values) yani bo\u015f DataFrame(nan) h\u00fccreleri bulunabilir.\n* Bir veri setinde bulunan eksik verileri g\u00f6z ard\u0131 ederek \u00e7al\u0131\u015fmak do\u011fru bir se\u00e7enek de\u011fildir.\n* Eksik veriler silinebilir, aritmetik ortalama ,mod ya da medyan de\u011ferleri ile doldurulabilir.\n* `total_bedrooms` de\u011fi\u015fkeninde 207 tane eksik veri mevcuutur.\n* Bu \u00e7al\u0131\u015fmada kategorik de\u011fi\u015fken olan `ocean_proximity` g\u00f6re total_bedrooms de\u011fi\u015fkenlerini grupland\u0131rarak eksik de\u011ferlere bu gruplar\u0131n ortlama de\u011ferlerini atayaca\u011f\u0131z.","4ab01f05":"## Catboost","c943ceaf":"## Catplot\n* A\u015fa\u011f\u0131daki grafik ise okyanusa yak\u0131nl\u0131k derecelerine g\u00f6re evlerin fiyatlar\u0131n\u0131n hangi fiyat aral\u0131\u011f\u0131nda yo\u011funla\u015ft\u0131\u011f\u0131n\u0131 anlamam\u0131za olanak sa\u011flar.\n* \u00d6rne\u011fin ada da bulunan evlerin ortlama fiyatlar\u0131 200000 ile 500000 aras\u0131nda yer almaktad\u0131r.\n","8e0baae1":"# KNN-NE\u0130GHBORS","74f8d260":"## LightGbm Modeli","d2d900a3":"## Label Encoder D\u00f6n\u00fc\u015f\u00fcm\u00fc\n* Bir \u00f6zniteli\u011fe ait kategorik s\u0131n\u0131flar 0,1,2,3... gibi say\u0131sal de\u011ferler ile ifade edilir.\n* Bu d\u00f6n\u00fc\u015f\u00fcm\u00fc `ocean_proximity` de\u011fikenine kategorik de\u011fi\u015fken oldu\u011fu i\u00e7in uygulayaca\u011f\u0131z.","980cdedb":"## Sonu\u00e7\n* Ridge Regresyon Modeli Hata Kareler Ortalamas\u0131: 0.4719641495788811\n* Lasso Regresyon Modeli Hata Kareler Ortalamas\u0131: 0.4734783036550058\n* ElasticNet Regresyon Modeli Hata Kareler Ortalamas\u0131: 0.47277822616262133\n* KNeighbors Regresyon Modeli Hata Kareler Ortalamas\u0131: 0.36970662593093034\n* XGBOOST Modeli Hata Kareler Ortalamas\u0131: 0.34783882157774626\n* LightGbm Modeli Hata Kareler Ortalamas\u0131 0.340259617148958\n* CatBoost Regresyon Modeli Hata Kareler Ortalamas\u0131: 0.3353974207160476","238f413a":"## Co\u011frafi Veriyi G\u00f6rselle\u015ftirme\n* Verimizde yer alan konum bilgisinden yararlanarak verilerimizi harita \u00fczerinde g\u00f6sterelim.","39033c9c":"## Veri Setini Tan\u0131yal\u0131m\n\n* Veri setimizde bir b\u00f6lgedeki evlerin \u00f6zellikleri ve fiyat bilgileri yer almaktad\u0131r.Bu \u00f6zellikler ise konum bilgisi,toplam oda say\u0131s\u0131,okyanusa yak\u0131nl\u0131k gibi bilgilerdir.\n* Bizim burada amac\u0131m\u0131z ev fiyatlar\u0131n\u0131 etkileyen s\u00fctunlar\u0131 kullanarak ev fiyatlar\u0131n\u0131 tahmin edebilecek modeller geli\u015ftirmektir.\n* Modelleri kurmadan \u00f6nce verimizi ve gerekli k\u00fct\u00fcphaneleri i\u00e7eri aktaral\u0131m.\n* Veri seti hakk\u0131nda baz\u0131 sorgular ger\u00e7ekle\u015ftirerek veri \u00f6n i\u015fleme a\u015famalar\u0131n\u0131 uygulayal\u0131m.","7b57b412":"## Lasso Regresyon Modeli","f5db2ec8":"## Makine \u00d6\u011frenmesi\n* Veri \u00f6n i\u015fleme ve veri analizi a\u015famalar\u0131ndan sonra art\u0131k makine \u00f6\u011frenmesi algoritmalar\u0131 kullanarak modeller kurup tahminler yapabiliriz.\n* Bu \u00e7al\u0131\u015fmada makine \u00f6\u011frenmsi algoritmalar\u0131ndan Rigde Regresyon,Lasso Regresyon,ElasticNet,Xgboost ve Lightgbm modelleri kullan\u0131lm\u0131\u015ft\u0131r.\n* Herbir modelin parametrelerinin GridSearchCV y\u00f6ntemi ile en iyi sonu\u00e7 veren de\u011ferlerin se\u00e7ilmesine \u00e7al\u0131\u015f\u0131lm\u0131\u015ft\u0131r. \n* Bu de\u011ferler belirlendikten sonra model kurulup tahminler ger\u00e7ekle\u015ftirilmi\u015ftir.","60ec3551":"## XGBOOST Modeli"}}