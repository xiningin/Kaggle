{"cell_type":{"98fe464c":"code","2d578a4d":"code","ab1737a9":"code","102562fa":"code","1197cadb":"code","54e7e0a1":"code","97b66f53":"code","26048793":"code","8ee74f3a":"code","47fa17ff":"code","2e61ae20":"code","1cf8bb75":"code","7ff14f13":"code","e0d1094b":"markdown","b0c3c8bb":"markdown","6cc0baaa":"markdown","18467c67":"markdown","8e0c954a":"markdown","6a2f003c":"markdown","cbee0175":"markdown","1113795b":"markdown","e26cae00":"markdown","524baec2":"markdown","dd8f056a":"markdown"},"source":{"98fe464c":"# Setup feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.feature_engineering_new.ex3 import *\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import cross_val_score\nfrom xgboost import XGBRegressor\n\n\ndef score_dataset(X, y, model=XGBRegressor()):\n    # Label encoding for categoricals\n    for colname in X.select_dtypes([\"category\", \"object\"]):\n        X[colname], _ = X[colname].factorize()\n    # Metric for Housing competition is RMSLE (Root Mean Squared Log Error)\n    score = cross_val_score(\n        model, X, y, cv=5, scoring=\"neg_mean_squared_log_error\",\n    )\n    score = -1 * score.mean()\n    score = np.sqrt(score)\n    return score\n\n\n# Prepare data\ndf = pd.read_csv(\"..\/input\/fe-course-data\/ames.csv\")\nX = df.copy()\ny = X.pop(\"SalePrice\")","2d578a4d":"X_1 = pd.DataFrame()\n\nX_1[\"LivLotRatio\"] = df['GrLivArea']\/df['LotArea']\nX_1[\"Spaciousness\"] = (df['FirstFlrSF'] + df['SecondFlrSF'])\/df['TotRmsAbvGrd']\nX_1[\"TotalOutsideSF\"] = df['WoodDeckSF'] + df['OpenPorchSF'] + df['EnclosedPorch'] + \\\n                        df['Threeseasonporch'] + df['ScreenPorch']\n\n# Check your answer\nq_1.check()","ab1737a9":"# Lines below will give you a hint or solution code\n#q_1.hint()\n#q_1.solution()","102562fa":"# One-hot encode BldgType. Use `prefix=\"Bldg\"` in `get_dummies`\nX_2 = pd.get_dummies(df['BldgType'], prefix=\"Bldg\") \n# Multiply\nX_2 = X_2.mul(df['GrLivArea'], axis=0)\n\n# Check your answer\nq_2.check()","1197cadb":"# Lines below will give you a hint or solution code\n#q_2.hint()\n#q_2.solution()","54e7e0a1":"X_3 = pd.DataFrame()\nfeatures = ['WoodDeckSF', 'OpenPorchSF', 'EnclosedPorch', 'Threeseasonporch', 'ScreenPorch']\nX_3[\"PorchTypes\"] = df[features].gt(0).sum(axis=1)\n\n# Check your answer\nq_3.check()","97b66f53":"# Lines below will give you a hint or solution code\n#q_3.hint()\n#q_3.solution()","26048793":"df['MSSubClass'].unique()","8ee74f3a":"X_4 = pd.DataFrame()\nX_4[\"MSClass\"] = df['MSSubClass'].str.split(\"_\", n=1, expand=True)[0]\n\n# Check your answer\nq_4.check()","47fa17ff":"# Lines below will give you a hint or solution code\n#q_4.hint()\n#q_4.solution()","2e61ae20":"X_5 = pd.DataFrame()\nX_5[\"MedNhbdArea\"] = df.groupby(\"Neighborhood\")[\"GrLivArea\"].transform(\"median\")\n\n# Check your answer\nq_5.check()","1cf8bb75":"# Lines below will give you a hint or solution code\n#q_5.hint()\n#q_5.solution()","7ff14f13":"X_new = X.join([X_1, X_2, X_3, X_4, X_5])\nscore_dataset(X_new, y)","e0d1094b":"# Keep Going #\n\n[**Untangle spatial relationships**](https:\/\/www.kaggle.com\/ryanholbrook\/clustering-with-k-means) by adding cluster labels to your dataset.","b0c3c8bb":"-------------------------------------------------------------------------------\n\nIf you've discovered an interaction effect between a numeric feature and a categorical feature, you might want to model it explicitly using a one-hot encoding, like so:\n\n```\n# One-hot encode Categorical feature, adding a column prefix \"Cat\"\nX_new = pd.get_dummies(df.Categorical, prefix=\"Cat\")\n\n# Multiply row-by-row\nX_new = X_new.mul(df.Continuous, axis=0)\n\n# Join the new features to the feature set\nX = X.join(X_new)\n```\n\n# 2) Interaction with a Categorical\n\nWe discovered an interaction between `BldgType` and `GrLivArea` in Exercise 2. Now create their interaction features.","6cc0baaa":"# 4) Break Down a Categorical Feature\n\n`MSSubClass` describes the type of a dwelling:","18467c67":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/221677) to chat with other Learners.*","8e0c954a":"# Introduction #\n\nIn this exercise you'll start developing the features you identified in Exercise 2 as having the most potential. As you work through this exercise, you might take a moment to look at the data documentation again and consider whether the features we're creating make sense from a real-world perspective, and whether there are any useful combinations that stand out to you.\n\nRun this cell to set everything up!","6a2f003c":"**This notebook is an exercise in the [Feature Engineering](https:\/\/www.kaggle.com\/learn\/feature-engineering) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/ryanholbrook\/creating-features).**\n\n---\n","cbee0175":"-------------------------------------------------------------------------------\n\nLet's start with a few mathematical combinations. We'll focus on features describing areas -- having the same units (square-feet) makes it easy to combine them in sensible ways. Since we're using XGBoost (a tree-based model), we'll focus on ratios and sums.\n\n# 1) Create Mathematical Transforms\n\nCreate the following features:\n\n- `LivLotRatio`: the ratio of `GrLivArea` to `LotArea`\n- `Spaciousness`: the sum of `FirstFlrSF` and `SecondFlrSF` divided by `TotRmsAbvGrd`\n- `TotalOutsideSF`: the sum of `WoodDeckSF`, `OpenPorchSF`, `EnclosedPorch`, `Threeseasonporch`, and `ScreenPorch`","1113795b":"# 3) Count Feature\n\nLet's try creating a feature that describes how many kinds of outdoor areas a dwelling has. Create a feature `PorchTypes` that counts how many of the following are greater than 0.0:\n\n```\nWoodDeckSF\nOpenPorchSF\nEnclosedPorch\nThreeseasonporch\nScreenPorch\n```","e26cae00":"Now you've made your first new feature set! If you like, you can run the cell below to score the model with all of your new features added:","524baec2":"You can see that there is a more general categorization described (roughly) by the first word of each category. Create a feature containing only these first words by splitting `MSSubClass` at the first underscore `_`. (Hint: In the `split` method use an argument `n=1`.)","dd8f056a":"# 5) Use a Grouped Transform\n\nThe value of a home often depends on how it compares to typical homes in its neighborhood. Create a feature `MedNhbdArea` that describes the *median* of `GrLivArea` grouped on `Neighborhood`."}}