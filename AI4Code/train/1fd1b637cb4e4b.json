{"cell_type":{"11e21e59":"code","dbf54ac5":"code","25b1c584":"code","8e9567da":"code","2f87aab6":"code","06a59fdc":"code","21a58d0e":"code","bc837f87":"markdown"},"source":{"11e21e59":"import os\nfrom multiprocessing import Pool\n\nfrom PIL import Image, ImageOps\nimport pandas as pd\nfrom tqdm.auto import tqdm\nimport numpy as np","dbf54ac5":"def convert_to_path(split: str):\n    # Modified from: https:\/\/www.kaggle.com\/ihelon\/molecular-translation-exploratory-data-analysis\n    def aux(image_id: str) -> str:\n        return \"..\/input\/bms-molecular-translation\/{}\/{}\/{}\/{}\/{}.png\".format(\n            split, image_id[0], image_id[1], image_id[2], image_id \n        )\n\n    return aux","25b1c584":"def pillow_pad(im, desired_size, color=0, resample=Image.LANCZOS, copy=False):\n    # Source: https:\/\/jdhao.github.io\/2017\/11\/06\/resize-image-to-square-with-padding\/\n    \n    if copy:\n        im = im.copy()\n    \n    old_size = im.size  # old_size[0] is in (width, height) format\n\n    ratio = float(desired_size)\/max(old_size)\n    new_size = tuple([int(x*ratio) for x in old_size])\n    # use thumbnail() or resize() method to resize the input image\n\n    # thumbnail is a in-place operation\n    im.thumbnail(new_size, resample)\n\n    # create a new image and paste the resized on it\n\n    new_im = Image.new(\"RGB\", (desired_size, desired_size), color=color)\n    new_im.paste(im, ((desired_size-new_size[0])\/\/2,\n                        (desired_size-new_size[1])\/\/2))\n\n    return new_im","8e9567da":"def resize(im, size, mode='keep_ratio', color=0, resample=Image.LANCZOS, inplace=True):\n    # Source: https:\/\/www.kaggle.com\/xhlulu\/bms-molecular-resizing-and-reshaping\n    if not inplace:\n        im = im.copy()\n    if mode == 'keep_ratio':\n        im.thumbnail((size, size), resample)\n    elif mode == \"pad\":\n        im = pillow_pad(im, desired_size=size, color=color, resample=resample, copy=False)\n    elif mode == 'stretch':\n        im = im.resize((size, size), resample)\n    else:\n        raise ValueError(\"Invalid mode. Please choose 'keep_ratio', 'pad', or 'stretch'.\")\n    \n    return im","2f87aab6":"%%time\ntrain = pd.read_csv('..\/input\/bms-molecular-translation\/train_labels.csv')\ntest = pd.read_csv('..\/input\/bms-molecular-translation\/sample_submission.csv')\n\ntrain_paths = train.image_id.apply(convert_to_path('train'))\ntest_paths = test.image_id.apply(convert_to_path('test'))\n\npaths = {\"train\": train_paths.tolist(), \"test\": test_paths.tolist()}","06a59fdc":"%%time\nfor split in ['train', 'test']:\n    save_dir = f'\/kaggle\/tmp\/{split}\/'\n    os.makedirs(save_dir, exist_ok=True)\n    \n    def process_fn(path):\n        name = path.split('\/')[-1]\n        im = Image.open(path)\n        im = resize(im, 128, mode='pad', color=(255, 255, 255))\n        im.save(save_dir + name.replace(\"png\", \"jpg\"))\n    \n    with Pool() as p:\n        p.map(process_fn, paths[split])","21a58d0e":"%%time\n!tar -zcf data.tar.gz -C \"\/kaggle\/tmp\/\" .\n# alternatively:\n# !tar -cf data.tar -C \"\/kaggle\/tmp\/\" .","bc837f87":"This notebook shows you how to resize your image into a smaller format (e.g. 128px, 256px) and perform various transforms to obtain a specific shape (e.g. pad or stretch to square). It also saves the data into a `tar.gz` file that you can use to create a dataset.\n\nFor the list of datasets created from (variations of) this notebook, check out [this discussion post](https:\/\/www.kaggle.com\/c\/bms-molecular-translation\/discussion\/223477). You will be able to find various shapes, sizes and file format (png and jpg).\n\n\n\nBy using the output of this notebook, you are accepting the [competition rules](https:\/\/www.kaggle.com\/c\/bms-molecular-translation\/rules)."}}