{"cell_type":{"898f7c61":"code","ed66a3d0":"code","228117b1":"code","da2cbf04":"code","cc81ef94":"code","00c9fadb":"code","bec04c09":"code","17fe1f67":"code","aa1e8577":"code","55bf737f":"code","c44499c4":"code","bc49df51":"code","c82a7870":"code","829fd33b":"code","5783238e":"code","45b90004":"code","48e0ed18":"code","b7aef728":"code","505123ad":"code","3e6b222d":"code","9e7ce456":"code","fe905d42":"code","ebfa0c41":"code","0d44f017":"markdown","471d0562":"markdown","980d4de5":"markdown","bfd4d7da":"markdown","b2d38e6a":"markdown","5bd80a5a":"markdown","6db3cd02":"markdown","dbe36f0f":"markdown","1565145e":"markdown","5c9cf07e":"markdown","7a73e7b3":"markdown","815c5e20":"markdown"},"source":{"898f7c61":"# Data Manipulation, Linear Algebra\nimport pandas as pd\nimport numpy as np\n\n# Plots\n!pip install dabl\nimport dabl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n\n# Model\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\n\nfrom sklearn import ensemble, tree, linear_model\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\n\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# Ignore Warning Messages \nimport warnings\nwarnings.filterwarnings('ignore')","ed66a3d0":"data = pd.read_csv(\"..\/input\/fetal-health-classification\/fetal_health.csv\")\ndata","228117b1":"data.info()","da2cbf04":"data.columns","cc81ef94":"data.describe(include=\"all\")","00c9fadb":"data.isnull().sum()","bec04c09":"dabl.plot(data, \"fetal_health\")","17fe1f67":"plt.figure(figsize=(15, 10))\nsns.heatmap(data.corr(), annot=True)","aa1e8577":"plt.figure(figsize=(14, 4), dpi=80)\n\ny_cols = [\"histogram_variance\", \"histogram_mean\", \"histogram_mode\"]\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.scatterplot(data=data, x=\"baseline value\", y=y_cols[i], hue=\"fetal_health\", palette=\"tab10\")\n\nplt.show()","55bf737f":"X = data.drop(\"fetal_health\", axis=1)\ny = data[\"fetal_health\"]","c44499c4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\nX_train.shape, X_test.shape","bc49df51":"ss = StandardScaler()\n\nX_train_scaled = ss.fit_transform(X_train)\nX_test_scaled = ss.transform(X_test)","c82a7870":"X_train_scaled","829fd33b":"X_test_scaled","5783238e":"MLA_compare = pd.DataFrame()\n\ndef MLA_testing(MLA, X_train, X_test):\n    row_index = 0\n    for classifier in MLA:\n        classifier.fit(X_train, y_train)\n\n        y_pred = classifier.predict(X_test_scaled)\n        classifier_accuracy_score = accuracy_score(y_test, y_pred)\n\n        kfold_accuracy = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)\n\n        MLA_name = classifier.__class__.__name__\n        MLA_compare.loc[row_index, 'MLA Name'] = MLA_name\n        MLA_compare.loc[row_index, 'Accuracy Score'] = classifier_accuracy_score*100\n        MLA_compare.loc[row_index, 'K-Fold Accuracy'] = kfold_accuracy.mean()*100\n\n        print(MLA_name, \"Done\")\n        row_index+=1","45b90004":"MLA = [\n    #Ensemble Methods\n    ensemble.GradientBoostingClassifier(),\n    ensemble.RandomForestClassifier(),\n    \n    #GLM\n    linear_model.SGDClassifier(),\n    linear_model.LogisticRegression(),\n\n    #Trees    \n    tree.DecisionTreeClassifier(),\n    tree.ExtraTreeClassifier(),\n\n    XGBClassifier(eval_metric=\"mlogloss\"),\n    CatBoostClassifier(silent=True)  \n]\n\nMLA_testing(MLA=MLA, X_train=X_train_scaled, X_test=X_test)","48e0ed18":"MLA_compare = MLA_compare.sort_values(by=\"Accuracy Score\", ascending=False).reset_index(drop=True)\nMLA_compare","b7aef728":"# OneHotEncoding Target Variable\ny_train_encoded = pd.get_dummies(y_train)\ny_test_encoded = pd.get_dummies(y_test)","505123ad":"# Code from https:\/\/www.kaggle.com\/fatihdeniz\/ann-fetal-health-classification\nann_classifier = keras.Sequential([\n    # Input Layer\n    keras.layers.Dense(20, input_shape=X_train_scaled[0].shape, activation=\"relu\", kernel_initializer=\"HeNormal\"),\n    \n    # Hidden Layer 1\n    keras.layers.Dense(40,activation=\"relu\"),\n    keras.layers.Dense(80,activation=\"relu\"),\n    keras.layers.Dropout(0.3),\n    \n    # Hidden Layer 2\n    keras.layers.Dense(160,activation=\"relu\"),\n    keras.layers.Dense(320,activation=\"relu\"),\n    keras.layers.Dropout(0.3),\n    \n    # Hidden Layer 3\n    keras.layers.Dense(640,activation=\"relu\"),\n    keras.layers.Dense(3, activation=\"softmax\")\n])\n\nann_classifier.summary()","3e6b222d":"ann_classifier.compile(loss=\"categorical_crossentropy\", metrics=\"accuracy\", optimizer=\"rmsprop\")\n\nhistory = ann_classifier.fit(X_train_scaled, y_train_encoded, validation_data=(X_test_scaled, y_test_encoded),\n                             epochs=100)","9e7ce456":"y_pred_prob = ann_classifier.predict(X_test_scaled)\ny_pred_prob","fe905d42":"y_pred = []\n\nfor i in y_pred_prob:\n    y_pred.append(np.argmax(i) + 1)\n    \ny_pred = np.array(y_pred)\ny_pred","ebfa0c41":"ann_accuracy = accuracy_score(y_pred, y_test)\nprint(\"ANN Accuracy :\", ann_accuracy)","0d44f017":"## <b>Seperating Target Variables from Features<\/b>","471d0562":"## <b>Train Test Split<\/b>","980d4de5":"## <b>Getting the Data<\/b>","bfd4d7da":"# <b>EDA<\/b>","b2d38e6a":"## <b>Checking for Null Values<\/b>","5bd80a5a":"# <b>Preprocessing<\/b>","6db3cd02":"## <b>Scaling the Data<\/b>","dbe36f0f":"## <b>ANN Model<\/b>","1565145e":"# <b>Imports<\/b>","5c9cf07e":"# <b>Model<\/b>","7a73e7b3":"## <b>Basic Analysis<\/b>","815c5e20":"# <b>Preparing Data<\/b>"}}