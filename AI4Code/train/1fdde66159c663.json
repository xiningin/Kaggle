{"cell_type":{"9f9954a7":"code","d660e767":"code","c15681ba":"code","aed57410":"code","840adc06":"code","574c689b":"code","0a9cba9a":"code","81b432f4":"code","4c7e08a4":"code","7e00d918":"markdown","79b239b1":"markdown","5f7b303a":"markdown","379f7f00":"markdown","d00e30e3":"markdown","1de7b22a":"markdown","118dfd0b":"markdown","0173fc22":"markdown","86e541a5":"markdown","7b5543f8":"markdown"},"source":{"9f9954a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d660e767":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport pylab as pl\nimport numpy as np\n%matplotlib inline","c15681ba":"df = pd.read_csv(\"..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv\")\n\n# take a look at the dataset\ndf.head()","aed57410":"cdf = df[['acousticness','danceability','duration_ms','energy','explicit','instrumentalness','key','liveness','loudness','mode','popularity','speechiness','tempo','valence']]\ncdf.head(14)","840adc06":"plt.scatter(cdf.instrumentalness, cdf.speechiness,  color='red')\nplt.xlabel(\"instrumentalness\")\nplt.ylabel(\"speechiness\")\nplt.show()","574c689b":"msk = np.random.rand(len(df)) < 0.7\ntrain = cdf[msk]\ntest = cdf[~msk]","0a9cba9a":"plt.scatter(cdf.instrumentalness, cdf.speechiness,  color='red')\nplt.xlabel(\"instrumentalness\")\nplt.ylabel(\"speechiness\")\nplt.show()","81b432f4":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\nx = np.asanyarray(train[['instrumentalness','duration_ms','energy']])\ny = np.asanyarray(train[['tempo']])\nregr.fit (x, y)\n# The coefficients\nprint ('Coefficients: ', regr.coef_)","4c7e08a4":"y_hat= regr.predict(test[['instrumentalness','duration_ms','energy']])\nx = np.asanyarray(test[['instrumentalness','duration_ms','energy']])\ny = np.asanyarray(test[['tempo']])\nprint(\"Sum of squares: %.4f\"\n      % np.mean((y_hat - y) ** 2))\n\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.4f' % regr.score(x, y))","7e00d918":"***1. Importing Needed Packages***","79b239b1":"***5. Prediction***","5f7b303a":"(spotify-dataset)data.csv","379f7f00":"***2. Understanding Data***","d00e30e3":"***Creating train and test dataset.***","1de7b22a":"***Train data distribution.***","118dfd0b":"***Selecting features for regression.***","0173fc22":"***3. Reading the data in***","86e541a5":"***4. Multiple Regression Model***","7b5543f8":"\t\t\t\t\t\t\t\t\t\t\t\t\n***acousticness*** eg - 0.991000\n***artists*** eg - ['Mamie Smith']\n***danceability*** eg - 0.598\n***duration_ms*** eg - 168333\n***energy*** eg - 0.224\n***explicit*** eg - 0\n***id*** eg - 0cS0A1fUEUd1EW3FcF8AEI\n***instrumentalness*** eg - 0.000522\n***key***eg - 5\n***liveness*** eg - 0.3790\n***loudness*** eg - -12.628\n***mode*** eg - 0\n***name*** eg - Keep A Song In Your Soul\n***popularity*** eg - 12\n***release_date*** eg - 1920\t\t\n***speechiness*** eg-0.0936\t\n***tempo*** eg-149.976\t\n***valence*** eg-0.6340\t\t\n***year*** eg-1920"}}