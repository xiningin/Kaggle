{"cell_type":{"cc0f9475":"code","046113ad":"code","4db3cc28":"code","97cae775":"code","d8897e44":"code","cf7b36ca":"code","88541188":"code","6d1359f3":"code","8d3684e5":"code","561bfeda":"code","62253f89":"code","a85269cb":"code","f0fdf1dc":"code","6f326433":"code","0d3ce50f":"code","3363bf9c":"code","f1c369a5":"code","329b3cb9":"code","c650e877":"code","3fc7ad9c":"code","7861a9ad":"code","6001b07c":"code","43bb3886":"code","6aff6a4a":"code","7d3a01ef":"code","68660e09":"code","77afab77":"code","bfd89f1f":"code","ad876700":"code","72e659bd":"code","45121578":"code","6a2d4cd3":"code","959301be":"code","2b65af95":"code","45c3d010":"code","0421b49f":"code","19497bcd":"code","00f43c91":"code","59f3d82a":"code","d0c93394":"code","84f24cfc":"code","18267850":"code","93b92552":"code","8af79d33":"code","dd6259a1":"code","62e12dfa":"code","6b5f9f1d":"code","0948aaf7":"code","5f36a7cd":"code","2d7bd234":"code","8940c1cf":"code","7395e6f5":"code","3c5ffe49":"code","9c8af3b4":"code","623e21ab":"code","64ba4f4a":"code","06c4313c":"code","e9a9f663":"code","6267d2c0":"code","6138faca":"code","2fbec1ae":"code","b9ac05ee":"code","90a69b51":"code","c473c418":"code","14322f0d":"code","97c9b86c":"code","15cf232f":"code","768b95c5":"code","2cca929c":"code","de2236ab":"code","8fed6394":"code","091d8418":"code","34f1d983":"code","9026e5f0":"code","1e9590e8":"code","aa2b8ef9":"markdown","d8441b45":"markdown","03f8da03":"markdown","0f30c624":"markdown","e6f371b3":"markdown","1be933da":"markdown","1568c639":"markdown","ac713361":"markdown","9008c5a6":"markdown","317c00c1":"markdown","867eb6ea":"markdown","e9c7f88c":"markdown","c51a431b":"markdown","def5610d":"markdown","27387a38":"markdown","d069ecd1":"markdown","3e563900":"markdown","a6942187":"markdown","d63e38b4":"markdown","965bd697":"markdown","aa61e85b":"markdown","f490e95a":"markdown","b24fdb75":"markdown","78659634":"markdown","09d18436":"markdown","95e189a3":"markdown","42934d21":"markdown","b749afd1":"markdown","371eaaf8":"markdown","7e046491":"markdown","97431ff7":"markdown","5cdb895c":"markdown","ddb1f584":"markdown","e6d2b991":"markdown","0b481f7c":"markdown","71ceb7a6":"markdown","56c7cbf5":"markdown","6b9a5dc4":"markdown","8c53fde9":"markdown","a9b48f92":"markdown","cf1bc530":"markdown","ef8e8645":"markdown","a96c5c8f":"markdown","ac084d11":"markdown","ae0454a2":"markdown","839f0ad0":"markdown","e4df5618":"markdown","fd2409ac":"markdown","2ff5fb9a":"markdown","29ae5cdb":"markdown","c01443fb":"markdown","a08259e0":"markdown","f64b888f":"markdown","2ec5d7f3":"markdown","2090c6d3":"markdown","ac722c83":"markdown","d1f93591":"markdown","dc8fd19e":"markdown","2eb7f86c":"markdown","4a20e3aa":"markdown","1a6be302":"markdown"},"source":{"cc0f9475":"import pandas as pd\nimport numpy as np\nimport itertools\n\n\"\"\"Plots\"\"\"\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\"\"\"Evaluation\"\"\"\n\nfrom sklearn.metrics import mean_squared_error\n\n\"\"\"Linear Regression\"\"\"\n\nimport statsmodels.api as sm\nfrom statsmodels.stats.diagnostic import het_white as white\n\n\"\"\"Tree Regression\"\"\"\n\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import plot_tree\n\n\"\"\"ANOVA one way & ANOVA two ways without replication\"\"\"\n\nfrom statsmodels.formula.api import ols\nfrom scipy.stats import levene\n\n\"\"\"Settings\"\"\"\n\npd.set_option('display.max_columns', 500)\nplt.rcParams[\"figure.figsize\"] = (20,15) \nplt.style.use('seaborn-poster') ","046113ad":"df2021 = pd.read_csv(\"..\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv\")\ndf = pd.read_csv(\"..\/input\/world-happiness-report-2021\/world-happiness-report.csv\")","4db3cc28":"df2021 = df2021[df2021.loc[:,:\"Perceptions of corruption\"].columns.difference([\"Standard error of ladder score\",\"upperwhisker\",\"lowerwhisker\"])]","97cae775":"df.head(3)","d8897e44":"df2021.head(3)","cf7b36ca":"df2021.describe().T","88541188":"df2021.isna().sum().where(lambda x: x>0).dropna()","6d1359f3":"df.isna().sum().where(lambda x: x>0).dropna()","8d3684e5":"sns.barplot(df2021[\"Country name\"][:10].values,df2021[\"Ladder score\"][:10].values, palette = \"Blues_r\")\nplt.axhline(y = df2021[\"Ladder score\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Best Countries Ladder Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","561bfeda":"sns.barplot(df2021[\"Country name\"][-10:].values,df2021[\"Ladder score\"][-10:].values, palette = \"Reds\")\nplt.axhline(y = df2021[\"Ladder score\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Worst Countries Ladder Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","62253f89":"regional_ladder = df2021.groupby(\"Regional indicator\")[\"Ladder score\"].mean().sort_values(ascending = False)\n\nsns.barplot(regional_ladder.index,regional_ladder.values, palette = \"coolwarm\")\nplt.axhline(y = regional_ladder.mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Region Ladder Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = \"vertical\")\nplt.yticks(fontsize=14)\nplt.xlabel(\"\") \n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","a85269cb":"sns.barplot(df2021.sort_values([\"Generosity\"], ascending = False)[\"Country name\"][:10].values,df2021.sort_values([\"Generosity\"], ascending = False)[\"Generosity\"][:10], palette = \"Blues_r\")\nplt.axhline(y = df2021[\"Generosity\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Best Countries Generosity Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","f0fdf1dc":"sns.barplot(df2021.sort_values([\"Generosity\"], ascending = False)[\"Country name\"][-10:].values,df2021.sort_values([\"Generosity\"], ascending = False)[\"Generosity\"][-10:], palette = \"Reds\")\nplt.axhline(y = df2021[\"Generosity\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Worst Countries Generosity Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","6f326433":"regional_generosity = df2021.groupby(\"Regional indicator\")[\"Generosity\"].mean().sort_values(ascending = False)\n\nsns.barplot(regional_generosity.index,regional_generosity.values, palette = \"coolwarm\")\nplt.axhline(y = regional_generosity.mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Region Generosity Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = \"vertical\")\nplt.yticks(fontsize=14)\nplt.xlabel(\"\") \n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","0d3ce50f":"sns.barplot(df2021.sort_values([\"Social support\"], ascending = False)[\"Country name\"][:10].values,df2021.sort_values([\"Social support\"], ascending = False)[\"Social support\"][:10], palette = \"Blues_r\")\nplt.axhline(y = df2021[\"Social support\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Best Countries Social support Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","3363bf9c":"sns.barplot(df2021.sort_values([\"Social support\"], ascending = False)[\"Country name\"][-10:].values,df2021.sort_values([\"Social support\"], ascending = False)[\"Social support\"][-10:], palette = \"Reds\")\nplt.axhline(y = df2021[\"Social support\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Worst Countries Social support Score 2021\", size = 24)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","f1c369a5":"regional_support = df2021.groupby(\"Regional indicator\")[\"Social support\"].mean().sort_values(ascending = False)\n\nsns.barplot(regional_support.index,regional_support.values, palette = \"coolwarm\")\nplt.axhline(y = regional_support.mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Region Social Support Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = \"vertical\")\nplt.yticks(fontsize=14)\nplt.xlabel(\"\") \n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","329b3cb9":"sns.barplot(df2021.sort_values([\"Perceptions of corruption\"], ascending = False)[\"Country name\"][:10].values,df2021.sort_values([\"Perceptions of corruption\"], ascending = False)[\"Perceptions of corruption\"][:10], palette = \"Reds_r\")\nplt.axhline(y = df2021[\"Perceptions of corruption\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Worst Countries Perceptions of corruption Score 2021\", size = 20)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","c650e877":"sns.barplot(df2021.sort_values([\"Perceptions of corruption\"], ascending = False)[\"Country name\"][-10:].values,df2021.sort_values([\"Perceptions of corruption\"], ascending = False)[\"Perceptions of corruption\"][-10:], palette = \"Blues\")\nplt.axhline(y = df2021[\"Perceptions of corruption\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Best Countries Perceptions of corruption Score 2021\", size = 20)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","3fc7ad9c":"regional_corruption = df2021.groupby(\"Regional indicator\")[\"Perceptions of corruption\"].mean().sort_values(ascending = False)\n\nsns.barplot(regional_corruption.index,regional_corruption.values, palette = \"coolwarm_r\")\nplt.axhline(y = regional_corruption.mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Region Perceptions of corruption Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = \"vertical\")\nplt.yticks(fontsize=14)\nplt.xlabel(\"\") \n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","7861a9ad":"sns.barplot(df2021.sort_values([\"Freedom to make life choices\"], ascending = False)[\"Country name\"][:10].values,df2021.sort_values([\"Freedom to make life choices\"], ascending = False)[\"Freedom to make life choices\"][:10], palette = \"Blues_r\")\nplt.axhline(y = df2021[\"Freedom to make life choices\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Best Countries Freedom to make life choices Score 2021\", size = 19)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","6001b07c":"sns.barplot(df2021.sort_values([\"Freedom to make life choices\"], ascending = False)[\"Country name\"][-10:].values,df2021.sort_values([\"Freedom to make life choices\"], ascending = False)[\"Freedom to make life choices\"][-10:], palette = \"Reds\")\nplt.axhline(y = df2021[\"Freedom to make life choices\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Worst Countries Freedom to make life choices Score 2021\", size = 18)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","43bb3886":"regional_freedom = df2021.groupby(\"Regional indicator\")[\"Freedom to make life choices\"].mean().sort_values(ascending = False)\n\nsns.barplot(regional_freedom.index,regional_freedom.values, palette = \"coolwarm\")\nplt.axhline(y = regional_freedom.mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Region Freedom to make life choices Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = \"vertical\")\nplt.yticks(fontsize=14)\nplt.xlabel(\"\") \n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","6aff6a4a":"sns.barplot(df2021.sort_values([\"Healthy life expectancy\"], ascending = False)[\"Country name\"][:10].values,df2021.sort_values([\"Healthy life expectancy\"], ascending = False)[\"Healthy life expectancy\"][:10], palette = \"Blues_r\")\nplt.axhline(y = df2021[\"Healthy life expectancy\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Best Countries Healthy life expectancy Score 2021\", size = 19)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","7d3a01ef":"sns.barplot(df2021.sort_values([\"Healthy life expectancy\"], ascending = False)[\"Country name\"][-10:].values,df2021.sort_values([\"Healthy life expectancy\"], ascending = False)[\"Healthy life expectancy\"][-10:], palette = \"Reds\")\nplt.axhline(y = df2021[\"Healthy life expectancy\"].mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Top 10 Worst Countries Healthy life expectancy Score 2021\", size = 18)\nplt.xticks(fontsize=14, rotation = 45)\nplt.yticks(fontsize=14)\n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","68660e09":"regional_life = df2021.groupby(\"Regional indicator\")[\"Healthy life expectancy\"].mean().sort_values(ascending = False)\n\nsns.barplot(regional_life.index,regional_life.values, palette = \"coolwarm\")\nplt.axhline(y = regional_life.mean(), color = \"red\", linewidth = 5,label = \"overall\")\nplt.title(\"Region Healthy life expectancy Score 2021\", size = 25)\nplt.xticks(fontsize=14, rotation = \"vertical\")\nplt.yticks(fontsize=14)\nplt.xlabel(\"\") \n\nplt.legend(bbox_to_anchor = (1.0, 1), loc = 'lower center')\n# plt.savefig(\"NIU_ALCALDIAS\",bbox_inches = \"tight\", pad_inches = 0)","77afab77":"df2021regresion = df2021.copy().drop(columns = [\"Country name\",\"Regional indicator\"])","bfd89f1f":"heatmap = sns.heatmap(df2021regresion.corr(), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nplt.yticks(rotation = \"horizontal\")\nplt.xticks(rotation = \"70\")","ad876700":"heatmap = sns.heatmap(df2021regresion.corr()[['Healthy life expectancy']].sort_values(by='Healthy life expectancy', ascending=False), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Correlaciones lineales con PIB (variable dependiente)', fontdict={'fontsize':18}, pad=16)\nplt.yticks(rotation = \"horizontal\")","72e659bd":"X = df2021regresion.drop(columns = [\"Healthy life expectancy\"])\nY = df2021regresion[\"Healthy life expectancy\"]\n\nXreg = sm.add_constant(X)\nYreg = Y\n\n\nmodel1 = sm.OLS(Yreg, Xreg, prepend=True).fit()\ndisplay(model1.summary())","45121578":"print(\"LM-test: \", white(model1.resid,Xreg)[1], 2*\"\\n\", \"F-test: \", white(model1.resid,Xreg)[3])","6a2d4cd3":"X2 = df2021regresion.drop(columns = [\"Healthy life expectancy\",\"Freedom to make life choices\",\"Generosity\",\"Perceptions of corruption\",\"Social support\"])\nY2 = df2021regresion[\"Healthy life expectancy\"]\n\nXreg2 = sm.add_constant(X2)\nYreg2 = Y2\n\n\nmodel2 = sm.OLS(Yreg2, Xreg2, prepend=True).fit()\ndisplay(model2.summary())\nprint(\"LM-test: \", white(model2.resid,Xreg2)[1], 2*\"\\n\", \"F-test: \", white(model2.resid,Xreg2)[3])","959301be":"X3 = df2021regresion.drop(columns = [\"Healthy life expectancy\",\"Freedom to make life choices\",\"Generosity\",\"Perceptions of corruption\",\"Social support\",\"Ladder score\"])\nY3 = df2021regresion[\"Healthy life expectancy\"]\n\nXreg3 = sm.add_constant(X3)\nYreg3 = Y3\n\n\nmodel3 = sm.OLS(Yreg3, Xreg3, prepend=True).fit()\ndisplay(model3.summary())","2b65af95":"influence = model2.get_influence()\nc,p = influence.cooks_distance\ninfluence_df = Xreg2\ninfluence_df['influence'] = c\ninfluence_df[\"influence\"].reset_index().plot(kind = \"scatter\", x = \"index\", y = \"influence\")","45c3d010":"influence_df = influence_df[influence_df['influence']<=.035] #.035 \nXreg_noinf = sm.add_constant(df2021regresion.loc[influence_df.index,\"Ladde score\":\"Logged GDP per capita\"])\nYreg_noinf = df2021regresion.loc[influence_df.index,\"Healthy life expectancy\"]","0421b49f":"model2_ = sm.OLS(Yreg_noinf,Xreg_noinf,prepend=True).fit()\ndisplay(model2_.summary())\nprint(\"LM-test: \", white(model2_.resid,Xreg_noinf)[1], 2*\"\\n\", \"F-test: \", white(model2_.resid,Xreg_noinf)[3])","19497bcd":"test = df[df[\"year\"] == 2020][[\"Life Ladder\",\"Log GDP per capita\"]].dropna()\nXprediction= sm.add_constant(test)\nYprediction = model2_.predict(Xprediction)","00f43c91":"predicciones_mostrar = df.iloc[Yprediction.index,[0,5]]\npredicciones_mostrar[\"Predicciones\"] = round(Yprediction,1)","59f3d82a":"predicciones_mostrar","d0c93394":"round(mean_squared_error(predicciones_mostrar[\"Healthy life expectancy at birth\"], predicciones_mostrar.Predicciones),3)","84f24cfc":"selectioner = ExtraTreesRegressor().fit(X,Y)\nselectioner.feature_importances_\n\nfeat_importances = pd.Series(selectioner.feature_importances_, index=X.columns)\nfeat_importances.plot(kind='barh')","18267850":"feat_importances = pd.Series(selectioner.feature_importances_, index=X.columns)\nfeat_importances.nlargest(3).plot(kind='barh') ","93b92552":"Xtree = X[[\"Ladder score\",\"Social support\",\"Logged GDP per capita\"]]\nYtree = Y","8af79d33":"reg_decision_model=DecisionTreeRegressor()\n\nparameters={\"splitter\":[\"best\",\"random\"],\n            \"max_depth\" : [1,3,5,7,10],\n           \"min_samples_leaf\":[5,6,7,8,9,10,15],\n           \"min_weight_fraction_leaf\":[0.1,0.2,0.3,0.4,0.5],\n           \"max_features\":[\"auto\",\"log2\",\"sqrt\",None],\n           \"max_leaf_nodes\":[2,5,6,8,10,11,12,13] }\n\ntuning_model=GridSearchCV(reg_decision_model,param_grid=parameters,scoring='neg_mean_squared_error',cv=5,verbose=1)","dd6259a1":"# tuning_model.fit(Xtree,Ytree)","62e12dfa":"#tuning_model.best_params_","6b5f9f1d":"Tree = DecisionTreeRegressor(max_depth = 3, max_features = \"log2\",max_leaf_nodes = 15,min_samples_leaf = 5, min_weight_fraction_leaf = .1, splitter = \"best\", random_state =9).fit(Xtree,Ytree)","0948aaf7":"plot_tree(Tree,feature_names=Xtree.columns, fontsize=10)","5f36a7cd":"test_tree = df[df[\"year\"] == 2020][[\"Life Ladder\",\"Log GDP per capita\",\"Social support\"]].dropna().rename(columns = {\"Life Ladder\": \"Ladder score\",\"Log GDP per capita\":\"Logged GDP per capita\"})\nYprediction_tree = Tree.predict(test_tree)","2d7bd234":"predicciones_mostrar_tree = df.loc[test_tree.index,[\"Country name\",\"Healthy life expectancy at birth\"]]\npredicciones_mostrar_tree[\"Predicciones\"] = Yprediction_tree","8940c1cf":"round(mean_squared_error(predicciones_mostrar_tree[\"Healthy life expectancy at birth\"], predicciones_mostrar_tree.Predicciones),3)","7395e6f5":"dfsin = df.copy()\ndfsin = dfsin[(dfsin[\"year\"] == 2019) | (dfsin[\"year\"] == 2020)][[\"Country name\",\"year\",\"Positive affect\",\"Negative affect\"]]","3c5ffe49":"dfsin","9c8af3b4":"drop_countries = dfsin[\"Country name\"].value_counts().where(lambda x: x == 1).dropna().index\ndrop_countries","623e21ab":"dfsin = dfsin[~dfsin[\"Country name\"].isin(drop_countries)]\ndfsin","64ba4f4a":"# with pd.ExcelWriter(\"ANOVA_without_replication.xlsx\") as writer:\n#     dfsin.to_excel(writer, sheet_name = \"Countries\", index = False)","06c4313c":"combinations = pd.DataFrame(list(itertools.combinations(dfsin.dropna()[\"Country name\"].unique(),2)))","e9a9f663":"# with pd.ExcelWriter(\"ANOVA_without_replication_combinations.xlsx\") as writer:\n#     combinations.to_excel(writer, sheet_name = \"Countries\", index = False)","6267d2c0":"formula=\"Q('Negative affect') ~ Q('Country name') + C(year)\"\nlinear_2f_model = ols(formula, data=dfsin).fit()\naov_table = sm.stats.anova_lm(linear_2f_model, typ=2)\naov_table","6138faca":"oneway2021 = df2021.copy()\noneway = df.copy()","2fbec1ae":"oneway = oneway[oneway[\"year\"] == 2020][[\"Country name\",\"Life Ladder\",\"Freedom to make life choices\"]]\noneway2021 = oneway2021[[\"Country name\",\"Regional indicator\"]]","b9ac05ee":"display(oneway)\ndisplay(oneway2021)","90a69b51":"joined_one_way = pd.merge(oneway,oneway2021, how = \"left\", on = \"Country name\"); joined_one_way","c473c418":"# with pd.ExcelWriter(\"ANOVA_one_way.xlsx\") as writer:\n#     joined_one_way.to_excel(writer, sheet_name = \"Countries\", index = False)","14322f0d":"joined_one_way[\"Regional indicator\"].value_counts()","97c9b86c":"sns.boxplot(x = joined_one_way[\"Regional indicator\"], y = joined_one_way[\"Life Ladder\"])\nplt.xticks(fontsize=14, rotation = 68)\nplt.xlabel(\"\")","15cf232f":"formula_anova = \"Q('Life Ladder') ~ Q('Regional indicator')\"\nlinear_1f_model = ols(formula_anova, data=joined_one_way).fit()\nanova_table = sm.stats.anova_lm(linear_1f_model, typ=1)\nanova_table","768b95c5":"paired_test = linear_1f_model.t_test_pairwise(\"Q('Regional indicator')\")\npaired_test.result_frame","2cca929c":"g1 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Central and Eastern Europe\"][\"Life Ladder\"]\ng2 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Latin America and Caribbean\"][\"Life Ladder\"]\ng3 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"North America and ANZ\"][\"Life Ladder\"]\ng4 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Western Europe\"][\"Life Ladder\"]\ng5 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Middle East and North Africa\"][\"Life Ladder\"]\ng6 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"South Asia\"][\"Life Ladder\"]\ng7 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Sub-Saharan Africa\"][\"Life Ladder\"]\ng8 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Southeast Asia\"][\"Life Ladder\"]\ng9 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"East Asia\"][\"Life Ladder\"]\ng10 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Commonwealth of Independent States\"][\"Life Ladder\"]","de2236ab":"levene(g1,g2,g3,g4,g5,g6,g7,g8,g9,g10)","8fed6394":"sns.boxplot(x = joined_one_way[\"Regional indicator\"], y = joined_one_way[\"Freedom to make life choices\"])\nplt.xticks(fontsize=14, rotation = 68)\nplt.xlabel(\"\")","091d8418":"formula_anova = \"Q('Freedom to make life choices') ~ Q('Regional indicator')\"\nlinear_1f_model = ols(formula_anova, data=joined_one_way).fit()\nanova_table = sm.stats.anova_lm(linear_1f_model, typ=1)\nanova_table","34f1d983":"paired_test = linear_1f_model.t_test_pairwise(\"Q('Regional indicator')\")\npaired_test.result_frame","9026e5f0":"g1 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Central and Eastern Europe\"][\"Freedom to make life choices\"]\ng2 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Latin America and Caribbean\"][\"Freedom to make life choices\"]\ng3 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"North America and ANZ\"][\"Freedom to make life choices\"]\ng4 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Western Europe\"][\"Freedom to make life choices\"]\ng5 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Middle East and North Africa\"][\"Freedom to make life choices\"]\ng6 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"South Asia\"][\"Freedom to make life choices\"]\ng7 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Sub-Saharan Africa\"][\"Freedom to make life choices\"]\ng8 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Southeast Asia\"][\"Freedom to make life choices\"]\ng9 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"East Asia\"][\"Freedom to make life choices\"]\ng10 = joined_one_way[joined_one_way[\"Regional indicator\"] == \"Commonwealth of Independent States\"][\"Freedom to make life choices\"].dropna()","1e9590e8":"levene(g1,g2,g3,g4,g5,g6,g7,g8,g9,g10)","aa2b8ef9":"## Ladder Score","d8441b45":"## Freedom to make life choices","03f8da03":"### Quick description df2021\nNothing seems to be wrong.","0f30c624":"### ANOVA one way (Freedom to make life choices)\nAt a confidence leve of 95% we reject null hyphotesis; in other words, Freedom to make life choices depends on where you live. ","e6f371b3":"#### Hyperparameter tunning\nFor the sake of training a good model, I have decided to do a parameter tunning prior to actually run and train a model.","1be933da":"## Social Support","1568c639":"#### Conclusions\n\nWhile trying to solve normality distribution I encountered a new problem: As I dropped influential points, heterocedasticity encreases. I gave up 9 countries during this process. I should go for another option: Tree regression. As a matter of the fact, MSE is 9.821. May a tree improve this result?","ac713361":"#### Join databases\n\nI will work with 2020 data. 2021 dataset includes _Regional indicator_ which will serve as a nominal variable (useful to make groups). That is why I need to joined both datasets by means of a left join.  ","9008c5a6":"# Introduction\nCovid 19 has shown us how sensitive our emotional stability may be. Regardless our nationality, our occupation or even to which socioeconomical class we belong to, catastrophic events such as a pandemic can influenced our behaviour and the way we perceive our feelings, not to mention our life expectancy. \n\nThe following research was born due to a scholar final project. Through this paper, I am going to tackle mainly 4 points:}\n\n1. __Can we predict life expectancy taking into account our perceptions?__\n\n2. __Has Covid 19 LockDown increased sentiments such as worry, sadness and anger?__\n\n3. __Depending on the place we live, Has Covid 19 lockdown encreased\/decreased our perception of satisfaction?__\n\n4. __Depending on the place we live, Has Covid 19 lockdown made us feel less free to make life choices?__","317c00c1":"### Linear Model","867eb6ea":"Let's drop them","e9c7f88c":"These countries don't have either 2019 or 2020 values. Hence I must remove them. ","c51a431b":"From what I see, I will only use 3 of them","def5610d":"## One-way ANOVA \/ ANOVA one factor: What about Ladder score and Freedom to make life choices?","27387a38":"## Tree regression: Do later variables help to predict life expectancy?","d069ecd1":"![image.png](attachment:3c590cb4-c4c4-4470-bc5b-94f218db041b.png)","3e563900":"## Two-way ANOVA without replication\/ ANOVA two factors without replication (EXCEL): Has COVID 19 lockdown impacted our perception of happiness?","a6942187":"df2021 has no missing values.","d63e38b4":"#### First model","965bd697":"la heterocedasticidad del modelo, lo cu\u00e1l no incluye por defecto el resumen de statsmodels. Para este caso, incluir\u00e9 el __test de White__. \n\n>>>>> Ho: No hay presencia de heterocedasticidad vs Ha: Hay presencia de heretocedasticidad","aa61e85b":"#### Predictions\n\nI can make use of df data to test how well my model works. Data is to be longitudinal and might not present relevant differences, neither predictions. Hence I will only use data from 2020.","f490e95a":"### Correlation visualization\n\nAccording to the following Heatmap, we notice _Ladder score_ outnumbers the variables having a strong linear correlation compared to Life expectancy. This may suggest another model to work with.","b24fdb75":"### Import data\n\nData was imported from [Kaggle](https:\/\/www.kaggle.com\/ajaypalsinghlo\/world-happiness-report-2021).\n\nFor a better understanding visit [Gallup World Poll](https:\/\/www.gallup.com\/analytics\/349487\/gallup-global-happiness-center.aspx). \n\nVaraible description can be read on [this PDF](https:\/\/happiness-report.s3.amazonaws.com\/2021\/Appendix1WHR2021C2.pdf).\n\nSimultaneously, WHP website provides their [references](https:\/\/happiness-report.s3.amazonaws.com\/2021\/Appendix2WHR2021C2.pdf) from where they selectioned their sources of information used to deploy the data that I am going to work with. \n\nFrequently asked Questions can be found [here](https:\/\/worldhappiness.report\/faq\/).\n\nWorld Happiness Report is a benchmark for societal health largely used by many companies and goverments all around the world. 2021 edition was mainly focus on Coronavirus impact during 2021 according to WHR's metrics: \"In particular, we try to explain why some countries have done so much better than others.\"\n\n1. __df2021__: Dataset containing worldwide metrics of 2021.\n2. __df__: Dataset containing metrics from  a period of time depending on the country.","78659634":"We fail to reject null hyphotesis and we have equal of variances statistically wise.","09d18436":"#### Levene","95e189a3":"#### Conclusions","42934d21":"#### Third model\nDropping _Ladder score_ lead to a worst model.","b749afd1":"## Healthy life expectancy","371eaaf8":"Since Linear Regression has lower MSE compared to Tree regression, I would opt for Linear Regression. Plus its simplicity makes it the most suitable to interpret and to explain. ","7e046491":"Select positive and negative affect from 2019 to 2020. Recall that I want to make this two periods of time a nominal variable, so they will represent \"After\" and \"Before\" rather than years per se. Something similar happens to be when one wants to do a Wilcoxon\/Mann-Whitney test but in contrast one uses ordinal data.  ","97431ff7":"#### Can second model be improved by removing influential points?\nLet's try to solve the normality distribution issue using Cook's Distance.","5cdb895c":"#### Combinations Scheff\u00e9","ddb1f584":"#### ANOVA significance","e6d2b991":"<h1><center>IMPACT OF COVID-19 AND LOCKDOWN ON OUR PERCEPTION\/LIFE EXPECTANCY:WORLD HAPPINESS REPORT<\/center><\/h1>\n\n__Author__: David Monta\u00f1o Castro.\n\n__University__: Universidad Nacional Aut\u00f3noma de M\u00e9xico.","0b481f7c":"### Variable definitions","71ceb7a6":"### ANOVA one way (Ladder Life)\nAt a confidence leve of 95% we reject null hyphotesis; in other words, Life Ladder depends on where you live. ","56c7cbf5":"First model (all variables) fits well since R-squared adjusted describe 75% of variance. As per variable selection, most of them are statistically 0 at a cofidence level of 95%. Those variables can be dropped; the rest might improve the results by creating a new model. Since JB test rejects Null hypothesis, we have no normality distribution of residuals. Aside from that everything seems to work.","6b9a5dc4":"The same results were obtained in Excel. Since both Countries and years p-values are less than .05, we reject null hyphotesis. That is, countries and years have differences. In the awake of these conclutions, we can state that at a confidence leven of 95%, Countries are not homogenous but most important, we conclude that covid-19 lockdown encreases our perception of \"Negative affect\" given that means are not statisticalle equal.","8c53fde9":"#### ANOVA significance","a9b48f92":"#### Ad hoc","cf1bc530":"## Perception of corruption","ef8e8645":"We fail to reject null hyphotesis and we have equal of variances statistically wise.","a96c5c8f":"#### Sub-data","ac084d11":"# Real Analysis","ae0454a2":"#### Number of countries for each cluster\nUnfortunately I have unbalance data that implies I cannot carry out a __ANOVA-twofactors with replications__. ANOVA one way tolerates this unbalance.\n","839f0ad0":"- __Ladder Score__ or Happiness Score: \u201cPlease imagine a ladder, with steps numbered from 0 at the bottom to 10 at the top. The top of the ladder represents the best possible life for you and the bottom of the ladder represents the worst possible life for you. On which step of the ladder would you say you personally feel you stand at this time?\u201d.\n\n- __Log GDP per capita__: It is the total monetary or market value of all the finished goods and services produced within a country\u2019s borders in a specific time period.\n\n- __Healthy life expectancy__: Based on the data extracted from the World Health Organization\u2019s (WHO)\n\n- __Social Suport__: \u201cIf you were in trouble, do you have relatives or friends you can count on to help you whenever you need them, or not?\u201d.\n\n- __Freedom to make life choices__: \u201cAre you satisfied or dissatisfied with your freedom to choose what you do with your life?\u201d\n\n- __Generosity__: \u201cHave you donated money to a charity in the past month?\u201d on GDP per capita.\n\n- __Corruption Perception__: \u201cIs corruption widespread throughout the government or not\u201d and \u201cIs corruption widespread within businesses or not?\u201d\n\n- __Positive Affect__: \u201cDid you experience the following feelings during A LOT OF THE DAY yesterday? How about Happiness?\u201d, \u201cDid you smile or laugh a lot yesterday?\u201d, and \u201cDid you experience the following feelings during A LOT OF THE DAY yesterday? How about Enjoyment?\u201d\n\n- __Negative affect__: \u201cDid you experience the following feelings during A LOT OF THE DAY yesterday? How about Worry?\u201d, \u201cDid you experience the following feelings during A LOT OF THE DAY yesterday? How about Sadness?\u201d, and \u201cDid you experience the following feelings during A LOT OF THE DAY yesterday? How about Anger?\u201d\n\n- __Year__: In addition, we count with longitudinal data from countries selected. ","e4df5618":"Most of missing data in __df__ is located on Perceptions of corruption column just as PDF says. Regarless this lack of data I won't drop any tuple until I get to work on it. ","fd2409ac":"## Generosity","2ff5fb9a":"#### Fittng model","29ae5cdb":"### Dropping columns ","c01443fb":"As per __df2021__, there are certain variables which I consider will not be useful for my analysis. A major description of these variables can be found on the PDF refered before. Having taken into accound this, I will only selected varibles from __df__ to homogenalize both datasets. In other words, I will drop:\n\n- _Explained by:_  columns: Since GWP doesn't imput missing data, they have created these columns. \"We do not make use of any imputed missing values in our rankings of happiness and its supporting factors. The only place where we make use of imputation is when we try to decompose a country\u2019s average ladder score into components explained by six hypothesized underlying determinants (GDP per person, healthy life expectancy, social support, perceived freedom to make life choice, generosity and perception of corruption)\".\n\n- _Standard error of ladder score_, _upperwhisker_ and _lowerwhisker_: Used to make confident intervals for descriptive analysis. For this analysis may not be useful or at least it is not the kind of analysis requiered.\n\n- _Ladder score in Dystopia_, _Dystopia + residual_: Kaggle reports: \"Dystopia, a hypothetical country that has values equal to the world\u2019s lowest national averages for each of the six factors\". Dystopia won't be used for the present analysis. ","a08259e0":"#### Levene\n![image.png](attachment:77f2db9a-4128-4e24-b9e0-582cf35848e2.png)","f64b888f":"#### Ad hoc","2ec5d7f3":"For a deeper analysis, go check ANOVA_two_factors excel file.","2090c6d3":"# Descriptive Analysis (2021)","ac722c83":"### Two way ANOVA (Negative affect)\n![image.png](attachment:ec850bd1-a989-438b-9098-4e9fbe641f11.png)\n","d1f93591":"#### Predictions","dc8fd19e":"### Missing data","2eb7f86c":"## Linear regression: Do latter variables help to predict life expectancy?","4a20e3aa":"#### Feature selection\nFrom the past feature selection, I realized there exist some variables whose variance explanatory power is weak. To avert waste of time creating a well-known useless model, Python provides a tool to carry out feature selection easear which I wil use.","1a6be302":"#### Second model\n\nSecond model does improve after removing no significant variables; however, residuals still have non-normality distribution. "}}