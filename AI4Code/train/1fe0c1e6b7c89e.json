{"cell_type":{"68ff61ac":"code","1873c304":"code","1c1aff8a":"code","89c9082d":"code","a67f7e72":"code","028f3dcb":"code","6d8f2d85":"code","f8dbe937":"code","4c84b250":"code","fd587360":"code","77c9cb01":"code","244fa5ba":"code","53257e1d":"code","ca675299":"code","bcb277e9":"code","0021447b":"markdown","f817514d":"markdown","97adcdbb":"markdown","db2cf5fe":"markdown","e4166f01":"markdown","847709e0":"markdown","5ff3d3d0":"markdown","406e816e":"markdown"},"source":{"68ff61ac":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom keras.models import Sequential\nfrom keras.optimizers import RMSprop\nfrom keras.utils.np_utils import to_categorical\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D","1873c304":"train_df = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntrain_df.head()","1c1aff8a":"x_train = train_df.drop(labels = ['label'], axis = 1)","89c9082d":"y_train = train_df['label']\nsns.countplot(y_train)","a67f7e72":"x_train = x_train.values.reshape(-1, 28, 28, 1)\nx_train = x_train \/ 255.0","028f3dcb":"y_train = to_categorical(y_train, num_classes = 10)","6d8f2d85":"plt.imshow(x_train[0][:,:,0])","f8dbe937":"model = Sequential()\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu', input_shape = (28,28,1)))\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.5))\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\nmodel.add(Dropout(0.5))\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = \"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation = \"softmax\"))\n\noptimizer = RMSprop(lr=0.01)\n\nmodel.compile(optimizer = optimizer , loss = \"categorical_crossentropy\", metrics = [\"accuracy\"])\n\nmodel.summary()","4c84b250":"EPOCHS = 5\nBATCH_SIZE = 64\nmodel.fit(x_train, y_train, epochs = EPOCHS, batch_size = BATCH_SIZE)","fd587360":"test_df = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest_df.head()","77c9cb01":"x_test = test_df.values.reshape(-1, 28, 28, 1)\nx_test = x_test \/ 255.0","244fa5ba":"y_test = model.predict(x_test)","53257e1d":"y_test = [np.argmax(y_test_) for y_test_ in y_test]","ca675299":"sub = pd.DataFrame({'ImageId':[i + 1 for i in range(len(y_test))], 'Label':y_test})\nsub.head()","bcb277e9":"sub.to_csv('.\/submission.csv', index = False)","0021447b":"**Read dataset**","f817514d":"**Predict the answer**","97adcdbb":"**Preprocess data**","db2cf5fe":"**Build a model**","e4166f01":"**Preprocess data**","847709e0":"# **DigitRecognizer using CNN**","5ff3d3d0":"**Read dataset**","406e816e":"**Learn in a CNN**"}}