{"cell_type":{"f4ea58a1":"code","e9b0589a":"code","1173a107":"code","d76f2d7e":"code","a1ec2325":"markdown"},"source":{"f4ea58a1":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nimport os\nimport random\n\nRUNNING_ON_KERNELS = 'KAGGLE_WORKING_DIR' in os.environ\ninput_dir = '..\/input' if RUNNING_ON_KERNELS else '..\/input\/movielens_preprocessed'\nratings_path = os.path.join(input_dir, 'rating.csv')\ndf = pd.read_csv(ratings_path, usecols=['userId', 'movieId', 'rating', 'y'])\n\ntf.set_random_seed(1); np.random.seed(1); random.seed(1)","e9b0589a":"movie_embedding_size = user_embedding_size = 8\nuser_id_input = keras.Input(shape=(1,), name='user_id')\nmovie_id_input = keras.Input(shape=(1,), name='movie_id')\n\nmovie_r12n = keras.regularizers.l1_l2(l1=0, l2=1e-6)\nuser_r12n = keras.regularizers.l1_l2(l1=0, l2=1e-7)\nuser_embedded = keras.layers.Embedding(df.userId.max()+1, user_embedding_size,\n                                       embeddings_regularizer=user_r12n,\n                                       input_length=1, name='user_embedding')(user_id_input)\nmovie_embedded = keras.layers.Embedding(df.movieId.max()+1, movie_embedding_size, \n                                        embeddings_regularizer=movie_r12n,\n                                        input_length=1, name='movie_embedding')(movie_id_input)\n\ndotted = keras.layers.Dot(2)([user_embedded, movie_embedded])\nout = keras.layers.Flatten()(dotted)\n\nl2_model = keras.Model(\n    inputs = [user_id_input, movie_id_input],\n    outputs = out,\n)\nl2_model.compile(\n    tf.train.AdamOptimizer(0.005),\n    loss='MSE',\n    metrics=['MAE', 'MSE'],\n)\nl2_model.summary(line_length=88)","1173a107":"l2_model.fit(\n    [df.userId, df.movieId],\n    df.y,\n    batch_size=10**4,\n    epochs=10,\n    verbose=2,\n    validation_split=.05,\n);","d76f2d7e":"l2_model.save('movie_svd_model_8_r12n.h5')","a1ec2325":"The model trained in this notebook is used in exercise 2 of the embeddings course (matrix factorization). It's identical to the matrix factorization model we train in [tutorial 2](https:\/\/www.kaggle.com\/colinmorris\/matrix-factorization), except that it adds some L2 regularization to our movie and user embeddings."}}