{"cell_type":{"a53fd4ed":"code","f49b5bd3":"code","b8e174fd":"code","f371f195":"code","ef57e367":"code","808c03c5":"code","a52c3e15":"code","c72cc8cc":"code","2578007c":"code","6ccb938e":"code","5e73edbe":"code","8643f125":"markdown","d8e4c459":"markdown","b3c28b5a":"markdown","bb723ac9":"markdown","bf20637f":"markdown","f44255c5":"markdown","c731e9f0":"markdown","17ef9ed3":"markdown","ec5c6eb0":"markdown","95bb6aef":"markdown","f8c25c49":"markdown","ea199cdb":"markdown","472b28eb":"markdown"},"source":{"a53fd4ed":"!pip install d2l > d2l_install.out\n%matplotlib inline\nimport torch\nimport torchvision\nfrom torch.utils import data\nfrom torchvision import transforms\nfrom d2l import torch as d2l\n\nd2l.use_svg_display()\n","f49b5bd3":"# \u901a\u8fc7ToTensor\u5b9e\u4f8b\u5c06\u56fe\u50cf\u6570\u636e\u4ecePIL\u7c7b\u578b\u53d8\u6362\u621032\u4f4d\u6d6e\u70b9\u6570\u683c\u5f0f\n# \u5e76\u9664\u4ee5255\u4f7f\u5f97\u6240\u6709\u50cf\u7d20\u7684\u6570\u503c\u5747\u57280\u52301\u4e4b\u95f4\ntrans = transforms.ToTensor()\nmnist_train = torchvision.datasets.FashionMNIST(root=\"..\/data\", train=True,\n                                                transform=trans,\n                                                download=True)\nmnist_test = torchvision.datasets.FashionMNIST(root=\"..\/data\", train=False,\n                                               transform=trans, download=True)","b8e174fd":"len(mnist_train), len(mnist_test)","f371f195":"mnist_train[0][0].shape","ef57e367":"def get_fashion_mnist_labels(labels):  #@save\n    \"\"\"\u8fd4\u56deFashion-MNIST\u6570\u636e\u96c6\u7684\u6587\u672c\u6807\u7b7e\u3002\"\"\"\n    text_labels = [\n        't-shirt', 'trouser', 'pullover', 'dress', 'coat', 'sandal', 'shirt',\n        'sneaker', 'bag', 'ankle boot']\n    return [text_labels[int(i)] for i in labels]","808c03c5":"def show_images(imgs, num_rows, num_cols, titles=None, scale=1.5):  #@save\n    \"\"\"Plot a list of images.\"\"\"\n    figsize = (num_cols * scale, num_rows * scale)\n    _, axes = d2l.plt.subplots(num_rows, num_cols, figsize=figsize)\n    axes = axes.flatten()\n    for i, (ax, img) in enumerate(zip(axes, imgs)):\n        if torch.is_tensor(img):\n            # \u56fe\u7247\u5f20\u91cf\n            ax.imshow(img.numpy())\n        else:\n            # PIL\u56fe\u7247\n            ax.imshow(img)\n        ax.axes.get_xaxis().set_visible(False)\n        ax.axes.get_yaxis().set_visible(False)\n        if titles:\n            ax.set_title(titles[i])\n    return axes","a52c3e15":"X, y = next(iter(data.DataLoader(mnist_train, batch_size=18)))\nshow_images(X.reshape(18, 28, 28), 2, 9, titles=get_fashion_mnist_labels(y));","c72cc8cc":"batch_size = 256\n\ndef get_dataloader_workers():  #@save\n    \"\"\"\u4f7f\u75284\u4e2a\u8fdb\u7a0b\u6765\u8bfb\u53d6\u7684\u6570\u636e\u3002\"\"\"\n    return 8\n\ntrain_iter = data.DataLoader(mnist_train, batch_size, shuffle=True,\n                             num_workers=get_dataloader_workers())","2578007c":"timer = d2l.Timer()\nfor X, y in train_iter:\n    continue\nf'{timer.stop():.2f} sec'","6ccb938e":"def load_data_fashion_mnist(batch_size, resize=None):  #@save\n    \"\"\"\u4e0b\u8f7dFashion-MNIST\u6570\u636e\u96c6\uff0c\u7136\u540e\u5c06\u5176\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\"\"\"\n    trans = [transforms.ToTensor()]\n    if resize:\n        trans.insert(0, transforms.Resize(resize))\n    trans = transforms.Compose(trans)\n    mnist_train = torchvision.datasets.FashionMNIST(root=\"..\/data\",\n                                                    train=True,\n                                                    transform=trans,\n                                                    download=True)\n    mnist_test = torchvision.datasets.FashionMNIST(root=\"..\/data\",\n                                                   train=False,\n                                                   transform=trans,\n                                                   download=True)\n    return (data.DataLoader(mnist_train, batch_size, shuffle=True,\n                            num_workers=get_dataloader_workers()),\n            data.DataLoader(mnist_test, batch_size, shuffle=False,\n                            num_workers=get_dataloader_workers()))","5e73edbe":"train_iter, test_iter = load_data_fashion_mnist(32, resize=64)\nfor X, y in train_iter:\n    print(X.shape, X.dtype, y.shape, y.dtype)\n    break","8643f125":"Fashion-MNIST\u4e2d\u5305\u542b\u768410\u4e2a\u7c7b\u522b\u5206\u522b\u4e3at-shirt\uff08T\u6064\uff09\u3001trouser\uff08\u88e4\u5b50\uff09\u3001pullover\uff08\u5957\u886b\uff09\u3001dress\uff08\u8fde\u8863\u88d9\uff09\u3001coat\uff08\u5916\u5957\uff09\u3001sandal\uff08\u51c9\u978b\uff09\u3001shirt\uff08\u886c\u886b\uff09\u3001sneaker\uff08\u8fd0\u52a8\u978b\uff09\u3001bag\uff08\u5305\uff09\u548cankle boot\uff08\u77ed\u9774\uff09\u3002\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u6570\u5b57\u6807\u7b7e\u7d22\u5f15\u53ca\u5176\u6587\u672c\u540d\u79f0\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\n","d8e4c459":"\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u6765\u53ef\u89c6\u5316\u8fd9\u4e9b\u6837\u672c\u3002\n","b3c28b5a":"[Discussions](https:\/\/discuss.d2l.ai\/t\/1787)\n","bb723ac9":"\u6bcf\u4e2a\u8f93\u5165\u56fe\u50cf\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u5747\u4e3a 28 \u50cf\u7d20\u3002\u6570\u636e\u96c6\u7531\u7070\u5ea6\u56fe\u50cf\u7ec4\u6210\uff0c\u5176\u901a\u9053\u6570\u4e3a1\u3002\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u9ad8\u5ea6$h$\u50cf\u7d20\uff0c\u5bbd\u5ea6$w$\u50cf\u7d20\u56fe\u50cf\u7684\u5f62\u72b6\u8bb0\u4e3a$h \\times w$\u6216($h$, $w$)\u3002\n","bf20637f":"\u4ee5\u4e0b\u662f\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u524d\u51e0\u4e2a\u6837\u672c\u7684\u56fe\u50cf\u53ca\u5176\u76f8\u5e94\u7684\u6807\u7b7e\uff08\u6587\u672c\u5f62\u5f0f\uff09\u3002\n","f44255c5":"\u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u6307\u5b9a`resize`\u53c2\u6570\u6765\u6d4b\u8bd5`load_data_fashion_mnist`\u51fd\u6570\u7684\u56fe\u50cf\u5927\u5c0f\u8c03\u6574\u529f\u80fd\u3002\n","c731e9f0":"## \u6574\u5408\u6240\u6709\u7ec4\u4ef6\n\n\u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e86 `load_data_fashion_mnist` \u51fd\u6570\uff0c\u7528\u4e8e\u83b7\u53d6\u548c\u8bfb\u53d6Fashion-MNIST\u6570\u636e\u96c6\u3002\u5b83\u8fd4\u56de\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6570\u636e\u8fed\u4ee3\u5668\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u7528\u6765\u5c06\u56fe\u50cf\u5927\u5c0f\u8c03\u6574\u4e3a\u53e6\u4e00\u79cd\u5f62\u72b6\u3002\n","17ef9ed3":"## \u8bfb\u53d6\u6570\u636e\u96c6\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6846\u67b6\u4e2d\u7684\u5185\u7f6e\u51fd\u6570\u5c06 Fashion-MNIST \u6570\u636e\u96c6\u4e0b\u8f7d\u5e76\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\u3002\n","ec5c6eb0":"## \u8bfb\u53d6\u5c0f\u6279\u91cf\n\n\u4e3a\u4e86\u4f7f\u6211\u4eec\u5728\u8bfb\u53d6\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u65f6\u66f4\u5bb9\u6613\uff0c\u6211\u4eec\u4f7f\u7528\u5185\u7f6e\u7684\u6570\u636e\u8fed\u4ee3\u5668\uff0c\u800c\u4e0d\u662f\u4ece\u96f6\u5f00\u59cb\u521b\u5efa\u4e00\u4e2a\u3002\n\u56de\u987e\u4e00\u4e0b\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6570\u636e\u52a0\u8f7d\u5668\u6bcf\u6b21\u90fd\u4f1a\u8bfb\u53d6\u4e00\u5c0f\u6279\u91cf\u6570\u636e\uff0c\u5927\u5c0f\u4e3a`batch_size`\u3002\u6211\u4eec\u5728\u8bad\u7ec3\u6570\u636e\u8fed\u4ee3\u5668\u4e2d\u8fd8\u968f\u673a\u6253\u4e71\u4e86\u6240\u6709\u6837\u672c\u3002\n","95bb6aef":"# \u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\n:label:`sec_fashion_mnist`\n\n\u76ee\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\u4e4b\u4e00\u662f MNIST \u6570\u636e\u96c6 :cite:`LeCun.Bottou.Bengio.ea.1998`\u3002\u867d\u7136\u5b83\u662f\u5f88\u4e0d\u9519\u7684\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u4f46\u6309\u4eca\u5929\u7684\u6807\u51c6\uff0c\u5373\u4f7f\u662f\u7b80\u5355\u7684\u6a21\u578b\u4e5f\u80fd\u8fbe\u523095%\u4ee5\u4e0a\u7684\u5206\u7c7b\u51c6\u786e\u7387\uff0c\u56e0\u6b64\u4e0d\u9002\u5408\u533a\u5206\u5f3a\u6a21\u578b\u548c\u5f31\u6a21\u578b\u3002\u5982\u4eca\uff0cMNIST\u66f4\u50cf\u662f\u4e00\u4e2a\u5065\u5168\u68c0\u67e5\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u57fa\u51c6\u3002\n\u4e3a\u4e86\u63d0\u9ad8\u96be\u5ea6\uff0c\u6211\u4eec\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\u8ba8\u8bba\u57282017\u5e74\u53d1\u5e03\u7684\u6027\u8d28\u76f8\u4f3c\u4f46\u76f8\u5bf9\u590d\u6742\u7684Fashion-MNIST\u6570\u636e\u96c6 :cite:`Xiao.Rasul.Vollgraf.2017`\u3002\n","f8c25c49":"Fashion-MNIST \u7531 10 \u4e2a\u7c7b\u522b\u7684\u56fe\u50cf\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7c7b\u522b\u7531\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u7684 6000 \u5f20\u56fe\u50cf\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u4e2d\u7684 1000 \u5f20\u56fe\u50cf\u7ec4\u6210\u3002*\u6d4b\u8bd5\u6570\u636e\u96c6*\uff08test dataset\uff09\u4e0d\u4f1a\u7528\u4e8e\u8bad\u7ec3\uff0c\u53ea\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\u3002\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u522b\u5305\u542b 60000 \u548c 10000 \u5f20\u56fe\u50cf\u3002\n","ea199cdb":"\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8bfb\u53d6\u8bad\u7ec3\u6570\u636e\u6240\u9700\u7684\u65f6\u95f4\u3002\n","472b28eb":"\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u5728\u4e0b\u9762\u7684\u7ae0\u8282\u4e2d\u4f7f\u7528Fashion-MNIST\u6570\u636e\u96c6\u3002\n\n## \u5c0f\u7ed3\n\n* Fashion-MNIST\u662f\u4e00\u4e2a\u670d\u88c5\u5206\u7c7b\u6570\u636e\u96c6\uff0c\u753110\u4e2a\u7c7b\u522b\u7684\u56fe\u50cf\u7ec4\u6210\u3002\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u4f7f\u7528\u6b64\u6570\u636e\u96c6\u6765\u8bc4\u4f30\u5404\u79cd\u5206\u7c7b\u7b97\u6cd5\u3002\n* \u6211\u4eec\u5c06\u9ad8\u5ea6$h$\u50cf\u7d20\uff0c\u5bbd\u5ea6$w$\u50cf\u7d20\u56fe\u50cf\u7684\u5f62\u72b6\u8bb0\u4e3a$h \\times w$\u6216($h$, $w$)\u3002\n* \u6570\u636e\u8fed\u4ee3\u5668\u662f\u83b7\u5f97\u66f4\u9ad8\u6027\u80fd\u7684\u5173\u952e\u7ec4\u4ef6\u3002\u4f9d\u9760\u5b9e\u73b0\u826f\u597d\u7684\u6570\u636e\u8fed\u4ee3\u5668\uff0c\u5229\u7528\u9ad8\u6027\u80fd\u8ba1\u7b97\u6765\u907f\u514d\u51cf\u6162\u8bad\u7ec3\u8fc7\u7a0b\u3002\n\n## \u7ec3\u4e60\n\n1. \u51cf\u5c11 `batch_size`\uff08\u5982\u51cf\u5c11\u5230 1\uff09\u662f\u5426\u4f1a\u5f71\u54cd\u8bfb\u53d6\u6027\u80fd\uff1f\n1. \u6570\u636e\u8fed\u4ee3\u5668\u7684\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002\u4f60\u8ba4\u4e3a\u5f53\u524d\u7684\u5b9e\u73b0\u8db3\u591f\u5feb\u5417\uff1f\u63a2\u7d22\u5404\u79cd\u9009\u62e9\u6765\u6539\u8fdb\u5b83\u3002\n1. \u67e5\u9605\u6846\u67b6\u7684\u5728\u7ebfAPI\u6587\u6863\u3002\u8fd8\u6709\u54ea\u4e9b\u5176\u4ed6\u6570\u636e\u96c6\u53ef\u7528\uff1f\n"}}