{"cell_type":{"e52ea64b":"code","dbb9ff43":"code","1ff65edf":"code","28cbac4b":"code","1f45d123":"code","a9bcf6c9":"code","780e10b8":"code","30670e77":"code","5b457a89":"code","6343741b":"code","c7e854a9":"code","55cda9bb":"code","fea181c8":"code","22d7a9b4":"code","a350b75a":"code","49448afb":"code","fc1f0179":"code","b69c6739":"code","a54e42ed":"code","9b7eb4e2":"markdown","0c306224":"markdown","23e7a202":"markdown"},"source":{"e52ea64b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, accuracy_score\nfrom sklearn.metrics import roc_auc_score, roc_curve, confusion_matrix\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dbb9ff43":"import pandas as pd\nsubmission = pd.read_csv(\"..\/input\/cat-in-the-dat\/sample_submission.csv\")\ntest = pd.read_csv(\"..\/input\/cat-in-the-dat\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/cat-in-the-dat\/train.csv\")\ntrain.head(10).T","1ff65edf":"print(test.shape)\nprint(train.shape)","28cbac4b":"train['bin_3'] = train['bin_3'].replace(to_replace=['T', 'F'], value=['1', '0']).astype(int)\ntrain['bin_4'] = train['bin_4'].replace(to_replace=['Y', 'N'], value=['1', '0']).astype(int)\n\ntest['bin_3'] = test['bin_3'].replace(to_replace=['T', 'F'], value=['1', '0']).astype(int)\ntest['bin_4'] = test['bin_4'].replace(to_replace=['Y', 'N'], value=['1', '0']).astype(int)","1f45d123":"train.head(3)","a9bcf6c9":"nom_cols = ['nom_0', 'nom_1', 'nom_2', 'nom_3', 'nom_4', 'nom_5', 'nom_6', 'nom_7', 'nom_8', 'nom_9']\n\nfor i in nom_cols:\n    print('The nimber of unique values in {} columns is : {}'.format(i, train[i].nunique()))","780e10b8":"ord_col = [ 'ord_0', 'ord_1', 'ord_2', 'ord_3', 'ord_4', 'ord_5'] \n\nfor i in ord_col:\n    print('The number of unique in {} columns is: {}'.format(i, train[i].nunique()))","30670e77":"target = train['target']\ntrain_id = train['id']\ntest_id = test['id']\n\ntrain.drop(['target', 'id'], axis=1, inplace=True)\ntest.drop('id', axis=1, inplace=True)\n\nprint(train.shape)\nprint(test.shape)","5b457a89":"sns.countplot(target)\nplt.title(\"labels counts\")\nplt.show()","6343741b":"data = pd.concat([train, test])","c7e854a9":"columns = [i for i in data.columns]\ndummies = pd.get_dummies(data,columns=columns, drop_first=True,sparse=True)","55cda9bb":"train = dummies.iloc[:train.shape[0], :]\ntest = dummies.iloc[train.shape[0]:, :]","fea181c8":"train = train.sparse.to_coo().tocsr()\ntest = test.sparse.to_coo().tocsr()","22d7a9b4":"X_train,X_test,y_train,y_test=train_test_split(train,target,random_state=42,test_size=0.3)","a350b75a":"import xgboost as xgb","49448afb":"params = {'n_estimators': 500,\n          'learning_rate': 0.1,\n          'max_depth': 5,\n          'min_child_weight': 1,\n          'subsample': 1,\n          'colsample_bytree': 1,\n          'n_jobs': -1}\nclf_xgb = xgb.XGBClassifier(**params)\n\nclf_xgb.fit(X_train, y_train, eval_metric='auc', eval_set=[(X_train, y_train), (X_test, y_test)])","fc1f0179":"predict = clf_xgb.predict(test)","b69c6739":"submission = pd.DataFrame({'id':test_id,'target':predict})\nsubmission.to_csv('submission.csv', index=False)","a54e42ed":"sub = pd.read_csv('submission.csv')\nsub","9b7eb4e2":"** Convert bin_3 & bin_4(T=1, F=0; Y=1,N=0)**","0c306224":"**Drop ID and target******","23e7a202":"### train_test_split"}}