{"cell_type":{"8f497424":"code","a35cbaaa":"code","f01f6572":"code","18b42c4c":"code","0dff3694":"code","f7fb8709":"code","5fb5ffb3":"code","89cdbf6c":"code","33c1ce86":"code","988e2bbc":"code","943c7165":"code","caf78296":"code","b6e4c83e":"code","85bf4943":"code","18c5d7dc":"code","7cf6e5a7":"code","652a1d6b":"code","606d3b9a":"code","13392ac6":"code","3bac8eda":"code","1f364da6":"code","a7b2e95f":"code","31e6b155":"code","13fcfa0a":"code","36ffbc60":"code","e872a3ea":"code","fbcae746":"code","3602230a":"code","218304b2":"code","7fdd44c1":"code","c05200c1":"code","8d0369ac":"code","a0e7d65c":"code","04bfccd8":"code","d2650708":"code","59df8acd":"code","c715c2f0":"code","a901d523":"code","a4927484":"code","4dc2ab13":"code","2c7b33af":"code","c1dbe404":"code","6fcc05ec":"code","c64edc6f":"code","ba7c468b":"code","9fa036ff":"code","683b54c6":"code","157391ce":"code","bf622b40":"code","f97435f7":"markdown","38dc6610":"markdown","db488410":"markdown","a9990edd":"markdown","597887a9":"markdown","8b3f252a":"markdown","83fa3b9b":"markdown","1549ecb2":"markdown","c1ef1ee8":"markdown","83f8dbb4":"markdown","9eecc055":"markdown","aee82f55":"markdown","0fc1ee76":"markdown","fe89a96c":"markdown","a4621a66":"markdown","77284061":"markdown","a4976e7c":"markdown","a8180437":"markdown","5cefffdb":"markdown","9ac81366":"markdown","5d1eaf69":"markdown","581e8116":"markdown","af15fbd5":"markdown","752b8839":"markdown","4e932ee4":"markdown","3c83818c":"markdown","91c8791e":"markdown","4efaa323":"markdown","66b865b9":"markdown","21fe04be":"markdown","1ad6ed81":"markdown","d90ed7ce":"markdown","9d3cdcb1":"markdown","d2b9e7f5":"markdown","5a65c8ed":"markdown","61ecea0e":"markdown","84970b76":"markdown","55a44a1f":"markdown","38f55549":"markdown","93d657bd":"markdown","b9cd7e17":"markdown","451ab3e3":"markdown","ae707eff":"markdown","b1c4932a":"markdown","341291ad":"markdown","5d1554d0":"markdown","5a074408":"markdown","bf875537":"markdown","4c9595e2":"markdown","777eb5ae":"markdown","543ce026":"markdown","998b1e63":"markdown","e61c9862":"markdown","9a56058e":"markdown","642837b8":"markdown","49053311":"markdown"},"source":{"8f497424":"import pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport spacy as spa\n\nimport warnings\nfrom collections import Counter\nimport datetime\nimport wordcloud\nimport json","a35cbaaa":"# Hiding warnings for cleaner display\nwarnings.filterwarnings('ignore')\n\n# Configuring some options\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\n# If you want interactive plots, uncomment the next line\n%matplotlib notebook","f01f6572":"df = pd.read_csv(\"..\/input\/USvideos.csv\")","18b42c4c":"PLOT_COLORS = [\"#268bd2\", \"#0052CC\", \"#FF5722\", \"#b58900\", \"#003f5c\"]\npd.options.display.float_format = '{:.2f}'.format\nsns.set(style=\"ticks\")\nplt.rc('figure', figsize=(8, 5), dpi=100)\nplt.rc('axes', labelpad=20, facecolor=\"#ffffff\", linewidth=0.4, grid=True, labelsize=14)\nplt.rc('patch', linewidth=0)\nplt.rc('xtick.major', width=0.2)\nplt.rc('ytick.major', width=0.2)\nplt.rc('grid', color='#9E9E9E', linewidth=0.4)\nplt.rc('font', family='Arial', weight='400', size=10)\nplt.rc('text', color='#282828')\nplt.rc('savefig', pad_inches=0.3, dpi=300)","0dff3694":"df.head()","f7fb8709":"df.info()","5fb5ffb3":"df[df[\"description\"].apply(lambda x: pd.isna(x))].head(3)","89cdbf6c":"df[\"description\"] = df[\"description\"].fillna(value=\"\")","33c1ce86":"cdf = df[\"trending_date\"].apply(lambda x: '20' + x[:2]).value_counts() \\\n            .to_frame().reset_index() \\\n            .rename(columns={\"index\": \"year\", \"trending_date\": \"No_of_videos\"})\n\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"year\", y=\"No_of_videos\", data=cdf, \n                palette=sns.color_palette(['#ff764a', '#ffa600'], n_colors=7), ax=ax)\n_ = ax.set(xlabel=\"Year\", ylabel=\"No. of videos\")","988e2bbc":"df[\"trending_date\"].apply(lambda x: '20' + x[:2]).value_counts(normalize=True)","943c7165":"df.describe()","caf78296":"fig, ax = plt.subplots()\n_ = sns.distplot(df[\"views\"], kde=False, color=PLOT_COLORS[4], \n                 hist_kws={'alpha': 1}, bins=np.linspace(0, 2.3e8, 47), ax=ax)\n_ = ax.set(xlabel=\"Views\", ylabel=\"No. of videos\", xticks=np.arange(0, 2.4e8, 1e7))\n_ = ax.set_xlim(right=2.5e8)\n_ = plt.xticks(rotation=90)","b6e4c83e":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"views\"] < 25e6][\"views\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Views\", ylabel=\"No. of videos\")","85bf4943":"df[df['views'] < 1e6]['views'].count() \/ df['views'].count() * 100","18c5d7dc":"plt.rc('figure.subplot', wspace=0.9)\nfig, ax = plt.subplots()\n_ = sns.distplot(df[\"likes\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, \n                 bins=np.linspace(0, 6e6, 61), ax=ax)\n_ = ax.set(xlabel=\"Likes\", ylabel=\"No. of videos\")\n_ = plt.xticks(rotation=90)","7cf6e5a7":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"likes\"] <= 1e5][\"likes\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Likes\", ylabel=\"No. of videos\")","652a1d6b":"df[df['likes'] < 4e4]['likes'].count() \/ df['likes'].count() * 100","606d3b9a":"fig, ax = plt.subplots()\n_ = sns.distplot(df[\"comment_count\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Comment Count\", ylabel=\"No. of videos\")","13392ac6":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"comment_count\"] < 200000][\"comment_count\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, \n                 bins=np.linspace(0, 2e5, 49), ax=ax)\n_ = ax.set(xlabel=\"Comment Count\", ylabel=\"No. of videos\")","3bac8eda":"df[df['comment_count'] < 4000]['comment_count'].count() \/ df['comment_count'].count() * 100","1f364da6":"df.describe(include = ['O'])","a7b2e95f":"grouped = df.groupby(\"video_id\")\ngroups = []\nwanted_groups = []\nfor key, item in grouped:\n    groups.append(grouped.get_group(key))\n\nfor g in groups:\n    if len(g['title'].unique()) != 1:\n        wanted_groups.append(g)\n\nwanted_groups[0]","31e6b155":"def contains_capitalized_word(s):\n    for w in s.split():\n        if w.isupper():\n            return True\n    return False\n\n\ndf[\"contains_capitalized\"] = df[\"title\"].apply(contains_capitalized_word)\n\nvalue_counts = df[\"contains_capitalized\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n           colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'}, startangle=45)\n_ = ax.axis('equal')\n_ = ax.set_title('Title Contains Capitalized Word?')","13fcfa0a":"df[\"contains_capitalized\"].value_counts(normalize=True)","36ffbc60":"df[\"title_length\"] = df[\"title\"].apply(lambda x: len(x))\n\nfig, ax = plt.subplots()\n_ = sns.distplot(df[\"title_length\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Title Length\", ylabel=\"No. of videos\", xticks=range(0, 110, 10))","e872a3ea":"fig, ax = plt.subplots()\n_ = ax.scatter(x=df['views'], y=df['title_length'], color=PLOT_COLORS[2], edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Title Length\")","fbcae746":"df[\"title_length\"].mean()","3602230a":"df.corr()","218304b2":"h_labels = [x.replace('_', ' ').title() for x in \n            list(df.select_dtypes(include=['number', 'bool']).columns.values)]\n\nfig, ax = plt.subplots(figsize=(10,6))\n_ = sns.heatmap(df.corr(), annot=True, xticklabels=h_labels, yticklabels=h_labels, cmap=sns.cubehelix_palette(as_cmap=True), ax=ax)","7fdd44c1":"fig, ax = plt.subplots()\n_ = plt.scatter(x=df['views'], y=df['likes'], color=PLOT_COLORS[2], edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Likes\")","c05200c1":"title_words = list(df[\"title\"].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(25)","8d0369ac":"# wc = wordcloud.WordCloud(width=1200, height=600, collocations=False, stopwords=None, background_color=\"white\", colormap=\"tab20b\").generate_from_frequencies(dict(Counter(title_words).most_common(150)))\nwc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(15,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","a0e7d65c":"# Word tokenization\nfrom spacy.lang.en import English\n\n# Load English tokenizer, tagger, parser, NER and word vectors\nnlp = English()\n\n# Function to convert   \ndef listToString(s):  \n    \n    # initialize an empty string \n    str1 = \" \" \n    \n    # return string   \n    return (str1.join(s)) \n        \n        \n# Driver code     \ns = title_words[:10000]\n\ntext = listToString(s)\n\n#  \"nlp\" Object is used to create documents with linguistic annotations.\nmy_doc = nlp(text)\n\n# Create list of word tokens\ntoken_list = []\nfor token in my_doc:\n    token_list.append(token.text)\n#print(token_list)\n\n# POS tagging\n\n# importing the model en_core_web_sm of English for vocabluary, syntax & entities\nimport en_core_web_sm\n\n# load en_core_web_sm of English for vocabluary, syntax & entities\nnlp = en_core_web_sm.load()\n\n#  \"nlp\" Objectis used to create documents with linguistic annotations.\ndocs = nlp(listToString(s))\n\nfor word in docs:\n    print(word.text,word.pos_)","04bfccd8":"for word in docs:\n    if word.pos_= NOUN\n    \n    nouns = list(df[\"title\"].apply(lambda x: x.split()))\n    title_words = [x for y in title_words for x in y]\n    Counter(nouns).most_common(1)","d2650708":"cdf = df.groupby(\"channel_title\").size().reset_index(name=\"video_count\") \\\n    .sort_values(\"video_count\", ascending=False).head(20)\n\nfig, ax = plt.subplots(figsize=(8,8))\n_ = sns.barplot(x=\"video_count\", y=\"channel_title\", data=cdf,\n                palette=sns.cubehelix_palette(n_colors=20, reverse=True), ax=ax)\n_ = ax.set(xlabel=\"No. of videos\", ylabel=\"Channel\")","59df8acd":"with open(\"..\/input\/US_category_id.json\") as f:\n    categories = json.load(f)[\"items\"]\ncat_dict = {}\nfor cat in categories:\n    cat_dict[int(cat[\"id\"])] = cat[\"snippet\"][\"title\"]\ndf['category_name'] = df['category_id'].map(cat_dict)","c715c2f0":"cdf = df[\"category_name\"].value_counts().to_frame().reset_index()\ncdf.rename(columns={\"index\": \"category_name\", \"category_name\": \"No_of_videos\"}, inplace=True)\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"category_name\", y=\"No_of_videos\", data=cdf, \n                palette=sns.cubehelix_palette(n_colors=16, reverse=True), ax=ax)\n_ = ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n_ = ax.set(xlabel=\"Category\", ylabel=\"No. of videos\")","a901d523":"James made section: Lets see what percent of the total videos are in each category:","a4927484":"df[\"category_name\"].apply(lambda x: x).value_counts(normalize=True)","4dc2ab13":"df[\"publishing_day\"] = df[\"publish_time\"].apply(\n    lambda x: datetime.datetime.strptime(x[:10], \"%Y-%m-%d\").date().strftime('%a'))\ndf[\"publishing_hour\"] = df[\"publish_time\"].apply(lambda x: x[11:13])\ndf.drop(labels='publish_time', axis=1, inplace=True)","2c7b33af":"cdf = df[\"publishing_day\"].value_counts()\\\n        .to_frame().reset_index().rename(columns={\"index\": \"publishing_day\", \"publishing_day\": \"No_of_videos\"})\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"publishing_day\", y=\"No_of_videos\", data=cdf, \n                palette=sns.color_palette(['#003f5c', '#374c80', '#7a5195', \n                                           '#bc5090', '#ef5675', '#ff764a', '#ffa600'], n_colors=7), ax=ax)\n_ = ax.set(xlabel=\"Publishing Day\", ylabel=\"No. of videos\")","c1dbe404":"cdf = df[\"publishing_hour\"].value_counts().to_frame().reset_index()\\\n        .rename(columns={\"index\": \"publishing_hour\", \"publishing_hour\": \"No_of_videos\"})\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"publishing_hour\", y=\"No_of_videos\", data=cdf, \n                palette=sns.cubehelix_palette(n_colors=24), ax=ax)\n_ = ax.set(xlabel=\"Publishing Hour\", ylabel=\"No. of videos\")","6fcc05ec":"value_counts = df[\"video_error_or_removed\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n        colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'})\n_ = ax.axis('equal')\n_ = ax.set_title('Video Error or Removed?')","c64edc6f":"df[\"video_error_or_removed\"].value_counts()","ba7c468b":"value_counts = df[\"comments_disabled\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie(x=[value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n           colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'})\n_ = ax.axis('equal')\n_ = ax.set_title('Comments Disabled?')","9fa036ff":"df[\"comments_disabled\"].value_counts(normalize=True)","683b54c6":"value_counts = df[\"ratings_disabled\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n            colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'})\n_ = ax.axis('equal')\n_ = ax.set_title('Ratings Disabled?')","157391ce":"df[\"ratings_disabled\"].value_counts()","bf622b40":"len(df[(df[\"comments_disabled\"] == True) & (df[\"ratings_disabled\"] == True)].index)","f97435f7":"### <a name=\"ch\"><\/a>Comment count histogram","38dc6610":"## <a name=\"descnn\"><\/a>Description on non-numerical columns\nAfter we described numerical columns previously, we now describe non-numerical columns","db488410":"We can see that the dataset was collected in 2017 and 2018 with `77%` of it in 2018 and `23%` in 2017.","a9990edd":"We note from the table above that \n- The average number of views of a trending video is `2,360,784`. The median value for the number of views is `681,861`, which means that half the trending videos have views that are less than that number, and the other half have views larger than that number\n- The average number of likes of a trending video is `74,266`, while the average number of dislikes is `3,711`. The \n- Average comment count is `8,446` while the median is `1,856`\n\nHow useful are the observations above? Do they really represent the data? Let's examine more. \n\n### <a name=\"vh\"><\/a>Views histogram\nlet's plot a [histogram](https:\/\/www.mathsisfun.com\/data\/histograms.html) for the `views` column to take a look at its distribution: to see how many videos have between `10` million and `20` million views, how many videos have between `20` million and `30` million views, and so on.","597887a9":"## <a name=\"corr\"><\/a>Correlation between dataset variables\nNow let's see how the dataset variables are [correlated](https:\/\/www.mathsisfun.com\/data\/correlation.html) with each other: for example, we would like to see how views and likes are correlated, meaning do views and likes increase and decrease together (positive correlation)? Does one of them increase when the other decrease and vice versa (negative correlation)? Or are they not correlated?\n\nCorrelation is represented as a value between `-1` and `+1` where `+1` denotes the highest positive correlation, `-1` denotes the highest negative correlation, and `0` denotes that there is no correlation.\n\nLet's see the correlation table between our dataset variables (numerical and boolean variables only)","8b3f252a":"The correlation map and correlation table above say that views and likes are highly positively correlated. Let's verify that by plotting a scatter plot between views and likes to visualize the relationship between these variables","83fa3b9b":"James made code: Using the data on the titles, we can sort the words into their parts of speech using Spacy, hopefully allowing us to create a sort of median title that is the average length of words and uses the most typical sentence structure.****","1549ecb2":"We see that most trending videos have around\n\n\\begin{align}\n\\frac{25000}{6} \\approx 4166 \\text{ comments}\n\\end{align}\n\nsince each division in the graph has six histogram bins. \n\nAs with views and likes, let's see the exact percentage of videos with less than `4000` comments","c1ef1ee8":"## <a name=\"err\"><\/a>How many trending videos have an error?\nTo see how many trending videos got removed or had some error, we can use `video_error_or_removed` column in the dataset","83f8dbb4":"Now we can see that the majority of trending videos have `40000` likes or less with a peak for videos with `2000` likes or less. \n\nLet's see the exact percentage of videos with less than `40000` likes ","9eecc055":"James made code: lets find the average length of a video title.","aee82f55":"## <a name=\"feel\"><\/a>Getting a feel of the dataset\nLet's get a feel of our dataset by displaying its first few rows","0fc1ee76":"From the table above, we can see that there are `205` unique dates, which means that our dataset contains collected data about trending videos over **`205`** days.\n\nFrom `video_id` description, we can see that there are `40949` videos (which is expected because our dataset contains `40949` entries), but we can see also that there are only `6351` unique videos which means that some videos appeared on the trending videos list **on more than one day**.\nThe table also tells us that the top frequent title is `WE MADE OUR MOM CRY...HER DREAM CAME TRUE!` and that it appeared `30` times on the trending videos list.\n\nBut there is something strange in the description table above: Because there are `6351` unique video IDs, we expect to have `6351` unique video titles also, because we assume that each ID is linked to a corresponding title. One possible interpretation is that a trending video had some title when it appeared on the trending list, then it appeared again on another day but with a modified title. Similar explaination applies for `description` column as well.\nFor `publish_time` column, the unique values are less than `6351`, but there is nothing strange here, because two different videos may be published at the same time.\n\nTo verify our interpretation for `title` column, let's take a look at an example where a trending video appeared more than once on the trending list but with different titles","fe89a96c":"We note that the vast majority of trending videos have `5` million views or less. We get the `5` million number by calculating\n\n\\begin{align}\n\\frac{0.1 \\times 10^8}{2} = 5 \\times 10^6\n\\end{align}\n\nNow let us plot the histogram just for videos with `25` million views or less to get a closer look at the distribution of the data","a4621a66":"## <a name=\"chan\"><\/a>Which channels have the largest number of trending videos?","77284061":"Now we can see which category had the largest number of trending videos","a4976e7c":"## <a name=\"read\"><\/a>Reading the dataset\nThen we read the dataset file which is in csv format","a8180437":"By looking at the scatter plot, we can say that there is no relationship between the title length and the number of views. However, we notice an interesting thing: videos that have `100,000,000` views and more have title length between `33` and `55` characters approximately.","5cefffdb":"Now we see that the majority of trending videos have `1` million views or less. Let's see the exact percentage of videos less than `1` million views","9ac81366":"## <a name=\"coll\"><\/a>Dataset collection years\nLet's see in which years the dataset was collected","5d1eaf69":"Now we can see which days of the week had the largest numbers of trending videos","581e8116":"We can see that the number of trending videos published on Sunday and Saturday are noticeably less than the number of trending videos published on other days of the week.\n\nNow let's use `publishing_hour` column to see which publishing hours had the largest number of trending videos","af15fbd5":"We can see that this video appeared on the list with two different titles.","752b8839":"## <a name=\"commdis\"><\/a>How many trending videos have their commets disabled?\nTo know that, we use `comments_disabled` column","4e932ee4":"Let's get a closer look by eliminating entries with comment count larger than `200000` comment","3c83818c":"We see that only `2%` of trending videos prevented users from commenting.","91c8791e":"## <a name=\"cap\"><\/a>How many trending video titles contain capitalized word?\nNow we want to see how many trending video titles contain at least a capitalized word (e.g. HOW). To do that, we will add a new variable (column) to the dataset whose value is `True` if the video title has at least a capitalized word in it, and `False` otherwise","4efaa323":"## <a name=\"commti\"><\/a>Most common words in video titles\nLet's see if there are some words that are used significantly in trending video titles. We will display the `25` most common words in all trending video titles","66b865b9":"We can see that 44% of trending video titles contain at least a capitalized word. We will later use this added new column `contains_capitalized` in analyzing correlation between variables.","21fe04be":"So to do some sort of data cleaning, and to get rid of those null values, we put an empty string in place of each null value in the `description` column","1ad6ed81":"We set some configuration options just for improving visualization graphs; nothing crucial","d90ed7ce":"So, it is around `60%`. Similarly, we can see that the percentage of videos with less than `1.5` million views is around `71%`, and that the percentage of videos with less than `5` million views is around `91%`.\n\n### <a name=\"lh\"><\/a>Likes histogram\n\nAfter `views`, we plot the histogram for `likes` column","9d3cdcb1":"We can see that there are `40,949` entries in the dataset. We can see also that all columns in the dataset are complete (i.e. they have `40,949` non-null entries) except `description` column which has some `null` values; it only has `40,379` non-null values.\n\n## <a name=\"clean\"><\/a>Data cleaning\nThe `description` column has some null values. These are some of the rows whose description values are null. We can see that null values are denoted by `NaN`","d2b9e7f5":"James made code: We know that the average length of a title is 48 characters, so if we go with the sentence structure: \"PRON VERB ADJECTIVE NOUN ADP PROPN PART VERB ADJECTIVE NOUN\", we should be able to arrive at what the most common title according to the data would be. Obviously, this isn't super accurate because the proposed sentence structure is totally arbitrary, and there's no way to find out the actual most common sentence structure.","5a65c8ed":"# YouTube Trending Videos Analysis (More Than 40,000 Videos)\n\n<p>&nbsp;<\/p>\n<img src=\"https:\/\/s3.eu-west-2.amazonaws.com\/ammar-blog-post-images\/2018\/Sep\/ytanalysis.png\" width=0>\n<p>&nbsp;<\/p>\n\n## Introduction\nYouTube is the most popular and most used video platfrom in the world today. YouTube has [a list of **trending videos**](https:\/\/www.youtube.com\/feed\/trending) that is updated constantly. Here we will use **Python** with some packages like **Pandas** and **Matplotlib** to analyze a dataset that was collected over 205 days. For each of those days, the dataset contains data about the trending videos of that day. It contains data about **more than `40,000` trending videos**. We will analyze this data to get insights into YouTube trending videos, to see what is common between these videos. Those insights might also be used by people who want to increase popularity of their videos on YouTube.\n\nThe dataset that we will use is obtained from Kaggle [here](https:\/\/www.kaggle.com\/datasnaek\/youtube-new). It contains data about trending videos for many countries. Here we will analyze USA trending videos. \n\n## Goals of the analysis\nWe want to answer questions like:\n* How many views do our trending videos have? Do most of them have a large number of views? Is having a large number of views required for a video to become trending?\n* The same questions above, but applied to likes and comment count instead of views.\n* Which video remained the most on the trendin-videos list?\n* How many trending videos contain a fully-capitalized word in their titles?\n* What are the lengths of trending video titles? Is this length related to the video becoming trendy?\n* How are views, likes, dislikes, comment count, title length, and other attributes correlate with (relate to) each other? How are they connected?\n* What are the most common words in trending video titles?\n* Which YouTube channels have the largest number of trending videos?\n* Which video category (e.g. Entertainment, Gaming, Comedy, etc.) has the largest number of trending videos?\n* When were trending videos published? On which days of the week? at which times of the day?\n\n## Table of contents\n* [Importing some packages](#import)\n* [Reading the dataset](#read)\n* [Getting a feel of the dataset](#feel)\n* [Data cleaning](#clean)\n* [Dataset collection years](#coll)\n* [Describtion of numerical columns](#descn)\n    * [Views histogram](#vh)\n    * [Likes histogram](#lh)\n    * [Comment count histogram](#ch)\n* [Description on non-numerical columns](#descnn)\n* [How many trending video titles contain capitalized word?](#cap)\n* [Video title lengths](#len)\n* [Correlation between dataset variables](#corr)\n* [Most common words in video titles](#commti)\n* [Which channels have the largest number of trending videos?](#chan)\n* [Which video category has the largest number of trending videos?](#cat)\n* [Trending videos and their publishing time](#pub)\n* [How many trending videos have an error?](#err)\n* [How many trending videos have their commets disabled?](#commdis)\n* [How many trending videos have their ratings disabled?](#ratdis)\n* [How many videos have both comments and ratings disabled?](#commratdis)\n* [Conclusions](#conc)\n\nLet's get started.\n\n## <a name=\"import\"><\/a>Importing some packages\nFirst, we import some Python packages that will help us analyzing the data, especially `pandas` for data analysis and `matplotlib` for visualization","61ecea0e":"## <a name=\"ratdis\"><\/a>How many trending videos have their ratings disabled?\nTo know that, we use `ratings_disabled` column","84970b76":"In a similar way, we can see that the percentage of videos with less than `25,000` comments  is around `93%`.","55a44a1f":"We note that the vast majority of trending videos have between `0` and `100,000` likes. Let us plot the histogram just for videos with `1000,000` likes or less to get a closer look at the distribution of the data","38f55549":"We see that only `169` trending videos out of `40949` prevented users from commenting.\n\n## <a name=\"commratdis\"><\/a>How many videos have both comments and ratings disabled?","93d657bd":"## <a name=\"cat\"><\/a>Which video category has the largest number of trending videos?\nFirst, we will add a column that contains category names based on the values in `category_id` column. We will use a category JSON file provided with the dataset which contains information about each category.","b9cd7e17":"We can see that the period between 2PM and 7PM, peaking between 4PM and 5PM, had the largest number of trending videos. We notice also that the period between 12AM and 1PM has the smallest number of trending videos. But why is that? Is it because people publish a lot more videos between 2PM and 7PM? Is it because how YouTube algorithm chooses trending videos?","451ab3e3":"We can see that title-length distribution resembles a normal distribution, where most videos have title lengths between 30 and 60 character approximately.\n\nNow let's draw a [scatter plot](https:\/\/www.mathsisfun.com\/data\/scatter-xy-plots.html) between title length and number of views to see the relationship between these two variables","ae707eff":"Similarly, we can see that the percentage of videos with less than `100,000` likes is around `84%`","b1c4932a":"Ignoring words like \"the\" and \"of\", we can see that \"-\" and \"|\" symbols occured a lot in the `40949` trending video titles: `11452` times and `10663` times respectively. We notice also that words \"Video\", \"Trailer\", \"How\", and \"2018\" are common in trending video titles; each occured in 1613-1901 video titles.\n\nLet's draw a word cloud for the titles of our trending videos, which is a way to visualize most common words in the titles; the more common the word is, the bigger its font size is","341291ad":"Also James made section: According to this chart, we should expect to see '24%' of trending videos to be in entertainment, '16%' in music, '10%' in how-to, and so on. Even though this data is from 2017-2018, it can still apply to today's videos. The most major problem is that there is no category for memes, but that's ok because YouTube doesn't have a category called memes yet, so no trending video will be in that category despite how many trending memes there are.","5d1554d0":"## <a name=\"descn\"><\/a>Describtion of numerical columns\nNow, let's see some statistical information about the numerical columns of our dataset","5a074408":"## <a name=\"pub\"><\/a>Trending videos and their publishing time\nAn example value of the `publish_time` column in our dataset is `2017-11-13T17:13:01.000Z`. And according to information on this page: https:\/\/www.w3.org\/TR\/NOTE-datetime, this means that the date of publishing the video is `2017-11-13` and the time is `17:13:01` in Coordinated Universal Time (UTC) time zone.\n\nLet's add two columns to represent the date and hour of publishing each video, then delete the original `publish_time` column because we will not need it anymore","bf875537":"So there are just `106` trending videos that have both comments and ratings disabled","4c9595e2":"We see that views and likes are truly positively correlated: as one increases, the other increases too\u2014mostly.\n\nAnother verification of the correlation matrix and map is the scatter plot we drew above between views and title length as it shows that there is no correlation between them.","777eb5ae":"We see for example that views and likes are highly positively correlated with a correlation value of `0.85`; we see also a high positive correlation (`0.80`) between likes and comment count, and between dislikes and comment count (`0.70`). \n\nThere is some positive correlation between views and dislikes, between views and comment count, between likes and dislikes.\n\nNow let's visualize the correlation table above using a [heatmap](https:\/\/www.wikiwand.com\/en\/Heat_map)","543ce026":"We see that the Entertainment category contains the largest number of trending videos among other categories: around `10,000` videos, followed by Music category with around `6,200` videos, followed by Howto & Style category with around `4,100` videos, and so on.","998b1e63":"## <a name=\"len\"><\/a>Video title lengths\nLet's add another column to our dataset to represent the length of each video title, then plot the histogram of title length to get an idea about the lengths of trnding video titles","e61c9862":"It comes out to be around 48 characters, so we're assuming around 9-12 words.","9a56058e":"We can see that out of videos that appeared on trending list (`40949` videos), there is a tiny portion (`23` videos) with errors.","642837b8":"## <a name=\"conc\"><\/a>Conclusions\nHere are the some of the results we extracted from the analysis:\n* We analyzed a dataset that contains information about YouTube trending videos for 205 days. The dataset was collected in 2017 and 2018. It contains **`40949`** video entry.\n* `71%` of trending videos have less than `1.5` million views, and **`91%`** have less than **`5`** million views.\n* `68%` of trending videos have less than `40,000` likes, and **`84%`** have less than **`100,000`** likes.\n* `67%` of trending videos have less than `4,000` comments, and **`93%`** have less than **`25,000`** comments.\n* Some videos may appear on the trending videos list on more than one day. Our dataset contains `40494` entries but not for `40494` unique videos but for `6351`unique videos.\n* Trending videos that have **`100,000,000`** views and more  have title length between `33` and `55` characters approximately.\n* The delimiters `-` and `|` were common in trending video titles.\n* The words 'Official', 'Video', 'Trailer', 'How', and '2018' were common also in trending video titles.\n* There is a strong positive correlation between the number of views and the number of likes of trending videos: As one of them increases, the other increases, and vice versa.\n* There is a strong positive correlation also between the number of likes and the number of comments, and a slightly weaker one between the number of dislikes and the number of comments.\n* The category that has the largest number of trending videos is **'Entertainment'** with `9,964` videos, followed by 'Music' category with `6,472` videos, followed by 'Howto & Style' category with `4146` videos.\n* On the opposite side, the category that has the smallest number of trending videos is 'Shows' with `57` videos, followed by 'Nonprofits & Activisim' with `57` videos, followed by 'Autos & Vehicles' with `384` videos.\n\nIf you like this analysis, please consider to **upvote** this analysis at the top of this page.\n\nFollow me on [Twitter](https:\/\/twitter.com\/ammar_cel) to know when I publish something new, or visit [my website and blog](http:\/\/ammar-alyousfi.com).\n","49053311":"Now, let's see some information about our dataset"}}