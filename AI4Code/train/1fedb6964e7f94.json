{"cell_type":{"4aeed68c":"code","f341da7d":"code","a8d881a0":"code","0705ba32":"code","5286c200":"code","772466b1":"code","15865f77":"code","f32cac97":"code","fbf9aedf":"code","bc3c4842":"code","82f8e025":"code","94843d7c":"code","e6262d7a":"code","0e251baf":"code","dab2ec56":"code","cbee7fe0":"code","9cb36634":"code","108109b8":"code","14759e7f":"code","6d66c0e3":"code","c683dcb9":"code","57b65389":"code","2844791e":"code","b23d9f8d":"code","7e796e82":"code","f96c5237":"code","856a368d":"code","434dcbe3":"code","75fd87a5":"code","4c869cbf":"code","2b9e9bd8":"code","14958f64":"code","d69016be":"code","eeeed489":"code","d07c75c8":"code","dc663f4f":"code","12db2d49":"code","8b32893e":"code","35f601fc":"code","51f9d59d":"code","aecaef6a":"code","4278b44d":"code","03537d96":"code","6163e7dc":"code","ae89d695":"code","86a9cc5d":"code","d47b0b58":"code","217cdccf":"code","dd7c5004":"code","9c776db9":"code","aa272805":"code","dcccbee9":"code","b3136f44":"code","bc35404e":"code","93fca876":"code","cc81c91a":"code","d99860f6":"code","02ca56c6":"code","6bf9af84":"code","ad51598b":"code","bc82e0be":"code","abc66511":"code","6df65983":"code","efcbdc90":"code","576c30c3":"code","0a01cd7a":"code","4ebed65e":"code","5bb18e0f":"code","eacfb5aa":"code","36bd72fb":"code","5370ccab":"markdown","766a6691":"markdown","22ba173d":"markdown","85c46fc0":"markdown","9ec96fac":"markdown","c7ea820f":"markdown","0fa51655":"markdown","62c2a0fe":"markdown","112b618f":"markdown","96cdb12b":"markdown","b580f598":"markdown","d45b4287":"markdown","e4b04865":"markdown","8a87862d":"markdown","8cf54a2d":"markdown","bf5aee7e":"markdown","1d826bbd":"markdown","b2393e49":"markdown","78869365":"markdown","7cc38b2d":"markdown","920388c8":"markdown","3a6f83ef":"markdown","f981f04a":"markdown","53e3c4c7":"markdown","3ea1e477":"markdown","e01943cc":"markdown","964caea1":"markdown","84600297":"markdown","def3ac54":"markdown","198c8d3d":"markdown"},"source":{"4aeed68c":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f341da7d":"sns.__version__","a8d881a0":"#If running on Kaggle\npath = \"..\/input\/insurance\/insurance.csv\"\n\n#If Running anywhere else\n# To Add\n\ndf = pd.read_csv(path)","0705ba32":"df.head()","5286c200":"df.info()","772466b1":"df.describe(include='all')","15865f77":"df.dtypes","f32cac97":"#Find count of nulls in each column\ndf.isna().sum()","fbf9aedf":"#Find % of null values in each column\n(df.isna().sum() \/ df.shape[0]) * 100","bc3c4842":"target_column = 'charges'","82f8e025":"df[[target_column]].describe().transpose()","94843d7c":"df[[target_column]].astype('object').describe().T","e6262d7a":"sns.displot(data=df, x=target_column)","0e251baf":"sns.displot(data=df, x='charges', kind='kde', hue='smoker')","dab2ec56":"df.select_dtypes(include=np.number).columns","cbee7fe0":"numeric_columns = ['age', 'bmi', 'children', 'charges']","9cb36634":"df[numeric_columns].head()","108109b8":"df[numeric_columns].describe()","14759e7f":"sns.displot(data=df, x='age')","6d66c0e3":"sns.scatterplot(data=df, x='age', y='charges')","c683dcb9":"sns.scatterplot(data=df, x='age', y='charges', hue='smoker')","57b65389":"sns.jointplot(data=df, x='bmi', y='charges')","2844791e":"sns.jointplot(data=df, x='bmi', y='charges', hue='smoker')","b23d9f8d":"sns.jointplot(data=df, x='children', y='charges', hue='smoker')","7e796e82":"sns.pairplot(df[numeric_columns])","f96c5237":"#heatmap\ncorr = df.corr()\ncorr","856a368d":"sns.heatmap(corr)","434dcbe3":"sns.heatmap(\n    df.corr(),\n    cmap='Blues',\n    annot=True,\n)","75fd87a5":"df.head()","4c869cbf":"df.columns","2b9e9bd8":"df.select_dtypes(include=np.object).columns","14958f64":"categorical_columns = ['sex', 'smoker', 'region', 'children']","d69016be":"df[categorical_columns].head()","eeeed489":"df[categorical_columns].astype(np.object).describe()","d07c75c8":"sns.countplot(data=df, x='smoker')","dc663f4f":"sns.countplot(data=df, x='region')","12db2d49":"sns.countplot(data=df, x='sex')","8b32893e":"sns.countplot(data=df, x='smoker', hue='sex')","35f601fc":"sns.countplot(data=df, x='smoker', hue='region')","51f9d59d":"sns.countplot(data=df, hue='children', x='region')","aecaef6a":"sns.boxplot(data=df, x='charges', y='smoker')","4278b44d":"sns.boxplot(data=df, x='bmi', y='sex')","03537d96":"sns.boxplot(data=df, x='charges', y='smoker', hue='region')","6163e7dc":"sns.boxplot(data=df, x='charges', y='sex', hue='smoker')","ae89d695":"target_column = 'charges'\n\n#Manually selecting relavent features based on EDA\nfeature_columns = ['age', 'bmi', 'smoker']\n\nkeep_columns = [target_column] + feature_columns","86a9cc5d":"df = df[keep_columns]","d47b0b58":"df.head()","217cdccf":"df['age'].median()","dd7c5004":"df['age'] = df['age'].fillna(df['age'].median())","9c776db9":"df = pd.get_dummies(df)","aa272805":"df.head()","dcccbee9":"df.columns","b3136f44":"feature_columns = set(df.columns) - {target_column}\n\nX = df[feature_columns]\ny = df[target_column]","bc35404e":"feature_columns","93fca876":"X","cc81c91a":"y","d99860f6":"from sklearn.model_selection import train_test_split","02ca56c6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","6bf9af84":"X_train","ad51598b":"y_train","bc82e0be":"from sklearn.linear_model import LinearRegression","abc66511":"model = LinearRegression()\n\nmodel.fit(X_train,y_train)","6df65983":"y_pred = model.predict(X_test)","efcbdc90":"df_test = X_test.copy()\ndf_test['y_true'] = y_test\ndf_test['y_pred'] = y_pred","576c30c3":"df_test.head()","0a01cd7a":"g = sns.scatterplot(data=df_test, x='y_true', y='y_pred')\n\ng.ax_joint.plot([0,1], [0,1], ':y', transform=g.ax_joint.transAxes)\n\n# This is the x=y line using transforms\nplt.show()","4ebed65e":"from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error","5bb18e0f":"r2_score = r2_score(y_test, y_pred)\nmae_score = mean_absolute_error(y_test, y_pred)\nmse_score = mean_squared_error(y_test, y_pred)\nrmse_score = mean_squared_error(y_test, y_pred, squared=False)","eacfb5aa":"print(f\"R2: {r2_score}\")\nprint(f\"Mean Absolute Error: {mae_score}\")\nprint(f\"Mean Squared Error: {mse_score}\")\nprint(f\"Root Mean Squared Error: {rmse_score}\")","36bd72fb":"#TODO","5370ccab":"## Import Libraries","766a6691":"#### Observations\n1. Age column has around 20% null values","22ba173d":"## Data Import","85c46fc0":"### Read CSV File to Dataframe","9ec96fac":"### One-Hot Encoding of Text Columns","c7ea820f":"### Model Evaluation","0fa51655":"#### Actual VS Predicted Plot","62c2a0fe":"## Machine Learning Workflow Components\n\n0. **Data Description, Tasks & Observations**\n0. **Import Libararies** & other settings\n1. **Data Import**\n2. **Exploratory Data Analysis (EDA)**\n3. **Data Preparation**\n4. **Model Training**\n5. **Model Evaluation**\n5. **Save Model**","112b618f":"### Create X & y","96cdb12b":"#### Regression Evaluation Metrics","b580f598":"#### Observations\n1. Most people the smallest prices\n2. Most people pay around 2000 to 10,000\n3. Only few pay more than 50,000\n4. 30,000 Range has small amount of data","d45b4287":"## Model Training & Evaluation","e4b04865":"### Model Training","8a87862d":"## Feature Selection","8cf54a2d":"### Model Predictions on Test Data","bf5aee7e":"#### Observations\n1. ...","1d826bbd":"### Categorical Columns","b2393e49":"### Train Test Split","78869365":"#### Observations\n1. ...","7cc38b2d":"### Find Data Types","920388c8":"## Save Model","3a6f83ef":"## Exploratory Data Analysis (EDA)","f981f04a":"### Basic Dataset Information","53e3c4c7":"# Machine Learning Workflow - Regression - Basic\n\nBasic Machine learning workflow for regression. Starting from data set understanding, up until machine learning model training and evaluation.\n\nDataset: https:\/\/www.kaggle.com\/mirichoi0218\/insurance","3ea1e477":"### Find Null Counts","e01943cc":"### Fill Null Values","964caea1":"### Numeric Columns","84600297":"### Target Column","def3ac54":"## Data Preparation","198c8d3d":"## Data Description, Tasks & Observations\n\n### Data Description\n**Dataset Summary**: Data of insurance company that includes individuals from age [x-y]. It has 7 columns.  \n**Index Column**: Does not exist in dataset  \n**Target Column**: `charges`  \n**Features**: All Other Columns <br>\n**Data Source**: Public Domain  \n**Other Comments**: ???\n\n### Tasks:\n1. Understand data and select columns to be used as features\n1. Exploratory Data Analysis\n1. Preparing Data for model\n2. Train basic model\n3. Evaluate model \n4. Save best performing model\n\n### Observations:\n1. *Will be filled as we go through workflow*"}}