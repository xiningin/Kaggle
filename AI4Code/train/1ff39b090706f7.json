{"cell_type":{"6bfe577e":"code","4f2e0212":"code","2b0d86e5":"code","0859c769":"code","1e6f68f0":"code","d41b9f09":"code","53d4f060":"code","4f413103":"code","4c7a4fa6":"code","227c4273":"code","c3b90a34":"code","d54882ee":"code","d0d3e599":"code","c928d9f9":"code","7a29741b":"code","a64ad613":"code","a3a866a1":"code","a50d7acd":"code","88f6045b":"code","79346cf2":"code","11d53390":"code","48ff5085":"code","5698fb39":"code","1301fdcf":"code","2a3e7501":"code","f32b9250":"code","ea04e1a6":"code","97646993":"code","2a2bb3d3":"code","fb8e7d0d":"code","1cc0fe7a":"code","bf4f35e1":"code","858eb588":"markdown"},"source":{"6bfe577e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport lightgbm as lgbm\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4f2e0212":"train = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')","2b0d86e5":"train.head()","0859c769":"train.tail()","1e6f68f0":"train.loc[49000:50010,:]","d41b9f09":"train.shape","53d4f060":"train['open_channels'].min()","4f413103":"train_time = train['time'].values","4c7a4fa6":"train_time_0 = train_time[:50000]","227c4273":"for i in range(1,100):\n    train_time_0 = np.hstack([train_time_0, train_time[i*50000:(i+1)*50000]])","c3b90a34":"train_time_0.shape","d54882ee":"train['time'] = train_time_0","d0d3e599":"test = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')\ntest.head()","c928d9f9":"test.tail()","7a29741b":"test.shape","a64ad613":"train_time_0 = train_time[:50000]\nfor i in range(1,40):\n    train_time_0 = np.hstack([train_time_0, train_time[i*50000:(i+1)*50000]])\ntest['time'] = train_time_0","a3a866a1":"X = train[['time', 'signal']].values\ny = train['open_channels'].values","a50d7acd":"model = lgbm.LGBMRegressor(n_estimators=100)\nmodel.fit(X, y)","88f6045b":"train_preds = model.predict(X)","79346cf2":"train_preds = np.clip(train_preds, 0, 10)\ntrain_preds = train_preds.astype(int)\nX_test = test[['time', 'signal']].values","11d53390":"submission.head()","48ff5085":"submission.shape","5698fb39":"X_test.shape","1301fdcf":"test_preds = model.predict(X_test)\ntest_preds = np.clip(test_preds, 0, 10)\ntest_preds = test_preds.astype(int)\nsubmission['open_channels'] = test_preds","2a3e7501":"submission.head()","f32b9250":"np.set_printoptions(precision=4)","ea04e1a6":"submission.time.values[:20]","97646993":"submission['time'] = [format(submission.time.values[x], '.4f') for x in range(2000000)]","2a2bb3d3":"submission.time.values[:20]","fb8e7d0d":"submission['open_channels'].mean()","1cc0fe7a":"submission.head()","bf4f35e1":"submission.to_csv('submission.csv', index=False)","858eb588":"train_preds"}}