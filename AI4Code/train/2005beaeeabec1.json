{"cell_type":{"5223de1b":"code","d5c23458":"code","0e912e31":"code","6e84be08":"code","bb13edcc":"code","5b219784":"code","9e518683":"code","843e21be":"code","826d98ac":"code","24be8ad1":"code","1b1d308f":"markdown","f6e7fe5e":"markdown","85d4752a":"markdown","836c6d79":"markdown","6a849375":"markdown","02f70d8d":"markdown","cae3710b":"markdown","edb51698":"markdown","75f70a07":"markdown"},"source":{"5223de1b":"import os\nimport cv2\nimport skimage.io\nfrom tqdm.notebook import tqdm\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport glob\nimport pandas as pd","d5c23458":"df_train = pd.read_csv(\"..\/input\/prostate-cancer-grade-assessment\/train.csv\")\ndf_train.head()","0e912e31":"img_path = \"..\/input\/panda-16x128x128-tiles-data\/train\"\nimg_id = list(df_train[\"image_id\"])\nimg_files = glob.glob(img_path + f\"\/{img_id[1]}\" + \"*\")","6e84be08":"def get_df():\n    data = {\"image_id\": [], \"isup_grade\": []}\n    img_path = \"..\/input\/panda-16x128x128-tiles-data\/train\"\n    img_ids = list(df_train[\"image_id\"])\n    labels = list(df_train[\"isup_grade\"])\n    for i in tqdm(range(len(img_ids))):\n        img_id = img_ids[i]\n        img_files = []\n        label = [labels[i]] * 16\n        for i in range(16):\n            img_files.append(f\"{img_id}\"+f\"_{i}\"+\".png\")\n        data[\"image_id\"].extend(img_files)\n        data[\"isup_grade\"].extend(label)\n        \n    return data","bb13edcc":"def to_pandas(data):\n    df = pd.DataFrame(data, columns = [\"image_id\", 'isup_grade'])\n    return df","5b219784":"data = get_df()\ndf_new = to_pandas(data)\n\ndf_new.head()","9e518683":"example = df_new[\"image_id\"].iloc[:16]\nexample = list(example.map(lambda x: os.path.join(\"..\/input\/panda-16x128x128-tiles-data\/train\", x)))","843e21be":"\nw = 10\nh = 10\nfig = plt.figure(figsize=(9, 13))\ncolumns = 4\nrows = 4     \n\nax = []\n\nfor i in range(columns*rows):\n    img = cv2.imread(example[i], cv2.COLOR_BGR2RGB)\n    ax.append( fig.add_subplot(rows, columns, i+1) )\n    ax[-1].set_title(\"tile:\"+str(i)) \n    plt.imshow(img)\n\nplt.show()  ","826d98ac":"def get_img_tiles(image_list):\n    img_rows = []\n    rc = 0\n    for i in range(rows):\n        img1 = cv2.imread(image_list[rc + 1], cv2.COLOR_BGR2RGB)\n        img2 = cv2.imread(image_list[rc + 2], cv2.COLOR_BGR2RGB)\n        img3 = cv2.imread(image_list[rc + 3], cv2.COLOR_BGR2RGB)\n        img4 = cv2.imread(image_list[rc + 4], cv2.COLOR_BGR2RGB)\n        img_row = np.concatenate((img1, img2, img3, img4), axis = 1)\n        if rc == 0:\n            rc += 3\n        elif rc == 3 or rc == 7:\n            rc += 4\n        else:\n            rc += 0\n        img_rows.append(img_row)\n    img_stacked = img_row = np.concatenate((img_rows[0], img_rows[1], img_rows[2], img_rows[3]), axis = 0)\n    return img_stacked","24be8ad1":"example_tile = get_img_tiles(example)\nplt.imshow(example_tile)\nplt.show()","1b1d308f":"# Formatting our dataframe.\n\nFlowFromDataFrame method can be used in 2 ways, either specifying the directory of the image or making sure each data in the dataframe has absolute paths to the images.","f6e7fe5e":"# Get data function\n\nThis is just to get the datas","85d4752a":"# Example without combining the images together","836c6d79":"# Example on how to combine the image tiles into one single image.","6a849375":"First lets import all the things we need.","02f70d8d":"# Get our pandas dataframe!","cae3710b":"# Loading the data csv\n\nWe use pandas read csv method.","edb51698":"# Turning Image Tiles into Pandas DataFrame + Tiling the Images Together\n\nCredit to the tile image dataset creator: lafoss [link](https:\/\/www.kaggle.com\/iafoss\/panda-16x128x128-tiles-data)\n\n![img](https:\/\/i.ibb.co\/hF6LRVm\/TILE.png)\n\nBefore that, why would anyone need this?\nI am creating this for those who will be using **Keras FlowFromDataFrame method** ([documentation](https:\/\/keras.io\/api\/preprocessing\/image\/#flowfromdataframe-method))\n\nAnd also for those who want to combine these tiles into **1 single image**.\n\n\nLets get it done! ","75f70a07":"# Getting image files list\n\nFor this, I used Glob.\nThe images are formatted in the following manner:\n\n* 0005f7aaab2800f6170c399693a96917_0.png\n* 0005f7aaab2800f6170c399693a96917_1.png\n* 0005f7aaab2800f6170c399693a96917_2.png\n* 0005f7aaab2800f6170c399693a96917_3.png\n\n... and so on.\n"}}