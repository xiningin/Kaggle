{"cell_type":{"c98fd332":"code","9f1a9733":"code","6cf36cfc":"code","708c8a22":"code","cba8b7b9":"code","2d08986d":"code","8058039e":"code","760dc37d":"code","00ce2cd2":"code","2dd7307f":"code","6a3196cb":"code","212e63af":"code","023aab4d":"code","50b853ca":"code","f8b24a3a":"code","33aedaff":"code","98b5b1ff":"code","4503e497":"code","1ffe4cdf":"code","ef0fe7d0":"code","655c5dfc":"code","272b398a":"code","ca37c427":"code","32576ccf":"code","3086e7f5":"code","a7a3ef66":"code","a492c60e":"code","8496579d":"code","a4ab30c6":"code","cd1cdfb5":"code","d0fa8a27":"code","4240de62":"code","a69e210c":"code","72c0e7ba":"code","105d453f":"code","915cd9ae":"code","8127b1cb":"code","6300213e":"code","2ddef0c4":"code","f06f7734":"code","5304c0b6":"code","62c017d0":"code","3272e716":"code","91138891":"code","d20ec604":"code","1d0626c9":"code","af1b0e5a":"code","fb020956":"markdown","9e1b0d25":"markdown","31b50919":"markdown","36717821":"markdown","fe421c99":"markdown"},"source":{"c98fd332":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9f1a9733":"df = pd.read_csv(\"..\/input\/online-retail-ii-uci\/online_retail_II.csv\")","6cf36cfc":"df.head()\ndf.info()","708c8a22":"df.InvoiceDate.value_counts().head()","cba8b7b9":"df.InvoiceDate = pd.to_datetime(df.InvoiceDate)","2d08986d":"df.InvoiceDate.dtypes","8058039e":"df.info()","760dc37d":"import datetime as dt","00ce2cd2":"#sadece 201-2011 verisini al\u0131yorduk\ndf = df[(df[\"InvoiceDate\"].dt.year.values == 2010) | (df[\"InvoiceDate\"].dt.year.values == 2011)]","2dd7307f":"df.InvoiceDate.dt.year.value_counts()","6a3196cb":"!pip install mlxtend","212e63af":"import pandas as pd\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.width', 500)\npd.set_option('display.expand_frame_repr', False)\nfrom mlxtend.frequent_patterns import apriori, association_rules","023aab4d":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit","50b853ca":"def replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n","f8b24a3a":"def retail_data_prep(dataframe):\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[dataframe[\"Quantity\"] > 0]\n    dataframe = dataframe[dataframe[\"Price\"] > 0]\n    replace_with_thresholds(dataframe, \"Quantity\")\n    replace_with_thresholds(dataframe, \"Price\")\n    return dataframe\n","33aedaff":"df = retail_data_prep(df)","98b5b1ff":"df_ger = df[df.Country == \"Germany\"]","4503e497":"df_ger.Country.value_counts()","1ffe4cdf":"df_ger.head()","ef0fe7d0":"# arl yap\u0131s\u0131na \u00e7eviriyoruz. sat\u0131rda invoice ,s\u00fctunlarda e\u015fsiz \u00fcr\u00fcn tan\u0131mlar\u0131 ve de\u011ferler sat\u0131n al\u0131nma frekanslar\u0131 olacak \u015fekilde\ndf_ger.groupby([\"Invoice\", \"Description\"]).agg({\"Quantity\": \"sum\"}).unstack().fillna(0).head(20)","655c5dfc":"# 0'dan b\u00fcy\u00fck, 1 harici de\u011ferleri 1'e e\u015fitliyoruz\ndf_ger.groupby([\"Invoice\", \"Description\"]).agg({\"Quantity\": \"sum\"}).unstack().fillna(0).applymap(lambda x: 1 if x>0 else 0).head()","272b398a":"def create_invoice_product_df(dataframe, id=False):\n    if id:\n        return(dataframe.groupby([\"Invoice\", \"StockCode\"])[\"Quantity\"].sum().unstack().fillna(0).applymap(lambda x: 1 if x>0 else 0))\n    else:\n        return(dataframe.groupby([\"Invoice\", \"Description\"])[\"Quantity\"].sum().unstack().fillna(0).applymap(lambda x: 1 if x>0 else 0))","ca37c427":"ger_inv_pr_df = create_invoice_product_df(df_ger, id=True)","32576ccf":"ger_inv_pr_df.head()","3086e7f5":"def check_id(dataframe, StockCode):\n    return(dataframe[dataframe[\"StockCode\"] == StockCode][\"Description\"].values[1])","a7a3ef66":"check_id(df_ger, \"21987\")","a492c60e":"check_id(df_ger, \"23235\")","8496579d":"check_id(df_ger, \"22747\")","a4ab30c6":"ger_inv_pr_df### post de\u011ferlerinin nereden \u00e7\u0131kt\u0131\u011f\u0131n\u0131 g\u00f6rmek i\u00e7in bir fonksiyon yazmak","cd1cdfb5":"frequent_itemsets = apriori(ger_inv_pr_df, min_support=0.01, use_colnames=True)\n","d0fa8a27":"frequent_itemsets.sort_values(\"support\", ascending=False).head(15)","4240de62":"rules = association_rules(frequent_itemsets, metric=\"support\", min_threshold=0.01)\n","a69e210c":"rules.sort_values(\"support\", ascending=False).head(20)","72c0e7ba":"product_id = \"21987\"\ncheck_id(df, product_id)","105d453f":"sorted_rules = rules.sort_values(\"confidence\", ascending=False)","915cd9ae":"recommendation_list = []\n\nfor i, product in enumerate(sorted_rules[\"antecedents\"]):\n    for j in list(product):\n        if j == product_id:\n            recommendation_list.append(list(sorted_rules.iloc[i][\"consequents\"])[0])","8127b1cb":"recommendation_list[0:10]","6300213e":"check_id(df_ger,\"21086\")","2ddef0c4":"product_id = \"23235\"\ncheck_id(df, product_id)","f06f7734":"sorted_rules = rules.sort_values(\"confidence\", ascending=False)","5304c0b6":"recommendation_list = []\n\nfor i, product in enumerate(sorted_rules[\"antecedents\"]):\n    for j in list(product):\n        if j == product_id:\n            recommendation_list.append(list(sorted_rules.iloc[i][\"consequents\"])[0])\n            \n","62c017d0":"recommendation_list[0:3]","3272e716":"product_id = \"22747\"\ncheck_id(df, product_id)","91138891":"recommendation_list = []\n\nfor i, product in enumerate(sorted_rules[\"antecedents\"]):\n    for j in list(product):\n        if j == product_id:\n            recommendation_list.append(list(sorted_rules.iloc[i][\"consequents\"])[0])\n            ","d20ec604":"recommendation_list[0:3]","1d0626c9":"product_id = \"22748\"\ncheck_id(df, product_id)","af1b0e5a":"product_id = \"22745\"\ncheck_id(df, product_id)","fb020956":"### 4\/5 Kullan\u0131c\u0131lara \u00fcr\u00fcn \u00f6nerisi\/\u00f6nerilen \u00fcr\u00fcnlerin isimleri","9e1b0d25":"## ARL Veri Yap\u0131s\u0131n\u0131 haz\u0131rlama","31b50919":"## Birliktelik Kural\u0131n\u0131n \u00c7\u0131kar\u0131lmas\u0131","36717821":"## Veri \u00d6ni\u015fleme","fe421c99":"## g\u00f6rev3"}}