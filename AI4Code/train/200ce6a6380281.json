{"cell_type":{"a92d8143":"code","2253e559":"code","6a741cba":"code","cde4ea15":"code","77467263":"code","eb93d916":"code","48c2844c":"code","5f55fe43":"code","d8bfc352":"code","ce31ddb7":"code","cad8150d":"code","9e13cbae":"code","13290329":"code","12e159c4":"code","49ed6771":"code","b9305d9d":"code","ba38569f":"code","fd0bd242":"code","82340383":"code","6f413266":"code","09271c0d":"code","75dc6f68":"code","e84e4ec3":"code","fcc2682a":"code","b7b8f575":"code","79fab8d4":"code","e1bc9beb":"code","f045b204":"code","3ae973ba":"code","a86e00e6":"code","39884ec8":"code","f411e920":"code","bb609652":"code","fc4b0441":"code","a7d60dc1":"code","f816a743":"code","77149d77":"code","6c1cfd9c":"code","a6e8ca12":"code","8f9f17b4":"markdown"},"source":{"a92d8143":"\n\nimport pandas as pd \n\ntrain_df = pd.read_csv(\"..\/input\/data.csv\")\ntest_df = train_df\ntrain_df.head()","2253e559":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'radius_mean',bins=20)\n\n","6a741cba":"#Textura\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'texture_mean',bins=20)","cde4ea15":"#Per\u00edmetro\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'perimeter_mean',bins=20)","77467263":"#Area\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'area_mean',bins=20)","eb93d916":"#Suavidade\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'smoothness_mean',bins=20)","48c2844c":"#Compacidade\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'compactness_mean',bins=20)","5f55fe43":"\n#Concavidade\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'concavity_mean',bins=20)","d8bfc352":"#Pontos c\u00f4ncavos\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'concave points_mean',bins=20)","ce31ddb7":"#Simetria\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'symmetry_mean',bins=20)","cad8150d":"#Dimens\u00e3o fractal\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'fractal_dimension_mean',bins=20)","9e13cbae":"#Raio\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'radius_se',bins=20)","13290329":"#Textura\ng = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'texture_se',bins=20)","12e159c4":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'perimeter_se',bins=20)","49ed6771":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'area_se',bins=20)","b9305d9d":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'smoothness_se',bins=20)","ba38569f":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'compactness_se',bins=20)","fd0bd242":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'concavity_se',bins=20)","82340383":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'concave points_se',bins=20)","6f413266":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'symmetry_se',bins=20)","09271c0d":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'fractal_dimension_se',bins=20)","75dc6f68":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'radius_worst',bins=20)","e84e4ec3":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'texture_worst',bins=20)","fcc2682a":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'perimeter_worst',bins=20)","b7b8f575":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'area_worst',bins=20)","79fab8d4":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'smoothness_worst',bins=20)","e1bc9beb":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'compactness_worst',bins=20)","f045b204":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'concavity_worst',bins=20)","3ae973ba":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'concave points_worst',bins=20)","a86e00e6":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'symmetry_worst',bins=20)","39884ec8":"g = sns.FacetGrid(train_df,col='diagnosis')\ng.map(plt.hist,'fractal_dimension_worst',bins=20)","f411e920":"train_df.describe(include=['O'])","bb609652":"train_df['Unnamed: 32'] = train_df['Unnamed: 32'].fillna('0')\ntrain_df.isnull().sum().sort_values(ascending=False)","fc4b0441":"\n\ntrain_df = train_df.drop(\"id\",axis=1)\ntrain_df.drop(\"area_se\",axis=1)\ntrain_df.drop(\"symmetry_se\",axis=1)\ntrain_df.drop(\"texture_worst\",axis=1)\ntrain_df.drop(\"smoothness_worst\",axis=1)\ntrain_df.drop(\"concave points_worst\",axis=1)\ntrain_df.drop(\"symmetry_worst\",axis=1)\ntrain_df.drop(\"smoothness_se\",axis=1)\ntrain_df.drop(\"compactness_se\",axis=1)\ntrain_df.drop(\"texture_se\",axis=1)\ntrain_df.drop(\"symmetry_mean\",axis=1)\ntrain_df.drop(\"Unnamed: 32\",axis=1)\n\n\n\ntrain_df.head()\n\n","a7d60dc1":"classe = train_df['diagnosis']\natributos = train_df.drop('diagnosis',axis=1)","f816a743":"classe.head()\natributos.head()","77149d77":"from sklearn.model_selection import train_test_split\natributos_train, atributes_test,classe_train ,classe_test = train_test_split(atributos,classe,test_size=0.25)\n","6c1cfd9c":"from sklearn.tree import DecisionTreeClassifier\ndtree = DecisionTreeClassifier(criterion='entropy', splitter='random', max_depth=3, random_state =0)\nmodel = dtree.fit(atributos_train, classe_train)","a6e8ca12":"from sklearn.metrics import accuracy_score\nclasse_pred = model.predict(atributes_test)\nacc = accuracy_score(classe_test, classe_pred)\nprint(\"My Decision Tree acc is {}\".format(acc))","8f9f17b4":"<h4>Alunos:<\/h4>Paulo Andr\u00e9 <br>\nEvison Pacheco<br>\nAugusto Castro<br>\nMarcos Martins"}}