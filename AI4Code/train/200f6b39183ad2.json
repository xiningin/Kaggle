{"cell_type":{"dc6f75da":"code","28cb0dc7":"code","8162218e":"code","c8051c16":"code","34691dad":"code","ff2d23a1":"code","43335f73":"code","21215246":"code","cfa074b6":"code","59616683":"code","34dfb8c8":"code","545fffc6":"code","8a121030":"code","b2d74a65":"code","09f3c973":"code","6e61b37b":"code","d711f571":"code","538b9aee":"code","749d012d":"code","f89034fd":"code","536bb578":"code","628c553a":"code","8aad2aaa":"markdown","0d12b7fe":"markdown","b865cf8e":"markdown","621d2c6e":"markdown","a68a187d":"markdown","7bdbe7eb":"markdown","1f3b63a4":"markdown","3a437387":"markdown","6634e4c1":"markdown","c8711310":"markdown","ad9d2884":"markdown","53db8487":"markdown","08824608":"markdown","9b8e6e6e":"markdown","2d8736a0":"markdown","29d31765":"markdown","a8187934":"markdown","2dda686a":"markdown","e92569a0":"markdown","f4d16248":"markdown","2621fc61":"markdown","77a8a745":"markdown","4414c0b9":"markdown","5a69027c":"markdown","29b33aec":"markdown","c1a73c51":"markdown","4fa926b2":"markdown","3864a0d7":"markdown","1bda2376":"markdown","9b7584dd":"markdown","38477114":"markdown","ca35fcd8":"markdown"},"source":{"dc6f75da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom statistics import mean\nfrom sklearn.metrics import classification_report, accuracy_score\nfrom pandas.plotting import scatter_matrix\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","28cb0dc7":"#importing the dataset\ndf =pd.read_csv('..\/input\/chocolate-bar-ratings\/flavors_of_cacao.csv')\ndf.head()","8162218e":"#having a look at some of the basic info about the data\ndef info(df):\n    \n    # Shape of the dataframe\n    print(\"Number of Instances:\",df.shape[0])\n    print(\"Number of Features:\",df.shape[1])\n    \n    # Summary Stats\n    print(\"\\nSummary Stats:\")\n    print(df.describe())\n    \n    # Missing Value Inspection\n    print(\"\\nMissing Values:\")\n    print(df.isna().sum())\n\ninfo(df)\n","c8051c16":"#changing the feature names and making it more readable\n\ncols = list(df.columns)\n\n# replacing newline characters and spaces in the feature names\ndef rec_features(feature_names):\n    rec_feat = []\n    for f in feature_names:\n        rec_feat.append(((f.casefold()).replace(\"\\n\",\"_\")).replace(\" \",\"_\"))\n    return rec_feat\n\nprint(\"Feature Names before Cleaning:\")\nprint(cols)\nprint(\"\\nFeature Names after Cleaning:\")\nprint(rec_features(cols))\n\n# handling the feature name company\nnew_feature_names = rec_features(cols)\nnew_feature_names[0] = \"company\"\n\n# Re-assigning feature names\ndf=df.rename(columns=dict(zip(df.columns,new_feature_names)))\ndf.dtypes","34691dad":"# having a look into the missing values\ndf[['bean_type', 'broad_bean_origin']].head()","ff2d23a1":"#Having a look at all the values \nprint(df['bean_type'].value_counts().head())","43335f73":"#Having a look at what the missing spaces are encoded as\nlist(df['bean_type'][0:5])","21215246":"# Replacing spaces with NONE to make the dataset cleaner\n\ndef space(x):\n    if(x is \"\\xa0\"):\n        return \"None\"\n    \ndf['bean_type'] = df['bean_type'].apply(space)\ndf.head()","cfa074b6":"# converting cocoa % to numerical values\ndf['cocoa_percent']=df['cocoa_percent'].str.replace('%','').astype(float)\/100\ndf.head()","59616683":"dcoco = df.groupby('review_date').aggregate({'cocoa_percent':'mean'})\ndcoco = dcoco.reset_index()\n\n# Plotting\nsns.set()\nplt.figure(figsize=(15, 4))\nax = sns.lineplot(x='review_date', y='cocoa_percent', data=dcoco)\nax.set(xticks=dcoco.review_date.values)\nplt.xlabel(\"\\nDate of Review\")\nplt.ylabel(\"Average Cocoa Percentage\")\nplt.title(\"Cocoa Percentage patterns over the years \\n\")\nplt.show()","34dfb8c8":"drate = df.groupby('review_date').aggregate({'rating':'mean'})\ndrate = drate.reset_index()\n\n# Plotting\nsns.set()\nplt.figure(figsize=(15, 4))\nax = sns.lineplot(x='review_date', y='rating', data=drate)\nax.set(xticks=drate.review_date.values)\nplt.xlabel(\"\\nDate of Review\")\nplt.ylabel(\"Average Rating\")\nplt.title(\"Average Rating over the years \\n\")\nplt.show()\n","545fffc6":"# Top 5 companies in terms of chocolate bars \nd = df['company'].value_counts().sort_values(ascending=False).head(5)\nd = pd.DataFrame(d)\nd = d.reset_index() # dataframe with top 5 companies\n\n# Plotting\nsns.set()\nplt.figure(figsize=(10,4))\nsns.barplot(x='index', y='company', data=d)\nplt.xlabel(\"\\nChocolate Company\")\nplt.ylabel(\"Number of Bars\")\nplt.title(\"Top 5 Companies in terms of Chocolate Bars\\n\")\nplt.show()","8a121030":"# Top 5 companies in terms of average ratings\nd2 = df.groupby('company').aggregate({'rating':'mean'})\nd2 = d2.sort_values('rating', ascending=False).head(5)\nd2 = d2.reset_index()\n\n# Plotting\nsns.set()\nplt.figure(figsize=(20, 6))\nsns.barplot(x='company', y='rating', data=d2)\nplt.xlabel(\"\\nChocolate Company\")\nplt.ylabel(\"Average Rating\")\nplt.title(\"Top 5 Companies in terms of Average Ratings \\n\")\nplt.show()","b2d74a65":"# Average rating over the years wrt companies\ntop5_dict = {}\n# Top 5 companies in terms of chocolate bars in this dataset\nd = df['company'].value_counts().sort_values(ascending=False).head(5)\nd = pd.DataFrame(d)\nd = d.reset_index() # dataframe with top 5 companies\nfor element in list(d['index']):\n    temp = df[df['company']==element]\n    top5_dict[element]=temp\n\ntop5_list = list(top5_dict.keys())\n\n# Rating over the years\nd7 = df.groupby(['review_date', 'company']).aggregate({'rating':'mean'})\nd7 = d7.reset_index()\nd7 = d7[d7['company'].isin(top5_list)]\n\n\n# Plotting\nsns.set()\nplt.figure(figsize=(15, 4))\nax = sns.lineplot(x='review_date', y='rating', hue=\"company\", data=d7, palette=\"husl\")\nax.set(xticks=d7.review_date.values)\nplt.xlabel(\"\\nDate of Review\")\nplt.ylabel(\"Average Rating\")\nplt.title(\"Average Rating over the years (Top 5 Producer Companies)\\n\")\nplt.show()","09f3c973":"soma = df[df['company']=='Soma']\nd3 = soma['broad_bean_origin'].value_counts().sort_values(ascending=False).head(5)\nd3 = pd.DataFrame(d3)\nd3 = d3.reset_index()\n# Plotting\nsns.set()\nplt.figure(figsize=(10, 6))\nsns.barplot(x='index', y='broad_bean_origin', data=d3)\nplt.xlabel(\"\\nBroad Bean Origin\")\nplt.ylabel(\"Number of Chocolate Bars\")\nplt.title(\"Where does Soma get it's beans from? \\n\")\nplt.show()","6e61b37b":"#Soma's performance over the years\nd4 = soma.groupby('review_date').aggregate({'rating':'mean'})\nd4 = d4.reset_index()\n\n# Plotting\nplt.figure(figsize=(10, 6))\nsns.lineplot(x='review_date', y='rating', data=d4)\nplt.xlabel(\"\\nDate of Review\")\nplt.ylabel(\"Average Rating\")\nplt.title(\"Soma's Average Rating over the years\\n\")\nplt.show()","d711f571":"unsatisfactory = df[df['rating'] < 3.0]\nsatisfactory = df[(df['rating'] >= 3.0) & (df.rating < 4)]\npre_elite = df[df['rating'] >= 4.0]\nlabel_names=['Unsatisfactory','Above Satisfactory','Premium']\nsizes = [unsatisfactory.shape[0],satisfactory.shape[0],pre_elite.shape[0]]\n\n# Making the donut plot\nexplode = (0.05,0.05,0.05)\nmy_circle=plt.Circle((0,0),0.7,color='white')\nplt.figure(figsize=(7,7))\nplt.pie(sizes,labels=label_names,explode=explode,autopct='%1.1f%%',pctdistance=0.85,startangle=90,shadow=True)\nfig=plt.gcf()\nfig.gca().add_artist(my_circle)\nplt.axis('equal')\nplt.tight_layout()\nplt.show()","538b9aee":"# The counts of each rating\nr=list(df['rating'].value_counts())\nrating=df['rating'].value_counts().index.tolist()\nrat=dict(zip(rating,r))\nfor key,val in rat.items():\n    print ('Rating:',key,'Reviews:',val)\nplt.figure(figsize=(10,5))\nsns.countplot(x='rating',data=df)\nplt.xlabel('Rating of chocolate bar',size=12,color='blue')\nplt.ylabel('Number of Chocolate bars',size=12,color='blue')\nplt.show()\n","749d012d":"#Top 10 cocoa % is taken\nplt.figure(figsize=(10,5))\ndf['cocoa_percent'].value_counts().head(10).sort_index().plot.bar()\nplt.xlabel('Percentage of Cocoa',size=12)\nplt.ylabel('Number of Chocolate bars',size=12)\nplt.show()","f89034fd":"countries=df['broad_bean_origin'].value_counts().index.tolist()[:5]\nsatisfactory={} \nfor j in countries:\n    c=0\n    b=df[df['broad_bean_origin']==j]\n    br=b[b['rating']>=3] \n    for i in br['rating']:\n        c+=1\n        satisfactory[j]=c    \n\n# Code to visualize the countries that give best cocoa beans\nli=satisfactory.keys()\nplt.figure(figsize=(10,5))\nplt.bar(range(len(satisfactory)), satisfactory.values(), align='center',color=['#a22a2a','#511515','#e59a9a','#d04949','#a22a2a'])\nplt.xticks(range(len(satisfactory)), list(li))\nplt.xlabel('\\nCountry')\nplt.ylabel('Number of chocolate bars')\nplt.title(\"Top 5 Broad origins of the Chocolate Beans with a Rating above 3.0\\n\")\nplt.show()\n\nprint(satisfactory)","536bb578":"print ('Top Chocolate Producing Countries in the World\\n')\ncountry=list(df['company_location'].value_counts().head(10).index)\nchoco_bars=list(df['company_location'].value_counts().head(10))\nprod_ctry=dict(zip(country,choco_bars))\nprint(df['company_location'].value_counts().head())\n\nplt.figure(figsize=(10,5))\nplt.hlines(y=country,xmin=0,xmax=choco_bars,color='skyblue')\nplt.plot(choco_bars,country,\"o\")\nplt.xlabel('Country')\nplt.ylabel('Number of chocolate bars')\nplt.title(\"Top Chocolate Producing Countries in the World\")\nplt.show()","628c553a":"countries=country\nbest_choc={}\nfor j in countries:\n    c=0\n    b=df[df['company_location']==j]\n    br=b[b['rating']>=4] \n    for i in br['rating']:\n        c+=1\n        best_choc[j]=c    \n\n\nli=best_choc.keys()\n# The lollipop plot\nplt.hlines(y=li,xmin=0,xmax=best_choc.values(),color='darkgreen')\nplt.plot(best_choc.values(),li,\"o\")\nplt.xlabel('Country')\nplt.ylabel('Number of chocolate bars')\nplt.title(\"Top Chocolate Producing Countries in the World (Ratings above 4.0)\")\nplt.show()\nprint(best_choc)","8aad2aaa":"- Venezuela has the largest number of chocolate bars rated above 3.0","0d12b7fe":"### Importing the libraries and dataset","b865cf8e":"- Tobago Estate (Pralus) has the highest rating of 4.0 ","621d2c6e":"- premium chocolate bars are produced very rarely (Only 5.6% of total chocolate bars produced)","a68a187d":"## Distribution of chocolate bars according to their cocoa percentage","7bdbe7eb":"- Most bars have been rated at 3.5.","1f3b63a4":"## Counts of each rating of chocolate bars","3a437387":"### Some Observations from the above graph:\n- The highest cocoa percentage in a chocolate bar was in 2008 and was approx 73%.\n- The lowest percentage of cocoa followed in the very next year, 2009 and was approx 70%.\n- There was a rise in cocoa percentage in chocolate from the year 2009 to 2013\n- From 2014 there was a steady decline in cocoa percentage ","6634e4c1":"## Chocolate companies","c8711310":"## Analysing the top chocolate bar producing countries (in terms of quantity)","ad9d2884":"## Dealing with missing values\nIn the above code cells, as per the df.info command, we saw that only the features bean_type and broad_bean_origin have 1 missing value each ","53db8487":"- USA is the top chocolate producing country","08824608":"- Venezuela is the largest provider of Soma's beans.","9b8e6e6e":"- The worst average rating Soma ever got came in the year 2009 at 3.42, when it was first reviewed\n- The highest average rating achieved came in 2010 at 3.75 \n- Between 2012 and 2014, Soma's average rating saw a slump which revived after 3.75 was achieved in 2015 again; it slumped to 3.61 in 2016","2d8736a0":"## Cleaning the data","29d31765":"### Some observations\n- The lowest rating was around 3 and it came in 2008.\n- Since then to 2011, there was an increase in average ratings and in 2011 it was at 3.25.\n- In 2017 the rating lies at its apex at around 3.31.\n\n\nInterestingly, In the year **2008**, the **cocoa percentage** in chocolate was **highest** and the **average rating** happened to be the **lowest**. \n\nThe following year in **2009**, the chocolate bars saw a **steep decline in cocoa percentage**, with an **increase in average rating**. This might indicate that *chocolate bar producers decreased their cocoa content to make better chocolates*.","a8187934":"Location where Soma gets their beans from","2dda686a":"## **Rating** of chocolate bars over the years","e92569a0":"## Where the best cocoa beans are grown (based on rating)","f4d16248":"## **Cocoa percentage** in chocolate over the years\n","2621fc61":"\n- USA produces the highest number of 4 and above rated chocolate bars, followed by France","77a8a745":"## Analysing the largest chocolate bar producer - Soma","4414c0b9":"## **Dataset overview**\n Chocolate is one of the most popular candies in the world. Each year, residents of the United States collectively eat more than 2.8 billions pounds. However, not all chocolate bars are created equal! This dataset contains expert ratings of over 1,700 individual chocolate bars, along with information on their regional origin, percentage of cocoa, the variety of chocolate bean used and where the beans were grown.\n\nIn this notebook, I have explored the chocolate bar rating dataset, and tried to draw conclusions from it. If you like my work, please upvote! :D\n\n---","5a69027c":"But we can see bean_type feature clearly has more missing values","29b33aec":"# Exploring the data\n---","c1a73c51":"- Pralus and Bonnat were the earliest companies among these top 5 to be reviewed in 2006, while A. Morin was the latest at 2012\n- Both Bonnat and Pralus started around with the same average rating in 2006 of around 3.40, but in the very next year of 2007, whle Pralus hit it's highest ever rating of 4.00, Bonnat slumped to it's lowest of 2.50. As of 2016, Bonnat stands 0.25 rating points clear of Pralus on the yearly average\n- The worst rating among these top 5 came in 2009 when Pralus scored only a 2.00 on average. This was a result of Pralus's steady decline from 4.00 in 2007 to 2.00 in 2009.\n- Coincidentally, the highest rating was just a year back, 2008 when Bonnat hit 4.00 (a feat Pralus had achieved in 2007)\n- From 2011 to 2015, Pralus has shown consistency in the average ratings\n- A. Morin was reviewed only for the years 2012, 2013, 2014, 2015 and 2016. As of 2016, it's got the highest average rating at 3.75\n- Fresco has not been reviewed after 2014, and its last review gave it around 3.30 on average rating\n- Soma was first reviewed in 2009 where it got around 3.42. In it's latest review in 2016, it has a 3.61\n- Soma's lowest rating came in 2009 (3.42) and this is still higher than the lowest ratings other companies have got over all years","4fa926b2":"### Visualizing Soma's chocolate bar rating","3864a0d7":"- Majority of bars have 70% cocoa, followed by 75% and 72%.","1bda2376":"So we have **887** instances in **bean_type** where space is encoded as **\\xa0**","9b7584dd":"**Soma** produces max number of chocolate bars.","38477114":"# Categorizing chocolate bars based on their rating","ca35fcd8":"## Visualizing countries that produce best chocolates"}}