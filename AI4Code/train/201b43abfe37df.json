{"cell_type":{"70a33c54":"code","37afe360":"code","61ca2502":"code","ac6f62cf":"code","f1f983a8":"code","4189cf3c":"code","dece6d5e":"code","ce2a4dd4":"code","0dcaa551":"code","3da55929":"code","441f91bb":"code","1406520b":"code","92c9218b":"code","669079f5":"markdown"},"source":{"70a33c54":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37afe360":"import pandas as pd\nimport numpy as np","61ca2502":"df = pd.read_csv('\/kaggle\/input\/blood-type-distribution-by-country\/bloodtypes.csv',index_col=[0]);","ac6f62cf":"df.head()","f1f983a8":"df.info()","4189cf3c":"#Change the datatype for population\ndf['Population']=df['Population'].str.replace(',', '').astype(float)","dece6d5e":"col = df.columns[2::]\ncol.astype(str)\ncol","ce2a4dd4":"#change the datatype for the rest of the columns and convert % to number\nfor i in range(len(col)):\n    df[col[i]] = df[col[i]].str.replace(\"%\",\"\").astype(float)\n    df[col[i]] = df[col[i]].apply(lambda x: (x\/100.0)*df['Population']);","0dcaa551":"#checking the Datatypes\ndf.info()","3da55929":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set_style(\"darkgrid\")","441f91bb":"plt.boxplot(df['O+'])","1406520b":"#will made abobe line dynamic\ncol_list_for_box_plot = []\nfor i in range(len(col)):\n    col_list_for_box_plot.append(df[col[i]])    \ncol_list_for_box_plot","92c9218b":"fig = plt.figure(figsize =(24, 14))\n \n# Creating plot\nbp = plt.boxplot(col_list_for_box_plot)\n","669079f5":"#### "}}