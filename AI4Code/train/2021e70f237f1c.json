{"cell_type":{"d5820f42":"code","4dc1868a":"code","0a3dedc1":"code","11a8f5b8":"code","82e50269":"code","49d55f42":"code","dc3eb96e":"code","0bb5f3d1":"code","235204f2":"code","5d4fcbde":"code","2a749334":"code","ace6c75b":"code","7debeb7d":"code","22289962":"code","e143d016":"code","ca78781f":"code","3476afb5":"code","ce0cbe98":"code","721ad8bd":"code","40208e08":"code","35d515a9":"code","be32cb6c":"code","d883e8f0":"code","38a036a3":"code","c49fbf11":"code","f48546b2":"code","b7f198ac":"code","73b1cadc":"code","b34ee2f9":"code","5b167708":"code","3cee6584":"code","ae8fbc39":"code","994f9b7c":"code","cf6f41f8":"code","dd179a62":"code","73a0bd7d":"markdown","b483ac1b":"markdown","6fc7c8d4":"markdown","53dd4aac":"markdown","871d8bb3":"markdown","55123cfb":"markdown","4a450cbe":"markdown","7a9fff19":"markdown","2cd67420":"markdown","650ed11c":"markdown","e38359e5":"markdown","85933eb2":"markdown","d3552d75":"markdown","9c02999c":"markdown","d4fd1d69":"markdown","cbe1437d":"markdown","4d134bca":"markdown","75c8932e":"markdown","81c9c8a4":"markdown","496fc12b":"markdown","f727904e":"markdown","6d981e6f":"markdown","0c7b9afd":"markdown","8bff26bb":"markdown","79ee9d8c":"markdown","786aae8f":"markdown","640548ea":"markdown","45dca412":"markdown","108af78c":"markdown","be86ce0d":"markdown","11e5d871":"markdown","5db44a44":"markdown","1ede0c13":"markdown","871d4629":"markdown","2d1901e0":"markdown","4368b962":"markdown","08690e7c":"markdown","923fa2cf":"markdown","715b8150":"markdown","c1861cbc":"markdown","9d0de46e":"markdown","bd924f3e":"markdown"},"source":{"d5820f42":"import numpy as np","4dc1868a":"from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","0a3dedc1":"print(np.__version__)","11a8f5b8":"np.zeros(10)\nnp.zeros(10,dtype=int)\nnp.zeros((3,2))","82e50269":"Z = np.zeros(10)\nZ\nZ[4] = 1\nZ","49d55f42":"np.arange(10,20)\nnp.linspace(10,20,5)","dc3eb96e":"Z = np.arange(20)\nZ = Z[::-1]\nprint(Z)","0bb5f3d1":"np.array([1, 2, 3], dtype = complex)","235204f2":"x = np.array([1, 2])   # Default datatype\nprint(x.dtype)\nx = np.array([1.0, 2.0])\nprint(x.dtype)\nx = np.array([1, 2], dtype=np.int64)\nprint(x.dtype) ","5d4fcbde":"np.arange(9).reshape(3,3)","2a749334":"np.nonzero([1,2,0,0,4,0])","ace6c75b":"np.eye(3)","7debeb7d":"Z = np.random.random((3,3,3))\nprint(Z)","22289962":"Z = np.random.random((5,5))\nZ\nZ.min()\nZ.max()\nZ.mean()","e143d016":"Z = np.ones((5,5))\nZ\nnp.pad(Z, pad_width=1, mode='constant', constant_values=0)","ca78781f":"print(0 * np.nan)\nprint(np.nan == np.nan)\nprint(np.inf > np.nan)\nprint(np.nan - np.nan)\nprint(np.nan in set([np.nan]))\nprint(0.3 == 3 * 0.1)","3476afb5":"a = np.arange(10)\na\n##(start:stop:step)\na[2:7:2] \na[4:]","ce0cbe98":"a = np.array([[1,2,3],[3,4,5],[4,5,6]]) \na \n# Returns array of items in the second column \na[...,1]\n# Will slice all items from the second row \na[1,...] \n# Will slice all items from column 1 onwards \na[...,1:]\n# Slicing using advanced index for column\na[1:3,[1,2]]","721ad8bd":"a = np.array([1,2,3,4]) \nb = np.array([10,20,30,40]) \na * b\n# First Array + Second Array\na = np.array([[0.0,0.0,0.0],[10.0,10.0,10.0],[20.0,20.0,20.0],[30.0,30.0,30.0]]) \nb = np.array([0.0,1.0,2.0]) \na + b","40208e08":"np.dot(np.ones((5,3)), np.ones((3,2)))\nnp.dot(np.array([[1,7],[2,4]]),np.array([[3,3],[5,2]]))","35d515a9":"Z = np.arange(11)\nZ\nZ[(3 < Z) & (Z <= 8)] *= -1\nZ\n# Will print the items greater than 5\nZ[Z > 5]","be32cb6c":"a = np.arange(0,60,5).reshape(3,4)\na\nfor x in np.nditer(a):\n    print(x,end=' ')\n# The flattened array is\na.flatten()\n# Transposed from (3,4) to (4,3)\na.T","d883e8f0":"a = np.array([[1,2],[3,4]])\nb = np.array([[5,6],[7,8]])\n# Horizontal stacking\nnp.hstack((a,b))\n# Vertical stacking\nnp.vstack((a,b)) ","38a036a3":"a = np.array([0,30,45,60,90])\n# Sine of different angles:\nnp.sin(a*np.pi\/180)\n# Tangent values for given angles:\nnp.tan(a*np.pi\/180)","c49fbf11":"a = np.array([[3,7,5],[8,4,3],[2,4,9]])\na\nnp.amin(a,axis=1)\nnp.amin(a,axis=0)\n# returns the range (maximum-minimum)\nnp.ptp(a,axis=1)\n# Applying mean() function along axis 0\nnp.mean(a, axis = 0) ","f48546b2":"yesterday = np.datetime64('today', 'D') - np.timedelta64(1, 'D')\ntoday     = np.datetime64('today', 'D')\ntomorrow  = np.datetime64('today', 'D') + np.timedelta64(1, 'D')\nprint(yesterday)\nprint(today)\nprint(tomorrow)","b7f198ac":"Z = np.arange('2016-07', '2016-08', dtype='datetime64[D]')\nprint(Z)","73b1cadc":"x = np.linspace(0,1,10,endpoint=False)[1:]\nprint(x)\naa = np.linalg.inv(x.reshape(3,3))\naa.dot(x.reshape(3,3))","b34ee2f9":"Z = np.random.random(10)\nZ[Z.argmax()] = 0\nprint(Z)","5b167708":"Z = np.arange(9).reshape(3,3)\nfor index, value in np.ndenumerate(Z):\n    print(index, value)","3cee6584":"X = np.random.rand(5, 5)\nY = X - X.mean(axis=1, keepdims=True)\nprint(Y)","ae8fbc39":"A = np.arange(25).reshape(5,5)\nA\nA[[0,1]] = A[[1,0]]\nprint(A)","994f9b7c":"Z = np.random.uniform(0,1,(10,10))\nU, S, V = np.linalg.svd(Z) # Singular Value Decomposition\nrank = np.sum(S > 1e-10)\nprint(rank)","cf6f41f8":"Z = np.arange(10000)\nnp.random.shuffle(Z)\nn = 5\nprint (Z[np.argpartition(-Z,n)[:n]])","dd179a62":"a = np.array([1,2,3,4,5]) \nnp.save('outfile',a)\nb = np.load('outfile.npy') \nb\n# with txt file format\na = np.array([1,2,3,4,5]) \nnp.savetxt('out.txt',a) \nb = np.loadtxt('out.txt') \nb ","73a0bd7d":"#### Print the numpy version","b483ac1b":"#### Horizontal and Vertical Stacking","6fc7c8d4":"#### Given a 1D array, negate all elements which are between 3 and 8, in place.","53dd4aac":"#### Vector of size 10 with values ranging from 0 to 1, both excluded.then find the inverse of the matrix.","871d8bb3":"Mentioned Above are the most important numpy functionality which every machine learning practitioner should know.","55123cfb":"#### Create a 3x3 matrix with values ranging from 0 to 8.","4a450cbe":"#### Creating the Complex number array","7a9fff19":"#### Numpy Statistical Functions","2cd67420":"![Alt Text](https:\/\/i.ibb.co\/2vcTD8w\/matrix-product.png)","650ed11c":"#### Load and Save data to npy & txt Format","e38359e5":"#### Broadcasting the array with multiplication and addition of arrays","85933eb2":"#### Slicing and Dicing 1D and 2D array with Advanced Indexing","d3552d75":"#### Reverse a vector (first element becomes last)","9c02999c":"![Alt Text](https:\/\/i.ibb.co\/8xPLvZW\/Thank-You.png)","d4fd1d69":"#### Print Multiple Outputs from the Cell","cbe1437d":"#### Print Result of expression involving nan & inf","4d134bca":"#### Find indices of non-zero elements from array \\[1,2,0,0,4,0\\] ","75c8932e":"#### Get all the dates corresponding to the month of July 2016","81c9c8a4":"#  Numpy For Machine Learning\n\nNumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed.\n\nNumPy is a Python package. It stands for 'Numerical Python'. It is a library consisting of multidimensional array objects and a collection of routines for processing of array.NumPy has in-built functions for linear algebra and random number generation\n","496fc12b":"### Conclusion","f727904e":"#### Create a vector with values ranging from 10 to 20","6d981e6f":"#### Create a 1D null vector of size 10 and 2D matrix by 2*2","0c7b9afd":"#### Multiply a 5x3 matrix by a 3x2 matrix (real matrix product)","8bff26bb":"#### Create a 3x3x3 array with random values","79ee9d8c":"#### Subtract mean of each row of a matrix","786aae8f":"#### DataType","640548ea":"#### Iterating Over all item in array and transposed the array","45dca412":"#### Swap two rows of an array","108af78c":"#### Get the n largest values of an array","be86ce0d":"![Alt Text](https:\/\/i.ibb.co\/ZHC17vD\/Broadcasting-Array.png)","11e5d871":"#### Get the dates of yesterday, today and tomorrow.","5db44a44":"#### Compute a matrix rank","1ede0c13":"![Alt Text](https:\/\/i.ibb.co\/rf6tYcb\/matrix.jpg)","871d4629":"#### Vector with size of 10 and replace the maximum value by 0","2d1901e0":"#### Create a 2d array and Pad with zeros","4368b962":"#### Create a null vector of size 10 but the fifth value set to 1.","08690e7c":"#### Import the numpy package","923fa2cf":"#### Create a 3x3 identity matrix","715b8150":"![Alt Text](https:\/\/i.ibb.co\/LkdVVgV\/numpy-logo.jpg)\n","c1861cbc":"#### Create a 5x5 array with random values and find the minimum and maximum values","9d0de46e":"#### Equivalent of enumerate for numpy arrays","bd924f3e":"#### Finding Sine and tan"}}