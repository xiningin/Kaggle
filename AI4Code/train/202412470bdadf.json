{"cell_type":{"22e972e1":"code","21811b76":"code","f77645ff":"code","6fbec6eb":"code","f2c5d6c9":"code","8350e1c2":"code","2ec32309":"code","3f0cd2ff":"code","916961b6":"code","7567f309":"code","6331d61d":"code","59cc9eb3":"code","0fcb9f77":"code","6d1a1d87":"code","0753ecb4":"code","74a3deda":"code","426abb74":"code","0810ec3a":"code","7c8f1109":"code","f09a87cc":"code","f95c44b5":"code","75574b04":"code","d4dab422":"code","23480785":"code","82ef2a05":"code","20d1f129":"code","64a10bd3":"markdown","3fb33232":"markdown","9f800de1":"markdown","ab129001":"markdown","259d0c57":"markdown","67c190b1":"markdown","74110463":"markdown","8cbf3efa":"markdown","93f464a9":"markdown","e3a91975":"markdown","15ec46eb":"markdown","6f6c72bb":"markdown","eacf0e5f":"markdown"},"source":{"22e972e1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","21811b76":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport sklearn\n%matplotlib inline","f77645ff":"train = pd.read_csv('..\/input\/iris\/Iris.csv', index_col=0)","6fbec6eb":"train.head()","f2c5d6c9":"train.info()","8350e1c2":"train.describe()","2ec32309":"print(train['Species'].nunique())\nprint(train['Species'].unique())","3f0cd2ff":"fig, ax = plt.subplots(2,2, figsize=(12,8))\nax[0,0] = sns.distplot(train['SepalLengthCm'], ax=ax[0,0])\nax[0,1] = sns.distplot(train['SepalWidthCm'], ax=ax[0,1])\nax[1,0] = sns.distplot(train['PetalLengthCm'], ax=ax[1,0])\nax[1,1] = sns.distplot(train['PetalWidthCm'], ax=ax[1,1])","916961b6":"species = train.groupby('Species').mean()\nspecies","7567f309":"fig,ax = plt.subplots(2,2,figsize=(16,11))\nax[0,0] = sns.boxplot(x=train['Species'],y=train['SepalLengthCm'], ax=ax[0,0])\nax[0,0].set_title('SepalLengthCm')\n\nax[0,1] = sns.boxplot(x=train['Species'],y=train['SepalWidthCm'], ax=ax[0,1])\nax[0,1].set_title('SepalWidthCm')\n\nax[1,0] = sns.boxplot(x=train['Species'],y=train['PetalLengthCm'], ax=ax[1,0])\nax[1,0].set_title('PetalLengthCm')\n\nax[1,1] = sns.boxplot(x=train['Species'],y=train['PetalWidthCm'], ax=ax[1,1])\nax[1,1].set_title('PetalWidthCm')","6331d61d":"plt.figure(figsize=(7,7))\nsns.heatmap(train.corr(),annot = True)","59cc9eb3":"sns.pairplot(train,hue='Species')","0fcb9f77":"fig, ax= plt.subplots(1,2,figsize=(12,5))\nax[0] = sns.scatterplot(x=train['PetalLengthCm'],y=train['SepalWidthCm'],hue=train['Species'],ax=ax[0])\nax[0].set_title('PetalLengthCm x SepalWidhtCm')\nax[1] = sns.scatterplot(x=train['PetalWidthCm'],y=train['PetalLengthCm'],hue=train['Species'],ax=ax[1])\nax[1].set_title('PetalWidthCm x PetalLengthCm')","6d1a1d87":"y = train['Species']\nx = train.drop('Species',axis=1)","0753ecb4":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","74a3deda":"xtrain,xtest,ytrain,ytest = train_test_split(x,y,random_state=0,test_size=0.3)","426abb74":"from sklearn import svm\nmodel_svm = svm.SVC()\nmodel_svm.fit(xtrain,ytrain)\nsvm_predict = model_svm.predict(xtest)\nmodel_svm_acc = accuracy_score(ytest,svm_predict)\nprint(f'Accuracy score: {model_svm_acc}')","0810ec3a":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier(random_state=1)\nmodel_tree = model.fit(xtrain,ytrain)\nmodel_tree_predict = model.predict(xtest)\nmodel_tree_acc = accuracy_score(ytest,model_tree_predict)\nmodel_tree_acc","7c8f1109":"from sklearn.ensemble import RandomForestClassifier\nfor i in [100,200,300,400,500]:    \n    model_random_forest = RandomForestClassifier(n_estimators=i,random_state = 42)\n    model_random_forest.fit(xtrain,ytrain)\n    model_forest_predict = model.predict(xtest)\n    model_forest_accuaracy = accuracy_score(ytest,model_forest_predict)\n    print(model_forest_accuaracy)","f09a87cc":"from sklearn.linear_model import LogisticRegression\nlogist_regression = LogisticRegression(max_iter=200,random_state=42)\nlogist_regression.fit(xtrain,ytrain)\npredict = logist_regression.predict(xtest)\nlogist_regression = accuracy_score(ytest,predict)\nlogist_regression","f95c44b5":"from sklearn.neighbors import KNeighborsClassifier\nmodel_KN=KNeighborsClassifier(n_neighbors=5) \nmodel_KN.fit(xtrain,ytrain)\nKN_predict =model_KN.predict(xtest)\nKN_accuracy = accuracy_score(ytest,KN_predict)\nKN_accuracy","75574b04":"from sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import cross_val_score","d4dab422":"index = np.arange(1,6)","23480785":"my_pipeline = Pipeline(steps=[('model', LogisticRegression(max_iter=200))])\nscores =cross_val_score(my_pipeline, x, y,\n                              cv=len(index),scoring='accuracy')","82ef2a05":"plt.figure(figsize=(7,7))\nsns.lineplot(x=index,y=scores)\nplt.ylabel('Accuracy')\nplt.xlabel('Cv')\nplt.title('Accuracy with LogisticRegression')","20d1f129":"print(scores.mean())","64a10bd3":"**RandomForestClassifier**","3fb33232":"Looking at this heat map correlation, we can see high correlation between PetalLengthCm and PetalWidthCm and low correlation between SepalWidhtCm and PetalLengthCm","9f800de1":"How many species we have?","ab129001":"We have a mean of each column by specie","259d0c57":"**First Model:** C-Support Vector Classification.","67c190b1":"Start with model and split train\/test. Test size will be 30% of the dataset, and random_state = 0)","74110463":"Now, boxplot of each column, and  we can see the difference between them\n\n\n**What is boxplot?**\n\nIn descriptive statistics, a box plot or boxplot is a method for graphically depicting groups of numerical data through their quartiles.\nBox plots may also have lines extending from the boxes (whiskers) indicating variability outside the upper and lower quartiles, hence the terms box-and-whisker plot and box-and-whisker diagram.","8cbf3efa":"Let's see the distribution of the data in each of the columns","93f464a9":"**KNeighborsClassifier**","e3a91975":"**DecisionTreeClassifier**","15ec46eb":"Sccaterplot of **PetalLengthCm x SepalWidhtCm** and **PetalWidthCm x PetalLengthCm**\n\n\n**What is scatterplot?**\n\nA scatter plot is a type of plot or mathematical diagram using Cartesian coordinates to display values for typically two variables for a set of data. If the points are coded (color\/shape\/size), one additional variable can be displayed. The data are displayed as a collection of points, each having the value of one variable determining the position on the horizontal axis and the value of the other variable determining the position on the vertical axis","6f6c72bb":"**LogisticRegression:**","eacf0e5f":"**Evaluate a score by cross-validation**"}}