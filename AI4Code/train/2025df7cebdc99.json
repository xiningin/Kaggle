{"cell_type":{"9b1fb944":"code","07e05633":"code","be0cc2da":"code","60f3c627":"code","1f6816a0":"code","5dda067c":"code","c0d496f8":"code","3f5b2994":"code","5f7ebcba":"code","e07cb0b2":"code","b9365285":"code","c858a539":"code","0a5816dc":"code","d13f8f43":"code","fe6160a0":"code","b7a288b8":"code","7df31385":"code","f8ca0ebd":"code","acd28418":"code","c2788ef1":"code","6021174b":"code","a8fe1683":"code","8e0fb7ac":"code","0c7da102":"code","bee58be1":"code","f9b009a2":"code","515ebb54":"code","51c87caa":"code","43d3a4dc":"code","d42db372":"markdown","2df508b6":"markdown","7f976e69":"markdown","1accc0f2":"markdown","02f7cbd6":"markdown","7e97a9df":"markdown","d5bab373":"markdown","efdfa2d4":"markdown","8408cda8":"markdown","a4024af1":"markdown","16d9c5a0":"markdown","9772e05d":"markdown","73a9f010":"markdown","e39e2130":"markdown","67aa3d32":"markdown","1dc8639d":"markdown","85df7f26":"markdown","40c676fc":"markdown","fb7ea215":"markdown","64dc2200":"markdown"},"source":{"9b1fb944":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","07e05633":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","be0cc2da":"odi_data = pd.read_csv('..\/input\/cricket-odi-results\/ODIMatchResults_Inn.csv')\nodi_data","60f3c627":"odi_data.info()","1f6816a0":"sns.heatmap(odi_data.isnull())","5dda067c":"odi_data['Year'] = odi_data['Date'].apply(lambda date : date.split(\" \")[2])\nodi_data['Month']  = odi_data['Date'].apply(lambda date : date.split(\" \")[1])\nodi_data.drop('Date',axis=1,inplace=True)\n","c0d496f8":"odi_data.head()","3f5b2994":"ind_aus = odi_data[((odi_data['team1'] == 'Australia')&(odi_data['team2']== 'India'))|((odi_data['team2'] == 'Australia')&(odi_data['team1']== 'India'))]\nind_aus","5f7ebcba":"ind_df = ind_aus[ind_aus['team1']=='India']\naus_df = ind_aus[ind_aus['team1']=='Australia']\n\n","e07cb0b2":"ind_aus_inn1 = ind_aus[ind_aus['Inn']==1]\nind_aus_chase = ind_aus[ind_aus['Inn']==2]","b9365285":"ind_df_1st = ind_df[ind_df['Inn']==1]\nind_df_2nd = ind_df[ind_df['Inn']==2]\naus_df_1st = aus_df[aus_df['Inn']==1]\naus_df_2nd = aus_df[aus_df['Inn']==2]","c858a539":"px.histogram(ind_df_1st['runs'],labels = {'value' : 'India : Runs scored batting 1st'},nbins=30) # color of histogram bars)","0a5816dc":"px.histogram(aus_df_1st['runs'],labels = {'value' : 'Australia : Runs scored batting 1st'},nbins=30,color_discrete_sequence=['indianred']) # color of histogram bars)","d13f8f43":"px.histogram(ind_df_2nd['runs'],labels = {'value' :'Inda : Runs scored batting 2nd'},nbins=30, ) # color of histogram bars)","fe6160a0":"px.histogram(aus_df_2nd['runs'],labels = {'value' :'Australia : Runs scored batting 2nd'},nbins=30, color_discrete_sequence=['indianred']) # color of histogram bars)","b7a288b8":"plt.figure(figsize=(15,10))\nax = sns.boxplot(x = 'Year',y = 'runs',data=ind_aus_inn1,palette = 'rainbow');\nax.set_xlabel('Years',fontsize = 15)\nax.set_ylabel('Runs scored in the 1st innings',fontsize=15);","7df31385":"plt.figure(figsize=(15,10))\nax = sns.boxplot(x = 'Year',y = 'runs',data=ind_aus_chase,palette = 'coolwarm');\nax.set_xlabel('Years',fontsize = 15)\nax.set_ylabel('Runs scored while chasing',fontsize=15);","f8ca0ebd":"plt.figure(figsize=(25,10))\nplt.xticks(rotation = 30)\nsns.countplot('Ground',hue = 'result',data = ind_aus_inn1,palette = 'Set1' )\nplt.xlabel('Venue',fontsize = 30)\nplt.ylabel('Count',fontsize = 30);\n","acd28418":"plt.figure(figsize=(8,6))\nsns.stripplot(x = 'team1',y = 'rpo',data = ind_aus_inn1);\nplt.xlabel('Team',fontsize = 15)\nplt.ylabel('Run Rate bating 1st',fontsize = 15) ;","c2788ef1":"plt.figure(figsize=(8,6))\nsns.stripplot(x = 'team1',y = 'rpo',data = ind_aus_chase);\nplt.xlabel('Team',fontsize = 15)\nplt.ylabel('Run Rate batting 2nd',fontsize = 15) ;","6021174b":"fig = px.pie(ind_df_1st,values = 'Inn',names = 'result')\nfig.show()","a8fe1683":"ind_df_2nd['Inn'] = ind_df_2nd['Inn']\/2 #for representation of pie chart","8e0fb7ac":"fig = px.pie(ind_df_2nd,values = 'Inn',names = 'result')\nfig.show()","0c7da102":"plt.figure(figsize=(25,10))\nplt.xticks(rotation = 30)\nsns.countplot('Year',hue = 'result',data = ind_df,palette = 'rainbow' )\nplt.xlabel('Yearwise results for India',fontsize = 30)\nplt.ylabel('Count',fontsize = 30);","bee58be1":"ind_aus['Year'] = ind_aus['Year'].astype('int')\nlast_5_year = ind_aus[ind_aus['Year']>=2015]\n","f9b009a2":"match_1_2 = last_5_year[last_5_year['Ground']=='Sydney']\nmatch_1_2","515ebb54":"match_1_2[(match_1_2['result']=='won')&(match_1_2['Inn']==1)]['runs'].mean()","51c87caa":"match_1_2[(match_1_2['result']=='won')&(match_1_2['Inn']==2)]['runs'].mean()","43d3a4dc":"match_3 = last_5_year[last_5_year['Ground']=='Canberra']\nmatch_3","d42db372":"***Results when India bats 1st***","2df508b6":"**These plots clearly depict that the scoring capablity of the teams in one day cricket has increased with time. Mean batting scores in 1985 used to be 150 which rose to around 300 till 2020.**","7f976e69":"# Data Visualization","1accc0f2":"**India has been more consistent chasing runs - 275 or above than Australia.**","02f7cbd6":"***Results while India bats 2nd***","7e97a9df":"**Loading the important libraries**","d5bab373":"![image.png](attachment:image.png)","efdfa2d4":"**Match 3, Manuka Oval Canberra**","8408cda8":"**Match 1-2, SCG Sydney**","a4024af1":"**Loading the Data**","16d9c5a0":"**India's runrate while chasing drops below 6 while Aussies have been chasing the runs with higher runrate. Batting in the first inning, both the teams have performed well considering the runrate.**","9772e05d":"**Trends in Result while batting first in different venues -**","73a9f010":"**While India has been consistent at chasing scores at higher runrate(5 - 7 and 7+ on quite many games), Australia has been more consistent in setting the  target at high runrate and eventually setting big targets(300+ in 14 matches) as depicted in previous plots.**","e39e2130":"**Clearly both the teams have been consistent in  putting big runs on board battting 1st.**","67aa3d32":"In this Notebook we will look upon the all time Ind vs Aus ODI cricket analysis using Data Visualization and also anlyse previous 5 year ODI matches between the two teams for Ind vs Aus ODI 2020.","1dc8639d":"**There is no null values in the data!**","85df7f26":"# Preparing the Data","40c676fc":"**On both the venues, Australia has defeated India 3\/4 times. All the 4 games have been high scoring games. On venue 1, the team doing the batting 1st should look for a big target close to 340 in order to secure the victory else it would be a tough fight! Same goes with venue 2.**","fb7ea215":"***Australia has been a clear boss in the early years of ODI cricket. But in the recent years, India has dethroned Australian dominance from One Day Crciket. However it has been a tough compition over all.***","64dc2200":"***Analyse for Ind vs Aus, ODI 2020***"}}