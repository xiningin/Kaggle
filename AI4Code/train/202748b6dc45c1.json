{"cell_type":{"45175637":"code","d40485ef":"code","8d5e079d":"code","f96590c2":"code","7926bc2f":"code","a3e5e87f":"code","96ea09df":"code","ca05ef17":"code","42a18055":"code","64b8c60b":"code","9edd8a8e":"code","a941dcd3":"code","4912012f":"code","ab4e0188":"code","5a9c2c09":"code","891ea32b":"code","ca7eb1bd":"code","7893675d":"code","3da202fa":"code","4d83717b":"code","a4a01d09":"code","e90a3484":"code","ea1b1883":"code","f6683a56":"code","8048e23d":"code","cd4025b0":"code","a2463f3c":"code","37486053":"code","2e0e1b80":"code","c0893fec":"code","7d93bac2":"code","3fff4308":"code","faf022a4":"code","fc7bf97c":"code","baf27731":"code","ba184604":"code","d7a64144":"code","89e2088f":"code","1184daef":"code","aee08830":"code","bb058219":"code","ae3f1e71":"markdown","c44e7e55":"markdown","becb9b40":"markdown","78004116":"markdown","d6986041":"markdown","ac42ce98":"markdown","433b0f95":"markdown","deaaf498":"markdown","15039cec":"markdown","0dd957c3":"markdown","fa9a2218":"markdown","c2540ef5":"markdown","3189bc2c":"markdown","48982e16":"markdown","d30f88f2":"markdown","1cc92f5c":"markdown","44458ee9":"markdown","890d0fec":"markdown","b3c63a40":"markdown","2890bf57":"markdown","e85f96de":"markdown","355634c5":"markdown","1b17d134":"markdown"},"source":{"45175637":"from sklearn.cluster import KMeans \nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import normalize","d40485ef":"from collections import Counter\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom nltk.corpus import stopwords\nimport matplotlib\nfrom nltk.tokenize import word_tokenize\nfrom nltk import edit_distance\nimport nltk\nimport matplotlib.pyplot as plt\n%matplotlib inline","8d5e079d":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator","f96590c2":"import pandas as pd \ndf = pd.read_csv('\/kaggle\/input\/therapeut3775\/tibbleTherapeut3775.csv') #therapeut3775 subset generated on april 1 in part 3 notebook\ndf.head()","7926bc2f":"df.rename(columns = {'abstract':'ABS'}, inplace = True) ","a3e5e87f":"#df.dtypes","96ea09df":"df.shape","ca05ef17":"df.isnull().sum()","42a18055":"outString = ' '.join(df[\"ABS\"])\nprint (outString)","64b8c60b":"def stems(words, method) :\n    prtr = nltk.stem.PorterStemmer()\n    snob = nltk.stem.SnowballStemmer('english')\n    lema = nltk.wordnet.WordNetLemmatizer()\n    \n    word_to_stem = stopwords_removal(words)\n\n    stem = [w for w in word_to_stem]\n    stem = []\n    \n    if method == 'porter' :\n        for w in word_to_stem:\n            stem.append(prtr.stem(w))\n \n    elif method == 'snowball': \n        for w in word_to_stem:\n            stem.append(snob.stem(w))\n\n    return (stem)","9edd8a8e":"def stopwords_removal(words) :\n    stop_word = set(stopwords.words('english'))\n    word_token = word_tokenize(words)\n    output_sentence = [words for word in word_token if not word in stop_word]\n    output_sentence = []\n    for w in word_token:\n        if w not in stop_word:\n            output_sentence.append(w)\n    return(output_sentence)\n","a941dcd3":"stopwords_output = stopwords_removal(outString)\nfor w in stopwords_output:\n    print(w+\"|\",end=' ')","4912012f":"snowball_stems = stems(outString, \"snowball\")\nprint(\"After stemming, there are\",len(snowball_stems),\"words. And they are as following:\")\nprint()\nfor s in snowball_stems:\n    print(s+\"|\",end=' ')\n    \n #After stemming, there are 290097 words. And they are as following:","ab4e0188":"import string\nx=snowball_stems\nx = [''.join(c for c in s if c not in string.punctuation) for s in x]\nx","5a9c2c09":"x = [s for s in x if s]\nx","891ea32b":"from collections import Counter\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport matplotlib\n\nmatplotlib.rcParams['font.sans-serif'] = \"Arial\"\nmatplotlib.rcParams['figure.dpi'] = 300\nbarWidth = 0.25\nplt.figure(figsize=(20,15))\n\ncounts = Counter(x)\ncommon = counts.most_common(50)\nlabels = [item[0] for item in common]\nnumber = [item[1] for item in common]\nnbars = len(common)\n\nplt.bar(np.arange(nbars), number,width=barWidth, tick_label=labels)\nplt.xticks(rotation = 90, fontweight='bold',fontsize=12,)\nplt.show()","ca7eb1bd":"barWidth = 0.25\nplt.figure(figsize=(20,40))\n\ncounts = Counter(x)\ncommon = counts.most_common(200)\nlabels = [item[0] for item in common]\nnumber = [item[1] for item in common]\nnbars = len(common)\n\nplt.barh(np.arange(nbars), number,tick_label=labels) #width=barWidth, \nplt.xticks( fontweight='bold',fontsize=12,) #rotation = 90,\nplt.title('Top 200 words in titles of ' +str(df.ABS.shape[0])+  ' research papers mentioned Therapeut',fontsize=15)#,fontweight='bold'   #df2.title.shape\nplt.show()","7893675d":"customize_stop_words2 = [\n    'used', 'using', 'SARS CoV','MERS CoV','Abstract','found','result','method','conclusion','results','case','cases',\n    'compared','many','well','including','identified','Although','present','Middle East','infection','patient'\n    'infectious','treatment','China','East','Role','COVID','human','model','Chapter','viruses','methods','disease'\n]\n#capital letter must match\n\nSTOPWORDS2 = list(STOPWORDS)  + customize_stop_words2","3da202fa":"text = outString\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = STOPWORDS2,  background_color=\"white\").generate(text)\n\n#matplotlib.rcParams['font.sans-serif'] = \"Arial\"\nmatplotlib.rcParams['figure.dpi'] = 300\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title('Top words cloud in abstracts of ' +str(df.ABS.shape[0])+  ' research papers mentioned Therapeut',fontsize=10)#,fontweight='bold'\nplt.show()","4d83717b":"tf_idf_vectorizor = TfidfVectorizer(stop_words = 'english',max_features = 2**12)\ntf_idf = tf_idf_vectorizor.fit_transform(df.ABS)\ntf_idf_norm = normalize(tf_idf)\ntf_idf_array = tf_idf_norm.toarray()\npd.DataFrame(tf_idf_array, columns=tf_idf_vectorizor.get_feature_names()).head()","a4a01d09":"sklearn_pca = PCA(n_components = 30)\nX = sklearn_pca.fit_transform(tf_idf_array)\nkmeans = KMeans(n_clusters=5, max_iter=600, algorithm = 'auto')\nfitted = kmeans.fit(X)\nprediction = kmeans.predict(X)\n\nplt.scatter(X[:, 0], X[:, 1], c=prediction, s=50, cmap='viridis')\ncenters = fitted.cluster_centers_\nplt.scatter(centers[:, 0], centers[:, 1],c='black', s=300, alpha=0.6);","e90a3484":"sklearn_pca = PCA(n_components = 30)\nX = sklearn_pca.fit_transform(tf_idf_array)\n\ncls = KMeans(n_clusters=6, init='k-means++',random_state=1) # \ncls.fit(X)\nnewfeature = cls.labels_ # the labels from kmeans clustering\n\nX2 = np.column_stack((X,pd.get_dummies(newfeature)))\n\nplt.figure()\n#plt.subplot(1,2,1)\nX2=X2\nplt.scatter(X2[:, 0], X2[:, 1]+np.random.random(X2[:, 1].shape)\/2, c=newfeature, cmap=plt.cm.rainbow, s=20, linewidths=0,alpha=0.5)\nplt.xlabel(''), plt.ylabel('')\nplt.grid()","ea1b1883":"#3D plot\n\nfrom matplotlib import pyplot\nfrom mpl_toolkits.mplot3d import Axes3D\n\n\nfig = pyplot.figure()\nax = Axes3D(fig)\n\n\nax.scatter(X2[:, 0], X2[:, 1]+np.random.random(X2[:, 1].shape)\/2,X2[:, 2]+np.random.random(X2[:, 1].shape)\/2, c=newfeature, cmap=plt.cm.rainbow,alpha=0.25)\npyplot.show()","f6683a56":"sse = []\nlist_k = list(range(1, 20))\n\nfor k in list_k:\n    km = KMeans(n_clusters=k)\n    km.fit(X)\n    sse.append(km.inertia_)\n\n# Plot sse against k\nplt.figure(figsize=(6, 6))\nplt.plot(list_k, sse, '-o')\nplt.xlabel(r'Number of clusters *k*')\nplt.ylabel('Sum of squared distance');","8048e23d":"\ndata=X\n\n# Silhouette vs Cluster Size\n# do it for the k-means\nfrom sklearn import metrics\nfrom sklearn.cluster import KMeans\n\nseuclid = []\nscosine = []\nk = range(2,11)\nfor i in k:\n    kmeans_model = KMeans(n_clusters=i, init=\"k-means++\").fit(X)\n    labels = kmeans_model.labels_\n    seuclid.append(metrics.silhouette_score(data, labels, metric='euclidean'))\n    scosine.append(metrics.silhouette_score(data, labels, metric='cosine'))\n    \nplt.figure(figsize=(10,5))\nplt.plot(k,seuclid,label='euclidean')\nplt.plot(k,scosine,label='cosine')\nplt.ylabel(\"Silhouette\")\nplt.xlabel(\"Cluster\")\nplt.title(\"Silhouette vs Cluster Size\")\nplt.legend()\nplt.show()","cd4025b0":"\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_samples, silhouette_score\n\nimport matplotlib.cm as cm\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nprint(__doc__)\n\n# y_lower = 10?\nX=X2\ny=newfeature\nrange_n_clusters = [ 3, 4, 5, 6,7,8,9,10,11] # [3, 4, 5, 6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] \n\n\nfor n_clusters in range_n_clusters:\n    # Create a subplot with 1 row and 2 columns\n    fig, (ax1, ax2) = plt.subplots(1, 2)\n    fig.set_size_inches(18, 7)\n\n    # The 1st subplot is the silhouette plot\n    # The silhouette coefficient can range from -1, 1 but in this example all\n    # lie within [-0.1, 1]\n    ax1.set_xlim([-0.1, 1])\n    # The (n_clusters+1)*10 is for inserting blank space between silhouette\n    # plots of individual clusters, to demarcate them clearly.\n    ax1.set_ylim([0, len(X) + (n_clusters + 1) * 10])\n\n    # Initialize the clusterer with n_clusters value and a random generator\n    # seed of 10 for reproducibility.\n    clusterer = KMeans(n_clusters=n_clusters, random_state=10)\n    cluster_labels = clusterer.fit_predict(X)\n\n    # The silhouette_score gives the average value for all the samples.\n    # This gives a perspective into the density and separation of the formed\n    # clusters\n    silhouette_avg = silhouette_score(X, cluster_labels)\n    print(\"For n_clusters =\", n_clusters,\n          \"The average silhouette_score is :\", silhouette_avg)\n\n    # Compute the silhouette scores for each sample\n    sample_silhouette_values = silhouette_samples(X, cluster_labels)\n\n    y_lower = 10\n    for i in range(n_clusters):\n        # Aggregate the silhouette scores for samples belonging to\n        # cluster i, and sort them\n        ith_cluster_silhouette_values = \\\n            sample_silhouette_values[cluster_labels == i]\n\n        ith_cluster_silhouette_values.sort()\n\n        size_cluster_i = ith_cluster_silhouette_values.shape[0]\n        y_upper = y_lower + size_cluster_i\n\n        color = cm.nipy_spectral(float(i) \/ n_clusters)\n        ax1.fill_betweenx(np.arange(y_lower, y_upper),\n                          0, ith_cluster_silhouette_values,\n                          facecolor=color, edgecolor=color, alpha=0.7)\n\n        # Label the silhouette plots with their cluster numbers at the middle\n        ax1.text(-0.05, y_lower + 0.5 * size_cluster_i, str(i))\n\n        # Compute the new y_lower for next plot\n        y_lower = y_upper + 10  # 10 for the 0 samples\n\n    ax1.set_title(\"The silhouette plot for the various clusters.\")\n    ax1.set_xlabel(\"The silhouette coefficient values\")\n    ax1.set_ylabel(\"Cluster label\")\n\n    # The vertical line for average silhouette score of all the values\n    ax1.axvline(x=silhouette_avg, color=\"red\", linestyle=\"--\")\n\n    ax1.set_yticks([])  # Clear the yaxis labels \/ ticks\n    ax1.set_xticks([-0.1, 0, 0.2, 0.4, 0.6, 0.8, 1])\n\n    # 2nd Plot showing the actual clusters formed\n    colors = cm.nipy_spectral(cluster_labels.astype(float) \/ n_clusters)\n    ax2.scatter(X[:, 0], X[:, 1], marker='.', s=30, lw=0, alpha=0.7,\n                c=colors, edgecolor='k')\n\n    # Labeling the clusters\n    centers = clusterer.cluster_centers_\n    # Draw white circles at cluster centers\n    ax2.scatter(centers[:, 0], centers[:, 1], marker='o',\n                c=\"white\", alpha=1, s=200, edgecolor='k')\n\n    for i, c in enumerate(centers):\n        ax2.scatter(c[0], c[1], marker='$%d$' % i, alpha=1,\n                    s=50, edgecolor='k')\n\n    ax2.set_title(\"The visualization of the clustered data.\")\n    ax2.set_xlabel(\"Feature space for the 1st feature\")\n    ax2.set_ylabel(\"Feature space for the 2nd feature\")\n\n    plt.suptitle((\"Silhouette analysis for KMeans clustering on sample data \"\n                  \"with n_clusters = %d\" % n_clusters),\n                 fontsize=14, fontweight='bold')\n\nplt.show()\n","a2463f3c":"data1 = np.array(df.ABS.drop_duplicates(keep='last'))\ndata1","37486053":"data1.shape\n","2e0e1b80":"data1list=data1.tolist()","c0893fec":"%%capture\n# Install the latest Tensorflow version.\n#!pip3 install --upgrade tensorflow-gpu\n# Install TF-Hub.\n!pip3 install tensorflow-hub\n#!pip3 install seaborn","7d93bac2":"import numpy as np\nimport pandas as pd\n\nimport tensorflow as tf\nimport tensorflow_hub as hub\n\nembed = hub.load(\"https:\/\/tfhub.dev\/google\/universal-sentence-encoder\/3\")","3fff4308":"embeddings = embed(data1list)[\"outputs\"]\n\n#print(embeddings)","faf022a4":"embeddings.shape","fc7bf97c":"NParray1941papers512vector=np.array(embeddings)\nNParray1941papers512vector","baf27731":"testAbstract1=[\"background enterovirus 71 ev71 is one of the major causative agents of hand foot and mouth disease hfmd which is sometimes associated with severe central nervous system disease in children there is currently no specific medication for ev71 infection quercetin one of the most widely distributed flavonoids in plants has been demonstrated to inhibit various viral infections however investigation of the antiev71 mechanism has not been reported to date methods the antiev71 activity of quercetin was evaluated by phenotype screening determining the cytopathic effect cpe and ev71induced cells apoptosis the effects on ev71 replication were evaluated further by determining virus yield viral rna synthesis and protein expression respectively the mechanism of action against ev71 was determined from the effective stage and timeofaddition assays the possible inhibitory functions of quercetin via viral 2apro 3cpro or 3dpol were tested the interaction between ev71 3cpro and quercetin was predicted and calculated by molecular docking results quercetin inhibited ev71mediated cytopathogenic effects reduced ev71 progeny yields and prevented ev71induced apoptosis with low cytotoxicity investigation of the underlying mechanism of action revealed that quercetin exhibited a preventive effect against ev71 infection and inhibited viral adsorption moreover quercetin mediated its powerful therapeutic effects primarily by blocking the early postattachment stage of viral infection further experiments demonstrated that quercetin potently inhibited the activity of the ev71 protease 3cpro blocking viral replication but not the activity of the protease 2apro or the rna polymerase 3dpol modeling of the molecular binding of the 3cproquercetin complex revealed that quercetin was predicted to insert into the substratebinding pocket of ev71 3cpro blocking substrate recognition and thereby inhibiting ev71 3cpro activity conclusions quercetin can effectively prevent ev71induced cell injury with low toxicity to host cells quercetin may act in more than one way to deter viral infection exhibiting some preventive and a powerful therapeutic effect against ev71 further quercetin potently inhibits ev71 3cpro activity thereby blocking ev71 replication\"]","ba184604":"testAbstract2=[\"background to investigate the effects and immunological mechanisms of the traditional chinese medicine xinjiaxiangruyin on controlling influenza virus fm1 strain infection in mice housed in a hygrothermal environment methods mice were housed in normal and hygrothermal environments and intranasally infected with influenza virus fm1 a highperformance liquid chromatography fingerprint of xinjiaxiangruyin was used to provide an analytical method for quality control realtime quantitative polymerase chain reaction rtqpcr was used to measure messenger rna expression of tolllike receptor 7 tlr7 myeloid differentiation primary response 88 myd88 and nuclear factorkappa b nfb p65 in the tlr7 signaling pathway and virus replication in the lungs western blotting was used to measure the expression levels of tlr7 myd88 and nfb p65 proteins flow cytometry was used to detect the proportion of th17tregulatory cells results xinjiaxiangruyin effectively alleviated lung inflammation in c57bl6 mice in hot and humid environments guizhimahuanggebantang significantly reduced lung inflammation in c57bl6 mice the expression of tlr7 myd88 and nfb p65 mrna in lung tissue of wt mice in the normal environment gzmhgbt group was significantly lower than that in the model group p  005 in wt mice exposed to the hot and humid environment the expression levels of tlr7 myd88 and nfb p65 mrna in the xjxry group were significantly different from those in the virus group the expression levels of tlr7 myd88 and nfb p65 protein in lung tissue of wt mice exposed to the normal environment gzmhgbt group was significantly lower than those in the model group in wt mice exposed to hot and humid environments the expression levels of tlr7 myd88 and nfb p65 protein in xjxry group were significantly different from those in the virus group conclusion guizhimahuanggebantang demonstrated a satisfactory therapeutic effect on mice infected with the influenza a virus fm1 strain in a normal environment and xinjiaxiangruyin demonstrated a clear therapeutic effect in damp and hot environments and may play a protective role against influenza through downregulation of the tlr7 signal pathway\"]","d7a64144":"Question1=['What are clinical effective therapeutics or drugs for COVID-19?']","89e2088f":"embeddingsT1 = embed(testAbstract1)[\"outputs\"]\nembeddingsT2 = embed(testAbstract2)[\"outputs\"]\n\nembeddingsQ1 = embed(Question1)[\"outputs\"]\n\ntest1=np.array(embeddingsT1)\ntest2=np.array(embeddingsT2)\n\nquestion1=np.array(embeddingsQ1)\n\nimport textwrap","1184daef":"result1 = np.sum(NParray1941papers512vector*test1,axis=1)\/(np.sqrt(np.sum(NParray1941papers512vector*NParray1941papers512vector,axis=1))*np.sqrt(np.sum(test1*test1)))\nmaxRows1=result1.argsort()[-10:][::-1]  #https:\/\/stackoverflow.com\/questions\/6910641\/how-do-i-get-indices-of-n-maximum-values-in-a-numpy-array\nprint(\"The indexes for most similar papers are:\") \nprint(maxRows1)\nprint(\"\\n\")\nprint(\"The cosine similarity for top 10 papers are:\") \nprint(result1[result1.argsort()[-10:][::-1]])\nprint(\"\\n\")\nprint(\"For Paper Abstract:\\n\")\nprint(textwrap.fill(testAbstract1[0],100))\nprint(\"\\nWe found the top 10 most similar papers as listed below:\\n\")\nprint(df.ABS.iloc[maxRows1])","aee08830":"result2 = np.sum(NParray1941papers512vector*test2,axis=1)\/(np.sqrt(np.sum(NParray1941papers512vector*NParray1941papers512vector,axis=1))*np.sqrt(np.sum(test2*test2)))\nmaxRows2=result2.argsort()[-10:][::-1]  #https:\/\/stackoverflow.com\/questions\/6910641\/how-do-i-get-indices-of-n-maximum-values-in-a-numpy-array\nprint(\"The indexes for most similar papers are:\") \nprint(maxRows2)\nprint(\"\\n\")\nprint(\"The cosine similarity for top 10 papers are:\") \nprint(result2[result2.argsort()[-10:][::-1]])\nprint(\"\\n\")\nprint(\"For Paper Abstract:\\n\")\nprint(textwrap.fill(testAbstract2[0],100))\nprint(\"\\nWe found the top 10 most similar papers as listed below:\\n\")\nprint(df.ABS.iloc[maxRows2])","bb058219":"resultq1 = np.sum(NParray1941papers512vector*question1,axis=1)\/(np.sqrt(np.sum(NParray1941papers512vector*NParray1941papers512vector,axis=1))*np.sqrt(np.sum(question1*question1)))\nmaxRowsq1=resultq1.argsort()[-20:][::-1]  #https:\/\/stackoverflow.com\/questions\/6910641\/how-do-i-get-indices-of-n-maximum-values-in-a-numpy-array\nprint(\"The indexes for most related papers are:\") \nprint(maxRowsq1)\nprint(\"\\n\")\nprint(\"The cosine similarity for top 20 papers are:\") \nprint(resultq1[resultq1.argsort()[-20:][::-1]])\nprint(\"\\n\")\nprint(\"For Question:\\n\")\nprint(textwrap.fill(Question1[0],100))\nprint(\"\\nWe found the top 20 most related papers as listed below:\\n\")\nprint(df.ABS.iloc[maxRowsq1])","ae3f1e71":"## Word Cloud","c44e7e55":"#### Try 5 clusters","becb9b40":"## KMeans Clustering","78004116":"### Plot of 6 clusters","d6986041":"## Customize stop words","ac42ce98":"## Examples of recommend similar papers","433b0f95":"## Example of Question Answering system","deaaf498":"## Appendix 3\nSince most of my steps build on the previous step, it is beneficial to understand the precious work as well. Attached are the kaggle submissions of other parts of this project for your reference.\n(part 1 of the notebook used the entire dataset. The size was too large, 90M. So had some problem to save a good looking one).\n\n#### Part 1 data pre-processing and EDA\n\n(with all available data at the time the research was conducted. )\n\nhttps:\/\/www.kaggle.com\/leijiang1\/part-1-data-preprocessing-and-eda?scriptVersionId=31277199\n\n#### Part 2 TFIDF Clustering at Abstract level\n\n(with all available abstracts at the time the research was conducted -- 35177 papers)\n\nhttps:\/\/www.kaggle.com\/leijiang1\/part-2-tfidf-clustering-at-abstract-level\n\n#### Part 3 What can we learn from the keyword window \u201cpolymerase + therapeut\u201d?\n\nhttps:\/\/www.kaggle.com\/leijiang1\/part-3-keyword-window-polymerase-therapeut-r\n\n#### Part 4 Identify similar papers and Question Answering based cosine similarity\n\nhttps:\/\/www.kaggle.com\/leijiang1\/part-4-identify-similar-papers-based-on-cossim\n\n#### Part 5 T5 validation of Question Answering Outputs\n\nhttps:\/\/www.kaggle.com\/leijiang1\/part-5-t5-validation-of-question-answering-outputs\n\n\n","15039cec":"## Vectorize the abstracts with TF-IDF","0dd957c3":"#### 5 clusters looks good.","fa9a2218":"## Vectorize the abstracts using Universal Sentence Encoder","c2540ef5":"### Notice the paper find iteself as the most similar papers with cosine similarity score of 1.","3189bc2c":"## Remove stopwords and apply stemmer on words","48982e16":"## EDA - top words","d30f88f2":"## Import Data","1cc92f5c":"#### Before modeling, I'd like to check what words talked about most in this subset of \"Polymerase\" papers. We can also identify more keywords for further analysis form the top word list and word cloud.","44458ee9":"## Appendix 2 Results for Q2 on WINDOW\n\n![image.png](attachment:image.png)","890d0fec":"## Import Libraries","b3c63a40":"#### Elbow method below picked n_clusters=5 or 6. However, Silhouette score picked n_clusters=6. So we also plot the results of n_clusters=6.","2890bf57":"#### The most informative words are usually not the biggest. By reading the papers, we know \u201crdrp\u201d is a critical target. \u201crna-dependent rna\u201d could mean \u201cRNA-dependent RNA polymerase or RNA replicase\u201d. In addition, the plot shows \"polymerase chain\" is a high frequency word. By domain knowledge we know it is becasue PCR. ","e85f96de":"## Part 6 Ask questions on Therapeut3775 subset\n\n## Data\n\nTherapeut3775 subset generated on april 1 in part 3 notebook.\n\n#### Part of the reason I use this subset of data is I want to keep the runtime managable. You can run the pipeline with a more complete dataset if you have little limitation on your computation resources. I actually look forward to your results if you do so. So please do let me know your results!\n\n## Reusable pipelines\n### Reuse the pipeline built in Part 4 to answer more questions about therapeutics.\n### Then validate the results use pipeline in Part 5\n\nto validate the question answering system and also demo how to reuse the pipeline created.\n\n\n## Questions\n\n### More questions:\n\n### Question1=['What are clinical effective therapeutics or drugs for COVID-19?']\n\n### Question2=['What are the therapeutic target genes for COVID-19 or coronavirus?']\n\n### Question3=['What are the therapeutic targets for COVID-19 or coronavirus ?']\n\n\nLike to use Question2 to evualate since it has reference answer from Benchsci COVID19 dataset (https:\/\/www.benchsci.com\/).\n\nQuestion3 is the question I really want answer since therapeutic is not limited to gene related methods.\n\n## Validation Method \n\nValidation is a very important aspect of the project. Because we need to evaluate model performances. It requires the domain knowledge, gorund truth, facts to check if the results generated by pipelines make sense. We need the help of domain experts for this step. As I have some knowledge in biology, I made some efforts to try to validate some of my results.\n\n### - Question 2 for example\n\n#### 1500 words summary were generated by T5 on the 50 abstracts outputs from previous step (Part 4) as most related to question 2. See Appendix 1 for details.\n#### Assume the Benchsci dataset is accurate, by domain knowledge, I expect to see many of these genes appear in the result summary for a good answer for Q2.\n\n### The target genes list:\n\n#### therapeut target genes\nTNF-a\nIL-6\nCCL-2\nCXCL-10\n\n\n\n#### Host pathogen interaction genes\nACE2\nGAPDH\nIL6\nRDB of Spike protein\n\nS gene\nORF1ab\n\nRmYN02\n\nTMPRSS2\n\nType I IFN \nType I IFN alpha\nNsp15\n\nSADS-CoV spike glycoprotein\n\nSARS-Cov-2\nSARS-Cov-2-N-FL\nSARS-Cov-2-N-NTD\nSARS-Cov-2-S1\n\nSARS-Cov RBD\nMERS-CoV RBD\nRBD-domain\n\nRp3 NP protein\nnucleoprotein\n\n\n\nDHODH\nHCoV-EMC\/2012\n\nEnvelope gene\n\n\n## Results\n\n### In my results,  'ACE2', 'S protein', 'RBD'appear in the summary which suggest my method could be effective. I expect to see more genes. But it could be that I only choose the top 50 papers and on a subset of the data. Of course, more validations should be done before we conclude anything.\n\n'the spike (S) protein has a key role in viral infection and pathogenesis . the receptor-binding domain (RBD) of the S protein contains a critical neutralizing domain '\n\n### The results also suggest I may want to subset with COVID-19 first if I am asking question about COVID-19.\n\n### Results on WINDOW \n#### WINDOW data is a subset of the abstracts generated form keyword window search.\n#### I also compared using full abstract and keyword WINDOW generated for question answering. \n\nfrom validation results from preious step, I asked questions1,2 on WINDOW dataset. \n\n### See Appendix 2 for the result details from top 20 windows for Question 2. \n\n### We can see even from WINDOW dataset, we extracted some related information, such as 'anti-SARS-CoV F(ab')2 ', 'VP35 as a NNSV P protein ', 'CXCR2', ' NP-mediated translation ', 'G4-mediated mechanisms ', 'PtdIns4P lipids'.\n\n\n'selectively impact viral protein synthesis, suggesting that an NP-mediated translation strategy is a target for therapeutic intervention against this viral disease.'\n\n\n\n\n#### for Q1 \nhave not got the chance to validate. but i think\nat least should mention hiv drug effective to be a good answer\n\n\nFor some reason, running USE on kaggle kernel is not stable, so the code for using full abstract was run on colab. \n\n\n\n\n\n## Future Work\nAs described in Discussion for Part 4, there are many types of embeddings to try.  \n\n### Actually, we can consider the type of embedding a parameter to tune for the entire pipeline.\n\nWhen I finish my classes final projects and have more time, I want to try more types of sentence or paragraph embedding for improvement, such as:\n### Biomedical domain specific embedding\uff1a\n#### BioSentVec \n#### bioBERT \n\n### Paragraph embedding\uff1a\n#### doc2vec \n\n\n### My expectation is using these domain specific embeds could improve the model performance even further since they can find more relevant similar medical terms, although we can not guarantee the sentence embeds trained on biomedical domain corpora can perform better than those trained on general domain corpora. These fields are not studied thoroughly. The solutions are not well defined. Many methods are experimental.\n\n\n### If I have sufficent resources, I would use USE large with Transformer under the hood instead of the current smaller one I use.\n\n#### Other aspects I think we can go deeper or explore more: definitely want to work with SWE and data engineers to deploy the models online, so it has a nice interface for the researchers to use.\n\n\n## Code\n\n### The code for using full abstract to answer questions:\n(go to the end for the question answring code)\n\nhttps:\/\/github.com\/lj89\/CORD19\/blob\/master\/Therapeut_Part_4_Identify_similar_papers_based_on_cosSim.ipynb\n\n### The code for validating question answering outputs can be found on my github.\n\n\n### See all code for other parts of this CORD19 project on my github:\n#### https:\/\/github.com\/lj89\/CORD19\n\n\n-------------------------------------------------------------------\n\n\n![image.png](attachment:image.png)\n\n#### Figure: Top words cloud in of 3688 abstract keyword windows mentioned Therapeut\n\n\n\n## Appendix 1\n\n### Summary generated by T5 for Question 2\n### Question2=['What are the therapeutic target genes for COVID-19 or coronavirus?']\n\n(['dysregulation of the renin-angiotensin-system (RAS) may lead to cardiovascular pathologies . the review considers recent studies on the ACE2-Ang-(1\u20137)-Mas'])   (['a porcine sapovirus Cowden strain induces strong COX-2\/PGE(2) signaling . but whether infections of other viruses affect the replication of viruses remains unknown . infections of cells with feline calici'])   (['human enterovirus 71 (HEV71) is the cause of hand, foot and mouth disease . there has been an increase in HEV71 epidemic activity in the past decade . to date there is no effective antiviral'])   (['high-throughput antibody development requires faster methodologies with lower antigen consumption . here, we describe a novel methodology to select human monoclonal recombinant antibodies . the protocol could be easily adapted to a'])   (['in recent years, various types of aptamers including RNA and DNA have been introduced against viral hepatitis . the obtained molecules showed obvious potential for use as diagnostic and therapeutic tools . it seems these molecules will be'])   (['this review emphasizes the virus-receptor interactions of human immunodeficiency virus . the receptor may play an important role in virus entry per se . ingenious approaches to therapeutic strategies based on inhibiting virus attachment'])   (['protease inhibitors block the replication of coronaviruses such as hepatitis C virus . but they inevitably lead to the selection of inhibitor-resistant mutants . the selection and consequences of inhibitor'])   (['antimicrobial peptides exert various mechanisms such as changing cell membrane permeability . mesenchymal stem cells (MSCs) are key to produce the peptidic agents . these cells have been shown to'])   (['siRNAs equipped with CpG oligodeoxyribonucleotides overcome major hurdle in cell-specific siRNA delivery . the molecules are actively internalized by TLR9(+) cells, without the'])   (['drug-induced pulmonary disease appears to be an increasingly frequent clinical problem . infectious agents cause inflammation in the nose and nasal sinuses . the nasal chambers are the structures subjected to the effects of inhaled substances '])   (['the 2014\u20132015 outbreak of Ebola virus disease (EVD) is the largest epidemic to date in terms of number of cases, of death and affected areas . in October 2015, no antiviral agents had proven an antivir'])   (['the rotavirus VP3 protein is a multifunctional capping enzyme . it is antagonist of the interferon-induced cellular oligoadenylate synthetase-RNase L pathway'])   (['we constructed a Protein Signature Pipeline to guide the selection of short peptide sequences . the sequences are used to identify protein signatures unique to a target pathogen . we assess how the amount of sequence data affect'])   (['chikungunya virus (CHIKV) is a medically important human viral pathogen . this study aimed to generate and characterize a panel of mAbs for their neutralization efficacy'])   (['this review summarizes the work that has used this approach to identify therapeutic targets and biomarker signatures in the field of autoimmunity and infectious disease . recent technological and methodological advances that will carry the blood transcriptome research'])   (['despite their ubiquity, there is a lack of interdisciplinary epidemiologic and economic research . impact diary recording and PCR testing of nose-throat swabs for viruses during ARIs in children '])   (['salinomycin is a carboxylic polyether ionophore that exchanges monovalent ions for protons across lipid bilayer membranes . monitoring the time course of viral infection showed that it blocked nuclear'])   (['antiviral therapies that impede virus entry are attractive because they act on the first phase of the infectious cycle . we are interested in identifying drugs that block both Ebola virus and Lassa virus . five drugs showed roughly'])   (['the woodchuck hepatitis virus (WHV) and its host, the eastern woodchuck, is a valuable model system . many aspects of WHV replication and pathogenesis resemble acute . and chronic '])   (['a trend has emerged to eliminate the use of plasma-derived additives in recombinant protein therapeutics . practice began with products used in the treatment of hemophilia and is progressively expanding throughout the entire industry '])   (['mAb 7B3 showed an IC50 value of 11.6 ng\/mL against the circulating strain GZ02 . the patient was seronegative for DENV infection . administration of the antibodies 7B3,'])   (['study tested whether chemicals used as RNA virus treatment agents had inhibitory effects . ribavirin showed antiviral effects against FMDV in vitro\/in vivo . vaccines synergistically enhanced anti'])   (['plants can be a low-cost, large-scale production platform of recombinant biopharmaceutical proteins such as vaccines and antibodies . plants lack mechanisms of processing authentic human N-glycosylation .'])   (['DS GeneAtlasTM pipeline has been used to critically evaluate the severe acute respiratory syndrome (SARS) genome . this paper discusses several new functional hypotheses on the roles played by the constituent gene products of SARS'])   (['acute viral infections pose practical challenges for the accurate assessment of novel therapies . measure of infection-related quantities can inform investigators on course and severity of infection . the most sensitive endpoint for therapeutic trials with the goal to cure patients'])   (['hantaviruses fuse their envelope membrane with host cell membranes . to enter cells, they use a viral fusion protein called the gc envelope glycoprotein . we have previously shown that the Gc envelope'])   (['the patient had anhydrous ectodermal dysplasia and an unrelated defect in cell-mediated immunity . the infection resulted in a lengthy ureteral stricture with resultant hydrone'])   (['Publisher Summary This chapter focuses on non-HIV antiviral agents . Nucleoside analog continue to be the mainstay of hepatitis b Virus (HBV) therapeutics .'])   (['sBnAbs targeting the influenza virus hemagglutinin (HA) are a promising therapeutic strategy . but neutralization escape mutants can develop . we used an integrated approach combining viral passaging and'])   (['two amino acid mutations differed between HP-PRRSV and classical PRRSV . deletion of either amino acid led to a complete loss of virus viability . pathogenicity of HuN4-derived'])   (['therapy of viral infections in nonimmunocompromised hosts has only developed slowly . this article summarizes major principles of antiviral efficacy and reviews clinical trials . neuraminidase inhibitors can'])   (['a new coronavirus (CoV) identified as COVID-19 virus is responsible for the 2019-2020 viral pneumonia outbreak . a program of combined structure-assisted drug design, virtual drug screening and high-'])   (['recombinant baculovirus BV-GD-ORF2 is a potential vaccine against PCV2 infections . the vaccine can display the capsid (Cap) protein and VSV-G protein on'])   (['Zn(2+) is a natural inhibitor of proteases with CysHis dyads . biguanide forms bidentate metal complexes through the two imino nitrogens '])   (['here, we describe a technology allowing for the rapid isolation of fully human mAbs . B cells specific for an antigen of interest are directly isolated from human donors . method allows isolating antigen-specific'])   (['innate immune system relies for a major part on the activation of two transcription factors, NF-B and IRF3 . studies with IKK knockout mice have illustrated a key role for iKK'])   (['mouse hepatitis virus infected mice results in acute encephalitis followed by demyelinating disease . antibody-mediated blocking of IL-23 did not mute T-cell trafficking into'])   (['the spike (S) protein has a key role in viral infection and pathogenesis . the receptor-binding domain (RBD) of the S protein contains a critical neutralizing domain . this review summarizes recent advances'])   (['autophagy is a homeostatic mechanism that discards invading pathogens . eosinophils are a major type of inflammatory cell that aggravates airway inflammatory diseases .'])   (['Ribonucleases (RNases) are a large number of enzymes gathered into superfamilies . bovine pancreatic RNase A, bovine seminal BS-RNase, human'])   (['angiotensin converting enzyme 2 represents promising target for inducing stroke neuroprotection . stroke-induced changes in expression and activity of endogenous system components in rats . neuroprotective effects of dimina'])   (['standard therapies used for the treatment of Acute Myeloid Leukemia (AML) are cytotoxic agents that target rapidly proliferating cells . unfortunately, this therapeutic approach has limited efficacy and significant toxicity '])   (['there are still no licensed treatments for Ebola virus disease (EVD) EVD provides a timely exemplar to discuss barriers, enablers and incentives needed to find effective treatments in advance of health emergencies caused by emerging infectious diseases'])   (['study finds PEDV infection stimulated EGFR activation . inhibition of PEDV by inhibitors or small interfering RNA (siRNA) led to a decrease in virus yields . PEDV-induced '])   (['filamentous fungus Penicillium chrysogenum Q176 secretes the antimicrobial proteins . they share a compact disulfide-bond mediated, -fold structure rendering them highly'])   (['a major hallmark of the autoimmune demyelinating disease multiple sclerosis (MS) immune cell infiltration into the brain and spinal cord causes myelin destruction . current treatments for MS focus on attenuating'])   (['filoviruses are among the most pathogenic viruses known to man . they are causative agents of viral hemorrhagic fever outbreaks in africa . there are no licensed vaccines or therapeutics available to'])   (['west nile virus and dengue virus cause a large number of human infections each year . no vaccines or chemotherapeutics are currently available . viruses encode a serine protease that is essential'])   (['a phage-displayed antibody library was constructed from a patient who recovered from SFTS virus infection . one antibody, designated as ab10, was reactive to the Gn envelope glycoprotein of SFTSV '])   (['Abstract Polysaccharides play multiple roles and have extensive bioactivities in life process . this review describes their major functions involved in antitumor, anti-virus, and anti-inflammatory . due to their enormous structural hetero'])\"\n\n\n\n\n\n","355634c5":"3D Plot of 6 clusters","1b17d134":"#### Plot of 5 clusters"}}