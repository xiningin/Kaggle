{"cell_type":{"65f4ddd8":"code","fbb231c3":"code","f83382ee":"code","46fec871":"code","7e608a3f":"code","6f57ec07":"code","b235c863":"code","4126322a":"code","e49b0cc4":"code","7adfb8ef":"code","8ce1c71b":"code","2229aa2f":"code","8318778a":"code","97a4d818":"code","c667880c":"markdown"},"source":{"65f4ddd8":"### importing everything that is necessary for data parsing\nimport requests\nfrom bs4 import BeautifulSoup\nimport json\nimport pandas as pd","fbb231c3":"## getting the raw html from the web site\nurl = \"https:\/\/www.worldometers.info\/coronavirus\/\"\nr = requests.get(url)\nsoup = BeautifulSoup(r.content, 'lxml')\nans2= soup.findAll('div', attrs={'class':'main_table_countries_div'})","f83382ee":"data = []\ntable = soup.findAll('table', attrs={'id':'main_table_countries_today'})\nfor row in table:\n    cells = row.findAll('td')\n    for cell in cells:\n        data.append(cell)","46fec871":"dd=[]\nfor x,y in enumerate(data):\n    dd.append((list(y)))\n    \n","7e608a3f":"if [\"Bangladesh\"] in dd:\n    index = dd.index([\"Bangladesh\"])","6f57ec07":"country = list(data[index])[0]\ntotal_case = int(list(data[index+1])[0])\nnew_case = int(list(data[index+2])[0])\ntotal_death = int(list(data[index+3])[0])\ntry:\n    new_death = int(list(data[index+4])[0])\nexcept:\n    new_death = 0 \n    \ntotal_recovered = int(list(data[index+5])[0])\nactive_case = int(list(data[index+6])[0])\ntry:\n     critical_case = int(list(data[index+7][0]))\nexcept:\n     critical_case = 0\n\n","b235c863":"df = {\"country\" : country,\n\"total_case\" : total_case,\n\"new_case\" : new_case,\n\"total_death\" : total_death,\n\"new_death\" : new_death,\n\"total_recovered\" : total_recovered,\n\"active_case\" : active_case,\n\"critical_case\" : critical_case}","4126322a":"df","e49b0cc4":"df_new = {\"total_case\" : total_case,\n\"new_case\" : new_case,\n\"total_death\" : total_death,\n\"new_death\" : new_death,\n\"total_recovered\" : total_recovered,\n\"active_case\" : active_case,\n\"critical_case\" : critical_case}","7adfb8ef":"df_new","8ce1c71b":"from pylab import rcParams\nrcParams['figure.figsize'] = 10, 20","2229aa2f":"import matplotlib.pyplot as plt\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise:\nlabels = df_new.keys()\n\nsizes = df_new.values()\nexplode = (0, 0.1, 0, 0,.1,.1,.1)  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes,explode=explode, labels=labels,\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","8318778a":"import matplotlib.pyplot as plt\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise:\nlabels = df_new.keys()\nsizes = df_new.values()\nexplode = (.1, .1, .1, .1,.1,.1,.1)  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","97a4d818":"plt.bar(df_new.keys(),df_new.values())","c667880c":"## the next 8 index will be the info of this country"}}