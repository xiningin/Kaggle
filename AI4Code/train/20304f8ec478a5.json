{"cell_type":{"6eb3030d":"code","8f1a76e3":"code","a26337d9":"code","4f461b8d":"code","5377659e":"code","7c1b77db":"code","43fa8777":"code","345466b3":"code","c6d5373f":"code","d581f1e2":"code","40955b05":"code","ae16b3ef":"code","84f26f21":"code","6ef48b56":"code","5d8c6bee":"code","6457dfef":"code","cfbe75cf":"code","5ad40a53":"code","32912196":"code","8554a355":"code","e61ad0d5":"code","0be99d0d":"code","9d0c4109":"code","726d63f9":"code","25a4b9ab":"markdown","a4114597":"markdown","f06b5f5e":"markdown"},"source":{"6eb3030d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,LSTM\nfrom sklearn.preprocessing import MinMaxScaler","8f1a76e3":"data = pd.read_csv('..\/input\/air-passengers\/AirPassengers.csv')\ndata.head()","a26337d9":"data.rename(columns={'#Passengers':'passengers'},inplace=True)\ndata = data['passengers']\ndata=np.array(data).reshape(-1,1)","4f461b8d":"plt.plot(data)","5377659e":"scaler= MinMaxScaler()\ndata=scaler.fit_transform(data)","7c1b77db":"train_size=100\ntest_size=44","43fa8777":"train=data[0:train_size,:]\ntest=data[train_size:,:]","345466b3":"train.shape","c6d5373f":"test.shape","d581f1e2":"def get_data(data, look_back):\n    dataX, dataY = [], []\n    for i in range(len(data)-look_back-1):\n        a = data[i:(i+look_back), 0]\n        dataX.append(a)\n        dataY.append(data[i+look_back, 0])\n    return np.array(dataX), np.array(dataY)","40955b05":"look_back = 1\nX_train, y_train = get_data(train, look_back)","ae16b3ef":"X_train.shape","84f26f21":"X_test, y_test = get_data(test, look_back)","6ef48b56":"X_train = X_train.reshape(X_train.shape[0], X_train.shape[1], 1)\nX_test = X_test.reshape(X_test.shape[0], X_test.shape[1], 1)","5d8c6bee":"X_train.shape","6457dfef":"type(y_test)","cfbe75cf":"model = Sequential()\nmodel.add(LSTM(5, input_shape = (1, look_back)))\nmodel.add(Dense(1))\nmodel.compile(loss = 'mean_squared_error', optimizer = 'adam')","5ad40a53":"model.summary()","32912196":"model.fit(X_train, y_train, epochs=25, batch_size=1)","8554a355":"y_pred = model.predict(X_test)","e61ad0d5":"scaler.scale_","0be99d0d":"y_pred = scaler.inverse_transform(y_pred)","9d0c4109":"y_test = y_test.reshape(-1, 1)\ny_test = scaler.inverse_transform(y_test)","726d63f9":"# plot baseline and predictions\nplt.figure(figsize=(14,5))\nplt.plot(y_test, label = 'real number of passengers')\nplt.plot(y_pred, label = 'predicted number of passengers')\nplt.ylabel('# passengers')\nplt.legend()\nplt.show()","25a4b9ab":"## Importing neccessary libraries","a4114597":"## Building the LSTM","f06b5f5e":"## Feature Scaling"}}