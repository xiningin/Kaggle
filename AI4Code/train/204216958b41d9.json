{"cell_type":{"83223abd":"code","8dbad216":"code","78cd0f4a":"code","630ae0a2":"code","6781ec81":"code","56aa9820":"code","17e6d31a":"code","2c981428":"markdown"},"source":{"83223abd":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.tree import DecisionTreeRegressor, plot_tree","8dbad216":"DIR = '\/kaggle\/input\/real-time-advertisers-auction\/'\n\ndf = pd.read_csv(DIR + 'Dataset.csv')","78cd0f4a":"def weird_division(n, d):\n    return n \/ d if d else 0\n\ndf['CPM'] = df.apply(lambda x: weird_division(((x['total_revenue']*100)),x['measurable_impressions'])*1000 , axis=1)\n\ndf = df[df['CPM'] >= 0]","630ae0a2":"train = df[df['date'] < '2019-06-22']\ntest = df[df['date'] >= '2019-06-22']\n\ntrain = train[train['CPM'] < train['CPM'].quantile(.95)]\ntest = test[test['CPM'] < test['CPM'].quantile(.95)]","6781ec81":"# Here are categorical features only\nFEATURES = ['site_id', 'ad_type_id', 'geo_id', 'device_category_id', 'advertiser_id', \n            'order_id', 'line_item_type_id', 'os_id', 'integration_type_id', \n            'monetization_channel_id', 'ad_unit_id']","56aa9820":"\ndtr = DecisionTreeRegressor()\ndtr.fit(train[FEATURES], train['CPM'])\n\npreds = dtr.predict(test[FEATURES])","17e6d31a":"mean_squared_error(test['CPM'], preds)","2c981428":"# Simple DecisionTree to predict CPM"}}