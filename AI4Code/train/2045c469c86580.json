{"cell_type":{"1c0c4677":"code","ea572eec":"code","2b2c2fcf":"code","55089882":"code","96451e30":"code","bf09e02a":"code","43d7a4d8":"code","7d045bfb":"code","8070cd8c":"code","c15a6c73":"code","82706054":"code","18782897":"code","1ea38473":"code","ed423209":"code","8e839a0b":"code","7a2d5675":"code","b6ff1f9b":"code","08e87ede":"code","3f93de9c":"code","90846c99":"code","7a4e3df8":"code","bf76ebae":"code","b011c42b":"code","8f844727":"code","50dfb355":"markdown","a524f069":"markdown","851bea65":"markdown"},"source":{"1c0c4677":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea572eec":"data = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\n#Burada datay\u0131 read yap\u0131yoruz","2b2c2fcf":"data.info()\n#Dataya genel bir bak\u0131\u015f atmam\u0131z\u0131 sa\u011fl\u0131yor.","55089882":"data.columns","96451e30":"data.head(5) # dataya ilk 5 eleman\u0131na genel bak\u0131\u015f","bf09e02a":"data.head().T","43d7a4d8":"data.tail()","7d045bfb":"data.sample(5)","8070cd8c":"data.shape","c15a6c73":"data[['Publisher','Year']].dtypes","82706054":"data.describe()\n#data.describe().T  #transpozite","18782897":"data[['Year', 'Publisher']].describe(include='all')","1ea38473":"data.corr() \n#correlation a bakarsak burada global_sales ile NA_Sales aras\u0131nda b\u00fcy\u00fck bir do\u011fru orant\u0131 g\u00f6rebiliriz","ed423209":"#correlation map\nf,ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\n\n#annot=true ---> grafikteki yazan say\u0131lar\u0131n g\u00f6z\u00fckmesi i\u00e7in\n#heatmap \u015fekilde g\u00f6stermemiz i\u00e7in. sns de \u00e7a\u011f\u0131rd\u0131\u011f\u0131m\u0131z seaborn k\u00fct\u00fcphanesi\n#linewidths 0,5 ise linelar aras\u0131 kal\u0131nl\u0131k incelik\n#fmt = '.1f' ise \u015fekilde 0 dan sonra yazd\u0131raca\u011f\u0131 1 de\u011fer olsun demek.\n#subplot 18,18 yazarsak fig\u00fcr\u00fcm\u00fcz\u00fcn de\u011ferini b\u00fcy\u00fctmek istememiz.","8e839a0b":"#Y\u00fcksek bir correlation yakalam\u0131\u015ft\u0131k bunu scatter plot ile incelersek\n#Scatter Plot\n#Amac\u0131m\u0131z iki tane feature yada variable aras\u0131ndaki correlition \u0131 bulmak\n#x=Global_Sales y=Na_Sales\ndata.plot(kind='scatter',x = 'Global_Sales',y = 'NA_Sales',alpha = 0.5, color= 'red')\nplt.xlabel('Global_Sales')\nplt.ylabel('NA_Sales')\nplt.title('Global_Sales NA_Sales Plot')\nplt.show()\n# Bu grafikten anlayaca\u011f\u0131m\u0131z \u015fey;\n#yo\u011funlu\u011fun oldu\u011fu yere bakarsak tam k\u00f6\u015feden do\u011frusal bir line \u00e7izebiliriz ve \n#genelde atak art\u0131yorsa defans\u0131nda artt\u0131\u011f\u0131n\u0131 yorumlayabiliriz.\n\n##t\u00fcm bu kodu ayn\u0131 \u015fekilde \u015f\u00f6yle tek de yazabilirdik. Ama title ba\u015fl\u0131klar\u0131 olmazd\u0131 detay olmazd\u0131.\n##(plt.scatter(data.Global_Sales,data.NA_Sales,color= 'red',alpha=0.5) #\n","7a2d5675":"#80 den b\u00fcy\u00fck Hem global hem NA_Sales sat\u0131\u015f\u0131 yakalayan bir oyun g\u00f6r\u00fcyoruz. Bulal\u0131m\nz = data['Global_Sales'] > 80\ndata[z]\n\n#data[data['Global_Sales'] > 80] ile de yazabilirdik","b6ff1f9b":"k = data[(data['Publisher'] == 'Nintendo') & (data['Genre'] == 'Sports')]\nlen(k)\n    #Bu \u015fekilde nintendo nun sports kategorisinde yapt\u0131\u011f\u0131 55 sat\u0131\u015f oldu\u011funu g\u00f6rm\u00fc\u015f oluruz\n","08e87ede":"#Histogram\n# bins = number of bar in figure\n#bins = Barlar\u0131n say\u0131s\u0131n\u0131 veriyor yani 50 tane bar olsun. #figsize ise boyutu k\u00fc\u00e7\u00fclt\u00fcp b\u00fcy\u00fct\u00fcyor.\ndata.Global_Sales.plot(kind = 'hist', bins = 50, figsize = (12,12))\nplt.show()\n#A\u00c7IKLAMA: \n#X ekseni diyebilece\u011fimiz k\u0131s\u0131m Global_Sales in ald\u0131\u011f\u0131 de\u011ferleri\n# Y ekseni diyece\u011fimiz k\u0131s\u0131m ise \u00f6rne\u011fin; 10 global_Sales e  sahip oyunlardan ka\u00e7 tane var ? \n# Y ekseni de bize bunun bilgisini sa\u011fl\u0131yor.","3f93de9c":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.NA_Sales.plot(kind = 'line', color = 'g',label = 'NA_Sales',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.JP_Sales.plot(color = 'r',label = 'JP_Sales',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot. (Plotun \u00fcst\u00fcnde yazan etiket yaz\u0131s\u0131)\nplt.show()\n\n#A\u00c7IKLAMASI:\n#x ekseni oyunlar\u0131n index s\u0131ras\u0131 y ekseni ise NA_Sales ve JP_Sales\n#%% kind k\u0131sm\u0131 plot \u00e7e\u015fidi i\u00e7in. alpha saydaml\u0131k(0 ile 1 aras\u0131 oluyo). grid arka plan kareler. linestyle: \u00e7ubuklar iki nokta \n#\u015feklinde olsun. linewidth=1 yani line plotunun kal\u0131nl\u0131\u011f\u0131.\n#plt.legend(loc='upper right')  bu kod ise histogram\u0131n sa\u011f \u00fcst k\u00f6\u015fesini olusturuyor","90846c99":"# 1 - Filtering Pandas data frame\nx = data['Global_Sales']>40     # There are only 2 pokemons who have higher global_sales value than 40\ndata[x]","7a4e3df8":"# 2 - Filtering pandas with logical_and\n\ndata[np.logical_and(data['Global_Sales']>25, data['Year']>2000.0 )]","bf76ebae":"#Same code\n\ndata[(data['Global_Sales']>25) & (data['Year']>2000.0)]","b011c42b":"#NA_Sales each i if > NA_Sales.mean() we create a new column and write  high\n# or low\nthreshold = sum(data['NA_Sales'])\/len(data['NA_Sales'])\ndata[\"sales_level\"] = [\"high\" if i > threshold else \"low\" for i in data['NA_Sales']]\ndata.loc[::-1,[\"sales_level\",\"NA_Sales\"]] ","8f844727":"#and check it\ndata.head()","50dfb355":"Now, Let's check the datatype for both features.","a524f069":"Check some random data using .sample() method. It will pick the random number of records.","851bea65":"Here, One feature is numerical and another is categorical featue, So we use include='all' to show both feature descriptions"}}