{"cell_type":{"372e94b1":"code","2a49f998":"code","48e97140":"code","c9715dcb":"code","8a56fb5c":"code","ddc6546f":"code","54990f54":"code","a352adc4":"code","496c3ad4":"code","a2a305e0":"code","0235f258":"code","57f22761":"code","0fe9ded1":"code","99e10b38":"code","555d6b3c":"code","9cbefd11":"code","d416a0b2":"code","999f89bb":"code","ae73d77e":"code","e9b0b8c7":"code","a13fc6d4":"code","2d06f94c":"code","34a93643":"code","5304e347":"code","b9f95d1a":"code","09686547":"code","7aca4af3":"code","0e8a6b78":"code","e521cff4":"code","d8afeb11":"markdown","25b0fe2e":"markdown","fe8f5a24":"markdown","3a7c38dc":"markdown"},"source":{"372e94b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2a49f998":"data = pd.read_csv('..\/input\/dc-wikia-data.csv')","48e97140":"data.head()","c9715dcb":"data.tail()","8a56fb5c":"data.columns","ddc6546f":"data.shape","54990f54":"data.info()","a352adc4":"filter1 = data[(data['SEX'] == 'Male Characters')&(data['ID']=='Secret Identity')&(data['ALIGN']=='Good Characters')]\nfilter1","496c3ad4":"filter1.shape","a2a305e0":"filter1.describe()","0235f258":"data['ALIVE'].value_counts(dropna = False)","57f22761":"filter1[filter1['name']=='Batman (Bruce Wayne)']","0fe9ded1":"filter2 = data[(data['ALIVE']=='Living Characters')&(data['APPEARANCES']>1200)]\nfilter2","99e10b38":"filter2.describe()","555d6b3c":"filter2.boxplot(column ='APPEARANCES')","9cbefd11":"melted_data = pd.melt(frame = filter2,id_vars = 'name',value_vars = ['FIRST APPEARANCE','APPEARANCES'])\nmelted_data","d416a0b2":"melted_data.pivot(index = 'name',columns = 'variable',values = 'value') #I think, We don't need melted data.","999f89bb":"filter2","ae73d77e":"data1 = filter2['EYE']\ndata2 = filter2['HAIR']\ndata_concat = pd.concat([filter2['name'],data1,data2],axis = 1)\ndata_concat","e9b0b8c7":"filter2.dtypes","a13fc6d4":"filter2.info()","2d06f94c":"filter2['GSM'].value_counts(dropna = False)","34a93643":"fd = filter2.copy()\nfd","5304e347":"fd['GSM'].dropna(inplace = True)","b9f95d1a":"assert fd['GSM'].notnull().all()","09686547":"fd","7aca4af3":"fd['GSM'].fillna('empty',inplace = True)  ","0e8a6b78":"fd.notnull().all()","e521cff4":"fd","d8afeb11":"I think i will do  sexism but data is big,I am sorry.By ladies.\nEverything for batman.\n","25b0fe2e":"Yeah batman is lives.OK. I need one more filter.I think we should also take wonder wowan. :D","fe8f5a24":"I like this data.We haven't any outliers.\n","3a7c38dc":"Some hairs is NaN.Lets we solve that problem.\n"}}