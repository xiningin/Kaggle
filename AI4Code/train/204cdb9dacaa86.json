{"cell_type":{"4377fb0a":"code","9a10059a":"code","996c0821":"code","8a5450e2":"code","754875ab":"code","ff40ffd4":"code","bef88f8f":"code","d76ff3ed":"code","5bea529f":"code","4a324190":"code","d719de5e":"code","183dd28a":"code","1388d1eb":"code","079254c1":"code","5a0a1038":"markdown","714e9af0":"markdown","39f9ec4b":"markdown"},"source":{"4377fb0a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\n\n# Any results you write to the current directory are saved as output.","9a10059a":"train = pd.read_csv('\/kaggle\/input\/data-without-drift\/train_clean.csv')\n","996c0821":"group_size = 500_000\n\ntrain['group'] = train.index\/\/group_size","8a5450e2":"train.head()","754875ab":"train['mean_sig'] = train.groupby(['open_channels','group'])['signal'].transform('mean')","ff40ffd4":"colors = sns.color_palette(\"Paired\")\nlen(colors)","bef88f8f":"plt.scatter?","d76ff3ed":"res = 100\nx = np.arange(len(train))[::res]\ny = train['open_channels'].values[::res]\nmean_sig = train['mean_sig'].values[::res]\nsig = train['signal'].values[::res]\n\nplt.figure(figsize=(25,5))\nfor i in range(11):\n    plt.scatter(x[y==i], mean_sig[y==i], 1, marker='o', color=colors[i])","5bea529f":"res = 100\nx = np.arange(len(train))[::res]\ny = train['open_channels'].values[::res]\nmean_sig = train['mean_sig'].values[::res]\nsig = train['signal'].values[::res]\n\nplt.figure(figsize=(25,5))\nfor i in range(11):\n    plt.scatter(x[y==i], mean_sig[y==i], 1, marker='o', color=colors[i])\n    plt.scatter(x[y==i], sig[y==i], 1,  alpha=0.5, label=f'channel_{i}',color=colors[i])\n\n    ","4a324190":"print(train.shape)","d719de5e":"print(train['group'].unique())","183dd28a":"plt.figure(figsize=(25,5))\nres = 50\nfor i in range(10):\n    df_group = train[train['group']==i]\n    x = range(group_size*i, group_size*i+len(df_group))[::res]\n    y = df_group['signal'].values[::res]\n    plt.plot(x, y)","1388d1eb":"\ntrain_sub = train[train['group']!=7]\nplt.figure(figsize=(25,5))\nx = np.array(range(0, len(train_sub)))[::10]\ny = train_sub['open_channels'].values[::10]\nsig = train_sub['signal'].values[::10]\nfor i in range(11):\n    plt.scatter(x[y==i], sig[y==i], 1,  alpha=0.5, label=f'channel_{i}')\nplt.legend();","079254c1":"res = 10\ntrain_sub = train\nplt.figure(figsize=(25,5))\nx = np.array(range(0, len(train_sub)))[::res]\ny = train_sub['open_channels'].values[::res]\nsig = train_sub['signal'].values[::res]\nfor i in range(11):\n    plt.scatter(x[y==i], sig[y==i], 1,  alpha=0.5, label=f'channel_{i}')\n#     plt.plot(x[y==i], sig[y==i], 1,  alpha=0.5, label=f'channel_{i}')\n    \nfor i in range(11):\n    plt.plot([i*500_000,i*500_000], [-4,8], color='black')\n    \nfor i in range(10):\n    plt.text(i*500_000+250_000, 5, i)","5a0a1038":"# thanks\n- https:\/\/www.kaggle.com\/sirishks\/0-918-only-signal-no-model","714e9af0":"I remove group 7, because group 7 has some noise signal.","39f9ec4b":"# Why I write this notebook?\nIdea comes from this wonderful notebooks [randomforest](https:\/\/www.kaggle.com\/frankmollard\/randomforest), but Frank use R, so I try use python to show his plot.\n\nI think good understand the data is the key point for this competition, and good visulization helps.\n\n# Thanks\nclean data use Chris's dataset and Markus's notebook [clean-removal-of-data-drift](https:\/\/www.kaggle.com\/friedchips\/clean-removal-of-data-drift).\nwhat's more, there are many wonderful notebooks use different models, I learned a lot from this competition, thanks all of you."}}