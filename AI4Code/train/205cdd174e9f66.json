{"cell_type":{"46c74e80":"code","262bbd30":"code","83224787":"code","1c01e3b9":"code","c643c30f":"code","31d7565b":"code","2dbd62f0":"code","bebce746":"code","73fa9ad4":"code","49906c23":"code","5b38f9db":"code","8ea8ff17":"code","2b0237af":"code","9dc2308e":"code","762ddeb5":"code","e95271cf":"code","27996501":"code","22c4dfd9":"code","abad0306":"code","718e1b52":"code","5f71133e":"code","ac00356c":"code","c764d8d4":"code","2b860715":"code","9d673835":"code","99a32152":"code","47c5691a":"code","3c372e61":"code","59f6be5c":"code","d2efa470":"code","6518df93":"code","830eef48":"code","017abd7a":"markdown","498dddf0":"markdown","d14daea7":"markdown","bd89b12d":"markdown","b0244f8b":"markdown","570b7e93":"markdown","4bfcb6df":"markdown","5efc03ae":"markdown","eed70b93":"markdown","f255f121":"markdown","0be0a937":"markdown","b5cb10fd":"markdown","21e3f6f9":"markdown","26e82bc7":"markdown","dfd31439":"markdown","0725d826":"markdown","5186166d":"markdown","e82603ff":"markdown","b8cfc021":"markdown","c12f2a3f":"markdown"},"source":{"46c74e80":"import numpy as np \nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nplt.style.use('fivethirtyeight')\npd.set_option('display.width', 100)\npd.set_option('display.max_rows', 25)\npd.set_option('display.max_columns', 25)\n\nimport warnings\nwarnings.simplefilter(\"ignore\")\n\n%matplotlib inline\n\nprint('='*100)\nprint('Ready To Launch !!!!')\nprint('='*100)","262bbd30":"# Load data\ndf = pd.read_csv('..\/input\/taiwan-capitalization-weighted-stock-index\/TWII.csv')\ndf","83224787":"# Getting information\ndf.info()","1c01e3b9":"# Checking the null value\ndf.isna().mean().to_frame()","c643c30f":"# Droping missing value\ndf = df.dropna()","31d7565b":"# Checking missing value\ndf.isna().mean().to_frame()","2dbd62f0":"# Check the data\ndf","bebce746":"# Convert Date Columns to Timestamp\ndf['Date'] = pd.to_datetime(df['Date'])","73fa9ad4":"# Check type\ntype(df['Date'][0])","49906c23":"# Set the Date column to index\ndf.set_index('Date',inplace=True)\n\n# Checking the first 5 rows of data\ndf.head()","5b38f9db":"# Checking the last 5 rows of data\ndf.tail()","8ea8ff17":"# Accomodate data without Volume\ndata = df.drop('Volume',axis=1)","2b0237af":"# Plotting Data\nplt.figure(figsize=(20,10))\nsns.lineplot(data=data.loc['2001-01-04':'2001-12-31'])\nplt.title('Taiwan Stocks in 2001 (Jan - Dec)')\nplt.show()","9dc2308e":"# Plotting Data\nplt.figure(figsize=(20,10))\nsns.lineplot(data=data.loc['2021-01-01':])\nplt.title('Taiwan Stocks in 2021 (Jan - Current Month)')\nplt.show()","762ddeb5":"# Make a For Loop and Plot the Data\nfor year in range(2002,2020+1):\n    \n    # Figuring the size\n    plt.figure(figsize=(20,10))\n    \n    # Create a lineplot for data\n    sns.lineplot(data=data.loc[f'{year}-01-01':f'{year}-12-31'], \n                 linewidth=1)\n    \n    # Create a title\n    plt.title(f'Taiwan Stocks in {year}')\n    \n    # Show the plot\n    plt.show()\n    \n    # Print a Blank Space\n    print('\\n')","e95271cf":"# Accomodate Data Volume\nvolume = df['Volume']","27996501":"# Plotting Data\nplt.figure(figsize=(20,10))\nsns.lineplot(data=volume.loc['2001-01-04':'2001-12-31'])\nplt.title('Taiwan Stocks Volume in 2001 (Jan - Dec)')\nplt.show()","22c4dfd9":"# Plotting Data\nplt.figure(figsize=(20,10))\nsns.lineplot(data=volume.loc['2021-01-01':])\nplt.title('Taiwan Stocks Volume in 2001 (Jan - Current Month)')\nplt.show()","abad0306":"# Make a For loop and Plot the Data\nfor year in range(2002,2020+1):\n    \n    # Figuring the size\n    plt.figure(figsize=(20,10))\n    \n    # Create a lineplot for data \n    sns.lineplot(data=volume.loc[f'{year}-01-01':f'{year}-12-31'],\n                 linewidth=1)\n    \n    # Create a title\n    plt.title(f'Taiwan Stock Volume in {year}')\n    \n    # Show the plot\n    plt.show()\n    \n    # Print a Blank Space\n    print('\\n')","718e1b52":"# Plotting Data\nplt.figure(figsize=(20,10))\nsns.lineplot(data=data,linewidth=1)\nplt.title(f'Taiwan Overall Stocks(2001-2021)')\nplt.show()","5f71133e":"# Plotting Data\nplt.figure(figsize=(20,10))\nsns.lineplot(data=volume,linewidth=1)\nplt.title(f'Taiwan Overall Volume Stocks(2001-2021)')\nplt.show()","ac00356c":"# Accomodate Data\nopen_stock = df[['Open']]\nclose_stock = df[['Close']]\nvolume_stock = df[['Volume']]","c764d8d4":"# Make A Plot Function\ndef plot_timeseries(tdf,label1,label2,col,title):\n    \n    # Figuring the size\n    plt.figure(figsize=(25,15))\n    \n    # Create a lineplot for data 1\n    sns.lineplot(data=tdf,\n                 label=label1,\n                 legend=False,)\n    \n    # Create a lineplot for data 2\n    sns.lineplot(data=df[col],\n                 label=label2,\n                 legend=False,)\n    \n    # Create a title\n    plt.title(title)\n    \n    # Show the legend\n    plt.legend()\n    \n    # Show the plot\n    plt.show()","2b860715":"# Prepare Data\nsimple_moving_average_open_stock = open_stock.rolling(window=30).mean()\n\n# Plotting Data\nplot_timeseries(simple_moving_average_open_stock, # Data\n                'Moving Average', # Label 1\n                'Actual', # Label 2\n                'Open', # Column of the Data\n                'Open Stock Moving Average') # Title","9d673835":"# Prepare Data\nsimple_moving_average_close_stock = close_stock.rolling(window=30).mean()\n\n# Plotting Data\nplot_timeseries(simple_moving_average_close_stock, # Data\n                'Moving Average', # Label 1\n                'Actual', # Label 2\n                'Close', # Column of the Data\n                'Close Stock Moving Average') # Title","99a32152":"# Prepare Data\nsimple_moving_average_volume_stock = volume_stock.rolling(window=30).mean()\n\n# Plotting Data\nplot_timeseries(simple_moving_average_volume_stock, # Data\n                'Moving Average', # Label 1\n                'Actual', # Label 2\n                'Volume', # Column of the Data\n                'Volume Stock Moving Average') # Title","47c5691a":"# Prepare Data\nweights = np.arange(1,31)\nopen_MV = df['Open'].rolling(30).apply(lambda close: np.dot(close, weights)\/weights.sum(), \n                                      raw=True)\n\n# Plotting Data\nplot_timeseries(open_MV, # Data\n                'Weighted Moving Average', # Label 1\n                'Actual', # Label 2\n                'Open', # Column of the Data\n                'Open Stock Weighted Moving Average') # Title","3c372e61":"# Prepare Data\nweights = np.arange(1,31)\nclose_MV = df['Close'].rolling(30).apply(lambda close: np.dot(close, weights)\/weights.sum(), \n                                        raw=True)\n\n# Plotting Data\nplot_timeseries(close_MV, # Data\n                'Weighted Moving Average', # Label 1\n                'Actual', # Label 2\n                'Close', # Column of the Data\n                'Closing Stock Weighted Moving Average') # Title","59f6be5c":"# Prepare Data\nweights = np.arange(1,31)\nvolume_MV = df['Volume'].rolling(30).apply(lambda close: np.dot(close, weights)\/weights.sum(), \n                                          raw=True)\n\n# Plotting Data\nplot_timeseries(volume_MV, # Data\n                'Weighted Moving Average', # Label 1\n                'Actual', # Label 2\n                'Volume', # Column of the Data\n                'Closing Stock Weighted Moving Average') # Title","d2efa470":"# Prepare Data\nexpo_mv_open = df['Open'].ewm(span=30, \n                              adjust=False).mean()\n\n# Plotting Data\nplot_timeseries(expo_mv_open, # Data\n                'Exponential Moving Average', # Label 1\n                'Actual', # Label 2\n                'Open', # Column of the Data\n                'Open Stock Exponential Moving Average') # Title","6518df93":"# Prepare Data\nexpo_mv_close = df['Close'].ewm(span=30, \n                                adjust=False).mean()\n\n# Plotting Data\nplot_timeseries(expo_mv_close, # Data\n                'Exponential Moving Average', # Label 1\n                'Actual', # Label 2\n                'Close', # Column of the Data\n                'Close Stock Exponential Moving Average') # Title","830eef48":"# Prepare Data\nexpo_mv_volume = df['Volume'].ewm(span=30, \n                                  adjust=False).mean()\n\n# Plotting Data\nplot_timeseries(expo_mv_volume, # Data\n                'Exponential Moving Average', # Label 1\n                'Actual', # Label 2\n                'Volume', # Column of the Data\n                'Volume Stock Exponential Moving Average') # Title","017abd7a":"# **Import Libraries**","498dddf0":"# **Time Series Analysis on Open, Closing, and Volume Stock**","d14daea7":"## **Conclusion**\n\nThere is a decrease in stock in the 4th to the 10th month of 2001","bd89b12d":"## **Conclusion**\n\nFrom the visualization above, it can be concluded that the volume data decresing in the end of the month, and there is a very high increase in the middle of the 4th month","b0244f8b":"# **Overall Analysis Taiwan Weight Stock Index**","570b7e93":"## **Conclusion**\n\nFrom the visualization above, it can be concluded that the average increase in stock occurs at the end of the month every year in an average of 8-10 thousand stocks, and declines often occur in the middle of the month, and also there seems to be some decline at the end of each year.","4bfcb6df":"# **Taiwan Stocks From 2002 - 2020**","5efc03ae":"# **Analysis on Open, High, Low, and Close from 2001 - Current Year**","eed70b93":"## **Conclusion**\n\nStock ups and downs are clearly visible here, where there is a good increase in months 01 to 05, and there is a very drastic decline in the middle of months 05 to 06.","f255f121":"# **Checking Data**","0be0a937":"# **Weighted Moving Average**\n\nA Weighted Moving Average puts more weight on recent data and less on past data. This is done by multiplying each bar's price by a weighting factor. Because of its unique calculation, WMA will follow prices more closely than a corresponding Simple Moving Average.","b5cb10fd":"# **Simple Moving Average**\n\nA simple moving average (SMA) is an arithmetic moving average calculated by adding recent prices and then dividing that figure by the number of time periods in the calculation average.","21e3f6f9":"## **Conclusion**\n\nFrom the visualization above, it can be concluded that the volume data is very constant and there is no increase or decrease.","26e82bc7":"# **And that's it! Don't Forget to give me feedback and upvote if you like it!**","dfd31439":"## **Conclusion**\n\nFrom the visualization above, it can be concluded that the stock that occurred at the end of the month decreased","0725d826":"# **Taiwan Volume Stocks From 2002 - 2020**","5186166d":"# **Exponential Moving Average**\n\nThe exponential moving average (EMA) is a technical chart indicator that tracks the price of an investment (like a stock or commodity) over time. The EMA is a type of weighted moving average (WMA) that gives more weighting or importance to recent price data.","e82603ff":"# **Load Data**","b8cfc021":"### We can see the ups and downs of the stock in the overall data, where there was a significant increase in stock in early 2020 until now, and there was a decline in stock in the early 2000 and 2008","c12f2a3f":"# **Volume Analysis From 2001 - Current Year**"}}