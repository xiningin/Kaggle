{"cell_type":{"5fd94ec7":"code","646d7388":"code","c65a96f6":"code","20df313f":"code","cde021fd":"code","ddc93823":"code","203fe98e":"code","63733894":"code","3b437919":"code","50a95f17":"code","d5b0ed13":"markdown","c4c00fa8":"markdown","edae2f26":"markdown","7c375109":"markdown"},"source":{"5fd94ec7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","646d7388":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","c65a96f6":"data=pd.read_csv('..\/input\/trip-dataset\/trip.csv')\ndata.head()","20df313f":"sns.boxplot(x='tripduration', data=data)\nplt.show()","cde021fd":"sorts=data['tripduration'].sort_values()\nsorts","ddc93823":"q1=sorts.quantile(0.25)\nq3=sorts.quantile(0.75)\n\nprint(\"The value of q1 is:\",q1)\nprint(\"The value of q3 is:\",q3)","203fe98e":"iqr = q3 - q1\nprint(\"The value of iqr is:\",iqr)","63733894":"upper=q1-1.5*iqr\nlower=q3+1.5*iqr\n\nprint(\"The value of upper bound is:\",round(upper))\nprint(\"The value of lower bound is:\",round(lower))","3b437919":"clean_data=sorts[~((sorts<(upper))  |  (sorts>(lower)))]\nclean_data","50a95f17":"sns.boxplot(x=clean_data)\nplt.show()","d5b0ed13":"# IQR Method","c4c00fa8":"# Identifying outliers by Boxplot","edae2f26":"# Thank you ","7c375109":"# Boxplot after removing outliers"}}