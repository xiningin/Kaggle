{"cell_type":{"8898fb98":"code","2bba1525":"code","7fe6776f":"code","e6d1f70b":"code","662d7b16":"code","ed2008c6":"code","6ddb374e":"code","fe9a3bdb":"code","72951831":"code","0c870f5f":"code","0ab30d1f":"code","15e5e914":"code","ef38cbbe":"code","8cc125a2":"code","c761b407":"code","e1a51c48":"code","658dbbff":"code","3d7068c6":"code","82ed841f":"code","ed155189":"code","a85daad3":"code","044a2d78":"markdown","683d9ef3":"markdown","6c52d0d0":"markdown","b534b72c":"markdown","2a4b76f2":"markdown","dbdd14cc":"markdown","8deb0b5b":"markdown","da3860e7":"markdown","00185019":"markdown","2e294fa6":"markdown"},"source":{"8898fb98":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","2bba1525":"data=pd.read_csv(\"..\/input\/airstats-data-on-airports-around-the-world\/airports.csv\")\n\nprint(\"Lines: \",data.shape[0])\nprint(\"columns: \",data.shape[1])\ndata.head() \n","7fe6776f":"countries=pd.read_csv('..\/input\/airstats-data-on-airports-around-the-world\/countries.csv')\nprint(\"Lines: \",countries.shape[0])\nprint(\"columns: \",countries.shape[1])\ncountries.head()","e6d1f70b":"regions=pd.read_csv('..\/input\/airstats-data-on-airports-around-the-world\/regions.csv')\nprint(\"Lines: \",regions.shape[0])\nprint(\"columns: \",regions.shape[1])\nregions.head()","662d7b16":"data.drop(['wikipedia_link','home_link','keywords'],axis=1,inplace=True) \ncountries.drop(['wikipedia_link','keywords'],axis=1,inplace=True) \nregions.drop(['wikipedia_link','keywords'],axis=1,inplace=True)\ndata=data[data['continent']!='AN'] # we will remove Antarctica because it has few airports \ncountries=countries[countries['continent']!='AN'] \ndata=data[data['type']!='closed'] # drop closed airports\nregions=regions[regions['local_code']!='U-A'] # drop unassigned airports in regions","ed2008c6":"data['continent']=data['continent'].fillna('NoA') # NA for north america is a little bit confusing so we will fill it with NoA\ncountries['continent']=countries['continent'].fillna('NoA')\ndata['iso_country']=data['iso_country'].fillna('NAM') # well change NA to NAM for Namibia\ncountries['code']=countries['code'].fillna('NAM')\ncountries.loc[countries['name']=='Per\u00fa','name']='Peru' ","6ddb374e":"data.rename(columns={'elevation_ft':'elevation_m'},inplace=True) #change attribut name\ndata['elevation_m']=data['elevation_m']\/3.2808 ## convert to meters\ndata.head()","fe9a3bdb":"data.set_index('ident',inplace=True) ## set index to ident\nprint(\"index is unique \") if data.index.is_unique else print(\"index is not  (duplicated index )\");","72951831":"a=data.groupby('continent').size().sort_values(ascending=True).index # we will get the continents with the most airports\ndata=data[data['continent'].isin(a)] # we will keep only the continents with the most airports","0c870f5f":"number_per_country=data['iso_country'].value_counts()\nmedium_airports=data[data['type']=='medium_airport'][\"iso_country\"].value_counts()\nsmall_airports=data[data['type']=='small_airport'][\"iso_country\"].value_counts()\nnumber_per_country\n\n","0ab30d1f":"# as the united states has too many airports, we will separate it in US_airports\nUS_airports=data[data['iso_country']=='US']\nUS_airports.head()","15e5e914":"sns.countplot(x='continent',data=data).set_title('Number of airports per continent')","ef38cbbe":"sns.set_theme(style=\"darkgrid\",color_codes=True)\nsns.catplot(x='continent', y='elevation_m',data=data)","8cc125a2":"## plot the number of airports per region in the US\nUS_airports.loc[:,\"iso_region\"]=US_airports.loc[:,\"iso_region\"].replace({'US-':''}, regex=True)\n## set figure size\nsns.set(rc={'figure.figsize':(30,8)})\n## seaborn title \nsns.countplot(x='iso_region',data=US_airports).set_title('Number of airports per region in the USA')\n","c761b407":"# subplot of the number of airports per type\ncounts = data['type'].value_counts().sort_index()\nlabels =[counts.index[i] for i in range(len(counts))]\nsizes = [counts.values[i] for i in range(len(counts))]\n\ncounts_US = US_airports['type'].value_counts().sort_index()\nlabels_US =[counts_US.index[i] for i in range(len(counts))]\nsizes_US = [counts_US.values[i] for i in range(len(counts))]\n\n\nplt.figure(figsize=(14,8))\n\nplt.subplot(1,2,1.5)\nplt.pie(sizes_US,labels=labels_US,autopct='%1.1f%%',startangle=90,textprops={'fontsize':10})\nplt.title('types of airports in the US',fontsize=20)\n\nplt.subplot(1,2,2)\nplt.pie(sizes,labels=labels,autopct='%1.1f%%',startangle=90,textprops={'fontsize':15})\nplt.title('types of airports in the rest of the world',fontsize=20)\nplt.figure(figsize=(25,16))\n\nplt.show()\nprint(\"In the US there is:\\n\",counts_US.sort_values())\nprint(\"\\nwhile there is in the rest of the world :\\n\",counts.sort_values())\n\n","e1a51c48":"for i in countries.index:\n    #add a new column with the number of airports per country\n    code=countries.loc[i,'code']\n\n    if code in number_per_country.index:\n        total=number_per_country[code]\n        countries.loc[i,'number_of_airports']=total\n    else:\n        countries.loc[i,'number_of_airports']=0\n\n\n    if code in medium_airports.index:\n        total_medium=medium_airports[code]\n        countries.loc[i,'number_of_medium_airports']=total_medium\n    else:\n        countries.loc[i,'number_of_medium_airports']=0\n    \n    if code in small_airports.index:\n        total_small=small_airports[code]\n        countries.loc[i,'number_of_small_airports']=total_small\n    else:\n        countries.loc[i,'number_of_small_airports']=0\n        \n\ncountries.head()    ","658dbbff":"# drop the US because it has too many airports\npx.choropleth(countries, locations=\"name\", \n                    locationmode='country names', color=\"number_of_airports\", \n                    hover_name=\"number_of_airports\", \n                    color_continuous_scale=px.colors.sequential.Plasma,\n                    title='number of airports per country'\n)","3d7068c6":"px.choropleth(countries, locations=\"name\", \n                    locationmode='country names', color=\"number_of_medium_airports\", \n                    hover_name=\"number_of_medium_airports\",\n                    color_continuous_scale=\"Viridis\",\n                    title='number OF MEDIUM airports per country'\n)","82ed841f":"px.choropleth(countries, locations=\"name\", \n                    locationmode='country names', color=\"number_of_small_airports\",\n                    hover_name=\"number_of_small_airports\", \n                    color_continuous_scale=\"Viridis\",\n                    title='number small airports per country'\n)","ed155189":"number_per_region=US_airports['iso_region'].value_counts()\nUS_regions=regions[regions['iso_country']=='US']\n\nfor i in US_regions.index:\n    code=US_regions.loc[i,'local_code']\n    total=number_per_region[code]\n    US_regions.loc[i,'number_of_airports']=total\n\nUS_regions.head()","a85daad3":"fig = go.Figure(data=go.Choropleth(\n    locations=US_regions['local_code'], # Spatial coordinates \n    z = US_regions['number_of_airports'], # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'blues',\n    colorbar_title = \"number of airports\",\n))\n\nfig.update_layout(\n    title_text = 'number of airports per state',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","044a2d78":"### For US airports","683d9ef3":"# Quick analisys of the airports dataset\n#### Link : https:\/\/www.kaggle.com\/patrasaurabh\/airstats-data-on-airports-around-the-world","6c52d0d0":"### Replace confusing values","b534b72c":"## Data cleaning","2a4b76f2":"### Values sorting ","dbdd14cc":"### convert elevation to meters","8deb0b5b":"## Data importing","da3860e7":"### Drop useless columns and values","00185019":"## Data visualisation","2e294fa6":"### Verify the unicity of values"}}