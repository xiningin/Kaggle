{"cell_type":{"3bd6d13e":"code","29929dd6":"code","41faf3ab":"code","66d2fb8b":"code","2f1d1ee5":"code","f32c73ac":"code","e1a59847":"code","65394f04":"markdown"},"source":{"3bd6d13e":"#Import Libraries\nimport numpy as np\nimport pandas as pd\nimport xgboost as xgb\nimport os","29929dd6":"# Importing the dataset\ntrain = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","41faf3ab":"# Taking care of missing data\n\n# Age\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy = 'mean')\nimputer = imputer.fit(train.iloc[:, 5:6])\ntrain.iloc[:, 5:6] = imputer.transform(train.iloc[:, 5:6])\nimputer = imputer.fit(test.iloc[:, 4:5])\ntest.iloc[:, 4:5] = imputer.transform(test.iloc[:, 4:5])\n\n# Embarked\nfrom sklearn.impute import SimpleImputer\nimputer_Emb = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\nimputer_Emb.fit(train.iloc[:, 11:12])\ntrain.iloc[:, 11:12] = imputer_Emb.transform(train.iloc[:, 11:12])\nimputer_Emb.fit(test.iloc[:, 10:11])\ntest.iloc[:, 10:11] = imputer_Emb.transform(test.iloc[:, 10:11])","66d2fb8b":"# Tranforming Categorical in dummies\nX_train = pd.get_dummies(train, prefix_sep=\"_\", columns=[\"Pclass\", \"Sex\", \"Embarked\"])\nX_test = pd.get_dummies(test, prefix_sep=\"_\", columns=[\"Pclass\", \"Sex\", \"Embarked\"])","2f1d1ee5":"# Drop columns and prepare train, test datasets\ny_train = np.array(X_train['Survived'])\nX_train.drop(['Survived', 'Name', 'Ticket', 'Cabin'], inplace=True, axis=1)\nX_test.drop(['Name', 'Ticket', 'Cabin'], inplace=True, axis=1)","f32c73ac":"# Estimate using XGBoost\nmodel = xgb.XGBClassifier(n_estimators=2000, max_depth=5, learning_rate=0.1)\nmodel.fit(X_train, y_train)\nmodel_predictions = model.predict(X_test)","e1a59847":"# Saving the CSV file \ncsv = pd.read_csv('..\/input\/test.csv')\ncsv.insert((csv.shape[1]),'Survived',model_predictions)\ncsv.drop(csv.columns.difference(['PassengerId','Survived']), 1, inplace=True)\ncsv.to_csv('..\/XGBoost_Model.csv', index = False)","65394f04":"**Hello World!**\n\nThis is my first Kernel. I hope it's usefull for those, like me, are learning Python. It gave me a score of 0.74641"}}