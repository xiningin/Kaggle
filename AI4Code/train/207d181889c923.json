{"cell_type":{"4cf84f1c":"code","bef8ff07":"code","f81be3d7":"code","0302944c":"code","d4b019c9":"code","cdc749cb":"code","675d10a3":"code","946cadbb":"code","52317276":"code","69099e36":"code","3ec80a72":"code","d18927bb":"code","149d2db2":"code","c522628e":"code","5c96fe89":"code","50e3e2f2":"code","e5583006":"code","04b53ab5":"code","56064949":"code","7787439a":"code","be918ca0":"code","355df366":"code","a3106d7e":"code","21e8daaf":"code","b2903270":"code","c6e9d6da":"code","c69932f1":"code","b7f2bfaa":"code","4ba00a11":"code","0cceed13":"code","e7263c97":"code","60b8c13e":"code","bb98256d":"code","342f7238":"code","5b076050":"code","c524b582":"markdown","0ebfd1f3":"markdown","556f1db7":"markdown","cfed5819":"markdown","5c874983":"markdown","630960a4":"markdown","fd7b22e1":"markdown","f259592b":"markdown","779ba5ff":"markdown","2320ec0a":"markdown","91866bca":"markdown","71534ecf":"markdown","213f0c1d":"markdown","d827627b":"markdown","b135125c":"markdown","66276d44":"markdown","52fd3609":"markdown","36208ee7":"markdown","fce5a4ef":"markdown","79b878a4":"markdown","633c1ed3":"markdown","efa20a03":"markdown","d5e799a4":"markdown","7cba0e73":"markdown","cafc7c05":"markdown","1e14d8bf":"markdown","0326b644":"markdown","9ea96213":"markdown","164ba510":"markdown","e9a87535":"markdown","193cb84b":"markdown","e205a15f":"markdown","2689581b":"markdown","dbccce10":"markdown","45f834d6":"markdown","9dd06dc8":"markdown","6bb51f50":"markdown","b4cab1c0":"markdown","187b9cb4":"markdown","877c81b3":"markdown","2f5eba84":"markdown","68a1201f":"markdown","bf50697e":"markdown","8d2d2d3e":"markdown","f68a259a":"markdown","0aceefcb":"markdown","b93ce30e":"markdown","81b340bb":"markdown","ec633859":"markdown","8fd9e830":"markdown","423bcb7c":"markdown","35f558ad":"markdown","e49e2c4d":"markdown","07cfb86c":"markdown","48a292d7":"markdown","28358b25":"markdown","a52841b3":"markdown","230d6a29":"markdown","2ad5f706":"markdown","1f3d49ea":"markdown","b01d99df":"markdown","8cbcb86e":"markdown","a6ec7447":"markdown","a93c3dd3":"markdown"},"source":{"4cf84f1c":"from IPython.display import Image\nimgpath = ('..\/input\/chart002\/chart.png')\nImage(imgpath)","bef8ff07":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n%matplotlib inline\nfile = (\"..\/input\/google-job-skills\/job_skills.csv\")\ndf = pd.read_csv(file)\ndf","f81be3d7":"df.shape","0302944c":"## I learnt this null checking method from a kaggler (Reference - 1)(I have added his Kernal link below) \npd.isnull(df).sum()","d4b019c9":"df = df.dropna(how ='any',axis =\"rows\")\npd.isnull(df).sum()","cdc749cb":"df.columns","675d10a3":"df = df.rename(columns = {'Minimum Qualifications' : 'Min_qual','Preferred Qualifications': 'Pre_qual'})\ndf.columns","946cadbb":"sns.countplot(df.Company,palette ='Set1').set_title(\"Company Job Counts\")","52317276":"y = df[[\"Company\",\"Title\",\"Category\",\"Location\",\"Responsibilities\",\"Min_qual\",\"Pre_qual\"]]\nyt = df[y.Company == 'YouTube']\nyt","69099e36":"yt.shape","3ec80a72":"yt_pos = yt['Title'].apply(lambda x : x.split(\",\")[0])\nsns.countplot(y=yt_pos,palette ='Set1').set_title(\"YouTube Job Title Counts\")\nplt.xlim(0,6)\n","d18927bb":"go = df[[\"Company\",\"Title\",\"Category\",\"Location\",\"Responsibilities\",\"Min_qual\",\"Pre_qual\"]]\ng = df[go.Company == 'Google']\ng","149d2db2":"g.shape","c522628e":"## I learnt this bar chart idea from another kaggler(Reference - 2)\n\ng_pos = g['Title'].apply(lambda x : x.split(\",\")[0]).value_counts()\ng_pos.head(30).plot.bar()","5c96fe89":"Col_seq = ['#fc910d','#fcb13e','#239cd3','#1674b1','#ed6d50']\ncat_labels = yt.Category.value_counts().sort_index().index\nsize = yt.Category.value_counts().sort_index()\nplt.pie(size, labels = cat_labels, colors = Col_seq)\nouter_c=plt.Circle( (0,0), 0.55, color='white')\ninner_c=plt.Circle((0,0),0.45,color = '#fcb13e')\ndot=plt.Circle((0,0),0.3,color = 'white')\np=plt.gcf().gca().add_artist(outer_c)\np1=plt.gcf().gca().add_artist(inner_c)\np2=plt.gcf().gca().add_artist(dot)\nplt.figure(figsize=(10,10))","50e3e2f2":"g_cat = g['Category']\nsns.countplot(y=g_cat,palette = 'Set1').set_title(\"Google Job Category Counts\")","e5583006":"yt_country = yt[\"Location\"].apply(lambda x : x.split(\",\")[-1])\nsns.countplot(y=yt_country,palette = \"Set3\").set_title(\"YouTube Job Location - Country wise\")","04b53ab5":"yt_state = yt[\"Location\"].apply(lambda x : x.split(\",\")[0])\nyt_st = yt_state[yt_state !='Singapore']\nyt_stt = yt_st[yt_st != 'London']\nsns.countplot(y=yt_stt,palette = \"Set2\").set_title(\"YouTube Job - City wise\")","56064949":"g_country = g['Location'].apply(lambda x : x.split(',')[-1])\nsns.countplot(x=g_country, palette = \"Set1\")\nplt.xticks(rotation='vertical',fontsize=7.4)\nplt.figure(figsize=(20,10))","7787439a":"g_city = g['Location'].apply(lambda x : x.split(',')[0])\ng_cct = g_city[g_city != 'London']\ng_ct = g_cct[g_cct != 'Singapore'].value_counts()\ng_ct.head(30).plot.bar()\nplt.xlabel('City')\nplt.ylabel('Count')","be918ca0":"\nprglan = ['Java ','Python','TypeScript','PHP','Elixir','Rust','SAAS','SQL','MATLAB','C\/','C#','HTML','CSS','JavaScript','Android Studio','XCode',\n          'MapReduce','MySQL','STATA','Swift','Ruby', 'Perl','Visual Basic','XML','SAS','Ruby','Kotlin','Objective-c','Perl']\n","355df366":"## Learnt this method from another kaggler (Reference - 3)\n\nyt_languages_min = dict((x,0) for x in prglan)\nfor i in prglan:\n    x = yt['Min_qual'].str.contains(i).sum()\n    if i in prglan:\n        yt_languages_min[i] = x\nyt_min = pd.DataFrame(list(yt_languages_min.items()),columns = [\"Software\",'Count'])\nyt_min['Count'] = yt_min.Count.astype('int')\nyt_min_count = yt_min[yt_min.Count != 0]\nyt_min_count.plot.barh(y=\"Count\", x='Software',legend = False, xlim = (0,10))\nplt.title(\"YouTube-Popular Softwares used in Minimum Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")\n","a3106d7e":"yt_languages_pre = dict((x,0) for x in prglan)\nfor i in prglan:\n    x = yt['Pre_qual'].str.contains(i).sum()\n    if i in prglan:\n        yt_languages_pre[i] = x\nyt_pre = pd.DataFrame(list(yt_languages_pre.items()),columns=['Software',\"Count\"])\nyt_pre['Count'] = yt_pre.Count.astype('int')\nyt_pre_count = yt_pre[yt_pre.Count != 0]\nyt_pre_count.plot.barh(y=\"Count\", x='Software',legend = False, xlim = (0,10))\nplt.title(\"YouTube-Popular Softwares used in Preferred Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","21e8daaf":"g_languages_min = dict((x,0) for x in prglan)\nfor i in prglan:\n    x = g['Min_qual'].str.contains(i).sum()\n    if i in prglan:\n        g_languages_min[i] = x\ng_min = pd.DataFrame(list(g_languages_min.items()),columns=['Software',\"Count\"])\ng_min['Count'] = g_min.Count.astype('int')\ng_min_count = g_min[g_min.Count != 0]\ng_min_count.plot.barh(y=\"Count\", x='Software',legend = False, xlim = (0,200))\nplt.title(\"Google - Popular Softwares used in Minimum Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","b2903270":"g_languages_pre = dict((x,0) for x in prglan)\nfor i in prglan:\n    x = g['Pre_qual'].str.contains(i).sum()\n    if i in prglan:\n        g_languages_pre[i] = x\ng_pre = pd.DataFrame(list(g_languages_pre.items()),columns=['Software',\"Count\"])\ng_pre['Count'] = g_pre.Count.astype('int')\ng_pre_count = g_pre[g_pre.Count != 0]\ng_pre_count.plot.barh(y=\"Count\", x='Software',legend = False, xlim = (0,100))\nplt.title(\"Google - Popular Softwares used in Preferred Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","c6e9d6da":"quali_degree = ['BA ','B.A','BA\/BS','MA\/MS', 'MA','M.A', 'MS','M.S','ME','M.E', 'PhD', 'Ph.D','MBA','MIT','IIT','IIM','CA','C.A','CPA','MST','JD','J.D','CIA','CISA','CFA','LLB','CIPD']\n","c69932f1":"g_qd_min = dict((x,0) for x in quali_degree)\nfor i in quali_degree:\n    x = g['Min_qual'].str.contains(i).sum()\n    if i in quali_degree:\n        g_qd_min[i] = x\ng_qdmin = pd.DataFrame(list(g_qd_min.items()),columns=['Degree',\"Count\"])\ng_qdmin['Count'] = g_qdmin.Count.astype('int')\ng_qdmin_count = g_qdmin[g_qdmin.Count != 0]\ng_qdmin_srtd = g_qdmin_count.sort_values('Degree')\ng_qdmin_srtd.plot.barh(y=\"Count\", x='Degree',legend = False, xlim = (0,900))\nplt.title(\"Google - Popular Degrees Required in Minimum Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")\n","b7f2bfaa":"g_qd_pre = dict((x,0) for x in quali_degree)\nfor i in quali_degree:\n    x = g['Pre_qual'].str.contains(i).sum()\n    if i in quali_degree:\n        g_qd_pre[i] = x\ng_qdpre = pd.DataFrame(list(g_qd_pre.items()),columns=['Degree',\"Count\"])\ng_qdpre['Count'] = g_qdpre.Count.astype('int')\ng_qdpre_count = g_qdpre[g_qdpre.Count != 0]\ng_qdpre_srtd = g_qdpre_count.sort_values('Degree')\ng_qdpre_srtd.plot.barh(y=\"Count\", x='Degree',legend = False, xlim = (0,250))\nplt.title(\"Google - Popular Degrees Required in Preferred Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","4ba00a11":"yt_qd_min = dict((x,0) for x in quali_degree)\nfor i in quali_degree:\n    x = yt['Min_qual'].str.contains(i).sum()\n    if i in quali_degree:\n        yt_qd_min[i] = x\nyt_qdmin = pd.DataFrame(list(yt_qd_min.items()),columns=['Degree',\"Count\"])\nyt_qdmin['Count'] = yt_qdmin.Count.astype('int')\nyt_qdmin_count = yt_qdmin[yt_qdmin.Count != 0]\nyt_qdmin_srtd = yt_qdmin_count.sort_values('Degree')\nyt_qdmin_srtd.plot.barh(y=\"Count\", x='Degree',legend = False, xlim = (0,50))\nplt.title(\"YouTube - Popular Degrees Required in Minimum Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","0cceed13":"yt_qd_pre = dict((x,0) for x in quali_degree)\nfor i in quali_degree:\n    x = yt['Pre_qual'].str.contains(i).sum()\n    if i in quali_degree:\n        yt_qd_pre[i] = x\nyt_qdpre = pd.DataFrame(list(yt_qd_pre.items()),columns=['Degree',\"Count\"])\nyt_qdpre['Count'] = yt_qdpre.Count.astype('int')\nyt_qdpre_count = yt_qdpre[yt_qdpre.Count != 0]\nyt_qdpre_srtd = yt_qdpre_count.sort_values('Degree')\nyt_qdpre_srtd.plot.barh(y=\"Count\", x='Degree',legend = False, xlim = (0,20))\nplt.title(\"YouTube - Popular Degrees Required in Preferred Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","e7263c97":"yrs_exp = ['Fresher', 'fresher', 'Intern', 'Internship','internship', 'intern',\"first year student\",\"final year student\", \"1 year\", '2 years','3 years','4 years','5 years','6 years','7 years','8 years','9 years','10 years','11 years','12 years','13 years','14 years','15 years','16 years']  \novrmin = {}\nfor a in yrs_exp:\n    x1 = df['Min_qual'].str.contains(a).sum()\n    if a in yrs_exp:\n        ovrmin[a] = x1\noverminqf = pd.DataFrame(list(ovrmin.items()),columns=['Experience Category',\"Count\"])\noverminqf['Count'] = overminqf.Count.astype('int')\noverminqf_count = overminqf[overminqf.Count != 0]\noverminqf_srtd = overminqf_count.sort_values('Experience Category')\noverminqf_srtd.plot.barh(y=\"Count\", x='Experience Category',legend = False, xlim = (0,200))\nplt.title(\"Experience Category Required in Overall-Minimum Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","60b8c13e":"ovrpre = {}\nfor a in yrs_exp:\n    x1 = df['Pre_qual'].str.contains(a).sum()\n    if a in yrs_exp:\n        ovrpre[a] = x1\noverpreqf = pd.DataFrame(list(ovrpre.items()),columns=['Experience Category',\"Count\"])\noverpreqf['Count'] = overpreqf.Count.astype('int')\noverpreqf_count = overpreqf[overpreqf.Count != 0]\noverpreqf_srtd = overpreqf_count.sort_values('Experience Category')\noverpreqf_srtd.plot.barh(y=\"Count\", x='Experience Category',legend = False, xlim = (0,250))\nplt.title(\"Experience Category Required in Overall-Preferred Qualifications\", fontsize =10)\nplt.xlabel(\"Popularity Count\")","bb98256d":"#For word popularity analysis using both case sensitive words\n\n#First Letter Uppercase\nD1 = ['Design','Computer Science','Engineering','Lawyer','Doctor','Data Science','Statistics','Fashion','Legal',\n          'Visual Communication','Machine Learning','Human Computer interaction','Human-Computer','Cognitive Psychology','Anthropology',\n          'Human Factors','Psychology','HCI\/Computer Science',' Quantitative Finance ', 'Analytics','Sales','Service', 'Marketing',\n           'Advertising','Consulting','Media','Human Resource','Management','Information Technology','Manufacturing','Industry','E-commerce',\n         'Econometrics','Teacher',' Mathematics','Business','Account','Finance','Bigdata','Customer Support']\n#lower case\nd1 = ['design','computer science','engineering','lawyer','doctor','data science','statistics','fashion','legal',\n          'visual communication','machine learning','human computer interaction','human-computer','cognitive psychology','anthropology',\n          'human factors','psychology','hci\/computer science',' quantitative finance ', 'analytics','sales','service', 'marketing',\n           'advertising','consulting','media','human resource','management','information technology','manufacturing','industry','e-commerce',\n         'econometrics','teacher',' mathematics','business','account','finance','bigdata','customer support']\nD1d1 = D1+d1\n","342f7238":"role_min_qf = {}\nfor b in D1d1:\n    x2 = df['Min_qual'].str.contains(b).sum()\n    if b in D1d1:\n        role_min_qf[b] = x2\n\nrole_minqf = pd.DataFrame(list(role_min_qf.items()),columns=['Domain',\"Count\"])\nrole_minqf['Count'] = role_minqf.Count.astype('int')\nrole_minqf_count = role_minqf[role_minqf.Count != 0]\nrole_minqf_srtd = role_minqf_count.sort_values('Domain')\nrole_minqf_srtd.plot.bar(y=\"Count\", x='Domain',legend = False, xlim = (0,300))\nplt.title(\"Domain Popularity in Overall-Minimum Qualifications\", fontsize =10)\nplt.ylabel(\"Popularity Count\")\nplt.xticks(rotation='vertical',fontsize=6.5)\nplt.figure(figsize=(20,10))","5b076050":"role_pre_qf = {}\nfor b in D1d1:\n    x2 = df['Pre_qual'].str.contains(b).sum()\n    if b in D1d1:\n        role_pre_qf[b] = x2\n\nrole_preqf = pd.DataFrame(list(role_pre_qf.items()),columns=['Domain',\"Count\"])\nrole_minqf['Count'] = role_preqf.Count.astype('int')\nrole_preqf_count = role_preqf[role_preqf.Count != 0]\nrole_preqf_srtd = role_preqf_count.sort_values('Domain')\nrole_preqf_srtd.plot.bar(y=\"Count\", x='Domain',legend = False, xlim = (0,300))\nplt.title(\"Domain Popularity in Overall-Preferred Qualifications\", fontsize =10)\nplt.ylabel(\"Popularity Count\")\nplt.xticks(rotation='vertical',fontsize=6.5)\nplt.figure(figsize=(20,10))","c524b582":"**Initially lets find the shape of the data**","0ebfd1f3":"**Positions with BA\/BS degree requirements are quite high. As I said before.... there are secondary words present in the dataset.    **\n**As you observe closely there are frequencies in the degrees like MA or M.A, CA or C.A, PhD or P.hD....etc  **","556f1db7":"## YouTube Jobs based on Category","cfed5819":"**Now.... replacing the null values**","5c874983":"**By the above chart.....it seems the demand of ('intern or Intern or Internship or internship') is high........\nConsidering in the years of experience the demand in 5 and 10 years are high**","630960a4":"**Reference - 2 -Ashok Philip Vargehese - https:\/\/www.kaggle.com\/ashokphili\/how-to-become-a-googler **","fd7b22e1":"**Now Let's explore jobs based on location**","f259592b":"**Reference - 3 - Niyamat Ullah - https:\/\/www.kaggle.com\/niyamatalmass\/what-you-need-to-get-a-job-at-google**","779ba5ff":"**OK...I am changing the name of some Columns**","2320ec0a":"**Now let's analyse YouTube - preferred qualification requirement **","91866bca":"## Overall Experience Analysis (Google and YouTube)","71534ecf":"## YouTube -Education Degree Popularity","213f0c1d":"**OK... If you are an student in management studies...The chances of getting an \"Business Intern\" in Google is high**","d827627b":"**Wow...Google prefers candidates who are skilled  in Python and SQL are preferred followed by JavaScript in Preferred Qualifications **","b135125c":"**By above chart.... YouTube has high requirements in 'Business Strategy'....Let's explore Google job based on Category **","66276d44":"## Overall Popular Word search by Domain (Google and YouTube)","52fd3609":"**Cool..Let's check the Columns**","36208ee7":" ## Youtube Jobs based on Title","fce5a4ef":"**US has more no.of Job vacanncies...  Possibility of getting jobs in United States is high**","79b878a4":"##  Google - Popular programming language search","633c1ed3":" **Let's find YouTube - minimum qualification requirement **","efa20a03":"**OK... Now there may be some null values....So lets check it out**","d5e799a4":"**Now, Its Google's turn.....Let's start exploring............**","7cba0e73":"***Let's START by loading the data...........***","cafc7c05":"**It seems YouTube recruits persons skilled in SQL are preferred in minimum qulaifications **","1e14d8bf":"**Okay now that we know the degree requiremnet...I am eager to know the years of experience\n.......So it's time to explore the year's of experience**","0326b644":"**Thats better!**","9ea96213":"## Let's  Explore Companies**","164ba510":"**As expected...... MA or MBA requirements are high, there is also a possibility if you hold a MS or Ph.D degree\nNow...Lets move on to YouTube**","e9a87535":"**I have used the same method for YouTube also......Seems that youtube also requires BA\/BS degree holders**","193cb84b":"## Google Job Location - Country and City wise","e205a15f":"**Sales & Account Management requirements are high...followed by Marketing and Communications **","2689581b":"# In this data analysis....Let's explore the following points :-\n### 1. Companies present in the dataset\n### 2. Youtube Jobs based on Title\n### 3. Google Jobs based on Title\n### 4. YouTube Jobs based on Category\n### 5. Google Jobs based on Category\n### 6. YouTube Job Location - Country and City wise\n### 7. Google Job Location - Country and City wise\n### 8. YouTube - Popular programming language search\n### 9. Google - Popular programming language search\n### 10. Google - Education Degree Popularity\n### 11. YouTube -Education Degree Popularity\n### 12. Overall Experience Analysis (Google and YouTube)\n### 13. Overall Popular Word search by Domain (Google and YouTube)","dbccce10":"**Let's futher dig for popular terms used **","45f834d6":"## Google - Education Degree Popularity","9dd06dc8":"**Ok...Lets move on..Here is the part we are all eagerly waiting for [Especially me :)] **","6bb51f50":"**Let's explore the data in preferred qualifications**","b4cab1c0":"## YouTube - Popular programming language search","187b9cb4":"## YouTube Job Location - Country and City wise","877c81b3":"**Now let's find Jobs based on 'Category'**","2f5eba84":"**I also want to explore  job vacancies in YouTube.....So Let's get started.....**","68a1201f":"**OK..great... Lets Explore Google**","bf50697e":"**And for your reference..... I did not add any repeated two rows(same meaning words)  because..... I want find the word frequencies for their usage in the dataset ...... so let's start** ","8d2d2d3e":"**YouTube requires persons who are skilled in Python are required in Preferred Qualification  **","f68a259a":"**I used the same method which I used  before as it is effective....I also used the same concept of repetation of words....\nIts seems that  5 years of experience is a great demand for overall  Minimum Qualifications**","0aceefcb":"## Google Jobs based on Category","b93ce30e":"## Reference","81b340bb":"**Let's further explore Google - preferred qualification requirement **","ec633859":"**OK... By the chart above....Most job vacancies are from Google....Only few(< 25) from YouTube....**\n","8fd9e830":"**US has high job vacancies in Youtube preferbly in San Bruno (California) **","423bcb7c":"**I did a little  research in the data and found some interesting twists...There are some words represented in different ways .\nFor example. 'Ph.D' can be written as 'Ph.D' or 'PhD'..... So what I did is that..... I included the secondary words to the variable 'quali_degree' \nfor more accurate analysis .**","35f558ad":"**After goin-through the data we  will find out the major requirements and qualification needed to get a job in Google\nSo, Let's find out**","e49e2c4d":"**Okay......Let's explore the popular programming languages used in both Companies...**\n","07cfb86c":"**Seems job count of *'Product Strategist'* is high compared to most of the jobs in Youtube**","48a292d7":"**Exploring Google - minimum qualification requirement**","28358b25":"**In search of Domain popularity....Management holds the high demand as expected followed by Computer Science...... **","a52841b3":"## Google Jobs based on Title","230d6a29":"**Likewise...management and business domain are in high demand for preferred qualifications**","2ad5f706":"# Google Job Data Analysis -by Pranav B","1f3d49ea":"**OK....I hope you find this analysis useful.....Thanks  - Pranav B**","b01d99df":"**Google prefers persons skilled in Python are preferred in minimum qualification**","8cbcb86e":"**Reference - 1 -  Wei Chun Chang - https:\/\/www.kaggle.com\/justjun0321\/way-to-google-get-a-job-in-goggle-word-cloud**","a6ec7447":"**In this Kernel I have done a detailed job data analysis on Google.**\n","a93c3dd3":"**It clearly seems MA degree holders are high in demand. I hope you understand why I used two frequencies of words**"}}