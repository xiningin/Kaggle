{"cell_type":{"0a51065d":"code","46948e60":"code","d6725c0a":"code","2cc35e37":"code","eabfa519":"code","c3887c1b":"code","eb336170":"code","deaecbc1":"code","924711a9":"code","afd1c5ff":"code","23361c86":"code","a6daf0bc":"code","4ec672fa":"code","bca2c6af":"code","70d3ee45":"code","29b878ce":"code","756aa7be":"code","19f3c1e2":"code","1d3333ce":"code","0f4f4b2d":"code","a559b361":"code","5ae3d226":"code","77314a89":"code","8a9413f1":"code","3fbe1ec5":"code","52e98576":"code","c4ff844f":"code","b6ff61da":"code","b6fc4771":"code","a090791a":"code","a1394ccc":"code","a6cea9fc":"code","aadaffc6":"code","6956a8a3":"code","952f0ccd":"code","235346c0":"code","b31c2e85":"code","b7bcb11c":"code","6f3452bc":"code","8f657c48":"code","5211bba8":"code","8b1a00f1":"code","a7cf2ca2":"code","bb011758":"code","f83cfd64":"code","0f99ea5d":"code","adb2227b":"code","ddb31048":"code","35cc3d61":"code","5cc9ac63":"markdown","1bfef256":"markdown","45c00d2b":"markdown","a2ff4ab2":"markdown","da943698":"markdown","d6f5660d":"markdown","a74a3ecd":"markdown","14eff0a6":"markdown","f751adb4":"markdown","6b63cd24":"markdown","e6727fa9":"markdown","79cbfc78":"markdown","de42ec25":"markdown","a788e041":"markdown","799b4066":"markdown","42a65c31":"markdown","e367e413":"markdown","694eeb7a":"markdown","610f05a3":"markdown","5d51cd74":"markdown","acc08116":"markdown","25c09ed6":"markdown","993fb045":"markdown","05d42790":"markdown","8d719e6c":"markdown","d8ff6ba3":"markdown","535a3008":"markdown","9c757515":"markdown","6c7956a2":"markdown","7adae3f1":"markdown","1cec9048":"markdown","d2d51ca8":"markdown"},"source":{"0a51065d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# import all packages and set plots to be embedded inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nimport warnings\n\n%matplotlib inline\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46948e60":"fifa = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","d6725c0a":"# high-level overview of data shape and composition\nprint(fifa.shape)\nprint(fifa.dtypes)","2cc35e37":"fifa.head()","eabfa519":"fifa.isna().sum()","c3887c1b":"fifa.describe()","eb336170":"fifa.Position.value_counts()","deaecbc1":"df.info()","924711a9":"# first I will make a copy before starting the clean up \n\ndf= fifa.copy()","afd1c5ff":"df.Position.unique()","23361c86":"overall_name = []\nbest_name=''\npos = ''\n\n\nfor pos in df.Position.unique()[:-1]:\n\n    best_overall = df[df.Position == pos].Overall.max()\n    best_name = df[(df['Position']== pos) & (df['Overall'] == best_overall) ].Name.iloc[0]\n    overall_name.append({'Position':pos,\n                        'Name':best_name,\n                        'Overall':best_overall})\n    \n    \n    \nbest_players_df = pd.DataFrame(overall_name)    ","a6daf0bc":"best_players_df","4ec672fa":"best_players_df.to_csv('best_players.csv')","bca2c6af":"# The following columns are not required in my analysis, so I will drop them\n\nnot_needed_columns = ['Unnamed: 0', 'ID', 'Special', 'Photo', 'Nationality', 'Flag', 'Club', 'Club Logo', 'Wage', \n                      'Weak Foot', 'Work Rate', 'International Reputation', 'Real Face', 'Jersey Number', 'Joined',\n                      'Loaned From', 'Contract Valid Until' , 'LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW', 'LAM', \n                      'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', 'RDM', 'RWB', 'LB', 'LCB', \n                      'CB', 'RCB', 'RB', 'Release Clause']\n\ndf.drop(columns = not_needed_columns , inplace = True)","70d3ee45":"# As I will focus on the strikers only, I will filter the ST, LS and RS players only\nst_positions = ['LS', 'ST', 'RS']\nst_df = df.loc[df['Position'].isin(st_positions)].copy()","29b878ce":"st_df.Overall.describe()","756aa7be":"# I'll keep the good strikers only ( with overall greater than the mean)\n\nst_df = st_df[st_df.Overall > 66].copy()","19f3c1e2":"st_df.isnull().sum()","1d3333ce":"st_df.shape","0f4f4b2d":"# Convert the value column to numeric by:\n# 1. remove the Euro sign at the most left\n# 2. Remove the 'K' letter at the most right, convert the string to float and multiply the amount by 1,000 instead\n# 3. Remove the 'M' letter at the most right, convert the string to float and multiply the amount by 1,000,000 \n# 4. Store the result in a new column 'value'\n# 5. Convert \"value\" to integer\n\nst_df['value'] = st_df['Value'].apply(lambda x:  float(x[1:-1])*1000 if x[-1] == 'K' else ( float(x[1:-1])*1000000 if x[-1] == 'M' else float(x[1:]) ) ) \nst_df['value'] = st_df['value'].astype(int)","a559b361":"# examine the new field \n\nst_df.value.describe()","5ae3d226":"st_df['value'] = st_df['value'].astype(int)","77314a89":"# Convert the weight to kg and store it as int in a new field\n\nst_df['weight'] = st_df['Weight'].apply(lambda x:  int(x[:-3])*0.45359 )","8a9413f1":"# Convert the height to m and store it as int in a new field\n\nst_df['height'] = st_df['Height'].apply(lambda x: float(x[0])*0.3048 + float(x.split('\\'')[1])*0.0254 )","3fbe1ec5":"# Delete the old columns as they became reduntant\n\nst_df.drop(columns = ['Value', 'Weight', 'Height'], inplace = True)","52e98576":"st_df.head()","c4ff844f":"# Modify the record of C.Ronaldo body type to Normal\n\nst_df.loc[st_df.index == 1, 'Body Type'] = 'Normal'","b6ff61da":"# Save it to CSV file to be used in the slides deck instead of repeating all the cleaning steps\n\nst_df.to_csv('st.csv')","b6fc4771":"# Players Age\n\nplt.figure(figsize = [8, 5])\n\nbin_edges = np.arange(15, 41, 1)\nplt.hist(data=st_df, x='Age', bins = bin_edges,  rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xlabel('Years')\nplt.ylabel('Count of players')\nplt.title('Age distribution')\nplt.xticks(np.arange(15, 41, 1));","a090791a":"# Players Overall\nplt.figure(figsize = [10, 5])\nbin_edges = np.arange(65, 100, 1)\nplt.hist(data=st_df, x='Overall', bins = bin_edges, rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(65, 100, 1));\nplt.xlabel('Overall')\nplt.ylabel('Count of players');","a1394ccc":"st_df[st_df.Overall >= 90]","a6cea9fc":"sb.boxplot(data=st_df, y='Overall')","aadaffc6":"# Players Weight\nplt.figure(figsize = [12, 5])\nbin_edges = np.arange(57, 100, 2)\nplt.hist(data=st_df, x='weight', bins = bin_edges, rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(57, 100, 2));\nplt.xlabel('Weight(kg)')\nplt.ylabel('Count of players');","6956a8a3":"# Players Height\nplt.figure(figsize = [10, 5])\nbin_edges = np.arange(1.6, 2.00, 0.02)\nplt.hist(data=st_df, x='height', bins = bin_edges, rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(1.6, 2.05, 0.02));\nplt.xlabel('Height(m)')\nplt.title('Height distribution')\nplt.ylabel('Count of players');","952f0ccd":"plt.figure(figsize = [16, 5])\n\n# Players Speed\nplt.subplot(1, 2, 1)\n\nbin_edges = np.arange(60, 100, 2)\nplt.hist(data=st_df, x='SprintSpeed', bins = bin_edges, rwidth = 0.7,) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(60, 100, 2));\nplt.xlabel('SprintSpeed')\nplt.ylabel('Count of players')\n\nplt.subplot(1, 2, 2)\n# Players Accerleration\nbin_edges = np.arange(60, 100, 2)\nplt.hist(data=st_df, x='Acceleration', bins = bin_edges, rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(60, 100, 2));\nplt.xlabel('Acceleration')\nplt.ylabel('Count of players');","235346c0":"# Players' value distribution\n\nplt.figure(figsize = [8, 5])\n\nbin_edges = np.arange(0, 100000000, 5000000)\nplt.hist(data=st_df, x='value', bins = bin_edges, rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(0, 100000000, 5000000))\nplt.title('Values distribution')\nplt.xlabel('Value (10 Million Euros)')\nplt.ylabel('Count of players');","b31c2e85":"# Convert the value to log so we can see the values with less frequency\n\nplt.figure(figsize = [8, 5])\n \nbin_edges = np.arange(0, 100000000, 5000000)\nplt.hist(data=st_df, x='value', bins = bin_edges, log=True,  rwidth = 0.7) # rwidth 70% of the bar , useful for plotting discrete values \nplt.xticks(np.arange(0, 100000000, 5000000))\nplt.title('Values (log) distribution')\nplt.xlabel('Value (10 Million Euros)')\nplt.ylabel('Count of players');","b7bcb11c":"st_df[st_df.value >= 75000000]","6f3452bc":"# examine the preferred foot\nsorted_counts = st_df['Preferred Foot'].value_counts()\n\nplt.pie(sorted_counts, labels = sorted_counts.index, startangle = 90, counterclock = False);\nplt.title('Preferred Foot')\nplt.axis('square');","8f657c48":"# investigate Body Type\n\nbody_type = st_df['Body Type'].value_counts()\n\nplt.pie(body_type, labels = body_type.index, startangle = 90, counterclock = False);\nplt.title('Body Type')\nplt.axis('square');","5211bba8":"# Overall distribution by body type\n\nbase_color = sb.color_palette()[0]\nplt.title('Overall distribution by body type')\nsb.violinplot(data=st_df, x='Body Type', y='Overall', color= base_color, inner = 'quartile');","8b1a00f1":"player_personal =  ['Age','Acceleration', 'SprintSpeed', 'weight', 'height']\n\nfig, ax = plt.subplots(1, 5, figsize=(16,6))\n\nfor i,col in enumerate(player_personal):\n     sb.regplot(x=st_df[col], y=st_df[\"Overall\"], ax=ax[i] ,truncate=False, x_jitter=0.3, scatter_kws={'alpha':1\/5})\n        \nfig.suptitle('Body Features of the players', size = 16)\nfig.tight_layout()\nfig.subplots_adjust(top=0.9)\n\nplt.show()\nplt.clf()\nplt.close()","a7cf2ca2":"## I will examine the impact of the skills on the overall rating.\n\nskills = ['Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy', \n          'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed', 'Agility', 'Reactions', 'Balance','ShotPower', \n          'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression', 'Interceptions', 'Positioning', 'Vision', \n          'Penalties', 'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving','GKHandling', \n          'GKKicking', 'GKPositioning', 'GKReflexes']\n\nfig, ax = plt.subplots(9, 4, figsize=(25,50))\n\nfor i,col in enumerate(skills):\n    r = i \/\/4\n    c = i%4\n    sb.regplot(x=st_df[col], y=st_df[\"Overall\"], ax=ax[r,c])\n\n# HIDES AXES ON LAST unused cells.\nax[8,2].axis('off')                  \nax[8,3].axis('off') \n\nfig.suptitle('Skills against Overall' , size = 16)\nfig.tight_layout()\nfig.subplots_adjust(top=0.95)\nplt.show()\nplt.clf()\nplt.close();","bb011758":"# Examine the relationships between the important skills\n\nimp_skills = ['Finishing',  'ShortPassing', 'Volleys', 'Dribbling', 'Curve',  'BallControl', 'Reactions', 'ShotPower', \n              'LongShots', 'Positioning', 'Vision', 'Penalties', 'Composure', 'HeadingAccuracy', 'FKAccuracy']\n\ng = sb.PairGrid(data = st_df, vars = imp_skills)\ng.map_diag(plt.hist)\ng.map_offdiag(plt.scatter);","f83cfd64":"player_personal =  ['Overall','Age','Acceleration', 'SprintSpeed', 'weight', 'height']\n\nplt.figure(figsize = [10, 10])\nsb.heatmap(st_df[player_personal].corr(), annot = True, fmt = '.2f', cmap = 'vlag_r', center = 0)\nplt.show();","0f99ea5d":"# Skills correlation plot\nimportant_skills= ['Overall','Finishing',  'ShortPassing', 'Volleys', 'Dribbling', 'Curve',  'BallControl', 'Reactions',\n                   'ShotPower',  'LongShots', 'Positioning', 'Vision', 'Penalties', 'Composure', 'HeadingAccuracy', \n                   'FKAccuracy']\nplt.figure(figsize = [20, 20])\nsb.heatmap(st_df[important_skills].corr(), annot = True, fmt = '.2f',\n           cmap = 'vlag_r', center = 0)\nplt.show();","adb2227b":"# Examine if the preferred foot impacts the relationship between the skill and the overall rating\n\ncritical_skills = [ 'Finishing', 'Positioning', 'BallControl', 'Reactions']\n\nfig, ax = plt.subplots(1, 4, figsize=(25,10))\n\nfor i,col in enumerate(critical_skills):\n    sb.scatterplot(data = st_df, x =st_df[col], y=\"Overall\", hue =\"Preferred Foot\" ,s = 80, alpha = 0.7,ax=ax[i])\n    \nfig.suptitle('Skills against Overall\\n Right vs Left footed' , size = 16)\nfig.tight_layout()\nfig.subplots_adjust(top=0.9)\nplt.show()\nplt.clf()\nplt.close();","ddb31048":"# Examine if the body type impacts the relationship between the skill and the overall rating\n\nfig, ax = plt.subplots(1, 4, figsize=(25,10))\n\nfor i,col in enumerate(critical_skills):\n    #random_df.plot(kind='scatter', x=col, y='MEDV', ax=ax[i])\n    sb.scatterplot(data = st_df, x =st_df[col], y=\"Overall\", hue =\"Body Type\" ,s = 100, alpha = 0.7,ax=ax[i])\n    \n    \nfig.suptitle('Skills against Overall\\n Body Type' , size = 16)\nfig.tight_layout()\nfig.subplots_adjust(top=0.9)\nplt.show()\nplt.clf()\nplt.close();","35cc3d61":"# Plot the Seaborn's FacetGrid\n\nbin_edges = np.arange(50, 100, 2)\ng = sb.FacetGrid(data = st_df,row = 'Preferred Foot', col = 'Body Type')\ng.map(sb.violinplot, \"Finishing\", inner = 'quartile');","5cc9ac63":"## Bivariate Exploration","1bfef256":"### Multivariate Exploration","45c00d2b":"> Most of the players' weights are between 73 and 85.","a2ff4ab2":"\n> The players age is normally distributed with mean at 27 years. Most of the palyers are between 21 and 32 years","da943698":"*  From the above plot we notice that there're skills with higher impact on the overall than others. I will short list them to the following list till further investigation:\n\n* important skills: 'Finishing', 'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'BallControl', 'Reactions', 'ShotPower', 'LongShots', 'Positioning', 'Vision', 'Penalties', 'Composure', 'HeadingAccuracy', 'FKAccuracy']","d6f5660d":"> Only four players' values greater thatn 75M Euro, the three super stars plus \"H Kane\"","a74a3ecd":"### The most common position is the \"ST\" the strikers, then Goal Keepers, ...\n\n## I'm interested in finding out the most significant skills that make a good striker","14eff0a6":"> from this heatmap, we come up with the most significant skills (that have correlation more than 0.7) for good strikers:\n    'Finishing', 'Positioning', 'BallControl', 'Reactions'\n\n> And comes as second priority (that have more than 0.65 and less than 0.7) the following set of skills:\n    'ShotPower', 'ShortPassing', 'Volleys', 'Composure', 'Dribbling' \n    \n> I will examine the most significant skills against the categories of the players preferred foot and body type and see if there's a difference","f751adb4":"> Interestingly the \"positioning\" increases with the \"vision\".\n\n> FK accuracy increases with the \"Shot Power\" and \"Long Shots\"","6b63cd24":"> There're three body types: Normal (the dominant), lean and Stocky.","e6727fa9":"> \nAfter making the log, the graph is more informative as it shows the small numbers' values. As expected clearly right sekewed. Most of the players' value less than 35M Euro. Very few greater than 75M Euro. I will check who they are.","79cbfc78":"## I'm interested in the good strikers, so I will keep only the strikers ('ST', 'LS', 'RS') with overall greater than the mean","de42ec25":"* Here I'll examine three or more variables to investigate the data even further.\n\n* I will start with the player body related characterstics and see if they are related and their impact on the \"overall\" rating","a788e041":"> Large number of the players' value is below the 10M Euro, so the graph dosent show clearly the other values of players. I will make a log to show these values","799b4066":"> Most of the players are between 1.76 and 1.87m with mean height of 1.82m","42a65c31":"### Summary and Conclusion:\n    \n#### Your body won't affect your opportunities:\n* > There's *no strong relationship* between the players' body features and the \"overall\" rating.\n* > Considering the impact of these critical skills on the \"overall rating\", there's no difference between right and left footed players.\n* > And no difference based on the body types.\n\n\n\n#### Talent, not the strength, is the answer:\n* > It's interesting that none of the shooting, shotpower or heading came amount the first four critical skills for good strikers.\n* > We found out that the most significant skills (that have correlation more than 0.7) that impact the overall rating of good strikers are: '**Finishing**', '**Positioning**', '**BallControl**' and '**Reactions**'. And comes as second priority (that have more than 0.65 and less than 0.7) the following set of skills: 'ShotPower', 'ShortPassing', 'Volleys', 'Composure' and 'Dribbling'\n* > There're strong relationships between \"positioning and finishing\", so the good strikers not only choose the right place on the pitch but also the make use of this position with high \"finishing\" \n\n* > The good \"vision\" of the good strikers results in good \"positioning\" so we see a strong correlation between both.\n\n* > The good strikers are talented so they have good \"Ball Control\" and high \"Dribbling\" skills. Both are related to each other with strong correlation.","e367e413":"> As expected the overall distribution of the \"good\" players is sekwed to the right with few players over 90. I will double check the super stars count","694eeb7a":"> Considering the impact of these critical skills on the \"overall rating\", there's no difference the players with different body types.","610f05a3":"\n## Preliminary Wrangling","5d51cd74":"## Univariate Exploration","acc08116":"> Most of the players sprint speed between 70 and 80. I was expecting it to be with higher values Acceleration also between 68 and 80 which is not as high as I expect it.","25c09ed6":"> No null rows.","993fb045":"> Only few with overall rating more than 82","05d42790":"> There're only three super star strikers ( Cristiano Ronaldo, L. Su\u00e1rez, R. Lewandowski) with overall equal to or greater than 90","8d719e6c":"> Most of the players are right footed","d8ff6ba3":"> There's obvious relationship between the sprint speed and that acceleration\n\n> There's no strong relationship between these features and the \"overall\" rating.","535a3008":"## Best player per position","9c757515":"> ### Next step would be compromizing the cost against the skills :)\n\n> ### Please leave me a comment, would be happy if positive and will learn from it if negative :)","6c7956a2":"# FIFA 19 -- What skills make Good Strikers?\n\n\n> This dataset contains the football players included in the famous game FIFA 19. For each player there're many features including personal features (Name, height, ..), related to the club he plays for and the skill levels for each of the skills' set.\n\n> Please leave me a comment, would be happy if positive and will learn from it if negative :)","7adae3f1":"* The overall significantly increases with players' age, speed and acceleration. slightly increases with the weight increase and decreases with the height increase!\n\n* I wasn't expecting such inverse proportion with the height. I was, mistakenly, under the impression that the taller the player the better he can perform.\n\n* I will check the impact of the other skills on the overall","1cec9048":"### Examine the players body features to see if it impacts the overall","d2d51ca8":"> Comparing the finishing distribution based on preferred foot and on body type, we notice that the mean is more or less equal. \n> There're two peaks for right footed players with stocky body. The left footed with lean body players graph has a bit longer inter-quartile distance"}}