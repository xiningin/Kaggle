{"cell_type":{"17095688":"code","4c4ebb6c":"code","59954dae":"code","4e81790b":"code","72c32c98":"code","ab838efd":"code","1eec2232":"code","4002adbe":"code","7f118df3":"code","4232350f":"code","bd78716a":"code","6f8f7359":"code","e016c04c":"code","229cd34f":"markdown","a1e915cd":"markdown","47dfbb48":"markdown","66a20297":"markdown","fbec8581":"markdown","e14a3256":"markdown","15e7ea84":"markdown","df021303":"markdown","116c5f9a":"markdown","8687109f":"markdown","56780486":"markdown","7e943850":"markdown","40d587cf":"markdown"},"source":{"17095688":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c4ebb6c":"#install pycaret library\n!pip install pycaret  ","59954dae":"## Read the train and test dataset\ntrain=pd.read_csv('\/kaggle\/input\/titanic\/train.csv',index_col='PassengerId')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv',index_col='PassengerId')","4e81790b":"#import classification class from the pycaret library\nfrom pycaret import classification","72c32c98":"#set up the classification \nclassification_setup = classification.setup(data=train,target='Survived')\n","ab838efd":"## compare the models - and select the best models based on the accuracy \/ precision \/ recall \/f1 score..\nclassification.compare_models()","1eec2232":"# take the best model and build once again\/\nclassification_rd= classification.create_model('catboost',fold=20)","4002adbe":"# read the test data - read test data\ntest_data_classification = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n\n\n# make predictions using the model\npredictions = classification.predict_model(classification_rd, data=test_data_classification)\n\n# check the predictions\npredictions","7f118df3":"# ROC - plot to understand the AUC  , Sensitivity and specivisity\nclassification.plot_model(classification_rd)","4232350f":"# Error Plot\nclassification.plot_model(classification_rd, plot = 'error')","bd78716a":"# Feature Important plot\nclassification.plot_model(classification_rd, plot='feature')","6f8f7359":"submission = predictions[[\"PassengerId\",\"Label\"]]","e016c04c":"submission.to_csv('.\/submission.csv', index=False)","229cd34f":"# Install pycaret library","a1e915cd":"# Read Train and Test data","47dfbb48":"# Final Submission","66a20297":"# Error Plot","fbec8581":"### Compare the models and take the bests out of it","e14a3256":"# ROC Plot","15e7ea84":"# Titanic - Survivor classification using very simple pycaret library with few lines of code.","df021303":"# Import Libraries and check the train and test datasets","116c5f9a":"# Setup Classification module , so that we can build multiple models and compare them ","8687109f":"# Import the classification class from the pycaret library - this contains all the neccasary modules with respect to classification task","56780486":"# Feature importance graph","7e943850":"# Use the model to perform predictions","40d587cf":"# Create a fresh - best model "}}