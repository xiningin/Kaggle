{"cell_type":{"a86f0aa9":"code","e8c7b9ef":"code","8670be5f":"code","bed6b639":"code","3d5621f8":"code","e3658184":"code","62a2ad90":"code","1af53ce4":"code","f6c495ed":"code","198bcbc6":"code","231b42f7":"markdown"},"source":{"a86f0aa9":"#Description : Program uses the Moving Average Convergence and Divergence (MACD) crossover\n#to dtermine when to buy or sell the stock.\nimport numpy as np \nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport pandas_datareader as web\n","e8c7b9ef":"#Get the data\nBTC = web.DataReader('BTCUSD=X', data_source='yahoo', start='2020-01-10')\n#Show the data\nBTC","8670be5f":"#Visualization the graph of BTC\nplt.figure(figsize=(12.2,5.5))\nplt.xticks(rotation=45)\nplt.plot(BTC.index, BTC['Close'])\nplt.title('BTC\/USD Close Price')\nplt.xlabel('Date')\nplt.ylabel('Close Price')\nplt.show()","bed6b639":"#Calculate the MACF and signal line indicator\n#Calculate the short term exponential moving average (EMA)\nShortEMA = BTC.Close.ewm(span=12, adjust=False).mean()\n#Calculate the long term exponential moving average (EMA)\nLongEMA = BTC.Close.ewm(span=26, adjust=False).mean()\n#Calculate the MACD line\nMACD = ShortEMA - LongEMA\n#Calculate the signal line\nsignal = MACD.ewm(span=9, adjust=False).mean()       ","3d5621f8":"plt.figure(figsize=(12.2,4.5))\n\nplt.plot(BTC.index, MACD, label ='BTCUSD MACD', color='red')\nplt.plot(BTC.index, signal, label='Signal Line', color='blue')\nplt.xticks(rotation=45)\nplt.legend(loc='upper left')\nplt.show()\n","e3658184":"#Create new columns for the data\nBTC['MACD'] = MACD\nBTC['Signal_Line'] = signal\nBTC","62a2ad90":"#Create a function to signal when to buy and sell \ndef buy_sell(signal):\n    Buy=[]\n    Sell=[]\n    flag=-1\n    \n    for i in range(0,len(signal)):\n        if signal['MACD'][i]>signal['Signal_Line'][i]:\n            Sell.append(np.nan)\n            if flag!= 1:\n                Buy.append(signal['Close'][i])\n                flag = 1\n            else:\n                Buy.append(np.nan)\n        elif signal['MACD'][i] < signal['Signal_Line'][i]:\n            Buy.append(np.nan)\n            if flag != 0:\n                Sell.append(signal['Close'][i])\n                flag = 0\n            else:\n                Sell.append(np.nan)\n        else:\n            Buy.append(np.nan)\n            Sell.append(np.nan)\n    \n    return(Buy,Sell)\n    \n        ","1af53ce4":"#Create buy and sell column\na = buy_sell(BTC)\nBTC['Buy_Signal_Price'] = a[0]\nBTC['Sell_Signal_Price'] = a[1]","f6c495ed":"#Show the data\nBTC","198bcbc6":"#Visually show the stock buy and sell signals\nplt.figure(figsize=(12.2,4.5))\nplt.scatter(BTC.index, BTC['Buy_Signal_Price'], color='green', label='BUY', marker='^', alpha=1)\nplt.scatter(BTC.index, BTC['Sell_Signal_Price'], color='red', label='SELL', marker='v', alpha=1)\nplt.plot(BTC['Close'], label='Close Price', alpha=0.35)\nplt.title('Close Price Buy and Sell Signals')\nplt.xlabel('Date')\nplt.ylabel('Close Price USD ($)')\nplt.legend(loc='upper left')\nplt.show()\n","231b42f7":"![](https:\/\/miro.medium.com\/max\/1400\/0*rguNnnyZgyyjTQug.)"}}