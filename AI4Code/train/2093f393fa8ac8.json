{"cell_type":{"e55efb70":"code","ae01fcc2":"code","fb19cc17":"code","72439318":"code","a814c474":"code","d0418122":"markdown","a3c64359":"markdown","dd3c64a0":"markdown","801a6a4b":"markdown","313aa505":"markdown","04a82253":"markdown"},"source":{"e55efb70":"import pandas as pd\nimport numpy as np\n\ntrain = pd.read_csv(\"..\/input\/tabular-playground-series-feb-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-feb-2021\/test.csv\")\ntrain","ae01fcc2":"train[\"cat0\"] = train[\"cat0\"].astype(\"category\")\ntrain[\"cat1\"] = train[\"cat1\"].astype(\"category\")\ntrain[\"cat2\"] = train[\"cat2\"].astype(\"category\")\ntrain[\"cat3\"] = train[\"cat3\"].astype(\"category\")\ntrain[\"cat4\"] = train[\"cat4\"].astype(\"category\")\ntrain[\"cat5\"] = train[\"cat5\"].astype(\"category\")\ntrain[\"cat6\"] = train[\"cat6\"].astype(\"category\")\ntrain[\"cat7\"] = train[\"cat7\"].astype(\"category\")\ntrain[\"cat8\"] = train[\"cat8\"].astype(\"category\")\ntrain[\"cat9\"] = train[\"cat9\"].astype(\"category\")\n\ntest[\"cat0\"] = test[\"cat0\"].astype(\"category\")\ntest[\"cat1\"] = test[\"cat1\"].astype(\"category\")\ntest[\"cat2\"] = test[\"cat2\"].astype(\"category\")\ntest[\"cat3\"] = test[\"cat3\"].astype(\"category\")\ntest[\"cat4\"] = test[\"cat4\"].astype(\"category\")\ntest[\"cat5\"] = test[\"cat5\"].astype(\"category\")\ntest[\"cat6\"] = test[\"cat6\"].astype(\"category\")\ntest[\"cat7\"] = test[\"cat7\"].astype(\"category\")\ntest[\"cat8\"] = test[\"cat8\"].astype(\"category\")\ntest[\"cat9\"] = test[\"cat9\"].astype(\"category\")","fb19cc17":"cat_features = [\n    \"cat0\", \"cat1\", \"cat2\", \"cat3\", \"cat4\", \"cat5\", \"cat6\", \"cat7\", \"cat8\", \"cat9\"\n]\n\ncont_features = [\n    \"cont0\", \"cont1\", \"cont2\", \"cont3\", \"cont4\",\n    \"cont5\", \"cont6\", \"cont7\", \"cont8\", \"cont9\", \"cont10\", \n    \"cont11\", \"cont12\", \"cont13\"\n]","72439318":"import gc\n\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_squared_error\nfrom catboost import CatBoostRegressor\n\nn_folds = 10\n\nskf = KFold(n_splits=n_folds, random_state=2021, shuffle=True)\n\ntrain_oof = np.zeros((300000,))\ntest_preds = 0\n\nfeatures = []\nfeatures.extend(cat_features)\nfeatures.extend(cont_features)\n\ncat_params = {\n    \"cat_features\": cat_features,\n    \"verbose\": 500,\n    \"eval_metric\": \"RMSE\",\n    \"loss_function\": \"RMSE\",\n    \"random_state\": 2021,\n    \"num_boost_round\": 20000,\n    \"od_type\": \"Iter\",\n    \"od_wait\": 200,    \n    \"task_type\": \"GPU\",\n    \"devices\": \"0\",\n    \"max_depth\": 4,\n    \"learning_rate\": 0.010155932673991064,\n    \"l2_leaf_reg\": 9.083564967810792,\n    \"bagging_temperature\": 1.5604104823748561,\n    \"penalties_coefficient\": 2.0037171127502633,\n    \"grow_policy\": \"Depthwise\",\n}\n\nimportances = pd.DataFrame()\n\nfor fold, (train_index, test_index) in enumerate(skf.split(train, train[\"target\"])):\n    print(\"-------> Fold {} <--------\".format(fold + 1))\n    x_train, x_valid = pd.DataFrame(train.iloc[train_index]), pd.DataFrame(train.iloc[test_index])\n    y_train, y_valid = train[\"target\"].iloc[train_index], train[\"target\"].iloc[test_index]\n    \n    x_train_features = pd.DataFrame(x_train[features])\n    x_valid_features = pd.DataFrame(x_valid[features])\n\n    model = CatBoostRegressor(\n        **cat_params\n    )\n    model.fit(\n        x_train_features, \n        y_train,\n        eval_set=[(x_valid_features, y_valid)],\n        verbose=500,\n        early_stopping_rounds=200,\n    )\n    oof_preds = model.predict(x_valid_features)\n    test_preds += model.predict(test[features]) \/ n_folds\n    train_oof[test_index] = oof_preds\n    print(\"\")\n    \nprint(\"--> Overall results for out of fold predictions\")\nprint(\": RMSE = {}\".format(mean_squared_error(train_oof, train[\"target\"], squared=False)))","a814c474":"preds = test_preds.tolist()\ntest_ids = test[\"id\"].tolist()\n\nsubmission = pd.DataFrame({\"id\": test_ids, \"target\": preds})\nsubmission.to_csv(\"sumbission.csv\", index=False)","d0418122":"# Introduction\n\nIn this simple model, we'll use CatBoost with mostly default parameters to train a model. We'll use all of the continuous values, and some of the categorical ones. Details below. ","a3c64359":"# Category Conversion\n\nFor CatBoost, setting categorical columns to be of type `category` speeds up training.","dd3c64a0":"# Model Building\n\nWe'll build 10 CatBoost models over 10 folds. We'll use out-of-fold predictions for our final submission.","801a6a4b":"# Features","313aa505":"# Import Data","04a82253":"# Generate Submission"}}