{"cell_type":{"4dd1f121":"code","1fb9712e":"code","8814cb69":"code","edbe5e8f":"code","7618cd53":"code","bc15ce5e":"code","fbeaf29e":"code","9ab68573":"code","73db7dc3":"code","6a6d9044":"code","f82ce32f":"code","6b7ea3e9":"code","7eb4f806":"code","b1b1e6ce":"code","9413daed":"code","cccf3e9d":"code","429017fe":"code","dcac2f21":"code","41bf7cc4":"code","f3657ef7":"code","96c67490":"code","7dda703a":"code","dce2a75f":"code","cf0aaf64":"code","11cdba88":"code","2d31ac6c":"code","b945a720":"code","834c96c6":"code","4cc70cd5":"code","6058cafb":"code","47f5117a":"code","df4592f8":"code","39759455":"code","6c91c85d":"code","87a5b16e":"code","a5759492":"code","0e8e4aa9":"code","b408845d":"code","bb54b12f":"code","748a3171":"code","b4cf525a":"code","55d9cae3":"code","eabb720a":"code","7210000f":"code","bbdfe26e":"code","5a145b4f":"code","8e8a6474":"code","2c3d75b4":"code","cf5d8d90":"code","609aca85":"code","891c71f2":"code","a9c917e5":"code","be41e4d9":"code","0e654ecc":"code","51af72dc":"code","6678ef2b":"code","f0f8652b":"code","48f5d3f4":"code","ceef6a96":"code","382a57f3":"code","a86179a6":"code","cbbc10ea":"code","aaf39b4a":"code","2d43d583":"code","4fdd0340":"markdown","9111637f":"markdown","86ed2e94":"markdown","d0da32d5":"markdown","0f002bac":"markdown","642d6702":"markdown","3ed2e74b":"markdown","41a02982":"markdown","5cc8976e":"markdown","76446f4f":"markdown","574535c2":"markdown","d202285b":"markdown","cc222834":"markdown","175db006":"markdown","541515d7":"markdown","fd44a82d":"markdown","422fec79":"markdown","614d4590":"markdown","8a0d1087":"markdown","4309d338":"markdown","dc147176":"markdown","58a7cea0":"markdown","5f414503":"markdown"},"source":{"4dd1f121":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1fb9712e":"ss = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","8814cb69":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","edbe5e8f":"train_data.isnull().sum().sort_values()","7618cd53":"test_data.isnull().sum().sort_values()","bc15ce5e":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)\n\nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","fbeaf29e":"FirstClass = train_data.loc[train_data.Pclass == 1][\"Survived\"]\nrate_FirstClass = sum(FirstClass)\/len(FirstClass)\n\nprint(\"% of FirstClass who survived:\", rate_FirstClass)\n\nSecondClass = train_data.loc[train_data.Pclass == 2][\"Survived\"]\nrate_SecondClass = sum(SecondClass)\/len(SecondClass)\n\nprint(\"% of SecondClass who survived:\", rate_SecondClass)\n\nThirdClass = train_data.loc[train_data.Pclass == 3][\"Survived\"]\nrate_ThirdClass = sum(ThirdClass)\/len(ThirdClass)\n\nprint(\"% of ThirdClass who survived:\", rate_ThirdClass)","9ab68573":"EmS = train_data.loc[train_data.Embarked == 'S'][\"Survived\"]\nrate_EmS = sum(EmS)\/len(EmS)\n\nprint(\"% of Embarked S who survived:\", rate_EmS)\n\nEmC = train_data.loc[train_data.Embarked == 'C'][\"Survived\"]\nrate_EmC = sum(EmC)\/len(EmC)\n\nprint(\"% of Embarked C who survived:\", rate_EmC)\n\nEmQ = train_data.loc[train_data.Embarked == 'Q'][\"Survived\"]\nrate_EmQ = sum(EmQ)\/len(EmQ)\n\nprint(\"% of Embarked Q who survived:\", rate_EmQ)","73db7dc3":"import seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.factorplot('Pclass', col = 'Embarked', data = train_data, kind = 'count')","6a6d9044":"train_data[['SibSp', 'Survived']].groupby('SibSp', as_index = False).mean().sort_values(by = 'Survived')","f82ce32f":"train_data[['Parch', 'Survived']].groupby('Parch', as_index = False).mean().sort_values(by = 'Survived')","6b7ea3e9":"sns.kdeplot(train_data['Age'][train_data['Survived'] == 0], label = 'Not survived', color = 'red')\nsns.kdeplot(train_data['Age'][train_data['Survived'] == 1], label = 'Survived', color = 'green')","7eb4f806":"train_data = train_data.drop(['Ticket', 'Cabin'], axis = 1)\ntest_data = test_data.drop(['Ticket', 'Cabin'], axis = 1)","b1b1e6ce":"train_data.isnull().sum().sort_values()","9413daed":"test_data.isnull().sum().sort_values()","cccf3e9d":"mode = train_data['Embarked'].dropna().mode()[0]\ntrain_data['Embarked'].fillna(mode, inplace = True)","429017fe":"median = test_data['Fare'].dropna().median()\ntest_data['Fare'].fillna(median, inplace = True)","dcac2f21":"combine = pd.concat([train_data, test_data], axis = 0).reset_index(drop = True)\ncombine['Sex'] = combine['Sex'].map({'male': 0, 'female': 1})","41bf7cc4":"sns.heatmap(combine.drop(['Survived', 'Name', 'PassengerId', 'Fare'], axis = 1).corr(), annot = True, cmap = 'coolwarm')","f3657ef7":"agge = list(combine[combine['Age'].isnull()].index)\nlen(agge)\n\nfor index in agge:\n    median_age = combine['Age'].median()\n    predict_age = combine['Age'][(combine['SibSp'] == combine.iloc[index]['SibSp']) \n                                 & (combine['Parch'] == combine.iloc[index]['Parch'])\n                                 & (combine['Pclass'] == combine.iloc[index][\"Pclass\"])].median()\n    if np.isnan(predict_age):\n        combine['Age'].iloc[index] = median_age\n    else:\n        combine['Age'].iloc[index] = predict_age","96c67490":"combine['Age'].isnull().sum()","7dda703a":"combine.head()","dce2a75f":"combine['Title'] = [name.split(',')[1].split('.')[0].strip() for name in combine['Name']]\ncombine[['Name', 'Title']].head()","cf0aaf64":"combine['Title'].value_counts()","11cdba88":"combine['Title'] = combine['Title'].replace(['Dr', 'Rev', 'Col', 'Major', 'Lady', 'Jonkheer', 'Don', 'Capt', 'the Countess',\n                                             'Sir', 'Dona'], 'Rare')\ncombine['Title'] = combine['Title'].replace(['Mlle', 'Ms'], 'Miss')\ncombine['Title'] = combine['Title'].replace('Mme', 'Mrs')","2d31ac6c":"combine[['Title', 'Survived']].groupby(['Title'], as_index = False).mean().sort_values(by = 'Survived')","b945a720":"combine = combine.drop('Name', axis = 1)\ncombine.head()","834c96c6":"combine['FamilySize'] = combine['SibSp'] + combine['Parch'] + 1\ncombine[['SibSp', 'Parch', 'FamilySize']].head(10)","4cc70cd5":"combine[['FamilySize', 'Survived']].groupby('FamilySize', as_index = False).mean().sort_values(by = 'Survived')","6058cafb":"combine['IsAlone'] = 0\ncombine.loc[combine['FamilySize'] == 1, 'IsAlone'] = 1","47f5117a":"combine[['IsAlone', 'Survived']].groupby('IsAlone', as_index = False).mean().sort_values(by = 'Survived', ascending = False)","df4592f8":"combine = combine.drop(['SibSp', 'Parch', 'FamilySize'], axis = 1)\ncombine.head()","39759455":"combine['AgeBand'] = pd.cut(combine['Age'], 5)\ncombine[['AgeBand', 'Survived']].groupby('AgeBand', as_index=False).mean().sort_values(by = 'AgeBand')","6c91c85d":"combine.loc[combine['Age'] <= 16.136, 'Age'] = 0\ncombine.loc[(combine['Age'] > 16.136) & (combine['Age'] <= 32.102), 'Age'] = 1\ncombine.loc[(combine['Age'] > 32.102) & (combine['Age'] <= 48.068), 'Age'] = 2\ncombine.loc[(combine['Age'] > 48.068) & (combine['Age'] <= 64.034), 'Age'] = 3\ncombine.loc[combine['Age'] > 64.034 , 'Age'] = 4","87a5b16e":"combine = combine.drop('AgeBand', axis = 1)","a5759492":"combine[['Age', 'Pclass']].dtypes","0e8e4aa9":"combine['Age'] = combine['Age'].astype('int')\ncombine['Age'].dtype","b408845d":"combine['AgeClass'] = combine['Age'] * combine['Pclass']\ncombine[['Age', 'Pclass', 'AgeClass']].head()","bb54b12f":"combine.head()","748a3171":"combine = pd.get_dummies(combine, columns = ['Title'])\ncombine = pd.get_dummies(combine, columns = ['Embarked'], prefix = 'Em')\ncombine.head()","b4cf525a":"combine['FareBand'] = pd.cut(combine['Fare'], 4)\ncombine[['FareBand', 'Survived']].groupby(['FareBand'], as_index=False).mean().sort_values(by = 'FareBand')","55d9cae3":"combine.loc[combine['Fare'] <= 1.56, 'Fare'] = 0\ncombine.loc[(combine['Fare'] > 1.56) & (combine['Fare'] <= 3.119), 'Fare'] = 1\ncombine.loc[(combine['Fare'] > 3.119) & (combine['Fare'] <= 4.679), 'Fare'] = 2\ncombine.loc[combine['Fare'] > 4.679, 'Fare'] = 3","eabb720a":"combine['Fare'] = combine['Fare'].astype('int')","7210000f":"combine = combine.drop('FareBand', axis = 1)","bbdfe26e":"combine.head()","5a145b4f":"train_data = combine[:len(train_data)]\ntest_data = combine[len(train_data):]","8e8a6474":"train_data.head()","2c3d75b4":"train_data = train_data.drop('PassengerId', axis = 1)\ntrain_data.head()","cf5d8d90":"train_data['Survived'] = train_data['Survived'].astype('int')\ntrain_data.head()","609aca85":"test_data.head()","891c71f2":"test_data = test_data.drop('Survived', axis = 1)\ntest_data.head()","a9c917e5":"X_train= train_data.drop('Survived', axis = 1)\nY_train = train_data['Survived']\nX_test = test_data.drop('PassengerId', axis = 1).copy()\nprint(\"X_train shape: \", X_train.shape)\nprint(\"Y_train shape: \", Y_train.shape)\nprint(\"X_test shape: \", X_test.shape)","be41e4d9":"from sklearn.svm import SVC, LinearSVC\nsvc = SVC()\nsvc.fit(X_train, Y_train)\nY_pred = svc.predict(X_test)\nacc_svc = round(svc.score(X_train, Y_train) * 100, 2)\nacc_svc","0e654ecc":"from sklearn.model_selection import GridSearchCV\nparam_grid = {'C': [0.1, 1, 10, 100, 1000],  \n              'gamma': [1, 0.1, 0.01, 0.001, 0.0001], \n              'kernel': ['rbf']}  \n  \ngrid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 3) \n\ngrid.fit(X_train, Y_train)","51af72dc":"print(\"Best parameters: \", grid.best_params_) \nprint(\"Best estimator: \", grid.best_estimator_)","6678ef2b":"svc = SVC(C = 1000, gamma = 0.01, kernel = 'rbf')\nsvc.fit(X_train, Y_train)\nY_pred = svc.predict(X_test)\nacc_svc = round(svc.score(X_train, Y_train) * 100, 2)\nacc_svc","f0f8652b":"from sklearn.model_selection import cross_val_score\ncross_val_score(svc, X_train, Y_train, scoring = 'accuracy', cv = 10).mean()","48f5d3f4":"Y_pred","ceef6a96":"len(Y_pred)","382a57f3":"ss.head()","a86179a6":"ss.shape","cbbc10ea":"submit = pd.DataFrame({'PassengerId': test_data['PassengerId'], 'Survived': Y_pred})\nsubmit.head()","aaf39b4a":"submit.shape","2d43d583":"submit.to_csv(\"svm_titanic_final1.csv\", index = False)\nprint(\"Submission saved!\")","4fdd0340":"\u0414\u0430\u043b\u0435\u0435 \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043e\u043c","9111637f":"\u0414\u0430\u043b\u0435\u0435 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u043a \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432.","86ed2e94":"\u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b Ticket \u0438 Cabin (\u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u043a\u0430\u043a \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043e \u0432 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435).","d0da32d5":"\u0412\u0438\u0434\u0438\u043c \u043d\u0435\u0433\u0430\u0442\u0438\u0432\u043d\u0443\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u0441 Pclass, SibSp \u0438 Parch.","0f002bac":"\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 (\u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442)","642d6702":"\u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u044b\u0436\u0438\u0432\u0448\u0438\u0445 \u0441\u0440\u0435\u0434\u0438 \u0442\u0435\u0445 \u0443 \u043a\u043e\u0433\u043e 3 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439\/\u0434\u0435\u0442\u0435\u0439 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443, \u0447\u0443\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0443 1 \u0438 2. \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u044d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c \u0447\u0442\u043e \u0434\u0435\u0442\u0435\u0439 \u044d\u0432\u0430\u043a\u0443\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c\u0438. \u0427\u0438\u0441\u043b\u043e \u0431\u0440\u0430\u0442\u044c\u0435\u0432, \u0441\u0435\u0441\u0442\u0435\u0440 \u0438\u043b\u0438 \u0441\u0443\u043f\u0440\u0443\u0433\u043e\u0432 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443 \u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430: \u0443 \u043a\u043e\u0433\u043e 1-2 \u0448\u0430\u043d\u0441\u043e\u0432 \u0432\u044b\u0436\u0438\u0442\u044c \u0431\u044b\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0432 \u043e\u0434\u0438\u043d\u043e\u0447\u043a\u0443. \u0414\u0430\u043b\u0435\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0432\u044b\u0436\u0438\u0432\u0448\u0438\u0445. ","3ed2e74b":"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 train \u0438 test","41a02982":"\u0414\u0430\u043b\u0435\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0441 \u0440\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u0430\u043c\u0438. \u0420\u0430\u043d\u0435\u0435 \u0443\u0436\u0435 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u043b\u0438\u0441\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0438 SibSp \u0438 Parch. \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u0445, \u0434\u0435\u0442\u044f\u0445, \u0431\u0440\u0430\u0442\u044c\u044f\u0445, \u0441\u0435\u0441\u0442\u0440\u0430\u0445, \u0436\u0435\u043d\u0430\u0445 \u0438 \u0441\u0443\u043f\u0440\u0443\u0433\u0430\u0445 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443 \u0432 \u043e\u0434\u043d\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043e \u0442\u043e\u043c: \u0431\u044b\u043b \u043b\u0438 \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u043d\u0430 \u043a\u043e\u0440\u043e\u0431\u043b\u0435 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u0441 \u0440\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u0430\u043c\u0438. ","5cc8976e":"\u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0441\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432.","76446f4f":"\u0418\u0449\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 SibSp, Parch \u0438 PClass, \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 \u044d\u0442\u0438\u0445 \u0441\u0442\u0440\u043e\u043a. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b, \u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 \u0432\u0441\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430 Age.","574535c2":"\u0414\u0430\u043b\u0435\u0435 \u0440\u0430\u0437\u043e\u0431\u044a\u0435\u043c \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u043d\u0430 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 (\u0447\u0442\u043e\u0431\u044b \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440 \u043f\u043e\u043f\u0430\u0434\u0430\u043b \u0432 \u0442\u0443 \u0438\u043b\u0438 \u0438\u043d\u0443\u044e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u0443\u044e \u0433\u0440\u0443\u043f\u043f\u0443)","d202285b":"\u041a\u043e\u043b\u043e\u043d\u043a\u0438 Title \u0438 Embraked \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0432\u0438\u0434\u0443.","cc222834":"\u041e\u0442\u043b\u0438\u0447\u0438\u0435 Train \u043e\u0442 Test: \u0443 Train \u0435\u0441\u0442\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \"Survived\". \u0414\u0430\u043b\u0435\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c: \u043c\u043d\u043e\u0433\u043e \u043b\u0438 null \u0432 Test \u0438 Train.  ","175db006":"\u041a\u0430\u043a \u0432\u0438\u0434\u0438\u043c, \u0434\u0435\u0442\u0435\u0439 \u0441\u043f\u0430\u0441\u0430\u043b\u0438 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u043e. \u0421\u0440\u0435\u0434\u0438 \u043f\u043e\u0436\u0438\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u043e \u0432\u044b\u0436\u0438\u0432\u0448\u0438\u0445 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e. ","541515d7":"\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u043f\u043e\u043b: 0 - \u043c\u0443\u0436\u0447\u0438\u043d\u0430, 1 - \u0436\u0435\u043d\u0449\u0438\u043d\u0430","fd44a82d":"\u0412 \u0421\u0430\u0443\u0442\u0433\u0435\u043c\u043f\u0442\u043e\u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 3 \u043a\u043b\u0430\u0441\u0441\u0430,\u0438 \u0432 \u0446\u0435\u043b\u043e\u043c \u0432 \u044d\u0442\u043e\u043c \u043f\u043e\u0440\u0442\u0443 \u0441\u0435\u043b\u043e \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043c\u043d\u043e\u0433\u043e \u043b\u044e\u0434\u0435\u0439. \u0421 \u044d\u0442\u0438\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0441\u0432\u044f\u0437\u0430\u043d \u0442\u0430\u043a\u043e\u0439 \u043d\u0438\u0437\u043a\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0441\u043f\u0430\u0441\u0448\u0438\u0445\u0441\u044f \u0432 \u0421\u0430\u0443\u0442\u0433\u0435\u043c\u043f\u0442\u043e\u043d\u0435. \u0412 \u041a\u0443\u0438\u043d\u0441\u0442\u0430\u0443\u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u043c\u0430\u043b\u043e \u043f\u0430\u0441\u0430\u0436\u0438\u0440\u043e\u0432 1 \u0438 2 \u043a\u043b\u0430\u0441\u0441\u0430, \u0430 \u0447\u0438\u0441\u043b\u043e \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 3 \u043a\u043b\u0430\u0441\u0441\u0430 \u0431\u043b\u0438\u0437\u043a\u043e \u043a \u0428\u0435\u0440\u0431\u0443\u0440\u0433\u0443.","422fec79":"\u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e null \u0432 Cabin, \u0437\u0430\u0442\u0435\u043c \u0438\u0434\u0435\u0442 Age \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 null. \u0414\u0430\u043b\u0435\u0435 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u043a \u0430\u043d\u0430\u043b\u0438\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445.","614d4590":"\u0422\u0435\u043f\u0435\u043f\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u043e\u043b\u043e\u043d\u043e\u043a SibSp \u0438 Parch.","8a0d1087":"X - \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, Y - \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0432\u0435\u0442\u043e\u0432.\ny: X -> Y - \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c","4309d338":"\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0432\u044b\u0432\u043e\u0434\u044b:\n\u0421\u0440\u0435\u0434\u0438 \u0436\u0435\u043d\u0449\u0438\u043d \u0432\u044b\u0436\u0438\u043b\u043e 74% (\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0431\u044b\u043b \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0432 \u0441\u043f\u0430\u0441\u0435\u043d\u0438\u0438);\n63% \u043b\u044e\u0434\u0435\u0439 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0441\u043f\u0430\u0441\u043b\u043e\u0441\u044c. \u0427\u0435\u043c \u0432\u044b\u0448\u0435 \u043a\u043b\u0430\u0441\u0441, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u043b\u044e\u0434\u0435\u0439 \u0438\u0437 \u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0441\u043c\u043e\u0433 \u0441\u043f\u0430\u0441\u0442\u0438\u0441\u044c (3 \u043a\u043b\u0430\u0441\u0441 \u0436\u0438\u043b \u0432 \u0441\u0430\u043c\u043e\u043c \u043d\u0438\u0437\u0443 \u043a\u043e\u0440\u0430\u0431\u043b\u044f, \u0438\u0445 \u044d\u0432\u0430\u043a\u0443\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e);\n\u041f\u043e\u0440\u0442 \u043f\u043e\u0441\u0430\u0434\u043a\u0438: \u043b\u0438\u0434\u0438\u0440\u0443\u0435\u0442 \u0428\u0435\u0440\u0431\u0443\u0440\u0433, \u0437\u0430\u0442\u0435\u043c \u0438\u0434\u0435\u0442 \u041a\u0443\u0438\u043d\u0441\u0442\u0430\u0443\u043d, \u0430 \u043f\u043e\u0442\u043e\u043c \u0421\u0430\u0443\u0442\u0433\u0435\u043c\u043f\u0442\u043e\u043d.","dc147176":"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c Fare \u043d\u0430 4 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0430.","58a7cea0":"\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c 5 \u0432\u0438\u0434\u043e\u0432 \u043f\u0440\u0438\u0441\u0442\u0430\u0432\u043e\u043a, \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0441\u043d\u043e\u0432\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u043a\u0442 \u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u0441\u043f\u0430\u0441\u0435\u043d\u0438\u044f \u0436\u0435\u043d\u0449\u0438\u043d. \u0422\u0435\u043f\u0435\u0440\u044c, \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 Title, \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u043e\u0442 Name.","5f414503":"\u0420\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0441 Name. \u0412\u044b\u0434\u0435\u043b\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u0441\u0442\u0430\u0432\u043a\u0443 (\u043c\u0438\u0441\u0442\u0435\u0440, \u043c\u0438\u0441\u0441\u0438\u0441 \u0438 \u0442.\u0434.)."}}