{"cell_type":{"4b385553":"code","98f47745":"code","e784898e":"code","01648e01":"code","88ca59c5":"code","9ab4f844":"code","6115dcad":"code","32cbbed1":"code","962523ed":"code","fec6c568":"code","fb5864db":"code","f4b89146":"code","46562c23":"code","d46a6e33":"code","7ab35bca":"markdown","415c78ff":"markdown","662762c2":"markdown","26ca08f8":"markdown","be2a022b":"markdown","1c104823":"markdown","d7d97ab1":"markdown","ac0130f3":"markdown","6218f51a":"markdown","0331add3":"markdown","001bdc9e":"markdown","304ad1df":"markdown","2fe46f46":"markdown","ebef5f2d":"markdown","82515b36":"markdown","dde1627a":"markdown","16e38c76":"markdown","c3a1abf8":"markdown","c90a1aa6":"markdown","c0a16557":"markdown","8a29a7d7":"markdown","aff9a3c4":"markdown","6732e979":"markdown","bd764e12":"markdown"},"source":{"4b385553":"import pandas as pd\nimport numpy as np\n\nglobal_seed = 1236\n\nraw = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\nraw.dropna()\nraw.head()","98f47745":"for column in raw.columns:\n    print(f\"{column}: {raw[column].unique()}\")","e784898e":"from sklearn.model_selection import train_test_split\ntrain, validation = train_test_split(raw, test_size=0.05, random_state=global_seed)\n\nprint('raw data shape: ', raw.shape)\nprint('train data shape: ', train.shape)\nprint('test data shape: ', validation.shape)","01648e01":"!pip install pycaret","88ca59c5":"from pycaret.classification import *\n\nexp = setup(\n    train, \n    target = 'target', \n    categorical_features=None,\n    numeric_features=None,\n    date_features=None, \n    ignore_features=None, \n    normalize=False, \n    normalize_method='zscore', \n    transformation=False, \n    transformation_method='yeo-johnson',\n    n_jobs=2, \n    use_gpu=True, \n    session_id=global_seed, \n    log_experiment=False, \n    experiment_name=None, \n    log_plots=False, \n    log_profile=False, \n    log_data=False, \n    silent=True, \n    verbose=True, \n    profile=False\n)","9ab4f844":"compare_models()","6115dcad":"best = create_model('ridge')","32cbbed1":"plot_model(best, plot = 'confusion_matrix')","962523ed":"plot_model(best, plot = 'feature')","fec6c568":"test_prediction = predict_model(best, validation)\ntest_prediction.to_csv('validation_prediction.csv', index=False)\ntest_prediction","fb5864db":"test_prediction = test_prediction.apply(pd.to_numeric)\ntest_prediction['comp'] = np.where(test_prediction['target'] == test_prediction['Label'], 'Correct', 'Incorrect')\ntest_prediction.groupby('comp').count()['Label']","f4b89146":"validation_accuracy = test_prediction.groupby('comp').count()['Label'][0] \/ (test_prediction.groupby('comp').count()['Label'][0] + test_prediction.groupby('comp').count()['Label'][1])\nprint('validation_accuracy: ', validation_accuracy)","46562c23":"from sklearn.metrics import confusion_matrix\n\ny_actu = test_prediction['target']\ny_pred = test_prediction['Label']\n\ncm = confusion_matrix(y_actu, y_pred)\n\nimport seaborn as sn\nsn.heatmap(cm, cmap=\"Blues\", annot=True,annot_kws={\"size\": 16})","d46a6e33":"print('validation_accuracy: ', validation_accuracy)","7ab35bca":"Analyse data","415c78ff":"## Analyse best model","662762c2":"# Heart disease prediction - ML model development","26ca08f8":"Accuracy on validation (test) set","be2a022b":"Check results of predictions on cases never 'saw' before by the model.","1c104823":"Check confusion matrix of the model","d7d97ab1":"Confusion matrix for validation (test) set","ac0130f3":"**The validation accuracy is:**","6218f51a":"Check the importance of each feature","0331add3":"## Analyze prediction on the validation (test) set","001bdc9e":"This experiment consists in the following steps to produce a ML model to predict the risk of heart disease:\n\n* Load, analyse data and split in train and test\n* Setup the experiment\n* Choose the best model\n* Build best model\n* Analyse best model\n* Predict on the validation set\n* Analyze prediction on the validation set\n* Conclusion","304ad1df":"## Build best model","2fe46f46":"Check the file *validation_prediction.csv* in the output folder. Enjoy!","ebef5f2d":"Check predictions","82515b36":"## Setup the experiment","dde1627a":"## Predict on the validation (test) set","16e38c76":"## Conclusion","c3a1abf8":"### Define the parameters for experiment","c90a1aa6":"**The accuracy for validation (test) and training are almost the same, which is very good. It demonstrates that the model have ability to generalize, and it is not overfited.**","c0a16557":"## Choose the best model","8a29a7d7":"## Load, analyse data and split in train and test","aff9a3c4":"Split train and test","6732e979":"### First install pycaret","bd764e12":"Load data"}}