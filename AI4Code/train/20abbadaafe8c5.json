{"cell_type":{"bca6a4d1":"code","b96c6547":"code","7ae5f898":"code","b93af0bf":"code","1254decc":"code","bec722d2":"code","0f12a7d5":"code","6d671e3b":"code","2b262398":"code","e9db5661":"code","468eb036":"code","dd91fabe":"code","d2c09acc":"code","3fb35737":"code","c6ab8f1e":"code","3744c1ae":"code","6260391f":"code","26541e61":"markdown","2e3aa9ed":"markdown"},"source":{"bca6a4d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b96c6547":"#Data Analysis\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-darkgrid')\nimport seaborn as sns\n\n#Data Preprocessing and Feature Engineering\nfrom nltk import PorterStemmer\nfrom textblob import TextBlob\nimport re\nfrom nltk.corpus import stopwords\nfrom nltk.stem.wordnet import WordNetLemmatizer\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\nfrom wordcloud import WordCloud, ImageColorGenerator\nfrom PIL import Image\nimport plotly.express as pex\n\nimport urllib\nimport requests","7ae5f898":"tweets = pd.read_csv('\/kaggle\/input\/covid19-tweets\/covid19_tweets.csv')\ntweets.columns = tweets.columns.str.strip().str.lower().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')\nprint('Tweets data shape: ', tweets.shape)\ntweets.head()","b93af0bf":"def remove_pattern(text, pattern):\n    r = re.findall(pattern, text)\n    for i in r:\n        text = re.sub(i, \"\", text)\n    return text","1254decc":"tweets['text'] = np.vectorize(remove_pattern)(tweets['text'], \"@[\\w]*\")\ntweets['text'] = np.vectorize(remove_pattern)(tweets['text'], \"#[\\w]*\")\ntweets['text'] = np.vectorize(remove_pattern)(tweets['text'], '[0-9]')\ntweets['text'] = tweets['text'].str.replace(\"[^a-zA-Z#]\", \" \")\ntweets['text'] = tweets['text'].apply(lambda x: ' '.join([i for i in x.split() if len(i) > 3]))\ntweets.head()","bec722d2":"tweet = tweets['text'].apply(lambda x: x.split())\ntweet.head()","0f12a7d5":"ps = PorterStemmer()\ntweet = tweet.apply(lambda x: [ps.stem(i) for i in x])\ntweet.head()","6d671e3b":"for i in range(len(tweet)):\n    tweet[i] = ' '.join(tweet[i])\ntweets['text'] = tweet\ntweets.head()","2b262398":"India = ' '.join(text for text in tweets['text'][tweets['user_location'] == 'India'])\nChina = ' '.join(text for text in tweets['text'][tweets['user_location'] == 'China'])\nUSA = ' '.join(text for text in tweets['text'][tweets['user_location'] == 'USA'])\nSA = ' '.join(text for text in tweets['text'][tweets['user_location'] == 'South Africa'])","e9db5661":"# combining the image with the dataset\nMask = np.array(Image.open(requests.get('http:\/\/clipart-library.com\/image_gallery2\/Twitter-PNG-Image.png', stream = True).raw))\n\n# We use the ImageColorGenerator library from Wordcloud \n# Here we take the color of the image and impose it over our wordcloud\nimage_colors = ImageColorGenerator(Mask)\n\n# Now we use the WordCloud function from the wordcloud library \nwc = WordCloud(background_color = 'black', height = 1500, width = 4000, mask = Mask).generate(India)\n\n# Size of the image generated \nplt.figure(figsize = (10, 20))\n\n# Here we recolor the words from the dataset to the image's color\n# recolor just recolors the default colors to the image's blue color\n# interpolation is used to smooth the image generated \nplt.imshow(wc.recolor(color_func = image_colors), interpolation = \"hamming\")\n\nplt.axis('off')\nplt.show()","468eb036":"Mask = np.array(Image.open(requests.get('http:\/\/clipart-library.com\/image_gallery2\/Twitter-PNG-Image.png', stream = True).raw))\nimage_colors = ImageColorGenerator(Mask)\nwc = WordCloud(background_color = 'black', height = 1500, width = 4000, mask = Mask).generate(China)\nplt.figure(figsize = (10, 20))\nplt.imshow(wc.recolor(color_func = image_colors), interpolation = \"hamming\")\nplt.axis('off')\nplt.show()","dd91fabe":"Mask = np.array(Image.open(requests.get('http:\/\/clipart-library.com\/image_gallery2\/Twitter-PNG-Image.png', stream = True).raw))\nimage_colors = ImageColorGenerator(Mask)\nwc = WordCloud(background_color = 'black', height = 1500, width = 4000, mask = Mask).generate(USA)\nplt.figure(figsize = (10, 20))\nplt.imshow(wc.recolor(color_func = image_colors), interpolation = \"hamming\")\nplt.axis('off')\nplt.show()","d2c09acc":"Mask = np.array(Image.open(requests.get('http:\/\/clipart-library.com\/new_gallery\/18-189677_instagram-logo-twitter-logo-bird-twitter-logo-2017.png', stream = True).raw))\nimage_colors = ImageColorGenerator(Mask)\nwc = WordCloud(background_color = 'black', height = 1500, width = 4000, mask = Mask).generate(SA)\nplt.figure(figsize = (10, 20))\nplt.imshow(wc.recolor(color_func = image_colors), interpolation = \"hamming\")\nplt.axis('off')\nplt.show()","3fb35737":"tweets_f = tweets.copy()\n\ntweets['date'] = pd.to_datetime(tweets['date'])\n\ntweets['year'] = tweets['date'].dt.year\ntweets['month'] = tweets['date'].dt.month\ntweets['day'] = tweets['date'].dt.day\ntweets['dayofweek'] = tweets['date'].dt.dayofweek\ntweets['hour'] = tweets['date'].dt.hour\ntweets['minute'] = tweets['date'].dt.minute\ntweets['dayofyear'] = tweets['date'].dt.dayofyear\ntweets['date_only'] = tweets['date'].dt.date\ntweets.head()","c6ab8f1e":"plt.figure(figsize = (10, 5))\ntweets_daily = tweets.groupby([\"dayofweek\"])[\"text\"].count().reset_index()\ntweets_daily.columns = ['dayofweek', 'tweet_count']\nsns.lineplot(x = 'dayofweek', y = 'tweet_count', hue = None, data = tweets_daily)\nplt.title('Tweets count by day of the week (Monday-Sunday)')\nplt.show()","3744c1ae":"plt.figure(figsize = (10, 5))\ntweets_yearly = tweets.groupby([\"dayofyear\"])[\"text\"].count().reset_index()\ntweets_yearly.columns = ['dayofyear', 'tweet_count']\nsns.lineplot(x = 'dayofyear', y = 'tweet_count', hue = None, data = tweets_yearly)\nplt.title('Tweets count by day of year')\nplt.show()","6260391f":"tweetMax = tweets.groupby(tweets.user_name)[[\"user_location\"]].count().reset_index()\ntweetMax.columns= ['user_name','count']\ntweetMax = tweetMax.sort_values(by = \"count\" , ascending = False)\ntweetMax= tweetMax.head(10)\ntweetMax\n\n\nfig = pex.bar(tweetMax, x = 'user_name', y='count', title = 'User Standings')\nfig.show()","26541e61":"## Text Wordclouds by Countries","2e3aa9ed":"### Extracting more features"}}