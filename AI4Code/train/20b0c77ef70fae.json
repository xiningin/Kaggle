{"cell_type":{"4ccb06a4":"code","e5220314":"code","8a56ed64":"code","ff7d7e24":"code","c3469edb":"code","4851f2cd":"code","2a045281":"code","29c2615f":"code","65362b69":"code","8ec5b00e":"code","5b889c0f":"code","285730b3":"code","685bdaac":"code","4baf40bc":"code","752aa8ef":"markdown","a5660764":"markdown","6c491d37":"markdown","9eda6396":"markdown","e9201394":"markdown","46c0d4a7":"markdown","9ad49fb8":"markdown","7f65cb74":"markdown","bbdefb06":"markdown","81facfb0":"markdown","00c82073":"markdown","3feac673":"markdown","27478087":"markdown","59b63759":"markdown","1e75b9a6":"markdown"},"source":{"4ccb06a4":"import matplotlib.pyplot as plt\nimport seaborn as sns\n","e5220314":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8a56ed64":"sp = pd.read_csv('\/kaggle\/input\/m5-forecasting-accuracy\/sell_prices.csv')\ncl = pd.read_csv('\/kaggle\/input\/m5-forecasting-accuracy\/calendar.csv')\nstv = pd.read_csv('\/kaggle\/input\/m5-forecasting-accuracy\/sales_train_validation.csv')","ff7d7e24":"def spcl(item_id):\n    result = sp[sp['item_id'].isin(item_id)]\n    result = pd.merge(result,cl,on='wm_yr_wk')\n    result['date'] = pd.to_datetime(result['date'])\n    return result\n\nspcl(['HOBBIES_1_001','HOBBIES_1_002'])","c3469edb":"fig, ax = plt.subplots(figsize=(20, 10))\nsns.lineplot(data=spcl(['HOBBIES_1_001']),x='date',y='sell_price',hue='store_id',ax=ax)","4851f2cd":"grouped_sp = sp[['item_id','sell_price']].groupby('item_id')\nsummary_sp = grouped_sp.agg(['mean','max','min','std','var','count'])['sell_price']\nsummary_sp","2a045281":"import matplotlib.pyplot as plt\nfig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\nfor i, column in enumerate(summary_sp.columns):\n    sns.distplot(summary_sp[column],ax=axes[i\/\/3,i%3])","29c2615f":"summary_sp1 = summary_sp.copy()\nsummary_sp1['item_id'] = summary_sp.index\nsummary_sp1[['cat_id','dept','item']] = summary_sp1['item_id'].str.split('_',expand=True)\nsummary_sp1['dept_id'] = summary_sp1['cat_id'] + '_' + summary_sp1['dept']\nsummary_sp1","65362b69":"import matplotlib.pyplot as plt\nfig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\nfor i, column in enumerate(['mean', 'max', 'min', 'std', 'var', 'count']):\n    sns.distplot(summary_sp1[summary_sp1['cat_id']=='FOODS'][column],ax=axes[i\/\/3,i%3],label='FOODS')\n    sns.distplot(summary_sp1[summary_sp1['cat_id']=='HOBBIES'][column],ax=axes[i\/\/3,i%3],label='HOBBIES')\n    sns.distplot(summary_sp1[summary_sp1['cat_id']=='HOUSEHOLD'][column],ax=axes[i\/\/3,i%3],label='HOUSEHOLD')\n\nplt.legend()\n","8ec5b00e":"fig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\nfor i, column in enumerate(['mean', 'max', 'min', 'std', 'var', 'count']):\n    sns.distplot(summary_sp1[summary_sp1['cat_id']=='FOODS'][column],ax=axes[i\/\/3,i%3],label='FOODS')\n\nplt.legend()\n","5b889c0f":"fig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\nfor i, column in enumerate(['mean', 'max', 'min', 'std', 'var', 'count']):\n    sns.distplot(summary_sp1[summary_sp1['cat_id']=='HOBBIES'][column],ax=axes[i\/\/3,i%3],label='HOBBIES')\n\nplt.legend()\n","285730b3":"fig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\nfor i, column in enumerate(['mean', 'max', 'min', 'std', 'var', 'count']):\n    sns.distplot(summary_sp1[summary_sp1['cat_id']=='HOUSEHOLD'][column],ax=axes[i\/\/3,i%3],label='HOUSEHOLD')\n\nplt.legend()\n","685bdaac":"import matplotlib.pyplot as plt\nfor dept_id in summary_sp1['dept_id'].unique():\n    fig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\n    for i, column in enumerate(['mean', 'max', 'min', 'std', 'var', 'count']):\n            sns.distplot(summary_sp1[summary_sp1['dept_id']==dept_id][column],ax=axes[i\/\/3,i%3])\n    fig.suptitle(dept_id, fontsize=20)\n    plt.show()\n\n","4baf40bc":"import matplotlib.pyplot as plt\ndef show_distplot(summary_sp1):\n    for dept_id in summary_sp1['dept_id'].unique():\n        for i, column in enumerate(['mean', 'max', 'min', 'std', 'var', 'count']):\n            sns.distplot(summary_sp1[summary_sp1['dept_id']==dept_id][column],ax=axes[i\/\/3,i%3])\n    \n\nfor cat_id in summary_sp1['cat_id'].unique():\n    fig, axes = plt.subplots(nrows=2, ncols=3,figsize=(20, 10))\n    show_distplot(summary_sp1[summary_sp1['cat_id']==cat_id])\n    fig.suptitle(cat_id, fontsize=20)\n    plt.show()\n\n","752aa8ef":"- \u3088\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u30ab\u30c6\u30b4\u30ea\u3054\u3068\u306b\u91cd\u306d\u3066\u307f\u308b","a5660764":"## FOODS","6c491d37":"## \u4e0b\u6e96\u5099\n- \u8ffd\u3044\u3084\u3059\u3044\u3088\u3046\u306bsell_price\u3068calendar\u3092\u7d50\u5408\u3057\u307e\u3059\n- \u5168\u5546\u54c1\u70b9\u6570\u00d7\u5168\u65e5\u4ed8\u3060\u3068\u51e6\u7406\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u308b\u306e\u3067\u5bfe\u8c61\u306e\u5546\u54c1\u3092\u7d5e\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059","9eda6396":"# \u5546\u54c1\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306b\u6bd4\u8f03 cat_id","e9201394":"# what's this\n- \u30c1\u30fc\u30e0\u5171\u6709\u7528\u306e\u65e5\u672c\u8a9e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\n- \u305b\u3063\u304b\u304f\u306a\u306e\u3067public\n- \u3053\u306eNotebook\u3067\u306f\u5546\u54c1\u4fa1\u683c\u3092\u773a\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3059","46c0d4a7":"## HOBBIES","9ad49fb8":"# \u5546\u54c1\u306e\u5e73\u5747\u4fa1\u683c\u3068\u5206\u6563\u3068\u8ca9\u58f2\u65e5\u6570","7f65cb74":"# \u5546\u54c1\u7a2e\u5225\u6bd4\u8f03 dept_id\n- dept_id\u306f7\u7a2e\u5225\u306b\u308f\u304b\u308c\u308b","bbdefb06":"## \u30ab\u30c6\u30b4\u30ea\u6bce\u306b\u63cf\u753b","81facfb0":"- FOODS\u306f\u4fa1\u683c\u306b\u3088\u308b\u7a2e\u5225\u306e\u5dee\u304c\u3061\u3087\u3063\u3068\u898b\u3048\u3066\u3053\u306a\u3044\n- count\u3088\u308a\u3001FOOD_2\u306f\u30c7\u30fc\u30bf\u671f\u9593\u306e\u9014\u4e2d\u304b\u3089\u5897\u3048\u3066\u304d\u305f\u5546\u6750\u306b\u898b\u3048\u308b\n- HOBBIES_1\u4f4e\u4fa1\u683c\u304b\u3089\u7de9\u3084\u304b\u306b\u50be\u659c\u3057\u3066\u3044\u308b\u304c0.75\u30c9\u30eb\u306e\u3042\u305f\u308a\u306b\u5c0f\u3055\u306a\u30d4\u30fc\u30af\u304c\u3042\u308b\n- HOBBIES_2\u306f0\u30c9\u30eb\u4ed8\u8fd1\u30682\u30c9\u30eb\u4ed8\u8fd1\u306b2\u3064\u306e\u4fa1\u683c\u306e\u30d4\u30fc\u30af\u304c\u3042\u308b\n- HOUSEHOLD_1\u304c\u4f4e\u4fa1\u683c\u5e2f\u3001HOUSEHOLD_2\u304c\u4e2d\u4fa1\u683c\u5e2f\u3067\u5206\u5272\u3067\u304d\u305d\u3046\n- HOUSEHOLD\u306estd\u304c\u3088\u304f\u4e00\u81f4\u3057\u3066\u3044\u308b\n  - \u540c\u3058\u4fa1\u683c\u6c7a\u5b9a\u306e\u30ed\u30b8\u30c3\u30af\u304c\u5f93\u3063\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\n\n","00c82073":"- \u5e97\u8217\u3054\u3068\u306b\u304b\u306a\u308a\u5024\u6bb5\u3092\u5909\u3048\u3066\u3044\u308b\u3088\u3046\u3067\u3059\n- \u305f\u3060\u3057\u5927\u90e8\u5206\u306e\u671f\u9593\u3067\u8907\u6570\u5e97\u8217\u304c\u540c\u3058\u5024\u6bb5\u306a\u306e\u3067\u3001\u4ed6\u5e97\u8217\u306e\u5024\u6bb5\u3068\u6bd4\u8f03\u3057\u306a\u304c\u3089\u6c7a\u3081\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\n- 2013\/9\u6708\u306b\u8ca9\u58f2\u958b\u59cb\u3057\u305f\u3042\u3068\u3059\u3050\u5168\u4f53\u7684\u306b\u5024\u4e0b\u3052\u3057\u3066\u3044\u307e\u3059\u3002\u58f2\u308c\u884c\u304d\u304c\u60aa\u304b\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\n- TX_1\u304c2015\/7\u6708\u3042\u305f\u308a\u3067\u5927\u5e45\u306b\u5024\u4e0b\u3052\u3057\u3066\u3044\u307e\u3059\u3002\u30bb\u30fc\u30eb\u671f\u9593?\n","3feac673":"- \u5546\u54c1\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u30be\u30fc\u30f3\u306f5\u30c9\u30eb\u4ee5\u4e0b\n  - \u9ad8\u304f\u3066\u308220\u30c9\u30eb\u7a0b\u5ea6\n- std\n  - \u5024\u6bb5\u306e\u8abf\u6574\u306f\u6982\u306d1\u30c9\u30eb\u4ee5\u4e0b\n    - 5\u30c9\u30eb\u304f\u3089\u3044\u306e\u5546\u54c1\u306a\u3089\u307e\u3041\u305d\u3093\u306a\u3082\u3093\u304b\n- var\n  - \u30bb\u30fc\u30eb\u306f\u3042\u308a\u305d\u3046?\u3001\u57fa\u672c\u7684\u306b\u306f\u5206\u6563\u306f\u5c0f\u3055\u3044\n- count\n  - \u307b\u3068\u3093\u3069\u306e\u5546\u54c1\u306f\u5bfe\u8c61\u306e\u5168\u671f\u9593\u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u308b","27478087":"# HOBBIES_1_001\u306e\u8ca9\u58f2\u4fa1\u683c\n- \u8a66\u3057\u306bHOBBIES_1_001\u306e\u63a8\u79fb\u3092\u8868\u793a\u3057\u307e\u3059","59b63759":"- mean\u3092\u898b\u308b\u3068\u30ab\u30c6\u30b4\u30ea\u306b\u3088\u3063\u3066\u5024\u6bb5\u5e2f\u306e\u50be\u5411\u306f\u5927\u304d\u304f\u7570\u308b\n  - FOOD\u304c5\u30c9\u30eb\u4ee5\u4e0b\u306b\u96c6\u4e2d\u3057\u3066\u3044\u308b\n  - HOBBIES\u306f\u3001\u3088\u308a\u4f4e\u4fa1\u683c\u5e2f\u3092\u4e2d\u5fc3\u306b\u9ad8\u3044\u5206\u6563\n    - \u55dc\u597d\u54c1\u3068\u3044\u3046\u610f\u5473\u306a\u3089\u30bf\u30d0\u30b3\u3068\u304b\u3082\u5165\u308b\u306e\u3060\u308d\u3046\u304b?\n  - HOUSEHOLD\u306e\u7279\u5b9a\u30a2\u30a4\u30c6\u30e0\u306e\u5206\u6563\u304c\u6975\u7aef\u306b\u5927\u304d\u304f\u3066\u5168\u4f53\u304c\u5f15\u3063\u5f35\u3089\u308c\u3066\u308b\u3088\u3046\u306b\u898b\u3048\u308b\n- \u56f0\u3063\u3066\u3044\u308b\u3053\u3068\n  - legend\u3092\u304d\u308c\u3044\u306b\u8868\u793a\u3057\u305f\u3044","1e75b9a6":"## HOUSEHOLD"}}