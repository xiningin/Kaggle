{"cell_type":{"60b1f184":"code","8292b990":"code","cebc691f":"code","33ecaec9":"code","d7a0c5d5":"code","ccb16f5b":"code","b3fe56d7":"code","5dd4c8aa":"code","02fbac85":"code","2df6c8ab":"code","9335d1cb":"code","eed72935":"code","880a34f6":"code","34148d3b":"code","442120f7":"code","520c1be7":"code","4bc99e31":"code","7ef0f7cb":"code","c4af72b0":"code","28587cb8":"code","1abf9e50":"code","052e837c":"code","946850ec":"code","e6a99779":"markdown","2e2288af":"markdown","ceb590bf":"markdown"},"source":{"60b1f184":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8292b990":"df = pd.read_csv(\"..\/input\/master.csv\")\nprint(df.columns)\ndf.sample(1)","cebc691f":"data = df[df.country == 'Brazil']\nprint(data.shape)\ndata.sample(1)","33ecaec9":"countries = df.country.unique().tolist()\ncountries[:5]","d7a0c5d5":"suicide_no = []\nfor c in countries:\n    s = 0 \n    for i in range(0, len(df.country)):\n        if(c==df.country[i]):\n            s += df.iloc[i]['suicides_no']\n    suicide_no.append(s)","ccb16f5b":"print(countries[0])\nprint(suicide_no[0])","b3fe56d7":"d = {'country' : countries, 'total_suicides' : suicide_no}\nsuicide_world = pd.DataFrame(data=d)\nindexes = suicide_world['total_suicides'].sort_values(ascending=False)[:10].index.tolist()\ntop_suicide_no = []\ntop_countries = []\nfor i in indexes:\n    top_countries.append(suicide_world.iloc[i].country)\n    top_suicide_no.append(suicide_world.iloc[i]['total_suicides'])\n    \nprint(top_countries)\nprint(top_suicide_no)","5dd4c8aa":"labels = top_countries\nsizes = [38.4, 40.6, 20.7, 10.3]\ncolors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral', 'blue', 'brown', 'tomato', 'magenta', 'darkseagreen', 'purple']\npatches, texts = plt.pie(top_suicide_no, colors=colors, shadow=True, startangle=90)\nplt.legend(patches, labels, loc=\"best\")\nplt.axis('equal')\nplt.tight_layout()\nplt.show()","02fbac85":"index = np.arange(len(top_countries))\nplt.bar(top_countries, top_suicide_no)\n#plt.xlabel('Countries', fontsize=5)\nplt.ylabel('Number of Suicides', fontsize=5)\nplt.xticks(index, top_countries, fontsize=5, rotation=30)\nplt.title('Top 10 countries with cases of suicide')\nplt.show()","2df6c8ab":"data.describe()","9335d1cb":"data.columns","eed72935":"female = data.groupby(by=['sex', 'age'])['suicides_no'].sum()[:6]\nmale = data.groupby(by=['sex', 'age'])['suicides_no'].sum()[6:]\nf = []\nm = []\nfn = []\nmn = []\nfor i in range(6):\n    f.append(female.index[i][1].split(' ')[0])\n    m.append(male.index[i][1].split(' ')[0])\n    fn.append(female[i])\n    mn.append(male[i])\nprint(f)\nprint(m)","880a34f6":"index = np.arange(len(f))\nplt.bar(f, fn)\n#plt.xlabel('Countries', fontsize=5)\nplt.ylabel('Number of Suicides', fontsize=5)\nplt.xticks(index, f, fontsize=8, rotation=30)\nplt.title('age x suicide rate  - women')\nplt.show()","34148d3b":"index = np.arange(len(m))\nplt.bar(m, mn)\n#plt.xlabel('Countries', fontsize=5)\nplt.ylabel('Number of Suicides', fontsize=5)\nplt.xticks(index, f, fontsize=8, rotation=30)\nplt.title('age x suicide rate - men')\nplt.show()","442120f7":"print('total female: ', sum(fn))\nprint('total male: ', sum(mn))","520c1be7":"d = {'women' : [sum(fn)], 'men' : [sum(mn)]}\nperSex = pd.DataFrame(data=d)\nperSex.plot.bar()","4bc99e31":"year = data.groupby(by=['country-year'])['suicides_no'].sum().index.tolist()\nsuicide_no = data.groupby(by=['country-year'])['suicides_no'].sum().values.tolist()","7ef0f7cb":"year_ = [d[6:] for d in year]\n\nprint(year_[:5])\nprint(suicide_no[:5])","c4af72b0":"corr_year = data.pivot_table(index='year',\n                                  values='suicides_no', aggfunc=np.median)\ncorr_year","28587cb8":"d = {'year' : year_, 'suicides' : suicide_no}\nperYear = pd.DataFrame(data=d)\nperYear.plot.bar(x='year',y='suicides')\nplt.title(\"suicides per year\")\nplt.show()","1abf9e50":"data.plot.scatter(x='year',y='HDI for year')\nplt.title(\"increase of the HDI over the years\")\nplt.show()","052e837c":"data.plot.line(x='year',y='gdp_per_capita ($)')\nplt.title(\"year x gdp (PIB)\")\ndata.plot.hist(x='suicides_no',y='gdp_per_capita ($)')\nplt.title(\"suicide rate x gdp (PIB)\")\nplt.show()","946850ec":"data.plot.hexbin(x='suicides_no',y='population', gridsize=8, color='lightgreen')\nplt.title(\"suicide rate x population\")\nplt.show()","e6a99779":"# Analyzing data from world","2e2288af":"# Plotting number of suicides by country\u00b6\n- The top 10 countries with the highest suicide rate","ceb590bf":"# Analyzing data from Brazil\n- 8th most suicidal country in the world"}}