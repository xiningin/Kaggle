{"cell_type":{"f2cea707":"code","0760adf5":"code","8845fd5c":"code","f4dadb8d":"code","1a675188":"code","6cdbf488":"code","348191db":"code","6eb02069":"code","5e286cd2":"code","ef896ac7":"code","f31725bc":"code","d520f4ed":"code","4467909f":"code","567ce37e":"code","ab6726c6":"code","7b8f9dd2":"code","5590a2b7":"code","a96ee729":"code","6b9ed7a7":"code","a96709e2":"code","9f761db4":"code","8443f6ac":"code","8e516731":"code","9c64239a":"code","a1668768":"code","183d8bb6":"code","f4adb8ee":"code","82a98759":"code","c2933440":"code","183cd449":"code","ffd57871":"code","ea20717c":"code","c5d25955":"code","02f80b18":"code","eb85e724":"markdown","a33fbacc":"markdown","af220895":"markdown","973eb34b":"markdown","59f86966":"markdown","6e15b449":"markdown","6d19dcb1":"markdown","76fab0c1":"markdown","bbe115aa":"markdown","a9c65ce6":"markdown","97a87fae":"markdown","d7204ea3":"markdown","133ad496":"markdown","5b8dd8c4":"markdown","0fcf1325":"markdown","476700cb":"markdown","8259e613":"markdown","5c06fd18":"markdown","3d92236d":"markdown","f33ef1e2":"markdown","79da4dd5":"markdown","f50866d0":"markdown","151fb4fb":"markdown","8f2ad662":"markdown","aff4d460":"markdown","e8277bda":"markdown","7ba58306":"markdown"},"source":{"f2cea707":"# Import needed libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport re\n\npd.options.display.max_rows = None","0760adf5":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8845fd5c":"# Read data in the excel file\n\ndf = pd.read_excel('..\/input\/online-retail-data-set-from-uci-ml-repo\/Online Retail.xlsx')\ndf.head()","f4dadb8d":"df.shape","1a675188":"df.info()","6cdbf488":"df.describe()","348191db":"# Check null values\ndf.isnull().sum()","6eb02069":"# Check number of unique values\ndf.nunique()","5e286cd2":"# Check each stock code has only one description\ndf.groupby('StockCode').apply(lambda x: x['Description'].unique()).head()","ef896ac7":"# Number of invoices for each country\ndf.groupby(['Country']).count() ['InvoiceNo']","f31725bc":"# Delete rows with null CustomerID\nclean_df = df.dropna(subset = ['CustomerID'])\n\n# Check null values\nclean_df.isnull().sum()","d520f4ed":"# Remove the unspecified countries\nclean_df = clean_df[(clean_df.Country != 'Unspecified')]","4467909f":"# Removing the price and quantity that are less than or equal to 0\nclean_df = clean_df[(clean_df.Quantity >= 0) & (clean_df.UnitPrice >= 0)]","567ce37e":"clean_df.describe()","ab6726c6":"# Check the number of invoices that starts with letter 'c', cancellation.\nclean_df['InvoiceNo'] = clean_df['InvoiceNo'].astype('str')\nclean_df[clean_df['InvoiceNo'].str.contains(\"c\")].shape[0]","7b8f9dd2":"# Check the stock code\n\ndef has_right_scode(input):\n    \n    \"\"\"\n    Function: check the if the stock code is wirtten in a right way,\n            The function check if the code contains 5-digit number or 5-digit number with a letter.\n    Args:\n      input(String): Stock code\n    Return:\n      Boolean: True or False\n    \"\"\"\n    \n    x = re.search(\"^\\d{5}$\", input)\n    y = re.search(\"^\\d{5}[a-zA-Z]{1}$\", input)\n    if (x or y):\n        return True\n    else:\n        return False\n\n    \nclean_df['StockCode'] = clean_df['StockCode'].astype('str')\nclean_df = clean_df[clean_df['StockCode'].apply(has_right_scode) == True]\nclean_df.head()","5590a2b7":"# One discription for each stock code\n\n# Put all Descriptions of each StockCode in a list \ndf_itms = pd.DataFrame(clean_df.groupby('StockCode').apply(lambda x: x['Description'].unique())).reset_index()\ndf_itms.rename(columns = { 0: 'Description2'}, inplace = True)\n\n# StockCode that have more than one Description\ndf_itms[df_itms['Description2'].str.len() != 1].head()","a96ee729":"# Take one Description for each StockCode\ndf_itms.loc[:, 'Description2'] = df_itms.Description2.map(lambda x: x[0])\n\n# StockCode that have more than one Description\ndf_itms[df_itms['Description2'].str.len() != 1].head()","6b9ed7a7":"# Merge clean_df with df_itms\nclean_df = pd.merge(clean_df, df_itms, on = 'StockCode')\nclean_df = clean_df.drop('Description', axis = 1)\nclean_df.rename(columns = { 'Description2': 'Description'}, inplace = True)\nclean_df.head()","a96709e2":"# Count number of purchases for each customer\ntrans_num = clean_df.groupby(['CustomerID'])['InvoiceNo'].count().to_frame().reset_index().rename(columns = {'InvoiceNo': 'Transactions'})\ntrans_num.head()","9f761db4":"# Calculate the median number of purchases\ntrans_median = round(trans_num[\"Transactions\"].median())\ntrans_median","8443f6ac":"# Add the number of the transcations column to the clean data frame\nact_cust = pd.merge(clean_df, trans_num, how = 'inner', on = 'CustomerID')\n\n# Keep the customers that have number of transactions >= trans_median \nact_cust = act_cust[act_cust[\"Transactions\"] >= trans_median]\nact_cust.head()","8e516731":"# Sum the quantity of each product based on the customer\nact_cust = act_cust.groupby(['CustomerID', 'Description']).sum()['Quantity'].to_frame().reset_index()\nact_cust.head(10)","9c64239a":"# Get the max quantity of products based on customer\nact_cust = act_cust.groupby(['CustomerID']).max().reset_index()\nact_cust.head()","a1668768":"# List of the preference products for each customer\nprf_prod_cust = act_cust[['CustomerID', 'Description']]\nprf_prod_cust.head()","183d8bb6":"# Top 20 favorite products for the customers\nprf_prod_cust.groupby(['Description']).count().sort_values('CustomerID', ascending=False).head(20)","f4adb8ee":"# Sum the quantity of each product based on the country\nprf_prod_country = clean_df.groupby(['Country', 'Description']).sum()['Quantity'].to_frame().reset_index()\nprf_prod_country.head()","82a98759":"# Top 3 favorite products in each country\nprf_prod_country = prf_prod_country.set_index('Description').groupby('Country')['Quantity'].nlargest(3).reset_index()\nprf_prod_country = prf_prod_country[['Country', 'Description']]\nprf_prod_country.head(15)","c2933440":"# Create month column from the InvoiveDate column \nclean_df['Month'] = pd.DatetimeIndex(clean_df['InvoiceDate']).month\nclean_df.head()","183cd449":"# Sum the quantity of each product based on the month\nprf_prod_mnth = clean_df.groupby(['Month', 'Description']).sum()['Quantity'].to_frame().reset_index()\nprf_prod_mnth.head()","ffd57871":"# Top 3 favorite products in each country\nprf_prod_mnth = prf_prod_mnth.set_index('Description').groupby('Month')['Quantity'].nlargest(3).reset_index()\nprf_prod_mnth = prf_prod_mnth[['Month', 'Description']]\nprf_prod_mnth","ea20717c":"# The fevorite products in more than one month\nprf_prod_mnths = prf_prod_mnth.groupby('Description').count() ['Month'].to_frame()\nprf_prod_mnths[prf_prod_mnths['Month'] > 1]","c5d25955":"prf_prod_mnth_country = clean_df.groupby(['Month', 'Description', 'Country']).sum()['Quantity'].to_frame().reset_index()\nprf_prod_mnth_country.head()","02f80b18":"# Sum the quantity of each product based on the month and country\nprf_prod_mnth_country = prf_prod_mnth_country.set_index('Description').groupby(['Country', 'Month'])['Quantity'].nlargest(3).reset_index()\nprf_prod_mnth_country = prf_prod_mnth_country[['Country', 'Month', 'Description']]\nprf_prod_mnth_country.head()","eb85e724":"The preference product in a month is the most purchased product in that month.","a33fbacc":"**Observations:**\n\nFrom the data, we can see that:\n* The minimum price and quantity are negative, and this is impossible.\n* There are null values in CustomerID and Description columns.\n* Some Stock Codes are not a 5-digit integral number.\n* Some Stock Codes has more than one item description.\n* The number of customers is 4372.\n* The number of countries is 38. \n","af220895":"### 3.1  What is the preference product for the active customers?","973eb34b":"The project is organized as follows. Section 1 explores and visualize the data. Section 2 includes data preperation and Section 3 data analysis. Finally, Section 4 presents the summary.","59f86966":"The preference  product in a country is the most purchased product in that country.","6e15b449":"As we can see, the items in the each Description list are the same item but they are written in different ways. So, I will keep only one describtion.","6d19dcb1":"## 1. Data Understanding","76fab0c1":"Now, the data is ready to be used to analysis.","bbe115aa":"## Overview\n\nCustomers are important to the survival and success of any business because they are the source of the revenue. The success of a business is the ability to satisfy customers and make them happy, and therefore turn a profit from them. Giving the customer recommendation about items that can buy it may attract them. Using retail transactional data can help in products recommendations.  \n\nIn this project, I will analyze an online retail transactional dataset from [UCI ML](http:\/\/archive.ics.uci.edu\/ml\/datasets\/Online+Retail\/) to find the top preferences products, the preferences products for each active customers, the top preference products in each country and the top preference products in each month. So, I will answer the following questions:\n\n\n* What is the preference product for each active customer?\n* What is the top three preference products in each country?\n* What is the top three preference products in each month?\n\n\nAnswering these questions can help in identifying the customers\u2019 favorite products depending on the month and country.\n","a9c65ce6":"The active customers are the customers who buy from the store many times. These customers bought more times than the median of times all customers. The preference  product of the customer is the most purchased product by the customer.","97a87fae":"### Dataset","d7204ea3":"Analyzing e-commerce transactions can help us in identifying the most frequently purchased products by the customer, and then make good products recommendations to the customers. Taking into consideration the customer country and the month of purchase can help in give better recommendations. \n    ","133ad496":"### 3.2 What is the top three preference  products in each country?","5b8dd8c4":"### 2.2. Dealing with Inconsistent Data","0fcf1325":"### 2.1. Missing Data","476700cb":"As we can see from the previous section, there are null data. So, I will remove the rows that contain null values.  ","8259e613":"* **Online Retail.xlsx** - The file contains all transactions occurring between 01\/12\/2010 and 09\/12\/2011 for a UK-based and registered non-store online retail. In thecdataset, there are eight columns:\n\n    * InvoiceNo: Invoice number. Nominal, a 6-digit integral number uniquely assigned to each transaction. If this code starts with letter 'c', it indicates a cancellation.\n    * StockCode: Product (item) code. Nominal, a 5-digit integral number uniquely assigned to each distinct product.\n    * Description: Product (item) name. Nominal.\n    * Quantity: The quantities of each product (item) per transaction. Numeric.\n    * InvoiceDate: Invice Date and time. Numeric, the day and time when each transaction was generated.\n    * UnitPrice: Unit price. Numeric, Product price per unit in sterling.\n    * CustomerID: Customer number. Nominal, a 5-digit integral number uniquely assigned to each customer.\n    * Country: Country name. Nominal, the name of the country where each customer resides.\n    ","5c06fd18":"## 4. Summary","3d92236d":"### 3.4 Result Discussion\n\nFrom above, we can see that the preference products in an online store are different based on the customer, country and month of purchase.  So, to make good  products recommendations we have to take into consideration these factors.  ","f33ef1e2":"# Preference Products","79da4dd5":"### 3.3 What is the top three preference products in each month?","f50866d0":"This step includes preparing data before analysing it.","151fb4fb":"This section includes:\n* Removing the unspecified countries.\n* Removing the price and quantity that are less than or equal to 0. \n* Removing inconsistent Stock code.\n* Keeping only one description for each Stock codes.","8f2ad662":"## 2. Data Preparation","aff4d460":"This use the dataset to answer the questions, and discusses the results.","e8277bda":"## 3. Data Analysis","7ba58306":"This step explores the dataset using different functions such as `head()`, `shape`, `describe()` and checks the null values using `isnull()`."}}