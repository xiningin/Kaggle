{"cell_type":{"ec7cc0d7":"code","5f9e0973":"code","481f6472":"code","878ae3d9":"code","d664caf1":"code","357f1079":"code","84168b69":"code","73d11f11":"code","7822ea3e":"code","c6ac89d3":"code","28c1ec9f":"code","af145e83":"code","a902b081":"code","a0736d9f":"code","7a97956f":"code","9722cd03":"code","93bfefb1":"code","2d2f8914":"code","db67ec0c":"code","20fc55a9":"code","ab2a9436":"code","ea00dadc":"code","3ae9cf5d":"markdown","33a6d743":"markdown","6f0ab579":"markdown","25918fdc":"markdown","b392d952":"markdown","605a3009":"markdown","7c20106f":"markdown","652c4ca1":"markdown","8b4ab786":"markdown","f7b1ee29":"markdown","b72902ee":"markdown","769cb2d4":"markdown","733b9eef":"markdown","db414eca":"markdown","e4eee8e2":"markdown","63252cf4":"markdown","c8bfdd38":"markdown","93582ca3":"markdown","07d6edaf":"markdown","56970372":"markdown"},"source":{"ec7cc0d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f9e0973":"# import c\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\npd.set_option('display.max_columns', 100)\n","481f6472":"# \u0111\u1ecdc data b\u1eb1ng pandas\ndf = pd.read_csv(\"..\/input\/credit-card-customers\/BankChurners.csv\")","878ae3d9":"df.head()","d664caf1":"# Theo nh\u01b0 t\u00e1c gi\u1ea3 c\u1ee7a data th\u00ec ch\u00fang ta s\u1ebd lo\u1ea1i b\u1ecf 2 c\u1ed9t cu\u1ed1i c\u00f9ng \ndf= df.drop(columns=['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1', 'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'], axis='columns')\n","357f1079":"df.info()","84168b69":"df.describe()","73d11f11":"df.isnull().sum()","7822ea3e":"from sklearn.preprocessing import LabelEncoder\n\nlist_of_cat = ['Attrition_Flag', 'Education_Level', 'Marital_Status', 'Income_Category', 'Card_Category', 'Gender']\n\nfor i in list_of_cat:\n    df[i] = LabelEncoder().fit_transform(df[i])","c6ac89d3":"df.head()","28c1ec9f":"df.shape","af145e83":"from sklearn.model_selection import train_test_split\n\nX = df.drop(columns=['CLIENTNUM', 'Attrition_Flag'])\ny = df['Attrition_Flag']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","a902b081":"y.value_counts()","a0736d9f":"y_test.value_counts()","7a97956f":"y_train.value_counts()","9722cd03":"# Do kh\u00f4ng li\u00ean quan \u0111\u1ebfn bi\u1ebfn d\u1ef1 \u0111o\u00e1n n\u00ean t\u00f4i s\u1ebd s\u1eed d\u1ee5ng to\u00e0n b\u1ed9 data \u0111\u1ec3 t\u00ednh \u0111\u1ed9 t\u01b0\u01a1ng quan gi\u1eefa c\u00e1c feature\ncorr = X.corr('pearson') # c\u0169ng c\u00f3 th\u1ec3 truy\u1ec1n v\u00e0o spearman\nplt.figure(figsize=(14,8))\nsns.heatmap(corr, annot=True)\nplt.show()","93bfefb1":"X= X.drop(columns=['Avg_Open_To_Buy', 'Months_on_book'], axis='columns')\nX_train = X_train.drop(columns=['Avg_Open_To_Buy', 'Months_on_book'], axis='columns')\nX_test = X_test.drop(columns=['Avg_Open_To_Buy', 'Months_on_book'], axis='columns')","2d2f8914":"from sklearn.feature_selection import SelectKBest # 1\nfrom sklearn.feature_selection import chi2 # 2\nfrom sklearn.feature_selection import f_classif # 3\nfrom sklearn.feature_selection import mutual_info_classif # 4\nfrom sklearn.linear_model import LogisticRegression # 5\nfrom sklearn import metrics # 6","db67ec0c":"selection_model =  SelectKBest(score_func=chi2, k=10)\nselection = selection_model.fit(X_train, y_train)","20fc55a9":"selection.get_support()","ab2a9436":"selection.scores_","ea00dadc":"selection.pvalues_","3ae9cf5d":"# V\u1eady t\u1ea1i sao ch\u00fang ta ph\u1ea3i s\u1eed d\u1ee5ng c\u00e1c k\u0129 thu\u1eadt Feature selection?\n* Gi\u1ea3m chi ph\u00ed t\u00ednh to\u00e1n v\u1ec1 m\u1eb7t th\u1eddi gian v\u00e0 b\u1ed9 nh\u1edb.\n    - \u0110\u1ed1i v\u1edbi b\u00e0i to\u00e1n m\u00e0 d\u1eef li\u1ec7u nhi\u1ec1u ch\u1ee9a nhi\u1ec1u feature hay nhi\u1ec1u chi\u1ec1u th\u00ec s\u1ebd t\u1ed1n b\u1ed9 nh\u1edb v\u00e0 th\u1eddi gian t\u00ednh to\u00e1n s\u1ebd l\u00e2u h\u01a1n v\u00ec v\u1eady s\u1ebd r\u1ea5t h\u1ea1n ch\u1ebf cho ch\u00fang ta th\u1eed nghi\u1ec7m v\u1edbi c\u00e1c th\u00ed nghi\u1ec7m kh\u00e1c nhau. V\u00ed d\u1ee5 th\u1eed c\u00e1c m\u00f4 h\u00ecnh h\u1ecdc m\u00e1y kh\u00e1c nhau, th\u1eed tune c\u00e1c hyperpameters ...\n    \n* S\u1ebd t\u1ed1t h\u01a1n cho m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n h\u1ecdc m\u00e1y\n    - V\u1edbi m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n s\u1ebd th\u1ef1c hi\u1ec7n k\u00e9m hi\u1ec7u qua khi s\u1ed1 chi\u1ec1u cao. V\u00ed d\u1ee5 nh\u01b0 Linear model, decision tree\n    \n* Gi\u1ea3m hi\u1ec7n t\u01b0\u1ee3ng overfit\n    - Model s\u1ebd kh\u00e1i qu\u00e1t h\u00f3a h\u01a1n \u0111\u1ed1i v\u1edbi d\u1eef li\u1ec7u m\u1edbi","33a6d743":"# 1. Feature selection l\u00e0 g\u00ec?\nL\u00e0 k\u0129 thu\u1eadt l\u1ef1a ch\u1ecdn m\u1ed9t t\u1eadp \u0111\u1eb7c tr\u01b0ng \u0111\u01b0\u1ee3c coi l\u00e0 c\u00f3 \u0111\u00f3ng g\u00f3p cho vi\u1ec7c d\u1ef1 \u0111o\u00e1n hay x\u00e2y d\u1ef1ng model. \n\nNg\u01b0\u1ee3c l\u1ea1i, ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a n\u00f3 l\u00e0 k\u0129 thu\u1eadt lo\u1ea1i b\u1ecf c\u00e1c \u0111\u1eb7c tr\u01b0ng d\u01b0 th\u1eeba, \u00edt \u0111\u00f3ng g\u00f3p cho d\u1ef1 \u0111o\u00e1n hay x\u00e2y d\u1ef1ng model. ","6f0ab579":"# 2. C\u00e1c ph\u01b0\u01a1ng ph\u00e1p Feature Selection\nTrong ph\u1ea7n n\u00e0y t\u00f4i s\u1ebd t\u00ecm hi\u1ec3u 2 ph\u01b0\u01a1ng ph\u00e1p ch\u00ednh \u0111\u00f3 l\u00e0:\n* 2.1 Unsupervised\n\n* 2.2 Supervised\n    * Filter\n    * Wrapper","25918fdc":"Tr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u th\u00ec t\u00f4i xin b\u1ecf qua ph\u1ea7n EDA (Exploratory Data Analysis), ph\u1ea7n m\u00e0 lu\u00f4n c\u00f3 trong m\u1ed7i d\u1ef1 \u00e1n Data science, ch\u1eafc ch\u1eafn n\u00f3 s\u1ebd trong chu\u1ed7i b\u00e0i **become data scientist** c\u1ee7a t\u00f4i\n\nTuy b\u1ecf ph\u1ea7n EDA nh\u01b0ng s\u1ebd t\u1ed1t h\u01a1n khi ch\u00fang ta c\u00f3 m\u1ed9t c\u00e1i nh\u00ecn t\u1ed5ng th\u1ec3 v\u1ec1 data","b392d952":"Nh\u01b0 ch\u00fang ta th\u1ea5y c\u00f3 kh\u00e1 nhi\u1ec1u label l\u00e0 1. Hi\u1ec7n t\u01b0\u1ee3ng n\u00e0y g\u1ecdi l\u00e0 data imbalance, t\u1ee9c l\u00e0 m\u1ea5t c\u00e2n b\u1eb1ng gi\u1eefa c\u00e1c label. Vi\u1ec7c ph\u00e1t hi\u1ec7n v\u00e0 x\u1eed l\u00fd imbalance \u0111\u00f3ng vai trong quan tr\u1ecdng trong vi\u1ec7c x\u00e2y d\u1ef1ng model, v\u1eady n\u00ean t\u00f4i c\u0169ng s\u1ebd c\u00f3 ri\u00eang 1 b\u00e0i vi\u1ebft \u0111\u1ec3 t\u00ecm hi\u1ec3u v\u1ec1 ch\u1ee7 \u0111\u1ec1 n\u00e0y.","605a3009":"Code d\u01b0\u1edbi \u0111\u00e2y t\u00f4i s\u1ebd s\u1eed d\u1ee5ng 2 \u0111\u1ed9 \u0111o spearman v\u00e0 pearson \u0111\u1ec3 t\u00ednh \u0111\u1ed9 \u0111o li\u00ean quan gi\u1eefa 2 bi\u1ebfn l\u00e0 numeric","7c20106f":"# 2.2 Supervised\nNh\u01b0 c\u00e1i t\u00ean \u0111\u00e3 cho ch\u00fang ta th\u1ea5y vi\u1ec7c s\u1eed d\u1ee5ng label trong vi\u1ec7c l\u1ef1a ch\u1ecdn c\u00e1c feature. Ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u 2 ph\u01b0\u01a1ng ph\u00e1p: filter v\u00e0 wrapper\n","652c4ca1":"\u0110\u1ec3 ti\u1ec7n cho qu\u00e1 tr\u00ecnh \u0111\u00e1nh gi\u00e1 model t\u00f4i s\u1ebd chia d\u1eef li\u1ec7u th\u00e0nh t\u1eadp train v\u00e0 test","8b4ab786":"B\u00e0i \u0111\u1ea7u ti\u00ean trong chu\u1ed7i b\u00e0i **Become Data scientist** \u0111\u00f3 l\u00e0 **Feature selection**, t\u1ee9c l\u00e0 l\u1ef1a ch\u1ecdn c\u00e1c \u0111\u1eb7c tr\u01b0ng.\n\nTrong ch\u1ee7 \u0111\u1ec1 n\u00e0y t\u00f4i s\u1ebd t\u00ecm hi\u1ec3u c\u00e1c v\u1ea5n \u0111\u1ec1 ch\u00ednh sau:\n* Feature selection l\u00e0 g\u00ec. T\u1ea1i sao ph\u1ea3i s\u1eed d\u1ee5ng Feature selection?\n* C\u00e1c ph\u01b0\u01a1ng ph\u00e1p \u00e1p d\u1ee5ng cho Feature selection c\u00f9ng v\u1edbi code example.","f7b1ee29":"Theo nh\u01b0 k\u1ebft qu\u1ea3 \u1edf tr\u00ean th\u00ec kh\u00f4ng c\u00f3 hi\u1ec7n t\u01b0\u1ee3ng Missing value.\n\nNote: Missing value c\u0169ng l\u00e0 m\u1ed9t v\u1ea5n \u0111\u1ec1 ch\u00fang ta c\u1ea7n nghi\u00ean c\u1ee9u tr\u01b0\u1edbc khi modeling. Do b\u00e0i n\u00e0y kh\u00f4ng b\u1ecb Missing value n\u00ean t\u00f4i s\u1ebd vi\u1ebft ri\u00eang v\u1ec1 ch\u1ee7 \u0111\u1ec1 n\u00e0y","b72902ee":"**2.1 Unsupervised**\n\nPh\u01b0\u01a1ng ph\u00e1p n\u00e0y ch\u00fang ta s\u1ebd kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u1ebfn bi\u1ebfn target. S\u1ebd s\u1eed d\u1ee5ng c\u00e1c \u0111\u1ed9 \u0111o trong th\u1ed1ng k\u00ea nh\u01b0 spearman, pearson \u0111\u1ec3 lo\u1ea1i b\u1ecf c\u00e1c feature d\u01b0 th\u1eeba. V\u00ed d\u1ee5 khi 2 feature c\u00f3 \u0111\u1ed9 t\u01b0\u01a1ng quan cao th\u00ec ch\u00fang ta s\u1ebd ch\u1ec9 gi\u1eef l\u1ea1i 1 trong 2 feature \u0111\u00f3.","769cb2d4":"Ki\u1ec3m tra xem d\u1eef li\u1ec7u c\u00f3 ch\u1ee9a Missing value hay kh\u00f4ng","733b9eef":"Ch\u00fang ta c\u00f3 10127 example v\u00e0 c\u00f3 19 feature (kh\u00f4ng \u0111\u1ebfm CLIENTNUM v\u00e0 Attrition_Flag)","db414eca":"Ph\u1ea7n n\u00e0y t\u00f4i s\u1ebd s\u1eed d\u1ee5ng Data t\u1eeb [Credit Card customers\n](https:\/\/www.kaggle.com\/sakshigoyal7\/credit-card-customers). \nB\u00e0i to\u00e1n li\u00ean quan \u0111\u1ebfn l\u0129nh v\u1ef1c ng\u00e2n h\u00e0ng, c\u1ee5 th\u1ec3 ch\u00fang ta c\u1ea7n d\u1ef1 \u0111o\u00e1n kh\u00e1ch h\u00e0ng s\u1ebd r\u1eddi b\u1ecf c\u00e1c d\u1ecbch v\u1ee5 credit card hay kh\u00f4ng, bi\u1ebfn d\u1ef1 \u0111o\u00e1n l\u00e0 **Attrition_Flag** v\u00e0 c\u00e1c bi\u1ebfn feature nh\u01b0: Age, Gender, Education .... \n\n\u0110\u00e2y l\u00e0 b\u00e0i to\u00e1n thu\u1ed9c v\u00e0o lo\u1ea1i classification\n","e4eee8e2":"C\u00f3 \u0111i\u1ec1u g\u00ec \u0111\u00f3 kh\u00f4ng \u1ed5n khi c\u00e1c feature \u1edf d\u1ea1ng category, \u0111\u00fang v\u1eady \u0111\u1ed1i v\u1edbi c\u00e1c feature l\u00e0 category th\u00ec c\u00e1c thu\u1eadt to\u00e1n sao c\u00f3 th\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c. V\u1eady tr\u01b0\u1edbc khi \u00e1p d\u1ee5ng b\u1ea5t k\u00ec thu\u1eadt to\u00e1n machine learning n\u00e0o ch\u00fang ta c\u1ea7n bi\u1ebfn \u0111\u1ed5i n\u00f3 v\u1ec1 d\u1ea1ng s\u1ed1, c\u00e1i m\u00e0 t\u00f4i \u0111ang nh\u1eafc \u0111\u1ebfn \u0111\u00f3 l\u00e0 Encoding category. \u0110\u1ed1i v\u1edbi m\u1ed7i lo\u1ea1i category s\u1ebd c\u00f3 ph\u01b0\u01a1ng ph\u00e1p encode kh\u00e1c nhau, \u0111\u00e2y l\u00e0 m\u1ed9t ch\u1ee7 \u0111\u1ec1 m\u1ea5t kh\u00e1 nhi\u1ec1u th\u1eddi gian n\u00ean t\u00f4i xin vi\u1ebft ri\u00eang. V\u1edbi b\u00e0i n\u00e0y t\u00f4i s\u1ebd ch\u1ec9 s\u1eed d\u1ee5ng **LabelEncoder** cho t\u1ea5t c\u1ea3 lo\u1ea1i category","63252cf4":"* **Gi\u1ea3i th\u00edch code**\n\n    \\# 1 \u0111\u1ec3 s\u1eed l\u1ef1a ch\u1ecdn k feature t\u1ed1t nh\u1ea5t ch\u00fang ta s\u1eed dung [SelectKBest](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.feature_selection.SelectKBest.html)\n\n    \\# 2. chi2: t\u00ednh Chi-Square gi\u1eefa m\u1ed7i feature v\u00e0 bi\u1ebfn target\n\n    \\# 3. f_classif t\u00ednh ANOVA gi\u1eefa m\u1ed7i feature v\u00e0 bi\u1ebfn target\n\n    \\# 4. mutual_info_classif l\u00e0 Mutual Information \n\n    \\# 5. LogisticRegression s\u1ebd s\u1eed d\u1ee5ng l\u00e0m model\n\n","c8bfdd38":"# 2.2.1. Filter\nFilter l\u00e0 ph\u01b0\u01a1ng ph\u00e1p s\u1ebd gi\u00fap ch\u00fang ta lo\u1ea1i b\u1ecf \u0111i c\u00e1c feature k\u00e9m quan tr\u1ecdng v\u00e0 ch\u1ec9 gi\u1eef l\u1ea1i t\u1eadp feature quan tr\u1ecdng. V\u1eady l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 bi\u1ebft feature n\u00e0o quan trong v\u00e0 k\u00e9m quan tr\u1ecdng. N\u00f3 s\u1ebd \u0111\u00e1nh gi\u00e1 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng c\u1ee7a feature d\u1ef1a v\u00e0o c\u00e1c ki\u1ec3m tra th\u1ed1ng k\u1ebf (statistic test) nh\u01b0 Chi-Square, ANOVA ..., c\u1ee5 th\u1ec3 c\u00e1c ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea s\u1ebd scoring m\u1ed7i feature b\u1eb1ng c\u00e1ch \u0111\u00e1nh gi\u00e1 m\u1ee9c \u0111\u1ed9 li\u00ean quan v\u1edbi bi\u1ebfn target. \n\nTrong tr\u01b0\u1eddng h\u1ee3p n\u00e0y do b\u00e0i to\u00e1n l\u00e0 classification n\u00ean t\u00f4i s\u1ebd s\u1eed d\u1ee5ng Chi-Square v\u00e0 ANOVA v\u00e0 Mutual Information. Th\u1ef1c s\u1ef1 trong th\u1eddi \u0111i\u1ec3m vi\u1ebft ch\u1ee7 \u0111\u1ec1 n\u00e0y t\u00f4i c\u0169ng ch\u01b0a th\u1eadt s\u1ef1 hi\u1ec3u s\u00e2u s\u1eafc v\u1ec1 ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea nh\u01b0 Chi-Square hay ANOVA n\u00ean s\u1ebd t\u00ecm hi\u1ec3u v\u00e0 tr\u00ecnh b\u00e0y sau.\n\n**Coding example**","93582ca3":"# Data\n\nTr\u01b0\u1edbc khi t\u00ecm hi\u1ec3u c\u00e1c ph\u01b0\u01a1ng ph\u00e1p Feature Selection ch\u00fang ta s\u1ebd import data \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho coding example trong m\u1ed7i ph\u01b0\u01a1ng ph\u00e1p Feature selection","07d6edaf":"**Flow n\u00f3 s\u1ebd nh\u01b0 sau:**\n\nT\u1eadp feature ban \u0111\u1ea7u ---Feature Selection--> T\u1eadp feature m\u1edbi ---Modeling--->\n\nBan \u0111\u1ea7u t\u1eeb m\u1ed9t t\u1eadp c\u00e1c feature sau khi \u00e1p d\u1ee5ng Feature selection ch\u00fang ta s\u1ebd c\u00f3 m\u1ed9t t\u1eadp c\u00e1c feature m\u1edbi, trong \u0111\u00f3 t\u1eadp feature n\u00e0y s\u1ebd nh\u1ecf h\u01a1n t\u1eadp feature ban \u0111\u1ea7u. \u0110\u1ed1i v\u1edbi t\u1eadp feature n\u00e0y ch\u00fang s\u1ebd x\u00e2y d\u1ef1ng v\u00e0 th\u1eed nghi\u1ec7m c\u00e1c m\u00f4 h\u00ecnh h\u1ecdc m\u00e1y","56970372":"Quan s\u00e1t \u0111\u1ed3 th\u1ecb headmap \u1edf tr\u00ean ch\u00fang ta c\u00f3 th\u1ec3 th\u1ea5y c\u00e1c c\u1eb7p feature sau c\u00f3 \u0111\u1ed9 t\u01b0\u01a1ng quan kh\u00e1 cao:\n* **Avg_Open_To_Buy** v\u00e0 **Credit_Limit**, pearson=1\n* **Customers_Age** v\u00e0 **Months_on_book**, pearson=0.79\n\nV\u1edbi m\u1ed7i c\u1eb7p ch\u00fang ta s\u1ebd ch\u1ec9 gi\u1eefa l\u1ea1i m\u1ed9t trong hai. T\u00f4i s\u1ebd b\u1ecf \u0111i **Avg_Open_To_Buy**, **Months_on_book**"}}