{"cell_type":{"9790ba1d":"code","e9853ccd":"code","00e0656f":"code","e8c46a31":"code","46adc71b":"code","9bdc03ef":"code","a004efd3":"code","1d6180a5":"code","e8b4521c":"code","b2319df9":"code","31483469":"code","ac767242":"code","a305abe9":"code","25da552a":"code","6714aa96":"code","57660cb1":"code","47a336c2":"code","e7d8c74e":"code","d74af72c":"code","3bf94e60":"code","f91ea3dd":"code","d83e551a":"code","63254f3c":"code","f5297a89":"code","4861906d":"code","8fc07c7a":"code","43aa633f":"code","a05b1b88":"code","00cc88fb":"code","2dd924cc":"code","e31c91b9":"code","9552aa1e":"code","a961b11a":"code","e0f80d2a":"code","b2ae9cc2":"code","3aaff1ff":"code","43792aed":"code","9ad2dd1a":"code","c2510684":"code","60e3ed1f":"code","8d47bc9a":"code","ff152426":"code","b82151fa":"code","6387d27b":"code","62076216":"code","07984afb":"code","5f5d5d1d":"code","12278f1d":"markdown","fac11a24":"markdown","bc7cce71":"markdown","82f20a97":"markdown","cf5d8456":"markdown","4a3d6de3":"markdown","455195b8":"markdown","3b906e06":"markdown","437aa60f":"markdown","0c788f5a":"markdown","aff7f5a6":"markdown","e982e841":"markdown","18823021":"markdown","ac73ea23":"markdown","67eadcb6":"markdown","e981b499":"markdown","5a05daec":"markdown","1ba28de9":"markdown","fb7fbe65":"markdown","ff061f88":"markdown","5a37cf66":"markdown","2ea9db1f":"markdown","3a2534cb":"markdown","061faa76":"markdown","71bac461":"markdown","488c00a3":"markdown","82facafb":"markdown","3b804cd7":"markdown","201e188d":"markdown","429d1673":"markdown","27a04bc8":"markdown","2a95c71d":"markdown","d4dc47f6":"markdown","df907d4e":"markdown","c9f34ec4":"markdown","9765b6f0":"markdown","f315a29b":"markdown","f3716d10":"markdown","84bb7f3e":"markdown"},"source":{"9790ba1d":"import pandas as pd","e9853ccd":"path_original=\"\/kaggle\/input\/videogamesales\/vgsales.csv\" ","00e0656f":"df=pd.read_csv(path_original, header = None)","e8c46a31":"df.head()","46adc71b":"df.info()","9bdc03ef":"df.columns = df.iloc[0,]\ndf.drop([0],axis=0,inplace=True)\ndf.reset_index(inplace=True, drop=True)\ndf","a004efd3":"df.head()","1d6180a5":"df.describe(include=\"all\")","e8b4521c":"missing_val=df.isnull()\nmissing_val.value_counts()","b2319df9":"df.dropna(subset=['Year'], axis=0, inplace = True)  #Deleting rows where 'Year' data is null.","31483469":"df.dropna(subset=['Publisher'], axis=0, inplace=True) #Deleting rows where 'Publisher' is null.","ac767242":"df.reset_index(drop=True, inplace=True)","a305abe9":"df.describe()","25da552a":"df[[\"Rank\"]]= df[[\"Rank\"]].astype(\"int\")\ndf[[\"Year\"]]= df[[\"Year\"]].astype(\"int\")\ndf[[\"NA_Sales\"]]= df[[\"NA_Sales\"]].astype(\"float\")\ndf[[\"EU_Sales\"]]= df[[\"EU_Sales\"]].astype(\"float\")\ndf[[\"JP_Sales\"]]= df[[\"JP_Sales\"]].astype(\"float\")\ndf[[\"Other_Sales\"]]= df[[\"Other_Sales\"]].astype(\"float\")\ndf[[\"Global_Sales\"]]= df[[\"Global_Sales\"]].astype(\"float\")","6714aa96":"df.dtypes","57660cb1":"df.describe(include=\"all\")","47a336c2":"df['Genre'].unique()","e7d8c74e":"df['Genre'].value_counts().to_frame()","d74af72c":"df.head()","3bf94e60":"df.describe(include='all')","f91ea3dd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n#import seaborn as sns\nimport matplotlib as mpl\n\nmpl.style.use('ggplot')  # optional: for ggplot-like style","d83e551a":"df_grp_genre=df[[\"Genre\",\"Global_Sales\"]]\ngrp_genre=df_grp_genre.groupby(\"Genre\", axis=0, as_index=True)","63254f3c":"grp_genre_total=grp_genre.sum()\ngrp_genre_total.sort_values(by='Global_Sales',inplace=True, ascending=False)\ngrp_genre_total","f5297a89":"#Lets create a pie plot of the same sub-dataframe. \n\ngrp_genre_total['Global_Sales'].plot( kind='pie',\n                                    figsize=(14,8),\n                                    autopct = '%1.1f%%', #label format\n                                    startangle=90, #the start angle of first item , \"Africa\"\n                                    shadow = True,\n                                    labels=None,\n                                    pctdistance=1.12)\n\nplt.title('Total Game Sales by Genre during last 40 years',y=1.12)\nplt.axis('equal')\nplt.legend(labels=grp_genre_total.index, loc='upper left')","4861906d":"df_grp_years=df[[\"Year\",\"Global_Sales\"]]\ngrp_years_total = df_grp_years.groupby(\"Year\", axis=0, as_index=True).sum()\ngrp_years_total.sort_values(by='Year', inplace=True)\ngrp_years_total","8fc07c7a":"grp_years_total.drop(axis=0,index=[2017,2020], inplace=True)","43aa633f":"grp_years_total","a05b1b88":"grp_years_total.plot(kind='area',\n                    figsize=(14,8),\n                    alpha=0.4)","00cc88fb":"df_2008_filter=df['Year']==2008\ndf_2009_filter=df['Year']==2009\ndf_2008_2009 = df[df_2008_filter|df_2009_filter].sort_values(by='Global_Sales', ascending=False)\ndf_2008_2009.head()","2dd924cc":"genre_group = ['Action','Sports','Shooter','Role-Playing']\ndf_grp_years_genre_filter = df['Genre'].isin(genre_group)","e31c91b9":"df_grp_years_genre = df[df_grp_years_genre_filter]\ndf_grp_years_genre = df_grp_years_genre[['Year','Genre','Global_Sales']]","9552aa1e":"#df_grp_years_genre.sort_values(by='Year', inplace=True)","a961b11a":"df_grp_years_genre.describe()","e0f80d2a":"filter1=df_grp_years_genre['Genre']=='Sports'\nfilter2=df_grp_years_genre['Year']==1988\ndf_grp_years_genre['Global_Sales'][(filter1) & (filter2)].sum()  #Filter test","b2ae9cc2":"genre_group = ['Action','Sports','Shooter','Role-Playing']\nyears_serie=np.arange(1980,2018,1)\ngenre_group","3aaff1ff":"#Here I create a new dataframe, having genre names as columns. This is for plotting purposes. Remember our original dataset dont have seperate columns for genre. \ndfx = pd.DataFrame({'Year': years_serie})\nfor genre in genre_group:\n    dfx[genre]=0\ndfx.tail()","43792aed":"#Assigning Year column as index column.\ndfx.index=dfx['Year']\ndfx.drop('Year', axis=1,inplace=True)","9ad2dd1a":"#Here i fill my new dataframe's values from previous dataset.\nfor x in years_serie:\n    for genre in genre_group:\n        filter1=df_grp_years_genre['Genre']==genre\n        filter2=df_grp_years_genre['Year']==x\n        total_val=df_grp_years_genre['Global_Sales'][(filter1) & (filter2)].sum()\n        dfx.loc[x,genre] = total_val\ndfx.head()","c2510684":"dfx.plot(kind='area',\n             stacked=False,\n             alpha=0.4,\n             figsize=(20, 10),\n            title='Console Game Global Sales by Genre') ","60e3ed1f":"df_grp_console_genre = df[['Platform','Genre','Global_Sales']]\ndf_grp_console_genre_total = df_grp_console_genre.groupby(['Platform','Genre'], as_index = False).sum()\ngrp_pivot = df_grp_console_genre_total.pivot(index='Platform', columns='Genre')\ngrp_pivot.fillna(0, inplace=True) #fills not available values with 0\ngrp_pivot.head()","8d47bc9a":"fig, ax = plt.subplots()\nim = ax.pcolor(grp_pivot, cmap='RdBu')\nfig.set_size_inches(15,15)\n#label names\n\nrow_labels = grp_pivot.columns.levels[1]\ncol_labels = grp_pivot.index\n\n#move ticks and labels to the center\nax.set_xticks(np.arange(grp_pivot.shape[1]) + 0.5, minor=False)\nax.set_yticks(np.arange(grp_pivot.shape[0]) + 0.5, minor=False)\n\n#insert labels\nax.set_xticklabels(row_labels, minor=False)\nax.set_yticklabels(col_labels, minor=False)\nax.set_title(\"Total numer of game sales between 1980-2017, (M USD)\")\n\n# Loop over data dimensions and create text annotations.\nfor i in range(len(grp_pivot.index)):\n    for j in range(len(grp_pivot.columns)):\n        text = ax.text(j, i, int(grp_pivot.iloc[i,j]),\n                        va=\"bottom\",\n                        ha=\"left\",\n                        color=\"white\",\n                        size=15)\n\n#rotate label if too long\nplt.xticks(rotation=90)\n\nfig.colorbar(im)\nplt.show()","ff152426":"ps_platform_group = ['PS','PS2','PS3','PS4','PSP','PSV']\nyears_serie=np.arange(1980,2018,1)\n\ndf_sony = pd.DataFrame({'Year': years_serie})\nfor platform in ps_platform_group:\n    df_sony[platform]=0\ndf_sony.set_index('Year', inplace=True)\ndf_sony.tail() #Sony started PS legend in 1995. Thats why we may not see the sales figures in df_sony.head()","b82151fa":"#Lets fill in Global_Sales numbers in our dataframe\nfor x in years_serie:\n    for platform in ps_platform_group:\n        filter1=df['Platform']==platform\n        filter2=df['Year']==x\n        total_val=df['Global_Sales'][(filter1) & (filter2)].sum()\n        df_sony.loc[x,platform] = total_val\ndf_sony.tail() #you can only see zeros if you look at the head of the dataframe. Because first Sony PS was released in 1995.","6387d27b":"df_sony.plot(kind='area',\n             stacked=False,\n             alpha=0.8,\n             figsize=(20, 10),\n            title=\"Global Sales Figures of Sony Game Consoles\") ","62076216":"df_pg=df[['Platform','NA_Sales','EU_Sales','JP_Sales','Global_Sales']].groupby('Platform').sum() #pg stands for platform, geography\ndf_pg.sort_values('Global_Sales', ascending=False, inplace=True)\ndf_pg.head()","07984afb":"df_gg=df[['Genre','NA_Sales','EU_Sales','JP_Sales','Global_Sales']].groupby('Genre').sum() #gg stands for genre, geography\ndf_gg.sort_values('Global_Sales', ascending=False, inplace=True)\ndf_gg.head()","5f5d5d1d":"fig = plt.figure() # create figure\n\nax0 = fig.add_subplot(1, 2, 1) # add subplot 1 (1 row, 2 columns, first plot)\nax1 = fig.add_subplot(1, 2, 2) # add subplot 2 (1 row, 2 columns, second plot). See tip below**\n\n# Subplot 1: Box plot\ndf_pg.head().plot(kind='bar',  figsize=(20, 6), ax=ax0) # add to subplot 1\nax0.set_title('Total Number of Game Sales by Platform & Geography')\nax0.set_xlabel('Console')\nax0.set_ylabel('M USD')\n\n# Subplot 2: Line plot\ndf_gg.head().plot(kind='bar', figsize=(20, 6), ax=ax1) # add to subplot 2\nax1.set_title ('Total Number of Game Sales by Genre & Geography')\nax1.set_xlabel('Genre')\nax1.set_ylabel('M USD')\n\nplt.show()","12278f1d":"Now lets create a heatmap of platform vs. genre with the values of total global sales numbers. For this purpose we will create another dataframe (_grp_pivot_)","fac11a24":"For the sake of having a easier view, we will use first 5 rows, by global sales numbers.","bc7cce71":"Lets have a quick look at the first 5 rows of the data by calling **_.head()_** function","82f20a97":"Lets create an area plot of Global Sales by year. ","cf5d8456":"**Comment**: We can see that the increase of sales of those top genres are parallel to each other. Action and Sports games are leading the market followed by shooter and role-playing games. We can also see that the role-playing games have more consistent fans because the sales numbers (_starting from 2000_) dont change dramatically. It has a stable increase rate.; Unlike the role-playing games, sports games may seem to be more of \"short term trend\" which picked in 2005 and 2010 but dropped almost 65% (_from 140M to 40M_) from 2010 to 2012.\n\nAnother interesting point is the start of the rally in 1995. This clearly indicates the first release of Sony Playstation (_end 1994_) and Nintendo 64 (_mid 1996_). Video game market started to change in those years and never was the same. See the radical change of the industry, increasing the total market value from 80M to 680M. (_figure 1_)\n\n**Option**: In addition to this area map, similar graph can be plotted for platforms' performance over the year. We will instead, take a closer look at PSP (end date : December 2014) and PSV (end date : April 27, 2021) and we will try to understand the supporting numbers behind the desicion of ending their lifetime.","4a3d6de3":"**Comment**:So, our visual makes it obvious why PSP and its heir PSV didnt last. Compared to success of TV consoles of Sony, its handheld consoles could only hit 25% as a peak number and even less in terms of total sales by years. My opinion is that these numbers and data analysises such this one should have had given to Sony (and to other competitors) an indication weather or not they should push handheld console market, especially after 2015","455195b8":"It can be a good practice, saving your shaped dataframe to another url after wrangling complete.","3b906e06":"Now we corrected the datatypes and we can get more detailed information about int of float columns. Please notice that we have numerical values like man, min, max","437aa60f":"Lets create a pie-chart to visualise.","0c788f5a":"Lets create an area plot to visually examine the sales of different genres by year.","aff7f5a6":"Normally **_.describe()_** function gives the max, min and mean values of the columns, together with some more numeric data. We cannot see those details before we change the datatypes of columns. We will do in coming sections. Lets save the dataframe to another csv file for keeping our work safe. ","e982e841":"## 2.Data Wrangling","18823021":"Lets reset the index","ac73ea23":"**Geographical Numbers**: In our last graph, we will define the geographical effects on sales of spesific genre and platform. We will create a joined graph. First lets create our dataframes. ","67eadcb6":"As we can see, our dataframe now have b\u0131th rows and columns indices. We will tidy up the dataframe a little bit, in coming sections. Now lets hae a look at the datatypes of the columns by calling **_.info()_** function","e981b499":"As we can see, all columns' datatype seem like **_object_** which is basically string. But we will change that because we will need some columns to be **_integer_** or **_float_** to be able tu run some graphs. We will come back to that later too. Lets first fix column names and reset row indices. ","5a05daec":"Lets change the dataypes as required. We need some of the columns like sales numbers to be float.","1ba28de9":"**Comment**: We can see from the pie chart that between 1980 and 2020, biggest sales figures belong to Action, Sports and Shooter games respectively. ","fb7fbe65":"Lets check the modified dataframe again. It will look better and more tidy.","ff061f88":"## 1.Data Understanding","5a37cf66":"Lets create a new dataframe, having genres as columns and global sales values as values by year.","2ea9db1f":"Lets create the heatmap.","3a2534cb":"After having a basic understanding of the dataset, lets start shaping the dataset by checking null values.","061faa76":"**Comment:** As you can se from the figure , Global sales of video games peaked in 2008 and 2009. Lets see which games were released in those years. ","71bac461":"'Year' and 'Publisher' columns have null values. We cant have the graphs that we want to have with empty 'Year' and 'Pubnlisher' info. We also cant calculate ant mean value or subsitute for such data. In addition to that, considering the small percentage of missing values, we will drop those rows. ","488c00a3":"**Comment on Consoles' Sales**: First thing to notice on th left plot is that North America region is the biggeest market for consoles, while Japan is the smallest. While XBOX 360 leading the North America market, Sony's PS2 and PS3 is dominant in Europe. Japan seems to have had more handheld console fans than TV consoles. \n\n**Comment on Genres' Sales**: It is interesting to notice that, on the right hand side, almost all genres' sales figures move in paralell. But there is a different story with role-playing games in Japan. While other regions have almost 50% sales from action games, it is almost 40% role-playing games.\n\n**Option**: We can also heatmaps for the similar analysis above.","82facafb":"## 3.Data Analysis","3b804cd7":"**Comment:Which platforms are better in certain genres?** Now we have a clearer picture of this question: While PS, Xbox360 and Wii are dominating the most selling genres like action, sports and shooter; DS seem to be performing average  in more genres like action, misc, platform, puzzle, role-playing ans simulation (_seems like a reasonable market strategy_). We can also see the underperforming (_or non existing_) platforms like 3DO,GG,NG,PCFX,WS etc. The **most** selling platform-genre combiantion is **PS3 & Action** with sales number of **304M USD**.","201e188d":"Lets have a quick look to genres before starting creating graphs. We will also have a look ad the first 5 rows with **_.head()_** function ","429d1673":"**Comment:** As you can see, Wii's dominancy and the combination of sports game with a classic game like \"Mario\" made the market peaked in those years.\n\nLets see more details of sales of Genres by time. For the ease of reading, we will only consider first four categories which are: Action, Sports, Shooting and Role-Playing.","27a04bc8":"_Please note that this study's purpose is solely practice Pandas and Numpy libraries and the it only represents my own ideas as a video game enthusiastic. It does not include any kind of actual insight information from any of the companies mentioned above. Comments are fully sponteneus","2a95c71d":"Then we define the path of the csv data file, create a dataframe **(_df_)** excluding the headers of the data file. ","d4dc47f6":"Lets check the new datatypes and use **_.describe()_** function to access additional information of numerical columns.","df907d4e":"Lets use another dataftrame tool **_.describe()_** to have more details. ","c9f34ec4":"Notice that sales figures in 2017 and 2020 is a little odd. Having a little domain knowledge or with a little search, we can realize that those information might probably be wrong. So lets drop them too. ","9765b6f0":"Now I would like to go into more details of Sony game consoles. As a handheld console fan, I always wandered why Sony' handheld consoles come to a deadline. To find some clues, we will create a new dataframe and draw another area plot.","f315a29b":"First lets start with the very basic analysis(graph) to see which genres are in demand in general. For this purpose, we will generate another dataframe, calculating total global sales numbers grouped by genre.","f3716d10":"Next, we would like to have a look at total global sales figures of all genres to have an idea of growth of the video games market. Lets create a sub-dataframe of Global Game Sales by year and group it by year.","84bb7f3e":"Lets start by importing Pandas Library"}}