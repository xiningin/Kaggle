{"cell_type":{"9e5d81e8":"code","64b0844e":"code","fb9a9372":"code","3563fa4d":"code","6f6f8ba7":"code","1009c9eb":"code","5a733f9a":"code","65f7f2b1":"code","a44bacde":"code","d68abce3":"code","47912e97":"code","98c502d2":"code","5fbccb91":"code","5dcb0bff":"code","25346a38":"code","e553d4be":"code","3f7eff8c":"code","1029e28d":"code","d250c494":"code","4f5d8e86":"code","81572af5":"code","c170dbc0":"code","d18a322c":"code","e58e8117":"code","8f62f79f":"code","ee4eb1d4":"code","ccaf85fc":"code","c21a84e7":"code","6f5bf2aa":"code","85926439":"code","a4ad86ee":"code","28eb47ed":"code","10b0f7e8":"code","7d851a92":"markdown","988a11a1":"markdown","372d13fd":"markdown","2d4988d0":"markdown"},"source":{"9e5d81e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","64b0844e":"#importing Libraries\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","fb9a9372":"from sklearn.linear_model import LogisticRegression\n\nfrom sklearn.metrics import classification_report\n\nfrom sklearn.model_selection import train_test_split","3563fa4d":"pwd\n","6f6f8ba7":"#reading the file \n\ndata = pd.read_csv('..\/input\/train.csv')","1009c9eb":"data.head()","5a733f9a":"#number of missing values\n\ndata.isnull().sum()","65f7f2b1":"#percentage of missing values\n\ndata.isnull().mean()","a44bacde":"#Let us check if the data missing in cabin and Age is at random \ndata['cabin_null'] = np.where(data.Cabin.isnull(), 1, 0)\ndata['age_null'] = np.where(data.Age.isnull(), 1, 0)","d68abce3":"data.groupby(['Survived'])['cabin_null'].mean()\n","47912e97":"data.groupby(['Survived'])['age_null'].mean()","98c502d2":"#lets replace missing age by median, now that we have captured the missingess of Age in Age_null\n\ndata['Age'].fillna(data.Age.median(), inplace=True)","5fbccb91":"#lets check the two null values in Embarked column\n\ndata[data.Embarked.isnull()]","5dcb0bff":"data['Embarked'].dropna(inplace= True)","25346a38":"#Next let us check missing values for Cabin\n\ndata.Cabin.isnull().mean()","e553d4be":"# As we can see that 77% of data is missing in cabin variable so we can think of removing this column but the remaining columns\n# might help us in predicting\n# we will try random sampling imputation and also add a column to show missingness of the data\n\ndata['Cabin'+'_NA'] = np.where(data['Cabin'].isnull(), 1, 0)","3f7eff8c":"data.head()","1029e28d":"# selecting random sample for filling the na values\nrandom_sample = data['Cabin'].dropna().sample(data['Cabin'].isnull().sum(), random_state=0,replace=True)\n\n# pandas needs to have the same index in order to merge datasets\nrandom_sample.index = data[data['Cabin'].isnull()].index\n\n# map the random sample to fill in the null values\n\ndata.loc[data['Cabin'].isnull(), 'Cabin'] = random_sample","d250c494":"\ndata.Cabin.unique()\n\n#also we can see that there are alot of variables in this column, we can only take the initials letter of the variable to reduce\n#the column length","4f5d8e86":"# let's capture the first letter\n\ndata['Cabin'] = data['Cabin'].astype(str).str[0]\n\ndata.Cabin.unique()\n\n# we can see that the variables are reduced to only 8 variables.","81572af5":"data.Name.head(10)\n\n# we can see that the name column consist of title variables which can be utilized in our predictions as well","c170dbc0":"# Extract Title from Name, store in column and plot barplot\n\nimport re\n\ndata['Title'] = data.Name.apply(lambda x: re.search(' ([A-Z][a-z]+)\\.', x).group(1))\n\nsns.countplot(x='Title', data=data);\nplt.xticks(rotation=45);","d18a322c":"#You can see that there are several titles in the above plot and there are many that don't occur so often. So, it makes sense to put them in fewer buckets.\n#For example, you probably want to replace 'Mlle' and 'Ms' with 'Miss' and 'Mme' by 'Mrs', as these are French titles and ideally, you want all your data to be in one language. Next, you also take a bunch of titles that you can't immediately categorize and put them in a bucket called 'Rare'.\n\ndata['Title'] = data['Title'].replace({'Mlle':'Miss', 'Mme':'Mrs', 'Ms':'Miss'})\ndata['Title'] = data['Title'].replace(['Don', 'Dona', 'Rev', 'Dr',\n                                            'Major', 'Lady', 'Sir', 'Col', 'Capt', 'Countess', 'Jonkheer'],'Rare')\nsns.countplot(x='Title', data=data);\nplt.xticks(rotation=45);","e58e8117":"# we have Title, Sex, and Cabin as Columns which have few variables and can be used in prediction \n#lets enumerate them so that we can use the for modelling \n\nfor col in ['Sex', 'Cabin', 'Title','Embarked']:\n    labels_dict = {k:i for i, k in enumerate(data[col].unique(), 0)}\n    data[col]=data[col].map(labels_dict)","8f62f79f":"data.head()","ee4eb1d4":"# lets drop the unwanted columns\ndata.drop(['PassengerId','Name','Ticket','Cabin_NA','SibSp','Parch',],axis=1,inplace=True)","ccaf85fc":"# let's now calculate the range to have an idea of the magnitude of the data set\n\nfor col in ['Pclass', 'Age', 'Fare']:\n    print(col, '_range: ', data[col].max()-data[col].min())","c21a84e7":"X_train, X_test, y_train, y_test = train_test_split(data.drop('Survived',axis=1), \n                                                    data['Survived'], test_size=0.30, \n                                                    random_state=101)","6f5bf2aa":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","85926439":"X_train_scaled","a4ad86ee":"X_test_scaled","28eb47ed":"logmodel = LogisticRegression()\nlogmodel.fit(X_train_scaled,y_train)","10b0f7e8":"predictions = logmodel.predict(X_test_scaled)\nprint(classification_report(y_test,predictions))","7d851a92":" In both the cases we can see that data is missing for higher number for cases where the passenger did not survive, this shows the data is not missing at random","988a11a1":"Now that we have conducted feature engineering and feature scaling we can use various algorithms to test out data set and get the results\n","372d13fd":"We can see that both the cases passenger have survived so it was possible that this information could have been taken, hence we can drop this rows as they are not required.","2d4988d0":"The magnitude of the values of the 3 different variables and their ranges of values are quite different. Therefore, feature scaling could benefit the performance of several machine learning algorithms. To do that lets first split the data in train and test set"}}