{"cell_type":{"5a5fd939":"code","441adfbf":"code","06fbedd7":"code","ccb9a810":"code","0651c25f":"code","0c0c2cac":"code","1550b806":"code","db47afb5":"code","d87191d0":"code","adec5df2":"code","54ec879a":"code","2d10fa02":"code","51747c68":"code","3669e4be":"code","2ed01577":"code","bd6d3773":"code","36931581":"code","2ba43418":"code","d8c78e87":"code","ea828d9e":"code","7fba4b21":"code","b05b0be2":"code","29bf571f":"code","524cc0ed":"code","793fb7d5":"code","241f0050":"code","9ffeb438":"code","4e1c6c25":"code","55736bbf":"code","387f5a90":"code","60f3d5b6":"code","f7ebcaac":"markdown","f6d80c87":"markdown","8dbbde9a":"markdown","7308920e":"markdown","c5af1c4b":"markdown","515b3d38":"markdown","39e439c7":"markdown","14f30110":"markdown","db30e217":"markdown","35763c39":"markdown","81d5c2fe":"markdown","b46e9cd8":"markdown"},"source":{"5a5fd939":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","441adfbf":"# pd.set_option('display.max_rows',None)\ntrain_data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain_data.head()","06fbedd7":"train_data.describe()","ccb9a810":"train_data.info()","0651c25f":"import seaborn as sns\nimport matplotlib.pyplot as plt","0c0c2cac":"data = train_data.select_dtypes(exclude=['object'])\nt = data.iloc[:,1:10]\nt.head()\nsns.pairplot(t)","1550b806":"t =  data.iloc[:,20:30]\nt.head()\nsns.pairplot(t)\n# data.head()","db47afb5":"t =  data.iloc[:,30:38]\nt.head()\nsns.pairplot(t)\n# data.head()","d87191d0":"sns.histplot(train_data, x = \"SalePrice\", kde=True)","adec5df2":"#log transformation\ntransformed = train_data['SalePrice']\ntrain_data['SalePrice_transformed'] = np.log(transformed)\nsns.histplot(train_data,x='SalePrice_transformed',kde=True)\ntrain_data.head()","54ec879a":"sqrt_transformed = train_data['SalePrice']\ntrain_data['SalePrice_transformed_sqrt'] = np.sqrt(sqrt_transformed)\nsns.histplot(train_data,x='SalePrice_transformed_sqrt',kde=True)\ntrain_data.head()","2d10fa02":"check_null = train_data.isna().sum()\ncheck_null = check_null.reset_index()\ncheck_null","51747c68":"check_null.columns = ['Col_Name','count']","3669e4be":"check_null['%'] = check_null['count']*100\/len(train_data)\ncheck_null.loc[check_null[\"%\"]>80,:].reset_index(drop=True)","2ed01577":"#Drop the above columns since more than 80% values are NULL\ntrain_data.drop(['Alley','PoolQC','Fence','MiscFeature'], axis = 1,inplace = True)\ntrain_data.head()","bd6d3773":"obj_data = train_data.select_dtypes(include=['object'])\nobj_data.columns","36931581":"#nunique() tells us the unique values in the columns\nobj_data_counts = obj_data.nunique()\nobj_data_counts","2ba43418":"train_data.Neighborhood.unique()","d8c78e87":"train_data.Neighborhood.value_counts()","ea828d9e":"train_data.Exterior1st.value_counts()","7fba4b21":"train_data.Exterior2nd.value_counts()","b05b0be2":"lotshape_map = {'Reg':4,'IR1':3,'IR2':2,'IR3':1}\nland_contour = {'Low':4,'HLS':3,'Bnk':2,'Lvl':1}\nland_slope = {'Gtl':1,'Mod':2,'Sev':3}\ncondition1 = {'Artery':9,'Feedr':8,'Norm':7,'RRNn':6,'RRAn':5,'PosN':4,'PosA':3,'RRNe':2,'RRAe':1}\ncondition2 = {'Artery':9,'Feedr':8,'Norm':7,'RRNn':6,'RRAn':5,'PosN':4,'PosA':3,'RRNe':2,'RRAe':1}\n\n#bldgType = LabelEncoder\nexter_qual = {'Ex':4,'Gd':3,'TA':2,'Fa':1,'Po':0}\n\nexter_cond = {'Ex':4,'Gd':3,'TA':2,'Fa':1,'Po':0}\nbsmt_qual = {'Ex':5,'Gd':4,'TA':3,'Fa':2,'Po':1,np.nan:0}\nbsmt_cond = {'Ex':5,'Gd':4,'TA':3,'Fa':2,'Po':1,np.nan:0}\nbsmt_exposure = {'Gd':4,'Av':3,'Mn':2,'No':1,'NA':0}\nbsmt_finType1 = {'GLQ':6,'ALQ':5,'BLQ':4,'Rec':3,'LwQ':2,'Unf':1,np.nan:0}\n\nbsmt_finType2 = {'GLQ':6,'ALQ':5,'BLQ':4,'Rec':3,'LwQ':2,'Unf':1,np.nan:0}\n\nheating_QC = {'Ex':4,'Gd':3,'TA':2,'Fa':1,'Po':0 }\n\nelectrical  = {'Mix':0,'FuseP':1,'FuseF':2,'FuseA':3,'SBrkr':4}\nkitchen_qual = {'Ex':4,'Gd':3,'TA':2,'Fa':1,'Po':0 }\n\nfunctional = {'Typ':7,'Min1':6,'Min2':5,'Mod':4,'Maj1':3,'Maj2':2,'Sev':1,'Sal':0}\n\nfireplace_qu = {'Ex':5,'Gd':4,'TA':3,'Fa':2,'Po':1,np.nan:0}\n\ngarage_type =  {'2Types':6,'Attchd':5,'Basement':4,'BuiltIn':3,'CarPort':2,'Detchd':1,np.nan:0}\ngarage_qual = {'Ex':5,'Gd':4,'TA':3,'Fa':2,'Po':1,np.nan:0}\ngarage_cond = {'Ex':5,'Gd':4,'TA':3,'Fa':2,'Po':1,np.nan:0}\npaved = {'Y':3,'P':2,'N':1}","29bf571f":"# lotshape_map = {'Reg':4,'IR1':3,'IR2':2,'IR3':1}\n# land_contour = {'Low':4,'HLS':3,'Bnk':2,'Lvl':1}\n# train_data.LotShape = train_data.LotShape.map(lotshape_map)\n# train_data.LandContour = train_data.LandContour.map(land_contour)\n# train_data.head(60)\ntrain_data['BsmtCond'] = train_data['BsmtCond'].replace(bsmt_cond)\ntrain_data.LotShape = train_data.LotShape.replace(lotshape_map)\n\ntrain_data.LandContour = train_data.LandContour.replace(land_contour)\n\ntrain_data.LandSlope = train_data.LandSlope.replace(land_slope)\n\ntrain_data.Condition1 = train_data.Condition1.replace(condition1)\n\ntrain_data.Condition2 = train_data.Condition2.replace(condition2)\ntrain_data.ExterQual = train_data.ExterQual.replace(exter_qual)\n\ntrain_data.ExterCond = train_data.ExterCond.replace(exter_cond)\ntrain_data.BsmtQual = train_data.BsmtQual.replace(bsmt_qual)\n\ntrain_data.BsmtCond = train_data.BsmtCond.replace(bsmt_cond)\ntrain_data.BsmtExposure = train_data.BsmtExposure.replace(bsmt_exposure)\ntrain_data.BsmtFinType1 = train_data.BsmtFinType1.replace(bsmt_finType1)\ntrain_data.BsmtFinType2 = train_data.BsmtFinType2.replace(bsmt_finType2)\ntrain_data.HeatingQC = train_data.HeatingQC.replace(heating_QC)\ntrain_data.Electrical = train_data.Electrical.replace(electrical)\ntrain_data.KitchenQual = train_data.KitchenQual.replace(kitchen_qual)\ntrain_data.Functional = train_data.Functional.replace(functional)\ntrain_data.FireplaceQu = train_data.FireplaceQu.replace(fireplace_qu)\ntrain_data.GarageQual = train_data.GarageQual.replace(garage_qual)\ntrain_data.GarageCond = train_data.GarageCond.replace(garage_cond)\ntrain_data.PavedDrive = train_data.PavedDrive.replace(paved)\ntrain_data.head(30)","524cc0ed":"corr_matrix = train_data.corr()\nplt.figure(figsize=(20, 20))\nsns.heatmap(corr_matrix, annot=False,fmt = '.1f');","793fb7d5":"corr_matrix = train_data.iloc[:,20:50].corr()\nplt.figure(figsize=(20, 20))\nsns.heatmap(corr_matrix, annot=True,fmt = '.2f');","241f0050":"top_neighbors = train_data.Neighborhood.value_counts().sort_values(ascending=False).head(10).index\ntop_ext1 = train_data.Exterior1st.value_counts().sort_values(ascending=False).head(6).index\ntop_ext2 = train_data.Exterior2nd.value_counts().sort_values(ascending=False).head(6).index\ntop_neighbors\ntop_ext1\ntop_ext2","9ffeb438":"for n in top_neighbors:\n    train_data['neighborhood_'+ n] = np.where(train_data['Neighborhood']== n, 1, 0)\n\ntrain_data.head(10)","4e1c6c25":"corr_matrix = train_data.corr()\nplt.figure(figsize=(20, 20))\nsns.heatmap(corr_matrix, annot=False);","55736bbf":"corr_matrix = train_data.iloc[:,:40].corr()\nplt.figure(figsize=(10, 10))\nsns.heatmap(corr_matrix, annot=False);","387f5a90":"corr_matrix = train_data.iloc[:,35:60].corr()\nplt.figure(figsize=(10, 10))\nsns.heatmap(corr_matrix, annot=False);","60f3d5b6":"corr_matrix = train_data.iloc[:,55:76].corr()\nplt.figure(figsize=(10, 10))\nsns.heatmap(corr_matrix, annot=False);","f7ebcaac":"# Summary\n* Drop the 4 columns having more than 80% null values\n* The output is skewed so apply log tranformation and make it normally distributed.\n* Categorical variables are to be changed to numerical using encoding techniques- one hot & label\n* Columns having huge categories- choose the most frequent ones and encode only those\n* Heatmaps generated above show correlation between a few columns- drop the duplicate ones","f6d80c87":"**We can see from the above heatmaps that:**\n* GarageArea and GarageCars are highly correlated\n* TotalBsmtSF and FirstSF are highly correlated\n\nWe can drop one of the each columns above","8dbbde9a":"**Categorical data changed to numerical**\n\n","7308920e":"# Imputation\n**Checking NULL values**","c5af1c4b":"**If any of the variables are highly correlated then drop one of the columns**","515b3d38":"**HeatMap post label encoding**\n\n**Drop one of the column which is highly correlated to each other**","39e439c7":"# **Encoding**\n\nThe Encoding techniques below are decided by looking at the description file and understanding whether it is ordinal, nominal,etc.\n\ne.g) Taking a look at the description file for the column - BsmtCond\n\nBsmtCond: Evaluates the general condition of the basement\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical - slight dampness allowed\n       Fa\tFair - dampness or some cracking or settling\n       Po\tPoor - Severe cracking, settling, or wetness\n       NA\tNo Basement\n\nYou can label the Excellent = 5; Good = 4; Typical = 4; Fair = 3; Poor = 1; No Basement = 0\nSo, Label Encoding technique used for the column - BsmtCond\n\n* MSZoning          5 - One hot\n* Street            2 - One hot\n* LotShape          4 - Label\n* LandContour       4 - Label\n* Utilities         2 - One hot\n* LotConfig         5 - One hot\n* LandSlope         3 - Label\n* Neighborhood     25 - One hot\n* Condition1        9 - Label \n* Condition2        8 - Label\n* BldgType          5 - Label\n* HouseStyle        8 - Label\n* RoofStyle         6 - One hot\n* RoofMatl          8 - One hot\n* Exterior1st      15 - One hot\n* Exterior2nd      16 - One hot\n* MasVnrType        4 - One Hot\n* ExterQual         4 - Label\n* ExterCond         5 - Label\n* Foundation        6 - One hot\n* BsmtQual          4 - Label\n* BsmtCond          4 - Label\n* BsmtExposure      4 - Label\n* BsmtFinType1      6 - Label\n* BsmtFinType2      6 - Label\n* Heating           6 - One hot\n* HeatingQC         5 - Label\n* CentralAir        2 - One Hot\n* Electrical        5 - Label\n* KitchenQual       4 - Label\n* Functional        7 - Label\n* FireplaceQu       5 - Label\n* GarageType        6 - One hot\n* GarageFinish      3 - One Hot\n* GarageQual        5 - Label\n* GarageCond        5 - Label\n* PavedDrive        3 - Label\n* SaleType          9 - One Hot\n* SaleCondition     6 - One Hot","14f30110":"**The below plot shows that the output\/target variable is skewed. **","db30e217":"**Applying different transformation**","35763c39":"# **Correlation**","81d5c2fe":"**Checking categorical columns**","b46e9cd8":"**Selecting Top k frequent categories only for encoding**"}}