{"cell_type":{"1ccd860a":"code","c0827330":"code","26b56884":"code","d0087b4e":"code","3f1dcb6b":"code","73b2ad84":"code","2a37c97c":"code","34f16ce1":"code","84d59c55":"code","22c4827a":"code","f6ea8205":"code","2e7b9a0c":"code","f1c378fe":"code","c14c0a33":"code","bae6c1a2":"code","31108294":"code","cf770b4f":"code","fa3d7b24":"code","29579320":"code","9260d044":"code","6522d07f":"code","cb5012bf":"code","c74a613c":"code","345f0181":"code","80ce7abf":"code","acf58acd":"code","78ea7e2c":"code","75c955b8":"code","92f6aef6":"code","38874cb3":"code","2d983349":"code","8212fc5b":"code","0a10616a":"code","f9e59be0":"code","b4c6b84e":"code","7076bf19":"code","3bd0e5a0":"code","ea1ea4b6":"code","19e9f8c6":"code","de63ba0b":"code","bb3f9e27":"code","6f8511ae":"code","064e8861":"code","5c40cf38":"code","bd9b14e1":"code","0768f9df":"code","3183ddef":"code","8c3e5754":"code","9b60c5ce":"markdown","451f691c":"markdown","0ed9be2d":"markdown","be733ecb":"markdown","6bb405b4":"markdown","bfdab422":"markdown","f58b34fa":"markdown","e9532c34":"markdown","03432d8f":"markdown","a4aebda8":"markdown","f9d58820":"markdown"},"source":{"1ccd860a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n%matplotlib inline\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom subprocess import check_output\n# Any results you write to the current directory are saved as output.","c0827330":"df = pd.read_csv(r'..\/input\/suicide-rates-overview-1985-to-2016\/master.csv')","26b56884":"df.head()","d0087b4e":"df.info()","3f1dcb6b":"df.describe()","73b2ad84":"df.isnull().sum()","2a37c97c":"#The HDI for year variable has 19456 empty values. I'm going to drop it.","34f16ce1":"df = df.rename({df.columns[9] : 'GDP for year', df.columns[10] : 'GDP per Capita'}, axis=1).drop(['country-year','HDI for year'], axis=1)\ndf['GDP for year'] = df['GDP for year'].apply(lambda x:x.replace(',', '')).astype(np.int64)\ndf = df.query('year != 2016')","84d59c55":"ages = ['5-14 years', '15-24 years', '25-34 years', '35-54 years', '55-74 years', '75+ years']\ngenders = ['male', 'female']","22c4827a":"from bokeh.io import output_notebook, output_file, show\nfrom bokeh.plotting import figure\nfrom bokeh.layouts import row, column\nfrom bokeh.models import ColumnDataSource, NumeralTickFormatter, FactorRange, Div\nfrom bokeh.models import Title\nfrom bokeh.transform import factor_cmap\nfrom bokeh.palettes import Plasma256, linear_palette, Inferno256\noutput_notebook()","f6ea8205":"def line_plot(x, y, p_width=400, p_height=400, color='blue', title='', legend='', x_label='', y_label=''):\n    p = figure(plot_width=p_width, plot_height=p_height, title=title, toolbar_location=None)\n    \n    # Set line and circle glyphs\n    p.line(x, y, line_width=2, color=color, legend=legend)\n    p.circle(x, y, size=4, color=color, legend=legend)\n    \n    # Axis Attributes\n    p.yaxis.axis_label = y_label\n    p.xaxis.axis_label = x_label\n    \n    # Figure outline attributes\n    p.outline_line_alpha = 0.4\n    p.outline_line_width = 1.3\n    p.outline_line_color = \"gray\"\n    \n    return p","2e7b9a0c":"population_year = df.groupby('year').sum().population.values\nsuicides_year = df.groupby('year').sum().suicides_no.values\nsuicides_per_100k_year = (suicides_year \/ population_year) * 100000\nyears = np.unique(df['year'].values)","f1c378fe":"p1 = line_plot(x=years, \n               y=suicides_year, \n               p_height=300, \n               p_width=350,\n               color = \"#718dbf\",\n               title='Suicides Globally, per Year')\n\np2 = line_plot(x=years,\n               y=suicides_per_100k_year, \n               p_height=300, \n               p_width=350, \n               title='Suicides Globally, per 100k per Year',\n               color=\"#e84d60\")\n\n# Set y-axis tick format\np1.yaxis.formatter=NumeralTickFormatter(format=\"0\")\np2.yaxis.formatter=NumeralTickFormatter(format=\"0\")\n\n# Set title font size\np1.title.text_font_size = '11pt'\np2.title.text_font_size = '11pt'\n\n# Set axes labels\np1.yaxis.axis_label = 'Suicides'\np1.xaxis.axis_label = 'Year'\np1.yaxis.axis_label_text_font_size='10.5pt'\np1.xaxis.axis_label_text_font_size='10.5pt'\np1.yaxis.axis_label_text_font_style='bold'\np1.xaxis.axis_label_text_font_style='bold'\n\np2.yaxis.axis_label = 'Suicides per 100k'\np2.xaxis.axis_label = 'Year'\np2.yaxis.axis_label_text_font_size='10.5pt'\np2.xaxis.axis_label_text_font_size='10.5pt'\np2.yaxis.axis_label_text_font_style='bold'\np2.xaxis.axis_label_text_font_style='bold'\n\n### PLOTS FOR PERCENTAGE CHANGE \n\ndata = df.groupby('year').sum()\ndata.loc[:, 'suicides\/100k pop'] = suicides_per_100k_year\n\n\np_pct1 = line_plot(x=data.reset_index().year.values, \n              y=data.suicides_no.pct_change().values, \n              title='Pct. Change of Suicides, per Year',\n              p_height=300,\n              p_width=350,\n              color='black')\n\np_pct2 = line_plot(x=data.reset_index().year.values, \n              y=data['suicides\/100k pop'].pct_change().values, \n              title='Pct. Change of Suicides per 100k, per Year',\n              p_height=300,\n              p_width=350,\n              color='black')\n\n# Title attributes\np_pct1.title.text_font_size = '10pt'\np_pct2.title.text_font_size = '10pt'\np_pct1.title.text_font_style = 'bold italic'\np_pct2.title.text_font_style = 'bold italic'\n\n\n# Axes attributes \np_pct1.yaxis.axis_label='Pct. of Suicides'\np_pct1.xaxis.axis_label='Year'\np_pct1.yaxis.axis_label_text_font_size='10.5pt'\np_pct1.xaxis.axis_label_text_font_size='10.5pt'\np_pct1.yaxis.axis_label_text_font_style='bold'\np_pct1.xaxis.axis_label_text_font_style='bold'\np_pct1.yaxis.formatter=NumeralTickFormatter(format='0%')\n\np_pct2.yaxis.axis_label='Pct. of Suicides per 100k'\np_pct2.xaxis.axis_label='Year'\np_pct2.yaxis.axis_label_text_font_size='10.5pt'\np_pct2.xaxis.axis_label_text_font_size='10.5pt'\np_pct2.yaxis.axis_label_text_font_style='bold'\np_pct2.xaxis.axis_label_text_font_style='bold'\np_pct2.yaxis.formatter=NumeralTickFormatter(format='0%')\n\n\nshow(column(row(p1, p_pct1), row(p2, p_pct2)))","c14c0a33":"data = df.groupby(['country']).sum().suicides_no.nlargest(40).reset_index()\n\ndt = df.groupby(['country']).sum()\nsuicides = dt.suicides_no.values\npopulation = dt.population.values\nsuicides_per_100k = (suicides \/ population) * 1e5\n\ndt['suicides\/100k pop'] = suicides_per_100k\ndt = dt['suicides\/100k pop'].nlargest(40).reset_index()","bae6c1a2":"countries = np.flip(data['country'].values)\nsuicides_country = np.flip(data['suicides_no'].values)\ncountries_100k = np.flip(dt['country'].values)\nsuicides_country_100k = np.flip(dt['suicides\/100k pop'].values)","31108294":"source = ColumnDataSource(data=dict(suicides_country_100k=suicides_country_100k, countries_100k=countries_100k, \n                                     color=linear_palette(Plasma256[50:100], 40)[::-1]))\n\np = figure(y_range=countries_100k,\n           plot_height=700, \n           plot_width=550, \n           toolbar_location=None)\n\np.hbar(y='countries_100k',\n       right='suicides_country_100k',\n       height=0.8,\n       source=source,\n       color='color')\n\np.add_layout(Title(text=\"(Showing rates per 100000 individuals)\", text_font_style=\"italic\", text_font_size='11pt'), 'above')\np.add_layout(Title(text=\"Suicide Rates, by Country\", text_font_size=\"16pt\"), 'above')\n\n# Axes attributes\np.x_range.start = 0\np.ygrid.grid_line_color = None\np.xaxis.formatter=NumeralTickFormatter(format=\"0\")\n\n# Set and adjust axes labels \np.xaxis.axis_label = 'Suicides per 100k'\np.yaxis.axis_label='Country'\np.xaxis.axis_label_text_font_size='10.5pt'\np.yaxis.axis_label_text_font_size='11pt'\np.xaxis.axis_label_text_font_style='bold'\np.yaxis.axis_label_text_font_style='bold'\n\n# Adjust y-axis major label font size\np.yaxis.major_label_text_font_size='10.6pt'\n\n# Title attributes\np.title.text_font_size = '12pt'\n\n# Figure outline attributes\np.outline_line_alpha = 0.4\np.outline_line_width = 1.3\np.outline_line_color = \"gray\"\n\nshow(p)","cf770b4f":"from bokeh.layouts import gridplot\nfrom bokeh.palettes import Category20","fa3d7b24":"data = df.groupby(['country', 'year']).sum().suicides_no\n\ncountry_dict = dict(european_countries=['Russian Federation', 'Ukraine','France', 'Germany', 'United Kingdom', 'Sweden', 'Denmark', 'Norway', 'Poland','Lithuania','Italy','Spain'],\n                    north_south_american_countries=['Canada', 'United States', 'Mexico', 'Guatemala', 'Panama', 'Colombia', 'Ecuador', 'Argentina', 'Brazil'],\n                    east_southeast_asian_countries=['Japan','Republic of Korea','Thailand', 'Sri Lanka', 'Philippines', 'Singapore'])","29579320":"plotList = []\ngridList = []\n\nfor (index, countries) in enumerate(country_dict.values()):\n    if index==1 or index==2: plotList=[]\n    for country, color in zip(countries, Category20[len(countries)]):\n        p = figure(title=country,toolbar_location=None)\n        p.line(x=data[country].index.values, y=data[country].values, line_width=2, color=color)\n        p.circle(x=data[country].index.values, y=data[country].values, size=4, color=color)\n        \n        # Set axes labels and y-axis tick format\n        p.yaxis.axis_label = 'Suicides'\n        p.xaxis.axis_label = 'Year'\n        p.yaxis.formatter=NumeralTickFormatter(format=\"0.0a\")\n        \n        # Set title font size\n        p.title.text_font_size = '11pt'\n        \n        # Set Figure outline\n        p.outline_line_color = \"gray\"\n        p.outline_line_alpha = 0.4\n        p.outline_line_width = 1.3\n        \n        plotList.append(p)\n    gridList.append(plotList)\n    \ngrid1 = gridplot(gridList[0], ncols=3, plot_width=250, plot_height=230, toolbar_location=None)\ngrid2 = gridplot(gridList[1], ncols=3, plot_width=250, plot_height=230, toolbar_location=None)\ngrid3 = gridplot(gridList[2], ncols=3, plot_width=250, plot_height=230, toolbar_location=None)\n\nshow(column(Div(text='<h1><b>Suicides per Year, by Country<b><h1>'),\n            Div(text='<h2><i><b>European Countries<b><i><h2>'), \n            grid1,\n            Div(text=''),\n            Div(text=''),\n            Div(text='<h2><i><b>North\/Central\/South American Countries<b><i><h2>'),\n            grid2,\n            Div(text=''),\n            Div(text=''),\n            Div(text='<h2><i><b>East\/Southeast Asian Countries<b><i><h2>'), \n            grid3))","9260d044":"data = df.groupby(['country', 'year']).sum()\ndata['suicides\/100k pop'] = (data['suicides_no'].values \/ data['population'].values) * 1e5\n\ndata = data['suicides\/100k pop']","6522d07f":"plotList = []\ngridList = []\n\nfor index, countries in enumerate(country_dict.values()):\n    if index==1 or index==2: plotList=[]\n    for country, color in zip(countries, Category20[len(countries)]):\n        p = figure(title=country, toolbar_location=None)\n        x = data[country].index.values\n        y = data[country].values\n        p.line(x, y, line_width=2, color=color)\n        p.circle(x, y, size=4, color=color)\n        \n        # Set axes labels\n        p.yaxis.axis_label = 'Suicides per 100k'\n        p.xaxis.axis_label = 'Year'\n        \n        # Set title font size\n        p.title.text_font_size = '11pt'\n        \n        # Set Figure outline attributes\n        p.outline_line_color = \"gray\"\n        p.outline_line_alpha = 0.4\n        p.outline_line_width = 1.3\n        \n        plotList.append(p)\n    gridList.append(plotList)\n    \ngrid1 = gridplot(gridList[0], ncols=3, plot_width=250, plot_height=230, toolbar_location=None)\ngrid2 = gridplot(gridList[1], ncols=3, plot_width=250, plot_height=230, toolbar_location=None)\ngrid3 = gridplot(gridList[2], ncols=3, plot_width=250, plot_height=230, toolbar_location=None)\n\nshow(column(Div(text='<h1><b>Suicides per 100k per Year, by Country<b><h1>'),\n            Div(text='<h2><i><b>European Countries<b><i><h2>'), \n            grid1,\n            Div(text=''),\n            Div(text=''),\n            Div(text='<h2><i><b>North\/Central\/South American Countries<b><i><h2>'), \n            grid2,\n            Div(text=''),\n            Div(text=''),\n            Div(text='<h2><i><b>East\/Southeast Asian Countries<b><i><h2>'), \n            grid3))","cb5012bf":"data = df.suicides_no.groupby(df.age).sum().reindex(index=ages)\ndt = df.groupby(['age', 'year']).sum().suicides_no.reindex(level='age', index=ages)","c74a613c":"from bokeh.palettes import Set1\nfrom bokeh.models import Legend","345f0181":"# BAR PLOT \nb = figure(x_range=ages, plot_height=400, plot_width=300, title='Suicides, by Age Range', toolbar_location=None)\n\n# Set a vertical bar glyph\nb.vbar(x=ages, top=data.values,  width=0.8)\n\n# Set axes attributes\nb.y_range.start = 0\nb.xgrid.grid_line_color = None\nb.yaxis.formatter=NumeralTickFormatter(format=\"0\")\n\n# Adjust x-axis major label\nb.xaxis.major_label_orientation = 1\nb.xaxis.major_label_text_font_size='9.3pt'\n\n# Set y-axis label\nb.yaxis.axis_label = 'Suicides'\nb.yaxis.axis_label_text_font_style='bold'\nb.yaxis.axis_label_text_font_size='10.5pt'\n\n# Set outline attributes\nb.outline_line_alpha = 0.4\nb.outline_line_width = 1.3\nb.outline_line_color = \"gray\"\n\n# Set title font size\nb.title.text_font_size = '12pt'\n\n\n# LINE PLOT\nl = figure(plot_width=560, plot_height=400, title='Suicides per Year, by Age Range', toolbar_location=None)\n\nlegendList = []\n\nfor age, color in zip(ages, Set1[6]):\n    s = [l.line(x=dt[age].reset_index().year, y=dt[age].reset_index().suicides_no, color=color, line_width=2),\n         l.circle(x=dt[age].reset_index().year, y=dt[age].reset_index().suicides_no, color=color, size=4)]\n    \n    legendList.append((age, s))\n\n# Adjust axis tick format and labels\nl.yaxis.formatter=NumeralTickFormatter(format=\"0\")\nl.xaxis.axis_label = 'Year'\nl.xaxis.axis_label_text_font_style='bold'\n    \n# Add Legend to layout and sets its attributes\nl.add_layout(Legend(items=legendList, location='top_right'), 'right')\nl.legend.title_text_font_style = \"bold\"\nl.legend.border_line_color = \"gray\"\nl.legend.border_line_width = 1.3\nl.legend.border_line_alpha = 0.2\nl.legend.title = \"Age Range\"\n\n# Set outline attributes\nl.outline_line_color = \"gray\"\nl.outline_line_alpha = 0.4\nl.outline_line_width = 1.3\n\n# Set title font size\nl.title.text_font_size = '12pt'\n\nshow(row(b, l))","80ce7abf":"dt = df.groupby(['age']).sum()\ndt['suicides\/100k pop'] = (dt.suicides_no.values \/ dt.population.values) * 1e5\n\ndt = dt.reindex(ages)","acf58acd":"data = df.groupby(['age', 'year']).sum().reindex(level='age', index=ages)\n\ndata['suicides\/100k pop'] = (data.suicides_no \/ data.population) * 1e5","78ea7e2c":"# BAR PLOT\nb = figure(x_range=ages,plot_height=400, plot_width=300, title='Suicides by Age Range, per 100k', toolbar_location=None)\n\n# Set a vertical bar glyph\nb.vbar(x=ages, top=dt['suicides\/100k pop'].values , width=0.8)\n\n# Set axes attributes\nb.y_range.start = 0\nb.xgrid.grid_line_color = None\nb.yaxis.formatter=NumeralTickFormatter(format=\"0\")\n\n# Adjust x-axis major label\nb.xaxis.major_label_orientation = 1\nb.xaxis.major_label_text_font_size='9.3pt'\n\n# Set y-axis label\nb.yaxis.axis_label = 'Suicides per 100k'\nb.yaxis.axis_label_text_font_style='bold'\nb.yaxis.axis_label_text_font_size='10.5pt'\n\n# Set outline attributes\nb.outline_line_alpha = 0.4\nb.outline_line_width = 1.3\nb.outline_line_color = \"gray\"\n\n# Set title font size\nb.title.text_font_size = '12pt'\n\n\n# LINE PLOT\nl = figure(plot_width=560, plot_height=400, title='Suicides by Age Range, per 100k per Year', toolbar_location=None)\n\nlegendList=[]\n\nfor age, color in zip(ages, Set1[6][::-1]):\n    s =  [l.line(x=data.loc[age].reset_index().year.values, y=data.loc[age, 'suicides\/100k pop'].values, color=color, line_width=2),\n          l.circle(x=data.loc[age].reset_index().year.values, y=data.loc[age, 'suicides\/100k pop'].values, color=color, size=4)]\n    \n    legendList.append((age, s))\n    \n# Adjust y-axis tick format and x-axis label\nl.yaxis.formatter=NumeralTickFormatter(format=\"0\")\nl.xaxis.axis_label = 'Year'\nl.xaxis.axis_label_text_font_style='bold'\n    \n# Add Legend to layout and sets its attributes\nl.add_layout(Legend(items=legendList, location='top_right'), 'right')\nl.legend.title_text_font_style = \"bold\"\nl.legend.border_line_color = \"gray\"\nl.legend.border_line_width = 1.3\nl.legend.border_line_alpha = 0.2\nl.legend.title = \"Age Range\"\n\n# Set outline attributes\nl.outline_line_color = \"gray\"\nl.outline_line_alpha = 0.4\nl.outline_line_width = 1.3\n\n# Set title font size\nl.title.text_font_size = '12pt'\n\nshow(row(b, l))","75c955b8":"data_sex_year = df.groupby(['sex', 'year']).sum()\ndata_sex_year['suicides\/100k pop'] = (data_sex_year.suicides_no \/ data_sex_year.population) * 1e5\n\ndata_sex_age = df.groupby(['sex', 'age']).sum().reindex(level='age', index=ages).iloc[:, :-2]\ndata_sex_age['suicides\/100k pop'] = (data_sex_age.suicides_no \/ data_sex_age.population) * 1e5\n\nsuicides_100k_women_year = data_sex_year.loc['female', 'suicides\/100k pop'].values\nsuicides_100k_men_year = data_sex_year.loc['male', 'suicides\/100k pop'].values","92f6aef6":"year = data_sex_year.reset_index().year.unique()","38874cb3":"# LINE PLOTS\n\np1 = line_plot(year,\n              data_sex_year.suicides_no.male.values,\n              p_width=300, \n              p_height=190, \n              title='Suicides per Year, for Men',\n              x_label='Year',\n              y_label='Suicides')\n\np1.yaxis.formatter=NumeralTickFormatter(format=\"0a\")\np1.title.text_font_size = '10pt'\np1.title.text_font_style=\"bold italic\"\n\np2 = line_plot(year, \n               data_sex_year.suicides_no.female.values,\n               p_width=300, \n               p_height=190,\n               color='orange',\n               title='Suicides per Year, for Women',\n               x_label='Year',\n               y_label='Suicides')\n\np2.yaxis.formatter=NumeralTickFormatter(format=\"0a\")\np2.title.text_font_style=\"bold italic\"\np2.title.text_font_size = '10pt'\n\n\n# Plots for suicides per 100k\np3 = line_plot(year, \n               suicides_100k_men_year, \n               p_width=300, \n               p_height=190,\n               color='blue',\n               title='Suicide Rates per 100k, for Men',\n               x_label='Year', \n               y_label='Suicides per 100k')\n\np3.title.text_font_style=\"bold italic\"\np3.title.text_font_size = '10pt'\n\np4 = line_plot(year, \n               suicides_100k_women_year, \n               p_width=300, \n               p_height=190,\n               x_label='Year',\n               title='Suicide Rates per 100k, for Women',\n               y_label='Suicides per 100k',\n               color='orange'\n              )\n\np4.title.text_font_style=\"bold italic\"\np4.title.text_font_size = '10pt'","2d983349":"# BAR PLOTS\n\nage_gender = [(age, gender) for age in ages for gender in genders] \n\nsuicides = sum(zip(data_sex_age.loc['male', 'suicides_no'].tolist(), data_sex_age.loc['female', 'suicides_no'].tolist()), ())\nsuicides_per_100k_age = sum(zip(data_sex_age.loc['male', 'suicides\/100k pop'].tolist(), data_sex_age.loc['female', 'suicides\/100k pop'].tolist()), ())\n\n\nsource = ColumnDataSource(data=dict(age_gender=age_gender, \n                                    suicides=suicides, \n                                    suicides_per_100k_age=suicides_per_100k_age))\n\n\np5 = figure(x_range=FactorRange(*age_gender),\n            plot_height=400, \n            plot_width=450,\n            title='Suicides, by Age Range and Gender', \n            toolbar_location=None)\n\np6 = figure(x_range=FactorRange(*age_gender), \n            plot_height=400, \n            plot_width=450,\n            title='Suicides per 100k, by Age Range and Gender',\n            toolbar_location=None)\n\np5.vbar(x='age_gender', \n        top='suicides', \n        width=0.9, \n        source=source, \n        line_color='white',\n        fill_color=factor_cmap('age_gender', palette=['blue', 'orange'], factors=genders, start=1, end=2))\n\np6.vbar(x='age_gender', \n        top='suicides_per_100k_age', \n        width=0.9, \n        source=source, \n        line_color='white',\n        fill_color=factor_cmap('age_gender', palette=['blue', 'orange'], factors=genders, start=1, end=2))\n\n# Set axes attributes\np5.y_range.start = 0\np5.x_range.range_padding = 0.01\np5.xgrid.grid_line_color = None\n\np6.y_range.start = 0\np6.x_range.range_padding = 0.01\np6.xgrid.grid_line_color = None\n\n# Add y-axis label \np5.yaxis.axis_label = 'Suicides'\np5.yaxis.axis_label_text_font_style='bold'\np5.yaxis.axis_label_text_font_size='10.5pt'\n\np6.yaxis.axis_label = 'Suicides per 100k'\np6.yaxis.axis_label_text_font_style='bold'\np6.yaxis.axis_label_text_font_size='10.5pt'\n\n# Set Title font size \np5.title.text_font_size = '12pt'\np6.title.text_font_size = '12pt'\n\n# Set Outline attributes\np5.outline_line_color = \"gray\"\np5.outline_line_alpha = 0.4\np5.outline_line_width = 1.3\n\np6.outline_line_color = \"gray\"\np6.outline_line_alpha = 0.4\np6.outline_line_width = 1.3\n\n# Set y-axis tick format and x-axis label orientation\np5.xaxis.major_label_orientation = 1\np5.xaxis.major_label_text_font_size='8.7pt'\np5.yaxis.formatter=NumeralTickFormatter(format=\"0.0a\")\n\np6.xaxis.major_label_orientation = 1\np6.xaxis.major_label_text_font_size='8.7pt'\np6.yaxis.formatter=NumeralTickFormatter(format='0')","8212fc5b":"show(row(p5, column(p1, p2)))\nshow(row(p6, column(p3, p4)))","0a10616a":"from bokeh.core.properties import value","f9e59be0":"data_gender_year = df.groupby(['sex', 'year']).sum().suicides_no\n\nyears = list(data_gender_year.reset_index().year.unique().astype(str))\n\nsource = dict(years=years,\n              male=data_gender_year.male.values,\n              female=data_gender_year.female.values)\n\ncolors = [\"#e84d60\", \"#718dbf\"]\n\np = figure(x_range=source['years'], plot_height=400, plot_width=700, toolbar_location=None)\np.vbar_stack(['female', 'male'], x='years', width=0.8, color=colors, source=source, legend=[value(x) for x in ['female', 'male']])\n\n\n# Set legend attributes\np.legend.location = \"top_left\"\np.legend.orientation = \"horizontal\"\n\n# Set outline attributes\np.outline_line_color = \"gray\"\np.outline_line_alpha = 0.4\np.outline_line_width = 1.3\n\n# Set y-axis range and label\np.y_range.start = 0\np.yaxis.axis_label='Suicides'\np.yaxis.axis_label_text_font_style='bold'\np.yaxis.axis_label_text_font_size='10.5pt'\n\n# Set y-axis format and label orientation\np.xaxis.major_label_orientation = 1\np.yaxis.formatter=NumeralTickFormatter(format=\"0\")\n\n# Add a Title to layout\np.add_layout(Title(text=\"(Showing proportions for each year, for both genders)\", text_font_style=\"italic\", text_font_size='11pt'), 'above')\np.add_layout(Title(text=\"Suicides Trends, from 1985 to 2015\", text_font_size=\"16pt\"), 'above')\n\nshow(p)","b4c6b84e":"data = df.groupby(['sex', 'country']).sum().drop('year', axis=1)\ncountries = data.suicides_no.nlargest(40).reset_index().country.unique()\n\nmale = data.loc['male', 'suicides_no'][countries].values.tolist()\nfemale = data.loc['female', 'suicides_no'][countries].values.tolist()\n\ndataDict = dict(country=countries,\n                female=female,\n                male=male)\n\nsource = ColumnDataSource(dataDict)\n\ncolors = [\"#e84d60\", \"#718dbf\"]\ngen = ['female', 'male']","7076bf19":"p = figure(y_range=countries[::-1], plot_height=600, plot_width=700, toolbar_location=None)\n\n# Set a horizontal stacked bar glyph\np.hbar_stack(gen, y='country', height=0.9, source=source, color=colors, legend=[value(x) for x in gen])\n\n# Adds Title to layout\np.add_layout(Title(text=\"(Showing proportions of suicides, for both genders)\", text_font_style=\"italic\", text_font_size='11pt'), 'above')\np.add_layout(Title(text=\"Suicides, by Gender and Country\", text_font_size=\"16pt\"), 'above')\n\n# Set axes attributes\np.x_range.start = 0\np.xaxis.formatter=NumeralTickFormatter(format=\"0\")\n\n# Set and adjust axes labels\np.xaxis.axis_label = 'Suicides'\np.yaxis.axis_label='Country'\np.xaxis.axis_label_text_font_size='10.5pt'\np.yaxis.axis_label_text_font_size='11pt'\np.xaxis.axis_label_text_font_style='bold'\np.yaxis.axis_label_text_font_style='bold'\n\n# Adjust y-axis major label font size\np.yaxis.major_label_text_font_size='10.6pt'\n\n# Set Legend location\np.legend.location = \"center_right\"\n\n# Outline attributes\np.outline_line_alpha = 0.4\np.outline_line_width = 1.3\np.outline_line_color = \"gray\"\n\nshow(p)","3bd0e5a0":"data = df.groupby(['sex', 'country', 'year']).sum().suicides_no","ea1ea4b6":"plotList=[]\n\nfor country in countries:\n    p = figure(title=country)\n    for gender, color in zip(genders, ['#ED6825', '#FBB318']):\n        p.line(x=data.loc[gender, country].reset_index().year.values, \n                   y=data.loc[gender, country].values, \n                   line_width=2, \n                   legend=('{}'.format(gender)).capitalize(), \n                   color=color)\n        \n        p.circle(x=data.loc[gender, country].reset_index().year.values, \n                     y=data.loc[gender, country].values, \n                     size=4, \n                     legend=('{}'.format(gender)).capitalize(), \n                     color=color)\n        \n    # Suicides for both genders\n    p.line(x=data[:, country].groupby('year').sum().index.values, \n           y=data[:, country].groupby('year').sum().values, \n           line_width=2, \n           legend='Both', \n           color='red') \n\n    p.circle(x=data[:, country].groupby('year').sum().index.values, \n             y=data[:, country].groupby('year').sum().values, \n             size=4, \n             legend='Both', \n             color='red')\n \n    # Set title text font size\n    p.title.text_font_size = '12pt'\n \n    # Set legend attributes\n    p.legend.location = \"bottom_right\"\n    p.legend.title_text_font_style = \"bold\"\n    p.legend.label_text_font_size = '9pt'\n    p.legend.background_fill_alpha = 0.5\n    \n    # Set axes labels and y axis tick format\n    p.xaxis.axis_label = 'Year'\n    p.yaxis.axis_label = 'Suicides'\n    p.yaxis.axis_label_text_font_style='bold'\n    p.xaxis.axis_label_text_font_style='bold'\n    p.yaxis.formatter=NumeralTickFormatter(format=\"0\")\n    p.y_range.start = 0\n    \n    # Set outline attributes\n    p.outline_line_alpha = 0.4\n    p.outline_line_width = 1.3\n    p.outline_line_color = \"gray\"\n    \n    # Append each Figure to a list\n    plotList.append(p)\n    \ngrid = gridplot(plotList, ncols=2, plot_width=340, plot_height=280, toolbar_location=None)\nshow(column(Div(text='<h2>Suicides per Year, by Gender and Country<h2>'), grid))","19e9f8c6":"sns.set_style('whitegrid')\nfig, ax = plt.subplots(nrows=2, \n                       ncols=2, \n                       figsize=(15, 10), \n                       sharex=True)\n\ngenerations = df.suicides_no.groupby(df.generation).sum().nlargest(3).index.tolist()\ncountries_a = ['Russian Federation', 'United States', 'Japan']\n\naxes = np.copy(ax.flatten())\ncolumns = ['sex', 'age', 'country', 'generation']\ncategories = [genders, ages, countries_a, generations]\n\nfor col, cat, axis in zip(columns, categories, axes):\n    if col in ['age']:\n        data = df.groupby([col, 'year']).sum().suicides_no.reindex(level=col, index=ages)\n    else:\n        data = df.groupby([col, 'year']).sum().suicides_no\n    data = data[cat].reset_index()\n    cond = col in ['generation', 'country']\n    sns.lineplot(x='year', y='suicides_no', hue=col, style=col, data=data, sort=False, dashes=cond, ax=axis, palette='deep')\n    axis.set_ylabel(\"Number of Suicides\")\n    \nsns.despine()\nplt.tight_layout()\nplt.show()   ","de63ba0b":"data = df.copy()\ndata = data.select_dtypes(include=['number'])","bb3f9e27":"# Correlation Matrix\n\nplt.figure(figsize=(6, 6))\nxyticklabels = ['Year', 'Suicides', 'Population', 'Suicides\/100k', 'GDP for Year', 'GDP per Capita']\ncm = np.corrcoef(data[data.columns].values.T)\nsns.set(font_scale=1.5)\nsns.heatmap(cm,\n            cbar=True,\n            annot=True,\n            square=True,\n            fmt='.2f',\n            annot_kws={'size': 15},\n            yticklabels=xyticklabels,\n            xticklabels=xyticklabels,\n           )\n\nplt.show()","6f8511ae":"plt.style.use('seaborn')\nsns.pairplot(data=df, kind='reg')\nplt.show()","064e8861":"from bokeh.models import LinearAxis, Range1d, Label","5c40cf38":"data = df.groupby(['country', 'year', 'GDP per Capita']).sum().suicides_no","bd9b14e1":"data_gdp = data.reset_index()\ngdpPercap, suicides = data_gdp['GDP per Capita'].values, data_gdp.suicides_no.values","0768f9df":"# SCATTER PLOT\np_scatter = figure(toolbar_location = None, plot_height = 560, plot_width = 560, title = 'Suicides vs. GDP per Capita')\n\n# Set scatter glyph\np_scatter.scatter(x = gdpPercap, y = suicides, fill_color = 'blue', size = 3)\n\n# Set outline attributes\np_scatter.outline_line_alpha = 0.3\np_scatter.outline_line_width = 1.3\np_scatter.outline_line_color = \"gray\"\n\n# Set title font size \np_scatter.title.text_font_size = '13.5pt'\n\n# Set axes labels\np_scatter.xaxis.axis_label = 'GDP per Capita'\np_scatter.yaxis.axis_label = 'Suicides'\np_scatter.yaxis.axis_label_text_font_style='bold'\np_scatter.xaxis.axis_label_text_font_style='bold'\n\n# Set x-axis tick format \np_scatter.xaxis.formatter=NumeralTickFormatter(format=\"($0,0)\")\n\n\n### POP-OUT TWO OUTLIERS\n\n# Select one outlier from data\nfirst_outlier = data_gdp.loc[data_gdp['suicides_no'] > 60000]\n\nx_first_outlier = first_outlier['GDP per Capita'].values[0]\ny_first_outlier = first_outlier.suicides_no.values[0]\n\n# Select another outlier from data\ncondition = (data_gdp['GDP per Capita'] > 60000) & (data_gdp['GDP per Capita'] < 65000)\n\nsecond_outlier = data_gdp.loc[condition & (data_gdp.suicides_no > 40000)]\n\nx_second_outlier = np.asscalar(second_outlier['GDP per Capita'].values)\ny_second_outlier = np.asscalar(second_outlier.suicides_no.values)\n\n# Set label for the first outlier\nfirstLabel = Label(x = x_first_outlier, \n                   y = y_first_outlier, \n                   x_offset=1, \n                   y_offset=1,\n                   text='Russian Federation, 1994',\n                   render_mode='css', \n                   text_font_size = '9pt',\n                   text_font_style = 'italic')\n\n# Set label for the second outlier \nsecondLabel = Label(x = x_second_outlier, \n                    y = y_second_outlier, \n                    x_offset=1, \n                    y_offset=1,\n                    text='United States, 2015',\n                    render_mode='css', \n                    text_font_size = '9pt',\n                    text_font_style = 'italic')\n\n# Add outliers labels to layout\np_scatter.add_layout(firstLabel)\np_scatter.add_layout(secondLabel)\n\n# Pop-out both outliers\np_scatter.circle(x = x_first_outlier, y = y_first_outlier, color = 'red', size = 4)\np_scatter.circle(x = x_second_outlier, y = y_second_outlier, color = 'green', size = 4)\n\nshow(p_scatter)","3183ddef":"def grid(data=None, countries=None, text=''):\n    plotList=[]\n    for country in countries:\n        p = figure(title=country)\n        \n        p.line(x=data[country].reset_index().year.values, \n               y=data.loc[country].values, \n               line_width=2, \n               legend='Suicides',\n               color='blue')\n        \n        p.circle(x=data[country].reset_index().year.values, \n                 y=data.loc[country].values, \n                 size=4, \n                 legend='Suicides', \n                 color='blue')\n        \n        p.yaxis.axis_label = 'Suicides'\n        p.xaxis.axis_label='Year'\n        p.yaxis.axis_label_text_font_style='bold'\n        p.xaxis.axis_label_text_font_style='bold'\n        p.y_range.start = 0\n        \n        # Add an extra y range\n        p.extra_y_ranges = {\"GDP per Capita\": Range1d(start=0, end=data[country].reset_index()['GDP per Capita'].values.max()+1e2)}\n        p.add_layout(LinearAxis(y_range_name='GDP per Capita', axis_label='GDP per Capita', axis_label_text_font_style='bold'), 'right')\n        \n        \n        p.line(x=data[country].reset_index().year.values, \n               y=data[country].reset_index()['GDP per Capita'].values, \n               legend='GDP per Capita', line_width=2, color='red',\n               y_range_name='GDP per Capita')\n        \n        p.circle(x=data[country].reset_index().year.values, \n                 y=data[country].reset_index()['GDP per Capita'].values, \n                 size=4, legend='GDP per Capita', color='red',\n                 y_range_name='GDP per Capita')\n        \n        p.yaxis.formatter=NumeralTickFormatter(format=\"0\")\n        #p.extra_y_ranges.start = 0\n        p.title.text_font_size = '12pt'\n        p.legend.label_text_font_size = '9pt'\n        p.legend.location = \"bottom_right\"\n        p.legend.background_fill_alpha=0.3\n        \n        plotList.append(p)\n        \n    grid = gridplot(plotList, ncols=2, plot_width=390, plot_height=300, toolbar_location=None)\n    show(column(Div(text=text), grid))","8c3e5754":"grid(data=data, countries=country_dict['european_countries'], text='<h2>Rates of Suicide and GDP per Capita - European Countries<h2>')\ngrid(data=data, countries=country_dict['east_southeast_asian_countries'], text='<h2>Rates of Suicide and GDP per Capita - East\/Southeast Asian Countries<h2>')","9b60c5ce":"# Suicides by Age Range and Gender","451f691c":"- As we have already seen, the rate of suicides for men is clearly higher than for women.\n- Rates of suicide are higher between middle-aged men. \n- Suicides in Russia peaks in the first half of the 1990s, but it's declining ever since.\n- The United States shows an almost linear rate between 1985 and 2000. However, from this point onwards, it starts to increase year after year. \n- Among the generations, Boomers have shown the highest rates of suicide, peaking around 1994*.\n\n\n<font size=\"2\">*The Generation variable doesn't furnish enough information. \n    Moreover, apparently there's no consensus on when a generation begins and ends. I decided to use it only for this particular plot.<\/font>","0ed9be2d":"We can see from the above plots that the total number of suicides and the rates of suicide per 100000 people, varies between years. The number of suicides in the United States starts to exceed Russia in 2010. Rates of suicide per 100000 people per year show that in 1985, Sri Lanka had roughly the same rate as Russia in 1992. Moreover, we can see that there's missing data for Sri Lanka between 1986 and 1996 which makes it more difficult to draw accurate conclusions.","be733ecb":"# Summary","6bb405b4":"# Suicides and GDP per Capita ","bfdab422":"# Suicides Globally and by Country","f58b34fa":"Some of the above graphs sugests that there is a correlation between increasing rates of suicide and GDP per capita for a particular country and year. For Russia, rates of suicide starts to decrease as GDP per Capita increases. As for the East\/Southeast Asian countries, such as Korea, Japan and Thailand, there is a substantial increase in rates of suicide between 1997 and 1998 (with a drastic drop in GDP per capita) probably due to a [financial crisis](https:\/\/en.wikipedia.org\/wiki\/1997_Asian_financial_crisis) that affected some Asian countries in this period. There is a paper exploring this subject (see the abstract: https:\/\/www.ncbi.nlm.nih.gov\/pubmed\/19200631 ). However, it is worth to recall that correlation does not imply causation, and there are certainly multiple factors underlying increasing rates of suicide.","e9532c34":"As shown in the above correlation matrix, suicides and population show a strong, positive correlation. Suicides and GDP for year also show some degree of correlation. Correlation measures linear relationships between variables, and we're going to explore some of these relationships further in the next cells.","03432d8f":"- From 1985 to 2015, the rate of suicides was higher for men than for women. \n- For every suicide committed by women, there were three suicides committed by men. \n- Rate of suicides per 100000 people per year peaks at 1995 for both genders. \n- Middle-aged men committed the most suicides.\n- Men with 75 years of age or older had the highest rate, with more than 40 suicides per 100000 people.","a4aebda8":"## Analysing correlation between variables","f9d58820":"# Introduction\nThe purpose of this kernel is to analyze and visualize this data. If you have any suggestions to improve this notebook, leave a comment. And if you liked this kernel, consider up voting it."}}