{"cell_type":{"3bf9d886":"code","a7bf7552":"code","c08ba382":"code","b51f9569":"code","d3eb7d9e":"code","87161f84":"code","143df08a":"code","bb44d5a2":"code","d5c19e86":"code","76e976c9":"code","62cfa813":"code","e28c3dbe":"markdown"},"source":{"3bf9d886":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a7bf7552":"train = pd.read_csv('\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_train.csv')\nprint(train.columns)\ntest = pd.read_csv('\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/covid19-local-us-ca-forecasting-week-1\/ca_submission.csv')\nsub = submission['ForecastId']\nprint(sub)","c08ba382":"train.rename(columns={'Province\/State':'Province','Country\/Region':'Region'},inplace=True)\nprint(train.columns)","b51f9569":"train.drop(columns='Province',inplace=True)\nprint(train.columns)","d3eb7d9e":"print(train.head())","87161f84":"train['Date'] = train['Date'].apply(lambda x:x.replace(\"-\",\"\"))\ntrain['Date'] = train['Date'].astype('int')\ntest['Date'] = test['Date'].apply(lambda x:x.replace(\"-\",\"\"))\ntest['Date'] = test['Date'].astype('int')","143df08a":"X = train[['Lat','Long','Date']]\ny1= train['ConfirmedCases']\ny2= train['Fatalities']\nX_test = test[['Lat','Long','Date']]\n\nfrom sklearn.ensemble import RandomForestClassifier\n\n\nmodel = RandomForestClassifier()\nmodel.fit(X,y1)\ny_pred=model.predict(X_test)\ny_pred =pd.DataFrame(y_pred)\ny_pred.columns = [\"ConfirmedCases_prediction\"]\nprint(y_pred.head())","bb44d5a2":"model.fit(X,y2)\ny_pred1=model.predict(X_test)\ny_pred1 =pd.DataFrame(y_pred1)\ny_pred1.columns = [\"Death_Prediction\"]\nprint(y_pred1.head())","d5c19e86":"submit = pd.concat([y_pred,y_pred1,sub],axis=1)\nprint(submit.head())","76e976c9":"submit.columns = ['ConfirmedCases', 'Fatalities', 'ForecastId']\nsubmit = submit[['ForecastId','ConfirmedCases', 'Fatalities']]\n\nsubmit[\"ConfirmedCases\"] = submit[\"ConfirmedCases\"].astype(int)\nsubmit[\"Fatalities\"] = submit[\"Fatalities\"].astype(int)","62cfa813":"sub = submit\nsub.to_csv('submission.csv', index=False)","e28c3dbe":"Divide the data into parts to predict the output"}}