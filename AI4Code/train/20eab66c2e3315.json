{"cell_type":{"521cbad0":"code","8774cca8":"code","e03c3ff1":"code","99207e6c":"code","38a59c3e":"code","2fa53139":"code","032f8b6b":"code","7e341c7e":"code","14eed862":"code","9458f069":"code","3ede85c4":"code","0547a8e7":"code","65ef321c":"code","79fd644b":"code","3ceb26ff":"code","6de72f5b":"code","0a510ffa":"code","c188fdd6":"code","496767d4":"code","93b7276f":"code","ccda61b8":"code","d42f5fdf":"code","6262b0a7":"code","13a3e14c":"code","868f3d81":"code","e9e988fb":"code","d9687e7e":"code","297f477d":"code","3b34dd4f":"code","f3da14cc":"code","c6b9fe92":"code","091116f7":"code","4093feaa":"code","e9b43a59":"code","5345f3d7":"code","26c68f83":"code","8239956a":"code","1ec2291b":"code","44d275a8":"code","f714f2b4":"code","3f36931c":"code","0c0f6593":"code","3c7ad219":"code","83583275":"code","5dd9fe7c":"code","6a852575":"code","275174e9":"markdown","3811f487":"markdown","7805ba23":"markdown","eaf88065":"markdown","d66d5154":"markdown","bd801ee5":"markdown","d522c9d3":"markdown","de6b1ba9":"markdown","bd2ade0f":"markdown","45e6cfd0":"markdown","32686a64":"markdown","4605db87":"markdown","72b83308":"markdown","a6df5666":"markdown","dd3d4b0a":"markdown","008d7fc3":"markdown","6fcde05a":"markdown","377fe4f8":"markdown","ed437ca8":"markdown","fe6febce":"markdown","69319905":"markdown","589ddf78":"markdown","8466c74b":"markdown","18519a5d":"markdown","25cb9642":"markdown","6ff59fae":"markdown","b88cf399":"markdown","0d10aff4":"markdown","1c0a580a":"markdown","ab6c5636":"markdown","e89f9221":"markdown","8299df32":"markdown","93b266e7":"markdown","93a049d6":"markdown","84bf14d5":"markdown","6a8f1205":"markdown","b6a3d76c":"markdown","6eb979ca":"markdown","09811dc8":"markdown","80800e6a":"markdown","5b1dc1ec":"markdown","6a0546e0":"markdown","afc84abb":"markdown","11d8c9a6":"markdown"},"source":{"521cbad0":"# Custom G-Research python module needed (Not used in this notebook)\nimport gresearch_crypto\n\n# Pandas for data manipulation\nimport pandas as pd\nimport numpy as np\n\n# module provides a portable way of using operating system dependent functionality\nimport os \n\n # Importing pyplot interface using matplotlib\nimport matplotlib.pyplot as plt \n\n# Importing seaborn library for interactive visualization\nimport seaborn as sns \n\n# Importing WordCloud for text data visualization\nfrom wordcloud import WordCloud\n\n# Importing matplotlib for plots\nimport matplotlib as mpl\n\n#Importing datetime for using datetime\nfrom datetime import datetime\n\n#Importing plotly Express for visualization\nimport plotly.express as px\n\n# Importing statsmodel for statistical methods\nimport statsmodels.api as sm\nfrom statsmodels.tsa.stattools import adfuller\n\n#Importing for customizing properties in matplotlib\nfrom pylab import rcParams","8774cca8":"# Custom G-Research python module requires this step\n#env = gresearch_crypto.make_env()","e03c3ff1":"# Display files available in this competition folder\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","99207e6c":"# load training data\ntrain_df = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv', low_memory=False)\n# load asset details data\nasset_details_df = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv', low_memory=False)","38a59c3e":"# get shape of dataframe\nprint('Shape of train dataset is:', train_df.shape)\n\n# print summary of dataframe\ntrain_df.info(show_counts=True)","2fa53139":"# print first 10 rows of dataframe\ntrain_df.head(10)","032f8b6b":"# print summary of asset details dataframe\nasset_details_df.sort_values(by=['Weight'], ascending=False)","7e341c7e":"# print descriptive statistics for train dataset\ntrain_df.describe(include='all').round(1)","14eed862":"# merge dataframe using Asset_ID as key\ngresearch_crypto_df = pd.merge(train_df,asset_details_df,on=['Asset_ID'])","9458f069":"# print first 10 rows of merged dataframe\ngresearch_crypto_df.head(10)","3ede85c4":"# print last 10 rows of merged dataframe\ngresearch_crypto_df.tail(10)","0547a8e7":"# drop missing value from dataframe\ngresearch_crypto_df.dropna(axis=0, inplace=True)","65ef321c":"# print summary of dataframe\ngresearch_crypto_df.info(show_counts=True)","79fd644b":"# create sample of dataset for EDA (For faster execution and to avoid out of memory issue for notebook)\ngresearch_crypto_df_sample = gresearch_crypto_df.sample(n=1000000, random_state=1)","3ceb26ff":"# print summary of sample dataframe\ngresearch_crypto_df_sample.info()","6de72f5b":"# convert timestamp to Datetime for EDA purpose\ngresearch_crypto_df_sample['Datetime'] = pd.to_datetime(gresearch_crypto_df_sample['timestamp'], unit='s')","0a510ffa":"# print first 10 rows of sample dataframe\ngresearch_crypto_df_sample.head(10)","c188fdd6":"# distribution percentage for Asset_Name in sample dataset\nfig = px.pie(gresearch_crypto_df_sample, names='Asset_Name')\nfig.show()","496767d4":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# distribution for Asset_Name with respect to Weight\nsns.barplot(data=gresearch_crypto_df_sample, x='Asset_Name', y='Weight',ax=ax)\nplt.show()","93b7276f":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# distribution for Asset_Name with respect to Count\nsns.barplot(data=gresearch_crypto_df_sample, x='Asset_Name', y='Count',ax=ax)\nplt.show()","ccda61b8":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# trend for Asset_Name with respect to Count\nsns.lineplot(data=gresearch_crypto_df_sample, x='Datetime', y='Count',hue='Asset_Name', ax=ax)\nplt.show()","d42f5fdf":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# distribution for Asset_Name with respect to Volume\nsns.barplot(data=gresearch_crypto_df_sample, x='Asset_Name', y='Volume',ax=ax)\nplt.show()","6262b0a7":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# trend for Asset_Name with respect to Volume\nsns.lineplot(data=gresearch_crypto_df_sample, x='Datetime', y='Volume',hue='Asset_Name', ax=ax)\nplt.show()","13a3e14c":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# distribution for Asset_Name with respect to High\nsns.barplot(data=gresearch_crypto_df_sample, x='Asset_Name', y='High',ax=ax)\nplt.show()","868f3d81":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# trend for Asset_Name with respect to High\nsns.lineplot(data=gresearch_crypto_df_sample, x='Datetime', y='High',hue='Asset_Name', ax=ax)\nplt.show()","e9e988fb":"# setting the dimensions of the plot\nfig, ax = plt.subplots(figsize=(17,8))\n# distribution for Asset_Name with respect to Target\nsns.boxplot(data=gresearch_crypto_df_sample, x='Asset_Name', y='Target',ax=ax)\nplt.show()","d9687e7e":"# convert timestamp to Datetime for further analysis\ngresearch_crypto_df['Datetime'] = pd.to_datetime(gresearch_crypto_df['timestamp'], unit='s')","297f477d":"# Lookup asset name and return asset series\ndef asset_lookup (asset_name):\n    # check for Asset_Name\n    crypto_asset =gresearch_crypto_df.loc[gresearch_crypto_df['Asset_Name'] == asset_name]\n    # drop all other columns as of now\n    crypto_asset_df= crypto_asset.drop(columns=['timestamp','Asset_ID','Count','Open','High','Low','Close','Volume','VWAP','Weight','Asset_Name'], axis=1)\n    # sort by Datetime and set index\n    crypto_asset_df = crypto_asset_df.sort_values('Datetime')\n    crypto_asset_df = crypto_asset_df.groupby('Datetime')['Target'].sum().reset_index()\n    crypto_asset_df = crypto_asset_df.set_index('Datetime')\n    # group the data by start of month\n    return crypto_asset_df['Target'].resample('MS').mean()","3b34dd4f":"# check for stationarity using ADF Test for a given asset series\ndef asset_stationarity (asset_series):\n    result = adfuller(asset_series)\n    print('ADF Statistic: %f' % result[0])\n    print('p-value: %f' % result[1])\n    print('Critical Values:')\n    for key, value in result[4].items():\n     print('\\t%s: %.3f' % (key, value))","f3da14cc":"# visualization for trend,seasonality and residual for a given asset series\ndef asset_decompose (asset_series):\n    rcParams['figure.figsize'] = 18, 8\n    decomposition = sm.tsa.seasonal_decompose(asset_series, model='additive')\n    fig = decomposition.plot()\n    plt.show()","c6b9fe92":"# visualization for Bitcoin trend\nbitcoin = asset_lookup('Bitcoin')\nbitcoin.plot(figsize=(15, 6))\nplt.show()","091116f7":"# visualization for trend,seasonality and residual\nasset_decompose(bitcoin)","4093feaa":"# check for stationarity using ADF Test\nasset_stationarity(bitcoin)","e9b43a59":"# visualization for trend\nethereum = asset_lookup('Ethereum')\nethereum.plot(figsize=(15, 6))\nplt.show()","5345f3d7":"# visualization for trend,seasonality and residual\nasset_decompose(ethereum)","26c68f83":"# check for stationarity using ADF Test\nasset_stationarity(ethereum)","8239956a":"# visualization for trend\ncardano = asset_lookup('Cardano')\ncardano.plot(figsize=(15, 6))\nplt.show()","1ec2291b":"# visualization for trend,seasonality and residual\nasset_decompose(cardano)","44d275a8":"# check for stationarity using ADF Test\nasset_stationarity(cardano)","f714f2b4":"# visualization for trend\nbinancecoin = asset_lookup('Binance Coin')\nbinancecoin.plot(figsize=(15, 6))\nplt.show()","3f36931c":"# visualization for trend,seasonality and residual\nasset_decompose(binancecoin)","0c0f6593":"# check for stationarity using ADF Test\nasset_stationarity(binancecoin)","3c7ad219":"# visualization for trend\ndogecoin = asset_lookup('Dogecoin')\ndogecoin.plot(figsize=(15, 6))\nplt.show()","83583275":"# visualization for trend,seasonality and residual\nasset_decompose(dogecoin)","5dd9fe7c":"# check for stationarity using ADF Test\nasset_stationarity(dogecoin)","6a852575":"thank_you_str=\"Thanks,Happy Learning,Collaboration,Thankyou,Keep Learning\"\n# create WordCloud with converted string\nwordcloud = WordCloud(width = 1000, height = 500, random_state=1, background_color='white', collocations=True).generate(thank_you_str)\nplt.figure(figsize=(20, 20))\nplt.imshow(wordcloud) \nplt.axis(\"off\")\nplt.show()","275174e9":"---\n**Q: What does data looks like for train dataset?**\n\n---","3811f487":"---\n**Q: What is the trend for Asset_Name with respect to Volume?**\n\n---","7805ba23":"---\n**Q: What is the trend, seasonality and residuals for Ethereum with respect to Target?**\n\n---","eaf88065":"Need to merge train_df and asset_details_df","d66d5154":"Volume: The number of cryptoasset units traded during the minute\n\nDogecoin appears to be the leader.","bd801ee5":"High: The highest USD price during the minute\n\nBitcoin appears to be the leader.","d522c9d3":"**Problem Statement:**\n\n* Over $40 billion worth of cryptocurrencies are traded every day. \n * They are among the most popular assets for speculation and investment, yet have proven wildly volatile. \n * Fast-fluctuating prices have made millionaires of a lucky few, and delivered crushing losses to others. \n* Could some of these price movements have been predicted in advance?\n\n* Use machine learning expertise to forecast short term returns in 14 popular cryptocurrencies. \n* Dataset contains millions of rows of high-frequency market data dating back to 2018 which can be used to build ML model. \n* Once the submission deadline has passed, final score will be calculated over the following 3 months using live crypto data as it is collected. \n \n---\n \n**Main Dataset:**\n\n* **train.csv** file contains training set.\n* **example_test.csv** file includes example of the data that will be delivered by the time series API.\n* **example_sample_submission.csv** file includes example of the data that will be delivered by the time series API. The data is just copied from train.csv.\n* **asset_details.csv** file provides the real name and of the cryptoasset for each Asset_ID and the weight each cryptoasset receives in the metric.\n* **supplemental_train.csv**- After the submission period is over this file's data will be replaced with cryptoasset prices from the submission period.\n\n**gresearch_crypto** - An unoptimized version of the time series API files for offline work. You may need Python 3.7 and a Linux environment to run it without errors.\n\n---","de6b1ba9":"---\n**Q: What is the distribution for Asset_Name with respect to Count?**\n\n---","bd2ade0f":"---\n# G-Research Crypto Forecasting - EDA\n\n---","45e6cfd0":"**train dataset data description:**\n\n* There are no missing values for timestamp and appears to be having normal distribution of datapoints.\n* There are no missing values for Asset_ID and appears to be having normal distribution of datapoints.\n* There are no missing values for Count, Open, High, Low, Close and Volume but appears to be having skewed distribution of datapoints.\n* There are missing values for VWAP and Target but appears to be having normal distribution of datapoints.","32686a64":"* Based on EDA and ADF test for top 5 crypto asset, most of the data point appears to be stationary.\n\n* And most of the top 5 assets are on the rise relatively and appears to be having good run.\n\n* Bitcoin crypto asset is kind of outlier in overall scenario and scheme of things.\n\n* New crypto asset may arrive in 2022 based on rising popularity of Cryptocurrency.\n\n* Cryptocurrency sector will continue to transition to become main asset class in 2022.","4605db87":"---\n**Q: What is the distribution for Asset_Name with respect to Weight?**\n\n---","72b83308":"---\n**Q: What is the trend, seasonality and residuals for Bitcoin with respect to Target?**\n\n---","a6df5666":"---\n**Q: What does data looks like for asset_details dataset?**\n\n---","dd3d4b0a":"Target: 15 minute residualized returns\n\nBitcoin appears to be having the most fluctuations followed by Dogecoin and Ethereum Classic.","008d7fc3":"**train dataset information:**\n\n* There are 24236806 data points (rows) and 10 feature (column) in train dataset.\n* There are seven columns which are of numerical float type and three column of numerical int type.\n* There are missing values (non-null count is not same) for VWAP and Target columns.","6fcde05a":"Count: The number of trades that took place this minute\n\nBitcoin, Ethereum,Cardano, Binance Coin and Dogecoin apperas to be having higher count.","377fe4f8":"---\n**Q: What is the trend for Dogecoin with respect to Target?**\n\n---","ed437ca8":"Let us further explore trend for Bitcoin, Ethereum,Cardano, Binance Coin and Dogecoin with respect to Target.","fe6febce":"---\n**Thank you and Happy Learning.**\n\n---","69319905":"---\n**Q: What is the structure of train dataset?**\n\n---","589ddf78":"---\n**Q: What is the statistics description for train dataset?**\n\n---","8466c74b":"Handle missing value, will drop them","18519a5d":"| No. | Feature Name | Description of the feature |\n| :-- | :--| :--| \n|01| **timestamp**   | A timestamp for the minute covered by the row |\n|02| **Asset_ID** | An ID code for the cryptoasset                 |\n|03| **Count**   | The number of trades that took place this minute                 |\n|04| **Open**   | The USD price at the beginning of the minute  |\n|05| **High**   | The highest USD price during the minute|\n|06| **Low**   | The lowest USD price during the minute  |\n|07| **Close**   | The USD price at the end of the minute|\n|08| **Volume**   | The number of cryptoasset units traded during the minute|\n|09| **VWAP**   | The volume weighted average price for the minute  |\n|10| **Target**   | 15 minute residualized returns|","25cb9642":"---\n**Q: What is the distribution percentage for Asset_Name in sample dataset?**\n\n---","6ff59fae":"---\n**Q: What is the trend for Bitcoin with respect to Target?**\n\n---","b88cf399":"---\n**Q: What is the distribution for Asset_Name with respect to Volume?**\n\n---","0d10aff4":"---\n**Q: What is the trend for Asset_Name with respect to High?**\n\n---","1c0a580a":"---\n**Importing Libraries:**\n\n* To get started we will use Python for data pre-processing and data analysis.\n\n* Import python libraries as necessary to get started for data load and later import other libraries as needed\n\n---","ab6c5636":"---\n**Q: What is the trend, seasonality and residuals for Binance Coin with respect to Target?**\n\n---","e89f9221":"---\n**Q: What is the trend for Ethereum with respect to Target?**\n\n---","8299df32":"---\n**Q: What is the distribution for Asset_Name with respect to High?**\n\n---","93b266e7":"---\n# Summary\n\n---","93a049d6":"Top 5 cryptoasset (Bitcoin, Ethereum, Cardano, Binance Coin and Dogecoin) seems to have similar distribution in sample dataset.","84bf14d5":"---\n**Q: What is the distribution for Asset_Name with respect to Target?**\n\n---","6a8f1205":"Bitcoin, Ethereum,Cardano, Binance Coin and Dogecoin appears to be top five crypto assest as per Weight.","b6a3d76c":"---\n**Data Definition:**\n\n---\n\n* **train.csv:** This dataset contains information on historic trades for several cryptoassets.","6eb979ca":"---\n**Q: What is the trend, seasonality and residuals for Cardano with respect to Target?**\n\n---","09811dc8":"---\n**Q: What is the trend for Binance Coin with respect to Target?**\n\n---","80800e6a":"---\n**Q: What is the trend for Asset_Name with respect to Count?**\n\n---","5b1dc1ec":"---\n**Q: What is the trend, seasonality and residuals for Dogecoin with respect to Target?**\n\n---","6a0546e0":"---\n**Q: What is the trend for Cardano with respect to Target?**\n\n---","afc84abb":"---\n# Data Definition\/Description\n\n---","11d8c9a6":"---\n# Data Analysis\/EDA\n\n---"}}