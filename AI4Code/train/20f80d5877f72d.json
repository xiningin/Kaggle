{"cell_type":{"e920674b":"code","403654bc":"code","65282c0c":"code","dd20334e":"code","dcac60fe":"code","22f6944b":"code","f2766e6f":"code","b037385d":"code","a2c18e6e":"code","c05c6eb5":"code","aed875d9":"code","79c98a6e":"code","85707991":"code","05a1e336":"code","da68f178":"code","c9f92f78":"code","a03fda49":"code","752d8075":"code","91814e6e":"code","366f0ade":"code","b7dfcd89":"code","08e49cae":"code","1dc21540":"code","210e92a9":"code","afd216e3":"code","b04fd3aa":"code","6e953ef7":"code","589d3fdf":"code","a9158312":"code","8a33ad65":"code","cf51a67f":"code","2f87454f":"code","95b3fd73":"code","496dfa8f":"code","f8fa5620":"code","8802c6ba":"markdown","103467bc":"markdown","42de2876":"markdown","0eacd7e1":"markdown"},"source":{"e920674b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nfrom sklearn import datasets, linear_model\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport statsmodels.api as sm\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","403654bc":"rng= np.random.RandomState(1)\nrng","65282c0c":"X1=[rng.randint(500,2000) for i in rng.rand(50)]\nX1\n","dd20334e":"X2=[rng.randint(100,500) for i in rng.rand(50)]\nX2","dcac60fe":"type(X2)","22f6944b":"pd.Series(X2)*3","f2766e6f":"X3=pd.Series(X2)*3+rng.rand(50)\nX3","b037385d":"#testings\nX4=pd.Series(X2)*3+rng.rand(50)\nX4","a2c18e6e":"rng.rand(50)+3*3\n","c05c6eb5":"Y=(X3*X2)*0.006\nY","aed875d9":"dataset= pd.DataFrame({'X1':X1,\n                      'X2':X2,\n                      'X3':X3,\n                      'Y':Y})\ndataset","79c98a6e":"print(\"Correlation between X1 and Y\")\ndataset[['X1','Y']].corr()","85707991":"print(\"Correlation between X1 and Y\")\ndataset[['X2','Y']].corr()","05a1e336":"print(\"Correlation between X1 and Y\")\ndataset[['X3','Y']].corr()","da68f178":"dataset.plot(kind='scatter',x='X1',y='Y',\n           title=\"Scatter plot of X1 against Y\",\n            figsize=(12,8))","c9f92f78":"dataset.plot(kind='scatter',x='X2',y='Y',\n           title=\"Scatter plot of X2 against Y\",\n            figsize=(12,8))","a03fda49":"# separate data into dependent (Y) and independent(X1 and X2) variables\nX_data = dataset[['X1','X2']]\nY_data = dataset['Y']","752d8075":"reg= linear_model.LinearRegression()","91814e6e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_data, Y_data,test_size=0.3)","366f0ade":"X_train.columns","b7dfcd89":"reg.fit(X_train, y_train)","08e49cae":"reg.coef_","1dc21540":"print('Regression Coeffient')\npd.DataFrame(reg.coef_ ,index=X_train.columns,columns=['coeffient'])","210e92a9":"reg.intercept_","afd216e3":"\"\"\"\"from sklearn.model_selection import KFold # import KFold\nkf = KFold(n_splits=2)\nkf.get_n_splits(X1)          \nprint (kf)\"\"\"","b04fd3aa":"# Perform 6-fold cross validation\n\"\"\"\"scores = cross_val_score(model, df, y, cv=6)\nprint ('Cross validation:'), scores\"\"\"","6e953ef7":"# Make cross validated predictions\n\"\"\"\"predictions = cross_val_predict(model, df, y, cv=6)\nplt.scatter(y, predictions)\"\"\"","589d3fdf":"import seaborn\nw = 12\nh = 10\nd = 70\nplt.figure(figsize=(w, h), dpi=d)\nseaborn.residplot(X1, Y)\nplt.savefig(\"out.png\")","a9158312":"reg.intercept_","8a33ad65":"#R^2\nreg.score(X_test,y_test) ","cf51a67f":"predicted = reg.predict(X_test)\nda = pd.DataFrame({'Actual': y_test, 'Predicted': predicted})\nda","2f87454f":"l=581\np=355\nq = {'x':[l],'y':[p]}\nnew=pd.DataFrame(q)\nreg.predict(new)","95b3fd73":"X_data\nmean_absolute_error(y_test, predicted)","496dfa8f":"mean_squared_error(y_test, predicted)","f8fa5620":"rms = sqrt(mean_squared_error(y_test, predicted))\nrms","8802c6ba":"X3 is missing a random vector.","103467bc":"lienear correlation 1\nnot correlation -1","42de2876":"Series is a one-dimensional labeled array capable of holding data of any type (integer, string, float, python objects, etc.). The axis labels are collectively called index.","0eacd7e1":"Y = -1250.5853581479378 + -0.071288 X1 + 10.583246 X2"}}