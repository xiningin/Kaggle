{"cell_type":{"8d13266b":"code","d486eaf9":"code","1ab5f9e9":"code","5082b036":"code","8b8da6ab":"code","569fdbe5":"code","a19b291e":"markdown","f8b1aa30":"markdown"},"source":{"8d13266b":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","d486eaf9":"# list of (weight, submission file path)\n# supports n number of files\n# make sure the weights sum up to 1 always.\nweight_model_paths_pairs = [\n    (.01, '..\/input\/submission-1\/submission (7).csv'),\n    (.01, '..\/input\/submission-2\/Blend_Submission.csv'),\n    (.01, '..\/input\/submission-3\/stacked_submission.csv'),\n    (.02, '..\/input\/submission-4\/submission_Final.csv'),\n    (.95, '..\/input\/submission5\/stacked_submission (1).csv')]","1ab5f9e9":"# verify weights sum up to ~1\nres = 0\nfor x, y in weight_model_paths_pairs:\n    res = res + x;\nprint(res)","5082b036":"targets = ['claim']\n\nsubmissions = []\nfor weight, path in weight_model_paths_pairs:\n    df = pd.read_csv(path)\n    df[targets] = df[targets] * weight\n    submissions.append(df)\n\nensembled_output = pd.concat(submissions).groupby(['id']).sum().reset_index()","8b8da6ab":"ensembled_output.head()","569fdbe5":"ensembled_output.to_csv('submission_weighted_ensemble_1.csv', index=False)","a19b291e":"### Credits\n\n1. https:\/\/www.kaggle.com\/vishwas21\/tps-sep-21-3-level-custom-stacking\n2. https:\/\/www.kaggle.com\/dlaststark\/tps-sep-what-am-i-doing\n3. https:\/\/www.kaggle.com\/somayyehgholami\/1-tps-sep-21-autogluon-missing-values\n4. https:\/\/www.kaggle.com\/mlanhenke\/tps-09-simple-basic-stacking-lgbm-catb-xgb\n5. https:\/\/www.kaggle.com\/mlanhenke\/tps-09-simple-blend-stacking-xgb-lgbm-catb\n\nUpvote for support!! and kudos to the above mentioned notebooks!!","f8b1aa30":"### Intuition: Multiple models lead a better model.\u00b6\n\n#### Open question:\n1. How to decide the weights for different model outputs?\n  1. One way is weight the better performing model more."}}