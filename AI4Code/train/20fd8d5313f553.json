{"cell_type":{"d2427197":"code","8035d7d4":"code","c5dc55a6":"code","c0cec8e2":"code","cc4efbc3":"code","43b2f77b":"code","5be13725":"code","9ddd1deb":"code","c8874a78":"code","b8bc5ece":"code","716aaed5":"code","049d19e5":"code","a577dc78":"code","0f65b676":"code","e4baa2be":"code","bc3486cd":"code","f3252db6":"markdown","925535e4":"markdown","4830410b":"markdown","073a00e2":"markdown","fca2ccfc":"markdown","fd6c966b":"markdown","b41f1d49":"markdown","b9c933dd":"markdown","7fd16da2":"markdown","5c9af5da":"markdown","a4380602":"markdown","831fa398":"markdown","871fc7f7":"markdown","5b7a940a":"markdown","85c2cb33":"markdown","c2080a5f":"markdown","691fe5d7":"markdown","c4d4a142":"markdown","db9575de":"markdown","45b0ee23":"markdown","4649fdf7":"markdown","65024772":"markdown","f584f9f9":"markdown","65192401":"markdown","41a31f04":"markdown"},"source":{"d2427197":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n# import plotly.graph_objects as go\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfiles = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        files.append(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\ndf = pd.read_csv(files[0])","8035d7d4":"df.head()","c5dc55a6":"df.describe(include = 'all')","c0cec8e2":"df.isnull().sum()","cc4efbc3":"df.groupby('PARTY').count()['NAME'].sort_values(ascending=False)","43b2f77b":"df_NOTA = df[df['PARTY']!='NOTA']","5be13725":"constituencies = df.groupby('STATE')['CONSTITUENCY'].nunique().to_frame().sort_values('CONSTITUENCY',ascending = False).reset_index()\n# plt.style.use('ggplot')\n# constituencies.plot(kind = 'bar', \n#                     figsize=(10,6),\n#                     width = 0.8)\nconstituencies\npx.bar(constituencies, x = 'STATE', y = 'CONSTITUENCY')","9ddd1deb":"party_stats = df_NOTA['PARTY'].value_counts().to_frame().reset_index().rename(columns = {'index':'PARTY','PARTY':'Total Candidates'})#.sort_values('PARTY',ascending = False)\n#party_stats[party_stats>100]\n\nparty_stats\n# plt.style.use('seaborn')\n# party_stats.head(60).plot(kind = 'bar', \n#                     figsize=(15,15))\n\npx.bar(party_stats, x = 'PARTY', y = 'Total Candidates')","c8874a78":"states_with_highest_candidates_per_const = df_NOTA[['STATE', 'CONSTITUENCY', 'NAME']].groupby(['STATE','CONSTITUENCY']).count().groupby('STATE').mean().sort_values(by = 'NAME', ascending = 0)\nstates_with_highest_candidates_per_const = states_with_highest_candidates_per_const.reset_index()\nstates_with_highest_candidates_per_const\npx.bar(states_with_highest_candidates_per_const, x = 'STATE', y = 'NAME')\n\n# states_with_highest_candidates_per_const.plot(kind = 'bar',x = 'STATE', y = 'NAME')","b8bc5ece":"# df_NOTA\nvoteshare = df_NOTA[['PARTY','TOTAL\\nVOTES']].groupby('PARTY').sum()\n# voteshare['share']\nvoteshare = voteshare.sort_values('TOTAL\\nVOTES', ascending = 0).reset_index()\n# voteshare\n\nvoteshare['ConsolidatedParty'] = [voteshare.iloc[x]['PARTY'] if x <= 10 else 'OTHER' for x in voteshare.index.values] \n  \nvoteshare = voteshare[['ConsolidatedParty','TOTAL\\nVOTES']].groupby('ConsolidatedParty').sum().reset_index().sort_values('TOTAL\\nVOTES', ascending = 0).reset_index()\nvoteshare['Voter Percentage Share'] = voteshare['TOTAL\\nVOTES'] * 100 \/ voteshare['TOTAL\\nVOTES'].sum(axis = 0)\n# for index, row in voteshare.iterrows():\n#     if index <= 4:\n#         row['ConsolidatedParty'] = row['PARTY'] \n#     else:\n#         row['ConsolidatedParty'] = 'OTHER'\n\nsns.set_context('notebook')\n\nsns.set_palette('pastel')\nsns.set_style('whitegrid')\nsns.set_style('ticks',\n              {'x_ticks.major.size':8,\n               'y_ticks.major.size':8})\nvoteshare.plot(kind = 'bar', \n               x = 'ConsolidatedParty', \n               y = 'Voter Percentage Share',\n              figsize = (10,10))","716aaed5":"tmp = df_NOTA[df_NOTA['WINNER'] == 1].groupby('PARTY').count().reset_index()[['PARTY','WINNER']].sort_values(by = 'WINNER', ascending = False)\npx.pie(tmp, values='WINNER', names='PARTY', title='Elected Candidates by Party')\n","049d19e5":"df_NOTA['CRIMINAL\\nCASES'] = df_NOTA['CRIMINAL\\nCASES'].replace({'Not Available': 0}).astype(int)\n\ndef update_education(row):\n    if row['EDUCATION'] in ['Illiterate','Not Available']:\n        return 'Iliterate\/NA'\n    if row['EDUCATION'] in ['5th Pass','8th Pass','10th Pass','12th Pass']:\n        return 'School\/College Level'\n    elif row['EDUCATION'] in ['Graduate Professional','Graduate']: \n        return 'Graduate'\n    elif row['EDUCATION'] in ['Post Graduate\\n','Post Graduate', 'Doctorate']:\n        return 'Post Graduate\/Doctorate'\n    else:\n        'Literate'\n        \ndf_NOTA['EDUCATION_NEW'] = df_NOTA.apply(update_education,axis =1)","a577dc78":"tmp = df_NOTA.groupby('EDUCATION_NEW').count()['WINNER'].reset_index().sort_values(by = 'WINNER', ascending = False)\n# tmp.plot(kind = 'bar', x = 'EDUCATION_NEW')\nsns.set_context('notebook')\n\nsns.set_style('whitegrid')\nsns.set_style('ticks',\n              {'x_ticks.major.size':8,\n               'y_ticks.major.size':8})\nsns.set(rc={'figure.figsize':(10,8)})\nsns.set_palette('pastel')\n\nax = sns.barplot(x = 'EDUCATION_NEW', \n            y = 'WINNER',\n            data = tmp)\n\n\nax.set(xlabel = 'Education')","0f65b676":"temp = df_NOTA.groupby(['AGE','EDUCATION_NEW']).mean()['CRIMINAL\\nCASES'].to_frame().reset_index()\n\neducation_ranking = ['Illiterate',\n                     'School\/College Level',\n                     'Graduate',\n                     'Post Graduate\/Doctorate',\n                     'Literate']\n\n\nf, ax = plt.subplots(figsize=(10,10))\n# ax.set_ylim(0,50)\nsns.lineplot(x=\"AGE\", y=\"CRIMINAL\\nCASES\",\n                hue=\"EDUCATION_NEW\", #size=\"depth\",\n#                 palette=\"pastel\",\n                hue_order=education_ranking,\n                data=temp,\n                ax = ax\n#                 marker=\"+\"\n               )","e4baa2be":"sns.catplot(x=\"GENDER\",\n            y=\"AGE\", \n            hue=\"WINNER\", \n            kind=\"box\", data=df_NOTA);\n\n# sns.distplot(df_NOTA['AGE'], \n#              kde=False, \n#              color=df_NOTA['GENDER'])","bc3486cd":"# plt.figure(figsize=(15,50))\ng = sns.catplot(x=\"CATEGORY\", \n            kind=\"count\", \n            palette=\"ch:.25\",\n            hue=\"WINNER\",\n            data=df_NOTA,\n            legend_out=True\n           )\n# plt.show()\ng.fig.set_size_inches(6, 4)\ng.set_axis_labels(\"Category\", \"Number of Candidates\")","f3252db6":"#### Average Criminal Cases By Education and Age","925535e4":"* Median age of males is higher than females for winners and losers\n* Among the same gender, median age of winners is higher than losers","4830410b":"* Most of the candidates are Graduates, while number of school\/college level educated lawmakers is also significantly high","073a00e2":"On an average, the constituencies in Dadara & Nagar Haveli have the highest candidates per constituency while Himachal Pradesh has the least candidates per constituency.","fca2ccfc":"#### Educational Background of Candidates","fd6c966b":"#### Elected candidates by Political Party","b41f1d49":"#### Voteshare","b9c933dd":"#### Overall Stats","7fd16da2":"In 2019, elections candidates from BJP have received massive ~40% votershare across the nation. Almost double the voteshare by next major party, INC.","5c9af5da":"#### Distribution of candiates by Gender and Winning status ","a4380602":"### Imports & Data I\/O","831fa398":"#### Average candidates per constituency by State","871fc7f7":"Clearly we have NAs for various columns. Lets dig deeper to find more about the null values.","5b7a940a":"If you know about Indian Politics, you would have heard BJP and INC parties. But NOTA is not a party and rather means, **\"None of the above\"**. Thus people chose to not vote for any candidate and thus we have NULL values in the dataset for those rows.","85c2cb33":"* BJP has won the elections by a whopping majority by winning 55.7% (300) of the electoral seats. ~75% of the fielded candidates from BJP won the elections!! \n* Even despite contesting elections from ~400+ seats, INC could manage to win only 52 seats.","c2080a5f":"Number of constituencies in Indian states are determined as per the State's population and being the most populous state ***Uttar Pradesh*** has the highest number of constituencies","691fe5d7":"#### Total constituencies per State","c4d4a142":"* Maximum Female candidates are between 45-50 years of age\n* Maximum Male candidates are between 57.5-62.5 years of age","db9575de":"Some observations regarding dataset:\n* 2014 unique candidates contested elections from 539 unique constituencies\n* BJP fielded maximum number of candidates\n* Average age of candidates is ~52\n* Most of the candidates are post-graduates","45b0ee23":"#### Caste Representation","4649fdf7":"### Understanding Dataset\n","65024772":"* ***BJP*** (Bharatiya Janata Party) and ***INC*** (Indian National Congress), the 2 national parties have fielded 400+ candidates each across India.\n* Independent candidates with no association with any party form the 3rd largest group.","f584f9f9":"### Data Exploration","65192401":"#### Null Values in the Dataset","41a31f04":"#### Candidates per Political party"}}