{"cell_type":{"026ae593":"code","ffa4007f":"code","cc01185a":"code","a75a3e26":"code","5ace47ac":"code","8f9e7069":"code","73e27a9d":"code","67ffff49":"code","7a2ae759":"code","301aa21c":"code","ace0ba8b":"markdown","eb550ad4":"markdown","66aba647":"markdown","1d19a347":"markdown","39112dee":"markdown","69e9b367":"markdown","a4034a7b":"markdown","4397d65f":"markdown","dcf02a96":"markdown","8ef345ed":"markdown","e1d05e8a":"markdown","ce98ddc0":"markdown","6174d943":"markdown","f4215dd5":"markdown","773392ae":"markdown","e42c6ac4":"markdown","feaf83a0":"markdown","0e61065d":"markdown","fd12e1e0":"markdown","18b098c9":"markdown","1d248ecc":"markdown"},"source":{"026ae593":"# Standard imports\nimport numpy as np \nimport pandas as pd \nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load data\ndata = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\n\n# Extract questions, remove questions from data\nquestions = data.iloc[0, :]\ndata = data.drop(data.head(1).index)","ffa4007f":"# Helper functions\n\ndef convert_mc_question(q_num, df):\n    \"\"\"\n    Convert MC question to percent replied for each sub answer\n    \n    Args:\n        q_num (str): question number to convert (i.e. 'Q7')\n        df (pd.DataFrame): dataframe to pull questions from\n    \n    Returns:\n        res (pd.Series): % replied yes to sub MC question\n        \n    \"\"\"\n    \n    # Get % replied yes for each possible answer to MC question\n    sub = df[df.columns[df.columns.str.contains(q_num)].tolist()].copy()\n    pct = sub.count(axis = 0) \/ sub.shape[0]\n    cols = sub.fillna(method='bfill', axis=0).iloc[0, :]\n    res = pd.Series(data = pct.values, index = cols.values)\n\n    return res\n\ndef comp_mc_questions_age(q_num, df):\n    \"\"\"\n    Create dataframe to show % replied yes to each sub component of a MC\n        question by the two age groups considered\n    \n    Args:\n        q_num (str): question number to convert (i.e. 'Q7')\n        df (pd.DataFrame): dataframe to pull questions from\n        \n    Returns:\n        q_df (pd.DataFrame): df with value for question response filtered by age\n    \n    \"\"\"\n    \n    # Create young and old groupings\n    young = df[df['Q1'].isin(['18-21','22-24'])].copy()\n    old = df[~df['Q1'].isin(['18-21','22-24'])].copy()\n    \n    # Get % replied yes for each possible answer to MC question\n    young_srs = convert_mc_question(q_num, young)\n    old_srs = convert_mc_question(q_num, old)\n    \n    # Create dataframe compatible with sns plotting functions\n    young_df = pd.DataFrame({'age': ['18-24'] * len(young_srs), 'value': young_srs})\n    old_df = pd.DataFrame({'age': ['25+'] * len(old_srs), 'value': old_srs})\n    res_df = pd.concat([young_df, old_df], axis = 0)\n    res_df = res_df.reset_index()\n    res_df.columns = ['Category', 'Age', 'Value']\n    \n    return res_df\n\ndef get_mc_counts(q_num, df, col_subset = None):\n    \"\"\"\n    Get number of questions respondent responded yes to for a particular question, \n        segmented by age\n        \n    Args:\n        q_num (str): question number to convert (i.e. 'Q7')\n        df (pd.DataFrame): dataframe to pull questions from\n        col_subset (list): list of specific responses to consider in aggregation (None\n            if not subsetting)\n\n    Returns:\n        res (dict): dict containing\n            young (pd.Series): \n    \n    \"\"\"\n    \n    # Create young and old groupings\n    young = df[df['Q1'].isin(['18-21','22-24'])].copy()\n    old = df[~df['Q1'].isin(['18-21','22-24'])].copy()  \n    \n    # Get subsetted dataframe with relevant questions\n    sub_young = young[young.columns[young.columns.str.contains(q_num)].tolist()].copy()\n    sub_old = old[old.columns[old.columns.str.contains(q_num)].tolist()].copy()\n    \n    # Subset to certain responses of interest\n    if col_subset != None:\n        sub_young = sub_young[col_subset].copy() \n        sub_old = sub_old[col_subset].copy() \n\n    # Get sum for each respondent (row)\n    young_sum = sub_young.count(axis = 1)\n    old_sum = sub_old.count(axis = 1)\n    \n    # Combine young and old series\n    res = {}\n    res['young'] = young_sum\n    res['old'] = old_sum\n    \n    return res","cc01185a":"# Survey age group distribution plot\nbach = data[data['Q4'] == 'Bachelor\u2019s degree'].copy()\nx_order = ['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69','70+']\nfig, ax = plt.subplots(figsize = (15, 5))\nsns.countplot(data = bach, x = 'Q1', order = x_order)\nplt.title('Age distribution amongst holders of bachelor\\'s degrees')\nax.set_xlabel('Age (Years)')\nax.set_ylabel('Count')\nplt.axvline(1.5, color = 'darkblue')","a75a3e26":"# Programming language knowledge amongst younger and older gen\nq7 = comp_mc_questions_age('Q7', bach)\n\nsns.catplot(x = 'Category', y='Value', \n           hue = 'Age',data=q7, \n            kind='bar', aspect=15\/5)\nplt.ylabel('% of respondents')\nplt.xlabel('Programming language')\nplt.title('Programming language knowledge by age group')","5ace47ac":"# How many respondents know multiple programming languages\nq7_counts = get_mc_counts('Q7', bach)\nyoung_df = pd.DataFrame({'Age': '18-24', 'Count': q7_counts['young']})\nold_df = pd.DataFrame({'Age': '25+', 'Count': q7_counts['old']})\ncomp_df = pd.concat([young_df, old_df], axis = 0)\n\nsns.boxplot(x = 'Age', y = 'Count', data = comp_df)\ncomp = pd.DataFrame({'18-24':q7_counts['young'].describe(), \n                     '25+':q7_counts['old'].describe()})","8f9e7069":"# Counts for similiar DS languages (Python, R, MATLAB, Julia)\nq7_ds_counts = get_mc_counts('Q7', bach, col_subset = ['Q7_Part_1', 'Q7_Part_2', \n                                                      'Q7_Part_8', 'Q7_Part_11'])\nyoung_ds_df = pd.DataFrame({'Age': '18-24', 'Count': q7_ds_counts['young']})\nold_ds_df = pd.DataFrame({'Age': '25+', 'Count': q7_ds_counts['old']})\ncomp_ds_df = pd.concat([young_ds_df, old_ds_df], axis = 0)\nsns.boxplot(x = 'Age', y = 'Count', data = comp_ds_df)\ncomp_ds = pd.DataFrame({'18-24':q7_ds_counts['young'].describe(), \n                     '25+':q7_ds_counts['old'].describe()})\ncomp_ds","73e27a9d":"# Programming language knowledge amongst younger and older gen\nq17 = comp_mc_questions_age('Q17', bach)\n\nax = sns.catplot(x = 'Category', y='Value', \n           hue = 'Age',data=q17, \n            kind='bar', aspect=15\/5)\nplt.ylabel('% of respondents')\nplt.xlabel('ML technique')\nplt.title('ML technique knowledge by age group')\nax.set_xticklabels(rotation=90)","67ffff49":"# How many respondents know multiple programming languages\nq17_counts = get_mc_counts('Q17', bach)\nyoung_df = pd.DataFrame({'Age': '18-24', 'Count': q17_counts['young']})\nold_df = pd.DataFrame({'Age': '25+', 'Count': q17_counts['old']})\ncomp_df = pd.concat([young_df, old_df], axis = 0)\n\nsns.boxplot(x = 'Age', y = 'Count', data = comp_df)\ncomp = pd.DataFrame({'18-24':q17_counts['young'].describe(), \n                     '25+':q17_counts['old'].describe()})","7a2ae759":"# Programming language knowledge amongst younger and older gen\nq26 = comp_mc_questions_age('Q26_A', bach)\n\nax = sns.catplot(x = 'Category', y='Value', \n           hue = 'Age',data=q26, \n            kind='bar', aspect=15\/5)\nplt.ylabel('% of respondents')\nplt.xlabel('Cloud computing platform')\nplt.title('Cloud computing platform knowledge by age group')\nax.set_xticklabels(rotation=90)","301aa21c":"# How many respondents know multiple programming languages\nq26_counts = get_mc_counts('Q26_A', bach)\nyoung_df = pd.DataFrame({'Age': '18-24', 'Count': q26_counts['young']})\nold_df = pd.DataFrame({'Age': '25+', 'Count': q26_counts['old']})\ncomp_df = pd.concat([young_df, old_df], axis = 0)\n\nsns.boxplot(x = 'Age', y = 'Count', data = comp_df)\ncomp = pd.DataFrame({'18-24':q26_counts['young'].describe(), \n                     '25+':q26_counts['old'].describe()})","ace0ba8b":"Both groups appear realtively familiar with the set of surveryed techniques. Interestingly, the 18-24 group appears to use neural network models, and more commonly used statistical learning models (regression, decision trees) more commonly than the 25+ group.","eb550ad4":"First, we aim to create a suitable grouping for the younger and older subset of the community with bachelor's degrees. Looking at the possible discrete separations we could create, the split between 18-24 and 25+ results in the most even split of total respondents with 3990 in the 18-24 category and 2998 respondents in the 24+ category. This split also has some intuitive appeal, as the 18-24 group largely comprises students and professionals in relatively junior roles or apsiring for them, while the 25+ group are generally more settled into their career.","66aba647":"Amongst holders of bachelor's degrees, how do younger, aspiring, data science professionals compare to their more seasoned counterparts? In this notebook, we set out to explore the differences in tools, technologies, and techniques utilized by these two groups. We focus in particular on the subset of survey respondents who hold a bachelor's degree, with the goal of exploring the idea that younger data science professionals without graduate degrees are under increasing pressure to learn a vast array of tools they can add to their resume, in order to remain competitive with the broader community in jop applications (\"stat-stuffing\" hypothesis). On the other hand, we also explore the idea that the respondents in the older subset of bachelor's degree holders are more established in their career, and do not feel the same pressure. ","1d19a347":"The more experienced group of Kagglers seems to regularly use cloud computing platforms more than the younger group. Interestingly, a larger number of respondents in the 25+ group also have no familarity with any of the cloud computing platforms.","39112dee":"### Technologies: Cloud computing platforms","69e9b367":"To understand individual respondent level data among the two groups more deeply, we also examine the distribution of total number of languages each respondent claims familiarity with amongst the two age groupings. The 18-24 group has a higher mean number of langugages reported compared to the 25+ group (2.56 vs 2.22), a higher 75th percentile, and a higher maximum reported number. It does appear the younger generation, as we have defined it, is slightly more focused on learning a large number of programming languages.","a4034a7b":"We note that the average survery responder across the two groups claims to use around two ML techniques on a regular basis, which is another point against the \"stat-stuffing\" hypothesis I thought might be prevelant among the younger survey responders. The distributions in general are also nearly identical, with a lone outlier in the 25+ age grouping claiming regular use of all 11 non None ML techniques slightly skewing the 25+ distribution.","4397d65f":"# Introduction","dcf02a96":"### Tools: Programming languages","8ef345ed":"# Table of Contents\n\n* [1) How to split our age groups?](#section-one)\n* [2) Tools, techniques, and technologies among the two groups](#section-two)\n* [3) Conclusions](#section-three)","e1d05e8a":"Some of the many data science tools!\n![image.png](attachment:image.png)\n\nSource: https:\/\/gcmatos.github.io\/Ecosystem-of-data-science-tools-Geoscientists\/","ce98ddc0":"In this section, we dive into the questions proposed in the introduction given our newly established groups.  ","6174d943":"<a id=\"section-three\"><\/a>\n## 3) Conclusions","f4215dd5":"From the above chart, we can see that the 18-24 group has a larger percentage of respondents claiming to know Python, C, C++, Java and MATLAB. Of the total languages surveyed, this is less than half (5 of 11 excluding None and Other).","773392ae":"<a id=\"section-one\"><\/a>\n## 1) How to split our age groups?","e42c6ac4":"### Techniques: ML models","feaf83a0":"<a id=\"section-two\"><\/a>\n## 2) Tools, techniques, and technologies among the two groups","0e61065d":"Of the subset of questions analyzed, our results seem to point against the \"stat-stuffing\" hypothesis, that younger Kagglers without graduate degrees are learning a large (and sometimes unecessary) amount of tools, techniques, and technologies to remain competitive with their more experienced peers. In fact, they seem to generally be learning a broad range of tools much in the manner of a full-stack data scientist, and doing so in a similar manner to their older counter parts.","fd12e1e0":"In general, it appears that the respondents in the older group are much more familiar with cloud computing technologies, and tend to be familiar with multiple (AWS, GCP, etc.) A likely result of younger Kagglers working as data analysts, or data scientists more focused on insight, and less on scalability of techniques \/ data storage. This point as well, is largely at odds with our \"stat-stuffing\" hypothesis.","18b098c9":"Another interesting question we can tackle is among programming languages that are widely used in data science applications, is there a tendency among our younger group to learn and use more on a regular basis as compared to their older peers? For this questions, we classify those languages as Python, R, Julia, and MATLAB. The answer seems to be there is not a substantial difference, and for the most part, the younger generation does not seem to be stuffing the survey results claiming to use a number of related programming languages on a regular basis (although their resumes may tell a different  story).","1d248ecc":"# Data \"Insecurity\": How are Kagglers compensating for a lack of a graduate degree?"}}