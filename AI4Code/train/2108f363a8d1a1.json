{"cell_type":{"25c276f0":"code","046b3a41":"code","578582d4":"code","58327744":"code","bb5b4dd2":"code","0cc808ba":"code","d7138f3f":"code","ec77fe4e":"markdown","605c38ba":"markdown","27f4d505":"markdown","caf91f20":"markdown","0a6fa677":"markdown","bed94cc7":"markdown","bd16eddd":"markdown","ab6e1018":"markdown"},"source":{"25c276f0":"import os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#Sklearn model packages\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import LabelEncoder","046b3a41":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\n\n#Setting up data to train the model\ny = train_data['Survived']\nfeatures = ['SibSp','Parch','Fare','Sex','Pclass']\nobject_cols = ['Sex']\nX = train_data[features]\n\n#Using label encoder to classify sex data\nlabel_encoder = LabelEncoder()\nlabel_X = X.copy()\nfor col in object_cols:\n    label_X[col] = label_encoder.fit_transform(label_X[col])","578582d4":"ship_model = RandomForestRegressor(random_state=1)\nship_model.fit(label_X, y)","58327744":"X_test = test_data[features]\nX_test_label = X_test.copy()\n\n#Encoding sex for test data\nfor col in object_cols:\n    X_test_label[col] = label_encoder.fit_transform(X_test_label[col])\n\n#Imputing missing data\nmy_imputer = SimpleImputer()\nimputed_X_test = pd.DataFrame(my_imputer.fit_transform(X_test_label))\n\nimputed_X_test.columns = X_test_label.columns","bb5b4dd2":"predictions = ship_model.predict(imputed_X_test)","0cc808ba":"def round(number):\n    if number >= 0.5:\n        return 1\n    else:\n        return 0\n    \n#Converting the predictions to a Pandas series in order to round up or down based on \n#probability of survival.\n\npre_series = pd.Series(predictions)\n\nrounded_results = pre_series.apply(round)","d7138f3f":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': rounded_results})\noutput.to_csv('..\/output\/my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","ec77fe4e":"# **Set-Up**\n**Packages**","605c38ba":"**Saving Results**","27f4d505":"**Loading, Pre-processing Training Data**","caf91f20":"**Fitting Random Forest Model with Training Data**","0a6fa677":"**Pre-processing Test Data**","bed94cc7":"**Converting predictions into submittable contest data**","bd16eddd":"Add age as a feature! (Try different ways to fill in missing columns from intermediate data science tutorial.)\nOther features to add:\nCabin\nTitle\nFamily Size","ab6e1018":"# Processing Test Data"}}