{"cell_type":{"cb06078a":"code","3f56fbc3":"code","09ab7c2f":"code","05e203c7":"code","be05217e":"code","e80fbb80":"code","7933fa77":"code","f8b4f156":"code","f52e7d27":"code","05c1cf94":"code","a765b8e3":"code","14dd7b23":"code","0d2f9e76":"code","8cb0206e":"code","dbd847cf":"code","f97e35a8":"code","31aaf8f2":"code","fdad5d45":"code","187a46cb":"code","47bd585b":"code","79cb5c93":"code","e3599f2a":"code","90228f08":"code","838fdaa2":"code","9f427bab":"code","cecf640d":"code","d4949ba6":"code","5d8301f0":"code","97322e6b":"code","6a3118b3":"code","0be97dde":"code","5e2f0f8c":"markdown","44fda150":"markdown","bf056a1c":"markdown","2007ce44":"markdown","34aee129":"markdown","8ca9695a":"markdown","f36f24b5":"markdown","68d3e360":"markdown","1b2c0b79":"markdown"},"source":{"cb06078a":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))","3f56fbc3":"train = pd.read_csv(\"..\/input\/train.csv\")\ntrain.head()","09ab7c2f":"test = pd.read_csv(\"..\/input\/test.csv\")\ntest.head()","05e203c7":"train.info()","be05217e":"test.info()","e80fbb80":"all = pd.concat([train, test], sort = False)\nall.info()","7933fa77":"#Fill Missing numbers with median\nall['Age'] = all['Age'].fillna(value=all['Age'].median())\nall['Fare'] = all['Fare'].fillna(value=all['Fare'].median())","f8b4f156":"all.info()","f52e7d27":"sns.catplot(x = 'Embarked', kind = 'count', data = all) #or all['Embarked'].value_counts()","05c1cf94":"all['Embarked'] = all['Embarked'].fillna('S')\nall.info()","a765b8e3":"#Age\nall.loc[ all['Age'] <= 16, 'Age'] = 0\nall.loc[(all['Age'] > 16) & (all['Age'] <= 32), 'Age'] = 1\nall.loc[(all['Age'] > 32) & (all['Age'] <= 48), 'Age'] = 2\nall.loc[(all['Age'] > 48) & (all['Age'] <= 64), 'Age'] = 3\nall.loc[ all['Age'] > 64, 'Age'] = 4 ","14dd7b23":"#Title\nimport re\ndef get_title(name):\n    title_search = re.search(' ([A-Za-z]+\\.)', name)\n    \n    if title_search:\n        return title_search.group(1)\n    return \"\"","0d2f9e76":"all['Title'] = all['Name'].apply(get_title)\nall['Title'].value_counts()","8cb0206e":"all['Title'] = all['Title'].replace(['Capt.', 'Dr.', 'Major.', 'Rev.'], 'Officer.')\nall['Title'] = all['Title'].replace(['Lady.', 'Countess.', 'Don.', 'Sir.', 'Jonkheer.', 'Dona.'], 'Royal.')\nall['Title'] = all['Title'].replace(['Mlle.', 'Ms.'], 'Miss.')\nall['Title'] = all['Title'].replace(['Mme.'], 'Mrs.')\nall['Title'].value_counts()","dbd847cf":"#Cabin\nall['Cabin'] = all['Cabin'].fillna('Missing')\nall['Cabin'] = all['Cabin'].str[0]\nall['Cabin'].value_counts()","f97e35a8":"#Family Size & Alone \nall['Family_Size'] = all['SibSp'] + all['Parch'] + 1\nall['IsAlone'] = 0\nall.loc[all['Family_Size']==1, 'IsAlone'] = 1\nall.head()","31aaf8f2":"#Drop unwanted variables\nall_1 = all.drop(['Name', 'Ticket'], axis = 1)\nall_1.head()","fdad5d45":"all_dummies = pd.get_dummies(all_1, drop_first = True)\nall_dummies.head()","187a46cb":"all_train = all_dummies[all_dummies['Survived'].notna()]\nall_train.info()","47bd585b":"all_test = all_dummies[all_dummies['Survived'].isna()]\nall_test.info()","79cb5c93":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(all_train.drop(['PassengerId','Survived'],axis=1), \n                                                    all_train['Survived'], test_size=0.30, \n                                                    random_state=101, stratify = all_train['Survived'])","e3599f2a":"from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier","90228f08":"ada = AdaBoostClassifier(DecisionTreeClassifier(),n_estimators=100, random_state=0)\nada.fit(X_train,y_train)","838fdaa2":"predictions = ada.predict(X_test)","9f427bab":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","cecf640d":"print (f'Train Accuracy - : {ada.score(X_train,y_train):.3f}')\nprint (f'Test Accuracy - : {ada.score(X_test,y_test):.3f}')","d4949ba6":"TestForPred = all_test.drop(['PassengerId', 'Survived'], axis = 1)","5d8301f0":"t_pred = ada.predict(TestForPred).astype(int)","97322e6b":"PassengerId = all_test['PassengerId']","6a3118b3":"adaSub = pd.DataFrame({'PassengerId': PassengerId, 'Survived':t_pred })\nadaSub.head()","0be97dde":"adaSub.to_csv(\"1_Ada_Submission.csv\", index = False)","5e2f0f8c":"****Check Accuracy","44fda150":"****Extra Features:","bf056a1c":"****Final Predictions","2007ce44":"# Import Libraries","34aee129":"****Check Accuracy","8ca9695a":"## Combine train and test","f36f24b5":"****Build AdaBoost","68d3e360":"****Train\/Test Split","1b2c0b79":"# Import Data"}}