{"cell_type":{"d45f18dc":"code","77d862bc":"code","8bfc75ba":"code","3e5a7421":"code","f3edfc75":"code","96fe65f3":"code","e1269b59":"code","f5974e04":"code","aedaf679":"code","f93a7258":"code","c5c6b84c":"code","2bacc1cf":"code","474ca966":"code","d04d692b":"code","2fbd618c":"code","3d12ea60":"code","c81961f8":"code","b2dfc338":"code","f79830c3":"code","1d91b2d4":"markdown","54b8b2ca":"markdown","8b5a6391":"markdown"},"source":{"d45f18dc":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","77d862bc":"df = pd.read_csv(\"..\/input\/heartfailure\/heart.csv\")\ndf.head()","8bfc75ba":"df.shape","3e5a7421":"df.isnull().sum()","f3edfc75":"print(\"Sex:\",df['Sex'].unique())\nprint(\"RestingECG:\",df['RestingECG'].unique())\nprint(\"ChestPainType:\",df['ChestPainType'].unique())\nprint(\"ExerciseAngina:\",df['ExerciseAngina'].unique())\nprint(\"ST_Slope:\",df['ST_Slope'].unique())","96fe65f3":"f, axes = plt.subplots(2, 3, figsize=(15, 10))\n\nsns.countplot(x = df['HeartDisease'], data = df, palette='rocket', ax=axes[0,0])\nsns.countplot(x = df['RestingECG'], data = df, palette='rocket', ax=axes[0,1])\nsns.countplot(x = df['ChestPainType'], data = df, palette='rocket', ax=axes[0,2])\n\nsns.countplot(x = df['ExerciseAngina'], data = df, palette='rocket', ax=axes[1,0])\nsns.countplot(x = df['RestingECG'], data = df, palette='rocket', ax=axes[1,1])\nsns.countplot(x = df['Sex'], data = df, palette='rocket', ax=axes[1,2])\nplt.show()","e1269b59":"plt.figure(figsize = (15, 10))\nsns.displot(df['RestingBP'], color = 'y', kind='kde')\n\nplt.show()","f5974e04":"plt.figure(figsize = (20, 10))\nsns.displot(df['Cholesterol'])\n\nplt.show()","aedaf679":"from sklearn.preprocessing import LabelEncoder\n\nle=LabelEncoder()\n\ndf['Sex']=le.fit_transform(df['Sex'])\ndf['RestingECG']=le.fit_transform(df['RestingECG'])\ndf['ChestPainType']=le.fit_transform(df['ChestPainType'])\ndf['ExerciseAngina']=le.fit_transform(df['ExerciseAngina'])\ndf['ST_Slope']=le.fit_transform(df['ST_Slope'])\n\ndf.head()","f93a7258":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(), annot=True, cmap='RdYlBu')","c5c6b84c":"X = df.drop('HeartDisease', axis=1)\ny = df['HeartDisease']","2bacc1cf":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4)\n\nprint(\"X_train: \", X_train.shape)\nprint(\"X_test: \", X_test.shape)\nprint(\"y_train: \", y_train.shape)\nprint(\"y_test: \", y_test.shape)","474ca966":"from sklearn.ensemble import AdaBoostClassifier\n\nabc = AdaBoostClassifier(n_estimators=500, learning_rate=0.01, random_state=0)\nmodel = abc.fit(X_train, y_train)","d04d692b":"y_pred_adaboost = model.predict(X_test)\nprint(y_pred_adaboost)","2fbd618c":"from sklearn.metrics import accuracy_score\n\nprint(\"AdaBoost Classifier Model Accuracy:\", accuracy_score(y_test, y_pred_adaboost))","3d12ea60":"from sklearn.ensemble import GradientBoostingClassifier\n\ngbc = GradientBoostingClassifier(n_estimators=500, learning_rate=0.01, random_state=0)\nmodel = gbc.fit(X_train, y_train)","c81961f8":"y_pred_xgboost = model.predict(X_test)\nprint(y_pred_xgboost)","b2dfc338":"from sklearn.metrics import accuracy_score\n\nprint(\"XGBoost Classifier Model Accuracy:\", accuracy_score(y_test, y_pred_xgboost))","f79830c3":"acc = pd.DataFrame({\n    \"algorithms\": ['Adaboost', 'Xgboost'],\n    \"accuracy\": [accuracy_score(y_test, y_pred_adaboost),accuracy_score(y_test, y_pred_xgboost)]\n})\nsns.barplot(x='accuracy', y='algorithms', data=acc, palette='rocket')","1d91b2d4":"# AdaBoost Classifier","54b8b2ca":"# Comparision between Adaboost and XGboost","8b5a6391":"# XGBoost Classifier"}}