{"cell_type":{"da17f729":"code","60c69f60":"code","6d3414fd":"code","dd3915b6":"code","f6e9353c":"code","6ecc1c4d":"code","5200f2d7":"code","1c41b705":"code","466a70bb":"code","a2b19941":"code","5a682cb3":"code","7e14e63c":"code","00b903bd":"code","50df1415":"code","38600672":"code","b9838256":"code","cb352fcb":"code","55bd1b5c":"code","93035b35":"code","22a01072":"code","2a2ccae1":"code","2664bd14":"code","dcc1a92f":"code","d7644b1c":"markdown","794ebdd2":"markdown","fa5b9de5":"markdown","e418f70d":"markdown"},"source":{"da17f729":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\nfrom collections import defaultdict\nimport warnings\nimport datatable as dt\nwarnings.filterwarnings(\"ignore\")","60c69f60":"df = dt.fread('..\/input\/jane-street-market-prediction\/train.csv').to_pandas()\nmeta_data=dt.fread('..\/input\/jane-street-market-prediction\/features.csv').to_pandas()","6d3414fd":"df.sort_values(by= ['date','ts_id'],inplace=True)\nsample_df = df.query('date == 0')\nsample_df = sample_df.apply(lambda x: x.fillna(x.median()),axis=0)","dd3915b6":"resp_df = sample_df.iloc[:,2:6]\n#resp_df = pd.concat([sample_df.iloc[:,6],resp_df], axis=1)\ncorr = resp_df.corr()\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(15, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","f6e9353c":"categories =  defaultdict(list)\n\nfor columns  in meta_data.columns[1:]:\n    categories[f'{columns}'].append(meta_data.query(f'{columns} == True')['feature'].to_list())\n\ntag_0_df = sample_df[[*categories['tag_0'][0]]]\ntag_1_df = sample_df[[*categories['tag_1'][0]]]\ntag_2_df = sample_df[[*categories['tag_2'][0]]]\ntag_3_df = sample_df[[*categories['tag_3'][0]]]\ntag_4_df = sample_df[[*categories['tag_4'][0]]]\n\ntag_df_ls=[tag_0_df,tag_1_df,tag_2_df,tag_3_df,tag_4_df]\n\nfor t in tag_df_ls:\n    print(len(t.columns.values.tolist()))","6ecc1c4d":"order_df_ls=[]\nfor i in range(len(tag_0_df.columns.values.tolist())):\n    order_df=pd.concat([x_df.iloc[:, i] for x_df in tag_df_ls], axis=1)\n    order_df_ls.append(order_df)\nprint(len(tag_0_df.columns.values.tolist()))","5200f2d7":"corr = order_df_ls[0].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","1c41b705":"corr = order_df_ls[1].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","466a70bb":"corr = order_df_ls[2].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","a2b19941":"corr = order_df_ls[3].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","5a682cb3":"corr = order_df_ls[4].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","7e14e63c":"corr = order_df_ls[5].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","00b903bd":"corr = order_df_ls[6].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","50df1415":"corr = order_df_ls[7].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","38600672":"corr = order_df_ls[8].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","b9838256":"corr = order_df_ls[9].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","cb352fcb":"corr = order_df_ls[10].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","55bd1b5c":"corr = order_df_ls[11].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","93035b35":"corr = order_df_ls[12].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","22a01072":"corr = order_df_ls[13].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","2a2ccae1":"corr = order_df_ls[14].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","2664bd14":"corr = order_df_ls[15].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","dcc1a92f":"corr = order_df_ls[16].corr()\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 10))\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap='BrBG',  center=0,vmin=-1, vmax=1, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","d7644b1c":"## Motivation\nWhen reviewing notebook [EDA \/ A Quant's Prespective](https:\/\/www.kaggle.com\/hamzashabbirbhatti\/eda-a-quant-s-prespective), I have realized that the first 5 tags share very similar correlation heatmaps. Then, after I have searched over all public notebooks and discussions, it appears that none of them seems to make an analysis on inter-tag features. Hence, I decided to write this notebook, and hoped to provide additional insights into our very masked problem.\n## Methods\nFor the first 5 tags, each contains 17 features. In this notebook, I have, therefore, created 17 order lists to store the corresponding features according to their positional order, i.e. list 0 contains 5 features which are the first features in all five tags, list 1 contains 5 features which are the second features... Then, correlation heap maps are plotted for each order list.\n## Results\nFor each correlation map, it clearly illustrates strong correlations between all features in the order lists (relatively than in each tag). Moreover, an interesting phenomenon shows that, for any order list, correlation steadily decreases as the tag moves away. For example, in order list 0, the correlations between feature 9 and 15, 13, 11, 7 decrease steadily, between 15 and 13, 11, 7 decrease also steadily. (Feature 9 is in tag0, 15 in tag1, 13 in tag2, 11 in tag3, 7 in tag4)\n \n \n# ***Most surprisingly, this pattern is exactly the same as resp1-4.***\nWhat does this correlation pattern means? I yet to have an answer.  \n\nMy hypothesis is that the correlation indicates time-series autocorrelation, aka, the possibility of lag statistics. \n\nPleas feel free to contact me or leave a comment if you have better ideas or criticism of my methodology. THX","794ebdd2":"### 17 Heatmaps of 17 order lists","fa5b9de5":"### Construct order lists","e418f70d":"### resp1-4 correlation heatmap, which is similar to below order lists heatmaps"}}