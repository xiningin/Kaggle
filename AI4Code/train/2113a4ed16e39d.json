{"cell_type":{"79798de5":"code","79188d02":"code","1e9a308c":"code","cd79f766":"code","e9a5cd07":"code","f5d2060a":"code","ab910c2d":"code","983c3814":"code","59ee528b":"code","439d95c8":"code","3fb2a5a1":"code","3d1b0a93":"code","76965a7c":"code","885ed85c":"code","2f76cbf5":"code","87ae95e9":"code","2c742fab":"code","033f6f2b":"code","be67193e":"code","00f3a8f1":"code","0e80fd68":"code","3848e1a1":"code","509aea50":"code","605d5c68":"code","cb78f681":"code","e8f37ff8":"code","a3c28ef4":"code","7916f85e":"code","a754d6c9":"code","cdcde67d":"code","771623dd":"code","5f0f6d95":"code","c72d2751":"code","15ef85e0":"code","d0f8cca5":"code","5522316c":"code","b37a4cc1":"code","3fc03345":"code","051ca427":"code","bda4d08a":"code","05b0c03b":"code","5cc505f7":"code","6a4ab7d0":"code","6447094c":"code","98c20450":"code","44dd9b1a":"code","8aed7e6d":"code","530e0a25":"code","2884ce4b":"code","4de33e71":"code","1ccf7a73":"code","94b60e84":"code","bdbf9c97":"code","7043c952":"code","1f6243fd":"code","f4451e9f":"code","7d152066":"code","c79dd9dc":"code","48bb0a49":"code","ca3bcf4a":"markdown","e24f9b65":"markdown","b8bcc759":"markdown","b06dbe66":"markdown","2d1d5695":"markdown","d59ac7c8":"markdown","6e813887":"markdown","1bf2c922":"markdown","e29931c8":"markdown","f3a60c1a":"markdown","ded89880":"markdown","f146d2fa":"markdown","64931720":"markdown","b747765a":"markdown","54ed4780":"markdown","4f5093ae":"markdown","3c9c61c3":"markdown","4bfe6083":"markdown","c3121863":"markdown","82eafaa1":"markdown","18afa57c":"markdown","2ab6bfd6":"markdown","03325b71":"markdown","aca57d6d":"markdown","17727627":"markdown","7c844941":"markdown","f3078a2f":"markdown","d4db8b73":"markdown","20b54ddc":"markdown","5671d6e1":"markdown","e8091224":"markdown","45b6506f":"markdown","dff3b013":"markdown","dbd78529":"markdown","d47e65b9":"markdown","37446c3b":"markdown","72025faf":"markdown","3583a18d":"markdown","c91327c7":"markdown","add58169":"markdown","05d6e5dd":"markdown","f9701844":"markdown","4dc05abb":"markdown","01023d13":"markdown","9ce90e53":"markdown","90426656":"markdown","f705d2ec":"markdown","6300c274":"markdown","4a4fdde1":"markdown","47248ba1":"markdown","0a8add9b":"markdown","2eeac3c9":"markdown","336311fd":"markdown","5a7c7329":"markdown","7536d682":"markdown","3c485a6e":"markdown","9a95a01f":"markdown"},"source":{"79798de5":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","79188d02":"df = pd.read_csv('\/kaggle\/input\/clicks-conversion-tracking\/KAG_conversion_data.csv')","1e9a308c":"df.rename(columns={'xyz_campaign_id':'xyzCampId', 'fb_campaign_id':'fbCampId','Total_Conversion':'conv','Approved_Conversion':'appConv'}, inplace=True)\ndf['xyzCampId'].unique()\ndf['xyzCampId'].replace({916:'campA', 936:'campB', 1178:'campC'}, inplace=True)","cd79f766":"df.head()","e9a5cd07":"df.isnull().sum()","f5d2060a":"df.describe()","ab910c2d":"df1 = pd.get_dummies(df, columns = ['xyzCampId', 'age', 'gender'])","983c3814":"plt.figure(figsize=(16,5))\nx=sns.heatmap(df1[df1.columns.difference(['ad_id','fbCampId','interest'], sort=False)].corr(),annot=True ,fmt=\".2f\", cmap=\"coolwarm\")","59ee528b":"sns.countplot(x ='xyzCampId', data = df).set_title('Count of Individual Ads')\nplt.show() \n\ncampSum = df.groupby(by=['xyzCampId']).sum()\nplt.bar(campSum.index, campSum[\"Impressions\"])\nplt.ylabel(\"Impressions\")\nplt.title(\"Campaign vs Impressions\")\nplt.show()","439d95c8":"plt.bar(campSum.index, campSum[\"Spent\"])\nplt.ylabel(\"Spent\")\nplt.title(\"Campaign vs Spent\")\nplt.show()\n\ncampSum = df.groupby(by=['xyzCampId']).sum()\nplt.bar(campSum.index, campSum[\"appConv\"])\nplt.ylabel(\"Approved_Conversion\")\nplt.title(\"Campaign vs Approved Conversion\")\nplt.show()","3fb2a5a1":"campCTR = campSum['Clicks']\/campSum['Impressions']*100\n# Creating our bar plot\nplt.bar(campCTR.index, campCTR)\nplt.ylabel(\"CTR\")\nplt.title(\"Campaign vs. CTR\")\nfor x,y in zip(campCTR.index, campCTR):\n\n    label = \"{:.4f}%\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","3d1b0a93":"campConv = campSum['appConv']\/campSum['Clicks']*100\n# Creating our bar plot\nplt.bar(campConv.index, campConv)\nplt.ylabel(\"Conversion Rate\")\nplt.title(\"Campaign vs. Conversion Rate\")\nfor x,y in zip(campConv.index, campConv):\n\n    label = \"{:.2f}%\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","76965a7c":"overallConvRate = round(df['appConv'].sum()\/df['Clicks'].sum()*100, 2)\nprint(overallConvRate)","885ed85c":"campCAC = campSum['Spent']\/campSum['appConv']\n# Creating our bar plot\nplt.bar(campCAC.index, campCAC)\nplt.ylabel(\"CAC\")\nplt.title(\"Campaign vs. CAC\")\nfor x,y in zip(campCAC.index, campCAC):\n\n    label = \"${:.2f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","2f76cbf5":"campCPC = campSum['Spent']\/campSum['Clicks']\n# Creating our bar plot\nplt.bar(campCPC.index, campCPC)\nplt.ylabel(\"CPC\")\nplt.title(\"Campaign vs. CPC\")\nfor x,y in zip(campCPC.index, campCPC):\n\n    label = \"${:.2f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","87ae95e9":"genSum = df.groupby(by=['gender']).sum()\ntotal_impressions = df['Impressions'].sum()\n#dropping both ad_id, fbCampId as they are not relevant to this portion\ngenSum.drop(['ad_id', 'fbCampId'], axis=1, inplace=True)","2c742fab":"gen_impression_prop = {'Female': genSum['Impressions']['F']\/total_impressions, 'Male': genSum['Impressions']['M']\/total_impressions} \nplt.bar(gen_impression_prop.keys(), gen_impression_prop.values())\nplt.ylabel(\"Impressions\")\nplt.title(\"Gender vs. Impressions Proportion\")\nfor x,y in zip(gen_impression_prop.keys(), gen_impression_prop.values()):\n\n    label = \"{:.3f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","033f6f2b":"plt.bar(genSum.index, genSum['Clicks'])\nplt.ylabel(\"Clicks\")\nplt.title(\"Gender adjusted vs. Clicks\")\nfor x,y in zip(genSum.index, genSum['Clicks']):\n\n    label = \"{:.0f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()\n","be67193e":"genCTR = genSum['Clicks']\/genSum['Impressions']*100\nplt.bar(genCTR.index, genCTR)\nplt.ylabel(\"CTR\")\nplt.title(\"Gender vs. CTR\")\nfor x,y in zip(genCTR.index, genCTR):\n\n    label = \"{:.4f} %\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","00f3a8f1":"genConvRate = genSum['appConv']\/genSum['Clicks']*100\nplt.bar(genConvRate.index, genConvRate)\nplt.ylabel(\"Conversion Rate\")\nplt.title(\"Gender vs. Conversion Rate\")\nfor x,y in zip(genConvRate.index, genConvRate):\n\n    label = \"{:.2f}%\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","0e80fd68":"genCAC = genSum['Spent']\/genSum['appConv']\nplt.bar(genCAC.index, genCAC)\nplt.ylabel(\"CAC\")\nplt.title(\"Gender vs. CAC\")\nfor x,y in zip(genCAC.index, genCAC):\n\n    label = \"${:.2f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()\n","3848e1a1":"sns.set(style=\"whitegrid\")\ntips = sns.load_dataset(\"tips\")\ng = sns.barplot(x=df[\"xyzCampId\"], y=df[\"Impressions\"], hue=df[\"gender\"], data=tips)\ng.set_yscale('log')","509aea50":"sns.set(style=\"whitegrid\")\ntips = sns.load_dataset(\"tips\")\nsns.barplot(x=df[\"xyzCampId\"], y=df[\"Clicks\"]\/df['Impressions']*100, hue=df[\"gender\"], data=tips)\n","605d5c68":"genCampSum = df.groupby(by = ['xyzCampId', 'gender']).sum()\ngenCampConv = genCampSum['appConv']\/genCampSum['Clicks']\ngenCampSumCov = genCampSum.merge(genCampConv.rename('Conversion Rate'), left_index=True, right_index=True)\n\ngenCampSumCov['Conversion Rate'].unstack().plot(kind='bar').set_title('Conversion rate by Gender')\n","cb78f681":"genCampSum = df.groupby(by = ['xyzCampId', 'gender']).sum()\ngenCampCAC = genCampSum['Spent']\/genCampSum['appConv']\ngenCampSumCAC = genCampSum.merge(genCampCAC.rename('CAC'), left_index=True, right_index=True)\n\ngenCampSumCAC['CAC'].unstack().plot(kind='bar').set_title('CAC by Gender')\n","e8f37ff8":"ageSum = df.groupby(by=['age']).sum()\n#dropping both ad_id, fbCampId as they are not relevant to this portion\nageSum.drop(['ad_id', 'fbCampId'], axis=1, inplace=True)","a3c28ef4":"plt.bar(ageSum.index, ageSum['Impressions'])\nplt.ylabel(\"Impressions\")\nplt.title(\"Age vs. Impressions\")\nfor x,y in zip(ageSum.index, ageSum['Impressions']):\n\n    label = \"{:.0f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","7916f85e":"plt.bar(ageSum.index, ageSum['Clicks'])\nplt.ylabel(\"Clicks\")\nplt.title(\"Age vs. Clicks\")\nfor x,y in zip(ageSum.index, ageSum['Clicks']):\n\n    label = \"{:.0f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","a754d6c9":"ageCTR = ageSum['Clicks']\/ageSum['Impressions']*100\nplt.bar(ageCTR.index, ageCTR)\nplt.ylabel(\"CTR\")\nplt.title(\"Age vs. CTR\")\nfor x,y in zip(ageCTR.index, ageCTR):\n\n    label = \"{:.4f} %\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","cdcde67d":"ageConvRate = ageSum['appConv']\/ageSum['Clicks']*100\nplt.bar(ageConvRate.index, ageConvRate)\nplt.ylabel(\"Conversion Rate\")\nplt.title(\"Age vs. Conversion Rate\")\nfor x,y in zip(ageConvRate.index, ageConvRate):\n\n    label = \"{:.2f}%\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","771623dd":"ageCPC = ageSum['Spent']\/ageSum['Clicks']\n# Creating our bar plot\nplt.bar(ageCPC.index, ageCPC)\nplt.ylabel(\"CPC\")\nplt.title(\"Campaign vs. CPC\")\nfor x,y in zip(ageCPC.index, ageCPC):\n\n    label = \"${:.2f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","5f0f6d95":"ageCAC = ageSum['Spent']\/ageSum['appConv']\nplt.bar(ageCAC.index, ageCAC)\nplt.ylabel(\"CAC\")\nplt.title(\"Age vs. CAC\")\nfor x,y in zip(ageCAC.index, ageCAC):\n\n    label = \"${:.2f}\".format(y)\n\n    plt.annotate(label, # this is the text\n                 (x,y), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,2), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\nplt.show()","c72d2751":"sns.set(style=\"whitegrid\")\ntips = sns.load_dataset(\"tips\")\ng = sns.barplot(x=df[\"xyzCampId\"], y=df[\"Impressions\"], hue=df[\"age\"], data=tips)\n","15ef85e0":"sns.set(style=\"whitegrid\")\ntips = sns.load_dataset(\"tips\")\nsns.barplot(x=df[\"xyzCampId\"], y=df[\"Clicks\"]\/df['Impressions']*100, hue=df[\"age\"], data=tips)","d0f8cca5":"ageCampSum = df.groupby(by = ['xyzCampId', 'age']).sum()\nageCampConv = ageCampSum['appConv']\/ageCampSum['Clicks']\nageCampSumCov = ageCampSum.merge(ageCampConv.rename('Conversion Rate'), left_index=True, right_index=True)\n\nageCampSumCov['Conversion Rate'].unstack().plot(kind='bar').set_title('Conversion rate by Age')\n","5522316c":"ageCampSum = df.groupby(by = ['xyzCampId', 'age']).sum()\nageCampCAC = ageCampSum['Spent']\/ageCampSum['appConv']\nageCampSumCAC = ageCampSum.merge(ageCampCAC.rename('CAC'), left_index=True, right_index=True)\n\nageCampSumCAC['CAC'].unstack().plot(kind='bar').set_title('CAC by Age')","b37a4cc1":"ageCampSum = df.groupby(by = ['xyzCampId', 'age']).sum()\nprint(ageCampSum['Impressions'])\nprint(ageCampSum['Clicks'])","3fc03345":"interestSum = df.groupby('interest').sum()\ninterestSum.reset_index(inplace=True)\n# count plot on single categorical variable \nfig_dims = (20,6)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.barplot(x = 'interest', y ='Spent', data = interestSum)\n# Show the plot \nplt.show() ","051ca427":"interestSum = df.groupby('interest').sum()\ninterestCTR = interestSum['Clicks']\/interestSum['Impressions']*100\ninterestSumCTR = interestSum.merge(interestCTR.rename('CTR'), left_index=True, right_index=True)\nCTRmean = [np.mean(interestSumCTR['CTR'])]*len(interestSumCTR.index)\n\n# count plot on single categorical variable \nfig_dims = (20,6)\nfig, ax = plt.subplots(figsize=fig_dims)\nmean_line = ax.plot(interestSumCTR.index,CTRmean, label='Mean', linestyle='--')\nsns.barplot(x =interestSumCTR.index, y ='CTR', data = interestSumCTR) \n# Show the plot \nplt.show() ","bda4d08a":"interestSum = df.groupby('interest').sum()\ninterestCAC = interestSum['Spent']\/interestSum['appConv']\ninterestSumCAC = interestSum.merge(interestCAC.rename('CAC'), left_index=True, right_index=True)\nCACmean = [np.mean(interestSumCAC['CAC'])]*len(interestSumCAC.index)\n\n# count plot on single categorical variable \nfig_dims = (20,6)\nfig, ax = plt.subplots(figsize=fig_dims)\nmean_line = ax.plot(interestSumCAC.index,CACmean, label='Mean', linestyle='--')\nsns.barplot(x =interestSumCAC.index, y ='CAC', data = interestSumCAC) \n# Show the plot \nplt.show() \n","05b0c03b":"interestKeyValues = interestSumCAC.sort_values(by = 'CAC', ascending=True).drop(columns=['ad_id', 'fbCampId']).head(n = 10)\ninterestKeyValues.reset_index(inplace=True)\nprint(interestKeyValues)","5cc505f7":"interestGenSum = df.groupby(by = ['interest', 'gender']).sum()\ninterestGenCAC = interestGenSum['Spent']\/interestGenSum['appConv']\ninterestGenSumCAC = interestGenSum.merge(interestGenCAC.rename('CAC'), left_index=True, right_index=True)\ninterestGenSumCAC.reset_index(inplace=True)\n\ninterestGenKeyValues = interestGenSumCAC.sort_values(by = 'CAC', ascending=True).head(n = 10)\ninterestGenKeyValues = interestGenKeyValues.drop(columns=['ad_id', 'fbCampId', 'conv'])\nprint(interestGenKeyValues)","6a4ab7d0":"interestGenSum = df.groupby(by = ['interest', 'gender']).sum()\ninterestGenCAC = interestGenSum['Spent']\/interestGenSum['appConv']\ninterestGenSumCAC = interestGenSum.merge(interestGenCAC.rename('CAC'), left_index=True, right_index=True)\ninterestGenSumCAC.reset_index(inplace=True)\n\n\ninterestFSumCAC = interestGenSumCAC[interestGenSumCAC.gender != 'M']\n\ninterestFKeyValues = interestFSumCAC.drop(columns=['ad_id', 'fbCampId', 'conv'], inplace=True)\ninterestFKeyValues = interestFSumCAC.sort_values(by = 'CAC', ascending=True).head(n = 10)\nprint(interestFKeyValues)","6447094c":"interestAgeSum = df.groupby(by = ['interest', 'age']).sum()\ninterestAgeCAC = interestAgeSum['Spent']\/interestAgeSum['appConv']\ninterestAgeSumCAC = interestAgeSum.merge(interestAgeCAC.rename('CAC'), left_index=True, right_index=True)\n\ninterestAgeKeyValues = interestAgeSumCAC.sort_values(by = 'CAC', ascending=True)\ninterestAgeKeyValues = interestAgeKeyValues[~(interestAgeKeyValues['Clicks'] <= 10)]  \ninterestAgeKeyValues = interestAgeKeyValues.drop(columns=['ad_id', 'fbCampId', 'conv'])\ninterestAgeKeyValues.reset_index(inplace=True)\nprint(interestAgeKeyValues.head(n =20))","98c20450":"df = pd.read_csv('\/kaggle\/input\/clicks-conversion-tracking\/KAG_conversion_data.csv')\ndf.rename(columns={'xyz_campaign_id':'xyzCampId', 'fb_campaign_id':'fbCampId','Total_Conversion':'conv','Approved_Conversion':'appConv'}, inplace=True)\ndf['xyzCampId'].unique()\ndf['xyzCampId'].replace({916:'campA', 936:'campB', 1178:'campC'}, inplace=True)\ndf2 = df\ndf2.drop(columns=['ad_id'], inplace=True)\nlen(df2)","44dd9b1a":"plt.figure(figsize=(16,5))\nx=sns.heatmap(df[df.columns.difference(['ad_id','fbCampId','interest'], sort=False)].corr(),annot=True ,fmt=\".2f\", cmap=\"coolwarm\")","8aed7e6d":"from statsmodels.stats.outliers_influence import variance_inflation_factor \n\ndf2 = pd.get_dummies(df2, columns=['age', 'gender', 'interest'])\ndf2.drop(columns=['gender_M','age_45-49', 'xyzCampId','Spent', 'Clicks','conv','fbCampId','appConv', 'interest_107'], inplace=True)\n\n# the independent variables set \nX = df2\n\n# VIF dataframe \nvif_data = pd.DataFrame() \nvif_data[\"feature\"] = X.columns \n\n# calculating VIF for each feature \nvif_data[\"VIF\"] = [variance_inflation_factor(X.values, i) \n\t\t\t\t\t\tfor i in range(len(X.columns))] \n\nprint(vif_data)\n","530e0a25":"y = df['conv']","2884ce4b":"from sklearn.feature_selection import SelectKBest, f_regression\n#apply SelectKBest class to extract top 10 best features\nbestfeatures = SelectKBest(score_func=f_regression, k=40)\nfit = bestfeatures.fit(X,y)\ndfscores = pd.DataFrame(fit.scores_)\ndfcolumns = pd.DataFrame(X.columns)\n#concat two dataframes for better visualization \nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['Specs','Score']  #naming the dataframe columns\nprint(featureScores.nlargest(33,'Score')) \n\nXselect = featureScores.nlargest(5,'Score')['Specs'].to_list()\nX = X[Xselect]","4de33e71":"X2 = sm.add_constant(X)\nest = sm.OLS(y, X2)\nest2 = est.fit()\nprint(est2.summary())","1ccf7a73":"y = np.array(y)\ny.reshape(len(y), 1)\n# Saving feature names for later use\nfeature_list = list(X.columns)\n# Convert to numpy array\nX = np.array(X)","94b60e84":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25)\n\nprint('Training Features Shape:', X_train.shape)\nprint('Training Labels Shape:', y_train.shape)\nprint('Testing Features Shape:', X_test.shape)\nprint('Testing Labels Shape:', y_test.shape)","bdbf9c97":"from sklearn.preprocessing import StandardScaler\nsc_x= StandardScaler()\nX = sc_x.fit_transform(X)","7043c952":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor(n_estimators = 1000)\nrf.fit(X_train, y_train)","1f6243fd":"y_pred=rf.predict(X_test)\ny_pred=np.round(y_pred)","f4451e9f":"from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error\nmae=mean_absolute_error(y_test, y_pred)\nmse=mean_squared_error(y_test, y_pred)\nrmse=np.sqrt(mse)\nr2_score=r2_score(y_test, y_pred)","7d152066":"mae","c79dd9dc":"r2_score","48bb0a49":"# Get numerical feature importances\nimportances = list(rf.feature_importances_)\n# List of tuples with variable and importance\nfeature_importances = [(feature, round(importance, 2)) for feature, importance in zip(feature_list, importances)]\n# Sort the feature importances by most important first\nfeature_importances = sorted(feature_importances, key = lambda x: x[1], reverse = True)\n# Print out the feature and importances \n[print('Variable: {:20} Importance: {}'.format(*pair)) for pair in feature_importances];","ca3bcf4a":"Here we see campaign C having a CAC of more than 4 times the next highest CAC of campaign B. This along with the CTR above helps build a story that Campaign C's messaging and targeting are off as they have both lower CTR meaning the message does not resonate as much with customers and they have a higher CAC likely meaning the targeted customers who do click the ad are not actually interested in purchasing the product. Another explanation could be the cost per click for Campaign C higher than the other 2 campaigns which we will now examine.","e24f9b65":"Rename some of the features and values to make an easier workflow","b8bcc759":"The clicks however show a different story with age 45-49 having by far the most clicks","b06dbe66":"# Loading Data and data cleaning","2d1d5695":"Utilized 20 rows compared to 10 in gender due to the larger amount of rows involved in a age-interest group. Removing all rows with Clicks < 10 due to the higher likelyhood of being affected by chance. Both interest 102 & 31 have much lower CAC and would be worth investing in to determine if the CAC is sustainable with higher exposure.","d59ac7c8":"# Random Forest Regression Analysis to determine factors influencing approved conversions","6e813887":"**Gender By Campaign**","1bf2c922":"Although females have a higher CTR Males are almost twice as likely to actually complete a purchase once on the site","e29931c8":"CPC of Campaign C is the highest however this difference does not make up for the much larger CAC Campaign C has.","f3a60c1a":"Explore features to determine optimal customer segments and next steps for facebook ad targeting ","ded89880":"# Business insights and Next Steps","f146d2fa":"As such, due to both the CTR and conversion rate males CAC is only 2\/3 that of Females","64931720":"Across all campaigns females are more exposed to the advertisements","b747765a":"Impressions, Clicks and Spend are all extermely correlated must pic one out of the three for analysis","54ed4780":"Check for missing data","4f5093ae":"Sample size for this particular analysis of Campaign A may have to few clicks to give an accurate picture","3c9c61c3":"All VIF are good after dropping various features","4bfe6083":"We can see there is a large distribution in impressions with STD being 312762.2 indicating some ads recieve much more exposure than others","c3121863":"Campaign A and B have much larger conversion rates that campaign C however looking at total conversion rate for the company we see only 2.83% due to the large proportion of total approved conversions Campaign C has compared to the others","82eafaa1":"Here we see that of the people who viewed the ad across campaigns, 54% were women and 46% were men","18afa57c":"**Campaigns**\n1. Campaign C had the highest number of individual ads, impressions, ad spend and total approved conversions  \n2. Campaign be had the highest CTR slight beating Campaign A while being over 25% larger than Campaign C\n3. Campaign A had by far the highest conversion rate beating Campaign B by 2X and Campaign C by 10X\n4. Campaign A had the lowest CAC at almost 10X lower than Campaign C and 3X lower than campaign B\n5. Campaign A had the lowest CPC\n\n**Gender**\n1. Females had 54% of all impressions while males had 46%\n2. females had a higher CTR than males by ~ 20% while males almost doubled the Conversion rate of females\n3. Female aquisiton cost was ~ $30 higher that males\n4. Both impressions and CTR across campaigns look similiar to the non campaign segmented equivalants\n5. Conversion rates and CAC are similiar for both Campaign A and C however for Campaign B Male conversion rates are 5X females compared to non campaign segmented equivalants \n\n**Age**\n1. Ages 30-34 and 45-49 have the highest impressions\n2. The CTR increases relatively steadily as we move up age groups with age 45-49 having a 56 % higher CTR than age 30-34\n3. The Conversion rate on the other hand decreases steadily as we move up age groups with ages 30-34 having a 247 % higher Conversion rate than ages 45-49\n4. Overall as age increases CAC from $30 at ages 30-34 to 100 at ages 45-49, what is interesting about this is CPC is lower as age increasing indicating the higher CAC is simply due to poor conversion rates for higher age groups\n5. CTR and CAC are similiar across campaigns to non segmented equivalants however Conversion rates are much higher across all age groups for campaigns A and across the 3 youngest age groups for campaign B\n6. looking at importance of the age 30-34 range it is 2.5X as important as the next single factor feature \n\n**Interests**\n1. interests 31 & 36 have extremely low CAC compared to others\n2. interests 101, 104 & 112 have the largest impact on total conversions while spend on these interest catagories is much lower than others\n3. interests 31 & 102 combined with age group of 30-34 have a CAC of ~4.75 almost half of the next low interest-age segment\n4. interest 101 has the lowest CAC when targeting males at ~5.10 almost 1\/3 the next highest CAC for interest-gender segment","2ab6bfd6":"# Conclusion","03325b71":"Looking at the charts we can see there are some individual interests which perform better than average. Let's examine further by pulling the best 10 performing interests based on CAC","aca57d6d":"Age 30-34 has the highest impressions with 45-49 close behind","17727627":"**Campaign by Age**","7c844941":"Females have a higher CTR than Males","f3078a2f":"Lets investigate these top interest catagories more closely through segmenting by gender","d4db8b73":"**Age and interest** ","20b54ddc":"Additionally they have a higher CTR & CAC on all campaigns and with a lower conversion as shown below","5671d6e1":"**Business Insights**\n\n1.Optimizing target demographic\n    * should target the age group of 30 - 34 as they had a higher conversion rate than any other segment along with a lower CAC\n    * Males should be the main gender target as they had a higher conversion rate than any other segment along with a lower CAC\n    * Out of the four largest interest spends two are inefficient due to being higher than average CAC (interest 10 & 27)\n    * (this is dependant on LFV across customer segments being similiar)\n    \n2. Optimize campaigns\n    * currently largest spend is going to worst performing campaign\n    * Best campaign by CAC across age groups and gender is Campaign A\n    \n**Next Steps**\n1. Gradually increase spend in Campaign A\n    * Due to the low sample size compared to other campaigns the findings could be a result of chance by increasing spend we can determine if that is the case\n2. Increase ad spend on high performing interest catagories\/decrease ad spend on low performing interest catagories \n3. shift marketing spend to target a younger audiance \n    * (dependant on LFV across customer segments being similiar)\n    \n    ","e8091224":"Looking at the CTR we see camp A has the highest in 3 of the four age group less 40-44","45b6506f":"**Correlation Matrix**\n\nHave removed ad id, FB campaign id, and interests as the numbers are arbitary for correlation","dff3b013":"We see a steady trend of CAC increasing with age in all but Campaign A where 35-44 are lower than the 30-34 age group, this could be due to a low sample size which we will look at now ","dbd78529":"CPC decreases as age increases","d47e65b9":"**Need for additional features to properly measure campaign efficacy**\n\nDue to the unequal distribution of both individual ads and the impressions of each campaign there is a need for additional KPI features such as click through rate (CTR), cost per click (CPC), conversion rate and customer aquisition cost (CAC). \n\n\nAn assumption being made for CAC is each ad link directs to the exact same landing page and as such customers have the same purchasing experience. \n\nAdditionally we could use return on ad spend to get a more hollistic analysis however due to having no information on the value of both the customers along with the cost of the product involved in the ad we will assume the company is advertsing widgets at the exact same price for each campaign along with the different demographic customer groups (female, age 30-34) all being worth the same lifetime value which although not ideal will allow for an easier analysis.","37446c3b":"The data used in this project is from an anonymous organisation\u2019s social media ad campaign. The data file can be downloaded from here. The file conversion_data.csv contains 1143 observations in 11 variables. Below are the descriptions of the variables.\n\n1.) ad_id: an unique ID for each ad.\n\n2.) xyzcampaignid: an ID associated with each ad campaign of XYZ company.\n\n3.) fbcampaignid: an ID associated with how Facebook tracks each campaign.\n\n4.) age: age of the person to whom the ad is shown.\n\n5.) gender: gender of the person to whim the add is shown\n\n6.) interest: a code specifying the category to which the person\u2019s interest belongs (interests are as mentioned in the person\u2019s Facebook public profile).\n\n7.) Impressions: the number of times the ad was shown.\n\n8.) Clicks: number of clicks on for that ad.\n\n9.) Spent: Amount paid by company xyz to Facebook, to show that ad.\n\n10.) Total conversion: Total number of people who enquired about the product after seeing the ad.\n\n11.) Approved conversion: Total number of people who bought the product after seeing the ad.","72025faf":"Looking at the data above we can see Males with interest 101 have a drastically lower CAC than any other interest. This could be by chance however due to the small click sample size. Another interesting insight is interest 31 is effective for both males and females. lets examine interest CAC for females further","3583a18d":"We find interest 31 is a bit of an outlier as it is $10 less than any other CAC. ","c91327c7":"# Campaign deep dive","add58169":"Looking at the correlation matrix we can see both total and approved conversions are positively correlated with the 30-34 age group these customers are more likely to both inquire and buy the product that other age groups. \n\nMeanwhile, Clicks are positively correlated with the age groups: 40-44 & 45-49. This indicates older customers are more likely to click on the ad however when we look at conversions for this age group it is negatively correlated suggesting they inquire about the product and complete pruchases at a lower rate than younger age groups. \n\nAdditionally, we see Females are much more likely to click on the advertisement and inquire about the product however after inquiry males seem to purchase the product more. \n\nFinally, looking at the campaigns we see noth campaign A & B were targeted more towards younger customers as there is a positive correlation with ages 30-34 while campaign C was targeted at older customers as there is a negative correlation with ages 30-34. \n\nOn a side note the campaign correlations with non demographic variables are due to large difference in impressions of the campaigns compared to the actual number of individual ads as will be shown below.  ","05d6e5dd":"Here we see both Campaign A & B have higher CTR's indicating they either have a more effective message or better targeting than campaign C. We will investigate this further. ","f9701844":"**Interest**","4dc05abb":"Drop Ad Id as it is irrelevant","01023d13":"As we see CTR increase with age and conversion rate decrease with age it makes sense 45-49 have the highest customer aquisition cost while 30-34 are the lowest","9ce90e53":"No surprises here, Campaign C has the highest ad spend and highest conversions which is consistent with its high impressions in the previous chart","90426656":"Campaign A has the highest conversion rate for all age groups execpt 30-34 while campaign C is the lowest","f705d2ec":"***Gender***","6300c274":"However looking at conversion rate ages 30-34 are almost double the conversion rate of any other group","4a4fdde1":"**Objective**","47248ba1":"**Age**","0a8add9b":"# Exploratory Analysis","2eeac3c9":"**Data**","336311fd":"Mean Absolute Error","5a7c7329":"The factors which are both statistically significant and have the highest feature scores","7536d682":"As such age 45-49 has the highest CTR with age 30-34 being the lowest","3c485a6e":"r-score indicating 72.75% of the data fits the model","9a95a01f":"Camp A is the msot evenly distributed across age groups while Camp B and C are more targeted towards 45-49 "}}