{"cell_type":{"db37a95d":"code","5c622be6":"code","aa7a16ea":"code","e0e5a1b8":"code","88cee272":"code","d07710e2":"code","12077860":"code","9de883f6":"code","2093078f":"code","3bb0ae69":"code","bb6c254d":"code","098969e4":"code","46ccfa18":"code","8f93972c":"code","769a81f5":"code","587aa463":"code","c1f74caf":"code","770e4e0a":"code","96a5bc50":"code","83047950":"code","906c1d01":"code","0380cde6":"code","592ff38d":"code","f8f5c3d9":"code","f522401f":"code","7cb7bb77":"code","8b7aba78":"code","c44cf95f":"code","5bb126d7":"code","fdabfa8d":"code","3f75ad46":"code","300b4e7c":"markdown","a46edd3f":"markdown","fb8102fc":"markdown","e29e6e51":"markdown","eac2e1f2":"markdown","bd163d48":"markdown","33ebd476":"markdown","64c6c54b":"markdown","4a81de50":"markdown","cc2f1569":"markdown","975e28b8":"markdown"},"source":{"db37a95d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport folium\nfrom folium.plugins import FastMarkerCluster","5c622be6":"data = pd.read_csv('..\/input\/smart-cities-index-datasets\/Smart_City_index_headers.csv')\ndata","aa7a16ea":"cities = pd.read_csv('..\/input\/world-cities\/worldcities.csv')\ncities","e0e5a1b8":"continents = pd.read_csv('..\/input\/country-and-continent\/country_and_continent.csv')\ncontinents","88cee272":"# Check null values by columns\ndata.isnull().sum()","d07710e2":"# Check what columns do I have\ndata.columns","12077860":"# There are some spaces of each column head\n# Therefore, we need to remove those\ndict_rename = {'Smart_Mobility ': 'Smart_Mobility',\n          'Smart_Government ': 'Smart_Government',\n          'Smart_Economy ': 'Smart_Economy'\n          }\ndict_rename","9de883f6":"data.rename(columns=dict_rename, inplace=True)\ndata","2093078f":"# Check null values by columns\ncities.isnull().sum()","3bb0ae69":"# Remove rows which has nulll values\ncities.dropna(axis=0, inplace=True)\ncities.reset_index(drop=True, inplace=True)\ncities","bb6c254d":"# Re-Check null values by columns\ncities.isnull().sum()","098969e4":"continents.isnull().sum()","46ccfa18":"# Remove rows which has nulll values\ncontinents.dropna(axis=0, inplace=True)\ncontinents.reset_index(drop=True, inplace=True)\ncontinents","8f93972c":"# Merge two DataFrames\ncities_continents = pd.merge(cities, continents, left_on='iso2', right_on='Two_Letter_Country_Code')\ncities_continents","769a81f5":"# Drop unnecessary columns\ncities_continents.drop(columns=['city', 'admin_name', 'capital', 'population', 'id', 'Continent_Code', 'Country_Name', 'Two_Letter_Country_Code', 'Three_Letter_Country_Code', 'Country_Number'], inplace=True)\ncities_continents","587aa463":"# Check Null values\ncities_continents.isnull().sum()","c1f74caf":"# Check unique values of continents\ncities_continents['Continent_Name'].unique()","770e4e0a":"# Define variable in order to filter 'cities_continents'\n# continent = input('>>> Input Continent Name: ')\n# Once uploading on Kaggle, the 'input' doesn't working\n# Thus, I defined 'continent' variable as 'Asia' :)\ncontinent = 'Asia'","96a5bc50":"# We have too muich data on 'cities_continents'\n# So, we will figure out continents by continents\ncities_continents_filtered = cities_continents[cities_continents['Continent_Name'] == continent]\ncities_continents_filtered","83047950":"# Prepare DataFrame for Visualization\ncities_continents_visualization = pd.merge(data, cities_continents_filtered, left_on='City', right_on='city_ascii')\ncities_continents_visualization.drop(['Id', 'SmartCity_Index', 'SmartCity_Index_relative_Edmonton', 'city_ascii', 'country'], axis=1, inplace=True)\ncities_continents_visualization","906c1d01":"# Insert \"Smart_Total\" column in order to compare total index\n\nfor i in range(2, 8):\n    cities_continents_visualization['Smart_Total'] = np.empty(shape=(len(cities_continents_visualization.index), 1))\n    cities_continents_visualization['Smart_Total'] += cities_continents_visualization.iloc[:, i]\n    cities_continents_visualization['Smart_Total']\n\ncities_continents_visualization","0380cde6":"# Relocation of columns\ncities_continents_visualization = cities_continents_visualization[['City', 'Country', 'Smart_Mobility', 'Smart_Environment', 'Smart_Government', 'Smart_Economy', 'Smart_People', 'Smart_Living', 'Smart_Total', 'lat', 'lng', 'iso2', 'iso3', 'Continent_Name']]\ncities_continents_visualization","592ff38d":"# Display Single Plot\nsns.barplot(data=cities_continents_visualization, x='City', y='Smart_Total', palette='pastel')\nplt.xticks(rotation=90)\nplt.title('City - Total')\n\nplt.show()","f8f5c3d9":"# Display Subplots\nfig, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(nrows=2, ncols=3)\nfig.suptitle('Smart Index Bar Plot by Each City', fontsize=30)\nfig.set_size_inches(18, 18)\n\nsns.barplot(data=cities_continents_visualization, x=\"City\", y=\"Smart_Mobility\", palette='pastel', ax=ax1)\nsns.barplot(data=cities_continents_visualization, x=\"City\", y=\"Smart_Environment\", palette='pastel', ax=ax2)\nsns.barplot(data=cities_continents_visualization, x=\"City\", y=\"Smart_Government\", palette='pastel', ax=ax3)\nsns.barplot(data=cities_continents_visualization, x=\"City\", y=\"Smart_Economy\", palette='pastel', ax=ax4)\nsns.barplot(data=cities_continents_visualization, x=\"City\", y=\"Smart_People\", palette='pastel', ax=ax5)\nsns.barplot(data=cities_continents_visualization, x=\"City\", y=\"Smart_Living\", palette='pastel', ax=ax6)\n\n# Smart_Mobility \/ ax1\nax1.set(ylabel='Smart_Mobility')\nax1.set_title(label=\"Smart_Mobility\", fontdict={'size': 20})\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax1.set(xlabel=None)\n\n# Smart_Environment \/ ax2\nax2.set(ylabel='Smart_Environment')\nax2.set_title(label=\"Smart_Environment\", fontdict={'size': 20})\nax2.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax2.set(xlabel=None)\n\n# Smart_Government \/ ax3\nax3.set(ylabel='Smart_Government')\nax3.set_title(label=\"Smart_Government\", fontdict={'size': 20})\nax3.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax3.set(xlabel=None)\n\n# Smart_Economy \/ ax4\nax4.set(ylabel='Smart_Economy')\nax4.set_title(label=\"Smart_Economy\", fontdict={'size': 20})\nax4.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax4.set(xlabel=None)\n\n# Smart_People \/ ax5\nax5.set(ylabel='Smart_People')\nax5.set_title(label=\"Smart_People\", fontdict={'size': 20})\nax5.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax5.set(xlabel=None)\n\n# Smart_Living \/ ax6\nax6.set(ylabel='Smart_Living')\nax6.set_title(label=\"Smart_Living\", fontdict={'size': 20})\nax6.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax6.set(xlabel=None)\n\nplt.show()","f522401f":"cities_continents_visualization_copy = cities_continents_visualization.copy()\ncities_continents_heatmap = cities_continents_visualization.drop(['Country', 'Smart_Total', 'lat', 'lng', 'iso2', 'iso3'], axis=1, inplace=True)\ncities_continents_heatmap","7cb7bb77":"cities_continents_pivot = cities_continents_visualization.pivot(index='City', columns='Continent_Name')\ncities_continents_pivot","8b7aba78":"# Heatmap\nplt.figure(figsize=(10, 10))\nsns.heatmap(data=cities_continents_pivot, annot=True, annot_kws={\"size\":10},linewidths=.5, cmap=\"YlGnBu\", fmt=\"\")\nplt.show()","c44cf95f":"# Display a map centered in Asia\nmap = folium.Map(location=(29, 100), zoom_start=3)\nmap","5bb126d7":"cities_continents_visualization_copy","fdabfa8d":"# Display Circle Marker on the map\n\nfor lat, long, total, radius in zip(cities_continents_visualization_copy['lat'], cities_continents_visualization_copy['lng'], cities_continents_visualization_copy['Smart_Total'], cities_continents_visualization_copy['Smart_Total']):\n    folium.CircleMarker(\n        location=[lat, long],\n        radius = radius \/ 750,\n        fill=True,\n        fill_opacity=0.3,\n        popup=(\"Total\", total)\n    ).add_to(map)\n\nmap","3f75ad46":"# FastMarkerCluster\n\nFastMarkerCluster(data=cities_continents_visualization_copy[['lat', 'lng']]).add_to(map)\nfolium.LayerControl().add_to(map)\n\nmap","300b4e7c":"## Data Preprocessing","a46edd3f":"### data","fb8102fc":"### Heatmap","e29e6e51":"### Map","eac2e1f2":"## Visualization","bd163d48":"## Data Preparation","33ebd476":"### Bar Plot","64c6c54b":"## Import libraries and data","4a81de50":"# Visualization of Smart Cities","cc2f1569":"### cities","975e28b8":"### continents"}}