{"cell_type":{"e8990fb2":"code","2b0fde25":"code","a405b808":"code","779b36f0":"code","8d989632":"code","2ac6593b":"code","802a95b9":"code","a2323a60":"code","697c61c6":"code","362cf9ad":"code","2c7cf30b":"code","35fe7c2d":"code","3bb83c41":"code","0687895d":"markdown","ed02221a":"markdown","2202e2bc":"markdown","81422428":"markdown","a73c13e2":"markdown"},"source":{"e8990fb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\nfrom wordcloud import WordCloud\n\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2b0fde25":"data = pd.read_csv('\/kaggle\/input\/data-analyst-jobs\/DataAnalyst.csv')\ndata.head(2)","a405b808":"data.drop(['Unnamed: 0'], axis =1, inplace = True)","779b36f0":"data.notnull()","8d989632":"data.replace(to_replace=-1,value=np.nan,inplace= True)\ndata.replace(to_replace=-1.0,value=np.nan,inplace= True)\ndata.replace(to_replace='-1',value=np.nan,inplace= True)\ndata.replace(to_replace='-1.0',value=np.nan,inplace= True)\ndata.replace(to_replace='',value=np.nan,inplace= True)\ndata['Rating'].replace(to_replace=\"nan\",value=\"0\",inplace= True)\ndata['Easy Apply'] = data['Easy Apply'].fillna(False).astype('bool')\ndata.drop(['Competitors'],axis=1,inplace=True)\ndata.drop(['Founded'],axis=1,inplace=True)","2ac6593b":"data_salary = data['Salary Estimate']\ndata_sal = data_salary.astype(str)","802a95b9":"x = []\nfor i in data_sal:\n    min_val = i.split('(')[0].split('-')[0].lstrip('$').rstrip('K')\n    x.append(min_val)\ndata['Min Salary'] = pd.DataFrame(x)\n\ndata['Min Salary'].replace(to_replace=\"nan\",value=\"0\",inplace= True)\ndata['Min Salary'].astype('int')","a2323a60":"y = []\nfor i in data_sal:\n    max_val = i.split('(')[0].split('-')[-1].lstrip('$').split(\"K\")[0]\n    y.append(max_val)\ndata['Max Salary'] = pd.DataFrame(y)\n\ndata['Max Salary'].replace(to_replace=\"nan\",value=\"0\",inplace= True)\ndata['Max Salary'].astype('int')","697c61c6":"data_company = data['Company Name']\ndata_comp = data_company.astype(str)\n\ny = []\nfor i in data_comp:\n    company = i.split('\\n')[0]\n    y.append(company)\ndata['Company'] = pd.DataFrame(y)\n\ndata.drop(['Company Name'],axis=1,inplace=True)","362cf9ad":"df_easy_apply = data[data['Easy Apply']==True]\ndf = df_easy_apply.groupby('Company')['Easy Apply'].count().reset_index()\ncompany_opening_df = df.sort_values('Easy Apply',ascending=False)","2c7cf30b":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data = company_opening_df.head(10),\n    x = 'Company',\n    y = 'Easy Apply',\n    palette = 'Set1'\n)\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation = 45, \n    horizontalalignment = 'right',\n    fontweight = 'light',\n)\nplt.show()","35fe7c2d":"data_analyst = data[data['Job Title']==\"Data Analyst\"]\nsns.set(style=\"white\", palette = \"muted\", color_codes=True)\nf, axes = plt.subplots(1, 2, figsize=(15, 8), sharex=True)\nsns.despine(left=True)\nsns.distplot(data_analyst['Min Salary'], color=\"b\", ax=axes[0])\nsns.distplot(data_analyst['Max Salary'], color=\"r\",ax=axes[1])\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()","3bb83c41":"job_title = data['Job Title'][~pd.isnull(data['Job Title'])]\nwordCloud = WordCloud(width=450,height= 300).generate(' '.join(job_title))\nplt.figure(figsize=(19,9))\nplt.axis('on')\nplt.title(data['Job Title'].name,fontsize=20)\nplt.imshow(wordCloud)\nplt.show()","0687895d":"# Get minimum and maximum salary.","ed02221a":"# Salary Distribution (min and max)","2202e2bc":"The data includes Job Title, Salary Estimate, JD, Rating, Company name, Location, HQ's, Company Size, Founded Year, Ownership Type, Industry,Sector, Revenue, Competitors and Easy Apply\n\n# Lets Clean the data and check if any missing values.","81422428":"# Let's read the CSV and display first five rows to understand the data.","a73c13e2":"# Current Openings"}}