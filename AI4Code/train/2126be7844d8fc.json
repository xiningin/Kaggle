{"cell_type":{"b865451f":"code","09130af1":"code","000f5564":"code","76600519":"code","8e971a52":"code","5e5c816c":"code","31b34a52":"code","c60a135b":"code","ff86c94d":"code","13986b51":"code","6ab117d7":"code","b5b7cbb2":"code","8e6e06ae":"code","9ab94d0c":"code","37a79437":"code","b0b9391c":"code","a45bbc1a":"code","92b102a6":"code","98e2e538":"code","38b5bbcc":"code","695314be":"code","893a8ed1":"code","13604e04":"code","7c9984bb":"code","f3f2d9ad":"code","f555fbd6":"code","3c4d0fa4":"code","6331e976":"code","07e0278b":"code","6ba9d513":"code","e2a66da8":"code","ef6b8684":"code","16cbaccc":"code","5f47d2e0":"code","5672aad3":"code","db7db4bd":"code","f9f9abfd":"code","e3afbf39":"code","37ed7aa5":"code","23df784c":"code","15fb8e02":"code","7e867946":"code","de79636e":"code","26564c64":"code","8539e81a":"code","7a7c3bb7":"code","c6c2e9a2":"code","424d0551":"code","b647363c":"code","c3be07c3":"code","0d89d288":"code","bb251c83":"code","cbd914ac":"code","46108d00":"code","9e33a37d":"code","d0b708a6":"code","bcf6c34f":"code","d158ee63":"code","e59ebbc4":"code","8ad0f231":"code","c33cd22a":"code","78ebb456":"code","7c9c2ecd":"code","a8cd25e6":"code","b6bcf264":"code","b24ff688":"code","79ce67e1":"code","2931ee28":"code","9805db07":"code","1db72512":"code","d19ad6a4":"code","b463e4ec":"code","fa7cadb3":"code","ad6b141b":"code","3d4efc4c":"code","f7ec116c":"code","e991d58f":"code","246c3396":"code","448a71c4":"code","ec8137fd":"code","475f9d34":"code","8ce72011":"code","1993c1fd":"code","6232cf6e":"code","d9516b42":"code","05e6afd5":"code","50608e96":"code","d77c588e":"code","2089a493":"code","b9189fc7":"code","c90bd8d3":"code","7ad434db":"code","10773a44":"code","a4afde06":"code","2e89c9a5":"code","f1cd08c1":"code","721d88cc":"code","0c400405":"code","a38aeaff":"code","2dfbdfbc":"code","d49aaabf":"code","94618ce2":"code","ca4fbf4a":"code","b81d8a75":"code","719dd829":"code","8ac7917d":"code","da4b6b0a":"code","314bf683":"code","bd6d455f":"code","917d337e":"code","75792a18":"code","d5360703":"code","4490c0db":"code","61c27e58":"code","18da4f47":"code","ce9324b5":"code","d34a5530":"code","5cb43cbb":"code","8c81a278":"code","7616c7fd":"code","3930588b":"code","bef5be8a":"code","5189933e":"code","b97f8e84":"code","f8fa7d49":"code","790d06d1":"code","93cc48ec":"code","5166ac42":"markdown","e461ad41":"markdown","52f76124":"markdown","e2a4a1bf":"markdown","9d371698":"markdown"},"source":{"b865451f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","09130af1":"df = pd.read_csv(\"..\/input\/california-housing-prices\/housing data.csv\")","000f5564":"df.head()","76600519":"df.shape","8e971a52":"df.info()","5e5c816c":"df['households'].value_counts()","31b34a52":"df['households'].replace('no',np.nan,inplace=True)\ndf['households'] = pd.to_numeric(df['households'])","c60a135b":"df.info()","ff86c94d":"df.isnull().sum()","13986b51":"df['ocean_proximity'].value_counts()","6ab117d7":"from sklearn import preprocessing\nlabelencoder = preprocessing.LabelEncoder()\ndf['ocean_proximity'] = labelencoder.fit_transform(df['ocean_proximity'])","b5b7cbb2":"df.info()","8e6e06ae":"df['gender'].value_counts()","9ab94d0c":"df['gender'].replace(\"female\", 0 , inplace = True)\ndf['gender'].replace(\"male\", 1 , inplace = True)","37a79437":"df.info()","b0b9391c":"plt.figure(figsize = (12,8))\nsns.heatmap(df.corr(),annot=True)","a45bbc1a":"df.isnull().sum()","92b102a6":"df.drop(columns=['gender'] , inplace=True)","98e2e538":"df.dropna(subset=['total_bedrooms' ,'households','median_income' ] , how = 'all' , inplace=True)","38b5bbcc":"df.isnull().sum()","695314be":"df.shape","893a8ed1":"df.duplicated().value_counts()","13604e04":"plt.figure(figsize = (12,8))\nsns.heatmap(df.corr(),annot=True)","7c9984bb":"df.isnull().sum()","f3f2d9ad":"from sklearn.impute import KNNImputer\nKNNImputerModel = KNNImputer(n_neighbors=5)","f555fbd6":"df[['total_bedrooms' , 'households' , 'median_income' , 'housing_median_age' , 'population']] = KNNImputerModel.fit_transform(df[['total_bedrooms' , 'households' , 'median_income' , 'housing_median_age' , 'population']])","3c4d0fa4":"df.isnull().sum()","6331e976":"plt.figure(figsize = (12,8))\nsns.heatmap(df.corr(),annot=True)","07e0278b":"df.to_csv('.\/dataKNNImputer.csv' , index=False)","6ba9d513":"df = pd.read_csv(\"dataKNNImputer.csv\")","e2a66da8":"df.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,4))\nplt.show()","ef6b8684":"import warnings\nwarnings.filterwarnings('ignore')\nplt.figure(figsize=(20,15))\nplt.subplot(3,2,1)\nsns.distplot(df['total_rooms'])\nplt.subplot(3,2,2)\nsns.distplot(df['total_bedrooms'])\nplt.subplot(3,2,3)\nsns.distplot(df['population'])\nplt.subplot(3,2,4)\nsns.distplot(df['households'])\nplt.subplot(3,2,5)\nsns.distplot(df['median_income'])\nplt.subplot(3,2,6)\nsns.distplot(df['median_house_value'])\nplt.show()","16cbaccc":"df.isnull().sum()","5f47d2e0":"noOutliers = df\nnoOutliers","5672aad3":"upper_limit = noOutliers['total_rooms'].mean() + 3*noOutliers['total_rooms'].std()\nlower_limit = noOutliers['total_rooms'].mean() - 3*noOutliers['total_rooms'].std()\nnoOutliers = noOutliers[(noOutliers['total_rooms'] > lower_limit) & (noOutliers['total_rooms'] < upper_limit)]\nnoOutliers","db7db4bd":"upper_limit = noOutliers['total_bedrooms'].mean() + 3*noOutliers['total_bedrooms'].std()\nlower_limit = noOutliers['total_bedrooms'].mean() - 3*noOutliers['total_bedrooms'].std()\nnoOutliers = noOutliers[(noOutliers['total_bedrooms'] > lower_limit) & (noOutliers['total_bedrooms'] < upper_limit)]\nnoOutliers","f9f9abfd":"upper_limit = noOutliers['population'].mean() + 3*noOutliers['population'].std()\nlower_limit = noOutliers['population'].mean() - 3*noOutliers['population'].std()\nnoOutliers = noOutliers[(noOutliers['population'] > lower_limit) & (noOutliers['population'] < upper_limit)]\nnoOutliers","e3afbf39":"upper_limit = noOutliers['households'].mean() + 3*noOutliers['households'].std()\nlower_limit = noOutliers['households'].mean() - 3*noOutliers['households'].std()\nnoOutliers = noOutliers[(noOutliers['households'] > lower_limit) & (noOutliers['households'] < upper_limit)]\nnoOutliers","37ed7aa5":"upper_limit = noOutliers['median_income'].mean() + 3*noOutliers['median_income'].std()\nlower_limit = noOutliers['median_income'].mean() - 3*noOutliers['median_income'].std()\nnoOutliers = noOutliers[(noOutliers['median_income'] > lower_limit) & (noOutliers['median_income'] < upper_limit)]\nnoOutliers","23df784c":"upper_limit = noOutliers['median_house_value'].mean() + 3*noOutliers['median_house_value'].std()\nlower_limit = noOutliers['median_house_value'].mean() - 3*noOutliers['median_house_value'].std()\nnoOutliers = noOutliers[(noOutliers['median_house_value'] > lower_limit) & (noOutliers['median_house_value'] < upper_limit)]\nnoOutliers","15fb8e02":"import warnings\nwarnings.filterwarnings('ignore')\nplt.figure(figsize=(20,15))\nplt.subplot(3,2,1)\nsns.distplot(noOutliers['total_rooms'])\nplt.subplot(3,2,2)\nsns.distplot(noOutliers['total_bedrooms'])\nplt.subplot(3,2,3)\nsns.distplot(noOutliers['population'])\nplt.subplot(3,2,4)\nsns.distplot(noOutliers['households'])\nplt.subplot(3,2,5)\nsns.distplot(noOutliers['median_income'])\nplt.subplot(3,2,6)\nsns.distplot(noOutliers['median_house_value'])\nplt.show()","7e867946":"noOutliers.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,4))\nplt.show()","de79636e":"noOutliers.to_csv('.\/dataNoOutliers.csv' , index=False)","26564c64":"df = pd.read_csv(\"dataNoOutliers.csv\")","8539e81a":"X = df.drop(\"median_house_value\" , axis = 1).values\nY = df['median_house_value'].values","7a7c3bb7":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.25 , random_state=42)","c6c2e9a2":"from sklearn.preprocessing import StandardScaler\nscale = StandardScaler ()\nX_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","424d0551":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train,Y_train)","b647363c":"lr.score(X_train,Y_train)","c3be07c3":"lr.score(X_test,Y_test)","0d89d288":"from sklearn.linear_model import Ridge\nrid = Ridge()","bb251c83":"rid.fit(X_train,Y_train)","cbd914ac":"rid.score(X_train,Y_train)","46108d00":"rid.score(X_test,Y_test)","9e33a37d":"df = pd.read_csv(\"..\/input\/california-housing-prices\/housing data.csv\")","d0b708a6":"df","bcf6c34f":"import matplotlib.image as mpimg\nimport warnings\nwarnings.filterwarnings('ignore')\nimg=mpimg.imread(\"..\/input\/testimg\/280px-California_Locator_Map.PNG\")\ndf.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", figsize=(30,15), s=df['population']\/30, label=\"Population\", c=\"median_house_value\", colorbar=False, cmap=plt.get_cmap(\"jet\"))\nplt.imshow(img , extent=[-124.55, -113.80, 32.45, 42.05], cmap=plt.get_cmap(\"jet\"))\nplt.ylabel(\"Latitude\")\nplt.xlabel(\"Longitude\")\nprices_values = np.linspace(df[\"median_house_value\"].min(), df[\"median_house_value\"].max(), 11)\ncbar = plt.colorbar()\ncbar.ax.set_yticklabels([\"$%dk\"%(round(v\/1000)) for v in prices_values])\ncbar.set_label('Median House Value')\nplt.legend()\nplt.show();","d158ee63":"df.info()","e59ebbc4":"df['households'].value_counts()","8ad0f231":"df['households'].replace('no',np.nan,inplace=True)\ndf['households'] = pd.to_numeric(df['households'])","c33cd22a":"df['ocean_proximity'].value_counts()","78ebb456":"from sklearn import preprocessing\nlabelencoder = preprocessing.LabelEncoder()\ndf['ocean_proximity'] = labelencoder.fit_transform(df['ocean_proximity'])","7c9c2ecd":"df['gender'].value_counts()","a8cd25e6":"df.isnull().sum()","b6bcf264":"df['gender'].value_counts().plot.pie(autopct='%1.1f%%')","b24ff688":"genders = df['gender'].value_counts().sum()\nfemale = df[\"gender\"].value_counts()[0]\nmale = df[\"gender\"].value_counts()[1]","79ce67e1":"male = male\/ genders\nfemale = female \/ genders\ngenders = [\"female\" , \"male\"]\ndf['gender'] = df['gender'].fillna(pd.Series(np.random.choice(genders,  p=[female,male], size=len(df))))\ndf['gender'].value_counts().plot.pie(autopct='%1.1f%%')","2931ee28":"df['gender'].replace(\"female\", 0 , inplace = True)\ndf['gender'].replace(\"male\", 1 , inplace = True)","9805db07":"df.info()","1db72512":"df.isnull().sum()","d19ad6a4":"plt.figure(figsize = (12,8))\nsns.heatmap(df.corr(),annot=True)","b463e4ec":"df.dropna(subset=['population' , 'housing_median_age'] , inplace = True)","fa7cadb3":"df.dropna(subset=['total_bedrooms' , 'households','median_income'] , how = 'all', inplace = True)","ad6b141b":"df.isnull().sum()","3d4efc4c":"data = [df['total_rooms'],df['population'],df['total_bedrooms']]\nheaders = [\"total_rooms\", \"population\",\"total_bedrooms\"]\nnew_df = pd.concat(data, axis=1, keys=headers)\nnew_df","f7ec116c":"data1 = [df['total_bedrooms']]\nheaders1 = [\"total_bedrooms\"]\nnew_df1 = pd.concat(data1, axis=1, keys=headers1)\nnew_df1","e991d58f":"training_data = new_df.dropna(subset=['total_bedrooms'])\ntraining_data = training_data.drop(columns=['total_bedrooms'])\ntraining_data = training_data.dropna()\ntraining_data","246c3396":"predict_data = new_df.loc[df['total_bedrooms'].isnull()]\npredict_data = predict_data.drop(columns=['total_bedrooms'])\npredict_data = predict_data.dropna()\npredict_data","448a71c4":"target_class_traing = new_df1.dropna()\ntarget_class_traing","ec8137fd":"predict_values = new_df1.loc[df['total_bedrooms'].isnull()]\npredict_values","475f9d34":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(training_data,target_class_traing)","8ce72011":"predict_values = lr.predict(predict_data)","1993c1fd":"df.loc[df.total_bedrooms.isnull() , 'total_bedrooms'] = predict_values","6232cf6e":"df.isnull().sum()","d9516b42":"data1 = df[['total_rooms','total_bedrooms' , 'population' ,'households']]\ntraining_data1 = data1.dropna(subset=['households'])\ntraining_data1 = training_data1.drop(columns=['households'])\ntraining_data1","05e6afd5":"predict_data1 = data1.loc[df['households'].isnull()]\npredict_data1 = predict_data1.drop(columns=['households'])\npredict_data1 = predict_data1.dropna()\npredict_data1","50608e96":"target_class_traing1 = data1[['households']].dropna()\ntarget_class_traing1","d77c588e":"predict_values1 = data1[['households']].loc[data1['households'].isnull()]\npredict_values1","2089a493":"lr1 = LinearRegression()\nlr1.fit(training_data1,target_class_traing1)","b9189fc7":"predict_values1 = lr1.predict(predict_data1)","c90bd8d3":"df.loc[df.households.isnull() , 'households'] = predict_values1","7ad434db":"df.isnull().sum()","10773a44":"data2 = df[['total_rooms','median_house_value' , 'median_income']]\ntraining_data2 = data2.dropna(subset=['median_income'])\ntraining_data2 = training_data2.drop(columns=['median_income'])\ntraining_data2","a4afde06":"predict_data2 = data2.loc[df['median_income'].isnull()]\npredict_data2 = predict_data2.drop(columns=['median_income'])\npredict_data2 = predict_data2.dropna()\npredict_data2","2e89c9a5":"target_class_traing2 = data2[['median_income']].dropna()\ntarget_class_traing2","f1cd08c1":"predict_values2 = data2[['median_income']].loc[data2['median_income'].isnull()]\npredict_values2","721d88cc":"lr2 = LinearRegression()\nlr2.fit(training_data2,target_class_traing2)","0c400405":"predict_values2 = lr2.predict(predict_data2)","a38aeaff":"df.loc[df.median_income.isnull() , 'median_income'] = predict_values2","2dfbdfbc":"df.isnull().sum()","d49aaabf":"plt.figure(figsize = (12,8))\nsns.heatmap(df.corr(),annot=True)","94618ce2":"df.to_csv('.\/2ndAttemptData.csv' , index=False)","ca4fbf4a":"X = df.drop(\"median_house_value\" , axis = 1).values\nY = df['median_house_value'].values","b81d8a75":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.25 , random_state=42)","719dd829":"lr3 = LinearRegression()\nlr3.fit(X_train , Y_train)","8ac7917d":"lr3.score(X_train , Y_train)","da4b6b0a":"lr3.score(X_test , Y_test)","314bf683":"df.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,4))\nplt.show()","bd6d455f":"import warnings\nwarnings.filterwarnings('ignore')\nplt.figure(figsize=(20,15))\nplt.subplot(3,2,1)\nsns.distplot(df['total_rooms'])\nplt.subplot(3,2,2)\nsns.distplot(df['total_bedrooms'])\nplt.subplot(3,2,3)\nsns.distplot(df['population'])\nplt.subplot(3,2,4)\nsns.distplot(df['households'])\nplt.subplot(3,2,5)\nsns.distplot(df['median_income'])\nplt.subplot(3,2,6)\nsns.distplot(df['median_house_value'])\nplt.show()","917d337e":"Q1 = df.drop(columns=['longitude' , 'latitude','housing_median_age' , 'ocean_proximity','gender']).quantile(0.25)\nQ3 = df.drop(columns=['longitude' , 'latitude','housing_median_age' , 'ocean_proximity','gender']).quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)","75792a18":"df = df[~((df < (Q1 - 1.5 * IQR)) |(df > (Q3 + 1.5 * IQR))).any(axis=1)]","d5360703":"df.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,4))\nplt.show()","4490c0db":"import warnings\nwarnings.filterwarnings('ignore')\nplt.figure(figsize=(20,15))\nplt.subplot(3,2,1)\nsns.distplot(df['total_rooms'])\nplt.subplot(3,2,2)\nsns.distplot(df['total_bedrooms'])\nplt.subplot(3,2,3)\nsns.distplot(df['population'])\nplt.subplot(3,2,4)\nsns.distplot(df['households'])\nplt.subplot(3,2,5)\nsns.distplot(df['median_income'])\nplt.subplot(3,2,6)\nsns.distplot(df['median_house_value'])\nplt.show()","61c27e58":"X = df.drop(\"median_house_value\" , axis = 1).values\nY = df['median_house_value'].values","18da4f47":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.25 , random_state=42)","ce9324b5":"lr4 = LinearRegression()\nlr4.fit(X_train , Y_train)","d34a5530":"lr4.score(X_train , Y_train)","5cb43cbb":"lr4.score(X_test , Y_test)","8c81a278":"df = pd.read_csv(\".\/2ndAttemptData.csv\")\ndf","7616c7fd":"X = df.drop(\"median_house_value\" , axis = 1).values\nY = df['median_house_value'].values\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.25 , random_state=42)\nlr = LinearRegression()\nlr.fit(X_train , Y_train)","3930588b":"lr.score(X_train , Y_train)","bef5be8a":"lr.score(X_test , Y_test)","5189933e":"predict_test = lr.predict([X_train[8545]])\npredict_test","b97f8e84":"X_train[8545]","f8fa7d49":"Y_train[8545]","790d06d1":"data_test = [-119.7 , 34.5 , 16.0 , 600 , 200 , 350 , 70 , 7.500 , 4 , 1]\npredict_test = lr.predict([data_test])\npredict_test","93cc48ec":"warnings.filterwarnings('ignore')\nimg=mpimg.imread(\"..\/input\/testimg\/280px-California_Locator_Map.PNG\")\nplt.figure(figsize = (30,15))\nplt.imshow(img , extent=[-124.55, -113.80, 32.45, 42.05], cmap=plt.get_cmap(\"jet\"))\nplt.ylabel(\"Latitude\")\nplt.xlabel(\"Longitude\")\nplt.plot(data_test[0], data_test[1] , marker='v', c='black')\nplt.legend()\nplt.show();","5166ac42":"## First Attempt","e461ad41":"## as you can see we had predict the price of house in this area given the spec of it (it's the point with the black color on map) (^_^)","52f76124":"## Second Attempt","e2a4a1bf":"## Some notes before start (important)\n\n1- first attempt section have many cells which was deleted in development stage. so, if you run it, you will face many problems. just read the code and guess the deleted code (^_^)\n\n2- second attempt section is designed will to not face many problems. you can start with it but be careful.\n\n3- i'm just a beginner, and i tried hard to make my code obvious and clean, so don't judge my work as a professional work, please. (^_^)","9d371698":"# I think the data before dealing with outliers was best than after \n# So i will continue with the data before dealing with outliers  (^_^)"}}