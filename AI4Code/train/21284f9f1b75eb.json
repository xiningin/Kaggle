{"cell_type":{"dc16898e":"code","ec3a3571":"code","fe037664":"code","6103b24e":"code","33834f7a":"code","5d24ed8b":"code","1e5c1c29":"code","34bffdf0":"code","853cc4a9":"code","c2b1ebc8":"code","616d9694":"code","72d6c63f":"code","cd696de5":"code","493d74de":"code","72744d07":"code","8583f957":"code","1c28ad27":"code","d5a2bd65":"code","d180f538":"code","d17eb74e":"code","b4075061":"code","8159546e":"code","3d83c2b0":"code","c9084637":"code","8100b62b":"code","2876e83e":"code","ab1e6c8c":"code","28a38caf":"code","b264a93d":"code","4b9c4a2b":"code","57202eba":"code","f97416f9":"code","b071da03":"code","a146859d":"code","3bc6b202":"code","abb7f410":"code","1c37a46c":"code","60933836":"code","e4f3d5ce":"code","01f4b68d":"code","3b48376c":"code","04da4785":"code","aca6bb79":"code","86617262":"code","9d239c53":"code","37589919":"code","5ab6c7a2":"code","43a18d22":"code","61e1ccf9":"code","2e8f9e48":"code","4276fb96":"code","a232f0b4":"code","746d4337":"code","ef8ddda1":"code","e11f1479":"code","754febad":"code","3cebda23":"code","51788f88":"code","97906c35":"code","23d9ca6c":"code","7f8d3f20":"code","6686965f":"code","dacc3490":"code","b22e8c38":"code","964a893e":"code","f8f539bc":"code","2ef65a42":"code","09350add":"code","fc6b3072":"code","8f4f31a6":"code","fa62aca5":"code","dcf15f1a":"code","7b8c9b45":"code","e106a442":"code","cb60d678":"code","2eebc764":"code","3f64bc69":"code","a6170fb5":"code","6f2d9ab3":"code","18d99c33":"code","8aec6ef2":"code","b5626163":"code","2aff6e76":"code","d844aae3":"code","b729d268":"code","ddf97d67":"code","2f90bc8a":"code","f99c8387":"code","c563ceac":"code","4eda9592":"code","d8dafff6":"code","97813705":"code","2f124b68":"code","abf1dbb4":"code","d3ecc394":"code","bb91278e":"code","a748e7bf":"code","d774240b":"code","edc1deef":"code","fc77ccdf":"code","108b89ef":"code","b56f9871":"code","cabbe47a":"code","c9f6bc9f":"code","5acf6508":"code","79038711":"code","49835726":"code","9c35fb0a":"code","1566fd1f":"code","4dd884a7":"code","365f9364":"code","a7220a29":"code","f340c49c":"code","4c2bd337":"code","e6f9c876":"code","fc5ecc52":"code","d993a4ef":"code","c0b4b6a2":"code","bb5df30e":"code","d7229108":"code","54b58562":"code","e43dd879":"code","a2019d7c":"code","29d44fca":"code","178a9229":"code","9dfa57d9":"code","445c86b9":"code","f31d39fb":"code","6da5dfba":"code","2710d1c4":"code","2a9efa09":"code","8bf78c48":"code","e01c3aed":"code","25106b2a":"code","e40e9520":"code","dadd65cf":"code","dce72b4a":"code","905ba950":"code","c82c1afa":"code","bddeacb6":"code","365b1608":"code","836aacfe":"code","83e8c072":"code","8ed1c3a9":"code","0c322748":"code","5f796e79":"code","d010b351":"code","f97f0679":"code","b7581f9c":"code","09e440f8":"code","beeb10f5":"code","10b4c8ec":"code","8cb6305c":"code","dfb8b088":"code","cdcf7a7e":"code","95bd0df9":"code","8c419220":"code","ab4a4939":"code","e824ea10":"code","319f946d":"code","5be76fa9":"code","90a9d5ec":"code","2d3ae688":"code","6f5cc485":"code","6eddd402":"code","67802160":"code","3204cc33":"code","b93dc5e6":"code","c8cf3ea6":"code","232ddb96":"markdown","2fffb885":"markdown","904e01f5":"markdown","1fcef1a8":"markdown","e4712ff4":"markdown","97226858":"markdown","fd770d4c":"markdown","b8fa1c68":"markdown","c36739ef":"markdown","99a530ba":"markdown","a8505ffd":"markdown","3c102ed1":"markdown","dc0ab30d":"markdown","cd05f26b":"markdown","904787c7":"markdown","a64e241d":"markdown","d576760d":"markdown","466acf48":"markdown","dc74c972":"markdown","e5455c9e":"markdown","263d40a3":"markdown","a0843517":"markdown","05ed5052":"markdown","ab50a67e":"markdown","7887deb0":"markdown","cd989baf":"markdown","8b8396e0":"markdown","48b91b04":"markdown","48858cb9":"markdown","67b12066":"markdown","cd1c2121":"markdown","256aaeda":"markdown","c207f762":"markdown","968e77a1":"markdown","4ef6fc5a":"markdown","8da248ae":"markdown","29dfc2a2":"markdown","754cf700":"markdown","c449336f":"markdown","23cec060":"markdown","a420a44d":"markdown","3f72bd13":"markdown","e2486f76":"markdown","73fd5c72":"markdown","5ec15b49":"markdown","b095972f":"markdown","a726b664":"markdown","edf9a3cb":"markdown","5bb12bb9":"markdown","bcb5b677":"markdown","d1eb7c09":"markdown","0f7ac00f":"markdown","b54dcd42":"markdown","568d550b":"markdown","ae985330":"markdown","0f2173bf":"markdown","d7f20666":"markdown","75cc796e":"markdown","4dc217ba":"markdown","50da7b8b":"markdown","2eb1fe93":"markdown","501e81fa":"markdown","8398e15b":"markdown","63e85f45":"markdown","9a61f568":"markdown","f3f57e4f":"markdown","2a4b7c37":"markdown","56613f2b":"markdown","01b17d01":"markdown","289b39d7":"markdown","cde0a75e":"markdown","25a43e9b":"markdown","d6bd66e5":"markdown","68544ae5":"markdown","5f7e14cc":"markdown","fa2722e8":"markdown","8a85c057":"markdown","f6dd3bf4":"markdown","bf22e463":"markdown","a7b13675":"markdown","da08609d":"markdown","b4fb616c":"markdown","df0d552d":"markdown","90980e4a":"markdown","4ef4c531":"markdown","f404fd51":"markdown","5a0e7a66":"markdown","e8444fe2":"markdown","0e6c37cc":"markdown","c66a1a9f":"markdown","2c5cf034":"markdown","f7d110e5":"markdown","496e0781":"markdown","28d8718a":"markdown","61d0a027":"markdown","fd47c3d9":"markdown","11218efa":"markdown","7c6f87fa":"markdown","2a8a033a":"markdown","c1615bcc":"markdown","3828fc87":"markdown","6e3012ae":"markdown","981416ee":"markdown","f7f5db39":"markdown","e0676788":"markdown","759468ea":"markdown","f3c759d3":"markdown","0b9feb84":"markdown","c52fbcea":"markdown","81d64209":"markdown","306a64f1":"markdown","88afc224":"markdown","d97d6e2a":"markdown","c9573961":"markdown","4765550e":"markdown","7c1d471d":"markdown","5a28293b":"markdown"},"source":{"dc16898e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ec3a3571":"# Code for showing toggle button for showing\/hiding the code\n# While exporting this Jupyter notebook to html for presentation purpose, hide the code for analytical view\nfrom IPython.display import HTML,Image,display\nHTML('''\n<script>\ncode_show=true;\nfunction code_toggle(){\nif (code_show){\n$('div.input').hide();\n$(\"#btn_toggle\").val(\"Show Code\");\n}else{\n$('div.input').show();\n$(\"#btn_toggle\").val(\"Hide Code\");\n}\ncode_show= !code_show;\n}\n<\/script>\n<style>\n.output_png {\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n    }\n<\/style>\n<form action=\"javascript:code_toggle()\">\n<input style = \"float:right\" type=\"submit\" id=\"btn_toggle\" value=\"Hide Code\">\n''')\n","fe037664":"#import necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nimport mlxtend\nfrom mlxtend.preprocessing import standardize\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.linear_model import LinearRegression,Lasso,Ridge,ElasticNet\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import train_test_split","6103b24e":"#Visualization settings\nsns.set_style(style='white')\nsns.set(rc={\n    'figure.figsize': (12,7),\n    'axes.facecolor': 'white',\n    'axes.grid': True,\n    'grid.color': '.9',\n    'axes.linewidth': 1.0,\n    'grid.linestyle': u'-'},\n    font_scale=1.5)\ncustom_colors=[\"#3498db\", \"#95a5a6\",\"#34495e\", \"#2ecc71\", \"#e74c3c\"]\nsns.set_palette(custom_colors)","33834f7a":"Image('..\/input\/houseprice-1\/housesbanner_1.png')","5d24ed8b":"df_train=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\nprint (\"Training data loaded\")","1e5c1c29":"print (\"Sample dataframe:\\n\")\ndf_train.head(3)","34bffdf0":"print (f\"Initial data frame contains {df_train.shape[0]} rows and {df_train.shape[1]} columns.\")","853cc4a9":"col_tags =\"<ol>\" + \"\".join([f\"<li><h4>{col}<\/h4><\/li>\" for col in df_train.columns]) + \"<\/ol>\"\ndisplay(HTML('<h3>Feature names:<\/h3>'))\ndisplay(HTML(col_tags))","c2b1ebc8":"print (\"Dataset summary :\\n\")\ndf_train.info()","616d9694":"val=df_train.isnull().sum()\ndf=pd.DataFrame(val,columns=[\"NullCount\"]).query('NullCount != 0')\ndf=pd.DataFrame({\"Features\": df.index,\n             \"NullCount\": df.NullCount.values})\ndf.sort_values(by=\"NullCount\",inplace=True,ascending=False)","72d6c63f":"sns.barplot(data=df,x=\"Features\",y=\"NullCount\");\nplt.xticks(rotation=90);\nplt.title(\"Features having null values\");","cd696de5":"df","493d74de":"print (f\"Number of features having null values: {df.shape[0]}\")","72744d07":"## <center> Features - Exploratory Data Analysis<\/center>","8583f957":"# Function for showing the statistcs and Pie chart for discrete features.\ndef str_discrete_analysis(fld_name):\n    print (\"Value counts: \\n\")\n    print (fld_name.value_counts())\n    plt.pie(fld_name.value_counts(),labels=fld_name.value_counts().index,autopct=lambda x: f'{x: .2f}%');\n    plt.title(fld_name.name + \" -distribution\");\n    print (\"Null value count : \", fld_name.isnull().sum())","1c28ad27":"def conti_fld_analysis(fld_name):\n    print (fld_name.describe())\n    plt.subplot(2,2,1)\n    plt.hist(fld_name)\n    plt.subplot(2,2,2)\n    sns.boxplot(fld_name)\n    plt.suptitle(fld_name.name + \" -distribution\")\n    print (\"Null value count : \", fld_name.isnull().sum())","d5a2bd65":"df_train.SalePrice.describe()","d180f538":"plt.figure(figsize=(20,10));\nplt.subplot(2,2,1)\nplt.hist(x=df_train.SalePrice);\nplt.subplot(2,2,2)\nsns.distplot(df_train.SalePrice);\nplt.subplot(2,2,3)\nsns.boxplot(df_train.SalePrice);\nplt.suptitle(\"SalePrice - distribution\");","d17eb74e":"print (f\"Skewness in data : {df_train.SalePrice.skew()}\")","b4075061":"df_train.MSSubClass.value_counts().plot.bar();\nplt.title(\"MSSubClass-value counts\");","8159546e":"df_train.MSZoning.value_counts().plot.bar();\nplt.title(\"MSZoning value counts\");","3d83c2b0":"plt.hist(x=df_train.LotFrontage,bins=100);\nplt.title(\"LotFrontage-distribution\");","c9084637":"print (\"Descriptive statistics:\")\ndf_train.LotFrontage.describe()","8100b62b":"df_train.LotArea.describe()","2876e83e":"plt.figure(figsize=(20,10));\nplt.subplot(2,2,1);\nplt.hist(df_train.LotArea);\nplt.subplot(2,2,2);\nsns.boxplot(df_train.LotArea);\nplt.suptitle(\"LotArea - distribution\");","ab1e6c8c":"print (f\"Unique values: \\n\")\nnp.unique(df_train.Street,return_counts=True)","28a38caf":"plt.pie(df_train.Street.value_counts(), autopct=lambda s: f'{s:.2f}%',labels=[\"Paved\",\"Gravel\"]);\nplt.title(\"Street- distribution\");","b264a93d":"print (\"Value counts:\\n\")\ndf_train.Alley.value_counts()","4b9c4a2b":"print (\"Value counts:\\n\")\ndf_train.LotShape.value_counts()","57202eba":"plt.pie(df_train.LotShape.value_counts(), autopct=lambda s: f'{s:.2f}%',labels=df_train.LotShape.value_counts().index);\nplt.title(\"LotShape - distribution\");","f97416f9":"print (\"Value counts:\")\ndf_train.LandContour.value_counts()","b071da03":"plt.pie(df_train.LandContour.value_counts(), autopct=lambda s: f'{s:.2f}%',labels=df_train.LandContour.value_counts().index);\nplt.title(\"LandContour - distribution\");","a146859d":"print (\"Value Counts:\\n\")\ndf_train.Utilities.value_counts()","3bc6b202":"str_discrete_analysis(df_train.LotConfig)","abb7f410":"str_discrete_analysis(df_train.LandSlope)","1c37a46c":"df_train.Neighborhood.value_counts().plot.bar();\nplt.title(\"Neighborhood - distribution\");","60933836":"str_discrete_analysis(df_train.Condition1)","e4f3d5ce":"display (HTML(\"<h3 style='background-color:yellow'>String Discrete variable <\/h3>\"))","01f4b68d":"str_discrete_analysis(df_train.Condition2)","3b48376c":"str_discrete_analysis(df_train.BldgType)","04da4785":"str_discrete_analysis(df_train.OverallQual)","aca6bb79":"str_discrete_analysis(df_train.OverallCond)","86617262":"df_train.YearBuilt.describe()","9d239c53":"plt.hist(df_train.YearBuilt);\nplt.title(\"Construction Year - distribution\");","37589919":"df_train.YearRemodAdd.describe()","5ab6c7a2":"plt.hist(df_train.YearRemodAdd);\nplt.title(\"Remodel date -distribution\");","43a18d22":"str_discrete_analysis(df_train.RoofStyle)","61e1ccf9":"str_discrete_analysis(df_train.RoofMatl)","2e8f9e48":"str_discrete_analysis(df_train.Exterior1st)","4276fb96":"str_discrete_analysis(df_train.Exterior2nd)","a232f0b4":"str_discrete_analysis(df_train.MasVnrType)","746d4337":"conti_fld_analysis(df_train.MasVnrArea)","ef8ddda1":"str_discrete_analysis(df_train.ExterQual)","e11f1479":"str_discrete_analysis(df_train.ExterCond)","754febad":"str_discrete_analysis(df_train.Foundation)","3cebda23":"str_discrete_analysis(df_train.BsmtQual)","51788f88":"str_discrete_analysis(df_train.BsmtCond)","97906c35":"str_discrete_analysis(df_train.BsmtExposure)","23d9ca6c":"str_discrete_analysis(df_train.BsmtFinType1)","7f8d3f20":"conti_fld_analysis(df_train.BsmtFinSF1)","6686965f":"str_discrete_analysis(df_train.BsmtFinType2)","dacc3490":"conti_fld_analysis(df_train.BsmtFinSF2)","b22e8c38":"conti_fld_analysis(df_train.BsmtUnfSF)","964a893e":"conti_fld_analysis(df_train.TotalBsmtSF)","f8f539bc":"df_train.Heating.value_counts()","2ef65a42":"plt.pie(df_train.Heating.value_counts(),autopct=lambda s: f'{s:.2f}%',labels=df_train.Heating.value_counts().index);\nplt.title(\"Heating - distribution\");","09350add":"df_train.HeatingQC.value_counts()","fc6b3072":"plt.pie(df_train.HeatingQC.value_counts(),autopct=lambda s: f'{s:.2f}%', labels=df_train.HeatingQC.value_counts().index);\nplt.title(\"HeatingQC - distribution\");","8f4f31a6":"str_discrete_analysis(df_train.CentralAir)","fa62aca5":"str_discrete_analysis(df_train.Electrical)","dcf15f1a":"conti_fld_analysis(df_train[\"1stFlrSF\"])","7b8c9b45":"conti_fld_analysis(df_train[\"2ndFlrSF\"])","e106a442":"df_train.LowQualFinSF.describe()","cb60d678":"plt.subplot(2,2,1)\nplt.hist(df_train.LowQualFinSF);\nplt.subplot(2,2,2)\nplt.boxplot(df_train.LowQualFinSF);\nplt.suptitle(\"Low Quality Fisnished Square feet - distribution\");","2eebc764":"df_train.GrLivArea.describe()","3f64bc69":"plt.hist(df_train.GrLivArea);\nplt.title(\"GrLivArea - distribution\");\nplt.ylabel(\"Count\");","a6170fb5":"str_discrete_analysis(df_train.BsmtFullBath)","6f2d9ab3":"str_discrete_analysis(df_train.BsmtHalfBath)","18d99c33":"str_discrete_analysis(df_train.FullBath)","8aec6ef2":"str_discrete_analysis(df_train.HalfBath)","b5626163":"str_discrete_analysis(df_train.BedroomAbvGr)","2aff6e76":"str_discrete_analysis(df_train.KitchenAbvGr)","d844aae3":"df_train.KitchenQual.value_counts()","b729d268":"plt.pie(df_train.KitchenQual.value_counts(),labels=df_train.KitchenQual.value_counts().index,autopct=lambda x: f'{x:.2f}%');\nplt.title(\"Kitchen Quality -distribution\");","ddf97d67":"str_discrete_analysis(df_train.TotRmsAbvGrd)","2f90bc8a":"str_discrete_analysis(df_train.Functional)","f99c8387":"df_train.Fireplaces.describe()","c563ceac":"plt.pie(df_train.Fireplaces.value_counts(),autopct=lambda s : f'{s:.2f}%',labels=df_train.Fireplaces.value_counts().index);\nplt.title(\"Number of Fireplaces  -distribution\");","4eda9592":"str_discrete_analysis(df_train.FireplaceQu)","d8dafff6":"str_discrete_analysis(df_train.GarageType)","97813705":"df_train.GarageYrBlt.describe()","2f124b68":"plt.hist(df_train.GarageYrBlt);\nplt.title(\"GarageYrBlt - distribution\");","abf1dbb4":"str_discrete_analysis(df_train.GarageFinish)","d3ecc394":"str_discrete_analysis(df_train.GarageCars)","bb91278e":"conti_fld_analysis(df_train.GarageArea)","a748e7bf":"str_discrete_analysis(df_train.GarageQual)","d774240b":"str_discrete_analysis(df_train.GarageCond)","edc1deef":"str_discrete_analysis(df_train.PavedDrive)","fc77ccdf":"conti_fld_analysis(df_train.WoodDeckSF)","108b89ef":"conti_fld_analysis(df_train.OpenPorchSF)","b56f9871":"df_train.EnclosedPorch.describe()","cabbe47a":"plt.subplot(2,2,1)\nplt.hist(df_train.EnclosedPorch);\nplt.subplot(2,2,2)\nsns.boxplot(df_train.EnclosedPorch);\nplt.suptitle(\"EnclosedPorch - distribution\");\n","c9f6bc9f":"conti_fld_analysis(df_train[\"3SsnPorch\"])","5acf6508":"conti_fld_analysis(df_train.ScreenPorch)","79038711":"df_train.PoolArea.describe()","49835726":"plt.subplot(2,2,1)\nplt.hist(df_train.PoolArea, bins=20);\nplt.subplot(2,2,2)\nplt.boxplot(df_train.PoolArea);\nplt.suptitle(\"PoolArea -distribution\");","9c35fb0a":"str_discrete_analysis(df_train.PoolQC)","1566fd1f":"df_train.Fence.value_counts()","4dd884a7":"str_discrete_analysis(df_train.MiscFeature)","365f9364":"conti_fld_analysis(df_train.MiscVal)","a7220a29":"print (f\"Unique values: {df_train.MoSold.unique().tolist()}\")","f340c49c":"df_train.YrSold.describe()","4c2bd337":"plt.hist(df_train.YrSold);\nplt.xticks(df_train.YrSold.unique().tolist());\nplt.title(\"Year Sold - distribution\");","e6f9c876":"str_discrete_analysis(df_train.SaleType)","fc5ecc52":"df_train.SaleCondition.value_counts()","d993a4ef":"plt.pie(df_train.SaleCondition.value_counts(),autopct=lambda s: f'{s:.2f}%',labels=df_train.SaleCondition.value_counts().index);\nplt.title(\"Sale condition - distribution\");","c0b4b6a2":"str_discrete_analysis(df_train.HouseStyle)","bb5df30e":"grp_neighbrhd=df_train.groupby(\"Neighborhood\")\nunique_neighbrhd=df_train.Neighborhood.unique().tolist()\nneighbrhd_list, SalePrice_list = [],[]\nfor item in unique_neighbrhd:\n    df = grp_neighbrhd.get_group(item)\n    neighbrhd_list.append(item)\n    SalePrice_list.append(df.SalePrice.mean())\ndf_neighbrhd=pd.DataFrame({\"Neighborhood\": neighbrhd_list,\n                          \"SalePrice\": SalePrice_list})\ndf_neighbrhd.sort_values(\"SalePrice\",ascending=False,inplace=True)\nsns.barplot(data=df_neighbrhd,x=\"Neighborhood\",y=\"SalePrice\");\nplt.xticks(rotation=90);\nplt.ylabel(\"Avg SalePrice\");\nplt.title(\"Average SalePrice based on Neighborhood\");","d7229108":"del([grp_neighbrhd,df_neighbrhd,df,unique_neighbrhd])","54b58562":"grp_overallqual=df_train.groupby(\"OverallQual\")\nunique_overallqual=df_train.OverallQual.unique()\nsale_price_list,overall_qual=[],[]\nfor item in unique_overallqual:\n    df=grp_overallqual.get_group(item)\n    overall_qual.append(item)\n    sale_price_list.append(df.SalePrice.mean())\ndf_overallqual=pd.DataFrame({\"OverallQual\":overall_qual,\n                            \"SalePrice\": sale_price_list})","e43dd879":"sns.lineplot(data=df_overallqual,x=\"OverallQual\",y=\"SalePrice\");\nplt.title(\"SalePrice based on OverAllQuality\");\nplt.ylabel(\"Average SalePrice\");\nplt.xlabel(\"OverAll Quality\");","a2019d7c":"del(df,df_overallqual)","29d44fca":"df=df_train.loc[:,[\"YearBuilt\",\"YrSold\",\"SalePrice\"]].copy()\ndf[\"Age\"]=df.YrSold-df.YearBuilt\nprint (\"House age statistics:\\n\")\ndf.Age.describe()","178a9229":"grp_age=df.groupby(\"Age\")\nunique_age=df.Age.unique()\nage_list,sale_price_list,count_list=[],[],[]\nfor age in unique_age:\n    df_sale=grp_age.get_group(age)\n    age_list.append(age)\n    sale_price_list.append(df_sale.SalePrice.mean())\n    count_list.append(df_sale.Age.count())\n    \ndf_sale=pd.DataFrame({\"Age\": age_list,\n                     \"SalePrice\": sale_price_list,\n                     \"Count\":count_list})\nsns.lineplot(data=df_sale,x=\"Age\",y=\"SalePrice\");\nplt.title(\"Age of the house vs. SalePrice\");\nplt.ylabel(\"Average SalePrice\");\n","9dfa57d9":"sns.lineplot(data=df_sale,x=\"Age\",y=\"Count\");\nplt.xticks(rotation=90);\nplt.title(\"Count of reords\");","445c86b9":"df_input=df_train.copy()","f31d39fb":"def process_imputation(df_input):\n    df_input[\"PoolQC\"].fillna(\"NA\",inplace=True)\n    print (\"PoolQC - replaced missing values with NA\")\n    df_input.MiscFeature.fillna(\"NA\",inplace=True)\n    print (\"MiscFeature - replaced missing values with NA\")\n    df_input.Alley.fillna(\"NA\",inplace=True)\n    print (\"Alley - replaced missing values with NA\")\n    df_input.Fence.fillna('NA',inplace=True)\n    print (\"Fence - replaced missing values with NA\")\n    df_input.FireplaceQu.fillna(\"NA\",inplace=True)\n    print (\"FireplaceQuality - replaced missing values with NA\")\n    df_input.LotFrontage.fillna(0,inplace=True)\n    print (\"Lot frontage - replaced missing values with zero\")\n    df_input.GarageType.fillna(\"NA\",inplace=True)\n    print (\"Garage type - replaced missing values with NA\")\n    print (\"GarageYrBlt - Replacing missing value with House built year\")\n    df_input.GarageYrBlt.fillna(df_input.YearBuilt,inplace=True)\n    print (\"GarageFinish - Replacing missing values with NA\")\n    df_input.GarageFinish.fillna('NA',inplace=True)\n    print (\"GarageQual - Replacing missing values with NA\")\n    df_input.GarageQual.fillna('NA',inplace=True)\n    print (\"GarageCond - Replacing missing values with NA\")\n    df_input.GarageCond.fillna('NA',inplace=True)\n    for col in [\"BsmtExposure\",\"BsmtFinType2\",\"BsmtFinType1\",\"BsmtCond\",\"BsmtQual\"]:\n        df_input[col].fillna(\"NA\", inplace=True)\n    print (f\"{col} - replaced missing values with NA\")\n    df_input.MasVnrArea.fillna(0,inplace=True)\n    print (\"MasVnrArea - replaced missing values with 0\")\n    df_input.MasVnrType.fillna(\"None\",inplace=True)\n    print (\"MasVnrType - replaced missing values with None\")\n    df_input.Electrical.fillna(\"NA\",inplace=True)\n    print (\"Electrical - replaced missing values with NA\")\n    print (\"Is there any missing values? \")\n    print (df_input.isnull().any().value_counts().index)\n    return df_input","6da5dfba":"df_input=process_imputation(df_input)","2710d1c4":"print (f\"Target variable SalepPrice skewness: {df_input.SalePrice.skew()}\")","2a9efa09":"sns.boxplot(data=df_input,x=\"SalePrice\")\nplt.title(\"SalePrice -original distribution\");","8bf78c48":"total = df_input.shape[0]\nthreshold_price=330000\ncnt=df_input.query(\"SalePrice > @threshold_price\").shape[0]\nprint (\"Target variable having outliers. Let's find how many records are there after\", threshold_price, \" :\",cnt, \" which is \" ,(cnt\/total)*100, \"%\")","e01c3aed":"# print (\"Removing records with SalePrice > \", threshold_price)\n# df_input.drop(df_input[df_input[\"SalePrice\"]>threshold_price].index,inplace=True)","25106b2a":"# plt.subplot(2,2,1)\n# sns.boxplot(data=df_input,x=\"SalePrice\")\n# plt.suptitle(\"SalePrice -Ater removing outliers distribution\");\n# plt.subplot(2,2,2)\n# plt.hist(data=df_input,x=\"SalePrice\");\nprint (\"Skewness\",df_input.SalePrice.skew())","e40e9520":"print (\"Applying SquareRoot method of Saleprice for reducing the skewness.\")\ndf_input[\"SalePrice_sqrt\"] =np.sqrt(df_input.SalePrice)\nplt.hist(df_input.SalePrice_sqrt);\nplt.title(\"Square root of SalePrice - distribution\");\nprint (\"Skewness: \", df_input.SalePrice_sqrt.skew());","dadd65cf":"def wrangle_data(df):\n    print (f\"Shape of the dataframe before wrangling: {df.shape}\")\n    #Create new feature Age from year built and year sold\n    df[\"Age\"]=df[\"YrSold\"] - df[\"YearBuilt\"]\n    print (\"Created new feature 'Age' using Year sold and Year built\")\n    df.drop([\"YearBuilt\",\"YrSold\"],axis=1,inplace=True)\n    print (\"Removed features - YearBuilt,YrSold\")\n        \n    #Below features contains meaningless value or presence of one value dominant.\n    #Hence This features doesn't make any sense.So removing from dataset.\n    del_vars=[\"Street\",\"Alley\",\"LandContour\",\"Utilities\",\"LandSlope\",\"Condition2\",\"RoofMatl\",\"Heating\",\"CentralAir\",\"Electrical\",\n         \"Functional\",\"MiscFeature\",\"MoSold\",\"Id\"]\n    df.drop(del_vars,inplace=True,axis=1)\n    \n    ordinal_vars=[\"BsmtQual\",\"BsmtFullBath\",\"BsmtHalfBath\",\"FullBath\",\"HalfBath\",\"BedroomAbvGr\",\"KitchenAbvGr\",\"TotRmsAbvGrd\",\"Fireplaces\",\n                 \"GarageCars\",\"Age\"]\n    lbl_encoder=LabelEncoder()\n    for var in ordinal_vars:\n        df[var]=lbl_encoder.fit_transform(df[var])\n        \n    for var in [\"BsmtFinType1\",\"BsmtFinType2\"]:\n        df[var].replace([\"GLQ\",\"ALQ\",\"BLQ\",\"Rec\",\"LwQ\",\"Unf\",\"NA\"],[0,1,2,3,4,5,6],inplace=True)\n        \n    for var in [\"ExterQual\",\"ExterCond\",\"BsmtCond\",\"HeatingQC\",\"KitchenQual\",\"FireplaceQu\",\"GarageQual\",\"GarageCond\",\"PoolQC\"]:\n        df[var].replace([\"Ex\",\"Gd\",\"TA\",\"Fa\",\"Po\",\"NA\"],[0,1,2,3,4,5],inplace=True)\n        \n    for var in [\"BsmtExposure\"]:\n        df[var].replace([\"Gd\",\"Av\",\"Mn\",\"No\",\"NA\"],[0,1,2,3,4],inplace=True)\n        \n    for var in [\"GarageFinish\"]:\n        df[var].replace([\"Fin\",\"RFn\",\"Unf\",\"NA\"],[0,1,2,3],inplace=True)\n        \n    for var in [\"PavedDrive\"]:\n        df[var].replace([\"Y\",\"P\",\"N\"],[0,1,2],inplace=True)\n    \n    for var in [\"Fence\"]:\n        df[var].replace([\"GdPrv\",\"MnPrv\",\"GdWo\",\"MnWw\",\"NA\"],[0,1,2,3,4],inplace=True)    \n    df=pd.get_dummies(df)\n    print (f\"Shape of the dataframe after wrangling {df.shape}\")\n    return df","dce72b4a":"df_input=wrangle_data(df_input)","905ba950":"df_input.drop(\"SalePrice\",axis=1,inplace=True)\nprint (\"Removed the feature SalePrice\")","c82c1afa":"#Checking for any String fields.\nprint(\"List of any string data?\")\ndf_input.dtypes[df_input.dtypes==\"object\"]","bddeacb6":"corr_matrix=df_input.corr()\ncorr_matrix=pd.DataFrame(corr_matrix['SalePrice_sqrt']).sort_values('SalePrice_sqrt',ascending=False)\nnegative_corr_flds=corr_matrix[corr_matrix[\"SalePrice_sqrt\"]< 0].index.tolist()\n#Remove negative correlated features\ndf_input.drop(negative_corr_flds,axis=1,inplace=True)","365b1608":"#Removing below derived features from dataset, since they are not present in the final test file.\ndf_input.drop([\"HouseStyle_2.5Fin\",\"Exterior1st_ImStucc\",\"Exterior1st_Stone\",\"Exterior2nd_Other\"],axis=1,inplace=True)","836aacfe":"#Create independent and dependent features for model training.\nx=df_input.drop('SalePrice_sqrt',axis=1)\ny=df_input.SalePrice_sqrt\ntraining_features=x.columns.tolist()","83e8c072":"#Training and Testing split.\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1)\nprint (f\"Shape of x train: {x_train.shape}, y train: {y_train.shape},x test: {x_test.shape}, y test: {y_test.shape}\")","8ed1c3a9":"#Function for providing generalized results for regression model\ndef evaluate_model(model,x_train,y_train,x_test,y_test):\n    model.fit(x_train,y_train)\n    print (f\"Training score: {model.score(x_train,y_train)} \\nTesting score: {model.score(x_test,y_test)}\")\n    y_pred=model.predict(x_test)\n    print(\"Prediction completed\")\n    df=pd.DataFrame({\"Actual\": y_test,\n                     \"Predicted\":y_pred})\n    #Applying square function to transform to original target variable.\n    df=df.apply(np.square)\n    #Finding the difference between original and predicted\n    df[\"difference\"]=df.Predicted-df.Actual\n    df.reset_index(inplace=True)\n    #Plot actual vs predicted\n    plt.figure(figsize=(20,10));\n    sns.scatterplot(data=df,x=\"index\",y=\"Actual\",color='lightgrey',label=[\"Actual\"]);\n    sns.lineplot(data=df,x=\"index\",y=\"Predicted\",color='red',label=[\"Predicted\"]);\n    plt.legend(loc=\"right\",bbox_to_anchor=(1.1,1));\n    plt.title(\"Actual vs Predicted\");\n    plt.show()\n    return model\n    ","0c322748":"lr_model=evaluate_model(LinearRegression(normalize=True),x_train,y_train,x_test,y_test)","5f796e79":"lasso_reg=evaluate_model(Lasso(alpha=.01,normalize=True),x_train,y_train,x_test,y_test)","d010b351":"ridge_reg=evaluate_model(Ridge(normalize=True),x_train,y_train,x_test,y_test)","f97f0679":"el=evaluate_model(ElasticNet(normalize=False),x_train,y_train,x_test,y_test)","b7581f9c":"xgb_reg=evaluate_model(XGBRegressor(),x_train,y_train,x_test,y_test)","09e440f8":"del(df,df_input,df_sale,df_train)","beeb10f5":"df_test=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\nprint (\"Test file for prediction loaded.\")","10b4c8ec":"df_input=df_test.copy()","8cb6305c":"print (\"Shape of test data: \",df_input.shape)","dfb8b088":"df_input=process_imputation(df_input)","cdcf7a7e":"val=df_input.isnull().sum()\ndf=pd.DataFrame(val,columns=[\"NullCount\"]).query('NullCount != 0')\ndf=pd.DataFrame({\"Features\": df.index,\n             \"NullCount\": df.NullCount.values})\ndf.sort_values(by=\"NullCount\",inplace=True,ascending=False)\nprint(\"Fields with missing values:\\n\",df)","95bd0df9":"for col in [\"MSZoning\",\"Utilities\",\"Functional\",\"Exterior1st\",\"Exterior2nd\",\"KitchenQual\",\"SaleType\"]:\n    df_input[col].fillna(\"NA\",inplace=True)\n    print (col,\"Replaced missing values with NA\")\nfor col in [\"BsmtFullBath\",\"BsmtHalfBath\",\"BsmtFinSF1\",\"BsmtFinSF2\",\"BsmtUnfSF\",\"TotalBsmtSF\",\"GarageCars\",\"GarageArea\"]:\n    df_input[col].fillna(0,inplace=True)\n    print (col,\"Replaced missing values with 0\")","8c419220":"val=df_input.isnull().sum()\ndf=pd.DataFrame(val,columns=[\"NullCount\"]).query('NullCount != 0')\ndf=pd.DataFrame({\"Features\": df.index,\n             \"NullCount\": df.NullCount.values})\ndf.sort_values(by=\"NullCount\",inplace=True,ascending=False)\nprint(\"Fields with missing values:\\n\",df)","ab4a4939":"df_result=pd.DataFrame()\ndf_result[\"Id\"]=df_input.Id","e824ea10":"df_input=wrangle_data(df_input)","319f946d":"print (\"Any string features: \")\n#Checking for any String fields.\ndf_input.dtypes[df_input.dtypes==\"object\"]","5be76fa9":"#Remove negative correlated features\ndf_input.drop(negative_corr_flds,axis=1,inplace=True)","90a9d5ec":"test_features=df_input.columns","2d3ae688":"print (\"Columns Not present in test_features: \\n\")\nfor x in training_features:\n    if x not in test_features:\n        print (x)\nprint (\"\\nColumns Not present in train_features:\\n\")\nfor x in test_features:\n    if x not in training_features:\n        print (x)       ","6f5cc485":"#Removing below unwanted columns\ndf_input.drop([\"Exterior1st_NA\", \"MSZoning_NA\", \"SaleType_NA\", \"Exterior2nd_NA\"\n              ],axis=1,inplace=True)","6eddd402":"x=df_input\ny_predict=lasso_reg.predict(x)\ny_predict=np.square(y_predict)","67802160":"df_result[\"SalePrice\"]=pd.Series(y_predict.tolist())","3204cc33":"df_result","b93dc5e6":"print (\"Exporting predicted results\")\ndf_result.to_csv(\"predict_result.csv\",index=False)","c8cf3ea6":"#end of file","232ddb96":"## 21. RoofMatl: Roof material\n\n       ClyTile\tClay or Tile<br>\n       CompShg\tStandard (Composite) Shingle<br>\n       Membran\tMembrane<br>\n       Metal\tMetal<br>\n       Roll\tRoll<br>\n       Tar&Grv\tGravel & Tar<br>\n       WdShake\tWood Shakes<br>\n       WdShngl\tWood Shingles<br>","2fffb885":"### Model: Ridge Regression","904e01f5":"<h3 style='background-color:yellow'> Integer ordinal variable<\/h3>\n\n### 17. OverallCond: Rates the overall condition of the house\n\n       10\tVery Excellent<br>\n       9\tExcellent<br>\n       8\tVery Good<br>\n       7\tGood<br>\n       6\tAbove Average\t<br>\n       5\tAverage<br>\n       4\tBelow Average\t<br>\n       3\tFair<br>\n       2\tPoor<br>\n       1\tVery Poor<br>","1fcef1a8":"<h3 style='background-color:yellow'>Ordinal variable. <\/h3>\n\n### 53. Functional: Home functionality (Assume typical unless deductions are warranted)\n\n       Typ\tTypical Functionality\n       Min1\tMinor Deductions 1\n       Min2\tMinor Deductions 2\n       Mod\tModerate Deductions\n       Maj1\tMajor Deductions 1\n       Maj2\tMajor Deductions 2\n       Sev\tSeverely Damaged\n       Sal\tSalvage only","e4712ff4":"### Model: ElasticNet Regression","97226858":"<h3 style='background-color:yellow'>\nOrdinal variable <br>\n    Most of the houses having Paved Driveway.\n<\/h3>\n\n### 64. WoodDeckSF: Wood deck area in square feet","fd770d4c":"<h3 style='background-color:yellow'> \nMaximum age of the houses in the dataset is 136.<br>    \n    There are 100 number of newly constructed houses are there. <br>\nAverage SalePrice decreases as the age of the house increases.\n<br>\nHowever there is a sudden increae on the price for the houses whose age is 114.\n<\/h3>\n\n## <center> Data Imputation <\/center>\n","b8fa1c68":"## 5. Street\nType of road access to property<br>\n       Grvl\tGravel\t<br>\n       Pave\tPaved","c36739ef":"<h3 style='background-color:yellow'>Discrete variable. <br>\nMost of the sales are Warranty Deed -Conventional <\/h3>\n\n### 77. SaleCondition: Condition of sale\n\n       Normal\tNormal Sale\n       Abnorml\tAbnormal Sale -  trade, foreclosure, short sale\n       AdjLand\tAdjoining Land Purchase\n       Alloca\tAllocation - two linked properties with separate deeds, typically condo with a garage unit\t\n       Family\tSale between family members\n       Partial\tHome was not completed when last assessed (associated with New Homes)","99a530ba":"## <center>Dataset description<\/center>","a8505ffd":"<h3 style='background-color:yellow'> Ordinal variable<\/h3>\n\n### 49. BedroomAbvGr: Bedrooms above grade (does NOT include basement bedrooms)","3c102ed1":"<h3 style='background-color:yellow'>\nString Categorical variable\n<\/h3>","dc0ab30d":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 34. BsmtFinSF2: Type 2 finished square feet","cd05f26b":"<h3 style='background-color:yellow'> \nOrdinal variable <br>\nNull values present.    \n<\/h3>\n\n### 59. GarageCars: Size of garage in car capacity","904787c7":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 31. BsmtFinType1: Rating of basement finished area\n\n       GLQ\tGood Living Quarters\n       ALQ\tAverage Living Quarters\n       BLQ\tBelow Average Living Quarters\t\n       Rec\tAverage Rec Room\n       LwQ\tLow Quality\n       Unf\tUnfinshed\n       NA\tNo Basement","a64e241d":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","d576760d":"<h3 style='background-color:yellow'>\nDiscrete variable <br>\n63% of the houses having Attached Garage<\/h3>\n\n### 57.  GarageYrBlt: Year garage was built","466acf48":"### 27. Foundation: Type of foundation\n\t\t\n       BrkTil\tBrick & Tile\n       CBlock\tCinder Block\n       PConc\tPoured Contrete\t\n       Slab\tSlab\n       Stone\tStone\n       Wood\tWood","dc74c972":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 25. ExterQual: Evaluates the quality of the material on the exterior \n\t\t\n       Ex\tExcellent<br>\n       Gd\tGood<br>\n       TA\tAverage\/Typical<br>\n       Fa\tFair<br>\n       Po\tPoor<br>","e5455c9e":"<h3 style='background-color:yellow'>String Discrete variable <\/h3>\n\n### 16. OverallQual: Rates the overall material and finish of the house\n\n       10\tVery Excellent<br>\n       9\tExcellent<br>\n       8\tVery Good<br>\n       7\tGood<br>\n       6\tAbove Average<br>\n       5\tAverage<br>\n       4\tBelow Average<br>\n       3\tFair<br>\n       2\tPoor<br>\n       1\tVery Poor<br>","263d40a3":"<h3 style='background-color:yellow'>Ordinal variable <\/h3>\n\n### 48. HalfBath: Half baths above grade","a0843517":"<h3 style='background-color:yellow'>\nContinuous variable\n<\/h3>\n\n### 44. GrLivArea: Above grade (ground) living area square feet","05ed5052":"<h3 style='background-color:yellow'>Continuous variable. <\/h3>\n\n### 43. LowQualFinSF: Low quality finished square feet (all floors)\n","ab50a67e":"<h3 style='background-color:yellow'> \n    Missing values removed from dataset.\n    <\/h3>\n    \n## <center> Data cleaning,manipulation <\/center>","7887deb0":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>","cd989baf":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>\n\n### 58. GarageFinish: Interior finish of the garage\n\n       Fin\tFinished\n       RFn\tRough Finished\t\n       Unf\tUnfinished\n       NA\tNo Garage","8b8396e0":"## 7. LotShape\nGeneral shape of property <br>\n\n       Reg\tRegular\t <br>\n       IR1\tSlightly irregular <br>\n       IR2\tModerately Irregular<br>\n       IR3\tIrregular<br>","48b91b04":"<h3 style='background-color:yellow'>\nDiscrete variable.<br>\nAround 300 number of sales happened in year 2006 to 2009. <br>    \n2010 has less selling happened. <br>\n<\/h3>\n\n### 76. SaleType: Type of sale\n\t\t\n       WD \tWarranty Deed - Conventional\n       CWD\tWarranty Deed - Cash\n       VWD\tWarranty Deed - VA Loan\n       New\tHome just constructed and sold\n       COD\tCourt Officer Deed\/Estate\n       Con\tContract 15% Down payment regular terms\n       ConLw\tContract Low Down payment and low interest\n       ConLI\tContract Low Interest\n       ConLD\tContract Low Down\n       Oth\tOther","48858cb9":"<h3 style='background-color:yellow'> \nOrdinal feature.<br>\nMost of the houses having 1 kitchen with above grade.\n<\/h3>\n\n### 51. KitchenQual: Kitchen quality\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor","67b12066":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 32. BsmtFinSF1: Type 1 finished square feet\n\n","cd1c2121":"<h3 style='background-color:yellow'> \nString discrete variable\n<\/h3>","256aaeda":"### 3. LotFrontage    \nLinear feet of street connected to property","c207f762":"<h3 style='background-color:yellow'> Discrete variable.<\/h3>\n\n### 73. MiscVal: $Value of miscellaneous feature","968e77a1":"<h3 style='background-color:yellow'>Continuous variable. <\/h3>\n\n### 69. PoolArea: Pool area in square feet","4ef6fc5a":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 67. 3SsnPorch: Three season porch area in square feet","8da248ae":"<h3 style='background-color:yellow'>Integer ordinal variable. <\/h3>\n\n### 18. YearBuilt: Original construction date","29dfc2a2":"### Model: LinearRegression","754cf700":"<h3 style='background-color:yellow'> Continuous variable.<\/h3>\n\n### 74. MoSold: Month Sold (MM)\n","c449336f":"<h3 style='background-color:yellow'>\nContinuous variable <br>\nPositively skewed distribution.<br>\nPresence of outliers.\n<\/h3>","23cec060":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>\n\n### 24. MasVnrArea: Masonry veneer area in square feet ","a420a44d":"<h3 style='background-color:yellow'>\nCategorical String variable.<br>\nMost Sale are 'Normal'\n<\/h3>\n\n### 78. HouseStyle\n       1Story\tOne story\n       1.5Fin\tOne and one-half story: 2nd level finished\n       1.5Unf\tOne and one-half story: 2nd level unfinished\n       2Story\tTwo story\n       2.5Fin\tTwo and one-half story: 2nd level finished\n       2.5Unf\tTwo and one-half story: 2nd level unfinished\n       SFoyer\tSplit Foyer\n       SLvl\tSplit Level","3f72bd13":"### 3. Age of the house and SalePrice","e2486f76":"### 42. 2ndFlrSF: Second floor square feet","73fd5c72":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 61. GarageQual: Garage quality\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor\n       NA\tNo Garage","5ec15b49":"<h3 style='background-color:yellow'> Discrete variable.<\/h3>\n\n### 54. Fireplaces: Number of fireplaces","b095972f":"### SalePrice - Target Feature","a726b664":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>\n\n\n\n### 23. MasVnrType: Masonry veneer type\n\n       BrkCmn\tBrick Common<br>\n       BrkFace\tBrick Face<br>\n       CBlock\tCinder Block<br>\n       None\tNone<br>\n       Stone\tStone<br>\n\n","edf9a3cb":"### 20. RoofStyle: Type of roof\n\n       Flat\tFlat<br>\n       Gable\tGable<br>\n       Gambrel\tGabrel (Barn)<br>\n       Hip\tHip<br>\n       Mansard\tMansard<br>\n       Shed\tShed<br>","5bb12bb9":"<h3 style='background-color:yellow'>\nCategorical string values.<br>\nPresence of Null values. <br>\nNull\/Missing value indicates 'No Alley Access'. <br>\nHence most of the observations having 'No Alley Access'.\n<\/h3>","bcb5b677":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 36. TotalBsmtSF: Total square feet of basement area","d1eb7c09":"## <center>Feature Relationships<\/center>","0f7ac00f":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 37. Heating: Type of heating\n\t\t\n       Floor\tFloor Furnace\n       GasA\tGas forced warm air furnace\n       GasW\tGas hot water or steam heat\n       Grav\tGravity furnace\t\n       OthW\tHot water or steam heat other than gas\n       Wall\tWall furnace","b54dcd42":"### 14. Condition2\nProximity to various conditions (if more than one is present)<br>\n\t\t\n       Artery\tAdjacent to arterial street<br>\n       Feedr\tAdjacent to feeder street\t<br>\n       Norm\tNormal\t<br>\n       RRNn\tWithin 200' of North-South Railroad<br>\n       RRAn\tAdjacent to North-South Railroad<br>\n       PosN\tNear positive off-site feature--park, greenbelt, etc.<br>\n       PosA\tAdjacent to postive off-site feature<br>\n       RRNe\tWithin 200' of East-West Railroad<br>\n       RRAe\tAdjacent to East-West Railroad<br>","568d550b":"<h3 style='background-color:yellow'> Ordinal variable<\/h3>\n\n### 50. KitchenAbvGr: Kitchens above grade","ae985330":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 30. BsmtExposure: Refers to walkout or garden level walls\n\n       Gd\tGood Exposure\n       Av\tAverage Exposure (split levels or foyers typically score average or above)\t\n       Mn\tMimimum Exposure\n       No\tNo Exposure\n       NA\tNo Basement\n ","0f2173bf":"<h3 style='background-color:yellow'>\nOrdinal variable. <br>\n50% of the houses having good Fireplace quality.\n<\/h3>\n\n### 56. GarageType: Garage location\n\t\t\n       2Types\tMore than one type of garage\n       Attchd\tAttached to home\n       Basment\tBasement Garage\n       BuiltIn\tBuilt-In (Garage part of house - typically has room above garage)\n       CarPort\tCar Port\n       Detchd\tDetached from home\n       NA\tNo Garage","d7f20666":"<h3 style='background-color:yellow'>\nCategorial variable.\n<\/h3>","75cc796e":"### 66. EnclosedPorch: Enclosed porch area in square feet","4dc217ba":"### 11. LandSlope \nSlope of property<br>\n\t\t\n       Gtl\tGentle slope<br>\n       Mod\tModerate Slope\t<br>\n       Sev\tSevere Slope<br>","50da7b8b":"<h3 style='background-color:yellow'>\nString categorical variable.\n<\/h3>","2eb1fe93":"# <center>House Prices<\/center>\nWith explanatory variables describing (almost) every aspect of residential homes in Ames, lowa. Using this dataset predict the final price of each home.","501e81fa":"### 8. LandContour    \n Flatness of the property\n\n       Lvl\tNear Flat\/Level\t <br>\n       Bnk\tBanked - Quick and significant rise from street grade to building<br>\n       HLS\tHillside - Significant slope from side to side<br>\n       Low\tDepression<br>","8398e15b":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 29. BsmtCond: Evaluates the general condition of the basement\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical - slight dampness allowed\n       Fa\tFair - dampness or some cracking or settling\n       Po\tPoor - Severe cracking, settling, or wetness\n       NA\tNo Basement","63e85f45":"<h3 style='background-color:yellow'>\nOrdinal variable.\n    50% of the houses having average Kitchen.\n    <br> Only 7% having excellent kitchens.\n<\/h3>\n\n### 52. TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)","9a61f568":"<h3 style='background-color:yellow'> \nContinuous variable.\n<\/h3>","f3f57e4f":"### 9. Utilities\nType of utilities available <br>\n  AllPub\tAll public Utilities (E,G,W,& S)\t<br>\n       NoSewr\tElectricity, Gas, and Water (Septic Tank)<br>\n       NoSeWa\tElectricity and Gas Only<br>\n       ELO\tElectricity only<br>","2a4b7c37":"<h3 style='background-color:yellow'> String Discrete variable<\/h3>\n\n### 15. BldgType: Type of dwelling\n\t\t\n       1Fam\tSingle-family Detached\t<br>\n       2FmCon\tTwo-family Conversion; originally built as one-family dwelling<br>\n       Duplx\tDuplex<br>\n       TwnhsE\tTownhouse End Unit<br>\n       TwnhsI\tTownhouse Inside Unit<br>","56613f2b":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","01b17d01":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 68. ScreenPorch: Screen porch area in square feet","289b39d7":"### 1. Sale price based on the Neighborhood","cde0a75e":"<h3 style='background-color:yellow'>\nContinuous variable\n<\/h3>","25a43e9b":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 55. FireplaceQu: Fireplace quality\n\n       Ex\tExcellent - Exceptional Masonry Fireplace\n       Gd\tGood - Masonry Fireplace in main level\n       TA\tAverage - Prefabricated Fireplace in main living area or Masonry Fireplace in basement\n       Fa\tFair - Prefabricated Fireplace in basement\n       Po\tPoor - Ben Franklin Stove\n       NA\tNo Fireplace","d6bd66e5":"<h3 style='background-color:yellow'>\nCategorical String variable\n<\/h3>","68544ae5":"### 75. YrSold: Year Sold (YYYY)","5f7e14cc":"### 2. OverAll quality of the house and SalePrice","fa2722e8":"<h3 style='background-color:yellow'>\nHouses in Northridge got highest average saleprice.<br>\nAnd Meadow Village got the least average saleprice.\n<\/h3>","8a85c057":"<h3 style='background-color:yellow'>\nCategorical String variable.<br>\n93% houses are Airconditioned.<br>\n<\/h3>\n\n### 40. Electrical: Electrical system\n\n       SBrkr\tStandard Circuit Breakers & Romex\n       FuseA\tFuse Box over 60 AMP and all Romex wiring (Average)\t\n       FuseF\t60 AMP Fuse Box and mostly Romex wiring (Fair)\n       FuseP\t60 AMP Fuse Box and mostly knob & tube wiring (poor)\n       Mix\tMixed","f6dd3bf4":"<h3 style='background-color:yellow'>\nIt's clear from the dataset that As the quality of the house increases, Saleprice also increases.\n<\/h3>","bf22e463":"## <center> Model Evaluation <\/center>","a7b13675":"### Model: Lasso Regression","da08609d":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>","b4fb616c":"<h3 style='background-color:yellow'>\nCategorical variable.\n<\/h3>\n\n### 19. YearRemodAdd: Remodel date (same as construction date if no remodeling or additions)","df0d552d":"### 38. HeatingQC: Heating quality and condition\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tAverage\/Typical\n       Fa\tFair\n       Po\tPoor","90980e4a":"### 1. MSSubClass\nIdentifies the type of dwelling involved in the sale.<br>\n 20\t1-STORY 1946 & NEWER ALL STYLES<br>\n        30\t1-STORY 1945 & OLDER<br>\n        40\t1-STORY W\/FINISHED ATTIC ALL AGES<br>\n        45\t1-1\/2 STORY - UNFINISHED ALL AGES<br>\n        50\t1-1\/2 STORY FINISHED ALL AGES<br>\n        60\t2-STORY 1946 & NEWER<br>\n        70\t2-STORY 1945 & OLDER<br>\n        75\t2-1\/2 STORY ALL AGES<br>\n        80\tSPLIT OR MULTI-LEVEL<br>\n        85\tSPLIT FOYER<br>\n        90\tDUPLEX - ALL STYLES AND AGES<br>\n       120\t1-STORY PUD (Planned Unit Development) - 1946 & NEWER<br>\n       150\t1-1\/2 STORY PUD - ALL AGES<br>\n       160\t2-STORY PUD - 1946 & NEWER<br>\n       180\tPUD - MULTILEVEL - INCL SPLIT LEV\/FOYER<br>\n       190\t2 FAMILY CONVERSION - ALL STYLES AND AGES<br>","4ef4c531":"<h3 style='background-color:yellow'>\nCategorical variable.\n<\/h3>","f404fd51":"<h3 style='background-color:yellow'>Ordinal variable. <\/h3>\n\n### 47. FullBath: Full bathrooms above grade","5a0e7a66":"<h3 style='background-color:yellow'> Most of Garage quality is average.\n    <br> Ordinal variable.\n<\/h3>\n\n### 62. GarageCond: Garage condition\n\n       Ex\tExcellent\n       Gd\tGood\n       TA\tTypical\/Average\n       Fa\tFair\n       Po\tPoor\n       NA\tNo Garage","e8444fe2":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>\n\n### 23. Exterior1st: Exterior covering on house\n\n       AsbShng\tAsbestos Shingles<br>\n       AsphShn\tAsphalt Shingles<br>\n       BrkComm\tBrick Common<br>\n       BrkFace\tBrick Face<br>\n       CBlock\tCinder Block<br>\n       CemntBd\tCement Board<br>\n       HdBoard\tHard Board<br>\n       ImStucc\tImitation Stucco<br>\n       MetalSd\tMetal Siding<br>\n       Other\tOther<br>\n       Plywood\tPlywood<br>\n       PreCast\tPreCast\t<br>\n       Stone\tStone<br>\n       Stucco\tStucco<br>\n       VinylSd\tVinyl Siding<br>\n       Wd Sdng\tWood Siding<br>\n       WdShing\tWood Shingles<br>","0e6c37cc":"### 6. Alley\nType of alley access to property <br>\n   Grvl\tGravel <br>\n       Pave\tPaved<br>\n       NA \tNo alley access<br>\n","c66a1a9f":"<h3 style='background-color:yellow'>\nCategorical String variable.\n<\/h3>","2c5cf034":"<h3 style='background-color:yellow'>\nString Categorical variable. <br>\n<\/h3>","f7d110e5":"<h3 style='background-color:yellow'>\nContinuous variable. <br>\nMissing values present.\n<\/h3>","496e0781":"<h3 style='background-color:yellow'>\n    3 float columns <br>\n    35 integer columns <br>\n    43 String columns\n    <\/h3>","28d8718a":"### Model: XtremeGradientBoosting","61d0a027":"### 45. BsmtFullBath: Basement full bathrooms","fd47c3d9":"<h3 style='background-color:yellow'>\nCategorical String variable.\n<\/h3>\n\n### 13. Condition1\nProximity to various conditions <br>\n\t\n       Artery\tAdjacent to arterial street<br>\n       Feedr\tAdjacent to feeder street\t<br>\n       Norm\tNormal\t<br>\n       RRNn\tWithin 200' of North-South Railroad<br>\n       RRAn\tAdjacent to North-South Railroad<br>\n       PosN\tNear positive off-site feature--park, greenbelt, etc.<br>\n       PosA\tAdjacent to postive off-site feature<br>\n       RRNe\tWithin 200' of East-West Railroad<br>\n       RRAe\tAdjacent to East-West Railroad<br>","11218efa":"<h3 style='background-color:yellow'> \nOrdinal variable.<br>\n    56% of the Garages having 2 car capacity.\n<\/h3>\n\n\n### 60. GarageArea: Size of garage in square feet","7c6f87fa":"<h3 style='background-color:yellow'>\nOrdinal variable. <br>\n    Most of the Garage condition is Average.\n<\/h3>\n\n### 63. PavedDrive: Paved driveway\n\n       Y\tPaved \n       P\tPartial Pavement\n       N\tDirt\/Gravel","2a8a033a":"## 4. LotArea\nLot size in square feet","c1615bcc":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>","3828fc87":"## <center> Test file output prediction<\/center>","6e3012ae":"<h3 style='background-color:yellow'>\nOrdinal variable\n<\/h3>\n\n### 46. BsmtHalfBath: Basement half bathrooms","981416ee":"### 35. BsmtUnfSF: Unfinished square feet of basement area","f7f5db39":"### 10. LotConfig      \nLot configuration<br>\n\n       Inside\tInside lot<br>\n       Corner\tCorner lot<br>\n       CulDSac\tCul-de-sac<br>\n       FR2\tFrontage on 2 sides of property<br>\n       FR3\tFrontage on 3 sides of property<br>\n","e0676788":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 33. BsmtFinType2: Rating of basement finished area (if multiple types)\n\n       GLQ\tGood Living Quarters\n       ALQ\tAverage Living Quarters\n       BLQ\tBelow Average Living Quarters\t\n       Rec\tAverage Rec Room\n       LwQ\tLow Quality\n       Unf\tUnfinshed\n       NA\tNo Basement","759468ea":"<h3 style='background-color:yellow'>\nDiscrete variable.\n<\/h3>\n\n### 23. Exterior2nd: Exterior covering on house (if more than one material)\n\n       AsbShng\tAsbestos Shingles<br>\n       AsphShn\tAsphalt Shingles<br>\n       BrkComm\tBrick Common<br>\n       BrkFace\tBrick Face<br>\n       CBlock\tCinder Block<br>\n       CemntBd\tCement Board<br>\n       HdBoard\tHard Board<br>\n       ImStucc\tImitation Stucco<br>\n       MetalSd\tMetal Siding<br>\n       Other\tOther<br>\n       Plywood\tPlywood<br>\n       PreCast\tPreCast<br>\n       Stone\tStone<br>\n       Stucco\tStucco<br>\n       VinylSd\tVinyl Siding<br>\n       Wd Sdng\tWood Siding<br>\n       WdShing\tWood Shingles<br>","f3c759d3":"<h3 style='background-color:yellow'>\nString categorical variable. <br>\n<\/h3>\n\n### 28. BsmtQual: Evaluates the height of the basement\n\n       Ex\tExcellent (100+ inches)\t\n       Gd\tGood (90-99 inches)\n       TA\tTypical (80-89 inches)\n       Fa\tFair (70-79 inches)\n       Po\tPoor (<70 inches\n       NA\tNo Basement","0b9feb84":"<h3 style='background-color:yellow'>\nString Categorical variable. <br>|\nAlmost  99% values are 'Paved'\n<\/h3>","c52fbcea":"<h3 style='background-color:yellow'>\nOrdinal\n  variable.\n<\/h3>\n\n### 39. CentralAir: Central air conditioning\n\n       N\tNo\n       Y\tYes","81d64209":"<h3 style='background-color:yellow'>\nString Categorical variable.\n<\/h3>\n\n### 12. Neighborhood   \nPhysical locations within Ames city limits<br>\n\n       Blmngtn\tBloomington Heights<br>\n       Blueste\tBluestem<br>\n       BrDale\tBriardale<br>\n       BrkSide\tBrookside<br>\n       ClearCr\tClear Creek<br>\n       CollgCr\tCollege Creek<br>\n       Crawfor\tCrawford<br>\n       Edwards\tEdwards<br>\n       Gilbert\tGilbert<br>\n       IDOTRR\tIowa DOT and Rail Road<br>\n       MeadowV\tMeadow Village<br>\n       Mitchel\tMitchell<br>\n       Names\tNorth Ames<br>\n       NoRidge\tNorthridge<br>\n       NPkVill\tNorthpark Villa<br>\n       NridgHt\tNorthridge Heights<br>\n       NWAmes\tNorthwest Ames<br>\n       OldTown\tOld Town<br>\n       SWISU\tSouth & West of Iowa State University<br>\n       Sawyer\tSawyer<br>\n       SawyerW\tSawyer West<br>\n       Somerst\tSomerset<br>\n       StoneBr\tStone Brook<br>\n       Timber\tTimberland<br>\n       Veenker\tVeenker<br>","306a64f1":"<h3 style='background-color:yellow'>\nOrdinal variable.\n<\/h3>\n\n### 26. ExterCond: Evaluates the present condition of the material on the exterior\n\t\t\n       Ex\tExcellent<br>\n       Gd\tGood<br>\n       TA\tAverage\/Typical<br>\n       Fa\tFair<br>\n       Po\tPoor<br>","88afc224":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 65. OpenPorchSF: Open porch area in square feet","d97d6e2a":"<h3 style='background-color:yellow'>\nOrdinal variable. <br>\nPresence of missing values.\n<\/h3>\n\n### 72. MiscFeature: Miscellaneous feature not covered in other categories\n\t\t\n       Elev\tElevator\n       Gar2\t2nd Garage (if not described in garage section)\n       Othr\tOther\n       Shed\tShed (over 100 SF)\n       TenC\tTennis Court\n       NA\tNone","c9573961":"### 2. MSZoning       \nIdentifies the general zoning classification of the sale.\n    A\tAgriculture <br>\n       C\tCommercial<br>\n       FV\tFloating Village Residential<br>\n       I\tIndustrial<br>\n       RH\tResidential High Density<br>\n       RL\tResidential Low Density<br>\n       RP\tResidential Low Density Park <br>\n       RM\tResidential Medium Density<br>","4765550e":"<h3 style='background-color:yellow'>\nContinuous variable.\n<\/h3>\n\n### 70. PoolQC: Pool quality\n\t\t\n       Ex\tExcellent\n       Gd\tGood\n       TA\tAverage\/Typical\n       Fa\tFair\n       NA\tNo Pool","7c1d471d":"<h3 style='background-color:yellow'>\nOrdinal variable\n<\/h3>\n\n### 71. Fence: Fence quality\n\t\t\n       GdPrv\tGood Privacy\n       MnPrv\tMinimum Privacy\n       GdWo\tGood Wood\n       MnWw\tMinimum Wood\/Wire\n       NA\tNo Fence","5a28293b":"<h3 style='background-color:yellow'> String Discrete variable<\/h3>\n\n### 41. 1stFlrSF: First Floor square feet"}}