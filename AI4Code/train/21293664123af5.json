{"cell_type":{"0d1649e8":"code","65250a3c":"code","893ee837":"code","bbd60019":"code","40289c22":"code","c99977ac":"code","6148df7d":"code","3d87cd45":"code","9bf17b38":"code","60d9e6c8":"code","3e1436ac":"code","9f77f7ed":"code","2ffaccf6":"code","dc3a1347":"code","d1c1faa2":"code","3c0b5cc3":"code","70c97acf":"code","d0ee0c78":"code","621d372a":"code","8472aea0":"code","1fe707d2":"code","e0769e7e":"code","35f5bd85":"code","8afc2162":"code","90ed86ac":"code","e49373ff":"code","e9d29854":"code","c62e3ce3":"code","9309b6f1":"code","be7faa85":"markdown","83ea7399":"markdown","f20bb82c":"markdown","600b6caa":"markdown","61e426bb":"markdown","782ed1a3":"markdown","2ee7eb0c":"markdown"},"source":{"0d1649e8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","65250a3c":"df = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")","893ee837":"df","bbd60019":"df.info()","40289c22":"df.head()","c99977ac":"df.describe()","6148df7d":"df['age'].mean()","3d87cd45":"df['age'].mode()","9bf17b38":"df['age'].min()","60d9e6c8":"df['age'].max()","3e1436ac":"df['age'].median()","9f77f7ed":"sns.distplot(df['chol'],color='red')","2ffaccf6":" for i in df.columns[0:-1]:\n        plt.figure(figsize=(20,10))\n        sns.barplot(df[i],df['target'])\n       \n    ","dc3a1347":"sns.countplot(x='sex',data=df)","d1c1faa2":"sns.countplot(x='target',data=df)","3c0b5cc3":"plt.figure(figsize=(20,10))\nsns.countplot(x='age',data=df)","70c97acf":"plt.figure(figsize=(20,10))\n#visualizing count of age of people with heart disease\nsns.countplot(x=df[df['target']==1]['age'],data=df)","d0ee0c78":"x = df.iloc[:,:-1].values\ny = df.iloc[:,[-1]].values","621d372a":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)\nfrom sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(x_train,y_train.ravel())\nnb_pred=nb.predict(x_test)","8472aea0":"from sklearn.metrics import accuracy_score\nacc_test = accuracy_score(y_test, nb_pred)","1fe707d2":"acc_test *100","e0769e7e":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,nb_pred)\nsns.heatmap(cm,annot=True)","35f5bd85":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(x_train)\nX_test = sc.transform(x_test)\n","8afc2162":"from sklearn.neighbors import KNeighborsClassifier","90ed86ac":"clf = KNeighborsClassifier(n_neighbors=5)\nclf.fit(X_train,y_train.ravel())\nk_pred = clf.predict(X_test)\nknn = accuracy_score(y_test, k_pred)\n","e49373ff":"knn","e9d29854":"acc = []\nfor i in range(1,100):\n    clf = KNeighborsClassifier(n_neighbors=i)\n    \n    clf.fit(X_train,y_train.ravel())\n    k_pred = clf.predict(X_test)\n    knn = accuracy_score(y_test, k_pred)\n    acc.append(knn)\nnp.array(acc).max()\nplt.plot(range(1,100),acc)\nplt.xlabel('Neighbours')\nplt.ylabel('Accuracy')","c62e3ce3":"clf = KNeighborsClassifier(n_neighbors=10)\n    \nclf.fit(X_train,y_train)\nk_pred = clf.predict(X_test)\nknn = accuracy_score(y_test, k_pred)\nknn","9309b6f1":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,k_pred)\nsns.heatmap(cm,annot=True)","be7faa85":"**ABOVE GRAPH SHOWS THAT MOST PEOPLE IN DATASET ARE 58 YEAR OLD**","83ea7399":"**","f20bb82c":"# finding the best value for k","600b6caa":"# Now Implementing KNN algorithm","61e426bb":"**most people with heart disease are 54 year old**","782ed1a3":"Well, thank you\nbeing a new to Machine learning i might have done some mistake over here but if you find any of them please tell me it will be really beneficial for me to improve my self :)","2ee7eb0c":"   BUILDING A MODEL"}}