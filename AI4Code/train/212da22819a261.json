{"cell_type":{"478df8b0":"code","bdcec460":"code","4ebd7f99":"code","65f85557":"code","2c2b4b14":"code","b4086d6e":"code","8af7c725":"code","6b22b046":"code","7a6b381c":"code","41285fa7":"code","8950e72f":"code","6f2715af":"code","c118b85f":"code","f0ac70f5":"code","2c01bd15":"code","27aa4df5":"code","69a87fb8":"code","7009f6f2":"code","6de61ccb":"code","bfa072e2":"code","0bc6e302":"code","83ef9bb5":"code","318a6f4e":"code","5ec1c10f":"code","9f784e3d":"code","b33b619c":"markdown","22f35d5e":"markdown","7079afbb":"markdown","8dc1ab47":"markdown","79e3377d":"markdown","fbe5a55d":"markdown"},"source":{"478df8b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bdcec460":"df=pd.read_csv('\/kaggle\/input\/years-of-experience-and-salary-dataset\/Salary_Data.csv')","4ebd7f99":"df.head()","65f85557":"import seaborn as sns\n","2c2b4b14":"sns.scatterplot(df['YearsExperience'],df['Salary'])","b4086d6e":"# 1. Extract your input and output seperately\n# 2. Divide uour data into training and testing set\n# 3. Train your model\n# 4. Do Prediction","8af7c725":"df.head()","6b22b046":"X=df['YearsExperience'].values.reshape(30,1)","7a6b381c":"y = df['Salary'].values","41285fa7":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","8950e72f":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","6f2715af":"X_test\n","c118b85f":"y_test","f0ac70f5":"from sklearn.linear_model import LinearRegression\nreg=LinearRegression()","2c01bd15":"reg.fit(X_train,y_train)","27aa4df5":"X_test","69a87fb8":"y_test","7009f6f2":"reg.predict(X_test[4].reshape(1,1))","6de61ccb":"reg.predict(np.array([15]).reshape(1,1))","bfa072e2":"import matplotlib.pyplot as plt\n","0bc6e302":"plt.plot(X_train,reg.predict(X_train),color='red')\nsns.scatterplot(df['YearsExperience'],df['Salary'])","83ef9bb5":"reg.coef_","318a6f4e":"m = 9345.65902988","5ec1c10f":"reg.intercept_","9f784e3d":"b = 27006.345309869546","b33b619c":"# 1. EXTRACT YOUR INPUT AND OUTPUT SEPERATELY","22f35d5e":"# 2.SPLITTING THE DATASET INTO TRAIN AND TEST DATASET","7079afbb":"# 3. TRAIN YOUR MODEL","8dc1ab47":"# 5.PLOTTING A GRAPH TO FIND THE BEST FIT LINE DRAWN BY LINEAR REGRESSION MODEL","79e3377d":"# 6.CHECKING THE SLOPE VALUE AND INTERCEPT VALUE","fbe5a55d":"# 4. DO PREDICTION"}}