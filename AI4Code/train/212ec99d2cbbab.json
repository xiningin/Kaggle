{"cell_type":{"17ce8881":"code","491cadf0":"code","d279c67b":"code","7f24d812":"code","a5f070e1":"code","8795f4f4":"code","278cac42":"code","a7c00317":"code","0e24a8df":"code","9c424b0d":"code","4d5accc0":"code","2842e4e5":"code","85988c3c":"code","14005cdc":"code","02f4d1e3":"code","250f879c":"code","e70816b1":"code","ddfc16fd":"code","65f757c3":"code","aaa8a722":"code","fc4655b5":"code","ab72ab90":"code","170d5874":"code","a1e97b10":"code","b46f14cb":"code","5b617c71":"code","67b95f54":"code","99b46ade":"code","1ec3b38f":"code","d6093bc5":"code","e0387adf":"code","ace2cb4f":"code","3d2e5162":"markdown","5ee0bd35":"markdown","88593e57":"markdown","39de50b8":"markdown","dd4f80f5":"markdown","75303ca0":"markdown","28de9182":"markdown","e893c50c":"markdown","c03c1f8a":"markdown"},"source":{"17ce8881":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","491cadf0":"import matplotlib.pyplot as plt\n%matplotlib inline","d279c67b":"data = pd.read_csv('..\/input\/nba-players-career-duration\/nba-players.csv')\ndata.head()","7f24d812":"data.columns","a5f070e1":"data['Total_mins'] = data['gp']*data['min']\ndata['Total_mins']","8795f4f4":"field_goal = {}\nfield_goal['>= 60'] = len([k for k in data.fg if k >= 60])\nfield_goal['40-60'] = len([k for k in data.fg if (40 <= k) and (k < 60)])\nfield_goal['<40'] = len([k for k in data.fg if k < 40])\n\nfield_goal.keys()","278cac42":"field_goal_df = data.fg.value_counts().reset_index()\nfield_goal_df.columns = ['field_goal', 'count']\nfield_goal_df[(field_goal_df.field_goal > 40) & (field_goal_df.field_goal < 50)]","a7c00317":"plt.style.use('seaborn-white')\nplt.figure(figsize = (15, 8))\nax1 = plt.axes()\nax2 = plt.axes([0.65, 0.5, 0.2, 0.3])\n\nbins = range(20, 100, 10)\nax1.hist(x = field_goal_df.field_goal, bins = bins, alpha = 0.5, ec = 'black')\n\nax2.pie(x = list(field_goal.values()), labels = list(field_goal.keys()),\n       shadow = True, explode = (0.2, 0.15, 0.2),\n       radius = 1.5)\n\nax1.set_title('Field Goal Percentage Distribution of NBA Players in 2020', fontsize = 18)\nax1.set_xlabel('Field Goal Percentage', fontsize = 15)\nax1.set_ylabel('Counts', fontsize = 15)\nplt.show()","0e24a8df":"data.head()","9c424b0d":"data.columns","4d5accc0":"data[['3p', 'blk', 'oreb', 'dreb', 'ast', 'stl']]\nthree_p = data['3p'].value_counts().reset_index()\nthree_p.columns = ['3points', 'counts']\nthree_p","2842e4e5":"assist = data['ast'].value_counts().reset_index()\nassist.columns = ['assist', 'counts']\nassist = assist.sort_values('assist')","85988c3c":"block = data['blk'].value_counts().reset_index()\nblock.columns = ['block', 'counts']\nblock = block.sort_values('block')","14005cdc":"deffensive_reb = data['dreb'].value_counts().reset_index()\ndeffensive_reb.columns = ['dreb', 'counts']\ndeffensive_reb = deffensive_reb.sort_values('dreb')","02f4d1e3":"steals = data['stl'].value_counts().reset_index()\nsteals.columns = ['steal', 'counts']\nsteals = steals.sort_values('steal')","250f879c":"plt.style.use('fivethirtyeight')\nfig3, ax3 = plt.subplots(figsize = (15, 8))\n\nax3.hist(x = three_p['3points'],\n         bins = range(0, 100, 10),\n         color = 'red',\n         ec = 'black')\nax3.set_title('3 Points Percentage of NBA Players')\nax3.set_xlabel('3 Points percentage of success (%)')\n\nplt.show()","e70816b1":"fig4, ax4 = plt.subplots(figsize = (15, 8))\nax4.plot(block.block, block.counts, color = 'orange', label = 'Block')\nax4.plot(deffensive_reb.dreb, deffensive_reb.counts, color = 'blue', label = 'Deffensive Rebound')\nax4.plot(assist.assist, assist.counts, color = 'cyan', label = 'Assist')\nax4.plot(steals.steal, steals.counts, color = 'red', label = 'Steal')\n\nax4.set_title('Skills Counting of NBA Players')\nax4.legend()\nax4.set_xlabel('Skills Points')\n\nplt.show()","ddfc16fd":"data.columns","65f757c3":"data.ft.describe()","aaa8a722":"free_throw = {}\nfree_throw['>= 80'] = len([k for k in data.ft if k >= 80])\nfree_throw['60-80'] = len([k for k in data.ft if (k>=60) & (k < 80)])\nfree_throw['40-60'] = len([k for k in data.ft if (k>=40) & (k<60)])\nfree_throw['<40'] = len([k for k in data.ft if (k<40)])\n\nfree_throw","fc4655b5":"plt.style.use('seaborn-white')\nplt.figure(figsize = (15, 8))\nax5 = plt.axes()\nax6 = plt.axes([0.2, 0.5, 0.2, 0.3])\n\ncolors = ['#66FFFF', '#FFFF33', '#FF7733', '#FF00FF']\n\nax5.hist(x = data.ft,\n         bins = range(0, 110, 10), ec = 'black')\nax5.set_xlabel('Percentage (%)')\nax5.set_title('Percentage of successful free throw of NBA Players')\n\n\nax6.pie(list(free_throw.values()),\n        labels = list(free_throw.keys()),\n        colors = colors,\n        explode = (0.15, 0, 0.15, 0.2),\n        radius = 1.5, shadow = True)\n\nplt.show()","ab72ab90":"data['target_5yrs'].value_counts()","170d5874":"data.columns","a1e97b10":"total_mins = data.Total_mins\ntotal_mins.describe()","b46f14cb":"def get_average_target(a, b):\n    df = data[(data.Total_mins >= a) & (data.Total_mins < b)]\n    return round(np.mean(df.target_5yrs), 2)\n\nget_average_target(0, 500)","5b617c71":"fig6, ax6 = plt.subplots(figsize = (15, 8))\nbins = range(0, 4000, 500)\nx = range(250, 3500, 500)\ny = [get_average_target(bins[i], bins[i+1]) for i in range(len(bins)-1)]\nax6.hist(total_mins,\n         bins = bins,\n         alpha = 0.8,\n         ec = 'black')\n\nax6_ = ax6.twinx()\nax6_.plot(x, y, 'r-o')\n\nax6.set_xlabel('Total minutes playing of NBA Players')\nax6.set_title('Correlation of total minutes playing and the percentage of long career duration')\n\nax6.set_ylabel('Counts', color = 'blue')\nax6_.set_ylabel('Percent (\/1)', color = 'red')\n\nax6.tick_params(axis = 'y', colors = 'blue')\nax6_.tick_params(axis = 'y', colors = 'red')","67b95f54":"top_3p = data['3p_made'].value_counts().reset_index()\ntop_3p.columns = ['3p_made', 'counts']\ntop_3p = top_3p.sort_values('3p_made', ascending = False)\ntop_3p.head()","99b46ade":"def get_average_5yrs_3pm(points):\n    df = data[data['3p_made'] == points]\n    return round(np.mean(df.target_5yrs), 2)","1ec3b38f":"fig7, ax7 = plt.subplots(figsize = (15, 8))\n\nheight = top_3p.counts\n\nax7.bar(x = top_3p['3p_made'], width = 0.1, \n        height = height,ec = 'black')\n\nax7_ = ax7.twinx()\nax7_.plot(top_3p['3p_made'],\n          [get_average_5yrs_3pm(i) for i in top_3p['3p_made']],\n          'r-o')\nax7.set_title('Correlation of 3 points made and target 5 years')\nax7.set_ylabel('Counts', color = '#0055FF')\nax7_.set_ylabel('Percentage of have 5-year career', color = 'red')\n\nax7.set_xlabel('Average number of 3-point goals')\n\nax7.tick_params(axis = 'y', colors = '#0055FF')\nax7_.tick_params(axis = 'y', colors = 'red')\n\nplt.show()","d6093bc5":"assist = data.ast.value_counts().reset_index()\nassist.columns = ['assist', 'counts']\nassist = assist.sort_values('assist')\nassist","e0387adf":"def get_avr_5yrs_assist(a, b):\n    df = data[(data['ast'] >= a) & (data['ast'] < b)]\n    return round(np.mean(df.target_5yrs), 2)","ace2cb4f":"fig8, ax8 = plt.subplots(figsize = (15, 8))\nbins8 = range(12)\n\nax8.hist(data.ast, bins = bins8, ec = 'white')\nax8.set_xticks(bins8)\n\nax8_ = ax8.twinx()\nax8_.plot([0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5], \n          [get_avr_5yrs_assist(bins8[i], bins8[i+1]) for i in range(11)], 'r-o')\n\nax8.set_title('Correlation of assist point and target 5 years')\nax8.set_xlabel('Assist score')\nax8.set_ylabel('Counts', color = '#0055FF')\nax8_.set_ylabel('Percent', color = 'red')\n\nax8.tick_params(axis = 'y', colors = '#0055FF')\nax8_.tick_params(axis = 'y', colors = 'red')\n\nplt.show()","3d2e5162":"#### Skills counting","5ee0bd35":"### Correlation of 3 points made and target 5 years","88593e57":"### Correlation of assist point and target 5 years","39de50b8":"Review:\n- Most of players have mischievous blocking skills while their point are abount 0 to 1 out of 10, which is disappointing to some extent. This trend, simultaneously, displays in other.\n- Deffensive Rebound and assist seem to be the most popular skills for players to practice. Althougn there are a great deal of basketball players have those skills points from 0 to 4, minimal part of them still have an outstanding expression in assisting teammates and deffend to the enemy which excess 8 points.","dd4f80f5":"### 3 points made percentage distribution visualization","75303ca0":"Reviews:\n- Most of players have success percentage in attempt to make 3-point scores which is 30-40% (just under 100 players)\n- Following that is 20-30 group, which takes over approximately 80 people\n- 10-20 and 40-50 groups have the same amount of players that is about 35 \n- Group of players who have better achivement in scoring 3-point goals (over 50%) contains a minimal amount (under 10 people). However, 3-points      percentage of successful goals is a great way to assess atacking players","28de9182":"### Correlation of total playing time and target 5 years","e893c50c":"### Free throw percentage","c03c1f8a":"### Field Goal Percentage Distribution visualization"}}