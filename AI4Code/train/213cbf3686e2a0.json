{"cell_type":{"b169bb03":"code","ba8a3834":"code","2db6687c":"code","5af8094d":"code","96b953c8":"code","5c15ecd3":"code","12a674aa":"code","2d3767a6":"code","db0dc2c3":"code","3b788de5":"code","739d1884":"code","7a0042ca":"code","68a29cb1":"code","cbf0fb7f":"code","7571a7d7":"code","4087567f":"code","a0e98ff3":"code","9ec449b5":"code","51f4f573":"code","73be5f18":"code","6e7f066e":"code","942954c3":"code","f871d538":"markdown","7e7c434a":"markdown","ad576381":"markdown","8b2f4afc":"markdown","00fedd3a":"markdown","9a86beb8":"markdown","321b2b56":"markdown","cf18daac":"markdown","6046f95b":"markdown","9fb4d278":"markdown","88f1d373":"markdown"},"source":{"b169bb03":"#Importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud,STOPWORDS,ImageColorGenerator\nfrom PIL import Image","ba8a3834":"#reading the dataset(Just pulling in one of the dataset present)\ndf = pd.read_csv(\"\/kaggle\/input\/nyt-comments\/CommentsMarch2018.csv\")","2db6687c":"#Dimensions of the dataset\ndf.shape","5af8094d":"#Head of the dataframe\ndf.head(3)","96b953c8":"df = df[['commentBody']]","5c15ecd3":"df.head()","12a674aa":"#Set of StopWords\nstopwords = set(STOPWORDS)\nprint(stopwords)","2d3767a6":"def Tokenizer(text):\n    \"\"\"Simple Tokenizer function which also converts complete corpus into lowercase. Input the text\"\"\"\n    full_string = ''\n    for sentence in text:\n        sent = str(sentence)\n        token = sent.split()\n        for i in range(len(token)):\n            token[i] = token[i].lower()\n        full_string += \" \".join(token)\n    return full_string","db0dc2c3":"full_string = Tokenizer(df['commentBody'])","3b788de5":"full_string[0:50]","739d1884":"#Creating the wordcloud; Setting the width,height,background color,font size for the wordcloud\nwordcloud = WordCloud(width = 500,height=500,background_color='black',stopwords=stopwords,min_font_size=10).generate(full_string)","7a0042ca":"#Plotting the WordCloud\nplt.figure(figsize=(7,7))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","68a29cb1":"#Importing a comment image and converting into a numpy array. This will be your masked data.\nmask = np.array(Image.open(\"..\/input\/mask-images\/comment_image.png\"))","cbf0fb7f":"#Creating the wordcloud; Setting the width,height,background color,font size for the wordcloud and passing mask\nwordcloud_masked = WordCloud(width = 500,height=500,background_color='white',stopwords=stopwords,min_font_size=10,mask=mask).generate(full_string)","7571a7d7":"#Plotting the WordCloud\nplt.figure(figsize=(7,7))\nplt.imshow(wordcloud_masked)\nplt.axis(\"off\")\nplt.show()","4087567f":"#Importing a coloured cloud image and converting into a numpy array. This will be your masked data.\nmask_cloud = np.array(Image.open(\"..\/input\/mask-images\/coloured_cloud.png\"))","a0e98ff3":"#ImageColorGenerator from wordcloud can be used in a way to recolor your wordcloud later \nimage_colors = ImageColorGenerator(mask_cloud)","9ec449b5":"#Creating the wordcloud; Setting the width,height,background color,font size for the wordcloud and passing mask\nwordcloud_masked = WordCloud(width = 500,height=500,background_color='grey',stopwords=stopwords,min_font_size=10,mask=mask_cloud).generate(full_string)","51f4f573":"#Plotting the WordCloud with recoloring.\n#The words in the side in white color is becuase of the white color captured from the image background\nplt.figure(figsize=(7,7))\nplt.imshow(wordcloud_masked.recolor(color_func=image_colors))\nplt.axis(\"off\")\nplt.show()","73be5f18":"#Importing the circle image and converting into a numpy array. This will be your masked data.\nmask_circle = np.array(Image.open(\"..\/input\/mask-images\/word_cloud_circle.PNG\"))","6e7f066e":"#Creating the wordcloud; Setting the width,height,background color,font size for the wordcloud and passing mask\n#Here the contour_width is set greater than 0 so that whenever the value is greater than zero and mask is not None,draws contour\nwordcloud_masked = WordCloud(width = 500,height=500,background_color='grey',stopwords=stopwords,min_font_size=10,\n                             contour_width=3, contour_color='steelblue',mask=mask_circle).generate(full_string)","942954c3":"#Plotting the WordCloud\nplt.figure(figsize=(7,7))\nplt.imshow(wordcloud_masked)\nplt.axis(\"off\")\nplt.show()","f871d538":"Do upvote this notebook if you find it useful. It will really push me more to create such handy notebooks! Thank You :)","7e7c434a":"### WORDCLOUD - MASKED WITH MASK CONTOUR","ad576381":"Right now we saw how to create simple wordclouds and we know how to set the wordcloud size, background color and other parameters. Now we will see how to create one wordcloud in shape of images we want.","8b2f4afc":"### WORDCLOUD - MASKED WITH COLOURED IMAGE AND TO RETAIN THE IMAGE COLOUR","00fedd3a":"`Commentbody` is the column which we are interested in. We will just proceed with this column alone.","9a86beb8":"### SIMPLE WORDCLOUD","321b2b56":"## WHY WORDCLOUDS\n\nWordClouds are an excellent visualisation technique for text data. A wordcloud on a document will not only highlight the keywords of the document based on their frequency, but also gives an early intuition on what the document is all about.<br>\nWe can create wordclouds of any shape as well by masking whatever image we wanted the wordcloud to be. \n","cf18daac":"We can even limit the number of words by passing in the needed limit through the `max_words` parameter in WordCloud.","6046f95b":"We can see the set of stopwords listed above.","9fb4d278":"### WORDCLOUD BY MASKING AN IMAGE","88f1d373":"We can see there are some issues within the dataset and some cleaning\/preprocessing needs to be done for the same(Removing special characters,htmls,urls if any etc.). But right now our focus is just on wordcloud generation, hence we can ignore this right now.<br>\nOne thing we needed to handle here is the stopwords, or else can impact our final wordcloud pattern, since the most observed or occuring words in a corpus will be stopwords.<br>\nWhile doing preprocessing for text data, we needed to remove the stopwords from the corpus and proceed. WordCloud function actually needs passing in the stopwords set and our corpus, which will handled accordingly."}}