{"cell_type":{"8262bab5":"code","7a1eb23f":"code","f1c35d11":"code","5af4c3dd":"code","1b225643":"code","38ae6e96":"code","ce6230b9":"code","596742e6":"code","20221fee":"code","1c50b93a":"code","7ca7e07e":"code","047d78eb":"markdown","02798ad7":"markdown","0ab927a1":"markdown","5f93dc23":"markdown","a1767055":"markdown"},"source":{"8262bab5":"# basic library\nimport numpy as np\nimport pandas as pd\nimport warnings\nimport math\nwarnings.filterwarnings('ignore')\n\n# important library\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# pre processing library\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_error","7a1eb23f":"train = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/test.csv\")\nsample_submission = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv\")","f1c35d11":"# select feature and target\n# training set\nX_train = train.drop(['id', 'loss'], axis=1)\ny_train = train['loss']\n\n# testing set\nX_test = test.drop(['id'], axis=1)","5af4c3dd":"print(f'X_train shape : {X_train.shape}')\nprint(f'y_train shape : {y_train.shape}')\nprint(f'X_test shape : {X_test.shape}')","1b225643":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","38ae6e96":"model = keras.models.Sequential()\n\n# input layer\nmodel.add(keras.layers.Dense(100, input_shape=X_train.shape[1:], kernel_initializer=\"he_normal\"))\nmodel.add(keras.layers.Activation('relu'))\n\n# 1st hidden layer\nmodel.add(keras.layers.Dense(200))\nmodel.add(keras.layers.Activation('relu'))\nmodel.add(keras.layers.Dropout(0.5))\n\n# 2nd hidden layer\nmodel.add(keras.layers.Dense(200))\nmodel.add(keras.layers.Activation('relu'))\nmodel.add(keras.layers.Dropout(0.5))\n\n# 3rd hidden layer\nmodel.add(keras.layers.Dense(200))\nmodel.add(keras.layers.Activation('relu'))\nmodel.add(keras.layers.Dropout(0.5))\n\n# output layer\nmodel.add(keras.layers.Dense(1))\nmodel.add(keras.layers.Activation('linear'))\n","ce6230b9":"model.summary()","596742e6":"model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy'])","20221fee":"history = model.fit(X_train, y_train, epochs=10)","1c50b93a":"y_pred = model.predict(X_test)","7ca7e07e":"sample_submission['loss'] = y_pred\nsample_submission.to_csv('submission1.csv',index = False)","047d78eb":"## Feature vs Target","02798ad7":"## Import Library","0ab927a1":"## Import Dataset","5f93dc23":"## Pre-processing","a1767055":"## Model Creation"}}