{"cell_type":{"730013a6":"code","13e5963c":"code","a5af6ed0":"code","5ba68c79":"code","d3aaf4ef":"code","f69b8fb4":"code","80db2d1f":"code","e5abdac8":"code","5f7fc24b":"code","b22abcb5":"code","9e6de480":"code","2f093bfa":"code","b4408118":"code","54bf8b8d":"code","d271f427":"code","0c414b75":"code","61923a63":"code","1556f512":"code","5f6d6ba5":"code","cf46d012":"code","14385e14":"code","b124291a":"code","a4066993":"code","48f321dc":"code","48185aff":"code","5fbe06c7":"code","0feea63c":"markdown","565585b5":"markdown","436d2bab":"markdown","fbabd1c9":"markdown","030009a2":"markdown"},"source":{"730013a6":"import numpy as np\nimport pandas as pd\nimport os\nimport random\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Dropout\nfrom keras.layers import Flatten\nfrom keras.callbacks import EarlyStopping\nfrom keras.layers.convolutional import Conv2D\nfrom keras.layers.convolutional import MaxPooling2D\nfrom keras.utils import np_utils\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, log_loss, accuracy_score\nimport matplotlib.pyplot as plt","13e5963c":"data0 = pd.read_csv('..\/input\/digit-recognizer\/train.csv')","a5af6ed0":"print(data0.shape)\ndata0.head()","5ba68c79":"n0=len(data0)\nprint(n0)","d3aaf4ef":"N0=[]\nfor i in range(n0):\n    N0+=[i]\nrandom.shuffle(N0)","f69b8fb4":"data2=data0.loc[N0].reset_index(drop=True)\ndata2","80db2d1f":"X = data2.iloc[:, 1:]\ny0 = data2.iloc[:, 0]","e5abdac8":"X.head()","5f7fc24b":"y0","b22abcb5":"X2d_samp=pd.concat([X.loc[4],X.loc[5]])\nX2d_samp_img = X2d_samp.values.reshape(56,28)\nplt.imshow(X2d_samp_img)\nplt.show()\nprint(str(y0[4])+str(y0[5]))","9e6de480":"X2D=[]\nfor i in range(n0\/\/2):\n    X2d=pd.concat([X.loc[2*i],X.loc[2*i+1]])\n    X2D += [list(X2d)]\nprint(X2D[0])","2f093bfa":"X_images=np.array(X2D).reshape(-1,56,28)","b4408118":"Y2D=[]\nfor i in range(n0\/\/2):\n    Y2D+=[str(y0[2*i])+str(y0[2*i+1])]\nprint(Y2D[0:3])","54bf8b8d":"binencoder = LabelBinarizer()\ny = binencoder.fit_transform(Y2D)\nprint(y.shape)\ny","d271f427":"X_train, X_test, y_train, y_test = train_test_split(X_images, y, test_size = 0.2, random_state=90)","0c414b75":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","61923a63":"X_train = X_train\/255\nX_test = X_test\/255\n\nX_train = X_train.reshape(-1,56,28,1).astype('float32')\nX_test = X_test.reshape(-1,56,28,1).astype('float32')","1556f512":"conv_model = Sequential()\n\nconv_model.add(Conv2D(64,(4,4),input_shape = (56,28,1),activation = 'relu'))\nconv_model.add(MaxPooling2D(pool_size=(2,2)))\nconv_model.add(Conv2D(64,(3,3),activation = 'relu'))\nconv_model.add(MaxPooling2D(pool_size=(2,2)))\nconv_model.add(Dropout(0.2))\nconv_model.add(Flatten())\nconv_model.add(Dense(256,activation='relu'))\nconv_model.add(Dense(100, activation='softmax')) #### distinguish 00--99\nconv_model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])","5f6d6ba5":"conv_model.summary()","cf46d012":"result = conv_model.fit(X_train, y_train, validation_split=0.2, epochs=20, batch_size=92, verbose=2)\nresult","14385e14":"y_pred=conv_model.predict(X_test)\npred=np.argmax(y_pred,axis=1)\nground = np.argmax(y_test,axis=1)\nprint(classification_report(ground,pred))","b124291a":"history_df = pd.DataFrame(result.history)\nhistory_df.loc[:, ['accuracy','val_accuracy']].plot()","a4066993":"history_df.loc[:, ['loss','val_loss']].plot()","48f321dc":"plt.imshow(X2d_samp_img)\nplt.show()","48185aff":"print(X2d_samp.shape)\nX2d_samp2=X2d_samp.values.reshape(1,56,28,1)","5fbe06c7":"pred=conv_model.predict(X2d_samp2)\nvalue=np.argmax(pred)      \nprint(value)","0feea63c":"# 1-Digit MNIST Data","565585b5":"# Vertical 2-Digit Sample","436d2bab":"# Prediction","fbabd1c9":"# Create Vertical 2-Digit MNIST Data","030009a2":"# Conv2D Model"}}