{"cell_type":{"c5fb8297":"code","e51a41b1":"code","070de9a5":"code","9eee99c3":"code","984b149a":"code","e68f5102":"code","16d51c77":"code","f781e962":"code","7840aa10":"code","be1ade6b":"code","828cf89f":"markdown","22591286":"markdown"},"source":{"c5fb8297":"#PART 1\n\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e51a41b1":"# PART 2A \n\n#load the train dataset\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head() #Displaay the first five records","070de9a5":"# PART 2B\n\n#Load the test dataset\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head() # display the first five records","9eee99c3":"# PART 3: Print the percentatge of women survivor\nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"Percentage of women who survived:\", rate_women * 100)","984b149a":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"Percentage of men who survived:\", rate_men * 100)","e68f5102":"# PART 4: Build the random forest and train the model\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","16d51c77":"output","f781e962":"predictions","7840aa10":"submission_check = pd.read_csv('my_submission.csv')\nsubmission_check.head()","be1ade6b":"#*** That's the End of the Basic Tutorial***","828cf89f":"**EXTENDED VISUALIZATIONS**.\n\n2) Second, I will add some visualizations to better understand the analysis\n\nAIM (SAME): Predict whether a passenger survived the titanic shipreck or no.\n\nIn summary, following steps will be followed:\n\n1) Import all the necessary Libraries\n\n2) Read the training and testing datasets (show some record via .head() function)\n\n3) Print some  descriptive statistics\n\n4) Some Visualizations\n\n5) Model Evaluation\n\n> *PS:Will update this after sometime*","22591286":"**MY FIRST KAGGLE COMPETITION.**\n\n\nTwo approaches would be followed:\n1) First, I will run the default code as it is.\n\n2) Second, I will add some visualizations to better understand the analysis\n\nAIM: Predict whether a passenger survived the titanic shipreck or no.\n"}}