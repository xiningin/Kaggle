{"cell_type":{"223cd768":"code","975748d0":"code","54b7bbf7":"code","aae72092":"code","264b1831":"code","a369384c":"code","c91dd4d9":"code","2d11bd3a":"code","8ce07602":"code","169da058":"code","8a2de192":"code","6c3c20c3":"code","74471b0e":"code","a582edec":"code","f4806fef":"markdown","69715d93":"markdown","ae038722":"markdown","e5793e5a":"markdown","3df24b5f":"markdown","7467f16c":"markdown","df541da1":"markdown","dc1331cd":"markdown","3160998f":"markdown","4fffd5fe":"markdown","e3008c3a":"markdown","72d3ed39":"markdown","25413d80":"markdown","c8b96c55":"markdown","265e5b6a":"markdown","a56eeaf0":"markdown"},"source":{"223cd768":"import warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline\nfrom matplotlib import pyplot as plt\nplt.rcParams['figure.figsize'] = 12, 10\nimport pandas as pd\nfrom scipy import stats\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom itertools import product","975748d0":"deaths = pd.read_csv('..\/input\/accidental-deaths-in-usa-monthly.csv',\n                   index_col=['Month'], parse_dates=['Month'])\ndeaths.rename(columns={'Accidental deaths in USA: monthly, 1973 ? 1978': 'num_deaths'}, inplace=True)\ndeaths['num_deaths'].plot()\nplt.ylabel('Accidental deaths');","54b7bbf7":"sm.tsa.seasonal_decompose(deaths['num_deaths']).plot()\nprint(\"Dickey-Fuller criterion: p=%f\" % \n      sm.tsa.stattools.adfuller(deaths['num_deaths'])[1])","aae72092":"deaths['num_deaths_diff'] = deaths['num_deaths'] - \\\n                            deaths['num_deaths'].shift(12)\nsm.tsa.seasonal_decompose(deaths['num_deaths_diff'][12:]).plot()\nprint(\"Dickey-Fuller criterion: p=%f\" % \n      sm.tsa.stattools.adfuller(deaths['num_deaths_diff'][12:])[1])","264b1831":"deaths['num_deaths_diff2'] = deaths['num_deaths_diff'] - \\\n                             deaths['num_deaths_diff'].shift(1)\nsm.tsa.seasonal_decompose(deaths['num_deaths_diff2'][13:]).plot()\nprint(\"Dickey-Fuller criterion: p=%f\" % sm.tsa.stattools.adfuller(deaths['num_deaths_diff2'][13:])[1])","a369384c":"plt.figure(figsize=(12, 8))\nax = plt.subplot(211)\nsm.graphics.tsa.plot_acf(deaths['num_deaths_diff2'][13:].values.squeeze(), \n                         lags=30, ax=ax)\nax = plt.subplot(212)\nsm.graphics.tsa.plot_pacf(deaths['num_deaths_diff2'][13:].values.squeeze(), \n                          lags=30, ax=ax);","c91dd4d9":"ps = range(0, 3)\nd=1\nqs = range(0, 1)\nPs = range(0, 3)\nD=1\nQs = range(0, 3)","2d11bd3a":"parameters = product(ps, qs, Ps, Qs)\nparameters_list = list(parameters)\nlen(parameters_list)","8ce07602":"%%time\nresults = []\nbest_aic = float(\"inf\")\n\nwarnings.filterwarnings('ignore')\n\nfor param in parameters_list:\n    #try except is needed because some parameter combinations are not valid\n    try:\n        model=sm.tsa.statespace.SARIMAX(deaths['num_deaths'], order=(param[0], d, param[1]), \n                                        seasonal_order=(param[2], D, \n                                                        param[3], 12)).fit(disp=-1)\n    except ValueError:\n        print('wrong parameters:', param)\n        continue\n    aic = model.aic\n    # save best model, it's AIC and params\n    if aic < best_aic:\n        best_model = model\n        best_aic = aic\n        best_param = param\n    results.append([param, model.aic])\n    \nwarnings.filterwarnings('default')","169da058":"result_table = pd.DataFrame(results)\nresult_table.columns = ['parameters', 'aic']\nprint(result_table.sort_values(by = 'aic', ascending=True).head())","8a2de192":"print(best_model.summary())","6c3c20c3":"plt.subplot(211)\nbest_model.resid[13:].plot()\nplt.ylabel(u'Residuals')\n\nax = plt.subplot(212)\nsm.graphics.tsa.plot_acf(best_model.resid[13:].values.squeeze(), lags=48, ax=ax)\n\nprint(\"Student's criterion: p=%f\" % stats.ttest_1samp(best_model.resid[13:], 0)[1])\nprint(\"Dickey-Fuller criterion: p=%f\" % sm.tsa.stattools.adfuller(best_model.resid[13:])[1])","74471b0e":"plt.figure(figsize=(8, 6))\ndeaths['model'] = best_model.fittedvalues\ndeaths['num_deaths'].plot(label='actual')\ndeaths['model'][13:].plot(color='r', label='forecast')\nplt.ylabel('Accidental deaths')\nplt.legend();","a582edec":"from dateutil.relativedelta import relativedelta\ndeaths2 = deaths[['num_deaths']]\ndate_list = [pd.datetime.strptime(\"1979-01-01\", \"%Y-%m-%d\") + relativedelta(months=x) for x in range(0,24)]\nfuture = pd.DataFrame(index=date_list, columns=deaths2.columns)\ndeaths2 = pd.concat([deaths2, future])\ndeaths2['forecast'] = best_model.predict(start=72, end=100)\n\ndeaths2['num_deaths'].plot(color='b', label='actual')\ndeaths2['forecast'].plot(color='r', label='forecast')\nplt.ylabel('Accidental deaths')\nplt.legend();","f4806fef":"Let's build ACF and PACF for our time series (seems that there's a bug in PACF, it can't be >1):","69715d93":"## Model selection","ae038722":"Dickey-Fuller criteriom does now rejects the non-stationarity null-hypothesis, but we still see a trend. Let's now perform one more differentiation.","e5793e5a":"### Forecast","3df24b5f":"### Stationarity","7467f16c":"Dickey-Fuller criteriom does not reject the non-stationarity null-hypothesis, but we still see a trend. Let's perform seasonal differentiation, then check again stationarity and perform STL decomposition:","df541da1":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\">\n## Open Machine Learning Course\n<center>Author: [Yury Kashnitsky](http:\/\/yorko.github.io). All content is distributed under the [Creative Commons CC BY-NC-SA 4.0](https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) license.","dc1331cd":"Best model:","3160998f":"**Read and plot data. We can clearly notice seasonality.**","4fffd5fe":"Its residuals:","e3008c3a":"[Introduction to ARIMA](https:\/\/www.youtube.com\/watch?v=Y2khrpVo6qI).\n\n\nWe know monthly numbers of accidental deaths in the US from January 1973 till December 1978. Let's build predictions for next 2 years.","72d3ed39":"1. **Checking stationarity and performing STL decomposition ([Seasonal and Trend decomposition using Loess](https:\/\/otexts.org\/fpp2\/stl.html))**","25413d80":"Initial values: Q=2, q=1, P=2, p=2.\nSetting these is not obligatory, but if we do so, we'll perform less computations tuning hyperparams.","c8b96c55":"Non-stationarity hypothesis is now rejected, and graphs look all right, no trend anymore.","265e5b6a":"Residuals are not biased (confirmed by the Student's criterion), are stationary (confirmed by the Dickey-Fuller criterion) and not auto-correlated (confirmed by the Ljung-Box criterion and correlogram).\nLet's see how well the model fits data:","a56eeaf0":"# <center>Topic 9. Time series analysis with Python<\/center>\n## <center>Analyzing accidental deaths in US with ARIMA<\/center>"}}