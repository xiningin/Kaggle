{"cell_type":{"3f70660e":"code","8fa9def6":"code","a40e18a7":"code","89100326":"code","b8aed12e":"code","a07db213":"markdown","90b4d5ca":"markdown","7e0a6e82":"markdown","5a42b0bb":"markdown","7e22a2d4":"markdown"},"source":{"3f70660e":"from IPython.display import clear_output\n!pip install autogluon --user\nclear_output()","8fa9def6":"import numpy as np\nimport pandas as pd \nimport os \nimport random\nfrom autogluon.tabular import TabularDataset, TabularPredictor","a40e18a7":"TRAIN_PATH = \"..\/input\/titanic\/train.csv\"\nTEST_PATH = \"..\/input\/titanic\/test.csv\"\nSAMPLE_SUBMISSION_PATH = \"..\/input\/titanic\/gender_submission.csv\"\nSUBMISSION_PATH = \"submission.csv\"\n\nTARGET = 'Survived'\nEVAL_METRIC = \"roc_auc\"\n\n\nSAVE_PATH = 'agModels-predictClass' \nDEFAULT_RANDOM_SEED = 2021\n\n\ndef seedBasic(seed=DEFAULT_RANDOM_SEED):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    \nseedBasic()","89100326":"class AutoGluonAutoModel:\n    def __init__(self,trainPath,testPath,sampleSubmissionPath,submissionPath,\n                 savePath,target,eval_metric):\n        print(\"[AutoGluonAutoModel] __init__ start\")\n        \n        self.trainPath = trainPath\n        self.testPath = testPath\n        self.sampleSubmissionPath = sampleSubmissionPath\n        self.submissionPath = submissionPath\n        self.savePath = savePath\n        self.target = target \n        self.eval_metric = eval_metric\n        \n        self.train = TabularDataset(TRAIN_PATH)\n        self.test = TabularDataset(TEST_PATH)\n        self.predictions = None\n         \n        print(\"[AutoGluonAutoModel] __init__ end\")\n        \n    def predict(self):\n        print(\"[AutoGluonAutoModel] predict start\")\n        \n        predictor = TabularPredictor(label=self.target,eval_metric= self.eval_metric , path=self.savePath).fit(self.train)\n        \n        self.predictions = predictor.predict(self.test)\n        print(\"[AutoGluonAutoModel] predict end\")\n        \n    def submission(self):\n        print(\"[AutoGluonAutoModel] submission start\")\n        \n        submission = pd.read_csv(self.sampleSubmissionPath)\n        submission[self.target] = self.predictions\n        submission.to_csv(self.submissionPath,index=False)\n        print(submission.head())\n        \n        print(\"[AutoGluonAutoModel] submission end \")","b8aed12e":"model = AutoGluonAutoModel(TRAIN_PATH,TEST_PATH,\n                           SAMPLE_SUBMISSION_PATH,SUBMISSION_PATH,\n                           SAVE_PATH,TARGET,EVAL_METRIC)\nmodel.predict()\nmodel.submission()","a07db213":"# define global Vairiables","90b4d5ca":"# import libraries","7e0a6e82":"# install autogluon","5a42b0bb":"# build model","7e22a2d4":"# make model and predict and submit result"}}