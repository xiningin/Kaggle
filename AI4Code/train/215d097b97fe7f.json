{"cell_type":{"f8a676d8":"code","eec435eb":"code","593e880b":"code","55f86da6":"code","4c3aa4c3":"code","fa8ed17f":"code","4b6888fb":"code","8660731a":"code","2161b85f":"code","fa8ed79a":"code","5f40bf59":"code","13e1d69a":"code","d0c6b8cf":"code","02366df6":"code","21e469d1":"code","428595f5":"code","e3749b22":"code","f924ae47":"markdown","429db285":"markdown","0c2722b5":"markdown","10c29185":"markdown","cd78ddbc":"markdown","169c8b7d":"markdown"},"source":{"f8a676d8":"%matplotlib inline\n#\u9019\u662fjuoyter notebook\u7684magic word\u02d9\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom IPython import display","eec435eb":"import os\n#\u5224\u65b7\u662f\u5426\u5728jupyter notebook\u4e0a\ndef is_in_ipython():\n    \"Is the code running in the ipython environment (jupyter including)\"\n    program_name = os.path.basename(os.getenv('_', ''))\n\n    if ('jupyter-notebook' in program_name or # jupyter-notebook\n        'ipython'          in program_name or # ipython\n        'jupyter' in program_name or  # jupyter\n        'JPY_PARENT_PID'   in os.environ):    # ipython-notebook\n        return True\n    else:\n        return False\n\n\n#\u5224\u65b7\u662f\u5426\u5728colab\u4e0a\ndef is_in_colab():\n    if not is_in_ipython(): return False\n    try:\n        from google import colab\n        return True\n    except: return False\n\n#\u5224\u65b7\u662f\u5426\u5728kaggke_kernal\u4e0a\ndef is_in_kaggle_kernal():\n    if 'kaggle' in os.environ['PYTHONPATH']:\n        return True\n    else:\n        return False\n\nif is_in_colab():\n    from google.colab import drive\n    drive.mount('\/content\/gdrive')","593e880b":"os.environ['TRIDENT_BACKEND'] = 'pytorch'\n\nif is_in_kaggle_kernal():\n    os.environ['TRIDENT_HOME'] = '.\/trident'\nelif is_in_colab():\n    os.environ['TRIDENT_HOME'] = '\/content\/gdrive\/My Drive\/trident'\n\n#\u70ba\u78ba\u4fdd\u5b89\u88dd\u6700\u65b0\u7248 \n!pip uninstall tridentx -y\n!pip install tridentx --upgrade\n\n#\u8abf\u7528trident api\nimport trident as T\nfrom trident import *\nfrom trident.models import resnet,efficientnet","55f86da6":"import glob\n#\u900f\u904eglob\u6240\u5168\u90e8train\u8cc7\u6599\u593e\u4e2d\u6240\u6709\u53ef\u7528\u5716\u7247\nimgs=glob.glob('..\/input\/histopathologic-cancer-detection\/train\/*.tif')\nprint(len(imgs))\n","4c3aa4c3":"#\u6aa2\u8996\u4e00\u4e0b\u5716\u7247image2array\u662f\u5c07\u5716\u7247\u6216\u5716\u7247\u8def\u5f91\u8b8a\u6210numpy\u5411\u91cf\uff0c\u7136\u5f8c\u6211\u5011\u518d\u628a\u5411\u91cf\u8f49\u56deimage\u6307\u7684\u662fpillow\u7684bitmap\u5716\u7247\nprint(image2array(imgs[0]).shape)\narray2image(image2array(imgs[0]))","fa8ed17f":"#ImageDatset(imgs,symbol='image')\nf=open('..\/input\/histopathologic-cancer-detection\/train_labels.csv','r',encoding='utf-8-sig')\ndata=f.readlines()\nprint(data[:3])\nimage_path=[]\nlabels=[]\ntest_image_path=[]\ntest_labels=[]\ndata=data[1:] #\u62ff\u6389\u7b2c\u4e00\u7b46\u6a19\u982d\nrandom.shuffle(data)#\u96a8\u6a5f\u6d17\u724c\nfor row in data:\n    cols=row.strip().split(',') #\u79fb\u9664\\n\u7136\u5f8c\u9017\u865f\u5206\u5272\n    if random.random()<=0.3:\n        test_image_path.append('..\/input\/histopathologic-cancer-detection\/train\/{0}.tif'.format(cols[0]))\n        test_labels.append(int(cols[1]))\n    else:\n        image_path.append('..\/input\/histopathologic-cancer-detection\/train\/{0}.tif'.format(cols[0]))\n        labels.append(int(cols[1]))\nprint(len(image_path))\nprint(len(labels))\nprint(len(test_image_path))\nprint(len(test_labels))\n","4b6888fb":"#\u8cc7\u6599\u96c6\nds1=ImageDataset(image_path,symbol='image')\nds2=LabelDataset(labels,symbol='label')\n\nds1_t=ImageDataset(test_image_path,symbol='image')\nds2_t=LabelDataset(test_labels,symbol='label')\n\n#\u8207Iterator\u69cb\u6210data provider\ndata_provider=DataProvider(traindata=Iterator(data=ds1,label=ds2),testdata=Iterator(data=ds1_t,label=ds2_t))\n\n#\u8a2d\u5b9aDataProvider\u7684\u9810\u8655\u7406\u6d41\u7a0b\ndata_provider.image_transform_funcs=[Normalize(127.5,127.5)]\n\n#\u5373\u53ef\u5b8c\u6210\u8a2d\u5b9a\uff0c\u53ef\u4ee5\u900f\u904enext()\u4f86\u78ba\u8a8d\u6578\u64da\u662f\u5426\u6b63\u5e38\u62cb\u51fa\uff0c\u4ee5\u53ca\u662f\u5426\u6709\u6b63\u78ba\u7522\u751f\u8f38\u51fa\u6578\u64da\u7684signature\nimg_data,label_data=data_provider.next()\nprint(data_provider.signature)\nprint(img_data.shape)\nprint(label_data.shape)","8660731a":"data_provider.class_names['zh-TW']={0:'[\u9670\u6027',1:'\u967d\u6027'}\ndata_provider.label_statistics()\n","2161b85f":"data_provider.batch_size=16\ndata_provider.preview_images()","fa8ed79a":"data_provider.image_transform_funcs=[\n    RandomAdjustGamma(scale=(0.6,1.4)),#\u8abf\u6574\u660e\u6697\n    RandomAdjustHue(scale=(-0.5,0.5)),#\u8abf\u6574\u8272\u76f8\n    RandomAdjustSaturation(scale=(0.6,1.4)),#\u8abf\u6574\u98fd\u548c\u5ea6\n    SaltPepperNoise(0.1),#\u52a0\u5165\u80e1\u6912\u9e7d\u566a\u97f3\n    RandomErasing(), #\u52a0\u5165\u96a8\u6a5f\u64e6\u53bb\n    Resize((112,112),True), #\u7e2e\u653e\u5c3a\u5bf8\n    Normalize(127.5,127.5)] #\u6a19\u6e96\u5316\nimg_data,label_data=data_provider.next()\nprint(img_data.shape)\nprint(label_data.shape)\ndata_provider.preview_images()","5f40bf59":"from trident.models import efficientnet\nnet1=efficientnet.EfficientNetB0(pretrained=True,include_top=True,freeze_features=True,input_shape=(3,112,112),classes=2)\nnet1.summary()\n#\u5728\u8f38\u51fa\u6dfb\u52a0\u566a\u97f3\uff0c\u8b93\u6a5f\u5668\u4e0d\u6703\u505a\u51fa\u66d6\u6627\u4e0d\u660e\u7684\u6c7a\u7b56\nnet1.model[-1].add_noise=True\nnet1.model[-1].noise_intensity=0.12","13e1d69a":"net2=efficientnet.EfficientNetB0(pretrained=True,include_top=True,freeze_features=True,input_shape=(3,112,112),classes=2)\nnet2.model[-1].add_noise=True\nnet2.model[-1].noise_intensity=0.12\nnet2.summary()\n\nnet3=efficientnet.EfficientNetB0(pretrained=True,include_top=True,freeze_features=True,input_shape=(3,112,112),classes=2)\nnet3.model[-1].add_noise=True\nnet3.model[-1].noise_intensity=0.12\n\n\n","d0c6b8cf":"\nnet4=efficientnet.EfficientNetB0(pretrained=True,include_top=True,freeze_features=True,input_shape=(3,112,112),classes=1)\nnet4.model.remove_at(-1) #\u62ff\u6389softmax\nnet4.model.add_module('tanh',Tanh())\nnet4.model.block7a.trainable=True\nnet4.model.top_dropout.dropout_rate=0.2\nnet4.summary()","02366df6":"from sklearn.metrics import roc_curve, auc, roc_auc_score\ndef auc(output,target):\n    \n    if ndim(output)>1 and int_shape(output)[-1]>1 :\n        output_np=to_numpy(exp(output))[:,1]\n    elif ndim(output)>1 and int_shape(output)[-1]==1 :\n        output_np=to_numpy(exp(output))[:,0]\n    else:\n        output_np=to_numpy(output)\n    target_np=to_numpy(target)\n    return roc_auc_score(target_np, output_np)\n\n\n\ndef draw_roc(training_context):\n    if training_context['steps']==10 or (training_context['steps']+1)%100==0:\n        traindata=training_context['train_data']\n        data_feed=training_context['data_feed']\n        target_np=to_numpy(traindata[data_feed['target']])\n        output=traindata[data_feed['output']]\n        if ndim(output)>1 and int_shape(output)[-1]>1 :\n            output_np=to_numpy(exp(output))[:,1]\n        elif ndim(output)>1 and int_shape(output)[-1]==1 :\n            output_np=to_numpy(exp(output))[:,0]\n        else:\n            output_np=to_numpy(output)\n        \n        fpr, tpr,_=roc_curve(target_np, output_np)\n        plt.figure(1)\n        plt.plot([0, 1], [0, 1], 'k--')\n        plt.plot(fpr, tpr, label='area = {:.3f}'.format(roc_auc_score(target_np, output_np)))\n        plt.xlabel('False positive rate')\n        plt.ylabel('True positive rate')\n        plt.title('ROC curve')\n        plt.legend(loc='best')\n        plt.show()","21e469d1":"#baseline\nnet1.with_optimizer(Adam,lr=1e-3)\\\n.with_loss(CrossEntropyLoss)\\\n.with_metric(accuracy,ignore_index=0)\\\n.with_metric(recall,ignore_index=0)\\\n.with_metric(auc)\\\n.with_regularizer('l2',1e-5)\\\n.with_model_save_path('.\/Models\/eff0_1.pth')\\\n.trigger_when('on_batch_end',frequency=1,action=draw_roc)\\\n.unfreeze_model_scheduling(200,unit='batch',module_name='block7a')\n\n\n#challenger1 \u4f7f\u7528DiffGrad\u512a\u5316\u5668\u3001\u7d2f\u7a4d\u68af\u5ea6\nnet2.with_optimizer(DiffGrad,lr=1e-3,gradient_centralization='all')\\\n.with_loss(CrossEntropyLoss)\\\n.with_metric(accuracy,ignore_index=0)\\\n.with_metric(recall,ignore_index=0)\\\n.with_metric(auc)\\\n.with_regularizer('l2',1e-5)\\\n.with_model_save_path('.\/Models\/eff0_2.pth')\\\n.trigger_when('on_batch_end',frequency=1,action=draw_roc)\\\n.with_accumulate_grads(5)\\\n.unfreeze_model_scheduling(200,unit='batch',module_name='block7a')\\\n.with_automatic_mixed_precision_training()\n\n\n\n#challenger2 \u4f7f\u7528DiffGrad\u512a\u5316\u5668\u3001\u7d2f\u7a4d\u68af\u5ea6\u3001CrossEntropyLoss\u9032\u968e\u7684\u9078\u9805\u4ee5\u53ca\u591a\u589e\u52a0F1Score\nnet3.with_optimizer(DiffGrad,lr=1e-3,gradient_centralization='all')\\\n.with_loss(CrossEntropyLoss(auto_balance=True,label_smooth=True))\\\n.with_loss(F1ScoreLoss(auto_balance=True))\\\n.with_metric(accuracy,ignore_index=0)\\\n.with_metric(recall,ignore_index=0)\\\n.with_metric(auc)\\\n.with_regularizer('l2',1e-5)\\\n.with_model_save_path('.\/Models\/eff0_3.pth')\\\n.trigger_when('on_batch_end',frequency=1,action=draw_roc)\\\n.unfreeze_model_scheduling(200,unit='batch',module_name='block7a')\\\n.with_accumulate_grads(5)\\\n.with_automatic_mixed_precision_training()\n\n\n#challenger3  \u4f7f\u7528DiffGrad\u512a\u5316\u5668\u3001\u7d2f\u7a4d\u68af\u5ea6\u3001\u628a\u5b83\u8996\u70ba\u8ff4\u6b78\u554f\u984c\ndef l2_loss(output,target):\n    target_adj=(target.float()*2.0)-1   #[0,1]->[-1,1]\n    #\u56e0\u70ba\u6700\u5f8c\u4e00\u5c64\u5168\u9023\u63a5\u5c64\u6c92\u6709\u76f4\u63a5\u52a0\u566a\u97f3\u529f\u80fd\uff0c\u6240\u4ee5\u5f97\u81ea\u5df1\u52a0\u5165\n    noise=random_normal_like(output,mean=0.0, std=0.02,dtype=output.dtype).detach()\n    output=output+noise\n    return ((output-target_adj.detach())**2).mean()\n\ndef l1_loss(output,target):\n    target_adj=(target.float()*2.0)-1   #[0,1]->[-1,1]\n    #\u56e0\u70ba\u6700\u5f8c\u4e00\u5c64\u5168\u9023\u63a5\u5c64\u6c92\u6709\u76f4\u63a5\u52a0\u566a\u97f3\u529f\u80fd\uff0c\u6240\u4ee5\u5f97\u81ea\u5df1\u52a0\u5165\n    noise=random_normal_like(output,mean=0.0, std=0.02,dtype=output.dtype).detach()\n    output=output+noise\n    return (abs(output-target_adj.detach())).mean()\n\n\n#\u56e0\u70ba\u6211\u5011\u8f38\u51fa\u9577\u5ea6\u4e0d\u70ba2\uff0c\u6240\u4ee5\u9700\u8981\u8abf\u6574\u6b63\u78ba\u7387\u516c\u5f0f\ndef fixed_accuracy(output,target):\n    #\u907f\u514d\u88ab\u8a08\u7b97\u68af\u5ea6\n    output=output.detach()\n    target=target.detach()\n    #\u8f38\u51fa\u5927\u65bc0\u5247\u70ba\u7b54\u68481\n    output=greater_equal(output.squeeze(1),0,dtype=dtype.float32)\n    target=target.float()\n    \n    return equal(output,target,dtype=dtype.float32).mean()\n\n#\u56e0\u70ba\u6211\u5011\u8f38\u51fa\u9577\u5ea6\u4e0d\u70ba2\uff0c\u6240\u4ee5\u9700\u8981\u8abf\u6574\u53ec\u56de\u7387\u516c\u5f0f\ndef fixed_recall(output,target):\n    #\u907f\u514d\u88ab\u8a08\u7b97\u68af\u5ea6\n    output=output.detach()\n    target=target.detach()\n    #\u8f38\u51fa\u5927\u65bc0\u5247\u70ba\u7b54\u68481\n    output=greater_equal(output.squeeze(1),0,dtype=dtype.float32)\n    target=target.float()\n    \n    return (equal(output,target,dtype=dtype.float32)*equal(target,1,dtype=dtype.float32)).sum()\/target.sum()\n\nnet4.with_optimizer(DiffGrad,lr=1e-3,gradient_centralization='all')\\\n.with_loss(l1_loss)\\\n.with_loss(l2_loss)\\\n.with_metric(fixed_accuracy,name='accuracy')\\\n.with_metric(fixed_recall,name='recall')\\\n.with_metric(auc)\\\n.with_regularizer('l2',1e-5)\\\n.with_model_save_path('.\/Models\/eff0_4.pth')\\\n.trigger_when('on_batch_end',frequency=1,action=draw_roc)\\\n.unfreeze_model_scheduling(500,unit='batch',module_name='block6d')\\\n.with_accumulate_grads(5)\\\n.with_automatic_mixed_precision_training()\n\n#if os.path.exist('.\/Models\/eff0_1.pth'):\n#    net1.load_model('.\/Models\/eff0_1.pth')\n#if os.path.exist('.\/Models\/eff0_2.pth'):\n#    net2.load_model('.\/Models\/eff0_2.pth')\n#if os.path.exist('.\/Models\/eff0_3.pth'):\n#    net3.load_model('.\/Models\/eff0_3.pth')\n#if os.path.exist('.\/Models\/eff0_4.pth'):\n#    net4.load_model('.\/Models\/eff0_4.pth')\n","428595f5":"\nplan=TrainingPlan()\\\n    .add_training_item(net1,name='net1')\\\n    .add_training_item(net2,name='net2')\\\n    .add_training_item(net3,name='net3')\\\n    .add_training_item(net4,name='net4')\\\n    .with_data_loader(data_provider)\\\n    .with_batch_size(128)\\\n    .repeat_epochs(5)\\\n    .out_sample_evaluation_scheduling(100)\\\n    .print_gradients_scheduling(100,unit='batch')\\\n    .print_progress_scheduling(10,unit='batch')\\\n    .display_loss_metric_curve_scheduling(200)\\\n    .save_model_scheduling(50,unit='batch')\n","e3749b22":"plan.start_now()","f924ae47":"\u63a5\u4e0b\u4f86\u5c31\u662f\u7d44\u88dd\u51fa\u8981\u4f7f\u7528\u4f86\u5efa\u6a21\u7684dataset\uff0c\u57fa\u672c\u4e0aDataProvider\u662f\u63d0\u4f9b\u6578\u64da\u7684\u63a5\u53e3\uff0c\u88e1\u9762\u6709\u5169\u7d44Iterator\uff0c\u5206\u5225\u662fTrainData\u8207TestData\uff0c\u800cIterator\u63a7\u5236\u5167\u90e8\u7684\u5404\u500b\u8cc7\u6599\u96c6(Dataset)\u5982\u4f55\u69cb\u6210\u6279\u6b21\u7684\u6578\u64da\u3002","429db285":"# \u75c5\u7406\u5207\u7247\u764c\u75c7\u6aa2\u6e2c","0c2722b5":"\u63a5\u4e0b\u4f86\u8981\u628a\u6709\u5e36\u6a19\u7c64\u7684train_labels.csv\u8b80\u53d6\u4e00\u4e0b\u3002\u7de8\u78bc\u70ba\u4f55\u662f'utf-8-sig'\u800c\u4e0d\u662f'utf-8'\u5462?\u90a3\u5176\u5be6\u662f\u56e0\u70ba\u5fae\u8edf\u8207linux\u7684utf-8\u5b9a\u7fa9\u4e0d\u4e00\u81f4\uff0c\u4e00\u500b\u6709\u5e36BOM\u4e00\u500b\u6c92\u6709\uff0c\u6240\u4ee5\u70ba\u4e86\u907f\u514d\u8aa4\u89f8\u5730\u96f7\uff0c\u5efa\u8b70\u7528'utf-8-sig'\uff0c\u5169\u908a\u90fd\u76f8\u5bb9\u6bd4\u8f03\u4e0d\u6703\u6709\u554f\u984c\u3002\u8b80\u5165\u5f8c\u9010\u5217\u5207\u5272\u51fa\u5716\u6a94\u7de8\u865f\u8207\u6a19\u7c64\uff0c\u76ee\u524d\u6a19\u7c64\u503c\u53ea\u67090\u82071\uff0c\u9019\u662f\u4e00\u500b\u4e8c\u5143\u9810\u6e2c\u7684\u984c\u76ee\u3002","10c29185":"\u63a5\u4e0b\u4f86\u793a\u7bc4\u4e00\u4e0b\u5169\u500b\u6211\u500b\u4eba\u5f88\u559c\u6b61\u7684\u5c0f\u529f\u80fd\u3002","cd78ddbc":"\u7136\u5f8c\u6211\u5011\u53ef\u4ee5\u900f\u904epreview_images()\u51fd\u6578\u4f86\u6aa2\u95b1\u4e00\u4e0b\u5716\u7247\u7d93\u904e\u6578\u64da\u589e\u5f37\u6b65\u9a5f\u4e4b\u5f8c\u7684\u6a23\u5b50","169c8b7d":"\u6211\u5011\u53ef\u4ee5\u5728data_provider.image_transform_funcs=[Normalize(127.5,127.5)]\u76f4\u63a5\u52a0\u5165\u5404\u7a2e\u8996\u89ba\u8655\u7406\u7684transform\uff0c\u4f86\u9054\u5230\u6578\u64da\u589e\u5f37\u7684\u76ee\u7684\uff0c\u4f8b\u5982\u6211\u52a0\u5165\u5e38\u898b\u7684\u660e\u6697\u8b8a\u5316\u3001\u98fd\u548c\u5ea6\u8b8a\u5316\u4ee5\u53ca\u8272\u76f8\u8b8a\u5316\uff0c\u540c\u6642\u52a0\u5165\u96a8\u6a5f\u64e6\u9664\u4ee5\u53ca\u52a0\u5165\u80e1\u6912\u9e7d\u566a\u97f3"}}