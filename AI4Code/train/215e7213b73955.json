{"cell_type":{"4f2fc9bf":"code","4d66e08e":"code","704270f2":"code","91bd3fca":"code","ed19ef98":"code","33c81171":"code","dc2b5581":"code","5b53b0a7":"code","8c51eb66":"code","7ae1033f":"code","1c97d181":"code","db702dcf":"code","401255c9":"code","e6b66d73":"code","c23b3693":"code","e697bcbd":"code","5f1090f5":"code","eb247caa":"code","4fd657e8":"markdown","99d53dfb":"markdown","b7c1ba45":"markdown","4e5c01c1":"markdown","21b1ee71":"markdown","e64cfa9e":"markdown","76a73aad":"markdown","fdeffc8f":"markdown"},"source":{"4f2fc9bf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings('ignore')","4d66e08e":"df = pd.read_csv('..\/input\/rows.csv')","704270f2":"df.dtypes","91bd3fca":"# check out some samples\ndf.head()","ed19ef98":"# how many samples are in this data set\nlen(df)","33c81171":"# convert the columns with date information into a datetime format\nfrom datetime import datetime\ndf['report_dt'] = pd.to_datetime(df['Report Date Time'],format='%m\/%d\/%Y %I:%M:%S %p')\ndf['occured_dt'] = pd.to_datetime(df['Occurred Date Time'],format='%m\/%d\/%Y %I:%M:%S %p')\n# and drop the columns that we don't need anymore\ndf.drop(['Report Date Time','Occurred Date Time','Report Date'\n         ,'Report Time','Occurred Date','Occurred Time'],axis=1,inplace=True)","dc2b5581":"df['report_dt'].isnull().sum()","5b53b0a7":"df['occured_dt'].isnull().sum()","8c51eb66":"df = df[df['report_dt'].isnull() == False]\ndf = df[df['occured_dt'].isnull() == False]","7ae1033f":"crimes_per_year = df['report_dt'].dt.year.value_counts().sort_index()\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\nsns.set_color_codes(\"pastel\")\n\ng = sns.barplot(x=crimes_per_year.index, y=crimes_per_year.values,color='b')\ng.set_xticklabels(g.get_xticklabels(),rotation=90)\ng.set(xlabel='Year', ylabel='# crimes reported')\nplt.title('Number of reported crimes per year')\nplt.show()","1c97d181":"crimes_per_tod = df['occured_dt'].dt.hour.value_counts().sort_index()\ng = sns.barplot(x=crimes_per_tod.index, y=crimes_per_tod.values, color='b')\ng.set(xlabel='Hour', ylabel='# crimes reported')\nplt.title('Crime reports per hour of day')\nplt.show()","db702dcf":"top_crimes = df['Highest Offense Description'].value_counts().head(25)\nsns.set(rc={'figure.figsize':(12,8)},style=\"whitegrid\")\ng = sns.barplot(y=top_crimes.index, x=top_crimes.values,color='b')\ng.set(xlabel='# crimes reported', ylabel='Offense description')\nplt.title('Top 25 offenses (2003-2019)')\nplt.show()","401255c9":"crime_coords = df[(df['Latitude'].isnull() == False) \n                  & (df['Longitude'].isnull() == False)\n                 & (df['Highest Offense Description'] == 'THEFT OF BICYCLE')\n                 & (df['report_dt'].dt.year == 2018)][['Latitude','Longitude']]","e6b66d73":"import folium\nfrom folium import plugins\n\nmap_1 = folium.Map(location=[30.285516,-97.736753 ],tiles='OpenStreetMap', zoom_start=11)\nmap_1.add_child(plugins.HeatMap(crime_coords[['Latitude', 'Longitude']].values, radius=15))\nmap_1","c23b3693":"crime_coords = df[(df['Latitude'].isnull() == False) \n                  & (df['Longitude'].isnull() == False)\n                 & (df['Highest Offense Description'] == 'BURGLARY OF VEHICLE')\n                 & (df['report_dt'].dt.year == 2018)][['Latitude','Longitude']]","e697bcbd":"map_2 = folium.Map(location=[30.285516,-97.736753 ],tiles='OpenStreetMap', zoom_start=11)\nmap_2.add_child(plugins.HeatMap(crime_coords[['Latitude', 'Longitude']].values, radius=15))\nmap_2","5f1090f5":"crime_coords = df[(df['Latitude'].isnull() == False) \n                  & (df['Longitude'].isnull() == False)\n                 & (df['Highest Offense Description'] == 'THEFT BY SHOPLIFTING')\n                 & (df['report_dt'].dt.year == 2018)][['Latitude','Longitude']]","eb247caa":"map_3 = folium.Map(location=[30.285516,-97.736753 ],tiles='OpenStreetMap', zoom_start=11)\nmap_3.add_child(plugins.HeatMap(crime_coords[['Latitude', 'Longitude']].values, radius=15))\nmap_3","4fd657e8":"# Austin Crime dataset\nThis is an example kernel to get you started with this dataset that contains crime reports from the Austin, TX police department from 2002 to 2019.","99d53dfb":"Interestingly the peak time for crimes is during noon. Expected is the increasing crime rate from evening to night and from 3am things are quieting down.","b7c1ba45":"Top offense in Austin over all years is stealing cars (wow, over 200k in 15 years)\n\n### Visualising crime locations\nI'll be using the Lat\/Long columns for these graphs. If you're going to use these for further analysis make sure you check the validity of the data. There seem to be some samples with invalid geo-coordinates. \n\nLet's check out where bicycles were stolen in 2018","4e5c01c1":"there's only one row in the dataset for 2002. Looks like there was a peak in crimes reported in 2008 but since then there's a steady decline. Good to know.","21b1ee71":"There are a few rows with empty dates. You might want to look into these and correct the problems. For this excercise I'm simply deleting these rows.","e64cfa9e":"### Let's see some graphs","76a73aad":"And for shoplifting","fdeffc8f":"When you zoom into the map you can see some hotspots for stealing bikes: Downtown area but also the Domain in North Austin.\n\nJust for fun, do the same for stolen vehicles."}}