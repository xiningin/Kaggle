{"cell_type":{"377b4639":"code","51bf53e7":"code","360039a3":"code","cfd8fb12":"code","212cfed9":"code","3076fe85":"code","af6e828c":"code","807250b6":"code","03986048":"code","f11fdbd4":"code","8eba64be":"code","b5db1c72":"code","eaf92057":"code","f6dbdb5f":"code","6b4a9ba7":"code","2ca2bf4e":"code","dad8aab1":"code","e4826835":"code","32f27cbd":"code","0b718ded":"code","d4dcc90a":"code","c38b404c":"code","f1efe5e9":"code","31d8f66f":"code","5eab5d04":"code","b0c98f5b":"markdown","80344cbf":"markdown","5e05912a":"markdown","590e23a9":"markdown","26118c20":"markdown","dba66bba":"markdown","fea5e8a3":"markdown","b6f8cbc5":"markdown","f48db8c4":"markdown","b377ab89":"markdown","0dfa59fb":"markdown","3c2203ef":"markdown","24959a64":"markdown","6ce07de8":"markdown","cce0edb2":"markdown","8cef536d":"markdown","f219b99b":"markdown","edf9ba70":"markdown","33ed6e20":"markdown","f9fc854b":"markdown","252cc44d":"markdown","fec8e2cc":"markdown","dc37d558":"markdown","250424ec":"markdown","5b0c4d41":"markdown","2a872b4c":"markdown","1be3ba5c":"markdown","f2a67676":"markdown"},"source":{"377b4639":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","51bf53e7":"train = pd.read_csv('..\/input\/avguided-community-hackathon2020term-deposit\/Train_eP48B9k.csv')\ntest = pd.read_csv('..\/input\/avguided-community-hackathon2020term-deposit\/Test_jPKyvmK.csv')","360039a3":"train.head()","cfd8fb12":"test.head()","212cfed9":"id_col, target_col = 'id', 'term_deposit_subscribed'","3076fe85":"print('Train contains',train.shape[0],'samples and ',train.shape[1],'variables')\nprint('Test contains',test.shape[0],'samples and ',test.shape[1],'variables')\n\nfeatures = [c for c in train.columns if c not in [id_col, target_col]]\nprint('There are',len(features),'number of features')","af6e828c":"#Normalize the data to get ratio instead of raw count\ntrain[target_col].value_counts(normalize=True)","807250b6":"sns.countplot(train[target_col])\nplt.title('Target distribution')\nplt.show()","03986048":"train.info()","f11fdbd4":"null_value_percentage = (train.isnull().sum()\/train.shape[0])*100\nnull_value_percentage.sort_values(ascending = False)","8eba64be":"train.nunique()","b5db1c72":"#looping through the columns\n#check if datatype is object('O')\n#if yes add to list\ncat_cols = [train.columns[i] \n            for i in range(1, train.shape[1]-1)  \n            if train.iloc[:,i].dtype=='O']\ncat_cols","eaf92057":"num_cols = [c for c in features if c not in cat_cols]\nnum_cols","f6dbdb5f":"fig, axes = plt.subplots(5, 2, figsize=(18,30))\naxes = [ax for axes_rows in axes for ax in axes_rows]\n\nfor i, c in enumerate(train[cat_cols]):\n    train[c].value_counts()[::-1].plot(kind='pie',\n                                          ax=axes[i],\n                                          title=c,\n                                          autopct='%.0f%%',\n                                          fontsize=12)\n    axes[i].set_ylabel('')","6b4a9ba7":"fig, axes = plt.subplots(3, 3, figsize=(20,16))\naxes = [ax for axes_rows in axes for ax in axes_rows]\n\nfor i, c in enumerate(train[cat_cols]):\n    train[c].value_counts()[::-1].plot(kind='barh',\n                                          ax=axes[i],\n                                          title=c,\n                                          fontsize=12)","2ca2bf4e":"fig, axes = plt.subplots(5, 2, figsize=(16,24))\naxes = [ax for axes_rows in axes for ax in axes_rows]\n\nfor i, c in enumerate(train[cat_cols]):\n    #index of rows where target_col value is 0\n    fltr = train[target_col]==0\n    \n    #dataframe conraining rows and columns where target_col value is 0\n    #fltr-index of rows where target_col value is 0\n    #c-column name\n    #taking the value count\n    #resetting index as column name\n    vc_a=train[fltr][c].value_counts(normalize=True).reset_index().rename({'index':c,c:'count'}, axis=1)\n    \n    #dataframe conraining rows and columns where target_col value is 1\n    vc_b=train[~fltr][c].value_counts(normalize=True).reset_index().rename({'index':c,c:'count'}, axis=1)\n    \n    #setting target_col value to 0 and 1 respectively\n    vc_a[target_col]=0\n    vc_b[target_col]=1\n    \n    #combining into single dataframe\n    df = pd.concat([vc_a, vc_b]).reset_index(drop=True)\n    \n    #plotting\n    sns.barplot(y=c, x='count', data=df, hue=target_col, ax=axes[i])\n    ","dad8aab1":"vc_a","e4826835":"vc_b","32f27cbd":"df","0b718ded":"fig, axes = plt.subplots(7,1,figsize=(8,20))\nfor i,c in enumerate(train[num_cols]):\n    train[[c]].boxplot(ax=axes[i], vert=False)","d4dcc90a":"fig, axes = plt.subplots(4, 2, figsize=(18,14))\naxes = [ax for axes_rows in axes for ax in axes_rows]\n\nfor i, c in enumerate(num_cols):\n    plot = train[[c]].plot(kind='kde', ax=axes[i])","c38b404c":"sns.set(font_scale=1.3)\nfig, axes = plt.subplots(4, 2, figsize=(18, 20))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(num_cols):\n    train.groupby(target_col)[c].median().plot(kind = 'barh', title=f'Median_{c}', ax=axes[i])","f1efe5e9":"#create a new column called is_old and fill with true\ntrain['is_old'] = True\n\n#in each row see of age is less 50\n#if yes make old_age value as False fo that row\ntrain.loc[train['customer_age'] <= 50, 'is_old'] = False\n\n#group by old_age and plot the count\n_ = train.groupby('is_old')[target_col].mean().sort_values().plot(kind = 'barh', title='Probability of subscribing to a term deposit')","31d8f66f":"#old_age column is no longer needed\ntrain=train.drop(['is_old'],axis=1)","5eab5d04":"plt.figure(figsize=(14, 8))\n_ = sns.heatmap(train[num_cols].corr(), annot=True)","b0c98f5b":"Older people are more likely to take the term deposit subscription","80344cbf":"# Traget distribution","5e05912a":"**1. Pie chart to see propotion of samples**","590e23a9":"# Univariate analysis of Numerical features","26118c20":"**Let's check corelation**","dba66bba":"**Observations**\n1. Management, retire, self-employed, unemployed and students tend to subscribe more\n2. Singles subscribe more than married and divorced\n3. Customers with tertiary level of education will subscribe\n4. Customers with without housing and personal load tend to subscribe to team deposit\n5. Customers approached by cellular communication have subscribed \n6. Subscription rate is more during start(jan,feb,march,apr) and end of the year(oct,sept,dec)\n7. Customers who subscribed during previous campaign tend to subscribe more","fea5e8a3":"# Thank you","b6f8cbc5":"# Separating categorical and numerical columns","f48db8c4":"# Null values","b377ab89":"There are lot of unique values. day_of_month has 31 unique valus which is obvious and months as 12.","0dfa59fb":"**Observations**\n1. Higher the bank balance more likely to subscribe\n2. Higher the last contacted call duration more likely to subscribe","3c2203ef":"# Brief look at data","24959a64":"# Bivariate analysis of Numerical features\n\nLet us plot median of the numerical values. Why not mean? because we have already seen there are many outliers and mean is very much influenced by outliers.","6ce07de8":"**Let's have closed look at customer age**","cce0edb2":"days_since_prev_campaign_contact has 81% missing data. The reason might be that these customers were never reached during previous campaign. Remaining variables habe very small percentage of missing values which will not matter much.","8cef536d":"# Bivariate analysis of Categorical features\nCheck relationship of each variable with the target variable.","f219b99b":"Printing vc_a, vc_b and df for your understanding","edf9ba70":"We can see many of the features have lot of outliers. Let's see distrubution","33ed6e20":"**2. Bar plot to see frequency**","f9fc854b":"# Unique values","252cc44d":"# Variable datatypes","fec8e2cc":"# Dataset shape","dc37d558":"**Observations**\n1. Most of the customers lie between age of 20 and 60\n2. Big campaing happened roughly 180 and 365 days ago","250424ec":"# Story behind..\nThere has been a revenue decline for the bank and they would like to know what actions to take. After investigation, it was found that the root cause is that their clients are not depositing as frequently as before. Term deposits allow banks to hold onto a deposit for a specific amount of time, so banks can lend more and thus make more profits. In addition, banks also hold better chance to persuade term deposit clients into buying other products such as funds or insurance to further increase their revenues.\n\nYou are provided a dataset containing details of marketing campaigns done via phone with various details for customers such as demographics, last campaign details etc. Can you help the bank to predict accurately whether the customer **will subscribe** to the focus product for the campaign - Term Deposit after the campaign?\n\n<html>\n    <body>\n        <img src='https:\/\/www.passionateinmarketing.com\/wp-content\/uploads\/2020\/07\/campaign-blog-graphic-01-1080x675.jpg'><br>\n    <\/body>\n<\/html>\n\n**Variables:**\n1. idUnique  -                           \nidentifier for each sample in the dataset. Cannot be used for modelling\n2. customer_age\t-                        \nAge of the Customer in years\n3. job_type\t   -                         \nType of job of the customer\n4. marital\t  -                          \nMarital Status of the Custmer\n5. education\t-                        \nEducation Level of the Customer\n6. default\tWhether    -                 \ncustomer has Defaulted in Past\n7. balance\tCurrent    -                 \nBalance in the Customer's Bank\n8. housing_loan\t       -                 \nHas customer taken a Housing Loan\n9. personal_loan\t    -                \nHas customer taken a Personal Loan\n10. communication_type\t  -              \nType of communication made by the bank with the customer\n11. day_of_month\t      -              \nDay of month of the last contact made with customer\n12. month\t               -             \nMonth for the last contact made with customer\n13. last_contact_duration\t-            \nLast Contact duration made with the customer (in seconds)\n14. num_contacts_in_campaign -           \nNumber of contacts made with the customer during the current campaign.\n15. days_since_prev_campaign_contact -\t\nNumber of days passed since customer was contacted in previous campaign.\n16. num_contacts_prev_campaign       -   \nNumber of contacts made with the customer\nduring the previous campaign.\n17. prev_campaign_outcome\t          -  \nSuccess or Failure in previous Campaign.\n18. term_deposit_subscribed\t(Target)   - \nHas the customer taken a term deposit ?\n\n**Agenda:**\n1. Brief look at data\n2. Data shape\n3. Traget distribution\n4. Variable datatypes\n5. Null values\n6. Unique values\n7. Separating categorical ans numerical columns\n8. Univariate analysis of Categorical features\n9. Bivariate analysis of Categorical features\n10. Univariate analysis of Numerical features\n11. Bivariate analysis of Numerical features\n\n**Let's begin**","5b0c4d41":"# Univariate analysis of Categorical features\nPick one variable one at a time and analyse individually like frequency, distribution etc.","2a872b4c":"We have large number of categorical values and few numerical values. We will analyse them separately in later stage.","1be3ba5c":"**Observations**\n1. Less number of students and more number of management and technician customers\n2. Most of married customers\n3. Most customers education levels is secondary\n4. Most cutomers are not defaulted in past\n5. More than 50% have taken housing loan\n6. Nearly 85% have taken personal loan\n7. Major communication type is cellular\n8. Most of the customers were last contacted in the month of May\n9. Most customers where not contacted in previous month","f2a67676":"More than 25,000 have not subscribet to the term deposit which is 89% and only 10% have subscribed."}}