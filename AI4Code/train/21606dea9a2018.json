{"cell_type":{"9460716a":"code","111509a7":"code","cb7830fa":"code","8a1c55c4":"code","afb91150":"code","552e577e":"code","ad602972":"code","dd2e23da":"code","64848b35":"code","40b07d94":"code","6c792bf6":"code","074547fc":"code","44c28246":"code","05acc0db":"code","07211a67":"code","d30c723a":"code","2273cc1c":"code","d3a6e6a3":"code","52b00c07":"code","f873fe8b":"code","7e5ffbf8":"code","e091884f":"code","a5c77974":"code","741103d4":"code","9d963cc6":"code","72736945":"code","06732946":"code","aa1941fd":"code","10abfb32":"code","36f00297":"code","43392379":"code","bdb13b92":"code","850deb31":"code","958519c8":"code","efd99a58":"code","30c21b20":"code","7a43d1ea":"code","5260c870":"code","e9f5e851":"code","502a2c65":"code","2bcb1657":"code","058e3629":"markdown","e7b8fc42":"markdown","9b38d8d9":"markdown","b53f1951":"markdown","92e56b74":"markdown","c63f021b":"markdown","b3dd4990":"markdown","4049f14b":"markdown","e181e869":"markdown","4532502c":"markdown","8ee3a6f8":"markdown","3c460291":"markdown","af78daa8":"markdown","935b2072":"markdown","4cf420a5":"markdown","c8b9377e":"markdown","70c3fdec":"markdown","7db97266":"markdown","f72a9ecb":"markdown","c14fe230":"markdown","7a124717":"markdown","98791a3d":"markdown","844eb0b3":"markdown","c49ecd20":"markdown","4fb1cf6f":"markdown","169ecdf8":"markdown","cc07d5d3":"markdown","be80349d":"markdown","a04f66d6":"markdown","043c74a8":"markdown","e50f024f":"markdown","eabed6eb":"markdown","ee549879":"markdown","0e945dab":"markdown","c7f9b127":"markdown","397eb4d8":"markdown","edb7d1ba":"markdown","64c02f51":"markdown","9c740520":"markdown","93967d85":"markdown","53f7cea8":"markdown","1a2395fc":"markdown","390efe72":"markdown","0a9f4a91":"markdown","98baf6d9":"markdown","909a06bf":"markdown","efbbb2a6":"markdown","a4ec4866":"markdown","12c15d56":"markdown","a4c10db0":"markdown","d21226d6":"markdown","bdfc834f":"markdown","12630fab":"markdown"},"source":{"9460716a":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom fancyimpute import KNN\nfrom sklearn.model_selection import train_test_split\nimport lightgbm as lgb\n\nimport os\nprint(os.listdir(\"..\/input\"))","111509a7":"#Train data\ntrain_df=pd.read_csv('..\/input\/train.csv')\n#Test data\ntest_df=pd.read_csv('..\/input\/test.csv')\n#submission file\nsub_df=pd.read_csv('..\/input\/sample_submission.csv')","cb7830fa":"#Displaying of train data\ntrain_df.head()","8a1c55c4":"#Displaying the test data\ntest_df.head()","afb91150":"#Feature names\ntrain_df.columns","552e577e":"#Data types\ntrain_df.dtypes.head()","ad602972":"#Shape of traain data\nprint(train_df.shape)\n#Displaying summary of train data\ntrain_df.describe()","dd2e23da":"#Shape of test data\nprint(test_df.shape)\n#Displaying summary of test data\ntest_df.describe()","64848b35":"#Percentage of missing values present in train data\n((train_df.isnull().sum())\/1460 *100).iloc[0:10]","40b07d94":"#Percentage of missing values present in test data\n((test_df.isnull().sum())\/1460 *100).iloc[0:10]","6c792bf6":"#Drop the unwanted variables\ntest_df.drop(['Id','PoolQC','Fence','MiscFeature','FireplaceQu','Alley'],axis=1).head()\ntrain_df.drop(['Id','PoolQC','Fence','MiscFeature','FireplaceQu','Alley'],axis=1).head()","074547fc":"#train categorical attributes data\ntrain_cat_attributes=train_df[['MSZoning','Street','LotShape','LandContour','LotConfig','LandSlope','Neighborhood','Condition1','BldgType','HouseStyle','RoofStyle','RoofMatl','Exterior1st','MasVnrType','ExterQual','BsmtQual','BsmtExposure',\n                        'BsmtFinType1','Heating','HeatingQC','CentralAir','Electrical','Functional','GarageType','GarageFinish','KitchenQual','GarageQual','PavedDrive','SaleType','SaleCondition']]\n\n#train numeric attributes data\ntrain_num_attributes=train_df[['LotFrontage','LotArea','OverallQual','MasVnrArea','BsmtFinSF1','BsmtUnfSF','TotalBsmtSF','1stFlrSF','2ndFlrSF','LowQualFinSF','GrLivArea','BsmtFullBath','BsmtHalfBath',\n                         'FullBath','HalfBath','BedroomAbvGr','TotRmsAbvGrd','Fireplaces','GarageCars','GarageArea','WoodDeckSF','OpenPorchSF','EnclosedPorch','3SsnPorch','ScreenPorch','PoolArea','MiscVal','SalePrice']]","44c28246":"#imputing the missing values by using Simple Imputer\nimp = SimpleImputer(strategy=\"most_frequent\")\nimpute_cat=imp.fit_transform(train_cat_attributes)\nprint(impute_cat)\ntrain_cat_attributes=pd.DataFrame(impute_cat,columns=train_cat_attributes.columns)\ntrain_cat_attributes.head()","05acc0db":"#imputing the missing values by using Simple Imputer\nimp = SimpleImputer(strategy=\"mean\")\nimpute_num=imp.fit_transform(train_num_attributes)\nprint(impute_num)\ntrain_num_attributes=pd.DataFrame(impute_num,columns=train_num_attributes.columns)\ntrain_num_attributes.head()","07211a67":"#Scatter plot for different zones(MSZoning)\nfig=plt.figure(figsize=(10,5))\n#fig,ax=plt.subplots(1,2)\nsns.scatterplot(x=train_cat_attributes['MSZoning'],y=train_num_attributes['SalePrice'])\n\n#Scatter plot for street\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['Street'],y=train_num_attributes['SalePrice'])","d30c723a":"#Scatter plot for Land contour\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['LandContour'],y=train_num_attributes['SalePrice'])\n\n#Scatter plot for Land config\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['LotConfig'],y=train_num_attributes['SalePrice'])","2273cc1c":"#Scatter plot for Land frontage\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_num_attributes['LotFrontage'],y=train_num_attributes['SalePrice'])\n#Scatter plot for lot area\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_num_attributes['LotArea'],y=train_num_attributes['SalePrice'])","d3a6e6a3":"#Scatter plot fortype of House Style\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['HouseStyle'],y=train_num_attributes['SalePrice'])\n\n#Scatter plot for type of Roof Style\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['RoofStyle'],y=train_num_attributes['SalePrice'])","52b00c07":"#Scatter plot for type of Heating\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['Heating'],y=train_num_attributes['SalePrice'])\n\n#Scatter plot for Heating Quality\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['HeatingQC'],y=train_num_attributes['SalePrice'])","f873fe8b":"#Scatter plot for Electrical\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['Electrical'],y=train_num_attributes['SalePrice'])\n\n#Scatter plot for Central Air\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['CentralAir'],y=train_num_attributes['SalePrice'])","7e5ffbf8":"#Scatter plot for Garage type\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['GarageType'],y=train_num_attributes['SalePrice'])\n#Scatter plot for Kitchen quality\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['MasVnrType'],y=train_num_attributes['SalePrice'])","e091884f":"#Scatter plot for Garage cars\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_num_attributes['GarageCars'],y=train_num_attributes['SalePrice'])\n#Scatter plot for Garage Area\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_num_attributes['GarageArea'],y=train_num_attributes['SalePrice'])","a5c77974":"#Scatter plot for Sale type\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['SaleType'],y=train_num_attributes['SalePrice'])\n#Scatter plot for Sale condition\nplt.figure(figsize=(10,5))\nsns.scatterplot(x=train_cat_attributes['SaleCondition'],y=train_num_attributes['SalePrice'])","741103d4":"#Encoding train categorical attributes\ntrain_cat_attributes=pd.get_dummies(train_cat_attributes,columns=train_cat_attributes.columns)\ntrain_cat_attributes.head()","9d963cc6":"#Categorical test attributes\ntest_cat_attributes=test_df[['MSZoning','Street','LotShape','LandContour','LotConfig','LandSlope','Neighborhood','Condition1','BldgType','HouseStyle','RoofStyle','RoofMatl','Exterior1st','MasVnrType','ExterQual','BsmtQual','BsmtExposure',\n                        'BsmtFinType1','Heating','HeatingQC','CentralAir','Electrical','Functional','GarageType','GarageFinish','KitchenQual','GarageQual','PavedDrive','SaleType','SaleCondition']]\n\n#Numeric test attributes\ntest_num_attributes=test_df[['LotFrontage','LotArea','OverallQual','MasVnrArea','BsmtFinSF1','BsmtUnfSF','TotalBsmtSF','1stFlrSF','2ndFlrSF','LowQualFinSF','GrLivArea','BsmtFullBath','BsmtHalfBath',\n                         'FullBath','HalfBath','BedroomAbvGr','TotRmsAbvGrd','Fireplaces','GarageCars','GarageArea','WoodDeckSF','OpenPorchSF','EnclosedPorch', '3SsnPorch','ScreenPorch','PoolArea','MiscVal']]","72736945":"#imputing the missing values by using Simple Imputer\nimp = SimpleImputer(strategy=\"most_frequent\")\nimpute_cat=imp.fit_transform(test_cat_attributes)\nprint(impute_cat)\ntest_cat_attributes=pd.DataFrame(impute_cat,columns=test_cat_attributes.columns)\ntest_cat_attributes.head()","06732946":"#imputing the missing values by using Simple Imputer\nimp = SimpleImputer(strategy=\"mean\")\nimpute_num=imp.fit_transform(test_num_attributes)\nprint(impute_num)\ntest_num_attributes=pd.DataFrame(impute_num,columns=test_num_attributes.columns)\ntest_num_attributes.head()","aa1941fd":"#Encoding test categorical attributes\ntest_cat_attributes=pd.get_dummies(test_cat_attributes,columns=test_cat_attributes.columns)\ntest_cat_attributes.head()","10abfb32":"#Merging categorical and numeric train attributes\ntrain_attributes=pd.merge(train_cat_attributes,train_num_attributes,left_index=True,right_index=True)\ntrain_attributes.shape","36f00297":"#Merging categorical and numeric test attributes\ntest_attributes=pd.merge(test_cat_attributes,test_num_attributes,left_index=True,right_index=True)\ntest_attributes.head()\ntest_attributes.shape","43392379":"#Correlations in train attributes\nattributes=train_attributes.columns.values\ncorrelations=train_attributes[attributes].corr().abs().unstack().sort_values(kind='quicksort').reset_index()\ntrain_correlations=correlations[correlations['level_0']!=correlations['level_1']]\nprint(train_correlations.tail())","bdb13b92":"#drop the unwanted train attributes\ntrain_attributes=train_attributes.drop(['CentralAir_Y','Street_Grvl','SaleCondition_Partial','RoofStyle_Gable','LotShape_IR1', 'LandSlope_Gtl','ExterQual_TA','GarageArea','Neighborhood_Somerst','Electrical_FuseA',\n                                       'PavedDrive_N','RoofMatl_Tar&Grv','GarageQual_Fa','TotRmsAbvGrd','KitchenQual_TA','GarageType_Detchd','TotalBsmtSF','HouseStyle_2Story','MSZoning_RL','BsmtQual_TA','MasVnrType_None'],axis=1)\nprint(train_attributes.shape)\ntrain_attributes.head()","850deb31":"#Correlations in test attributes\nattributes=test_attributes.columns.values\ncorrelations=test_attributes[attributes].corr().abs().unstack().sort_values(kind='quicksort').reset_index()\ntest_correlations=correlations[correlations['level_0']!=correlations['level_1']]\nprint(test_correlations.tail())","958519c8":"#drop the unwanted test attributes\ntest_attributes=test_attributes.drop(['Street_Grvl','CentralAir_N','SaleCondition_Partial','LandSlope_Gtl','RoofStyle_Gable','LotShape_IR1','GarageQual_Fa','GarageArea','ExterQual_TA','PavedDrive_N','Neighborhood_Somerst',\n                     'Electrical_FuseA','RoofMatl_Tar&Grv','Heating_GasW','KitchenQual_Gd','MasVnrType_None','HouseStyle_2Story','MSZoning_RL','GarageType_Detchd'],axis=1)\nprint(test_attributes.shape)\ntest_attributes.head()","efd99a58":"#Split the training dataset\nX=train_attributes.drop(['SalePrice'],axis=1)\ny=train_attributes.SalePrice\nX_train,X_valid,y_train,y_valid=train_test_split(X,y,test_size=0.1)\nprint(X_train.shape,y_train.shape)\nprint(X_valid.shape,y_valid.shape)","30c21b20":"#Setting dataset for lightgbm model\nlgb_train=lgb.Dataset(X_train,label=y_train)\nlgb_valid=lgb.Dataset(X_valid,label=y_valid)","7a43d1ea":"#Choosing the parameters\nparams={'boosting_type': 'gbdt', \n          'max_depth' : 20,\n          'objective': 'regression',\n          'boost_from_average':False, \n          'nthread': 8,\n          'num_leaves': 120,\n          'learning_rate': 0.05,\n          'min_data_in_leaf':30,\n          'bagging_fraction':0.8,\n          'max_bin': 500,  \n          'subsample_for_bin': 100,\n          'metric' : 'rmse',\n          }","5260c870":"%%time\n#training the model\nnum_round=2000\nlgbm= lgb.train(params,lgb_train,num_round,valid_sets=[lgb_train,lgb_valid],verbose_eval=100,early_stopping_rounds = 1500)\nlgbm","e9f5e851":"#predict the model\nlgbm_predict=lgbm.predict(test_attributes,random_state=42,num_iteration=lgbm.best_iteration)\nlgbm_predict","502a2c65":"#plot importance features\nlgb.plot_importance(lgbm,max_num_features=50,importance_type=\"split\",figsize=(15,10))","2bcb1657":"df1=pd.DataFrame(lgbm_predict,columns=['SalePrice'])\ndf2=pd.DataFrame(test_df['Id'],columns=['Id'])\n\nsubmission=pd.merge(df2,df1,left_index=True,right_index=True)\nsubmission.set_index('Id')\nsubmission.to_csv('House Price Predictions')","058e3629":"**Correlation Analysis for test attributes**","e7b8fc42":"**Scatter plot for GarageType and KitchenQual**","9b38d8d9":"**Encoding train Categorical attributes**","b53f1951":"From the above plots, we can observed that housing prices are higher for standard circuit breakers & romex elctrical system compared to other electrical systems and housing prices are higher for houses having central air conditioining compared to non air conditioining houses.","92e56b74":"PoolQC,Fence,MiscFeature,FireplaceQU,Alley these are attributes which are having missing values more than 30% of data and we are going to ignore those attributes. \nBsmtFinType1,BsmtFinType2,BsmtExposure,BsmtCond,BsmtQual,Electrical,MasVnrType,MasVnrArea,LotFrontage,GarageType ,GarageYrBlt,GarageFinish,GarageQual,GarageCond these are attributes which are having missing values less than 30% of data and we are going to impute the missing songs.","c63f021b":"**Merging categorical and numeric test attributes**","b3dd4990":"**Training the model**","4049f14b":"**Load the necessary packages**","e181e869":"**Data types**","4532502c":"**Encoding test Categorical attributes**","8ee3a6f8":"**Displaying the test data**","3c460291":"**Drop the unwanted test attributes**","af78daa8":"**Displaying the train data**","935b2072":"From the above plots, we can observed that housing prices are higher for 3 cars garage compared to other garage cars and housing price increases as incresing the garage area.","4cf420a5":"**Plot importance features**","c8b9377e":"**Submitting the prediction values**","70c3fdec":"The train data consists of 1460 observations and 81 attributes.","7db97266":"**Import training dataset**","f72a9ecb":"**Split the train attributes data into train and validation dataset**","c14fe230":"**Summary of the train data**","7a124717":"**Summary of test data**","98791a3d":"PoolQC,Fence,MiscFeature,FireplaceQU,Alley these are attributes which are having missing values more than 30% of data and we are going to ignore those attributes. BsmtFinType1,MSZoning,BsmtFinType2,BsmtExposure,BsmtCond,BsmtQual,Electrical,MasVnrType,MasVnrArea,LotFrontage,GarageType,GarageYrBlt,GarageFinish,GarageQual,GarageCond,Utilities,Exterior1st,Exterior2nd,BsmtFinSF1,BsmtFinSF2,BsmtUnfSF,TotalBsmtSF,BsmtFullBath,BsmtHalfBath,KitchenQual,Functional,GarageCars,SaleType these are attributes which are having missing values less than 30% of data and we are going to impute the missing values.","844eb0b3":"**Model performance on test data**","c49ecd20":"**Missing value analysis**","4fb1cf6f":"From the above plots, we can observed that housing price increases as increasing the lot frontage length of street connected to property and also housing price increases as increasing the lot area.","169ecdf8":"From the above plots, we can observed that housing prices are higher for level or flat and hillside land contour compared to banked and depression land contour and housing prices are higher for inside,corner and cul-de-sac lot confi.compared to other lot configurations.","cc07d5d3":"**Modelling the dataset**","be80349d":"**Scatter plot for Electrical and Central air**","a04f66d6":"From the above plots, we can observed that housing prices are higher for gas hot air and gas hot water heating compared to other heating resources and housing prices are higher for Excellent and Good rate heating quality comared to other ratings. ","043c74a8":"From the above plots, we can observed that housing prices are higher for warranty deed-conventional and home just constructed and sold houses compared to other type houses and housing prices are higher for normal and partial condtion of sale compared to other sale conditions.","e50f024f":"From the above plots, we can observed that housing prices are higher at residential low density ,resedential medium density and floating village residential areas compared to residential high density and commercial areas.\nPaved road access to property is higher house prices compared to Gravel road.","eabed6eb":"**Setting the dataset**","ee549879":"From the above plots, we can observed that housing prices are higher for attached and Bullt-In garage type compared to other garage types and housing prices are higher for brick face and stone masonary veneer tye compared to other types.","0e945dab":"From the above test correlations, we can observed that some attributes are slightly correlated to each other and some are highly correlated to each other based on threshold value 0.8. Highly correlated attributes are carrying same information, so we are going to ignore one of attribute in further analysis.","c7f9b127":"**Scatter plot for MSZoning and Street**","397eb4d8":"**Creating the catgorical and numerical train attributes dataset**","edb7d1ba":"**Distribution of attributes and trends**","64c02f51":"**Scatter plot for Garage Cars and Garage Area**","9c740520":"From the above train correlations, we can observed that some attributes are slightly correlated to each other and some are highly correlated to each other based on threshold value 0.8. Highly correlated attributes are carrying same information, so we are going to ignore one of attribute in further analysis.","93967d85":"**Drop the unwanted train attributes**","53f7cea8":"**Scatter for lot frontage and lot area**","1a2395fc":"**Merging categorical and numeric train attributes**","390efe72":"**Drop the unwanted attributes**","0a9f4a91":"**Imputing of test numerical attributes**","98baf6d9":"**Imputing of train categorical attributes**","909a06bf":"From the above plots,we can observed that housing prices are higher for 2story,1story and 1.5 finished story compared to other house styles and housing prices are higher for Gable and Hip root style compared to other roof styles.","efbbb2a6":"**Train attributes names**","a4ec4866":"**Imputing of train categorical attributes**","12c15d56":"**Scatter plot for Sale type and Sale Condition**","a4c10db0":"**Imputing of train numerical attributes**","d21226d6":"**Creating the catgorical and numerical test attributes**","bdfc834f":"**Scatter plot for land contour and land configuration**","12630fab":"**Correlation Analysis for train attributes**"}}