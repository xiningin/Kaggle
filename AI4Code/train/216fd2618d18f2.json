{"cell_type":{"f4046879":"code","fb1226a0":"code","bf9354ff":"code","02f41751":"code","666909fe":"code","7fa1a84b":"code","1e4e1a07":"code","6053df6c":"code","511089b2":"code","600887b4":"code","81565b95":"code","7dab5ab5":"markdown","827dcf7f":"markdown","f06a3712":"markdown","3433923c":"markdown","f6d26bf5":"markdown","d143fb88":"markdown","cd88aa5e":"markdown","954d1ea5":"markdown","55476c05":"markdown","477933a9":"markdown"},"source":{"f4046879":"import pandas as pd\nimport numpy as np\nfrom glob import glob\nimport shutil","fb1226a0":"thr = 0.08","bf9354ff":"# yolov5x_fold4_finetune768\npred_14cls = pd.read_csv('..\/input\/vinbigdata-final-models-infer\/vfnet_r101_fold4_v3_epoch18_submission.csv')\npred_2cls = pd.read_csv('..\/input\/vinbigdata-2class-prediction\/2-cls test pred.csv')","02f41751":"pred_14cls.head()","666909fe":"pred_2cls.head()","7fa1a84b":"pred = pd.merge(pred_14cls, pred_2cls, on = 'image_id', how = 'left')\npred.head()","1e4e1a07":"pred['PredictionString'].value_counts().iloc[[0]]","6053df6c":"def filter_2cls(row, thr=thr):\n    if row['target']<thr:\n        row['PredictionString'] = '14 1 0 0 1 1'\n    return row","511089b2":"sub = pred.apply(filter_2cls, axis=1)\nsub.head()","600887b4":"sub['PredictionString'].value_counts().iloc[[0]]","81565b95":"sub[['image_id', 'PredictionString']].to_csv('vfnet_r101_fold4_v3_epoch18_2cls_filter_submission.csv',index = False)","7dab5ab5":"# Threshold For `2 Class Filter`\n**NB**: The threshold was chosen arbitarily","827dcf7f":"As we can see from above that applying `2 class filter` Number of `'No Finding'`increases significanly. **[614->2010]**","f06a3712":"# After 2 Class Filter Number of `No Finding`","3433923c":"# Loading csv","f6d26bf5":"# Loading Package","d143fb88":"# 2 Class Filter","cd88aa5e":"# \ud83c\udf1f2 Class Filter\ud83c\udf1f\nOriginal version: https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-2-class-filter\n\nPreviously I have trained `YOLOv5` using `14` class data. As it creates `FP` we can tackle that just simply using a `2 class filter`. Here I'll be using 2 class model (`AUC`:`0.98`) prediction to filter out the `FP` predictions. I used `EfficientNetB6` to generate these predictions.\nIt should increase the score as `FP` would be reduced significantly\n* [14 class train](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-cxr-ad-yolov5-14-class-train)\n* [14 class infer](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-cxr-ad-yolov5-14-class-infer)","954d1ea5":"# Result\nAs we can see applying the `2 class filter` improves the result significantly, from `0.154` to `0.201`. But bear in mind that choosing the `thershold` could be a bit `tricky`.","55476c05":"# Before 2 Class Filter Number of `No Finding`","477933a9":"# Version\n\n* `v12`: vfnet_r101_fold4_v3_epoch18\n* `v11`: vfnet_r101_fold3_v1_epoch25\n* `v10`: vfnet_r101_fold2_v4_epoch18\n* `v9`: vfnet_r101_fold1_v4_epoch18\n* `v8`: vfnet_r101_fold0_v3_epoch4\n* `v7`: vfnet_r101_8020_v1_epoch18\n* `v6`: yolov5x_fold4_finetune_768_tta conf_0.01\n* `v5`: yolov5x_fold3_finetune_768_tta conf_0.01\n* `v4`: yolov5x_fold2_finetune_768_tta conf_0.01\n* `v3`: yolov5x_fold1_finetune_768_tta conf_0.01\n* `v2`: yolov5x_fold0_finetune_768_tta conf_0.01"}}