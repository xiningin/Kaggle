{"cell_type":{"bdf20d9e":"code","1a31e7df":"code","ab4829a6":"code","17d7089b":"code","82432184":"code","7b1d0c88":"code","78260744":"code","9a6275b5":"code","35af5d4e":"code","a7013a82":"code","d6e3f73c":"code","3c13634c":"code","02ca65f4":"code","966399b3":"code","d045e342":"code","e3188532":"code","d10d752f":"code","951bfdc1":"code","81648e53":"code","8ad001fd":"code","e060671f":"code","b7d5d117":"code","66f2aeed":"code","6c777b87":"code","25cd9d04":"code","ea46cf68":"code","3a7a6ebf":"code","608bc8c7":"code","c8221dc4":"code","0218d198":"code","096eb5bb":"code","b95477d1":"code","be455108":"code","a4edf4ec":"code","df8de1bd":"code","6addfdbf":"code","733fe4d4":"code","30dcdd73":"code","1514d182":"code","130bbed8":"code","1a6f125c":"code","e150e1b5":"code","903823d4":"code","b02bcc40":"code","f8a77e5d":"code","1b30921c":"code","4b93756e":"code","ecf60a15":"code","84fdcdeb":"code","d5db77d5":"code","343b0c0d":"code","68a99c17":"code","da98ef44":"code","95c82f57":"code","9646b997":"code","5b6b1a2c":"markdown","f8d34a71":"markdown","73c2f293":"markdown","38260521":"markdown","c18b83b4":"markdown","63678b8f":"markdown","41661a5a":"markdown","e02c0301":"markdown","d5d28e8c":"markdown","72b6c27f":"markdown","8a857191":"markdown","cde7741d":"markdown","db7d08d0":"markdown","8f0609a3":"markdown","4868be0c":"markdown","9211059c":"markdown","b8256af2":"markdown","86f494d1":"markdown","e113a491":"markdown","62e18b8c":"markdown","9f1a7c7a":"markdown","b1bff569":"markdown","458e0d30":"markdown","a396889d":"markdown","05f3f0c5":"markdown"},"source":{"bdf20d9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1a31e7df":"review_data = pd.read_csv('..\/input\/amazon-alexa-reviews\/amazon_alexa.tsv', delimiter='\\t', encoding='utf-8')","ab4829a6":"review_data.head()","17d7089b":"review_data.isnull().sum()","82432184":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","7b1d0c88":"num_rating5 = review_data['rating'][review_data['rating']==5].count()\nnum_rating4 = review_data['rating'][review_data['rating']==4].count()\nnum_rating3 = review_data['rating'][review_data['rating']==3].count()\nnum_rating2 = review_data['rating'][review_data['rating']==2].count()\nnum_rating1 = review_data['rating'][review_data['rating']==1].count()","78260744":"x = ['5','4','3','2','1']","9a6275b5":"ratio_rating = [num_rating5 \/ len(review_data['rating']), num_rating4 \/ len(review_data['rating']), num_rating3 \/ len(review_data['rating']), \n                num_rating2 \/ len(review_data['rating']), num_rating1 \/ len(review_data['rating'])]","35af5d4e":"sns.barplot(x, ratio_rating)\nplt.title(\"Consumer's rating\")\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Ratio of rating\")\nplt.show()","a7013a82":"var_rate = pd.pivot_table(review_data, index = ['variation'])\nvar_rate.head()","d6e3f73c":"plt.figure(figsize = (30,10))\nsns.barplot(x='variation',y='rating', data=review_data)\nplt.show()","3c13634c":"plt.figure(figsize = (30,10))\nsns.violinplot(x='variation',y='rating', data=review_data)\nplt.show()","02ca65f4":"var_rate['feedback'].idxmax(), var_rate['rating'].idxmax()","966399b3":"var_rate['feedback'].idxmin(), var_rate['rating'].idxmin()","d045e342":"# from google.cloud import language\n# from google.cloud.language import enums\n# from google.cloud.language import types","e3188532":"# path = ''  # FULL path to your service account key\n# client = language.LanguageServiceClient.from_service_account_json(path)","d10d752f":"# senti_score = list()\n# senti_mag = list()","951bfdc1":"# for i in range(len(review_data['verified_reviews'])):\n#     text = review_data['verified_reviews'][i]\n#     document = types.Document(\n#         content = text,\n#         type    = enums.Document.Type.PLAIN_TEXT)\n#     # Detects the sentiment of the text\n#     sentiment = client.analyze_sentiment(document=document).document_sentiment\n#     senti_score.append(sentiment.score)\n#     senti_mag.append(sentiment.magnitude)\n#     print('{} is completed'.format(i))","81648e53":"# review_data['sentiment_score'] = senti_score\n# review_data['sentiment_magnitude'] = senti_mag\n# review_data.head()","8ad001fd":"# review_data.to_csv('Amazon_review.csv')","e060671f":"review = pd.read_csv('..\/input\/amazon-alexa-review-with-sentiment-analysis\/Amazon_review.csv')","b7d5d117":"review.head()","66f2aeed":"plt.figure(figsize = (30,10))\nsns.barplot(x='variation',y='sentiment_score', data=review)\nplt.show()","6c777b87":"review_norm = pd.pivot_table(review, index=['variation'])","25cd9d04":"rating_max = review_norm['rating'].max()\nreview_norm['rating'] = review_norm['rating'] \/ rating_max * 100\nscore_max = review_norm['sentiment_score'].max()\nreview_norm['sentiment_score'] = review_norm['sentiment_score'] \/ score_max * 100\nmagnitude_max = review_norm['sentiment_magnitude'].max()\nreview_norm['sentiment_magnitude'] = review_norm['sentiment_magnitude'] \/ magnitude_max * 100\nfeedback_max = review_norm['feedback'].max()\nreview_norm['feedback'] = review_norm['feedback'] \/ feedback_max * 100","ea46cf68":"review_norm.head()","3a7a6ebf":"review_norm_sort = review_norm.sort_values(by='rating', ascending=False)","608bc8c7":"target_col = ['feedback','rating','sentiment_score','sentiment_magnitude']\n\nplt.figure()\nsns.heatmap(review_norm_sort[target_col], annot=True, fmt='f', linewidths=.5)\nplt.show()","c8221dc4":"minus_review = review[review['sentiment_score'] < 0]\nminus_review.head()","0218d198":"pd.pivot_table(minus_review, index=['variation'], values=['sentiment_score'], aggfunc=[np.mean, len], margins=False)","096eb5bb":"minus_review.groupby(['variation'])['sentiment_score'].count().sort_values(ascending=False)","b95477d1":"plus_review = review[review['sentiment_score'] > 0]\nplus_review.head()","be455108":"pd.pivot_table(plus_review, index=['variation'], values=['sentiment_score'], aggfunc=[np.mean, len], margins=False)","a4edf4ec":"plus_review.groupby(['variation'])['sentiment_score'].count().sort_values(ascending=False)","df8de1bd":"from scipy.stats import pearsonr","6addfdbf":"corr = pd.DataFrame()","733fe4d4":"corr['rating'] = review['rating']\ncorr['feedback'] = review['feedback']\ncorr['sentiment_score'] = review['sentiment_score']\ncorr['sentiment_magnitude'] = review['sentiment_magnitude']\ncorr.head()","30dcdd73":"corr.corr()","1514d182":"plt.figure() \nsns.heatmap(corr.corr(), cmap='BuGn')","130bbed8":"cols = corr.columns\nmat = corr.values\narr = np.zeros((len(cols),len(cols)), dtype=object)","1a6f125c":"for xi, x in enumerate(mat.T):\n    for yi, y in enumerate(mat.T[xi:]):\n        arr[xi, yi+xi] = pearsonr(x,y)[1]\n        arr[yi+xi, xi] = arr[xi, yi+xi]","e150e1b5":"p_value = pd.DataFrame(arr, index=cols, columns=cols)","903823d4":"p_value","b02bcc40":"feature = review\ndel_col = ['date','variation','verified_reviews']\nfeature = feature.drop(del_col, axis=1)\nfeature.head()","f8a77e5d":"from sklearn.model_selection import train_test_split","1b30921c":"y = feature['rating']\nx_feature = ['feedback','sentiment_score','sentiment_magnitude']\nx = feature[x_feature]","4b93756e":"X_train, X_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state = 42)","ecf60a15":"from sklearn.tree import DecisionTreeClassifier","84fdcdeb":"DT_clf = DecisionTreeClassifier()\nDT_clf.fit(X_train, y_train)","d5db77d5":"DT_ypred = DT_clf.predict(X_test)","343b0c0d":"DT_accuracy = DT_clf.score(X_test, y_test)\nDT_accuracy","68a99c17":"from sklearn.ensemble import RandomForestClassifier","da98ef44":"RF_clf = RandomForestClassifier(n_estimators = 100)\nRF_clf.fit(X_train, y_train)","95c82f57":"RF_ypred = RF_clf.predict(X_test)","9646b997":"RF_accuracy = RF_clf.score(X_test, y_test)\nRF_accuracy","5b6b1a2c":"## 1) Loading review data","f8d34a71":"#### Bar chart","73c2f293":"## 3) Sentiment Analysis using Google Natural Language API\n### Reference: https:\/\/cloud.google.com\/natural-language\/docs\/reference\/libraries#installing_the_client_library\n### Because of packages setting of Kaggle, I just put my code on kernel without running","38260521":"### 4.1) Average ratings and product types with negative sentiment analysis scores","c18b83b4":"### 5.2) Random Forest Classifier","63678b8f":"### 5.1) Decision Tree Classifier","41661a5a":"#### p-value of correlation","e02c0301":"#### Highest feedback, rated Alexa variation","d5d28e8c":"#### Violin Plot","72b6c27f":"#### In data set, there are sentiment score and sentiment magnitude. If sentiment score is positive, then it is positive review. And if sentiment score is negative, it is negative review.","8a857191":"### 2.1) Overall rating about Amazon Alexa","cde7741d":"#### Heatmap","db7d08d0":"### 4.3) Correlation between sentiment analysis, rating, and feedback","8f0609a3":"## 4) Data analysis based on sentiment analysis","4868be0c":"### Normalization","9211059c":"### 4.2) Average ratings and product types with positive sentiment analysis scores","b8256af2":"# Amazon Alexa Reveiw\n## Data analysis & sentiment analysis using Google Natural Language API","86f494d1":"## 2) Data visualization","e113a491":"#### Lowest feedback, rated Alexa variation","62e18b8c":"### bar chart of sentiment score","9f1a7c7a":"### Loading review data contained semtiment analysis result","b1bff569":"## 5) Forecasting rating","458e0d30":"#### correlation heat map","a396889d":"### Feature = 'feedback', 'sentiment_score', 'sentiment_magnitude'","05f3f0c5":"### 2.2) Feedback, Rating for Alexa variation"}}