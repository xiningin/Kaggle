{"cell_type":{"1e7a2b46":"code","3d9c6fa9":"code","c8f1c44a":"code","c8f49f06":"code","11cab3a4":"code","36522ed5":"code","78aa06bd":"code","6b5cb57e":"code","b6d1a2aa":"code","c8a16578":"code","4ea07b97":"code","cf0d54be":"code","56c8c9ba":"code","3c13c388":"code","60046267":"code","04128e36":"code","9c09af1c":"code","06737449":"code","105fedba":"code","635267a6":"code","5236654b":"code","10b947ed":"code","099c7e63":"code","6f15bfb3":"code","898b2c0d":"code","d0bc4d35":"code","f0597e26":"code","1f6f3014":"markdown","9abc86ae":"markdown","cd564215":"markdown","8b54411f":"markdown","d74929e1":"markdown","2ef4fc54":"markdown"},"source":{"1e7a2b46":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d9c6fa9":"df = pd.read_csv('..\/input\/drug-classification\/drug200.csv')","c8f1c44a":"df.head()","c8f49f06":"df.shape","11cab3a4":"df.dtypes","36522ed5":"df.isnull().sum()","78aa06bd":"df['Cholesterol'].value_counts()","6b5cb57e":"df['BP'].value_counts()","b6d1a2aa":"df['Drug'].value_counts()   ","c8a16578":"import seaborn as sns\nsns.swarmplot(data=df,x='Drug',y='Cholesterol')","4ea07b97":"sns.swarmplot(data=df,x='Drug',y='Age')","cf0d54be":"sns.swarmplot(data=df,x='Drug',y='BP')","56c8c9ba":"X = df.drop('Drug',axis=1)\ny = df['Drug']","3c13c388":"X = pd.get_dummies(X,['Age','BP','Cholesterol'])\ny = pd.get_dummies(y,['Drug'])","60046267":"X.head()","04128e36":"y.head()","9c09af1c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.33, random_state = 42)","06737449":"from sklearn.ensemble import RandomForestClassifier\nmodel_1 = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 42)\nmodel_1.fit(X_train, y_train)","105fedba":"y_pred = model_1.predict(X_test)","635267a6":"from sklearn.metrics import accuracy_score","5236654b":"accuracy_score(y_test,y_pred)","10b947ed":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation,Dropout ,Flatten\nfrom tensorflow.keras.layers.experimental.preprocessing import Normalization","099c7e63":"normalize = Normalization()","6f15bfb3":"model_2 = Sequential([\n    normalize,\n    Flatten(input_shape=(9,)),\n    Dense(32, activation='tanh'),\n    Dropout(0.5),\n    Dense(5, activation='sigmoid'),\n])\n\nmodel_2.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])\n","898b2c0d":"from tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss', mode='min', patience=10,restore_best_weights=True)","d0bc4d35":"model_2.fit(x=X_train, \n          y=y_train, \n          epochs=1000,\n          batch_size=10,\n          validation_data=(X_test, y_test),\n           callbacks=[early_stop]\n          )","f0597e26":"model_2.evaluate(X_test, y_test)","1f6f3014":"# Building Model 2 -> NN","9abc86ae":"# Split Data","cd564215":"# Exploring Data","8b54411f":"# Building Model 1 -> RF","d74929e1":"# Loading Data","2ef4fc54":"# Data Visualization\n"}}