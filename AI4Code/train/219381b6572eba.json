{"cell_type":{"076e0d58":"code","7eaf721b":"code","ebe11d9b":"code","b8cfcdd1":"code","68a92a38":"code","d40e3909":"code","e161cf2f":"code","95dec161":"code","d54356e9":"code","ee9e067b":"code","d99b566e":"code","ba3c23e9":"code","05b5e904":"code","f89eb08c":"code","98e9fc09":"code","5105d083":"code","70ea42e7":"code","8d81358d":"code","d16427b9":"code","da76b1ed":"code","c56503dc":"code","726a5a60":"code","141c4316":"code","d740129f":"code","49a2febd":"markdown","7915fe7d":"markdown","eafb1c4a":"markdown","762ca2e6":"markdown","78084ad5":"markdown","eb78bc71":"markdown","eee31303":"markdown","347b3647":"markdown","3f3537c0":"markdown","0d2bb00b":"markdown","08997199":"markdown","1fee3bfe":"markdown","f60deca9":"markdown","460d47e8":"markdown","54b8363b":"markdown","243e055e":"markdown","1a3d2ada":"markdown","48adc687":"markdown","4415b804":"markdown","722f3035":"markdown","cd223b81":"markdown"},"source":{"076e0d58":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # \nimport seaborn as sns # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","7eaf721b":"# read data in \"BlackFriday.csv\"\ndata = pd.read_csv(\"..\/input\/BlackFriday.csv\")","ebe11d9b":"# get data information\ndata.info()","b8cfcdd1":"# show data columns\ndata.columns","68a92a38":"# show first 10 data\ndata.head(10)","d40e3909":"# correlation in consol scrren\n#data.corr()\n\n# correlation visualization square\n#f,ax = plt.subplots(figsize=(10,5))\n#sns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\n#plt.show()\n\n# correlation visualization triangle\ncorr = data.corr()\n# Plot figsize\nfig, ax = plt.subplots(figsize=(10, 10))\ndropSelf = np.zeros_like(corr)\ndropSelf[np.triu_indices_from(dropSelf)] = True\n# Generate Color Map\ncolormap = sns.light_palette((210, 90, 60), input=\"husl\")\n# Generate Heat Map, allow annotations and place floats in map\nsns.heatmap(corr, cmap=colormap, annot=True, fmt=\".2f\", mask=dropSelf)\n# Apply xticks\nplt.xticks(range(len(corr.columns)), corr.columns);\n# Apply yticks\nplt.yticks(range(len(corr.columns)), corr.columns)\nplt.show()","e161cf2f":"# plot Purchase\n# kind = kind, color = color, label = label, linewidth = width of line, alpha = opacity,\n# grid = grid, linestyle = sytle of line, figsize = figure size\ndata.Purchase.plot(kind = 'line', color = 'g', label = 'Purchase', linewidth=1, alpha = 0.5, grid = True, linestyle = ':', figsize=(30, 10))\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('Purchase')\nplt.title('Purchase Line')        # title = title of plot\nplt.show()","95dec161":"# filtering Pandas data frame\nmyFilterParam = data.Purchase < 1000\ndata[myFilterParam].head(10)\n\n# or\n#data[ data.Purchase < 1000].head(10)","d54356e9":"# filtering Pandas with Numpy logical and\n#data[ np.logical_and( data.Purchase > 23900, data.Gender == 'F') ]\n\n# multi filtering (i don't know how right it is?)\ndata[ np.logical_and( np.logical_and( data.Purchase > 23900, data.Gender == 'F'), data.Age == '18-25' ) ]","ee9e067b":"# Apply the filter to the data first, then draw the price from the filtered data\ndata[ data.Purchase < 400].Purchase.plot(figsize=(30, 10), kind = 'line', color = 'g', label = 'Purchase', linewidth=1, alpha = 0.8, grid = True, linestyle = '-')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('PURCHASE')\nplt.title('Purchase Line')            # title = title of plot\nplt.show()","d99b566e":"# unique values\nprint('Unique Product Category: {0}'.format( len( data[\"Product_Category_1\"].unique() )))\nprint('Unique Product ID: {0}'.format( len( data[\"Product_ID\"].unique() )))\nprint('Unique Occupation: {0}'.format( len( data[\"Occupation\"].unique() )))","ba3c23e9":"print(\"Maximum Purchase: {0} $\".format( data.Purchase.max()))\nprint(\"Minimum Purchase: {0} $\".format( data.Purchase.min()))\nprint(\"Average Purchase: {0:.2f} $\".format( data.Purchase.mean()))\n# {0:.2f} -> take two steps after zero\n#print(\"Average Purchase: {0} $\".format( data.Purchase.mean()))","05b5e904":"# plot Purchase\n# kind = kine, color = color, bins = number of bar in figure, figsize = figure size\ndata.Purchase.plot(kind = 'hist', color = \"#4bd1b1\", bins = 50, figsize=(12, 12))\nplt.title('Purchase Histogram Graph')\nplt.xlabel('Purchase')\nplt.show()","f89eb08c":"# plot Scatter\n# price filtering before\ndata[data.Purchase > 20000].plot(kind='scatter', x='Purchase', y='Product_Category_1', alpha = 0.3, color = 'b', figsize=(20, 10))\n#data[data.Purchase < 500].plot(kind='scatter', x='Purchase', y='Product_Category_1', alpha = 0.3, color = 'red', figsize=(20, 10))\nplt.xlabel('Purchase')\nplt.ylabel('Product Category')\nplt.title('Product and Purchase Scatter Plot')\nplt.show()","98e9fc09":"# dictionary practice on python\nmyDictionary = {'hello':'merhaba',\n                'pen':'kalem',\n                'window':'pencere'}\nprint( myDictionary.keys())\nprint( myDictionary.values())\nprint('----'*20)\n# add new element\nmyDictionary['computer'] = 'bilgisayar'\nprint( myDictionary)\n# change element\nmyDictionary['hello'] = 'selam'\nprint( myDictionary)\n# delete element\ndel myDictionary['hello']\nprint( myDictionary)\nprint('hello' in myDictionary)\n# get 1 element value\nprint(myDictionary['window'])\n# clear dictionary\nmyDictionary.clear()","5105d083":"# how many different cities\ndata[\"City_Category\"].unique()","70ea42e7":"# find every city frequency\n# P.S. -> I did this because the City_Category were string. I'm sure there are easier ways!\ncityDict = {'A':0, 'B':0, 'C':0}\nfor each in data['City_Category']:\n    cityDict[each] += 1\n\n# draw figure\nfig = plt.figure(figsize=(10,10))\n# add graph\nax = fig.add_subplot(111)\n# draw graph\nax.bar( cityDict.keys(), cityDict.values(), color='g')\nplt.title('City Category Bar')\nplt.xlabel('City Name')\nplt.ylabel('Buyers')\nplt.show()","8d81358d":"# find most purchase user\nprint('Number of different customers: {0}\\n'.format( len( data['User_ID'].unique() )))\n\nuserDict = {}\n# look at both at the same time\nfor purch, userId in zip(data['Purchase'], data['User_ID']):\n    # if already added userId in dictionary, add to purchase\n    if userDict.get(userId, -1) != -1:\n        userDict[userId] +=  purch\n    # else add user and purchase\n    else:\n        userDict[userId] = purch\n\n# find maximum purchase and buyer\nprint( max(zip(userDict.values(), userDict.keys() )))\n\n#data[ data['User_ID'] == max(zip(userDict.values(), userDict.keys()))[1] ]\nwinnerUser = data[ data['User_ID'] == max(zip(userDict.values(), userDict.keys()))[1] ]\nwinnerUser.head()\n\n#winnerUser['Purchase'].sum()\n\n# different purchase Product\n#print( len( winnerUser['Product_ID'].unique() ))","d16427b9":"# use dictionary because age features is string\nageDict = {}\nfor purch, userAge in zip( data['Purchase'], data['Age']):\n    if ageDict.get(userAge, -1) != -1:\n        ageDict[userAge] +=  purch\n    else:\n        ageDict[userAge] = purch\n        \n# total purchase by age but no sort\nprint( ageDict)\nprint('---'*50)\n# we sorted dictionary for more beatiful graph\nfrom collections import OrderedDict\n# key -> x[0]:sort dict keys, x[1]:sort dict values\nage_sorted = OrderedDict( sorted( ageDict.items(), key=lambda x: x[0]))\nprint( age_sorted)\n#print('---'*50)\n#age_sorted1 = OrderedDict( sorted( ageDict.items(), key=lambda x: x[1]))\n#print( age_sorted1)","da76b1ed":"# draw figure\nfig = plt.figure(figsize=(10,10))\n# add graph\nax = fig.add_subplot(111)\n# draw graph\nax.bar( age_sorted.keys(), age_sorted.values(), color='#4f7fcc')\nplt.title('Age - Purchase Bar')\nplt.xlabel('Age')\nplt.ylabel('Purchase')\nplt.show()","c56503dc":"# get male and female user\nmale_user = data[ data[ 'Gender'] == 'M'].count()[0]\nfemale_user = data[ data[ 'Gender'] == 'F'].count()[0]\nprint('Male user: {0}'.format(male_user))\nprint('Female user: {0}'.format(female_user))","726a5a60":"# draw figure\nfig = plt.figure(figsize=(10,10))\nax = fig.add_subplot(111)\nax.bar( ['Male', 'Female'], [male_user, female_user], color='#c952ad')\nplt.title('Gender Bar')\nplt.xlabel('Gender')\nplt.ylabel('Buyers')\nplt.show()","141c4316":"# total purchase by gender\nmale_purch = data[ data['Gender']=='M']['Purchase'].sum()\nfemale_purch = data[ data['Gender']=='F']['Purchase'].sum()\nprint('Male user: {0}'.format(male_purch))\nprint('Female user: {0}'.format(female_purch))","d740129f":"# draw figure\nfig = plt.figure(figsize=(15,10))\n\n# graph total purchase by gender\nax1 = fig.add_subplot(121)\nax1.bar( ['Male', 'Female'], [male_purch, female_purch], color='#6152c9')\nplt.title('Total Purchase by Gender')\nplt.ylabel('Purchase')\n\n# graph total purchase by gender\nax2 = fig.add_subplot(122)\nax2.bar( ['Male', 'Female'], [male_purch\/male_user, female_purch\/female_user], color='#d6404c')\nplt.title('Average Purchase by Gender')\nplt.ylabel('Purchase')\n\nplt.show()\n","49a2febd":"Let's we find maximum, minimum and average purchase<br><br>\n### ***<span style=\"color:#06bfe0\">Maximum - Minimum Value<\/span>***","7915fe7d":"I always thought Black Friday was a day of discount. I wouldn't have guessed that the average purchase would be so high.<br>\nBut still not understood much. So try histogram graph.\n<br><br>\n### ***<span style=\"color:#06bfe0\">Histogram Graph<\/span>***","eafb1c4a":"Products category 6, 7, 9, 10, 15 and 16 have purchase for over $ 20,000. There are fewer than 9 items and the most purchase product is the number 10 product. I wondered about 9 and 10.<br>\nWe can also look at low purchase products.\n<br><br>\n### ***<span style=\"color:#06bfe0\">Dictionary<\/span>***","762ca2e6":"Now, let's examine the relationship between age and purchase<br><br>\n### ***<span style=\"color:#06bfe0\">Age<\/span>***","78084ad5":"<a id=\"2\"><\/a> <br>\n## **2. Dataset**<br>\n   More in[ https:\/\/www.kaggle.com\/mehdidag\/black-friday](https:\/\/www.kaggle.com\/mehdidag\/black-friday)","eb78bc71":"How many different product category, product ID and occupation.\n<br><br>\n### ***<span style=\"color:#06bfe0\">Unique Elements<\/span>***","eee31303":"<a id=\"4\"><\/a> <br>\n## **4. Graphs and Reviews**<br>\n<br>\n<br>\n### ***<span style=\"color:#06bfe0\">Correlation<\/span>***","347b3647":"Hardly understanding this graph. Let's filter method.\n<br><br>\n### ***<span style=\"color:#06bfe0\">Filtering<\/span>***","3f3537c0":"He is amazing! He purchase is 10,536,783 $. There are 978 different product. I would love to meet him :)","0d2bb00b":"Let's examine the relationship between gender and purchase\n<br><br>\n### ***<span style=\"color:#06bfe0\">Gender<\/span>***","08997199":"26-35 age range has the most purchases. I think most of the black Friday products cater for the 23-35 age range. It is obvious that the target group of the Black Friday is the 27-35 age group. <br>\n0-17 age range has the least purchases. Products sold in the 0-17 age range (ie children's products) are very few.","1fee3bfe":"Let's graph the data to a clear level","f60deca9":"Men have made more purchases from women in total but almost equal when we look at the average. ","460d47e8":"<a id=\"3\"><\/a> <br>\n## **3. Import Modules and Reading the Data**","54b8363b":"\"Product_Category_1\" and \"Product_Category_2\" seem correlation. Same time \"Product_Category_2\" and \"Product_Category_3\" seem correlation.","243e055e":"Let's look at the relationship between cities and buyers with a histogram graph\n<br><br>\n### ***<span style=\"color:#06bfe0\">City<\/span>***","1a3d2ada":"It is clear that men do more shopping than women. Let's look purchase by gender.","48adc687":"### ***<span style=\"color:#06bfe0\">Rich Man<\/span>***","4415b804":"<a id=\"1\"><\/a> <br>\n## **1. Introduction**<br>\n   First of all, This is my first kernel and of course i have many wrongs. Please excuse me.<br>\n    I am taking the courses of ML and AI, and I am at the beginning. I search some datasets and i decide use Black Friday dataset. I will gradually make improvements on this data set. With this data set, I learn how to use kaggle and how to obtain meaningful data and how to use it. I regret that I found this site late. I wish I had already started processing data. But i think it's not too late :)\n    ","722f3035":"# **Contents**<br>\n1. [Introduction](#1)<br>\n2. [Dataset](#2)<br>\n3. [Import Modules and Reading the Data](#3)<br>\n4. [Graphs and Reviews](#4)<br>\n","cd223b81":"More understandable graph than line. We can see how much it is from every purchase. There are very few products over 20000 purchase.<br>\nTry scatter plot for Purchase > 20000 and Product Category. So that we can learn the relationship between product and purchase.\n<br><br>\n### ***<span style=\"color:#06bfe0\">Scatter Graph<\/span>***"}}