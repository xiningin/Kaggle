{"cell_type":{"56e22ca8":"code","2ea4c0f5":"code","cd6ee9d0":"code","e9946cad":"code","96fbf435":"code","158c96e1":"code","cfdb9702":"code","aec236db":"code","7cffc27f":"code","f3ce4ffc":"code","4f980d03":"code","1e16b401":"code","1a23d184":"code","7899972c":"code","163b7564":"code","7d3149b9":"code","a4b2cc82":"code","2fd6c520":"code","6a6e4804":"code","3669d816":"code","c6c2d98c":"code","0725e345":"code","46c81b97":"code","3a82f578":"code","c9b219e7":"code","018f112e":"code","408ff34d":"code","9c0e12d0":"code","4b787ab3":"code","dd24b550":"code","ddf56a58":"code","2246bd54":"code","a46abe27":"markdown","bafcea96":"markdown","79f3b527":"markdown","69db91bf":"markdown","4f5a84d1":"markdown","c70d0335":"markdown","445b4270":"markdown","a68ef3ff":"markdown"},"source":{"56e22ca8":"import numpy as np\nimport pandas as pd\n\nimport re\nfrom nltk.stem import PorterStemmer\nfrom sklearn.preprocessing import MultiLabelBinarizer\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso","2ea4c0f5":"data = pd.read_csv('..\/input\/ice-cream-dataset\/combined\/products.csv')","cd6ee9d0":"data","e9946cad":"data = data.drop(['key', 'name', 'subhead', 'description'], axis=1)","96fbf435":"data","158c96e1":"data = data.drop(data.query('rating_count < 10').index, axis=0).reset_index(drop=True)","cfdb9702":"data = data.drop('rating_count', axis=1)","aec236db":"data","7cffc27f":"def process_ingredients(ingredients):\n    ps = PorterStemmer()\n    new_ingredients = re.sub(r'\\(.*?\\)', '', ingredients)\n    new_ingredients = re.sub(r'CONTAINS:.*$', '', new_ingredients)\n    new_ingredients = re.sub(r'\\..*?:', ',', new_ingredients)\n    new_ingredients = re.sub(r'( AND\/OR )', ',', new_ingredients)\n    new_ingredients = re.sub(r'( AND )', ',', new_ingredients)\n    new_ingredients = new_ingredients.split(',')\n    for i in range(len(new_ingredients)):\n        new_ingredients[i] = new_ingredients[i].replace('\u2020', '').replace('*', ' ').replace(')', '').replace('\/', ' ')\n        new_ingredients[i] = re.sub(r'^.+:', '', new_ingredients[i])\n        new_ingredients[i] = ps.stem(new_ingredients[i].strip())\n        if new_ingredients[i] == 'milk fat':\n            new_ingredients[i] = 'milkfat'\n    return new_ingredients","f3ce4ffc":"# Add all unique ingredients to all_ingredients\n\nall_ingredients = set()\n\nfor row in data.iterrows():\n    ingredients = process_ingredients(data.loc[row[0], 'ingredients'])\n    for ingredient in ingredients:\n        if ingredient not in all_ingredients:\n            all_ingredients.add(ingredient)\n\nall_ingredients.remove('')","4f980d03":"all_ingredients","1e16b401":"data","1a23d184":"y = data.loc[:, 'rating']\nX = data.drop('rating', axis=1)","7899972c":"X","163b7564":"def onehot_encode(df, column, prefix):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column], prefix=prefix)\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","7d3149b9":"X = onehot_encode(X, 'brand', 'b')","a4b2cc82":"X","2fd6c520":"X['ingredients'] = X['ingredients'].apply(process_ingredients)","6a6e4804":"X","3669d816":"ingredients_df = X['ingredients']\ningredients_df","c6c2d98c":"mlb = MultiLabelBinarizer()\n\ningredients_df = pd.DataFrame(mlb.fit_transform(ingredients_df))","0725e345":"ingredients_df","46c81b97":"X = pd.concat([X, ingredients_df], axis=1)\nX = X.drop('ingredients', axis=1)","3a82f578":"X","c9b219e7":"y","018f112e":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=100)","408ff34d":"model = LinearRegression()\n\nmodel.fit(X_train, y_train)","9c0e12d0":"model.score(X_test, y_test)","4b787ab3":"l2_model = Ridge(alpha=1000.0)\n\nl2_model.fit(X_train, y_train)","dd24b550":"l2_model.score(X_test, y_test)","ddf56a58":"l1_model = Lasso(alpha=0.1)\n\nl1_model.fit(X_train, y_train)","2246bd54":"l1_model.score(X_test, y_test)","a46abe27":"# Training","bafcea96":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/Wz6oUPkeZvY","79f3b527":"## Without Regularization","69db91bf":"# Getting Started","4f5a84d1":"## With L2 (Ridge) Regression","c70d0335":"## With L1 (Lasso) Regression","445b4270":"# Preprocessing","a68ef3ff":"# Task for Today  \n\n***\n\n## Ice Cream Rating Prediction  \n\nGiven *data about various ice creams and their ingredients*, let's try to predict the **average user rating** of a given ice cream.  \n  \nWe will use a linear regression model to make our predictions."}}