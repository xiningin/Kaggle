{"cell_type":{"d038949c":"code","7a479c87":"code","7c7b09cd":"code","4be730c7":"code","93f6e93e":"code","474ec497":"code","13452ac6":"code","9343d4b4":"code","658339d6":"code","9a5f0991":"code","fb714f51":"code","f014ea13":"code","e546b629":"code","1674647f":"code","e3c2967b":"code","850b0f21":"code","128c212b":"code","158e8b53":"code","125ceebf":"code","560ab587":"code","ebac6419":"code","ee041941":"code","024fadea":"code","94778689":"code","2bc58604":"code","7018e4dd":"code","e1e6485b":"code","cba34086":"code","751f6d26":"code","94b3078b":"markdown","a4445537":"markdown","d8331a43":"markdown","226e965f":"markdown","8a839161":"markdown","7281efcd":"markdown","9f5b76d3":"markdown","23d84cbc":"markdown","f5de0327":"markdown","21d37282":"markdown","4815113d":"markdown","68f8e9e2":"markdown","32d4d2be":"markdown","198d7118":"markdown","c1316ebc":"markdown","f1d187cc":"markdown","aa4ac78c":"markdown","1e37539c":"markdown","d1671c75":"markdown","e11de33f":"markdown","24b5ac61":"markdown","369fa07e":"markdown","08c4c70c":"markdown","7fc357ee":"markdown","3a0745ee":"markdown","f99f571e":"markdown","a6fd6d74":"markdown","f5f15ba8":"markdown","1bb90898":"markdown","3cc512e7":"markdown"},"source":{"d038949c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7a479c87":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","7c7b09cd":"# setting plot style for all the plots\nplt.style.use('fivethirtyeight')","4be730c7":"df = pd.read_csv('\/kaggle\/input\/superbowl-history-1967-2020\/superbowl.csv')\ndf.head()","93f6e93e":"print('Number of rows in the dataset: ', df.shape[0])\nprint('Number of columns in the dataset: ', df.shape[1])","474ec497":"df.info()","13452ac6":"df['Date'] = pd.to_datetime(df['Date'])\ndf['Date'] = df['Date'].dt.year","9343d4b4":"df.describe().round(decimals=3).drop('Date', axis=1)","658339d6":"fig, ax = plt.subplots(figsize=(18,6))\nax.plot(df['Date'], df['Winner Pts'], marker='.', mew=5, color='dodgerblue', label='Winners')\nax.plot(df['Date'],df['Loser Pts'], marker='+', color='red', label='Losers', mew=3)\nax.set_xlabel('Years')\nax.set_ylabel('Points Scored')\nax.set_title('Points scored by Winning and Loosing Teams over the Years')\nax.legend()\nplt.show()","9a5f0991":"df[df['Winner Pts'] == df['Winner Pts'].max()][['Winner', 'Winner Pts', 'Date']]","fb714f51":"df[df['Winner Pts'] == df['Winner Pts'].min()][['Winner', 'Winner Pts', 'Date']]","f014ea13":"df[df['Loser Pts'] == df['Loser Pts'].max()][['Loser', 'Loser Pts', 'Date']]","e546b629":"df[df['Loser Pts'] == df['Loser Pts'].min()][['Loser', 'Loser Pts', 'Date']]","1674647f":"# this dataframe contains the winning count of each team\nwinning_count = pd.DataFrame(df['Winner'].value_counts()).reset_index()\nwinning_count.index += 1\nwinning_count.rename(columns = {\n    'index':'Team Name',\n    'Winner':'Count'\n}, inplace=True)\n\nwinning_count.sort_values(by='Count', ascending=False, inplace=True)","e3c2967b":"plt.figure(figsize=(20,7))\nsns.barplot(y='Team Name', x='Count', data=winning_count,\n           edgecolor='black',\n           linewidth=2)\nplt.title('Number of times each team has won throughout the years')\nplt.xticks(rotation=90)\nplt.show()","850b0f21":"losing_count = pd.DataFrame(df['Loser'].value_counts()).reset_index()\nlosing_count.index += 1\nlosing_count.rename(columns = {\n    'index':'Team Name',\n    'Loser':'Count'\n}, inplace=True)\n\nlosing_count.sort_values(by='Count', ascending=False, inplace=True)","128c212b":"plt.figure(figsize=(20,7))\nsns.barplot(x='Team Name', y='Count', data=losing_count,\n           edgecolor='black',\n           linewidth=2, palette='Blues_r')\nplt.title('Number of times each team has won throughout the years')\nplt.xticks(rotation=90)\nplt.show()","158e8b53":"df['Winning Margin'] = df['Winner Pts'] - df['Loser Pts']","125ceebf":"plt.figure(figsize=(18,6))\nplt.plot(df['Date'],df['Winning Margin'], marker='.', mew=3, linewidth=4,mec='black', color='dodgerblue')\nplt.xlabel('Years')\nplt.ylabel('Winning Margin')\nplt.title('Winning Margin over the years')\nplt.show()","560ab587":"df['Match'] = df['Winner'] + ' vs ' + df['Loser']\ndf2 = df.sort_values(by='Winning Margin', ascending=False)\ndf2 = df2.head(10)","ebac6419":"plt.figure(figsize=(18,7))\nsns.barplot(y='Match', x='Winning Margin', data=df2,\n            edgecolor='black',linewidth=2)\nplt.title('Top 10 teams by winning point margin')\nplt.show()","ee041941":"state_count = pd.DataFrame(df['State'].value_counts()).reset_index()\nstate_count.index += 1\nstate_count.rename(columns = {\n    'index':'State',\n    'State':'Count'\n}, inplace=True)\n\nstate_count.sort_values(by='Count', ascending=False, inplace=True)","024fadea":"plt.figure(figsize=(18,6))\ng = sns.barplot(y='State', x='Count', data=state_count, edgecolor='black', linewidth=2)\ng.set_title('Statewise Number of Matches', y=1.05)\ng.set(xlabel='States', ylabel='Number of Matches held')\nplt.show()","94778689":"city_count = pd.DataFrame(df['City'].value_counts()).reset_index()\ncity_count.index += 1\ncity_count.rename(columns = {\n    'index':'City',\n    'City':'Count'\n}, inplace=True)\n\ncity_count.sort_values(by='Count', ascending=False, inplace=True)\ncity_count = city_count.head()","2bc58604":"plt.figure(figsize=(18,6))\ng = sns.barplot(y='City', x='Count', data=city_count, edgecolor='black',linewidth=2)\ng.set_title('Top 5 cities in terms of number of matches held', y=1.05)\ng.set(xlabel='Cities', ylabel='Number of Matches held')\nplt.show()","7018e4dd":"mvp_count = pd.DataFrame(df['MVP'].value_counts()).reset_index()\nmvp_count.index += 1\nmvp_count.rename(columns = {\n    'index':'MVP',\n    'MVP':'Count'\n}, inplace=True)\n\nmvp_count.sort_values(by='Count', ascending=False, inplace=True)\nmvp_count = mvp_count.head()","e1e6485b":"plt.figure(figsize=(18,6))\ng = sns.barplot(y='MVP', x='Count', data=mvp_count, edgecolor='black',linewidth=2)\ng.set_title('Top 5 Most Valuable Players', y=1.05)\ng.set(xlabel='MVP', ylabel='Count')\nplt.show()","cba34086":"stadium_count = pd.DataFrame(df['Stadium'].value_counts()).reset_index()\nstadium_count.index += 1\nstadium_count.rename(columns = {\n    'index':'Stadium',\n    'Stadium':'Count'\n}, inplace=True)\n\nstadium_count.sort_values(by='Count', ascending=False, inplace=True)\nstadium_count = stadium_count.head(4)","751f6d26":"plt.figure(figsize=(14,4))\ng = sns.barplot(y='Stadium', x='Count', data=stadium_count, edgecolor='black',linewidth=2)\ng.set_title('Stadiums where most number of matches were held', y=1.05)\ng.set(xlabel='Stadium Names', ylabel='Count')\nplt.show()","94b3078b":"### 8. Top 5 MVP's(Most Valuable Players)","a4445537":"## Exploratory Data Analysis\n","d8331a43":"In this kernel I have performed Exploratory Data Analysis on the Superbowl History 1967-2020 dataset and tried to identify relationship between various features present in the dataset.","226e965f":"**New England Patriots** and **Pittsburgh Steelers** have the most wins(11) till now.","8a839161":"### 7. Top 5 cities where the most number of matches were held","7281efcd":"### 1. Points scored by winning and losing teams over the years","9f5b76d3":"**Denver Broncos** and **New England Patriots** have the most number of loses till now.","23d84cbc":"### 5. Top 10 teams by winning points margin","f5de0327":"### 2. Number of times a team has won","21d37282":"#### i. Highest points scored by a winning team till date","4815113d":"**The features described in the above data set are:**\n\n**1. Count** tells us the number of NoN-empty rows in a feature.\n\n**2. Mean** tells us the mean value of that feature.\n\n**3. Std** tells us the Standard Deviation Value of that feature.\n\n**4. Min** tells us the minimum value of that feature.\n\n**5. 25%, 50%, and 75%** are the percentile\/quartile of each features.\n\n**6. Max** tells us the maximum value of that feature.","68f8e9e2":"#### iv. Lowest points scored by a losing team till date","32d4d2be":"It's interesting to note that New **England Patriots** is the only team which has the most number of wins as well as loses in the SuperBowl.\n\nThe other top winner **Pittsburgh Steelers** has only lost 2 games till now.","198d7118":"### Features of the data set","c1316ebc":"The dataset contains information about 54 superbowl finals.","f1d187cc":"### 4. Winning Margin over the years\n\nWinning Margin is the difference between the scores of winning and losing teams[](http:\/\/)","aa4ac78c":"### 6. Statewise Number of Matches","1e37539c":"## Describing the Dataset","d1671c75":"Coverting the Date column in the dataframe to a datetime object","e11de33f":"The following data is given in the dataset\n\n**1. Date:** Date on which the Superbowl Final was held.\n\n**2. SB:** Superbowl Title\n\n**3. Winner:** Name of the winning team.\n\n**4. Winner Pts:** Points scored by the winning team.\n\n**5. Loser:** Name of the losing team.\n\n**6. Loser Pts:** Points scored by the losing team.\n\n**7. MVP:** Most Valuable Player.\n\n**8. Stadium:** Name of the stadium in which superbowl was held.\n\n**9. City:** Name of the city where superbowl was held.\n\n**10. State:** Name of the state where superbowl was held.","24b5ac61":"### 9. Stadiums where the most number of matches were held","369fa07e":"Suggestions are welcome, **<font color='red'>UPVOTE<\/font>** if you found the notebook useful.","08c4c70c":"#### iii. Highest points scored by a losing team till date","7fc357ee":"### Dimensions of dataset","3a0745ee":"I hope you find this kernel helpful and some **<font color='red'>UPVOTES<\/font>** would be very much appreciated","f99f571e":"### 3. Number of times a team has lost the match","a6fd6d74":"#### ii. Lowest points scored by a winning team till date","f5f15ba8":"### Basic statistical details about the dataset","1bb90898":"### Importing Required Libraries","3cc512e7":"There are **NO Null values** in the dataset. Also there are **3 numerical features** and **8 numerical features** in the dataset."}}