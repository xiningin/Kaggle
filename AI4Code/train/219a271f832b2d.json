{"cell_type":{"7d047497":"code","a7bed32a":"code","6057c1f4":"code","ce980c23":"code","636668d2":"code","67fa02ad":"code","46a05ad3":"code","d1f15cdc":"code","0462e7ea":"code","6f364585":"code","ecdc9d86":"code","d36677db":"code","4602489d":"code","483fb1c7":"code","82159bc2":"code","3980c13b":"code","3be530b5":"code","1900d4e1":"code","e6f4ae18":"code","8b54a890":"code","21ec99e8":"code","99ed51b9":"code","4d4c84c6":"code","c3c76b46":"code","db9a565a":"code","b3e0f36b":"code","3f9c9beb":"code","b7ef23cb":"code","c7a24c1c":"code","23291aab":"code","7b1b4bc7":"code","bd26b23a":"code","012937ac":"code","60efb0eb":"code","edfc7b13":"markdown","8c6b8822":"markdown","96f01a3b":"markdown","8c753e97":"markdown","69558538":"markdown","f0f3f7ca":"markdown","8b2dca95":"markdown","127868c0":"markdown","58625aa4":"markdown","245e7ad6":"markdown","25d0f024":"markdown","7a1aa7e8":"markdown","693f4c6a":"markdown","9d5e1be0":"markdown","e12800f5":"markdown"},"source":{"7d047497":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a7bed32a":"#Modules for EDA\nimport numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n#ML modules\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.decomposition import PCA\n%matplotlib inline","6057c1f4":"dd = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/data-dictionary.csv')\ndd.columns,dd.shape","ce980c23":"for i in range(10):\n    print(dd['Column Name'][i],\":\")\n    print(dd['Description'][i])\n    print('\\n')","636668d2":"dd.set_index('Column Name',inplace=True)","67fa02ad":"df = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/Country-data.csv')\ndf.shape","46a05ad3":"df.info()","d1f15cdc":"df.head()","0462e7ea":"#Global stats\ndf.describe()","6f364585":"def get5(col,return_df=False,place='Top'):\n    \n    c5 = df[['country',col]].sort_values(by=col,ascending=False)\n    if place=='Top':\n        c5 = c5.head()\n    elif place=='Bottom':\n        c5 = c5.tail()\n    else:\n        raise ValueError('place can be \"Top\" or \"Bottom\"')\n    plt.figure(figsize=(7,7))\n    plt.title(f'{place} 5 countries in {col} category')\n    sns.barplot(data=c5,y='country',x=col)\n    \n    plt.show()\n    if return_df:\n        return top5","ecdc9d86":"for col in df.columns[1:]:\n    get5(col)\n    print('\\n')","d36677db":"for col in df.columns[1:]:\n    get5(col,place='Bottom')\n    print('\\n')","4602489d":"def getBarplot(col,title,scale='log'):\n    cdf = df[['country',col]].sort_values(by=col,ascending=False)\n    plt.figure(figsize=(10,39))\n    sns.barplot(data=cdf,y='country',x=col)\n    plt.title(title)\n    plt.xscale(scale)\n    plt.show()","483fb1c7":"getBarplot('child_mort',title=dd.loc['child_mort'][0])","82159bc2":"getBarplot('health',title=dd.loc['health'][0],scale='linear')","3980c13b":"for i in range(167):\n    exp_imp = df[['imports','exports']].loc[i]\n    \n    exp_imp.plot(kind='bar',color=['blue','red'])\n    plt.title(df['country'].loc[i])\n    \n    plt.show()","3be530b5":"cols_to_scale = df.columns[1:]\ncols_to_scale","1900d4e1":"scale = MinMaxScaler()\nscalled = scale.fit_transform(df[cols_to_scale])","e6f4ae18":"i=0\nfor column in cols_to_scale:\n    df[column] = scalled[:,i]","8b54a890":"df.head()","21ec99e8":"x = df.drop('country',axis=1)","99ed51b9":"x.describe()","4d4c84c6":"sse = []\nk_rng = range(1,11)\nfor k in k_rng:\n    km = KMeans(n_clusters=k)\n    km.fit(df[df.columns[1:]])\n    sse.append(km.inertia_)","c3c76b46":"plt.title('Elbow Method')\nplt.plot(range(1,11),sse)\nplt.show()","db9a565a":"km = KMeans(n_clusters=2)\npredict = km.fit_predict(x)","b3e0f36b":"predict","3f9c9beb":"cluster_country = pd.DataFrame({'Country':df['country'],'Cluster':predict})\ncluster_country.head()","b7ef23cb":"cluster1 = cluster_country[cluster_country['Cluster'] == 1]\ncluster1.shape","c7a24c1c":"cluster1","23291aab":"cluster0 = cluster_country[cluster_country['Cluster'] == 0]\ncluster0.shape","7b1b4bc7":"pd.set_option('max_rows',123)\ncluster0","bd26b23a":"pca = PCA(n_components=2)\ndata = pca.fit_transform(x)","012937ac":"data = pd.DataFrame({'x':data[:,0],'y':data[:,1],'Clusters':predict})","60efb0eb":"plt.figure(figsize=(7,7))\nsns.scatterplot(data=data,x='x',y='y',hue='Clusters')\nplt.title('PCA Result')\nplt.show()","edfc7b13":"* ## **Top 5**","8c6b8822":"# **Mapping clusters and countries**","96f01a3b":"# **Countries that belong to cluster 1**","8c753e97":"# **Clustering**","69558538":"# **Imports VS Exports**","f0f3f7ca":"# **Top 5 and Bottom 5 countries of each Category**","8b2dca95":"# **PCA**","127868c0":"# **Countries that belong to cluster 0**","58625aa4":"* ## **Bottom 5**","245e7ad6":"# **Value of K is 2**","25d0f024":"# **Feature Descriptions**","7a1aa7e8":"# **Feature scaling**","693f4c6a":"#### **Similarly you can check for other columns as well.**","9d5e1be0":"# **Using Elbow Method to find optimal value for 'K'**","e12800f5":"# **Overall Rankings (Barplots)**"}}