{"cell_type":{"f29e907a":"code","bb78a855":"code","fa598455":"code","d3455a62":"code","f8742338":"code","fef80bf4":"code","7c8ca014":"code","f16f67b1":"code","6bd23cd4":"code","aea1a3ff":"code","bd3c7625":"code","77113b9a":"code","a65b9829":"code","73c79737":"code","59ae52ab":"code","3822b8c3":"code","33c4d151":"code","12d96e6c":"code","2ccc99be":"code","3f1e3f29":"code","dfbb304d":"markdown","7c2d688f":"markdown","e18f6c4b":"markdown","3869fdec":"markdown","e9645ad3":"markdown","32b10665":"markdown","b40a5eb7":"markdown","ce7612c0":"markdown","ade728df":"markdown","69ef990b":"markdown","704af453":"markdown","2fcd7335":"markdown","366e319c":"markdown","5ba00592":"markdown","67e60811":"markdown","6c40a624":"markdown","b23ca964":"markdown","779615c2":"markdown","d2c0f6d9":"markdown","34df2c9e":"markdown"},"source":{"f29e907a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bb78a855":"import pandas as pd\nimport seaborn as sns\ncar_data = pd.read_csv(\"..\/input\/automobile-from-california\/imports-85.csv\",header=None)","fa598455":"# create headers list\nheaders = [\"symboling\",\"normalized-losses\",\"make\",\"fuel-type\",\"aspiration\", \"num-of-doors\",\"body-style\",\n         \"drive-wheels\",\"engine-location\",\"wheel-base\", \"length\",\"width\",\"height\",\"curb-weight\",\"engine-type\",\n         \"num-of-cylinders\", \"engine-size\",\"fuel-system\",\"bore\",\"stroke\",\"compression-ratio\",\"horsepower\",\n         \"peak-rpm\",\"city-mpg\",\"highway-mpg\",\"price\"]\nprint(\"headers\\n\", headers)","d3455a62":"car_data.columns = headers\ncar_data.head(10)","f8742338":"import numpy as np\ncar_data.replace(\"?\", np.nan, inplace = True)\ncar_data.head(10)","fef80bf4":"missing_data = car_data.isnull()\nmissing_data.head(10)","7c8ca014":"for column in missing_data.columns.values.tolist():\n    print(column)\n    print(missing_data[column].value_counts())\n    print(\"\")\n    ","f16f67b1":"car_data.describe(include = \"all\")","6bd23cd4":"car_data['num-of-doors'].value_counts()","aea1a3ff":"car_data['num-of-doors'].value_counts().idxmax()\n","bd3c7625":"car_data['num-of-doors'].replace(np.nan, \"four\", inplace=True)\nmissing_data_1 = car_data.isnull()\nprint(missing_data_1['num-of-doors'].value_counts())\n","77113b9a":"car_data.dropna(subset=[\"price\"], axis = 0, inplace=True)\n# reset index, because we droped two rows\ncar_data.reset_index(drop=True, inplace=True)\nmissing_data_2 = car_data.isnull()\nprint(missing_data_2['price'].value_counts())","a65b9829":"avg_norm_loss = car_data[\"normalized-losses\"].astype(\"float\").mean(axis=0)\navg_stroke =car_data[\"stroke\"].astype(\"float\").mean(axis=0)\navg_bore = car_data[\"bore\"].astype(\"float\").mean(axis=0)\navg_horse_power = car_data[\"horsepower\"].astype(\"float\").mean(axis=0)\navg_peak_rpm = car_data[\"peak-rpm\"].astype(\"float\").mean(axis=0)\nprint(avg_norm_loss, \"\" , avg_stroke, \"\", avg_bore, \"\", avg_horse_power, \"\", avg_peak_rpm)","73c79737":"car_data[\"normalized-losses\"].replace(np.nan, avg_norm_loss, inplace=True)\ncar_data[\"stroke\"].replace(np.nan, avg_stroke, inplace=True)\ncar_data[\"bore\"].replace(np.nan, avg_bore, inplace=True)\ncar_data[\"horsepower\"].replace(np.nan, avg_horse_power, inplace=True)\ncar_data[\"peak-rpm\"].replace(np.nan, avg_peak_rpm, inplace=True)","59ae52ab":"car_data.head(10)\n","3822b8c3":"car_data.tail(20)","33c4d151":"#list data types of each column\ncar_data.dtypes","12d96e6c":"car_data[[\"bore\", \"stroke\", \"price\", \"peak-rpm\"]] = car_data[[\"bore\", \"stroke\", \"price\", \"peak-rpm\"]].astype(\"float\")\ncar_data[[\"normalized-losses\"]] = car_data[[\"normalized-losses\"]].astype(\"int\")\n","2ccc99be":"car_data.dtypes\n","3f1e3f29":"#check data of the coulms engine-type and num-of-cylinders\ndf = car_data[[\"engine-type\",\"num-of-cylinders\"]]\ndf","dfbb304d":"replace NaN with four for num-of-doors column and check for missing data of num-of-doors coulmn","7c2d688f":"we finally obtain the cleaned dataset with no missing values and all data in its proper format.\n***","e18f6c4b":"<h2> 2. Deal with missing data<\/h2>\n\n<ol>\n    <li>drop data<br>\n        a. drop the whole row<br>\n        b. drop the whole column -  - Whole columns should be dropped only if most entries in the column are empty.\n    <\/li>\n    <li>replace data<br>\n        a. replace it by mean<br>\n        b. replace it by frequency<br>\n        c. replace it based on other functions\n    <\/li>\n<\/ol>","3869fdec":"<p>As we can see above, some columns are not of the correct data type. Numerical variables should have type 'float' or 'int', and variables with strings such as categories should have type 'object'. <\/p> \n   <p> For example, 'bore' and 'stroke' variables are numerical values that describe the engines, so we should expect them to be of the type 'float' or 'int'; however, they are shown as type 'object'. <\/p> \n    <p>We have to convert data types into a proper format for each column using the \"astype()\" method.<\/p> ","e9645ad3":"<h4>Replace \"NaN\" by mean value<\/h4>","32b10665":"<h4>b. Evaluating Missing Data - There are two methods to detect missing data<\/h4>\n<pre><ol>\n    <li><b>.isnull()<\/b><\/li>\n    <li><b>.notnull()<\/b><\/li>\n<\/ol><\/pre>","b40a5eb7":"<h2 >3. Correct data format<\/h2>\n<p>The last step in data cleaning is checking and making sure that all data is in the correct format (int, float, text or other).<\/p>\n\nIn Pandas, we use \n<p><b>.dtypes()<\/b> to check the data type<\/p>\n<p><b>.astype()<\/b> to change the data type<\/p>","ce7612c0":"<p>From the above summery, we can understand that the data contains 205 rows and in the that total 7 columns has missing data<\/p>\n<ol>\n    <li>\"normalized-losses\": 41 missing data<\/li>\n    <li>\"num-of-doors\": 2 missing data<\/li>\n    <li>\"bore\": 4 missing data<\/li>\n    <li>\"stroke\" : 4 missing data<\/li>\n    <li>\"horsepower\": 2 missing data<\/li>\n    <li>\"peak-rpm\": 2 missing data<\/li>\n    <li>\"price\": 4 missing data<\/li>\n<\/ol>","ade728df":"Now the missing values are converted into python's default","69ef990b":"Now, we the dataset is with no missing values.","704af453":"We can also use idxmax() method to find most common type automatically.","2fcd7335":"<h4>c. Count missing values in each column<\/h4>\n<pre>.value_counts()<\/pre>counts the number of \"True\" values. it should used inside a for loop","366e319c":"<h2>1. identify missing data<\/h2>\n<h4>a. Convert \"?\" to NaN(pythons default missing value marker) - <pre>.replace(A, B, inplace = True)<\/pre> <\/h4>\n","5ba00592":"<b>Replace by frequency:<\/b>\n<ul>\n    <li>\"num-of-doors\": 2 missing data, replace them with \"four\". \n        <ul>\n            <li>Reason: 84% sedans is four doors. Since four doors is most frequent, it is most likely to occur - Check 'top' and 'freq' in the describe() summery<\/li>\n            <li>To see which values are present in a particular column, we can use the \".value_counts()\" method:<\/li>\n        <\/ul>\n    <\/li>\n<\/ul>","67e60811":"<b>All other - Replace by mean: as it is average<\/b>\n<ul>\n    <li>\"normalized-losses\": 41 missing data, replace them with mean<\/li>\n    <li>\"stroke\": 4 missing data, replace them with mean<\/li>\n    <li>\"bore\": 4 missing data, replace them with mean<\/li>\n    <li>\"horsepower\": 2 missing data, replace them with mean<\/li>\n    <li>\"peak-rpm\": 2 missing data, replace them with mean<\/li>\n<\/ul>","6c40a624":"<b>Drop the whole row:<\/b>\n<ul>\n    <li>\"price\": 4 missing data, simply delete the whole row\n        <ul>\n            <li>Reason: price is what we want to predict. Any data entry without price data cannot be used for prediction; therefore any row now without price data is not useful to us<\/li>\n        <\/ul>\n    <\/li>\n<\/ul>","b23ca964":"\"True\" stands for missing value, while \"False\" stands for not missing value.","779615c2":"Note that there are no true values and also check that there are only 201 rows and befoer it was 205, as 4 rows of with missing data in price column is deleted.","d2c0f6d9":"<h4>Calculate the average of the column - using mean() method <\/h4>","34df2c9e":"<h2>A . Identify and handle missing values<\/h2>\n<p>We can see several question marks in the dataset which indicates the missing values<\/p>\n<p>We need to deal with Missing data before further analysis.<\/p>\n<p>Steps for working with missing data<\/p>\n    <ol>\n    <li>identify missing data<\/li>\n    <li>deal with missing data<\/li>\n    <li>correct data format<\/li>\n    <\/ol>\n    \n\n"}}