{"cell_type":{"ad1ad706":"code","7de79e8b":"code","79156115":"code","f973aeef":"code","9ef5c1eb":"code","a49e423f":"code","ead09413":"code","5f7db311":"code","fbc9c2e9":"code","1d5fc29f":"markdown","c78558e2":"markdown","4c3a86fd":"markdown","2fbe265e":"markdown","17df908c":"markdown","56e833f7":"markdown"},"source":{"ad1ad706":"import os\n\nfrom pathlib import Path\n\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom tqdm import tqdm","7de79e8b":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","79156115":"path_data = Path('\/kaggle\/input\/covid19-global-forecasting-week-1\/')\n\ndf_train = pd.read_csv(path_data \/ 'train.csv', parse_dates=['Date'])\ndf_test  = pd.read_csv(path_data \/ 'test.csv',  parse_dates=['Date'])","f973aeef":"df_train","9ef5c1eb":"df_test","a49e423f":"df_train['Lat,Long'] = df_train['Lat'].astype(str) + ',' + df_train['Long'].astype(str)\ndf_test[ 'Lat,Long'] = df_test[ 'Lat'].astype(str) + ',' + df_test[ 'Long'].astype(str)","ead09413":"df_train.head()","5f7db311":"list_tmp = []\n\nfor date in tqdm(sorted(df_train['Date'].unique().tolist())):\n    df_train_tmp                 = df_train[df_train['Date'] <= pd.to_datetime(date)]\n    df_grouped                   = df_train_tmp.groupby('Lat,Long')\n    df_tmp                       = df_grouped.mean()[['Lat', 'Long']]\n    df_tmp['log_ConfirmedCases'] = df_grouped.max()['ConfirmedCases']\n    df_tmp['Date']               = str(pd.to_datetime(date)).split(' ')[0]\n    list_tmp.append(df_tmp)\n\nfig = px.scatter_geo(pd.concat(list_tmp), lat='Lat', lon='Long', size='log_ConfirmedCases', projection='natural earth', animation_frame='Date')\nfig.show()","fbc9c2e9":"list_tmp = []\n\nfor date in tqdm(sorted(df_train['Date'].unique().tolist())):\n    df_train_tmp                 = df_train[df_train['Date'] <= pd.to_datetime(date)]\n    df_grouped                   = df_train_tmp.groupby('Lat,Long')\n    df_tmp                       = df_grouped.mean()[['Lat', 'Long']]\n    df_tmp['log_ConfirmedCases'] = np.log(1+df_grouped.max()['ConfirmedCases'])\n    df_tmp['Date']               = str(pd.to_datetime(date)).split(' ')[0]\n    list_tmp.append(df_tmp)\n\nfig = px.scatter_geo(pd.concat(list_tmp), lat='Lat', lon='Long', size='log_ConfirmedCases', projection='natural earth', animation_frame='Date')\nfig.show()","1d5fc29f":"## Plot simply","c78558e2":"## Pre-process","4c3a86fd":"# Import libraries","2fbe265e":"# Plot on Map, datetime animation","17df908c":"## Plot log-scaled\n\nUse log(1+X) scaling","56e833f7":"# Load dataset"}}