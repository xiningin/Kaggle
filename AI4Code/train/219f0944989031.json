{"cell_type":{"61ced361":"code","8b0a9f49":"code","96f5d219":"code","3be7d20f":"code","59dbaa18":"code","8f0db37c":"code","7648c7de":"code","fc822997":"code","895f24e2":"code","755a1109":"code","237364d6":"code","dbc09bd1":"code","cccf3387":"code","a1521ec2":"code","beb401f1":"code","d5f87470":"code","ff10a31e":"code","4a39afce":"code","808896eb":"code","5c85d7ff":"code","3c8cdc23":"code","b4a52540":"code","3b4eb4c8":"code","06b90f61":"code","51e6b3e0":"code","d7f1542d":"code","3a4a5dad":"code","681ddc87":"code","8863edb0":"code","82eefbde":"code","1a1419ea":"code","a1cd05ff":"markdown","0597874b":"markdown","7b50fc65":"markdown","3876f8fc":"markdown","912e282f":"markdown","4276b7d4":"markdown","cb90f772":"markdown","02e61abb":"markdown","a4ba21cf":"markdown","0e3c426d":"markdown"},"source":{"61ced361":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8b0a9f49":"data_2017 = pd.read_csv('..\/input\/2017.csv')\ndata_2016 = pd.read_csv('..\/input\/2016.csv')\ndata_2015= pd.read_csv('..\/input\/2015.csv')","96f5d219":"data_2017.info\n","3be7d20f":"data_2016.info","59dbaa18":"data_2017.columns","8f0db37c":"data_2017.rename(\n    columns={\n   'Happiness.Score' : 'Happiness_Score',\n   'Happiness.Rank' : 'Happiness_Rank',\n   'Whisker.high' : 'Whisker_high',\n   'Whisker.low' : 'Whisker_low',\n   'Economy..GDP.per.Capita.' : 'Economy_GDP_per_Capita',\n   'Health..Life.Expectancy.' : 'Health_Life_Expectancy',\n   'Trust..Government.Corruption.' : 'Trust_Government_Corruption',\n   'Dystopia.Residual' : 'Dystopia_Residual'\n   \n  },\n  inplace=True\n)","7648c7de":"data_2017.columns","fc822997":"data_2017['Country'].unique()","895f24e2":"data_2017['Happiness_Score']","755a1109":"#Happiness Scores of Countries in Bar Plot\nplt.figure(figsize=(50,40))\nsns.barplot(x=data_2017['Country'], y=data_2017['Happiness_Score'])\nplt.xticks(rotation= 90)\nplt.xlabel('Contries')\nplt.ylabel('Happiness Scores')\nplt.title('World Happiness Report')","237364d6":"#Happiness rate of each country\n#For this dataset we dont need sorting but for other datasets we should do:\ndata_2017.Happiness_Score.replace(['-'],0.0,inplace = True)\ndata_2017.Happiness_Score = data_2017.Happiness_Score.astype(float)\ncountry_list = list(data_2017['Country'].unique())\ncountry_ratio = []\nfor i in country_list:\n    x = data_2017[data_2017['Country']==i]\n    country_rate = sum(x.Happiness_Score)\/len(x)\n    country_ratio.append(country_rate)\ndata = pd.DataFrame({'country_list': country_list,'country_ratio':country_ratio})\nnew_index = (data['country_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n#visualition \nplt.figure(figsize=(50,45))\nsns.barplot(x=sorted_data['country_list'], y=sorted_data['country_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('Countries')\nplt.ylabel('Happiness Rate')\nplt.title('World Happiness Report')","dbc09bd1":"Country_list = list(data_2017['Country'].unique())\ndata_2017.Happiness_Score = data_2017.Happiness_Score.astype(float)\nScore_list = list(data_2017['Happiness_Score'].unique())\nA_list=[i for i in Country_list if i.startswith(\"A\")]\nA_Score_list=[]\nfor i in Country_list:\n    if i.startswith(\"A\"):\n        x = data_2017[data_2017['Country']==i]\n        S =x.Happiness_Score\n        A_Score_list.append(S)\n   \ndata = pd.DataFrame({'A_list': A_list,'A_Score_list':A_Score_list})\n#new_index = (data['A_Score_list'].sort_values(ascending=False)).index.values\n#sorted_data = data.reindex(new_index)\n\n#A_Score_list=[i for i in data_2017  if i.startswith(\"A\")]\nplt.figure(figsize=(15,10))\nsns.barplot(x=data.A_list, y=data.A_Score_list)\nplt.xticks(rotation= 45)\nplt.xlabel('Countries')\nplt.ylabel('Happiness Rate')\nplt.title('World Happiness Report')\n","cccf3387":"#A_list=[i for i in Country_listif i.startswith(\"A\")]","a1521ec2":"\n#data_2017.replace(['-'],0.0,inplace = True)\n#data_2017.replace(['(X)'],0.0,inplace = True)\n\ndata_2017.loc[:,['Economy_GDP_per_Capita', 'Family', 'Health_Life_Expectancy', 'Freedom']] = data_2017.loc[:,['Economy_GDP_per_Capita', 'Family', 'Health_Life_Expectancy', 'Freedom']].astype(float)\nCountry_list = list(data_2017['Country'].unique())\nEconomy_GDP_per_Capita = list(data_2017['Economy_GDP_per_Capita'].unique())\nFamily = list(data_2017['Family'].unique())\nHealth_Life_Expectancy = list(data_2017['Health_Life_Expectancy'].unique())\nFreedom = list(data_2017['Freedom'].unique())\n\n# visualization\nf,ax = plt.subplots(figsize = (15,25))\nsns.barplot(x=Economy_GDP_per_Capita,y=Country_list,color='green',alpha = 0.5,label='Economy_GDP_per_Capita' )\nsns.barplot(x=Family,y=Country_list,color='blue',alpha = 0.7,label='Family')\nsns.barplot(x=Health_Life_Expectancy,y=Country_list,color='cyan',alpha = 0.6,label='Health_Life_Expectancy')\nsns.barplot(x=Freedom,y=Country_list,color='red',alpha = 0.6,label='Freedom')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\n\n","beb401f1":"\n# visualize\nf,ax1 = plt.subplots(figsize =(40,30))\nsns.pointplot(x=data_2017.Country,y=data_2017.Happiness_Score,color='lime',alpha=0.8)\nsns.pointplot(x=data_2017.Country,y=data_2017.Economy_GDP_per_Capita,color='red',alpha=0.8)\nplt.text(0,0.5,'Economy',color='red',fontsize = 30,style = 'italic')\nplt.text(0,0,'Happiness Score',color='lime',fontsize = 30,style = 'italic')\nplt.xlabel('Countries',fontsize = 50,color='blue')\nplt.ylabel('Values',fontsize = 50,color='blue')\nplt.xticks(rotation= 90)\nplt.title('Economy  VS  Happiness Score',fontsize = 50,color='blue')\nplt.grid()","d5f87470":"\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng = sns.jointplot(data_2017.Happiness_Score, data_2017.Economy_GDP_per_Capita, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","ff10a31e":"g = sns.jointplot(data_2017.Happiness_Score, data_2017.Economy_GDP_per_Capita, kind=\"kde\", color=\"g\",size=7)\ng.plot_joint(plt.scatter, c=\"w\", s=30, linewidth=1, marker=\"+\")\ng.ax_joint.collections[0].set_alpha(0)\nplt.savefig('graph.png')\nplt.show()\n","4a39afce":"g = sns.jointplot(data_2017.Happiness_Score, data_2017.Economy_GDP_per_Capita, kind=\"hex\", color=\"g\",size=7)\n#g.plot_joint(plt.scatter, c=\"w\", s=30, linewidth=1, marker=\"+\")\n#g.ax_joint.collections[0].set_alpha(0)\nplt.savefig('graph.png')\nplt.show()\n","808896eb":"g = sns.jointplot(data_2017.Happiness_Score, data_2017.Economy_GDP_per_Capita,size=5, ratio=3, color=\"r\")","5c85d7ff":"data=data_2017.Country.head(5)\ndata\n","3c8cdc23":"\ndata.value_counts()","b4a52540":"labels = data.value_counts().index\ncolors = ['grey','blue','red','yellow','green']\nexplode = [0,0,0,0,0]\nsizes = data.value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Countries in Data Dataset',color = 'blue',fontsize = 15)","3b4eb4c8":"\ndata=data_2017\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"Happiness_Score\", y='Economy_GDP_per_Capita', data=data)\nplt.show()","06b90f61":"# cubehelix plot\nsns.kdeplot(data.Happiness_Score, data.Economy_GDP_per_Capita, shade=True, cut=2)\nplt.show()","51e6b3e0":"data=[data_2017.Happiness_Score]\n","d7f1542d":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\n#plt.figure(figsize = (40,40))\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\n\nplt.show()","3a4a5dad":"data_2017.corr()","681ddc87":"#correlation map\n\nf,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data_2017.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","8863edb0":"data1=data_2017['Family']\ndata2 = data_2017['Happiness_Score']\ndata3=data_2017['Happiness_Rank']\ndata4=data_2017['Economy_GDP_per_Capita']\ndata = pd.concat([data1,data2,data3,data4],axis =1) # axis = 0 : adds dataframes in row\n\n","82eefbde":"# pair plot\nsns.pairplot(data)\nplt.show()","1a1419ea":"above5 =['above5' if i >=5.0 else 'below5' for i in data_2017.Happiness_Score]\ndf = pd.DataFrame({'Happiness_Score':above5})\nsns.countplot(x=df.Happiness_Score)\nplt.title('Happiness Score',color = 'blue',fontsize=15)\n\n","a1cd05ff":"**Count Plot**","0597874b":"**Point Plot**","7b50fc65":"**Kde Plot**","3876f8fc":"**Bar Plot**","912e282f":"**LM Plot**","4276b7d4":"**Joint Plot**","cb90f772":"**Violin Plot**","02e61abb":"**Pie Chart**","a4ba21cf":"**Pair Plot**","0e3c426d":"**Heat Map**"}}