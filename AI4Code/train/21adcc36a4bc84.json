{"cell_type":{"ad21d436":"code","7ae5ebf0":"code","bdc8db9a":"code","8d75a0e5":"code","0f4f4bd5":"code","fc55a518":"code","54ba6144":"code","d513439c":"code","b643fc3b":"code","555495e1":"code","2f819f54":"code","58ecf810":"code","c1b2e617":"code","47a44a74":"code","62c82162":"code","27bb2615":"code","26bbf3ef":"code","5dd0083d":"code","f06aa9d3":"code","172e18c8":"code","583d6bb5":"code","307f2dce":"code","a8035e16":"code","dc9e0940":"code","454d7ccb":"code","dbf89601":"code","737226ba":"code","71a3fb1e":"code","13946349":"code","282a3b7c":"code","19663c40":"code","919b0bbe":"markdown"},"source":{"ad21d436":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","7ae5ebf0":"df=pd.read_csv(\"..\/input\/diabetes\/diabetes.csv\")","bdc8db9a":"pd.set_option(\"max_columns\",300)\ndf","8d75a0e5":"df.info()","0f4f4bd5":"for i in df.columns:\n    plt.scatter(df[\"Outcome\"],df[i])\n    plt.title(i)\n    plt.show()","fc55a518":"sns.pairplot(df)","54ba6144":"df[df[\"SkinThickness\"]==0]","d513439c":"df[\"SkinThickness\"].mean()","b643fc3b":"df[\"Insulin\"].mean()","555495e1":"df.corr()","2f819f54":"plt.plot(df[\"Age\"],df[\"Pregnancies\"],\"d\")","58ecf810":"for i in df.columns:\n    sns.distplot(df[i])\n    plt.title(i)\n    plt.show()","c1b2e617":"for i in df.columns:\n    sns.stripplot(df[\"Outcome\"],df[i],jitter=True)\n    plt.title(i)\n    plt.show()","47a44a74":"# replacing zero values with the mean of the column\ndf['BMI'] = df['BMI'].replace(0,df['BMI'].mean())\ndf['BloodPressure'] = df['BloodPressure'].replace(0,df['BloodPressure'].mean())\ndf['Glucose'] = df['Glucose'].replace(0,df['Glucose'].mean())\ndf['Insulin'] = df['Insulin'].replace(0,df['Insulin'].mean())\ndf['SkinThickness'] = df['SkinThickness'].replace(0,df['SkinThickness'].mean())","62c82162":"for i in df.columns:\n    sns.distplot(df[i])\n    plt.title(i)\n    plt.show()","27bb2615":"x=df.iloc[:,:8]\ny=df[\"Outcome\"]\nx,y","26bbf3ef":"from sklearn.preprocessing import StandardScaler \nscalar = StandardScaler()\nX_scaled = scalar.fit_transform(x)","5dd0083d":"X_scaled","f06aa9d3":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size= 0.50, random_state = 355)","172e18c8":"x_train","583d6bb5":"y_train","307f2dce":"from sklearn.linear_model  import LogisticRegression\nlog=LogisticRegression()\nlog.fit(x_train,y_train)","a8035e16":"y_pred = log.predict(x_test)\ny_pred","dc9e0940":"y_prob=log.predict_proba(x_test)\ny_prob=y_prob[:,1]","454d7ccb":"from sklearn.metrics import confusion_matrix , classification_report","dbf89601":"print(classification_report(y_test,y_pred))","737226ba":"con_mat=confusion_matrix(y_test,y_pred)\ncon_mat","71a3fb1e":"true_positive = con_mat[0][0]\nfalse_positive = con_mat[0][1]\nfalse_negative = con_mat[1][0]\ntrue_negative = con_mat[1][1]","13946349":"recall=true_positive\/(true_positive+false_negative)\nrecall","282a3b7c":"precision=true_positive\/(true_positive+false_positive)\nprecision","19663c40":"f1_score=2*recall*precision\/(recall+precision)\nf1_score","919b0bbe":"The result is depend on thresold value which is normally be 0.5 , if we will change the thresold value then result may be \ndiffer from the current one."}}