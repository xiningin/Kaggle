{"cell_type":{"a24144df":"code","4a5dfdc6":"code","13ca211a":"code","ab8f27a5":"code","b1bd3c90":"code","7fae37ec":"code","57de69cd":"code","c171cf31":"code","74dc4f09":"code","a3c11e0f":"code","e62d4ed3":"code","936a0ba3":"code","f7407dbf":"code","756c4a48":"code","ae5943ca":"code","fa228e22":"code","ec7863d5":"code","9182da6d":"code","5155e79c":"code","11592ab5":"code","0482510e":"code","ca481235":"code","8fc1c228":"code","2f92855c":"code","95ed318d":"code","687cf137":"code","195e2ecf":"code","cdbab6ad":"code","34a25ed9":"code","b85974df":"code","18e73b86":"code","1d94884a":"code","b0dd22bf":"code","7c5d2cae":"code","1659dd73":"code","528fb3a1":"markdown","31425b03":"markdown","5c4b8590":"markdown","06cdf812":"markdown","efbcdc46":"markdown","ae013d30":"markdown","319a86e7":"markdown","4bbeaf3d":"markdown","fa41237f":"markdown","cf2721cb":"markdown","7a10a1fe":"markdown","a055385a":"markdown","6530b389":"markdown","34034a3d":"markdown","ce799499":"markdown","32f04e4f":"markdown","d01c98a0":"markdown","3a1f1fb8":"markdown","a7e4a8d9":"markdown"},"source":{"a24144df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4a5dfdc6":"df15=pd.read_csv(\"..\/input\/2015.csv\")\ndf16=pd.read_csv(\"..\/input\/2016.csv\")\ndf17=pd.read_csv(\"..\/input\/2017.csv\")","13ca211a":"#Drop columns which are not required\n\nto_drop= ['Standard Error']\ndf15.drop(to_drop, axis=1,inplace=True)\n","ab8f27a5":"to_drop= ['Lower Confidence Interval','Upper Confidence Interval']\ndf16.drop(to_drop, axis=1,inplace=True)\n","b1bd3c90":"\nto_drop= ['Whisker.high','Whisker.low']\ndf17.drop(to_drop, axis=1,inplace=True)\n","7fae37ec":"# Renaming 2017 data to align with 2015,2016 data\nnew_names={'Happiness.Rank':'Happiness Rank' ,'Happiness.Score':'Happiness Score','Economy..GDP.per.Capita.':'Economy (GDP per Capita)','Health..Life.Expectancy.':'Health (Life Expectancy)','Trust..Government.Corruption.':'Trust (Government Corruption)','Dystopia.Residual':'Dystopia Residual'}\ndf17.rename(columns=new_names,inplace=True)","57de69cd":"\ndfs_3year= df15.merge(df16, suffixes=(\"2015\",\"2016\"), on='Country', how=\"outer\").merge(df17, suffixes=(\"\",\"2017\"), on='Country', how=\"outer\")\n","c171cf31":"\ndfs=dfs_3year[['Country','Happiness Rank2015','Happiness Score2015','Happiness Rank2016','Happiness Score2016','Happiness Rank','Happiness Score']]","74dc4f09":"dfs= dfs.rename(columns={'Happiness Rank': 'Happiness Rank2017','Happiness Score':'Happiness Score2017'})","a3c11e0f":"#Checking if any null values in the columns\ndfs.loc[dfs.isnull().any(axis=1)]","e62d4ed3":"#Dropping the rows with Nan values\ndfs.dropna(inplace=True)\n\n# Validating it\ndfs.loc[dfs.isnull().any(axis=1)]","936a0ba3":"dfs.head()","f7407dbf":"#happiness trend for first 10 countries\nimport matplotlib.pyplot as plt\n\nfactors=dfs[['Happiness Score2015','Happiness Score2016','Happiness Score2017']]\nax=factors.iloc[0:10].plot(kind='bar',fontsize=10,legend=True, figsize=(15,8))\nax.set_ylabel(\"Happiness Score\",fontsize= 10)\nax.set_xlabel(\"Country\", fontsize=10)\nax.set_xticklabels(labels= dfs['Country'].iloc[0:10])\nplt.show()\n","756c4a48":"#happiness trend for last 10 countries\n\nfactors=dfs[['Happiness Score2015','Happiness Score2016','Happiness Score2017']]\nax=factors.iloc[136:147].plot(kind='bar',fontsize=10,legend=True, figsize=(15,8))\nax.set_ylabel(\"Happiness Score\",fontsize= 10)\nax.set_xlabel(\"Country\", fontsize=10)\nax.set_xticklabels(labels= dfs['Country'].iloc[136:147])\nplt.show()","ae5943ca":"\ndef changeinhappiness(y,x):\n    return ((y-x)\/x)*100\n\n\ndfs['ChangeinHappiness(2015-2017)%']= dfs.apply(lambda row: changeinhappiness(row['Happiness Score2017'],row['Happiness Score2015']),axis=1)\n","fa228e22":"dfs.head()","ec7863d5":"# Sorting Happiness percentage change in decending order\ndfs= dfs.sort_values(by='ChangeinHappiness(2015-2017)%', ascending=False)","9182da6d":"dfs.head()","5155e79c":"#Plotting changeinHappiness wrt Country\nimport matplotlib.pyplot as plt\n\nfactors= dfs[['ChangeinHappiness(2015-2017)%']]\nax=(factors).plot(kind='barh',stacked= True,figsize=(20,45), fontsize=15,)\nax.set_ylabel(\"Country\",fontsize= 15)\nax.set_xlabel(\"Change in Happiness Score%\", fontsize=15)\nax.set_yticklabels(labels= dfs['Country'])\nax.xaxis.set_ticks_position('both')\nax.set_title(\"Change in Happiness 2015-2017 %\", fontsize=15)\nax.legend(fontsize= 15)\nplt.gca().invert_yaxis()\nplt.show()","11592ab5":"dfs_3year.head()","0482510e":"dfs_togo=dfs_3year.loc[dfs_3year['Country'] == 'Togo']\ndfs_venezuela=dfs_3year.loc[dfs_3year['Country'] == 'Venezuela']","ca481235":"\n#Happiness Independent factors comparison for year 2015, 2017 for Togo and Venezuela\n\nfactors2015= ['Economy (GDP per Capita)2015','Family2015','Health (Life Expectancy)2015','Freedom2015','Generosity2015','Trust (Government Corruption)2015','Dystopia Residual2015']\nfactors2017= ['Economy (GDP per Capita)','Family','Health (Life Expectancy)','Freedom','Generosity','Trust (Government Corruption)','Dystopia Residual']\n\ndef plot_compare(country):\n    title=''.join(country['Country'].values)\n   \n    y=country[factors2015].values.ravel()\n    x= country[factors2015].columns\n    y2=country[factors2017].values.ravel()\n    labels=['Economy','Family','Health','Freedom','Generosity','Trust','Dystopia Residual']\n\n    plt.figure(figsize=(15,8))\n    plt.scatter(x,y, label='2015')\n    plt.scatter(x,y2, label='2017')\n    plt.vlines(x,y,y2)\n    plt.title(\"Comparison of the 2015 and 2017 independent factors\")\n    plt.xticks(x,labels, rotation= 'vertical')\n    plt.xlabel(title, fontsize='10')\n    plt.legend(fontsize= '10')\n    plt.show()\n    \n    \n\nplot_compare(dfs_togo)\nplot_compare(dfs_venezuela)","8fc1c228":"#Plotting 2017 Happiness Score wrt independent factors\nimport matplotlib.pyplot as plt\n\nfactors= df17[['Economy (GDP per Capita)','Family','Health (Life Expectancy)','Freedom','Generosity','Trust (Government Corruption)','Dystopia Residual']]\nax=factors.plot(kind='barh',stacked= True,figsize=(20,45), fontsize=15,)\nax.set_ylabel(\"Country\",fontsize= 15)\nax.set_xlabel(\"Happiness Score\", fontsize=15)\nax.set_yticklabels(df17['Country'])\nax.xaxis.set_ticks_position('both')\nax.set_title(\"Country Happiness Score 2017\", fontsize=15)\nax.legend(fontsize= 15)\nplt.gca().invert_yaxis()\nplt.show()","2f92855c":"# function to plot the graphs between happiness score and each factor for year 2017\n\nimport matplotlib.pyplot as plt\n\ndef happiness_factor_chart(x):\n    if isinstance(x,str):\n        \n        X=df17[x].values\n        y=df17['Happiness Score'].values\n\n        fig, ax= plt.subplots()\n\n        ax.scatter(X,y)\n        ax.set_xlabel(x)\n        ax.set_ylabel('Happiness Score')\n        \n        plt.show()\n    else:\n        return \"x not str\"","95ed318d":"factors= [\"Economy (GDP per Capita)\",'Family','Health (Life Expectancy)','Freedom','Trust (Government Corruption)']\nfor i in factors:\n    happiness_factor_chart(i)\n    \n","687cf137":"# Checking for missing values in data\ndf17.isnull().values.any()","195e2ecf":"#Checking the correlation between factors\ndf17_corr=df17.corr()\ndf17_corr.style.background_gradient(cmap='Blues').set_precision('3')","cdbab6ad":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\nfeature_col_names=[\"Economy (GDP per Capita)\",'Family','Health (Life Expectancy)','Freedom','Trust (Government Corruption)','Generosity','Dystopia Residual']\nscore=['Happiness Score']\n\nX = df17[feature_col_names].values\ny =df17[score].values\nsplit_size=0.3\n\nX_train, X_test,y_train,y_test= train_test_split(X,y ,test_size=split_size)\n\n#training\nmlregr=linear_model.LinearRegression()\nmlregr.fit(X_train,y_train)\n","34a25ed9":"#predicting\ny_pred= mlregr.predict(X_test)","b85974df":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nprint(\"Coefficients: \", mlregr.coef_)\nprint(\"Intercepts:  \" , mlregr.intercept_)\nprint(\"Mean squared error: %.2f\"\n      % mean_squared_error(y_test,y_pred))\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(y_test,y_pred))\n#for i in range(len(y_test)):\n   \n  #  print (\"Actual:\" ,y_test[i] ,\" Predicted with linear regression:\" ,y_pred[i])","18e73b86":"#Plotting Predicted vs Actual Happiness Score\nplt.scatter(y_test,y_test)\nplt.plot(y_test,y_pred,linewidth=1)\nplt.xlabel(\"Actual\")\nplt.ylabel(\"Predicted\")\nplt.show()\n","1d94884a":"from sklearn import svm\n\nsvr= svm.SVR(gamma='scale')\nsvr.fit(X,y.ravel())\n","b0dd22bf":"y_pred_svr=svr.predict(X_test)","7c5d2cae":"print(\"Mean squared error: %.2f\"\n      % mean_squared_error(y_test,y_pred_svr))\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(y_test,y_pred_svr))","1659dd73":"#Plotting Predicted vs Actual Happiness Score\n\nplt.scatter(y_test,y_test)\nplt.plot(y_test,y_pred_svr)\nplt.xlabel(\"Actual\")\nplt.ylabel(\"Predicted\")\nplt.show()\n","528fb3a1":"Accuracy is less for the SVR model","31425b03":"Finding the factors which affecting the increase\/decrease in happiness score of the Togo and Venezuela","5c4b8590":"**Happiness 2017 prediction**  ","06cdf812":"Let's calculate the percentage change in happiness from 2015 to 2017","efbcdc46":"Plots show a linear relationship between Happiness Score and Independent factors.","ae013d30":" **Multiple Linear Regression**","319a86e7":"**Plotting Happiness trend  in 3 years**","4bbeaf3d":"**Happiness 2017 Analysis**\n\n","fa41237f":"    Multiple Linear Regression model gives us accurate predictions.","cf2721cb":"Togo -- Shows Max increase in happiness score   \nVenezuela -- shows Max drop in Happiness Score","7a10a1fe":"**SVR**","a055385a":"How much each factor affects happiness","6530b389":"Here Togo shows a significant increase in happiness score ","34034a3d":"Happiness Score is highly correlated to Economy, Family and Health. Freedom, Trust and Dystopia are the medium correlated factors and Generosity being the least.","ce799499":"There's not much change in the Happiness level for first 10 countries","32f04e4f":"We can see the Economy, Family are the biggest factors for country Togo\nand Health, Freedom for Venezuela. Dystopia Residual is considered as a benchmark against which the country's happiness is evaluated.","d01c98a0":"This model is a perfect fit for the data","3a1f1fb8":"Join all the three dataframes on Country key\n\n","a7e4a8d9":"Load data in dataframes\n\nData: \n**Country** Name of the country.\n**Region**  Region the country belongs to.\n**Happiness Rank** Rank of the country based on the Happiness Score.\n**Happiness Score**  A metric measured in 2015 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n**Standard Error**The standard error of the happiness score.\n**Economy (GDP per Capita)** The extent to which GDP contributes to the calculation of the Happiness Score.\n**Family** The extent to which Family contributes to the calculation of the Happiness Score\n**Health (Life Expectancy) **  The extent to which Life expectancy contributed to the calculation of the Happiness Score\nFreedom The extent to which Freedom contributed to the calculation of the Happiness Score.\n**Trust (Government Corruption)** The extent to which Perception of Corruption contributes to Happiness Score.\n**Generosity**   The extent to which Generosity contributed to the calculation of the Happiness Score.\n**Dystopia Residual **  The extent to which Dystopia Residual contributed to the calculation of the Happiness Score."}}