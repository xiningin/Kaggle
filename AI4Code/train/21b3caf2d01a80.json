{"cell_type":{"afe027c6":"code","b601cd58":"code","d1a98a1f":"code","c36e94e3":"code","09557f86":"code","8c3c653b":"code","cc01055d":"code","3dbf4517":"code","2d2ce0d3":"code","c9d9b89d":"code","36af07a5":"code","ca68c26a":"code","935cd2eb":"markdown","f51fc70d":"markdown","10457943":"markdown","a0869352":"markdown","597c39cb":"markdown","5bec679e":"markdown","a8a5ff9c":"markdown","250c18c8":"markdown"},"source":{"afe027c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nprint(os.listdir(\"..\/input\/10-monkey-species\"))\n\n# Any results you write to the current directory are saved as output.","b601cd58":"train_dir = '..\/input\/10-monkey-species\/training\/training\/'\nval_dir = '..\/input\/10-monkey-species\/validation\/validation\/'\nlabels = pd.read_csv(\"..\/input\/10-monkey-species\/monkey_labels.txt\")\nnum_classes = labels['Label'].size\nlabels","d1a98a1f":"\n\n#Fit the model using Data Augemnetation, will improve accuracy of the model\nfrom tensorflow.python.keras.applications.inception_v3 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\ndata_generator_with_aug = ImageDataGenerator(preprocessing_function=preprocess_input,\n                                              horizontal_flip = True,\n                                              \n                                              rotation_range=20,\n                                              width_shift_range = 0.2,\n                                              height_shift_range = 0.2)\n            \ndata_generator_no_aug = ImageDataGenerator(preprocessing_function=preprocess_input)\n\n","c36e94e3":"from tensorflow.python.keras.applications import InceptionV3\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Flatten, GlobalAveragePooling2D\n\nnum_clasees =10\n\nmodel = Sequential()\nmodel.add(InceptionV3(include_top=False, \n                      pooling='avg', \n                      weights='..\/input\/inceptionv3\/inception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5'\n                     ))\nmodel.add(Dense(num_clasees, activation=\"softmax\"))\n\n# do not need to train the pre train layer\nmodel.layers[0].trainable=False","09557f86":"model.layers","8c3c653b":"model.summary()","cc01055d":"\nmodel.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","3dbf4517":"image_size =512\n\ntrain_generator = data_generator_with_aug.flow_from_directory(\n       directory = train_dir,\n       target_size=(image_size, image_size),\n       batch_size=24,\n       class_mode='categorical')\n\nvalidation_generator = data_generator_no_aug.flow_from_directory(\n       directory = val_dir,\n       target_size=(image_size, image_size),\n       class_mode='categorical')","2d2ce0d3":"model_history = model.fit_generator(\n        train_generator,\n        steps_per_epoch=46,\n        epochs=32,\n        validation_data=validation_generator,\n        validation_steps=1)","c9d9b89d":"model.save('incept_ez.h5')  # creates a HDF5 file 'my_model.h5'\n","36af07a5":"import pandas as pd\nhistory = pd.DataFrame()\nhistory[\"acc\"] = model_history.history[\"acc\"]\nhistory[\"val_acc\"] = model_history.history[\"val_acc\"]\nhistory.plot(figsize=(12, 6))","ca68c26a":"acc = model_history.history['acc']\nval_acc = model_history.history['val_acc']\nloss = model_history.history['loss']\nval_loss = model_history.history['val_loss']\nepochs = range(1, len(acc) + 1)\n\nimport matplotlib.pyplot as plt\n\nplt.title('Training and validation accuracy')\nplt.plot(epochs, acc, 'red', label='Training acc')\nplt.plot(epochs, val_acc, 'blue', label='Validation acc')\nplt.legend()\n\nplt.figure()\nplt.title('Training and validation loss')\nplt.plot(epochs, loss, 'red', label='Training loss')\nplt.plot(epochs, val_loss, 'blue', label='Validation loss')\n\nplt.legend()\n\nplt.show()","935cd2eb":"## Data Processing\n### Prepare Data\nload the data","f51fc70d":"### Model Compile","10457943":"## Save Model","a0869352":"### Model Fit\n","597c39cb":"# An Awesome Monkeys Classificator (Deep Learning)\n- transfer learning + inception v3","5bec679e":"## Set up Model\n","a8a5ff9c":"### Data Augmentation\n\n- flip\n- width_shift\n- height_shift\n","250c18c8":"## Thanks and Credits\n\n- Dan Becker https:\/\/www.kaggle.com\/learn\n- Juan https:\/\/www.kaggle.com\/moriano\/monkey-species-transfer-learning-95-6-accuracy\n- Dan Rusei https:\/\/www.kaggle.com\/danrusei\/10-monkey-keras-transfer-learning-resnet50\n"}}