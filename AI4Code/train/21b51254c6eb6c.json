{"cell_type":{"abe67725":"code","bc18c59f":"code","73fb213d":"code","dd0659e5":"code","6aaac170":"code","1bcbe7f4":"code","5cc90509":"code","f6174bfd":"code","8a143608":"code","388c28ad":"markdown","49eda257":"markdown","7c3fcb76":"markdown","0aab3f16":"markdown","305f099b":"markdown","3639a139":"markdown"},"source":{"abe67725":"!mkdir .\/source-frames","bc18c59f":"import matplotlib.pyplot as plt\nfrom PIL import Image\nimport cv2\nimport numpy as np\n\nsource = '\/kaggle\/input\/ldv1960\/LaDolceVita.mp4'\ntarget_path =\".\/source-frames\/\"\n\nvidcap = cv2.VideoCapture(source)\nfps = vidcap.get(cv2.CAP_PROP_FPS)\nprint (f\"Frames per second: {fps}\")\ncodec = vidcap.get(cv2.CAP_PROP_FOURCC);\nprint (f\"codec: {codec}\")\n\nsuccess,image = vidcap.read()\nimage = image[150:550,:,:]\ncount = 0\nj=0\nwhile success:\n    frame = f\"frame{count:05d}.jpg\"\n    cv2.imwrite(target_path + frame, image)     # save frame as JPEG file      \n    success,image = vidcap.read()\n    if success:\n        image = image[150:550,:,:]\n\n        if count % 250 == 0:\n            if j==0:\n                fig = plt.figure(figsize= (20, 5))\n                axes = fig.subplots(nrows=1, ncols=4)\n\n            axes[j].imshow(image)\n            axes[j].title.set_text(frame)\n            j =(j +1) % 4\n            if j==0:\n                plt.show()\n    count += 1\nprint(f\"# frames:{count}\")","73fb213d":"!git clone --branch inference-tf-2.x https:\/\/github.com\/steubk\/White-box-Cartoonization.git\n!pip install --upgrade tf_slim","dd0659e5":"import sys\nsys.path.append('.\/White-box-Cartoonization\/test_code')\n\nimport cartoonize\nimport os","6aaac170":"model_path = '.\/White-box-Cartoonization\/test_code\/saved_models'\nload_folder = \".\/source-frames\"\nsave_folder = '.\/cartoonized_images'\nif not os.path.exists(save_folder):\n    os.mkdir(save_folder)\n    \ncartoonize.cartoonize(load_folder, save_folder, model_path)","1bcbe7f4":"name_list = sorted(os.listdir(save_folder))\n\nfor i,name in enumerate(name_list):\n  \n  if i % 250 == 0 and i > 0: \n    fig = plt.figure(figsize= (30, 15))\n    axes = fig.subplots(nrows=1, ncols=2)\n\n    image = load_folder + \"\/\" + name\n    cartoon = save_folder + \"\/\" + name\n    im = Image.open(image) \n    im_array = np.asarray(im)\n    axes[0].imshow(im_array)\n\n    im = Image.open(cartoon) \n    im_array = np.asarray(im)\n    axes[1].imshow(im_array)\n    plt.show()","5cc90509":"!ffmpeg -y -framerate 30  -i .\/cartoonized_images\/frame%5d.jpg  output.mp4","f6174bfd":"from IPython.display import Video\n\nVideo(\"output.mp4\", embed=True)","8a143608":"!rm .\/source-frames\/*.jpg\n!rm .\/cartoonized_images\/*.jpg\n!rm .\/White-box-Cartoonization\/test_code\/test_images\/*.jpg","388c28ad":"## Generate frames for output (Inference)","49eda257":"A quick demo of the impressive Tensorflow implementation for CVPR2020 paper \u201cLearning to Cartoonize Using White-box Cartoon Representations\u201d.\n\n[CVPR2020 Learning to Cartoonize Using White-box Cartoon Representations](https:\/\/github.com\/SystemErrorWang\/White-box-Cartoonization)\n\n![](https:\/\/raw.githubusercontent.com\/SystemErrorWang\/White-box-Cartoonization\/master\/images\/method.jpg)\n","7c3fcb76":"## Capture frames from source","0aab3f16":"I made some minor changes to test_code modules to run inference on tensorflow 2.0","305f099b":"## Create Video","3639a139":"In this demo I applied the model for image cartoonization proposed by Xinrui Wang and Jinze Yu, to the famous [clip with Anita Ekberg and Marcello Mastroianni](https:\/\/www.youtube.com\/watch?v=KkyDfGi-PdM) from the movie \"La Dolce Vita\" (1960) by Fellini, 60 years after its release.\n\n\nThe model by Xinrui Wang and Jinze Yu was pretrained with scenery images  collected from Shinkai Makoto, Miyazaki Hayao and Hosoda Mamoru films and portrait images from Kyoto animations and PA Works\n"}}