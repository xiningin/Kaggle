{"cell_type":{"92c188eb":"code","e7a74938":"code","5735be87":"code","b819443b":"code","d6834d40":"markdown","7abf2dd5":"markdown","47d60529":"markdown","ad45b4bb":"markdown"},"source":{"92c188eb":"import pandas as pd\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn import metrics \n\ndf_female = pd.read_csv(\"..\/input\/ansur-ii\/ANSUR II FEMALE Public.csv\", \n                               encoding='latin-1') \ndf_male = pd.read_csv(\"..\/input\/ansur-ii\/ANSUR II MALE Public.csv\",\n                             encoding='latin-1') \ndf_female = df_female.rename(\n                columns = {\"SubjectId\":\"subjectid\"}) # Fixing a column name\ndf_all = pd.concat([df_female,df_male])","e7a74938":"# Collect only the required data for training\nX = df_all[df_all.columns[1:94]]\nX.insert(93, \"Heightin\", df_all['Heightin'], True)\nX.insert(94, \"Weightlbs\", df_all['Weightlbs'], True)\n\nY = df_all['Gender']\n\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=1) # 80% training and 20% test","5735be87":"clf = DecisionTreeClassifier(criterion=\"entropy\")\n\n# Train Decision Tree Classifer\nclf = clf.fit(X_train,y_train)\n\n#Predict the gender for test dataset\ny_pred = clf.predict(X_test)","b819443b":"print(\"Accuracy:\", metrics.accuracy_score(y_test, y_pred))","d6834d40":"From the combined dataset, only the anthropometric measurements (excluding Date, BirthLocation, Ethnicity) is used for training. We remove 20% of the data and use this for testing","7abf2dd5":"# **Gender Prediction using Simple Decision Tree Classifier**\n\nUsing only anthropometric measurements, the decision tree classifier predicts the gender of non existing members of the data\n","47d60529":"**Reading the data**\n\nCombine the male and female data for training and testing","ad45b4bb":"Train the data using the decision tree classifier with the training sample "}}