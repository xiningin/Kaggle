{"cell_type":{"15c9cc2a":"code","1c38834c":"code","48ea0c45":"code","9da3908b":"code","adf9d62e":"code","b01abcbe":"code","b168f5f9":"code","9d4f8525":"code","92ca703f":"code","99b8bc4f":"code","a24348af":"code","0f448b33":"code","b4b11d09":"code","3fadca08":"code","d2c8b094":"code","4f2969e0":"code","42a511f3":"code","4e8352a6":"code","21db47be":"code","3ab8a796":"markdown","331b0b6b":"markdown","999f102c":"markdown","1bae08a8":"markdown","0c4cd44f":"markdown","4c0574d0":"markdown","3b5bda8f":"markdown","5d6a14dc":"markdown","434e3b4c":"markdown","e003d272":"markdown","1e635b9d":"markdown","cfb25c87":"markdown","0be95cc0":"markdown"},"source":{"15c9cc2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c38834c":"import glob\nimport cv2\nfrom PIL import Image\nimport matplotlib.pyplot as plt \nfrom tqdm import tqdm, tqdm_notebook\nimport gc\nimport seaborn as sns\nsns.set_style(\"dark\")","48ea0c45":"#Image data\nimport os\nimage_train_dir = '..\/input\/siim-isic-melanoma-classification\/jpeg\/train'\nlisttrain = os.listdir(image_train_dir) # dir is your directory path\nnumber_files_train = len(listtrain)\nprint('Number of images in Train dataset:',number_files_train)\n\nimage_test_dir = '..\/input\/siim-isic-melanoma-classification\/jpeg\/test'\nlisttest = os.listdir(image_test_dir) # dir is your directory path\nnumber_files_test = len(listtest)\nprint('Number of images in Test dataset:',number_files_test)","9da3908b":"train_df = pd.read_csv('\/kaggle\/input\/siim-isic-melanoma-classification\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/siim-isic-melanoma-classification\/test.csv')","adf9d62e":"img_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/*.jpg')\n\nfig, ax = plt.subplots(4, 4, figsize=(20, 20))\n\nfor i in range(16):\n    x = i \/\/ 4\n    y = i % 4\n    \n    path = img_names[i]\n    image_id = path.split(\"\/\")[5][:-4]\n    \n    target = train_df.loc[train_df['image_name'] == image_id, 'target'].tolist()[0]\n    \n    img = Image.open(path)\n    \n    ax[x, y].imshow(img)\n    ax[x, y].axis('off')\n    ax[x, y].set_title(f'ID: {image_id}, Target: {target}')\n\nfig.suptitle(\"Training set samples\", fontsize=15)","b01abcbe":"path_train = '..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/'\n\n\ntrain_df_malignent = train_df[train_df['benign_malignant'] == 'malignant']\ntrain_df_benign = train_df[train_df['benign_malignant'] == 'benign']\n","b168f5f9":"fig, ax = plt.subplots(4, 4, figsize=(20, 20))\n\nfor i in range(16):\n    x = i \/\/ 4\n    y = i % 4\n    image_id = train_df_benign.iloc[i,0]\n    path = path_train + image_id + '.jpg'\n    image_id = path.split(\"\/\")[5][:-4]\n    \n    \n    img = Image.open(path)\n    \n    ax[x, y].imshow(img)\n    ax[x, y].axis('off')\n    ax[x, y].set_title(f'ID: {image_id}')\n\nfig.suptitle(\"Benign samples\", fontsize=15)","9d4f8525":"fig, ax = plt.subplots(4, 4, figsize=(20, 20))\n\nfor i in range(16):\n    x = i \/\/ 4\n    y = i % 4\n    image_id = train_df_malignent.iloc[i,0]\n    path = path_train + image_id + '.jpg'\n    image_id = path.split(\"\/\")[5][:-4]\n    \n    \n    img = Image.open(path)\n    \n    ax[x, y].imshow(img)\n    ax[x, y].axis('off')\n    ax[x, y].set_title(f'ID: {image_id}')\n\nfig.suptitle(\"Malignent samples\", fontsize=15)","92ca703f":"\nimage_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/*.jpg')\nsize_array_train = []\n\nfor image_name in tqdm(image_names):\n    path = image_name\n    img = Image.open(path)\n    temp = img.size\n    size_array_train.append(temp)\n    \nlen(size_array_train)","99b8bc4f":"image_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/test\/*.jpg')\nsize_array_test = []\n\nfor image_name in tqdm(image_names):\n    path = image_name\n    img = Image.open(path)\n    temp = img.size\n    size_array_test.append(temp)\n    \nlen(size_array_test)","a24348af":"size_df_train = pd.DataFrame(np.row_stack(size_array_train))\nsize_df_train.describe()","0f448b33":"size_df_test = pd.DataFrame(np.row_stack(size_array_test))\nsize_df_test.describe()","b4b11d09":"fig, ax = plt.subplots(1, 2, figsize=(10, 5))\n\ng1 = sns.distplot(size_df_train[0], ax=ax[0])\nax[0].set_title(\"training set\")\n\ng2 = sns.distplot(size_df_test[0], ax=ax[1])\nax[1].set_title(\"test set\")\n\n# g1.set_xticklabels(g1.get_xticklabels(), rotation=45)\n# g2.set_xticklabels(g2.get_xticklabels(), rotation=45)\nplt.show()","3fadca08":"fig, ax = plt.subplots(1, 2, figsize=(10, 5))\n\ng1 = sns.distplot(size_df_train[1], ax=ax[0])\nax[0].set_title(\"training set\")\n\ng2 = sns.distplot(size_df_test[1], ax=ax[1])\nax[1].set_title(\"test set\")\n\n# g1.set_xticklabels(g1.get_xticklabels(), rotation=45)\n# g2.set_xticklabels(g2.get_xticklabels(), rotation=45)\nplt.show()","d2c8b094":"train_df_malignent.head(5)","4f2969e0":"image_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/*.jpg')\nsize_array_train = []\ni = 0\n\nfor image_name in tqdm(image_names):\n    temp = image_name.split('\/')\n    temp1 = temp[-1]\n    temp2 = temp1.split('.')\n#     print(temp2[0])\n    if(train_df_benign['image_name'].str.contains(temp2[0]).any()):\n        print(temp2)\n    print(temp2[0])\n    i = i + 1\n    if(i == 4):\n        break","42a511f3":"image_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/*.jpg')\nsize_array_train = []\ni = 0\n\nfor image_name in tqdm(image_names):\n    temp = image_name.split('\/')\n    temp1 = temp[-1]\n    temp2 = temp1.split('.')\n#     print(temp2[0])\n    if(train_df_benign['image_name'].str.contains(temp2[0]).any()):\n        print(temp2)\n    print(temp2[0])\n    i = i + 1\n    if(i == 4):\n        break","4e8352a6":"\nimage_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/*.jpg')\nsize_array_train_benign = []\n\nfor image_name in tqdm(image_names):\n    path = image_name\n    temp = image_name.split('\/')\n    temp1 = temp[-1]\n    temp2 = temp1.split('.')\n    if(train_df_benign['image_name'].str.contains(temp2[0]).any()):\n        img = Image.open(path)\n        temp = img.size\n        size_array_train_benign.append(temp)\n    \nlen(size_array_train_benign)","21db47be":"\nimage_names = glob.glob('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/*.jpg')\nsize_array_train_malignent = []\n\nfor image_name in tqdm(image_names):\n    path = image_name\n    temp = image_name.split('\/')\n    temp1 = temp[-1]\n    temp2 = temp1.split('.')\n    if(train_df_malignent['image_name'].str.contains(temp2[0]).any()):\n        img = Image.open(path)\n        temp = img.size\n        size_array_train_malignent.append(temp)\n    \nlen(size_array_train_malignent)","3ab8a796":"*Lets see if the image sizes are similar across the different classes of data*","331b0b6b":"**Distribution of height and width of the Training and Testing data looks same**","999f102c":"# Now, we will look at Malignent and Benign cases separately within the training images","1bae08a8":"Just by looking at some of these above images, it looks in like Benign cases the contrast between the background and the dark patches is less compared to Malignent cases. Also, the patch area is relatively larger in cases of Malignent compared to benign (we need to keep in mind that the images may have different zoom level, hence we cannot draw any conclusion with patch size)","0c4cd44f":"What about test images","4c0574d0":"Displaying Benign images","3b5bda8f":"* Looks like the mean has shifted a bit from training to Testing\n* The mean and max are the same\n* The deviations in image sizes are large but the deviation is consistent for training and testing data","5d6a14dc":"**Let's look at the distribution of the image sizes**","434e3b4c":"# **Looking at some images in the Training dataset**","e003d272":"Loading the images in a stack to do a Pixel level exploration","1e635b9d":"Displaying Malignent images","cfb25c87":"Let's look at the Training images first","0be95cc0":"# Let's dive deeper into the images"}}