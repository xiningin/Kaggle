{"cell_type":{"590a44ae":"code","31015980":"code","e1b2a8a9":"code","771e25b2":"code","f627de6e":"code","a5031e59":"code","c7f03f58":"code","1cafdcb1":"code","5ca39cbb":"code","47f59190":"code","d85716e8":"code","7c6cf4c4":"code","a5d2cf5a":"code","8a9063f5":"code","e4f304cf":"code","bf160a09":"code","e9b271ad":"code","6c1524de":"code","7d79b087":"code","fb0975bd":"code","e1d714ec":"markdown","39c07774":"markdown","030fd46e":"markdown","74d68403":"markdown","b739560b":"markdown","3e188ff1":"markdown","d86cb346":"markdown","41fdd1e0":"markdown","2e539c02":"markdown","e6ba2261":"markdown"},"source":{"590a44ae":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import KFold\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression as LR\nfrom sklearn.tree import DecisionTreeRegressor as DG\nfrom sklearn.preprocessing import MinMaxScaler","31015980":"df_d=pd.read_csv('..\/input\/starbucksnutritionclean\/starbucks-menu-nutrition-drinks.csv')\ndf_d.rename({'Unnamed: 0':'item','Calories':'calorie','Fat (g)':\"fat\",'Carb. (g)':\"carb\",'Fiber (g)':\"fiber\",\n            'Protein':\"protein\",'Sodium':\"sodium\"\n            },axis=1,inplace=True)\ndf_f=pd.read_csv('..\/input\/starbucksnutritionclean\/starbucks-menu-nutrition-food.csv')\n\ndf_f.rename({'Unnamed: 0':'item','Calories':'calorie','Fat (g)':\"fat\",'Carb. (g)':\"carb\",'Fiber (g)':\"fiber\",\n            'Protein (g)':\"protein\",'Sodium':\"sodium\"\n            },axis=1,inplace=True)","e1b2a8a9":"df_f.sample(20)","771e25b2":"df_d.sample(20)","f627de6e":"df_d=df_d.replace({'-':np.nan})","a5031e59":"df_d=df_d.dropna(how='any')","c7f03f58":"df_d.shape","1cafdcb1":"df=df_f.append(df_d).reset_index().drop('index',axis=1)","5ca39cbb":"df.sample(10)","47f59190":"df.shape","d85716e8":"df.isna().sum()","7c6cf4c4":"df=df.drop(['sodium'],axis=1)","a5d2cf5a":"df.sample(5)","8a9063f5":"df.isna().sum()","e4f304cf":"df=df.astype({'calorie':'float64', 'fat':'float64', 'carb':'float64', 'fiber':'float64', 'protein':'float64'})","bf160a09":"df.describe()","e9b271ad":"fig=sns.PairGrid(df.drop('item',axis=1))\nfig.map_upper(sns.scatterplot)\nfig.map_lower(sns.kdeplot)\nfig.map_diag(sns.histplot)","6c1524de":"df.corr()","7d79b087":"kf=KFold(n_splits=5,random_state=72,shuffle=True)\nnorm=MinMaxScaler()\nX=df.drop(['item','calorie'],axis=1)\nY=df['calorie']\n# normalize\nnorm.fit(X)\nX=pd.DataFrame(norm.transform(X))\nscore=[]\ncoff=[]\n#  linear regression\nreg=LR()\n# DecisionTreeRegression\ndgr = DG()\n# find score for each train\/test split'\nfor train_in, test_in in kf.split(X):\n    dgr.fit(X.iloc[train_in],Y.iloc[train_in])\n    \n    reg.fit(X.iloc[train_in],Y.iloc[train_in])\n    coff.append(reg.coef_)\n    score_lr=reg.score(X.iloc[test_in],Y.iloc[test_in])\n    score_dt=dgr.score(X.iloc[test_in],Y.iloc[test_in])\n    score.append((score_lr,score_dt))\n\n\nscore_df=pd.DataFrame(score,columns=['score_lr','score_dt'])\nprint(score_df)\npd.DataFrame(np.array(coff),columns=['fat','carb','fiber','protein'],index=range(1,6))","fb0975bd":"score_df.mean()","e1d714ec":"# Starbucks Regression Analysis\n## Predicting calorie of food & drinks from other nutrition values","39c07774":"## Retained Data","030fd46e":"# Replace '-' with NaN for drinks dataset","74d68403":"# Change data type of features from object to float64 ","b739560b":"### Remove sodium column as it's null values are more than 30% of total instances","3e188ff1":"# Merge food+drink ","d86cb346":"# Pairplot for all features except 'item'","41fdd1e0":"# mean of R<sup>2<\/sup> cofficient from linear regression & tree regression","2e539c02":"# R<sup>2<\/sup> cofficient for 'calorie' prediction using linear regression & decision tree\n## K-fold cross validation.","e6ba2261":"### \"calorie\" is correlated with most of the features so a linear regression will work "}}