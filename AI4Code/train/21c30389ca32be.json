{"cell_type":{"ae7abf0f":"code","0ca9063b":"code","74913cf1":"code","541630cd":"code","1de234e9":"code","1cd21492":"code","bdcae31e":"code","fe81380b":"code","36a2050e":"code","91b5b501":"code","4bf48ee2":"code","64822b76":"code","d3f344a7":"markdown","71e9a016":"markdown","921539a6":"markdown","8334e1d1":"markdown","10404b60":"markdown","e06378ab":"markdown","9055c8e5":"markdown","8421f94a":"markdown","6866380f":"markdown","1625f501":"markdown","dba46a01":"markdown"},"source":{"ae7abf0f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ca9063b":"%matplotlib inline\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport sklearn.linear_model as linear_model\nimport seaborn as sns\nimport xgboost as xgb\nfrom sklearn.model_selection import KFold\nfrom IPython.display import HTML, display\nfrom sklearn.manifold import TSNE\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler","74913cf1":"pd.options.display.max_rows = 1000\npd.options.display.max_columns = 20\n\ndf_train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","541630cd":"df_train.head()","1de234e9":"#check the decoration\ndf_train.columns","1cd21492":"#descriptive statistics summary\ndf_train['SalePrice'].describe()","bdcae31e":"#histogram\nsns.distplot(df_train['SalePrice']);","fe81380b":"#skewness and kurtosis\nprint(\"Skewness: %f\" % df_train['SalePrice'].skew())\nprint(\"Kurtosis: %f\" % df_train['SalePrice'].kurt())","36a2050e":"#scatter plot grlivarea\/saleprice\nvar = 'GrLivArea'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","91b5b501":"#scatter plot totalbsmtsf\/saleprice\nvar = 'TotalBsmtSF'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","4bf48ee2":"#box plot overallqual\/saleprice\nvar = 'OverallQual'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);","64822b76":"var = 'YearBuilt'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(16, 8))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\nplt.xticks(rotation=90);","d3f344a7":"In summary\nStories aside, we can conclude that:\n\n'GrLivArea' and 'TotalBsmtSF' seem to be linearly related with 'SalePrice'. Both relationships are positive, which means that as one variable increases, the other also increases. In the case of 'TotalBsmtSF', we can see that the slope of the linear relationship is particularly high.\n'OverallQual' and 'YearBuilt' also seem to be related with 'SalePrice'. The relationship seems to be stronger in the case of 'OverallQual', where the box plot shows how sales prices increase with the overall quality.\nWe just analysed four variables, but there are many other that we should analyse. The trick here seems to be the choice of the right features (feature selection) and not the definition of complex relationships between them (feature engineering).","71e9a016":"Importing all the important libraries :","921539a6":"## First things first: analysing 'SalePrice'","8334e1d1":"'TotalBsmtSF' is also a great friend of 'SalePrice' but this seems a much more emotional relationship! Everything is ok and suddenly, in a strong linear (exponential?) reaction, everything changes. Moreover, it's clear that sometimes 'TotalBsmtSF' closes in itself and gives zero credit to 'SalePrice'.","10404b60":"Despite the strange names I gave to the chapters, what we are doing in this kernel is something like:\n\n~ Understand the problem. We'll look at each variable and do a philosophical analysis about their meaning and importance for this problem.\\\n~ Univariable study. We'll just focus on the dependent variable ('SalePrice') and try to know a little bit more about it.\\\n~ Multivariate study. We'll try to understand how the dependent variable and independent variables relate.\\\n~ Basic cleaning. We'll clean the dataset and handle the missing data, outliers and categorical variables.\\\n~ Test assumptions. We'll check if our data meets the assumptions required by most multivariate techniques.","e06378ab":"Great !!... It seems that your minimum price is much larger than Zero","9055c8e5":"'Ah! I see you that you use seaborn makeup when you're going out... That's so elegant! I also see that you:\n\nDeviate from the normal distribution.\nHave appreciable positive skewness.\nShow peakedness.\nThis is getting interesting! 'SalePrice', could you give me your body measures?'","8421f94a":"## Data Exploration with Python","6866380f":"Note: we don't know if 'SalePrice' is in constant prices. Constant prices try to remove the effect of inflation. If 'SalePrice' is not in constant prices, it should be, so than prices are comparable over the years.","1625f501":"Relationship with numerical variables","dba46a01":"Like all the pretty girls, 'SalePrice' enjoys 'OverallQual'. Note to self: consider whether McDonald's is suitable for the first date."}}