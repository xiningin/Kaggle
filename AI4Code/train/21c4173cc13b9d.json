{"cell_type":{"cc4ba945":"code","374b5ff0":"code","6cb4a851":"code","184428c7":"code","19b6f84b":"code","54678488":"code","8cdf4b12":"code","4db61010":"code","5eb8bda8":"code","2ab8a62b":"code","e3011678":"markdown","b35cd74a":"markdown","ed00e0d6":"markdown","7b10d5dd":"markdown","d515e1b1":"markdown","ecda1164":"markdown","eee62bef":"markdown","c1de6dcd":"markdown","4d070c79":"markdown"},"source":{"cc4ba945":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","374b5ff0":"!pip install ctgan\n!pip install sdv","6cb4a851":"from sdv.tabular import CTGAN\nfrom sdv.evaluation import evaluate","184428c7":"train_df = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/train.csv')","19b6f84b":"train_df.drop(columns=['id'], inplace=True)\ntrain_df.info()","54678488":"import warnings\n\nwarnings.filterwarnings('ignore')","8cdf4b12":"batch_size = 5000\nepochs = 100\nmodel = CTGAN(batch_size=batch_size, epochs=epochs, verbose=True)\nmodel.fit(train_df)","4db61010":"model.save('ctgan_30daysofml_model.pkl')","5eb8bda8":"n_generated_data = 1000\ngenerated_df = model.sample(n_generated_data)","2ab8a62b":"score = evaluate(generated_df, train_df.sample(n_generated_data))\nscore","e3011678":"# Read Original Data\n\nCTAGN is generative neural network which will be trained on `train.csv`. ","b35cd74a":"Sample new data as follow:","ed00e0d6":"# Installing and Importing Packages\n\nFirst install following packages:\n1. [CTGAN](https:\/\/pypi.org\/project\/ctgan\/)\n2. [SDV](https:\/\/pypi.org\/project\/sdv\/)","7b10d5dd":"# Train GAN Model","d515e1b1":"Drop `id` column because it is not part of original data and is more like index.","ecda1164":"Meassure similarity of generated data and the original ones.","eee62bef":"Save your trained model to use later for generating new data.","c1de6dcd":"Now import required tools:","4d070c79":"Two important hyper-parameters are `batch_size` and `epoch`.\n\n*Notice that the value that you set on the `batch_size` argument must always be a multiple of 10!*\n\nsklearn will show a lot of annoying warnings so you can turn warnings off. (this is a known [issue](https:\/\/github.com\/sdv-dev\/SDV\/issues\/568))\n"}}