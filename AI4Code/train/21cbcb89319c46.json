{"cell_type":{"7713b6e8":"code","2ef868b0":"code","1acd2d82":"code","7b98a7ac":"code","0ca96fa3":"code","554a7c7b":"code","eda21008":"code","4451a7d4":"code","72374904":"code","66da3678":"code","685eb698":"code","1b39a438":"code","0ab4be9f":"code","15df890a":"code","54df89a1":"code","008ce342":"code","b8e54d5e":"code","e195db03":"code","9237a9cb":"code","928ff035":"code","14447a85":"code","fe569465":"code","8390c6b9":"code","c714cb93":"code","4d79eeec":"code","47ef91c0":"code","8481dc33":"code","79f70ef3":"code","d1ac6101":"code","7aaf7a7f":"code","90b3cfc5":"code","ff8afb3e":"code","b5689a79":"code","c972b0ae":"code","d622f09a":"code","a045eea8":"code","a6f7aca2":"code","a8dd41a3":"code","c879e9e1":"code","2a089f4c":"code","63252a37":"code","ab4f3a82":"code","fa316c77":"code","2ca1ee45":"code","17b022ea":"code","0d661293":"code","5e991a38":"code","0a479b6f":"code","84508283":"code","cc6b2fc4":"code","ce64b51c":"code","dbd60206":"code","5dc2a5c3":"code","9c556690":"markdown","e9d7d078":"markdown","b78d5b4e":"markdown","745ab070":"markdown","6ae20d26":"markdown","efac829d":"markdown","a586c380":"markdown","d250d7f9":"markdown","cf512808":"markdown","f4c0dbdf":"markdown","86d696a9":"markdown","0956d877":"markdown","df0b34ba":"markdown","d148ec51":"markdown","98d8f6db":"markdown"},"source":{"7713b6e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2ef868b0":"# Read datas\nmedian_house_hold_in_come = pd.read_csv('..\/input\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\n\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\n\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\n\nshare_race_city = pd.read_csv('..\/input\/ShareRaceByCity.csv', encoding=\"windows-1252\")\n\nkill = pd.read_csv('..\/input\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","1acd2d82":"percentage_people_below_poverty_level.head()","7b98a7ac":"percentage_people_below_poverty_level.info()","0ca96fa3":"# poverty_rate i\u00e7inde sa\u00e7ma bir de\u011fer var m\u0131??\npercentage_people_below_poverty_level.poverty_rate.value_counts()\n\n# 201 tane belirtilmemi\u015f(-) de\u011fer var.","554a7c7b":"percentage_people_below_poverty_level['Geographic Area'].unique()","eda21008":"# Poverty rate of each state (Her devletin yoksulluk oran\u0131)\n\npercentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\n# Datada bulunan (-) i\u015faretin kar\u015f\u0131s\u0131nda 201 adet var ama ne oldu\u011funu bilmiyoruz.\n# Bu nedenle 0 yap\u0131caz.\n\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\n# poverty_rate ---> 29329 non-null object k\u0131sm\u0131 float yapmal\u0131y\u0131z \u00e7\u00fcnk\u00fc say\u0131sal bir de\u011fer\n\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\n#Benden \u015fehirlerdeki yoksullu\u011fu istedi\u011fi i\u00e7in her \u015fehri area_list i\u00e7ine g\u00f6nderdim\n\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    # her Co\u011frafi alan\u0131n bilgilerini s\u0131ras\u0131yla x'in i\u00e7ine att\u0131yoruz.\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    # Daha sonra b\u00f6lgedeki yoksulluk oran\u0131n\u0131n toplam\u0131 ile ka\u00e7 de\u011fer varsa b\u00f6l\u00fcp oran\u0131 buluyoruz.\n    area_poverty_ratio.append(area_poverty_rate)\n\n# Ben g\u00f6rselle\u015ftirmeyi rastgele de\u011fil d\u00fczenli yapmak istedi\u011fim i\u00e7in yoksullu\u011fu b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ral\u0131yorum.\n# B\u00f6ylece hem g\u00f6rsel a\u00e7\u0131dan hem de veriyi anlama a\u00e7\u0131s\u0131ndan kazan\u00e7 sa\u011fl\u0131yorum.\n\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\n# b\u00f6lgeleri ve bu b\u00f6lgeleride ki oranlar\u0131 dataFrame olarak kullan\u0131yoruz.\n\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\n# sort_values(ascending=False) k\u0131sm\u0131 azalan s\u0131rada s\u0131ral\u0131yor.\n# inde.values  ==>  indexleri al diyor ama indexi al\u0131rsan array olarak alacak bunun da value yani de\u011ferlerini al diyor. \n\nsorted_data = data.reindex(new_index) # ????????????????????\n\n# visualization\nplt.figure(figsize=(15,15))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\n\n# burada => ax=sns.barplot... ax e\u015fitlemi\u015ftik ama \u015fimdilik gerek yok.\nplt.xticks(rotation= 45) # x eksenindeki yaz\u0131lar 45 derecelik a\u00e7\u0131yla yazd\u0131\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","4451a7d4":"kill.head()","72374904":"kill.name.value_counts()\n\n# TK TK ---> 49 \/\/\/ TK TK ad\u0131nda 49 ki\u015fi bunlar\u0131 kald\u0131r\u0131cam","66da3678":"# En yayg\u0131n 15 \u00d6len insan\u0131n ad\u0131 veya soyad\u0131\n\nseparate = kill.name[kill.name != \"TK TK\"].str.split()\n# split ile ad ve soyad\u0131 ay\u0131rd\u0131k\n\na,b = zip(*separate) # unzip\nname_list = a+b\n# bu zip ve toplama olay\u0131na bak \u00f6rnek = [\"ali\", \"haydar\"]\n\nname_count  = Counter(name_list)\n# her isimden ka\u00e7 tane var onu bulduk\n\nmost_common_names = name_count.most_common(15)\n# en \u00e7ok olan 15 taneyi bul\n\nx,y = zip(*most_common_names) # unzip\nx,y = list(x),list(y)\n\nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\n# palette ---> renk veriyor fakat ayn\u0131 rengin uygun tonlar\u0131nda\n\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","685eb698":"# En yayg\u0131n 15 isim ve soyismi grafiklerini subplot yard\u0131m\u0131yla \u00e7izdirmek.\n\nseparate = kill.name[kill.name != \"TK TK\"].str.split()\n# split ile ad ve soyad\u0131 ay\u0131rd\u0131k\n\nname,surname = zip(*separate)\n\nnameCount = Counter(name)\nsurnameCount = Counter(surname)\n\nmostCommonName = nameCount.most_common(15)\nmostCommonSurname = surnameCount.most_common(15)\n\nxName,yName = zip(*mostCommonName) # unzip\nxName,yName = list(xName),list(yName)\n\nxSurname, ySurname = zip(*mostCommonSurname)\nxSurname, ySurname = list(xSurname), list(ySurname)\n\nplt.figure(figsize=(15,10))\nplt.subplot(2,1,1)\nax= sns.barplot(x=xName, y=yName,palette = sns.cubehelix_palette(len(xName)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name of killed people')\n\n\nplt.figure(figsize=(15,10))\nplt.subplot(2,1,2)\nax= sns.barplot(x=xSurname, y=ySurname,palette = sns.cubehelix_palette(len(xSurname)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Surname of killed people')","1b39a438":"percent_over_25_completed_highSchool.head()","0ab4be9f":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()\n# 197 tane tan\u0131ms\u0131z (-) var. Onlar\u0131 s\u0131f\u0131r yap\u0131caz.","15df890a":"percent_over_25_completed_highSchool.info()\n# percent_completed_hs ---> float yapmal\u0131y\u0131z ","54df89a1":"# Eyaletlerde 25 ya\u015f\u0131ndan b\u00fcy\u00fck n\u00fcfusun lise mezuniyet oran\u0131\n# High school graduation rate of the population that is older than 25 in states\n\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# Burada datay\u0131 s\u0131ralad\u0131k.\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","008ce342":"share_race_city.head()","b8e54d5e":"share_race_city.info()","e195db03":"x = share_race_city[share_race_city.share_white == \"(X)\"]\nx","9237a9cb":"# Siyah, beyaz, k\u0131z\u0131lderili, asyal\u0131 ve \u0130spanyol olan \u0131rklara g\u00f6re devlet n\u00fcfusunun y\u00fczdesi\n# Percentage of state's population according to races that are black,white,native american, asian and hispanic\n\nshare_race_city.replace(['-'],0.0,inplace=True)\nshare_race_city.replace(['(X)'],0.0,inplace=True)\n# Veriyi temizledik.\n\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\n# Veri say\u0131sal olmas\u0131na ra\u011fmen str olarak bize verildi bu veriyi kullanmak i\u00e7in float'a \u00e7evirdik.\n\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\n# Irklar\u0131 ay\u0131rd\u0131k.\n\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n# Irklar\u0131n de\u011ferlerini bulduk.\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races\")","928ff035":"sorted_data.head()","14447a85":"sorted_data2.head()","fe569465":"sorted_data[\"area_poverty_ratio\"] = sorted_data[\"area_poverty_ratio\"]\/max(sorted_data[\"area_poverty_ratio\"])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max(sorted_data2['area_highschool_ratio'])\n# normalize ettik.\n\ndata = pd.concat([sorted_data,sorted_data2[\"area_highschool_ratio\"]], axis=1)\n# sorted_data2[\"area_highschool_ratio\"] sutununu sorted_data ile birle\u015ftirdik.\n# biz asl\u0131nda sorunun cevab\u0131n\u0131 bulduk fakat ayr\u0131ca g\u00f6rselle\u015ftirmek istiyoruz.\n\ndata.sort_values(\"area_poverty_ratio\",inplace=True)\n# s\u0131ralad\u0131k.","8390c6b9":"data.head() # g\u00f6rselle\u015ftirice\u011fimiz data","c714cb93":"f,ax1 = plt.subplots(figsize=(20,10))\nsns.pointplot(x='area_list', y='area_poverty_ratio', data=data, color='lime', alpha=0.8)\n# x='area_list' diye yazabildik \u00e7\u00fcnk\u00fc seaborn data i\u00e7i parametresi ile g\u00f6rebiliyor.\n# x = data[\"area_list\"] yazmam\u0131za gerek yok.\nsns.pointplot(x=\"area_list\", y=\"area_highschool_ratio\", data=data, color=\"red\", alpha=0.8)\nplt.text(40,0.6, \"high school graduate ratio\",color=\"red\", fontsize=17, style=\"italic\")\nplt.text(40,0.55, \"poverty ratio\", color=\"lime\", fontsize=18, style=\"italic\")\nplt.xlabel(\"States\",fontsize=15, color=\"blue\")\nplt.ylabel(\"Values\",fontsize=15, color=\"blue\")\nplt.title(\"High School Graduation Rate vs Poverty Rate\", fontsize=20,color=\"blue\")\nplt.grid()","4d79eeec":"# Lise mezuniyet oran\u0131na kar\u015f\u0131 vs Her devletin yoksulluk oran\u0131 ile farkl\u0131 seaborn kodu stili olan g\u00f6rselle\u015ftirme\n\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\", size=7)\nplt.savefig(\"graph.png\") # kaggle'da g\u00f6r\u00fcnt\u00fc i\u00e7in yazd\u0131k.\nplt.show()\n\n# x ekseni area_poverty_ratio , y ekseni area_highschool_ratio\n# kind=\"kde\" => kde a\u00e7\u0131l\u0131m\u0131 joint kernel density (ortak \u00e7ekirdek yo\u011funlu\u011fu)\n# pearsonr => 1 ise pozitif korelasyon var ve -1 ise negatif korelasyon var.\n# S\u0131f\u0131r ise de\u011fi\u015fkenler aras\u0131nda korelasyon yoktur.\n# burda tam olmasada negatif korelsyon (ters orant\u0131) var","47ef91c0":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\n\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"red\", kind=\"scatter\")\n# ratio alan\u0131 ayarl\u0131yor.\nplt.show()","8481dc33":"g = sns.jointplot(\"area_poverty_ratio\",\"area_highschool_ratio\", data=data,size=5, color=\"blue\", ratio=3, kind=\"hex\")","79f70ef3":"kill.race.head(10)","d1ac6101":"kill.race.value_counts()\n# o = other yani listede olmyan \u0131rklar","7aaf7a7f":"# Race rates according in kill data (\u0131rk oranlar\u0131)\n\nkill.race.dropna(inplace = True)\n# bo\u015f varsa data \u00e7\u0131kard\u0131k\nlabels = kill.race.value_counts().index # sadece indexleri ald\u0131k\ncolors = [\"grey\",\"blue\",\"red\",\"yellow\",\"green\",\"brown\"]\nexplode = [0,0,0,0,0,0] # oranlar\nsizes = kill.race.value_counts().values # de\u011ferler (values)\n\n# visual\nplt.figure(figsize=(7,7))\n# NOT = pie plot bir seaborn k\u00fct\u00fcphnesinin de\u011fil matplot'un\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct=\"%1.1f%%\")\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)","90b3cfc5":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\n\n# Lise mezuniyet oran\u0131n\u0131n g\u00f6rselle\u015ftirilmesi - Her devletin yoksulluk oran\u0131\n# lmplot\n# Her veri k\u00fcmesindeki do\u011frusal regresyon sonu\u00e7lar\u0131n\u0131 g\u00f6ster\n\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()\n\n# line(\u00e7izgi) en optimum noktadan ge\u00e7mi\u015f. bu bir makine \u00f6\u011frenimine \u00f6rnek","ff8afb3e":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plot\n\nsns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=True, cut=5)\nplt.show()\n\n# shde = dalga i\u00e7lerinin dolu olup olmamas\u0131n\u0131 belirler\n# cut = b\u00fcy\u00fckl\u00fc\u011f\u00fc","b5689a79":"pal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data ,palette=pal, inner=\"points\")\nplt.show()\n\n# inner=\"points\" --> ortadaki noktalar","c972b0ae":"data.corr()","d622f09a":"f,ax = plt.subplots(figsize=(6, 6)) \nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","a045eea8":"kill.head()","a6f7aca2":"kill.manner_of_death.unique()","a8dd41a3":"# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n# Plot the orbital period with horizontal boxes (Y\u00f6r\u00fcnge periyodunu yatay kutularla \u00e7izin)\n\nsns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\nplt.show()","c879e9e1":"# swarm plot\n# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n\nsns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=kill)\nplt.show()\n\n# y\u00fcksek veri oldu\u011funda \u00e7izdirmek zordur","2a089f4c":"sns.pairplot(data)\nplt.show()","63252a37":"kill.gender.value_counts()","ab4f3a82":"kill.head()","fa316c77":"# kill properties\n# Manner of death\n\nsns.countplot(kill.gender)\n#sns.countplot(kill.manner_of_death)\nplt.title(\"gender\", color=\"blue\", fontsize=15)","2ca1ee45":"# kill weapon\narmed = kill.armed.value_counts()\n#print(armed)\nsns.barplot(x = armed[:7].index, y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)","17b022ea":"# age of killed people\nabove25 = [\"above25\" if i>=25 else \"below25\" for i in kill.age]\ndf = pd.DataFrame({\"age\":above25})\nsns.countplot(x=df.age)","0d661293":"# Race of killed people\nsns.countplot(data=kill, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)","5e991a38":"# Most dangerous cities\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)","0a479b6f":"# most dangerous states\nstate = kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'blue',fontsize=15)","84508283":"# Having mental ilness or not for killed people\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","cc6b2fc4":"# Threat types\nsns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","ce64b51c":"# Flee types\nsns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)","dbd60206":"# Having body cameras or not for police\nsns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)","5dc2a5c3":"# Kill numbers from states in kill data\nsta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)","9c556690":"### **Bar Plot**","e9d7d078":"### high school graduation rate vs Poverty rate of each state  \n\n### Lise mezuniyet oran\u0131 vs Her devletin yoksulluk oran\u0131\n\nsorted_data2 ile lise mezuniyet oran\u0131n\u0131\nsorted_data ile yoksukluk oran\u0131n\u0131 \u00f6nceden bulmu\u015ftuk.\n\nbiz burada normalize etmeliyiz. kar\u015f\u0131la\u015ft\u0131rmak istedi\u011fimiz de\u011ferlerin art\u0131\u015f ve ya azal\u0131\u015flar\u0131na\nbakmak istiyoruz. bu nedenle say\u0131say de\u011ferlerde oynama yap\u0131yoruz\n\n\u00f6rne\u011fin:   \n0 < [1, 2, 3, 4, 5] < 1   \n0 < [1000,  999,  888,  777,  600]\/1000 < 1    \n\nbu iki liste aras\u0131nda ki de\u011ferleri 0 ve 1 aras\u0131na \u00e7ektik fakat art\u0131\u015f ve ya azal\u0131\u015f miktarlar\u0131 sabit kal\u0131p d\u00fczg\u00fcn yorumlamam\u0131za imkan sa\u011flad\u0131.\n\nBizim i\u00e7in burda \u00f6nemli olan e\u011fimlerdir. ","b78d5b4e":"### Pair Plot","745ab070":"### Point Plot","6ae20d26":"### Heatmap","efac829d":"### Pie Plot","a586c380":"Verileri oku\n\nHer Eyaletin yoksulluk oran\u0131\n\nEn yayg\u0131n 15 \u00d6len insan\u0131n ad\u0131 veya soyad\u0131\n\nEyaletlerde 25 ya\u015f\u0131ndan b\u00fcy\u00fck n\u00fcfusun lise mezuniyet oran\u0131\n\nSiyah, beyaz, k\u0131z\u0131lderili, asyal\u0131 ve \u0130spanyol olan \u0131rklara g\u00f6re devlet n\u00fcfusunun y\u00fczdesi\n\nLise mezuniyet oran\u0131 vs Her devletin yoksulluk oran\u0131\n\n\u00d6zellikleri \u00f6ld\u00fcr\n   * \u00d6l\u00fcm \u015fekli\n   * Silah \u00f6ld\u00fcr\n   * \u00d6ld\u00fcr\u00fclenlerin ya\u015f\u0131\n   * \u00d6ld\u00fcr\u00fclenlerin \u0131rk\u0131\n   * En tehlikeli \u015fehirler\n   * En tehlikeli devletler\n   * \u00d6ld\u00fcr\u00fclen insanlar i\u00e7in zihinsel hastal\u0131\u011fa sahip olmak ya da olmamak\n   * Tehdit t\u00fcrleri\n   * Ka\u00e7mak t\u00fcrleri\n   * Ceset kameralar\u0131na sahip olmak veya polis i\u00e7in de\u011fil\n\n\u00d6ld\u00fcrme verilerindeki eyaletlere g\u00f6re yar\u0131\u015f oranlar\u0131\n\n\u00d6ld\u00fcrme verisindeki durumlardan say\u0131lar\u0131 \u00f6ld\u00fcr","d250d7f9":"### Violin Plot   \n\nDe\u011ferlerin da\u011f\u0131l\u0131m\u0131na bak\u0131yor.","cf512808":"### Box Plot","f4c0dbdf":"### Swarm Plot","86d696a9":"### Count PLot","0956d877":"# SEABORN *(Veri G\u00f6rselle\u015ftirme)*","df0b34ba":"### Kde Plot","d148ec51":"### Lm Plot","98d8f6db":"### Joint Plot"}}