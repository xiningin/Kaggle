{"cell_type":{"c7285192":"code","fd7c830c":"code","b0aabc26":"code","d3edeb35":"code","d19f86ed":"code","fb8ff348":"code","ae01fecc":"code","06b68b0e":"code","99100646":"code","8d73ed2d":"code","1efcdbbd":"code","f1879965":"code","a9262a9b":"code","57b0148c":"code","07084d1e":"markdown"},"source":{"c7285192":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd7c830c":"df= pd.read_json('..\/input\/synthea-dataset-jsons-ehr\/fhir\/00\/000\/0000e4c0-2057-4c43-a90e-33891c7bc097.json')","b0aabc26":"df.shape","d3edeb35":"df.head()","d19f86ed":"resourcetype=set()\nPatient= pd.DataFrame() \nCarePlan=pd.DataFrame() \nCondition=pd.DataFrame() \nDiagnosticReport=pd.DataFrame() \nEncounter=pd.DataFrame() \nImmunization=pd.DataFrame() \nObservation=pd.DataFrame() \nProcedure=pd.DataFrame() \nfor index, row in df.iterrows():\n    tempdf=pd.json_normalize(row.entry)\n    resourcetype.add([str(x) for x in tempdf['resource.resourceType']][0])\n    if str(tempdf['resource.resourceType'][0])==\"Patient\":\n        frames = [Patient, tempdf]\n        Patient = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"CarePlan\":\n        frames = [CarePlan, tempdf]\n        CarePlan = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"Condition\":\n        frames = [Condition, tempdf]\n        Condition = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"DiagnosticReport\":\n        frames = [DiagnosticReport, tempdf]\n        DiagnosticReport = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"Encounter\":\n        frames = [Encounter, tempdf]\n        Encounter = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"Immunization\":\n        frames = [Immunization, tempdf]\n        Immunization = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"Observation\":\n        frames = [Observation, tempdf]\n        Observation = pd.concat(frames)\n    elif str(tempdf['resource.resourceType'][0])==\"Procedure\":\n        frames = [Procedure, tempdf]\n        Procedure = pd.concat(frames)","fb8ff348":"Patient.columns = Patient.columns.str.replace(\".\", \"_\")\nPatient.columns = Patient.columns.str.replace(\"resource_\", \"\")\n\nCarePlan.columns = CarePlan.columns.str.replace(\".\", \"_\")\nCarePlan.columns = CarePlan.columns.str.replace(\"resource_\", \"\")\n\nCondition.columns = Condition.columns.str.replace(\".\", \"_\")\nCondition.columns = Condition.columns.str.replace(\"resource_\", \"\")\n\nDiagnosticReport.columns = DiagnosticReport.columns.str.replace(\".\", \"_\")\nDiagnosticReport.columns = DiagnosticReport.columns.str.replace(\"resource_\", \"\")\n\nEncounter.columns = Encounter.columns.str.replace(\".\", \"_\")\nEncounter.columns = Encounter.columns.str.replace(\"resource_\", \"\")\n\nProcedure.columns = Procedure.columns.str.replace(\".\", \"_\")\nProcedure.columns = Procedure.columns.str.replace(\"resource_\", \"\")\n\nObservation.columns = Observation.columns.str.replace(\".\", \"_\")\nObservation.columns = Observation.columns.str.replace(\"resource_\", \"\")\n\nImmunization.columns = Immunization.columns.str.replace(\".\", \"_\")\nImmunization.columns = Immunization.columns.str.replace(\"resource_\", \"\")","ae01fecc":"Patient['fullUrl']=Patient['fullUrl'].str.replace('urn:uuid:', '')\nPatient","06b68b0e":"CarePlan['subject_reference']=CarePlan['subject_reference'].str.replace('urn:uuid:', '')\nCarePlan['context_reference']=CarePlan['context_reference'].str.replace('urn:uuid:', '')\nCarePlan","99100646":"Condition['subject_reference']=Condition['subject_reference'].str.replace('urn:uuid:', '')\nCondition['context_reference']=Condition['context_reference'].str.replace('urn:uuid:', '')\nCondition","8d73ed2d":"DiagnosticReport['subject_reference']=DiagnosticReport['subject_reference'].str.replace('urn:uuid:', '')\nDiagnosticReport['encounter_reference']=DiagnosticReport['encounter_reference'].str.replace('urn:uuid:', '')\nDiagnosticReport","1efcdbbd":"Encounter['patient_reference']=Encounter['patient_reference'].str.replace('urn:uuid:', '')\nEncounter['fullUrl']=Encounter['fullUrl'].str.replace('urn:uuid:', '')\nEncounter","f1879965":"Immunization['patient_reference']=Immunization['patient_reference'].str.replace('urn:uuid:', '')\nImmunization['encounter_reference']=Immunization['encounter_reference'].str.replace('urn:uuid:', '')\nImmunization","a9262a9b":"Observation['subject_reference']=Observation['subject_reference'].str.replace('urn:uuid:', '')\nObservation['encounter_reference']=Observation['encounter_reference'].str.replace('urn:uuid:', '')\nObservation['fullUrl']=Observation['fullUrl'].str.replace('urn:uuid:', '')\nObservation","57b0148c":"Procedure['subject_reference']=Procedure['subject_reference'].str.replace('urn:uuid:', '')\nProcedure['encounter_reference']=Procedure['encounter_reference'].str.replace('urn:uuid:', '')\nProcedure","07084d1e":"**Selceting a file for understanding and transforming into data structure** - \/kaggle\/input\/synthea-dataset-jsons-ehr\/fhir\/d8\/d8c\/d8cddeba-4cf8-412a-86de-b9af0a6a185b.json"}}