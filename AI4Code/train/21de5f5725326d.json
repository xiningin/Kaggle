{"cell_type":{"101cc2e6":"code","a2cc1526":"code","b3c74a17":"code","ecbeb1c6":"code","3a57da09":"code","4ff06d8c":"code","d3c9e1a9":"markdown","fa2549a1":"markdown","299c2e35":"markdown"},"source":{"101cc2e6":"import pandas as pd\nfrom matplotlib import pyplot as plt\n\n%matplotlib inline","a2cc1526":"TRAIN_FILE = \"..\/input\/train.csv\"\nTEST_FILE = \"..\/input\/test.csv\"\nf = 'AvSigVersion'","b3c74a17":"train_df = pd.read_csv(TRAIN_FILE, usecols=[f])\ntest_df = pd.read_csv(TEST_FILE, usecols=[f])\ndf = pd.concat([train_df,test_df])","ecbeb1c6":"unq_vals = df[f].value_counts().reset_index()\nunq_vals = pd.concat([unq_vals, unq_vals['index'].str.replace('&#x17;','').str.split('.', expand=True).astype(int)], axis=1)\nsorted_vals = unq_vals.sort_values([0,1,2,3]).reset_index(drop=True).reset_index()\nvals_dict = sorted_vals.set_index('index')['level_0'].to_dict()\ndf[f] = df[f].map(vals_dict)","3a57da09":"train_len = len(train_df)\ntrain_df = df[:train_len]\ntest_df = df[train_len:]","4ff06d8c":"_ = plt.hist([train_df[f],test_df[f]], stacked=False)","d3c9e1a9":"Let's convert to serial number.","fa2549a1":"> \"the dataset provided here has been roughly split by time\"\n\nSo we need carefull feature engineering.","299c2e35":"Most of values in training data has < 9000. And most of values in test data has > 9000.\n\nSo if we use AvSigVersion for training, we would get better CV score and worse or a little better LB score.\n\nI just used AvSigVersion as an example, but there would be many other similar features."}}