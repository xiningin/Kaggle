{"cell_type":{"c85887e5":"code","3d93cba0":"code","76248757":"code","13016984":"code","a3c402a9":"code","a38a92b7":"code","866af4e5":"code","45a6c967":"code","bfb08d42":"code","005ec077":"code","c0e83793":"code","6e6e0965":"code","df363042":"code","6a7d371a":"code","8996ae80":"code","5bd99063":"code","33250624":"code","8fd2b24a":"code","3f73c59e":"code","7ab3b031":"code","f60bf075":"code","c1367133":"code","7f9357e7":"code","e964d527":"code","648a0c11":"code","81fdec75":"code","6279686c":"code","58628ed5":"code","6a1cec0e":"code","907a7da0":"code","e11ccf73":"code","e7c074c9":"code","17894160":"code","c2ea54c3":"code","9c43619e":"code","9d217204":"code","c6f80b90":"code","d145dd30":"code","89caf1a5":"code","ad60449a":"code","c06ee6d8":"code","d2b9d521":"markdown"},"source":{"c85887e5":"# \u0410\u043d\u0430\u043b\u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 \u0442\u0435\u043b\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0432\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f.\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport gc","3d93cba0":"# \u041d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.\n\ndf_data0=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00001-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv')\ndf_data0.dataframeName = 'first data-set'\nnRow, nCol = df_data0.shape\n# \u041d\u0430\u0431\u043e\u0440 \u043c\u0435\u0442\u043e\u043a \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.\n\ndf_Labels=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/labels\/labels-part-00000-e9445087-aa0a-433b-a7f6-7f4c19d78ad6-c000.csv')\ndf_Labels.dataframeName = 'first Labels'","76248757":"df_Labels.head()","13016984":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043a\u0430\u043a\u0438\u0435-\u043b\u0438\u0431\u043e \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445, \u0435\u0441\u043b\u0438 \u0434\u0430, \u0442\u043e \u0443\u0434\u0430\u043b\u0438\u043c \u044d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445, \n# \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438.\n\nif (df_data0.isnull().sum().sum()!=0):\n    df_data0.dropna(axis=0, how='any', thresh=None, subset=None, inplace=True)","a3c402a9":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u043a \u0432\u0441\u0435 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.\n# \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435, \u0442\u043e \u043e\u0442\u0431\u0440\u043e\u0441\u0438\u043c \u044d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043b\u043e\u043c\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435.\n\nif ((len(df_Labels))!=(len(df_Labels['bookingID'].unique()))):\n    duplicateRows_Labels=df_Labels[df_Labels.duplicated(['bookingID'],keep=False)]\n    for x in range(len(duplicateRows_Labels)):\n        df_Labels.drop(duplicateRows_Labels.index[x],inplace=True)","a38a92b7":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u043b\u0438 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b?\n\nduplicateRows_Labels=df_Labels[df_Labels.duplicated(['bookingID'],keep=False)]\nduplicateRows_Labels","866af4e5":"# \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 labels \u0441 \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u0434\u0430\u043d\u043d\u044b\u0445 features, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f bookingID. \n# bookingID - \u043a\u043b\u044e\u0447 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u043e\u0438\u0445 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_Combined_Dataset=pd.merge(df_data0, df_Labels, on='bookingID',\n         left_index=True, right_index=False, sort=False)","45a6c967":"# \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_Combined_Dataset.columns","bfb08d42":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0441\u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_Combined_Dataset.head()","005ec077":"# \u041c\u044b \u0440\u0430\u0437\u0431\u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u0435\u0433\u043e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435. \n# BookingID \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u043c \u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u0435 \u0438 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.\n\niv=df_Combined_Dataset[['Accuracy', 'Bearing', 'acceleration_x', 'acceleration_y','acceleration_z', 'gyro_x', 'gyro_y', 'gyro_z', 'second', 'Speed']]\ndv=df_Combined_Dataset[['label']]","c0e83793":"# \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0432 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043c\u044b\u0445 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430\u0445, \n# \u0447\u0442\u043e\u0431\u044b \u0430\u043d\u0430\u043b\u0438\u0437 \u043d\u0435 \u0431\u044b\u043b \u0438\u0441\u043a\u0430\u0436\u0435\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0449\u0438\u043c\u0438 \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\niv[['Accuracy', 'Bearing', 'acceleration_x', 'acceleration_y','acceleration_z', 'gyro_x', 'gyro_y', 'gyro_z', 'second', 'Speed']] = sc.fit_transform(iv[['Accuracy', 'Bearing', 'acceleration_x', 'acceleration_y','acceleration_z', 'gyro_x', 'gyro_y', 'gyro_z', 'second', 'Speed']])","6e6e0965":"# \u0411\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.\n# \u0422\u0430\u043a \u0436\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0442\u043e\u0434 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0433\u043e \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 (RFE) \n# \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_selection import RFE\n\nlog_reg=LogisticRegression(random_state=1)\n#log_reg.fit(iv_train,dv_train)\n#log_reg.predict(iv_test)\n\n# \u0412\u044b\u0431\u0435\u0440\u0435\u043c \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b, \u0441\u043e\u0437\u0434\u0430\u0432 \u043c\u043e\u0434\u0435\u043b\u044c RFE.\n\nrfe = RFE(log_reg,9)\nrfe = rfe.fit(iv, dv)\n\nprint(rfe.support_)\nprint(rfe.ranking_)","df363042":"idx=iv.columns","6a7d371a":"idx","8996ae80":"reduced_features=[]\nreduced_features_withKey=['bookingID']\n\nfor i in range(len(rfe.ranking_)):\n    if (rfe.ranking_[i]==1):\n        reduced_features.append(idx[i])\n        reduced_features_withKey.append(idx[i])","5bd99063":"reduced_features","33250624":"reduced_features_withKey","8fd2b24a":"# \u041f\u043e\u0434\u0433\u0440\u0443\u0437\u0438\u043c \u043f\u043e\u043b\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_data0=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00000-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data1=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00001-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data2=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00002-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data3=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00003-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data4=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00004-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data5=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00005-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data6=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00006-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data7=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00007-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data8=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00008-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\ndf_data9=pd.read_csv('..\/input\/car-data-management-data-set\/car-data-management-data-set\/features\/features-part-00009-e6120af0-10c2-4248-97c4-81baf4304e5c-c000.csv',usecols=reduced_features_withKey)\n\ndf_ReducedFeatures_Dataset=pd.concat([df_data0,df_data1,df_data2,df_data3,df_data4,df_data5,df_data6,df_data7,df_data8,df_data9],axis=0)\n\n# \u041e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u043c \u043f\u0430\u043c\u044f\u0442\u044c.\n\ndel [[df_data0, df_data1, df_data2, df_data3, df_data4, df_data5, df_data6, df_data7, df_data8, df_data9]]\ngc.collect()\ndf_data0=pd.DataFrame()\ndf_data1=pd.DataFrame()\ndf_data2=pd.DataFrame()\ndf_data3=pd.DataFrame()\ndf_data4=pd.DataFrame()\ndf_data5=pd.DataFrame()\ndf_data6=pd.DataFrame()\ndf_data7=pd.DataFrame()\ndf_data8=pd.DataFrame()\ndf_data9=pd.DataFrame()\n","3f73c59e":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043a\u0430\u043a\u0438\u0435-\u043b\u0438\u0431\u043e \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n# \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043e\u0442\u0431\u0440\u043e\u0441\u0438\u043c \u044d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438.\n\nif (df_ReducedFeatures_Dataset.isnull().sum().sum()!=0):\n    df_ReducedFeatures_Dataset.dropna(axis=0, how='any', thresh=None, subset=None, inplace=True)","7ab3b031":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u043e\u043b\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_ReducedFeatures_Dataset.head()","f60bf075":"len(df_ReducedFeatures_Dataset)","c1367133":"# \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 labels \u0441 df_ReducedFeatures_Dataset, \n# \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f bookingID \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0430 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u043e\u0438\u0445 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_Combined_Dataset=pd.merge(df_ReducedFeatures_Dataset, df_Labels, on='bookingID', left_index=True, right_index=False, sort=True)\n\n# \u041e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u043c \u043f\u0430\u043c\u044f\u0442\u044c.\n\ndel [[df_Labels, df_ReducedFeatures_Dataset]]\ngc.collect()\ndf_Labels=pd.DataFrame()\ndf_ReducedFeatures_Dataset=pd.DataFrame()","7f9357e7":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\ndf_Combined_Dataset.columns","e964d527":"df_Combined_Dataset.head()","648a0c11":"# \u041c\u044b \u0440\u0430\u0437\u0431\u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u0435\u0433\u043e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435. \n# BookingID \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u043c \u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u0435 \u0438 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.\n\niv=df_Combined_Dataset[reduced_features]\ndv=df_Combined_Dataset[['label']]","81fdec75":"# \u0414\u043e.\n\niv.head()","6279686c":"# \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0432 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043c\u044b\u0445 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430\u0445, \n# \u0447\u0442\u043e\u0431\u044b \u0430\u043d\u0430\u043b\u0438\u0437 \u043d\u0435 \u0431\u044b\u043b \u0438\u0441\u043a\u0430\u0436\u0435\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0449\u0438\u043c\u0438 \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\niv[reduced_features] = sc.fit_transform(iv[reduced_features])","58628ed5":"# \u041f\u043e\u0441\u043b\u0435.\n\niv.head()","6a1cec0e":"from sklearn.model_selection import train_test_split\n\ndf1=df_Combined_Dataset['bookingID']\niv_withBookingID=pd.concat([df1,iv], axis=1)\n\n# \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 80\/20 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043a\u0438.\n\niv_train_withBookingID,iv_test_withBookingID,dv_train,dv_test=train_test_split(iv_withBookingID,dv,test_size=0.2,random_state=0)\n\n# \u041e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u043c \u043f\u0430\u043c\u044f\u0442\u044c.\n\ndel [[df1]]\ngc.collect()\ndf1=pd.DataFrame()","907a7da0":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\n\niv_train_withBookingID.head()","e11ccf73":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\n\niv_test_withBookingID.head()","e7c074c9":"# \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043c bookingID \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n\niv_train=iv_train_withBookingID[reduced_features]\niv_test=iv_test_withBookingID[reduced_features]","17894160":"# \u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043d\u043e \u0443\u0436\u0435 \u0431\u0435\u0437 bookingID.\n\niv_train.head()","c2ea54c3":"# \u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043d\u043e \u0443\u0436\u0435 \u0431\u0435\u0437 bookingID.\n\niv_test.head()","9c43619e":"# \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043c\u043d\u043e\u0433\u043e\u0441\u043b\u043e\u0439\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0446\u0435\u043f\u0442\u0440\u043e\u043d\u0430 (MLP)\n\nfrom sklearn.neural_network import MLPClassifier\nmlp=MLPClassifier(hidden_layer_sizes=(10, 10, 10), max_iter=100)\nmlp.fit(iv_train, dv_train.values.ravel())\npredictions=mlp.predict(iv_test)\nimport joblib\n\njoblib.dump(mlp, 'machine-learning-model-neural-network.joblib')\n","9d217204":"# \u0417\u0430\u043f\u0438\u0448\u0435\u043c \u043d\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435.\n\nTrain_results=pd.DataFrame()\n\nTrain_results['bookingID']=pd.Series(range(len(iv_test_withBookingID)))\nTrain_results['bookingID']=iv_test_withBookingID['bookingID'].reset_index(drop=True)","c6f80b90":"Train_results['actualRating']=dv_test['label'].reset_index(drop=True)","d145dd30":"Train_results['predictedRating']=pd.DataFrame(mlp.predict(iv_test)).reset_index(drop=True)","89caf1a5":"# \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n\nTrain_results.head()","ad60449a":"# \u041e\u0446\u0435\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b.\n\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nprint(classification_report(dv_test,mlp.predict(iv_test)))\n\ncm=confusion_matrix(dv_test,mlp.predict(iv_test))\ncm","c06ee6d8":"# \u041e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u043c \u043f\u0430\u043c\u044f\u0442\u044c.\n\ndel [[iv_test,Train_results,df_Combined_Dataset, iv, dv, iv_withBookingID, iv_train_withBookingID,iv_test_withBookingID,dv_train,dv_test]]\n\ngc.collect()\niv_test=pd.DataFrame()\nTrain_results=pd.DataFrame()\ndf_Combined_Dataset=pd.DataFrame()\niv=pd.DataFrame()\ndv=pd.DataFrame()\niv_withBookingID=pd.DataFrame()\niv_train_withBookingID=pd.DataFrame()\niv_test_withBookingID=pd.DataFrame()\ndv_train=pd.DataFrame()\ndv_test=pd.DataFrame()","d2b9d521":"#  \u0410\u043d\u0430\u043b\u0438\u0437 \u0442\u0435\u043b\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0432\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u0438 (\u043c\u043d\u043e\u0433\u043e\u0441\u043b\u043e\u0439\u043d\u044b\u0439 \u043f\u0435\u0440\u0446\u0435\u043f\u0442\u0440\u043e\u043d), \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 scikit-learn.\n\n"}}