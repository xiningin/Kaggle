{"cell_type":{"8b772811":"code","27cbec78":"code","30a2eb78":"code","b9917b6d":"code","97452bf6":"code","ba8770e6":"code","2e6f69ee":"code","785eeac4":"code","831c54df":"code","bd1517a3":"code","9c8b9bcb":"code","291130ba":"code","f70a5859":"code","a8dfc62c":"code","2b1405b7":"markdown","152bc491":"markdown","045026bd":"markdown","850f719e":"markdown","490123b2":"markdown","4e11299c":"markdown","ebc94ad7":"markdown","12ecb2bc":"markdown","78811bb4":"markdown","1ef4c55e":"markdown","4f525b13":"markdown","10f42768":"markdown","d7817a33":"markdown","7c569929":"markdown","0c564646":"markdown","3e3ca770":"markdown","182e56b0":"markdown","e5a7fcb9":"markdown"},"source":{"8b772811":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27cbec78":"DF = pd.read_excel(\"\/kaggle\/input\/my-daughter-sleep-analysis\/My_Daughter_sleep_analysis.xlsx\")\nDF.rename(columns={'Morning wake-up':'morning_wake_up', \n                   'Noon nap time':'noon_sleep_time',\n                   'Noon wake up time':'noon_wake_up_time',\n                   'Evening Nap time':'evening_sleep_time',\n                   'Evening wake up time':'evening_wake_up_time',\n                   'Night sleep time':'night_sleep_time'\n                  }, inplace=True)\nDF.head()","30a2eb78":"DF['evening_sleep_duration'] = pd.to_datetime(DF['evening_wake_up_time'].astype('str'))-pd.to_datetime(DF['evening_sleep_time'].astype('str'))\nDF['noon_sleep_duration'] = pd.to_datetime(DF['noon_wake_up_time'].astype('str'))-pd.to_datetime(DF['noon_sleep_time'].astype('str'))\n\nDF['night_sleep_lag'] = pd.to_datetime(DF['night_sleep_time'].shift(1).astype('str')) - timedelta(1)\nDF['night_sleep_duration'] = pd.to_datetime(DF['morning_wake_up'].astype('str'))-DF['night_sleep_lag']\nDF.drop(['night_sleep_lag'], axis=1, inplace=True)\n\nDF['night_sleep_duration_hr'] = DF.night_sleep_duration.dt.seconds\/60\/60\nDF['evening_sleep_duration_hr'] = DF.evening_sleep_duration.dt.seconds\/60\/60\nDF['noon_sleep_duration_hr'] = DF.noon_sleep_duration.dt.seconds\/60\/60\n\nDF['weekday'] = DF.Date.dt.weekday\nDF['weekend'] = np.where(DF['weekday'].isin([5,6]), 1, 0)\n\nDF['weekday_name'] = DF.Date.dt.day_name()\nDF['weekend_name'] = np.where(DF['weekday_name'].isin(['Saturday', 'Sunday']), 'Weekend', 'Weekday')\n\nDF['week_no']= DF.Date.dt.week\n\nDF['morning_wake_up_hour'] = pd.to_datetime(DF['morning_wake_up'].astype('str')).dt.hour\nDF['noon_sleep_hour'] = pd.to_datetime(DF['noon_sleep_time'].astype('str')).dt.hour\nDF['noon_wake_up_hour'] = pd.to_datetime(DF['noon_wake_up_time'].astype('str')).dt.hour\nDF['evening_sleep_hour'] = pd.to_datetime(DF['evening_sleep_time'].astype('str')).dt.hour\nDF['evening_wake_up_hour'] = pd.to_datetime(DF['evening_wake_up_time'].astype('str')).dt.hour\nDF['night_sleep_hour'] = pd.to_datetime(DF['night_sleep_time'].astype('str')).dt.hour\n\nDF['overall_sleep_hours'] = DF[['evening_sleep_duration', 'noon_sleep_duration', 'night_sleep_duration']].sum(axis=1).dt.seconds\/60\/60\nDF['overall_awake_hours'] = 24 - DF['overall_sleep_hours']\n\nDF.dropna(inplace=True)\nDF.head()","b9917b6d":"mean_night_sleep = np.round(np.mean(DF.night_sleep_duration_hr),2)\nplt.figure(figsize=(15, 5))\nsns.distplot(DF.night_sleep_duration_hr, hist=False, color='orange')\nplt.axvline(mean_night_sleep)\nplt.text(y=0.2 ,x=(mean_night_sleep-0.06), s=f'Average sleep: {mean_night_sleep} hrs', rotation=90)\nplt.title(\"Night sleep distribution\")\nplt.xlabel(\"Hours\")\nplt.show()\n\nmean_noon_sleep = np.round(np.mean(DF.noon_sleep_duration_hr),2)\nplt.figure(figsize=(15, 5))\nsns.distplot(DF.noon_sleep_duration_hr, hist=False, color='red')\nplt.axvline(mean_noon_sleep)\nplt.text(y=0.4 ,x=(mean_noon_sleep-0.04), s=f'Average sleep: {mean_noon_sleep} hrs', rotation=90)\nplt.title(\"Noon sleep distribution\")\nplt.xlabel(\"Hours\")\nplt.show()\n\nmean_evening_sleep = np.round(np.mean(DF.evening_sleep_duration_hr),2)\nplt.figure(figsize=(15, 5))\nsns.distplot(DF.evening_sleep_duration_hr, hist=False, color='green')\nplt.axvline(mean_evening_sleep)\nplt.text(y=0.2 ,x=(mean_evening_sleep-0.04), s=f'Average sleep: {mean_evening_sleep} hrs', rotation=90)\nplt.title(\"Evening sleep distribution\")\nplt.xlabel(\"Hours\")\nplt.show()\n","97452bf6":"f, (ax_count, ax_box) = plt.subplots(2, sharex=True, gridspec_kw={\"height_ratios\": (.15, .85)}, figsize=(15, 5))\n \n# Add a graph in each part\nsns.boxplot(y = DF.night_sleep_duration_hr, x = DF.weekday_name, ax=ax_box)\nplt.ylabel(\"Night sleep duration\")\nax = sns.countplot(DF[\"weekday_name\"], ax=ax_count)\nax_count.set(xlabel='')\nplt.xlabel(\"\")\nax_box.set(ylabel= 'Hours')\nax_count.set(title=\"Days Vs Night sleep\")\n\nfor p, label in zip(ax.patches, DF[\"weekday\"].value_counts().index):\n    ax.annotate(p.get_height(), (p.get_x()+0.375, 0.7), color='white')","ba8770e6":"plt.figure(figsize=(15, 5))\nsns.violinplot(y = DF.night_sleep_duration_hr, x = DF.weekend_name)\nplt.xlabel('Weekday\/Weekend')\nplt.ylabel('Hours')","2e6f69ee":"plt.figure(figsize=(15, 5))\nsns.boxplot(y = DF.noon_sleep_duration_hr, x = DF.weekday_name)\nplt.xlabel('Days')\nplt.ylabel('Hours')\nplt.title(\"Days Vs Noon sleep\")\n\nplt.figure(figsize=(15, 5))\nsns.violinplot(y = DF.noon_sleep_duration_hr, x = DF.weekend_name)\nplt.ylabel('Hours')\nplt.xlabel('Weekday\/Weekend')\nplt.title(\"Weekends Vs Noon sleep\")\n\nplt.figure(figsize=(15, 5))\nsns.boxplot(y = DF.evening_sleep_duration_hr, x = DF.weekday_name)\nplt.xlabel('Days')\nplt.ylabel('Hours')\nplt.title(\"Days Vs Evening sleep\")\n\nplt.figure(figsize=(15, 5))\nsns.violinplot(y = DF.evening_sleep_duration_hr, x = DF.weekend_name)\nplt.ylabel('Hours')\nplt.xlabel('Weekday\/Weekend')\nplt.title(\"Weekends Vs Evening sleep\")","785eeac4":"plt.figure(figsize=(15,5))\nsns.lineplot(DF.Date, DF.overall_sleep_hours, label='Overall sleep')\nsns.lineplot(DF.Date,DF.overall_awake_hours, label='Overall awake')\nplt.ylabel(\"Hours\")","831c54df":"temp = DF.groupby(['week_no']).agg(noon_avg_sleep = ('noon_sleep_duration_hr', 'mean'),\n                                   evening_avg_sleep = ('evening_sleep_duration_hr', 'mean'),\n                                   night_avg_sleep = ('night_sleep_duration_hr', 'mean'),\n                                   avg_overall_sleep = ('overall_sleep_hours', 'mean')).reset_index()\n\nfig, ax = plt.subplots(nrows=2, ncols=2, figsize=(17.5,5))\nax1 = sns.lineplot(temp.week_no, temp.noon_avg_sleep, ax=ax[0,0], color='green')\nax1 = sns.scatterplot(temp.week_no, temp.noon_avg_sleep, ax=ax[0,0], color='green')\nax2 = sns.lineplot(temp.week_no, temp.evening_avg_sleep, ax=ax[0,1], color='violet')\nax2 = sns.scatterplot(temp.week_no, temp.evening_avg_sleep, ax=ax[0,1], color='blue')\nax3 = sns.lineplot(temp.week_no, temp.night_avg_sleep, ax=ax[1,0], color='orange')\nax3 = sns.scatterplot(temp.week_no, temp.night_avg_sleep, ax=ax[1,0], color='orange')\nax4 = sns.lineplot(temp.week_no, temp.avg_overall_sleep, ax=ax[1,1], color='red')\nax4 = sns.scatterplot(temp.week_no, temp.avg_overall_sleep, ax=ax[1,1], color='red')\n\nax1.tick_params(labelbottom=False) \nax1.set(ylabel='Noon avg.sleep hrs')\nax1.set(xlabel='')\n\nax2.tick_params(labelbottom=False) \nax2.set(ylabel='Evening avg.sleep hrs')\nax2.set(xlabel='')\n\nax3.set(ylabel='Night avg.sleep hrs')\nax3.set(xlabel='Week no')\n\nax4.set(ylabel='Overall avg.sleep hrs')\nax4.set(xlabel='Week no')","bd1517a3":"start = datetime(2020, 11, 4, 0)\ntime_period = []\n\ntime_period.append(start.strftime(\"%H:%M:%S\"))\nfor i in range((24*4)-1):\n    start = start + timedelta(minutes=15)\n    time_period.append(start.strftime(\"%H:%M:%S\"))\n    \ntime_period = np.array(time_period)","9c8b9bcb":"def start_stop(start, stop, time_period):\n    start_temp = np.array(start)\n    end_temp = np.array(stop)\n    \n    greater = (time_period >= start_temp).astype('int')\n    lesser = (time_period <= end_temp).astype('int')\n    common = greater + lesser\n    \n    return common\n\ntime_period = np.array(time_period)\n\ncols = ['Date', 'noon_sleep_time', 'noon_wake_up_time', 'evening_sleep_time', \n        'evening_wake_up_time', 'night_sleep_time', 'morning_wake_up']\n\nDF[cols] = DF[cols].astype('str')\n\nfinal_overall = np.empty(shape=(1, len(time_period)))\nfor i, data in DF.loc[:, cols].iterrows():\n    \n    noon_duration = start_stop(start=data['noon_sleep_time'], stop=data['noon_wake_up_time'], time_period=time_period)\n    evening_duration = start_stop(start=data['evening_sleep_time'], stop=data['evening_wake_up_time'], time_period=time_period)\n    night_duration = start_stop(start=data['night_sleep_time'], stop=data['morning_wake_up'], time_period=time_period)\n    \n    night_duration = np.where(night_duration==1, 2, 1)\n    noon_duration = np.where(noon_duration==2, 4, 1)\n    evening_duration = np.where(evening_duration==2, 5, 1)\n    overall = (noon_duration) + (evening_duration) + (night_duration)\n    overall = np.where(overall==4, 1, np.where(overall==3, 0, np.where(overall==6, 2, np.where(overall==7, 3, 4))))\n    \n    overall = overall.reshape(-1, len(time_period))\n    final_overall = np.append(final_overall, overall, axis=0)\n\n    final = DF[['Date']].join(pd.DataFrame((final_overall), columns=time_period))\nfinal = final.set_index('Date')","291130ba":"plt.figure(figsize=(20, 10))\nax = sns.heatmap(final,\n                 cmap = 'ocean_r',\n                 alpha = 0.1,\n                )\nax.set_yticklabels(final.index.astype('str').str.slice(0, 10))\n\ncolorbar = ax.collections[0].colorbar\ncolorbar.set_ticks([0, 1, 2, 3])\ncolorbar.set_ticklabels(['Awake', 'Night sleep', 'Noon sleep', 'Evening sleep'])\nplt.xlabel(\"Time\")\nplt.ylabel(\"Date\")\nplt.title(\"Daily sleep analysis\")\nplt.show()\n","f70a5859":"corr_noon_evening = np.corrcoef(DF.noon_sleep_duration_hr, DF.evening_sleep_duration_hr)[0,1]\ncorr_evening_night = np.corrcoef(DF.evening_sleep_duration_hr, DF.night_sleep_duration_hr)[0,1]\ncorr_night_noon = np.corrcoef(DF.night_sleep_duration_hr, DF.noon_sleep_duration_hr)[0,1]\n\nfig, ax = plt.subplots(nrows=1, ncols=3, figsize=(20,4))\n# figsize=(5,5)\n\nax1 = sns.scatterplot(DF.noon_sleep_duration_hr, DF.evening_sleep_duration_hr, ax=ax[0])\nax2 = sns.scatterplot(DF.evening_sleep_duration_hr, DF.night_sleep_duration_hr, ax=ax[1])\nax3 = sns.scatterplot(DF.night_sleep_duration_hr, DF.noon_sleep_duration_hr, ax=ax[2])\n\nax1.title.set_text(f\"Noon Vs Evening \\n corr.coeff: {corr_noon_evening}\")\nax1.set_xlabel(\"Noon sleep duration\")\nax1.set_ylabel(\"Evening sleep duration\")\n\nax2.title.set_text(f\"Evening Vs Night  \\n corr.coeff: {corr_evening_night}\")\nax2.set_xlabel(\"Evening sleep duration\")\nax2.set_ylabel(\"Night sleep duration\")\n\nax3.title.set_text(f\"Night Vs Noon  \\n corr.coeff: {corr_night_noon}\")\nax3.set_xlabel(\"Night sleep duration\")\nax3.set_ylabel(\"Noon sleep duration\")\n","a8dfc62c":"plt.figure(figsize=(15, 5))\nsns.distplot(DF['overall_sleep_hours'], hist=False, label='sleep hours')\nsns.distplot(DF['overall_awake_hours'], hist=False, label='awake hours')\nplt.xlabel(\"Hours\")\nplt.show()","2b1405b7":"##### Let's check how her overall avg. sleep duration has been Week-On-Week.","152bc491":"##### Let's see how her overall sleep and awake pattern looks like as she is getting older day by day","045026bd":"##### Well not much of a difference as expected. ","850f719e":"##### I like this plot and at the same time her evening and noon sleeps are spread across and do not fall in a straight line. There are 2 days in which her Noon naps have lasted not more than 15mins. Think we should work towards following a scheduled nap times.","490123b2":"##### Let's do similar plot for Noon and evening sleep duration","4e11299c":"##### Nah!!! it does not seem to have any correlation.","ebc94ad7":"##### Let's move ahead to our final plot. Let's plot her overall sleep and awake duration together and look at the distribution.","12ecb2bc":"##### Well except for her noon avg.sleep hours, her evening, night and overall avg. sleep hours shows a declining trend, I wish I had enough data to confirm if the pattern continues. That's okay let me live with it for now","78811bb4":"##### Nothing quite interesting in this. Okay let's move ahead","1ef4c55e":"###### Let me try to summarize all of them into one single heat map.","4f525b13":"##### Okay moving on to her night sleep distribution during the weekdays and weekend","10f42768":"##### Okay moving on to see what's her daily sleep patterns along with weekday and weekend comparison looks like. I know this sounds crazy how can weekend and weekday will have anything to do with a 10-months old sleeping pattern. But this is all the data I have and let's me be crazy with what I have :D","d7817a33":"##### The plot looks cool, but at the sametime we all know why her sleep and awake line looks like a mirror image of each other :D","7c569929":"##### Its weird and interesting to see that she was able to sleep consisitently for 10:30hrs on Tuesdays. hmmm what's happening on Tuesdays!!!! ?","0c564646":"##### Let us check if there is any correlation between the morning, noon and night sleep duration","3e3ca770":"#### Let's begin with creating some features from the available data to expand our analysis.\n* Calculate the sleep duration of her noon nap, evening nap and over-night sleep\n* Find the day of the week and if it's a weekend or not and also the week no.\n* Find the hour of the day when she goes to sleep and wakes up for each her naps.\n* Finally her overall duration she was asleep and awake for each day","182e56b0":"###### Hmmmm.... her night sleeping hours is good with an avg of 10.15hrs and evening nap with 1.4hrs on average is kind of okay. But her noon naps are pretty short with an average of 45-50 mins which isn't that great.","e5a7fcb9":"##### Wow what a close to perfect normal distibution of sleep and awake hours. I wish I could also have a similar sleep and awake hours. Don't we :p ??? \n##### With this we come to the end of my analysis and I enjoyed working with some real data that I was able to collect"}}