{"cell_type":{"94215d41":"code","6565fcfc":"code","eeff372a":"code","0e3be643":"code","434c13be":"code","7f5f0f7d":"code","660484e3":"code","25e2f3d6":"code","d61460f0":"code","c975dabc":"code","027294e6":"code","ebf52b11":"code","c50d4799":"code","c2a6a89b":"code","b18cd748":"code","c121162f":"code","9d0e4673":"code","25777f71":"code","eab1ef0a":"code","7f71f655":"code","d279f478":"code","f412a133":"code","fba0a623":"code","3f40fbbd":"code","6fa70175":"code","a887eb30":"code","08448349":"code","16f630f0":"code","3c3532c5":"code","a93a129e":"code","31a7c8c9":"code","d1141b6d":"code","fb4e877f":"code","f3a61b12":"code","acb5f8f6":"code","7bf2770b":"code","d9365a22":"code","b1de9700":"code","d9d18b5c":"code","1722fd3a":"markdown","5688dcd0":"markdown","679b5aaa":"markdown","4adad214":"markdown","d5842fb2":"markdown","3c5b84db":"markdown","8162240b":"markdown","efde4115":"markdown","ff73b07f":"markdown","a178cd0e":"markdown","e23c4847":"markdown"},"source":{"94215d41":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import  LabelEncoder\nfrom sklearn.decomposition import PCA\nimport plotly.express as px","6565fcfc":"df = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep='\\t')\ndf","eeff372a":"from datetime import date\nyear = date.today().year\nage= year - df['Year_Birth'] \ndf['Age'] = age\n\n\ndf.Dt_Customer = pd.to_datetime(df.Dt_Customer)","0e3be643":"df = df.drop(columns=[\"ID\", \"Year_Birth\",\"Recency\",\t\"MntWines\",\t\"MntFruits\",\t\"MntMeatProducts\",\t\"MntFishProducts\",\t\"MntSweetProducts\",\t\"MntGoldProds\", \"NumWebPurchases\",\t\"NumCatalogPurchases\",\t\"NumStorePurchases\",\t\"NumWebVisitsMonth\", \"Complain\",\t\"Z_CostContact\",\t\"Z_Revenue\",\t\"Response\"]) ","434c13be":"df.head()","7f5f0f7d":"df.isna().sum(axis=0)","660484e3":"grafico = px.box(df, y='Income')\ngrafico.show()","25e2f3d6":"df.query(\"Income > 140000\") ","d61460f0":"df = df.drop([164,617,655,687,1300,1653,2132,2233])","c975dabc":"df.isnull().sum()","027294e6":"df['Income'].fillna(df['Income'].mean(), inplace = True)","ebf52b11":"sns.heatmap(df.isnull());","c50d4799":"grafico = px.box(df, y='Age')\ngrafico.show()","c2a6a89b":"df.loc[df['Age'] > 81]","b18cd748":"df = df.drop([192,239,339])","c121162f":"correlations = df.corr()\nf, ax = plt.subplots(figsize = (15,15))\nsns.heatmap(correlations, annot=True)\ncorrelations.round(2);","9d0e4673":"Plot1 = ['Education',\t'Marital_Status',\t'Income',\t'Kidhome',\t'Teenhome',\t'Dt_Customer',\t'NumDealsPurchases',\t'AcceptedCmp3',\t'AcceptedCmp4',\t'AcceptedCmp5',\t'AcceptedCmp1',\t'AcceptedCmp2',\t'Age']\nsns.pairplot(df[Plot1], hue = 'Income')","25777f71":"df['Young'] = df.apply(lambda x: x['Teenhome'] + x['Kidhome'], axis=1)\ndf = df.drop(columns=['Kidhome',\t'Teenhome']) \ndf.head(2)","eab1ef0a":"Plot1 = ['Education',\t'Marital_Status',\t'Income',\t'Dt_Customer',\t'NumDealsPurchases',\t'AcceptedCmp3',\t'AcceptedCmp4',\t'AcceptedCmp5',\t'AcceptedCmp1',\t'AcceptedCmp2',\t'Age', 'Young']\nsns.pairplot(df[Plot1], hue = 'Young')","7f71f655":"plt.figure(figsize=(10,6))\nsns.countplot(y=\"Young\", data=df, order=df[\"Young\"].value_counts().index)\nplt.title(\"numbers of children\");","d279f478":"mk = LabelEncoder()\ndf['Education'] = mk.fit_transform(df['Education'])\ndf['Marital_Status'] = mk.fit_transform(df['Marital_Status'])\ndf['Dt_Customer'] = mk.fit_transform(df['Dt_Customer'])","f412a133":"df.head(2)","fba0a623":"scaler = StandardScaler()                                         \ndf_scaled = scaler.fit_transform(df)","3f40fbbd":"type(df_scaled)","6fa70175":"min(df_scaled[0]), max(df_scaled[0]) ","a887eb30":"df_scaled","08448349":"wcss_1 = []                                     \nrange_values = range(1, 10)                    \nfor i in range_values:                        \n  kmeans = KMeans(n_clusters=i)                 \n  kmeans.fit(df_scaled)            \n  wcss_1.append(kmeans.inertia_)  ","16f630f0":"print(wcss_1) ","3c3532c5":"plt.figure(figsize=(20,15))\nplt.plot(wcss_1, '-o',)                              \nplt.xlabel('Clusters',)\nplt.ylabel('WCSS');","a93a129e":"kmeans = KMeans(n_clusters=5)           \nkmeans.fit(df_scaled)         \nlabels = kmeans.labels_","31a7c8c9":"labels, len(labels) ","d1141b6d":"np.unique(labels, return_counts=True)","fb4e877f":"cluster_centers = pd.DataFrame(data = kmeans.cluster_centers_, columns = [df.columns])\ncluster_centers","f3a61b12":"cluster_centers = scaler.inverse_transform(cluster_centers)\ncluster_centers = pd.DataFrame(data = cluster_centers, columns = [df.columns])\ncluster_centers","acb5f8f6":"labels, len(labels)","7bf2770b":"df_mk_cluster = pd.concat([df, pd.DataFrame({'cluster': labels})], axis = 1) \ndf_mk_cluster.head()","d9365a22":"sns.set(rc={'axes.facecolor':'black', 'figure.facecolor':'black', 'axes.grid' : False, 'font.family': 'Ubuntu'})\n\nfor i in df_mk_cluster:\n    g = sns.FacetGrid(df_mk_cluster, col = \"cluster\", hue = \"cluster\", palette = \"Set2\")\n    g.map(plt.hist, i, bins=10, ec=\"k\") \n    g.set_xticklabels(rotation=30, color = 'white')\n    g.set_yticklabels(color = 'white')\n    g.set_xlabels(size=15, color = 'white')\n    g.set_titles(size=15, color = '#FFC300', fontweight=\"bold\")\n    g.fig.set_figheight(5);","b1de9700":"import matplotlib as mpl","d9d18b5c":"clusters_count = df_mk_cluster['cluster'].value_counts()                      \nclusters_count = clusters_count.to_frame().reset_index()                      \nclusters_count.columns = ['clusters', 'count']                                \nclusters_count = clusters_count.sort_values('clusters', ascending = True)     \n\nlabels = [\n        \"0\", \n        \"1\", \n        \"2\", \n        \"3\",\n        \"4\"\n        ]\n\n\nplt.figure(figsize=(12,8))\n\nmpl.rcParams['font.size'] = 17\ncolors = sns.color_palette('Set2')[0:5]\n\nplt.pie(clusters_count['count'], \n        explode=(0.05, 0.05, 0.05, 0.05, 0.05), \n        labels = labels,\n        colors= colors,\n        autopct='%1.1f%%',\n        textprops = dict(color =\"white\", fontsize=19),\n        counterclock = False,\n        startangle=180,\n        wedgeprops={\"edgecolor\":\"gray\",'linewidth':1}\n        )\n\nplt.axis('equal')\n\n\nplt.text(-0.8, 1.2, \"Clusters\", size=30, color=\"#FFC300\", fontweight=\"bold\")\nplt.text(-0.0, 1.2, \"Distribution\", size=30, color=\"white\")\n\n\nplt.text(1.1, -1.25, \"@miguelfzzz\", fontsize=12, ha=\"right\", color='lightgray', fontweight=\"bold\")\n\nplt.show();","1722fd3a":"# **Introdu\u00e7\u00e3o**\n\nEm meus casos de estudo mantenho a escrita no idioma ingl\u00eas por ser o utilizado no Kaggle e os mantenho tamb\u00e9m em portugu\u00eas devido ao fato da minha l\u00edngua nativa ser o portugu\u00eas brasileiro, assim podemos compartilhar mais conhecimento e experi\u00eancias no Kaggle com nossos colegas brasileiros.\n\nObrigado!!\n\nConforme dataset a an\u00e1lise da personalidade do cliente ajuda a empresa a adequar o seu produto com base em seus clientes de diferentes tipos de segmentos de clientes. Por exemplo, em vez de gastar dinheiro para comercializar um novo produto para cada cliente independentemente no banco de dados da empresa,a empresa pode analisar qual segmento de cliente tem maior probabilidade de comprar o produto e, em seguida, comercializar o aquele produto apenas no especifico grupo.\n\nO caso em estudo possui um dataset bem amplo, mas n\u00f3s iremos dividi-lo em tr\u00eas partes, faremos tr\u00eas estudos indepedentes, pois h\u00e1 tr\u00eas caracateristicas bem distintas entre os grupos, pois uma classe de atributos poder\u00e1 influ\u00eanciar com seus dados em outra e poder\u00e1 comprometer o resultado do algoritimo.\n\nNuma eventual campanha de marketing poder\u00e1 a empresa utilizar-se dos resultados dos tr\u00eas em conjunto para direcionar o tipo de produto a cada cliente e oferecer da melhor forma ao cliente.\n\nPoderiamos utilizar tamb\u00e9m outro algoritimo, mas nesse caso vamos identificar os grupos dando continuidade ao estudo de caso da parte 1;\n\nN\u00f3s teremos como base os atributos pessoais dos clientes que se relacionar\u00e1 com os outras tr\u00eas classes:\n\n                Parte 1 - clusters e Prophet;\n                Parte 2 -  Em quais campanhas de publicidade o cliente respondeu, ou n\u00e3o?\n                Parte 3 -  Formas utilizada para compras.\n                \n                \n                \n# **Introduction**\n\nIn my case studies I keep writing in English because it is used in Kaggle and I also keep them in Portuguese because my native language is Brazilian Portuguese, so we can share more knowledge and experiences in Kaggle with our Brazilian colleagues.\n\nThank you!!\n\nAccording to dataset, the analysis of the customer's personality helps the company to adapt its product based on its customers from different types of customer segments. For example, instead of spending money to market a new product to each customer independently in the company's database, the company can analyze which customer segment is most likely to buy the product and then market that product only in the specific group.\n\nThe case under study has a very broad dataset, but we will divide it into three parts, we will do three independent studies, as there are three very distinct characteristics between the groups, as one attribute class may influence its data in another and may compromise the result of the algorithm.\n\nIn an eventual marketing campaign, the company may use the results of the three together to direct the type of product to each customer and offer the best way to the customer.\n\nWe could also use another algorithm, but in this case we will identify the groups continuing the case study in part 1;\n\nWe will be based on the personal attributes of the customers that will relate to the other three classes:\n\n            Part 1 - clusters and Prophet;\n            Part 2 - Which advertising campaigns did the customer respond to, or not?\n            Part 3 - Forms used for shopping.","5688dcd0":"Esses s\u00e3o os 5 grupos que respondem as ofertas, pode o estabelecimento fazer uma an\u00e1lise em conjunto com o estudo part 1, assim poder\u00e1 verificar al\u00e9m de corresponder as ofertas quais s\u00e3o os produtos de maior interesse.\n\nSe fossemos aprofundar mais o estudo poderiamos utilizar um algoritimo para ver se o consumidor ir\u00e1 ou n\u00e3o corresponder a tal oferta e tal produto, podendo as ofertas ser ainda mais direcionadas.\n\nThese are the 5 groups that respond to the offers, the establishment can carry out an analysis in conjunction with the study part 1, so it will be able to verify, in addition to matching the offers, which products are of greatest interest.\n\nIf we were to go deeper into the study, we could use an algorithm to see whether or not the consumer will respond to such an offer and that product, and the offers can be even more targeted.\n","679b5aaa":"# **Segunda Parte Clientes x o cliente aceitou a oferta\n\n# Second Party Customers x customer accepted the offer**","4adad214":"# **Analisando e Tratando os Dados\n# Analyzing and Handling Data**","d5842fb2":"**Atributos\n\n**People****\n\nID: Customer's unique identifier\n\nYear_Birth: Customer's birth year\n\nEducation: Customer's education level\n\nMarital_Status: Customer's marital status\n\nIncome: Customer's yearly household income\n\nKidhome: Number of children in customer's household\n\nTeenhome: Number of teenagers in customer's household\n\nDt_Customer: Date of customer's enrollment with the company\n\nRecency: Number of days since customer's last purchase\n\nComplain: 1 if customer complained in the last 2 years, 0 otherwise\n\n**Products => Part 1**\n\nMntWines: Amount spent on wine in last 2 years\n\nMntFruits: Amount spent on fruits in last 2 years\n\nMntMeatProducts: Amount spent on meat in last 2 years\n\nMntFishProducts: Amount spent on fish in last 2 years\n\nMntSweetProducts: Amount spent on sweets in last 2 years\n\nMntGoldProds: Amount spent on gold in last 2 years\n\n**Promotion => Part 2**\n\nNumDealsPurchases: Number of purchases made with a discount\n\nAcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n\nAcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n\nAcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n\nAcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n\nAcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n\nResponse: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n**Place => Part 3**\n\nNumWebPurchases: Number of purchases made through the company\u2019s web site\n\nNumCatalogPurchases: Number of purchases made using a catalogue\n\nNumStorePurchases: Number of purchases made directly in stores\n\nNumWebVisitsMonth: Number of visits to company\u2019s web site in the last month Target","3c5b84db":"Vamos manter apenas os atributos que podem fazer rela\u00e7\u00e3o direta entre consumidor e ofertas.\n\nWe will only keep the attributes that can make a direct relationship between consumers and offer.","8162240b":"Afim de ter uma an\u00e1lise entre crian\u00e7as e adolecentes, vamos somar as duas colunas e obter apenas uma como jovens.\n\nIn order to have an analysis between children and adolescents, let's add the two columns together and get only one as young people.","efde4115":"# **Pr\u00e9 Processamento\n# \n# **Pre-Processing**","ff73b07f":"\u00c9 interessante observamos a correla\u00e7\u00e3o dos grupos com as ofertas, o estabelecimento pode verificar o que foi ofertado em determinado dia que atingiu determinado grupo, tem ofertas que atingiu o grupo com poder aquisitivo maior e tem oferta que atingiu os consumidores com crian\u00e7as.\n\nIt is interesting to observe the correlation of the groups with the offers, the establishment can check what was offered on a given day that reached a certain group, there are offers that reached the group with greater purchasing power, and there are offers that reached consumers with children.","a178cd0e":"# **Analise dos dados em gr\u00e1ficos\n# \n# **Analysis of data in graphs****","e23c4847":"Vamos transforma a data de nascimento dos nossos clientes em idade em outra coluna e vamos excluir a coluna 'Year_Birth'.\n\nVamos tramb\u00e9m transformar a da de registro dos consumirores de objeto para date time 64;\n\nLet's turn our clients' birthdate by age into another column and let's delete the 'Year_Birth' column.\n\nLet's also transform the registration data of the object consumers to date time 64;"}}