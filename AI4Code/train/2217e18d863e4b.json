{"cell_type":{"25bf36fc":"code","65e06269":"code","deaa7578":"code","fedd2af3":"code","bf8ee936":"code","2a97745a":"code","e4affb25":"code","68a24d83":"code","4b4c9b5f":"code","de1ab426":"code","39b55573":"code","ca9dd823":"code","46eed7ce":"code","2b15ee5d":"markdown"},"source":{"25bf36fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport tensorflow as tf\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.preprocessing import MinMaxScaler\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","65e06269":"wine_data = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv').astype('float32')\nwine_data.head()","deaa7578":"wine_data.shape, type(wine_data), tf.size(wine_data), wine_data.dtypes","fedd2af3":"x = wine_data.drop(['quality'], axis=1)\nx.head()","bf8ee936":"x.columns","2a97745a":"y = wine_data['quality']\ny.head()","e4affb25":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)","68a24d83":"x_train.shape, x_test.shape, y_train.shape, y_test.shape","4b4c9b5f":"ct = make_column_transformer(\n  (MinMaxScaler(), ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n       'pH', 'sulphates', 'alcohol']),\n)\n\nct.fit(x_train)","de1ab426":"x_train_normalized = ct.transform(x_train)\nx_test_normalized = ct.transform(x_test)","39b55573":"model = tf.keras.Sequential([\n  tf.keras.layers.Dense(100, activation='relu'),\n  tf.keras.layers.Dropout(0.2),\n  tf.keras.layers.Dense(100, activation='relu'),\n  tf.keras.layers.Dropout(0.2),\n  tf.keras.layers.Dense(100, activation='relu'),\n  tf.keras.layers.Dropout(0.2),\n  tf.keras.layers.Dense(12, activation='relu'),\n  tf.keras.layers.Dropout(0.1),\n  tf.keras.layers.Dense(1),\n])\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.001), loss=tf.keras.losses.mae, metrics=['mae'])\n\nhistory = model.fit(x_train_normalized, y_train, epochs=700, verbose=0)","ca9dd823":"model.evaluate(x_test_normalized, y_test)","46eed7ce":"pd.DataFrame(history.history).plot()","2b15ee5d":"**The MAE (Mean Absolute Error) of the testing data is 0.4135.**"}}