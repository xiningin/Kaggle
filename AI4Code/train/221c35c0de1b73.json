{"cell_type":{"9fbff39b":"code","af3fc321":"code","8d2eb456":"code","aeefc069":"code","512ece5b":"code","884c4800":"code","b1fda11a":"code","0b66777a":"code","bdaaae75":"code","a1c7ea44":"code","7015b82d":"code","2e65d2e4":"code","7ab57e9b":"code","c3458989":"code","d523cc22":"code","5a60392f":"code","699c474b":"code","2d539981":"code","38e4c4d6":"code","50ac2cc2":"code","a13ef581":"code","98c5a5f4":"code","76597470":"code","f68e1fcc":"code","9b3e75da":"code","bda30bfc":"code","c5125c6e":"code","bf9265f2":"code","a9c36505":"code","156d40ad":"code","56343d4a":"code","376e693e":"code","bd1d9b40":"code","b6d0fed9":"code","8b9e93d6":"code","8b573048":"code","cd8049dd":"code","c8d0bb5c":"code","1e74e68e":"code","713c6b84":"code","3f476b7a":"code","453d59b3":"code","1ab06e27":"code","678fba04":"code","12a60b7a":"code","b27b5fac":"code","daed72b6":"code","03536b53":"code","748f2467":"code","2b5c7597":"code","ca732170":"code","72d1be76":"code","28072bda":"code","13906f51":"code","18e2f230":"code","d1f47a6b":"code","eacb25ef":"code","72e3beaa":"code","de065ee3":"code","e57f28e6":"code","a19249c5":"code","5a99c435":"code","6d586ece":"code","ac7faad1":"code","6e89ee13":"code","73653d6a":"code","8d41d0f0":"code","a7386945":"code","e89bbc43":"code","d155aa0c":"code","59b70c25":"code","e2e2fd16":"markdown","14af4cf5":"markdown","236eb97a":"markdown","e82cfec4":"markdown","86960d50":"markdown","16b57843":"markdown","f430a023":"markdown","3b786948":"markdown","2ad81b2a":"markdown","fecb44ce":"markdown","a32d1140":"markdown","3e361273":"markdown","ec5f3318":"markdown","bcc5f679":"markdown","840d335c":"markdown","4497f08a":"markdown","03e0a3f1":"markdown","ac3c164a":"markdown","2a1c3499":"markdown","cbbbf323":"markdown","908797af":"markdown","01d078cd":"markdown","beafa976":"markdown","f54365da":"markdown","4a6adb5d":"markdown","10d8ae2e":"markdown","69911925":"markdown","7b349df9":"markdown","26a3c747":"markdown","eccb8f5e":"markdown","073b1386":"markdown","e6a79919":"markdown","592a4ac3":"markdown","a03fdc42":"markdown","b4d1afef":"markdown","1fc2369b":"markdown","7db31e9c":"markdown","5b3583d4":"markdown","f3a81ebb":"markdown","94106895":"markdown","8972858d":"markdown","e195937f":"markdown","de80d877":"markdown","fc70fffe":"markdown","d25dfe48":"markdown","adbacffc":"markdown","1014b6ea":"markdown","1f4ef844":"markdown"},"source":{"9fbff39b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","af3fc321":"# importing all the important libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# To get the solutions right below the cell and store\n%matplotlib inline \n\nfrom matplotlib.pyplot import figure\n\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(action = 'ignore')\nimport itertools\nimport math\nimport plotly.express as px","8d2eb456":"# To see the full data display\npd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)","aeefc069":"#reading the 100 spotify music data as music_data\nmusic_data = pd.read_csv(\"..\/input\/top-100-most-streamed-songs-on-spotify\/Top 100 most Streamed - Sheet1.csv\")\nmusic_data.head()","512ece5b":"# Getting the shape of the dataframe\nmusic_data.shape","884c4800":"# Checking the data info and missing values\nmusic_data.info()","b1fda11a":"# Some stats\nmusic_data.describe()","0b66777a":"# Count of songs in a specified year\nmusic_data[\"year\"].value_counts()","bdaaae75":"# Bar graph visualization on Count of songs in a specified year\nfigure(figsize=(10,6), dpi=100)\nmusic_data[\"year\"].value_counts().plot(kind=\"barh\")","a1c7ea44":"# Grouping years\nmusic_data[\"year_span\"] = music_data[\"year\"]\/2000\nyears_group = ['Before 2000', '2000 - 2004', '2005 - 2009', '2010 - 2014', '2015 - 2019', 'After 2019']\nbins = [0, 1, 1.002, 1.0045, 1.007, 1.0095, 2]\n\nmusic_data[\"year_group\"] = pd.cut(music_data[\"year_span\"], bins, labels = years_group)\nmusic_data[\"year_group\"].value_counts()","7015b82d":"# Pie graph visualization on Count of songs in a group of years\nfigure(figsize = (10, 8), dpi=100)\nmusic_data[\"year_group\"].value_counts().plot(kind = 'pie', autopct='%1.1f%%')","2e65d2e4":"# year boxplot - to understand the outlier\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"year\"])\nplt.show()","7ab57e9b":"#Songs which stand as outliers\nmusic_data[music_data[\"year\"] <= 2010]","c3458989":"# Artists and No. of songs in the top 100 Spotify music\nmusic_data[\"artist\"].value_counts()","d523cc22":"# No of artists in the top 100 Spotify music\nlen(music_data[\"artist\"].value_counts())","5a60392f":"# Artists Vs No. of Songs Bar chart\nfigure(figsize = (15,15), dpi=100)\nmusic_data.artist.value_counts().plot(kind = 'barh')\nplt.title(\"Artist Vs Number of Songs\")\nplt.xlabel(\"Number of Songs\")\nplt.ylabel(\"Artist\")","699c474b":"# Number of different Genres in top 100 Spotify music\nlen(music_data[\"top genre\"].value_counts())","2d539981":"# Different Genres Vs Count\nfigure(figsize = (18,12),dpi=90)\nmusic_data[\"top genre\"].value_counts().plot(kind='barh')\nplt.title(\"Top Genre Vs Count\")\nplt.xlabel(\"Count\")\nplt.ylabel(\"Genre\")","38e4c4d6":"four_artists = pd.concat([music_data[music_data[\"artist\"]==\"Post Malone\"],\n                                    music_data[music_data[\"artist\"]==\"Ed Sheeran\"],\n                                    music_data[music_data[\"artist\"]==\"Imagine Dragons\"],\n                                    music_data[music_data[\"artist\"]==\"The Weeknd\"]])\nfour_artists","50ac2cc2":"Top_4_favourit_artists = four_artists","a13ef581":"# Top four favourit artists songs released span\nfigure(figsize = (10, 8), dpi=100)\nTop_4_favourit_artists[\"year_group\"].value_counts().plot(kind = 'pie', autopct='%1.1f%%')","98c5a5f4":"# Top four favourit artists share in the best releases span 2015-2019\nfigure(figsize = (10, 8), dpi=100)\nTop_4_favourit_artists[\"artist\"].value_counts().plot(kind = 'pie', autopct='%1.0f%%' )","76597470":"# All features list\nfeatures_list = list(music_data.columns)","f68e1fcc":"# Technical Features List\ntech_features_list = features_list[4:] \ntech_features_list","9b3e75da":"music_data[tech_features_list].head()","bda30bfc":"# Pairplot to understand the correlation over popularity\nfigure(figsize=(10,8), dpi= 100)\nsns.pairplot(music_data[tech_features_list], kind=\"hist\", hue=\"popularity\", plot_kws=dict(edgecolor=\"white\", linewidth=2.5))\nsns.color_palette(\"coolwarm\", as_cmap=True)\nplt.show()","c5125c6e":"# Correlation of technical features \nfigure(figsize=(15,12), dpi=100)\nsns.heatmap(music_data[tech_features_list].corr(), cmap = 'Reds', annot = True)","bf9265f2":"# Boxplot of energy \nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"energy\"])\nplt.show()","a9c36505":"# Boxplot of loudness.dB\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"loudness.dB\"])\nplt.show()","156d40ad":"# Boxplot of \"beats.per.minute\"\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"beats.per.minute\"])\nplt.show()","56343d4a":"# Boxplot of acousticness\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"acousticness\"])\nplt.show()","376e693e":"# Song with least energy level and standing out as an outlier\nmusic_data[music_data[\"energy\"] == music_data[\"energy\"].min()]","bd1d9b40":"# Song with least loudness.dB and standing out as an outlier\nmusic_data[music_data[\"loudness.dB\"] == music_data[\"loudness.dB\"].min()]","b6d0fed9":"music_data[music_data[\"acousticness\"] == music_data[\"acousticness\"].max()]","8b9e93d6":"# Creating high energy, high loudness and high beats per minute datasets over median scale\nhigh_energy_songs = music_data[music_data[\"energy\"] >= music_data[\"energy\"].median()]\nhigh_loudness_songs = music_data[music_data[\"loudness.dB\"] >= music_data[\"loudness.dB\"].median()]\nhigh_beat_songs = music_data[music_data[\"beats.per.minute\"] >= music_data[\"beats.per.minute\"].median()]","8b573048":"# Merging high energy, high loudness and high beats per minute datasets\nenergy_loudness = high_energy_songs.merge(high_loudness_songs, how='inner', indicator = False)\nenergy_loudness_beat = energy_loudness.merge(high_beat_songs, how='inner', indicator = False)\nenergy_loudness_beat","cd8049dd":"energy_loudness_beat.describe()","c8d0bb5c":"energy_loudness_beat[\"top genre\"].value_counts()","1e74e68e":"# Understanding acoustic songs with high energy, loudness and beats\nplt.figure(figsize = [5,5])\nsns.boxplot(x= energy_loudness_beat[\"acousticness\"])\nplt.show()","713c6b84":"# Song with high acousticness and high energy, loudness and beats\nenergy_loudness_beat[energy_loudness_beat[\"acousticness\"] == energy_loudness_beat[\"acousticness\"].max()]","3f476b7a":"# List of all songs with high acousticness and high energy, loudness and beats\nhigh_acousticness_songs = music_data[music_data[\"acousticness\"] >= music_data[\"acousticness\"].median()]\nenergy_loudness_beat_acousticness = energy_loudness_beat.merge(high_acousticness_songs, how='inner', indicator = False)\nenergy_loudness_beat_acousticness","453d59b3":"# Boxplot of danceability of songs\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"danceability\"])\nplt.show()","1ab06e27":"# Boxplot of valance of songs\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"valance\"])\nplt.show()","678fba04":"# Boxplot of length of songs\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"length\"])\nplt.show()","12a60b7a":"# Boxplot of year_span of songs\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"year_span\"])\nplt.show()","b27b5fac":"sns.displot(data = music_data[['beats.per.minute',\n 'energy',\n 'danceability',\n 'loudness.dB',\n 'liveness',\n 'valance',\n 'length',\n 'acousticness',\n 'speechiness']],  kind = 'kde', palette=sns.color_palette('bright')[:9])","daed72b6":"# Get mean and Standard deviation using describe\nmusic_data.describe()","03536b53":"# Distplot of beats.per.minute\nsns.distplot(music_data[\"beats.per.minute\"])","748f2467":"#Finding the 90% confidnce interval of \"beats.per.minute\"\nx_bpm_all = music_data[\"beats.per.minute\"].mean()\nsigma_bpm_all = music_data[\"beats.per.minute\"].std()\nn_all = len(music_data[\"beats.per.minute\"])\nz= 1.645\nlower_bound_bpm_all = x_bpm_all - ((z * sigma_bpm_all) \/ math.sqrt(n_all))\nupper_bound_bpm_all = x_bpm_all + ((z * sigma_bpm_all) \/ math.sqrt(n_all))\n\nprint(\"With 90% confidence, we can say that the beats.per.minute of the song should be in between : \", lower_bound_bpm_all, \"and\", upper_bound_bpm_all, \"to be in the top 100 Spotify popular songs\" )","2b5c7597":"# Distplot of length\nsns.distplot(music_data[\"length\"])","ca732170":"#Finding the 90% confidnce interval of \"length\"\nimport math\nx_length_all = music_data[\"length\"].mean()\nsigma_length_all = music_data[\"length\"].std()\nn_all = len(music_data[\"length\"])\nz= 1.645\nlower_bound_length_all = x_length_all - ((z * sigma_length_all) \/ math.sqrt(n_all))\nupper_bound_length_all = x_length_all + ((z * sigma_length_all) \/ math.sqrt(n_all))\n\nprint(\"With 90% confidence, we can say that the length of the song should be in between : \", lower_bound_length_all, \"and\", upper_bound_length_all, \"to be in top 100 spotify popular songs\" )","72d1be76":"# High danceability, valance songs (median scale)\nhigh_danceability_songs = music_data[music_data[\"danceability\"] >= music_data[\"danceability\"].median()]\nhigh_valance_songs = music_data[music_data[\"valance\"] >= music_data[\"valance\"].median()]\ndanceability_valance = high_danceability_songs.merge(high_valance_songs, how='inner', indicator = False)\ndanceability_valance.head()","28072bda":"danceability_valance.describe()","13906f51":"# Distplot of beats.per.minute high danceability and valance\nsns.distplot(danceability_valance[\"beats.per.minute\"])","18e2f230":"# 90% confidence interval of beats.per.minute of a song being popular and high in valance and danceability\nx_bpm_danceability_valance = danceability_valance[\"beats.per.minute\"].mean()\nsigma_bpm_danceability_valance = danceability_valance[\"beats.per.minute\"].std()\nn_danceability_valance = len(danceability_valance[\"beats.per.minute\"])\nz= 1.645\nlower_bound_bpm_danceability_valance = x_bpm_danceability_valance - ((z * sigma_bpm_danceability_valance) \/ math.sqrt(n_danceability_valance))\nupper_bound_bpm_danceability_valance = x_bpm_danceability_valance + ((z * sigma_bpm_danceability_valance) \/ math.sqrt(n_danceability_valance))\n\nprint(\"With 90% confidence, we can say that the beats.per.minute of the song should be in between : \", \n      lower_bound_bpm_danceability_valance, \"and\", upper_bound_bpm_danceability_valance, \n     \"to be popular with high danceability and valance\")","d1f47a6b":"# Distplot of length high danceability and valance\nsns.distplot(danceability_valance[\"length\"])","eacb25ef":"# 90% confidence interval of length of a song being popular and high in valance and danceability\nx_length_danceability_valance = danceability_valance[\"length\"].mean()\nsigma_length_danceability_valance = danceability_valance[\"length\"].std()\nn_danceability_valance = len(danceability_valance[\"length\"])\nz= 1.645\nlower_bound_length_danceability_valance = x_length_danceability_valance - ((z * sigma_length_danceability_valance) \/ math.sqrt(n_danceability_valance))\nupper_bound_length_danceability_valance = x_length_danceability_valance + ((z * sigma_length_danceability_valance) \/ math.sqrt(n_danceability_valance))\n\nprint(\"With 90% confidence, we can say that the length of the song should be in between : \",\n      lower_bound_length_danceability_valance, \"and\", upper_bound_length_danceability_valance, \n      \"to be popular with high danceability and valance\" )","72e3beaa":"#Checking popularity outlier by taking Boxplots\nplt.figure(figsize = [5,5])\nsns.boxplot(x = music_data[\"popularity\"])\nplt.show()","de065ee3":"# Finding out extreamle popular song or people's favourite\nmusic_data[music_data[\"popularity\"] == music_data[\"popularity\"].max()]","e57f28e6":"# understanding least acousticness and popularity\nmusic_data[music_data[\"acousticness\"] == music_data[\"acousticness\"].min()]","a19249c5":"# Popularity outliers in best danceability and valance\nplt.figure(figsize = [5,5])\nsns.boxplot(x = danceability_valance[\"popularity\"])\nplt.show()","5a99c435":"# Popular danceability and valance song\ndanceability_valance[danceability_valance[\"popularity\"] == danceability_valance[\"popularity\"].max()]","6d586ece":"# popular songs by median scale\nthird_fourth_Q_popular = music_data[music_data[\"popularity\"] >=  np.percentile(music_data[\"popularity\"], 50)]\nthird_fourth_Q_popular.head()","ac7faad1":"# Shape of popular songs by median scale\nthird_fourth_Q_popular.shape","6e89ee13":"# Popular songs by fourth quartile scale\nfourth_Q_popular = music_data[music_data[\"popularity\"] >=  np.percentile(music_data[\"popularity\"], 75)]\nfourth_Q_popular.head()","73653d6a":"# Shape of popular songs by fourth quartile\nfourth_Q_popular.shape","8d41d0f0":"tech_features_list.remove('year_group')\ntech_features_list.remove('year_span')\ntech_features_list.remove('popularity')","a7386945":"# Best of each technical parameter and their count in popular songs by median scale\nfeature = []\ncount = []\nfor i in tech_features_list:\n    l = len(fourth_Q_popular[third_fourth_Q_popular[i] >= music_data[i].median()])\n    feature.append(i)\n    count.append(l)\n    x = {'feature':feature, 'count': count }\nx_fourth_Q = pd.DataFrame(x)\nx_fourth_Q","e89bbc43":"# Best of each technical parameter and their count in popular songs by median scale - bar graph\nfigure(figsize = (12,6), dpi=100)\nplt.bar(feature,count)\nplt.title(\"features Vs Number of Songs 3rd & 4th quartile\")\nplt.xlabel(\"feature\")\nplt.ylabel(\"Number of Songs\")\nplt.show()","d155aa0c":"# Best of each technical parameter and their count in popular songs by fourth quarter scale\nfeature = []\ncount = []\nfor i in tech_features_list:\n    l = len(third_fourth_Q_popular[third_fourth_Q_popular[i] >= music_data[i].median()])\n    feature.append(i)\n    count.append(l)\n    x = {'feature':feature, 'count': count }\nx_third_Q = pd.DataFrame(x)\nx_third_Q  ","59b70c25":"# Best of each technical parameter and their count in popular songs by fourth quarter scale - bar graph\nfigure(figsize = (12,6), dpi=100)\nplt.bar(feature,count)\nplt.title(\"features Vs Number of Songs 3rd quartile\")\nplt.xlabel(\"feature\")\nplt.ylabel(\"Number of Songs\")\nplt.show()","e2e2fd16":"## <font color = 'blue'> 7. \"danceability\" vs \"valance\" vs \"length\" vs \"year_span\" <\/font>","14af4cf5":"#### Tasks:\n1. Most popular song (People's favourite song) and observation on it\n2. Most popular song in danceability and valance","236eb97a":"- These top 100 songs are of 64 artists.\n- Out of 100 top songs 7 songs are of artist \"Post Malone\", 5 songs are of \"Ed sheeran\", 4 songs are of \"Imagine Dragons\"and \"The Weeknd\" each, standing with a count in the list","e82cfec4":"## <font color='blue'> 4. Understanding people's favourit artists <\/font>","86960d50":"- \"Billie Eilish\" song titled \"when the party's over\" best acousticness song with very least loudness.dB and energy in the top 100 songs. And fall into the first quarter of beats.per.minute (lowest).\n- Except \"Billie Eilish\" song titled \"when the party's over\", rest of them are of high loudness songs (less than or equal to -11 decibels. And, \"Billie Eilish\" song titled \"when the party's over\" is considered as normal loudness as per ITU standards.","16b57843":"## <font color = 'purple'> High \"energy\" + \"loudness\" + \"beats\" <\/font> ","f430a023":"- These are top 100 songs of 34 genre\n- Out of 100 top songs \"dance pop\" and \"pop\" stands at the top with 28 songs and 11 songs respectively.","3b786948":"## <font color = 'purple'> Most popular Song (danceability and valance) <\/font>","2ad81b2a":"## <font color = 'blue'> 5. Correlation <\/font>","fecb44ce":"- According to Spotify algorithm, the song \"Blinding Lights\" by \"The Weeknd\" has scored extreamly well with 91 popularity, standing at the top. \n- the song \"Blinding Lights\" by \"The Weeknd\" is one of the leastest acoustic song","a32d1140":"## <font color = 'blue'> 6. \"energy\" vs \"loudness.dB\" vs \"acousticness\" vs \"beats.per.minute\" <\/font>","3e361273":"#### Tasks:\n1. Since we have understand that \"energy\", \"loudness.dB\", \"acousticness\" and \"beats.per.minute\" are correlated, taking few more points out of it.\n2. Understanding the songs which stands out as an outlier by taking Boxplot and Observations, which happend as follows:\n    - Best Acoustic song with low energy, low loudness and low beats\n    - Best Acoustic song with low energy, low loudness and low beats\n","ec5f3318":"- None of the 4 artists who has released highest number of songs are not of \"dance pop\" genre, where we know that \"dance pop\" genre attracted more to the audience.\n- The artist \"Ed Sheeran\" stands at 2nd place with \"5\" songs in the top 100 songs and all of these songs are of \"pop\" genre. Where we know that \"pop\" genre is second top in the list.\n- We know that out of 100 top songs 77 songs were released in the time span 2015 - 2019 (last 5 years), all of \"Post Malone\" songs are of this time span only. And there are 4 songs which are released on 2018, where 2018 is the year stands at the top in the list with highest number of songs released.\n- As per the top 100 songs data, \"Post Malone\", \"Imagine Dragons\" and \"The Weeknd\" are the peoples favorite in \"dfw rap\", \"modern rock\" and \"Contemporary\" genres respectively.","bcc5f679":"- The old songs (Before 2000) in the list are remastered(as mentioned in the title) later in 2011 & 2017 and stand in top 100 spotify songs. (With outside data investigation about year remastered)\nin that case it is good to update their years accordinly by the data provider.","840d335c":"## *** Technical Features *** ","4497f08a":"## <font color='blue'> 3. Genre <\/font>","03e0a3f1":"## <font color='blue'> 8. 90% Confidence intervals for \"beats.per.minute\" and \"length\" <\/font>","ac3c164a":"1. 77% of the songs are of year span 2015 - 2019, where 2018 is at the top with 20 songs.\n    - 2015 : 13\n    - 2016 : 16\n    - 2017 : 12\n    - 2018 : 20\n    - 2019 : 16\n        \n2. There are of 64 artists, where \"Post Malone\", \"Ed Sheeran\", \"The Weeknd\" and \"Imagine Dragons\" has top count of releases.\n    - Post Malone     : 7\n    - Ed Sheeran      : 5\n    - The Weeknd      : 4\n    - Imagine Dragons : 4\n        \n3. There are 34 different genres, where dance pop and pop has high count. \n    - dance pop : 28\n    - pop       : 11\n        \n4. \"Post Malone\", \"Ed Sheeran\", \"The Weeknd\" and \"Imagine Dragons\" are the top people's favourite artists having high number of songs in top 100 Spotify music     and of not top genres, even though \"Ed Sheeran\" aongs are of pop, he takes 45% of pop.\n\n5. 75% of top four people's favourit artists songs released in the span 2015 - 2019.\n   20% of top four people's favourit artists songs released in the span 2010 - 2014.\n   5% of top four people's favourit artists songs released after 2021.\n   \n6. \"Post Malone\" has higher number of releases in the span 2015 - 2019 with 35%.\n   \"Ed Sheeran\" has second highest number of releases in the span 2015 - 2019 with 25%.\n   \"Imagine Dragons\" and \"The Weeknd\" has same number of releases in the span 2015 - 2019 with 20%.\n   \n7. Best acousticness song:\n   - \"Billie Eilish\" song titled \"when the party's over\" best acousticness song with very least loudness.dB and energy in the top 100 songs. And fall into the       first quarter of beats.per.minute (lowest - which is normal loudness acording to ITU standards)\n   - \"Hozier\" song titled \"Take Me To Church\" is the best acousticness song even it has high energy, loudness_dB and beats.\n   \n8. 90% Confidence Intervals of beats,per.minute and length.\n   - With 90% confidence, we can say that the beats.per.minute of the song should be in between :  112.45108153881223 and 121.48891846118777 to be in the top      100 Spotify popular songs\n   - With 90% confidence, we can say that the length of the song should be in between :  208.61869685287184 and 220.44130314712817 to be in top 100 spotify        popular songs\n   - With 90% confidence, we can say that the beats.per.minute of the song should be in between :  108.64812312094028 and 120.624604151787 to be popular with      high danceability and valance\n   - With 90% confidence, we can say that the length of the song should be in between :  199.47219813869546 and 217.01265034615304 to be popular with high          danceability and valance\n   \n9. People's favourite songs: \n   - According to Spotify algorithm, the song \"Blinding Lights\" by \"The Weeknd\" has scored extreamly well with 91 popularity, standing at the top. And, one of      the lowest acoustist song.\n   - The song \"Mood(feat.iann dior)\" by artist \"24kGoldn\" is the most popular and valance song, which is released on 2021.\n\n10. Though there is no big difference of giving high priority to a particular technical aspect; loudness and acousticness plays a considerably important role       to make a song more popular in top 100 Spotify music.","2a1c3499":"The average length of a song is of 214.53 minutes with 35.93 standard deviation in the top 100 songs.\n\n- Let's find the interval for the 90% confidence percentage:\n        - mean (x_length_all) = 214.53\n        - Standard Deviation (sigma_length_all) = 35.93\n        - number of songs (n_all) = 100\n        - z - value for 90% (z) = 1.645\n\n\n        - interval = [x_length_all - z * sigma_length_all \/ sqrt(n_all), x_length_all + z * sigma_length_all \/ sqrt(n_all)]","cbbbf323":"-The average beats.per.minute of danceability and valance songs (more like party songs) is of 114.64 minutes of length with 20.91 standard deviation in the top 100 songs\n\n- Let's find the interval for the 90% confidence percentage:\n        - mean (x_bpm_danceability_valance) = 114.64\n        - Standard Deviation (sigma_bpm_danceability_valance) = 20.91\n        - number of songs (n_danceability_valance) = 33\n        - z - value for 90% (z) = 1.645\n\n\n        - interval = [x_bpm_danceability_valance - z * sigma_bpm_danceability_valance \/ sqrt(n_danceability_valance), x_bpm_danceability_valance + z * sigma_bpm_danceability_valance \/ sqrt(n_danceability_valance)]","908797af":"## <font color = 'blue'> 11. Priorities <\/font>","01d078cd":"### Understanding the dataset\n\n- It is a dataset of 100 most streamed songs in the world by Spotify with 14 features\n- Out of 14 features, the first 4 gives the general information about the song\n    - title: Title of the Song\n    - artist: Song Composer\n    - top genre: Conventional Category of the song\n    - year: The year song got released\n--------------------------------------------------------------------------------------------------------------------------------    \n- Out of 14 features, the following 10 gives the technical information about the song\n    - beats.per.minute: The pace of the song measured by the number of beats occured in a minute\n    - energy: How active is this song (A perceptual meaure)\n    - danceability: How suitable is this song for dancing\n    - loudness.dB: As per ITU standards less than or equal -11 db considered as louder, -11 db to -22 db as medium where -14 db                    as normal, greater than or equal to -23 db as quieter\n    - Song recorded with live audience: liveness\n    - How joyful\/ happy\/ cheerful is this song: valence\n    - Duration of the song: length\n    - How acoustic is the song: accousticness\n    - Songs made of more words: speechiness\n    - popularity: As per spotify, the songs which are being palying alot now will have higher popularity than the songs that                       were played alot in the past  ","beafa976":"## <font color = 'purple'> Most popular Song <\/font>","f54365da":"#### Tasks:\n1. Who are all the artists in the top 100 Spotify music and Number of songs of each artist\n2. How many total artists in the top 100 Spotify music\n3. Bar Graph to represent all the artists and Number of songs\n4. Understanding who are the artists stand top in the list with more number of songs","4a6adb5d":" - Out of 100 top songs, 20 songs were released on 2018\n - Out of 100 top songs, 77 songs were released in the time span 2015 - 2019 (last 5 years) - Best releases span.\n - Out of 100 top songs, 13 songs were released in the time span 2010 - 2014.\n - Out of 100 top songs, 6 songs were released After 2019 (The latest in the top 100 list).\n - Since 96 songs are of 2010 - 2021, Song released before may stand as outlier.\n - Out of 100 top songs, only 2 songs are from second half of 20th century and the rest 98 are from 21 st century","10d8ae2e":"## <font color='blue'> 2. Artists <\/font>","69911925":"## <font color = 'blue'> 1. Year <\/font>","7b349df9":"- \"Hozier\" song titled \"Take Me To Church\" is the best acousticness song even it has high energy, loudness_dB and beats.","26a3c747":"#### Tasks:\n1. We know that \"danceability\" vs \"valance\" vs \"length\" vs \"year_span\" are moderately correlated, let's see we can take any valueble information out of it.","eccb8f5e":"#### Tasks:\n1. Most popular songs by median and their technical parameters importance\n2. Most popular songs by median and their technical parameters importance - bar graph\n3. Most popular songs by fourth quartile and their technical parameters importance\n4. Most popular songs by fourth quartile and their technical parameters importance - bar graph","073b1386":"- 75% of top four people's favourit artists songs released in the span 2015 - 2019.\n- 20% of top four people's favourit artists songs released in the span 2010 - 2014.\n- 5% of top four people's favourit artists songs released after 2021.","e6a79919":"## <font color='blue'> 9. Understanding High danceability songs and High valance songs <\/font>","592a4ac3":"- \"loudness.dB\" and \"energy\" has a strong positive linear relation (+0.73)\n- \"acousticness\" and \"energy\" has a strong negative linear relation (-0.71)\n- \"valance\" and \"danceability\" has a moderate positive linear relation (0.48)\n- \"year_span\" and \"danceability\" has a moderate positive linear relation (0.39)\n- \"energy\" and \"beats.per.minute\" has a moderate positive linear relation (0.32)\n- \"acousticness\" and \"loudness.dB\" has a moderate negative linear relation (-0.54)\n- \"year_span\" and \"length\" has a moderate negative linear relation (-0.51)\n- \"acousticness\" and \"beats.per.minute\" has a moderate negative linear relation (-0.3)","a03fdc42":"#### Tasks:\n1. Number of Genres in the top 100 list\n2. Different Genres in the list and Number of songs from each genre\n3. Bar Graph to represent Number of Genres in the list and Number of songs from each genre\n4. Understanding what are the popular genres with the number of songs","b4d1afef":"#### Tasks:\n1. Using Pairplot understand the correlation between features over popularity\n2. Using Heatmap understanding the correlation between the technical features\n3. Understanding which features are highly (or) moderatly correlated in positive and negative direction ","1fc2369b":"### Points i worked on:\n- How old or how latest or which years span most of the songs released?\n- Who are the top 4 people's favourite artists?\n- What are the top 5 people's favourite genres?\n- Understanding the top 4 artists and their genres? Are these top 4 artists songs are of people's favourite genre?\n- Understanding more about Artists - Genre - Year\n-------------------------------------------------------------------------------------------------------------------------------\n- How well the 10 technical features are correlated?\n- Based on correlation Observations: \"energy\" vs \"loudness.dB\" vs \"acousticness\" vs \"beats.per.minute\".\n- Based on correlation Observations: \"danceability: vs \"valance\" vs \"length\" vs \"year_span\".\n- Songs which are high & low in \"energy\", \"danceability\" and \"valance\" \n- How many (or) percentage of songs which are high energy, danceability and valance are popular.(median scale and 3rd quartile scale). [Considering these as positive and good vibe songs]\n- Confidence intervals of beats.per.minute of a song to be in popular list.\n- Confidence intervals of length of a song to be in popular list.\n- Confidence intervals of beats.per.minutes of a song [high energy, danceability and valance] to be in popular list.\n- Confidence intervals of length of a song [high energy, danceability and valance] to be in popular list.\n- What are people's favourite songs or most popular songs?\n- What are people's favourite songs or most popular songs in danceability and valance\n- Understanding that, is there a parameter which plays an important role to become a song popular in top 100 Spotify music?","7db31e9c":"The average beats.per.minutes of a song is of 116.97 minutes with 27.47 standard deviation in the top 100 songs.\n\n- Let's find the interval for the 90% confidence percentage:\n        - mean (x_bpm_all) = 116.97\n        - Standard Deviation (sigma_bpm_all) = 27.47\n        - number of songs (n_all) = 100\n        - z - value for 90% (z) = 1.645\n\n\n        - interval = [x_bpm_all - z * sigma_bpm_all \/ sqrt(n_all), x_bpm_all + z * sigma_bpm_all \/ sqrt(n_all)]","5b3583d4":"#### Tasks:\n1. Understanding the distribution of \"beats.per.minute\" using distplot\n2. Find the 90% Confidence interval of \"beats.per.minute\" of a song to be in popular 100 spotify list\n3. Understanding the distribution of \"length\" using distplot\n4. Find the 90% Confidence interval of \"length\" of a song to be in popular 100 spotify list.","f3a81ebb":"-The average length of danceability and valance songs (more like party songs) is of 208.24 minutes of length with 30.63 standard deviation in the top 100 songs\n\n- Let's find the interval for the 95% confidence percentage:\n        - mean (x_length_danceability_valance) = 208.2424\n        - Standard Deviation (sigma_length_danceability_valance) = 30.63\n        - number of songs (n_danceability_valance) = 33\n        - z - value for 90% (z) = 1.645\n\n\n        - interval = [x_length_danceability_valance - z * sigma_length_danceability_valance \/ sqrt(n_danceability_valance), x_length_danceability_valance + z * sigma_length_danceability_valance \/ sqrt(n_danceability_valance)]","94106895":"## <font color = 'blue'> 12. Conclusions <\/font>","8972858d":"- \"Post Malone\" has higher number of releases in the span 2015 - 2019 with 35%.\n- \"Ed Sheeran\" has second highest number of releases in the span 2015 - 2019 with 25%.\n- \"Imagine Dragons\" and \"The Weeknd\" has same number of releases in the span 2015 - 2019 with 20%.","e195937f":"## <font color='blue'> 10. Popularity <\/font>","de80d877":"#### Tasks: \n1. Understanding people's favourit artists by number of songs in the top 100 Spotify music and by their genre\n2. people's favourit artists and song release year group\n3. Pie Chart for better understanding people's favourit artists and song release year group\n4. We know that 2015 - 2019 is the best release span, How many songs of each people's favourit artist songs are in this span","fc70fffe":"##### Tasks: \n1. Number of songs got released in each year present in the dataframe\n2. Bar Graph to represent Number of songs got released in each year present in the dataframe\n3. Grouping the Years to understand in which year span most of the songs are from\n4. Pie Chart to represent Year group data\n5. Understanding very old songs(Standing as outliers) being in popular, using Box Plot\n6. List of Outliers from year boxplot and observation from it, if any.","d25dfe48":"- A small priority to loudness.dB and acousticness. \n- Every technical aspect has got same priority in top 100 songs. No song necessarily has to be high in a particular aspect","adbacffc":"- The song \"Mood(feat.iann dior)\" by artist \"24kGoldn\" is the most popular and valance song, which is released on 2021.","1014b6ea":"### <font color = 'purple'> Grouping Years - Year Span <\/font>","1f4ef844":"1. Understanding High danceability and Highh valance songs (median scale)\n2. Understanding the distribution of \"beats.per.minute\" using distplot\n3. Find the 90% Confidence interval of \"beats.per.minute\" of a song to be in popular 100 spotify list high danceability and valance.\n4. Understanding the distribution of \"length\" using distplot\n5. Find the 90% Confidence interval of \"length\" of a song to be in popular 100 spotify list as high danceability and valance."}}