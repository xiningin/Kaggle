{"cell_type":{"9bec32a4":"code","29907d74":"code","478cadb9":"code","295911ca":"code","61ae55db":"code","c61c1f1e":"code","d0209d40":"code","b6bc2054":"code","d96514fb":"code","ae847bb2":"code","a8735184":"code","d866ad55":"code","6807793c":"code","b5a18268":"code","e7bf4b62":"code","2d7077ad":"code","09525faa":"code","a7cb839f":"code","5a1c4be3":"code","6e0c9c58":"code","1b98049e":"code","b0d4cd5e":"code","e8710477":"markdown","6a635489":"markdown","8f37c7ec":"markdown","3c33a8ed":"markdown"},"source":{"9bec32a4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","29907d74":"corona_df = pd.read_csv('\/kaggle\/input\/coronadata-33120\/time_series_covid19_confirmed_global.csv')","478cadb9":"corona_df.head()","295911ca":"corona_df.drop(columns=['Province\/State','Lat','Long'], axis=1, inplace=True)","61ae55db":"corona_df = corona_df.set_index('Country\/Region')","c61c1f1e":"country_list = ['Afghanistan','India','Pakistan','Bangladesh','Sri Lanka','Nepal','Bhutan','Maldives']","d0209d40":"from matplotlib.ticker import MaxNLocator\n\n\ndef plot(x1,Y,label1,label2,plottype):\n    ax = plt.figure().gca()\n    fig = matplotlib.pyplot.gcf()\n    fig.set_size_inches(20,10)\n    plt.margins(x=0)\n    \n    if(plottype == 'multi'):\n        for y in Y:\n            plt.plot(x1, y)\n    else:\n        plt.plot(x1,Y)\n\n    plt.xlabel(label1)\n    plt.ylabel(label2)\n    \n    plt.gca().legend(country_list)\n    plt.show()","b6bc2054":"def strtodatenum(time_str):\n    a = datetime.strptime(time_str, '%m\/%d\/%y')\n    return a","d96514fb":"def data_list(country_name):\n    a = []\n    for x in country_name:\n        a.append(corona_df.loc[x].tolist())\n    return a","ae847bb2":"#timest = corona_df.drop(columns='Country\/Region', axis=1)\ntime_list = list(corona_df.columns.values)","a8735184":"time_correct = []\nfor i in range(0,len(time_list)):\n    time_correct.append(strtodatenum(time_list[i]))","d866ad55":"X1 = time_correct\nY = data_list(country_list)","6807793c":"plot(X1,Y,'Date','Confirmed Case','multi')","b5a18268":"india_corona = corona_df.loc['India'].tolist()","e7bf4b62":"each_day = [india_corona[0]]\ndef each_day_case(india):\n    for i in range(0,len(india_corona)-1):\n        a = india_corona[i+1]-india_corona[i]\n        each_day.append(a)\n    return each_day","2d7077ad":"each_day_india = each_day_case(india_corona)","09525faa":"plot(X1,each_day_india,'Date','Confirmed Case','single')","a7cb839f":"count = 0\nfor x in X1:\n    if(x == strtodatenum('3\/24\/20')):\n        break;\n    else:\n        count+=1","5a1c4be3":"date_unlock = X1[:count]\nconfirm_unlock = each_day_india[:count]","6e0c9c58":"plot(date_unlock,confirm_unlock,'Date','Confirmed Case','single')","1b98049e":"date_lock = X1[count:]\nconfirm_lock = each_day_india[count:]","b0d4cd5e":"plot(date_lock,confirm_lock,'Date','Confirmed Case','single')","e8710477":"India Before Lockdown: Before(24 march)","6a635489":"Data Analysis India: Before and After Lockdwon","8f37c7ec":"India After Lockdown: After(24 march)","3c33a8ed":"For South Asian Country"}}