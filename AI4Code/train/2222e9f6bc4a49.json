{"cell_type":{"375a9d57":"code","4190a765":"code","e94501c0":"code","8c5a383a":"code","1601996a":"code","0a556734":"code","f55f9e98":"code","1e8851cb":"code","0a5f6745":"code","28382003":"code","b4499fae":"code","2a0428dc":"code","e4389c7e":"code","5e9a1fee":"code","d11a34eb":"code","f696e721":"code","d322d271":"code","34819fe0":"code","de57f046":"code","228f0692":"code","674124e3":"code","2101b025":"code","3a82230d":"code","b1049017":"code","ac8db399":"code","d0475221":"markdown","d81d747e":"markdown","1915563d":"markdown","e6c0393d":"markdown","813c99fc":"markdown","8f21f9d7":"markdown"},"source":{"375a9d57":"##import all the libraries and framework\nimport numpy as np\nimport pandas as pd","4190a765":"## loading a dataset\n\niris_data = pd.read_csv('..\/input\/Iris.csv')","e94501c0":"iris_data.head(5)      ##explore head of data","8c5a383a":"iris_data.shape","1601996a":"iris_data.describe()","0a556734":"iris_data.groupby('Species').size()","f55f9e98":"features = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm','PetalWidthCm']","1e8851cb":"X = iris_data[features].values","0a5f6745":"y= iris_data['Species'].values","28382003":"y","b4499fae":"from sklearn.preprocessing import LabelEncoder ##import sklearn LabelEncoder","2a0428dc":"la_en = LabelEncoder()","e4389c7e":"y = la_en.fit_transform(y)  ### encoding string values to numbers","5e9a1fee":"print(set(y.tolist()))  ### now we can see that we have only three labels or classes","d11a34eb":"from sklearn.cross_validation import train_test_split","f696e721":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","d322d271":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","34819fe0":"plt.figure()\nsns.pairplot(iris_data.drop(\"Id\", axis=1), hue = \"Species\", size=5, markers=[\"o\", \"s\", \"D\"])\nplt.show()","de57f046":"### import sklearn libraries","228f0692":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.model_selection import cross_val_score","674124e3":"knn_classifier = KNeighborsClassifier(n_neighbors=3)","2101b025":"knn_classifier.fit(X_train, y_train)","3a82230d":"y_pred = knn_classifier.predict(X_test)","b1049017":"y_pred","ac8db399":"accuracy = accuracy_score(y_test,y_pred)*100\nprint('accuracy = ' , accuracy ,'%' )","d0475221":"### Time for prediction","d81d747e":"#### since knn classifier does not accepts string as labels we need to encode them","1915563d":"#### finding number of instances from each class","e6c0393d":"## Now we have split our data into train and test we need to find a optimal value for k\n### Let's visualize data","813c99fc":"# KNN classification of Iris Species dataset","8f21f9d7":"#### we can say from above that dataset contains 150 rows and 6 columns\n\nnow describe dataset"}}