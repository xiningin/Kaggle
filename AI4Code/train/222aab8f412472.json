{"cell_type":{"8a9b24cb":"code","b2bc536c":"code","582d8fa6":"code","b7b3c79c":"code","58ba63a3":"code","2c5aece5":"code","251b540f":"code","708fc473":"code","7a4ac51c":"code","5f506880":"code","f218d136":"code","259a0afc":"code","514ae80c":"code","58868006":"code","abf6dd99":"code","3ad6dc92":"code","0e59ee44":"code","07485b6d":"code","f3da376f":"code","414ce2f5":"code","0880f881":"code","ca912ce9":"code","1bd4ef6b":"code","2e8e1cef":"code","5869b791":"markdown","afb53cf6":"markdown","7414928c":"markdown","1ccd761b":"markdown","140643a8":"markdown","e166d54c":"markdown","a2a6bedd":"markdown","c89b22e6":"markdown","ae228e5f":"markdown","16e3e218":"markdown","3eeff011":"markdown","8e9c5e54":"markdown","33b03626":"markdown","905eef1a":"markdown","1e96ba9b":"markdown","a61a0893":"markdown","ec971145":"markdown","538fdf2d":"markdown","ee6432c6":"markdown","19d68d7d":"markdown","a85961a8":"markdown"},"source":{"8a9b24cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b2bc536c":"import tensorflow as tf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom tensorflow import keras\n%matplotlib inline","582d8fa6":"data = pd.read_csv(\"\/kaggle\/input\/sloan-digital-sky-survey\/Skyserver_SQL2_27_2018 6_51_39 PM.csv\")","b7b3c79c":"data.head()","58ba63a3":"data.shape","2c5aece5":"\n\n# drop the object id columns, they are of no use in the analysis\ndata.drop(['objid','specobjid'], axis=1, inplace=True)\n\n","251b540f":"data.head(20)","708fc473":"data.shape","7a4ac51c":"data.describe()","5f506880":"data.info()","f218d136":"le = LabelEncoder().fit(data['class'])\ndata['class'] = le.transform(data['class'])","259a0afc":"data.head(20)","514ae80c":"data.info()","58868006":"\n\nX = data.drop('class', axis=1)\ny = data['class']\n\n","abf6dd99":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler(copy=True , with_mean= True , with_std = True)\nX= scaler.fit_transform(X)","3ad6dc92":"#Show data\nX[:20]","0e59ee44":"\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=128)\n\n","07485b6d":"sns.countplot(x=data['class'])","f3da376f":"\n\nsns.pairplot(data[['u','g','r','i','class']])\n\n","414ce2f5":"# Decision Tree Classifier\ndtClassifer = DecisionTreeClassifier(max_leaf_nodes=15,max_depth=3)\n#------------------------------------------------------------------\n#Linear Classifiers:\n# 1- Logistic Regression\nLRClassifer = LogisticRegression()\n# # 2-Naive Bayes Classifier\n# NBClassifer = MultinomialNB()\n#-------------------------------------------------------------------\n#Nearest Neighbor Classifier\nNeNeClassifier = KNeighborsClassifier(n_neighbors=3)\n#-------------------------------------------------------------------\n#Support Vector Machines Classifer\nSVCModel = SVC()\n\n\n","0880f881":"dtClassifer.fit(X_train, y_train)\nLRClassifer.fit(X_train, y_train)\n#NBClassifer.fit(X_train, y_train)\nNeNeClassifier.fit(X_train, y_train)\nSVCModel.fit(X_train, y_train)","ca912ce9":"y_preds = dtClassifer.predict(X_test)\ny_predsLR = LRClassifer.predict(X_test)\n#y_predsNB = NBClassifer.predict(X_test)\ny_predsNeNe = NeNeClassifier.predict(X_test)\ny_predsSVC = SVCModel.predict(X_test)","1bd4ef6b":"print(y_preds[:10],'\\n',y_test[:10])\nprint(\"*******************************************************\")\nprint(y_predsLR[:10],'\\n',y_test[:10])\nprint(\"*******************************************************\")\n#print(y_predsNB[:10],'\\n',y_test[:10])\n#print(\"*******************************************************\")\nprint(y_predsNeNe[:10],'\\n',y_test[:10])\nprint(\"*******************************************************\")\nprint(y_predsSVC[:10],'\\n',y_test[:10])","2e8e1cef":"print('accuracy_score by Decision Tree Classifier:',accuracy_score(y_true=y_test, y_pred=y_preds))\nprint('accuracy_score by LR Classifier:',accuracy_score(y_true=y_test, y_pred=y_predsLR))\n#print('accuracy_score by Naive Bayes Classifier:',accuracy_score(y_true=y_test, y_pred=y_predsNB))\nprint('accuracy_score by Nearest Neighbor Classifier:',accuracy_score(y_true=y_test, y_pred=y_predsNeNe))\nprint('accuracy_score by SVM Classifier:',accuracy_score(y_true=y_test, y_pred=y_predsSVC))","5869b791":"Perform train and test split","afb53cf6":"\n### Measure accuracy of the classifier\n","7414928c":"after lable encoding,the galaxy has been replaced by number 0, the Quasar is number 1 and star is number 1","1ccd761b":"# Machine Learning models(Classification models)","140643a8":"# The result","e166d54c":"### The Target from data is Data classification to Star,Galaxy or Quasar,so the class column has 3 Categories and in this case we need to convert them into numeric data.","a2a6bedd":"#### The object id columns, they are of no use in the analysis so we will delete them from dataset","c89b22e6":"check the Null values","ae228e5f":"No missing data ","16e3e218":"Definitely:\n0 = Galaxy,\n1 = Qusar,\n2 = Star.","3eeff011":"\n\n#### first of all we need to import all the packages we need. Numpy and Pandas for data manipulation and all the modules from sklearn\n","8e9c5e54":"Decision Tree Classifier has the highest score\nYou can apply neural networks to this data, but it is likely that you will get good results because the volume of training data is not much.","33b03626":"# Data Scaling","905eef1a":"# Exploratory Analysis","1e96ba9b":"Data after droping columns","a61a0893":"# Density Distribution Plots","ec971145":"# Features\n\n### A summary of the more important features are:\n\n*     ra, dec \u2014 right ascension and declination respectively\n*     u, g, r, i, z \u2014 filter bands (a.k.a. photometric system or astronomical magnitudes)\n*     run, rerun, camcol, field \u2014 descriptors of fields (i.e. 2048 x 1489 pixels) within image\n*     redshift \u2014 increase in wavelength due to motion of astronomical object\n*     plate \u2014 plate number\n*     mjd \u2014 modified Julian date of observation\n*     fiberid \u2014 optic fiber ID","538fdf2d":"# Overview of Data\n### Labels\n\nSo what exactly are stars, galaxies, and quasars? Had you asked me prior to starting this project, I would\u2019ve not been able to answer (shame on me). Fortunately, Faraz\u2019s notebook succinctly summarises what they are:\n\n\n*     A GALAXY is a gravitationally bound system of stars, stellar remnants, interstellar gas, dust, and dark matter. Galaxies are categorised according to their visual morphology as elliptical, spiral, or irregular. Many galaxies are thought to have supermassive black holes at their active centers.\n*     A STAR is a type of astronomical object consisting of a luminous spheroid of plasma held together by its own gravity. The nearest star to Earth is the Sun.\n*     A QUASAR, also known as quasi-stellar object, is an extremely luminous active galactic nucleus (AGN). The power radiated by quasars is enormous. The most powerful quasars have luminosities exceeding 1041 watts, thousands of times greater than an ordinary large galaxy such as the Milky Way.","ee6432c6":"#### Loading Data","19d68d7d":"# About the data:\n\n### From the Overview section,\n\n\"The data consists of 10,000 observations of space taken by the SDSS. Every observation is described by 17 feature columns and 1 class column which identifies it to be either a star, galaxy or quasar.\"30% used in testing and 70% in training.","a85961a8":"### Some information about filter:\n\"U\" stands for ultraviolet.\n\"G\" stands for green. \n\"R\" stands for red. \n\"I\" stands for infrared. "}}