{"cell_type":{"3ebdc715":"code","44034b41":"code","c731f20c":"code","27fb0724":"code","b777958b":"code","d8fa9fb1":"code","0f84ba96":"code","f2ee3c39":"code","a4e7c622":"code","8e2817b9":"code","e0fed99e":"code","7947d568":"code","87d487e5":"code","a781b891":"code","52aacf12":"code","cdf32881":"code","3f8d41c8":"code","1155b2cb":"code","faf2e3ab":"code","81eac05f":"code","72a7b189":"code","14e7302f":"code","c0b72fc6":"code","6e771b9d":"code","78961f29":"code","c9e58578":"code","2a488fbc":"code","7992813f":"code","0fad3b99":"code","9d5bca3b":"code","6440a6b3":"code","e597ccfe":"code","1a891af7":"code","08c9f3d2":"code","07ccddec":"code","0db648ab":"code","9d48ac4d":"code","7cd3a516":"code","a313967b":"code","185ab7b2":"code","76f8e89c":"code","0a2eafb0":"code","c34ae253":"code","6880be65":"markdown","b1f4290e":"markdown","cfd0f970":"markdown","6a60e46c":"markdown","a6d1c124":"markdown","89ac2e83":"markdown","210b5d24":"markdown","4cfdb964":"markdown","317e42b2":"markdown","dbcb9529":"markdown","c63c52ed":"markdown","079ecc43":"markdown","79b3bf85":"markdown","cfdb89d4":"markdown","1c3b2e46":"markdown","0755a8d5":"markdown","e18c385e":"markdown","cd3d5272":"markdown","b7bacfac":"markdown","ae4aca36":"markdown","77daae30":"markdown","eb9b889e":"markdown","e810fe3c":"markdown","c18f6c10":"markdown","6ea91656":"markdown","4b1b14f1":"markdown","4be05629":"markdown","051d9af3":"markdown","583f2413":"markdown","b5cc0b11":"markdown","768c48ef":"markdown","a74ddb8a":"markdown","86e5dc34":"markdown","02302abd":"markdown","2a233020":"markdown","cdb92202":"markdown","a6848062":"markdown","b57f072f":"markdown","63c8f900":"markdown"},"source":{"3ebdc715":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #plotting data\nimport seaborn as sns #data visualization\n%matplotlib inline \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","44034b41":"# Load your data and print out a few lines. Perform operations to inspect data\ndf=pd.read_csv('\/kaggle\/input\/tmdb-movies-dataset\/tmdb_movies_data.csv')","c731f20c":"# let's have a look on the data\ndf.head(2)","27fb0724":"#drop the useless columns\ncolumns_drop=['popularity','id','imdb_id','homepage','tagline','vote_count', 'keywords', 'overview', 'budget_adj', 'revenue_adj','production_companies']\ndf.drop(columns_drop, axis =1 , inplace = True)","b777958b":"df.head()","d8fa9fb1":"#calculte the number of rows and colunm\ndf.shape","0f84ba96":"#describe the data\ndf.describe()","f2ee3c39":"# let's see the count and the type of each coulnm\ndf.info()","a4e7c622":"#chicking for duplicated rows\ndf.duplicated().sum()","8e2817b9":"#drop that one\ndf.drop_duplicates(inplace=True)","e0fed99e":"# onther check \ndf.duplicated().sum()","7947d568":"#adding profit column\n#profit = revenue - budget\ndf['profit']=df.revenue-df.budget","87d487e5":"df.head()","a781b891":"#chicking for any nan value in  the data\ndf.isnull().sum()","52aacf12":"# visualizing the data\ndf.hist(figsize=(10,8));","cdf32881":"# First we have to check whether those films which has nan values important or not\ndf[df.genres.isnull()].describe()","3f8d41c8":"#drop those values\ndf.dropna(subset = [\"genres\"], inplace=True)","1155b2cb":"#see missing data of cast\ndf[df.cast.isnull()].hist(figsize=(10,6));","faf2e3ab":"#drop those values\ndf.dropna(subset = [\"cast\"], inplace=True)","81eac05f":"#see missing data of cast\ndf[df.director.isnull()].hist(figsize=(10,6));","72a7b189":"#drop those values\ndf.dropna(subset = [\"director\"], inplace=True)","14e7302f":"df.info()","c0b72fc6":"df.query('runtime<=0')","6e771b9d":"df.drop(df[df['runtime']<= 0].index, inplace = True)","78961f29":"#using lambda to convert the time into more familiar formula\ndf.runtime = df.runtime.apply(lambda x: '{:02d}:{:02d}'.format(*divmod(x, 60)))\ndf.runtime[:5]","c9e58578":"# convert the release date type from string to datetime\ndf.release_date = pd.to_datetime(df['release_date'])","2a488fbc":"df.info()","7992813f":"# rearange the data by vote average then take the first one\ndf_high_rate = df.sort_values(by='vote_average',ascending = False)\ndf_high_rate[['original_title','vote_average']].head(1)","0fad3b99":"# rearange the data by revenue then take the first one\ndf_high_revenue = df.sort_values(by='revenue',ascending = False)\ndf_high_revenue[['original_title','revenue']].head(1)","9d5bca3b":"# visualizing the budget Vs. vote average\ndf.plot(x='budget', y='vote_average', kind='scatter');\nplt.title('relation between vote average and budget')\nplt.xlabel(\"budget\", size=10)\nplt.ylabel(\"vote average\", size=10);","6440a6b3":"# visualizing the budget Vs. vote average\ndf.plot(x='budget', y='revenue', kind='scatter')\nplt.title('relation between budget and revenue')\nplt.xlabel(\"budget\", size=10)\nplt.ylabel(\"revenue\", size=10);","e597ccfe":"# spliting genres and put them in a dataframe\ndf_geners = df.genres.str.split('|',expand=True)","1a891af7":"# gitting the count of each gener type\na = df_geners[0].value_counts()\nfor i in range(1,5):\n    b = df_geners[i].value_counts()\n    a = a.add(b, fill_value=0)    \n    \n# visualizing the count of each gener\na.plot(kind = 'bar')\nplt.title('count of each geners')\nplt.xlabel(\"movie type\", size=10)\nplt.ylabel(\"number of movies\", size=10);","08c9f3d2":"# spliting cast and put them in a dataframe\ndf_cast = df.cast.str.split('|',expand=True)","07ccddec":"# gitting the count of each Actor\nx = df_cast[0].value_counts()\nfor i in range(1,4):\n    y = df_cast[i].value_counts()\n    x = x.add(y, fill_value=0)    \n\n# sorting the actors by number of movies\nx = x.sort_values(ascending = False)\n# visualizing the count of most frequent 15 actor\nx.head(15).plot(kind = 'bar')\nplt.title('most frequent actor')\nplt.xlabel(\"actor\", size=10)\nplt.ylabel(\"number of movies\", size=10);","0db648ab":"# sorting the data by vote average and take top 500 movies\ndf_top =df.sort_values(by='vote_average',ascending=False)\ndf_top = df_top.head(500)\ndf_top.describe()","9d48ac4d":"df_top.hist(figsize=(15,8));","7cd3a516":"# explore the most frequent actors in top movies\nx = df_top.director.value_counts().head(15)\nx.plot(kind = 'bar')\nplt.title('Count of top movies for most frequent directors')\nplt.xlabel(\"director\", size=10)\nplt.ylabel(\"number of movies\", size=10);","a313967b":"# visualizing the budget Vs. revenue of top movies\ndf_top.plot(x='budget', y='revenue', kind='scatter')\nplt.title('relation between budget and revenue')\nplt.xlabel(\"budget\", size=10)\nplt.ylabel(\"revenue\", size=10);","185ab7b2":"# visualizing the budget over the release years of top movies\ndf_top.plot(x='release_year', y='budget', kind='scatter')\nplt.title('the budget of top movies over the release year')\nplt.xlabel(\"release_year\", size=10)\nplt.ylabel(\"budget\", size=10);","76f8e89c":"# visualizing the vote average over the release years of top movies\ndf_top.plot(x='release_year', y='vote_average', kind='scatter')\nplt.title('the vote average over the release years')\nplt.xlabel(\"release_year\", size=10)\nplt.ylabel(\"vote_average\", size=10);","0a2eafb0":"# explore top 5 movies that have highest profit\ndf_high_profit = df.sort_values(by='profit',ascending = False)\ndf_high_profit[['original_title','profit']].head()","c34ae253":"# visualizing the revenue Vs. profit of top movies\ndf.plot(x='revenue', y='profit', kind='scatter')\nplt.title('relation between profit and revenue')\nplt.xlabel(\"revenue\", size=10)\nplt.ylabel(\"profit\", size=10);","6880be65":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n> after Wrangling the data and clean it now the data is ready to give us the answers of the questions.\n\n### Research Question 1 (here we have some direct questions about whole dataset!)","b1f4290e":"The budget increases over the years","cfd0f970":"Robert De Niro is the most frequent here","6a60e46c":"Here we go our data is ready to explore. Let's start...","a6d1c124":"so we got that, Drama is the most one.","89ac2e83":"<a id='intro'><\/a>\n## Introduction\n\n> we are going to explore data analysis of more than 10 thousand TMDB movies by some of properties are associated with movies.\n\n### Questions we can answer for whole datasets are:\n> which movie has the best vote?\n\n> which movie has high revenue?\n\n> Is moives with high budget has a high rates?\n\n> Is moives with high budget gives high revenues?\n\n> Which genres are most popular from year to year?\n\n> which actor more frequent?","210b5d24":"same, those data will not affect much more in data analysis. So, we can drop it","4cfdb964":"### let's explore data of top 500 movies (by vote average)","317e42b2":"## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","dbcb9529":"#### Is moives with high budget has a high rates?","c63c52ed":"<a id='conclusions'><\/a>\n## Conclusions\n\nIn this project we analyesd TMDB Movies. First thing we did cleaning our data to be able to work with. Then we exlore some data that can help us to answer some questions that help us to understand this data. last thing we did some data analsys for top 500 movies sorted by average rate and got some good results to explore.\n\n> The best movie is The Story of Film: An Odyssey with vote average 9.2. \n\n> Avatar is the movie that has highest revenues.\n\n> There is no correlation between budget and vote averaged. \n\n> The most popular five geners from year to year is drama , comedy thriller, action and romance.\n\n> Robert De Niro, Samuel L. Jackson, Bruce Willis, Nicolas Cage and Michael Caine are most freqent actors in the movies.\n\nThen we rearange the data by vote average then take the first 500 and name it as a top 500 movies and we made some data analysis and we got some info.\n\n> to make a good movie you should put a budget not less than 17.94 million dollar and the expicted revenue is 97.18 million dollar\n\n>Martin Scorsese, Quentin Tarantino, Steven Spielberg, Christopher Nolan and Stanley Kubrick those pepole are genuses they are the best movies directors\n\n> The budget status is increaces over the release years.\n\n> The Vote average count is increaces over the release years.\n\n","079ecc43":"so we have to drop all of them","79b3bf85":"Cool!","cfdb89d4":"#### Is revenue associated with profit?","1c3b2e46":"same, those data will not affect much more in data analysis. So, we can drop it","0755a8d5":"same of the original data, we got that  the relation between budget and revenue is directly proportional","e18c385e":"#### which actor more frequent?","cd3d5272":"#### How is the vote average over the release years?","b7bacfac":"I figured out that those data will not affect much more in data analysis. So, we can drop it","ae4aca36":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n>In this section of the report, I will load in the data, check for cleanliness, and then trim and clean your dataset for analysis.\n\n#### General Properties:","77daae30":"We figured out that the revenue and profit appear highly correlated by liner relation","eb9b889e":"## Limitations\n#### In the first section: \n1- I decided to drop all the data that has (runtime <= 0) because there is no meaning of movie that has runtime less than or equal zero. and also i dropped all the data that has none values, concedering that will not effect much more on analysing the data. \n2- I coulde not find any correlation between  vote avarage and budget.\n\n#### In the second section: \nI made my conclusion based on sorting the data by rate average and take top 500 movies and this is more helpful for us to know the characteristics of top movies.","e810fe3c":"#### which movie has the best vote?","c18f6c10":"let's working on the runtime column:\n\nwe figured out that taht data has zero runtime. So, it dose not make sense","6ea91656":"#### Which genres are most popular from year to year?","4b1b14f1":"### Data Cleaning (drop duplicates, deal with NaN values and remove no meaning values)","4be05629":"the best movie is The Story of Film: An Odyssey\tby vote average 9.2","051d9af3":"now we got that  the relation between budget and revenue is direct proportional","583f2413":"#### which movie has high revenue?","b5cc0b11":"#### How is the budget status over the release years?","768c48ef":"The movie that has highest revenue is Avatar with revenue 2781505847 $","a74ddb8a":"let's change the release_date type from str to datetime","86e5dc34":"So here we got that Martin Scorsesehas 9 movies of best 500 and Steven Spielberg has 7 movies","02302abd":"this chart means the budget has no relationship with vote average, so the answer is No.","2a233020":"#### What kinds of properties are associated with movies that have high revenues?","cdb92202":"the count of votes is increases over the years","a6848062":"dropping that one will not affect","b57f072f":"#### What kinds of properties are associated with movies that have high profit?","63c8f900":"#### Is moives with high budget gives high revenues?"}}