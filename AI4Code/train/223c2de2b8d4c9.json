{"cell_type":{"1552d631":"code","fc5a9796":"code","190c34f5":"code","f39c7376":"code","9c6c16f4":"code","3f17bc3c":"code","a12617a2":"code","5c1ce8de":"code","d16627b6":"code","8abb8a33":"code","0c2b07dc":"code","688e29f0":"code","c96207d4":"code","18c8c4c0":"code","72878e9b":"code","32bb2d27":"code","df5b0468":"markdown","c790842a":"markdown","d170f48a":"markdown","ecad4db4":"markdown","6ba1dfe9":"markdown","0acfe7e4":"markdown","9ce7ff62":"markdown"},"source":{"1552d631":"# Import libraries\nimport numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score","fc5a9796":"# Load \"train.csv\", \"test.csv\" and \"submission.csv\"\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","190c34f5":"# Set features\nfeatures1 = ['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5']\nfeatures2 = ['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5']\nfeatures3 = ['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5']\n# Set inputs\nX1 = train[features1]        # input for training\nX_test1 = test[features1]    # input for testing\nX2 = train[features2]        # input for training\nX_test2 = test[features1]    # input for testing\nX3 = train[features3]        # input for training\nX_test3 = test[features3]    # input for testing\n\n# Set outputs\nY1 = train[\"target_carbon_monoxide\"]    # output for training\nY2 = train[\"target_benzene\"]            # output for training\nY3 = train[\"target_nitrogen_oxides\"]    # output for training","f39c7376":"# Set hyper parameter for selected model(Random Forest)\nclf1 = RandomForestRegressor(n_estimators=100, max_depth=5, random_state=1)\nclf2 = RandomForestRegressor(n_estimators=100, max_depth=5, random_state=1)\nclf3 = RandomForestRegressor(n_estimators=100, max_depth=5, random_state=1)","9c6c16f4":"# Set hyper parameter for k-fold cross validation\nk_fold = KFold(n_splits=10, shuffle=True, random_state=0)","3f17bc3c":"# K-fold cross validation to predict Y1\nscore1 = np.sqrt(-1*cross_val_score(clf1, X1, Y1, cv=k_fold, scoring=\"neg_mean_squared_log_error\"))\nprint(np.average(score1))","a12617a2":"# K-fold cross validation to predict Y2\nscore2 = np.sqrt(-1*cross_val_score(clf2, X2, Y2, cv=k_fold, scoring=\"neg_mean_squared_log_error\"))\nprint(np.average(score2))","5c1ce8de":"# K-fold cross validation to predict Y3\nscore3 = np.sqrt(-1*cross_val_score(clf3, X3, Y3, cv=k_fold, scoring=\"neg_mean_squared_log_error\"))\nprint(np.average(score3))","d16627b6":"# Show MCRMSLE (Mean Columnwise Root Mean Squared Logarithmic Error)\nprint(np.average(score1+score2+score3)\/3)","8abb8a33":"clf1.fit(X1, Y1)","0c2b07dc":"clf2.fit(X2, Y2)","688e29f0":"clf3.fit(X3, Y3)","c96207d4":"pred1 = clf1.predict(X_test1)","18c8c4c0":"pred2 = clf2.predict(X_test2)","72878e9b":"pred3 = clf3.predict(X_test3)","32bb2d27":"sub.target_carbon_monoxide = pred1\nsub.target_benzene = pred2\nsub.target_nitrogen_oxides = pred3\nsub.to_csv('addfeatures_submission.csv',index=False)\nsub","df5b0468":"# 5. Training","c790842a":"# 6. Prediction","d170f48a":"# 1. Import libraries","ecad4db4":"# 4. Cross validaion","6ba1dfe9":"# 2. Data loading","0acfe7e4":"# 3. Hyper parameter","9ce7ff62":"# 7. Submission"}}