{"cell_type":{"d593016b":"code","629b920f":"code","575787cb":"code","726946ce":"code","0948e634":"code","7f769fce":"code","09f3a147":"code","98114e1e":"code","46799d3f":"code","a450ef87":"code","3d843939":"code","0b157d5a":"code","554f8910":"markdown","3b7317d9":"markdown","9dcf73c8":"markdown","7a31503b":"markdown","a6af629c":"markdown"},"source":{"d593016b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","629b920f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport seaborn as sns  \nfrom sklearn.model_selection  import train_test_split\n\ncovid_19_india = pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\ncovid_19_india.head()\n\n\nmy_tab = pd.crosstab(index=covid_19_india[\"State\/UnionTerritory\"],  # Make a crosstab\n                     columns=\"count\")                  # Name the count column\nmy_tab\n\n","575787cb":"covid_19_india.head(10)","726946ce":"covid_19_india.groupby(by=['State\/UnionTerritory'])['Confirmed'].sum().reset_index().sort_values(['Confirmed']).tail(10).plot(x='State\/UnionTerritory',\n                                                                                                           y='Confirmed',\n                                                                                                           kind='bar',\n                                                                                                           figsize=(15,5))\nplt.show()","0948e634":"covid_19_india.groupby(by=['State\/UnionTerritory'])['Cured'].sum().reset_index().sort_values(['Cured']).tail(10).plot(x='State\/UnionTerritory',\n                                                                                                           y='Cured',\n                                                                                                           kind='bar',\n                                                                                                           figsize=(15,5))\nplt.show()","7f769fce":"AgeGroupDetails = pd.read_csv('..\/input\/covid19-in-india\/AgeGroupDetails.csv')\nAgeGroupDetails.head()\nplt.figure(figsize=(10,5))  # setting the figure size\nax = sns.barplot(x='AgeGroup', y='TotalCases', data=AgeGroupDetails, palette='muted')  # barplot","09f3a147":"ind_df = pd.read_csv('..\/input\/covid19-in-india\/IndividualDetails.csv')\nind_df.head(10)","98114e1e":"plt.figure(figsize=(10,5))  # setting the figure size\n#sns.countplot(x=\"children\",data=insur_data);\n\nsns.countplot(x='detected_state', data=ind_df, hue='current_status');  # barplot\n","46799d3f":"covid_19_india['Date'] = pd.to_datetime(covid_19_india['Date'])\ncovid_19_india.head(10)","a450ef87":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport calmap\nfrom datetime import datetime\nimport json\nimport requests\nplt.style.use('fivethirtyeight')\n%matplotlib inline\n\n#bar chart race\nimport bar_chart_race as bcr\n\n# Waffle Chart\nfrom pywaffle import Waffle\n\n# plotly\nimport plotly.express as px\n8\ni0mport plotly.figure_factory as ff\nfr33.om plotly.subplots import make_subplots\n\n#geopandas\nimport geopandas as gpd\n\n#folium\nimport folium\n\n# color pallette\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801'\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\n\ndef print_files():\n    for dirname, _, filenames in os.walk('\/kaggle\/input'):\n        for filename in filenames:\n            print(os.path.join(dirname, filename))\n\n# List is to long, thus I am not printing files.\n# print_files()","3d843939":"import plotly.express as px\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801'\ntemp = covid_19_india.groupby('Date')['Confirmed', 'Deaths', 'Cured'].sum().reset_index()\ntemp = temp.melt(id_vars=\"Date\", value_vars=['Confirmed', 'Deaths', 'Cured'],\n                 var_name='Case', value_name='Count')\nfig = px.area(temp, x=\"Date\", y=\"Count\", color='Case', height=600,\n             title='Cases over time', color_discrete_sequence = [act, dth, rec])\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","0b157d5a":"import plotly.graph_objs as go\ntemp = covid_19_india.groupby('Date')['Confirmed', 'Deaths', 'Cured'].sum().reset_index()\n\nfig = go.Figure(data=[\n    go.Bar(name='Confirmed', x=temp[\"Date\"], y=temp[\"Confirmed\"], marker=go.bar.Marker(\n    color=act)),\n    go.Bar(name='Deaths', x=temp[\"Date\"], y=temp[\"Deaths\"],marker=go.bar.Marker(\n    color=dth)),\n    go.Bar(name='Cured', x=temp[\"Date\"], y=temp[\"Cured\"],marker=go.bar.Marker(\n    color=rec))\n])\n# Change the bar mode\nfig.update_layout(\n    width = 900,\n    height=500,\n    barmode='stack', \n    title='Total cases over time',\n    font=dict(size=14, color='#686868'),\n    xaxis_tickangle=-45,\n    yaxis=dict(\n        title='Count'\n        ))\n\nfig.show()","554f8910":"### Currently, in the above bar chart, we see Maharashtra has high number confirmed cases followed by Kerala.","3b7317d9":"## The Workbook is still under process. Will be updating the notebook eventually","9dcf73c8":"# COVID-19 Analysis in India","7a31503b":"### Age group between 20-29 has highest confirmed cases ","a6af629c":"## In this analysis, let us look into how covid-19 has been in India."}}