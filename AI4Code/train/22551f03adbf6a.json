{"cell_type":{"2db9ea8f":"code","10713992":"code","8cd9bf43":"code","a626a27c":"code","15fd3b71":"code","b4644207":"code","e722a05d":"code","a19e081c":"code","cdf92cfd":"code","ab327a26":"code","d681c616":"code","fbe81a34":"code","6c64bd8d":"code","ea777da6":"code","9a966033":"code","6d02fa8d":"code","7fb62efb":"code","b56ab9db":"code","fdcb0fe6":"code","14dc49d1":"code","a9d35798":"code","1e6d12ac":"markdown","b376e378":"markdown","150e2b97":"markdown","5e9b69ba":"markdown","459766b4":"markdown","58d212fb":"markdown","05f8df9a":"markdown","df009470":"markdown","1c9c9102":"markdown","2a6c2ee1":"markdown","6d5e80d7":"markdown","d863eddc":"markdown","057b0c1f":"markdown","3abe12bf":"markdown"},"source":{"2db9ea8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","10713992":"timesData = pd.read_excel(\"..\/input\/bitirme-100-bin.xlsx\")\npd.set_option('display.float_format', lambda x: '%.3f' % x)","8cd9bf43":"timesData=timesData.set_index(\"id\")","a626a27c":"timesData.head()","15fd3b71":"timesData=timesData.drop([\"basinc\",\"yagmur\"],axis=1)\n","b4644207":"timesData.head()","e722a05d":"timesData.zaman=pd.to_datetime(timesData.zaman)","a19e081c":"df=timesData.set_index(\"zaman\",\"id\")","cdf92cfd":"df=df.resample(\"60S\").mean()\ndataframe=df.reset_index()","ab327a26":"dataframe.corr()","d681c616":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(df.corr(),annot=True,linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","fbe81a34":"data=dataframe.copy()\n#creatin trace1\ntrace1=go.Scatter(\n    x=data.ruzgarhizi,\n    y=data.xivme,\n    mode=\"lines\",\n    name=\"xivme\",\n    marker=dict(color='rgba(16,112,2,0.8)'))\n#Creating trace2\ntrace2=go.Scatter(\n    x=data.ruzgarhizi,\n    y=data.yivme,\n    mode=\"lines+markers\",\n    name=\"yivme\",\n    marker=dict(color='rgba(80,26,80,0.8)'))\ndata=[trace1,trace2]\nlayout=dict(title='Time graph of the acceleration of the tower in x and y direction',\n           xaxis=dict(title=\"R\u00fczgar H\u0131z\u0131\",ticklen=5,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","6c64bd8d":"data=dataframe.copy()\ntrace1=go.Scatter(\n    x=data.ruzgarhizi,\n    y=data.xivme,\n    mode=\"markers\",\n    name=\"xivme\",\n    marker=dict(color='rgba(16,112,2,0.8)'))\n#Creating trace2\ntrace2=go.Scatter(\n    x=data.ruzgarhizi,\n    y=data.yivme,\n    mode=\"markers\",\n    name=\"yivme\",\n    marker=dict(color='rgba(80,26,80,0.8)'))\ndata=[trace1,trace2]\nlayout=dict(title='Time graph of the acceleration of the tower in x and y direction',\n           xaxis=dict(title=\"R\u00fczgar H\u0131z\u0131\",ticklen=5,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","ea777da6":"timesData.describe()","9a966033":"data1=dataframe[dataframe.ruzgarhizi > 20].iloc[:3,:]\ndata2=dataframe[dataframe.ruzgarhizi < 5].iloc[:3,:]\ndata1","6d02fa8d":"data1=dataframe[dataframe.ruzgarhizi > 20].iloc[:3,:]\ndata2=dataframe[dataframe.ruzgarhizi < 10].iloc[:3,:]\nsample=[\"1\",\"2\",\"3\"]\ntrace1=go.Bar(\n    x=sample,\n    y=data1.xivme,\n    name=\"xivmey\u00fcksek\",\n    marker=dict(color='rgba(255,174,255,0.5)',\n               line=dict(color='rgba(0,0,0)',width=1.5)),)\ntrace2=go.Bar(\n    x=sample,\n    y=data2.xivme,\n    name=\"xivmed\u00fc\u015f\u00fck\",\n    marker=dict(color= 'rgba(255, 255, 128, 0.5)',\n               line=dict(color='rgba(0,0,0)',width=1.5)),)\ndata=[trace1,trace2]\nlayout=go.Layout(barmode=\"group\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","7fb62efb":"data=dataframe.copy()\ntrace1=go.Histogram(\n    x=data.ruzgaryonu,\n    opacity=0.75,\n    name = \"2011\",\n    marker=dict(color='rgba(171, 50, 96, 0.6)'))\ndata=[trace1]\nayout = go.Layout(barmode='overlay',\n                   title=' students-staff ratio in 2011 and 2012',\n                   xaxis=dict(title='students-staff ratio'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","b56ab9db":"data=dataframe.copy()\ntrace0=go.Box(\n    y=data.sg1,\n    name='Number 1 Strain Gage',\n    marker=dict(\n        color='rgb(12,12,148)',\n    )\n)\ntrace1=go.Box(\n    y=data.sg2,\n    name='Number 2 Strain Gage',\n    marker=dict(\n        color='rgb(12,128,128)',))\ndata=[trace0,trace1]\niplot(data)","fdcb0fe6":"import plotly.figure_factory as ff\ndata=dataframe.copy()\ndata=dataframe.loc[:,[\"nem\",\"sicaklik\"]]\ndata[\"index\"]=np.arange(1,len(data)+1)\n\nfig=ff.create_scatterplotmatrix(data,diag='box',index='index',colormap='Portland',\n                               colormap_type='cat',\n                               height=700,width=700)\niplot(fig)","14dc49d1":"data=dataframe[dataframe.ruzgarhizi > 15]\ntrace1=go.Scatter3d(\n    x=data.xivme,\n    y=data.yivme,\n    z=data.zivme,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color=data.ruzgarhizi,\n        colorscale='Viridis',\n        opacity=0.8\n    )\n)\ndata=[trace1]\nlayout=go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","a9d35798":"data=dataframe.copy()\ntrace1=go.Scatter(\n    x=data.ruzgarhizi,\n    y=data.xivme,\n    name='Xivme',\n    mode=\"markers\"\n)\ntrace2=go.Scatter(\n    x=data.ruzgarhizi,\n    y=data.yivme,\n    xaxis='x2',\n    yaxis='y2',\n    name=\"Yivme\",\n    mode=\"markers\"\n)\ntrace3=go.Scatter(\n    x=data.sicaklik,\n    y=data.nem,\n    xaxis='x3',\n    yaxis='y3',\n    name='Humidity vs temperature'\n    \n)\n\ndata=[trace1,trace2,trace3]\nlayout=go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n\n    title=\"Humidity vs temperature and xivme and y ivme vs r\u00fczgarhizi\"\n)\nfig= go.Figure(data=data,layout=layout)\niplot(fig)","1e6d12ac":"10 data per second, the average was reduced to 1 data per minute","b376e378":"Time column set to time","150e2b97":"<a id=\"3\"><\/a><br>\n## Line Charts","5e9b69ba":"# INTRODUCTION\n   * In this kernel,we will investigate using plotly library with my graduation datas\n        *  Plotly library: Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make line plots, scatter plots, area charts, bar charts, error bars, box plots, histograms, heatmaps, subplots, multiple-axes, polar charts, and bubble charts.\n        \n        \n   <br>Content:\n1. [Loading Data and Explanation of Features](#1)\n1. [Heatmap](#2)\n1. [Line Charts](#3)\n1. [Scatter Charts](#4)\n1. [Bar Charts](#5)\n1. [Histogram Charts](#6)\n1. [Box Plots](#7)\n1. [Scatter Matrix Plots](#8)\n1. [3D Scatter Plot](#9)\n1. [Multiple Subplots](#10)","459766b4":"<a id=\"4\"><\/a><br>\n## Scatter Plot","58d212fb":"<a id=\"5\"><\/a><br>\n## Bar Charts\n    Data with wind speed greater than 20 selected","05f8df9a":"<a id=\"8\"><\/a><br>\n## Scatter Matrix Plots\n    Humidity and temperature scatter matrix graph","df009470":"   Statistics of each data\n   <br>\n          Count,mean,std,min,max,25%,50%,75%,max","1c9c9102":"<a id=\"1\"><\/a><br>\n## Loading Data and Explanation of Features\n<font color='red'>\n* timesData includes 14 features that are:\n    <font color='black'>\n    * zaman(time)\n    * basinc(pressure) we will drop \n    * sicaklik(temperature)\n    * nem(humidity)\n    * yagmur(rain) we will drop\n    * xivme(x direction acceleration)\n    * yivme(x direction acceleration)\n    * zivme(x direction acceleration)\n    * ruzgarhizi(wind speed)\n    * ruzgaryonu(wind direction)\n    * sg1,sg2,sg3,sg4,sg5,sg6,sg7,sg8,sg9,sg10 (Strain gages)  \n        \n    ### This data is a 2-hour record of sensors placed in a 9-meter tower \n\n","2a6c2ee1":"<a id=\"2\"><\/a><br>\n## Heatmap\n    Correlation of each data","6d5e80d7":"<a id=\"7\"><\/a><br>\n## Box Plots\n    According to strain gage 1 and strain gage 2","d863eddc":"<a id=\"9\"><\/a><br>\n## 3D Scatter Plot with Colorscaling\n       X y, z acceleration values vs wind speed","057b0c1f":"<a id=\"10\"><\/a><br>\n## Multiple Subplots\n    Subplots X,y accelaration and humidity vs temperature","3abe12bf":"<a id=\"6\"><\/a><br>\n## Histogram Charts\n    Distribution of wind blowing directions\n        "}}