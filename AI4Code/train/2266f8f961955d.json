{"cell_type":{"7b5c6b85":"code","43cebcfc":"code","b57b632e":"code","5c85cb47":"code","bef2b793":"code","aa2e52e5":"code","4ce58be2":"code","c6146669":"code","90ff1d25":"code","72e47487":"code","5f49a7dc":"code","eb0dc3a3":"code","bbf81a6a":"code","a914ac19":"code","5d2ff903":"code","7ddb468b":"code","ab424a8e":"code","b20e8591":"code","9be7e6c6":"code","bdab6b8a":"markdown","c54a6778":"markdown","4e70f88f":"markdown","1a0862f3":"markdown","d059567b":"markdown","279062f5":"markdown"},"source":{"7b5c6b85":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nimport random \nrandom.seed(50)","43cebcfc":"input_file = '..\/input\/titanic3.csv'\ndata = pd.read_csv(input_file)","b57b632e":"data['PassengerId'] = data.index+1","5c85cb47":"data.head()","bef2b793":"data.describe()","aa2e52e5":"numeric_features = ['age','fare']\ncategorical_features = ['embarked','sex','pclass']","4ce58be2":"data['embarked'].value_counts()","c6146669":"numeric_pipeline = Pipeline(steps=[('miss', SimpleImputer(strategy='mean')),('scale', StandardScaler())])\ncategory_pipeline = Pipeline(steps=[('miss',SimpleImputer(strategy='constant',fill_value='missing')),('hot',OneHotEncoder(handle_unknown='ignore'))])","90ff1d25":"preprocess = ColumnTransformer(transformers = [\n    ('numeric', numeric_pipeline,numeric_features),\n    ('categorical', category_pipeline,categorical_features)\n])","72e47487":"model_pipeline = Pipeline(steps=[\n    ('prep', preprocess),\n    ('model',LogisticRegression(solver='lbfgs'))\n])","5f49a7dc":"x = data.drop('survived', axis=1)\ny = data['survived']","eb0dc3a3":"x_train = x.head(621)\ny_train = y.head(621)\nx_test = x.tail(418)\ny_test = y.tail(418)","bbf81a6a":"y_test.shape","a914ac19":"model_pipeline.fit(x_train,y_train)\nmodel_pipeline.score(x_test,y_test)","5d2ff903":"model_pipeline = Pipeline(steps=[\n    ('prep', preprocess),\n    ('model', RandomForestClassifier())\n])","7ddb468b":"model_pipeline.fit(x_train,y_train)\nmodel_pipeline.score(x_test,y_test)","ab424a8e":"df = data.tail(418)\ndf = df.drop(['pclass','name','sex','age','sibsp','parch','ticket','fare','cabin','embarked','boat','body','home.dest','survived'], axis=1)","b20e8591":"df['Survived'] = model_pipeline.predict(x_test)\ndf.tail()","9be7e6c6":"df.to_csv('titanic.csv',index=False)","bdab6b8a":"### Model Fitting\/Evaluation - Logistic Regression\n\nGiven all features, lets predict the survived variable using logistic regression","c54a6778":"### Import Relevant Libraries","4e70f88f":"#### Lets create a list with numeric and categorical features","1a0862f3":"### Data Preprocessing ","d059567b":"#### One Hot Encoding\n\nLets create a pipleline to handle missing values. ","279062f5":"### Model Fitting\/Evaluation - RandomForestClassifier\n\nGiven all features, lets predict the survived variable using a Random Forest Classifier"}}