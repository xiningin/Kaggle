{"cell_type":{"eaaabf5b":"code","41bb934c":"code","352db3f0":"code","0d232a04":"code","6bbb1d11":"code","aecd9c7b":"code","7a338fc6":"code","d6efce74":"code","fd851b11":"code","b588a447":"code","90db7c06":"code","69318aff":"markdown"},"source":{"eaaabf5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41bb934c":"import torch\nimport fastai\nfrom fastai.tabular.all import *\nfrom fastai.text.all import *\nfrom fastai.vision.all import *\nfrom fastai.medical.imaging import *\nfrom fastai import *\n\nimport time\nfrom datetime import datetime\n\nprint(f'Notebook last run on {datetime.fromtimestamp(time.time()).strftime(\"%Y-%m-%d, %H:%M:%S UTC\")}')\nprint('Using fastai version ',fastai.__version__)\nprint('And torch version ',torch.__version__)","352db3f0":"def plot_fastai_results(learn):\n    '''\n    Plots sensitivity, speficificty, prevalence, accuracy, and confusion matrix for a fastai model named \"learn\".\n    Some portions are adapted from https:\/\/github.com\/fastai\/fastai\/blob\/master\/nbs\/61_tutorial.medical_imaging.ipynb\n    '''\n    interp = Interpretation.from_learner(learn)\n    interp = ClassificationInterpretation.from_learner(learn)\n    interp.plot_confusion_matrix(figsize=(7,7))\n    losses,idxs = interp.top_losses()\n    len(dls.valid_ds)==len(losses)==len(idxs)\n    upp, low = interp.confusion_matrix()\n    tn, fp = upp[0], upp[1]\n    fn, tp = low[0], low[1]\n    sensitivity = tp\/(tp + fn)\n    print('Sensitivity: ',sensitivity)\n    specificity = tn\/(fp + tn)\n    print('Specificity: ',specificity)\n    #val = dls.valid_ds.cat\n    prevalance = 15\/50\n    print('Prevalance: ',prevalance)\n    accuracy = (sensitivity * prevalance) + (specificity * (1 - prevalance))\n    print('Accuracy: ',accuracy)","0d232a04":"from PIL import Image\n\nimage = Image.open(\"..\/input\/fercustomdataset-3classes\/FER_Custom_Dataset\/Disappointed\/1014.jpg\")\nimage","6bbb1d11":"_,axs = subplots(1,2)\nshow_image(image, ctx=axs[0], title='original')\nshow_image(image.flip_lr(), ctx=axs[1], title='flipped');","aecd9c7b":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,sz in zip(axs.flatten(), [300, 500, 700]):\n    show_image(image.crop_pad(sz), ctx=ax, title=f'Size {sz}');","7a338fc6":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,mode in zip(axs.flatten(), [PadMode.Zeros, PadMode.Border, PadMode.Reflection]):\n    show_image(image.crop_pad((600,700), pad_mode=mode), ctx=ax, title=mode);","d6efce74":"path = Path('\/kaggle\/input\/fercustomdataset-3classes\/FER_Custom_Dataset\/Disappointed\/')\ndls = ImageDataLoaders.from_folder(path, train='train',\n                                   item_tfms=Resize(224),valid_pct=0.2,\n                                   bs=64,seed=0)\ndls.show_batch()","fd851b11":"learn = cnn_learner(dls, resnet34, metrics=accuracy, model_dir='\/kaggle\/tmp\/model\/')\nlearn.lr_find()\nlearn.fine_tune(5)\nlearn.show_results()","b588a447":"plot_fastai_results(learn=learn)","90db7c06":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, not a DS. Stick around, I will be right back. @mpwolke' )","69318aff":"#Codes from Paul Mooney https:\/\/www.kaggle.com\/paultimothymooney\/fastai-v2-with-image-text-and-tabular-data"}}