{"cell_type":{"ca1dd740":"code","479a0e04":"code","0a398d40":"code","0d7a0e0e":"code","f3e60410":"code","884719be":"code","f641afe2":"code","3bc34ffa":"code","dcbe662b":"code","4bf6eb2c":"code","5b5916bb":"code","619cf6f6":"code","9c7b5121":"code","664dd05b":"markdown","3b4e9ca4":"markdown","25325f44":"markdown","0a9f1e6b":"markdown","ad74afda":"markdown","4239b89f":"markdown","82946eec":"markdown","3cbb33f3":"markdown","467dd063":"markdown"},"source":{"ca1dd740":"import pandas as pd\nimport seaborn as sns\n\nsns.set_theme(rc={'figure.figsize':(20,10)})\n\ncall_file = \"..\/input\/san-jose-police-calls\/policecalls2019.csv\"\ntype_category = pd.read_csv(\"..\/input\/police-call-type-and-dispo-categories\/call-type-categories.csv\", index_col='CALL_TYPE')\ndispo_category = pd.read_csv(\"..\/input\/police-call-type-and-dispo-categories\/dispo-categories.csv\", index_col='FINAL_DISPO')\n\ncalls = (\n    pd\n    .read_csv(\n        call_file,\n        dtype={\n            'CATEGORY':str,\n        }\n    )\n    .join(type_category, on='CALL_TYPE')\n    .join(dispo_category, on='FINAL_DISPO')\n)\n\ncalls.CATEGORY = calls.CATEGORY.apply(lambda x: x.title() if type(x) is str else 'Unknown')\n\n# Pie chart with anything beyond 'thresh' grouped as 'other'\ndef pie_plot(title, df, thresh = 15):\n    x = df[:thresh].copy()\n    x.loc['Other'] = df[thresh:].sum()\n    x.plot.pie(title=title, ylabel='', legend=None, autopct='%1.1f%%')#.legend(bbox_to_anchor=(1,1))","479a0e04":"calls.shape[0]","0a398d40":"pie_plot(\n    \"SJPD Calls by Category, 2019\",\n    calls\n    .groupby('CATEGORY')\n    .size()\n    .sort_values(ascending=False)\n)","0d7a0e0e":"pie_plot(\n    \"Quality of Life Calls, 2019\",\n    calls\n    .query(\"CATEGORY == 'Quality Of Life'\")\n    .groupby('CALL_TYPE')\n    .size()\n    .sort_values(ascending=False),\n    thresh=10\n)","f3e60410":"pie_plot(\n    \"Results of calls\",\n     calls\n    .groupby('Dispo category')\n    .size()\n    .sort_values(ascending=False),\n    thresh=7\n)","884719be":"pie_plot(\n    'Reasons for Arrest',\n    calls\n    .query(\"`Dispo category` == 'Arrest'\")\n    .groupby(\"CATEGORY\")\n    .size()\n    .sort_values(ascending=False),\n    thresh=14\n)","f641afe2":"pie_plot(\n    \"Reasons for Criminal Citations\",\n    calls\n    .query(\"`Dispo category` == 'Criminal citation'\")\n    .groupby(\"CATEGORY\")\n    .size()\n    .sort_values(ascending=False),\n    thresh=10\n)","3bc34ffa":"import plotly.graph_objects as go\n\ndispo_dim = go.parcats.Dimension(\n    values=calls['Dispo category'],\n    label=\"Disposition\",\n)\n\ncat_dim = go.parcats.Dimension(\n    values=calls.CATEGORY,\n    label=\"Call type\"\n)\n\ncolor = calls.FINAL_DISPO\ncolorscale = [[]]\nfig = go.Figure(data=[\n    go.Parcats(dimensions=[cat_dim, dispo_dim])\n])\n\nfig.show()","dcbe662b":"import seaborn as sns\nfrom matplotlib import pyplot as plt\nplt.rcParams['figure.figsize'] = [10, 10]\n\nm = sns.heatmap(pd.crosstab(calls['CATEGORY'].str.title(), calls['Dispo category']), cmap='rocket_r')\n\n# Change some X-axis labels for better readability\nxlabels = m.get_xticklabels()\nxlabels[1:3] = ['Cancelled, etc.', 'Courtesy']\nm.set(xlabel='Final disposition', ylabel='Call type')\n_ = m.set_xticklabels(xlabels, rotation=70) # Assign to empty variable to reduce repl noise","4bf6eb2c":"violent_arrest_count = calls.query(\"`Dispo category` == 'Arrest' & CATEGORY in ['Violent', 'Domestic']\").shape[0]\n\nprint(\"{} or {:.2f}% of total calls\".format(\n    violent_arrest_count,\n    100*(violent_arrest_count \/ calls.shape[0])\n))","5b5916bb":"import pandas as pd\nfrom decimal import Decimal\n\ndef currency(x):\n    return float(x.replace(',','')) if x else None\n\nsalaries = pd.read_csv(\n    '..\/input\/san-jose-public-employee-compensation\/employee-compensation-2019.csv',\n    encoding='cp1252',\n    dtype = {\n        'Name': str,\n        'Department': 'category',\n        'Job Title (as of 12\/31\/19)': 'category',\n    },\n    converters = {\n        'Total Cash Compensation': currency,\n        'Base Pay': currency,\n        'Overtime': currency,\n        'Sick and Vacation Payouts': currency,\n        'Other Cash Compensation': currency,\n        'Defined Contribution Plan Contributions - City Paid': currency,\n        'Medical Dental Vision': currency,\n        'Retirement Contributions (Normal Cost) - City Paid': currency,\n        'Long Term Disability, Life, Medicare': currency,\n        'Misc Employment Related Costs': currency\n    }\n)\n\nsalaries = salaries.query(\"Department == 'Police'\")","619cf6f6":"uniformed_titles = ['Police Officer', 'Police Sergeant', 'Police Lieutenant', 'Police Captain', 'Deputy Chief of Police', 'Chief of Police']\nuniformed_salaries = (\n    salaries\n    .query(\"`Job Title (as of 12\/31\/19)` in @uniformed_titles\")\n    .groupby(\"Job Title (as of 12\/31\/19)\")\n    .agg(\n        EmployeeCount=(\"Name\", \"size\"),\n        MedianTotalComp=(\"Total Cash Compensation\", 'median'),\n        MaxTotalComp=(\"Total Cash Compensation\", 'max')\n    )\n    .query(\"EmployeeCount > 0\")\n    .sort_values(by='EmployeeCount', ascending=False)\n)\nuniformed_salaries","9c7b5121":"uniformed_salaries.plot.bar(y=['MedianTotalComp','MaxTotalComp'])","664dd05b":"# How does the call type impact how it ends?","3b4e9ca4":"# What sorts of calls end in arrest?","25325f44":"# How many arrests were made for violent crimes, including domestic violence?","0a9f1e6b":"# How do police calls end?","ad74afda":"# What are the reasons for police calls?","4239b89f":"# What are the types of Quality of Life calls?","82946eec":"# What do SJPD salaries look like?","3cbb33f3":"# What sorts of calls end in criminal citation?","467dd063":"# How many police dispatches occurred?"}}