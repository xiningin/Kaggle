{"cell_type":{"ecf5ec15":"code","46d2bccf":"code","3c3b3430":"code","36ccf7f6":"code","cbe5fd77":"code","bf651f0f":"code","d21b0cfd":"code","4b3d1796":"code","ba599222":"code","63128644":"code","a0f3d66b":"code","5ec4526d":"code","c954fe2a":"code","2acf39b3":"code","30907b86":"code","fd73de49":"code","1cf0de8c":"code","6b0dad5e":"code","c9a81eab":"code","0a6bab82":"code","ceb225ca":"code","6895c358":"code","9154da6c":"code","a86376c0":"code","0a1e68d4":"markdown","a8eb2618":"markdown","faccdea5":"markdown","db25ddd0":"markdown","9933e156":"markdown","9ef6ccbf":"markdown","87e6df3f":"markdown","178e46d6":"markdown","1423cb52":"markdown","2d452cdf":"markdown","31368dd0":"markdown","72c2cce7":"markdown","43f875f2":"markdown","763c08c5":"markdown","322d0c08":"markdown","93c8cdba":"markdown","a5703704":"markdown","97712fca":"markdown","7f50305f":"markdown","6a3fa75f":"markdown","0e1e6934":"markdown","645cc2a9":"markdown","3447eb18":"markdown","81406834":"markdown","4940e450":"markdown","de2196ea":"markdown","d59099f2":"markdown","78a09f2a":"markdown","486f3f9a":"markdown","faadfccb":"markdown"},"source":{"ecf5ec15":"!pip install toloka-kit==0.1.12\n!pip install pandas\n!pip install ipyplot\n\nimport datetime\nimport time\nimport logging\nimport sys\n\nimport pandas\nimport ipyplot\n\nimport toloka.client as toloka\nimport toloka.client.project.template_builder as tb\n\nlogging.basicConfig(\n    format='[%(levelname)s] %(name)s: %(message)s',\n    level=logging.INFO,\n    stream=sys.stdout,\n)","46d2bccf":"toloka_client = toloka.TolokaClient(input(\"Enter your token:\"), 'PRODUCTION')  # Or switch to 'SANDBOX'\n# Lines below check that the OAuth token is correct and print your account's name\nprint(toloka_client.get_requester())","3c3b3430":"toloka.TolokaClient?","36ccf7f6":"toloka.TolokaClient.get_requester?","cbe5fd77":"toloka.requester.Requester?","bf651f0f":"new_project = toloka.Project(\n    public_name='Cat or Dog?',\n    public_description='Specify the type of animal depicted in a photo.',\n)","d21b0cfd":"input_specification = {'image': toloka.project.UrlSpec()}\noutput_specification = {'result': toloka.project.StringSpec()}","4b3d1796":"# This component shows images\n# https:\/\/toloka.ai\/docs\/search\/?query=ImageViewV1\nimage_viewer = tb.ImageViewV1(tb.InputData('image'), ratio=[1, 1])\n\n# This component allows to select a label\n# https:\/\/toloka.ai\/docs\/search\/?query=RadioGroupFieldV1\nradio_group_field = tb.RadioGroupFieldV1(\n    tb.OutputData('result'),\n    [\n        tb.fields.GroupFieldOption('cat', 'Cat'),\n        tb.fields.GroupFieldOption('dog', 'Dog')\n    ],\n    validation=tb.RequiredConditionV1(), # https:\/\/toloka.ai\/docs\/search\/?query=RequiredConditionV1\n)\n\n# Allows to set a width limit when displaying a task\ntask_width_plugin = tb.TolokaPluginV1(\n    'scroll',\n    task_width=400,\n)\n\n# How performers will see the task\nproject_interface = toloka.project.TemplateBuilderViewSpec(\n    view=tb.ListViewV1([image_viewer, radio_group_field]),\n    plugins=[task_width_plugin],\n)\n\n# This block assigns task interface and input\/output data specification to the project\n# Note that this is done via the task specification class\nnew_project.task_spec = toloka.project.task_spec.TaskSpec(\n    input_spec=input_specification,\n    output_spec=output_specification,\n    view_spec=project_interface,\n)","ba599222":"new_project.public_instructions = 'Look at the picture. Determine what is on it: a <b>cat<\/b> or a <b>dog<\/b>. Choose the correct option.'","63128644":"new_project = toloka_client.create_project(new_project)","a0f3d66b":"new_pool = toloka.Pool(\n    project_id=new_project.id,\n    private_name='Pool 2',  # Only you can see this information\n    may_contain_adult_content=False,\n    reward_per_assignment=0.01,  # Sets the minimum payment amount for one page of atomic tasks in USD, https:\/\/toloka.ai\/docs\/search\/?query=pricing\n    assignment_max_duration_seconds=60*5,  # Gives performers 5 minutes to complete one page of tasks\n    will_expire=datetime.datetime.utcnow() + datetime.timedelta(days=365),  # Sets that the pool will close after one year\n)","5ec4526d":"new_pool.defaults = toloka.pool.Pool.Defaults(\n    default_overlap_for_new_tasks=3,\n    default_overlap_for_new_task_suites=0,\n)","c954fe2a":"new_pool.set_mixer_config(\n    real_tasks_count=10,  # The number of tasks per page (task suite).\n)","2acf39b3":"new_pool.filter = toloka.filter.Languages.in_('EN')","30907b86":"# Turns on captchas\nnew_pool.set_captcha_frequency('MEDIUM')\n# Bans performers by captcha criteria\nnew_pool.quality_control.add_action(\n    # Type of quality control rule\n    collector=toloka.collectors.Captcha(history_size=5),\n    # This condition triggers the action below\n    # Here overridden comparison operator actually returns a Condition object\n    conditions=[toloka.conditions.FailRate > 20],\n    # What exactly should the rule do when the condition is met\n    # It bans the performer for 1 day\n    action=toloka.actions.RestrictionV2(\n        scope='PROJECT',\n        duration=1,\n        duration_unit='DAYS',\n        private_comment='Captcha',\n    )\n)","fd73de49":"new_pool = toloka_client.create_pool(new_pool)","1cf0de8c":"# Download the data set\n!curl https:\/\/tlk.s3.yandex.net\/dataset\/cats_vs_dogs\/toy_dataset.tsv --output dataset.tsv\n\ndataset = pandas.read_csv('dataset.tsv', sep='\\t')\n\nprint(f'Dataset contains {len(dataset)} rows\\n')\n\ndataset = dataset.sample(frac=1).reset_index(drop=True)\n\nipyplot.plot_images(\n    images=[row['url'] for _, row in dataset.iterrows()],\n    labels=[row['label'] for _, row in dataset.iterrows()],\n    max_images=12,\n    img_width=300,\n)","6b0dad5e":"tasks = [\n    toloka.Task(input_values={'image': url}, pool_id=new_pool.id)\n    for url in dataset['url']\n]\n# Add tasks to a pool\ntoloka_client.create_tasks(tasks, allow_defaults=True)\nprint(f'Populated pool with {len(tasks)} tasks')\nprint(f'To view this pool, go to https:\/\/toloka.yandex.com\/requester\/project\/{new_project.id}\/pool\/{new_pool.id}')\n# print(f'To view this pool, go to https:\/\/sandbox.toloka.yandex.com\/requester\/project\/{new_project.id}\/pool\/{new_pool.id}') # Print a sandbox version link\n\n# Opens the pool\nnew_pool = toloka_client.open_pool(new_pool.id)","c9a81eab":"pool_id = new_pool.id\n\ndef wait_pool_for_close(pool_id, minutes_to_wait=1):\n    sleep_time = 60 * minutes_to_wait\n    pool = toloka_client.get_pool(pool_id)\n    while not pool.is_closed():\n        op = toloka_client.get_analytics([toloka.analytics_request.CompletionPercentagePoolAnalytics(subject_id=pool.id)])\n        op = toloka_client.wait_operation(op)\n        percentage = op.details['value'][0]['result']['value']\n        print(\n            f'   {datetime.datetime.now().strftime(\"%H:%M:%S\")}\\t'\n            f'Pool {pool.id} - {percentage}%'\n        )\n        time.sleep(sleep_time)\n        pool = toloka_client.get_pool(pool.id)\n    print('Pool was closed.')\n\nwait_pool_for_close(pool_id)","0a6bab82":"answers_df = toloka_client.get_assignments_df(pool_id)\n# Prepare dataframe for aggregation\nanswers_df = answers_df.rename(columns={\n    'INPUT:image': 'task',\n    'OUTPUT:result': 'label',\n    'ASSIGNMENT:worker_id': 'performer',\n})\n\nprint(f'answers count: {len(answers_df)}')","ceb225ca":"!pip install crowd-kit==0.0.5\nfrom crowdkit.aggregation import MajorityVote","6895c358":"MajorityVote?","9154da6c":"# Run majority vote aggregation\npredicted_answers = MajorityVote().fit_predict(answers_df)\n\nprint(predicted_answers)\n\n# Some preparations for displaying the results\npredicted_answers = predicted_answers.sample(frac=1)\nimages = predicted_answers.index.values\nlabels = predicted_answers.values\nstart_with = 0","a86376c0":"if start_with >= len(predicted_answers):\n    print('no more images')\nelse:\n    ipyplot.plot_images(\n        images=images[start_with:],\n        labels=labels[start_with:],\n        max_images=12,\n        img_width=300,\n    )\n\n    start_with += 12","0a1e68d4":"When you open a pool, filtered performers start seeing the tasks and could start working on them.\n\nIn order to maintain the progress of pool completion, set up an automatic waiting process.","a8eb2618":"Look at the results.\n\nNote: The cell below can be run several times.","faccdea5":"# Introduction to Toloka and Toloka API\n\n[Toloka](https:\/\/toloka.ai) is a crowdsourcing platform designed for constructing scalable pipelines of data labeling & data analysis. One of the main goals of Toloka is to support data-centric AI development.\n\nWith Toloka, it's possible to receive high-quality results of:\n* Text annotation\n* Image annotation\n* Video annotation\n* Audio annotation\n* Data collection\n* Field tasks\n\nExamples of common tasks that could be solved with the help of the Toloka:\n* Classification or segmentation of images\n* Text translation\n* Content moderation\n* Pricing & produce monitoring\n* Audio collection\n\nThis notebook provides a brief introduction to Toloka API & Toloka-Kit.  \nWe will construct a simple image classification pipeline to test the crowd's power in data labeling tasks.","db25ddd0":"#### Overlap\n\nTo minimize the risk of getting wrong answers, you can ask several performers to complete the same atomic task. The amount of performers working on the same atomic task is called **overlap**.\n\nIn this example, the overlap is 3. This means that three different performers will complete every task.","9933e156":"[Toloka-Kit](https:\/\/github.com\/Toloka\/toloka-kit) is an open-source library integrated into Toloka API functionality.\n\n**Useful links:**\n\n- [Toloka Kit documentation](https:\/\/toloka.ai\/docs\/toloka-kit\/?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n- [Toloka homepage](https:\/\/toloka.ai\/?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n- [Toloka requester's guide](https:\/\/toloka.ai\/docs\/guide\/index.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n- [Toloka API documentation](https:\/\/toloka.ai\/docs\/api\/concepts\/about.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit)","9ef6ccbf":"#### Performers\n\nPerformers in Toloka may not be experts in your type of task. Crowdsourcing studies ways to get the desired result with the help of various performers. To learn more about Toloka performers, go to [our blog](https:\/\/toloka.ai\/blog?utm_source=github&utm_medium=site&utm_campaign=tolokakit#).\n\nTip: Our [online course](https:\/\/www.coursera.org\/learn\/practical-crowdsourcing?utm_source=github&utm_medium=site&utm_campaign=tolokakit) on practical crowdsourcing for data labeling is now available on Coursera.","87e6df3f":"#### Quality control rules<a id='quality_control_rules'><\/a>\n\n[Quality control rules](https:\/\/toloka.ai\/docs\/guide\/concepts\/check-performers.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) regulate a pool completion process and performers' access to the pool.\n\nQuality control is a powerful tool for dealing with cheating&fraud and maintaining the quality of a markup provided. Learn more about how to [set up the quality control](https:\/\/toloka.ai\/docs\/guide\/concepts\/qa-pool-settings.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit).\n\nThis example uses the Captcha rule. It is the simplest way to exclude fake users (robots) and cheaters.","178e46d6":"#### Filters\n\n[Filters](https:\/\/toloka.ai\/docs\/guide\/concepts\/filters.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) help you to select performers with desired abilities for your project.\n\nThere may be different reasons to use filters, e.g.:\n* You require performers with certain traits for your pool\/project.\n* You want to exclude a particular group of performers from your pool\/project.\n\nTasks will only be shown to matching performers rather than to all of them.\n\nThis example requires English-speaking performers because the project's instruction is in English.","1423cb52":"## Summary\n\nThis example explained basic Toloka entities and how Toloka-Kit can work with them.\n\nThe described project (classification) is beneficial for:\n* Accurate evaluation.\n* Checking the results of a complex project, as in [object detection example](https:\/\/github.com\/Toloka\/toloka-kit\/tree\/main\/examples\/1.computer_vision\/object_detection) [![Open In Colab](https:\/\/colab.research.google.com\/assets\/colab-badge.svg)](https:\/\/colab.research.google.com\/github\/Toloka\/toloka-kit\/blob\/main\/examples\/1.computer_vision\/object_detection\/object_detection.ipynb)\n\nFeel free to get to know Toloka & ask any questions!","2d452cdf":"## Setting up a project\n\n### Input data\n\nThis example uses a small data set with images of cats & dogs.\n\nThe dataset was collected by the Toloka team and distributed under a Creative Commons Attribution 4.0 International license\n[![License: CC BY 4.0](https:\/\/img.shields.io\/badge\/License-CC%20BY%204.0-lightgrey.svg)](https:\/\/creativecommons.org\/licenses\/by\/4.0\/)","31368dd0":"## Registration\n\n1. [Register](https:\/\/toloka.ai\/docs\/guide\/concepts\/access.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) in Toloka as a requester (requester is a creator of markup tasks' interfaces).\n2. Choose the backend:\n  * The [production backend](https:\/\/toloka.yandex.com\/for-requesters\/?utm_source=github&utm_medium=site&utm_campaign=tolokakit) is used by default in this example. Usually, it's used for real data markup.\n  * The [sandbox backend](https:\/\/sandbox.toloka.yandex.com\/for-requesters\/?utm_source=github&utm_medium=site&utm_campaign=tolokakit) is a testing environment for Toloka. [Learn more](https:\/\/toloka.ai\/docs\/guide\/concepts\/sandbox.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit).\n3. [Add funds](https:\/\/toloka.ai\/docs\/guide\/concepts\/refill.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) to your Toloka account, if you're going to use the production version **(promo code is provided below)**.\n4. [Get an OAuth token](https:\/\/toloka.ai\/docs\/api\/concepts\/access.html#access__token?utm_source=github&utm_medium=site&utm_campaign=tolokakit) for your version. Go to **Profile** \u2192 **External Services Integration** \u2192 **Get Oauth Token**.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/OAuth.png?raw=true\"\n         alt=\"OAuth token\"  width=\"800\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 1.<\/b> How to get an OAuth token.\n  <\/td><\/tr>\n<\/table>\n\n### Enter promo code\nTo get acquainted with Toloka tools for free, you can use the promo code **TOLOKAKIT1** for $20 on your [profile page](https:\/\/toloka.yandex.com\/requester\/profile?utm_source=github&utm_medium=site&utm_campaign=tolokakit) after registration.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/promocode.png?raw=true\"\n         alt=\"OAuth token\"  width=\"800\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 1.<\/b> How to get an OAuth token.\n  <\/td><\/tr>\n<\/table>","72c2cce7":"To get acquainted with the Toloka interface & API, we will provide you with step-by-step instructions listed below. ","43f875f2":"Open your project's page. You will see your new pool.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/project_with_pool.png?raw=true\"\n         alt=\"Project interface with a pool\"  width=\"1000\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 5.<\/b> Project interface with a pool.\n  <\/td><\/tr>\n<\/table>\n\nPool interface looks like that.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/pool_preview.png?raw=true\"\n         alt=\"Pool interface\"  width=\"1000\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 6.<\/b> Pool interface.\n  <\/td><\/tr>\n<\/table>\n\nRight now the pool is empty and closed.","763c08c5":"The cell above created an object in your device's memory.  \nAs we stated above, to become ready for usage, the project must also contain:\n* [Input and output data specification](https:\/\/toloka.ai\/docs\/guide\/concepts\/incoming.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n* [Task interface settings](https:\/\/toloka.ai\/docs\/guide\/concepts\/spec.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n* [An instruction](https:\/\/toloka.ai\/docs\/guide\/concepts\/instruction.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n\n**Important:** Several cells below will create changes stored in your device's memory. The data will only be sent to the server after calling one of the `toloka_client` methods.\n\n#### Input and output data\n\nInput field `image` will contain URLs of images that will be labeled.\n\nOutput field `result` will receive `cat` or `dog` labels.","322d0c08":"Cells below can help you learn more about an object or a method you are interested in.","93c8cdba":"## Toloka entities and how to manage them with Toloka-Kit\n\n### Project\nA [project](https:\/\/toloka.ai\/docs\/guide\/concepts\/overview.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit#project) is a top-level object. It describes characteristics of a problem that we are willing to solve. A project consists of instruction, task interface settings, input and output data specification, and quality control rules (of a markup).\n\nRule of thumb: the easier the task, the better the results. Decomposition is a key to solving any problem with the help of crowdsourcing.\n\nIn this tutorial, we will create a project to solve the classification problem of an animal species presented on an image.","a5703704":"### Create a pool\n\nThe cell below creates a pool from all the information above that was stored in your device's memory.","97712fca":"### Pool\nA [pool](https:\/\/toloka.ai\/docs\/guide\/concepts\/overview.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit#pool) is a set of atomic tasks (to complete one atomic task is to receive a markup for one input entity, f.e label one input image) in a project. Atomic tasks in a pool share common pricing, bounded period of markup completion, selection of performers, and quality control configurations. All atomic tasks in a pool are divided into pages; all pages are processed in parallel. One project can have several pools with different settings (f.e. there could exist training pools and production pools).  \nPool could be in several states, \"open\", \"closed\", \"archived\", \"expired\", etc. The labeling process goes only in a pool in an \"open\" state. You are choosing when & how the pool should be closed.\n\nThe cell below will create a pool as an object in your device's memory. You will send it to Toloka with the `toloka_client` method a bit later.","7f50305f":"Create & upload images to the pool. One atomic task will be created from one image.\n\nToloka will automatically create task suites and distribute tasks among performers depending on an overlap. In our toy example:\n\n1. One task suite will consist of 10 images.\n2. Toloka will let three different performers label one image.","6a3fa75f":"### Aggregation <a id='aggregation'><\/a>\n\n[Aggregation of results](https:\/\/toloka.ai\/docs\/guide\/concepts\/result-aggregation.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) should be run if tasks were issued with an overlap of 2 or higher.\n\n[Majority vote](https:\/\/toloka.ai\/docs\/guide\/concepts\/mvote.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) is a quality control method based on matching responses from the majority of performers who complete the same task. E.g., if 2 out of 3 performers selected the `cat` label, the final label for this task will be `cat`.\n\nMajority vote is easily implemented, but you can also use our [crowdsourcing library](https:\/\/github.com\/Toloka\/crowd-kit?utm_source=github&utm_medium=site&utm_campaign=tolokakit). It contains a lot of new aggregation methods.","0e1e6934":"### Project preview\n\n1. Go to the project page to make sure the task interface works correctly. To do this, click the link in the cell's output above.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/project_look.png?raw=true\"\n         alt=\"Project interface\"  width=\"1000\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 2.<\/b> What the project interface might look like.\n  <\/td><\/tr>\n<\/table>\n\n2. In the top right corner of the project page, click **Project actions** \u2192 **Preview**.\n\n3. In the top left corner of the preview page, click **Change input data**, insert an image URL into the `image` field, then click the **Apply** button.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/task_look.png?raw=true\"\n         alt=\"Task interface\"  width=\"1000\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 3.<\/b> What the task interface might look like and how to insert images in the preview.\n  <\/td><\/tr>\n<\/table>\n\n4. In the top right corner of the preview page, click the **Instructions** button. Verify that everything is displayed as you want it to be.\n\n5. Select an option in your task. In the bottom right corner of the preview page, click **Submit** and then **View responses**. Check in the appeared result window that your results are written in the expected format and that the entered data is correct.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/results_preview.png?raw=true\"\n         alt=\"Result priview\"  width=\"1000\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 4.<\/b> What the results might look like.\n  <\/td><\/tr>\n<\/table>\n\nTips:\n* We strongly recommend **checking the task interface and instructions** every time you create a project. This will help you ensure that the performers will complete the task and that your results will have **high quality**.\n* Do a **trial run** with a small amount of data. Make sure that after running the entire pipeline, you get the data in the expected format and quality.","645cc2a9":"### Get responses\n\nWhen all the tasks are completed, you are able to look at the responses from performers.","3447eb18":"An `assignment` value is one of the performer's responses to all the tasks on a task suite (label per image).\n\nIf a performer completed several task suites, then `toloka_client.get_assignments_df` will contain several `assignment` values.","81406834":"\u0421reate a Toloka client instance. All API calls will go through it.","4940e450":"#### Create a project\n\nUse `toloka_client` defined at the beginning.\n\nThe data is only sent to the server after calling one of the `toloka_client` methods.","de2196ea":"## Getting started with Toloka-Kit\nInstall Toloka-Kit and import it.","d59099f2":"#### Task instruction\n\nThe crowdsourcing platform is designed in such a way that performers are free to choose any project to complete which they find more appealing (based on its interface, complexity, and a reward provided). \n\nThe first thing which is shown to the performers (after them selecting the project) is the [instruction](https:\/\/toloka.ai\/docs\/guide\/concepts\/instruction.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit) that you provided. The clearer and more detailed the instruction is, the higher the quality of the markup will be. It is always important to add various examples describing the problem specification, but the instruction should not be overcomplicated.\n\nThe instruction chosen for the toy example is elementary due to the simplicity of the markup task.","78a09f2a":"#### Task interface\n\nThere are two editors available in Toloka:\n* [HTML\/CSS\/JS editor](https:\/\/toloka.ai\/docs\/guide\/concepts\/spec.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit#interface-section)\n* [Template Builder](https:\/\/toloka.ai\/docs\/template-builder\/index.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit)\n\nTemplate Builder configures task interface at the entity level.  \nIt is suitable for common tasks, while HTML\/CSS\/JS editor could be used for covering highly specific & rarely used details of a task interface. Therefore, we recommend using Template Builder for your projects at the beginning.\n\nThe cell below will create a task interface for our project.","486f3f9a":"You can see the labeled images. Some possible results are shown in figure 7 below.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/img\/possible_results.png?raw=true\"\n         alt=\"Possible results\"  width=\"1000\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 7.<\/b> Possible results.\n  <\/td><\/tr>\n<\/table>","faadfccb":"#### Task suite\n\nA [task suite](https:\/\/toloka.ai\/docs\/guide\/concepts\/overview.html?utm_source=github&utm_medium=site&utm_campaign=tolokakit#tasks-page) is a set of atomic tasks shown on one page in a project pool.\n\nAn essential part of configuring pools is to decide how many atomic tasks will be issued to a performer at once. E.g., if you set 3 atomic tasks for a task suite, a performer will see three images at once on one page.\n\nNote that `reward_per_assignment` and `assignment_max_duration_seconds` fields in pool settings set a price and time for one **task suite**, not an atomic task.\n\nCombining atomic tasks in task suits enables:\n* Choosing a more precise&fair reward for a performer.\n* Calculating a performer's skill in labeling this particular project and using it to determine the quality of a markup. Learn more below, in [Aggregation](#aggregation).\n* Wise configuration of quality control settings. Learn more below, in [Quality control rules](#quality_control_rules)."}}