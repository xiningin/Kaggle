{"cell_type":{"68f6af1a":"code","db43e808":"code","0494c608":"code","cb3057a5":"code","4f0f5085":"code","33ab4613":"code","02336414":"code","efade971":"code","af266ac0":"code","fa19d9c2":"code","dcdc7979":"code","47a1764d":"code","b1cb7494":"code","981837af":"code","7382a5fa":"code","ea66225a":"code","741ffda8":"code","1d0f3cb3":"code","7679794f":"code","80d50109":"code","05df6cc9":"code","3a10ffe9":"code","28a007ed":"code","101a3a4a":"code","8f2ee4c7":"code","a11ec8f7":"code","779e9f2d":"code","9d8befcd":"code","ed939f95":"markdown","6f03ce5c":"markdown","451e402f":"markdown","e4c93377":"markdown","1741685f":"markdown","bd9d13f8":"markdown","bb55cdda":"markdown","71f0efc9":"markdown","37a76c9e":"markdown","33df5604":"markdown","f92c1675":"markdown","09516ca9":"markdown","44768853":"markdown","7f46cefd":"markdown","855532f2":"markdown","be7daad2":"markdown","8a83811f":"markdown","d042882b":"markdown","acc901a6":"markdown","ed8745bf":"markdown","9e6dc0ce":"markdown","6e9e0b5f":"markdown","f2601fed":"markdown","797ec4b4":"markdown","0182a340":"markdown","ab3952d1":"markdown","f57a02d2":"markdown","0e41c1fb":"markdown","d07733bc":"markdown","313f23fb":"markdown","6bcefbeb":"markdown","a27b71ad":"markdown","ed182c8f":"markdown","44ee6599":"markdown","48324a72":"markdown","4d4e8191":"markdown","13ce1a01":"markdown","150c240d":"markdown","09669c2e":"markdown"},"source":{"68f6af1a":"import matplotlib.pyplot as plt\nimport seaborn as srn\nimport sklearn.model_selection\nimport catboost as cbt\nimport xgboost as xgb\nfrom sklearn.dummy import DummyClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import svm\nfrom sklearn.naive_bayes import GaussianNB","db43e808":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0494c608":"df=pd.read_csv('\/kaggle\/input\/gender-classification\/Transformed Data Set - Sheet1.csv')\ndf","cb3057a5":"print('shape of the dataframe is   : ',df.shape)","4f0f5085":"a=df['Favorite Color'].value_counts()\ncolr=a.index\na","33ab4613":"a=df['Favorite Music Genre'].value_counts()\nmgn=a.index\na","02336414":"a=df['Favorite Beverage'].value_counts()\nfbv=a.index\na","efade971":"a=df['Favorite Soft Drink'].value_counts()\nfsd=a.index\na","af266ac0":"a=df['Gender'].value_counts()\ngen=a.index\na","fa19d9c2":"male=df[df['Gender']=='M']\nfemale=df[df['Gender']=='F']\nx=[]\ny=[]\nfor i in range(len(colr)):\n    x.append(len(male[male['Favorite Color']==colr[i]]))\n    y.append(len(female[female['Favorite Color']==colr[i]]))\nplt.plot(colr,x,label='Male')\nplt.legend()\nplt.plot(colr,y,label='Female')\nplt.legend()\nplt.title('Favorite Color')\nplt.xlabel('types')\nplt.ylabel('no. of people')\nplt.show()","dcdc7979":"x=[]\ny=[]\nfor i in range(len(mgn)):\n    x.append(len(male[male['Favorite Music Genre']==mgn[i]]))\n    y.append(len(female[female['Favorite Music Genre']==mgn[i]]))\nplt.plot(mgn,x,label='Male')\nplt.legend()\nplt.plot(mgn,y,label='Female')\nplt.legend()\nplt.xticks(rotation =40)\nplt.title('Favorite Music Genre')\nplt.xlabel('types')\nplt.ylabel('no. of people')\nplt.show()","47a1764d":"x=[]\ny=[]\nfor i in range(len(fbv)):\n    x.append(len(male[male['Favorite Beverage']==fbv[i]]))\n    y.append(len(female[female['Favorite Beverage']==fbv[i]]))\nplt.plot(fbv,x,label='Male')\nplt.legend()\nplt.plot(fbv,y,label='Female')\nplt.legend()\nplt.xticks(rotation =40)\nplt.title('Favorite Beverage')\nplt.xlabel('types')\nplt.ylabel('no. of people')\nplt.show()","b1cb7494":"x=[]\ny=[]\nfor i in range(len(fsd)):\n    x.append(len(male[male['Favorite Soft Drink']==fsd[i]]))\n    y.append(len(female[female['Favorite Soft Drink']==fsd[i]]))\nplt.plot(fsd,x,label='Male')\nplt.legend()\nplt.plot(fsd,y,label='Female')\nplt.legend()\nplt.xticks(rotation =40)\nplt.title('Favorite Soft Drink')\nplt.xlabel('types')\nplt.ylabel('no. of people')\nplt.show()","981837af":"for i in range(len(colr)):\n    df['Favorite Color'].replace(colr[i],i,inplace=True)\ndf","7382a5fa":"for i in range(len(mgn)):\n    df['Favorite Music Genre'].replace(mgn[i],i,inplace=True)\ndf","ea66225a":"for i in range(len(fbv)):\n    df['Favorite Beverage'].replace(fbv[i],i,inplace=True)\ndf","741ffda8":"for i in range(len(fsd)):\n    df['Favorite Soft Drink'].replace(fsd[i],i,inplace=True)\ndf","1d0f3cb3":"for i in range(len(gen)):\n    df['Gender'].replace(gen[i],i,inplace=True)\ndf","7679794f":"X_df=df.drop('Gender',1)\ny_df=df['Gender']","80d50109":"print('shape of X_df :',X_df.shape)\nprint('shape of y_df :',y_df.shape)","05df6cc9":"model=DummyClassifier()\nmodel","3a10ffe9":"x1=X_df\ny1=y_df\nmodel.fit(x1,y1)\ny_pred1=model.predict(x1)\nprint('accuracy of the classifier :',model.score(x1,y1))","28a007ed":"model=RandomForestClassifier(random_state=0)","101a3a4a":"model.fit(x1,y1)\ny_pred2=model.predict(x1)\nprint('acuuracy of the model :',model.score(x1,y1))","8f2ee4c7":"model=svm.SVC()","a11ec8f7":"model.fit(x1,y1)\nprint('acuuracy of the model :',model.score(x1,y1))","779e9f2d":"model=GaussianNB()","9d8befcd":"model.fit(x1,y1)\nprint('acuuracy of the model :',model.score(x1,y1))","ed939f95":"Shape of the dataframe","6f03ce5c":"Let's try dummy clssifier first","451e402f":"From above we can see the data is ***leakage-free data***","e4c93377":"Seems women are attracted to hard drink than men. Small data provided this unlikeliness XD","1741685f":"* Gender","bd9d13f8":"* Gaussian Naive Bayes method","bb55cdda":"# Libraries","71f0efc9":"Favorite Music Genre","37a76c9e":"To predict the data we have to split the X and Y from the data","33df5604":"# Pipeline","f92c1675":"# Please **UPVOTE** if you like it :)","09516ca9":"It is clear that soft drink taste has inferior **GNEDER BIAS**","44768853":"Let's use some classifier to  predict the data and get a reasonable outcome","7f46cefd":"RandomForestClassifier","855532f2":"***Conclusion*** :\n          * As the data is very small in size the classifier fails to perfectly fit the data and submit quite good accuracy.\n          * Still RFC has a better score than othr models.\n          * As decision tree models can fit appropriately over medium-small data ,it produces a larger accuracy.\n          \n          ","be7daad2":"You can join my discord server where I try to analyze over mant datasets: Discord Link : https:\/\/discord.gg\/zSK9an6J (Atlantic Data Studio)","8a83811f":"As naive bayes need huge amount of data to restore a good prediction that clearly results a less accurate prediction","d042882b":"* Support Vector Machine","acc901a6":"* Favorite Soft Drink","ed8745bf":"As the data is very short we will use the whole data as training data and use itself in test also.","9e6dc0ce":"It's visible that men are more attracted towards cool colors like blue green and women are to yellow ,red,violet","6e9e0b5f":"The data has been numerated now .\n\nWe can perform some analysis now.","f2601fed":"This classifier outputs a average prediction score as the data is very short","797ec4b4":"# THE END","0182a340":"* Favorite Soft Drink","ab3952d1":"# Data gathering and simple visualization","f57a02d2":"* Favorite Beverage","0e41c1fb":"Looks like men are attarcted towards modern musics than women","d07733bc":"* Favorite color","313f23fb":"# EDA","6bcefbeb":"* Favorite Music Genre","a27b71ad":"This is a good accuracy . still less then RFC","ed182c8f":"The encoding are done **manually** as a beginner can understand with ease !","44ee6599":"* ***Encoding***","48324a72":"* Favorite Color","4d4e8191":"Woah ! The RandomForest really gave a very good prediction over the training the data ","13ce1a01":"* Favorite Beverage","150c240d":"Surely it is a very small dataset.","09669c2e":"Visualizing and finding unique terms in the dataframe"}}