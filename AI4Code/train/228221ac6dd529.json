{"cell_type":{"940bf455":"code","84d9ecb0":"code","bf4b60de":"code","32b0019a":"code","dc441013":"code","543068b1":"code","88f5169c":"code","f7c0ca0e":"code","4a122018":"code","f967620a":"code","03d8f6aa":"code","7e1b960b":"code","44a552cc":"code","238426c5":"code","c2db0f61":"code","f2902dca":"code","75e029f7":"code","1e7c1d9c":"code","7c73c091":"code","92bb48e8":"code","c6998d47":"code","0b6fd1bf":"code","26a2a2be":"code","18fce8d9":"code","cd5de4ce":"code","78e706f2":"code","9d0e82b2":"code","6a4c2fcb":"code","8bba001a":"code","00587ecb":"code","169847d7":"code","0b798737":"code","67b69685":"code","6526844a":"code","88f777a0":"code","9af188c1":"code","7ef3a818":"code","81313634":"code","51245a1d":"code","234ce985":"code","31a47422":"code","fd44e678":"code","7e8340e9":"code","d7eab9c3":"markdown","3d1bd89e":"markdown","caba02db":"markdown","2b462532":"markdown","236955f7":"markdown","bc207c65":"markdown","e966b4ad":"markdown","71e03b3d":"markdown","6bd9fc59":"markdown","d0b73e19":"markdown","c796914f":"markdown","e73ebfdd":"markdown","f4781f06":"markdown","350f54ff":"markdown","3d8004e1":"markdown","985bb5e4":"markdown"},"source":{"940bf455":"import pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt \nplt.rc(\"font\", size=14)\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nsns.set(style=\"white\")\nsns.set(style=\"whitegrid\", color_codes=True)\nimport warnings\nwarnings.filterwarnings('ignore')","84d9ecb0":"data = pd.read_csv('..\/input\/HR-Employee-Attrition.csv', header=0)\ndata = data.dropna()\nprint(data.shape)","bf4b60de":"print(list(data.columns))","32b0019a":"data.head()","dc441013":"data.drop(columns='Attrition').dtypes","543068b1":"print(data['Attrition'].dtype)","88f5169c":"data.isna().sum()","f7c0ca0e":"data.duplicated().sum()","4a122018":"# cat_col = data.select_dtypes(exclude=np.number)\n# fig, ax = plt.subplots(3, 3, figsize=(30, 40))\n# for variable, subplot in zip(cat_col, ax.flatten()):\n#     cp=sns.countplot(data[variable], ax=subplot,order = data[variable].value_counts().index,hue=data['Attrition'])\n#     cp.set_title(variable,fontsize=40)\n#     cp.legend(fontsize=30)\n#     for label in subplot.get_xticklabels():\n#         label.set_rotation(90)\n#         label.set_fontsize(36)                \n#     for label in subplot.get_yticklabels():\n#         label.set_fontsize(36)        \n#         cp.set_ylabel('Count',fontsize=40)    \n# plt.tight_layout()","f967620a":"data['Attrition'].replace({'No':0,'Yes':1},inplace=True)","03d8f6aa":"num_cols = data.select_dtypes(include = np.number)","7e1b960b":"a = num_cols[num_cols.columns].hist(bins=15, figsize=(15,35), layout=(9,3),color = 'red',alpha=0.6)","44a552cc":"cat_col = data.select_dtypes(exclude=np.number)","238426c5":"cat_col.columns","c2db0f61":"fig, ax = plt.subplots(4, 2, figsize=(15, 15))\nfor variable, subplot in zip(cat_col, ax.flatten()):\n    sns.countplot(data[variable], ax=subplot,palette = 'plasma')\n    for label in subplot.get_xticklabels():\n        label.set_rotation(90)\nplt.tight_layout()","f2902dca":"data[['StandardHours','EmployeeCount']].describe()","75e029f7":"data[['StandardHours','EmployeeCount']].corr()","1e7c1d9c":"corr = data.drop(columns=['StandardHours','EmployeeCount']).corr()\ncorr.style.background_gradient(cmap='YlGnBu')","7c73c091":"# Age - TotalWorkingYears - JobLevel - MonthlyIncome\n# JobLevel - TotalWorkingYears - ","92bb48e8":"hm = data.drop(columns=['StandardHours','EmployeeCount'],axis=1)","c6998d47":"hm","0b6fd1bf":"cols = ['Age', 'BusinessTravel', 'Department',\n       'DistanceFromHome', 'Education', 'EducationField', 'EmployeeCount',\n        'EnvironmentSatisfaction', 'Gender', \n       'JobInvolvement', 'JobLevel', 'JobRole', 'JobSatisfaction',\n       'MaritalStatus', 'NumCompaniesWorked',\n       'Over18', 'OverTime', 'PercentSalaryHike', 'PerformanceRating',\n       'RelationshipSatisfaction', 'StandardHours', 'StockOptionLevel',\n       'TotalWorkingYears', 'TrainingTimesLastYear', 'WorkLifeBalance',\n       'YearsAtCompany', 'YearsInCurrentRole', 'YearsSinceLastPromotion',\n       'YearsWithCurrManager']\nfor col in cols:\n    pd.crosstab(data[col],data.Attrition).plot(kind='bar',color = ('blue','red'),figsize=(10,5))","26a2a2be":"# Age Vs Attrition - From data, it appears that attrition is more at age group 18-23\n# % of attrition is more among people who travel frequently\n# % of attrition is more in sales department\n# %of attrition is more during 0-1 years of working in company\n# People in job role of Sales Representative tend to have more attrition %\n# From given data, overtime population has more attrition","18fce8d9":"data.columns.shape","cd5de4ce":"cat_col.columns.shape","78e706f2":"num_cols.columns.shape","9d0e82b2":"cat_col_encoded = pd.get_dummies(cat_col)","6a4c2fcb":"cat_col_encoded","8bba001a":"df = pd.concat([num_cols,cat_col_encoded],sort=False,axis=1)","00587ecb":"df.head()","169847d7":"X = df.drop(columns='Attrition')","0b798737":"y = df['Attrition']","67b69685":"import matplotlib.pyplot as plt\n%matplotlib inline","6526844a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=4)\nprint ('Train set:', X_train.shape,  y_train.shape)\nprint ('Test set:', X_test.shape,  y_test.shape)","88f777a0":"from sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor","9af188c1":"k = 5\n#Train Model and Predict  \nneigh = KNeighborsClassifier(n_neighbors = k).fit(X_train,y_train)\nneigh","7ef3a818":"yhat = neigh.predict(X_test)\nyhat[0:5]","81313634":"from sklearn import metrics\nprint(\"Train set Accuracy: \", metrics.accuracy_score(y_train, neigh.predict(X_train)))\nprint(\"Test set Accuracy: \", metrics.accuracy_score(y_test, yhat))","51245a1d":"metrics.confusion_matrix(y_train, neigh.predict(X_train))","234ce985":"metrics.confusion_matrix(y_test, yhat)","31a47422":"Ks = 800\nimport numpy as np\nmean_acc = np.zeros((Ks-1))\nstd_acc = np.zeros((Ks-1))\nConfustionMx = [];\nfor n in range(1,Ks):\n    \n    #Train Model and Predict  \n    neigh = KNeighborsClassifier(n_neighbors = n).fit(X_train,y_train)\n    yhat=neigh.predict(X_test)\n    mean_acc[n-1] = metrics.accuracy_score(y_test, yhat)\n\n    \n    std_acc[n-1]=np.std(yhat==y_test)\/np.sqrt(yhat.shape[0])\n\nmean_acc","fd44e678":"plt.plot(range(1,Ks),mean_acc,'g')\nplt.fill_between(range(1,Ks),mean_acc - 1 * std_acc,mean_acc + 1 * std_acc, alpha=0.10)\nplt.legend(('Accuracy ', '+\/- 3xstd'))\nplt.ylabel('Accuracy ')\nplt.xlabel('Number of Nabors (K)')\nplt.tight_layout()\nplt.show()","7e8340e9":"print( \"The best accuracy was with\", mean_acc.max(), \"with k=\", mean_acc.argmax()+1) ","d7eab9c3":"# Output\/Target variable","3d1bd89e":"# Data Analysis","caba02db":"# About the Data:","2b462532":"There are no null values in dataset","236955f7":"# Visualizing value counts of categorical columns through countplot","bc207c65":"# Null Values","e966b4ad":"# Correlation between numerical columns","71e03b3d":"There are no duplicated rows","6bd9fc59":"# Input variables","d0b73e19":"Watson Analytics Sample Data\n\nUncover the factors that lead to employee attrition and explore important questions such as \n\u2018show me a breakdown of distance from home by job role and attrition\u2019 or \u2018compare average monthly \nincome by education and attrition\u2019. This is a fictional data set created by IBM data scientists.\n\nAlso available directly within Watson Analytics as Employee Performance\n\nSource : https:\/\/www.ibm.com\/communities\/analytics\/watson-analytics-blog\/hr-employee-attrition\/","c796914f":"# Implementing the model","e73ebfdd":"1. Age  - (Numeric)  - Age of the Employee\n2. BusinessTravel - (String) - Employee Business Travel Frequency\n3. DailyRate - (integer) - \n4. Department\n5. DistanceFromHome\n6. Education\n7. EducationField\n8. EmployeeCount\n9. EmployeeNumber\n10. EnvironmentSatisfaction\n11. Gender\n12. HourlyRate\n13. JobInvolvement\n14. JobLevel\n15. JobRole\n16. JobSatisfaction\n17. MaritalStatus\n18. MonthlyIncome\n19. MonthlyRate\n20. NumCompaniesWorked\n21. Over18\n22. OverTime\n23. PercentSalaryHike\n24. PerformanceRating\n25. RelationshipSatisfaction\n26. StandardHours\n27. StockOptionLevel\n28. TotalWorkingYears\n29. TrainingTimesLastYear\n30. WorkLifeBalance\n31. YearsAtCompany\n32. YearsInCurrentRole\n33. YearsSinceLastPromotion\n34. YearsWithCurrManager","f4781f06":"# Create Dummy Variables[One Hot Encoding on categorical variables]","350f54ff":"# Visualizing Distribution of numerical columns through histograms","3d8004e1":"Attrition  - (Boolean) - Employee Attrition Y\/N","985bb5e4":"# Duplicated data"}}