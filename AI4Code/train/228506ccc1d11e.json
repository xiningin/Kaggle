{"cell_type":{"d55ba81c":"code","d57865c4":"code","c0756d4b":"code","e5a97f3f":"code","c0a1799f":"code","9a05f817":"code","62788d01":"code","0f0fdb8a":"code","b3c975e1":"code","df60a3de":"markdown","aee804ea":"markdown","fe98927a":"markdown","7c3ace42":"markdown","7bad9e96":"markdown","cfaeca6b":"markdown"},"source":{"d55ba81c":"import random","d57865c4":"class Perceptron:\n    weights =[]\n    weighted_sum = 0\n    inputs =[]\n    \n    \n    def __init__(self, inputs):\n        self.weights.clear()\n        self.inputs = inputs\n        try:\n            for i in range(1, len(inputs)+1):\n                self.weights.append(round(random.uniform(-1,1), 1))\n            print(\"Weights vectors \", self.weights)\n            print(\"Input vectors \", inputs)\n        except:\n            print(\"Seems like the input is not a valid list\")\n            \n            \n      # update to new weight      \n    def set_weights(self, weights):\n        if (len(self.inputs)!= len(weights)):\n            print(\"Error as the weight vector length does not match inputs length\\n\")\n            print(\"Acording to the current input the weight should have length of \",\\\n                  len(self.inputs))\n        else:\n            self.weights = weights\n            print(\"New weight assigned: \", self.weights)\n    \n       # update to new inputs      \n    def set_weights(self, inputs):\n        if (len(self.weights)!= len(inputs)):\n            print(\"Error as the weight vector length does not match inputs length\\n\")\n            print(\"Acording to the current weight the inputs should have length of \",\\\n                  len(self.weights))\n        else:\n            self.inputs = inputs\n            print(\"New weight assigned: \", self.weights)\n        \n    # Define and Activation Function where y =+1 (for weighted_Sum>=0) and y=-1 (for weighted_Sum<0)\n    def activation_function(self, weighted_Sum):\n        if(self.weighted_sum>=0):\n            return 1\n        else:\n            return -1\n        \n    # Get the output with inputs as parameter\n    def output_from_inputs(self, inputs):\n        self.weighted_sum = 0\n        self.inputs = inputs\n        for i in range(1, len(inputs)):\n            self.weighted_sum+= self.weights[i] * inputs[i]\n        print(\"Weights are \", self.weights)\n        print(\"Inputs are \", self.inputs)\n        print(\"Weighted sum is \", round(self.weighted_sum,2))\n        print(\"Output is \", self.activation_function(self.weighted_sum))\n    \n    # Get the output with inputs and weights as parameter\n    def output(self, inputs, weights):\n        self.weighted_sum = 0\n        self.weights = weights\n        self.inputs = inputs\n        if(len(inputs)!=len(weights)):\n            print(\"The length of inputs and weights should be same\\n\")\n        else:\n            for i in range(1, len(inputs)):\n                self.weighted_sum+= self.weights[i] * inputs[i]\n            print(\"Weights are \", self.weights)\n            print(\"Inputs are \", self.inputs)\n            print(\"Weighted sum is \", round(self.weighted_sum, 2))\n            print(\"Output is \", self.activation_function(self.weighted_sum))\n        ","c0756d4b":"# by defualt weights are randomly generated\ninputs = [1,2,3]\nperceptron = Perceptron(inputs)","e5a97f3f":"perceptron.output_from_inputs(inputs)","c0a1799f":"# This will display error as weight length does not match the inputs\nweights=[0.2, 0.5, 0.3, 0.7]\nperceptron.set_weights(weights)","9a05f817":"# In this case length of weights and inputs are equal\nweights=[0.2, 0.5, 0.3]\nperceptron.set_weights(weights)","62788d01":"# Get output by providing inputs\nperceptron.output_from_inputs(inputs)","0f0fdb8a":"# get the output by providing inputs and weights\ninputs = [4,5,6,7]\nweights=[0.2, 0.4, 0.3,0.1]\nperceptron.output(inputs, weights)","b3c975e1":"# get the output by providing inputs and weights\ninputs = [4,5,6,7]\nweights=[0.2, -0.4, -0.3,0.1]\nperceptron.output(inputs, weights)","df60a3de":"### Instantiate a Perceptron Object and provide inputs to the constructor","aee804ea":"<img src =\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQEAeAB4AAD\/4RD4RXhpZgAATU0AKgAAAAgABAE7AAIAAAAPAAAISodpAAQAAAABAAAIWpydAAEAAAAeAAAQ0uocAAcAAAgMAAAAPgAAAAAc6gAAAAgkIEp1bmFpZCBBbGFtAAAABZADAAIAAAAUAAAQqJAEAAIAAAAUAAAQvJKRAAIAAAADMzUAAJKSAAIAAAADMzUAAOocAAcAAAgMAAAInAAAAAAc6gAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwMjE6MTE6MDIgMjM6Mjk6MDkAMjAyMToxMTowMiAyMzoyOTowOQAAAE0AZAAgAEoAdQBuAGEAaQBkACAAQQBsAGEAbQAAAP\/hCyFodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw\/eHBhY2tldCBiZWdpbj0n77u\/JyBpZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJz8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIj48cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPjxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSJ1dWlkOmZhZjViZGQ1LWJhM2QtMTFkYS1hZDMxLWQzM2Q3NTE4MmYxYiIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIi8+PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9InV1aWQ6ZmFmNWJkZDUtYmEzZC0xMWRhLWFkMzEtZDMzZDc1MTgyZjFiIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iPjx4bXA6Q3JlYXRlRGF0ZT4yMDIxLTExLTAyVDIzOjI5OjA5LjM0ODwveG1wOkNyZWF0ZURhdGU+PC9yZGY6RGVzY3JpcHRpb24+PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9InV1aWQ6ZmFmNWJkZDUtYmEzZC0xMWRhLWFkMzEtZDMzZDc1MTgyZjFiIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iPjxkYzpjcmVhdG9yPjxyZGY6U2VxIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+PHJkZjpsaT5NZCBKdW5haWQgQWxhbTwvcmRmOmxpPjwvcmRmOlNlcT4NCgkJCTwvZGM6Y3JlYXRvcj48L3JkZjpEZXNjcmlwdGlvbj48L3JkZjpSREY+PC94OnhtcG1ldGE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw\/eHBhY2tldCBlbmQ9J3cnPz7\/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqKyr\/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKir\/wAARCAGBAgEDASIAAhEBAxEB\/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL\/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6\/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL\/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6\/9oADAMBAAIRAxEAPwD6RooooAKKKTNAC1FJKkSFpGVFHUscVk6v4ihsMxQ\/vJh1A6L9a5C81G6vpN1xKW9F7CuinQlPVmUqqWx1914psYMiItO3+wOPzrMl8ZTHPlWyL6bmzXNUV1xw8FuYOrJm9\/wl+odo4P8Avk\/41LH4xuQR5ttG474bbXOUVfsKfYn2kjtLXxbZTHbOHgPqRkfnWzDcw3MYe3kWRfUGvMqmt7qe1lD28jIwPY1jPCr7LNFWfU9MBpe9c7pHiaO4YQ32Ipc4DdmroQc8iuGUHB2Z0RkpIWiiipKCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoopM0AKa5zxDr32ZTa2jfvT99h\/DWjrepjTtPZx\/rH+VB715+7tJIzucsxyT6114elzPmZhUqW0QMSzFiTk8k5pKKK9A5QooooAKKKKACiiigA\/ziuk8Pa+0braXr7kPEbseR7VzdGcc1E4Kasxxk4u56iGz0p1YXhrVPtlqYZjmaIY57it0V5E4uErM7oy5lcKKKKRQUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAGkPSlqvez\/ZrGaY8+Whb64FCV2J6I4rxHfm81R0U\/u4coPr3NZNKzFmLMck9TSV7MIqMbHBJ3YUUUVYgoooxSAKKP8AOaKACiiigAooooAt6Xemw1CKcdAcN7jvXoyMGAI6HmvLunNegaBc\/aNGt2c5YLtP4cVxYqFrSOijLozTooorhOkKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKy\/ETlNBuNvcBfzOK1KyfEiltBmA9VP6irh8SJl8LOBpaQfpS17JwBRRRQI5zxJ4ZuvEbmGXUpbWxWIhY7dirGXsWb0HpXn\/g\/wAaalF4Vl0GIyXWvLctbQI5yQvd29h0\/CvT9c8QWGhaVLfXkqlU+VUQ5eR+yr7k15l8PfO074r6xDqttHb3moQ\/aVjUf6rd8+0fgcVzT+NJM2ja2p1\/gzwfqfh7VL+81fV21E3UaYBLfI3O7g8AZwB9K7LtzVe6uHis5ZLSH7TLGPljVsbm9M15xda34nj+JmiWGq3EdvbXWX+y2x4UejHvWrapkr3j0\/p1oo\/SitCAooopAFdj4Rkzpbox+7IQP51x3Pbr2q3FoOqalYi50XUns5YZCVQHCtx3xXNiv4Yc8qXvRVz0btSivOIfGuueH5lt\/Femu0fQXMIzn39DXZaR4i0zW4t+n3aSHHKE4YfhXlKaehrRxlGq+W9pdnua1FFFWdgUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAAap6pbm50u4iX7zIdv1q4aQ85FNOzuJ6o8toq7q9mbHVJoQuE3ZT6GqVezF80Uzgaswooop7qwtTh9I+GsNn4ol1jU9Rk1FvOaaC3ZNscbn+LGTkgd8Cp\/EngR9Z8SW2u6Xq0ml3sKbGeOISbx+JH9a7Gio9nErmZQ0bSYtG0xbSB5JSCXkllbLSOerGuD8Vf8AJavDP\/XNq9IlV3hdIn8t2UhG252kjg47\/SuJvvh\/e6j4ittauPEkxvLbiELaoFX2xmpmnayCLSep3NFV7KK6ht9t9dC7m3EmURhM8+gqxWvQkKKKKYAOoru\/DMBi0SNj1kJb\/CuIt4HubmOKMZZ2AAr0qCJYLeOJB8qKFH4Vx4qVkom9BdRtxBFcxtFOiyRtwyMMg1xur\/Dewnk+1aLcSaXdDkNEx2k\/TqPwNduaO1edKKluVWw9KsrTV\/67nmy654v8Jsset2f9qWa\/8t4vvAepIH8x+NdTonjTRdc2ra3XlzHrDMNrf\/XroGUMMMAR3Brlda8AaRqzNNFGbO6zkTQ8c\/SotKO2px+xxOH\/AIMuZdnv8mdUDkUteaGPxl4POYj\/AGxYqeepYD+Yrd0T4iaRqjCC4c2VyeDFPxz7HpTU1s9DSnj4OXJVThLs\/wDM65elLTImDplTkHuKfVnemmroKKKKBhRRSHpQAtFc54zv9S0rQZL\/AEqeNDBy6vHv3CrHhPU59Y8LWV\/dFTNMrFyowMhiOn4UDtpc26K4nwv4uuta8YanYSNH9lhUmABcHhgOT370njDXdb0nXLC10iaFheMFETxBiv4+lA3Fp2O3opse4RL5hBfA3EetOoJCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigANJSmkoAwPFGmG6thcwrmSIcj1WuM6V6iyhlIIyD2rifEGitZTm4gBMDnJ\/2TXbh6v2Wc1WD3RiUUn6e\/rS13HOFFFFABRmiigAooooAKKK0tG0iTU7oDBEKH52P8qmUlBXY4pydjW8KaZlzezLwOI8\/zrq6igiSCJY4xtVRgCpa8mpPnlc7oqysGKMUUVBQUUUUANxk9Kwdd8H6PrwY3loolP8Ay2jG1\/zHX8a3u9LQ0nuZVKcKq5Zq55sfDnirwmS\/h+9N\/aKc\/ZZT0HsP8MVoaZ8SrRpRa69byaddA4beDtz9a7g471mapoOl61EY7+0SXjhiMMPoetZ8jWxwPCVqWuGlbyeqLtvdw3UIlt5VlRuQynNTivOrnwHrGhTG68I6owAOfss54PtnofyH1p9l8RLnTZltPF2mS2cuceci5Q\/hn+Waak9mOOO9m+XER5fPoehZ5o61RsNVsdUg8+wuY50I6oeR9R1FXQc1Z6EZxkrp3MnxXF53hLU4\/wC9buP0riPDesSWvwygtbVi15cTPbW6ZzyTkkD0AOa9Gv7f7Vp88GM+ZGVx+FcL8P8AwfqGmym712LynhyttBvDBN33m4yMnAFJ7m8bWKWiWC+H\/idHZggKbLLN6nBJJ\/KtvRI\/+Ek8VT6\/IubO1zBZZ\/ix1b86peK\/C2rar4ztrqwVorZofKmuFcDauCDxnPQntXc2NlDp1jFaWqBIYl2qKEEmrHKeNPij4f8AA9pK2oTtcXMY\/wCPa3G5hnpuPRR9a6Lw7rCeIPDljq0UTQpeQrKsbHJUHtmuC+N+k6fZfBjxTc2tnDFPcCF5ZVQBnPnRjk9eldR8Nv8Akmfh\/wD68Y\/5UzM6eiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAMUyWJJYykihlYYIPen0Ubagcbq\/hmSBmmsVLx9SncVz2CCQQcivUsVm6hoVlqGWkj2Sf304J+vrXXTxNtJGE6V9Uef0Vv3XhK6jJNs6yr6Hg1mSaRfxZ32snHoM12RqwlszncWinRU32S5zjyJP8Avg1JHpl7Ljy7aQ\/hir5l3JsyrQOfaty28KXsxBnKwr78mt\/TvDdlZYZ186QfxOOn4VjLEQiaRpts5zSfD898yyTgxQ+p6mu1traK0hWKBAir0AqUKB0oAwa4KlWU2dUYKIuKKKKyLCiiigAooooAKMUUUAGKTFLRQAmKq32m2mowNDe28c0bdVdc5q3SEUbkyipK0kcBqHw4NrcG88L30thOORHuO0+1V4\/Gev8AhuQQ+K9NeSLOBcwjg\/0P869GPA9KjnhinjMc6LIjDBV1yDUciWx58sDyPmoS5H+H3GbpPiXTNcjDafdxuf4ozwy\/UdRWqAOMCuL1j4a6bdym60iSTTLocqYCQmfp2\/DFZiax4w8IsU1m2\/tWyX\/lvGPmA+o\/qD9aXM18RP1utQ\/3iGndbHpOBQK57RPG2j62AsNwIZscxS\/KQa3wwPTmrTT2O+lWp1o81OV0eYfGq9vdW8B6t4Z0fQdYv7y6WNVeCydohiRHzvxg8DtWz8MtUmHhLS9HvdI1SwurS1VJPtdm8aZA7ORiu3IpQAV55HvTNRQciiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACjFFFABikxS0UAJijFLRQAm2lAxRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAIRmgilooAbtoMasCGAIPXIp1FAHLa58P9H1ljKsX2S4xxLDx+lc4YPGfhE5t2\/tmxTsfvgfTr\/OvTKaF\/GocFujgqYGlJ88Pdl3RyOifEbSNVYQXZfT7noUuBhSfZun54rrUkV0DIwZSMgg5BrE1rwjpGvIfttogl7TINrj8RXJv4a8UeFW8zw5fm9thybeX\/Dp+VK81ujL22Jw6\/ex5l3W\/3HpOaM81w2l\/Em084WniC2k025HDFx8mf6V2Vtd295Es1rKksbDKujZBqlJM66OKpV1em\/8AMnzS00n\/APVSg5qjpFooooAKKKKACiiigAooooAKKKKACiikoAWjNIWA6ms681m3tSVB3v6CplOMVdsqMJTdoo0S2KN1cvPr1zLxFiNfaqT3lxJnfM7Z965HjILbU644Ob30O13Ck3Vw\/mOf42\/OpEvLiP7kzj6NUrGK+xbwLtudrmlzXKwa7dRH5yJF9617TWre5IVz5bnoGreOIpy0uc88PUgr2NOimggjinDpXQc4UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUgGKWigBCOKaUJHXFPooAzdU0DTtZhMWo2scwxgMRhh9COa4u58A6rocxuPB+qyxgcm3nbKn26Y\/MfjXo1NYc1LgmcdbB0az5mrPutzz6z+Id3pk62ni7TZLWTp58Y+U++P8DXaabq9hqkPm2F1HMh\/utyPwp95p1tqEJivII5kIxhwDXGaj8N\/s832vwxfSafODnYW+Un+lT70fQ5\/9roar319zO+3DtQGzXm0fjHX\/AAu4h8V6c0sIOBdRf5xXY6N4m0jXow2nXscj4yYycOv1U81Skmb0cbSqvlWj7PRmzmjNNyDR6VR2jqKKKACiiigAooooATNRzTJDGXkO0Duae7BFLNwAMmuV1TUWvJiqn90OAPWsK1VU1qb0aLqy8h+oaxJcsUgykfTI6tWZRRXkynKTuz2IU4wVkFFFFQaBRRRQMKPx\/CiigRo6fq8tqwSUl4vQnkV01vcJcQiSM5BriPxq7puoNYzjOTExwR6e9dlDEOL5ZbHFiMMpLmjudfmimI6ugZDkEZFPFeoeSFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABSHrS0UAJRilooAjkhSVCsiBlIwQRXG6v8NtNu5jdaW8mnXQO5WhOFz9O34V21BpOKZz1sPSrL31c80GqeMPCB26pCdVsgf9cvLAfXr+ddNofjbRta2pFcCCc9YZeGz\/WuhdQy4YZBrmda8A6NrOZDCba46iWA7SD9OlRaS2OP2GKoa0Zcy7P\/ADOpDA9DS5FeZiz8a+DyWtJRrVgv8D5LqPzz+pra0f4jaVqDrb32\/TrrODHP0z9f8cUc66mlPH078tVcr8\/8zssijINRpIsqBo3VgeQVOc04fXNaHenfYdRmkzSOwVCT2FLZXGY2v3uxVt425blselc9U15Obm7kkJyCePpUNeNWnzyZ7tCmoQsFFFFYmwUUUlA99haKKKNACiiigAo7UUUAbugX3W2kbpyma3x04rh7eYwXCSpwVNdrE4kiV16MMivUwtRyjZnj4umozuuo+iiiuw4wooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACg0UUAJRS0UANxWJrXhLSNdQi+tV8ztKnysPxrdooaTM6lKFRWmro82l8L+JvCzNN4avzd2oOfs0pycVc0z4k24m+yeIrWTTbleMsp2n\/Cu6PTpms\/VNF0\/WoPJ1G0jnQdNyjK\/Q9RWfI1rE8\/6nUou+GlZdnqv+ATLqdk9g16tzEbZULGUOCoHrmjUZgumyOhB3L8pHfNeQ+NfDkfhiVINIvLgQ3gPmW+\/gqPX1H1zWh4R8TXL6T\/AGLqAZin+okznC\/3TWM6tk4snC5k3jFha0bS+9G\/RSfSlryT7kKKKKAE\/wA\/SsXxF4x0TwrGja3erblx8iKpZyPXaOcVtfr7etZGpeG9OvhqM5tka6vbY27ytyduDgD05NXG19SZ3toW9J1ay1vTIdQ0yYT20o+VxxmsVfiDoB8UL4eeeePU2k2CGW2dMnHqRjBHQ1yPwKumj0HVtKkJBsLxgB3AbP8AhU\/hewTxN8Wtb8U7A1nZv9jtXA+V3UYYj16dfetXTSk0zFVG4prdnp1FFFc\/mdGwUUUUDDOOtddo0nmaZHk5K\/Ka5A9K6fw6c6a3tIf5CuvCO07HFjbOFzWooor1TyAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiig0AFFJRmgBaKaSQM1S1DVrPSrcz39wkMQ7u1GiJlOMFeTsXs1ka14j0zQITJqN0qHHyxjlm+grkLvxpq\/iO4ay8IWjhM4a7cYA+npV3Rfh3Ak4vvEM7ajek7jvOUB\/rWfO3pE82WKqVny4aN\/N7f8E5XxHd6t48j8+x0gx2VorOkzj5mGOg9foM1r+EvCLaX4bbUr6PF3OAyq3WNP8TXpMcSRxhERVUDAAHFRXkQls5Ix3U4rOdJNNvcrC5fGniViKkuaRxh60UEbSQeo60V459tuFFFFACUv1oziuP1n4neHNI+3QNdebfWj+V9kUfPI5HAHr1HPSqjFy2IlJR3PNI77UfD3xI8UeH9FhP23V2C2bDpHuI+c\/QEn8K9m8N6FbeGvD9rpdlzHAgBc9ZG6lvxJzXN+BfDl2b+58WeIogurah9yMj\/AI9ouy\/Wu4xWtaV9EZUYWbkxaKKKw9DoCiiigQV1Hh9dumf7zk1y4GTxXZabD5GnxIeu3J\/HmuzBq87nFjXaCXctUUUV6h5IUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFIc0ALQabk015QiFnIVRySelAvMeTVe5vILSJpbmVY0XqzHAFcjrvxGs7SY2WiRtqV6TtCxAlQfr3\/Cs228I674onW78WXbW8DHIs4mxge\/YfrWbn0iefPG80uTDrmf4FnU\/iFLe3BsfCdm95cE7TKV+Vf8+9R6f8P7rVbldQ8YXj3cx5FurYVfYkfyGK7TS9D0\/RrcQ6fbrEvfA5P1NX8Uct\/iJjgpVXz4mV326f8H5le0sbWxt1gtIEhjUYCIoAFTj9adikxWi0Vj0YxUVZIB92kYZzmnYoxQUchq1qbW\/fA+VzuX3NUq63VrEXlsdv+sXla5NlKsVYYIODXkYinySue1havPGzEooormOkK5228B+GrXXpdai0uNtQlcu00rtJ83qAxIH4CuioqlJrYTinuFFFFTqPQKKKKBhRRSYJYADJPAHrR1EXNMtftd8i\/wAK\/M1dgowMVnaRYfZLfL\/ffk1pCvXw9NwjqeLiKnPPQKKKK6TmCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAQnArD1zxfpvh6dItT89PMGUZYiyn2z61uGuC+LUAfwrDJ\/wA87lSSPTaw\/rSGtzufPXyPNz8m3d07Vn6J4hsPENrJPpkjSRxv5bZXBz\/k1i6rqjxeCLSK3Gbu\/iSGFQf4mHX8KyPhdH9hbW7F2z9ludpJ6cZGf0FIrlOmPjLS111dHfz0vHcIFaEgEnpz6V0FcJoFqNe8cX3iBhm3th9ntiR94jgn8Oa7CTVbGFtst5bofRplBpiaLdFMimSZN8Tq6noynINOzTJFo70m6jNABTGcLgk4rH13xZpWgxn7ZODL\/DCnLGuOe98VeN3KWKHR9MJwZWyHcfz\/ACx+NS5LocNbGQg+SHvS7L+tDo\/EHjrS9DzCrG6uzwIYuTn3PaudXTPFPjV92qSNpmmsciFeGYfT\/Guk8PeBdK0JRIIxc3XUzzDJz7eldOF44qbOXxGCw1bEO9d2XZfqzF0PwtpmgQhbG3Ak\/ilblm\/GtgAD1p2KAAKtJLY9GnThTjywVkLRRRTNAooooAKKKKAEIzWLq+k+bme3GHx8y\/3q26TFZzpqaszSE3CV0cIQQSG4I7HtRXU6ho8V188X7uXuR3rnbmyntXIlQgZ6joa8qpQlB7aHsU8RGovMgoo+lFYHQFFFFABRRU1vZz3LhYkJ\/wBrsKaTeiJclFXZAOT9eB71v6RpJQi4uV5\/hU9qsafosdsfMmxJJ9OBWqBXoUMMo+9I8yvinL3YhilFFFd5wBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABXJ\/Eq38\/wJet1MRRx\/32Af0JrrDUNzaw3lu8F1Ek0T\/ejkXKn6ikxrR3OE8DQz64tnql4hW3sYBBbI3RmAwz1g28t7H4x1\/RdOQ+dqU4Bf\/nknJY\/k1er29pDZ26Q2sSQxIMKkYwB9Kjh0yygvZbyG0hjuZv8AWSqgDP8AU96C+fViaVpkOk6bDZ24wka4+p9aw9O8KaXoWjXCXhW73BmmuJ1GSPx6V0+4Ac8Y65rg7+9HjPV3sI7hItFtZMTybwDcMOw9qZK1ZJ8MfPOnag+X+xNcn7Jv\/u85x+ldx3rEtdd0S1iuba3mjhh08KrkYCDIOMHv0rmb\/wAeX+r3DWXg+zed84Nyy\/Ko9cdPzqHKKOXEYqlRdpb9ludhquuadotuZtRuUhHZWPzN7AdTXDz+K9f8WyNbeFrRra1J2tdy8cf0\/nV3Sfh0bi4F\/wCKrpr+5Y58osSg\/wA+nSu4gtoreFYoEWONRhVUYAqUpS3OLlxOK+P3I9ur9exyOh\/D2ysZBdatIdQvDyXkOVB9hXYLEqKFQBQBwAOlPA5pa0SSO2jhqVFWhGwgFLRRTOgKKKKACiiigAooooAKKKKACiiigBDTXjV1w6gj3p5ooeobambcaHaTcquw\/wCzVF\/Dbc7JwfTcOlb9GKxlRhLdG8a9SOiZzZ8OXA6Sx4\/GpI\/Djk\/vJgP90V0NGKhYamU8VVfUy4dCtYsFsuffp+VaKRJGuI1Cj2FOpa2jCMdkYynKW7EpaKKsgKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiijNAAelNzQzAKSxwK5DX\/iDp2lSG1sf9PvScCKH5sH3IpOSjqzCtXpUY803Y6i5aFbWT7U4SLaQ5ZsDH1ryjWZfCfnmy8M6Auo3jHhg0hQfrk\/y961ovDviPxhKtx4inaxss5W1Q4JH+fWu00fw9p2gweVp9sEPd8ZZvqaz1lqji9pisTpBcse73+SOC0D4XTTsLjX5PKiLbxZwsSPxJ9Px+tei2GlWemW4hsbdIUXoFGPz9auDOKXtzVqKR1UcLTp67vu9WAFKKTpSiqOoKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigApKZLKkEbPKwRVHLMa5zUPFqJlLBN5\/vtwPwq4wlN2RMpKO50pIUcnAqvJqFpFnzLiNf+BVwNzqt7dsTNO5B7KcCqnXr1rqjhO7MXW7Hof9t6cP+XuPP1qWLUrOU\/u7iM\/8Crzeiq+qLuL2zPUVYMMqQR7GlrzWDULu2bMFxIuPVsit7T\/Frqyrfx7l\/wCeidvqKxnhpR1Raqxe51tFQ21zDdxCW3kV1PcGpu9c2xsFFFFABRRRQAUUUUAFFFFABRRRQAhpKG6isnWfEemaFCX1G6WM9RGOWb8BQ3ZGc6kKa5puyRrH7vNc7r3jPStBUrPN51x\/DDHy2ff0rln1vxP41keLQbZtP09jg3MhwSPr\/h+db2geANN0hhcXYN9edTNNzg+wrPmcvhPOeKrV3bDx07vb5GCV8VeOGIkLaTpb9hwzj+Zrq\/D\/AIO0rw9EptbdZLjvcSDLn6eg+lb6jAwOB2xTsU1Bbs2o4KNOXPN80u7\/AEG0+mgYFOrQ7wooopAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAHpVS+v4dPtjNOeB0HdjU1xMlvA8sh2qoySa8\/1XU5NTvGkY4jXhB6CtqVL2j12M6k+VeY7U9XuNSlJclYweEHQVn0ent0or1IxUVZHG3fUKKKKYgooooAKKKKALNlqFxp8wkt32+oPQ13Ok6tDqcG5PlkX78Z7GvPansryWwukngOCp5HYj0rCtRU1dbmtOo4vU9Moqrp97Hf2qTRHIYdPSrVeW007M607q6CiiigYUUUUAJ3ozRmq93dw2cLS3Mixxr1ZjgCgmUlFXZOT81U9R1Wz0q2ae+uEhjXux61xmp\/EGa8uDY+ErR724Py+YV+Rff8A\/XTdO8AXeqXK3\/jG9e7l6i3U4Vfbj+mKz5r6RPOnjJVHyYaPM+\/Qiu\/GmseJJ3svCFm4To124wB789Kv6N8PLeOf7d4gmbUbwncd5yoP9a6+zsbawhWGzhSGNeiIuB+lTgetNQ6scMFzP2mIfM\/wEhjSKMJGiooGAFGKkpBS1Z6KSS0CiiigYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUlLTXYKjMeAB1oA5bxZqB3LZRt\/tPj9BXL1Pe3BvLyWdjnexI+lQV69KHLCxwzldhRRRWhAUUUUAFFFFABRRRQAUdqKKYG54Y1E21+Ld2PlzcA+hrtc15erFGDLwR0r0mwuBdWMM4\/jUH9K8\/FRs+Y6qMtLFiigmmlsDJIFcZvsOzTGkCKWchVHJJ4xXM+IfHemaIxgVvtV32giOT+PpXOLpnibxw\/marK2m6Y3IhXgsPp3\/Gocux59THRUvZ0lzS8tvmzX1z4j2VpN9j0WNtSvWO1ViBKg\/Xv+FZlv4S13xROt34uvGggPK2kTdB6HHFddofhfS9AgC2NuPMI+aVuWb8a2cfhS5G9ZERwtWs+fEy0\/lW3\/AASjpWi6fo9qIdPtkiUdSOp+prQxSDpS1pp0PQhCMFaKsGKMUUUFhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFZ+ty+Tot0wOCYyAfrxWhWR4m\/wCQBP8AVf5iqgrzRMvhZwffHTvRRRXsnAFFFFMDN1jxDpPh+BJtZvY7RHbau\/JJ+gGTViy1Oy1HTkv7K5jmtXUsJlPGPWqd\/wCGdM1K6nub23E8s0BtyX+YKvfA7GvJfA8erarp134MjL29tbXTG8uM42R5+4PcnNYynKMrM0jG6PXNK8S6PrlxcQaTfx3MltjzQgJ2\/iQB2PT0rUrD0DwlpHheS6k0iBoBcqglBbIwoP8Aiamk8VeH4rjyJNc05Zs48s3SBvpgmrT7ktX2NaikBDAFTkEZBpavckKKKKQBXb+FpvM0YKf+WbkdfxriKsxp4juLAWvh3ZHHLIRJOWwU4rmxX8MXtXTXNa\/kjrdd8WaXoEZN7PmXHywpyzVxzXnivxxIyWKf2VppP+tYEOw\/mfwxW3oXw8sLGUXerO2oXrcs0hyoPsK7BY1RQqgKo4AHavJtJ76EKjiMS713yx7Lf5s5vw94F0nQUVxELm66tPKMnPsO1dLtGMUtLVpJbHoUqMKUeWCshMcUuKKKZqFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABWbr0fmaJcDGcLu\/LmtKo541mt5I25DKQacXaSYpao8wop88LW9xJC4w0bFT+FMr2U7q55+zCiikxkEetN7aAcRqvxCtrsnSvCpa61iaVoETbxBjrI3sP6VzPhONfBXxW1HSr+7Jju7dZDPK3DtjcT9ck16RpPhfRtDu5rrS7CKCeckySAks2TnqScDPpim6v4U0PXrmKfV9OiupYRhHYkED8CM\/jWDpyfvGikkrBL9i8X+GriG3mcWt0Gh81VwSAcZXP061ieItL0Lwz8NrqxniT7OluY0DgbpHI4\/HNdTNLaaPpbyvtgtLWIsQBgKoHQY+led6VqNh4x1oa54j1Gxg022Y\/YbCS4TOR\/wAtHXP6VU2tLiidF8M7S+svh\/p0Wp7hLtZlVuqoWJUfkRXWVm6Jrlnr9k91p24wJK8QcgAOVOCy89MjitKrilbQl7hRRRVCEPTjr2rtfCkO3SS2MB3JAxXF9enJ7D1r0bSbb7JpcERHIUZ+p61yYqXuWN6KvK5cxRjmlorzzqDFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUABpCKWg9KAOL8VWHk3oukX5JvvY\/vVgV6Tf2aX1pJBJ0YcH0NeeXdpJZXLwTDDKcD3HrXpYepzR5epyVYWd0Q0UUV0mIUUUUAV76xttSspLS+hSe3lGJI3GQwyDz+QrD\/4V74S\/wCgBZ8f7FdJRSaT3Gm0VNN0ux0ezW00y2jtoFJIjjGBmrdFFVoLcKPrRTo42mlWONdzMcAUnZbhvoaXh\/Tzfaom4fu4jub8Old8AeKztF0xdNsgh5kblz6mtKvLr1OeZ2048qCiiisDQKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAA1l6xo8eqW\/wDdmX7j4\/StSimpOLuhNJqx5jc2s1ncGGdCrA+nWoq9HvtOt9QhMdygYdj3Fcpf+GLu2Je2\/fx+33hXo08QpKzOSVNrYw6KV0aNtsgKn3FJXTutDKzQUUUU9QCigAk8DPsK1tP8PXl6Qzr5UR\/iYfyFRKcY7spRb2MuOJ55BHEpZyeABmu00LQVsF864Aa4YdOye1XNN0e201P3S7n7u3JNaArgq13PRHTTpqOrDFLRRXKbBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFACUUtFAFeeytroYuIEk92XP61myeFtNkztjaPP91j\/WtqiqU5LZk8qZz3\/CH2Of8AXXH\/AH0P8Kkj8KacnLiWT2Z8fyrdoqvaT7hyRKlvptpa\/wCot41Prt5\/OrQpaKhtvcaSQUUUUhhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf\/Z\" alt=\"Perceptron\" \/>","fe98927a":"### Define a Perceptron Class","7c3ace42":"### Option to set weights instead of going for randomly generated weights","7bad9e96":"# <font color=brown>Demo of a single Perceptron in Python <\/font>\n(Without using matrix operation)\n\n<font style=\"color:#ccc;font-size=10px\">Author: Md Junaid Alam<\/font>","cfaeca6b":"### Get the weighted sum output of the preceptron"}}