{"cell_type":{"a35a153f":"code","6f94c793":"code","a213a98e":"code","2577fdf8":"code","97f34e5f":"code","5ab2999d":"code","e503a4d0":"code","f522828c":"code","c901c3f1":"code","b84984ff":"code","908cfa2c":"code","3fe44f87":"code","8bfdc2df":"code","b2de59d1":"code","09a2a02b":"code","ebdbc6dd":"code","5f451670":"code","6ebd17c6":"code","4744d6f2":"code","d5c09aa4":"code","2c7bcb61":"code","bff3a350":"markdown","9724a578":"markdown","d882781f":"markdown","49aebfba":"markdown","0fde6bec":"markdown","da841a24":"markdown","39ebf97e":"markdown","15c8844e":"markdown","41257b42":"markdown","635b1844":"markdown"},"source":{"a35a153f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f94c793":"import numpy as np\nimport pandas as pd\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected = True)\n","a213a98e":"df = pd.read_csv(\"..\/input\/world-university-rankings\/timesData.csv\")","2577fdf8":"df.head()","97f34e5f":"df.info()","5ab2999d":"df.isnull().sum()","e503a4d0":"df1 = df.iloc[:50,:]\n\ntr1 = go.Scatter(x = df1.world_rank,\n                 y = df1.citations,\n                 mode = 'lines+markers',\n                 name = 'Citation',\n                 marker = dict(color = 'LightSteelBlue'),\n                 text = df1.university_name)\n\ntr2 = go.Scatter(x = df1.world_rank,\n                 y = df1.teaching,\n                 mode = 'lines+markers',\n                 name = 'Teaching',\n                 marker = dict(color = 'SteelBlue'),\n                 text = df1.university_name)\n\ndata = [tr1,tr2]\nlayout = dict(title = 'Top 50 university - Citation and Teaching',\n              title_x = 0.5,\n              template = \"plotly_white\",\n              title_font = dict(size = 16, color = 'DarkBlue'),\n              xaxis = dict(title = 'World Rank'))\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()\n","f522828c":"df1 = df.iloc[:50,:]\n\ntr1 = go.Scatter(x = df1.world_rank,\n                 y = df1.research,\n                 mode = 'lines+markers',\n                 name = 'Research',\n                 marker = dict(color = 'LightSeaGreen'),\n                 text = df1.university_name)\n\ntr2 = go.Scatter(x = df1.world_rank,\n                 y = df1.teaching,\n                 mode = 'lines+markers',\n                 name = 'Teaching',\n                 marker = dict(color = 'SteelBlue'),\n                 text = df1.university_name)\n\ndata = [tr1,tr2]\nlayout = dict(title = 'Top 50 university - Research and Teaching',\n              title_x = 0.5,\n              template = \"plotly_white\",\n              title_font = dict(size = 16, color = 'DarkBlue'),\n              xaxis = dict(title = 'World Rank'))\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","c901c3f1":"df['year'].unique()","b84984ff":"df2014 = df[df.year==2014].iloc[:20,:]\ndf2015 = df[df.year==2015].iloc[:20,:]\ndf2016 = df[df.year==2016].iloc[:20,:]\n\n\n\ntr1 = go.Scatter(x = df2014.world_rank,\n                 y = df2014.citations,\n                 mode = 'markers',\n                 name = '2014',\n                 marker = dict(color = 'LightSteelBlue',size = 12),\n                 text = df2014.university_name)\n\ntr2 = go.Scatter(x = df2015.world_rank,\n                 y = df2015.citations,\n                 mode = 'markers',\n                 name = '2015',\n                 marker = dict(color = 'SteelBlue',size = 12),\n                 text = df2015.university_name)\n\ntr3 = go.Scatter(x = df2016.world_rank,\n                 y = df2016.citations,\n                 mode = 'markers',\n                 name = '2016',\n                 marker = dict(color = 'LightSeaGreen',size = 12),\n                 text = df2016.university_name)\n\ndata = [tr1,tr2,tr3]\nlayout = dict(title = 'Top 20 universities - Citation vs World rank in 2014, 2015 and 2016',\n              title_x = 0.5,\n              title_font = dict(size= 16, color = 'DarkBlue'),\n              template = 'plotly_white',\n              xaxis = dict(title = 'World Rank'),\n              yaxis = dict(title = 'Citations'))\n\nfig = go.Figure(data = data, layout = layout)\n\nfig.show()","908cfa2c":"df2014 = df[df.year==2014].iloc[:20,:]\ndf2015 = df[df.year==2015].iloc[:20,:]\ndf2016 = df[df.year==2016].iloc[:20,:]\n\n\ntr1 = go.Scatter(x = df2014.world_rank,\n                 y = df2014.teaching,\n                 mode = 'markers',\n                 name = '2014',\n                 marker = dict(color = 'RosyBrown',size = 12),\n                 text = df2014.university_name)\n\ntr2 = go.Scatter(x = df2015.world_rank,\n                 y = df2015.teaching,\n                 mode = 'markers',\n                 name = '2015',\n                 marker = dict(color = 'Peru',size = 12),\n                 text = df2015.university_name)\n\ntr3 = go.Scatter(x = df2016.world_rank,\n                 y = df2016.teaching,\n                 mode = 'markers',\n                 name = '2016',\n                 marker = dict(color = 'NavajoWhite',size = 12),\n                 text = df2016.university_name)\n\ndata = [tr1,tr2,tr3]\nlayout = dict(title = 'Top 20 universities - Teaching vs World rank in 2014, 2015 and 2016',\n              title_x = 0.5,\n              template = 'plotly_white',\n              title_font = dict(size= 16, color = 'Maroon'),\n              xaxis = dict(title = 'World Rank'),\n              yaxis = dict(title = 'Teaching'))\n\nfig = go.Figure(data = data, layout = layout)\n\nfig.show()","3fe44f87":"df2016 = df[df.year == 2016].iloc[:10,:]\n\ntr1 = go.Bar(x = df2016.university_name,\n             y = df2016.citations,\n             name = 'Citation',\n             marker = dict(color = 'LightSteelBlue',line = dict(color = 'Gainsboro',width = 2)),\n             text = df2014.country)\n\ntr2 = go.Bar(x = df2016.university_name,\n             y = df2016.teaching,\n             name = 'Teaching',\n             marker = dict(color = 'SteelBlue',line = dict(color = 'Gainsboro',width = 2)),\n             text = df2014.country)\n\ndata = [tr1,tr2]\nlayout = dict(title = 'Citation and Teaching of Top 10 university (2016)',\n              title_x = 0.5,\n              title_font = dict(size = 16, color = 'DarkBlue'),\n              barmode = 'group',\n              template = 'plotly_white'\n             \n             )\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","8bfdc2df":"df2014 = df[df.year==2014].iloc[:20,:]\ndf2015 = df[df.year==2015].iloc[:20,:]\ndf2016 = df[df.year==2016].iloc[:20,:]\n\ntr1 = go.Scatter(x = df2014.world_rank,\n                 y = df2014.income,\n                 name = '2014',\n                 mode = 'markers',\n                 marker = dict(color = 'DarkCyan',size = 12),\n                 text = df2014.university_name\n                \n                )\n\ntr2 = go.Scatter(x = df2015.world_rank,\n                 y = df2015.income,\n                 name = '2015',\n                 mode = 'markers',\n                 marker = dict(color = 'RoyalBlue',size = 12),\n                 text = df2015.university_name\n                \n                )\n\ntr3 = go.Scatter(x = df2016.world_rank,\n                 y = df2016.income,\n                 name = '2016',\n                 mode = 'markers',\n                 marker = dict(color = 'MediumPurple',size = 12),\n                 text = df2016.university_name\n                \n                )\n\ndata = [tr1,tr2,tr3]\nlayout = dict(title = 'Top 50 University - Income (2014,2015,2016)',\n              title_x = 0.5,\n              title_font = dict(size = 16, color = 'DarkBlue'),\n              template = 'plotly_white')\n\nfig = go.Figure(data = data,layout = layout)\nfig.show()\n","b2de59d1":"df= df.dropna(subset = ['num_students','international_students'])","09a2a02b":"df[['num_students','international_students']].isnull().sum()","ebdbc6dd":"df2016 = df[df.year==2016].iloc[:10,:]\n\npie1 = [float(each.replace(',','.')) for each in df2016.num_students]\nlabels = df2016.university_name\n\nfig = px.pie(df2016, values = pie1, \n             names = labels,\n             hole = 0.3,\n             labels = {'university_name':'University Name'},\n             color_discrete_sequence = px.colors.sequential.GnBu\n            \n            )\n\nfig.update_layout(title = 'Top 10 university - The number of student (2016)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'DarkBlue'),\n                  annotations = [dict(font = dict(size = 10,color = 'MediumBlue'),\n                                      showarrow = False,\n                                      text = 'Number of Student',\n                                      x = 0.5, \n                                      y = 0.5)])\n\nfig.show()","5f451670":"df = df[df['student_staff_ratio'].notna()]","6ebd17c6":"df['student_staff_ratio'].isnull().sum()","4744d6f2":"df2014 = df[df.year==2014]\ndf2015 = df[df.year==2015]\ndf2016 = df[df.year==2016]\n\ntr1 = go.Histogram(x = df2014.student_staff_ratio,\n                   opacity = 0.7,\n                   name = '2014',\n                   marker = dict(color = 'SteelBlue'))\n\ntr2 = go.Histogram(x = df2015.student_staff_ratio,\n                   opacity = 0.7,\n                   name = '2015',\n                   marker = dict(color = 'LightBlue'))\n\ntr3 = go.Histogram(x = df2016.student_staff_ratio,\n                   opacity = 0.7,\n                   name = '2016',\n                   marker = dict(color = 'BlanchedAlmond'))\n\ndata = [tr1,tr2,tr3]\n\nlayout = dict(title = ' The Ratio of Student-staff (2014,2015,2016)',\n              title_font = dict(size = 16, color = 'DarkBlue'),\n              title_x = 0.5,\n              barmode = 'overlay',\n              xaxis = dict(title = 'Ratio'),\n              yaxis = dict(title = 'Count'),\n              template = 'plotly_white',\n             \n             )\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","d5c09aa4":"dfcountry = df['country'].value_counts().reset_index().head(20)\nfig = px.bar(dfcountry, \n             x = 'index', \n             y = 'country', \n             color = 'country',\n             color_continuous_scale = 'gnbu',\n             labels = {'index':'Country','country':'Count'})\n\nfig.update_layout(title = 'Top 20 Countries with the most university',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'DarkBlue'))\nfig.show()","2c7bcb61":"from wordcloud import WordCloud\nfrom matplotlib import colors \nimport matplotlib.pyplot as plt\n\ndf2016 = df.country[df.year == 2016]\n\ncolor_list=  ['DarkBlue','LightBlue','MediumAquamarine','Plum','OrangeRed','DarkRed','Pink','LightGoldenrodYellow']\n\ncolormap = colors.ListedColormap(color_list)\n\nplt.rcParams['figure.figsize'] = (15, 15)\n\nwordcloud =  WordCloud(background_color= 'white',width = 1200,height = 800 ,max_words = 120,colormap = colormap ).generate(\" \".join(df2016))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","bff3a350":"**<font color = Darkblue size = 4 >Show first five row of data<\/font>**","9724a578":"**<font color = Darkblue size = 5 >Thank you for reading!<\/font>**","d882781f":"**<font color = Darkblue size = 4 >Import related libaries<\/font>**","49aebfba":"**<font color = Darkblue size = 4 >Data Analysis<\/font>**","0fde6bec":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","da841a24":"**<font color = Darkblue size = 4 >Check the null values<\/font>**","39ebf97e":"**<font color = Darkblue size = 4 >WordCloud<\/font>**","15c8844e":"**<font color = Darkblue size = 4 >Read data<\/font>**","41257b42":"**<font color = Darkblue size = 4 >Information about data<\/font>**","635b1844":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)"}}