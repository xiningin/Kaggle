{"cell_type":{"516bca9d":"code","0dd5636c":"code","a75252c8":"code","cb94ce1a":"code","97bce49f":"code","b30c83a0":"code","cd81a55c":"code","d9e52fd3":"code","ce6eb039":"code","a9c6948d":"code","ef80d567":"code","918e6bfa":"code","5e52cd58":"code","6d168a29":"code","6e00cbe9":"markdown"},"source":{"516bca9d":"import pandas as pd\nimport os\nfrom sklearn.model_selection import train_test_split\nimport random\nimport matplotlib.pyplot as plt\nimport datetime as dt\ncalender = pd.read_csv('..\/input\/m5-forecasting-accuracy\/calendar.csv')","0dd5636c":"calender.head()","a75252c8":"# Removed event_name_1 and event_2 as they were to sparse\ndate_features = calender.loc[:,['d','date','wm_yr_wk','wday','event_type_1', 'snap_CA', 'snap_TX', 'snap_WI']]","cb94ce1a":"date_features","97bce49f":"calender['date'] = pd.to_datetime(calender['date'])\ncalender['month'] = calender['date'].dt.month\ncalender['wk_year'] = calender['wm_yr_wk'].apply(str).str[-2:].apply(int)\ncalender['yr-month'] = calender['date'].dt.to_period('M')\ncalender['day_of_month']=calender['date'].dt.day","b30c83a0":"calender.columns","cd81a55c":"dates = pd.concat([calender.loc[:,['date','wm_yr_wk','d','snap_CA','snap_TX','snap_WI','day_of_month','wk_year']],\n           pd.get_dummies(calender['wday']),\n           pd.get_dummies(calender['month']),\n           pd.get_dummies(calender['event_type_1'])], axis =1)","d9e52fd3":"from sklearn.preprocessing import MinMaxScaler\ndates['day_of_month'] = MinMaxScaler().fit_transform(dates['day_of_month'].to_numpy().reshape(-1,1))","ce6eb039":"dates['wk_year'] = MinMaxScaler().fit_transform(dates['wk_year'].to_numpy().reshape(-1,1))","a9c6948d":"dates.columns = [ 'date','wm_yr_wk','d','CA','TX','WI','day_of_month', 'wk_year', \n                 '1', '2', '3', '4','5','6','7',\n                 'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec',\n                 'Cultural','National','Religious','Sporting']","ef80d567":"column_names = [ 'date','wm_yr_wk','d','day_of_month', 'wk_year', \n                 '1', '2', '3', '4','5','6','7',\n                 'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec',\n                 'Cultural','National','Religious','Sporting',\n                 'CA','TX','WI']","918e6bfa":"dates= dates.reindex(columns=column_names)","5e52cd58":"dates","6d168a29":"dates.to_csv('data\/date_features.csv')","6e00cbe9":"## M5 Encoder Decoder model - Generating Date features\nThis is with reference to the Notebook M5 Encoder Decoder model with attention.\n\nLink : https:\/\/www.kaggle.com\/josephjosenumpeli\/m5-forecasting-encoder-decoder-with-attention \nThe features generated are fairly simple\n\nThis Notebook contains the basic approach and is just the start"}}