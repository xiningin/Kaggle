{"cell_type":{"a514eae9":"code","ca560f01":"code","77d54ab9":"code","134cdfe9":"code","8b88930a":"code","d3156fad":"code","bde9d02f":"code","77c89b78":"code","eddeda31":"code","87981c3a":"code","7651a654":"code","f1789621":"code","17291a94":"code","b055c11d":"code","3fc00963":"code","1c4911b5":"code","f10957d6":"code","22d0220f":"code","f7f567a1":"code","d88c113f":"code","25088317":"code","4c275d21":"code","21ebcdb2":"code","7c54dd54":"code","2a833d9d":"code","5873bafc":"code","434e7da0":"code","64569eeb":"code","bd9352a8":"code","9426ae4f":"markdown","b8256b48":"markdown","1fcc46ee":"markdown","8b98add7":"markdown","a02b1c9e":"markdown","c6874e1d":"markdown","7418bfc3":"markdown","0b05f1c5":"markdown","239afa26":"markdown","f98e071a":"markdown"},"source":{"a514eae9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n%matplotlib inline","ca560f01":"df_sales = pd.read_csv(\"..\/input\/sales-product-data\/Sales_January_2019.csv\")\n\nmonths = ['January', 'February', 'March', 'April', \n        'May', 'June', 'July', 'August', 'September',\n        'October','November','December']\n\nfor month in months[1:]:\n    df_sales = pd.concat([df_sales, pd.read_csv(f'..\/input\/sales-product-data\/Sales_{month}_2019.csv')])","77d54ab9":"df_sales = df_sales.reset_index().drop('index', axis=1)","134cdfe9":"df_sales.head()","8b88930a":"df_sales['Order Date'].replace('Order Date', np.nan, inplace=True)\ndf_sales['Order Date'] = pd.to_datetime(df_sales['Order Date'], infer_datetime_format=True)","d3156fad":"df_sales.dropna(how='any', inplace=True)","bde9d02f":"df_sales['Price Each'] = df_sales['Price Each'].astype(np.float64).round(2)","77c89b78":"df_sales['month'] = df_sales['Order Date'].dt.month\ndf_sales['hour'] = df_sales['Order Date'].dt.hour","eddeda31":"df_sales.head()","87981c3a":"df_sales['Total Price'] = np.round(df_sales['Quantity Ordered'].values.astype(int) * df_sales['Price Each'].values, 3)\ndf_sales['Total Price']","7651a654":"df_monthly_sales = df_sales[['Total Price', 'month', 'Product']].groupby(['month', 'Product']).sum().reset_index()","f1789621":"df_monthly_sales.rename(columns={'Total Price': 'Total Sales'}, inplace=True)","17291a94":"df_monthly_sales","b055c11d":"px.bar(df_monthly_sales, x='month', y='Total Sales', color='Product')","3fc00963":"df_sales['city'] = [i.split(', ')[1] for i in df_sales['Purchase Address']]","1c4911b5":"df_city_total_sales = df_sales[['Total Price', 'city']].groupby('city').sum().reset_index()","f10957d6":"df_city_sales = df_sales[['Order ID', 'city']].groupby('city').nunique().reset_index()\ndf_city_sales = df_city_sales.merge(df_city_total_sales, on='city')\ndf_city_sales.rename(columns={'Total Price': 'Total Sales','Order ID': 'Number of Sales'}, inplace=True)\ndf_city_sales['Total Sales'] = df_city_sales['Total Sales'].round(2)","22d0220f":"px.bar(df_city_sales, 'city', 'Number of Sales', title='Number of Sales by City', color='Total Sales')","f7f567a1":"df_hour_sales = df_sales[['hour', 'month', 'Product']].groupby(['month', 'hour']).count().reset_index()\npx.bar(df_hour_sales, x='month', y='Product', color='hour')","d88c113f":"df_hour_sales = df_sales[['hour', 'month', 'Product']].groupby(['hour', 'month']).count().reset_index()\npx.bar(df_hour_sales, x='hour', y='Product', color='month')","25088317":"df_sales['Product'].unique()","4c275d21":"df_products_bought_together = df_sales.loc[df_sales['Order ID'].duplicated(keep=False)]\n\ndf_products_bought_together['Grouped'] = df_sales.groupby(['Order ID'])['Product'].transform(lambda x: ' , '.join(x))\n\ndf_products_bought_together = df_products_bought_together[['Order ID', 'Grouped']].drop_duplicates()","21ebcdb2":"px.bar(x=df_products_bought_together['Grouped'].value_counts().head(10).index, \n        y=df_products_bought_together['Grouped'].value_counts().head(10), \n        )","7c54dd54":"from itertools import combinations\nfrom collections import Counter\n\ncount = Counter()\n\nfor row in df_products_bought_together['Grouped']:\n    row_list = row.split(' , ')\n    count.update(Counter(combinations(row_list, 2)))\n\nfor key, value in count.most_common(10):\n    print(key, value)","2a833d9d":"df_sales['Quantity Ordered'] = df_sales['Quantity Ordered'].astype(np.float64)","5873bafc":"df_sales.groupby('Product')['Quantity Ordered'].sum().sort_values(ascending=False)","434e7da0":"df_sales.groupby('Product')['Price Each'].max().sort_values(ascending=False)","64569eeb":"df_revenue = pd.merge(df_sales.groupby('Product')['Price Each'].max(), \n                    df_sales.groupby('Product')['Quantity Ordered'].sum(), \n                    left_index=True,\n                    right_index=True).reset_index()\n\ndf_revenue['Total Revenue'] = df_revenue['Price Each'] * df_revenue['Quantity Ordered']\ndf_revenue.sort_values(by='Total Revenue', ascending=False)","bd9352a8":"px.bar(data_frame=df_revenue.sort_values(by='Quantity Ordered', ascending=False), x='Product', y='Quantity Ordered', color='Total Revenue')","9426ae4f":"## What City had the highest number of sales?","b8256b48":"**Best month: December**\n\n**How much was sold: 4588415.50$**","1fcc46ee":"San Francisco had the highest number of sales with a total of 42,898 sales, amounting to 8.26 Million Dollars.","8b98add7":"## What product sold the most? Why do you think it sold the most?","a02b1c9e":"The most sold product was 'AAA Batteries (4-pack)'. It probably sold the most because it is an item that is needed often and is relatively cheap.","c6874e1d":"## What was the best month for sales? How much was earned that month?","7418bfc3":"## What products are most often sold together?","0b05f1c5":"Best time to advertise is between 9am and 10pm","239afa26":"## Data Prep","f98e071a":"The above method does not account for items being bought together in a bigger order. However, the ranking of the items comes pretty close to what we see using the method below. (Credits to Knightbearr for it)"}}