{"cell_type":{"62c8f0a0":"code","ddbc2f5f":"code","c09301c6":"code","caa4dc2d":"code","fb2115c8":"code","42a23bd5":"code","f6217333":"code","b9169c85":"code","dbdd20ad":"code","ae2280e2":"code","6a95d044":"code","dcd1fee4":"code","e252439a":"code","f4c42bfa":"code","d302ccdd":"code","a8864c0d":"code","d4f2fb86":"code","6b890782":"code","2f998658":"code","d57fcf92":"code","f8c4d6d8":"code","a9bd2e5f":"code","cf229683":"code","d18d6bc3":"code","a89f7ea8":"code","26caf748":"code","ee7f095a":"code","0c4f4ba5":"code","5d640d85":"code","182a02a1":"code","921442c7":"markdown","f740470b":"markdown","c81c253c":"markdown","b263cbdf":"markdown","3698768a":"markdown","6ce2993e":"markdown","6200572f":"markdown","b4dd6d06":"markdown","bad0355b":"markdown","16037ec0":"markdown","bafff280":"markdown","a14a1faf":"markdown","6b0a713c":"markdown","cb4b8c71":"markdown","6e741c68":"markdown","6df29ff4":"markdown","3fadac5f":"markdown","7e4b7537":"markdown","f0a7b37f":"markdown","3f5a97aa":"markdown","73f5e0d7":"markdown","f09660b8":"markdown","0937c9b0":"markdown","e41dcaff":"markdown","3d8873c7":"markdown","4478974d":"markdown","473beaf1":"markdown","bc2bbaae":"markdown","82e907ce":"markdown","17cba1db":"markdown"},"source":{"62c8f0a0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import rc\n% matplotlib inline\nfrom math import pi\nfrom palettable.colorbrewer.qualitative import Pastel1_7\npd.options.mode.chained_assignment = None","ddbc2f5f":"df = pd.read_csv('..\/input\/aac_intakes_outcomes.csv')\nprint(df.shape)\ndf.head()","c09301c6":"print(df.max())","caa4dc2d":"df.describe()","fb2115c8":"# Plot bar plot (animal type, age)\nplt.figure(figsize=(8,5))\nsns.barplot(x=df['animal_type'], y=df['age_upon_intake_(years)'])\nplt.title('Animal Type Average Age Upon Intake', fontsize=20);\nplt.xlabel('Animal Type', fontsize=18)\nplt.ylabel('Age (Years)', fontsize=18);","42a23bd5":"plt.figure(figsize=(10, 8))\nsns.boxplot(x='animal_type', y='age_upon_intake_(years)', data=df, orient='v')\nplt.title('Age Distributions for Diferent Animal Type', fontsize=20);\nplt.xlabel('Animal Type', fontsize=18)\nplt.ylabel('Age (Years)', fontsize=18)\nplt.xticks(fontsize=18)\nplt.yticks(fontsize=18);","f6217333":"# Plot bar plot (intake_condition, age)\nplt.figure(figsize=(10,5))\nsns.barplot(x=df['intake_condition'], y=df['age_upon_intake_(years)'])\nplt.title('Average Age by Intake Condition', fontsize=20);\nplt.xlabel('Intake Condition', fontsize=18)\nplt.ylabel('Age (Years)', fontsize=18);","b9169c85":"plt.figure(figsize=(12, 8))\nsns.boxplot(x='intake_condition', y='age_upon_intake_(years)', data=df, orient='v')\nplt.title('Age Distributions for Diferent Conditions', fontsize=20)\nplt.xlabel('Intake Condition', fontsize=18)\nplt.ylabel('Age (Years)', fontsize=18)\nplt.xticks(fontsize=18)\nplt.yticks(fontsize=18);","dbdd20ad":"# grouping dataset by intake condition, counting, and sorting.\nby_condition = df.groupby(['intake_condition'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\n# grouping conditions with low count into 'Other' category for illustration purposes\nfor i, row in by_condition.iterrows():\n    if (by_condition.intake_condition[i]=='Aged') or (by_condition.intake_condition[i]=='Feral') or (by_condition.intake_condition[i] == 'Pregnant'):\n        by_condition.intake_condition[i]='Other'       \nby_condition = by_condition.groupby(['intake_condition'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\n# Donut Plot\nplt.figure(figsize=(8,8))\nnames = by_condition['intake_condition']\nsize_of_groups = by_condition['count']\nplt.pie(size_of_groups, labels=names, colors=['skyblue','green','red','blue','orange'], \n        autopct='%1.1f%%', pctdistance=1.1, labeldistance=1.2)  # Create a pieplot\nmy_circle = plt.Circle( (0,0), 0.7, color='white') # add a circle at the center\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.title('Percentage of Intake Condition - ALL', fontsize=20);\nplt.show()","ae2280e2":"# pd.Categorical to order the weekdays starting from Monday\ndf['intake_weekday'] = pd.Categorical(df['intake_weekday'], ordered=True,\n                                      categories=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\nplt.figure(figsize=(12, 8))\nsns.countplot(x='intake_weekday', data=df, orient='v')\nplt.title('Count of Intakes by Day of Week - All years', fontsize=18)\nplt.xlabel('Weekday', fontsize=18)\nplt.ylabel('Count of Intakes', fontsize=18)\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16);","6a95d044":"plt.figure(figsize=(12, 8))\nsns.countplot(x='intake_month', data=df, orient='v')\nplt.title('Count of Intakes by Month of Year - All years', fontsize=18)\nplt.xlabel('Month', fontsize=18)\nplt.ylabel('Count of Intakes', fontsize=18)\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16);","dcd1fee4":"plt.figure(figsize=(10, 8))\nsns.countplot(x='intake_type', data=df, orient='v')\nplt.title('Count of Intakes by Type - All', fontsize=18)\nplt.xlabel('Intake Type', fontsize=16)\nplt.ylabel('Count of Intakes', fontsize=16)\nplt.xticks(fontsize=16, rotation='vertical')\nplt.yticks(fontsize=16);","e252439a":"plt.figure(figsize=(12, 8))\nsns.countplot(x='outcome_type', data=df, orient='v')\nplt.title('Count of Outcomes by Type - All', fontsize=18)\nplt.xlabel('Outcome Type', fontsize=16)\nplt.ylabel('Count of Outcomes', fontsize=16)\nplt.xticks(fontsize=12, rotation='vertical')\nplt.yticks(fontsize=12);","f4c42bfa":"# Creating columns for day of year\ndf['intake_month_day'] = pd.DatetimeIndex(df['intake_datetime']).strftime('%m-%d')\ndf['outcome_month_day'] = pd.DatetimeIndex(df['outcome_datetime']).strftime('%m-%d')\nby_intake_md = df.groupby('intake_month_day')[['count']].sum()\nby_outcome_md = df.groupby('outcome_month_day')[['count']].sum()\nby_intake_md['md'] = by_intake_md.index\nby_intake_md = by_intake_md.rename(columns={'count':'intake_count'})\nby_outcome_md['md'] = by_outcome_md.index\nby_outcome_md = by_outcome_md.rename(columns={'count':'outcome_count'})\ndf_md = pd.merge(by_intake_md, by_outcome_md, on='md')\ndf_md.sort_values('outcome_count').tail() # August 19th is the day with most outcomes.","d302ccdd":"# Creating columns for day of month\ndf['outcome_day'] = pd.DatetimeIndex(df['outcome_datetime']).day\n# Manipulating data to feed pivot table to then feed to seaborn heatmap\nby_outcome_md = df.groupby(['outcome_day','outcome_month'])[['count']].sum()\nby_outcome_md = by_outcome_md.reset_index(level=[0,1]) # to go from multiIndex to singleIndex\npivoted_table = by_outcome_md.pivot(index='outcome_month', columns='outcome_day', values='count')\npivoted_table.fillna(0, inplace=True)\nplt.figure(figsize=(18, 8))\nsns.heatmap(pivoted_table, cmap='Blues', annot=True, fmt='g', annot_kws={'size': 8})\nplt.title('Count of Outcomes by Month and Day of Year - All Years', fontsize=18);\nplt.xlabel('Outcome Day', fontsize=16)\nplt.ylabel('Outcome Month', fontsize=16);","a8864c0d":"# grouping dataset by anymal type and counting\nby_at = df.groupby(['animal_type'])[['count']].sum()\n# Donut Plot\nplt.figure(figsize=(8,8))\nnames = by_at.index\nsize_of_groups = by_at['count']\nplt.pie(size_of_groups, labels=names, colors=['#ff9999','#66b3ff','#99ff99','#ffcc99'], \n        autopct='%1.1f%%', pctdistance=1.1, labeldistance=1.2)  # Create a pieplot\nmy_circle = plt.Circle( (0,0), 0.7, color='white') # add a circle at the center\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.title('Anymal Type Distirbution- ALL', fontsize=20);\nplt.show()","d4f2fb86":"Other = df[df['animal_type']=='Other']\n# preping data for 1st donut plot - left\nOther1 = Other.groupby(['breed'])[['count']].sum().reset_index().sort_values(by='count', ascending=False).head(12)\nnames1 = Other1['breed']\nsize_of_groups1 = Other1['count']\n#preping data for 2nd donut plot - right\nOther2 = Other.groupby(['outcome_type'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\nnames2 = Other2['outcome_type']\nsize_of_groups2 = Other2['count']","6b890782":"fig = plt.figure(figsize=(16,8))\nplt.subplot(121)\nax = plt.pie(size_of_groups1, labels=names1, autopct='%1.1f%%', pctdistance=1.1, labeldistance=1.2)  # Create a pieplot\nmy_circle = plt.Circle( (0,0), 0.7, color='white') # add a circle at the center\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.title('Top 12 - Other Animal Type', fontsize=20);\nplt.subplot(122)\nax = plt.pie(size_of_groups2, labels=names2, autopct='%1.1f%%', colors=Pastel1_7.hex_colors, pctdistance=1.1, labeldistance=1.2)\nmy_circle = plt.Circle( (0,0), 0.7, color='white') # add a circle at the center\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.title('Outcome - Other Animal Type', fontsize=20);\nfig.set_facecolor('w')","2f998658":"by_ao = df.groupby(['animal_type','outcome_type'])[['count']].sum()\nby_ao = by_ao.reset_index(level=[0,1]) # to go from multiIndex to singleIndex\nby_ao.animal_type.unique()","d57fcf92":"# Values of each group\nAdoption = by_ao[by_ao['outcome_type']=='Adoption']['count']\nA=Adoption.values[1:4]\nDied = by_ao[by_ao['outcome_type']=='Died']['count']\nD=Died.values[1:4]\nDisposal = by_ao[by_ao['outcome_type']=='Disposal']['count']\nDi=Disposal.values[1:4]\nEuthanasia = by_ao[by_ao['outcome_type']=='Euthanasia']['count']\nE=Euthanasia.values[1:4]\n#Relocate = by_ao[by_ao['outcome_type']=='Relocate']['count']\n#R=Relocate.values[1:4]\nReturn = by_ao[by_ao['outcome_type']=='Return to Owner']['count']\nRe=Return.values[1:4]\nTransfer = by_ao[by_ao['outcome_type']=='Transfer']['count']\nT=Transfer.values[1:4]\nlegend=['Adoption','Died','Disposal','Euthanasia','Return','Transfer']","f8c4d6d8":"rc('font', weight='bold') # y-axis in bold\nr = [1,2,3] # The position of the bars on the x-axis\nnames = ['Cat', 'Dog', 'Other'] # Names of group and bar width\nbarWidth = 1\n# Create stacked bar plot\nplt.figure(figsize=(8,8))\nplt.bar(r, A, color='green', edgecolor='white', width=barWidth)\nplt.bar(r, D, bottom=A, color='purple', edgecolor='white', width=barWidth)\nplt.bar(r, Di, bottom=A+D, color='orange', edgecolor='white', width=barWidth)\nplt.bar(r, E, bottom=A+D+Di, color='red', edgecolor='white', width=barWidth)\nplt.bar(r, Re, bottom=A+D+Di+E, color='blue', edgecolor='white', width=barWidth)\nplt.bar(r, T, bottom=A+D+Di+E+Re, color='pink', edgecolor='white', width=barWidth)\nplt.title('Count of Outcomes by Animal Type - Birds Excluded', fontsize=18);\nplt.xticks(r, names, fontweight='bold')\nplt.xlabel('Animal Type', fontsize=16)\nplt.ylabel('Count', fontsize=16)\nplt.legend(legend,loc='upper right');\nplt.show()","a9bd2e5f":"adoption = df[df['outcome_type']=='Adoption']\nto_owner = df[df['outcome_type']=='Return to Owner']\npossitive = adoption.append(to_owner, ignore_index=True) # df of all animals with an outcome that indicates they are \"preferred\"\n# Plot bar plot (animal type, time in shelter)\nplt.figure(figsize=(8,5))\nsns.barplot(x=possitive['animal_type'], y=possitive['time_in_shelter_days']);\nplt.title('Avg # Days by Animal Type - Adoption or Return to Owner', fontsize=18)\nplt.xlabel('Animal Type', fontsize=16)\nplt.ylabel('Avg Time in Shelter (Days)', fontsize=16);","cf229683":"stray = df[df['intake_type']=='Stray']\nsurrender = df[df['intake_type']=='Surrender']\nnegative = stray.append(surrender, ignore_index=True) # df of all animals with an intake type that indicates they aren't wanted\n# Plot count plot (animal type, intake type)\nplt.figure(figsize=(8, 5))\nsns.countplot(x='animal_type', data=negative, orient='v')\nplt.title('Count of Intake by Animal Type - Stray or Surrender', fontsize=18)\nplt.xlabel('Animal Type', fontsize=16)\nplt.ylabel('Count of Intakes', fontsize=16);\nplt.xticks(fontsize=12, rotation='vertical')\nplt.yticks(fontsize=12);","d18d6bc3":"# getting Avg time in shelter to possitive outcome for dogs and manipulating so it can me merged to other df\navg_time = possitive.groupby(['animal_type'])[['time_in_shelter_days']].mean().reset_index().sort_values(by='time_in_shelter_days',ascending=False)\navg_time_dog = avg_time[avg_time['animal_type']=='Dog']\navg_time_dog['animal_type']='Avg # Days in Shelter to Possitive Outcome'\navg_time_dog = avg_time_dog.rename(columns = {'animal_type':'criteria','time_in_shelter_days':'value'})\n# getting % metrics for dogs from df\ndogs = df[df['animal_type']=='Dog']\ndogs_by_ot = dogs.groupby(['outcome_type'])[['count']].sum().reset_index().sort_values(by='count',ascending=False)\ndogs_count = dogs.shape[0]\ndogs_by_ot['value'] = 100*dogs_by_ot['count']\/dogs_count # this is percent\ndogs_by_ot = dogs_by_ot.rename(columns={'outcome_type':'criteria'})\ntop2_dbot = dogs_by_ot.head(2) # adoption and return to owner happen to be the top 2\ndogs_by_it = dogs.groupby(['intake_type'])[['count']].sum().reset_index().sort_values(by='count',ascending=False)\ndogs_by_it['value'] = 100*dogs_by_it['count']\/dogs_count # this is percent\ndogs_by_it = dogs_by_it.rename(columns={'intake_type':'criteria'})\ntop2_dbit = dogs_by_it.head(2) # stray and owner surrender happen to be the top 2\n# combining top2_dbit & top2_dbot into one df\ndog_spi_0 = top2_dbot.append(top2_dbit, ignore_index=True)\ndog_spi_0 = dog_spi_0.drop(['count'],axis=1)\ndog_spi_0['criteria'] = '% ' + dog_spi_0['criteria']\n# combining dog_spi_0 with avg_time_dog\ndog_spi = dog_spi_0.append(avg_time_dog, ignore_index=True)\ndog_spi","a89f7ea8":"# grouping dataset by anymal type and counting\navg_time_cat = avg_time[avg_time['animal_type']=='Cat']\navg_time_cat['animal_type'] = 'Avg # Days in Shelter to Possitive Outcome'\navg_time_cat = avg_time_cat.rename(columns = {'animal_type':'criteria', 'time_in_shelter_days':'value'})\n# getting % metrics for dogs from df\ncats = df[df['animal_type']=='Cat']\ncats_by_ot = cats.groupby(['outcome_type'])[['count']].sum().reset_index().sort_values(by='count',ascending=False)\ncats_count = cats.shape[0]\ncats_by_ot['value'] = 100*cats_by_ot['count']\/cats_count # this is percent\ncats_by_ot = cats_by_ot.rename(columns = {'outcome_type':'criteria'})\ncat_adopt = cats_by_ot[1:2]\ncat_return = cats_by_ot[3:4]\ntop2_dbot = cat_adopt.append(cat_return, ignore_index=True)\ncats_by_it = cats.groupby(['intake_type'])[['count']].sum().reset_index().sort_values(by='count',ascending=False)\ncats_by_it['value'] = 100*cats_by_it['count']\/cats_count # this is percent\ncats_by_it = cats_by_it.rename(columns = {'intake_type':'criteria'})\ntop2_dbit = cats_by_it.head(2) # stray and owner surrender happen to be the top 2\n# combining top2_dbit & top2_dbot into one df\ncat_spi_0 = top2_dbot.append(top2_dbit, ignore_index=True)\ncat_spi_0 = cat_spi_0.drop(['count'], axis=1)\ncat_spi_0['criteria'] = '% '+ cat_spi_0['criteria']\n# combining dog_spi_0 with avg_time_dog\ncat_spi = cat_spi_0.append(avg_time_cat, ignore_index=True)\ncat_spi","26caf748":"categories = dog_spi['criteria'].tolist()\nN = len(categories)\ndog_values = dog_spi['value'].values.tolist()\ndog_values += dog_values[:1] # need to repeat first value to close loop\ncat_values = cat_spi['value'].values.tolist()\ncat_values += cat_values[:1] # need to repeat first value to close loop\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\nplt.figure(figsize=(8,8))\n# Initialise the spider plot\nax = plt.subplot(111, polar=True)\nplt.title('Dogs vs. Cats', fontsize=18)\n# Draw one axe per variable + add labels labels yet\nplt.xticks(angles[:-1], categories, color='blue', size=10)\n# Draw ylabels\nax.set_rlabel_position(0)\nplt.yticks([10,20,30,40,50,60,70], ['10','20','30','40','50','60','70'], color='grey', size=8)\nplt.ylim(0,80)\n# Plot data\nax.plot(angles, dog_values, linewidth=1, linestyle='solid', label='Dogs')\nax.fill(angles, dog_values, 'b', alpha=0.1)\nax.plot(angles, cat_values, linewidth=1, linestyle='solid', label='Cats')\nax.fill(angles, cat_values, 'r', alpha=0.1)\nplt.legend(loc='upper right', bbox_to_anchor=(1.05, 1), fontsize=12);","ee7f095a":"breed=dogs.groupby(['breed'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\nbreed_40=breed.head(40)\n# Bar plot\nfig = plt.figure(figsize=(8,10))\nsns.barplot('count','breed',\n                 data=breed_40, palette='husl', linewidth=0.7, edgecolor='k')  # hls\/husl chooses the palette based on evenly spaced colors taken out from a circular color space. husl controls for color intensity.\nplt.ylabel('Dog Breed', fontsize=14)\nplt.xlabel('Count', fontsize=14)\nplt.title('TOP 40 DOG BREEDS', fontsize=15)\nfor i,j in enumerate(breed_40['breed']):\n    ax.text(.9,i,j,weight='bold',fontsize=14)\nplt.grid(True,alpha= .3);","0c4f4ba5":"# Creating a column to indicate if breed is pit bull or pit bull mix (Y) or other (N)\ndogs['Pit Bull'] = np.where(dogs['breed'].str.contains('Pit Bull'), 'Y', 'N')\nadoption = dogs[dogs['outcome_type']=='Adoption']\navg_time_adopt = adoption.groupby(['Pit Bull'])[['time_in_shelter_days']].mean().reset_index().sort_values(by='time_in_shelter_days', ascending=False)\navg_time_adopt_pit = avg_time_adopt[avg_time_adopt['Pit Bull']=='Y']\navg_time_adopt_pit['Pit Bull'] = 'Avg # Days to Adoption'\navg_time_adopt_pit = avg_time_adopt_pit.rename(columns = {'Pit Bull':'criteria', 'time_in_shelter_days':'value'})\nto_owner = dogs[dogs['outcome_type']=='Return to Owner']\navg_time_return = to_owner.groupby(['Pit Bull'])[['time_in_shelter_days']].mean().reset_index().sort_values(by='time_in_shelter_days', ascending=False)\navg_time_return_pit = avg_time_return[avg_time_return['Pit Bull']=='Y']\navg_time_return_pit['Pit Bull'] = 'Avg # Days to Return to Owner'\navg_time_return_pit = avg_time_return_pit.rename(columns = {'Pit Bull':'criteria', 'time_in_shelter_days':'value'})\n# combining avg time adoption and return\navg_time_pit = avg_time_adopt_pit.append(avg_time_return_pit, ignore_index=True)\n# getting % metrics for pits from dogs\npits = dogs[dogs['Pit Bull']=='Y']\npits_by_ot = pits.groupby(['outcome_type'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\npits_count = pits.shape[0]\npits_by_ot['value'] = 100*pits_by_ot['count']\/pits_count # this is percent\npits_by_ot = pits_by_ot.rename(columns = {'outcome_type':'criteria'})\ntop2_dbot = pits_by_ot.head(2) # adoption and return to owner happen to be the top 2\npits_by_it = pits.groupby(['intake_type'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\npits_by_it['value'] = 100*pits_by_it['count']\/pits_count # this is percent\npits_by_it = pits_by_it.rename(columns = {'intake_type':'criteria'})\ntop2_dbit = pits_by_it.head(2) # stray and owner surrender happen to be the top 2\n# combining top2_dbit & top2_dbot into one df\npit_spi_0 = top2_dbot.append(top2_dbit, ignore_index=True)\npit_spi_0 = pit_spi_0.drop(['count'],axis=1)\npit_spi_0['criteria'] = '% '+ pit_spi_0['criteria']\n# combining dog_spi_0 with avg_time_dog\npit_spi = pit_spi_0.append(avg_time_pit, ignore_index=True)\npit_spi","5d640d85":"# grouping dataset by anymal type and counting\navg_time_adopt_other = avg_time_adopt[avg_time_adopt['Pit Bull']=='N']\navg_time_adopt_other['Pit Bull'] = 'Avg # Days to Adoption'\navg_time_adopt_other = avg_time_adopt_other.rename(columns = {'Pit Bull':'criteria', 'time_in_shelter_days':'value'})\navg_time_return_other = avg_time_return[avg_time_return['Pit Bull']=='N']\navg_time_return_other['Pit Bull'] = 'Avg # Days to Return to Owner'\navg_time_return_other = avg_time_return_other.rename(columns = {'Pit Bull':'criteria', 'time_in_shelter_days':'value'})\n# combining avg time adoption and return\navg_time_other = avg_time_adopt_other.append(avg_time_return_other, ignore_index=True)\n# getting % metrics for non pitbulls from dogs\nothers = dogs[dogs['Pit Bull']=='N']\nothers_by_ot = others.groupby(['outcome_type'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\nothers_count = others.shape[0]\nothers_by_ot['value'] = 100*others_by_ot['count']\/others_count # this is percent\nothers_by_ot = others_by_ot.rename(columns = {'outcome_type':'criteria'})\ntop2_dbot = others_by_ot.head(2) # adoption and return to owner happen to be the top 2\nothers_by_it = others.groupby(['intake_type'])[['count']].sum().reset_index().sort_values(by='count', ascending=False)\nothers_by_it['value'] = 100*others_by_it['count']\/others_count # this is percent\nothers_by_it = others_by_it.rename(columns = {'intake_type':'criteria'})\ntop2_dbit = others_by_it.head(2) # stray and owner surrender happen to be the top 2\n# combining top2_dbit & top2_dbot into one df\nother_spi_0 = top2_dbot.append(top2_dbit, ignore_index=True)\nother_spi_0 = other_spi_0.drop(['count'],axis=1)\nother_spi_0['criteria'] = '% '+ other_spi_0['criteria']\n# combining dog_spi_0 with avg_time_dog\nother_spi = other_spi_0.append(avg_time_other, ignore_index=True)\nother_spi","182a02a1":"categories = pit_spi['criteria'].tolist()\nN = len(categories)\npit_values = pit_spi['value'].values.tolist()\npit_values += pit_values[:1] # need to repeat first value to close loop\nother_values = other_spi['value'].values.tolist()\nother_values += other_values[:1] # need to repeat first value to close loop\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\nplt.figure(figsize=(8,8))\n# Initialise the spider plot\nax = plt.subplot(111, polar=True)\nplt.title('Pit Bull vs. Other Breeds', fontsize=18)\n# Draw one axe per variable + add labels labels yet\nplt.xticks(angles[:-1], categories, color='blue', size=10)\n# Draw ylabels\nax.set_rlabel_position(1.5)\nplt.yticks([10,20,30,40,50,60,70], ['10','20','30','40','50','60','70'], color='grey', size=8)\nplt.ylim(0,80)\n# Plot data\nax.plot(angles, pit_values, color='green', linewidth=1, linestyle='solid', label='Pit Bull or Pit Bull Mix')\nax.fill(angles, pit_values, color='green', alpha=0.1)\nax.plot(angles, other_values, color='red', linewidth=1, linestyle='solid', label='Other Breed')\nax.fill(angles, other_values, color='red', alpha=0.1)\nplt.legend(loc='upper right', bbox_to_anchor=(1.1, .4), fontsize=12);","921442c7":"### Pitbulls vs Other Breeds\n\n    We wil follow a similar approach for comparing Pit Bulls with other Breeds, but we will split 'Avg # Days to Possitive Outcome' in two metrics, 'Avg # Days to Adoption' and 'Avg # Days to Return'.  These metrics will allow for better interpretation of the results.","f740470b":"### Reading, Exploring and Cleaning ","c81c253c":"* The vast majority of intakes are Stray animals, with Owner Surrender coming second.","b263cbdf":"Pit Bull vs. Other Breeds Insigths:\n   1. % Adopted (outcome type): Other dog breeds are more likely to get adopted than Pit Bulls. ~47% vs ~37%.\n   2. % Returned to Owner (outcome type): Pit Bulls are more likely to be returned to owner than other dog breeds.  This is more an indication that Pit Bull owners are more attached to their dogs, being more likely to go to shelter looking for their lost pet. \n   3. % Stray (intake type): It is less likely to have a Stray intake type Pit Bull than Other Breed, althought the numbers are really close.  This is also associated about how much pet owners care about them. The more they care, the less the number of Strays.\n   4. % Owner Surrender (intake type): Pit Bulls and Other Breeds are surrendered in an equal proportion. This is consistent with the Dog vs. Cat radar, indicating that this decision in not influenced by the animal but rather external considtions such as financial.\n   5. Avg time (days) in shelter to Adoption: Avg # days in shelter for Other Breeds is ~20 days, less than half that for Pit Bulls ~50 days. This is an indication they are more desired than Pit Bulls. \n   6. Avg time (days) in shelter to Return to Owner: Avg # days in shelter for other breeds is ~4 days, about half that for Pit Bulls ~8 days. From this one and #2 (% Return to Owner), we conclude that even though Pit Bull owners are more likely to reclaim their dog, they take a little longer than other dog owners.\n   \nFindings 1 and 5 validate the hypothesis that Pit Bulls are less desired than other Dog breeds. I think this bad reputation is because there are a number of myths and stereotypes about \"pitbull-type\" dogs that are either anecdotal and misleading or entirely false. <span style=\"color:blue\"><b> For facts and reliable information about Pit Bull type dogs, refer to https:\/\/www.pitbullinfo.org\/.<\/b><\/span> On the flip side, from findings 2 and 3 we can imply that those who took a chance on having a Pit Bull are more attached to them, because they are indeed amazing dogs. \n\n<b> *If you are considering getting a pet, please consider adopting.  If getting a dog, I strongly suggest you read the facts in link above before swinging by an Animal Shelter, so that you make an informed decision. Pit Bull or not (although, the numbers show Pit Bull owners are more attached to them, wonder why?), as long as you adopt, you will potentially be saving a life that will bring a lot of joy to yours.*<\/b>","3698768a":"* We can see that December 25th (Christmas day) is the one with the least number of outcomes for all years (2013 to 2018).  This makes sense as adopting an animal may not be in the top priorities for Christmas Day. Remember Adoption is the most significant contributor to the number of outcomes.\n* August 19th is the day with the most Outcomes - with most being Adoption, it is agreat day for pets. Also notice that July has several days with the most number of outcomes. After a little bit of research, I found out that some cities waive adoptions fees during July as they prepare for shelters to be filled beyond capacity with lost animals who become frightened by 4th of July fireworks and run away.","6ce2993e":"* At Austin Animal Shelter, there are more Pit Bull Mix than any other dog breed.","6200572f":"* Bar plot gives us an estimate of central tendency for a numeric variable (height of each rectangle) and an indication of the uncertainty around that estimate (error bars in black).\n* Apart from \"Other\" and \"Pregnant\", which have a larger error bar, the mean value seems to accurately represent the data of all the intake conditions.","b4dd6d06":"* We can see that May and October are the months with the most intakes.","bad0355b":"* The stacked bar plot did not include birds as these are 0.4 % of total dataset and their distribution cannot really be appreciated in this plot\n* We can see that between cats and dogs, cats get returned to owner relatively less than dogs.\n* The majority of \"Other\" animal type end up with Euthanasia as outcome.\n* We conclude that distribution of outcomes is not even acroos animal types.","16037ec0":"### Exploratory Analysis ~ Austin Animal Center Shelter\n\nExploratory analysis of Austin Animal Center Shelter dataset using python 3.6. The Austin Animal Center is the largest no-kill animal shelter in the United States that provides care and shelter to over 18,000 animals each year. The time frame for all visualizations is from 2013 Q4 to 2018 Q1.\n\n###### By: Leo Barbosa\nhttps:\/\/github.com\/Leo8216\/Exploratory-Analysis-Austin-Animal-Center-Shelter","bafff280":"### By Animal Type","a14a1faf":"### By Animal Type - Digging Deeper","6b0a713c":"* As expected, dogs and cats are the majority, with ~94%.  The other 6% being birds and other types of animals.  I wonder what those are.","cb4b8c71":"### Dogs vs. Cats\n\nTo compare them, lets use the following metrics:  \n   1. % Adopted (outcome type)\n   2. % Returned to Owner (outcome type)\n   3. % Stray (intake type)\n   4. % Owner Surrender (intake type)\n   5. Avg time (days) in shelter to possitive outcome (Adoption or Return to Owner)","6e741c68":"### By Intake Month","6df29ff4":"### By Day of Year","3fadac5f":"### By Outcome Type","7e4b7537":"We can see that Dogs beat Cats in almost all metrics:\n   1. % Adopted (outcome type): Dogs are slightly more likely to get adopted than Cats\n   2. % Returned to Owner (outcome type): Dogs are a lot more likely to be returned to owner than cats. About 6 to 1 ratio. \n   3. % Stray (intake type): Dogs are less likely to be Stray at intake than cats. This is great for dogs.\n   4. % Owner Surrender (intake type): Cats and Dogs are surrender in an equal proportion.\n   5. Avg time (days) in shelter to possitive outcome (Adoption or Return to Owner): Avg # days is in shelter is less for Dogs, meaning they are more desired than cats.","f0a7b37f":"* From donutplot on left - \"Top 12 - Other Animal Type\":\n    * Bats and Bats mixes make up more than 50% of the Top 12 in the Other animal type. I was expecting Rabbit to be the one with the majority.  \n    * Skunk and Guinea Pigs made it to the top 12... impressive.  Not sure if I ever met anyone that has one.\n* From donutplot on right: \"Outcome - Other Animal Type\":\n    * Most of this other interesting animals, 71.9%, end up with an outcome of Euthanasia. \n    * Only 5% of them are adopted.","3f5a97aa":"* The age for intake condition aged was mainly between 10 and 15 years. \n* For all other intake conditions, the age was mainly less than 5 years.","73f5e0d7":"### By Intake Weekday","f09660b8":"### Inspiration\n\nI wanted to do exploratory analysis on something that interested me, and found this dataset for the Austin Animal Shelter. I think what animal shelters do is great, and this one in particular is a no-kill shelter, that had some data on Pit Bulls so I decided to explore it a bit. Unlike many, I want to adopt a Pit Bull because after living with one, I think they are great dogs. One hypothesis I wanted to test was that Pit Bulls are, in general, less desired than other dog breeds. I think this bad reputation is because there are a number of myths and stereotypes about \"pitbull-type\" dogs that are either anecdotal and misleading or entirely false. <span style=\"color:blue\"><b> For facts and reliable information about Pit Bull type dogs, refer to https:\/\/www.pitbullinfo.org\/.<\/b><\/span>","0937c9b0":"### By Intake Type","e41dcaff":"* This plot is simply showing us that the there are more dogs that have an intake type of Stray or Surrender than cats. This is consistent with the dataset having more data on Dogs than Cats, so we cannot really conclude that cats are preffered.  We need a relative comparison.","3d8873c7":"## Which animal type is prefered?\n\nTo do this we need some metrics.  Lets look at possitve and negative metrics:\n* For posstive lets look at Adoption and Return to Owner outcomes.  In adition to looking at the probability of the outmo happening, we can also find the average time to a possitive outcome.  The lower the time to a possitive outcome, the more dessired the animal is.\n* For negative metrics we can look at the probability of Stray and Surrender intake types.","4478974d":"### Count of Outcomes by Month and Day of Year","473beaf1":"* From this donut plot it is evident that the vast majority of intakes are in normal condition. Sick, Injured, and Aged (conditions that are more likely to lead to an unfortunate outcome such as Euthanasia) are only a small percentage.","bc2bbaae":"###  By Intake Condition - ALL","82e907ce":"### Is the distribution of outcomes even across animal types?","17cba1db":"* An indication of an animal being preferred could be the average number of days in shelter before a possitive outcome. By this metric, the plot above shows us that birds are the most preferred animal type having an avg ~12 days in shelter, with dogs being the second most preferred with an avg ~17 days."}}