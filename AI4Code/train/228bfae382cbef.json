{"cell_type":{"8a946a3b":"code","e0f71112":"code","d2b19913":"code","092ef179":"code","1859756f":"code","05db6462":"code","8f6266d7":"code","b87fbbea":"code","afe4939d":"code","fbd4120c":"code","64066e38":"code","9e76e95d":"code","5944e568":"code","e33dfc3f":"code","bf64cc2f":"code","0eacf337":"code","8b9970fb":"code","d9bce796":"code","1f36f61b":"code","8a784317":"code","b0311c7f":"code","2c8b24b1":"code","9cb2e641":"code","d389de88":"code","23ae8cc2":"markdown","0d8152a5":"markdown","e4115374":"markdown","c77f2121":"markdown","717ffb3f":"markdown"},"source":{"8a946a3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e0f71112":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","d2b19913":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","092ef179":"# Import libraries necessary for this project\nfrom IPython.display import display # Allows the use of display() for DataFrames\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\n# Pretty display for notebooks\n%matplotlib inline\n","1859756f":"#print information about the data\ntrain_data.info()\n# we take a copy from the DataFrame\ntitanic_copy =train_data.copy()","05db6462":"# load the first five raws\ntitanic_copy.head()","8f6266d7":"# count the Nan values in each coloumn\ntitanic_copy.isnull().sum()","b87fbbea":"# drop the column[cabin,ticket,home.dest,body,boat,name]\ntitanic_copy=titanic_copy.drop('Cabin',axis=1)\ntitanic_copy=titanic_copy.drop('Ticket',axis=1)\ntitanic_copy=titanic_copy.drop('Fare',axis=1)\ntitanic_copy=titanic_copy.drop('Embarked',axis=1)\ntitanic_copy=titanic_copy.drop('Name',axis=1)\n\n#print list of the remaining columns\nlist(titanic_copy)","afe4939d":"# count the Nan values to cheeck the code below\ntitanic_copy.isnull().sum()","fbd4120c":"#relationship between feature \"sex\" and  survival rate\nfemale_data=train_data[train_data[\"Sex\"] == \"female\"]\nsb.countplot(data=female_data,x='Survived');\nplt.xlabel(\"number of passengers who survived and not survived with respect they are all females\");","64066e38":"male_data=train_data[train_data[\"Sex\"] == \"male\"]\nsb.countplot(data=male_data,x='Survived');\nplt.xlabel(\"number of passengers who survived and not survived with respect they are all males\");","9e76e95d":"plt.figure(figsize = [10, 5])\n# example of somewhat too-large bin size\nplt.subplot(1, 2, 1) # 1 row, 2 cols, subplot 1\nsb.countplot(data=male_data,x='Survived')\nplt.xlabel(\"all males\");\nplt.subplot(1, 2, 2)\nsb.countplot(data=female_data,x='Survived');\nylabel=np.arange(0,600,100)\nplt.yticks(ylabel);\nplt.xlabel(\"all females\");","5944e568":"#plot a barchart graph between the survived column and the frist class from pclass column\ntitanic_copy[titanic_copy['Pclass']==1]['Survived'].value_counts().sort_index().plot(kind='bar');","e33dfc3f":"#plot a barchart graph between the survived column and the second classfrom pclass column\ntitanic_copy[titanic_copy['Pclass']==2]['Survived'].value_counts().sort_index().plot(kind='bar');","bf64cc2f":"#plot a barchart graph between the survived column and the third class from pclass column\ntitanic_copy[titanic_copy['Pclass']==3]['Survived'].value_counts().sort_index().plot(kind='bar');","0eacf337":"#plot abarchat graph between the female from sex column who is from class 1 and survived column\n\ntitanic_copy[(titanic_copy['Sex']=='female')&(titanic_copy['Pclass']==1)]['Survived'].value_counts().sort_index().plot(kind='bar');","8b9970fb":"# plot abarchat graph between the male from sex column who is from class 3 and survived column\n\ntitanic_copy[(titanic_copy['Sex']=='male')&(titanic_copy['Pclass']==3)]['Survived'].value_counts().sort_index().plot(kind='bar');","d9bce796":"# plot abarchat graph between the female from sex column who is from class 3 and survived column\n\ntitanic_copy[(titanic_copy['Sex']=='female')&(titanic_copy['Pclass']==3)]['Survived'].value_counts().sort_index().plot(kind='bar');","1f36f61b":"# create a column with 0 refers to woman and 1 refers to man\ntrain_data['IsMan']=(train_data['Sex']=='male')*1\n\n#drop the column sex\ntrain_data=train_data.drop('Sex',axis=1)","8a784317":"# create a column with 0 refers to woman and 1 refers to man\ntest_data['IsMan']=(test_data['Sex']=='male')*1\n\n#drop the column sex\ntest_data=test_data.drop('Sex',axis=1)","b0311c7f":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression","2c8b24b1":"scaler = StandardScaler()\nfeatures = [\"Pclass\", \"IsMan\", \"SibSp\", \"Parch\"]\nx_train= pd.get_dummies(train_data[features])\nx_test = pd.get_dummies(test_data[features])\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.fit_transform(x_test)\ny_train=train_data['Survived']\nmodel = LogisticRegression(random_state=0)\nmodel.fit(x_train, y_train)\ny_pred = model.predict(x_test)\nfinal = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': y_pred})","9cb2e641":"final","d389de88":"final.to_csv('my_submission.csv', index=False)","23ae8cc2":"*the majority of males did not survive*","0d8152a5":"**visualization**","e4115374":"*the majority of females survived*","c77f2121":"***summary:\n-being a female in first class is a strong induction of survivor\n-while being a male in third class is a strong induction of not surviving\n-the age does not play a big role in surviving***","717ffb3f":"**classification:**"}}