{"cell_type":{"52b05002":"code","004d1059":"code","338316d7":"code","3a41eef2":"code","09534caa":"code","3faab06e":"code","06d5f5d3":"code","7c88b892":"code","2c724954":"code","2b828210":"code","b6425851":"code","d1d9c5c3":"code","c29f35f6":"code","e1ec7aa8":"code","c79cf2f3":"code","fc5179ea":"code","ee22620d":"code","aab5a1ef":"code","7fab9a45":"code","507dc38e":"code","fecbec25":"code","79619531":"code","41fcde39":"code","21f65c7b":"code","0643dec1":"code","afca5b80":"code","09f215f9":"code","d66f47ad":"code","bf0c8969":"code","c5dc8e1e":"markdown","80465d6f":"markdown","5f09148a":"markdown","867cd8fc":"markdown","4051c409":"markdown","774113f0":"markdown","baf64f3e":"markdown","cabdef3b":"markdown","ca30e2fb":"markdown","062ec1b7":"markdown","d885d711":"markdown","a6ab8478":"markdown","052c1c23":"markdown","9f1e3cb3":"markdown","544b1261":"markdown","ead65a58":"markdown","2a4871cc":"markdown","c5bb7c78":"markdown","8bec6daf":"markdown","ec5fb7c1":"markdown","701360a1":"markdown","f6b4f657":"markdown","2f40a01a":"markdown","cac7726e":"markdown","232bc320":"markdown","6e146ab9":"markdown","625dba66":"markdown","8e6f3200":"markdown","0cd47cca":"markdown","4d362ecf":"markdown","22b1323c":"markdown","1ab2a7ef":"markdown","d7cfb71d":"markdown"},"source":{"52b05002":"import numpy as np\nimport pandas as pd\nimport datetime as dt\nimport matplotlib.pyplot as plt\n%matplotlib inline","004d1059":"df1=pd.read_excel('\/kaggle\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx',sheet_name='Year 2009-2010')\ndf2=pd.read_excel('\/kaggle\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx',sheet_name='Year 2010-2011')","338316d7":"online_retail_II=pd.concat([df1,df2])","3a41eef2":"online_retail_II=online_retail_II.reset_index(drop=True)","09534caa":"online_retail_II.head()","3faab06e":"online_retail_II['Revenue']=online_retail_II['Quantity']*online_retail_II['Price']","06d5f5d3":"online_retail_II.info()","7c88b892":"online_retail_II.isna().sum()","2c724954":"online_retail_II.shape","2b828210":"print(\"%\",100*(online_retail_II['Customer ID'].isna().sum()\/online_retail_II.shape[0]))","b6425851":"online_retail_II_1=online_retail_II.dropna()","d1d9c5c3":"online_retail_II_1.head()","c29f35f6":"online_retail_II_1=online_retail_II_1.reset_index(drop=True)","e1ec7aa8":"df3=online_retail_II_1.drop_duplicates(subset=['Invoice']).reset_index(drop=True)\ndf3.head()","c79cf2f3":"UC=pd.DataFrame(online_retail_II['Customer ID'].unique()).dropna().count()[0] #UC = Unique Customer ID\nprint('Total number of customers: ',UC)","fc5179ea":"BUC=df3['Customer ID'].value_counts().reset_index()\nNBUC=BUC[BUC['Customer ID']==1].count()[0]\nprint('Percentage of customers who have purchased only once: ','%',(NBUC\/UC)*100)","ee22620d":"item=2\nwhile item<BUC['Customer ID'].max():\n    NBUC1=BUC[BUC['Customer ID']==item].count()[0]\n    if ((NBUC1\/UC)*100)>=1:\n        print('Percentage of customers who have purchased ',item,' times: ','%',(NBUC1\/UC)*100)\n    item+=1\nprint('The remaining percentages are less than 1 percent')\nprint('The most quantity of purchases = ',BUC['Customer ID'].max())","aab5a1ef":"BUC.set_axis(['Customer ID','Frequency of Purchases'],inplace=True,axis=1)\nC1P = BUC[BUC['Frequency of Purchases']==1].sort_values('Customer ID').reset_index(drop=True)\nC1P.head() #C1P: Customers with one purchase","7fab9a45":"df_C1P = pd.merge(online_retail_II,C1P['Customer ID'],how='inner').sort_values('Customer ID').reset_index(drop=True)\ndf_C1P.head()","507dc38e":"df_FS = df_C1P['StockCode'].value_counts().reset_index()\ndf_FS.set_axis(['StockCode','Frequency'],inplace=True,axis=1)\ndf_FS.head()","fecbec25":"df_FS = pd.merge(df_FS,df_C1P[['StockCode','Description']],how='left').drop_duplicates(subset=['StockCode']).reset_index(drop=True)\ndf_FS = df_FS[['StockCode','Description','Frequency']]\ndf_FS.head()","79619531":"df_ParetoF = df_FS\ndf_ParetoF['cumpercentage_F'] = df_ParetoF['Frequency'].cumsum()\/df_ParetoF['Frequency'].sum()\ndf_ParetoF = df_ParetoF[df_ParetoF['cumpercentage_F']<=0.70]\ndf_ParetoF.head()","41fcde39":"df_RS = df_C1P.groupby('StockCode').sum()['Revenue'].sort_values(ascending=False).reset_index()\ndf_RS.set_axis(['StockCode','Revenue'],inplace=True,axis=1)\ndf_RS.head()","21f65c7b":"df_RS = pd.merge(df_RS,df_C1P[['StockCode','Description']],how='right').drop_duplicates(subset=['StockCode']).reset_index(drop=True)\ndf_RS = df_RS[['StockCode','Description','Revenue']]\ndf_RS.head()","0643dec1":"df_ParetoR = df_RS\ndf_ParetoR['cumpercentage_R'] = df_ParetoR['Revenue'].cumsum()\/df_ParetoR['Revenue'].sum()\ndf_ParetoR = df_ParetoR[df_ParetoR['cumpercentage_R']<=0.70]\ndf_ParetoR.head()","afca5b80":"df_result = pd.merge(df_ParetoF.drop(columns=['cumpercentage_F']),df_ParetoR[['StockCode','Description','Revenue']],how='inner').drop_duplicates(subset=['StockCode']).reset_index(drop=True)\ndf_result.head()","09f215f9":"df_C1P['InvoiceYearMonth']=pd.to_datetime(df_C1P['InvoiceDate']).map(lambda date: str((date.year))+'-'+dt.datetime(2000,date.month,29).strftime('%m'))\ndf_C1P.head()","d66f47ad":"df_MonthlyNewCustomer = df_C1P.groupby('InvoiceYearMonth')['Customer ID'].nunique().reset_index()\ndf_MonthlyNewCustomer.set_axis(['InvoiceYearMonth','Number of New Customers'],inplace=True,axis=1)\ndf_MonthlyNewCustomer.head()","bf0c8969":"fig = plt.figure()\naxes = fig.add_axes([0, 0, 3, 1])\naxes.bar(df_MonthlyNewCustomer['InvoiceYearMonth'],height=df_MonthlyNewCustomer['Number of New Customers'],color=\"Green\")\naxes.set_xlabel('Date',size=20)\naxes.set_ylabel('Number',size=20)\naxes.set_title('Monthly New Customer',size=24);\nplt.show()","c5dc8e1e":"### Now we read these customers data from the main data frame","80465d6f":"# In the name of God","5f09148a":"### Now get an interface between the two data frames related to previous Pareto analyzes","867cd8fc":"### Now we add YearMonth column, which is obtained from the date column, in the data frame for customers who have purchased only once","4051c409":"### Now we want calculate percentage of customers who have purchased only once","774113f0":"### Now, from the data frame obtained above, we get the purchases frequency of each product","baf64f3e":"We find out the number of empty cells in the data frame by the following command","cabdef3b":"### In the following there are similar investigations of the previous 3 tables, but here we investigate the stock codes based on the sales revenue of each type of stock code","ca30e2fb":"### Then we connect the two data frames together to have all the information in one data frame, and because both data frames have the same variables, then it can be done with the following function","062ec1b7":"### Therefore, in order to attract customers, attention should be paid to these months and to the products that were obtained from the \"df_result\" data frame","d885d711":"A diagram is being drawn for the table above","a6ab8478":"### We categorize the number of customers who have purchased only once, based on the months of each year ","052c1c23":"###  ","9f1e3cb3":"Because the data frame is obtained from two data frames, we must reset its indexes and delete the previous indexes","544b1261":"The following code shows how many percent of transactions are without a customer ID","ead65a58":"### Now the data should be called from the relevant Excel file, and because the data is in two Excel sheets, each sheet is assigned to a data frame","2a4871cc":"#  ","c5bb7c78":"### The percentage of customers who have purchased only once indicates a weakness in customer retention","8bec6daf":"### Now we should generate a new data frame which the rows with empty cells are removed","ec5fb7c1":"### It is inferred from the chart above that more customers can be attracted later in the year, especially in October and November","701360a1":"### In the following, by analyzing Pareto on the frequency of purchase of each stock code, the stock codes that are more important will be  selected","f6b4f657":"### Add a description of each stock code and find out which stock codes are most important to our customers who purchase only once and these stock codes can be used to increase the attraction and loyalty of customers","2f40a01a":"We get the dimensions of the data frame","cac7726e":"### The table below shows customers who have purchased only once","232bc320":"The following command gives you a brief overview of the data frame","6e146ab9":"## FINISH","625dba66":"This Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01\/12\/2009 and 09\/12\/2011.The company mainly sells unique all-occasion gift-ware. Many customers of the company are wholesalers. The dataset is available at <a href=\"https:\/\/archive.ics.uci.edu\/ml\/datasets\/Online+Retail+II\">UCI datasets<\/a>.<br\/>","8e6f3200":"We find out that the difference between the number of customers who purchased only once was much greater than the number of customers who purchased more than once","0cd47cca":"In the following line, the duplicate invoices are removed in order to obtain a table for extract frequency of purchases","4d362ecf":"# Investigating customer attraction and customer retention opportunities based on transactional data","22b1323c":"Add the revenue column to the table","1ab2a7ef":"### As a result, the products listed below should be focused on attracting and retaining customers","d7cfb71d":"### First, the libraries required for this project are imported"}}