{"cell_type":{"60be230b":"code","9df11a89":"code","471fa604":"code","d12db44a":"code","248023bc":"code","e198203c":"code","5c6e2653":"code","246dd1df":"code","571e3e4b":"code","5bae3186":"code","c04f8221":"code","47544376":"code","be5f4d86":"code","8f6a6099":"code","c28f08d4":"code","a9c81c6f":"code","608b138e":"code","579edc63":"markdown","61db21a3":"markdown","c9f8f51d":"markdown","b43ff951":"markdown","904d99a3":"markdown","4e36ac38":"markdown"},"source":{"60be230b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9df11a89":"import sys","471fa604":"verse = pd.read_csv('..\/input\/genome-data-of-a-khazar-origin\/snp2graph_edges_stw.csv', \n                 sep =' ', names = ['source','target','abs_z'])","d12db44a":"verse.head()","248023bc":"!test -d verse || git clone https:\/\/github.com\/xgfs\/verse.git\nif not 'verse' in sys.path:\n  sys.path += ['verse']\n!ls verse","e198203c":"!cd .\/verse\/src && make","5c6e2653":"csv_file = '..\/input\/genome-data-of-a-khazar-origin\/snp2graph_edges_stw.csv'\nbcsr_file = '\/kaggle\/working\/snp2graph_edges_stw.bcsr'\nbin_file = '\/kaggle\/working\/snp2graph_edges_stw.bin'\n!python .\/verse\/python\/convert.py --format weighted_edgelist --undirected {csv_file} {bcsr_file}","246dd1df":"!.\/verse\/src\/verse -input\\\n    {bcsr_file}\\\n    -dim 128 -threads 2 -seed 123 -output\\\n    {bin_file}","571e3e4b":"bin_file = '..\/input\/genome-data-of-a-khazar-origin\/snp2graph_edges_stw.bin'\nverse_embeddings = np.fromfile(bin_file, np.float32)\nverse_embeddings = verse_embeddings.reshape (int(verse_embeddings.shape[0] \/ 128), 128)","5bae3186":"verse_embeddings.shape","c04f8221":"nodes = pd.read_csv('..\/input\/genome-data-of-a-khazar-origin\/khazar_nodes.csv')","47544376":"nodes.head()","be5f4d86":"nodes_dict = nodes.to_dict('index')","8f6a6099":"edges = pd.read_csv('..\/input\/genome-data-of-a-khazar-origin\/snp2graph.csv')","c28f08d4":"added_columns =[\n                'p_source', 'p_target', \n                'locus_id_source', 'variant_source', 'locus_id_target', 'variant_target', \n                'chrom_source', 'pos_source', 'chrom_target', 'pos_target', \n                'FC_source', 'FC_target',\n                'gene_name_source', 'gene_name_target',\n                'gene_description_source', 'gene_description_target',\n                'gene_id_source', 'gene_id_target',\n                'snp_id_source', 'snp_id_target',\n                'alfa_sample_size_source', 'alfa_freq_source',\n                'alfa_sample_size_target', 'alfa_freq_target'\n                ]\n","a9c81c6f":"%%time\nedges[added_columns] = edges.apply(lambda r: [\n    nodes_dict[r[0]]['frequency'], nodes_dict[r[1]]['frequency'],\n    nodes_dict[r[0]]['locus'], nodes_dict[r[0]]['variant'], nodes_dict[r[1]]['locus'], nodes_dict[r[1]]['variant'],\n    nodes_dict[r[0]]['chrom'], nodes_dict[r[0]]['position'], nodes_dict[r[1]]['chrom'], nodes_dict[r[1]]['position'],\n    nodes_dict[r[0]]['FC'], nodes_dict[r[1]]['FC'],\n    nodes_dict[r[0]]['gene_name'], nodes_dict[r[1]]['gene_name'],\n    nodes_dict[r[0]]['gene_description'], nodes_dict[r[1]]['gene_description'],\n    nodes_dict[r[0]]['gene_id'], nodes_dict[r[1]]['gene_id'],\n    nodes_dict[r[0]]['snp_id'], nodes_dict[r[1]]['snp_id'],\n    nodes_dict[r[0]]['alfa_sample_size'], nodes_dict[r[0]]['alfa_freq'], nodes_dict[r[1]]['alfa_sample_size'], nodes_dict[r[1]]['alfa_freq']\n                                        ], axis=1, result_type=\"expand\")","608b138e":"edges.head()","579edc63":"snp2graph_full.csv \u0431\u043e\u043b\u0435\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0442\u0435\u0445 \u043a\u0442\u043e \u0445\u043e\u0447\u0435\u0442 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u0432 \u043a\u0443\u0440\u0441\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u0438\u043b\u0441\u044f \u0433\u0440\u0430\u0444.\n\nsource - \u043e\u043f\u043e\u0440\u043d\u044b\u0439 \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442 (id)\n\ntarget - \u043f\u0430\u0440\u043d\u044b\u0439 \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442 (id)\n\nweight - \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u0430\u044f \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u043e\u0438\u0445 \u043b\u043e\u043a\u0443\u0441\u043e\u0432\n\nphase - \u0444\u0430\u0437\u0430 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0440\u0435\u0431\u0440\u0430\n\nzmax - \u0432\u044b\u0431\u043e\u0440 \u043b\u043e\u043a\u0443\u0441\u0430 \u043f\u043e zmax = 1 \u0438\u043b\u0438 zmin \n\np_source, p_target - \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u043b\u043e\u043a\u0443\u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\n\nzref - z-score \u0434\u043b\u044f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u043f\u043e\u0440\u043d\u044b\u0439 -> \u043f\u0430\u0440\u043d\u044b\u0439\n\nzalt - z-score \u0434\u043b\u044f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043d\u044b\u0439 -> \u043e\u043f\u043e\u0440\u043d\u044b\u0439\n\nzref_abs - abs(zref)\n\nlocus_id_source, locus_id_target - id \u0441\u043d\u0438\u043f\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u0431\u0430\u0437\u0435 [ncbi](https:\/\/www.ncbi.nlm.nih.gov\/)\n\nvariant_source, variant_target - ref\/alt \u0441\u043d\u0438\u043f\u0430\n\nchrom_source, chrom_target - \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u0445\u0440\u043e\u043c\u043e\u0441\u043e\u043c\u0435 \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442\n\npos_source, pos_target - \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432 \u0445\u0440\u043e\u043c\u043e\u0441\u043e\u043c\u0435 \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442\n\nFC_source, FC_target - Functional Consequence ([\u0418\u043d\u0442\u0440\u043e\u043d](https:\/\/ru.wikipedia.org\/wiki\/%D0%98%D0%BD%D1%82%D1%80%D0%BE%D0%BD)\/[\u042d\u043a\u0437\u043e\u043d](https:\/\/ru.wikipedia.org\/wiki\/%D0%AD%D0%BA%D0%B7%D0%BE%D0%BD))\n\ngene_name_source, gene_name_target - \u0432 \u043a\u0430\u043a\u043e\u043c \u0433\u0435\u043d\u0435 snp \n\ngene_description_source, gene_description_target - \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0433\u0435\u043d\u0430 \u043e\u0442 [ncbi](https:\/\/www.ncbi.nlm.nih.gov\/), \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c\n\ngene_id_source, gene_id_target - id \u0433\u0435\u043d\u0430 \u0432 [ncbi](https:\/\/www.ncbi.nlm.nih.gov\/)\n\nsnp_id_source, snp_id_target - id snp \u0432 [ncbi](https:\/\/www.ncbi.nlm.nih.gov\/)\n\nalfa_sample_size_source, alfa_sample_size_target - \u0412\u044b\u0431\u043e\u0440\u043a\u0430 ALFA. The ALFA project provide aggregate allele frequency from dbGaP. More information is available on the project [page](https:\/\/www.ncbi.nlm.nih.gov\/snp\/docs\/gsr\/alfa\/) including descriptions, data access, and terms of use.\n\nalfa_freq_source, alfa_freq_target - \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u0440\u0435\u0444\u0435\u0440\u0435\u043d\u0441\u043d\u043e\u0433\u043e \u0430\u043b\u043b\u0435\u043b\u044f \u043f\u043e ALFA.","61db21a3":"<img src=\"https:\/\/i.gifer.com\/embedded\/download\/MQG7.gif\" width=\"640\" height=\"280\">","c9f8f51d":"khazar_nodes.csv \u0444\u0438\u0447\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0433\u0440\u0430\u0444\u0430\n\nid - id \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u0432 \u0433\u0440\u0430\u0444\u0435\n\nfrequency - \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u043b\u043e\u043a\u0443\u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\n\nlocus  id \u0441\u043d\u0438\u043f\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u0431\u0430\u0437\u0435 ncbi\n\nvariant\t- ref\/alt \u0441\u043d\u0438\u043f\u0430\n\nchrom - \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u0445\u0440\u043e\u043c\u043e\u0441\u043e\u043c\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442\n\nposition - \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432 \u0445\u0440\u043e\u043c\u043e\u0441\u043e\u043c\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442\n\nsnp_id - id snp \u0432 [ncbi](https:\/\/www.ncbi.nlm.nih.gov\/)\n\ngene_name - \u0432 \u043a\u0430\u043a\u043e\u043c \u0433\u0435\u043d\u0435 snp\n\nalfa_sample_size - \u0412\u044b\u0431\u043e\u0440\u043a\u0430 ALFA. The ALFA project provide aggregate allele frequency from dbGaP. More information is available on the project [page](https:\/\/www.ncbi.nlm.nih.gov\/snp\/docs\/gsr\/alfa\/) including descriptions, data access, and terms of use.\n\nalfa_freq - \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u0440\u0435\u0444\u0435\u0440\u0435\u043d\u0441\u043d\u043e\u0433\u043e \u0430\u043b\u043b\u0435\u043b\u044f \u043f\u043e ALFA.\n\nFC - Functional Consequence ([\u0418\u043d\u0442\u0440\u043e\u043d](https:\/\/ru.wikipedia.org\/wiki\/%D0%98%D0%BD%D1%82%D1%80%D0%BE%D0%BD)\/[\u042d\u043a\u0437\u043e\u043d](https:\/\/ru.wikipedia.org\/wiki\/%D0%AD%D0%BA%D0%B7%D0%BE%D0%BD))\n\ngene_description - \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0433\u0435\u043d\u0430 \u043e\u0442 [ncbi](https:\/\/www.ncbi.nlm.nih.gov\/), \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c.","b43ff951":"<img src=\"https:\/\/i.gifer.com\/4Ok8.gif\" width=\"640\" height=\"280\">","904d99a3":"snp2graph_edges_stw.csv \u0444\u0430\u0439\u043b \u0441 \u0440\u0435\u0431\u0440\u0430\u043c\u0438 \u0438 \u0432\u0435\u0441\u0430\u043c\u0438, \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u043e\u0432 \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0434\u043b\u044f VERSE.\n\nsource - \u043e\u043f\u043e\u0440\u043d\u044b\u0439 \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442 (id)\n\ntarget - \u043f\u0430\u0440\u043d\u044b\u0439 \u043b\u043e\u043a\u0443\u0441-\u0432\u0430\u0440\u0438\u0430\u043d\u0442 (id)\n\nweight - abs(z-score)","4e36ac38":"<img src=\"https:\/\/i.gifer.com\/embedded\/download\/WvLU.gif\" width=\"640\" height=\"280\">"}}