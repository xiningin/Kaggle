{"cell_type":{"e8b3da1c":"code","f434a884":"code","c4947ece":"code","edaf3198":"code","ae020e07":"code","7ed087bf":"code","4042429f":"code","be28a249":"code","57510787":"code","0df3cd2a":"code","0d476851":"code","8abe7fdb":"code","fad9c2c3":"code","77a68267":"code","3dd70443":"code","81d3d924":"code","041992a7":"code","e985cc63":"code","6a8e8543":"code","1952cc29":"code","48c9e69f":"code","7ba1f1c6":"code","7a0f8cfb":"code","e8390ce8":"code","c3818217":"code","1da55d8b":"code","601657d9":"code","44657a8c":"code","0e482d83":"markdown","50013ba3":"markdown","34de2bce":"markdown","771da0bc":"markdown","2d10a9ab":"markdown","f1a2f70c":"markdown","a18b2a08":"markdown","9bad9476":"markdown","ad4983a7":"markdown","a824e524":"markdown","9d02d61c":"markdown","908da2ca":"markdown","f8732781":"markdown","7c91a5f1":"markdown"},"source":{"e8b3da1c":"import pandas as pd\nimport numpy as nm\nimport matplotlib as plt\nimport warnings\n\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib import pyplot\nimport seaborn as sns\n%matplotlib inline ","f434a884":"warnings.filterwarnings(\"ignore\")","c4947ece":"titan_ds = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntitan_ds.head()","edaf3198":"titan_ds.shape","ae020e07":"titan_ds.dtypes","7ed087bf":"titan_ds.columns","4042429f":"pd.value_counts(titan_ds['Survived'])","be28a249":"#replace the nans and nulls with median\nmedian = round(titan_ds['Age'].median())\ntitan_ds['Age'] = titan_ds['Age'].fillna(value=median)\n#Fill the cabin data in binary\ntitan_ds['Cabin'] = titan_ds[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)\n#Fill the Sex data in binary\ntitan_ds['Sex'] = titan_ds['Sex'].apply(lambda x : 0 if x=='male' else 1)\ntitan_ds['FamilySize']=titan_ds['SibSp'] + titan_ds['Parch'] + 1\n#create a new column for 'is_Alone' and fill if travelled alone. \ntitan_ds['Is_Alone'] =titan_ds['FamilySize']==1\ntitan_ds['Is_Alone'] = titan_ds['Is_Alone'].apply(lambda x: 1 if x==1 else 0)","57510787":"#Drop not required variables\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Embarked']\ntitan_ds = titan_ds.drop(drop_elements, axis = 1)","0df3cd2a":"pd.value_counts(titan_ds['Sex'])","0d476851":"print('missing values ',titan_ds.isna().sum())\nprint('missing values ',titan_ds.isnull().sum())","8abe7fdb":"titan_ds.columns","fad9c2c3":"len(titan_ds[(titan_ds['Is_Alone'] == 1 ) & (titan_ds['Survived'] == 1)])\/ len(titan_ds[(titan_ds['Is_Alone'] == 1 )])","77a68267":"len(titan_ds[(titan_ds['Is_Alone'] != 1 ) & (titan_ds['Survived'] == 1) ])\/ len(titan_ds[(titan_ds['Is_Alone'] != 1 )])","3dd70443":"len(titan_ds[ (titan_ds['Survived'] == 1) & (titan_ds['Sex'] == 1)])\/ len(titan_ds[ (titan_ds['Sex'] == 1)])","81d3d924":"len(titan_ds[(titan_ds['Is_Alone'] == 1 ) & (titan_ds['Survived'] == 1) & (titan_ds['Sex'] == 1)])\/ len(titan_ds[(titan_ds['Sex'] == 1) & (titan_ds['Is_Alone'] == 1 )])","041992a7":"len(titan_ds[(titan_ds['Is_Alone'] != 1 ) & (titan_ds['Survived'] == 1) & (titan_ds['Sex'] == 1)])\/ len(titan_ds[(titan_ds['Sex'] == 1) & (titan_ds['Is_Alone'] != 1 )])","e985cc63":"##We could imagine women are \nlen(titan_ds[(titan_ds['Is_Alone'] != 1 ) & (titan_ds['Survived'] == 1) & (titan_ds['Sex'] == 0)])\/ len(titan_ds[(titan_ds['Sex'] == 0) & (titan_ds['Is_Alone'] != 1 )])","6a8e8543":"##We could imagine women are \nlen(titan_ds[(titan_ds['Is_Alone'] == 1 ) & (titan_ds['Survived'] == 1) & (titan_ds['Sex'] == 0)])\/ len(titan_ds[(titan_ds['Sex'] == 0) & (titan_ds['Is_Alone'] == 1 )])","1952cc29":"plt.figure(figsize=(10,6))\nax=sns.boxplot('Sex','FamilySize',data=titan_ds,hue='Survived')\nax.set(xticklabels=['Male','Female']);","48c9e69f":"ax=sns.factorplot('Sex','FamilySize',data=titan_ds,hue='Survived')\nax.set(xticklabels=['Male','Female']);","7ba1f1c6":"sns.stripplot(titan_ds['Survived'],titan_ds['Age']);","7a0f8cfb":"sns.swarmplot(titan_ds['Survived'],titan_ds['Age']);","e8390ce8":"plt.figure(figsize=(10,5))\nsns.heatmap(titan_ds.corr(), cmap='YlGnBu', annot=True)\nplt.title(\"Titan survival heatmap\")\nplt.show();","c3818217":"# To calculate the accuracy score of the model\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.svm import SVC\nimport numpy as np\n\n\n#Get x and Y\nX_train,y_train = np.array(titan_ds)[ :, 2:9], np.array(titan_ds.Survived)[:]\n\n# Building a Support Vector Machine on train data\nsvc_model = SVC(kernel='linear')\nsvc_model.fit(X_train, y_train)\n","1da55d8b":"print(svc_model.score(X_train, y_train))","601657d9":"titan_test_ds= pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\npassenger_ids= titan_test_ds['PassengerId']\npassenger_ids = passenger_ids.dropna()\n\n#replace the nans and nulls with median\nmedian = round(titan_test_ds['Age'].median())\ntitan_test_ds['Age'] = titan_test_ds['Age'].fillna(value=median)\n\ntitan_test_ds['Fare'] = titan_test_ds['Fare'].fillna(value=median)\n#Fill the cabin data in binary\ntitan_test_ds['Cabin'] = titan_test_ds[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)\n#Fill the Sex data in binary\ntitan_test_ds['Sex'] = titan_test_ds['Sex'].apply(lambda x : 0 if x=='male' else 1)\ntitan_test_ds['FamilySize']=titan_test_ds['SibSp'] + titan_test_ds['Parch'] + 1\n#create a new column for 'is_Alone' and fill if travelled alone. \ntitan_test_ds['Is_Alone'] =titan_test_ds['FamilySize']==1\ntitan_test_ds['Is_Alone'] = titan_test_ds['Is_Alone'].apply(lambda x: 1 if x==1 else 0)\n#Drop not required variables\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Embarked']\ntitan_test_ds = titan_test_ds.drop(drop_elements, axis = 1)","44657a8c":"predictions = svc_model.predict(titan_test_ds.iloc[:,1:])\noutput = pd.DataFrame({'PassengerId': passenger_ids, 'Survived': predictions})\noutput.to_csv('titanic_prediction.csv', index=False)","0e482d83":"#### Survival percentage of lone travellers:","50013ba3":"### Let's verify the above throough correlation matrix. Does ticket price played any role? Looks like NO.","34de2bce":"Same cleanup like train data. I am lazy to not write a funcion :)","771da0bc":"# Titanic Survival DS, Prediction by Support Vector Machine","2d10a9ab":"#### Worst victims are among lone Male passengers","f1a2f70c":"### Does Age also played a factor of survival? Looks like to some extend. Survival rate is grim beyond 65s and beyond.","a18b2a08":"#### Survival percentage of travel with partners:","9bad9476":"# Verdict\n### Our predicted score is 78%.\n## Take Away:\n### Using Support Vector Machine as a regression is good if you have multi colinearity dependent variables. As you can see there are features such age and sex. Where I felt like a conditional probability which increases chances of survival. So if you have features with multi colinearity and sparse data, Better to go with SVM. We've to improve by using better algos such as Random Forest or Ensamble techniques I think. Please do let's know if this was helpful.","ad4983a7":"# Some Graphics now to proove the above numbers. \n### The Box plot reveals Being Male is not so lucky one in Titanic. \n### It does not matter even if you have a big family some times. ","a824e524":"### Why you should not travel Alone? Looks like there is 60% more chances of survival if you go with your family!","9d02d61c":"#### Check the accuracy on the training set.","908da2ca":"### Time to Test our SVM model and predict the target variable.","f8732781":"### Time to Train our SVM model.  Linear Kernel with default c and default gamma","7c91a5f1":"### Being Female, does they have more chance of survival? Looks like yes."}}