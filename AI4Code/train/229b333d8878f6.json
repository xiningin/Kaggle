{"cell_type":{"912a1a0b":"code","4277db92":"code","04eacfdb":"code","44560b1c":"code","599daedf":"code","caeaf933":"code","0f1c89c1":"markdown","07a88d13":"markdown"},"source":{"912a1a0b":"from nltk.corpus import stopwords \nfrom collections import Counter \nimport pandas as pd \nimport string \n\nstopwords = stopwords.words('english') \npunc = string.punctuation\n\ndef clean_text(x):\n    x = x.lower()\n    x = \"\".join(_ for _ in x if _ not in punc)\n    x = [_ for _ in x.split() if _ not in stopwords]\n    x = \" \".join(x)\n    return x\n\n\ndf = pd.read_csv(\"..\/input\/5minute-crafts-video-views-dataset\/5-Minute Crafts.csv\")\ndf['clean_text'] = df['title'].apply(lambda x : clean_text(x))\ndf.head()","4277db92":"import numpy as np \nfrom PIL import Image \nimport matplotlib.pyplot as plt \nfrom wordcloud import WordCloud, ImageColorGenerator\n\ndef plot_wordcloud(text, mask=None, max_words=400, max_font_size=120, figure_size=(24.0,16.0), \n                   title = None, title_size=40, image_color=False):\n\n    wordcloud = WordCloud(background_color='white',\n                    stopwords = stopwords,\n                    max_words = max_words,\n                    max_font_size = max_font_size, \n                    random_state = 42,\n                    mask = mask)\n    wordcloud.generate(text)\n    \n    plt.figure(figsize=figure_size)\n    if image_color:\n        image_colors = ImageColorGenerator(mask);\n        plt.imshow(wordcloud.recolor(color_func=image_colors), interpolation=\"bilinear\");\n        plt.title(title, fontdict={'size': title_size,  \n                                  'verticalalignment': 'bottom'})\n    else:\n        plt.imshow(wordcloud);\n        plt.title(title, fontdict={'size': title_size, 'color': 'green', \n                                  'verticalalignment': 'bottom'})\n    plt.axis('off');\n    plt.tight_layout()  \n    \nd = '..\/input\/word-cloud-masks\/'\n\nk = 'hack'\nv = 'cloud1.png'\ndf['contain'] = df['title'].apply(lambda x : 1 if k in x.lower() else 0)\nsmall = df[df['contain'] == 1] \nupvote_mask = np.array(Image.open(d + v))\nplot_wordcloud(\" \".join(small['clean_text']), upvote_mask, max_words=1000, max_font_size=300, title = 'Keywords used along with ' + k)\n","04eacfdb":"k = 'beauty'\nv = '..\/input\/masks\/loc.png'\ndf['contain'] = df['title'].apply(lambda x : 1 if k in x.lower() else 0)\nsmall = df[df['contain'] == 1] \nupvote_mask = np.array(Image.open(v))\nplot_wordcloud(\" \".join(small['clean_text']), upvote_mask, max_words=1000, max_font_size=300, title = 'Keywords used along with ' + k)","44560b1c":"k = 'diy'\nv = '..\/input\/masks\/upvote.png'\ndf['contain'] = df['title'].apply(lambda x : 1 if k in x.lower() else 0)\nsmall = df[df['contain'] == 1] \nupvote_mask = np.array(Image.open( v))\nplot_wordcloud(\" \".join(small['clean_text']), upvote_mask, max_words=1000, max_font_size=300, title = 'Keywords used along with ' + k)","599daedf":"k = 'tips'\nv = '..\/input\/masks\/star.png'\ndf['contain'] = df['title'].apply(lambda x : 1 if k in x.lower() else 0)\nsmall = df[df['contain'] == 1] \nupvote_mask = np.array(Image.open( v))\nplot_wordcloud(\" \".join(small['clean_text']), upvote_mask, max_words=1000, max_font_size=300, title = 'Keywords used along with ' + k)","caeaf933":"k = 'tricks'\nv = '..\/input\/masks\/comment.png'\ndf['contain'] = df['title'].apply(lambda x : 1 if k in x.lower() else 0)\nsmall = df[df['contain'] == 1] \nupvote_mask = np.array(Image.open(v))\nplot_wordcloud(\" \".join(small['clean_text']), upvote_mask, max_words=1000, max_font_size=300, title = 'Keywords used along with ' + k)","0f1c89c1":"## Clickbait Headings - Keyword Wordclouds \n\n# Dataset Used: [5-Minute Crafts: Video Clickbait Titles?](https:\/\/www.kaggle.com\/shivamb\/5minute-crafts-video-views-dataset)\n","07a88d13":"Thanks, feel free to checkout the dataset : \n    \n# Dataset Used: [5-Minute Crafts: Video Clickbait Titles?](https:\/\/www.kaggle.com\/shivamb\/5minute-crafts-video-views-dataset)\n"}}