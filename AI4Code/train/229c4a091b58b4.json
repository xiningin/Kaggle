{"cell_type":{"9c8ccf2f":"code","e0db5aae":"code","66b25fb6":"code","21926d76":"code","5632c480":"code","4a1e0de1":"code","c39d816d":"code","6062275b":"code","7ca3bf1f":"code","6c8dbb6e":"code","bc3a1f4e":"code","f4c4cca6":"code","ede6e5fd":"code","9f746668":"code","30941094":"code","a7be3746":"code","592ff692":"code","d7de8053":"code","29ef2d1c":"code","d4e4081e":"code","08cdb61e":"code","3f462b0b":"code","e0df8328":"code","2e9a494b":"code","00a967cf":"code","4cdd465e":"code","905ffd03":"code","ebb7f539":"code","d613fa20":"code","c459bab1":"code","9782b6a2":"code","c403594a":"code","7d097f86":"code","0dcc2e5c":"code","0236cbc2":"code","e91e8a6d":"code","97d2bd43":"code","dda772ac":"code","612a1073":"markdown","9b599390":"markdown","2eecc430":"markdown","52e5fa17":"markdown","5f0d52e0":"markdown","5885b448":"markdown","dce6aa15":"markdown","8275b313":"markdown","af425b77":"markdown","b21e9aaf":"markdown","9145fe8f":"markdown","b2988685":"markdown","1c9c99be":"markdown","c1f31f03":"markdown","f9e43311":"markdown","302bc6a6":"markdown","92e4e88a":"markdown"},"source":{"9c8ccf2f":"# Import important libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e0db5aae":"# Load our data\ntrending= pd.read_csv('..\/input\/youtube-trending-video-dataset\/US_youtube_trending_data.csv')","66b25fb6":"# Number of columns and rows\ntrending.shape","21926d76":"# Let's view the first 5 rows\ntrending.head(5)","5632c480":"# How many unique channels do we have in this dataset?\ntrending['channelTitle'].nunique()","4a1e0de1":"# Check for Null values\ntrending.isna().sum()","c39d816d":"# Imputing data. There are many ways to fill the missing data. For example filling the NAs with the most frequent value, \n# random values, etc.\ntrending.description= trending.description.fillna('No description provided')           ","6062275b":"# Make sure thre is no null data(We're good to go)\ntrending.isna().sum().sum()","7ca3bf1f":"# Let's do a regression plot to see the relarionship between views and likes\nsns.regplot(data=trending, x='view_count', y='likes', color='Red')\nplt.title('Regression plot for views and likes')","6c8dbb6e":"# Let's perform a regression plot to see the relarionship between views and dislikes\nsns.regplot(data=trending, x='view_count', y='dislikes', color= 'blue')\nplt.title('Regression plot for views and dislikes')","bc3a1f4e":"# Let's view our correlation table:likes, dislikes, views, and comments\ndf_corr= trending[['likes', 'dislikes', 'comment_count', 'view_count']]\ndf_corr.corr()","f4c4cca6":"sns.heatmap(df_corr.corr(), annot= True)","ede6e5fd":"# What are the video titles with most likes count\ntrending[['title', 'likes']].groupby('title').sum().sort_values(by= 'likes', ascending= False).head(5)","9f746668":"# What are the video titles with most dislikes count\ntrending[['title', 'dislikes']].groupby('title').sum().sort_values(by= 'dislikes', ascending= False).head(5)","30941094":"# What are the video titles with most comments count\ntrending[['title', 'comment_count']].groupby('title').sum().sort_values(by= 'comment_count',ascending= False ).head(5)","a7be3746":"# Display tags\ntrending.tags.head(10)","592ff692":"# Let's join tags to get all lines in just one string.\ntags_complete=''.join(trending.tags)","d7de8053":"# Display tags as one string\n# Rub this to see the result: tags_complete","29ef2d1c":"# Let's import regular expression module\nimport re","d4e4081e":"# Now we have to substitue any special character by a space.\ntags= re.sub('[^a-zA-Z]', ' ', tags_complete)","08cdb61e":"# Display tags\ntags;","3f462b0b":"tags= re.sub(' +', ' ', tags)","e0df8328":"# If you haven't installed wordcloud, please do so before you import the modules\nfrom wordcloud import WordCloud, STOPWORDS","2e9a494b":"# Stopwords are a set of words that we do not need to take in consideration in ou analysis. For example, \n# He, She, they.....\nwordcloud= WordCloud(width= 2000, height= 1000, stopwords= set(STOPWORDS)).generate(tags)","00a967cf":"# Visualize our word cloud\nplt.figure(figsize=(15,5))\nplt.imshow(wordcloud)\nplt.axis('off')","4cdd465e":"# Install Emoji library.\n#!pip install emoji","905ffd03":"# Import module emoji\nimport emoji","ebb7f539":"# Let's define a string \"str.\" We are creating a list for the emojis (if a character has a unicode then it will\n# be considered an emoji)\nstr=''\nfor i in trending.title:\n    list=[c for c in i if c in emoji.UNICODE_EMOJI]\n    for ele in list:\n        str= str+ele","d613fa20":"# How many emojis do we have in our dataset?\nlen(str)","c459bab1":"# This is how our str looks like\nstr","9782b6a2":"# Let's count the unique emojis\nresult={}\nfor i in set(str):\n    result[i]= str.count(i)","c403594a":"result.items()","7d097f86":"# I will define a dictionary final that has each imoji(key) and its count(value)\nfinal={}\nfor key, value in sorted(result.items(), key= lambda item:item[1]):\n    final[key]= value","0dcc2e5c":"# Display our final result\nfinal","0236cbc2":"# Now, we create a data frame for the top used 10 emojis\nkeys= [*final.keys()]\nvalues=[*final.values()]\ndf= pd.DataFrame(keys[-10:], values[-10:])","e91e8a6d":"df= pd.DataFrame({'chars': keys[-10:], 'num': values[-10]})","97d2bd43":"# Import libraries and modules\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot","dda772ac":"graph = go.Bar(\nx= df['chars'],\ny= df['num'])\niplot([graph] )\n# Hover over the bars to view the emojis along with the count","612a1073":"# The END","9b599390":"* **Youtube Trending Videos**\n![wa.jpg](attachment:wa.jpg)","2eecc430":"### Notice in the last result, we ended up with extra space, let's ask Python:'Hey Python, whenever you find extra space make it one space only. Thank you!'","52e5fa17":"#### Analyze trending tags","5f0d52e0":"This plot is showing a linear relationship between views and likes.","5885b448":"Notice a high correlation between views and likes. That makes sense!\npeople who like a video tend to leave a comment and vice versa. Howver people who dislike tend not to leave a comment or vice versa.","dce6aa15":"## Analyze views, likes, dislikes","8275b313":"There 245 missing description values","af425b77":"Compared to the first plot, the dislikes increase as the views increase, but not as much as the first plot. Notice the steeper line in the first graph.","b21e9aaf":"## Sentiment Analysis**","9145fe8f":"# Visulize my emojis","b2988685":"Keep in mind that each emoji has a unicode","1c9c99be":"The size of the wordcloud indiacates the significance of the tag. ","c1f31f03":"## Let's start","f9e43311":"### As you can see, we got some special charachters in our text. Ex: |, so the next step is to remove the special characters to end up with clean looking data","302bc6a6":"## Emoji Analysis","92e4e88a":"In this dataset, there are 2264 channels."}}