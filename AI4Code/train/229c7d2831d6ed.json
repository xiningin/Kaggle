{"cell_type":{"6bd914a2":"code","42d9c784":"code","b27b8069":"code","3d9324f3":"code","591dce0c":"code","66521ad0":"code","e515da2c":"code","ff581f13":"code","daa75c11":"code","5515d31d":"code","224b306b":"code","b16f97a4":"code","b71793d6":"code","f52f2b41":"markdown","362f75be":"markdown","8e06130c":"markdown","cd854632":"markdown","3cfb2141":"markdown","aacea5d3":"markdown","2fc03e59":"markdown","8c756183":"markdown","54e70e2e":"markdown"},"source":{"6bd914a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42d9c784":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","b27b8069":"df=pd.read_csv(\"\/kaggle\/input\/position-salary-dataset\/Position_Salaries.csv\")\ndf.head()","3d9324f3":"X = df.iloc[:, 1:-1].values\ny = df.iloc[:, -1].values","591dce0c":"print(X)","66521ad0":"print(y)","e515da2c":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(X, y)","ff581f13":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 4)\nX_poly = poly_reg.fit_transform(X)\nlin_reg_2 = LinearRegression()\nlin_reg_2.fit(X_poly, y)","daa75c11":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg.predict(X), color = 'blue')\nplt.title('Truth or Bluff (Linear Regression)')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')\nplt.show()","5515d31d":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","224b306b":"X_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, lin_reg_2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","b16f97a4":"lin_reg.predict([[6.5]])","b71793d6":"lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))","f52f2b41":"**VISUALISING POLYNOMIAL REGRESSION RESULT**","362f75be":"**TRAINING LINEAR REGRESSION MODEL ON THE DATASET**","8e06130c":"****Predicting a new result with Linear Regression****","cd854632":"**VISUALISING LINEAR REGRESSION RESULTS**","3cfb2141":"**Visualising the Polynomial Regression results (for higher resolution and smoother curve)**","aacea5d3":"**TRAINING THE POLYNOMIAL REGRESSION MODEL ON THE DATASET**","2fc03e59":"**Predicting a new result with Polynomial Regression**","8c756183":"**IMPORTING DATASET**","54e70e2e":"**IMPORTING LIBRARIES**"}}