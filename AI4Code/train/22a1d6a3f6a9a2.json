{"cell_type":{"ef052210":"code","d7888439":"code","8ed712a5":"code","fed46aff":"code","807ba9bf":"code","80031e74":"code","24287313":"code","4da75750":"code","4b855197":"code","9acbeb19":"code","163224f3":"code","4d88dafe":"code","5207ab20":"code","3fc3b430":"code","e5ec7b85":"code","7ab7a1d3":"code","9ce89759":"code","e350e95a":"code","608bea68":"code","7617b1cb":"code","1dbf3107":"code","1c89a54a":"code","47ec3643":"code","6ce57544":"code","1872a544":"code","79fe94e5":"code","260c7f3e":"code","df964724":"code","b712743b":"code","76faaf80":"code","2dd655c1":"code","5c50377d":"code","6cee12ff":"code","032f9af2":"code","77ccca5c":"code","b26824cd":"code","beb57bd8":"code","17435d3b":"code","5c79092d":"code","bfad8e82":"code","de392b22":"code","a74893bd":"code","7ad54578":"code","6a31fa6a":"code","9303ebc4":"code","9cda7454":"code","06c8a213":"code","e9486729":"code","e5cc4436":"code","32ab7047":"code","43dc92d7":"code","e0749829":"code","1530baff":"code","e2582d42":"code","181d19e8":"code","086c0ca6":"code","938da6bf":"code","91e80787":"code","3accbd7e":"code","fead2ace":"code","975ca905":"code","d1fb852b":"code","3fbc4350":"markdown","66963bab":"markdown","46ded9a3":"markdown","0956b01f":"markdown","e22530c8":"markdown","b0c1a03e":"markdown","415ac39f":"markdown","88cd563e":"markdown","8f522767":"markdown","7f4aced6":"markdown","bd429cb3":"markdown","384bc6ea":"markdown","e1e46394":"markdown","9f94a3fc":"markdown"},"source":{"ef052210":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d7888439":"import matplotlib.pyplot as plt\nimport seaborn as sns","8ed712a5":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","fed46aff":"train.head()","807ba9bf":"test.head()","80031e74":"train.info()","24287313":"test.info()","4da75750":"test.loc[test['Fare'].isnull(), 'Fare'] = train['Fare'].mean()","4b855197":"print (train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean())","9acbeb19":"print (train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean())","163224f3":"pd.crosstab([train.Sex,train.Survived],train.Pclass,margins=True).style.background_gradient(cmap='summer_r')","4d88dafe":"g = sns.FacetGrid(train, col='Survived')\ng = g.map(sns.distplot, \"Age\")","5207ab20":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot('Pclass','Age',hue='Survived',data=train,scale='count',split=True,ax=ax[0])\nax[0].set_title('Pclass & Age')\nax[0].set_yticks(range(0,110,10))\n\nsns.violinplot('Sex','Age',hue='Survived',data=train,scale='count',split=True,ax=ax[1])\nax[1].set_title('Sex & Age')\nax[1].set_yticks(range(0,110,10))\n\nplt.show()\n","3fc3b430":"f,ax=plt.subplots(1,1,figsize=(7,7))\ntrain[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_values(by='Survived',ascending=False).plot.bar(ax=ax)","e5ec7b85":"train[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_values(by='Survived')","7ab7a1d3":"f,ax=plt.subplots(2,2,figsize=(20,15))\nsns.countplot('Embarked',data=train,ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passengers Board')\n\n\nsns.countplot('Embarked', hue='Sex',data=train,ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female split for Embarked')\n\nsns.countplot('Embarked', hue='Survived',data=train,ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=train,ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\n\n#\uc0c1\ud558\uc88c\uc6b0\uac04\uaca9\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\n\nplt.show()","9ce89759":"train['Age'].isnull().sum()","e350e95a":"train['Embarked'].isnull().sum()","608bea68":"train['Embarked'].fillna('S',inplace=True)","7617b1cb":"train['Embarked'].isnull().sum()","1dbf3107":"train['Age'].mean()","1c89a54a":"train['first']=train['Name'].str.extract('([A-Za-z]+)\\.')\ntest['first']=test['Name'].str.extract('([A-Za-z]+)\\.')","47ec3643":"train['Name'].str.extract('([A-Za-z]+)\\.')\ntest['Name'].str.extract('([A-Za-z]+)\\.')","6ce57544":"pd.crosstab(train['first'],train['Sex']).T.style.background_gradient(cmap='summer_r')","1872a544":"train['first'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don','Dona'],\n                      ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr','Mr'],inplace=True)\ntest['first'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don','Dona'],\n                      ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr','Mr'],inplace=True)","79fe94e5":"train.groupby('first')['Survived'].mean().plot.bar()","260c7f3e":"train.groupby('first').mean()","df964724":"train.loc[(train['Age'].isnull())&(train['first']=='Master'),'Age']=7\ntrain.loc[(train['Age'].isnull())&(train['first']=='Miss'),'Age']=23\ntrain.loc[(train['Age'].isnull())&(train['first']=='Mr'),'Age']=32\ntrain.loc[(train['Age'].isnull())&(train['first']=='Mrs'),'Age']=35\ntrain.loc[(train['Age'].isnull())&(train['first']=='Other'),'Age']=46\n\ntest.loc[(test['Age'].isnull())&(test['first']=='Master'),'Age']=7\ntest.loc[(test['Age'].isnull())&(test['first']=='Miss'),'Age']=23\ntest.loc[(test['Age'].isnull())&(test['first']=='Mr'),'Age']=32\ntest.loc[(test['Age'].isnull())&(test['first']=='Mrs'),'Age']=35\ntest.loc[(test['Age'].isnull())&(test['first']=='Other'),'Age']=46","b712743b":"train['first'].unique()","76faaf80":"test['first'].unique()","2dd655c1":"def category_age(x):\n    if x<10:\n        return 0\n    elif x<20:\n        return 1\n    elif x<30:\n        return 2\n    elif x<40:\n        return 3\n    elif x<50:\n        return 4\n    elif x<60:\n        return 5\n    elif x<70:\n        return 6\n    else:\n        return 7","5c50377d":"train['Age_1']=train['Age'].apply(category_age)","6cee12ff":"test['Age_1']=test['Age'].apply(category_age)","032f9af2":"train.head()","77ccca5c":"train.drop(['Age'],axis=1,inplace=True)\ntest.drop(['Age'],axis=1,inplace=True)","b26824cd":"train['first']=train['first'].map({'Master':0,'Miss':1,'Mr':2,'Mrs':3,'Other':4})\ntest['first']=test['first'].map({'Master':0,'Miss':1,'Mr':2,'Mrs':3,'Other':4})","beb57bd8":"train['Embarked'].unique()","17435d3b":"train['Embarked'].value_counts()","5c79092d":"train['Embarked']=train['Embarked'].map({'C':0,'Q':1,'S':2})\ntest['Embarked']=test['Embarked'].map({'C':0,'Q':1,'S':2})","bfad8e82":"train['Embarked'].isnull().sum()","de392b22":"train['Sex'].unique()","a74893bd":"train['Sex']=train['Sex'].map({'female':0,'male':1})\ntest['Sex']=test['Sex'].map({'female':0,'male':1})","7ad54578":"heatmap_data=train[['Survived','Pclass','Sex','Fare','Embarked','first','Age_1']]","6a31fa6a":"colormap=plt.cm.Blues\nplt.figure(figsize=(10,8))\nplt.title('Person Correalation of Features',y=1.05,size=15)\nsns.heatmap(heatmap_data.astype(float).corr(),linewidths=0.1,vmax=1.0,\n           square=True,cmap=colormap,linecolor='white',annot=True)","9303ebc4":"train=pd.get_dummies(train,columns=['first'],prefix='first')\ntest=pd.get_dummies(test,columns=['first'],prefix='first')","9cda7454":"train=pd.get_dummies(train,columns=['Embarked'],prefix='Embarked')\ntest=pd.get_dummies(test,columns=['Embarked'],prefix='Embarked')","06c8a213":"train.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True)\ntest.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True)","e9486729":"train.head()","e5cc4436":"test.head()","32ab7047":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split ","43dc92d7":"X_train=train.drop('Survived',axis=1).values\ntarget_label=train['Survived'].values\nX_test=test.values","e0749829":"X_tr,X_te,y_tr,y_te=train_test_split(X_train,target_label,test_size=0.3,random_state=2018)","1530baff":"model=RandomForestClassifier(n_estimators=200,\n                             max_features=4,\n                             oob_score=True)\nmodel.fit(X_tr,y_tr)","e2582d42":"prediction=model.predict(X_te)","181d19e8":"model.score(X_te,y_te)","086c0ca6":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report","938da6bf":"print(\"Accuracy is :\", accuracy_score(prediction, y_te))\nprint(classification_report(prediction, y_te))","91e80787":"test.head()","3accbd7e":"train.head()","fead2ace":"submission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","975ca905":"prediction=model.predict(X_test)\nsubmission['Survived'] = prediction","d1fb852b":"submission.to_csv('.\/titanic_naa_submission.csv',index=False)","3fbc4350":"1\ub4f1\uae09 \uac1d\uc2e4 62% \uc0dd\uc874 2\ub4f1\uae09 47% 3\ub4f1\uae09 24% \uc0dd\uc874","66963bab":"## Random Forest","46ded9a3":"## 2. Pclass","0956b01f":"str.extract() \uc6d0\ud558\ub294 \ubb38\uc790\uc5f4 \ucd94\ucd9c  Mr. Mrs. \ub4f1\uc744 \ucc3e\uae30 \uc704\ud574\uc11c!","e22530c8":"## 3. Age","b0c1a03e":"## 6.Feature Engineering","415ac39f":"1\ub4f1\uae09 \uac1d\uc2e4\uc758 \uc5ec\uc131\uc0dd\uc874\uc790\uac00 \uac00\uc7a5 \ub9ce\uace0 3\ub4f1\uae09\uac1d\uc2e4\uc758 \ub0a8\uc131\uc0ac\ub9dd\uc790\uac00 \uc81c\uc77c \ub9ce\ub2e4","88cd563e":"## 5. Embarked","8f522767":"## 1. Sex","7f4aced6":"## One-hot encoding","bd429cb3":"Age, Cabin, Embarked \uc5d0 NULL\uac12\uc774 \uc788\ub2e4 \n\ub2e4\ub978 Column \uac12\ub4e4\uc740 Non-NULL \uac1c\uc218\uac00 891","384bc6ea":"\uc5ec\uc790\ub294 74% \uc0dd\uc874\n\ub0a8\uc790\ub294 18% \uc0dd\uc874","e1e46394":"## 4.Pclass,Sex,Age","9f94a3fc":"test\uc758 \ud55c \uc2b9\uac1d\uc758 Fare \uac00 NaN\uc73c\ub85c \uc8fc\uc5b4\uc838 \uc788\uc5b4\uc11c \ub9e8 \ub4b7\ubd80\ubd84\uc5d0 \uc5d0\ub7ec\uac00 \uc0dd\uae40 "}}