{"cell_type":{"37df347e":"code","0078e135":"code","55319fa2":"code","5a1c54f9":"code","25997e0c":"code","c26d2829":"code","521e4f68":"code","6002225e":"code","58a5ac74":"code","ec8c7349":"code","a76f4250":"code","c9dae69b":"code","f8f9d62b":"code","79963b5e":"code","a4ce3ae0":"code","9c400618":"code","f1a2d743":"code","f00a0469":"code","1a2ade2f":"code","c4f4db98":"markdown","73c8324f":"markdown","881a785c":"markdown","6bab3604":"markdown","45e514a2":"markdown","f2916d15":"markdown","fde5aa7c":"markdown","904c1211":"markdown"},"source":{"37df347e":"pip install sktime","0078e135":"import numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot as pp\n%matplotlib inline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom xgboost import XGBRegressor\nfrom sktime.forecasting.compose import ReducedRegressionForecaster\nfrom sktime.forecasting.model_selection import temporal_train_test_split\nfrom sktime.performance_metrics.forecasting import smape_loss\nfrom sktime.utils.plotting.forecasting import plot_ys\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","55319fa2":"covid_ng = pd.read_csv('\/kaggle\/input\/statistic_id1110871_coronavirus--covid-19--daily-cases-in-nigeria-as-of-july-20-2020.csv')\ncovid_ng.head()","5a1c54f9":"covid_ng = covid_ng.dropna()\ncovid_ng.reset_index(drop = True, inplace = True)\ncovid_ng","25997e0c":"covid_ng.columns","c26d2829":"covid_ng = covid_ng.rename(columns = {'Coronavirus (COVID-19) daily cases in Nigeria as of July 20, 2020': 'Date',\n                          'Unnamed: 1': 'Daily Cases'})\ncovid_ng.head()","521e4f68":"pp.figure(figsize = (12, 10.5))\npp.bar(covid_ng['Date'][-10:], covid_ng['Daily Cases'][-10:])\npp.title('Covid-19 Daily Cases over the last 10 days')\npp.xlabel('Date')\npp.ylabel('Daily Cases')","6002225e":"y = covid_ng['Daily Cases']\ny_train, y_test = temporal_train_test_split(y)\ny_test","58a5ac74":"covid_ng['Date'][108]","ec8c7349":"fh = np.arange(1, len(y_test) + 1)\nfh","a76f4250":"model = RandomForestRegressor(random_state = 0)\nd_tree = DecisionTreeRegressor(random_state = 0)\nxgbr = XGBRegressor(random_state = 0)\n\nlisty = [model, d_tree, xgbr]\n\nfor i in listy:\n    forecaster = ReducedRegressionForecaster(i, window_length = 12)\n    forecaster.fit(y_train)\n    y_preds = forecaster.predict(fh)\n    error = smape_loss(y_test, y_preds)\n    print('For the {} model, the smape loss is {}'.format(i, error))","c9dae69b":"model = RandomForestRegressor(random_state = 0)\nfor i in range(6,12,1):\n    forecaster = ReducedRegressionForecaster(model, window_length = i)\n    forecaster.fit(y_train)\n    y_preds = forecaster.predict(fh)\n    error = smape_loss(y_test, y_preds)\n    print('For the {} window length, the smape loss is {}'.format(i, error))","f8f9d62b":"for i in range(50, 500+1, 50):\n    model = RandomForestRegressor(n_estimators = i, random_state = 0)\n    forecaster = ReducedRegressionForecaster(model, window_length = 10)\n    forecaster.fit(y_train)\n    y_preds = forecaster.predict(fh)\n    error = smape_loss(y_test, y_preds)\n    print('For the {} estimators, the smape loss is {}'.format(i, error))","79963b5e":"for i in range(1, 20+1, 1):\n    model = RandomForestRegressor(n_estimators = 50, max_depth = i, random_state = 0)\n    forecaster = ReducedRegressionForecaster(model, window_length = 10)\n    forecaster.fit(y_train)\n    y_preds = forecaster.predict(fh)\n    error = smape_loss(y_test, y_preds)\n    print('For the {} estimators, the smape loss is {}'.format(i, error))","a4ce3ae0":"model = RandomForestRegressor(n_estimators = 50, max_depth = 13, random_state = 0)\nforecaster = ReducedRegressionForecaster(model, window_length = 10)\nforecaster.fit(y_train)\ny_preds = forecaster.predict(fh)\nsmape_loss(y_test, y_preds)","9c400618":"y_preds","f1a2d743":"plot_ys(y_train, y_test, y_preds, labels=[\"y_train\", \"y_test\", \"y_pred\"])","f00a0469":"covid_ng['Total Covid-19 Cases'] = covid_ng['Daily Cases'].cumsum()\ncovid_ng.head()","1a2ade2f":"pp.figure(figsize = (12, 10.5))\npp.plot(covid_ng['Date'][-10:], covid_ng['Total Covid-19 Cases'][-10:])\npp.title('Covid-19 Curve from July 1th to July 20th')\npp.xlabel('Date')\npp.ylabel('Total Covid-19 Cases')","c4f4db98":"# Evaluating the chosen model's parameters","73c8324f":"# Importing the necessary libraries","881a785c":"# Using Reduced Regression for time-series forecasting and evaluating different models","6bab3604":"# Extra Analysis","45e514a2":"# Visualizing predictions alongside actual value","f2916d15":"# Data cleaning and exploration","fde5aa7c":"# Setting the forecasting horizon","904c1211":"# Let's begin by installing sktime"}}