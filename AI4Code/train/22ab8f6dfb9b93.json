{"cell_type":{"dadf8d8a":"code","91fd4445":"code","e81055c4":"code","583fd5f8":"code","0abb7807":"code","659334d4":"code","80eccafd":"code","90ce0e86":"code","61222889":"code","6c119541":"code","33d8043f":"code","6de1aeb7":"code","3b837353":"code","f7fa75d4":"code","47591772":"code","d4f53b30":"code","ac6be481":"code","203ccee0":"code","644039a3":"code","685d1bc1":"code","74ed6e90":"code","703db602":"code","f954b34b":"code","7694f11f":"code","250dcfb2":"code","a22eda89":"code","61d839e0":"code","3efe0572":"markdown","dcff3490":"markdown","08ffaeac":"markdown","f8c59af9":"markdown","c9bf3527":"markdown","20d7c0ec":"markdown","f0bc5c12":"markdown","37f6b40a":"markdown","727951d6":"markdown","bc7baf6d":"markdown"},"source":{"dadf8d8a":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.io as pio\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nimport seaborn as sns\nimport matplotlib\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\npd.pandas.set_option('display.max_columns',None)\npd.pandas.set_option('display.max_rows',None)\nimport warnings\nwarnings.filterwarnings('ignore')","91fd4445":"data = pd.read_csv('..\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\n# data = pd.read_csv('weatherAUS.csv')\ndf = data.copy()\ndf.head()","e81055c4":"def summary(df, pred=None):\n    obs = df.shape[0]\n    Types = df.dtypes\n    Counts = df.apply(lambda x: x.count())\n    Min = df.min()\n    Max = df.max()\n    Uniques = df.apply(lambda x: x.unique().shape[0])\n    Nulls = df.apply(lambda x: x.isnull().sum())\n    print('Data shape:', df.shape)\n\n    if pred is None:\n        cols = ['Types', 'Counts', 'Uniques', 'Nulls', 'Min', 'Max']\n        str = pd.concat([Types, Counts, Uniques, Nulls, Min, Max], axis = 1, sort=True)\n\n    str.columns = cols\n    print('___________________________\\nData Types:')\n    print(str.Types.value_counts())\n    print('___________________________')\n    display(str.sort_values(by='Nulls', ascending=False))\n\nsummary(df)","583fd5f8":"def null_values(df):\n    \"\"\"a function to show null values with percentage\"\"\"\n    nv=pd.concat([df.isnull().sum(), 100 * df.isnull().sum()\/df.shape[0]],axis=1).rename(columns={0:'Missing_Records', 1:'Percentage (%)'})\n    return nv[nv.Missing_Records>0].sort_values('Missing_Records', ascending=False)\n\nnull_values(df)","0abb7807":"import missingno as msno\nmsno.matrix(df);","659334d4":"msno.bar(df);","80eccafd":"df = df.dropna(subset=['RainTomorrow', 'RainToday'])","90ce0e86":"df['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d')\n\ndf['Year'] = df['Date'].dt.year.astype('int16')\ndf['Month'] = df['Date'].dt.month.astype('int16')\ndf['Year_Month']=df['Date'].array.strftime('%Y-%m') # strftime works with array\ndf['DiffTemp']=df['MaxTemp']-df['MinTemp']\ndf.head()","61222889":"j=0\ndef figure():\n    global j\n    j+=1\n    return 'fig_'+str(j)","6c119541":"cat_vars = [i for i in df.columns if df[i].dtype=='object']\n# cat_vars","33d8043f":"for i in cat_vars[:-1]:\n    fig=figure()\n    fig= px.histogram(df, x=i,title=f\"fig_{j}: Frequency of {i}\")\n    fig.update_xaxes(categoryorder='total descending')\n    fig.show()","6de1aeb7":"num_vars = [i for i in df.columns if df[i].dtype!='object']\n# num_vars","3b837353":"cols=[\n 'DiffTemp',\n 'MinTemp',\n 'MaxTemp',\n 'Evaporation',\n 'Sunshine',\n 'WindGustSpeed',\n]","f7fa75d4":"fig_=figure()\nfig= px.histogram(df, x='Year_Month', color='RainToday',\n                  title=f\"fig_{j}: Rainy Day Distribution in Year-Month Time Series\")\nfig.show()","47591772":"for i in cols:\n    fig=figure()\n    fig= px.violin(df, x=i, color='RainToday',title=f\"fig_{j}: Violinplot of {i}\")\n    fig.show()\n\n    fig=figure()\n    fig= px.histogram(df, x=i, color='RainToday',title=f\"fig_{j}: Frequency Distribution of {i}\")\n    fig.show()","d4f53b30":"msno.heatmap(df);","ac6be481":"cols=[\n 'MinTemp',\n 'MaxTemp',\n 'Rainfall',\n 'Evaporation',\n 'Sunshine',\n 'WindGustSpeed',\n 'WindSpeed9am',\n 'WindSpeed3pm',\n 'Humidity9am',\n 'Humidity3pm',\n 'Pressure9am',\n 'Pressure3pm',\n 'Cloud9am',\n 'Cloud3pm',\n 'Temp9am',\n 'Temp3pm',\n 'DiffTemp',\n 'Year',\n 'Month']","203ccee0":"df_0 = df.drop(['Date'],axis=1).groupby(['Year_Month','RainToday'])[cols].mean().reset_index()\n# df_0","644039a3":" cols1 =[\n         ('MinTemp', 'MaxTemp'),\n         ('DiffTemp', 'Evaporation'),\n         ('DiffTemp', 'Sunshine'),\n         ('DiffTemp', 'Humidity9am'),\n         ('DiffTemp', 'Pressure9am'),\n         ('MaxTemp', 'Rainfall'),\n         ('Rainfall', 'Evaporation'),\n         ('Rainfall', 'Sunshine'),\n         ('Rainfall', 'WindSpeed9am'),\n         ('Rainfall', 'Humidity9am'),\n         ('Rainfall', 'Pressure9am')]","685d1bc1":"for pair in cols1:\n    fig=figure()\n    fig = px.scatter(df_0, x=pair[0], y=pair[1],title=f\"fig_{j}: Scatterplot of {pair}\",\n                     trendline=\"ols\",\n                     color='RainToday',\n                     trendline_color_override=\"green\")\n    fig.show()","74ed6e90":"cols= ['MinTemp', 'MaxTemp', 'DiffTemp','Rainfall', 'Evaporation',\n       'Sunshine','WindGustSpeed','WindSpeed9am', 'WindSpeed3pm', 'Humidity9am', 'Humidity3pm',\n       'Pressure9am', 'Pressure3pm', 'Cloud9am', 'Cloud3pm', 'Temp9am',\n       'Temp3pm']","703db602":"df1 = df_0.groupby(['Year_Month','RainToday'])[cols].agg('mean').reset_index()\ndf2 = df_0.groupby(['Month','RainToday'])[cols].agg('mean').reset_index()\ndf3 = df_0.groupby(['Year','RainToday'])[cols].agg('mean').reset_index()","f954b34b":"for i in cols:\n    fig=figure()\n    fig = px.line(df1, x='Year_Month', y=i, title=f\"fig_{j}: Lineplot of {i}\",\n                     color='RainToday',\n                 )\n    fig.show()","7694f11f":"for i in cols:\n    fig=figure()\n    fig = px.line(df2, x='Month', y=i, title=f\"fig_{j}: Lineplot of {i}\",\n                     color='RainToday',\n                 )\n    fig.show()","250dcfb2":"for i in cols:\n    fig=figure()\n    fig = px.line(df3, x='Year', y=i, title=f\"fig_{j}: Lineplot of {i}\",\n                     color='RainToday',\n                 )\n    fig.show()","a22eda89":"df4 = df[df.RainToday=='Yes'].groupby('WindGustDir')[cols].agg('mean').reset_index()\ndf5 = df[df.RainToday=='No'].groupby('WindGustDir')[cols].agg('mean').reset_index()\n","61d839e0":"import plotly.graph_objects as go\n\ncategories = df4.WindGustDir.unique()\n\nfor i in cols:\n    fig=figure()\n    fig = go.Figure()\n\n    fig.add_trace(go.Scatterpolar(\n          r=df4[i],\n          theta=categories,\n          fill='toself',\n          name='Product A'\n    ))\n    fig.add_trace(go.Scatterpolar(\n          r=df5[i],\n          theta=categories,\n          fill='toself',\n          name='Product B'\n    ))\n\n    fig.update_layout(\n      polar=dict(\n        radialaxis=dict(\n          visible=True,\n          range=[min(df4[i].min(),df5[i].min()),\n                 max(df4[i].max(),df5[i].max())]\n        )),\n      title={\n        'text': f\"fig_{j}: Radarplot of {i}\",\n        'y':0.9,'x':0.5,\n        'xanchor': 'center','yanchor': 'top'},\n      showlegend=False\n    )\n\n    fig.show()","3efe0572":"# Visualization Analysis of Rain in Australia\n(using Plotyly libraries)","dcff3490":"### Scatter matrix and\/or OLS Scatter Plot for numerical variables\n\n- Additionally RainToday and RainTomorrow variables as color dimension","08ffaeac":"### Time series (preferably monthly) line chart for numerical variables\n\n- RainToday and RainTomorrow variables as 3rd variable with color dimension\n\n- Tip: Use groupby method to group by month\/year and calculate mean values","f8c59af9":"Dataset Resource : [Kaggle](https:\/\/www.kaggle.com\/jsphyg\/weather-dataset-rattle-package)\n\n![download.png](attachment:ff76d7a9-5c21-4255-8005-e5f851f4712a.png)\n","c9bf3527":"### MissingNo visualizations","20d7c0ec":"### Distribution of numerical variables with histogram and boxplot\/violin\n\n- Additionally RainToday and RainTomorrow variables as color dimension","f0bc5c12":"### Heatmap for correlation","37f6b40a":"**Make Feature Engineering**","727951d6":"### Frequency of categorical variables with histogram","bc7baf6d":"### Polar\/Radar chart for numerical variables and Wind Direction as the 2nd variable\n\n- Tip: Use groupby method and calculate mean values"}}