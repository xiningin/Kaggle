{"cell_type":{"3fa8fea0":"code","44331ef0":"code","191d46c4":"code","4f1fc010":"code","8149e053":"code","2c228add":"code","31cc8836":"code","841f138c":"code","9458c4ef":"code","d42e5486":"code","b6427464":"code","9a8c4d5a":"code","a36064e3":"code","06d30c8c":"code","7cac0af8":"code","884f298d":"code","b5e814f0":"code","2eef9b8d":"code","a3bade5e":"code","9ed0d302":"code","6440d9fc":"code","15d18774":"code","7cbca0b8":"code","8e7cbd50":"code","a39ba67e":"code","4090813e":"code","be3d4dbb":"code","b9cd6e14":"code","ab53f697":"code","ddab3a40":"code","bbbc3a8e":"code","6f17cf0f":"code","157d8d3b":"code","dd8b2364":"code","f75bd3c5":"code","9413c698":"markdown","c37932df":"markdown","d5fa18b2":"markdown","5ed8e275":"markdown","3822f939":"markdown","333fd3cd":"markdown"},"source":{"3fa8fea0":"pip install Augmentor","44331ef0":"import numpy as np # linear algebra\nimport os # accessing directory structure\nfrom os import listdir\nfrom os.path import isfile, join\nimport fastai\nfrom fastai.vision import *\nimport Augmentor\nfrom PIL import Image ","191d46c4":"def augmente(path,nbSample=1) :\n    p = Augmentor.Pipeline(path,path)\n    p.flip_left_right(0.5) \n    p.rotate(0.3, 25, 25) \n    p.skew(0.1, 0.1) \n    p.skew_tilt(0.1, 0.1) \n    p.shear(0.1,10,10)\n    p.invert(0.333333)\n    p.random_distortion(probability=0.7, grid_width=4, grid_height=4, magnitude=12)\n    for i in range(nbSample) :\n        p.process()","4f1fc010":"cd \/kaggle\/usr\/lib\/outcode\/","8149e053":"from outcode import *","2c228add":"!git clone https:\/\/github.com\/giddyyupp\/ganilla \/kaggle\/ganilla","31cc8836":"ls \/kaggle\/ganilla","841f138c":"cd \/kaggle\/ganilla","9458c4ef":"!mkdir \/kaggle\/ganilla\/datasets\/photo2witness\n!mkdir \/kaggle\/ganilla\/datasets\/photo2witness\/trainA\n!mkdir \/kaggle\/ganilla\/datasets\/photo2witness\/trainB\n!mkdir \/kaggle\/ganilla\/datasets\/photo2witness\/testA\n!mkdir \/kaggle\/ganilla\/datasets\/photo2witness\/testB\n!mkdir \/kaggle\/ganilla\/checkpoints\/\n!mkdir \/kaggle\/ganilla\/checkpoints\/photo2witness\/","d42e5486":"path = Path('\/kaggle\/input')\npathUGATIT = Path('\/kaggle\/ganilla')","b6427464":"resize(path\/\"landscape-pictures\/\"  , pathUGATIT\/'datasets\/photo2witness\/trainA',limit=500)\nresize(path\/'the-witness\/'        , pathUGATIT\/'datasets\/photo2witness\/trainB')\n\nresize(path\/\"landscape-pictures\/\", pathUGATIT\/'datasets\/photo2witness\/testA',limit=50)\nresize(path\/'the-witness\/'       , pathUGATIT\/'datasets\/photo2witness\/testB',limit=50)","9a8c4d5a":"# augmente(pathUGATIT\/'datasets\/photo2witness\/trainB',1)","a36064e3":"ls -1 \/kaggle\/ganilla\/datasets\/photo2witness\/trainB | wc -l","06d30c8c":"ls \/kaggle\/input\/ganilla-witness\/*.pth \/kaggle\/input\/ganilla-witness\/*.txt","7cac0af8":"cp \/kaggle\/input\/ganilla-witness\/*.pth \/kaggle\/ganilla\/checkpoints\/photo2witness\/","884f298d":"cp \/kaggle\/input\/ganilla-witness\/*.txt \/kaggle\/ganilla\/checkpoints\/photo2witness\/","b5e814f0":"ls \/kaggle\/ganilla\/checkpoints\/photo2witness\/","2eef9b8d":"nb_epoch = 100\nnb_niter = 50\nbegin_epoch = 100\nend_epoch = nb_epoch + nb_niter","a3bade5e":"pip install -r requirements.txt","9ed0d302":"!python train.py --dataroot .\/datasets\/photo2witness --name photo2witness --model cycle_gan --netG resnet_fpn --niter {nb_niter} --niter_decay {nb_epoch} --batch_size 4 --print_freq 2000 --save_epoch_freq {end_epoch} --epoch {begin_epoch}  --continue_train","6440d9fc":"!python test.py --dataroot .\/datasets\/photo2witness --name photo2witness --model cycle_gan --netG resnet_fpn --batch_size 4 --epoch {end_epoch}","15d18774":"pathRes = \"\/kaggle\/ganilla\/results\/photo2witness\/test_\"+str(end_epoch)+\"\/images\/\" #\/kaggle\/ganilla\/checkpoints\/photo2witness\/web\/images\n\nsrc = ImageImageList.from_folder(pathRes).split_by_rand_pct(0.1, seed=50)\ndata_init = (src.label_from_func(lambda x: Path(pathRes)\/x.name)\n           .databunch(bs=8))\n\ndata_init.show_batch(8)","7cbca0b8":"!mkdir \/kaggle\/working\/img","8e7cbd50":"cp -r \/kaggle\/ganilla\/results\/photo2witness\/test_{end_epoch}\/images\/*real_A* \/kaggle\/working\/img","a39ba67e":"cp -r \/kaggle\/ganilla\/results\/photo2witness\/test_{end_epoch}\/images\/*real_B* \/kaggle\/working\/img","4090813e":"cp -r \/kaggle\/ganilla\/results\/photo2witness\/test_{end_epoch}\/images\/*fake_A* \/kaggle\/working\/img","be3d4dbb":"cp -r \/kaggle\/ganilla\/results\/photo2witness\/test_{end_epoch}\/images\/*fake_B* \/kaggle\/working\/img","b9cd6e14":"ls -1 \/kaggle\/ganilla\/results\/photo2witness\/test_{end_epoch}\/images\/ | wc -l","ab53f697":"ls \/kaggle\/ganilla\/checkpoints\/photo2witness","ddab3a40":"cp -r \/kaggle\/ganilla\/checkpoints\/photo2witness\/{end_epoch}_* \/kaggle\/working","bbbc3a8e":"cp -r \/kaggle\/ganilla\/checkpoints\/photo2witness\/*.txt \/kaggle\/working","6f17cf0f":"cd \/kaggle\/working","157d8d3b":"ls img","dd8b2364":"ls -1 \/kaggle\/working\/img | wc -l","f75bd3c5":"from pynvml import *\nnvmlInit()\nhandle = nvmlDeviceGetHandleByIndex(0)\ninfo = nvmlDeviceGetMemoryInfo(handle)\nprint(\"Total memory:\", info.total)\nprint(\"Free memory:\", info.free)\nprint(\"Used memory:\", info.used)","9413c698":"# Memory","c37932df":"# Datasets","d5fa18b2":"# Import","5ed8e275":"# Output","3822f939":"# Training","333fd3cd":"# Test"}}