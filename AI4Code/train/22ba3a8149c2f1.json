{"cell_type":{"86ea49ee":"code","c715b41f":"code","fc28b9e9":"code","27202ef0":"code","00593b5c":"code","241743ec":"code","0bf189d5":"code","fa0d6a0a":"code","55a76f3a":"code","82229c33":"code","e7eeaeca":"code","ea014701":"code","de4a3e3f":"code","89d2a7cb":"code","e9da46e4":"code","0605b1d6":"code","86b2ac1d":"code","a52a3936":"code","76d931d6":"code","545842ba":"code","6eacc60b":"code","6bfd715f":"code","83a0bf0d":"code","9b917edd":"code","0f862a37":"code","54c59012":"code","8a4f6ee4":"code","2f729db7":"code","6aea29cd":"code","7812cec8":"code","d702b9dc":"code","7074242f":"code","a537e3a8":"code","3a30e36b":"code","f62b6ed8":"code","56e1f8b6":"code","49f2670e":"code","1a30ba35":"markdown","2523dd6b":"markdown","9a01e0e4":"markdown","fa191c81":"markdown","3e06a64e":"markdown","1c3ea84f":"markdown"},"source":{"86ea49ee":"from fastai.vision import *\nfrom fastai.callbacks import *\nfrom tqdm import tqdm_notebook\nfrom cv2 import cv2 as cv","c715b41f":"cv.__version__","fc28b9e9":"path = Path('..\/input')\npath.ls()","27202ef0":"train_df = pd.read_csv(path\/'train.csv')\ntest_df = pd.read_csv(path\/'test.csv')\nsub = pd.read_csv(path\/'sample_submission.csv')","00593b5c":"train_df.head()","241743ec":"test_df.head()","0bf189d5":"sub.head()","fa0d6a0a":"!ls \/kaggle\/working","55a76f3a":"working_dir = Path('\/kaggle\/working\/mnist_data')\ntrain_dir = (working_dir\/'train')\ntest_dir = (working_dir\/'test')","82229c33":"working_dir.mkdir(exist_ok=True)\ntrain_dir.mkdir(exist_ok=True)\ntest_dir.mkdir(exist_ok=True)\nworking_dir.ls()","e7eeaeca":"labels = train_df['label'].unique()\nlabels","ea014701":"for i in tqdm_notebook(labels):\n    label_i_path = train_dir\/f'{i}'\n    label_i_path.mkdir(exist_ok=True)","de4a3e3f":"def save_array2image(save_dir, index, array):\n    plt.imsave(save_dir\/f'{index}.jpg', array)","89d2a7cb":"len_train = len(train_df)\nfor i in tqdm_notebook(range(len_train)):\n    row = train_df.iloc[i]\n    label = row['label'] \n    image_array = row[1:]\n    image_array = np.reshape(np.array(image_array), (28, 28))\n    save_dir = train_dir\/str(label)\n    save_array2image(save_dir, f'train_{i}', image_array)","e9da46e4":"!ls \/kaggle\/working\/mnist_data\/train","0605b1d6":"len_test = len(test_df)\nfor i in tqdm_notebook(range(len_test)):\n    image_array = test_df.iloc[i]\n    image_array = np.reshape(np.array(image_array), (28, 28))\n    save_dir = test_dir\n    save_array2image(save_dir, f'test_{i}', image_array)","86b2ac1d":"!ls \/kaggle\/working\/mnist_data\/test","a52a3936":"tfms = get_transforms(do_flip=False, max_rotate=20, max_zoom=1.2, max_lighting=0.1, max_warp=0.1)","76d931d6":"test_src = ImageList.from_folder(extensions='.jpg', path='.\/mnist_data\/test')\ntest_src","545842ba":"%%time\ntrain_src = ImageList.from_folder(extensions='.jpg', path='.\/mnist_data\/train')\ntrain_src = train_src.split_by_rand_pct(0.2)\ntrain_src = train_src.label_from_folder()\ntrain_src = train_src.add_test(test_src)\ntrain_src = train_src.transform(tfms)\n\ntrain_data = train_src.databunch().normalize()\ntrain_data","6eacc60b":"train_data.show_batch(rows= 5, ds_type=DatasetType.Test)","6bfd715f":"esc = partial(EarlyStoppingCallback, monitor='accuracy', min_delta=0.03, patience=3)\n# smc = partial(SaveModelCallback, every='improvement', monitor='accuracy', name='best')","83a0bf0d":"def train_for_leaner(learn):\n    # freeze cycle\n    learn.freeze()\n    learn.lr_find()\n    learn.recorder.plot(suggestion=True)\n    lr_fr = learn.recorder.min_grad_lr\n    \n    learn.fit(3, lr_fr)\n    \n    # unfreeze cycle\n    learn.unfreeze()\n    learn.lr_find()\n    learn.recorder.plot(suggestion=True)\n    lr_un = learn.recorder.min_grad_lr\n    \n    learn.fit(5, slice(lr_un, lr_fr\/10))\n    learn.fit(10, slice(lr_un\/3, lr_fr\/30))\n    return learn","9b917edd":"learner_1 = cnn_learner(train_data, models.resnet101, metrics=accuracy, ps=0.6, wd = 0.01, callback_fns=esc).mixup().to_fp16()","0f862a37":"learner_1 = train_for_leaner(learner_1)","54c59012":"learner_1.show_results(ds_type=DatasetType.Valid)","8a4f6ee4":"pred_1, _ = learner_1.get_preds(ds_type = DatasetType.Test)\npred_1.shape","2f729db7":"pred_1_cat = np.argmax(pred_1, axis=1)\npred_1_cat = pred_1_cat.reshape(-1, 1)","6aea29cd":"learner_2 = cnn_learner(train_data, models.densenet121, metrics=accuracy, ps=0.6, wd = 0.005).mixup().to_fp16()","7812cec8":"learner_2 = train_for_leaner(learner_2)","d702b9dc":"learner_2.show_results(ds_type=DatasetType.Test)","7074242f":"pred_2, _ = learner_2.get_preds(ds_type = DatasetType.Test)\npred_2_cat = np.argmax(pred_2, axis=1)\npred_2_cat = np.array(pred_2_cat.reshape(-1, 1))","a537e3a8":"pred = pred_1 * 0.5 + pred_2 * 0.5\npred_cat = np.argmax(pred, axis=1)\npred_cat = np.array(pred_cat.reshape(-1, 1))\npred_cat","3a30e36b":"sub['Label'] = pred_cat\nsub.head(20)","f62b6ed8":"sub.to_csv('submission_mnist.csv', index=False)","56e1f8b6":"sub_test = pd.read_csv('submission_mnist.csv')\nsub_test.head()","49f2670e":"!ls .","1a30ba35":"# 4 Submission","2523dd6b":"# 3 stacking","9a01e0e4":"# 1 Data","fa191c81":"## 2.1 model 1 - resnet","3e06a64e":"# 2 models, loss, optimizer","1c3ea84f":"## 2.2 model 2 - densenet"}}