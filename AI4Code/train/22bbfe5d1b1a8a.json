{"cell_type":{"7bed89a9":"code","8002aac3":"code","1dc41abb":"code","760122c9":"code","d32f684a":"code","fd9b2141":"code","0f52be19":"code","b778fbee":"code","2ffae97c":"code","3da9b670":"markdown","977496d2":"markdown"},"source":{"7bed89a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8002aac3":"x_l = np.load(\"\/kaggle\/input\/sign-language-digits-dataset\/X.npy\")\ny_l = np.load(\"\/kaggle\/input\/sign-language-digits-dataset\/Y.npy\")\nimg_size = 64\nplt.subplot(1,2,1)\nplt.imshow(x_l[260].reshape(img_size,img_size))\nplt.axis(\"off\")\nplt.subplot(1,2,2)\nplt.imshow(x_l[900].reshape(img_size,img_size))\nplt.axis(\"off\")","1dc41abb":"X = np.concatenate((x_l[204:409], x_l[822:1027]),axis = 0)\nz = np.zeros(205)\no = np.ones(205)\nY = np.concatenate((z, o), axis = 0).reshape(X.shape[0],1)\nX.shape,Y.shape","760122c9":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train,Y_test = train_test_split(X,Y, test_size=0.15, random_state = 42)\nnumber_of_train = X_train.shape[0]\nnumber_of_test = X_test.shape[0]","d32f684a":"x_train= X_train.reshape(number_of_train,X_train.shape[1]*X_train.shape[2])\nx_test = X_test.reshape(number_of_test,X_test.shape[1]*X_test.shape[2])\nx_train.shape,x_test.shape","fd9b2141":"from sklearn import linear_model\nlogreg = linear_model.LogisticRegression(random_state = 42,max_iter= 100)\nprint(\"test accuracy: {} \".format(logreg.fit(x_train, Y_train).score(x_test, Y_test)))","0f52be19":"from keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom keras.models import Sequential\nfrom keras.layers import Dense","b778fbee":"def build_classifier():\n    classifier = Sequential()\n    classifier.add(Dense(units = 8, kernel_initializer = \"uniform\", activation = \"relu\", input_dim = x_train.shape[1]))\n    classifier.add(Dense(units = 4, kernel_initializer = \"uniform\", activation = \"relu\"))\n    classifier.add(Dense(units = 1, kernel_initializer = \"uniform\", activation = \"sigmoid\"))\n    classifier.compile(optimizer = \"adam\", loss = \"binary_crossentropy\", metrics = [\"accuracy\"])\n    return classifier","2ffae97c":"classifier = KerasClassifier(build_fn = build_classifier, epochs = 100)\naccuracies = cross_val_score(estimator = classifier, X = x_train, y = Y_train, cv = 3)\naccs = accuracies\nmean = accuracies.mean()\nvariance = accuracies.std()\nprint(\"Accuracys: \"+str(accs))\nprint(\"Accuracys mean: \"+str(mean))\nprint(\"Variance: \"+str(variance))","3da9b670":"# With Deep Learning","977496d2":"# With Machine Learning"}}