{"cell_type":{"5535b758":"code","a23782e2":"code","1df00294":"code","831ee700":"code","ab021bd6":"code","8844a67c":"code","20068a55":"code","47a6bb64":"code","2df427ad":"code","42a694ab":"code","23059c91":"code","715f926b":"code","18cafc33":"code","ae2b557d":"code","c57e043d":"code","c64789c0":"code","4947aeee":"code","1b365fef":"code","dc011d88":"code","3d5795da":"code","a001a763":"code","2dbdd34a":"code","7efadf52":"code","43edcff1":"code","364f54be":"code","cf75bc7d":"code","cf810151":"code","4d2e9bc7":"code","4d56674d":"code","0a5dad7f":"code","0d658ee1":"code","3a5f171c":"code","4f143507":"code","da1470b6":"code","7406899e":"code","b74aa191":"code","a8060ecd":"code","03144022":"code","71b6b4f3":"code","1d9ee47e":"code","b9efb676":"code","7db724e0":"code","2e9c557f":"code","9e20dfe4":"code","59c2a2c2":"code","464abb3b":"code","04694d81":"code","0f2dcdb8":"code","d14bd186":"code","ac213f2e":"code","1f59bf6b":"code","f64ed368":"code","17675886":"code","05b5c566":"code","2c8474a0":"code","88a2333a":"code","5ed4e8b2":"code","b43e091d":"code","d51ba8d7":"code","8f61959c":"code","c1dfb421":"code","2644a3f1":"code","0fc6daef":"code","cba10a60":"code","ffd048e7":"code","8d633f57":"code","6e215240":"code","87753fc4":"code","735527d3":"code","a51a4274":"code","632cf5b7":"code","8734443f":"code","b77c8c89":"code","d96b32ac":"code","7f475e5a":"code","1670ce16":"code","98037f82":"code","b0ab9de2":"code","32b1ee09":"code","23629974":"code","24ad20e0":"code","9d7a65e1":"code","e6059637":"code","83ae1d94":"code","d8f81271":"code","9164c98e":"code","f5db4884":"code","0a440e2c":"code","2900cedc":"code","0632894c":"code","c433c7da":"code","c6acb5df":"code","1868203f":"code","a58567c9":"code","d1b6ada2":"code","054632e2":"code","de372dcf":"code","734e1b48":"code","ee394db7":"code","fa1ae7b9":"code","881c7e6c":"code","fd507f3f":"code","5c17401f":"code","e4ca8805":"code","c7669179":"code","738306f4":"code","35665c89":"markdown","c1662ed0":"markdown","fb0baf83":"markdown","09b9a257":"markdown","07f66d91":"markdown","0fff73b4":"markdown","212490dc":"markdown","0cefbbc9":"markdown","30af0d0e":"markdown","4b73e572":"markdown","993a61bc":"markdown","a070d896":"markdown","896a5c2f":"markdown","c2e73f47":"markdown","0ba4129c":"markdown","775bbc8f":"markdown","404e2bd8":"markdown","736303cb":"markdown","b94e0bbe":"markdown","f3fd7337":"markdown","6de1cd5b":"markdown","25235184":"markdown","f539440f":"markdown","4200bbaf":"markdown","108ba36f":"markdown","52f45225":"markdown","9eb64a6a":"markdown","3e1a5498":"markdown","d5696610":"markdown","2c3eb2bc":"markdown","b8233d43":"markdown","eb126fa1":"markdown","ec993b2e":"markdown","199bca5e":"markdown","517a44b0":"markdown","a1612704":"markdown","811cb58e":"markdown","e235ee0f":"markdown","662c050f":"markdown","b448a338":"markdown","d3708245":"markdown","5c0e2282":"markdown","e03084a3":"markdown","54be05c2":"markdown","19b4a617":"markdown","99c11801":"markdown","30fdfb40":"markdown","0b2869db":"markdown","188e1ca3":"markdown","7a73ec64":"markdown","d571bde9":"markdown","46e781dc":"markdown","afcb3598":"markdown","8ec1e94c":"markdown"},"source":{"5535b758":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a23782e2":"import numpy as np\nimport pandas as pd\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import LabelEncoder\n%matplotlib inline\n","1df00294":"#\u76f8\u5bf9\u8def\u5f84\n\ndf = pd.read_csv('..\/input\/titanic\/train.csv')\ndf.head()","831ee700":"os.getcwd() #\u901a\u8fc7getcwd\u5f97\u5230\u7edd\u5bf9\u8def\u5f84","ab021bd6":"#\u7edd\u5bf9\u8def\u5f84\n\ndf2 = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf2.head()","8844a67c":"chunker = pd.read_csv('..\/input\/titanic\/train.csv', chunksize=1000)\n#The parameter essentially means the number of rows to be read into a dataframe at any single time in order to fit into the local memory.","20068a55":"#\u624b\u52a8\u8f93\u5165\u5217\u8868\u4e0d\u591f\u4f18\u96c5\uff0c\u6240\u4ee5\u76f4\u63a5\u4ece\u539f\u6587\u672c\u91cc\u63d0\u53d6\uff1a\n\ncolumn_text ='''PassengerId => \u4e58\u5ba2ID\n                Survived => \u662f\u5426\u5e78\u5b58\n                Pclass => \u4e58\u5ba2\u7b49\u7ea7(1\/2\/3\u7b49\u8231\u4f4d)\n                Name => \u4e58\u5ba2\u59d3\u540d\n                Sex => \u6027\u522b\n                Age => \u5e74\u9f84\n                SibSp => \u5802\u5144\u5f1f\/\u59b9\u4e2a\u6570\n                Parch => \u7236\u6bcd\u4e0e\u5c0f\u5b69\u4e2a\u6570\n                Ticket => \u8239\u7968\u4fe1\u606f\n                Fare => \u7968\u4ef7\n                Cabin => \u5ba2\u8231\n                Embarked => \u767b\u8239\u6e2f\u53e3'''\n\ncolumn_list = [re.sub('.*=> ', '', name) for name in column_text.split(\"\\n\")]\n\n#\u8bbe\u7f6e\u65b0\u7684\u5217\u540d\ndf.columns = column_list\n\n#\u8bbe\u7f6eIndex\ndf.set_index('\u4e58\u5ba2ID',inplace=True)\n","47a6bb64":"df.head()","2df427ad":"df.info()","42a694ab":"df.head(10)","23059c91":"df.tail(15)","715f926b":"df.isnull()","18cafc33":"df.to_csv('train_chinese.csv')\n#\u5982\u679c\u6ca1\u6709encoding='GBK'\u7684\u8bdd\u4f1a\u6709\u4e71\u7801","ae2b557d":"#Create a Series\na = [1,2,3,4]\nb = ['a', 'b', 'c', 'd']\npd.Series(dict(zip(a,b)))","c57e043d":"#Create a DataFrame\na = ['x', 'y', 'z']\nb = [['a','b','c'], [1,2,3], ['o', 'p', 'q']]\npd.DataFrame(dict(zip(a,b))).set_index('y')\n","c64789c0":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_c = pd.read_csv('train_chinese.csv')\ndf_c.head()","4947aeee":"list(df.columns),list(df_c.columns)","1b365fef":"df['Cabin']","dc011d88":"df.Cabin","3d5795da":"#\u65b0\u5efa\u4e00\u4e2a\u53ebtest_1.csv\u7684\u6587\u4ef6\uff0c\u65b0\u52a0\u4e00\u5217\n\ntest_1 = df\ntest_1['a'] = 100\ntest_1.head()\n","a001a763":"#remove a column\ndel test_1['a']\ntest_1.head()","2dbdd34a":"test_1.drop(['PassengerId','Name','Age','Ticket'], axis=1)\ntest_1.head()","7efadf52":"df[df.Age<10].head()","43edcff1":"midage = df[(df.Age>10) & (df.Age<50)]\nmidage.head()","364f54be":"#\u7528iloc + columns name\nmidage.iloc[99][['Pclass','Sex']]","cf75bc7d":"#\u7eaf\u7528iloc\n\nmidage.iloc[[99],[2,4]]","cf810151":"#\u7528loc\n\nmidage.loc[[99],['Pclass', 'Sex']]","4d2e9bc7":"midage","4d56674d":"midage.loc[[100,105,108],['Pclass','Name','Sex']] ","0a5dad7f":"midage.iloc[[100,105,108],[2,3,4]] ","0d658ee1":"frame = pd.DataFrame(np.arange(12).reshape(3,4), index=[102,101,103], columns=['x', 'y', 'w', 'z'])\nframe","3a5f171c":"#\u8ba9\u884c\u7d22\u5f15\u5347\u5e8f\u6392\u5e8f\n\nframe.sort_index()","4f143507":"#\u8ba9\u5217\u7d22\u5f15\u5347\u5e8f\u6392\u5e8f\n\nframe.sort_index(axis=1)","da1470b6":"# \u8ba9\u5217\u7d22\u5f15\u964d\u5e8f\u6392\u5e8f\n\nframe.sort_index(axis=1, ascending=False)","7406899e":"#\u4efb\u9009\u4e24\u5217\u6570\u636e\u540c\u65f6\u964d\u5e8f\u6392\u5e8f\n\nframe.sort_values(by=['z','y'], ascending=False)","b74aa191":"df.sort_values(by=['Fare', 'Age'], ascending=False).head(20)","a8060ecd":"pd.DataFrame(np.arange(9).reshape(3,3)) + pd.DataFrame(np.arange(16).reshape(4,4))","03144022":"df_f = pd.DataFrame()\ndf_f = df\ndf_f['Family'] = df.SibSp + df.Parch\ndf_f.sort_values('Family', ascending=False)","71b6b4f3":"#or use the describe, we can know the max value in 'family' is 10\n\ndf_f.describe()","1d9ee47e":"frame2 = pd.DataFrame([[1.4, np.nan], \n                       [7.1, -4.5],\n                       [np.nan, np.nan], \n                       [0.75, -1.3]\n                      ], index=['a', 'b', 'c', 'd'], columns=['one', 'two'])\nframe2","b9efb676":"frame2.describe()","7db724e0":"df_f[['Fare', 'Parch']].describe()","2e9c557f":"#info()\ndf_f.info()","9e20dfe4":"#isnull()\ndf_f.isnull().sum()","59c2a2c2":"#\u7528heatmap\u6765\u770b\u7a7a\u7f3a\u503c\n\n\nsns.heatmap(df_f.isnull(), yticklabels=False, cbar=False, cmap='plasma')","464abb3b":"#dropna\n\nsns.heatmap(df_f.dropna().isnull(), yticklabels=False, cbar=False, cmap='plasma')\ndf_f.dropna().info()","04694d81":"#fillna\n\nsns.heatmap(df_f.fillna(0).isnull(), yticklabels=False, cbar=False, cmap='plasma')\ndf_f.fillna(0).info()","0f2dcdb8":"#\u5148\u5904\u7406Age\u7684\u7f3a\u5931\u503c\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0d\u540c\u8231\u4f4d\u7684\u4e58\u5ba2\u7684\u5e73\u5747\u5e74\u9f84\n\nsns.set_style('whitegrid')\nplt.figure(figsize=(4,10))\nsns.boxplot(data=df_f, x='Pclass', y='Age')","d14bd186":"df_f.info()","ac213f2e":"#\u6309\u7167\u8231\u4f4d\u4e0d\u540c\u8bbe\u7f6e\u4e0d\u540c\u7684age\n\n\ndef impute_age(cols):\n    Age, Pclass = cols[0], cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            Age = 38\n        elif Pclass == 2:\n            Age = 29\n        else:\n            Age = 24\n    return Age\n\ndf_f['Age'] = df_f[['Age', 'Pclass']].apply(impute_age, axis=1)","1f59bf6b":"df_f.isnull().sum()\n","f64ed368":"#\u7528SimpleImputer\u6765\u586b\u8865\u7f3a\u5931\u503c\n\ndf = pd.read_csv('..\/input\/titanic\/train.csv')\nsns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='plasma')","17675886":"df.iloc[:,[0,1,2,5,6,7,9]].info()","05b5c566":"my_imputer = SimpleImputer()\nimputed_df = pd.DataFrame(my_imputer.fit_transform(df.iloc[:,[0,1,2,5,6,7,9]]))\nimputed_df.columns = df.iloc[:,[0,1,2,5,6,7,9]].columns\ndf['Age'] = imputed_df['Age']","2c8474a0":"sns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='plasma')\ndf.isnull().sum()","88a2333a":"#\u53bb\u9664Cabin\u5217\ndf.drop('Cabin',axis=1, inplace=True)\nsns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='plasma')\ndf.info()","5ed4e8b2":"#\u6700\u540e\u53bb\u6389Embarked\u4e22\u5931\u7684\u4e24\u884c\n\ndf.dropna(inplace=True)\ndf.info()\n\n#\u4e22\u5931\u503c\u5904\u7406\u5b8c\u6bd5","b43e091d":"#\u624b\u52a8\u6254\u4e00\u4e2a\u91cd\u590d\u503c\ndf.tail()\ndf.loc[999] = df.iloc[888]","d51ba8d7":"df[df.duplicated()]","8f61959c":"df.info()","c1dfb421":"df = df.drop_duplicates()\ndf.info()","2644a3f1":"df.to_csv('clear_train.csv')","0fc6daef":"#\u5c06\u8fde\u7eed\u53d8\u91cfAge\u5e73\u5747\u5206\u7bb1\u62105\u4e2a\u5e74\u9f84\u6bb5\uff0c\u5e76\u5206\u522b\u7528\u7c7b\u522b\u53d8\u91cf12345\u8868\u793a\ndf['AgeBand'] = pd.cut(df['Age'], 5, labels=[1,2,3,4,5])\ndf.head()","cba10a60":"df.to_csv('ab1.csv')","ffd048e7":"#\u5c06\u8fde\u7eed\u53d8\u91cfAge\u5212\u5206\u4e3a(0,5] (5,15] (15,30] (30,50] (50,80]\u4e94\u4e2a\u5e74\u9f84\u6bb5\uff0c\u5e76\u5206\u522b\u7528\u7c7b\u522b\u53d8\u91cf12345\u8868\u793a\ndf['AgeBand'] = pd.cut(df['Age'], [0,5,15,30,50,80], labels=[1,2,3,4,5])\ndf.head()","8d633f57":"df.to_csv('ab2.csv')","6e215240":"#\u5c06\u8fde\u7eed\u53d8\u91cfAge\u630910% 30% 50 70% 90%\u4e94\u4e2a\u5e74\u9f84\u6bb5\uff0c\u5e76\u7528\u5206\u7c7b\u53d8\u91cf12345\u8868\u793a\ndf['AgeBand'] = pd.qcut(df['Age'],[0, 0.1, 0.3, 0.5, 0.7, 0.9], labels=[1,2,3,4,5])\ndf.head()","87753fc4":"df.to_csv('ab3.csv')","735527d3":"df['Sex'].value_counts()","a51a4274":"df['Embarked'].unique()","632cf5b7":"#\u5c06object of Sex\u8f6c\u6362\u4e3a123\ndf['Sex_num'] = df['Sex'].replace(['male', 'female'], [1,2])\ndf['Sex_num'].value_counts()\n","8734443f":"df['Embarked_num'] = df['Embarked'].replace(['S','C','Q'], [1,2,3])\ndf['Embarked_num'].value_counts()","b77c8c89":"#\u7528map\n\ndf['Sex_num'] = df['Sex'].map({'male':1, 'female':2})\ndf.Sex_num.value_counts()","d96b32ac":"#\u65b9\u6cd5\u4e09: \u4f7f\u7528sklearn.preprocessing\u7684LabelEncoder\n\nfor feat in ['Name', 'Ticket']:\n    lbl = LabelEncoder()\n    label_dict = dict(zip(df[feat].unique(),range(df[feat].nunique())))\n    df[feat + '_lbl'] = df[feat].map(label_dict)\n    df[feat + '_lbl'] = lbl.fit_transform(df[feat].astype(str))\n    \ndf.head()\n    ","7f475e5a":"df['title'] = df.Name.str.extract('([A-Za-z]+)\\.', expand=False)\ndf.head()","1670ce16":"df.to_csv('df_fin.csv')","98037f82":"text_left_up = pd.read_csv(\"..\/input\/to-concat\/train-left-up.csv\")\ntext_left_down = pd.read_csv(\"..\/input\/to-concat\/train-left-down.csv\")\ntext_right_up = pd.read_csv(\"..\/input\/to-concat\/train-right-up.csv\")\ntext_right_down = pd.read_csv(\"..\/input\/to-concat\/train-right-down.csv\")","b0ab9de2":"list_up = [text_left_up, text_right_up]\nresult_up = pd.concat(list_up, axis=1)\nresult_up.head()","32b1ee09":"list_down = [text_left_down, text_right_down]\nresult_down = pd.concat(list_down, axis=1)\nresult_down.head()\nresult = pd.concat([result_up, result_down])","23629974":"result_up = text_left_up.join(text_right_up)\nresult_down = text_left_down.join(text_right_down)\nresult = result_up.append(result_down)\nresult.info()","24ad20e0":"result_up = pd.merge(text_left_up, text_right_up, left_index=True, right_index=True)\nresult_down = pd.merge(text_left_down, text_right_down, left_index=True, right_index=True)\nresult = result_up.append(result_down)","9d7a65e1":"result.to_csv('result.csv')","e6059637":"result.head()","83ae1d94":"unit_result = result.stack()\nunit_result.head(22)","d8f81271":"text = pd.read_csv('df_fin.csv')\ndf = text['Fare'].groupby(text['Sex'])\nmeans = df.mean()\nmeans","9164c98e":"survived_sex = text['Survived'].groupby(text['Sex']).sum()\nsurvived_sex","f5db4884":"text['Survived'].groupby(text['Pclass']).sum()","0a440e2c":"dict(zip(['Fare','Pclass'],['mean','count']))","2900cedc":"#\u3010\u601d\u8003\u3011\u4ece\u4efb\u52a1\u4e8c\u5230\u4efb\u52a1\u4e09\u4e2d\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u53ef\u4ee5\u901a\u8fc7agg()\u51fd\u6570\u6765\u540c\u65f6\u8ba1\u7b97\u3002\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528rename\u51fd\u6570\u4fee\u6539\u5217\u540d\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u63d0\u793a\u5199\u51fa\u8fd9\u4e2a\u8fc7\u7a0b\u5417\uff1f\n\ntext.groupby('Sex').agg(dict(zip(['Fare','Pclass'],['mean','count']))).rename(columns=dict(zip(['Fare','Pclass'], ['Ave_fare', 'Count_Pclass'])))","0632894c":"text.groupby(['Pclass', 'Age'])['Fare'].mean().plot()","c433c7da":"text.groupby(['Pclass', 'Age'])['Fare'].mean()","c6acb5df":"result = pd.merge(means, survived_sex, on='Sex')\nresult","1868203f":"text.groupby('Age')['Survived'].sum().plot()","a58567c9":"Age = pd.merge(pd.DataFrame(text.groupby('Age')['Survived'].sum()),pd.DataFrame(text.groupby('Age')['Survived'].count()),on='Age')\nAge['Sur_p'] = Age.Survived_x \/ Age.Survived_y\nAge","d1b6ada2":"#\u4e0d\u540c\u5e74\u9f84\u6bb5\u5b58\u6d3b\u7387\n\nAge['AgeBand'] = pd.cut(Age.reset_index()['Age'], 5, labels=[1,2,3,4,5])\nAge.reset_index().groupby('AgeBand')['Sur_p'].mean().plot()","054632e2":"text = pd.read_csv('result.csv')\ntext.head()","de372dcf":"sns.heatmap(data=text[['Fare','Pclass']].set_index('Fare').sort_index())","734e1b48":"sex = text.groupby('Sex')['Survived'].sum()\nsex.plot.bar()","ee394db7":"text.groupby(['Sex', 'Survived'])['Survived'].count().unstack().plot(kind='bar', stacked='True')","fa1ae7b9":"fare_sur = text.groupby(['Fare'])['Survived'].value_counts().sort_values(ascending=False)\nfare_sur","881c7e6c":"fig = plt.figure(figsize=(20,10))\nfare_sur.plot(grid=True)\nplt.legend()\nplt.show()","fd507f3f":"pclass_sur = text.groupby(['Pclass'])['Survived'].value_counts()\npclass_sur","5c17401f":"sns.countplot(x='Pclass', hue='Survived', data=text)","e4ca8805":"text.groupby(['Pclass', 'Survived'])['Survived'].count().unstack().plot(kind='bar')","c7669179":"facet = sns.FacetGrid(text, hue='Survived', aspect=3)\nfacet.map(sns.kdeplot,'Age', shade=True)\nfacet.set(xlim=(0, text['Age'].max()))\nfacet.add_legend()","738306f4":"text.Age[text.Pclass == 1].plot(kind='kde')\ntext.Age[text.Pclass == 2].plot(kind='kde')\ntext.Age[text.Pclass == 3].plot(kind='kde')\nplt.legend((1,2,3))","35665c89":"#### 2.7.5 \u4efb\u52a1\u4e94\uff1a\u53ef\u89c6\u5316\u5c55\u793a\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d\u4e0d\u540c\u4ed3\u4f4d\u7b49\u7ea7\u7684\u4eba\u751f\u5b58\u548c\u6b7b\u4ea1\u4eba\u5458\u7684\u5206\u5e03\u60c5\u51b5\u3002\uff08\u7528\u67f1\u72b6\u56fe\u8bd5\u8bd5\uff09","c1662ed0":"#### 2.6.1 \u4efb\u52a1\u4e00\uff1a\u901a\u8fc7\u300aPython for Data Analysis\u300bP303\u3001Google or Baidu\u6765\u5b66\u4e60\u4e86\u89e3GroupBy\u673a\u5236","fb0baf83":"#### 2.1.1 \u4efb\u52a1\u4e00\uff1a\u7f3a\u5931\u503c\u89c2\u5bdf\n(1) \u8bf7\u67e5\u770b\u6bcf\u4e2a\u7279\u5f81\u7f3a\u5931\u503c\u4e2a\u6570  \n(2) \u8bf7\u67e5\u770bAge\uff0c Cabin\uff0c Embarked\u5217\u7684\u6570\u636e\n\u4ee5\u4e0a\u65b9\u5f0f\u90fd\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u6240\u4ee5\u5927\u5bb6\u591a\u591a\u76ca\u5584","09b9a257":"#### 1.4.6 \u4efb\u52a1\u516d\uff1a \u5c06['PassengerId','Name','Age','Ticket']\u8fd9\u51e0\u4e2a\u5217\u5143\u7d20\u9690\u85cf\uff0c\u53ea\u89c2\u5bdf\u5176\u4ed6\u51e0\u4e2a\u5217\u5143\u7d20","07f66d91":"#### 2.6.3\uff1a\u4efb\u52a1\u4e09\uff1a\u7edf\u8ba1\u6cf0\u5766\u5c3c\u514b\u53f7\u4e2d\u7537\u5973\u7684\u5b58\u6d3b\u4eba\u6570","0fff73b4":"#### 2.4.7\uff1a\u4efb\u52a1\u4e03\uff1a\u5f97\u51fa\u4e0d\u540c\u5e74\u9f84\u7684\u603b\u7684\u5b58\u6d3b\u4eba\u6570\uff0c\u7136\u540e\u627e\u51fa\u5b58\u6d3b\u4eba\u6570\u7684\u6700\u9ad8\u7684\u5e74\u9f84\uff0c\u6700\u540e\u8ba1\u7b97\u5b58\u6d3b\u4eba\u6570\u6700\u9ad8\u7684\u5b58\u6d3b\u7387\uff08\u5b58\u6d3b\u4eba\u6570\/\u603b\u4eba\u6570\uff09\n","212490dc":"#### 1.3.1 \u4efb\u52a1\u4e00\uff1a\u5c06\u4f60\u52a0\u8f7d\u5e76\u505a\u51fa\u6539\u53d8\u7684\u6570\u636e\uff0c\u5728\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u65b0\u6587\u4ef6train_chinese.csv","0cefbbc9":"#### 2.4.6\uff1a\u4efb\u52a1\u516d\uff1a\u5c06\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u6570\u636e\u5408\u5e76\uff0c\u5e76\u4fdd\u5b58\u5230sex_fare_survived.csv","30af0d0e":"#### 1.4.3 \u4efb\u52a1\u4e09\uff1a\u67e5\u770bDataFrame\u6570\u636e\u7684\u6bcf\u5217\u7684\u540d\u79f0","4b73e572":"#### 2.4.5\uff1a\u4efb\u52a1\u4e94\uff1a\u7edf\u8ba1\u5728\u4e0d\u540c\u7b49\u7ea7\u7684\u7968\u4e2d\u7684\u4e0d\u540c\u5e74\u9f84\u7684\u8239\u7968\u82b1\u8d39\u7684\u5e73\u5747\u503c","993a61bc":"#### 1.2.2 \u4efb\u52a1\u4e8c\uff1a\u89c2\u5bdf\u8868\u683c\u524d10\u884c\u7684\u6570\u636e\u548c\u540e15\u884c\u7684\u6570\u636e","a070d896":"#### 1.1.3 \u4efb\u52a1\u4e09\uff1a\u6bcf1000\u884c\u4e3a\u4e00\u4e2a\u6570\u636e\u6a21\u5757\uff0c\u9010\u5757\u8bfb\u53d6","896a5c2f":"#### 2.4.5 \u4efb\u52a1\u4e94\uff1a\u4f7f\u7528Panads\u7684merge\u65b9\u6cd5\u548cDataFrame\u7684append\u65b9\u6cd5\uff1a\u5b8c\u6210\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u4efb\u52a1","c2e73f47":"#### 1.6.5 \u4efb\u52a1\u4e94\uff1a\u5b66\u4f1a\u4f7f\u7528Pandas describe()\u51fd\u6570\u67e5\u770b\u6570\u636e\u57fa\u672c\u7edf\u8ba1\u4fe1\u606f","0ba4129c":"#### 1.1.1 \u4efb\u52a1\u4e00\uff1a\u5bfc\u5165numpy\u548cpandas","775bbc8f":"#### 1.5.2 \u4efb\u52a1\u4e8c\uff1a \u4ee5\"Age\"\u4e3a\u6761\u4ef6\uff0c\u5c06\u5e74\u9f84\u572810\u5c81\u4ee5\u4e0a\u548c50\u5c81\u4ee5\u4e0b\u7684\u4e58\u5ba2\u4fe1\u606f\u663e\u793a\u51fa\u6765\uff0c\u5e76\u5c06\u8fd9\u4e2a\u6570\u636e\u547d\u540d\u4e3amidage","404e2bd8":"#### 2.2.2 \u4efb\u52a1\u4e8c\uff1a\u5bf9\u91cd\u590d\u503c\u8fdb\u884c\u5904\u7406\n(1)\u91cd\u590d\u503c\u6709\u54ea\u4e9b\u5904\u7406\u65b9\u5f0f\u5462\uff1f\n\n(2)\u5904\u7406\u6211\u4eec\u6570\u636e\u7684\u91cd\u590d\u503c\n\n\u65b9\u6cd5\u591a\u591a\u76ca\u5584","736303cb":"#### 2.7.7 \u4efb\u52a1\u4e03\uff1a\u53ef\u89c6\u5316\u5c55\u793a\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d\u4e0d\u540c\u4ed3\u4f4d\u7b49\u7ea7\u7684\u4eba\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\u3002\uff08\u7528\u6298\u7ebf\u56fe\u8bd5\u8bd5\uff09","b94e0bbe":"#### 2.7.3 \u4efb\u52a1\u4e09\uff1a\u53ef\u89c6\u5316\u5c55\u793a\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d\u7537\u5973\u4e2d\u751f\u5b58\u4eba\u4e0e\u6b7b\u4ea1\u4eba\u6570\u7684\u6bd4\u4f8b\u56fe\uff08\u7528\u67f1\u72b6\u56fe\u8bd5\u8bd5\uff09\u3002","f3fd7337":"#### 1.6.6 \u4efb\u52a1\u516d\uff1a\u5206\u522b\u770b\u770b\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d \u7968\u4ef7\u3001\u7236\u6bcd\u5b50\u5973 \u8fd9\u5217\u6570\u636e\u7684\u57fa\u672c\u7edf\u8ba1\u6570\u636e\uff0c\u4f60\u80fd\u53d1\u73b0\u4ec0\u4e48\uff1f","6de1cd5b":"#### 2.4.1 \u4efb\u52a1\u4e00\uff1a\u5c06data\u6587\u4ef6\u5939\u91cc\u9762\u7684\u6240\u6709\u6570\u636e\u90fd\u8f7d\u5165\uff0c\u4e0e\u4e4b\u524d\u7684\u539f\u59cb\u6570\u636e\u76f8\u6bd4\uff0c\u89c2\u5bdf\u4ed6\u4eec\u7684\u4e4b\u95f4\u7684\u5173\u7cfb","25235184":"#### 2.6.4\uff1a\u4efb\u52a1\u56db\uff1a\u8ba1\u7b97\u5ba2\u8231\u4e0d\u540c\u7b49\u7ea7\u7684\u5b58\u6d3b\u4eba\u6570","f539440f":"#### 2.6.2\uff1a\u4efb\u52a1\u4e8c\uff1a\u8ba1\u7b97\u6cf0\u5766\u5c3c\u514b\u53f7\u7537\u6027\u4e0e\u5973\u6027\u7684\u5e73\u5747\u7968\u4ef7","4200bbaf":"#### 1.6.3 \u4efb\u52a1\u4e09\uff1a\u5229\u7528Pandas\u8fdb\u884c\u7b97\u672f\u8ba1\u7b97\uff0c\u8ba1\u7b97\u4e24\u4e2aDataFrame\u6570\u636e\u76f8\u52a0\u7ed3\u679c","108ba36f":"#### 2.4.4 \u4efb\u52a1\u56db\uff1a\u4f7f\u7528DataFrame\u81ea\u5e26\u7684\u65b9\u6cd5join\u65b9\u6cd5\u548cappend\uff1a\u5b8c\u6210\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u4efb\u52a1","52f45225":"####  2.2.3 \u4efb\u52a1\u4e09\uff1a\u5c06\u524d\u9762\u6e05\u6d17\u7684\u6570\u636e\u4fdd\u5b58\u4e3acsv\u683c\u5f0f","9eb64a6a":"#### 2.3.2 \u4efb\u52a1\u4e8c\uff1a\u5bf9\u6587\u672c\u53d8\u91cf\u8fdb\u884c\u8f6c\u6362\n(1) \u67e5\u770b\u6587\u672c\u53d8\u91cf\u540d\u53ca\u79cd\u7c7b  \n(2) \u5c06\u6587\u672c\u53d8\u91cfSex\uff0c Cabin \uff0cEmbarked\u7528\u6570\u503c\u53d8\u91cf12345\u8868\u793a  \n(3) \u5c06\u6587\u672c\u53d8\u91cfSex\uff0c Cabin\uff0c Embarked\u7528one-hot\u7f16\u7801\u8868\u793a\n\n\u65b9\u6cd5\u591a\u591a\u76ca\u5584","3e1a5498":"#### 2.4.3 \u4efb\u52a1\u4e09\uff1a\u4f7f\u7528concat\u65b9\u6cd5\uff1a\u5c06train-left-down\u548ctrain-right-down\u6a2a\u5411\u5408\u5e76\u4e3a\u4e00\u5f20\u8868\uff0c\u5e76\u4fdd\u5b58\u8fd9\u5f20\u8868\u4e3aresult_down\u3002\u7136\u540e\u5c06\u4e0a\u8fb9\u7684result_up\u548cresult_down\u7eb5\u5411\u5408\u5e76\u4e3aresult\u3002","d5696610":"#### 2.5.1 \u4efb\u52a1\u4e00\uff1a\u5c06\u6211\u4eec\u7684\u6570\u636e\u53d8\u4e3aSeries\u7c7b\u578b\u7684\u6570\u636e","2c3eb2bc":"#### 2.3.1 \u4efb\u52a1\u4e00\uff1a\u5bf9\u5e74\u9f84\u8fdb\u884c\u5206\u7bb1\uff08\u79bb\u6563\u5316\uff09\u5904\u7406\n(1) \u5206\u7bb1\u64cd\u4f5c\u662f\u4ec0\u4e48\uff1f\n\n(2) \u5c06\u8fde\u7eed\u53d8\u91cfAge\u5e73\u5747\u5206\u7bb1\u62105\u4e2a\u5e74\u9f84\u6bb5\uff0c\u5e76\u5206\u522b\u7528\u7c7b\u522b\u53d8\u91cf12345\u8868\u793a  \n\n(3) \u5c06\u8fde\u7eed\u53d8\u91cfAge\u5212\u5206\u4e3a(0,5] (5,15] (15,30] (30,50] (50,80]\u4e94\u4e2a\u5e74\u9f84\u6bb5\uff0c\u5e76\u5206\u522b\u7528\u7c7b\u522b\u53d8\u91cf12345\u8868\u793a  \n\n(4) \u5c06\u8fde\u7eed\u53d8\u91cfAge\u630910% 30% 50% 70% 90%\u4e94\u4e2a\u5e74\u9f84\u6bb5\uff0c\u5e76\u7528\u5206\u7c7b\u53d8\u91cf12345\u8868\u793a\n\n(5) \u5c06\u4e0a\u9762\u7684\u83b7\u5f97\u7684\u6570\u636e\u5206\u522b\u8fdb\u884c\u4fdd\u5b58\uff0c\u4fdd\u5b58\u4e3acsv\u683c\u5f0f","b8233d43":"#### 2.2.1 \u4efb\u52a1\u4e00\uff1a\u8bf7\u67e5\u770b\u6570\u636e\u4e2d\u7684\u91cd\u590d\u503c","eb126fa1":"#### 1.6.4 \u4efb\u52a1\u56db\uff1a\u901a\u8fc7\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u5982\u4f55\u8ba1\u7b97\u51fa\u5728\u8239\u4e0a\u6700\u5927\u7684\u5bb6\u65cf\u6709\u591a\u5c11\u4eba\uff1f","ec993b2e":"#### 1.1.2 \u4efb\u52a1\u4e8c\uff1a\u8f7d\u5165\u6570\u636e\n(1) \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u8f7d\u5165\u6570\u636e  \n(2) \u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u8f7d\u5165\u6570\u636e","199bca5e":"#### 1.6.1 \u4efb\u52a1\u4e00\uff1a\u5229\u7528Pandas\u5bf9\u793a\u4f8b\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u8981\u6c42\u5347\u5e8f","517a44b0":"#### 2.1.2 \u4efb\u52a1\u4e8c\uff1a\u5bf9\u7f3a\u5931\u503c\u8fdb\u884c\u5904\u7406\n(1)\u5904\u7406\u7f3a\u5931\u503c\u4e00\u822c\u6709\u51e0\u79cd\u601d\u8def\n\n(2) \u8bf7\u5c1d\u8bd5\u5bf9Age\u5217\u7684\u6570\u636e\u7684\u7f3a\u5931\u503c\u8fdb\u884c\u5904\u7406\n\n(3) \u8bf7\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u76f4\u63a5\u5bf9\u6574\u5f20\u8868\u7684\u7f3a\u5931\u503c\u8fdb\u884c\u5904\u7406  \n","a1612704":"#### 2.7.6 \u4efb\u52a1\u516d\uff1a\u53ef\u89c6\u5316\u5c55\u793a\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d\u4e0d\u540c\u5e74\u9f84\u7684\u4eba\u751f\u5b58\u4e0e\u6b7b\u4ea1\u4eba\u6570\u5206\u5e03\u60c5\u51b5\u3002(\u4e0d\u9650\u8868\u8fbe\u65b9\u5f0f)","811cb58e":"#### 2.7.4 \u4efb\u52a1\u56db\uff1a\u53ef\u89c6\u5316\u5c55\u793a\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d\u4e0d\u540c\u7968\u4ef7\u7684\u4eba\u751f\u5b58\u548c\u6b7b\u4ea1\u4eba\u6570\u5206\u5e03\u60c5\u51b5\u3002\uff08\u7528\u6298\u7ebf\u56fe\u8bd5\u8bd5\uff09\uff08\u6a2a\u8f74\u662f\u4e0d\u540c\u7968\u4ef7\uff0c\u7eb5\u8f74\u662f\u5b58\u6d3b\u4eba\u6570\uff09","e235ee0f":"#### 1.1.4 \u4efb\u52a1\u56db\uff1a\u5c06\u8868\u5934\u6539\u6210\u4e2d\u6587\uff0c\u7d22\u5f15\u6539\u4e3a\u4e58\u5ba2ID [\u5bf9\u4e8e\u67d0\u4e9b\u82f1\u6587\u8d44\u6599\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ffb\u8bd1\u6765\u66f4\u76f4\u89c2\u7684\u719f\u6089\u6211\u4eec\u7684\u6570\u636e]\nPassengerId => \u4e58\u5ba2ID  \nSurvived    => \u662f\u5426\u5e78\u5b58   \nPclass      => \u4e58\u5ba2\u7b49\u7ea7(1\/2\/3\u7b49\u8231\u4f4d)  \nName        => \u4e58\u5ba2\u59d3\u540d  \nSex         => \u6027\u522b                 \nAge         => \u5e74\u9f84                 \nSibSp       => \u5802\u5144\u5f1f\/\u59b9\u4e2a\u6570  \nParch       => \u7236\u6bcd\u4e0e\u5c0f\u5b69\u4e2a\u6570  \nTicket      => \u8239\u7968\u4fe1\u606f             \nFare        => \u7968\u4ef7                \nCabin       => \u5ba2\u8231                \nEmbarked    => \u767b\u8239\u6e2f\u53e3             ","662c050f":"#### 2.4.6 \u4efb\u52a1\u516d\uff1a\u5b8c\u6210\u7684\u6570\u636e\u4fdd\u5b58\u4e3aresult.csv","b448a338":"#### 1.4.1 \u4efb\u52a1\u4e00\uff1apandas\u4e2d\u6709\u4e24\u4e2a\u6570\u636e\u7c7b\u578bDateFrame\u548cSeries\uff0c\u901a\u8fc7\u67e5\u627e\u7b80\u5355\u4e86\u89e3\u4ed6\u4eec\u3002\u7136\u540e\u81ea\u5df1\u5199\u4e00\u4e2a\u5173\u4e8e\u8fd9\u4e24\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u5c0f\u4f8b\u5b50\ud83c\udf30[\u5f00\u653e\u9898]","d3708245":"#### 1.6.2 \u4efb\u52a1\u4e8c\uff1a\u5bf9\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\uff08trian.csv\uff09\u6309\u7968\u4ef7\u548c\u5e74\u9f84\u4e24\u5217\u8fdb\u884c\u7efc\u5408\u6392\u5e8f\uff08\u964d\u5e8f\u6392\u5217\uff09\uff0c\u4ece\u6570\u636e\u4e2d\u4f60\u80fd\u53d1\u73b0\u4ec0\u4e48","5c0e2282":"#### 1.4.4\u4efb\u52a1\u56db\uff1a\u67e5\u770b\"Cabin\"\u8fd9\u5217\u7684\u6240\u6709\u503c[\u6709\u591a\u79cd\u65b9\u6cd5]","e03084a3":"#### 1.5.5 \u4efb\u52a1\u4e94\uff1a\u4f7f\u7528iloc\u65b9\u6cd5\u5c06midage\u7684\u6570\u636e\u4e2d\u7b2c100\uff0c105\uff0c108\u884c\u7684\"Pclass\"\uff0c\"Name\"\u548c\"Sex\"\u7684\u6570\u636e\u663e\u793a\u51fa\u6765","54be05c2":"#### 1.5.3 \u4efb\u52a1\u4e09\uff1a\u5c06midage\u7684\u6570\u636e\u4e2d\u7b2c100\u884c\u7684\"Pclass\"\u548c\"Sex\"\u7684\u6570\u636e\u663e\u793a\u51fa\u6765","19b4a617":"#### 2.7.2 \u4efb\u52a1\u4e8c\uff1a\u53ef\u89c6\u5316\u5c55\u793a\u6cf0\u5766\u5c3c\u514b\u53f7\u6570\u636e\u96c6\u4e2d\u7537\u5973\u4e2d\u751f\u5b58\u4eba\u6570\u5206\u5e03\u60c5\u51b5\uff08\u7528\u67f1\u72b6\u56fe\u8bd5\u8bd5\uff09\u3002","99c11801":"#### 1.4.5 \u4efb\u52a1\u4e94\uff1a\u52a0\u8f7d\u6587\u4ef6\"test_1.csv\"\uff0c\u7136\u540e\u5bf9\u6bd4\"train.csv\"\uff0c\u770b\u770b\u6709\u54ea\u4e9b\u591a\u51fa\u7684\u5217\uff0c\u7136\u540e\u5c06\u591a\u51fa\u7684\u5217\u5220\u9664\n\u7ecf\u8fc7\u6211\u4eec\u7684\u89c2\u5bdf\u53d1\u73b0\u4e00\u4e2a\u6d4b\u8bd5\u96c6test_1.csv\u6709\u4e00\u5217\u662f\u591a\u4f59\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a\u591a\u4f59\u7684\u5217\u5220\u53bb","30fdfb40":"#### 1.5.4 \u4efb\u52a1\u56db\uff1a\u4f7f\u7528loc\u65b9\u6cd5\u5c06midage\u7684\u6570\u636e\u4e2d\u7b2c100\uff0c105\uff0c108\u884c\u7684\"Pclass\"\uff0c\"Name\"\u548c\"Sex\"\u7684\u6570\u636e\u663e\u793a\u51fa\u6765","0b2869db":"#### 1.2.3 \u4efb\u52a1\u4e09\uff1a\u5224\u65ad\u6570\u636e\u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u7684\u5730\u65b9\u8fd4\u56deTrue\uff0c\u5176\u4f59\u5730\u65b9\u8fd4\u56deFalse\n","188e1ca3":"#### 1.5.1 \u4efb\u52a1\u4e00\uff1a \u6211\u4eec\u4ee5\"Age\"\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u663e\u793a\u5e74\u9f84\u572810\u5c81\u4ee5\u4e0b\u7684\u4e58\u5ba2\u4fe1\u606f\u3002","7a73ec64":"#### 2.4.2\uff1a\u4efb\u52a1\u4e8c\uff1a\u4f7f\u7528concat\u65b9\u6cd5\uff1a\u5c06\u6570\u636etrain-left-up.csv\u548ctrain-right-up.csv\u6a2a\u5411\u5408\u5e76\u4e3a\u4e00\u5f20\u8868\uff0c\u5e76\u4fdd\u5b58\u8fd9\u5f20\u8868\u4e3aresult_up","d571bde9":"#### 2.7.1 \u4efb\u52a1\u4e00\uff1a\u8ddf\u7740\u4e66\u672c\u7b2c\u4e5d\u7ae0\uff0c\u4e86\u89e3matplotlib\uff0c\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u9879\uff0c\u5bf9\u5176\u8fdb\u884c\u57fa\u672c\u53ef\u89c6\u5316","46e781dc":"#### 1.2.1 \u4efb\u52a1\u4e00\uff1a\u67e5\u770b\u6570\u636e\u7684\u57fa\u672c\u4fe1\u606f","afcb3598":"#### 2.3.3 \u4efb\u52a1\u4e09\uff08\u9644\u52a0\uff09\uff1a\u4ece\u7eaf\u6587\u672cName\u7279\u5f81\u91cc\u63d0\u53d6\u51faTitles\u7684\u7279\u5f81(\u6240\u8c13\u7684Titles\u5c31\u662fMr,Miss,Mrs\u7b49)\n","8ec1e94c":"#### 1.4.2 \u4efb\u52a1\u4e8c\uff1a\u6839\u636e\u4e0a\u8282\u8bfe\u7684\u65b9\u6cd5\u8f7d\u5165\"train.csv\"\u6587\u4ef6"}}