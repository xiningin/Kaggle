{"cell_type":{"cd693719":"code","e840a237":"code","c465c50b":"code","3eba78eb":"code","14bc9334":"code","714ce153":"code","64675545":"code","080c19fd":"code","437d90b6":"code","17f29564":"code","0b7a5f10":"code","7024c549":"code","a2b41650":"code","cf3b8a2b":"code","1067d639":"code","592113d0":"code","b76be05b":"code","ed5dc805":"code","52ab3331":"code","b964007c":"code","e6a32c58":"code","82057055":"code","1f02e397":"code","8ae9eaa9":"code","a8a397a1":"code","5e04d2de":"code","4e001db8":"code","e7fd9010":"code","80e45a69":"code","db0c96f7":"code","461a10fb":"code","5b805581":"markdown","862fcb07":"markdown","2d01a7c7":"markdown","e8d41736":"markdown","60ef0f44":"markdown","7e978745":"markdown","ed909b6d":"markdown","7d5feab8":"markdown","d12893ed":"markdown","ed42551d":"markdown","5bb88c26":"markdown","7be43d50":"markdown","e2c84879":"markdown","44201319":"markdown","69232d25":"markdown","6d6554eb":"markdown","400d0a4d":"markdown","f554100f":"markdown","310ea1f7":"markdown","b0d20acf":"markdown"},"source":{"cd693719":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e840a237":"! pip install calmap\n! pip install pycountry\n! pip install pycountry-convert\n! pip install chart-studio\n! pip install plotly-geo\n# # #dependencies needed","c465c50b":"import os \nimport re\nimport json, requests\nimport random\nfrom urllib.request import urlopen\n\nimport numpy as np\nimport pandas as pd\nfrom pandas.core.groupby import generic as groupby_generic\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import ticker\nimport pycountry_convert as pc\n\nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport geopandas as gpd\nimport calmap\nimport folium\nimport branca\nimport cufflinks as cf\nimport matplotlib\nimport plotly\nimport plotly.offline as py\nimport plotly.graph_objects as go","3eba78eb":"df = pd.read_csv ('..\/input\/nys-chemical-dependence-treatment-prog-admissions\/chemical-dependence-treatment-program-admissions-beginning-2007.csv') #dataset provided by OASAS Kaggle\nother_df = pd.read_csv('..\/input\/treatment-providers-new-york-state\/Treatment_Providers_OASAS_Directory_.csv')#external dataset also provided by OASAS\nother_df.drop_duplicates(subset=\"PROGRAM_NAME\")#dropping names of program facilites","14bc9334":"df","714ce153":"other_df","64675545":"admission_type = pd.DataFrame(df.groupby(['Year'])['Admissions'].sum()).reset_index()\nfig1 = go.Figure()\n\nfig1.add_trace(go.Scatter(\n    x=admission_type['Year'], \n    y=admission_type['Admissions'], \n    name='Rate of decline'))\n\nfig1.add_trace(go.Scatter(\n    x=admission_type['Year'], \n    y=admission_type['Admissions'], \n    mode='markers', \n    name='Total admits', \n    marker=dict(color='Red',line=dict(width=5, color='Red'))))\n\nfig1.layout.update(\n    title_text='Total Admissions (2007-2018)',\n    \n    xaxis_showgrid=False, yaxis_showgrid=False, \n    width=850,\n    height=800,font=dict(\n    family='Arial',\n    size=20,\n    color=\"Black\"),\n    \n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=20,\n            color='#000000',\n        )\n    )\n)\nfig1.show()","080c19fd":"last_year = df[df['Year']>= 2018]\nlast_year = pd.DataFrame(last_year.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nlast_year = last_year.sort_values('Admissions',ascending=True).set_index('County of Program Location')\nlast_year = pd.DataFrame(last_year)\nlast_year['group'] = last_year.index\n\nlast_year_color = ['#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100',\n '#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100',\n '#FF9100','#FF9100', '#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100',\n '#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#FF9100','#d87b00',\n '#d87b00','#d87b00','#d87b00','#d87b00']\n\n\nlast_year_data  = go.Data([\n    go.Bar(\n        y = last_year.group,\n        x = last_year['Admissions'],\n        text=last_year['Admissions'],\n        marker=dict(\n            color=last_year_color),\n            orientation='h',\n            textposition='outside',\n            width=.70)])\nlast_year_layout = go.Layout(\n    font=dict(\n        color='#000000',\n        family='Arial',\n        size=11),\n    height = 1000,\n    width = 1085,\n    margin=go.Margin(l=100),\n    title = \"Rate of Admissions: 2018\",\n    titlefont=dict(\n        color='#000000',\n        family='Arial  ',\n        size=15),\n    xaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial  ',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Counties\",\n        titlefont=dict(\n            family='Arial  ',\n            size=14,\n            color='#000000',\n        )\n    )\n)\nlast_year_fig  = go.Figure(data=last_year_data, layout=last_year_layout)\nlast_year_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(last_year_fig)","437d90b6":"counties_df = df[df['Year']>= 2016]\ndf_type = pd.DataFrame(counties_df.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\ndf_type = df_type.sort_values('Admissions',ascending=True).set_index('County of Program Location')\ndf_type = pd.DataFrame(df_type)\ndf_type['group'] = df_type.index\n\n\ndf_type_color = ['#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC',\n                     '#0099CC','#0099CC','#0099CC','#0099CC','#0099CC', '#0099CC','#0099CC','#0099CC','#0099CC','#0099CC',\n                     '#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC',\n                     '#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC',\n                     '#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC','#0099CC',\n                     '#0099CC','#0099CC','#0099CC','#0099CC','#003a79','#003a79','#003a79','#003a79','#003a79'\n                     ]\ndf_type_data  = go.Data([\n            go.Bar(\n                y = df_type.group,\n                x = df_type['Admissions'],\n                text=df_type['Admissions'],\n                marker=dict(color=\n                    df_type_color),\n                orientation='h',\n                textposition='outside',\n                width=.70,\n            )])\ndf_type_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=11),\n    height = 1000,\n    width = 1085,\n    margin=go.Margin(l=100),\n    title = \"Rate of Admissions: 2016-2018\",\n    titlefont=dict(color='#000000',\n                   family='Arial  ',\n                   size=15),\n    xaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial  ',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Counties\",\n        titlefont=dict(\n            family='Arial  ',\n            size=14,\n            color='#000000',\n        )\n    )\n)        \ndf_type_fig = go.Figure(data=df_type_data, layout=df_type_layout)\ndf_type_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(df_type_fig)","17f29564":"all_years = pd.DataFrame(df.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nall_years = all_years.sort_values('Admissions',ascending=True).set_index('County of Program Location')\nall_years = pd.DataFrame(all_years)\nall_years['group'] = all_years.index\n\nall_years_color = ['#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B',\n                      '#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B',\n                     '#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B',\n                      '#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B',\n                     '#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#53C60B','#2B7000','#2B7000','#2B7000','#2B7000','#2B7000'\n                     ]\n\nall_years_data  = go.Data([\n            go.Bar(\n                y = all_years.group,\n                x = all_years['Admissions'],\n                text=all_years['Admissions'],\n                marker=dict(\n                color=all_years_color),\n                orientation='h',\n                textposition='outside',\n                width=.70\n        )])\nall_years_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=11),\n    height = 1000,\n    width = 1085,\n    margin=go.Margin(l=100),\n    title = \"Rate of Admissions: 2007-2018\",\n    titlefont=dict(color='#000000',\n                   family='Arial  ',\n                   size=15),\n    xaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial  ',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Counties\",\n        titlefont=dict(\n            family='Arial  ',\n            size=14,\n            color='#000000',\n        )\n    )\n)        \nall_years_fig  = go.Figure(data=all_years_data, layout=all_years_layout)\nall_years_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(all_years_fig)","0b7a5f10":"chor_map = pd.DataFrame(df.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nchor_map = chor_map.sort_values('Admissions',ascending=True).set_index('County of Program Location')\nchor_map[\"Fips\"] = chor_map.index\nchor_map[\"Fips\"].replace({\"New York\": \"36061\", \"Queens\": \"36081\", \"Bronx\":\"36005\", \"Suffolk\":\"36103\",\"Kings\":\"36047\",\"Erie\":\"36029\",\"Westchester\":\"36119\",\n                        \"Monroe\":\"36055\",\"Nassau\":\"36059\",\"Onondaga\":\"36067\",\"Richmond\":\"36085\",\"Schenectady\":\"36093\",\"Albany\":\"36001\",\"Dutchess\":\"36027\",\n                        \"Putnam\":\"36079\",\"Orange\":\"36071\",\"Oneida\":\"36065\",\"Niagara\":\"36063\",\"Rockland\":\"36087\", \"Ulster\":\"36111\",\"Broome\":\"36007\",\"St Lawrence\":\"36089\",\n                        \"Ontario\": \"36069\",\"Rensselaer\":\"36083\",\"Sullivan\":\"36105\", \"Steuben\":\"36101\",\"Chautauqua\":\"36013\", \"Genesee\":\"36037\",\"Chemung\":\"36015\",\n                        \"Warren\":\"36113\",\"Franklin\":\"36033\", \"Tompkins\":\"36109\", \"Jefferson\":\"36045\",\"Clinton\":\"36019\",\"Oswego\":\"36075\",\"Cattaraugus\":\"36009\",\n                        \"Wayne\":\"36117\",\"Saratoga\":\"36091\",\"Cayuga\":\"36011\",\"Montgomery\":\"36057\",\"Delaware\":\"36025\",\"Seneca\":\"36099\",\"Cortland\":\"36023\",\"Livingston\":\"36051\",\n                        \"Columbia\":\"36021\",\"Greene\":\"36039\",\"Fulton\":\"36035\",\"Orleans\":\"36073\",\"Chenango\":\"36017\",\"Allegany\":\"36003\",\"Herkimer\":\"36043\",\"Otsego\":\"36077\",\n                        \"Wyoming\":\"36121\",\"Washington\":\"36115\",\"Madison\":\"36053\",\"Essex\":\"36031\",\"Schoharie\":\"36095\",\"Schuyler\":\"36097\",\"Tioga\":\"36107\",\"Yates\":\"36123\",\n                        \"Lewis\":\"36049\"}, inplace=True)\n#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nchor_values = chor_map['Admissions'].tolist()\nchor_fips = chor_map['Fips'].tolist()\nendpts = list(np.mgrid[min(chor_values):max(chor_values):4j])\ncolorscale = [\"#aecff4\",\"#62a7f4\",\"#064790\",\"#042a54\",\"#0677f4\",\n              \"#4989bc\",\"#60a7c7\",\"#85c5d3\",\"#b7e0e4\",\"#eafcfd\"]\n\nchor_map_fig = ff.create_choropleth(\n    fips=chor_fips, values=chor_values, scope=['New York'], show_state_data=True,\n    colorscale=colorscale, round_legend_values=True, binning_endpoints=endpts, \n    plot_bgcolor='rgb(255,255,255)',\n    paper_bgcolor='rgb(255,255,255)',\n    legend_title='Rate of Admissions: 2007-2018',\n    county_outline={'color': 'rgb(255,255,255)', 'width': 0.5},\n    exponent_format=True\n)\nchor_map_fig.layout.template = None\nchor_map_fig.show()","7024c549":"new_york_loc = df[df['County of Program Location']== 'New York']\nnew_york_loc = pd.DataFrame(new_york_loc.groupby(['Year','County of Program Location'])['Admissions'].sum()).reset_index()\nnew_york_loc = new_york_loc.sort_values('Year',ascending=True).set_index('Year').head(20)\nnew_york_loc = pd.DataFrame(new_york_loc)\nnew_york_loc['group'] = new_york_loc.index\n\nbronx_loc = df[df['County of Program Location']== 'Bronx']\nbronx_loc = pd.DataFrame(bronx_loc.groupby(['Year','County of Program Location'])['Admissions'].sum()).reset_index()\nbronx_loc = bronx_loc.sort_values('Year',ascending=True).set_index('Year').head(20)\nbronx_loc = pd.DataFrame(bronx_loc)\nbronx_loc['group'] = bronx_loc.index\n\nqueens_loc = df[df['County of Program Location']== 'Queens']\nqueens_loc = pd.DataFrame(queens_loc.groupby(['Year','County of Program Location'])['Admissions'].sum()).reset_index()\nqueens_loc = queens_loc.sort_values('Year',ascending=True).set_index('Year').head(20)\nqueens_loc = pd.DataFrame(queens_loc)\nqueens_loc['group'] = queens_loc.index\n\nkings_loc = df[df['County of Program Location']== 'Kings']\nkings_loc = pd.DataFrame(kings_loc.groupby(['Year','County of Program Location'])['Admissions'].sum()).reset_index()\nkings_loc = kings_loc.sort_values('Year',ascending=True).set_index('Year').head(20)\nkings_loc = pd.DataFrame(kings_loc)\nkings_loc['group'] = kings_loc.index\n\nsuffolk_loc = df[df['County of Program Location']== 'Suffolk']\nsuffolk_loc = pd.DataFrame(suffolk_loc.groupby(['Year','County of Program Location'])['Admissions'].sum()).reset_index()\nsuffolk_loc = suffolk_loc.sort_values('Year',ascending=True).set_index('Year').head(20)\nsuffolk_loc = pd.DataFrame(suffolk_loc)\nsuffolk_loc['group'] = suffolk_loc.index\n\n\ntop_five_fig = go.Figure()\n\ntop_five_fig.add_trace(go.Bar(x=new_york_loc.group,\n                     y=new_york_loc['Admissions'],\n                     name='New York',\n                     marker=dict(color='rgb(102, 178, 255)'),\n                     orientation='v',\n                     textposition='outside',\n                ))\n\ntop_five_fig.add_trace(go.Bar(x=bronx_loc.group,\n                     y=bronx_loc['Admissions'],\n                     name='Bronx',\n                     marker=dict(color='rgb(240, 102, 255)'),\n                     orientation='v',\n                     textposition='outside',\n                ))\ntop_five_fig.add_trace(go.Bar(x=kings_loc.group,\n                     y=kings_loc['Admissions'],\n                     name='Kings',\n                     marker=dict(color='rgb(127, 0, 255)'),\n                     orientation='v',\n                     textposition='outside',\n                ))\ntop_five_fig.add_trace(go.Bar(x=queens_loc.group,\n                     y=queens_loc['Admissions'],\n                     name='Queens',\n                     marker=dict(color='rgb(51, 51, 255)'),\n                     orientation='v',\n                     textposition='outside',\n                ))\ntop_five_fig.add_trace(go.Bar(x=suffolk_loc.group,\n                     y=suffolk_loc['Admissions'],\n                     name='Suffolk',\n                     marker=dict(color='rgb(0, 0, 102)'),\n                     orientation='v',\n                     textposition='outside',\n                ))\n\n\ntop_five_fig.update_layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=11),\n    height = 900,\n    width = 1000,\n    title = 'Top Five Leaders of Admissions: 2007-2018',\n    titlefont=dict(family='Arial', \n                   size=15),\n    xaxis=dict(\n        title='Years',\n        titlefont_size=14,\n        tickfont_size=14,\n        titlefont=dict(\n            family='Arial',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title='Admissions',\n        titlefont_size=14,\n        tickfont_size=14,\n        titlefont=dict(\n            family='Arial',\n            size=14,\n            color='#000000',\n        )\n    ),\n    legend=dict(\n        x=1,\n        y=1,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(250, 2, 22, 0)',\n        borderwidth=10,\n\n    ),\n    barmode='group',\n    bargap=0.40, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.1,# gap between bars of the same location coordinate.\n)\ntop_five_fig.show()","a2b41650":"newly_admitted = df[df['Year']>=2018]\nnewly_admitted = pd.DataFrame(newly_admitted.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nnewly_admitted.index = newly_admitted[\"County of Program Location\"]\nnewly_admitted = newly_admitted.drop(['County of Program Location'],axis=1)\n\nnewly_admitted_color = ['#95b9cc','#a6cee3','#b7d7e8','#6e9981','#97c7ac','#FBB537','#abd2bc','#bbdbc9','#fbc35e','#fcd287']\nnewly_admitted_labels =['New York City','Hudson Valley','Long Island','Western NY','Finger lakes','Capital District','Central New York',\n         'Southern Tier', 'North Country', 'Mohawk Valley']\nnewly_admitted_sizes = [100222,43800,31717,23107,21173,20564,13355,9694,6607,5765]\nnewly_admitted_explode = (0.0)\n\nnewly_admitted_fig = go.Figure(data=[go.Pie(\n    labels=newly_admitted_labels, \n    values=newly_admitted_sizes, \n    hole=.3,sort=False)])\n\nnewly_admitted_fig.update_traces(marker=dict(colors=newly_admitted_color))\nnewly_admitted_fig.update_layout(\n    font=dict(\n        color='#000000',\n        family='Arial',\n        size=12.5),\n    height = 500,\n    width = 1200,\n    margin=go.Margin(l=100),\n    title = 'Percentage of Admits by Subregion: 2018',\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=18)\n)\nnewly_admitted_fig.show()","cf3b8a2b":"new_admits = df[df['Year']>=2016]\nnew_admits = pd.DataFrame(new_admits.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nnew_admits.index = new_admits[\"County of Program Location\"]\nnew_admits = new_admits.drop(['County of Program Location'],axis=1)\n\nnew_admits_color = ['#95b9cc','#a6cee3','#b7d7e8','#6e9981','#97c7ac','#FBB537','#abd2bc','#bbdbc9','#fcd287','#fbc35e']\nnew_admits_labels =['New York City','Hudson Valley','Long Island','Western NY','Finger lakes','Captial District','Central New York',\n        'Southern Tier','Mohawk Valley','North Country']\nnew_admits_sizes = [305057,129722,97855,67192,63296,60583,40078,29051,18813,17749]\nexplode = (0.0)\n\nnew_admits_fig = go.Figure(data=[go.Pie(\n    labels=new_admits_labels, values=new_admits_sizes, hole=.3,sort=False)])\nnew_admits_fig.update_traces(marker=dict(colors=new_admits_color))\nnew_admits_fig.update_layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=12.5),\n    height = 500,\n    width = 1200,\n    margin=go.Margin(l=100),\n    title = 'Percentage of Admits by Subregion: 2016-2018',\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=18)\n)\nnew_admits_fig.show()","1067d639":"sub_all = pd.DataFrame(df.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nsub_all.index = sub_all[\"County of Program Location\"]\nsub_all = sub_all.drop(['County of Program Location'],axis=1)\n\nsub_all_color = ['#95b9cc','#a6cee3','#b7d7e8','#6e9981','#FBB537','#97c7ac','#abd2bc','#bbdbc9','#fcd287','#fbc35e']\nsub_all_labels =['New York City','Hudson Valley','Long Island','Western NY','Captial District','Finger lakes','Central New York',\n        'Southern Tier','Mohawk Valley','North Country']\nsub_all_sizes = [1460058,507182,394681,266946,245825,236563,150023,93414,72656,69685]\nexplode = (0.0)\n\nsub_all_fig = go.Figure(data=[go.Pie(\n    labels=sub_all_labels,values=sub_all_sizes, hole=.3,sort=False)])\nsub_all_fig.update_traces(marker=dict(colors=sub_all_color))\nsub_all_fig.update_layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=12.5),\n    height = 500,\n    width = 1200,\n    margin=go.Margin(l=100),\n    title = 'Percentage of Admits by Subregion: 2007-2018',\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=18)\n)\nsub_all_fig.show()","592113d0":"last_sub = df[df['Year']>=2018]\nlast_sub = pd.DataFrame(last_sub.groupby(['Primary Substance Group'])['Admissions'].sum()).reset_index()\nlast_sub = last_sub.sort_values('Admissions',ascending=False).set_index('Primary Substance Group')\nlast_sub = pd.DataFrame(last_sub)\nlast_sub['group'] = last_sub.index\n\n\nlast_sub_color = ['#FF9100','#ff9914','#ffa227','#ffaa3b','#ffb34e','#ffbb62']\n\nlast_sub_data  = go.Data([\n            go.Bar(\n                y = last_sub['Admissions'],\n                x = last_sub.group,\n                text=last_sub['Admissions'],\n                marker=dict(\n                color=last_sub_color),\n                orientation='v',\n                textposition='outside'\n        )])\nlast_sub_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=12),\n    height = 560,\n    width = 1000,\n    margin=go.Margin(l=100),\n    title = \"Admissions by Substance: 2018\",\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=15),\n    xaxis=dict(\n        title=\"Substances\",\n        titlefont=dict(\n            family='Arial',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial ',\n            size=14,\n            color='#000000',\n        )\n    )\n)        \nlast_sub_fig  = go.Figure(data=last_sub_data, layout=last_sub_layout)\nlast_sub_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(last_sub_fig)","b76be05b":"new_subs = df[df['Year']>=2016]\nnew_subs = pd.DataFrame(new_subs.groupby(['Primary Substance Group'])['Admissions'].sum()).reset_index()\nnew_subs = new_subs.sort_values('Admissions',ascending=False).set_index('Primary Substance Group')\nnew_subs = pd.DataFrame(new_subs)\nnew_subs['group'] = new_subs.index\n\n\nnew_subs_color = ['#00b6f3','#08c1ff','#1bc6ff','#2fcbff','#43d0ff','#56d5ff',]\n\nnew_subs_data  = go.Data([\n            go.Bar(\n                y = new_subs['Admissions'],\n                x = new_subs.group,\n                text=new_subs['Admissions'],\n                marker=dict(\n                color=new_subs_color),\n                orientation='v',\n                textposition='outside'\n        )])\nnew_subs_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=12),\n    height = 560,\n    width = 1000,\n    margin=go.Margin(l=100),\n    title = \"Admissions by Substance: 2016-2018\",\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=15),\n    xaxis=dict(\n        title=\"Substances\",\n        titlefont=dict(\n            family='Arial ',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial',\n            size=14,\n            color='#000000',\n        )\n    )\n)        \nnew_subs_fig  = go.Figure(data=new_subs_data, layout=new_subs_layout)\nnew_subs_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(new_subs_fig)","ed5dc805":"prim_subs = df\nprim_subs = pd.DataFrame(prim_subs.groupby(['Primary Substance Group'])['Admissions'].sum()).reset_index()\nprim_subs = prim_subs.sort_values('Admissions',ascending=False).set_index('Primary Substance Group')\nprim_subs = pd.DataFrame(prim_subs)\nprim_subs['group'] = prim_subs.index\n\nprim_subs_color = ['#63eb0d','#6df21a','#79f32c','#85f43f','#90f551','#9cf664']\nprim_subs_data  = go.Data([\n            go.Bar(\n                y = prim_subs['Admissions'],\n                x = prim_subs.group,\n                text=prim_subs['Admissions'],\n                marker=dict(\n                color=prim_subs_color),\n                orientation='v',\n                textposition='outside'\n        )])\nprim_subs_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=12),\n    height = 560,\n    width = 1000,\n    margin=go.Margin(l=100),\n    title = \"Admissions by Substance: 2007-2018\",\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=15),\n    xaxis=dict(\n        title=\"Substances\",\n        titlefont=dict(\n            family='Arial',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial',\n            size=14,\n            color='#000000',\n        )\n    )\n)\nprim_subs_fig  = go.Figure(data=prim_subs_data, layout=prim_subs_layout)\nprim_subs_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(prim_subs_fig)","52ab3331":"new_age = df[df['Year']>= 2018]\nnew_age = pd.DataFrame(new_age.groupby(['Age Group'])['Admissions'].sum()).reset_index()\nnew_age_fig = go.Figure()\n\nnew_age_fig.add_trace(go.Scatter(\n    x=new_age['Age Group'],\n    y=new_age['Admissions'],\n    name='Rate of Growth',\n    line = dict(shape = 'linear'),connectgaps = True))\n\nnew_age_fig.add_trace(go.Scatter(\n    x=new_age['Age Group'], \n    y=new_age['Admissions'], \n    mode='markers', \n    name='Total Admits', \n    marker=dict(color='orange',line=dict(width=5, color='orange'))))\n\nnew_age_fig.layout.update(\n    font=dict(color='#000000',\n             family='Arial',\n             size=13),\n    title_text='Total Admissions by Age Group: 2018',\n    xaxis_showgrid=False,\n    yaxis_showgrid=False, \n    width=800,height=600,\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=15),\n    \n    xaxis=dict(\n        title=\"Age Groups\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=15,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=15,\n            color='#000000',\n        )\n    )\n)\nnew_age_fig.layout.paper_bgcolor = 'White'\nnew_age_fig.show()\n","b964007c":"recent_age = df[df['Year']>= 2016]\nrecent_age = pd.DataFrame(recent_age.groupby(['Age Group'])['Admissions'].sum()).reset_index()\nrecent_age_fig = go.Figure()\n\nrecent_age_fig.add_trace(go.Scatter(x=recent_age['Age Group'], y=recent_age['Admissions'], name='Rate of Growth'))\nrecent_age_fig.add_trace(go.Scatter(x=recent_age['Age Group'], y=recent_age['Admissions'], mode='markers', name='Total Admits', marker=dict(color='darkblue',line=dict(width=5, color='darkblue'))))\nrecent_age_fig.layout.update(\n    font=dict(color='#000000',\n             family='Arial',\n             size=13),\n    title_text='Total Admissions by Age Group: 2016-2018',\n    xaxis_showgrid=False,\n    yaxis_showgrid=False, \n    width=800,height=600,\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=15),\n    \n    xaxis=dict(\n        title=\"Age Groups\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=15,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=15,\n            color='#000000',\n        )\n    )\n)\nrecent_age_fig.layout.paper_bgcolor = 'White'\nrecent_age_fig.show()","e6a32c58":"overall_age = pd.DataFrame(df.groupby(['Age Group'])['Admissions'].sum()).reset_index()\noverall_age_fig = go.Figure()\n\noverall_age_fig.add_trace(go.Scatter(\n    x=overall_age['Age Group'], \n    y=overall_age['Admissions'], \n    name='Rate of Growth'))\noverall_age_fig.add_trace(go.Scatter(\n    x=overall_age['Age Group'], \n    y=overall_age['Admissions'], \n    mode='markers', name='Total Admits', \n    marker=dict(color='Green',line=dict(width=5, color='Green'))))\noverall_age_fig.layout.update(\n    title_text='Total Admissions by Age Group: 2007-2018',\n    xaxis_showgrid=False,\n    yaxis_showgrid=False, \n    width=800,height=600,\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=15),\n                   \n        xaxis=dict(\n        title=\"Age Groups\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=15,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=15,\n            color='#000000',\n        )\n    )\n)\noverall_age_fig.layout.paper_bgcolor = 'White'\noverall_age_fig.show()","82057055":"pro_cat = df\npro_cat = pd.DataFrame(pro_cat.groupby(['Program Category'])['Admissions'].sum()).reset_index()\npro_cat = pro_cat.sort_values('Admissions',ascending=False).set_index('Program Category')\npro_cat = pd.DataFrame(pro_cat)\npro_cat['group'] = pro_cat.index\n\nprograms = df[df['Year']>=2016]\nprograms = pd.DataFrame(programs.groupby(['Program Category'])['Admissions'].sum()).reset_index()\nprograms = programs.sort_values('Admissions',ascending=False).set_index('Program Category')\nprograms = pd.DataFrame(programs)\nprograms['group'] = programs.index\n\nnew_prog = df[df['Year']>=2018]\nnew_prog = pd.DataFrame(new_prog.groupby(['Program Category'])['Admissions'].sum()).reset_index()\nnew_prog = new_prog.sort_values('Admissions',ascending=False).set_index('Program Category')\nnew_prog = pd.DataFrame(new_prog)\nnew_prog['group'] = new_prog.index\n\nprogram_cat_fig = go.Figure()\n\nprogram_cat_fig.add_trace(go.Bar(x=pro_cat.group,\n                     y=pro_cat['Admissions'],\n                     name='2007-2018',\n                     marker_color='rgb(83, 198, 11)',\n                ))\nprogram_cat_fig.add_trace(go.Bar(x=programs.group,\n                y=programs['Admissions'],\n                name='2016-2018',\n                marker_color='rgb(0, 153, 204)'\n                ))\nprogram_cat_fig.add_trace(go.Bar(x=new_prog.group,\n                y=new_prog['Admissions'],\n                name='2018',\n                marker_color='rgb(255, 145, 0)',\n                ))\n\n\nprogram_cat_fig.update_layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=12),\n    height = 700,\n    width = 1000,\n    margin=go.Margin(l=100),\n    title = 'Admissions by Program Category',\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=19),\n    \n    xaxis=dict(\n        title='Treatment Types',\n        titlefont_size=16,\n        tickfont_size=16,\n        titlefont=dict(\n            family='Arial Bold',\n            size=18,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title='Admissions',\n        titlefont_size=16,\n        tickfont_size=16,\n        titlefont=dict(\n            family='Arial Bold',\n            size=18,\n            color='#000000',\n        )\n    ),\n    legend=dict(\n        x=1,\n        y=1,\n        borderwidth=30,\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.13, # gap between bars of adjacent location coordinates.\n    bargroupgap=0 # gap between bars of the same location coordinate.\n)\nprogram_cat_fig.show()","1f02e397":"x=['New York', 'Bronx', 'Queens', 'Kings', 'Suffolk', 'Nassau', 'Erie','Dutchess','Putnam','Rockland','Orange','Ulster','Sullivan']\nop_fig = go.Figure(go.Bar(\n    x=x, \n    y=[170501,112055,82309,135588,135107,88627,117896,20891,17054,17181,31908,12733,8664], \n    name='Outpatient'))\nop_fig.add_trace(go.Bar(x=x, y=[24759, 21136, 27599, 17693,64351,4840,18765,29158,28833,14847,13515,11429,0], name='Inpatient'))\nop_fig.add_trace(go.Bar(x=x, y=[237254, 84777, 140280, 68693, 51242, 29343,39882,21306,24468,10151,13627,11639,9034], name='Crisis'))\nop_fig.add_trace(go.Bar(x=x, y=[50246, 35505, 9363, 23649, 2705,2309,4668,816,249,889,1255,536,0], name='Opiod'))\nop_fig.add_trace(go.Bar(x=x, y=[38023, 23867, 36255,19192, 14114, 2043,10569,7125,5443,987,2382,5983,5408], name='Residential'))\n\nop_fig.update_layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=13),\n    height = 700,\n    width = 900,\n    margin=go.Margin(l=100),\n    title = 'Admissions by Program Category: 2007-2018',\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=16),\n    \n    xaxis=dict(\n        title='Southern Counties',\n        titlefont_size=15,\n        tickfont_size=15,\n        titlefont=dict(\n            family='Arial Bold',\n            size=14,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title='Admissions',\n        titlefont_size=15,\n        tickfont_size=15,\n        titlefont=dict(\n            family='Arial Bold',\n            size=14,\n            color='#000000',\n        )\n    ),\n    legend=dict(\n        x=1,\n        y=1,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(250, 2, 22, 0)',\n        borderwidth=10,\n\n    ),\n    barmode='group',\n    bargap=0.20, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.3,# gap between bars of the same location coordinate.\n\n\n)\nop_fig.update_layout(barmode='stack',\n                     xaxis={'categoryorder':'array', 'categoryarray':['New York','Queens','Bronx','Kings','Suffolk','Erie','Nassau','Dutchess','Putnam','Rockland','Orange','Ulster','Sullivan']})\nop_fig.show()","8ae9eaa9":"new_type = pd.DataFrame(other_df.groupby(['PROGRAM_NAME','PROGRAM_COUNTY','PROGRAM_TYPE']).sum()).reset_index()\nnew_type.drop_duplicates(subset=\"PROGRAM_NAME\")","a8a397a1":"treatment_avail = new_type.groupby('PROGRAM_COUNTY')['PROGRAM_TYPE'].value_counts()\ntreatment_avail = pd.DataFrame(treatment_avail.groupby('PROGRAM_COUNTY').sum()).reset_index()\ntreatment_avail = treatment_avail.sort_values('PROGRAM_TYPE',ascending=True)\n\ntreatment_avail_color = ['#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                      '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C','#DC143C','#DC143C','#DC143C',\n                     '#DC143C','#DC143C','#DC143C','#DC143C','#DC143C','#DC143C','#DC143C','#FF0000',\n                      '#FF0000','#FF0000','#FF0000','#FF0000'\n                     ]\ntreatment_avail_data  = go.Data([\n            go.Bar(y=treatment_avail[\"PROGRAM_COUNTY\"],\n                x = treatment_avail['PROGRAM_TYPE'],\n                text=treatment_avail[\"PROGRAM_TYPE\"],\n                marker=dict(\n                color=treatment_avail_color),\n                orientation='h',\n                textposition='outside',\n                width=.70,\n\n        )])\ntreatment_avail_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=15),\n    height = 1300,\n    width =980,\n    margin=go.Margin(l=100),\n    title = \"Sum of Treatment Programs\",\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=19),\n\n    xaxis=dict(\n        title=\"Counties\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Total Programs\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    )\n)\ntreatment_avail_fig  = go.Figure(data=treatment_avail_data, layout=treatment_avail_layout)\ntreatment_avail_fig.update_layout(uniformtext_minsize=3.9, uniformtext_mode='show')\npy.iplot(treatment_avail_fig)\n","5e04d2de":"new_original = pd.DataFrame(df.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nnew_original = new_original.sort_values('Admissions',ascending=True).set_index('County of Program Location')\n\nnew_second = pd.DataFrame(treatment_avail.groupby('PROGRAM_COUNTY').sum()).reset_index()\nnew_second[\"PROGRAM_COUNTY\"].replace({\"Saint Lawrence\": \"St Lawrence\"}, inplace=True)\nnew_second = new_second.sort_values('PROGRAM_TYPE',ascending=True).set_index('PROGRAM_COUNTY')\n\nmy_round = (new_second['PROGRAM_TYPE'].map(int)\/ new_original['Admissions'].map(int))\nmy_round.index.name = \"Counties\"\nnew_round = my_round * 100000\nnew_round = new_round.fillna(0)\nnew_round = round(new_round, 1)\nprint(new_round.to_markdown())","4e001db8":"per_capita = pd.DataFrame(data=new_round)\nper_capita.columns = ['Programs Available per County'] \nper_capita = per_capita.sort_values('Programs Available per County',ascending=True)\n\n\n\nper_capita_color = ['#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b',\n                     '#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b',\n                     '#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b',\n                     '#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b',\n                     '#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b','#c4bb0b',\n                     '#7A7407','#7A7407','#7A7407','#7A7407','#7A7407']\n\n\nper_capita_data  = go.Data([\n            go.Bar(\n                x = per_capita['Programs Available per County'],\n                y = per_capita.index,\n                text=per_capita['Programs Available per County'],\n                marker=dict(\n                color=per_capita_color),\n                orientation='h',\n                textposition='outside',\n                width=.70,\n        )])\nper_capita_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=13),\n    height = 1300,\n    width =980,\n    margin=go.Margin(l=100),\n    title = \"Available Treatment Programs per Capita\",\n    #`\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=19),\n    xaxis=dict(\n        title=\"Per 100,000 People\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Counties\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    )\n)        \nper_capita_fig  = go.Figure(data=per_capita_data, layout=per_capita_layout)\nper_capita_fig.update_layout(uniformtext_minsize=3.9, uniformtext_mode='show')\nper_capita_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(per_capita_fig)","e7fd9010":"counties_data = other_df\ncounties_data = counties_data.groupby('PROGRAM_COUNTY')['PROGRAM_COUNTY'].value_counts(ascending=True)\n\ncounties_data_color = ['#415478','#556e9f','#6b83b0','#608892','#fbbf55','#80a4ac','#98b5bc','#fcd287','#b0c6cb','#fddba0']\n\ncounties_data_labels =['New York City','Hudson Valley','Long Island','Western NY','Captial District','Finger lakes','Central New York','North Country','Southern Tier','Mohawk Valley']\ncounties_data_sizes = [321,133,101,78,71,69,38,30,25,24]\nexplode = (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)\ncounties_data_fig = go.Figure(data=[go.Pie(\n    labels=counties_data_labels,values=counties_data_sizes, hole=.3,sort=False)])\ncounties_data_fig.update_traces(marker=dict(colors=counties_data_color))\ncounties_data_fig.update_layout(\n    title_text=\"Sum of Treatment Programs in New York\", width=1000)\ncounties_data_fig.show()","80e45a69":"sub_all = pd.DataFrame(df.groupby(['County of Program Location'])['Admissions'].sum()).reset_index()\nsub_all.index = sub_all[\"County of Program Location\"]\nsub_all = sub_all.drop(['County of Program Location'],axis=1)\n\nsub_all_color = ['#95b9cc','#a6cee3','#b7d7e8','#6e9981','#FBB537','#97c7ac','#abd2bc','#bbdbc9','#fcd287','#fbc35e']\nsub_all_labels =['New York City','Hudson Valley','Long Island','Western NY','Captial District','Finger lakes','Central New York',\n        'Southern Tier','Mohawk Valley','North Country']\nsub_all_sizes = [1460058,507182,394681,266946,245825,236563,150023,93414,72656,69685]\nexplode = (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)\n\nsub_all_fig = go.Figure(data=[go.Pie(\n    labels=sub_all_labels,values=sub_all_sizes, hole=.3,sort=False)])\nsub_all_fig.update_traces(marker=dict(colors=sub_all_color))\nsub_all_fig.update_layout(\n    title_text=\" Percentage of Admissions by Subregions: 2007-2018\", width=1000)\nsub_all_fig.show()\n","db0c96f7":"city_count  = new_type['PROGRAM_TYPE'].value_counts()\ncity_count = city_count[:10]\ncity_count_color = ['#004789','#ff9100','#9500ff','#53c60b','#fc0505']\n\ncity_count_data  = go.Data([\n            go.Bar(\n                y = city_count.values,\n                x = city_count.index,\n                text=city_count.values,\n                marker=dict(\n                color=city_count_color),\n                orientation='v',\n                textposition='outside'\n        )])\ncity_count_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=18),\n    height = 800,\n    width = 1000,\n    margin=go.Margin(l=100),\n    title = \"Total Number of Oasas Program Categories\",\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=20),\n    xaxis=dict(\n        title=\"Program Category\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Total Sum of Programs\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    )\n)        \ncity_count_fig  = go.Figure(data=city_count_data, layout=city_count_layout)\ncity_count_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(city_count_fig)\n","461a10fb":"comparing_types = pd.DataFrame(df.groupby(['Program Category'])['Admissions'].sum()).reset_index()\ncomparing_types = comparing_types.sort_values('Admissions',ascending=False).set_index('Program Category')\n\ncomparing_types_color = ['#004789','#53c60b','#fc0505','#ff9100','#9500ff','#fc058d']\n\ncomparing_types_data  = go.Data([\n            go.Bar(\n                y = comparing_types['Admissions'],\n                x = comparing_types.index,\n                text=comparing_types['Admissions'],\n                marker=dict(\n                color=comparing_types_color),\n                orientation='v',\n                textposition='outside'\n        )])\ncomparing_types_layout = go.Layout(\n    font=dict(color='#000000',\n             family='Arial',\n             size=18),\n    height = 800,\n    width = 1000,\n    margin=go.Margin(l=100),\n    title = \"Rate of Admissions by Program Category: 2007-2018\",\n    titlefont=dict(color='#000000',\n                   family='Arial Bold',\n                   size=20),\n    xaxis=dict(\n        title=\"Program Category\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    ),\n    yaxis=dict(\n        title=\"Admissions\",\n        titlefont=dict(\n            family='Arial Bold',\n            size=17,\n            color='#000000',\n        )\n    )\n)        \ncomparing_types_fig  = go.Figure(data=comparing_types_data, layout=comparing_types_layout)\ncomparing_types_fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\npy.iplot(comparing_types_fig)","5b805581":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Rate of Admissions: Map<\/font>\n<br>\n<font size=\"4\" face=\"Arial\" color='##FF0000'>\n* Hamilton county not in Oasas dataset\n<br> \n<font size=\"4\" face=\"Arial\" color=\"Black\">\n<img src= \"https:\/\/cdn-images-1.medium.com\/max\/1600\/1*fJv5Vb4e2YNz8nMPMc9TQg.png\" width=\"600\" height=\"400\" >\n<br>\n","862fcb07":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Conclusion<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"black\">\n* More than 3 million people have admitted through Oasas affiliated treatment providers and programs\n* New York State is more inclined to admit people who are dependent on alcohol, 25\u201334 years old, whilst being treated through an outpatient, crisis, or inpatient program\n* A production in producing higher admissions corresponds with the service type, program location, and program category\n* Both datasets exemplify that the production of more treatment programs offered in those areas results in more admissions","2d01a7c7":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Rate of Admissions: Substance Group<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"Black\"> \n* Alcohol is the primary substance being used by patients admitting into treatment programs","e8d41736":"<center><font size=\"2\" face=\"Arial Bold\" color=\"red\">Average Rate of Admissions per Substance <\/font><\/center>\n<br>\n\n|  Substances|Avg Admissions Rate|\n|------------|-------------|\n|Alcohol     |121,694k|\n|Heroin      |70,525k|\n|Marijuana incl Hashish|43,797k|\n|Cocaine incl Crack|30,882k|\n|Other Opioids|17,201k|\n|All Others|8,283k|","60ef0f44":"<font size=\"4\" face=\"Arial\" color=\"Black\">This dataset was provided by [Oasas](https:\/\/data.ny.gov\/Human-Services\/Chemical-Dependence-Treatment-Program-Admissions-B\/ngbt-9rwf), which focuses on chemical dependency programs in New York State. The objective of this report is to analyze and translate the data visually. Through the process of analyzing the dataset, the following variables will be examined:<br>\n\n<font size=\"4\" face=\"Arial\" color=\"black\">\n    \n-   County of Program Location <br>\n-\tAge Group <br>\n-\tService Type <br>\n-\tProgram Category <br>\n-\tPrimary Substance Group <br>\n-\tYear <br>\n-\tAdmissions\n\n<font size=\"4\" face=\"Arial\" color=\"black\"> Another dataset was added, also provided by [Oasas](https:\/\/webapps.oasas.ny.gov\/providerDirectory\/index.cfm?search_type=2) which offers the directory of treatment providers. The data was cleaned and preprocessed prior to this report. Only the following variables will be examined:\n- Program Name\n- Program Type\n- Program County\n<br>\n\n<font size=\"4\" face=\"Arial\" color=\"black\"> Other external areas of interest that are not examined but could offer importance are as follows:\n- Comparing the population of each county vs the number of patients admitting into treatment programs\n- The average consumption of dependency substances per capita\n- The likelihood of patients readmitting\n\n<font size=\"4\" face=\"Arial\" color=\"black\">Key Findings\n<br>\n<font size=\"2\" face=\"Arial\" color=\"black\">**From 2007-2018:**\n<br>\n<font size=\"4\" face=\"Arial\" color=\"black\">\n- There was over 3 million patients admitted into New York State treatment programs, affiliated with [Oasas](https:\/\/oasas.ny.gov\/)\n- New York State averages 292k admissions per year\n- New York, Hudson Valley, and Long Island made up 65.1% of total admissions\n- Western, Finger Lakes, Central New York, and Southern Tier regions made up 21.4% of total admissions\n- Alcohol was the primary substance being consumed by patients\n- 25\u201334 year olds accounted for 25% of yearly admissions\n- Outpatient treatment was the highest facilitator of admissions\n- There is a higher ratio of admits than programs available for crisis, inpatient, and residential treatment\n\n<font size=\"4\" face=\"Arial\" color=\"black\">The analysis is ordered in the following sequence:<\/font>\n<br>\n<font size=\"4\" face=\"Arial\" color=\"#3A66C4\">\n- Total Rate of Admissions: 2007\u20132018\n- Rate of Admissions by County\n- Rate of Admissions: Map\n- Top Five Leaders of Admissions: 2007\u20132018\n- Dividing the Admissions Rates by their Subregions\n- Examining the Admissions by Substance Group\n- The Age Groups of People Admitted\n- Which Program Categories are Frequently Admitting Patients\n- Treatment Programs Available in New York\n- Analyzing Subregions of Treatment Programs\n- Comparing Program Types\n\n<font size=\"4\" face=\"Arial\" color=\"red\">This analysis was examined through the following years:\n<font size=\"4\" face=\"Arial\" color=\"black\">\n- 2018\n- 2016-2018\n- 2007-2018","7e978745":"<font size=\"6\" face=\"Arial\" color=\"#3A66C4\">Analysis<\/font>","ed909b6d":"<center><font size=\"3\" face=\"Arial Bold\" color=\"red\">Programs Available per 100,000 Patients<\/font>\n \n|  Treatment Types|Available Programs|\n|------------|-------------|\n|Residential     |83.9%|\n|Opioid      |71.4%|\n|Outpatient|28.1%|\n|Inpatient|13.0%|\n|Crisis|6.7%|<\/center>","7d5feab8":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Analyzing Subregions of Treatment Programs<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"black\">\n* The rate at which patients are admitting into treatment programs corresponds with the number of treatment services offered in that given region","d12893ed":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Rate of Admissions: Top Five Leaders<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"Black\">\n- New York City fills 15.7% of all yearly admissions\n- Queens admits 8.4% of patients per year\n- The Bronx 7.9% and Kings 7.5%\n- Suffolk County has had a yearly upswing, and filled 7.6% of New York\u2019s yearly admissions","ed42551d":"<font size=\"5\" face=\"Arial\" color=\"#3A66C4\">Implemeting External Data\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"black\">\nThe dataset can be located at [Oasas](http:\/\/). This includes the directory of the treatment providers and programs in each county. The analysis follows sequential order:\n<font size=\"4.5\" face=\"Arial\" color=\"#499DF5\">\n* Treatment Programs Available in New York\n* Analyzing Subregions of Treatment Programs\n* Comparing Program Types","5bb88c26":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Rate of Admissions: Counties<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"black\">\n- The scale of people being admitted to treatment is higher in the more populated areas\n- New York, Queens, Suffolk, Kings, Erie and Bronx counties are heavily treating patients\n- Although there is a yearly fluctuation, the scale of admissions remain relatively consistent within their counties","7be43d50":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Comparing Program Types<\/font><br>\n<font size=\"4.5\" face=\"Arial\" color=\"black\">\n- A switch of focus on offering more Crisis and Inpatient programs must be recognized\n- Even though there are many programs available for Residential and Opioid treatment, there are lower numbers of admissions being processed entirely","e2c84879":"<font size=\"5\" face=\"Arial\" color='#499DF5'>Rate of Admissions: Age Group\n<br>\n<font size=\"4.5\" face=\"Arial\" color='black'>\n- 25\u201334 year olds accounted for 75k yearly admissions\n- 35\u201354 year olds have an average above 68k admissions per year\n- 18\u201324 year olds average 41k patients per year\n- Patients over 55 years old average 29k per year, while those under the age of 18 admitted 9k per year","44201319":"<center><font size=\"2\" face=\"Arial Bold\" color=\"red\">Average Rate of Admissions per Year <\/font><\/center>\n\n|Counties    |Avg Rate Yearly          |\n|------------|------------------------|\n|New York  |44,073k   |\n|Queens    |24,650k   |\n|Bronx     |23,111k   |\n|Suffolk   |22,293k   |\n|Kings     |22,067k   |\n|Erie      |15,981k   |\n|Westchester|14,971k  |\n|Monroe    |13,354k   |\n|Nassau    |10,596k   |\n|Onondaga  |10,381k   |\n|Richmond  |7,768k    |\n|Schenectady|7,655k   |\n|Albany    |7,521k    |\n|Dutchess  |6,608k    |\n|Putnam    |6,337k    |\n|Orange    |5,225k    |\n|Oneida    |4,286k    |\n|Niagara   |3,750k    |\n|Rockland  |3,671k    |\n|Ulster    |3,526k    |\n|Broome    |3,027k    |\n|St Lawerence|2,604k  |\n|Ontario   |2,430k    |\n|Rensselaer|2,260k    |\n|Sullivan  |1,925k    |\n|Steuben   |1,857k    |","69232d25":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\"> Total Rate of Admissions: 2007\u20132018<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"Black\">\n- There has been a total admissions decrease of 9.9%\n- On average 292k people per year continue to be admitted into treatment programs affiliated with Oasas\n","6d6554eb":"# <font size=\"5\" face=\"Arial\" color=\"#000033\"><center> Examining Chemical Dependency Treatment Programs in New York State<\/center><\/font>","400d0a4d":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Treatment Programs Available in New York\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"Black\">\n- There are a total of 886 treatment programs affiliated with Oasas in New York\n- The total number of admissions per county aligns with the number of programs available\n- The areas with lower populations (i.e. Allegany County) have more treatment programs available then those with higher populations (i.e Queens County)","f554100f":"<font size=\"5\" face=\"Arial\" color='#499DF5'>Rate of Admissions: Program Category\n<br>\n<font size=\"4.5\" face=\"Arial\" color='black'>\n- Outpatient treatment was the highest facilitator of admissions in New York\n- Higher rates of outpatient, crisis, and inpatient treatments are heavily associated with the southeast regions of New York\n- The number of admissions changes depending on the location of the program categories\n- The types of programs being offered fluctuate in relation to county","310ea1f7":"<font size=\"5\" face=\"Arial\" color=\"#3A66C4\">Loading Data<\/font>","b0d20acf":"<font size=\"5\" face=\"Arial\" color=\"#499DF5\">Rate of Admissions: Subregions<\/font>\n<br>\n<font size=\"4.5\" face=\"Arial\" color=\"black\">\n- New York City, Hudson Valley, and Long Island made up 67.6% of all New York admissions\n- Western, Finger Lakes, Central , and the Southern Tier regions broke through at a rate of 21.4%\n- Capital, North Country, and Mohawk Valley totaled 11.1% of admits"}}