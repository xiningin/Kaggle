{"cell_type":{"1c8903b6":"code","504c7ac9":"code","1408da45":"code","f05d81d5":"code","76ff159c":"code","181acd0b":"code","465c3ce3":"code","6bcb8141":"code","2cd5599e":"code","c1e4567e":"code","4c1a5b3a":"code","83d5e45b":"code","a265bc1a":"code","60608392":"code","3faafa93":"code","978f8ded":"code","0d2a41bb":"code","8c6a99bd":"code","eaacdc1b":"code","867b2e15":"code","2bff1db7":"code","08229360":"code","aae5950f":"code","f0974eac":"code","a859e88b":"code","95d26cde":"code","dc5feded":"code","b084e906":"code","41b15229":"code","6ee94460":"code","896ef51c":"code","661a7e46":"code","d73c12f6":"code","f524bca1":"code","02c4ec21":"code","3fa39697":"code","4fd87e26":"code","8a2ff0fb":"code","f858a790":"code","b785c55d":"code","867eab9c":"code","b9e49854":"code","68f4a094":"code","d69e2118":"code","47746445":"code","f0990398":"code","6cbbe6c5":"code","86251ccb":"code","073f844b":"code","a54b2a04":"code","a94b97b1":"code","cd3f3fac":"code","262304b2":"code","136e908a":"code","416e2766":"code","3339dbd6":"code","b9e653f6":"code","3fb2ccde":"code","79251b4a":"code","ed3f3d2a":"code","9c6fdd50":"code","3fb7a8d9":"code","64ba6250":"code","bb2f7c9a":"code","f5c8ccda":"code","c56cda15":"code","a7a58fac":"code","1abf0807":"code","2403edd9":"code","f85c28ca":"code","6c78f1f4":"code","7c8f9962":"code","236599cb":"code","1b401850":"code","83f6234d":"markdown"},"source":{"1c8903b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","504c7ac9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib as mpl","1408da45":"test_data = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","f05d81d5":"test_data.head()","76ff159c":"train_data = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","181acd0b":"train_data.head()","465c3ce3":"test_data.tail()","6bcb8141":"train_data.tail()","2cd5599e":"sol = test_data['Id']","c1e4567e":"train_data.shape","4c1a5b3a":"test_data.shape","83d5e45b":"train_data.info()","a265bc1a":"test_data.info()","60608392":"train_data.columns","3faafa93":"test_data.columns","978f8ded":"train_data.describe()","0d2a41bb":"test_data.describe()","8c6a99bd":"train_data.isnull().sum()","eaacdc1b":"test_data.isnull().sum()","867b2e15":"train_data.drop(['PoolQC','MiscFeature','Alley','Fence','GarageYrBlt'], axis = 1, inplace = True)","2bff1db7":"train_data.describe()","08229360":"test_data.drop(['PoolQC','MiscFeature','Alley','Fence','GarageYrBlt'], axis = 1, inplace = True)","aae5950f":"test_data.describe()","f0974eac":"train_data.isnull().sum()","a859e88b":"test_data.isnull().sum()","95d26cde":"test_data.drop(['LotFrontage'], axis = 1, inplace = True)","dc5feded":"train_data.drop(['LotFrontage'], axis = 1, inplace = True)","b084e906":"test_data.info()","41b15229":"train_data.info()","6ee94460":"train_data.isnull().sum()","896ef51c":"test_data.isnull().sum()","661a7e46":"plt.hist(train_data[\"SalePrice\"], 20, lw = 0.89, ec = 'black')\nplt.xlabel('Sale Price')\nplt.ylabel('Frequency')\nplt.title('Distribution of Sale Price of House')","d73c12f6":"plt.hist(train_data[\"SaleType\"], 20, lw = 0.89, ec = 'black')\nplt.xlabel('Sale Type')\nplt.ylabel('Frequency')\nplt.title('Distribution of Sale Type of House')","f524bca1":"max_sellingprice = train_data['SalePrice'].max()\nprint('The Largest Sale Price :',max_sellingprice,'usd')","02c4ec21":"max_YrSold = train_data['YrSold'].max()\nprint('The Largest Sale Year :',max_YrSold)","3fa39697":"column = ['SalePrice','OverallQual','GrLivArea','GarageCars','TotalBsmtSF','FullBath','YearBuilt']\nsns.pairplot(train_data[column],height=4)","4fd87e26":"train_data['MasVnrType'].replace(np.nan, train_data['MasVnrType'].mode()[0], inplace = True)\ntrain_data['MasVnrArea'].replace(np.nan, train_data['MasVnrArea'].mode()[0], inplace = True)\ntrain_data['BsmtQual'].replace(np.nan, train_data['BsmtQual'].mode()[0], inplace = True)\ntrain_data['BsmtCond'].replace(np.nan, train_data['BsmtCond'].mode()[0], inplace = True)\ntrain_data['BsmtExposure'].replace(np.nan, train_data['BsmtExposure'].mode()[0], inplace = True)\ntrain_data['BsmtFinType1'].replace(np.nan, train_data['BsmtFinType1'].mode()[0], inplace = True)\ntrain_data['BsmtFinType2'].replace(np.nan, train_data['BsmtFinType2'].mode()[0], inplace = True)\ntrain_data['FireplaceQu'].replace(np.nan, train_data['FireplaceQu'].mode()[0], inplace = True)\ntrain_data['GarageType'].replace(np.nan, train_data['GarageType'].mode()[0], inplace = True)\ntrain_data['GarageFinish'].replace(np.nan, train_data['GarageFinish'].mode()[0], inplace = True)\ntrain_data['GarageQual'].replace(np.nan, train_data['GarageQual'].mode()[0], inplace = True)\ntrain_data['GarageCond'].replace(np.nan, train_data['GarageCond'].mode()[0], inplace = True)\ntrain_data['Electrical'].replace(np.nan, train_data['Electrical'].mode()[0], inplace = True)","8a2ff0fb":"test_data['MasVnrType'].replace(np.nan, test_data['MasVnrType'].mode()[0], inplace = True)\ntest_data['MasVnrArea'].replace(np.nan, test_data['MasVnrArea'].mode()[0], inplace = True)\ntest_data['BsmtQual'].replace(np.nan, test_data['BsmtQual'].mode()[0], inplace = True)\ntest_data['BsmtCond'].replace(np.nan, test_data['BsmtCond'].mode()[0], inplace = True)\ntest_data['BsmtExposure'].replace(np.nan, test_data['BsmtExposure'].mode()[0], inplace = True)\ntest_data['BsmtFinType1'].replace(np.nan, test_data['BsmtFinType1'].mode()[0], inplace = True)\ntest_data['BsmtFinType2'].replace(np.nan, test_data['BsmtFinType2'].mode()[0], inplace = True)\ntest_data['FireplaceQu'].replace(np.nan, test_data['FireplaceQu'].mode()[0], inplace = True)\ntest_data['GarageType'].replace(np.nan, test_data['GarageType'].mode()[0], inplace = True)\ntest_data['GarageFinish'].replace(np.nan, test_data['GarageFinish'].mode()[0], inplace = True)\ntest_data['GarageQual'].replace(np.nan, test_data['GarageQual'].mode()[0], inplace = True)\ntest_data['GarageCond'].replace(np.nan, test_data['GarageCond'].mode()[0], inplace = True)\ntest_data['Electrical'].replace(np.nan, test_data['Electrical'].mode()[0], inplace = True)","f858a790":"test_data.fillna(0, inplace = True)","b785c55d":"train_data.isnull().sum().values","867eab9c":"train_data.describe()","b9e49854":"train_data.corr()","68f4a094":"plt.figure(figsize = (40, 40))\nsns.heatmap(train_data.corr(), annot = True)","d69e2118":"plt.figure(figsize = (30, 14))\nsns.violinplot(x = 'MSSubClass', y = 'SalePrice', data = train_data)","47746445":"sns.pairplot(data = train_data , vars = ['MSSubClass', 'LotArea', 'OverallQual', '1stFlrSF', '2ndFlrSF'], hue = 'YrSold')","f0990398":"plt.figure(figsize = (15, 15))\nsns.scatterplot(x = 'MSZoning', y = 'SalePrice', hue = 'YrSold', data = train_data)","6cbbe6c5":"plt.figure(figsize = (15, 15))\nsns.scatterplot(x = '1stFlrSF', y = 'SalePrice', hue = 'YrSold', data = train_data)","86251ccb":"plt.figure(figsize = (15, 15))\nsns.scatterplot(x = '2ndFlrSF', y = 'SalePrice', hue = 'YrSold', data = train_data)","073f844b":"plt.figure(figsize = (15, 15))\nsns.scatterplot(x = 'YearBuilt', y ='SalePrice', hue = 'YearRemodAdd', data = train_data)","a54b2a04":"plt.figure(figsize = (15, 15))\nsns.scatterplot(x = 'LotArea', y ='SalePrice', hue = 'YrSold', data = train_data)","a94b97b1":"plt.figure(figsize = (10, 10))\nsns.barplot(train_data['GarageCars'], train_data['SalePrice'])","cd3f3fac":"plt.figure(figsize = (10, 10))\nsns.barplot(train_data['BsmtExposure'], train_data['SalePrice'])","262304b2":"plt.figure(figsize = (10, 10))\nsns.barplot(train_data['BldgType'], train_data['SalePrice'])","136e908a":"plt.figure(figsize = (20, 20))\nplt.xticks(rotation = 90)\nsns.barplot(train_data['YearRemodAdd'], train_data['SalePrice'])","416e2766":"plt.figure(figsize = (10, 10))\nsns.barplot(train_data['SaleCondition'], train_data['SalePrice'])","3339dbd6":"plt.figure(figsize = (10, 10))\nsns.lineplot(x = 'MSSubClass', y = 'SalePrice', dashes = False, data = train_data)","b9e653f6":"plt.figure(figsize = (10, 10))\nplt.xticks(rotation = 90)\nsns.lineplot(x = 'Neighborhood', y = 'SalePrice', dashes = False, data = train_data)","3fb2ccde":"plt.figure(figsize = (20, 20))\nsns.lineplot(x = 'OverallQual', y = 'SalePrice', dashes = False, data = train_data)","79251b4a":"plt.figure(figsize = (30, 30))\nplt.xticks(rotation = 90)\nsns.countplot('YearBuilt', data = train_data)","ed3f3d2a":"cols = ['MSSubClass', 'LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'MasVnrArea', \n        'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', \n        'BsmtFullBath','BsmtHalfBath','FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'EnclosedPorch', 'OpenPorchSF', '3SsnPorch', \n        'PoolArea', 'ScreenPorch', 'MiscVal', 'MoSold', 'YrSold',\n        'MSZoning', 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', \n        'Condition1', 'Condition2', 'BldgType', 'HouseStyle','RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', \n        'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1',\n        'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual','Functional', 'FireplaceQu', \n        'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition']\nX_train = train_data[cols]\nY_train = train_data[['SalePrice']]","9c6fdd50":"X_train","3fb7a8d9":"Y_train","64ba6250":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ncols = ['MSSubClass', 'LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'MasVnrArea', \n        'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', \n        'BsmtFullBath','BsmtHalfBath','FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces',\n         'GarageCars', 'GarageArea', 'WoodDeckSF', 'EnclosedPorch', 'OpenPorchSF', '3SsnPorch', \n         'PoolArea', 'ScreenPorch', 'MiscVal', 'MoSold', 'YrSold']\nX_train[cols] = sc.fit_transform(X_train[cols])","bb2f7c9a":"from sklearn.preprocessing import OrdinalEncoder\noc = OrdinalEncoder()\ncols = ['MSZoning', 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', \n        'Condition1', 'Condition2', 'BldgType', 'HouseStyle','RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', \n        'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1',\n        'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual','Functional', 'FireplaceQu', \n        'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition']\nX_train[cols] = oc.fit_transform(X_train[cols])","f5c8ccda":"X_train.head(10)","c56cda15":"X_train.shape","a7a58fac":"Y_train.shape","1abf0807":"from sklearn.linear_model import LinearRegression\nclassifier = LinearRegression()\nclassifier.fit(X_train, Y_train)","2403edd9":"result = classifier.predict(X_train)","f85c28ca":"plt.figure(figsize = (20,20))\nplt.plot(Y_train, 'o',color = 'blue', label = 'Actual Values')\nplt.plot(result, color = 'pink', label='predicted values')\nplt.legend()","6c78f1f4":"df['SalePrice'] = df['SalePrice'].astype(float)","7c8f9962":"df.head()","236599cb":"l1 = list(sol)\nl2 = list(result)\ndf = pd.DataFrame(list(zip(l1,l2)),columns=['Id','SalePrice'])\ndf.head()","1b401850":"df.to_csv('mySubmission.csv',index = False)","83f6234d":"## Task 7.2\n## Name: Gaurav Bhogale\n## Registration ID: SIRSS2101"}}