{"cell_type":{"a78d1064":"code","2333628d":"code","3efa2eb8":"code","43a49f62":"code","954a36dd":"code","bb415860":"code","487767e1":"code","b33d054c":"code","7484f0cc":"code","34873878":"code","2cb86543":"code","e146eb2f":"code","ade1ac5e":"code","18ba0831":"code","2fcb19bb":"code","59427173":"code","d30dff47":"markdown","c54a13a5":"markdown","17238ad2":"markdown","7af787ae":"markdown","ea86a6b5":"markdown","d0cc1814":"markdown"},"source":{"a78d1064":"# import libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\npd. set_option('display.max_rows', 500)\nfrom sklearn.metrics import classification_report\nimport xgboost as xgb\nimport missingno as msno","2333628d":"# load train and test datasets\ntrain = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/test.csv\")","3efa2eb8":"# check shapes\ntrain.shape,test.shape","43a49f62":"# check if duplicate id is present\ntrain.id.nunique(),test.id.nunique()","954a36dd":"# basic info\ntrain.describe()","bb415860":"# check for class distribution\nsns.countplot(train.claim)","487767e1":"train.claim.value_counts()","b33d054c":"features = train.isnull().sum().index[1:]\nvalues = train.isnull().sum().values[1:]","7484f0cc":"# Figure Size\nfig, ax = plt.subplots(figsize =(10, 30))\n \n# Horizontal Bar Plot\nax.barh(features, values,color = \"maroon\")\n \n# Remove axes splines\nfor s in ['top', 'bottom', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\n# Remove x, y Ticks\nax.xaxis.set_ticks_position('none')\nax.yaxis.set_ticks_position('none')\n \n# Add padding between axes and labels\nax.xaxis.set_tick_params(pad = 5)\nax.yaxis.set_tick_params(pad = 10)\n \n# Add x, y gridlines\nax.grid(b = True, color ='grey',\n        linestyle ='-.', linewidth = 0.5,\n        alpha = 0.2)\n \n# Show top values\nax.invert_yaxis()\n \n# Add annotation to bars\nfor i in ax.patches:\n    plt.text(i.get_width()+0.2, i.get_y()+0.5,\n             str(round((i.get_width()), 2)),\n             fontsize = 10, fontweight ='bold',\n             color ='grey')\n    \n# Add Plot Title\nax.set_title('Featurewise Missing Values',\n             loc ='left', )\n \n# Add Text watermark\nfig.text(0.9, 0.15, 'Missing Values Distribution', fontsize = 12,\n         color ='grey', ha ='right', va ='bottom',\n         alpha = 0.7)\n \n# Show Plot\nplt.show()","34873878":"y = train.claim\ntrain.drop([\"id\",\"claim\"],1,inplace=True)\n\ntest_ids = test.id\ntest.drop(\"id\",1,inplace=True)","2cb86543":"from sklearn.impute import SimpleImputer\n\ntrain_columns = train.columns\ntest_columns = test.columns\n\n# Imputation\nmy_imputer = SimpleImputer()\ntrain = pd.DataFrame(my_imputer.fit_transform(train))\ntest = pd.DataFrame(my_imputer.transform(test))\n\n# Imputation removed column names; put them back\ntrain.columns = train_columns\ntest.columns = test_columns\n\nX=train.copy()","e146eb2f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","ade1ac5e":"# Init classifier\nxgb_cl = xgb.XGBClassifier()\n\n# Fit\nxgb_cl.fit(X_train, y_train)\n\n# Predict\ny_pred = xgb_cl.predict(X_test)","18ba0831":"print(classification_report(y_test, y_pred, target_names=[\"0\",\"1\"]))","2fcb19bb":"y_pred_test = xgb_cl.predict(test)\nsub = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/sample_solution.csv\")\nsub[\"id\"] = test_ids\nsub[\"claim\"] = y_pred_test\nsub.to_csv(\"submission_xgb.csv\",index=False)","59427173":"print(classification_report(y_test, y_pred, target_names=[\"0\",\"1\"]))","d30dff47":"# XGBOOST","c54a13a5":"All the features seems to have more than 15000 missing values, which is around 1.6% of the whole training data.","17238ad2":"# Train Test Split","7af787ae":"### impute missing values with the mean value","ea86a6b5":"# Null Values Visualization","d0cc1814":"# Null Value Treatment"}}