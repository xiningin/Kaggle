{"cell_type":{"b1901797":"code","08cc5d76":"code","72d32a52":"code","58238196":"code","f497a36a":"code","d985dfd7":"code","1ac15bc6":"markdown","1ef71cc9":"markdown","f93c23af":"markdown","1f783793":"markdown","6080c9d1":"markdown","a5485f8b":"markdown"},"source":{"b1901797":"# Imports and Basic Data Cleaning (Drop Duplicates and change 97, 98, and 99 to np.nan)\nimport numpy as np\nimport pandas as pd \nimport os\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')","08cc5d76":"# Data Cleaning\ndf = pd.read_csv('\/kaggle\/input\/covid19-patient-precondition-dataset\/covid.csv')\ndf = df.drop_duplicates().reset_index(drop=True)\ndf = df.replace(97, np.nan)\ndf = df.replace(98, np.nan)\ndf = df.replace(99, np.nan)\n\n# Fix date data\ndf.entry_date = pd.to_datetime(df.entry_date, dayfirst=True, errors='coerce')\ndf.date_symptoms = pd.to_datetime(df.date_symptoms, dayfirst=True, errors='coerce')\ndf.date_died = pd.to_datetime(df.date_died, dayfirst=True, errors='coerce')\n\n# Docs says that sex == 1 means male, but then some males are pregnant and no females are pregnant. \n# Also, all pregnancy data for sex == 2 is NaN, so it seems that sex should be switched, as opposed to pregnant column.\ndf.sex = df.sex.replace([1,2], ['Female', 'Male'])\n\n# Change patient_type column to inpatient, change to bool\ndf = df.rename(columns = {'patient_type':'outpatient'})\n\n# Change 1 to True and 2 to False (bool Type) and 3 to 'Awaiting' (for covid_res colum)\ndf.loc[:, df.columns != 'age'] = df.loc[:, df.columns != 'age'].replace([1,2,3], [True, False, 'Awaiting'])","72d32a52":"# Data Augmentation\n\n# Just because date_died == NaT does not necesarrily mean the patient is not deceasd\n# However, if date_died != NaT, I consider that patient to be confirmed deceased\ndf['confirmed_deceased'] = np.where(df['date_died'].isnull(), False, True)\n\n# Get time difference between different events\ndf['entry_symptoms_delta'] = df.entry_date - df.date_symptoms\ndf['died_entry_delta'] = df.date_died - df.entry_date\ndf['died_symptoms_delta'] = df.date_died - df.date_symptoms","58238196":"fig, ax = plt.subplots(figsize=(10,10))\n\nplt.style.use('fivethirtyeight')\n\npositive_alive = df[df['covid_res'] == True].confirmed_deceased.value_counts()[False]\npositive_deceased = df[df['covid_res'] == True].confirmed_deceased.value_counts()[True]\n\nnegative_alive = df[df['covid_res'] == False].confirmed_deceased.value_counts()[False]\nnegative_deceased = df[df['covid_res'] == False].confirmed_deceased.value_counts()[True]\n\nawaiting_alive = df[df['covid_res'] == 'Awaiting'].confirmed_deceased.value_counts()[False]\nawaiting_deceased = df[df['covid_res'] == 'Awaiting'].confirmed_deceased.value_counts()[True]\n\nouter_labels = ['Positive', 'Negative', 'Awaiting']\nouter_sizes = [positive_alive + positive_deceased, negative_alive + negative_deceased, awaiting_alive + awaiting_deceased]\ninner_labels = ['Alive with Covid-19', 'Deceased with Covid-19', 'Alive without Covid-19', 'Deceased without Covid-19', 'Alive Awaiting Result','Deceased Awaiting Result']\ninner_sizes = [positive_alive, positive_deceased, negative_alive, negative_deceased, awaiting_alive, awaiting_deceased]\n#outer_colors = ['#ff6666', '#0366fc', '#99ff99']\n#inner_colors = ['#c2c2f0','#ffb3e6', '#c2c2f0','#ffb3e6', '#c2c2f0','#ffb3e6']\ncmap = plt.get_cmap(\"tab20c\")\nouter_colors = cmap(np.arange(3)*4)\ninner_colors = cmap(np.array([2, 1, 6, 5, 10, 9]))\nouter_explode = (0,0,0)\ninner_explode = (0,0,0,0,0,0)\n\nwedges, texts = plt.pie(outer_sizes, labels=outer_labels, colors=outer_colors, startangle=90,frame=True, explode=outer_explode,radius=3)\n\npos = (positive_alive + positive_deceased) \/ (positive_alive + positive_deceased + negative_alive + negative_deceased + awaiting_alive + awaiting_deceased)\nneg = (negative_alive + negative_deceased) \/ (positive_alive + positive_deceased + negative_alive + negative_deceased + awaiting_alive + awaiting_deceased)\nawa = (awaiting_alive + awaiting_deceased) \/ (positive_alive + positive_deceased + negative_alive + negative_deceased + awaiting_alive + awaiting_deceased)\n\nleg1 = ax.legend(wedges, ['Positive: ' +  \"{:.2%}\".format(pos), 'Negative: ' + \"{:.2%}\".format(neg), 'Awaiting: ' + \"{:.2%}\".format(awa)],\n          title='Covid-19 Diagnosis',\n          loc=\"center left\",\n          bbox_to_anchor=(-0.4, 0, 0.5, 1))\n\nwedges, texts = plt.pie(inner_sizes,colors=inner_colors,startangle=90, explode=inner_explode,radius=2 )\n\npos = positive_deceased \/ (positive_alive + positive_deceased)\nneg = negative_deceased \/ (negative_alive + negative_deceased)\nawa = awaiting_deceased \/ (awaiting_alive + awaiting_deceased)\n\n\nlabel_wedges = [ wedges[index] for index in [1,3,5] ]\nleg2 = ax.legend(label_wedges, ['Positive: ' + \"{:.2%}\".format(pos), 'Negative: ' + \"{:.2%}\".format(neg), 'Awaiting: ' + \"{:.2%}\".format(awa)],\n          title='Mortality Rate by Type',\n          loc=\"center right\",\n          bbox_to_anchor=(0.85, 0, 0.5, 1))\n\ncentre_circle = plt.Circle((0,0),1.5,color='black', fc='white',linewidth=0)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n \nax.add_artist(leg1)\nplt.axis('equal')\nplt.title('Patient Outcomes by Covid-19 Diagnosis')\n\nplt.show()","f497a36a":"\ndef assign_age_bin(row):\n    age = row\n    if age <= 2:\n        return \"2 and Under\"\n    elif age >= 3 and age <= 7:\n        return \"3 to 7\"\n    elif age >= 8 and age <= 12:\n        return \"8 to 12\"\n    elif age >= 13 and age <= 17:\n        return \"13 to 17\"\n    elif age >= 18 and age <= 24:\n        return \"18 to 24\"\n    elif age >= 25 and age <= 34:\n        return \"25 to 34\"\n    elif age >= 35 and age <= 44:\n        return \"35 to 44\"\n    elif age >= 45 and age <= 54:\n        return \"45 to 54\"\n    elif age >= 55 and age <= 64:\n        return \"55 to 64\"\n    elif age >= 65 and age <= 74:\n        return \"65 to 74\"\n    elif age >= 75 and age <= 84:\n        return \"75 to 84\"\n    elif age >= 85:\n        return \"85+\"\n    \ndf['age_bin'] = df.age.apply(lambda row: assign_age_bin(row))\ndf_covid = df[df.covid_res == True]\n\nplt.figure(figsize=(20,10))\nsns.distplot(df_covid.age, kde=False)\nplt.title('Age Distribution')\nplt.ylabel('Number of Patients')\nplt.show()\n\ncol_order = ['2 and Under', '3 to 7', '8 to 12', '13 to 17', '18 to 24', '25 to 34', '35 to 44', '45 to 54', '55 to 64', '65 to 74', '75 to 84', '85+']\n\nsns.catplot(x='confirmed_deceased', y=None, col=\"age_bin\", data=df_covid, saturation=.5, col_order=col_order, kind='count', ci=None, aspect=.6, height=5)\nplt.show()\n\nprob = []\nfor age_bin_lab in col_order:\n    vc = df_covid[df_covid.age_bin == age_bin_lab]['confirmed_deceased'].value_counts()\n    prob.append(vc[True]\/(vc[False] + vc[True]))\n\nplt.figure(figsize=(20,10))\nsns.lineplot(x = col_order, y = prob, sort=False)\nax = sns.scatterplot(x = col_order, y = prob, s = 200)\nvals = ax.get_yticks()\nax.set_yticklabels(['{:,.0%}'.format(x) for x in vals])\nplt.title('Age Group vs. Fatality Rate')\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","d985dfd7":"ax = sns.catplot(x='confirmed_deceased', y=None, col=\"sex\", data=df_covid,saturation=.5,col_order=['Male','Female'],kind='count', ci=None, aspect=.6)\nplt.show()\n\ncols = ['Male', 'Female']\nprob = []\nfor sex in cols:\n    vc = df_covid[df_covid.sex == sex]['confirmed_deceased'].value_counts()\n    prob.append(vc[1]\/(vc[0] + vc[1]))\n    \nplt.figure(figsize=(6,6))\nax = sns.barplot(x = cols, y = prob)\nvals = ax.get_yticks()\nax.set_yticklabels(['{:,.1%}'.format(x) for x in vals])\nplt.title('Sex vs. Fatality Rate')\nplt.ylim((0, 0.20))\nplt.xlabel('Sex')\nplt.ylabel('Fatality Rate')\nplt.show()\n\ndf_covid_male = df_covid[df_covid.sex == 'Male']\ndf_covid_female = df_covid[df_covid.sex == 'Female']\n\ncol_order = ['2 and Under', '3 to 7', '8 to 12', '13 to 17', '18 to 24', '25 to 34', '35 to 44', '45 to 54', '55 to 64', '65 to 74', '75 to 84', '85+']\n\nax = sns.catplot(x='confirmed_deceased', y=None, col=\"age_bin\", data=df_covid_male, saturation=.5, col_order=col_order, kind='count', ci=None, aspect=.6, height=5)\nax.fig.suptitle('Male Patients', y =1.1)\nplt.show()\n\nax = sns.catplot(x='confirmed_deceased', y=None, col=\"age_bin\", data=df_covid_male, saturation=.5, col_order=col_order, kind='count', ci=None, aspect=.6, height=5)\nax.fig.suptitle('Female Patients', y =1.1)\nplt.show()\n\nprob_male = []\nprob_female = []\nfor age_bin_lab in col_order:\n    vc_male = df_covid_male[df_covid_male.age_bin == age_bin_lab]['confirmed_deceased'].value_counts()\n    prob_male.append(vc_male[True]\/(vc_male[False] + vc_male[True]))\n    vc_female = df_covid_female[df_covid_female.age_bin == age_bin_lab]['confirmed_deceased'].value_counts()\n    prob_female.append(vc_female[True]\/(vc_female[False] + vc_female[True]))\n\nplt.figure(figsize=(20,10))\nsns.lineplot(x = col_order, y = prob_male, color='g', sort=False)\nax = sns.scatterplot(x = col_order, y = prob_male, color='g', s = 200, label='Male')\nsns.lineplot(x = col_order, y = prob_female, color='m', sort=False)\nax = sns.scatterplot(x = col_order, y = prob_female, color='m', s = 200, label = 'Female')\nvals = ax.get_yticks()\nax.set_yticklabels(['{:,.0%}'.format(x) for x in vals])\nplt.title('Age Group vs. Fatality Rate by Sex')\nplt.xlabel('')\nplt.ylabel('')\nplt.legend()\nplt.show()","1ac15bc6":"So we can see that Covid-19 Positive patients have worse outcomes than Covid-19 Negative patients (not sure If I'll win the Nobel Prize for this observation, though). Now, let's look at Covid-19 fatality rates for more granular subsets of populations.","1ef71cc9":"# Motivation of Analysis and Data Origin\n![](https:\/\/images.unsplash.com\/flagged\/photo-1584036561584-b03c19da874c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1789&q=80)\n\nFom the sobering magnitude of lives lost to the new reality of social distancing, Covid-19 has had a colossal impact on our world. As such, Kaggle is currently inundated with Covid-19 datsets and notebooks: so what makes this one any different?\n\nFor straters, this dataset is concerned with **Mexican Patient Pre-Condition Data**. My analysis will be focused on informative visualizations and building models that predict patient outcomes based on pre-conditions and other factors. I've come across many a great Kaggle notebook exploring Covid-19 data, but here are a few that I think are especially informative:\n* https:\/\/www.kaggle.com\/michau96\/covid-19-east-asia-europe-usa-and-rest\n* https:\/\/www.kaggle.com\/imdevskp\/covid-19-analysis-visualization-comparisons\n* https:\/\/www.kaggle.com\/tarunkr\/covid-19-case-study-analysis-viz-comparisons\n* https:\/\/www.kaggle.com\/maksimeren\/covid-19-literature-clustering\n\nI have to extend my sincerest thanks and gratitude to Tanmoy Mukherjee (https:\/\/www.kaggle.com\/tanmoyx) for procuring such important data. I aim to repay his charitable hard work by producing an informative and helpful analysis. Also, I encourage you to check out the other notebooks associated with this dataset; some of my favorites are below:\n* https:\/\/www.kaggle.com\/tanmoyx\/covid-19-icu-requirement-prediction\n\nFinally, I encourage everyone to contribute to helping those affected by Covid-19. I've included an article that has a great list of worthy recipients for donation: https:\/\/www.forbes.com\/sites\/morgansimon\/2020\/04\/14\/covid-19-giving-guide-how-to-donate-to-reach-the-most-marginalized\/#47709ce51a72\n\nI personally have donated to DonatePPE.org, an organization committed to purchasing, manufacturing, and distributing Perspnal Protective Equipment (PPE) to healthcare workers in need: https:\/\/www.gofundme.com\/f\/donateppe","f93c23af":"Now, let's add some more columns that will be useful for some of our analyses.","1f783793":"What if we also group the data by Sex?","6080c9d1":"# Basic Data Visualizations","a5485f8b":"First, let's clean-up the data a little bit."}}