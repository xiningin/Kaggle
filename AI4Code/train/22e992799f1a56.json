{"cell_type":{"db985a48":"code","16dd2219":"code","6a71f44a":"code","3e306794":"code","7f5a1a12":"code","5ee84435":"code","f2f8d565":"code","11c9933a":"code","adfb251b":"code","3b777ef8":"code","adecb6fd":"code","469dd370":"code","c4316b1c":"code","d7cee71f":"code","2dc31353":"code","e00a9ead":"code","6fe53460":"code","408811bc":"code","6616ab42":"code","84eef55a":"code","58f3974e":"code","21c60aba":"code","4f24aa1f":"code","63932d7d":"code","3ca8afe9":"code","1ed9cef4":"code","8a9908be":"code","22d67e60":"code","e2234118":"code","a508a27d":"code","5172ca54":"code","aadf1b65":"code","f2aa44a4":"code","d29f7596":"markdown","33073917":"markdown","1db51245":"markdown","9eaa0aac":"markdown","484a3bfa":"markdown","2091d47b":"markdown","930563a1":"markdown","34bb0b00":"markdown","4beaa9aa":"markdown","7abea8fc":"markdown","32504e21":"markdown"},"source":{"db985a48":"import tensorflow as tf\n# print(tf.__version__)\n \nfrom tensorflow import keras\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np\nimport seaborn as sn\nprint('libraries imported')","16dd2219":"import os\nprint(os.listdir(\"..\/input\/digit-recognizer\"))\n","6a71f44a":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","3e306794":"test.shape","7f5a1a12":"test.head(10)","5ee84435":"train.head(10)","f2f8d565":"train.isnull().sum()","11c9933a":"X = train.drop('label',axis =1)\ny = train['label']","adfb251b":"X.head(5)","3b777ef8":"X = X\/255","adecb6fd":"X.describe()","469dd370":"X = X.values.reshape(-1,28,28,1)","c4316b1c":"g = plt.imshow(X[2][:,:,0])\ny[2]","d7cee71f":"X_flattened = X.reshape(len(X),28*28)","2dc31353":"model = keras.Sequential([keras.layers.Dense(300,input_shape=(784,),activation='relu'),\n                          keras.layers.Dense(100,activation='relu'),\n                          keras.layers.Dense(10,activation='sigmoid')\n])","e00a9ead":"model.summary()","6fe53460":"model.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n    )","408811bc":"from sklearn.model_selection import train_test_split\nX_train, X_val, Y_train, Y_val = train_test_split(X_flattened, y, test_size = 0.1, random_state= 2)","6616ab42":"model.fit(x=X_train,y=Y_train,epochs=50, validation_data=(X_val, Y_val))","84eef55a":"y_predict = model.predict(X_val)","58f3974e":"y_label = [np.argmax(i) for i in y_predict]\n","21c60aba":"cf = tf.math.confusion_matrix(labels=Y_val,predictions=y_label)","4f24aa1f":"plt.figure(figsize=(10,10))\nsn.heatmap(cf,annot=True,cmap='magma',fmt='d')","63932d7d":"test.shape","3ca8afe9":"test = test.values.reshape(-1,28,28,1)","1ed9cef4":"test_flattened = test.reshape(len(test),28*28)","8a9908be":"predicted_number = model.predict(test_flattened)","22d67e60":"len(predicted_number)","e2234118":"id_test = []\nfor i in range(1,28001,1):\n    id_test.append(i)\nprint(id_test)","a508a27d":"predicted = [np.argmax(i) for i in predicted_number]","5172ca54":"my_submission = pd.DataFrame({'ImageId': id_test, 'Label': predicted})","aadf1b65":"my_submission.head(10)","f2aa44a4":"# you could use any filename. We choose submission here\nmy_submission.to_csv('submission.csv', index=False)","d29f7596":"Reshape image in 3 dimensions (height = 28px, width = 28px , canal = 1)X = X.values.reshape(-1,28,28,1)","33073917":"# **Step 1:- Importing Libraries**\n\nLibraries used in this model are\n1. tensorflow\n2. keras\n3. matplotlib\n4. pandas\n5. numpy\n6. seaborn","1db51245":"Splitting the data in 90-10 for test and train dataset","9eaa0aac":"# Step 4:- CNN model designing \n**We will be having 3 layers in our model\nThere will be 2 hidden layers with 300,100 neurons respectively**","484a3bfa":"We divide each rows by 255 since we have values ranging from 0 to 255,so by dividing the rows by 255 gives us a range of 0-1","2091d47b":"# Step 2:- Importing data using pandas","930563a1":"# **Step 5:- Model Training**","34bb0b00":"# **Step 3:- Feature engineering**","4beaa9aa":"# ***Introduction:-***\n# This is 3 layer CNN which recognizes the digit with its image by its pixel values\n","7abea8fc":"***As we can see that the there are very less numbers which are wrong as compared to the corrected one.\nyou found this notebook helpful or you just liked it , some upvotes would be very much appreciated - That will keep me motivated :)***","32504e21":"# **Step 6:- Evaluating the output** "}}