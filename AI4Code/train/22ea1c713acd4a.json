{"cell_type":{"76b2a744":"code","ac19747a":"code","530f5e76":"code","daa10f6a":"code","cb52b468":"code","becd67e7":"code","1e987e85":"code","92e2c11b":"code","e41b7de3":"code","3d04549b":"code","7a51396c":"code","c3ffdc36":"markdown"},"source":{"76b2a744":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ac19747a":"from matplotlib import pyplot as plt\nimport numpy as np","530f5e76":"%matplotlib inline","daa10f6a":"import math\nx = np.arange(0, math.pi*2, 0.05)\ny = np.sin(x)\nplt.xlabel(\"angle\")\nplt.ylabel(\"sine\")\nplt.title('sine wave')\nplt.plot(x,y)","cb52b468":"from pylab import *\nx = linspace(-3, 3, 30)\ny = x**2\nplot(x, y, 'r.')\nshow()","becd67e7":"import matplotlib.pyplot as plt\nfig,a =  plt.subplots(2,2)\nimport numpy as np\nx = np.arange(1,5)\na[0][0].plot(x,x*x)\na[0][0].set_title('square')\na[0][1].plot(x,np.sqrt(x))\na[0][1].set_title('square root')\na[1][0].plot(x,np.exp(x))\na[1][0].set_title('exp')\na[1][1].plot(x,np.log10(x))\na[1][1].set_title('log')\nplt.show()","1e987e85":"import matplotlib.pyplot as plt\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nlangs = ['C', 'C++', 'Java', 'Python', 'PHP']\nstudents = [23,17,35,29,12]\nax.bar(langs,students)\nplt.show()","92e2c11b":"import numpy as np\nimport matplotlib.pyplot as plt\ndata = [[30, 25, 50, 20],\n[40, 23, 51, 17],\n[35, 22, 45, 19]]\nX = np.arange(4)\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.bar(X + 0.00, data[0], color = 'b', width = 0.25)\nax.bar(X + 0.25, data[1], color = 'g', width = 0.25)\nax.bar(X + 0.50, data[2], color = 'r', width = 0.25)","e41b7de3":"from matplotlib import pyplot as plt\nimport numpy as np\nfig,ax = plt.subplots(1,1)\na = np.array([22,87,5,43,56,73,55,54,11,20,51,5,79,31,27])\nax.hist(a, bins = [0,25,50,75,100])\nax.set_title(\"histogram of result\")\nax.set_xticks([0,25,50,75,100])\nax.set_xlabel('marks')\nax.set_ylabel('no. of students')\nplt.show()","3d04549b":"from matplotlib import pyplot as plt\nimport numpy as np\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.axis('equal')\nlangs = ['C', 'C++', 'Java', 'Python', 'PHP']\nstudents = [23,17,35,29,12]\nax.pie(students, labels = langs,autopct='%1.2f%%')\nplt.show()","7a51396c":"import matplotlib.pyplot as plt\ngirls_grades = [89, 90, 70, 89, 100, 80, 90, 100, 80, 34]\nboys_grades = [30, 29, 49, 48, 100, 48, 38, 45, 20, 30]\ngrades_range = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\nfig=plt.figure()\nax=fig.add_axes([0,0,1,1])\nax.scatter(grades_range, girls_grades, color='r')\nax.scatter(grades_range, boys_grades, color='b')\nax.set_xlabel('Grades Range')\nax.set_ylabel('Grades Scored')\nax.set_title('scatter plot')\nplt.show()","c3ffdc36":"# Using MATPLOTLIB for basic plotting of various types of Graphs"}}