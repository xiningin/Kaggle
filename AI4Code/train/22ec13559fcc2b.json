{"cell_type":{"b4238081":"code","0079874f":"code","26106123":"code","968cfc70":"code","27f25dc6":"code","08e8ce4f":"code","bdb6d1be":"code","198343cb":"code","f9a2cfa9":"code","dae44c45":"code","3b4bcb56":"code","69933b02":"code","7553385c":"code","48807e2a":"code","2092c350":"code","e4244c50":"code","552ef66e":"code","cb752344":"code","6f7e29db":"code","55c4b138":"code","34d2c9a3":"code","3eda833d":"code","6e1ecdb3":"code","dd136961":"code","a55731e4":"code","b1ec85fc":"code","897dbdbb":"code","021658bf":"code","5f1f737d":"code","81d20c34":"code","7284db1a":"code","fd6c601e":"code","c3e5c7a3":"code","93729621":"code","8105f544":"code","fc2ca59d":"code","a6e5ee80":"code","14a5030f":"code","ed98dad2":"code","0d3b7890":"code","f45a6632":"code","1ff75dd1":"code","7e2f410e":"code","98f8a648":"code","c77aabe2":"code","2a9b83b3":"code","b1d30015":"code","da6b87ef":"code","79ea3640":"code","24f94961":"code","bcdf0b9b":"code","0626ea3d":"code","95c8735b":"code","53913810":"code","a4e9af80":"code","cdb1b51f":"code","6347c6f3":"code","377dbe94":"code","468e061a":"code","dba5c44d":"markdown","9cbfe270":"markdown","0f00dd6c":"markdown","4b851b8b":"markdown","6401c539":"markdown","f398e0d8":"markdown"},"source":{"b4238081":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","0079874f":"test = pd.read_csv(\"\/kaggle\/input\/santander-customer-transaction-prediction\/test.csv\")\ntrain = pd.read_csv(\"\/kaggle\/input\/santander-customer-transaction-prediction\/train.csv\")\n","26106123":"test.head(5)","968cfc70":"test.describe()","27f25dc6":"train.describe()","08e8ce4f":"train.head(10)","bdb6d1be":"train.shape, test.shape","198343cb":"test.isna().sum()","f9a2cfa9":"import seaborn as sns\nsns.countplot(train.target)","dae44c45":"trainP = train.hist(figsize = (20,20))","3b4bcb56":"testP = test.hist(figsize = (20,20))","69933b02":"import matplotlib\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(16,6))\nfeatures = train.columns.values[2:202]\nplt.title(\"Distribution\")\nsns.distplot(train[features].mean(axis=1),color=\"red\", hist = True, label='train')\nsns.distplot(test[features].mean(axis=1),color=\"purple\", hist = True, label='test')\nplt.tight_layout()\nplt.legend()\nplt.show()","7553385c":"# train.drop(['ID_code'], axis=1, inplace=True)","48807e2a":"train.head(5)","2092c350":"X = train.iloc[:,2:]\ny = train.iloc[:,1]\n\nX_t = test.iloc[:,1:]","e4244c50":"X","552ef66e":"y","cb752344":"from sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score, classification_report, confusion_matrix","6f7e29db":"# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1, stratify = y)","55c4b138":"knn = KNeighborsClassifier()","34d2c9a3":"# knn.fit(X, y)","3eda833d":"# y_preds = knn.predict(X_t)","6e1ecdb3":"# sub_df = pd.DataFrame({\"ID\": test[\"ID_code\"], \"target\": pd.Series(y_preds) }) sub_df.to_csv(\"knn_submission.csv\", index=False)","dd136961":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression","a55731e4":"logRes = LogisticRegression(solver='liblinear')","b1ec85fc":"logRes.fit(X, y)","897dbdbb":"y_preds = logRes.predict(X_t)","021658bf":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(y_preds)\n                      })\nsub_df.to_csv(\"logres_submission.csv\", index=False)","5f1f737d":"from sklearn.svm import SVC","81d20c34":"svc = SVC(kernel='linear')","7284db1a":"#svc.fit(X, y)","fd6c601e":"#svc_y_preds = svc.predict(X_t)","c3e5c7a3":"#sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"], \"target\": pd.Series(svc_y_preds)}) sub_df.to_csv(\"svc_submission.csv\", index=False)","93729621":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","8105f544":"dtc = DecisionTreeClassifier()\nrfc = RandomForestClassifier(n_estimators=100)","fc2ca59d":"dtc.fit(X, y)\nrfc.fit(X, y)","a6e5ee80":"dtc_y_preds = dtc.predict(X_t)\nrfc_y_preds = rfc.predict(X_t)","14a5030f":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(dtc_y_preds)\n                      })\nsub_df.to_csv(\"dtc_submission.csv\", index=False)","ed98dad2":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(rfc_y_preds)\n                      })\nsub_df.to_csv(\"rfc_submission.csv\", index=False)","0d3b7890":"from sklearn.preprocessing import StandardScaler","f45a6632":"sc_X = StandardScaler()","1ff75dd1":"sc_X.fit(X)","7e2f410e":"sc_X.mean_","98f8a648":"X_train = sc_X.transform(X)\nX_test = sc_X.transform(X_t)","c77aabe2":"print(X_train)","2a9b83b3":"import xgboost as xgb","b1d30015":"xg_cl = xgb.XGBClassifier(objective = 'binary:logistic', n_estimators = 10, seed = 123)","da6b87ef":"xg_cl.fit(X, y)","79ea3640":"xgboost_y_preds = xg_cl.predict(X_t)","24f94961":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(xgboost_y_preds)\n                      })\nsub_df.to_csv(\"xgboost_submission.csv\", index=False)","bcdf0b9b":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.naive_bayes import BernoulliNB\nfrom sklearn.naive_bayes import MultinomialNB","0626ea3d":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nsc_X.fit(X)\nX_train = sc_X.transform(X)\nX_test = sc_X.transform(X_t)","95c8735b":"X_train = np.absolute(X_train)\nX_test = np.absolute(X_test)","53913810":"gnb = GaussianNB() \nbnb = BernoulliNB() \nmnb = MultinomialNB() ","a4e9af80":"gnb.fit(X_train, y)\nbnb.fit(X_train, y)\nmnb.fit(X_train, y)","cdb1b51f":"gnb_y_preds = gnb.predict(X_test)\nbnb_y_preds = bnb.predict(X_test)\nmnb_y_preds = mnb.predict(X_test)","6347c6f3":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(gnb_y_preds)\n                      })\nsub_df.to_csv(\"gnb_y_preds_submission.csv\", index=False)","377dbe94":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(bnb_y_preds)\n                      })\nsub_df.to_csv(\"bnb_y_preds_submission.csv\", index=False)","468e061a":"sub_df = pd.DataFrame({\"ID_code\": test[\"ID_code\"],\n                       \"target\": pd.Series(mnb_y_preds)\n                      })\nsub_df.to_csv(\"mnb_y_preds_submission.csv\", index=False)","dba5c44d":"# Log Reg","9cbfe270":"# XGBoost","0f00dd6c":"# KNN","4b851b8b":"# naive_bayes","6401c539":"# DTree & RFC","f398e0d8":"# SVC"}}