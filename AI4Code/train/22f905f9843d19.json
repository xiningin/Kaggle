{"cell_type":{"dba6e10b":"code","4b9c874b":"code","d0d9180b":"markdown","f4905180":"markdown","3977acb6":"markdown"},"source":{"dba6e10b":"import pandas as pd\npd.set_option('display.max_rows', None)\n\n# read in the dataset\nGM_individual_Tiers = pd.read_csv(\"..\/input\/list-of-kaggle-grandmasters\/GM_individual_Tiers.csv\")\n\n# drop \"null\" entries\nGMs_df = GM_individual_Tiers[GM_individual_Tiers[\"Country\"].str.contains(\"null\")==False].copy()\n\n# pycountry seems to have a problem with \"south korea\", substitute for \"Republic of Korea\"\nGMs_df[\"Country\"] = GMs_df[\"Country\"].str.replace('South Korea','Korea, Republic of')\n\n# https:\/\/github.com\/flyingcircusio\/pycountry\nimport pycountry\n\ndef get_country_code(x):\n    TLCC = pycountry.countries.search_fuzzy(x)\n    return TLCC[0].alpha_3\n\n# get the Three Letter Code for each country\nGMs_df['TLCC_code'] = GMs_df['Country'].apply(get_country_code)\n\nwhere_from = GMs_df[\"TLCC_code\"].value_counts().to_frame(name=\"Country_count\")\n\n# now create a mapping between Country and TLC_code\nmapping = dict(GMs_df[['TLCC_code', 'Country']].values)\nwhere_from[\"Country\"] = where_from.index.map(mapping)\n\n# now plot\nimport plotly.express as px\n# other color options:\n# https:\/\/plotly.com\/python\/builtin-colorscales\/\nfig = px.choropleth(where_from,  locations=where_from.index,\n                    hover_data=[\"Country\",\"Country_count\"],\n                    color=\"Country_count\",\n                    color_continuous_scale=\"Plasma_r\",\n                    labels={'Country_count':'Number of GM ','Country':'Country '})\nfig.show();","4b9c874b":"where_from[[\"Country\",\"Country_count\"]]","d0d9180b":"### Related notebooks\n* [\"Simple EDA of kaggle Grandmasters\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/simple-eda-of-kaggle-grandmasters)\n* [\"Kaggle in Numbers\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/kaggle-in-numbers)\n\n**Note:** The conversion from the kaggle country values to [ISO 3166-1 alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) three-letter country codes was achieved via a \"fuzzy\" search, so is not guaranteed to be correct. Please let me know if there are errors that need rectifying.","f4905180":"### Choropleth map of kaggle Grandmaster locations\nHe we make a [choropleth map](https:\/\/en.wikipedia.org\/wiki\/Choropleth_map) of kaggle Grandmaster locations, using data from the [List of kaggle Grandmasters](https:\/\/www.kaggle.com\/carlmcbrideellis\/list-of-kaggle-grandmasters) dataset.","3977acb6":"### and in tabular form"}}