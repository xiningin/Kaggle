{"cell_type":{"bdbb2d9e":"code","35ea54a1":"code","836c53d4":"code","68d8bf99":"code","dff33b83":"code","58bd88f4":"code","82d7cc12":"code","4d08bb80":"code","1f245d50":"code","0e4dc312":"code","2969af22":"code","a6e88bc5":"code","46cdcd6d":"code","a003a82e":"code","396b1a56":"code","a6f0b78f":"code","e38628cb":"code","8ef235a3":"code","66c0de82":"code","25eac876":"code","d57a4a0a":"code","6194f783":"code","5bdf8686":"code","873d03a7":"code","d267478c":"code","e1cec022":"code","5e91e110":"code","46933f01":"code","9c85eaca":"code","b685e980":"code","7ad0447a":"code","67384865":"code","6920940f":"markdown","739085d0":"markdown","30fbc7c9":"markdown","3fa59b56":"markdown","2fdd8a5e":"markdown","ec581a75":"markdown","cbbef65f":"markdown","12356e9a":"markdown","284c1580":"markdown","1a0aae2d":"markdown","be6184ff":"markdown","04fbe1c3":"markdown","48165740":"markdown","c2b125f3":"markdown"},"source":{"bdbb2d9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35ea54a1":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","836c53d4":"data = pd.read_csv('\/kaggle\/input\/focusing-on-mobile-app-or-website\/Ecommerce Customers')","68d8bf99":"data.head()","dff33b83":"data.shape","58bd88f4":"data.info()","82d7cc12":"data.isnull().sum()","4d08bb80":"data.describe()","1f245d50":"y=data['Yearly Amount Spent']\nx=data.drop(columns=['Yearly Amount Spent','Email','Address','Avatar'])","0e4dc312":"print(y.shape)\nprint(x.shape)","2969af22":"from sklearn.model_selection import train_test_split\nx_trg,x_test,y_trg,y_test=train_test_split(x,y)","a6e88bc5":"from sklearn.linear_model import LinearRegression","46cdcd6d":"model=LinearRegression()","a003a82e":"model.fit(x_trg,y_trg)","396b1a56":"predict =model.predict(x_test)","a6f0b78f":"print(\"Accuracy of training dataset:\",model.score(x_trg,y_trg))\nprint(\"Accuracy of test dataset:\",model.score(x_test,y_test))","e38628cb":"plt.scatter(y_test,predict)\nplt.xlabel('Y Test')\nplt.ylabel('Y Predicted')\nplt.show()","8ef235a3":"from sklearn.metrics import mean_squared_error,mean_absolute_error\nfrom math import sqrt","66c0de82":"print('MAE= ', mean_absolute_error(y_test,predict))\nprint('MSE= ', mean_squared_error(y_test,predict))\nprint('RMSE= ', sqrt(mean_squared_error(y_test,predict)))","25eac876":"data.corr()","d57a4a0a":"sns.heatmap(data=x)","6194f783":"y2=data['Yearly Amount Spent']\nx2=data.drop(columns=['Yearly Amount Spent','Email','Address','Avatar','Time on Website'])","5bdf8686":"print(y2.shape)\nprint(x2.shape)","873d03a7":"from sklearn.model_selection import train_test_split\nx2_trg,x2_test,y2_trg,y2_test=train_test_split(x2,y2)","d267478c":"model2=LinearRegression()","e1cec022":"model2.fit(x2_trg,y2_trg)\n\npredict2 =model2.predict(x2_test)","5e91e110":"print(\"Accuracy of training dataset:\",model2.score(x2_trg,y2_trg))\nprint(\"Accuracy of test dataset:\",model2.score(x2_test,y2_test))","46933f01":"print('MAE= ', mean_absolute_error(y2_test,predict2))\nprint('MSE= ', mean_squared_error(y2_test,predict2))\nprint('RMSE= ', sqrt(mean_squared_error(y2_test,predict2)))","9c85eaca":"data.head(2)","b685e980":"new_user = pd.DataFrame([[34.4972,12.6556,39.577,4.0826]])","7ad0447a":"result = model.predict(new_user)\nresult","67384865":"new_user2 = pd.DataFrame([[34.4972,12.6556,4.0826]])\nresult = model2.predict(new_user2)\nresult","6920940f":"#### Train-test split","739085d0":"### Prediction on second model","30fbc7c9":"### No null values in dataset","3fa59b56":"### Submitted By : Vivek Ranjan","2fdd8a5e":" #### We will set 'y' as the \"Yearly Amount Spent\" and 'x' will will have all feature except 'Yearly Amount Spent','Email','Address','Avatar'","ec581a75":"#### Now Split the data into training and testing set.","cbbef65f":"#### Here we have Email, Address, Avatar as object but i think they will not affect the Model. So, Leave them","12356e9a":"### Second model is more close to actual Yearly Amount Spent","284c1580":"### Reading the dataset ","1a0aae2d":"### Use of Linear regression to predict the Yearly Amount spent by the customers.","be6184ff":"### predict first row on first Model","04fbe1c3":"### Improve ","48165740":"### Draw scatter plot of test values vs the predicted values using mtplotlib","c2b125f3":"### First 5 rows of dataset"}}