{"cell_type":{"a48ee0a2":"code","487156dd":"code","c0572b1a":"code","889b6a8d":"code","03a4704d":"code","e7d39e45":"code","8c40aa6a":"code","949a9bea":"code","16ee7696":"code","91eca514":"code","c80b5eae":"code","6c1df6cb":"code","bde8cbc4":"code","8d1a82aa":"code","b7bb11c5":"code","d81969c2":"code","b29e9c64":"code","4e89cca8":"code","7bf05d0c":"code","d954fbda":"code","5d73b754":"code","d64d0456":"code","da83d2c6":"code","8730d8bf":"code","6190ac2d":"code","cdc5e761":"code","f78fc20b":"markdown","5b2deeda":"markdown","c4e86ac5":"markdown","2ebe7f4d":"markdown","448a45e2":"markdown","4d865eb3":"markdown","904a815e":"markdown","09b3b047":"markdown","15fe3b29":"markdown","1402d1b0":"markdown","57f0d57f":"markdown","8dc323b9":"markdown","354ef729":"markdown","866e4af0":"markdown","62128847":"markdown","d8a23908":"markdown","7e65499e":"markdown","929cda63":"markdown","455f8be1":"markdown","b5f27e7a":"markdown","3f8f3778":"markdown","d9f69243":"markdown"},"source":{"a48ee0a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","487156dd":"import numpy as np \nimport pandas as pd\nimport calendar\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport squarify\nimport gc\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nimport time\nimport datetime\nfrom datetime import datetime\nimport calendar\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.cluster import KMeans\n\nsns.set_style('white')\n\n\npd.options.display.float_format = '{:,.2f}'.format","c0572b1a":"clientes_actuales = pd.read_pickle('\/kaggle\/input\/easymoney\/EasyMoney_base_segmentacion.pkl',compression='zip')","889b6a8d":"clientes_actuales[['Cluster','Cluster2']]","03a4704d":"clientes_actuales.groupby(['Cluster']).agg({'Cluster2':[np.mean,np.min,np.max]})","e7d39e45":"clientes_actuales.groupby('Cluster').agg({\n                                         'totalAssets':np.mean,\n                                         'totalCuentas':np.mean,\n                                         'totalAhorro':np.mean,\n                                         'totalFinanciacion':np.mean,\n                                         'salary':np.mean,\n                                         'age':np.mean,\n                                         'Cluster':len\n                                        })","8c40aa6a":"# Easymoney product list\nproductos_easymoney=['loans',\n 'mortgage',\n 'funds',\n 'securities',\n 'long_term_deposit',\n 'em_account_pp',\n 'credit_card',\n 'payroll',\n 'pension_plan',\n 'payroll_account',\n 'emc_account',\n 'debit_card',\n 'em_account_p',\n 'em_acount',\n 'short_term_deposit']","949a9bea":"clientes_actuales_=clientes_actuales.pivot_table(index=['pk_partition','Cluster'], \n                                                 values=productos_easymoney,\n                                                aggfunc=[np.sum])","16ee7696":"clientes_actuales_.columns=['credit_card',\n                            'debit_card','em_account_p','em_account_pp',\n                            'em_acount','emc_account','funds','loans',\n                            'long_term_deposit','mortgage','payroll','payroll_account',\n                            'pension_plan','securities','short_term_deposit']","91eca514":"clientes_actuales_.reset_index(drop=False,inplace=True)","c80b5eae":"clientes_actuales_","6c1df6cb":"clientes_actuales_=clientes_actuales_.melt(id_vars=['pk_partition','Cluster'],\n              value_vars=productos_easymoney,\n              var_name='Product',\n              value_name='Count')","bde8cbc4":"clientes_actuales_","8d1a82aa":"evolucion_horizontal = px.bar(clientes_actuales_, \n                              x=\"Cluster\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Productos por Cluster', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","b7bb11c5":"clientes_actuales.groupby('Cluster').agg({\n                                         'totalAssets':np.mean,'totalCuentas':np.mean,'totalAhorro':np.mean,\n                                         'totalFinanciacion':np.mean,'salary':np.mean,'age':np.mean,\n                                         'Cluster':len})","d81969c2":"clientes_actuales['recomendacion']=0","b29e9c64":"clientes_actuales_[clientes_actuales_['Cluster']==0]","4e89cca8":"evolucion_horizontal = px.bar(clientes_actuales_[clientes_actuales_['Cluster']==0], \n                              x=\"Cluster\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Productos para Cluster 0', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","7bf05d0c":"clientes_actuales[ (clientes_actuales['Cluster']==0) &\n                   (clientes_actuales['em_acount']==1) &\n                   (clientes_actuales['debit_card']==1) ]","d954fbda":"clientes_actuales[ (clientes_actuales['Cluster']==0) &\n                   (clientes_actuales['em_acount']==1) &\n                   (clientes_actuales['debit_card']==0)  ][['pk_cid','em_acount','debit_card']]","5d73b754":"clientes_actuales_[clientes_actuales_['Cluster']==1]","d64d0456":"evolucion_horizontal = px.bar(clientes_actuales_[clientes_actuales_['Cluster']==1], \n                              x=\"Cluster\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Productos para Cluster 1', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","da83d2c6":"clientes_actuales[ (clientes_actuales['Cluster']==1) &\n                   (clientes_actuales['payroll']==1) &\n                   (clientes_actuales['debit_card']==1) &\n                   (clientes_actuales['pension_plan']==1) &\n                   (clientes_actuales['payroll_account']==1)  ][['pk_cid','payroll_account','payroll','pension_plan','debit_card']]","8730d8bf":"len(clientes_actuales[ (clientes_actuales['Cluster']==1) &\n                   (clientes_actuales['pension_plan']==0)  ])","6190ac2d":"clientes_actuales.loc[ (clientes_actuales['Cluster']==1) &\n                       (clientes_actuales['pension_plan']==0)  \n                      ,'recomendacion']=11","cdc5e761":"len(clientes_actuales[ (clientes_actuales['Cluster']==1) &\n                   (clientes_actuales['payroll_account']==0)  ])","f78fc20b":"Resetamos el indice, sin borrar el antiguo ya que lo necesitamos.","5b2deeda":"# Vemos la agrupacion con 6 grupos:","c4e86ac5":"Grupo formado por 18000 clientes, con una media de edad de 39 a\u00f1os y unos ingresos altos. Tienen en promedio casi 4 productos EasyMoney de los que casi 3 son de cuenta simple y uno de ahorro.","2ebe7f4d":"Vemos tambien , los que no tienen payroll account: ","448a45e2":"Vamos a a\u00f1adir una nueva variable para recoger la recomendacion. \nEsta columna sera un numero:\n\nProductos:\tTipo:\tId Recomendaci\u00f3n:\n\n* debit_card\tCuenta simple\t1\n* em_account_p\tCuenta simple\t2\n* em_account_pp\tCuenta simple\t3\n* em_acount       Cuenta simple\t4\n* emc_account\tCuenta simple\t5\n* payroll\t\tCuenta simple\t6\n* payroll_account\tCuenta simple\t7\n* funds\t\tAhorro\/inversion 8\n* long_term_deposit\tAhorro\/inversion 9\n* mortgage\tAhorro\/inversion \t10\n* pension_plan\tAhorro\/inversion \t11\n* securities\tAhorro\/inversion\t12\n* short_term_deposit\tAhorro\/inversion 13\n* loans\t\tFinanciacion\t14\n* credit_card\tFinanciacion\t15\n","4d865eb3":"Clientes con em_acount y debit_card:","904a815e":"# Estudiamos el grupo 0","09b3b047":"**Podemos proponer a la gente de este grupo que tiene cuenta em_acount y no tiene debit_card, que contraten una debit_card**","15fe3b29":"# Estudiamos el grupo 1","1402d1b0":"Veamos un poco los grupos resultantes en esta segmentacion:","57f0d57f":"Vamos a pintar los counts totales de los productos Easy money por cluster","8dc323b9":"Cambiamos el nombre a las columnas, ya que no me gusta el doble indexado.","354ef729":"La diferencia entre 6 o 5 grupos es que: \n1. Los grupos 0,3 y 5 pasan a ser los 0,3.\n2. Los grupos 1,2 y 4 se quedan mas o menos como estan","866e4af0":"Grupo formado por 36000 clientes donde en promedio solo tienen dos productos EasyMoney y estos dos son de cuenta simple. Con un promedio de edad de 37 a\u00f1os y unos ingresos medio\/bajos","62128847":"Clientes con em_acount y sin debit_card:","d8a23908":"Para esto hacemos primero una pivoty table, agrupando por fecha y cluster:","7e65499e":"Lo pintamos:","929cda63":"En este grupo hay 8400 clientes que tienen estos 4 productos: 'payroll_account','payroll','pension_plan','debit_card'","455f8be1":"Hacemos un Melt de la tabla y agrupamos los datos de todos los productos Easymoney en solo dos columnas:","b5f27e7a":"Vemos que casi todos son productos de cuenta simple:","3f8f3778":"Vamos a ofrecer a todos los clientes de este grupo que no tengan plan de pensiones, que lo contraten. Son unos 2776 clientes.","d9f69243":"En este dataset ya tenemos los campos CLuster para la segmentacion con 6 grupos y Cluster2 para la de 5 grupos."}}