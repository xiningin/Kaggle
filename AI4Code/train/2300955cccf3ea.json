{"cell_type":{"745d7b13":"code","729485c4":"code","27440e73":"code","b48892f6":"code","21716c3d":"code","29d59b1e":"code","11aafa4e":"code","4703d98f":"code","a82cc8eb":"code","d1603023":"code","0b28d462":"code","f8853c36":"code","05b627a2":"code","6b606b81":"code","4264b9d8":"code","e5e0b6b3":"code","9e1cc11c":"code","136333b2":"code","6439c5d8":"code","50c4b237":"code","0428feb7":"code","b25dae07":"code","e2e411a9":"code","e2b45bd8":"code","488d2c50":"code","1999b0b8":"code","e943cac2":"code","3202ddd8":"code","1f0f2b04":"code","2a63ecfe":"markdown","6a1ee3d8":"markdown","5e982df3":"markdown"},"source":{"745d7b13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","729485c4":"df2 = pd.read_csv('..\/input\/usa-election\/president_county_candidate.csv')\nmap1 = pd.read_csv('..\/input\/usa-election\/US map.csv')\nus = pd.read_csv('..\/input\/president19762016winner\/president-1976-2016.csv')","27440e73":"print(\"Total of party is : {}\".format(len(df2['party'].unique())))","b48892f6":"print(\"Total of candidate is : {}\".format(len(df2['candidate'].unique())))","21716c3d":"!pip install squarify\n# libraries\nimport matplotlib.pyplot as plt\nimport squarify # for Treemap\nimport plotly.express as px # for US map\nimport pandas as pd","29d59b1e":"def Treemap(Name, n):\n  df = df2.iloc[(df2['candidate']==Name).values].sort_values('voted',ascending=False).head(n)\n  df1 = df.groupby('state').sum().sort_values('voted',ascending=False)\n  squarify.plot(sizes=df1.voted,label=df1.index,value=round(df1.voted,0))\n  plt.axis('off')\n  plt.show()\nTreemap('Joe Biden',4)","11aafa4e":"def Electionmap(Name):\n  Data = df2.iloc[(df2['candidate']==Name).values].groupby('state').sum()\n  Datamap = pd.merge(Data,map1,left_on='state',right_on='usa_state')\n\n  fig = px.choropleth(Datamap, locations='usa_state_code', color=Datamap.voted,\n                           range_color=(0, 11e6),\n                           locationmode = 'USA-states',  \n                           scope=\"usa\",\n                           title='USA Presidential Votes Counts')\n  fig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n  fig.show()\nElectionmap('Joe Biden')","4703d98f":"Electionmap('Donald Trump')","a82cc8eb":"us.head(2)","d1603023":"us.year.unique()","0b28d462":"def uselection(year):\n  usyear = us.iloc[(us['year']==year).values].sort_values('candidatevotes',ascending=False)\n  y = us.iloc[(us['year']==year).values].groupby('candidate').sum().sort_values('candidatevotes',ascending=False).head(2).reset_index()\n  voted1 = y.candidatevotes[0]\n  voted2 = y.candidatevotes[1]\n  party1 = us.iloc[(us['candidate']==y.candidate[0]).values].party.head(1)\n  party2 = us.iloc[(us['candidate']==y.candidate[1]).values].party.head(1)\n  y0 = [year, len(usyear.candidate.unique()), len(usyear.party.unique()), y.candidate[0], y.candidate[1],  voted1, voted2]\n  return y0\n\nrecord =[]\nfor i in [1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016]:\n  record.append(uselection(i))\ny2020 = [2020, 39, 27,'Joe Biden','Donald Trump', 80569496.0,\t74143636.0]\nrecord.append(y2020)\nrec = pd.DataFrame(record,columns=['year','number_candidate','number_party','name_candidate_1', 'name_candidate_2','voted_candidate_1','voted_candidate_2'])","f8853c36":"rec","05b627a2":"import seaborn as sns\nsns.barplot(x='year',y='number_candidate',data=rec)","6b606b81":"sns.barplot(x='year',y='number_party',data=rec)","4264b9d8":"import numpy as np \nimport matplotlib.pyplot as plt \n   \n# set width of bar \nbarWidth = 0.25\nfig = plt.subplots(figsize =(12, 8)) \n   \n# set height of bar \nCandidate1 = rec.voted_candidate_1\nCandidate2 = rec.voted_candidate_2\n   \n# Set position of bar on X axis \nbr1 = np.arange(12) \nbr2 = [x + barWidth for x in br1] \n   \n# Make the plot \nplt.bar(br1, Candidate1, color ='r', width = barWidth, edgecolor = 'red', label ='Candidate1')\nplt.bar(br2, Candidate2, color ='b', width = barWidth, edgecolor = 'blue', label ='Candidate2') \n   \n# Adding Xticks  \nplt.xlabel('YEAR', fontweight ='bold') \nplt.ylabel('Voted', fontweight ='bold') \nplt.xticks([r + barWidth for r in range(12)], \n           [1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020]) \n   \nplt.show() ","e5e0b6b3":"f= plt.figure(figsize=(15,5))\n\nax=f.add_subplot(121)\nsns.barplot(x='year',y='voted_candidate_1',data=rec, ax=ax, label='First candidate')\nax.set_title('Voted of the first candidate {}'.format(rec.name_candidate_1))\nax.legend()\nplt.ylim(0,9e7)\n\nax=f.add_subplot(122)\nsns.barplot(x='year',y='voted_candidate_2',data=rec, ax=ax,label='Second candidate')\nax.set_title('Voted of the second candidate {}'.format(rec.name_candidate_2))\nax.legend()\nplt.ylim(0,9e7)\n","9e1cc11c":"top5 = df2.groupby('candidate').sum().sort_values('voted',ascending=False).head(5).reset_index()\ntop5","136333b2":"import seaborn as sns\nsns.barplot(x='candidate', y='voted',data= top5)","6439c5d8":"df2.groupby('party').sum().sort_values('voted',ascending=False).head(5)","50c4b237":"Treemap('Jo Jorgensen',10)","0428feb7":"Treemap('Howie Hawkins',10)","b25dae07":"Treemap('Rocky De La Fuente',10)","e2e411a9":"Treemap('Gloria La Riva',10)","e2b45bd8":"Treemap('Kanye West',10)","488d2c50":"Treemap('Don Blankenship',10)","1999b0b8":"Treemap('Brock Pierce',10)","e943cac2":"Electionmap('Joe Biden')","3202ddd8":"Electionmap('Donald Trump')","1f0f2b04":"Electionmap('Jo Jorgensen')","2a63ecfe":"**Top 5 parties that got more votes**","6a1ee3d8":"**Top 5 candidates that got more votes**","5e982df3":"<h1 align=\"center\"> US election 2020 <\/h1>\n<img align = \"center\" src=\"https:\/\/www.linkpicture.com\/q\/US-election-2020.jpg\" width=600>\n\n<h2> Data infomation : <\/h2> Data are taken from: https:\/\/www.kaggle.com\/\n\nThis Notebook contains analysis of usa election result data that will help you to understand total vote distribution among candidates, parties since 1976."}}