{"cell_type":{"ffe5a5e7":"code","5ce99898":"code","3528c71f":"code","a44e7f71":"code","d001c052":"code","d201c430":"code","efebd474":"code","0fca0d64":"code","826062ed":"code","8acd892e":"code","9171460a":"code","bbea1b42":"code","7eb0de84":"code","9aa8f0d7":"code","c10a14e5":"code","56b1737d":"markdown","d79e7617":"markdown","e41bd87c":"markdown","f838face":"markdown"},"source":{"ffe5a5e7":"import sys\n!{sys.executable} -m pip install bar_chart_race","5ce99898":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport bar_chart_race as bcr\nfrom IPython.display import HTML\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom IPython.display import Video","3528c71f":"import tensorflow as tf\ntry:\n    tpu = tf.distribute.cluster_resolver.TPUClusterResolver()\n    print('Device:', tpu.master())\n    tf.config.experimental_connect_to_cluster(tpu)\n    tf.tpu.experimental.initialize_tpu_system(tpu)\n    strategy = tf.distribute.experimental.TPUStrategy(tpu)\nexcept:\n    strategy = tf.distribute.get_strategy()\nprint('Number of replicas:', strategy.num_replicas_in_sync)","a44e7f71":"#data = pd.read_csv('https:\/\/www3.nhk.or.jp\/n-data\/opendata\/coronavirus\/nhk_news_covid19_prefectures_daily_data.csv')\ndata = pd.read_csv('..\/input\/covid19-tokyo\/nhk_news_covid19_prefectures_daily_data.csv')\ndata[-1:]","d001c052":"data.columns","d201c430":"data['positives']=data['\u5404\u5730\u306e\u611f\u67d3\u8005\u6570_1\u65e5\u3054\u3068\u306e\u767a\u8868\u6570']\ndata[\"date\"] = data[\"\u65e5\u4ed8\"].apply(pd.to_datetime, dayfirst=True)\ndata[-1:]","efebd474":"pref_jap=['\u5317\u6d77\u9053', '\u9752\u68ee\u770c', '\u5ca9\u624b\u770c', '\u5bae\u57ce\u770c', '\u79cb\u7530\u770c', '\u5c71\u5f62\u770c', '\u798f\u5cf6\u770c', '\u8328\u57ce\u770c', '\u6803\u6728\u770c', '\u7fa4\u99ac\u770c', '\u57fc\u7389\u770c', '\u5343\u8449\u770c', '\u6771\u4eac\u90fd', '\u795e\u5948\u5ddd\u770c', '\u65b0\u6f5f\u770c', '\u5bcc\u5c71\u770c', '\u77f3\u5ddd\u770c', '\u798f\u4e95\u770c', '\u5c71\u68a8\u770c', '\u9577\u91ce\u770c', '\u5c90\u961c\u770c', '\u9759\u5ca1\u770c', '\u611b\u77e5\u770c', '\u4e09\u91cd\u770c', '\u6ecb\u8cc0\u770c', '\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5175\u5eab\u770c', '\u5948\u826f\u770c', '\u548c\u6b4c\u5c71\u770c', '\u9ce5\u53d6\u770c', '\u5cf6\u6839\u770c', '\u5ca1\u5c71\u770c', '\u5e83\u5cf6\u770c', '\u5c71\u53e3\u770c', '\u5fb3\u5cf6\u770c', '\u9999\u5ddd\u770c', '\u611b\u5a9b\u770c', '\u9ad8\u77e5\u770c', '\u798f\u5ca1\u770c', '\u4f50\u8cc0\u770c', '\u9577\u5d0e\u770c', '\u718a\u672c\u770c', '\u5927\u5206\u770c', '\u5bae\u5d0e\u770c', '\u9e7f\u5150\u5cf6\u770c', '\u6c96\u7e04\u770c']\npref_eng=['Hokkaido', 'Aomori', 'Iwate', 'Miyagi', 'Akita', 'Yamagata', 'Fukushima', 'Ibaraki', 'Tochigi', 'Gunma', 'Saitama', 'Chiba', 'Tokyo', 'Kanagawa', 'Niigata', 'Toyama', 'Ishikawa', 'Fukui', 'Yamanashi', 'Nagano', 'Gifu', 'Shizuoka', 'Aichi', 'Mie', 'Shiga', 'Kyoto', 'Osaka', 'Hyogo', 'Nara', 'Wakayama', 'Tottori', 'Shimane', 'Okayama', 'Hiroshima', 'Yamaguchi', 'Tokushima', 'Kagawa', 'Ehime', 'Kochi', 'Fukuoka', 'Saga', 'Nagasaki', 'Kumamoto', 'Oita', 'Miyazaki', 'Kagoshima', 'Okinawa']","0fca0d64":"print(pref_jap)\nprint(pref_eng)","826062ed":"normal_mapping=dict(zip(pref_jap,pref_eng)) \nreverse_mapping=dict(zip(pref_eng,pref_jap)) ","8acd892e":"data['name']=data['\u90fd\u9053\u5e9c\u770c\u540d'].map(normal_mapping)","9171460a":"# set double indexes\ndata.set_index(['date','name'])","bbea1b42":"# unstack!!!\ndata1a=data.set_index(['date','name']).unstack()['positives']\ndata1a","7eb0de84":"data1a2 = data1a.fillna(0)\ndata1a2","9aa8f0d7":"df = data1a2\nbcr.bar_chart_race(\n    df=df,\n    filename='Covid19Japan_BarChartRace.mp4',\n    orientation='h',\n    sort='desc',\n    n_bars=20,\n    fixed_order=False,\n    fixed_max=False,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.95,\n    period_label={'x': .99, 'y': .10, 'ha': 'right', 'va': 'center'},\n    period_fmt='%B %d, %Y',\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,'s': '',\n                                      'ha': 'right', 'size': 8, 'family':'IPAGothic'},\n    perpendicular_bar_func='median',\n    period_length=1000,\n    figsize=(5,3),\n    dpi=500,\n    cmap='dark24',\n    title='Covid19 Japan by Prefecture',\n    title_size=10,\n    bar_label_size=7,\n    tick_label_size=5,\n    shared_fontdict={'family':'IPAGothic','color':'.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha':.7},\n    filter_column_colors=True)","c10a14e5":"Video(\"\/kaggle\/working\/Covid19Japan_BarChartRace.mp4\", width=800, height=600, embed=True)","56b1737d":"# Dataframe for Bar Chart Race","d79e7617":"# Create Bar Chart Race\n","e41bd87c":"# Covid19 Positives in Japan - Bar Chart Race by Prefecture\n* cf. https:\/\/www.dexplo.org\/bar_chart_race\/\n* cf. https:\/\/github.com\/dexplo\/bar_chart_race\/","f838face":"# Data preparation"}}