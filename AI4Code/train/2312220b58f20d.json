{"cell_type":{"c1c177b1":"code","8451d965":"code","612e2634":"code","b83ae3a4":"code","c30db840":"code","a4353728":"code","84d5b634":"code","6185b82e":"code","6d31fd69":"code","8a0c1ce5":"code","073f008b":"code","ef0a3acf":"code","cb0686f1":"code","e99c4af4":"code","13e16fc4":"code","0b6a1d12":"code","4293c07e":"code","28218465":"code","5ad5195d":"code","2a44e819":"code","2a58d9e3":"code","7d98ee66":"code","94a47a4c":"code","3624ab0b":"markdown","91a9d7a4":"markdown","4771314c":"markdown","8e68fb44":"markdown","140b07f9":"markdown","370f168a":"markdown","4176408e":"markdown","3b399b0d":"markdown","44ee9869":"markdown","8dcf6fed":"markdown","a3552236":"markdown","dca85cb4":"markdown"},"source":{"c1c177b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8451d965":"train_data = pd.read_csv('\/kaggle\/input\/song-popularity-prediction\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/song-popularity-prediction\/test.csv')","612e2634":"%config Completer.use_jedi = True","b83ae3a4":"train_data.head(10)","c30db840":"train_data.info()","a4353728":"train_data.isnull().mean().round(4).mul(100).sort_values(ascending=False)","84d5b634":"test_data.isnull().mean().round(4).mul(100).sort_values(ascending=False)","6185b82e":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","6d31fd69":"sns.countplot(x='song_popularity',data=train_data)\n#There are more Non popular songs than popular songs and data is little imbalanced.","8a0c1ce5":"#Removing ID and target variable before proceeding to Univariate analysis.\ncols = train_data.columns.values[1:-1]\ncat_features = [col for col in cols if train_data[col].nunique() <= 15]\nnum_features = [col for col in cols if train_data[col].nunique() > 15]\n\ndef graph_histogram(train_data,test_data,col_name,hue_col='song_popularity'): \n    plt.figure()\n    sns.histplot(kde=True,x=col_name,hue=hue_col,data=train_data)\n    plt.title('Histogram of Column '+col_name)\n    plt.xlabel(col_name)\n    plt.plot()\n    plt.show()\n    ","073f008b":"print(cols)\nprint(cat_features)\nprint(num_features)\nprint(len(num_features))\nprint(len(cat_features))","ef0a3acf":"\nfor col in num_features:\n    graph_histogram(train_data,test_data,col)\n","cb0686f1":"for col in cat_features:\n    sns.countplot(x=col,data=train_data,hue='song_popularity')\n    plt.title('Count plot of '+col)\n    plt.plot()\n    plt.xlabel(col)\n    plt.show()","e99c4af4":"train_data_num = train_data[num_features]\nplt.figure(figsize=(10,10))\nsns.heatmap(train_data_num.corr(),annot=True,fmt='.2g',cmap=\"YlGnBu\")\n","13e16fc4":"corr_matrix = train_data_num.corr().abs()\nsol = (corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))\n                  .stack()\n                  .sort_values(ascending=False))\nprint(sol)\n\n","0b6a1d12":"train_data.head(2)","4293c07e":"from sklearn import model_selection\nfolds=5\nrandom_state_val=42\nx_train = train_data.iloc[:,1:-1]\nx_valid = train_data.iloc[:,-1]\ntrain_data['kfold'] = -1\n\nskf = model_selection.StratifiedKFold(shuffle=True,random_state=random_state_val)\nindices = skf.split(x_train,x_valid)\nfor fold,(train_indices,validation_indices) in enumerate(indices):\n    train_data.loc[validation_indices,'kfold'] = fold ","28218465":"train_data.head(2)","5ad5195d":"train_data['kfold'].value_counts()","2a44e819":"train_data.to_csv('songs_popularity_stratified_5_folds.csv',index=False)","2a58d9e3":"folds_file = pd.read_csv('.\/songs_popularity_stratified_5_folds.csv')\n","7d98ee66":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import ColumnTransformer\n\nnumeric_pipeline = make_pipeline(SimpleImputer(strategy='mean'),StandardScaler())\ncat_nan = SimpleImputer(strategy='most_frequent')\nfinal_pipeline = ColumnTransformer([('numerical',numeric_pipeline,num_features),('categorical',cat_nan,cat_features)])\nfinal_train_data = final_pipeline.fit_transform(train_data)\nprint(final_train_data.shape)","94a47a4c":"final_id_kfold = train_data.loc[:,['id','kfold']].values\nfinal_train_data = np.hstack((final_train_data,final_id_kfold))\nprint(final_train_data.shape)","3624ab0b":"**Count plot to know distribution of target variable**","91a9d7a4":"**Missing values analysis**","4771314c":"In the below code we are dividing the data into 5 folds using stratifiedKfold strategy.Since our traget class is not balanced dataset we are using stratified K folds.\nsplit function gives the indices of training and validation data sets for each fold.\nin the code **train_data.loc[validation_indices,'kfold'] = fold** we are assigning fold number to the validation indices for that fold. The idea here is when we are training the code on whole data set at later stage,we ignore the current fold and train on rest of the fods and validate on current fold.","8e68fb44":"We could see most of the columns have around 10% values missing.SO, we can not simply remove 10% data.We need to impute these values.","140b07f9":"**Top Correlated Features**","370f168a":"There are more unpopular somgs than popula songs.around 25000 unpopular songs are present but only 15000 popular songs.","4176408e":"StratifiedKfolds has split the dta into 5 folds with each fold having 8000 records and we could see that the last columns has been set to the validation fold the records belongs to.","3b399b0d":"**Missing Value Imputation**\n\nWe have numeric fields and categorical fields.\nFor numeric fields we will impute with mean and for categorical fields we will impute with mode.","44ee9869":"Getting ID and Kfold from train data to append to final data.SInce we applied ColumnTransformer final numoy array does not have ID and Kfold columns.","8dcf6fed":"Based on above KDE plots for popular and upopular songs we can see that in all the numerical features we can see significant overlap.There is no clear separation for any of the numerical feature for popular\/unpopular song.based on this we cannot arrive at which feature is important for us to proceed.","a3552236":"**If you find this useful please upvote it.****","dca85cb4":"**Correlation matrix for numerical features**"}}