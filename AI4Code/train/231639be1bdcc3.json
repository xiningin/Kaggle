{"cell_type":{"9bae01c4":"code","4daafa9d":"code","0799f16d":"code","e74d6d28":"code","fbbff0aa":"code","3e8f154b":"markdown","9fcc9380":"markdown","47d72d6d":"markdown","0e76b87c":"markdown","43c9a4dd":"markdown","e0fe5b95":"markdown","21039b7e":"markdown","f3d1f3c1":"markdown"},"source":{"9bae01c4":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport pydicom\nfrom skimage.exposure import exposure, equalize_hist,equalize_adapthist\nimport cv2\nfrom skimage.filters import unsharp_mask\nprint('packages imported')","4daafa9d":"def load_image(img_dcm):\n    \n    image = pydicom.dcmread(img_dcm)\n    pixels = image.pixel_array\n\n    min_pixel = np.min(pixels)\n    max_pixel = np.max(pixels)\n\n    if image.PhotometricInterpretation == \"MONOCHROME1\":\n        pixels = max_pixel - pixels\n    else:\n        pixels = pixels\n\n    return pixels\n\n\n","0799f16d":"def apply_filter(f, img):\n    if f == 'equalize_hist': \n        img = equalize_hist(img, nbins=256, mask= None)\n    if f== 'equalize_adapthist':\n        img = equalize_adapthist(img, kernel_size = None, clip_limit=0.01,nbins=256)\n    if f == 'unsharp_mask':\n        img = unsharp_mask(img, radius=5, amount=2)\n    return img    ","e74d6d28":"\ndef plot_image(title, image, process_image):\n    fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(12,12), sharex=True, sharey= True)\n    ax = axes.ravel()\n    ax[0].imshow(img, cmap=plt.cm.gray)\n    ax[0].set_title('Original_image')\n    ax[1].imshow(process_image, cmap=plt.cm.gray)\n    ax[1].set_title(title)\n    for a in ax:\n        a.axis('off')\n    fig.tight_layout()\n    plt.show()","fbbff0aa":"\n\nmain_dir = '..\/input\/siim-covid19-detection\/train'\nfolder_names = os.listdir(main_dir)\n\nfor folder_name in folder_names:\n    for img_folder in os.listdir(os.path.join(main_dir,folder_name)):\n        for img_dir in os.listdir(main_dir+'\/'+folder_name+'\/'+img_folder):\n            print(img_dir)\n            img = load_image(main_dir+'\/'+folder_name+'\/'+img_folder+'\/'+img_dir)\n            processed_img = apply_filter('equalize_hist',img)\n            plot_image('Image Equalize_hist', img, processed_img)\n            \n            processed_img = apply_filter('equalize_adapthist',img)\n            plot_image('Image Equalize_adapthist', img, processed_img)\n            \n            processed_img = apply_filter('unsharp_mask',img)\n            plot_image('Image unsharp_mask', img, processed_img)\n    break\n            \n        ","3e8f154b":"#### Load dcm image","9fcc9380":"thanks to David Roberts","47d72d6d":"<center><h1>Applying filters to Chest X-Rays<\/h1><\/center>\n\n","0e76b87c":"### Plot original and filtted image","43c9a4dd":"#### Filter function","e0fe5b95":"### import necessary packages","21039b7e":"### Load an image and apply filters\n","f3d1f3c1":"### important function"}}