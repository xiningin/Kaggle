{"cell_type":{"98fe98c8":"code","81af12c0":"code","b12f47c0":"code","31d1fd8c":"code","99ece055":"code","91465321":"code","6e160cd2":"code","9b5fb44d":"code","ec50009f":"code","b8762735":"code","edda9673":"code","af0bfc42":"code","aab8d6e1":"code","287bd458":"code","5521e811":"code","73661df4":"code","15c0596a":"code","c4761813":"code","6e52315f":"code","652bae45":"code","01116136":"code","5e238d88":"code","9bc58160":"code","6171352b":"code","8a9d8727":"code","c7a72a5e":"code","eb0d2b03":"code","82b9264e":"code","1caf89cc":"code","b8d5b44a":"code","b0217fdc":"code","ada729c2":"code","a63be829":"code","b18c063c":"code","6bcd3b50":"code","55d9c929":"code","d8d850cd":"code","5e17b8cb":"code","6b4a0925":"markdown","7a101539":"markdown","6f5c6b0b":"markdown","901c3f42":"markdown","25011220":"markdown","ea37f767":"markdown","f139bd3e":"markdown","a9048954":"markdown","c480bf74":"markdown","d54dcc8a":"markdown","932d41a2":"markdown","630ce5f6":"markdown","0b8e8c6f":"markdown","23d8343b":"markdown","83dd5a4a":"markdown","9c3c585f":"markdown","5fb0396b":"markdown","f1dd3ffa":"markdown","2cabd68b":"markdown","caa851f0":"markdown","98a0ddd6":"markdown","2b36606c":"markdown","a617a7d7":"markdown","51acc82f":"markdown","69d9b969":"markdown","6ff263ca":"markdown","80af7b0a":"markdown","0fb31507":"markdown","4a498011":"markdown","969b1416":"markdown","fd8383f3":"markdown","56ced13d":"markdown","3a8c155e":"markdown","6d376bf7":"markdown","daae19c0":"markdown"},"source":{"98fe98c8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nfrom sklearn.metrics import silhouette_samples,silhouette_score\nfrom sklearn import metrics\nfrom sklearn.preprocessing import RobustScaler\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')\n\ndata.head()","81af12c0":"data.drop(columns=['Unnamed: 0','ID','Photo','Nationality','Flag','Club','Special','Club Logo','International Reputation','Skill Moves','Body Type','Real Face','Jersey Number','Joined','Loaned From','Contract Valid Until','Weight','Release Clause', 'LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM',\n       'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB','GKDiving','GKHandling',\n       'GKKicking', 'GKPositioning', 'GKReflexes', 'Release Clause','Value','Wage'],inplace=True)","b12f47c0":"data = data[(data['Position']=='RF')|(data['Position']=='ST')|(data['Position']=='LW')|(data['Position']=='LF')|\n           (data['Position']=='CF')|(data['Position']=='RW')|(data['Position']=='LS')|(data['Position']=='RS')]","31d1fd8c":"data.info()","99ece055":"data.head()","91465321":"# Player's attacking work rate is the first one before '\/' and defending work rate is the second one after '\/'\ndata['AttackWorkRate'] = [i.split('\/')[0] for i in data['Work Rate']]\ndata['DefenseWorkRate'] = [i.split('\/')[1][1:] for i in data['Work Rate']]\n\ndata.drop(columns=['Work Rate'],inplace=True)\n\n# Conerting Height to cm\ndata['Height'] = [12*2.54*float(i.split(\"'\")[0])+2.54*float(i.split(\"'\")[1]) for i in data['Height']]\n\n# Calculating position ratings\nfor column in ['LS','ST','RS','LW','LF','CF','RF','RW']:\n    \n    data[column] = [int(i.split('+')[0])+int(i.split('+')[1]) for i in data[column]] \n\n# No blanks in column names\ndata.rename(columns={\"Preferred Foot\": \"PreferredFoot\", \"Weak Foot\": \"WeakFoot\"},inplace=True)\n\n# Reindex\ndata.index = range(0,len(data.Age))","6e160cd2":"sns.countplot(data.Position)\nplt.show()\n\ndata.Position.value_counts()","9b5fb44d":"sns.set()\nsns.pairplot(data[['LS', 'ST', 'RS', 'LF', 'CF','RF', 'LW', 'RW']], height = 2.5)\nplt.show()","ec50009f":"pos_ratings = ['LS', 'ST', 'RS', 'LF', 'CF','RF', 'LW', 'RW']\n\nfor i in pos_ratings:\n    sns.boxplot(x='Position', y=i, data=data)\n    plt.show()","b8762735":"corrmat = data[['LS', 'ST', 'RS', 'LW','RW', 'LF', 'CF',\n       'RF', 'Crossing', 'Finishing', 'HeadingAccuracy', 'Height', 'ShortPassing',\n       'Volleys', 'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing',\n       'BallControl', 'Acceleration', 'SprintSpeed', 'Agility', 'Reactions',\n       'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle']].corr(method='spearman')\nplt.subplots(figsize=(30,25))\nsns.heatmap(corrmat, annot=True, vmax=0.9, square=True)","edda9673":"temp = data[data.Overall>65][['Position', 'Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing',\n       'Volleys', 'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing',\n       'BallControl', 'Acceleration', 'SprintSpeed', 'Agility', 'Reactions',\n       'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle']].groupby(['Position'], as_index=True).median().sort_values(by='Position', ascending=False)\n\nfor i in range(0,8):\n    sns.barplot(temp.iloc[i,:].nlargest(5).index,temp.iloc[i,:].nlargest(5))\n    plt.show()","af0bfc42":"for i in range(0,8):\n    sns.barplot(temp.iloc[i,:].nsmallest(5).index,temp.iloc[i,:].nsmallest(5))\n    plt.show()","aab8d6e1":"cols = ['WeakFoot']\n\nfor i in cols:\n    sns.barplot(x=i,y='Overall',data=data,estimator=np.median)\n    plt.show()\n    ","287bd458":"cols = ['AttackWorkRate','DefenseWorkRate']\n\nfor i in cols:\n    sns.barplot(x=i,y='Overall',data=data,estimator=np.median,order=[\"High\", \"Medium\", \"Low\"])\n    plt.show()","5521e811":"temp = data[data.Overall>70][['AttackWorkRate','Acceleration','Balance', 'SprintSpeed', 'Dribbling', 'Agility',\n            'BallControl','ShotPower','Finishing','Positioning','Strength','Stamina']].groupby(['AttackWorkRate'], as_index=True).median().sort_values(by='Acceleration', ascending=False)\ntemp","73661df4":"temp = data[data.Overall>70][['DefenseWorkRate','Interceptions', 'Marking', \n'StandingTackle', 'SlidingTackle','Stamina']].groupby(['DefenseWorkRate'], as_index=True).median().sort_values(by='Interceptions', ascending=False)\ntemp","15c0596a":"pos_ratings = ['LS', 'ST', 'RS', 'LF', 'CF','RF', 'LW', 'RW']\n\nfor i in pos_ratings:\n    sns.boxplot(x='Position', y=i, hue='PreferredFoot', data=data[data['Position']==i])\n    plt.show()","c4761813":"temp = data[['Age','Potential','Overall']].groupby(['Age'], as_index=True).median()\nplt.plot(temp.index,temp.Potential,label='Potential')\nplt.plot(temp.index,temp.Overall,label='Overall')\nplt.legend()\nplt.show()","6e52315f":"data_model = data[['Age','Potential','PreferredFoot',\n       'WeakFoot', 'Height', 'LS', 'ST', 'RS', 'LW', 'LF', 'CF',\n       'RF', 'RW', 'Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing',\n       'Volleys', 'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing',\n       'BallControl', 'Acceleration', 'SprintSpeed', 'Agility', 'Reactions',\n       'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle',\n       'AttackWorkRate', 'DefenseWorkRate']]\n\n# Label encoder for categorical features\n\ndata_model['AttackWorkRate'] = data_model['AttackWorkRate'].map({'Low': 0, 'Medium': 0.5, 'High':1}).astype(float)\ndata_model['DefenseWorkRate'] = data_model['DefenseWorkRate'].map({'Low': 0, 'Medium': 0.5, 'High':1}).astype(float)\ndata_model['PreferredFoot'] = data_model['PreferredFoot'].map({'Left': 0, 'Right': 1}).astype(int)","652bae45":"robust = RobustScaler()\ndata_model_robust = pd.DataFrame(robust.fit_transform(data_model), columns=data_model.columns)","01116136":"# PCA application for Striker group\npca_striker = PCA(n_components=1)\nstriker = pca_striker.fit_transform(data_model_robust[['ST','LS','RS']])\nprint(\"Explained variance ratio for Striker PCA application: \",pca_striker.explained_variance_ratio_)\ndata_model_robust['Striker'] = striker\ndata_model_robust.drop(columns=['ST','LS','RS'],inplace=True)\n\n# PCA application for Forward group\npca_forward = PCA(n_components=1)\nforward = pca_forward.fit_transform(data_model_robust[['CF','LF','RF']])\nprint(\"Explained variance ratio for Forward PCA application: \",pca_forward.explained_variance_ratio_)\ndata_model_robust['Forward'] = forward\ndata_model_robust.drop(columns=['CF','LF','RF'],inplace=True)\n\n# PCA application for Winger group\npca_wing = PCA(n_components=1)\nwing = pca_wing.fit_transform(data_model_robust[['RW','LW']])\nprint(\"Explained variance ratio for Winger PCA application: \",pca_wing.explained_variance_ratio_)\ndata_model_robust['Wing'] = wing\ndata_model_robust.drop(columns=['RW','LW'],inplace=True)\n\n# PCA application for defensive skills\npca_def = PCA(n_components=1)\ndefensive = pca_def.fit_transform(data_model_robust[['Marking', 'StandingTackle', 'SlidingTackle','Interceptions']])\nprint(\"Explained variance ratio for Defensive PCA application: \",pca_def.explained_variance_ratio_)\ndata_model_robust['Defensive'] = defensive\ndata_model_robust.drop(columns=['Marking', 'StandingTackle', 'SlidingTackle','Interceptions'],inplace=True)","5e238d88":"distortions_robust = []\n\nk_number = range(1,10)\nfor k in k_number:\n    km = KMeans(n_clusters=k, random_state=42)\n    km.fit(data_model_robust)\n    distortions_robust.append(km.inertia_)    \n\n\nplt.figure(figsize=(16,8))\nplt.plot(k_number, distortions_robust, 'bx-',label='robust')\nplt.legend()\nplt.xlabel('k')\nplt.ylabel('Inertia')\nplt.title('The Elbow Method showing the optimal k')\nplt.show()","9bc58160":"data_model = data_model_robust.copy()\n\nkm = KMeans(n_clusters=4, random_state=42)\nlabels_kmeans = km.fit_predict(data_model)\n\ndata_model['Cluster'] = labels_kmeans\ndata['Cluster'] = labels_kmeans","6171352b":"sns.countplot(data.Cluster)\nplt.show()\nprint(data.Cluster.value_counts())\n","8a9d8727":"data['Pos'] = ['Forward' if (i=='CF') or (i=='LF') or (i=='RF') else 'Striker' if (i=='ST') or (i=='RS') or (i=='LS') else 'Wing' for i in data.Position]\n\nsns.countplot(data.Cluster,hue=data.Pos)\nplt.show()","c7a72a5e":"data_temp = data.loc[:,['Cluster','Overall','Age','Potential']]\nsns.pairplot(data_temp, hue=\"Cluster\",palette='bright')","eb0d2b03":"temp = data[['Cluster','Overall','Age','Potential']].groupby(['Cluster'], as_index=True).mean().sort_values(by='Overall', ascending=False)\ntemp","82b9264e":"import plotly.graph_objects as go\n\ncategories = ['ShotPower','Finishing','Positioning','Strength','ShortPassing','BallControl','Acceleration','SprintSpeed','Dribbling','Agility','Balance','LongPassing','Crossing']\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatterpolar(\n      r=[data[data['Cluster']==2].ShotPower.mean(), data[data['Cluster']==2].Finishing.mean(), data[data['Cluster']==2].Positioning.mean(),data[data['Cluster']==2].Strength.mean(), data[data['Cluster']==2].ShortPassing.mean(),data[data['Cluster']==2].BallControl.mean(),data[data['Cluster']==2].Acceleration.mean(), data[data['Cluster']==2].SprintSpeed.mean(), data[data['Cluster']==2].Dribbling.mean(),  data[data['Cluster']==2].Agility.mean(),  data[data['Cluster']==2].Balance.mean(),data[data['Cluster']==2].LongPassing.mean(),data[data['Cluster']==2].Crossing.mean()],\n      theta=categories,\n      fill='toself',\n      name='Cluster 2'\n))\n\n\nfig.add_trace(go.Scatterpolar(\n      r=[data[data['Cluster']==0].ShotPower.mean(), data[data['Cluster']==0].Finishing.mean(), data[data['Cluster']==0].Positioning.mean(),data[data['Cluster']==0].Strength.mean(), data[data['Cluster']==0].ShortPassing.mean(),data[data['Cluster']==0].BallControl.mean(),data[data['Cluster']==0].Acceleration.mean(), data[data['Cluster']==0].SprintSpeed.mean(), data[data['Cluster']==0].Dribbling.mean(),  data[data['Cluster']==0].Agility.mean(),  data[data['Cluster']==0].Balance.mean(),data[data['Cluster']==0].LongPassing.mean(),data[data['Cluster']==0].Crossing.mean()],\n      theta=categories,\n      fill='toself',\n      name='Cluster 0'\n))\nfig.add_trace(go.Scatterpolar(\n      r=[data[data['Cluster']==1].ShotPower.mean(), data[data['Cluster']==1].Finishing.mean(), data[data['Cluster']==1].Positioning.mean(),data[data['Cluster']==1].Strength.mean(), data[data['Cluster']==1].ShortPassing.mean(),data[data['Cluster']==1].BallControl.mean(),data[data['Cluster']==1].Acceleration.mean(), data[data['Cluster']==1].SprintSpeed.mean(), data[data['Cluster']==1].Dribbling.mean(),  data[data['Cluster']==1].Agility.mean(),  data[data['Cluster']==1].Balance.mean(),data[data['Cluster']==1].LongPassing.mean(),data[data['Cluster']==1].Crossing.mean()],\n      theta=categories,\n      fill='toself',\n      name='Cluster 1'\n))\n\nfig.add_trace(go.Scatterpolar(\n      r=[data[data['Cluster']==3].ShotPower.mean(), data[data['Cluster']==3].Finishing.mean(), data[data['Cluster']==3].Positioning.mean(),data[data['Cluster']==3].Strength.mean(), data[data['Cluster']==3].ShortPassing.mean(),data[data['Cluster']==3].BallControl.mean(),data[data['Cluster']==3].Acceleration.mean(), data[data['Cluster']==3].SprintSpeed.mean(), data[data['Cluster']==3].Dribbling.mean(),  data[data['Cluster']==3].Agility.mean(),  data[data['Cluster']==3].Balance.mean(),data[data['Cluster']==3].LongPassing.mean(),data[data['Cluster']==3].Crossing.mean()],\n      theta=categories,\n      fill='toself',\n      name='Cluster 3'\n))\n\n\nfig.update_layout(\n  polar=dict(\n    radialaxis=dict(\n      visible=True,\n      range=[0, 100]\n    )),\n  showlegend=True\n)\n\nfig.show()\n","1caf89cc":"import plotly.graph_objects as go\n\ncategories = ['ShotPower','Finishing','Positioning','Strength','ShortPassing','BallControl','Acceleration','SprintSpeed','Dribbling','Agility','Balance','LongPassing','Crossing']\n\nfig = go.Figure()\n\n\nfig.add_trace(go.Scatterpolar(\n      r=[data[data['Cluster']==0].ShotPower.mean(), data[data['Cluster']==0].Finishing.mean(), data[data['Cluster']==0].Positioning.mean(),data[data['Cluster']==0].Strength.mean(), data[data['Cluster']==0].ShortPassing.mean(),data[data['Cluster']==0].BallControl.mean(),data[data['Cluster']==0].Acceleration.mean(), data[data['Cluster']==0].SprintSpeed.mean(), data[data['Cluster']==0].Dribbling.mean(),  data[data['Cluster']==0].Agility.mean(),  data[data['Cluster']==0].Balance.mean(),data[data['Cluster']==0].LongPassing.mean(),data[data['Cluster']==0].Crossing.mean()],\n      theta=categories,\n      fill='toself',\n      name='Cluster 0'\n))\n\nfig.add_trace(go.Scatterpolar(\n      r=[data[data['Cluster']==3].ShotPower.mean(), data[data['Cluster']==3].Finishing.mean(), data[data['Cluster']==3].Positioning.mean(),data[data['Cluster']==3].Strength.mean(), data[data['Cluster']==3].ShortPassing.mean(),data[data['Cluster']==3].BallControl.mean(),data[data['Cluster']==3].Acceleration.mean(), data[data['Cluster']==3].SprintSpeed.mean(), data[data['Cluster']==3].Dribbling.mean(),  data[data['Cluster']==3].Agility.mean(),  data[data['Cluster']==3].Balance.mean(),data[data['Cluster']==3].LongPassing.mean(),data[data['Cluster']==3].Crossing.mean()],\n      theta=categories,\n      fill='toself',\n      name='Cluster 3'\n))\n\n\nfig.update_layout(\n  polar=dict(\n    radialaxis=dict(\n      visible=True,\n      range=[0, 100]\n    )),\n  showlegend=True\n)\n\nfig.show()\n","b8d5b44a":"temp = data_model[['Cluster','Striker','Forward','Wing']].groupby(['Cluster'], as_index=True).mean().sort_values(by='Cluster', ascending=False)\ntemp","b0217fdc":"temp = data[['Cluster','HeadingAccuracy','Volleys','Curve','Reactions',\n             'Jumping', 'Stamina','Aggression','Vision','Penalties',\n            'Composure']].groupby(['Cluster'], as_index=True).mean().sort_values(by='Cluster', ascending=False)\ntemp","ada729c2":"temp = data_model[['Cluster','AttackWorkRate','DefenseWorkRate','Defensive']].groupby(['Cluster'], as_index=True).mean().sort_values(by='Cluster', ascending=False)\ntemp","a63be829":"data_temp = data[(data['Cluster']==2) | (data['Cluster']==1)].loc[:,['Cluster','Overall','Age','Potential']]\nsns.pairplot(data_temp, hue=\"Cluster\",palette='bright')","b18c063c":"data[data['Cluster']==2].sort_values(by='Overall',ascending=False)[['Name','Age','Overall']].head(15)","6bcd3b50":"data[data['Cluster']==2].sort_values(by='Overall',ascending=True)[['Name','Age','Overall','ShotPower','Finishing','Positioning','Strength','ShortPassing','BallControl','Acceleration','SprintSpeed','Dribbling','Agility','Balance','LongPassing','Crossing']].head(15)","55d9c929":"data[data['Name']=='D. Braaten'][['Name','Cluster','Overall','Strength']].T","d8d850cd":"data[data['Name']=='J. Berget'][['Name','Cluster','Overall','Stamina']].T","5e17b8cb":"data[data['Name']=='Nino'][['Name','Cluster','Overall','Positioning','Composure']].T","6b4a0925":"The pair plot of positional skills such as ST, CF, etc. demonstrates the general ability of a player when he plays in different positions is highly positively correlated with the general ability of him in his own position. For example, a player who is playing in ST position with high ST skill is also good at in other forward positions such as CF and RW. \n\nThe correlation within the groups (striker group: ST, LS, RS; forward group: CF, RF, LF; winger group: RW, LW) is approximately 1. \n\nThe skill similarity between wingers and forwards are also high with low variance. The highest difference is between striker skills and winger skills with higher variance. Besides, all positional skill ratings are close to normal distribution.","7a101539":"**Based on two analyses above, the distinctive playing skills for:**\n\n**Striker group:** ShotPower, Positioning, Finishing, Strength \n\n**Forward group:** ShortPassing, BallControl, Positioning, Acceleration, SprintSpeed, Agility, Dribbling, Balance\n\n**Winger group:** Crossing, LongPassing, ShortPassing, Acceleration, SprintSpeed, Agility, Dribbling, Balance. \n\nAgain, winger and forward group features are similar.","6f5c6b0b":"Players with high overall skills put high working effort during the game both in attack and defense. \n\nThe interesting part is although some players have high skill rates, they put low effort, but it does not change the fact that they are talented and add value to their teams.","901c3f42":"AttackingWorkRate is positively related to median forward and winger playing skills such as Acceleration, SprintSpeed, Balance, Dribbling, Agility, so these skills require more effort during the match in terms of energy and work. \n\nStriker skills such as ShotPower, Finishing, Positioning, BallControl and Strength requires less effort, but more intelligence and natural talent. \n\nPlayers having high Stamina are able to put more effort and work rate.\n\nForward players with higher defensive skills put more defensive effort in the pitch.","25011220":"FIFA 19 is a football video game developed by Electronic Arts and released on September 28th, 2018 on platforms such as PC, PlayStation, Xbox. \n\nIn order to provide a realistic and immersive game experience, Electronic Arts creates digital representations of football players based on their skills in the real world as much as possible. Each football player is rated mostly between 0 and 100 in terms of different features which characterizes their playing skills such as shot power, short passing, tackling skills etc. \n\nAccording to an interview made with Michael Mueller-Moehring who is one of the producers of Electronic Arts in charge of rating players in FIFA games, player abilities are determined by cooperation of a network consisting of more than 9000 data reviewers who are actually coaches, professional scouts and football fans actively visiting stadiums to watch many footballers playing and approximately 300 editors working for Electronic Arts who help Mueller-Moehring to assign rating values for the players in the game by utilizing data reviewers\u2019 feedback and stats in real football matches.  ","ea37f767":"By looking closer to the plot below, the details of Cluster 2, which has high skilled players, and Cluster 1, which has low skilled players as well as very young players which have low rating skills right now but high potential for the future can be seen. \n\nCluster 2 includes top players such as Lionel Messi, Cristiano Ronaldo, Neymar Jr, Eden Hazard, etc. \n\nIn addition to them, there are some players which have lower Overall rating close to the other clusters. When these players are explored in detail, it can be seen that they are specialized and skilled too high in some playing skills and that\u2019s why they are clustered with the top players in this model although they do not have high Overall ratings. \n\nFor example, D. Braaten who has 67 Overall rating has Strength rating of 88. Similarly, J. Berget who has 69 Overall rating has Stamina rating of 93. Lastly, Nino, who has 70 Overall rating and is 38 years old which can be counted as old for football, has Composure rating of 83 and Balance rating of 80. \n\nThe model allows us to find these special players which could be omitted by traditional filtering methods or clustering methods which take Overall rating as input.","f139bd3e":"The box plots below show the relationship between positions and positional skills. \n\nThe median RS skill of players who play in LS position are higher than the median of RS position players. It is also valid for LF position players. Similar relationship is also seen in CF skill. \n\nThe result deduced here is the playing position of a player does not matter too much, but the skill ratings are more crucial. Positions cannot be used for grouping or clustering players alone because it would be lacking. For example, if a manager looks for a new striker and checks only for players playing in ST, RS or LS positions in this dataset, he\/she will miss the opportunity to find players playing in other positions like CF, LF who also have high skills in striker positions and could be successful at striker positions. Clustering based on using all skills prevents this situation. So, the Position variable is only used in preprocessing, on the other hand the positional and playing skills are used in the modelling in this project.","a9048954":"# Modeling\nThe findings obtained from Exploratory Data Analysis is used to determine which features will be inputs to the model and how. The distinctive features which can be useful in clustering are selected as all features explained above except Name, Overall and Position. Label encoding is used for categorical features.","c480bf74":"Players who can use their weak foot very well has high overall rating.","d54dcc8a":"By checking average Overall, Age and Potential for each cluster, it is understood that **Cluster 2 includes high skilled and more mature players and Cluster 1 includes low skilled and mature players, also very young players with high potential.** Cluster 0 and Cluster 3 show similar characteristics based on these features except Cluster 3 has younger players than Cluster 0 does.","932d41a2":"The other average playing skills, work rates and Defensive feature result of PCA for each cluster can be seen in the following tables. The differences between each cluster are in line with the previous findings. \n\nFor example, skills more related to striker positions and highly correlated with Striker positional skills such as HeadingAccuracy, Reactions, Jumping, Aggression average is higher for Cluster 0. \n\nIn contrast, Curve and Vision are higher for Cluster 3 as more forward and winger related skills. \n\nDefenseWorkRate and Defensive skill is higher for Cluster 3 which is in line with the previous results about the defensive skills and positions.","630ce5f6":"# Data preprocessing and EDA\nData preprocessing and EDA help us to prepare the structure of the data for modelling, determine the relationships between the features and choose which features are useful for clustering the players.","0b8e8c6f":"# Data","23d8343b":"Some feature transformations","83dd5a4a":"# Introduction","9c3c585f":"Dropping unrelated features","5fb0396b":"The characteristics of each cluster are examined in this part. \n\nFirst of all, each cluster has close number of samples, players. \n\nAs expected, each cluster has players from each position, since players are grouped according to their abilities and attributes, not positions. However, there are more strikers in Cluster 0 than each cluster and Cluster 3 has more wingers and forwards.","f1dd3ffa":"# Clustering Forward Players by Using FIFA 19 Data","2cabd68b":"The positional right and left locations are not directly related with the preferred foot of the players in some positions. For example, lefty players in RF position have higher RF skill than righty ones in the same position. Similarly, righty players in LW position have higher LW skill than lefty ones in the same position. ","caa851f0":"Checking the column data types and whether there is missing data","98a0ddd6":"Top 5 playing skill of each position for players who have Overall skill more than 65","2b36606c":"# Conclusion\nThis project presents a clustering method for football players who play in forward positions based on their skills and attributes by using FIFA 19 dataset which is in the essence a video game but provides a realistic representation of football players. \n\nBy exploring the data, the most distinctive features for players are determined to use in the modelling. Standardization and feature extraction methods are applied on the dataset to prepare it for modelling. K-Means algorithm with 4 clusters is selected as the clustering model. \n\nForward players are grouped as \n\n* Highly skilled top, elite players and players specialized at some skills very well\n* Players with mostly striker-related skills\n* Players with mostly forward-related and winger-related skills \n* Low skilled players and high potential young players","a617a7d7":"The number of dimensions can be reduced by applying Principal Component Analysis (PCA) especially to highly correlated features. PCA method is obtaining components which explain the highest variance or most of the information in the data with a smaller number of attributes. \n\nAs explained in Exploratory Data Analysis, positional skills are highly correlated within each group. So, PCA is used to obtain Striker component from ST, RS, LS, and Forward component from CF, RF, LF, and lastly Wing component from RW and LW. The explained variance ratio is 100% for each PCA application. \n\nThe same method is also used for defensive skills, Marking, Interceptions, SlidingTackle and StandingTackle because these features are highly correlated and one component obtained from them which will be called Defensive is enough to represent a forward player\u2019s defensive skills with DefenseWorkRate feature. The explained variance ratio is 71.6%.","51acc82f":"In order to determine the number of clusters, inertia is calculated for different K values from 1 to 9 with K-Means algorithm and elbow method is applied. Elbow method consists of plotting the inertia as a function of the number of clusters and picking the elbow of the curve as the number of clusters to use. The number of clusters is determined as 4.","69d9b969":"Importing the related libraries and the data","6ff263ca":"The original dataset has been filtered in terms of features and samples in line with the scope and aim of the project. Related features are determined and selected in the beginning and players who do not play on forward positions according to FIFA\u2019s criteria are eliminated. Some of the features are used only in Exploratory Data Analysis (preprocessing) and Results stages to get a better understanding about the data, determine the most distinctive features for players and discuss the outcomes. Some of the features are used in Modelling as well as exploration and discussion. \n\n**General Information Features**\n\n* **Name:** Name of the player.\n* **Age:** Age of the player.\n* **Height:** Height of the player in inches.\n* **Overall:** General performance quality and value of the player representing the key positional skills and international reputation rated between 1-99. Overall attribute is used only in preprocessing and discussion stages because using it in modelling could lead to domination by this feature. The aim of the project is not basically sort and categorize the players using their overall talent and international reputation, but to cluster them based on using their whole skillset.\n* **Potential:** Maximum Overall rating expected to be reached by a player in the top of his career rated between 1-99.\n* **PreferredFoot:** Right or Left.\n* **WeakFoot:** Represents how well a player uses his weak foot (e.g. left for righties) rated between 1 to 5. \n* **WorkRate:** Degree of the effort the player puts in terms of attack and defense rated as low, medium and high.\n* **Position:** Position of the players on the pitch which determines their roles and responsibilities in the team. Forward positions in the football and FIFA 19 can be grouped as striker (ST: center striker, RS: right striker, LS: left striker), forward (CF: center forward, RF: right forward, LF: left forward) and winger (RW: right winger, LW: left winger). The word, forward, is used both as a general term and a special position. Strikers are positioned in front of forwards and wingers and very closed to the opposing goal. Their main responsibilities are attacking and scoring goals, that\u2019s why their ball control, shooting and finishing skills are expected to be well. Center forwards are positioned right behind the strikers. They are expected to receive balls from the others and score assists to the others or goals. In addition to the skills expected from strikers, they have to be good at passing. Right forwards and left forwards are positioned at the right and left of the center forwards with the same expectations.  Wingers are positioned near the touchlines to create chances for strikers and forwards from the right and left side of the field by breakthrough and crosses and to score goals. They are expected to be good at dribbling, acceleration, passing and crossing. \n\nPositions on the pitch:\n![image.png](attachment:image.png)\n\n\n\n**Positional Skill Features**\n\n* **ST:** Positional skill. Player\u2019s general ability when playing in ST position rated between 1-99.\n* **RS:** Positional skill. Player\u2019s general ability when playing in in RS position rated between 1-99.\n* **LS:** Positional skill. Player\u2019s general ability when playing in in LS position rated between 1-99.\n* **CF:** Positional skill. Player\u2019s general ability when playing in in CF position rated between 1-99.\n* **RF:** Positional skill. Player\u2019s general ability when playing in in RF position rated between 1-99.\n* **LF:** Positional skill. Player\u2019s general ability when playing in in LF position rated between 1-99.\n* **RW:** Positional skill. Player\u2019s general ability when playing in in RW position rated between 1-99.\n* **LW:** Positional skill. Player\u2019s general ability when playing in in LW position rated between 1-99. \n\n**Playing Skill Features**\n\n* **Crossing:** Crossing skill of the player rated between 1-99. Cross is a long-range pass from wings to center.\n* **Finishing:** Finishing skill of the player rated between 1-99. Finishing in football refers to finish an attack by scoring a goal.\n* **HeadingAccuracy:** Player\u2019s accuracy to pass or shoot by using his head rated between 1-99.\n* **ShortPassing:** Player\u2019s accuracy for short passes rated between 1-99.\n* **LongPassing:** Player\u2019s accuracy for long passes rated between 1-99.\n* **Dribbling:** Dribbling skill of the player rated between 1-99. Dribbling is carrying the ball without losing while moving in one particular direction.\n* **SprintSpeed:** Speed rate of the player rated between 1-99.\n* **Acceleration:** Shows how fast a player can reach his maximum sprint speed rated between 1-99.\n* **FKAccuracy:** Player\u2019s accuracy to score free kick goals rated between 1-99.\n* **BallControl:** Player\u2019s ability to control the ball rated between 1-99.\n* **Balance:** Player\u2019s ability to remain steady while running, carrying and controlling the ball rated between 1-99.\n* **ShotPower:** Player\u2019s strength level of shooting the ball rated between 1-99.\n* **Jumping:** Player\u2019s jumping skill rated between 1-99.\n* **Penalties:** Player\u2019s accuracy to score goals from penalty rated between 1-99.\n* **Strength:** Physical strength of the player rated between 1-99.\n* **Agility:** Gracefulness and quickness of the player while controlling the ball rated between 1-99.\n* **Reactions:** Acting speed of the player to what happens in his environment rated between 1-99. \n* **Aggression:** Aggression level of the player while pushing, pulling and tackling rated between 1-99.\n* **Positioning:** Player\u2019s ability to place himself in the right position to receive the ball or score goals rated between 1-99. \n* **Vision:** Player\u2019s mental awareness about the other players in the team for passing rated between 1-99.\n* **Volleys:** Player\u2019s ability to perform volleys rated between 1-99.\n* **LongShots:** Player\u2019s accuracy of shoots from long distances rated between 1-99.\n* **Stamina:** Player\u2019s ability to sustain his stamina level during the match rated between 1-99. Players with lower stamina get tired fast. \n* **Composure:** Player\u2019s ability to control his calmness and frustration during the match rated between 1-99.\n* **Curve:** Player\u2019s ability to curve the ball while passing or shooting rated between 1-99.\n* **Interceptions:** Player\u2019s ability to intercept the ball while opposite team\u2019s players are passing rated between 1-99. It is a defensive skill.\n* **StandingTackle:** Player\u2019s ability to perform tackle (take the ball from the opposite player) while standing rated between 1-99. It is a defensive skill.\n* **SlidingTackle:** Player\u2019s ability to perform tackle by sliding rated between 1-99. It is a defensive skill.\n* **Marking:** Player\u2019s ability to apply strategies to prevent opposing team from taking the ball rated between 1-99. It is a defensive skill.   \n","80af7b0a":"Players reach their potential skills around at 26-27 years old. ","0fb31507":"# Results","4a498011":"**The aim of this project is to cluster football players playing in forward positions such as strikers, forwards and wingers in FIFA 19 based on their skills and attributes.** Fulfilling this aim to some extent can contribute to the following areas:\n\n* The football specialists such as managers and scouts in the industry (in the real world) can utilize from this analysis as a first step to find and target new players whose skills and attributes are matched with their expectations. Besides, managers can use similarities within and differences between the segments to form different line ups and tactics. Since the FIFA 19 rating information is generated by the experts in the field based on stats and reviews, the related analyses with this dataset are valid for not only the game but also the real world.   \n\n* Gamers who play FIFA 19 modes such as Career and FUT which are simulations of creating and managing a team can utilize from this analysis to enhance their gaming experience similar to the real world example above. \n","969b1416":"In order to differentiate Cluster 0 and Cluster 3 more and get a better understanding about the abilities of each cluster, average distinctive playing skills are examined for each cluster in the radar plots. In the first radar plot, average distinctive playing skills are showed for each cluster, however in the second one, they are shown for only Cluster 0 and Cluster 3. \n\nApproximately for each skill, the highest averages, that is highest skilled players, are in Cluster 2 and the lowest ones are in Cluster 1. \n\nThe interesting part is the average distinctive playing skills for strikers such as ShotPower, Finishing, Positioning and Strength are higher for Cluster 0 than Cluster 3, on the other hand the average distinctive playing skills for wingers and forwards such as Acceleration, Agility, Dribbling, SprintSpeed, LongPassing, ShortPassing and Crossing are higher for Cluster 3 than Cluster 0. \n\nThe same result can be obtained with Striker, Forward and Wing features produced by PCA which is shown in table below. \n\nSo, it can be concluded that **Cluster 0 consists of players mostly with striker-related skills and Cluster 3 consists of players mostly with forward-related and winger-related skills.** This differentiation is independent from the positions of the players, but it is directly related with the positional and playing skills of them. \n\nBesides, Striker and Wing feature differences between two clusters are higher than Forward feature difference because forward position players are like a bridge between striker and winger position players, and also forward positional skills are highly correlated with both striker and winger positional skills which is found in EDA stage. ","fd8383f3":"K-Means clustering is applied as clustering algorithms on the dataset. K-Means algorithm clusters data by trying to separate samples in K number of groups and minimizing a criterion known as the inertia (within-cluster-sum-of-square-error) which is distance based and also requires the number of clusters to be specified. \n\nSince K-Means algorithm is distance-based, normalization should be applied to the dataset to prevent high magnitude features from affecting and dominating the distance calculations negatively. Data standardization is a term which is used as a specific type of data normalization where it scales values of the features into a similar range. Standardization removes the mean from each sample and scales the data to unit variance. Standardization also considers that all samples for each attribute are normally distributed. However, standardization can be influenced by outliers easily. When the given dataset contains outliers, the results of standardization can be misguiding. In these kind of conditions, it is better to use different approaches which are robust against outliers such as robust standardization which uses the interquartile range. This method removes the median and scales the data in the range between 1st quartile and 3rd quartile. Since FIFA 19 dataset contains outliers in some of its features, robust standardization is applied on the dataset. ","56ced13d":"The lowest 5 playing skill of each position for players who have Overall skill more than 65\n\nDefensive skills, Interception, Marking, SlidingTackle and StandingTackle are the features at the bottom. ","3a8c155e":"Filtering the data to get only forward players","6d376bf7":"Many of the forward players are strikers followed by wingers and a smaller number of center, left and right forwards. ","daae19c0":"Heatmap shows the correlation between the numerical features.\n\nIt allows us to determine important playing skills in football in terms of positions.\n\nST, LS, and RS are highly correlated with Finishing, ShotPower, LongShots, Positioning, Reactions and Composure. \n\nCF, RF and LF are highly correlated with BallControl, Dribbling, ShortPassing, Positioning, Reactions and Composure. \n\nRW and LW have high correlation with Crossing, Dribbling, ShortPassing, BallControl and Vision. \n\nPositional skills within the groups are highly correlated, also winger and forward positional skills have high similarity with 97% correlation value which is followed by the relationship between forward and striker skills with 93% correlation value. So, the forward players resembles both striker and winger players like a bridge between them in terms of both location on the pitch and skills they have.\n\nDefensive skills such as Interception, Marking, SlidingTackle and StandingTackle have high correlation with each other. \n\nWinger and forward positional skills have higher correlation with defensive skills than the striker positional skills have. So, we can say that winger and forward players takes more defensive responsibilities than strikers.\n\nThe most negative correlations are between Height and Balance with Balance and Stamina which means players\u2019 height affect their Balance negatively and players with high balance put too much effort to control the ball while running and carrying and get tired quickly. "}}