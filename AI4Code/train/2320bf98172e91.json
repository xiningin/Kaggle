{"cell_type":{"f836d696":"code","d631cbb3":"code","66bc9842":"code","541bd55c":"markdown","6b7a1561":"markdown","55887767":"markdown"},"source":{"f836d696":"class Solution:\n    def restoreString(self, s, indices):\n        l = [None]*len(indices)\n        for i in range(len(indices)):\n            l[indices[i]] = s[i]\n        s = \"\"\n        for i in l:\n            s += i\n        return s","d631cbb3":"class Solution(object):\n    def kidsWithCandies(self, candies, extraCandies):\n        \"\"\"\n        :type candies: List[int]\n        :type extraCandies: int\n        :rtype: List[bool]\n        \"\"\"\n        b=[]\n        m=max(candies)\n        for x in candies:\n            if x+extraCandies>=m:\n                b.append(True)\n            else:\n                b.append(False)\n        return b","66bc9842":"class Solution:\n    def decompressRLElist(self, nums):\n        j = 0\n        l = len(nums)\n        a = []\n        while j<l:\n            freq = nums[j]\n            val = nums[j+1]\n            for i in range(freq):\n                a.append(val)\n            j += 2\n        return a","541bd55c":"Q2. Given the array candies and the integer extraCandies, where candies[i] represents the number of candies that the ith kid has.\n\nFor each kid check if there is a way to distribute extraCandies among the kids such that he or she can have the greatest number of candies among them. Notice that multiple kids can have the greatest number of candies.","6b7a1561":"Q1. Given a string s and an integer array indices of the same length.\n\nThe string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string.\n\nReturn the shuffled string.","55887767":"Q3. Input: nums = [1,2,3,4]\nOutput: [2,4,4,4]\nExplanation: The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].\nThe second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].\nAt the end the concatenation [2] + [4,4,4] is [2,4,4,4]."}}