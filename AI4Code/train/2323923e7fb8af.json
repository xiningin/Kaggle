{"cell_type":{"5646bde7":"code","5565162f":"code","139175ab":"code","e9d8637e":"code","7341350d":"code","7d724bec":"code","b665f928":"code","436b21fc":"code","207cddb2":"code","9456e768":"code","a7231b91":"code","866b8813":"code","988d0bbe":"code","012cecf6":"code","10499814":"code","aac5b0a5":"code","d05a5333":"code","c5b52506":"code","a6600cce":"markdown","ad352663":"markdown","56e8dea0":"markdown","f4b2f5e0":"markdown","ef9cb6b1":"markdown","b70e4133":"markdown","134df75b":"markdown","316f8667":"markdown","008eb293":"markdown"},"source":{"5646bde7":"# importing libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt\nimport seaborn as sns    # plots\n\nfrom sklearn.model_selection import train_test_split  # for train-test split\n\nfrom sklearn.neighbors import KNeighborsClassifier  # KNN\nfrom sklearn.ensemble import RandomForestClassifier  # Random Forest\n\nfrom sklearn.metrics import classification_report,confusion_matrix  # model performance report\n\nimport warnings\nwarnings.filterwarnings('ignore')","5565162f":"# load data\ndf = pd.read_csv(\"..\/input\/Skyserver_SQL2_27_2018 6_51_39 PM.csv\")\ndf.head()","139175ab":"# a look into the data\ndf.info()","e9d8637e":"df.describe()","7341350d":"# plot target class distribution\nsns.countplot(x='class',data=df)","7d724bec":"plt.figure(figsize=(10,6))\nsns.boxplot(x='class',y='dec',data=df,palette='coolwarm')","b665f928":"plt.figure(figsize=(10,6))\nsns.violinplot(x='class',y='dec',data=df,palette='plasma')","436b21fc":"# chnange target class to numeric\nnum = {'STAR':1,'GALAXY':2,'QSO':3}\ndf.replace({'class':num},inplace=True)","207cddb2":"df.head()","9456e768":"df.corr()['class'].drop('class')","a7231b91":"plt.figure(figsize=(10,6))\nsns.boxenplot(x='class',y='redshift',data=df,palette='winter')","866b8813":"plt.figure(figsize=(10,6))\nsns.violinplot(x='class',y='mjd',data=df)","988d0bbe":"# an algorithm to find pairs with high correlation\n# later we will drop one feature from each pair\nfeatures = ['ra', 'dec', 'u', 'g', 'r', 'i', 'z', \n            'run', 'camcol', 'field', 'specobjid', \n            'redshift', 'plate', 'mjd', 'fiberid']\nfor i in features:\n    for j in features:\n        if (df.corr()[i][j] >= 0.9) & (i != j):\n            print(i,'\\t',j)\n        else:\n            pass","012cecf6":"# we also found some triplets, good that we got more features to drop\ndf.drop(['i','r','specobjid','mjd','objid','rerun'],axis=1,inplace=True)","10499814":"# a function to select features wrt threshold\ncorrelation = df.corr()['class'].drop('class')\ndef feat_select(threshold):\n    abs_corr = correlation.abs()\n    feat = abs_corr[abs_corr>threshold].index.tolist()\n    X = df[feat]\n    return X","aac5b0a5":"# using Random Forest\nthreshold = 0\nrfc = RandomForestClassifier(n_estimators=100)\nX = feat_select(threshold)\ny = df['class']\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=40)\nrfc.fit(X_train,y_train)\npred = rfc.predict(X_test)\nprint('Model Score = ',rfc.score(X_test,y_test)*100,' %')","d05a5333":"# test for KNN with optimal K value\nerr = []\nfor i in range(1,20):\n    knn=KNeighborsClassifier(n_neighbors=i,p=2)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    err.append(np.mean(y_test != pred_i))\n    ","c5b52506":"plt.plot(range(1,20),err)","a6600cce":"## Exploratory analysis","ad352663":"Let's take a look at the target class first, to have an idea of its distribution","56e8dea0":"Looks like no missing values here.","f4b2f5e0":"## Modelling","ef9cb6b1":"# Classification of Digital Sky\n\nThis kernel is a classification task with KNN and Random Forest","b70e4133":"Here, K=13 fits good, but Random Forest still has an edge over KNN","134df75b":"we can see some the very low correlated variables, we will drop them later.\n\nFor now, we will study the relation with some good correlated variables.","316f8667":"Let us now start off with loading the data","008eb293":"Here we see that approx 5000 of the target class is 'Galaxy', which is about 50% of total,\nwhile, we have 40% as 'Star' and only 10%, 'QSO'.\n\nLet us now study the relation with some features"}}