{"cell_type":{"3ea9adc4":"code","a561f254":"code","926fa2c3":"code","aedad0a8":"code","22f5db52":"code","880cf2f7":"code","6a3575d2":"code","ad168cd0":"code","78675917":"code","8cc4ecef":"code","372aef78":"code","eda89e71":"code","6dde0f82":"code","6fd91474":"code","7f93718d":"code","e389976b":"code","29912ef4":"code","faf8c5f0":"code","3c0af939":"code","2bbc47dc":"code","235fdda6":"code","b11ebc65":"code","3d17ebb2":"code","c61314e4":"code","900a49b3":"code","504e91a9":"code","7b05e11d":"code","115f0a1f":"code","37e68bcc":"code","97ffdc6b":"code","4ad4611f":"code","946cad4f":"code","17aa0876":"code","c1f69540":"code","455d8e1e":"code","0ea8244f":"code","5886db79":"code","a5f3c508":"code","e0ac1f68":"code","225f97de":"code","12d763cc":"code","fef4cef2":"code","584f8117":"code","ad63b9ed":"code","ae7e09d4":"code","b25827cc":"markdown","63ea3429":"markdown","b303d51e":"markdown","e3f8b548":"markdown"},"source":{"3ea9adc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport pandas as pd \nfrom scipy import stats\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport math\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a561f254":"train_df =  pd.read_csv('..\/input\/nyc-taxi-trip-duration\/train.csv')\ntrain_df.dtypes\n","926fa2c3":"train_df.head()","aedad0a8":"train_df.describe()","22f5db52":"train_df['trip_duration'].describe()","880cf2f7":" y = np.log1p(train_df['trip_duration'])\n    ","6a3575d2":"y.hist(bins=100, figsize=(14,3))\nplt.xlabel('during')\nplt.title('Histogram');","ad168cd0":"from haversine import haversine\ndef calcul_distance(df):\n   pickedup = (df['pickup_latitude'], df['pickup_longitude'])\n   dropoff = (df['dropoff_latitude'], df['dropoff_longitude'])\n   return haversine(pickedup, dropoff)","78675917":"train_df['distance'] = train_df.apply(lambda x : calcul_distance(x), axis = 1)\n","8cc4ecef":"train_df['passenger_count'].value_counts()\ntrain_df['vendor_id'].value_counts()","372aef78":"train_df['vendor_id'] = train_df['vendor_id'].astype('category').cat.codes\n\n","eda89e71":"##from datetime import datetime\n##train_df_da = pd.to_datetime(train_df['pickup_datetime'])\n##train_df['month'] = train_df_da.dt.month\n##train_df['hour'] = train_df_da.dt.hour\n##train_df['wday'] = train_df_da.dt.weekday\n","6dde0f82":"train_df['speed'] = train_df['distance']\/train_df['trip_duration']*3.6","6fd91474":"train_df.describe()","7f93718d":"train_df.dtypes","e389976b":"train_df['passenger_count']","29912ef4":"train_df.dtypes","faf8c5f0":"train_new_1 = pd.read_csv(\"..\/input\/new-york-city-taxi-with-osrm\/fastest_routes_train_part_1.csv\")\ntrain_new_2 = pd.read_csv(\"..\/input\/new-york-city-taxi-with-osrm\/fastest_routes_train_part_2.csv\")\ntrain_test = pd.read_csv(\"..\/input\/new-york-city-taxi-with-osrm\/fastest_routes_test.csv\")\ntrain_new = pd.concat([train_new_1, train_new_2], axis=0)\n","3c0af939":"train_new_1.shape","2bbc47dc":"train_new_2.shape","235fdda6":"train_new.dtypes","b11ebc65":"train_all = train_df.merge(train_new, on='id', how='inner')","3d17ebb2":"train_all.dtypes","c61314e4":"from datetime import datetime\ntrain_d = pd.to_datetime(train_all['pickup_datetime'])\ntrain_all['month'] = train_d.dt.month.astype('category').cat.codes\ntrain_all['hour'] = train_d.dt.hour.astype('category').cat.codes\ntrain_all['wday'] = train_d.dt.weekday.astype('category').cat.codes","900a49b3":"train_all.shape","504e91a9":"train_all.head()","7b05e11d":"train_all.dtypes","115f0a1f":"SELECTED_COLUMNS = ['vendor_id', 'passenger_count', 'distance', 'pickup_latitude','pickup_longitude','dropoff_latitude', 'dropoff_longitude','hour','month','wday','total_distance','total_travel_time']\nX = train_all[SELECTED_COLUMNS]\nX.head(15)","37e68bcc":"X.shape[0]","97ffdc6b":"y = np.log1p(train_all['trip_duration'])","4ad4611f":"# Import the model we are using\nfrom sklearn.ensemble import RandomForestRegressor\n# Instantiate model with 100 decision trees\nrf = RandomForestRegressor(n_estimators = 100, random_state = 42)","946cad4f":"# Train the model on training data\nrf.fit(X, y);","17aa0876":"test_df =  pd.read_csv('..\/input\/nyc-taxi-trip-duration\/test.csv')\ntest_all = test_df.merge(train_test, on='id', how='inner')\ntest_df.dtypes\ntest_df.head(10)","c1f69540":"test_all.dtypes","455d8e1e":"test_df['vendor_id'] = test_df['vendor_id'].astype('category').cat.codes\n","0ea8244f":"test_df['distance'] = test_df.apply(lambda x : calcul_distance(x), axis = 1)","5886db79":"from datetime import datetime\ntest_df_da = pd.to_datetime(test_df['pickup_datetime'])\ntest_df['month'] = test_df_da.dt.month.astype('category').cat.codes\ntest_df['hour'] = test_df_da.dt.hour.astype('category').cat.codes\ntest_df['wday'] = test_df_da.dt.weekday.astype('category').cat.codes","a5f3c508":"test_all = test_df.merge(train_test, on='id', how='inner')","e0ac1f68":"from datetime import datetime\ntest_d_da = pd.to_datetime(test_all['pickup_datetime'])\ntest_all['month'] = test_d_da.dt.month.astype('category').cat.codes\ntest_all['hour'] = test_d_da.dt.hour.astype('category').cat.codes\ntest_all['wday'] = test_d_da.dt.weekday.astype('category').cat.codes","225f97de":"test_all.dtypes","12d763cc":"X_test = test_all[SELECTED_COLUMNS]\nX_test.describe()","fef4cef2":"\npredictions = np.exp(rf.predict(X_test))-np.ones(len(X_test))\nX_test.shape\npred = pd.DataFrame(predictions, index=test_df['id'])\npred.columns = ['trip_duration']\npred.to_csv(\"dat1.csv\")\n\npd.read_csv('dat1.csv').head()","584f8117":"X_test.shape","ad63b9ed":"from sklearn.model_selection import cross_val_score\nscores = -cross_val_score(rf, X, y, cv=2, scoring = 'neg_mean_squared_error' )","ae7e09d4":"#math.sqrt(scores.mean())","b25827cc":"## Data Exploration\n","63ea3429":"## Featuring Engenering\n","b303d51e":"## Model Predict","e3f8b548":"## DATA IMPORT\n"}}