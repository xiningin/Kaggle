{"cell_type":{"fd7ee8c4":"code","03852536":"code","99b36846":"code","5df80531":"code","5bca457b":"code","17e617cf":"code","2659bc8a":"code","1cb04bca":"code","4f6b017f":"code","c2891fac":"code","b735a924":"code","ca4ec857":"code","5d5892cf":"code","6d500563":"code","971a5e69":"code","f587108e":"code","97c3dbf6":"code","8e5e69c4":"code","9e987888":"code","37209203":"code","7fbef5dc":"code","ad9f3d65":"code","d8ad9565":"code","0cef35bf":"code","f8a2543c":"code","9e82d93c":"code","ca27a22f":"code","009f2003":"code","fbde1a27":"code","270c1f46":"code","fcb171de":"code","cce93011":"code","f7693aeb":"code","894232e3":"code","1b4dd40b":"code","7df55111":"code","cf4f7e61":"code","c61352df":"code","ecca6e9b":"code","5f35ce6c":"code","5b586d6d":"code","40d0a2c6":"code","67ae60f7":"code","e92a9ee8":"code","8523bf5f":"code","987fb572":"code","54bdffca":"code","8e57371d":"markdown","c0d0857b":"markdown","52f8ebe5":"markdown","48bbadc8":"markdown","d543c709":"markdown","1b6923d3":"markdown","c081c829":"markdown","32ee30bf":"markdown","1cdf0bdf":"markdown","5f46c5f7":"markdown","e930f399":"markdown","6dae557e":"markdown","2c02bf71":"markdown","fdfe7333":"markdown","73006d80":"markdown","89416b39":"markdown","5dd52828":"markdown","f6098f3a":"markdown","bba54747":"markdown","b2fa726e":"markdown","44cb8298":"markdown","834b510e":"markdown","725f5bdd":"markdown","07819535":"markdown","d1d0ac01":"markdown","7ab3f706":"markdown","65819acd":"markdown","aa492ca3":"markdown","85d8d86c":"markdown","0fe226c3":"markdown","bd9644ca":"markdown","8a8ab6c2":"markdown","d7e20749":"markdown","5172fd17":"markdown","62dc49c2":"markdown","85eead07":"markdown","a9da4f92":"markdown","db5ffbe7":"markdown","3a26236b":"markdown","9657b429":"markdown","c90843ab":"markdown","1672f946":"markdown","3d2a0daf":"markdown","c5a68165":"markdown","fa7b8deb":"markdown","c0c92910":"markdown","8d008762":"markdown","71ea5c71":"markdown","fd018581":"markdown","98cb1b8b":"markdown","b0215ce0":"markdown","7590c35a":"markdown","dc437410":"markdown","520731ed":"markdown","48d0fc2d":"markdown","3066b03d":"markdown","7a22af0c":"markdown","f813de83":"markdown","36f376e0":"markdown","e3bfaead":"markdown","561f50ff":"markdown","2afd69f9":"markdown","42a5e5a0":"markdown","c047139a":"markdown","cdb5eca9":"markdown","57513ac6":"markdown","920ee7c7":"markdown"},"source":{"fd7ee8c4":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib\nfrom matplotlib import pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\nsns.set(style=\"darkgrid\")\nimport matplotlib.dates as mdates\nimport datetime as dt","03852536":"f = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\nf_recovered = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv')\nf_deaths = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv')\nf_confirmed = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\nf['ObservationDate'] = pd.to_datetime(f['ObservationDate'], infer_datetime_format=True)\nf.drop(columns='SNo')","99b36846":"f.info()","5df80531":"f[[\"Confirmed\",\"Deaths\",\"Recovered\"]] = f[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int) \nf['Active'] = f['Confirmed'] - f['Deaths'] - f['Recovered']\nf.head()","5bca457b":"f['Country\/Region'].nunique()","17e617cf":"f['Country\/Region'].unique()","2659bc8a":"Total = f.groupby('ObservationDate').sum()\nTotal.drop(columns = 'SNo').max()","1cb04bca":"# World data\nworld = f.groupby(['ObservationDate'])[['SNo','Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nworld = world.sort_values(by ='ObservationDate',ascending=0)\nworld[['Confirmed', 'Deaths','Recovered','Active']] = world[['Confirmed', 'Deaths','Recovered','Active']].astype(float)\nworld = world.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Countrywise data\ndf = f[f['ObservationDate'] == max(f['ObservationDate'])]\ncountry = df.groupby([\"Country\/Region\"])[['SNo','Confirmed', 'Deaths','Recovered','Active']].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\ncountry.head()\n\n# Worldwide - Confirmed, Deaths, Recovered and Active Covid-19 Cases\nconfirmed = f.groupby('ObservationDate').sum()['Confirmed'].reset_index()\ndeaths = f.groupby('ObservationDate').sum()['Deaths'].reset_index()\nrecovered = f.groupby('ObservationDate').sum()['Recovered'].reset_index()\nactive = f.groupby('ObservationDate').sum()['Active'].reset_index()\n\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nworld['Conf_change'] = world.apply(lambda _: '', axis=1)\nworld['Death_change'] = world.apply(lambda _: '', axis=1)\nworld['Recov_change'] = world.apply(lambda _: '', axis=1)\nworld['Active_change'] = world.apply(lambda _: '', axis=1)\nworld = world.append(pd.Series(name='Start'))\nworld = world.fillna(0)\nworld['Conf_change'] = world['Confirmed'].diff(periods=-1)\nworld['Death_change'] = world['Deaths'].diff(periods=-1)\nworld['Recov_change'] = world['Recovered'].diff(periods=-1)\nworld['Active_change'] = world['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nworld['grow_fact_conf'] = world.apply(lambda _: '', axis=1)\nworld['grow_fact_death'] = world.apply(lambda _: '', axis=1)\nworld['grow_fact_recov'] = world.apply(lambda _: '', axis=1)\nworld['grow_fact_active'] = world.apply(lambda _: '', axis=1)\nworld['grow_fact_conf'] = world['Conf_change'].pct_change(periods = -1) + 1\nworld['grow_fact_death'] = world['Death_change'].pct_change(periods = -1) + 1 \nworld['grow_fact_recov'] = world['Recov_change'].pct_change(periods = -1) + 1 \nworld['grow_fact_active'] = world['Active_change'].pct_change(periods = -1) + 1 \nworld = world.sort_values(by = 'Confirmed', ascending = 1)\n\n# weekly dataframe\nweek_df = world[1:]\nweek_df = week_df[::7]\nweek_df = week_df.sort_values(by = 'Confirmed', ascending = 0)\nweek_df\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nweek_df['Conf_change'] = week_df.apply(lambda _: '', axis=1)\nweek_df['Death_change'] = week_df.apply(lambda _: '', axis=1)\nweek_df['Recov_change'] = week_df.apply(lambda _: '', axis=1)\nweek_df['Active_change'] = week_df.apply(lambda _: '', axis=1)\nweek_df = week_df.append(pd.Series(name='Start'))\nweek_df = week_df.fillna(0)\nweek_df['Conf_change'] = week_df['Confirmed'].diff(periods=-1)\nweek_df['Death_change'] = week_df['Deaths'].diff(periods=-1)\nweek_df['Recov_change'] = week_df['Recovered'].diff(periods=-1)\nweek_df['Active_change'] = week_df['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nweek_df['grow_fact_conf'] = week_df.apply(lambda _: '', axis=1)\nweek_df['grow_fact_death'] = week_df.apply(lambda _: '', axis=1)\nweek_df['grow_fact_recov'] = week_df.apply(lambda _: '', axis=1)\nweek_df['grow_fact_active'] = week_df.apply(lambda _: '', axis=1)\nweek_df['grow_fact_conf'] = week_df['Conf_change'].pct_change(periods = -1) + 1\nweek_df['grow_fact_death'] = week_df['Death_change'].pct_change(periods = -1) + 1 \nweek_df['grow_fact_recov'] = week_df['Recov_change'].pct_change(periods = -1) + 1 \nweek_df['grow_fact_active'] = week_df['Active_change'].pct_change(periods = -1) + 1 \nweek_df = week_df.sort_values(by = 'Confirmed', ascending = 1)\nweek_df = week_df[1:]","4f6b017f":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=confirmed['ObservationDate'],\n                y=confirmed['Confirmed'],\n                name='Confirmed',\n                marker_color='white'\n                ))\nfig.add_trace(go.Scatter(x=deaths['ObservationDate'],\n                y=deaths['Deaths'],\n                name='Deaths',\n                marker_color='Red'\n                ))\nfig.add_trace(go.Scatter(x=recovered['ObservationDate'],\n                y=recovered['Recovered'],\n                name='Recovered',\n                marker_color='Green'\n                ))\nfig.add_trace(go.Scatter(x=active['ObservationDate'],\n                y=active['Active'],\n                name='Active',\n                marker_color='Blue'\n                ))\nfig.update_layout(title='Worldwide Coronavirus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","c2891fac":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=confirmed['ObservationDate'],\n                y=confirmed['Confirmed'],\n                name='Confirmed',\n                marker_color='white'\n                ))\nfig.add_trace(go.Scatter(x=deaths['ObservationDate'],\n                y=deaths['Deaths'],\n                name='Deaths',\n                marker_color='Red'\n                ))\nfig.add_trace(go.Scatter(x=recovered['ObservationDate'],\n                y=recovered['Recovered'],\n                name='Recovered',\n                marker_color='Green'\n                ))\nfig.add_trace(go.Scatter(x=active['ObservationDate'],\n                y=active['Active'],\n                name='Active',\n                marker_color='Blue'\n                ))\nfig.update_layout(title='Worldwide Coronavirus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases'),\n                  yaxis_type=\"log\"\n                  )\nfig.show()","b735a924":"fig = px.scatter(data_frame = country, x=country['Confirmed'], y=country['Recovered'], size = country['Confirmed'], \n                 color = country['Country\/Region'], hover_name=country['Country\/Region'],log_x=1, size_max=80)\nfig.update_layout(title='Confirmed vs Recovered Cases - Worldwide - Bubble Chart')\nfig.show()","ca4ec857":"fig = px.scatter(data_frame = country, x=country['Deaths'], y=country['Recovered'], size = country['Deaths'], \n                 color = country['Country\/Region'], hover_name=country['Country\/Region'],log_x=1, size_max=80)\nfig.update_layout(title='Deaths vs Recovered Cases - Worldwide - Bubble Chart')\nfig.show()","5d5892cf":"world = world.sort_values(by = 'Confirmed', ascending = 1)\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                         y = world['grow_fact_conf'][1:],\n                         mode='lines+markers',\n                         name = 'Confirmed'))\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                         y = world['grow_fact_death'][1:],\n                         mode='lines+markers',\n                         name = 'Deaths'))\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                         y = world['grow_fact_recov'][1:],\n                         mode='lines+markers',\n                         name = 'Recovered'))\n\nfig.update_layout(title='Daily Growth Factor - Confirmed, Deaths and Recovered Cases (Worldwide)',\n                  xaxis_title=\"Observation Dates\",\n                  yaxis_title=\"Growth Factor\",\n                  yaxis_type = \"log\")\n\nfig.show()","6d500563":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = week_df['ObservationDate'],\n                         y = week_df['grow_fact_conf'],\n                         mode='lines+markers',\n                         name = 'Confirmed'))\n\nfig.add_trace(go.Scatter(x = week_df['ObservationDate'],\n                         y = week_df['grow_fact_death'],\n                         mode='lines+markers',\n                         name = 'Deaths'))\n\nfig.add_trace(go.Scatter(x = week_df['ObservationDate'],\n                         y = week_df['grow_fact_recov'],\n                         mode='lines+markers',\n                         name = 'Recovered'))\n\nfig.update_layout(title='Weekly Growth Factor - Confirmed, Deaths and Recovered Cases (Worldwide)',\n                  xaxis_title=\"Observation Dates\",\n                  yaxis_title=\"Growth Factor\",\n                  yaxis_type = \"log\")\n\nfig.show()","971a5e69":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = week_df['ObservationDate'],\n                     y = week_df['Conf_change'],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = week_df['ObservationDate'],\n                     y = week_df['Death_change'],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = week_df['ObservationDate'],\n                     y = week_df['Recov_change'],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Weekly New Confirmed, Death and Recovered Cases - Worldwide',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\",\n                  yaxis_type = \"log\"\n                  )","f587108e":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                     y = world['Conf_change'][1:],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                     y = world['Death_change'][1:],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                     y = world['Recov_change'][1:],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Daily New Confirmed, Death and Recovered Cases - Worldwide',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )","97c3dbf6":"world['mortality_rate'] = np.round(100*world['Deaths']\/world['Confirmed'],2)\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = world['ObservationDate'][1:],\n                         y = world['mortality_rate'][1:],\n                         name = 'World Mortality Rate',\n                         marker_color = '#00a1c1'))\n\nfig.update_layout(title = 'Covid-19 Mortality Rate (Worldwide)')\n\nfig.show()","8e5e69c4":"# Import USA's States and Counties data\nf_USA = pd.read_csv('..\/input\/us-counties-covid-19-dataset\/us-counties.csv')\ndf_USA = f_USA[f_USA['date'] == max(f_USA['date'])]\nstates = df_USA.groupby(['state'])[['cases','deaths']].sum().reset_index().sort_values(\"cases\",ascending=0).reset_index(drop=True)\ncounties = df_USA.groupby(['county'])[['cases','deaths']].sum().reset_index().sort_values(\"cases\",ascending=0).reset_index(drop=True)\nstates['mortality_rate'] = np.round(100*(states['deaths']\/states['cases']),2)\ncounties['mortality_rate'] = np.round(100*(counties['deaths']\/counties['cases']),2)","9e987888":"US = f[f['Country\/Region'] == 'US'].reset_index()\nUS = US.groupby('ObservationDate')[['SNo','Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nUS[['Confirmed', 'Deaths','Recovered','Active']] = US[['Confirmed', 'Deaths','Recovered','Active']].astype(float)\nUS = US.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nUS['Conf_change'] = US.apply(lambda _: '', axis=1)\nUS['Death_change'] = US.apply(lambda _: '', axis=1)\nUS['Recov_change'] = US.apply(lambda _: '', axis=1)\nUS['Active_change'] = US.apply(lambda _: '', axis=1)\nUS = US.append(pd.Series(name='Start'))\nUS = US.fillna(0)\nUS['Conf_change'] = US['Confirmed'].diff(periods=-1)\nUS['Death_change'] = US['Deaths'].diff(periods=-1)\nUS['Recov_change'] = US['Recovered'].diff(periods=-1)\nUS['Active_change'] = US['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nUS['grow_fact_conf'] = US.apply(lambda _: '', axis=1)\nUS['grow_fact_death'] = US.apply(lambda _: '', axis=1)\nUS['grow_fact_recov'] = US.apply(lambda _: '', axis=1)\nUS['grow_fact_active'] = US.apply(lambda _: '', axis=1)\nUS['grow_fact_conf'] = US['Conf_change'].pct_change(periods = -1) + 1\nUS['grow_fact_death'] = US['Death_change'].pct_change(periods = -1) + 1 \nUS['grow_fact_recov'] = US['Recov_change'].pct_change(periods = -1) + 1 \nUS['grow_fact_active'] = US['Active_change'].pct_change(periods = -1) + 1\nUS = US.replace([np.inf])\nUS = US.replace([-np.inf])\nUS = US.fillna(0)\nUS = US.sort_values('Confirmed',ascending = 1)\nUS_temp = US.sort_values('SNo',ascending = 1)\n# weekly dataframe\nUS_week_df = US_temp[1:]\nUS_week_df = US_week_df[::7]\nUS_week_df = US_week_df.sort_values(by = 'SNo', ascending = 0)\nUS_week_df\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nUS_week_df['Conf_change'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['Death_change'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['Recov_change'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['Active_change'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df = US_week_df.append(pd.Series(name='Start'))\nUS_week_df = US_week_df.fillna(0)\nUS_week_df['Conf_change'] = US_week_df['Confirmed'].diff(periods=-1)\nUS_week_df['Death_change'] = US_week_df['Deaths'].diff(periods=-1)\nUS_week_df['Recov_change'] = US_week_df['Recovered'].diff(periods=-1)\nUS_week_df['Active_change'] = US_week_df['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nUS_week_df['grow_fact_conf'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['grow_fact_death'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['grow_fact_recov'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['grow_fact_active'] = US_week_df.apply(lambda _: '', axis=1)\nUS_week_df['grow_fact_conf'] = US_week_df['Conf_change'].pct_change(periods = -1) + 1\nUS_week_df['grow_fact_death'] = US_week_df['Death_change'].pct_change(periods = -1) + 1 \nUS_week_df['grow_fact_recov'] = US_week_df['Recov_change'].pct_change(periods = -1) + 1 \nUS_week_df['grow_fact_active'] = US_week_df['Active_change'].pct_change(periods = -1) + 1 \nUS_week_df = US_week_df.sort_values(by = 'SNo', ascending = 1)\nUS_week_df = US_week_df[1:]","37209203":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Confirmed'][1:],\n                         name='Confirmed',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Deaths'][1:],\n                         name='Deaths',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Recovered'][1:],\n                         name='Recovered',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Active'][1:],\n                         name='Active',\n                         marker_color='blue'\n                         ))\n\nfig.update_layout(title='US Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","7fbef5dc":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Confirmed'][1:],\n                         name='Confirmed',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Deaths'][1:],\n                         name='Deaths',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Recovered'][1:],\n                         name='Recovered',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['Active'][1:],\n                         name='Active',\n                         marker_color='blue'\n                         ))\n\nfig.update_layout(title='US Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases'),\n                  yaxis_type = \"log\"\n                  )\nfig.show()","ad9f3d65":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                     y = US['Conf_change'][1:],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                     y = US['Death_change'][1:],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                     y = US['Recov_change'][1:],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Daily New Confirmed, Death and Recovered Cases - US',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )\nfig.show()","d8ad9565":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = US_week_df['ObservationDate'],\n                     y = US_week_df['Conf_change'],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = US_week_df['ObservationDate'],\n                     y = US_week_df['Death_change'],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = US_week_df['ObservationDate'],\n                     y = US_week_df['Recov_change'],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Weekly New Confirmed, Death and Recovered Cases - US',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )\nfig.show()","0cef35bf":"states = states.sort_values(by = 'cases',ascending=0)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x = states['state'][:15],\n                     y = states['cases'][:15],\n                     text = states['cases'][:15],\n                     textposition = \"outside\",\n                     name = 'Confirmed',\n                     marker_color = '#00a1c1'\n                     ))\n\nfig.update_layout(title='Confirmed - Top 15 States in USA',\n                  xaxis_title=\"States\",\n                  yaxis_title=\"Confirmed Cases\"\n                  )\nfig.show()","f8a2543c":"states = states.sort_values(by = 'deaths',ascending=0)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x = states['state'][:15],\n                     y = states['deaths'][:15],\n                     text = states['deaths'][:15],\n                     textposition = \"outside\",\n                     name = 'Deaths',\n                     marker_color = '#00a1c1'\n                     ))\n\nfig.update_layout(title='Death cases - Top 15 States in USA',\n                  xaxis_title=\"States\",\n                  yaxis_title=\"Deaths Cases\"\n                  )\nfig.show()","9e82d93c":"states = states.sort_values(by = 'mortality_rate',ascending=0)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x = states['state'][:15],\n                     y = states['mortality_rate'][:15],\n                     text = states['mortality_rate'][:15],\n                     textposition = \"outside\",\n                     name = 'Deaths',\n                     marker_color = '#00a1c1'\n                     ))\n\nfig.update_layout(title='Mortality Rate - Top 15 States in USA',\n                  xaxis_title=\"States\",\n                  yaxis_title=\"Mortality Rate\"\n                  )\nfig.show()","ca27a22f":"US['mortality_rate'] = np.round(100*US['Deaths']\/US['Confirmed'],2)\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = US['ObservationDate'][1:],\n                         y = US['mortality_rate'][1:],\n                         name = 'USA Mortality Rate',\n                         marker_color = '#00a1c1'))\n\nfig.update_layout(title = 'Covid-19 Mortality Rate (USA)')\n\nfig.show()","009f2003":"Italy = f[f['Country\/Region'] == 'Italy'].reset_index()\nItaly = Italy.groupby('ObservationDate')[['SNo','Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nItaly[['Confirmed', 'Deaths','Recovered','Active']] = Italy[['Confirmed', 'Deaths','Recovered','Active']].astype(float)\nItaly = Italy.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nItaly['Conf_change'] = Italy.apply(lambda _: '', axis=1)\nItaly['Death_change'] = Italy.apply(lambda _: '', axis=1)\nItaly['Recov_change'] = Italy.apply(lambda _: '', axis=1)\nItaly['Active_change'] = Italy.apply(lambda _: '', axis=1)\nItaly = Italy.append(pd.Series(name='Start'))\nItaly = Italy.fillna(0)\nItaly['Conf_change'] = Italy['Confirmed'].diff(periods=-1)\nItaly['Death_change'] = Italy['Deaths'].diff(periods=-1)\nItaly['Recov_change'] = Italy['Recovered'].diff(periods=-1)\nItaly['Active_change'] = Italy['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nItaly['grow_fact_conf'] = Italy.apply(lambda _: '', axis=1)\nItaly['grow_fact_death'] = Italy.apply(lambda _: '', axis=1)\nItaly['grow_fact_recov'] = Italy.apply(lambda _: '', axis=1)\nItaly['grow_fact_active'] = Italy.apply(lambda _: '', axis=1)\nItaly['grow_fact_conf'] = Italy['Conf_change'].pct_change(periods = -1) + 1\nItaly['grow_fact_death'] = Italy['Death_change'].pct_change(periods = -1) + 1 \nItaly['grow_fact_recov'] = Italy['Recov_change'].pct_change(periods = -1) + 1 \nItaly['grow_fact_active'] = Italy['Active_change'].pct_change(periods = -1) + 1\nItaly = Italy.replace([np.inf])\nItaly = Italy.replace([-np.inf])\nItaly = Italy.fillna(0)\nItaly = Italy.sort_values('SNo',ascending = 1)\nItaly_temp = Italy.sort_values('SNo',ascending = 1)\n# weekly dataframe\nItaly_week_df = Italy_temp[1:]\nItaly_week_df = Italy_week_df[::7]\nItaly_week_df = Italy_week_df.sort_values(by = 'SNo', ascending = 0)\nItaly_week_df\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nItaly_week_df['Conf_change'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['Death_change'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['Recov_change'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['Active_change'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df = Italy_week_df.append(pd.Series(name='Start'))\nItaly_week_df = Italy_week_df.fillna(0)\nItaly_week_df['Conf_change'] = Italy_week_df['Confirmed'].diff(periods=-1)\nItaly_week_df['Death_change'] = Italy_week_df['Deaths'].diff(periods=-1)\nItaly_week_df['Recov_change'] = Italy_week_df['Recovered'].diff(periods=-1)\nItaly_week_df['Active_change'] = Italy_week_df['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nItaly_week_df['grow_fact_conf'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['grow_fact_death'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['grow_fact_recov'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['grow_fact_active'] = Italy_week_df.apply(lambda _: '', axis=1)\nItaly_week_df['grow_fact_conf'] = Italy_week_df['Conf_change'].pct_change(periods = -1) + 1\nItaly_week_df['grow_fact_death'] = Italy_week_df['Death_change'].pct_change(periods = -1) + 1 \nItaly_week_df['grow_fact_recov'] = Italy_week_df['Recov_change'].pct_change(periods = -1) + 1 \nItaly_week_df['grow_fact_active'] = Italy_week_df['Active_change'].pct_change(periods = -1) + 1 \nItaly_week_df = Italy_week_df.sort_values(by = 'SNo', ascending = 1)\nItaly_week_df = Italy_week_df[1:]","fbde1a27":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Confirmed'][1:],\n                         name='Confirmed',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Deaths'][1:],\n                         name='Deaths',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Recovered'][1:],\n                         name='Recovered',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Active'][1:],\n                         name='Active',\n                         marker_color='blue'\n                         ))\n\nfig.update_layout(title='Italy Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","270c1f46":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Confirmed'][1:],\n                         name='Confirmed',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Deaths'][1:],\n                         name='Deaths',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Recovered'][1:],\n                         name='Recovered',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['Active'][1:],\n                         name='Active',\n                         marker_color='blue'\n                         ))\n\nfig.update_layout(title='Italy Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases'),\n                  yaxis_type = \"log\"\n                  )\nfig.show()","fcb171de":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                     y = Italy['Conf_change'][1:],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                     y = Italy['Death_change'][1:],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                     y = Italy['Recov_change'][1:],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Daily New Confirmed, Death and Recovered Cases - Italy',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )\nfig.show()","cce93011":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = Italy_week_df['ObservationDate'],\n                     y = Italy_week_df['Conf_change'],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = Italy_week_df['ObservationDate'],\n                     y = Italy_week_df['Death_change'],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = Italy_week_df['ObservationDate'],\n                     y = Italy_week_df['Recov_change'],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Weekly New Confirmed, Death and Recovered Cases - Italy',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )\nfig.show()","f7693aeb":"Italy['mortality_rate'] = np.round(100*Italy['Deaths']\/Italy['Confirmed'],2)\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = Italy['ObservationDate'][1:],\n                         y = Italy['mortality_rate'][1:],\n                         name = 'Italy Mortality Rate',\n                         marker_color = '#00a1c1'))\n\nfig.update_layout(title = 'Covid-19 Mortality Rate (Italy)')\n\nfig.show()","894232e3":"India = f[f['Country\/Region'] == 'India'].reset_index()\nIndia = India.groupby('ObservationDate')[['SNo','Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nIndia[['Confirmed', 'Deaths','Recovered','Active']] = India[['Confirmed', 'Deaths','Recovered','Active']].astype(float)\nIndia = India.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nIndia['Conf_change'] = India.apply(lambda _: '', axis=1)\nIndia['Death_change'] = India.apply(lambda _: '', axis=1)\nIndia['Recov_change'] = India.apply(lambda _: '', axis=1)\nIndia['Active_change'] = India.apply(lambda _: '', axis=1)\nIndia = India.append(pd.Series(name='Start'))\nIndia = India.fillna(0)\nIndia['Conf_change'] = India['Confirmed'].diff(periods=-1)\nIndia['Death_change'] = India['Deaths'].diff(periods=-1)\nIndia['Recov_change'] = India['Recovered'].diff(periods=-1)\nIndia['Active_change'] = India['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nIndia['grow_fact_conf'] = India.apply(lambda _: '', axis=1)\nIndia['grow_fact_death'] = India.apply(lambda _: '', axis=1)\nIndia['grow_fact_recov'] = India.apply(lambda _: '', axis=1)\nIndia['grow_fact_active'] = India.apply(lambda _: '', axis=1)\nIndia['grow_fact_conf'] = India['Conf_change'].pct_change(periods = -1) + 1\nIndia['grow_fact_death'] = India['Death_change'].pct_change(periods = -1) + 1 \nIndia['grow_fact_recov'] = India['Recov_change'].pct_change(periods = -1) + 1 \nIndia['grow_fact_active'] = India['Active_change'].pct_change(periods = -1) + 1\nIndia = India.replace([np.inf])\nIndia = India.replace([-np.inf])\nIndia = India.fillna(0)\nIndia = India.sort_values('SNo',ascending = 1)\nIndia_temp = India.sort_values('SNo',ascending = 1)\n# weekly dataframe\nIndia_week_df = India_temp[1:]\nIndia_week_df = India_week_df[::7]\nIndia_week_df = India_week_df.sort_values(by = 'SNo', ascending = 0)\nIndia_week_df\n# Add 'Conf_change', 'Death_change', 'Recov_change', 'Active_change' to world dataframe\nIndia_week_df['Conf_change'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['Death_change'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['Recov_change'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['Active_change'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df = India_week_df.append(pd.Series(name='Start'))\nIndia_week_df = India_week_df.fillna(0)\nIndia_week_df['Conf_change'] = India_week_df['Confirmed'].diff(periods=-1)\nIndia_week_df['Death_change'] = India_week_df['Deaths'].diff(periods=-1)\nIndia_week_df['Recov_change'] = India_week_df['Recovered'].diff(periods=-1)\nIndia_week_df['Active_change'] = India_week_df['Active'].diff(periods=-1)\n\n# Add 'grow_fact_conf', 'grow_fact_death', 'grow_fact_recov', 'grow_fact_active' to world dataframe\nIndia_week_df['grow_fact_conf'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['grow_fact_death'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['grow_fact_recov'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['grow_fact_active'] = India_week_df.apply(lambda _: '', axis=1)\nIndia_week_df['grow_fact_conf'] = India_week_df['Conf_change'].pct_change(periods = -1) + 1\nIndia_week_df['grow_fact_death'] = India_week_df['Death_change'].pct_change(periods = -1) + 1 \nIndia_week_df['grow_fact_recov'] = India_week_df['Recov_change'].pct_change(periods = -1) + 1 \nIndia_week_df['grow_fact_active'] = India_week_df['Active_change'].pct_change(periods = -1) + 1 \nIndia_week_df = India_week_df.sort_values(by = 'SNo', ascending = 1)\nIndia_week_df = India_week_df[1:]","1b4dd40b":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Confirmed'][1:],\n                         name='Confirmed',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Deaths'][1:],\n                         name='Deaths',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Recovered'][1:],\n                         name='Recovered',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Active'][1:],\n                         name='Active',\n                         marker_color='blue'\n                         ))\n\nfig.update_layout(title='India Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","7df55111":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Confirmed'][1:],\n                         name='Confirmed',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Deaths'][1:],\n                         name='Deaths',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Recovered'][1:],\n                         name='Recovered',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['Active'][1:],\n                         name='Active',\n                         marker_color='blue'\n                         ))\n\nfig.update_layout(title='India Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases'),\n                  yaxis_type = \"log\"\n                  )\nfig.show()","cf4f7e61":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                     y = India['Conf_change'][1:],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                     y = India['Death_change'][1:],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                     y = India['Recov_change'][1:],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Daily New Confirmed, Death and Recovered Cases - India',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )\nfig.show()","c61352df":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x = India_week_df['ObservationDate'],\n                     y = India_week_df['Conf_change'],\n                     marker_color='white',                  \n                     name = 'New Confirmed Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = India_week_df['ObservationDate'],\n                     y = India_week_df['Death_change'],\n                     marker_color='red',                  \n                     name = 'New Death Cases'\n                     ))\n\nfig.add_trace(go.Scatter(x = India_week_df['ObservationDate'],\n                     y = India_week_df['Recov_change'],\n                     marker_color='Green',                  \n                     name = 'New Recovered Cases'\n                     ))\nfig.update_layout(title='Weekly New Confirmed, Death and Recovered Cases - India',\n                  xaxis_title=\"Observation Date\",\n                  yaxis_title=\"New Cases\"\n                  )\nfig.show()","ecca6e9b":"India['mortality_rate'] = np.round(100*India['Deaths']\/India['Confirmed'],2)\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x = India['ObservationDate'][1:],\n                         y = India['mortality_rate'][1:],\n                         name = 'Italy Mortality Rate',\n                         marker_color = '#00a1c1'))\n\nfig.update_layout(title = 'Covid-19 Mortality Rate (India)')\n\nfig.show()","5f35ce6c":"# china\nchina = f[f['Country\/Region'] == 'Mainland China'].reset_index()\nchina_obs_date = china.groupby('ObservationDate')[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nchina_obs_date.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Italy\nItaly = f[f['Country\/Region'] == 'Italy'].reset_index()\nItaly_obs_date = Italy.groupby('ObservationDate')[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nItaly_obs_date.sort_values(by = 'ObservationDate', ascending = 0)\n\n# US\nUS = f[f['Country\/Region'] == 'US'].reset_index()\nUS_obs_date = US.groupby('ObservationDate')[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nUS_obs_date.sort_values(by = 'ObservationDate', ascending = 0)\n\n# India\nIndia = f[f['Country\/Region'] == 'India'].reset_index()\nIndia_obs_date = India.groupby('ObservationDate')[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nIndia_obs_date.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Spain\nSpain = f[f['Country\/Region'] == 'Spain'].reset_index()\nSpain_obs_date = Spain.groupby('ObservationDate')[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nSpain_obs_date.sort_values(by = 'ObservationDate', ascending = 0)\n\n# Germany\nGermany = f[f['Country\/Region'] == 'Germany'].reset_index()\nGermany_obs_date = Germany.groupby('ObservationDate')[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nGermany_obs_date.sort_values(by = 'ObservationDate', ascending = 0)\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x = china_obs_date['ObservationDate'],\n                         y = china_obs_date['Confirmed'],\n                         name='China',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = Italy_obs_date['ObservationDate'],\n                         y = Italy_obs_date['Confirmed'],\n                         name='Italy',\n                         marker_color='cyan'\n                         ))\nfig.add_trace(go.Scatter(x = US_obs_date['ObservationDate'],\n                         y = US_obs_date['Confirmed'],\n                         name='US',\n                         marker_color='magenta'\n                         ))\nfig.add_trace(go.Scatter(x = India_obs_date['ObservationDate'],\n                         y = India_obs_date['Confirmed'],\n                         name='India',\n                         marker_color='Green'\n                         ))\nfig.add_trace(go.Scatter(x = Spain_obs_date['ObservationDate'],\n                         y = Spain_obs_date['Confirmed'],\n                         name='Spain',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = Germany_obs_date['ObservationDate'],\n                         y = Germany_obs_date['Confirmed'],\n                         name='Germany',\n                         marker_color='Yellow'\n                         ))\nfig.update_layout(title='Comparison between Confirmed Cases (China vs Italy vs United States vs India vs Spain vs Germany)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","5b586d6d":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = china_obs_date['ObservationDate'],\n                         y = china_obs_date['Deaths'],\n                         name='China',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = Italy_obs_date['ObservationDate'],\n                         y = Italy_obs_date['Deaths'],\n                         name='Italy',\n                         marker_color='cyan'\n                         ))\nfig.add_trace(go.Scatter(x = US_obs_date['ObservationDate'],\n                         y = US_obs_date['Deaths'],\n                         name='US',\n                         marker_color='magenta'\n                         ))\nfig.add_trace(go.Scatter(x = India_obs_date['ObservationDate'],\n                         y = India_obs_date['Deaths'],\n                         name='India',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = Spain_obs_date['ObservationDate'],\n                         y = Spain_obs_date['Deaths'],\n                         name='Spain',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = Germany_obs_date['ObservationDate'],\n                         y = Germany_obs_date['Deaths'],\n                         name='Germany',\n                         marker_color='yellow'\n                         ))\nfig.update_layout(title='Comparison between Death Cases (China vs Italy vs United States vs India vs Spain vs Germany)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","40d0a2c6":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = china_obs_date['ObservationDate'],\n                         y = china_obs_date['Recovered'],\n                         name='China',\n                         marker_color='red'\n                         ))\nfig.add_trace(go.Scatter(x = Italy_obs_date['ObservationDate'],\n                         y = Italy_obs_date['Recovered'],\n                         name='Italy',\n                         marker_color='cyan'\n                         ))\nfig.add_trace(go.Scatter(x = US_obs_date['ObservationDate'],\n                         y = US_obs_date['Recovered'],\n                         name='US',\n                         marker_color='magenta'\n                         ))\nfig.add_trace(go.Scatter(x = India_obs_date['ObservationDate'],\n                         y = India_obs_date['Recovered'],\n                         name='India',\n                         marker_color='green'\n                         ))\nfig.add_trace(go.Scatter(x = Spain_obs_date['ObservationDate'],\n                         y = Spain_obs_date['Recovered'],\n                         name='Spain',\n                         marker_color='white'\n                         ))\nfig.add_trace(go.Scatter(x = Germany_obs_date['ObservationDate'],\n                         y = Germany_obs_date['Recovered'],\n                         name='Germany',\n                         marker_color='yellow'\n                         ))\nfig.update_layout(title='Comparison between Recovered Cases (China vs Italy vs United States vs India vs Spain vs Germany)',\n                  xaxis = dict(title = 'Observation Dates'),\n                  yaxis = dict(title = 'Number of Cases')\n                  )\nfig.show()","67ae60f7":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x = country['Country\/Region'][0:5],\n                     y = country['Confirmed'][0:5],\n                     marker_color='white',\n                     text = country['Confirmed'][0:5],\n                     textposition = 'outside',\n                     name = 'Confirmed'\n                     ))\n\nfig.add_trace(go.Bar(x = country['Country\/Region'][country[country['Country\/Region'] == 'India'].index],\n                     y = country['Confirmed'][country[country['Country\/Region'] == 'India'].index],\n                     marker_color='white',\n                     text = country['Confirmed'][country[country['Country\/Region'] == 'India'].index],\n                     textposition = 'outside',\n                     showlegend=False\n                     ))\n\nfig.update_layout(title='Confirmed cases - Top 5 Countries vs India',\n                  xaxis_title=\"Countries\",\n                  yaxis_title=\"Confirmed Cases\",\n                 )\nfig.show()","e92a9ee8":"country_death = df.groupby([\"Country\/Region\"])[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index().sort_values(\"Deaths\",ascending=False).reset_index(drop=True)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x = country_death['Country\/Region'][0:5],\n                     y = country_death['Deaths'][0:5],\n                     marker_color='red',\n                     text = country_death['Deaths'][0:5],\n                     textposition = 'outside',\n                     name = 'Deaths'\n                     ))\n\nfig.add_trace(go.Bar(x = country_death['Country\/Region'][country_death[country_death['Country\/Region'] == 'India'].index],\n                     y = country_death['Deaths'][country_death[country_death['Country\/Region'] == 'India'].index],\n                     marker_color='red',\n                     text = country_death['Deaths'][country_death[country_death['Country\/Region'] == 'India'].index],\n                     textposition = 'outside',\n                     showlegend=False\n                     ))\n\nfig.update_layout(title='Death cases - Top 5 Countries vs India',\n                  xaxis_title=\"Countries\",\n                  yaxis_title=\"Deaths Cases\",\n                 )\nfig.show()","8523bf5f":"country_recovered = df.groupby([\"Country\/Region\"])[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index().sort_values('Recovered',ascending=False).reset_index(drop=True)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x = country_recovered['Country\/Region'][0:5],\n                     y = country_recovered['Recovered'][0:5],\n                     marker_color='green',\n                     text = country_recovered['Recovered'][0:5],\n                     textposition = 'outside',\n                     name = 'Recovered'\n                     ))\n\nfig.add_trace(go.Bar(x = country_recovered['Country\/Region'][country_recovered[country_recovered['Country\/Region'] == 'India'].index],\n                     y = country_recovered['Recovered'][country_recovered[country_recovered['Country\/Region'] == 'India'].index],\n                     marker_color='green',\n                     text = country_recovered['Recovered'][country_recovered[country_recovered['Country\/Region'] == 'India'].index],\n                     textposition = 'outside',\n                     showlegend=False\n                     ))\n\nfig.update_layout(title='Recovered cases - Top 5 Countries vs India',\n                  xaxis_title=\"Countries\",\n                  yaxis_title=\"Recovered Cases\"\n                  )\nfig.show()","987fb572":"country_active = df.groupby([\"Country\/Region\"])[['Confirmed', 'Deaths','Recovered','Active']].sum().reset_index().sort_values('Active',ascending=False).reset_index(drop=True)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x = country_active['Country\/Region'][0:5],\n                     y = country_active['Active'][0:5],\n                     marker_color='blue',\n                     text = country_active['Active'][0:5],\n                     textposition = 'outside',\n                     name = 'Active'\n                     ))\n\nfig.add_trace(go.Bar(x = country_active['Country\/Region'][country_active[country_active['Country\/Region'] == 'India'].index],\n                     y = country_active['Active'][country_active[country_active['Country\/Region'] == 'India'].index],\n                     marker_color='blue',\n                     text = country_active['Active'][country_active[country_active['Country\/Region'] == 'India'].index],\n                     textposition = 'outside',\n                     showlegend=False\n                     ))\n\nfig.update_layout(title='Active cases - Top 5 Countries vs India',\n                  xaxis_title=\"Countries\",\n                  yaxis_title=\"Active Cases\"\n                  )\nfig.show()","54bdffca":"w = f.groupby(['ObservationDate','Country\/Region'])[['SNo','Confirmed', 'Deaths','Recovered','Active']].sum().reset_index()\nlst = country['Country\/Region'][:10]\nnum_df = pd.DataFrame()\n\nfor i in lst:\n    fd = w[w['Country\/Region'] == i].sort_values(by = 'SNo',ascending  = 1)\n    days = len(fd[fd['Confirmed'] < 10000]) + 1\n    data = {'Country':[i],'Number of Days':[days]}\n    num_df = num_df.append(pd.DataFrame(data),ignore_index = True)\n    \nnum_df = num_df.sort_values(by = 'Number of Days', ascending = 1)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=num_df['Country'], y=num_df['Number of Days'],text=num_df['Number of Days'],\n                       textposition='outside', marker_color = '#00a1c1'\n                    )\n             )\n\nfig.update_layout(title='Number of Days to cross 10,000 Confirmed Cases',\n                  xaxis_title=\"Country\",\n                  yaxis_title=\"Number of Days\"\n                 )\n\nfig.show()","8e57371d":"### Information about the Covid_19_data","c0d0857b":"#### Daily Growth Factor - Confirmed, Deaths and Recovered Cases (Worldwide)","52f8ebe5":"# USA Data Analysis and Visualization","48bbadc8":"## Thank you and Be Strong, Be Safe! Now, because things will get better. It might be stormy now but it can't rain forever.","d543c709":"### Total Number of countries affected by Covid-19","1b6923d3":"#### US Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)","c081c829":"#### India Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)","32ee30bf":"### Italy Corona Virus - Confirmed, Deaths, Recovered and Active Cases","1cdf0bdf":"### Data Analysis","5f46c5f7":"## Data Visualization","e930f399":"### New Cases for Confirmed, Deaths and Recovered Cases (Worldwide)","6dae557e":"#### Comparison between Death Cases (China vs Italy vs United States vs India vs Spain vs Germany)","2c02bf71":"#### Confirmed cases - Top 15 States in USA","fdfe7333":"## New Cases for Confirmed, Deaths and Recovered Cases (India)","73006d80":"### US Corona Virus - Confirmed, Deaths, Recovered and Active Case","89416b39":"### New Cases for Confirmed, Deaths and Recovered Cases (US","5dd52828":"### India Corona Virus - Confirmed, Deaths, Recovered and Active Cases\n","f6098f3a":"#### Daily New Confirmed, Death and Recovered Cases - India","bba54747":"## Data Visualization","b2fa726e":"#### Weekly Growth Factor - Confirmed, Deaths and Recovered Cases (Worldwide)","44cb8298":"### Comparison between Confirmed Cases (China vs Italy vs United States vs India vs Spain vs Germany)","834b510e":"#### Weekly New Confirmed, Death and Recovered Cases - India","725f5bdd":"#### India Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)","07819535":"## Data Analysis","d1d0ac01":"### Data Visualizations","7ab3f706":"### Confirmed vs Recovered Cases - Worldwide - Bubble Chart","65819acd":"#### Weekly New Confirmed, Death and Recovered Cases - US\n","aa492ca3":"#### Covid-19 Mortality Rate (India)","85d8d86c":"# India Data Analysis and Visualization","0fe226c3":"### Total Number of cases (Confirmed, Deaths, Recovered and Active Cases)","bd9644ca":"#### Daily New Confirmed, Death and Recovered Cases - US","8a8ab6c2":"### Import Datasets","d7e20749":"#### Weekly New Confirmed, Death and Recovered Cases - Italy","5172fd17":"#### Italy Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)","62dc49c2":"#### Covid-19 Mortality Rate (Italy)","85eead07":"## About CoronaVirus\n\nCoronavirus Disease (COVID-19) is an infectious disease caused by the newly discovered coronavirus virus that first appeared in Wuhan, China, in December 2019.\n\nRead more about coronavirus from [World Health Organization](https:\/\/www.who.int\/emergencies\/diseases\/novel-coronavirus-2019), [Centers for Disease Control and Prevention](https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/)\n\n\n## About this NoteBook\n\nThis notebook provides visualization (Linear & Logarithmic scale) on the spread of Coronavirus around the world, as well as for countries named China, Italy, US, India, Spain, Germany.\n\nThanks to John Hopkins University for providing the [Covid-19 data](https:\/\/github.com\/CSSEGISandData\/COVID-19) to the DS community.\n\n## <font color='red'>I'm going to update my notebook (every 24 hours) with a new data interpretation and visualization chart. Please up-vote the kernel if you like the work. In addition, your feedback is very much needed.<\/font>","a9da4f92":"### Growth Factor for Confirmed, Deaths and Recovered Cases (Worldwide)","db5ffbe7":"#### Mortality Rate - Top 15 States in USA","3a26236b":"# World Data Analysis and Visualizations","9657b429":"#### Italy Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)","c90843ab":"## Data Analysis","1672f946":"#### Coronavirus Death cases - Top 5 Countries vs India","3d2a0daf":"#### Comparison between Recovered Cases (China vs Italy vs United States vs India vs Spain vs Germany)","c5a68165":"#### Worldwide Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)","fa7b8deb":"# Number of days to cross '10,000' confirmed cases for the top 10 countries with the most reported cases","c0c92910":"#### Coronavirus Active cases - Top 5 Countries vs India","8d008762":"### Data Analysis","71ea5c71":"#### World Mortality Rate","fd018581":"### Import Libraries","98cb1b8b":"#### Daily New Confirmed, Death and Recovered Cases - Worldwide","b0215ce0":"#### Deaths cases - Top 15 States in USA","7590c35a":"### Worldwide Coronavirus - Confirmed, Deaths, Recovered and Active Cases","dc437410":"## Data Visualization","520731ed":"### List of Countries affected by Covid-19","48d0fc2d":"#### Daily New Confirmed, Death and Recovered Cases - Italy","3066b03d":"# Confirmed, Deaths, Recovered and Active Cases Comparison","7a22af0c":"#### US Corona Virus - Confirmed, Deaths, Recovered and Active Cases (Logarithmic Scale)","f813de83":"#### Coronavirus Confirmed cases - Top 5 Countries vs India","36f376e0":"### New Cases for Confirmed, Deaths and Recovered Cases (Italy)","e3bfaead":"### Deaths vs Recovered Cases - Worldwide - Bubble Chart","561f50ff":"#### Covid-19 Mortality Rate (USA)","2afd69f9":"#### Coronavirus Recovered cases - Top 5 Countries vs India","42a5e5a0":"# Italy Data Analysis and Visualization","c047139a":"### Add Active case column to \"f\" DataFrame and convert data type of Confirmed, Deaths and Recovered columns to integer","cdb5eca9":"#### Worldwide Coronavirus - Confirmed, Deaths, Recovered and Active Cases (Linear Scale)","57513ac6":"#### Weekly New Confirmed, Death and Recovered Cases - Worldwide","920ee7c7":"# Data Analysis"}}