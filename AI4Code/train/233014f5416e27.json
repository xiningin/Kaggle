{"cell_type":{"8dd6f63e":"code","1a5e8be8":"code","b14448ce":"code","d4692b5d":"code","28f6b9e8":"code","c17647cc":"code","237046ca":"code","1c766869":"code","0e58e28f":"code","3e7f7825":"code","0a8096b7":"code","184afbb8":"code","473d7096":"code","a5c84444":"code","627749f8":"code","ebe2b8d4":"code","0ab0cae0":"code","42b8983e":"code","c06e10be":"code","a5dabe37":"code","6c0dd634":"code","1b58bdcc":"code","228b84dd":"code","50aaf5ca":"code","611a9eb2":"code","88ada6dc":"code","3c7837c1":"code","20e77dc9":"markdown","91e84506":"markdown","bab8d3b9":"markdown","aa7d565e":"markdown","23886894":"markdown","b3185177":"markdown","1e872fd5":"markdown","d50859a2":"markdown","85edc19b":"markdown","39422602":"markdown"},"source":{"8dd6f63e":"import os\nprint(os.listdir(\"..\/input\/00553137\"))","1a5e8be8":"# Immport Libraries\nimport numpy as np\nimport tensorflow.keras as keras\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.applications.mobilenet import preprocess_input, decode_predictions\nfrom tensorflow.keras.layers import GlobalAveragePooling2D, Dense\nfrom tensorflow.keras.models import Model\n\nfrom IPython.display import Image","b14448ce":"# Load Mobile\nmodel = keras.applications.mobilenet_v2.MobileNetV2()","d4692b5d":"def prepare_image(filepath):\n   img = image.load_img(filepath, target_size=(224, 224))\n   img_array = image.img_to_array(img)\n   img_array_expanded_dims = np.expand_dims(img_array, axis=0)\n   return keras.applications.mobilenet.preprocess_input(img_array_expanded_dims)","28f6b9e8":"img_file='..\/input\/images\/German_Shepherd.jpg'\nImage(filename=img_file)","c17647cc":"# check model prediction\npreprocessed_image = prepare_image(img_file)\npredictions = model.predict(preprocessed_image)\nresults = decode_predictions(predictions)\nprint(results)","237046ca":"img_file='..\/input\/images\/blue_tit.jpg'\nImage(filename=img_file)","1c766869":"# check model prediction\npreprocessed_image = prepare_image(img_file)\npredictions = model.predict(preprocessed_image)\nresults = decode_predictions(predictions)\nprint(results)","0e58e28f":"!pip install google_images_download","3e7f7825":"# import google_images_download\nfrom google_images_download import google_images_download\nresponse = google_images_download.googleimagesdownload()","0a8096b7":"arguments = {\"keywords\":\"St. Bernard\",\"limit\":30,\"print_urls\":False,\"format\":\"jpg\", \"size\":\">400*300\"}\npaths = response.download(arguments)","184afbb8":"# remove files of URLError \/ Wrong image format\n!rm .\/downloads\/\"St. Bernard\"\/2.*\n!rm .\/downloads\/\"St. Bernard\"\/3.*\n!rm .\/downloads\/\"St. Bernard\"\/4.*\n!rm .\/downloads\/\"St. Bernard\"\/15.*\n!rm .\/downloads\/\"St. Bernard\"\/22.*\n!rm .\/downloads\/\"St. Bernard\"\/23.*\n!rm .\/downloads\/\"St. Bernard\"\/26.*\n!rm .\/downloads\/\"St. Bernard\"\/28.*\n# rename files with special characters\n!mv .\/downloads\/\"St. Bernard\"\/30.* .\/downloads\/\"St. Bernard\"\/30.St_Bernard.jpg","473d7096":"arguments = {\"keywords\":\"Old English Sheep\",\"limit\":30,\"print_urls\":False, \"format\":\"jpg\", \"size\":\">400*300\"}\npaths = response.download(arguments)","a5c84444":"# remove files of URLError \/ Wrong image format\n!rm .\/downloads\/\"Old English Sheep\"\/4.*.jpg\n!rm .\/downloads\/\"Old English Sheep\"\/5.*.jpg\n!rm .\/downloads\/\"Old English Sheep\"\/8.*.jpg\n# rename files with special characters\n#!mv .\/downloads\/crow\/1.* .\/downloads\/crow\/1.crow.jpg","627749f8":"# Data Generator\ntrain_datagen=ImageDataGenerator(preprocessing_function=preprocess_input)\n\ntrain_generator=train_datagen.flow_from_directory('.\/downloads',\n                                                target_size=(224,224),\n                                                color_mode='rgb',\n                                                batch_size=32,\n                                                class_mode='categorical',\n                                                shuffle=True)","ebe2b8d4":"num_classes = 2\nprediction_dict = {0: \"Old English Sheep\", 1: \"St. Bernard\"}","0ab0cae0":"# Load Model (MobieNet V2)\nbase_model=keras.applications.mobilenet_v2.MobileNetV2(input_shape=(224,224,3),weights='imagenet',include_top=False) #imports the mobilenet model and discards the last 1000 neuron layer.\n\n# Add Extra Layers to Model\nx=base_model.output\nx=GlobalAveragePooling2D()(x)\nx=Dense(1024,activation='relu')(x) #we add dense layers so that the model can learn more complex functions and classify for better results.\nx=Dense(1024,activation='relu')(x) #dense layer 2\nx=Dense(512,activation='relu')(x) #dense layer 3\npreds=Dense(num_classes,activation='softmax')(x) #final layer with softmax activation\n\nmodel=Model(inputs=base_model.input,outputs=preds)","42b8983e":"# Check layers no. & name\nfor i,layer in enumerate(model.layers):\n    print(i,layer.name)","c06e10be":"# set extra layers to trainable (layer #155~159)\nfor layer in model.layers[:155]:\n    layer.trainable=False\nfor layer in model.layers[155:]:\n    layer.trainable=True\n\n# Compile Model\nmodel.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])\nmodel.summary()","a5dabe37":"# Train Model (target is loss <0.01)\nnum_epochs = 10\nstep_size_train=train_generator.n\/\/train_generator.batch_size\nmodel.fit_generator(generator=train_generator, steps_per_epoch=step_size_train, epochs=num_epochs)","6c0dd634":"img_file='..\/input\/00553137\/St_bernard.jpg'\nImage(filename=img_file)","1b58bdcc":"# Test the new model\npreprocessed_image = prepare_image(img_file)\npredictions = model.predict(preprocessed_image)\nmaxindex = int(np.argmax(predictions))\nprint(predictions[0][maxindex],prediction_dict[maxindex])","228b84dd":"img_file='..\/input\/00553137\/Old_English_Sheep.jpg'\nImage(filename=img_file)","50aaf5ca":"# Test the new model\npreprocessed_image = prepare_image(img_file)\npredictions = model.predict(preprocessed_image)\nmaxindex = int(np.argmax(predictions))\nprint(predictions[0][maxindex],prediction_dict[maxindex])","611a9eb2":"img_file='..\/input\/images\/German_Shepherd.jpg'\nImage(filename=img_file)","88ada6dc":"# Test the new model\npreprocessed_image = prepare_image(img_file)\npredictions = model.predict(preprocessed_image)\nprint(predictions[0])","3c7837c1":"# remove downloaded images\n!rm -rf .\/downloads","20e77dc9":"> ## Test New Model","91e84506":"## Test Model","bab8d3b9":"## Download Images from Internet","aa7d565e":"### *Confirm the model recognize German Shepherd*","23886894":"### Download St. Bernard images","b3185177":"### *Confirm the model don't recognize Blue Tit*","1e872fd5":"### Install google_images_download","d50859a2":"# Image Classification - MobileNet v2 Transfer Learning","85edc19b":"## Load Model (Keras built-in)","39422602":"### Download Old English Sheep Images"}}