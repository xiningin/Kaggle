{"cell_type":{"6977b49e":"code","9f7028d3":"code","4203de2b":"code","862dc2e3":"code","81819e13":"code","a58e5c51":"code","a409eeec":"code","6ad70ab3":"code","abe60ecc":"code","10d1a621":"code","d267f934":"code","e1e890f1":"code","d0183cbd":"code","7e6d7ef2":"code","f75e0d25":"code","14ef8ee4":"code","783d544b":"code","c0079c79":"code","444dea94":"code","27fd4b12":"markdown","1ca2cb31":"markdown","4acac967":"markdown"},"source":{"6977b49e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxITEhUSExIWFRUXGSAbGRgYGB8aHxgeHxsfGR4bGx0fICggGiAlGx0YITEhJSkrLi4uGh8zODMtNygtLisBCgoKDg0OGxAQGy0lICUxMi8wLzAtLys1Mi0tLS4wLSswLS8rLy8tMjctLy0vLS0tLy0tLS0tLi0tLSstLS0rLf\/AABEIAPsAyQMBIgACEQEDEQH\/xAAcAAACAgMBAQAAAAAAAAAAAAAFBgQHAAIDAQj\/xABNEAACAQIEAwUEBgYHBgQHAQABAhEDIQAEEjEFQVEGEyJhcRQygZEHI0JSobFicpLB0fAVJDNTgqKyFkNUc5PxNGPS4SVklKPC4uMX\/8QAGwEAAgMBAQEAAAAAAAAAAAAAAAMBAgQFBgf\/xAA1EQABBAADBAkEAQQDAQAAAAABAAIDEQQSIRMxQVEFImFxgZGxwfAUMqHR4SNCUvEGwuIV\/9oADAMBAAIRAxEAPwC68eY2IxrGJULMeY9x5GJQsxmPQMexgQtcexjaMeRgQsxwz2bSlTerUbSiKWY9ALmwufTHfEPi2QXMUalByQtRSpI3E8x5jfEKDdaKNV49RV+7YOr2sV+9r0i1r928crDqMc8v2kyziVcxpptJUi1VtCC\/MtaOXPHLM9ne8rd+1Y64UWUCNPeQBeQD3pBHMAYjnshS+tC1GUOpED7J11KisDP2TUMA2hV6YjVLuTkjlbNqklzAkAWJuRPLHH+maH3+ce63SenTnjrWyfeSGLC4MqxWSBHI7eRxp\/RK\/eq\/9Vv44lX63BanjeX37z\/K3L4YlZbMrUBKGQDBsRfpf1GODcISSdVW\/wD5r+thNsb5bILTbUGckgiGqMw5GwJ8t\/XrgQM3FSox6BiNSzM1KlPmoVgP0WBAP7Sv8sShiVZZjjSrgu1M2IAI81PP5gj5dcdicCOKVNFfKOPtO1I\/qtTZ\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\/1A\/lOFPdUebxW+dtS5eVD8a\/lT8ZjwY9w9ZkL4g5I7sT4g1wJNhYR5kjf9+BdbKVjTqABmdtg8FbssgSx8MT0MDrg9OIR4bTO+sz+m34XtudsSoS8vBKxFOaUHSQwUroBkFT3cgAggaXGogbgkCOa8EzPdqmkjU5BAZRoWSQSLgiPDN2hViCS2CFHiuQYECtYXgs4O2wBM2Auo26Y7e0ZFt6qWmPrCCRtO8kWGClC5dlMhVpNVNSmaZJsFI0ETqJVQxjxFuh8RmcMeB1DI0HUOkspFmDsZB3gzzxMo0QoCrsPM4FK64H8e4UuaoPl3ZlV4krEjSwa0iNxjXjHEWo91FLWtSqlNm16dGt1QGIJbc28sZw3iDVKtek1LQaTKB49WoMCQbC1gLX3wIQ2n2NoCnmKbM7CuQxJiUImClrETzwV4FwtctQSgjMypMFokyxe8CNzgdmO06LnVyegkGFarqstRgWVCI3IA588cMx2s00M5W7mfZavd6e89\/wAQXVOnw7zEHAhdG7H0jl6+X7yppr1e9Y+GQZBgWiPCN8duNdlqWZNMvUde7ptTGmLh10EmRvGB2b7ZlWbu8uHpoVV3eulIayuopT1++QJ5jb44m0+1IZs2Fpgrl6K1QwcHvNVPvIsCB0kFsCF27PdmRlWlczmKi6dIp1HlFuDKqLA2\/E4iZ3sUlSpXcZmvTFczURCoDDp7ptc\/M4gZjt8R3QXLpL0lqnvK60x4vsqzCGPnbBDO9pc0mZXLLkgxcFkbv1GpRu3u2joTfEIXJfo9yoSqgaoNZQqZE0ikwUMTeTM4gcf7NUhUVGZ61bN1EEkhTTFNTqqqVWxC7yCCTthu4tnKyaRQoiqzEyWfQiACZZoJvsBGFlOKVKtelmaVDvKjZYstNn0immrxnVpOp3aFWwELM3xZtXqqPuqC6V+yASk71M\/m\/CNYfvI0BA23wZuY3wL+jWkK1erXio0adVSq+tmaCANhACz1N12jBftHxlquULJQY5apQFR6msIQrfYQaWDOBuDAuBMnELgVduHpVpikKtKlUHf1dWkqX0xpSDq00yhaSNzExhRzZhyWyMwthcT9+ld3Eo1mm73iVKn9nL02qH9ZvCPkDPxxGyr06WdzuZquS31NMAKfApHI\/akyzdAPLHPgGYJztd4vUrmmSeSojkAdLquOfD80zI7U813C3YoUDMrMzjWZB8LN4+dr2BsqDrAu5k\/pLxAAc1vIfPVGanamgKbVQKhVW0nwwZgG0m4vEjmD0OFfiuer5vVRr16VCg260FqNUqLBOnW6qqghTcC+2CCZ920M2bSmxNnZBFSCSdIBOlRqpi5B8B+9qxMOerHT\/XqChgGU6YBBCRBJAN5t0YYeRahjyw2N6K9nalE0EWgpSmgAVSPdHnc+vxvjfOeKvST7s1D8BpH4k\/LEPhHFEAYPmKTmQPCedgTECxJF7i\/zl8MGp6tU820r+qlvxbVhM2pawcT+Br+h4oad7j8te8a4xTyyBn1MzsEp00EvVc7IgkX5ySAACSQBOI3tue\/4On\/9R\/8AzwN4WozHFM1Wa4yipQpDkrOoq1XHmQaaz0U9cNcYeqKPiLn6lVVmlT1tMQWCwPvbXgxbEitSDKysJDAg+htgM3ZwaSntOYCldJXXaNOknbc7z1nqcSoXDuKjLJyNJW7yDIR5UrdwJWJPhN5gkwdsQ6aZwgauH5f3TcBYDQYtq2nuyb8m8jgnU7PElj7XmQTaQ8EDkBbYfO5x1zXAldzU72qjEgypANl0xMSQR9kyJJ64FCkcOq1ZCPRFNBTUggiAdu70iY0iLix8sTsBhwA\/8Xmd5\/tD8B6b+vOYxO4XkO5Ur3j1CTJaoZJOlV39FGBSveJ5AVlRSxXRVp1LCZ7tw8fGInG2VyAStWq6p73RIjbQunfnOJWPRgQlOv2FpuKjNXq989TvO8BICtMginOkwJAJuJxmf7Eio9X+s1Eo12D1qQUQ7AzIY3WTeL\/gIbcZgQlTifYtajuadd6VOqQalMKrAkDTqQtemSOYnf4YzPdi1LMaGYfLq9NaVRFUMHRQFAvdTpET\/Ey1xjIwISnxPsaKqpTTMslJUVO7amlSAoiVLCUY7kjngnT4Ci1svVVyBl6RpKpvII0gk9QB0wZxmBCGcf4a2Zpd0tc0g3vkKCWH3dxAPPrt1kRkuGtXQPSzDUqlLvMuzimgDoHiAgMLBUaSNul8NWAvZKyVx0zVb\/WT+RGLADKSqF3XA70C7Y0ky9PKqKrrRpQqU1pq8sgsz6mAaLR539J39DitT9oFZ1o1kp1K1LSv1hRQRf7EhVDATIGIH0qD6uh+s35DBrhdT\/4Up6ZePkkfuxlMhDnDkF03YZn00cg3k0hXY1XcLVIknMOzkcpom\/7Rj4414UhOTRtNEghFl0LPAktJ943gpAsPKDgn9H4\/q7\/8w\/6Vwm8R4iaXDC2hHdM09I6wSIUOBYEXCQoPKLXAwvDOAhaTySpozJi9m3eTQ\/CbcpSq90iPSy0mREAgjVTJgMQZLazHIhZk79Go5gAasrlWaIALADp4QRbfb0xMyfAcu9GlKQAAwAZgNTeMmZncnnzON\/8AZbKf3Z+LMY22va4BtjWspGqi1cvTWk5NCktUEhQFUWkQxjYAaSekDywcyyhFVJvt+sYk+p3PzwDzHC6DZnR3YOoM1QksfeI2vA91fkMEctwOhTcVEUhgZ94nkRzP6RwiMte9zgd2n7+disQQAPFK\/ZbOaOM8Uyzfb7qsnmBTVG+Up88PWKp43XNHtPl2G1Wiqt\/i71fzRPli1cPVVy04jcQz1KghqVqi00G7OYHkPU9MSzio\/pLjMZk95Pd5V0VVmFLMFdifOGiTsF8zgJoWpa3MaRftF9IlPTpydRSSLuwiOXgVhc87\/I8giZnMtBPE1FdoK0u\/EmbxZoBPSIx24nkqWapPl\/c1NceHUpVgfENAIEiAZPvc8KfabsfQylAVH1srMFJQqCkhjq0kQ4kC0j1xnETsQ4NDy3wv56pE+DBt7iSOV1XbpxVj9lO1tXvRlc4IcmFcjSZ5Kw2M8iPLeZw9xhDyeTDJTesYIkifFabeJl8B28hp3tqJ2hRUq59rqMCsbRoNRSQwAgydQI87eQtA8m2nUjsI8r3+ZRDG9jac6xw512o\/j0YAJRAUAZ2p4V1ETcqAFPwkG97zffHuX0qwb21yAdRRhuJYlTNxzHlp9AH2mo\/OPZwuqKYBjOVIAMjcz4vFtO5kei7yMdTlfE6e2VQ5OkW2khxHXwkj9rpYQjs4zAGpTRqpq+1soDQVWY8OlSG5CdDX6EnlOODUkZSrZ1mI6gyCC24mwMgHawHXEITLOMxEfiNJVVi9jMWu2lSxjrYHHg4nS+91NweXPEoUzC\/wKppzedodXWqPPWgDfiB88F62eprufs6tpthazjkcQoZmkNSOhpVdhEEmb7xY2my+YlkdHMDy9NUmawWuHA\/g6LT6T6c5ek3SrHzVv4DG\/ZTMd5wt15otRfzYfgRiZ2qRczlWp02GosNMzuDqMwPuhr4C9iKL0RWy9SIqiV0mbwymRuLAH4dbYwyNO0NcQu6yWN2ByEjM11gfO9F+wLfV1V6OD81A\/dhC7TDSmfofdza1R6PqU\/mnzw6dlavcF+8MBgLC5lb8vI4Xe1\/DjVzWYakVZalNZvEsIgDlOqmszG+EYcO+naCNUh8jWY9kgOmYa9nFWD2XzHeZPLv1pJ89IB\/HBTCf2FzLUMmtLMAqyOwAsbE6hsSPtR8MMoz9Ng2hgSAT8v5HzGNoNNsrNiGgTODTYs15qBwc661ep5gD0v8AwGDWAfZYeF\/1h+WCHGOIpl6FSvUPhpqWPnHIeZMAeuMfRpzYZrjxs+ZKMQKkI5fpVnxxDX7TZdVuKNNNXlpFSp\/+afPFr4rb6JOHvVfMcUrD6yu7Kvksy0eWoKo8qeLKxvSVzJxXXbrgrJWfNKrPTqQXUGyMqhQ2nzAFzzHKcWKcauwAJNgNziQoKqOhxKUg1DAA0EQNja4ubfLAvM5qm+sZqo+YRWVqVMHQJAM62EEgTEDFmDjnClrimKmWFYmLKAdXTVEBvKZwaNFCdWhCeukT84xScbRtNOU8xofNKcyUCmOrvFpP4Pw56\/dVlLhUC+BJpI0RYBgCViBY3C\/DDYrVQQNCATcg8pnbrz\/xeV\/U4tRLFe8WQSDNrhtJEm06reuPX4tQA1GtTi99a8hJ53tgjYGNoKzGZd+\/itcurgmadPY3EDUfu+Q8z0xyCVyQWpUzcarC9r6Z6ktvET64mDPUrHvFMtoEEHxb6bc\/LHj8SoqxRqiqw3BIHKdzba8YurrgaNQFtNKkVOwiDE8+V5PpvfbGiHMWJo0y2xYGJ934ifF12G8XlDidDbvqf7a89uePX4lRAY96hCxqg6okwJAmL4hCj1adQrPc09cwJiwixP8Ai5A2jnvj16bqSEo0yOtlBGkWtceLVy6Wx1XilAgN3qAHqwGwk2NxYE42p8QpMQq1FLEkAA3tPLkPCb7H4jAhcmDhRFJZgyBEAyp8pG\/SSBtvji\/e3+opEn9LcbXOnodsE8eYlCgVaTwsUaZteYhbyQPjHqb2i4ftRke8yzGqBTCkuzIYIVRIFgdXiJNxsCYB2Z8a1aYZSrAEMCCOoNiPliWmiCqvbmaQl7hHEPaaR7rQ6AaTuDqABBvcGOfW9ojC1Q4jQy2YUtmapakdLqxYybq2qVg7k2IFreY\/s3njw7PvQqH6tm0MT86b\/Ij4MemN\/pN4b3eZFYDw1lk\/rLY\/MaT88GPi2NFuo3grX0G9uKcY5DR3EDmO++CY8lU0ZsKxlQ5W9xDG346TjX6SsuyJSrUiUhirabTIkEx+qR8cLXC+IGpTUz40AUn9Wyn9kL8QcWFxWgM5kWA3dNS+TC4H7QjHHwbidpH22PnktPSuHLQD4eIVdfR7xtlzgo1mLrUGga7wwuu\/W4+IxbGZoqKb6VA8LbCNxj58z6lWV1JBsQRuGFwfX+GLx7K8aXO5VattRGmoPusBB+B3HkRjXG7MwtV8WGyxx4pg0Io94WnZip76+h\/MYT\/po4mzChkafvVWDsOt9NMeheT\/AIBhi4HW0Vgp5yp9f+4wlcVfvu0lNGuEqIB\/gpd6P804y9DSZsMG8Wkj3WTFtqS+atXgvDly9ClQT3aaBfWBc+pMn44m4zGY6qzLTCj2uzD6ipLJSUQWDolyCSQS428IvHlhsnFGfT5wat7QmaI1UDTCA8qbgmQ3TVIIPOI5Ys1uY0oJrVHO2VWmKFCkBZ3Q05AJ8XjZtW48IZiZMzjl2l4xmUy1GvQr1EBhSoNjIJB+YPzGAPaP6TaVV8o1GjqSh9Y6uI8WgoFF76QzGdidPTHvbrO0jWajQeaatsplQdIsvI3J22jFIDsJGyPGnELWzCvxtwxb+fAdqP08yrkFc\/cDvGB7o7HWWPhnfxH0+OLBo5RCyg5NACtjC294kbbSxA\/XPXCZwhHqVFXMUqaU1X+0nV02BTqdPKDO+HV6aS6mtWLKNUAmYjlyk6tt\/IDDXyB+72\/QWQwOhOVxB7jfuVouXOkTkkbx6oGlbx78GYNgJmdsd0oan8eVS9i8g2gr0k+G3xxF76iPF7TVaCDpknpAt7wkb+t8dcyKJ166r\/WCbz4V1FoA3AlSD0jC0L2hkxHiylNSqyDY+K0ACOs3nl8tEy5Er7EgDAAgMAIQrpBgXi8DoI548YodJNesQ1lO0afxm\/xvOMy1enqUjM1WNyA0nUF1FrEDYH\/KMCF5UyYJP9Rp2jmp1Wi1hAAkX5Hbljrl8vpZCuTVDO4YeEbGwAmxPzG\/LSrVoy317rcyVkc+bAeLkAemkevPXSOn+s1Wk2A1XBYRuJMWFvlvgQiBzNYf7jV6ECL7c59bT0GNEzlYifZiLA3cX8tp+f8A3zLZFSNSVnKm4hreR8+R87csd6+RLEt3tRZiytAFosP539IELkuZrSZoWvfWNh8Ln5bj1xtmMzVUkLQLjkdQE+Gdote3834UsoC5TvHVkRRINyvihp9SZ81GNqnCmgAVqm4Jk7jmPj59TM2xAcDuU0k\/t7wM1iuYZe6MrTaSCGBfSNvtCfjYY6xTzeXXJswrPR8RYONahTpk2uYlT8JicNz8LDSGqO1oEmYPJvUG\/r8AKvr9pXylZqYyyJUpMR724kfozBEEX53nGtofOzZ767lkLxhZdsDRPetuE5LLofDmQ2vYBl3EHrykj4ednXsrnyJoJDjVPvCVEgNA+0JJM4TuL8d7mpRq0U1UalJivi0kliA6tA8LIwggb6sSch2gECoiEahyeCL7SByuMcOXZwShx0O46FekkZPiIg\/Uh2oNt\/QWnbLgKKajMe7LyyrqBBO9tjGq0YX+wnaU5HMxUMUXhao+6eT\/AA5+R8hi0c9k9eVatSLViV1hWM6v0bg3AERG4+OK14h2jBqCv7LTYiZBM7gAEHTyjnO+NDg0EOBWPB4gR5sO8WHcN2qsHjVLRV1A2bxKR\/PW\/wAcV\/xLNilx6jmGstR6bHy1J3DfJgxwT7MdrfaJyteFYtOXYnb\/AMkm022PM26YHfSFwo1KQrKPFSnV10Hf9k39JxyonfS40j+yT1\/36p2IgeGU4aj0V3YzCl9G\/akZ3KjU319IBao5no\/owHzBHLDbjvrmLlONatJXUqyhlIgqwBBHQg2IxtgZ2oz5oZWpVUwwEKfMmMBNIAs0gPFOzfCMqe9OQolzsopgj1g+FR5xgA9TJl9X9HZeOl\/yHh\/DAdOPqFFVWrd4TclH+MkiCMNlThtKrSpZlJUOIdVEDWJ1aZsLq0DY2uJnHOxH1Mp\/pHw\/krrYV8OHBz3rxBPoEy8A41RrDQqimyj3LbfonmNsGbYS8nwKolQGmEOlpDhyfCCBDD7xuSBaDHK55va2RGXu1fTLIRIDagQJ393UCZ3g41wbXLUtX2Lnz7LPcV12otpHQYwqOmA5qZ0H3cuLG0tPrvtcevlNvXq5vuwxFJW18j4SsCJJuJMi36PnhySi2gdBjAo6DAWq+fBYgUIAsCSATzJ5j0m3ngrlmbQC+\/M22m0xbaNrYlQuoUdMLvb13p5TvqXvUalOpAtKq41KfKCZwxA455qiroyOJVgVYHmCIIxBFhQ4WKXPhmbp1aKVaUd2ygrHTp5EbR5YlYqrhudr8IzLZd1erlmMrAkwftpynky9R6TZ2VzlOpTFVHBRhIblH7vjtirXX3qrH5t+9QM2+nN0j95GU\/DxD8cFMB8\/fN0YuAJn1nBg4zYV1vlHJ3sPdPfub3LMVz9K3ApC5xBtCVfT7LfA+E+q9MWMDjhnMulRGpOAVcFSDzBEHHQhkMbw4LPNGJGFpVCZKvqptl2NmOqmT9ioBHwDjwn\/AAnljbguagmmbTtPI8x\/PTGcd4NUy1d6LAnSfC0e8p90\/ER8ZGIlfJVlYTTqBmaBKkEsDBAtcziOmMK2Vm1bx3+xXS\/49iyA7CSbt47+I9\/NWZ2J453b9w58Dnwk\/Zbp6H8\/XAX6Q+z\/ALPV75B9TVPLZH3K+huR8RywFytVmF1IYWYEEX9MWDwDiK5ugcpmlJkaVYj346H762Pwnrjh4WQ1sX7xu\/Sd0ng767fH9ql83Q0mRsdvLDr2a7SiuBSrEd7sGO1Uef6cb\/e33nAntJwR8rVNGpdTdG5OvUeY2I5H4YWsxSKny5H+eeLYjDtlYWO\/0UzA40Yhuxl+8bjz+cee9MGeo1+FZpc3lj9WTEcoNzSf9E8j5DmLtv8A\/tNP\/g3\/AOoP4YXuA9okqr7NmoOoaQzbOPut0boefrvL\/wBhsp0q\/tn+GFR9JmAbPEg2OI1sc0ifAua7qq6MDu0ncHLOteoqKRMkxceIRzNwLDfBGcROJcPpV0NOsgdTyPLzB3B8xjuEWueDRVTNSriqaXdt3v8Ad6Tt977um068MfaPtDRy2Uy9LKmnV1eIzJGmDq1QQVLM20j7Qw0cUTL0VarWrMiadB1PAK6dOkW1TzsZm+Kxq5ngneWbOafILp\/Hx4z5RHuOqdNFi8VHUDCe1NGTq5qrDVBl9LEE6FqE3OowdcbFoibmIIOGLTRlSaVSdUfIzJv4he5O+x3v52TbJGjOS0aPtROqf058U+uDc4c0aLM2N8fVfd8bULL0KVTW+hhqkHVzmCY8pAv5dAMb0uGUlmAYOm0mPCdQgcr4lgYzFlZQV4TSFvFfe\/nMek\/zcz7\/AEVS0d2QdMzE7W0wPKPxJ64m49wIUWtw+m5kzvNjEeELaNrAbdMZ\/R1OVMHwxEmdjqG+98Spxk4EIRxPg47tmogd6ASuuWUt0YTsdvjhH7J9pnbMihXRQtWUOnUpVmgD7R3IC9QTvvNoDFI57w5945Zkkf8AVkYTKS2iEiZxaQQrNGUT2jugvg287CbHlcD5DoIK0+GU1mARMc9oIIj4gH59TMPICa7N+sfxjBfGHoqZ88b3uN9Y13cFslABAHJQG4PRgjSQD0Yj9+Mfg9I8iDyIJt4dMjoY59cT8ZjqJSWe21CpToPmKCqWWC4YE+AWJWCII39NQ54rNe1dcIUCUoJJurczMDxbYvJ1BBBEgiCDzHTFA9oeGezZmrQ5I3h81I1L\/lI+ION+DbHICxw1WPFPfGQ8FTG7Z14XwU5BOo+LxXkR4pWJPM9bYJ0+0zsQ4Wn6Q0ehGqLXEfDbCUwx2ydVlNgSOYGPPYoStcWh2oXtosJh54GysYBYB89VY+U4pls7R9kzYWmZJp1VsFYmeZMGTzMHCN2h4JVytQ0qy7+6w91x1U\/mNx8sE8jw2tW\/s6TuOoWw9SbD4nBM8RRKZy2dq0KtEfYNTXUpHqjUw+kjofSwwmCZ7xTwe\/8Aa4mPwUYOaNwDuV+irfMUNN9x+XrjT2l\/vt+0f44J8TqUFqMKNU1af2WKFT6EHn5ix8tsQO9p\/d\/DGkhaMNjcSGVJE4nmvqAnALi3HdFU5emCagTWTEhQTAHmx3jp6jBvCZxvO0KGaqPU1Biq\/Y9+dtJmSQBFwANJvjc+60XNhDS7rJD7YV81VVKlepSdQZFNdWtZixJAAIBBIA5YWqPdqzhwxAUxpMQxnTJ6WOGHtZxpKTEue8RjZFqgMRZgIhu7iVliCDEAdAGU4kmY72mtGnQsKhZqrMW0BtKrKgSdTevwxmkb1SSu90dizHKIgTR4e\/YrByL1Muoanl3pFl06qS0356pY69TKB5CQCbEzh8zSNrJTMimdoYSNlNgTp5E2+9yxX+QRandpQzoEqqiiuhmaFkxqBYbcwYtYwYsStTBeDlg1x4yRGwE7SLEjbl8nRkkfPZcnGtAf26\/5f9va1G01h4vbkIsD4FInflYSPwHxx0bX9VqzSk3kg6Q\/iFoU2iVvO4A+0cdaR3X2bSIPMXgSBbqWYTO84waioAy6iGjSTYKwkkW622wxYlFSjXAAGdBJHvFFIIELM7AzF\/M2JxPyeaUUwWrKxudWrcFmI87C0fonpjhpOhYy4XSTpUxa4IIgwNyfhHPHhT\/5UcuY\/RmLdCenujywIRE5hJ06hMExO0RM9PeHzxslZSYDKTtAImemINTVpZhQBZpETuCJk2sNXL42ONailGJGXVoIhlIBuBJvy3G+wHXAhTjnaYnxr4Z1X2jeemKebJ1Tne8amwRszqmLQasz6QRfzxaVcHUQcsHEyCIEwbT13JHx9cILVhPj4ivvCVIpCIaYMX36efxVK20mVoNWnvhdZQzamUGOo64IHO0v7xOX2gd9vzHzGFzLZlDpYd26G+6kEGDvF9h8QPXE\/KV1Ygrl0hVtpIJU2gfPn5fLD0bsoYti07id5F7+wrXJZOZF6uZRRJYRczvYbm2wHM4xc3TOzrvHvD4fPl1wPTUKQAy118IXVaNIvP3eUYF5vj2URmXVQJU2hwCDAJ576vMRp32x1ACdySSAmL2ynJXWoI3BMfnv8MVZ9IGUfMZzXRQuppoNQFibnf0Kj4jqMFuIZ05ioWTPJTT7qCnFxfxG7EwN\/La8dshw6rVJCV9YF2KimR13jcwOXT4UGKMTv6ep8PchNdhA9v8AV0F7jfqB7pNyXZiozAMvxY6UHO59L9TyGG5+FZbJJ\/ZNnMxEimqwgtIJG0esk8h0I8X4zTpIMuwp06hG7spKMVtUYEX25i8j0wpnNBNC\/wBJayzgFYpsTqfxSbm4vMEbXxl2IzF7zmJ516LQ7FzSgQx6AaacAl3tV2izlVjTrkoB\/uVGhFBuJUe9aN5+GFhvPFg57gnD6juxzmqq2wNamJaQoXwrYR+A+GOWX7N0aFSpUcgqpJXUbIBeWJ3I6naOuM+KnbA3M7wHNb8GzDwtujm5keiX+Ddl6laGf6tD5eJvQch5n5HBf\/Z7If33\/wB1f4YXO1Xa5q00qJK0ubbNU\/8ASvluefTCpA6DCY8JiZhnkfk5AD1SpekHZuqvr7AbtJ2epZtIY6HAIVwJIncEcx5YLziPxDP0qCGpVcIg5n8hzJ8hjt3Wq5Kq3P8A0S5ivV1Vc3S0k3YIxY8hAJgWA5nGtD6IKqGFzNMrN2KtJ+G3wnDNxX6R8vTZFCVNDe9UK6YB5qDNxv4gNvPAjiOfzKaaqZp6lKoNVOqrHS49NgRsV5YRJI12m9dTox0u1OzcA7tF+WiaeyXY2hkpYE1KpEGowiB0UfZHzPnhkwqZHtLUlaZCuze7qOgtvpHQ6oAm1ybDcmqdbM\/WaqSyB9XDAhiSYJuIAGmecTubYa2q0WLEumfIXTXZ5oljMC6tfNh2ApUyknQdcHnBYTtttff0xqMzm4j2dSZN9ai3IxJv1EkbecSkItj3AirXzmglaNPXqIAZ7adNjbfx35SLQN8be15qf\/DLE796vUfun5bcsCEWxqcDXrZrTTIpKGPvrqBA8QFmkfZvseeNPaM4QIoIpm8uGEQehF5id7HnyEIqMUj274SctnKgjwVCaiHyYyw+DSPSOuLdrVs3Pgopp0g3YTqgllmdidKgxaGPMYV+0FSlnIp1VRu6d4dKlrAjTqtMmJUGQVXzhU2XLbjXelyR5xQ3pP7KcaiMu0kE+AgTHMg+XOeV8PXDsi1QFyQlNblzYCN4xF7KdmU1HSpWkN2O79BOIX0k8fJJyVG1NAO9K7eSeQFp8yByxxcF0QzpDEbWi1vr29nunS4k4SCnGz80QrtR2vaoDl8u7ijsXJOqr\/6U8hvz6YVstly7BR8T0GPEQkwASegv5\/lg5w3JlEDMpGu4kRblH5\/HHa6UxTcPH9PBoBoe9buhMCcv1uI1e77RyHOvTs71K4bw8uyUaYuTA\/eT+JOLE4jmaXDMnKgFhZQd6jnmfzPQDEbsHwkorV3Uhm8KyIgDc\/E\/lhO7ecRfNZkqgZqdKVWATJBh28\/FC\/DzxzsJFso9ofuKr0nii45G8PVJ\/Ec07s1R21O5kk8yef8A7egwLIxLZTUJKgsB0BMDqY2xO4Dwrvao1A6AAxn7QOwHUEg\/AHEySiNpe7cF2ejsG3CQZn\/cdT7D5xRLstwYACvUF90B5D7x8+nlfC12w7R+0MaVM\/Uqd\/7wjmf0RyHx6Qf+kHirIgoICBU994IEfcB2JMXA5euPPoo7DjOVPaa6\/wBWpNZTtVccvNF59TbqMJ6Pw5ld9VLvP2jkOf681ycbijI4j53Ih9F30bd9pzmcT6relSP+85h3H3ei89zbe6PZE+4v7I\/hjsBj3HaXPUXCd2oqCpUZag8FMqFBHvEjVI+NsOIxWf0k9m67ZgZpGqNReBURWI0MBpDmDZSNMwLQb3wEE7lFIPxRTUV1ZgQdX2YI6ReQR1jC12C4\/mcu9SglZlRhrgG2q14O0qR8hjrxjtSlVfZUDd6zBdOkrEGSGINwYjw7g4m8ARstWqV6JakWGgCQ0KCJgxsSoN7+d8Jhwr5SWt0U4uZoaCU90c1X03KDW8kDUZJWTN4N94tcXgYYKjUVn6yrI1W1EXAYkAsIsCfL3fLEfhmazFUau8KhTu9gRExCncWknz8sFB7RI8dL5E9dtueGtYWaE2qNNi1xDUWilrcxI3nUTMg9Yjly+ONKmZosbvVX7RAlbNEmwnc8j87YmVDVCiaiCCdbeUz4eXuyL49itqEVE06jIIvpnYRF4gX6YsrKLUamVWoHqQSF8LATAJBINzIHqeWOVKrQVkPe1TEwSSQYUKeXIHcfPE5zWBjvKYJmNW59AALRHWOpxyOYq3+uoz8bfjfn8sCFyRaPdk6nZQwJJnUSQV6AxpPLkPLHi1aERrqGGPiMsZI5EgxsdoIg7YlN38j6yl8iJttM9SMKXa3iLH6ioKrw6MRTpsabCQSJHvADVYzt5DFSaChzqFrvxGvX1gUo7udGp3dnIMajawN1AExsSdhjagukQAFGr7M7k\/jB39bziBwfIItM1EV\/GTPeawQBO6kkgEk8hgxlKRZ10aQZBUkWWJk\/LTby+OOZO9z5g2\/DN262MvgNU6MdW1MTulpsVerqSAQAQNRGxEXEi+\/nhXzS1xJ00WGoLswIkwGLG4gmdPlIPVk7TZlhRXvgr02ceGkGcwPEu3KRv6YS85VoViV01iyEEpD2WRYqW2PhERO3THZibkZmA0HZy8VkfUkrY7qzz59nFFswtYwEWnp03LM43EGBpJPM7kn4Yl0TVJKALyFp8iLchLX\/AHzcPk8tRLaxSrg33FQXIEiJ23\/y3tg\/wzKTVUImltMgkNAI67jrvfYY5r3FzwAfz\/C68jWsFV+P\/Xzkp+umikUqjiqLIHYldQlRIFokm3MxzwuP7R3qaVQjSwDHVB1EAg3tsYO0eeDHazPFO6p5hlhizQoJEBYv1ktt1jpOFLOcVyV5BLQIhDuIIO4\/StI3Hwe94ur\/ACsUETppMrQTWumv4\/lTq9DNK2tVobEEEupENYzB6mw2nnOOvE+LNl6L1KyqGQXVHbSTcKq328QHywJoVMnUzAFMuZUbagsiSW5QQqqLC+o9Tjp2v4lkDFHNaiT4\/q9XmBMEXmd\/LGSYuke2ON4GtnXWvJb8Q3ZAB7da\/wAa90M4L2ozHEX9iFFVeqI7xST3a31uQ02CkwPvaQd8XPwrh9PL0UoUl006ahVHkOvUncnmThW+jjguUSn7Zl6ZQVUCLqBnSrNe5J8RvPMKuHTHRXNWYzGYzAhRYxkYhcUy+YYqaFVUAB1BlnUZUr6QAw\/xfERHy2f3FaiIG2kwfdkm0yIeIj3vhiVVEFyNIP3gp0w\/3wg1fOJx62Tpzq7tC3XSJ+eB75bPBZFWmW1MSNNiIXSAIF5Dbm2rcxgnk1qBB3hBfmV2ny6Ym0b1wqcPpNug3npeSZMb3Jxz\/oij\/dj5nz8\/0m+eCBGMjEKVD9gpwq6LLMD1353+OMq5Cmxlk1b7kkX3tMdfmcTIxmnEoUapkqbAArIGwkx6b3jlO2NTkKX92P5k9fM\/PEvTjNOIQh2bytKnSqHR4VDORJgwvrtAFtsU8e1WaMElJ\/5Y5\/8Ac\/P0i7M7lu8pvT+8pX5iMfPrUypKsIYGCOhFiPnhEziKpZp3EVSsrgueZ6FN2ClmGomOdwbfE25YJcMpq9RUdQVaQdxNjzm3LbC72OrasuF5oxHwJ1D84+GGDLkqyt0IOPGy46eLF9Z5oO58LtdaJrXxAgbx+V52+HstKnUoqAxfQSZaxUmIJ8t8Ia8eratQCKYAsgvGqJ\/aP8zNnfSDlO9yNQi5SKg9Ab\/5ScU+gx9Ga1rsE9zRqOP5XHhfl6UiY\/7SRpw1sJk4Vxys7kMV21bc7LM7zFv\/AHw4dkaheuZA8KGIkcx53xXvBDFUDqCP3\/uxYHYwxXYdUP5jHlWzSfVNaXGivY9I4WJjHFrQNOSCfSTWnNKv3aY\/Esf4Yr+uZYnzw8fSAf66\/wCqsfLCO1M9PxH5Y1yNcXE0sf8Ax5zGzSFxAOgFnt\/gI72OozUqP0UAf4j\/APrha4ojZvPtTTepVFJfKCKc\/gThw7JHTQq1OjE\/sqD+84GfRHkO94ijsJ7pGqE\/pEaB\/rJ+GM+AbmxUr+VBT01Jc1fNyvPI5VaVNKSCERQqjoAIGO+AWc7YZGm2hsypYbhAzx1nQDGJvDONZfMT3NZHI3ANx6qbj4jHaorhh7SaBRDGYzGYhWXMDEXOZ5KZUMbkgQOQP2j5W\/mDjvmSQjFV1EAwu2oxt8cKGWytSkqqQT9ZT03dJMQVhlWNrMBIBgk4EJtr1QtNqnvAKWtzAE29cAR2spyFNGsplQZA8IMh2N\/dRgVJ+UjGnCck6rmBUsKlMy\/iXT71pdFmzEzJiDJMjA48IpqSO8eAI0s9Arp197DLI+1HS3zxVxPBMZs66yJ0+11M6ZpVQToJBA8CtJ1tB90KFYkffXnIBHJcVSorNoZdJ0kEX1gSyjrpmCdpB6YXP6GUgAVKpaCBFWn9otdV1QJ1aYFvFbBzs\/l1CVF7wvLayWZGKswuRo2BN73ucVtyl+yrqolRzCsYE\/LfrjzP5gUqVSqRIRGcjqFBb92POHEtqZlAYnpEjcH5QPh8B2zb01U94yhIM6iAIi8z5Ysx1tspVG6VH9le01ZalbO16oqNXFJmAqKuhU72r3S62UIIQrAJsSTzOLuy7hlDdRO0Yqjs1wfJ5avXBzSVMue7NAQ+vSpcsrKoBqLoJHeCVI3xavDKtJqa91UDpFiH125Xkk\/HAN+hV3skb9zSEn\/S5VZMmhRmQ98olSVPuvzGKfp0atTUwDNFyZvf1uTvi3\/pl\/8AAp\/z1\/0Piu+D5ktRC7aDH63vMALjm1xzHpbrYY5YbrisMot6Epl8wqB1FQKxjwkiehIF4N4PODj2v7Qh0u9RTBPvnkJOx6fmMM3tfITH2fF0iBvG4P8AIwG4qirpAFyKh1Sb+AiPWNIPTTHXDGuDnatHkqEUNCogObYQDmCpWfecgrHrBEYjvl6qjUVcAcyCBvG\/rgnRq1NCgJTPgAB+snaxsYnHOtnLEFMufKanLYRqi3IHDg47qVaG9Cu9YbMw+JxZNPi1TL0ken\/aMmlZEwSo8R6wY9SQOeK7zeYDxFNEj7s3+ZP8k4beH5wGrkdZXSHCtM9UKxy5c+hxyOlog98JqqJ9F0sI9whlO\/QDzNJrp8Bo5an32cSrmcxUBPdKHeTEwY948pawJ2Axy4Tw3K5tO7bKVsnWM6WNIgN5xBQ7xBvY4PdrqCPXoLUYhSDADFQx1op9SFYxF74G8JyVOnmMvpdu8JuNR8QK1CZXoNKnpM9MVAGVZyNUqur5dM3lKgAdUdhE3GiNzvIgjnv0kr3ZDL1nZ6NJtIqwHN\/dWSZi+m4kD3jpEgTh0+kdg2e0Jpn2dy4vP9nUja3MTPVcD\/oqRjUeBH1Z0k7NDAsAeoGi3lOMcMbYnyObvNHx3KcRI+RrWuPGr7EaymSyVNdHsnessgtV8UwCSVWAoEL9kDpjTO9nAxNXKA0q1MagqEifCH8Mk6DBAEHSTII54Y6Zap3h7woadRVBEEkagpYkzsdY9FGJ\/B8wBVq0muQQVaPeHiUnc7FSDt+OGNke42qmBlUtexfHva8uHMd4p0VI2kAHUOgZSDHKSOWD2EL6MSTUzzARTNQFOhBaowI\/wMn4YfcNcKKtC4uYCVq6SIkj0tiP7AhJLSxIjxMTAMSByXYbdBiVjMVTVFbIKVKMWZSCpDMTIIggzc2xAHZjK\/3ZtMeN+Yg\/a5jBnGYFBAO9DBwHL6teiGgCQxEQQwi9jKrfyx04dwehQ1d0mnUAGuTIWQNzyk4n4zAjKFpVYKC0bCbb2vhS4zn6dZlLUZCANFXLa9MqXkMTpUkBVvs0A74cMZgpWBINhK1DiFRnUlhMEWo+IQNTRcwDsN7qfhz4ZnaVOszijp1hQ5TLaCWJCksdyAdTEX0gyT1bcZgpGY7rSP8ASblamayNLuKT1CaivpUSQNDXIHqMVaOy\/EI0+yV4O40GD8MfRWMxqhxTo25QAkviDja+eG7N8RK6PZK2n\/lfvifxxr\/szxG39VzFgQJQmARBjpbH0TjMM+vd\/iFXYDmvm3OcGzlEA1KFamu0srAek7Y0y\/BszUGpKNRx1Am\/n54+k3QEEEAg7g3nFc9vsjTymitll7l2N9BIB\/wzp\/DCpukZ2tJjDb7b9lR8Qbqdyrg9mc7pLey1oG50E4mKCU0hihIAkbjFr8CzLlKbFrsBPn8NsK\/0kZGnSro1NApcEtFgTO8bTjDgOkP\/AK7C1zcr2neN1\/orQJ\/oesRmjdo4caO4g8wtV7YI1IUc2alGonhSuBIcEX1BTJUgXI\/R549yfanLZVW7vVWqqCUoiQtOYBMsqSxkbKLE73J5dkAHdUcB11gaWAYQdxBtgZ28yyU81VSmoRdQ8KiBdATb1wmPGEtNjcaXRf0YW4psGbR3Glv2fz7V81VNVizVVJEx4ZC6lEW2HyUecxeyfB8yKLZzLDVWoVShS5gaVJIUe\/YuCu5BEXEGBwBiMzRI++B87H8DiyfowEHPAbe1H\/SMKwsh+peTxA\/FhO6ZwEcDWMZu\/N80Jyva3KOmg0noVTJYLLDwlidjqW8nSQMcuJcX9qfucjl6gd\/fqAwYdSxZRJVFJ3ZiDfacWPneEZeqZq0KVQ9Xpq35g4kZbKpTGmmiovRVCj5DHQDYxqGrhlkrhRdohvZXga5PLrSEaidTlRALHeByAgAeQGDGMxmAm05rQ0UF\/9k=',width=400,height=400)\n#facebook.com","9f7028d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport unicodedata\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4203de2b":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/brics-world-bank-indicators\/BRICS Development Indicators\/EducationAndEnviron_Data.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'EducationAndEnviron_Data.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","862dc2e3":"#Code by Md Redwan Karim Sony https:\/\/www.kaggle.com\/redwankarimsony\/space-missions-data-eda-temporal-analysis\n\n# Calculating\npercent_missing = df.isnull().sum() * 100 \/ len(df)\nmissing_value_df = pd.DataFrame({'column': df.columns,\n                                 'percent': percent_missing})\nmissing_value_df.sort_values('percent', inplace=True)\nmissing_value_df.reset_index(drop=True, inplace=True)\nmissing_value_df = missing_value_df[missing_value_df['percent']>0]\n\n# Plotting\nfig = px.bar(\n    missing_value_df, \n    x='percent', \n    y=\"column\", \n    orientation='h', \n    title='Columns with Missing Values', \n    height=200, \n    width=600\n)\nfig.show()","81819e13":"#Code from Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/police-shooting-eda-interactive-map\/comments\n\nfrom colorama import Fore, Style\n\ndef count(string: str, color=Fore.RED):\n    \"\"\"\n    Saves some work \n    \"\"\"\n    print(color+string+Style.RESET_ALL)","a58e5c51":"def statistics(dataframe, column):\n    count(f\"The Average value in {column} is: {dataframe[column].mean():.2f}\", Fore.RED)\n    count(f\"The Maximum value in {column} is: {dataframe[column].max()}\", Fore.BLUE)\n    count(f\"The Minimum value in {column} is: {dataframe[column].min()}\", Fore.YELLOW)\n    count(f\"The 25th Quantile of {column} is: {dataframe[column].quantile(0.25)}\", Fore.GREEN)\n    count(f\"The 50th Quantile of {column} is: {dataframe[column].quantile(0.50)}\", Fore.CYAN)\n    count(f\"The 75th Quantile of {column} is: {dataframe[column].quantile(0.75)}\", Fore.MAGENTA)","a409eeec":"# Plot Year\nplt.style.use(\"classic\")\nsns.distplot(df['Year'], color='blue')\nplt.title(f\"Year [\\u03BC : {df['Year'].mean():.2f} conditions | \\u03C3 : {df['Year'].std():.2f} conditions]\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Count\")\nplt.show()","6ad70ab3":"# Plot Value \nplt.style.use(\"classic\")\nsns.distplot(df['Value'], color='red')\nplt.title(f\" [\\u03BC : {df['Value'].mean():.2f} conditions | \\u03C3 : {df['Value'].std():.2f} conditions]\")\nplt.xlabel(\"Value\")\nplt.ylabel(\"Count\")\nplt.show()","abe60ecc":"rus = df[(df['CountryName']=='Russian Federation')].reset_index(drop=True)\nrus.head()","10d1a621":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\nrus[\"SeriesName\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Value\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"\")\nplt.axis(\"off\")\nplt.show()","d267f934":"fig = px.pie(rus,\n             values=\"Value\",\n             names=\"SeriesName\",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","e1e890f1":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(6, 4))\nsns.countplot(rus['Year'], palette='Reds', **{'hatch':'\/','linewidth':3})\nplt.xlabel(\"Year\")\nplt.ylabel(\"Count\")\nplt.title(\"Russian Education & Environ Indicators\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","d0183cbd":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in rus.SeriesName)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='RdBu', background_color=\"blue\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","7e6d7ef2":"ax = sns.countplot(x = 'SeriesName',data=df,order=['Children out of school, primary, female','Agricultural land (sq. km)', 'Bird species, threatened', 'CO2 emissions (kt)'])\nfor p in ax.patches:\n        ax.annotate(format(p.get_height()), (p.get_x()+0.2, p.get_height()))\nplt.xticks(rotation=45)","f75e0d25":"px.bar(df, x = 'Value', y = 'CountryName', color = 'CountryCode',orientation='h' , title='BRICS Education & Environ Indicators ',  height = 500 )","14ef8ee4":"px.histogram(df, x='Value', range_x=[-5, 50], color='CountryName')","783d544b":"px.pie(df, 'CountryName')","c0079c79":"#Code by Xhlulu   https:\/\/www.kaggle.com\/xhlulu\/android-or-ios-data-exploration\/comments\n\npx.scatter(df, x='CountryName', y='Value', color='CountryCode', log_y=True, marginal_y='box', range_x=[-20, 200])","444dea94":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke was Here.' )","27fd4b12":"#Codes by Xhlulu   https:\/\/www.kaggle.com\/xhlulu\/android-or-ios-data-exploration\/comments","1ca2cb31":"#Code from Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/police-shooting-eda-interactive-map\/comments","4acac967":"#To avoid clumsy plotting, select a few columns."}}