{"cell_type":{"e154704b":"code","8f44afc3":"code","2c4ac8cf":"code","b3677bb9":"code","acb32d15":"code","29f664ea":"code","962aa84f":"code","f944a99f":"code","4256a602":"code","1b431d83":"code","7c66e679":"code","6da2e111":"code","58dd8ba9":"code","3ff7ff54":"code","3147570c":"code","adfe5deb":"code","6eb07c55":"code","3ca481fe":"code","2e89f737":"code","f87f4ce4":"markdown","75f62935":"markdown","e5767b59":"markdown","3279461d":"markdown"},"source":{"e154704b":"import matplotlib.pyplot as plt\n\n%matplotlib inline","8f44afc3":"import numpy as np","2c4ac8cf":"## Simple Examples\n\nx=np.arange(0,10)\ny=np.arange(11,21)\n","b3677bb9":"x","acb32d15":"a=np.arange(40,50)\nb=np.arange(50,60)\n","29f664ea":"##plotting using matplotlib \n\n##plt scatter\n\nplt.scatter(x,y,c='g')\nplt.xlabel('X axis')\nplt.ylabel('Y axis')\nplt.title('Graph in 2D')\nplt.savefig('Test.png')\n\n","962aa84f":"y=x*x","f944a99f":"y","4256a602":"## plt plot\n\nplt.plot(x,y,'r*',linestyle='dashed',linewidth=2, markersize=12)\nplt.xlabel('X axis')\nplt.ylabel('Y axis')\nplt.title('2d Diagram')","1b431d83":"## Creating Subplots\n\nplt.subplot(2,2,1)\nplt.plot(x,y,'r--')\nplt.subplot(2,2,2)\nplt.plot(x,y,'g*--')\nplt.subplot(2,2,3)\nplt.plot(x,y,'bo')\nplt.subplot(2,2,4)\nplt.plot(x,y,'go')\n","7c66e679":"x = np.arange(1,11) \ny = 3 * x + 5 \nplt.title(\"Matplotlib demo\") \nplt.xlabel(\"x axis caption\") \nplt.ylabel(\"y axis caption\") \nplt.plot(x,y) \nplt.show()","6da2e111":"np.pi","58dd8ba9":"# Compute the x and y coordinates for points on a sine curve \nx = np.arange(0, 4 * np.pi, 0.1) \ny = np.sin(x) \nplt.title(\"sine wave form\") \n\n# Plot the points using matplotlib \nplt.plot(x, y) \nplt.show() ","3ff7ff54":"#Subplot()\n# Compute the x and y coordinates for points on sine and cosine curves \nx = np.arange(0, 5 * np.pi, 0.1) \ny_sin = np.sin(x) \ny_cos = np.cos(x)  \n   \n# Set up a subplot grid that has height 2 and width 1, \n# and set the first such subplot as active. \nplt.subplot(2, 1, 1)\n   \n# Make the first plot \nplt.plot(x, y_sin,'r--') \nplt.title('Sine')  \n   \n# Set the second subplot as active, and make the second plot. \nplt.subplot(2, 1, 2) \nplt.plot(x, y_cos,'g--') \nplt.title('Cosine')  \n   \n# Show the figure. \nplt.show()","3147570c":"## Bar plot\n\nx = [2,8,10] \ny = [11,16,9]  \n\nx2 = [3,9,11] \ny2 = [6,15,7] \nplt.bar(x, y) \nplt.bar(x2, y2, color = 'g') \nplt.title('Bar graph') \nplt.ylabel('Y axis') \nplt.xlabel('X axis')  \n\nplt.show()","adfe5deb":"a = np.array([22,87,5,43,56,73,55,54,11,20,51,5,79,31,27]) \nplt.hist(a) \nplt.title(\"histogram\") \nplt.show()","6eb07c55":"data = [np.random.normal(0, std, 100) for std in range(1, 4)]\n\n# rectangular box plot\nplt.boxplot(data,vert=True,patch_artist=False);  ","3ca481fe":"data","2e89f737":"# Data to plot\nlabels = 'Python', 'C++', 'Ruby', 'Java'\nsizes = [215, 130, 245, 210]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=False)\n\nplt.axis('equal')\nplt.show()","f87f4ce4":"## Pie Chart","75f62935":"## Histograms","e5767b59":"## Box Plot using Matplotlib","3279461d":"## MatplotLib Tutorial\n\nMatplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. It provides an object-oriented API for embedding plots into applications using general-purpose GUI toolkits like Tkinter, wxPython, Qt, or GTK+.\n\nSome of the major Pros of Matplotlib are:\n\n* Generally easy to get started for simple plots\n* Support for custom labels and texts\n* Great control of every element in a figure\n* High-quality output in many formats\n* Very customizable in general"}}