{"cell_type":{"bad2c15f":"code","31feef48":"code","28854246":"code","8b4c3dd1":"code","39607979":"code","09cbd121":"code","9e60ff89":"code","7d67e9a0":"code","078169cb":"code","979a0a13":"code","982bb687":"code","7d4f284f":"code","5b034430":"code","fa901fc0":"code","2c50c6db":"code","03f00d40":"code","dee10ba8":"code","7c5dcc5f":"code","7bf0a04b":"code","7e1d488d":"code","cb175a12":"code","47c8a706":"code","f5a3ce1b":"code","6cec84fa":"code","7c123354":"code","ae81e4a6":"markdown","fe81224c":"markdown","42481552":"markdown","a15d6e4f":"markdown","6e686194":"markdown","f5184da2":"markdown","30729305":"markdown","a74783e8":"markdown","ece76f67":"markdown","a0febab0":"markdown"},"source":{"bad2c15f":"# Intro to pandas (Pandas is built on top of numpy )\nimport numpy as np\nimport pandas as pd ","31feef48":"# load  data into dataframe \n\ndf = pd.DataFrame(\n  [['Jan',58,42,74,22,2.95],\n\t['Feb',61,45,78,26,3.02],\n\t['Mar',65,48,84,25,2.34],\n\t['Apr',67,50,92,28,1.02],\n\t['May',71,53,98,35,0.48],\n\t['Jun',75,56,107,41,0.11],\n\t['Jul',77,58,105,44,0.0],\n\t['Aug',77,59,102,43,0.03],\n\t['Sep',77,57,103,40,0.17],\n\t['Oct',73,54,96,34,0.81],\n\t['Nov',64,48,84,30,1.7],\n\t['Dec',58,42,73,21,2.56]],\n\tindex = [0,1,2,3,4,5,6,7,8,9,10,11],\n\tcolumns = ['month','avg_high','avg_low','record_high','record_low','avg_precipitation'])\nprint(df)\n    ","28854246":"# df = pd.read_csv('filename') # to read any csv file \n \nprint(df.head()) #used to get the first n rows","8b4c3dd1":"print(df.tail(3)) # return the last n rows.","39607979":"print(df.dtypes)  #Return the dtypes in the DataFrame","09cbd121":"print(df.index) # to get a list of indices","9e60ff89":"print(df.values) #returns a numpy array with the underlying data of the DataFrame","7d67e9a0":"print(df.columns)  #return the list of columns","078169cb":"print(df.describe())","979a0a13":"print(df.sort_values('record_high',ascending = False ))","982bb687":"print(df.avg_low)  # index with single column\n\n# or print(df['avg_low'])","7d4f284f":"print(df[2:4])# rows 2 to 3","5b034430":"print(df[['avg_low','avg_high']])\n","fa901fc0":"print(df.loc[:,['avg_low','avg_high']])# multiple columns: df.loc[from_row:to_row,['column1','column2']]\n","2c50c6db":"print(df.loc[9,['avg_precipitation']])# index location can receive range or list of indices\n","03f00d40":"print(df.iloc[3:5,[0,3]])","dee10ba8":"print(df[df.avg_precipitation > 1.0])","7c5dcc5f":"print(df[df['month'].isin(['Jun','Jul','Aug'])])","7bf0a04b":"# assignment -- very similar to slicing\n\ndf.loc[9,['avg_precipitation']] = 101.3\nprint(df.iloc[9:10])\n","7e1d488d":"df.loc[9,['avg_precipitation']] = np.nan  # nan is not a number that is missing value \nprint(df.iloc[9:11])","cb175a12":"df.loc[:,'avg_low'] = np.array([5] * len(df))\nprint(df.head())","47c8a706":"df['avg_day'] = (df.avg_low + df.avg_high) \/ 2\nprint(df.head())","f5a3ce1b":"df.rename(columns = {'avg_precipitation':'avg_rain'}, inplace=True)\t\t# rename 1 column\nprint(df.head())","6cec84fa":"df.columns = ['month','av_hi','av_lo','rec_hi','rec_lo','av_rain','av_day']\nprint(df.head())","7c123354":"df.to_csv('sample.csv')\n","ae81e4a6":"## **Slicing records** ","fe81224c":"## **Renaming Columns**","42481552":"# **Pandas** \n\n**Python library used for working with data sets.It has functions for analyzing, cleaning, exploring, and manipulating data.**\n","a15d6e4f":"### loc for filtering and selecting things by label ","6e686194":"## **Dataframe to a csv file**","f5184da2":"## **Assignment** \n* very similar to slicing","30729305":"## **Filtering**","a74783e8":"### iloc for integer position,inclusive on start ","ece76f67":"## **Statistical summary**\n","a0febab0":"## **Sorting**"}}