{"cell_type":{"258c2ef4":"code","ead19e15":"code","36bed0f9":"code","d878bd21":"code","5124af47":"code","a4913454":"code","40ae6bc9":"code","5d11a128":"code","628dfbb1":"code","3a7ed05d":"code","b9873cd4":"code","ce43cfce":"code","6b208e69":"markdown","7018e72d":"markdown","8c380d19":"markdown","e877272e":"markdown","af40f5f4":"markdown","e39399c6":"markdown","0aedfe1f":"markdown","720575dc":"markdown","adecda48":"markdown","249234f6":"markdown","6433e690":"markdown","b2053db0":"markdown"},"source":{"258c2ef4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","ead19e15":"\nimport pandas as pd\n\ndf = pd.read_csv(r'\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()\n\n","36bed0f9":"df.info()\n","d878bd21":"df['Year'] = pd.to_datetime(df['Year'], format ='%Y')\ndf.info()\n","5124af47":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Rating vs Reviews\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=df['User Rating'], y=df['Reviews'])\n\n# Add label for vertical axis\nplt.ylabel(\"Reviews of books\")","a4913454":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,6))\n# Add title\nplt.title(\"Price vs Rating\")\n\n#sns.scatterplot(x=df['User Rating'], y=df['Reviews'], hue = df['Genre'])\nsns.regplot(x=df['Price'], y=df['User Rating'])\n\n# Add label for vertical axis\nplt.ylabel(\"User Rating of books\")","40ae6bc9":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,8))\n\n# Add title\n#plt.title(\"Rating vs Price\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.lmplot(x='User Rating', y='Price', hue = 'Genre', data=df)\n\n#Result - Prices of books decreases with good ratings","5d11a128":"\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Genre vs Price\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.swarmplot(x=df['Genre'], y=df['Price'])\n\n# Add label for vertical axis\nplt.ylabel(\"Price of books\")","628dfbb1":"import pandas as pd\nimport numpy as np\nimport plotly.offline as pyo\nimport plotly. graph_objs as go\ntemp_df_fiction = df[df['Genre']=='Fiction'].value_counts().sum()\ntemp_df_non_fiction = df[df['Genre']=='Non Fiction'].value_counts().sum()\n\n\nlabels=['Fiction','Non_Fiction']\nvalues = [temp_df_fiction,temp_df_non_fiction]\nfig = go.Figure(data=[go.Pie(labels = labels, values=values)])\nfig.show()\n#df_non_fiction.value_counts().sum()\n","3a7ed05d":"import pandas as pd\nimport numpy as np\nimport plotly.offline as pyo\nimport plotly. graph_objs as go\n\n#Author vs prices\nnew_df = df.groupby('Author').mean().reset_index().sort_values('Price', ascending =False).head(10)\ndata  = [go.Bar(x = new_df['Author'], y = new_df['Price'] )]\nlayout = go.Layout(template = 'plotly_dark', title = 'Top 10 Bestsellers of Authors with highest prices of books')\nfig = go.Figure(data=data, layout = layout)\nfig.show()\n\n#Author vs Name\nnew_df = df.groupby('Author').count().reset_index().sort_values('Name', ascending=False).head(10)\ndata =[go.Bar(x= new_df['Author'], y=new_df['Name'])]\nlayout = go.Layout(template = 'plotly_dark', title = 'TOp 10 Authors with maximum no of bestsellers ')\nfig = go.Figure(data = data, layout=layout)\nfig.show()\n\n#Author vs User Rating\nnew_df = df.groupby('Author').mean().reset_index().sort_values('Reviews', ascending=False).head(10)\ndata =[go.Bar(x= new_df['Author'], y=new_df['Reviews'])]\nlayout = go.Layout(template = 'plotly_dark', title = 'Top 10 Authors with maximum no of bestsellers having highest reviews' )\nfig = go.Figure(data = data, layout=layout)\nfig.show()\n\n","b9873cd4":"import pandas as pd\nimport numpy as np\nimport plotly.offline as pyo\nimport plotly. graph_objs as go\n\n#Genre vs Price\nnew_df1 = df[df['Genre'] =='Fiction']\nnew_df2 = df[df['Genre'] =='Non Fiction']\n\ntrace0 = go.Bar(x = new_df1['Year'] ,y = new_df1['Price'], name = 'Fiction' )\ntrace1 = go.Bar(x = new_df2['Year'] ,y = new_df2['Price'], name = 'Non_Fiction')\ndata = [trace0,trace1]\n\nlayout = go.Layout(title = 'Price by Genre over the years', barmode='group')\nfig = go.Figure(data = data , layout = layout)\nfig.show()\n\n#Genre vs Reviews\nnew_df1 = df[df['Genre'] =='Fiction']\nnew_df2 = df[df['Genre'] =='Non Fiction']\n\ntrace0 = go.Bar(x = new_df1['Year'] ,y = new_df1['Reviews'], name = 'Fiction' )\ntrace1 = go.Bar(x = new_df2['Year'] ,y = new_df2['Reviews'], name = 'Non_Fiction')\ndata = [trace0,trace1]\n\nlayout = go.Layout( title = 'Reviews by Genre over the years', barmode='stack')\nfig = go.Figure(data = data , layout = layout)\nfig.show()","ce43cfce":"import pandas as pd\nimport numpy as np\nimport plotly.offline as pyo\nimport plotly. graph_objs as go\nnew_df = df.groupby('Name').mean().reset_index().sort_values('User Rating', ascending = False).head(10)\nx= new_df['Name']\ny=new_df['Reviews']\nz=np.array(new_df['User Rating'])\ntrace = go.Heatmap(\n   x = x,\n   y = y,\n   z = z,\n   type = 'heatmap',\n   colorscale = 'Viridis'\n)\nlayout = go.Layout(title = 'Top 10 books with maximum user rating and reviews')\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\nfig.show()","6b208e69":"# Bestseller books with maximum ratings and reviews","7018e72d":"**Prices are decreasing with increase in rating i.e good rating books have low prices.**","8c380d19":"**The output is not helpful as there is no pattern visible in the output we recieved.**","e877272e":"****Prices of both Fictoinal and Non fictional books are decreasing with increase in rating. ****","af40f5f4":"# Bestsellers w.r.t Genre","e39399c6":"# Trend of Price and Rating","0aedfe1f":"# Price range of Fictional and Non fictional Genre books","720575dc":"**Price of both Fictional and Non Fictional books is almost in same range.** ","adecda48":"**Non Fictional books are sold more than fictional books**","249234f6":"# Trend of Price and Rating w.r.t Genre","6433e690":"# Comparing No of bestsellers between fictional and non fictional genre books","b2053db0":"# Bestsellers w.r.t Author"}}