{"cell_type":{"c5419391":"code","3da64986":"code","e01c29a7":"code","329e20e4":"code","c8ca4036":"code","b27e5ff1":"code","bb53a7f9":"code","b5047c47":"code","6ae262d9":"code","a17c4db1":"code","640d7ba3":"code","b1a9ecad":"code","bf8ae5bf":"code","7ca52cb8":"code","25bcfc69":"code","5cc49481":"code","ec30b84b":"code","29ce6260":"code","b8ff9371":"code","6ce28e60":"code","4d8bdb48":"code","93076003":"code","5eb31c74":"markdown","3b7b2d4d":"markdown","1c0e20b3":"markdown","c72bc6f4":"markdown","e2dc50a2":"markdown","f311ffa8":"markdown","7c0b03c6":"markdown","37acf46b":"markdown","852b0153":"markdown","47c02afe":"markdown","8f9949fb":"markdown","d0463ff7":"markdown","7c037818":"markdown","d0f4ea2f":"markdown","5f690fdf":"markdown","05a48b02":"markdown"},"source":{"c5419391":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport sklearn\nimport warnings\nwarnings.filterwarnings('ignore')","3da64986":"#Reading the data\ndf = pd.read_csv('..\/input\/iris\/Iris.csv')","e01c29a7":"#first 5 rows of the data\ndf.head()","329e20e4":"df.drop(['Id'], axis = 1, inplace = True)","c8ca4036":"#dimension of data\ndf.shape","b27e5ff1":"from sklearn.preprocessing import LabelEncoder","bb53a7f9":"#initializing Label Encoder\nle = LabelEncoder()\ndf['Species'] = le.fit_transform(df['Species'])\ndf.head()","b5047c47":"#Separating independent and dependent variables\ny = df['Species']\nX = df.drop(['Species'], axis = 1)","6ae262d9":"print(y)\nprint(X)","a17c4db1":"#importing decision tree classifier\nfrom sklearn.tree import DecisionTreeClassifier","640d7ba3":"#Create Decision tree function\ndt_iris = DecisionTreeClassifier(random_state = 10) ","b1a9ecad":"dt_iris.fit(X,y)","bf8ae5bf":"from sklearn import tree","7ca52cb8":"dt = tree.export_graphviz(dt_iris, out_file = 'Irt.dot')","25bcfc69":"dt2 = tree.export_graphviz(dt_iris, out_file = 'irt.dot', feature_names = X.columns, max_depth = 6, filled = True, rounded = True, special_characters = True)","5cc49481":"!dot -Tpng irt.dot -o irt.png","ec30b84b":"im1 = plt.imread('irt.png')\nplt.figure(figsize=(15,15))\nplt.imshow(im1)","29ce6260":"from sklearn import datasets","b8ff9371":"iris_f = datasets.load_iris()","6ce28e60":"#creating validation set\ni_valid = iris_f.data[149:,:4]\ni_valid","4d8bdb48":"#prediction on validation set\ndt_iris.predict(i_valid)","93076003":"df[149:150]","5eb31c74":"### 0 - Species Iris-Setosa","3b7b2d4d":"## Decision Tree","1c0e20b3":"## Applications of Decision Tree","c72bc6f4":"1. Graphical representation of all the possible solutions to a decisions.\n\n2. Decisions are based on some conditions.\n\n3. Decision made can be easily explained.","e2dc50a2":"### Using Classifier Predict Right Class Accordingly","f311ffa8":"###### Decision tree splits the nodes on all available variables","7c0b03c6":"### 1 - Species Iris-Versicolor","37acf46b":"**Classification is the process of dividing the datasets into different categories or group by adding label**.","852b0153":"### How to select best split point in Decision Tree","47c02afe":"#### Import necessary libraries","8f9949fb":"1. Fraud detection\n\n2. Credit Risk\n\n3. Loan Default\n\n4. Predicting Sales of retail Outlet\n\n5. Customer Churn","d0463ff7":"# Prediction Using Decision Tree Algorithm","7c037818":"### Create the Decision Tree classifier and visualize it graphically.","d0f4ea2f":"### 2 - Species Iris-Virginica","5f690fdf":"###### Select the split which results in most homogenous subnodes","05a48b02":"#### The following code written in python 3.x. Libraries provide pre-written functionally to perform necessary tasks"}}