{"cell_type":{"fcb683d1":"code","ddde78b9":"code","b6037329":"code","48803809":"code","ac83567d":"code","61f36a54":"code","7408f069":"code","0d0135ee":"code","bc1eced0":"code","563cdac1":"code","3e8b8995":"code","c33dd608":"code","659fb186":"code","f2c0f6f2":"markdown","dd6dca17":"markdown","4b318a5a":"markdown","16159714":"markdown","1125ba30":"markdown","25ff8976":"markdown","7b087b7c":"markdown","f654ebd2":"markdown","bf7f6329":"markdown","1e144d4c":"markdown","721c1824":"markdown","863d5c73":"markdown","90449c81":"markdown","e399950f":"markdown","216650fb":"markdown","af5dbfda":"markdown","e3fd5993":"markdown","6bf7a55e":"markdown"},"source":{"fcb683d1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom fuzzywuzzy import process, fuzz\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport warnings\nwarnings.filterwarnings('ignore')","ddde78b9":"df = pd.read_csv('..\/input\/netflix-original-films-imdb-scores\/NetflixOriginals.csv')\n\ndf.head()","b6037329":"df['Premiere'] = pd.to_datetime(df['Premiere'])\n\n# columns year, month and weekday\ndf['year']    = df['Premiere'].dt.year\ndf['month']   = df['Premiere'].dt.month_name()\ndf['weekday'] = df['Premiere'].dt.day_name()\n\n#rename score\ndf.rename(columns= {'IMDB Score' : 'Score'}, inplace= True)\n\ndf.head()","48803809":"#Creating a dataframe ordered by genre\ndf_genre = pd.DataFrame(columns= ['Genre', 'Title', 'Premiere', 'Runtime', 'Score', 'Language', 'year', 'month', 'weekday'])\n\ni = 0\ngenres_list = []\nfor row in df['Genre']:\n    genres = row.replace('\/ ','\/').replace(' \/', '\/').replace(' \/ ', '\/').replace('-', '\/').replace(' ', '\/').split('\/')\n    \n    for genre in genres:\n        new_row ={\n            'Genre'    : genre.title(),\n            'Title'    : df['Title'][i],\n            'Premiere' : df['Premiere'][i],\n            'Runtime'  : df['Runtime'][i],\n            'Score'    : df['Score'][i],\n            'Language' : df['Language'][i],\n            'year'     : df['year'][i],\n            'month'    : df['month'][i],\n            'weekday'  : df['weekday'][i]\n        }\n        df_genre = df_genre.append(new_row, ignore_index= True)\n    i += 1","ac83567d":"data = df.sort_values('Score', ascending= False)[:10]\n\n\nplt.figure(figsize= (6, 15))\nsns.set_theme()\n\nplt.subplot(2, 1, 1)\nax = sns.barplot(data= data, \n                 x= 'Score', \n                 y= 'Title', \n                 palette= 'BuGn_r', )\n\nax.set_xlim(0, 10)\nplt.title('Top 10 Most Rated Netflix Originals', size= 22)\nplt.xlabel('Score', size= 20)\nplt.ylabel('Title', size= 20)\nplt.xticks(size= 16)\nplt.yticks(size= 20)\n\nfor patch in ax.patches:\n    width = patch.get_width()\n    height = patch.get_height()\n    x = patch.get_height()\n    y = patch.get_y()\n    \n    plt.text(x + width - 0.7, y + 0.5, '{}'.format(width), size= 16)\n\n    \ndata = df.sort_values('Score')[:10]\n\nplt.subplot(2, 1, 2)\nax = sns.barplot(data= data, \n                 x= 'Score', \n                 y= 'Title', \n                 palette= 'Reds_r', )\n\nax.set_xlim(0, 10)\nplt.title('Less Rated Netflix Originals', size= 22)\nplt.xlabel('Score', size= 20)\nplt.ylabel('Title', size= 20)\nplt.xticks(size= 16)\nplt.yticks(size= 20)\n\nfor patch in ax.patches:\n    width = patch.get_width()\n    height = patch.get_height()\n    x = patch.get_height()\n    y = patch.get_y()\n    \n    plt.text(x + width - 0.7, y + 0.5, '{}'.format(width), size= 16)","61f36a54":"plt.figure(figsize= (11,8), )\n\n\ntop_genres = df_genre.loc[df_genre['Genre'].isin(df_genre.groupby('Genre').sum().sort_values('Score', ascending= False).reset_index()['Genre'][:10])].groupby('Genre').mean().sort_values('Score', ascending= False).reset_index()['Genre']\n\nplt.subplot(2, 2, 1)\nsns.boxplot(data= df_genre, \n            x= 'Genre', \n            y= 'Score', \n            order= top_genres)\nplt.title('Best Rating per Genre', size= 22)\nplt.xlabel(None)\nplt.xticks([])\nplt.yticks(size= 14)\nplt.ylim((0, 10))\n\nplt.subplot(2, 2, 3)\nfor genre in top_genres:\n    sns.scatterplot(data= df_genre.loc[df_genre['Genre'] == genre],\n                   x= 'Genre',\n                   y= 'Score',\n                   hue= 'Score',\n                   size= 'Score',\n                   palette= 'RdYlGn',\n                   legend= False)\nplt.xlabel(None)\nplt.xticks(rotation= 90,size= 16)\nplt.yticks(size= 14)\nplt.ylim((0, 10))\n\n\nplt.subplot(1, 2, 2)\nsns.countplot(df_genre.loc[df_genre['Genre'].isin(top_genres)]['Genre'], order= top_genres)\nplt.title('Released Originals per Genre', size= 22)\nplt.xticks(rotation= 90, size= 16)\nplt.yticks(size= 14)\nplt.xlabel(None)\n\nplt.show()","7408f069":"plt.figure(figsize= (10, 6))\n\nsns.countplot(df_genre.loc[df_genre['Genre'].isin(top_genres)]['year'], \n              hue= df_genre.loc[df_genre['Genre'].isin(top_genres)]['Genre'])\n\nplt.title('Released Genre per Year', size= 25)\nplt.xlabel(None)\nplt.xticks(size= 16)\n\nplt.show()","0d0135ee":"\nplt.figure(figsize= (11, 8))\n\nsns.set_theme()\nplt.subplot(2, 2, 1)\nax = sns.boxplot(data= df, \n                 x= 'year', \n                 y= 'Score')\n\n\nax.set_ylim((0, 10))\nplt.title('Distribuition of Rating per Year', size= 20)\nplt.ylabel('Score', size= 18)\nplt.xlabel(None)\nplt.xticks([])\n\nplt.subplot(2, 2, 3)\nax = sns.scatterplot(data= df, \n                     x= 'year', \n                     y= 'Score', \n                     size= 'Score', \n                     hue= 'Score', \n                     palette= 'RdYlGn', \n                     legend= False)\n\nax.set_ylim((0, 10))\nplt.xlabel('Year', size= 18)\nplt.ylabel('Score', size= 18)\nplt.xticks(size= 13, rotation= 90)\n\nplt.subplot(1, 2, 2)\nsns.countplot(df['year'])\nplt.title('Released per Year', size= 22)\nplt.xlabel('Year', size= 18)\nplt.xticks(size= 13, rotation= 90)\n\nplt.show()","bc1eced0":"plt.figure(figsize= (10, 5))\n\nplt.subplot(1, 2, 1)\nax = sns.boxplot(data= df, \n                 x= 'month', \n                 y= 'Score',\n                 order= ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])\nax.set_ylim((0, 10))\nplt.title('Distribuition of Rating per Month', size= 18)\nplt.ylabel('Score', size= 14)\nplt.xlabel(None)\nplt.xticks(rotation= 90, size= 15)\n\n\nplt.subplot(1, 2, 2)\nax = sns.countplot(df['month'], order= ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])\nplt.title('Released per Month', size= 22)\nplt.xlabel('Month', size= 15)\nplt.xlabel(None)\nplt.xticks(rotation= 90, size= 15)\n\nplt.show()","563cdac1":"plt.figure(figsize= (10, 6))\n\nplt.subplot(1, 2, 1)\nax = sns.boxplot(data= df, \n                 x= 'weekday', \n                 y= 'Score',\n                 order= ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\nax.set_ylim((0, 10))\nplt.title('Distribuition of Rating per Day of Week', size= 15)\nplt.ylabel('Score', size= 15)\nplt.xlabel(None)\nplt.xticks(rotation= 90, size= 15)\nplt.yticks(size= 15)\n\n\nplt.subplot(1, 2, 2)\nax = sns.countplot(df['weekday'],\n                   order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\nplt.title('Released per Day of Week', size= 18, )\nplt.xlabel(None)\nplt.xticks(rotation= 90, size= 15)\nplt.yticks(size= 14)\n\nplt.show()","3e8b8995":"plt.figure(figsize= (10, 6))\n\nplt.subplot(1, 2, 1)\nax = sns.scatterplot(data= df, \n                x= 'Runtime', \n                y= 'Score', \n                hue= 'Score', \n                size= 'Score',\n                palette= 'RdYlGn',\n                legend= False)\n\nax.set_ylim((0, 10))\nplt.title('Score per Runtime', size= 20)\nplt.xlabel('Runtime', size= 17)\nplt.ylabel('Score', size= 17)\nplt.yticks(size= 15)\nplt.xticks(size= 15)\n\nplt.subplot(1, 2, 2)\n\nsns.histplot(df['Runtime'])\nplt.title('Runtime Distribuition', size= 20)\nplt.xlabel('Runtime', size= 17)\nplt.yticks(size= 15)\nplt.xticks(size= 15)\n\nplt.show()","c33dd608":"plt.figure(figsize= (10, 6))\nsns.boxplot(data= df_genre.loc[df_genre['Genre'].isin(top_genres)], \n            x= 'Genre',\n            y= 'Runtime')\n\nplt.title('Runtime per Genre Distribuition', size= 20)\nplt.ylabel('Runtime', size= 15)\nplt.xlabel(None)\nplt.xticks(rotation= 90,size= 15)\nplt.yticks(size= 14)\n\n\nplt.show()","659fb186":"plt.figure(figsize= (10, 6))\nsns.boxplot(data = df, \n            y= 'Runtime',\n            x= 'year')\n\nplt.title('Runtime per Year Distribuition', size= 20)\nplt.ylabel('Runtime', size= 15)\nplt.xlabel(None)\nplt.xticks(rotation= 45, size= 15)\nplt.yticks(size= 13)\n\nplt.show()","f2c0f6f2":"# Data Cleaning","dd6dca17":"# Imports","4b318a5a":"# Introduction\n\n**In this notebook we will analyze and visualize Netflix Originals and get ideas and insights.**\n\n## Menu\n\n- [Imports](#Imports)\n- [Data Cleaning](#Data-Cleaning)\n- [Visualization](#Visualization)\n    - [Top Ratings](#Top-Ratings)\n    - [Genre Analysis](#Genre-Analysis)\n    - [Date Analysis](#Date-Analysis)\n    - [Runtime Analysis](#Runtime-Analysis)","16159714":"To datetime","1125ba30":"## Date Analysis","25ff8976":"## Top Ratings","7b087b7c":"- **Insights**\n    - There is no clear relationship with the release month and the score.\n    - The month with the highest number of releases is October and the smallest is July.","f654ebd2":"- **Insights**\n    - There is no clear relationship with launch day and rating.\n    - The vast majority of originals are released on Friday.","bf7f6329":"- **Insights**\n    - Most originals have an average duration of 100 minutes.\n    - Short-lived originals have a predominantly high rating.","1e144d4c":"## Genre Analysis","721c1824":"- **Insights**\n    - Animations have a shorter duration.","863d5c73":"# Netflix Originals Visualization","90449c81":"- **Insights**\n    - The documentary genre is the one with the highest number of releases and ratings.\n    - Netflix could invest more in the animation genre, as even though it has the smallest amount, it is one of the highest rated.","e399950f":"- **Insights**\n    - Over the years, Netflix has invested much more in documentaries, dramas and comedies.","216650fb":"# Visualization","af5dbfda":"- **Insights**\n    - Runtime increased slightly after 2015.","e3fd5993":"- **Insights**\n    - Each year Netflix releases more originals.\n    - At first it looks like the rating has dropped over the years, but actually, when we look at the charts of Movies released per year, we realize that what happened is that the number of movies released has increased, causing the average rating to be pulled down .\n    ","6bf7a55e":"# Runtime Analysis"}}