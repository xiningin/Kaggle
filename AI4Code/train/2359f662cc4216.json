{"cell_type":{"52d3ef27":"code","fd9237a2":"code","dc6fe3ec":"code","a5363950":"code","5dce98eb":"code","e39263df":"code","c460bbee":"code","ec9c8dab":"code","a1572030":"code","6a2c2f03":"code","14a422b1":"code","3005f427":"code","c2543870":"code","04ab3fd4":"code","146a9433":"code","9e54154c":"code","e58c6bf8":"code","2533705c":"code","cd7add45":"code","f0f19067":"code","0f32bfcc":"code","14f31b1d":"code","f7d5d7cd":"code","a10b3eee":"code","dc7d9d8f":"code","ae036654":"code","fbe1af36":"code","61eeb648":"code","d847475c":"code","0afe847c":"code","d48aa5eb":"code","c9211e92":"code","dea5e401":"code","5827c337":"code","b49d5f64":"code","bbfb2b37":"code","ff24bebf":"code","296d889a":"code","202adac5":"code","602e9a6a":"code","f7126295":"code","f86bf73a":"code","d82d8da3":"code","90bdd79c":"code","5c9290ba":"code","945e6c9d":"code","8713c29f":"code","17fe4194":"code","69cfbc5c":"code","37c24f05":"code","bc72b51c":"code","7c20aae4":"code","8f05f641":"code","1657aeac":"code","d848e768":"code","b4273d6f":"code","50c4cca0":"code","d1c7453c":"code","e2f3014e":"code","2e175026":"code","1f82b1bf":"code","90bc09e7":"code","54b4d008":"code","2a0d9f99":"code","d250ded5":"code","bbf2ddbd":"code","7bcd8831":"code","1b7e1daf":"code","2ff8ac18":"code","38854f1a":"code","23d5d164":"code","b4ec4da3":"code","8e791487":"code","598c762f":"code","2075079d":"code","4c0310ff":"code","7c8a677c":"code","3bab7c16":"code","d48d8109":"code","49841557":"code","175c5c2e":"code","ea05a10f":"code","8f078bca":"code","63a22f9b":"code","07ef78a4":"markdown","f42dc127":"markdown","43354d7d":"markdown","8674d1de":"markdown","58f11c91":"markdown","e858fabb":"markdown","4371bb64":"markdown","7a28a849":"markdown","e8b487b1":"markdown","9c493458":"markdown","08bf39d0":"markdown","c3bd4e20":"markdown","b32dd936":"markdown","ab640fdb":"markdown","9fa894ee":"markdown","660342d0":"markdown","ccf88679":"markdown","60921a3d":"markdown","8df7ca26":"markdown","ca095658":"markdown","7b5057f4":"markdown","777db1d8":"markdown","52b2942b":"markdown","ee03762a":"markdown","68880a83":"markdown","7487549c":"markdown","847b7128":"markdown","5ea06162":"markdown","3f1e1af9":"markdown","cc4746f4":"markdown","5b3df0b7":"markdown","ee2cb5e8":"markdown","e28dab13":"markdown","90c06810":"markdown","08f35e27":"markdown","4f3ec75e":"markdown","ef46690f":"markdown"},"source":{"52d3ef27":"pip install dnspython","fd9237a2":"import numpy as np\n\nimport pandas as pd\nimport json\nimport pymongo\nimport timeit\nfrom pymongo import MongoClient\nimport matplotlib.pyplot as plt\nimport pprint\nimport urllib.parse\n","dc6fe3ec":"\n\nclient = MongoClient(\"mongodb+srv:\/\/geuser:melq.5491@bdegi.3pkrh.gcp.mongodb.net\/gre_EMD?retryWrites=true&w=majority\")\ndb = client.test\n\n","a5363950":"db = client['gre_EMD'] ","5dce98eb":"db","e39263df":"collection = db['gre10_depl']","c460bbee":"collection","ec9c8dab":"db.list_collection_names()","a1572030":"collection0 = db['gre10_depl']\ncollection1 = db['gre10_traj']\ncollection2 = db['gre10_mng']\ncollection3 = db['gre10_pers']","6a2c2f03":"print(collection0.find())","14a422b1":"view = collection.find_one()\nview0 = collection0.find_one()\nview1 = collection1.find_one()\nview2 = collection2.find_one()\nview3 = collection3.find_one()\n","3005f427":"view","c2543870":"view0","04ab3fd4":"view1","146a9433":"view2","9e54154c":"view3","e58c6bf8":"collection.count_documents({})","2533705c":"collection0.count_documents({})","cd7add45":"collection1.count_documents({})","f0f19067":"collection2.count_documents({})","0f32bfcc":"collection3.count_documents({})","14f31b1d":"s =0\nfor x in collection0.find():\n    if (x['duree']== 'NA'):\n      s+=1\ns","f7d5d7cd":"nb_d = []\nfor x in collection0.find() :\n    nb_d.append(int(x['NO_DEPL']))\nduree_d = []\nfor x in collection0.find() :\n    duree_d.append(int(x['duree']))\n\nage = []\nfor x in collection3.find() :\n    age.append(int(x['age']))","a10b3eee":"print(\"pour nombre de trajet\" , np.min(nb_d))\n\nprint(\"pour duree trajet :\" ,np.min(duree_d))\n\nprint(\"pour age\" ,np.min(age) )\n","dc7d9d8f":"print(\"pour nombre de trajet :\" ,np.max(nb_d))\n\nprint(\"pour duree de trajet :\",np.max(duree_d) )\n\nprint(\"pour age :\" ,np.max(age))\n","ae036654":"print(\"pour nombre de trajet :\" ,np.mean(nb_d))\n\nprint(\"pour duree de trajet :\",np.mean(duree_d) )\n\nprint(\"pour age :\" ,np.mean(age))\n","fbe1af36":"print(\"pour nombre de trajet :\" ,np.median(nb_d))\n\nprint(\"pour duree de trajet :\",np.median(duree_d) )\n\nprint(\"pour age :\" ,np.median(age))\n","61eeb648":"print(\"pour nombre de trajet :\" ,np.var(nb_d))\n\nprint(\"pour duree de trajet :\",np.var(duree_d) )\n\nprint(\"pour age :\" ,np.var(age))\n","d847475c":"plt.xlabel('numbre of travels')\nplt.ylabel('numbre of people')\nplt.hist(nb_d)\n","0afe847c":"\nplt.ylabel('duration')\nplt.boxplot(duree_d)\n","d48aa5eb":"plt.xlabel('age')\nplt.ylabel('frequency')\nplt.hist(age,density =1)\n","c9211e92":"sexe = []\nfor x in collection3.find():\n    sexe.append(x['sexe'])\nplt.xlabel('sexe')\nplt.ylabel('number of people')    \nplt.hist( sexe)","dea5e401":"occupation1 = []\nfor x in collection3.find():\n    occupation1.append(x['OCCU1'])\n    \nfor i in range(0, len(occupation1)): \n    if(occupation1[i] == 'NA'):\n        occupation1[i] = 0\n    else:\n        occupation1[i] = int(occupation1[i])\n        \n\nplt.ylabel('numbre of people')\nplt.hist(occupation1)","5827c337":"occupation2 = []\nfor x in collection3.find():\n    occupation2.append((x['OCCU2']))\n    \nfor i in range(0, len(occupation2)): \n    if(occupation2[i] == 'NA'):\n        occupation2[i] = 0\n    else:\n        occupation2[i] = int(occupation2[i])\nplt.xlabel('numbre of secondary occupations')\nplt.ylabel('numbre of people')\nplt.hist(occupation2, )","b49d5f64":"fqvelo = []\nfqtram = []\nfor x in collection3.find():\n    if(x['fqvelo'] == 'NA'):\n        fqvelo.append(0)\n    else :\n        fqvelo.append((x['fqvelo'])) \n    if(x['freqtram'] == 'NA'):\n        fqtram.append(0)\n    else :\n        fqtram.append((x['freqtram']))\nfreqvelo = {} \nfreqtram = {}\nfor item in fqvelo: \n    if (item in freqvelo): \n        freqvelo[item] += 1\n    else: \n        freqvelo[item] = 1\nfor item in fqtram: \n    if (item in freqtram): \n        freqtram[item] += 1\n    else: \n        freqtram[item] = 1\n\nprint(\"freq velo: \", dict(sorted(freqvelo.items(), key=lambda item: item[1])))\nprint(\"freq tram :\", dict(sorted(freqtram.items(), key=lambda item: item[1])))","bbfb2b37":"start_time = timeit.default_timer()\n# Creates a client for the primary sandbox from cluster host cluster0-nlbcx.mongodb.net\nclient = MongoClient(\"mongodb:\/\/adminUser:xpass@cluster0-shard-00-00-nlbcx.mongodb.net:27017\/?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin\")\n\ndb = client.test \ndb = client['stackoverflow-dump-view']\ncollection = db['viewModel-view']\n\nview = collection.find_one() # json file, can be browsed as a dictionary\n\n#print (view['releaseViewList'][0].keys())\nviewRel0=view['releaseViewList'][0]\nviewRel1=view['releaseViewList'][1]\nviewRel2=view['releaseViewList'][2]","ff24bebf":"viewRel0","296d889a":"viewRel1","202adac5":"viewRel2","602e9a6a":"minValue0=viewRel0['attributeDescList'][0]['minValue'];print(minValue0)\nmaxValue0=viewRel0['attributeDescList'][0]['maxValue'];print(maxValue0)\nmean0=viewRel0['attributeDescList'][0]['mean'];print(mean0)\nmedian0=viewRel0['attributeDescList'][0]['median'];print(median0)\nnullValue0=viewRel0['attributeDescList'][0]['nullValue'];print(nullValue0)\nname0=viewRel0['attributeDescList'][0]['name'];print(name0)\ncount0=viewRel0['attributeDescList'][0]['count'];print(count0)","f7126295":"nullsRel0=[]\nfor i in viewRel0['attributeDescList']:\n    nullsRel0.append(sum(i['nullValue']))\n\nnullsRel1=[]\nfor i in viewRel1['attributeDescList']:\n    nullsRel1.append(sum(i['nullValue']))\n\nnullsRel2=[]\nfor i in viewRel2['attributeDescList']:\n    nullsRel2.append(sum(i['nullValue']))","f86bf73a":"import matplotlib.pyplot as plt \n\n# line 1 points \nx = ['Votes','Posts','Comments','Badges','Users']\ny1 = nullsRel0\n# plotting the line 1 points \nplt.plot(x, y1, label = \"Jan01-18\")\n\n# line 2 points \ny2 = nullsRel1\n# plotting the line 1 points \nplt.plot(x, y2, label = \"Jan02-18\")\n\n# line 3 points \ny3 = nullsRel2\n# plotting the line 1 points \nplt.plot(x, y3, label = \"Jan03-18\")\n\n# naming the x axis \nplt.xlabel('dataset') \n# naming the y axis \nplt.ylabel('null values') \n# giving a title to my graph \nplt.title('Number of null values per release') \n\n# show a legend on the plot \nplt.legend() \n\n# function to show the plot \nplt.show() ","d82d8da3":"countRel0=[]\nfor i in viewRel0['attributeDescList']:\n    countRel0.append(i['count'])\n\ncountRel1=[]\nfor i in viewRel1['attributeDescList']:\n    countRel1.append(i['count'])\n\ncountRel2=[]\nfor i in viewRel2['attributeDescList']:\n    countRel2.append(i['count'])","90bdd79c":"import matplotlib.pyplot as plt \n\n# line 1 points \nx = ['Votes','Posts','Comments','Badges','Users']\ny1 = countRel0\n# plotting the line 1 points \nplt.plot(x, y1, label = \"Jan01-18\")\n\n# line 2 points \ny2 = countRel1\n# plotting the line 1 points \nplt.plot(x, y2, label = \"Jan02-18\")\n\n# line 3 points \ny3 = countRel2\n# plotting the line 1 points \nplt.plot(x, y3, label = \"Jan03-18\")\n\n# naming the x axis \nplt.xlabel('dataset') \n# naming the y axis \nplt.ylabel('count') \n# giving a title to my graph \nplt.title('Count of items per release') \n\n# show a legend on the plot \nplt.legend() \n\n# function to show the plot \nplt.show() ","5c9290ba":"elapsed = timeit.default_timer() - start_time","945e6c9d":"print (\"execution time: \" + str(elapsed) + \" s\")","8713c29f":"#------------------------------------------------------------------ Q1 --------------------------------------------------------------------#\nbtn1=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl1=widgets.Text(value='0',description='',disabled=True)\nq1 = widgets.RadioButtons(options=['January 1rst 2018', 'January 2nd 2018', 'January 3rd 2018'],value=None,description='Release:',disabled=True)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q2 --------------------------------------------------------------------#\nbtn2=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl2=widgets.Text(value='0',description='',disabled=True)\nq2 = widgets.RadioButtons(options=['January 1rst 2018', 'January 2nd 2018', 'January 3rd 2018'],value=None,description='Release:',disabled=True)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q3 --------------------------------------------------------------------#\nbtn3=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl3=widgets.Text(value='0',description='',disabled=True)\nq3 = widgets.RadioButtons(options=['January 1rst 2018', 'January 2nd 2018', 'January 3rd 2018'],value=None,description='Release:',disabled=True)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q4 --------------------------------------------------------------------#\nbtn4=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl4=widgets.Text(value='0',description='',disabled=True)\nq4 = widgets.Dropdown(options=['Id','PostTypeId','AcceptedAnswerId','ParentId','CreationDate','DeletionDate','Score','ViewCount','Body','OwnerUserId','OwnerDisplayName','LastEditorUserId','LastEditorDisplayName','LastEditDate','LastActivityDate','Title','Tags','AnswerCount','CommentCount','FavoriteCount','ClosedDate','CommunityOwnedDate'],\n    value=None,description='Attribute:',disabled=True,)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q5 --------------------------------------------------------------------#\nbtn5=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl5=widgets.Text(value='0',description='',disabled=True)\ndrop_options = [['--','Id','UserId','Name','Date','Class','TagBased'],\n                ['--','Id','PostId','Score','Text','CreationDate','UserDisplayName','UserId'],\n               ['--','Id','PostTypeId','AcceptedAnswerId','ParentId','CreationDate','DeletionDate','Score','ViewCount','Body','OwnerUserId','OwnerDisplayName','LastEditorUserId','LastEditorDisplayName','LastEditDate','LastActivityDate','Title','Tags','AnswerCount','CommentCount','FavoriteCount','ClosedDate','CommunityOwnedDate'],\n               ['--','Id','Reputation','CreationDate','DisplayName','LastAccessDate','WebsiteUrl','Location','AboutMe','Views','UpVotes','DownVotes','ProfileImageUrl','EmailHash','AccountId'],\n               ['--','Id','PostId','VoteTypeId','UserId','CreationDate','BountyAmount']]\nchildren = [widgets.Dropdown(options=name,description='',value=None) for name in drop_options]\ntab = widgets.Tab()\ntab.children = children\nitems=['Badges', 'Comments', 'Posts', 'Users', 'Votes']\nfor i in range(len(items)):\n    tab.set_title(i, items[i])\nq5=tab\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q6 --------------------------------------------------------------------#\nbtn6=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl6=widgets.Text(value='0',description='',disabled=True)\nq6= widgets.RadioButtons(options=['Yes', 'No'],value=None,description='',disabled=False)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q7 --------------------------------------------------------------------#\nbtn7=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl7=widgets.Text(value='0',description='',disabled=True)\nchildren2 = [widgets.Dropdown(options=name,value=None) for name in drop_options]\ntab2 = widgets.Tab()\ntab2.children = children2\nfor i in range(len(items)):\n    tab2.set_title(i, items[i])\nq7=tab2\n#------------------------------------------------------------------------------------------------------------------------------------------#\n\n#------------------------------------------------------- Effort questions -----------------------------------------------------------------#\neffortW = []\nfor e in range(7):\n    effortW.append(widgets.ToggleButtons(options=['Low', 'Regular', 'High'],description='Select Effort:',disabled=False,value=None))  \n\ntimeLblW = []\nfor t in range(7):\n    timeLblW.append(widgets.Text(value='0',description='',disabled=True))  \n    \n# Timer function    \n# btn - receive a button object\n# lbl - receive a label object\n#    we use lbl.value to get timer value\n# q - receive a multiple option object\n#    we use q.value to get answered value\ndef timer(btn,lbl,q):        \n\n    cnt =int(lbl.value)   \n    on=btn.value \n    desc=q.description\n\n    if desc!='Submitted':\n        if on==True:      \n            threading.Timer(1, timer, [btn,lbl,q]).start()\n            cnt = cnt+1                        \n            lbl.value = str(cnt)\n            btn.description='Submit answer'\n            q.disabled=False\n\n        elif on==False:\n            threading.Timer(1, timer, [btn,lbl,q]).start()\n            btn.description='Activate'\n            q.disabled=True\n\n        else:\n            None\n\n    if cnt!=0 and btn.description=='Activate':\n        threading.Timer(1, timer, [btn,lbl,q]).start()\n        q.description='Submitted'\n        btn.visibility='hidden'\n        btn.description='--'\n        btn.disbled=True  \n\ndef timerTab(btn,lbl,q):        \n\n    cnt=int(lbl.value)   \n    on=btn.value \n    desc=q.children[0].description\n\n    if desc!='Submitted':\n        if on==True:      \n            threading.Timer(1, timerTab, [btn,lbl,q]).start()\n            cnt = cnt+1                        \n            lbl.value = str(cnt)\n            btn.description='Submit answer'\n            for i in range(len(q.children)):\n                q.children[i].disabled=False\n\n        elif on==False:\n            threading.Timer(1, timerTab, [btn,lbl,q]).start()\n            btn.description='Activate'\n            for i in range(len(q.children)):\n                q.children[i].disabled=True\n\n        else:\n            None\n\n    if cnt!=0 and btn.description=='Activate':\n        threading.Timer(1, timerTab, [btn,lbl,q]).start()\n        for i in range(len(q.children)):\n            q.children[i].description='Submitted'\n        btn.visibility='hidden'\n        btn.description='--'\n        btn.disbled=True                        ","17fe4194":"timeLblW[0]","69cfbc5c":"btn1","37c24f05":"q1","bc72b51c":"timer(btn1,timeLblW[0],q1)","7c20aae4":"effortW[0]","8f05f641":"timeLblW[1]","1657aeac":"btn2","d848e768":"q2","b4273d6f":"timer(btn2,timeLblW[1],q2)","50c4cca0":"effortW[1]","d1c7453c":"timeLblW[2]","e2f3014e":"btn3","2e175026":"q3","1f82b1bf":"timer(btn3,timeLblW[2],q3)","90bc09e7":"effortW[2]","54b4d008":"timeLblW[3]","2a0d9f99":"btn4","d250ded5":"q4","bbf2ddbd":"timer(btn4,timeLblW[3],q4)","7bcd8831":"effortW[3]","1b7e1daf":"timeLblW[4]","2ff8ac18":"btn5","38854f1a":"q5","23d5d164":"timerTab(btn5,timeLblW[4],q5)","b4ec4da3":"effortW[4]","8e791487":"timeLblW[5]","598c762f":"btn6","2075079d":"q6","4c0310ff":"timer(btn6,timeLblW[5],q6)","7c8a677c":"effortW[5]","3bab7c16":"timeLblW[6]","d48d8109":"btn7","49841557":"timerTab(btn7,timeLblW[6],q7)","175c5c2e":"q7","ea05a10f":"effortW[6]","8f078bca":"# collect user effort \nuserEffortL = []\nfor e in effortW:\n    userEffortL.append(e.value) \n        \n# collect time from answers\nqtimeL=[]\nfor t in timeLblW:\n    qtimeL.append(int(t.value))\n\n# tuple for answers\nqans1=q1.options[2]\nqans2=q2.options[0]\nqans3=q3.options[1]\nqans4=q4.options[3]\nqans5=[q5.children[0].options[3],q5.children[1].options[0],q5.children[2].options[5],q5.children[3].options[5],q5.children[4].options[0]]\nqans6=q6.options[0]\nqans7=[q7.children[0].options[3],q7.children[1].options[0],q7.children[2].options[5],q7.children[3].options[5],q7.children[4].options[0]]\nqans = [qans1,qans2,qans3,qans4,qans5,qans6,qans7]\n\nscoreL = [0.0]*7\n\nif q1.value == qans1: scoreL[0]=1 \nif q2.value == qans2: scoreL[1]=1 \nif q3.value == qans3: scoreL[2]=1 \nif q4.value == qans4: scoreL[3]=1 \n\nif qans5[0] == q5.children[0].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[1] == q5.children[1].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[2] == q5.children[2].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[3] == q5.children[3].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[4] == q5.children[4].value: scoreL[4]=scoreL[4] + 0.2\n\nif q6.value ==qans6: scoreL[5]=1\n\nif qans7[0] == q7.children[0].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[1] == q7.children[1].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[2] == q7.children[2].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[3] == q7.children[3].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[4] == q7.children[4].value: scoreL[6]=scoreL[6] + 0.2\n        \n# calculated effort\ncalcEffortL = []\nmaxcEffort = 100\nfor i in range(0,len(scoreL)):\n    if scoreL[i] == 0: \n        calcEffortL.append(maxcEffort)\n    else:\n        if int(qtimeL[i]) > 300: qtimeL[i] = 300 # 5 min limit\n        tmp=int(qtimeL[i])\/scoreL[i]\n        calcEffortL.append((tmp*100)\/1800)            ","63a22f9b":"import csv\n# qid | time | score | user_effort | calculated_effort | execution_time (cpu)\nheader=['qid', 'score', 'time', 'user_effort', 'calculated_effort', 'execution_time'] \nqid=list(range(1,8))\nelapsedL = [elapsed]*7\n\nrows = zip(qid,scoreL,qtimeL,userEffortL,calcEffortL,elapsedL)\n\nwith open(\"..\/results\/match2.csv\", mode=\"w\") as f:\n    #writer = csv.writer(f, delimiter=',', quotechar='\"', quoting=csv.QUOTE_MINIMAL)\n    writer = csv.writer(f, delimiter=',')\n    writer.writerow(header)\n    for row in rows:\n        writer.writerow(row)","07ef78a4":"## Q4. Which attribute from _Posts_ item can be used to compute answers' popularity and author's reputation (started answered and authors)","f42dc127":"## Q2. Which release has the most number of records?","43354d7d":"### Number of Items per release","8674d1de":"### Q6.1 Effort to answer the question","58f11c91":"# Median","e858fabb":"## Q3. Which is the release where _UpVote_ attribute from _Users_ item is more spread?","4371bb64":"we can also search to find if there is correlation between different variables like age and number of travels, also between type of travel and the duration of travel, or even type of occupation and length of travels but we need to link the tables!\n","7a28a849":"### Third Release View","e8b487b1":"### First Release View","9c493458":"# variance","08bf39d0":"# Min","c3bd4e20":"Here are a few comments about your project: \n1. The code I provided as an example was \"an example\" and it was not usable in its entirety. You have left bits of code with \"views\" that are in no way related to your project. They do not even run !\n\n2. One aspect discussed and stressed in class was the importance of the explicability of the phases of the experiment: research question, purpose and interpretation of the results. A simple pseudo-exploration of data collections seems too minimal for a project even for a wrap-up project.\n\n3. You have not added a description of the project, its objective, and not even your name. ","b32dd936":"# number of null values in collection0","ab640fdb":"# Plots","9fa894ee":"## Q1. Which is the release with best quality? (less missing, nulls and default values)","660342d0":"## Releases","ccf88679":"### Q2.1 Effort to answer the question","60921a3d":"### Number of Null Values per release","8df7ca26":"pour pour plusieurs deplacement ( deplacement) : le tram est beaucoup plus utilis\u00e9\npour peu de deplacement (ente 0 et 4) : velo est plus utilis\u00e9","ca095658":"## Q7. Choose the attributes that can be used as sharging keys to fragment the release using a hash based and an interval based strategy","7b5057f4":"### Second Release View","777db1d8":"## Get Match Results","52b2942b":"### Q5.1 Effort to answer the question","ee03762a":"# Exploring Views","68880a83":"### Q7.1 Effort to answer the question","7487549c":"# Tasks","847b7128":"### Execution time","5ea06162":"### Q4.1 Effort to answer the question","3f1e1af9":"### Q1.1 Effort to answer the question","cc4746f4":"# Different statistical values","5b3df0b7":"## Q5. Which is\/are the attribute(s) that can be used to identify the most trendy topic addressed in the release?","ee2cb5e8":"# Mean","e28dab13":"## Q6 Will missing, null, and default values bias observation of trends?","90c06810":"# Max","08f35e27":"### Q3.1 Effort to answer the question","4f3ec75e":"We can see that most of the people in this data set don't have a 2nd occupation\n","ef46690f":"nombre de personne pour chaque frequence d'utilisation de velo"}}