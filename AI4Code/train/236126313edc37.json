{"cell_type":{"a1eb5215":"code","e5259408":"code","29b87a0e":"code","1e4abf92":"code","de418cf5":"code","07a8bf32":"code","abe79d6c":"code","67d69689":"code","9dbf3392":"code","37ac7f4b":"code","1df90999":"code","d85d53d3":"code","0edc3e61":"code","272e57c4":"code","b6efc869":"code","302a4750":"code","4de1f17b":"code","fd6cd951":"code","6327a745":"code","1895013a":"code","d860387f":"markdown","3d323cbf":"markdown","c9111442":"markdown","c177551e":"markdown","3a3e415a":"markdown","d4f96585":"markdown","16972d92":"markdown","e0e4c873":"markdown","ed82aa37":"markdown","d8c16f6e":"markdown","d5130edd":"markdown","58f3f50c":"markdown","9a850e11":"markdown"},"source":{"a1eb5215":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e5259408":"import osmnx as ox\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\n\nfrom shapely.geometry import Point\n\ncity = ox.gdf_from_place('S\u00e3o Paulo, S\u00e3o Paulo, Brasil')","29b87a0e":"fig, ax = plt.subplots(figsize=(15, 15))\ncity.plot(ax=ax)","1e4abf92":"data = pd.read_csv(\"\/kaggle\/input\/eleicoes-municipais-2016-sp\/sao_paulo.csv\", converters={\"coordenadas\": eval})","de418cf5":"data.head()","07a8bf32":"data[\"geometry\"] = data[\"coordenadas\"].apply(lambda x : Point(x))","abe79d6c":"geo_df = gpd.GeoDataFrame(data, crs={\"init\": \"epsg:4326\"}, geometry=data[\"geometry\"])","67d69689":"exclude_data = geo_df[geo_df[\"coordenadas\"] >= (0, 0)][\"coordenadas\"].unique()\ngeo_df = geo_df[~geo_df[\"coordenadas\"].isin(exclude_data)]","9dbf3392":"geo_df.head()","37ac7f4b":"agg_geo_df = geo_df.groupby(\"endere\u00e7o\")[\"geometry\"].first()","1df90999":"fig, ax = plt.subplots(figsize=(15, 15))\ncity.plot(ax=ax, color=\"grey\", alpha=0.4)\nagg_geo_df.plot(ax=ax, markersize=4, color=\"red\", marker=\"o\")","d85d53d3":"SP_cities = gpd.read_file(\"\/kaggle\/input\/eleicoes-municipais-2016-sp\/sp_municipios\/35MUE250GC_SIR.shp\")\nSP_cities.head()","0edc3e61":"sp_city = SP_cities[SP_cities[\"NM_MUNICIP\"] == \"S\u00c3O PAULO\"][\"geometry\"].values[0]","272e57c4":"agg_geo_df = geo_df.groupby(\"endere\u00e7o\", as_index=False)[\"geometry\"].first()\nagg_geo_df = agg_geo_df[agg_geo_df[\"geometry\"].apply(lambda x: x.within(sp_city))]","b6efc869":"fig, ax = plt.subplots(figsize=(15, 15))\ncity.plot(ax=ax, color=\"grey\", alpha=0.4)\nagg_geo_df.plot(ax=ax, markersize=4, color=\"red\", marker=\"o\")","302a4750":"from sklearn.preprocessing import MinMaxScaler\n\nmm = MinMaxScaler()","4de1f17b":"candidate = \"EDUARDO SUPLICY\"\n\nagg = data.groupby([\"endere\u00e7o\", \"candidato\"], as_index=False).agg({\"votos\": \"sum\", \n                                                                   \"coordenadas\": \"first\",\n                                                                   \"zona\": \"first\",\n                                                                   \"geometry\": \"first\"})","fd6cd951":"agg = agg[agg[\"candidato\"] == candidate] \nagg = agg[agg[\"geometry\"].apply(lambda x: x.within(sp_city))]","6327a745":"geo_agg = gpd.GeoDataFrame(agg, crs={\"init\": \"epsg:4326\"}, geometry=agg[\"geometry\"])\ngeo_agg[\"votos_size\"] = mm.fit_transform(geo_agg[[\"votos\"]])","1895013a":"max_amount = float(geo_agg[\"votos\"].max())\n\nfig, ax = plt.subplots(figsize=(15, 15))\ncity.plot(ax=ax, color=\"grey\", alpha=0.4)\n\n\n### We plot all locations in red to represent without votes. If there are votes they, they will be covered\ngeo_agg.plot(ax=ax, markersize=5.5, color=\"red\", marker=\"o\", label=\"Se\u00e7\u00f5es sem votos\")\n\n\ngeo_agg.plot(column=\"votos\", \n             ax=ax, \n             markersize=100 * geo_agg[\"votos_size\"], \n             marker=\"o\", \n             vmax=max_amount,\n             cmap=\"Greens\", \n             legend=True,\n             label=\"Se\u00e7\u00f5es com votos\")\n\nplt.xticks([], [])\nplt.yticks([], [])\nplt.title(\"Votos de \" + candidate + \" por regi\u00e3o\")\nplt.legend()\nplt.show()","d860387f":"## Ploting information\n\nLet's now show any information from elections over the map.","3d323cbf":"We transform the coordinates tuples into a Point, an object that will make it easy to do geospatial operations.","c9111442":"Select Sao Paulo city","c177551e":"Now comes the plot. ","3a3e415a":"There are some not found coordinates set at (0, 0), let's exclude them!","d4f96585":"Let's group them to plot and see them in the map.","16972d92":"We start with the imports and the city map.","e0e4c873":"Now we make our df a GeoDataFrame!","ed82aa37":"Not good! There are a lot of coordinates that are wrong! Let's use the polygon that defines the city and exclude all the points that are out of it. So we use IBGE data to know the cities limits.","d8c16f6e":"Exclude points that are not within the city.","d5130edd":"Now we load the elections data.","58f3f50c":"Now it looks great!","9a850e11":"Let's plot only the city map to see if everything is working as expected."}}