{"cell_type":{"de14f253":"code","ca4b00e6":"code","0f75efc1":"code","694a1803":"code","0165fdfe":"code","32e20e29":"code","f0e56086":"code","ae56b881":"code","06410df4":"code","fa82aa45":"code","b7e4b449":"code","959cdfa1":"code","4313ea34":"code","ea4749ae":"code","2d50cb74":"code","664e15fe":"markdown","fa252143":"markdown","f8dfcd40":"markdown","2048d428":"markdown","c5bce633":"markdown","1fbac38b":"markdown","638aed28":"markdown","feae4fdf":"markdown","9dbb994f":"markdown","0fc76167":"markdown","8ff80735":"markdown","dd36ff39":"markdown","88932bee":"markdown","07c494d5":"markdown","f923c493":"markdown","948bd986":"markdown"},"source":{"de14f253":"import numpy as np\nimport pandas as pd\nimport os\n\nfrom keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\n\n# Config\nbatch_size = 64\nepochs = 50\nmax_len = 75\nembedding = 40","ca4b00e6":"# H\u00e0m tr\u1ea3 v\u1ec1 d\u1eef li\u1ec7u t\u1eeb file csv\ndef load_data(filename='..\/input\/entity-annotated-corpus\/ner_dataset.csv'):\n    df = pd.read_csv(filename, encoding = \"ISO-8859-1\") # \u0111\u1ecdc file\n    df = df.fillna(method = 'ffill') # foward fill - l\u1ea5p \u0111\u1ea7y c\u00e1c ch\u1ed7 n\u00e0o m\u00e0 kh\u00f4ng c\u00f3 d\u1eef li\u1ec7u (NaN) b\u1eb1ng data \u1edf d\u00f2ng tr\u00ean v\u00e0 c\u00f9ng c\u1ed9t\n    return df\n\n# D\u1eef li\u1ec7u l\u1ea5y ra \u0111\u01b0\u1ee3c\ndf = load_data()\n\n# print(df)","0f75efc1":"# H\u00e0m tr\u1ea3 v\u1ec1 m\u1ea3ng c\u00e1c tuple [1 m\u1ea3ng d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 v\u00e0 kh\u00f4ng th\u1ec3 b\u1ecb thay \u0111\u1ed5i gi\u00e1 tr\u1ecb] d\u1ea1ng (w,p,t) [word, pos, tag]\nagg = lambda s: [(w, p, t) for w, p, t in zip(s['Word'].values.tolist(), s['POS'].values.tolist(), s['Tag'].values.tolist())]\n\n# print(agg(df))","694a1803":"grouped = df.groupby(\"Sentence #\").apply(agg)\n\n# print(grouped)","0165fdfe":"sentences = [s for s in grouped]\n\nprint(sentences)","32e20e29":"# M\u1ea3ng c\u00e1c t\u1eeb \u1edf c\u1ed9t Word trong file csv, v\u1edbi .unique() => m\u1ea3ng n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c l\u1ecdc ra sao cho m\u1ed7i ph\u1ea7n t\u1eed l\u00e0 duy nh\u1ea5t\nwords = list(df['Word'].unique())\n\n# M\u1ea3ng c\u00e1c t\u1eeb \u1edf c\u1ed9t Tag trong file csv\ntags = list(df['Tag'].unique())\n\n# print(words)\n# print(tags)","f0e56086":"# 1 enum [Gi\u1ed1ng object b\u00ean Js] c\u00f3 key l\u00e0 word, payload l\u00e0 th\u1ee9 t\u1ef1 c\u1ee7a word \u0111\u00f3 trong m\u1ea3ng words + 2 [t\u1ee9c word \u0111\u1ea7u ti\u00ean c\u00f3 payload l\u00e0 2]\nword2idx = {w: i + 2 for i, w in enumerate(words)} # => {'word1': 2, 'word2': 3, ...}\n\n# Th\u00eam 2 ph\u1ea7n t\u1eed v\u1edbi payload l\u1ea7n l\u01b0\u1ee3t l\u00e0 0 v\u00e0 1 [2 v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a m\u1ea3ng]\nword2idx[\"UNK\"] = 1\nword2idx[\"PAD\"] = 0\n\n# print(word2idx)","ae56b881":"# 1 enum c\u00f3 key l\u00e0 tag, c\u00f2n payload l\u00e0 s\u1ed1 th\u1ee9 t\u1ef1 c\u1ee7a tag \u0111\u00f3 trong m\u1ea3ng tags + 1\ntag2idx = {t : i + 1 for i, t in enumerate(tags)}\n\n# Th\u00eam 1 ph\u1ea7n t\u1eed v\u1edbi payload \u0111\u1ea7u ti\u00ean [0]\ntag2idx[\"PAD\"] = 0\n\n# print(tag2idx)","06410df4":"# \u0110\u1ea3o ng\u01b0\u1ee3c l\u1ea1i v\u1ecb tr\u00ed c\u1ee7a key v\u00e0 payload so v\u1edbi word2idx\nidx2word = {i: w for w, i in word2idx.items()} # => {0: 'UNK', 1: 'PAD', 2: 'word1', 3: 'word2', ...}\n\n# \u0110\u1ea3o ng\u01b0\u1ee3c l\u1ea1i v\u1ecb tr\u00ed c\u1ee7a key v\u00e0 payload so v\u1edbi tag2idx\nidx2tag = {i: w for w, i in tag2idx.items()} # => {0: 'PAD', 1: 'tag1', 2: 'tag2', ...}\n\n# print(idx2word)\n# print(idx2tag)","fa82aa45":"# sentences l\u00e0 m\u1ea3ng c\u1ee7a c\u00e1c s, v\u1edbi s l\u00e0 m\u1ea3ng c\u00e1c word [tuple] \u0111\u01b0\u1ee3c groupby (Sentence #) \u1edf tr\u00ean,\n# v\u1edbi w l\u00e0 word d\u1ea1ng (_w,_p,_t) => w[0] s\u1ebd l\u00e0 _w trong c\u00e1i tuple \u0111\u00f3,\n# v\u00e0 ta c\u00f3 enum word2idx, v\u1edbi key l\u00e0 c\u00e1c _w, c\u00f2n payload l\u00e0 idx,\n# v\u00ec v\u1eady, X l\u00e0 m\u1ea3ng c\u00e1c group [m\u1ea3ng \u0111\u01b0\u1ee3c groupby Sentence #] ch\u1ee9a c\u00e1c index c\u00e1c t\u1eeb, d\u1ef1a theo enum word2idx\nX = [[word2idx[w[0]] for w in s] for s in sentences]\n\n# print(X)","b7e4b449":"# pad_sequences \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng t\u1ea5t c\u1ea3 c\u00e1c chu\u1ed7i trong danh s\u00e1ch c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i. \n# Theo m\u1eb7c \u0111\u1ecbnh, \u0111i\u1ec1u n\u00e0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch \u0111\u1ec7m 0 v\u00e0o \u0111\u1ea7u m\u1ed7i chu\u1ed7i cho \u0111\u1ebfn khi m\u1ed7i chu\u1ed7i c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i v\u1edbi chu\u1ed7i d\u00e0i nh\u1ea5t.\n\n# maxlen: \u0111\u1ed9 d\u00e0i t\u1ed1i \u0111a c\u1ee7a c\u00e1c ph\u1ea7n t\u1eed trong m\u1ea3ng. \u1ede \u0111\u00e2y, c\u00e1c sentence [m\u1ea3ng c\u00e1c index] trong sentences ph\u1ea3i c\u00f3 c\u00f9ng \u0111\u1ed9 d\u00e0i l\u00e0 max_len\n# sequences: m\u1ea3ng d\u1eef li\u1ec7u\n# value: k\u00fd t\u1ef1 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 th\u00eam v\u00e0o c\u00e1c m\u1ea3ng b\u00ean trong sao cho \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111\u1ed9 d\u00e0i maxlen. \u1ede \u0111\u00e2y, c\u00e1c sentence \u0111\u01b0\u1ee3c th\u00eam word2idx[\"PAD\"] [=0]\n# padding = \"post\" => th\u00eam c\u00e1c value tr\u00ean v\u00e0o cu\u1ed1i m\u1ea3ng\nX = pad_sequences(maxlen = max_len, sequences = X, padding = \"post\", value = word2idx[\"PAD\"])\n\n# print(X)","959cdfa1":"# T\u01b0\u01a1ng t\u1ef1 nh\u01b0 X \u1edf tr\u00ean\n# w[2] t\u01b0\u01a1ng \u1ee9ng v\u1edbi _t trong (_w, _p, _t)\nY = [[tag2idx[w[2]] for w in s] for s in sentences]\n\n# print(Y)","4313ea34":"# T\u01b0\u01a1ng t\u1ef1 nh\u01b0 X \u1edf tr\u00ean\nY = pad_sequences(maxlen = max_len, sequences = Y, padding = \"post\", value = tag2idx[\"PAD\"])\n\n# print(Y)","ea4749ae":"# S\u1ed1 l\u01b0\u1ee3ng c\u00e1c tag (\u0111\u00e3 lo\u1ea1i b\u1ecf c\u00e1c tag tr\u00f9ng l\u1eb7p)\nnum_tag = df['Tag'].nunique()\n\n# to_categorical \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 chuy\u1ec3n \u0111\u1ed5i m\u1ed9t vect\u01a1 l\u1edbp (s\u1ed1 nguy\u00ean) th\u00e0nh ma tr\u1eadn l\u1edbp nh\u1ecb ph\u00e2n.\n# Hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 chuy\u1ec3n \u0111\u1ed5i c\u00e1c index c\u1ee7a tag sang nh\u1ecb ph\u00e2n\nY = [to_categorical(i, num_classes = num_tag + 1) for i in Y]\n\n# print(num_tag)\n# print(Y)","2d50cb74":"# train_test_split() \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 chia t\u1eadp d\u1eef li\u1ec7u X, Y th\u00e0nh 4 t\u1eadp d\u1eef li\u1ec7u train v\u00e0 test t\u01b0\u01a1ng \u1ee9ng\n# test_size c\u00f3 ngh\u0129a l\u00e0 % s\u1ed1 ph\u1ea7n t\u1eed trong t\u1eadp \u0111\u1ea7u v\u00e0o, \u0111\u01b0\u1ee3c chuy\u1ec3n v\u00e0o t\u1eadp train\n# V\u00ed d\u1ee5, \u1edf \u0111\u00e2y, test_size = 0.15 c\u00f3 ngh\u0129a l\u00e0 t\u1eadp test s\u1ebd ch\u1ee9a 15% ph\u1ea7n t\u1eed c\u1ee7a t\u1eadp \u0111\u1ea7u v\u00e0o, c\u00f2n l\u1ea1i l\u00e0 85% thu\u1ed9c v\u1ec1 t\u1eadp train\n\n# X_train \u1edf \u0111\u00e2y bao g\u1ed3m 85% ph\u1ea7n t\u1eed c\u1ee7a t\u1eadp X\n# X_test \u1edf \u0111\u00e2y bao g\u1ed3m 15% ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i c\u1ee7a t\u1eadp X\n# Y_train t\u01b0\u01a1ng t\u1ef1 nh\u01b0 X_train\n# Y_test t\u01b0\u01a1ng t\u1ef1 nh\u01b0 X_test\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.15)\n\n# print(X_train)\n# print(X_test)\n# print(Y_train)\n# print(Y_test)","664e15fe":"# Chia train, test\n[https:\/\/v1study.com\/python-tham-khao-tach-tap-du-lieu-cua-ban-voi-train_test_split-cua-scikit-learning.html](http:\/\/)","fa252143":"# Kh\u1edfi t\u1ea1o","f8dfcd40":"# Chuy\u1ec3n Y v\u1ec1 d\u1ea1ng one-hot\n[https:\/\/machinelearningcoban.com\/tabml_book\/ch_data_processing\/onehot.html](http:\/\/)","2048d428":"# T\u1ea1o dict word to index, th\u00eam 2 t\u1eeb \u0111\u1eb7c bi\u1ec7t l\u00e0 Unknown v\u00e0 Padding","c5bce633":"# Ch\u00fa \u00fd v\u1ec1 UNK (unknown) v\u00e0 PAD (padding):\n* Th\u00eam t\u1eeb Unknown \u0111\u1ec3 deal v\u1edbi c\u00e1c t\u1eeb kh\u00f4ng c\u00f3 trong vocab khi predict, n\u1ebfu nh\u01b0 g\u1eb7p c\u00e1c t\u1eeb kh\u00f4ng bi\u1ebft th\u00ec quy h\u1ebft v\u1ec1 t\u1eeb Unknow n\u00e0y.\n* Th\u00eam t\u1eeb Padding, ch\u00ednh l\u00e0 t\u1eeb ta s\u1ebd s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ec1n th\u00eam v\u00e0o cu\u1ed1i c\u00e1c c\u00e2u ng\u1eafn h\u01a1n 1 length c\u1ed1 \u0111\u1ecbnh do ch\u00fang ta quy \u0111\u1ecbnh. Ch\u1eafc b\u1ea1n v\u1eabn th\u1eafc m\u1eafc sao l\u1ea1i ph\u1ea3i l\u00e0m th\u1ebf? \u0110\u01a1n gi\u1ea3n v\u00ec khi feed v\u00e0o v\u00e0o c\u00e1c model ta lu\u00f4n c\u1ea7n length c\u1ed1 \u0111\u1ecbnh trong khi c\u00e1c c\u00e2u th\u00ec c\u00e2u d\u00e0i c\u00e2u ng\u1eafn kh\u00e1c nhau -> c\u1ea7n ph\u1ea3i padding cho \u0111\u1ec1u nhau m\u1edbi \u0111\u01b0a v\u00e0o m\u1ea1ng \u0111\u01b0\u1ee3c. Ta hay ch\u1ecdn \u0111\u1ed9 d\u00e0i c\u00e2u d\u00e0i nh\u1ea5t \u0111\u1ec3 padding c\u00e1c c\u00e2u ng\u1eafn h\u01a1n v\u1ec1 \u0111\u1ed9 d\u00e0i \u0111\u00f3.","1fbac38b":"# Chuy\u1ec3n c\u00e1c c\u00e2u v\u1ec1 d\u1ea1ng vector of index","638aed28":"# Nh\u00f3m c\u00e1c tuple theo c\u1ed9t (Sentence #) trong b\u1ea3ng csv","feae4fdf":"# L\u1ea5y d\u1eef li\u1ec7u t\u1eeb file csv","9dbb994f":"# T\u1ea1o 2 dict index to word v\u00e0 index to tag","0fc76167":"# T\u1ea1o dict tag to index, th\u00eam 1 tag \u0111\u1eb7c bi\u1ec7t v\u00e0 Padding","8ff80735":"# X\u00e2y d\u1ef1ng vocab cho word v\u00e0 tag","dd36ff39":"# T\u1ea1o danh s\u00e1ch c\u00e1c tuple (word, pos, tag)","88932bee":"# Ti\u1ec1n h\u00e0nh padding v\u1ec1 max_len","07c494d5":"# Padding c\u00e1c c\u00e2u v\u1ec1 max_len\n[https:\/\/helpex.vn\/question\/keras.io.preprocessing.sequence.padsequences-lam-gi-60ce752cf137b0e523f92438](http:\/\/)","f923c493":"# Chuy\u1ec3n c\u00e1c tag v\u1ec1 d\u1ea1ng index","948bd986":"# Chuy\u1ec3n c\u00e1c nh\u00f3m n\u00e0y th\u00e0nh 1 m\u1ea3ng ch\u1ee9a c\u00e1c m\u1ea3ng b\u00ean trong t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed7i nh\u00f3m (Sentence #)"}}