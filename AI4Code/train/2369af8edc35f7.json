{"cell_type":{"e01aacce":"code","885d7af0":"code","add84494":"code","f4e169bd":"code","ffee9362":"code","9248e2aa":"code","bcef5d8f":"code","de951c42":"code","df15f279":"code","cc74eeca":"code","19801d18":"code","6f1026b6":"markdown","c099b968":"markdown","7576ae1b":"markdown","0f7bd6bc":"markdown"},"source":{"e01aacce":"#  Firstly Import the mendatory packages like,\n# pandas, numpy, seaborn.\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra | numerical array and some statastics\n\n# Feature models\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n","885d7af0":"#  Generate new data frame from news.csv\n\ndf = pd.read_csv('..\/input\/news-data-set-fake-news-with-python\/news_datasets.csv') # delimiter=','\n\n# Show first five News (rows) from loaded data.\ndf.head(5)","add84494":"# To know what's the shape of our dataframe.\ndf.shape","f4e169bd":"# Select all labels ( FAKE | REAL )\nlabels = df['label']\n\n# print first five labels.\nlabels.head()","ffee9362":"\n# Split the Trainng and Testing data set\nx_train, x_test, y_train, y_test = train_test_split( df.text , labels, test_size=0.30, random_state=42)\n","9248e2aa":" # Apply TfidfVectorizer \n    \ntfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)","bcef5d8f":"# fitting and transformming  test set\n\ntfidf_train = tfidf_vectorizer.fit_transform(x_train) \ntfidf_test = tfidf_vectorizer.transform(x_test)\n","de951c42":"# setup  a PassiveAggressiveClassifier\n\npac = PassiveAggressiveClassifier( max_iter = 50)\npac.fit(tfidf_train, y_train)\n","df15f279":"# Check Predict on the test set and calculate accuracy value\n\ny_pred = pac.predict(tfidf_test)\nscore = accuracy_score(y_test,y_pred)\nprint( 'Model Accuracy :', round(score*100,2) )","cc74eeca":"# Build the confusion matrics here\n\nconfusion_matrix(y_test, y_pred, labels=labels.unique())\n","19801d18":"print(\"*\"*50, \"\")\nprint(\" That's all, Thank you I hope you like it and you learn somet nahing from this notebook\")\nprint(\"*\"*50)","6f1026b6":"**Load the Dataset**","c099b968":"# To Pridict Whether the News was Fake or it's Real Using Python.\n","7576ae1b":"# To check our model's accuracy.","0f7bd6bc":"# We got 913 +'ve, 865 -'ve, 68 +'ve, and 55 -'ve News. "}}