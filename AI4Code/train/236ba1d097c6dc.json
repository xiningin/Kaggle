{"cell_type":{"aee51c34":"code","a3402202":"code","00553e21":"code","53b6ffd6":"code","f5883766":"code","12aab0c3":"code","aaef57e3":"code","73966573":"code","e44c406c":"code","c245bf6a":"code","d42720fb":"code","4e7d6d08":"code","01f500e5":"code","a049e4b5":"code","eb4f7cb6":"code","c3e78818":"code","10b4a484":"code","dedae9d7":"code","53ac7a70":"code","5b551d3e":"code","aeda5854":"code","6ce39f50":"code","0bbd756f":"code","142e6f73":"code","ac25d014":"code","439f83f3":"code","72e4747f":"code","f2b7ed63":"code","b43b610c":"code","1acd20f4":"code","7547b812":"code","47fe7157":"code","09df5948":"code","fb7df0f3":"code","7da1b622":"code","be430120":"code","e4500297":"code","1ec2ecae":"code","d08dc4fb":"code","f7df1a42":"code","f189cbe0":"markdown","4a26fa2d":"markdown","06f8bd33":"markdown","2bd11708":"markdown","1e2c8888":"markdown","6f2a6323":"markdown","3c3d7197":"markdown","4ee9270d":"markdown","e87826bb":"markdown","e5a79547":"markdown","7bb14f47":"markdown","281bd705":"markdown","e1508119":"markdown","138eead4":"markdown","7acf3019":"markdown"},"source":{"aee51c34":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","a3402202":"data=pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","00553e21":"data.head()","53b6ffd6":"data.info()","f5883766":"data.drop(columns=['Unnamed: 32','id'],inplace=True)","12aab0c3":"import seaborn as sns\nfig,axes=plt.subplots(figsize=(20,10))\nsns.heatmap(data.corr(),annot=True,ax=axes)","aaef57e3":"corrmat=data.corr()","73966573":"l=list()\nfor i in range(30):\n    for j in range(i):\n        if corrmat.iloc[i,j]>0.90:\n            l.append(i)","e44c406c":"l=set([i+1 for i in l]) #to accomodate for diagonosis","c245bf6a":"def get_cols(x):\n    cols=[]\n    for i in l:\n        cols.append(x[i])\n    return cols","d42720fb":"corr_feat=get_cols(data.columns)","4e7d6d08":"corr_feat","01f500e5":"dataDrop=data.drop(columns=corr_feat)","a049e4b5":"for i in dataDrop.columns:\n    sns.catplot(y=i,x=\"diagnosis\",data=dataDrop)","eb4f7cb6":"fig,axes=plt.subplots(figsize=(20,10))\nsns.boxplot(data=dataDrop.iloc[:,3:7],ax=axes)","c3e78818":"sns.boxplot(data=dataDrop.iloc[:,[1,2]])","10b4a484":"sns.boxplot(data=dataDrop.iloc[:,10:15])","dedae9d7":"sns.pairplot(dataDrop.iloc[:,1:],corner=True)","53ac7a70":"def removeOutlier(data):\n    Q1 = data.quantile(0.25)\n    Q3 = data.quantile(0.75)\n    IQR = Q3 - Q1\n    UQR=Q3+1.5*IQR\n    LQR=Q1-1.5*IQR\n    j=0\n    for i in data.columns:\n        data.loc[data[i]>UQR[j],i]=UQR[j]\n        data.loc[data[i]<LQR[j],i]=LQR[j]\n        j=j+1\n    return data","5b551d3e":"dataNew=removeOutlier(dataDrop.iloc[:,1:])","aeda5854":"target=data.iloc[:,0]\nfeatures=dataNew","6ce39f50":"#scaling the data\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler\nfeatMinMax=MinMaxScaler().fit_transform(features)\nfeatStd=StandardScaler().fit_transform(features)","0bbd756f":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(featMinMax,target,test_size=0.3,stratify=target)","142e6f73":"from sklearn.neighbors import KNeighborsClassifier\nneigh = KNeighborsClassifier(n_neighbors=3)","ac25d014":"neigh.fit(X_train, y_train)","439f83f3":"neigh.score(X_train,y_train)","72e4747f":"neigh.score(X_test,y_test)","f2b7ed63":"from sklearn.metrics import confusion_matrix as cm\ncm(y_test,neigh.predict(X_test))","b43b610c":"from sklearn.naive_bayes import GaussianNB as GNB\ngnb=GNB()","1acd20f4":"gnb.fit(X_train,y_train)","7547b812":"gnb.score(X_train,y_train)","47fe7157":"gnb.score(X_test,y_test)","09df5948":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()","fb7df0f3":"lr.fit(X_train,y_train)","7da1b622":"lr.score(X_train,y_train)","be430120":"lr.score(X_test,y_test)","e4500297":"from sklearn import svm\nclf = svm.SVC()","1ec2ecae":"clf.fit(X_train,y_train)","d08dc4fb":"clf.score(X_train,y_train)","f7df1a42":"clf.score(X_test,y_test)","f189cbe0":"removing features having correlation greater than 90%","4a26fa2d":"# Support Vector Machine","06f8bd33":"A function to get name of columns from a given list of indexes","2bd11708":"accuracy of 93.47% on train data 97.07% on test data","1e2c8888":"Check for Outliers ","6f2a6323":"removing last column as it contains nan values and id as it is irrelevent","3c3d7197":"presence of outlier detected so we will remove outliers","4ee9270d":"accuracy of 90.95% on train data 88.88% on test data","e87826bb":"# KNN","e5a79547":"set is used as there may be repeated values in list l","7bb14f47":"# Logistic Regression","281bd705":"accuracy of 98.49% on train data 97.08% on test data","e1508119":"# Training various models","138eead4":"# Naive Bayes","7acf3019":"accuracy of 96.98% on train data 94.15% on test data"}}