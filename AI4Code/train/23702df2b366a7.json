{"cell_type":{"c70d6dec":"code","fc595067":"code","2b1b143e":"code","ef6d99a6":"code","e7475d6f":"code","99f7ea7b":"code","d2a6d1c8":"code","4eb4da8a":"code","10681f95":"code","4cb726e1":"code","3246dba9":"code","6e54f439":"code","3c81de4e":"code","ad8675b1":"markdown","ce5a0072":"markdown","2323c2da":"markdown","29e271d7":"markdown","60b7543f":"markdown","a6a1d95e":"markdown","ae13f5ef":"markdown","353165c9":"markdown","52fdf69e":"markdown","f89e39a7":"markdown","279df207":"markdown","69652496":"markdown","0a91c04c":"markdown","12f33b2f":"markdown","13954e70":"markdown","1e960a90":"markdown","272dd54f":"markdown","f5b9e1ca":"markdown","dba32315":"markdown","870de287":"markdown","ad609d8a":"markdown"},"source":{"c70d6dec":"import sys\n#zainstalowanie pytrends dla tego notebooka\n!{sys.executable} -m pip install pytrends \n\nfrom pytrends.request import TrendReq\npytrends = TrendReq(hl = 'PL')","fc595067":"kw_list = [\"Koronawirus\", \"Wybory\"]","2b1b143e":"kw_list = [\"\/m\/02bft\"] # kod dla tematu \"Zaburzenia depresyjne\"","ef6d99a6":"cat = 16 # Kategoria: Wiadomo\u015bci","e7475d6f":"geo = 'PL'","99f7ea7b":"last_4_hours = \"now 4-H\"\nlast_day = \"now 1-d\"\nlast_3_months = \"today 3-m\"\nlast_5_years = 'today 5-y'\nspecific_date = \"2020-03-14 2020-03-25\"\nspecific_date_with_hours = \"2020-04-06T01 2017-04-12T22\"\nfull_timeframe = \"all\"","d2a6d1c8":"gprop = 'news'","4eb4da8a":"pytrends.build_payload(kw_list, cat=cat, timeframe=last_5_years, geo=geo)","10681f95":"pytrends.interest_over_time()","4cb726e1":"pytrends.get_historical_interest(kw_list, year_start=2020, month_start=4, day_start=1, hour_start=0, year_end=2020, month_end=5, day_end=1, hour_end=0, cat=0, geo='PL', gprop='', sleep=0)","3246dba9":"pytrends.interest_by_region(inc_low_vol=True, inc_geo_code=True)","6e54f439":"pytrends.trending_searches(pn='poland') ","3c81de4e":"date = 2019\npytrends.top_charts(date, geo='PL')","ad8675b1":"### gprop \nOkre\u015bla dla kt\u00f3rej wyszukiwarki chcemy otrzyma\u0107 dane. Podobnie jak w serwisie, dost\u0119pne opcje to: \n- **images** (Wyszukiwarka grafiki)\n- **news** (Wyszukiwarka wiadomo\u015bci) \n- **youtube** (Wyszkiwarka w Youtube) \n- **froogle** (Zakupy Google)\n\nDomy\u015blne ustawienie to \"Wyszukiwarka Google\".\n","ce5a0072":"### timeframe\nPrzedzia\u0142 czasu dla kt\u00f3rego pozyskujemy dane. \n\nDomy\u015blny format parametru dla \"Ostatni rok\" itp. to **'today y-x'** (dla godzin i dni **now** zamiast today!), gdzie:\n- x to skr\u00f3t jednostki czasu (rok\/miesi\u0105c\/dzie\u0144\/godzina)\n- y to o ile tych jednostek wstecz chcemy pobra\u0107 dane (dost\u0119pne jednostki: 1,5 dla lat; 1,3 dla miesi\u0119cy; 1,7 dla dni; 1,4 dla godzin)\n\nMo\u017cemy poda\u0107 konkretne daty w formacie **'YYYY-MM-DD YYYY-MM-DD'** lub **'YYYY-MM-DDTHH YYYY-MM-DDTHH'**, gdzie podana godzina powinna by\u0107 czasem UTC.\n\nDla pe\u0142nego zakresu (od 2004 do dzi\u015b) piszemy **\"all\"**.\n\nPrzyk\u0142ady:","2323c2da":"### cat\nParametr ten okre\u015bla kategori\u0119, dla kt\u00f3rej pobieramy dane. Przyk\u0142adowe kategorie do wyboru to: Sztuka, Zdrowie, Wiadomo\u015bci, Sport. Domy\u015blna kategoria to \"Wszystko\". \n\nAby u\u017cy\u0107 tego parametru musimy poda\u0107 warto\u015b\u0107 przypisan\u0105 do danej kategorii.  Mo\u017cemy j\u0105 znale\u017a\u0107 manualnie wybieraj\u0105c kategori\u0119 z serwisu Google Trends. W URL pojawi si\u0119 cat=x gdzie x to poszukiwana warto\u015b\u0107 kategorii, np.:\n\nhttps:\/\/www.google.com\/trends\/explore#q=pizza&cat=71 (kategoria 71, czyli \"\u017bywno\u015b\u0107 i napoje\").","29e271d7":"Google Trends czasami wykonuje przewidywanie dla ostatnie okresu czasu na podstawie niepe\u0142nych danych.\nAtrybut **isPartial** informuje czy warto\u015b\u0107 danego rekordu jest dla obliczona na podstawie niepe\u0142nych danych.\n![obraz.png](attachment:obraz.png)","60b7543f":"### kw_list\nLista s\u0142\u00f3w kluczy (keyword list) dla kt\u00f3rych chcemy otrzyma\u0107 dane. Limit to 5 s\u0142\u00f3w, podobnie jak w serwisie Google Trends. ","a6a1d95e":"### get_historical_interest()\nFunkcja ta wysy\u0142a wiele zapyta\u0144 do Google dla okresu 1 tygodnia. Nastepnie \"zlepia\" wyniki, dzi\u0119ki czemu otrzymujemy dane s\u0105 z dok\u0142adno\u015bci\u0105 do godzin, niezale\u017cnie od wybranego przedzia\u0142u czasu (Google Trends domy\u015blnie podaje wyniki z dok\u0142adno\u015bci\u0105 zale\u017cn\u0105 od wybranego przedzia\u0142u, zwykle nie wi\u0119cej ni\u017c 250 rekord\u00f3w).\n\nFunkcja ta wymaga tych samych parametr\u00f3w co build_payload() - kw_list, cat, geo, gprop. Zakres czasu podajemy w inny spos\u00f3b - mamy nowe parametry:\n- **year_start, month_start, day_start, hour_start**\n- **year_end, month_end, day_end, hour_end**\n\nJe\u017celi Google ogranicza szybko\u015b\u0107 wysy\u0142anych przez nas \u017c\u0105da\u0144, mo\u017cemy u\u017cy\u0107 parametru **sleep**, kt\u00f3ry sztucznie op\u00f3\u017ania ka\u017cde \u017c\u0105danie.\n\nPrzyk\u0142adowe wywo\u0142anie funckji dla okresu jednego miesi\u0105ca:","ae13f5ef":"## Wnioski\nAPI **pytrends** pozwala na korzystanie z Google Trends w niemal\u017ce pe\u0142nym zakresie. Tworzenie zapyta\u0144 jest stosunkowo proste. pytrends oferuje r\u00f3wnie\u017c przydatne dodatkowe funkcjonalno\u015bci, niedost\u0119pne w serwisie - opcj\u0119 nieuwzgl\u0119dniania niepe\u0142nych danych lub pobranie danych z pr\u00f3bkowaniem co godzin\u0119, niezale\u017cnie od zakresu czasu. \n\nNiestety pytrends posiada te\u017c wiele wad. Niekt\u00f3re parametry wymagaj\u0105 r\u0119cznego sprawdzenia w serwsie, np.: kod regionu lub warto\u015b\u0107 przypisana kategorii. Format parametr\u00f3w nie jest jednolity dla ca\u0142ego API, np.: parametr geo przyjmuje kod regionu, za\u015b pn pe\u0142n\u0105 nazw\u0119 pa\u0144stwa. Kilka funkcjonalno\u015bci API opisanych w dokumentacji w praktyce nie dzia\u0142a, np.: funkcja top_charts() zwraca b\u0142\u0105d przy wyszukiwaniu dla miesi\u0119cy. \n\nPodsumowuj\u0105c, pytrends ma swoje wady, aczkolwiek jest najlepszym dost\u0119pnym narz\u0119dziem do pobierania danych z Google Trends w celu ich analizy.","353165c9":"Mo\u017cemy te\u017c zamiast konkretnych hase\u0142 wyszukiwa\u0107 tematy. Tematy w Google Tredns to zbiory s\u0142\u00f3w dotycz\u0105ce danego tematu. Przyk\u0142adowo, je\u017celi wybierzemy temat Londyn, zwr\u00f3cone dane b\u0119d\u0105 sum\u0105 wyszukiwa\u0144 hase\u0142 zwi\u0105zancyh z Londynem, jak na przyk\u0142ad \"capital of england\" albo s\u0142owa Londyn w r\u00f3\u017cnych j\u0119zykach.\n\nAby otrzyma\u0107 dane dla tematu, musimy wprowadzi\u0107 kod tematu zamiast has\u0142a w parametrze kw_list. Kod ten mo\u017cemy pobra\u0107 z URL po wprowadzeniu tematu r\u0119cznie w serwisie Google Trends.\n\nW URL kod jest dostepny pod warto\u015bci\u0105 q (*q=%2Fm%2F...*). Z kodu musimy usun\u0105\u0107 prefix *%2Fm%2F* i zast\u0105pi\u0107 go *\/m\/*. Przyk\u0142adowo:\n1. Patrzymy na URL dla tematu \"Zaburzenia dperesyjne\": https:\/\/trends.google.com\/trends\/explore?date=today%205-y&geo=PL&q=%2Fm%2F02bft.\n2. Poberamy kod tematu: *%2Fm%2F02bft*\n3. Zamieniamy go na: *\/m\/02bft*","52fdf69e":"Pytrends oferuje r\u00f3wnie\u017c funkcje pozwalaj\u0105ce pobra\u0107 sugestie Google Trends dotycz\u0105ce zapyta\u0144, jednak nie b\u0119d\u0105 one tutaj omawiane.","f89e39a7":"## Pobieranie danych","279df207":"Zapytanie tworzymy przy pomocy **funkcji build_payload**, kt\u00f3rej parametry u\u017cycia s\u0105 om\u00f3wione poni\u017cej:","69652496":"## Tworzenie zapyta\u0144 do GT \n\nNajpierw musimy po\u0142\u0105czy\u0107 si\u0119 z Googlem, aby m\u00f3c pobiera\u0107 dane z Google Trends. W tym celu potrzebna jest funkcja **TrendReq()**\nz biblioteki pytrends.request. \n\nParametr **hl** okre\u015bla j\u0119zyk hosta. Parametr ten jest o tyle wa\u017cne, \u017ce ustawia stref\u0119 czasow\u0105. Je\u017celi zatem chcemy, aby wyniki wy\u015bwietla\u0142y si\u0119 wzgl\u0119dem polskiego czasu, ustawiamy ten paramter na 'PL'.","0a91c04c":"### geo\nParametr okre\u015blaj\u0105cy dla jakiego obszaru pobieramy dane.\n\nNale\u017cy poda\u0107 dwuliterowy skr\u00f3t nazwy pa\u0144stwa (np.: Polska to 'PL'). Mo\u017cna te\u017c zaw\u0119zi\u0107 obszar do konkretnego regionu\/wojew\u00f3dztwa\/stanu, dodaj\u0105c dwuliterowy skr\u00f3t regionu po my\u015blniku (np.: Kujawsko-Pomorskie to 'PL-KP')\n\nSkr\u00f3t ten mo\u017cna znale\u017a\u0107, podobnie jak warto\u015bci kategorii, manualnie wybieraj\u0105c pa\u0144stwo\/region w Google Trends i znajduj\u0105c warto\u015b\u0107 w URL jako \"geo=x\", np.:\n\nhttps:\/\/trends.google.com\/trends\/explore?date=now%204-H&geo=PL-WP&q=a (skr\u00f3t 'PL-WP', czyli wojew\u00f3dztwo wielkopolskie).","12f33b2f":"### build_payload\nZnaj\u0105c ju\u017c wszystkie parametry tej funkcji, mo\u017cemy j\u0105 wywo\u0142a\u0107:","13954e70":"# Korzystanie z Google Trends przy pomocy pytrends","1e960a90":"### interest_by_region()\nFunkcja ta zbiera dane dla poszczeg\u00f3lnych podregion\u00f3w. \n\nPodobnie jak w serwisie Google Trends, mo\u017cemy wybra\u0107 rodzaj podregionu dla kt\u00f3rego chcemy uzyska\u0107 dane(parametr **resolution**): \n- 'CITY', czyli miasto\n- 'COUNTRY', czyli kraj\n- 'DMA', czyli obszar miejski\n- 'REGION', czyli stan\/wojew\u00f3dztwo\n\nDla r\u00f3\u017cnych kraj\u00f3w dost\u0119pne b\u0119d\u0105 r\u00f3\u017cne podregiony. Je\u017celi nie podamy tego parametru, funkcja zwr\u00f3ci dane dla domy\u015blnego podregionu (np.: dla Polski b\u0119d\u0105 to wojew\u00f3dztwa)\n\nParametr **inc_low_vol** okre\u015bla czy chcemy uwzgl\u0119dni\u0107 regiony z ma\u0142\u0105 ilo\u015bci\u0105 danych.\n\nParametr **inc_geo_code** okre\u015bla czy chcemy w zwr\u00f3conej ramce danych dodatkowy parametr b\u0119d\u0105cy kodem lokazlizacji. Jest to dobry spos\u00f3b na zdobycie kod\u00f3w konkretnych region\u00f3w, kt\u00f3re s\u0105 potrzebne jako parametr geo w poprzednich funkcjach.","272dd54f":"Na koniec przedstawienie parametr\u00f3w funckji na tle GUI serwisu Google Trends.\n![obraz.png](attachment:obraz.png)","f5b9e1ca":"Teraz mo\u017cemy zacz\u0105\u0107 pobiera\u0107 r\u00f3\u017cne ramki danych utworzone na bazie naszego zapytania.","dba32315":" ### interest_over_time()\nFunkcja zwraca ramk\u0119 danych przedstawiaj\u0105ca popularno\u015b\u0107 danego wyszukiwania. W serwisie Google Trends dane te s\u0105 przedstawione jako wykres \"Zainteresowanie w uj\u0119ciu czasowym\".","870de287":"### top_charts()\nFunkcja zwraca 10 najpopularniejszych wyszukiwa\u0144 z danego roku dla danego pa\u0144stwa. dane pobrane s\u0105 z karty \"Rok w wyszukiwarce\" serwisu Google Trends.\n\nParametr **date** to rok i podajemy go jako integer (np.: date = 2016). Najwcze\u015bniejszy dost\u0119pny rok to 2001. Warto jednak zaznaczy\u0107, \u017ce wiele lat jest niedost\u0119pnych dla poszczeg\u00f3lnych pa\u0144stw. Przyk\u0142adowo, dla Polski dost\u0119pne s\u0105 tylko lata 2008-2019 bez roku 2010.\n\nParametr **geo** przyjmuje dwuliterowy kod pa\u0144stwa. Je\u017celi chcemy pobrac dane dla ca\u0142ego \u015bwiata u\u017cywamy  geo=**'GLOBAL'**.","ad609d8a":"### trending_searches()\nFunkcja zwraca \"Dzienne trendy wyszukiwania\" z serwisu Google Trends , czyli list\u0119 zapyta\u0144 kt\u00f3re odnotowa\u0142y znaczny wzrost ruchu w por\u00f3wnaniu do wszystkich wyszukiwa\u0144 z ostatnich 24 godzin.\n\nParametr **pn** okre\u015bla pa\u0144stwo dla kt\u00f3rego chcemy otrzyma\u0107 dane. Musimy poda\u0107 pe\u0142n\u0105 nazw\u0119 pa\u0144stwa po angielsku, z ma\u0142ej litery."}}