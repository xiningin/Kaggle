{"cell_type":{"c69b838f":"code","67863a34":"code","5dce8993":"code","7ef78786":"code","4e2cbc5c":"code","c1df6e0d":"code","545d6130":"code","6c508e98":"code","fcbc8223":"code","2095b8fb":"code","b605c235":"code","f6dc4d07":"code","0997c63a":"code","32c3268e":"code","976167ea":"code","98b8d6d0":"code","9d1dd3d1":"code","ccd9ea89":"code","a8163db5":"code","c0a28365":"code","6d4b4273":"code","08ceb60c":"code","c5289ddc":"code","55d8e606":"code","604e7a04":"code","29d954a2":"code","588dc472":"code","9a58b89f":"code","4d36db51":"code","c7274eaf":"code","c3281e97":"code","2697a763":"code","556625b1":"code","c7256c89":"code","14f76434":"code","cbd7e52e":"code","c20ed0e2":"code","03d9b1e1":"code","1324e8f2":"code","a80692a4":"code","2e8fa5a1":"code","2e57fbf9":"code","fa5da510":"code","045d7326":"code","1472d438":"code","0053fd73":"markdown","39e04d1a":"markdown","f971ecfb":"markdown","e56663c8":"markdown","57f7ad9c":"markdown","3ee6baa8":"markdown","7298a1be":"markdown","3ade80da":"markdown"},"source":{"c69b838f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# for plotting purposes\nfrom matplotlib import pyplot as plt\n#pip install seaborn \/ conda install seaborn\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","67863a34":"df = pd.read_csv('..\/input\/telecom_churn.csv')","5dce8993":"df.head()","7ef78786":"print(df.shape)","4e2cbc5c":"df['International plan'] = df['International plan'].map({'Yes': 1, 'No': 0})","c1df6e0d":"df['Voice mail plan'] = df['Voice mail plan'].map({'Yes': 1, 'No': 0})","545d6130":"df['Churn'] = df['Churn'].astype('int64');","6c508e98":"df.head()","fcbc8223":"#histograms\n#correcting figure size\n\nplt.rcParams['figure.figsize'] = (16,12)\ndf.drop(['State'], axis = 1).hist();","2095b8fb":"df.corr()  #correlation matrix","b605c235":"sns.heatmap(df.corr());","f6dc4d07":"# checking for feature names having 'charge'\n\n[feat_name for feat_name in df.columns\nif 'charge' in feat_name]","0997c63a":"# drop 'charge' from dataset\ndf.drop([feat_name for feat_name in df.columns\nif 'charge' in feat_name], axis=1)","32c3268e":"#checking shape of the modified dataset\ndf.drop([feat_name for feat_name in df.columns\nif 'charge' in feat_name], axis=1).shape","976167ea":"#checking initial dataset\n#the initial or actual dataset did not change\ndf.shape","98b8d6d0":"#if we want the dataset to be modified (inplace=True helps in acheiving this)\ndf.drop([feat_name for feat_name in df.columns\nif 'charge' in feat_name], axis=1, inplace=True)","9d1dd3d1":"#And the dataset got modified\ndf.shape","ccd9ea89":"# Features one at a time\n# Numeric features\n\ndf['Total day minutes'].describe()","a8163db5":"plt.rcParams['figure.figsize'] = (8,6)\nsns.boxplot(x='Total day minutes', data=df);","c0a28365":"plt.rcParams['figure.figsize'] = (8,6)\ndf['Total day minutes'].hist();","6d4b4273":"df['State'].nunique()","08ceb60c":"df['State'].value_counts().head()","c5289ddc":"df['Churn'].value_counts()","55d8e606":"# use normalize to get the percentage values\ndf['Churn'].value_counts(normalize=True)","604e7a04":"sns.countplot(x='Churn', data=df);","29d954a2":"states = df['State']\ndf.drop('State', axis = 1, inplace = True)","588dc472":"# Correlation of 'Total day minutes' with other numerical values in the dataset\ndf.corrwith(df['Total day minutes'])","9a58b89f":"plt.scatter(df['Total day minutes'], df['Customer service calls']);","4d36db51":"pd.crosstab(df['Churn'], df['Customer service calls'])","c7274eaf":"sns.countplot(x = 'Customer service calls', hue = 'Churn', data = df);\nplt.title('Customer Service Calls for Loyal & Churned');","c3281e97":"from sklearn.manifold import TSNE","2697a763":"df.shape","556625b1":"#state = df['State']\n#df.drop('State', axis = 1, inplace = True)\ndf.head()","c7256c89":"tsne = TSNE(random_state=17)","14f76434":"%%time\nX_repr = tsne.fit_transform(df)","cbd7e52e":"X_repr.shape","c20ed0e2":"#whole dataset\nplt.rcParams['figure.figsize'] = (8,6)\nplt.scatter(X_repr[:, 0], X_repr[:, 1]);","03d9b1e1":"#Churned Customers\nplt.rcParams['figure.figsize'] = (8,6)\nplt.scatter(X_repr[df['Churn']==1, 0], \n            X_repr[df['Churn']==1, 1]);\n                   ","1324e8f2":"#Loyal Customers\nplt.rcParams['figure.figsize'] = (8,6)\nplt.scatter(X_repr[df['Churn']==0, 0], \n            X_repr[df['Churn']==0, 1]);","a80692a4":"#Overlapping plot\n\nplt.rcParams['figure.figsize'] = (10,8)\nplt.scatter(X_repr[df['Churn']==1, 0], \n            X_repr[df['Churn']==1, 1], alpha = 0.5, c='red', \n            label='Churn')\nplt.scatter(X_repr[df['Churn']==0, 0], \n            X_repr[df['Churn']==0, 1], alpha = 0.5, c='green', \n            label='Loyal');\nplt.xlabel('TSNE axis #1');\nplt.ylabel('TSNE axis #2');\nplt.legend();\nplt.title('TSNE representation');\nplt.savefig('churn_tsne.png', dpi=300)","2e8fa5a1":"#<img src = 'churn_tsne.png'>","2e57fbf9":"df.groupby('Churn')['Total day minutes',\n                   'Customer service calls'].mean()","fa5da510":"df.groupby('Churn')['Total day minutes',\n                   'Customer service calls'].agg(np.median)","045d7326":"df.groupby('Churn')['Total day minutes',\n                   'Customer service calls'].agg([np.median, np.std])","1472d438":"sns.boxplot(x='Churn', y = 'Total day minutes', data = df, hue = 'Churn');","0053fd73":"**Categorical - Numeric**","39e04d1a":"**Interaction between features**\n\n**Numeric-Numeric**\n(helpful in regression task where numeric is the target variable)","f971ecfb":"**Tutorial Practice**","e56663c8":"**SKlearn (Scikit Learn)**","57f7ad9c":"**Categorical - Categorical**","3ee6baa8":"**Whole Dataset Visualizations**","7298a1be":"<img src = 'churn_tsne.png'>","3ade80da":"**Categorical**"}}