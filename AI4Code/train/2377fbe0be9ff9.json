{"cell_type":{"2520da0a":"code","a137640e":"code","3b0d1ac7":"code","48215841":"code","32d6f9fb":"code","becc8fc3":"code","630fbcb7":"code","87afa48c":"code","3291a927":"markdown","472fc198":"markdown","aa4f041b":"markdown","3e81611b":"markdown","0f83a9be":"markdown","f46314f1":"markdown"},"source":{"2520da0a":"# Import important libraries in python \nimport pandas as pd\nimport numpy as np\n\n# import dataset and add columm names to the imporated dataset\ndf = pd.read_csv(\"..\/input\/covid19-symptoms-checker\/Cleaned-Data.csv\")\n\n# Show the the tope 5 obersrvation of the dataset\ndf.head(5)","a137640e":"# Show the the tope 5 obersrvation of the dataset\ndisplay(df.head(5))\n\n#Show data desccription\ndisplay(df.describe())\n\n#show data shape\ndisplay(df.shape)\n\n# show data type\ndisplay(df.dtypes)\n","3b0d1ac7":"# count the number of items for each attribute\n\nfor i in df.columns:\n    print('Attribute name:',i)\n    print('-------------------')\n    print(df[i].value_counts())\n    print('-------------------')\n ","48215841":"# sum of null data based on attributes. \ndf.isnull().sum()","32d6f9fb":"# Drop irrelevant attributes\nfor i in df.columns[11:]:\n  print(i)\n  df = df.drop(i, axis=1)\n\n# Create a new dataframe\nbasket = df.copy()\n\n# Show the the tope 5 obersrvation of the dataset\ndisplay(basket.head(5))","becc8fc3":"# Save the newly created dataset \n#df.to_csv('covid_dataset.csv', sep=',')","630fbcb7":"# Import important libraries in python \nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\n\n# Generate frequent item sets that have a support of at least 10%\nfrequent_itemsets = apriori(basket, min_support=0.1, use_colnames=True)\n\n# Generate the rules with their corresponding support, confidence and lift\nrules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\n\n# Show generated rules\nrules.head()","87afa48c":"# We can filter the dataframe using the below pandas code. In this case\n# In this caselook for a large lift (2) and high confidence (.8)\n# The rules while be sorted in based on lift\n\nrules[ (rules['lift'] >= 2) & (rules['confidence'] >= 0.8) ]. \\\nsort_values('lift', ascending=False)\n\n","3291a927":"# Feature selection","472fc198":"\n\n\n# Importing dataset\n","aa4f041b":"# Apriori algorithm","3e81611b":"# Dataset description","0f83a9be":"\n\n\n# Dataset cleaning","f46314f1":"Attributes related to covid-19 symptoms will be selected to create the association rules, therefore , other unrelated attributes will be dropped. "}}