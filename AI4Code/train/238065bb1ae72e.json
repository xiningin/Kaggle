{"cell_type":{"fc60b9f8":"code","47f21165":"code","00b1b666":"code","9ef9e88d":"code","04a50049":"code","d1d2d76a":"code","4a97a8c4":"code","9cc20055":"code","fe7e0392":"code","958f80a2":"code","6df289eb":"code","42a54ff9":"code","dc741132":"code","9643dcfc":"code","3bbd9ef3":"code","c8510607":"code","0b423946":"code","83e869b9":"code","97d6d5a1":"markdown","19672a07":"markdown","8c6f487e":"markdown","e8668b50":"markdown","43dfcc7f":"markdown"},"source":{"fc60b9f8":"#\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#\nfrom imblearn.over_sampling import SMOTE \nfrom imblearn.under_sampling import RandomUnderSampler\n#\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import  precision_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import RocCurveDisplay\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import plot_roc_curve,roc_auc_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\n\n#\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier","47f21165":"#---------- configs\npd.set_option('max_rows',100)\npd.set_option('max_columns',100)","00b1b666":"### loading data\ndf_train = pd.read_csv(r\"..\/input\/creditcardfraud\/creditcard.csv\")\ndf_train.info()","9ef9e88d":"sns.countplot(data = df_train,x='Class')\nplt.title('Fraud Or not Fraud')\nplt.show()","04a50049":"# class is heavily imbalanced\n# i will oversample using smote","d1d2d76a":"plt.figure(figsize=(20,20))\nsns.heatmap(df_train.corr(),annot=True,linewidths=1,cbar=False, cmap=\"mako\")","4a97a8c4":"train,test = train_test_split(df_train, test_size = 0.2,stratify=df_train['Class'], random_state=47)","9cc20055":"over_smote = SMOTE(sampling_strategy=1)  \nunder_smote = RandomUnderSampler(sampling_strategy=0.01,random_state=47) \n\n\nX_train = train.drop('Class',axis=1)\ny_train = train['Class']\n\n#\n\nX_train, y_train = under_smote.fit_resample(X_train,y_train)\nX_train, y_train = over_smote.fit_resample(X_train,y_train)\n\nX_test = test.drop('Class',axis=1)\ny_test = test['Class']\n\nprint(len(X_train))\ny_train.value_counts()","fe7e0392":"sns.countplot(x=y_train)\nplt.title('Fraud Or not Fraud (after sampling)')\nplt.show()","958f80a2":"model = RandomForestClassifier()\nmodel.fit(X_train,y_train)\npreds=model.predict(X_test)","6df289eb":"print(classification_report(y_test,preds))\naccuracy_score(y_test,preds)","42a54ff9":"model = XGBClassifier(use_label_encoder=False)\nmodel.fit(X_train,y_train)\npreds=model.predict(X_test)","dc741132":"print(classification_report(y_test,preds))\naccuracy_score(y_test,preds)","9643dcfc":"# in the above we were interested with high recall ratio (detecting all the fraudlants) and also the precision (not accusing the innocents)","3bbd9ef3":"# if the company or bank is conservative we can achieve high recall score but sacrifice the precision.","c8510607":"under_smote = RandomUnderSampler(sampling_strategy=1,random_state=47) \n\n\nX_train = train.drop('Class',axis=1)\ny_train = train['Class']\n\n#\nX_train, y_train = under_smote.fit_resample(X_train,y_train)\n\nX_test = test.drop('Class',axis=1)\ny_test = test['Class']\n\nprint(len(X_train))\ny_train.value_counts()\n","0b423946":"model.fit(X_train,y_train)\npreds=model.predict(X_test)","83e869b9":"print(classification_report(y_test,preds))\naccuracy_score(y_test,preds)","97d6d5a1":"# Conservative 90% Recall","19672a07":"---\n### Imports","8c6f487e":"---\n### Data Exploration ","e8668b50":"## XGB ","43dfcc7f":"## Random Forest"}}