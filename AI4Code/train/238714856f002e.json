{"cell_type":{"11e0692a":"code","628d7bd1":"code","832d00a4":"code","78654e38":"code","dfa3420a":"code","7c116584":"code","f6e27db5":"code","12aba579":"code","5acc3612":"code","99b1d9b5":"markdown","d9d5201d":"markdown","d0ceedb1":"markdown","20c41c85":"markdown","734b3eb4":"markdown","77475c34":"markdown","32055c83":"markdown","f8f6a135":"markdown","c27b327d":"markdown","1a25c124":"markdown","4088d39c":"markdown","23604fa2":"markdown","e5d99a5d":"markdown","69d4e582":"markdown","af05a65d":"markdown","1ae3808d":"markdown","a446b51d":"markdown"},"source":{"11e0692a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.manifold import TSNE\n\ntrain = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntrain = train.drop('id',axis=1)\ntrain.head()","628d7bd1":"target_count = pd.DataFrame(train['target'].value_counts()).reset_index()\ntarget_count = target_count.sort_values(by='index')\ntarget_count = target_count.reset_index(drop=True)\nfig = plt.figure(figsize=(20,13))\nsns.barplot(data = target_count, x= 'index', y='target')\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nfor i in range(len(target_count)):\n    value = target_count.loc[i,'target']\n    plt.text(s=f'{value}',x = i-0.2, y = value+500, fontsize=20)\nplt.ylabel('')\nplt.xlabel('')\nplt.show()","832d00a4":"import plotly.express as px\nfig = px.pie(target_count, names='index',values='target',hole = 0.8)\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.update_layout(\n    annotations=[dict(text=\"Target's percentage\", x=0.5, y=0.5, font_size=20, showarrow=False)])\nfig.update_layout(showlegend=False)","78654e38":"pca = PCA(n_components=2)\nX_train = pd.DataFrame(pca.fit_transform(train[train.columns[:-1]]))\nX_train = X_train.sample(100000)\nsns.jointplot(x = X_train[0], y= X_train[1],hue = train['target'],height = 15)\nplt.show()","dfa3420a":"sns.jointplot(x = X_train[0], y= X_train[1],hue = train['target'],height = 15,\n             xlim = (-15,50), ylim =(-60,50))\nplt.axis('off')\nplt.show()","7c116584":"pca = PCA(n_components=3)\ntrain_3d = pd.DataFrame(pca.fit_transform(train[train.columns[:-1]]))\ntrain_3d['target'] = train['target']\n\nfig = plt.figure(figsize=(20, 13))\nax = fig.add_subplot(111, projection='3d')\nfor target_class in train_3d['target'].unique():\n    x = train_3d[train_3d['target'] == target_class][0]\n    y = train_3d[train_3d['target'] == target_class][1]\n    z = train_3d[train_3d['target'] == target_class][2]\n    ax.scatter(x, y, z, s= 10, alpha=0.1)\nplt.title(\"3D scatter\")\nplt.show()","f6e27db5":"scaler = MinMaxScaler()\nscaler_data = scaler.fit_transform(train_3d[train_3d.columns[:-1]])\nscaler_data = pd.DataFrame(scaler_data)\nscaler_data['target'] = train['target']\n\nfig = plt.figure(figsize=(20, 13))\nax = fig.add_subplot(111, projection='3d')\nfor target_class in scaler_data['target'].unique():\n    data = scaler_data[scaler_data['target'] == target_class].sample(3000)\n    x = data[0]\n    y = data[1]\n    z = data[2]\n    ax.scatter(x, y, z, s= 10, alpha=0.3)\nplt.title(\"Balanced_3D scatter\")\nplt.show()","12aba579":"train_sample = train.sample(50000)\nx = train_sample[train_sample.columns[:-1]]\ntsne = TSNE(n_components=2)\ny = pd.DataFrame(tsne.fit_transform(x))\nsns.jointplot(x = y[0], y= y[1],hue = train_sample['target'],height = 15)\nplt.show()","5acc3612":"tsne = TSNE(n_components=3)\ntrain_3d = pd.DataFrame(tsne.fit_transform(x))\ntrain_3d['target'] = train_sample['target']\n\nfig = plt.figure(figsize=(20, 13))\nax = fig.add_subplot(111, projection='3d')\nfor target_class in train_3d['target'].unique():\n    x = train_3d[train_3d['target'] == target_class][0]\n    y = train_3d[train_3d['target'] == target_class][1]\n    z = train_3d[train_3d['target'] == target_class][2]\n    ax.scatter(x, y, z, s= 10, alpha=0.5)\nplt.title(\"3D scatter\")\nplt.show()","99b1d9b5":"![](https:\/\/media2.giphy.com\/media\/7SF5scGB2AFrgsXP63\/giphy.gif)","d9d5201d":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nHow about Visualization with 3D scatter plot?\n<\/h1>\n<\/div>","d0ceedb1":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nCheck the Target's rate\n<\/h1>\n<\/div>","20c41c85":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nVisualization with 2D scatter plot\n    - Using TSNE\n<\/h1>\n<\/div>","734b3eb4":"### I think, It's not good visualization too....","77475c34":"### It's more better than PCA","32055c83":"### If you check percentage about Target. You can feel that Class_8 and Class_6 is Half..","f8f6a135":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nVisualization with 3D scatter plot\n    - Using TSNE\n<\/h1>\n<\/div>","c27b327d":"## 1. Import Libraries and Load Data\n### This time, I will use only train data","1a25c124":"### It has So Many columns...\n\n![](https:\/\/media4.giphy.com\/media\/BEob5qwFkSJ7G\/giphy.gif)","4088d39c":"### Class_6 and Class_8 have more than 50000. But Class5 has only 3000...","23604fa2":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nTabular Playground Series - Jun 2021\n<\/h1>\n<\/div>\n\n![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/25226\/logos\/header.png?t=2021-01-27-17-34-31)\n\n## Data\nThe dataset is used for this competition is synthetic, but based on a real dataset and generated using a CTGAN. The original dataset deals with predicting the category on an eCommerce product given various attributes about the listing. Although the features are anonymized, they have properties relating to real-world features.\n\nThis competition dataset is similar to the Tabular Playground Series - May 2021 dataset, but with increased observations, increased features, and increased class labels.\n\n* Files\n* train.csv - the training data, one product (id) per row, with the associated features (feature_*) and class label (target)\n* test.csv - the test data; you must predict the probability the id belongs to each class\n* sample_submission.csv - a sample submission file in the correct format","e5d99a5d":"### It's almost green too...","69d4e582":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nVisualization with 2D scatter plot\n    - Using PCA\n<\/h1>\n<\/div>","af05a65d":"### I use only 50000 Data, Because it take so much time...","1ae3808d":"### I can't visualization with 2D...","a446b51d":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:skyblue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nTrying Visualization with these Data!\n    with PCA and TSNE\n<\/h1>\n<\/div>"}}