{"cell_type":{"6e0d7a29":"code","7cf2ab19":"code","865b39a6":"code","7cf28110":"code","7a9b65c6":"code","1f361fad":"code","689cd4cb":"code","c8c4a019":"code","334d4df6":"code","ecfa5ccf":"code","86ae637c":"code","50584f92":"code","8f3f0a91":"markdown","3ab684be":"markdown","084c91cd":"markdown","feaaeef1":"markdown","599aace0":"markdown","309f6f8a":"markdown","44108eab":"markdown","4601668a":"markdown","cd7ccfbb":"markdown","14cdbd74":"markdown","6c8169fa":"markdown","c3935a14":"markdown","44072875":"markdown","ba822507":"markdown","9cb352fc":"markdown","85b36587":"markdown"},"source":{"6e0d7a29":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","7cf2ab19":"df = pd.read_csv(\"..\/input\/50_Startups.csv\")\nX = df.iloc[:,:-1]\ny = df.iloc[:,4]","865b39a6":"df.head()","7cf28110":"#check if there is any null values or not using below command. If yes, then use Imputer class to handle missing values.\ndf.isnull().sum()","7a9b65c6":"#check for any categorical variable (if any)\n#Encoding categorical data in this case (independent variable)\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder_X = LabelEncoder()\nX.iloc[:,3] = labelencoder_X.fit_transform(X.iloc[:,3])","1f361fad":"#encoding the independent variables\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\n\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder='passthrough')\nX = ct.fit_transform(X)\nX = np.array(X)\nX","689cd4cb":"#Alert! Avoid the dummy variable trap by removing any one dummy variable\nX = X[:, 1:]","c8c4a019":"from sklearn.model_selection import train_test_split  #(for python2)\n#from sklearn.model_selection import train_test_split  (for python3)\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=0)","334d4df6":"#no feature scaling is reuqired as Multiple Linear Refression algorithm take care by itself","ecfa5ccf":"#fit data into the model\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train,y_train)","86ae637c":"y_pred = regressor.predict(X_test)","50584f92":"y_compare = pd.DataFrame(\n    {'Original Profit': y_test,\n     'Predicted Profit': y_pred,\n     'Residual Error' : y_test-y_pred\n    }).reset_index()\ny_compare","8f3f0a91":"We can infer from the above results that the model did preity well for the testing dataset with error rate ranging between 250-13500 for 77500-191000 range of values. Good work!","3ab684be":"## Data Preparation","084c91cd":"![image.png](attachment:image.png)","feaaeef1":"### Split dataset into training and testing dataset","599aace0":"### Follow me for more upcoming Machine Learning episode series. Upvote this kernel if you like it! Thank you! <br>\n\nPrevious episode 1 link: https:\/\/www.kaggle.com\/prtk13061992\/ml-series-episode-1-data-preprocessing <br>\nPrevious episode 2 link: https:\/\/www.kaggle.com\/prtk13061992\/ml-series-episode-2-linear-regression <br>","309f6f8a":"**Case study:** To predict the profit of a company based on various spends like R&D, Administration, Marketing, and the State in which the company operates. Build a model to check if there are some linear dependencies between all these variables. Use the Multiple Regression model, plus, handle any missing data as well as a categorical variable (if any).","44108eab":"### Encoding character based variables into numeric based","4601668a":"### Importing dataset","cd7ccfbb":"### Feature Engineering","14cdbd74":"## Multiple Linear Regression Model","6c8169fa":"### Missing value check","c3935a14":"### Importing libraries","44072875":"Citation: https:\/\/www.udemy.com\/, https:\/\/en.wikiversity.org\/","ba822507":"### Model Fitting","9cb352fc":"### Model Prediction","85b36587":"In statistics, **Multiple linear regression** (MLR) is a multivariate statistical technique for examining the linear correlations between two or more independent variables (IVs) and a single dependent variable (DV)."}}