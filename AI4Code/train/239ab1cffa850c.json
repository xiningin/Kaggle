{"cell_type":{"0f927884":"code","5d8c9841":"code","0b31c182":"code","d228ba36":"code","5bc7560a":"code","152216c0":"code","8606967f":"code","a56b8482":"code","433925a7":"code","9be7f06a":"code","2fe78c9e":"code","4e4b1da1":"code","09cc69d3":"code","f1290e40":"code","718fe444":"code","238e27ef":"code","d6633626":"code","161229df":"code","910f60b8":"code","1cbd8fac":"code","e4c1b8c8":"code","8df254a7":"code","aa7a711e":"code","6a9882de":"code","c62b5f18":"code","d13a9c4c":"code","9a46942a":"code","15922c1e":"code","d80ef6c8":"code","6d743f01":"code","a24f6ac6":"code","3e514b13":"code","73098dd5":"code","41b70994":"code","7984e865":"code","96d78d61":"code","c31c34d1":"code","dda832a0":"code","c8ce63d0":"code","227d64f3":"code","26ade9f1":"code","110bea8d":"code","92d016fe":"code","e60c06c9":"code","2e71943a":"code","64abb00d":"code","7e53ffdc":"code","ec8f85af":"code","1c4ec8a7":"code","27c8239b":"markdown","3b1ea842":"markdown","fbf28ea9":"markdown","e034f44d":"markdown","c23f2954":"markdown","8fe36ef1":"markdown","0fcbc8ef":"markdown","8aa59d33":"markdown","06681a48":"markdown","bf78f9b0":"markdown","d6e1eaff":"markdown","56b38818":"markdown","4511eb51":"markdown","9720e9da":"markdown","9bd6a268":"markdown","6f718b49":"markdown","d2d40047":"markdown","e1ad895b":"markdown","3436facb":"markdown","09a0d9ca":"markdown","7f3ea57d":"markdown","429b1d43":"markdown","25d4329f":"markdown","64786778":"markdown","99c47318":"markdown","bb83a467":"markdown"},"source":{"0f927884":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","5d8c9841":"df=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","0b31c182":"k=sorted(list(df.columns))\nk\n","d228ba36":"len(df.columns)","5bc7560a":"df1=df[[\"BsmtQual\",\"TotalBsmtSF\",\"1stFlrSF\",\"2ndFlrSF\",\"GrLivArea\",\"BedroomAbvGr\",\"KitchenAbvGr\",\"YearBuilt\",\"TotRmsAbvGrd\",\"GarageType\",\"GarageCars\",\"MiscFeature\",\"MiscVal\",\"SalePrice\"]]\ndf1","152216c0":"df1.shape[0]","8606967f":"df1[df1[\"MiscFeature\"].isna()].shape[0]","a56b8482":"df2=df1[df1[\"MiscFeature\"].isna()]\ndf2","433925a7":"df3=df2.drop([\"MiscFeature\",\"MiscVal\"],axis=\"columns\")","9be7f06a":"df3","2fe78c9e":"df3[df3.TotalBsmtSF==df3[\"1stFlrSF\"]]","4e4b1da1":"df3.SalePrice.describe()","09cc69d3":"df3[\"price_per_sqt\"]=df3.SalePrice\/df3.GrLivArea","f1290e40":"df3.price_per_sqt.describe()","718fe444":"def year_price(df):\n    plt.scatter(df.YearBuilt,df.price_per_sqt)\n    plt.xlabel(\"YearBuilt\")\n    plt.ylabel(\"Price_per_sqft\")\n    plt.legend()","238e27ef":"    plt.scatter(df3.TotalBsmtSF,df3.price_per_sqt)\n    plt.xlabel(\"Total basement area\")\n    plt.ylabel(\"Price_per_sqft\")\n    plt.rcParams[\"figure.figsize\"] = (15, 10)\n    plt.legend()","d6633626":"import numpy as np\ndef remove_out(df):\n    remove_data=pd.DataFrame()\n    for year,year_df in df.groupby(\"YearBuilt\"):\n        m=np.mean(year_df.price_per_sqt)\n        s=np.std(year_df.price_per_sqt)\n        out=year_df[(year_df.price_per_sqt>(m-s)) & (year_df.price_per_sqt<(m+s))]\n        remove_data=pd.concat([remove_data,out],ignore_index=True)\n    return remove_data\ndf4=remove_out(df3)\ndf4\n\n    \n    \n    \n    \n    ","161229df":"year_price(df4)","910f60b8":"year_price(df3)","1cbd8fac":"df4.fillna(\"unknown\",inplace=True)","e4c1b8c8":"\nplt.bar(df4.GarageType,df4.SalePrice)\nplt.ylabel(\"price\")\nplt.xlabel(\"GrarageType\")","8df254a7":"plt.bar(df4.BsmtQual,df4.SalePrice)\nplt.ylabel(\"price\")\nplt.xlabel(\"BsmtQual\")","aa7a711e":"df4[df4.BsmtQual.isna()].shape","6a9882de":"df4[df4.GarageType.isna()].shape","c62b5f18":"df4.columns","d13a9c4c":"df5=df4.drop([\"1stFlrSF\",\"2ndFlrSF\",\"KitchenAbvGr\",\"BedroomAbvGr\",\"KitchenAbvGr\",\"price_per_sqt\"],axis=\"columns\")","9a46942a":"df5.isna().sum()","15922c1e":"df5","d80ef6c8":"from sklearn.preprocessing import LabelEncoder\nla=LabelEncoder()\ndf5[\"BsmtQual\"]=la.fit_transform(df5.BsmtQual)","6d743f01":"df5","a24f6ac6":"le=LabelEncoder()\ndf5[\"GarageType\"]=le.fit_transform(df5.GarageType)","3e514b13":"df5","73098dd5":"from sklearn.model_selection import train_test_split\n","41b70994":"x=df5.drop(\"SalePrice\",axis=\"columns\")\nx","7984e865":"y=df5.SalePrice","96d78d61":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)","c31c34d1":"y_train","dda832a0":"from sklearn.linear_model import LinearRegression,Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n","c8ce63d0":"model=LinearRegression()\nmodel.fit(x_train,y_train)","227d64f3":"model.score(x_test,y_test)","26ade9f1":"from sklearn.model_selection import ShuffleSplit,cross_val_score\ncv=ShuffleSplit(n_splits=5,test_size=0.2,random_state=0)\ncross_val_score(LinearRegression(),x_train,y_train,cv=cv)","110bea8d":"from sklearn.model_selection import GridSearchCV\n\n","92d016fe":"models={\n    'linear_regeression':{\n        'model':LinearRegression(),\n        \"params\":{\n            \"normalize\":[True,False]\n        }\n    },\n    \"lasso\":{\n        \"model\":Lasso(),\n        \"params\":{\n            'alpha':[1,2],\n            'selection':[\"random\",'cyclic']\n        }\n    },\n    \"decision_tree\":{\n        'model':DecisionTreeRegressor(),\n        'params':{\n            'criterion':[\"mse\",\"friedman_mse\"],\n            'splitter':['best','random']\n        }\n    }\n}","e60c06c9":"def test_score(a,b):\n    scores=[]\n    cv=ShuffleSplit(n_splits=5,test_size=0.2,random_state=0)\n    for model_name,mode in models.items():\n        gs=GridSearchCV(mode[\"model\"],mode[\"params\"],cv=cv,return_train_score=False)\n        gs.fit(a,b)\n        scores.append({\n            'model':model_name,\n            'best_score':gs.best_score_,\n            'best_parms':gs.best_params_\n        })\n    return pd.DataFrame(scores)\ntest_score(x_train,y_train)\n","2e71943a":"modell=Lasso(alpha=2,selection=\"cyclic\")\nmodell.fit(x_train,y_train)","64abb00d":"filename = 'finalized_model.sav'\njoblib.dump(model, filename)\n\n","7e53ffdc":"modell.predict([[3,1470,3493,1880,10,1,3]])","ec8f85af":"df5[\"price_predict\"]=modell.predict(df5.drop(\"SalePrice\",axis=\"columns\"))","1c4ec8a7":"df5","27c8239b":"### And after we only keep the house those doesn't have  Miscellaneous feature so MiscFeature and MiscVal doesn't affect our data anymore then we can remove these columns","3b1ea842":"#### I am an absolute beginner to machine learning  and i think this notebook will be very simple that people who just start in machine learning can understand what i am doing ","fbf28ea9":"## As we see there are some outlier so we need to remove it to increase our model performance","e034f44d":"## Remove outlier","c23f2954":"#### after doing this i've seen some solumns that interesting\n##### 1.BsmtQual:it is the quality of the basement\n##### 2.TotalBsmt: Total square feet of basement area\n##### 3.1stFlrSF: First Floor square feet\n##### 4.2ndFlrSF: Second floor square feet\n##### 5.GrLivArea: Above grade (ground) living area square feet\n##### 6.GarageCars:Size of garage in car capacity\n##### 7 .KitchenAbvGr: Kitchens above grade\n##### 8.TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n##### 9.MiscFeature\t: Miscellaneous feature not covered in other categories\n\n","8fe36ef1":"#### it seem that year built and price has a positive relationship","0fcbc8ef":"To idetified we which are the columns that we should use to train our model i recommand you to look this NoteBook: https:\/\/www.kaggle.com\/pmarcelino\/comprehensive-data-exploration-with-python","8aa59d33":"## clean bad data","06681a48":"#### remove some columns that we are not going to use it anymore","bf78f9b0":"## import all the model that i am going to use","d6e1eaff":"# Visualization\n- it is very importance because as we are human picture get us to understand thing very qucikly \n- For me i think data visualization is like memes \n- \"if we need to explain our visualization that mean our visualization is not good enough\"","56b38818":"### Data Cleaning\n- Data cleaning refers to preparing the data for our model by removing or modify the data that not complete or irrelevant to our model\n- It help in increasing the accuracy of our model\n- Most of the time, almost 80% in modeling process is dedicate to data cleaning ","4511eb51":"# Building and Testing model","9720e9da":"#### so GarageType and BmstQuality have big impact to price so i'm not going to delete it","9bd6a268":"# House's Price Prediction","6f718b49":"### we need to do it more times to make suffle our data to test the score","d2d40047":"# Load Data from csv file to dataFrame","e1ad895b":"##### To make clear that those columns have a strong affect on the saleprice i am going to visualize those columns with sale price","3436facb":"### so i'm going to chose lasso as my model for prediction the home price","09a0d9ca":"### As we see there are a small amount of data that has Miscellaneous feature so we can consider it as outlier then remove them from our dataframe the increase our model performance","7f3ea57d":"#### i just start machine learning within this 2 week so i will apply all the cocept that i have learn that relate to regression model,data cleaning,feature engineering in this project.","429b1d43":"# Exploring data","25d4329f":"### Feature Engineering\n- it is the way we apply our domain knowledge or business knowledge about the data to remove outlier or erorr data.\nex: if we know that a room in a house is maximum 300 square feet but in the data is more than that so we will remove from the dataframe\n- it is also include in data cleaning","64786778":"## Test model using gridsearchcv","99c47318":"##### as we see there are 80 columns are indepandance variable and 1 dedpandance variable(SalePrice) in our DataFrame if we put all this columns into our model our model will not optimize because some of the columns may not determine the price so we need to remove it that will increase our model's performance","bb83a467":"# Data Cleaning and Feature Engineering"}}