{"cell_type":{"2a451124":"code","820b69fd":"code","b20dcf60":"code","28599eb5":"code","0dde60be":"code","03791c9f":"code","8d464f2d":"code","f0b19047":"code","8a7681ff":"code","3e5db6bd":"code","31fe5c68":"code","e1bcdf5c":"code","7a80ef7e":"code","abc74e0d":"code","486d0750":"code","a77df678":"code","688b9db6":"code","6c69459b":"code","8f139376":"code","282a91e4":"code","877bc749":"code","f6366ac5":"code","2689ed86":"code","209911f8":"code","15a7eebd":"code","d26be117":"code","12aac16e":"code","e0a209b1":"code","56956420":"code","676a9aaf":"code","e588b5e5":"code","8aefc452":"code","bb1e9f1b":"code","d79b85cb":"code","35416c88":"code","c7598051":"code","944f24dc":"code","b0b17137":"code","516bed9a":"code","445b7719":"code","d26f728b":"code","da908aba":"code","da596d8f":"code","3a2a4e95":"code","eeaa5b65":"code","d27f105e":"code","58cfc532":"code","6463968f":"code","e71c90a8":"code","cc9a8c9e":"code","a203f2f5":"code","99385db0":"code","af849077":"code","04aa7fcb":"code","fb083b06":"code","d08014d3":"code","a9327d34":"code","183cca3d":"code","4b2d360f":"code","113ad9de":"code","0b303e8e":"code","e34fb7f2":"code","2d9f93e3":"code","7520d526":"code","9a3a3f5f":"code","88400e46":"code","7561a893":"code","7ad5528c":"code","4d28ede1":"code","bd1d19df":"code","e2df10bb":"code","3c3437ee":"code","1333d038":"code","4625ad7b":"code","4076a80f":"code","be1be718":"code","e6b7ccf9":"code","898f4544":"code","8df37d0a":"code","5e4a2da9":"code","905c16be":"code","bad50994":"code","a54a35dd":"code","237195db":"code","2abca840":"code","ffcf5802":"code","857f3d33":"code","e6aed3ba":"code","5c8d3867":"code","db5c73e5":"code","6732c287":"code","8446a760":"code","6925be41":"code","649b6344":"markdown","9197e2a6":"markdown","0dbc8841":"markdown","527de8c4":"markdown","77c8ddca":"markdown","b39e8ba7":"markdown","d61e0789":"markdown","57fffef8":"markdown","83cf573d":"markdown","0ad6e8a9":"markdown","5346ecd1":"markdown","1573df50":"markdown","736e0001":"markdown","6f591e7b":"markdown","c26ad9f5":"markdown","f0538370":"markdown","2817a45d":"markdown","29123ccd":"markdown"},"source":{"2a451124":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","820b69fd":"data= pd.read_csv('kc_house_data.csv') \ndata.info()","b20dcf60":"data.head(5)","28599eb5":"sum(data.isnull().sum())","0dde60be":"data.head().shape","03791c9f":"data.isnull().sum()","8d464f2d":"numerical_columns=['price','bedrooms','bathrooms','sqft_living','sqft_lot','floors','waterfront','condition','grade','sqft_above','sqft_basement','yr_built','yr_renovated','zipcode','lat','long','sqft_living15','sqft_lot15']","f0b19047":"from sklearn.impute import SimpleImputer\nimputer=SimpleImputer(missing_values=np.nan,strategy='median')\ndata[numerical_columns]=imputer.fit_transform(data[numerical_columns])","8a7681ff":"data['price']=data['price'].astype(float)","3e5db6bd":"data.drop(columns='id',inplace=True)","31fe5c68":"data.head()","e1bcdf5c":"data.drop(columns='sqft_basement',inplace=True)\ndata.info()","7a80ef7e":"#sqft_living","abc74e0d":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['sqft_living'],bins=150,color='red')\nplt.xlabel('sqft_living')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_living')\nplt.show()\n","486d0750":"def log_transform(sample_data):\n    return np.log(sample_data)","a77df678":"data['Transformed_sqft_living']=data['sqft_living'].map(log_transform)","688b9db6":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['Transformed_sqft_living'],bins=150,color='red')\nplt.xlabel('sqft_living')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_living')\nplt.show()","6c69459b":"#sqft_lot","8f139376":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['sqft_lot'],bins=150,color='red')\nplt.xlabel('sqft_lot')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_lot')\nplt.show()","282a91e4":"def log_transform(sample_data):\n    return np.log(sample_data)","877bc749":"data['Transformed_sqft_lot']=data['sqft_lot'].map(log_transform)","f6366ac5":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['Transformed_sqft_lot'],bins=150,color='red')\nplt.xlabel('sqft_lot')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_lot')\nplt.show()","2689ed86":"#sqft_above","209911f8":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['sqft_above'],bins=150,color='red')\nplt.xlabel('sqft_above')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_above')\nplt.show()","15a7eebd":"def log_transform(sample_data):\n    return np.log(sample_data)","d26be117":"data['Transformed_sqft_above']=data['sqft_above'].map(log_transform)","12aac16e":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['Transformed_sqft_above'],bins=150,color='red')\nplt.xlabel('sqft_above')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_above')\nplt.show()","e0a209b1":"#long","56956420":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['long'],bins=150,color='red')\nplt.xlabel('long')\nplt.ylabel('frequency')\nplt.title('Distribution of long')\nplt.show()","676a9aaf":"def log_transform(sample_data):\n    return np.log(sample_data)","e588b5e5":"data['Transformed_long']=data['long'].abs().map(log_transform)","8aefc452":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['Transformed_long'],bins=150,color='red')\nplt.xlabel('long')\nplt.ylabel('frequency')\nplt.title('Distribution of long')\nplt.show()","bb1e9f1b":"#sqft_living15\nplt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['long'],bins=150,color='red')\nplt.xlabel('long')\nplt.ylabel('frequency')\nplt.title('Distribution of long')\nplt.show()","d79b85cb":"def log_transform(sample_data):\n    return np.log(sample_data)","35416c88":"data['Transformed_sqft_living15']=data['sqft_living15'].map(log_transform)","c7598051":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['Transformed_sqft_living15'],bins=150,color='red')\nplt.xlabel('sqft_living15')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_living15')\nplt.show()","944f24dc":"#sqft_lot15\nplt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['sqft_lot15'],bins=150,color='red')\nplt.xlabel('sqft_lot15')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_lot15')\nplt.show()","b0b17137":"def log_transform(sample_data):\n    return np.log(sample_data)","516bed9a":"data['Transformed_sqft_lot15']=data['sqft_lot15'].map(log_transform)","445b7719":"plt.figure(figsize=(10,7),dpi=120)\nplt.hist(data['Transformed_sqft_lot15'],bins=150,color='red')\nplt.xlabel('sqft_lot15')\nplt.ylabel('frequency')\nplt.title('Distribution of sqft_lot15')\nplt.show()","d26f728b":"#data.drop(columns=['sqft_living','sqft_lot','sqft_above','long','sqft_living15','sqft_lot15'],inplace=True)","da908aba":"data.head(10)","da596d8f":"data['ever_renovated']=np.where(data['yr_renovated']==0,'No','Yes')","3a2a4e95":"data.head(10)","eeaa5b65":"data['yr_purchase']=pd.DatetimeIndex(data['date']).year","d27f105e":"data['years_since_renovation']=np.where(data['ever_renovated']=='Yes',abs(data['yr_purchase']-data['yr_renovated']),0)","58cfc532":"data.head(10)","6463968f":"data.drop(columns=['yr_purchase','date','yr_renovated','ever_renovated'],inplace=True)","e71c90a8":"data.head(10)","cc9a8c9e":"data.info()","a203f2f5":"data=pd.get_dummies(data,columns=['waterfront','view','condition'],drop_first=True)","99385db0":"data.head(5)","af849077":"Zip_table=data.groupby('zipcode').agg({'price':'mean'}).sort_values('price',ascending=True)","04aa7fcb":"Zip_table.head()","fb083b06":"Zip_table['Zipcode_Group']=pd.cut(Zip_table['price'],bins=10,labels=['Zipcode_Group0',\n                                                                         'Zipcode_Group1',\n                                                                         'Zipcode_Group2',\n                                                                         'Zipcode_Group3',\n                                                                         'Zipcode_Group4',\n                                                                          'Zipcode_Group5',\n                                                                          'Zipcode_Group6',\n                                                                          'Zipcode_Group7',\n                                                                          'Zipcode_Group8',\n                                                                          'Zipcode_Group9'],include_lowest=True)","d08014d3":"Zip_table=Zip_table.drop(columns=\"price\")","a9327d34":"data=pd.merge(data,Zip_table,\n             left_on='zipcode',\n             how='left',\n             right_index=True)","183cca3d":"data=data.drop(columns=\"zipcode\")","4b2d360f":"data.head()","113ad9de":"data=pd.get_dummies(data,columns=['Zipcode_Group'],\n                   drop_first=True)","0b303e8e":"data.head()","e34fb7f2":"data.info()","2d9f93e3":"Y=data.iloc[:,0]","7520d526":"Y.head(10)","9a3a3f5f":"X=data.iloc[:,1:38]","88400e46":"X.head(10)","7561a893":"from sklearn.model_selection import train_test_split as tts","7ad5528c":"X_train,X_test,Y_train,Y_test=tts(X,Y,test_size=0.3)","4d28ede1":"X_train.shape","bd1d19df":"X_test.shape","e2df10bb":"Y_train.shape","3c3437ee":"Y_test.shape","1333d038":"X.describe()","4625ad7b":"from sklearn import preprocessing","4076a80f":"scale=preprocessing.StandardScaler()","be1be718":"X_train=scale.fit_transform(X_train)","e6b7ccf9":"X_train","898f4544":"X_test=scale.fit_transform(X_test)","8df37d0a":"X_test","5e4a2da9":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nY=data['price']\nX=scaler.fit_transform(data.drop(columns=['price']))\nX=pd.DataFrame(data=X,columns=data.drop(columns=['price']).columns)\nX.head()","905c16be":"X.corr()","bad50994":"##pair of independent variables with correlation greater than 0.5\nk=X.corr()\nz=[[str(i),str(j)]for i in k.columns for j in k.columns if(k.loc[i,j]>abs(0.5))&(i!=j)]\nz,len(z)","a54a35dd":"#Importing Variance_Infraltion_Factor from the statsmodel\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\n\nvif_data=X\n\n#Calculating VIF for every column\nVIF=pd.Series([variance_inflation_factor(vif_data.values,i)for i in range(vif_data.shape[1])],index=vif_data.columns)\nVIF","237195db":"VIF[VIF==VIF.max()].index[0]","2abca840":"def MC_remover(data):\n    vif = pd.Series([variance_inflation_factor(data.values,i)for i in range(data.shape[1])],index=data.columns)\n    if vif.max() > 5:\n        print(vif[vif == vif.max()].index[0],'has been removed')\n        data=data.drop(columns=[vif[vif == vif.max()].index[0]])\n        return data\n    else:\n        print(\"No multicollinearity present anymore\")\n        return data","ffcf5802":"for i in range(7):\n    vif_data=MC_remover(vif_data)\nvif_data.head()","857f3d33":"vif=pd.Series([variance_inflation_factor(vif_data.values,i)for i in range(vif_data.shape[1])],index=vif_data.columns)\nvif,len(vif_data.columns)","e6aed3ba":"vif_data.drop(columns=['Zipcode_Group_Zipcode_Group6','Zipcode_Group_Zipcode_Group7','Zipcode_Group_Zipcode_Group8',],inplace=True)\nvif_data.head()","5c8d3867":"X=vif_data\nY=data['price']\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.3,random_state=101)\nx_train.shape,x_test.shape,y_train.shape,y_test.shape","db5c73e5":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression(normalize=True)\nlr.fit(x_train,y_train)\nLinearRegression(copy_X=True,fit_intercept=True,n_jobs=1,normalize=True)\nlr.coef_\npredictions=lr.predict(x_test)\nlr.score(x_test,y_test)","6732c287":"residuals=predictions-y_test\nresidual_table=pd.DataFrame({'residuals':residuals,\n                              'predictions':predictions})\nresidual_table=residual_table.sort_values(by='predictions')\nz=[i for i in range(int(residual_table['predictions'].max()))]\nk=[0 for i in range(int(residual_table['predictions'].max()))]\nplt.figure(dpi=130,figsize=(17,7))\nplt.scatter(residual_table['predictions'],residual_table['residuals'],color='red',s=2)\nplt.plot(z,k,color='green',linewidth=3,label='regression_line')\nplt.ylim(-80000,80000)\nplt.xlabel('fitted points(ordered by predictions)')\nplt.ylabel('residuals')\nplt.title('residual plot')\nplt.legend()\nplt.show()","8446a760":"plt.figure(dpi=100,figsize=(10,7))\nplt.hist(residual_table['residuals'],color='red',bins=200)\nplt.xlabel('residuals')\nplt.ylabel('frequency')\nplt.title('distribution of residuals')\nplt.show()","6925be41":"coefficients_table=pd.DataFrame({'columns':x_train.columns,\n                          'coefficients':lr.coef_})\ncoefficients_table=coefficients_table.sort_values(by='coefficients')\nplt.figure(figsize=(8,6),dpi=120)\nx=coefficients_table['columns']\ny=coefficients_table['coefficients']\nplt.barh(x,y)\nplt.xlabel('coefficients')\nplt.ylabel('variables')\nplt.title('Normalized Coefficients plot')\nplt.show()","649b6344":"# Training the model","9197e2a6":"# 1. Residuals","0dbc8841":"# Binning","527de8c4":"# Seperating X and Y variable","77c8ddca":"# Scaling the dataset","b39e8ba7":"# Train and Test Data","d61e0789":"# Data Preprocessing","57fffef8":"# Verifying the assumptions of linear regression","83cf573d":"# Imputing","0ad6e8a9":"# Checking & Removing multicollinearity","5346ecd1":"# Model Coefficients","1573df50":"# Feature Scaling","736e0001":"# Linear Regression","6f591e7b":"# Remaining Columns","c26ad9f5":"# 2. Distribution of errors","f0538370":"# Standardisation","2817a45d":"# Feature Transformation","29123ccd":"# Calculating VIF"}}