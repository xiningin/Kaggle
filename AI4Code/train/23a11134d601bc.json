{"cell_type":{"b4e306ff":"code","9eda51fe":"code","a172b9c9":"code","dcd2bdae":"code","ceffa4c1":"code","19f0f9b4":"code","ad18c141":"code","d683bb70":"code","54c15fe2":"code","85fcf943":"code","1ea335bb":"code","94f8d713":"code","2dbdcc8c":"code","41c38b02":"code","128b7c69":"code","77f32935":"code","49a2a2b5":"code","a88bc5dd":"code","fb6893f8":"code","6e17ca6f":"code","c5fc5b1b":"code","2bce5f21":"markdown","cf871788":"markdown","e5b25eb3":"markdown","2b14f12e":"markdown","80ada5a5":"markdown","121a22b8":"markdown","54cc638e":"markdown","b84c3c64":"markdown","f1f84e0e":"markdown","ca25e2ba":"markdown","86fb410e":"markdown","d045b989":"markdown","659aa341":"markdown","5a499a02":"markdown","a2acea7e":"markdown","874975df":"markdown","22817a8e":"markdown","d46479f8":"markdown","ce11cd2f":"markdown"},"source":{"b4e306ff":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.patches as mpatches\nfrom plotly.subplots import make_subplots\nimport seaborn as sns  \nsns.set(color_codes = True)\nsns.set(style=\"whitegrid\")\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors","9eda51fe":"#..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\ndf = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\nvacc_df=df.copy()\n","a172b9c9":"vacc_df","dcd2bdae":"#just trying to practice the where clause inpython\nvacc_df[vacc_df['country'] == 'India'].sort_values(by='date').describe()","ceffa4c1":"vacc_df.info()","19f0f9b4":"vacc_df.describe(include='object')","ad18c141":"vacc_df.isnull().sum()\n","d683bb70":"#Without total vaccinations the row doesnot make any sense so dropping row where this value is null\nvacc_df=vacc_df.drop(vacc_df[vacc_df.total_vaccinations.isna()].index)\nvacc_df.isna().sum()\nvacc_df.fillna(value = 0, inplace = True) #filling rest with zero , need to handle\n\n\n","54c15fe2":"vacc_df.info()","85fcf943":"#Converted the date column into datetime from object type.\nvacc_df.date = pd.to_datetime(vacc_df.date)","1ea335bb":"# since i will not be using Isco code,source_name_source_website , dropping it from vaccination dataset\nvacc_df=vacc_df.drop(columns= [\"iso_code\",\"source_name\",\"source_website\"]).reset_index()\nvacc_df.info()","94f8d713":"#just trying to use format in print \nprint('Data is collected from {} to this {} and total number of countries in dataset is {} and total number of vaccines is {}'.\n       format(vacc_df.date.min(),\n                vacc_df.date.max(),\n                len(vacc_df.country.unique()),\n                len(vacc_df.vaccines.unique())\n                )\n     )\n\n","2dbdcc8c":"print(\"Total Population Vaccinated around the world \",vacc_df.total_vaccinations.sum())","41c38b02":"# Since there are multiple record for countries as data is  cummulated date wise,\n#max will give final count , sort according to totalnumber, first 30 records will give top 30 countries\ncols = ['country', 'total_vaccinations']\nvacc_data30 =vacc_df[cols].groupby('country').max().sort_values('total_vaccinations', ascending=False)\nvacc_data30=vacc_data30[:30].reset_index()\n","128b7c69":"\n#sns.barplot(x='total_vaccinations',  y=vacc_data30.index ,data=vacc_data30,orient='h')\nsns.catplot( x='total_vaccinations',  y=vacc_data30.country ,data=vacc_data30,kind='bar',ci=None,palette='twilight_shifted', legend_out=False,aspect=2, orient='h')\nplt.xlabel('Count of vaccinated population per hundred')\nplt.ylabel('Countries')\nplt.xticks(rotation=90)\nplt.show()\n","77f32935":"##trying to use plotly map function\nvacc_data =vacc_df[cols].groupby('country').max().sort_values('total_vaccinations', ascending=False) \nfig = px.choropleth(locations=vacc_data.index, locationmode='country names' ,\n                    data_frame=vacc_data,\n                    color='total_vaccinations', title='Total Vaccinated Population',\n                    labels={'total_vaccinations':\"No of Vaccinated Population\"},color_continuous_scale='sunset'\n                   )\nfig.show('notebook')","49a2a2b5":"cols = ['country','total_vaccinations_per_hundred'] \nvacc_per_hund30 =vacc_df[cols].groupby('country').max()\nvacc_per_hund30=vacc_per_hund30.sort_values('total_vaccinations_per_hundred', ascending=False).head(30).reset_index()\n\nsns.catplot(data=vacc_per_hund30, x=vacc_per_hund30.country, y='total_vaccinations_per_hundred',kind='bar',palette='cool_r' ,ci=None, legend_out=False,aspect =2)\nplt.ylabel('Count of vaccinated population per hundred')\nplt.xlabel('Countries')\nplt.xticks(rotation=90)\nplt.show()\n\n\n\n\n","a88bc5dd":"\ncols = ['country','people_fully_vaccinated_per_hundred'] \nvacc_fully_hund30 =vacc_df[cols].groupby('country').max()\nvacc_fully_hund30=vacc_fully_hund30.sort_values('people_fully_vaccinated_per_hundred', ascending=False).head(30).reset_index()\n\nsns.catplot(data=vacc_fully_hund30, x=vacc_fully_hund30.country, y='people_fully_vaccinated_per_hundred',kind='bar',palette='cool_r' ,ci=None, legend_out=False,aspect =2)\nplt.ylabel('Count of Fully vaccinated population per hundred')\nplt.xlabel('Countries')\nplt.xticks(rotation=90)\nplt.show()","fb6893f8":"country=vacc_data30.country   # get top 30 countries from data set\npopular_vac=vacc_df[vacc_df['country'].isin(country)]\nplt.figure(figsize=(20,10))\nsns.lineplot(x=\"date\", y=\"daily_vaccinations\",data=popular_vac,ci=0,hue='country',\n             palette='bright',hue_order=country ,estimator='sum')\n","6e17ca6f":"plt.figure(figsize=(8, 7))\n#popular_vac = vacc_df.groupby('vaccines')\n#sns.barplot(y=vacc_df.vaccines,data= vacc_df,color='yellow', orient='h').set(xlabel ='Count')\norder=vacc_df['vaccines'].value_counts(ascending=False).index \nsns.countplot(y=vacc_df.vaccines,data=vacc_df,order=order ,orient='h').set(\n    title='MOST TAKEN VACCINE AROUND THE WORLD' )\nplt.show()","c5fc5b1b":"\n \ncols = ['country','daily_vaccinations','date'] \nstart_date = '2020-01-01'\nend_date = '2020-01-31'\nvacc_daily_dec=vacc_df[vacc_df['country'].isin(country)] # get data for only those country that are present in top 30\nmask = (vacc_daily_dec['date'] > start_date) & (vacc_daily_dec['date'] <= end_date)\nvacc_daily_dec=vacc_daily_dec[mask] # filter data according to date\nvacc_daily_dec=vacc_daily_dec[cols].groupby('country').sum()\nvacc_daily_dec=vacc_daily_dec.sort_values('daily_vaccinations', ascending = False ).reset_index()\n#Countrywise sum all daily vaccinations done in month of January \ncountry=vacc_data30.country  # get top 30 countries from data set \ncols = ['country','daily_vaccinations','date'] \nstart_date = '2021-01-01'\nend_date = '2021-01-31'\nvacc_daily_jan=vacc_df[vacc_df['country'].isin(country)] # get data for only those country that are present in top 30\nmask = (vacc_daily_jan['date'] > start_date) & (vacc_daily_jan['date'] <= end_date)\nvacc_daily_jan=vacc_daily_jan[mask] # filter data according to date\nvacc_daily_jan=vacc_daily_jan[cols].groupby('country').sum()\nvacc_daily_jan=vacc_daily_jan.sort_values('daily_vaccinations', ascending = False ).reset_index()\n\n#Countrywise sum all daily vaccinations done in month of February \ncols = ['country','daily_vaccinations','date'] \nstart_date = '2021-02-01'\nend_date = '2021-02-28'\n\n\nvacc_daily_feb=vacc_df[vacc_df['country'].isin(country)]\nmask = (vacc_daily_feb['date'] > start_date) & (vacc_daily_feb['date'] <= end_date)\nvacc_daily_feb=vacc_daily_feb[mask]\nvacc_daily_feb=vacc_daily_feb[cols].groupby('country').sum()\nvacc_daily_feb=vacc_daily_feb.sort_values('daily_vaccinations', ascending = False ).reset_index()\n\n\n\nfig1, axes1 =plt.subplots(1,3,figsize=(13, 7))\nfig1.suptitle('Total vaccination done in January Vs February', fontsize=18, fontweight='bold')\nplt.subplots_adjust(wspace=0.7)\nax=sns.barplot(data=vacc_daily_jan, x='daily_vaccinations',  y='country',ax=axes1[0],orient='h').set(\n    title='December',xlabel='Total vaccination')\nax1=sns.barplot(data=vacc_daily_jan, x='daily_vaccinations',  y='country',ax=axes1[1],orient='h').set(\n    title='January',xlabel='Total vaccination')\nax2=sns.barplot(data=vacc_daily_feb, x='daily_vaccinations',  y='country',ax=axes1[2],orient='h').set(title='February',xlabel='Total vaccination')\n\nplt.show()","2bce5f21":"# **Top 30 countries that are vaccinated per hundered?**\n(This might differ from above graph as few countries are less populated so this ratio can be high)","cf871788":"# Most taken vaccine around the world","e5b25eb3":"# **Top 30 countries with highest vaccination count since vaccination started**","2b14f12e":"# Observation\n The vaccine that appears most is \"Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech\". ","80ada5a5":"<h2 ><center>Question I want  to answer ? <\/center><\/h2>\n\n1. Total popluation that is vaccinated in the world . \n2. Top 30 countries  with highest vaccination count \n3. Top 30 countries that are vaccinated per hundered?(This will differ as few countries are less populated)\n4. Top 30 countries vaccine comparision between December ,January and February. \n5. Most popluar Vaccine in Individual countries?\n","121a22b8":"# Observation \n* Gibraltar ,Israel,Seychelles , UAE,  have the highest number of vaccinated people per hundred.\n* The population of these countries isn't really high, That may be reason for this indicators\n\n","54cc638e":"# Data Visualization","b84c3c64":"# December Vs January Vs February  comparision between top 30 countries","f1f84e0e":"# Importing libraries","ca25e2ba":"# Observations\n* The dataset contains 5321 rows and 15 features. ( As of 7 march)\n \n","86fb410e":"<h2 ><center>Acknowledgement<\/center><\/h2>\n\nI have used dataset provided by [@Gabriel Preda](https:\/\/www.kaggle.com\/gpreda). Thank you for the Task.\n","d045b989":"<h2><center>Basic features of the data set<\/center><\/h2>\n\n<h3> The data contains the following information<\/h3>\n\n-  Country- this is the country for which the vaccination information is provided;\n-  Country ISO Code - ISO code for the country;\n-  Date - date for the data entry; for some of the dates we have only the daily                 vaccinations, for others, only the (cumulative) total;\n-  Total number of vaccinations - this is the absolute number of total immunizations in the     country;\n-  Total number of people vaccinated - a person, depending on the immunization scheme, will    receive one or more (typically 2) vaccines; at a certain moment, the number of               vaccination might be larger than the number of people;\n-  Total number of people fully vaccinated - this is the number of people that received the    entire set of immunization according to the immunization scheme (typically 2); at a          certain moment in time, there might be a certain number of people that received one          vaccine and another number (smaller) of people that received all vaccines in the scheme;\n-  Daily vaccinations (raw) - for a certain data entry, the number of vaccination for that      date\/country;\n-  Daily vaccinations - for a certain data entry, the number of vaccination for that               date\/country;\n-  Total vaccinations per hundred - ratio (in percent) between vaccination number and total     population up to the date in the country;\n-  Total number of people vaccinated per hundred - ratio (in percent) between population        immunized and total population up to the date in the country;\n- Total number of people fully vaccinated per hundred - ratio (in percent) between        population fully immunized and total population up to the date in the country;\n- Daily vaccinations per million - ratio (in ppm) between vaccination number and total population for the current date in the country;\n- Vaccines used in the country - total number of vaccines used in the country (up to date);\n- Source name - source of the information (national authority, international organization, local organization etc.);\n- Source website - website of the source of information;\n\n","659aa341":"# Observation\n* There are  missing values in iso_code,total_vaccinations and other coloumns. . The vaccine that appears most is \"Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech\".  Need to analyze further","5a499a02":"Here are my other notebooks....Do checkout if you find my work helpful, happy learning.\n\n1.[Predicting If Customer will borrow Personal Loan ](http:\/\/www.kaggle.com\/yogidsba\/personal-loan-logistic-regression-decision-tree)\n\n2.[Predict Prices of Used cars](https:\/\/www.kaggle.com\/yogidsba\/predict-used-car-prices-linearregression)\n\n3.[Diabeted Prediction](https:\/\/www.kaggle.com\/yogidsba\/diabetes-prediction-eda-model)\n\n4.[Basic EDA on Covid vaccination](http:\/\/www.kaggle.com\/yogidsba\/basic-eda-on-covid-vaccination)\n\n5.[Pandas Tutorial](http:\/\/www.kaggle.com\/yogidsba\/pandas-function-and-data-analysis)\n\n6.[Case study EDA on cardio good fitness](http:\/\/www.kaggle.com\/yogidsba\/casestudy-eda-for-cardio-good-fitness)","a2acea7e":"# **Total Population Vaccinated around the world.**","874975df":"This is my first submission on kaggle and my second exploratory data analysis. It is just a basic EDA where i am trying to find answer to specify questions.I just started with datascience .Appreciate all you\u2019re feedbacks.\n\nIf you like this project then please  **upvote**...","22817a8e":"![](http:\/\/)<h1><center> EDA for Covid-19 Vaccination Drive<\/center><\/h1>","d46479f8":"# **Observation**\n*    United states has highest number of vaccination done, followed by China ,United kingdom,England,India,Turkey and Brazil","ce11cd2f":"# **Observations**\n*  India,Brazil,Chile has moved ahead. while Israel , UAE has moved down.\n*   This graph is different then what we  had seen before where China was leading before India above suggesting the data is inconsistent between two daily vaccination and total vaccination. On investing the csv file, it seems  true.\n"}}