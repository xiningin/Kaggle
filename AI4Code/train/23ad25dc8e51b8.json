{"cell_type":{"85414685":"code","4cf74381":"code","5cc1eee4":"code","1b899dd6":"code","dffd6d36":"code","e7bbaec7":"code","f8ef3f6a":"code","3ebe9a86":"code","2da8ea1a":"code","a8fa011d":"code","a3676175":"code","98855c9d":"code","6e05224f":"code","55cb1649":"code","a4c742ec":"code","dd6082b0":"code","93312237":"code","05b1d66f":"code","4739a979":"code","07fcf24e":"code","91711167":"code","0cb23dda":"code","82b88cd5":"code","e56f93ae":"code","98428a2c":"code","0f9ce727":"code","c49ae6ce":"markdown","51849332":"markdown","b044b421":"markdown","a28317b7":"markdown","6ba3ed9f":"markdown","6432b04b":"markdown","60cfa7de":"markdown","72b9e6d4":"markdown","6f9e8502":"markdown","e8c90894":"markdown","bb1a1aec":"markdown","ba3aeb5d":"markdown","54bb791e":"markdown","273595e7":"markdown","3deb24cc":"markdown","a55a7720":"markdown"},"source":{"85414685":"#importing the necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4cf74381":"#loading the dataset\ndata=pd.read_csv(\"..\/input\/tmdb_movies_data.csv\")\ndata.info()","5cc1eee4":"#getting the first few rows of the dataset\ndata.head()","1b899dd6":"#printing the last 5 rows\ndata.tail(5)","dffd6d36":"#summary of dataset\ndata.describe()","e7bbaec7":"#filling na values with 0\ndata.fillna(0)\nprint()","f8ef3f6a":"#total number of rows and columns initially in the dataset\nprint(data.shape)","3ebe9a86":"#we need to delete the initially duplicated present rows\n#for that, first we will count the total numbers of dupicated rows\nsum(data.duplicated())\n#now we will remove the duplicated rows\ndata.drop_duplicates(inplace=True)\nprint(data.shape)","2da8ea1a":"#now dropping the columns which will not be helpful in the data analysis\ndata.drop(['imdb_id','overview','cast','homepage','budget_adj','revenue_adj','keywords','tagline'],axis=1,inplace=True)\nprint(data.shape)","a8fa011d":"#the release date column is in the string format. we need to change it to datetime format.\ndata['release date']=pd.to_datetime(data['release_date'])\ndata['release date'].head()","a3676175":"#making a new column\ndata['profit']=data['revenue']-data['budget']","98855c9d":"#Finding the higest and the lowest grossing movies\n#the idxmax() function gives the index of the maximum value  \nhigh_pr=data['profit'].idxmax()\n#the idxmin() function gives the index of the minimm value\nlow_pr=data['profit'].idxmin()\nprint('The highest Grossing movie of all time is: ',data['original_title'][high_pr],'with Profit: $',data['profit'][high_pr])\nprint('The lowest Grossing movie of all time is: ',data['original_title'][low_pr],'with Profit: $',data['profit'][low_pr])","6e05224f":"#some of the columns have 0 as value. So we change to replace them with NaN so that it dont affect the result\ndata['budget']=data['budget'].replace(0,np.NAN)\nhigh_bud=data['budget'].idxmax()\nlow_bud=data['budget'].idxmin()\nprint('The movie with highest budget is: ',data['original_title'][high_bud])\nprint('The movie with lowest budget is: ',data['original_title'][low_bud])","55cb1649":"data['revenue']=data['revenue'].replace(0,np.NAN)\nhigh_rev=data['revenue'].idxmax()\nlow_rev=data['revenue'].idxmin()\nprint('The movie with highest budget is: ',data['original_title'][high_rev])\nprint('The movie with lowest budget is: ',data['original_title'][low_rev])","a4c742ec":"long_rt=data['runtime'].idxmax()\nshort_rt=data['runtime'].idxmin()\nprint('The movie with the longest running time is:',data['original_title'][long_rt])\nprint('The movie with the shortest running time is:',data['original_title'][short_rt])","dd6082b0":"high_vote=data['vote_average'].idxmax()\nlow_vote=data['vote_average'].idxmin()\nprint('The movie with the highest votes is:',data['original_title'][high_vote],'with average',data['vote_average'][high_vote])\nprint('The movie with the lowest votes is:',data['original_title'][low_vote],'with average',data['vote_average'][low_vote])","93312237":"def count_genre(x):\n    data_plot=data[x].str.cat(sep='|')\n    dat=pd.Series(data_plot.split('|'))\n    info=dat.value_counts(ascending=False)\n    return info\nsum_gen=count_genre('genres')\nsum_gen.plot(kind='bar',figsize=(15,7),fontsize=12)\nplt.xticks(rotation=60)\nplt.title(\"Genre with Highest Release\",fontsize=15)\nplt.xlabel(\"Genres\",fontsize=14)\nplt.ylabel(\"Movies\",fontsize=14)","05b1d66f":"info=pd.DataFrame(data['profit'].sort_values(ascending=False))\ninfo['original_title']=data['original_title']\ndat=list(map(str,(info['original_title'])))\nx=list(dat[:10])\ny=list(info['profit'][:10])\np=sns.pointplot(x=y,y=x)\nsns.set(rc={'figure.figsize':(10,5)})\nplt.title(\"Top 10 Profitable Movies\",fontsize=15)\nplt.xlabel(\"Profit\",fontsize=12)\nsns.set_style('darkgrid')","4739a979":"info=pd.DataFrame(data['budget'].sort_values(ascending=False))\ninfo['original_title']=data['original_title']\ndat=list(map(str,(info['original_title'])))\nx=list(dat[:10])\ny=list(info['budget'][:10])\np=sns.pointplot(x=y,y=x)\nsns.set(rc={'figure.figsize':(10,5)})\nplt.title(\"Top 10 Highest Budget Movies\",fontsize=15)\nplt.xlabel(\"Budget(in Billions)\",fontsize=12)","07fcf24e":"info=pd.DataFrame(data['vote_average'].sort_values(ascending=False))\ninfo['original_title']=data['original_title']\ndat=list(map(str,(info['original_title'])))\nx=dat[:10]\ny=info['vote_average'][:10]\np=sns.pointplot(x=y,y=x)\nsns.set(rc={'figure.figsize':(10,5)})\nplt.title(\"Top 10 highest voted movies\",fontsize=15)\nplt.xlabel(\"Average Vote\",fontsize=12)","91711167":"info=pd.DataFrame(data['runtime'].sort_values(ascending=False))\ninfo['original_title']=data['original_title']\ndat=list(map(str,(info['original_title'])))\nx=list(dat[:10])\ny=list(info['runtime'][:10])\np=sns.pointplot(x=y,y=x)\nsns.set(rc={'figure.figsize':(10,5)})\nplt.title(\"Top 10 longest running movies\",fontsize=15)\nplt.xlabel(\"Run Time(in minutes)\",fontsize=12)","0cb23dda":"data.groupby('release_year')['profit'].mean().plot()\nplt.title('Year vs Average Profit',fontsize=15)\nplt.xlabel('Release Year',fontsize=12)\nplt.ylabel('Average Profit',fontsize=12)\nplt.yticks(rotation=90)","82b88cd5":"data.groupby('release_year')['runtime'].mean().plot()\nplt.title('Average Runtime vs Release Years',fontsize=15)\nplt.xlabel('Release Year',fontsize=12)\nplt.ylabel('Average Runtime (in minutes)',fontsize=12,rotation=90)","e56f93ae":"data.groupby('runtime')['popularity'].mean().plot(xticks=np.arange(0,1000,100))\nplt.title('Running Time vs Popluarity',fontsize=15)\nplt.xlabel('Running Time (in minutes)',fontsize=12)","98428a2c":"dc=data.corr()\np=sns.regplot(x='release_year',y='vote_average',data=data)\nplt.title(\"Average Votes vs Release Years\",fontsize=15)\nplt.xlabel('Release Year',fontsize=12)\nplt.ylabel('Average Votes',fontsize=12)\nprint('The correlation between Average Votes and Release Years is:',dc.loc['vote_average']['release_year'])","0f9ce727":"p=sns.regplot(x='budget',y='profit',data=data)\n#data.columns","c49ae6ce":"<h3>Highest Profit Rate year wise<\/h3>","51849332":"<h3>Which movie was the highest and the lowest grossing movie of all time?<\/h3>","b044b421":"<h3>Top 10 longest running movies<\/h3>","a28317b7":"<h3>Average runtime of movies over the years<\/h3>","6ba3ed9f":"According to the graph, **Drama** has the highest number of movie releases followed by **Comedy**.","6432b04b":"<h3>Top 10 highest voted Movies<\/h3>","60cfa7de":"<h3>Which movie had longest and shortest running time?<\/h3>","72b9e6d4":"<h3>Top 10 Highest Budget Movies<\/h3>","6f9e8502":"<h1>TMBd Movie Dataset Analysis<\/h1>\n<h2>Dataset<\/h2>\nI have chosen the TMDb dataset to do my analysis.","e8c90894":"<h3>Genre wise movie release<\/h3>","bb1a1aec":"<h3>Top 10 movies<\/h3>","ba3aeb5d":"We can see **Avatar** was the Highest grossing movie and **The Warrior's Way** was the lowest grossing movie. The negative sign denotes that the movie had a loss.","54bb791e":"<h2>Exploratory Data Analysis<\/h2>\nNow, lets start with the Exploratory Data Part.","273595e7":"<h3>Which movie collected highest revenue and which one collected least?<\/h3>","3deb24cc":"<h3>Which movie had the highest budget and which movie had the lowest budget?<\/h3>\n","a55a7720":"<h3>Movie with highest and lowest Votes?<\/h3>"}}