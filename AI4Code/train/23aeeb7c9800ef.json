{"cell_type":{"4be651a8":"code","058dd874":"code","dce1df72":"code","5a78d24e":"code","de50ea31":"code","39c69691":"code","b1566679":"code","09853b12":"code","f8650c53":"code","cac275b1":"markdown","cd63e500":"markdown","02f8fc35":"markdown","b01dc88e":"markdown","39db096b":"markdown","5cc217ce":"markdown","79e5fedb":"markdown"},"source":{"4be651a8":"#An\u00e1lisis del dataset del precio de carros seg\u00fan sus caracter\u00edsticas y creaci\u00f3n de un modelo predictivo del precio seg\u00fan sus caracter\u00edsticas m\u00e1s relevantes\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","058dd874":"#Primero leemos los datos\ndf=pd.read_csv('..\/input\/car-price-prediction\/CarPrice_Assignment.csv')\n#Mostramos el dataset\ndf.head()","dce1df72":"#Mostramos un resumen estad\u00edstico del dataset\ndf.describe()","5a78d24e":"#Vemos si existen missing values\ndf.isnull().sum()","de50ea31":"#Debido a que son muchas variables, haremos un mapa de calor de correlaci\u00f3n para ver qu\u00e9 variables est\u00e1n fuertemente correlacionadas a el precio\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(16, 6))\nsns.heatmap(df.corr()[['price']].sort_values(by='price', ascending=False),vmin=-1, vmax=1, annot=True)\nplt.title('Mapa de correlaci\u00f3n')","39c69691":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\n#creamos un modelo lineal\nlm=LinearRegression()\n#Seleccionamos las caracter\u00edsticas\nx_features=df[['enginesize','curbweight','horsepower','carlength','carwidth']]\n#dividimos la data en entreamiento y prueba usando el m\u00e9todo train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x_features,df['price'],test_size=0.3, random_state=0)\n#Ajustamos el modelo lineal con los datos de entreamiento\nlm.fit(x_train,y_train)\n#Creamos una variable de precio predicha con los datos de prueba\nyhat=lm.predict(x_test)\n#Realizamos una evaluaci\u00f3n m\u00e9trica\nRSQU=lm.score(x_test,y_test)\nprint (\"El R_cuadrado es: \", RSQU)\nMSE= mean_squared_error(y_test,yhat)\nprint (\"El MSE es: \", MSE)","b1566679":"plt.figure()\nax1=sns.distplot(y_test,hist=False, color = 'r', label=\"Valores Reales\")\nsns.distplot(yhat, hist=False, color = 'b', label=\"Valores Predichos\",ax=ax1)\n\nplt.title('Comparaci\u00f3n entre el modelo y los datos reales')\nplt.ylabel('Proporcion de carros')\nplt.xlabel('Precio')\nplt.legend()\nplt.show()\nplt.close()","09853b12":"#Importamos las librer\u00edas necesarias\nfrom sklearn.preprocessing import PolynomialFeatures\n#from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\n\n\ninput=[('scale',StandardScaler()),('polynomial',PolynomialFeatures(include_bias=False,degree=2)),('model',LinearRegression())]\npipe=Pipeline(input)\npipe.fit(x_train,y_train)\nyhat=pipe.predict(x_test)\n\n#Ahora graficamos\nplt.figure()\n\nax1=sns.distplot(y_test, hist=False, color = 'b', label = \"Valores Reales de Prueba\")\nsns.distplot(yhat,hist=False, color = 'r', label=\"Valores Predichos\",ax=ax1)\nplt.title('Comparaci\u00f3n entre el modelo y los datos reales')\nplt.ylabel('Proporcion de carros')\nplt.xlabel('Precio')\nplt.legend()\nplt.show()\nplt.close()","f8650c53":"RSQU=pipe.score(x_test,y_test)\nprint (\"El R_cuadrado es: \", RSQU)\nMSE=mean_squared_error(y_test,yhat)\nprint (\"El MSE es: \", MSE)","cac275b1":"Usaremos pipeline para normalizar, hacer una transformaci\u00f3n polin\u00f3mica y finalmente una regresi\u00f3n lineal","cd63e500":"Podemos comparar el ajuste polinomial y la regresi\u00f3n lineal m\u00faltiple (MLR). Podemos ver que el MLR tiene mejor R_CUADRADO y menor MSE que el ajuste polinomial por lo que el MLR se ajusta mejor para predecir el precio de los carros nuevos.","02f8fc35":"Vemos qeu el R cuadrado es 0.8, el cual es un valor cercano a 1. Podemos decir que el modelo se ajusta bien para predecir el valor del precio. Ahora graficaremos los valores predichos con los valores reales.","b01dc88e":"Vemos que no existen missing values","39db096b":"Podemos apreciar que las variables que influyen en el precio son: Enginesize, curbweight,horsepower,cardwidth y carlenght. Trabajaremos con estas variables para predecir el precio de nuevos carros. Se realizar\u00e1 una regresi\u00f3n lineal m\u00faltiple.","5cc217ce":"Como podemos ver, el modelo intenta seguir lo mejor que puede a los valores reales. Vamos a compararlo con una ajuste polinomial de grado 2 y comparar las m\u00e9tricas Rcuadrado y MSE","79e5fedb":"Vemos que hay 205 registros de carros con sus caracter\u00edsticas"}}