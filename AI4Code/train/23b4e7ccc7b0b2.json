{"cell_type":{"fadee540":"code","36656e08":"code","5e9560ab":"code","7b0d7af4":"code","2b8bafba":"code","81f0aa97":"code","0e67d164":"code","9c308b84":"code","c2e2732c":"code","dec5724e":"code","e9390f4c":"code","98ec5441":"code","1c611eef":"code","76610573":"code","9a4ba5e3":"code","08cfce89":"code","8a033d3b":"code","728d890e":"code","3a10b9dc":"code","f0d8728b":"code","76fd533c":"code","1f6d1302":"code","18ca9b91":"code","000e1f54":"code","cc892ffa":"code","5737446d":"code","35194d64":"code","a0a9d858":"code","3631c55e":"code","b1d9eeb5":"code","1d86837e":"code","dfc80123":"code","cbe8cd91":"code","138cd5f4":"code","65c0a666":"code","a97c9b7a":"code","67403bfa":"code","011fd66c":"code","39c1e4d5":"code","de3985c9":"code","44290223":"code","7c721816":"code","25f538c7":"markdown"},"source":{"fadee540":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","36656e08":"\n\nfile = \"..\/input\/world-coronavirus-data-visualization-442020\/corona_world_latest-04-04-2020.csv\"\n\n","5e9560ab":"import os\nprint(os.listdir(\"..\/input\"))","7b0d7af4":"df=pd.read_csv(file)","2b8bafba":"df","81f0aa97":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None) ","0e67d164":"df.head()","9c308b84":"df.columns","c2e2732c":"df['TotalDeaths']=df['TotalDeaths'].astype('int32')\n","dec5724e":"df['NewDeaths']=df['NewDeaths'].astype('int32')\n","e9390f4c":"\ndf['TotalRecovered']=df['TotalRecovered'].astype('int32')\n","98ec5441":"df['Serious,Critical']=df['Serious,Critical'].astype('int32')\n","1c611eef":"df['Deaths\/1M pop']=df['Deaths\/1M pop'].astype('int32')\n\n","76610573":"df['TotalTests']=df['TotalTests'].astype('int32')\n","9a4ba5e3":"df['Tests\/ 1M pop']=df['Tests\/ 1M pop'].astype('int32')","08cfce89":"df.head()","8a033d3b":"df","728d890e":"#checking  missing values\n\npd.isnull(df)\n\n","3a10b9dc":"#There are no missing values\n","f0d8728b":"df.head()","76fd533c":"df1=df.groupby(['Country,Other'])['TotalCases','TotalDeaths','TotalRecovered','ActiveCases'].sum().reset_index()","1f6d1302":"df1","18ca9b91":"df1.head()","000e1f54":"world_TotalCases=df1['TotalCases'].sum()\nworld_TotalDeaths=df1['TotalDeaths'].sum()\nworld_TotalRecovered=df1['TotalRecovered'].sum()\nworld_ActiveCases=df1['ActiveCases'].sum()","cc892ffa":"print(world_TotalCases,world_TotalDeaths,world_TotalRecovered,world_ActiveCases)","5737446d":"#adding world data to df1 and df3 \n\n\ndata= [['World', world_TotalCases,world_TotalDeaths,world_TotalRecovered,world_ActiveCases]] \ndf3=pd.DataFrame(data,columns=['Country,Other','TotalCases','TotalDeaths','TotalRecovered','ActiveCases'])\ndf3\n\n","35194d64":"df1","a0a9d858":"df2=pd.concat([df1,df3],ignore_index=True,sort=False)\nprint(df2.tail(5))\nprint(df3)\n","3631c55e":"#bar plotiing \n\nfig=plt.figure()\nax = fig.add_axes([0,0,1,1])\nbars=['TotalCases','TotalDeaths','TotalRecovered','ActiveCases']\nvalues=[1118304,59221,229245,829838]\nax.bar(bars,values)\nplt.title('Data of coronavirus till 4 april 2020')\n\n\n\n\n","b1d9eeb5":"#bar ploting with color \n\nfig=plt.figure()\nax = fig.add_axes([0,0,1,1])\nbars=['TotalCases','TotalDeaths','TotalRecovered','ActiveCases']\nvalues=[1118304,59221,229245,829838]\nax.bar(bars,values,color=('green','red','blue','yellow'))\nplt.xlabel('coronavirus parameters')\nplt.ylabel('counts')\n\nplt.title('Data of coronavirus till 4 april 2020')","1d86837e":"df2.tail()","dfc80123":"#plotting pie chart \nvalues=[59221,229245,829838]\ncolors=['red','blue','yellow']\nexplode=[0.2,0,0]\nlabels=['TotalDeaths','TotalRecovered','ActiveCases']\nplt.pie(values, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',shadow=False, startangle=360)\nplt.title('corona virus total cases till 4th april 2020: '+str(df1['TotalCases'].sum()))\nplt.tight_layout()\n\nplt.show()\n","cbe8cd91":"#plotting donut or ring\n\nlabels=['TotalDeaths','TotalRecovered','ActiveCases']\nvalues = [59221,229245,829838]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=0.7)])\n\nfig.show()\n","138cd5f4":"#Another way of pie chart\nfig=px.pie(values=[59221,229245,829838],names=['TotalDeaths','TotalRecovered','ActiveCases'],title='corona virus total cases till 4th april 2020: '+str(df1['TotalCases'].sum())\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()\n\n","65c0a666":"df2.head()","a97c9b7a":"Data_per_country=df2.groupby(['Country,Other'])['TotalCases'].sum().reset_index().sort_values('TotalCases',ascending=False).reset_index(drop=True)","67403bfa":"Data_per_country","011fd66c":"#plotting world graph\nfig=px.choropleth(Data_per_country,locations=Data_per_country['Country,Other'],\n                  locationmode='country names',hover_name=Data_per_country['Country,Other'],\n                  color=Data_per_country['TotalCases'],\n                  color_continuous_scale=px.colors.sequential.deep)\nfig.update_layout(title='total cases of coronavirus across the world on 4th April 2020')\nfig.show()","39c1e4d5":"#top ten countries in comparison with world data in terms of total cases\nfig=go.Figure(data=[go.Bar(\n    x=Data_per_country['Country,Other'][0:11],\n    y=Data_per_country['TotalCases'][0:11],\n    textposition='auto',\n    marker_color='black'\n    )])\nfig.update_layout(title='top ten countries with total cases of coronavirus across the world on 4th April 2020',\n                  xaxis_title='Countries', yaxis_title='total cases')\nfig.show()","de3985c9":"df1.head()","44290223":"df.head()","7c721816":"#bar plotting and comparison\nfig=go.Figure()\nfig.add_trace(go.Bar(\n   x=df['Country,Other'][df.TotalCases >=10000],\n   y=df['TotalCases'][df.TotalCases >=10000],\n   marker_color='green',\n   textposition='auto',\n   name='TotalCases',\n   text=df.TotalCases[df.TotalCases>=10000]\n   ))\n\n\nfig.add_trace(go.Bar(\n   x=df['Country,Other'][df.TotalCases >=10000],\n   y=df['TotalDeaths'][df.TotalCases >=10000],\n   marker_color='red',\n   textposition='auto',\n   name='TotalDeaths',\n   text=df.TotalDeaths[df.TotalCases>=10000]\n   ))\n\nfig.add_trace(go.Bar(\n   x=df['Country,Other'][df.TotalCases >=10000],\n   y=df['TotalRecovered'][df.TotalCases >=10000],\n   marker_color='blue',\n   textposition='auto',\n   name='TotalRecovered',\n   text=df.TotalRecovered[df.TotalCases>=10000]\n   ))\n\nfig.update_layout(title='Corona virus TotalCase greater than 10,000',\n                  xaxis_title='Countries', yaxis_title='total cases')\nfig.show()","25f538c7":"df1"}}