{"cell_type":{"4ec97f80":"code","1367948d":"code","8f33a51e":"code","321424bf":"code","c3b8b898":"code","6fd516fb":"code","085a0588":"code","b12a49ce":"code","5e94a8fa":"code","0b44d02c":"code","fd7bcc2a":"code","42ef755f":"code","6cfecf98":"code","eb79e4ea":"code","c7df1be2":"code","0ad56284":"code","24e29645":"code","e3aa012c":"code","e29dd856":"code","f066c558":"code","91c9cc0b":"code","11991750":"code","c29dbae0":"code","6d373a66":"code","861bb886":"code","a7b13c63":"code","a3aaf4e0":"code","7145bfec":"markdown","3e1d96c2":"markdown","56cf1820":"markdown"},"source":{"4ec97f80":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","1367948d":"import numpy as np\nimport fastai\nfrom fastai.vision import *\nimport pandas as pd\nimport os\nfrom shutil import copyfile\n\nprint(os.listdir(\"..\/input\/aptos2019-blindness-detection\"))","8f33a51e":"df_train = pd.read_csv('..\/input\/aptos2019-blindness-detection\/train.csv')\ndf_test = pd.read_csv('..\/input\/aptos2019-blindness-detection\/test.csv')\n\nx_train = df_train['id_code']\ny_train = df_train['diagnosis']","321424bf":"path = Path(\"..\/input\/aptos2019-blindness-detection\")","c3b8b898":"# Creating data into folder format\nos.mkdir(\"..\/data\")\nos.mkdir(\"..\/data\/train\")\nfor i in range(5):\n    os.mkdir(\"..\/data\/train\/\"+str(i))\ndef make_img_folder(x, y):\n    for img_name ,diagnosis in zip(x,y):\n        if diagnosis == 0:\n            copyfile('..\/input\/aptos2019-blindness-detection\/train_images\/{}.png'.format(img_name), '..\/data\/train\/0\/{}.png'.format(img_name))\n        if diagnosis == 1:\n            copyfile('..\/input\/aptos2019-blindness-detection\/train_images\/{}.png'.format(img_name), '..\/data\/train\/1\/{}.png'.format(img_name))\n        if diagnosis == 2:\n            copyfile('..\/input\/aptos2019-blindness-detection\/train_images\/{}.png'.format(img_name), '..\/data\/train\/2\/{}.png'.format(img_name))\n        if diagnosis == 3:\n            copyfile('..\/input\/aptos2019-blindness-detection\/train_images\/{}.png'.format(img_name), '..\/data\/train\/3\/{}.png'.format(img_name))\n        if diagnosis == 4:\n            copyfile('..\/input\/aptos2019-blindness-detection\/train_images\/{}.png'.format(img_name), '..\/data\/train\/4\/{}.png'.format(img_name))\n            \nmake_img_folder(x_train, y_train)","6fd516fb":"Path('\/tmp\/.cache\/torch\/checkpoints\/').mkdir(exist_ok=True, parents=True)\n!cp '..\/input\/pytorch-pretrained-image-models\/resnet34.pth' '\/tmp\/.cache\/torch\/checkpoints\/resnet34-333f7ec4.pth'","085a0588":"np.random.seed(42)\nsrc = (ImageList.from_folder(\"..\/data\/train\")\n                .split_by_rand_pct(0.2)\n                .label_from_folder())\n# Starting with image size 128\ndata = (src.transform(tfms=get_transforms(flip_vert=True, max_warp=0), size=128)\n           .databunch(bs=64, path='.').normalize(imagenet_stats))","b12a49ce":"print(data.classes, data.c)","5e94a8fa":"learn = cnn_learner(data, models.resnet34, metrics=accuracy, model_dir=\".\", callback_fns=ShowGraph)","0b44d02c":"# learn.lr_find()\n# learn.recorder.plot()","fd7bcc2a":"learn.fit_one_cycle(5,3e-3)","42ef755f":"learn.save(\"retino_128_1\")\nlearn.load(\"retino_128_1\")","6cfecf98":"learn.unfreeze()","eb79e4ea":"learn.fit_one_cycle(3, max_lr=slice(1e-6,1e-5))","c7df1be2":"learn.save(\"retino128_2\")","0ad56284":"# Creating new data with image size increased to 256\ndata = (src.transform(tfms=get_transforms(flip_vert=True, max_warp=0), size=256)\n           .databunch(bs=64, path='.').normalize(imagenet_stats))","24e29645":"learn.data = data","e3aa012c":"learn.fit_one_cycle(4, 1e-3)","e29dd856":"learn.save(\"retino256_1\")","f066c558":"learn.unfreeze()","91c9cc0b":"learn.fit_one_cycle(5, slice(1e-6))","11991750":"learn.save(\"retino256_2\")","c29dbae0":"sample_df = pd.read_csv('..\/input\/aptos2019-blindness-detection\/sample_submission.csv')\nsample_df.head()","6d373a66":"learn.data.add_test(ImageList.from_df(sample_df,'..\/input\/aptos2019-blindness-detection\/',folder='test_images',suffix='.png'))","861bb886":"preds,y = learn.get_preds(DatasetType.Test)","a7b13c63":"sample_df.diagnosis = preds.argmax(1)\nsample_df.head()","a3aaf4e0":"sample_df.to_csv('submission.csv',index=False)","7145bfec":"### Predictions","3e1d96c2":"# Preparing Data\n","56cf1820":"## Progressive Resizing"}}