{"cell_type":{"06e58233":"code","62fa5f5d":"code","3e96232f":"code","6defa69a":"code","52359196":"code","a178c893":"code","7afac5cb":"code","acae3051":"code","5cfc472e":"code","b4b6be88":"code","f9003c05":"code","c24dc1f8":"code","0c6dd2bc":"code","0b514695":"code","59c6a4dd":"code","0f0de0fb":"code","2956ad53":"code","0a57f21a":"code","36d68bb0":"code","5782c9f0":"code","c6f74513":"code","09ca06f2":"code","a182e186":"code","3a5eda9c":"code","b213147a":"code","32bc10c5":"code","b9cf738e":"code","a1e0a7cb":"code","b381789e":"code","622033cb":"code","3dfd0450":"code","94d35304":"code","522481bf":"code","c87d6b58":"code","685b419f":"code","aa40b89b":"code","bd76a973":"code","1b582993":"code","4b69d52e":"code","a9780e9f":"code","27bf5928":"code","f9848fad":"code","8d668c2a":"code","50b98aa3":"code","18f57f22":"code","39488b5a":"code","c4b799f8":"code","0a0aba25":"code","70df1e10":"code","5863dc5e":"code","f7b942ff":"code","d9eda461":"code","b818bf33":"code","237c6bbd":"code","bd259220":"code","f0cde6e6":"code","7766536d":"code","406e1400":"code","4cfba35f":"code","51d932d0":"code","f971f9d0":"code","772d366e":"code","1d730c01":"code","6b2a397e":"code","e3f39755":"code","7a71d3be":"code","898969de":"code","9a7d083f":"code","0893a798":"code","74c4e9ac":"code","fa88e568":"code","c11fc6c0":"code","3a048b71":"code","c0b3a25e":"code","3ea61ab8":"code","87e6290a":"code","f2b04506":"code","a21aa952":"code","088c6ecd":"code","55ba766f":"code","834f837f":"code","400566cd":"code","176af13f":"code","6f29e264":"code","fe36c56e":"code","944233c7":"code","ec0ff767":"code","97eb82b9":"code","ff2a69f5":"code","15be2615":"code","6e6475c5":"code","96287f95":"code","66ea685b":"code","986539bf":"code","5cc37b01":"code","bfc5c361":"code","a0108356":"markdown","afda16e2":"markdown","a2dc54c2":"markdown","ada1b5dd":"markdown","b6d37186":"markdown","b28ec32d":"markdown","095aabc8":"markdown","256b2e1a":"markdown","f4183763":"markdown","a9a5accf":"markdown","13bfaf17":"markdown","605095a3":"markdown","b8c1c561":"markdown","4ac91269":"markdown","2d82698d":"markdown","8c9b6994":"markdown","0e338608":"markdown","4c6a746f":"markdown","2449984d":"markdown","cbf20bc5":"markdown","3d018904":"markdown","4dc8a7a0":"markdown","63a401fb":"markdown","5d032c9e":"markdown","05e85f1d":"markdown","c515207c":"markdown","0d544868":"markdown","d9ddf1d7":"markdown","44eb9197":"markdown","8d66a68c":"markdown","99f242f6":"markdown","6aa8e870":"markdown","1b31ca0a":"markdown","b82b0d06":"markdown","2ce211ce":"markdown","2677c5bd":"markdown","80d8b88c":"markdown","2b943d81":"markdown","083b0607":"markdown","9257a5c2":"markdown","3dce75a7":"markdown","745f28e1":"markdown","b8f7983f":"markdown","05fa37be":"markdown","890e8405":"markdown","07ead82f":"markdown","579b589c":"markdown","f682d567":"markdown","5e447160":"markdown","92a686b6":"markdown","5e874e1f":"markdown","63f44a7d":"markdown","d7a9a8d5":"markdown","2f434ab1":"markdown","bbd2daf3":"markdown","e6a2ee67":"markdown","ee1d2ada":"markdown","f2a2b7c2":"markdown","2dde6f55":"markdown"},"source":{"06e58233":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')","62fa5f5d":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3e96232f":"df = pd.read_csv('..\/input\/zomato-bangalore-restaurants\/zomato.csv')","6defa69a":"df.head()","52359196":"df.info()","a178c893":"df.isnull().sum()","7afac5cb":"(df.isnull().mean())*100","acae3051":"df.nunique(axis=0, dropna = False)","5cfc472e":"df.drop(['url', 'phone', 'listed_in(city)', 'dish_liked','reviews_list', 'menu_item'], \n        axis = 1, inplace=True)","b4b6be88":"df.head()","f9003c05":"df.isnull().sum()","c24dc1f8":"df['name'].nunique()","0c6dd2bc":"print(df['location'].unique())\nprint(len(df['location'].unique()))","0b514695":"df[df['location'].isnull()]","59c6a4dd":"df = df.dropna(subset= ['location'])","0f0de0fb":"df_kor = df[df['location'].str.contains('Koramangala')]\ndf_kor_list = df_kor['location'].unique()\ndf['location'] = df['location'].replace(df_kor_list, 'Koramangala')","2956ad53":"df = df.rename(columns={'approx_cost(for two people)': 'cost'})","0a57f21a":"df['cost'] = [float(str(i).replace(\",\", \"\")) for i in df['cost']]","36d68bb0":"df['rate'].unique()","5782c9f0":"df['rate'] = df['rate'].fillna(df['rate'].mode()[0])","c6f74513":"df[df['rate'] == '-'].shape","09ca06f2":"rate_hyphen = df.loc[df['rate'] == '-'].index\ndf.drop(rate_hyphen, axis = 0, inplace = True)","a182e186":"df_rate_new = df[df.rate == 'NEW']","3a5eda9c":"df_rate_new.shape","b213147a":"df['rate'].replace({\"NEW\" : \"2.55 \/5\"}, inplace = True)","32bc10c5":"df['rate'] = df['rate'].apply(lambda x : x.split('\/')[0])\ndf['rate'] = df['rate'].apply(lambda x : x.split(' ')[0])\ndf = df.astype({'rate' : float})","b9cf738e":"np.sort(df['rate'].unique())","a1e0a7cb":"df['online_order'].replace({'Yes' : 1, 'No' : 0}, inplace = True)","b381789e":"df['book_table'].replace({'Yes' : 1, 'No' : 0}, inplace = True)","622033cb":"df['listed_in(type)'].unique()","3dfd0450":"df_rate_new = df_rate_new.drop_duplicates('address')","94d35304":"df_res_count = df[['address','name','location']]\ndf_res_count = df_res_count.drop_duplicates()\ndf_res_count = df_res_count.groupby(['location'])['name'].count()\ndf_res_count = df_res_count.rename('No of Restaurants')\ndf_res_count","522481bf":"df_new_res = df_rate_new.groupby(['location'])['name'].count()\ndf_new_res = df_new_res.rename('No of New Restaurants')\ndf_new_res","c87d6b58":"df_loc_new = pd.concat([df_res_count, df_new_res], axis =1)\ndf_loc_new.fillna(value = 0, inplace = True)\ndf_loc_new['percent_new_res'] = df_loc_new.iloc[:,1]\/df_loc_new.iloc[:,0] * 100","685b419f":"df_loc_new.sort_values('percent_new_res', ascending = False).head(30)","aa40b89b":"df_new_res_cost = df_rate_new.groupby(['location'])['cost'].mean()\ndf_new_res_cost =df_new_res_cost.rename('Avg cost of New Restaurants')\ndf_res_cost = df[['address','name','location', 'cost']]\ndf_res_cost = df_res_cost.drop_duplicates()\ndf_res_cost =df_res_cost.groupby(['location'])['cost'].mean()\ndf_res_cost= df_res_cost.rename('Avg cost of Restaurants')","bd76a973":"df_cost = pd.concat([df_res_cost, df_new_res_cost], axis =1)\ndf_cost","1b582993":"df_rate = df.groupby(['location'])['rate'].mean()\ndf_rate.rename('Avg rating')\ndf_rate.to_frame()\ndf_rate","4b69d52e":"df_online_order = df[['address','name', 'online_order']]\ndf_online_order = df_online_order.drop_duplicates()\nprint(df_online_order.groupby(['online_order'])['name'].count())\nplt.figure(figsize = (6, 6))\nsns.countplot(df['online_order'])\nplt.show()","a9780e9f":"sns.boxplot(x = 'online_order', y = 'rate', data = df)","27bf5928":"df4 = df.groupby(['location','online_order'])['name'].count()\ndf4.to_csv('zomatodf4.csv')\ndf4 = pd.read_csv('zomatodf4.csv')\ndf4 = pd.pivot_table(df4, values=None, index=['location'], columns=['online_order'], fill_value=0, aggfunc=np.sum)\ndf4","f9848fad":"print(df.groupby(['book_table'])['name'].count())\nplt.figure(figsize = (6, 6))\nsns.countplot(df['book_table'])\nplt.show()","8d668c2a":"sns.boxplot(x = 'book_table', y = 'rate', data = df)","50b98aa3":"df5 = df.groupby(['location','book_table'])['name'].count()\ndf5.to_csv('zomatodf5.csv')\ndf5 = pd.read_csv('zomatodf5.csv')\ndf5 = pd.pivot_table(df5, values=None, index=['location'], columns=['book_table'], fill_value=0, aggfunc=np.sum)\ndf5","18f57f22":"plt.figure(figsize = (12, 6))\nsns.boxplot(x = 'listed_in(type)', y = 'rate', data = df)","39488b5a":"type_count = df['listed_in(type)'].value_counts()\nfig, ax = plt.subplots(figsize=(10, 10))\nax.pie(x=type_count.values, labels=None, autopct='%1.1f%%',\n            startangle=90, textprops={'size': 10, 'color': 'white'},\n            pctdistance=0.9, radius=1)\nfig.suptitle('', fontsize=20)\nfig.legend(type_count.index)","c4b799f8":"df6 = df.groupby(['location','listed_in(type)'])['name'].count()\ndf6.to_csv('zomatodf6.csv')\ndf6 = pd.read_csv('zomatodf6.csv')\ndf6 = pd.pivot_table(df6, values=None, index=['location'], columns=['listed_in(type)'], fill_value=0, aggfunc=np.sum)\ndf6","0a0aba25":"df_votes = df[['address','name','location', 'votes']]\ndf_votes.drop_duplicates()\ndf7 = df_votes.groupby(['location'])['votes'].sum()\ndf7 = df7.to_frame()\ndf7.sort_values('votes', ascending=False).head(30)","70df1e10":"bins = pd.IntervalIndex.from_tuples([(0, 500), (501, 1000), (1001, 2000), (2001, 3000), (3001, 4000), (4001, 5000), (5001, 6000)])\ndf['cost_cat'] = pd.cut(df['cost'], bins)\n","5863dc5e":"plt.figure(figsize=(15,15))\nax = sns.boxplot(x=\"cost_cat\", y=\"rate\", data=df)\nax.set_xlabel('Cost', fontsize=16)\nax.set_ylabel('Rating', fontsize=16)\nax.set_title('Price and Distribution')\ndf.drop('cost_cat', axis=1, inplace=True)","f7b942ff":"df['rest_type'].unique()","d9eda461":"df_rest = df[['name','location','rest_type']]","b818bf33":"df_rest = df_rest.reindex(range(0,len(df_rest)))","237c6bbd":"df_rest.drop_duplicates()","bd259220":"a = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_rest['rest_type'].str.split(',').apply(func)\nprint(a)","f0cde6e6":"column_names = list(a)\nrest_type = pd.DataFrame(columns=column_names)\nrest_type","7766536d":"rest_type['location'] = df_rest.groupby('location').groups.keys()\nrest_type = rest_type.set_index('location').fillna(0)","406e1400":"for i in range(0,len(df_rest)):\n    for x in a:\n        if type(df_rest.loc[i, 'rest_type']) == str and x in df_rest.loc[i, 'rest_type']:\n            rest_type.loc[df_rest.loc[i, 'location'], x] = rest_type.loc[df_rest.loc[i, 'location'], x]+1","4cfba35f":"rest_type","51d932d0":"def fun(x):\n    if(type(x) == list):\n        return (len(x))\n    else:\n        return 0\ndf['no_of_cuisine'] = df['cuisines'].str.split(',').apply(fun)","f971f9d0":"df.groupby(['no_of_cuisine'])['rate'].mean()","772d366e":"df.drop('no_of_cuisine', axis=1, inplace=True)","1d730c01":"df_cuisines = df[['name','location','cuisines']]","6b2a397e":"df_cuisines = df_cuisines.reindex(range(0,len(df_cuisines)))","e3f39755":"df_cuisines = df_cuisines.drop_duplicates()\ndf_cuisines = df_cuisines.reindex(range(0, len(df_cuisines)))","7a71d3be":"a = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_cuisines['cuisines'].str.split(',').apply(func)\nprint(a)","898969de":"column_names = list(a)\ncuisines_type = pd.DataFrame(columns=column_names)\ncuisines_type","9a7d083f":"cuisines_type['location'] = df_cuisines.groupby('location').groups.keys()\ncuisines_type = cuisines_type.set_index('location').fillna(0)","0893a798":"i = 0\nfor i in range(0,len(df_cuisines)):\n    for x in a:\n        if type(df_cuisines.loc[i, 'cuisines']) == str and x in df_cuisines.loc[i, 'cuisines']:\n            cuisines_type.loc[df_cuisines.loc[i, 'location'], x] = cuisines_type.loc[df_cuisines.loc[i, 'location'], x]+1","74c4e9ac":"cuisines_type","fa88e568":"a = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_cuisines['cuisines'].str.split(',').apply(func)\nprint(a)","c11fc6c0":"cuisines_rate = df[['name', 'location', 'rate', 'cuisines']]\ncuisines_rate.drop_duplicates()\ncolumn_names = list(a)\ncuisines_rate = pd.concat([cuisines_rate, pd.DataFrame(columns=column_names)], axis=1)\ncuisines_rate = cuisines_rate.reindex(range(0,len(cuisines_rate)))\ncuisines_rate = cuisines_rate.fillna(value = 0)","3a048b71":"for i in range(0, len(cuisines_rate)):\n    for x in a:\n        if type(cuisines_rate.loc[i, 'cuisines']) == str and x in cuisines_rate.loc[i, 'cuisines']:\n            cuisines_rate.loc[i, x] = cuisines_rate.loc[i, x]+1","c0b3a25e":"cui_rate = cuisines_rate.groupby('rate').sum().tail(10).T","3ea61ab8":"cui_rate.sort_values(4.0, ascending = False).head(50)","87e6290a":"df_listed_in = df[['name', 'location','listed_in(type)']]\ndf_listed_in = df_listed_in.drop_duplicates()\ndf9 = df_listed_in.groupby(['location','listed_in(type)'])['name'].count()\ndf9.to_csv('zomatodf9.csv')\ndf9 = pd.read_csv('zomatodf9.csv')\ndf9 = pd.pivot_table(df9, values=None, index=['location'], columns=['listed_in(type)'], fill_value=0, aggfunc=np.sum)\ndf9","f2b04506":"df_loc_res_type = pd.DataFrame()\nfor rest in df['listed_in(type)'].unique():\n      df_sub = df9[('name',rest)].sort_values(ascending=False).head(10)\n      df_sub= df_sub.rename(rest)\n      df_loc_res_type = pd.concat([df_loc_res_type, df_sub],axis = 1)\ndf_loc_res_type","a21aa952":"df9[('name','Pubs and bars')].sort_values(ascending=False).head(10)\n","088c6ecd":"df_top_rate = df[['name', 'location', 'rate', 'listed_in(type)']]\ndf_top_rate_avg = df_top_rate.groupby(['name',])['rate'].mean()\ndf_top_rate_avg.sort_values(ascending=False).head(101)","55ba766f":"df_top_rate = df[['name', 'location', 'rate', 'listed_in(type)']]\ndf_top_rate = df_top_rate.groupby(['name','listed_in(type)'])['rate'].mean()\ndf_top_rate=df_top_rate.to_frame()\ndf_top_rate_indexed = df_top_rate.sort_index()\nfor rest in df['listed_in(type)'].unique():\n      print('--------', rest, '----------')\n      print(df_top_rate_indexed.xs((slice(None), rest)).sort_values(\"rate\", ascending = False).head())","834f837f":"cuisine_data = pd.DataFrame(cuisines_type.sum(axis=0))\ncuisine_data\ncuisine_data.reset_index(inplace=True)\ncuisine_data.columns = ['Cuisines', 'Number of Resturants']\nTop20_cuisines= (cuisine_data.sort_values(['Number of Resturants'],ascending=False)).head(20)\nsns.barplot(Top20_cuisines['Cuisines'], Top20_cuisines['Number of Resturants'])\nplt.xlabel('Cuisines', fontsize=20)\nplt.ylabel('Number of Resturants', fontsize=20)\nplt.title('Top 20 Cuisines', fontsize=30)\nplt.xticks(rotation = 90)\nplt.show()","400566cd":"rest_data = pd.DataFrame(rest_type.sum(axis=0))\nrest_data\nrest_data.reset_index(inplace=True)\nrest_data.columns = ['rest_type', 'Number of Resturants']\nTop20_rest= (rest_data.sort_values(['Number of Resturants'],ascending=False)).head(20)\nsns.barplot(Top20_rest['rest_type'], Top20_rest['Number of Resturants'])\nplt.xlabel('rest_type', fontsize=20)\nplt.ylabel('Number of Resturants', fontsize=20)\nplt.title('Top 20 rest_type on Zomato', fontsize=30)\nplt.xticks(rotation = 90)\nplt.show()","176af13f":"Top20_rest['rest_type']","6f29e264":"df8 = pd.concat([df_loc_new, df7,df_cost], axis = 1)\ndf8.sort_values('votes', ascending= False).head(20)","fe36c56e":"df_st_marks_road=df[df.location == 'St. Marks Road']\ndf_st_marks_road","944233c7":"c = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            c.add(y.strip())\nb = df_st_marks_road['cuisines'].str.split(',').apply(func)\nprint(c)\na = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_cuisines['cuisines'].str.split(',').apply(func)\nprint(a)\nsmr_missing_cuisines = a.difference(c)\nsmr_opp = smr_missing_cuisines.intersection(Top20_cuisines['Cuisines'])\nprint(smr_opp)","ec0ff767":"c = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            c.add(y.strip())\nb = df_st_marks_road['rest_type'].str.split(',').apply(func)\nprint(c)\na = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_rest['rest_type'].str.split(',').apply(func)\nprint(a)\nsmr_missing_rest = a.difference(c)\nsmr_opp_rest = smr_missing_rest.intersection(Top20_rest['rest_type'])\nprint(smr_opp_rest)","97eb82b9":"df_church_street=df[df.location == 'Church Street']\ndf_church_street","ff2a69f5":"c = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            c.add(y.strip())\nb = df_church_street['cuisines'].str.split(',').apply(func)\nprint(c)\na = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_cuisines['cuisines'].str.split(',').apply(func)\nprint(a)\ncs_missing_cuisines = a.difference(c)\ncs_opp = cs_missing_cuisines.intersection(Top20_cuisines['Cuisines'])\nprint(cs_opp)","15be2615":"c = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            c.add(y.strip())\nb = df_church_street['rest_type'].str.split(',').apply(func)\nprint(c)\na = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_rest['rest_type'].str.split(',').apply(func)\nprint(a)\ncs_missing_rest = a.difference(c)\ncs_opp_rest = cs_missing_rest.intersection(Top20_rest['rest_type'])\nprint(cs_opp_rest)","6e6475c5":"df_cun_road=df[df.location == 'Cunningham Road']\ndf_cun_road","96287f95":"c = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            c.add(y.strip())\nb = df_cun_road['cuisines'].str.split(',').apply(func)\nprint(c)\na = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_cuisines['cuisines'].str.split(',').apply(func)\nprint(a)\ncr_missing_cuisines = a.difference(c)\ncr_opp = cr_missing_cuisines.intersection(Top20_cuisines['Cuisines'])\nprint(cr_opp)","66ea685b":"c = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            c.add(y.strip())\nb = df_cun_road['rest_type'].str.split(',').apply(func)\nprint(c)\na = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            a.add(y.strip())\nb = df_rest['rest_type'].str.split(',').apply(func)\nprint(a)\ncr_missing_rest = a.difference(c)\ncr_opp_rest = cr_missing_rest.intersection(Top20_rest['rest_type'])\nprint(cr_opp_rest)","986539bf":"df['kiosk']=df['rest_type'].str.contains(pat = 'Kiosk')\ndf_kiosk = df[df.kiosk == True]\ndf_kiosk = df_kiosk.drop_duplicates()","5cc37b01":"rest_kiosk = rest_type['Kiosk']\nrest_kiosk = rest_kiosk.to_frame()\nrest_kiosk['TF'] = (rest_kiosk['Kiosk'] > 0)\nrest_kiosk = rest_kiosk[rest_kiosk.TF == True]\nrest_kiosk","bfc5c361":"print('Average Cost for 2 in Kiosks in Bangalore: ', df_kiosk.cost.mean())\nprint('Median Cost for 2 in Kiosks in Bangalore: ', df_kiosk.cost.median())\nprint('Max. Cost for 2 in Kiosks in Bangalore: ', df_kiosk.cost.max())\nprint('Min. Cost for 2 in Kiosks in Bangalore: ', df_kiosk.cost.min())","a0108356":"## EDA","afda16e2":"### location and rating","a2dc54c2":"## Cleaning and Prepping the Data for EDA","ada1b5dd":"### listed_in (type) and location","b6d37186":"### No of different cuisines available location wise","b28ec32d":"Bakery and Indian are missing from Church Street.","095aabc8":"#### Dropping the rows with null values in location.","256b2e1a":"#### Clubbing all the blocks of Koramangala under one location","f4183763":"We can see that Church Street, St. Marks Road and Cunningham road has least amount of new restaurants with a high amount of foot fall.","a9a5accf":"### Please Up Vote if you liked!!!!!","13bfaf17":"'Takeaway', 'Kiosk', 'Sweet Shop', 'Microbrewery', 'Club', 'Food Truck', 'Food Court', 'Confectionery', 'Mess' are not present on Cunningham Road.","605095a3":"### location","b8c1c561":"### Dropping a few columns","4ac91269":"Pizza, Bakery and Indian are missing from St Marks Road.","2d82698d":"### book_table","8c9b6994":"### No of cuisines offered and rating","0e338608":"### No. of restaurants offereing online order (location wise)","4c6a746f":"There are 192 kiosks in Bangalore with the median cost for 2(approx) of rupees 255.","2449984d":"### listed_in (type)","cbf20bc5":"It can be seen that median rating for restaurants with online booking of table is way higher than that without online booking of table option.","3d018904":"## More about Church Street","4dc8a7a0":"## Reading the data","63a401fb":"### online_order","5d032c9e":"### name\n","05e85f1d":"## Importing the libraries","c515207c":"It can be seen that median rating for restaurants with online order is higher than that without online order option.","0d544868":"### Diffrent types of restaurants (location wise)","d9ddf1d7":"It can be observed that the average cost for 2 (approx.) for new restaurants is lower than that for all restaurants in almost all the locations.","44eb9197":"Number of NULL values in each column","8d66a68c":"### Table with Cost, Votes and New Restaurant Percentage (location wise)","99f242f6":"### Percentage of new restaurants (location-wise)","6aa8e870":"### Top 20 Cuisines in Bangalore","1b31ca0a":"## Checking for NULL values","b82b0d06":"### Distribution of Types of Restaurants","2ce211ce":"## More on Cunningham Road","2677c5bd":"### Online order and Rating","80d8b88c":"'Takeaway', 'Kiosk', 'Sweet Shop', 'Microbrewery', 'Club', 'Fine Dining', 'Food Truck', 'Food Court', 'Confectionery', 'Bakery', 'Delivery', 'Mess' are not present on Church Road.","2b943d81":"### Type of Restaurants and Rating","083b0607":"## More on Kiosk Rest Type","9257a5c2":"Percentage of NULL values in each column","3dce75a7":"### cuisines and rate","745f28e1":"### rest_type and location","b8f7983f":"Ice Cream and Indian are missing from Cunningham Road.","05fa37be":"'Beverage Shop', 'Takeaway', 'Kiosk', 'Sweet Shop', 'Microbrewery', 'Club', 'Fine Dining', 'Food Truck', 'Food Court', 'Confectionery', 'Bakery', 'Delivery', 'Mess' are not present on St. Marks Road.","890e8405":"#### No of rest_type (location wise)","07ead82f":"### Booking Table and Rating","579b589c":"#### NULL values on location column","f682d567":"### No of votes (location wise)","5e447160":"### Top Rated Restaurants","92a686b6":"### rate","5e874e1f":"There are 8792 restaurants in Bangalore spread with different outlets across the city.","63f44a7d":"## Looking at the data","d7a9a8d5":"### Cost Distribution and Rating","2f434ab1":"### Average cost of restaurants and Average cost for new restaurants","bbd2daf3":"Bufffets, Cafes, Pubs and Bars and Drinks & nightlife have a higher median rating and less varied rating than Delivery, Desserts and Dine-out. ","e6a2ee67":"### cost(for 2 people)","ee1d2ada":"### Top 20 Rest Type","f2a2b7c2":"### No. of restaurants offereing table booking (location wise)","2dde6f55":"## More on St. Marks Road"}}