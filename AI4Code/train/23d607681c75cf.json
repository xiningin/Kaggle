{"cell_type":{"6bd34a17":"code","ee2fcd40":"code","fe99b10d":"code","7dd1de5b":"code","c59c4ba2":"code","3351ab18":"code","97b28a9e":"code","e9db5b4f":"code","9cfff1d4":"code","1688d08c":"code","a5a4c612":"code","03983ce8":"code","8f83184a":"code","80e0329f":"code","dec1680c":"code","84b10c6d":"code","002ee953":"code","65c9f37a":"code","84ccc538":"code","66bdfbab":"code","0cbe6fda":"code","866bc0db":"code","0f7b5377":"code","61758d50":"code","cd8a5d49":"code","7fcc3314":"code","7eff5e80":"code","1b770fc6":"code","11f53c8d":"code","add069fd":"code","f91999b1":"code","67a1d36b":"code","9cda620b":"code","6a623e77":"code","7cfc7f0e":"markdown","8b486d75":"markdown"},"source":{"6bd34a17":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee2fcd40":"import seaborn as sn \nimport matplotlib.pyplot as plt \nimport datetime as dt ","fe99b10d":"data=pd.read_csv('\/kaggle\/input\/indian-startup-funding\/startup_funding.csv')","7dd1de5b":"data=data.replace('\\\\xc2\\\\xa0 ','').replace('\\\\\\\\xc2\\\\\\\\xa0','')","c59c4ba2":"##renaming columns \n\ndata.columns = ['SNo','Date','Startup_Name','Industry_Vertical','SubVertical','City','Investors_Name','InvestmentType','Amount','Remarks']\n\ndata.head()","3351ab18":"data.info()","97b28a9e":"data.Amount.isna().sum().sum()","e9db5b4f":"data.shape","9cfff1d4":"3044-960","1688d08c":"data.Amount.sort_values()[2050:2085]","a5a4c612":"#Converting Amount to Numerical so that we can use it in Visualisation \n\ndef change_amt(amount):\n    amt=[]\n    for x in amount:\n        x=str(x).replace(\",\",\"\")\n        x=str(x).lower().replace(\"\\\\xc2\\\\xa0\",\"\")\n        try:\n            x=int(x)\n        except:\n            x= -999 \n        amt.append(x)\n        \n    return amt\n        \ndata.Amount=change_amt(data.Amount)","03983ce8":"data.head(50)","8f83184a":"import warnings \nwarnings. filterwarnings(\"ignore\")","80e0329f":"df = pd.DataFrame({'date_time' : data.Date})\ndf['correct'] = pd.to_datetime(df['date_time'],errors='coerce',format=\"%d\/%m\/%Y\")\ndf[df.correct.isnull()]","dec1680c":"#Cleaning  dates\n\ndata['Date'][data['Date']=='12\/05.2015'] = '12\/05\/2015'\ndata['Date'][data['Date']=='13\/04.2015'] = '13\/04\/2015'\ndata['Date'][data['Date']=='15\/01.2015'] = '15\/01\/2015'\ndata['Date'][data['Date']=='22\/01\/\/2015'] = '22\/01\/2015'\ndata['Date'][data['Date']=='05\/072018'] = '05\/07\/2018'\ndata['Date'][data['Date']=='01\/07\/015'] = '01\/07\/2015'\ndata['Date'][data['Date']=='\\\\\\\\xc2\\\\\\\\xa010\/7\/2015'] = '10\/07\/2015'","84b10c6d":"data.Date= pd.to_datetime(data['Date'],errors='coerce',format=\"%d\/%m\/%Y\")","002ee953":"data.head()","65c9f37a":"data.Date.dt.month.value_counts()","84ccc538":"bar_var=data.Date.dt.year.value_counts()\n\nax = sn.barplot(bar_var.index,bar_var.values)\nax.set(xlabel='Year', ylabel='No. of Fundings Made',title=\"No. Of Funding V\/S Year\")\nplt.show()","66bdfbab":"data.head()","0cbe6fda":"data_cleaned=data[data.Amount!=-999]\n\n","866bc0db":"data_cleaned['year']=data_cleaned.Date.dt.year\n\ndata_year=data_cleaned.groupby('year',as_index=False)['Amount'].sum()\n\nax = sn.barplot(data_year.year,data_year.Amount,data=data_year)\nax.set(xlabel='Year', ylabel='Amount of Funding',title=\"Amount V\/S Year\")\nplt.show()","0f7b5377":"invest_count=data_cleaned.InvestmentType.value_counts()\ninvest_count","61758d50":"import re\nimport string\nPUNCT_TO_REMOVE = string.punctuation\ndef remove_punctuation(text):\n    \"\"\"custom function to remove the punctuation\"\"\"\n    return text.translate(str.maketrans('', '', PUNCT_TO_REMOVE))\ndata['InvestmentType'] = data['InvestmentType'].apply(lambda x: remove_punctuation(str(x)))\n\nfunding_map = {\n    \"SeedAngel Funding\": \"Seed Angel Funding\",\n    \"SeedFunding\": \"Seed Funding\",\n    \"PrivateEquity\": \"Private Equity\",\n    \"Crowd funding\": \"Crowd Funding\",\n    \"Angel  Seed Funding\": \"Seed Angel Funding\",\n    \"Seed  Angel Funding\": \"Seed Angel Funding\",\n    \"Seed Angle Funding\": \"Seed Angel Funding\",\n    \"Seed  Angle Funding\": \"Seed Angel Funding\",\n    \"SeednFunding\": \"Seed Funding\",\n    \"Seed funding\": \"Seed Funding\",\n    \"Seed Round\": \"Seed Funding\",\n    \"preSeries A\": \"PreSeries A\",\n    \"preseries A\": \"PreSeries A\",\n    \"Pre Series A\": \"PreSeries A\"\n}\n\nfor i, v in funding_map.items():\n    data['InvestmentType'][data['InvestmentType']==i] = v \n    \ndata.InvestmentType.value_counts()","cd8a5d49":"invest_count=data.InvestmentType.value_counts()\ninvest_count=invest_count.sort_values(ascending=False)[0:10]\n\ninvest=pd.DataFrame()\n\ninvest['InvestmentType']=invest_count.index\ninvest['Count']=invest_count.values\n\n\nax = sn.barplot(x='Count',y='InvestmentType',data=invest)\nax.set(xlabel='Count', ylabel='Investment Type',title=\"Top 10 Investment Type V\/S Count\")\n\nfor p in ax.patches:\n    width = p.get_width()\n    ax.text(width -1.5  ,\n            p.get_y()+p.get_height()\/2. + 0.2,\n            '{:1.0f}'.format(width),\n            ha=\"left\")\nplt.show()\n","7fcc3314":"data.head()","7eff5e80":"location_map = {\n    \"Bengaluru\": \"Bangalore\",\n    \"Delhi\": \"NCR\",\n    \"New Delhi\": \"NCR\",\n    \"Gurugram\": \"NCR\",\n    \"Gurgaon\": \"NCR\",\n    \"Noida\": \"NCR\"\n}\nfor i, v in location_map.items():\n    data['City'][data['City']==i] = v \n\nlocation_count=data.City.value_counts()\nlocation_count=location_count.sort_values(ascending=False)[0:10]\n\nlocation=pd.DataFrame()\n\nlocation['City']=location_count.index\nlocation['Count']=location_count.values\n\nax = sn.barplot(x='Count',y='City',data=location)\nax.set(xlabel='Count', ylabel='City',title=\"TOP 10 City V\/S Startup Count\")\n\nfor p in ax.patches:\n    width = p.get_width()\n    ax.text(width -1.5 ,\n            p.get_y()+p.get_height()\/2. + 0.1,\n            '{:1.0f}'.format(width),\n            ha=\"left\")\n\nplt.show()\n","1b770fc6":"Investors_Name=data[~data.Investors_Name.isna()]\n\ndata.Investors_Name.head(50)","11f53c8d":"from wordcloud import WordCloud, STOPWORDS\nimport random\nrandom.seed(123)\n\ninv_names = []\nfor invs in Investors_Name['Investors_Name']:\n    for inv in str(invs).split(\",\"):\n        if inv != \"\":\n            inv_names.append(inv.strip().lower().replace(\" \",\"_\").replace(\"'\",\"\"))\n\ndef grey_color_func(word, font_size, position, orientation, random_state=None,\n                    **kwargs):\n    #return \"hsl(0, 0%%, %d%%)\" % (font_size*3)\n    return (100, 100, font_size*3)\n\ndef plot_wordcloud(text, mask=None, max_words=40, max_font_size=80, figure_size=(24.0,16.0), \n                   title = None, title_size=40, image_color=grey_color_func):\n    stopwords = set(STOPWORDS)\n\n    wordcloud = WordCloud(background_color='white',\n                    stopwords = stopwords,\n                    max_words = max_words,\n                    prefer_horizontal = 1.0,\n                    max_font_size = max_font_size, \n                    min_font_size = 10,\n                    random_state = 42,\n                    #color_func = lambda *args, **kwargs: (140,0,0),\n                    #color_func = color_map(),\n                    colormap=\"Blues\",\n                    width=1200, \n                    height=600,\n                    mask = mask)\n    wordcloud.generate(str(text))\n    \n    plt.figure(figsize=figure_size)\n    if image_color:\n        #image_colors = ImageColorGenerator(mask);\n        plt.imshow(wordcloud.recolor(color_func=image_color), interpolation=\"bilinear\");\n        plt.title(title, fontdict={'size': title_size, 'color': 'blue',\n                                  'verticalalignment': 'bottom'})\n    else:\n        plt.imshow(wordcloud);\n        plt.title(title, fontdict={'size': title_size, 'color': 'blue', \n                                  'verticalalignment': 'bottom'})\n    plt.axis('off');\n    plt.tight_layout()  \n    \nplot_wordcloud(' '.join(inv_names), title=\"Investors with most number of funding deals\")","add069fd":"industry_df=data_cleaned.groupby('Industry_Vertical',as_index=False)['Amount'].sum()\n\nindustry_df=industry_df.sort_values(by='Amount',ascending=False)[0:10]\nindustry_df","f91999b1":"vertical_map = {\n    \"ECommerce\": \"eCommerce\",\n    \"E-Commerce\": \"eCommerce\",\n    \n}\nfor i, v in vertical_map.items():\n    data_cleaned['Industry_Vertical'][data_cleaned['Industry_Vertical']==i] = v \n\n    \nindustry_df=data_cleaned.groupby('Industry_Vertical',as_index=False)['Amount'].sum()\n\nindustry_df=industry_df.sort_values(by='Amount',ascending=False)[0:10]\nindustry_df\n\n\nax = sn.barplot(x='Amount',y='Industry_Vertical',data=industry_df)\nax.set(xlabel='Amount', ylabel='Industry_Vertical',title=\"TOP 10 Industry Vertical V\/S Amount Invested\")\n\nfor p in ax.patches:\n    width = p.get_width()\n    ax.text(width -1.5 ,\n            p.get_y()+p.get_height()\/2. + 0.1,\n            '{:1.0f}'.format(width),\n            ha=\"left\")\n\nplt.show()\n","67a1d36b":"startup_df=data_cleaned.groupby('Startup_Name',as_index=False)['Amount'].sum()\nstartup_df.head()","9cda620b":"startup_df","6a623e77":"startup_df=startup_df.sort_values(by='Amount',ascending=False)[0:10]\n\nax = sn.barplot(x='Amount',y='Startup_Name',data=startup_df)\nax.set(xlabel='Amount', ylabel='Startup',title=\"TOP 10 Startup V\/S Amount Invested\")\n\nfor p in ax.patches:\n    width = p.get_width()\n    ax.text(width -1.5 ,\n            p.get_y()+p.get_height()\/2. + 0.1,\n            '{:1.0f}'.format(width),\n            ha=\"left\")\n\nplt.show()\n","7cfc7f0e":"> As evident,there are many startups which have mutiple names in the Dataframe. Eg. 1mg & 1mg (Healthkartplus)\n> As there are 1600+ unique startup names in the df we can't change it. ","8b486d75":"> Bangalore is named as Bengaluru as well. So we should make them the same. Also Clubbing New Delhi,Gurgaon & Noida as NCR "}}