{"cell_type":{"a058324e":"code","747254c7":"code","06c7c3f0":"code","e36fbed9":"code","7136c09b":"code","df44ddaf":"code","68261c79":"code","d5f5140f":"code","cd16d59e":"code","878d059b":"code","c1b1617d":"code","a02e0e9d":"code","db4642a9":"code","00225e86":"code","723589b3":"code","35be7cf7":"code","3b53878a":"code","f1f867db":"code","71114492":"code","e8f7310d":"code","0cae1da6":"code","9659889f":"code","22833cd1":"code","1093ceaa":"code","ac5ea537":"code","5fe626ec":"code","8ef353d0":"code","d0bf29a9":"code","379a0dc8":"code","5877970d":"code","8ac025e3":"code","9e54c263":"code","6ff805f4":"code","ecde5a8c":"code","d0162594":"code","a411d804":"code","d8b33620":"code","0e2e26db":"code","1a5b8aea":"code","13786ae1":"code","3e24f05e":"code","a63ca863":"code","f9243fb3":"markdown","c5fc5a4b":"markdown","8661bbf6":"markdown","c7a7c230":"markdown","a9427bb5":"markdown","09095b0c":"markdown","795c599c":"markdown","b3e19cec":"markdown","92387b0d":"markdown"},"source":{"a058324e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","747254c7":"import pandas as pd\nWineData = pd.read_csv(\"..\/input\/red-wine-dataset\/wineQualityReds.csv\", index_col= 0)","06c7c3f0":"WineData.head()","e36fbed9":"#Cheking Histogram\nimport matplotlib\nfrom matplotlib import pyplot \n%matplotlib inline\npyplot.figure(figsize=(14,6))\npyplot.hist(WineData['volatile.acidity'])\npyplot.show()","7136c09b":"#Help from Python\nfrom scipy.stats import shapiro\n\nDataToTest = WineData['volatile.acidity']\n\nstat, p = shapiro(DataToTest)\n\nprint('stat=%.2f, p=%.30f' % (stat, p))\n\nif p > 0.05:\n    print('Normal distribution')\nelse:\n    print('Not a normal distribution')","df44ddaf":"#Lets genrate normally distributed data from Python\nfrom numpy.random import randn\nDataToTest = randn(100)","68261c79":"DataToTest","d5f5140f":"stat, p = shapiro(DataToTest)\n\nprint('stat=%.2f, p=%.30f' % (stat, p))\n\nif p > 0.05:\n    print('Normal distribution')\nelse:\n    print('Not a normal distribution')","cd16d59e":"# Example of the D'Agostino's K^2 Normality Test\nfrom scipy.stats import normaltest\nDataToTest = WineData['volatile.acidity']\n\nstat, p = normaltest(DataToTest)\n\nprint('stat=%.10f, p=%.10f' % (stat, p))\n\nif p > 0.05:\n    print('Normal')\n\nelse:\n    print('Not Normllay distributed')","878d059b":"FirstSample = WineData[1:30]['total.sulfur.dioxide']\nSecondSample = WineData[1:30]['free.sulfur.dioxide']\n\npyplot.plot(FirstSample,SecondSample)\npyplot.show()","c1b1617d":"#Spearman Rank Correlation\nfrom scipy.stats import spearmanr\nstat, p = spearmanr(FirstSample, SecondSample)\n\nprint('stat=%.3f, p=%5f' % (stat, p))\nif p > 0.05:\n    print('independent samples')\nelse:\n    print('dependent samples')","a02e0e9d":"#pearson correlation\nfrom scipy.stats import pearsonr\nstat, p = pearsonr(FirstSample, SecondSample)\n\nprint('stat=%.3f, p=%5f' % (stat, p))\nif p > 0.05:\n    print('independent samples')\nelse:\n    print('dependent samples')","db4642a9":"WineData[1:30].corr(method=\"pearson\")","00225e86":"#Tests whether two categorical variables are related or independent.\n#Assumptions - independent observation, size in each box of contingency table > 25\n# Example of the Chi-Squared Test\n","723589b3":"LoanData = pd.read_csv(\"..\/input\/my-dataset\/credit_train.csv\")","35be7cf7":"LoanData.head(10)","3b53878a":"contingency_data = pd.crosstab(LoanData['Purpose'], LoanData['Loan Status'],margins = False)","f1f867db":"contingency_data","71114492":"from scipy.stats import chi2_contingency","e8f7310d":"stat, p, dof, expected = chi2_contingency(contingency_data)\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('independent categories')\nelse:\n    print('dependent categories')","0cae1da6":"contingency_data = [[25,125],[1200,240]] #Observe the numbers carefully","9659889f":"stat, p, dof, expected = chi2_contingency(contingency_data)\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('independent categories')\nelse:\n    print('dependent categories')","22833cd1":"#Scores of me and Virat\nmy_score = [23,21,31,20,19,35,26,22,21,19]\nvirat_score = [46,42,62,40,38,70,52,44,42,38]","1093ceaa":"#Lets check mean of our scores\nimport numpy as np\nprint('Mukesh mean score:', np.mean(my_score))\nprint('Virat mean score:', np.mean(virat_score))","ac5ea537":"#One Sample T-test\nimport scipy\nscipy.stats.ttest_1samp(my_score,20)","5fe626ec":"#Independent Sample T-test\nscipy.stats.ttest_ind(my_score,virat_score)","8ef353d0":"my_score_second_Tour = [46,42,62,40,38,70,52,44,42,38]","d0bf29a9":"#Apired sample t-test\nscipy.stats.ttest_rel(my_score,my_score_second_Tour)","379a0dc8":"# Assumption -  Normal distributon, same variance, identical distribution","5877970d":"average_score = [40,44,60,50,48,68,55,46,44,54]","8ac025e3":"my_score","9e54c263":"average_score","6ff805f4":"virat_score\n","ecde5a8c":"tstat, p = scipy.stats.f_oneway(my_score, average_score, virat_score)\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('Same distribution of scores')\nelse:\n    print('Different distributions of scores')","d0162594":"#Assumptions - Idential distribution, observations can be ranked","a411d804":"class_1_score = [91,90,81,80,76]\nclass_2_score = [88,86,85,84,83]","d8b33620":"tstat, p = scipy.stats.mannwhitneyu(class_1_score, class_2_score)\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('Same distribution')\nelse:\n    print('Different distributions')","0e2e26db":"# Similarly check for Wilcoxon Signed-Rank Test\/Kruskal-Wallis H Test","1a5b8aea":"#Augmented Dickey-Fuller Test -  null hypothesis - Series is non stationary","13786ae1":"#Definition of stationary time series - constant mean and variance","3e24f05e":"from statsmodels.tsa.stattools import adfuller\nstock_price_data = [121,131,142,121,131,142,121,131,142]\nstat, p, lags, obs, crit, t = adfuller(stock_price_data)\n","a63ca863":"print('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('Series is not Stationary')\nelse:\n    print('Series is stationary')","f9243fb3":"# Parametic test 2 - Anova - Tests whether the means of two or more independent samples are significantly different.","c5fc5a4b":"# Definiton of Parametric test - Main assumption - data is normally distributed","8661bbf6":"# Test of Stationarity - very Important for time series analysis","c7a7c230":"# Normality test using K^2 Normality Test Test : tests If data is normally distributed \nAssumption : Observations are identically distributed","a9427bb5":"# Correlation Test - Pearson and Spearman\u2019s Rank Correlation\nAsumption - Identical and Normal Distribution","09095b0c":"# Non Parametric test 1 - Mann-Whitney U Test-Tests whether the distributions of two or more independent samples are equal or not.","795c599c":"# Parametic test 1- T-test","b3e19cec":"# Normality test using Shapiro-Wilk Test : tests If data is normally distributed \nAssumption : Observations are identically distributed","92387b0d":"# Correlation of categorical variable - Chi square test"}}