{"cell_type":{"c8bca5ce":"code","5608c330":"code","508c0955":"code","ec689ffd":"code","e008fed8":"code","40fc0971":"code","2fb5b30c":"code","4f97b973":"code","f63fc1dc":"code","109c5b87":"code","ecbd69aa":"code","4c6de824":"code","f6f25bb9":"code","bac5d01f":"code","3e7abb11":"code","bf01b558":"code","5dff2995":"code","0af69755":"code","0892888a":"code","c08fcd78":"code","c1e721f4":"code","66381581":"code","2fd78164":"code","9a818b07":"code","b5b36668":"code","ca5a6334":"code","d2103275":"code","3c08d0e6":"markdown"},"source":{"c8bca5ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5608c330":"ratings = pd.read_csv('..\/input\/ratings_small.csv')\nratings.head()","508c0955":"user_item = ratings.groupby(['userId', 'movieId'])['rating'].first().unstack(fill_value=0.0)","ec689ffd":"user_item.shape","e008fed8":"# What are the top rated movies for user 42\nuser_item.loc[42].sort_values(ascending=False).head()","40fc0971":"from scipy.sparse.linalg import svds\nU, sigma, Vt = svds(user_item, k = 50)","2fb5b30c":"U.shape","4f97b973":"Vt.shape","f63fc1dc":"sigma_diag_matrix=np.diag(sigma)","109c5b87":"all_user_predicted_ratings = np.dot(np.dot(U, sigma_diag_matrix), Vt)\n#all_user_predicted_ratings_demeaned = all_user_predicted_ratings +  user_ratings_mean.reshape(-1, 1)\npreds_df = pd.DataFrame(all_user_predicted_ratings, columns = user_item.columns, index=user_item.index)","ecbd69aa":"preds_df.shape","4c6de824":"preds_df.head()","f6f25bb9":"# Top-10 recommended movies for user 42\nuser_item.loc[42].sort_values(ascending=False).head(10)","bac5d01f":"movies_user_42 = user_item.loc[42]","3e7abb11":"high_rated_movies_42 = movies_user_42[movies_user_42 > 3].index","bf01b558":"high_rated_movies_42","5dff2995":"movies_recommended_for_42 = preds_df.loc[42]","0af69755":"movies_high_recommend_for_42 = movies_recommended_for_42[movies_recommended_for_42 > 3].index","0892888a":"movies_high_recommend_for_42","c08fcd78":"# What are the movies that have a high recommendation (> 3) but that have no rating yet\nset(movies_high_recommend_for_42) - set(high_rated_movies_42)","c1e721f4":"# No strong recommendations for user 42","66381581":"def get_high_recommended_movies(userId):\n    movies_rated_by_user = user_item.loc[userId]\n    movies_high_rated_by_user =  movies_rated_by_user[movies_rated_by_user > 4].index\n    movies_recommended_for_user = preds_df.loc[userId]\n    movies_high_recommend_for_user = movies_recommended_for_user[movies_recommended_for_user > 4].index\n    return set(movies_high_recommend_for_user) - set(movies_high_rated_by_user)","2fd78164":"get_high_recommended_movies(42)","9a818b07":"get_high_recommended_movies(314)","b5b36668":"get_high_recommended_movies(217)","ca5a6334":"# User 217 should go watching movie 1198: we expect a rating of 4.2!\npreds_df.loc[217, 1198]","d2103275":"for user_id in range(user_item.shape[0])[1:]:\n    recommend_set = list(get_high_recommended_movies(user_id))\n    rating_set = map(lambda x: round(preds_df.loc[user_id, x],2), recommend_set)\n    result = list(zip(recommend_set, rating_set))\n    if len(recommend_set) > 0:\n        print('USER_ID: {}, (FILME,RATING): {}'.format(user_id, result))    ","3c08d0e6":"## About SVD and Python\n[How to Calculate the Singular-Value Decomposition (SVD) from Scratch with Python](https:\/\/machinelearningmastery.com\/singular-value-decomposition-for-machine-learning\/)"}}