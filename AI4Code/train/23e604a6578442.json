{"cell_type":{"8e7e676b":"code","339ffc27":"code","11559cd1":"code","90b7e408":"code","113dc08d":"code","06c8931f":"code","9a911008":"code","7e52cf0d":"code","72e9439b":"code","9801cff9":"code","e9e7a470":"code","a992a859":"code","54eb59ab":"code","f08c1aba":"code","c50b3008":"code","34c5f68e":"code","9ed919b0":"code","07a6e56d":"code","fba46346":"code","a9c33e79":"code","2375a9ee":"code","3dfd1630":"code","8a47cdb0":"code","5399d270":"code","85419796":"code","a165bd6b":"code","bfd13f3b":"code","e1c329dd":"code","2875c04a":"code","d9501996":"code","8f9baabf":"code","35dbe746":"code","d0cb176f":"code","352aa3f3":"code","1b54ed6c":"code","bb68ec45":"markdown","5a5344f0":"markdown","42b857de":"markdown","b7b1191d":"markdown","6600a147":"markdown","f5152f27":"markdown","9d748215":"markdown","0abda3ca":"markdown"},"source":{"8e7e676b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\nsns.set_theme(context='talk', style='darkgrid')","339ffc27":"#read the csv file \nlife_expectancy_df = pd.read_csv('..\/input\/life-expectancy-who\/Life Expectancy Data.csv')\n\n#preview\nlife_expectancy_df.head(10)","11559cd1":"#summary\nlife_expectancy_df.info()","90b7e408":"#rename columns because I'm OCD\n#lowercase\nlife_expectancy_df.columns = life_expectancy_df.columns.str.lower()\n\n#replace white space with _\nlife_expectancy_df.columns = life_expectancy_df.columns.str.replace(' ', '_')\n\n#rename columns\nlife_expectancy_df.rename({'life_expectancy_':'life_expectancy', \n                           'measles_':'measle', \n                           '_bmi_':'bmi', \n                           'under-five_deaths_':'under_five_deaths',\n                           'diphtheria_':'diphtheria',\n                           '_hiv\/aids': 'hiv\/aids',\n                           '_thinness__1-19_years':'thinness_1_to_19_years',\n                           '_thinness_5-9_years':'thinness_5_to_9_years'}, axis=1, inplace=True) ","113dc08d":"#drop 'Country' to reduce dimension\nlife_expectancy_df.drop(columns=['country'], inplace=True)","06c8931f":"#check if there are any Null values\nplt.figure(figsize=(10, 10))\n\n#plot\nsns.heatmap(life_expectancy_df.isnull(), yticklabels = False, cbar = False, cmap=\"Blues\")","9a911008":"#statistical summary \nlife_expectancy_df.describe()","7e52cf0d":"#perform one-hot encoding\nlife_expectancy_df = pd.get_dummies(life_expectancy_df, columns = ['status'])","72e9439b":"#check the number of null values for the columns having null values\nlife_expectancy_df.isnull().sum()[np.where(life_expectancy_df.isnull().sum() != 0)[0]]\n","9801cff9":"#since most of the are continous values we fill them with mean\nlife_expectancy_df = life_expectancy_df.apply(lambda x: x.fillna(x.mean()),axis=0)","e9e7a470":"life_expectancy_df.isnull().sum()[np.where(life_expectancy_df.isnull().sum() != 0)[0]]","a992a859":"!pip install dataprep\nfrom dataprep.eda import create_report","54eb59ab":"#create report\nreport = create_report(life_expectancy_df, title='My Report')\nreport","f08c1aba":"!pip install h2o\nimport h2o\nfrom h2o.automl import H2OAutoML","c50b3008":"#initiate\nh2o.init()","34c5f68e":"#convert pandas df into h2o frame\nh2o_df = h2o.H2OFrame(life_expectancy_df)","9ed919b0":"#preview\nh2o_df","07a6e56d":"#statistics\nh2o_df.describe()","fba46346":"#split train and test sets\ntrain, test = h2o_df.split_frame(ratios=[.75])","a9c33e79":"#define X and y\nX = train.columns\ny = 'life_expectancy'\nX.remove(y)","2375a9ee":"X","3dfd1630":"y","8a47cdb0":"#initiate\naml = H2OAutoML(stopping_metric='RMSE',     #for regression\n                seed=121,\n                max_models=30)\n\n#train\naml.train(x=X, \n          y=y, \n          training_frame=train)","5399d270":"#leaderboard\nlb = aml.leaderboard\nlb.head(rows=lb.nrows)","85419796":"#compare all models\nexm = aml.explain(test)","a165bd6b":"#look at best model\nse = aml.leader\nmetalearner = h2o.get_model(se.metalearner()['name'])\n\n#look at important variables\nmetalearner.varimp()","bfd13f3b":"#variable importance heatmap\nva_plot = aml.varimp_heatmap()","e1c329dd":"#explain a single H2O model (e.g. leader model from AutoML)\nexm = aml.leader.explain(test)","2875c04a":"#make prediction\npreds = aml.leader.predict(test)","d9501996":"#combine the prediction with the test dataset\ndf = test.cbind(preds)\n\n#preview\ndf.head(10)","8f9baabf":"h2o_as_pd = h2o.as_list(df)","35dbe746":"h2o_as_pd.to_csv('prediction.csv')","d0cb176f":"prediction = pd.read_csv('prediction.csv', index_col=0)\nprediction.head(10)","352aa3f3":"preds = prediction[['life_expectancy', 'predict']].head(20)\npreds","1b54ed6c":"preds.to_csv('preds.csv')","bb68ec45":"## Train Test Split","5a5344f0":"# Stacked Ensemble Exploration","42b857de":"# Auto EDA","b7b1191d":"# Leaderboard Exploration","6600a147":"## Train","f5152f27":"# AutoML","9d748215":"# Data Cleaning","0abda3ca":"## Make Prediction with Metalearner"}}