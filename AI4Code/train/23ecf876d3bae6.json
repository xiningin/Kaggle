{"cell_type":{"b108c25d":"code","a6e7ef25":"code","688a991b":"code","3210066f":"code","8fd2ef68":"code","dfafcd08":"code","309151bb":"code","2497b2f3":"code","53249906":"code","4f09bc5f":"code","4e3a2f8f":"code","904f8a72":"code","faa9e8e3":"code","d6440853":"code","af6477f7":"code","9a904773":"code","a93b2495":"code","d9c4da6f":"code","790c1dbd":"code","ebb7c230":"code","b6013e8d":"code","f18bfbfd":"code","712279c6":"code","111b65c2":"code","b12e2c04":"code","87771cce":"code","93796204":"code","22dc47ad":"code","eeeaf3e1":"code","a9b6022e":"code","0b1c26c2":"code","63a3d027":"code","e73550ea":"code","d0cd48de":"code","ca267f89":"code","b8960b2f":"code","a43465be":"code","4aaac6eb":"code","2f687dad":"code","4b2e1ed8":"code","24e407c3":"code","b3020eac":"code","43c91d5c":"code","17bf4b90":"code","7fcedae4":"code","e65a5f5f":"code","d8bafe35":"code","54773559":"code","05bbdb90":"code","bd12890b":"code","f3209834":"code","c5396abe":"code","9a863e06":"code","8633c3f9":"code","814b2a91":"code","0673e474":"markdown","0c768d26":"markdown","7546fadf":"markdown","c1de7225":"markdown","c5f8f8bc":"markdown","87ef3a41":"markdown","538c8f2d":"markdown","8e6c45c0":"markdown","e1a3e1e4":"markdown","79ec237f":"markdown","e5570560":"markdown","641b8f82":"markdown","585dc44b":"markdown","62783c5e":"markdown","3954d1bb":"markdown"},"source":{"b108c25d":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as  pd \nplt.rcParams['figure.figsize'] = (20, 10)\n%matplotlib inline\n\ndf=pd.read_csv(\"..\/input\/anz-synthesised-transaction-dataset\/anz.csv\")","a6e7ef25":"df.head()","688a991b":"df.dtypes","3210066f":"df.isnull().sum()","8fd2ef68":"df2=df.drop(['merchant_code','bpay_biller_code'],axis=1)","dfafcd08":"df2.describe()","309151bb":"upper=df2['amount'].quantile(0.99)\nlower=df2['amount'].quantile(0.01)","2497b2f3":"df2[(df2['amount']<upper)&(df2['amount']>lower)]","53249906":"lower_limit=df2['balance'].quantile(0.01)\nUpper_limit=df2['balance'].quantile(0.99)","4f09bc5f":"df3=df2[(df2['balance']>lower_limit)&(df2['balance']<Upper_limit)]","4e3a2f8f":"df3['date']=df3['date'].apply(pd.to_datetime)\n","904f8a72":"#extracting months and day from date column \ndf3['Month']=df3['date'].dt.month\n#since the months are 8,9,10 ,let's name it august , sept, oct respectively\nmonths={8:'August',9:'Sept',10:'October'}\ndf3['Month']=df3['Month'].map(months)","faa9e8e3":"df3.head()","d6440853":"#extract the   name of the day from the date column as well using dt.weekday\ndf3['Weekday']=df3['date'].dt.weekday\ndays_of_week={0:'MON',1:'Tues',2:'Wed',3:'Thurs',4:'Fri',5:'Sat',6:'Sun'}\ndf3['Weekday']=df3['Weekday'].map(days_of_week)","af6477f7":"#extract the time of transaction for the transaction column \ndf3['Time of trasncation']=df3['extraction'].apply(lambda x:x.split('T')[1].split(\":\")[0])","9a904773":"#now let's check the correlation between the features using heatmap\nplt.rcParams['figure.figsize'] = (12, 8)\nsns.heatmap(df3.corr() ,annot=True,vmax=0.3,linewidths=0.5)","a93b2495":"#checking average transaction of the month of October\noct=df3['Month']=='October'\ndf3.loc[oct,'amount'].mean()\n\n","d9c4da6f":"#maximum transaction of the month of october\noct=df3['Month']=='October'\nmaximum_transaction= df3.loc[oct,'amount'].max()\nmaximum_transaction","790c1dbd":"#minimum transaction of the month of october\noct=df3['Month']=='October'\nminimum_transaction =df3.loc[oct,'amount'].min()\nminimum_transaction","ebb7c230":"#let's the customers who made the maximum and minimum transactions on the month of october\noct_trans= df3[df3['Month']=='October']\noct_trans[oct_trans['amount']==oct_trans['amount'].max()]['first_name']\n","b6013e8d":"oct_trans= df3[df3['Month']=='October']\noct_trans[oct_trans['amount']==oct_trans['amount'].min()]['first_name']","f18bfbfd":"#checking average transaction of the month of Sept\nsept=df3['Month']=='Sept'\ndf3.loc[sept,'amount'].mean()\n\n","712279c6":"#minimum transaction of the month of sept\nSept=df3['Month']=='Sept'\nminimum_transaction_Sept =df3.loc[Sept,'amount'].min()\nminimum_transaction_Sept","111b65c2":"#maximum transaction of the month of Sept\nSept=df3['Month']=='Sept'\nmaximum_transaction_sept =df3.loc[Sept,'amount'].max()\nmaximum_transaction_sept","b12e2c04":"#let's the customers who made the maximum and minimum transactions on the month of Sept\nSept_trans= df3[df3['Month']=='Sept']\nSept_trans[Sept_trans['amount']==Sept_trans['amount'].max()]['first_name']\n","87771cce":"#let's the customers who made the maximum and minimum transactions on the month of Sept\nSept_trans= df3[df3['Month']=='Sept']\nSept_trans[Sept_trans['amount']==Sept_trans['amount'].min()]['first_name']","93796204":"#checking average transaction of the month of August\naugust=df3['Month']=='August'\ndf3.loc[august,'amount'].mean()\n","22dc47ad":"#minimum transaction of the month of August\naugust=df3['Month']=='August'\nminimum_transaction_august =df3.loc[august,'amount'].min()\nminimum_transaction_august","eeeaf3e1":"#maximum  transaction of the month of August\naugust=df3['Month']=='August'\nmax_transaction_august =df3.loc[august,'amount'].max()\nmax_transaction_august","a9b6022e":"#let's the customers who made the maximum and minimum transactions on the month of August\nAugust_trans= df3[df3['Month']=='August']\nAugust_trans[August_trans['amount']==August_trans['amount'].max()]['first_name']","0b1c26c2":"#let's the customers who made the maximum and minimum transactions on the month of August\n#check for minimum \nAugust_trans= df3[df3['Month']=='August']\nAugust_trans[August_trans['amount']==August_trans['amount'].min()]['first_name']","63a3d027":"df3.head()","e73550ea":"#let's check the how the amount of transaction has changed during the three months\nsns.catplot(x='Month',y='amount',data=df3,kind='bar' )\nplt.title('Monthly transactions last three Months')\n\n","d0cd48de":"#let's check the how the amount of transaction has changed during the three months\nsns.catplot(x='Weekday',y='amount',data=df3,kind='bar' )\nplt.title('Transactions in days of the week')\nplt.xticks(rotation=45)","ca267f89":"#let's check what time of the day does most of the transactions occurs\nsns.relplot(x='Time of trasncation',y='amount',data=df3,kind='line' )\nplt.title('Transactions in days of the week')\nplt.xticks(rotation=90)","b8960b2f":"#let's have a look on the  most time of transactions in the whole week \nsns.relplot(x='Time of trasncation',y='amount',data=df3,kind='line', row='Weekday' )\nplt.title('Transactions in days of the week')\nplt.xticks(rotation=90)\nplt.savefig('output.png',dpi=300)\n","a43465be":"#let's have a look on the sum of transactions in the last three months \nsum_of_months=df3.groupby('Month')['amount'].agg('sum')\n\n\nplt.plot(sum_of_months.sort_values(ascending=True),marker='o',linestyle='dashed')\nplt.title('Total transactions of last three Months')\nplt.savefig('total_three_sum.png')","4aaac6eb":"sum_of_days=df3.groupby('Weekday')['amount'].agg('sum')\n\n\nplt.plot(sum_of_days.sort_values(ascending=True),marker='o',linestyle='dashed')\nplt.title('Total transactions during the days ')\nplt.savefig('total_week.png')","2f687dad":"mean_of_months=df3.groupby('Month')['amount'].agg('mean').sort_values(ascending=True)\nplt.plot(mean_of_months,marker='o',linestyle='dashed',)\nplt.title('Mean Transactions of the three Months')\nplt.savefig('mean_transactions_in_month.png')","4b2e1ed8":"mean_of_the_days=df3.groupby('Weekday')['amount'].agg('mean').sort_values(ascending=True)\nplt.plot(mean_of_the_days,marker='o',linestyle='dashed',)\nplt.title('Mean Transactions of the Weekdays')\nplt.savefig('mean_transactions_in_days.png')","24e407c3":"#let's compare the amount of transactions to the gender.\nsns.catplot(x='amount',y='gender',data=df3,kind='bar')\nplt.savefig('gender.png')","b3020eac":"#let's now make the gender the hue \nsns.countplot(x='Month',hue='gender',data=df3)\nplt.title('Transaction of the last three months based on gender')\nplt.savefig('Transaction of the last three months based on gender.png')","43c91d5c":"#let's have a look on which gender makes more transactions during the day\nax=sns.countplot(x='Weekday',hue='gender',data=df3,)\ntotal=float(len(df3))\nfor p in ax.patches:\n  height=p.get_height()\n  ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:.2%}'.format(height\/total),\n            ha=\"center\") \n  \nplt.title('Number of transactions made on each day  with a gender comparison ')\n","17bf4b90":"sns.relplot(x='age',y='balance',data=df3,kind='line')\nplt.title(\"The effect of Age on the Cutomer's Balance\")\nplt.savefig('age-balance.png')","7fcedae4":"#let's have a look from where most of the transactions occur\ndf['merchant_state'].value_counts()\nsns.set(style=\"darkgrid\")\nsns.countplot(df3['merchant_state'])\nplt.title('Number of Transaction done in each state')\nplt.savefig('No_trans_per_State')","e65a5f5f":"#let's have a look on where the transactions took place \nsns.set(style=\"darkgrid\")\nax=sns.countplot(df3['txn_description'])\ntotal=float(len(df3))\nfor p in ax.patches:\n  height=p.get_height()\n  ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:.2%}'.format(height\/total),\n            ha=\"center\") \nplt.title('Percentage of Source by reason of the transaction')\nplt.savefig('placeoftrans.png')","d8bafe35":"#let's check the amount of transaction that occured in each state\nplt.rcParams['figure.figsize'] = (20, 10)\n\nsns.catplot(x='merchant_state',y='amount',data=df3,kind='bar')\nplt.title('Amount of transactions in each state')","54773559":"#let's take a look on the mean transaction for each gender \ngenderism=df3.groupby('gender')\ngenderism['amount'].mean()","05bbdb90":"#let's have a look for those who used debit or credit for different gender \nplt.figure(figsize=(8,8))\nsns.countplot(x='movement',hue='gender',data=df3)","bd12890b":"#let's have a look for our best 5 customer who made the maximum transactions\nprint(df3['first_name'].value_counts().head(5))\nsns.countplot(y='first_name', order=df3['first_name'].value_counts().head(5).index[:5] ,data=df3)","f3209834":"#let's have a look on the least 10 customers \nprint(df3['first_name'].value_counts(sort=True).nsmallest(10))\ntail_cust=df3['first_name'].value_counts(sort=True).nsmallest(10)\nmycolors=['r','b','k','y','m','c','#16A085','salmon' , '#32e0c4']\ntail_cust.plot.barh(color=mycolors)","c5396abe":"#let's see the min and max amount of trans in the state\nmerchan_grp=df3.groupby('merchant_state')\nagg_merchant_states=merchan_grp['amount'].agg(['mean','max','min'])\nagg_merchant_states","9a863e06":"#let's see the states with maximum transactions\nagg_merchant_states['max'].plot.barh(color=mycolors)\nplt.title('Maximum amount of transactions in Each state')\nplt.xlabel('Amount')\nplt.ylabel('Merchant_state')","8633c3f9":"month_grp = df3.groupby(['Month'])\navg_amt_tran_month = month_grp['amount'].mean()\navg_amt_tran_month.plot.barh(color=mycolors)","814b2a91":"day_grp = df3.groupby(['Weekday'])\navg_amt_tran_day = day_grp['amount'].mean()\navg_amt_tran_day.plot.barh(color=mycolors)","0673e474":"Things we can infer from the heatmap :\n\n**Considerable Correlation**\n\n1.The amount and balance have a pretty good correlation together\n\n2.The amount and age have a decent correlation which we can consider.\n\n3.The balance and age have a strong correlation.\n\n\n **Non-Considerable Correlation**\n\n1.Card_flag_present has a negative correlation with both age and amount\n\n\n\n\n\n\n\n\n\n\n\n\nWe will start filtering the months and analyzing them \n","0c768d26":"**Most of the transaction is a sales-pos.**","7546fadf":"its clear that transactions were the highest in the month of **october**  and when viewed in days , **Monday** is the day where most of the transactions occurs.\n","c1de7225":"**On average the transactions during months are higher in october and during days of the week are higher in Mondays.**","c5f8f8bc":"**Most of the transaction occurs in the days of the week occurs between 12pm to 1pm.**\n","87ef3a41":"![alt text](https:\/\/static.coindesk.com\/wp-content\/uploads\/2016\/06\/anz-group-press-image.jpg)","538c8f2d":"# Before we start any analysis its better to consider the outliers in the amount column and the balance column because its easy to see using the describe attribute that there's a minimum balance of 0.24 and and a transaction amount of 0.10  and both will affect the accuracy of our analysis.","8e6c45c0":"In the month of October :\n\nThe mean transaction is **195 AUD.**\n\nThe maximum transaction is **8835.98 AUD** and its was made by **Tim** \n\nThe minimum transaction is** 0.1 AUD** and it was made by **Diana** and **Derek**\n\n","e1a3e1e4":"## **Number of transactions made by customers each month , on average ?**","79ec237f":"In the month of August :\n\nThe mean transaction is **188.3 AUD**.\n\nThe maximum transaction is **8835.98** AUD  and its was made by **Tim** \n\nThe minimum transaction is **1.54 AUD**  and it was made  **Edward**","e5570560":"In the month of September :\n\nThe mean transaction is **182 AUD**.\n\nThe maximum transaction is **8835.98** AUD  and its was made by **Tim** \n\nThe minimum transaction is 0.1 AUD and it was made  **Jacqueline**, **Jeffrey** , **Catherine**","641b8f82":"## **Number of transactions made by customers each day , on average ?**","585dc44b":"**We should give more attention and customer service for clients who's age is between 32-35 and age 74-79 Approximately.**","62783c5e":"**The transactions in NSW state and VIC has the most transactions**","3954d1bb":"# We can see that 90% of merchant code and bpay_biller_code are missing so its better to remove it or ignore it.\n\n\n\n"}}