{"cell_type":{"40334958":"code","38cd7bb4":"code","c2205156":"code","c5478c86":"code","e2b8369c":"code","b133d7a5":"code","83486a58":"code","f88f2189":"code","7df15d09":"code","325f9a9e":"code","e41ad9de":"code","11ea7ec0":"code","126962ab":"markdown","beebd491":"markdown","70dbb42a":"markdown"},"source":{"40334958":"import numpy as np\nimport pandas as pd\n# from catboost import Pool, CatBoostRegressor\nfrom sklearn.preprocessing import OrdinalEncoder, StandardScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\n","38cd7bb4":"# Load the training data\ntrain = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\", index_col=0)\ntest = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\", index_col=0)\n\n# Preview the data\ntrain.head()","c2205156":"#Target \ny = train['target']\nf = train.drop(['target'],axis = 1)","c5478c86":"f.head()","e2b8369c":"#Choosing categorical columns\n# cat_col = [c for c in features.columns if 'cat' in c]\ncat_col = [c for c in f.columns if f[c].dtype =='object']\nprint(cat_col)\n#numerical columns\nnum_col = [c for c in f.columns if f[c].dtype in ['int64','float64']]\nprint(num_col)\n\n#cmbined categoricals and numericals\nall_col = cat_col + num_col\nX = f[all_col].copy()\nX_test = test[all_col].copy()\n","b133d7a5":"# Define column transfermer for standardizing num_col and encoding cat_col\npreprocessor = ColumnTransformer(\n    [\n        ('num',StandardScaler(),num_col),\n        ('cat',OrdinalEncoder(),cat_col)\n    ])","83486a58":"#Train test split\nX_t,X_v,y_t,y_v = train_test_split(X,y, train_size = 0.8,test_size = 0.2 ,random_state =10)","f88f2189":"#Define Models\nmodel = DecisionTreeRegressor(\n    max_leaf_nodes = 100,\n    random_state = 1,\n    splitter = 'best',\n    max_depth = 9)","7df15d09":"#Define Models\nmodel = DecisionTreeRegressor(\n    max_leaf_nodes = 200,\n    random_state = 1,\n    splitter = 'best',\n    max_depth = 9,\n    min_weight_fraction_leaf = 0.01,\n    max_features = 'auto',\n    min_samples_leaf = 2\n    \n    \n      )\n#Define Pipeline\npipe = Pipeline(steps = [('preprocessor',preprocessor),('model',model)])\n\n# pipe[0].fit(X_t)\n\npipe.fit(X_t,y_t)\npredict_value = pipe.predict(X_v)\n# all_value[n]=mean_squared_error(predict_value,y_v)\nprint(\"Mean Square Error:\", mean_squared_error(predict_value,y_v))","325f9a9e":"\n# Mean Square Error: 0.5504416582285465\n\npredict_test = pipe.predict(X_test)\npredict_test","e41ad9de":"output = pd.DataFrame({'id': X_test.index,\n                       'target': predict_test})\noutput.to_csv('submission.csv', index=False)","11ea7ec0":"output","126962ab":"# CatBoost Regressor","beebd491":"## The Data","70dbb42a":"### Choose categorical features."}}