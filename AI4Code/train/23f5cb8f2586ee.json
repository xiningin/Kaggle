{"cell_type":{"8b4668ae":"code","d0156eaa":"code","ae335454":"code","7ebbf460":"code","6047b58b":"code","a2a43ecf":"code","ccbf3c5c":"code","c7810a24":"code","30a0baa9":"code","14553352":"code","b0a42710":"code","ccd9dd36":"code","7d2007f6":"code","2dfb5870":"code","7f86ee2e":"code","7f7ec99b":"code","9f6acb87":"code","8d20d2a5":"code","aef580eb":"code","191836d4":"code","2c8bdcad":"code","7d832e3e":"code","ea0409f1":"markdown","03227f0e":"markdown","d1e82131":"markdown","0a89a585":"markdown","3eaaac9e":"markdown","77305a2e":"markdown","be477075":"markdown","c810a2e6":"markdown","48a8fc7f":"markdown","a30ddbff":"markdown","ee352ffa":"markdown","7fcd4b34":"markdown","38451d23":"markdown","4ac548ef":"markdown","c41e383a":"markdown","3a8f306f":"markdown","5ac50e60":"markdown","d8896bea":"markdown","d3bec599":"markdown","35d1aeb3":"markdown"},"source":{"8b4668ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d0156eaa":"#Import Libraries\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as smf\n\nfrom sklearn.metrics import accuracy_score, roc_auc_score, roc_curve, confusion_matrix, auc\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC","ae335454":"# load data:\nhotel = pd.read_csv(\"\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv\")","7ebbf460":"# Quick look or Sample Data \nhotel.head()","6047b58b":"# checking for missing values\nhotel.isnull().sum()","a2a43ecf":"# handling Missing values\nhotel['children'].fillna(0,inplace=True)\nhotel['country'].fillna('PRT',inplace=True)\nhotel.drop(['agent','company'],axis=1,inplace=True)","ccbf3c5c":"# \uf0d8How many Bookings were Cancelled at the Hotel?\nsns.set(style = \"darkgrid\")\nplt.title(\"Is Booking Canceled or not\", fontdict = {'fontsize': 20})\nax = sns.countplot(x = \"is_canceled\", data = hotel)","c7810a24":"#\uf0d8How many Bookings were Cancelled by Hotel Type?\nsns.set(style = \"darkgrid\")\nplt.title(\"Is Canceled or not by Hotel Type\", fontdict = {'fontsize': 20})\nax = sns.countplot(x = \"hotel\", hue = 'is_canceled', data = hotel)","30a0baa9":"# \uf0d8Which Month is the Most Occupied with Bookings at the Hotel?\nmonth_sorted = ['January','February','March','April','May','June','July','August','September','October','November','December']\nplt.figure(figsize=(14,6))\nplt.title(\"what times of the year do we have the highest bookings\", fontdict = {'fontsize': 20})\nsns.countplot(hotel['arrival_date_month'], palette='tab10', order = month_sorted)\nplt.xticks(rotation = 90)\nplt.show()","14553352":"#\uf0d8Which Month Has Highest Number of Cancellations?\nmonth_sorted = ['January','February','March','April','May','June','July','August','September','October','November','December']\nplt.figure(figsize = (13,10))\nsns.set(style=\"dark\")\nplt.title(\"No. of Cancellation -- Monthly \", fontdict={'fontsize': 20})\nsns.barplot(x = 'arrival_date_month', y = 'is_canceled', data = hotel, order = month_sorted);","b0a42710":"# Total Number of Bookings by Market Segment\nplt.figure(figsize = (13,10))\nsns.set(style = \"darkgrid\")\nplt.title(\"Segments wise booking\", fontdict = {'fontsize':20})\nax = sns.countplot(x = \"market_segment\", data = hotel)","ccd9dd36":"# Total Number of Bookings cancellation by Market Segment\nplt.figure(figsize = (13,10))\nsns.set(style = \"darkgrid\")\nplt.title(\"Booking Cancellation by Segments\", fontdict = {'fontsize':20})\nax = sns.countplot(x = \"market_segment\", hue = 'is_canceled', data = hotel)","7d2007f6":"# Arrival Date Year vs. Lead Time By Booking Cancellation Status\nsns.set(style = \"darkgrid\")\nplt.title(\"Arrival Date Year vs Lead Time By Booking Cancellation Status\", fontdict = {'fontsize': 20})\nax = sns.barplot(x = \"arrival_date_year\", y = \"lead_time\" ,hue = 'is_canceled', data = hotel)\n","2dfb5870":"# \uf0d8deposit type vs cancellation status\nplt.figure(figsize=(14,6))\nplt.title(\"Booking Canceled or not by Deposite type\", fontdict = {'fontsize': 20})\nsns.countplot(x='deposit_type',data=hotel,hue='is_canceled',palette='hls')\nplt.show()","7f86ee2e":"#Some subplot of remaining attributes:\nplt.figure(figsize=(16,12))\nsns.set(palette = \"tab10\")\nplt.subplot(221)\nsns.countplot(hotel['meal'], hue=hotel['is_canceled'])\nplt.xlabel('Meal Type')\nplt.subplot(222)\nsns.countplot(hotel['customer_type'], hue=hotel['is_canceled'])\nplt.xlabel('customer_type Type')\nplt.subplot(223)\nsns.countplot(hotel['reserved_room_type'], hue=hotel['is_canceled'])\nplt.xlabel('Reserved Room Type')\nplt.subplot(224)\nsns.countplot(hotel['reservation_status'], hue=hotel['is_canceled'])\nplt.xlabel('Reservation Status')\nplt.show()","7f7ec99b":"hotel = hotel.drop(['meal','country','reserved_room_type','assigned_room_type','deposit_type','reservation_status','reservation_status_date'], axis=1)\nhotel = pd.concat([hotel, \n                 pd.get_dummies(hotel['hotel'], drop_first=True), \n                 pd.get_dummies(hotel['arrival_date_month'], drop_first=True), \n                 pd.get_dummies(hotel['market_segment'], drop_first=True),\n                 pd.get_dummies(hotel['distribution_channel'], drop_first=True),\n                 pd.get_dummies(hotel['customer_type'], drop_first=True)\n                 ], axis=1)\nhotel = hotel.drop(['hotel','arrival_date_month','market_segment','distribution_channel','customer_type'], axis=1)","9f6acb87":"X = hotel.iloc[:, 1:].values\ny = hotel.iloc[:, 0].values\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\nprint(X)\nprint(y)","8d20d2a5":"# Empty dictionary of model accuracy results\nmodel_accuracy_results = {}\n\n# Function for calculating accuracy from confusion matrix\nfrom sklearn.metrics import confusion_matrix\ndef model_accuracy(y_test, y_pred):\n    cm = confusion_matrix(y_test, y_pred)\n    accuracy = ((cm[0,0] + cm [1,1]) * 100 \/ len(y_test)).round(2)\n    return accuracy","aef580eb":"# Fit and train\nfrom sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors = 10)\nclassifier.fit(X_train,y_train)\n\n# Predict\ny_pred = classifier.predict(X_test)\n\n# Computing accuracy\nmodel_accuracy_results['KNearestNeighbors'] = model_accuracy(y_test, y_pred)","191836d4":"# Fit and train\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators=10, criterion='entropy', random_state=0)\nclassifier.fit(X_train,y_train)\n\n# Predict\ny_pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nresult = confusion_matrix(y_test, y_pred)\nprint(\"Confusion Matrix:\")\nprint(result)\nresult1 = classification_report(y_test, y_pred)\nprint(\"Classification Report:\",)\nprint (result1)\n# Computing accuracy\nmodel_accuracy_results['RandomForest'] = model_accuracy(y_test, y_pred)","2c8bdcad":"df_model_accuracies = pd.DataFrame(list(model_accuracy_results.values()), index=model_accuracy_results.keys(), columns=['Accuracy'])\ndf_model_accuracies","7d832e3e":"Conclusion\n\u2022The cancellation and its prediction is a real problem for the tourism industry and good understanding for this problem and the features that related with will be very useful to decrease the investments' risk of this important industry.\n\u2022Features which are most important to predict hotel booking cancellations are, lead_time, deposit_type, arrival _day_date_of_month, country, arrival_date_year, adr, and market segment.\n\u2022Here Random Forest Algorithm have high accuracy (85.34)to predict hotel booking cancellation than K-nearest Neighbor(81.44)\n\u2022Also online booking websites are encouraging more and more customers to book more hotels and then decide which one they will stay, participating in the increase of the number of cancellations. But technological advancements is not the only reason hotels see more cancellations. It turns out that psychology plays a role in this as well. Consumers are always looking for ways to minimize their cost of buying something, so if they found out that they can buy the same thing at a lower price than they paid for, they would attempt to cancel and repurchase, and that\u2019s what usually happens with hotel bookings.\n","ea0409f1":"Around 47% of bookings are made via Online Travel Agents , almost 20% of bookings are made via Offline Travel Agents and less than 20% are Direct bookings are made without any other agents.","03227f0e":"Here we can see that after compairing accuracy of both models, Random Forest Classifier model has the higher accuracy (85.34%) than K-NN (76.44%) model.","d1e82131":"According to the graph,  August is the most occupied(busiest) month with  11.66% bookings and January is the most unoccupied month with 5% bookings.","0a89a585":"****Compairing model accuracy of K-NN model and Random Forest Classifier model:****","3eaaac9e":"**Model building******\n\n","77305a2e":"**\uf0d8Train or fit the data and apply K- Nearest Neighbors model:**","be477075":"2. Objectives of Study\n        \u2022To evaluate feature importance i.e. which features are most important to predict hotel booking cancellations.\n        \u2022To predict the guests who are most likely to cancel their reservation and this will help to generate better forecasts and reduce business decision uncertainty.\n        \u2022Build a model that could predict bookings with a high cancellation probability.\n\n","c810a2e6":"It's clear that meal type and reserved room type don't have bookings evenly distributed. In these features, bookings heavily favor one category and hence we will drop these columns. We will drop deposit type (visualized previously) for the same reasons.","48a8fc7f":"**Data Visualization**","a30ddbff":"For all the 3 years, bookings with a lead time less than 100 days have fewer chances of getting canceled, and lead time more than 100 days have more chances of getting canceled.","ee352ffa":"Groups segment has cancellation rate more than 50%. Offline TA\/TO (Travel Agents\/Tour Operators) and Online TA has cancellation rate more than 33%. Direct segment has cancellation rate less than 20%.\nIt is surprising that the cancellation rate in these segments is high despite the application of a deposit. The fact that cancellations are made collectively like group reservations has high cancellation rate.\n    Cancellation rates for online reservations are high as expected in a dynamic environment where the circulation is high. Another situation that took my attention is that the cancellation rate in the direct segment is so low.  At this point, I believe a relationship of mutual trust has been established in the event that  individuals communicate one by one. I'm not going to focus on that much, but there is a  psychological factor here, I think.\n","7fcd4b34":" **\u201cPredicting Hotel Booking Cancellations with Python\u201d**\n1. Introduction\n        By now, all of us are aware that the Covid-19 pandemic has sent shock waves of disruptions to worldwide travel plans as travel restrictions have been imposed and flights have beencancelled. This has contributed to visitors scrambling to cancel their bookings for hotels and tours. In fact,the global travel industry has been overwhelmed by the large number of corona-virus induced cancellations. But hotel cancellations are nothing new.","38451d23":"Around 28% of bookings were canceled by guests with no deposit, followed by 22% bookings were canceled with Refundable. These numbers are huge if the hotels were not able to replace the cancelled bookings in time. So it's obvious that guests who do not pay any deposit while booking are likely to cancel more reservations.\n  Also it is interesting to note that non-refundable deposits had more cancellation than refundable deposits. Logically one would have assumed that refundable deposits have more cancellation as hotel rates are usually higher for refundable deposit type rooms and customers pay more in anticipation of cancellation.\n","4ac548ef":"**\uf0d8Train or fit the data and apply random forest classifier model:**","c41e383a":"About 27% of resort hotel bookings have been cancelled and about 40% of city hotel bookings have been cancelled. These figures are high and have possible effects for hotels in terms of sales and revenue.","3a8f306f":"According to the this graph, 63% of bookings were not canceled and 37% of the bookings were canceled at the Hotel.","5ac50e60":"1. **Data Cleaning**","d8896bea":"**1. Data Cleaning**\n\uf0d8\u201c.dropna\u201d function is used to omit the null values .\n\uf0d8Converting of categorical variables to dummy variables by using the following code:\n","d3bec599":"**Split data into training and test data.**\n\uf0d8The data is further divided into training and test data sets by using \u2018train_test_split\u2019 function. ","35d1aeb3":"In the booking  cancellations between months, there is no major difference, but the lowest demand  months have the lowest percent cancellations and the highest demand months have the highest percent cancellations. The cancellations are highest in June, July & August and lowest during November, December & January.\nThis pattern would be recognized by hotels as it becomes easier to fill cancelled rooms during the peak season.\n\n"}}