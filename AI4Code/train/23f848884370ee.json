{"cell_type":{"cfdcc84b":"code","eac79cc6":"code","010d6b51":"code","0ce7b354":"code","c323923b":"code","891495c6":"code","ebc18dff":"code","b8bd4b45":"code","e9e6d07c":"code","af2e966e":"code","e57a3114":"code","4a4746d0":"code","ca88ff41":"code","fd84c717":"code","52227d1f":"code","e29c0765":"code","6e72c594":"code","033d07e6":"code","29593c34":"code","46670720":"code","466c914e":"markdown","95a07976":"markdown","6c64f57e":"markdown","7845915e":"markdown","05eb9077":"markdown"},"source":{"cfdcc84b":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras import Sequential,models,layers\nfrom tensorflow.keras.preprocessing import image\nfrom numpy import asarray\nimport cv2\nimport PIL\nfrom PIL import Image\nimport os\nimport glob\nimport io","eac79cc6":"img_dir='..\/input\/brain-tumor-detection\/'\nno_images=os.listdir(img_dir + 'no\/')\nyes_images=os.listdir(img_dir + 'yes\/')","010d6b51":"datset=[]\nlab=[]","0ce7b354":"for image_name in no_images:\n    image=cv2.imread(img_dir + 'no\/' +image_name)\n    image=Image.fromarray(image,'RGB')\n    image=image.resize((64,64))\n    datset.append(np.array(image))\n    lab.append(0)","c323923b":"for image_name in yes_images:\n    image=cv2.imread(img_dir + 'yes\/' +image_name)\n    image=Image.fromarray(image,'RGB')\n    image=image.resize((64,64))\n    datset.append(np.array(image))\n    lab.append(1)","891495c6":"data=np.asarray(datset)\nl=np.asarray(lab)","ebc18dff":"print(data.shape, l.shape)","b8bd4b45":"plt.imshow(data[2])","e9e6d07c":"model=Sequential([\n                     \n                     #cnn\n                    layers.Conv2D(50,(3,3),activation=\"relu\",input_shape=(64,64,3)),\n                    layers.MaxPooling2D((2,2)),\n     \n                    layers.Conv2D(64,(3,3),activation=\"relu\"),\n                    layers.MaxPooling2D((2,2)),\n    \n                    layers.Conv2D(54,(3,3),activation=\"relu\"),\n                    layers.MaxPooling2D((2,2)),\n    \n                     #dense_layer\n                     layers.Flatten(),\n                     layers.Dense(64,activation=\"relu\"),\n                     layers.Dense(2,activation=\"softmax\")\n\n\n])","af2e966e":"model.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"])\nmodel.fit(data,l,epochs=8)","e57a3114":"pred_set=[]\npred_images=os.listdir(img_dir +'pred\/')\nfor image_name in pred_images:\n    image=cv2.imread(img_dir +'pred\/'+ image_name)\n    image=Image.fromarray(image,'RGB')\n    image=image.resize((64,64))\n    pred_set.append(np.array(image))\npred=np.asarray(pred_set)","4a4746d0":"x=model.predict(pred)\nmax=np.argmax(x,axis=1)","ca88ff41":"max","fd84c717":"#correctly_predicted\nplt.imshow(pred[1])\nprint(max[1])","52227d1f":"#correctly_predicted\nplt.imshow(pred[13])\nprint(max[13])","e29c0765":"#correctly_predicted\nplt.imshow(pred[4])\nprint(max[4])","6e72c594":"#correctly_predicted\nplt.imshow(pred[41])\nprint(max[41])","033d07e6":"#correctly_predicted\nplt.imshow(pred[2])\nprint(max[2])","29593c34":"#correctly_predicted\nplt.imshow(pred[5])\nprint(max[5])","46670720":"#All the images are correctly predicted","466c914e":"# Preparing predction images","95a07976":"# #All the images are correctly predicted","6c64f57e":"# Image Preprocessing \n# converting specifying imagepath and converting image int array","7845915e":"# Prediction","05eb9077":"# # Model Training"}}