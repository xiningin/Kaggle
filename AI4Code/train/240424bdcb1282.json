{"cell_type":{"0aaa8114":"code","c7a55b43":"markdown"},"source":{"0aaa8114":"#Sample exercise on multivariate linear regression\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n#First import the file from the specified directory. Do not forget to use r'filename' when file is not in the cw folder\ndef import_file():\n    data=pd.read_csv('..\/input\/cracow-apartments-data-set\/cracow_apartments.csv')\n    m=len(data)\n    return data,m\n\n#Get all the data\ndef clean(data):\n    y, X1=data['price'].to_numpy(), data['size'].to_numpy()\n    X2, X3=data['distance_to_city_center'].to_numpy(), data['rooms'].to_numpy()\n    return y,X1,X2,X3\n\n#Get the cost value. Important to check the cost plot\ndef cost(prediction, y, m):\n    vals=[(Ho-Y)**2 for Ho,Y in zip(prediction,y)]\n    cost_value=sum(vals)\/(2*m)\n    return cost_value\n\n#Calculate the predicted value given the parameters\ndef predict(w1,w2,w3,b,X1,X2,X3):\n    prediction=np.array([w1*x+b for x in X1])+np.array([w2*x for x in X2])+np.array([w3*x for x in X3])\n    return prediction\n\n#Train our model to get the correct parameters\ndef train(X1,X2,X3,y,m,iterations,learning_rate=0.0002):\n    accumulated_cost=[]\n    w1,w2,w3,b=0,0,0,0\n    \n    for i in range(iterations):\n        final_predictions=predict(w1,w2,w3,b,X1,X2,X3)\n        w1-=learning_rate*(sum(np.multiply((final_predictions - y),X1)))\/m\n        w2-=learning_rate*(sum(np.multiply((final_predictions - y),X2)))\/m\n        w3-=learning_rate*(sum(np.multiply((final_predictions - y),X3)))\/m\n        b-=learning_rate*(sum(final_predictions - y))\/m\n        accumulated_cost.append(cost(final_predictions,y,m))\n    print('The function is price={}*size + {}*distance + {}*rooms + {} at {} iterations'.format(np.round(w1,2),np.round(w2,2),np.round(w3,2),np.round(b,2),iterations))\n    return final_predictions,accumulated_cost\n\n#Visualize the results\ndef visualize(X1,y,final_predictions,iterations,accumulated_cost):\n    #compare actual data to predicted data\n    fig1,(ax1,ax2)=plt.subplots(1,2,sharey=True)\n    fig1.suptitle('Housing prices prediction')\n    ax1.scatter(X1,y)\n    ax1.set_title('Actual data')\n    ax1.set_xlabel('Combined Factors')\n    ax1.set_ylabel('Price')\n    ax2.scatter(X1,final_predictions)\n    ax2.set_title('Predicted data')\n    ax2.set_xlabel('Combined Factors')\n    plt.show()\n    \n    #check the cost graph\n    plt.figure(2)\n    plt.plot(range(iterations), accumulated_cost)\n    plt.title('Cost Function')\n    plt.xlabel('Iterations')\n    plt.ylabel('Cost')\n    plt.xlim((0,len(X1)))\n    plt.show()\n\n#Run the program. You can specify the number of iterations\ndef program(iterations=1000):\n    data,m=import_file()\n    y,X1,X2,X3=clean(data)\n    final_predictions,accumulated_cost=train(X1,X2,X3,y,m,iterations)\n    visualize(X1,y,final_predictions,iterations,accumulated_cost)\n    \n#Execute\nprogram()\n    ","c7a55b43":"# This is a sample multivariate linear regression without using sklearn"}}