{"cell_type":{"089ea7e9":"code","f797e73a":"code","57e61414":"code","26c87327":"code","20b2659a":"code","8413988f":"code","ccb34ca8":"code","ba765fe4":"code","7d1f3f6b":"code","8d3e0c69":"code","f2fe5abf":"code","e9b9b661":"code","80055dea":"code","96ab0dd4":"code","8923a83d":"markdown","57a291ea":"markdown","1a728fa0":"markdown","d6ea598b":"markdown","4c314984":"markdown","936fb841":"markdown","628e8abb":"markdown","2f50b1d7":"markdown"},"source":{"089ea7e9":"import tensorflow as tf \nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Dropout, Flatten, Dense\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping\nfrom  tensorflow.keras import models, optimizers, regularizers","f797e73a":"model = models.Sequential()\n\nmodel.add(Conv2D(32, (3,3), activation= 'relu', input_shape=(150,150,3)))\nmodel.add(MaxPooling2D((2,2)))\n\nmodel.add(Conv2D(64, (3,3), activation = 'relu'))\nmodel.add(MaxPooling2D((2,2)))\n\nmodel.add(Conv2D(128, (3,3), activation = 'relu'))\nmodel.add(MaxPooling2D((2,2)))\n\nmodel.add(Conv2D(128, (3,3), activation = 'relu'))\nmodel.add(MaxPooling2D((2,2)))\n\nmodel.add(Flatten())\nmodel.add(Dropout(0.5))\nmodel.add(Dense(512, activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))\n\nmodel.summary()\n\n\n","57e61414":"train_datagen = ImageDataGenerator(\n    rescale=1.\/255,\n    rotation_range=40,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True\n    )","26c87327":"test_datagen = ImageDataGenerator(rescale=1.\/255)","20b2659a":"train_generator = train_datagen.flow_from_directory('..\/input\/cnn-data-sources\/cats_and_dogs\/train',\n                                 target_size=(150,150),\n                                 batch_size=32,\n                                 class_mode='binary'\n                                 )\n\nvalidation_generator = test_datagen.flow_from_directory('..\/input\/cnn-data-sources\/cats_and_dogs\/validation',\n                                 target_size=(150,150),\n                                 batch_size=32,\n                                 class_mode='binary'\n                                 )","8413988f":"checkpoint = ModelCheckpoint('modelo_perros_gatos.hdf5',monitor='val_accuracy', verbose= 1, save_best_only=True)","ccb34ca8":"model.compile(loss='binary_crossentropy', optimizer =optimizers.Adam(),\n             metrics=['accuracy'])","ba765fe4":"hist = model.fit(train_generator, steps_per_epoch=2000\/\/32,\n                epochs=100,\n                validation_data=validation_generator,\n                 validation_steps= 1000\/\/32,\n                 callbacks=[checkpoint])","7d1f3f6b":"import matplotlib.pyplot as plt","8d3e0c69":"plt.plot(hist.history['accuracy'], label = 'Train')\nplt.plot(hist.history['val_accuracy'], label = 'Val')\nplt.legend()\nplt.show()","f2fe5abf":"test_generator = test_datagen.flow_from_directory('..\/input\/cnn-data-sources\/cats_and_dogs\/test',\n                                 target_size=(150,150),\n                                 batch_size=32,\n                                 class_mode='binary'\n                                 )","e9b9b661":"model2 = model ","80055dea":"model2.load_weights('.\/modelo_perros_gatos.hdf5')","96ab0dd4":"model2.evaluate(test_generator)","8923a83d":"## Data augmentation","57a291ea":"## Compilando el modelo","1a728fa0":"## Reescalar los datos","d6ea598b":"## Callbacks","4c314984":"## Importando librer\u00edas","936fb841":"## Entrenando el modelo","628e8abb":"## Creaci\u00f3n del modelo convolucional","2f50b1d7":"## Resultados"}}