{"cell_type":{"2eab06de":"code","1851fe29":"code","37e28797":"code","886c70af":"code","f8df1141":"code","2bfd7eff":"code","dd454376":"code","04520a75":"code","73902358":"code","34be38a8":"code","816268a3":"markdown","52a17ebf":"markdown","b37f2057":"markdown"},"source":{"2eab06de":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom time import time\nimport os","1851fe29":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import SGDClassifier as SC, LogisticRegression as LR\n\nfrom sklearn.metrics import f1_score\nfrom sklearn.utils import shuffle\n\nimport joblib","37e28797":"train_file_path = '..\/input\/news-classification\/Data\/train_set.csv'\ntest_file_path = '..\/input\/news-classification\/Data\/test_a.csv'","886c70af":"train_df = pd.read_csv(train_file_path, sep='\\t')\ntrain_df.shape","f8df1141":"def balance(df: pd.DataFrame):\n    df = df.append(df[df['label']==11], ignore_index=True)\n    tmp_df = pd.concat([df[df['label']==12]]*2, ignore_index=True)\n    df = df.append(tmp_df, ignore_index=True)\n    tmp_df = pd.concat([df[df['label']==13]]*4, ignore_index=True)\n    df = df.append(tmp_df, ignore_index=True)\n    return df\n\n\ntrain_df = balance(train_df)\ntrain_df = shuffle(train_df)\ntrain_df.shape","2bfd7eff":"max_len = 600\nn_gram = (1,3)\nmax_features = 5000\ntfidf = TfidfVectorizer(ngram_range=n_gram, max_features=max_features)\n\ndef pad_sequences(line: str):\n    if len(line) >= max_len:\n        line = line[:max_len]\n    else:\n        line += ' 0' * (max_len-len(line))\n    return line\n\n\ndef feature_engineer():\n    t0 = time()\n    train_df['text'] = train_df['text'].apply(pad_sequences)\n    train_test = tfidf.fit_transform(train_df['text'])\n    print('processing time(s):', time()-t0)\n    return train_test\n    \ntrain_test = feature_engineer()","dd454376":"def training(clf, n_rows, name):\n    t0 = time()\n    clf.fit(train_test[:n_rows], train_df['label'].values[:n_rows])\n    val_pred = clf.predict(train_test[n_rows:n_rows+30000])\n    print(f1_score(train_df['label'].values[n_rows:n_rows+30000], val_pred, average='macro'))\n    print('training time(s):', time()-t0)\n    joblib.dump(clf, name+'.pkl')\n    \n    \ndef predict(clf):\n    test_df = pd.read_csv(test_file_path, sep='\\t')\n    test_text = tfidf.transform(test_df['text'])\n    y = clf.predict(test_text)\n    y = pd.DataFrame(columns=['label'], data=y)\n    y.to_csv('predict_a.csv', sep='\\t', index=False)\n    print('prcessing complete')","04520a75":"clf1 = SC(early_stopping=True)\ntraining(clf1, len(train_df)-30000, 'svm')","73902358":"clf2 = LR(multi_class='multinomial', max_iter=500)\ntraining(clf2, len(train_df)-30000, 'logistic')","34be38a8":"predict(clf2)","816268a3":"Build SVM Model","52a17ebf":"Build Logistic Regression Model","b37f2057":"Feature Engineering"}}