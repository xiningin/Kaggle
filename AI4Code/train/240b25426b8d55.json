{"cell_type":{"91041a28":"code","6ae5d303":"code","cd0d1c6e":"code","3b624c80":"code","105de082":"code","da9b97bb":"code","3d078ee0":"code","70309a58":"code","b7c7744b":"code","d0fb9cc4":"code","32e26ea0":"code","0dfa934b":"code","07a3e23f":"code","89d0a73b":"code","562e44f5":"code","e519885b":"code","22fa0160":"code","543c66d7":"code","a611f0e4":"code","8a6f25a4":"code","413017ef":"code","927f2481":"code","485ed60f":"code","225963b2":"code","9bcffc6f":"code","240c8c4b":"code","6765b62c":"code","bca7867c":"code","419729c7":"code","3280bead":"code","370d54b8":"code","9e847116":"code","a2eb508b":"code","f3b7d5da":"code","5807f99b":"code","68cd8818":"code","2cfc409e":"code","72072eb2":"code","419af76c":"code","600efa2d":"code","c5ed99f1":"code","8987579c":"code","fc2dc00b":"code","cd1abc11":"code","d5a66874":"code","6ebf92c8":"code","0765e6cc":"code","d2860717":"code","be656ab2":"code","cb88bec9":"code","46b15bc2":"code","9a4daf73":"code","8393e04b":"code","f632fed4":"code","bf14d545":"code","280f0119":"code","42051da8":"code","30dfdff7":"code","f40b45cb":"code","30654ddc":"code","d7ad35d8":"code","b2830540":"code","d692a4bf":"code","1d9294c4":"code","2e8e5130":"code","2baecc83":"code","cd96f0b2":"code","43954667":"code","c6f4fa0c":"code","f05fd35e":"code","b0768985":"code","53add9c8":"code","3854bc0f":"code","ab73a230":"markdown","10eafad1":"markdown","707384a3":"markdown","6be4fcce":"markdown","01a6a97b":"markdown","32c5e480":"markdown","d762b8e6":"markdown","ce785379":"markdown","966e437a":"markdown","d5519968":"markdown","2fb581d2":"markdown","fb63d9e1":"markdown","1a1376a9":"markdown","dc3a614e":"markdown","6b3b9043":"markdown","e8b05f06":"markdown","3e7dd6de":"markdown","ee3c1e07":"markdown","9413d934":"markdown","6718f596":"markdown","9cfe0832":"markdown","1a3ae520":"markdown","ee796c82":"markdown","8bee8db7":"markdown","c0f5e7bf":"markdown","9e995064":"markdown","bd81df5f":"markdown","b711e918":"markdown","7cfbc8d9":"markdown","97302ee5":"markdown","bf5d2e54":"markdown","25ce62ff":"markdown","4dd8aa1c":"markdown","fcfdaa3b":"markdown","df66e622":"markdown","f638a356":"markdown","47bb81c5":"markdown","336c99e0":"markdown","2579ca24":"markdown","c6cd28eb":"markdown","6742875a":"markdown","1aaa947e":"markdown","25fb2a5d":"markdown"},"source":{"91041a28":"import pandas as pd\nimport numpy as np\nimport seaborn as sns                  \nimport matplotlib.pyplot as plt\nimport warnings\nfrom collections import Counter\nwarnings.filterwarnings('ignore')  #this will ignore the warnings.it wont display warnings in notebook\n#plt.style.use('fivethirtyeight')\nplt.style.use('ggplot')\nplt.rcParams['figure.figsize']=[6,3]\nplt.rcParams['figure.dpi']=80","6ae5d303":"data=pd.read_csv(\"..\/input\/loan-predication\/train_u6lujuX_CVtuZ9i (1).csv\")","cd0d1c6e":"#Missing Values\ndata.isnull().sum()","3b624c80":"#Heatmap of missing values\nplt.figure(figsize=(10,10))\nsns.heatmap(data.isnull(),cbar=False,cmap='YlGnBu')\nplt.ioff()","105de082":"# replace missing values with the mode\ndata['Gender'].fillna(data['Gender'].mode()[0], inplace=True)\ndata['Married'].fillna(data['Married'].mode()[0], inplace=True)\ndata['Dependents'].fillna(data['Dependents'].mode()[0],inplace=True)\ndata['Self_Employed'].fillna(data['Self_Employed'].mode()[0], inplace=True)\ndata['Credit_History'].fillna(data['Credit_History'].mode()[0], inplace=True)","da9b97bb":"# replace missing value with the mode\ndata['Loan_Amount_Term'].fillna(data['Loan_Amount_Term'].mode()[0], inplace=True)\n# replace missing values with the mode\ndata['LoanAmount'].fillna(data['LoanAmount'].mode()[0], inplace=True)\n","3d078ee0":"data.isnull().sum()","70309a58":"#dataframe\ndata.info()","b7c7744b":"# check  duplication of rows\ndata.duplicated().any()","d0fb9cc4":"#Dropping unwanted columns-Loan_ID\ndata.drop(['Loan_ID'],axis=1,inplace=True)\ndata.head()","32e26ea0":"# target variable (Loan_status) from Yes\/No to 1\/0\ndata['Loan_Status'] = data['Loan_Status'].map({'N':0,'Y':1})","0dfa934b":"#Univariate Analysis\n#Categorical Variables\nplt.figure(1)\nplt.subplot(221)\ndata['Gender'].value_counts().plot.pie(title=' Gender',figsize=(20,10),autopct=\"%1.1f\",explode=[0,.1])\nplt.subplot(222)\ndata['Married'].value_counts().plot.pie(title=' Marital Status',autopct=\"%1.1f\",explode=[0,.1])\nplt.subplot(223)\ndata['Self_Employed'].value_counts().plot.pie(title='Employment type',autopct=\"%1.1f\",explode=[0,.1])\nplt.subplot(224)\ndata['Credit_History'].value_counts().plot.pie(title=' credit history',autopct=\"%1.1f\",explode=[0,.1])\n\nplt.figure(figsize=(20, 10))\nplt.subplot(231)\ndata['Dependents'].value_counts().plot.pie(cmap=\"Accent\",autopct=\"%1.1f%%\",explode=[0,0,0,0.2])\nplt.subplot(232)\ndata['Education'].value_counts().plot.pie(cmap=\"Accent\",autopct=\"%1.1f%%\",explode=[0,0.1])\nplt.subplot(233)\ndata['Property_Area'].value_counts().plot.pie(cmap=\"Accent\",autopct=\"%1.1f%%\",explode=[0,0,0.1])\nplt.subplot(234)\ndata['Loan_Status'].value_counts().plot.pie(cmap=\"Accent\",autopct=\"%1.1f%%\",explode=[0,0.1])\nplt.show()","07a3e23f":"#  distribution of Numerical Variables\n#  ApplicantIncome\nplt.figure(1,figsize=(16,5))\nplt.subplot(121)\nprint(\"Skewness:\",data['ApplicantIncome'].skew())\nsns.distplot(data['ApplicantIncome'],kde=True,bins=10)\nplt.show()","89d0a73b":"#  LoanAmount\nplt.figure(1,figsize=(16,5))\nplt.subplot(122)\nprint(\"Skewness:\",data['LoanAmount'].skew())\nsns.distplot(data['LoanAmount'],kde=True,bins=10)\nplt.show()","562e44f5":"#  Loan_Amount_Term\nplt.figure(figsize=(16,5))\nlat = data['Loan_Amount_Term'].value_counts(normalize=True)\nsns.barplot(x=lat.values,y=lat.index, palette=\"rocket\",orient='h')\nplt.show()","e519885b":"data.Loan_Status.value_counts()","22fa0160":" #Loan_Status\nf,ax=plt.subplots(1,2,figsize=(8,6))\ndata['Loan_Status'].value_counts().plot.pie(ax=ax[0],explode=[0,0.1],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Loan_Status',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Loan_Status',hue='Married',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","543c66d7":"data.Married.value_counts()","a611f0e4":"# Married\nf,ax=plt.subplots(1,2,figsize=(8,8))\ndata['Married'].value_counts().plot.pie(ax=ax[0],explode=[0,0.1],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Married',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Married',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff() ","8a6f25a4":"#Catplot - Gives us the percentage of Loan_Status in different Married status and proprty types\nsns.catplot(x='Married',y='Loan_Status',kind='bar',data=data,col='Property_Area',hue='Education')","413017ef":"sns.catplot(x='Married',y='Loan_Status',kind='violin',data=data)","927f2481":"f,ax=plt.subplots(1,2,figsize=(10,8))\ndata[['Married','Loan_Status']].groupby(['Married']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Loan_Status vs Married')\nsns.countplot('Married',hue='Loan_Status',data=data,ax=ax[1])\nax[1].set_title('Married:Loan_Status')\nplt.show()","485ed60f":"# Variable - Education\nf,ax=plt.subplots(1,2,figsize=(10,8))\ndata['Education'].value_counts().plot.pie(ax=ax[0],explode=[0,0.1],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Education',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Education',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","225963b2":"#Catplot - Gives us the percentage of Loan_Status in different Married status and Property_Area\nsns.catplot(x='Education',y='Loan_Status',kind='bar',data=data,col='Married',hue='Property_Area')","9bcffc6f":"sns.catplot(x='Education',y='Loan_Status',kind='violin',data=data)","240c8c4b":"# Variable - Property_Area\nf,ax=plt.subplots(1,2,figsize=(8,6))\ndata['Property_Area'].value_counts().plot.pie(ax=ax[0],explode=[0,0,0.1],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Property_Area',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Property_Area',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","6765b62c":"#Catplot - Gives us the percentage of Loan_Status in different conditions\nsns.catplot(x='Property_Area',y='Loan_Status',kind='bar',data=data)\nsns.catplot(x='Property_Area',y='Loan_Status',kind='bar',data=data,hue=\"Married\",col='Education')\nsns.catplot(x='Property_Area',y='Loan_Status',kind='violin',data=data)","bca7867c":"# Variable - Gender\nf,ax=plt.subplots(1,2,figsize=(10,6))\ndata['Gender'].value_counts().plot.pie(ax=ax[0],explode=[0,0.1],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Gender',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Gender',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","419729c7":"sns.catplot(x='Gender',y='Loan_Status',kind='bar',data=data,col='Property_Area',hue='Education')","3280bead":"sns.catplot(x='Gender',y='Loan_Status',kind='bar',data=data)","370d54b8":"#Variable - ApplicantIncome\n#Histogram\ndata['ApplicantIncome'].hist(bins=40,color='orange')","9e847116":"#Genderwise ApplicantIncome Distribution\nf,ax=plt.subplots(1,2,figsize=(8,6))\nsns.distplot(data[data['Gender']=='Male'].ApplicantIncome,ax=ax[0])\nax[0].set_title('ApplicantIncome in Gender Male')\nsns.distplot(data[data['Gender']=='Female'].ApplicantIncome,ax=ax[1])\nax[1].set_title('ApplicantIncome in Gender Female')\nplt.show()","a2eb508b":"#Loan status wise ApplicantIncome Distribution\nf,ax=plt.subplots(1,2,figsize=(8,6))\nsns.distplot(data[data['Loan_Status']==0].ApplicantIncome,ax=ax[0])\nax[0].set_title('ApplicantIncome in Loan_Status 0')\nsns.distplot(data[data['Loan_Status']==1].ApplicantIncome,ax=ax[1])\nax[1].set_title('ApplicantIncome in Loan_Status 1')\nplt.show()\n","f3b7d5da":"sns.catplot(x='Gender',y='ApplicantIncome',data=data,kind='box')","5807f99b":"sns.catplot(x='Gender',y='ApplicantIncome',data=data,kind='boxen',\n            hue='Loan_Status', col='Property_Area')\n","68cd8818":"#Variable - CoapplicantIncome\ndata['CoapplicantIncome'].hist(bins=40,color='orange')","2cfc409e":"#Genderwise CoapplicantIncome Distribution\nf,ax=plt.subplots(1,2,figsize=(8,6))\nsns.distplot(data[data['Gender']=='Male'].CoapplicantIncome,ax=ax[0])\nax[0].set_title('CoapplicantIncome in Gender Male')\nsns.distplot(data[data['Gender']=='Female'].CoapplicantIncome,ax=ax[1])\nax[1].set_title('CoapplicantIncome in Gender Female')\n\nplt.show()","72072eb2":"#Loan status wise CoapplicantIncome Distribution\nf,ax=plt.subplots(1,2,figsize=(8,6))\nsns.distplot(data[data['Loan_Status']==0].CoapplicantIncome,ax=ax[0])\nax[0].set_title('CoapplicantIncome in Loan_Status 0')\nsns.distplot(data[data['Loan_Status']==1].CoapplicantIncome,ax=ax[1])\nax[1].set_title('CoapplicantIncome in Loan_Status 1')\nplt.show()","419af76c":"sns.catplot(x='Gender',y='CoapplicantIncome',data=data,kind='box')","600efa2d":"sns.catplot(x='Gender',y='CoapplicantIncome',data=data,kind='boxen',hue='Loan_Status', col='Property_Area')","c5ed99f1":"# Variable - Dependents\nf,ax=plt.subplots(1,2,figsize=(8,6))\ndata['Dependents'].value_counts().plot.pie(ax=ax[0],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Dependents',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Dependents',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","8987579c":"sns.catplot(x='Dependents',y='Loan_Status',kind='bar',data=data,col='Property_Area')","fc2dc00b":"f,ax=plt.subplots(1,4,figsize=(20,8))\nsns.distplot(data[data['Dependents']=='0'].LoanAmount,ax=ax[0])\nax[0].set_title('LoanAmount in Dependents 0')\nsns.distplot(data[data['Dependents']=='1'].LoanAmount,ax=ax[1])\nax[1].set_title('LoanAmount in Dependents 1')\nsns.distplot(data[data['Dependents']=='2'].LoanAmount,ax=ax[2])\nax[2].set_title('LoanAmount in Dependents 2')\nsns.distplot(data[data['Dependents']=='3+'].LoanAmount,ax=ax[3])\nax[3].set_title('LoanAmount in Dependents 3+')\nplt.show()","cd1abc11":"# Variable - Credit_History\nf,ax=plt.subplots(1,2,figsize=(8,6))\ndata['Credit_History'].value_counts().plot.pie(ax=ax[0],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Credit_History',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Credit_History',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","d5a66874":"sns.catplot(x='Education',y='Credit_History',kind='bar',data=data)","6ebf92c8":"sns.catplot(x='Credit_History',y='Loan_Status',kind='bar',data=data)","0765e6cc":"# Variable - Self_Employed\nf,ax=plt.subplots(1,2,figsize=(8,6))\ndata['Self_Employed'].value_counts().plot.pie(ax=ax[0],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Self_Employed',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Self_Employed',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","d2860717":"sns.catplot(x='Self_Employed',y='Loan_Status',kind='bar',data=data,col='Property_Area',hue='Education')","be656ab2":"#Variable - LoanAmount\nf,ax=plt.subplots(1,2,figsize=(8,6))\nsns.distplot(data[data['Gender']=='Male'].LoanAmount,ax=ax[0])\nax[0].set_title('LoanAmount in Gender Male')\nsns.distplot(data[data['Gender']=='Female'].LoanAmount,ax=ax[1])\nax[1].set_title('LoanAmount in Gender Female')\nplt.show()","cb88bec9":"f,ax=plt.subplots(1,2,figsize=(8,6))\nsns.distplot(data[data['Loan_Status']==0].LoanAmount,ax=ax[0])\nax[0].set_title('LoanAmount in Loan_Status 0')\nsns.distplot(data[data['Loan_Status']==1].LoanAmount,ax=ax[1])\nax[1].set_title('LoanAmount in Loan_Status 1')\nplt.show()","46b15bc2":"sns.catplot(x='Gender',y='LoanAmount',data=data,kind='box')","9a4daf73":"sns.catplot(x='Self_Employed',y='LoanAmount',data=data,kind='box')","8393e04b":"sns.catplot(x='Gender',y='LoanAmount',data=data,kind='box',hue='Loan_Status', col='Married')","f632fed4":"#Variable - Loan_Amount_Term\nf,ax=plt.subplots(1,2,figsize=(16,8))\ndata['Loan_Amount_Term'].value_counts().plot.pie(ax=ax[0],shadow=True,autopct='%1.1f%%')\nax[0].set_title('Loan_Amount_Term',fontsize=30)\nax[0].set_ylabel('Count')\nsns.set(font=\"Verdana\")\nsns.set_style(\"ticks\")\nsns.countplot('Loan_Amount_Term',hue='Loan_Status',linewidth=2.5,edgecolor=\".2\",data=data,ax=ax[1])\nplt.ioff()","bf14d545":"sns.catplot(x='Loan_Amount_Term',y='Loan_Status',kind='bar',data=data)","280f0119":"sns.catplot(x='Loan_Amount_Term',y='Loan_Status',kind='bar',data=data,col='Property_Area')","42051da8":"#converting categorical variables to numerical values\ndata[\"Gender\"] = data[\"Gender\"].map({\"Male\": 1, \"Female\":0})\n\ndata[\"Married\"] = data[\"Married\"].map({\"No\": 0, \"Yes\":1})\n\ndata[\"Education\"] = data[\"Education\"].map({\"Graduate\": 1, \"Not Graduate\":0})\n\ndata[\"Self_Employed\"] = data[\"Self_Employed\"].map({\"Yes\": 1, \"No\":0})\n\ndata[\"Dependents\"] = data[\"Dependents\"].map({\"0\": 0, \"1\":1,\"2\": 2, \"3+\":3})\n\ndata[\"Property_Area\"] = data[\"Property_Area\"].map({\"Urban\": 0, \"Rural\":1,\"2\": 2, \"Semiurban\":3})","30dfdff7":"data.LoanAmount.isnull().sum()","f40b45cb":"X = data.drop('Loan_Status',1)\ny = data.Loan_Status","30654ddc":"# adding dummies to the dataset\nX = pd.get_dummies(X)\ntrain = pd.get_dummies(data)","d7ad35d8":"X.shape, data.shape","b2830540":"X.head()","d692a4bf":"########## Train Test Split ##############\ndf_train = data.copy()\ndf_train.shape\ntrain = df_train.drop([\"Loan_Status\"],axis=1)\ntrain_ = df_train[\"Loan_Status\"]\n\nX_train = train.values\ny_train = train_.values","1d9294c4":"################### Feature Scaling ############################\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)","2e8e5130":"from sklearn.model_selection import train_test_split, cross_val_predict,cross_validate\ntrain_x, test_x,train_y,test_y = train_test_split(X_train,y_train,test_size  = 0.2, random_state=0)\nprint(\"Train dataset shape: {0}, \\nTest dataset shape: {1}\".format(train_x.shape, test_x.shape))","2baecc83":"#logistics\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n##### Logistic Regression starts ######\n\nlogistic = LogisticRegression(max_iter=10000)\n#fitting the values for x and y\nlogistic.fit(train_x,train_y)\n\n#predictions from test data\nprediction = logistic.predict(test_x)\t\n#print(prediction)\n\n#calculating the accuracy\naccuracy_score = accuracy_score(test_y,prediction)\nprint(\"Accuracy Score Logistic Regresion  :\",accuracy_score)","cd96f0b2":"###### confusion matrix  starts ######\nfrom sklearn.metrics import accuracy_score, confusion_matrix\ncm_lgr1 = confusion_matrix(test_y,prediction) \nnames = np.unique(prediction)\nsns.heatmap(cm_lgr1, square=True, annot=True, cbar=False,xticklabels=names, yticklabels=names, cmap=\"YlGnBu\" ,fmt='g')\nplt.xlabel('Truth')\nplt.ylabel('Predicted')","43954667":"#Decision Tree\nfrom sklearn.tree import DecisionTreeClassifier\ntree_model = DecisionTreeClassifier(random_state=1)\ntree_model.fit(train_x,train_y)\npred_cv_tree=tree_model.predict(test_x)\nscore_tree =accuracy_score(pred_cv_tree,test_y)*100 \nscore_tree","c6f4fa0c":"#random forest \nfrom sklearn.ensemble import RandomForestClassifier\nforest_model = RandomForestClassifier(random_state=1,max_depth=10,n_estimators=50)\nforest_model.fit(train_x,train_y)\npred_cv_forest=forest_model.predict(test_x)\nscore_forest = accuracy_score(pred_cv_forest,test_y)*100\nscore_forest","f05fd35e":"#KNN\nfrom sklearn.neighbors import KNeighborsClassifier\nknn_model =  KNeighborsClassifier(n_neighbors=3)\nknn_model.fit(train_x,train_y)\npred_cv_knn=knn_model.predict(test_x)\nscore_knn = accuracy_score(pred_cv_knn,test_y)*100\nscore_knn","b0768985":"#Naive Bayes\nfrom sklearn.naive_bayes import GaussianNB\ngnb_model = GaussianNB()\ngnb_model.fit(train_x,train_y)\npred_cv_gnb=knn_model.predict(test_x)\nscore_gnb = accuracy_score(pred_cv_gnb,test_y)*100\nscore_gnb","53add9c8":"#Random Forest with Grid-search\nfrom sklearn.model_selection import GridSearchCV\nparamgrid = {'max_depth': list(range(1,20,2)),'n_estimators':list(range(1,200,20))}\ngrid_search = GridSearchCV(RandomForestClassifier(random_state=1),paramgrid)\ngrid_search.fit(train_x,train_y)\ngrid_search.best_estimator_\ngrid_forest_model = RandomForestClassifier(random_state=1,max_depth=3,n_estimators=101)\ngrid_forest_model.fit(train_x,train_y)\npred_grid_forest = grid_forest_model.predict(test_x)\nscore_grid_forest = accuracy_score(pred_grid_forest,test_y)*100\nscore_grid_forest\n","3854bc0f":"importances = pd.Series(forest_model.feature_importances_,index=X.columns)\nimportances.plot(kind='barh', figsize=(12,8))","ab73a230":"Male have higher co-applicant income than female in all three property areas","10eafad1":"Either most of the applicant opted for a specific 30 year (360 months) term followed by 15 years (180 month) term or our sample data is having more of such datapoints.","707384a3":"Not much variance","6be4fcce":"male co-applicant is having more income than female income","01a6a97b":"Mean ApplicantIncome of male slightly higer than Females.","32c5e480":"If you are a graduate, then higher chances of having credit history=1\n\nSelf employed status does not have much impact on loan approval","d762b8e6":"Dependents = 2 have max chance of getting loan approved. 1 and 3 have min chance","ce785379":"If you are in semiurban, then chances of getting loan approved are more(76.8%) than if you are in urban(65.8%) & Rural (61.5%)","966e437a":"our predictions are almost 79.6% accurate, i.e. we have identified 79.6% of the loan status correctly for our Random Forest model.","d5519968":"* male income lies between 150-10k\n* female income lies between 150-5k\n* Chances of having higher income in male is more","2fb581d2":"Loan status = Y for 68.7% & No for 31.3%","fb63d9e1":"**Conclusion-** After testing 6 different algorithms, the best accuracy on the board is achieved by Logistic Regression (0.837), followed by RandomForest (0.796), KNNClassifier model (0.747), and Decision Tree performed the worst (0.7235), Naive Bayes Classifier(0.7479) and Random Forest with Grid Search (0.8294).\n\nThe Loan Status is heavily dependent on the Credit History for Predictions.\n\nThe Logistic Regression algorithm gives us the maximum Accuracy (83.7) % compared to the other 3 Machine Learning Classification Algorithms.","1a1376a9":"85.3% went for 360 months","dc3a614e":"84.2% have credit history & 15.8% have no history","6b3b9043":"So our predictions are almost 83.7% accurate, i.e. we have identified 83.7% of the loan status correctly for our logistic regression model.","e8b05f06":"* In Rural area - Married status doesn't make any diff in loan approval\n* In other areas loan approval chances are more if you are married","3e7dd6de":"If you are a graduate, then higher chances of having credit history=1","ee3c1e07":"* 36 months have lowest chance of loan approval followed by 480 months\n* 12,60 and 120 months have highest chance (100%) of loan approval","9413d934":"our predictions are almost 74.7% accurate, i.e. we have identified 74.7% of the loan status correctly for our KNeighbors Classifier.","6718f596":"If credit history is 1 then high chances (79.6%) of getting loan approved than 7.9% for credit history = 0\n\nCredit history as expected is the most important variable in deciding loan approval","9cfe0832":"loan approval chances are slightly more if you are male (69.3%) than female (67%)","1a3ae520":"Higher chances of getting loan approved if co-applicant income is more","ee796c82":"IF you are married then loan amount is slightly higher then non-married","8bee8db7":"57.6% have no dependents & 8.5% have 3+ dependents","c0f5e7bf":"Data Processing starts","9e995064":"our predictions are almost 83% accurate, i.e. we have identified 83% of the loan status correctly for our Random Forest model with grid search.","bd81df5f":"our predictions are almost 74.7% accurate, i.e. we have identified 74.7% of the loan status correctly for our Naive Bayes Classifier.","b711e918":"our predictions are almost 72% accurate, i.e. we have identified 72% of the loan status correctly for our Decision tree model","7cfbc8d9":"Logistic Regression model gives : 83.7% prediction accuracy\n\nDecision Tree model gives : 72.3% prediction accuracy\n\nRandom Forest model gives : 79.6% prediction accuracy\n\nRandom Forest with Grid Search model gives : 83% prediction accuracy\n\nKNNClassifier model gives : 75% prediction accuracy\n\nNaive Bayes Classifier model gives : 75% prediction accuracy","97302ee5":"From the above chart we can see that most of the people who applied for loans were either Males, Married, No self employment or Had a credit history.\n\nMost of the applicants(57.6%) did not have any dependants\n\n78.2% are Graduates applying for loan.\n\nEventhough most of the applicants are from Semiurban, an almost equal distribution can be seen among other categories.","bf5d2e54":"Mean LoanAmount of male slightly higer than Females.","25ce62ff":"* Many outliers are present in the distribution.\n* Applicant Income is left (6.53)\n* Most of the applicant income is near a range of 5000.","4dd8aa1c":"Mean CoapplicantIncome of male slightly higer than Females.","fcfdaa3b":" If you are in urban+Not graduate+not married = Loan approval is less","df66e622":"If you are self employed then loan amount is higher","f638a356":"If you are graduate, then chances of getting loan approved are more (70.8%) than if you are not graduate (61.2%).","47bb81c5":"85.9% ate not self-employed & 14.1% are self employed","336c99e0":"Total 18 misclassified out of 123 test values.","2579ca24":"* If you are married, then chances of getting loan approved are more (71.8%) than if you are not married (62.9%).","c6cd28eb":"male LoanAmount lies between 0-250 female LoanAmount lies between 0-200 Chances of having higher LoanAmount in male is more","6742875a":"column have outliers and a high level of skewness.","1aaa947e":"We can find out that Credit_History,Balance Income feature are most important. So, feature engineering helped us in predicting our target variable.","25fb2a5d":"**About Case**-This is the dream housing finance company dataset. It is provided home loan on the basis of some perametter. they have presence across all urban , semi urban and rural areas. customer first apply for home loan after that company validates the customer eligible for loan or not on the basis of customer details.\n\n**Problem**:- if company want to automate the laon eligibility process based on customer details provided while filling online applicant form. they have given a problem to identify the factor\/customer segments that are eligible for taking loan , those are eligible for loan amount so that they can specifically target these customer.\n\n**Objective**- The major aim is to predict which of the customers will have their loan approved.\n\n**DataSet Infromation-** the database was created with records details of Customer who is getting the home loan.\n\n**Attribute Information:**\n\nLoan_ID - Unique Loan ID\n\nGender - Male\/ Female\n\nMarried - Applicant married (Y\/N)\n\nDependents - Number of dependents\n\nEducation - Applicant Education (Graduate\/ Under Graduate)\n\nSelf_Employed - Self employed (Y\/N)\n\nApplicantIncome - Applicant income\n\nCoapplicantIncome -Coapplicant income\n\nLoanAmount - Loan amount in thousands\n\nLoan_Amount_Term -Term of loan in months\n\nCredit_History -credit history meets guidelines\n\nProperty_Area - Urban\/ Semi Urban\/ Rural\n\nLoan_Status -Loan approved (Y\/N)\n\n**Solution-** banks would give loans only those customers that are eligible so that they can be assured of getting the money back.hence the more accurate we are in predicting the eligible customers the more beneficial it would be for bank.\n\n"}}