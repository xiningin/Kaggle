{"cell_type":{"6ec0cd09":"code","b19346d2":"code","09d273c8":"code","e0295c6e":"code","07c1a5b2":"code","cf38a4e0":"code","aded8039":"code","22c8152a":"code","23d6cb2b":"code","7a7c08a5":"code","22a955fd":"code","57772a26":"code","663869f8":"code","97fb44b6":"code","c4f4bd12":"code","7b786915":"code","5500ba10":"code","738858d1":"code","701fd44f":"code","0e82004f":"code","740f7771":"code","00a6ab32":"code","d3158e19":"code","96cccf07":"code","bee9349c":"code","24c5a7be":"code","58975b35":"code","641e4041":"code","5ab2b0a8":"code","99da41de":"code","2d17bebd":"code","2e9a55af":"code","5f89454f":"code","76f97fb7":"code","e1ee6de5":"markdown","e0c56ad0":"markdown","95b065b4":"markdown","a0df0a51":"markdown","cf41052d":"markdown","c5d529b4":"markdown","9747f469":"markdown","1c8185a9":"markdown","88866476":"markdown","6c7a02f3":"markdown","ebdea2bf":"markdown"},"source":{"6ec0cd09":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly_express as px\nfrom plotly.subplots import make_subplots\n#import chart_studio.plotly as py\nimport plotly.graph_objects as go\nimport warnings\n#from locale import atof\nimport math\nwarnings.filterwarnings('ignore')","b19346d2":"main_2020 = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nmain_2019 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\nmain_2018 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\nmain_2017 = pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv' , engine='python')","09d273c8":"# for cleaning and extracting the questions\ndef get_ques_and_clean_df(df):\n    cols = df.columns\n    names = df.iloc[0,:]\n    questions = {a : b  for a, b in zip(cols , names)}\n    df.drop([0] , inplace = True)\n    df.reset_index(inplace=True)\n    df.drop(labels='index',axis=1, inplace=True)\n    return questions\n\n# for printing the questions\ndef print_questions(questions):\n    print(f'total number of questions  = {len(questions)}')\n    for i in questions.keys():\n        print(f'{i} : {questions[i]} \\n')","e0295c6e":"questions_2018 = get_ques_and_clean_df(main_2018)\nquestions_2019 = get_ques_and_clean_df(main_2019)\nquestions_2020 = get_ques_and_clean_df(main_2020)\nquestions_2017 = {i : v for i , v in enumerate(main_2017.columns)}","07c1a5b2":"print_questions(questions_2017)","cf38a4e0":"print_questions(questions_2018)","aded8039":"print_questions(questions_2019)","22c8152a":"print_questions(questions_2020)","23d6cb2b":"India_2017 = main_2017.loc[main_2017['Country']=='India']\nIndia_2018 = main_2018.loc[main_2018['Q3']=='India']\nIndia_2019 = main_2019.loc[main_2019['Q3']=='India']\nIndia_2020 = main_2020.loc[main_2020['Q3']=='India']","7a7c08a5":"India_2020['Q2'] = India_2020['Q2'].replace('Man' , 'Male')\nIndia_2020['Q2'] = India_2020['Q2'].replace('Woman' , 'Female')","22a955fd":"colors_list = [\"15bee0\",\"063732\",\"dd1d57\",\"e0d129\",\"2e7a15\",\"ffa10a\",\"21ff6b\",\"8d0101\",\"8c1896\",\"8bc502\"]\ncolors_list += [\"1954b3\",\"3c2a2a\",\"f20a0a\",\"987f34\",\"e17333\",\"2cb579\",\"a9a4e0\",\"e68275\"]\ncolors_list = ['#'+c for c in colors_list]","57772a26":"Jobs_2020 = India_2020['Q5'].value_counts()\nEd_2020 = India_2020['Q4'].value_counts()","663869f8":"# a function to generate custom pivot table for cross referencing between two categorical variables\ndef gen_custom_pivot(df , label1, label2):\n    count_1 = df[label1].value_counts()\n    #count_2 = df[label2].value_counts()\n    df_main = df.loc[df[label1]==count_1.index[0]]\n    df_main = pd.DataFrame(df_main[label2].value_counts())\n    df_main.rename(columns={label2:count_1.index[0]} , inplace=True)\n    for job in count_1.index[1:]:\n        df_s = India_2020.loc[India_2020[label1] == job]\n        df_main = pd.concat([df_main , pd.DataFrame(df_s[label2].value_counts())] , axis=1)\n        df_main.rename(columns={label2:job} , inplace=True)\n    df_main.fillna(0 , inplace=True)\n    return df_main","97fb44b6":"Job_x_Ed = gen_custom_pivot(India_2020 , 'Q5' , 'Q4')\nJob_x_Ed","c4f4bd12":"def plot_dot_plot(df, fig , row):\n    colors = colors_list[:len(df.index)]\n    colors_dict = {i:c for i,c in zip(df.index , colors)}\n    for cols in df.index:\n        fig.add_trace(go.Scatter(x=df.loc[cols] , y= df.columns , name = cols , mode='markers' , marker=dict(color=colors_dict[cols] , size=7)) , row=row , col=1)\n    fig.update_xaxes(title='Education' , row=row , col=1)\n    fig.update_yaxes(title='Job Title' , row=row , col=1)","7b786915":"fig = make_subplots(rows=4 , cols=2, row_heights = [0.32,0.18,0.5,0], vertical_spacing=0.08,\n                   specs = [[{'type':'bar' , 'colspan':2}, None],\n                           [{'type':'bar' , 'colspan':2},None],\n                           [{'type':'scatter', 'colspan':2 , 'rowspan':2}, None],\n                           [None , None]],\n                   subplot_titles = ('Distribution of Jobs' , 'Distribution od Education' , 'Jobs against Education'))\nfig.add_trace(go.Bar(y= Jobs_2020.index , x= Jobs_2020.values , orientation='h', showlegend=False), row=1, col=1)\nfig.add_trace(go.Bar(y= Ed_2020.index , x = Ed_2020.values , orientation='h',showlegend=False), row=2,col=1 )\nplot_dot_plot(Job_x_Ed , fig , 3)\nfig.update_layout(template='seaborn',height=1100 , width=1000,\n                  legend=dict(yanchor='bottom' , y=-0.25 , xanchor='left', x=0.01),\n                 title = dict(text='FIGURE 1 : <br>Distribtuion of Education accross Job Titles in Data science sector in India',\n                             xanchor='left' , x=0.05))\nfig.show()","5500ba10":"def decoma(x):\n    if type(x) == str:\n        symbols = [',' ,'$' , '<' , \">\" , '+']\n        for sym  in symbols:\n            x = x.replace(sym , '')\n        if len(x) <= 3:\n            x += '000'\n    return x\n\ndef get_sorted_index(index):\n    # preparing bins and labels for binning\n    labels = index.copy()\n    bins = [a.split('-')[0] for a in labels if type(a) == str ]\n    bins = [int(decoma(x)) for x in bins]\n    bins.sort()\n    # list comprehension to sort the string intervals in correct order using age_bins list\n    bin_labels = [c for a in bins for c in labels if int(decoma(c.split('-')[0])) == a]\n    return bin_labels","738858d1":"pay_x_Job = gen_custom_pivot(India_2020 , 'Q5' ,'Q24')\npay_x_Job = pay_x_Job.reindex(get_sorted_index(pay_x_Job.index))\npay_x_Job.drop(columns=['Student', 'Currently not employed'],axis=1, inplace=True)\npay_x_Job","701fd44f":"subplot_titles = (list(pay_x_Job.columns))\nsubplot_titles.append(' ')","0e82004f":"fig = make_subplots(rows = len(subplot_titles) , cols=2, vertical_spacing=0.012,\n                   specs=([[{'type':'bar', 'colspan':2}, None]]*(len(subplot_titles)-1))+[[{'type':'indicator', 'colspan':2}, None]],\n                   subplot_titles = subplot_titles)\nfor i , v in enumerate(pay_x_Job.columns):\n    fig.add_trace(go.Bar(x=pay_x_Job.index , y=pay_x_Job[v], showlegend=False), row=i+1, col=1)\n    if i+1 != len(pay_x_Job.columns):\n        fig.update_xaxes(showticklabels=False , row=i+1 , col=1)\nfor i in fig['layout']['annotations']:\n    i['font'] = dict(size=12 )\n    i['xanchor'] = 'left'\n    i['x']=0.02\nfig.update_layout(height=1800 , title_text='FIGURE 2 : <br>Salary of DS and ML professionals in India accross different job roles')\nfig.show()","740f7771":"Ed_x_Job = gen_custom_pivot(India_2020 , 'Q4' ,'Q24')\nEd_x_Job = Ed_x_Job.reindex(get_sorted_index(Ed_x_Job.index))\nEd_x_Job","00a6ab32":"subplot_titles = list(Ed_x_Job.columns)\nsubplot_titles = [str(i)+'. '+c for i,c in zip(range(1,len(subplot_titles)+1), subplot_titles)]","d3158e19":"fig = make_subplots(rows = len(subplot_titles) , cols=2, vertical_spacing=0.025,\n                   specs=([[{'type':'bar', 'colspan':2}, None]]*(len(subplot_titles))),\n                   subplot_titles = subplot_titles)\nfor i , v in enumerate(Ed_x_Job.columns):\n    fig.add_trace(go.Bar(x=Ed_x_Job.index , y=Ed_x_Job[v], showlegend=False), row=i+1, col=1)\n    if i+1 != len(Ed_x_Job.columns):\n        fig.update_xaxes(showticklabels=False , row=i+1 , col=1)\nfor i in fig['layout']['annotations']:\n    i['font'] = dict(size=12 )\n    i['xanchor'] = 'left'\n    i['x']=0.02\nfig.update_layout(height=900 , title_text='FIGURE 3 : <br>Salary of DS and ML professionals in India by level of education')\nfig.show()","96cccf07":"company_size = India_2020[['Q20' , 'Q21']]\ncompany_size.shape","bee9349c":"company_size.isna().sum()","24c5a7be":"company_size.dropna(inplace=True)\ncompany_size.head()","58975b35":"fig= make_subplots(rows=2 , cols=1 , subplot_titles= ('Distribtuion of Company size' , 'Number of Data scientists in a company'))\ndf = company_size['Q20'].value_counts()\nfig.add_trace(go.Bar(x = df.values , y = df.index , showlegend=False , orientation = 'h'),row=1 , col=1)\ndf2 = company_size['Q21'].value_counts()\ndf2 = df2.reindex(get_sorted_index(df2.index))\nfig.add_trace(go.Bar(x= df2.values , y=df2.index , showlegend=False , orientation='h'), row=2,col=1)\nfig.update_layout(title_text = 'FIGURE 4 : <br>Company size and number of Data scientists in India')\nfig.show()","641e4041":"ML_and_pro = India_2020[['Q15' , 'Q6']]\nprint(ML_and_pro['Q15'].unique())\nprint(ML_and_pro['Q6'].unique())","5ab2b0a8":"fig=  make_subplots(rows=2 , cols=1, subplot_titles=('Experience in Coding' , 'Experience in Machine learning methods'))\ndf = India_2020['Q6'].value_counts()\nfig.add_trace(go.Bar(x=df.values , y=df.index , showlegend=False , orientation='h'), row=1, col=1)\ndf2 = India_2020['Q15'].value_counts()\nfig.add_trace(go.Bar(x=df2.values , y=df2.index , showlegend=False , orientation='h'), row=2, col=1)\nfig.update_layout(title_text='FIGURE 5 : <br>Distribtuion of Work experience in ML and coding in Indian DS community', height=600)\nfig.show()","99da41de":"sal_and_code = gen_custom_pivot(India_2020 , 'Q6' , 'Q24')\nsal_and_ml = gen_custom_pivot(India_2020 , 'Q15' ,'Q24')","2d17bebd":"colors= sns.color_palette('inferno' , 25)\ncolors = ['rgb'+str(c) for c in colors]\ncolors_dict = {i:c for i,c in zip(sal_and_code.index , colors)}\ncolors_dict","2e9a55af":"def plot_bars(df, figure , row , colors_dict :dict , showlegend=False):\n    for i in df.index:\n        fig.add_trace(go.Bar(y=df.columns , x=df.loc[i] ,orientation='h', name=i , marker = dict(color=colors_dict[i]), showlegend=showlegend), row=row, col=1)\n","5f89454f":"fig = make_subplots(rows=2 , cols=1 , subplot_titles = ('Coding' , 'ML'))\nplot_bars(sal_and_code , fig , 1 , colors_dict , showlegend=True)\nplot_bars(sal_and_ml , fig , 2, colors_dict)\nfig.update_layout(title_text = 'FIGURE 6 : <br>Effect of Experience on salary' , barmode='stack', height=600 , width=1000)\nfig.show()","76f97fb7":"# group_count = pd.DataFrame(India_2020.groupby(['Q6' , 'Q24'])['Q24'].count())\n# group_count = group_count.rename(columns={'Q24':'Values'})\n# group_count['Q6'] = group_count.index.get_level_values(0)\n# group_count['Q24'] = group_count.index.get_level_values(1)\n# group_count = group_count[['Q6' , 'Q24' , 'Values']]\n# group_count.reset_index(drop=True , inplace=True)\n# group_count","e1ee6de5":"<a id='part_2c'> <\/a>\n- ### Company size and number of data scientist","e0c56ad0":"2. pay accross education","95b065b4":"from the above figure we can see that Bachelor's degree is dominating in almost every job title. for SDE Bachelor's wins with a good margin , for Data scientist Master's take over Bachelor's with a slight margin , In Data Analyst its Bachelor's , ML engineer its Bachelor's. Thus what was concieved for Data Science and Ml domain that you need Master's or Doctor's to work in the Data science field is wrong ans so we can say *THE MYTH IS BURSTED* !!","a0df0a51":"<a id = 'part_2b'><\/a>\n- ### <u> How Good is the pay<\/u>\n\nnow lets explore what factors effect the pay\n1.      pay accorss Job titles","cf41052d":"How expeience in these two aspects efect the salary","c5d529b4":"we can see that most of the people are getting paid under USD 1000 anually how ever when we look at the higher pay i-e above 10,000 USD than its higher degrees which are winning which is obvious because they come with good ammount of experience.<br>\n\nBut in General case if we look at the distribution we can conclude that Bachelor's is enough to start a professional career.<br>\n\nanother important insight we get here is that we can see there are people who are working in this field who don't have a professional degree (graph 3 and 7 in Figure 3). which is a good sign, it shows that one can make a good career with shear skill and talent even if he\/she don't have a proper education, all you need is to work hard","9747f469":"# Data Science in India - part 2\n----\n----\nIn Part 1 we looked at egnder demographics to see if there are any gender sterotypes that still exist in the data science community our analysis showed that there wasn't and things were all similar accross both the genders now in the part 2 we will looking at the industry like size of the company , how much its investing in the data science, what are the types of jobs available how education effects these jobs and what are trends in Data science enthusiasts i-e the part of the community which is more towards learning\n\n ### <b>Table of Contents <\/b>\n * [Part 1 : Studying the Gender Demographics](https:\/\/www.kaggle.com\/zainahmad\/data-science-in-india-part-1) <br> \n * [Part 2 : Industry , Jobs and Education](#part_2)<br>\n     2.1 [Jobs and Education](#part_2a)<br> \n     2.2 [How good is the pay](#part_2b)<br>\n     2.3 [Company size and number of data scientist](#part_2c)<br>\n     2.4 [How does experience helps](#part_2d)<br>\n     ","1c8185a9":"Distribtuion of Experience","88866476":"<a id='part_2'><\/a>\n## Part 2 - Industry , Jobs and Eduaction\n---\nwe will start from looking at the different types of Jobs how it goes with the education what are the compensations for each of them. how much experience they require etc.\n\n","6c7a02f3":"<a id='#part_2d'><\/a>\n- ### How does experience helps","ebdea2bf":"<a id='part_2a'><\/a>\n- ### <u>Jobs and Education<\/u>"}}