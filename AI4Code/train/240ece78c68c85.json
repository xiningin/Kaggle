{"cell_type":{"f0013b67":"code","8334a1e1":"code","124ece7c":"code","c807e425":"code","ae9f8677":"code","c4399f85":"code","a246f9f7":"code","581c121c":"code","88f0f5fd":"code","c003c857":"code","cfd370fc":"code","dae6f5e0":"markdown","eee96307":"markdown","0f2e4792":"markdown","82438cea":"markdown","08b8a620":"markdown"},"source":{"f0013b67":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8334a1e1":"import pandas as pd","124ece7c":"df=pd.read_csv('..\/input\/cars-dataset\/2. Cars Data1.csv')\ndf.head(10)","c807e425":"df.shape","ae9f8677":"df.isnull().sum()","c4399f85":"df=df.dropna()\ndf.head()","a246f9f7":"df.fillna(df.mean(),inplace=True)","581c121c":"df['Make'].value_counts()","88f0f5fd":"df[df['Origin'].isin(['Asia','Europe'])]","c003c857":"df[~(df['Weight']>4000)]","cfd370fc":"df['MPG_City']=df['MPG_City'].apply(lambda x:x+3)\ndf","dae6f5e0":"***Q. 1) Instruction ( For Data Cleaning ) - Find all Null Values in the dataset. If there is any null value in any column, then fill it with the mean of that column.***","eee96307":"***Q. 5) Instruction ( Applying function on a column ) - Increase all the values of 'MPG_City' column by 3.***","0f2e4792":"***Q. 4) Instruction ( Removing unwanted records ) - Remove all the records (rows) where Weight is above 4000.***","82438cea":"***Q. 3) Instruction ( Filtering ) - Show all the records where Origin is Asia or Europe***","08b8a620":"***Q. 2) Question ( Based on Value Counts )- Check what are the different types of Make are there in our dataset. And, what is the count (occurrence) of each Make in the data ?***"}}