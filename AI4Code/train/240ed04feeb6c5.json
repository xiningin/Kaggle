{"cell_type":{"6cf4f233":"code","fff7d0d2":"code","9de2679b":"code","aec228cf":"markdown"},"source":{"6cf4f233":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fff7d0d2":"import requests, lxml\nfrom bs4 import BeautifulSoup as bs","9de2679b":"season_links = ['https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2014\/', \n                'https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2015\/', \n                'https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2016\/',\n                'https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2017\/',\n                'https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2018\/',\n                'https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2019\/',\n                'https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2020\/']\n\nfile_names = ['matchdays13_14.xlsx', \n              'matchdays14_15.xlsx', \n              'matchdays15_16.xlsx', \n              'matchdays16_17.xlsx', \n              'matchdays17_18.xlsx', \n              'matchdays18_19.xlsx', \n              'matchdays19_20.xlsx']\n\nfor link in range(len(season_links)):\n    # requesting webpage\n    file_path = requests.get(season_links[link])\n    # getting html of webpage\n    html = file_path.text\n    # creating soup obj\n    soup = bs(html)\n    # sorting to the data table on html \n    season = soup.find_all(\"td\")\n    # first create a list of every 5th element (date with tags)\n    date_list = season[::5]\n    # first create a list of every 5th element (result with tags)\n    result_list = season[2::5]\n    # creating matchdates pd.Series with .text for season13_14\n    matchdates = [date.text for date in date_list]\n    date_series = pd.Series(matchdates)\n    # creating results pd.Series with .text for season13_14\n    results = [result.text for result in result_list]\n    result_series = pd.Series(results)\n    # creating pd.DateFrame for season 13-14\n    dataframe = pd.DataFrame({\n               \"Matchdate\" : date_series,\n               \"Result\" : result_series\n                })\n    # saving as xlsx format\n    dataframe.to_excel(file_names[link])","aec228cf":"Webscraping code for mathday results\n### Links to schedules for all seasons:\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2014\/\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2015\/\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2016\/\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2017\/\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2018\/\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2019\/\n- https:\/\/www.11v11.com\/teams\/manchester-united\/tab\/matches\/season\/2020\/"}}