{"cell_type":{"d77ed69d":"code","04f7ea27":"code","02ee2b68":"code","6b144a3b":"code","c17e16b7":"code","6997f397":"code","957c027e":"code","d920f510":"code","6e7312fe":"code","4c06f4f7":"code","a28feeba":"code","a0258069":"code","cbcb0bc9":"code","eac39ff9":"code","f3849400":"code","faef04d3":"code","e025a434":"code","5067e8ef":"code","16593b95":"code","922f7cf3":"code","93e09d61":"code","45af8f6f":"code","6b94e372":"code","4cea2552":"code","2fc7cca5":"code","9642beac":"code","9c7d7800":"code","55d4b0a4":"code","6d9e58bc":"code","3851dd16":"code","2d562be8":"code","c267b875":"code","b0a7a97a":"code","99726ee0":"code","93db8403":"code","997f111d":"code","c12b9bce":"markdown","eea28f44":"markdown","ed0fb70c":"markdown","d8647da3":"markdown","ca5ef588":"markdown","d0ff08a7":"markdown","73087cd7":"markdown","708f758c":"markdown","52cf3b10":"markdown","9995ea10":"markdown","4afd1e93":"markdown","fbc787d8":"markdown","046f8b52":"markdown","4fe5d2f5":"markdown","ef0c8006":"markdown"},"source":{"d77ed69d":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom plotly.offline import init_notebook_mode, plot, iplot\nimport plotly.express as px\nimport plotly.graph_objects as go\ninit_notebook_mode(connected=True)\n\nimport cufflinks as cf\ncf.go_offline()\n\nfrom sklearn.feature_extraction.text import CountVectorizer","04f7ea27":"df = pd.read_csv('..\/input\/cyberbullying-classification\/cyberbullying_tweets.csv')\ndf.head()","02ee2b68":"# looking up for frequency of each type of cyberbullying category in the dataset\ndf['cyberbullying_type'].value_counts()","6b144a3b":"# The dataset is well balanced as mentioned in the data description\ndf['cyberbullying_type'].value_counts().iplot(kind=\"bar\")","c17e16b7":"import nltk\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize","6997f397":"import re\nclean = '@\\S+|https?:\\S+|http?:\\S|[^A-Za-z0-9]+'\nstop_words = set(stopwords.words('english'))","957c027e":"# function to remove stopwords\ndef filter_stopwords(text):\n    return \" \".join([word for word in word_tokenize(text) if word not in stop_words])","d920f510":"def text_preprocessing(text):\n    text = re.sub(clean, ' ', text)\n    text = text.lower()\n    text = filter_stopwords(text)\n    return text","6e7312fe":"# this function returns the n_grams or words with the frequency in the twitter post.\n# This function is referred from another kaggle notebook posted for this Dataset\n# Link for reference -> https:\/\/www.kaggle.com\/lizakonopelko\/cyberbullying-on-twitter-visualization\n\ndef top_frequency_words(text, ng_range=(1,1), n=None):\n    vector = CountVectorizer(ngram_range = ng_range, stop_words = stop_words).fit(text)\n    bag_of_words = vector.transform(text)\n    sum_words = bag_of_words.sum(axis=0) \n    words_freq = [(word, sum_words[0, idx]) for word, idx in vector.vocabulary_.items()]\n    words_freq = sorted(words_freq, key = lambda x: x[1], reverse=True)\n    return words_freq[:n]","4c06f4f7":"df['tweet_text']=df['tweet_text'].apply(text_preprocessing)","a28feeba":"df.head()","a0258069":"# Text lemmatizer\nfrom nltk.stem import WordNetLemmatizer\n\nlematizer = WordNetLemmatizer()\ndef lemmatizer_words(text):\n    return \" \".join([lematizer.lemmatize(word, pos = 'a') for word in text.split()])\ndf['tweet_text'] = df['tweet_text'].apply(lambda text: lemmatizer_words(text))","cbcb0bc9":"df.head()","eac39ff9":"# Function to get data for each unique value of Cyberbullying_type\ndef cyberbullying_type_data(cb_type, column_name='cyberbullying_type'):\n    subset = df[df[column_name] == cb_type]\n    text_data = subset.tweet_text.values\n    return text_data","f3849400":"def most_used_words_phrases(cb_data, n=10):\n    unigrams = top_frequency_words(cb_data,(1,1),n)\n    unigram_data = pd.DataFrame(unigrams, columns = ['Text' , 'count'])\n    return unigram_data","faef04d3":"# Creating datasets of specific criterion of cyberbullying as obtained from the original dataset\ngender_data = most_used_words_phrases(cyberbullying_type_data('gender'), 20)\nreligion_data = most_used_words_phrases(cyberbullying_type_data('religion'), 20)\nethnicity_data = most_used_words_phrases(cyberbullying_type_data('ethnicity'), 20)\nage_data = most_used_words_phrases(cyberbullying_type_data('age'), 20)\nother_cb_data = most_used_words_phrases(cyberbullying_type_data('other_cyberbullying'), 20)\nnot_cb_data = most_used_words_phrases(cyberbullying_type_data('not_cyberbullying'), 20)","e025a434":"# Function to plot a bar graph\ndef create_word_bar(data, title):\n    fig = px.bar(data, x = 'Text', y = 'count', color = 'Text',\n                     labels={\n                         'count': \"Word Frequency\"\n                     },\n                     title=title)\n    fig.show()","5067e8ef":"# Plotting the bar graph for each criterion\ncreate_word_bar(gender_data, 'Gender')\ncreate_word_bar(religion_data, 'Religion')\ncreate_word_bar(ethnicity_data, 'Ethnicity')\ncreate_word_bar(age_data, 'Age')\ncreate_word_bar(other_cb_data, 'Other Cyberbullying')\ncreate_word_bar(not_cb_data, 'Not Cyberbullying')","16593b95":"def create_cb_sets(cb_type):\n    subset = df[df['cyberbullying_type'] == cb_type].tweet_text.values\n    unigrams = top_frequency_words(subset,(1,1), 100) # Just considering the top 100 in frequencies\n    unigrams_data = pd.DataFrame(unigrams, columns = ['Text' , 'count'])\n    return unigrams_data","922f7cf3":"# Creating the criterion specific datasets\ngender_cb_data = create_cb_sets('gender')\nage_cb_data = create_cb_sets('age')\nreligion_cb_data = create_cb_sets('religion')\nethnicity_cb_data = create_cb_sets('ethnicity')\nother_data = create_cb_sets('other_cyberbullying')\nnot_data = create_cb_sets('not_cyberbullying')","93e09d61":"gender_cb_data.shape","45af8f6f":"# Performing an inner merge (intersection) of the gender and religion datasets.\nintersecting_df = pd.merge(gender_cb_data, religion_cb_data, how='inner', on=['Text'])\nmodified_idf = intersecting_df.merge(age_cb_data, how='left', on=['Text']) #age","6b94e372":"# Renaming the default column names\nmodified_idf.rename(columns={'count_x': 'gender', 'count_y': 'religion', 'count': 'age'}, inplace=True)","4cea2552":"# Left joining the remaining datasets with keeping the Text column as common.\nmodified_idf = modified_idf.merge(ethnicity_cb_data, how='left', on=['Text']) #ethnicity\nmodified_idf.rename(columns={'count': 'ethnicity'}, inplace=True)\nmodified_idf = modified_idf.merge(other_data, how='left', on=['Text']) #other\nmodified_idf.rename(columns={'count': 'other_cb'}, inplace=True)\nmodified_idf = modified_idf.merge(not_data, how='left', on=['Text']) #not cb\nmodified_idf.rename(columns={'count': 'not cyberbullying'}, inplace=True)","2fc7cca5":"# Replacing the Nan values with zero\nmodified_idf['age'] = modified_idf['age'].fillna(0)\nmodified_idf['ethnicity'] = modified_idf['ethnicity'].fillna(0)\nmodified_idf['other_cb'] = modified_idf['other_cb'].fillna(0)\nmodified_idf['not cyberbullying'] = modified_idf['not cyberbullying'].fillna(0)","9642beac":"modified_idf.isna().sum()","9c7d7800":"modified_idf.head()","55d4b0a4":"# Generating the Paralled Coordinates Plot\nfig = px.parallel_coordinates(modified_idf, color='gender', labels={\n                \"gender\": \"gender\",\n                \"religion\": \"religion\",\n                \"age\": \"age\",\n                \"ethnicity\": \"ethnicity\",\n                \"other_cb\": \"other_cb\",\n                \"not cyberbullying\": \"not cyberbullying\"},\n                )\n\nfig.show()","6d9e58bc":"import networkx as nx\nfrom networkx.drawing.layout import spring_layout\nfrom bokeh.io import output_notebook, show, save\nfrom bokeh.models import Range1d, Circle, ColumnDataSource, MultiLine\nfrom bokeh.plotting import figure\nfrom bokeh.plotting import from_networkx\nfrom bokeh.palettes import Blues8, Reds8, Purples8, Oranges8, Viridis8, Spectral8\nfrom bokeh.transform import linear_cmap","3851dd16":"output_notebook()","2d562be8":"def make_networks(cyberbullying_type):\n    subset = df[df['cyberbullying_type'] == cyberbullying_type].tweet_text.values\n    bigrams = top_frequency_words(subset,(2,2), 100)\n    \n    bigrams_list = []\n    for bigram in bigrams:\n        bigrams_list.append(bigram[0].split())\n        \n    # initializing the graph\n    graph = nx.DiGraph()\n    #Adding the Nodes\n    for node in bigrams_list:\n        graph.add_nodes_from([node[0]])\n    # Connecting the nodes with Edges\n    for edge in bigrams_list:\n        graph.add_edges_from([(edge[0], edge[1])])\n    \n    # Determing the degree of each node, that is the number of connected edges adjacent to a node.\n    degrees = dict(nx.degree(graph))\n    \n    nx.set_node_attributes(graph, name = 'degree', values = degrees)\n    # Adding an offset number of 5 so that nodes with small degree are also visible in the graph visualization\n    number_to_adjust_by = 5\n    adjusted_node_size = dict([(node, degree + number_to_adjust_by) for node, degree in nx.degree(graph)])\n    nx.set_node_attributes(graph, name = 'adjusted_node_size', values = adjusted_node_size)\n    \n    size_by_this_attribute = 'adjusted_node_size'\n    color_by_this_attribute = 'adjusted_node_size'\n    #     Blues8, Reds8, Purples8, Oranges8, Viridis8, Spectral8\n    color_palette = Blues8\n    if cyberbullying_type == \"ethnicity\":\n        color_palette = Reds8\n    elif cyberbullying_type == \"gender\":\n        color_palette = Blues8\n    elif cyberbullying_type == \"age\":\n        color_palette = Purples8\n    elif cyberbullying_type == \"religion\":\n        color_palette = Viridis8\n    elif cyberbullying_type == \"other_cyberbullying\":\n        color_palette = Oranges8\n    elif cyberbullying_type == \"not_cyberbullying\":\n        color_palette = Spectral8\n        \n    title = cyberbullying_type\n    HOVER_TOOLTIPS = [\n        (\"Character\", \"@index\"),\n        (\"Degree\", \"@degree\")\n    ]\n    plot = figure(tooltips = HOVER_TOOLTIPS,\n                  tools = \"pan, wheel_zoom, save, reset\", active_scroll = 'wheel_zoom',\n                x_range = Range1d(-10.1, 10.1), y_range = Range1d(-10.1, 10.1), title = title)\n    network_graph = from_networkx(graph, nx.spring_layout, scale=10, center = (0, 0))\n\n    minimum_value_color = min(network_graph.node_renderer.data_source.data[color_by_this_attribute])\n    maximum_value_color = max(network_graph.node_renderer.data_source.data[color_by_this_attribute])\n    network_graph.node_renderer.glyph = Circle(size = size_by_this_attribute, \n                                               fill_color = linear_cmap(color_by_this_attribute, \n                                                                        color_palette, \n                                                                        minimum_value_color,\n                                                                        maximum_value_color)\n                                              )\n\n    network_graph.edge_renderer.glyph = MultiLine(line_alpha = 0.5, line_width = 1)\n    plot.renderers.append(network_graph)\n    return (plot, degrees, graph)","c267b875":"# calling the make_networks to get the graph plot data and degree of each node in each category\ngender_network_plot, gender_degree, gender_graph = make_networks('gender')\nage_network_plot, age_degree, age_graph = make_networks('age')\nreligion_network_plot, religion_degree, religion_graph = make_networks('religion')\nethnicity_network_plot, ethnicity_degree, ethnicity_graph = make_networks('ethnicity')\nother_cb_network_plot, other_cb_degree, other_cb_graph = make_networks('other_cyberbullying')\nnot_cb_network_plot, not_cb_degree, not_cb_graph = make_networks('not_cyberbullying')","b0a7a97a":"# displaying the interactive network plots\nshow(gender_network_plot)\nshow(age_network_plot)\nshow(religion_network_plot)\nshow(ethnicity_network_plot)\nshow(other_cb_network_plot)\nshow(not_cb_network_plot)","99726ee0":"print('Degree of each Node in the Gender category:- ', gender_degree)\nprint(\"--------------------------------------------------------------------\")\nprint('Degree of each Node in the Age category:- ', age_degree)\nprint(\"--------------------------------------------------------------------\")\nprint('Degree of each Node in the Religion category:- ', religion_degree)\nprint(\"--------------------------------------------------------------------\")\nprint('Degree of each Node in the Ethnicity category:- ', ethnicity_degree)\nprint(\"--------------------------------------------------------------------\")\nprint('Degree of each Node in the Other Cyberbullying category:- ', other_cb_degree)\nprint(\"--------------------------------------------------------------------\")\nprint('Degree of each Node in the Not Cyberbullying category:- ', not_cb_degree)\nprint(\"--------------------------------------------------------------------\")","93db8403":"# function to plot the degrees of each node\ndef plot_degree_of_nodes(degrees, title):\n    fig = px.bar(x = list(degrees.keys()), y = list(degrees.values()), color = list(degrees.values()),\n                         labels={\n                             'y': \"Degree\",\n                             'x': \"Nodes\"\n                         },\n                 title = title\n                         )\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show()","997f111d":"# calling the functions to plot degree of nodes\nplot_degree_of_nodes(gender_degree, 'Gender')\nplot_degree_of_nodes(age_degree, 'Age')\nplot_degree_of_nodes(religion_degree, 'Religion')\nplot_degree_of_nodes(ethnicity_degree, 'Ethincity')\nplot_degree_of_nodes(other_cb_degree, 'Other Cyberbullying')\nplot_degree_of_nodes(not_cb_degree, 'Not Cyberbullying')","c12b9bce":"<p style=\"font-family:cursive;\">The above plot shows that a lot of cyberbullying posts might not be directed just towards one criterion, but can be thought or perceived as a negitive post in multiple criteria.<\/p>","eea28f44":"# <center style=\"font-family:verdana;\">Index<\/center>\n* [Text Preprocessing](#text_preprocessing)\n* [Frequency Bar Plots of Multiple Categories](#bar_plots)\n* [Data Processing for Paralled Coordinate Graphs](#data_processing_pcg)\n * [Visualizing Parallel Coordinate Graph](#paralled_coordinate_graph)\n* [Network Analysis of bigrams relationships](#networks)\n * [Visualizing the Networks](#network_plots)\n* [Degree of Nodes from Networkx Graphs of each Category](#node_degree)\n * [Visualizing Degree of Nodes](#degree_bar_plots)","ed0fb70c":"<a id=\"node_degree\"><\/a>\n# <center style=\"font-family:verdana;\">Plotting the Degree of each Node in each Category<\/center>\n***\n<p style=\"font-family:cursive;\">Lets have a bar plot of degree of each node in each category. It will help us to see which are the most common  words carrying the maximum sentiment of the twitter post. Also have a look at the frequency of these words used with other to target specific groups of population or specific type of sentiment.<br><br>\nThe degree of each node in a particular category is stored in its respective dictionary.<\/p>","d8647da3":"<a id = \"text_preprocessing\"><\/a>\n# <center style=\"font-family:verdana;\">Text Preprocessing<\/center>\n<hr>","ca5ef588":"# <center style=\"font-family:verdana;\">\ud83d\ude36 Cyberbullying Twitter Posts Analysis<\/center>\n<hr>","d0ff08a7":"<a id=\"networks\"><a>\n# <center style=\"font-family:verdana;\">Networkx Analysis with Graphs<\/center>\n***","73087cd7":"<a id=\"data_processing_pcg\"><\/a>\n# <center style=\"font-family:verdana;\">Data Processing for Paralled Coordinate Graphs<\/center>\n***\n<p style=\"font-family:cursive;\">By just looking at the above bar plots, we can say that some words do fall into multiple categories. For example the word <i>\"bully\"<\/i> falls into the <b>Age<\/b> and <b>Other Cyberbullying<\/b> category.\nThis will help us to understand the relationship between the multiple categories by looking how the words are used interchangably.<\/p>","708f758c":"<a id=\"bar_plots\"><\/a>\n# <center style=\"font-family:verdana;\">Visualizations of the Preprocessed Twitter Posts<\/center>\n***","52cf3b10":"<p style=\"font-family:cursive;\">A network graph is used to show and analyse the relationships between the nodes using simple links. It will allow us to visualize clusters and how different nodes are related with each other with ease and quickly.<br><br>\nTo create this network of words, we will generate word pairs, also known as bigrams. Till now, we used unigrams for our plots above and analysis. We will generate bigrams of those words which carry the main weight or sentiment of the whole text body. In simpler words, they are those word phrases which are giving the whole text an bullying sentiment.<br><br>\nWe use a DiGraph class from the networkx. It is the base class for directed graphs and can store nodes and edges with many optional data.<br><br>\nThe degree of each node is the number of edges adjacent to the node.<br><br>\nThe nodes in the plots will be coloured according to the size of the node.<\/p>\n\n## <center style=\"font-family:verdana;\">How does this help us?<\/center>\n<p style=\"font-family:cursive;\">In the above plots, we have been restricting ourselves to the use of unigrams only. All the bar plots and paraller coordinate plots are based on the analysis on unigrams text.<br>\nIn this case we are able to go a step further and start our work with bigrams. As bigrams might contain more meaning and weight as compared to unigrams.<br><br>\nAlso as we observed in the Paralled Coordinate plot above that many unigrams are occuring for multiple types of cyberbullying category. For example the word <b>women<\/b> is taken into account for multiple cyberbullying type categories such as <b>gender<\/b> and <b>religion<\/b>. To make it quick and easy to observe this type of relation and how many words might be interconnected within or across multiple categories, we can make such network plots as below.<\/p>","9995ea10":"<p style='font-family:cursive'>In this notebook I have shown the text analysis of Cyberbullying Twitter posts from the provided dataset. This notebook contains various plots and network visualizations about how the words used in each twitter post creates the sentiment of getting bullied online. We will be able to see on what basis these phrases can be used interchangably and with minor tewaking of words, more than one sentiment can be affected.<br><br>\nI hope you find my analysis and visualizations useful.<\/p>","4afd1e93":"<p style=\"font-family:cursive;\">I will be updating this notebook in further versions with more analysis that I can think of and eventually a Machine Learning model to classify Cyberbullying types on the provided data. I am open to suggessions to improve this notebook. Any queries, I will be happy to answer in the comments.<br><br>\nKindly do upvote if you liked what you saw in this notebook and I am eager to see others work as well \u270c.<\/p>","fbc787d8":"![cb image.png](attachment:90706a7f-a2b5-43c1-a83c-314e6359e4d4.png)","046f8b52":"<a id=\"network_plots\"><\/a>","4fe5d2f5":"<a id=\"paralled_coordinate_graph\"><\/a>","ef0c8006":"<a id=\"degree_bar_plots\"><\/a>"}}