{"cell_type":{"480dd56b":"code","2569a825":"code","5fe772cc":"code","5010ee92":"code","baf768cc":"code","523da1bc":"code","a3bf43da":"code","fc25f4c8":"code","5bc00e75":"code","8ac7eda7":"code","15832f79":"code","598c2ccf":"markdown","21b94e52":"markdown","18d32b6f":"markdown","9b24e95b":"markdown","4c484822":"markdown","10a4b03c":"markdown","e36548eb":"markdown","e5826436":"markdown","24606b24":"markdown","0873cd63":"markdown"},"source":{"480dd56b":"#!pip install plotly","2569a825":"import numpy as np \nimport pandas as pd \nimport plotly as py\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots","5fe772cc":"# Read Data\ndf = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ndf.head()","5010ee92":"# Rename columns\ndf = df.rename(columns={'Country\/Region':'Country'})\ndf = df.rename(columns={'ObservationDate':'Date'})\n\n# Rename 'Mainland China'\ndf['Country'] = df['Country'].replace('Mainland China', 'China')\n\n# Create new column with active cases\ndf['Active'] = df['Confirmed'] - df['Deaths'] - df['Recovered']\n\ndf.head()","baf768cc":"# Get last update\nlast_update = df[df['Date'] == max(df['Date'])].reset_index()\ntable_data = last_update.groupby([\"Date\"])[[\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"]].sum().reset_index()\n\n# Create table\nlabels = [\"Last Update\",\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"]\nfig = go.Figure(data=[go.Table(header=dict(values=labels),\n                 cells=dict(values=table_data.loc[0,[\"Date\",\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"]]))\n                     ])\n\nfig.update_layout(\n    title_text='COVID-19 in the World: ',\n    title_x = 0.5\n)\n\nfig.show()","523da1bc":"# Create dataframe for pie plot\ndf_countries = df.groupby(['Country', 'Date']).sum().reset_index().sort_values('Date', ascending=False)\ndf_countries = df_countries.drop_duplicates(subset = ['Country'])\ndf_countries = df_countries[df_countries['Confirmed']>0]\n\n# Create visualization\nfig = px.pie(df_countries, values = 'Confirmed',names='Country', height=600)\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.update_layout(\n    title_text = 'Proportion of Confirmed Cases by Country',\n    title_x = 0.5,\n    geo=dict(\n        showframe = False,\n        showcoastlines = False,\n    ))\n\nfig.show()","a3bf43da":"# Create visualization\nfig = px.treemap(df_countries, path=['Country'], values='Recovered', height=600, width=1000)\n\nfig.update_layout(\n    title_text = 'Recovered Cases by Country',\n    title_x = 0.5,\n    geo=dict(\n        showframe = False,\n        showcoastlines = False,\n    ))\n\nfig.show()","fc25f4c8":"fig = go.Figure(data=go.Choropleth(\n    locations = df_countries['Country'],\n    locationmode = 'country names',\n    z = df_countries['Confirmed'],\n    colorscale = 'Reds',\n    marker_line_color = 'black',\n    marker_line_width = 0.5,\n))\n\nfig.update_layout(\n    title_text = 'Confirmed Cases as of November 15, 2020',\n    title_x = 0.5,\n    geo=dict(\n        showframe = False,\n        showcoastlines = False,\n        projection_type = 'equirectangular'\n    )\n)","5bc00e75":"# Create dataframe for animated cloropleth map\ndf_countrydate = df[df['Confirmed']>0]\ndf_countrydate = df_countrydate.groupby(['Date','Country']).sum().reset_index()\n\n# Create visualization\nfig = px.choropleth(df_countrydate, \n                    locations=\"Country\", \n                    locationmode = \"country names\",\n                    color=\"Confirmed\", \n                    hover_name=\"Country\", \n                    animation_frame=\"Date\"\n)\n\nfig.update_layout(\n    title_text = 'Global Spread of COVID-19',\n    title_x = 0.5,\n    geo=dict(\n        showframe = False,\n        showcoastlines = False,\n    )\n)\n    \nfig.show()","8ac7eda7":"# Create datafram for bar charts\nbar_data = df.groupby(['Country'])['Confirmed', 'Recovered', 'Active', 'Deaths'].sum().reset_index().sort_values('Confirmed', ascending=False).reset_index(drop=True)\n\n# Create visualization\nfig = px.bar(bar_data[0:10], \n             x=\"Country\", \n             y=\"Confirmed\",\n             color='Country', \n             text = 'Confirmed', \n             orientation='v', height=600,\n             title='Most 10 Infected Countries')\nfig.show()","15832f79":"# Create dataframe for line graph\nline_data = df.groupby('Date').sum().reset_index()\n\n# Create visualization\nline_data = line_data.melt(id_vars='Date', \n                           value_vars=['Confirmed', 'Recovered', 'Deaths'], \n                           var_name='Ratio', \n                           value_name='Value')\n\nfig = px.line(line_data, \n              x=\"Date\", y=\"Value\", \n              color='Ratio', \n              title='Confirmed Cases, Recovered Cases, and Death Over Time')\nfig.show()","598c2ccf":"# Most 10 Infected Countries\n\nSame for confirmed, active and recovered cases.","21b94e52":"# COVID-19 in the world","18d32b6f":"# Proportion of Recovered Cases by Country\n\nThe tree map is similar to a pie plot, it also helps visualize the proportion of confirmed, active, recovered cases and deaths.","9b24e95b":"# Import libraries","4c484822":"# World Distribution of the Confirmed Cases","10a4b03c":"# Load data\n\nNovel Corona Virus 2019 dataset ([Kaggle](https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset))","e36548eb":"# Global Spread of COVID-19","e5826436":"# Confirmed Cases, Recovered Cases and Death Over Time","24606b24":"<h2 style=\"color: white;\n    font-size: 32px; \n    text-align: center; \n    background: #00cccc; \n    padding: 30px;\n    \">COVID-19 Data Visualization<\/h2>","0873cd63":"# Proportion of Confirmed Cases by Country\n\nThis pie plot is also useful to visualize the proportion of active cases, recovered cases and deaths by country."}}