{"cell_type":{"aa91df56":"code","7a849e7b":"code","e552070a":"code","8d730ea4":"code","3cc1c675":"code","ea8395ff":"code","8d653380":"code","12c933bb":"code","9eb5df48":"code","02a437dc":"code","34482d2f":"code","f280aaf6":"code","23e410d0":"code","d8ab352d":"code","736609a3":"code","9009da6e":"code","fb548ec5":"code","93bb0966":"code","5838962d":"markdown","c82bde0e":"markdown","091f0ba6":"markdown","cd0801e5":"markdown","c1c6402c":"markdown","e5e707ab":"markdown","b9bc8805":"markdown","6c85fffd":"markdown","4e0d2edb":"markdown","51d54680":"markdown","52395e2b":"markdown","bc0ea993":"markdown","24b664a6":"markdown"},"source":{"aa91df56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport math\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom sklearn.preprocessing import StandardScaler\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import f1_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7a849e7b":"data_water = pd.read_csv('..\/input\/water-potability\/water_potability.csv')\ndata_water.head()","e552070a":"data_water.info()","8d730ea4":"data_water.isnull().sum()","3cc1c675":"data_water[data_water.ph.isnull()][data_water.Sulfate.isnull()][data_water.Trihalomethanes.isnull()].head()","ea8395ff":"data_water[data_water['Potability'] == 0][['ph', 'Sulfate', 'Trihalomethanes']].describe()","8d653380":"data_water[data_water['Potability'] == 1][['ph', 'Sulfate', 'Trihalomethanes']].describe()","12c933bb":"data_water['ph'] = data_water['ph'].fillna(data_water['ph'].mean())\ndata_water['Sulfate'] = data_water['Sulfate'].fillna(data_water['Sulfate'].mean())\ndata_water['Trihalomethanes'] = data_water['Trihalomethanes'].fillna(data_water['Trihalomethanes'].mean())\ndata_water.isnull().sum()","9eb5df48":"X_train,X_test=train_test_split(data_water)\nprint(len(X_train))\nlen(X_test)","02a437dc":"X_train_shuffled = shuffle(X_train)\nX_test_shuffled = shuffle(X_test)\ny_train_shuffled = X_train_shuffled['Potability']\ny_test_shuffled = X_test_shuffled['Potability']","34482d2f":"X_train_shuffled = X_train_shuffled.drop(['Potability'], axis = 1)\nX_test_shuffled = X_test_shuffled.drop(['Potability'], axis = 1)\nprint(X_train_shuffled)\nprint(X_test_shuffled)","f280aaf6":"scaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train_shuffled)\nX_test_scaled = scaler.fit_transform(X_test_shuffled)","23e410d0":"modelling_XGB = XGBClassifier(use_label_encoder = False)\nmodelling_XGB.fit(X_train_scaled, y_train_shuffled)","d8ab352d":"predict = modelling_XGB.predict(X_test_scaled)\nresult = f1_score(y_test_shuffled, predict)\nprint(result)","736609a3":"logreg = LogisticRegression()\nlogreg.fit(X_train_scaled, y_train_shuffled)\ny_pred = logreg.predict(X_test_scaled)\nacc = accuracy_score(y_test_shuffled, y_pred)\nprint(acc)","9009da6e":"rfc = RandomForestClassifier()\nrfc.fit(X_train_scaled, y_train_shuffled)\ny_pred = rfc.predict(X_test_scaled)\nacc = accuracy_score(y_test_shuffled, y_pred)\nprint(acc)","fb548ec5":"svc = SVC()\nsvc.fit(X_train_scaled, y_train_shuffled)\ny_pred = svc.predict(X_test_scaled)\nacc = accuracy_score(y_test_shuffled, y_pred)\nprint(acc)","93bb0966":"kneighbors = KNeighborsClassifier()\nkneighbors.fit(X_train_scaled, y_train_shuffled)\ny_pred = kneighbors.predict(X_test_scaled)\nacc = accuracy_score(y_test_shuffled, y_pred)\nprint(acc)","5838962d":"Okay, the missing values are handled and right now I am deciding on what to do with the data.\nThe plans are one of this below :\n* Creating MLP using Neural Network to predict Potability of water\n* Analyzing in-depth of factors in water potability","c82bde0e":"Splitting Train and Test Data","091f0ba6":"By using logistic regression, we can already get even better result with 0.61 accuracy","cd0801e5":"Shuffling X & Creating y train and y test","c1c6402c":"The difference between the value of column (ph, Sufate, Trihalomethaneds) are not too diferent, so I will fill the missing values with the mean value","e5e707ab":"**MLP using Neural Network \/ Regression to Predict Potability of Water**","b9bc8805":"It seems that using XGB is not enough to predict because the result is way below average (<50%)","6c85fffd":"Data Normalization","4e0d2edb":"Regression Model","51d54680":"**Pre-Processing**","52395e2b":"**Water Quality Dataset**\n\nThis dataset contains water quality for 3276 different water bodies.\n\nThe Contents Are : \n\n**1. pH Value**\n**2. Hardness**\n**3. Solids**\n**4. Chloramines**\n**5. Sulfate**\n**6. Conductivity**\n**7. Organic Carbon**\n**8. Thrihalomethanes**\n**9. Turbidity**\n**10. Potability**","bc0ea993":"Let's try another method","24b664a6":"Let's try other type of MLP Train Methods"}}