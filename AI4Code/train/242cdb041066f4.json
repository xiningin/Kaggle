{"cell_type":{"ad11b816":"code","49d00cbc":"code","60e54ee4":"code","48329c06":"code","b52ebfd3":"code","92d5662c":"code","004926fc":"code","0fabcabc":"code","17b699ed":"code","8994182e":"code","eecf475e":"code","fb9b826c":"code","f07eef0c":"markdown","47f93a9d":"markdown","8cc00500":"markdown"},"source":{"ad11b816":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","49d00cbc":"data=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","60e54ee4":"print(data.isna().sum())\nprint('--------------------')\nprint(data.describe())","48329c06":"def age_band(num):\n    for i in range(1, 10):\n        if num < 10*i :  \n            return f'{(i-1)*10}{i*10}'\n\ndata['AgeBand'] = data['Age'].apply(age_band)","b52ebfd3":"color_list=['#F2F2F2', '#252617', '#64732F','#B4BF5E']\nsns.palplot(color_list)\n\nplt.title(\"my palette \",loc='left',fontfamily='serif',fontsize=15,y=1.2)\nplt.show()","92d5662c":"df=pd.DataFrame(data['Gender'].value_counts(normalize=True)).T\n\nfig, ax = plt.subplots(1,1,figsize=(6.5, 2.5),dpi=200)\n\nfig.patch.set_facecolor(color_list[0])\nax.set_facecolor(color_list[0])\nax.barh(df.index, df['Male'], \n        color=color_list[2], alpha=0.9, label='Male')\nax.barh(df.index, df['Female'], left=df['Male'], \n        color=color_list[3], alpha=0.9, label='Female')\n\nfor i in df.index:\n    ax.annotate(f\"{int(df['Male'][i]*100)}%\", \n                   xy=(df['Male'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=40, fontweight='light', fontfamily='serif',\n                   color='white')\n\n    ax.annotate(\"Male\", \n                   xy=(df['Male'][i]\/2, -0.25),\n                   va = 'center', ha='center',fontsize=15, fontweight='light', fontfamily='serif',\n                   color='white')\n    \nfor i in df.index:\n    ax.annotate(f\"{int(df['Female'][i]*100)}%\", \n                   xy=(df['Male'][i]+df['Female'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=40, fontweight='light', fontfamily='serif',\n                   color='white')\n    ax.annotate(\"Female\", \n                   xy=(df['Male'][i]+df['Female'][i]\/2, -0.25),\n                   va = 'center', ha='center',fontsize=15, fontweight='light', fontfamily='serif',\n                   color='white')\n\nfig.text(0.125,1.03,'Male & Female distribution', fontfamily='serif',fontsize=15, fontweight='bold',color=color_list[1])\nfig.text(0.125,0.92,'There are more Female than Male on Mall data.',fontfamily='serif',fontweight='light',fontsize=12,color=color_list[1])  \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n    \nax.legend().set_visible(False)\nax.set_xticks([])\nax.set_yticks([])\nplt.show()","004926fc":"import matplotlib.ticker as mtick\n\nfig = plt.figure(figsize=(10,4),dpi=200)\ngs = fig.add_gridspec(1,2)\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\nfig.patch.set_facecolor(color_list[0]) \nax0.set_facecolor(color_list[0]) \nax1.set_facecolor(color_list[0]) \n\n## Gender & Annual Income (k$) \n\nmale = data[data['Gender'] == 'Male']\nfemale = data[data['Gender'] == 'Female']\n\nax0.grid(color=color_list[1],alpha=0.9,linestyle=':',axis='y',zorder=0)\nsns.kdeplot(female[\"Annual Income (k$)\"], ax=ax0,color=color_list[2],alpha=0.9, shade=True, label=\"Female\",zorder=1)\nsns.kdeplot(male[\"Annual Income (k$)\"], ax=ax0, color=color_list[3],alpha=0.9, shade=True, label=\"Male\",zorder=1)\nax0.set_title('Gender & Annual Income (k$) ',fontsize=8, fontweight='bold', fontfamily='serif', color=color_list[1],loc='left',y=1.02)\nax0.grid(False)\nax0.grid(which='major', axis='x', zorder=0, color=color_list[1], linestyle=':')\nax0.set_yticks([])\nax0.set_ylabel('')\nax0.set_xlabel('')\n\n## Gender & Spending Score (1-100)\n\nax1.grid(color=color_list[1],alpha=0.9,linestyle=':',axis='y',zorder=0, dashes=(1,5))\nsns.kdeplot(female[\"Spending Score (1-100)\"], ax=ax1,color=color_list[2],alpha=0.9, shade=True, label=\"Female\")\nsns.kdeplot(male[\"Spending Score (1-100)\"], ax=ax1, color=color_list[3],alpha=0.9, shade=True, label=\"Male\")\nax1.set_title('Gender & Spending Score (1-100) ',fontsize=8, fontweight='bold', fontfamily='serif', color=color_list[1],loc='left',y=1.02)\nax1.grid(False)\nax1.grid(which='major', axis='x', zorder=0, color=color_list[1], linestyle=':')\nax1.set_yticks([])\nax1.set_ylabel('')\nax1.set_xlabel('')\n\nfig.text(0.125,1.03,'Male & Female distribution \\naccording to Spending Score and Annual Income', fontfamily='serif',fontsize=15, fontweight='bold')\nfig.text(0.125,0.98,'Male tend to make more money and spend less on things.', fontfamily='serif',fontsize=9, fontweight='bold',color='grey')\n\nfig.text(0.785,1.03,\"Male\", fontweight=\"bold\", fontfamily='serif', fontsize=9, color=color_list[3])\nfig.text(0.825,1.03,\"|\", fontweight=\"bold\", fontfamily='serif', fontsize=9, color=color_list[1])\nfig.text(0.835,1.03,\"Female\", fontweight=\"bold\", fontfamily='serif', fontsize=9, color=color_list[2])\n\nfor s in ['top','right','bottom','left']:\n    ax0.spines[s].set_visible(False)\n    ax1.spines[s].set_visible(False)\nplt.show()","0fabcabc":"fig = plt.figure(figsize=(10,4),dpi=200)\ngs = fig.add_gridspec(1,2)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\nfig.patch.set_facecolor(color_list[0]) \nax0.set_facecolor(color_list[0]) \nax1.set_facecolor(color_list[0]) \n\n## AgeBand & Annual Income (k$) (2030,3040)\n\n_2030 = data[data['AgeBand'] == '2030']\n_3040 = data[data['AgeBand'] == '3040']\n\nax0.grid(color=color_list[1],alpha=0.9,linestyle=':',axis='y',zorder=0)\nsns.kdeplot(_2030[\"Annual Income (k$)\"], ax=ax0,color=color_list[2],alpha=0.9, shade=True, label=\"Female\",zorder=1)\nsns.kdeplot(_3040[\"Annual Income (k$)\"], ax=ax0, color=color_list[3],alpha=0.9, shade=True, label=\"Male\",zorder=1)\nax0.set_title('AgeBand & Annual Income (k$) ',fontsize=8, fontweight='bold', fontfamily='serif', color=color_list[1],loc='left',y=1.02)\nax0.grid(False)\nax0.grid(which='major', axis='x', zorder=0, color=color_list[1], linestyle=':')\nax0.set_yticks([])\nax0.set_ylabel('')\nax0.set_xlabel('')\n\n## AgeBand & Spending Score (1-100)\n\nax1.grid(color=color_list[1],alpha=0.9,linestyle=':',axis='y',zorder=0, dashes=(1,5))\nsns.kdeplot(_2030[\"Spending Score (1-100)\"], ax=ax1,color=color_list[2],alpha=0.9, shade=True, label=\"Female\")\nsns.kdeplot(_3040[\"Spending Score (1-100)\"], ax=ax1, color=color_list[3],alpha=0.9, shade=True, label=\"Male\")\nax1.set_title('AgeBand & Spending Score (1-100) ',fontsize=8, fontweight='bold', fontfamily='serif', color=color_list[1],loc='left',y=1.02)\nax1.grid(False)\nax1.grid(which='major', axis='x', zorder=0, color=color_list[1], linestyle=':')\nax1.set_yticks([])\nax1.set_ylabel('')\nax1.set_xlabel('')\n\nfig.text(0.125,1.03,'2030 & 3040 distribution \\naccording to Spending Score and Annual Income', fontfamily='serif',fontsize=15, fontweight='bold')\nfig.text(0.125,0.98,'2030 earns less, but it can be seen that they spend a lot.', fontfamily='serif',fontsize=9, fontweight='bold',color='grey')\n\nfig.text(0.785,1.03,\"3040\", fontweight=\"bold\", fontfamily='serif', fontsize=9, color=color_list[3])\nfig.text(0.825,1.03,\"|\", fontweight=\"bold\", fontfamily='serif', fontsize=9, color=color_list[1])\nfig.text(0.835,1.03,\"2030\", fontweight=\"bold\", fontfamily='serif', fontsize=9, color=color_list[2])\n\n\nfor s in ['top','right','bottom','left']:\n    ax0.spines[s].set_visible(False)\n    ax1.spines[s].set_visible(False)\nplt.show()","17b699ed":"fig, ax = plt.subplots(figsize=(10,4))\n\nfig.text(0.097,1,'Annual income and spending score', fontfamily='serif',fontsize=15, fontweight='bold')\nfig.text(0.097,0.93,'There do seem to be some naturally occuring clusters here.',fontfamily='serif',fontsize=12)\n\nax.scatter(x = data['Annual Income (k$)'] , y = data['Spending Score (1-100)'],color=color_list[1],\n           s=25,alpha=0.9)\n\nfor s in ['top','right','bottom','left']:\n    ax.spines[s].set_visible(False)\n\nax.set_ylabel('Spending Score (1-100)',fontfamily='serif',fontsize=12)\nax.set_xlabel('Annual Income (k$)',fontfamily='serif',fontsize=12)   \nax.grid(which='major',axis='y',color='grey',linestyle=':')\n\nplt.show()","8994182e":"selected_cols = [\"Spending Score (1-100)\", \"Annual Income (k$)\", \"Age\"]\ncluster_data = data.loc[:,selected_cols]\n\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ncluster_scaled = scaler.fit_transform(cluster_data)\n\n## i use n_cluster 6 because of elbow method and sillouette score.\nfrom sklearn.cluster import KMeans\nkm = KMeans(n_clusters=6,random_state=118).fit(cluster_scaled)\nlabels = pd.DataFrame(km.labels_)\nclustered_data = cluster_data.assign(Cluster=labels)","eecf475e":"grouped_km = clustered_data.groupby(['Cluster']).mean().round(1)\ngrouped_km2 = clustered_data.groupby(['Cluster']).mean().round(1).reset_index()\ngrouped_km2['Cluster'] = grouped_km2['Cluster'].map(str)\ngrouped_km2","fb9b826c":"import matplotlib\ncolor_map = matplotlib.colors.LinearSegmentedColormap.from_list(\"Custom\", [color_list[2],color_list[3]], N=grouped_km2.shape[0])\n\nfig = plt.figure(figsize=(10,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(grouped_km2[\"Spending Score (1-100)\"], grouped_km2[\"Annual Income (k$)\"], grouped_km2[\"Age\"],\n           color=[color_map(1),color_map(2),color_map(3),color_map(4),color_map(5),color_map(6)],alpha=0.5,s=500)\n\n# add annotations one by one with a loop\nfor line in range(0,grouped_km.shape[0]):\n     ax.text(grouped_km2['Spending Score (1-100)'][line], grouped_km2['Annual Income (k$)'][line],grouped_km2['Age'][line],\n             s=('Cluster \\n'+grouped_km2['Cluster'][line]),\n             ha='center', fontsize=12, fontweight='light', fontfamily='serif')\n        \nax.set_xlabel(\"Spending Score (1-100)\")\nax.set_ylabel(\"Annual Income (k$)\")\nax.set_zlabel(\"Age\")\n\nfig.text(0.15, .77, '3D Plot: Clusters Visualized', fontsize=15, fontweight='bold', fontfamily='serif')\nfig.text(0.15, .745, 'Here we can observe the general space that each cluster occupies by their means.', fontsize=12, fontweight='light', fontfamily='serif')\n\nfig.text(1.172, 0.77, 'Insight', fontsize=15, fontweight='bold', fontfamily='serif')\n\nfig.text(1.172, 0.347, '''\nWe were able to divide the cluster with certainty.\nName the cluster to make it easier to recognize and identify its characteristics.\n\nLet's change that:\n\nCluster 0 - Low spending score, low income, moderate age - Least Valuable\n\nCluster 1 - Low spending score, high income, moderate age - Targets\n\nCluster 2 - Moderate spending score, moderate income, young age - Valuable\n\nCluster 3 - Moderate spending score, moderate income, high age - Less Valuable\n\nCluster 4 - High spending score, high income, young age - Most Valuable\n\nCluster 5 - High spending score, low income, young age - Very Valuable.\n'''\n         , fontsize=12, fontweight='light', fontfamily='serif')\n\nimport matplotlib.lines as lines\nl1 = lines.Line2D([1, 1], [0.11,0.88], transform=fig.transFigure, figure=fig,color=color_list[1],lw=0.2)\nfig.lines.extend([l1])\n","f07eef0c":"### Cluster 0 has low income and low consumption scores. It would be good to approach Cluster 0 focusing on daily necessities such as discount coupons.\n### Cluster 1 is a high income, but its consumption score is low. It would be nice to meet their needs and fill in the necessary parts of new or existing products.\n### Cluster 4 is a young and capable group. It would be nice to market for them so that they can buy expensive items such as new products.\n\n#### Next ...","47f93a9d":"### Analysis","8cc00500":"### Cluster"}}