{"cell_type":{"b6f39dd1":"code","4b912bb3":"code","caaad346":"code","e36470cf":"code","6027d33e":"code","1c256137":"code","0e97bf60":"code","5e355c3d":"markdown","7be9d5b4":"markdown","8aa1103d":"markdown","d0b262ca":"markdown","976fd43b":"markdown","03cb7ce3":"markdown","bd39c033":"markdown","059fbaa4":"markdown","21c0b1fa":"markdown"},"source":{"b6f39dd1":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex3 import *\nprint(\"Setup Complete\")","4b912bb3":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"comments\" table\ntable_ref = dataset_ref.table(\"comments\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"comments\" table\nclient.list_rows(table, max_results=5).to_dataframe()","caaad346":"# Query to select prolific commenters and post counts\nprolific_commenters_query = query = \"\"\"\n        SELECT author, COUNT(1) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY author\n        HAVING COUNT(1) > 10000\n        \"\"\" # Your code goes here\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nprolific_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(prolific_commenters.head())\n\n# Check your answer\nq_1.check()","e36470cf":"#q_1.solution()","6027d33e":"# Write your query here and figure out the answer\ndeleted_comments= \"\"\" \n                    SELECT deleted,count(1) AS Numposts\n                    From `bigquery-public-data.hacker_news.comments`\n                            GROUP BY deleted\n                            HAVING deleted =True \"\"\"\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(deleted_comments, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\ndeleted_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(deleted_commenters)\n","1c256137":"num_deleted_posts = 227736 # Put your answer here\n\nq_2.check()","0e97bf60":"#q_2.solution()","5e355c3d":"### 2) Deleted comments\n\nHow many comments have been deleted? (If a comment was deleted, the `deleted` column in the comments table will have the value `True`.)","7be9d5b4":"The code cell below fetches the `comments` table from the `hacker_news` dataset.  We also preview the first five rows of the table.","8aa1103d":"# Introduction\n\nQueries with **GROUP BY** can be powerful. There are many small things that can trip you up (like the order of the clauses), but it will start to feel natural once you've done it a few times. Here, you'll write queries using **GROUP BY** to answer questions from the Hacker News dataset.\n\nBefore you get started, run the following cell to set everything up:","d0b262ca":"For the solution, uncomment the line below.","976fd43b":"# Keep Going\n**[Click here](https:\/\/www.kaggle.com\/dansbecker\/order-by)** to move on and learn about the **ORDER BY** clause.","03cb7ce3":"For the solution, uncomment the line below.","bd39c033":"# Exercises\n\n### 1) Prolific commenters\n\nHacker News would like to send awards to everyone who has written more than 10,000 posts. Write a query that returns all authors with more than 10,000 posts as well as their post counts. Call the column with post counts `NumPosts`.\n\nIn case sample query is helpful, here is a query you saw in the tutorial to answer a similar question:\n```\nquery = \"\"\"\n        SELECT parent, COUNT(1) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY parent\n        HAVING COUNT(1) > 10\n        \"\"\"\n```","059fbaa4":"**[SQL Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n---\n","21c0b1fa":"---\n**[SQL Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum) to chat with other Learners.*"}}