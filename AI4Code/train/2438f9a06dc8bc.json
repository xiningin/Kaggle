{"cell_type":{"2d4500be":"code","eb6333bd":"code","e55d1981":"code","c5fa3674":"code","584044b0":"code","c73c7c0d":"code","53b83dd8":"code","4c3a9e31":"code","33cc20f0":"code","f80b7400":"code","bf63d9fe":"code","d32ae596":"code","114a124a":"code","1aa49d09":"code","1c65050b":"code","33ffc3c6":"code","5f641e08":"code","64efef81":"code","75dadcc5":"code","dcec4fa0":"code","7d694c31":"code","87f6c5be":"markdown","fd913215":"markdown","626c487e":"markdown","d34df962":"markdown","49bc8bd3":"markdown","78c244a8":"markdown","9e0d8e34":"markdown","4ab34439":"markdown","6312045d":"markdown","aa3f6276":"markdown","41ba3b90":"markdown","1d086704":"markdown","f9630bc5":"markdown"},"source":{"2d4500be":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport numpy as np \nimport pandas as pd ","eb6333bd":"train = pd.read_csv('..\/input\/dont-overfit-ii\/train.csv')\ntest = pd.read_csv('..\/input\/dont-overfit-ii\/test.csv')","e55d1981":"train.shape","c5fa3674":"test.shape","584044b0":"train.head()","c73c7c0d":"def show_missing(df):\n    #Shows percentage of null values in each column\n    pd.options.display.max_rows = None\n    display(((df.isnull().sum()\/len(df))*100))","53b83dd8":"show_missing(train)","4c3a9e31":"show_missing(test)","33cc20f0":"q1 = train.quantile(0.25)\nq3 = train.quantile(0.75)\niqr = q3 - q1\ncutoff  = 3*iqr\nlower, upper = q1 - cutoff, q3+cutoff\n\ndef TotalOutliers(df, columns, l, u):\n    fin= {}\n    for i in columns:\n        a = df[df[i] > u[i]].shape[0]\n        b = df[df[i] < l[i]].shape[0]\n        fin[i] = a+b\n        a = 0\n        b = 0\n    \n    return fin\n        ","f80b7400":"train_outliers = TotalOutliers(train, train.columns, lower, upper)","bf63d9fe":"train_outliers","d32ae596":"test_outliers = TotalOutliers(test, test.columns, lower, upper)","114a124a":"test_outliers","1aa49d09":"X_train = train.drop(['id', 'target'], axis=1)\ny_train = train['target']\n\nX_test = test.drop(['id'], 1)","1c65050b":"from sklearn.preprocessing import QuantileTransformer\nscaler = QuantileTransformer()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","33ffc3c6":"X_train.shape, y_train.shape, X_test.shape","5f641e08":"from sklearn.svm import SVC\nsvm = SVC(C=100, kernel='linear', max_iter=100, gamma='auto', probability=True, random_state=0)\nsvm.fit(X_train, y_train)","64efef81":"from sklearn.model_selection import cross_val_score\n\nscore = cross_val_score(svm, X_train, y_train, cv=20, scoring='roc_auc')\n\nprint('max svm training score = ',score.max())","75dadcc5":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=30)\nknn.fit(X_train,y_train)\nscore = cross_val_score(knn, X_train, y_train, cv=20, scoring='roc_auc')\nprint('max knn training score = ',score.max())","dcec4fa0":"svm_pred = svm.predict_proba(X_test)[:, 1]\nknn_pred = knn.predict_proba(X_test)[:, 1]\nav_pred = (svm_pred + knn_pred) \/ 2","7d694c31":"df_test = pd.read_csv('..\/input\/dont-overfit-ii\/test.csv')\nsubmission= pd.DataFrame({'id':np.asarray(df_test.id), 'target':svm_pred})\nsubmission.to_csv(\"submission.csv\", index=False)","87f6c5be":"**There is no missing values in test data**","fd913215":"### Make 3 predctions using:\n1. svm only \n2. knn only \n3. their average","626c487e":"**There is no outliers in training data**","d34df962":"### Apply QuantileTransformer on training and test data to ensure that there is no outliers","49bc8bd3":"**There is no missing values in training data**","78c244a8":"# Data Exploration","9e0d8e34":"**After submission:**\n\n* SVM only: Public Score = 0.504, and Private Score = 0.506 (Chosen)\n* KNN only: Public Score = 0.496, and Private Score = 0.507\n* Their avg.: Public Score = 0.499, and Private Score = 0.507\n","4ab34439":"# Modeling","6312045d":"### Try KNN","aa3f6276":"### Show number of outliers in each column","41ba3b90":"### Show missing values","1d086704":"### Try SVM","f9630bc5":"**There are few outliers in test data**"}}