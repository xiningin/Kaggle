{"cell_type":{"3254738d":"code","d9a4e797":"code","914b264a":"code","96ce6539":"code","d29afef8":"code","f86a2448":"code","05f72fa2":"markdown","30d394e4":"markdown"},"source":{"3254738d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom scipy.spatial import distance\nfrom nltk.tokenize import sent_tokenize\nimport scipy.spatial\n\n!pip install -U sentence-transformers\n\n# Library from here: https:\/\/github.com\/UKPLab\/sentence-transformers\nfrom sentence_transformers import SentenceTransformer","d9a4e797":"CLEAN_DATA_PATH = \"..\/input\/cord-19-eda-parse-json-and-generate-clean-csv\/\"\n\nbiorxiv_df = pd.read_csv(CLEAN_DATA_PATH + \"biorxiv_clean.csv\")\nclean_pmc = pd.read_csv(CLEAN_DATA_PATH + \"clean_pmc.csv\")\npapers_df = pd.concat([clean_pmc, biorxiv_df], axis=0).reset_index(drop=True)\n\npapers_df.dropna(inplace=True)\npapers_df.drop_duplicates(subset=['title'], keep=False, inplace=True)\n\n# Load Sentence Embedding Model.\nmodel = SentenceTransformer('distilbert-base-nli-stsb-mean-tokens')\npapers_df","914b264a":"sentences = sent_tokenize(papers_df.iloc[0]['text'])\nsentences_df = pd.DataFrame({'id':np.zeros(len(sentences)).astype(int), 'sentences':sentences},index=None)\n\nfor i in range(1, len(papers_df)):\n    paper_sentences = sent_tokenize(papers_df.iloc[i]['text'])\n    paper_sentences_df = pd.DataFrame({'id':(np.ones(len(paper_sentences))*i).astype(int), 'sentences':paper_sentences},index=None)\n    sentences_df = pd.concat([sentences_df, paper_sentences_df], axis=0).reset_index(drop=True)\n    \nsentences = sentences_df['sentences'].str.lower().tolist()\nsentence_embeddings = model.encode(sentences)","96ce6539":"question_1 = 'medical health care covid-19 coronavirus'\nquestion_1_embedding = model.encode(question_1)\n\nquestion_sentence_similarity_scores = []\nfor i in range(len(sentence_embeddings)):\n    question_sentence_similarity_scores.append(scipy.spatial.distance.cdist([question_1_embedding[0]], [sentence_embeddings[i]], \"cosine\")[0])","d29afef8":"sentences_df['cosine_score'] = question_sentence_similarity_scores\n\nsentences_df.head()","f86a2448":"for index, row in sentences_df[sentences_df['cosine_score'] > 1.25].iterrows():\n    print(f\"ID: {index}\\nSentence: {row['sentences']}\", '\\n')","05f72fa2":"## This is a Developement Notebook for the COVID-19 Dataset. Feel free to post your ideas, text or code here and we can clean and aggregate the work into another Final Notebook in the end. ","30d394e4":"Load DataFrame of Cleaned Documents"}}