{"cell_type":{"37d18f9f":"code","4dd07959":"code","43074b54":"code","310d95b1":"code","cd3f2636":"code","0882ba56":"code","2f2baca1":"code","20ea8e8f":"code","634a7d9e":"code","bf1e0682":"code","9bae94ea":"code","c6644d49":"code","c52463bb":"code","81e7936f":"code","040dbbe6":"code","01788ec8":"code","aca22f08":"code","8a84bc4e":"code","5c77eaae":"code","ccf2c7c2":"code","afe123b0":"code","611c0153":"code","f45ba2c5":"code","f400d155":"code","563d2988":"code","cbb60f5d":"code","d3cb5bc4":"code","d85644a0":"code","7f5bb891":"code","6df44500":"markdown","26f7379c":"markdown","ecc01b53":"markdown","8a538f6f":"markdown","a1799743":"markdown","f6cc6864":"markdown","575e9a7a":"markdown"},"source":{"37d18f9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objs as go\nimport plotly.offline as py\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4dd07959":"df = pd.read_csv(\"\/kaggle\/input\/wordle-tweets\/tweets.csv\", delimiter=',', encoding='utf8')\ndf.head()","43074b54":"df.isnull().sum()","310d95b1":"from sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom lightgbm import LGBMClassifier\n\nimport tensorflow as tf\nimport tensorflow_hub as hub\n\nfrom transformers import BertTokenizer\n\nprint(tf.__version__)","cd3f2636":"#Code by BASSEL KASSEM  https:\/\/www.kaggle.com\/bkassem\/disaster-tweet-bert\/notebook\n\ndef plot_sent_len(dataf, col, title):\n    dataf['len_' + col] = dataf[col].apply(lambda txt: len(txt.split()))\n    plt.hist(dataf['len_' + col], bins = 100)\n    plt.title('Train sentences length')\n    plt.show()\n    return dataf\n\ncol = 'tweet_text'\ndf = plot_sent_len(df, col, 'sentence lengths')","0882ba56":"# VADER Sentiment Analyzer from NLTK\nfrom nltk.sentiment import SentimentAnalyzer\nfrom nltk.sentiment.util import *\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nnltk.download('vader_lexicon')\n\nfrom IPython.display import IFrame\nfrom wordcloud import WordCloud, ImageColorGenerator\n#import matplotlib.pyplot as plt\nfrom nltk.corpus import stopwords","2f2baca1":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\n\n#Exploring more features \ndf[\"tweet_date\"]= pd.to_datetime(df[\"tweet_date\"])\ndf[\"Year\"]= df['tweet_date'].dt.year\ndf[\"Month\"]= df['tweet_date'].dt.month\ndf[\"Date_no\"]= df['tweet_date'].dt.day\ndf[\"Hour\"]= df['tweet_date'].dt.hour\ndf[\"Day\"]= df.tweet_date.dt.strftime(\"%A\")\ndf['date_dmy'] = df['tweet_date'].apply(lambda x: x.strftime(\"%Y-%m-%d\"))\ndf['sentence_length'] = df.tweet_text.apply(len)\ndf.head()","20ea8e8f":"#First row, fifth column  (tweet_text)\n\ndf.iloc[0,4]","634a7d9e":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ntweet1 = pd.DataFrame(df, columns = ['Year','tweet_text'])\ntweet1=tweet1.groupby(['Year']).count()\ntweet1 = tweet1.reset_index(inplace=False)\n#tweet1","bf1e0682":"#tweet2 = pd.DataFrame(df, columns = ['Year','favorites','retweets']) #We don't have Retweets or favorites\n#tweet2=tweet2.groupby(['Year']).sum()\n#tweet2 = tweet2.reset_index(inplace=False)\n#tweet2","9bae94ea":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\ntweet3 = pd.DataFrame(df, columns = ['Hour','tweet_text'])\ntweet3=tweet3.groupby(['Hour']).count()\ntweet3 = tweet3.reset_index(inplace=False)\n#tweet3","c6644d49":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ntweet4 = pd.DataFrame(df, columns = ['Day','tweet_text'])\ntweet4=tweet4.groupby(['Day']).count()\ntweet4 = tweet4.reset_index(inplace=False)\n#tweet4","c52463bb":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nimport plotly.express as px\n\ntweet4 = pd.DataFrame(df, columns = ['date_dmy','tweet_text'])\ntweet4=tweet4.groupby(['date_dmy']).count()\ntweet4 = tweet4.reset_index(inplace=False)\ntweet4\nfig = px.line(tweet4, x='date_dmy', y=\"tweet_text\",\n              labels={\n                     \"date_dmy\": \"Year\",\n                     \"tweet_text\": \"Tweets per day\"\n                 })\n\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x', \n    title=\"Wordle's Tweets per Day\"\n)\nfig.update_xaxes(title_font_family=\"Serif\")\nfig.show()","81e7936f":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nbusiest_day = df.date_dmy.value_counts().index[0]\nmost_tweets_day = df.date_dmy.value_counts().values[0]\nprint(\"Wordle's Busiest Day on Twitter: {} Tweets on {}\".format(most_tweets_day, busiest_day))","040dbbe6":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ndef format_hour(h: int):\n    h = str(h)\n    if len(h) == 1: \n        h = '0'+h\n    h = h+ \":00\"\n    return h\n\n\nhourly = df.groupby('Hour')['tweet_text'].count()\nhourly = pd.DataFrame(hourly).reset_index()\nhourly.columns =['Hour of Day',\"Number of Tweets\"]\nhourly['Hour of Day'] = hourly['Hour of Day'].apply(format_hour)\n\n\n\n\nfig= px.bar_polar(hourly,'Number of Tweets', theta = 'Hour of Day',color = \"Number of Tweets\",\n                 color_discrete_sequence = px.colors.sequential.Plasma_r)\n\n\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#dff0f5',\n    hovermode='x', \n    title=\"Wordle's Tweet by Hour\"\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","01788ec8":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nday_hour = df.tweet_id.groupby([df.Day, df.Hour]).count().reset_index()\nday_hour\n# Create a pivot table to call aggregate sum function\nday_hour = pd.pivot_table(day_hour, values = 'tweet_id', index = 'Day', columns = 'Hour', aggfunc='sum')\nday_hour = day_hour.reindex((['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']))\n\n\nfont_color=\"#05214f\"\nfig, ax = plt.subplots(figsize = (10,7), dpi = 80)\n#fig.patch.set_facecolor('#05214f')\nax.set_facecolor('#edf9fc')\nax = sns.heatmap(data = day_hour, cbar_kws={'label': 'Tweets per Hour'}, cmap='flare',color=font_color)\nax.set_title(\"When Does people Like to Tweet?\",fontsize=12, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_xlabel('Hour of Day (U.S. Eastern Time)',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_ylabel('Day of Week',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nplt.show()","aca22f08":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ndef clean_text(text):\n    '''Make text lowercase, remove text in square brackets,remove links,remove punctuation\n    and remove words containing numbers.'''\n    text = str(text).lower()\n    text = re.sub('&amp', '', text)\n    text = re.sub('rt @\\D\\w*:', '', text)\n    text = re.sub('\\[.*?\\]', '', text)\n    text = re.sub('https?:\/\/\\S+|www\\.\\S+', '', text)\n    text = re.sub('<.*?>+', '', text)\n    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)\n    text = re.sub('\\n', '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    return text","8a84bc4e":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nimport string\n\ndf['message_clean'] = df['tweet_text'].apply(clean_text)\n#df.head(15)","5c77eaae":"# Initialize the VADER sentiment analyzer object\nvader_analyzer = SentimentIntensityAnalyzer()","ccf2c7c2":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ndef sentiment_scores(message_clean):\n  score = vader_analyzer.polarity_scores(message_clean)\n  return score","afe123b0":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ndf['polarity_scores'] = df.tweet_text.apply(sentiment_scores)\ndf['vader_compound'] = df.polarity_scores.apply(lambda x: x['compound'])\ndf['vader_neg'] = df.polarity_scores.apply(lambda x: x['neg'])\ndf['vader_neu'] = df.polarity_scores.apply(lambda x: x['neu'])\ndf['vader_pos'] = df.polarity_scores.apply(lambda x: x['pos'])\n#print(df.head())","611c0153":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nconditions = [\n    (df['vader_compound'] == 0),\n    (df['vader_compound'] > 0),\n    (df['vader_compound'] < 0)\n]\nchoices = ['neutral','positive','negative']\n\ndf['vader_compound1'] = np.select(conditions, choices)\n#print(df)","f45ba2c5":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\n# Grouping sentiment scores by day to get average daily sentiment scores\ndt_sentiment_dmy = df.vader_compound.groupby(df.date_dmy).mean().reset_index()\nconditions = [\n    (dt_sentiment_dmy['vader_compound'] == 0),\n    (dt_sentiment_dmy['vader_compound'] > 0),\n    (dt_sentiment_dmy['vader_compound'] < 0)\n]\nchoices = ['neutral','positive','negative']\n\ndt_sentiment_dmy['vader_compound1'] = np.select(conditions, choices)\n\ndt_sentiment_dmy[\"date_dmy\"]= pd.to_datetime(dt_sentiment_dmy[\"date_dmy\"])\ndt_sentiment_dmy[\"year\"]= dt_sentiment_dmy['date_dmy'].dt.year\n\n#print(dt_sentiment_dmy)","f400d155":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nfig = px.line(dt_sentiment_dmy, x='date_dmy', y=\"vader_compound\")\n\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x', \n    xaxis_title=\"Year\",\n    yaxis_title=\"Average Daily Sentiment \",\n    title=\"Wordle Tweet Sentiments(VADER Compound Score)\"\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","563d2988":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nfont_color=\"#05214f\"\nfig, ax = plt.subplots(figsize = (10,7), dpi = 80)\nfig.patch.set_facecolor('#05214f')\nax.set_facecolor('#edf9fc')\nfont_color=\"white\"\nsns.histplot(dt_sentiment_dmy['vader_compound'], ax=ax, color='b', binwidth=0.10, stat='density')\nplt.legend(['Compound VADER Score'])\nax.set_xlim(-1,1)\n\nax.set_title('Distribution of Compound Vader Scores for Wordle Tweets',fontsize=12, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_xlabel('VADER Score',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_ylabel('Density',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nplt.show()","cbb60f5d":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ntweet7 = pd.DataFrame(df, columns = ['tweet_text','vader_compound1'])\ntweet7=tweet7.groupby(['vader_compound1']).count()\ntweet7 = tweet7.reset_index(inplace=False)\n#tweet7","d3cb5bc4":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nfig = px.pie(tweet7, values='tweet_text', names='vader_compound1', title='Sentiment Distribution')\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x'\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","d85644a0":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\ndef flatten_list(l):\n    return [x for y in l for x in y]\n\n# color coding our wordclouds \ndef red_color_func(word, font_size, position, orientation, random_state=None,**kwargs):\n    return f\"hsl(0, 100%, {random.randint(25, 75)}%)\" \n\ndef green_color_func(word, font_size, position, orientation, random_state=None,**kwargs):\n    return f\"hsl({random.randint(90, 150)}, 100%, 30%)\" \n\ndef yellow_color_func(word, font_size, position, orientation, random_state=None,**kwargs):\n    return f\"hsl(42, 100%, {random.randint(25, 50)}%)\" \n\ndef generate_word_clouds(neg_doc, neu_doc, pos_doc):\n # Display the generated image:\n\n  fig, axes = plt.subplots(1,3, figsize=(20,10))    \n  wordcloud_neg = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(neg_doc))\n  axes[0].imshow(wordcloud_neg.recolor(color_func=red_color_func, random_state=3), interpolation='bilinear')\n  axes[0].set_title(\"Negative Tweets\")\n  axes[0].axis(\"off\")\n\n  wordcloud_neu = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(neu_doc))\n  axes[1].imshow(wordcloud_neu.recolor(color_func=yellow_color_func, random_state=3), interpolation='bilinear')\n  axes[1].set_title(\"Neutral Words\")\n  axes[1].axis(\"off\")\n\n  wordcloud_pos = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(pos_doc))\n  axes[2].imshow(wordcloud_pos.recolor(color_func=green_color_func, random_state=3), interpolation='bilinear')\n  axes[2].set_title(\"Positive Words\")\n  axes[2].axis(\"off\")\n\n  plt.tight_layout()\n  plt.show();\n\nsentiment_sorted= df.sort_values('tweet_username', ascending=False)\npositive_top_100 = df[df['vader_compound1'] == \"positive\"].iloc[:100]\nnegative_top_100 = df[df['vader_compound1'] == \"negative\"].iloc[:100]\nneutral_top_100 = df[df['vader_compound1'] == \"neutral\"].iloc[:100]\n\ncleanup = lambda x: [y for y in x.split() if y not in stopwords.words('english')]\nneg_doc = flatten_list(negative_top_100['message_clean'].apply(cleanup))\npos_doc = flatten_list(positive_top_100['message_clean'].apply(cleanup))\nneu_doc = flatten_list(neutral_top_100['message_clean'].apply(cleanup))\n\ngenerate_word_clouds(neg_doc, neu_doc, pos_doc)","7f5bb891":"#Code by Nadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nco=df[df['message_clean'].str.contains(\"Wordle 200 6\/6\\n\\n\u2b1b\\U0001f7e8\u2b1b\u2b1b\u2b1b\\n\u2b1b\\U0001f7e8\u2b1b\u2b1b\\U0001f7e8\\n\u2b1b\\U0001f7e9\u2b1b\\U0001f7e9\\U0001f7e9\\n\u2b1b\\U0001f7e9\\U0001f7e8\\U0001f7e9\\U0001f7e9\\n\\U0001f7e9\\U0001f7e9\u2b1b\\U0001f7e9\\U0001f7e9\\n\\U0001f7e9\\U0001f7e9\\U0001f7e9\\U0001f7e9\\U0001f7e9\")]\nindex=co.index\nnumber_of_rows = len(index)\n#print(\"corona:\",number_of_rows)\nco1=df[df['message_clean'].str.contains(\"Wordle 200 6\/6\\n\\n\u2b1b\\U0001f7e8\u2b1b\u2b1b\u2b1b\\n\u2b1b\\U0001f7e8\u2b1b\u2b1b\\U0001f7e8\\n\u2b1b\\U0001f7e9\u2b1b\\U0001f7e9\\U0001f7e9\\n\u2b1b\\U0001f7e9\\U0001f7e8\\U0001f7e9\\U0001f7e9\\n\\U0001f7e9\\U0001f7e9\u2b1b\\U0001f7e9\\U0001f7e9\\n\\U0001f7e9\\U0001f7e9\\U0001f7e9\\U0001f7e9\\U0001f7e9\")]\nindex1=co1.index\nnumber_of_rows1 = len(index1)\n#print(\"covid:\",number_of_rows1)\nco2=df[df['message_clean'].str.contains(\"Wordle 200 6\/6\\n\\n\u2b1b\\U0001f7e8\u2b1b\u2b1b\u2b1b\\n\u2b1b\\U0001f7e8\u2b1b\u2b1b\\U0001f7e8\\n\u2b1b\\U0001f7e9\u2b1b\\U0001f7e9\\U0001f7e9\\n\u2b1b\\U0001f7e9\\U0001f7e8\\U0001f7e9\\U0001f7e9\\n\\U0001f7e9\\U0001f7e9\u2b1b\\U0001f7e9\\U0001f7e9\\n\\U0001f7e9\\U0001f7e9\\U0001f7e9\\U0001f7e9\\U0001f7e9\")]\nindex2=co2.index\nnumber_of_rows2 = len(index2)\n#print(\"virus:\",number_of_rows2)\n#print(\"Total:\",number_of_rows+number_of_rows1+number_of_rows2)","6df44500":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #001f3f;\"><b style=\"color:#DC143C;\">World Wide Wordle<\/b><\/h1><\/center>\n\nWorld Wide Wordle: What it takes to bring the viral game into other languages\n\nBy By ANDREW DECK - 21 JANUARY 2022\n\nAs Wordle takes off globally, players are making their own versions in Portuguese, Turkish and even Tamil.\n\n\"In late December 2021, Fernando Serboncini came across a cascade of posts on his Twitter feed featuring lines of gray, yellow, and green box emojis. The Brazilian-born Google engineering manager had spotted the calling card for Wordle, a now-viral web browser game that gives players six attempts to guess a different five-letter word each day.\"\n\n\"English is his second language. So it\u2019s fun. He does well, but he is not amazing at it.\u201d He decided to adapt the game to his mother tongue Portuguese.\"\n\n\"As the game has gone viral around the world, over a dozen Wordle-inspired games have launched in languages other than English, including Spanish, German, Urdu, Hungarian, and Japanese.\" \n\nhttps:\/\/restofworld.org\/2022\/wordle-viral-turkish-japanese-tamil-portuguese\/","26f7379c":"#I think,we don't have polarity on Wordle. Not as it's shown on this dataset. Though let's save the next snippets for another time","ecc01b53":"![](https:\/\/image.slidesharecdn.com\/worldwidewomenwordle-121023073652-phpapp02\/95\/worldwide-women-wordle-1-638.jpg?cb=1350977853)slideshare.net","8a538f6f":"#PEPINNO DI CAPRI - ROBERTA 1963\n\nRoberta-Peppino Di Capri-Lyrics with English and Bangla Subtitle\n\nRoberta\n\nYou know, it's not true\n\nThat I no longer want you.\n\nI know it, you don't believe me,\n\nYou don't have faith in me.\n\nRoberta, forgive me,\n\nBut I didn't understand,\n\nI didn't know how to code with you.\n\nhttps:\/\/lyricstranslate.com\/en\/roberta-roberta.html-0","a1799743":"#A lot of Sentiment in Roberta Song.","f6cc6864":"#Acknowledgements:\n\nNadia Nizam https:\/\/www.kaggle.com\/nadianizam\/trump-s-tweet-legacy\n\nBASSEL KASSEM  https:\/\/www.kaggle.com\/bkassem\/disaster-tweet-bert\/notebook","575e9a7a":"<iframe width=\"942\" height=\"530\" src=\"https:\/\/www.youtube.com\/embed\/Qf_Sf420z3Q\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>"}}