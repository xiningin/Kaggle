{"cell_type":{"7ba3fbf3":"code","97dd851b":"code","41c2446f":"code","26f618c4":"code","72539e7a":"code","ef7574b3":"code","6b593a41":"code","af682b5f":"code","4391fc66":"code","77869fdf":"code","589f02b9":"code","6e5a92e9":"code","0cbfbb2a":"code","bb8d073f":"code","14d1ccba":"code","7c970eb7":"code","789dc60c":"code","20564d35":"code","4839d306":"code","370fcaeb":"code","fe611e26":"code","5d23c75a":"code","7b1b12d9":"code","c58c336d":"code","062df4c5":"code","9506e8ef":"code","510c678d":"code","d0bef75e":"code","4116e5bb":"code","44ba6040":"code","8c935f73":"code","980e9d88":"code","7cc50b2b":"code","daeeafd5":"code","0fd69ee8":"code","0c9b3dd3":"code","74322aa0":"markdown","ad867e14":"markdown","9b9a43ff":"markdown","5e563974":"markdown","a88117b2":"markdown","952ac20c":"markdown","c1dbb451":"markdown","503862af":"markdown","d82f727c":"markdown","d41927b7":"markdown","8c44755b":"markdown","b5608264":"markdown","39271e04":"markdown","c46f2ac3":"markdown","5a661401":"markdown","3bed1907":"markdown","70d41563":"markdown","cf7e1630":"markdown","9ac22f5e":"markdown"},"source":{"7ba3fbf3":"#\u00d6ncelikle gerekli k\u00fct\u00fcphanelerimizi dahil edelim\n\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns \nimport tensorflow as tf\nfrom sklearn.model_selection import train_test_split, GridSearchCV,cross_val_score, cross_val_predict\nfrom sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import scale \nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom argparse import Namespace\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import recall_score, f1_score, precision_score\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier\nimport missingno as msno \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom keras import callbacks\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn import ensemble\nfrom sklearn.metrics import confusion_matrix, accuracy_score, roc_auc_score, auc, roc_curve, classification_report\nfrom sklearn.metrics import roc_auc_score,roc_curve\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report \nfrom sklearn.model_selection import cross_val_score\nfrom matplotlib.legend_handler import HandlerLine2D\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","97dd851b":"data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndf = data.copy()\ndf","41c2446f":"df.head() #ilk 5 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","26f618c4":"df.tail() #Veri \u00e7er\u00e7evemizin son 5 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","72539e7a":"df.info() #Her bir de\u011fi\u015fkenimizin ka\u00e7ar adet oldu\u011funu,de\u011fi\u015fkenlerin tipini ve bellek kullan\u0131m\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyelim.","ef7574b3":"df.describe().T #Veri \u00e7er\u00e7evemizdeki sadece say\u0131sal de\u011fi\u015fkenlerini ve temel istatistik de\u011ferlerini g\u00f6zlemleyelim.","6b593a41":"counts=df['DEATH_EVENT'].value_counts()\ncounts","af682b5f":"counts[1] \/ counts[0] ","4391fc66":"heart_died = df[df['DEATH_EVENT'] == 1]\nheart_lived = df[df['DEATH_EVENT'] == 0]","77869fdf":"heart_died","589f02b9":"heart_died.describe()","6e5a92e9":"sns.distplot(heart_died['age'],rug=True)\nsns.distplot(heart_lived['age'].sample(96))\n\nplt.legend(['died', 'lived'])\n\n#Ya\u015f\u0131n \u00f6l\u00fcmlere g\u00f6re da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6zlemledik.","0cbfbb2a":"# \"DEATH_EVENT\" de\u011fi\u015fkeninin veriseti \u00fczerindeki genel da\u011f\u0131l\u0131m\u0131n\u0131 inceleyelim.\nplt.figure(figsize=(10,6))\nsns.countplot(df.DEATH_EVENT,palette=['#D7263D','#27FB6B'])\nplt.show()","bb8d073f":"print((df.DEATH_EVENT==1).sum())","14d1ccba":"print((df.DEATH_EVENT==0).sum())","7c970eb7":"fig,ax=plt.subplots(2,3,figsize=(15,10),)\nsns.countplot(x=df.anaemia,ax=ax[0,0])\nsns.countplot(x=df.diabetes,ax=ax[0,1])\nsns.countplot(x=df.high_blood_pressure,ax=ax[0,2])\nsns.countplot(x=df.sex,ax=ax[1,0])\nsns.countplot(x=df.smoking,ax=ax[1,1])\nsns.countplot(x=df.DEATH_EVENT,ax=ax[1,2])\nplt.suptitle(\"Kategorik De\u011fi\u015fkenlerin Da\u011f\u0131l\u0131m\u0131\")","789dc60c":"female_survive=df.age[(df.sex==0) & (df.DEATH_EVENT==0)].count()\nmale_survive=df.age[(df.sex==1) & (df.DEATH_EVENT==0)].count()\nfemale_dead=df.age[(df.sex==0) & (df.DEATH_EVENT==1)].count()\nmale_dead=df.age[(df.sex==1) & (df.DEATH_EVENT==1)].count()\n\n\ndata=[female_survive,female_dead,male_survive,male_dead]\nlabel=[\"Female survive\",\"Female dead\",\"Male survive\",\"Male dead\"]\nexplde=[0.1,0.1,0.1,0.1]\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\nplt.figure(figsize=(8,8))\nplt.pie(x=data,labels=label,autopct=\"%1.2f%%\",shadow=True,explode=explde,colors=colors)\nplt.suptitle(\"'DEATH_EVENT' de\u011fi\u015fkeninin ya\u015f ve cinsiyet de\u011fi\u015fkenlerine g\u00f6re da\u011fl\u0131m\u0131\")","20564d35":"cols= [\"#6daa9f\",\"#774571\"]\nsns.kdeplot(x=df[\"time\"], y=df[\"age\"], hue =df[\"DEATH_EVENT\"], palette=cols)","4839d306":"corr = df.corr() #Say\u0131sal de\u011ferlerin aralar\u0131ndaki ili\u015fkiyi incelemek i\u00e7in korelasyon matrisi \u00e7izdirelim.\ncorr  ","370fcaeb":"ax , fig  = plt.subplots(figsize =(10 , 8 ))\nsns.heatmap(corr ,vmin = -1 , cmap='coolwarm', annot = True,xticklabels=corr.columns.values,yticklabels=corr.columns.values)\nplt.show()","fe611e26":"pip install missingno","5d23c75a":"msno.matrix(df,figsize=(20, 10))","7b1b12d9":"df.isnull().any()","c58c336d":"# X ve y de\u011ferlerini atama i\u015flemi yapal\u0131m.\nX=df.drop([\"DEATH_EVENT\"],axis=1)\ny=df[\"DEATH_EVENT\"]","062df4c5":"X","9506e8ef":"y","510c678d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\nfrom sklearn.preprocessing import StandardScaler","d0bef75e":"#Standartla\u015ft\u0131rma i\u015flemini hem test veriseti i\u00e7in hem de train veriseti i\u00e7in uygulad\u0131k.\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","4116e5bb":"X_test[0:5]","44ba6040":"ann = tf.keras.models.Sequential()\n\n# Giri\u015f katman\u0131n\u0131 ve ilk gizli katman\u0131 ekleyelim.\nann.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train[0].shape))\n\n# \u0130kinci gizli katman\u0131 ekleyelim.\nann.add(tf.keras.layers.Dense(units=8, activation='relu'))\n\n# \u00c7\u0131k\u0131\u015f katman\u0131n\u0131 ekleyelim.\nann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","8c935f73":"ann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","980e9d88":"ann.summary() # Modelimizin \u00f6zetini g\u00f6sterir.\n# Total params k\u0131sm\u0131na bakt\u0131\u011f\u0131m\u0131zda 269 de\u011ferini g\u00f6rmekteyiz. Buradan; yukar\u0131da hesaplad\u0131\u011f\u0131m\u0131z parametre say\u0131s\u0131n\u0131n do\u011fru oldu\u011fu sonucuna ula\u015f\u0131r\u0131z.","7cc50b2b":"ann.fit(X_train, y_train, batch_size = 32, epochs = 150)","daeeafd5":"# Modelimizin e\u011fitim s\u00fcreci tamamland\u0131. \u015eimdi modeli de\u011ferlendirelim.\nprint(ann.predict(scaler.transform([[75,0, 580, 0, 20, 1, 265000, 1.9, 130, 1,0,4]])))","0fd69ee8":"# Test veriseti \u00fczerinde test i\u015flemi yapal\u0131m.\ny_pred = ann.predict(X_test)\ny_pred = (y_pred > 0.2)\npd.DataFrame(list(zip(y_test, y_pred)), columns=['Actual', 'Predicted'])","0c9b3dd3":"from sklearn.metrics import confusion_matrix, accuracy_score\nprint(confusion_matrix(y_test, y_pred))\nprint(accuracy_score(y_test, y_pred))\n#Do\u011fruluk, modelinizin genel olarak ne kadar iyi performans g\u00f6sterdi\u011fini g\u00f6sterir. Bu skor modelimizin iyi oldu\u011funu i\u015faret eder.","74322aa0":"* **Normalizasyon**\n  * Ba\u015far\u0131 oran\u0131n\u0131 artt\u0131rmak i\u00e7in verilerin normalize edilmi\u015f hallerini kullanmam\u0131z gerekiyor. Bu i\u015fleme \"**Feature Scaling**\" yani \u00d6zellik \u00d6l\u00e7eklendirme denir.","ad867e14":"### De\u011fi\u015fkenleri G\u00f6rselle\u015ftirme","9b9a43ff":"### \u00d6\u011frenilmesi gereken parametre say\u0131s\u0131n\u0131n hesaplanmas\u0131:\n\n  * Toplam \u00f6\u011frenilmesi gereken parametre say\u0131s\u0131=[Giri\u015f katman\u0131 x Gizli Katman]+ [GizliKatman x \u00c7\u0131k\u0131\u015fKatman\u0131] + N\u00f6ron Say\u0131s\u0131 (Giri\u015f Katman\u0131 Hari\u00e7)\n  * Buradan;\n  \n    Toplam \u00f6\u011frenilmesi gereken parametre say\u0131s\u0131= [12 x 12] + [12 x 8] + [8 x 1] + 12 + 8 + 1 = 269 ","5e563974":"### Veri \u00d6n \u0130\u015fleme","a88117b2":"# **\ud83d\ude80 Getting Started**\n\n#### Heart Failure Prediction \n\n<img src= \"https:\/\/getmegiddy.com\/sites\/default\/files\/2021-02\/Giddy_3d_P_Hero.gif\" alt =\"Titanic\" style='width: 800px;'>\n\n### **\u2714 De\u011fi\u015fken Bilgileri**\n\n1. Age: hastan\u0131n ya\u015f\u0131 [y\u0131l]\n\n2. Sex: hastan\u0131n cinsiyeti [E: Erkek, K: Kad\u0131n]\n\n3. ChestPainType: g\u00f6\u011f\u00fcs a\u011fr\u0131s\u0131 tipi [TA: Tipik Angina, ATA: Atipik Angina, NAP: Anjinal Olmayan A\u011fr\u0131, ASY: Asemptomatik]\n\n4. RestingBP: dinlenme kan bas\u0131nc\u0131 [mm Hg]\n\n5. Cholesterol: serum kolesterol\u00fc [mm\/dl]\n\n6. FastingBS: a\u00e7l\u0131k kan \u015fekeri [1: Oru\u00e7 BS > 120 mg\/dl ise, 0: aksi halde]\n\n7. RestingECG: Dinlenme elektrokardiyogram sonu\u00e7lar\u0131 [Normal: Normal, ST: ST-T dalga anormalli\u011fi var (T\ndalga inversiyonlar\u0131 ve\/veya ST y\u00fckselmesi veya > 0.05 mV depresyonu), LVH: Estes kriterlerine g\u00f6re olas\u0131 veya kesin sol ventrik\u00fcl hipertrofisini g\u00f6steriyor]\n\n8. MaxHR: ula\u015f\u0131lan maksimum kalp at\u0131\u015f h\u0131z\u0131 [60 ile 202 aras\u0131ndaki say\u0131sal de\u011fer]\n\n9. ExerciseAngina: egzersize ba\u011fl\u0131 angina [Y: Evet, N: Hay\u0131r]\n\n10. Oldpeak: oldpeak = ST [Depresyonda \u00f6l\u00e7\u00fclen say\u0131sal de\u011fer]\n\n11. ST_Slope: zirve egzersiz ST segmentinin e\u011fimi [Yukar\u0131: e\u011fimli, D\u00fcz: d\u00fcz, A\u015fa\u011f\u0131: a\u015fa\u011f\u0131 e\u011fimli]\n\n12. HeartDisease: \u00e7\u0131kt\u0131 s\u0131n\u0131f\u0131 [1: kalp hastal\u0131\u011f\u0131, 0: Normal]","952ac20c":"### Eksik De\u011ferlerin Kontrol Edilmesi","c1dbb451":"* Ortalama ve medyan de\u011ferleri birbirlerine yak\u0131n, bu sebeple verisetinde yer alan ki\u015filerin ya\u015f ortalamas\u0131n\u0131n 60 oldu\u011funu s\u00f6yleyebiliriz.","503862af":"* Parametre say\u0131s\u0131n\u0131n hesaplanmas\u0131:\n  * **Epoch**: E\u011fitim s\u0131ras\u0131nda t\u00fcm e\u011fitim verilerinin ka\u00e7 tur g\u00f6sterilece\u011finin say\u0131s\u0131d\u0131r.\n  * **Batch_size**: Modelin ayn\u0131 anda e\u011fitece\u011fi veri say\u0131s\u0131d\u0131r.","d82f727c":"### ANN ","d41927b7":"* Verisetini ve g\u00f6rseli inceledi\u011fimizde hi\u00e7bir Nan ve eksik de\u011ferin olmad\u0131\u011f\u0131n\u0131 g\u00f6zlemleriz.","8c44755b":"### Korelasyon Matrisi ","b5608264":"* \u0130lk tan\u0131 ve tedavi herhangi bir \u00f6l\u00fcm olas\u0131l\u0131\u011f\u0131n\u0131 azaltt\u0131\u011f\u0131 i\u00e7in hastan\u0131n hastal\u0131k i\u00e7in zaman\u0131 \u00e7ok \u00f6nemlidir. Ters ili\u015fkilidir ve aralar\u0131nda g\u00fc\u00e7l\u00fc bir ili\u015fki vard\u0131r.\n* Ejeksiyon fraksiyonu ikinci en \u00f6nemli \u00f6zelliktir. Kalbin temel etkinli\u011fi oldu\u011fu i\u00e7in y\u00fcksek bir ili\u015fkiye sahip olmas\u0131 beklenir.\n* Hastan\u0131n ya\u015f\u0131, ya\u015flanmayla birlikte kalbin i\u015fleyinde yava\u015flama oldu\u011fu i\u00e7in en g\u00fc\u00e7l\u00fc ili\u015fkiye sahip \u00fc\u00e7\u00fcnc\u00fc \u00f6zelliktir.","39271e04":"* Test \u00d6rne\u011fi\n   * age --> 75\n   * anaemia --> 0\n   * creatinine_phosphokinase --> 580\n   * diabetes --> 0\n   * ejection_fraction --> 20\n   * high_blood_pressure --> 1\n   * platelets --> 26500\n   * serum_creatinine --> 1.9\n   * serum_sodium --> 130\n   * sex --> 1\n   * smoking --> 0\n   * time --> 4","c46f2ac3":"* Bu verisetinin a\u015f\u0131r\u0131 dengesiz(heavily imbalanced) oldu\u011funu g\u00f6zlemleriz.","5a661401":"**Verisetini Tan\u0131ma**\n* Boolean de\u011fi\u015fkenler\n   * Sex - Erkek=1, Kad\u0131n=0\n   * Diabetes - No=0, Yes=1\n   * Anaemia - No=0, Yes=1\n   * High_blood_pressure\n   * Smoking\n   * DEATH_EVENT ","3bed1907":"* Yukar\u0131daki grafi\u011fi bakt\u0131\u011f\u0131m\u0131zda da\u011f\u0131l\u0131m\u0131n normal ancak biraz sa\u011fa \u00e7arp\u0131k oldu\u011funu g\u00f6rmekteyiz. Standartla\u015ft\u0131rma ve \u00f6l\u00e7ekleme i\u015flemi yapmal\u0131y\u0131z.","70d41563":"* Verilerin %20 sini test i\u00e7in ay\u0131rd\u0131k. Geriye kalan %80'lik k\u0131s\u0131mda e\u011fitim verimiz olacak. \n* *Random state* ile verileri hangi indisten ba\u015flayarak ay\u0131rma i\u015flemini yapaca\u011f\u0131m\u0131z\u0131 belirleriz.","cf7e1630":"* ANN 'in E\u011fitilmesi\n   * **optimizer**: Stochastic Gradient Descenti g\u00f6steren \"adam\".\n   * **loss**: SGD\u2019nin optimizasyonu i\u00e7in kullan\u0131lacak loss fonk. Tahmin y ile ger\u00e7ek ye de\u011feri aras\u0131n\u0131 hesaplay\u0131p en optimal de\u011feri SGD\u2019ye buldurur.\n   * Hedef de\u011fi\u015fken say\u0131m\u0131z 2 oldu\u011fundan **binary_crossentropy** kulland\u0131k. E\u011fer hedef de\u011fi\u015fken say\u0131s\u0131 2'den fazla olsayd\u0131 categorical_crossentropy kullanacakt\u0131k.","9ac22f5e":"* Sonu\u00e7 olarak;\n Do\u011fruluk puan\u0131 yukar\u0131daki gibidir."}}