{"cell_type":{"8920bf9d":"code","b66ebe7b":"code","2c2a7846":"code","2a95432a":"code","524b5114":"code","b8eb1470":"code","ee2c984b":"code","a947462e":"code","4587faf1":"code","2354871c":"code","0772f3e4":"code","9f3ee3b7":"code","81c8de51":"code","2ca33c74":"code","b8a49f49":"markdown","7003bf2e":"markdown","7e6af814":"markdown","717896f0":"markdown","e64f8278":"markdown","3c2b9feb":"markdown"},"source":{"8920bf9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b66ebe7b":"test = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\ntrain = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')","2c2a7846":"print(train.head())","2a95432a":"print(test.head())","524b5114":"print(train.info())","b8eb1470":"train = train.drop(['id'], axis = 1)","ee2c984b":"train.isna().sum().sum()","a947462e":"plt.figure(figsize=(10,10))\nsns.countplot(x='target', data=train)\nplt.show()","4587faf1":"fig = plt.figure(figsize = (20,20))\nsns.heatmap(train.corr(), cmap='coolwarm')","2354871c":"from sklearn.model_selection import train_test_split\nfrom sklearn import linear_model\nX = train.drop(['target'], axis = 'columns', inplace = False).values\ny = train['target'].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state = 10)\ntest_submit = test.drop(['id'], axis =1).values","0772f3e4":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nclf = RandomForestClassifier(n_estimators = 100)\nclf.fit(X, y)\n#Now, finding the accuracy score\ny_pred = clf.predict(X_test)\nprint(accuracy_score(y_test,y_pred)*100)","9f3ee3b7":"sample = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/sample_submission.csv')\nprint(sample.head(2))","81c8de51":"y_result= clf.predict_proba(test_submit)\nsubmission = pd.DataFrame(y_result,columns=['Class_1','Class_2','Class_3','Class_4', 'Class_5', 'Class_6', 'Class_7', 'Class_8', 'Class_9'])\nsubmission['id'] = sample['id']\nprint(submission.head())","2ca33c74":"submission.to_csv('submission.csv',index=False)\nsubmission","b8a49f49":"# creating the model","7003bf2e":"# Creating the submission file","7e6af814":"# Reading the test and train file","717896f0":"## Visualising the data","e64f8278":"Finding the total null values in train data","3c2b9feb":"Dropping the unnecessary columns,"}}