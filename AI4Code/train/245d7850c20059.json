{"cell_type":{"5a9a183a":"code","e2669464":"code","c15baec2":"code","ea901f32":"code","84d1a07e":"code","ab1cd1ac":"code","3fe7cc7c":"code","1e81f03b":"markdown","8542ef06":"markdown","1823d1c9":"markdown","5380c3cc":"markdown","bf238c72":"markdown"},"source":{"5a9a183a":"import numpy as np\nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor\n\nimport lightgbm as lgbm","e2669464":"SEED = 42\nEARLY_STOP_NUM = 5 \nDATA_NUM = 1000 # row number \nCOL_NUM = 5 #column number ","c15baec2":"np.random.seed(SEED)\nX = np.random.rand(DATA_NUM, COL_NUM) - 0.5\ny = 3*X[:, 0]**2 + 0.05 * np.random.randn(DATA_NUM)","ea901f32":"X[:5]","84d1a07e":"y[:5]","ab1cd1ac":"X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=SEED)","3fe7cc7c":"lgb_reg = lgbm.LGBMRegressor(random_state=SEED)\nlgb_reg.fit(X_train, y_train,eval_set=[(X_val, y_val)], early_stopping_rounds=EARLY_STOP_NUM)\ny_pred = lgb_reg.predict(X_val)\nval_error = mean_squared_error(y_val, y_pred)  \nprint(\"Validation MSE:\", val_error)    ","1e81f03b":"# make data","8542ef06":"# split train set and validation set ","1823d1c9":"# get best LGBMRegressor model using early_stopping_rounds","5380c3cc":"# global variables","bf238c72":"# import libraries"}}