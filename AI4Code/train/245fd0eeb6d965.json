{"cell_type":{"47cdad65":"code","782ed418":"code","cf56f333":"code","bb6ca268":"code","cc96f9bd":"code","97620df5":"code","20127689":"code","d928de1e":"code","ad5bd5fc":"code","02721cfb":"code","17db15c2":"code","5991188d":"code","137dab53":"code","8da6db0e":"code","c7fa673d":"code","2221c420":"code","3f561d36":"code","12a8afcc":"markdown"},"source":{"47cdad65":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","782ed418":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndefault_path = '..\/input\/'","cf56f333":"#checking files on input folder \n!ls ..\/input","bb6ca268":"train_df = pd.read_csv(default_path+'sales_train.csv')\nitems_df = pd.read_csv(default_path+'items.csv')\ntest_df = pd.read_csv(default_path+'test.csv')\n#We dont need other files, you can use them in order to do more EDA\n# id seems to be usless\nitem_categories_df = pd.read_csv(default_path+'item_categories.csv')\nshops_df = pd.read_csv(default_path+'shops.csv')","cc96f9bd":"print(train_df.shape, test_df.shape)","97620df5":"train_df.head()","20127689":"#Adding date to the training set\ntrain_df['date'] = pd.to_datetime(train_df['date'], format='%d.%m.%Y')","d928de1e":"#data in test is not in training set , the missing data will be filled with zeros\ndataset = train_df.pivot_table(index=['item_id', 'shop_id'],values=['item_cnt_day'], columns='date_block_num', fill_value=0)\ndataset.shape","ad5bd5fc":"dataset = dataset.reset_index()\ndataset.head()","02721cfb":"#Lets add items id and shop id to the test dataset\ndataset = pd.merge(test_df, dataset, on=['item_id', 'shop_id'], how='left')\ndataset = dataset.fillna(0)\ndataset.head()","17db15c2":"X_train = np.expand_dims(dataset.values[:, :-1], axis=2)\ny_train = dataset.values[:, -1:]\n\nX_test = np.expand_dims(dataset.values[:, 1:], axis=2)\nprint(X_train.shape, y_train.shape, X_test.shape)","5991188d":"from keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout","137dab53":"model = Sequential()\nmodel.add(LSTM(units=64, input_shape=(36, 1)))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1))\n\nmodel.compile(loss='mse',\n              optimizer='Adagrad',\n              metrics=['mean_squared_error'])\nmodel.summary() ","8da6db0e":"history = model.fit(X_train, y_train, batch_size=4096, epochs=10)","c7fa673d":"plt.plot(history.history['loss'], label= 'loss(mse)')\nplt.plot(np.sqrt(history.history['mean_squared_error']), label= 'rmse')\nplt.legend(loc=1)","2221c420":"LSTM_prediction = model.predict(X_test)","3f561d36":"submission = pd.DataFrame({'ID': test_df['ID'], 'item_cnt_month': LSTM_prediction.ravel()})\nsubmission.to_csv('submission.csv',index=False)","12a8afcc":"**LSTM (RNN) - Model Building **"}}