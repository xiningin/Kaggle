{"cell_type":{"18d3222c":"code","2fc16c6c":"code","84867a10":"code","430cd4c2":"code","565f69c6":"code","1b473a8d":"code","36dd864d":"code","aa690a23":"code","5234405b":"code","2c73ef6e":"code","73b0ea31":"code","98934cbd":"markdown","bae3fa23":"markdown","4787ffd8":"markdown","022fc4a3":"markdown","eb8c4728":"markdown","99d1937f":"markdown","eba4e327":"markdown","54db17a3":"markdown","aace497a":"markdown","750fa282":"markdown","c94b1aed":"markdown","15863502":"markdown","9bc79542":"markdown"},"source":{"18d3222c":"import re\nimport gc\nimport numpy  as np\nimport pandas as pd\n\nimport wordcloud as wc\nimport plotly.express as px\nimport matplotlib.pyplot as plt","2fc16c6c":"# Read and preview data\ncyberbullying_df = pd.read_csv('\/kaggle\/input\/cyberbullying-classification\/cyberbullying_tweets.csv')\nprint('There are {} rows and {} columns'.format(cyberbullying_df.shape[0],cyberbullying_df.shape[1]))\ncyberbullying_df.sample(5)","84867a10":"# Viz: label distribution\nfig = px.bar(cyberbullying_df.groupby('cyberbullying_type').agg('count').reset_index().rename({'tweet_text':'count'},axis=1).sort_values('count', ascending = False),\n             x = 'cyberbullying_type',\n             y = 'count',\n             color = 'cyberbullying_type',\n             opacity = 0.7,\n             color_discrete_sequence = px.colors.diverging.curl,\n             template = 'plotly_dark',\n             title = 'Label Distribution',\n            )\n\nfig.show()","430cd4c2":"def average_word_length(text):\n    words = text.split()\n    word_count = len(words)\n    word_length = 0\n    for word in words:\n        word_length += len(word)\n    avg_word_length = round(word_length \/ word_count,2)\n    return avg_word_length\n\n\ncyberbullying_df['tweet_length'] = cyberbullying_df['tweet_text'].apply(lambda x: len(x.split()))\ncyberbullying_df['average_word_length'] = cyberbullying_df['tweet_text'].apply(average_word_length)","565f69c6":"fig = px.box(cyberbullying_df,\n             x = 'cyberbullying_type',\n             y = 'tweet_length',\n             color = 'cyberbullying_type',\n             color_discrete_sequence = px.colors.diverging.curl,\n             template = 'plotly_dark',\n             title = 'Boxplot of Tweet Lengths per class'\n)\n\n\nfig.update_yaxes(range = [0,80])\nfig.show()","1b473a8d":"# Viz: Word lengths per class\nfig = px.box(cyberbullying_df,\n             x = 'cyberbullying_type',\n             y = 'average_word_length',\n             color = 'cyberbullying_type',\n             color_discrete_sequence = px.colors.diverging.curl,\n             template = 'plotly_dark',\n             title = 'Boxplot of Words Lengths per class'\n)\n\n\nfig.update_yaxes(range=[0,20])\nfig.show()","36dd864d":"# Viz: Lexical Uniqueness\ndef unique_word_share(text):\n    words = text.split()\n    word_count = len(words)\n    unique_word_count = len(set([w.lower() for w in words]))\n    word_uniqueness = round(unique_word_count * 100\/word_count,2)\n    return word_uniqueness\n\ncyberbullying_df['lexical_uniqueness'] = cyberbullying_df['tweet_text'].apply(unique_word_share)","aa690a23":"fig = px.box(cyberbullying_df,\n             y = 'cyberbullying_type',\n             x = 'lexical_uniqueness',\n             color = 'cyberbullying_type',\n             color_discrete_sequence = px.colors.diverging.curl,\n             template = 'plotly_dark',\n             title = 'Boxplot of Lexical Uniqueness per class'\n)\n\n\nfig.show()","5234405b":"# Wordcloud of all Tweets\nwordcloud = wc.WordCloud(stopwords = wc.STOPWORDS,\n                         max_font_size = 80,\n                         max_words = 5000,\n                         width = 600,\n                         height = 400,\n                         background_color = 'black').generate(' '.join(txt for txt in cyberbullying_df[\"tweet_text\"]))\n\n\nfig, ax = plt.subplots(figsize=(14,10))\nax.imshow(wordcloud, interpolation='bilinear')\nax.set_axis_off()\nplt.title('Wordcloud of All Tweets', size = 20)\nplt.imshow(wordcloud);","2c73ef6e":"fig = px.histogram(cyberbullying_df,\n                   x = 'tweet_length',\n                   template = 'plotly_dark',\n                   title = 'Distribution of Tweet Length',\n                   color_discrete_sequence = ['#3ac2f9'],\n                   opacity = 0.7,\n                  )\n\nfig.show()","73b0ea31":"import numpy as np\nimport pandas as pd\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n        \ndef read_and_process_data(filepath, label, ignore_broken = False):\n    '''\n    Read txt file and preprocess it to same format\n    '''\n    if ignore_broken:\n        df = pd.read_table(filepath, header = None, error_bad_lines = False)\n    else:\n        df = pd.read_table(filepath, header = None)\n    df.columns = ['tweet_text']\n    df['cyberbullying_type'] = label\n    return(df)\n\n\nnormal_df = read_and_process_data('\/kaggle\/input\/cyberbulling-classification-draft\/8000notcb.txt',\n                                  'not_cyberbullying',\n                                  ignore_broken = True,\n                                  )\n\n\n# Read and preprocess remaining files\nage_df = read_and_process_data('\/kaggle\/input\/cyberbulling-classification-draft\/8000age.txt','age')\nother_df = read_and_process_data('\/kaggle\/input\/cyberbulling-classification-draft\/8000other.txt','other_cyberbullying')\ngender_df = read_and_process_data('\/kaggle\/input\/cyberbulling-classification-draft\/8000gender.txt','gender')\nreligion_df = read_and_process_data('\/kaggle\/input\/cyberbulling-classification-draft\/8000religion.txt','religion')\nethnicity_df = read_and_process_data('\/kaggle\/input\/cyberbulling-classification-draft\/8000ethnicity.txt','ethnicity')\n\n\n# Concatenate and preview\ncyberbullying_tweets = pd.concat([normal_df, gender_df, religion_df, other_df, age_df, ethnicity_df], axis = 0)\ncyberbullying_tweets","98934cbd":"# How are the labels distributed?","bae3fa23":"# How this Dataset was Preprocessed\nFor the sake of documentation, this is the code that I used in order to preprocess and compose this dataset.\nA few rows were broken due to strange characters, but other than that the data is pretty much kept intact to the source material.","4787ffd8":"# What is the average length of a tweet for every class?","022fc4a3":"As we can see from the plot above, the data is <mark>pretty well balanced<\/mark>.","eb8c4728":"# Imports and Data Input","99d1937f":"# What are the most common words?","eba4e327":"Surprisingly the median average word length is about the same regardless of the label. Other than that, `other_cyberbullying` has more outliers than any other class, which to be fair is expected from a more varied class.","54db17a3":"The overwhelming majority of tweets end at <mark>62 tokens<\/mark>.","aace497a":"# How is general token length distributed?","750fa282":"# How unique is the composition of each tweet?","c94b1aed":"![](https:\/\/github.com\/Larxel\/Assets\/blob\/main\/cyberbullying_notebook_splash.png?raw=true)","15863502":"# What is the average word length per class?","9bc79542":"# A Quick Look at Cyberbullying Tweets\n\n\n\n\nA lot of the work here is inspired by [Tiamin's notebook](https:\/\/www.kaggle.com\/tianmin\/visualization-of-essay-dataset) and borrows many of his functions, if you enjoy this content, please do check out his work as well."}}