{"cell_type":{"75f091ee":"code","5c08a72a":"code","937492d1":"code","267e0ce9":"code","b7a9b495":"code","a6eddf75":"code","1f66325c":"code","26bb0b7e":"code","a6288efd":"code","30cdde03":"code","5c749a55":"markdown","95d52c78":"markdown","f53dd847":"markdown","572add67":"markdown","ad8296ca":"markdown","0943ea02":"markdown","081009d0":"markdown","771a603d":"markdown","c4fdc935":"markdown","741ef251":"markdown"},"source":{"75f091ee":"import seaborn as sns\nimport pandas as pd\nimport numpy as np\n\ntips = sns.load_dataset(\"tips\")\ndf = pd.DataFrame(dict(time=np.arange(500),value=np.random.randn(500).cumsum()))\nfmri = sns.load_dataset(\"fmri\")\ndots = sns.load_dataset(\"dots\").query(\"align == 'dots'\")","5c08a72a":"sns.relplot(x=\"total_bill\",\n            y=\"tip\",\n            hue=\"smoker\",\n            style=\"smoker\",\n            data=tips\n            );","937492d1":"sns.relplot(x=\"total_bill\",\n            y=\"tip\",\n            hue=\"smoker\",\n            style=\"time\",\n            data=tips\n            );","267e0ce9":"sns.relplot(x=\"total_bill\",\n            y=\"tip\",\n            size=\"size\", # 1~6 class size of size variable\n            sizes=(15, 200), # set size range (minimum, maximum). \n            # sizes can be mapped by inputting them in list or dict format (ex: sizes='time',sizes={\"Lunch\":10,\"Dinner\":100})\n            data=tips\n            );","b7a9b495":"sns.relplot(x=\"time\",\n            y=\"value\",\n            kind=\"line\",\n            data=df\n            );","a6eddf75":"sns.relplot(x=\"timepoint\",\n            y=\"signal\",\n            hue=\"event\",\n            kind=\"line\",\n            data=fmri\n            #, ci=None\n            );","1f66325c":"sns.relplot(x=\"timepoint\",\n            y=\"signal\",\n            hue=\"region\",\n            style=\"event\",\n            dashes=True,\n            markers=True,\n            kind=\"line\",\n            data=fmri\n            );","26bb0b7e":"palette = sns.cubehelix_palette(light=.8, n_colors=6)\n\nsns.relplot(x=\"time\",\n            y=\"firing_rate\",\n            hue=\"coherence\",\n            size=\"choice\", # Set the line thickness for each T1 and T2 class included in the choice variable\n            palette=palette,\n            kind=\"line\",\n            data=dots\n            );","a6288efd":"sns.relplot(x=\"total_bill\",\n            y=\"tip\",\n            hue=\"smoker\",\n            col=\"time\", # create a chart for each Lunch\/Dinner class included in the time variable.\n            data=tips\n            );","30cdde03":"sns.relplot(x=\"timepoint\", y=\"signal\", hue=\"event\", style=\"event\",\n            col=\"subject\", \n            col_wrap=5, # specify how many charts to put in one row\n            height=3, # height value of each chart\n            aspect=.75, # The aspect ratio of each chart. Since the width of each chart is set through aspect * height, it is better to set it in conjunction with the height.\n            linewidth=2.5, # width of each line\n            kind = \"line\",\n            data=fmri.query(\"region == 'frontal'\"));","5c749a55":"So far, we have looked at how to melt the characteristics of multiple variables into one chart, but we cannot guarantee that this method is unconditionally effective. At this point, it is good to think of how to add a chart. Since relplot is based on **Facetgrid**, it is easy to add charts. All numeric categorical variables are available for **col** parameter, but an infinite loop may be experienced when a continuous variable is inserted. (ex: col=\"tip\")","95d52c78":"While the scatter plot is used to check the relationship between two or more variables, the line plot is used to check the distribution and change of one continuous variable.","f53dd847":"### **Visualization**\n\nA scatter plot is usually used to understand the relationship between two numerical variables. Since the defalut value of the **kind** parameter included in the **relplot** is scatter, a scatter plot can be drawn directly. In addition, relplot can visualize three or more variables by using parameters of **hue**, **size**, and **style**. Both numeric and categorical variables are available for the hue parameter, and when a numeric variable is added, the color is set in a specific range. A style parameter is also available for both numeric and categorical variables, but problems arise when adding numeric variables. (ex: style=\"tip\") Therefore, it is better to consider using a discrete numeric variable rather than a continuous numeric variable. (ex: style=\"size\")","572add67":"Also, through the **size** parameter, the characteristics of a variable can be expressed as a size.","ad8296ca":"This notebook is a summary of the tutorial provided by seaborn. So it's pretty much the same as the tutorial. However, the reason I made these notebooks separately is to quickly check and apply the codes I need when actually doing data visualization. And I think the more parameters you know, the more different visualizations you can do. Therefore, various parameters were intentionally added to each visualization process or a brief explanation was attached.\n\n- Reference:\n1. https:\/\/seaborn.pydata.org\/tutorial\/relational.html\n2. https:\/\/seaborn.pydata.org\/generated\/seaborn.relplot.html#seaborn.relplot\n\n- Series:\n1. Distributions of data: https:\/\/www.kaggle.com\/euitaekim\/seaborn-visualization-distributions-of-data\n2. Categorical data: https:\/\/www.kaggle.com\/euitaekim\/seaborn-visualization-categorical-data\n\n### **Import package & data**","0943ea02":"If there are several y values for each x-axis variable value, various descriptive statistics can be expressed in the chart together. The defalut is set to the average value, which means the range of the average value at the 95% confidence level. If you want to reflect the standard deviation rather than the mean, you can set **ci='sd'**. If you don't want to display descriptive statistics on the chart, you can set ci=None.","081009d0":"You can set the line size based on the class of a specific variable.","771a603d":"If the above method is facet processing for columns, various charts can be added by adding facet processing for rows. It is better to use it in various ways depending on the situation, because it is possible to understand the form of data more effectively than to put it all in one graph in a complicated way.","c4fdc935":"For reference, if too many variables and functions are used for visualization, it is rather difficult to grasp the characteristics of the data, so be careful.","741ef251":"By applying **dashes** and **markers** to the line plot, the shape and pattern of the line can be changed, and detailed settings can be made. For reference, the default is **dashes=True**, **markers=False**. Similarly for line plots, if too many variables and functions are used for visualization, it is rather difficult to grasp the characteristics of the data, so be careful."}}