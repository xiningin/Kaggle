{"cell_type":{"e07588ef":"code","2eeff7d1":"code","c9db1c82":"code","36e5e3b0":"code","95f6654b":"code","74768982":"code","b00efe5f":"code","890830e9":"code","06768168":"code","8f216dff":"code","7f11f9d3":"code","8d2df631":"code","220ee238":"code","5a837c10":"code","a45d2776":"code","ea680d3f":"code","73e5b3d7":"code","768d8bc1":"code","36088986":"code","7d66f730":"code","7cd30dc4":"code","1754d78f":"code","0bd0460b":"code","8b724872":"code","fb4e408b":"code","311aa1ed":"code","3a48bb61":"code","7c982cc8":"code","7d655cbb":"code","eea5f4e1":"code","bdcff881":"code","7e1ad653":"code","a252a657":"code","6243c5d6":"code","ba26f613":"code","64d2a02f":"code","70f10920":"code","ad8a20a2":"code","1189dc8f":"code","f22f1eac":"code","05f86698":"code","1900f42a":"code","31c2764d":"code","1490c2d8":"code","84a9ec1e":"code","60f3835a":"code","560bef74":"code","9d801846":"code","9ff0e060":"code","3384a5cb":"markdown","5917be29":"markdown","f76a98dc":"markdown","fed69b9a":"markdown","1304506b":"markdown","5c9fb482":"markdown","ce3ed338":"markdown","05c69767":"markdown","9f1869b9":"markdown","1c228e70":"markdown","a0ae67d8":"markdown","a2f9e6a8":"markdown","e750f2c7":"markdown","513e6d00":"markdown","15ee1b3c":"markdown","4cc64ef5":"markdown","7fab9eec":"markdown","091c2d0d":"markdown","41d9b8a3":"markdown","e5a83780":"markdown","2eae8c4d":"markdown","54928ef7":"markdown","767c68c9":"markdown","920cf3cb":"markdown","21443367":"markdown","786c1996":"markdown","1d6d8312":"markdown","53166adb":"markdown"},"source":{"e07588ef":"import numpy as np \nimport pandas as pd\n\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n# Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom plotly.subplots import make_subplots\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","2eeff7d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c9db1c82":"#Users\nu_cols = ['user_id', 'location', 'age']\nusers = pd.read_csv('\/kaggle\/input\/bookcrossing-dataset\/Book reviews\/BX-Users.csv', sep=';', names=u_cols, encoding='latin-1',low_memory=False)\n\n#Books\ni_cols = ['isbn', 'book_title' ,'book_author','year_of_publication', 'publisher', 'img_s', 'img_m', 'img_l']\nitems = pd.read_csv('\/kaggle\/input\/bookcrossing-dataset\/Book reviews\/BX-Books.csv', sep=';', names=i_cols, encoding='latin-1',)\n\n#Ratings\nr_cols = ['user_id', 'isbn', 'rating']\nratings = pd.read_csv('\/kaggle\/input\/bookcrossing-dataset\/Book reviews\/BX-Book-Ratings.csv', sep=';', names=r_cols, encoding='latin-1',low_memory=False)","36e5e3b0":"users.head(2)","95f6654b":"items.head(2)","74768982":"ratings.head(2)","b00efe5f":"users = users.drop(users.index[0])\nitems = items.drop(items.index[0])\nratings = ratings.drop(ratings.index[0])\n\ndf = pd.merge(users, ratings, on='user_id')\ndf = pd.merge(df, items, on='isbn')\n\ndf.head(2)","890830e9":"df.info()","06768168":"df.columns","8f216dff":"df.shape","7f11f9d3":"df.describe().T","8d2df631":"df.isnull().values.any()","220ee238":"df.isnull().sum()","5a837c10":"df[df.duplicated() == True]","a45d2776":"location = df.location.str.split(', ', n=2, expand=True)\nlocation.columns=['city', 'state', 'country']\n\ndf['city'] = location['city']\ndf['state'] = location['state']\ndf['country'] = location['country']\ndf['rating'] = df['rating'].astype('int32')\ndf['user_id'] = df['user_id'].astype('int32')\n\nlocation = users.location.str.split(', ', n=2, expand=True)\nlocation.columns=['city', 'state', 'country']\n\nusers['city'] = location['city']\nusers['state'] = location['state']\nusers['country'] = location['country']\n\ndf = df.drop(['img_s', 'img_m', 'img_l'], axis=1)\n","ea680d3f":"df.head(2)","73e5b3d7":"df.describe().T","768d8bc1":"users.head(2)","36088986":"ax = sns.countplot(x=\"rating\", data=df)","7d66f730":"fig = go.Figure(data=[go.Histogram(x=df['rating'],  # To get Horizontal plot ,change axis - \n                                  marker_color=\"Crimson\",\n                       xbins=dict(\n                      start=0, #start range of bin\n                      end=10,  #end range of bin\n                      size=1   #size of bin\n                      ))])\nfig.update_layout(title=\"Distribution Of Rating\",xaxis_title=\"Rating\",yaxis_title=\"Counts\",title_x=0.5)\nfig.show()","7cd30dc4":"indexs=df[(df['rating']==0)]['user_id'].index\ndf_no_0=df.drop(indexs)\ndf_no_0.head(2)","1754d78f":"ds = df['rating'].value_counts().to_frame().reset_index()\nds.columns = ['value', 'count']\nds=ds.drop([0])\n\nfig = go.Figure(go.Bar(\n    y=ds['value'],x=ds['count'],orientation=\"h\",\n    marker={'color': ds['count'], \n    'colorscale': 'sunsetdark'},  \n    text=ds['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Rating Count',xaxis_title=\"Value\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","0bd0460b":"ds = df['rating'].value_counts().to_frame().reset_index()\nds.columns = ['value', 'count']\nds=ds.drop([0])\n\nfig = go.Figure(go.Bar(\n    x=ds['value'],y=ds['count'],\n    marker={'color': ds['count'], \n    'colorscale': 'sunsetdark'},  \n    text=ds['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Rating Distribution',xaxis_title=\"Value\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","8b724872":"ds = df['rating'].value_counts().to_frame().reset_index()\nds.columns = ['value', 'count']\nds=ds.drop([0])\n\nds['value'] = ds['value'].astype('int32')\nds['multiplication']= ds['value']* ds['count']\nx=ds.apply(np.sum, axis=0).reset_index() \nx=x.drop(['index'],axis=1)\ny = x[1:3].values\nrate=y[1]\/y[0]\ndf_rate = pd.DataFrame(columns=['Count', 'Total Rating', 'AVG Rate'])\ndf_rate = df_rate.append({'Total Count': 383842, 'Total Rating': 2927454, 'AVG Rate': 7.62}, ignore_index=True)\n\ncolors=['DarkKhaki','Coral','LightSalmon']\n    \nfig = go.Figure(data=[go.Table(header=dict(values=['Total Rating Count', 'Total Rating Sum ','Average Rating Of Books '],\n                                          line_color='white', fill_color='gray',\n                                  align='center',font=dict(color='white', size=12)\n                                          ),\n                               \n                 cells=dict( values=[df_rate['Total Count'], df_rate['Total Rating'],df_rate['AVG Rate']],\n                           line_color=colors, fill_color=colors,\n                           align='center', font=dict(color='black', size=13))\n                              )])\n                      \n\nfig.update_layout(\n    autosize=False,\n    width=500,\n    height=300,\n   )    \n\nfig.show()\n","fb4e408b":"Count_Rating=383842\nTotal_Rating=2927454\navg_rate_rating=7.62\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  Count_Rating,\n    domain = {'x': [0.25, 1], 'y': [0.4, 0.6]},\n    title = {'text': \"Count Ratings\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 400000]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = Total_Rating,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.9]},\n    title = {'text': \"Sum Of Ratings\",'font':{'color': 'black','size':15}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,3000000]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_rate_rating,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.3]},\n    title = {'text' :\"Average Rating Of Books\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,10]},\n        'bar': {'color': \"Gold\"}}\n))\nfig.update_layout(title=\" Ratings Of Books \",title_x=0.5)\nfig.show()","311aa1ed":"users_city=users.city.value_counts()[0:20].reset_index().rename(columns={'index':'city','city':'count'})\n\nfig = go.Figure(go.Bar(\n    x=users_city['city'],y=users_city['count'],\n    marker={'color': users_city['count'], \n    'colorscale': 'Viridis'},  \n    text=users_city['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 20 Users City',xaxis_title=\"City\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","3a48bb61":"users_country=users.country.value_counts()[0:10].reset_index().rename(columns={'index':'country','country':'count'})\n\nfig = go.Figure(go.Bar(\n    x=users_country['country'],y=users_country['count'],\n    marker={'color': users_country['count'], \n    'colorscale': 'inferno'},  \n    text=users_country['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 10 Country',xaxis_title=\"Country\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","7c982cc8":"fig = go.Figure(go.Box(y=users['age'],name=\"Age\")) # to get Horizonal plot change axis \nfig.update_layout(title=\"Distribution Of Age \",title_x=0.5)\nfig.show()","7d655cbb":"fig = px.histogram(\n    df, \n    \"age\", \n    nbins=100, \n    title='Age distribution', \n    width=700,\n    height=600\n)\nfig.show()","eea5f4e1":"users2=users.copy()\nusers2=users2.dropna()\nusers2['age'] = users2['age'].astype('int32')\nusers2.isnull().sum()\n\n\nusers2['age_category']=np.where((users2['age']<19),\"below 19\",\n                                 np.where((users2['age']>18)&(users2['age']<=30),\"19-30\",\n                                    np.where((users2['age']>30)&(users2['age']<=50),\"31-50\",\n                                                np.where(users2['age']>50,\"Above 50\",\"NULL\"))))\n\nage=users2['age_category'].value_counts().to_frame().reset_index().rename(columns={'index':'age_category','age_category':'Count'})\n\n\nfig = go.Figure(data=[go.Scatter(\n    x=age['age_category'], y=age['Count'],\n    mode='markers',\n    marker=dict(\n        color=age['Count'],\n        size=age['Count']*0.002,\n        showscale=True\n    ))])\n\nfig.update_layout(title='Age Distribution',xaxis_title=\"Age Category\",yaxis_title=\"Number Of People\",title_x=0.5)\nfig.show()","bdcff881":"df_book_name=df_no_0.book_title.value_counts()[0:10].reset_index().rename(columns={'index':'book_title','book_title':'count'})\n\n\ncolors=['cyan','royalblue','blue','darkblue',\"darkcyan\",'Brown','Coral','OrangeRed','SaddleBrown','Tomato']\nfig = go.Figure([go.Pie(labels=df_book_name['book_title'], values=df_book_name['count'])])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent+value', textfont_size=15,\n                 marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title=\"Most Reviewed Books \",title_x=0.3)\nfig.show()","7e1ad653":"df_book_name=df_no_0.book_title.value_counts()[0:10].reset_index().rename(columns={'index':'book_title','book_title':'count'})\ndf_book_name\n\nfig = go.Figure(go.Bar(\n    y=df_book_name['book_title'],x=df_book_name['count'],orientation=\"h\",\n    marker={'color': df_book_name['count'], \n    'colorscale': 'darkmint'},  \n    text=df_book_name['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 10  Reviewed Books',xaxis_title=\" Rating Count\",yaxis_title=\"Books Name\",title_x=0.6)\n\nfig.update_layout(\n    autosize=False,\n    width=920,\n    height=700,\n   )\nfig.show()","a252a657":"df_book_name_2=df_no_0.book_title.value_counts()[0:5].reset_index().rename(columns={'index':'book_title','book_title':'count'})\n\nbook_rate1 = df_no_0[df_no_0['book_title']=='The Lovely Bones: A Novel']['rating'].sum()\nbook_rate1=book_rate1\/707\n\nbook_rate2 = df_no_0[df_no_0['book_title']=='Wild Animus']['rating'].sum()\nbook_rate2=book_rate2\/581\n\nbook_rate3 = df_no_0[df_no_0['book_title']=='The Da Vinci Code']['rating'].sum()\nbook_rate3=book_rate3\/494\n\nbook_rate4 = df_no_0[df_no_0['book_title']=='The Secret Life of Bees']['rating'].sum()\nbook_rate4=book_rate4\/406\n\n\nbook_rate5 = df_no_0[df_no_0['book_title']=='The Nanny Diaries: A Novel']['rating'].sum()\nbook_rate5=book_rate5\/393\n\ndf_rate = pd.DataFrame(columns=['book_title', 'Rating', ])\ndf_rate = df_rate.append({'book_title':'The Lovely Bones: A Novel' , 'Rating': book_rate1}, ignore_index=True)\ndf_rate = df_rate.append({'book_title':'Wild Animus' , 'Rating': book_rate2}, ignore_index=True)\ndf_rate = df_rate.append({'book_title':'The Da Vinci Code' , 'Rating': book_rate3}, ignore_index=True)\ndf_rate = df_rate.append({'book_title':'The Secret Life of Bees' , 'Rating': book_rate4}, ignore_index=True)\ndf_rate = df_rate.append({'book_title':'The Nanny Diaries: A Novel' , 'Rating': book_rate5}, ignore_index=True)\n\n\nfig = make_subplots(rows=2, cols=1,\n                   subplot_titles=(\"Top 5 Reviewed Books\",\n                                   \"Average Rate Of Top 5 Reviewed Books \",))  # Subplot titles\n\nfig.add_trace(go.Bar(\n    y=df_book_name_2['book_title'],x=df_book_name_2['count'],orientation=\"h\",\n    marker={'color': df_book_name_2['count'], \n    'colorscale': 'darkmint'},  \n    text=df_book_name_2['count'],\n    textposition = \"outside\"),\n    row=1, col=1           \n)\nfig.add_trace(go.Bar(\n    y=df_rate['book_title'],x=df_rate['Rating'],orientation=\"h\",\n    marker={'color': df_rate['Rating'], \n    'colorscale': 'solar'},  \n    text=df_rate['Rating'],\n    textposition = \"outside\"),\n    row=2, col=1           \n)\n\n\nfig.update_layout(height=900, width=900,title =\"Books Ratings\",title_x=0.5)\nfig.show()","6243c5d6":"\ndf_books_sum=df_no_0.groupby(by =['book_title'])['rating'].sum().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'total_rating'})\ndf_books_sum=df_books_sum.sort_values(by='total_rating', ascending=False)\n#df_books_sum\ndf_books_count=df_no_0.groupby(by =['book_title'])['rating'].count().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'count_rating'})\ndf_books_count=df_books_count.sort_values(by='count_rating', ascending=False)\n#df_books_count\n\n\ndf_books_merge = pd.merge(df_books_sum, df_books_count, on='book_title')[0:50]\ndf_books_merge['rate']=df_books_merge['total_rating']\/df_books_merge['count_rating']\ndf_books_merge=df_books_merge.sort_values(by='rate', ascending=False)\n#df_books_merge\ndf_books_merge1=df_books_merge[df_books_merge['count_rating']>75]\ndf_books_merge1=df_books_merge1.sort_values(by='rate', ascending=False)[0:10]\ndf_books_merge1\n\n\nfig = make_subplots(rows=2, cols=1,\n                   subplot_titles=(\" Best Rated Books\",\n                                   \" Best Rated Books Count Rating \",))  # Subplot titles\n\nfig.add_trace(go.Bar(\n    y=df_books_merge1['book_title'],x=df_books_merge1['count_rating'],orientation=\"h\",\n    marker={'color': df_books_merge1['count_rating'], \n    'colorscale': 'thermal'},  \n    text=df_books_merge1['count_rating'],\n    textposition = \"outside\"),\n    row=2, col=1           \n)\nfig.add_trace(go.Bar(\n    y=df_books_merge1['book_title'],x=df_books_merge1['rate'],orientation=\"h\",\n    marker={'color': df_books_merge1['rate'], \n    'colorscale': 'jet'},  \n    text=df_books_merge1['rate'],\n    textposition = \"outside\"),\n    row=1, col=1           \n)\n\n\nfig.update_layout(height=1100, width=1100,title =\"Best Books Ratings\",title_x=0.5)\nfig.show()","ba26f613":"df_books_year=items.year_of_publication.value_counts()[0:10].reset_index().rename(columns={'index':'year_of_publication','year_of_publication':'count'})\n\nfig = go.Figure(go.Bar(\n    x=df_books_year['year_of_publication'],y=df_books_year['count'],\n    marker={'color': df_books_year['count'], \n    'colorscale': 'inferno'},  \n    text=df_books_year['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 10 Number Of Book Works Published By Years ',xaxis_title=\"Years\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","64d2a02f":"df_books_publisher=items.publisher.value_counts()[0:10].reset_index().rename(columns={'index':'publisher','publisher':'count'})\n\nfig = go.Figure(go.Bar(\n    x=df_books_publisher['publisher'],y=df_books_publisher['count'],\n    marker={'color': df_books_publisher['count'], \n    'colorscale': 'inferno'},  \n    text=df_books_publisher['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 10 Publisher',xaxis_title=\"Publisher\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","70f10920":"df_sk=df_no_0[(df_no_0['book_author']=='Stephen King')]\n\ndf_SK_sum=df_sk.groupby(by =['book_title'])['rating'].sum().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'total_rating'})\ndf_SK_sum=df_SK_sum.sort_values(by='total_rating', ascending=False)\ndf_SK_count=df_sk.groupby(by =['book_title'])['rating'].count().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'count_rating'})\ndf_SK_count=df_SK_count.sort_values(by='count_rating', ascending=False)\n\n#df_SK_sum\n#df_SK_count\ndf_SK_merge = pd.merge(df_SK_sum, df_SK_count, on='book_title')[0:5]\ndf_SK_merge['rate']=df_SK_merge['total_rating']\/df_SK_merge['count_rating']\ndf_SK_merge\n\nfig = make_subplots(rows=2, cols=1,\n                   subplot_titles=(\"Top 5 Reviewed Stephen King Books\",\n                                   \"Average Rate Of Top 5 Reviewed Stephen King Books \",))  # Subplot titles\n\nfig.add_trace(go.Bar(\n    y=df_SK_merge['book_title'],x=df_SK_merge['count_rating'],orientation=\"h\",\n    marker={'color': df_SK_merge['count_rating'], \n    'colorscale': 'thermal'},  \n    text=df_SK_merge['count_rating'],\n    textposition = \"outside\"),\n    row=1, col=1           \n)\nfig.add_trace(go.Bar(\n    y=df_SK_merge['book_title'],x=df_SK_merge['rate'],orientation=\"h\",\n    marker={'color': df_SK_merge['rate'], \n    'colorscale': 'jet'},  \n    text=df_SK_merge['rate'],\n    textposition = \"outside\"),\n    row=2, col=1           \n)\n\n\nfig.update_layout(height=900, width=900,title =\"Stephen King Books Ratings\",title_x=0.5)\nfig.show()","ad8a20a2":"df_sk=df_no_0[(df_no_0['book_author']=='Stephen King')]\n\ndf_SK_sum=df_sk.groupby(by =['book_title'])['rating'].sum().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'total_rating'})\ndf_SK_sum=df_SK_sum.sort_values(by='total_rating', ascending=False)\ndf_SK_count=df_sk.groupby(by =['book_title'])['rating'].count().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'count_rating'})\ndf_SK_count=df_SK_count.sort_values(by='count_rating', ascending=False)\n\n\ndf_SK_merge = pd.merge(df_SK_sum, df_SK_count, on='book_title')\ndf_SK_merge['rate']=df_SK_merge['total_rating']\/df_SK_merge['count_rating']\ndf_SK_merge=df_SK_merge.sort_values(by='rate', ascending=False)\ndf_SK_merge1=df_SK_merge[df_SK_merge['count_rating']>15]\ndf_SK_merge1=df_SK_merge1.sort_values(by='rate', ascending=False)[0:5]\n\n\nfig = make_subplots(rows=2, cols=1,\n                   subplot_titles=(\"Stephen King's 5 Best Rated Books\",\n                                   \"Stephen King's 5 Best Rated Books Count Rating \",))  # Subplot titles\n\nfig.add_trace(go.Bar(\n    y=df_SK_merge1['book_title'],x=df_SK_merge1['count_rating'],orientation=\"h\",\n    marker={'color': df_SK_merge1['count_rating'], \n    'colorscale': 'thermal'},  \n    text=df_SK_merge1['count_rating'],\n    textposition = \"outside\"),\n    row=2, col=1           \n)\nfig.add_trace(go.Bar(\n    y=df_SK_merge1['book_title'],x=df_SK_merge1['rate'],orientation=\"h\",\n    marker={'color': df_SK_merge1['rate'], \n    'colorscale': 'jet'},  \n    text=df_SK_merge1['rate'],\n    textposition = \"outside\"),\n    row=1, col=1           \n)\n\n\nfig.update_layout(height=900, width=900,title =\"Stephen King Books Ratings\",title_x=0.5)\nfig.show()","1189dc8f":"df_sk=df_no_0[(df_no_0['book_author']=='Stephen King')]\n\ndf_SK_country=df_sk.groupby(by =['country'])['rating'].count().to_frame().reset_index().rename(columns={'country':'country','rating':'count'})\n\ndf_SK_country=df_SK_country.sort_values(by='count', ascending=False)[0:5]\n\n\nfig = go.Figure(go.Bar(\n    x=df_SK_country['country'],y=df_SK_country['count'],\n    marker={'color': df_SK_country['count'], \n    'colorscale': 'haline'},  \n    text=df_SK_country['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 5 Stephen King Fan Country',xaxis_title=\"Country\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","f22f1eac":"df_sk=df_no_0[(df_no_0['book_author']=='Stephen King')]\n\ndf_SK_city=df_sk.groupby(by =['city'])['rating'].count().to_frame().reset_index().rename(columns={'city':'city','rating':'count'})\n\ndf_SK_city=df_SK_city.sort_values(by='count', ascending=False)[0:5]\n\n\nfig = go.Figure(go.Bar(\n    x=df_SK_city['city'],y=df_SK_city['count'],\n    marker={'color': df_SK_city['count'], \n    'colorscale': 'haline'},  \n    text=df_SK_city['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 5 Stephen King Fan City',xaxis_title=\"City\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","05f86698":"df_sk=items[(items['book_author']=='Stephen King')]\n\n\ndf_sk_years=df_sk.year_of_publication.value_counts()[0:10].reset_index().rename(columns={'index':'year_of_publication','year_of_publication':'count'})\n\nfig = go.Figure(go.Bar(\n    x=df_sk_years['year_of_publication'],y=df_sk_years['count'],\n    marker={'color': df_sk_years['count'], \n    'colorscale': 'speed'},  \n    text=df_sk_years['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Stephen King Top 10 Number Of Book Works Published By Years',xaxis_title=\"Publisher\",yaxis_title=\"Count\")\nfig.show()\n","1900f42a":"df_sk=items[(items['book_author']=='Stephen King')]\ndf_sk\n\ndf_sk_publisher=df_sk.publisher.value_counts()[0:10].reset_index().rename(columns={'index':'publisher','publisher':'count'})\n\nfig = go.Figure(go.Bar(\n    x=df_sk_publisher['publisher'],y=df_sk_publisher['count'],\n    marker={'color': df_sk_publisher['count'], \n    'colorscale': 'balance'},  \n    text=df_sk_publisher['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Stephen King Top 10 Publisher',xaxis_title=\"Publisher\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()\n","31c2764d":"df_sk=df_no_0[(df_no_0['book_author']=='Stephen King')]\n\ndf_SK_sum=df_sk.groupby(by =['book_title'])['rating'].sum().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'total_rating'})\ndf_SK_sum=df_SK_sum.sort_values(by='total_rating', ascending=False)\ndf_SK_count=df_sk.groupby(by =['book_title'])['rating'].count().to_frame().reset_index().rename(columns={'book_title':'book_title','rating':'count_rating'})\ndf_SK_count=df_SK_count.sort_values(by='count_rating', ascending=False)\n\ndf_SK_merge = pd.merge(df_SK_sum, df_SK_count, on='book_title')\ndf_SK_merge['rate']=df_SK_merge['total_rating']\/df_SK_merge['count_rating']\n\nCount_Rating=df_SK_merge['count_rating'].sum()     \nTotal_Rating=df_SK_merge['total_rating'].sum()     \navg_rate_rating=Total_Rating\/Count_Rating\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  Count_Rating,\n    domain = {'x': [0.25, 1], 'y': [0.4, 0.6]},\n    title = {'text': \"Stephen King Sum Of Count Ratings\",'font':{'color': 'black','size':12}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 5000]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = Total_Rating,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.9]},\n    title = {'text': \"Stephen King Sum Of Ratings\",'font':{'color': 'black','size':12}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,40000]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_rate_rating,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.3]},\n    title = {'text' :\"Stephen King Average Rating Of Books\",'font':{'color': 'black','size':12}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,10]},\n        'bar': {'color': \"Gold\"}}\n))\nfig.update_layout(title=\"Stephen King Ratings Of Books \",title_x=0.5)\nfig.show()","1490c2d8":"df_author_name=df_no_0.book_author.value_counts()[0:10].reset_index().rename(columns={'index':'book_author','book_author':'count'})\n\nfig = go.Figure(go.Bar(\n    x=df_author_name['book_author'],y=df_author_name['count'],\n    marker={'color': df_author_name['count'], \n    'colorscale': 'cividis'},  \n    text=df_author_name['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 10 Reviewed Book Author',xaxis_title=\"Author\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","84a9ec1e":"df_user=df_no_0.user_id.value_counts()[0:10].reset_index().rename(columns={'index':'user_id','user_id':'count'})\ndf_user['user_id']='User '+ df_user['user_id'].astype('str')\n\nfig = go.Figure(go.Bar(\n    x=df_user['user_id'],y=df_user['count'],\n    marker={'color': df_user['count'], \n    'colorscale': 'blackbody'},  \n    text=df_user['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 10 Bookworms Users',xaxis_title=\"Users\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","60f3835a":"df_user=df_no_0.user_id.value_counts()[0:10].reset_index().rename(columns={'index':'user_id','user_id':'count'})\ndf_user['user_id']='User '+df_user['user_id'].astype('str') \n\ndf_user_11676=df_no_0[(df_no_0['user_id']==11676)]\n\nCount_Rating=df_user_11676['rating'].count()    \nTotal_Rating=df_user_11676['rating'].sum()    \navg_rate_rating=Total_Rating\/Count_Rating\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  Count_Rating,\n    domain = {'x': [0.25, 1], 'y': [0.4, 0.6]},\n    title = {'text': \"User 11676 Sum Of Count Ratings\",'font':{'color': 'black','size':12}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 8000]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = Total_Rating,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.9]},\n    title = {'text': \"User 11676 Sum Of Ratings\",'font':{'color': 'black','size':12}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,60000]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_rate_rating,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.3]},\n    title = {'text' :\"User 11676 Average Rating Of Books\",'font':{'color': 'black','size':12}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,10]},\n        'bar': {'color': \"Gold\"}}\n))\nfig.update_layout(title=\"User 11676 Ratings Of Books \",title_x=0.5)\nfig.show()","560bef74":"df_book_name=items.book_title.value_counts()[0:25].reset_index().rename(columns={'index':'book_title','book_title':'count'})\n\nfig = go.Figure(go.Bar(\n    x=df_book_name['book_title'],y=df_book_name['count'],\n    marker={'color': df_book_name['count'], \n    'colorscale': 'earth'},  \n    text=df_book_name['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Top 25 Same Book Title ',xaxis_title=\"Books Name\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","9d801846":"df_Dracula=items[items['book_title']=='Dracula']\n\ncolors=['DarkKhaki','Coral','DarkSalmon','FireBrick']\n    \nfig = go.Figure(data=[go.Table(header=dict(values=['Book Title', 'Book Author','Year Of Publication','Publisher'],\n                                          line_color='white', fill_color='gray',\n                                  align='center',font=dict(color='white', size=12)\n                                          ),\n                               \n                 cells=dict( values=[df_Dracula['book_title'], df_Dracula['book_author'],df_Dracula['year_of_publication'],df_Dracula['publisher']],\n                           line_color=colors, fill_color=colors,\n                           align='center', font=dict(color='black', size=13))\n                              )])\n                      \n\nfig.update_layout(\n    autosize=False,\n    width=800,\n    height=800,\n   )    \n\nfig.show()","9ff0e060":"df_author_name=items.book_author.value_counts()[0:20].reset_index().rename(columns={'index':'book_author','book_author':'count'})\ndf_author_name=items.book_author.value_counts()[0:20].reset_index().rename(columns={'index':'book_author','book_author':'count'})\ndf_author_name\n\nfig = go.Figure(go.Bar(\n    x=df_author_name['book_author'],y=df_author_name['count'],\n    marker={'color': df_author_name['count'], \n    'colorscale': 'temps'},  \n    text=df_author_name['count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Number Of Works By 20 Authors With The Most Works Published ',xaxis_title=\"Author Name\",yaxis_title=\"Count\")\nfig.show()","3384a5cb":" # <a id='8'> 8.Top 5 Reviewed Books And Rate<\/a> ","5917be29":" # <a id='13'> 13.Top 10 Reviewed Books Author <\/a>","f76a98dc":"![]( https:\/\/media.giphy.com\/media\/VeB9ieebylsaN5Jw8p\/giphy.gif) <br>\n        * When I see 0 points","fed69b9a":" # <a id='11'> 11.Top 10 Publisher <\/a>","1304506b":"# <a id='3'> 3. Feature Generation<\/a> ","5c9fb482":"# <a id='17'> 17.Dracula<\/a>","ce3ed338":"[](https:\/\/media.giphy.com\/media\/ZJEcj2IcCt8Na\/giphy.gif)","05c69767":"# 0 Points ?\nI like to read books. If I score a book, never give 0 points, even if I give 0 points, it would be a maximum of 5 books.(Total 0 Score=647 323 other Score=383 842).The worst book I've ever read is 'the slow regard of silent things' and my score for it is 2. Other books are so good. Be sure to read. 0 points here may be due to technical error. 0 points are removed from the data.\n","9f1869b9":"# Book Review Ratings Analysis And Visualization\n![](https:\/\/media.giphy.com\/media\/xT8qBt3pdiCZrk3erS\/giphy.gif)","1c228e70":"# <a id='18'> 18. Number Of Works<\/a>","a0ae67d8":"# <a id='5'> 5.Average Rating Of Books<\/a> ","a2f9e6a8":"# <a id='1'> 1. Importing Libraries and Dataset<\/a>","e750f2c7":"![](https:\/\/media.giphy.com\/media\/ZJEcj2IcCt8Na\/giphy.gif)","513e6d00":"![](https:\/\/media.giphy.com\/media\/lkdH8FmImcGoylv3t3\/giphy.gif)\n<br>\n        * Age 200 ? ","15ee1b3c":"# <a id='4'> 4.Rating Count<\/a> ","4cc64ef5":"# <a id='12'> 12.Stephen King<\/a> ","7fab9eec":" # <a id='15'> 15.Users 11676<\/a>","091c2d0d":"# Table of contents\n\n<a href='#1'>1. Importing Libraries and Dataset <\/a> <br>\n<a href='#2'>2. Data <\/a> <br>\n<a href='#3'>3. Feature Generation <\/a> <br>\n<a href='#4'>4. Rating Count<\/a> <br>\n<a href='#5'>5. Average Rating Of Books <\/a> <br>\n<a href='#6'>6. Users City And Country <\/a> <br>\n<a href='#7'>7. Reviewed Books <\/a> <br>\n<a href='#8'>8. Top 5 Reviewed Books And Rate <\/a> <br>\n<a href='#9'>9. Top 5 Books Rating And Count Rating <\/a> <br>\n<a href='#10'>10. Number Of Book Works Published By Years <\/a> <br>\n<a href='#11'>11. Top 10 Publisher <\/a> <br>\n<a href='#12'>12. Stephen King <\/a> <br>\n<a href='#13'>13. Top 10 Reviewed Books Author <\/a> <br>\n<a href='#14'>14. Bookworms <\/a> <br>\n<a href='#15'>15. Users 11676 <\/a> <br>\n<a href='#16'>16. Same Book Title  <\/a> <br>\n<a href='#17'>17. Dracula  <\/a> <br>\n<a href='#18'>18. Number Of Works  <\/a> <br>\n<a href='#19'>19. Age Coloumn <\/a> <br>\n<a href='#20'>20. End Note <\/a> <br>\n","41d9b8a3":" # <a id='14'> 14.Bookworms<\/a>","e5a83780":"# <a id='16'> 16.Same Book Title<\/a>","2eae8c4d":"# <a id='2'> 2. Data<\/a>","54928ef7":"<font size=\"+2\" color=\"LIGHTSEAGREEN\"><b>My Other Kernels<\/b><\/font><br>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/seabron-plotly-for-beginners\" class=\"btn btn-primary\" style=\"color:white;\">Seabron & Plotly For Beginners<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/basketball-players-stats-data-visualisation\" class=\"btn btn-primary\" style=\"color:white;\">Basketball Players Stats Data Visualisation<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/women-s-football-results-visualization\" class=\"btn btn-primary\" style=\"color:white;\">Women's Football Results Visualization<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/estonia-disaster-visualization-machine-learning\" class=\"btn btn-primary\" style=\"color:white;\">Estonia Disaster Visualization & Machine Learning<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/us-police-shootings-data-visualisation\" class=\"btn btn-primary\" style=\"color:white;\">Us Police Shootings Data Visualisation<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/fish-market-data-visualisation-machine-learning\" class=\"btn btn-primary\" style=\"color:white;\">Fish Market Data Visualisation & Machine Learning<\/a>\n\n","767c68c9":"# <a id='19'> 19.Age Column<\/a> ","920cf3cb":"# <a id='20'> <font color=\"LIGHTSEAGREEN\" size=+2.5><b> 20. End Note<\/b><\/font> <\/a>\n\nI hope you enjoyed my kernel.If you like this notebook, an <font color=\"DARKCYAN\"><b>Upvote<\/b><\/font> would be great ! :)\n\nI am new with data science. Please <font color=\"GREEN\"><b>comments<\/b><\/font> me your <font color=\"GREEN\"><b>feedbacks<\/b><\/font> to help me improve myself. \n    \nThanks for your time","21443367":"# <a id='6'> 6.Users City And Country<\/a> ","786c1996":" # <a id='10'> 10.Number Of Book Works Published By Years <\/a> ","1d6d8312":" # <a id='9'> 9.Top 5 Books Rating And Count Rating <\/a> ","53166adb":" # <a id='7'> 7.Reviewed Books<\/a> "}}