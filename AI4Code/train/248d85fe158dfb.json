{"cell_type":{"109c399a":"code","e0515f6c":"code","0858920c":"code","f4161f93":"code","403f5f65":"code","9b9301dc":"code","2c5b94fd":"code","d148b1e6":"code","97a63db3":"code","0d237356":"code","427bbf86":"code","3c47ea8d":"code","183e1c04":"code","c0f3bb02":"code","56c430bd":"code","6dab52c6":"code","a880da48":"markdown","b811bc21":"markdown","7e165199":"markdown","467bfa75":"markdown","6e1d6954":"markdown","58ea99f8":"markdown","273c8060":"markdown","b37f2c97":"markdown","06e0491f":"markdown","915cb576":"markdown","9cbd6c32":"markdown"},"source":{"109c399a":"from sklearn.datasets import make_classification\nfrom sklearn.datasets import make_circles\nimport numpy as np","e0515f6c":"X,y = make_classification(n_samples=2000, n_features=10, n_classes=2, random_state=0)","0858920c":"random_state = np.random.RandomState(0)\nn_samples, n_features = X.shape\nX = np.c_[X, random_state.randn(n_samples, 200 * n_features)]","f4161f93":"from sklearn.model_selection import train_test_split","403f5f65":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.368, random_state=0)","9b9301dc":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB","2c5b94fd":"rf = RandomForestClassifier(max_features=5, n_estimators=500)\nrf.fit(X_train,y_train)","d148b1e6":"clf = GaussianNB()\nclf.fit(X_train, y_train)","97a63db3":"rf_probs = rf.predict_proba(X_test)\nclf_probs = clf.predict_proba(X_test)","0d237356":"rf_probs = rf_probs[:, 1]\nclf_probs =clf_probs[:, 1]","427bbf86":"from sklearn.metrics import roc_auc_score, roc_curve","3c47ea8d":"rf_auc = roc_auc_score(y_test, rf_probs)\nclf_auc = roc_auc_score(y_test, clf_probs)","183e1c04":"print(f'Random Forest: AUC ROC = {rf_auc}')\nprint(f'Naive Bayes: AUC ROC = {clf_auc}')","c0f3bb02":"rf_fpr, rf_tpr, _ = roc_curve(y_test, rf_probs)\nclf_fpr, clf_tpr, _ = roc_curve(y_test, clf_probs)","56c430bd":"import matplotlib.pyplot as plt","6dab52c6":"plt.figure(dpi =150)\nplt.plot(rf_fpr, rf_tpr, marker='.', label=f'Random Forest (AUC ROC = {rf_auc})')\nplt.plot(clf_fpr, clf_tpr, marker='.', label=f'Naive Bayes (AUC ROC = {clf_auc})')\n\n# Title\nplt.title('ROC Plot')\n# Axis labels\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\n# Show legend\nplt.legend() # \n# Show plot\nplt.show()","a880da48":"### Data Splitting","b811bc21":"### Prediction probabilities\n","7e165199":"### Add noisy features to make the problem","467bfa75":"### _What is ROC curve?_\n\nThe ROC curve summarizes the prediction performance of a classification model at all classification thresholds. Particularly, the ROC curve plots the False Positive Rate (FPR) on the X-axis and the True Positive Rate (TPR) on the Y-axis.\n\n$\\text{TPR (Sensitivity)} = \\frac{TP}{TP + FN}$\n\n$\\text{FPR (1 - Specificity)} = \\frac{FP}{TN + FP}$","6e1d6954":"### AUC ROC\n#### ROC is the receiver operating characteristic AUC ROC is the area under the ROC curve","58ea99f8":"### Random Forest","273c8060":"### Plot ","b37f2c97":"### Build classification model: _Random Forest_ and _Gaussian Naive Bayes_","06e0491f":"### Calculate ROC Curve","915cb576":"### Naive Bayes","9cbd6c32":"### Generate synthetic dataset"}}