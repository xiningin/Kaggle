{"cell_type":{"34f7e5ae":"code","9e72ad88":"code","8ab385c8":"code","13f2d7e4":"code","4ddbef8f":"code","109a366a":"code","fce4dc8e":"code","7f9529c2":"code","b2599a48":"code","364442da":"code","044af0a3":"code","30708a9f":"code","b369c76e":"code","7030aa2b":"code","00c243cc":"code","a81d73fa":"code","655e2ef8":"code","3b70316d":"code","3b6b2b97":"code","1ad80fa5":"code","9488d863":"code","f8c41ea5":"code","32e4387d":"markdown","af4f3e66":"markdown","aaba83b2":"markdown","0d5af2a3":"markdown","cdc6eb0c":"markdown","c81f7f3c":"markdown","d4071e6f":"markdown","75d894ee":"markdown","af081dbf":"markdown","7e9380d5":"markdown","9143887c":"markdown","22c20244":"markdown","19d3cb43":"markdown","24dfe50a":"markdown","4515eb06":"markdown","6c0edfb6":"markdown","3b992674":"markdown","f906d857":"markdown","5d60dccb":"markdown"},"source":{"34f7e5ae":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","9e72ad88":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')","8ab385c8":"df_train.head()","13f2d7e4":"df_train.corr()['Survived'].sort_values()","4ddbef8f":"sns.scatterplot(data=df_train,x='Fare',y='Survived')","109a366a":"def missing_percent(df):\n    nan_percent = 100* (df.isnull().sum() \/ len(df))\n    nan_percent = nan_percent[nan_percent>0].sort_values()\n    return nan_percent","fce4dc8e":"nan_percent = missing_percent(df_train)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","7f9529c2":"df_train = df_train.dropna(axis=0,subset=['Embarked'])","b2599a48":"df_train['Age'] = df_train.groupby('Sex')['Age'].transform(lambda x: x.fillna(x.mean()))","364442da":"nan_percent = missing_percent(df_train)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","044af0a3":"df_train = df_train.drop(['Cabin'],axis=1)","30708a9f":"df_Sex_train = pd.get_dummies(df_train['Sex'])\ndf_train = df_train.drop('Sex',axis=1)\ndf_train = pd.concat([df_train,df_Sex_train], axis=1)","b369c76e":"plt.figure(figsize=(12,8))\nsns.heatmap(df_train.corr(),annot=True)","7030aa2b":"X = df_train.drop(['Survived','Name','Ticket','Embarked'],axis=1)\ny = df_train['Survived']","00c243cc":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=101)","a81d73fa":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X_train)\n\nscaled_X_train = scaler.transform(X_train)\nscaled_X_test  = scaler.transform(X_test)","655e2ef8":"from sklearn.linear_model import LogisticRegression\nlog_model = LogisticRegression()\nlog_model.fit(scaled_X_train,y_train)","3b70316d":"y_pred = log_model.predict(scaled_X_test)","3b6b2b97":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report","1ad80fa5":"accuracy_score(y_test,y_pred)","9488d863":"confusion_matrix(y_test,y_pred)","f8c41ea5":"print(classification_report(y_test,y_pred))","32e4387d":"## Predecting Test Data","af4f3e66":"## i want to predict Surviving in each trip","aaba83b2":"# Evaluating The Model","0d5af2a3":"## we can see the missing data on the plot","cdc6eb0c":"## some **ages** are empty \n### and for get the best result we must give them a \n### value, and the best value is the mean of each **Sex**","c81f7f3c":"## we can see there is a well correlation between **Survived** and **Fare**","d4071e6f":"# Logistic Regression","75d894ee":"## the **Sex** effects on the probability\n### but it is categorical variable\n### so we most use to one-Hot encoding on it","af081dbf":"## we can see the correlation","7e9380d5":"# Split train and test","9143887c":"# EDA","22c20244":"# Missing Data","19d3cb43":"# Determine features and label","24dfe50a":"### the **Cabi** has empty value very much\n### and it's good to remove **Cabin** column\n### from data set","4515eb06":"## now just **Cabin** is Stand","6c0edfb6":"# Feature Scaling","3b992674":"## this function helps us to calculate percent of the missing data","f906d857":"## **Embarked** has a missing data and we can get rid of it","5d60dccb":"## in this section i want to predict the data with Logistic Regression"}}