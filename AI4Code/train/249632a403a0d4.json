{"cell_type":{"7297a4d1":"code","30789d26":"code","a4d29c89":"code","b99dad57":"code","90fc4bc3":"code","052e7e57":"code","cdc75bdc":"code","a91583c9":"code","c5ad5a69":"code","f6d51242":"code","c37ff8e8":"code","a1be1382":"code","e3e515f5":"code","b012ab57":"code","571bb90f":"code","751df118":"code","38bde5eb":"code","b3760139":"code","a3a75578":"code","d07491b6":"code","8aba7a3c":"code","a64d7189":"code","154c7742":"code","4b09c448":"code","0b12f17a":"code","374a84c8":"code","95ce697c":"code","a5329fd8":"code","b0b79069":"code","3e2bb42d":"code","cb8d23b6":"code","5707b117":"code","dec4dee8":"code","653d2fc7":"code","4cb4085e":"code","bb05c160":"code","fd4076d4":"code","86876b13":"code","63ce92e7":"code","c1097ab0":"code","0d65b47d":"code","668acde0":"code","4368661d":"code","97c99970":"code","1f853a4d":"code","d5bca1be":"code","29143ca9":"code","d268f5d4":"code","36dad0e5":"code","0e4e4721":"code","02c2600f":"code","507ef2b1":"code","d063f055":"code","5ec35d17":"code","4907e176":"code","19272dfb":"markdown","d73890b4":"markdown","5330af2f":"markdown","e58ab37b":"markdown","e3ba98bd":"markdown","1d5636d3":"markdown","c33633b1":"markdown","a3443531":"markdown","8e0d6d03":"markdown","57f3400f":"markdown","f917f3f5":"markdown"},"source":{"7297a4d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","30789d26":"df = pd.read_csv('..\/input\/video-game-sales-with-ratings\/Video_Games_Sales_as_at_22_Dec_2016.csv')\ndf.head()","a4d29c89":"df.info()","b99dad57":"df.columns","90fc4bc3":"# Percentage of data missing\n\ndf.isna().mean()*100","052e7e57":"# Count of missing values\n\ndf.isna().sum()","cdc75bdc":"# Categorial variables\n\ndf.select_dtypes([np.object]).columns","a91583c9":"# Numerical Variables\n\ndf.select_dtypes([np.float64]).columns","c5ad5a69":"sns.heatmap(df.corr())","f6d51242":"# Removing columns: Critic_Score, Critic_Count, User_Score, User_Count, Developer, Rating, \n\ncols = ['Critic_Score', 'Critic_Count', 'User_Score', 'User_Count', 'Developer', 'Rating']\n\nprint('Before ', df.shape)\ndf = df.drop(cols, axis=1)\nprint('After ', df.shape)","c37ff8e8":"# Filling NaN values in Genre with the mode\n\ngenre_mode = df['Genre'].mode()\ndf = df.fillna(value={'Genre': genre_mode})\ndf.shape","a1be1382":"# Removing the 2 missing rows from Name\n\nprint('Before ', df.shape)\ndf = df.dropna(axis='index', how='all', subset=['Name'])\nprint('After ', df.shape)","e3e515f5":"# Droping 269 missing rows from Year_of_Release\n\nprint('Before ', df.shape)\ndf = df.dropna(axis='index', how='any', subset=['Year_of_Release'])\nprint('After ', df.shape)","b012ab57":"# Removing the 54 missing rows from Publisher\n\nprint('Before ', df.shape)\ndf = df.dropna(axis='index', how='all', subset=['Publisher'])\nprint('After ', df.shape)\nprint('-'*20)\nprint(df.isna().sum())","571bb90f":"# By Global Sales\ntop_10_games_by_gs = df[['Name', 'Global_Sales']].groupby(['Name'],\n                                          as_index=False).mean().sort_values(by='Global_Sales', \n                                                                             ascending=False).round(2).head(10)\n\n","751df118":"plt.figure(figsize=(10, 7))        \n \nax = sns.barplot(x=\"Global_Sales\", y=\"Name\", data=top_10_games_by_gs)\nax.set_xlabel('Global Sales in Millions')\nax.set_ylabel('Game')\n\n\nfor index, value in enumerate(top_10_games_by_gs['Global_Sales']):\n    plt.text(value, index, str(value))\n","38bde5eb":"# By NA Sales\ntop_10_games_by_na = df[['NA_Sales',\n                         'Name']].groupby(['Name'],\n                                          as_index=False).mean().sort_values(by='NA_Sales', \n                                                                             ascending=False).round(2).head(10)\n","b3760139":"plt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"NA_Sales\", y=\"Name\", data=top_10_games_by_na)\nax.set_xlabel('North America Sales in Millions')\nax.set_ylabel('Game')\n\nfor index, value in enumerate(top_10_games_by_na['NA_Sales']):\n    plt.text(value, index, str(value))","a3a75578":"# By EU Sales\ntop_10_games_by_eu = df[['EU_Sales',\n                         'Name']].groupby(['Name'],\n                                          as_index=False).mean().sort_values(by='EU_Sales', \n                                                                             ascending=False).round(2).head(10)\n\n","d07491b6":"plt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"EU_Sales\", y=\"Name\", data=top_10_games_by_eu)\nax.set_xlabel('Europe Sales in Millions')\nax.set_ylabel('Game')\n\nfor index, value in enumerate(top_10_games_by_eu['EU_Sales']):\n    plt.text(value, index, str(value))","8aba7a3c":"# By JP Sales\ntop_10_games_by_jp = df[['JP_Sales',\n                         'Name']].groupby(['Name'],\n                                          as_index=False).mean().sort_values(by='JP_Sales', \n                                                                             ascending=False).round(2).head(10)\n\n","a64d7189":"plt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"JP_Sales\", y=\"Name\", data=top_10_games_by_jp)\nax.set_xlabel('Japan Sales in Millions')\nax.set_ylabel('Game')\n\nfor index, value in enumerate(top_10_games_by_jp['JP_Sales']):\n    plt.text(value, index, str(value))","154c7742":"# By Other Sales\ntop_10_games_by_os = df[['Other_Sales',\n                         'Name']].groupby(['Name'],\n                                          as_index=False).mean().sort_values(by='Other_Sales', \n                                                                             ascending=False).round(2).head(10)\n\n","4b09c448":"plt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Other_Sales\", y=\"Name\", data=top_10_games_by_os)\nax.set_xlabel('Other Sales in Millions')\nax.set_ylabel('Game')\n\nfor index, value in enumerate(top_10_games_by_os['Other_Sales']):\n    plt.text(value, index, str(value))","0b12f17a":"# By Total Sales\n\ndf['Total_Sales'] = df[['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales',\n       'Global_Sales']].sum(axis=1)\n\ntop_10_games_total_sales = df[['Name', 'Total_Sales']].groupby(['Name'],\n                                                               as_index=False).mean().sort_values(\nby='Total_Sales', ascending=False).reset_index(drop=True).round(2).head(10)\n","374a84c8":"plt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Total_Sales\", y=\"Name\", data=top_10_games_total_sales)\nax.set_xlabel('Total Sales in Millions')\nax.set_ylabel('Game')\n\nfor index, value in enumerate(top_10_games_total_sales['Total_Sales']):\n    plt.text(value, index, str(value))","95ce697c":"df.columns","a5329fd8":"# Top 10 Genres by Global Sales\n\ntop_10_genres_by_gs = df.groupby(by=['Genre'], as_index=False)['Global_Sales'].sum().sort_values(by='Global_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Global_Sales\", y=\"Genre\", data=top_10_genres_by_gs)\nax.set_xlabel('Global Sales in Millions')\nax.set_ylabel('Genre')\n\nfor index, value in enumerate(top_10_genres_by_gs['Global_Sales']):\n    plt.text(value, index, str(value))","b0b79069":"# Top 10 Genres by Na Sales\n\ntop_10_genres_by_na = df.groupby(by=['Genre'], as_index=False)['NA_Sales'].sum().sort_values(by='NA_Sales', ascending=False).round(2).head(10)\n\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"NA_Sales\", y=\"Genre\", data=top_10_genres_by_na)\nax.set_xlabel('North America Sales in Millions')\nax.set_ylabel('Genre')\n\nfor index, value in enumerate(top_10_genres_by_na['NA_Sales']):\n    plt.text(value, index, str(value))","3e2bb42d":"# Top 10 Genres by EU Sales\n\ntop_10_genres_by_eu = df.groupby(by=['Genre'], as_index=False)['EU_Sales'].sum().sort_values(by='EU_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"EU_Sales\", y=\"Genre\", data=top_10_genres_by_eu)\nax.set_xlabel('Europe Sales in Millions')\nax.set_ylabel('Genre')\n\nfor index, value in enumerate(top_10_genres_by_eu['EU_Sales']):\n    plt.text(value, index, str(value))\n","cb8d23b6":"# Top 10 Genres by JP Sales\n\ntop_10_genres_by_jp = df.groupby(by=['Genre'], as_index=False)['JP_Sales'].sum().sort_values(by='JP_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"JP_Sales\", y=\"Genre\", data=top_10_genres_by_jp)\nax.set_xlabel('Japan Sales in Millions')\nax.set_ylabel('Genre')\n\nfor index, value in enumerate(top_10_genres_by_jp['JP_Sales']):\n    plt.text(value, index, str(value))","5707b117":"# Top 10 Genres by Other Sales\n\ntop_10_genres_by_os = df.groupby(by=['Genre'], as_index=False)['Other_Sales'].sum().sort_values(by='Other_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Other_Sales\", y=\"Genre\", data=top_10_genres_by_os)\nax.set_xlabel('Other Sales in Millions')\nax.set_ylabel('Genre')\n\nfor index, value in enumerate(top_10_genres_by_os['Other_Sales']):\n    plt.text(value, index, str(value))","dec4dee8":"# Top 10 Genres by Total Sales\n\ntop_10_genres_by_ts = df.groupby(by=['Genre'], as_index=False)['Total_Sales'].sum().sort_values(by='Total_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Total_Sales\", y=\"Genre\", data=top_10_genres_by_ts)\nax.set_xlabel('Total Sales in Millions')\nax.set_ylabel('Genre')\n\nfor index, value in enumerate(top_10_genres_by_ts['Total_Sales']):\n    plt.text(value, index, str(value))","653d2fc7":"comp_genre = df[['Genre', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\n\ncomp_map = comp_genre.groupby(by=['Genre']).sum()\ncomp_table = comp_map.reset_index()\ncomp_table = pd.melt(comp_table, id_vars=['Genre'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Area', value_name='Sale_Reveneu')\n\n\nplt.figure(figsize=(15, 10))\nsns.barplot(x='Genre', y='Sale_Reveneu', hue='Sale_Area', data=comp_table)\n\n\nax = sns.barplot(x=\"Genre\", y=\"Sale_Reveneu\", hue='Sale_Area', data=comp_table)\nax.set_ylabel('Total Sales in Millions')\nax.set_xlabel('Genre')\n\n","4cb4085e":"# Top 10 Platform by Global Sales\n\ntop_10_platform_by_gs = df.groupby(by=['Platform'], as_index=False)['Global_Sales'].sum().sort_values(by='Global_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Global_Sales\", y=\"Platform\", data=top_10_platform_by_gs)\nax.set_xlabel('Global Sales in Millions')\nax.set_ylabel('Platform')\n\nfor index, value in enumerate(top_10_platform_by_gs['Global_Sales']):\n    plt.text(value, index, str(value))","bb05c160":"# By NA Sales\n\ntop_10_platform_by_na = df.groupby(by=['Platform'], as_index=False)['NA_Sales'].sum().sort_values(by='NA_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"NA_Sales\", y=\"Platform\", data=top_10_platform_by_na)\nax.set_xlabel('North America Sales in Millions')\nax.set_ylabel('Platform')\n\nfor index, value in enumerate(top_10_platform_by_na['NA_Sales']):\n    plt.text(value, index, str(value))","fd4076d4":"# By EU Sales\n\ntop_10_platform_by_eu = df.groupby(by=['Platform'], as_index=False)['EU_Sales'].sum().sort_values(by='EU_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"EU_Sales\", y=\"Platform\", data=top_10_platform_by_eu)\nax.set_xlabel('Europe Sales in Millions')\nax.set_ylabel('Platform')\n\nfor index, value in enumerate(top_10_platform_by_eu['EU_Sales']):\n    plt.text(value, index, str(value))","86876b13":"# By JP Sales\n\ntop_10_platform_by_jp = df.groupby(by=['Platform'], as_index=False)['JP_Sales'].sum().sort_values(by='JP_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"JP_Sales\", y=\"Platform\", data=top_10_platform_by_jp)\nax.set_xlabel('Japan Sales in Millions')\nax.set_ylabel('Platform')\n\nfor index, value in enumerate(top_10_platform_by_jp['JP_Sales']):\n    plt.text(value, index, str(value))","63ce92e7":"# By Other Sales\n\ntop_10_platform_by_os = df.groupby(by=['Platform'], as_index=False)['Other_Sales'].sum().sort_values(by='Other_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Other_Sales\", y=\"Platform\", data=top_10_platform_by_os)\nax.set_xlabel('Other Sales in Millions')\nax.set_ylabel('Platform')\n\nfor index, value in enumerate(top_10_platform_by_os['Other_Sales']):\n    plt.text(value, index, str(value))","c1097ab0":"\n# By Total Sales\n\ntop_10_platform_by_ts = df.groupby(by=['Platform'], as_index=False)['Total_Sales'].sum().sort_values(by='Total_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Total_Sales\", y=\"Platform\", data=top_10_platform_by_ts)\nax.set_xlabel('Total Sales in Millions')\nax.set_ylabel('Platform')\n\nfor index, value in enumerate(top_10_platform_by_ts['Total_Sales']):\n    plt.text(value, index, str(value))","0d65b47d":"comp_platform = df[['Platform', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\n\ncomp_map = comp_platform.groupby(by=['Platform']).sum()\ncomp_table = comp_map.reset_index()\ncomp_table = pd.melt(comp_table, id_vars=['Platform'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Area', value_name='Sale_Reveneu')\n\n\nplt.figure(figsize=(15, 10))\nsns.barplot(x='Platform', y='Sale_Reveneu', hue='Sale_Area', data=comp_table)\n\n\nax = sns.barplot(x=\"Platform\", y=\"Sale_Reveneu\", hue='Sale_Area', data=comp_table)\nax.set_ylabel('Total Sales in Millions')\nax.set_xlabel('Platform')\n\n","668acde0":"# By Global Sales\n\ntop_10_publisher_by_gs = df.groupby(by=['Publisher'], as_index=False)['Global_Sales'].sum().sort_values(by='Global_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Global_Sales\", y=\"Publisher\", data=top_10_publisher_by_gs)\nax.set_xlabel('Global Sales in Millions')\nax.set_ylabel('Publisher')\n\nfor index, value in enumerate(top_10_publisher_by_gs['Global_Sales']):\n    plt.text(value, index, str(value))","4368661d":"# By NA Sales\n\ntop_10_publisher_by_na = df.groupby(by=['Publisher'], as_index=False)['NA_Sales'].sum().sort_values(by='NA_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"NA_Sales\", y=\"Publisher\", data=top_10_publisher_by_na)\nax.set_xlabel('North America Sales in Millions')\nax.set_ylabel('Publisher')\n\nfor index, value in enumerate(top_10_publisher_by_na['NA_Sales']):\n    plt.text(value, index, str(value))","97c99970":"# By EU Sales\n\ntop_10_publisher_by_eu = df.groupby(by=['Publisher'], as_index=False)['EU_Sales'].sum().sort_values(by='EU_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"EU_Sales\", y=\"Publisher\", data=top_10_publisher_by_eu)\nax.set_xlabel('Europe Sales in Millions')\nax.set_ylabel('Publisher')\n\nfor index, value in enumerate(top_10_publisher_by_eu['EU_Sales']):\n    plt.text(value, index, str(value))","1f853a4d":"# By JP Sales\n\ntop_10_publisher_by_jp = df.groupby(by=['Publisher'], as_index=False)['JP_Sales'].sum().sort_values(by='JP_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"JP_Sales\", y=\"Publisher\", data=top_10_publisher_by_jp)\nax.set_xlabel('Japan Sales in Millions')\nax.set_ylabel('Publisher')\n\nfor index, value in enumerate(top_10_publisher_by_jp['JP_Sales']):\n    plt.text(value, index, str(value))","d5bca1be":"# By Other Sales\n\ntop_10_publisher_by_os = df.groupby(by=['Publisher'], as_index=False)['Other_Sales'].sum().sort_values(by='Other_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Other_Sales\", y=\"Publisher\", data=top_10_publisher_by_os)\nax.set_xlabel('Other Sales in Millions')\nax.set_ylabel('Publisher')\n\nfor index, value in enumerate(top_10_publisher_by_os['Other_Sales']):\n    plt.text(value, index, str(value))","29143ca9":"# By Total Sales\n\ntop_10_publisher_by_ts = df.groupby(by=['Publisher'], as_index=False)['Total_Sales'].sum().sort_values(by='Total_Sales', ascending=False).round(2).head(10)\n\nplt.figure(figsize=(10, 7)) \n\nax = sns.barplot(x=\"Total_Sales\", y=\"Publisher\", data=top_10_publisher_by_ts)\nax.set_xlabel('Total Sales in Millions')\nax.set_ylabel('Publisher')\n\nfor index, value in enumerate(top_10_publisher_by_ts['Total_Sales']):\n    plt.text(value, index, str(value))","d268f5d4":"comp_publisher = df[['Publisher', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\n\ncomp_map = comp_publisher.groupby(by=['Publisher']).sum().nlargest(10,['NA_Sales','EU_Sales', 'JP_Sales', 'Other_Sales'])\ncomp_table = comp_map.reset_index()\ncomp_table = pd.melt(comp_table, id_vars=['Publisher'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Area', value_name='Sale_Reveneu')\n\n\nplt.figure(figsize=(15, 10))\nsns.barplot(x='Publisher', y='Sale_Reveneu', hue='Sale_Area', data=comp_table)\n\n\nax = sns.barplot(x=\"Publisher\", y=\"Sale_Reveneu\", hue='Sale_Area', data=comp_table)\nax.set_ylabel('Total Sales in Millions')\nax.set_xlabel('Publisher')\nfor item in ax.get_xticklabels():\n    item.set_rotation(45)\n","36dad0e5":"sales_by_region = df[['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\nsales_by_region = sales_by_region.sum().reset_index()\nsales_by_region = sales_by_region.rename(columns={'index': 'Region', 0: 'Total Sales'})\nsales_by_region","0e4e4721":"# Bar chart\n\nplt.figure(figsize=(10,7))\nsns.barplot(y='Total Sales', x='Region', data=sales_by_region)","02c2600f":"# Pie chart\nplt.figure(figsize=(12,12))\nlabels = sales_by_region['Region']\nsizes = sales_by_region['Total Sales']\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\n\nax1.axis('equal')\nplt.show()","507ef2b1":"\ngenres_over_years = df[['Genre', 'Year_of_Release']]\ntop_genres_over_years = genres_over_years.groupby(['Year_of_Release', 'Genre']).size().reset_index(name='Count').sort_values(by='Year_of_Release', ascending=False)\ntop_genres_over_years","d063f055":"plt.figure(figsize=(12,8))\nsns.lineplot(data=top_genres_over_years, x=\"Year_of_Release\", y=\"Count\", hue='Genre', sort=True)","5ec35d17":"\npublishers_over_years = df[['Publisher', 'Year_of_Release']]\ntop_publishers_over_years = publishers_over_years.groupby(['Year_of_Release', 'Publisher']).size().reset_index(name='Count').sort_values(by='Count', ascending=False).head(150)\ntop_publishers_over_years","4907e176":"plt.figure(figsize=(12,8))\nsns.lineplot(data=top_publishers_over_years, x=\"Year_of_Release\", y=\"Count\", hue='Publisher', sort=True)","19272dfb":" ### Total reveneu for each Region","d73890b4":"### 1) Exploring the data:\n\n* Size of the data\n* Column details\n* Null values\n* Categorical variables\n* Numerical variables\n* Correlation between values","5330af2f":"### 1. Top 10 Game by:\n*  Global Sales: Wii Sports.\n*  Na Sales: Wii Sports.\n*  Eu Sales: Wii Sports.\n*  Jp Sales: Pokemon Red\/Pokemon Blue.\n*  Other Sales: Wii Sports.\n*  Total Sales: Wii Sports.","e58ab37b":"### 2) Cleaning the data\n\nTasks:\n\n* Remove columns: Critic_Score, Critic_Count, User_Score, User_Count, Developer, Rating. Because there is more than %30 of data missing in each feature. This might be a ETL process problem or a collection issue, one wich is beyond our control. So for more precisely data analysis they will have to be removed.\n\n* Complete Genre column with the mode of Genre.\n\n* Drop the 2 missing rows from Name feature.\n\n* Drop year_released missing rows.\n\n* Drop the 52 missing rows from Publisher feature.","e3ba98bd":"### Final comments\n\nI hope youn enjoy and find some value in this post guys :). I'm just started few months ago in this field and I'm looking forward to keep improving my current skills and learning new ones!. Grettings!","1d5636d3":"### 3. Top 10 Platform by:\n*  Global Sales: PS2.\n*  Na Sales: X360.\n*  Eu Sales: PS2.\n*  Jp Sales: DS.\n*  Other Sales: PS2.\n*  Total Sales: PS2.\n","c33633b1":"### 4. Top 10 Publisher by:\n*  Na Sales: Nintendo.\n*  Eu Sales: Nintendo.\n*  Jp Sales: Nintendo.\n*  Other Sales: Electronics Arts.\n*  Total Sales: Nintendo.","a3443531":"### Top Publishers Releases over years","8e0d6d03":"### 2. Top 10 Genre by:\n*  Global Sales: Action.\n*  Na Sales: Action.\n*  Eu Sales: Action.\n*  Jp Sales: Role-Playing.\n*  Other Sales: Action.\n*  Total Sales: Action.\n","57f3400f":"### 3) Data Visualization\n\nTasks:\n\nMake a report of:\n\n* Top 10 Game by total reveneu worldwide and by Eu, JP, Na regions.\n* Top 10 Genre by total reveneu worldwide and by Eu, JP, Na regions.\n* Top 10 Platform by total reveneu worldwide and by Eu, JP, Na regions.\n* Top 10 Publisher by total reveneu worldwide and by Eu, JP, Na regions.\n* Total reveneu in all Regions.\n* Top Genres over the years.\n* Top Publishers over the years.\n\nMethod: \n\n* Bar plots.\n* Tables.\n* Pie charts.\n\n\n ","f917f3f5":"### Top Genres Releases over years"}}