{"cell_type":{"22548d97":"code","73799c93":"code","c5a3f139":"code","4917c4cc":"code","1c7436ea":"code","0360fecb":"markdown","44fd8e83":"markdown","b582148b":"markdown","9a96bc30":"markdown"},"source":{"22548d97":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_excel('..\/input\/demo-marks\/marks.xlsx')\ndf","73799c93":"x = df['MSE']\ny = df['ESE']\nplt.scatter(x, y)\nplt.show()","c5a3f139":"m = 0\nc = 0\nL = 0.01\ncount = 20000\nn = float(len(x))\n\nfor i in range(count):\n    ybar = m*x + c\n    m = m - (L\/n)*sum(x*(ybar-y))\n    c = c - (L\/n)*sum(ybar-y)\nprint(m, c)","4917c4cc":"plt.scatter(x,y)\nplt.plot(x, ybar, color = 'red')\nplt.show()","1c7436ea":"ymean = np.mean(y)\nr_square = 1- sum((y-ybar)*(y-ybar))\/sum((y-ymean)*(y-ymean))\nr_square","0360fecb":"So, let's start the coding. First, I will read the excel file and then perform the above algorithm.","44fd8e83":"First, we will see the steps of Gradient Descent algorithm","b582148b":"1. Step 1: Initially put m = 0, c = 0, and L = 0.0001 = Learning rate.\n2. Step 2: \n         m = m - (L\/n) sum of all[(y - mx - c)^2]\n         c = c - (L\/n) sum of all[(y - mx - c)^2]","9a96bc30":"# Simple linear regression using Gradient Descent Algorithm"}}