{"cell_type":{"cda301a1":"code","7cfd9312":"code","2e20cebd":"code","34a8a712":"code","378ad880":"code","7e6a9281":"code","5fb09c88":"code","6725b91d":"code","574b7380":"code","2b472618":"code","51c21da6":"code","feea8588":"code","a45748d7":"code","071709aa":"code","75c200b8":"code","1823f45d":"code","5d46e1d3":"code","c4174737":"code","4bf9a64d":"code","3c681aee":"code","d54d6da8":"code","d523229e":"code","91442c8a":"code","f58db491":"code","b2fa25d3":"code","3fd0c886":"code","a8216f23":"code","cb5887d1":"code","dbfd11bd":"code","97ab1ff0":"code","c5900c5c":"code","3b5e7d8b":"code","3ae0a74d":"code","d606f53e":"code","64477bfc":"code","a06d37b6":"code","8894f8a5":"code","9ba23b6c":"code","227d938a":"code","32836795":"code","11000ab5":"code","ca4f805f":"code","b611e351":"markdown","33264440":"markdown"},"source":{"cda301a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7cfd9312":"df_train = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/train.csv\")\ndf_test = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/test.csv\")","2e20cebd":"df_train.isnull().sum()","34a8a712":"df_train.columns","378ad880":"df_test.columns","7e6a9281":"df_train.head(10)","5fb09c88":"from sklearn.preprocessing import LabelEncoder\nlb = LabelEncoder()\ndf_train['bin_3'] = lb.fit_transform(df_train['bin_3'])\ndf_test['bin_3'] = lb.fit_transform(df_test['bin_3'])\n\ndf_train['bin_4'] = lb.fit_transform(df_train['bin_4'])\ndf_test['bin_4'] = lb.fit_transform(df_test['bin_4'])\n\ndf_train['nom_0'] = lb.fit_transform(df_train['nom_0'])\ndf_test['nom_0'] = lb.fit_transform(df_test['nom_0'])\n\ndf_train['nom_1'] = lb.fit_transform(df_train['nom_1'])\ndf_test['nom_1'] = lb.fit_transform(df_test['nom_1'])\n\ndf_train['nom_2'] = lb.fit_transform(df_train['nom_2'])\ndf_test['nom_2'] = lb.fit_transform(df_test['nom_2'])\n\ndf_train['nom_3'] = lb.fit_transform(df_train['nom_3'])\ndf_test['nom_3'] = lb.fit_transform(df_test['nom_3'])\n\ndf_train['nom_4'] = lb.fit_transform(df_train['nom_4'])\ndf_test['nom_4'] = lb.fit_transform(df_test['nom_4'])","6725b91d":"encoding = df_train.groupby(\"nom_5\").size()\nencoding = encoding\/len(df_train)\ndf_train['nom_5'] = df_train.nom_5.map(encoding)","574b7380":"df_train['nom_5']","2b472618":"encoding = df_train.groupby(\"nom_6\").size()\nencoding = encoding\/len(df_train)\ndf_train['nom_6'] = df_train.nom_6.map(encoding)\n\nencoding = df_train.groupby(\"nom_7\").size()\nencoding = encoding\/len(df_train)\ndf_train['nom_7'] = df_train.nom_7.map(encoding)\n\nencoding = df_train.groupby(\"nom_8\").size()\nencoding = encoding\/len(df_train)\ndf_train['nom_8'] = df_train.nom_8.map(encoding)\n\nencoding = df_train.groupby(\"nom_9\").size()\nencoding = encoding\/len(df_train)\ndf_train['nom_9'] = df_train.nom_9.map(encoding)\n\nencoding = df_test.groupby(\"nom_5\").size()\nencoding = encoding\/len(df_test)\ndf_test['nom_5'] = df_test.nom_5.map(encoding)\n\nencoding = df_test.groupby(\"nom_6\").size()\nencoding = encoding\/len(df_test)\ndf_test['nom_6'] = df_test.nom_6.map(encoding)\n\nencoding = df_test.groupby(\"nom_7\").size()\nencoding = encoding\/len(df_test)\ndf_test['nom_7'] = df_test.nom_7.map(encoding)\n\nencoding = df_test.groupby(\"nom_8\").size()\nencoding = encoding\/len(df_test)\ndf_test['nom_8'] = df_test.nom_8.map(encoding)\n\nencoding = df_test.groupby(\"nom_9\").size()\nencoding = encoding\/len(df_test)\ndf_test['nom_9'] = df_test.nom_9.map(encoding)","51c21da6":"df_train.head()","feea8588":"df_train['nom_5'].value_counts()","a45748d7":"df_train['ord_4'].nunique()","071709aa":"df_train['ord_0'] = lb.fit_transform(df_train['ord_0'])\ndf_test['ord_0'] = lb.fit_transform(df_test['ord_0'])","75c200b8":"df_train['ord_1'] = lb.fit_transform(df_train['ord_1'])\ndf_test['ord_1'] = lb.fit_transform(df_test['ord_1'])","1823f45d":"df_train['ord_2'] = lb.fit_transform(df_train['ord_2'])\ndf_test['ord_2'] = lb.fit_transform(df_test['ord_2'])","5d46e1d3":"df_train['ord_3'] = lb.fit_transform(df_train['ord_3'])\ndf_test['ord_3'] = lb.fit_transform(df_test['ord_3'])","c4174737":"encoding = df_train.groupby(\"ord_4\").size()\nencoding = encoding\/len(df_train)\ndf_train['ord_4'] = df_train.ord_4.map(encoding)","4bf9a64d":"encoding = df_train.groupby(\"ord_5\").size()\nencoding = encoding\/len(df_train)\ndf_train['ord_5'] = df_train.ord_5.map(encoding)","3c681aee":"encoding = df_test.groupby(\"ord_4\").size()\nencoding = encoding\/len(df_test)\ndf_test['ord_4'] = df_test.ord_4.map(encoding)","d54d6da8":"encoding = df_test.groupby(\"ord_5\").size()\nencoding = encoding\/len(df_test)\ndf_test['ord_5'] = df_test.ord_5.map(encoding)","d523229e":"df_train['day'] = lb.fit_transform(df_train['day'])\ndf_test['day'] = lb.fit_transform(df_test['day'])","91442c8a":"df_train['month'] = lb.fit_transform(df_train['month'])\ndf_test['month'] = lb.fit_transform(df_test['month'])","f58db491":"X = df_train","b2fa25d3":"X","3fd0c886":"y = X.target","a8216f23":"X.drop(\"target\",axis = 1, inplace = True)","cb5887d1":"from sklearn.ensemble import RandomForestClassifier\ngbc = RandomForestClassifier()\ngbc.fit(X,y)","dbfd11bd":"X_test = df_test","97ab1ff0":"X_test","c5900c5c":"pred = dt.predict(X_test)","3b5e7d8b":"pred","3ae0a74d":"pred.shape","d606f53e":"sample_submission = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/sample_submission.csv\")","64477bfc":"sample_submission.drop(\"target\",axis = 1, inplace = True)","a06d37b6":"sample_submission['target'] = pd.DataFrame(pred)","8894f8a5":"sample_submission","9ba23b6c":"sample_submission.head(50)","227d938a":"sample_submission['target'].value_counts()","32836795":"sample_submission.to_csv(\"submission_saturday_XG.csv\",index = False)","11000ab5":"import os\nos.getcwd()","ca4f805f":"sample_submission.info()","b611e351":"**Trying out Frequency Encoding for columns nom5 to nom9**","33264440":"**Label encoding on day and month**"}}