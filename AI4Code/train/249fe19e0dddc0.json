{"cell_type":{"47f1afb3":"code","bfc0bbff":"code","81c8777d":"code","2a13ebdf":"code","f4b75734":"code","5ec36321":"code","c8068cc8":"code","d14beabe":"code","33fda24a":"code","4d6d3ce5":"code","b4911491":"code","2dc5d29c":"code","afa890e7":"markdown","3c24dfb9":"markdown","da8212db":"markdown","793071ce":"markdown"},"source":{"47f1afb3":"import pandas as pd\nimport numpy as np\n%matplotlib inline","bfc0bbff":"airline = pd.read_csv('..\/input\/international-airline-passengers\/international-airline-passengers.csv',index_col='Month',parse_dates=True)","81c8777d":"airline.dropna(inplace=True)","2a13ebdf":"airline.head()","f4b75734":"airline.columns","5ec36321":"airline.columns=['Thousands of Passengers']","c8068cc8":"airline['6-month-SMA'] = airline['Thousands of Passengers'].rolling(window=6).mean()\nairline['12-month-SMA'] = airline['Thousands of Passengers'].rolling(window=12).mean()","d14beabe":"airline.head(15)","33fda24a":"airline.plot(figsize=(12,5));","4d6d3ce5":"airline['EWMA12'] = airline['Thousands of Passengers'].ewm(span=12,adjust=False).mean()","b4911491":"airline[['Thousands of Passengers','EWMA12']].plot(figsize=(12,5));","2dc5d29c":"airline[['Thousands of Passengers','EWMA12','12-month-SMA']].plot(figsize=(12,8)).autoscale(axis='x',tight=True);","afa890e7":"## Simple Exponential Smoothing\nThe above example employed <em>Simple Exponential Smoothing<\/em> with one smoothing factor <strong>\u03b1<\/strong>. Unfortunately, this technique does a poor job of forecasting when there is a trend in the data as seen above.","3c24dfb9":" ## Simple Moving Average","da8212db":"* <strong>Span<\/strong> corresponds to what is commonly called an \u201cN-day EW moving average\u201d.\n* <strong>Center of mass<\/strong> has a more physical interpretation and can be thought of in terms of span: $c=(s\u22121)\/2$\n* <strong>Half-life<\/strong> is the period of time for the exponential weight to reduce to one half.\n* <strong>Alpha<\/strong> specifies the smoothing factor directly.\n\nWe have to pass precisely one of the above into the <tt>.ewm()<\/tt> function. For our data we'll use <tt>span=12<\/tt>.","793071ce":"## Comparing SMA to EWMA"}}