{"cell_type":{"866d0731":"code","fe058a79":"code","0fbc415d":"code","86e8ea7a":"code","b36b6f45":"code","81811b3e":"code","1d79372c":"code","bfda2ca7":"code","9a8835aa":"code","f482dd37":"code","c159f471":"code","84a1eb55":"code","70365659":"code","95a0b477":"code","ce86f0a8":"code","6ac46fe1":"code","98e13c12":"code","4beaaf07":"code","1ab36342":"code","e2db1cfb":"code","e3c2a8f6":"code","001ddc16":"code","44c4729d":"code","948b3347":"code","b59ff5fc":"code","928a9a4b":"code","51b60bb2":"code","b2697b93":"code","53c5c3e3":"code","e358c6c0":"code","736e8562":"code","5224e22d":"code","7955e53c":"code","eb1f922c":"code","0fc815c0":"code","3ee3ab81":"code","f76e09f5":"code","80a42ada":"code","2cc9eb05":"code","430caafb":"code","57adeae9":"code","d98a3fc4":"code","877c9c2b":"code","3e933289":"code","9a9e0640":"code","b2b25e3d":"code","579fb999":"code","0961a385":"code","be991950":"code","47d1e6de":"code","c351a3cd":"code","9913ef86":"code","fdc61f9e":"code","dc98af5a":"code","d116c1bf":"code","3231edc0":"code","6f5f458a":"code","27fbb252":"code","f90e4578":"code","6420a398":"markdown","b54c9221":"markdown","a5626794":"markdown","8b19537a":"markdown","87062697":"markdown","beae5ade":"markdown","8a200905":"markdown","dcc12851":"markdown","40886f48":"markdown","834cd710":"markdown","b553d337":"markdown","a491ad33":"markdown","92229b68":"markdown","d5ba36c1":"markdown","84df7473":"markdown","c8123773":"markdown","e936a764":"markdown","9f508170":"markdown","7b67609f":"markdown","766e6aa7":"markdown","30759afc":"markdown","94540141":"markdown","bc9d4879":"markdown","270bbd7e":"markdown","e6761c73":"markdown","63829cb4":"markdown","0996ddc6":"markdown","ee03ec4b":"markdown","8ba73fb6":"markdown","3243b3c6":"markdown","4ba26ddd":"markdown","56c556df":"markdown","4accc919":"markdown","78d7fc85":"markdown","06051f06":"markdown","79e28abb":"markdown","04541d65":"markdown","6d0787ea":"markdown","cf0265b9":"markdown","19174dd0":"markdown","b1b7174b":"markdown","c293beec":"markdown","c25f6b2f":"markdown","4ba1aa17":"markdown","5301c5a1":"markdown","80e742c1":"markdown","33a2234e":"markdown","eb0b3bed":"markdown","5e6f9de5":"markdown","7195980c":"markdown","485fa285":"markdown","1aa3aa89":"markdown","d6a7f30d":"markdown","ea3c2c47":"markdown","8b9cc953":"markdown","af936257":"markdown","92340096":"markdown","56aff49f":"markdown","5942e4ef":"markdown","880c6c79":"markdown","84c977c1":"markdown","f21eba31":"markdown","4fb30300":"markdown","70989b63":"markdown","fb5e826a":"markdown","ba8c3af8":"markdown","ac621ea5":"markdown","56aa1d04":"markdown","aa124e94":"markdown","c706d8f4":"markdown","e2dff630":"markdown","0870b7b7":"markdown"},"source":{"866d0731":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\n!pip install xlrd","fe058a79":"data = pd.read_excel(\"..\/input\/superstoredataset\/superstore.xls\")","0fbc415d":"data.isnull().sum()","86e8ea7a":"data.describe()","b36b6f45":"data.head()","81811b3e":"data['Order Date'] = pd.to_datetime(data['Order Date'], format='%d\/%m\/%Y')","1d79372c":"data.sort_values(by=['Order Date'], inplace=True, ascending=True)","bfda2ca7":"data.set_index(\"Order Date\", inplace = True)","9a8835aa":"data.drop('Row ID',axis = 1, inplace = True)","f482dd37":"data.head()","c159f471":"Furniture = data[data.Category == 'Furniture']\nFurniture.head()","84a1eb55":"Office = data[data.Category == 'Office Supplies']\nOffice.head()","70365659":"Furniture = Furniture.resample('MS').sum()\nOffice = Office.resample('MS').sum()","95a0b477":"Furniture.head()","ce86f0a8":"del Furniture['Postal Code']\ndel Office['Postal Code']","6ac46fe1":"Furniture.head()","98e13c12":"plt.plot(Furniture.index, Furniture.Sales, figure=figure(figsize=(20, 10)))\nplt.legend(('Sales'))\nplt.title(\"Furniture Sales\")\nplt.show()","4beaaf07":"plt.plot(Office.index, Office.Sales, figure=figure(figsize=(20, 10)))\nplt.legend(('Sales'))\nplt.title(\"Office Supllies Sales\")\nplt.show()","1ab36342":"plt.plot(Furniture.index, Furniture.Sales,Office.Sales, figure=figure(figsize=(20, 10)))\nplt.legend(('Furniture Sales', 'Office Supplies Sales'))\nplt.title(\"Sales\")\nplt.show()","e2db1cfb":"from pandas.tseries.offsets import DateOffset\n\n#get last month in the data - increase it by 1 month, add it to the data\n\n#for furniture dataset\nFurniture = Furniture.append(pd.Series(name = Furniture.index[-1]+DateOffset(months=1), dtype='float64'))\n\n#for office dataset\nOffice = Office.append(pd.Series(name = Office.index[-1]+DateOffset(months=1), dtype='float64'))","e3c2a8f6":"Furniture.tail()","001ddc16":"Furniture['MA4'] = Furniture.Sales.rolling(window=4).mean()","44c4729d":"Furniture.MA4 = Furniture.MA4.shift(1)","948b3347":"Furniture.head()","b59ff5fc":"Furniture.tail()","928a9a4b":"plt.plot(Furniture.index,Furniture.Sales,Furniture.MA4,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Furniture Sales Prediction Using 4 Periods Moving Average\")\nplt.show()","51b60bb2":"Office['MA4'] = Office.Sales.rolling(window=4).mean()","b2697b93":"Office.MA4 = Office.MA4.shift(1)","53c5c3e3":"Office.head()","e358c6c0":"Office.tail()","736e8562":"plt.plot(Office.index,Office.Sales,Office.MA4,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Office Supplies Sales Prediction Using 4 Periods Moving Average\")\nplt.show()","5224e22d":"Furniture['ES1'] = np.nan\nFurniture['ES5'] = np.nan","7955e53c":"Furniture['ES1']= Furniture.Sales.ewm(alpha=0.1, adjust=False).mean()\nFurniture['ES5']= Furniture.Sales.ewm(alpha=0.5, adjust=False).mean()","eb1f922c":"Furniture.ES1 = Furniture.ES1.shift(1)\nFurniture.ES5 = Furniture.ES5.shift(1)","0fc815c0":"Furniture.ES1.iat[0] = Furniture.Sales.iat[0]\nFurniture.ES5.iat[0] = Furniture.Sales.iat[0]","3ee3ab81":"Furniture.head()","f76e09f5":"Furniture.tail()","80a42ada":"plt.plot(Furniture.index,Furniture.Sales,Furniture.ES1,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Furniture Sales Prediction Using Exponential Smoothing with Alpha = 0.1\")\nplt.show()","2cc9eb05":"plt.plot(Furniture.index,Furniture.Sales,Furniture.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Furniture Sales Prediction Using Exponential Smoothing with Alpha = 0.5\")\nplt.show()","430caafb":"plt.plot(Furniture.index,Furniture.Sales,Furniture.index,Furniture.ES1,Furniture.index,Furniture.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted with Alpha = 0.1,', 'Predicted with Alpha = 0.5'))\nplt.title(\"Furniture Sales Prediction Using Exponential Smoothing\")\nplt.show()","57adeae9":"Office['ES1'] = np.nan\nOffice['ES5'] = np.nan","d98a3fc4":"Office['ES1']= Office.Sales.ewm(alpha=0.1, adjust=False).mean()\nOffice['ES5']= Office.Sales.ewm(alpha=0.5, adjust=False).mean()","877c9c2b":"Office.ES1 = Office.ES1.shift(1)\nOffice.ES5 = Office.ES5.shift(1)","3e933289":"Office.ES1.iat[0] = Office.Sales.iat[0]\nOffice.ES5.iat[0] = Office.Sales.iat[0]","9a9e0640":"Office.head()","b2b25e3d":"Office.tail()","579fb999":"plt.plot(Office.index,Office.Sales,Office.ES1,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Office Supplies Sales Prediction Using Exponential Smoothing with Alpha = 0.1\")\nplt.show()","0961a385":"plt.plot(Office.index,Office.Sales,Office.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Office Supplies Sales Prediction Using Exponential Smoothing with Alpha = 0.5\")\nplt.show()","be991950":"plt.plot(Office.index,Office.Sales,Office.index,Office.ES1,Office.index,Office.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted with Alpha = 0.1,', 'Predicted with Alpha = 0.5'))\nplt.title(\"Office Supplies Sales Prediction Using Exponential Smoothing\")\nplt.show()","47d1e6de":"print(\"Next Months Forecasts for Furniture Sales Will be :\")\nprint(\"    - Using 4 Periods Moving Average = \", Furniture.MA4.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.1 = \", Furniture.ES1.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.5 = \", Furniture.ES5.values[-1])","c351a3cd":"print(\"Next Months Forecasts for Office Supplies Sales Will be :\")\nprint(\"    - Using 4 Periods Moving Average = \", Office.MA4.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.1 = \", Office.ES1.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.5 = \", Office.ES5.values[-1])","9913ef86":"print(\"Mean Squared Error for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MSE = \", ((Furniture.MA4 - Furniture.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MSE = \", ((Furniture.ES1 - Furniture.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MSE = \", ((Furniture.ES5 - Furniture.Sales)**2).mean())","fdc61f9e":"print(\"Mean Absolute Percentage Error for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAPE = \", (abs(Furniture.MA4 - Furniture.Sales)\/Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAPE = \", (abs(Furniture.ES1 - Furniture.Sales)\/Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAPE = \", (abs(Furniture.ES5 - Furniture.Sales)\/Furniture.Sales).mean())","dc98af5a":"print(\"Least Absolute Deviations for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average LAD = \", abs(Furniture.MA4 - Furniture.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.1 LAD = \", abs(Furniture.ES1 - Furniture.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.5 LAD = \", abs(Furniture.ES5 - Furniture.Sales).max())","d116c1bf":"print(\"Mean Absolute Deviations for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAD = \", abs(Furniture.MA4 - Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAD = \", abs(Furniture.ES1 - Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAD = \", abs(Furniture.ES5 - Furniture.Sales).mean())","3231edc0":"print(\"Mean Squared Error for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MSE = \", ((Office.MA4 - Office.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MSE = \", ((Office.ES1 - Office.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MSE = \", ((Office.ES5 - Office.Sales)**2).mean())","6f5f458a":"print(\"Mean Absolute Percentage Error for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAPE = \", (abs(Office.MA4 - Office.Sales)\/Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAPE = \", (abs(Office.ES1 - Office.Sales)\/Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAPE = \", (abs(Office.ES5 - Office.Sales)\/Office.Sales).mean())","27fbb252":"print(\"Least Absolute Deviations for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average LAD = \", abs(Office.MA4 - Office.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.1 LAD = \", abs(Office.ES1 - Office.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.5 LAD = \", abs(Office.ES5 - Office.Sales).max())","f90e4578":"print(\"Mean Absolute Deviations for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAD = \", abs(Office.MA4 - Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAD = \", abs(Office.ES1 - Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAD = \", abs(Office.ES5 - Office.Sales).mean())","6420a398":"It seems that we need to change the index of our dataset to 'Order Date' because it'll make it easier in forecasting","b54c9221":"Alpha = 0.5 seems to give better results with predictions close to the real data","a5626794":"First we'll create 2 empty columns to store the predicted values\n- ES1 = predicted value for the exponential smoothing when alpha = 0.1\n- ES5 = predicted value for the exponential smoothing when alpha = 0.5","8b19537a":"We'll use a rolling window of 4, calculate the mean, store in the newly created column","87062697":"Now let's take a look again at our data","beae5ade":"First we'll import the necessary libraries","8a200905":"Let's see both of them compared to each other","dcc12851":"### Mean Absolute Deviations (MAD)","40886f48":"Let's take a look again","834cd710":"Now let's calculate the values using the EWM function","b553d337":"**In this part we're going to take a look at Furniture sales and also Office Supplies sales**","a491ad33":"to do that we'll first convert that column from a String type to a Datetime type, so it can be sorted properly","92229b68":"We can see that everything went well except one small problem, Postal Codes got summed, that happened because they are numbers, and we obviously don't need that, so let's drop the Postal Code column from both Furniture and Office Supplies data","d5ba36c1":"it looks clearly that Exponential Smoothing with Alpha = 0.5 gives better results compared to Alpha = 0.1","84df7473":"We'll be using the average of the 4 previous months as the prediction for the current month","c8123773":"Alpha = 0.5 seems to give better results with predictions close to the real data","e936a764":"**In this part we're going to predict the sales using 3 different ways**\n- 4 Period Moving Average\n- Exponential Smoothing Using alpha = 0.1\n- Exponential Smoothing Using alpha = 0.5\n","9f508170":"# Forecasts Results Comparison","7b67609f":"Let's see the 2 together with the real data","766e6aa7":"### Mean Absolute Percentage Error (MAPE)","30759afc":"### Mean Squred Error (MSE)","94540141":"First lets create an empty record for month next to the last of our dataset, becuase we're going to predict that month's sales","bc9d4879":"### Least Absolute Deviations (LAD)","270bbd7e":"We'll set the first months prediction the same as the real value (it's called initial value in the exponential smoothing)","e6761c73":"### Now we'll do the exact same with Office Supplies Sales data","63829cb4":"Let's see the description of the dataset to check for some statistics ","0996ddc6":"Now we'll read the dataset","ee03ec4b":"It seems like there are no missing values in our dataset, great","8ba73fb6":"it looks clearly that Exponential Smoothing with Alpha = 0.5 gives better results compared to Alpha = 0.1","3243b3c6":"Now let's take a look at our new monthly data","4ba26ddd":"The predicted data seems alot far from the real one","56c556df":"Exponential smoothing is a rule of thumb technique for smoothing time series data using the exponential window function. Whereas in the simple moving average the past observations are weighted equally, exponential functions are used to assign exponentially decreasing weights over time.","4accc919":"## Next Month Forecast (For All Next Months)","78d7fc85":"## 4 Period Moving Average","06051f06":"Now let's take a look at the data with the newly created 2 columns","79e28abb":"Now we sort it in ascending order","04541d65":"In statistics, a moving average is a calculation used to analyze data points by creating a series of averages of different subsets of the full data set.","6d0787ea":"Let's extract Furniture Sales to a new dataframe and take a look at it","cf0265b9":"After doing these modifications we'll notice that the 'Row ID' column became of no use, so let's drop it","19174dd0":"### Mean Absolute Deviations (MAD)","b1b7174b":"Let's visualize the data of Furniture Sales by plotting the sales vs time","c293beec":"# Data Cleaning & Preprocessing","c25f6b2f":"## Visualizations","4ba1aa17":"And then we set the 'Order Date' column as an index as we said","5301c5a1":"And the same for Office Supplies Sales","80e742c1":"## Furniture Forecast Results","33a2234e":"### Least Absolute Deviations (LAD)","eb0b3bed":"## Timestap","5e6f9de5":"Let's plot these predictions and compare them with actual values","7195980c":"Let's plot ES5 vs the real data and see how it looks","485fa285":"Let's plot ES1 vs the real data and see how it looks","1aa3aa89":"Let's visualize the data of Office Supplies Sales also","d6a7f30d":"# Data Analysis","ea3c2c47":"Now we'll shift the moving average column because each 4 months predict the next one which is the 5th not the 4th which is used in averaging","8b9cc953":"## Exponential Smoothing","af936257":"Let's check for that new row","92340096":"Looks like our data has a Seasonal Pattern","56aff49f":"Let's take a look at the data after generating the MA4 column","5942e4ef":"### Let's start with the Furniture Sales data","880c6c79":"# Forecasting","84c977c1":"### Let's start with Furniture Sales data","f21eba31":"Let's check the dataset for any missing values","4fb30300":"But first we need to sort our data based on the 'Order Date' because it seems to be not sorted","70989b63":"The predicted data seems alot far from the real one","fb5e826a":"We'll apply exponential smoothing using different alpha values\n- alpha = 0.1\n- alpha = 0.5","ba8c3af8":"## Office Supplies Forecast Results","ac621ea5":"Now we'll sum the sales of each month, and use the start of each month as the timestamp","56aa1d04":"### Mean Squred Error (MSE)","aa124e94":"Everything looks normal, let's take a look at the data itself","c706d8f4":"### Mean Absolute Percentage Error (MAPE)","e2dff630":"### Now we'll do the exact same thing with Office Supplies Sales data","0870b7b7":"Now we'll shift the 2 columns each months predict the next one not itself"}}