{"cell_type":{"0b7fd06e":"code","a8fe2f2d":"code","c444478e":"code","be83fca5":"code","6314da32":"code","6741dc95":"code","e8055cb5":"code","774dd2c5":"code","6af36d9b":"code","42f8f602":"code","8da775f1":"code","f5ba0740":"code","3063c919":"code","eee76734":"code","fe1e605c":"code","56523a30":"code","f43b3450":"code","13d63462":"code","3de142d5":"code","f201873e":"code","cc7f9ca7":"code","5c65c79b":"code","f54da5ad":"code","ac0b3edf":"code","487d1de0":"code","a814f276":"code","22121ea8":"code","ffded763":"code","5e11b5ef":"code","7b9efaef":"code","8c43b852":"code","4f1d0d64":"code","21e52854":"code","0abe509c":"code","8ae619c2":"code","7e3a1632":"code","bd0aa191":"code","9edca677":"code","6e8d4de1":"code","0dde6c23":"code","0464e125":"code","fc67955f":"markdown","13b79fc5":"markdown","7acee9e3":"markdown","3e10991d":"markdown","ab314d1c":"markdown","47be0c04":"markdown","5f14ce35":"markdown"},"source":{"0b7fd06e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nimport numpy as np\nimport pandas as pd \n\nimport seaborn as sns\nfrom sklearn.preprocessing import scale \nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import roc_auc_score,roc_curve\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a8fe2f2d":"data = pd.read_csv(\"\/kaggle\/input\/diabetes\/diabetes.csv\")","c444478e":"data.head()","be83fca5":"data.info()","6314da32":"data.nunique()   #Unique degerler","6741dc95":"data.describe().T","e8055cb5":"print(\"satir ve sutun = \", data.shape)\nprint(\"Boyut sayisi = \",data.ndim)\nprint(\"eleman sayisi = \",data.size)    # neden farkli bilmiyorum? ","774dd2c5":"data.corr()","6af36d9b":"# Heatmap correlation cizimi\ndata.corr()\n\n#correlation map\n# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\nf,ax = plt.subplots(figsize=(10, 6))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"yellow\", fmt= '.1f',ax=ax) #ftm noktadan sonra kac hane olacak onu verir\nplt.show()","42f8f602":"#kac adet 1 ve 0 var\n\nsns.countplot(data.Outcome)\n#sns.countplot(kill.manner_of_death)\nplt.title(\"Outcome\",color = 'blue',fontsize=15)\nplt.show()","8da775f1":"data.isnull().sum()   # eksik gozlem var mi? ","f5ba0740":"import missingno as msno\nmsno.matrix(data)\nplt.show()","3063c919":"x = data.drop([\"Outcome\"], axis=1)  #\"Outcome\" disindaki sutunlar bagimsiz degisken_\ny = data[\"Outcome\"]                 #\"Outcome\" ise bagimli degiskendir,   ","eee76734":"#x = (x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data)).values","fe1e605c":"x.describe().T","56523a30":"# Test Train \nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2,random_state=42)","f43b3450":"from sklearn.linear_model import LogisticRegression\nloj_reg = LogisticRegression(penalty='l1').fit(x_train,y_train)\nloj_reg\n\n#Not penalty= default olursa skor dusuyor.","13d63462":"#?loj_reg","3de142d5":"print(\"b0 = \",loj_reg.intercept_)   # b0 yani sabit degerimizi aldik\nprint(\"Coefs = \",loj_reg.coef_)        # bagimsiz degiskenlerin katsayi degerlerini aldik","f201873e":"y_pred = loj_reg.predict(x_test)     # model uzerinden tahmin etme yaptik","cc7f9ca7":"loj_reg.predict_proba(x_train)[0:10]  #ikili cikti uretir, 0 ve 1 oranlarini verir.\n\n# sadece 1 ve sifir olarak donmesini degilde, bunlarin olasilik degerlerini ogrenmek istedik.","5c65c79b":"log_score = accuracy_score(y_test, y_pred)\nprint(\"Logistic_reg_class_SCORE = \",log_score)       \n# modeldeki gercek 0-1 ile tahmindeki 0-1 oranlarini karsilastirip, dogru siniflandirma oranimizdir.","f54da5ad":"from sklearn.ensemble import RandomForestClassifier","ac0b3edf":"rf_model = RandomForestClassifier(n_estimators=22).fit(x_train, y_train)\nrf_model\n\n#n_estimators=10 defaultur. 22 da daha yuksek skor aldim","487d1de0":"y_pred = rf_model.predict(x_test)\nrf_score = accuracy_score(y_test, y_pred)\nprint(\"random_forest_class_SCORE = \",rf_score)       \n# modeldeki gercek 0-1 ile tahmindeki 0-1 oranlarini karsilastirip, dogru siniflandirma oranimizdir.","a814f276":"Importance = pd.DataFrame({\"Importance\": rf_model.feature_importances_*100},\n                         index = x_train.columns)\nImportance.sort_values(by = \"Importance\", \n                       axis = 0, \n                       ascending = True).plot(kind =\"barh\", color = \"g\")\n\nplt.xlabel(\"De\u011fi\u015fken \u00d6nem D\u00fczeyleri\")","22121ea8":"knn = KNeighborsClassifier( n_neighbors=4).fit(x_train, y_train)\nknn","ffded763":"y_pred = knn.predict(x_test)\nknn_score = accuracy_score(y_test, y_pred)\nprint(\"KNN_class_SCORE = \", knn_score)       \n# modeldeki gercek 0-1 ile tahmindeki 0-1 oranlarini karsilastirip, dogru siniflandirma oranimizdir.","5e11b5ef":"y_probs = knn.predict_proba(x_test)     # tekrardan 0 ve 1'in olasilik degerlerini bu degiskene atadik.\ny_probs = y_probs[:,1] \ny_pred = [1 if i > 0.75 else 0 for i in y_probs] \n\n\n# if ve for donguleri ile \"1\" in 0.5'den buyukse 1 diye siniflandirmasini, degilse \"0\" diye siniflandirmasini istedik. \n# ..ve tekrar y_pred seklinde yeni tahminlerimizi atadik\n","7b9efaef":"y_pred = [1 if i > 0.75 else 0 for i in y_probs] ","8c43b852":"accuracy_score(y_test, y_pred)    # degistirilen diagnosisden sonraki skorumuz","4f1d0d64":"svm_model = SVC(C=5, degree=7, kernel='linear' ).fit(x_train, y_train)\nsvm_model\n\n# C=5, degree=7, kernel='linear'yaptim. def degil","21e52854":"y_pred = svm_model.predict(x_test)\nsvm_score = accuracy_score(y_test, y_pred)\nprint(\"SVM_class_SCORE = \", svm_score)       \n# modeldeki gercek 0-1 ile tahmindeki 0-1 oranlarini karsilastirip, dogru siniflandirma oranimizdir.","0abe509c":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb_model = nb.fit(x_train, y_train)\nnb_model","8ae619c2":"nb_model.predict(x_test)[:10]","7e3a1632":"nb_model.predict_proba(x_test)[0:10]  \n\n# ! Tahmini olasilik degerleridir. Ilk sutun \"0\", ikinci sutun \"1\" i ifade eder.","bd0aa191":"y_pred = nb_model.predict(x_test)\nnb_score = accuracy_score(y_test, y_pred)\nprint(\"NB_class_SCORE = \", nb_score)       \n# modeldeki gercek 0-1 ile tahmindeki 0-1 oranlarini karsilastirip, dogru siniflandirma oranimizdir.","9edca677":"cross_val_score(nb_model, x_test, y_test, cv = 20).mean()  \n\n#Dogrulanmis test hatamiz, 20 katmanli cross valide edilmis test hatasi ortalamasidir.","6e8d4de1":"# Model Skorlarinin  Seaborn ile gorsellestirilmesi\n\nindexx = [\"Log\",\"RF\",\"KNN\",\"SVM\",\"NB\"]\nregressions = [log_score,rf_score,knn_score,svm_score,nb_score]\n\nplt.figure(figsize=(8,6))\nsns.barplot(x=indexx,y=regressions)\nplt.xticks()\nplt.title('Model Compare',color = 'orange',fontsize=20)\nplt.show()","0dde6c23":"## conda install -c plotly plotly chart-studio","0464e125":"from plotly.plotly import iplot\nimport plotly.graph_objs as go\nimport chart_studio.plotly as py\n\n\nindexx = [\"Log\",\"RF\",\"KNN\",\"SVM\",\"NB\"]\nregressions = [log_score,rf_score,knn_score,svm_score,nb_score]\n# creating trace1\ntrace1 =go.Scatter(\n                    x = indexx,\n                    y = regressions,\n                    mode = \"lines+markers+text\",\n                    name = \"#\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= indexx) #uzerine geldiginde ne gorunsun.\n\ndata = [trace1]  # olusturdugumuz veriler listeye atadik\n\n# konumlandirmayi yapar ve isimlendirir.(layout)\nlayout = dict(title = 'Model Compare',\n              xaxis= dict(title= 'Models',ticklen= 15,zeroline= True),\n              yaxis= dict(title= 'Scores',ticklen= 15,zeroline= True)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","fc67955f":" # 3)KNN Model\n Tahminler gozlem benzerligine gore yapilir\n\nk = komsu sayisini belirler\nBilinmeyen noktalar ile diger tum noktalar arasindaki mesafeyi hesaplar\nbelirlenen k ile kendisine en yakin k kadar gozlemi secer.","13b79fc5":"n_estimators=10 >> fit edilecek agac sayisidir, yani 10 adet agac tahmini olusturulacak,\nmax_features='auto'> > Bolunme islemlerinde goz onunde bulundurulacak olan maximum degisken sayisini verir,\nmin_samples_split=2 > > Bu bir node bolunmeden once minimum gozlem sayisini ifade eder,\nmin_samples_leaf=1 > > leaf node ' taki minimum gozlem sayisini ifade eder,","7acee9e3":"# 4) SVM - Support Vector Model\n\nAmac, iki sinif arasrindaki ayrimin optimum olmasini saglayacak hiper-duzlemi bulmaktir.\n\nyani 1 ve 0 arasindaki mesafenin maximum tutmaya calisir. ayrimin belirgin olmasini saglamaya calisir.","3e10991d":"En yuksek skoru veren model random foresttir","ab314d1c":"# 1) Logistic Regression","47be0c04":"# 5) Gaussian Naive Bayes Model\nOlasilik temelli bir modelleme teknigidir. Amac belirli bir ornegin her bir sinifa ait olma olasiliginin kosullu olasilik temelli hesaplanmasidir. Cok sinifli degiskenlerde bu model daha iyi sonuclar verebilir. cok daha fazla katogorik degisken varsa kullanilmasi uygun olabilir","5f14ce35":" # 2) Random Forest\n*  Temeli birden cok karar agacinin urettigi tahminlerin bir araya getirilerek degerlendirilmesine dayanir. Gozlemlerde ve degiskenlerde rastsallik saglar, "}}