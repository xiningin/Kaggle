{"cell_type":{"98889d97":"code","e700e966":"code","60f01634":"code","4ab927ae":"code","f904b3ab":"code","19ace81e":"code","47b5578b":"code","77934455":"code","bae137a9":"code","90f75c77":"code","30105146":"code","ec74a891":"code","d21dd357":"code","52be2ecb":"code","654e1ed3":"code","11511a46":"code","f38256e8":"code","b3843fa0":"code","b38492ed":"code","986172c9":"markdown"},"source":{"98889d97":"import numpy as np \nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nimport pandas as pd\nfrom pandas import DataFrame\nfrom pandas import Series\nfrom pandas import concat\nfrom pandas import read_csv\nfrom pandas import datetime\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom math import sqrt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os, sys\nfrom datetime import datetime\nfrom keras.models import Sequential\nfrom keras.layers import LSTM,Dense,Dropout\nfrom keras.models import load_model, Model\nfrom fbprophet import Prophet","e700e966":"df = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv', parse_dates = ['date'], infer_datetime_format = True, dayfirst = True)\ndf.tail()","60f01634":"df.fillna(0,inplace = True)\ndf['day'] = df['date'].dt.day\ndf['month'] = df['date'].dt.month\ndf['year'] = df['date'].dt.year\ndf['week'] = df['date'].dt.week","4ab927ae":"plt.rcParams['figure.figsize'] = (16, 7)\nsns.countplot(df['year'], palette = 'dark')\nplt.title('En yo\u011fun y\u0131l', fontsize = 30)\nplt.xlabel('Y\u0131l', fontsize = 10)\nplt.ylabel('Yo\u011funluk', fontsize = 10)\n\nplt.show()","f904b3ab":"plt.rcParams['figure.figsize'] = (15, 7)\nsns.countplot(df['month'], palette = 'bright')\nplt.title('En Yo\u011fun Aylar', fontsize = 30)\nplt.xlabel('Ay', fontsize = 15)\nplt.ylabel('Yo\u011funluk', fontsize = 15)\nplt.show()","19ace81e":"items = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\nitem_categories = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nsales_train = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv',parse_dates = ['date'], infer_datetime_format = True, dayfirst = True)\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')","47b5578b":"train = sales_train.join(items, on='item_id', rsuffix='_').join(shops, on='shop_id', rsuffix='_').join(item_categories, on='item_category_id', rsuffix='_').drop(['item_id_', 'shop_id_', 'item_category_id_'], axis=1)","77934455":"train","bae137a9":"test_shop_ids = test['shop_id'].unique()\ntest_item_ids = test['item_id'].unique()\nlk_train = train[train['shop_id'].isin(test_shop_ids)]\nlk_train = lk_train[lk_train['item_id'].isin(test_item_ids)]\nprint(lk_train.shape)","90f75c77":"lk_train","30105146":"sales_train = sales_train.query('item_price > 0')\nsales_train = sales_train[sales_train['shop_id'].isin(test['shop_id'].unique())]\nsales_train = sales_train[sales_train['item_id'].isin(test['item_id'].unique())]\nsales_train = sales_train.query('item_cnt_day >= 0')\nsales_train.shape","ec74a891":"monthly_sales=sales_train.groupby([\"date_block_num\",\"shop_id\",\"item_id\"])[\"date_block_num\",\"date\",\"item_price\",\"item_cnt_day\"].agg({\"date_block_num\":'mean',\"date\":[\"min\",'max'],\"item_price\":\"mean\",\"item_cnt_day\":\"sum\"})\nmonthly_sales.head()","d21dd357":"sales_data_flat = monthly_sales.item_cnt_day.apply(list).reset_index()\nsales_data_flat = pd.merge(test,sales_data_flat,on = ['item_id','shop_id'],how = 'left')\nsales_data_flat.fillna(0,inplace = True)\nsales_data_flat.drop(['shop_id','item_id'],inplace = True, axis = 1)\nsales_data_flat.head(10)","52be2ecb":"sales = sales_data_flat.pivot_table(index='ID', columns='date_block_num',fill_value = 0,aggfunc='sum' )\nsales.head(10)","654e1ed3":"X_train = np.expand_dims(sales.values[:,:-1],axis = 2)\ny_train = sales.values[:,-1:]\nX_test = np.expand_dims(sales.values[:,1:],axis = 2)","11511a46":"model = Sequential()\nmodel.add(LSTM(units = 15,input_shape = (33,1)))\nmodel.add(Dropout(0.01, input_shape=(60,)))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.compile(loss = 'mse',optimizer = 'adam', metrics=['mse', 'mae'])\nmodel.fit(X_train,y_train,batch_size = len(X_train),epochs = 10)","f38256e8":"output = model.predict(X_test)\nresult = pd.DataFrame({'ID':test['ID'],'item_cnt_month':output.ravel()})","b3843fa0":"group=sales_train.groupby([\"date_block_num\"])[\"item_cnt_day\"].sum()\ngroup.index=pd.date_range(start = '2013-01-01',end='2015-10-01', freq = 'MS')\ngroup=group.reset_index()\ngroup.rename(columns={'index': 'date'}, inplace=True)","b38492ed":"group.columns=['ds','y']\nmodel = Prophet( yearly_seasonality=True) \nmodel.fit(group)\nfuture = model.make_future_dataframe(periods = 10, freq = 'MS')  \npredict = model.predict(future)\nmodel.plot(predict)","986172c9":"160201033 Seda \u00c7elik B\u00fcy\u00fck Veri Final "}}