{"cell_type":{"d86d531f":"code","f559b150":"code","d1c8521f":"code","987b2d70":"code","1c2c3e14":"code","9f2a9349":"code","bf33e6eb":"code","71f88f4c":"code","bc9cb87a":"code","05545ff8":"code","d4358594":"code","065a71a2":"markdown","cb4383f8":"markdown","85aa4a5c":"markdown","48919ef9":"markdown","91c99708":"markdown","39aa4864":"markdown"},"source":{"d86d531f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f559b150":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nplt.rcParams['figure.figsize'] = [12,6]\nplt.rcParams['figure.dpi'] = 70","d1c8521f":"df = pd.read_csv(\"..\/input\/kaggle-dataset-medals\/dataset_medal_total.csv\")\ndf.head()","987b2d70":"array = ['Gold', 'Silver', 'Bronze']\ndfmedals = df.loc[df['Medal'].isin(array)]\ndfmedals['Tags'] = dfmedals['Tags'].map(lambda x: x.strip('[]'))\ndfmedals.head()","1c2c3e14":"dfgold = dfmedals.loc[dfmedals['Medal'] == \"Gold\"]\ndfgold.head()","9f2a9349":"import nltk\n\ntext = dfgold['Title']\ntext = text.to_string()\ntokens = [t for t in text.split()]\nprint(tokens)","bf33e6eb":"from nltk.corpus import stopwords\nsw= stopwords.words('english')\nsw1 = ['Dataset', 'Data', '.', ',', \"'\", 'dataset', '1', 'The', 'data']\nclean_tokens = tokens[:]\nfor token in tokens:\n    if token in sw or token in sw1:\n        \n        clean_tokens.remove(token)\nfreq = nltk.FreqDist(clean_tokens)\nfreq.plot(20, cumulative=False)","71f88f4c":"tagsm = dfmedals['Tags'].str.split(',')\ns = list(tagsm)\ndftagsm = pd.DataFrame(s, columns =['Tag1', 'Tag2', 'Tag3','Tag4','Tag5','Tag6','Tag7','Tag8','Tag9','Tag10','Tag11'])\ndftagsm = dftagsm.drop(['Tag5','Tag6','Tag7','Tag8','Tag9','Tag10','Tag11'], axis = 1)\ndftagsm.head()","bc9cb87a":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\ntext1 = dftagsm['Tag1']\nt = str(text1)\nwordcloud = WordCloud().generate(t)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","05545ff8":"text2 = dftagsm['Tag2']\nt2 = str(text2)\nwordcloud = WordCloud().generate(t2)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","d4358594":"for key,val in freq.items():\n    print(str(key) + ':' + str(val))","065a71a2":"Importing data and some wrangling to parse out tags and gold medals","cb4383f8":"**Showing the most common tags which receive medals**","85aa4a5c":"Starting NLP","48919ef9":"**Showing the topics which receive the most gold medals**","91c99708":"****","39aa4864":"**Kaggle Medal NLP Analysis**\n* Which dataset topics receive the most gold medals?\n* Which Tags receive the most medals?"}}