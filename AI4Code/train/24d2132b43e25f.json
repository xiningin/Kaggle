{"cell_type":{"35c1824b":"code","52d2f659":"code","8fec47fc":"code","b900a18c":"code","f06e7121":"code","e19a3cbb":"code","6cb6ad2e":"code","d869ee62":"code","62a70c0d":"code","e2a205f3":"code","1ab49145":"code","a0ad4a76":"code","a2feebfb":"code","4a86c1e1":"code","45e21737":"markdown","4318f8fa":"markdown","517abc3d":"markdown","556984cd":"markdown"},"source":{"35c1824b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom functools import reduce\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","52d2f659":"M1 = pd.read_csv('..\/input\/gogomaster\/Think1.csv')\nM2 = pd.read_csv('..\/input\/gogomaster\/11111.csv')\nM3 = pd.read_csv('..\/input\/gogomaster\/22222.csv')\nM4 = pd.read_csv('..\/input\/gogomaster\/33333.csv')\nM5 = pd.read_csv('..\/input\/gogomaster\/44444.csv')\nM6 = pd.read_csv('..\/input\/gogomaster\/55555.csv')","8fec47fc":"# Function for merging dataframes efficiently \ndef merge_dataframes(dfs, merge_keys):\n    dfs_merged = reduce(lambda left,right: pd.merge(left, right, on=merge_keys), dfs)\n    return dfs_merged","b900a18c":"dfs = [M1,M2,M3,M4,M5,M6]\nmerge_keys=['SK_ID_CURR']\ndf = merge_dataframes(dfs, merge_keys=merge_keys)","f06e7121":"df.columns = ['SK_ID_CURR','T1','T2','T3','T4','T5','T6']\ndf.head()","e19a3cbb":"pred_prob = 0.7 * df['T3'] + 0.3 * df['T1']\npred_prob.head()","6cb6ad2e":"sub = pd.DataFrame()\nsub['SK_ID_CURR'] = df['SK_ID_CURR']\nsub['target']= pred_prob","d869ee62":"sub.to_csv('ldit.csv', index=False)","62a70c0d":"B_prob = 0.6 * df['T3'] + 0.2 * df['T1'] + 0.2 * df['T2']","e2a205f3":"B_prob.head()","1ab49145":"SUB = pd.DataFrame()\nSUB['SK_ID_CURR'] = df['SK_ID_CURR']\nSUB['TARGET'] = B_prob\nSUB.to_csv('Blendss.csv', index=False)","a0ad4a76":"df_c = df.copy()\ndf_c = df.drop(['SK_ID_CURR'],axis=1)\nCorr_Mat = df_c.corr()\nprint(Corr_Mat) # Correlation matrix of five submission files\nsns.heatmap(Corr_Mat)","a2feebfb":"corr_pred = 0.6 * df['T2'] + 0.05 * df['T3'] + 0.05 * df['T4'] + 0.1 * df['T5'] + 0.2 * df['T1']\ncorr_pred.head()","4a86c1e1":"SuB = pd.DataFrame()\nSuB['SK_ID_CURR'] = df['SK_ID_CURR']\nSuB['TARGET'] = corr_pred\nSuB.to_csv('corr_blend.csv', index=False)","45e21737":"## Blend with one rank weighted submission [0.8 LB]","4318f8fa":"## Blending lowest correlated models","517abc3d":"**This is my first try towards blending. Do upvote if you like it and also if you have any ideas do share in the comment section below.**\n\n**To be Continued**","556984cd":"## Diversified blend [0.799 LB]\n\n\n**The blending ingredients are taken from three different type of models.**"}}