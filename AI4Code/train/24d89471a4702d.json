{"cell_type":{"5a6982c7":"code","18822246":"code","8915c6ba":"code","e46d97e1":"code","204799e0":"code","70c8fc2c":"code","bfd127ba":"code","09f05517":"code","380cd28c":"markdown","163e5105":"markdown","972900b7":"markdown","0da6b256":"markdown","a358ce6f":"markdown","92470028":"markdown","f4a2a4cc":"markdown"},"source":{"5a6982c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import classification_report\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import plot_confusion_matrix\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18822246":"df = pd.read_csv(\"..\/input\/iris\/Iris.csv\")","8915c6ba":"fig = df[df.Species=='Iris-setosa'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\ndf[df.Species=='Iris-versicolor'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\ndf[df.Species=='Iris-virginica'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\" Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","e46d97e1":"X = df.iloc[:,[3,4]]\ny = df.iloc[:, [5]]\nX.columns","204799e0":"labelled_y = y.copy()\nlabel_encoder = LabelEncoder()\nfor col in y.columns:\n    labelled_y[col] = label_encoder.fit_transform(y[col])","70c8fc2c":"X_train, X_test, y_train, y_test = train_test_split(X, labelled_y, test_size=0.2, random_state=42)","bfd127ba":"svm_pipeline = Pipeline([\n    (\"scaler\", StandardScaler()),\n    (\"linear_svc\", LinearSVC(C=1, loss=\"hinge\", )),\n])\nsvm_pipeline.fit(X_train, y_train['Species'])","09f05517":"y_test_hat = svm_pipeline.predict(X_test)\n\nprint(classification_report(y_test, y_test_hat))\nprint(plot_confusion_matrix(svm_pipeline, X_test, y_test, cmap=plt.cm.Blues, display_labels=['Iris-setosa', 'Iris-versicolor', 'Iris-virginica']))","380cd28c":"# Dependent and Independent variables","163e5105":"# Importing dataset","972900b7":"# Visualising","0da6b256":" # Pipeline to perform feature scaling and modelling","a358ce6f":"\n# Splitting training and testing dataset","92470028":"# Label encoding in categorical columns","f4a2a4cc":"# Prediction and accuracy measurement"}}