{"cell_type":{"6db2dbb1":"code","5bd03679":"code","fee14e1d":"code","cec4d07f":"code","e9b6ca81":"code","5974f82d":"code","8f8923f8":"code","d252a775":"code","7bcb073a":"code","a47bfe4e":"code","95760a8d":"code","e4e89566":"code","e2288221":"code","a7537fd3":"markdown","579b4573":"markdown","1733acc0":"markdown","5b72e5c7":"markdown","1187b493":"markdown"},"source":{"6db2dbb1":"#import libraries\nimport pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n\nimport keras\nfrom keras.datasets import mnist\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom keras import backend as K","5bd03679":"(x_train, y_train), (x_test, y_test) = mnist.load_data()","fee14e1d":"train=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest=pd.read_csv('..\/input\/digit-recognizer\/test.csv')","cec4d07f":"print(x_train.shape, y_train.shape)","e9b6ca81":"x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)\nx_test = x_test.reshape(x_test.shape[0], 28, 28, 1)\ninput_shape = (28, 28, 1)","5974f82d":"y_train = keras.utils.to_categorical(y_train, 10)\ny_test = keras.utils.to_categorical(y_test, 10)","8f8923f8":"x_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train \/= 255\nx_test \/= 255\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')","d252a775":"batch_size = 150\nnum_classes = 10\nepochs = 10\n","7bcb073a":"model = Sequential()\nmodel.add(Conv2D(32, kernel_size=(5, 5),activation='relu',input_shape=input_shape))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(num_classes, activation='softmax'))","a47bfe4e":"model.compile(loss=keras.losses.categorical_crossentropy,optimizer=keras.optimizers.Adadelta(),metrics=['accuracy'])","95760a8d":"hist = model.fit(x_train, y_train,batch_size=batch_size,epochs=epochs,verbose=1,validation_data=(x_test, y_test))\nprint(\"The model has successfully trained\")","e4e89566":"score = model.evaluate(x_test, y_test, verbose=0)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])\n","e2288221":"model.save('mnist.h5')\nprint(\"Saving the model as mnist.h5\")","a7537fd3":"Goal: The goal in this kernel is to take an image of a handwritten single digit, and determine what that digit is.","579b4573":"Let's start","1733acc0":"Loading dataset","5b72e5c7":"# Digit Recognition (MNIST)","1187b493":"MNIST is a simple computer vision dataset, consisting of images of handwritten digits and labels."}}