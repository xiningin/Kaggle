{"cell_type":{"1dafbeb0":"code","a06ac7c1":"code","440b690e":"code","f50f706d":"code","d6dd7686":"code","10f41110":"code","5d87ac77":"code","648ba732":"code","98c6be37":"code","d92f449f":"code","ac2c3328":"code","aed9ecb5":"code","33c3bd49":"code","82157a10":"code","9f52acee":"code","cbb63843":"code","b8f90a1b":"code","fdd5ce32":"code","b0fcb869":"code","6b7011d0":"code","877913e9":"code","a0591a3c":"code","21a9b5fa":"code","7807e058":"code","782f766f":"code","408d964c":"code","09f23bd9":"code","b7017cb4":"code","80d466a8":"code","fa65ac75":"code","d49a9021":"code","b8fcf30a":"code","190c6d90":"code","14149889":"markdown","2747d51a":"markdown","15f2d00f":"markdown","59412a61":"markdown","7a31dee0":"markdown","74a9c8c3":"markdown","9d0c4a2b":"markdown","01cdf965":"markdown","9616e23c":"markdown","d002028d":"markdown","1bcd1998":"markdown","a2b138e8":"markdown","9cbb3086":"markdown","358aeeda":"markdown","ee0d9015":"markdown","d76a0879":"markdown","6484db97":"markdown","618d7037":"markdown"},"source":{"1dafbeb0":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRj88RJ0UPE1gIJvcz70eLcYDoWEvP5FDFMawopiDgdvlQPOrTl&s',width=400,height=400)","a06ac7c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","440b690e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTSIr_ijuzCmG13cApqv7xD34XWTNJP6IfgXc8lPXQ_IfQR-kwIqg&s',width=400,height=400)","f50f706d":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsblackcsv\/black.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'black.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","d6dd7686":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRDgmEVUFB0iweTdaG5ugyGRdcn7sP_rbr7ajAi8S1wFV7uf_Ce&s',width=400,height=400)","10f41110":"df.head()","5d87ac77":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTFHrU8ET46L3LNvz9EmunEPo6EB9K3tQdSmIZ2qjnM63VCmPb2lw&s',width=400,height=400)","648ba732":"df.info","98c6be37":"categorical_cols = [cname for cname in df.columns if\n                    df[cname].nunique() < 10 and \n                    df[cname].dtype == \"object\"]\n\n\n# Select numerical columns\nnumerical_cols = [cname for cname in df.columns if \n                df[cname].dtype in ['int64', 'float64']]","d92f449f":"print(numerical_cols)","ac2c3328":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMTEhUTEhMWFRUXGBcYFxgYFxgXFRcaFhgXFxUaGBcaHSggGBolGxUYITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OGhAQGi0dHR0tLS0tLS0tLSstLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLTctLS0tLSsuLf\/AABEIAKcBLQMBIgACEQEDEQH\/xAAcAAACAgMBAQAAAAAAAAAAAAAEBQMGAAIHAQj\/xAA8EAABAwIDBgQGAQMDAgcAAAABAAIRAyEEMUEFElFhcYGRobHwBhMiwdHhMhRC8SNSkmJyBxYkQ6LC0v\/EABoBAAMBAQEBAAAAAAAAAAAAAAECAwAEBQb\/xAAkEQEBAAICAgICAgMAAAAAAAAAAQIREiEDMRNBBFEFYSIycf\/aAAwDAQACEQMRAD8Av+3o+W6coPVcN+L6QDt2Oh9V2rH1paQVyD40pXNrgm648fa9nTnmIEGFmDbL2jmpcSJ7L3ZTZqtB4rqnpH7Xag36QCFLSF46nOPf6WofGSjc8BT2poc\/aQptgySMrnr7hVrau1S6x59p6ZZKXG17H116JNUZK22mKHE197XLJRfLlH0cPKPoYCdFuf6HiR\/0x0XhwpVqbs3itXbO5fdLzpvjiqnDle02EKwv2ch6uBKHyD8ZZ8tGUgtX4chZSEJcruDJqiQtvmKMO4L1rUsOIa7ipBUER5qC6wugICnLgFBWrHgtC4jn6rR9WVmD4ozdAup80bUasZh5VcbpO47LhRJUjMMnVDZ44SjqOzhOSPyF+NWjhuSnp4Q\/7Va6ezwcvT0U7dn8fwh8lH44qLGxa3OM1vvubx859VY8Rs1vvVKsVgg02Gq3MODzBYs5C452N84zFkwxFSRe8ffmk7bGNNAmNJxN+iTIZElMD3+ULtVn0HoiBUImI5KPaQlpPJDG9tlFPYm2yaZc6Ae3FKqYVi+HmHeBHFdHluojg6L8O4X\/AE5iwF\/8Ieqy5TDBPa2lEG9yeKBe4SuHx\/b0MZ0uprSq98Q7Pa5pJAKa03Kv\/HtZ7KHzGf25q09o5T\/FzLbGFAeYBA4IbY9IfObPFOsNtBldhDgA+FDgcKfnAxlwXQ5bD2oxA1inFZtkur0vRJT4k9YyEOxklHVKPgpdnYaXe\/JDZtJcJgjEwjGUL697I40GAfwJP\/c4+hCD3BP0jx3\/AP8AS2xnYinSJ4+K3c0CJlQNYRx\/5P8Ayp962o57xv4pLkpMQteo0aW5j7pdWrDkj8V38j6QlVdm9w+\/580vs3pFVAKFexSPZGR7f5WgW1ot7eNhSU79OK1Y1bNbzjosCVyiKnFPT9dERSw02OnvP9rGLC05QvPlcffdNH4Ut0j35oTFAgW7+8lmoNtOTdHUWwg2CNVMHBNrYTo0oOGpgJrQDeZ7H8JDh6hHLnAB802wlbWfU+lkLNDszp0W8IUjyxsS9rQci4gCTldxAUNHEc\/\/AIE\/\/dR4mrzHcOHgb+iGx0lqkR\/Jp6EFK8ZTGkeqkfUJyI6SSPNsBbPomJLBPJzT6IFqv4ilBUtN5981JiASTZaUaSOw02kyI1UmOZ\/pmeC8p0kTjGzTd0RxLkpOHpSQALlXfYGyajP5tIm90m2PsR9RwLdNeC7d8L4qg2mKFbdLiI3jmm82VvUTw1KrVcbrAJH3Syo66b7fw7WVC1v8dElcoYTp6EnS30ioPiLCfMwz28j6KekiqlPeY4cQqJfT5\/wFF\/zg1o+rej8q24aiW1N1wh3BMNj06ODqVa9US7eO6O6Gf8QsxWIDt0N4Qr725sjX5QKHxNC8JkyncT\/laVWy7S3BAsV+vhDwWlHCFpnevoBl+SrA3D711PQ2eMyJWhrSPCbYdTkVWAjQtvA5jRbO29hjnHay221gRP0hovfOTGQvYKpYyWn+DdZJucvfim1jftPeU+lmdtyh\/aO8\/ZQVNv0\/ZVSNSIimI1Ec166s4izADcW5gCTz\/KHxT9n+bL9H2I22DlJ1gA\/jJLau1hN2nwQMuJG8XWm0xGZtyup8MxodLWA8nfUPstwwg8s6JpbYYf5CyPbhmPbv03SNRqOynwl7OotM5\/THa9kRh8K1joDS0Qfp00stxxs6bllL2Ap4QgwfUH0RlDZTnGwF9fv74olwv7yvKZbOJDp0y5cTPE3ScYfdB0dguykR3jyg+ia0thuDQA0boub3tzhPMBRm5Izt00mU03YHmhlJPRptSHbNznvkemlvdkFjNlb06decR1V1rsb0N8tf3+ksxNL+UaxcZCJPhkOymKgbUw9Kgf8AUJnQAfdKXbQZoCB39VcdsUm7xBYHGBMkRnwiSl2NaXtIpgMAtuBttc\/HRXnFG8iKltJvTyTTBbZaM4PX9pLiKOjmAHiLf5Qoc4Wkwc5EzGSbhjQ55R0HB7Yon+QAFrDIokbQwzsrHmbDyXN6dcA3Z1uRYcEVTrUoEh2s\/Ud0SDBEXsSDHKEl8H9m+f8ApfX7Tww0AHEunwjJBYra+8AKTLG29\/b53Kr2FZR\/sY4ugGT9RabcReYJ7q4bI2aHX3SAeu8O8X8UuWExndCZ3K+ic4KobkW5KWjh5GStFbZO7\/G47eyhX4LdFwZCnVIRGlfK0KUUJaRGiJxLbjPUdNclNhqVjpYowuVIBtI4dpjwSvC7crPrtO9m4W7pztLYpdSJmTnzSL4Xwu\/imAjIyeyeWaqmGPTpeMJcATnCANFN61K8KB1JSjq+jui1MKDUHRamFEWToT05B8fEis5oyQ\/wXgA9znf7BPii\/jJhdXeTxRvw1TFKk51hvEBPOkc50eFnPio6bPZ5Iuq3hksdwTIxth2AaXRTmgD9oag6Dfjr5ohz5y9b+BusbRNtNkzM+Cpu0dmOJkX7q\/4ocbpZVw4PuUOjyVQnYJw0XgwzjlPZXN+FHAeCjqNDRYBLabirWH2O5xuIHP8ACe4HZjGZx1\/Cmo0HHl4j7dkypYaOfuOy0to2SB3sDRds6AWM91B\/Txc5nLlkmzMLFzmEHjDJgZZ+\/BNsuthqOF3iIy5p9g9lwLm+dgCP3ootnUxqAeo7n05qwMbB17pZ2f03wrIhGtYSPLgoqOiYUWAhCmK62DmTEjjHvglOMolscNOHcd1YsS2OhPYJTtFreV7qduh0ru0MFO7Ubnw0jTySnE4c5hWfDmQQefDucitcRgdR37x+fJNMiXFRMVRDswDxS6ps8ae\/fVXPG7I1Fj3jwSqphXAwW+X2KbkHGKviNnECQpdn7L3r6SrAcKCDPBF7IwH0jmf0EL5KPCM2VsoNAtZXDZVEAQLnXkgcBgbgAi\/X2FYMNhw0D9fZTux1EjqAS7HUhp6JliKgDcvOfApTXeMzeD3HVYthLiqN8p9wvW0w2nUJgQwm+SOr05kSPf2XtTCh1KoMyWW8UbS6c8wW0XCpBII4A2Vh+EdlA4pz9InxVXGzy2pHNdO+GMKG0y\/UiPJa39La1RDmXK1NNSOC13kVdmNJMcO1LqRTDDuTE0ovxb8PvqPd8sS7OFW6DX0wKVQQQbhdYoNDMQXONt1UX4g2Ya1d9VhEAk9k3tzb1uUwqO\/jHAd8pUdR6h+bLKZn+0LR1WJJItlKZNO90CTZatxMcvH0QdSoTcefj0zUdV0fZLVIYjFh2o5+9F4YdlM9fsgqQ8+PjmjaVh7nxS9qdPDgydR2Xv8AQN5e\/RE0z5dvRT0+32\/PgmkCgxhgMvf5W7KABm8kdfeiLke5+wQ1SvPD96osiri1\/coRuHkqU1N8wLxnMIylhych+Ub6Cd0VgMOIvA4k+87I5zjk262weHMAftHPwcCd6eOkeCEnRt9gcPzKY0Dz8fd1pQa0ZCZTXD4VrtBPMapbDWwHXZvC0TyiPBJcdQP67fsqw4rCObO6PD9pHiMQ6Y3OynlBxI2C5n32TKhlcT0aRblwzQuNgtLmi4zHFQ4XFbxuLjTTx+5laBejR+GDrgDnBy4Dih6uzQ7KNc4U9Cq7hboPARl5eaJ3wRpPAmT5mwWZVMfswxDWkk5ACSdeMjLO6IwGELGhpg8c5EHK1he2as1IGxiYIOQz7ae7qOuwSQQB0tHY5\/dLRhfhHgXt5z7\/ACinYhsRcc4BHSbKGrRjke1x0zHYoLFDgTbUiD75pblTTGJa+K3szI8gUC6tuuIPbXt1UGJrOAgkRawAgxkZz1QNar4kX4eHFaULDljxwiefqmFJ7RSc\/hY8r5JDRr2vGX2Ru1nkYYxeXNFk1S+1ZoU\/m1zuiRK6PTwu5QaIR2wNn0W4D5jKY+YBJtclC42v9LJzi6MPMt5f8L6rUI8ot7pQz2JlDCm5GUHpawomk5Zm+1hI3uS5ptTFVKbnNBMGfBdPrM32FpVRxuFptJ+YLhPj25\/LNUHgj\/6emToFE58jTqjGua6kC3IOIS2rUAHD0To\/barUOTTwnjYceqlw4BzPOOHj7sgmVCUXRBJsbmw5cc\/VLTwXvWjd6Xt77qWnztaLe+SWCtJiZI10RLaka++CVQfRcTbwz+63\/qANSb8\/8ISniNCCesKU1uGXMDxF7JmT1MTactfHp90nx2Ldobe9JUuIqnpwMXS1mGJmARwtmec\/Zb21Xf4I2GHsNSqQBoNFZMTh6TLNAJ0gjzVDZt5zKbWNMAWt5qE\/EbouSe+SPKDj47e9rritqMZawKUYjbQJtPiqVjtslxztrwQzMdM5pb5P0eYSXt0KjtRuc292TLD7fYAJdHvmuXsxxCkqbSJ6+Slc6txxdgo7dpv4Kf5FJ+Y5Li1HbBYSZTnC\/GLst5NMr9p3xzfVdOxOwqRb\/LKfZXPNrbMNJ5LMs\/z2Xrfidzrbx8VNSxYqugk3B9P1KWZboZYa72iwOOnO+hj3+eqcUKjXDIWP91z46dvwq7i6JYeXEzB8ff3Jw+KAEneE8Zz68U1IfVqkNJBIAEtnL6b2mPcqJmOFQuIJLRGQgg6245669Utq1rGIIINov1vn1QOy8ZAIH1C2diM5PPKFO+1MfR1UqbpO7AORDhNvzzslmKrcIjXLLoAsdiYNiQUPUxQaZ156n8\/hLWR1SCCeHolOKdvEDLn6IivVHC+v+EucZI4d0cYFpnhX3AMxbt0VmONp0aQFQBweba3AVVwJAjp1sf3CsGP2QalCm2bguPinqO+z\/wCGtsF9N7Wj6Eu2ji5eeSI2JS+RRIKS4iZJ4oY+1sML7FNrqQVUq3ypA8pqam9MommUGwoimUWHUnIPbew24lue67QomkjaBWGzc1VKGwH4WkQ929JkckjxYMzyXQ\/ils0Z4H1XO8S7P3ZWw9OLyzWXQZro7eHuyn+aSCdMuw0CD37ram+1+JWsCUSxxA9+S2bWvaYQbqoETwy9F63EQMu1\/NJpWUzp1hFyfLXidFM2sI4c\/VK6da2cTwU7Ksc1hEP+o+57IyjQEcbZ+x5LTCNDuHPgNJunNOmAIj39lXGEyqg7RxJYS10g89RoVWsbtGoTYwOS6ttHYjMQCHAQPXIZ+7KpY34FcJ3ZPs\/haYyXYW2xTG16v+4o+htN7f5Dum7PhdzDdEP2EIsEbq\/TTr7KW7Rla19pbotc8EUfhzXLpK3obE+qw8rnuVPjjD8siLE1Kr7mw4BCNc4GzjPUrolP4f3m3iT4AdlD\/wCRt82TTySfRLhv7VrZe0ngjeMhdB+Dmue75kQ0ZE5T7lS7E\/8ADmm1wNRod1kiVeKGy2UxDQGgCB+Oanlq9xSWzor2pg7TnOoE5556KvwGn6mtcMiJy8QrlWpiCPf4Va2szdnKe9uE\/r\/A1sNhX1CAQTaNbc7g5eSV7PqQHHPK2sRldb4usWtJytEEXQGEfAMccug\/allO1cb0YOqguv8AS2dbkTxgITE4jQTKixFaRw8vd1GD9MnPjqhptvKr5B4woKBtfNSVHzKg1unkTyo\/Ai+asuMbWPym0hLdwX07qu4CJvqLBX+nTIY0f9IQyX\/E8M8ueqFqSGBszGaBexH1mFCPaUr2b4MZNQI6mtd1EOUZTSuDy+H9CmORVJyX03omm9M5TKm5GUXJbSejKLkBSbYp71B3IT4LmmNbqF1QCWkHUFcy2tT3XubwJCr4nN556pG5+ff8Lz5hgxnpwWtZ0eaibUPkqVDbfeOZ1j0WwqwonLV55Hl76JbDyi6NRFUCSePvRL6d0wwrfeiEhtnuBOUSmFN2mnYyktOrGR9MgiqOIOnuck8Labsr7vbwW9WuTwnX34JS3Ezly6omjTccr8fH1VIS1Di2yhxTPL\/CdHZ5gnwnUoWpRIn6T4IZDJsA9\/FtuiiiXZW6flGurtbZzTzMEfZDtr7xAaD2BSSw\/GmmBba2nD7JlRgXjsvNkYMkTF+kZ5pjUwDvHXTpmlazTanWOhsdM\/YUrq+hQBplpMd8pHful9fHBtj4g2KSxpTmpiB7zSTag3vpkGOrf+R45KAbVabGba5+WY6oPEYqTFstcvNLaeEu0GWiLzbrOiHY2JJsdbwLcb8U5FJz3i7Runeu4N3j\/aBMTcQl22cRv1HOIEmN6DvDe3RvQRznxQsGX6B1n39lQl\/BY6oIg\/pQF5y981pGtbh3PitCSeun7UYC2a6PRHRbTfZguOy6Qch0C558NU9+s0C9\/S6v1SohXp\/xuG91DVKDqlS16qArVlOvcmHTclQuCiNVa\/NWc+eG21Ooiqb0qp1EVTqKjwTalURtF6UUqiMo1FhOqNRUv41w+7V3os4eatNCogPi3C\/MobwzZftqjhdVLy47xcxxRuh2vj9ojE5oJ5XRY44k3zkVJvGFBSIUoKAxNhiUc2pb14oNvD3qvYcQ4tEhoBcdBN++R8EDbEHFZ+XOMvXVZTxZOv28eOqVmqpKFUamYQGLfswNjee4AdcuylxPxXTpmKTZPG0Kk4naZf8ASXfSMgFrh6oBvCabLuHWO25iqv8AcQDoLeCDp47ENv8ANP8AyP3ssZjwFFUxk3MddUbGmVOMH8RVsnODv+4BS4jbVc\/wc1o\/6QB9gqw\/Ec1LRrjU+CVTlT5uMxhuHuPf9phgvi3F0rPaSP8AqBSLCbUDTbzsjH7aa7MRPAg\/46rcYHOrfgPjalVG7UbuE25eKzbVFrmb7HB2to+657icSCfvMz4KXB7ZdTNnS3gUlxozKUfWrw7P005WXrMTJM5oXGYlr\/qFp9UJRcfP3dJo2zGuZ9yhnrcXv3kLSssGw7yeyja79rZzrKGoU2i7eh3osY5RrC5bTLd8HNhzn8BHinuIxsJJsj\/SotGp+o98lpicQSp32+j\/AI+Y+Lwy33ex1bHoKpikrrVih3YhHi67+RjTkYlbfOSIYpTMxa2i7lM2PRNOogGOUzHrPnTSlVRlKqkzKqnZXWbZ9RrI5tQOBaciIVcp4lGUMUgyk\/EuzzRqOGhy6KvueumfEuHbVokn+TciuY4sEFdOF5RxeTHjlpjXwp6bkBvKek9HRTSYjp4qB9UhphxbI8V6wg9VFiAgIMuOUlQvo1HD6QI8ypy1TUbGffFGWBZSvDYeqTAz4FEvbVAuwxy5qwYQscZiHeqZU3AaD0yFk\/VCRSXVXD+13gvDXPB3gr0zCsgSBJIJykiZhRvY2Sd2LHKNZ\/AHihqKTFRXVzo13gpG4k\/7XeBVyfugBsAgRFudlM1wsd0a2iyHRphVHbiDwdPRT0X1T\/FjldMLSaB9QaDLtL67tu41RAqtbZoFnh0xpvkX7LBcFSw+zMQ7\/wBuJGbiAIy+6BxeAxAuYF7D7rovzt4xkMx3DXHPKS3zUNd9JlzDjwzJ1E80JlC3FSmYSuxsvAg8yT4QiJ3cj04ZojatQ1XSSQNBewByQYbp28\/JTyso4ywdhnkzC2ch8OCB77Kao9LIa1DUOiheVtUconFMG3pKJ2Xh\/mPE5C5QbASYFyVbNn4P5TI\/uN3dUMujePHll36EVHQEDXrBT1GEqP8ApEkjvz\/J+oW1qyCqPTt+CQlbBptIfPkUOcVoaxRlbCQhCwo6X8f5eUWQFbhyxYlc7bfWwqrFiDN211PTxSxYi2xFavNN08FR9pU5J4rxYreP05fN\/sTGxgrem9eLE9Tg+hWyUlSovViUQ7nfZTMWLEp42FTgiKe0CMxKxYsOkrdpNN5IU7ceIzK8WLbPKw41p9lTsxrePksWLbNKm\/qGnN3kVo7F0x\/cT2PZYsQ2Noertk5MtZCnFF13SsWJKVFUrQtGAnpPdeLEMQoo2UdVyxYnhA7itd1YsRBafhvZI+Wa7s8mjhzTEtWLFOXamPpsKa3bSWLFjPH0ULVorFizUDXoJfUw914sWK\/\/2Q==',width=400,height=400)","aed9ecb5":"plt.figure(figsize=(12,8))\nsns.scatterplot(x='uf',y='pessoas_pretas',data=df)\nplt.xticks(rotation=90)\nplt.show()","33c3bd49":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcT1q7JYBrRckv0LBUcH-uATwiA8II2luYHBcwcLpKGy86nNV0ZecQ&s',width=400,height=400)","82157a10":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.nome)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","9f52acee":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxITEhUSExIVFRUWGBUVFhcWFhUXFhcVFhUWFhUXFxgYHSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0NFQ0NGCsdHx0rKysrKys3MS0rKysrKysrKysrKysxKysrKysrKysrKysrKysrKysrKysrKysrKysrK\/\/AABEIAKgBKwMBIgACEQEDEQH\/xAAcAAABBQEBAQAAAAAAAAAAAAAGAAMEBQcCAQj\/xABAEAABAwIEAwUFBQYGAgMAAAABAAIRAwQFEiExBkFRImFxgZETUqGx8AcUMsHRFRYzQlNiI0OCouHxcpIkZLL\/xAAYAQEBAQEBAAAAAAAAAAAAAAAAAQQFA\/\/EABwRAQACAwEBAQAAAAAAAAAAAAAUUQIDExIBEf\/aAAwDAQACEQMRAD8AxiF6lC9aECJhNOenSPr4ppxiOXP9PNB7UZAkFeAzCbLlItxOiBBv0V20nb9F4KZHgnGmNkHVNvkvBqvBB5n8v+E5Qol3P1lB4G\/XVOhsdP8AhNhkfWicCBoCU8GL1rOafpMQeUqKn21upGH2eZXtnhvf8kEC3sJE\/X6Ka3D9Fe2OHCJ3+u5TaeHHogCbmyjlKqrq3yzGnrstAv7DlCH7nDtTI7tkFLSbLI015k6BQ7q3MDSADymD3onssOjcEz5z06Ju+woupugAObrz28UFNbWhMaHuj\/pe3Fnzg\/FWuEWpIGviPDwVqMPLhGX9PruQUuG+0NMhk5m65de0pOE8SuaZPLWNjM8\/op6nbPo1A8TofgofFOFezqNrM\/h1hmEcnfzDu6wg13g7iEVmdCJJE\/HTf0U\/iHDKd\/Rfb1GhzXAQYEseDIdPLyCxrALmpSILCQe47rScPxlxLSDBGhHImBmEIMI4p4erWFwaNQd7T1adkxavAfLdukcj81qf2vWPtGNr5Zd2Wk8g0FxJnzAhZ7htuHkN5NB10nrrt1jwQM1rTK7M0yDt3yCevh9BRMXw3sGqD+EgPHPtbHv1BWgYfhAcMjmw4dZ121Hdvr49Fa1uAjWtXhkCqZImMpE6B0d3yQYckpuMYbUtqz6FQQ9hghQkCSSSQJJJJBMheE+icTdVqDkVegTBTpTe6DwBSKHMJp4EAJNfyQSmyP0UgBukfXivA3RpPNPMIGv16IGcsun8k6wwDrr+Z0Cj1Xdo8lLsKGZzR3+SD23t3HYKSLSN1pOA8I56RqRPToY2hDOPWns6haRzQDptj+il21sZ2U+lSEKwt7QckDmHUgBCurVoJghRbWiFNtacuHigKbCzGVugn4eStaFgI2+vyUWwOyu2bIKq7wxpGyFsUwsA9EdVzohrEhJIQD1swNO\/1+atsPwfMHlozBzTOgkHx3VQ\/R3gtIwSiG2sxu0nl6IMuwbDYlupgkd+hRLb2QA\/CfyVVh90BVqQDq93LvRZR\/DMIKG5woGSR9eCrMUsM9jVZGtEiq3rEw4D1+CL6pH0FAYwPbXb1pVP\/wAkhBnuEtDm\/JE2FtaGwTrJdJ7t9fIIPwSoWxPh3K\/o1YOYdCPUID+vhFK7tqls8gmowhp2h4\/CZ7jC+f7O1cyq6m4Q5ji106agwVruA8Rtp1mtOukAzseiEvtIw72OJuqNENrhtYdJdo\/\/AHSgvcBJyjNrtE8vDoj2wqDKB3d\/os+wGroAj3C2TCAD+3HAWvtW3bGDPTcG1HR2ix2gmN4IAnvWEr624qwoXFlcUSJz0nwP7gMzP9zWr5KIjTog8SSSQJJJJBYOTNQFWJoDvTbqA71PXx59cVc\/TRd0BqVJNqN1222AOk6p6+HXFBLVwRqrA2wnmk6zb3p6+HXFxQc5wgnbQJ6qE5QtwOqcr0xO8J6+HXFXkf8AKtMIPbbHVRjTCueHrUF8RPjy709fDri3zg9827WuGsaoC+022ayrIG6KcPxh7GAAN0HRA\/HOLm4eGBoLhMkck9fDriGKN0BpIVnZXojdU44fqHX81z+yqrdp0709fDriN8PMjZW+G0e2NOaCcLxepSIDhPiOSMLLETo9oGuqevh1xFNEQ6FejZBDcYqZtm+hTt9xPUpsLsrTHLVP064iqqUP486GzKA73jG+rGGOyA6Q1o+Z2Tbba5rCH1D4uJJ+Cevh1xWtu\/M6J5rWcNpRQa3+0LCzh9a3cHsdMGeZHoVp+C8UVH02kBu0HQ6EaFPXw64hiu1zbirA\/nP11RfYtd7MT8EIOxcGq89mS53gDKurfHnBsQ2PNPXw64p16+Ad\/wA1FwFueq9u0tcNecghQ7jiVmocaY8dFBocS0mvD2OYHD0Kevh1xC1i9uZzB7xHmCQprrcjTkqPEAadw9zfwucXiNtTKtqmLOyagJ6+HXFz7OKjOsiPVHnHODCvh7Ko7VS3h08ywwHjv5HyKyuvibycw5bIv4L41qOLqFQBzXDLBGkEQR6J6+HXFBwatstHwe4BAWWOJpV3sAHZcfTl8EQWmOvpiTCevh1xanRdIXyBjlAMuazBs2o8ejivoW041ceyGtnwKw7ii2Bu7hx3dUe6OmYzHxT18OuIdSU77o3vS+6N709fDrigpKd90b3pfdG96evh1xWRXDhoiQ4Cz33egTbsCZ759AsknXaRNlBsr1jtUQ\/sBnvn0C5\/d9nvu9ArJ12RNlKMGSk5yvxgLffPoEncPNG7negSTrsibKUkaAlNSiB2Ct993oEv2Gz3z6BJOuyJsoPxqr3herFQLtuAN98+gV5w1w+z2g7R9AknXZE2UKGVewhu9qMaSQB48yjWvgzWsPaOx5BBOIYLnJGchSTrsi7KN0McptBzx4Kufj4D+wBEq8s8Eoig+k+m4uJBDwAdtYPQeCZwPh5rHjM0vZM5S1u8aanVWTrsibKe21zSrDUAFSKV2Gn2ZgEehVgeGGe0D2tyN5tzaR5qor4Wz2xio4gbJJ12RNlL6xGYZuirsXuwNJV5glgwscM5+CrcZwBrmGXO31iJjzSTrsi7KCNbG8p7IEfWwVlb8T0y2CYd5J6vhdqaRYKby6QQ4xr3GCneG+H2sOZwdUaJhmVu570k67ImyldTxnM6DBB2IRZwxWBDgPFDd1wjNUunICZDRyRlwngAYT23HToEk67ImymeGofvNRv97vmry7quazeOi4rYQ1t3UdmP4zyHVEeJ4Ix9IanVSTrsi7KZ1XDXGXPjxKscKwyi8fxQe4FS28LU3UnMhxqTo7Tadl7Q4JmAHOa8ZRIECBpJ9fgrJ12RNlGOIbUUzTYOhPx0UB7SWOJ0DRqVeYhhk1nNfUJLDk2HLRd0cADm1KWc9puYbbs1j0lJOuyJsoKW9Rp00\/NXnDNgDWBB21UM8PsLYDnTOuiuaGA\/dnNqCo9py841J+gknXZE2UiY3dNqXZDORDT3kaKwvKLGNBqECQm+GsCYa4Lnk6zsN1acbcJGo4Pa85coEaaGeiSddkTZRvCLmgBILRvr4brKMUufa1qlT33ud6kwtOtOCptiQ5zXtY86fzabHvifVA5wBnvn0CknXZF2UH0kQfsBvvn0CX7Ab759AknXZE2UH0kQfu+33z6BL932++fgknXZE2UI3JsodPE5\/pj1Tf71Gf4Y9Vli7KdHriI3FKUNv4oI\/wAoeq8ZxQZ\/hj1SLso64icBevJOqGW8TO\/pj1TjuJyB\/DHqkXZR1xERC5KHKvFR\/pj1XA4nJH8Mf+yRdlHXEUMKv+GCPaBZt+9Th\/lj\/wBkRcL8TS9pyRqAdeR2KRdlHXFrrmSEOYrh+UyNkQ2tYOhRsfpuFIkCdEi7KOuIdpW7uTlIo5xufRVWHYo4nK5seauLm7aymXEcuqRdlHXFFxK7fEDTvO6qbOkS5RMQxl2UPcBBJAE6pyyxKGFwbqkXZR1xEWF3AaSFZ5g7TkULYFXfVJhnxV49z6f4mpF2UdcXVXh8fiacvxC7oscwRmHpzVjSrh9EuBmBKjYE9tbnskXZR1xNfdXHtOV9gQ0nvUbFWhjN5T\/CRzscdoKRdlHXECYo6K9Q\/wB5+avsGuA9mQ+SzrFOInfeKoFPao8TO8OIVvw5jbnOjJHmUi7KOuI8+5smY8xofNS2HLMc17btzNBOkpG2cCkXZR1xCOP0st08+9DvUJllUtLXt3BBUr7S6rqPsKrW5g4OafFuvyKocHxN1XT2fxSLso64iKrg2b\/FpHsu1joeYUvi5k0aDo2zA+MA\/qm+EL41Kj7Z3ZdGZneRuFbcaW2TD8\/MPZAOmpkJF2UdcQTYXZY8EHxWhWFwyuyDr9cljVzjIY\/IQJ849Uf8C4gTTc57CGjYiTJPRIuyjriMaVIN7I2WQ4va+yr1afJr3AeE6fCFpeH4u11y+3Ojmnn0IWZ\/a1i33bEHMDA7Mym4mY1Ij8ki7KOuKIkhf97D\/SHql+9h\/pD1SLso64ihJC\/72H+kPVL97D\/SHqkXZR1xVNQpkhOkrk6BdZjcPC6p66eP5JNaSSUqW+negfo9\/cVw7tO89E57IxJ2\/SEqLNde\/wDOEDN44AwBt9FMMMLu4b2j0BI+KacgcLpRHgbWNaXbOgR4yhhjiiTDqjCwE5QWOzH3nToR5INfwO6Jax3cEWnJUZBQDwrVDqUdBopVPGCx5YSg7xjBRSqZm\/hOqF+L8TgspM1PPwRJjWLHI0DUkw0d6EK7mNccwz1Du7kO4IJ\/CFvbPqH7ydWt7DTsSTqiS8qWLQWnLroIiUAVaLnHMGu8gVItbVgn2jHCeZBKDSeGrSgw56ZzN6cwrHFcWtXv9m97GmNiQCgXBaraDQ99Ylk7DQ+aI8Xo2lcNqeza8RocuqC0s7djcwaQWuHLZVOGUG0ajsrufouqF8GAANgDSAFU4zRLpr0XZHjUg\/hcOhH5oLTF8QzGJVpwjWyUqrugLvQEoHoXgr0vaAEEGHDoeat7a7NPDrmoTBLS0eJ0\/VBlV1iVN1RxB3c47dXE7or4Iu6ecyA7n6IdwPAm1KjWHY6LT8H4XtaFQNDSSRzOkoC79q0yxrGslxGwGggbk8lHw+6zNh24US2ZlJgf9Jk18rzH10QVX2uVD9ypFu4q\/AhZ7w\/jzqTu22CdB0KOOPrpj20KTjqCahHWSG6+hQzSpUw8S0lsh0gSQWgbd2\/ogv8Ah+6d96ZdPaadNklzyIG23eivjW7beYVXqN0yOa8DnAcGgnycSn8HsGVKDaTmyHgjUaREgwqeqz2NpiFFw0a1oE9M4APxCAI4U4eo3FQCo4nnEwtU4Sq02h9u0Aeyj\/hZZw1gNWuS6m\/IWujczvGiNq9veWr6VvRc2q+oTneRBaJAEnmd9O5BY4thwbiVGszeq1zXeLACD6fJYb9p+Ji4xK4eDLWuFJvhTAbPqCfNa9jmKutG17qs\/M6kC2ly\/wARzQ1oA8QXL54qPJJJ3JJPidUHKSSSBJJJIJ6YeIKfScUDReYhOU2+XVMCZlONdO6CbVfmAA8\/n+i4qHc+i5ouXtQzoevyQRY0TTxorFlMAA9T8io95uRHT0jX4oGKbYDndPmU05Wzbf8A+E+p\/wDYpt9aVQ\/kqoINY+z69zNAPMD1GitcXtv8cEbGPggPgO+yuynkZHmtMqvzgO6fRQRMUsiWU3DXKXT5ggIJdf1qNeKobln8UbT+Gei0+wrNIyHbvVBxRhTKkuAmJkdRzCCVhtxUa3M6mSBBJjSDsrG\/xUPYGAAE8o1UfhLiI0mGlUpmswgNbtIjkSd0WUMesS5rnsLHNEDMzbulBn1vT7erjIO2iJ62ItyNADjy0HzRIy\/w41PaAtLo3yn9ErjFbcA+zoueSZ\/BAJ8UADjlWrSpuqODmNaJ11Ou2ip+E6V3Xc6pWeRSYCSyBJnYHyRTxdiT7gin7PKJEN3JI2JVnb4aKFoWfzOBk9XEaoA6zogU3OaI9o8ujoJgLrjap7Gwo0Roar8x\/wDFuvzVphlnne1g2bohT7TLw1bv2bCC2g0M\/wBR1cgqMGuXMeHB0RzAR5a4hUrua5tVgDYLg4GY20QZg2DVKmrXCNJ7JRPheFOYCZ58gZMfJATCqdSHA9eSrW3ftHOO2Xf5\/JOW9m4gl06fPoVS43WFG2qASHVXEDqAfxH0+aASxXEKlevUqNGkw2fdboE9gzq3tWAAyXCIO5nYpm2w4mMrjHM9ysMOolricxJGrY3kanw0KAyxLjKtScyg6g6nUzgEuEDY6tOxGquPtApl2HPqAD2lT2bSdj7xH+1QL2lUvqNBjt6Tg4PI7UiIB66bqT9oLn0sPZmg9trTpoSZgjv0PqgzrhXEalJ+V4eN4I6rYMBdTfSFcy0tkuc7TQaklA\/BFm2qZcOSvftUvxa4TVa3Q1ctFsb9oy7yygjzQY39o\/FYvK5ZSn2DHOLf73k9qofkO5BqSSBJJJIEkkkgnLwpSvUDJCTV08LptJB20wAvX1JI0XOQddF7Sb6IH80D4DxTNd5MEjfkU7nESQe7ootRhkHXVBa0Kgdh9VkatuKVU\/8AhkqUz\/ue1UrVaYW4Nc6m8\/4dVha7unVjv9LgD5KtyEGCNdv+kEywruY4PHKFqHD2Jio0a9FmNIZRB5hXGA3mQ6bSg1Bstdp4rm7dmOYKBY4o2o2J1SbIcRyKCTY25DszIB6FEeI3jvZiWaxyCH7S6APfzVjd4m2AJhBxh97Ua7+HPoERff6zmwGhqqMPrtdEuRLb0BlkahBUUMOh+dxzO+AUjF6ssgLu7q6wopeNM3eT4DVBV3l62xtX13fiPZpjmXHb9VjteoXuL8xzOJc6eZJlXvGXEf3ut2dKVPssHXq7zUPDLdjjqEBNwRxCKfZqgERodJWiWHEFCAAxp598lB3D2AUHQSwFFVTCGMaC0AQg8ua4cXRoHHMe4BBF6fvVV2X8ABbTH9o\/mPiZRFxBXyUMoMPqywdzeZVdgVnAa1uka9+0QSgbo4OGtaTOh2GkjnorFlk3NDm5ZbMe9II9YhXJpNENG85hPKeXdzUW4qQ8E6iYGmsaafJBbYIdSO5oBGx01he\/aRYipZBuVziHtLcoJ113jkn8FtBoRpud+p2V3fuBinPj\/wAoMjwTiG2oAZqrGgfiM8xygIF+07jb9oVWspyKFKQyd3OO7yOWwgIXx2yfRuKtOo0tc17pBEaSYKgIEkkkgSSSSBJJJIJkrxcgr0FB3kC7B07ly0riodIQeF0p9p7MBR6fp+adpzy7kHTXR3gLuRAI\/wCvBcgdV32Nd0HDH6FJhM6lJ1EgNcRoZjbcaeW67I7KDmo4KbhTt1AcOimYWe0gtqN25jpBRdhWKsqtDXmHdUD1t11TeQZBQaizDc2ocIHOd1CxOnkcBuhSzxeoBuVLGPQRmM+KAvw+qGwYRdh2Lty5TosypcSMOgHorCljGmoIQGtzdtkwq21vBUqlg1lj5P8ApKHje1KnZaIbzPM+JVzwtQiuB1BHqIQY06kQ5w6Ej0Kn2NYhyevKYFaq08qjx6OIUuxwzOdNfBAVYDihaJHLdFljiZqtQ9hPDji0NkNBgEnTyhM8bU7yyYWson2EQ6sw5jryI3YO\/wCKDnFL8Vq+VpkM7A\/M+qIsJt25gZ+tuSz7hyqazwKYa5x1iDPw0A7ytUwPA3gZqj9dNBsOqDmrQAJM6nouhhTnkdns85HQ\/oN1eXFvla4Ug32sdnPsVmvEuK39J0VnuaddAA0EHQ7aFBo7LqlbNGd0uPJsHwXNrcmo7OecfBZlw5eOqOAcZ10nwA\/JaThoiEFLxrwXb37YqDLUE5KjfxDu7x3FZfin2R1Cx5s63tqlMxUouAY7YGWmYPLQxod1uVzWAQPw1jJGM1qZ0bUDYHe0AT5gn0QfPt3avpPdTqMcx7DDmuBDgehBTC+lvtb4ApXrBctPs6zBlc5oBzs0jMNJyn4ErFL7gO5Z+AsqdwOV3o7T4oBRJP3lpUpOy1GOY7o4EHxE7jvTCBJJJIH5SBXK8BQPApwJgFONKDpzU41xEHZNgr0vQOuqQQTqdfiu40mN+fxTNEwe16FSPbjLp9BA97AFre1y26KJcVBEevTuXmbQFNVKRmeqDwvU7DD2gq+FZYWzWUFhcM1TbhCkOEuSq0kD9lSzbKZSsQTqE1hFPVXFChJ29EEixsQNGtHjsp9LCXF2sfXRPWNuByV7ZW0xAQRmWIaAAIH596lYR2Lhin\/dVArsLajHa7oKfFcJpMvK3YBJeXeR1VxaBrQMoHkE\/wAV4a572XDQSC0NdGsEbHRRKYyjXT65kIIePYl7M0xMGQfiFp9FoqUwHAEObqDqDI21Xz\/f4l94uSAdBUawdIbuVv2GnsM8B8kFHhvB1C3c427WszOLi3vPQ8h3KZiGemPwGDuRsPMKfVq5auX3hI8t1MZV6oBTFr4wwg+adaaN3TNOuxr45Hfxadwe9WOOYJ7Vs0oa4axyd+hQlFSg\/ttc3xGh8DsUEq14KbRJfbvzN9x8Zh3Zufmuqt29hyFpYe\/dW1jiHPcHcdR+qk3dwwQKjQ+k78JImOvgUFBWNR4gbFR\/2I2neWVb\/MNR7CeZb7Nx18\/miZuFt\/FSdI6H9f1VDfU6oxG3fUhtGix8TMufUES2BBEQN0BhfuHsXTtl\/RZjidtmdmbpqtGxGalF7W6HLpPd2vyWcWVU+0cxyDqo6hVYKNemx4jZwBE7SJ2QhxX9lzchrWMyJJokzIiewTrPcd+5XnEnYeC093j9SijhK5NRoB3hB8zObGh0OxHRcrTvtu4UFvXbeU2xTrkioANBWAkn\/WJPi1x5rMUHcpJJIPQnGleJIHQV4DB1SSQO1XaanU\/JP0A2N+fnskkgetabRIcJMCNdBrz8k3XovAcQJa3WZGUSkkggUWlxV7R\/w2CP5kkkEqz1Km3FExp9ei8SQScGaM3a070X2lq07EfAa+ZSSQWlrZju+B+SvKDA0aJJIJNMSFDv6OiSSCdh9fNTLD0QNjt62XU8xpkggGNuUg9UkkA3gmAGm9pbUbUGaSfwnfoT+a3jCnzTbHRJJAxxB2Qyp7rgPIqQ2pIBC9SQO0bhPvDXgtcAQdwUkkA9VwN9MzT7bD\/L\/MP1+a4cMs06gOV3X+U+8EkkEK3u329TKTLTBHQjkQialdNe2YDhpodfNeJIJDGNEZYA\/PuKFuNcKln3hgAe3R0c28j+vikkgyTEMQc5\/a5I24IvACNfrUpJILr7T8OF1htw0CXMZ7ZmknNS7cDvIDm\/6l8vwkkg\/9k=',width=400,height=400)","cbb63843":"sns.countplot(df[\"pop_tot\"])\nplt.xticks(rotation=90)\nplt.show()","b8f90a1b":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQLxKOAfwMekueIWmsveHY5NzEguyu_q65HUb85TmZqZb15GgB1Qw&s',width=400,height=400)","fdd5ce32":"plt.figure(figsize=(10, 6))\npd.value_counts(df['pop_tot']).plot.bar()\nplt.xticks(rotation=90)\nplt.show()","b0fcb869":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRfoqd1W0PtN98JB_DgcZ9nLYl-_62ypwr4FPvAaJTb2ZdaKEpG&s',width=400,height=400)","6b7011d0":"plt.figure(figsize=(10, 7))\npd.value_counts(df['pessoas_pretas']).plot.bar()\nplt.xticks(rotation=90)\nplt.show()","877913e9":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQ0CXzooUErX9ot1Bd1E3jpWXvDyJdTeLJQyI1KHLpOt6y3zGoX&s',width=400,height=400)","a0591a3c":"labels1=df.pop_tot.value_counts().index\nsizes1=df.pop_tot.value_counts().values\nplt.figure(figsize=(11,11))\nplt.pie(sizes1,labels=labels1,autopct=\"%1.1f%%\")\nplt.title(\"pop_tot\",size=15)\nplt.show()","21a9b5fa":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQ70Z1o3CFb-cScClgtmz60c-wU5-U_KZu7xnzXH9-nfkzhUkia3Q&s',width=400,height=400)","7807e058":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.uf)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","782f766f":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSWPHXbHk8ta8dDxrC09uE2HeIUxoCtDYLMyMZLjJ3XiNixBZVHJg&s',width=400,height=400)","408d964c":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('uf').size()\/df['pop_tot'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","09f23bd9":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRmn1gpE4Cf8TlyKEHyuqFCbdChKnFH-IEStdur_mKND17QB885&s',width=400,height=400)","b7017cb4":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.uf)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","80d466a8":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTE9bY4C7meXgIpzGhz-NhtXY0if5qbuzuAqNw_AN5NqXuxTXhV&s',width=400,height=400)","fa65ac75":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQ6ZsX_DsZEvOQPl-b9Pr0FC-KZT7N4mxv10sAbilv87Wa0_K7G&s',width=400,height=400)","d49a9021":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('uf').size()\/df['pop_tot'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","b8fcf30a":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTC7RSNj89rEe393IfrTDFYOeAcF-o0DVxrApDPVxWi9N9UHL9cdA&s',width=400,height=400)","190c6d90":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQdeV9K9gR968_FfwHfB-IlHQE_1iHcYwWEbula2y41DT8cwseZmw&s',width=400,height=400)","14149889":"Joaquim Barbosa former Minister of STF.  Justice is more rigid with black people.  - Image: sintracoopms.com.br","2747d51a":"Affirmative actions - Image: educafro.org.br","15f2d00f":"My inspiration: Nelson Mandela and Martin Luther King Jr.  -  Image (by artist Selvo Afonso): curtamais.com.br","59412a61":"Black people in Brazil. Image: coladaweb.com","7a31dee0":"I ain't got no home, ain't got no shoes\/Ain't got no money, ain't got no class\/Ain't got no skirts, ain't got no sweater\/Ain't got no perfume, ain't got no bed\/Ain't got no man\/Ain't got no mother\/Ain't got no friends, ain't got no schoolin'\/Ain't got no love, ain't got no name\/Ain't got no ticket, ain't got no token\/Ain't got no god\/Hey, what have I got?\/Why am I alive , anyway?\/Yeah, what have I got\/Nobody can take away?\nI got my smile\/Got my heart, got my soul\/ got my blood\/\nI've got life, I've got my freedom\/I've got life\/I've got the life\nAnd I'm going to keep it\/I've got the life\nSource: LyricFind\nSongwriters: Galt MacDermot \/ Gerome Ragni \/ James Rado\nAin't Got No - I Got Life lyrics \u00a9 Sony\/ATV Music Publishing LLC, BMG Rights Management\n\n","74a9c8c3":"71% of murdered people in Brazil are black. - Image: observatorio3setor.org.br","9d0c4a2b":"Google black trainee, english proficiency not any more a request.   - Image: geekpublicitario.com.br","01cdf965":"Yeah, That's The Man. -  Image: guiadoestudante.abril.com.br","9616e23c":"Image: pordentrodaafrica.com","d002028d":"Perhaps if we provide education for this little guy above, maybe he become the big guy below. -  Image: voluntariadoempresarial.com.br","1bcd1998":"Racism in Brazil? - Image: ujs.org.br","a2b138e8":"Brazil 500 years - Image: brasil500anos.ibge.gov.br","9cbb3086":"Image: geledes.org.br","358aeeda":"More brazilians self-declared as black.    Image: mobilizadores.com.br","ee0d9015":"Racism?  - Image: estiloblack.com.br","d76a0879":"90% arrested in Brazil, using facial recognition system, are black people. However that requires more analysis since black people already presents higher arresting ratio.  - Image: olhardigital.com.br ","6484db97":"10 important black people in Brazil's History. (Henrique Dias;;Chica da Silva;;Mestre Aleijadinho;; Jos\u00e9 Maur\u00edcio Nunes Garcia; Francisco J\u00e9 A. Montezuma;; C\u00e2ndido da Fonseca Galv\u00e3o;; Francisco Paulo de Almeida;; Maria Firmina dos Reis;; Ernesto Carneiro Ribeiro;; Nilo Pe\u00e7anha. - Image: youtube.com","618d7037":"The reality of black people in Brazil. - Image: sindcon-ba.org.br"}}