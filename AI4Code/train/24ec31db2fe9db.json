{"cell_type":{"3c714089":"code","74ce5af9":"code","786027d9":"code","d5138beb":"code","8ce04542":"code","276ee91c":"code","16e069b3":"code","50b728c1":"code","c0ab85f5":"code","fa0808b4":"code","1aca62ab":"code","fccb8ebd":"code","8f623768":"code","5dfda71d":"code","8ff87a23":"code","bd2a89d1":"code","d08f45bf":"code","c96776e5":"code","75045af3":"markdown","bc77758b":"markdown","7fcb245e":"markdown","61585a6e":"markdown","dca9c3b9":"markdown","43373567":"markdown","2a661f68":"markdown"},"source":{"3c714089":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74ce5af9":"!ls \/kaggle\/input\/random-linear-regression\/train.csv","786027d9":"import pandas as pd","d5138beb":"train_data = pd.read_csv('\/kaggle\/input\/random-linear-regression\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/random-linear-regression\/test.csv')\ntrain_data.head()","8ce04542":"train_data.isnull().sum()","276ee91c":"train_data['y'] = train_data['y'].fillna(train_data['y'].mean())","16e069b3":"train_data.isnull().sum()","50b728c1":"x = pd.DataFrame(train_data['x'])","c0ab85f5":"y = pd.DataFrame(train_data['y'])","fa0808b4":"from sklearn.linear_model import LinearRegression\n\nreg = LinearRegression()","1aca62ab":"reg.fit(x,y)","fccb8ebd":"reg.intercept_","8f623768":"reg.coef_","5dfda71d":"val_pred = reg.predict(y)","8ff87a23":"val_pred[0:5]","bd2a89d1":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.scatter(x,y)\nplt.ylim([0,80])\nplt.xlim([0,100])\nplt.plot(y, val_pred)\nplt.show()","d08f45bf":"from sklearn import metrics\n\nprint(\"MAE :- \", metrics.mean_absolute_error(y,val_pred))\nprint(\"MSE :- \", metrics.mean_squared_error(y,val_pred))\nprint(\"RMSE :- \", np.sqrt(metrics.mean_squared_error(y,val_pred)))","c96776e5":"reg.score(x,y)","75045af3":"**CREATING THE LINEAR REGRESSION MODEL**","bc77758b":"Now, we can see their is no missing values.","7fcb245e":"Checking Whether there is any null\/NAN\/Missing values are present.","61585a6e":"Equation of Linear Regression :- \n    \n y = a + bx\n \n so, here our target\/dependent variable is y,\n \n and independent variable is x.\n ","dca9c3b9":"You can replace the missing values using mean, median or mode.\n\nI've used mean to replace the missing value.","43373567":"x has no Missing value whereas, \n\ny has one Missing value","2a661f68":"**LINEAR REGRESSION**\n\nLinear Regression is a model used to show\/predict the relationship between dependent variable[target variable] or independent variables.\n"}}