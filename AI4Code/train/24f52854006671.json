{"cell_type":{"5aae96bd":"code","4b98cf17":"code","fd94cda4":"code","2aadfe64":"code","d1c538ab":"code","311fb9b6":"code","57e8ab08":"code","67d42bbf":"code","357b65f2":"code","8e6700f4":"code","c2912f13":"code","6971b6c0":"code","b391a2f9":"markdown","61b8a7a2":"markdown","16b933b6":"markdown","d43c3414":"markdown","af7151fb":"markdown","3be3d5cf":"markdown","ae84bbf1":"markdown"},"source":{"5aae96bd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b98cf17":"!pip install openpyxl\nimport openpyxl\n\nath_df=pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx',engine=\"openpyxl\")\ncoch_df=pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx',engine=\"openpyxl\")\nenge_df=pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx',engine=\"openpyxl\")\nmed_df=pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx',engine=\"openpyxl\")\ntem_df=pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx',engine=\"openpyxl\")","fd94cda4":"NOC_by_country=ath_df[\"NOC\"].value_counts()\n\nNOC_by_country=NOC_by_country.sort_values().tail(20)\nfig, ax=plt.subplots(figsize=(12,8))\n\nax.barh(NOC_by_country.index,NOC_by_country.values, color='#ee6c4d')\nax.set_xlabel(\"Number of participants\")\nplt.title(\"Top 20 countries by number of participants\", fontsize=18)\nplt.show()","2aadfe64":"pl_data=ath_df[\"NOC\"].value_counts()\n\nidx={\n    \"People's Republic of China\": \"China\",\n    \"Great Britain\":\"United Kingdom\",\n    \"Chinese Taipei\":\"Taiwan\",\n    \"Bosnia and Herzegovina\":\"Bosnia and Herz.\",\n    \"Central African Republic\":\"Central African Rep.\",\n    \"Democratic Republic of the Congo\":\"Dem. Rep. Congo\",\n    \"Dominican Republic\":\"Dominican Rep.\",\n    \"Equatorial Guinea\":\"Eq. Guinea\",\n    \"Central African Republic\":\"Central African Rep.\",\n    \"Democratic Republic of the Congo\":\"Dem. Rep. Congo\",\n    \"Dominican Republic\":\"Dominican Rep.\",\n    \"Equatorial Guinea\":\"Eq. Guinea\",\n    \"Islamic Republic of Iran\":\"Iran\",\n    \"South Sudan\":\"S. Sudan\",\n    \"Solomon Islands\":\"Solomon Is.\",\n    \"Syrian Arab Republic\":\"Syria\",\n    \"United Republic of Tanzania\":\"Tanzania\"\n}\n\npl_data=pl_data.rename(index=idx)","d1c538ab":"import geopandas as gpd\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nworld = world[world.name!=\"Antarctica\"]\nworld['players']=0\nfor i,j in pl_data.items():\n    world.loc[world.name==i,'players']=j\n    \n    \nfig, ax = plt.subplots(figsize=(20,7))\n\nworld.plot(column='players',ax=ax,legend=True,cmap='BuGn',edgecolor=\"black\")\nplt.title(\"Number of players by countries\", fontsize=18)\nplt.show()","311fb9b6":"m=enge_df['Male'].sum()\nf=enge_df['Female'].sum()\nlabl=[\"Male\",\"Female\"]\nd=[m,f]\n\nplt.figure(figsize=(8,8))\nplt.pie(d,autopct='%1.1f%%',labels=labl,pctdistance=0.80)\n\ncentre_circle = plt.Circle((0, 0), 0.65, fc='white')\nfig = plt.gcf()\n  \n# Adding Circle in Pie chart\nfig.gca().add_artist(centre_circle)\nplt.title(\"Players\",fontsize=18)\nplt.show()","57e8ab08":"data=tem_df['Name'].value_counts().head(20)\ndata=data.sort_values()\nfig,ax=plt.subplots(figsize=(12,8))\n\nax.barh(data.index,data.values,color='#90be6d')\nax.set_title(\"Top 20 countries by number of teams\",fontsize=18)\nplt.show()","67d42bbf":"from wordcloud import WordCloud\n\nd=(ath_df[\"Discipline\"].value_counts()).to_dict()\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(background_color=\"white\").generate_from_frequencies(d)\n\n# Display the generated image:\nplt.figure(figsize=(14, 12), dpi=75)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title(\"Game Discipline by highest number of players\",fontsize=18,fontweight=\"bold\")\nplt.show()","357b65f2":"coch_by_contry=coch_df['NOC'].value_counts().head(10)\ncoch_by_contry=coch_by_contry.sort_values()\nfig,ax=plt.subplots(figsize=(10,5))\n\nax.barh(coch_by_contry.index,coch_by_contry.values,color='#ee6c4d')\nax.set_title(\"Top 10 countries by number of coaches\",fontsize=18)\nplt.show()","8e6700f4":"medal=med_df.sort_values('Total',ascending=False)\nmedal=med_df.head(20)\n\nfig,ax=plt.subplots(figsize=(15,7))\n\nplt.bar(medal['Team\/NOC'],medal['Gold'],color='#ffb300')\nplt.bar(medal['Team\/NOC'],medal['Silver'], bottom=medal['Gold'],color='#cccccc')\nplt.bar(medal['Team\/NOC'],medal['Bronze'], bottom=medal['Gold']+medal['Silver'],color='#cd7f32')\n\n\nplt.legend([\"Gold\",\"Silver\",\"Bronge\"])\n\nlenth=range(len(medal))\nplt.xticks(lenth,medal['Team\/NOC'], fontsize=16,rotation=90)\nplt.title(\"Top 20 countries by number of medals\", fontsize=16)\nplt.show()","c2912f13":"med=pd.Series(med_df['Total'].values,med_df['Team\/NOC'].values)\n\nidx={\n    \"People's Republic of China\": \"China\",\n    \"Great Britain\":\"United Kingdom\",\n    \"Chinese Taipei\":\"Taiwan\",\n    \"Bosnia and Herzegovina\":\"Bosnia and Herz.\",\n    \"Central African Republic\":\"Central African Rep.\",\n    \"Democratic Republic of the Congo\":\"Dem. Rep. Congo\",\n    \"Dominican Republic\":\"Dominican Rep.\",\n    \"Equatorial Guinea\":\"Eq. Guinea\",\n    \"Central African Republic\":\"Central African Rep.\",\n    \"Democratic Republic of the Congo\":\"Dem. Rep. Congo\",\n    \"Dominican Republic\":\"Dominican Rep.\",\n    \"Equatorial Guinea\":\"Eq. Guinea\",\n    \"Islamic Republic of Iran\":\"Iran\",\n    \"South Sudan\":\"S. Sudan\",\n    \"Solomon Islands\":\"Solomon Is.\",\n    \"Syrian Arab Republic\":\"Syria\",\n    \"United Republic of Tanzania\":\"Tanzania\"\n}\n\nmed=med.rename(index=idx)","6971b6c0":"import geopandas as gpd\nworld_1 = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nworld_1 = world_1[world_1.name!=\"Antarctica\"]\nworld_1['medals']=0\n\nfor i,j in med.items():\n    world_1.loc[world_1.name==i,'medals']=j\n    \nfig, ax = plt.subplots(figsize=(20,7))\n\nworld_1.plot(column='medals',ax=ax,legend=True,cmap='OrRd',edgecolor=\"black\")\nplt.title(\"Number of medals by countries\", fontsize=18)\nplt.show()","b391a2f9":"# Game Discipline","61b8a7a2":"# Gender","16b933b6":"### ","d43c3414":"# Number of teams by countries","af7151fb":"# Number of total participants by countries","3be3d5cf":"# Coaches","ae84bbf1":"# Medals"}}