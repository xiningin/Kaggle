{"cell_type":{"62a448a5":"code","1d81c824":"code","dc851a0d":"code","109e904b":"code","e97a0a7c":"code","3ada40c3":"code","d82d5a32":"code","6b71a73f":"code","0a42a3bb":"code","f50aa441":"code","46a85b9b":"code","ee32f361":"code","a9bf6a1b":"code","9dcb6f2d":"code","3d268846":"code","adfafbe2":"code","9998995d":"code","255c04fc":"markdown","a1c32142":"markdown","ebb5a623":"markdown","12fe0dcb":"markdown","cfc70f73":"markdown","e0d5641d":"markdown","79eb0d4f":"markdown","2812ca23":"markdown","8816deeb":"markdown","d0404943":"markdown","d7b34d78":"markdown","d24f0dad":"markdown","4936abdd":"markdown","95afd03e":"markdown","91da4a6c":"markdown"},"source":{"62a448a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d81c824":"%ls ..\/input","dc851a0d":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_curve, auc,classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.svm import SVC\npd.options.mode.chained_assignment = None\nnp.random.seed(687)","109e904b":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndf.head(10)\n","e97a0a7c":"df.rename({'cp':'chest_pain_type','trestbps':'resting_blood_pressure','chol':'cholesterol','fbs':'fasting_blood_sugar','restecg':'rest_ecg','thalach':'max_heart_rate_achieved','exang':'exercise_induced_angina','oldpeak':'st_depression','slope':'st_slope','ca':'num_major_vessels','thal':'thalassemia'},axis=1,inplace=True)","3ada40c3":"df.head(5)","d82d5a32":"df['sex'][df['sex'] == 0] = 'female'\ndf['sex'][df['sex'] == 1] = 'male'\n#print(len(df.columns))\ndf['chest_pain_type'][df['chest_pain_type'] == 0] = 'typical angina'\ndf['chest_pain_type'][df['chest_pain_type'] == 1] = 'atypical angina'\ndf['chest_pain_type'][df['chest_pain_type'] == 2] = 'non-anginal pain'\ndf['chest_pain_type'][df['chest_pain_type'] == 3] = 'asymptomatic'\n\ndf['fasting_blood_sugar'][df['fasting_blood_sugar'] == 0] = 'lower than 120mg\/ml'\ndf['fasting_blood_sugar'][df['fasting_blood_sugar'] == 1] = 'greater than 120mg\/ml'\n\ndf['rest_ecg'][df['rest_ecg'] == 0] = 'normal'\ndf['rest_ecg'][df['rest_ecg'] == 1] = 'ST-T wave abnormality'\ndf['rest_ecg'][df['rest_ecg'] == 2] = 'left ventricular hypertrophy'\n\ndf['exercise_induced_angina'][df['exercise_induced_angina'] == 0] = 'no'\ndf['exercise_induced_angina'][df['exercise_induced_angina'] == 1] = 'yes'\n\ndf['st_slope'][df['st_slope'] == 0] = 'upsloping'\ndf['st_slope'][df['st_slope'] == 1] = 'flat'\ndf['st_slope'][df['st_slope'] == 2] = 'downsloping'\n\ndf['thalassemia'][df['thalassemia'] == 1] = 'normal'\ndf['thalassemia'][df['thalassemia'] == 2] = 'fixed defect'\ndf['thalassemia'][df['thalassemia'] == 3] = 'reversable defect'","6b71a73f":"df.head()","0a42a3bb":"df['sex'] = df['sex'].astype('object')\ndf['chest_pain_type'] = df['chest_pain_type'].astype('object')\ndf['fasting_blood_sugar'] = df['fasting_blood_sugar'].astype('object')\ndf['rest_ecg'] = df['rest_ecg'].astype('object')\ndf['exercise_induced_angina'] = df['exercise_induced_angina'].astype('object')\ndf['st_slope'] = df['st_slope'].astype('object')\ndf['thalassemia'] = df['thalassemia'].astype('object')","f50aa441":"df.dtypes","46a85b9b":"df = pd.get_dummies(df,prefix=['st_slope'],columns=['st_slope'])","ee32f361":"df.head()","a9bf6a1b":"df = pd.get_dummies(df, drop_first=True)","9dcb6f2d":"df.dtypes","3d268846":"df.head()","adfafbe2":"X_train, X_test, y_train, y_test = train_test_split(df.drop('target', 1), df['target'], test_size = .271, random_state=37)\nmodel = SVC(kernel='linear',gamma='scale',probability=True)\nmodel.fit(X_train, y_train)","9998995d":"acc = model.score(X_test,y_test)*100\nprint(\"Accuracy = \",acc)\n\ny_predict = model.predict(X_test)\ny_pred_quant = model.predict_proba(X_test)[:, 1]\ny_pred_bin = model.predict(X_test)\n\nconfusion_matrix = confusion_matrix(y_test, y_pred_bin)\ntotal=sum(sum(confusion_matrix))\n\nsensitivity = confusion_matrix[0,0]\/(confusion_matrix[0,0]+confusion_matrix[1,0])\nprint('Sensitivity : ', sensitivity )\n\nspecificity = confusion_matrix[1,1]\/(confusion_matrix[1,1]+confusion_matrix[0,1])\nprint('Specificity : ', specificity)\n\nfpr, tpr, thresholds = roc_curve(y_test, y_pred_quant)\nprint(auc(fpr, tpr))","255c04fc":"That looks nice,","a1c32142":"Lets take a look again, here we can see that their types have been changed","ebb5a623":"# Change few categories to object type\nWe have to change few categories to object type because they contain string data.","12fe0dcb":"Now we are done with our data, lets move to the model.","cfc70f73":"**Lets import all required libraries**","e0d5641d":"I would like to thank **Rob Harrand** for sharing the notebook and knowledge with us.\nhttps:\/\/www.kaggle.com\/tentotheminus9\/what-causes-heart-disease-explaining-the-model","79eb0d4f":"# Performance\nFor understanding FPR(False positive rate)(Sensitivity) and TPR(True positive rate)(Specificity) refer to this link https:\/\/developers.google.com\/machine-learning\/crash-course\/classification\/roc-and-auc\n\nAn AUC score above 0.9 is good.","2812ca23":"# Path\nChecking for path.","8816deeb":"Lets have a look,","d0404943":"# Data\nWe have to load our dataset, and have a look at our data.","d7b34d78":"# Model\nNow we are going to use a Support Vector Machine (SVM) on our data.","d24f0dad":"Now, here we are going to create dummy variable for the categorical variables and drop the first column from each of them.","4936abdd":"Now,lets change our columns names to their real representations.","95afd03e":"Now,we are going to change the values of our data to **string data** and later convert those values to **one-hot-encoding** for better interpretation of the data.","91da4a6c":"The reason for adding this line is to prevent the loss of information."}}