{"cell_type":{"9646bd6f":"code","e7486134":"code","b38db321":"code","8f186a22":"code","8854a5c0":"code","7e90ed46":"code","20afb926":"code","22bdf143":"code","6fe8a27e":"code","8c81d138":"code","877638e6":"code","da3d96f4":"code","748684d4":"code","5ef1bd42":"code","43df2728":"code","b3d4ffda":"code","28478b37":"code","a7853a7a":"code","49e5c911":"code","68257f9c":"code","7fcfc68a":"code","b6732c56":"code","1460956d":"code","1171356f":"code","19ea6dd9":"code","a8cce5fd":"code","f213d10c":"code","3e775c2a":"code","245eb47a":"code","421d7af0":"code","d00f66b1":"code","f8e6c4a5":"code","beeda657":"code","675edfc6":"code","c79c43c6":"code","e5528ce2":"code","437eff0a":"code","55262462":"code","66ec3849":"code","2d0d4c31":"code","02a0b118":"code","49abc79f":"code","80e4c153":"code","8be4090e":"code","2b3598db":"code","dcf93895":"code","356c93e9":"code","4a791809":"code","e32368cf":"code","a6e5ddef":"code","94938847":"code","ad846bd9":"code","adc50b69":"code","05432235":"code","89fc4bf3":"code","dd39fe77":"code","323ad218":"code","12d92921":"code","082c3e82":"code","5381ee07":"code","ba6ce5d8":"code","2036281d":"code","2644e11d":"code","d481363f":"code","75cb8bea":"code","1db67949":"code","a7462450":"code","e3d6b142":"code","b432d2a2":"code","327b6c6c":"code","eaa5d376":"code","3f333923":"code","20dfe25e":"code","9527c5e5":"markdown","5679054d":"markdown","d3d048ce":"markdown","e46e04ef":"markdown","5c12b935":"markdown","2d09e471":"markdown","3c923dab":"markdown","ecab843c":"markdown","62dc3cc5":"markdown","df967916":"markdown","42fda484":"markdown","9f4ac86c":"markdown","5d077e2a":"markdown","ff524e1a":"markdown","7568e091":"markdown","158ae7c6":"markdown","732415ce":"markdown","0bc212fc":"markdown","d3aa9f6f":"markdown","385dc0dd":"markdown","367e4f50":"markdown","a09d2a0b":"markdown","115fcab3":"markdown","1155e279":"markdown","5bfe2da8":"markdown","2f5569b0":"markdown","018072e8":"markdown","4a6373fb":"markdown","8321c4a6":"markdown","f14b3420":"markdown","12e5d26a":"markdown","0efc218c":"markdown","27209aff":"markdown","fb1b7946":"markdown"},"source":{"9646bd6f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e7486134":"# importing libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b38db321":"# import data\nrounds_df = pd.read_csv('..\/input\/teclov-investmentproblem\/rounds2.csv', encoding=\"ISO-8859-1\")\ncompanies_df = pd.read_csv('..\/input\/teclov-investmentproblem\/companies.txt', sep=\"\\t\", encoding=\"ISO-8859-1\")","8f186a22":"#printing rounds data head\nrounds_df.head()","8854a5c0":"#printing companies data head\ncompanies_df.head()","7e90ed46":"# rounds data info and shape\nrounds_df.info()\nrounds_df.shape","20afb926":"# companies data info and shape\ncompanies_df.info()\ncompanies_df.shape","22bdf143":"# check unique values in permalink column\ncompanies_df.permalink.nunique()","6fe8a27e":"# convert all the values from permalink column in to lower case\ncompanies_df['permalink'] = companies_df['permalink'].str.lower()\ncompanies_df.head()","8c81d138":"# verify permaink values after changing to lower case\ncompanies_df.permalink.nunique()","877638e6":"# check unique values in company_permalink \nrounds_df.company_permalink.nunique()","da3d96f4":"rounds_df['company_permalink'] = rounds_df['company_permalink'].str.lower()\nrounds_df.company_permalink.nunique()","748684d4":"# companies present in rounds file but not in (~) companies file\nrounds_df.loc[~rounds_df['company_permalink'].isin(companies_df['permalink']), :]\n","5ef1bd42":"# looking at the indices with non-english characters\nrounds_original_df = pd.read_csv(\"..\/input\/teclov-investmentproblem\/rounds2.csv\", encoding = \"ISO-8859-1\")\nrounds_original_df.iloc[[29597, 31863, 45176, 58473], :]","43df2728":"import chardet\n\nrawdata = open('..\/input\/teclov-investmentproblem\/rounds2.csv', 'rb').read()\nresult = chardet.detect(rawdata)\ncharenc = result['encoding']\nprint(charenc)","b3d4ffda":"print(result)","28478b37":"# trying different encodings\n# encoding=\"cp1254\" throws an error\n# rounds_original_df = pd.read_csv(\"..\/input\/teclov-investmentproblem\/rounds2.csv\", encoding = \"cp1254\")\n# rounds_original_df.iloc[[29597, 31863, 45176, 58473], :]","a7853a7a":"rounds_df['company_permalink'] = rounds_df.company_permalink.str.encode('utf-8').str.decode('ascii', 'ignore')\nrounds_df.loc[~rounds_df['company_permalink'].isin(companies_df['permalink']), :]","49e5c911":"rounds_df.company_permalink.nunique()","68257f9c":"companies_df.loc[~companies_df['permalink'].isin(rounds_df['company_permalink']), :]","7fcfc68a":"companies_df['permalink'] = companies_df.permalink.str.encode('utf-8').str.decode('ascii', 'ignore')","b6732c56":"# now verify again companies data frame still contain special character or not, \ncompanies_df.loc[~companies_df['permalink'].isin(rounds_df['company_permalink']), :]","1460956d":"#missing values in companies df\ncompanies_df.isnull().sum()","1171356f":"# missing values in round df\nrounds_df.isnull().sum()","19ea6dd9":"# merge both data frame using permalink and company_permalink column\ncompany_round_df = pd.merge(companies_df, rounds_df, how=\"inner\", left_on=\"permalink\", right_on=\"company_permalink\")\ncompany_round_df.head()","a8cce5fd":"# remove company_permalink because  permalink and company_permalink both are same\ncompany_round_df = company_round_df.drop('company_permalink', axis=1)\ncompany_round_df.columns\n","f213d10c":"# looking for missing values\ncompany_round_df.isnull().sum()\n","3e775c2a":"round(100*(company_round_df.isnull().sum()\/len(company_round_df.index)),2)","245eb47a":"company_round_df = company_round_df.drop(['funding_round_code', 'homepage_url','founded_at', 'state_code', 'region', 'city'], axis=1)\ncompany_round_df.columns","421d7af0":"# look fraction values again\nround(100*((company_round_df.isnull().sum())\/len(company_round_df.index)),2)","d00f66b1":"company_round_df['raised_amount_usd'].describe()","f8e6c4a5":"company_round_df = company_round_df[~np.isnan(company_round_df['raised_amount_usd'])]\nround(100*(company_round_df.isnull().sum()\/len(company_round_df.index)),2)","beeda657":"country_codes = company_round_df['country_code']\ncountry_codes.value_counts()","675edfc6":"# viewing fractions of counts of country codes\nround(100*(company_round_df['country_code'].value_counts()\/len(company_round_df.index)),2)","c79c43c6":"# removing row  when country code is missing\ncompany_round_df = company_round_df[~pd.isnull(company_round_df['country_code'])]\n\n# checking missing values\n\nround(100*(company_round_df.isnull().sum()\/len(company_round_df.index)),2)","e5528ce2":"# removing row with missing category list\ncompany_round_df = company_round_df[~pd.isnull(company_round_df['category_list'])]\n\n# look missing values\n\nround(100*(company_round_df.isnull().sum()\/len(company_round_df.index)),2)","437eff0a":"# let's filter data frame so it will contains the four specified funding types\ncompany_round_df = company_round_df[(company_round_df.funding_round_type == \"venture\") | \n        (company_round_df.funding_round_type == \"angel\") | \n        (company_round_df.funding_round_type == \"seed\") | \n        (company_round_df.funding_round_type == \"private_equity\")]","55262462":"# distribution of raised_amount_usd\nsns.boxplot(y=company_round_df['raised_amount_usd'])\nplt.yscale('log')\nplt.show()","66ec3849":"# summary matrices\ncompany_round_df['raised_amount_usd'].describe()","2d0d4c31":"# comparing summary stats across four categories\nsns.boxplot(x='funding_round_type', y='raised_amount_usd', data=company_round_df)\nplt.yscale('log')\nplt.show()","02a0b118":"# compare the mean and median values across categories\ncompany_round_df.pivot_table(values=\"raised_amount_usd\", columns=\"funding_round_type\", aggfunc=[np.median, np.mean])","49abc79f":"# compare median investment amount across the typed\ncompany_round_df.groupby('funding_round_type')['raised_amount_usd'].median().sort_values(ascending=False)","80e4c153":"# filter dataframe for venture investment type\n\ncompany_round_df = company_round_df[company_round_df.funding_round_type == 'venture']\n\n# group by country codes and compare total investment amount\n\ncountry_wise_total_investment = company_round_df.groupby('country_code')['raised_amount_usd'].sum().sort_values(ascending=False)\nprint(country_wise_total_investment)","8be4090e":"# top 9 countries\ntop_9_countries = country_wise_total_investment[:9]\nprint(top_9_countries)","2b3598db":"# filtering top three english speaking countries\ncompany_round_df = company_round_df[(company_round_df['country_code'] == 'USA') | (company_round_df['country_code'] == 'GBR') | (company_round_df['country_code'] == 'IND')]\ncompany_round_df.head()","dcf93895":"company_round_df.info()","356c93e9":"#boxplot to see distributions of funding amount across country\n\nplt.figure(figsize=(10,10))\nsns.boxplot(x='country_code', y='raised_amount_usd', data=company_round_df)\nplt.yscale('log')\nplt.show()","4a791809":"company_round_df.loc[:,'main_category'] = company_round_df['category_list'].apply(lambda x : x.split(\"|\")[0])\ncompany_round_df.head()","e32368cf":"# drop category list\ncompany_round_df = company_round_df.drop('category_list', axis=1)\ncompany_round_df.head()","a6e5ddef":"# read mapping file\nmapping = pd.read_csv('..\/input\/teclov-investmentproblem\/mapping.csv', sep=\",\");\nmapping.head()","94938847":"# look for missing values\nmapping.isnull().sum()","ad846bd9":"# remove row with missing values\nmapping = mapping[~pd.isnull(mapping['category_list'])]\nmapping.isnull().sum()","adc50b69":"# convert category_list and main category in lower case\nmapping['category_list'] = mapping['category_list'].str.lower()\ncompany_round_df['main_category'] = company_round_df['main_category'].str.lower()","05432235":"print(mapping.head())","89fc4bf3":"print(company_round_df.head())","dd39fe77":"print(mapping['category_list'])","323ad218":"# values in main category column in company_round_df which are not present in category list column in mapping file\ncompany_round_df[~company_round_df['main_category'].isin(mapping['category_list'])]","12d92921":"# values are in category column which are not in main category column\nmapping[~mapping['category_list'].isin(company_round_df['main_category'])]","082c3e82":"# replace '0' with 'na'\n\nmapping['category_list'] = mapping['category_list'].apply(lambda x:x.replace('0', 'na'))\nprint(mapping['category_list'])","5381ee07":"# merge company_round_df and mapping df\ncomp_round_map = pd.merge(company_round_df, mapping, how='inner', left_on=\"main_category\", right_on=\"category_list\")","ba6ce5d8":"comp_round_map.head()","2036281d":"# remove category list column\ncomp_round_map = comp_round_map.drop('category_list', axis=1)","2644e11d":"comp_round_map.head()","d481363f":"comp_round_map.info()","75cb8bea":"# store the value and id variables in two separate arrays\n\n# store the value variables in one Series\nvalue_vars = comp_round_map.columns[9:18]\n\n# take the setdiff() to get the rest of the variables\nid_vars = np.setdiff1d(comp_round_map.columns, value_vars)\n\nprint(value_vars)\n","1db67949":"print(id_vars)","a7462450":"# convert into long\nlong_comp_round_map_df = pd.melt(comp_round_map, \n        id_vars=list(id_vars), \n        value_vars=list(value_vars))\n\nlong_comp_round_map_df.head()","e3d6b142":"# remove rows having value=0\nlong_comp_round_map_df = long_comp_round_map_df[long_comp_round_map_df['value']==1]\nlong_comp_round_map_df = long_comp_round_map_df.drop('value', axis=1)\nlong_comp_round_map_df.head()","b432d2a2":"long_comp_round_map_df.info()","327b6c6c":"# rename variable column\nlong_comp_round_map_df = long_comp_round_map_df.rename(columns={'variable':'sector'})","eaa5d376":"# summarising the sector-wise number and sum of venture investments across three countries\n\n# first, let's also filter for investment range between 5 and 15m\nfiltered_df = long_comp_round_map_df[(long_comp_round_map_df['raised_amount_usd'] >= 5000000) & (long_comp_round_map_df['raised_amount_usd'] <= 15000000)]\n","3f333923":"# groupby country, sector and compute the count and sum\nfiltered_df.groupby(['country_code', 'sector']).raised_amount_usd.agg(['count', 'sum'])","20dfe25e":"# plotting sector-wise count and sum of investments in the three countries\nplt.figure(figsize=(16, 14))\n\nplt.subplot(2, 1, 1)\np = sns.barplot(x='sector', y='raised_amount_usd', hue='country_code', data=filtered_df, estimator=np.sum)\np.set_xticklabels(p.get_xticklabels(),rotation=30)\nplt.title('Total Invested Amount (USD)')\n\nplt.subplot(2, 1, 2)\nq = sns.countplot(x='sector', hue='country_code', data=filtered_df)\nq.set_xticklabels(q.get_xticklabels(),rotation=30)\nplt.title('Number of Investments')\n\n\nplt.show()","9527c5e5":"Note that there's a significant difference between the mean and the median - USD 9.5m and USD 2m. Let's also compare the summary stats across the four categories.","5679054d":"Now, we can either delete the rows having ```country_code``` missing (about 6% rows), or we can impute them by ```USA```. Since the number 6 is quite small, and we have a decent amount of data, it may be better to just remove the rows.\n\n**Note that** ```np.isnan``` does not work with arrays of type 'object', it only works with native numpy type (float). Thus, you can use ```pd.isnull()``` instead.","d3d048ce":"verify these characters are present in origin file or not. These non english character are introduced while importing data. now try to change encoding type","e46e04ef":"### Converting the 'wide' dataframe to 'long'\n\nYou'll notice that the columns representing the main category in the mapping file are originally in the 'wide' format - Automotive & Sports, Cleantech \/ Semiconductors etc.\n\nThey contain the value '1' if the company belongs to that category, else 0. This is quite redundant. We can as well have a column named 'sub-category' having these values. \n\nLet's convert the df into the long format from the current wide format. First, we'll store the 'value variables' (those which are to be melted) in an array. The rest will then be the 'index variables'.","5c12b935":"The median investment amount for type 'private_equity' is approx. USD 20m, which is beyond Teclov' range of 5-15m. The median of 'venture' type is about USD 5m, which is suitable for them. The average amounts of angel and seed types are lower than their range.\n\nThus, 'venture' type investment will be most suited to them.","2d09e471":"Notice that values such as 'analytics', 'business analytics', 'finance', 'nanatechnology' etc. are not present in the mapping file.\n\nLet's have a look at the values which are present in the mapping file but not in the main dataframe df.","3c923dab":"Thus, the choice of the summary statistic will drastically affect the decision (of the investment type). Let's choose median, since there are quite a few extreme values pulling the mean up towards them - but they are not the most 'representative' values.\n","ecab843c":"Let's have a look at the ```category_list``` column of the mapping file. These values will be used to merge with the main df.","62dc3cc5":"We cleaned our data, we removed all missing values. Now we can start with analysis, we'll conduct the three types of analyses - funding type, country analysis, and sector analysis.\n\n## Funding Type Analysis\n\nLet's compare the funding amounts across the funding types. Also, we need to impose the constraint that the investment amount should be between 5 and 15 million USD. We will choose the funding type such that the average investment amount falls in this range.","df967916":"The dataframe now contains only venture type investments in countries USA, IND and GBR, and we have mapped each company to one of the eight main sectors (named 'sector' in the dataframe). \n\nWe can now compute the sector-wise number and the amount of investment in the three countries.","42fda484":"This is working fine. now let's check unique values again","9f4ac86c":"# Problem  1- Data Cleaning\n\nlet's start with data cleaning\n","5d077e2a":"Note that the fraction of missing values in the remaining dataframe has also reduced now - only 0.65% in ```category_list```. Let's thus remove those as well.\n\n**Note**\nOptionally, you could have simply let the missing values in the dataset and continued the analysis. There is nothing wrong with that. But in this case, since we will use that column later for merging with the 'main_categories', removing the missing values will be quite convenient (and again - we have enough data).","ff524e1a":"## Sector Analysis\n\nFirst, we need to extract the main sector using the column ```category_list```. The category_list column contains values such as 'Biotechnology|Health Care' - in this, 'Biotechnology' is the 'main category' of the company, which we need to use.\n\nLet's extract the main categories in a new column.","7568e091":"Clearly, the column ```funding_round_code``` is useless (with about 73% missing values). Also, for the business objectives given, the columns ```homepage_url```, ```founded_at```, ```state_code```, ```region``` and ```city``` need not be used.\n\nThus, let's drop these columns.","158ae7c6":"There is some extra values in company_permalink column compare to permalink column. let's convert all values from company_permalink in to lower case and verify again.","732415ce":"list of encoding type : https:\/\/docs.python.org\/2\/library\/codecs.html#standard-encodings.\nNow change encoding type and import again","0bc212fc":"Verify  all non-english character present in origin data frame or not","d3aa9f6f":"To be able to merge all the ```main_category``` values with the mapping file's ```category_list``` column, all the values in the  ```main_category``` column should be present in the ```category_list``` column of the mapping file.\n\nLet's see if this is true.","385dc0dd":"Let's look at the fractions of missing values","367e4f50":"After changing encoding type it's throwing error,\nwe need to use another way","a09d2a0b":"we are having same unique values in rounds and companies data frame. now check if we are having same issue with company character","115fcab3":"Note that there's a large difference between the mean and the median values for all four types.","1155e279":"Now, we have shortlisted the investment type (venture) and the three countries. Let's now choose the sectors.","5bfe2da8":"If you see carefully, you'll notice something fishy - there are sectors named *alter0tive medicine*, *a0lytics*, *waste ma0gement*, *veteri0ry*, etc. This is not a *random* quality issue, but rather a pattern. In some strings, the 'na' has been replaced by '0'. This is weird - maybe someone was trying to replace the 'NA' values with '0', and ended up doing this. \n\nLet's treat this problem by replacing '0' with 'na' in the ```category_list``` column.","2f5569b0":"Note that the column ```raised_amount_usd``` is an important column, since that is the number we want to analyse (compare, means, sum etc.). That needs to be carefully treated. \n\nAlso, the column ```country_code``` will be used for country-wise analysis, and ```category_list``` will be used to merge the dataframe with the main categories.\n\nLet's first see how we can deal with missing values in ```raised_amount_usd```.\n","018072e8":"There seem to be 2 extra permalinks in the rounds file which are not present in the companies file. Let's hope that this is a data quality issue, since if this were genuine, we have two companies whose investment round details are available but their company details is not available in the companies table.\n\n\nLet's have a look at the company permalinks which are in the 'rounds' file but not in 'companies'.","4a6373fb":"companies data frame also contain special character let's fix these also","8321c4a6":"Let's now look at the column ```country_code```. To see the distribution of the values for categorical variables, it is best to convert them into type 'category'.","f14b3420":"we resolved encoding problem faced because of special character. Now we can work on missing values.","12e5d26a":"The mean is somewhere around USD 10 million, while the median is only about USD 1m. The min and max values are also miles apart. \n\nIn general, since there is a huge spread in the funding amounts, it will be inappropriate to impute it with a metric such as median or mean. Also, since we have quite a large number of observations, it is wiser to just drop the rows. \n\nLet's thus remove the rows having NaNs in ```raised_amount_usd```.","0efc218c":"## Country Analysis\n\nLet's now compare the total investment amounts across countries. Note that we'll filter the data for only the 'venture' type investments and then compare the 'total investment' across countries.","27209aff":"Thus, the top country in terms of the number of investments (and the total amount invested) is the USA. The sectors 'Others', 'Social, Finance, Analytics and Advertising' and 'Cleantech\/Semiconductors' are the most heavily invested ones.\n\nIn case you don't want to consider 'Others' as a sector, 'News, Search and Messaging' is the next best sector.","fb1b7946":"we don't have any missing values in companies permalink column and rounds company_permalink column."}}