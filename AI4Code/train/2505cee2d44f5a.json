{"cell_type":{"adbed02e":"code","a523200d":"code","fc651a6f":"code","747e951a":"code","ab7ffe39":"code","333a074c":"code","f6d85961":"code","61aa7bcf":"code","6f0afc9a":"code","da57de20":"markdown","a5f2014d":"markdown","d41bfa1d":"markdown","2f193cfa":"markdown","f342bd24":"markdown","691d6831":"markdown","1f3f8eed":"markdown"},"source":{"adbed02e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a523200d":"from __future__ import absolute_import, division, print_function, unicode_literals\n\nimport tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns","fc651a6f":"import pandas as pd\ndiabetes = pd.read_csv(\"..\/input\/diabetes.csv\")\n","747e951a":"As the dataset has total 8 features, so we need to preprocess the data and visualize for feature show.","ab7ffe39":"_=df.hist(figsize=(12, 10))\nfrom sklearn.preprocessing import StandardScaler\nfrom tensorflow.keras.utils import to_categorical\n\nsc=StandardScaler()\nX=sc.fit_transform(df.drop('Outcome', axis=1))\ny=df['Outcome'].values\ny_cat=to_categorical(y)\nprint(X.shape)","333a074c":"\nfrom sklearn.model_selection import train_test_split\nX_train,X_test, y_train, y_test=train_test_split(X,y_cat, random_state=22, test_size=0.2)\n\nmodel= tf.keras.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(8,), activation='relu'))\nmodel.add(keras.layers.Dense(32, activation='relu'))\nmodel.add(keras.layers.Dense(32, activation='relu'))\nmodel.add(keras.layers.Dense(2, activation='softmax'))\n\nmodel.compile(keras.optimizers.Adam(lr=0.05),\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\nprint(model.summary())","f6d85961":"model.fit(X_train, y_train, epochs=20, verbose=2, validation_split=0.1)","61aa7bcf":"y_pred=model.predict(X_test)","6f0afc9a":"y_test_class=np.argmax(y_test, axis=1)\ny_pred_class=np.argmax(y_pred, axis=1)\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\n\naccuracy_score(y_test_class, y_pred_class)\nprint(classification_report(y_test_class, y_pred_class))\nprint(confusion_matrix(y_test_class, y_pred_class))","da57de20":"Now lets add some necessary libraries!","a5f2014d":"Now lets build the neural model.","d41bfa1d":"Now lets read dataset for diabetes prediction.","2f193cfa":"PIMA Indian Diabetes dataset is very popular for pbuilding and training a deep neural network that can predict diabetes for women who are aged greater than 21. Lets build the model.","f342bd24":"Lets train the model.","691d6831":"Now lets get the prediction from the model based on test set.","1f3f8eed":"**Now getting the results- accuracy, confusion matrix**"}}