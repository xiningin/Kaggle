{"cell_type":{"52aa0853":"code","272c98f3":"code","476d2c02":"code","24c25004":"code","5c9e00ab":"code","c51c87a9":"code","f8525b7c":"code","27d354a5":"code","9e99bc50":"code","041dbea2":"code","72c5640a":"code","5ce55eca":"code","f9670749":"code","cd5b77f0":"code","2a252f19":"code","51c79238":"code","5e75f0e7":"code","4512f610":"code","e073ad5d":"code","80772dab":"code","cfdcc66f":"code","550710e1":"code","89e8cbc5":"code","933e1119":"code","f6400e86":"code","281223b3":"code","4af384ef":"code","6bf28f5d":"code","4c6e5d08":"code","9c373dcb":"code","ea18e0f4":"code","1e0756f9":"code","d092e8b6":"code","dd08c635":"code","aab98af4":"code","f560451a":"code","072d64b3":"code","7459d834":"code","7a293287":"code","486d305f":"markdown","32a2b875":"markdown","35014d0f":"markdown","b88cabfa":"markdown","b193073d":"markdown","fd6e4123":"markdown","fd33be69":"markdown"},"source":{"52aa0853":"# !pip install -q fastai2\n!pip install -q git+https:\/\/github.com\/fastai\/fastai2\n!pip install -q git+https:\/\/github.com\/fastai\/fastcore","272c98f3":"from fastai2.vision.all import *","476d2c02":"path = Path(\"\/kaggle\/input\/plant-pathology-2020-fgvc7\")","24c25004":"train_df = pd.read_csv(path\/\"train.csv\")\ntrain_df.head()","5c9e00ab":"train_df.query(\"image_id == 'Train_5'\")","c51c87a9":"get_image_files(path\/\"images\")[5]","f8525b7c":"train_df.iloc[0, 1:][train_df.iloc[0, 1:] == 1].index[0]","27d354a5":"# LABEL_COLS = ['healthy', 'multiple_diseases', 'rust', 'scab']","9e99bc50":"# BS = 128\nBS = 8","041dbea2":"def get_data(size=224):\n    return DataBlock(blocks    = (ImageBlock, CategoryBlock),\n                       get_x=ColReader(0, pref=path\/\"images\", suff=\".jpg\"),\n                       get_y=lambda o:o.iloc[1:][o.iloc[1:] == 1].index[0],\n                       splitter=RandomSplitter(seed=42),\n                       item_tfms=Resize(size),\n                       batch_tfms=aug_transforms(flip_vert=True),\n                      ).dataloaders(train_df, bs=BS)","72c5640a":"dls = get_data((450, 800))","5ce55eca":"# dblock.summary(train_df)","f9670749":"# dsets = dblock.datasets(train_df)\n# dsets.train[0]","cd5b77f0":"# 1\/0","2a252f19":"# del learn","51c79238":"# import gc\n# gc.collect()","5e75f0e7":"# dls = dblock.dataloaders(train_df, bs=BS)\ndls.show_batch()","4512f610":"from sklearn.metrics import roc_auc_score\n\ndef roc_auc(preds, targs, labels=range(4)):\n    # One-hot encode targets\n    targs = np.eye(4)[targs]\n    return np.mean([roc_auc_score(targs[:,i], preds[:,i]) for i in labels])\n\ndef healthy_roc_auc(*args):\n    return roc_auc(*args, labels=[0])\n\ndef multiple_diseases_roc_auc(*args):\n    return roc_auc(*args, labels=[1])\n\ndef rust_roc_auc(*args):\n    return roc_auc(*args, labels=[2])\n\ndef scab_roc_auc(*args):\n    return roc_auc(*args, labels=[3])","e073ad5d":"# from fastai2.callback.cutmix import CutMix","80772dab":"# loss = partial(CrossEntropyLossFlat, weights=tensor([1,1.5,1,1]))","cfdcc66f":"metric = partial(AccumMetric, flatten=False)\n\ndef get_learner(size=224):\n    dls = get_data(size)\n    return cnn_learner(dls, resnet152, metrics=[\n                        error_rate,\n                        metric(healthy_roc_auc),\n                        metric(multiple_diseases_roc_auc),\n                        metric(rust_roc_auc),\n                        metric(scab_roc_auc),\n                        metric(roc_auc)],\n                       ).to_fp16()","550710e1":"learn = get_learner((450, 800))","89e8cbc5":"# learn.lr_find()","933e1119":"lr = 3e-3","f6400e86":"# learn.fine_tune(1, lr)","281223b3":"# learn.fit_one_cycle(2, slice(lr\/10, lr))","4af384ef":"m = \"multiple_diseases_roc_auc\"\nd = 0.005\nlearn.fine_tune(50, lr, freeze_epochs=1, cbs=[EarlyStoppingCallback(monitor=m, min_delta=d, patience=10),\n                                              SaveModelCallback(monitor=m, min_delta=d),\n                                              ReduceLROnPlateau(monitor=m, min_delta=d, patience=4)])","6bf28f5d":"# learn.fit_one_cycle(2, slice(lr\/1000, lr\/100))","4c6e5d08":"# learn.data = get_data(448)","9c373dcb":"# learn.fit_one_cycle(5, slice(lr\/1000, lr\/100))","ea18e0f4":"interp = ClassificationInterpretation.from_learner(learn)","1e0756f9":"interp.plot_top_losses(9, figsize=(15, 10))","d092e8b6":"test_df = pd.read_csv(path\/\"test.csv\")\ntest_df.head()","dd08c635":"tst_dl = learn.dls.test_dl(test_df)","aab98af4":"preds, _ = learn.get_preds(dl=tst_dl)","f560451a":"subm = pd.read_csv(path\/\"sample_submission.csv\")","072d64b3":"subm.iloc[:, 1:] = preds","7459d834":"subm.to_csv(\"submission.csv\", index=False)","7a293287":"pd.read_csv(\"submission.csv\")","486d305f":"# Model","32a2b875":"Thanks this guy for metrics\n\nhttps:\/\/www.kaggle.com\/lextoumbourou\/plant-pathology-2020-eda-training-fastai2\n\nFastai2 docs\n\nhttps:\/\/dev.fast.ai\/","35014d0f":"# Interpretation","b88cabfa":"In the train df all rows have only one label, so it looks like a usual classification.","b193073d":"# Datablock","fd6e4123":"# Submission","fd33be69":"I am using the default size and transforms. I don't know if they are the best for this problem."}}