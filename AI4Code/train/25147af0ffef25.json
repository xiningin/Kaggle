{"cell_type":{"ca21777a":"code","87dcd5cd":"code","770c17bb":"code","607f2688":"code","ff5f6d65":"code","c1ee87df":"code","88fc3642":"code","4e908418":"code","5323c578":"code","bb414807":"code","4cd0f586":"code","cebf5e3c":"code","b99b0bd1":"code","f3b9a2d7":"code","fe5837e4":"code","ca4dd9ff":"code","ac9fc659":"code","e4a2d821":"code","1a3407a4":"code","36543a9d":"code","35c83ff5":"code","8a5bd52a":"code","f047e01b":"code","2885df84":"code","84fd7af9":"code","e81d6c4e":"code","3761c86c":"code","55a88326":"code","6a0781f7":"code","9b9fc6da":"code","64026e9d":"code","14887865":"code","6818355c":"code","d92f6be0":"code","cc5ef0dc":"code","b4f85118":"code","048a2db5":"code","c62dcd23":"code","fd71377f":"code","11f174a0":"code","210dbbe2":"code","d9633dbc":"code","e0fe88f6":"code","39de56e6":"code","48094349":"code","2a36f50c":"code","301114d2":"code","ed1b9ae5":"code","c48843c8":"code","47bd5082":"code","dab53579":"code","f096ee4e":"code","3c67afc6":"code","4cb018f8":"code","8f88cf71":"code","bcbe0105":"code","b9122f40":"code","4b8104c2":"code","7644b226":"code","203c55f0":"code","828c75ad":"markdown","c43fd811":"markdown","dce1067f":"markdown","7f23d3e3":"markdown","6bdc98b4":"markdown"},"source":{"ca21777a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","87dcd5cd":"df=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf.head()","770c17bb":"#dropping fields which do not have any impact on survival\ndf.drop(['Name', 'Ticket'], axis=1, inplace=True)","607f2688":"df.columns","ff5f6d65":"df.info()","c1ee87df":"sns.heatmap(df.isnull(), cmap='viridis')","88fc3642":"temp=df.groupby('Pclass')[['Pclass','Age']].mean()","4e908418":"temp=df.groupby('Pclass')[['Pclass','Age']].mean()","5323c578":"temp.info()","bb414807":"round(temp[temp['Pclass']==1]['Age'],0)","4cd0f586":"df[df['Age'].isnull()].head()","cebf5e3c":"def Agefill(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass==1:\n            return round(temp[temp['Pclass']==1]['Age'])\n        elif Pclass==2:\n            return round(temp[temp['Pclass']==2]['Age'])\n        else:\n            return round(temp[temp['Pclass']==3]['Age'])\n    else:\n        return Age\n    \ndf['Age']=df[['Age','Pclass']].apply(Agefill, axis=1)","b99b0bd1":"df.info()","f3b9a2d7":"sns.heatmap(df.isnull(), cmap='viridis')","fe5837e4":"df.drop(['Cabin'], axis=1, inplace=True)","ca4dd9ff":"df.dropna(inplace=True)","ac9fc659":"sns.heatmap(df.isnull(), cmap='viridis')","e4a2d821":"df.columns","1a3407a4":"df.info()","36543a9d":"df_test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","35c83ff5":"df_2_test=df_test.drop(['Name','Ticket','Cabin'], axis=1)","8a5bd52a":"df_2_test.head()","f047e01b":"df_2_test['Age']=df_2_test[['Age','Pclass']].apply(Agefill, axis=1)","2885df84":"df_2_test.info()","84fd7af9":"df_2_test['Fare'].fillna(df_2_test['Fare'].mean(), inplace=True)","e81d6c4e":"df_2_test.info()","3761c86c":"sns.countplot('Survived', hue='Pclass', data=df)","55a88326":"sns.barplot('Pclass','Fare', data=df)","6a0781f7":"sns.boxplot('Pclass', 'Age', data=df)","9b9fc6da":"sns.countplot(df['SibSp'])","64026e9d":"sns.scatterplot(x='Age', y='Fare', hue='Survived',palette=['red','blue'], data=df)\nplt.title('Age vs Fare')\n#plt.rcParams['figure.figsize']=[100,100]","14887865":"df.info()","6818355c":"df['Fare'].describe()","d92f6be0":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler(feature_range=(-3,3))\ndf['Fare']=scaler.fit_transform(df.Fare.values.reshape(-1,1))","cc5ef0dc":"from sklearn.preprocessing import MinMaxScaler\nscaler_test = MinMaxScaler(feature_range=(-3,3))\ndf_2_test['Fare']=scaler.fit_transform(df_2_test.Fare.values.reshape(-1,1))","b4f85118":"df.head()","048a2db5":"df_2_test.head()","c62dcd23":"sex=pd.get_dummies(df['Sex'])\nEmbarked=pd.get_dummies(df['Embarked'])\nsex_test=pd.get_dummies(df_2_test['Sex'])\nEmbarked_test=pd.get_dummies(df_2_test['Embarked'])\nsex.head()\n#Embarked.head()","fd71377f":"df.info()","11f174a0":"df_1_final=pd.concat([df,sex,Embarked],axis=1)\ndf_2_final=pd.concat([df_2_test,sex_test,Embarked_test],axis=1)\ndf_2_final.head()","210dbbe2":"df_1_final.drop(['Sex','Embarked'],axis=1, inplace=True)\ndf_2_final.drop(['Sex','Embarked'],axis=1, inplace=True)\ndf_2_final.head()","d9633dbc":"features=df_1_final.drop(['PassengerId','Survived'], axis=1).values\nlabel=df_1_final['Survived'].values","e0fe88f6":"print(features.shape, label.shape)","39de56e6":"label.resize(889,1)","48094349":"label.shape","2a36f50c":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nmax_test_score=0\nrandom_state=0\nfor x in range(0,1000):\n    X_train, X_test, y_train, y_test  = train_test_split(features, label, test_size=0.2, random_state=x)\n    lr=LogisticRegression(max_iter=1000)\n    lr.fit(X_train, np.ravel(y_train))\n    if lr.score(X_test,y_test)>max_test_score and lr.score(X_train, y_train)<lr.score(X_test,y_test):\n        max_test_score=lr.score(X_test,y_test)\n        train_score=lr.score(X_train, y_train)\n        random_state=x\nprint('Random State:',random_state,' Train score: ',train_score)\nprint('Random State:',random_state,' Test Score: ',max_test_score)","301114d2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test  = train_test_split(features, label, test_size=0.2, random_state=669)","ed1b9ae5":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(max_iter=1000)\nlr.fit(X_train, y_train)","c48843c8":"print(lr.score(X_train, y_train))\nprint(lr.score(X_test,y_test))","47bd5082":"predictions= lr.predict(X_test)","dab53579":"from sklearn.metrics import classification_report","f096ee4e":"print(classification_report(y_test,predictions))","3c67afc6":"features_test=df_2_final.drop(['PassengerId'], axis=1).values","4cb018f8":"features_test.shape","8f88cf71":"df_model_predictions=lr.predict(features_test)","bcbe0105":"type(df_model_predictions)","b9122f40":"df_model_predictions","4b8104c2":"df_2_final.head()","7644b226":"submission=pd.concat([df_2_final['PassengerId'], pd.DataFrame(df_model_predictions)],axis=1)\nsubmission","203c55f0":"submission.to_csv('submission.csv', encoding='utf-8')","828c75ad":"Standardizing the Fare in test dataset","c43fd811":"Graphical Analysis of train dataset","dce1067f":"Creating dummies","7f23d3e3":"Cleaning the test dataset","6bdc98b4":"Standardizing the Fare in train dataset"}}