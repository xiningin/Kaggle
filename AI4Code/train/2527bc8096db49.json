{"cell_type":{"4393ef3e":"code","2c4efa23":"code","89d966d7":"code","569179b7":"code","adce5c49":"code","853f0f38":"code","e6d9bb6c":"code","2ce245b0":"code","b279f4d2":"code","66b42c21":"code","f5389a3a":"code","f2b3e08e":"code","be06f758":"code","6ffbfe03":"code","c48973a1":"code","345a86c2":"code","fdd5e13a":"code","3ba19e60":"code","7cc0ecd3":"code","bdaf5330":"code","2ca30ae6":"code","64afd0af":"markdown","6789de0c":"markdown","0dac0373":"markdown","d287e40a":"markdown","8dd01d67":"markdown","423e2fa3":"markdown","3c8ae835":"markdown","060f14e8":"markdown","38bb75d0":"markdown","8495cefe":"markdown","11831bc6":"markdown","6548858b":"markdown","261fe485":"markdown","0408847c":"markdown","062acabf":"markdown"},"source":{"4393ef3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2c4efa23":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\n%matplotlib inline\nsns.set_context('notebook')\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report,confusion_matrix, accuracy_score","89d966d7":"df = pd.read_csv('\/kaggle\/input\/real-or-fake-fake-jobposting-prediction\/fake_job_postings.csv')","569179b7":"df.head()","adce5c49":"df.info()","853f0f38":"df.describe()","e6d9bb6c":"plt.figure(figsize=(24, 6))\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","2ce245b0":"df['employment_type'].value_counts()","b279f4d2":"sns.countplot(df['employment_type'], hue = df['fraudulent'])","66b42c21":"df['salary_range'].head(15)","f5389a3a":"sns.countplot(df['has_company_logo'], hue = df['fraudulent'])","f2b3e08e":"sns.countplot(df['telecommuting'], hue = df['fraudulent'])","be06f758":"type_job = pd.get_dummies(df['employment_type'], drop_first = True)","6ffbfe03":"df['salary_min'] = df['salary_range'][df['salary_range'].notnull()].apply(lambda x :x.split('-')[0])\ndf['salary_max'] = df['salary_range'][df['salary_range'].notnull()].apply(lambda x :x.split('-')[-1])\ndf['salary_min'] = pd.to_numeric(df['salary_min'], errors='coerce').fillna(\"0\")\ndf['salary_max'] = pd.to_numeric(df['salary_max'], errors='coerce').fillna(\"0\")","c48973a1":"df = pd.concat([df, type_job], axis = 1)","345a86c2":"X= df[['telecommuting', 'has_company_logo', 'has_questions', 'Full-time', 'Other',\n       'Part-time', 'Temporary', 'salary_min', 'salary_max']]\ny = df['fraudulent']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state = 101)","fdd5e13a":"logmodel = LogisticRegression()\nlogmodel.fit(X_train, y_train)","3ba19e60":"predictions = logmodel.predict(X_test)","7cc0ecd3":"print(classification_report(y_test, predictions))","bdaf5330":"print(confusion_matrix(y_test,predictions))","2ca30ae6":"print(accuracy_score(y_test,predictions))","64afd0af":"*First the creation of dummy variables for employment type*","6789de0c":"## EDA","0dac0373":"*As  we can see there are a number of columns that have a high number missing values. Such as the salary range  and department.   hunch lets see if the there any relationship between the employment tpye and the ad being fraudulent*","d287e40a":"*Combine the new type dummy variables and the dataframe*","8dd01d67":"## Creation of extra variables","423e2fa3":"# Logistic Regression for fake job identifying","3c8ae835":"## Application of logistic regression","060f14e8":"> *Split of Salery Range and creation of new variables to include in the model*","38bb75d0":"*As we can see there is a upper band and an lower band. This means we could split the field to obtain two new variables.*","8495cefe":"*It might be worth to investigate wether some NLP on the title column will yield improvement in the model.*","11831bc6":"## Next Steps","6548858b":"*Output of a number of visualisations to explore possible relations between the variables*","261fe485":"*As we can see there is thus far no predictive power in the model. I believe it is due to the fact that the number of positives is very low and it skews training of the model to predict only negtives.*","0408847c":"*Visualise the completness of the dataset.*","062acabf":"*As there are only five catergoris it might be worth obtaining dummy variables for these.\nInvestigate the make up of the salary range*"}}