{"cell_type":{"ef989e1f":"code","816d9b5b":"code","c2f323b7":"code","c8e6410a":"code","a1db26dc":"code","b0c1189f":"code","7c55c585":"code","5ae09a78":"code","611f7613":"code","8641ea1b":"code","ba3efe19":"code","09d92e97":"code","cae815b6":"code","58d28026":"markdown","fd4714f7":"markdown","2af0eabe":"markdown","74edaa66":"markdown","63f6c81c":"markdown","d71a454a":"markdown","21b3fb72":"markdown","24d00a83":"markdown","63ff0bcb":"markdown","c1df2bc4":"markdown","eacf0906":"markdown"},"source":{"ef989e1f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","816d9b5b":"df = pd.read_csv('..\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')\ndf.head()","c2f323b7":"df.info()","c8e6410a":"df.isnull().sum()","a1db26dc":"x = df.YearsExperience\nx = x[:,np.newaxis]\ny = df.Salary","b0c1189f":"x.shape","7c55c585":"import matplotlib.pyplot as plt\n\nplt.scatter(x, y)\nplt.title('Salary Data')\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')","5ae09a78":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\n\nx_train, x_test, y_train, y_test = train_test_split(x ,y,test_size=0.3, random_state=42)\nmodel_reg = linear_model.LinearRegression()\nmodel_reg.fit(x_train,y_train)\nmodel_reg.score(x_test,y_test)","611f7613":"plt.scatter(x_test, y_test)\nplt.plot(x_test, model_reg.predict(x_test))\nplt.title('Linear Regression')\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')","8641ea1b":"from sklearn.svm import SVR\n\n\nmodel_params = {\n    'svr': {\n        'model': SVR(),\n        'params' : {\n            'C': [1,10,20,30,50,100,250],\n            'kernel': ['rbf','linear','poly']\n        }  \n    }\n}","ba3efe19":"from sklearn.model_selection import GridSearchCV\nscores = []\n\nfor model_name, mp in model_params.items():\n    clf =  GridSearchCV(mp['model'], mp['params'], cv=5, return_train_score=False)\n    clf.fit(x, y)\n    scores.append({\n        'model': model_name,\n        'best_score': clf.best_score_,\n        'best_params': clf.best_params_\n    })\n    \ndf_score = pd.DataFrame(scores,columns=['model','best_score','best_params'])\ndf_score","09d92e97":"x_train, x_test, y_train, y_test = train_test_split(x ,y,test_size=0.3, random_state=42)\nmodel_svr = SVR(C=250, kernel='linear')\nmodel_svr.fit(x_train,y_train)\nmodel_svr.score(x_test,y_test)","cae815b6":"plt.scatter(x_test, y_test)\nplt.plot(x_test, model_svr.predict(x_test))\nplt.title('Support Vector Regression')\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')","58d28026":"Chenck if the dataset have mission value","fd4714f7":"Split data into features and label","2af0eabe":"### 2. Support Vector Regression","74edaa66":"## **Compare machine learning alghoritm**\n## Support Vector Regression VS Linear Regression\n### using simple dataset to make easily visualize","63f6c81c":"Check the data type","d71a454a":"Visualize the Support Vector Regression model","21b3fb72":"### 1. Linear Regression","24d00a83":"Visualize the linear regression model","63ff0bcb":"Make grod search to choose the best params to SVC","c1df2bc4":"Visualize the salary data with years of experience","eacf0906":"Reading data csv using pandas"}}