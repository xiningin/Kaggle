{"cell_type":{"b058d149":"code","5c32aaa2":"code","d77da3c2":"code","5720d077":"code","242b8744":"code","afeb95b5":"code","895f47e2":"code","3b851908":"code","c5ff05b7":"code","b25dcae9":"code","2af681f1":"code","5e13d218":"code","87f2a2ba":"code","6edd510a":"code","355ad5a1":"code","24ef8c68":"code","ad0f7f79":"code","8505f42d":"code","33ba5395":"code","b1d20773":"code","20e74b7a":"code","22fd0620":"code","08f10e13":"code","13f4a1c2":"code","780b6223":"code","27a35d85":"code","0b74886b":"code","1ce47b5b":"code","721fb1f0":"code","d0bbc09c":"code","e4a79664":"code","621f86b0":"code","68f03f7a":"code","4f368ee9":"code","7e82661a":"code","28715d6c":"code","cb1dd334":"code","42bfed93":"code","ccd5a7dd":"code","211080c6":"code","f162dab5":"code","d836fde1":"code","2b1ee037":"code","1b2e094f":"code","1bffb862":"code","0f03b09c":"code","9564f240":"markdown","b7a7b7f3":"markdown","7b96b398":"markdown","05634a43":"markdown","f95c3198":"markdown","3eb56385":"markdown","42751e82":"markdown","a58b79d9":"markdown","87ecc683":"markdown","fa18d116":"markdown","b7b11325":"markdown","708692b5":"markdown","13935920":"markdown","3c279993":"markdown","eb5b9339":"markdown","003a2bfe":"markdown","9bb292ff":"markdown","3b58231b":"markdown","c432d072":"markdown","569e4696":"markdown","2b3b5303":"markdown","36c64a42":"markdown","bbed212c":"markdown","54174e77":"markdown"},"source":{"b058d149":"#importing the libraries\nimport pandas as pd \nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.metrics import accuracy_score,confusion_matrix,roc_curve,roc_auc_score\nfrom sklearn.linear_model import LogisticRegression\n\nimport warnings\nwarnings.filterwarnings('ignore')","5c32aaa2":"#load the dataset\nzomato_df = pd.read_csv('\/kaggle\/input\/zomato-bangalore-restaurants\/zomato.csv')\nzomato_df.head()","d77da3c2":"zomato_df.shape","5720d077":"zomato_df.info()  #information about the dataset","242b8744":"zomato_df.describe()","afeb95b5":"zomato_df.columns\n","895f47e2":"# dropping the unnecessary columns\nzomato_df.drop(['url','phone','dish_liked'],axis=1,inplace=True)","3b851908":"#checking duplicate value\nzomato_df.duplicated().sum()","c5ff05b7":"# dropping the duplicates value from the dataset\nzomato_df.drop_duplicates(inplace=True)","b25dcae9":"#missing values\nzomato_df.isnull().sum()","2af681f1":"import missingno as msno\nmsno.bar(zomato_df)\nplt.show()","5e13d218":"zomato_df.info()","87f2a2ba":"# dropping the null value from the dataset\nzomato_df.dropna(how='any',inplace=True)","6edd510a":"zomato_df.info()","355ad5a1":"zomato_df.columns","24ef8c68":"#renaming the columns\nzomato_df=zomato_df.rename(columns={'approx_cost(for two people)':'cost','listed_in(type)':'type','listed_in(city)':'city'})\n\nzomato_df.columns","ad0f7f79":"zomato_df.dtypes","8505f42d":"zomato_df['cost'].unique()","33ba5395":"#Some transformations\nzomato_df['cost']=zomato_df['cost'].astype(str)\nzomato_df['cost'] = zomato_df['cost'].apply(lambda x: x.replace(',','.')) #Using lambda function to replace ',' from cost\nzomato_df['cost'] = zomato_df['cost'].astype(float)","b1d20773":"zomato_df.info()","20e74b7a":"zomato_df['rate'].unique()","22fd0620":"#Removing '\/5' from Rates\nzomato_df = zomato_df.loc[zomato_df.rate !='NEW']\nzomato_df = zomato_df.loc[zomato_df.rate !='-'].reset_index(drop=True)\nremove_slash = lambda x: x.replace('\/5', '') if type(x) == np.str else x\nzomato_df.rate = zomato_df.rate.apply(remove_slash).str.strip().astype('float')\nzomato_df['rate'].head() # looking at the dataset after transforma","08f10e13":"# Adjust the column names\nzomato_df.name = zomato_df.name.apply(lambda x:x.title())\nzomato_df.online_order.replace(('Yes','No'),(True, False),inplace=True)\nzomato_df.book_table.replace(('Yes','No'),(True, False),inplace=True)\nzomato_df.head() # looking at the dataset after transformation","13f4a1c2":"#Encode the input Variables\ndef Encode(zomato_df):\n    for column in zomato_df.columns[~zomato_df.columns.isin(['rate', 'cost', 'votes'])]:\n        zomato_df[column] = zomato_df[column].factorize()[0]\n    return zomato_df\n\nzomato_en = Encode(zomato_df.copy())\nzomato_en.head()","780b6223":"#Get Correlation between different variables\ncorr = zomato_en.corr(method='kendall')\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)\nzomato_en.columns","27a35d85":"sns.countplot(zomato_df['online_order'])\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants delivering online or not')","0b74886b":"labels = [\"Accepted\",'Not Accepted']\nvalues = zomato_df['online_order'].value_counts().values\nfig1, ax1 = plt.subplots()\ncolors = ['pink', 'skyblue']\nax1.pie(values, labels=labels, autopct='%1.1f%%',shadow=True,startangle=90,colors=colors)\nplt.title('Online order')\nplt.show()","1ce47b5b":"sns.countplot(zomato_df['book_table'])\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants allowing table booking or not')","721fb1f0":"plt.rcParams['figure.figsize'] = (13, 9)\nY = pd.crosstab(zomato_df['rate'], zomato_df['book_table'])\nY.div(Y.sum(1).astype(float), axis = 0).plot(kind = 'bar', stacked = True,color=['red','yellow'])\nplt.title('table booking vs Normal rate', fontweight = 30, fontsize = 20)\nplt.legend(loc=\"upper right\")\nplt.show()","d0bbc09c":"sns.countplot(zomato_df['city'])\nsns.countplot(zomato_df['city']).set_xticklabels(sns.countplot(zomato_df['city']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(13,13)\nplt.title('Location wise count for restaurants')","e4a79664":"loc_plt=pd.crosstab(zomato_df['rate'],zomato_df['rest_type'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Rest type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Rest type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend().remove();","621f86b0":"sns.countplot(zomato_df['type'])\nsns.countplot(zomato_df['type']).set_xticklabels(sns.countplot(zomato_df['type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Type of Service')","68f03f7a":"type_plt=pd.crosstab(zomato_df['rate'],zomato_df['type'])\ntype_plt.plot(kind='bar',stacked=True);\nplt.title('Type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');","4f368ee9":"fig = plt.figure(figsize=(20,7))\nloc = sns.countplot(x=\"location\",data=zomato_df, palette = \"Set1\")\nloc.set_xticklabels(loc.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Location\",size=18)\nloc\nplt.title('NO. of restaurants in a Location',size = 20,pad=20)","7e82661a":"fig = plt.figure(figsize=(17,5))\nrest = sns.countplot(x=\"rest_type\",data=zomato_df, palette = \"Set1\")\nrest.set_xticklabels(rest.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Restaurant type\",size=15)\nrest \nplt.title('Restaurant types',fontsize = 20 ,pad=20)","28715d6c":"plt.figure(figsize=(15,7))\nchains=zomato_df['name'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set1')\nplt.title(\"Most famous restaurant chains in Bangaluru\",size=20,pad=20)\nplt.xlabel(\"Number of outlets\",size=15)","cb1dd334":"x = zomato_en.iloc[:,[2,3,5,6,7,8,9,11]]\ny = zomato_en['rate']\n#Getting Test and Training Set\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=353)\nx_train.head()","42bfed93":"#Prepare a Linear Regression Model\nfrom sklearn.linear_model import LinearRegression\nreg=LinearRegression()\nreg.fit(x_train,y_train)\ny_pred=reg.predict(x_test) \n\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","ccd5a7dd":"from sklearn.linear_model import Lasso, LassoCV\nlassocv = LassoCV(alphas = None, cv = 10, max_iter = 10000, normalize = True)\nlassocv.fit(x_train, y_train)\n\n","211080c6":"\nlasso = Lasso(alpha = lassocv.alpha_)\nlasso.fit(x_train, y_train)\n\nr2_score(y_test,lasso.predict(x_test))","f162dab5":"from sklearn.tree import DecisionTreeRegressor\n\n\nDTree=DecisionTreeRegressor(min_samples_leaf=.0001)\nDTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)\n\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)\n","d836fde1":"#Preparing Random Forest Regression\nfrom sklearn.ensemble import RandomForestRegressor\nRForest=RandomForestRegressor(n_estimators=500,random_state=329,min_samples_leaf=.0001)\nRForest.fit(x_train,y_train)\ny_predict=RForest.predict(x_test)\n\nr2_score(y_test,y_predict)","2b1ee037":"#Preparing Extra Tree Regression\nfrom sklearn.ensemble import  ExtraTreesRegressor\nETree=ExtraTreesRegressor(n_estimators = 100)\nETree.fit(x_train,y_train)\ny_predict=ETree.predict(x_test)\n\n\nr2_score(y_test,y_predict)","1b2e094f":"from sklearn.ensemble import GradientBoostingRegressor\n\ngbr = GradientBoostingRegressor()\ngbr.fit(x_train, y_train)\n\ny_predict=gbr.predict(x_test)\n\n\n\nr2_score(y_test,y_predict)\n","1bffb862":"from xgboost import XGBRegressor\n\nxgb = XGBRegressor(booster = 'gbtree', learning_rate = 0.1, max_depth = 7, n_estimators = 200)\nxgb.fit(x_train, y_train)\ny_predict=xgb.predict(x_test)\n\nr2_score(y_test,y_predict)\n","0f03b09c":"models = pd.DataFrame({\n    'Model' : ['Linear Regression', 'Lasso Regression', 'Decision Tree', 'Random Forest','Extra Tree Regressor', 'Gradient Boost', 'XgBoost'],\n    'Score' : [reg.score(x_test, y_test), lasso.score(x_test, y_test), DTree.score(x_test, y_test), RForest.score(x_test, y_test), ETree.score(x_test, y_test),\n               gbr.score(x_test, y_test), xgb.score(x_test, y_test)]\n})\n\n\nmodels.sort_values(by = 'Score', ascending = False)","9564f240":"**Most famous Restaurant chains in Bengaluru**","b7a7b7f3":"# MODELS","7b96b398":"**1.LinearRegression**","05634a43":"**6.GradientBoostingRegressor**","f95c3198":"**Pieplot**","3eb56385":"![image.png](attachment:6b84f7f9-30d6-426f-ba88-864d780efc8d.png)","42751e82":"**Restaurants allowing table booking or not**","a58b79d9":"**2.LASSO REGRESSION**","87ecc683":"**4.RandomForestRegressor**","fa18d116":"**7.XGBRegressor**","b7b11325":"# Working on the dataset","708692b5":"**3.DecisionTreeRegressor**","13935920":"**5.ExtraTreesRegressor**","3c279993":"**Restaurant type**","eb5b9339":"**Type and Rating**","003a2bfe":"**No. of Restaurants in a Location**","9bb292ff":"**Restaurants delivering Online or not**","3b58231b":"**Bangalore(officially known as Bengaluru) is the capital and largest city of the Indian state of Karnataka.**\n\nWith a population of over 15 million, Bangalore is the third largest city in India and 27th largest city in the world.\nBangalore is one of the most ethnically diverse cities in the country, with over 51% of the city\u2019s population being migrants from other parts of India.\n\nBangalore is sometimes referred to as the \u201cSilicon Valley of India\u201d(or \u201cIT capital of India\u201d) because of its role as the nation\u2019s leading information technology(IT) exporter.\n\nBangalore has a unique food culture. Restaurants from all over the world can be found here in Bengaluru, with various kind of cuisines.\n\nSome might even say that Bangalore is the best place for foodies.\nThe food industry is always at a rise in Bangalore, with 12,000 plus restaurants currently active in the city, the number is still increasing.\nThe growing number of restaurants and dishes in Bangalore is what attracts me to inspect the data to get some insights, some interesting facts and figures.","c432d072":"**Data Description**\n* url : This feature contains the url of the restaurant on the Zomato website\n* address : This feature contains the address of the restaurant in Bangalore\n* name : This feature contains the name of the restaurant\n* online_order : whether online ordering is available in the restaurant or not\n* book_table : table book option available or not\n* rate : contains the overall rating of the restaurant out of 5\n* votes : contains total number of upvotes for the restaurant\n* phone : contains the phone number of the restaurant\n* location : contains the neighborhood in which the restaurant is located\n* rest_type : restaurant type\n* dish_liked : dishes people liked in the restaurant\n* cuisines : food styles, separated by comma\n* approx_cost(for two people) : contains the approximate cost of meal for two people\n* reviews_list : list of tuples containing reviews for the restaurant, each tuple consists of two values, rating and review by the customer\n* menu_item : contains list of menus available in the restaurant\n* listed_in(type) : type of meal\n* listed_in(city) : contains the neighborhood in which the restaurant is located\n","569e4696":"**Gaussian Rest type and Rating**","2b3b5303":"# Exploratory Data Analysis","36c64a42":"**Types of Services**","bbed212c":"**Location**","54174e77":"**Table booking Rate vs Normal Rate**"}}