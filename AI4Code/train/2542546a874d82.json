{"cell_type":{"1344aa57":"code","7646a5fb":"code","760e210f":"code","773b236b":"code","f43cdf0b":"code","e07a8362":"markdown"},"source":{"1344aa57":"import math\n\n#A function to calculate Root Mean Squared Logarithmic Error (RMSLE)\ndef rmsle(y, y_pred):\n    assert len(y) == len(y_pred)\n    terms_to_sum = [(math.log(y_pred[i] + 1) - math.log(y[i] + 1)) ** 2.0 for i,pred in enumerate(y_pred)]\n    return (sum(terms_to_sum) * (1.0\/len(y))) ** 0.5","7646a5fb":"# Smaller numbers\ntarget = [30, 40, 50, 60]\ntwenty_percent_lesser = [24, 32, 40, 48]\ntwenty_percent_more = [36, 48, 60, 72]\nrmsle(target, twenty_percent_lesser), rmsle(target, twenty_percent_more)","760e210f":"# Big numbers  *10^6\ntarget = [30000000, 40000000, 50000000, 60000000]\ntwenty_percent_lesser = [24000000, 32000000, 40000000, 48000000]\ntwenty_percent_more = [36000000, 48000000, 60000000, 72000000]\nrmsle(target, twenty_percent_lesser), rmsle(target, twenty_percent_more)","773b236b":"# Smaller percent - 10%\ntarget = [30000000, 40000000, 50000000, 60000000]\nten_percent_lesser = [27000000, 36000000, 45000000, 54000000]\nten_percent_more = [33000000, 44000000, 55000000, 66000000]\nrmsle(target, ten_percent_lesser), rmsle(target, ten_percent_more)","f43cdf0b":"# Higher percent - 40%\ntarget = [30000000, 40000000, 50000000, 60000000]\nforty_percent_lesser = [18000000, 24000000, 30000000, 36000000]\nforty_percent_more = [42000000, 56000000, 70000000, 84000000]\nrmsle(target, forty_percent_lesser), rmsle(target, forty_percent_more)","e07a8362":"**Conclusion: You are penalised more if your prediction is x% less than the actual value, compared to when your prediction is x% higher than the prediction value. "}}