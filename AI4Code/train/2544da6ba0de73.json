{"cell_type":{"aa2bc310":"code","e2e5b6a1":"code","b7435507":"code","9daa90fc":"code","90960764":"code","d1569d13":"code","73437114":"code","d0cb4162":"code","e14f3aca":"code","c70d9edd":"code","d7c8c337":"code","e7484c8d":"code","c2eb2ca1":"code","e7d22b1b":"code","c908fb5b":"code","b805c6ff":"code","a1e08669":"code","67256eae":"code","d31e0121":"code","a026382f":"code","40ace305":"code","c0ead60d":"code","2d99e37d":"markdown","1d3157f5":"markdown"},"source":{"aa2bc310":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport os","e2e5b6a1":"# tpu = tf.distribute.cluster_resolver.TPUClusterResolver()\n# if tpu:\n#     tf.config.experimental_connect_to_cluster(tpu)\n#     tf.tpu.experimental.initialize_tpu_system(tpu)\n#     strategy = tf.distribute.experimental.TPUStrategy(tpu)\n# else:\n#     strategy = tf.distribute.get_strategy()","b7435507":"dandelion = \"..\/input\/dandelionimages\/Images\/dandelion\/\"\nother = \"..\/input\/dandelionimages\/Images\/other\/\"","9daa90fc":"dataset_length = min(len(os.listdir(dandelion)),len(os.listdir(other)))\ndataset_length","90960764":"p = [{\"name\":dandelion + os.listdir(dandelion)[i],\"label\":1} for i in range(dataset_length)]\nq = [{\"name\":other + os.listdir(other)[i],\"label\":0} for i in range(dataset_length)]","d1569d13":"data_1 = pd.DataFrame(p)\ndata_2 = pd.DataFrame(q)","73437114":"frames = [data_1, data_2]\ndf = pd.concat(frames)","d0cb4162":"df = df.sample(frac=1).reset_index(drop=True)","e14f3aca":"df","c70d9edd":"_, axs = plt.subplots(5, 5, figsize=(12, 12))\naxs = axs.flatten()\nimg_ = [df.name.values[np.random.randint(len(df.name.values))] for i in range(25)]\nfor img, ax in zip(img_, axs):\n    ax.imshow(Image.open(img))\nplt.show()","d7c8c337":"#hyperparamets\nbatch_size = 8\ndropout = 0.2\nlr = 1e-3\ndecay_steps = 100\ndecay_rate = 0.96\nepochs = 20","e7484c8d":"def get_image(path):\n    image = tf.image.decode_jpeg(tf.io.read_file(path),channels=3)\n    image = tf.cast(tf.image.resize_with_pad(image,299,299),dtype=tf.float32)\n    return tf.keras.applications.inception_v3.preprocess_input(image)","c2eb2ca1":"def process_dataset(path, label):\n    return get_image(path), label","e7d22b1b":"def get_dataset(x, y=None):\n    if y is not None:\n        ds = tf.data.Dataset.from_tensor_slices((x, y))\n        return ds.map(process_dataset, num_parallel_calls=tf.data.experimental.AUTOTUNE).batch(batch_size).prefetch(buffer_size=tf.data.experimental.AUTOTUNE)\n    else:\n        ds = tf.data.Dataset.from_tensor_slices(x)\n        return ds.map(get_image, num_parallel_calls=tf.data.experimental.AUTOTUNE).batch(batch_size).prefetch(buffer_size=tf.data.experimental.AUTOTUNE)","c908fb5b":"from sklearn.model_selection import train_test_split\nx_train,x_valid,y_train,y_valid = train_test_split(df.name.values,df.label.values,test_size=0.02,random_state=5)","b805c6ff":"train_ = get_dataset(x_train,y_train) \nvalid_ = get_dataset(x_valid,y_valid) ","a1e08669":"# with strategy.scope():\nmodel_in = tf.keras.applications.InceptionV3(weights='imagenet')\nmodel_in.trainable = False\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Input(shape=(229, 229, 3)),\n    tf.keras.layers.experimental.preprocessing.RandomFlip(mode=\"horizontal_and_vertical\"),\n    model_in,\n    tf.keras.layers.BatchNormalization(),\n    tf.keras.layers.Dropout(dropout, name='top_dropout'),\n    tf.keras.layers.Dense(32, activation='elu'),\n    tf.keras.layers.Dense(1)\n])","67256eae":"model.compile(optimizer='adam',loss=\"binary_crossentropy\",metrics=['accuracy'])","d31e0121":"lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(\n    initial_learning_rate=lr,\n    decay_steps=decay_steps, decay_rate=decay_rate,staircase=True)\n\nearly_stop = tf.keras.callbacks.EarlyStopping(\n    monitor='val_loss', patience=5, restore_best_weights=True)\nlr = tf.keras.callbacks.LearningRateScheduler(lr_schedule)","a026382f":"history=model.fit(train_,validation_data=valid_,\n                  epochs=epochs,verbose=1,callbacks=[early_stop,lr],use_multiprocessing=True, workers=-1)","40ace305":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.show()","c0ead60d":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.show()","2d99e37d":"![](https:\/\/images.unsplash.com\/photo-1544954412-78da2cfa1a0c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2071&q=80)","1d3157f5":"Thanks For Watching notebook , Enjoy Machine learning \ud83e\udd17"}}