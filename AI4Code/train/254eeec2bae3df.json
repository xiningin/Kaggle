{"cell_type":{"7e104d1f":"code","47478657":"code","6b77e6bb":"code","1e315ff0":"code","e674f23f":"code","20c464dc":"code","a8d405fb":"code","3bf6b910":"code","b0909623":"code","2389ec86":"code","004b4376":"code","78a854ae":"code","3f3681dc":"code","af98f917":"code","4104750c":"code","ca29e8c9":"code","67877399":"code","128ec958":"code","c6e6e2bc":"code","db55994e":"code","5e548531":"code","18be90e9":"code","6e53f4b0":"code","4d2b5035":"code","caaabc98":"code","60587264":"code","c402098f":"code","e14361f4":"code","3d7c9dbf":"code","8baa7b8c":"code","d9c09fb1":"code","ec9cd7f1":"code","a4aeb2ee":"code","ad231545":"code","eba31660":"code","8d7d69ee":"code","f0404eeb":"code","c9ddefc9":"code","d3c5566b":"code","882f35cb":"code","ed40ed8d":"code","a38dec79":"code","1c6fcb47":"code","a83e0806":"markdown","eac4b567":"markdown","e20d9cd4":"markdown","311a70da":"markdown","4a980138":"markdown","e88c87b6":"markdown","dc9a2c85":"markdown"},"source":{"7e104d1f":"import pandas as pd\nimport numpy as np\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47478657":"pip install xlrd","6b77e6bb":"pip install openpyxl","1e315ff0":"Monthly_Flex=pd.read_excel(r'\/kaggle\/input\/world-championship\/ModelOff 2014 world championship part 1.xlsx', sheet_name = 'Sheet1')","e674f23f":"Usage_info=pd.read_excel(r'\/kaggle\/input\/world-championship\/ModelOff 2014 world championship part 1.xlsx', sheet_name = 'Usage')","20c464dc":"No_Flex=pd.read_excel(r'\/kaggle\/input\/world-championship\/ModelOff 2014 world championship part 1.xlsx', sheet_name = 'Sheet2',)","a8d405fb":"Hourly_Flex=pd.read_excel(r'\/kaggle\/input\/world-championship\/ModelOff 2014 world championship part 1.xlsx', sheet_name = 'Sheet3',)","3bf6b910":"Monthly_Flex","b0909623":"Monthly_Flex.rename(columns = {\"Monthly Flex\":\"month\"}, inplace = True)","2389ec86":"Monthly_Flex.rename(columns = {\"Unnamed: 1\":\"count\"}, inplace = True)\nMonthly_Flex.rename(columns = {\"Unnamed: 2\":\"watt\"}, inplace = True)","004b4376":"Monthly_Flex=Monthly_Flex.dropna()\nMonthly_Flex","78a854ae":"No_Flex.rename(columns = {\"Unnamed: 1\":\"count\"}, inplace = True)\nNo_Flex.rename(columns = {\"Unnamed: 2\":\"watt\"}, inplace = True)","3f3681dc":"No_Flex=No_Flex.dropna()","af98f917":"No_Flex","4104750c":"Hourly_Flex.rename(columns = {\"Unnamed: 1\":\"count\"}, inplace = True)","ca29e8c9":"Hourly_Flex.rename(columns = {\"Unnamed: 2\":\"watt\"}, inplace = True)","67877399":"Hourly_Flex=Hourly_Flex.dropna()","128ec958":"Hourly_Flex","c6e6e2bc":"Usage_info","db55994e":"data=Usage_info.iloc[:,0].str.split('M',1, expand=True)\ndata.columns = ['hour', '1']\ncleaned_data=data[['hour']]\ncleaned_data","5e548531":"data=data['1'].str.split('_', 1, expand=True)\ndata.columns = ['date', 'kwh']\ncleaned_data['date']=data['date']\ncleaned_data['kwh']=data['kwh']\ncleaned_data.head(3)","18be90e9":"cleaned_data['hour']=cleaned_data['hour'].str.replace('_','').str.replace(' ','').astype(str) + 'M'\ncleaned_data['kwh']=cleaned_data['kwh'].str.replace('_','').str.replace('kwh','').astype(float)\ncleaned_data.head(3)","6e53f4b0":"cleaned_data","4d2b5035":"import dateutil","caaabc98":"cleaned_data['date']=cleaned_data['date'].apply(dateutil.parser.parse)\ncleaned_data['date']=pd.to_datetime(cleaned_data['date'])\ncleaned_data['weekdays']=cleaned_data['date'].dt.weekday\ncleaned_data","60587264":"cleaned_data['kwh'].mean()","c402098f":"cleaned_data['month']=cleaned_data['date'].dt.month\nFevral=cleaned_data[cleaned_data['month']==2]","e14361f4":"Fevral['kwh'].mean()","3d7c9dbf":"cleaned_data.max()","8baa7b8c":"cleaned_data['month']=cleaned_data['date'].dt.month_name()","d9c09fb1":"Monthly=cleaned_data.groupby('month')[['kwh']].sum().reset_index()","ec9cd7f1":"x=pd.merge(Monthly_Flex,Monthly,on='month')\nx['cost']=x['kwh']*x['count']\nx['cost'].sum()","a4aeb2ee":"import dateutil","ad231545":"Hourly_Flex","eba31660":"Hourly_Flex.rename(columns = {\"Hourly Flex\":\"hour\"}, inplace = True)\nHourly_Flex['hour']=Hourly_Flex['hour'].str.split('M',1,expand=True)\nHourly_Flex['hour']=Hourly_Flex['hour']+'M'\nHourly_Flex","8d7d69ee":"cleaned_data","f0404eeb":"dt1=cleaned_data.groupby('hour')[['kwh']].sum().reset_index()\ndt1","c9ddefc9":"man\u0131s=pd.merge(dt1, Hourly_Flex,on='hour')\nman\u0131s['cost']=man\u0131s['count']*man\u0131s['kwh']\nman\u0131s['cost'].sum()","d3c5566b":"cleaned_data.groupby('hour')[['kwh']].mean().sort_values('kwh',ascending=False)","882f35cb":"up=cleaned_data[(cleaned_data['hour']=='6PM')|(cleaned_data['hour']=='7PM')|(cleaned_data['hour']=='8PM')|(cleaned_data['hour']=='5PM')]\nup.groupby('date')[['kwh']].sum().sort_values('kwh',ascending=False)","ed40ed8d":"No_Flex.mean()","a38dec79":"Hourly_Flex.mean()","1c6fcb47":"Monthly_Flex.mean()","a83e0806":"![image.png](attachment:7f26c492-5b59-4758-b956-f330a6529193.png)\nvariant: B","eac4b567":"![image.png](attachment:518895fb-ed9f-43d2-89a6-3700db9da6bf.png)\nvariant: C","e20d9cd4":"![image.png](attachment:98715aad-5d59-4295-8a4f-326c63e38af2.png)\nvariant: A","311a70da":"![image.png](attachment:dcb2a222-cf31-43d5-b3db-37a40d64337b.png)\nvariant: B","4a980138":"![image.png](attachment:bef915cc-eb69-45b0-a51c-1651e979cd66.png)\nvariant: A ","e88c87b6":"![image.png](attachment:a6939d2c-d218-4f5c-9ae2-402cca113cb3.png)\nvariant: D","dc9a2c85":"![image.png](attachment:b26ff5b7-6ed3-4a0f-8a26-70959a9f5d99.png)\nVariant: A"}}