{"cell_type":{"28187a6c":"code","4d028cde":"code","08db5743":"code","c233e39a":"code","36c5b924":"code","f8d1a761":"code","ae8e1948":"code","959da234":"code","a49b03cd":"code","24ebdaec":"code","5c3175df":"code","143d8c9b":"code","5a749bbe":"code","1a38bfcd":"code","8a4b40e7":"code","e97d4d70":"code","1a7e3b9f":"code","f98da344":"code","7d04b9ef":"markdown","668ec265":"markdown","94455424":"markdown","3f202f37":"markdown","d508abaf":"markdown","54200cbc":"markdown","b7a33fcd":"markdown","21c55e45":"markdown","dad6a6a7":"markdown","d2c1209f":"markdown","4ea62147":"markdown","e3608bb3":"markdown","274ae10f":"markdown"},"source":{"28187a6c":"import numpy as np\nimport pandas as pd \nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nimport matplotlib.pyplot as plt\nimport os","4d028cde":"all_sources_metadata = pd.read_csv('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/all_sources_metadata_2020-03-13.csv')","08db5743":"all_sources_metadata.head()","c233e39a":"spread_data = all_sources_metadata[all_sources_metadata['abstract'].str.contains('geographic spread', na = False)]","36c5b924":"spread_data.head(1)","f8d1a761":"for dirname, _, filenames in os.walk('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset'):\n    for filename in filenames:\n        if '210a892deb1c61577f6fba58505fd65356ce6636' == filename[:-5]:\n            print(filename[:-5])","ae8e1948":"import json\nwith open('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/comm_use_subset\/comm_use_subset\/210a892deb1c61577f6fba58505fd65356ce6636.json') as f:\n    first_paper = json.load(f)\n    print('keys of document:', first_paper.keys())","959da234":"len(first_paper['body_text'])","a49b03cd":"print(first_paper['body_text'][0])","24ebdaec":"first_full_text = \"\"\nfor item in first_paper['body_text']:\n    first_full_text += item['text']","5c3175df":"import nltk.data\n\ntokenizer = nltk.data.load('tokenizers\/punkt\/english.pickle')\nfisrt_text_sentences = tokenizer.tokenize(first_full_text)\nprint('\\n-----\\n'.join(fisrt_text_sentences))","143d8c9b":"import re\npattern1 = r\"\\[.*?\\]\"\nfisrt_text_sentences = tokenizer.tokenize(re.sub(pattern1, '', ' '.join(fisrt_text_sentences)))\nprint('\\n-----\\n'.join(fisrt_text_sentences))","5a749bbe":"def hasNumbers(inputString):\n    return any(char.isdigit() for char in inputString)","1a38bfcd":"fisrt_text_sentences = filter(hasNumbers, fisrt_text_sentences)\ntext = '\\n-----\\n'.join(fisrt_text_sentences)\nprint(text)","8a4b40e7":"from collections import *\nimport re\n\nCounter(re.findall(r\"[\\w']+\", text.lower()))","e97d4d70":"text_stats = sorted(dict(Counter(re.findall(r\"[\\w']+\", text.lower()))).items(), key=lambda x: x[1], reverse=True)","1a7e3b9f":"from matplotlib.pyplot import figure\nplt.rcParams.update({'font.size': 4})\nfigure(num=None, figsize=(24, 6), dpi=80)\nax = plt.bar(*zip(*text_stats), color='red', width=0.2)\nticks = plt.xticks(rotation=90)","f98da344":"topics_indexes = [1, 3, 10, 12, 14, 16, 17, 18, 20, 21, 24, -1]\nfor index in topics_indexes:\n    print(text.split('\\n-----\\n')[index])\n    print('\\n-----\\n')","7d04b9ef":"Select the most important topics from text","668ec265":"Delete numbers in square brackets","94455424":"First of all let's take a closer look at 'body_text'","3f202f37":"* Version: 0001\n* Last updated: 18.03.2020","d508abaf":"It's an array","54200cbc":"Find it","b7a33fcd":"# All imports","21c55e45":"Select all data about geographic spread","dad6a6a7":"# Intro","d2c1209f":"Let's take a look at first document","4ea62147":"Get sentences that contain numbers","e3608bb3":"Choose only text from each ","274ae10f":"Load it"}}