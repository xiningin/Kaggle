{"cell_type":{"626183d2":"code","7cbccb9e":"code","a75c8fa7":"code","031ef025":"code","356ec5f5":"markdown"},"source":{"626183d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7cbccb9e":"#This code targets identifying the prime number\n#for non-prime number, the code shall indicate the factors.\n\ncheck_prime = [35, 17, 20, 33, 1]\nfactors=[2,3,5,7]\nselected_prime=[]\nselected_factor={}\n## write your code here\nfor prime in check_prime:\n    for factor in factors:\n        if prime%factor==0:\n            selected_factor[prime]=factor\n    if len(selected_factor)>0:\n        print(\"{} is not a prime number, because {} is a factor of {}\".format(prime,selected_factor.get(prime),prime))\n        selected_factor={}\n    else:\n        print(\"{} is a prime number\".format(prime))","a75c8fa7":"#This code adds headlines to the news ticker with a maximum of 140 characters\n\nheadlines = [\"Local Bear Eaten by Man\",\n             \"Legislature Announces New Laws\",\n             \"Peasant Discovers Violence Inherent in System\",\n             \"Cat Rescues Fireman Stuck in Tree\",\n             \"Brave Knight Runs Away\",\n             \"Papperbok Review: Totally Triffic\"]\n\nnews_ticker = \"\"\n\n# write your loop here\nfor headline in headlines:\n    if len(news_ticker)<=140:\n        title_list=headline.split()\n        #print(title_list)\n        for title in title_list:\n            if title==title_list[0] and len(news_ticker+title)<=140:\n                title=\"\"+title\n                news_ticker+=title+\" \"\n                len_news=len(news_ticker)\n                #print(\"News Ticker Length is{}\".format(len_news))\n            elif title!=title_list[0] and len(news_ticker+title)<=140:\n                news_ticker+=title+\" \"\n                len_news=len(news_ticker)\n                #print(\"News Ticker Length is{}\".format(len_news))\n    else:\n        break\n        \nprint(news_ticker)\nprint(\"News Ticker Length is {}\".format(len_news))","031ef025":"# This code adds the odd numbers only within the numbers list\n\nnum_list = [422, 136, 524, 85, 96, 719, 85, 92, 10, 17, 312, 542, 87, 23, 86, 191, 116, 35, 173, 45, 149, 59, 84, 69, 113, 166]\n\ncount_odd = 0\nlist_sum = 0\ni = 0\nlen_num_list = len(num_list)\n\nwhile (count_odd < 5) and (i < len_num_list): \n    if num_list[i] % 2 != 0:\n        list_sum += num_list[i]\n        count_odd += 1\n    i += 1\n\nprint (\"The numbers of odd numbers added are: {}\".format(count_odd))\nprint (\"The sum of the odd numbers added is: {}\".format(list_sum)) ","356ec5f5":"**This notebook is recording the corde work done during the eFWD course track.**"}}