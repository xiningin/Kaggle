{"cell_type":{"5a18a801":"code","2396321e":"code","0330cedf":"code","1313a381":"code","66737fb8":"code","e6ec838e":"code","5e81fbc7":"code","eb7ae1f0":"code","608183fe":"code","e4b8e0ab":"code","355ab92a":"code","15853378":"code","2ebc7c39":"code","d9de6b77":"code","74b58e83":"code","2ec68f5e":"code","9083abec":"code","1b984a57":"code","81228d07":"code","36ff537c":"code","908afded":"code","69f74ebf":"code","c83e8fff":"code","53b19676":"code","19e0b194":"code","0b33d91a":"code","192e280e":"code","499c1012":"code","6dc0ba92":"code","d3bc356a":"code","28f179d3":"markdown","28260144":"markdown","02a76f52":"markdown","b561dcbc":"markdown","4a346c7e":"markdown","3fe2519b":"markdown","6ae17e82":"markdown","a9fa1a5d":"markdown","ecf196b7":"markdown","d7fb2b9d":"markdown"},"source":{"5a18a801":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2396321e":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadspalestinecsv\/palestine.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'palestine.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","0330cedf":"df.isnull().sum() ","1313a381":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Governorate)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Reds', background_color=\"green\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","66737fb8":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"Governorate\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"RdYlGn\"))\nplt.title('State of Palestine Covid-19',\n         fontsize=15);","e6ec838e":"fig = px.bar(df, x= \"Date\", y= \"Deaths\", color_discrete_sequence=['crimson'], title=\"Palestine's Deaths by Covid-19\")\nfig.show()","5e81fbc7":"fig = px.bar(df, x= \"Date\", y= \"Cases\", color_discrete_sequence=['black'], title=\"Palestine's Covid-19 Cases\")\nfig.show()","eb7ae1f0":"fig = px.bar(df, x= \"Date\", y= \"Recoveries\", color_discrete_sequence=['darkseagreen'], title=\"Palestine's Covid-19 Recoveries\")\nfig.show()","608183fe":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdGy(np.linspace(0,1,20))\ndf[\"Governorate\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Deaths\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"\")\nplt.axis(\"off\")\nplt.show()","e4b8e0ab":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('Governorate').size()\/df['Cases'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values,marker_colors = px.colors.sequential.speed, hole=.6)])\nfig.show()","355ab92a":"fig = px.pie(df,\n             values=\"Deaths\",\n             names=\"Governorate\",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","15853378":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['Governorate'], palette='RdYlGn')\nplt.xlabel(\"Governorate\")\nplt.ylabel(\"Count\")\nplt.title(\"State of Palestine Covid-19\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","2ebc7c39":"# categorical features with missing values\ncategorical_nan = [feature for feature in df.columns if df[feature].isna().sum()>0 and df[feature].dtypes=='O']\nprint(categorical_nan)","d9de6b77":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    df[feature] = df[feature].fillna('None')","74b58e83":"df[categorical_nan].isna().sum()","2ec68f5e":"import plotly.express as px\n\nfig = px.scatter(df, x=\"Date\", y=\"Deaths\", color=\"Governorate\")\nfig.show()","9083abec":"!pip install dabl\nimport dabl","1b984a57":"dabl.detect_types(df)","81228d07":"dabl.plot(df, target_col=\"Governorate\")","36ff537c":"fig = go.Figure();\nfig.add_trace(go.Scatter(x = df['Governorate'].head(10),y = df['Deaths'],\n                    mode='lines+markers',\n                    name='Deaths'));\n\nfig.update_traces(mode='lines+markers', marker_line_width=2, marker_size=10);\n\nfig.update_layout(autosize=False, width=1000,height=700, legend_orientation=\"h\");\n\nfig.show();","908afded":"fig = px.treemap(df, path=['Governorate'], values='Deaths',\n                  color='Deaths', hover_data=['Governorate'],\n                  color_continuous_scale='RdYlGn')\nfig.show()","69f74ebf":"from fbprophet import Prophet\ndf1=df.rename(columns={\"Date\": \"ds\", \"Deaths\": \"y\"})\ndf1\nm = Prophet()\nm.fit(df1)","c83e8fff":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","53b19676":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","19e0b194":"fig1 = m.plot(forecast)","0b33d91a":"fig2 = m.plot_components(forecast)","192e280e":"from fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","499c1012":"_ = pd.pivot_table(df, values='Deaths', index='Date').plot(style='-o', title=\"State of Palestine & Covid19\")\nplt.xticks(rotation=45)","6dc0ba92":"# 3D Scatter Plot\nfig = px.scatter_3d(df, x='Deaths', y='Cases', z='Governorate', template=\"plotly_dark\")\nfig.show()","d3bc356a":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Stick around, I will be right back. @mpwolke' )","28f179d3":"#Codes from attollos https:\/\/www.kaggle.com\/attollos\/time-series-forecast-example-with-prophet\/","28260144":"#Categorical features(handling missing data)","02a76f52":"![](https:\/\/peacemakermediators.files.wordpress.com\/2020\/05\/99011258_2915065441876506_5851630299254882304_n.jpg?w=768)https:\/\/peacemakers.ngo\/2020\/05\/22\/the-double-lockdown\/","b561dcbc":"#Palestine extends state of emergency due to pandemic (05, September 2020)\n\nCountry extends lockdown for 7th time. According to the latest coronavirus data, the confirmed cases in the occupied territories reached 32,817.\n\nOut of the 32,817 cases, 24,445 are recorded in the West Bank, 697 in the Gaza Strip and 7,675 in East Jerusalem.\n\nThe recoveries have totaled 22,362, and the death toll reached 192. http:\/\/www.xinhuanet.com\/english\/2020-09\/05\/c_139343616.htm","4a346c7e":"#If I choose Deaths (only integer) it would be Regression. Then I tried Governorate as target and it's Classification(?)\n\nIn fact, I only wanted to see their names.","3fe2519b":"#Codes from Carl MacBride Ellis https:\/\/www.kaggle.com\/carlmcbrideellis\/absolute-beginners-titanic-eda-using-dabl","6ae17e82":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcR_7zOiL3KFIT2BaV-8r_VUmJPbZGd4XA5cUg&usqp=CAU)ochaopt.org","a9fa1a5d":"#Codes from Mysterious Ben https:\/\/www.kaggle.com\/myster\/eda-prophet-winning-solution-3-0","ecf196b7":"#Different Pies. Better no Explode (Pie) or Sunburst anything similar here. Besides, I didn't learn them too.","d7fb2b9d":"#Now we are able to plot that scatter. A single missing one was preventing me to plot it."}}