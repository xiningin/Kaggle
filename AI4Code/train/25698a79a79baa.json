{"cell_type":{"eb1477b4":"code","a5222b9f":"code","e5787144":"code","ba414da4":"code","adaa1865":"code","448aacc9":"code","941badf1":"code","a2b19351":"code","b88a969a":"code","96d72a0b":"code","9b42ea8d":"markdown","ee586c76":"markdown","bd0bd25c":"markdown","533f1632":"markdown","436e0b15":"markdown","5250376c":"markdown","7d7fbe40":"markdown","b027a84c":"markdown","dbd81e9d":"markdown"},"source":{"eb1477b4":" # Loading in our sample data.\nimport numpy as np # \nimport pandas as pd # \nimport os\ntrain_df =  pd.read_csv('..\/input\/train.csv', nrows = 1_000_000)","a5222b9f":"# Given a dataframe, add two new features 'abs_diff_longitude' and\n# 'abs_diff_latitude' reprensenting the vector from\n# the pickup location to the dropoff location.\ndef add_travel_vector_features(df):\n    df['abs_diff_longitude'] = (df.dropoff_longitude - df.pickup_longitude).abs()\n    df['abs_diff_latitude'] = (df.dropoff_latitude - df.pickup_latitude).abs()\n\nadd_travel_vector_features(train_df)","e5787144":"print('Old size: %d' % len(train_df))\ntrain_df = train_df.dropna(how = 'any', axis = 'rows')\nprint('New size: %d' % len(train_df))","ba414da4":"### Converting abs_diff_longitude & lattitude to miles...\n# Since we are calculating this at New York, we can assign a constant, rather than using a formula\n# longitude = degrees of latitude in radians * 69.172\n#1 degree of longitude = 50 miles\ndef convert_miles(train_df):\n    train_df['abs_diff_longitude'] = train_df.abs_diff_longitude*50\n    train_df['abs_diff_latitude'] = train_df.abs_diff_latitude*69\nconvert_miles(train_df)","adaa1865":"### Angle difference between north, and manhattan roadways\nmeas_ang = 0.506 # 29 degrees = 0.506 radians\nimport math\n\n##This could be dealt with via a bounding box...\n\n## adding extra features\ndef add_extra_manh_features(df):\n    df['Euclidean'] = (df.abs_diff_latitude**2 + df.abs_diff_longitude**2)**0.5 ### as the crow flies  \n    df['delta_manh_long'] = (df.Euclidean*np.sin(np.arctan(df.abs_diff_longitude \/ df.abs_diff_latitude)-meas_ang)).abs()\n    df['delta_manh_lat'] = (df.Euclidean*np.cos(np.arctan(df.abs_diff_longitude \/ df.abs_diff_latitude)-meas_ang)).abs()\n    df['manh_length'] = df.delta_manh_long + df.delta_manh_lat\n    df['Euc_error'] = (df['manh_length'] - df['Euclidean'])*100 \/  df['Euclidean']\n\nadd_extra_manh_features(train_df)","448aacc9":"# this is a rough way of achieving this, but isn't perfect due to the island's orientation\ndef manh_checker(x):\n    if  40.7091 < x['dropoff_latitude'] < 40.8205 and \\\n    -74.0096 < x['dropoff_longitude'] < -73.9307 and \\\n    40.7091 < x['pickup_latitude'] < 40.8205 and \\\n    -74.0096 < x['pickup_longitude'] < -73.9307:\n        return 1\n    else:\n        return 0\n    \ntrain_df['manh_island'] = train_df.apply(manh_checker, axis = 1) ","941badf1":"print ( train_df['manh_island'].sum()*100 \/ len(train_df))","a2b19351":"# masking our dataframe to manhattan island\n\nmask = train_df['manh_island'] == 1\ntrain_df = train_df[mask]\n","b88a969a":"### now plot ERROR vs Euclidean\nimport seaborn as sns; sns.set(style=\"white\", color_codes=True)\nimport matplotlib.pyplot as plt\n\ng = sns.jointplot(x= train_df['Euclidean'], y= train_df['Euc_error']).set_axis_labels(\"Euclidean distance (miles)\", \"Percentage error (vs Manhattan distance)\")\n\n\n","96d72a0b":"\n\ntrain_df['old_manh'] = train_df['abs_diff_latitude'] + train_df['abs_diff_longitude']\ntrain_df['old_manh_error'] = (train_df['manh_length'] - train_df['old_manh'])*100 \/  train_df['old_manh']\n\ng = sns.jointplot(x= train_df['old_manh'], y= train_df['old_manh_error']).set_axis_labels(\"Old Manhattan distance (miles)\", \"Percentage error (vs new Manhattan distance)\")","9b42ea8d":"**Step 1 - Calculate the difference in degrees longitude and latitude between pickup & dropoff.** \n\n","ee586c76":"So 79% of all journeys start and end in (or slighlty around) Manhattan island..","bd0bd25c":"So from the plot above we can see the percentage error between our \"true\"\/Manhattan distance, and the Euclidean distance.\n\nFinally, lets have a look at how our corrected Manhattan distance compares to uncorrected.","533f1632":"**Step 2 - Translate these values into distances (miles)**\n\n\n1 degree of Latitude is equal to 69 miles.\n\nLongitude vs miles varies depending where we are in the world.\n\nAt the latitude of Manhattan, 1 degree of longitude is equal to approximately 50 miles.\n","436e0b15":"**Step 3 - Use trigonometry to correct our distances**\n\n\n\n","5250376c":"**Overview of Steps**\n\nThe steps i'm going to take next are:\n1. - Calculate the difference in degrees longitude and latitude between pickup & dropoff.\n2. - Translate these values into distances (miles)\n3. - Use trigonometry to calculate our corrected Manhattan distance","7d7fbe40":"** Step 4 (Next steps & Calculating the impact)**\n\nFirstly, we want to limit the scope of these measurements to journeys staying within Manhattan.","b027a84c":"Removing NaNs for good measure.","dbd81e9d":"**Calculating \" Corrected Manhattan Distance\" (Approximating actual distance travelled)**\n\nIn a city block it may be more accurate to estimate total distance travelled by using the \"Manhattan distance\", rather than  the straight line distance between two points (Euclidean distance). \n\nhttps:\/\/en.wikipedia.org\/wiki\/Taxicab_geometry\n\nThe difficult part here is that although Manhattan island is arranged in blocks, it is tilted at approximately 29 degrees clockwise from north.  - Therefore we need to calculate a corrected distance!\n\n<img src=\"https:\/\/i.imgur.com\/ZPlvFzO.png\" \/>"}}