{"cell_type":{"d84a2480":"code","032bd941":"code","5df90636":"code","c19f8d1c":"code","68fb903d":"code","5809237b":"code","25500e73":"code","1e6d2e72":"code","b117e642":"code","a8fb9d9f":"code","2fafe152":"code","5a3b99ce":"code","71c6307b":"code","317118a8":"code","f44b921e":"code","11fc0bde":"code","addf0391":"code","6d40e051":"code","ef91b06b":"code","1546100c":"markdown","033b3f83":"markdown","6114d192":"markdown","dcfd44f7":"markdown","b497623c":"markdown","a3fd88b9":"markdown"},"source":{"d84a2480":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nimport plotly.graph_objs as go\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","032bd941":"!pip install dataprep","5df90636":"df = pd.read_csv(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\", low_memory=False)\nprint(df.shape)\ndf.head().style.set_properties(**{'background-color':'#8FBC8F',\n                                     'color': 'DarkSlateGrey'})","c19f8d1c":"#Performing EDA with Dataprep in https:\/\/www.kaggle.com\/c\/learnplatform-covid19-impact-on-digital-learning Challenge\n\nfrom dataprep.eda import plot, plot_correlation, create_report, plot_missing","68fb903d":"df1 = pd.read_csv(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\", low_memory=False)\nprint(df1.shape)\ndf1.head().style.set_properties(**{'background-color':'#8FBC8F',\n                                     'color': 'DarkSlateGrey'})","5809237b":"plot(df)","25500e73":"plot(df1)","1e6d2e72":"plot(df, \"Product Name\")","b117e642":"plot(df, \"LP ID\")","a8fb9d9f":"plot(df, \"Provider\/Company Name\",\"Primary Essential Function\")","2fafe152":"plot_missing(df)","5a3b99ce":"import holoviews as hv\nfrom holoviews import opts\nhv.extension('bokeh')","71c6307b":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\nsector_cnt = np.round(df['Sector(s)'].value_counts(normalize=True) * 100)\nhv.Bars(sector_cnt).opts(title=\"Sector Count\", color=\"green\", xlabel=\"Sector\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True)).opts(xrotation=45)","317118a8":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\nloc_cnt = np.round(df1['locale'].value_counts(normalize=True) * 100)\nhv.Bars(loc_cnt).opts(title=\"Locale Count\", color=\"yellow\", xlabel=\"Locale\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True)).opts(xrotation=45)","f44b921e":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\n#Fixed by Des desalegngeb https:\/\/www.kaggle.com\/desalegngeb\n#https:\/\/www.kaggle.com\/desalegngeb\/bokeh-visualization-library-guide-for-beginners\n\nprim_cnt = np.round((df['Primary Essential Function'].value_counts(normalize=True) *100).head()) \nhv.Bars(prim_cnt).opts(title=\"1ary Essential Function Count\", color=\"red\", xlabel=\"1ary Essential function\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True)).opts(xrotation=45)","11fc0bde":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\n#Fixed by Des https:\/\/www.kaggle.com\/desalegngeb\/bokeh-visualization-library-guide-for-beginners\n\nsta_cnt = np.round((df1['state'].value_counts(normalize=True) *100).head())\nhv.Bars(sta_cnt[::-1]).opts(title=\"State Count\", color=\"cyan\", xlabel=\"US States\", ylabel=\"Percentage\", xformatter='%d%%')\\\n                .opts(opts.Bars(width=600, height=600,tools=['hover'],show_grid=True,invert_axes=True))","addf0391":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\n#Fixed by Des https:\/\/www.kaggle.com\/desalegngeb\/bokeh-visualization-library-guide-for-beginners\n\nprov_cnt = np.round((df['Provider\/Company Name'].value_counts(normalize=True) *100).head())\nhv.Bars(prov_cnt[::-1]).opts(title=\"Provider\/Company Count\", color=\"purple\", xlabel=\"Providers\/Companys\", ylabel=\"Percentage\", xformatter='%d%%')\\\n                .opts(opts.Bars(width=600, height=600,tools=['hover'],show_grid=True,invert_axes=True))","6d40e051":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\n#Here the entries have only one count each and the bar graphs will appear flat. I kept [:10].\n\nurl_cnt = np.round(df['URL'].value_counts(normalize=True) [:10])\nhv.Bars(url_cnt[::-1]).opts(title=\"URL Count\", color=\"cyan\", xlabel=\"10 Url\", ylabel=\"Percentage\", xformatter='%d%%')\\\n                .opts(opts.Bars(width=600, height=600,tools=['hover'],show_grid=True,invert_axes=True))","ef91b06b":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\n#Here the entries have only one count each and the bar graphs will appear flat. I kept [:10].\n\nprod_cnt = np.round(df['Product Name'].value_counts(normalize=True) [:10])\nhv.Bars(prod_cnt).opts(title=\"Product Name Count\", color=\"purple\", xlabel=\"Product Name\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True)).opts(xrotation=45)","1546100c":"![](https:\/\/www.globalfocusmagazine.com\/wp-content\/uploads\/2019\/11\/Digital-Learning-infographic.png)globalfocusmagazine.com","033b3f83":"When x and y are both categorical columns, it plots a nested bar chart, stacked bar chart and heat map.\n\nWhen x and y are both numerical columns, it generates a scatter plot, hexbin plot and box plot. Though we don't have two numerical columns here.","6114d192":"#Understand a column with plot(df, x)\n\nAfter getting an overview of the dataset, we can thoroughly investigate a column of interest x using plot(df, x). The output is of plot(df, x) is different for numerical and categorical columns.\n\nWhen x is a categorical column, it computes column statistics, and plots a bar chart and pie chart.\n\nIt Includes WordCloud! Plus Word frequency and length.","dcfd44f7":"#That's all for now.\n\n#Thanks Des, for fixing the code again. \nhttps:\/\/www.kaggle.com\/desalegngeb\/bokeh-visualization-library-guide-for-beginners\n","b497623c":"When x is a numerical column (below), it computes column statistics, and generates a histogram, kde plot, box plot and qq-normal plot:","a3fd88b9":"Dataprep The easiest way to prepare data in Python\n\nDataPrep is free, open-source software released under the MIT license. Anyone can reuse DataPrep code for any purpose.\n\nDataPrep is built using Pandas\/Dask DataFrame and can be seamlessly integrated with other Python libraries.\n\nDataPrep is designed for computational notebooks, the most popular environment among data scientists.\n\nhttps:\/\/dataprep.ai\/"}}