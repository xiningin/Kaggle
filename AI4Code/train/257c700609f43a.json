{"cell_type":{"bdee4930":"code","04147121":"code","111a3237":"code","0e41418d":"code","56558c7a":"code","79a0fd7d":"code","d1061384":"code","0e179c5a":"code","2df7b8db":"code","9c4d7846":"code","fbdc2ccb":"code","5a61287f":"code","c22c946f":"code","491651ce":"code","90cef588":"code","c515eabc":"code","21156b3e":"code","78116779":"code","1960bc29":"code","bbc35ab3":"code","e67ad3cd":"code","a54305ed":"code","09275ea5":"code","b02f449b":"code","335de48e":"code","b41eb9b1":"code","251de87d":"markdown","b8b1df4a":"markdown","da4da0d3":"markdown","58d1377f":"markdown","3bcd49fa":"markdown","7c69fc22":"markdown","fc258357":"markdown","6db71c86":"markdown","92d6b5db":"markdown","ec913ae0":"markdown","ec47cd3a":"markdown","2b07e372":"markdown","c43f6a36":"markdown","df813da1":"markdown"},"source":{"bdee4930":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport pandas as pd \nimport numpy as np\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nimport matplotlib.gridspec as gridspec\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","04147121":"df = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf.head()","111a3237":"df.describe()","0e41418d":"df.rename(columns={'Annual Income (k$)':'Income','Spending Score (1-100)':'Spending_score'},inplace=True)\n","56558c7a":"\n\ngs = gridspec.GridSpec(1, 3)\n\nfig = plt.figure(figsize=(18, 3))\n\n\nfig.text(0.39, 1.09, 'Overall look into data ', \n         fontsize=18, fontweight='bold', fontfamily='serif')\nfig.text(0.25, 1, 'Data looks close to Gaussian Distribution for Income and Spending Score features', \n         fontsize=12, fontweight='light', fontfamily='serif')\n\n\nax1 = fig.add_subplot(gs[0, 0]) \nax1 = sns.distplot(df[\"Income\"],\n                   color='#244747',hist_kws=dict(edgecolor=\"white\", linewidth=2,alpha=0.9))\nax1.set_facecolor(\"white\")\n\n\nax2 = fig.add_subplot(gs[0, 1])\nax2 = sns.distplot(df[\"Spending_score\"],\n                   color='#244747',hist_kws=dict(edgecolor=\"white\", linewidth=2,alpha=0.9))\nax2.set_facecolor(\"white\")\n\n\nax3 = fig.add_subplot(gs[0, 2])\nax3 = sns.distplot(df['Age'],color='#244747',\n                   hist_kws=dict(edgecolor=\"white\", linewidth=2,alpha=0.9))\nax3.set_facecolor(\"white\")\n\n\n\nsns.despine()\n\nplt.subplots_adjust(wspace=0.2)\n\nprint( 'Skewness of normal distribution for Age: {}'.format(stats.skew(df.Age)))\n\nprint( 'Skewness of normal distribution for Income : {}'.format(stats.skew(df.Income)))\n\nprint( 'Skewness of normal distribution for Spending score : {}'.format(stats.skew(df.Spending_score)))\n\n\n\n","79a0fd7d":"values = df['Gender'].value_counts()\nlabels = ['Female','Male']\n\nfig, ax = plt.subplots(figsize = (5,5), dpi = 100)\nexplode = (0.1,0)\n\npatches, texts, autotexts = ax.pie(values, labels = labels, autopct = '%1.1f%%', shadow = True,\n                                   startangle = 90, explode = explode,labeldistance=1.1,colors=['darkorange','skyblue'])\n\n\nplt.show()\n\nprint('There are {} females and {} males'.format(values.Female,values.Male))","d1061384":"df_=df.drop(['Gender','CustomerID'],axis=1) \ndf_corr=df_.corr()","0e179c5a":"heatmap = sns.heatmap(df_corr, vmin=-1, vmax=1, annot=True, cmap=\"Oranges_r\")","2df7b8db":"males_income=df[df.Gender=='Male']['Income']\nfemales_income=df[df.Gender=='Female']['Income']\n\nmy_bins = range(10,150,10)\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18,5))\nsns.distplot(males_income, kde=False, color='#0066ff', ax=ax1, hist_kws=dict(edgecolor=\"k\"))\nax1.set_xticks(my_bins)\nax1.set_yticks(range(0,24,2))\nax1.set_ylim(0,22)\nax1.set_title('Males')\nax1.set_ylabel('Count')\nax1.text(85,14, \"Mean income: {:.1f}k$\".format(males_income.mean()))\nax1.text(85,13, \"Median income: {:.1f}k$\".format(males_income.median()))\nax1.text(85,12, \"Std. deviation: {:.1f}k$\".format(males_income.std()))\nax1.set_facecolor(\"white\")\n\n\nsns.boxplot(x='Gender', y='Income', data=df, ax=ax2)\nax2.set_title('Annual Income')\nax2.text(0.1,100,'Kolgomorov-Smirnov test \\n for two samples income\\n p-value score  {:.2f}'.format(stats.ks_2samp(males_income, females_income)[1]))\nax2.set_facecolor(\"white\")\n\n\n\nsns.distplot(females_income, bins=my_bins, kde=False, color='#cc66ff', ax=ax3, hist_kws=dict(edgecolor=\"k\"))\nax3.set_xticks(my_bins)\nax3.set_yticks(range(0,24,2))\nax3.set_ylim(0,22)\nax3.set_title('Females')\nax3.set_ylabel('Count')\nax3.text(85,14, \"Mean income: {:.1f}k$\".format(females_income.mean()))\nax3.text(85,13, \"Median income: {:.1f}k$\".format(females_income.median()))\nax3.text(85,12, \"Std. deviation: {:.1f}k$\".format(females_income.std()))\n\nax3.set_facecolor(\"white\")\n\nplt.show()","9c4d7846":"males_ss=df[df.Gender=='Male']['Spending_score']\nfemales_ss=df[df.Gender=='Female']['Spending_score']\n\nmy_bins = range(0,105,5)\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18,5))\nsns.distplot(males_ss, kde=False,bins=my_bins,color='#0066ff', ax=ax1, hist_kws=dict(edgecolor=\"k\"))\nax1.set_xticks(my_bins)\nax1.set_yticks(range(0,24,2))\nax1.set_ylim(0,18)\nax1.set_title('Males')\nax1.set_ylabel('Count')\nax1.text(35,16, \"Mean spending score: {:.1f}\".format(males_ss.mean()))\nax1.text(35,15, \"Median spending score: {:.1f}\".format(males_ss.median()))\nax1.text(35,14, \"Std. deviation: {:.1f}\".format(males_ss.std()))\nax1.set_facecolor(\"white\")\n\nsns.boxplot(x='Gender', y='Spending_score', data=df, ax=ax2)\nax2.set_title('Spending Score')\nax2.text(0.1,75,'Kolgomorov-Smirnov test \\n for two samples \\nspending score \\n p-value score  {:.2f}'.format(stats.ks_2samp(males_ss, females_ss)[1]))\nax2.set_facecolor(\"white\")\n\n\nsns.distplot(females_ss, bins=my_bins, kde=False, color='#cc66ff', ax=ax3, hist_kws=dict(edgecolor=\"k\"))\nax3.set_xticks(my_bins)\nax3.set_yticks(range(0,24,2))\nax3.set_ylim(0,18)\nax3.set_title('Females')\nax3.set_ylabel('Count')\nax3.text(50,16, \"Mean spending score: {:.1f}\".format(females_ss.mean()))\nax3.text(50,15, \"Median spending score: {:.1f}\".format(females_ss.median()))\nax3.text(50,14, \"Std. deviation: {:.1f}\".format(females_ss.std()))\n\nax3.set_facecolor(\"white\")\n\n\nplt.show()\n","fbdc2ccb":"X = df[['Spending_score','Income']].iloc[: , :].values\ninertia = []\nfor n in range(1 , 11):\n    algorithm = (KMeans(n_clusters = n , n_init = 10 ,max_iter=500, \n                        tol=0.0001,  random_state= 82) )\n    algorithm.fit(X)\n    inertia.append(algorithm.inertia_)","5a61287f":"   \nfig, ax = plt.subplots(figsize=(12, 8))\nsns.lineplot(x=list(range(1, 11)), y=inertia, ax=ax)\n\nax.set_xlabel('Number of Clusters')\nax.set_ylabel('Inertia')\n\nax.set_title('Inertia Scores for Number of Clusters',size=15)\n\nax.annotate('Elbow point indicates number of clusters that will be choosen', size=13,color='black',xy=(5, 48000), xytext=(4, 150000), xycoords='data',          \n             arrowprops=dict(arrowstyle='->', connectionstyle='arc3', color='red', lw=3))\n\n#plt.style.use('seaborn')\nax.set_facecolor(\"white\")\n#plt.grid()\n\n\nplt.show()","c22c946f":"algorithm = (KMeans(n_clusters = 5 , n_init = 10 ,max_iter=500, \n                        tol=0.0001,algorithm='elkan',random_state= 82) )\nalgorithm.fit(X)\nlabels1 = algorithm.labels_\n\nprint(labels1)","491651ce":"labels_=[]\n\nfor i in labels1:\n    if i==0:\n        labels_.append('low income-high spending score')\n    elif i==1:\n        labels_.append('high income-high spending score')\n    elif i==2:\n        labels_.append('high income-low spending score')\n    elif i==3:\n        labels_.append('mid income-mid spending score')\n    elif i==4:\n        labels_.append('low income-low spending score')\ndf['Labels']=labels_\n\n\nage_group=[]\n\nfor i in df['Age']:\n    if i >=18 and i <=24:\n        age_group.append('18-24 years old')\n    elif i >=25 and i<=35:\n        age_group.append('25-35 years old')\n    elif i >=36 and i <=45:\n        age_group.append('36-45 years old')\n    elif i >=46 and i<=55:\n        age_group.append('46-55 years old')\n    elif i >=56 and i<=70:\n        age_group.append('56-70 years old')\n        \ndf['Age_group']=age_group\ndf.head()","90cef588":"plt.figure(1 , figsize = (15 , 7) )\n\n\nplt.figure(figsize=(12, 8))\nsns.scatterplot(df['Income'], df['Spending_score'], hue=df['Labels'],legend=\"full\",s=150,\n                palette=sns.color_palette(\"Set2\", 5))\nplt.ylabel('Spending Score') , plt.xlabel('Annual Income (k$)')\nplt.show()","c515eabc":"fig = plt.figure(figsize=(20,8))\n\nlabels_1=df.Labels.unique()\n\nax = fig.add_subplot(121)\nsns.swarmplot(x='Age', y='Labels', data=df, ax=ax,palette='Set1_r',size=10,edgecolor='black')\nax.set_yticklabels(labels_1,size=15)\nax.set_title('Clusters with Age')\n\n\nplt.show()","21156b3e":"fig = plt.figure(figsize=(20,8))\n\nlabels_1=df.Labels.unique()\n\nax = fig.add_subplot(121)\nsns.swarmplot(x='Spending_score', y='Labels', data=df, ax=ax,palette='Set1_r',size=10)\nax.set_yticklabels(labels_1,size=15)\nax.set_title('Clusters with Spending Scores')\n\n\n\nplt.show()","78116779":"print('There are {} of customers who are in the group of mid income-mid spending score'.format(len(df[df.Labels=='mid income-mid spending score'])))\n\nprint('There are {} of customers who are in the group of high income-high spending score'.format(len(df[df.Labels=='high income-high spending score'])))\n\nprint('There are {} of customers who are in the group of high income-low spending score'.format(len(df[df.Labels=='high income-low spending score'])))\n\n","1960bc29":"values = [81,39,35,45]\nlabels = ['mid income-mid spending','high income-high spending','high income-low spending','Rest']\n\nfig, ax = plt.subplots(figsize = (5,5), dpi = 100)\n\n\npatches, texts, autotexts = ax.pie(values, labels = labels, autopct = '%1.1f%%', shadow = True,\n                                   startangle = 140,labeldistance=1.1,colors=['darkorange','skyblue','lightgreen','gray'])\nplt.show()\n\n","bbc35ab3":"\nimport plotly.graph_objects as go\n\nheaderColor = 'skyblue'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Groups<\/b>','<b>Age Mean<\/b>','<b>Income Mean<\/b>','<b>Spending Score Mean<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      ['Mid income-mid spending', 'High income-low spending', 'High income-high spending'],\n      [42.71, 41.11, 39.69],\n      [55.29, 88.20, 86.53],\n      [ 49.51,17.11, 82.12]],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*5],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\n\nfig.show()","e67ad3cd":"df3=df[df.Labels=='high income-high spending score'].sort_values(by='Age',ascending=True)\n#df3.describe()\n","a54305ed":"df2=df[df.Labels=='high income-low spending score'].sort_values(by='Age',ascending=True)\ndf2.describe()","09275ea5":"\nage=df2.groupby(['Gender'])['Age'].mean()\nprint('Age mean between genders: ',age)\nprint('Numbers: ',df2.Gender.value_counts())\nprint('Income mean for both genders',df2.groupby(['Gender'])['Income'].mean())\nprint('Spending scores for both genders:',df2.groupby(['Gender'])['Spending_score'].mean())\n","b02f449b":"fig = plt.figure(figsize=(20,8))\n\nlabels_2=df2.Age_group.unique()\n\ndf2.head(7)\n\n","335de48e":"fig = plt.figure(figsize=(20,8))\n\n\n\nax = fig.add_subplot(121)\nsns.countplot(y='Age_group',hue='Gender',data=df2,palette='Blues',edgecolor='white',lw=2.9)\nax.set_facecolor(\"white\")\nplt.grid() \nax.set_title('Cluster of \"High income-low spending score\"')\nplt.plot()","b41eb9b1":"fig = plt.figure(figsize=(20,12))\n\n\n\nsns.catplot(\n    data=df2, kind=\"bar\",\n    x=\"Age_group\", y='Spending_score',col=\"Gender\",\n    ci=\"sd\", palette='summer', alpha=.7, height=9,edgecolor='black'\n)\nsns.despine(left=True) \n#plt.gca().set_facecolor(\"white\")\n\n\n\nplt.plot()","251de87d":"As it can be seen with Pie Chart above, Mid income mid spending score group is vast majority of the all customers in which has 81 people in. ","b8b1df4a":"In the data, there are 200 samples.Data consists of 5 features as costumer id, gender, age, income and spending scores. To see what kind of distribution data has, lets visualize it. ","da4da0d3":"# Conclusion\n\nBetween males and females, there is no considerable differences in terms of income and spending scores in this particular Mall Customer data with general view. Therefore it is not really necessary to focus one gender specifically. \nTwo low income groups should not necessarily be taken into consideration as target groups because even though one of them has good spending score, they do not enough income to be considered.\nMid income group is the largest community of the Mall customers. Although they do not seem like primary target group, still they should be paid attention due to biggest part of the all clients. \nHigh income high spending group  is the prime people of the Mall as they have high incomes and highest spending scores which could be great for the source of profit. As they can be regular customers and happy with the facilities of the Mall, they should be kept satisfied. \nHigh income low spending group seems ideal target for the Mall as the group has highest income and potentially can spend more but interestingly they have the lowest spending score. They might be somewhat unhappy or unsatisfied with services of Mall. In the group, especially 3 sub-groups which are between 25-55 years olds should firstly be aimed to increase the spending","58d1377f":"For clustering, we are going to use K-means which is good unsupervised method especially for this amount of data. We will be doing clustring according to Spending score and Income relations but in this point we could have also tried Spending score- Age features too. ","3bcd49fa":"In terms of spending scores of both genders again statistically there is no significant difference according to P-value of Kolgomorov-Smirnov test which is 0.29 and smaller than 0.05 ( Null-Hypothesis )","7c69fc22":"# Customer Segmentation Task\n\n<img src= \"https:\/\/thecxinsights.com\/wp-content\/uploads\/2021\/03\/Customer-Segmentation-Featured-Image-3.png\" style='width: 1200px;'>\n\n\nIn this notebook we are going to work on customer segmentation task.\nPurpose of this work, helping authorised people of the Mall to increase the profits by analysing data given and extracting some insights from that. Customer segmentation has great importance in marketing to target ideal prospect clients. \n\n ","fc258357":"Although females spending score looks like more balanced than males, both side should be taken into consideration. Because there are only 16 females and 19 males in the group which is not good enough to make strong conclusions between genders. ","6db71c86":"After clustering, we can see that there is a high income low spending group which is shown with light green. This might be our target with initial look into graph.","92d6b5db":"Income and spending score seems like fairly close to normal distribution. However we can do a Skewness and Kurtosis test for Age feature as it seems like a bit skewed. If skewness is less than -1 or greater than 1, the distribution is highly skewed. Having looked at Skewness score, we can consider Age distribution is also close to normal distribution or at least it is not highly skewed. \n","ec913ae0":"Between genders, as we can see there is 3k difference in mean of incomes with almost same std. However to be able to prove if there is statistical difference we do Kolgomorov-Smirnov Test. Kolmogorov-Smirnov test is used to check whether 2 samples follow the same distribution. By looking at the P-value score which is 0.78, we can confidentally say that Statistically there is no significant difference between female and male incomes. [For orginal graph](https:\/\/www.kaggle.com\/datark1\/customers-clustering-k-means-dbscan-and-ap)\n","ec47cd3a":"**High income low spending group** has the worst spending score of the population.","2b07e372":"As we can see the graph above which shows inertia scores, we will go with 5 as number of clusters because we can see that is the elbow point ","c43f6a36":"**Low income high spending score** group has relatively narrow range of ages in which between 20\u2019s and mid 30\u2019s \n**Mid income mid spending score** group has  remarkably large range of age which is from 18\u2019s to 70\u2019s \n**High income high spending score** group's age is between mid 20s to early 40s \n","df813da1":"There is no direct correlation between income and spending score although there is negatively a slight relationship between age and spending score"}}