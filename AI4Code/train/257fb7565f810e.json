{"cell_type":{"3975e8a0":"code","5b2a25bf":"code","9113c9dd":"code","d5b791bb":"code","6174b722":"code","f8d5323a":"code","53ca4e13":"code","6ce7dcad":"code","a70386ad":"code","ec857db1":"code","4f77ce6d":"code","d47a7887":"code","520b6307":"code","53959f21":"code","1a841cff":"code","225610e9":"code","e5ce3436":"code","41cc0f20":"code","35a9089c":"code","99e08421":"code","bfb864d4":"code","e95b5ec9":"code","cbf413a3":"code","82bbe111":"code","21710e30":"code","c3c414c9":"code","1c94c00d":"code","5fe7ce3c":"code","2206ae1d":"code","ec3a6801":"code","2d20673e":"code","8192b489":"code","62c7cd21":"code","2450302a":"code","da83b78b":"code","3527f7bd":"code","692e8117":"code","12a2d9b7":"code","6f2a2e69":"code","87e59a2b":"code","82ee97a4":"code","c8bdec3c":"code","56914323":"code","62f512fd":"code","9b3d0d6c":"code","e0ee77ee":"code","f171ea77":"code","6294259d":"code","6ee64cde":"code","4ca4e96b":"code","996f9beb":"code","21d7b482":"code","1e75e33d":"code","ac9634df":"code","a6b392a7":"code","3fcfef11":"code","83fbd6b9":"code","8dda2df3":"code","c3fd5e9e":"code","4ed613d2":"code","62a1700c":"code","988d3ce2":"code","6d7d4d8f":"code","80d11001":"code","d765a9c9":"code","2d8852cd":"code","f1ccce4f":"code","c93312f3":"code","4891261c":"code","14d36067":"code","6796188c":"code","18510c83":"code","a076a723":"code","bff84fa5":"markdown","feabf0f3":"markdown","431488eb":"markdown","3a7091b5":"markdown","4c30f38a":"markdown","079f485e":"markdown","6fd8539c":"markdown","26ac9576":"markdown","93ebb8ae":"markdown","34b613bd":"markdown","4fa6203d":"markdown","e501b6f9":"markdown","51fcc1d6":"markdown","c53795a9":"markdown","3e6749ba":"markdown","cb66ca7a":"markdown","bc68b8d8":"markdown","ca350be8":"markdown","16ff2015":"markdown","e21a7294":"markdown","bd1b2d05":"markdown","26364a4c":"markdown","26b2436f":"markdown","56671464":"markdown","43cb27fb":"markdown","7ed3bbb4":"markdown","52539fb4":"markdown","b7a895c7":"markdown","3915c3b4":"markdown","00139747":"markdown","e3417702":"markdown","51f0de50":"markdown","19941086":"markdown","b9a7229a":"markdown","46b23b1e":"markdown","85795c21":"markdown","399bb970":"markdown","8188957a":"markdown","3fd2ecdf":"markdown","5c4b76c4":"markdown","b3ee9a2e":"markdown","806667f4":"markdown","6a3fb6d6":"markdown","ac1cb7f1":"markdown","f32c7b34":"markdown"},"source":{"3975e8a0":"import numpy as np #for algebric calculations\nimport pandas as pd #essential for data reading,writing etc\nimport seaborn as sns #visualization library\nimport plotly.express as px #ploting parameter's\nimport plotly.express\nimport matplotlib #visualization library.\nimport matplotlib.pyplot as plt #visualization library.\nimport sys #for System-specific parameters and functions.\n%matplotlib inline\nplt.rcParams['figure.figsize'] = (10, 7) #plotting parameters size's.\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# display the version of import libraries\n\nprint('Python : {}'.format(sys.version[0:5]))\nprint('Numpy : {}'.format(np.__version__))\nprint('Pandas : {}'.format(pd.__version__))\nprint('Matplotlib : {}'.format(matplotlib.__version__))\nprint('Seaborn : {}'.format(sns.__version__))\nprint('Plotly.Express : {}'.format(plotly.__version__))","5b2a25bf":"# Define the path of CSV file & import the dataset.\n\ndf=pd.read_csv('..\/input\/jobs-on-naukricom\/naukri_com-job_sample.csv') ","9113c9dd":"# Display the first 10 columns.\n\ndf.head(5)","d5b791bb":"# Display the number of rows and columns in the dataset.\n\nnrow,ncol=df.shape\nprint(f'There are {nrow} rows and {ncol} colunms in the dataset')","6174b722":"#The total number of elements.\n#This is equal to the row_count * column_coun.\n\nprint(df.shape[0] * df.shape[1])","f8d5323a":"# Display the information about DataFrame including the index dtype, columns and etc.  \n\ndf.info()","53ca4e13":"count_missing = df.isnull().sum()\npercent_missing =  count_missing* 100 \/ df.shape[0]\nmissing_value_df = pd.DataFrame({'count_missing': count_missing,\n                                 'percent_missing': percent_missing})\n\nmissing_value_df.style.background_gradient(cmap='Spectral')","6ce7dcad":"unique_df = pd.DataFrame([[df[i].nunique(), df[i].unique()]for i in df.columns],\n                         columns=['Count','unique'],\n                         index=df.columns)\nunique_df.style.background_gradient(cmap='magma')","a70386ad":"# split method to split payrate min to max\n\npay_split = df['payrate'].str[0:-1].str.split('-', expand=True)\npay_split.head(10)","ec857db1":"#remove space in left and right\npay_split[0] =  pay_split[0].str.strip()\n\n#remove comma \npay_split[0] = pay_split[0].str.replace(',', '')\n\n#remove all character in two condition\n# 1 remove if only character\n# 2 if start in number remove after all character\npay_split[0] = pay_split[0].str.replace(r'\\D.*', '')\n\n#display \npay_split[0].head(10)","4f77ce6d":"#remove space in left and right \npay_split[1] =  pay_split[1].str.strip()\n\n#remove comma \npay_split[1] = pay_split[1].str.replace(',', '')\n\n#remove all character in two condition\n# 1 remove if only character\n# 2 if start in number remove after all character\npay_split[1] = pay_split[1].str.replace(r'\\D.*','')\n\n#display \npay_split[1].head(10)","d47a7887":"pay_split[0] = pd.to_numeric(pay_split[0], errors='coerce')\npay_split[1] = pd.to_numeric(pay_split[1], errors='coerce')","520b6307":"pay=pd.concat([pay_split[0], pay_split[1]], axis=1, sort=False)","53959f21":"# rename the columns into min payrate and max payrate.\npay.rename(columns={0:'min_pay', 1:'max_pay'}, inplace=True )\npay.head()","1a841cff":"# min and max payarte store the value in the dataframe.\n\ndf=pd.concat([df, pay], axis=1, sort=False)","225610e9":"df.head(5)","e5ce3436":"# spliting the experience into min experience to max experience.\n\nexperience_split = df['experience'].str[0:-1].str.split('-', expand=True)\nexperience_split.head()","41cc0f20":"#remove space in left and right \nexperience_split[0] =  experience_split[0].str.strip()\n\n#remove comma \nexperience_split[0] = experience_split[0].str.replace('yr', '')\n\n#remove all character in two condition\n# 1 remove if only character\n# 2 if start in number remove after all character\nexperience_split[0] = experience_split[0].str.replace(r'yr', '')\n\n#display \nexperience_split[0].head()","35a9089c":"#remove space in left and right \nexperience_split[1] =  experience_split[1].str.strip()\n\n#remove comma \nexperience_split[1] = experience_split[1].str.replace('yr', '')\n\n#remove all character in two condition\n# 1 remove if only character\n# 2 if start in number remove after all character\nexperience_split[1] = experience_split[1].str.replace(r'yr', '')\n\n#display \nexperience_split[1].head()","99e08421":"experience_split[0] = pd.to_numeric(experience_split[0], errors='coerce')\nexperience_split[1] = pd.to_numeric(experience_split[1], errors='coerce')","bfb864d4":"experience=pd.concat([experience_split[0], experience_split[1]], axis=1, sort=False)","e95b5ec9":"# rename the cloumns to min and max experience\n\nexperience.rename(columns={0:'min_experience', 1:'max_experience'}, inplace=True)\nexperience.head()","cbf413a3":"# store the min and max experience in the dataframe.\n\ndf=pd.concat([df, experience], axis=1, sort=False)","82bbe111":"#displat max and min experience\n\ndf.head(5)","21710e30":"# Display average payrate and average experience.\n# min experience and max experience define the average experience.\n# min payrate and max payrate define the average payrate.\n\ndf['avg_payrate']=(df['min_pay'].values + df['max_pay'].values)\/2\ndf['avg_experience']=(df['min_experience'].values + df['max_experience'].values)\/2\ndf.head(5)","c3c414c9":"df['postdate'].dtypes","1c94c00d":"# parse the dates, currently coded as strings, into datetime format\n\ndf['postdate'] = pd.to_datetime(df['postdate'])","5fe7ce3c":"# extract year from date\n\ndf['Year'] = df['postdate'].dt.year\ndf['Year'].head(5)","2206ae1d":"# extract month from date\n\ndf['Month'] = df['postdate'].dt.month\ndf['Month'].head(5)","ec3a6801":"df['Month'].tail(5)","2d20673e":"# extract day from date\n\ndf['Day'] = df['postdate'].dt.day\ndf['Day'].head(5)","8192b489":"df['Day'].tail(5)","62c7cd21":"# drop the original Date variable\n\ndf.drop('postdate', axis=1, inplace = True)","2450302a":"df.head(5)","da83b78b":"df['joblocation_address'].value_counts().head(10)","3527f7bd":"replacements = {\n   'joblocation_address': {\n      r'(Bengaluru\/Bangalore)':'Bangalore',\n      r'Bengaluru':'Bangalore',\n      r'Bangalore':'Bangalore',\n      r'Bangalore Bangalore':'Bangalore',\n      r'Hyderabad\/Secunderabad':'Hyderabad',\n      r'Mumbai , Mumbai':'Mumbai',\n      r'Noida': 'Delhi',\n      r'Delhi': 'Delhi',\n      r'Gurgaon': 'Delhi',\n      r'Delhi\/NCR(National Capital Region)':'Delhi',\n      r'Delhi\/NCR(National Capital Region) ':'Delhi',\n      r' Delhi\/NCR(National Capital Region) ':'Delhi',\n      r' Delhi\/NCR(National Capital Region)':'Delhi',\n      r'DELHI(NATIONAL CAPITAL REGION)':'Delhi',\n      r'Delhi,Delhi':'Delhi',\n      r'Noida\/Greater Noida':'Delhi',\n      r'Ghaziabad': 'Delhi',\n      r'Delhi\/NCR(National Capital Region),Gurgaon':'Delhi',\n      r'NCR,NCR': 'Delhi',\n      r'Delhi\/NCR':'Delhi', \n      r'Bangalore,Bangalore \/ Bangalore':'Bangalore',\n      r'Bangalore,karnataka': 'Bangalore',\n      r'Delhi NCR':'Delhi',\n      r'Delhi':'Delhi',\n   }\n}\ndf.replace(replacements, regex=True, inplace=True)\njoblocation_address = df['joblocation_address'].value_counts()","692e8117":"# filter and find unique() cities from data set\n\ndf.joblocation_address = df.joblocation_address.str.upper()\nnew_location =df.joblocation_address.str.strip().str.split(\",\", expand = True)[0].str.split(\" \", expand = True)[0].value_counts().reset_index()\nnew_location.columns = [\"Location\", \"Job_Opportunities\"]\nnew_location = new_location[:10]\nnew_location.style.background_gradient(cmap = \"PuOr\")","12a2d9b7":"# drop the original Date variable\n\ndf.drop('payrate', axis=1, inplace = True)","6f2a2e69":"# drop the original Date variable\n\ndf.drop('experience', axis=1, inplace = True)","87e59a2b":"# drop the original Date variable\n\ndf.drop('uniq_id', axis=1, inplace = True)","82ee97a4":"# a general overview of data\n# T means Transpose\n\ndf.describe().T","c8bdec3c":"#Dataset Summary statistics - categorical variables\n\ndf.describe(include = ['object']).T","56914323":"# find categorical variables\n\ncategorical = [var for var in df.columns if df[var].dtype=='O']\nprint('There are {} categorical variables\\n'.format(len(categorical)))\nprint('The categorical variables are :\\n', categorical)","62f512fd":"# view the categorical variables\n\ndf[categorical].head()","9b3d0d6c":"count_missing = df[categorical].isnull().sum()\npercent_missing =  count_missing* 100 \/ df.shape[0]\nmissing_value_df = pd.DataFrame({'count_missing': count_missing,\n                                 'percent_missing': percent_missing})\n\nmissing_value_df.style.background_gradient(cmap='tab20b')","e0ee77ee":"# find numerical variables\n\nnumerical = [var for var in df.columns if df[var].dtype!='O']\nprint('There are {} numerical variables\\n'.format(len(numerical)))\nprint('The numerical variables are :', numerical)","f171ea77":"# view the numerical variables\n\ndf[numerical].head()","6294259d":"# check missing values in numerical variables\n\ncount_missing = df[numerical].isnull().sum()\npercent_missing =  count_missing* 100 \/ df.shape[0]\nmissing_value_df = pd.DataFrame({'count_missing': count_missing,\n                                 'percent_missing': percent_missing})\n\nmissing_value_df.style.background_gradient(cmap='coolwarm')","6ee64cde":"# view summary statistics in numerical variables\n\nprint(round(df[numerical].describe()))","4ca4e96b":"cor_mat = df.corr()\nfig, ax = plt.subplots(figsize=(15,10))\nplt.title('Correlation Heatmap of Job Market Analysis of India')\nsns.heatmap(cor_mat, ax=ax, annot=True,cmap=\"PuOr\", center=0, linewidths=0.08,linecolor=\"magenta\")\nplt.show()","996f9beb":"plt.figure(figsize=(10,6))\ncorr = df.corr()[\"min_pay\"]\ncorr.sort_values().head(20)[:-3].plot(kind='bar', color= ['olive','fuchsia',\n                                                                'limegreen','grey','yellow','aqua',\n                                                                'lawngreen','red',])\ncorr.abs().sort_values(ascending=False)[3:]","21d7b482":"#display the company names..highest to lowest\n\ncom_Category = df.company.str.lstrip().str.rstrip().value_counts().reset_index()\ncom_Category.columns = [\"Company\", \" Number of Company\"]\ncom_Category = com_Category[:10]\ncom_Category.style.background_gradient(cmap = \"tab20c\")","1e75e33d":"#pLot of companies\n\nf,ax=plt.subplots(figsize=(17,7))\ndf['company'].value_counts().head(10).plot(kind = 'bar', color =['fuchsia','orange',\n                                                                 'limegreen','yellow','grey','aqua',\n                                                                 'lawngreen','deepskyblue','indigo','skyblue'])\nplt.title('Bar Plot', fontsize=22)\nplt.show()","ac9634df":"# These data shows the biggest industry in the country.\n\nind_Category = df.industry.str.lstrip().str.rstrip().value_counts().reset_index()\nind_Category.columns = [\"Industry\", \" Number of Industry\"]\nind_Category = ind_Category[:10]\nind_Category.style.background_gradient(cmap = \"Blues\")","a6b392a7":"# Plot of Industries.\n\nf,ax=plt.subplots(figsize=(18,7))\nexplode =(0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2)\ndf['industry'].value_counts().head(10).plot(kind = 'pie', startangle=60, explode = explode,autopct='%1.1f%%')\nplt.title('Pie Chart', fontsize=22)\nplt.show()","3fcfef11":"#diplay the jobtitle.\n\nCategory = df.jobtitle.str.lstrip().str.rstrip().value_counts().reset_index()\nCategory.columns = [\"jobtitle\", \" Number of Jobtitle\"]\nCategory = Category[:10]\nCategory.style.background_gradient(cmap = \"Greens\")","83fbd6b9":"#scatter plot for jobtitle.\n\nfig=px.scatter(df['jobtitle'].value_counts().head(10))\nfig.show()","8dda2df3":"# display the skills\n\n# These data shows the biggest industry in the country.\n\nskills_Category = df.skills.str.lstrip().str.rstrip().value_counts().reset_index()\nskills_Category.columns = [\"Skills\", \" Number of Skills\"]\nskills_Category = skills_Category[:10]\nskills_Category.style.background_gradient(cmap = \"hot\")\n","c3fd5e9e":"# horizontal plot of skills\n\nf,ax=plt.subplots(figsize=(17,7))\ndf['skills'].value_counts().head(5).plot(kind = 'line', color = 'midnightblue')\nplt.title(' Line Plot', fontsize=22)\nplt.show()","4ed613d2":"# filter and find unique() cities from data set\n\ndf_joblocation_address = df.joblocation_address.str.upper()\nnew_location =df.joblocation_address.str.strip().str.split(\",\", expand = True)[0].str.split(\" \", expand = True)[0].value_counts().reset_index()\nnew_location.columns = [\"Location\", \"Job_Opportunities\"]\nnew_location = new_location[:10]\nnew_location.style.background_gradient(cmap = \"PuOr\")","62a1700c":"plt.figure(figsize = (17,7))\nplt.bar(new_location.Location,new_location.Job_Opportunities,color = ['orange','fuchsia',\n                                                                'limegreen','grey','yellow','aqua',\n                                                                'lawngreen','deepskyblue','indigo','skyblue'])\nplt.xlabel(\"Locations\")\nplt.ylabel(\"Job Opportunities\")\nplt.xticks(new_location.Location, rotation = \"60\")\nplt.title(\"Bar Plot\")\nplt.show()","988d3ce2":"#display the relation between min exp. and min payrate.\n\nf,ax=plt.subplots(figsize=(17,7))\nsns.stripplot(x='min_experience', y='min_pay', data=df, jitter=False)\nplt.title('Seaborn Stripplots', fontsize=22)\nplt.show()","6d7d4d8f":"#display the relation between max exp. and max payrate.\n\nsns.catplot(x='max_experience', y='max_pay', data=df , kind=\"boxen\" , width=0.4 ,aspect=3)\nplt.title('Seaborn Catplots using Boxen', fontsize=22)\nplt.show()","80d11001":"#display the relation between average exp. and average payrate.\n\nf,ax=plt.subplots(figsize=(20,8))\nsns.stripplot(x='avg_experience', y='avg_payrate', data=df, jitter=False, size=6)\nplt.title('Seaborn Stripplots', fontsize=22)\nplt.show()","d765a9c9":"#display the relation between min, max exp. and min payarte.\n\nsns.pairplot(df, size=7,aspect=1,\n             x_vars=[\"min_experience\",\"max_experience\"],\n             y_vars=[\"min_pay\"], diag_kind=\"kde\", \n             plot_kws=dict(s=50, edgecolor = 'darkgreen', color=\"aqua\", linewidth=1.5),diag_kws=dict(shade=True))\n","2d8852cd":"#display the relation between min, max exp. and max payrate.\n\nsns.pairplot(df, \n             size=7, aspect=1, \n             x_vars=[\"min_experience\",\"max_experience\"],\n             y_vars=[\"max_pay\"],\n             kind=\"reg\")","f1ccce4f":"#display the max payrate and industries comparsion.\n\ndf[['max_pay','industry']].groupby([\"industry\"]).median().sort_values(by='max_pay',\n                                                                        ascending=False).head(10).plot.bar(color='springgreen')\nplt.title('Bar Plot', fontsize=22)\nplt.show()","c93312f3":"#display the min payrate and industries comparsion.\n\ndf[['min_pay','industry']].groupby([\"industry\"]).median().sort_values(by='min_pay',\n                                                                        ascending=False).head(10).plot.bar(color='magenta')\nplt.title('Horizontal Bar Plot', fontsize=22)\nplt.show()","4891261c":"#display the average payrate and skills comparsion.\n\ndf[['avg_payrate','skills']].groupby([\"skills\"]).median().sort_values(by='avg_payrate',\n                                                                  ascending=False).head(10).plot.bar(color='skyblue')\nplt.title('Bar Plot', fontsize=22)\nplt.show()","14d36067":"df[['avg_payrate','jobtitle']].groupby([\"jobtitle\"]).median().sort_values(by='avg_payrate',\n                                                                        ascending=False).head(10).plot.bar(color='orange')\nplt.title('Horizontal Bar Plot', fontsize=22)\nplt.show()","6796188c":"# Position are available in minimum payrate\n\nplt.figure(figsize=(10, 5))\ndf['min_pay'].hist(rwidth=0.9, bins=15, color='aqua')\nplt.title('Minimum payment')\nplt.xlabel('Payment')\nplt.ylabel('Position')\nplt.show()","18510c83":"# Position are available in maximum payrate\nplt.figure(figsize=(10, 5))\ndf['max_pay'].hist(rwidth=0.8, bins=15, color='r')\nplt.title('Maximum payment')\nplt.xlabel('Payment')\nplt.ylabel('Position')\n\nplt.show()","a076a723":"# Number of position are available in the industry.\n\nmax_positions = df.loc[df.numberofpositions > 100].loc[:,['numberofpositions','industry']]\nplt.figure(figsize=(15, 5))\nexplode =(0.1,0.12,0.2,0.1,0.2,0.05,0.1,0.3,0.5,1)\nhist_position_value = pd.value_counts(max_positions.industry)\nhist_position_value.index\nhist_position_value[hist_position_value >1].plot(kind='pie',startangle=40,explode=explode, autopct='%1.1f%%')\nplt.title('Pie Chart', fontsize=22)\nplt.show()","bff84fa5":"### Interpretation\n\n#### From the above correlation, we can conclude that :-\n\n- ####  Minimun Payrate and Average Payrate variables are highly positively correlated (correlation coefficient = 0.98).\n- #### Minimum Experience and Minimun Payrate variables are also highly positively correlated (correlation coefficient = 0.71).","feabf0f3":"### Correlation For Numerical Features","431488eb":"### Comparsion Between Average Payrates & Jobtitles","3a7091b5":"<hr><h2 style=text-align:center>Import Dataset<hr>","4c30f38a":"<hr><h2 style=text-align:center>Jobtitle Analysis<hr>","079f485e":"<hr><h2 style=\"text-align:center\">Bivariate Analysis<\/h2><hr>\n","6fd8539c":"#### IT Software - Application Programming is highly demanded skill","26ac9576":"### Co-relation Between Average Experience And Average Payrate ","93ebb8ae":"### Relation Between Minimum , Maximum Experience And Maximum Payrate","34b613bd":"<hr><h2 style=text-align:center>Company Based Analysis<hr>","4fa6203d":"## Experience Spliting Processing","e501b6f9":"- ## Categorical Variables","51fcc1d6":"<hr><h2 style=text-align:center>Industries Based Analysis<hr>","c53795a9":"### Relation Between Minimum, Maximum Experience And Minimum Payrate\n","3e6749ba":"## View Payrate and Experience Average ","cb66ca7a":"- ## Numerical Variables","bc68b8d8":"<hr><h2 style=text-align:center>Conclusion<\/h2><\/hr>\n<p><b>In short, according to given data, Most of the jobs on Naukri.com are related IT and software industry which are hiring for programming and design role category and Most of the job recruiters are from Bengeluru region.<\/b><\/p>\n<p><b>The Information Technology & Information Technology Enabled Services (IT-ITeS) sector has rapid evolution and is changing the shape of Indian business\/technology standards. It includes software development, consultancies, software management, online services and business process outsourcing (BPO).<\/b><\/p>\n<p><b>And According data, analysis that information technology and Software service industry are most valuable indsutry in the country<\/b><\/p>\n<p><b> We analysis that the management skills is the most highly offered salary in the industry<\/b><\/p>","ca350be8":"### Co-relation Between Minimum Experience and Minimum Payrate","16ff2015":"## Payrate Spliting Processing","e21a7294":"<hr><h2 style=\"text-align:center\">Types of Variables<\/h2><hr>\n\n<hr><h3 style=\"text-align:center\">Categorical Variables&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Numerical Variables<\/h3><hr>\n","bd1b2d05":"# Location Spliting Processing","26364a4c":"## Feature Engineering Of Date Variable","26b2436f":"### Display The Number Of Position On Minimum Payrate","56671464":"### Comparsion Between Average Payrates & Skills","43cb27fb":"### Display The Number Of Position On Maximum Payrate","7ed3bbb4":"<img src=\"https:\/\/akm-img-a-in.tosshub.com\/sites\/btmt\/images\/stories\/jobs-660_031819053533.jpg\" alt=\"alternatetext\">","52539fb4":"### Comparsion  Between Minimum Payrates & Industries","b7a895c7":"<hr><h2 style=text-align:center>Payrate Analysis<hr>","3915c3b4":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Let's take a look at the variable descriptions:<\/p>\n<h2  style=text-align:center>Features<\/h2>\n<table style=\"width:90%; border: 2px solid blue\">\n    <thead>\n        <tr> \n            <th><mark>Variable<\/mark><\/th>\n            <th><mark>Type<\/mark><\/th>\n            <th><mark>Scale<\/mark><\/th>\n            <th><mark>Description<\/mark><\/th>\n        <\/tr>\n    <\/thead>\n        <tbody>\n        <tr>\n            <td>Company<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The name of the company.<\/td>\n        <\/tr>\n         <tr>\n            <td>Education<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The education of the candidate.<\/td>\n        <\/tr>\n         <tr>\n            <td>Experience<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The experience that is needed by the candidates.<\/td>\n        <\/tr>\n         <tr>\n            <td>Industry<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The industry the job is posted for.<\/td>\n        <\/tr>\n         <tr>\n            <td>Job Discription<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The job description.<\/td>\n        <\/tr>\n         <tr>\n            <td>Job ID<\/td>\n            <td>Qualitative,<br> Discrete (int64)<\/td>\n            <td>Nominal<\/td>\n            <td>The Job ID given by the website.<\/td>\n        <\/tr>\n         <tr>\n            <td>Joblocation_address<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The location of the job.<\/td>\n        <\/tr>\n         <tr>\n            <td>Job Title<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The title of the job.<\/td>\n        <\/tr>\n         <tr>\n            <td>Number of Position<\/td>\n            <td>Quantitative,<br> Discrete (Float64)<\/td>\n            <td>Nominal<\/td>\n            <td>The number of positions available.<\/td>\n        <\/tr>\n         <tr>\n            <td>Payrate<\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The rate of payment of the jobs.<\/td>\n        <\/tr>\n         <tr>\n            <td>Post Date<\/td>\n            <td>Ordinal,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The date when the job was posted.<\/td>\n        <\/tr>\n         <tr>\n            <td>Site Name <\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The name of the site.<\/td>\n        <\/tr>\n         <tr>\n            <td>Skills <\/td>\n            <td>Qualitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The skills that are required.<\/td>\n        <\/tr>\n         <tr>\n            <td>Unique ID <\/td>\n            <td>Quantitative,<br> Discrete (Boolean)<\/td>\n            <td>Nominal<\/td>\n            <td>The unique ID given by the website.<\/td>\n        <\/tr>\n        <\/tbody>            \n<\/table>\n<p><strong>Quantitative :- Numerical<\/strong><br>\n<strong>Qualitative :- Categorical<\/strong><\/p>\n\n<\/div>","00139747":"<hr><h2 style=text-align:center>Import Libraries<hr>","e3417702":"#### Software Services biggest industry in India, So it have the highest job opportunity","51f0de50":"### Outliers In Numerical Variables","19941086":"### Missing values in numerical variables","b9a7229a":"### Comparsion  Between Maximum Payrates & Industries","46b23b1e":"<hr><h1 style=text-align:center>Naukri.Com Analysis Of India<hr>","85795c21":"### Display The Available Position In The Industry","399bb970":"\n<hr><h2 style=text-align:center>Problem Statement<\/h2><\/hr>\n<h3> Anticipate job market demand, ( forecast)<\/h3>\n<h2 style=text-align:center>Solution<\/h2>\n<h3> Lets tackle this problem ,i.e forecasting the job market demand by analysis of job market analysis of india.<\/h3>","8188957a":"<hr><h2 style=text-align:center>Skills Analysis<hr>","3fd2ecdf":"#### Business Development and Software Engineer are the higest occurring jobtitle","5c4b76c4":"<hr><h2 style=text-align:center>Data Cleaning Processing<hr>","b3ee9a2e":"<hr><h2 style=text-align:center>Dataset Link<\/h2><hr>\n<h3><a href=\"https:\/\/www.kaggle.com\/PromptCloudHQ\/jobs-on-naukricom\">https:\/\/www.kaggle.com\/PromptCloudHQ\/jobs-on-naukricom<\/a><br>\n<br>\n<h3>Click download button to download this dataset &nbsp;\n<button class=\"btn\"><a href=\"https:\/\/www.kaggle.com\/PromptCloudHQ\/jobs-on-naukricom\/download\"><i class=\"fa fa-download\"><\/i>Download<\/a>\n\n","806667f4":"<hr><h2 style=text-align:center>Introduction<\/h2><hr>\n<h3>&#8226; Getting a first job is an important rite of passage in many cultures. The youth may start by doing household work, odd jobs, or working for a family business. <\/h3>\n<h3>&#8226; naukri.com is a recruitment platform that provides hiring-related services to corporates\/recruiters, placement agencies and to job seekers in India.<\/h3>\n<h3>&#8226; The data set captures the 14 attributes of the job postings that are done between 2015 - 2017<\/h3>\n<h3>&#8226;This is naukri.com job portal dataset and it was created by teams at PromptCloud and DataStock. The dataset gives you information about job opportunities published by recruiters and has some importand features or columns such as Industry, Location, Payrate, Experience required in Years etc which can be analysed.<\/h3>","6a3fb6d6":"<hr><h2 style=text-align:center>Top City For JobLocation<hr>","ac1cb7f1":"We can more clearly see that both <mark>min_experience<\/mark> and <mark>numberofpositions<\/mark> had the strongest linear correlations with <mark>min_pay<\/mark> target variable","f32c7b34":"###  Co-relation Between Maximum Experience and Maximum Payrate "}}