{"cell_type":{"86af95a4":"code","476a127d":"code","a7d1e564":"code","c29697c9":"code","e6722a46":"code","74829a44":"code","c816cd28":"code","5be5e747":"code","b35984d5":"code","e122cdef":"code","21ecee35":"code","f356cdc0":"code","6e4d7e35":"code","0c82ea4e":"code","c4c2425d":"code","89c0c58f":"code","58d03f42":"code","698d7b53":"code","02aa555e":"code","08d22dfe":"code","8238dc53":"code","ba61c3a0":"code","91691c80":"code","68e1917a":"code","767842c3":"code","a980aaf1":"code","e1356de0":"code","45a83e2e":"code","3f535fb5":"code","645d8f94":"code","f7a841cf":"code","3c9d6e7a":"code","cdcc271d":"code","ebfe42bc":"code","e4e9deea":"code","ea6d737a":"code","dbca00dd":"code","b0239965":"code","9e8aa9e7":"code","cf55af92":"code","34642ccc":"code","09fdaa6d":"code","b02ae2ff":"code","96cd2a58":"markdown","8cc5aec2":"markdown","3a0d788e":"markdown","71c989de":"markdown","47a4f2a0":"markdown","27c0646d":"markdown","b774a723":"markdown","0e42364d":"markdown","e2faf238":"markdown","4978ed76":"markdown","de2ec22d":"markdown","523afd6b":"markdown","d0354a10":"markdown","f8527d0e":"markdown","0100140b":"markdown","8131bb2c":"markdown","efba4ff7":"markdown","8b56eea7":"markdown","2b074869":"markdown","741f94ca":"markdown","5f3a54f9":"markdown","5852eef6":"markdown","930a8eff":"markdown","f40e61e7":"markdown","398f5c72":"markdown","a836f53d":"markdown","d33a3bda":"markdown","8b73d704":"markdown","8e1811c5":"markdown","67580ec8":"markdown","c69b623e":"markdown","1c5caef6":"markdown","d8dfa038":"markdown","511d5d8a":"markdown","286ff9ad":"markdown","27848a8f":"markdown","eeafaf46":"markdown","2ab9cce0":"markdown"},"source":{"86af95a4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport seaborn as sns # for visualization\nimport scipy as sp # for scintific computing\nimport datetime\nimport warnings\nwarnings.filterwarnings('ignore')","476a127d":"df=pd.read_csv(r\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")\ndf.head().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","a7d1e564":"df.columns","c29697c9":"df.drop(columns=['Unnamed: 32','id'],inplace=True)","e6722a46":"df.isnull().sum()","74829a44":"df.describe().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","c816cd28":"df.corr().head().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","5be5e747":"plt.figure(figsize=(20,15))\nmask = np.triu(np.ones_like(df.corr()))\nsns.heatmap(df.corr(), annot=True, cmap='Greens', mask=mask)\nplt.show()","b35984d5":"def correlation (features,threshold):\n    col_corr=set()\n    corr_matrix=features.corr()\n    for i in range(len(corr_matrix.columns)):\n        for j in range (i):\n            if abs(corr_matrix.iloc[i,j]) > threshold:\n                colname =corr_matrix.columns[i]\n                col_corr.add(colname)\n    return col_corr","e122cdef":"corr_features=correlation(df,0.85)\nlen(set(corr_features))","21ecee35":"corr_features","f356cdc0":"df=df.drop(corr_features, axis=1)","6e4d7e35":"df.shape","0c82ea4e":"df.head().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","c4c2425d":"plt.figure(figsize=(10,8))\nsns.histplot(df.diagnosis ,kde=False)","89c0c58f":"df.columns","58d03f42":"features = df[['radius_mean', 'texture_mean', 'smoothness_mean',\n       'compactness_mean', 'symmetry_mean', 'fractal_dimension_mean',\n       'radius_se', 'texture_se', 'smoothness_se', 'compactness_se',\n       'concavity_se', 'concave points_se', 'symmetry_se',\n       'fractal_dimension_se', 'smoothness_worst', 'symmetry_worst',\n       'fractal_dimension_worst','diagnosis']]\nsns.pairplot(features, hue='diagnosis', markers=[\"o\", \"s\"])","698d7b53":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","02aa555e":"df['diagnosis']=le.fit_transform(df['diagnosis'])","08d22dfe":"df.head().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","8238dc53":"from sklearn.preprocessing import MinMaxScaler\nscaling=MinMaxScaler()","ba61c3a0":"df[[\"radius_mean\",\"texture_mean\"]]=scaling.fit_transform(df[[\"radius_mean\",\"texture_mean\"]])","91691c80":"df.head().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","68e1917a":"def highlight_number(number):\n    criteria=number==1\n    print([\"background-color:yellow\" if i else \"\" for i in criteria])\n    return[\"background-color:yellow\" if i else \"\" for i in criteria]     \ndf.head().style.apply(highlight_number)\n","767842c3":"X=df.drop('diagnosis', axis=1)\nX.head().style.set_properties(**{'background-color': 'lightblue',\n                          'color':'darkblue',\n                          'border-color': 'brown',\n                          'border-width': '1px',\n                          'border-style':'solid'})","a980aaf1":"y=df['diagnosis']\ny","e1356de0":"from sklearn.model_selection import train_test_split\nX_test,X_train,y_test,y_train= train_test_split(X,y,test_size=0.3)","45a83e2e":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(solver='lbfgs')\nlr.fit(X_train,y_train)\nlr.score(X_test,y_test)","3f535fb5":"from sklearn.svm import SVC\nsvm=SVC(gamma='scale')\nsvm.fit(X_train,y_train)\nsvm.score(X_test,y_test)","645d8f94":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier(n_estimators=80)\nrf.fit(X_train,y_train)\nrf.score(X_test,y_test)","f7a841cf":"y_pred=rf.predict(X_test)\ny_pred","3c9d6e7a":"y_prob=rf.predict_proba(X_test)\ny_prob","cdcc271d":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred)\ncm","ebfe42bc":"plt.figure(figsize=(10,7))\nsns.heatmap(cm, annot = True)\nplt.xlabel('predicted')\nplt.ylabel('Truth')","e4e9deea":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred)\nprint(classification_report(y_test,y_pred))","ea6d737a":"from sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import precision_recall_curve","dbca00dd":"    y_predicted=rf.predict(X_test)\n    y_prob=rf.predict_proba(X_test)\n    plt.figure(figsize = (15,10))\n    fpr, tpr, thresholds = roc_curve(y_test, y_prob[:,1])\n    plt.subplot(2, 2, 1)\n    plt.plot(fpr, tpr, label='ROC curve')\n    plt.plot([0, 1], [0, 1], 'g--', label='Random guess')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC (Receiver operating characteristic) Curve')\n    plt.legend()\n    precision, recall, thresholds = precision_recall_curve(y_test, y_prob[:,1])\n    plt.subplot(2, 2, 2)\n    plt.title(\"Precision-Recall-F1 vs Threshold Chart\")\n    plt.plot(thresholds, precision[: -1], \"b--\", label=\"Precision\")\n    plt.plot(thresholds, recall[: -1], \"r--\", label=\"Recall\")\n    plt.plot(thresholds, (2*precision[:-1]*recall[:-1])\/(precision[:-1]+recall[:-1]), \"g--\", label=\"F1_score\")\n    plt.ylabel(\"Precision, Recall\")\n    plt.xlabel(\"Threshold\")\n    plt.legend(loc=\"lower left\")\n    plt.show()\n    return (y_predicted, y_prob)","b0239965":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_pred)\nprint(classification_report(y_test,y_pred))","9e8aa9e7":"y_prob=rf.predict_proba(X_test)\ny_prob","cf55af92":"y_prob[:20,1]","34642ccc":"y_prob_n>0.3","09fdaa6d":"y_prob_n=y_prob[:,1]\ny_prob_fr_high_rcl=(y_prob_n>0.3)*1","b02ae2ff":"from sklearn.metrics import classification_report\ncr=classification_report(y_test,y_prob_fr_high_rcl)\nprint(cr)","96cd2a58":"# **<span style=\"color:green;\">Feature selection code**","8cc5aec2":"# <span style=\"color:green;\"> so here recall of 1 is 0.90, which needed to be increased","3a0d788e":"# <span style=\"color:green;\">Checking null values","71c989de":"# <span style=\"color:green;\">**Scalling the column \"radius_mean\"&\"texture_mean for better distribution and accuracy**","47a4f2a0":"# <span style=\"color:green;\"> probability of prediction","27c0646d":"# **<span style=\"color:green;\">Statistical data of each column**","b774a723":"# <span style=\"color:green;\"> **Classification Report**","0e42364d":"# <span style=\"color:green;\">Feature selection Thresholds","e2faf238":"# <span style=\"color:green;\">It is a case of cancer prediction, so 1-cancerous and 0- Non-cancerous\n# <span style=\"color:green;\">Precesion =TP\/TP+FP   , Recall=TP\/TP+FN\n# <span style=\"color:green;\">False Positive:- A non cancerous patient is declared as a cancerous patient- No serious issue\n# <span style=\"color:green;\">False Negative:- A cancerous patient is declared as a Non-Cancerous patient- Life threatning\n# <span style=\"color:green;\">So, FN should be keep as low as possible\n# <span style=\"color:green;\">Recall=TP\/TP+FN , as FN decreases Recall increases,\n# <span style=\"color:green;\">So in this case we should keep recall high.\n","4978ed76":"# <span style=\"color:green;\">**PLot of Malignant VS Benign**","de2ec22d":"# <span style=\"color:green;\"> columns","523afd6b":"# <span style=\"color:green;\"> Droping unnecessary columns","d0354a10":"# <span style=\"color:green;\"> Breast cancer is a type of cancer that starts in the breast. Cancer starts when cells begin to grow out of control.Breast cancer can occur in women and rarely in men.\n![images (1).jfif](attachment:8c83918f-eb69-4d3f-9c5d-4b8480cbc396.jfif)","f8527d0e":"# **<span style=\"color:green;\">Corelation plot**","0100140b":"# <span style=\"color:green;\"> **Plotting of ROC and AUC curve**","8131bb2c":"# <span style=\"color:green;\"> RandomForestClassifier model is :94.97% Accurate,\n# <span style=\"color:brown;\"> RandomForestClassifier is found to be the best suitable model for the prediction with highest accuracy","efba4ff7":"# <span style=\"color:green;\">**Data distribution pairplots of features to check how much data overlaps or separated**","8b56eea7":"# **<span style=\"color:green;\">Importing Libraries**","2b074869":"#  <span style=\"color:green;\"> (Column name\/Terms):\n   **<span style=\"color:green;\">diagnosis: The diagnosis of breast tissues {M = malignant (cancerous), B = benign (noncancerous)}**\n   **<span style=\"color:green;\">radius_meanmean: of distances from center to points on the perimete**\n**<span style=\"color:green;\">texture_mean: standard deviation of gray-scale values**\n\n**<span style=\"color:green;\">perimeter_mean: mean size of the core tumor**\n\n**<span style=\"color:green;\">smoothness_mean: mean of local variation in radius length**\n\n**<span style=\"color:green;\">compactness_mean: mean of perimeter^2 \/ area - 1.0**\n\n**<span style=\"color:green;\">concavity_mean:mean of severity of concave portions of the contour**\n\n**<span style=\"color:green;\">concave points_mean: mean for number of concave portions of the contour**\n\n**<span style=\"color:green;\">fractal_dimension_se: standard error for \"coastline approximation\" - 1**\n\n**<span style=\"color:green;\">radius_worst: \"worst\" or largest mean value for mean of distances from center to points on the perimeter**\n\n**<span style=\"color:green;\">texture_worst: \"worst\" or largest mean value for standard deviation of gray-scale values**\n\n**<span style=\"color:green;\">smoothness_worst: \"worst\" or largest mean value for local variation in radius lengths**\n\n**<span style=\"color:green;\">compactness_worst: \"worst\" or largest mean value for perimeter^2 \/ area - 1.0**\n\n**<span style=\"color:green;\">concavity_worst: \"worst\" or largest mean value for severity of concave portions of the contou**\n\n**<span style=\"color:green;\">concave points_worst: \"worst\" or largest mean value for number of concave portions of the contour**\n\n**<span style=\"color:green;\">smoothness_worst: \"worst\" or largest mean value for local variation in radius lengths**\n\n**<span style=\"color:green;\">fractal_dimension_worst: \"worst\" or largest mean value for \"coastline approximation\" - 1**","741f94ca":"# <span style=\"color:green;\"> **Logistic Regression model is :89.69% Accurate**","5f3a54f9":"# <span style=\"color:green;\"> **Selecting X as a features\/ independent variable**","5852eef6":"# **<span style=\"color:green;\">What is  (FNA) Fine Needle Aspiration test**\n![images.jfif](attachment:a0b7bec3-8646-4989-b61a-3a94b17aeff5.jfif)\n    \n    \n<span style=\"color:green;\">**Fine needle aspiration (FNA), also called fine needle biopsy, is a type of biopsy where a needle is inserted into a lump or mass to collect a sample of cells. These cells are then looked at under a microscope to help your doctor determine if the mass or lump is cancerous (malignant) or noncancerous (benign)**","930a8eff":"# **<span style=\"color:green;\">Correlation Matrix**","f40e61e7":"# <span style= \"color:green;\">What is a lump?\u00b6\n        \n<span style=\"color:green;\">A lump is a protuberance or localized area of swelling that can occur anywhere on the body.\n\n# <span style= \"color:green;\">Does a lump mean cancer?\n    \n<span style= \"color:green;\">Just because you or your doctor found a lump, does not mean you have cancer. Not every lump is worth worrying about\u2014and some can be deceiving. According to a recent study, in women younger than 40, 80 to 85 percent of breast lumps are benign and non-cancerous\n\n# <span style=\"color:green;\">Symptoms\n<span style= \"color:green;\">Include a lump in the breast.\n<span style= \"color:green;\">Bloody discharge from the nipple.\n<span style= \"color:green;\">Changes in the shape or texture of the nipple or breast\n    \n# <span style= \"color:green;\">Self treatment\n<span style= \"color:green;\">Reducing dietary salt.\n<span style= \"color:green;\">Exercise, massage, compression and elevating the swollen area.\n   \n# <span style= \"color:green;\">See a doctor immediately if:\n<span style= \"color:green;\">Have shortness of breath or difficulty breathing.\n<span style= \"color:green;\">Feel chest pain.\n<span style= \"color:green;\">Develop swelling or pain in one limb.\n<span style= \"color:green;\">Rapidly gain weight.","398f5c72":"# <span style=\"color:green;\"> Loading the updated dataset","a836f53d":"# <span style=\"color:green;\">** Confusion matrix**","d33a3bda":"# <span style=\"color:green;\"> 1:Malignant(Cancerous), 0:Benign(Non-Cancerous)","8b73d704":"# <span style=\"color:green;\">**Selecting y as a dependent or target Variable**","8e1811c5":"# <span style=\"color:green;\"> **SVM support vector machine model is :89.94% Accurate**","67580ec8":" # <span style =\"color:green;\">Now the recall for one has been rises from 0.90 to 0.99, and it drops the False negative which will decreases the chances of selecting cancerous \n    #<span style =\"color:green;\">patient as anon cancerous","c69b623e":"# <span style=\"color:green;\">**LabelEncoder to replace strings data into \"0\" & \"1\"**","1c5caef6":"# <span style=\"color:green;\">Name of similar features","d8dfa038":"# <span style=\"color:green;\">Earlies \" when probability >0.5 then its select 1, Now when probability >0.3 then it will select 1\"","511d5d8a":"# <span style=\"color:green;\">**Spliting the dataset into training and testing types**","286ff9ad":"# <span style=\"color:green;\">**Analysis of Breast Cancer Wisconia Dataset; and selecting the best machine learning model to predict the patient is having cancer or not!**\n# <span style=\"color:green;\">**By:-Balkrishan_Mahabir**\n    ","27848a8f":"# <span style=\"color:green;\">**Droping the features having higher similarity than 0.85, to avoid overfitting**","eeafaf46":" # <span style =\"color:green;\"> RandomForestclassifier is the best model for prediction , and for better accuracy recall for cancerous \"M\" should be kept high","2ab9cce0":"# <span style =\"color: green;\">** Converting boolean into digits**"}}