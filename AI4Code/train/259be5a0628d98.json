{"cell_type":{"11c80d66":"code","00643c9a":"code","05ca072f":"code","1f9c12fb":"code","3ad3b553":"code","9ad6abc2":"code","40486923":"code","3c0d6b6e":"code","598b97f1":"code","04e18142":"code","6da4353d":"code","acaafa64":"code","cbb17d92":"code","49c41426":"code","f674d15f":"code","0fe627f4":"code","3058879c":"code","c9b9e86e":"code","73e76811":"code","8a7fb8b5":"code","6372cb1a":"code","259aa7c3":"code","3ce89d7e":"markdown","76dd646d":"markdown","64dfbb17":"markdown","0ddc4a9d":"markdown","436ae6ac":"markdown","67010845":"markdown","c1b4f0ea":"markdown","9b68f9d1":"markdown","b6079d41":"markdown","6563e68e":"markdown","e7f63d0b":"markdown"},"source":{"11c80d66":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport re\n\nnp.random.seed(42)","00643c9a":"train = pd.read_excel('\/kaggle\/input\/fooddeliverytime\/Data_Train.xlsx')\ntrain.head()","05ca072f":"train.info()","1f9c12fb":"train['Average_Cost'] = pd.to_numeric(train['Average_Cost'].str.replace('[^0-9]',''))\ntrain['Minimum_Order'] = pd.to_numeric(train['Minimum_Order'].str.replace('[^0-9]',''))\ntrain['Delivery_Time'] = pd.to_numeric(train['Delivery_Time'].str.replace('minutes',''))\n\ntrain.info()","3ad3b553":"\ntrain['Rating'] = pd.to_numeric(train['Rating'].apply(lambda x : np.NaN if x in ['-','NEW','Opening Soon', 'Temporarily Closed'] else x))\ntrain.isna().mean()*100","9ad6abc2":"train['Votes'] = pd.to_numeric(train['Votes'].apply(lambda x : np.NaN if x == '-' else x))\ntrain['Reviews'] = pd.to_numeric(train['Reviews'].apply(lambda x : np.NaN if x == '-' else x))","40486923":"train.info()","3c0d6b6e":"g = train.groupby('Restaurant')['Average_Cost'].mean().sort_values(ascending=False)\ng= g.reset_index().sort_values(by='Average_Cost',ascending=False).head(10)\nplt.figure(figsize=(6,5))\nax = sns.barplot(g['Restaurant'],g['Average_Cost'],palette='Blues_r')\nax.set_xticklabels(ax.get_xticklabels(),rotation=30)\nplt.show()","598b97f1":"g = train.groupby('Restaurant')['Reviews'].mean().sort_values(ascending=False)\ng= g.reset_index().sort_values(by='Reviews',ascending=False).head(5)\nax = sns.barplot(g['Restaurant'],g['Reviews'])\nax.set_xticklabels(ax.get_xticklabels(),rotation=30)\nplt.show()","04e18142":"plt.figure(figsize=(8,6))\nsns.heatmap(train.corr(),annot=True,cmap='Blues')\nplt.show()","6da4353d":"sns.scatterplot(train['Reviews'],train['Delivery_Time'])\nplt.show()","acaafa64":"sns.scatterplot(train['Votes'],train['Delivery_Time'])\nplt.show()","cbb17d92":"sns.countplot(train['Delivery_Time'])\nplt.show()","49c41426":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\n\ntrain['Restaurant'] = le.fit_transform(train['Restaurant'])\ntrain['Location'] = le.fit_transform(train['Location'])\ntrain['Rating'].fillna(round(train['Rating'].mean()),inplace=True)\ntrain['Votes'].fillna(train['Votes'].mode()[0],inplace=True)\ntrain['Reviews'].fillna(train['Reviews'].median(),inplace=True)\ntrain['Average_Cost'].fillna(train['Average_Cost'].mean(),inplace=True)\n\ntrain1 = train.copy()\n\ntrain['Cuisines'] = le.fit_transform(train['Cuisines'])\n\ntrain.info()","f674d15f":"from scipy.stats import zscore\nfrom sklearn.model_selection import train_test_split\n\nX = train.drop('Delivery_Time',axis=1)\ny = train['Delivery_Time']\n\nX = X.apply(zscore)\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=.3,random_state=50)","0fe627f4":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n\nrf = RandomForestClassifier(n_estimators=100)\nrf.fit(X_train,y_train)\nypred = rf.predict(X_test)\n\naccuracy_score(y_test,ypred)","3058879c":"impf = pd.DataFrame({'Feature_importance':rf.feature_importances_,'Features':X.columns}).sort_values(by='Feature_importance',\n                                                                                                            ascending=False)\nax = sns.barplot(impf['Features'],impf['Feature_importance'],palette=\"rocket\")\nax.set_xticklabels(ax.get_xticklabels(),rotation=30)\nsns.despine(bottom=True)\nplt.show()","c9b9e86e":"from sklearn.feature_extraction.text import CountVectorizer\n\ncv = CountVectorizer()\nvec = cv.fit_transform(train1['Cuisines']).toarray()\nvec.shape","73e76811":"from sklearn.decomposition import TruncatedSVD\n\nsvd = TruncatedSVD(n_components=5, random_state=42)\ndata = svd.fit_transform(vec) \ndata.shape","8a7fb8b5":"train1['Cuisines'] = data\n\nX = train1.drop('Delivery_Time',axis=1)\ny = train1['Delivery_Time']\n\nX = X.apply(zscore)\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=.3,random_state=42)\n","6372cb1a":"rf1 = RandomForestClassifier()\nrf1.fit(X_train,y_train)\nypred = rf1.predict(X_test)\n\naccuracy_score(y_test,ypred)","259aa7c3":"from sklearn.metrics import confusion_matrix\n\nsns.heatmap(confusion_matrix(y_test,ypred),annot=True,cmap='rainbow',fmt='d')","3ce89d7e":"### Trying to increase the accuracy score..\n\n#### Using Countvectorizer on Cuisines","76dd646d":"All the features are with datatype object","64dfbb17":"**Label encoding**","0ddc4a9d":"**Highest 'Average cost' of 10 restaurants**","436ae6ac":"**The heatmap shows that Votes,Reviews highly correlated with the target variable.**","67010845":"# Model Building","c1b4f0ea":"With Random Forest Classifier, the accuracy score is 0.78","9b68f9d1":"A bar plot showing feature importance","b6079d41":"**Top 5 restaurants with highest reviews**","6563e68e":"# Standardization & Train-Test Split","e7f63d0b":"# Data Preprocessing\n\n### Changing object to numeric"}}