{"cell_type":{"b09fb27a":"code","bb10d520":"code","6d29de23":"code","90d72090":"code","3e0568fc":"code","53613bd4":"code","b667de1c":"code","6881f799":"code","ee1236a3":"code","da05b1ff":"code","ca941f5c":"code","4d87f5cf":"code","7822c2ff":"code","004464af":"code","f48cf231":"code","1a3a884b":"code","d2e61601":"code","abfd776b":"code","7f491595":"code","a6adb38b":"code","fc6eda4e":"code","1fa58ab3":"code","2fe7bf8c":"code","7c5ad1c7":"code","f832cc59":"code","a973b4a1":"code","01bde95a":"code","386b31a1":"code","2fce7e35":"code","ce37a7e6":"code","24f9f392":"code","a3f03d9a":"markdown","1daa5b43":"markdown","0815c655":"markdown","b1b39528":"markdown","a38c0d86":"markdown","14b0a1cb":"markdown"},"source":{"b09fb27a":"#loading importing libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport scipy as sp\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","bb10d520":"df= pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")","6d29de23":"df.head()","90d72090":"df.columns","3e0568fc":"df.dtypes # displaying the data types","53613bd4":"df.info()","b667de1c":"df.shape  #7787 records and 12 columns","6881f799":"df.isnull().sum()  # sum of null values","ee1236a3":"#percentage of null values\ndf.isnull().sum()\/(len(df))*100","da05b1ff":"#director column having maximum of 30% null values\n#director column has minimal use and having no logical way to replace values\n#hence getting droped\ndirector=df.dropna(axis=1)","ca941f5c":"#temporarily filling null values of date_added with unknown later to be replaced with logical value\ndf.date_added.fillna(\"unknown\",inplace= True)","4d87f5cf":"df.isnull().sum()","7822c2ff":"#creating new year column from date_added column\ndf[\"year\"]= df.date_added.apply(lambda x: str(x).split(\",\")[-1])","004464af":"#most occuring date:2019\ndf.year.value_counts()    #COUNTING THE VALUES USING VALUE_COUNTS()","f48cf231":"#replacing unknown values with 2019(most occuring date year)\ndf[\"year\"]= df.year.apply(lambda x: str(x).replace(\"unknown\",\"2019\"))","1a3a884b":"#removing extra space in the year column values\ndf[\"year\"]= df.year.apply(lambda x: str(x).replace(\" \",\"\"))","d2e61601":"df.year.value_counts()","abfd776b":"df.isnull().sum()","7f491595":"df.country.value_counts() #displaying the most occurred country","a6adb38b":"#filling null values of country with most occuring country\ndf.country.fillna(\"United_states\",inplace= True)","fc6eda4e":"df.rating.value_counts()   #displaying the most occurred rating","1fa58ab3":"#filling null values of rating with most occuring rating\ndf.rating.fillna(\"TV-MA\",inplace= True)","2fe7bf8c":"df.isnull().sum()","7c5ad1c7":"# displaying all the countries with most contribution to netflix content\nx= df.country.value_counts().head(20)\nplt.figure(figsize=(10,10))\nsns.set_style(\"whitegrid\")   #set style to whitegrid\nax= sns.barplot(x.values,x.index)   #using bar for visualization\nax.set_xlabel(\"Number of content\")\nax.set_ylabel(\"Number of country\")","f832cc59":"#distribution of type of content on netflix \n#69.1 percent of contents are movies while 30 percent are tv shows\nplt.figure(figsize=(9,9))\n\nx= df.type.value_counts()\nsns.countplot(x= \"type\",data= df)","a973b4a1":"plt.figure(figsize=(8,10))\n\nlabel= [\"Movies\",\"Tv Shows\"]\n\nplt.pie(x.values, labels= label ,autopct= \"%1.1f%%\") # visualizing using pie\nplt.show()   ","01bde95a":"#Netflix content releases over the years\nx= df.release_year.value_counts()\nplt.figure(figsize=(16,6))\nplt.xlabel(\"Year\")\n\nsns.lineplot(x=x.index ,y= x.values)","386b31a1":"#Number of content added on netflix over the years\nplt.figure(figsize=(15,5))\nx= df.year.value_counts()\nax= sns.lineplot(x.index,x.values)\nax.set_ylabel(\"No of content\")","2fce7e35":"plt.figure(figsize=(8,8))\n\nsns.barplot(x.values,x.index)","ce37a7e6":"#content distribution based on rating\n#most of the content of netflix is either rated TV-MA or TV-14\nplt.figure(figsize=(16,6))\nsns.countplot(x= \"rating\",data= df)","24f9f392":"x= df.rating.value_counts()\nplt.figure(figsize=(10,10))\n\nlabels= list(x.index)\nplt.pie(x.values,labels= labels,autopct= \"%1.1f%%\")\nplt.show()","a3f03d9a":"# NETFLIX MOVIES AND TV SHOWS","1daa5b43":"# PLOTTING THE VALUES WITH USE OF SEABORN AND MATPLOTLIB","0815c655":"# DISPLAYING THE ROWS AND COLUMNS USING SHAPE","b1b39528":"GUYZ YOUR THOUGHTS AND FEEDBACKS ARE HIGHLY APPRECIATED \n#                   STAF SAFE AND TAKE CARE AND PLZ SHOW SOME LOVE ON THIS....","a38c0d86":"# DISPLAY THE TOP 5 COLUMNS USING HEAD","14b0a1cb":"# USING ANONYMOUS FUNCTION : LAMBDA"}}