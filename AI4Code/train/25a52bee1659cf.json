{"cell_type":{"51760740":"code","4b780ff3":"code","3ac8f6c5":"code","db1e75f3":"code","751e68b8":"code","1a970e8e":"code","a4753201":"code","fabb0d14":"code","8358e7f0":"markdown","c490abdf":"markdown","67b5e164":"markdown","305d2af6":"markdown","d1913b6c":"markdown","4182091e":"markdown"},"source":{"51760740":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b780ff3":"import pandas as pd\nimport math\nimport scipy.stats as st\npd.set_option('display.max_columns', None)\npd.set_option('display.expand_frame_repr', False)\npd.set_option('display.float_format', lambda x: '%.5f' % x)\n","3ac8f6c5":"df = pd.read_csv(\"..\/input\/amazon-reviewdataset\/amazon_review.csv\")\ndf.head()","db1e75f3":"df.asin.value_counts()","751e68b8":"df[\"reviewerID\"].nunique()","1a970e8e":"df[\"overall\"].mean()","a4753201":"df['Timestamp'] = pd.to_datetime(df['Timestamp'])\n\ncurrent_date = pd.to_datetime('2021-02-10 0:0:0')\n\ndf[\"days\"] = (current_date - df['Timestamp']).dt.days\n\ndf.head()","fabb0d14":"def time_based_weighted_average(dataframe, w1=28, w2=26, w3= 24, w4=22):\n    return df.loc[df[\"day_diff\"] <= 30, \"overall\"].mean() * w1\/100 + \\\n    df.loc[(df[\"day_diff\"] > 30) & (df[\"day_diff\"] <= 90), \"overall\"].mean() * w2\/100 + \\\n    df.loc[(df[\"day_diff\"] > 90) & (df[\"day_diff\"] <= 180), \"overall\"].mean() * w3\/100 + \\\n    df.loc[df[\"day_diff\"] > 180, \"overall\"].mean() * w4\/100\n\ntime_based_weighted_average(df)","8358e7f0":"> **Bu veri setinde 4915 adet e\u015f\u015fiz kullan\u0131c\u0131 bulunmaktad\u0131r**","c490abdf":"> **Puanlaman\u0131n ilk hali**","67b5e164":"> **Bu veri setinde 4915 \u00fcr\u00fcn bulunmaktad\u0131r.**","305d2af6":"> **Tarihe g\u00f6re a\u011f\u0131rl\u0131kland\u0131rma yapt\u0131k, 4,698 \u00e7\u0131kt\u0131, ilk ortalama 4,58 di. **","d1913b6c":"* reviewerID \u2013 Kullan\u0131c\u0131 ID\u2019si\n* \u00d6rn: A2SUAM1J3GNN3B\n* asin \u2013 \u00dcr\u00fcn ID\u2019si.\n* \u00d6rn: 0000013714\n* reviewerName \u2013 Kullan\u0131c\u0131 Ad\u0131\n* helpful \u2013 Faydal\u0131 de\u011ferlendirme derecesi\n* \u00d6rn: 2\/3\n* reviewText \u2013 De\u011ferlendirme\n* Kullan\u0131c\u0131n\u0131n yazd\u0131\u011f\u0131 inceleme metni\n* overall \u2013 \u00dcr\u00fcn rating\u2019i\n* summary \u2013 De\u011ferlendirme \u00f6zeti\n* unixReviewTime \u2013 De\u011ferlendirme zaman\u0131\n* Unix time\n* reviewTime \u2013 De\u011ferlendirme zaman\u0131\n* day_diff \u2013 De\u011ferlendirmeden itibaren ge\u00e7en g\u00fcn say\u0131s\u0131\n* helpful_yes \u2013 De\u011ferlendirmenin faydal\u0131 bulunma say\u0131s\u0131\n* total_vote \u2013 De\u011ferlendirmeye verilen oy say\u0131s","4182091e":"> **Ortalama rating**"}}