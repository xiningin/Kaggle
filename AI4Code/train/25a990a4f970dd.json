{"cell_type":{"dde7bdc1":"code","604f6f4e":"code","68d9affe":"code","52ff5c56":"code","2c4d3509":"markdown","fc4b7554":"markdown","14ece8d5":"markdown","adcbd26e":"markdown"},"source":{"dde7bdc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","604f6f4e":"!pip install transformers\n!pip install sentencepiece","68d9affe":"#Code by Antwerp https:\/\/www.kaggle.com\/antwerp\/text-summarization-using-pegasus\n\ntxt_path = \"\/kaggle\/input\/emailclassifierdatasetdesafio2\/train.txt\"\n\nwith open(txt_path, \"rt\") as f:\n    txt = f.read()\n    \ntxt","52ff5c56":"#Code by Antwerp https:\/\/www.kaggle.com\/antwerp\/text-summarization-using-pegasus\n\nfrom transformers import PegasusForConditionalGeneration, AutoTokenizer\nimport torch\n\n# You can chose models from following list\n# https:\/\/huggingface.co\/models?sort=downloads&search=google%2Fpegasus\nmodel_name = 'google\/pegasus-cnn_dailymail'\ndevice = 'cuda' if torch.cuda.is_available() else 'cpu'\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = PegasusForConditionalGeneration.from_pretrained(model_name).to(device)\nbatch = tokenizer(txt, truncation=True, padding='longest', return_tensors=\"pt\").to(device)\ntranslated = model.generate(**batch)\ntgt_text = tokenizer.batch_decode(translated, skip_special_tokens=True)\n\ntgt_text","2c4d3509":"Ackonowledgement: \n\nAntwerp https:\/\/www.kaggle.com\/antwerp\/text-summarization-using-pegasus\n","fc4b7554":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: black;\"><b style=\"color:#DCDCDC;\">Google Pegasus<\/b><\/h1><\/center>","14ece8d5":"#That text is too long.","adcbd26e":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTB-ae2GTLYNd7S6Flvh35FJd91TMhPc4G96QPizxkg0WTi8FZPmY-M5tCZ_RDLLas8Z_c&usqp=CAU)towardsdatascience.com"}}