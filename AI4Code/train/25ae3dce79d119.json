{"cell_type":{"2b48fe15":"code","95d9b18f":"code","34ea4796":"code","3f23927b":"code","1756496f":"code","a8c70a6d":"code","aaba7f63":"code","2da5159c":"code","c49d8510":"code","ab7690da":"code","d0bea81e":"code","7fd020b9":"code","1f4ab990":"code","9abd70c4":"code","343931aa":"code","829066ac":"code","99a3163e":"code","7937cb3a":"code","a3f2e4c7":"code","2b9030d4":"code","7cc959b0":"code","ef4875a4":"code","4d890f53":"code","577ff0f7":"code","85045cfc":"code","776ad62f":"code","ceaa8afa":"code","fc0ed7be":"markdown","8b0e8f63":"markdown","3e612815":"markdown","69b46e3f":"markdown","9f36c91b":"markdown"},"source":{"2b48fe15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","95d9b18f":"penguin_df = pd.read_csv(\"\/kaggle\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_lter.csv\")","34ea4796":"penguin_df.head()","3f23927b":"penguin_df.tail()","1756496f":"penguin_df.shape","a8c70a6d":"penguin_df.info()","aaba7f63":"penguin_df.describe()","2da5159c":"import pandas_profiling as pp\npp.ProfileReport(penguin_df)","c49d8510":"\npenguin_df.isnull().values.any()","ab7690da":"penguin_df.isnull().sum()","d0bea81e":"# Handling missing values\n\nfrom sklearn.impute import SimpleImputer\n#setting strategy to 'most frequent' to impute by the mean\nimputer = SimpleImputer(strategy='most_frequent')# strategy can also be mean or median \npenguin_df.iloc[:,:] = imputer.fit_transform(penguin_df)","7fd020b9":"penguin_df.isnull().sum()","1f4ab990":"\npenguin_df.groupby('Species').size()","9abd70c4":"# countplot----Plot the frequency of the Outcome\n\nfig1, ax1 = plt.subplots(1,2,figsize=(13,10))\n\n#It shows the count of observations in each categorical bin using bars\n\nsns.countplot(penguin_df['Species'],ax=ax1[0])\n\n#Find the % of diabetic and Healthy person\n\nlabels = 'Adelie Penguin', 'Chinstrap penguin' , 'Gentoo penguin'\n\npenguin_df.Species.value_counts().plot.pie(labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)","343931aa":"penguin_df.hist(figsize=(15,10))\n","829066ac":"# Distplot\n\n\nfig, ax2 = plt.subplots(3, 2, figsize=(16, 16))\nsns.distplot(penguin_df['Body Mass (g)'],ax=ax2[0][0])\nsns.distplot(penguin_df['Culmen Depth (mm)'],ax=ax2[0][1])\nsns.distplot(penguin_df['Culmen Length (mm)'],ax=ax2[1][0])\nsns.distplot(penguin_df['Delta 13 C (o\/oo)'],ax=ax2[1][1])\nsns.distplot(penguin_df['Delta 15 N (o\/oo)'],ax=ax2[2][0])\nsns.distplot(penguin_df['Flipper Length (mm)'],ax=ax2[2][1])\n\n","99a3163e":"# pairplot--Multiple relationship of scatterplot\n\nsns.pairplot(penguin_df,hue='Species')","7937cb3a":"# corrlation matrix \n\ncor=penguin_df.corr()\ncor","a3f2e4c7":"# correlation plot---heatmap\n\nsns.heatmap(cor,annot=True)","2b9030d4":"# Categorical vs Continuous ----Species vs Culmen Length\n\nfig, ax2 = plt.subplots(3, 2, figsize=(20, 20))\nsns.boxplot(x=\"Species\", y=\"Culmen Length (mm)\", data=penguin_df,ax=ax2[0][0])\nsns.barplot(penguin_df['Species'], penguin_df['Culmen Length (mm)'],ax=ax2[0][1])\nsns.stripplot(penguin_df['Species'], penguin_df['Culmen Length (mm)'], jitter=True,ax=ax2[1][0])\nsns.swarmplot(penguin_df['Species'], penguin_df['Culmen Length (mm)'], ax=ax2[1][1])\nsns.violinplot(penguin_df['Species'], penguin_df['Culmen Length (mm)'], ax=ax2[2][0])\nsns.countplot(x='Culmen Length (mm)',hue='Species',data=penguin_df,ax=ax2[2][1])","7cc959b0":"# Categorical vs Continuous ----Species vs Body Mass (g)\n\nfig, ax2 = plt.subplots(3, 2, figsize=(20, 20))\nsns.boxplot(x=\"Species\", y=\"Body Mass (g)\", data=penguin_df,ax=ax2[0][0])\nsns.barplot(penguin_df['Species'], penguin_df['Body Mass (g)'],ax=ax2[0][1])\nsns.stripplot(penguin_df['Species'], penguin_df['Body Mass (g)'], jitter=True,ax=ax2[1][0])\nsns.swarmplot(penguin_df['Species'], penguin_df['Body Mass (g)'], ax=ax2[1][1])\nsns.violinplot(penguin_df['Species'], penguin_df['Body Mass (g)'], ax=ax2[2][0])\nsns.countplot(x='Body Mass (g)',hue='Species',data=penguin_df,ax=ax2[2][1])","ef4875a4":"# Categorical vs Continuous ----Species vs Culmen Depth (mm)\n\nfig, ax2 = plt.subplots(3, 2, figsize=(20, 20))\nsns.boxplot(x=\"Species\", y=\"Culmen Depth (mm)\", data=penguin_df,ax=ax2[0][0])\nsns.barplot(penguin_df['Species'], penguin_df['Culmen Depth (mm)'],ax=ax2[0][1])\nsns.stripplot(penguin_df['Species'], penguin_df['Culmen Depth (mm)'], jitter=True,ax=ax2[1][0])\nsns.swarmplot(penguin_df['Species'], penguin_df['Culmen Depth (mm)'], ax=ax2[1][1])\nsns.violinplot(penguin_df['Species'], penguin_df['Culmen Depth (mm)'], ax=ax2[2][0])\nsns.countplot(x='Culmen Depth (mm)',hue='Species',data=penguin_df,ax=ax2[2][1])","4d890f53":"# Categorical vs Continuous ----Species vs Delta 13 C (o\/oo)\n\nfig, ax2 = plt.subplots(3, 2, figsize=(20, 20))\nsns.boxplot(x=\"Species\", y=\"Delta 13 C (o\/oo)\", data=penguin_df,ax=ax2[0][0])\nsns.barplot(penguin_df['Species'], penguin_df['Delta 13 C (o\/oo)'],ax=ax2[0][1])\nsns.stripplot(penguin_df['Species'], penguin_df['Delta 13 C (o\/oo)'], jitter=True,ax=ax2[1][0])\nsns.swarmplot(penguin_df['Species'], penguin_df['Delta 13 C (o\/oo)'], ax=ax2[1][1])\nsns.violinplot(penguin_df['Species'], penguin_df['Delta 13 C (o\/oo)'], ax=ax2[2][0])\nsns.countplot(x='Delta 13 C (o\/oo)',hue='Species',data=penguin_df,ax=ax2[2][1])","577ff0f7":"# Categorical vs Continuous ----Species vs Delta 15 N (o\/oo)\n\nfig, ax2 = plt.subplots(3, 2, figsize=(20, 20))\nsns.boxplot(x=\"Species\", y=\"Delta 15 N (o\/oo)\", data=penguin_df,ax=ax2[0][0])\nsns.barplot(penguin_df['Species'], penguin_df['Delta 15 N (o\/oo)'],ax=ax2[0][1])\nsns.stripplot(penguin_df['Species'], penguin_df['Delta 15 N (o\/oo)'], jitter=True,ax=ax2[1][0])\nsns.swarmplot(penguin_df['Species'], penguin_df['Delta 15 N (o\/oo)'], ax=ax2[1][1])\nsns.violinplot(penguin_df['Species'], penguin_df['Delta 15 N (o\/oo)'], ax=ax2[2][0])\nsns.countplot(x='Delta 15 N (o\/oo)',hue='Species',data=penguin_df,ax=ax2[2][1])","85045cfc":"# Categorical vs Continuous ----Species vs Delta 15 N (o\/oo)\n\nfig, ax2 = plt.subplots(3, 2, figsize=(20, 20))\nsns.boxplot(x=\"Species\", y=\"Flipper Length (mm)\", data=penguin_df,ax=ax2[0][0])\nsns.barplot(penguin_df['Species'], penguin_df['Flipper Length (mm)'],ax=ax2[0][1])\nsns.stripplot(penguin_df['Species'], penguin_df['Flipper Length (mm)'], jitter=True,ax=ax2[1][0])\nsns.swarmplot(penguin_df['Species'], penguin_df['Flipper Length (mm)'], ax=ax2[1][1])\nsns.violinplot(penguin_df['Species'], penguin_df['Flipper Length (mm)'], ax=ax2[2][0])\nsns.countplot(x='Flipper Length (mm)',hue='Species',data=penguin_df,ax=ax2[2][1])","776ad62f":"#Body Mass (g) vs Flipper Length (mm)\nsns.pointplot(penguin_df['Body Mass (g)'], penguin_df['Flipper Length (mm)'], hue=penguin_df['Species'])\nsns.jointplot(penguin_df['Body Mass (g)'], penguin_df['Flipper Length (mm)'], kind='hex')\nsns.lmplot(x='Body Mass (g)',y='Flipper Length (mm)',data=penguin_df,hue='Species')","ceaa8afa":"#Body Mass (g) vs Flipper Length (mm)\nsns.pointplot(penguin_df['Culmen Length (mm)'], penguin_df['Flipper Length (mm)'], hue=penguin_df['Species'])\nsns.jointplot(penguin_df['Culmen Length (mm)'], penguin_df['Flipper Length (mm)'], kind='hex')\nsns.lmplot(x='Culmen Length (mm)',y='Flipper Length (mm)',data=penguin_df,hue='Species')","fc0ed7be":"# 3. Data Visualization","8b0e8f63":"# 1. Import Libraries","3e612815":"# Bivariate Analysis","69b46e3f":"# Univariate Analysis","9f36c91b":"# 2. Data Exploration"}}