{"cell_type":{"86d6c8ec":"code","36767a30":"code","8e891e98":"code","a665914b":"code","5cc08b7b":"code","f50764da":"code","183b3ddf":"code","127c8053":"code","56833a8d":"code","0ec8f2be":"code","e6fe88ca":"code","65485f65":"code","ea909f2b":"code","fbb97f87":"code","2a486902":"code","14bff2e4":"code","9198e6c9":"code","8ad2ca46":"code","ed3ec273":"code","d51862c5":"code","bdb79467":"code","d0bac748":"code","9aa9ace6":"code","d44c6f3d":"code","04388895":"code","d3665560":"code","0918522b":"code","df26c288":"code","18b60294":"code","abcfb34d":"code","ea610333":"code","86ea760f":"code","28c29319":"code","7d56c8aa":"code","918d4be6":"code","3208493f":"code","3c1ce5c0":"code","364f2e2c":"code","16ee4525":"code","a329941f":"code","292a421b":"code","4b247d6e":"code","d2a5722a":"code","7a323686":"code","017cb397":"code","7c785eda":"code","33cd664e":"code","7589fa5e":"code","9e8510ae":"code","20901fd7":"code","4b23d53c":"code","26f1083d":"code","435abb50":"code","2359bd3b":"code","3c405008":"code","ef24de16":"code","d1507a9d":"code","f401dd6e":"code","6d83db2a":"code","dce6be4d":"code","8d038402":"code","ba7555f4":"code","d32791d2":"code","8b77c66f":"code","81dad195":"code","778bf623":"code","4c0f974d":"code","308009cb":"markdown","c6510d9b":"markdown","23f2e23b":"markdown","b1dfac27":"markdown","075174c2":"markdown","4ee6be8b":"markdown","e077a37b":"markdown","13488ea7":"markdown","ee0845b5":"markdown","1ab37ef0":"markdown","07a4021c":"markdown","f412f651":"markdown"},"source":{"86d6c8ec":"# IMPORT LIBRARIES\n\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n","36767a30":"# GET vaccine,symptom  DATA FROM CSV FOR 2020 & 2021\n\n\ntdata21=pd.read_csv(\"..\/input\/covid19-vaccine-adverse-reactions\/2021VAERSDATA.csv\")\n\nvax21=pd.read_csv(\"..\/input\/covid19-vaccine-adverse-reactions\/2021VAERSVAX.csv\")\n\nsymp21=pd.read_csv(\"..\/input\/covid19-vaccine-adverse-reactions\/2021VAERSSYMPTOMS.csv\")\n","8e891e98":"\n\nprint(tdata21.info(),tdata21.shape)\n","a665914b":"print(vax21.info(),vax21.shape)","5cc08b7b":"print(symp21.info(),symp21.shape)","f50764da":"symp21.shape,tdata21.shape,vax21.shape","183b3ddf":"vax21['VAX_NAME'].value_counts()","127c8053":"vax21[(vax21[\"VAX_NAME\"]==\"COVID19 (COVID19 (MODERNA))\") | (vax21[\"VAX_NAME\"]==\"COVID19 (COVID19 (PFIZER-BIONTECH))\") | (vax21[\"VAX_NAME\"]==\"COVID19 (COVID19 (JANSSEN))\")].info()","56833a8d":"vax_covid=vax21[(vax21[\"VAX_NAME\"]==\"COVID19 (COVID19 (MODERNA))\") | (vax21[\"VAX_NAME\"]==\"COVID19 (COVID19 (PFIZER-BIONTECH))\") | (vax21[\"VAX_NAME\"]==\"COVID19 (COVID19 (JANSSEN))\")]","0ec8f2be":"vax_covid[\"VAX_NAME\"].value_counts()","e6fe88ca":"symp21.shape,tdata21.shape,vax_covid.shape","65485f65":"master_df=pd.merge(tdata21, pd.merge(symp21, vax_covid,on='VAERS_ID',how='inner'),on='VAERS_ID',how='right')","ea909f2b":"master_df.shape","fbb97f87":"df_num=master_df.select_dtypes(include=[np.number])","2a486902":"df_cat=master_df.select_dtypes(include=[np.object])","14bff2e4":"df_cat.isnull().sum() # ALL NULLS in categorical columns ","9198e6c9":"Percent = (df_cat.isnull().sum()*100\/df_cat.isnull().count()).sort_values(ascending=False)\nPercent\n\n# Percent nulls in categorical columns \n","8ad2ca46":"\ndf_cat.drop([\"ER_VISIT\",\"BIRTH_DEFECT\",\"X_STAY\",\"RPT_DATE\",\"V_FUNDBY\",\"DISABLE\",\"L_THREAT\",\n             \"DATEDIED\",\"DIED\",\"PRIOR_VAX\",\"HOSPITAL\",\"OFC_VISIT\",\"ER_ED_VISIT\",\"SPLTTYPE\"]\n            ,axis=1,inplace=True) # dropping those features whose null percentage exceeds 50-60%","ed3ec273":"Percent = (df_cat.isnull().sum()*100\/df_cat.isnull().count()).sort_values(ascending=False)\nPercent","d51862c5":"df_num.isnull().sum()# all nulls in numerical columns ","bdb79467":"Percent = (df_num.isnull().sum()*100\/df_num.isnull().count()).sort_values(ascending=False)\nPercent # percent nulls ","d0bac748":"df_num.drop([\"CAGE_MO\",\"HOSPDAYS\"],axis=1,inplace=True)# dropping those features whose null percentage exceeds 50-60%","9aa9ace6":"Percent = (df_num.isnull().sum()*100\/df_num.isnull().count()).sort_values(ascending=False)\nPercent","d44c6f3d":"df_num.dropna(thresh=10,inplace=True) # drop those rows where atleast 1 null is present","04388895":"df_cat.dropna(thresh=26,inplace=True)# drop those rows where atleast 1 null is present\n","d3665560":"df_cat.shape","0918522b":"df_num.shape","df26c288":"df_cat[df_cat.duplicated(keep='first')]","18b60294":"df_cat.drop_duplicates(keep='first',inplace=True)","abcfb34d":"df_cat[df_cat.duplicated(keep='first')]","ea610333":"df_cat.shape","86ea760f":"\n\ndf_num[df_num.duplicated(keep='first')]","28c29319":"df_num.drop_duplicates(keep='first',inplace=True)","7d56c8aa":"df_num[df_num.duplicated(keep='first')]","918d4be6":"df_num.shape,df_cat.shape","3208493f":"df_num.head()","3c1ce5c0":"df_cat.replace(to_replace=\"None\", value=np.nan,inplace=True)","364f2e2c":"df_num.replace(to_replace=\"None\", value=np.nan,inplace=True)","16ee4525":"df_cat.replace(to_replace=\"none\", value=np.nan,inplace=True)","a329941f":"df_num.replace(to_replace=\"none\", value=np.nan,inplace=True)","292a421b":"df_cat.replace(to_replace=\"NONE\", value=np.nan,inplace=True)","4b247d6e":"df_num.replace(to_replace=\"NONE\", value=np.nan,inplace=True)","d2a5722a":"df_cat.dropna(thresh=26,inplace=True) # removing nulls from above ","7a323686":"df_num.dropna(thresh=10,inplace=True) # removing nulls from above ","017cb397":"df_cat.describe(include='all').T","7c785eda":"df_cat[\"CUR_ILL\"].value_counts()# cHECKING FOR TEXTUAL\/UNNECESSARY DATA COLUMNS FOR THOSE HAVING MORE THAN A 1000 UNIQUE CATEGORIES","33cd664e":"df_cat[\"LAB_DATA\"].value_counts()# cHECKING FOR TEXTUAL\/UNNECESSARY DATA COLUMNS FOR THOSE HAVING MORE THAN A 1000 UNIQUE CATEGORIES","7589fa5e":"'''SO FROM ANALYSIS WE GET TO KNOW THAT THERE ARE A LOT OF TEXTUAL\/IRRELEVANT DATA MARKED\nAS CATEGORIES AVAILABLE. SO WE REMOVE FEATURES AS -\n\n- HISTORY \n- SYMPTOM_TEXT etc..\n\n'''\n\ndf_cat.drop([\"HISTORY\",\"SYMPTOM_TEXT\",\"LAB_DATA\",\"OTHER_MEDS\",\"CUR_ILL\",\"ALLERGIES\"],axis=1,inplace=True)","9e8510ae":"df_cat.describe(include='all').T","20901fd7":"df_cat.drop(\"TODAYS_DATE\",axis=1,inplace=True)\n# this feature didnot make any sense \n","4b23d53c":"df_cat.info()","26f1083d":"sns.countplot(df_cat[\"VAX_MANU\"])","435abb50":"df_cat[\"V_ADMINBY\"].value_counts().plot(kind='pie')","2359bd3b":"pd.crosstab(df_cat[\"V_ADMINBY\"],df_cat[\"VAX_NAME\"]).plot(kind='bar',stacked=True)\nplt.show()\n\n\n'''\nPRIVATE BODIES HAVE ADMINISTERED THE LARGEST AMOUNT OF VACCINATIONS\nOF MODERNA\/PFIZER \n\nWHEREAS OTHER UNDISCLOSED BODIES HAVE ADMINISTERED JANSSEN VACCINE THE MOST \n'''","3c405008":"\nplt.rcParams['figure.figsize'] = (12,8)\npd.crosstab(df_cat[\"RECOVD\"],df_cat[\"VAX_MANU\"]).plot(kind='bar',stacked=True)\nplt.show()\n\n'''\nThe below graph tells us that \nNot Recovered from adverse effects of vaccine (\"N\") \n    - the count is max\n    - people unable to recover from adverse effects are in order:  MODERNA>PFIZER>JANSSEN\nRecovered from adverse effects of vaccine (\"Y\")\n    - COUNT(U) < COUNT(Y) < COUNT(N)\n    - people able to recover from adverse effects are in order: MODERNA>PFIZER>JANSSEN\n    \n'''\n","ef24de16":"pd.crosstab(df_cat[\"RECOVD\"],df_cat[\"SEX\"]).plot(kind='bar')\nplt.show()\n\n'''\nInsight gathered from the below graph is that \nthe recovery of the FEMAlE gender is the higher in comparison to any other gender \nfor any of the covid vaccines .\n'''","d1507a9d":"\n'''\nThe most occured symptoms across\ndifferent vaccinations for covid are stated down \nbelow in a word cloud.\n\n'''\n\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(stopwords = set(list(STOPWORDS) + ['|']),background_color = 'white',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df_cat[\"SYMPTOM1\"]))\nplt.rcParams['figure.figsize'] = (12,8)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Symptom 1\")\nplt.show()\n\n\n","f401dd6e":"wordcloud2 = WordCloud(stopwords = set(list(STOPWORDS) + ['|']),background_color = 'white',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df_cat[\"SYMPTOM2\"]))\nplt.rcParams['figure.figsize'] = (12,8)\nplt.axis(\"off\")\nplt.imshow(wordcloud2)\nplt.title(\"Symptom 2\")\nplt.show()\n\n\n","6d83db2a":"wordcloud3 = WordCloud(stopwords = set(list(STOPWORDS) + ['|']),background_color = 'white',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df_cat[\"SYMPTOM3\"]))\nplt.rcParams['figure.figsize'] = (12,8)\nplt.axis(\"off\")\nplt.imshow(wordcloud3)\nplt.title(\"Symptom 3\")\nplt.show()\n\n\n","dce6be4d":"wordcloud4 = WordCloud(stopwords = set(list(STOPWORDS) + ['|']),background_color = 'white',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df_cat[\"SYMPTOM4\"]))\nplt.rcParams['figure.figsize'] = (12,8)\nplt.axis(\"off\")\nplt.imshow(wordcloud4)\nplt.title(\"Symptom 4\")\nplt.show()\n","8d038402":"wordcloud5 = WordCloud(stopwords = set(list(STOPWORDS) + ['|']),background_color = 'white',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df_cat[\"SYMPTOM5\"]))\nplt.rcParams['figure.figsize'] = (12,8)\nplt.axis(\"off\")\nplt.imshow(wordcloud5)\nplt.title(\"Symptom 5\")\nplt.show()\n","ba7555f4":"df_num.shape","d32791d2":"df_num.describe().T","8b77c66f":"df_num_sc=df_num.iloc[:].apply(lambda x:(x-x.mean())\/x.std()) # STANDARD SCALING the features \ndf_num_sc.head()","81dad195":"sns.distplot(df_num_sc[\"VAERS_ID\"])","778bf623":"sns.scatterplot(df_num_sc[\"AGE_YRS\"],df_num_sc[\"NUMDAYS\"])\n\n# there seems no relation between the age of recepient and number of days for onset of symptoms after vaccine ","4c0f974d":"sns.boxplot(y=df_num[\"AGE_YRS\"],x=df_cat[\"RECOVD\"],hue=df_cat[\"SEX\"])\n\n\n'''\n\n\n'''","308009cb":"##### DIVIDING MASTER DATAFRAME INTO CATEGORICAL AND NUMERICAL FOR SEPERATE ANALYSIS\n","c6510d9b":"##### NULL VALUE TREATMENT ","23f2e23b":"### UNIVARIATE\/BIVARIATE NUMERICAL ANALYSIS","b1dfac27":"##### GETTING DATA FOR ONLY VACCINE RELATED TO COVID19","075174c2":"##### Obtain Info on the various dataframes  ","4ee6be8b":"### BIVARIATE\/UNIVARIATE CATEGORICAL ANALYSIS","e077a37b":"##### CONCAT THE DATAFRAMES INTO 1 FOR THE SYMPTOMS,VACCINE, AND OTHER DATA FOR THE YEAR 2020 AND 2021","13488ea7":"### CATEGORICAL \/ NUMERICAL ANALYSIS","ee0845b5":"##### DUPLICATES HANDLING ","1ab37ef0":"##### By analysis we found there are data points having \"None\" and \"none\" misrepresented for nulls","07a4021c":"##### MERGING THE 3 DATAFRAMES INTO A MASTER DATAFRAME FOR YEAR 2020\/21 AND COVID19","f412f651":"### UNIVARIATE\/BIVARIATE CATEGORICAL-NUMERICAL ANALYSIS"}}