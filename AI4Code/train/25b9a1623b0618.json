{"cell_type":{"e79e5dca":"code","2a729d21":"code","39fc9361":"code","366e943c":"code","205fcc2a":"code","dfb9b620":"code","85612379":"code","3a3aade5":"code","f4a3312f":"code","fe964779":"code","a3c505d5":"code","e8e1ced1":"code","2196f33d":"code","57b53e2f":"code","96df2207":"code","d26ddab0":"code","d122a604":"code","f4c1d1f9":"code","566da909":"code","94010a8f":"code","f4f52e6d":"code","5a2359e9":"code","b74933b6":"code","6e97d7e6":"code","2014d392":"code","780a6a0e":"markdown","3be4acbd":"markdown","4b0ee2b8":"markdown","10ed5aee":"markdown","1a93c1d0":"markdown"},"source":{"e79e5dca":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2a729d21":"!pip install scipy","39fc9361":"!pip install catboost","366e943c":"from scipy.stats import spearmanr","205fcc2a":"train_nlp = pd.read_csv(open('train_nlp.csv', 'rb'))\ntest_nlp = pd.read_csv(open('test_nlp.csv', 'rb'))\nsample_sub_nlp = pd.read_csv(open('sample_submission_nlp.csv', 'rb'))","dfb9b620":"train_nlp.head(2)","85612379":"test_nlp.head(2)","3a3aade5":"print(train_nlp.columns.tolist())","f4a3312f":"from sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import ensemble \nfrom sklearn.metrics import classification_report, accuracy_score","fe964779":"auxiliary_columns = ['Id']\ntext_features = ['Review','Review_Title']\ncat_features = ['Division', 'Department', 'Product_Category']\nnum_features = ['Age', 'Pos_Feedback_Cnt']","a3c505d5":"train_nlp[text_features + cat_features] = train_nlp[text_features + cat_features].fillna('')\ntest_nlp[text_features + cat_features] = test_nlp[text_features + cat_features].fillna('')","e8e1ced1":"train_nlp.isna().sum(axis=0)","2196f33d":"test_nlp.isna().sum(axis=0)","57b53e2f":"y = train_nlp[['Recommended','Rating']]\nX_train, X_test, y_train, y_test = train_test_split(train_nlp.drop(auxiliary_columns +['Recommended', 'Rating'], axis=1), y, test_size = 0.20, random_state = 42, shuffle = True)","96df2207":"train_nlp[['Recommended','Rating']].head(2)","d26ddab0":"tokens = [{\n            'tokenizer_id':'Space',\n            'lowercasing':'True',\n            'separator_type':'BySense',\n            'token_types':['Word', 'Number', 'Punctuation'],\n        }]","d122a604":"from catboost import Pool, CatBoostClassifier\n\nlearn_pool = Pool(\n    X_train, \n    y_train['Recommended'], \n    cat_features=cat_features,\n    text_features = text_features, \n    feature_names=list(X_train)\n)\ntest_pool = Pool(\n    X_test, \n    y_test['Recommended'], \n    cat_features=cat_features,\n    text_features = text_features, \n    feature_names=list(X_train)\n)\n\nmodel = CatBoostClassifier(iterations=1000, learning_rate=0.03, eval_metric='Accuracy', tokenizers = tokens, task_type='CPU')\nmodel.fit(learn_pool, eval_set=test_pool, verbose=50)","f4c1d1f9":"y_pred = model.predict_proba(X_test)[:,1]\ny_pred.sum()","566da909":"spearmanr(y_test['Recommended'], y_pred>=0.78)","94010a8f":"from catboost import Pool, CatBoostClassifier\n\nlearn_pool = Pool(\n    X_train, \n    y_train['Rating'], \n    cat_features=cat_features,\n    text_features = text_features, \n    feature_names=list(X_train)\n)\ntest_pool = Pool(\n    X_test, \n    y_test['Rating'], \n    cat_features=cat_features,\n    text_features = text_features, \n    feature_names=list(X_train)\n)\n\nmodel2 = CatBoostClassifier(iterations=1000, learning_rate=0.03, eval_metric='Accuracy', tokenizers = tokens, task_type='CPU')\nmodel2.fit(learn_pool, eval_set=test_pool, verbose=50)","f4f52e6d":"y_predr = model2.predict(X_test)\ny_predr.sum()","5a2359e9":"spearmanr(y_test['Rating'], y_predr)","b74933b6":"y_test_pred_proba = model.predict(test_nlp.drop(['Id'], axis=1))\ny_testr_pred = model2.predict(test_nlp.drop(['Id'], axis=1))","6e97d7e6":"df = pd.DataFrame()\ndf['Id'] = test_nlp['Id']\ndf['Rating'] = y_testr_pred\ndf['Recommended'] = (y_test_pred_proba >= 0.78).astype('int64')\n\ndf.to_csv('catboost.csv')","2014d392":"# Import a module to display a link to the file\nfrom IPython.display import FileLink\n# Import a module to delete the file\/l\nimport os\n# Create a download function\ndef csv_download_link(df, csv_file_name, delete_prompt=True):\n    \"\"\"Display a download link to load a data frame as csv within a Jupyter notebook\n\n    Parameters\n    ----------\n    df : pandas data frame\n    csv_file_name : str\n    delete_prompt : bool\n    \"\"\"\n    df.to_csv(csv_file_name, index=False)\n    display(FileLink(csv_file_name))\n    if delete_prompt:\n        a = input('Press enter to delete the file after you have downloaded it.')\n        os.remove(csv_file_name)\ncsv_download_link(df, 'catboost.csv')","780a6a0e":"# Analyzing and Preprocessing","3be4acbd":"# Importing datasets","4b0ee2b8":"# Importing and Installing Models","10ed5aee":"# Pooling and Catboost Modelling","1a93c1d0":"# Predicting on Test Dataset"}}