{"cell_type":{"26d0eccd":"code","6d498ef9":"code","a1d48e28":"code","8d077547":"code","bb1267d2":"code","2ef30925":"code","f594ad67":"code","80e66055":"code","4aa6fa1d":"markdown","84c8b440":"markdown","b06f4e03":"markdown","959daaf2":"markdown","a3556491":"markdown","f312b6bb":"markdown","08d2f2ee":"markdown","4f0b9242":"markdown","ab7b55f1":"markdown","1dc0f172":"markdown","39d575c1":"markdown"},"source":{"26d0eccd":"%%HTML\n<div class='tableauPlaceholder' id='viz1640003227805' style='position: relative'><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='DataBreachAnalysis_16400031589670&#47;ExtentofDataBreach' \/><param name='tabs' value='yes' \/><param name='toolbar' value='yes' \/><param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-GB' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1640003227805');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='800px';vizElement.style.height='850px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='800px';vizElement.style.height='850px';} else { vizElement.style.width='100%';vizElement.style.height='750px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","6d498ef9":"%%HTML\n<div class='tableauPlaceholder' id='viz1640003414940' style='position: relative'><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='DataBreachAnalysis_16400031589670&#47;OverTime' \/><param name='tabs' value='yes' \/><param name='toolbar' value='yes' \/><param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-GB' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1640003414940');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='800px';vizElement.style.height='850px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='800px';vizElement.style.height='850px';} else { vizElement.style.width='100%';vizElement.style.height='750px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","a1d48e28":"%%HTML\n<div class='tableauPlaceholder' id='viz1640003665337' style='position: relative'><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='DataBreachAnalysis_16400031589670&#47;ByOrganisationType' \/><param name='tabs' value='yes' \/><param name='toolbar' value='yes' \/><param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-GB' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1640003665337');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='800px';vizElement.style.height='850px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='800px';vizElement.style.height='850px';} else { vizElement.style.width='100%';vizElement.style.height='750px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","8d077547":"import pandas as pd\n\ndf = pd.read_csv('..\/input\/list-of-top-data-breaches-2004-2021\/DataBreaches(2004-2021).csv')\ndf.head()","bb1267d2":"import numpy as np\ndef ecdf(data):\n    n = len(data)\n    x = np.sort(data)\n\n    y = np.arange(1, len(data)+1) \/ n\n\n    return x, y\n\nimport matplotlib.pyplot as plt\n\nplt.plot(*ecdf(df['Records']), marker='.', linestyle='none')\n\nplt.xlabel('# of records in billions')\nplt.ylabel('ECDF')\nplt.show()","2ef30925":"major_breach = df[df['Records'] >= 500000000]\nyears = major_breach['Year'].astype(int)\nyears = np.sort(years)\nyear_gap = np.diff(years)","f594ad67":"def ecdf_formal(x, data):\n    return np.searchsorted(np.sort(data), x, side='right') \/ len(data)\nmean_year_gap = np.mean(year_gap)\n\nstd_time_gap = np.std(year_gap)\n\nyear_gap_exp = np.random.exponential(mean_year_gap, size=10000)\nyear_gap_norm = np.random.normal(mean_year_gap, std_time_gap, size=10000)\n\nplt.plot(*ecdf(year_gap_exp))\nplt.plot(*ecdf(year_gap_norm))\nplt.plot(*ecdf(year_gap))\n\nplt.legend(('Exp.', 'Norm.'), loc='upper left')\n\nplt.xlabel('time gap (years)')\nplt.ylabel('ECDF')\nplt.xlim(-5, 20)\nplt.show()","80e66055":"exponential_samples = np.random.exponential(mean_year_gap, size=100000)\nnormal_samples = np.random.normal(mean_year_gap, std_time_gap, size=100000)\n\nexponential_samples = exponential_samples[exponential_samples > 2021 - 2019]\nnormal_samples = normal_samples[normal_samples > 2021 - 2019]\n\ninterval_expontential = np.percentile(exponential_samples, [2.5, 50, 97.5]) + 2019\ninterval_normal = np.percentile(normal_samples, [2.5, 50, 97.5]) + 2019\n\nprint('Exponential:', interval_expontential)\nprint('     Normal:', interval_normal)","4aa6fa1d":"## Python Statistics Analysis <a class=\"anchor\"  id=\"chapter2\"><\/a>\nNext, we can perform some statistics analysis on the dataset using Python. First, we import that dataset.","84c8b440":"# Data Breaches Dataset Analysis\n* [Tableau Analysis](#chapter1)\n* [Python Statistics Analysis](#chapter2)\n\nThe dataset contains data breaches that occurred between 2004 and 2021. It can be used to perform some visualisation analytics in Tableau and for some statistical analysis in Python. The goal of this notebook is to play around with the dataset, create Tableau visualisations and extract insights, demonstrate analytical and Python skills.","b06f4e03":"Checking the occurrences over time, we can see that most data breaches happened in the period of 2011-2016. 2013 was the year with the largest volume of records lost within that period, due to the major data breach in Yahoo. The most interesting fact, though, is that there is a very big increase in breaches attributed to poor security since 2016. The last 5 years there is an upward trend in that category and the number of records compromised is also quite significant.\n\nThe final chart shows the information by organisation type and also method.","959daaf2":"## Tableau Analysis <a class=\"anchor\"  id=\"chapter1\"><\/a>\nThe dataset is already in the desired format, so there is no real need for any pre-processing using SQL. Therefore, it is directly imported in Tableau for some visualisation analysis.\n\nFirst, we take a quick look at the overview of the data breaches by entity.","a3556491":"The results do not vary much, given the small amount of data used and the relatively short time frame between data breaches in general. Both models show that the next major data breach is imminent between end of 2021 and beginning 2022. The Exponential model says it might come a bit later, until 2026, while the Normal model shows a shorter time frame of occurrence.\n\nSince the Normal distribution appears to be more fitting for our data, we can assume with a 95% confidence that the next major data breach will be within the next 3 years.","f312b6bb":"By the ECDF of the few observations of year gap between the major data breaches, we can see that the Normal distribution appears to fit better with the data.\n\nNow, we want to get the actual estimation on when the next major data breach will occur. The last major breach was in 2019 and we can get an estimation using both the Exponential and the Gaussian model. The best estimate is given by the mean year gap and we can use the 95% confidence intervals to check the deviation of our estimation for each model. We will filter to use only random samples that are long enough, since we have not had any major data breach from 2019 till today (i.e. we can exclude random samples that are before today).","08d2f2ee":"Next, we want to examine which model between the Exponential and the Gaussian better fits the observed data of time gap in years. We compute the best estimates for the parameters of both models and plot the theoretical CDFs together with the ECDF of the observed data.","4f0b9242":"In this chart, we can see at the top the # of data breaches and the volume of records by industry. Web companies are the ones that are mostly affected by data breaches, with a very large number of records stolen. Next one is the healthcare sector, though the extent of the breaches is not that large in terms of records compromised. The financial sector is third, while there are also quite a few data breaches in the government sector where one would assume security is somewhat stricter.\n\nTo examine this more in depth, we can check the distribution breakdown of the data breaches in each sector by method in the bottom chart. While the fact that 82% of hackings in the web industry is more expected, the government sector is showing a significant 32% of hacked data and 10% of data breaches attributed to poor security. Despite the higher security implemented in that sector in general, it is still one of the most common and targeted ones for data breaching.","ab7b55f1":"The overview shows that Yahoo is the only entity that has had two major data breaches. Also very important is the fact that most major data breaches, with the largest amount of records stolen, have occurred in the past couple of years.\n\nThe next chart shows the occurrence of data breaches over time, by method.","1dc0f172":"We can start exploring the data with some EDA, plotting the ECDF of the magnitude of data breaches within the dataset. This will give us a general idea about how the magnitude is distributed within the data. To do this, we create a function to calculate the ECDF of the records and then plot it.","39d575c1":"The ECDF shows that more than 90% of the data breaches stay under 200 million records compromised.\n\nAs a result of the above, we can define major data breaches the ones that have 500 million records stolen or more. We can then try to estimate a prediction of when the next such major data breach will occur. First, we calculate the gap between the past major data breaches in years."}}