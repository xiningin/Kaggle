{"cell_type":{"b6487eb8":"code","81353641":"code","c10360eb":"code","e8b568fc":"code","d0a31992":"code","7950401e":"code","e433a496":"code","dfb98695":"code","be1b72be":"code","7b295daa":"markdown","919c7477":"markdown","1ddebe67":"markdown","5417439f":"markdown","caef6db3":"markdown"},"source":{"b6487eb8":"import numpy as np\nimport pandas as pd","81353641":"train_data = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv')\nasset_data = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv')","c10360eb":"# Percentage of NA vlues in each column\n100*train_data.isna().sum()\/train_data.shape[0]","e8b568fc":"# We can't work with NA target. These entries shall be removed\ntrain_data.dropna(subset=['Target'],inplace=True)","d0a31992":"# Recheck NA values.\n100*train_data.isna().sum()\/train_data.shape[0]","7950401e":"n_unique_ts = len(train_data.timestamp.unique())\nprint(f'Number of unique timestamps {n_unique_ts}')\nprint(f'Avearage number of rows per each timestamp {train_data.shape[0]\/n_unique_ts}')","e433a496":"n_unique_as = len(train_data.Asset_ID.unique())\nprint(f'Number of unique assets {n_unique_as}')\nprint(f'Avg Number of rows per each asset {train_data.shape[0]\/n_unique_as}')","dfb98695":"print(f'Avg Number of trades {train_data.Count.mean()}')\nprint(f'Avg Volume of trades {train_data.Volume.mean()}')","be1b72be":"import matplotlib.pyplot as plt\nimport gc\nfor i, d in train_data.groupby('Asset_ID'):\n    plt.figure(figsize=[16,3])\n    plt.subplot(1,4,1)\n    plt.plot(d.timestamp, d.Open, d.timestamp, d.Close, d.timestamp, d.VWAP)\n    plt.legend(['Open','Close', 'VWAP'])\n    plt.xlabel('Time stamp')\n    plt.ylabel('USD')\n    plt.grid()\n    plt.subplot(1,4,2)\n    plt.plot(d.timestamp, d.Volume)\n    plt.ylabel('Volume')\n    plt.xlabel('Time stamp')\n    plt.grid()\n    plt.subplot(1,4,3)\n    plt.plot(d.timestamp, d.High, d.timestamp, d.Low)\n    plt.legend(['High', 'Low'])\n    plt.ylabel('USD')\n    plt.xlabel('Time stamp')\n    plt.grid()\n    plt.subplot(1,4,4)\n    plt.plot(d.timestamp, d.Target)\n    plt.ylabel('Target')\n    plt.xlabel('Time stamp')\n    plt.grid()\n    plt.suptitle(asset_data[asset_data.Asset_ID==i]['Asset_Name'].tolist()[0])    \n    plt.tight_layout()\n    plt.show()\n    plt.close('all')\n    gc.collect()","7b295daa":"## Asset Details","919c7477":"## Unique Timestamps","1ddebe67":"## Unique Assets","5417439f":"## NA Values check","caef6db3":"## Average number of trades and volume happened at each timestamp"}}