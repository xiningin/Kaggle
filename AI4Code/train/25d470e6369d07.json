{"cell_type":{"ea8be8f3":"code","7697ca99":"code","e4d4f453":"code","9f9c2b22":"code","f3ecc1d8":"code","acd1fd6b":"code","be642474":"code","8e20f436":"code","bcabb047":"code","b2d20e21":"code","35c651f0":"code","4e9f575f":"code","44c9e8b1":"code","0bc225ee":"code","ed461dd2":"code","ffdcfa25":"code","5842a0f4":"code","07e66add":"code","eccad1b1":"code","640156a6":"code","5e0600f4":"code","525a076a":"code","82a20a24":"code","2b047394":"code","0222c486":"code","7f88a3e9":"code","edcd436e":"code","5c78afca":"code","51f7c408":"code","ac3e3234":"code","2086c004":"code","affe3184":"code","56673a48":"code","01b80678":"code","4e24b5e7":"code","d8aa6826":"code","6ac52cd5":"code","4217affd":"code","e7a22a10":"code","93669c02":"code","8e08f6a6":"code","8634db64":"code","902b2728":"code","16b5953e":"code","475fa24a":"code","8845a52f":"code","52547e9f":"code","5ff4cd5b":"code","f40855b7":"code","fca0ca9f":"code","676ed291":"code","11e6c4f1":"code","dfd6b46a":"code","ca224855":"code","314bba45":"code","469610d5":"code","3b04d891":"code","8d2152cd":"code","31afeebd":"code","6173d0b6":"code","40b2352a":"code","6793d4d7":"code","f64fa7ff":"code","3228c9b3":"markdown","976648b9":"markdown","cf66efc4":"markdown","0ad20bf8":"markdown","d362254d":"markdown","0a107d17":"markdown","66460e1a":"markdown","5af838d3":"markdown","85793444":"markdown","490c397a":"markdown","b0df5750":"markdown","2407f0f3":"markdown","b2413e04":"markdown","b2381478":"markdown","12c34478":"markdown","96162282":"markdown","073e1840":"markdown","91e15011":"markdown","3240d5c4":"markdown","558e65a8":"markdown","228ed149":"markdown","58fef2d6":"markdown","404139a6":"markdown","f1c49ec1":"markdown","d98d4480":"markdown","552c177d":"markdown"},"source":{"ea8be8f3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","7697ca99":"df = pd.read_csv(\"..\/input\/pokemon\/pokemon_alopez247.csv\")","e4d4f453":"df.head()","9f9c2b22":"df.columns","f3ecc1d8":"df.describe()","acd1fd6b":"df.head()","be642474":"df.isnull().sum()","8e20f436":"Total_Top_10 = df.sort_values(by=\"Total\", ascending=False).head(10)\nTotal_Top_10","bcabb047":"xpos = np.arange(len(Total_Top_10.Name))","b2d20e21":"plt.figure(figsize=(15, 5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('Total', fontsize=\"20\")\nplt.title('Top 10 Pokemon Sort by Total', fontsize=\"20\")\nplt.bar(Total_Top_10.Name, Total_Top_10.Total)\nplt.show()","35c651f0":"plt.figure(figsize=(8,5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('Total', fontsize=\"20\")\nplt.title('Top 5 Pokemon Sort by Total', fontsize=\"20\")\nplt.bar(Total_Top_10.Name.head(), Total_Top_10.Total.head(), color=[\"orange\", \"pink\", \"b\", \"r\", \"y\"])\nplt.show()","4e9f575f":"Total_Low_10 = df.sort_values(by=\"Total\", ascending=True).head()\nTotal_Low_10","44c9e8b1":"plt.figure(figsize=(15, 5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('Total', fontsize=\"20\")\nplt.title('Low 10 Pokemon Sort by Total', fontsize=\"20\")\nplt.bar(Total_Low_10.Name, Total_Low_10.Total)\nplt.show()","0bc225ee":"plt.figure(figsize=(8,5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('Total', fontsize=\"20\")\nplt.title('Low 5 Pokemon Sort by Total', fontsize=\"20\")\nplt.bar(Total_Low_10.Name.head(), Total_Low_10.Total.head(), color=[\"orange\", \"pink\", \"b\", \"r\", \"y\"])\nplt.show()","ed461dd2":"HP_Top_5 = df.sort_values(by='HP', ascending=False).head()\nHP_Top_5","ffdcfa25":"plt.figure(figsize=(8,5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('HP', fontsize=\"20\")\nplt.title('Top 5 Pokemon bas on HP', fontsize=\"20\")\nplt.bar(HP_Top_5.Name, HP_Top_5.HP, color=[\"orange\", \"pink\", \"b\", \"r\", \"y\"])\nplt.show()","5842a0f4":"HP_Low_5 = df.sort_values(by='HP', ascending=True).head()\nHP_Low_5","07e66add":"plt.figure(figsize=(8,5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('HP', fontsize=\"20\")\nplt.title('Low 5 Pokemon bas on HP', fontsize=\"20\")\nplt.bar(HP_Low_5.Name, HP_Low_5.HP, color=[\"orange\", \"pink\", \"b\", \"r\", \"y\"])\nplt.show()","eccad1b1":"df.Speed.head()","640156a6":"Speed_top_10 = df.sort_values(by=\"Speed\", ascending=False).head(10)\nSpeed_top_10[[\"Speed\",\"Name\"]]","5e0600f4":"plt.figure(figsize=(15, 5))\nplt.ylabel('Speed', fontsize=\"20\")\nplt.xlabel('Name', fontsize=\"20\")\nplt.title('Top 10 Pokemon Sort by Speed', fontsize=\"20\")\nplt.bar(Speed_top_10.Name,Speed_top_10.Speed)\nplt.show()","525a076a":"plt.figure(figsize=(15, 5))\nplt.xlabel('Speed', fontsize=\"20\")\nplt.ylabel('Name', fontsize=\"20\")\nplt.title('Top 10 Pokemon Sort by Speed', fontsize=\"20\")\nplt.barh(Speed_top_10.Name,Speed_top_10.Speed)\nplt.show()","82a20a24":"sum(df.Speed)","2b047394":"len(df.Speed)","0222c486":"avg_speed = sum(df.Speed) \/ len(df.Speed)\navg_speed","7f88a3e9":"df[\"Speed_level\"] = [\"High\" if i > avg_speed else \"Low\" for i in df.Speed]","edcd436e":"df.Speed_level.head()","5c78afca":"plt.figure(figsize=(8,8))\nplt.pie(df.Speed_level.value_counts(), labels=df.Speed_level.value_counts().index, autopct = '%0.1f%%',\n         textprops={'fontsize': 20}, explode=[0.05,0])\nplt.show()\n","51f7c408":"df.Speed_level.value_counts()","ac3e3234":"df.head(10)","2086c004":"Health_top_10 = df.sort_values(by=\"HP\", ascending=False).head(10)\nHealth_top_10","affe3184":"plt.figure(figsize=(15, 5))\nplt.xlabel('Name', fontsize=\"20\")\nplt.ylabel('health points', fontsize=\"20\")\nplt.title('Top 10 Pokemon Sort by health points', fontsize=\"20\")\nplt.bar(Health_top_10.Name, Health_top_10.HP)\nplt.show()","56673a48":"df.Color.value_counts()","01b80678":"color = df.Color.value_counts().index\ncolor= list(color)\nprint(color)","4e24b5e7":"plt.figure(figsize=(8,8))\nplt.xlabel(\"Colour\")\nplt.ylabel(\"Count Number\")\nplt.title(\"Pokemon sort by color\", fontsize=\"25\")\nplt.bar(df.Color.value_counts().index, df.Color.value_counts(), color= color, edgecolor='black')\nplt.show()","d8aa6826":"plt.figure(figsize=(8,8))\nplt.title(\"Pokemon Divided by color\", fontsize=\"25\")\nplt.pie(df.Color.value_counts(), labels=df.Color.value_counts().index, colors= color, autopct = '%0.1f%%', \n        textprops={'fontsize': 18}, shadow=True, explode=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ])\nplt.show()","6ac52cd5":"Total_Top_10","4217affd":"plt.figure(figsize=(15, 5))\nplt.xticks(xpos,Total_Top_10.Name)\n\nplt.ylabel(\"Number\", fontsize='20')\nplt.xlabel(\"Name\", fontsize='20')\nplt.title('Pokemon Attack And Defense', fontsize='20')\n\nplt.bar(xpos-0.2, Total_Top_10.Attack, width=0.4, label=\"Attack\")\nplt.bar(xpos+0.2, Total_Top_10.Defense, width=0.4, label=\"Defense\")\n\nplt.legend()","e7a22a10":"plt.figure(figsize=(15, 5))\nplt.xticks(xpos,Total_Top_10.Name)\n\nplt.ylabel(\"Number\", fontsize='20')\nplt.xlabel(\"Name\", fontsize='20')\nplt.title('Pokemon Special Attack And Special Defense', fontsize='20')\n\nplt.bar(xpos-0.2, Total_Top_10.Sp_Atk, width=0.4, label=\"Special Attack\")\nplt.bar(xpos+0.2, Total_Top_10.Sp_Def, width=0.4, label=\"Special Defense\")\n\nplt.legend(); plt.show()","93669c02":"plt.figure(figsize=(10,4))\n\nplt.xlabel(\"Name\", fontsize=\"20\"); plt.ylabel(\"Number\", fontsize=\"20\")\nplt.title(\"Pokemon Speed, Atteck and Defense\", fontsize=\"20\")\n\nplt.plot(Total_Top_10.Name, Total_Top_10.Speed, label=\"Speed\")\nplt.plot(Total_Top_10.Name, Total_Top_10.Attack, label=\"Attack\")\nplt.plot(Total_Top_10.Name, Total_Top_10.Defense, label=\"Defense\")\n\nplt.legend(loc=\"best\", shadow=True);plt.show()","8e08f6a6":"df1= df[[\"Speed\",\"Attack\",\"Defense\"]]","8634db64":"df1.plot(subplots = True)\nplt.show() ","902b2728":"df.columns","16b5953e":"plt.figure(figsize=(15, 5))\nplt.xticks(xpos,Total_Top_10.Name)\n\nplt.ylabel(\"Number\", fontsize='20'); plt.xlabel(\"Name\", fontsize='20')\nplt.title('Attack And Special Attack', fontsize='25')\n\nplt.bar(xpos-0.2, Total_Top_10.Attack, width=0.4, label=\"Attack\")\nplt.bar(xpos+0.2, Total_Top_10.Sp_Atk, width=0.4, label=\"Special Attack\")\n\nplt.legend(loc=\"best\", shadow=True);plt.show()","475fa24a":"plt.figure(figsize=(10,4))\n\nplt.ylabel(\"Number\", fontsize='20'); plt.xlabel(\"Name\", fontsize='20')\nplt.title('Pokemon Attack And Special Attack', fontsize='25')\n\nplt.plot(Total_Top_10.Name, Total_Top_10.Attack, label=\"Attack\")\nplt.plot(Total_Top_10.Name, Total_Top_10.Sp_Atk, label=\"Special Attack\")\n\nplt.legend(loc=\"best\", shadow=True);plt.show()","8845a52f":"plt.figure(figsize=(15, 5))\nplt.xticks(xpos,Total_Top_10.Name)\n\nplt.ylabel(\"Number\", fontsize='20'); plt.xlabel(\"Name\", fontsize='20')\nplt.title('Defense And Special Defense', fontsize='25')\n\nplt.bar(xpos-0.2, Total_Top_10.Defense, width=0.4, label=\"Defense\")\nplt.bar(xpos+0.2, Total_Top_10.Sp_Def, width=0.4, label=\"Special Defense\")\n\nplt.legend(loc=\"best\", shadow=True);plt.show()","52547e9f":"plt.figure(figsize=(10,4))\n\nplt.ylabel(\"Number\", fontsize='20'); plt.xlabel(\"Name\", fontsize='20')\nplt.title('Pokemon Defense And Special Defense', fontsize='25')\n\nplt.plot(Total_Top_10.Name, Total_Top_10.Defense, label=\"Defense\")\nplt.plot(Total_Top_10.Name, Total_Top_10.Sp_Def, label=\"Special Defense\")\n\nplt.legend(loc=\"best\", shadow=True);plt.show()","5ff4cd5b":"df[(df.HP > 150) & (df.Attack > 50)]","f40855b7":"df[df.Speed < 15]","fca0ca9f":"display(df[[\"Name\", \"Speed\"]].sort_values(by=\"Speed\", ascending=True).head(10))","676ed291":"df.hasGender.value_counts()","11e6c4f1":"plt.figure(figsize=(8,8))\nplt.title(\"Pokemon Divided by hasGender\", fontsize=\"25\")\nplt.pie(df.hasGender.value_counts(), labels=[\"Female\",\"Male\"], autopct = '%0.1f%%', \n        textprops={'fontsize': 18}, shadow=True, explode=[0.1, 0.1 ])\nplt.show()","dfd6b46a":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Egg Group 1\", fontsize=\"20\")\nplt.ylabel(\"Count Number\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by Egg Group 1\", fontsize=\"25\")\nplt.bar(df.Egg_Group_1.value_counts().index, df.Egg_Group_1.value_counts(), color= color, edgecolor='black')\nplt.show()","ca224855":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Egg Group 2\", fontsize=\"20\")\nplt.ylabel(\"Count Number\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by Egg Group 2\", fontsize=\"25\")\nplt.bar(df.Egg_Group_2.value_counts().index, df.Egg_Group_2.value_counts(), color= color, edgecolor='black')\nplt.show()","314bba45":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Body_Style\", fontsize=\"20\")\nplt.ylabel(\"Count Number\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by Body_Style\", fontsize=\"25\")\nplt.bar(df.Body_Style.value_counts().index, df.Body_Style.value_counts(), color= color, edgecolor='black')\nplt.show()","469610d5":"Height_Top_10 = df.sort_values(by=\"Height_m\", ascending=False).head(10)\nHeight_Top_10","3b04d891":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Name\", fontsize=\"20\")\nplt.ylabel(\"Height\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by Top height\", fontsize=\"25\")\nplt.bar(Height_Top_10.Name, Height_Top_10.Height_m, color= color, edgecolor='black')\nplt.show()","8d2152cd":"Height_Low_10 = df.sort_values(by=\"Height_m\", ascending=True).head(10)\nHeight_Low_10","31afeebd":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Name\", fontsize=\"20\")\nplt.ylabel(\"Height\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by low height\", fontsize=\"25\")\nplt.bar(Height_Low_10.Name, Height_Low_10.Height_m, color= color, edgecolor='black')\nplt.show()","6173d0b6":"Weight_Top_10 = df.sort_values(by=\"Weight_kg\", ascending=False).head(10)\nWeight_Top_10","40b2352a":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Name\", fontsize=\"20\")\nplt.ylabel(\"Weight\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by Top Weight\", fontsize=\"25\")\nplt.bar(Weight_Top_10.Name, Weight_Top_10.Weight_kg, color= color, edgecolor='black')\nplt.show()","6793d4d7":"Weight_Low_10 = df.sort_values(by=\"Weight_kg\", ascending=True).head(10)\nWeight_Low_10","f64fa7ff":"plt.figure(figsize=(18, 10))\nplt.xlabel(\"Name\", fontsize=\"20\")\nplt.ylabel(\"Weight\", fontsize=\"20\")\nplt.title(\"Pokemon sorted by low Weight\", fontsize=\"25\")\nplt.bar(Weight_Low_10.Name, Weight_Low_10.Weight_kg, color= color, edgecolor='black')\nplt.show()","3228c9b3":"### Top 10 Pokemon sorted by there Weight ","976648b9":"### Pokemon sorted by Body_Style","cf66efc4":"### Pokemon sort by total and show Defense And Special Defense","0ad20bf8":"### Top 5 Pokemon Base health points","d362254d":"### Top 10 Pokemon Sort by Speed","0a107d17":"###  Low 10 Pokemon Sort by Total (The sum of all the base battle stats of a Pok\u00e9mon.)","66460e1a":"### Pokemon Divided by mean Speed (Avrage Speed)","5af838d3":"### Top 10 lowest Speed Pokemon","85793444":"### Pokemon sort by total and show Attack And Special Attack","490c397a":"### Pokemon Divided by hasGender","b0df5750":"### Top 10 Pokemon sort by Total And show Atteck vs Defense","2407f0f3":"### Top 5 Pokemon Base health points","b2413e04":"### Pokemon sorted by Egg Group 1","b2381478":"### Show Pokemon HP is Greater than 150 and Attack is Greater than 50","12c34478":"### Top 10 Pokemon sorted by there height","96162282":"#### 1) Total. The sum of all the base battle stats of a Pok\u00e9mon.\n\n#### 2) HP. Base health points of the Pok\u00e9mon.\n\n#### 3) Attack. Base attack of the Pok\u00e9mon.\n\n#### 4) Defense. Base defense of the Pok\u00e9mon.\n\n#### 5) Sp_Atk. Base special attack of the Pok\u00e9mon.\n\n#### 6) Sp_Def. Base special defense of the Pok\u00e9mon.\n\n#### 7) Speed. Base speed of the Pok\u00e9mon.\n\n#### 8) Generation. The generation where the Pok\u00e9mon was released.\n\n#### 9) isLegendary. Boolean indicating whether the Pok\u00e9mon is legendary or not.\n\n#### 10) Color. Color of the Pok\u00e9mon according to the Pok\u00e9dex.\n\n#### 11) hasGender. Boolean indicating the Pok\u00e9mon can be classified as male or female.\n\n#### 12) Pr_Male. In case the Pok\u00e9mon has Gender, the probability of its being male. The probability of being female is, of course, 1 minus this value. Like Generation, this variable is numerical and discrete, because although it is the probability of the Pok\u00e9mon to appear as a female or male in the nature, it can only take 7 values: 0, 0.125, 0.25, 0.5, 0.75, 0.875, and 1.\n\n#### 13) Egg_Group_1. Categorical value indicating the egg group of the Pok\u00e9mon.\n\n#### 14) Egg_Group_2. Similarly to the case of the Pok\u00e9mon types, Pok\u00e9mon can belong to two egg groups.\n\n#### 15) hasMegaEvolution. Boolean indicating whether a Pok\u00e9mon can mega-evolve or not.\n\n#### 16) Height_m. Height of the Pok\u00e9mon according to the Pok\u00e9dex, measured in meters.\n\n#### 17) Weight_kg. Weight of the Pok\u00e9mon according to the Pok\u00e9dex, measured kilograms.\n\n#### 18) Catch_Rate. Numerical variable indicating how easy is to catch a Pok\u00e9mon when trying to capture it to make it part of your team. \n\n#### 19) Body_Style. Body style of the Pok\u00e9mon according to the Pok\u00e9dex.\n","073e1840":"###  Top 10 Pokemon Sort by Total (The sum of all the base battle stats of a Pok\u00e9mon.)","91e15011":"###  Top 5 Pokemon Sort by Total (The sum of all the base battle stats of a Pok\u00e9mon.)","3240d5c4":"### Pokemon divided by color","558e65a8":"###  Low 5 Pokemon Sort by Total (The sum of all the base battle stats of a Pok\u00e9mon.)","228ed149":"### Pokemon Speed is Less then 15","58fef2d6":"### Low 10 Pokemon sorted by there Weight","404139a6":"### Low 10 Pokemon sorted by there height","f1c49ec1":"### Top 10 Pokemon sort by Total And show Special Atteck vs Special Defense","d98d4480":"### Top 10 Pokemon Sort by health points","552c177d":"### Pokemon sorted by Egg Group 2"}}