{"cell_type":{"15c864a4":"code","14a4a6cf":"code","b651314f":"code","5945cb99":"code","4db00c2e":"code","95b24788":"code","a27ceb92":"code","d50a096c":"code","e332dbd6":"code","6eeefcc3":"code","c7e4f5d1":"code","17e6999b":"code","2cb43f23":"code","5b454d18":"code","4ed672e1":"code","59f3219a":"code","657317ff":"code","7206c141":"code","5c48f9fc":"code","b7021052":"code","ef71ffac":"code","591338bc":"code","24192ca2":"code","433c6b24":"code","14f79c30":"code","68d0167c":"code","80d28846":"code","df4fa96e":"markdown","a787ba0c":"markdown","413a57cb":"markdown","93a6fe88":"markdown","c1c10f2b":"markdown","e104e846":"markdown","615b155d":"markdown","3a50c39d":"markdown","edf85402":"markdown","637b18b6":"markdown"},"source":{"15c864a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# visualization\nimport seaborn as sns           \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# warning ignore\nimport warnings \nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","14a4a6cf":"data = pd.read_csv('\/kaggle\/input\/churn-modelling\/Churn_Modelling.csv')\ndata.head()","b651314f":"data.isna().sum() #for checking null values","5945cb99":"sum(data.duplicated()) #checking if any duplicate values are there are not","4db00c2e":"data.info() #checking about the data type ","95b24788":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndata['Geography'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number of customer by countries')\nax[0].set_ylabel('count')\nsns.countplot(data=data,x='Geography',hue='Exited',ax=ax[1])\nax[1].set_title('Countries:Exited vs Non Exited')\nax[1].set_ylabel('count');","a27ceb92":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndata['Gender'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number of customer by gender')\nax[0].set_ylabel('count')\nsns.countplot(data=data,x='Gender',hue='Exited',ax=ax[1])\nax[1].set_title('Gender:Exited vs Non Exited')\nax[1].set_ylabel('count');","d50a096c":"Non_Exited = data[data['Exited']==0]\nExited = data[data['Exited']==1]\n\nplt.subplots(figsize=(18,8))\nsns.distplot(Non_Exited['Age'])\nsns.distplot(Exited['Age'])\nplt.title('Age:Exited vs Non Exited')\nplt.legend([0,1],title='Exited')\nplt.ylabel('percentage');\n","e332dbd6":"f,ax = plt.subplots(1,2,figsize=(18,8))\ndata['NumOfProducts'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number of customer by Number of Product')\nax[0].set_ylabel('count')\nsns.countplot(data=data,x='NumOfProducts',hue='Exited',ax=ax[1])\nax[1].set_title('Number of Product:Exited vs Non Exited')\nax[1].set_ylabel('count');","6eeefcc3":"plt.figure(figsize=(18,8))\nplt.hist(x='CreditScore',bins=100,data=Non_Exited,edgecolor='black',color='red')\nplt.hist(x='CreditScore',bins=100,data=Exited,edgecolor='red',color='black')\nplt.title('Credit score: Exited vs Non-Exited')\nplt.legend([0,1],title='Exited');","c7e4f5d1":"plt.figure(figsize=(18,8))\np1=sns.kdeplot(Non_Exited['Balance'], shade=True, color=\"r\")\np1=sns.kdeplot(Exited['Balance'], shade=True, color=\"b\");\nplt.title('Account Balance: Exited vs Non-Exited')\nplt.legend([0,1],title='Exited');","17e6999b":"plt.title(\"features correlation matrics\".title(),\n          fontsize=20,weight=\"bold\")\n\nsns.heatmap(data.corr(),annot=True,cmap='RdYlBu',linewidths=0.2, vmin=-1, vmax=1,linecolor = 'black') \nfig=plt.gcf()\nfig.set_size_inches(10,8);","2cb43f23":"X=data.iloc[:,3:13]    #features\ny=data['Exited']     #label","5b454d18":"X.head()","4ed672e1":"from sklearn.preprocessing import StandardScaler,LabelEncoder\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import accuracy_score","59f3219a":"#encoding and labelling the necessary columns\nlabel=LabelEncoder()\nscaler = StandardScaler()\nX['Geography']=label.fit_transform(X['Geography'])\nX['Gender']=label.fit_transform(X['Gender'])\nX[['CreditScore','Balance','EstimatedSalary']]=scaler.fit_transform(X[['CreditScore','Balance','EstimatedSalary']])\nX.head()","657317ff":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state = 100) #training and testing","7206c141":"per=Perceptron()","5c48f9fc":"per.fit(X_train,y_train)","b7021052":"y_pred_train=per.predict(X_train)\ny_pred_test=per.predict(X_test)","ef71ffac":"print(\"Training Accuracy: \",accuracy_score(y_pred_train,y_train))\nprint(\"Testing Accuracy: \",accuracy_score(y_pred_test,y_test))","591338bc":"param_grid={'eta0': [1.0,0.5,1e-10], 'max_iter': [5,10,20,30,40,50]}","24192ca2":"grid=GridSearchCV(per, param_grid, cv=100)","433c6b24":"grid.fit(X_train,y_train)","14f79c30":"grid.best_score_","68d0167c":"grid.best_params_","80d28846":"perceptron=grid.best_estimator_\ny_pred_train=perceptron.predict(X_train)\ny_pred_test=perceptron.predict(X_test)\nprint(\"Training Accuracy: \",accuracy_score(y_pred_train,y_train))\nprint(\"Testing Accuracy: \",accuracy_score(y_pred_test,y_test))","df4fa96e":"## Loading dataset","a787ba0c":"# Training and testing phase","413a57cb":"Useful information to understand the table\n\n* Tenure: The customer's number of years in the bank\n* Balance: The customer's account balance (amount of money present in a financial repository)\n* NumOfProducts: No. of products the customer bought\n* HasCrCard: If the user has credit card or not (1 means has a credit card and 0 means doesn't have a credit card)\n* Exited: Churned or not ? 0 = No, 1= Yes","93a6fe88":"**Extracting features and labels**","c1c10f2b":"*Now we will use GridSearch technique*","e104e846":"**So without the gridsearch technique, we got an accuracy of 79%**","615b155d":"**Importing libraries for encoding the categorical columns, for training and testing and for checking accuracy**","3a50c39d":"# Exploratory data analysis","edf85402":"**With GridSearch technique we got a slightly better training and testing accurcay and that is 80%**","637b18b6":"## Checking if the dataset is dirty or not"}}