{"cell_type":{"b2469007":"code","b611f717":"code","e8113000":"code","09325077":"code","e3b27c03":"code","efc2c677":"code","89e7dcb0":"code","fc19f048":"code","59180005":"code","10a89c6f":"code","b402a789":"code","284e57a3":"code","45eb39d7":"code","b2aff8a6":"code","15be6cde":"code","443c65f7":"code","de6ce648":"code","88246e57":"code","05dbea5f":"code","19f106bf":"code","3b566f3a":"code","5cc3adf4":"code","a9613894":"code","bfc4f7f2":"code","09c81f6a":"code","3e3ce6e4":"code","c74118b6":"code","39cae484":"code","fc92d3d9":"markdown","d13fa035":"markdown","5c0f565f":"markdown","81613680":"markdown","318b43bf":"markdown","c50a669f":"markdown","f225e507":"markdown","7173cfda":"markdown","8eac0377":"markdown","4b6345bf":"markdown","ff22e0d8":"markdown","08cb4227":"markdown","0cfdaa74":"markdown","18a324f4":"markdown","436a0a00":"markdown","1870e446":"markdown","8d4c9b57":"markdown","ca99b9da":"markdown","4d539be0":"markdown","ecb7175f":"markdown","1038bca7":"markdown","8fc60744":"markdown"},"source":{"b2469007":"import numpy as np\nimport pandas as pd   \n\n#Importing data visulaisation libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\n\nimport datetime as dt\nimport missingno as msno\nimport warnings\nwarnings.filterwarnings('ignore')","b611f717":"stock_df=pd.read_csv(\"..\/input\/gamestop-historical-stock-prices\/GME_stock.csv\")\nstock_df.head()  #Displaying the first 5 rows of the dataframe","e8113000":"print('Shape of stock_df: ',stock_df.shape)\nprint('Name of the columns of stock_df :',stock_df.columns)","09325077":"#Checking if there are any missing values\n\nplt.figure(figsize=(2,2))\nmsno.matrix(stock_df)","e3b27c03":"#Statistical insights into the data\n\nstock_df.describe().T","efc2c677":"plt.figure(figsize=(12,6))\nsns.heatmap(stock_df.corr(),annot=True,cmap='viridis')","89e7dcb0":"sns.set_style('darkgrid')\nplt.figure(figsize=(12,4))\nsns.distplot(stock_df['open_price'],color='Indianred')\nplt.title('Distribution of open prices of the stock',fontweight='bold',fontsize=14)\nplt.xlabel('Open_price',fontsize=12)\n\nprint('Maximum open price of stock ever obtained:',stock_df['open_price'].max())\nprint('Minimum open price of stock ever obtained:',stock_df['open_price'].min())","fc19f048":"#Converting string object to datetime for analysis\n\nstock_df['date']=pd.to_datetime(stock_df['date'])\nstock_df['year']=stock_df['date'].dt.year\nstock_df['month']=stock_df['date'].dt.month\nstock_df.head(2)","59180005":"fig=px.line(x=stock_df['year'],y=stock_df['open_price'])\nfig.update_layout(template='plotly_dark',title='Year wise open price distribution',xaxis_title='year',yaxis_title='open_price')","10a89c6f":"#Getting the dates on which the maximum and the minimum open price values of the stocks were observed.\n\nfor i in stock_df['open_price'].index:\n    if (stock_df['open_price'][i]==stock_df['open_price'].max()):\n        print('The maximum stock price of Gamestop were observed on: ', stock_df['date'][i])\n    elif (stock_df['open_price'][i]==stock_df['open_price'].min()):\n        print('The minimum stock price of Gamestop were observed on: ', stock_df['date'][i])\n    else:\n        pass","b402a789":"fig,axes=plt.subplots(1,3,figsize=(24,6))\n\n#Close price\nplt.subplot(1,3,1)\nplt.title('Close price distribution',fontweight='bold',fontsize=20)\nplt.xlabel('close_price',fontweight='bold',fontsize=12)\nsns.distplot(stock_df['close_price'],color='g')\n\nprint('Maximum close price of stock ever obtained:',stock_df['close_price'].max())\nprint('Minimum close price of stock ever obtained:',stock_df['close_price'].min())\nprint('\\n')\n\n\n#High price\nplt.subplot(1,3,2)\nplt.title('High price distribution',fontweight='bold',fontsize=20)\nplt.xlabel('high_price',fontweight='bold',fontsize=12)\nsns.distplot(stock_df['high_price'],color='c')\n\nprint('Maximum high price of stock ever obtained:',stock_df['high_price'].max())\nprint('Minimum high price of stock ever obtained:',stock_df['high_price'].min())\nprint('\\n')\n\n\n#Low price\nplt.subplot(1,3,3)\nplt.title('Low price distribution',fontweight='bold',fontsize=20)\nplt.xlabel('low_price',fontweight='bold',fontsize=12)\nsns.distplot(stock_df['low_price'],color='black')\n\nprint('Maximum low price of stock ever obtained:',stock_df['low_price'].max())\nprint('Minimum low price of stock ever obtained:',stock_df['low_price'].min())","284e57a3":"fig=make_subplots(rows=1,cols=3)\n\n#Close price\nfig.add_trace(go.Scatter(x=stock_df['year'],y=stock_df['close_price'],mode='markers',name='close_price'),row=1,col=1)\n\n\n#High price\nfig.add_trace(go.Scatter(x=stock_df['year'],y=stock_df['high_price'],mode='markers',name='high_price'),row=1,col=2)\n\n\n#Low price\nfig.add_trace(go.Scatter(x=stock_df['year'],y=stock_df['low_price'],mode='markers',name='low_price'),row=1,col=3)\n\nfig.update_layout(template='plotly_dark',title='Year wise distribution',xaxis_title='year',yaxis_title='price')","45eb39d7":"#Getting the dates on which the maximum and the minimum close price values of the stocks were observed.\nfor i in stock_df['close_price'].index:\n    if (stock_df['close_price'][i]==stock_df['close_price'].max()):\n        print('The maximum close price of Gamestop were observed on: ', stock_df['date'][i])\n    elif (stock_df['close_price'][i]==stock_df['close_price'].min()):\n        print('The minimum close price of Gamestop were observed on: ', stock_df['date'][i])\n    else:\n        pass\nprint('\\n')\n\n#Getting the dates on which the maximum and the minimum high price values of the stocks were observed.\nfor i in stock_df['high_price'].index:\n    if (stock_df['high_price'][i]==stock_df['high_price'].max()):\n        print('The maximum high price of Gamestop were observed on: ', stock_df['date'][i])\n    elif (stock_df['high_price'][i]==stock_df['high_price'].min()):\n        print('The minimum high price of Gamestop were observed on: ', stock_df['date'][i])\n    else:\n        pass\nprint('\\n')\n\n#Getting the dates on which the maximum and the minimum low price values of the stocks were observed.\nfor i in stock_df['low_price'].index:\n    if (stock_df['low_price'][i]==stock_df['low_price'].max()):\n        print('The maximum low price of Gamestop were observed on: ', stock_df['date'][i])\n    elif (stock_df['low_price'][i]==stock_df['low_price'].min()):\n        print('The minimum low price of Gamestop were observed on: ', stock_df['date'][i])\n    else:\n        pass","b2aff8a6":"fig=make_subplots(rows=1,cols=2)\n\n#Adjusted close price\nfig.add_trace(go.Scatter(x=stock_df['year'],y=stock_df['adjclose_price'],mode='markers',name='adjclose_price'),row=1,col=1)\n\n#Close price\nfig.add_trace(go.Scatter(x=stock_df['year'],y=stock_df['adjclose_price'],mode='markers',name='close_price'),row=1,col=2)\n\nfig.update_layout(template='plotly_dark',title='Year wise distribution',xaxis_title='year',yaxis_title='price')\nfig.show()\n\nprint('Maximum adjusted close price of stock ever obtained:',stock_df['adjclose_price'].max())\nprint('Minimum adjusted close price of stock ever obtained:',stock_df['adjclose_price'].min())\n\nprint('\\n')\n\nfor i in stock_df['adjclose_price'].index:\n    if (stock_df['adjclose_price'][i]==stock_df['adjclose_price'].max()):\n        print('The maximum adjusted close price ever obtained was on: ', stock_df['date'][i])\n    elif (stock_df['adjclose_price'][i]==stock_df['adjclose_price'].min()):\n        print('The minimum adjusted close price ever obtained was on: ', stock_df['date'][i])\n    else:\n        pass","15be6cde":"fig=px.line(x=stock_df['year'],y=stock_df['volume'])\nfig.update_layout(template='plotly_dark',title='Year wise volume traded',xaxis_title='year',yaxis_title='volume')\nfig.show()\n\nprint('Maximum low price of stock ever obtained:',stock_df['low_price'].max())\nprint('Minimum low price of stock ever obtained:',stock_df['low_price'].min())\n\nprint('\\n')\n\nfor i in stock_df['volume'].index:\n    if (stock_df['volume'][i]==stock_df['volume'].max()):\n        print('The maximum volume ever traded was on: ', stock_df['date'][i])\n    elif (stock_df['volume'][i]==stock_df['volume'].min()):\n        print('The minimum volume ever traded was on: ', stock_df['date'][i])\n    else:\n        pass","443c65f7":"fig=px.line(x=stock_df['year'],y=stock_df['volume']*stock_df['open_price'])\nfig.update_layout(template='plotly_dark',title='Year wise volume traded',xaxis_title='year',yaxis_title='amount')\nfig.show()","de6ce648":"#Importing deep learning libraries\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, LSTM, Dropout\nfrom sklearn.preprocessing import MinMaxScaler\nimport math","88246e57":"#PREPARING THE DATA\n\nstock_df.sort_index(ascending=False,axis=0,inplace=True)\ndf=stock_df[['date','close_price']]\ndf['date'] = pd.to_datetime(df['date'])\ndf.set_index('date',inplace=True)\ndf.head()","05dbea5f":"#To array format\ndf_val=df.values \ndf_val","19f106bf":"#Splitting the dataset to train and test (80% train and 20% test data)\n\ntrain=df_val[:3818]   \ntest=df_val[3818:]","3b566f3a":"#Scaling the features to be valued between 0 & 1. \n#Scaling ensures optimal performance of the model.\n\nscaler = MinMaxScaler(feature_range=(0, 1))\nscaled_data = scaler.fit_transform(df_val)","5cc3adf4":"#Creting x_train and y_train for 60 timesteps\nx_train, y_train = [], []\nfor i in range(60,len(train)):\n    x_train.append(scaled_data[i-60:i,0])\n    y_train.append(scaled_data[i,0])\nx_train, y_train = np.array(x_train), np.array(y_train)\n\n#Converting to 3-D array because LSTM model requires 3-D input.\nx_train = np.reshape(x_train, (x_train.shape[0],x_train.shape[1],1))","a9613894":"# Build the LSTM model\nmodel = Sequential()\n\nmodel.add(LSTM(units = 50, return_sequences = True, input_shape = (x_train.shape[1], 1)))\nmodel.add(Dropout(0.2))\n\nmodel.add(LSTM(units = 50, return_sequences = True))\nmodel.add(Dropout(0.2))\n\nmodel.add(LSTM(units = 50))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(units = 1))\n\n\n#Compiling \nmodel.compile(optimizer = 'adam', loss = 'mean_squared_error')\n\n#Fitting\nmodel.fit(x_train, y_train, epochs = 125, batch_size = 32)","bfc4f7f2":"inputs = df_val[len(df_val) - len(test) - 60:]\ninputs = inputs.reshape(-1,1)\ninputs  = scaler.transform(inputs)","09c81f6a":"#Test data\nX_test = []\nfor i in range(60,inputs.shape[0]):\n    X_test.append(inputs[i-60:i,0])\nX_test = np.array(X_test)","3e3ce6e4":"X_test = np.reshape(X_test, (X_test.shape[0],X_test.shape[1],1))\npredictions = model.predict(X_test)\n\n#Undo scaling\npredictions = scaler.inverse_transform(predictions)","c74118b6":"#Root mean squared error\nrmse=np.sqrt(np.mean(np.power((predictions),2)))\nrmse","39cae484":"#Plotting all the values\ntrain = df[:3818]\ntest = df[3818:]\ntest['Predictions'] = predictions\nsns.set_style('darkgrid')\nplt.figure(figsize=(14,6))\nplt.plot(train['close_price'],color='r')\nplt.plot(test[['close_price','Predictions']])","fc92d3d9":"## Adjusted close price","d13fa035":"## **Why was there a sudden spike in the stock values of the company in January 2021?** \n\nThe Gamestop Corporation which sells and hosts hardware and software video games in stores had been witnessing a contsant fall in its stock prices which was catalysed as the pandemic hit because people had no choice but to shift to online channels to play games.\n\nDue to the previous falling trend of the stock prices, large hedge funds and the people who bet against the stock believed that the stock prices would go down furthur in the coming months. People started discussing and making potential memes on Reddit's subreddit 'wallstreetbets'.\n\nSeveral posts on Reddit around January 2021 brought up GameStop as a potentially viable inverstment opportunity and tweets of notable personlaities like Elon Musk escalated the stock prices even more.The dramatic increase in the stock prices was a result of constant efforts on social media to raise the value of company stock price and factors like short selling.","5c0f565f":"The **maximum and mimimum close price** values have been **347.51 and 2.79** respectively while the **maximum and minimum adjusted close prices** have been **347.51 and 2.55 respectively.**\n\nThe date of the maxima of the two cases are the same i.e., 27th January 2021 however **the date of two achieving their minima is not the same.** The minima of close_price was achieved on 3rd April 2020 while that of adjclose_price was on 11th February 2003.","81613680":"From the plot, it can seen that there was a sudden **spike in the stock prices is seen in 2021.**","318b43bf":"**Opening price** is the price at which a stock started trading when the opening bell rang. For example, the New York Stock Excahnge (NYSE) opens at precisely 9:30 am eastern time. The price of the first trade for any listed stock is its daily opening price. ","c50a669f":"## Creating the model","f225e507":"**When were the maximum and minimum open price values observed?**","7173cfda":"#### Adjusted close price vs close price distribution","8eac0377":"## Do upvote if you liked the analysis. Thanks :)","4b6345bf":"## Volume of stocks traded","ff22e0d8":"**Closing price** is the last price at which an individual stock traded during a regular trading day before the closure of stock exchange. \n\n**High price** is the highest price at which a stock traded during a period. This dataset gives the high and ow prices of the stock for the day which are known as intra day high and low.\n\n**Low price** is the lowest price at which a specific stock trades over a trading day.","08cb4227":"## Obtaining data and importing libraries","0cfdaa74":"The data contains the stockprices from **13\/02\/2002 to 28\/01\/2021**","18a324f4":"The distribution plot shows that the stock prices have been below 60 US dollars per share for most of the days. Minimum and maximum stock prices of Gamestop in a span of 19 years (2002-2021) were 2.84 and 354.82 US dollars per share respectively.","436a0a00":"## Open price distribution of Gamestop stock prices","1870e446":"**Volume of trade**, also known as **trading volume**, refers to the quantity of shares or contracts that belongs to a given security traded on a daily basis. Trade volume is said to be high when a given security is traded more actively and vice versa. ","8d4c9b57":"No missing values are there in the dataframe.","ca99b9da":"The **amount of stocks traded** is given by **volume * open price.**","4d539be0":"## Close price, High price & Low price distribution","ecb7175f":"## Amount of stocks traded","1038bca7":"### <span style='color:purple'>**GameStop corporation is the largest video game retailer in the US.** <\/span>\n    \n<span style='color:purple'>**The 37 year old company was in the news in the beginning of 2021 due to the tremendous increase in its stock prices. Almost a 1700% hike was seen in January 2021 from the previous year's december.**<\/span>\n\n**Let us dive deep into exploring the factors like open price, close price and volume of stocks traded of the company over the years.**","8fc60744":"The **adjusted close price** amends a stock's closing price to reflect that stock's value after accounting for any corporate actions. It is a calculation adjustment made to a stocks closing price.\n\n***Close price vs adjusted close price***\n\nThe closing price is the raw price i.e., the last value transacted before the market closes while adjusted close price is calculated after making adjustments to compensate for corporate actions like stock splits and dividends that could've affected the stock's value. **Adjusted close price is more complex to calculate but gives more accurate results and indicates the true value of the stocks.**"}}