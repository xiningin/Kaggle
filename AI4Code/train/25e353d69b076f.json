{"cell_type":{"cf914436":"code","6e1fd215":"code","81716124":"code","0906a963":"code","00b54a48":"code","8806a17b":"code","fcedd95c":"code","7faf66e1":"code","ed431f67":"code","08a1c470":"code","174e1b63":"code","9db7e2dd":"code","a450205a":"code","bfba839d":"code","27104a3e":"code","e7c16378":"code","711547bf":"code","c19f986e":"code","6a1790ca":"markdown","3ecca3f4":"markdown","668da4c0":"markdown","0fad7811":"markdown","4e968706":"markdown","5a70f208":"markdown","581f2f52":"markdown","c442919b":"markdown","7343863f":"markdown","7570a0e1":"markdown","23d151a2":"markdown","781a95b0":"markdown","958309fe":"markdown","37044776":"markdown","7a1a9d9f":"markdown","e45501b8":"markdown","51954adb":"markdown","7e067e98":"markdown","2bc6b86e":"markdown","83da4778":"markdown"},"source":{"cf914436":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nfrom pandas.plotting import scatter_matrix\nfrom sklearn.model_selection import train_test_split","6e1fd215":"fruits_data = pd.read_table('..\/input\/fruits-data\/fruit_data_with_colors.txt')","81716124":"fruits_data.head()","0906a963":"fruits_data.shape","00b54a48":"fruits_data.info()","8806a17b":"fruits_data.describe()","fcedd95c":"X = fruits_data[['fruit_subtype', 'mass','width','height','color_score' ]]   # Features\ny = fruits_data['fruit_label']                                               # Labels\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)  # Train, Test Split","7faf66e1":"cmap = cm.get_cmap('gnuplot')\nscatter = scatter_matrix(X_train, c = y_train, marker = 'O', s = 40, figsize = (9,9), cmap = cmap)","ed431f67":"from mpl_toolkits import mplot3d\n\nfig = plt.figure(figsize = (8,6))\nax = fig.add_subplot(projection='3d')\nax.scatter(xs= X_train['width'],ys= X_train['height'],zs= X_train['color_score'], c = y_train, marker = \"o\", s = 100, cmap = cmap)\n\nax.set_xlabel('width')\nax.set_ylabel('height')\nax.set_zlabel('Color Score')","08a1c470":"# Train- test Split \nX = fruits_data[['mass','width','height','color_score' ]]   # Features\ny = fruits_data['fruit_label'] \nX_train, X_test, y_train, y_test  = train_test_split(X,y, random_state = 0)  ","174e1b63":"# Creating the Classifier Object\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 5)","9db7e2dd":"# Train the Classifier (Fit the Estimator using training data)\nknn.fit(X_train, y_train)","a450205a":"# Accuracy Estimation\nknn.score(X_test,y_test)  # pass the test data features as well as test labels.","bfba839d":"# First lets create a lookup table, to better understand the result. \nlookup = dict(zip(fruits_data.fruit_label.unique(), fruits_data.fruit_name.unique()))   \nlookup","27104a3e":"# Lets predic the fruit Class of our new Data.\nprediction = knn.predict([[177,7.5,8.2,0.81]])\nprediction","e7c16378":"# Time to check our Model\nlookup[prediction[0]]","711547bf":"k_range = range(1,20)\nscores = []\n\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors = k)\n    knn.fit(X_train, y_train)\n    scores.append(knn.score(X_test, y_test))\n\nplt.figure()\nplt.xlabel('k')\nplt.ylabel('accuracy')\nplt.scatter(k_range, scores)\nplt.xticks([0,5,10,15,20]);","c19f986e":"t = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2]   # Train, test proportion\n\nknn = KNeighborsClassifier(n_neighbors = 5)\n\nplt.figure()\n\nfor s in t:\n\n    scores = []\n    for i in range(1,1000):\n        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1-s)\n        knn.fit(X_train, y_train)\n        scores.append(knn.score(X_test, y_test))\n    plt.plot(s, np.mean(scores), 'bo')\n\nplt.xlabel('Training set proportion (%)')\nplt.ylabel('accuracy');","6a1790ca":"The relationship between different features can be seen in the above scatter matrix.\n\nLets try building a 3D Scatter plot to better understand the Situation.","3ecca3f4":"## A simple KNN Classifier using Scikit-Learn","668da4c0":"### Step 3: Getting the data (Data Collection) and Analysing the Data.","0fad7811":"###### As seen above,\nThe feature set consists of Mass, width, height, color_score of fruit. ","4e968706":"### How Sensitive our Knn Classifier is to the train_test_split proportion?","5a70f208":"### How Sensitive is KNN algorithm to the choice of  'K' ? (no. of neighbors)","581f2f52":"### Step 1: Import required Libraries and Modules.","c442919b":"### Step 2: Importing Required Libraries","7343863f":"### Using the trained KNN- Classifier to train Previously unseen Data","7570a0e1":"#### Lets Plot a scatter plot to see how the Feature's affects the Label.","23d151a2":"### Step 5: Building the ML Classifier","781a95b0":"Hence, by judging the above plots it can be proved that the feature values are well separated and a Categorical Algorithm like Knn can be helpful here.","958309fe":"##### 1. %matplotlib inline \n##### 2. %matplotlib notebook\n\nBoth (1) and (2) are used to output the plots in Jupyter notebooks, the major difference is %matplotlib notebook plot is dynamically interactive compared to %matplotlib inline. ","37044776":" **If you like what you see, Please upvoke it will motivate me to create more Quality Content :)**","7a1a9d9f":"#### Lets First create the Train, Test Splits.","e45501b8":"##### First Steps first","51954adb":"#### Matplotlib Magic Function","7e067e98":"The acuuracy of our regression Model sums up to be: 0.5333333...","2bc6b86e":"### Step 4: Exploratory Data Analysis","83da4778":"###### Analysing Data"}}