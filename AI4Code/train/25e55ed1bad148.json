{"cell_type":{"c1515219":"code","444b2f55":"code","9c35fe06":"code","ce0462ca":"code","894f97d9":"code","2bae1241":"code","fdabb853":"code","c06b751e":"code","5b424f65":"code","ccc1136e":"code","6a0f0b73":"code","a5add00b":"code","8b500bdc":"code","c96c6a54":"code","1e116027":"code","e6337b3f":"markdown","d3b3d874":"markdown","76ff2a92":"markdown","e51708d1":"markdown","0b89d614":"markdown","41ed1f0f":"markdown","87f4ce85":"markdown","78b1398b":"markdown","4825c488":"markdown","e84190b6":"markdown","3d033907":"markdown","8e0cd02c":"markdown","eb8563bd":"markdown","7ccdf792":"markdown","a048e75b":"markdown","4a030e05":"markdown","5bcb035a":"markdown","e02bba0f":"markdown","3e7ecc18":"markdown","83b0423c":"markdown"},"source":{"c1515219":"import datetime\nimport calendar\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.cm as cm\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap, LinearSegmentedColormap\n\nimport seaborn as sns\nimport plotly.graph_objects as go\n\nimport networkx as nx\nimport community as community_louvain\nfrom operator import itemgetter\n\nimport folium\nfrom folium import plugins\n\n# Custom Colors\nMAGENTA = \"#6C3483\"\nGREEN = \"#239B56\"\nBLUE = \"#5DADE2\"\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Custom Colors\nMAGENTA = \"#6C3483\"\nGREEN = \"#239B56\"\nBLUE = \"#5DADE2\"","444b2f55":"dataframe = pd.read_csv(\"\/kaggle\/input\/helsinki-city-bikes\/database.csv\", low_memory=False)\ndataframe.head()","9c35fe06":"# Convert timestamp to datetime64[ns]\ndataframe[['departure','return']] =  dataframe[['departure','return']].apply(pd.to_datetime, format='%Y-%m-%d %H:%M:%S.%f')\ndataframe.dropna(inplace=True)\ndataframe.info()","ce0462ca":"dataframe = dataframe.rename(columns={'distance (m)': 'distance',\n                                     'duration (sec.)': 'duration',\n                                     'avg_speed (km\/h)':'speed',\n                                      'Air temperature (degC)':'temperature',\n                                     })\ndataframe.head()","894f97d9":"pd.set_option('display.float_format', lambda x: '%.3f' % x)\ndataframe[[\"distance\", \"duration\", \"temperature\"]].describe()","2bae1241":"dataframe = dataframe[ \n                    (50 < dataframe['distance']) & (dataframe['distance'] < 10000) &\n                    (120 < dataframe['duration']) & (dataframe['duration'] <  18000) &\n                    (-20 < dataframe['temperature']) & (dataframe['temperature'] < 50)        \n                    ]\n\ndataframe[[\"distance\", \"duration\", \"temperature\"]].describe()","fdabb853":"def duration(dataframe):\n    \"\"\"\n    \"\"\"\n    df = dataframe.copy()\n    \n    # Converting seconds to minutes\n    df[\"duration\"] = df[\"duration\"]\/60\n    \n    # Filtering relevant data\n    duration_data = df[\"duration\"]\n    fig = plt.figure(figsize=(15,7))\n    ax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n\n    # Ploting the histogram\n    plt.hist(duration_data, bins = range(62), color = BLUE, histtype =\"bar\")\n\n    # Adding median and mean lines\n    plt.axvline(df[\"duration\"].mean(), color=MAGENTA, linestyle='-', linewidth=2 )\n    plt.axvline(df[\"duration\"].median(), color=GREEN, linestyle='-', linewidth=2 )\n    plt.axvline(x = 30, color=\"blue\", linestyle='-', linewidth=1 )\n\n    # Adding median and mean texts\n    min_ylim, max_ylim = plt.ylim()\n    plt.text(df[\"duration\"].mean()*1.1, max_ylim*0.9, 'Mean: {:.0f} min'.format(df[\"duration\"].mean()), color = MAGENTA,  fontsize= 12)\n    plt.text(df[\"duration\"].median()*1.1, max_ylim*0.8, 'Median: {:.0f} min'.format(df[\"duration\"].median()), color = GREEN, fontsize= 12)\n    plt.text(x= 28,y=200000, s=\"Free\", color = GREEN, fontsize= 12)\n    plt.text(x= 30.5,y=200000, s=\"Extra Charge\", color = \"grey\", fontsize= 12)\n\n    # Seting ticks on x axis\n    ticks =range(0, 62, 2)\n    plt.xticks(ticks)\n    # Seting ticks on y axis\n    ticks =range(0, 3600, 2000)\n\n    # Labeling Axes\n    ax.set_title('Ride Duration Distribution', fontdict={\"fontsize\":20}, pad = 20)\n    plt.xlabel(\"Duration of Rides (Minutes)\", fontsize= 12, x = 0.5)\n    plt.ylabel(\"Number of Rides\", fontsize= 12)\n\n    # Adding Grid\n    plt.grid(linestyle=\":\", color='grey')\n\n    # Watermark\n    ax.text(0.99, 0.01, '\u00a9 Github\/Geometrein',\n            verticalalignment='bottom',\n            horizontalalignment='right',\n            transform=ax.transAxes,\n            color='grey',\n            fontsize=15,\n            alpha = 0.8)\n\n    plt.show()\n\nduration(dataframe)","c06b751e":"def distance(dataframe):\n    \"\"\"\n    \"\"\"\n    df = dataframe.copy()\n    \n    fig = plt.figure(figsize=(15,7))\n    ax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n\n    data = df[\"distance\"]\n    plt.hist(data, bins = 60, color = BLUE)\n\n\n    plt.axvline(df[\"distance\"].mean(), color=MAGENTA, linestyle='-', linewidth=2 )\n    plt.axvline(df[\"distance\"].median(), color=GREEN, linestyle='-', linewidth=2 )\n    plt.axvline(df[\"distance\"].median(), color=GREEN, linestyle='-', linewidth=2 )\n\n    min_ylim, max_ylim = plt.ylim()\n\n    plt.text(df[\"distance\"].mean()*1.1, max_ylim*0.9, 'Mean: {:.0f} m'.format(df[\"distance\"].mean()), color = MAGENTA,  fontsize= 10)\n    plt.text(df[\"distance\"].median()*1.1, max_ylim*0.8, 'Median: {:.0f} m'.format(df[\"distance\"].median()), color = GREEN, fontsize= 10)\n\n    ax.set_xlim([0,10000])\n\n    # Labeling Axes\n    plt.xlabel(\"Travelled Distance (meters)\", fontsize= 15, x = 0.5)\n    plt.ylabel(\"Number of Rides\", fontsize= 15)\n\n    # Adding Grid\n    plt.grid(linestyle=\":\", color='grey')\n\n    # Watermark\n    ax.text(0.99, 0.01, '\u00a9 Github\/Geometrein',\n            verticalalignment='bottom',\n            horizontalalignment='right',\n            transform=ax.transAxes,\n            color='grey',\n            fontsize=15,\n            alpha = 0.8)\n\n    plt.show()\n\ndistance(dataframe)","5b424f65":"def tripsByYear(dataframe):\n    \"\"\"\n    Number of trips over the years\n    \"\"\"\n    # Data \n    df = dataframe.copy()\n    df_over_time = df.groupby(df['departure'].dt.date).size().reset_index(name='count')\n\n    # Figure\n    fig, ax = plt.subplots(figsize=(20,9))\n    plt.plot(df_over_time[\"departure\"], df_over_time[\"count\"], color= BLUE)\n\n    # Labels\n    ax.set_title(\"Number of trips over time\", fontsize= 15, pad= 20)\n    ax.set_ylabel(\"Number of trips\", fontsize=12)\n    ax.set_xlabel(\"Years\", fontsize=12)\n\n    # Grid & Legend\n    plt.grid(linestyle=\":\", color='grey')\n    plt.legend([\"Number of trips\"])\n\n    # Watermark\n    ax.text(0.99, 0.01, '\u00a9 Github\/Geometrein',\n            verticalalignment='bottom',\n            horizontalalignment='right',\n            transform=ax.transAxes,\n            color='grey',\n            fontsize=15,\n            alpha = 0.9)\n\n    plt.show()\n\ntripsByYear(dataframe)","ccc1136e":"def weekday_heatmap(dataframe):\n    \"\"\"\n    \"\"\"\n    weekdays = [\"Mon\", \"Tue\",\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n    \n    # Data\n    df = dataframe.copy()\n    df[\"hour\"] = pd.DatetimeIndex(df['departure']).hour\n    df[\"weekday\"] = pd.DatetimeIndex(df['departure']).weekday\n    daily_activity = df.groupby(by=['weekday','hour']).count()['departure_name'].unstack()\n\n    # Figure\n    fig, ax = plt.subplots(figsize=(15,15))\n    sns.heatmap(daily_activity, robust=True, cmap=\"Blues\", yticklabels=weekdays) # \"YlOrBr\n\n    # Labeling Axes\n    plt.xlabel(\"Time of the day (Hours)\", fontsize= 12, x = 0.5)\n    plt.ylabel(\"Day of the week\", fontsize= 12)\n\n    # Watermark\n    ax.text(0.99, 0.01, '\u00a9 Github\/Geometrein',\n            verticalalignment='bottom',\n            horizontalalignment='right',\n            transform=ax.transAxes,\n            color='grey',\n            fontsize=15,\n            alpha = 0.8)\n\n\nweekday_heatmap(dataframe)","6a0f0b73":"def yearlyHeatmap(dataframe):\n    \"\"\"\n    This function plots the number of trips by weekday and hour of the day.\n    \"\"\"\n    weekdays = [\"Mon\", \"Tue\",\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n    \n    # Data\n    df = dataframe.copy()\n\n    df[\"hour\"] = pd.DatetimeIndex(df['departure']).hour\n    df[\"weekday\"] = pd.DatetimeIndex(df['departure']).weekday\n\n    df_2018 = df[df['departure'].dt.year == 2018]\n    df_2019 = df[df['departure'].dt.year == 2019]\n    df_2020 = df[df['departure'].dt.year == 2020]\n\n    daily_activity_2018 = df_2018.groupby(by=['weekday','hour']).count()['departure_name'].unstack()\n    daily_activity_2019 = df_2019.groupby(by=['weekday','hour']).count()['departure_name'].unstack()\n    daily_activity_2020 = df_2020.groupby(by=['weekday','hour']).count()['departure_name'].unstack()\n\n    # Figure\n    fig, (ax1, ax2, ax3) = plt.subplots(1, 3,figsize=(60,15))\n\n    sns.heatmap(daily_activity_2018, ax=ax1, robust=True, vmin=0, vmax=70000, cmap=\"Blues\", yticklabels=weekdays)\n    sns.heatmap(daily_activity_2019, ax=ax2, robust=True, vmin=0, vmax=70000, cmap=\"Blues\", yticklabels=weekdays)\n    sns.heatmap(daily_activity_2020, ax=ax3, robust=True, vmin=0, vmax=70000, cmap=\"Blues\", yticklabels=weekdays)\n\n    # Labeling Axes\n    ax1.set_title(\"Usage patterns in 2018\", fontsize= 15, pad = 15)    \n    ax2.set_title(\"Usage patterns in 2019\", fontsize= 15, pad = 15)\n    ax3.set_title(\"Usage patterns in 2020\", fontsize= 15,pad = 15)\n\n    ax1.set(xlabel=\"Time of the day (Hours)\", ylabel=\"Day of the week\")\n    ax2.set(xlabel=\"Time of the day (Hours)\", ylabel=\"Day of the week\")\n    ax3.set(xlabel=\"Time of the day (Hours)\", ylabel=\"Day of the week\")\n\n    # Watermark\n    ax2.text(0.99, 0.01, '\u00a9 Github\/Geometrein',\n            verticalalignment='bottom',\n            horizontalalignment='right',\n            transform=ax2.transAxes,\n            color='grey',\n            fontsize=15,\n            alpha = 0.8)\n\n\nyearlyHeatmap(dataframe)","a5add00b":"def topDepartureStantions(dataframe):\n    \"\"\"\n    This function displays top stations by departure\n    \"\"\"\n    # Data\n    df = dataframe.copy()\n    df = df[df['departure'].dt.year == 2017]\n\n    # Figure\n    fig = plt.figure(figsize=(20,9))\n    ax = sns.countplot(x=\"departure_name\", color = BLUE, data=df, order = df['departure_name'].value_counts().index)\n\n    # Labeling Axes\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\n    plt.xlabel(\"Stations\", fontsize= 12, x = 0.5)\n    plt.ylabel(\"Number of Rides\", fontsize= 12)\n    plt.xlim(-1,20.5)\n\n    # Adding Grid\n    plt.grid(linestyle=\":\", color='grey')\n\ntopDepartureStantions(dataframe)","8b500bdc":"def topReturnStantions(dataframe):\n    \"\"\"\n    This function displays top stations by return\n    \"\"\"\n    # Data\n    df = dataframe.copy()\n    df = df[df['departure'].dt.year == 2017]\n\n    # Figure\n    fig = plt.figure(figsize=(20,9))\n    ax = sns.countplot(x=\"return_name\", color = BLUE, data=df, order = df['return_name'].value_counts().index)\n\n    # Labeling Axes\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\n    plt.xlabel(\"Stations\", fontsize= 12, x = 0.5)\n    plt.ylabel(\"Number of Rides\", fontsize= 12)\n    plt.xlim(-1,20.5)\n\n    # Adding Grid\n    plt.grid(linestyle=\":\", color='grey')\n\n#topReturnStantions(dataframe)","c96c6a54":"def heatMapPlot(dataframe, year = 2020):\n    \"\"\"\n    This function prints an interactive heatmap by destination locations for a given year.\n    \"\"\"\n    # Data\n    df = dataframe.copy()\n    df = df[df['departure'].dt.year == year]\n\n    df.dropna(inplace=True)\n    df['freq'] = df.groupby('departure_name')['departure_name'].transform('count')\n    \n\n    # Map\n    hel_map = folium.Map([60.1975594, 24.9320720], zoom_start=12)\n    folium.TileLayer('cartodbdark_matter').add_to(hel_map)\n\n    stationArr = df[['departure_latitude', 'departure_longitude']].to_numpy()\n    hel_map.add_child(plugins.HeatMap(stationArr, radius=15))\n\n    display(hel_map)\n    \n# function call is commented for performance reasons\n#heatMapPlot(dataframe)","1e116027":"def odHeatmap(dataframe, year=2016):\n    \"\"\"\n    This function Prints Origin-Destination heatmap for a given year.\n    \"\"\"\n    # Data\n    df = dataframe.copy()\n    df = df[df['departure'].dt.year == year]\n    dff = df.groupby(['departure_name', 'return_name']).size()\n    dff = dff.sort_values(ascending=False)\n    dff = dff.reset_index()\n    dff.columns.values[2] = \"count\"\n    #dff = dff[:50] \n\n    # Color scale for heatmap\n    min_value = dff[\"count\"].quantile(0.05)\n    max_value = dff[\"count\"].quantile(0.95)\n\n    # Pivot\n    dff = dff.pivot_table(index='departure_name', columns=\"return_name\", fill_value=0)\n    dff.sort_index(level=0, ascending=True, inplace=True)\n\n    # Figure\n    fig, ax = plt.subplots(figsize=(21,20))\n    sns.heatmap(dff,vmin=min_value,vmax=max_value, cmap=\"Blues\",square=True)\n    \n    # Labeling\n    ax.set_title('Origin-Destination Heatmap', fontdict={\"fontsize\":20}, pad = 50)\n    ax.set_xlabel(\"Destination Name\", fontsize= 15, x = 0.5)\n    ax.set_ylabel(\"Origin Name\", fontsize= 15)\n\n    # Watermark\n    ax.text(0.99, 0.01, '\u00a9 Github\/Geometrein',\n            verticalalignment='bottom',\n            horizontalalignment='right',\n            transform=ax.transAxes,\n            color='grey',\n            fontsize=15,\n            alpha = 0.9)\n\nodHeatmap(dataframe)","e6337b3f":"# Helsinki City Bikes EDA\n## Exploratory data analysis of the Helsinki city bike system.\n\n### [Associated Github Repo](https:\/\/github.com\/Geometrein\/helsinki-city-bikes)\n### [Associated Medium Article](https:\/\/towardsdatascience.com\/helsinki-city-bikes-exploratory-data-analysis-e241ce5096db?sk=19ffb3c11b016486b2dd11455568eee1)\n\n## What are Helsinki City\u00a0bikes?\nHelsinki City Bikes are shared bicycles available to the public in Helsinki and Espoo metropolitan areas. The main aim of the Helsinki city bike system is to address the so-called last-mile problem present in all distribution networks. The city bikes were introduced in 2016 as a pilot project with only 46 bike stations available in Helsinki. After becoming popular among the citizens, Helsinki city decided to gradually expand the bike network. In the period between 2017 and 2019, approximately one hundred stations were being added to the network each year. By 2019 the bike network reached its complete state with only 7 stations being added in 2020. As of 2020, there were 3,510 bikes and 350 stations operating in Helsinki and Espoo.\n\n>Since 2016 more than 10.000.000 rides have been made. The total distance of the trips is 25.291.523 kilometres. To put that in perspective 25.3 million kilometres is 65 times the distance to the moon. The total time all residents spent riding the bikes is approximately 280 Years and 4 months.\n\nIn order to use the city bikes, citizens purchase access for a day, week or the entire cycling season that lasts from April to November. All passes include an unlimited number of 30-minute bike rides. For an extra fee of 1\u20ac\/hour, you can use the bike for longer. Bikes are picked up and returned to stations that are located all around Helsinki and Espoo.\n\n\n","d3b3d874":"Another interesting observation is that the popularity of stations doesn't change substantially throughout the year. This tendency is illustrated in the animated heatmap above.","76ff2a92":"## When are City Bikes used?\nBelow you can see the number of daily bike trips since the launch of the City bike system. As we can see expanding the coverage of the network has a huge impact on the number of trips made by the citizens. It is also visible that 2020 was the first year when bike usage has decreased. There are multiple possible explanations. This decrease can be due to the COVID-19 pandemic or because the city bike network reached the end of its growth phase.","e51708d1":"As we can see above there are certain anomalies in the data like negative and extremely large distances. In cases like this, the context of the data can help to filter out the anomalies.\n### Allowed Distance range\nObviously, the distance cannot be negative in the Euclidean space. However, filtering only positive values is not enough either. To filter out all odd cases it is best to remove any trip that is less than 50 meters. The stations are always positioned more than 50 meters away therefore if the trip is less than 50 meters it is an irregularity within the context of this EDA.\n\n### Allowed Duration range\nDetermining the allowed upper and lower limits is very case-specific. However, the maximum rental time for a bike is 5 hours. Users that exceed 5 hours should pay an 80\u20ac penalty. The 5-hour mark(18000 seconds) can be used as an upper limit for the trip's duration.\nThe lower limit is pretty simple to determine based on previously defined limits.\n50m distance limit\/ 25km\/h average speed.\n\n### Allowed Temperature range\nAs we can see from the table above the only anomaly for temperature is that it reached  32 degrees in Helsinki. However, this probably has more to do with global warming than with an error in our dataset. \n\nBased on these assumptions the dataset can be filtered like this:\n","0b89d614":"These graphs already illustrate that there is some difference in 2020 bike usage patterns. Besides the decrease in the overall bike usage, it seems that the number of trips during the rush hours has decreased also.","41ed1f0f":"# Which trips are the most\u00a0popular?\nThe heatmap below shows the origin-destination pairs and the frequency of their occurrence in 2016.","87f4ce85":"## Conclusion\nIn this article, we looked at the Helsinki city bike system through the lens of descriptive statistics. We barely scratched the surface of all the possible analyses that can be performed on the underlying dataset. **[The second part of the notebook](https:\/\/www.kaggle.com\/geometrein\/helsinki-city-bike-network-analysis)** will analyze the Helsinki city bike system as a complex transportation network.","78b1398b":"#### Ride duration distribution","4825c488":"## Looking for Errors\nIn large datasets, there is always a corrupted entry. It's crucial to check for suspicious values before proceeding with the analysis.","e84190b6":"As one can expect not all stations are used equally. In 2016 the station next to the Kamppi metro station(Central Helsinki) was the most popular one. However, since 2017 It\u00e4merentori has become the undisputed champion by usage. Seeing It\u00e4merentori and T\u00f6\u00f6l\u00f6nlahdenkatu as the most popular stations might be surprising, however, this popularity is explained by their location within the city bike network. While these stations are not in the centre of Helsinki they are grouped around the centre of the bike network. In 2016, when there were less than 50 stations, Kamppi was at the structural centre of the network. However, with the expansion of the network towards northern Helsinki the centre of the bike network moved north too. Because of this It\u00e4merentori and T\u00f6\u00f6l\u00f6nlahdenkatu stations gained more \"important\" role within the whole network.\n\nOne boundary condition that can affect this list is bike availability in a given station. If there are no bikes available, then the dataset will not reflect the demand for bikes but rather their availability. What makes It\u00e4merentori and T\u00f6\u00f6l\u00f6nlahdenkatu stations lively is that they are popular stations for both departures and returns. This ensures bike availability at all times and increases station usage.","3d033907":"On weekends, however, the usage is different. Seems like Helsinkis' citizens prefer to kick off the weekend a little late. The most active hours are between 15:00 and 17:00. Interestingly enough the usage of city bikes is higher around midnight on weekend. This could mean that on weekends city bikes are used as a substitute when the other forms of public transport are no longer available.\n\nSince the City bikes are actively used by commuters, it is natural to assume that the Covid pandemic and the transition to remote work had some effect on city bike usage. The graph below illustrates bike usage patterns for the past three years.","8e0cd02c":"The City Bikes were introduced in 2016 as a pilot project with only 46 bike stations In Helsinki. After becoming popular among the citizens, Helsinki city decided to gradually expand the bike network. From 2017 to 2019 100 stations were being added to the network each year and in 2020 only 7 stations were added. Now the network operates in Helsinki and Espoo and has 350 stations.\nBelow you can see the number of bike trips over time. As we can see from the graph expanding the coverage of the network has a huge impact on the number of trips made by the citizens. It is also visible that 2020 was the first year when Bike usage has decreased. There are multiple possible explanations. This decrease can be due to the COVID-19 pandemic or because the city bike network reached the end of its growth phase.\n","eb8563bd":"### What the average ride looks\u00a0like?\nThe city bike system has grown significantly since 2016, however, how the city bikes are used has not changed substantially. If we look at the individual trips through the last 5 years we will see that the average ride duration is around 13 minutes while the average travelled distance is approximately 2242 meters(1.4 miles). Given the right-skewed distribution of the data, the averages are slightly skewed and the majority of trips actually last from 4\u20138 minutes and cover a distance of 1700 meters (approx.1 mile).","7ccdf792":"# Exploratory Data Analysis","a048e75b":"# Preparation\n## Rename Columns\nIt is considered best practice to store measurements units in the column names when sharing the dataset. However, it is not very comfortable when you're using it. Therefore, it's best to rename the columns to something more readable. This also reduces the risk of human error.","4a030e05":"# Which stations are the most\u00a0popular?","5bcb035a":"Data type conversion","e02bba0f":"If we look at the heatmap below we can see a clear usage pattern. The Most intensive bike usage occurs from 6:00 to 8:00  and from 16:00 to 18:00 on weekdays. This shows that bikes are actively used by commuters around the beginning and the end of the working day.","3e7ecc18":"#### Ride Distance distribution","83b0423c":"As we can see from the graphs above the vast majority of rides are shorter than 30 minutes. However, 3.176% of users ended up exceeding the limit. Those that exceeded the 30-minute limit but not the 60-minutes limit collectively paid is \u20ac261.715 since the launch of the city bikes in 2016."}}