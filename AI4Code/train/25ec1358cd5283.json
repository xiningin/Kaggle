{"cell_type":{"d95b8552":"code","2544f33c":"code","803d3b77":"code","6fdba517":"code","48830845":"code","b1843022":"code","4e78f401":"code","00fa1d10":"code","c04360e3":"code","1d458c1c":"code","78f424db":"code","553b3bcb":"code","cc49d8f1":"code","e63a17c0":"code","31e02c84":"code","0082d052":"code","dd53b9e0":"code","5ae5263a":"code","76065775":"code","b9151d31":"code","63f2e047":"code","11dace1b":"code","b4621ae5":"code","450d5afb":"code","f80b33df":"code","f918166b":"code","8c992ebd":"markdown","f1718619":"markdown"},"source":{"d95b8552":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2544f33c":"import matplotlib.pyplot as plt\nplt.style.use('dark_background')\ndata = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndata.head()","803d3b77":"data.shape","6fdba517":"data.describe(include = 'all')","48830845":"import seaborn as sns\nsns.pairplot(data)","b1843022":"data.hist(by = 'sex', column = 'charges')","4e78f401":"data.hist(by = 'smoker', column = 'charges')","00fa1d10":"data.groupby(data['children']).count()","c04360e3":"data.groupby(data['region']).count()","1d458c1c":"data.groupby(data['smoker']).count()","78f424db":"sns.boxplot(x = 'sex', y = 'age', data = data)","553b3bcb":"sns.boxplot(x= 'sex' , y = 'charges', data = data)","cc49d8f1":"sns.boxplot(x= 'sex' , y = 'bmi', data = data)","e63a17c0":"data.corr()","31e02c84":"import matplotlib.pyplot as plt\ncorr_new_train=data.corr()\nplt.figure(figsize=(5,15))\nsns.heatmap(corr_new_train[['charges']].sort_values(by=['charges'],ascending=False).head(30),annot_kws={\"size\": 16},vmin=-1, cmap='PiYG', annot=True)\nsns.set(font_scale=2)","0082d052":"data['sex'] = pd.get_dummies(data['sex'],drop_first = True )\ndata['smoker'] = pd.get_dummies(data['smoker'],drop_first = True )\n#data['region'] = pd.get_dummies(data['region'],drop_first = True )\n\n#new_data = pd.get_dummies(data['region'],drop_first = True )\n#data = pd.concat([new_data,data], axis = 1)\ndata.head()","dd53b9e0":"data['region'] = pd.get_dummies(data['region'])","5ae5263a":"plt.style.use('dark_background')\nfig, axes = plt.subplots(4, 2,figsize=(20,80))\nfig.subplots_adjust(hspace=0.2)\ncolors=[plt.cm.prism_r(each) for each in np.linspace(0, 1, len(data.columns))]\nfor i,ax,color in zip(data.columns,axes.flatten(),colors):\n    sns.regplot(x=data[i], y=data[\"charges\"], fit_reg=True,marker='o',scatter_kws={'s':50,'alpha':0.8},color=color,ax=ax)\n    plt.xlabel(i,fontsize=12)\n    plt.ylabel('charges',fontsize=12)\n    ax.set_yticks(np.arange(100,90001,10000))\n    ax.set_title('charges'+' - '+str(i),color=color,fontweight='bold',size=20)","76065775":"X = data.iloc[:,:-1].values\ny = data.iloc[:,-1].values","b9151d31":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","63f2e047":"from sklearn.tree import DecisionTreeRegressor\nclf1 = DecisionTreeRegressor()\nclf1.fit(X_train,y_train)","11dace1b":"pred = clf1.predict(X_test)\nclf1.score(X_test,y_test)","b4621ae5":"from sklearn import metrics\nmetrics.scorer.r2_score(pred,y_test)","450d5afb":"sns.set(style = 'darkgrid', color_codes = True)\n\n\nwith sns.axes_style('white'):\n    sns.jointplot(x = y_test, y = pred, kind = 'reg', color = 'k')","f80b33df":"from xgboost import XGBRegressor\n\nmy_model = XGBRegressor(n_estimators=10000, learning_rate=0.12, n_job= 2)\nmy_model.fit(X_train, y_train,\n             early_stopping_rounds=10, \n             eval_set=[(X_train, y_train)], \n             verbose=1)\ny_head=my_model.predict(X_test)\nprint('-'*10+'XGBRegressor'+'-'*10)\nprint('R square Accuracy: ',metrics.scorer.r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',metrics.scorer.mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',metrics.scorer.mean_squared_error(y_test,y_head))","f918166b":"sns.set(style = 'darkgrid', color_codes = True)\n\n\nwith sns.axes_style('white'):\n    sns.jointplot(x = y_test, y = y_head, kind = 'reg', color = 'k')","8c992ebd":"# Don't Forget To UpVote :)","f1718619":"# Predictive Analysis"}}