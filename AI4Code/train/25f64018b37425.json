{"cell_type":{"455dcfd8":"code","e8fb0e9b":"code","9fa695ba":"code","176f38f7":"code","611f447d":"code","ac6b7ca8":"code","ea673093":"code","9372ff9c":"code","609139c3":"code","dae948b2":"code","bcda45e9":"code","b44c6a68":"code","af0a3560":"code","c229a102":"code","c40bb4a3":"code","32b8d6b8":"code","f1857e7d":"code","a8b03e9d":"code","19c6d947":"code","f15f1a75":"code","b29c4c2a":"code","b4d8a4dd":"code","cb309dad":"markdown","b8e015be":"markdown","8fd6dff0":"markdown","759b5435":"markdown","af18f2fa":"markdown","0275532d":"markdown","2bd24b97":"markdown","a17f3e50":"markdown"},"source":{"455dcfd8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nfrom collections import Counter, defaultdict\nfrom spacy.lang.en import English","e8fb0e9b":"%%time\nnlp=English()\ntrain_df=pd.read_csv('..\/input\/coleridgeinitiative-show-us-the-data\/train.csv')\ntrain_df.head()","9fa695ba":"datalabel_df=train_df.groupby('dataset_label')[['Id']].count().reset_index().rename(columns={\n    'Id': 'Number Of Publications'\n})\n\ndatalabel_df.head()","176f38f7":"plt.figure(figsize=(15, 5))\nplt.xticks( rotation='vertical')\nsns.set_theme(style=\"dark\")\nsns.barplot(data=datalabel_df.sort_values('Number Of Publications', ascending=False).head(30), \n            x='dataset_label', \n            y='Number Of Publications',\n            ci=False\n           )\nplt.show()","611f447d":"datalabel_df.sort_values('Number Of Publications', ascending=False).head(30)","ac6b7ca8":"plt.figure(figsize=(15, 5))\nplt.xticks( rotation='vertical')\nsns.set_theme(style=\"dark\")\nsns.barplot(data=datalabel_df.sort_values('Number Of Publications').head(30), \n            x='dataset_label', \n            y='Number Of Publications',\n            ci=False\n           )\nplt.show()","ea673093":"datalabel_df.sort_values('Number Of Publications').head(30)","9372ff9c":"def get_tokens(dl):\n    tokens=[]\n    doc=nlp(dl)\n    for token in doc:\n        tokens.append(token)\n    return tokens\n\ndef get_word_shape(tokens):\n    word_shapes=[]\n    for token in tokens:\n        word_shapes.append(token.shape_)\n    return word_shapes\n\ndef get_num_stopwords(tokens):\n    cnt=0\n    for token in tokens:\n        if token.is_stop:\n            cnt+=1\n    return cnt\n\ndef get_stop_words(tokens):\n    stop_words=[]\n    for token in tokens:\n        if token.is_stop:\n            stop_words.append(token)\n    return stop_words\n\ndef get_num_punctuations(tokens):\n    cnt=0\n    for token in tokens:\n        if token.is_punct:\n            cnt+=1\n    return cnt\n\ndef get_punct(tokens):\n    puncts=[]\n    for token in tokens:\n        if token.is_punct:\n            puncts.append(token)\n    return puncts\n\ndef is_title(tokens):\n    return [token.is_title for token in tokens]\n\ndef is_upper(tokens):\n    return [token.is_upper for token in tokens]","609139c3":"datalabel_df['tokens']=datalabel_df.dataset_label.apply(get_tokens)\ndatalabel_df['word_shape']=datalabel_df.tokens.apply(get_word_shape)\ndatalabel_df['token_len']=datalabel_df.tokens.apply(lambda x:len(x))\ndatalabel_df['num_punct']=datalabel_df.tokens.apply(get_num_punctuations)\ndatalabel_df['puncts']=datalabel_df.tokens.apply(get_punct)\ndatalabel_df['is_title']=datalabel_df.tokens.apply(is_title)\ndatalabel_df['is_upper']=datalabel_df.tokens.apply(is_upper)\ndatalabel_df['num_stopwords']=datalabel_df.tokens.apply(get_num_stopwords)\ndatalabel_df['stopwords']=datalabel_df.tokens.apply(get_stop_words)\n\n\ndatalabel_df['is_start_capital']=datalabel_df.word_shape.apply(lambda ws: ws[0][0] == 'X')\ndatalabel_df['is_start_digit']=datalabel_df.word_shape.apply(lambda ws: ws[0][0] == 'd')\n\n\ndatalabel_df=datalabel_df.sort_values('Number Of Publications', ascending=False)\ndatalabel_df.head()","dae948b2":"print('Number Of tokens:', datalabel_df.token_len.nunique() )\n\nplt.figure(figsize=(15, 5))\nplt.xticks( rotation='vertical')\nsns.set_theme(style=\"dark\")\nsns.countplot(data=datalabel_df.sort_values('token_len'),\n              x='token_len')\n\nplt.show()","bcda45e9":"datalabel_df[datalabel_df.token_len==1]","b44c6a68":"plt.title('Distribution of Labels Starting With Capital Letters')\nsns.countplot(data=datalabel_df,x='is_start_capital')\nplt.show()\n\n\nprint(\"Percent of Datasets starting with capital letters:\", 100 * datalabel_df.is_start_capital.sum()\/len(datalabel_df))","af0a3560":"print('Total Number Of datasets:', len(datalabel_df))\n\nprint('Number Of Datasets starting with Capital Letter:', datalabel_df.is_start_capital.sum())\nprint('Number Of Datasets starting with Digits:', datalabel_df.is_start_digit.sum())","c229a102":"datalabel_df[(datalabel_df.is_start_capital==False) & (datalabel_df.is_start_digit==False)]\n","c40bb4a3":"datalabel_df.num_stopwords.value_counts()","32b8d6b8":"sns.countplot(datalabel_df.num_stopwords)","f1857e7d":"datalabel_df.head()","a8b03e9d":"wshape_freq=defaultdict(int)\nfor ws_list in datalabel_df.word_shape.values:\n    for wshape in ws_list:\n        wshape_freq[wshape]+=1\n\nwshape_df=pd.DataFrame({\n    'word_shape': list(wshape_freq.keys()),\n    'freq': list(wshape_freq.values()),\n})\n\nwshape_df['wshape_len']=wshape_df.word_shape.apply(lambda x: len(x))\nwshape_df=wshape_df.sort_values('freq')\nwshape_df.head()","19c6d947":"plt.figure(figsize=(12, 5))\nplt.title('Word Shape Frequencies.')\nplt.xticks(rotation='vertical')\nsns.set_theme(style=\"dark\")\nsns.barplot(data=wshape_df, \n            x='word_shape',\n            y='freq'\n           )\nplt.show()","f15f1a75":"wshape_df.sort_values('freq', ascending=False)","b29c4c2a":"plt.title('Word Shape Length:')\nsns.countplot(data=wshape_df, x='wshape_len')","b4d8a4dd":"wshape_df[wshape_df.wshape_len>6]","cb309dad":"# Furthur Work:\n1. Bigram of wordshapes\n2. Getting Accronyms from word phrases.\n3. Overlapping datasets","b8e015be":"# Bottom 30 refered dataset labels","8fd6dff0":"looks like if token_len==1 --> acronynms.","759b5435":"Most common unigram word-shape features \n1. Xx(m) --> Starts with Capital and followed by small\n2. X(m) --> all the words are capital\n3. x(m) --> all the words are small(this will come in conjunction with the other blocks as we observe that ~93% of cases starts with capital letters)","af18f2fa":"# Starts with Capital Letter","0275532d":"Looking at the most of the dataset labels it looks their topic is on\n1. Alzimers\n2. Education\n3. Covid\n4. Weather","2bd24b97":"# Most Common Word Shapes","a17f3e50":"# Top 30 appearing datalabels"}}