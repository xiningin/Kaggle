{"cell_type":{"b9b6581a":"code","80cd2e44":"code","bbc1ac65":"code","71725f1a":"code","2ad56bee":"code","658875f4":"code","a04064c5":"code","4ca68486":"code","75728678":"code","6b570082":"code","5b208ecb":"code","9fb06e62":"code","82d4d400":"code","2aafa5ee":"code","15c8934c":"code","dd9ab649":"code","4fdae4b7":"code","f743e6be":"code","e8f02a40":"code","eed05fee":"code","7c0f4632":"code","b2b18334":"code","65c94dc9":"code","0f6132ef":"code","4cc4fb96":"code","f1043aa6":"code","6736e797":"code","219f213c":"code","f0b54435":"markdown","543da642":"markdown","43f0e702":"markdown","83a0710b":"markdown","d4c55efe":"markdown","1de12e22":"markdown","ab6f0809":"markdown","1fa9e0c8":"markdown","ccd44917":"markdown","85ac205c":"markdown","5c71bce7":"markdown","88a54501":"markdown","4865b3ee":"markdown","6d82a9b1":"markdown","7bdf6ee6":"markdown","ff66f8bc":"markdown","d1ab17aa":"markdown","ba19cb20":"markdown","561c87d9":"markdown","29595b7e":"markdown","a098fa91":"markdown","45e3e22b":"markdown","0980ae38":"markdown","c82baae8":"markdown","293b03c6":"markdown","158ee221":"markdown","4d19de67":"markdown","26085499":"markdown","439ad2fa":"markdown","e76e7292":"markdown","47a9dba1":"markdown","a5276d27":"markdown","b96def63":"markdown","e012ef1a":"markdown","b0b7b930":"markdown","bd915ac9":"markdown","962a086e":"markdown","597b7b2e":"markdown"},"source":{"b9b6581a":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_rows', 100)\npd.set_option('display.max_colwidth', None)\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n# from plotly.offline import init_notebook_mode\n# init_notebook_mode(connected=True)\n\nimport datetime\nimport textwrap\n\nfrom google.cloud import bigquery\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport plotly.io as pio\npio.templates.default = \"plotly_white\"\n# pio.renderers.default = 'kaggle'\n# pio.renderers","80cd2e44":"# function for safe queries (based on Kaggle SQL course)\ndef querytodf(query):\n    dry_run_config = bigquery.QueryJobConfig(dry_run=True)\n\n    # API request - dry run query to estimate costs\n    dry_run_query_job = client.query(query, job_config=dry_run_config)\n    print(\"This query will process {} bytes.\".format(dry_run_query_job.total_bytes_processed))\n\n    # Only run the query if it's less than 1 GB\n    ONE_GB = 1000*1000*1000\n    safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=ONE_GB)\n\n    # Set up the query (will only run if it's less than 1 GB)\n    safe_query_job = client.query(query, job_config=safe_config)\n\n    return safe_query_job.to_dataframe()\n\n# get 'bls' dataset\nclient = bigquery.Client()\ndataset_ref = client.dataset(\"bls\", project=\"bigquery-public-data\")\ndataset = client.get_dataset(dataset_ref)","bbc1ac65":"# check column info for CPI-U table\ntable_ref = dataset_ref.table(\"cpi_u\")\ntable = client.get_table(table_ref)\ndisplay(table.schema)\n\n# show first 5 rows\nclient.list_rows(table, max_results=5).to_dataframe()","71725f1a":"# 'cu.series' from https:\/\/download.bls.gov\/pub\/time.series\/cu\/cu.series\nurl = 'https:\/\/download.bls.gov\/pub\/time.series\/cu\/cu.series'\ncu_series = pd.read_csv(url, sep='\\t')\n\n# clean up names\ncol1 = cu_series.columns[0]\ncu_series.rename(columns={col1: 'series_id'}, inplace=True)\ncu_series['series_id'] = cu_series.series_id.str.rstrip(' ')\ncu_series['series_title'] = cu_series.series_title.str.replace(', all urban consumers, seasonally adjusted', '')\ncu_series['series_title'] = cu_series.series_title.str.replace(' in U.S. city average', '')\n\ncu_series = cu_series[(cu_series.area_code == '0000')\n                      & (cu_series.seasonal == 'S')\n                      & (cu_series.periodicity_code == 'R')]\ndisplay(cu_series)","2ad56bee":"# check start and end dates\ndf = cu_series[(cu_series.area_code == '0000')\n         & (cu_series.seasonal == 'S')\n         & (cu_series.periodicity_code == 'R')]\ndf.groupby(['end_year', 'end_period', 'begin_year', 'begin_period']).series_id.nunique().to_frame()","658875f4":"# check column info for CES table\ntable_ref = dataset_ref.table('employment_hours_earnings')\ntable = client.get_table(table_ref)\ndisplay(table.schema)\n\n# show first 5 rows\nclient.list_rows(table, max_results=5).to_dataframe()","a04064c5":"# get ces.series\nquery = \"\"\"\nSELECT *\nFROM `bigquery-public-data.bls.employment_hours_earnings_series`\nWHERE data_type_code IN (11)\nAND seasonal = 'S'\n\"\"\"\n\ndfces_series = querytodf(query)\n\ndfces_series['series_title'] = dfces_series.series_title.str.replace(', seasonally adjusted', '')\ndfces_series['series_title'] = dfces_series.series_title.str.replace('Average weekly earnings of all employees, ', '')\n\ndisplay(dfces_series)","4ca68486":"# check start and end dates\ndfces_series.groupby(['end_year', 'end_period', 'begin_year', 'begin_period']).series_id.nunique().to_frame()","75728678":"# query for cpi data\nqcpi = \"\"\"\nSELECT series_id, area_name, item_name, date, period, value\nFROM `bigquery-public-data.bls.cpi_u`\nWHERE area_code = '0000'\nAND periodicity_code = 'R' \nAND seasonal_code = 'S'\nAND series_id IN (\n    SELECT \n        CASE \n            WHEN EXTRACT(YEAR FROM MAX(date)) >= 2021 THEN series_id\n        END\n    FROM `bigquery-public-data.bls.cpi_u`\n    GROUP BY series_id\n)\nORDER BY area_name, series_id, item_name, date\n\"\"\"\n\n# query for ces data\nqces = \"\"\"\nSELECT ces.series_id, ces_s.industry_code, ces.date, ces.period, ces.value\nFROM `bigquery-public-data.bls.employment_hours_earnings` AS ces\nINNER JOIN `bigquery-public-data.bls.employment_hours_earnings_series` AS ces_s\n    ON ces.series_id = ces_s.series_id\nWHERE ces_s.data_type_code IN (11)\nAND ces_s.seasonal = 'S'\nORDER BY ces_s.industry_code, ces.series_id, ces.date\n\"\"\"","6b570082":"# cpi data\ndfcpi = querytodf(qcpi).rename(columns = {'item_name': 'category'})\ndfcpi['date'] = pd.to_datetime(dfcpi['date'])\n\n# ces data\n\ndfces = querytodf(qces)\ndfces['date'] = pd.to_datetime(dfces['date'])\n\n# get industry names from https:\/\/download.bls.gov\/pub\/time.series\/ce\/ce.industry\nurl = 'https:\/\/download.bls.gov\/pub\/time.series\/ce\/ce.industry'\nlegend_i = pd.read_csv(url, sep='\\t')\n\n# replace industry code with industry name\ndfces.industry_code = dfces.industry_code.replace(list(legend_i.industry_code), list(legend_i.industry_name))\ndfces.rename(columns = {'industry_code': 'industry'}, inplace=True)","5b208ecb":"# check missing values\nprint(dfcpi.info())\nprint()\nprint(dfces.info())","9fb06e62":"# confirm start and end dates cpi\ndf = dfcpi.groupby('series_id').agg({'date': ['min', 'max']}).reset_index()\ndf.columns=['series_id', 'min', 'max']\ndisplay(df.groupby(['max', 'min']).series_id.nunique().to_frame())\n\n# confirm start and end dates ces\ndf = dfces.groupby('series_id').agg({'date': ['min', 'max']}).reset_index()\ndf.columns=['series_id', 'min', 'max']\ndf.groupby(['max', 'min']).series_id.nunique().to_frame()","82d4d400":"# calculate inflation for each series_id (yoy)\n\n# def yoy(data, colval, colgroup, newcol):\n#     s = pd.Series()\n#     for group in data[colgroup].unique():\n#         df0 = data[data[colgroup] == group]\n#         s0 = df0.value.pct_change(periods=12)*100\n#         s = s.append(s0)\n#     df = data\n#     df[newcol] = s\n#     return df\n\ndef yoy(data, colval, colgroup, newcol):\n    s = pd.Series()\n    for group in data[colgroup].unique():\n        df0 = data[data[colgroup] == group]\n        s0 = df0[['date', colval]].set_index('date')[colval].pct_change(freq=pd.DateOffset(years=1))*100\n        s = s.append(s0)\n    df = data\n    df[newcol] = list(s)\n    return df\n\ndfinf = yoy(dfcpi, 'value', 'series_id', 'inflation_yoy')\n\n# some series have different starting dates (separate by 1997-01-01, 2012-03-01)\ns = dfinf.groupby('series_id').date.min()\ns97 = s[s <= pd.to_datetime('1997-01-01')]\ndfinf98 = dfinf[dfinf.series_id.isin(s97.index)]\n\ns06 = s[s <= pd.to_datetime('2006-03-01')]\ndfinf07 = dfinf[(dfinf.series_id.isin(s06.index)) & \n                (dfinf.date >= pd.to_datetime('2007-03-01'))\n               ]\n\ndfinf12 = dfinf[dfinf.date >= pd.to_datetime('2012-03-01')]","2aafa5ee":"# calculate wage growth by series_id (yoy)\ndfg = yoy(dfces, 'value', 'series_id', 'growth_yoy')\n\n# calculate real wage growth\n\ndf0 = dfinf98[dfinf98.category == 'All items']\ndf0 = df0[['date', 'inflation_yoy']]\ndf1 = dfg[['series_id', 'date', 'growth_yoy']]\ndf2 = pd.merge(df1, df0, how='left', on='date')\n\ndfgr = dfg # per industry\ndfgr['realgrowth_yoy'] = df2['growth_yoy'] - df2['inflation_yoy']\n# display(dfgr)\n\ndfgr12 = dfgr[dfgr.date >= pd.to_datetime('2012-03-01')]\n\ndf3 = dfgr[dfgr.industry == 'Total private'] # overall\ndftp = pd.merge(df3, df0, how='left', on='date')\ndftpM = dftp.melt(id_vars=['series_id', \n                          'industry', \n                          'date', \n                          'period', \n                          'value'], \n                 var_name='var', \n                 value_name='rate')\n\ndftpM07 = dftpM[dftpM.date >= pd.to_datetime('2007-03-01')]\ndftpM12 = dftpM[dftpM.date >= pd.to_datetime('2012-03-01')]","15c8934c":"# helper functions\n\n# ranked series of 'colval', grouped by 'colgroup', either 'mean' or 'median', from 'df'\ndef rank(df, colval, colgroup, method):\n    if method == 'mean':\n        s = df.groupby(colgroup)[colval].mean().sort_values(ascending=False)\n    if method == 'median':\n        s = df.groupby(colgroup)[colval].median().sort_values(ascending=False)\n    return s\n\n# split long text (https:\/\/community.plotly.com\/t\/wrap-long-text-in-title-in-dash\/11419)\ndef split(text, width):\n    split_text = textwrap.wrap(text, width=width)\n    return '<br>'.join(split_text)","dd9ab649":"# plotly figure with line, bar, and box plots\n\ndef charts(df, val, group, by):\n    if by == 'top':\n        s = rank(df, val, group, 'mean').head(10)\n        sR = s.sort_values()\n    elif by == 'bottom':\n        s = rank(df, val, group, 'mean').tail(10).sort_values()\n        sR = s.sort_values(ascending=False)\n\n    lcolors = px.colors.qualitative.Pastel\n    num = int(np.ceil(len(s.index)\/len(lcolors)))\n    colors0 = lcolors*num\n    colors = dict(zip(s.index, colors0))\n\n    fig = make_subplots(\n        2, 2, \n        specs=[[{'colspan': 2}, None],\n               [{}, {}]],\n        shared_yaxes=True,\n        subplot_titles=('', 'Average YOY change', 'Distributions'),\n        vertical_spacing=0.15,\n        horizontal_spacing=0.05\n    )\n\n    for i in s.index:\n        data = df[df[group] == i]\n        fig.add_scatter(\n            x=data.date, \n            y=data[val], \n            mode='lines', \n            name=i, \n            legendgroup=i, \n            marker_color=colors[i], \n            showlegend=False,\n            row=1, col=1\n        )\n\n    df0 = sR.to_frame().reset_index()\n    for i in sR.index:\n#         data = df[df[group] == ind].groupby(group)[val].mean()\n        data = df0[df0[group] == i]\n        fig.add_bar(\n            y=data[group], \n            x=data[val], \n            orientation='h', \n            name=i, \n            text=round(data[val], 4),\n            legendgroup=i, \n            marker_color=colors[i], \n#             showlegend=False, \n            row=2, col=1\n        )\n\n    for i in sR.index:\n        data = df[df[group] == i]\n        fig.add_violin(\n            y=data[group], \n            x=data[val], \n            orientation='h', \n            name=i, \n            legendgroup=i, \n            marker_color=colors[i], \n            showlegend=False, \n            row=2, col=2\n        )\n\n    fig.for_each_trace(lambda trace: trace.update(name=split(trace.name, 31)))\n    fig.update_xaxes(ticksuffix='%', row=2)\n    fig.update_yaxes(ticksuffix='%', row=1)\n    fig.update_yaxes(\n        visible=False,\n#         tickmode = 'array', \n#         tickvals = list(range(len(sR.index))), \n#         ticktext=[split(i, 40) for i in sR.index], \n        row=2, col=1\n    )\n    fig.update_layout(\n        height=540, \n#         bargap=0.1,\n        legend = dict(yanchor=\"middle\", y=0.5, xanchor=\"right\", x=-0.08),\n#         title_text=\"Inflation (YoY) since 1997\",\n#         showlegend=False\n        legend_traceorder='reversed',\n    )\n    return fig","4fdae4b7":"# past year\nyago1 = pd.to_datetime(datetime.date.today()-datetime.timedelta(365))\n\ndata = dfinf[dfinf.date >= yago1]\nval = 'inflation_yoy'\ngroup = 'category'\n\nfig = charts(data, val, group, 'top')\nfig.update_layout(title='Inflation in the past year, Top 10 Industries')\nfig.show()\n\nfig = charts(data, val, group, 'bottom')\nfig.update_layout(title='Inflation in the past year, Bottom 10 Industries')\nfig.show()","f743e6be":"# 2012 top and bottom\n\ndata = dfinf12\nval = 'inflation_yoy'\ngroup = 'category'\n\nfig = charts(data, val, group, 'top')\nfig.update_layout(title='Inflation since 2012, Top 10 Categories')\nfig.show()\n\nfig = charts(data, val, group, 'bottom')\nfig.update_layout(title='Inflation since 2012, Bottom 10 Categories')\nfig.show()","e8f02a40":"# past year, top and bottom\n\ndata = dfgr[dfgr.date >= yago1]\nval = 'growth_yoy'\ngroup = 'industry'\n\nfig = charts(data, val, group, 'top')\nfig.update_layout(title='Wage growth in the past year, Top 10 Industries')\nfig.show()\n\nfig = charts(data, val, group, 'bottom')\nfig.update_layout(title='Wage growth in the past year, Bottom 10 Industries')\nfig.show()","eed05fee":"# 2012, top and bottom\n\ndata = dfgr12\nval = 'growth_yoy'\ngroup = 'industry'\n\nfig = charts(data, val, group, 'top')\nfig.update_layout(title='Wage growth since 2012, Top 10 Industries')\nfig.show()\n\nfig = charts(data, val, group, 'bottom')\nfig.update_layout(title='Wage growth since 2012, Bottom 10 Industries')\nfig.show()","7c0f4632":"data = dftpM12[dftpM12.date >= yago1]\n\ndf = data[data['var'] == 'realgrowth_yoy']\npp = round(df.rate.mean(), 2)\n\ntext = ('<i><b>For the average American, purchasing power (real wage) <br>has increased (by about ' +\n        str(pp) +\n        '%) in the past year<\/b><\/i>')\n\nfig = charts(data, 'rate', 'var', 'top')\nfig.update_layout(title='Wage Growth, Inflation, Real Wage Growth in the Past Year')\nfig.update_traces(textposition='inside', row=2, col=1, selector=dict(name='realgrowth_yoy'))\nfig.add_annotation(text=text, xref='paper', yref='paper', x=-0.2, y=-0.2, showarrow=False, font=dict(size=14), align='left')\nfig.show()","b2b18334":"data = dftpM12\n\ndf = dftpM12[dftpM12['var'] == 'realgrowth_yoy']\npp = round(df.rate.mean(), 2)\n\ntext = ('<i><b>For the average American, purchasing power (real wage) <br>has increased (by about ' +\n        str(pp) +\n        '% per year) since 2012<\/b><\/i>')\n\nfig = charts(data, 'rate', 'var', 'top')\nfig.update_layout(title='Wage Growth, Inflation, Real Wage Growth since 2012')\nfig.update_traces(textposition='inside', row=2, col=1, selector=dict(name='realgrowth_yoy'))\nfig.add_annotation(text=text, xref='paper', yref='paper', x=-0.2, y=-0.2, showarrow=False, font=dict(size=14), align='left')\nfig.show()","65c94dc9":"# plotly bar plot\n\ndef bar(df, val, group):\n    lcolors = px.colors.qualitative.Pastel\n    num = int(np.ceil(len(df[group])\/len(lcolors)))\n    colors0 = lcolors*num\n    colors = dict(zip(df[group], colors0))\n\n    fig = go.Figure()\n    for i in df[group].unique():\n        data0 = df[df[group] == i]\n        fig.add_bar(\n            y=data0[group], \n            x=data0[val], \n            orientation='h', \n            name=i,\n            marker_color=colors[i],\n        )\n    fig.for_each_trace(lambda trace: trace.update(name=split(trace.name, 31)))\n    fig.update_yaxes(\n        visible=False,\n    )\n    fig.update_layout(\n        width = 600,\n        legend = dict(yanchor=\"top\", y=1, xanchor=\"right\", x=-0.05),\n        legend_traceorder='reversed',\n        xaxis_ticksuffix = '%'\n    )\n    return fig","0f6132ef":"# past year industries with negative pp\n\ndf = dfgr[dfgr.date >= yago1]\nval = 'realgrowth_yoy'\ngroup = 'industry'\ns = rank(df, val, group, 'mean')\ndata = s[s<0].to_frame().reset_index()\n\ntext = '<i><b>For the average American working in the above industries, <br>purchasing power (real wage) has decreased in the past year<\/b><\/i>'\n\nfig = bar(data, val, group)\nfig.update_layout(title='Industries with negative real wage growth in the past year')\nfig.add_annotation(text=text, xref='paper', yref='paper', x=-0.9, y=-0.17, showarrow=False, font=dict(size=14), align='left')\nfig.show()","4cc4fb96":"# 2012 industries with negative pp\n\ndf = dfgr12\nval = 'realgrowth_yoy'\ngroup = 'industry'\ns = rank(df, val, group, 'mean')\ndata = s[s<0].to_frame().reset_index()\n\ntext = '<i><b>For the average American working in the above industries, <br>purchasing power (real wage) has decreased since 2012<\/b><\/i>'\n\nfig = bar(data, val, group)\nfig.update_layout(title='Industries with negative real wage growth since 2012')\nfig.add_annotation(text=text, xref='paper', yref='paper', x=-0.9, y=-0.17, showarrow=False, font=dict(size=14), align='left')\nfig.show()","f1043aa6":"# categories outpacing wage growth in the past year\n\ndf0 = dfgr[dfgr.date >= yago1]\navgWG = df0[df0.industry == 'Total private'].growth_yoy.mean()\n\ndf = dfinf[dfinf.date >= yago1]\nval = 'inflation_yoy'\ngroup = 'category'\n\ns = rank(df, val, group, 'mean')\ndata = s[s>avgWG].sort_values().to_frame().reset_index()\n\ntext='<i><b>For the average American, purchasing power of <br>the above items has decreased in the past year<\/b><\/i>'\n\nfig = bar(data, val, group)\nfig.add_vline(\n    x=avgWG, \n    line_dash='dash',\n    annotation_text='   Average wage growth<br>(past year): ' + str(round(avgWG, 2)) + '%',\n    annotation_position='bottom right',\n    annotation_font_size=14,\n)\nfig.update_layout(title='Inflation categories outpacing wage growth in the past year')\nfig.add_annotation(text=text, xref='paper', yref='paper', x=-0.7, y=-0.17, showarrow=False, font=dict(size=14), align='left')\nfig.show()","6736e797":"# 2012 categories outpacing wage growth\n\navgWG12 = dfgr12[dfgr12.industry == 'Total private'].growth_yoy.mean()\n\ndf = dfinf12\nval = 'inflation_yoy'\ngroup = 'category'\n\ns = rank(df, val, group, 'mean')\ndata = s[s>avgWG12].sort_values().to_frame().reset_index()\n\ntext='<i><b>For the average American, purchasing power of <br>the above items has decreased since 2012<\/b><\/i>'\n\nfig = bar(data, val, group)\nfig.add_vline(\n    x=avgWG12, \n    line_dash='dash',\n    annotation_text='   Average wage growth<br>since 2012: ' + str(round(avgWG12, 2)) + '%',\n    annotation_position='bottom right',\n    annotation_font_size=14,\n)\nfig.update_layout(title='Inflation categories outpacing wage growth since 2012')\nfig.add_annotation(text=text, xref='paper', yref='paper', x=-0.9, y=-0.17, showarrow=False, font=dict(size=14), align='left')\nfig.show()","219f213c":"# # WIP\n# s = rank(dfgr, 'realgrowth_yoy', 'industry', 'mean')\n# data = s[s<0].to_frame().reset_index()\n\n# lcolors = px.colors.qualitative.Dark24\n# num = int(np.ceil(len(data.industry)\/len(lcolors)))\n# colors0 = lcolors*num\n# colors0","f0b54435":"Confirm start and end dates","543da642":"This notebook will try to examine inflation vs wage growth in the U.S. by looking at this dataset: https:\/\/www.kaggle.com\/bls\/bls, specifically:\n1. *CPI data from the cpi_u table (inflation)*\n2. *Wage data from the employment_hours_earnings (CES) table (wage growth)*\n\nThis is a Google BigQuery dataset and is updated monthly. ","43f0e702":"### Examine CES (employment, hours, earnings) data\nColumn data + first 5 rows:","83a0710b":"<div id = '2'><\/div>","d4c55efe":"# Final Notes\n\n* This dataset is continually updating, so charts may change month to month. The remarks I make on the data are up to date as of April 2021.\n* This analysis is not reflective of wages and inflation globally, but in the U.S. only. \n* This is not an analysis of absolute purchasing power, but the change in purchasing power.\n* The CPI is just one source of price measurement, there are others: https:\/\/en.wikipedia.org\/wiki\/Price_index\n* Likewise, the CES is just one source of wage measurement, there are also others: https:\/\/www.bls.gov\/bls\/blswage.htm\n\n**I am still practicing, let me know if you find any mistakes! Any other suggestions\/comments are welcome!**","1de12e22":"### 2. Purchasing Power by Industry","ab6f0809":"# Query + Prepare Data\nTo keep things simple, we'll use year-over-year (YOY) percent change for our growth and inflation calculations. This means our growth rate will be updated monthly, but will represent a change over the past year. ","1fa9e0c8":"# Getting to know CPI-U, CES\nWe need to explore the structure of the CPI-U and CES data in order to understand how to build our queries.","ccd44917":"Calculate real wage growth\n\nReal wage growth = wage growth - inflation","85ac205c":"Query and clean:","5c71bce7":"### 1. Overall Purchasing Power (Real Wage Growth)\nReal growth rate = growth rate - inflation rate\n\nWage data is calculated from average weekly earnings of all non-farm employees in the private sector. Inflation data is calculated from CPI of all items, average of all U.S. cities. ","88a54501":"The ces.series table is included in the Kaggle dataset.\n\nWe are only concerned with wages, so again we'll filter the data:\n* data_type_code: 11 (average weekly earnings of all employees)\n* seasonal: S (seasonally adjusted)\n\nNote: There is also data available for average hourly earnings, but I think weekly earnings are a better representation of actual wages","4865b3ee":"Calculate inflation (growth rate of CPI)\n\nhttps:\/\/en.wikipedia.org\/wiki\/Inflation","6d82a9b1":"### Wage Growth","7bdf6ee6":"### Inflation","ff66f8bc":"**The good news:** Most categories have gotten relatively more affordable (inflation < wage growth) in the past year and since 2012.\n\n**The bad news:** There are some important categories among the ones that have gotten relatively more expensive (inflation > wage growth): things that everyone probably expected like healthcare, education, and housing costs. However there are also some common food categories like meats, eggs, and fish!\n\n***In order for an average American consumer to maintain their purchasing power of beef, they would have needed average annual salary growth of about 3.6% since 2012***","d1ab17aa":"# Is Inflation Outpacing Wage Growth?","ba19cb20":"Check missing values","561c87d9":"### Examine CPI data\nColumn data + first 5 rows:","29595b7e":"Note time series data with different start and end dates","a098fa91":"Well, does this mean we've been listening to our friends\/family\/selves complain for nothing? What about non-average folks with non-average jobs? Let's dive deeper.","45e3e22b":"### CPI-U: Consumer Price Index, All Urban Consumers\n\nfrom https:\/\/download.bls.gov\/pub\/time.series\/cu\/cu.txt:\n\n> The Consumer Price Index (CPI) is a statistical measure\nof change, over time, of the prices of goods and services in major \nexpenditure groups--such as food, housing, apparel, transportation, and \nmedical care--typically purchased by urban consumers. Essentially, it \ncompares the cost of a sample \"market basket\" of goods and services in a \nspecific month relative to the cost of the same \"market basket\" in an \nearlier reference period. This reference period is designated as the base \nperiod.\n\n* https:\/\/www.bls.gov\/cpi\/\n* https:\/\/download.bls.gov\/pub\/time.series\/cu\/","0980ae38":"The cu.series table gives more information about each set of time series data in the CPI table. This file is not included in the Kaggle dataset so we'll import it from the bls.gov website.\n\nThe table is quite large, so we'll filter the data:\n* area_code: 0000 (average of all U.S. cities)\n* seasonal: S (seasonally adjusted)\n* periodicity_code: R (monthly observations)\n\nNote: There is also data for different areas of the U.S. I may add this in future versions of this notebook, but for now we'll just look at average of all cities.","c82baae8":"# Is our purchasing power increasing or decreasing?\nPurchasing power is\n\n* increasing if the *real growth rate of wages is positive*\n* decreasing if the *real growth rate of wages is negative*\n\n**Time to answer our main question. We'll answer it in 3 ways:**","293b03c6":"Build queries:","158ee221":"A moment of silence for those of us working in document preparation services... All kidding aside, it makes sense though, since most things are being done online now. ","4d19de67":"Remember when milk was one dollar a bottle? Remember when it cost one dollar to watch a movie? Remember when you could buy a new car for one dollar? Ah, the good ole days. How many of us have heard friends\/family\/ourselves complain about how everything has grown except their salary? Is this really true, are prices really increasing more than our salaries? \n\n***Is our purchasing power really decreasing, or is it just an illusion?***\n\nhttps:\/\/en.wikipedia.org\/wiki\/Purchasing_power","26085499":"![pexels-tima-miroshnichenko-6336631.jpg](attachment:3019a70e-4540-461c-ab6d-e01d4e55aff9.jpg)\n\n*Photo by Tima Miroshnichenko from Pexels*","439ad2fa":"### CES: Current Employment Statistics, National\n\nfrom https:\/\/download.bls.gov\/pub\/time.series\/ce\/ce.txt:\n\n> The Current Employment Statistics (CES) program provides estimates of employment,      \nhours, and earnings information on a national basis and in considerable industry       \ndetail.  The Bureau of Labor Statistics collects payroll data each month from a sample \nof business and government establishments in all nonfarm activities.  \n\n* https:\/\/www.bls.gov\/ces\/\n* https:\/\/download.bls.gov\/pub\/time.series\/ce\/","e76e7292":"Note different start and end dates","47a9dba1":"For simplicity's sake, we'll use seasonally adjusted data unless otherwise mentioned.\n\nhttps:\/\/en.wikipedia.org\/wiki\/Seasonality","a5276d27":"![pexels-nixon-johnson-2041879.jpg](attachment:00e476f0-21ae-4534-b570-e554765c1200.jpg)\n\n*Photo by Nixon Johnson from Pexels*","b96def63":"### 3. Purchasing Power of Specific Items","e012ef1a":"**It looks like you can keep on complaining if you work in one of those bottom industries.** But how about the rest of us, do we have no right to complain about increasing price levels?\n\nSo far we've only been concerned with overall purchasing power (based on CPI, all items), but what about different item categories in the CPI? Surely the prices of different things grow at different rates?","b0b7b930":"# Preliminary EDA\n\n***This dataset is continually updating, so charts may change month to month. The remarks I make on the data are up to date as of April 2021.***\n\n***Charts are interactive, feel free to scroll\/click the legend to see\/compare different data***","bd915ac9":"**Everything looks reasonable, except for a large spike in wage growth in early 2020 (onset of COVID19).** \n\nIntuitively this doesn't make sense (Why would wages increase so sharply during a recession?), but there are a number of reasons why the numbers would show such a jump (free money from the U.S. gov, low wage earners losing their jobs thus being dropped from payroll data, etc). Going into the details of this is beyond the scope of this notebook, but possibly an interesting topic for a future analysis. \n\n**For now let's just say that our numbers will probably be skewed too high.**","962a086e":"Both the CPI data and CES data each have a directory on the bls.gov website with supplementary documentation.","597b7b2e":"We now have an answer to our question: The average real growth rate (YOY) of wages in the past year is a little less than 5%, and since 2012 is a little more than 1.3%\n\n***In other words, for the average American employee living in an average American city working an average non-farm private sector job, purchasing power has increased a little less than 5% in the past year, and a little more than 1.3% since 2012.***"}}