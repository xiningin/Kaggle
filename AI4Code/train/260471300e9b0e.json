{"cell_type":{"72fb0f87":"code","97de4639":"code","49d91a63":"code","18555ec3":"code","1c9790a3":"code","7db9c384":"code","b91ac43a":"code","62e888cb":"code","7672744e":"code","11c46b37":"code","6b4d8ed1":"markdown","b3fe9f64":"markdown"},"source":{"72fb0f87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/twitter-user-gender-classification\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","97de4639":"data = pd.read_csv('\/kaggle\/input\/twitter-user-gender-classification\/gender-classifier-DFE-791531.csv', encoding ='latin1')\ndata.info()","49d91a63":"data = data.drop(['_unit_id', '_golden', '_unit_state', '_trusted_judgments', '_last_judgment_at', 'profile_yn', 'profile_yn:confidence', 'created', 'description', 'gender_gold', 'link_color', 'profile_yn_gold', 'profileimage', 'sidebar_color', 'text', 'tweet_coord', 'tweet_created', 'tweet_id', 'tweet_location', 'user_timezone', 'gender:confidence', 'gender', 'name'],axis=1)","18555ec3":"data.head(20000)","1c9790a3":"y = data['tweet_count'].values\ny = y.reshape(-1,1)\nx_data = data.drop(['tweet_count'],axis = 1)\nprint(x_data)","7db9c384":"x = (x_data - np.min(x_data)) \/ (np.max(x_data) - np.min(x_data)).values\nx.head(20000)","b91ac43a":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.5,random_state=100)\n\ny_train = y_train.reshape(-1,1)\ny_test = y_test.reshape(-1,1)\n\nprint(\"x_train: \",x_train.shape)\nprint(\"x_test: \",x_test.shape)\nprint(\"y_train: \",y_train.shape)\nprint(\"y_test: \",y_test.shape)","62e888cb":"from sklearn.neighbors import KNeighborsClassifier\nK = 1\nknn = KNeighborsClassifier(n_neighbors=K)\nknn.fit(x_train, y_train.ravel())\nprint(\"When K = {} neighnors , KNN test accuracy: {}\".format(K, knn.score(x_test, y_test)))\nprint(\"When K = {} neighnors , KNN train accuracy: {}\".format(K, knn.score(x_train, y_train)))","7672744e":"ran = np.arange(1,30)\ntrain_list = []\ntest_list = []\nfor i,each in enumerate(ran):\n    knn = KNeighborsClassifier(n_neighbors=each)\n    knn.fit(x_train, y_train.ravel())\n    test_list.append(knn.score(x_test, y_test))\n    train_list.append(knn.score(x_train, y_train))","11c46b37":"plt.figure(figsize=[15,10])\nplt.plot(ran,test_list,label='Test Score')\nplt.plot(ran,train_list,label = 'Train Score')\nplt.xlabel('Number of Neighbers')\nplt.ylabel('fav_number\/retweet_count')\nplt.xticks(ran)\nplt.legend()\nprint(\"Best test score is {} and K = {}\".format(np.max(test_list), test_list.index(np.max(test_list))+1))\nprint(\"Best train score is {} and K = {}\".format(np.max(train_list), train_list.index(np.max(train_list))+1))","6b4d8ed1":"## K-Nearest Neighbour (KNN) ","b3fe9f64":"## Amir Shokri\n## St code : 9811920009\n## E-mail : amirsh.nll@gmail.com"}}