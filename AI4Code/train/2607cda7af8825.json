{"cell_type":{"699a4dab":"code","a5c019bb":"code","8539dedd":"code","e4d17805":"code","27559ce4":"code","8c88c36d":"code","ea1eaf3d":"code","581e2bb9":"code","ab118c54":"code","accbdfd1":"code","407bbb14":"code","9ad72d5a":"code","fc5a03be":"code","f34a8abc":"code","c84261ed":"code","36feda46":"code","0bd55210":"code","ea5d4497":"code","4b94301a":"code","3db978d0":"markdown","93b35a48":"markdown","c9843837":"markdown","4d452552":"markdown","040af62b":"markdown","6292f9e2":"markdown","7c88d537":"markdown","bf3149c3":"markdown"},"source":{"699a4dab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a5c019bb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport nltk\nfrom nltk.corpus import stopwords\nimport re\nimport networkx\nfrom textblob import TextBlob\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","8539dedd":"data = pd.read_csv('\/kaggle\/input\/pfizer-vaccine-tweets\/vaccination_tweets.csv')\ndata.head(3)","e4d17805":"data.info()","27559ce4":"#cleaning the tweets\ndef clean_tweets(tweet):\n \n    tweet = re.sub(r':', '', str(tweet))\n    tweet = re.sub(r'\u201a\u00c4\u00b6', '', str(tweet))\n    tweet = re.sub('@[A-Za-z0\u20139]+', '', str(tweet))               \n    tweet = re.sub('#', '', str(tweet)) # Removing '#' hash tag\n    tweet = re.sub('https?:\\\/\\\/\\S+', '', str(tweet)) # Removing hyperlink\n    #replace consecutive non-ASCII characters with a space\n    tweet = re.sub(r'[^\\x00-\\x7F]+',' ',str(tweet))\n    tweet = str(tweet).lower()\n    tweet = re.sub('\\[.*?\\]', '', tweet)\n    tweet = re.sub('https?:\/\/\\S+|www\\.\\S+', '', tweet)\n    tweet = re.sub('<.*?>+', '', tweet)\n    tweet = re.sub('\\n', '', tweet)\n    tweet = re.sub('\\w*\\d\\w*', '', tweet)\n    tweet = re.sub(r'#','',tweet)\n    tweet = re.sub(r'RT[\\s]+','',tweet)\n    tweet = re.sub(r'[^\\w]', ' ', tweet)\n    tweet = re.sub('https', '', tweet)\n    tweet = re.sub('https ', '', tweet)\n    tweet = re.sub('co', '', tweet)\n\n    return tweet","8c88c36d":"## Sentiment Analysis \n\ndef getSubjectivity(tweet):\n    try:\n        return TextBlob(tweet).sentiment.subjectivity\n    except:\n        return None","ea1eaf3d":"# Create a function to get the polarity\ndef getPolarity(tweet):\n    try:\n        return  TextBlob(tweet).sentiment.polarity\n    except:\n        return None","581e2bb9":"def sentiment_calc(tweet):\n    try:\n        return TextBlob(tweet).sentiment\n    except:\n        return None","ab118c54":"data['cleaned_text']=data['text'].apply(clean_tweets)","accbdfd1":"data['subjectivity'] = data['cleaned_text'].apply(getSubjectivity)\ndata['polarity'] = data['cleaned_text'].apply(getPolarity)\ndata['sentiment'] = data['cleaned_text'].apply(sentiment_calc)\n","407bbb14":"def getAnalysis(score):\n    if score < 0:\n      return 'Negative'\n    elif score == 0:\n      return 'Neutral'\n    else:\n      return 'Positive'","9ad72d5a":"data['analysis'] = data['polarity'].apply(getAnalysis)","fc5a03be":"data.head()","f34a8abc":"data.groupby('analysis')['analysis'].count().plot.bar()\nplt.title('Sentiment Analyisis  ')\n\n\n","c84261ed":"x=data.groupby('analysis')['analysis'].count()\nneutral=data[data['analysis']=='Neutral']['cleaned_text'].count()\npositive=data[data['analysis']=='Positive']['cleaned_text'].count()\nnegative=data[data['analysis']=='Negative']['cleaned_text'].count()\n","36feda46":"import plotly.graph_objects as go","0bd55210":"fig = go.Figure(data=[go.Pie(labels=[\"positivity\",\"negativity\",\"neutrality\"], values=[positive,negative,neutral])])\nfig.update_layout(title_text='Sentiment analysis of Pfizer vaccine')\nfig.show()\n","ea5d4497":"neutral_tweets=data[data['analysis']=='Neutral']['cleaned_text']\npositive_tweets=data[data['analysis']=='Positive']['cleaned_text']\nnegative_tweets=data[data['analysis']=='Negative']['cleaned_text']\n","4b94301a":"from wordcloud import WordCloud\nfig, (ax1, ax2,ax3) = plt.subplots(1, 3, figsize=[20, 20])\nwordcloud1 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(neutral_tweets))\nax1.imshow(wordcloud1)\nax1.axis('off')\nax1.set_title('neutral_tweets',fontsize=40);\n\nwordcloud2 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(positive_tweets))\nax2.imshow(wordcloud2)\nax2.axis('off')\nax2.set_title('positive_tweets',fontsize=40);\n\nwordcloud2 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(negative_tweets))\nax3.imshow(wordcloud2)\nax3.axis('off')\nax3.set_title('negative_tweets',fontsize=40);","3db978d0":"getting some information about our data to check how many nulls and non nulls","93b35a48":"# we will deel with text feature and doing analysis ","c9843837":"# 1. first we will import what will we deel with\n","4d452552":"note that the polarity give us the evaluation of each tweet in numbers,the positive\nnumber refer to positive sentiment ,and zero is neutral ,and the negative is refer to\nnegative sentimental)","040af62b":"# Create two new columns 'Subjectivity' & 'Polarity'","6292f9e2":"first we should clean our text by removing hash tags, hyperlink,.....etc","7c88d537":"calculating subjectivity for our sentimental analysiss","bf3149c3":"# 2. importing data"}}