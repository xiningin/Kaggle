{"cell_type":{"68a3af95":"code","0752a8af":"code","2f6becda":"code","d66a8829":"code","1c31df68":"code","40f5370e":"code","0c97770b":"code","4bbda58b":"code","efe543fb":"code","d5df6adc":"code","06c37b50":"markdown","0bde2160":"markdown","c831da45":"markdown"},"source":{"68a3af95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nprint('Setup complete.')","0752a8af":"# Load all of the Kaggle forum messages, see how many there are, and look at the first few.\nforum_message_df = pd.read_csv('\/kaggle\/input\/meta-kaggle\/ForumMessages.csv')\nprint(forum_message_df.shape)\nforum_message_df.head()","2f6becda":"# Remove messages that have not been upvoted (Medal == NaN)\nforum_message_df = forum_message_df[forum_message_df['Medal'].notna()]\nprint(forum_message_df.shape)\nforum_message_df.head()","d66a8829":"# Remove messages that do not have any message body.\nforum_message_df = forum_message_df[forum_message_df['Message'].notna()]\nprint(forum_message_df.shape)\nforum_message_df.head()","1c31df68":"from bs4 import BeautifulSoup\nfrom urllib.parse import urlparse\n\nurls = list()\ndomains = list()\n\n# Loop through the message values and extract URLs from anchor tags.\nfor message in forum_message_df['Message'].values:\n    soup = BeautifulSoup(message)\n\n    for a in soup.find_all('a', href=True):\n        urls.append(a['href'])\n        domain = urlparse(a['href']).netloc\n        domains.append(domain)\n        \n# Show how many URLs and domains were extracted\nprint(\"URLs:\", len(urls))\nprint(\"domains:\", len(domains))","40f5370e":"# Display the first 10 urls and domains.\nprint(urls[0:10])\nprint(domains[0:10])","0c97770b":"from collections import Counter\n\nurl_counter = Counter(urls)\ndomain_counter = Counter(domains)\n\n# Find the most common URLs and domains.\ntop_urls = url_counter.most_common(25)\ntop_domains = domain_counter.most_common(25)\n\nprint(\"Most common URLs:\")\nprint(top_urls)\n\nprint(\"Most common domains:\")\nprint(top_domains)","4bbda58b":"external_urls = list()\nexternal_domains = list()\n\ndomains_to_exclude = ['www.kaggle.com', '', 'blog.kaggle.com']\n\nfor url, domain in zip(urls, domains):\n    if domain not in domains_to_exclude:\n        external_urls.append(url)\n        external_domains.append(domain)\n        \n# Display the first 10 remaining urls and domains.\nprint(external_urls[0:10])\nprint(external_domains[0:10])","efe543fb":"external_url_counter = Counter(external_urls)\nexternal_domain_counter = Counter(external_domains)\n\n# Find the most common external URLs and domains.\ntop_external_urls = external_url_counter.most_common(25)\ntop_external_domains = external_domain_counter.most_common(25)\n\nprint(\"Most common external URLs:\")\nprint(top_external_urls)\n\nprint(\"Most common external domains:\")\nprint(top_external_domains)","d5df6adc":"medium_df = forum_message_df[forum_message_df['Message'].str.contains('https:\/\/medium.com\/<a href=')]\nmedium_df","06c37b50":"This looks a lot better, but there are still a few odd results. In particular, I'd like to take a closer look at that medium.com URL (second result) that appears to be broken. Let's find all the posts that contain that partial link.","0bde2160":"Those results are somewhat interesting, but all of the internal links are overwhelming. Let's look at just the external links. We can do that without looping over the dataframe again (slow!) by using the results already stored in the urls and domains lists.","c831da45":"By going directly to several of these posts, I see that these are all links to different articles on Medium. I'm not sure how the link got mangled in the Meta Kaggle dataset, but I'm going to just ignore this particular result.\n\n### Top External Resources\nThese are the most frequently linked individual pages (and how many times they've been shared) after taking the top 25, then eliminating duplicates.\n1. [ML Wave Kaggle Ensembling Guide](https:\/\/mlwave.com\/kaggle-ensembling-guide\/) (120)\n2. [Coursera Machine Learning](https:\/\/www.coursera.org\/learn\/machine-learning) (110)\n3. [All MOOC BLOG](https:\/\/drive.google.com\/file\/d\/1J5NTL7bKW9vkx-S07CqVE2A1Dulc4gTM\/view?usp=sharing) (70)\n4. [Coursera Deep Learning Specialization](https:\/\/www.coursera.org\/specializations\/deep-learning) (68)\n5. [Pretrained models for Pytorch](https:\/\/github.com\/Cadene\/pretrained-models.pytorch) (67)\n6. [Kaggle Etiquette - YouTube](https:\/\/www.youtube.com\/watch?v=aIus8si_Et0) (66)\n7. [Kaggle Lingo - YouTube](https:\/\/www.youtube.com\/watch?v=sEJHyuWKd-s) (62)\n8. [Kaggle\/docker-python](https:\/\/github.com\/Kaggle\/docker-python) (54)\n9. [Kaggle API](https:\/\/github.com\/Kaggle\/kaggle-api) (54)\n10. [How to Make a Prediction - Intro to Deep Learning #1](https:\/\/www.youtube.com\/watch?v=vOppzHpvTiQ&list=PL2-dafEMk2A7YdKv4XfKpfbTH5z6rEEj3) (53)\n11. [How to Enter a Kaggle Competition (using Kernels) - YouTube](https:\/\/www.youtube.com\/watch?&v=GJBOMWpLpTQ) (47)\n12. [Image Segmentation Models](https:\/\/github.com\/qubvel\/segmentation_models.pytorch) (46)\n13. [Statistics and probability - Khan Academy](https:\/\/www.khanacademy.org\/math\/statistics-probability) (46)\n14. [Deep Learning (MIT Press textbook)](https:\/\/www.deeplearningbook.org\/) (45)\n15. [Practical Deep Learning for Coders](http:\/\/course.fast.ai\/) (44)\n16. [PyTorch Image Models](https:\/\/github.com\/rwightman\/pytorch-image-models) (43)\n17. [EfficientNet PyTorch](https:\/\/github.com\/lukemelas\/EfficientNet-PyTorch) (42)\n18. [Springer Ebooks](https:\/\/drive.google.com\/file\/d\/1XRCbtNz2k-H5b_CXO-ZSAxnoD6S2NZTF\/view?usp=drivesdk) (40)\n19. [MEGA Data Science books (R)](https:\/\/mega.nz\/folder\/0iZFXCbA#Rwh3Km42_YaRvgY_NOAvWw) (40)\n20. [MEGA Data Science books](https:\/\/mega.nz\/folder\/g2BRhaDJ#v2XWSegTk3sH6ZcLPNG-WA) (40)\n21. [MEGA Python books](https:\/\/mega.nz\/folder\/NmQRlaBa#0FKTDkkHYBmkSmcEu0kGoQ) (40)\n22. [Chai Time Data Science Show](https:\/\/www.youtube.com\/playlist?list=PLLvvXm0q8zUbiNdoIazGzlENMXvZ9bd3x) (39)\n23. [TOP 10\u00a0Best Online Learning Platforms](https:\/\/drive.google.com\/file\/d\/1J0ct16O9ULpqgrmEVazhiuHGlSy2aQmI\/view?usp=sharing) (38)\n\n### Top External Sites\nThese are the most frequently linked sites by the Kaggle community.\n1. [GitHub](github.com) (13,428)\n2. [YouTube](www.youtube.com) (4,076)\n3. [arXiv.org](arxiv.org) (3,715)\n4. [Towards Data Science](towardsdatascience.com) (1,713)\n5. [Wikipedia](en.wikipedia.org) (1,447)\n6. [Medium](medium.com) (1,294)\n7. [LinkedIn](www.linkedin.com) (1,042)\n8. [scikit-learn](scikit-learn.org) (875)\n9. [Coursera](www.coursera.org) (798)\n10. [Google Drive](drive.google.com) (789)\n11. [Analytics Vidhya](www.analyticsvidhya.com) (655)\n12. [OReilly](www.oreilly.com) (609)\n13. [Stack Overflow](stackoverflow.com) (566)\n14. [Machine Learning Mastery](machinelearningmastery.com) (535)\n15. [Jupyter Notebooks nbviewer](nbviewer.jupyter.org) (420)\n16. [TensorFlow](www.tensorflow.org) (419)\n17. [Twitter](twitter.com) (419)\n18. [edX](www.edx.org) (330)\n19. [Google Cloud](cloud.google.com) (319)\n20. [Cognitive Class](cognitiveclass.ai) (311)\n21. [Data Science Central](www.datasciencecentral.com) (294)\n22. [Udemy](www.udemy.com) (275)\n23. [MEGA](mega.nz) (275)\n\nI've also created a post on the Kaggle General forum to share these results: [Most Useful ML\/Learning Resources](https:\/\/www.kaggle.com\/general\/263231)"}}