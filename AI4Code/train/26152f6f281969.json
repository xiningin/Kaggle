{"cell_type":{"994857f3":"code","76f1c01b":"code","b41a033f":"code","57ffeb6b":"code","45983023":"code","7498cd8b":"code","98542224":"code","c2a9b7c1":"code","a6e60541":"code","8ebba88d":"code","0cd51843":"code","c3bc1267":"markdown","cd5b777d":"markdown","e3a79c46":"markdown","84fa1a47":"markdown","e3ee0f12":"markdown","630a1ae7":"markdown","7dffe849":"markdown","68fc03f3":"markdown","c61c42c3":"markdown","8a3c5c59":"markdown","dba0b3be":"markdown"},"source":{"994857f3":"%%time\n\n!\/opt\/conda\/bin\/python3.7 -m pip install --upgrade pip\n!pip uninstall -q tqdm -y > \/dev\/null\n!pip install -q tqdm==4.48.1 > \/dev\/null\n!pip uninstall -q torch -y > \/dev\/null\n!pip install -q torch==1.6.0+cu101 -f https:\/\/download.pytorch.org\/whl\/torch_stable.html > \/dev\/null\n!pip install -q -U tokenizers==0.7.0 > \/dev\/null\n!pip install -q -U transformers==3.0.2 > \/dev\/null\n!pip install -q -U simpletransformers==0.46.0 > \/dev\/null","76f1c01b":"import numpy as np\nimport pandas as pd\nimport os, json, gc, re, random\nfrom tqdm.notebook import tqdm\n# from tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport logging\nlogging.basicConfig(level=logging.INFO)\ntransformers_logger = logging.getLogger(\"transformers\")\ntransformers_logger.setLevel(logging.WARNING)","b41a033f":"import torch, transformers, tokenizers\ntorch.__version__, transformers.__version__, tokenizers.__version__","57ffeb6b":"data_file = '..\/input\/arxiv\/arxiv-metadata-oai-snapshot.json'\n\n\"\"\" Using `yield` to load the JSON file in a loop to prevent Python memory issues if JSON is loaded directly\"\"\"\n\ndef get_metadata():\n    with open(data_file, 'r') as f:\n        for line in f:\n            yield line","45983023":"metadata = get_metadata()\nfor paper in metadata:\n    for k, v in json.loads(paper).items():\n        print(f'{k}: {v} \\n')\n    break","7498cd8b":"category_map = {'astro-ph': 'Astrophysics',\n                'astro-ph.CO': 'Cosmology and Nongalactic Astrophysics',\n                'astro-ph.EP': 'Earth and Planetary Astrophysics',\n                'astro-ph.GA': 'Astrophysics of Galaxies',\n                'astro-ph.HE': 'High Energy Astrophysical Phenomena',\n                'astro-ph.IM': 'Instrumentation and Methods for Astrophysics',\n                'astro-ph.SR': 'Solar and Stellar Astrophysics',\n                'cond-mat.dis-nn': 'Disordered Systems and Neural Networks',\n                'cond-mat.mes-hall': 'Mesoscale and Nanoscale Physics',\n                'cond-mat.mtrl-sci': 'Materials Science',\n                'cond-mat.other': 'Other Condensed Matter',\n                'cond-mat.quant-gas': 'Quantum Gases',\n                'cond-mat.soft': 'Soft Condensed Matter',\n                'cond-mat.stat-mech': 'Statistical Mechanics',\n                'cond-mat.str-el': 'Strongly Correlated Electrons',\n                'cond-mat.supr-con': 'Superconductivity',\n                'cs.AI': 'Artificial Intelligence',\n                'cs.AR': 'Hardware Architecture',\n                'cs.CC': 'Computational Complexity',\n                'cs.CE': 'Computational Engineering, Finance, and Science',\n                'cs.CG': 'Computational Geometry',\n                'cs.CL': 'Computation and Language',\n                'cs.CR': 'Cryptography and Security',\n                'cs.CV': 'Computer Vision and Pattern Recognition',\n                'cs.CY': 'Computers and Society',\n                'cs.DB': 'Databases',\n                'cs.DC': 'Distributed, Parallel, and Cluster Computing',\n                'cs.DL': 'Digital Libraries',\n                'cs.DM': 'Discrete Mathematics',\n                'cs.DS': 'Data Structures and Algorithms',\n                'cs.ET': 'Emerging Technologies',\n                'cs.FL': 'Formal Languages and Automata Theory',\n                'cs.GL': 'General Literature',\n                'cs.GR': 'Graphics',\n                'cs.GT': 'Computer Science and Game Theory',\n                'cs.HC': 'Human-Computer Interaction',\n                'cs.IR': 'Information Retrieval',\n                'cs.IT': 'Information Theory',\n                'cs.LG': 'Machine Learning',\n                'cs.LO': 'Logic in Computer Science',\n                'cs.MA': 'Multiagent Systems',\n                'cs.MM': 'Multimedia',\n                'cs.MS': 'Mathematical Software',\n                'cs.NA': 'Numerical Analysis',\n                'cs.NE': 'Neural and Evolutionary Computing',\n                'cs.NI': 'Networking and Internet Architecture',\n                'cs.OH': 'Other Computer Science',\n                'cs.OS': 'Operating Systems',\n                'cs.PF': 'Performance',\n                'cs.PL': 'Programming Languages',\n                'cs.RO': 'Robotics',\n                'cs.SC': 'Symbolic Computation',\n                'cs.SD': 'Sound',\n                'cs.SE': 'Software Engineering',\n                'cs.SI': 'Social and Information Networks',\n                'cs.SY': 'Systems and Control',\n                'econ.EM': 'Econometrics',\n                'eess.AS': 'Audio and Speech Processing',\n                'eess.IV': 'Image and Video Processing',\n                'eess.SP': 'Signal Processing',\n                'gr-qc': 'General Relativity and Quantum Cosmology',\n                'hep-ex': 'High Energy Physics - Experiment',\n                'hep-lat': 'High Energy Physics - Lattice',\n                'hep-ph': 'High Energy Physics - Phenomenology',\n                'hep-th': 'High Energy Physics - Theory',\n                'math.AC': 'Commutative Algebra',\n                'math.AG': 'Algebraic Geometry',\n                'math.AP': 'Analysis of PDEs',\n                'math.AT': 'Algebraic Topology',\n                'math.CA': 'Classical Analysis and ODEs',\n                'math.CO': 'Combinatorics',\n                'math.CT': 'Category Theory',\n                'math.CV': 'Complex Variables',\n                'math.DG': 'Differential Geometry',\n                'math.DS': 'Dynamical Systems',\n                'math.FA': 'Functional Analysis',\n                'math.GM': 'General Mathematics',\n                'math.GN': 'General Topology',\n                'math.GR': 'Group Theory',\n                'math.GT': 'Geometric Topology',\n                'math.HO': 'History and Overview',\n                'math.IT': 'Information Theory',\n                'math.KT': 'K-Theory and Homology',\n                'math.LO': 'Logic',\n                'math.MG': 'Metric Geometry',\n                'math.MP': 'Mathematical Physics',\n                'math.NA': 'Numerical Analysis',\n                'math.NT': 'Number Theory',\n                'math.OA': 'Operator Algebras',\n                'math.OC': 'Optimization and Control',\n                'math.PR': 'Probability',\n                'math.QA': 'Quantum Algebra',\n                'math.RA': 'Rings and Algebras',\n                'math.RT': 'Representation Theory',\n                'math.SG': 'Symplectic Geometry',\n                'math.SP': 'Spectral Theory',\n                'math.ST': 'Statistics Theory',\n                'math-ph': 'Mathematical Physics',\n                'nlin.AO': 'Adaptation and Self-Organizing Systems',\n                'nlin.CD': 'Chaotic Dynamics',\n                'nlin.CG': 'Cellular Automata and Lattice Gases',\n                'nlin.PS': 'Pattern Formation and Solitons',\n                'nlin.SI': 'Exactly Solvable and Integrable Systems',\n                'nucl-ex': 'Nuclear Experiment',\n                'nucl-th': 'Nuclear Theory',\n                'physics.acc-ph': 'Accelerator Physics',\n                'physics.ao-ph': 'Atmospheric and Oceanic Physics',\n                'physics.app-ph': 'Applied Physics',\n                'physics.atm-clus': 'Atomic and Molecular Clusters',\n                'physics.atom-ph': 'Atomic Physics',\n                'physics.bio-ph': 'Biological Physics',\n                'physics.chem-ph': 'Chemical Physics',\n                'physics.class-ph': 'Classical Physics',\n                'physics.comp-ph': 'Computational Physics',\n                'physics.data-an': 'Data Analysis, Statistics and Probability',\n                'physics.ed-ph': 'Physics Education',\n                'physics.flu-dyn': 'Fluid Dynamics',\n                'physics.gen-ph': 'General Physics',\n                'physics.geo-ph': 'Geophysics',\n                'physics.hist-ph': 'History and Philosophy of Physics',\n                'physics.ins-det': 'Instrumentation and Detectors',\n                'physics.med-ph': 'Medical Physics',\n                'physics.optics': 'Optics',\n                'physics.plasm-ph': 'Plasma Physics',\n                'physics.pop-ph': 'Popular Physics',\n                'physics.soc-ph': 'Physics and Society',\n                'physics.space-ph': 'Space Physics',\n                'q-bio.BM': 'Biomolecules',\n                'q-bio.CB': 'Cell Behavior',\n                'q-bio.GN': 'Genomics',\n                'q-bio.MN': 'Molecular Networks',\n                'q-bio.NC': 'Neurons and Cognition',\n                'q-bio.OT': 'Other Quantitative Biology',\n                'q-bio.PE': 'Populations and Evolution',\n                'q-bio.QM': 'Quantitative Methods',\n                'q-bio.SC': 'Subcellular Processes',\n                'q-bio.TO': 'Tissues and Organs',\n                'q-fin.CP': 'Computational Finance',\n                'q-fin.EC': 'Economics',\n                'q-fin.GN': 'General Finance',\n                'q-fin.MF': 'Mathematical Finance',\n                'q-fin.PM': 'Portfolio Management',\n                'q-fin.PR': 'Pricing of Securities',\n                'q-fin.RM': 'Risk Management',\n                'q-fin.ST': 'Statistical Finance',\n                'q-fin.TR': 'Trading and Market Microstructure',\n                'quant-ph': 'Quantum Physics',\n                'stat.AP': 'Applications',\n                'stat.CO': 'Computation',\n                'stat.ME': 'Methodology',\n                'stat.ML': 'Machine Learning',\n                'stat.OT': 'Other Statistics',\n                'stat.TH': 'Statistics Theory'}","98542224":"titles = []\nabstracts = []\n\n# Consider all categories in the `category_map` to be used during training and prediction\npaper_categories = np.array(list(category_map.keys())).flatten()\n\n# # Consider specific paper categories to be used during training and prediction\n# paper_categories = [\"cs.AI\", # Artificial Intelligence\n#                     \"cs.CV\", # Computer Vision and Pattern Recognition\n#                     \"cs.LG\"] # Machine Learning\n\nmetadata = get_metadata()\nfor paper in tqdm(metadata):\n    paper_dict = json.loads(paper)\n    category = paper_dict.get('categories')\n    try:\n        year = int(paper_dict.get('journal-ref')[-4:])\n        if category in paper_categories and 2010<year<2021:\n            titles.append(paper_dict.get('title'))\n            abstracts.append(paper_dict.get('abstract').replace(\"\\n\",\"\"))\n    except:\n        pass \n\nlen(titles), len(abstracts)","c2a9b7c1":"papers = pd.DataFrame({\n    'title': titles,\n    'abstract': abstracts,\n})\n\npapers = papers[['abstract', 'title']]\npapers.columns = ['input_text', 'target_text']\npapers = papers.dropna()\n\ndel titles, abstracts\npapers","a6e60541":"%%time\n\nfrom simpletransformers.seq2seq import Seq2SeqModel\n\neval_df = papers.sample(frac=0.1, random_state=42)\ntrain_df = papers.drop(eval_df.index)\n\nmodel_args = {\n    \"reprocess_input_data\": True,\n    \"overwrite_output_dir\": True,\n    \"save_model_every_epoch\": False,\n    \"save_eval_checkpoints\": False,\n    \"max_seq_length\": 512,\n    \"train_batch_size\": 6,\n    \"num_train_epochs\": 3,\n}\n\n# Create a Bart-base model\nmodel = Seq2SeqModel(encoder_decoder_type=\"bart\",\n                    encoder_decoder_name=\"facebook\/bart-base\",\n                    args=model_args)","8ebba88d":"%%time\n\n# Train the model\nmodel.train_model(train_df)\n\n# Evaluate the model\nresult = model.eval_model(eval_df)\nprint(result)","0cd51843":"for _ in range(250):\n\n    random_idx = random.randint(0, len(eval_df)-1)\n\n    abstract = eval_df.iloc[random_idx]['input_text']\n    true_title = eval_df.iloc[random_idx]['target_text']\n\n    # Predict with trained BART model\n    predicted_title = model.predict([abstract])[0]\n\n    print(f'True Title: {true_title}\\n')\n    print(f'Predicted Title: {predicted_title}\\n')\n    print(f'Abstract: {abstract}\\n\\n\\n')","c3bc1267":"### #1.4 Prediction \ud83d\udd2e","cd5b777d":"#### For this task, let's choose all paper categories published in the last decade","e3a79c46":"### Acknowledgements\n\n#### This notebook borrows code from:\n* [simpletransformers documentation](https:\/\/github.com\/ThilinaRajapakse\/simpletransformers)\n* Andrew Lukyanenko's [Arxiv metadata exploration](https:\/\/www.kaggle.com\/artgor\/arxiv-metadata-exploration) kernel","84fa1a47":"### #1.3 Model Training & Evaluation \ud83d\ude9e","e3ee0f12":"### #1.2 Data Pre-processing \u2699\ufe0f","630a1ae7":"# #1. Abstract Summarization\n###    Title Prediction from Abstract using **BART**","7dffe849":"### Libraries \ud83d\udcda\u2b07","68fc03f3":"### Read JSON Data \ud83d\udcdd","c61c42c3":"## Introduction\n\n#### In this notebook, we use [BART](https:\/\/arxiv.org\/abs\/1910.13461) Transformer model to perform title generation from abstracts. BART is a sequence-to-sequence model where both the input and targets are text sequences. BART is commonly used for text summarization. In our case, we would want to summarize titles from abstracts.","8a3c5c59":"![](https:\/\/storage.googleapis.com\/kaggle-public-downloads\/arXiv.JPG)\n<h1><center>ArXiv Title Prediction from Abstract<\/center><\/h1>","dba0b3be":"#### Let's print a sample paper metadata"}}