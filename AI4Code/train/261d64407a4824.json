{"cell_type":{"bac4ed2f":"code","a97f351e":"code","8022b1e1":"code","9a41afd1":"code","50f3fe74":"code","fa10afa0":"code","2a2cb28b":"code","35b97467":"code","146bd19f":"code","9ab4ab86":"code","7b07423f":"markdown","18791098":"markdown","6f3aa57d":"markdown","2e5ccbd0":"markdown","94c00230":"markdown","31bf1518":"markdown","55cee35f":"markdown","f2d26b75":"markdown"},"source":{"bac4ed2f":"import numpy as np\nimport matplotlib.pyplot as plt","a97f351e":"class ChessBoard:\n    def __init__(self):\n        self.grid = np.ones((16,16,4))\n        self.red = []\n        self.blue = []\n        \n        self.grid[2::4, ::4] = (0, 0, 0, 1)\n        self.grid[2::4, 1::4] = (0, 0, 0, 1)\n        self.grid[3::4, ::4] = (0, 0, 0, 1)\n        self.grid[3::4, 1::4] = (0, 0, 0, 1)\n        \n        self.grid[::4, 2::4] = (0, 0, 0, 1)\n        self.grid[::4, 3::4] = (0, 0, 0, 1)\n        self.grid[1::4, 2::4] = (0, 0, 0, 1)\n        self.grid[1::4, 3::4] = (0, 0, 0, 1)\n    \n    def render(self):\n        plt.imshow(self.grid)\n        \n    def add_red(self, row, col):\n        row *= 2\n        col *= 2\n        self.grid[row, col] = (1,0.2,0, 0.2)\n        self.grid[row, col+1] = (1,0.2,0, 0.4)\n        self.grid[row+1, col+1] = (1,0.2,0, 0.6)\n        self.grid[row+1, col] = (1,0.2,0, 0.8)\n        self.red = [row, col]\n        \n    def add_blue(self, row, col):\n        row *= 2\n        col *= 2\n        self.grid[row, col] = (0,1,1, 0.2)\n        self.grid[row, col+1] = (0,1,1, 0.4)\n        self.grid[row+1, col+1] = (0,1,1, 0.6)\n        self.grid[row+1, col] = (0,1,1, 0.8)\n        self.blue.append([row, col])\n        \n    def is_under_attack(self):\n        for i in range(len(self.blue)):\n            if self.red[0] == self.blue[i][0]:\n                return True\n            elif self.red[1] == self.blue[i][1]:\n                return True\n            elif abs(self.red[0] - self.blue[i][0]) == abs(self.red[1] - self.blue[i][1]):\n                return True\n        return False","8022b1e1":"board = ChessBoard()\nboard.add_red(6,2)\nboard.add_blue(6,6)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","9a41afd1":"board = ChessBoard()\nboard.add_red(6,4)\nboard.add_blue(2,4)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","50f3fe74":"board = ChessBoard()\nboard.add_red(5,3)\nboard.add_blue(2,6)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","fa10afa0":"board = ChessBoard()\nboard.add_red(5,3)\nboard.add_blue(3,1)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","2a2cb28b":"board = ChessBoard()\nboard.add_red(5,3)\nboard.add_blue(6,2)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","35b97467":"board = ChessBoard()\nboard.add_red(5,3)\nboard.add_blue(7,5)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","146bd19f":"board = ChessBoard()\nboard.add_red(5,2)\nboard.add_blue(3,3)\nboard.render()\nassert board.is_under_attack() == False\nprint(board.is_under_attack())","9ab4ab86":"board = ChessBoard()\nboard.add_red(5,2)\nboard.add_blue(3,3)\nboard.add_blue(7,4)\nboard.render()\nassert board.is_under_attack() == True\nprint(board.is_under_attack())","7b07423f":"Diagonal: Lower Left","18791098":"Horizontal Attack","6f3aa57d":"Multiple Attackers","2e5ccbd0":"No Attack","94c00230":"Diagonal: Lower Right","31bf1518":"Diagonal: Upper Left","55cee35f":"Diagonal: Upper Right","f2d26b75":"Vertical Attack"}}