{"cell_type":{"29386fbb":"code","94208cab":"code","a6b02099":"code","cb53365b":"code","95d3355b":"code","2a108a75":"code","2d3a4c01":"code","c48cdd77":"code","69a1e6e3":"code","d0951201":"code","e1f56851":"code","2a161a41":"code","ee8b0d9d":"markdown","b43403b4":"markdown","26d335e4":"markdown","bf2a50d4":"markdown","f7b111d3":"markdown"},"source":{"29386fbb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib_venn as venn\nfrom math import pi\nfrom pandas.tools.plotting import parallel_coordinates\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")","94208cab":"df = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")","a6b02099":"df.info()","cb53365b":"dic = {\"c1\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"c2\":[1,2,3,np.nan,5,6,7,8,np.nan,10,11,12,13,np.nan,15],\"c3\":[1,2,3,4,5,np.nan,7,8,9,np.nan,11,12,13,14,np.nan]}\ndata = pd.DataFrame(dic)\n\nimport missingno as msno\nmsno.matrix(df)\nplt.show()","95d3355b":"msno.bar(df)\nplt.show()","2a108a75":"df2 = pd.read_csv(\"..\/input\/world-happiness\/2016.csv\")","2d3a4c01":"df2.head()","c48cdd77":"remove_list = [\"Country\",\"Happiness Rank\",\"Upper Confidence Interval\",\"Family\",\"Health (Life Expectancy)\",\"Freedom\",\"Trust (Government Corruption)\",\"Generosity\"]\ndf2.drop(remove_list,axis=1, inplace = True)\n\nquery = df2[(df2.Region == \"Sub-Saharan Africa\") | (df2.Region == \"Central and Eastern Europe\") | (df2.Region == \"Latin America and Caribbean\")]\nregions = query.Region\nhappiness = query[\"Happiness Score\"]\nlower_confidence = query[\"Lower Confidence Interval\"]\neconomy = query[\"Economy (GDP per Capita)\"]\ndystopia = query[\"Dystopia Residual\"]\n\ndata = pd.DataFrame({\"Region\":regions,\"Happiness Score\":happiness,\"Lower Confidence Interval\":lower_confidence,\"Economy (GDP per Capita)\":economy,\"Dystopia Residual\":dystopia})\n\n# Visualization\nplt.figure(figsize=(15,10))\nparallel_coordinates(data, 'Region', colormap=plt.get_cmap(\"Set1\"))\nplt.title(\"Visualize according to features\")\nplt.show()","69a1e6e3":"df2.head()","d0951201":"from matplotlib_venn import venn2\nhappiness = df2.iloc[:,1]\nlower_confidence = df2.iloc[:,2]\nvenn2(subsets = (len(happiness)-15, len(lower_confidence)-15, 15),set_labels = (\"Happiness Score\",\"Lower Confidence Interval\"))\nplt.show()","e1f56851":"df2.columns","2a161a41":"feature_names = \"Happiness Score\",\"Lower Confidence Interval\",\"Economy (GDP per Capita)\",\"Dystopia Residual\"\nhappiness = len(df2[\"Happiness Score\"])\nconfidence = len(df2[\"Lower Confidence Interval\"])\neconomy = len(df2[\"Economy (GDP per Capita)\"])\ndystopia = len(df2[\"Dystopia Residual\"])\nfeature_size = [happiness,confidence,economy,dystopia]\ncolors = [\"red\",\"green\",\"blue\",\"lightblue\"]\n\ncircle = plt.Circle((0,0),0.4,color = \"white\")\nplt.pie(feature_size, labels = feature_names, colors = colors)\np = plt.gcf()\np.gca().add_artist(circle)\nplt.show()","ee8b0d9d":"<font color='red'>\n# Venn (Matplotlib)","b43403b4":"<font color='red'>\n# Rare Visualization Examples\n<font color='blue'>\n- Ignore the comparison of ridiculous data.\n- My only purpose here is practice and come here to look at the syntax quickly when something is forgotten about seaborn.\n- Good work","26d335e4":"<font color='red'>\n# Parallel Plots (Pandas)","bf2a50d4":"<font color='red'>\n# Matrix and Bar Plots (Missingno)\n","f7b111d3":"<font color='red'>\n# Donut (Matplotlib)"}}