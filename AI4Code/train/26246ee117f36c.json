{"cell_type":{"26c27d1a":"code","de65228d":"code","4247d029":"code","fb97f196":"code","d5330340":"code","0f4ad165":"code","e9932d3d":"code","4b4eb009":"code","82dde5d3":"code","0306d152":"code","eed17804":"code","cdb00563":"code","6f78caf8":"code","3a59ccca":"markdown","57edbfd6":"markdown","5a60bd9c":"markdown","fa6a3ce2":"markdown","c2ddf324":"markdown","0e5b937b":"markdown","502456f3":"markdown","cc2ba499":"markdown"},"source":{"26c27d1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de65228d":"fashion=keras.datasets.fashion_mnist","4247d029":"(train_images,train_labels),(test_images,test_labels)=fashion.load_data()","fb97f196":"train_images=train_images\/255.0\ntest_images=test_images\/255.0","d5330340":"train_images[0].shape","0f4ad165":"train_images=train_images.reshape(len(train_images),28,28,1)\ntest_images=test_images.reshape(len(test_images),28,28,1)","e9932d3d":"def build_model(hp):  \n    model = keras.Sequential([\n    keras.layers.Conv2D(\n        filters=hp.Int('conv_1_filter', min_value=32, max_value=128, step=16),\n        kernel_size=hp.Choice('conv_1_kernel', values = [3,5]),\n        activation='relu',\n        input_shape=(28,28,1)\n    ),\n    keras.layers.Conv2D(\n        filters=hp.Int('conv_2_filter', min_value=32, max_value=64, step=16),\n        kernel_size=hp.Choice('conv_2_kernel', values = [3,5]),\n        activation='relu'\n    ),\n    keras.layers.Flatten(),\n    keras.layers.Dense(\n        units=hp.Int('dense_1_units', min_value=32, max_value=128, step=16),\n        activation='relu'\n    ),\n    keras.layers.Dense(10, activation='softmax')\n    ])\n  \n    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2, 1e-3])),\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n  \n    return model","4b4eb009":"from kerastuner import RandomSearch\nfrom kerastuner.engine.hyperparameters import HyperParameters","82dde5d3":"tuner_search=RandomSearch(build_model,\n                         objective=\"val_accuracy\",\n                         max_trials=5,\n                         directory=\"output\",\n                         project_name=\"Fashion\")","0306d152":"tuner_search.search(train_images,train_labels,epochs=3,validation_split=0.3)","eed17804":"model=tuner_search.get_best_models(num_models=1)[0]","cdb00563":"model.summary()","6f78caf8":"model.fit(train_images, train_labels, epochs=10, validation_split=0.1, initial_epoch=3)","3a59ccca":"**HYPERPARAMETER TUNING FOR ADDING THE LAYERS WITH BEST PARAMETERS**","57edbfd6":"**SETTING THE VALUES**","5a60bd9c":"**IMPORTING THE DATASET**","fa6a3ce2":"**RUNNING THE MODEL ON THE ABOVE GIVEN PARAMAETRS**","c2ddf324":"**TO KNOW THE BEST MODEL PARAMETERS**","0e5b937b":"**SPLITTING DATASET INTO TRAINING AND TESTING SET**","502456f3":"**NORMALIZING THE PIXELS**\n\nSince the pixels of picture are in range 0 to 255. So, we divide them by 255 to get the values in the range of 0 to 1.","cc2ba499":"**TRAINING THE MODEL ON TRAINING DATASET**"}}