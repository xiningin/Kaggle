{"cell_type":{"5e19b910":"code","0a1ed87e":"code","d18f3826":"code","730aa829":"code","2fc43d49":"code","c8d81ec6":"code","ee322241":"code","323d80d1":"code","2ff01a03":"code","f00e7efc":"code","2fd499a7":"code","250ca1f9":"code","204cb6b9":"code","a01f9cc5":"code","ccc0ba52":"code","d7b721a8":"code","440eedc8":"code","a5737673":"code","bd0d283f":"code","727d0290":"markdown"},"source":{"5e19b910":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0a1ed87e":"df=pd.read_csv('..\/input\/gender-classification\/Transformed Data Set - Sheet1.csv')","d18f3826":"df.isnull().sum()","730aa829":"df.info()","2fc43d49":"import seaborn as sns\nimport matplotlib.pyplot as plt\n","c8d81ec6":"fig, axes = plt.subplots(nrows=5, ncols=1, figsize=(10,18))\nfor i in range(len(df.columns)):\n    sns.countplot(data=df, x=df.iloc[:,i],ax=axes[i])","ee322241":"plt.figure(figsize=(50,60))\nsns.factorplot(x='Gender',kind='count',data=df)\nplt.show()","323d80d1":"len(df)","2ff01a03":"X=df.drop('Gender',axis=1)\ny=df['Gender']","f00e7efc":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","2fd499a7":"cols=list(X.columns)","250ca1f9":"cols","204cb6b9":"Encode categorical values","a01f9cc5":"from sklearn.preprocessing import OneHotEncoder\nonehot= OneHotEncoder()\nfrom sklearn.compose import ColumnTransformer\nclt = ColumnTransformer([('binarize',onehot,cols)], remainder='passthrough')","ccc0ba52":"X_train=clt.fit_transform(X_train)","d7b721a8":"X_test=clt.transform(X_test)","440eedc8":"from sklearn.svm import SVC\nsvc =SVC()\nsvc.fit(X_train,y_train)\npred_svc = svc.predict(X_test)\naccuracy_score(y_test,pred_svc)","a5737673":"print(classification_report(y_test,pred_svc))","bd0d283f":"\nsns.heatmap(confusion_matrix(y_test,pred_svc), annot=True)","727d0290":"# Support Vector Machine - Classification"}}