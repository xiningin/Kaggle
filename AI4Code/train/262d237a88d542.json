{"cell_type":{"8a49b86a":"code","7e70b6ca":"code","211977ac":"code","d6fd4433":"code","86055fbd":"code","66691732":"code","eaba624c":"code","1a218b14":"code","5f222926":"code","4e6abf21":"code","349ab40b":"code","04f2e416":"code","11584f77":"code","2d7617c4":"code","257c4d03":"code","94950121":"code","72896bfc":"code","1505cdb9":"code","ecd4d6b0":"code","67108e9f":"code","6ffe5b89":"code","eccd87d5":"code","73d6d03a":"code","6d615f32":"code","05ca8635":"code","5ce5987f":"code","9251d607":"code","09ee4969":"code","dc5998b9":"code","8205e2c8":"code","f363ca16":"code","af909ed9":"code","f88cf23a":"code","1ccebfd9":"code","767167be":"code","2d5d7b8e":"code","d90edff1":"code","416cfdf0":"code","0fd1f8e9":"code","d23044a5":"code","d1135619":"code","debffbe0":"code","935298ee":"code","bcabaf08":"code","82ca748f":"code","e1f2f3e8":"code","88b3da48":"code","6b5d605f":"code","2b536260":"code","34fc3608":"code","7c31999c":"code","45bd924f":"code","d1eb7c4e":"code","c077aac2":"code","2294631f":"code","8cddff34":"markdown"},"source":{"8a49b86a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e70b6ca":"import pandas as pd\nimport numpy as np","211977ac":"train_dataset=pd.read_csv(r'..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_dataset=pd.read_csv(r'..\/input\/house-prices-advanced-regression-techniques\/test.csv')","d6fd4433":"train_dataset.head()","86055fbd":"train_dataset.columns","66691732":"train_dataset=train_dataset.drop(['Id'],axis=1)","eaba624c":"test_dataset=test_dataset.drop(['Id'],axis=1)","1a218b14":"#find the missing value in the dataset and list_c store that value which have more the one missing value \nlist_train=[]\nx=0\nfor i in train_dataset.isnull().sum():\n    if i >=1:\n        list_train.append(train_dataset.columns[x])\n        print(train_dataset.columns[x],\"=\",i,end=',  ')\n    else:\n        pass\n    x=x+1","5f222926":"train_dataset=train_dataset.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1)","4e6abf21":"cat_ix = train_dataset.select_dtypes(include=['object']).columns","349ab40b":"cat_ix = train_dataset.select_dtypes(include=['object']).columns","04f2e416":"value=[]\nfor i in cat_ix:\n    if i in list_train:\n        value.append(i)\n    else:\n        pass\nprint(value)","11584f77":"for i in value:\n    train_dataset[i]=train_dataset[i].fillna(train_dataset[i].mode()[0])","2d7617c4":"list_train=[]\nx=0\nfor i in train_dataset.isnull().sum():\n    if i >= 1:\n        list_train.append(train_dataset.columns[x])\n        print(train_dataset.columns[x],\"=\",i,end=',  ')\n    else:\n        pass\n    x=x+1","257c4d03":"train_dataset['LotFrontage']=train_dataset['LotFrontage'].fillna(train_dataset['LotFrontage'].mean())\ntrain_dataset['MasVnrArea']=train_dataset['MasVnrArea'].fillna(train_dataset['MasVnrArea'].mean())\ntrain_dataset['GarageYrBlt']=train_dataset['GarageYrBlt'].fillna(train_dataset['GarageYrBlt'].mean())\n","94950121":"train_dataset.isnull().sum().sum()","72896bfc":"list_test=[]\nx=0\nfor i in test_dataset.isnull().sum():\n    if i >= 1:\n        list_test.append(test_dataset.columns[x])\n        print(test_dataset.columns[x],\"=\",i,end=',  ')\n    else:\n        pass\n    x=x+1","1505cdb9":"test_dataset=test_dataset.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1)","ecd4d6b0":"cat_ix = test_dataset.select_dtypes(include=['object']).columns","67108e9f":"value=[]\nfor i in cat_ix:\n    if i in list_test:\n        value.append(i)\n    else:\n        pass\nprint(value)","6ffe5b89":"for i in value:\n    test_dataset[i]=test_dataset[i].fillna(test_dataset[i].mode()[0])","eccd87d5":"list_test=[]\nx=0\nfor i in test_dataset.isnull().sum():\n    if i >= 1:\n        list_test.append(test_dataset.columns[x])\n        print(test_dataset.columns[x],\"=\",i,end=',  ')\n    else:\n        pass\n    x=x+1","73d6d03a":"test_dataset['LotFrontage']=test_dataset['LotFrontage'].fillna(test_dataset['LotFrontage'].mean())\ntest_dataset['BsmtFullBath']=test_dataset['BsmtFullBath'].fillna(test_dataset['BsmtFullBath'].mean())\ntest_dataset['BsmtHalfBath']=test_dataset['BsmtHalfBath'].fillna(test_dataset['BsmtHalfBath'].mean())\ntest_dataset['MasVnrArea']=test_dataset['MasVnrArea'].fillna(test_dataset['MasVnrArea'].mean())\ntest_dataset['GarageYrBlt']=test_dataset['GarageYrBlt'].fillna(test_dataset['GarageYrBlt'].mean())\ntest_dataset['BsmtFinSF2']=test_dataset['BsmtFinSF2'].fillna(test_dataset['BsmtFinSF2'].mean())\ntest_dataset['BsmtFinSF1']=test_dataset['BsmtFinSF1'].fillna(test_dataset['BsmtFinSF1'].mean())\ntest_dataset['BsmtUnfSF']=test_dataset['BsmtUnfSF'].fillna(test_dataset['BsmtUnfSF'].mean())\ntest_dataset['TotalBsmtSF']=test_dataset['TotalBsmtSF'].fillna(test_dataset['TotalBsmtSF'].mean())\ntest_dataset['GarageCars']=test_dataset['GarageCars'].fillna(test_dataset['GarageCars'].mean())\ntest_dataset['GarageArea']=test_dataset['GarageArea'].fillna(test_dataset['GarageArea'].mean())","6d615f32":"test_dataset.isnull().sum().sum()","05ca8635":"x_train_dataset=train_dataset.iloc[:,:-1]","5ce5987f":"x_train_dataset.shape,test_dataset.shape","9251d607":"x_train_dataset.head()","09ee4969":"y_train_dataset=train_dataset[['SalePrice']]","dc5998b9":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.compose import ColumnTransformer","8205e2c8":"cat_ix = x_train_dataset.select_dtypes(include=['object']).columns","f363ca16":"ct = ColumnTransformer([('o',OneHotEncoder(sparse=False),cat_ix)], remainder='passthrough')\nx = ct.fit_transform(x_train_dataset)","af909ed9":"x=pd.DataFrame(x)","f88cf23a":"from sklearn.linear_model import LinearRegression","1ccebfd9":"lin_reg=LinearRegression()","767167be":"lin_reg.fit(x,y_train_dataset)","2d5d7b8e":"y_preidt=lin_reg.predict(x)","d90edff1":"from sklearn.metrics import r2_score","416cfdf0":"r2_score(y_train_dataset, y_preidt)","0fd1f8e9":"cat_test = test_dataset.select_dtypes(include=['object']).columns","d23044a5":"y_test_dataset=pd.read_csv(r\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")","d1135619":"y1_test_dataset=y_test_dataset.drop(['Id'],axis=1)","debffbe0":"ct = ColumnTransformer([('o',OneHotEncoder(sparse=False),cat_test)], remainder='passthrough')\nxt = ct.fit_transform(test_dataset)","935298ee":"xt=pd.DataFrame(xt)","bcabaf08":"lin_reg.fit(xt,y1_test_dataset)","82ca748f":"pridict_price=lin_reg.predict(xt)","e1f2f3e8":"pridict_price","88b3da48":"r2_score(y1_test_dataset, pridict_price)","6b5d605f":"sub_data=y_test_dataset[['Id']]","2b536260":"sub_data","34fc3608":"prediction=pd.DataFrame(pridict_price,columns=['SalePrice'])","7c31999c":"prediction","45bd924f":"z=pd.concat([sub_data,prediction],axis=1)","d1eb7c4e":"z","c077aac2":"z.isnull().sum().sum()","2294631f":"z.to_csv(\"submission.csv\",index=False)","8cddff34":"handling test_dataset"}}