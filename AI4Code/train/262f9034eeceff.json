{"cell_type":{"42f8cd85":"code","5036c561":"code","dcf989e6":"code","17c4aa41":"code","d0887214":"code","82b3aa64":"code","77c259e6":"code","70adec16":"code","a5c4a810":"code","bca2b5d6":"code","ddd68db9":"code","5bd144e7":"code","bbdab9d3":"code","7592dddf":"code","c9526d71":"markdown","67edf002":"markdown","f051a09b":"markdown","1a01c18a":"markdown","f544d745":"markdown","4d5f3c7c":"markdown","c89633e3":"markdown","f4a8032a":"markdown","9c28b1ae":"markdown","7c939f93":"markdown","2d98073c":"markdown","2a72191b":"markdown","b4908854":"markdown","8e9f93ba":"markdown","be2f286c":"markdown","0e54b6ea":"markdown","939b7a97":"markdown"},"source":{"42f8cd85":"# Load in our libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom matplotlib.pyplot import pie, axis, show\nplt.style.use('fivethirtyeight')\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\n\nimport warnings\nwarnings.filterwarnings('ignore')","5036c561":"# Load in the train datasets\ntrain = pd.read_csv('..\/input\/train.csv')\n\ntrain.head(10)","dcf989e6":"# Group the population by class and calculate the mean and the count of the survival\ntrain.groupby(by=['Pclass'])['Survived'].agg(['mean','count'])","17c4aa41":"# Crate 2 subplots using matplotlib\nf,ax=plt.subplots(1,2,figsize=(18,8))\n# Group sex and survived by sex and count the mean\ntrain[['Sex','Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0])\n# Set chart 1 title\nax[0].set_title('Survived vs Sex')\n# Use Seaborn to plot the count of sex and survived\nsns.countplot('Sex',hue='Survived',data=train,ax=ax[1])\nax[1].set_title('Sex:Survived vs Dead')\nplt.show()","d0887214":"# Crate 2 subplots using matplotlib\nf,ax=plt.subplots(1,2,figsize=(18,8))\n# Group classes and survived by classes and count the mean\ntrain[['Pclass','Survived']].groupby(['Pclass']).mean().plot.bar(ax=ax[0])\n# Set chart 1 title\nax[0].set_title('Pclass vs Survived')\n# Use Seaborn to plot the count of classes and survived\nsns.countplot('Pclass',hue='Survived',data=train,ax=ax[1])\nax[1].set_title('Pclass:Survived vs Dead')\nplt.show()","82b3aa64":"# Crate Category plot from seaborn on classes, survival and Sex\nsns.catplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\",\n            palette={\"male\": \"g\", \"female\": \"r\"},\n            markers=[\"^\", \"o\"], linestyles=[\"-\", \"--\"],\n            kind=\"point\", data=train);","77c259e6":"# Create Box plot using Seaborn\nsns.catplot(x=\"Sex\", y=\"Age\", hue=\"Survived\", kind=\"box\", data=train);","70adec16":"# sum survived grouped by sex\nsums = train.Survived.groupby(train.Sex).sum()\naxis('equal');\n# draw the pie with sums indexes\npie(sums, labels=sums.index);\nshow()","a5c4a810":"# Imputation\n# Remove all NULLS in the Embarked column\ntrain['Embarked'] = train['Embarked'].fillna('S')\n\n# Remove all NULLS in the Fare column \ntrain['Fare'] = train['Fare'].fillna(train['Fare'].median())\n\ntrain.head(5)","bca2b5d6":"# Mapping Embarked One Hot Encoding\ntrain=pd.get_dummies(train, columns=[\"Embarked\"])\n\ntrain.head(5)","ddd68db9":"# Mapping Sex to a binnary feature\ntrain['Sex'] = train['Sex'].map( {'female': 0, 'male': 1} ).astype(int)\n\ntrain.head(5)","5bd144e7":"# Adding features\n\n# Feature that tells whether a passenger had a cabin on the Titanic\ntrain['Has_Cabin'] = train[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)\n\n# Feature that tells the family size of each passenger\ntrain['FamilySize'] = train['SibSp'] + train['Parch'] + 1\n\n# Feature that tells if a passenger is alone\ntrain['IsAlone'] = 0\ntrain.loc[train['FamilySize'] == 1, 'IsAlone'] = 1\n    \ntrain.head(10)","bbdab9d3":"# Feature selection\n# Drop some of unuseful coloumns\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Embarked_C','Embarked_Q','Embarked_S']\ntrain = train.drop(drop_elements, axis = 1)\ntrain.head(10)\n\n# Create the heat map of features correlation\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14,12))\nplt.title('Correlation of Features', y=1.05, size=15)\nsns.heatmap(train.astype(float).corr(),linewidths=0.1,vmax=1.0, \n            square=True, cmap=colormap, linecolor='white', annot=True)","7592dddf":"g = sns.pairplot(train[[u'Survived', u'Pclass', u'Sex', u'Age', u'Parch', u'Fare',u'Has_Cabin',u'FamilySize',u'IsAlone']], hue='Survived',kind='scatter', palette = 'seismic',size=1.2,diag_kind = 'kde',diag_kws=dict(shade=True),plot_kws=dict(s=10) )\ng.set(xticklabels=[])","c9526d71":"**Pie char survived by sex**","67edf002":"# Refrences\n\nThis notebook has been produced using some external kernles and ressources listed below: \n\n[Kernel 1][1] \n\n[Kernel 2][2]\n\n[Kernel 3][3] \n\n[Seaborn Categoratical][4] \n\n\n\n[1]: https:\/\/www.kaggle.com\/arthurtok\/introduction-to-ensembling-stacking-in-python\n[2]: https:\/\/www.kaggle.com\/ash316\/eda-to-prediction-dietanic#Part3:-Predictive-Modeling\n[3]: https:\/\/www.kaggle.com\/kernels\/svzip\/14807479\n[4]: https:\/\/seaborn.pydata.org\/tutorial\/categorical.html","f051a09b":"**Survived population by class**","1a01c18a":"# Load data\n\nWe load the training data into train dataset.","f544d745":"# Features Correlation\n\nIn this section, we will plot the heat map of the correlation for some of the variables.","4d5f3c7c":"# Features Scattered by pair\n\nIn this section, we will plot the feature scattered by pair.","c89633e3":"**Survived population by sex**","f4a8032a":"# General Information Gathering - Google Facets\n\nFor this part, to understand a little bit about the data, such as general information and how many data are missing we used [Google Facets][1] a very powerful tool to Understed the data which is critical to build a powerful machine learning system.\n\n\n**Numerical Features**\n![Numerical Feature](https:\/\/i.ibb.co\/Bf73cCj\/Numerical-Feature.png)\nWe Observe that 60% of the population have not survived. We noticed that 20% of the ages are missing and most of the passengers are between 10 and 40 years old. \n\n**Categorical Features**\n![Categorical Feature](https:\/\/i.ibb.co\/bmc2kDJ\/Categorical-Feature.png)\nWe Observe that 1% of the embarekd are missing and more than 3\/4 of the Cabin are missing as well. We noticed that more than 60% of the population are males and embarked at S (Southampton).\n\n**Grouping plotting**\n\nIn This section we tried to plot the data according to different features. Note that Red represent survived population.\n\n* Sex per Age per Survived\n\n![Sex per Age per survived](https:\/\/i.ibb.co\/Ws5y0Tt\/sex.png)\n\nWe Observe that most of the survived population are the young woman.\n\n* Class per Sex per Survived\n\n![Class per Sex per survived](https:\/\/i.ibb.co\/QvYDLv7\/class.png)\n\nWe Observe that most of the survived population are the woman in class 1.\n\n* Class per Age per Survived\n\n![Class per Age per survived](https:\/\/i.ibb.co\/hVk3mZz\/sex-class.png)\n\nWe Observe that most of the survived population are the young population in class 1.\n\n\n[1]: https:\/\/pair-code.github.io\/facets\/","9c28b1ae":"**Mapping Features**","7c939f93":"# Visualization\n\nIn this section we plot the data into different visualization trying to understand better the useful informations.\n\n**Survived population by classes**\n","2d98073c":"# Introduction\n\nThis notebook is a very basic and simple. The main goal is to apply the first step of Machine Learning processing i.e. Understanding the data by applying the [EDA][1] (Exploratory Data Analysis). \n\nIn this notebook we apply the EDA to the [Titanic dataset][2] containing informations about passengers that have survived or not and data about these passengers.\n\n![Titanic Passengers](https:\/\/images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com\/f\/2bc37b51-c9e4-402e-938e-70d3145815f2\/d787jna-1b3767d2-f297-4b73-a874-7cfa6d1e8a69.png\/v1\/fill\/w_1600,h_460,q_80,strp\/r_m_s__titanic_class_system_by_monroegerman_d787jna-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9NDYwIiwicGF0aCI6IlwvZlwvMmJjMzdiNTEtYzllNC00MDJlLTkzOGUtNzBkMzE0NTgxNWYyXC9kNzg3am5hLTFiMzc2N2QyLWYyOTctNGI3My1hODc0LTdjZmE2ZDFlOGE2OS5wbmciLCJ3aWR0aCI6Ijw9MTYwMCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19.6krQcPQvsfcQ_ZJ_CGvufi9MT-PJkkg1I8-grLy7Hiw&fbclid=IwAR0NyWmey2Kku6Vi5fVit827Gw25RfMRWM8IDdJJOzKOR1a28g0Xxhww0Fo)\n\n\n[1]: https:\/\/en.wikipedia.org\/wiki\/Exploratory_data_analysis\n[2]: https:\/\/www.kaggle.com\/c\/titanic","2a72191b":"**One Hot Encoding**\n","b4908854":"# Load Libraries\n\nNow, we get to the coding part when we explore that data using python and anaconda libraries. First of all we load the libraires.","8e9f93ba":"**Adding Features**","be2f286c":"# Features engineering\n\nIn this section, after general visualization, we will impute the data and firgure our the correlation heat map.\n\n**Imputation**\n","0e54b6ea":"**Box plot survived vs class-sex**","939b7a97":"**category plot survived vs class-sex**"}}