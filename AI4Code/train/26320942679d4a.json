{"cell_type":{"0da650b0":"code","51e91a68":"code","ccaee1ef":"code","c51ed478":"code","c922598b":"code","16beee29":"code","fe144041":"code","0d515ef8":"code","661c3152":"code","fd487957":"code","45eb8682":"code","a22fa03e":"code","5ed17485":"code","8fecbd88":"code","6cd36b13":"code","e7b0ce8b":"code","99599142":"markdown","5ef9d4d0":"markdown","8ec48ab1":"markdown","e24d8096":"markdown","7f769fdb":"markdown","bb7b2f76":"markdown","f36a4428":"markdown","034e025d":"markdown","711eef23":"markdown","53d5bcae":"markdown","aaf62ebb":"markdown","e7434ead":"markdown","80b80db8":"markdown","6c0c4105":"markdown"},"source":{"0da650b0":"# \u521d\u56de\u306e\u307f\u5b9f\u884c\u3059\u308c\u3070\u3088\u3044\n!pip install mglearn","51e91a68":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport mglearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_iris","ccaee1ef":"from sklearn.svm import SVC\n\niris = load_iris()\n\nX_train, X_test, y_train, y_test = train_test_split(\n    iris.data, iris.target, random_state=0)\nprint(\"\u8a13\u7df4\u30bb\u30c3\u30c8\u30b5\u30a4\u30ba: {}   \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u30b5\u30a4\u30ba: {}\".format(\n      X_train.shape[0], X_test.shape[0]))\n\nbest_score = 0\n\nfor gamma in [0.001, 0.01, 0.1, 1, 10, 100]:\n    for C in [0.001, 0.01, 0.1, 1, 10, 100]:\n        # \u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u5408\u305b\u306b\u5bfe\u3057\u3066\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3055\u305b\u308b\n        svm = SVC(gamma=gamma, C=C)\n        svm.fit(X_train, y_train)\n        # \u8a13\u7df4\u5f8c\u306b\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\u3059\u308b\n        score = svm.score(X_test, y_test)\n        # \u30b9\u30b3\u30a2\u304c\u9ad8\u3051\u308c\u3070\u6700\u826f\u30b9\u30b3\u30a2\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\n        if score > best_score:\n            best_score = score\n            best_parameters = {'C': C, 'gamma': gamma}\n\nprint(\"\u6700\u826f\u30b9\u30b3\u30a2: {:.2f}\".format(best_score))\nprint(\"\u6700\u826f\u30d1\u30e9\u30e1\u30fc\u30bf: {}\".format(best_parameters))","c51ed478":"mglearn.plots.plot_threefold_split()","c922598b":"from sklearn.svm import SVC\n# \uff08\u8a13\u7df4\u30c7\u30fc\u30bf+\u691c\u8a3c\u30c7\u30fc\u30bf\uff09\u3068\uff08\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff09\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5206\u5272\u3059\u308b\nX_trainval, X_test, y_trainval, y_test = train_test_split(\n    iris.data, iris.target, random_state=0)\n# \u3055\u3089\u306b\u3082\u3046\u4e00\u5ea6\uff08\u8a13\u7df4\u30c7\u30fc\u30bf+\u691c\u8a3c\u30c7\u30fc\u30bf\uff09\u3092\u3001\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\u3068\uff08\u691c\u8a3c\u30c7\u30fc\u30bf\uff09\u306b\u5206\u5272\u3059\u308b\nX_train, X_valid, y_train, y_valid = train_test_split(\n    X_trainval, y_trainval, random_state=1)\nprint(\"\u8a13\u7df4\u30bb\u30c3\u30c8\u30b5\u30a4\u30ba: {}   \u691c\u8a3c\u30bb\u30c3\u30c8\u30b5\u30a4\u30ba: {}   \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u30b5\u30a4\u30ba:\"\n      \" {}\\n\".format(X_train.shape[0], X_valid.shape[0], X_test.shape[0]))\n\nbest_score = 0\n\nfor gamma in [0.001, 0.01, 0.1, 1, 10, 100]:\n    for C in [0.001, 0.01, 0.1, 1, 10, 100]:\n        # \u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u5408\u305b\u306b\u5bfe\u3057\u3066\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3055\u305b\u308b\n        svm = SVC(gamma=gamma, C=C)\n        svm.fit(X_train, y_train)\n        # \u8a13\u7df4\u5f8c\u306b\u3001\u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u3044\u3066\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\u3059\u308b\n        score = svm.score(X_valid, y_valid)\n        # \u30b9\u30b3\u30a2\u304c\u9ad8\u3051\u308c\u3070\u6700\u826f\u30b9\u30b3\u30a2\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\n        if score > best_score:\n            best_score = score\n            best_parameters = {'C': C, 'gamma': gamma}\n\n# \u6700\u826f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u751f\u6210\u3059\u308b\nsvm = SVC(**best_parameters)\n# \u8a13\u7df4\u30c7\u30fc\u30bf+\u691c\u8a3c\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u3092\u518d\u69cb\u7bc9\u3059\u308b\nsvm.fit(X_trainval, y_trainval)\ntest_score = svm.score(X_test, y_test)\nprint(\"\u6700\u826f\u691c\u8a3c\u30b9\u30b3\u30a2: {:.2f}\".format(best_score))\nprint(\"\u6700\u826f\u30d1\u30e9\u30e1\u30fc\u30bf: \", best_parameters)\nprint(\"\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2: {:.2f}\".format(test_score))","16beee29":"from sklearn.model_selection import cross_val_score\nfor gamma in [0.001, 0.01, 0.1, 1, 10, 100]:\n    for C in [0.001, 0.01, 0.1, 1, 10, 100]:\n        # \u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u5408\u305b\u306b\u5bfe\u3057\u3066\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3055\u305b\u308b\n        svm = SVC(gamma=gamma, C=C)\n        # \u5206\u5272\u65705\u3067\u5c64\u5316\u5206\u5272\u4ea4\u5dee\u691c\u8a3c\u306e\u30b9\u30b3\u30a2\u3092\u53d6\u5f97\u3059\u308b\n        scores = cross_val_score(svm, X_trainval, y_trainval, cv=5)\n        # \u4ea4\u5dee\u691c\u8a3c\u30b9\u30b3\u30a2\u306e\u5e73\u5747\u5024\u3092\u7b97\u51fa\u3059\u308b\n        score = np.mean(scores)\n        # i\u30b9\u30b3\u30a2\u304c\u9ad8\u3051\u308c\u3070\u6700\u826f\u30b9\u30b3\u30a2\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\n        if score > best_score:\n            best_score = score\n            best_parameters = {'C': C, 'gamma': gamma}\n# \u6700\u826f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u751f\u6210\u3059\u308b\nsvm = SVC(**best_parameters)\n# \u8a13\u7df4\u30c7\u30fc\u30bf+\u691c\u8a3c\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u3092\u518d\u69cb\u7bc9\u3059\u308b\nsvm.fit(X_trainval, y_trainval)","fe144041":"mglearn.plots.plot_cross_val_selection()","0d515ef8":"param_grid = {'C': [0.001, 0.01, 0.1, 1, 10, 100],\n              'gamma': [0.001, 0.01, 0.1, 1, 10, 100]}\nprint(\"\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30ea\u30c3\u30c9:\\n{}\".format(param_grid))","661c3152":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\ngrid_search = GridSearchCV(SVC(), param_grid, cv=5)","fd487957":"X_train, X_test, y_train, y_test = train_test_split(\n    iris.data, iris.target, random_state=0)","45eb8682":"grid_search.fit(X_train, y_train)","a22fa03e":"print(\"\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u30b9\u30b3\u30a2: {:.2f}\".format(grid_search.score(X_test, y_test)))","5ed17485":"print(\"\u6700\u826f\u30d1\u30e9\u30e1\u30fc\u30bf: {}\".format(grid_search.best_params_))\nprint(\"\u6700\u826f\u4ea4\u5dee\u691c\u8a3c\u30b9\u30b3\u30a2: {:.2f}\".format(grid_search.best_score_))","8fecbd88":"# Dataframe\u306b\u5909\u63db\nresults = pd.DataFrame(grid_search.cv_results_)\n# \u6700\u521d\u306e5\u884c\u3092\u8868\u793a\ndisplay(results.head())","6cd36b13":"scores = np.array(results.mean_test_score).reshape(6, 6)\n\n# \u5e73\u5747\u691c\u8a3c\u30b9\u30b3\u30a2\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\nmglearn.tools.heatmap(scores, xlabel='gamma', xticklabels=param_grid['gamma'],\n                      ylabel='C', yticklabels=param_grid['C'], cmap=\"viridis\")","e7b0ce8b":"fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n\nparam_grid_linear = {'C': np.linspace(1, 2, 6),\n                     'gamma':  np.linspace(1, 2, 6)}\n\nparam_grid_one_log = {'C': np.linspace(1, 2, 6),\n                      'gamma':  np.logspace(-3, 2, 6)}\n\nparam_grid_range = {'C': np.logspace(-3, 2, 6),\n                    'gamma':  np.logspace(-7, -2, 6)}\n\nfor param_grid, ax in zip([param_grid_linear, param_grid_one_log,\n                           param_grid_range], axes):\n    grid_search = GridSearchCV(SVC(), param_grid, cv=5)\n    grid_search.fit(X_train, y_train)\n    scores = grid_search.cv_results_['mean_test_score'].reshape(6, 6)\n\n    # \u5e73\u5747\u4ea4\u5dee\u691c\u8a3c\u3092\u30d7\u30ed\u30c3\u30c8\n    scores_image = mglearn.tools.heatmap(\n        scores, xlabel='gamma', ylabel='C', xticklabels=param_grid['gamma'],\n        yticklabels=param_grid['C'], cmap=\"viridis\", ax=ax)\n\nplt.colorbar(scores_image, ax=axes.tolist())","99599142":"\u6b21\u306b\u3001`GridSearchCV`\u30af\u30e9\u30b9\u3092[\u5b66\u7fd2\u30e2\u30c7\u30eb(\u4eca\u56de\u306fSVC)]\u3001[\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30ea\u30c3\u30c9]\u3001[\u5206\u5272\u6570]\u3092\u6307\u5b9a\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3002  \n\u3053\u3053\u3067\u751f\u6210\u3059\u308bgrid_search\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u901a\u5e38\u306e\u30af\u30e9\u30b9\u5206\u985e\u5668\u3068\u540c\u3058\u3088\u3046\u306b\u632f\u308b\u821e\u3046\u3002\u6a19\u6e96\u306efit\u30e1\u30bd\u30c3\u30c9\u3084predict\u30e1\u30bd\u30c3\u30c8\u306a\u3069\u3082\u547c\u3073\u51fa\u305b\u308b\u3002  ","5ef9d4d0":"fit\u30e1\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001\u30bb\u30c3\u30c8\u3057\u305f\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u6700\u9069\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u3092\u691c\u7d22\u3059\u308b\u3060\u3051\u3067\u306a\u304f  \n\u4ea4\u5dee\u691c\u8a3c\u3067\u6700\u3082\u826f\u3044\u30b9\u30b3\u30a2\u3060\u3063\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7528\u3044\u3066\u3001\u81ea\u52d5\u7684\u306b\u8a13\u7df4\u30bb\u30c3\u30c8\u5168\u4f53\u306b\u5bfe\u3057\u3066\u65b0\u3057\u3044\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3057\u3066\u304f\u308c\u308b\u3002  ","8ec48ab1":"`GridSearchCV`\u306e\u4f7f\u7528\u3067\u91cd\u8981\u306a\u306e\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u63a2\u7d22\u3059\u308b\u306e\u306b\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3067\u3042\u308b\u3002  \n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u751f\u6210\u3057\u305f\u8a13\u7df4\u30c7\u30fc\u30bf\u3067\u4ea4\u5dee\u691c\u8a3c\u3092\u884c\u3046\u306e\u3067\u610f\u8b58\u305b\u305a\u3001\u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3078\u306e\u5206\u5272\u30fb\u30b9\u30b3\u30a2\u5224\u5b9a\u3082\u884c\u3046  \n\u70b9\u304cGridSearchCV\u306e\u5229\u70b9\u3067\u3082\u3042\u308b\u3002","e24d8096":"## \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u904e\u5270\u9069\u5408\u306e\u5371\u967a\u6027\u3068\u691c\u8a3c\u30bb\u30c3\u30c8\n\n\u5358\u7d14\u306a\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u6700\u826f\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2`0.97`\u306f\u5fc5\u305a\u3057\u3082\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u306b\u3082\u5f53\u3066\u306f\u307e\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002  \n\u306a\u305c\u306a\u3089\u3001\u6700\u826f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u691c\u7d22\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u30b9\u30b3\u30a2\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u8a55\u4fa1\u3068\u3057\u3066  \n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u72ec\u7acb\u3057\u305f\u30c7\u30fc\u30bf\u3067\u306f\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3042\u308b\u3002  \n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u3082\u3046\u4e00\u5ea6\u5206\u5272\u3057\u3066\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u691c\u7d22\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6e96\u5099\u3057  \n\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3092\u5b8c\u5168\u306b\u72ec\u7acb\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\n\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9(fit)\u306b\u4f7f\u7528\u3059\u308b`\u8a13\u7df4\u30c7\u30fc\u30bf`  \n\u30d1\u30e9\u30e1\u30fc\u30bf\u691c\u7d22\u306b\u4f7f\u7528\u3059\u308b`\u691c\u8a3c\u30c7\u30fc\u30bf`  \n\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u8a55\u4fa1\u306b\u4f7f\u7528\u3059\u308b`\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf`\u3092\u6e96\u5099\u3059\u308b\u3002","7f769fdb":"`\u8a13\u7df4\u30c7\u30fc\u30bf`\/`\u691c\u8a3c\u30c7\u30fc\u30bf`\/`\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf`\u3092\u7528\u3044\u305f\u6700\u826f\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u5b9f\u88c5\u306e\u901a\u308a\u3067\u3042\u308b\u3002","bb7b2f76":"\u4ea4\u5dee\u691c\u8a3c\u3092\u7528\u3044\u3066\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u7d50\u679c","f36a4428":"## GridSearchCV\u30af\u30e9\u30b9\u306e\u4f7f\u7528\n\nscikit-learn\u306b\u306f\u3001\u4ea4\u5dee\u691c\u8a3c\u3092\u7528\u3044\u305f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u3057\u3066`GridSearchCV`\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002  \n\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u307e\u305adictionary\u578b\u3067\u63a2\u7d22\u3057\u305f\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3002","034e025d":"## \u4ea4\u5dee\u691c\u8a3c\u3092\u7528\u3044\u305f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\n\u4ea4\u5dee\u691c\u8a3c\u3092\u7528\u3044\u305f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306b\u3088\u3063\u3066\u3001\u30c7\u30fc\u30bf\u3092\u3088\u308a\u52b9\u7387\u7684\u306b\u4f7f\u3044\u6700\u826f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002","711eef23":"## \u5099\u5fd8\u9332_\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1(GridSearch)\n\n\u53c2\u8003\u30bd\u30fc\u30b9\uff1ahttps:\/\/github.com\/amueller\/introduction_to_ml_with_python\/blob\/master\/02-supervised-learning.ipynb\n\u53c2\u8003\u66f8\u7c4d\uff1aPython\u3067\u306f\u3058\u3081\u308b\u6a5f\u68b0\u5b66\u7fd2\n\n\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1(GridSearch)\u3068\u306f,,,\n\u6c4e\u5316\u6027\u80fd\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b\u3001\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u6700\u826f\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u63a2\u3059\u624b\u6cd5\u306e\u4e00\u3064\u3002","53d5bcae":"## GridSearchCV\u306e\u7d50\u679c\u306e\u89e3\u6790\nGridSearchCV\u306e\u7d50\u679c\u306f`cv_results_`\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002cv_results_\u306e\u5404\u884c\u306f\u7279\u5b9a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u5408\u305b\u306b\u76f8\u5f53\u3059\u308b\u3002  \n\u305d\u308c\u305e\u308c\u306e\u7d44\u5408\u305b\u306b\u5bfe\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u4ea4\u5dee\u691c\u8a3c\u3067\u306e\u5206\u5272\u304c\u8a18\u9332\u3055\u308c\u3001\u3055\u3089\u306b\u3059\u3079\u3066\u306e\u5e73\u5747\u3068\u6a19\u6e96\u504f\u5dee\u3082\u8a18\u9332\u3055\u308c\u3066\u3044\u308b\u3002","aaf62ebb":"\u3053\u306e\u8868\u30c7\u30fc\u30bf\u304b\u3089\u3001\u7e26\u8ef8\u306bC\u3001\u6a2a\u8ef8\u306bgamma\u3001\u8868\u793a\u5024\u3068\u3057\u3066\u5e73\u5747\u691c\u8a3c\u30b9\u30b3\u30a2\u3068\u3057\u305f\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u7528\u3044\u3066\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316\u3059\u308b\u3002\n\nC\u3001gamma\u306e\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3001\u5e73\u5747\u691c\u8a3c\u30b9\u30b3\u30a2\u304c\u5927\u304d\u306a\u5909\u52d5\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u9069\u5207\u306a\u30b0\u30ea\u30c3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002","e7434ead":"\u6700\u826f\u691c\u8a3c\u30b9\u30b3\u30a2\u306f`0.96`\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u6700\u826f\u30b9\u30b3\u30a2`0.97`\u3068\u6bd4\u3079\u308b\u3068\u4f4e\u304f\u306a\u3063\u3066\u3044\u308b\u8981\u56e0\u306f  \n\u304a\u305d\u3089\u304f\u3001\u8a13\u7df4\u306b\u4f7f\u3048\u308b\u30c7\u30fc\u30bf\u91cf\u304c\u6e1b\u3063\u305f\u305f\u3081\u3060\u308d\u3046\u3002\u3055\u3089\u306b\u3001\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30b9\u30b3\u30a2\u306f\u3001`0.92`\u3068\u3055\u3089\u306b  \n\u4f4e\u304f\u306a\u3063\u3066\u3044\u308b\u3002\u3057\u305f\u304c\u3063\u3066\u3001`\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7cbe\u5ea6`\u3068\u3057\u3066\u306f0.97\u3067\u306f\u306a\u304f0.92\u3068\u4e3b\u5f35\u3067\u304d\u308b\u3002  ","80b80db8":"\u4f8b\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306f\u30b0\u30ea\u30c3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u60aa\u3044\u5834\u5408\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u56f3\u3067\u3042\u308b\u3002\n","6c0c4105":"## \u5358\u7d14\u306a\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\n\n\u5358\u7d14\u306a\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306f\u3001\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5168\u7d44\u5408\u305b\u3067\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u8a13\u7df4\u3055\u308c\u308b\u3088\u3046\u306bfor\u30eb\u30fc\u30d7\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3059\u308b\u3002"}}