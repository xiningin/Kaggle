{"cell_type":{"ceda0059":"code","c64e476a":"code","33ec5ec7":"code","ba4c4ae3":"code","b02f8223":"code","ce941721":"code","7a936fae":"code","bd97089c":"code","d1c8c7cd":"code","c0982b7a":"code","0b9fbc9e":"code","bd6f2050":"code","2e8afbaa":"code","ead00a1e":"code","a2751bfa":"code","a87a5cfb":"markdown","5a24037c":"markdown","8dbd90bb":"markdown","2c60ad7e":"markdown","3fe158c5":"markdown","4b0cd984":"markdown","393f5a8e":"markdown","7a8d10cf":"markdown","a74f966a":"markdown","6ea6e0c0":"markdown"},"source":{"ceda0059":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","c64e476a":"matches=pd.read_csv('..\/input\/indian-premier-league-csv-dataset\/Match.csv')\nteams=pd.read_csv('..\/input\/indian-premier-league-csv-dataset\/Team.csv')\nplayer=pd.read_csv('..\/input\/indian-premier-league-csv-dataset\/Player.csv')\nresults=matches[['Season_Id','Team_Name_Id','Opponent_Team_Id','IS_Result','Match_Winner_Id']]\n\n\nresults['null']=results['Match_Winner_Id'].notnull()\nresults=results[results['null']==True]\nresults.drop(['null','IS_Result'],inplace=True,axis=1)\n\n\n#results.count()=577,574 3 null values ","33ec5ec7":"results['Match_Winner_Id']=results['Match_Winner_Id'].astype(int)\nresults","ba4c4ae3":"teams.set_index('Team_Id',inplace=True)\n\nteams\nresults['Team_Name_Id']=results['Team_Name_Id'].map(teams['Team_Short_Code'])\nresults['Opponent_Team_Id']=results['Opponent_Team_Id'].map(teams['Team_Short_Code'])\nresults['Match_Winner_Id']=results['Match_Winner_Id'].map(teams['Team_Short_Code'])","b02f8223":"results.columns=['Season','Team','Opponent','Winner']\nresults","ce941721":"'''grouped=results.groupby('Season')\nfor key, item in grouped:\n\n    print(grouped.get_group(key))\n    print(\"\\n\")'''","7a936fae":"kkr1=results[results['Team']=='KKR']\nkkr2=results[results['Opponent']=='KKR']\n\nkkr=pd.concat([kkr1,kkr2])\n\ncsk1=results[results['Team']=='CSK']\ncsk2=results[results['Opponent']=='CSK']\n\ncsk=pd.concat([csk1,csk2])\n\ndd1=results[results['Team']=='DD']\ndd2=results[results['Opponent']=='DD']\n\ndd=pd.concat([kkr1,kkr2])\n\nmi1=results[results['Team']=='MI']\nmi2=results[results['Opponent']=='MI']\n\nmi=pd.concat([kkr1,kkr2])\n\nrcb1=results[results['Team']=='RCB']\nrcb2=results[results['Opponent']=='RCB']\n\nrcb=pd.concat([rcb1,rcb2])\n\nrr1=results[results['Team']=='RR']\nrr2=results[results['Opponent']=='RR']\n\nrr=pd.concat([rr1,rr2])\n\nkxip1=results[results['Team']=='KXIP']\nkxip2=results[results['Opponent']=='KXIP']\n\nkxip=pd.concat([kxip1,kxip2])\n\nsrh1=results[results['Team']=='SRH']\nsrh2=results[results['Opponent']=='SRH']\n\nsrh=pd.concat([srh1,srh2])\n\n\n\n","bd97089c":"print(kkr,mi,csk,rr,dd,rcb,srh,kxip)","d1c8c7cd":"%matplotlib notebook\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","c0982b7a":"\nplt.figure(figsize=(12,6))\nsns.countplot(x='Country', data=player)\nplt.xticks(rotation='vertical')\nplt.title(' number of players from each country ')\nplt.xlabel('country')\nplt.ylabel('number of players')\nplt.show()","0b9fbc9e":"\nplt.figure(figsize=(12,6))\nsns.countplot( x='Batting_Hand',data=player)\nplt.xticks(rotation='vertical')\nplt.title(' player info')\nplt.xlabel('country')\nplt.ylabel('number of players')\nplt.show()","bd6f2050":"\nplt.figure(figsize=(12,6))\nsns.countplot(x='Bowling_Skill', data=player)\nplt.xticks(rotation='vertical')\nplt.title(' player stats ')\nplt.xlabel('skill')\nplt.ylabel('number of players')\nplt.show()","2e8afbaa":"\nplt.figure(figsize=(12,6))\nsns.countplot(x='Venue_Name', data=matches)\nplt.xticks(rotation='vertical')\nplt.title('venue statistics')\nplt.xlabel('venue')\nplt.ylabel('number of matches')\nplt.show()","ead00a1e":"import matplotlib.gridspec as gs\nplt.figure(figsize=(18,12))\ngspec=gs.GridSpec(6,4)\np1=plt.subplot(gspec[0:1,0:])\nsns.countplot(x='Country', data=player)\nplt.xticks(rotation='vertical')\nplt.title(' number of players from each country ')\nplt.xlabel('country')\nplt.ylabel('number of players')\nplt.show()\n\n\np2=plt.subplot(gspec[2:3,0])\n\nsns.countplot( x='Batting_Hand',data=player)\n\nplt.title(' player batting style')\nplt.xlabel('country')\nplt.ylabel('number of players')\nplt.show()\n\n\np3=plt.subplot(gspec[2:3,1:])\nsns.countplot(x='Bowling_Skill', data=player)\nplt.xticks(rotation=45)\nplt.title(' player bowlin style')\nplt.xlabel('skill')\nplt.ylabel('number of players')\nplt.show()\n\n\n\np4=plt.subplot(gspec[4:,0:])\nsns.countplot(x='Venue_Name', data=matches)\nplt.xticks(rotation='vertical')\nplt.title('venue statistics')\nplt.xlabel('venue')\nplt.ylabel('number of matches')\nplt.show()\n\n\n","a2751bfa":"plt.figure(figsize=(12,6))\nsns.countplot(x='Winner', data=results)\nplt.xticks(rotation='vertical')\nplt.title(' total matches won by each team ')\nplt.xlabel('Teams')\nplt.ylabel('Matches won')\nplt.show()","a87a5cfb":"**I have plotted various graphs to give a quick overview on different aspect of tournament such as which team has maximum number of wins, nationality of majority of players , batting and bowling preferences of players,locations where most of matches are played**","5a24037c":"now as one can see the values in the dataframe is integers and each unique integer represent a team \nso we will convert them to names using the data from teams.csv file so that we can analyse the data in a better way ","8dbd90bb":"now the values of Match_Winner_Id is in float which we convert to int , for future use(data transformation )","2c60ad7e":"now we will split our data framne into team wise data so that one can anayle each teams performance separatly and printed them in the next code block","3fe158c5":"rename the columns as per requirement","4b0cd984":"Also i have used gridspec to combine all the above charts for an quick overview at a glance","393f5a8e":"first attach the different datafiles\nthen we create new dataframe with the required information removing unwanted data\nafter which we check for missing data and deal with them\n","7a8d10cf":"**In this notebook i have performed basic EDA using simple data visualization,data transformation technique and tools**\nthe data set i have used is on Indian primeir league, which is a T20 cricket league.\nthe different csv files used here contains information about stats from each match,season info,player stats,and other information related to the tournament such as location,host etc","a74f966a":"in this code block i have shown how one can use grouping and iteration to get season wise stats ","6ea6e0c0":"now by using the matplotlib and seaborn libarary we perform some visualization "}}