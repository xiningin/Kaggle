{"cell_type":{"53dc842e":"code","a6ab195f":"code","15bef7b5":"code","ce85b895":"code","26ee8f9f":"code","5e0da4af":"code","c5e13ea0":"code","e68d5491":"code","19cfb746":"code","9156c21b":"code","4210e548":"code","31213bc9":"code","eb3b51f4":"code","c93cbfee":"code","92fd7b60":"code","3a48e54f":"code","2b674f86":"markdown","5516cd1f":"markdown","7c048103":"markdown","f71a88e3":"markdown","b53afe5e":"markdown","006046d8":"markdown","721e2bd1":"markdown","d7b4e84b":"markdown","5cd42754":"markdown","78ba87ce":"markdown","e33f70ad":"markdown","f0adfc2f":"markdown","5275bc6e":"markdown","82364934":"markdown"},"source":{"53dc842e":"# import required libraries\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn import preprocessing\nfrom sklearn.ensemble import RandomForestRegressor","a6ab195f":"train_df = pd.read_csv('..\/input\/train_data.csv',index_col=None)\ntest_df = pd.read_csv('..\/input\/test_data.csv',index_col=None)\n\n# print some information\nprint(train_df.info())\nprint(test_df.info())","15bef7b5":"# preview the data\ntrain_df.head()","ce85b895":"# Count number of NaN values in each column\ntrain_df.isna().sum()","26ee8f9f":"# Average unit price grouped by storey_range\ntrain_df[['storey_range', 'resale_price']].groupby(['storey_range'], as_index=False).mean().sort_values(by='resale_price', ascending=False)","5e0da4af":"# Average unit price grouped by town\ntrain_df[['town', 'resale_price']].groupby(['town'], as_index=False).mean().sort_values(by='resale_price', ascending=False)","c5e13ea0":"# correlation between remaining_lease, nearest_mrt_distance and floor_area_sqm and retail_price\ntrain_df[['remaining_lease', 'nearest_mrt_distance', 'floor_area_sqm', 'resale_price']].corr()['resale_price']","e68d5491":"# remove target column from train data\n\ntrain_label = train_df['resale_price']\ntrain_df = train_df.drop(columns=['resale_price'])","19cfb746":"# combine train and test\ntrain_length = len(train_df)\nall_data = pd.concat(objs=[train_df, test_df], axis=0)","9156c21b":"def process_month(df):\n    df['month_year'] = df.apply(lambda row: row['month'].split('-')[0], axis=1)\n    df['month_month'] = df.apply(lambda row: row['month'].split('-')[1], axis=1)\n\nprocess_month(all_data)\n    \n# 'month' column now can be removed\nall_data = all_data.drop(columns=['month'])\n\n","4210e548":"all_id = all_data['id']\nall_data = all_data.drop(columns=['id', 'lease_commence_date'])","31213bc9":"all_data = pd.get_dummies(all_data)\nall_data.head()","eb3b51f4":"min_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(all_data)\ndf = pd.DataFrame(x_scaled)\n\ndf.head()","c93cbfee":"train_data = x_scaled[:train_length]\ntest_data = x_scaled[train_length:]\ntrain_label = train_label.values","92fd7b60":"# create model\nmodel = RandomForestRegressor()\n\n# fit model with train data\nmodel.fit(train_data, train_label)","3a48e54f":"prediction = model.predict(test_data)\n\ntest_id = all_id[train_length:].values\n\nresult_df = pd.DataFrame({'id': test_id,'resale_price': prediction})\nresult_df.to_csv('submission.csv',index=False)\n","2b674f86":"* id column should also be removed.\n* It can be observed that remaining_lease (in years) is the difference from current date and lease_commence_date so we can remove one columnn. In this example, we keep 'remaining_lease' column","5516cd1f":"# 1. Loading data\nWe use Python Pandas package to load and preprocess our datasets. We start by loading data from csv file into DataFrames.","7c048103":"## Analysing features\n### Assumptions\n* Units in center area are more expensive than other\n* Units on higher storeys are more expensive\n* remaining_lease, nearest_mrt_distance, floor_area_sqm are also important features when calculating unit price","f71a88e3":"# 2. Feature Engineering\n","b53afe5e":"* We should split column 'month' into two separate columns","006046d8":"## Preprocess data\nWe concatenate train and test datasets and apply the same operations on both datasets together","721e2bd1":"This kernel shows our very first attempt to solve the ML Challenge problem","d7b4e84b":"Convert categorical variables to dummy variables","5cd42754":"## Check for null value","78ba87ce":"# 3. Train model\nSplit data to train and test again.","e33f70ad":"Prediction","f0adfc2f":"### Which features are categorical?\n\nA categorical variable is a variable that can take on one of a limited, and usually fixed number of possible values. The most common two types of categorical features are nominal, which has no quantitative value and ordinal, which has some logical order\n\n* Nominal: town, flat_type, block, street_name, flat_model, nearest_mrt_station, lease_commence_date\n* Ordinal: storey_range, max_floor_lvl, month\n\n### Which features are numerical? \nNumerical variables are variables where the measurement or number has a numerical meaning. They can be further classified into discrete and continuous variables\n\n* Discrete: remaining_lease, nearest_mrt_distance\n* Continous: floor_area_sqm","5275bc6e":"Create and train model","82364934":"Normalize numerical variables to (0, 1) scale"}}