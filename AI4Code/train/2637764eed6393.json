{"cell_type":{"777cbbaa":"code","8090f9dc":"code","8968a799":"code","32dc1141":"code","5d53e146":"code","46bce348":"code","a248c062":"code","3d3de75f":"code","4ebd6ce7":"code","40f259e2":"code","27583080":"code","d84be8dc":"code","333040ca":"code","480329bd":"code","b8767203":"code","09458327":"code","fcc02a7b":"code","2a574e99":"code","76b812f4":"code","ff5c53f7":"code","2c72e96a":"code","9716c109":"code","b87ac41d":"code","bedf70a9":"code","2fac88e4":"code","27b1643c":"code","e03233fc":"markdown","128f971c":"markdown","ee51015e":"markdown"},"source":{"777cbbaa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport pandas\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8090f9dc":"df = pandas.read_csv('\/kaggle\/input\/allbeatlesspotifysongdata2009remaster\/TheBeatlesCleaned.csv', delimiter=',', encoding = \"ISO-8859-2\")\ndf.head()","8968a799":"df1 = pandas.read_csv('\/kaggle\/input\/allbeatlesspotifysongdata2009remaster\/TheBeatlesGlobalYears.csv', delimiter=',', encoding = \"ISO-8859-2\")\ndf1.head()","32dc1141":"df2 = pandas.read_csv('\/kaggle\/input\/allbeatlesspotifysongdata2009remaster\/TheBeatlesRaw.csv', delimiter=',', encoding = \"ISO-8859-2\")\ndf2.head()","5d53e146":"df3 = pandas.read_csv('\/kaggle\/input\/allbeatlesspotifysongdata2009remaster\/TheBeatlesEarlyYears.csv', delimiter=',', encoding = \"ISO-8859-2\")\ndf3.head()","46bce348":"df.isnull().sum()","a248c062":"#Code by Arpita Gupta https:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\n#Calculating the number of songs by each of the albums\nprint(df.groupby('album').size())\npopular_album=df.groupby('album').size()\nprint(popular_album)\nalbum_list=df['album'].values.tolist()","3d3de75f":"pd.set_option('precision', 3)\ndf.describe()","4ebd6ce7":"#Code by Arpita Gupta https:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\nfrom scipy import stats\n\n#Finding out the skew for each attribute\nskew=df.skew()\nprint(skew)\n# Removing the skew by using the boxcox transformations\ntransform=np.asarray(df[['liveness']].values)\ndf_transform = stats.boxcox(transform)[1]\n#Plotting a histogram to show the difference \nplt.hist(df['liveness'],bins=10) #original data\nplt.show()\nplt.hist(df_transform,bins=10) #corrected skew data\nplt.show()","40f259e2":"pd.set_option('display.width', 100)\npd.set_option('precision', 3)\ncorrelation=df.corr(method='spearman')\nprint(correlation)","27583080":"# heatmap of the correlation \nplt.figure(figsize=(10,10))\nplt.title('Correlation heatmap')\nsns.heatmap(correlation,annot=True,vmin=-1,vmax=1,cmap=\"GnBu_r\",center=1);","d84be8dc":"#Code by Arpita Gupta https:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\nfig = plt.figure(figsize = (15,7))\ndf.groupby('album')['song'].agg(len).sort_values(ascending = False).plot(kind = 'bar')\nplt.xlabel('Album', fontsize = 20)\nplt.ylabel('Count of songs', fontsize = 20)\nplt.title('Album vs Count of songs', fontsize = 30);","333040ca":"# Analysing the relationship between energy and loudness\nfig=plt.subplots(figsize=(8,8))\nsns.regplot(x='danceability',y='speechiness',data=df,color='purple');","480329bd":"#Code by Arpita Gupta https:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\nfig=plt.subplots(figsize=(10,10))\nplt.title('Dependence between Danceability and Liveness')\nsns.regplot(x='danceability', y='liveness',\n            ci=None, data=df)\nsns.kdeplot(df.danceability,df.liveness);","b8767203":"df.plot(kind='box', subplots=True)\nplt.gcf().set_size_inches(10,10)\nplt.show()","09458327":"import squarify as sq\n\nplt.figure(figsize=(18,16))\nsq.plot(sizes=df.song.value_counts(), label=df[\"song\"].unique(), alpha=.8 )\nplt.axis('off')\nplt.show()","fcc02a7b":"#Pie charts \nlabels = df.album.value_counts().index\nsizes = df.album.value_counts().values\ncolors = ['yellowgreen', 'lightcoral', 'lightskyblue','cyan', 'green']\nplt.figure(figsize = (8,8))\nplt.pie(sizes, labels=labels, colors=colors)\nautopct=('%1.1f%%')\nplt.axis('equal')\nplt.show()","2a574e99":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","76b812f4":"import warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import MinMaxScaler,LabelEncoder\nfrom sklearn.model_selection import train_test_split,cross_val_score, KFold\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB, MultinomialNB,BernoulliNB\nfrom sklearn.svm import LinearSVC, SVC\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, classification_report\n%matplotlib inline","ff5c53f7":"#Linear regression, first create test and train dataset\nx=df.loc[:,['energy','danceability','speechiness','liveness','acousticness']].values\ny=df.loc[:,'valence'].values","2c72e96a":"# Creating a test and training dataset\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.30)","9716c109":"# Linear regression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\nprint(regressor.intercept_)\nprint(regressor.coef_)","b87ac41d":"#Displaying the difference between the actual and the predicted\ny_pred = regressor.predict(X_test)\ndf_output = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\nprint(df_output)","bedf70a9":"#Checking the accuracy of Linear Regression\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","2fac88e4":"#Code by Arpita Gupta https:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\nplt.figure(figsize=(10,10))\nplt.plot(y_pred,y_test,color='black',linestyle='dashed',marker='*',markerfacecolor='red',markersize=10)\nplt.title('Error analysis')\nplt.xlabel('Predicted values')\nplt.ylabel('Test values');","27b1643c":"#Code by Arpita Gupta https:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\n# Cross validation score\nx=df.loc[:,['energy','danceability']].values\ny=df.loc[:,'valence'].values\nregressor=LinearRegression()\nmse=cross_val_score(regressor,X_train,y_train,scoring='neg_mean_squared_error',cv=5)\nmse_mean=np.mean(mse)\nprint(mse_mean)\ndiff=metrics.mean_squared_error(y_test, y_pred)-abs(mse_mean)\nprint(diff)","e03233fc":"![](https:\/\/images-na.ssl-images-amazon.com\/images\/I\/51uFfCfMG+L._SX350_BO1,204,203,200_.jpg)amazon.com.br","128f971c":"#Label Encoding","ee51015e":"#Too many songs for a small space."}}