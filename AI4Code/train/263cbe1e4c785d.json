{"cell_type":{"d5828b1e":"code","55816c45":"code","28029d1e":"code","cb4f6c48":"code","7328dd90":"code","12eac636":"code","365efbf3":"code","fb4b44eb":"code","b2827feb":"code","39e57582":"code","6d7ebf34":"code","49bdc373":"code","0383329e":"code","0239f365":"code","1247d8e0":"code","79ce6da3":"code","ed53b3e7":"code","42758d89":"code","c1521fea":"code","428c51ef":"code","6e770328":"code","abfef286":"code","feefd360":"code","1164fba2":"code","b1a95aac":"code","6939baf0":"code","f7803384":"code","cea4010c":"code","249f6220":"markdown","abfd7ae9":"markdown","dc17b716":"markdown","049fde97":"markdown","a3810999":"markdown","68a72457":"markdown","2e5d8d73":"markdown","18b31cd8":"markdown","40d06106":"markdown"},"source":{"d5828b1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55816c45":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime","28029d1e":"df = pd.read_csv('\/kaggle\/input\/top-video-games-19952021-metacritic\/all_games.csv')","cb4f6c48":"df.head()","7328dd90":"df.isnull().sum()","12eac636":"df.shape","365efbf3":"df['summary'].fillna('Missing', inplace=True)","fb4b44eb":"df.isnull().sum()","b2827feb":"df.head()","39e57582":"df['platform'].value_counts()","6d7ebf34":"df[df['user_review']=='tbd']","49bdc373":"df = df.drop(df[df['user_review'] == 'tbd'].index)","0383329e":"count_platform = df[\"platform\"].value_counts().reset_index()\ncount_platform.columns = [\"Platform\", \"Count\"]\ncount_platform","0239f365":"sns.catplot(x=\"Count\", y=\"Platform\", kind=\"bar\", data=count_platform, height=6, aspect=3)\nplt.title('Number of Games by Platform',fontsize=16)\n\nplt.grid(True)","1247d8e0":"df['user_review'] = df['user_review'].astype(np.float)","79ce6da3":"top_user_score = df.sort_values(['user_review'], ascending=False)[:10]\ntop_user_score[['name','user_review']]","ed53b3e7":"fig, ax = plt.subplots(figsize = (10,5))\nsns.barplot(x = top_user_score['user_review'], y = top_user_score['name'])\nplt.xlim(9.3,9.8)\nplt.title('Top 10 Games by User Review ', fontsize = 16)\nplt.xlabel('User Review Score', fontsize = 14)\nplt.ylabel('Name', fontsize = 14)","42758d89":"top_meta_score = df.sort_values(['meta_score'], ascending = False)[:10]\ntop_meta_score[['name','meta_score']]","c1521fea":"fig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=top_meta_score['meta_score'], y=top_meta_score['name'], orient = 'h', palette='flare')\nplt.xlim(95,100)\nplt.title('Top 10 Games by Meta Score', fontsize=16)\nplt.xlabel('Meta Score', fontsize=14)\nplt.ylabel('Name', fontsize=14)","428c51ef":"era = df\nera['release_date'] = pd.to_datetime(era['release_date'])","6e770328":"era['year'] = df['release_date'].dt.year","abfef286":"era1 =era.groupby('year')","feefd360":"era2 = df.sort_values(['meta_score'], ascending = False)\nera2[['year','meta_score']]","1164fba2":"era2 =era.groupby('year')","b1a95aac":"era2.head()","6939baf0":"era2['meta_score'].sum().sort_values(ascending = False).reset_index()","f7803384":"era3 = era2['meta_score'].sum().sort_values(ascending = False).reset_index()\nera3.columns = [\"year\", \"Total\"] \n","cea4010c":"sns.catplot(x=\"year\", y=\"Total\", kind=\"bar\", data=era3, height=6, aspect=3)\nplt.title(\"Year that had the best video games ( Popularity ) \")\nplt.xlabel('Year')\nplt.ylabel(\"Popularity of Video Games \")\nplt.grid(True)","249f6220":"# Top 10 Games by User Review","abfd7ae9":"# Importing Dependencies","dc17b716":"# Exploring Data","049fde97":"# Thank You !!\n  Please  UPVOTE  if Like my work !!  ","a3810999":"# Load Dataset","68a72457":"# Data Cleaning","2e5d8d73":"# Count by platform","18b31cd8":"# Top 10 Games by Meta Score","40d06106":"#  Era that had the best video games"}}