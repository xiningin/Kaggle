{"cell_type":{"6d52cc4e":"code","fc5b32ae":"code","ed11006f":"code","0f62f58e":"code","371453d2":"code","64d931c5":"code","1ee2f46f":"code","047396ff":"code","988a4cbc":"code","0d03777b":"code","7640003c":"code","bee444d1":"code","d023a3ca":"code","9779c5af":"code","486b114b":"markdown","b56296ba":"markdown","c18df8dd":"markdown","7dc2ae99":"markdown","ba99731f":"markdown","7b99e03c":"markdown","6fba6745":"markdown"},"source":{"6d52cc4e":"import pandas as pd\nimport numpy as np\n\nfrom xgboost import XGBRegressor\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder","fc5b32ae":"df = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/submission.csv')","ed11006f":"df.head()","0f62f58e":"def fill_States(s):\n    if pd.isna(s['Province_State']):\n        if pd.isna(s['Country_Region']):\n            return \"NA\"\n        else:\n            return s['Country_Region']\n    else:\n        return s['Province_State']","371453d2":"df['Province_State'] = df.apply(fill_States,axis=1)","64d931c5":"df_test['Province_State'] = df_test.apply(fill_States,axis=1)","1ee2f46f":"df['Date'] = pd.to_datetime(df['Date'])\ndf_test['Date'] = pd.to_datetime(df_test['Date'])","047396ff":"df['Date'] = df['Date'].dt.month * 100 + df['Date'].dt.day\ndf_test['Date'] = df_test['Date'].dt.month * 100 + df_test['Date'].dt.day","988a4cbc":"preds = pd.DataFrame()","0d03777b":"preds['ForecastId'] = df_test.ForecastId","7640003c":"df_test.columns","bee444d1":"le = LabelEncoder()\nle2 = LabelEncoder()","d023a3ca":"for country in df['Country_Region'].unique():\n    for state in df[df['Country_Region']==country].loc[:,'Province_State'].unique():\n        train = df[ df['Province_State'] == state ].copy()\n        X = train.drop(['Id','ConfirmedCases','Fatalities'],axis=1)\n        X['Province_State'] = le.fit_transform(X['Province_State'])\n        X['Country_Region'] = le2.fit_transform(X['Country_Region'])\n        y1 = train['ConfirmedCases']\n        y2 = train['Fatalities']\n        \n        test = df_test[ df_test['Province_State'] == state ].copy()\n        X_test = test.drop(['ForecastId'],axis=1)\n        X_test['Province_State'] = le.transform(X_test['Province_State'])\n        X_test['Country_Region'] = le2.transform(X_test['Country_Region'])\n        \n        model1 = XGBRegressor(n_estimators=1000)\n        model1.fit(X,y1)\n        preds.at[test['ForecastId'] - 1,'ConfirmedCases'] = model1.predict(X_test)\n        \n        model2 = XGBRegressor(n_estimators=1000)\n        model2.fit(X,y2)\n        preds.at[test['ForecastId'] - 1,'Fatalities'] = model2.predict(X_test)\n        ","9779c5af":"preds.to_csv('submission.csv',index=False)","486b114b":"Getting Top Scores with XGB","b56296ba":"Error: 0.000\n\nRank: 61\n\n![](https:\/\/i.ibb.co\/LzvXbwy\/Screenshot-2020-04-02-COVID19-Global-Forecasting-Week-2-Kaggle.png)","c18df8dd":"We will train and predict each and every state separately ","7dc2ae99":"Filling missing states with country","ba99731f":"# Complete Article will be published on <a href=\"http:\/\/competitivedatascience.com\">Competitive Data Science<\/a>","7b99e03c":"Extracting month and Date from Date column as year is 2020 for all","6fba6745":"# Complete Article will be published on <a href=\"http:\/\/competitivedatascience.com\">Competitive Data Science<\/a>"}}