{"cell_type":{"ec327c55":"code","39578f7f":"code","6dd17e12":"code","18619f90":"code","f4acb679":"code","1adb4c83":"code","303fb7ea":"code","236154cf":"code","03cf3987":"code","839a0abd":"code","55de3a8a":"code","0e6f679c":"code","1f8a3d18":"code","b0df9798":"code","9329c7c7":"code","cc648b2b":"code","16494253":"code","a77c45bc":"code","147ad9bf":"code","a1dcd1ae":"code","298f709b":"code","c711d157":"code","107f234e":"code","fc0f00f0":"code","81f3e219":"code","b2c7940c":"code","02262285":"code","7d41e32e":"code","bef799aa":"code","43e24ffe":"code","89f17fc6":"markdown","5d954a2d":"markdown","9cf7e7b2":"markdown","6d64e16b":"markdown","46f7f20b":"markdown","305a3de2":"markdown","25cc28ee":"markdown","59b01566":"markdown","3a2c85dd":"markdown","cfea282a":"markdown","39cde345":"markdown","d585f02b":"markdown","88b36a7c":"markdown","c1d91103":"markdown","ecbb7090":"markdown","b000bd56":"markdown","589545fb":"markdown","c0568b21":"markdown","23f08761":"markdown","8a9aa7da":"markdown","29966b7c":"markdown","41726cef":"markdown","a1a1cd2e":"markdown"},"source":{"ec327c55":"import pandas as pd\nimport seaborn as sb\nimport numpy as np\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestClassifier","39578f7f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        dataset = os.path.join(dirname, filename)\n        print(os.path.join(dirname, filename))\n\ndata=pd.read_json(dataset)\ndata1=pd.read_json(dataset)","6dd17e12":"data.info()","18619f90":"data.tail()","f4acb679":"import matplotlib.pyplot as plt\nfig,axes = plt.subplots(4,2,figsize=(13,20))\nfor id,i in enumerate(data[['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed','Credit_History','Property_Area', 'Income']]):\n    row,col = id\/\/2,id%2\n    sb.countplot(x=i,data=data,hue='Application_Status',ax=axes[row,col])\nplt.subplots_adjust(hspace=1)","1adb4c83":"l=data.groupby(data.Dependents)\nl.count()","303fb7ea":"print(round(294\/511*100),\"% of total applicats are with 0 -dependents\")\nprint(round(85\/511*100),\"% of total applicats are with 1 -dependents\")    \nprint(round(88\/511*100),\"% of total applicats are with 2 -dependents\")\nprint(round(44\/511*100),\" % of total applicats are with 3+ -dependents\")","236154cf":"data.groupby(['Self_Employed','Application_Status']).count()","03cf3987":"print(46\/511*100)","839a0abd":"data.groupby(['Married','Gender','Application_Status']).count()","55de3a8a":"print(87\/511*100)","0e6f679c":"data.groupby(['Property_Area','Application_Status']).count()","1f8a3d18":"fig,axes = plt.subplots(5,2,figsize=(13,20))\nfor id,i in enumerate(data[['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed','Credit_History','Property_Area', 'Income','Application_Status']]):\n    row,col = id\/\/2,id%2\n    sb.countplot(x=i,data=data,hue='Dependents',ax=axes[row,col])\nplt.subplots_adjust(hspace=1)","b0df9798":"sb.countplot(hue=data.Dependents,x=data.Income)","9329c7c7":"data.groupby(['Income','Dependents']).count()\n# Average no. of dependents in high income candidates is ","cc648b2b":"data.groupby(['Income']).count() ","16494253":"data.groupby(['Application_Status','Credit_History']).count() ","a77c45bc":"data.head()","147ad9bf":"data.drop(['Application_ID'],axis=1,inplace=True)","a1dcd1ae":"from sklearn.preprocessing import LabelEncoder\ncolumn=['Gender','Married','Dependents','Education','Self_Employed','Credit_History','Property_Area','Income','Application_Status']\nall= LabelEncoder()\nfor i in column:\n    data[i] = all.fit_transform(data[i])","298f709b":"data.head()","c711d157":"data.columns","107f234e":"x=data[['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed','Credit_History','Property_Area', 'Income']]\ny=data.Application_Status\nx_train, x_test, y_train, y_test = model_selection.train_test_split(x,y, test_size=0.2, random_state=7)","fc0f00f0":"model = LogisticRegression()\nmodel.fit(x_train,y_train)\npredictions = model.predict(x_test)\nprint(accuracy_score(y_test, predictions)*100)","81f3e219":"from sklearn.metrics import confusion_matrix #confusuon matrix\npd.crosstab(y_test, predictions)\n#positive=1 : application accepted","b2c7940c":"sb.clustermap(data.corr(),cmap='Blues',annot=True)\n#credit history is correlated with application status","02262285":"X_train=data[['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed','Credit_History','Property_Area', 'Income']]\nY_train=data.Application_Status\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(x,y, test_size=0.3,\n                                                    random_state=10)","7d41e32e":"#Using Logistic Regression Algorithm to the Training Set\nfrom sklearn.linear_model import LogisticRegression\nclassifier1 = LogisticRegression(random_state = 0)\nclassifier1.fit(X_train, Y_train)\n#Using KNeighborsClassifier Method of neighbors class to use Nearest Neighbor algorithm\nfrom sklearn.neighbors import KNeighborsClassifier\nclassifier2 = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier2.fit(X_train, Y_train)\n#Using SVC method of svm class to use Support Vector Machine Algorithm\nfrom sklearn.svm import SVC\nclassifier3 = SVC(kernel = 'linear', random_state = 0)\nclassifier3.fit(X_train, Y_train)\n# Using SVC method of svm class to use Kernel SVM Algorithm\nfrom sklearn.svm import SVC\nclassifier4 = SVC(kernel = 'rbf', random_state = 1)\nclassifier4.fit(X_train, Y_train)\n#Using GaussianNB method of na\u00efve_bayes class to use Na\u00efve Bayes Algorithm\nfrom sklearn.naive_bayes import GaussianNB\nclassifier5 = GaussianNB()\nclassifier5.fit(X_train, Y_train)\n#Using DecisionTreeClassifier of tree class to use Decision Tree Algorithm\n\nfrom sklearn.tree import DecisionTreeClassifier\nclassifier6 = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\nclassifier6.fit(X_train, Y_train)","bef799aa":"Y_pred1 = classifier1.predict(X_test)\nY_pred2 = classifier2.predict(X_test)\nY_pred3 = classifier3.predict(X_test)\nY_pred4 = classifier4.predict(X_test)\nY_pred5= classifier5.predict(X_test)\nY_pred6 = classifier6.predict(X_test)","43e24ffe":"\nprint(accuracy_score(Y_test, Y_pred1))\nprint(accuracy_score(Y_test, Y_pred2))\nprint(accuracy_score(Y_test, Y_pred3))\nprint(accuracy_score(Y_test, Y_pred4))\nprint(accuracy_score(Y_test, Y_pred5))\nprint(accuracy_score(Y_test, Y_pred6))","89f17fc6":"# 6.) Create a simple predictive model to assess whether a loan application will be approved or rejected and provide the accuracy score","5d954a2d":"# Ques 1. Find % of total applicants for each unique value of dependents\n\n## for the purpose to see how data is biased toward one type of category\n## As you can see Maximum application filled are from 0 dependant ","9cf7e7b2":"# 5. Find average dependents per income group\n ## low salary applicant have 0 dependant ","6d64e16b":"# other models","46f7f20b":"## Max people applying for loan is of low income\n","305a3de2":"# This notebook is basic demonstration of data insights from a loan applicants dataset.\n## like what is the approval ratio of  loan and which factors is most important to get your loan approved.\n## At last we will create a predictive model which can predict that which applicant get loan","25cc28ee":"# heatmap to check co relation between attributes\n## credit history is  highly co-related ","59b01566":"## Data has no null value","3a2c85dd":"### convert the data to machine form","cfea282a":"# 4. Which property area has the maximum approval ratio\n## = Semiurban","39cde345":"### accuracy=89 %","d585f02b":"# Importing Data","88b36a7c":"# Logistic Regression did decent job in prediction","c1d91103":"### Some of the Questions :","ecbb7090":"## Data insights on basis of dependents","b000bd56":"1. Find % of total applicants for each unique value of dependents (for data biasing)\n2. Find the average number of dependents per applicant (dependant refers to family members)\n3. Find the %of applications approved for self employed applicants\n4. What is the % of rejections for married male applicants\n5. Which property area has the maximum approval ratio\n6. Create a simple predictive model to assess whether a loan application will be approved or rejected and provide the accuracy score\n\n","589545fb":"# Confusion Matrix","c0568b21":"# 2. Find the %of applications approved for self employed applicants\n## 9% SELF EMPLOYED  candidates GETS THEIR loan APPROVED","23f08761":"## 12 applicationn are wronglly accepted by our model\n## they should not be accepted\n## we need to decrease false negative ","8a9aa7da":"> Also chances of married male to get his loan approved is highest","29966b7c":"# 3. What is the % of rejections for married male applicant\n## 17% of married males are rejected for Loan approval","41726cef":"## Approval on basis of credit history:\n## - applicants with a credit history have higher chance of approval.","a1a1cd2e":"# Plotting different features with respect to Application status(Approved or not)\n## data insights"}}