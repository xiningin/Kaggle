{"cell_type":{"94e1299e":"code","3d59f858":"code","235ad8c9":"code","cc25e607":"code","a60d44af":"code","c981452e":"code","892936f4":"code","3a6bbe19":"code","52474802":"code","a00630a1":"code","5ae4f54f":"code","45359ca9":"code","67e35b4d":"code","c313ac87":"code","3c60f913":"code","ed36b062":"code","e45329da":"code","c69cd5dc":"code","19db3889":"markdown","23f56e5a":"markdown","3dc16928":"markdown","2762b8ab":"markdown"},"source":{"94e1299e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d59f858":"#Reading the dataset\ncars = pd.read_csv('..\/input\/car-price-prediction\/CarPrice_Assignment.csv')\ncars.columns\ncars","235ad8c9":"car=cars.select_dtypes(exclude='object')\ncar","cc25e607":"f=cars.select_dtypes(exclude='float')\nd=cars.select_dtypes(exclude='object')","a60d44af":"cars.describe()","c981452e":"#Extracting Car Company from the CarName as per direction in Problem \nCompanyName = cars['CarName'].apply(lambda x : x.split(' ')[0])\ncars.insert(2,\"CompanyName\",CompanyName)\ncarname = cars['CarName'].apply(lambda y : y.split(' ')[-1])\ncars.insert(4,\"carname\",carname)\ndel cars['CarName']\ncars.head()","892936f4":"#Changing spelling mistakes in carname\ndef replace_name(a,b):\n    cars.CompanyName.replace(a,b,inplace=True)\n\nreplace_name('maxda','mazda')\nreplace_name('porcshce','porsche')\nreplace_name('toyouta','toyota')\nreplace_name('vokswagen','volkswagen')\nreplace_name('vw','volkswagen')\ncars.CompanyName.unique()\n","3a6bbe19":"del cars['citympg']\ndel cars['highwaympg']\ndel cars['car_ID']\ncars","52474802":"plt.figure(figsize=(8,8))\nsns.heatmap(cars.corr())\nplt.show()","a00630a1":"\nplt.title('copmpany distribution in dataset')\ncars['CompanyName'].value_counts().plot(kind='bar')\nplt.title('company distribution')\n\n","5ae4f54f":"def ordinality_check(a):\n    sns.countplot(x=a)\nplt.figure(figsize=(25,25))\nplt.subplot(3,3,1)\nordinality_check(f.fueltype)\nplt.subplot(3,3,2)\nordinality_check(f.aspiration)\nplt.subplot(3,3,3)\nordinality_check(f.drivewheel)\nplt.subplot(3,3,4)\nordinality_check(f.doornumber)\nplt.subplot(3,3,5)\nordinality_check(f.enginelocation)\nplt.subplot(3,3,6)\nordinality_check(f.enginetype)\nplt.subplot(3,3,7)\nordinality_check(f.carbody)","45359ca9":"cars","67e35b4d":"#labelencode\nfrom sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ncars['fueltype']=le.fit_transform(f.fueltype)\ncars['aspiration']=le.fit_transform(f.aspiration)\ncars['doornumber']=le.fit_transform(f.doornumber)\ncars['enginelocation']=le.fit_transform(f.enginelocation)\ncars\n","c313ac87":"def ordinality_check(a):\n    sns.barplot(x=a,y=cars.price)\nplt.figure(figsize=(25,25))\nplt.subplot(3,3,1)\nordinality_check(f.fueltype)\nplt.subplot(3,3,2)\nordinality_check(f.aspiration)\nplt.subplot(3,3,3)\nordinality_check(f.drivewheel)\nplt.subplot(3,3,4)\nordinality_check(f.doornumber)\nplt.subplot(3,3,5)\nordinality_check(f.enginelocation)\nplt.subplot(3,3,6)\nordinality_check(f.enginetype)\nplt.subplot(3,3,7)\nordinality_check(f.carbody)\n\n\n\n\n","3c60f913":"d.columns","ed36b062":"\ndef ordinality_check(a):\n    sns.boxplot( x=a)    \nplt.figure(figsize=(25,25))\nplt.subplot(4,3,1)\nordinality_check(d.price)\nplt.subplot(4,3,2)\nordinality_check(d.boreratio)\nplt.subplot(4,3,3)\nordinality_check(d.compressionratio)\nplt.subplot(4,3,4)\nordinality_check(d.horsepower)\nplt.subplot(4,3,5)\nordinality_check(d.stroke)\nplt.subplot(4,3,6)\nordinality_check(d.peakrpm)\nplt.subplot(4,3,7)\nordinality_check(d.carheight)\nplt.subplot(4,3,8)\nordinality_check(d.carlength)\nplt.subplot(4,3,9)\nordinality_check(d.carwidth)\nplt.subplot(4,3,10)\nordinality_check(d.wheelbase)\n\n\n\n   ","e45329da":"cars['price'].skew()","c69cd5dc":"from scipy import stats\nprice_log=stats.boxcox(cars['price'])[0]\npd.Series(price_log).skew()\nordinality_check(cars.price)","19db3889":"***CLEANING THE DATASET***\n","23f56e5a":"***# Extracting Car Company from the CarName as per direction in Problem ***\n#another method\n\ndf_auto['CarName'] = df_auto['CarName'].str.split(' ',expand=True)","3dc16928":"**READING THE DATA**","2762b8ab":"#one_hot_encoder\nfrom sklearn import preprocessing\nenc=preprocessing.OneHotEncoder()\ndef array(c):\n    a=c.to_numpy()\n    b=a.reshape(-1,1)\n    cars[c]=enc.fit_transform(b)\n\narray(cars['carbody'])\ncars\n"}}