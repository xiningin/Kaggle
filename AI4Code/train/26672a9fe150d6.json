{"cell_type":{"27c6efaf":"code","b6e9a9d6":"code","00715c6e":"code","f95c3a13":"code","88163907":"code","3370b41a":"code","772bfa68":"code","cfe5d5a0":"code","df3f721a":"code","83be03d2":"code","1c2a8033":"code","aabb7008":"code","e62bb90e":"code","c744e070":"code","1db3c85a":"code","ed80990c":"code","6fdce146":"code","548ff18b":"code","a2de5135":"markdown","89d8184e":"markdown","4df66bea":"markdown","5359f47e":"markdown","af6fc1cb":"markdown","d36d9d72":"markdown","83f0ff98":"markdown","7285a96b":"markdown","1e8fe55a":"markdown","e5a16994":"markdown","313b3545":"markdown","d0b5cc0e":"markdown","9aed51c5":"markdown","fc964eeb":"markdown","01998591":"markdown","b299c555":"markdown"},"source":{"27c6efaf":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","b6e9a9d6":"df = pd.read_csv('..\/input\/daily_total_female_births_in_cal.csv')\ndf.columns = ['Births']\ndf_copy = df.copy()\ndf.head()","00715c6e":"sns.set_style(\"ticks\")\nplt.figure(figsize=(25,5))\nplt.plot(df['Births'])","f95c3a13":"df['Births(t-0)'] = df.Births.shift(-1)\ndf.head()","88163907":"df['Births(t-1)'] = df.Births.shift(-2)\ndf.head()","3370b41a":"df['Births(t-2)'] = df.Births.shift(-3)\ndf['Births(t-3)'] = df.Births.shift(-4)\ndf.head()","772bfa68":"df = df.dropna()","cfe5d5a0":"test_set = df[-30:]\ntrain_set = df[:-30]\nX_test_set = test_set.drop(['Births(t-3)'], axis=1)\ny_test_set = test_set['Births(t-3)']\nX_train_set = train_set.drop(['Births(t-3)'], axis=1)\ny_train_set = train_set['Births(t-3)']","df3f721a":"import warnings\nwarnings.filterwarnings('ignore')\nfrom numpy import array\nfrom keras.models import Sequential\nfrom keras.layers import LSTM\nfrom keras.layers import Dense","83be03d2":"X = array(X_train_set)\ny = array(y_train_set)","1c2a8033":"X = X.reshape((X.shape[0], X.shape[1],1))","aabb7008":"model = Sequential()\nmodel.add(LSTM(128, activation = 'relu', input_shape=(X.shape[1], 1)))\nmodel.add(Dense(1))\nmodel.compile(optimizer='adam', loss='mse')\nmodel.fit(X, y, epochs=50, validation_split=0.10)","e62bb90e":"x_test = array(X_test_set)\nx_input = x_test.reshape((x_test.shape[0], x_test.shape[1], 1))\nprediction = model.predict(x_input, verbose=0)\nprint(prediction)","c744e070":"y_test_set = array(y_test_set)\ny_test_set","1db3c85a":"prediction.flatten()","ed80990c":"sns.set_style(\"ticks\")\nplt.figure(figsize=(25,5))\nplt.plot(y_test_set, label = \"Actual\")\nplt.plot(prediction, label = \"Predicted\")\nplt.show()","6fdce146":"actual = np.append(y,y_test_set)\npredicted = np.append(y, prediction)","548ff18b":"sns.set_style(\"ticks\")\nplt.figure(figsize=(25,5))\nplt.plot(actual, label = \"Actual\")\nplt.plot(predicted, label = \"Predicted\", alpha=0.7)\nplt.legend()\nplt.show()","a2de5135":"Predict the output for the test set","89d8184e":"We did the same thing again but this time with -2 which generated another column\nThe last column is the target or output variable and before that we can use as many time steps as we wish depending on the number of time-steps that makes a better model.","4df66bea":"As we can see above, using -1 pulls the column up by one row. Here '-' is for pulling the column up and 1 instructs pandas by how many columns it should be pulled up.","5359f47e":"Convert the actual outputs and the predicted outputs into 1D array","af6fc1cb":"**Read the dataset**","d36d9d72":"We have to reshape X into [samples, timesteps, features]\n\nsamples -> no of rows there are\n\ntimesteps -> the number of timesteps we are using for prediction\n\nfeatures -> here features will be 1 because this is a univariate forecasting problem and we are using only one feature i.e. female births","83f0ff98":"For this problem, we will use 4 previous timesteps to predict the 5th timestep\n\nBut since the columns are being pulled from the top, certain cells at the bottom will be empty so we will remove any rows that have NaN values","7285a96b":"**Import Libraries**","1e8fe55a":"Lets visualize the actual output and the predicted output","e5a16994":"**Convert Time-Series Problem into a Supervised Learning Problem**\n\nTo do that, we need input variable(s) and an output variable. We can transform the data and use previous time steps as input variables and use the next time time step as the output variable. \n\nFor example: If the dataset looked like\n\n1\n\n2\n\n3 \n\nWe can restructe it into a supervised learning problem by writing it in the following format\n\n1, 2\n\n2, 3\n\nwhere the first column is the input and the second column is the output.\n\nTo do the above programmatically, we can use the pandas shift function which basically pulls or pushes a column by a set number of rows.","313b3545":"The last 30 data points are where we tested our model and it did predict the ups and downs to some extent. \n\nThe model can be improved by playing with the neural net architecture and the number of timesteps that are used for predicting or with more data\n\n**Please leave an upvote :D**","d0b5cc0e":"Lets visualize how the whole time series looks with  the predicted ouputs","9aed51c5":"Define a LSTM model and fit the data","fc964eeb":"Now, we divide the data into training and testing set. \nLast 30 rows for testing and the rest for training. \n\nThe last column is the output variable and the rest are the input variables","01998591":"Now lets visualize the whole dataset","b299c555":"Again import libraries"}}