{"cell_type":{"f1a0cc14":"code","621bdc1b":"code","a062c5a7":"code","ca0c7ad7":"code","8f627958":"code","6ebd2718":"code","2d214e32":"code","3802e3f5":"code","2fec7798":"code","b81e03b5":"code","97ee0e43":"code","f7250968":"code","0ce37d31":"code","3a5cb7cb":"code","834b4aa8":"code","c4bb6e64":"code","67597bea":"code","8d69bbdb":"code","2a15b54a":"code","a7e8f4c7":"code","1b15d285":"code","32508229":"code","e0d493d1":"code","83dbd05f":"code","b8858c28":"code","67dc93a5":"code","5313fdb4":"code","b2c74e21":"code","91863f47":"code","16b86270":"code","cac5b3b2":"code","ed5affd6":"code","fbd8b667":"code","ac990915":"code","88b8f974":"code","9b89bc90":"code","a7ff3a74":"code","64a220ca":"code","150d28ac":"code","589d9e87":"code","840570d5":"markdown","128e9e8e":"markdown","7880b950":"markdown","80eeb59b":"markdown","7b0548d6":"markdown","b68f9cf0":"markdown","b75a41dd":"markdown","c4f097e4":"markdown","bbe367b2":"markdown","95e58829":"markdown","da390b99":"markdown","ea039ee5":"markdown","3991be97":"markdown","bc851c63":"markdown"},"source":{"f1a0cc14":"# Supress Warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Import the numpy and pandas packages\n\nimport numpy as np\nimport pandas as pd","621bdc1b":"#Reading compaines.txt, changing the encoding type because of special characters. And then solving the multiple encoding issue.\ncompanies = pd.read_csv('..\/input\/companies.txt',encoding='ISO-8859-1',sep='\\t')\ncompanies.permalink = companies.permalink.str.encode('ISO-8859-1').str.decode('ascii', 'ignore')\ncompanies.name = companies.name.str.encode('ISO-8859-1').str.decode('ascii', 'ignore')\ncompanies.head()","a062c5a7":"rounds2 = pd.read_csv('..\/input\/rounds2.csv',encoding='ISO-8859-1')\nrounds2.company_permalink = rounds2.company_permalink.str.encode('ISO-8859-1').str.decode('ascii', 'ignore')\nrounds2.head()","ca0c7ad7":"#How many unique companies are present in rounds2?\nrounds2['company_permalink'] = rounds2['company_permalink'].str.lower()\nprint(len(rounds2['company_permalink'].unique()))\n\n#Reconfirming -\nrounds2['company_permalink'].str.lower().describe()","8f627958":"# How many unique companies are present in companies?\ncompanies['permalink'] = companies['permalink'].str.lower()\nprint(len(companies['permalink'].unique()))\n\n#Reconfirming -\ncompanies['permalink'].str.lower().describe()","6ebd2718":"#Are there any companies in the rounds2 file which are not present in companies?\ntemp1 = pd.DataFrame(rounds2.company_permalink.unique())\ntemp2 = pd.DataFrame(companies.permalink.unique())\ntemp2.equals(temp1)","2d214e32":"set(companies['permalink'].unique()).difference(set(rounds2['company_permalink'].unique()))","3802e3f5":"#Merge the two data frames so that all variables (columns) in the companies frame are added to the rounds2 data frame. Name the merged frame master_frame.\nmaster_frame = pd.merge(rounds2, companies, how = 'left', left_on = 'company_permalink', right_on = 'permalink')\nlen(master_frame.index)","2fec7798":"#Inspecting the Null values , column-wise\nmaster_frame.isnull().sum(axis=0)","b81e03b5":"#Inspecting the Null values percentage , column-wise\nprint(round(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2))","97ee0e43":"master_frame = master_frame.drop(['funding_round_code', 'funding_round_permalink', 'funded_at','permalink', 'homepage_url',\n                                 'state_code', 'region', 'city', 'founded_at','status'], axis = 1)","f7250968":"#Inspecting the Null values percentage again after deletion, column-wise\nprint(round(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2))","0ce37d31":"#Dropping rows based on null columns\nmaster_frame = master_frame[~(master_frame['raised_amount_usd'].isnull() | master_frame['country_code'].isnull() |\n                             master_frame['category_list'].isnull())]","3a5cb7cb":"#Percentage of retained rows\nprint(100*(len(master_frame.index)\/114949))","834b4aa8":"master_frame.shape","c4bb6e64":"#Observing the unique funding_round_type\nmaster_frame.funding_round_type.value_counts()","67597bea":"#Retaining the rows with only four investment types\nmaster_frame = master_frame[(master_frame['funding_round_type'] == 'venture') \n                            | (master_frame['funding_round_type'] == 'seed')\n                            | (master_frame['funding_round_type'] == 'angel')\n                            | (master_frame['funding_round_type'] == 'private_equity')]\nmaster_frame.head()","8d69bbdb":"#Converting $ to million $.\nmaster_frame['raised_amount_usd'] = master_frame['raised_amount_usd']\/1000000\nmaster_frame.head()","2a15b54a":"#calculating average investment amount for each of the four funding types.\nround(master_frame.groupby('funding_round_type').raised_amount_usd.mean(), 2)","a7e8f4c7":"#Retaining rows with only venture type. As Spark Funds wants to invest between 5 to 15 million USD per investment round\nmaster_frame = master_frame[master_frame['funding_round_type'] == 'venture'] \n\n#Dropping the column 'funding_round_type' as it is going to be venture type this point forward\nmaster_frame = master_frame.drop(['funding_round_type'], axis = 1)","1b15d285":"top9 = master_frame.pivot_table(values = 'raised_amount_usd', index = 'country_code', aggfunc = 'sum')\ntop9 = top9.sort_values(by = 'raised_amount_usd', ascending = False)\ntop9 = top9.iloc[:9, ]\ntop9","32508229":"#Retaining rows with only USA, GBR and IND country_codes. As SparksFunds wants to invest in only top three English speaking countries.\nmaster_frame = master_frame[(master_frame['country_code'] == 'USA')\n                            | (master_frame['country_code'] == 'GBR')\n                            | (master_frame['country_code'] == 'IND')]","e0d493d1":"#Extracting the primary vector value\nmaster_frame['category_list'] = master_frame['category_list'].apply(lambda x: x.split('|')[0])","83dbd05f":"#Reading mapping.csv file \nmapping = pd.read_csv('..\/input\/mapping.csv')\nmapping.category_list = mapping.category_list.replace({'0':'na', '2.na' :'2.0'}, regex=True)\nmapping.head()","b8858c28":"#Reshaping the mapping dataframe to merge with the master_frame dataframe. Using melt() function to unpivot the table.\nmapping = pd.melt(mapping, id_vars =['category_list'], value_vars =['Manufacturing','Automotive & Sports',\n                                                              'Cleantech \/ Semiconductors','Entertainment',\n                                                             'Health','News, Search and Messaging','Others',\n                                                             'Social, Finance, Analytics, Advertising']) \nmapping = mapping[~(mapping.value == 0)]\nmapping = mapping.drop('value', axis = 1)\nmapping = mapping.rename(columns = {\"variable\":\"main_sector\"})\nmapping.head()","67dc93a5":"master_frame = master_frame.merge(mapping, how = 'left', on ='category_list')\nmaster_frame.head()","5313fdb4":"#List of primary sectors which have no main sectors in the master_frame\nprint(master_frame[master_frame.main_sector.isnull()].category_list.unique())","b2c74e21":"#Number of rows with NaN masin_sector value\nlen(master_frame[master_frame.main_sector.isnull()])","91863f47":"#Retaining the rows which have main_sector values\nmaster_frame = master_frame[~(master_frame.main_sector.isnull())]\nlen(master_frame.index)","16b86270":"D1 = master_frame[(master_frame['country_code'] == 'USA') & \n             (master_frame['raised_amount_usd'] >= 5) & \n             (master_frame['raised_amount_usd'] <= 15)]\nD1_gr = D1[['raised_amount_usd','main_sector']].groupby('main_sector').agg(['sum', 'count']).rename(\n    columns={'sum':'Total_amount','count' : 'Total_count'})\nD1 = D1.merge(D1_gr, how='left', on ='main_sector')\nD1.head()","cac5b3b2":"D2 = master_frame[(master_frame['country_code'] == 'GBR') & \n             (master_frame['raised_amount_usd'] >= 5) & \n             (master_frame['raised_amount_usd'] <= 15)]\nD2_gr = D2[['raised_amount_usd','main_sector']].groupby('main_sector').agg(['sum', 'count']).rename(\n    columns={'sum':'Total_amount','count' : 'Total_count'})\nD2 = D2.merge(D2_gr, how='left', on ='main_sector')\nD2.head()","ed5affd6":"D3 = master_frame[(master_frame['country_code'] == 'IND') & \n             (master_frame['raised_amount_usd'] >= 5) & \n             (master_frame['raised_amount_usd'] <= 15)]\nD3_gr = D3[['raised_amount_usd','main_sector']].groupby('main_sector').agg(['sum', 'count']).rename(\n    columns={'sum':'Total_amount','count' : 'Total_count'})\nD3 = D3.merge(D3_gr, how='left', on ='main_sector')\nD3.head()","fbd8b667":"#Total number of investments (count)\nprint(D1.raised_amount_usd.count())\nprint(D2.raised_amount_usd.count())\nprint(D3.raised_amount_usd.count())","ac990915":"#Total amount of investment (USD)\nprint(round(D1.raised_amount_usd.sum(), 2))\nprint(round(D2.raised_amount_usd.sum(), 2))\nprint(round(D3.raised_amount_usd.sum(), 2))","88b8f974":"#Top sector, second-top, third-top for D1 (based on count of investments)\n#Number of investments in the top, second-top, third-top sector in D1\nD1_gr","9b89bc90":"#Top sector, second-top, third-top for D2 (based on count of investments)\n#Number of investments in the top, second-top, third-top sector in D2\nD2_gr","a7ff3a74":"#Top sector, second-top, third-top for D2 (based on count of investments)\n#Number of investments in the top, second-top, third-top sector in D3\nD3_gr","64a220ca":"#For the top sector USA , which company received the highest investment?\ncompany = D1[D1['main_sector']=='Others']\ncompany = company.pivot_table(values = 'raised_amount_usd', index = 'company_permalink', aggfunc = 'sum')\ncompany = company.sort_values(by = 'raised_amount_usd', ascending = False).head()\nprint(company.head(1))\n\n#For the second top sector USA , which company received the highest investment?\ncompany = D1[D1['main_sector']=='Social, Finance, Analytics, Advertising']\ncompany = company.pivot_table(values = 'raised_amount_usd', index = 'company_permalink', aggfunc = 'sum')\ncompany = company.sort_values(by = 'raised_amount_usd', ascending = False).head()\nprint(company.head(1))","150d28ac":"#For the top sector GBR , which company received the highest investment?\ncompany = D2[D2['main_sector']=='Others']\ncompany = company.pivot_table(values = 'raised_amount_usd', index = 'company_permalink', aggfunc = 'sum')\ncompany = company.sort_values(by = 'raised_amount_usd', ascending = False).head()\nprint(company.head(1))\n\n#For the second top sector GBR , which company received the highest investment?\ncompany = D2[D2['main_sector']=='Social, Finance, Analytics, Advertising']\ncompany = company.pivot_table(values = 'raised_amount_usd', index = 'company_permalink', aggfunc = 'sum')\ncompany = company.sort_values(by = 'raised_amount_usd', ascending = False).head()\nprint(company.head(1))","589d9e87":"#For the top sector IND , which company received the highest investment?\ncompany = D3[D3['main_sector']=='Others']\ncompany = company.pivot_table(values = 'raised_amount_usd', index = 'company_permalink', aggfunc = 'sum')\ncompany = company.sort_values(by = 'raised_amount_usd', ascending = False).head()\nprint(company.head(1))\n\n#For the second top sector IND , which company received the highest investment?\ncompany = D3[D3['main_sector']=='News, Search and Messaging']\ncompany = company.pivot_table(values = 'raised_amount_usd', index = 'company_permalink', aggfunc = 'sum')\ncompany = company.sort_values(by = 'raised_amount_usd', ascending = False).head()\nprint(company.head(1))","840570d5":"## Analysis Result :\n\n- #### Based on the data analysis performed, SparksFunds should invest in -\n\n    - Funding type - `Venture`.\n    - Countries - `USA`, `Britain` and `India`, respectively.\n    - Top two sectors to invest in are - `Others` and `Social, Finance, Analytics, Advertising`.","128e9e8e":"## Task 5: Sector Analysis 2\n\n-  ### Subtask 5.1: Create DataFrames D1, D2, D3 based on three countries\n\n    - Create three separate data frames D1, D2 and D3 for each of the three countries containing the observations of funding type FT falling within the 5-15 million USD range. The three data frames should contain:\n\n        - All the columns of the master_frame along with the primary sector and the main sector\n\n        - The total number (or count) of investments for each main sector in a separate column\n\n        - The total amount invested in each main sector in a separate column","7880b950":"- #### Dropping unnecessary rows\n\nFor the remaining columns of `master_frame` dataframe, we can see that there are columns which still have null counts, let's drop those rows and inspect the dataframe again.","80eeb59b":"## Task 3: Country Analysis\n\n-  ### Subtask 3.1: Analysing the countries based on investment amount\n\n    - Spark Funds wants to see the top nine countries which have received the highest total funding (across ALL sectors for the chosen investment type)\n\n    - For the chosen investment type, make a data frame named top9 with the top nine countries (based on the total investment amount each country has received)","7b0548d6":"## Task 2: Funding Type Analysis\n\n-  ### Subtask 2.1: Retaining the rows with only four investment types.\n\nSpark Funds wants to choose one of these four investment types(venture, angel, seed, and private equity) for each potential investment they will make. So let's observe and see how many funding types are present in `master_frame` and then retain the rows with above-mentioned investment types.","b68f9cf0":"-  ### Subtask 4.2: Map each primary sector to one of the eight main sectors\n\nUse the mapping file 'mapping.csv' to map each primary sector to one of the eight main sectors (Note that \u2018Others\u2019 is also considered one of the main sectors)","b75a41dd":"## Task 4: Sector Analysis 1\n\n-  ### Subtask 4.1: Extract the primary sector of each category\n\nExtract the primary sector value into *category_list* column. According to the  business rule the first string before the vertical bar will be considered the primary sector.","c4f097e4":"## Task 1: Data Cleaning\n\n-  ### Subtask 1.1: Import and read\n\nLoad the companies and rounds data (provided on the previous page) into two data frames and name them `companies` and `rounds2` respectively.","bbe367b2":"-  ### Subtask 2.2: Calculate the average investment amount for each of the four funding types.\n\n    - Average funding amount of **venture** type\n    - Average funding amount of **seed** type\n    - Average funding amount of **angel** type\n    - Average funding amount of **private_equity** type","95e58829":"- #### Dropping unnecessary columns \n\nFor Sparks Funds, we are mostly driving our analysis based on funding round type, category, country etc. Hence, so many columns present in the `master_frame` are not needed, we will drop those columns.","da390b99":"-  ### Subtask 1.3: Cleaning the Data\n\n    - Inspecting Null Values\n    - Dropping unnecessary columns\n    - Dropping unnecessary rows","ea039ee5":"-  ### Subtask 5.2: Sector-wise Investment Analysis\n\n    - For D1, D2, D3, analyse the below points :","3991be97":"-  ### Subtask 1.2: Understand the Dataset\n\n    - How many unique companies are present in `rounds2`?\n    - How many unique companies are present in `companies`?\n    - Are there any companies in the `rounds2` file which are not present in `companies`? Answer yes or no: **Y\/N**\n    - Merge the two data frames so that all variables (columns) in the `companies` frame are added to the `rounds2` data frame. Name the merged frame `master_frame`. How many observations are present in `master_frame`?","bc851c63":"## Objective :\nYou work for Spark Funds, an asset management company. Spark Funds wants to make investments in a few companies. The CEO of Spark Funds wants to understand the global trends in investments so that she can take the investment decisions effectively.\n\n\n## Business and Data Understanding :\nSpark Funds has two minor constraints for investments:\n\n    - It wants to invest between 5 to 15 million USD per round of investment\n\n    - It wants to invest only in English-speaking countries because of the ease of communication with the companies it would invest in. For the analysis, consider a country to be English speaking only if English is one of the official languages in that country\n    \n## Business objective: \nThe objective is to identify the best sectors, countries, and a suitable investment type for making investments. The overall strategy is to invest where others are investing, implying that the 'best' sectors and countries are the ones 'where most investors are investing'. (Spark Funds wants to invest where most other investors are investing. This pattern is often observed among early stage startup investors.)"}}