{"cell_type":{"a8c4e5f4":"code","cfc90887":"code","c80d24b0":"code","a4896e9a":"code","7bc66a25":"code","2963e6a7":"code","e1b30b5e":"code","4b76dca8":"code","c4e746aa":"code","07bc507f":"code","d4bb595a":"code","2a123256":"code","1c08891a":"code","58b2aed1":"code","9ce84038":"code","b264ee22":"code","f5a4a174":"code","1a936be0":"code","2032afe7":"code","e45dccdf":"code","61df3fb4":"code","054d5379":"code","d1c0f261":"code","cb5541b8":"code","561f15b4":"code","d8ed24b0":"code","c2e9a566":"markdown","c94721c9":"markdown","4f1124e2":"markdown","588ceb3d":"markdown","84df5023":"markdown","cd562254":"markdown","23b838e6":"markdown"},"source":{"a8c4e5f4":"from fastai.text import *","cfc90887":"path=Path('\/kaggle\/input\/nlp-getting-started\/')\ntrain_df=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv',index_col='id')\ntrain_df.head(5)","c80d24b0":"cols=['text']\ndata_bunch = (TextList.from_df(train_df, cols=cols)\n                .split_by_rand_pct(0.2)\n                .label_for_lm()  \n                .databunch(bs=48))\ndata_bunch.show_batch()","a4896e9a":"learn = language_model_learner(data_bunch,\n                               AWD_LSTM,\n                               pretrained_fnames=['\/kaggle\/input\/wt103-fastai-nlp\/lstm_fwd','\/kaggle\/input\/wt103-fastai-nlp\/itos_wt103'],\n                               pretrained=True,\n                               drop_mult=0.5)\n","7bc66a25":"learn.lr_find()\nlearn.recorder.plot()","2963e6a7":"learn.fit_one_cycle(8, 1e-2)","e1b30b5e":"learn.lr_find()\nlearn.recorder.plot()","4b76dca8":"learn.fit_one_cycle(2, slice(1e-05, 1e-03))","c4e746aa":"learn.unfreeze()","07bc507f":"learn.lr_find()\nlearn.recorder.plot()","d4bb595a":"learn.fit_one_cycle(2, slice(1e-06, 1e-03))","2a123256":"learn.freeze()","1c08891a":"learn.fit_one_cycle(1, slice(1e-04, 1e-03))","58b2aed1":"learn.save_encoder('fine_tuned_enc')","9ce84038":"train=train_df[:8000]\nval=train_df[2000:]\ntest=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/test.csv',index_col='id')","b264ee22":"target_cols=['target']\ndata_clas = TextClasDataBunch.from_df('.', train, val, test,\n                  vocab=data_bunch.vocab,\n                  text_cols=cols,\n                  label_cols=target_cols,\n                  bs=32)","f5a4a174":"learn_classifier = text_classifier_learner(data_clas, \n                                           AWD_LSTM,\n                                           pretrained=False,\n                                           drop_mult=0.8,\n                                           metrics=[accuracy])\n\n\nfnames = ['\/kaggle\/input\/wt103-fastai-nlp\/lstm_fwd.pth','\/kaggle\/input\/wt103-fastai-nlp\/itos_wt103.pkl']\nlearn_classifier.load_pretrained(*fnames, strict=False)\n\n\n\n# load the trained model without target from encoder saved  \nlearn_classifier.load_encoder('fine_tuned_enc')","1a936be0":"learn_classifier.lr_find()\nlearn_classifier.recorder.plot()","2032afe7":"learn_classifier.fit_one_cycle(4, 1e-3)","e45dccdf":"learn_classifier.fit_one_cycle(2, 1e-05)","61df3fb4":"learn_classifier.fit_one_cycle(7, slice(1e-06, 1e-03))","054d5379":"preds_test, target_test = learn_classifier.get_preds(DatasetType.Test, ordered=True)\ny = torch.argmax(preds_test, dim=1)\ny.numpy().shape","d1c0f261":"submission=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/sample_submission.csv')\nprint(submission.shape)\n","cb5541b8":"submission['target']=y.numpy()\nsubmission.head()","561f15b4":"submission['target'].value_counts()","d8ed24b0":"submission.to_csv('submission.csv',index=False)\nprint('Model ready for submission!')","c2e9a566":"# Make data prep with API Block\nwe are now using target to make a prediction on the tweets","c94721c9":"# Prep data without target\/ API Block","4f1124e2":"# Make learner and train on data","588ceb3d":"# Importing data","84df5023":"# Make prediction from test set","cd562254":"# Submission ","23b838e6":"# Create classifier learner and train with target"}}