{"cell_type":{"6f873ab8":"code","75b42cc8":"code","bb0a0e90":"code","ca441baf":"code","1d11381b":"code","a98c3ed3":"code","8f902b88":"code","de32a580":"code","b00d1de7":"code","ceb3b70d":"code","3fd87260":"code","9e64277c":"code","5b7f266f":"code","555793de":"code","4d55a880":"code","77fd3978":"code","0c429230":"code","d19f46e4":"markdown","6b0b07ce":"markdown","a6b37a77":"markdown","8abd2a79":"markdown","086a6722":"markdown","577cfa67":"markdown","d1948755":"markdown","4e9e1abb":"markdown","ef8b95db":"markdown","498ed836":"markdown","d6b20982":"markdown","7bb79027":"markdown","39be12e3":"markdown","7c17aad1":"markdown","230b9fbd":"markdown","2d76d3a3":"markdown","a4a31833":"markdown"},"source":{"6f873ab8":"import os\n\nimport cv2\nfrom IPython.display import Video, display\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n%matplotlib inline","75b42cc8":"#https:\/\/www.kaggle.com\/robikscube\/nfl-big-data-bowl-plotting-player-position \ndef create_football_field(linenumbers=True,\n                          endzones=True,\n                          highlight_line=False,\n                          highlight_line_number=50,\n                          highlighted_name='Line of Scrimmage',\n                          fifty_is_los=False,\n                          figsize=(12, 6.33)):\n    \"\"\"\n    Function that plots the football field for viewing plays.\n    Allows for showing or hiding endzones.\n    \"\"\"\n    rect = patches.Rectangle((0, 0), 120, 53.3, linewidth=0.1,\n                             edgecolor='r', facecolor='darkgreen', zorder=0)\n\n    fig, ax = plt.subplots(1, figsize=figsize)\n    ax.add_patch(rect)\n\n    plt.plot([10, 10, 10, 20, 20, 30, 30, 40, 40, 50, 50, 60, 60, 70, 70, 80,\n              80, 90, 90, 100, 100, 110, 110, 120, 0, 0, 120, 120],\n             [0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3,\n              53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 53.3, 0, 0, 53.3],\n             color='white')\n    if fifty_is_los:\n        plt.plot([60, 60], [0, 53.3], color='gold')\n        plt.text(62, 50, '<- Player Yardline at Snap', color='gold')\n    # Endzones\n    if endzones:\n        ez1 = patches.Rectangle((0, 0), 10, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ez2 = patches.Rectangle((110, 0), 120, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ax.add_patch(ez1)\n        ax.add_patch(ez2)\n    plt.xlim(0, 120)\n    plt.ylim(-5, 58.3)\n    plt.axis('off')\n    if linenumbers:\n        for x in range(20, 110, 10):\n            numb = x\n            if x > 50:\n                numb = 120 - x\n            plt.text(x, 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='white')\n            plt.text(x - 0.95, 53.3 - 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='white', rotation=180)\n    if endzones:\n        hash_range = range(11, 110)\n    else:\n        hash_range = range(1, 120)\n\n    for x in hash_range:\n        ax.plot([x, x], [0.4, 0.7], color='white')\n        ax.plot([x, x], [53.0, 52.5], color='white')\n        ax.plot([x, x], [22.91, 23.57], color='white')\n        ax.plot([x, x], [29.73, 30.39], color='white')\n\n    if highlight_line:\n        hl = highlight_line_number + 10\n        plt.plot([hl, hl], [0, 53.3], color='yellow')\n        plt.text(hl + 2, 50, '<- {}'.format(highlighted_name),\n                 color='yellow')\n    return fig, ax\n\ncreate_football_field()\nplt.show()","bb0a0e90":"video_train = pd.read_csv(\"..\/input\/nfl-impact-detection\/train_labels.csv\")\nvideo_train.head()","ca441baf":"!ls ..\/input\/nfl-impact-detection\/train","1d11381b":"display(Video(data=\"\/kaggle\/input\/nfl-impact-detection\/train\/58098_001193_Endzone.mp4\", embed=True))","a98c3ed3":"video = cv2.VideoCapture(\"\/kaggle\/input\/nfl-impact-detection\/train\/58098_001193_Endzone.mp4\")","8f902b88":"print(\"Width\", video.get(cv2.CAP_PROP_FRAME_WIDTH))\n\nprint(\"Height\",video.get(cv2.CAP_PROP_FRAME_HEIGHT))\n\nprint(\"FPS\",video.get(cv2.CAP_PROP_FPS))\n\nprint(\"Frame Count\",video.get(cv2.CAP_PROP_FRAME_COUNT))","de32a580":"ret, frame = video.read()\nplt.imshow(frame)","b00d1de7":"video.set(cv2.CAP_PROP_POS_FRAMES, 100)\nret, frame = video.read()\nplt.imshow(frame)","ceb3b70d":"tracking_train = pd.read_csv(\"..\/input\/nfl-impact-detection\/train_player_tracking.csv\")\ntracking_train.head()","3fd87260":"tracking_train.shape","9e64277c":"tracking_train[(tracking_train[\"playID\"]==82)&(tracking_train[\"player\"]==\"H96\")]","5b7f266f":"playID = 82\nplayer = \"H90\"\ntracking_data = tracking_train[(tracking_train[\"playID\"]==playID)&(tracking_train[\"player\"]==player)]\n\nfig, ax = create_football_field()\ng = sns.scatterplot(data=tracking_data, x=\"x\", y=\"y\", color=\"red\", ax=ax)\ng.set_title(f\"Tracking data of playID: {playID} and player: {player}\", fontsize=15)","555793de":"#Create figure and Axes. And set title.\nfig, axes = plt.subplots(2, 2, figsize=(10,6), gridspec_kw=dict(wspace=0.1, hspace=0.6))\nfig.suptitle(f\"Moving information of playID: {playID} and player: {player}\", fontsize=15)\n\n#Too check layout, I'll show text on each Axes.\ngs = axes[0, 1].get_gridspec()\naxes[0, 0].remove()\naxes[1, 0].remove()\n#Add gridspec we got\naxbig = fig.add_subplot(gs[:, 0])\n\n\n#Add three plots.\nsns.distplot(tracking_data[\"dis\"], kde=False, rug=False, color=\"red\", ax=axbig)\naxbig.set_title(\"Distribution of dis\", fontsize=12)\n\nsns.distplot(tracking_data[\"s\"], kde=False, color=\"blue\", rug=False, ax=axes[0, 1])\naxes[0, 1].set_title('Distribution of s', fontsize=12)\n\nsns.distplot(tracking_data[\"a\"], kde=False, color=\"green\", rug=False, ax=axes[1, 1])\naxes[1, 1].set_title('Distribution of a', fontsize=12)","4d55a880":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\nsns.distplot(tracking_data[\"o\"], color=\"olive\", kde=False, rug=False, ax=ax[0])\nax[0].set_title(\"o distribution\")\n\nsns.distplot(tracking_data[\"dir\"], color=\"darkmagenta\", kde=False, rug=False, ax=ax[1])\nax[1].set_xlabel(\"dir\") \nax[1].set_title('dir distribution')\n\n\nplt.show()","77fd3978":"image_train = pd.read_csv(\"..\/input\/nfl-impact-detection\/image_labels.csv\")\nimage_train.head()","0c429230":"im = cv2.imread(\"..\/input\/nfl-impact-detection\/images\/\" + image_train[\"image\"][0])\nplt.imshow(im)","d19f46e4":"We can load mp4 video as image data with OpenCV.","6b0b07ce":"x and y are float and represent field coordinate.","a6b37a77":"# <div class=\"alert alert-block alert-info\">preparation<\/div>\n\nLoad libraries and create utility functions. ","8abd2a79":"<a id=\"3\"><\/a> <br>\n# <div class=\"alert alert-block alert-success\">Image data<\/div>\n\nimage_labels.csv includes image datas' information.","086a6722":"### Note the angle definition above!\n\n![field](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F3258%2F820e86013d48faacf33b7a32a15e814c%2FIncreasing%20Dir%20and%20O.png?generation=1572285857588233&alt=media)","577cfa67":"With IPython.display module, we can play mp4 data on jupyter notebook.","d1948755":"I'll load first image.","4e9e1abb":"There are so many time point.","ef8b95db":"<a id=\"2\"><\/a> <br>\n# <div class=\"alert alert-block alert-success\">Tracking data<\/div>\n\nThis data includes plyaers' tracking data while games.\n\nIn this section, I'll visualize the data.\n\nAlso we can see many analysis about tracking data in [NFL Big Data Bowl 2021](https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2021).","498ed836":"mp4 files' name are in video column. mp4 data in train_labels.csv are here.","d6b20982":"o and dir are angle of players. o is orientation and represents simple direction. dir is angle of player motion.","7bb79027":"s and a are players' speed and acceleration at each time point. Distance is players' euclid distance between this point in time and at a previous point in time.","39be12e3":"# NFL Dataset quick overview\ud83c\udfc9\n\nIn this competition, we are given some format data.\n\nI'll do quick introduction especially focusing on how to load them.\n\n## Contents\n\n1. [Video data](#1)\n1. [Tracking data](#2)\n1. [Image data](#3)","7c17aad1":"<a id=\"1\"><\/a> <br>\n# <div class=\"alert alert-block alert-success\">Video data<\/div>\n\nIn train_labels.csv, we can access mp4 data for train. ","230b9fbd":"First frame is,","2d76d3a3":"We can also get video width, height, fps and frame count.","a4a31833":"100th frame is,"}}