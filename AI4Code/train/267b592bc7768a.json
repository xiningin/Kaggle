{"cell_type":{"03be817e":"code","15b1d88d":"code","3dc3c0dc":"code","5caa6291":"code","2c128e23":"code","72ef5290":"code","b07a2aa6":"code","9ae92089":"code","944e0fb8":"code","da682c92":"code","c1425a26":"code","5bb2d056":"code","b5df6b36":"code","6295be70":"code","bb760296":"code","e08301f6":"code","2ece6eed":"code","c48966ad":"code","7b133b86":"code","63f193d5":"code","b1942d66":"markdown","34379862":"markdown","ce1b5542":"markdown","eb2f733c":"markdown","beec5558":"markdown"},"source":{"03be817e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","15b1d88d":"import random\nimport gc\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold,StratifiedKFold\nfrom lightgbm import LGBMClassifier\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom sklearn import preprocessing\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","3dc3c0dc":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/test.csv')\nsub = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')\ny = train['target']","5caa6291":"train.head()","2c128e23":"test.head()","72ef5290":"train.info()","b07a2aa6":"test.info()","9ae92089":"#Check if there'is null values\ntrain.isnull().sum()","944e0fb8":"#Check if there'is null values\ntest.isnull().sum()","da682c92":"train.describe()","c1425a26":"continous_cols= ['f'+str(i) for i in range(242)]\ncontinous_cols.remove('f22')\ncontinous_cols.remove('f43')\ncategorical_cols = ['f'+str(i) for i in range(242,285)]+['f22','f43']\ncols = continous_cols + categorical_cols","5bb2d056":"# plot the first 60 features \ni = 1\nplt.figure()\nfig, ax = plt.subplots(15, 4,figsize=(20, 22))\nfor feature in continous_cols[:60]:\n    plt.subplot(15, 4,i)\n    sns.histplot(train[feature],color=\"blue\", kde=True,bins=100, label='train_'+feature)\n    sns.histplot(test[feature],color=\"olive\", kde=True,bins=100, label='test_'+feature)\n    plt.xlabel(feature, fontsize=9); plt.legend()\n    i += 1\nplt.show()","b5df6b36":"# Target distibution\nsns.catplot(x=\"target\", kind=\"count\", palette=\"ch:.25\", data=train)","6295be70":"from sklearn.preprocessing import RobustScaler\nscaler = RobustScaler()\ntrain[continous_cols] = scaler.fit_transform(train[continous_cols])\ntest[continous_cols] = scaler.transform(test[continous_cols])","bb760296":"params={'reg_alpha': 8.784125077358365, 'reg_lambda': 0.0025286925777068953, 'colsample_bytree': 0.2, 'subsample': 0.5, 'learning_rate': 0.025,\n        'max_depth': 100, 'num_leaves': 7, 'min_child_samples': 185, 'cat_smooth': 54,'objective': 'binary',  \n            'random_state': 48,'n_estimators': 20000,'n_jobs': -1}","e08301f6":"preds = np.zeros(test.shape[0])\nkf = StratifiedKFold(n_splits=10,random_state=48,shuffle=True)\nauc=[]  # list contains auc for each fold\nn=0\nfor trn_idx, test_idx in kf.split(train[cols],y):\n    X_tr,X_val=train[cols].iloc[trn_idx],train[cols].iloc[test_idx]\n    y_tr,y_val=y.iloc[trn_idx],y.iloc[test_idx]\n    model = LGBMClassifier(**params)\n    model.fit(X_tr,y_tr,eval_set=[(X_val,y_val)],early_stopping_rounds=100,eval_metric=\"auc\",verbose=False)\n    preds += model.predict_proba(test[cols])[:,1]\/kf.n_splits\n    auc.append(roc_auc_score(y_val, model.predict_proba(X_val)[:, 1]))\n    gc.collect()\n    print(f\"fold: {n+1}, auc: {auc[n]}\")\n    n+=1  ","2ece6eed":"np.mean(auc)","c48966ad":"# most 40 important features for lgb model\nfrom optuna.integration import lightgbm as lgb\nlgb.plot_importance(model, max_num_features=40, figsize=(10,10))\nplt.show()","7b133b86":"sub['target']=preds\nsub.to_csv('submission.csv', index=False)","63f193d5":"sub","b1942d66":"# I hope that you find this kernel usefull\ud83c\udfc4","34379862":"# Modeling","ce1b5542":"# Let's do some Exploratory Data Analysis (EDA)","eb2f733c":"# Making a Submission","beec5558":"# Hi kagglers \ud83d\ude4b\ud83c\udffb\u200d\u2642\ufe0f and Welcome to this new competition!"}}