{"cell_type":{"f7d9da89":"code","c2b05783":"code","42cfda4b":"code","709f9ad4":"code","8361db3b":"code","e17b0d56":"code","d9fe9d4f":"code","e8e28e55":"code","74c6cedb":"code","21ac25ce":"code","0aa773b9":"code","b56bc793":"code","0a54c930":"code","e0a5d345":"code","300b04e5":"code","fcb1fb1c":"code","aaa2b613":"code","6faa574c":"code","36eff8bf":"code","37fa18a0":"code","7e149b0d":"code","497f1b96":"code","6064802d":"code","fdaf10cf":"code","0c5d237a":"code","5acb57bc":"code","f8018d2f":"code","b7803399":"code","fb9568f2":"code","71f67333":"code","36193ff8":"code","162ce15c":"code","505429c2":"code","09c2918b":"code","59b6d8c2":"code","affd50f9":"code","01b1f51f":"code","0c9817d8":"code","d8deeed7":"code","c818157a":"code","ff9e271c":"code","3cf08524":"code","513f8e01":"code","75a44c18":"code","a8b92320":"code","426ed504":"code","a24e675d":"code","4ec106b6":"code","17a3ab54":"code","90eefec7":"code","c3e9fd68":"code","eba76281":"markdown","dd72fe54":"markdown","264a2bc8":"markdown","a0adb7ac":"markdown"},"source":{"f7d9da89":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c2b05783":"titanic_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")","42cfda4b":"titanic_train","709f9ad4":"titanic_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")","8361db3b":"titanic_test","e17b0d56":"gender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","d9fe9d4f":"from matplotlib import pyplot as plt","e8e28e55":"titanic_train.head()","74c6cedb":"titanic_train.shape","21ac25ce":"titanic_train['Survived'].value_counts()","0aa773b9":"plt.figure(figsize=(5,5))\nplt.bar(list(titanic_train['Survived'].value_counts().keys()),list(titanic_train['Survived'].value_counts()),color=['r','g'])\nplt.show()","b56bc793":"titanic_train['Pclass'].value_counts()","0a54c930":"plt.figure(figsize =(5,5))\nplt.bar(list(titanic_train['Pclass'].value_counts().keys()),list(titanic_train['Pclass'].value_counts()),color=[\"blue\",\"green\",\"Orange\"])\nplt.show()\n","e0a5d345":"titanic_train['Sex'].value_counts()","300b04e5":"plt.figure(figsize=(5,5))\nplt.bar(list(titanic_train['Sex'].value_counts().keys()),list(titanic_train['Sex'].value_counts()),color=\"Green\")","fcb1fb1c":"plt.figure(figsize=(7,6))\nplt.hist(titanic_train['Age'])\nplt.title(\"Distribution of Age\")\nplt.xlabel(\"Age\")\nplt.show()","aaa2b613":"titanic_train.isnull()","6faa574c":"titanic_train.drop(\"Cabin\",axis = True , inplace = True)\ntitanic_train.drop(\"Name\", axis = True , inplace = True)","36eff8bf":"titanic_train.dropna(inplace = True)","37fa18a0":"titanic_train['Sex'].replace({'male':0,'female':1},inplace = True)","7e149b0d":"titanic_train.head(5)","497f1b96":"titanic_train.drop([\"Ticket\",\"PassengerId\",\"Fare\",\"Embarked\"],axis=1,inplace = True)","6064802d":"titanic_train","fdaf10cf":"titanic_test","0c5d237a":"titanic_test['Sex'].replace({'male':0,'female':1},inplace=True)","5acb57bc":"titanic_test.drop(['PassengerId','Name','Cabin','Fare','Embarked','Ticket'],axis=1,inplace = True)","f8018d2f":"titanic_test['Age'] = titanic_test.fillna(titanic_test['Age'].mean())","b7803399":"from sklearn.model_selection import train_test_split","fb9568f2":"x = titanic_train.drop(['Survived'],axis=\"columns\")\ny = titanic_train['Survived']\n","71f67333":"x_train , x_test,y_train,y_test = train_test_split(x,y,test_size =0.2 , random_state = 0)","36193ff8":"print(len(x_train),len(y_train),len(x_test),len(y_test))","162ce15c":"from sklearn.tree import DecisionTreeClassifier","505429c2":"model1 = DecisionTreeClassifier()","09c2918b":"model1.fit(x_train,y_train)","59b6d8c2":"pred = model1.predict(x_test)","affd50f9":"pred","01b1f51f":"model1.score(x_test,y_test)","0c9817d8":"from sklearn.linear_model import LogisticRegression\nmodel2 = LogisticRegression()","d8deeed7":"model2.fit(x_train, y_train)","c818157a":"pred = model2.predict(x_test)","ff9e271c":"model2.score(x_test,y_test)","3cf08524":"from sklearn.ensemble import RandomForestClassifier\nmodel3 = RandomForestClassifier()","513f8e01":"model3.fit(x_train,y_train)","75a44c18":"pred = model3.predict(x_test)","a8b92320":"model3.score(x_test,y_test)","426ed504":"model2.fit(x,y)","a24e675d":"titanic_test","4ec106b6":"pred = model2.predict(titanic_test)","17a3ab54":"submission = pd.DataFrame({\"PassengerId\":gender_submission[\"PassengerId\"],\"Survived\":pred})","90eefec7":"submission","c3e9fd68":"submission.to_csv('submission.csv',index = False)","eba76281":"# ** Data wrangling**","dd72fe54":"# Split Data","264a2bc8":"# Train Data","a0adb7ac":"# Model Selection"}}