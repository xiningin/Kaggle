{"cell_type":{"a802b0ed":"code","c3bc8c62":"code","c727e174":"code","e944893e":"code","e1b767d1":"code","b8a39bac":"code","03c913e7":"code","4d42667a":"code","b34a028c":"code","50ac7d34":"code","3a3fd1f7":"code","87b46955":"code","145ac78b":"code","a5cc04ed":"code","5e91e43b":"code","970357ce":"code","43bd5082":"code","2996ce20":"markdown","6dfc47f9":"markdown","b366cbbc":"markdown","44c1bc35":"markdown","1372e8d8":"markdown","0f3d37b0":"markdown","2ee406be":"markdown","41b44c83":"markdown","57cc6e89":"markdown","606b4733":"markdown","6600b7aa":"markdown","cdf7dd13":"markdown","87baeba8":"markdown","44be9204":"markdown"},"source":{"a802b0ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c3bc8c62":"# Install the datatable package : \n\n!pip install pip --upgrade\n!pip install datatable # Turn 'ON'the internet option to install the latest version","c727e174":"#Import the datatable package\nimport datatable as dt\nprint(dt.__version__)","e944893e":"col_acq = ['LoanID','Channel','SellerName','OrInterestRate','OrUnpaidPrinc','OrLoanTerm','OrDate','FirstPayment','OrLTV','OrCLTV','NumBorrow','DTIRat','CreditScore','FTHomeBuyer','LoanPurpose','PropertyType','NumUnits','OccStatus','PropertyState','Zip','MortInsPerc','ProductType','CoCreditScore','MortInsType','RelocationMort']\n\ncol_per = ['LoanID','MonthRep','Servicer','CurrInterestRate','CAUPB','LoanAge','MonthsToMaturity','AdMonthsToMaturity','MaturityDate','MSA','CLDS','ModFlag','ZeroBalCode','ZeroBalDate','LastInstallDate','ForeclosureDate','DispositionDate','ForeclosureCosts','PPRC','AssetRecCost','MHRC','ATFHP','NetSaleProceeds','CreditEnhProceeds','RPMWP','OFP','NIBUPB','PFUPB','RMWPF',  'FPWA','SERVICING ACTIVITY INDICATOR']","e1b767d1":"# Reading the data into a Frame object\n\ndf_acq = dt.fread('..\/input\/Acquisition_2014Q3.txt',columns=col_acq)\ndf_per = dt.fread('..\/input\/Performance_2014Q3.txt', columns=col_per)","b8a39bac":"print(df_acq.shape)\nprint(df_per.shape)\n","03c913e7":"df_acq.head() ","4d42667a":"df_per.head(5)","b34a028c":"# Selecting only the LoanID and the ForeclosureDate column and discarding the rest\ndf_per = df_per[:,['LoanID','ForeclosureDate']]\ndf_per.head()","50ac7d34":"# Displaying only the unique Loan IDs in the Performance dataset\ndt.unique(df_per[:,\"LoanID\"]).head(5)","3a3fd1f7":"# Filtering\ndf_per = df_per[-1:,:, dt.by(dt.f.LoanID)]\ndf_per.head(5)","87b46955":"df_per.names = ['LoanID','Will_Default']\ndf_per.key = 'LoanID'\ndf= df_acq[:,:,dt.join(df_per)]","145ac78b":"# logical types\ndf[:,'Will_Default'].ltypes","a5cc04ed":"# Grouping by the 'Will Deafult' column\ndf[1:,:, dt.by(dt.f.Will_Default)].head(5)","5e91e43b":"# Replacing the dates in the Will_Default column with '0' and null values with 1\ndf[:,'Will_Default'] = df[:, {'Will_Default': dt.f['Will_Default']==\"\"}]\ndf.head(5)","970357ce":"df.shape","43bd5082":"#df.to_pandas()\n#df.to_csv(\"out.csv\")\n#df.to_jay(\"data.jay\")","2996ce20":"### Joining the Acquisition and performance datasets\nWe will perform an inner join on the Acquisition and Performance dataframes using the LoanID column. The resulting dataframe, df, will contain the ForeclosureDate column, and will be our target variable. For clarity, we will also rename this column as Will_Default.","6dfc47f9":"![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*8R1V4E00DJW1Vr9bh1hqkg.png)\n\n\n[Python datatable](https:\/\/datatable.readthedocs.io\/en\/latest\/?badge=latest) is a library that implements a wide (and growing) range of operators for manipulating two-dimensional data frames. It focuses on: **big data support, high performance, both in-memory and out-of-memory datasets, and multithreaded algorithms**. Datatable's powerful API is similar to R data.table's, and it strives in providing friendlier and intuitive API experience with helpful error messages to accelerate problem-solving.\n\n* Some of the notable features of datatable are:\n* Efficient multi-threaded algorithms\n* Memory-thrifty\n* Memory-mapped on-disk datasets\n* Native C++ implementation\n* Fully Opensourced","b366cbbc":"## References and useful resources\nHere are some of the resources that will be useful to understand and learn more about datatable\u2019s features:\n* [DatatableTon](https:\/\/github.com\/vopani\/datatableton) \u2014 100 datatable exercises over different sections structured as a course or tutorials to teach and learn for beginners, intermediates as well as experts\n* [An Overview of Python\u2019s Datatable package](https:\/\/towardsdatascience.com\/an-overview-of-pythons-datatable-package-5d3a97394ee9)\n* [Documentation](https:\/\/datatable.readthedocs.io\/en\/latest\/quick-start.html)\n* [EDA with Python datatable](https:\/\/lnkd.in\/fdVqJVr)\n* [H2O Light Fast Implementation of FTRL, 1 epoch 7sec](https:\/\/lnkd.in\/fJqcTYy)\n* [Getting started with Python datatable](https:\/\/lnkd.in\/fPaezRp)","44c1bc35":"### Grouping\nFiltering the frame so that it has only unique IDs, is equivalent to grouping. In that case we can achieve the same by:","1372e8d8":"![](https:\/\/image.slidesharecdn.com\/datatable-h2oworld-sf-190211190456\/95\/machine-learning-and-data-munging-in-h2o-driverless-ai-with-datatable-7-638.jpg?cb=1559075937)\n\nThe colour signifies the datatype where red denotes string, green denotes int and blue stands for float.","0f3d37b0":"The `fread()` function above is both powerful and extremely fast.It is 5x times faster than pandas.read_csv() It can automatically detect and parse parameters from the majority of text files, load data from .zip archives or URLs, read Excel files, and much more.\nLet's check the shape of both the dataframes","2ee406be":"Viewing the First few rows of the acquisitions and Performance Dataframe. Unlike Pandas, the .head() function displays the first 10 rows of a frame although you can specify the no. of rows to be displayed in the parenthesis","41b44c83":"In this notebook, we shall try to understand about data wrangling with datatable via a banking loan scenario using a subset of the Fannie Mae dataset. This notebook shows how to munge loan-level data and  obtain basic insights.","57cc6e89":"The dataframe has 394356 rows and 26 columns, and contains information regarding loan interest rate, payment dates, property state, and the last few digits of each property ZIP code, among several other things.From here the dataframe is ready to be fed into a model for training purposes. Once can also convert it into a Pandas dataframe, csv file or into a binary.jay file.","606b4733":"### Formatting the Target Column\nIn the Will_Default column, a '1'' is placed next to any borrower that was found to have defaulted, and a '0' is placed next to any borrower that has not defaulted i.e who has paid the loan on some date.","6600b7aa":"### Removing Duplicate LoanIDs from the Performance Dataframe\nThe Loan ID contains duplicated entities. Let's get rid of them.","cdf7dd13":"## Dataset\n\n![](https:\/\/images.unsplash.com\/photo-1560518883-ce09059eeffa?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=966&q=80)\n\nDataset is derived from [Fannie Mae's Single-Family Loan Performance Data(SFLP)](http:\/\/www.fanniemae.com\/portal\/funding-the-market\/data\/loan-performance-data.html) with all rights reserved by Fannie Mae. For the full raw dataset, you will need to register on the Fannie Mae's site. As of this writing, the most recent data set that's available is from the third quarter of 2019. However, this article uses the dataset for the third quarter of 2014 which can be downloaded from [here](https:\/\/app-freddie-mac.s3.amazonaws.com\/fannie-mae\/2014Q3.zip).\n\nThe downloaded dataset comprises of two files called **Acquisition.txt** and **Performance.txt**:\n\n* **The acquisition data**: contains personal information for each of the borrowers, including an individual's debt-to-income ratio, credit score, and loan amount, among several other things.\n\n* **The performance data**: contains information regarding loan payment history, and whether or not a borrower ended up defaulting on their loan.\n\nAdditional information regarding the contents of these two files can also be found on the website in the form of\u00a0[Glossary](https:\/\/s3.amazonaws.com\/dq-blog-files\/lppub_glossary.pdf)\u00a0 and [Columns](https:\/\/s3.amazonaws.com\/dq-blog-files\/lppub_file_layout.pdf) containing the columns in the Acquisition and Performance files\n\nThere are twwo reasons for using this dataset:\n1. The data size is ideal to demonstrate the capabilities of the datatable library.\n2. The dataset requires some preprocessng which can be then demonstrated via the datatable library.\n\n\n## Objective\nOur goal would be to predict from this data, with some accuracy, those borrowers who are most at risk of defaulting on their mortgage loans.\n\n## Loading data\n\nThe frame doesn't have the column headers which we will need to enter manually from the [columns](https:\/\/s3.amazonaws.com\/dq-blog-files\/lppub_file_layout.pdf) file.","87baeba8":"## Data Preprocessing\nData Tables like dataframes are columnar data structures. In datatable, the primary vehicle for all these operations is the square-bracket notation inspired by traditional matrix indexing but with more functionalities.\n\n![](https:\/\/miro.medium.com\/max\/723\/1*PI7NS0fRaqmY2rXnrmL_Lg.png)\n\n\nIn the performance data, we are really only interested in the LoanID and ForeclosureDate columns, as this will give us the borrower identification number and whether or not they ended up defaulting. ","44be9204":"The **[f-expression](https:\/\/datatable.readthedocs.io\/en\/latest\/f-expressions.html)** supports arithmetic operations as well as various mathematical and aggregate functions."}}