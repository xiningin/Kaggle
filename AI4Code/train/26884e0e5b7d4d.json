{"cell_type":{"14ef5185":"code","3a6ce90a":"code","2ec26371":"code","457e9d02":"code","9132863d":"code","f590a3af":"code","f317fdff":"code","9d5f6539":"code","166123f3":"code","45368322":"code","0e00309c":"code","d2e8ffde":"code","fa89bbbe":"code","973fcfde":"code","a9401217":"code","54bbcb27":"code","9a280a33":"code","2fda47b5":"code","b6ecc3ca":"code","b80b32af":"code","c2b539a4":"code","2e6daf28":"code","22bc6a53":"code","459a6627":"code","f9d8b876":"markdown","472e4325":"markdown","4acddf2a":"markdown","ae9c8198":"markdown","435ceadf":"markdown","a6996063":"markdown","5a285c8c":"markdown","86c6448d":"markdown","22ecc05c":"markdown","74515285":"markdown","39c206e9":"markdown","fbdbc141":"markdown","e0142360":"markdown","4beb50dc":"markdown","73fd8e04":"markdown","1e81c11d":"markdown","5ecfcfb3":"markdown","a304f948":"markdown","29024cb6":"markdown","2eedc1b3":"markdown","26932ed5":"markdown"},"source":{"14ef5185":"import pandas as pd\n\n# Not limiting the column number when displaying dataframe\npd.set_option(\"display.max_columns\", None)","3a6ce90a":"df = pd.read_csv(\"..\/input\/autism-screening\/Autism_Data.arff\", sep = r',', skipinitialspace = True)\n\ndf = df.rename(columns = {\"austim\": \"autism\"})\ndf = df.replace(\"yes\", 1)\ndf = df.replace(\"no\", 0)\ndf = df.replace(\"f\", 1)\ndf = df.replace(\"m\", 0)\n\ndf.head()","2ec26371":"df.tail()","457e9d02":"print(df.columns)","9132863d":"rows = df.shape[0]\ncols = df.shape[1]\n\nprint(\"Before cleaning, there are \" + str(rows) + \" rows and \" + str(cols) + \" columns in this dataframe.\")","f590a3af":"dupRows = df.duplicated().sum()\nprint(\"There are \" + str(dupRows) + \" duplicated rows in the dataframe.\")","f317fdff":"df.isnull().sum()","9d5f6539":"df.nunique()","166123f3":"df.info()","45368322":"df.describe()","0e00309c":"df.memory_usage()","d2e8ffde":"df.corr()","fa89bbbe":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ncorrelations = df.corr()\n\nplt.figure(figsize = (16, 12))\nplt.title(\"Heatmap displaying the correlations between all columns\", fontsize = 20)\nsns.heatmap(correlations, annot = True, cmap = \"mako\")","973fcfde":"autcorr = df.corr()[\"autism\"]\nautcorr = pd.DataFrame(autcorr)\nautcorr","a9401217":"%matplotlib inline\n\nplt.figure(figsize = (16, 12))\nplt.title(\"Correlations between input columns and target column 'autism'\", fontsize = 20)\nplt.xlabel(\"Columns\", fontsize = 16)\nplt.ylabel(\"Correlation factor\", fontsize = 16)\nplt.plot(autcorr, color = \"magenta\", linestyle = \"\", marker = \"X\")\nplt.show()","54bbcb27":"no = df.value_counts([\"autism\"])[0]\nyes = df.value_counts([\"autism\"])[1]\n\nprint(str(no) + \" patients apparantly have no autism, while \" + str(yes) + \" people apparantly do.\")","9a280a33":"Category = [\"No Autism\", \"Autism\"]\n\nplt.figure(figsize = (16, 12))\n\nplt.title(\"Number of Health Attestations vs. Number of Autism Diagnoses\", fontsize = 20)\n\nplt.bar(Category, df.value_counts([\"autism\"]), width = 0.5, edgecolor = \"k\", linewidth = 1, color = \"orange\")\n\nplt.xlabel(\"Category\", fontsize = 16)\nplt.ylabel(\"Numbers\", fontsize = 16)\n\nplt.yticks(ticks = [x * 100 for x in range(11)])\n\nplt.show()","2fda47b5":"men = df.value_counts([\"gender\"])[0]\nwomen = df.value_counts([\"gender\"])[1]\n\nprint(\"Out of all people diagnosed with autism, there were \" + str(men) + \" men and \" + str(women) + \" women.\")","b6ecc3ca":"pd.crosstab(df[\"age\"], df[\"autism\"]) ","b80b32af":"ct = pd.crosstab(df[\"age\"], df[\"autism\"]) \n\nplt.figure(figsize = (16, 12))\nplt.title(\"Crosstab showing how many autism patients have what age\", fontsize = 20)\nsns.heatmap(ct, cmap = \"YlGnBu\", annot = True, cbar = True, fmt = \"g\")","c2b539a4":"pd.crosstab(df[\"ethnicity\"], df[\"autism\"])","2e6daf28":"ct = pd.crosstab(df[\"ethnicity\"], df[\"autism\"]) \n\nplt.figure(figsize = (16, 12))\nplt.title(\"Crosstab showing how many autism diagnosis come from which ethnicity\", fontsize = 20)\nsns.heatmap(ct, cmap = \"RdPu\", annot = True, cbar = True, fmt = \"g\")","22bc6a53":"pip install pandas-profiling[notebook]","459a6627":"import pandas_profiling\nfrom pandas_profiling import ProfileReport\n\nprofile = ProfileReport(df, title = \"Pandas Profiling Report\", explorative = True)\n\nprofile.to_widgets()","f9d8b876":"#### How many people have been diagnosed with autism?","472e4325":"#### How much do the columns correlate with each other?","4acddf2a":"The **corr()**-function is used to find the pairwise correlation of all columns in the dataframe. Any missing values are automatically excluded. For any non-numeric data type columns in the dataframe, it is ignored. This function comes in handy while we doing the Feature Selection by observing the correlation between features and target variable or between variables.","ae9c8198":"#### Any null values? If yes, how many in which column?","435ceadf":"Apparantly, most people appearing in these statistics were younger people. However, among those who were diagnosed with autism, most were middleaged (early 20s to mid 40s) with very few people younger or older than that.","a6996063":"## **Exploratory Data Analysis (EDA)**","5a285c8c":"#### How much memory does each column need (in bytes)?","86c6448d":"#### Loading and Displaying data","22ecc05c":"There are no null values in the dataframe.","74515285":"#### How many people of what ethnicity were diagnosed?","39c206e9":"# **Autism EDA**","fbdbc141":"#### How much are the columns correlation with our target\/pred column **autism**?","e0142360":"#### How is the Male-Female-Ratio among people with an autism diagnosis?","4beb50dc":"#### Number of columns","73fd8e04":"#### Visualizing the correlation table above","1e81c11d":"#### How many people of what age were diagnosed?","5ecfcfb3":"#### Shape of the train dataset","a304f948":"#### Any duplicates?","29024cb6":"#### Sum of unique values per column","2eedc1b3":"#### Statistics for each column","26932ed5":"#### Data types of the columns"}}