{"cell_type":{"3d64a4fb":"code","e43fabbf":"code","4cfefd33":"code","6160d75b":"code","52fe6265":"code","90815572":"code","1fa0d3ae":"code","fbb8473c":"code","078a4d22":"code","b8ab3d6d":"code","3dd2876d":"code","83eaa57d":"code","731e1c02":"code","86299eb7":"code","a2abc49f":"code","000b8dd9":"code","2ecf8b0c":"code","6a02c2d8":"markdown","32353a03":"markdown","2ee73607":"markdown","bb99f46f":"markdown","3e2cec7a":"markdown","946823df":"markdown","57040a1d":"markdown","64a5918a":"markdown","21d484b8":"markdown","6e2b44d5":"markdown","a5dfe2a4":"markdown","a8eaa541":"markdown","1ac32647":"markdown","28f290c7":"markdown","57d7a9fa":"markdown","e1795dc2":"markdown","bc1e1f1a":"markdown","9318084b":"markdown","a8f879c8":"markdown"},"source":{"3d64a4fb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e43fabbf":"data = pd.read_csv(\"..\/input\/ixigo-practice\/analytics_test.csv\",sep='\\t',)\nprint('Shape of raw data: ',data.shape)\nprint(data.columns)","4cfefd33":"data.head()","6160d75b":"from datetime import datetime\ndata['bookingDate'] = data['bookingDate'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d %H:%M:%S'))\ndata['onwardDeparture'] = data['onwardDeparture'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d %H:%M:%S'))\ndata['booking_month'] = data['bookingDate'].apply(lambda x: x.month)\ndata['departure_month'] = data['onwardDeparture'].apply(lambda x: x.month)\ndata.head()","52fe6265":"print(data.booking_month.unique())\nprint(data.departure_month.unique())","90815572":"data['orig_dest_pair'] = data['originCode'] + \" \" + data['destinationCode']\nprint('Unique pairs are: ',data['orig_dest_pair'].unique())","1fa0d3ae":"b = data[data.userType=='newUser'].groupby(['orig_dest_pair','booking_month']).aggregate({'userType':'count'})\nb.reset_index(inplace=True,drop=False)\nb.rename(columns = {'userType':'num_new_user_bookings'},inplace=True)\nb","fbb8473c":"a = data[data.booking_month == 6].groupby(['orig_dest_pair','booking_month']).aggregate({'userType':'count'})\na.reset_index(inplace=True,drop=False)\na.rename(columns = {'userType':'num_all_user_bookings'},inplace=True)\na","078a4d22":"merged_data = a.merge(b,on=['orig_dest_pair','booking_month'])\nmerged_data['perc_of_new_users'] = round(merged_data['num_new_user_bookings']\/merged_data['num_all_user_bookings']*100,2)\nmerged_data.head()","b8ab3d6d":"sns.barplot(y='perc_of_new_users',x='orig_dest_pair',data=merged_data)","3dd2876d":"print('Different device types')\nlist(set(data.devicePlatform))","83eaa57d":"num_users_web = data[(data.devicePlatform=='ixiweb')].groupby(['userId']).aggregate({'bookingId':'count'})\nprint('Number of users with >2 bookings on web: ',sum((num_users_web.bookingId>2)==True))","731e1c02":"def adjust_advance_month(book_month,dep_month):\n    a = dep_month - book_month\n    if dep_month < book_month:\n        a = dep_month + (12-book_month)\n    return a","86299eb7":"filter_d = data[(data.bookingDate<data.onwardDeparture)][['bookingId','booking_month','departure_month']]\nfilter_d['months_advance'] = filter_d.apply(lambda x:adjust_advance_month(x.booking_month,x.departure_month),axis=1)\na = filter_d.groupby('months_advance').aggregate({'bookingId':'count'})\na.reset_index(inplace=True,drop=False)\na.rename(columns = {'bookingId':'num_bookings'},inplace=True)\nsns.barplot(y='num_bookings', x='months_advance',  data=a[a.months_advance>0])\n","a2abc49f":"num_users_web = data[(data['devicePlatform']=='iximaad') | (data['devicePlatform']=='iximaio')].groupby(['userId']).aggregate({'bookingId':'count'})\nprint('Number of user bookings on Andoid orr iOS: ',sum((num_users_web.bookingId)==True))","000b8dd9":"print('Number of users reactivated their accounts: ',\n      data[data['userType']=='Reactivated'].groupby(['booking_month']).aggregate({'userType':'count'}))\n","2ecf8b0c":"data[data['isInternational']].shape","6a02c2d8":"# 1. No. of new users in orig-dest pairs","32353a03":"# 2. Find the number of users who have booked more than twice on our Web platforms?","2ee73607":"The definition of advance is not given. I am assuming month of booking prior to the departure month would be definition of advance. Also, the metric for which the trend is to be observed is not given. I am assuming #booking made in N months in advance.\n\nSince we have to figure out the trend, so filtering only reqd data.","bb99f46f":"Defining function to create number of months advance column","3e2cec7a":"# 4. What percentage of bookings do we get through apps (Android + Ios)?","946823df":"All Users distribution","57040a1d":"# 6. Identify and target users likely to book international flight","64a5918a":"Percentage of new users","21d484b8":"We only have the June booking month data. So to get month-wise percentage we just need to filter data for June month booking and take the count.","6e2b44d5":"# Preprocessing dates","a5dfe2a4":"There are only 36 users in the data who reactivate their account.","a8eaa541":"# 0. Importing data","1ac32647":"We don't have any international flight booking data. So we can't see historiacl trend of those bookings across different metrics.\n\nHowever, one general notion is that since international flights are expensive, users book their fights well in advance. So one way to make cohorts of users is by creating bands of 'months from booking' and higher bands would most likely be booking of international flights.\n\nTo identify users who are likely to book international flights is by seeing their past booking patterns. For ex:\n\n1) How many times in past 1 or 2 years they have booked an international flight\n\nIt will help us to  make an informed decision how frequent are they in booking international flights. More frequency would translate to higher probability of our prediction.\n\n2) Have they booked earlier international flights on vacation\/festival period?\n\nIf yes, they are likely to book again in upcoming festivals.\n\n3) Modeling the user behavior\n\nWe can model the user behavior through techniques like decision tree classifier or gradient boosting. It will help us to target a month in which a user is most likely to book an international flight. Out of 12 months, we can take top 2-3 most probable months in which a user is most likely to book.\n\nApproach:\na) See the historical trends and create features to capture those. For ex: is booking month a festival\/vacation month, months booked in advance, if offer period, macro scenarios like industry wide teep discounts on flights, if both way flight then duration of stay etc\n\nb) It would be a classification problem where we have to calculate proabability of each customer booking a flight. Some great classification techniques are Decision tree classifier. Since the international flight data would be less we might need to do oversampling\/undersampling to make our model robust against class imbalance. We can control parameters like height of the tree to adjust overfitting.\n\nc) Once we get the probabilities, we will make bands of users based on probability outcome. For users in mid to higher bands to need to target them specifically.\n\nTargetting those customers:\n\nThe customer identification is purely based on his past international bookings so once we get the users probable month of booking we can check the user's history whether he is more likely to book if there was an offer going on. If so, we can offer him discounts. It will increase the probability of his booking the flight.\nApart from direct flight discounts we can offer users to book through our app and get benefits from our partner brands.","28f290c7":"New User distribution","57d7a9fa":"# 3.What is trend for Advance Bookers","e1795dc2":"# 5. Number of users who reactivate their account per month?","bc1e1f1a":"Since we have only 1 month of booking data, we can't see the trend month wise.","9318084b":"Converting to datetime format","a8f879c8":"It is evident that most of the customers book only 1 month prior."}}