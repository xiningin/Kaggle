{"cell_type":{"965adc04":"code","8daa4ef8":"code","76b63581":"code","061c845c":"code","512db8ec":"code","b0dec199":"code","cf1767fe":"code","1386b515":"code","ddb775ac":"code","b891c254":"code","ddd39aaf":"markdown","e3e322f3":"markdown","46c3a867":"markdown","5904c736":"markdown","48393da9":"markdown"},"source":{"965adc04":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nimport seaborn as sns \nimport glob \nimport matplotlib.pyplot as plt \n'''for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))'''\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8daa4ef8":"train_label = pd.read_csv('\/kaggle\/input\/siim-covid19-detection\/train_image_level.csv')\ntrain_label.head()","76b63581":"train_study = pd.read_csv('\/kaggle\/input\/siim-covid19-detection\/train_study_level.csv')\ntrain_study.head()","061c845c":"print(len(train_study), len(train_label))","512db8ec":"col = train_study.columns\ncol","b0dec199":"plt.figure(1)\nfor i in range(len(col)-1):\n    #     plt.subplot(1,4,i)\n    plt.figure(i)\n    sns.countplot(train_study[col[i+1]])\n    plt.show()","cf1767fe":"sns.countplot(train_study['Typical Appearance'])\nplt.show()","1386b515":"import pydicom as dcm ","ddb775ac":"file = glob.glob('\/kaggle\/input\/siim-covid19-detection\/train\/*\/*\/*')\nlen(file)","b891c254":"plt.imshow(dcm.dcmread(file[0]).pixel_array, cmap = 'gray')","ddd39aaf":"# Read the .csv files ","e3e322f3":"# Read the .dicom images ","46c3a867":"## train_study_level.csv file labels \n\n\n- **id** - unique study identifier\n- **Negative for Pneumonia** - 1 if the study is negative for pneumonia, 0 otherwise\n- **Typical Appearance** - 1 if the study has this appearance, 0 otherwise\n- **Indeterminate Appearance**  - 1 if the study has this appearance, 0 otherwise\n- **Atypical Appearance**  - 1 if the study has this appearance, 0 otherwise","5904c736":"- **train_study_level.csv** - the train study-level metadata, with one row for each study, including correct labels.\n\n- **train_image_level.csv** - the train image-level metadata, with one row for each image, including both correct labels and any bounding boxes in a dictionary format. Some images in both test and train have multiple bounding boxes.\n\n- **sample_submission.csv** - a sample submission file containing all image- and study-level IDs.","48393da9":"# train_image_level.csv\n\n- **id** - unique image identifier\n- **boxes** - bounding boxes in easily-readable dictionary format\n- **label** - the correct prediction label for the provided bounding boxes"}}