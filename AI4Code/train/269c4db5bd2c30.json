{"cell_type":{"976ca9e2":"code","1e38a2f8":"code","b252ddbe":"code","a035d7f2":"code","8d984282":"code","3d467e86":"code","2f6994e7":"code","247ea1fe":"code","cbf59cb0":"code","2e676079":"code","0b935713":"code","83ddf78b":"code","68f85a61":"code","75e65002":"code","27759a9c":"code","7c85f03d":"code","e2b729b4":"code","bfd800bf":"code","de0700ca":"code","5cd4196a":"code","540236b7":"code","415f2da9":"code","a429383f":"code","934f11de":"code","2dd4a700":"code","9a33bece":"code","6dd4c774":"code","d2841486":"code","2d5b09a4":"code","fce5ecee":"code","f1cb6e39":"code","114367ff":"code","2ec83953":"code","621a6275":"code","ab35a522":"code","6e06cc8c":"code","59a09425":"code","443087f3":"code","24972335":"code","a5b752c3":"code","754fbf9b":"code","a893b992":"code","c371c5d4":"markdown","0c64496d":"markdown"},"source":{"976ca9e2":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.cluster import AgglomerativeClustering\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\nfrom sklearn.decomposition import PCA\nfrom sklearn.decomposition import IncrementalPCA\nimport sklearn.utils","1e38a2f8":"data = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndata.head(10)","b252ddbe":"data.describe()","a035d7f2":"data.info()","8d984282":"print(data.shape)","3d467e86":"df = data.iloc[:, 1:data.shape[1]]\ndf","2f6994e7":"data.isnull().sum()","247ea1fe":"data.columns","cbf59cb0":"plt.figure(figsize=(20,20), dpi=100)\n\nplt.subplot(4,3,1)\nsns.boxplot(x = 'Author', data = data)\n\nplt.subplot(4,3,2)\nsns.boxplot(x = 'User Rating', data = data)\n\nplt.subplot(4,3,3)\nsns.boxplot(x = 'Reviews', data = data)\n\nplt.subplot(4,3,4)\nsns.boxplot(x = 'Price', data = data)\n\nplt.subplot(4,3,5)\nsns.boxplot(x = 'Year', data = data)\n\nplt.subplot(4,3,6)\nsns.boxplot(x = 'Genre', data = data)\n\nplt.subplot(4,3,7)\nsns.boxplot(x = 'Price', data = data)\n\nplt.subplot(4,3,8)\nsns.boxplot(x = 'Year', data = data)\n\nplt.subplot(4,3,9)\nsns.boxplot(x = 'Genre', data = data)\n\n\nplt.show()","2e676079":"from scipy import stats\n\nz = np.abs(stats.zscore(data[['Author', 'User Rating', 'Reviews', 'Price', 'Year', 'Genre', 'Price']]))\nprint(z)\nprint(\"*******************************************************************************\")\n\n# threshold = 3  # selecting 3 as the threshold to identify outliers\nprint('Below are the outlier points along with the respective column numbers in the second array')\nprint(\"\\n\")\nprint(np.where(z > 3))","0b935713":"data_outliers_removed = data[(z<3).all(axis=1)]","83ddf78b":"data_outliers_removed.head()","68f85a61":"print('Shape of dataframe before outlier removal: ' + str(data.shape))\nprint(\"\\n\")\nprint('Shape of dataframe after outlier removal: ' + str(data_outliers_removed.shape))","75e65002":"num_vars = data_outliers_removed.drop('Name',axis =1)  \ncat_vars = data_outliers_removed['Name']","27759a9c":"num_vars","7c85f03d":"plt.figure(figsize = (20,10))       \nsns.heatmap(num_vars_scaled_df.corr(),annot = True)","e2b729b4":"pca = PCA(random_state=42)\npca.fit(num_vars_scaled)","bfd800bf":"var_cumu = np.cumsum(pca.explained_variance_ratio_)\nfig = plt.figure(figsize=[12,8],dpi=80)\nplt.vlines(x=4, ymax=1, ymin=0, colors=\"r\", linestyles=\"--\")\nplt.hlines(y=0.95, xmax=30, xmin=0, colors=\"g\", linestyles=\"--\")\nplt.plot(var_cumu)\nplt.ylabel(\"Cumulative variance explained\")\nplt.show()","de0700ca":"pca_final = IncrementalPCA(n_components=4)\nnum_vars_pca_final = pca_final.fit_transform(num_vars_scaled)\nprint(num_vars.shape)\nprint(num_vars_pca_final.shape)","5cd4196a":"ssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=1000)\n    kmeans.fit(num_vars_pca_final)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.plot(ssd)","540236b7":"range_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=1000)\n    kmeans.fit(num_vars_pca_final)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(num_vars_pca_final, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","415f2da9":"kmeans = KMeans(n_clusters=4, max_iter=1000, random_state=42)\nkmeans.fit(num_vars_pca_final)","a429383f":"data_outliers_removed['K-Means_Cluster_ID'] = kmeans.labels_","934f11de":"Reviewsy_df_clus_temp = df[[\"Author\",\"Year\",\"Price\",]]\nReviewsy_df_clus_temp = StandardScaler().fit_transform(Reviewsy_df_clus_temp)\ndb = DBSCAN(eps = 0.3, min_samples = 3).fit(Reviewsy_df_clus_temp)\ndataFrameLabels = pd.DataFrame(db.labels_)\ndataFrameLabels.head(15)","2dd4a700":"colours = {}\ncolours[0]  = 'red' # Zero values on labels\ncolours[1]  = 'green'# Minus 1 values on labels\ncolours[-1]  = 'blue'# Two values on labels","9a33bece":"cvec = [colours[label] for label in dataFrameLabels]\ncolors = ['red', 'green', 'blue'] \nprint(cvec)\nset(cvec)","6dd4c774":"colors = ['r','g','b']\nr = plt.scatter( df[\"Author\"],df[\"Price\"], marker ='o', color =colours[0] ) \ng = plt.scatter( df[\"Year\"],df[\"Price\"], marker ='o', color = colours[1]) \nb = plt.scatter( df[\"Year\"],df[\"Author\"], marker ='o', color = colours[-1]) \nplt.legend((r, g, b), \n           ('Label 0', 'Label 2', 'Label -1'), \n           scatterpoints = 1, \n           loc ='upper right', \n           ncol = 3, \n           fontsize = 8) ","d2841486":"num_vars_scaled_df.head()","2d5b09a4":"cl_mergings = linkage(num_vars_scaled_df, method=\"complete\", metric='euclidean')\ndendrogram(cl_mergings)\nplt.show()","fce5ecee":"cl_cluster_labels = cut_tree(cl_mergings, n_clusters=4).reshape(-1, )\ncl_cluster_labels","f1cb6e39":"data_outliers_removed[\"Hierarchical_Cluster_labels\"] = cl_cluster_labels","114367ff":"data_outliers_removed.head()","2ec83953":"plt.figure(figsize=(16,14), dpi=100)\n\nplt.subplot(3,2,1)\nsns.boxplot(x='K-Means_Cluster_ID', y='Price', data=data_outliers_removed)\n\nplt.subplot(3,2,2)\nsns.boxplot(x='Hierarchical_Cluster_labels', y='Price', data=data_outliers_removed)\n\nplt.subplot(3,2,3)\nsns.boxplot(x='K-Means_Cluster_ID', y='Author', data=data_outliers_removed)\n\nplt.subplot(3,2,4)\nsns.boxplot(x='Hierarchical_Cluster_labels', y='Author', data=data_outliers_removed)\n\nplt.subplot(3,2,5)\nsns.boxplot(x='K-Means_Cluster_ID', y='Year', data=data_outliers_removed)\n\nplt.subplot(3,2,6)\nsns.boxplot(x='Hierarchical_Cluster_labels', y='Year', data=data_outliers_removed)","621a6275":"plt.figure(figsize=(15,6),dpi=90)\n\nplt.subplot(1,2,1)\nsns.scatterplot(x='Price',y='Author',data=data_outliers_removed,hue='K-Means_Cluster_ID')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='Price',y='Author',data=data_outliers_removed,hue='Hierarchical_Cluster_labels')","ab35a522":"plt.figure(figsize=(15,6),dpi=90)\n\nplt.subplot(1,2,1)\nsns.scatterplot(x='Price',y='Year',data=data_outliers_removed,hue='K-Means_Cluster_ID')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='Price',y='Year',data=data_outliers_removed,hue='Hierarchical_Cluster_labels')","6e06cc8c":"plt.figure(figsize=(15,6),dpi=90)\n\nplt.subplot(1,2,1)\nsns.scatterplot(x='Author',y='Year',data=data_outliers_removed,hue='K-Means_Cluster_ID')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='Author',y='Year',data=data_outliers_removed,hue='Hierarchical_Cluster_labels')","59a09425":"K_Means_books = data_outliers_removed[data_outliers_removed['K-Means_Cluster_ID'] == 1]\nK_Means_books.head(10)","443087f3":"Hirarchical_books = data_outliers_removed[data_outliers_removed['Hierarchical_Cluster_labels'] == 0]\nHirarchical_books.head(10)","24972335":"common_books = pd.merge(K_Means_books,Hirarchical_books,how='inner',on=['Name', 'Author', 'User Rating', 'Reviews', 'Price', 'Year'\n                                                                        , 'Genre', 'Price', 'K-Means_Cluster_ID','Hierarchical_Cluster_labels'])\ncommon_books","a5b752c3":"common_books[['Name', 'Author', 'Year','Price']].head(10)","754fbf9b":"common_books_final = common_books[['Name', 'Author','Year','Price']].sort_values(['Author','Year'],ascending=[False,True])\ncommon_books_final.head(15)","a893b992":"final_books = common_books_final[(common_books_final['Author'] > 80) &  (common_books_final['Year'] < 1200)]\nfinal_books = final_books.reset_index(drop=True)\nfinal_books","c371c5d4":"scaler = StandardScaler()\nnum_vars_scaled = scaler.fit_transform(num_vars)\nnum_vars_scaled_df = pd.DataFrame(num_vars_scaled,columns=num_vars.columns)\nnum_vars_scaled_d","0c64496d":"PCA"}}