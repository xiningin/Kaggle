{"cell_type":{"5ce6db9e":"code","26770915":"code","7dce44b8":"code","52885242":"code","2735c7dc":"code","8775d0c5":"code","1c68e60d":"code","523e6fd7":"code","87c1c2a7":"code","08a44ef1":"code","0a89b9cf":"code","406d056e":"code","f683744a":"code","962d2a2f":"code","98996379":"code","97cbef7f":"code","0350f936":"code","3901baef":"code","474e620e":"code","6ab6b090":"code","c14537ac":"code","15b25285":"code","876aa1b1":"code","0b4b092e":"code","2261bfe3":"code","b7b8d03e":"code","ca4cee8a":"code","ee1b81e8":"code","158400e8":"code","48bcdb08":"code","91f3157a":"code","2f7290eb":"code","b2d060e7":"code","220fa9e9":"code","fd050db4":"code","571c9b1d":"code","1c4dd3c3":"markdown","25fefd7c":"markdown","1442195c":"markdown","72be389a":"markdown","f498f39f":"markdown","c7b74f59":"markdown","856456e8":"markdown","ee513fe0":"markdown","16eac258":"markdown","904751c3":"markdown"},"source":{"5ce6db9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","26770915":"import warnings\nimport matplotlib.pyplot as plt\nfrom fbprophet import Prophet\nwarnings.simplefilter('ignore')","7dce44b8":"%config Completer.use_jedi = False\n\n#for autocomplete","52885242":"df = pd.read_csv('\/kaggle\/input\/indian-earthquakes-dataset2018-onwards\/Indian_earthquake_data.csv')\ndf.head()","2735c7dc":"df.info()","8775d0c5":"df[['time']] = df['Origin Time'].apply(lambda x: str(x)[0:11])\ndf","1c68e60d":"df = df[['time','Depth','Magnitude']]\ndf","523e6fd7":"df['time'] = pd.to_datetime(df['time'])\ndf.info()","87c1c2a7":"plt.figure(figsize=(10,5))\nplt.plot(df.time,df.Magnitude)\nplt.show()","08a44ef1":"grouped_df = df.groupby(by='time').mean()\ngrouped_df","0a89b9cf":"grouped_df.Magnitude.plot()","406d056e":"model_df = grouped_df.drop(columns=['Depth'])\nmodel_df","f683744a":"model_df = model_df.resample('D').sum()\nmodel_df","962d2a2f":"model_df.reset_index(inplace=True)","98996379":"model_df.columns = ['ds','y']\n","97cbef7f":"model_df","0350f936":"train_df = model_df[:-30]\ntest_df = model_df[-30:]","3901baef":"train_df","474e620e":"test_df","6ab6b090":"m = Prophet(daily_seasonality=True,yearly_seasonality=True)\nmodel = m.fit(train_df)","c14537ac":"future = m.make_future_dataframe(periods=50,freq='D')\nforecast = m.predict(future)\nforecast.head()","15b25285":"forecast_test = m.predict(test_df)\nforecast_test.head()","876aa1b1":"future_eq = m.plot(forecast)","0b4b092e":"m.plot_components(forecast);","2261bfe3":"forecast_test = forecast_test[['ds','yhat', 'yhat_lower', 'yhat_upper']]\nforecast_test","b7b8d03e":"m.plot(forecast_test);","ca4cee8a":"plt.figure(figsize=(10,5))\nplt.plot(forecast_test.ds,forecast_test.yhat,c ='b',label='Forecast')\nplt.plot(test_df.ds,test_df.y,c='r',label='Actual data')\nplt.legend()","ee1b81e8":"resampled_data = model_df.copy()\nresampled_data","158400e8":"resampled_data.set_index('ds',inplace = True)","48bcdb08":"monthly_forecast = resampled_data.resample('M').mean()\nmonthly_forecast","91f3157a":"monthly_forecast.reset_index(inplace = True)","2f7290eb":"monthly_forecast","b2d060e7":"plt.plot(monthly_forecast.ds,monthly_forecast.y)","220fa9e9":"m_month = Prophet(seasonality_mode='multiplicative')\nmodel = m_month.fit(monthly_forecast)","fd050db4":"future_month = m_month.make_future_dataframe(periods=5,freq='M')\nforecast_month = m_month.predict(future_month)\nforecast_month.tail()","571c9b1d":"m_month.plot(forecast_month);","1c4dd3c3":"With the help of pandas we can import the dataset","25fefd7c":"# Inference\n\nSince, we have less number of data, we get an overall aggregated range of prediction. We can infer that the most of the points, lie between the upper and the lower limit ( filled with blue area)","1442195c":"Now we have a subset from the original dataset, let us visualize the data and gather the insights","72be389a":"We will fit the resampled data in the model and see the predictions","f498f39f":"# **Monthly forecasting**","c7b74f59":"# Inference\n\n* From this inference we can tell that the there is a high chance for earthquake on Fridays and it is likely to always happen during midnights (comparing all the days of the week)\n\n* In addition to that, we can also expect a high possibility of earthquake during the month of August and April. There is a low possibility in september and January respectively","856456e8":"For future predictions the dataset is divided into two; train and test. This will help us to see the test data predictions.","ee513fe0":"# We will import the necessary libarires for the dataset. \n\n* **warnings** -> to eliminate unnecessary warnings\n* **matplotlib** -> for visualization\n* **prophet** -> forecasting model","16eac258":"As we can see that the dataset is having 6 columns, we are having the date column as object. We can try to strip the date column first from the hourly time and then we can convert it into a date frame object","904751c3":"In order to proceed with the modeling, we have to group the data by its sum and then fit the resampled model in the fit method"}}