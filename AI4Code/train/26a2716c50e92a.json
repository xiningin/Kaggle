{"cell_type":{"022b370d":"code","ea502d65":"code","9ea931d5":"code","0f4f890d":"code","93f0d700":"code","42c4e904":"code","81d9c911":"code","868372ca":"code","158e87f0":"code","6d11aa46":"code","8d1fc865":"code","4584afe2":"code","522f476d":"code","6b1fccfc":"code","32dd345c":"code","2e33d94b":"code","6858bb04":"code","5d1c1321":"markdown","765930dc":"markdown","b6bd799c":"markdown","021058ca":"markdown","af5af387":"markdown","566845cc":"markdown","4d435f1d":"markdown","c34734e2":"markdown","5535ab53":"markdown","64e13a4d":"markdown","373c25a2":"markdown","4ad79eb3":"markdown","bfe0158b":"markdown","8f234363":"markdown","e40a9631":"markdown","44908985":"markdown","4b2cc8b5":"markdown","0eb1254a":"markdown","1df2ce47":"markdown","8d20756e":"markdown","b657d88b":"markdown"},"source":{"022b370d":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import linear_model\nfrom sklearn.model_selection import cross_validate, cross_val_score, GroupKFold, KFold\nfrom sklearn.dummy import DummyClassifier\nfrom sklearn.model_selection import RandomizedSearchCV","ea502d65":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","9ea931d5":"train.head()","0f4f890d":"plt.figure(figsize=(10,10))\nsns.heatmap(train.corr(), annot=True, cmap=\"Blues\")","93f0d700":"plt.figure(figsize=(9,6))\nsns.barplot(x='Sex',y='Survived',data=train)","42c4e904":"plt.figure(figsize=(9,6))\nsns.barplot(x='Pclass', y='Survived', data=train)","81d9c911":"train.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)\ntest.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)","868372ca":"new_data_train = pd.get_dummies(train)\nnew_data_test = pd.get_dummies(test)\n\nnew_data_train.head()","158e87f0":" new_data_train.isnull().sum().sort_values(ascending=False).head(10)","6d11aa46":"new_data_train['Age'].fillna(new_data_train['Age'].mean(), inplace=True)\nnew_data_test['Age'].fillna(new_data_test['Age'].mean(), inplace=True)\n\nnew_data_test.isnull().sum().sort_values(ascending=False).head(10)","8d1fc865":"new_data_train['Fare'].fillna(new_data_train['Fare'].mean(), inplace=True)\nnew_data_test['Fare'].fillna(new_data_test['Fare'].mean(), inplace=True)\n\nnew_data_test.isnull().sum().sort_values(ascending=False).head(10)","4584afe2":"x = new_data_train.drop('Survived', axis=1)\ny = new_data_train['Survived']","522f476d":"model = DecisionTreeClassifier(max_depth=3)\nmodel.fit(x, y)\n\naccuracy = round(model.score(x, y) * 100, 2)\n\nprint(accuracy)","6b1fccfc":"SEED = 301\nnp.random.seed(SEED)\n\nparameters = {\n    \"max_depth\": [3, 5],\n    \"min_samples_split\": [32, 64, 128],\n    \"min_samples_leaf\": [32, 64, 128],\n    \"criterion\": [\"gini\", \"entropy\"]\n}\n\nsearchGrid = RandomizedSearchCV(DecisionTreeClassifier(), parameters, n_iter=16, cv=KFold(n_splits=5, shuffle=True), random_state=SEED)\nsearchGrid.fit(x, y)\n\nscores = cross_val_score(searchGrid, x, y, cv=KFold(n_splits=5, shuffle=True))\n\naverage = scores.mean()\ndeviation  = scores.std()\n\nbest_estimator = searchGrid.best_estimator_\nprint(best_estimator)\nprint(\"Accuracy average %.2f\" % round(average * 100, 2))\nprint(\"Deviation [%.2f, %.2f]\" % (round((average - 2 * deviation) * 100, 2), round((average + 2 * deviation) * 100, 2)))","32dd345c":"model = DummyClassifier()\nresults = cross_validate(model, x, y, cv=10, return_train_score=False)\naccuracy = round(results['test_score'].mean() * 100, 2)\n\nprint(accuracy)","2e33d94b":"model_random_forest = RandomForestClassifier(n_jobs=10, random_state=0)\nmodel_random_forest.fit(x, y)\n\naccuracy = round(model_random_forest.score(x, y) * 100, 2)\n\nprint(accuracy)","6858bb04":"submission = pd.DataFrame()\nsubmission['PassengerId'] = new_data_test['PassengerId']\nsubmission['Survived'] = model_random_forest.predict(new_data_test)\n\nsubmission.to_csv('submission.csv', index=False)","5d1c1321":"**IMPORT LIBRARIES**","765930dc":"**DECISION TREE WITH RANDOMIZEDSEARCH**\n","b6bd799c":"It can be observed that passengers belonging to the first and second class were more likely to survive, compared with those who were in third class.","021058ca":"**IMPORT CSV**","af5af387":"**SENDING THE FORECAST TO KAGGLE**\n\nTo send the forecast, i will use the random forest model, for having done better in training.\n","566845cc":"**RANDOM FOREST**","4d435f1d":"**DUMMY CLASSIFIER WITH CROSS_VALIDATE()**","c34734e2":"**DECISION TREE**\n","5535ab53":"3. You can also see the relationship between the class and the survivors.\n","64e13a4d":"2. Plotting a chart to show the relationship of survivors with the sex column","373c25a2":"Note that for each different data found in the categorical variable, Pandas creates a new column to encode. In the case of the passenger sex, he created a column for females (Sex_female) and one for males (Sex_male). You can know which sex the crew member is when you check which of the two columns or variables is the number \"1\".","4ad79eb3":"**DATA VISUALIZATION**\n1.      Analyzing the correlation of variables in a heat map\n    ","bfe0158b":"**NULL VALUES**","8f234363":"**CREATING THE MODELS**\n\nI will create two variables: x, which will store our features, that is, the passenger data and variable y, which will store what we want to predict, in this case, the Survived column .","e40a9631":"Thank you all. I'm sorry for english is not the best hehe. Any suggestion will be of great value to me.","44908985":"**THE ART OF TURNING TEXT INTO NUMBER**\n\n    We're going to need to turn all the data into numbers. Libraries such as Pandas and Scikit-Learn \n    have several tools to help you with this task. And one of them is the get_dummies(), which applies\n    a data engineering technique known as One-hot encoding.","4b2cc8b5":"See that in the Age and Embarked column it has null values. Since it is not possible to know the exact age of the crew of the transatlantic, I will impute a value in them. Imputing null values is a delicate operation because it varies from case to case. In this example, I will enter the average age in these samples that are null, however, there may be cases where you will have to think of a better way to deal with this. ","0eb1254a":" Oh, that's beautiful. We only have one null data in the test set, which is in the Fare column. Let's impute the average price of the ticket equal we did with the age of the passengers.","1df2ce47":"**CHECKING IMPORT**","8d20756e":"**REMOVING IRRELEVANT DATA**\n\nObserving the correlation, we can see that the Variables Name, Ticket and Cabin are not on the heat map, that is, they are not related to the other inputs.\n\nI will remove these variables because they will not be used in our models.\n\n","b657d88b":"**OBS:** Any changes made to the training dataset will have to be applied to the test dataset."}}