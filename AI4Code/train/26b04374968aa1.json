{"cell_type":{"44105b53":"code","63fd1087":"code","ffb4ce29":"code","42e42e7f":"code","639934fc":"code","7fffcc37":"code","7975e893":"code","07bbafa7":"code","9cdee571":"code","f1728de3":"code","5a9ef767":"code","baddfb63":"code","d1f68404":"code","5d67fd5f":"code","1938368d":"code","4b62c68f":"code","4bf1aee2":"code","6731e1ef":"code","b64b12db":"code","1d2335b0":"code","eb5b1796":"code","9dae53b5":"code","091eaf88":"code","82abf422":"code","09183577":"code","b880abb0":"code","5fa2a40e":"code","a760f71b":"code","dc63de9a":"code","fbb4ad61":"code","8af5d86f":"markdown","6e9b0a0a":"markdown","236f4a00":"markdown","2ebcdb35":"markdown"},"source":{"44105b53":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom lightgbm import LGBMClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score,\\\nclassification_report, confusion_matrix","63fd1087":"new_df = pd.read_csv('..\/input\/cancer-du-sein\/cancer.csv')","ffb4ce29":"df =new_df.drop(['Unnamed: 32','id'],axis=1)\n# M -> 0\ndf['diagnosis'] = df['diagnosis'].replace('M', 1)\n# B -> 1\ndf['diagnosis'] = df['diagnosis'].replace('B', 0)","42e42e7f":"# Tableau\ndf.head()","639934fc":"# Avec pourcentages et ombres\nplt.pie(df['diagnosis'].value_counts(), labels=['M','B'], autopct='%1.1f%%', shadow=True)\nplt.show()","7fffcc37":"# Diagramme frequences\nsns.countplot(df['diagnosis'],label=\"Count\")","7975e893":"# ISOLATION DE LA CIBLE\n\ncols = ['diagnosis','radius_mean', 'texture_mean', 'perimeter_mean', 'area_mean',\n       'smoothness_mean', 'compactness_mean', 'concavity_mean',\n       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean',\n       'radius_se', 'texture_se', 'perimeter_se', 'area_se', 'smoothness_se',\n       'compactness_se', 'concavity_se', 'concave points_se', 'symmetry_se',\n       'fractal_dimension_se', 'radius_worst', 'texture_worst',\n       'perimeter_worst', 'area_worst', 'smoothness_worst',\n       'compactness_worst', 'concavity_worst', 'concave points_worst',\n       'symmetry_worst', 'fractal_dimension_worst']","07bbafa7":"X = df[cols]","9cdee571":"y = X['diagnosis']\ndel X['diagnosis']","f1728de3":"# METRIQUES\n# MODELE SUPERVISE\n\n# Light Gradian de Boosting\nclf = LGBMClassifier(n_estimators=200, max_depth=2)","5a9ef767":"# METRIQUES\n# Import des classes pour les m\u00e9triques : (remis en d\u00e9but) Cross Validation Rapports ROC, AUC\n# CROSS VALIDATION","baddfb63":"%%time\nscores = cross_val_score(clf,X,y, cv=5)\nprint('Accuracy')\nprint(np.mean(scores))\nprint(np.std(scores))","d1f68404":"scores = cross_val_score(clf,X,y,scoring='precision', cv=5)\nprint('Precision')\nprint(np.mean(scores))\nprint(np.std(scores))","5d67fd5f":"%%time\nscores = cross_val_score(clf,X,y,scoring='recall', cv=5)\nprint('Recall')\nprint(np.mean(scores))\nprint(np.std(scores))","1938368d":"scores = cross_val_score(clf,X,y,scoring='f1', cv=5)\nprint('FScore')\nprint(np.mean(scores))\nprint(np.std(scores))","4b62c68f":"scores = cross_val_score(clf,X,y,scoring='roc_auc', cv=5)\nprint('AUC')\nprint(np.mean(scores))\nprint(np.std(scores))","4bf1aee2":"# Train\/Test \u00e0 la main et rapport\n# Comportement du mod\u00e8le.\n\nX_train, X_test, y_train, y_true = train_test_split(X, y, test_size=0.2, random_state=42)\n\nclf.fit(X_train,y_train)","6731e1ef":"y_test = clf.predict(X_test)\n\nX_true = X_test.copy()\nX_true['y_true'] = y_true\nX_true['y_test'] = y_test\n\ny.value_counts()","b64b12db":"print(classification_report(y_true, y_test))","1d2335b0":"# ROC \/ AUC\n\nprint(confusion_matrix(y_true, y_test))","eb5b1796":"tn, fp, fn, tp = confusion_matrix(y_true, y_test).ravel()\n\n(tn, fp, fn, tp)","9dae53b5":"# Feature contributions\n# Pour un Random Forest ou Gradient Boosting:\n\ncoef = pd.Series(clf.feature_importances_, index = X.columns)\nimp_coef = coef.sort_values(ascending=False)\nprint(imp_coef)","091eaf88":"plt.title(\"Importance des variables pour le cancer\")\nimp_coef.plot(kind=\"barh\")\nplt.show()","82abf422":"# Feature selection\n# Contribution des variables\n\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.feature_selection import RFECV\n# Recursive feature elimination with cross-validation\nrfecv = RFECV(estimator=LGBMClassifier(n_estimators=200), step=1, cv=StratifiedKFold(3), scoring='f1')","09183577":"%%time\nrfecv.fit(X,y)","b880abb0":"print(\"nombre de variables \u00e0 l'origine : %d\" % len(X.columns))\nprint(\"nombre optimal de variables : %d\" % rfecv.n_features_)","5fa2a40e":"# Nombre de 'features' VS cross-validation scores\nplt.figure()\nplt.xlabel(\"Nombre de variables s\u00e9lectionn\u00e9es\")\nplt.ylabel(\"Cross validation score (nb of correct classifications)\")\nplt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)\nplt.show()","a760f71b":"cols_to_keep = []\nfor i in range(0,len(X.columns)):\n    if rfecv.support_[i]:\n        cols_to_keep.append(X.columns[i])","dc63de9a":"scores = cross_val_score(clf,X[cols_to_keep],y,scoring='precision', cv=5)\nprint('Precision')\nprint(np.mean(scores))\nprint(np.std(scores))","fbb4ad61":"scores = cross_val_score(clf,X[cols_to_keep],y,scoring='recall', cv=5)\nprint('Recall')\nprint(np.mean(scores))\nprint(np.std(scores))","8af5d86f":"VISUALISATION DONNEES","6e9b0a0a":"LIBRAIRIES","236f4a00":"ELIMINATION COLONNES INUTILES ET CONVERSION CIBLE EN MODE BINAIRE","2ebcdb35":"IMPORTATION DES DONNEES\nLES DONNEES ETANT COMPLETES, ON PASSE DIRECTEMENT \u00e0 LA VISUALISATION  "}}