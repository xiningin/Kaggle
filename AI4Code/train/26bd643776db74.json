{"cell_type":{"81bc965f":"code","9785189f":"code","6888397a":"code","7441b56e":"code","e3b3f748":"code","8b4ba11d":"code","f1b8b4fd":"code","bfd26e17":"code","57932ee5":"code","f1f93138":"code","368c3312":"code","ee6eb350":"code","04cf8747":"code","da92a380":"code","8d79f120":"markdown","a7414f61":"markdown","0e09a4f5":"markdown","f570769d":"markdown"},"source":{"81bc965f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport seaborn as sns\nimport missingno as msno\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n#classifiaction.\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import LinearSVC,SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\n#regression\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso,RidgeCV\nfrom sklearn.ensemble import RandomForestRegressor,BaggingRegressor,GradientBoostingRegressor,AdaBoostRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\n\n#model selection\nfrom sklearn.model_selection import train_test_split,cross_validate\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import GridSearchCV\n\n#evaluation metrics\nfrom sklearn.metrics import mean_squared_log_error,mean_squared_error, r2_score,mean_absolute_error # for regression\nfrom sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score  # for classification\n\n#Data Preprocess and Visualization\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","9785189f":"data = pd.read_csv('..\/input\/hmif-bootcamp\/train-data.csv')\ndata.describe(include='all')","6888397a":"data.columns","7441b56e":"data.isnull().sum()","e3b3f748":"#data =pd.get_dummies(data, drop_first = True)\n#data.columns","8b4ba11d":"#vif = pd.DataFrame()\n#variables= data\n#vif[\"VIF\"]= [variance_inflation_factor(variables.values, i) for i in range (variables.shape[1])]\n#vif[\"Features\"]= variables.columns\n#vif","f1b8b4fd":"sns.distplot(data['provinsi'])","bfd26e17":"sns.distplot(data['akreditasi'])","57932ee5":"corr =data.corr()\nfig, ax= plt.subplots()\nim = ax.imshow(corr.values)\n\n#set labels\nax.set_xticks(np.arange(len(corr.columns)))\nax.set_yticks(np.arange(len(corr.columns)))\nax.set_xticklabels(corr.columns)\nax.set_yticklabels(corr.columns)\n\n# Rotate the thick label and set the alignment\nplt.setp(ax.get_xticklabels(), rotation= 45, ha= \"right\", rotation_mode= \"anchor\")\n\n# Create tex annotations\nfor i in range(len(corr.columns)):\n    for j in range(len(corr.columns)):\n        text= ax.text(j, i, np.around(corr.iloc[i,j], decimals= 2), ha=\"center\", va=\"center\", color=\"black\")","f1f93138":"plt.figure(figsize= (35,20))\ndummy_data = pd.get_dummies(data, drop_first = True)\nsns.heatmap(dummy_data.corr(), annot= True, linewidths= .5)","368c3312":"dummy_data.columns","ee6eb350":"plt.figure(figsize= (35,20))\ndummy_data = pd.get_dummies(data, drop_first = True)\nsns.heatmap(dummy_data.corr(), annot= True, linewidths= .5)","04cf8747":"variables = data[['kurikulum' , 'penyelenggaraan' , 'akreditasi']]\ndummy_variables = pd.get_dummies(variables, drop_first = True)\nsns.heatmap(dummy_variables.corr(), annot= True, linewidths= .5)","da92a380":"model_names=['RandomForestRegressor','AdaBoostRegressor','BaggingRegressor','SVR','KNeighborsRegressor']\nmodel_err=[3.10522 , 3.25582, 3.17704, 3.15208, 3.20884]\nd= {'Modelling Algorithm': model_names, 'Error' :model_err}\ntest_frame = pd.DataFrame(d)\ntest_frame","8d79f120":"**Data Visualization**","a7414f61":"Correlations","0e09a4f5":"![](http:\/\/)**Multicolliinearity Checking**","f570769d":"Null Checking"}}