{"cell_type":{"9c5eb82a":"code","23eec4b8":"code","608b2e4f":"code","74ba723b":"code","b6f347de":"code","dd2cc154":"code","7f7511ff":"code","66b99e4c":"code","1ae35afa":"code","491fcc61":"code","239426fb":"code","1e2895cc":"code","0238df12":"code","4b2a8053":"code","ed1fbddf":"code","6ebe9446":"code","924e8ded":"code","9396854b":"code","f646f137":"code","997484ac":"code","b4135c25":"code","78046256":"code","38f9e3e8":"code","cdd359d0":"code","a0573dd5":"code","042c90f5":"code","ac8e3fa1":"code","aa457094":"code","e4c1718c":"code","26cb742a":"code","45af03f6":"code","3bc67f07":"code","d68f4ce8":"code","e14a35bd":"code","edbe1cca":"code","0de4b53d":"code","cfe11eb2":"code","cc9a0b28":"code","1e98a21f":"code","b69a82d8":"code","8f8f90d2":"code","ae2ede84":"code","95eb2543":"code","1171f6c2":"code","f6b322e4":"code","6c5236ad":"code","ab0c8bad":"code","1eef26e0":"code","dd7f177e":"code","fe6fd633":"code","1c92c52a":"code","13e69e07":"code","ff2b2224":"code","38415bda":"code","95f99231":"code","33447705":"code","87d69a20":"code","ccde9a3e":"code","818d7e6d":"code","8c85d72d":"code","17c23eca":"code","ed9ff8f6":"code","391066b6":"code","436347ef":"code","7bf81736":"code","6431adcb":"code","ce15c2cc":"code","14969727":"code","aa3798c7":"markdown","91050af4":"markdown","6d9024ca":"markdown","90fda0e1":"markdown","e96d2e8a":"markdown","a7cb6602":"markdown","3df898e3":"markdown","5a4c6caf":"markdown","e12872dc":"markdown","c439e687":"markdown","3d6c4259":"markdown","a8c17d45":"markdown","36a41e88":"markdown","f41cf641":"markdown","679e1d5c":"markdown","30a9e544":"markdown","16a9c822":"markdown","5b3c46d4":"markdown"},"source":{"9c5eb82a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing\nfrom sklearn import cross_decomposition\nfrom sklearn.model_selection import cross_val_score, train_test_split\nfrom sklearn.datasets import make_blobs\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nsns.set()\n\n# Make charts a bit bolder\n#sns.set_context(\"talk\")\n\n%matplotlib inline\n\n# Default figure size\nsns.set(rc={\"figure.figsize\": (12, 6)})\n\n# This actually makes autocomplete WAY faster ...\n%config Completer.use_jedi = False\n\n# Show only 2 decimals for floating point numbers\npd.options.display.float_format = \"{:.2f}\".format\n\nsns.set_style('whitegrid')","23eec4b8":"data = pd.read_csv('..\/input\/crypto-markets.csv')","608b2e4f":"data.head()","74ba723b":"data.describe()","b6f347de":"data.shape, data.info()","dd2cc154":"# Convert date to real date\ndata['date'] = pd.to_datetime(data['date'])\ndata['market_billion'] = data['market'] \/ 1000000000\ndata['volume_million'] = data['volume'] \/ 1000000000\ndata['volume_billion'] = data['volume']","7f7511ff":"# Let's prepare one dataframe where we will observe closing prices for each currency\nwide_format = data.groupby(['date', 'name'])['close'].last().unstack()\nwide_format.head(3)","66b99e4c":"wide_format.shape","1ae35afa":"wide_format.describe()","491fcc61":"ax = data.groupby(['name'])['market_billion'].last().sort_values(ascending=False).head(10).sort_values().plot(kind='barh');\nax.set_xlabel(\"Market cap (in billion USD)\");\nplt.title(\"Top 10 Currencies by Market Cap\");","239426fb":"ax = data.groupby(['name'])['volume_million'].last().sort_values(ascending=False).head(10).sort_values().plot(kind='barh');\nax.set_xlabel(\"Transaction Volume (in million)\");\nplt.title(\"Top 10 Currencies by Transaction Volume\");","1e2895cc":"# For sake of convenience, let's define the top 5 currencies\n\ntop_5_currency_names = data.groupby(['name'])['market'].last().sort_values(ascending=False).head(5).index\ndata_top_5_currencies = data[data['name'].isin(top_5_currency_names)]\ndata_top_5_currencies.head(5)","0238df12":"data_top_5_currencies.describe()","4b2a8053":"ax = data_top_5_currencies.groupby(['date', 'name'])['close'].mean().unstack().plot();\nax.set_ylabel(\"Price per 1 unit (in USD)\");\nplt.title(\"Price per unit of currency\");","ed1fbddf":"ax = data_top_5_currencies.groupby(['date', 'name'])['market_billion'].mean().unstack().plot();\nax.set_ylabel(\"Market Cap (in billion USD)\");\nplt.title(\"Market cap per Currency\");","6ebe9446":"ax = data_top_5_currencies.groupby(['date', 'name'])['volume_million'].mean().unstack().plot();\nax.set_ylabel(\"Transaction Volume (in million)\");\nplt.title(\"Transaction Volume per Currency\");","924e8ded":"ax = data_top_5_currencies[data_top_5_currencies.date.dt.year >= 2017].groupby(['date', 'name'])['close'].mean().unstack().plot();\nax.set_ylabel(\"Price per 1 unit (in USD)\");\nplt.title(\"Price per unit of currency (from 2017th)\");","9396854b":"ax = data_top_5_currencies[data_top_5_currencies.date.dt.year >= 2017].groupby(['date', 'name'])['market_billion'].mean().unstack().plot();\nax.set_ylabel(\"Market Cap (in billion USD)\");\nplt.title(\"Market cap per Currency (from 2017th)\");","f646f137":"ax = data_top_5_currencies[data_top_5_currencies.date.dt.year >= 2017].groupby(['date', 'name'])['volume_million'].mean().unstack().plot();\nax.set_ylabel(\"Transaction Volume (in million)\");\nplt.title(\"Transaction Volume per Currency (from 2017th)\");","997484ac":"ax = data_top_5_currencies[data_top_5_currencies.date.dt.year >= 2018].groupby(['date', 'name'])['close'].mean().unstack().plot();\nax.set_ylabel(\"Price per 1 unit (in USD)\");\nplt.title(\"Price per unit of currency (from 2018th)\");","b4135c25":"ax = data_top_5_currencies[data_top_5_currencies.date.dt.year >= 2018].groupby(['date', 'name'])['market_billion'].mean().unstack().plot();\nax.set_ylabel(\"Market Cap (in billion USD)\");\nplt.title(\"Market cap per Currency (from 2018th)\");","78046256":"ax = data_top_5_currencies[data_top_5_currencies.date.dt.year >= 2018].groupby(['date', 'name'])['volume_million'].mean().unstack().plot();\nax.set_ylabel(\"Transaction Volume (in million)\");\nplt.title(\"Transaction Volume per Currency (from 2018th)\");","38f9e3e8":"plt.figure(figsize=(14,8))\nsns.heatmap(wide_format[top_5_currency_names].corr(),vmin=0, vmax=1, cmap='coolwarm', annot=True);","cdd359d0":"def plot_roi(amount, df):\n    ((amount \/ df.iloc[0]) * df).plot(figsize=(12,8))","a0573dd5":"plot_roi(1000, wide_format[['Bitcoin']])","042c90f5":"wide_format_2017th = wide_format[(wide_format.index.year >= 2017)]\nplot_roi(1000, wide_format_2017th[top_5_currency_names])","ac8e3fa1":"wide_format_late_2017th = wide_format[(wide_format.index.year >= 2017) & (wide_format.index.month >= 10)]\nplot_roi(1000, wide_format_late_2017th[top_5_currency_names])","aa457094":"wide_format_2018th = wide_format[(wide_format.index.year >= 2018)]\nplot_roi(1000, wide_format_2018th[top_5_currency_names])","e4c1718c":"len(data.slug.unique())","26cb742a":"# Some common filters that we might be using\nis_bitcoin = data['symbol'] == 'BTC'\nis_ethereum = data['symbol'] == 'ETH'\nis_ripple  = data['symbol'] == 'XRP'\n\n# Pull out a part of dataset that only has the most interesting currencies\ndata_top_currencies = data[is_bitcoin | is_ethereum | is_ripple]","45af03f6":"top10Currencies = data.groupby('name')['market_billion'].last().sort_values(ascending=False).head(10)","3bc67f07":"ax = top10Currencies.sort_values().plot(kind='barh')\nax.set_xlabel(\"Market cap in Billion\");\nax.set_ylabel(\"Currency\");","d68f4ce8":"ax = data_top_currencies.groupby(['date', 'name'])['close'].mean().unstack().plot()\nax.set_ylabel(\"Price per 1 unit (in USD)\")","e14a35bd":"data_top_currencies[data_top_currencies.date.dt.year >= 2018].groupby(['date', 'name'])['close'].mean().unstack().plot()\nax.set_ylabel(\"Price per 1 unit (in USD)\")","edbe1cca":"ax = data_top_currencies[data_top_currencies.date.dt.year >= 2018].groupby(['date', 'name'])['volume_billion'].mean().unstack().plot()\nax.set_ylabel(\"Trading volume (in billion)\");","0de4b53d":"def plot_with_textvalue(df):\n    ax = df.plot(kind='bar')\n    \n    ax.set_ylabel(\"Yearly closing prices (in USD)\")\n\n    for rect in ax.patches:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width()\/2.0, height, '%d$' % int(height), ha='center', va='bottom')","cfe11eb2":"top10Currencies","cc9a0b28":"closing_prices_bitcoin_and_ethereum = data[is_bitcoin | is_ethereum].groupby(['date','name'])['close'].last().unstack().reset_index()\nclosing_prices_other_currencies = data[data['name'].isin(top10Currencies.index) & ~is_bitcoin & ~is_ethereum].groupby(['date','name'])['close'].last().unstack().reset_index()","1e98a21f":"yearly_closing_prices_bitcoin_and_ethereum = closing_prices_bitcoin_and_ethereum.groupby(closing_prices_bitcoin_and_ethereum.date.dt.year).last()\nyearly_closing_prices_bitcoin_and_ethereum.drop(columns='date', inplace=True)\nplot_with_textvalue(yearly_closing_prices_bitcoin_and_ethereum)","b69a82d8":"yearly_closing_prices_other_currencies = closing_prices_other_currencies.groupby(closing_prices_other_currencies.date.dt.year).last()\nyearly_closing_prices_other_currencies.drop(columns='date', inplace=True)\nyearly_closing_prices_other_currencies.plot(kind='bar')","8f8f90d2":"closing_prices_other_currencies.head()","ae2ede84":"closing_prices_bitcoin_and_ethereum.head()","95eb2543":"closing_prices_other_currencies.head()","1171f6c2":"def calc_earnings(currency_name, df):\n    #print(\"Displaying stats for \"+currency_name)\n\n    closing_prices = df[(df['name'] == currency_name) & (~df['close'].isnull())][['date', 'close']]\n\n    # Num. currency purchased for 1000$\n    #print(\"Closing price at the beginning: \" + str(closing_prices.iloc[0]['close']))\n\n    num_units_purchased = 1000 \/ closing_prices.iloc[0]['close']\n    num_units_purchased\n\n    #print(\"Num. units purchased: \" + str(num_units_purchased))\n\n    # Current value\n    last_price = closing_prices.iloc[-1]['close']\n    #print(\"Last price: \" + str(last_price))\n\n    amount_earned = (num_units_purchased * last_price) - 1000\n\n    #print(\"Amount you would have earned: \" + str(amount_earned) + \"$\")\n    \n    return amount_earned\n    \n# Borrow the index :-)\ntop_10_currencies_earnings = top10Currencies\n\nfor currency in top10Currencies.index:\n    top_10_currencies_earnings[currency] = calc_earnings(currency, data)\n    \nax = top_10_currencies_earnings.sort_values(ascending=False).plot(kind='bar')\nfor rect in ax.patches:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width()\/2.0, height, '%d$' % int(height), ha='center', va='bottom')","f6b322e4":"# Borrow the index :-)\ntop_10_currencies_earnings_2018 = top10Currencies\n\nfor currency in top10Currencies.index:\n    top_10_currencies_earnings_2018[currency] = calc_earnings(currency, data[data.date.dt.year >= 2018])\n    \ntop_10_currencies_earnings_2018\n\nax = top_10_currencies_earnings_2018.sort_values(ascending=False).plot(kind='bar')\nfor rect in ax.patches:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width()\/2.0, height, '%d$' % int(height), ha='center', va='bottom')","6c5236ad":"# Borrow the index :-)\ntop_10_currencies_earnings_2018 = top10Currencies\n\nfor currency in top10Currencies.index:\n    top_10_currencies_earnings_2018[currency] = calc_earnings(currency, data[data.date.dt.year >= 2018])\n    \ntop_10_currencies_earnings_2018\n\nax = top_10_currencies_earnings_2018.sort_values(ascending=False).plot(kind='bar')\nfor rect in ax.patches:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width()\/2.0, height, '%d$' % int(height), ha='center', va='bottom')","ab0c8bad":"top_10_currencies_earnings_without_nem = top_10_currencies_earnings[top_10_currencies_earnings.index != 'NEM']\n\nax = top_10_currencies_earnings_without_nem.sort_values(ascending=False).plot(kind='bar')\nfor rect in ax.patches:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width()\/2.0, height, '%d$' % int(height), ha='center', va='bottom')","1eef26e0":"top10Currencies = data.groupby('name')['market_billion'].last().sort_values(ascending=False).head(5)\nclosing_prices_top10 = data[data['name'].isin(top10Currencies.index)].groupby(['date', 'name'])['close'].mean().unstack()\nclosing_prices_top10.corr()\n\nplt.figure(figsize=(12,6))\nsns.heatmap(closing_prices_top10.corr(),vmin=0, vmax=1, cmap='coolwarm', annot=True)\nplt.title('Correlation Heatmap between Bitcoin and other top 5 Crypto')","dd7f177e":"plt.figure(figsize=(12,6))\nsns.heatmap(closing_prices_top10.corr(),vmin=0, vmax=1, cmap='coolwarm', annot=True)\nplt.title('Correlation Heatmap between Bitcoin and other top 4 Crypto')","fe6fd633":"test = data[data['name'] == 'Bitcoin'].copy()","1c92c52a":"test['price_diff_d1'] = 0 # 1-day ago\ntest['price_diff_d2'] = 0 # 2-days ago\ntest['price_diff_d3'] = 0 # 3-days ago\n\ntest['trend'] = 0 # 0 = no change, -1 = price dropped, 1 = price increased","13e69e07":"for i, row in test.iterrows():\n    for j in range(1, 4):\n        if ((i-j) < 0):\n            # Skip rows at the beginning\n            continue\n   \n        current_price  = row['close']\n        prev_price = test.iloc[(i-j)]['close']\n        \n        column = 'price_diff_d'+str(j)\n        \n        test.ix[i, column] = (current_price - prev_price)\n        \n    if (i > 0):\n        test.ix[i, 'trend'] = 1 if current_price > test.loc[(i-1)]['close'] else -1","ff2b2224":"X = test[['close', 'price_diff_d1', 'price_diff_d2', 'price_diff_d3']]\ny = test['trend']","38415bda":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","95f99231":"X_train.head(10)","33447705":"X_test.shape, y_train.shape","87d69a20":"model = RandomForestClassifier(n_estimators=10, max_depth=None, random_state=1234, oob_score=True)\n\nmodel.fit(X_train, y_train)","ccde9a3e":"#model?","818d7e6d":"scores = cross_val_score(model, X, y)\nscores.mean()","8c85d72d":"model.oob_score_","17c23eca":"y_pred = model.predict(X_test)","ed9ff8f6":"y_pred[-5:]","391066b6":"test['predicted'] = model.predict(X)","436347ef":"test[['date','predicted', 'trend']]","7bf81736":"test.set_index('date')","6431adcb":"test['datetime'] = pd.to_datetime(test['date'])","ce15c2cc":"test = test.set_index('datetime')","14969727":"test['close'].plot()","aa3798c7":"Here are the descriptions for some of the columns that I wasn't really sure about:\n\n* volume - Transactions volume\n* market - Market Cap\n* ranknow - Currency rank\n* spread - Spread between high and low\n\nAlso, one thing I noticed -- market caps are quite huge. For ease of observing, let's introduce a new column - *market_billion*, which will represent currencies Market Cap in billion","91050af4":"# Experiments\n\n\nLet's do a small experiment. Let's say that we invested 1000$ in each crypto currency 5 years ago. Let's see how much money would you have now.\n\nFirst, let's start by drawing a diagram of closing prices for each year for each currency.","6d9024ca":"That's rather amusing. Let's see focus on trend starting in 2018th.","90fda0e1":"## Predictions\n\n\nLet's try something -- let's take values from previos 3 days and predict whether the price is going to go up or down","e96d2e8a":"# Beginner's Exploratory Data Analysis for Crypto Market","a7cb6602":"**Copyright** by [Quanonblocks](https:\/\/www.kaggle.com\/quanonblocks)\n\n\nReleased under the [Apache 2.0](http:\/\/www.apache.org\/licenses\/LICENSE-2.0) open source license.","3df898e3":"## Experiments\n\nSmall experiment - let's assume that we invested some amount (say - 1000 USD) at some point. Let's see what ROI would we have.","5a4c6caf":"We can see that prices have jumped enormously in start and then decreases monotonically with a sharp increase in between Feb and March of 2018th. The cause? Apparently, there are lots of causes. From people's awareness about crypto currencies, to introduction of other currencies that increased the overal need.\n\n## Let's see a trend of Trading Volume for top currencies now","e12872dc":"## Trend Charts","c439e687":"As we can see, and as it was expected, Bitcoin has the highest market cap. Let's see the trend for couple of top currencies.","3d6c4259":"There seems to be a correlation in trading between currencies. Which probably makes sense as, if I understood correctly, most of the currencies are actually traded using Bitcoin (i.e. you have to purchase Bitcoin in order to purchase Ripple). For sake of visibility, I'll plot Bitcoin and other currencies separately. Thing is that Bitcoin prices are actually masking other currencies.","a8c17d45":"## Trend Charts in 2018","36a41e88":"Let's plot the closing prices.","f41cf641":"## Trend Charts in 2017","679e1d5c":"## Correlation","30a9e544":"## Data Wrangle & Cleanup","16a9c822":"Let's chart out Top cryptocurrencies according to latest reported Market Cap","5b3c46d4":"## Data Exploration\n\n### Top 10 cryptocurrencies in 2018"}}