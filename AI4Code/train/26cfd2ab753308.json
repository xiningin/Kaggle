{"cell_type":{"f3ae38f8":"code","66cf8d44":"code","b3c2181f":"code","0c55b049":"code","b52d31f4":"code","089eb3f2":"code","3851c9b4":"code","758c86b1":"code","fb15f9de":"code","50b865e4":"code","41855726":"code","395671e5":"code","0fe3ad29":"code","2f157969":"code","245e2f44":"code","33528b6b":"code","beb2f082":"code","c000892a":"code","0db57766":"code","ab1023f2":"markdown","27248193":"markdown","cae18805":"markdown","be79e6cc":"markdown","68c03e54":"markdown","0a6f8444":"markdown","f3dac163":"markdown","8989663d":"markdown","b8bcd4b7":"markdown","36a52321":"markdown"},"source":{"f3ae38f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66cf8d44":"import numpy as np # linear algebra\nfrom numpy import random\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go \nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot, plot\ninit_notebook_mode(connected=True) ","b3c2181f":"house_train = pd.read_csv('..\/input\/gdscmena-a1\/house-prices-dataset\/train.csv')\nhouse_train.head()","0c55b049":"house_train.info()","b52d31f4":"house_train['Fence'].describe()","089eb3f2":"house_train['Fence'].value_counts()","3851c9b4":"house_train['FireplaceQu'].describe()","758c86b1":"house_train['FireplaceQu'].value_counts()","fb15f9de":"house_train['Fireplaces'].describe()","50b865e4":"house_train['Alley'].describe()","41855726":"house_train['Alley'].value_counts()","395671e5":"# TODO create a copy of the house train data\nhouse_train_beta = house_train","0fe3ad29":"house_train_beta['Alley'].fillna('no alley', inplace = True) ","2f157969":"house_train_beta['FireplaceQu'].fillna('no FireplaceQu', inplace = True) ","245e2f44":"house_train_beta['Fence'].fillna('no Fence', inplace = True) ","33528b6b":"house_train_beta.info","beb2f082":"plt.figure(figsize=(40, 25))\nsns.set_style('white')\nmask = np.triu(np.ones_like(house_train_beta.corr(), dtype=np.bool))\nheatmap = sns.heatmap(house_train_beta.corr(), mask=mask,annot=True, cmap='BrBG', linewidths = 2)\nheatmap.set_title('Triangle Correlation Heatmap', fontdict={'fontsize':30}, pad=16);","c000892a":"categorical_features = ['MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual', 'Functional', 'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'PoolQC', 'Fence', 'MiscFeature', 'SaleType', 'SaleCondition' ]\n","0db57766":"import plotly.express as px\nfigs = []\nfor cat in categorical_features:\n    try:\n        fig = px.scatter_3d(house_train_beta, x='SalePrice', y='OverallQual', z='GrLivArea',\n              color= cat, title='{} plot'.format(cat) )\n\n        fig.show()\n        figs.append(fig)\n    except:\n        print('Something is wrong it seems like {} is having problems'.format(cat))","ab1023f2":"## Exploratory Data Analysis","27248193":"We will choose the two most correlated features with the house price and try to create 3d plots and color them with the categorical features.","cae18805":"We will try to look for missing and check whether or not we can replace it or that we need to drop the columns with most of the missing data","be79e6cc":"FireplaceQu is also a categroical one. This might also mean that the null value is the absence of Fireplace in the house","68c03e54":"### Loading Data","0a6f8444":"### Missing Data","f3dac163":"The thing to consider before droping these values is to look if these features actually impact the price of the house.","8989663d":"The Fence feature is a categorical one, the null value of this feature might mean that there is no Fence around the house.","b8bcd4b7":"### Creating plots","36a52321":"The same thing goes for the alley"}}