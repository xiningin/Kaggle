{"cell_type":{"be271267":"code","9d4e654e":"code","bc11c966":"code","f76a5e19":"code","44e23d68":"code","d3c26c79":"code","712bb205":"code","24c6a674":"code","2df32676":"code","eb641167":"code","99cf2bfe":"code","a7a47b44":"code","c42f2575":"code","e3c30841":"code","fcdbe511":"code","22eae741":"code","9e1d745c":"code","3e761177":"code","8892126a":"code","990f304b":"code","e93b1dfc":"code","ac84ca90":"code","474391ed":"code","8414009c":"code","4d764ecc":"code","35155a20":"code","b86e4f48":"code","0805c424":"code","f2f62f43":"markdown","c8ed0c40":"markdown","05472a19":"markdown","83e15df7":"markdown","2be8cd10":"markdown","19ec477f":"markdown","18947ed2":"markdown","12da4580":"markdown","5d62f56d":"markdown","366f8a46":"markdown","34b9a5c7":"markdown","50e14428":"markdown","f5b5d58b":"markdown","43e4a9f5":"markdown","4fae461f":"markdown","5425719e":"markdown","c0f80cc2":"markdown"},"source":{"be271267":"##Importing the packages\n#Data processing packages\nimport numpy as np \nimport pandas as pd \n\n#Visualization packages\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\n#Machine Learning packages\nfrom sklearn.svm import SVC,NuSVC\nfrom xgboost import XGBClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB,MultinomialNB\nfrom sklearn.linear_model import SGDClassifier, LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier\nfrom sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis, LinearDiscriminantAnalysis\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\t\nfrom sklearn.metrics import confusion_matrix\n\n#Suppress warnings\nimport warnings\nwarnings.filterwarnings('ignore')","9d4e654e":"# The dataset contains the information of 7042 Customers and their churn value.\ndata = pd.read_csv('..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","bc11c966":"#Check the datatypes of the fields and null values. Below output shows that there are no missing values\ndata.info()","f76a5e19":"#These fields does not add value, hence removed\ndata = data.drop(['customerID'], axis = 1)","44e23d68":"#A lambda function is a small anonymous function.\n#A lambda function can take any number of arguments, but can only have one expression.\ndata['Churn']=data['Churn'].apply(lambda x : 1 if x=='Yes' else 0)","d3c26c79":"#Finding the Count of Customer Churn. The output shows that 1869 customers churned(left) last month\ndata.Churn.value_counts()","712bb205":"data.head()","24c6a674":"#This function is used to convert Categorical values to Numerical values\ndata=pd.get_dummies(data)","2df32676":"data.head()","eb641167":"#Separating Feature and Target matrices\nX = data.drop(['Churn'], axis=1)\ny=data['Churn']","99cf2bfe":"#Feature scaling is a method used to standardize the range of independent variables or features of data.\n#Since the range of values of raw data varies widely, in some machine learning algorithms, objective functions will not work properly without normalization. \nfrom sklearn.preprocessing import StandardScaler\nscale = StandardScaler()\nX = scale.fit_transform(X)","a7a47b44":"# Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20)","c42f2575":"#Function to plot Confusion Matrix\ndef cm_plot(cm,Model):\n    plt.clf()\n    plt.imshow(cm, interpolation='nearest', cmap=plt.cm.Wistia)\n    classNames = ['Negative','Positive']\n    plt.title('Comparison of Prediction Result for '+ Model)\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')\n    tick_marks = np.arange(len(classNames))\n    plt.xticks(tick_marks, classNames, rotation=45)\n    plt.yticks(tick_marks, classNames)\n    s = [['TN','FP'], ['FN', 'TP']]\n    for i in range(2):\n        for j in range(2):\n            plt.text(j,i, str(s[i][j])+\" = \"+str(cm[i][j]))\n    plt.show()","e3c30841":"#Function to Train and Test Machine Learning Model\ndef train_test_ml_model(X_train,y_train,X_test,Model):\n    model.fit(X_train,y_train) #Train the Model\n    y_pred = model.predict(X_test) #Use the Model for prediction\n\n    # Test the Model\n    from sklearn.metrics import confusion_matrix\n    cm = confusion_matrix(y_test,y_pred)\n    accuracy = round(100*np.trace(cm)\/np.sum(cm),1)\n\n    #Plot\/Display the results\n    cm_plot(cm,Model)\n    print('Accuracy of the Model' ,Model, str(accuracy)+'%')","fcdbe511":"from sklearn.svm import SVC,NuSVC  #Import packages related to Model\nModel = \"SVC\"\nmodel=SVC() #Create the Model\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","22eae741":"from sklearn.svm import SVC,NuSVC  #Import packages related to Model\nModel = \"NuSVC\"\nmodel=NuSVC(nu=0.285)#Create the Model\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","9e1d745c":"from xgboost import XGBClassifier  #Import packages related to Model\nModel = \"XGBClassifier()\"\nmodel=XGBClassifier() #Create the Model\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","3e761177":"from sklearn.neighbors import KNeighborsClassifier  #Import packages related to Model\nModel = \"KNeighborsClassifier\"\nmodel=KNeighborsClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","8892126a":"from sklearn.naive_bayes import GaussianNB,MultinomialNB  #Import packages related to Model\nModel = \"GaussianNB\"\nmodel=GaussianNB()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","990f304b":"from sklearn.linear_model import SGDClassifier, LogisticRegression #Import packages related to Model\nModel = \"SGDClassifier\"\nmodel=SGDClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","e93b1dfc":"from sklearn.linear_model import SGDClassifier, LogisticRegression #Import packages related to Model\nModel = \"LogisticRegression\"\nmodel=LogisticRegression()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","ac84ca90":"from sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier #Import packages related to Model\nModel = \"DecisionTreeClassifier\"\nmodel=DecisionTreeClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","474391ed":"from sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier #Import packages related to Model\nModel = \"ExtraTreeClassifier\"\nmodel=ExtraTreeClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","8414009c":"from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis, LinearDiscriminantAnalysis #Import packages related to Model\nModel = \"QuadraticDiscriminantAnalysis\"\nmodel = QuadraticDiscriminantAnalysis()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","4d764ecc":"from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis, LinearDiscriminantAnalysis #Import packages related to Model\nModel = \"LinearDiscriminantAnalysis\"\nmodel=LinearDiscriminantAnalysis()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","35155a20":"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier #Import packages related to Model\nModel = \"RandomForestClassifier\"\nmodel=RandomForestClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","b86e4f48":"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier #Import packages related to Model\nModel = \"AdaBoostClassifier\"\nmodel=AdaBoostClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","0805c424":"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier #Import packages related to Model\nModel = \"GradientBoostingClassifier\"\nmodel=GradientBoostingClassifier()\n\ntrain_test_ml_model(X_train,y_train,X_test,Model)","f2f62f43":"### **Split the data into Training set and Testing set**","c8ed0c40":"**COMMENT:** It can be seen from the difference in the output of data.head() before and after the coversion that now ALL the fields have numerical values.","05472a19":"1. Going through the fields it looks like customerID does not add much value.  Lets drop it.","83e15df7":"### **Import data**","2be8cd10":"### **Perform datatype conversion or translation wherever required**","19ec477f":"### **Separating the Feature and Target Matrices**","18947ed2":"**COMMENT:** Above output shows that there are No Null values.","12da4580":"### **Check and remediate if there are any null values**","5d62f56d":"### __Function definition__","366f8a46":"__Customer Churn using Telco Dataset__","34b9a5c7":"### **Convert Categorical values to Numeric Values**","50e14428":"**COMMENT:** Standard deviation for all the fields is non-zero value, it means that all the columns have information so no field can be removed.","f5b5d58b":"### **Import packages**","43e4a9f5":"### **Support Vector Machines**","4fae461f":"### **PERFORM PREDICTIONS USING MACHINE LEARNING ALGORITHMS**","5425719e":"### **Scaling the data values to standardize the range of independent variables**","c0f80cc2":"### **Check and remove if there are any fields which does not add value**"}}