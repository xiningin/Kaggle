{"cell_type":{"7f789df5":"code","72ddecee":"code","f9be2d60":"code","6f3dee3f":"code","3529c277":"code","c9dfe57c":"code","26eeacb3":"code","dbbdf2fb":"code","489e842d":"code","9bfc2d1b":"code","0bdaa393":"code","f4a47dc5":"code","38e1082a":"code","554c5eb9":"code","e51e2174":"code","3a9843f0":"code","a9855c40":"code","1b2c844d":"code","d1acdaba":"code","cf3f65c0":"code","92141f05":"code","e9e90cea":"code","6449f2e1":"code","1094a229":"code","04069653":"markdown","b87dd1f1":"markdown","33425609":"markdown","f0d266aa":"markdown","b2ed6c4d":"markdown","b11925bd":"markdown","762255fe":"markdown","6f8472fe":"markdown","62916b2e":"markdown","aa9d6ff4":"markdown","22453334":"markdown","0f0470b1":"markdown","8d0eb508":"markdown"},"source":{"7f789df5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.ensemble import RandomForestRegressor # RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","72ddecee":"data = pd.read_csv('..\/input\/fish-market\/Fish.csv')\ndf = data.copy()\ndf.sample(10)","f9be2d60":"df.rename(columns= {'Length1':'LengthVer', 'Length2':'LengthDia', 'Length3':'LengthCro'}, inplace=True)\ndf.head()","6f3dee3f":"df.info()","3529c277":"print(str('Is there any NaN value in the dataset: '), df.isnull().values.any())","c9dfe57c":"sp = df['Species'].value_counts()\nsp = pd.DataFrame(sp)\nsp.T","26eeacb3":"sns.barplot(x=sp.index, y=sp['Species']);\nplt.xlabel('Species')\nplt.ylabel('Counts of Species')\nplt.show()","dbbdf2fb":"# Converting Qualitative data into Quantitative Data\ndf.loc[df[\"Species\"] == \"Perch\",[\"Species\"]] = 0\ndf.loc[df[\"Species\"] == \"Bream\",[\"Species\"]] = 1\ndf.loc[df[\"Species\"] == \"Roach\",[\"Species\"]] = 2\ndf.loc[df[\"Species\"] == \"Pike\",[\"Species\"]] = 3\ndf.loc[df[\"Species\"] == \"Smelt\",[\"Species\"]] = 4\ndf.loc[df[\"Species\"] == \"Parkki\",[\"Species\"]] = 5\ndf.loc[df[\"Species\"] == \"Whitefish\",[\"Species\"]] = 6","489e842d":"# Check the converting result\ndf","9bfc2d1b":"# data set\nX = df.iloc[:,[0,2,3,4,5,6]]\ny = df['Weight']\n\n# split data to train and test\nfrom sklearn.model_selection import train_test_split\nX_train2, X_test2, y_train2, y_test2 = train_test_split(X, y, test_size=0.2, random_state=1)","0bdaa393":"X_test2","f4a47dc5":"reg_rf = RandomForestRegressor(n_estimators=1000, n_jobs=-1,random_state=1)\nreg_rf.fit(X_train2,y_train2)","38e1082a":"#test\nreg_rf.score(X_test2,y_test2)","554c5eb9":"#train\nreg_rf.score(X_train2,y_train2)","e51e2174":"test_pred = reg_rf.predict(X_test2)\ntest_mse = mean_squared_error(y_true=y_test2 , y_pred = test_pred)\nprint(test_mse)","3a9843f0":"np.sqrt(test_mse)","a9855c40":"np.average(y_test2)","1b2c844d":"y_pred2 = reg_rf.predict(X_test2)","d1acdaba":"plt.scatter(X_test2['LengthCro'], y_test2, color='red', alpha=0.4)\nplt.scatter(X_test2['LengthCro'], y_pred2, color='blue', alpha=0.4)\nplt.xlabel('Cross Length in cm')\nplt.ylabel('Weight of the fish')\nplt.title('RandomForestRegression Model for Weight Estimation');","cf3f65c0":"plt.scatter(X_test2['LengthVer'], y_test2, color='purple', alpha=0.5)\nplt.scatter(X_test2['LengthVer'], y_pred2, color='orange', alpha=0.5)\nplt.xlabel('Vertical Length in cm')\nplt.ylabel('Weight of the fish')\nplt.title('RandomForestRegression Model for Weight Estimation');","92141f05":"plt.scatter(X_test2['LengthDia'], y_test2, color='purple', alpha=0.4)\nplt.scatter(X_test2['LengthDia'], y_pred2, color='green', alpha=0.4)\nplt.xlabel('Diagonal Length in cm')\nplt.ylabel('Weight of the fish')\nplt.title('RandomForestRegression Model for Weight Estimation');","e9e90cea":"plt.scatter(X_test2['Height'], y_test2, color='orange', alpha=0.5)\nplt.scatter(X_test2['Height'], y_pred2, color='blue', alpha=0.5)\nplt.xlabel('Height in cm')\nplt.ylabel('Weight of the fish')\nplt.title('RandomForestRegression Model for Weight Estimation');","6449f2e1":"plt.scatter(X_test2['Width'], y_test2, color='gray', alpha=0.5)\nplt.scatter(X_test2['Width'], y_pred2, color='red', alpha=0.5)\nplt.xlabel('Width in cm')\nplt.ylabel('Weight of the fish')\nplt.title('RandomForestRegression Model for Weight Estimation');","1094a229":"y_pred2 = pd.DataFrame(y_pred2, columns=['Estimated Weight'])\ny_test2 = pd.DataFrame(y_test2)\ny_test2 = y_test2.reset_index(drop=True)\nynew2 = pd.concat([y_test2, y_pred2], axis=1)\nynew2","04069653":"**4. EVALUATE THE MODEL **","b87dd1f1":"**2. PREPARING THE TRAINING-DATA AND TEST-DATA**","33425609":"**3. MAKE THE MODEL -Random Forest Regressor-**","f0d266aa":"**MSE**","b2ed6c4d":"# RANDOM FOREST REGRESSION MODEL FOR WEIGHT ESTIMATION FROM MEASUREMENTS OF THE FISH","b11925bd":"This is my first commit to Kaggle. Inspired by great commit \"MultipleLinear Regression - Fish Weight Estimation\" from Melih Akdag.\nJust change the model from Linear Regression to Random Forest Regression.","762255fe":"**SCORE**","6f8472fe":"**5. PREDICTION**","62916b2e":"**1. UNDERSTANDING THE DATASET**","aa9d6ff4":"**RMSE**","22453334":"**Investigating Missing Values:**","0f0470b1":"**Different Species and Their Counts:**","8d0eb508":"**Changing the Column Names:**"}}