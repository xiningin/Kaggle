{"cell_type":{"382bdf48":"code","197b7cf1":"code","4adc2aa0":"code","69b6a33d":"code","c7c15ac3":"code","66c5ae8c":"code","74c9bacd":"code","fcde647a":"code","13fe826e":"code","879f5a57":"code","e41b6de7":"code","62adfe1c":"code","317de5ff":"code","43d88a9a":"code","2aab4412":"code","5f81aa1b":"code","3e8b0784":"code","17ca280b":"code","55ee478d":"code","81d633e8":"code","5d2b4f7b":"markdown"},"source":{"382bdf48":"# Modules\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.preprocessing import LabelEncoder","197b7cf1":"df = pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.head()","4adc2aa0":"# Missing data check\nprint(df.isnull().sum(axis=0))","69b6a33d":"# Outliers\nsns.boxplot(df['SepalLengthCm'])","c7c15ac3":"sns.boxplot(df['SepalWidthCm']) # only here we need some action","66c5ae8c":"sns.boxplot(df['PetalLengthCm'])","74c9bacd":"sns.boxplot(df['PetalWidthCm'])","fcde647a":"# Removing outliers\nQ1 = df['SepalWidthCm'].quantile(0.25)\nQ3 = df['SepalWidthCm'].quantile(0.75)\nIQR = Q3-Q1\nwar_out = (df['SepalWidthCm'] >= Q1-1.5 *IQR) & (df['SepalWidthCm'] <= Q1+1.5*IQR)\ndf_2 = df.loc[war_out]","13fe826e":"# Descriptive statistics\nprint('Shape:')\nprint(df_2.shape)\nprint('Descriptive statistics:')\nprint(df_2.describe())\nprint('Kurtosis and skewness:')\nprint(df_2.agg(['kurtosis', 'skew']).T)","879f5a57":"# Coefficient of variation: v=sigma\/mi\ndef wsp_v(x): return np.std(x)\/np.mean(x)*100\n\ndf_3 = df_2.select_dtypes(include='number')\nprint('Coefficient of variation:')\nprint(df_3.apply(wsp_v))","e41b6de7":"# Determination of the dependent and independent variable\nX = df_2.iloc[:, 1:5]\nY = df_2.iloc[:, 5].astype(str)","62adfe1c":"d = preprocessing.normalize(X)\nscaled_X = pd.DataFrame(d, columns=X.columns)\nprint(scaled_X.head())","317de5ff":"# Label encoder for Y\nenc = LabelEncoder()\nlabel_encoder = enc.fit(Y)\nY = label_encoder.transform(Y)+1\nlabel_dict = {1: 'Setosa', 2: 'Versicolor', 3: 'Virginica'}","43d88a9a":"# LDA model\nmodel_lda = LinearDiscriminantAnalysis(n_components=2)\nX_lda = model_lda.fit_transform(X, Y) # model for X data","2aab4412":"print('Results for X data model')\nprint('Priors:')\nprint(model_lda.priors_)\nprint('Coefficients:')\nprint(model_lda.coef_)\nprint('Means:')\nprint(model_lda.means_)\nprint('Explained Variance Ratio:')\nprint(model_lda.explained_variance_ratio_)","5f81aa1b":"X_scaled_lda = model_lda.fit_transform(scaled_X, Y) # model for scaled X data","3e8b0784":"print('Results for scaled X data model')\nprint('Priors:')\nprint(model_lda.priors_)\nprint('Coefficients:')\nprint(model_lda.coef_)\nprint('Means:')\nprint(model_lda.means_)\nprint('Explained Variance Ratio:')\nprint(model_lda.explained_variance_ratio_)","17ca280b":"# Plot LDA function\ndef plot_lda(X, title):\n    ax = plt.subplot(111)\n    for label, marker, color in zip(\n            range(1, 4), ('^', 's', 'o'), ('blue', 'red', 'green')):\n        plt.scatter(x=X[:, 0][Y == label],\n                    y=X[:, 1][Y == label]*-1,\n                    marker=marker,\n                    color=color,\n                    alpha=0.5,\n                    label=label_dict[label])\n    plt.xlabel('LD1')\n    plt.ylabel('LD2')\n    leg = plt.legend(loc='upper right', fancybox=True)\n    leg.get_frame().set_alpha(0.5)\n    plt.title(title)\n\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    ax.spines['bottom'].set_visible(False)\n    ax.spines['left'].set_visible(False)\n\n    plt.grid()\n    plt.tight_layout()\n    plt.show()","55ee478d":"plt.rcParams['figure.figsize'] = [12, 8]\nplot_lda(X_lda, title='LDA model')","81d633e8":"plot_lda(X_scaled_lda, title='LDA scaled model')","5d2b4f7b":"# LDA Model"}}