{"cell_type":{"49b306f5":"code","23a16b57":"code","b3b662c4":"code","e7bc7a34":"code","5a60a2bc":"code","fe2cb680":"code","b1c0eff0":"code","504e6141":"code","75b9078c":"code","300c1b60":"code","a2e31ac8":"code","6ce38290":"code","667abe43":"code","3b3ae37f":"code","c9f7f834":"code","c27538c7":"code","55dff04c":"code","65ed1a40":"code","3b429c85":"code","9f29c0b4":"code","632633f4":"code","af1ac659":"code","6c3fdc53":"code","e13532dd":"code","9e91f532":"code","950a45ac":"code","43f0c323":"markdown","174c538a":"markdown","bc41974a":"markdown","225af7c8":"markdown","227bd792":"markdown","3d488346":"markdown","d6451f7d":"markdown"},"source":{"49b306f5":"!pip install klib","23a16b57":"import pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport klib\nimport numpy as np\nfrom tqdm.notebook import tqdm","b3b662c4":"train=pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\ntest=pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')","e7bc7a34":"train.shape","5a60a2bc":"test.shape","fe2cb680":"train.head()","b1c0eff0":"breadth_id=train['breath_id']","504e6141":"print('the number of unique ids are {} in train'.format(len(set(breadth_id))))\nprint('the number of unique ids are {} in test'.format(len(set(test['breath_id']))))","75b9078c":"train.iloc[0]","300c1b60":"def datatorecord(df):\n    dic=dict()\n    for k in set(df['breath_id']): \n        dic[k]=[]\n    for row in tqdm(np.array(df)):\n        row=np.array(row)\n        try:\n            dic[row[1]].append(row[[2,3,5,6,7]])\n        except:\n            dic[row[1]].append(row[[2,3,5,6]])\n    return dic","a2e31ac8":"trainrecord=datatorecord(train)\ntestrecord=datatorecord(test)","6ce38290":"np.array(trainrecord[1]).shape","667abe43":"traind=np.array(list(trainrecord.values()))\ntestd=np.array(list(testrecord.values()))","3b3ae37f":"traind.shape","c9f7f834":"testd.shape","c27538c7":"inputs,targets=traind[...,:4],traind[...,4]","55dff04c":"inputs.shape","65ed1a40":"targets.shape","3b429c85":"print('scale of the data')\nfor l in range(4):\n    print(list(train.keys())[[2,3,5,6][l]],'  min:',np.min(inputs[...,l]),'  max:',np.max(inputs[...,l]),'  std:',np.std(inputs[...,l]),'  mean:',np.mean(inputs[...,l]))","9f29c0b4":"klib.dist_plot(train[['R','C','u_in','u_out','pressure']])","632633f4":"klib.dist_plot(test[['R','C','u_in','u_out']])","af1ac659":"sns.distplot(targets)","6c3fdc53":"plt.plot(range(80),targets[0])","e13532dd":"plt.plot(range(80),targets[1])","9e91f532":"plt.plot(range(80),targets[2])","950a45ac":"plt.plot(range(80),targets[3])","43f0c323":"# info\n","174c538a":"# Import\n","bc41974a":"# PIP","225af7c8":"# Processing\n","227bd792":"# Load Data","3d488346":"# Pressure graph","d6451f7d":"# Thank you\n\nTake the normalization steps according to your preference\n"}}