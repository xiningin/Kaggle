{"cell_type":{"85c8da27":"code","f2ea547b":"code","4681c66d":"code","6e1cef94":"code","40706942":"code","c97d8d58":"code","88241174":"code","1cead755":"code","009e2b6b":"code","72d285a8":"code","90e4e33e":"code","dd2b2d6d":"code","60bdc305":"code","e08d520e":"code","dcbf9335":"code","32c670df":"code","abfec95b":"code","7c08105a":"code","2b31449e":"code","a42dc813":"code","3bdd403c":"markdown","8793b946":"markdown","53109db6":"markdown","0aac5ce4":"markdown","ea3aa685":"markdown","5ecde9af":"markdown","e86fc3c9":"markdown"},"source":{"85c8da27":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport re\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression","f2ea547b":"data = pd.read_csv('..\/input\/quality-prediction-in-a-mining-process\/MiningProcess_Flotation_Plant_Database.csv')","4681c66d":"data","6e1cef94":"data.info()","40706942":"data.isna().sum()","c97d8d58":"for column in data.columns:\n    data[column] = data[column].apply(lambda x: x.replace(',', '.'))","88241174":"data","1cead755":"data['date'] = data['date'].apply(lambda x: re.search('[0-9]*-[0-9]*', x).group(0))\n\ndata['Year'] = data['date'].apply(lambda x: re.search('^[^-]*', x).group(0))\ndata['Month'] = data['date'].apply(lambda x: re.search('[^-]*$', x).group(0))\n\ndata = data.drop('date', axis=1)","009e2b6b":"data = data.astype(np.float)","72d285a8":"data","90e4e33e":"plt.figure(figsize=(12, 10))\nsns.heatmap(data.corr(), vmin=-1.0, vmax=1.0)\nplt.show()","dd2b2d6d":"data['Year'].unique()","60bdc305":"data = data.drop('Year', axis=1)","e08d520e":"data","dcbf9335":"target = '% Silica Concentrate'\n\ny = data[target]\n\nX_n = data.drop([target, '% Iron Concentrate'], axis=1)\nX_i = data.drop(target, axis=1)","32c670df":"scaler = StandardScaler()\n\nX_n = scaler.fit_transform(X_n)\nX_i = scaler.fit_transform(X_i)","abfec95b":"X_n_train, X_n_test, y_n_train, y_n_test = train_test_split(X_n, y, train_size=0.7)\nX_i_train, X_i_test, y_i_train, y_i_test = train_test_split(X_i, y, train_size=0.7)","7c08105a":"model_n = LinearRegression()\nmodel_i = LinearRegression()","2b31449e":"model_n.fit(X_n_train, y_n_train)\nprint(\"Model without iron R^2 Score:\", model_n.score(X_n_test, y_n_test))","a42dc813":"model_i.fit(X_i_train, y_i_train)\nprint(\"Model with iron R^2 Score:\", model_i.score(X_i_test, y_i_test))","3bdd403c":"# Splitting and Scaling","8793b946":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/8TgEAhWZB1k","53109db6":"# Preprocessing","0aac5ce4":"# Training","ea3aa685":"# Getting Started","5ecde9af":"# Feature Engineering","e86fc3c9":"# Visualization"}}