{"cell_type":{"aad25a65":"code","8f568543":"code","874e89d9":"code","2501d822":"code","a0660cda":"code","fd751936":"code","55251f93":"code","6e3703e5":"code","33f5f7b6":"markdown","ad1f1e08":"markdown","ab5ecedb":"markdown","2509a2de":"markdown","edc649d0":"markdown"},"source":{"aad25a65":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom sklearn import linear_model\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8f568543":"\ntrain_df = pd.read_csv('..\/input\/train_V2.csv')\ntest_df = pd.read_csv('..\/input\/test_V2.csv')\ntrain_df.info()","874e89d9":"corr_df = train_df.corr()\ncorr_df = corr_df[abs(corr_df)>0.3].fillna(0)\n\nplt.figure(figsize=(20, 20))\nsns.heatmap(corr_df, annot=True, linewidth=0.5)\nplt.show()","2501d822":"train_df = train_df.dropna(subset=[\"walkDistance\", \"swimDistance\", \"rideDistance\", \"winPlacePerc\"])\ntrain_df[\"Distance\"] = train_df[\"walkDistance\"] + train_df[\"swimDistance\"] + train_df[\"rideDistance\"]\nplt.figure(figsize=(20, 20))\nsns.pairplot(train_df.loc[:,[\"Distance\",\"winPlacePerc\"]].sample(n=10000))\nplt.show()","a0660cda":"train_df = train_df.dropna(subset=[\"boosts\", \"heals\", \"weaponsAcquired\"])\nitem_df = train_df.loc[:,[\"boosts\", \"heals\", \"weaponsAcquired\", \"winPlacePerc\"]]\nplt.figure(figsize=(20, 20))\nsns.pairplot(item_df.sample(n=10000))\nplt.show()\n#weaponsAcquired is not related with the target.","fd751936":"check_df = train_df.loc[:,[\"boosts\", \"heals\", \"Distance\", \"winPlacePerc\"]]\nplt.figure(figsize=(20, 20))\nsns.pairplot(check_df.sample(n=10000))\nplt.show()","55251f93":"# regression.\n\npara = train_df[[\"boosts\",\"heals\",\"Distance\",\"winPlacePerc\"]]\npara = para.dropna()\nx = para[[\"boosts\",\"heals\",\"Distance\"]]\ny = para[\"winPlacePerc\"]\nreg = linear_model.LinearRegression().fit(x.values,y.values)\nprint(reg.coef_)","6e3703e5":"test_df = test_df.fillna(test_df.median())\ntest_df[\"Distance\"] = test_df[\"walkDistance\"] + test_df[\"swimDistance\"] + test_df[\"rideDistance\"]\ntpara = test_df.loc[:,[\"boosts\",\"heals\",\"Distance\"]]\ny = reg.predict(tpara.values)\npredict_s = pd.Series(y)\nid_s = test_df[\"Id\"]\nsubmission_df = pd.DataFrame({\"Id\":id_s, \"winPlacePerc\":predict_s})\nsubmission_df.to_csv(\"submission.csv\",index=False)\n#print(submission_df)","33f5f7b6":"## Distance\nCondition: The longer players stay in a battle, the more they move.","ad1f1e08":"## Check","ab5ecedb":"# Model","2509a2de":"# Feature Engneering","edc649d0":"## Item\nCondition: The longer players stay in a battle, the more they use items."}}