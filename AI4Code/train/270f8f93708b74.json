{"cell_type":{"5eba8b4a":"code","a3031d85":"code","10046b33":"code","aeeebf92":"code","d70aea98":"code","3dfbf1be":"code","149ab497":"code","7b691286":"code","f8c398b5":"code","757ca2a9":"code","38149433":"code","ba096356":"code","abf9d72d":"code","ccc12375":"code","78decdf0":"code","c65da6e8":"code","24f3e4b1":"code","ed3e5b2d":"code","040beac8":"code","d196a3e5":"code","22593f97":"code","0a02aa66":"code","31ca6add":"code","6283d869":"code","107a881c":"code","15e9115f":"code","ec2aeade":"code","a12cff2a":"markdown","c8408d05":"markdown","9b09b254":"markdown","d2329fcf":"markdown","9ac7fb21":"markdown","3f005e02":"markdown","b2cb3aad":"markdown","629e227d":"markdown","9b5bba14":"markdown","da0c5660":"markdown","00547cc5":"markdown","c4f79565":"markdown","05e78ea8":"markdown","15d0da51":"markdown","3f4b89dd":"markdown","b8188ba1":"markdown","fe4bcab2":"markdown"},"source":{"5eba8b4a":"# https:\/\/pypi.org\/project\/pandas\/\nimport pandas as pd\n\n# https:\/\/numpy.org\/\nimport numpy as np\n\n# https:\/\/docs.python.org\/3\/library\/csv.html\nimport csv\n\n# https:\/\/www.nltk.org\/api\/nltk.tokenize.html\nfrom nltk.tokenize import RegexpTokenizer\n\n# https:\/\/docs.python.org\/3\/library\/re.html\nimport re\n\n# https:\/\/docs.python.org\/3\/library\/unicodedata.html\nfrom unicodedata import normalize\n\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html\nfrom sklearn.model_selection import train_test_split\n\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.feature_extraction.text.CountVectorizer.html\nfrom sklearn.feature_extraction.text import CountVectorizer\n\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LogisticRegression.html\nfrom sklearn.linear_model import LogisticRegression\n\n# https:\/\/scikit-learn.org\/stable\/modules\/model_evaluation.html\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.confusion_matrix.html\nfrom sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix","a3031d85":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","10046b33":"# Realiza uma limpeza bem b\u00e1sica de um texto, preparando-o para classifica\u00e7\u00e3o. \n\ndef limpar_texto(texto):\n\n    # Converte para min\u00fasculas\n    texto = texto.lower()\n    \n    # Remove acentos\n    texto = normalize('NFKD', texto).encode('ASCII', 'ignore').decode('ASCII')\n    \n    # Remove caracteres especiais e n\u00fameros\n    texto = re.sub(r'[^a-zA-Z_]',' ',texto)\n    \n    # Remove espa\u00e7os extras e palavras menores do que um tamanho m\u00ednimo (no exemplo abaixo, 3 caracteres)\n    tokens = tokenizer.tokenize(texto)\n    tokens = [palavra for palavra in tokens if len(palavra) >= 3]      \n    texto = ' '.join(tokens)  \n    \n    return texto","aeeebf92":"# Calcula m\u00e9tricas de desempenho do classificador. Fique \u00e0 vontade para incluir outras m\u00e9tricas que julgar \u00fateis.\n# Lembre-se, todavia, que o desafia utiliza a m\u00e9trica F1 (macro) para avalia\u00e7\u00e3o dos resultados. \n# Refer\u00eancia: https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.f1_score.html\n\ndef get_metrics(y_test, y_predicted, average='macro'):  \n    precision = round(precision_score(y_test, y_predicted, pos_label=1, average=average, zero_division=0),4)             \n    recall = round(recall_score(y_test, y_predicted, pos_label=1, average=average),4)\n    f1 = round(f1_score(y_test, y_predicted, pos_label=1, average=average, zero_division=0),4)\n    accuracy = round(accuracy_score(y_test, y_predicted),4)\n    return accuracy, precision, recall, f1","d70aea98":"bots = [\n    {'id':0, 'nome':'Nenhum'},\n    {'id':1, 'nome':'Alistamento Militar'},\n    {'id':2, 'nome':'COVID'},\n    {'id':3, 'nome':'Login \u00danico'},\n    {'id':4, 'nome':'IRPF - Pergunt\u00e3o 2020'},\n    {'id':5, 'nome':'PGMEI - Programa Gerador de DAS do Microempreendedor Individual'},\n    {'id':6, 'nome':'POC Selo Turismo Respons\u00e1vel'},\n    {'id':7, 'nome':'Cadastur - Cadastro dos Prestadores de Servi\u00e7os Tur\u00edsticos'},\n    {'id':8, 'nome':'Tuberculose'}\n]","3dfbf1be":"random_state=112020","149ab497":"# Nome do arquivo CSV onde est\u00e3o armazenadas as perguntas rotuladas, para treino e teste.\narquivo_treino_testes = '..\/input\/desafio-ia-2020-pln-chatbots\/' + 'treino_testes.csv'\n\n# Nome do arquivo CSV onde ser\u00e3o armazenadas as perguntas n\u00e3o rotuladas, para classifica\u00e7\u00e3o e submiss\u00e3o.\n# Cada pergunta aqui conter\u00e1 um identificador que dever\u00e1 ser mantido.\narquivo_submissao = '..\/input\/desafio-ia-2020-pln-chatbots\/' + 'submissao.csv'\n\n# Nome do arquivo que ser\u00e1 criado com os r\u00f3tulos gerados pelo classificador.\n# Este \u00e9 o arquivo que ser\u00e1 submetido \u00e0 p\u00e1gina do desafio e que gerar\u00e1 um score.\n# Ele dever\u00e1 conter apenas os identificadores das perguntas e os identificadores dos respectivos bots.\narquivo_submissao_classificado = '..\/working\/' + 'submissao_equipe.csv'","7b691286":"# Carrega o arquivo CSV\ndf = pd.read_csv(arquivo_treino_testes, index_col=None, engine='python', sep =',', encoding=\"utf-8\")\nprint('Total de registros carregados:',len(df))\n\n# Exibe uma amostra dos dados carregados\ndf.tail(-1)","f8c398b5":"# Distribui\u00e7\u00e3o das classes nos dados fornecidos. Note que n\u00e3o h\u00e1 nenhum pergunta rotulada como \"0\".\ndf.bot_id.value_counts()","757ca2a9":"# Tokenizador: utilizado para separar uma frase em palavras.\ntokenizer = RegexpTokenizer(r'\\w+')\n\n# Limpa os dados, preparando-os para classifica\u00e7\u00e3o.\ndf['pergunta'] = df['pergunta'].apply(limpar_texto)\ndf.tail(-1)","38149433":"vectorizer = CountVectorizer()\nvectorizer.fit_transform(df['pergunta'].tolist())","ba096356":"# Vamos dividir da seguinte forma: 75% para treino, 25% para teste. Os registros dever\u00e3o ser embaralhados, mas\n# a distribui\u00e7\u00e3o das classes deve permanecer a mesma para os dois conjuntos de dados.\ndf_train, df_test = train_test_split(df, test_size=0.25, stratify=df['bot_id'], shuffle=True, random_state=random_state)\nprint('Tamanho do Treino:',len(df_train),'- Tamanho do Teste:',len(df_test))","abf9d72d":"# Distribui\u00e7\u00e3o das classes na massa de treino.\ndf_train.bot_id.value_counts()","ccc12375":"# Distribui\u00e7\u00e3o das classes na massa de teste.\ndf_test.bot_id.value_counts()","78decdf0":"clf = LogisticRegression(max_iter=10000, n_jobs=-1, random_state=random_state)","c65da6e8":"# Treina o classificador com a massa de treino.\nX_train = vectorizer.transform(df_train['pergunta'].tolist())\ny_train =  df_train['bot_id'].tolist()\nclf.fit(X_train, y_train)","24f3e4b1":"# Avalia a performance do classificador treinado, usando a massa reservada para testes.\nX_test = vectorizer.transform(df_test['pergunta'].tolist())\ny_test =  df_test['bot_id'].tolist()\ny_predicted = clf.predict(X_test)","ed3e5b2d":"# Obt\u00e9m as m\u00e9tricas de desempenho - o quanto nosso classificador acertou?\naccuracy, precision, recall, f1 = get_metrics(y_test, y_predicted)\nprint('Acur\u00e1cia:',accuracy,'- Precis\u00e3o:',precision,'- Recall:',recall,'- F1:',f1)","040beac8":"# Exibe uma matriz de confus\u00e3o (https:\/\/pt.wikipedia.org\/wiki\/Matriz_de_confus%C3%A3o)\ncm = confusion_matrix(y_test, y_predicted)\nprint(cm)","d196a3e5":"# Treina o classificador com toda a base fornecida. (lembrando que os dados j\u00e1 foram limpos anteriormente)\nX_train = vectorizer.transform(df['pergunta'].tolist())\ny_train =  df['bot_id'].tolist()\nclf.fit(X_train, y_train)","22593f97":"# Carrega as perguntas n\u00e3o rotuladas\ndf_test = pd.read_csv(arquivo_submissao, index_col=None, engine='python', sep =',', encoding=\"utf-8\")\nprint('Total de registros carregados:',len(df_test))","0a02aa66":"# Limpa os dados, preparando-os para classifica\u00e7\u00e3o.\ndf_test['pergunta'] = df_test['pergunta'].apply(limpar_texto)\ndf_test.tail(-1)","31ca6add":"# Vetoriza os textos que ser\u00e3o classificados.\nX_test = vectorizer.transform(df_test['pergunta'].tolist())","6283d869":"# Executa a classifica\u00e7\u00e3o dos registros n\u00e3o rotulados.\ny_predicted = clf.predict(X_test)\ndf_test['bot_id'] = y_predicted","107a881c":"# Lista os bots, para consulta\nfor bot in bots:\n    print(bot['id'],'-',bot['nome'])","15e9115f":"# Exibe uma amostra dos resultados, para uma \u00faltima an\u00e1lise.\ndf_test.head(-1)  ","ec2aeade":"df_test.to_csv(arquivo_submissao_classificado, index=False, encoding=\"utf-8\", columns=['id','bot_id'])","a12cff2a":"# Classificar os registros n\u00e3o rotulados para o desafio\n\nDe forma c\u00edclica, repita os passos acima testando outras prepara\u00e7\u00f5es de dados, outros vetorizadores, outros par\u00e2metros e outras t\u00e9cnicas de classifica\u00e7\u00e3o. Quando estiver satisfeito com a performance do seu modelo, siga os passos abaixo.\n\nVamos agora treinar o classificador com **todos** os registros pr\u00e9-rotulados. Este classificador ser\u00e1 ent\u00e3o utilizado para inferir os bots das perguntas n\u00e3o rotuladas do desafio, como veremos a seguir.","c8408d05":"# Desafio PLN e Chatbots - SERPRO\n-----------------------------------\nOs participantes tem neste notebook um exemplo bem b\u00e1sico de como proceder em rela\u00e7\u00e3o ao desafio proposto. As t\u00e9cnicas aqui utilizadas s\u00e3o muito simples, e dificilmente ser\u00e3o as mais adequadas para o problema. Ele deve ser visto t\u00e3o somente como um ponto de partida para a explora\u00e7\u00e3o de estrat\u00e9gias mais sofisticadas.\n\nOs resultados aqui obtidos servem apenas como uma *baseline* a ser superada pelos participantes.\n\n#### Observa\u00e7\u00f5es Importantes!\n\nO participante deve ficar bastante atento para as quest\u00f5es abaixo:\n\n* Este notebook de exemplo **n\u00e3o** inclui uma solu\u00e7\u00e3o para o \"dificultador\" deste desafio, que \u00e9 rotular perguntas que n\u00e3o se encaixam em nenhum dos bots da base de treinamento, e que estar\u00e3o na base de submiss\u00e3o, a ser classificada. **N\u00e3o \u00e9 obrigat\u00f3rio prover uma solu\u00e7\u00e3o para esse problema**, mas quem conseguir faz\u00ea-lo certamente obter\u00e1 um *score* bem maior no *Leaderboard*. \n\n* Qualquer t\u00e9cnica ou algoritmo que fa\u00e7a uso de randomiza\u00e7\u00e3o deve utilizar semente(s) aleat\u00f3ria(s) fixa(s), para garantir reprodutibilidade dos resultados submetidos.\n\n* C\u00f3digos que tenham obtido boa coloca\u00e7\u00e3o no *leaderboard* devem ser versionados. Se o score obtido ficar entre os tr\u00eas primeiros at\u00e9 o final do desafio, o c\u00f3digo correspondente ser\u00e1 analisado pela comiss\u00e3o organizadora para verifica\u00e7\u00e3o de reprodutibilidade. \n\n* **Leia com cuidado o regulamento do desafio, para n\u00e3o usar ferramentas, pr\u00e1ticas ou servi\u00e7os n\u00e3o permitidos**.\n\nEm caso de d\u00favidas, verifique nossa *FAQ* (https:\/\/sites.google.com\/serpro.gov.br\/desafio-ia-2020-faq\/in%C3%ADcio) ou entre em contato com a rede de especialistas de IA: lista-rede-especialistas-ia@grupos.serpro.gov.br","9b09b254":"# Treinar o classificador e avaliar o seu desempenho.\n\nNeste exemplo, treinaremos um simples classificador **multiclasse**. Esta \u00e9 a tentativa mais b\u00e1sica de resolver o problema. \n\nAp\u00f3s o treinamento, avaliaremos sua performance com a massa de testes, conferindo as m\u00e9tricas de desempenho. \n\nO desafiante pode explorar outras possibilidades. Por exemplo, classificadores espec\u00edficos para cada classe podem fornecer respostas mais precisas, ao custo de uma maior complexidade. \n\n#### Importante!\n\nNote que o classificador abaixo escolher\u00e1 uma resposta **entre as classes para as quais ele foi treinado**. Ele **n\u00e3o** saber\u00e1 lidar com perguntas que n\u00e3o est\u00e3o relacionadas a nenhum dos bots da nossa base de treinamento. E o arquivo de submiss\u00e3o (aquele que cont\u00e9m as perguntas sem r\u00f3tulos) ter\u00e1 v\u00e1rios exemplos desse tipo. Tais perguntas dever\u00e3o ser classificadas com o identificador **0** (**zero**). \n\nPense em uma solu\u00e7\u00e3o para esse problema!","d2329fcf":"# Separar os dados em treino e teste\n\nPara testar o desempenho dos nosso(s) classificador(es), vamos nesse primeiro momento dividir os dados rotulados em uma massa de **treinamento** e outra de **testes**. Deste modo, poderemos ter uma no\u00e7\u00e3o de como ser\u00e1 a sua taxa de acertos.\n\nVale explorar outras formas mais sofisticadas de an\u00e1lise, como, por exemplo, uma **valida\u00e7\u00e3o cruzada** (https:\/\/scikit-learn.org\/stable\/modules\/cross_validation.html). Assim voc\u00ea ter\u00e1 mais garantias do real desempenho do(s) seu(s) classificadore(s) quando ele(s) for(em) trabalhar com dados novos. \n\nLembre-se sempre que o desafio utiliza a m\u00e9trica **F1 macro** (https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.f1_score.html) para c\u00e1lculo do *score*:","9ac7fb21":"### Nomes dos Arquivos Utilizados\n\nNomes dos arquivos que ser\u00e3o utilizados ao longo deste notebook.","3f005e02":"# Bibliotecas utilizadas","b2cb3aad":"# Preparar os textos para classifica\u00e7\u00e3o\n\nA prepara\u00e7\u00e3o dos dados \u00e9 uma das etapas mais importantes para se obter uma boa performance na classifica\u00e7\u00e3o de textos, e pode significar a diferen\u00e7a entre o sucesso e o fracasso de um projeto.\n\nProcure expandir a prepara\u00e7\u00e3o b\u00e1sica oferecida aqui de forma a melhorar o desempenho do(s) classificador(es). Vale analisar tudo o que pode contribuir para confundir os algoritmos de classifica\u00e7\u00e3o e prejudicar sua taxa de acertos. ","629e227d":"# Carregar os dados de treino e teste\n\nCarrega os dados do arquivo CSV com as perguntas rotuladas com os *ids* dos bots aos quais pertencem. Os r\u00f3tulos variam de **1** a **8**, como pode ser conferido na lista de bots definida na se\u00e7\u00e3o **inicializa\u00e7\u00e3o**. Estas perguntas ser\u00e3o usadas para treinamento e teste do(s) classificador(es).\n\nTodas as perguntas deste arquivo est\u00e3o relacionadas a um (e apenas um) dos bots listados acima. Ou seja, n\u00e3o h\u00e1 nenhuma pergunta rotulada como **0** (zero). Este tipo de pergunta (n\u00e3o relacionada a nenhum dos bots) aparecer\u00e1 **apenas no arquivo de submiss\u00e3o**.","9b5bba14":"# Escolher um tipo de classificador\n\nUsaremos neste exemplo um modelo de *Regress\u00e3o Log\u00edstica*: https:\/\/pt.wikipedia.org\/wiki\/Regress%C3%A3o_log%C3%ADstica\n\nExistem **muitas** outras t\u00e9cnicas que valem a explora\u00e7\u00e3o. O classificador de regress\u00e3o log\u00edstica \u00e9 um dos mais simples, por\u00e9m oferece boa performance e seus resultados s\u00e3o facilmente interpret\u00e1veis. Todavia, \u00e9 bem poss\u00edvel que ele n\u00e3o ofere\u00e7a os melhores resultados.\n\nVale ficar atento tamb\u00e9m \u00e0 calibra\u00e7\u00e3o dos hiper-par\u00e2metros do classificador. Eles podem fazer uma **grande** diferen\u00e7a.\n\nLembre-se sempre de manter uma semente aleat\u00f3ria fixa, caso seu modelo fa\u00e7a uso de alguma, para obter reprodutibilidade dos resultados obtidos. Veja a vari\u00e1vel \"*random_state*\" no exemplo abaixo (cujo valor foi definido na se\u00e7\u00e3o **Inicializa\u00e7\u00e3o**).","da0c5660":"# Fun\u00e7\u00f5es","00547cc5":"### Semente Aleat\u00f3ria\n\nSemente aleat\u00f3ria a ser usada ao longo desse notebook.\n\nProcure manter sempre a mesma semente aleat\u00f3ria (ou sementes aleat\u00f3rias, caso utilize mais de uma). Deste modo, poder\u00e1 comparar a evolu\u00e7\u00e3o entre diferentes t\u00e9cnicas e tamb\u00e9m obter a reprodutibilidade exigida pelo regulamento do desafio.\n\nO valor da semente abaixo \u00e9 apenas ilustrativo, fique \u00e0 vontade para alter\u00e1-lo.","c4f79565":"### Chatbots Dispon\u00edvels para Treinamento\n\nA seguir a rela\u00e7\u00e3o dos chatbots disponibilizados para o desafio.\n\nO \"*id*\"  \u00e9 o identificador do chatbot. Ele est\u00e1 expl\u00edcito aqui para evitar quaisquer d\u00favidas. O(s) classificador(es) deve(m) ser treinado(s) usando **ESTES** identificadores espec\u00edficos. \n\nO identificador **0** (zero) dever\u00e1 ser atribu\u00eddo \u00e0s perguntas que forem consideradas como **n\u00e3o** direcionadas a nenhum dos bots abaixo. Isso visa simular um ambiente real de orquestra\u00e7\u00e3o, onde esse tipo de situa\u00e7\u00e3o ocorre com frequ\u00eancia. Tais perguntas existir\u00e3o apenas no arquivo de submiss\u00e3o, sem r\u00f3tulos.","05e78ea8":"# Submeter os resultados \u00e0 p\u00e1gina do desafio\n\nEntre na p\u00e1gina do desafio e fa\u00e7a o upload do arquivo *csv* obtido acima, com as classifica\u00e7\u00f5es realizadas pelo seu modelo. Esse arquivo deve conter apenas as colunas \"*id*\" e \"*id_bot*\". O site ir\u00e1 calcular automaticamente sua m\u00e9trica de acerto.\n\nSe o score obtido estiver nas tr\u00eas primeiras posi\u00e7\u00f5es, fa\u00e7a um versionamento do c\u00f3digo. Se esta posi\u00e7\u00e3o se mantiver at\u00e9 o final da competi\u00e7\u00e3o, ele ser\u00e1 auditado para verifica\u00e7\u00e3o de reprodutibilidade.\n\nVoc\u00ea pode fazer quantas tentativas desejar, at\u00e9 atingir um limite di\u00e1rio (consulte o regulamento). Use isso para melhorar suas m\u00e9tricas.","15d0da51":"# Obter um vetorizador\nNessa etapa, vamos obter um *vetorizador*. Seu objetivo \u00e9 converter os textos em **vetores num\u00e9ricos**, para ent\u00e3o submet\u00ea-los aos algoritmos de classifica\u00e7\u00e3o. \n\nAqui usamos um mero contador de palavras (ou *Bag of Words*, https:\/\/pt.wikipedia.org\/wiki\/Modelo_saco-de-palavras). \u00c9 uma t\u00e9cnica extremamente simples. H\u00e1 outras formas de vetoriza\u00e7\u00e3o bem mais sofisticadas e que provavelmente oferecer\u00e3o melhores resultados. \n\nN\u00e3o deixe de analisar tamb\u00e9m as diversas possibilidades oferecidas pelos *hiper-par\u00e2metros* dos vetorizadores. Ganhos significativos poder\u00e3o ser obtidos assim.","3f4b89dd":"# Salvar os registros classificados.\n\nApenas os identificadores das perguntas e os identificadores dos respectivos bots devem armazenados!","b8188ba1":"# Boa Sorte!","fe4bcab2":"# Inicializa\u00e7\u00e3o"}}