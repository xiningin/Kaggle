{"cell_type":{"5f4095f6":"code","ca5e9856":"code","163a3c56":"code","d3772dd8":"code","6cbd2cfc":"code","ab44f3de":"code","c602017a":"markdown","c480cb6a":"markdown"},"source":{"5f4095f6":"!pip install orjson efficientnet_pytorch","ca5e9856":"import os\n\nimport numpy as np\nimport PIL.Image as Img\nimport torch\nimport orjson as json\n\nfrom torchvision import transforms\nfrom efficientnet_pytorch import EfficientNet\nfrom tqdm.auto import tqdm","163a3c56":"class VaccineImgDataset:\n    def __init__(self, img_dir: str, model_name: str):\n        self.dir = img_dir\n        self.files = list(filter(lambda x: \".npy\" in x, os.listdir(self.dir)))\n        self.model = EfficientNet.from_pretrained(model_name).to(torch.device('cuda:0'))\n        self.pipeline = transforms.Compose([\n            transforms.Resize(224),\n            transforms.ToTensor(),\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),\n        ])\n        \n    @staticmethod\n    def load_image(path: str) -> np.ndarray:\n        image = np.load(path)\n        image = np.stack((image,)*3, axis=-1)\n        return Img.fromarray(image.astype(np.uint8))\n        \n    def __len__(self):\n        return len(self.files)\n    \n    def ids(self):\n        return list(map(lambda x: x.replace('.npy', ''), self.files))\n    \n    def __getitem__(self, idx):\n        image = VaccineImgDataset.load_image(os.path.join(self.dir, self.files[idx]))\n        image = self.pipeline(image).unsqueeze(0).to(torch.device(\"cuda:0\"))\n        with torch.no_grad():\n            features = self.model(image).squeeze().cpu().numpy()\n        return features","d3772dd8":"ds = VaccineImgDataset(\"\/kaggle\/input\/stanford-covid-vaccine\/bpps\/\", \"efficientnet-b7\")","6cbd2cfc":"features = [x for x in tqdm(ds)]\nmapping = {k:v for k,v in zip(ds.ids(), features)}","ab44f3de":"with open(\"efficientnet-features.json\", 'wb') as f:\n    f.write(json.dumps(mapping, option=json.OPT_SERIALIZE_NUMPY))","c602017a":"# Hi!\n\nI would like to make it easy for other kagglers to use these weird images in OpenVaccine data folder. It is somewhat like a representation of respective RNAs. So, i've decided to extract features from these images using efficientnet-b7.\n\nFeel free to use them. Note that you will likely need orjson to correctly load this features.","c480cb6a":"Enjoy!"}}