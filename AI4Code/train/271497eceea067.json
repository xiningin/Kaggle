{"cell_type":{"01d7bc28":"code","08c00441":"code","112fb8df":"code","45abdf58":"code","560e4003":"code","8291cae8":"code","494a90af":"code","f3203252":"code","d022668c":"code","8c041875":"markdown","8b931804":"markdown","dca09652":"markdown","d43f5fcd":"markdown","e8629031":"markdown","6913f01f":"markdown","747ba989":"markdown","fae90eb3":"markdown","2ea3ed47":"markdown","f8d59873":"markdown"},"source":{"01d7bc28":"import pandas as pd","08c00441":"df =pd.read_csv(\"..\/input\/hepatitis-c-virus-blood-biomarkers\/hcvdat0.csv\")\ndf.head()","112fb8df":"df.info()","45abdf58":"import scipy.stats as stats\nfrom scipy.stats import chi2_contingency\n\nimp_var=[]\nh=dict()\nu=dict()\nunimp_var=[]\n\nclass ChiSquare:\n    def __init__(self, dataframe):\n        self.df = dataframe\n        self.p = None #This is The P-Value\n        self.chi2 = None #Here we go for Chi Test Statistic\n        self.dof = None\n        \n        self.dfTabular = None\n        self.dfExpected = None\n        \n    def _print_chisquare_result(self, colX, alpha):\n        if self.p<alpha:\n          h[colX]=self.p\n        else:\n          unimp_var.append(colX)\n          u[colX]=self.p\n            \n    def TestIndependence(self,colX,colY, alpha=0.05):\n        X = self.df[colX].astype(str)\n        Y = self.df[colY].astype(str)\n        \n        self.dfObserved = pd.crosstab(Y,X) \n        chi2, p, dof, expected = stats.chi2_contingency(self.dfObserved.values)\n        #print('chi2' , chi2, 'p' , p, 'dof' ,dof)\n        #print('dfObserved' , self.dfObserved.values , 'expected' , expected)\n        \n        #print()\n        \n        self.p = p\n        self.chi2 = chi2\n        self.dof = dof \n        \n        self.dfExpected = pd.DataFrame(expected, columns=self.dfObserved.columns, index = self.dfObserved.index)\n        \n        self._print_chisquare_result(colX, alpha)","560e4003":"cT = ChiSquare(df)\ntestColumns = df.drop(columns=['Category']).columns\n\nfor var in testColumns:\n    cT.TestIndependence(colX=var,colY=\"Category\" )  ","8291cae8":"imp=pd.DataFrame()\nm = sorted(h.items(), key=lambda x: x[1], reverse=False)\nfor i in range(len(m)):\n  imp_var.append(m[i][0])\nif(len(imp_var)>len(unimp_var)):\n  for i in range(len(imp_var)-len(unimp_var)):\n    unimp_var.append(\"\")\nelse:\n  for i in range(len(unimp_var)-len(imp_var)):\n    imp_var.append(\"\")\nimp['Important Variables']=imp_var\nimp['Unimportant Variables']=unimp_var\nimp","494a90af":"Unimp_Fea = imp['Unimportant Variables'].loc[imp['Unimportant Variables'] != ''].to_list()\nUnimp_Fea","f3203252":"df.drop(Unimp_Fea ,axis=1,inplace=True)\ndf.info()","d022668c":"df_new.to_csv(\"fs_data.csv\",index=False)","8c041875":"### Output CSV","8b931804":"### Removing Unimportant Features","dca09652":"### Creating Function of Chi-Square test","d43f5fcd":"> **1.** **Observed frequency** = No. of observations of class\n>\n> **2.** **Expected frequency** = No. of expected observations of class if there was no relationship between the feature and the target.","e8629031":"### Applying Feature Selection on Manipulated Data","6913f01f":"### Chi-Square Test for Feature Selection","747ba989":"> #### Since its categorical data chi-square test is more preferable","fae90eb3":"### Lets Check For Important and Unimporatant Features","2ea3ed47":"![Chi- square score](https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/Capture-214.png)","f8d59873":"## **Feature Selection**\n\nInspired from : Atharv Chaudhari's notebook https:\/\/www.kaggle.com\/atharvchaudhari\/mp-feature-selection?rvi=1"}}