{"cell_type":{"3a07e455":"code","a3720360":"code","8a30d112":"code","b7924276":"code","b744c588":"code","168fcd95":"code","a736edc5":"code","3877f7d9":"code","f97c8ff6":"code","8bfb2510":"code","3d3c8a5f":"code","9423365d":"code","513cb7e6":"code","740f2fd4":"code","5b1d3726":"code","16eabf1d":"code","f6b5c9b3":"code","c3eabfaa":"code","7706ce14":"code","39797a98":"code","5ad59752":"code","42899a0b":"markdown","20083e54":"markdown","1801ea23":"markdown","06b80c3f":"markdown","0d5ac5d1":"markdown","18d6939a":"markdown","8d058a11":"markdown","da7ed06d":"markdown","cdc862be":"markdown","3046972b":"markdown","1a3b3662":"markdown","2fc7dc5f":"markdown","7a2b76b3":"markdown","cbf8d247":"markdown","97c58283":"markdown"},"source":{"3a07e455":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a3720360":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')","8a30d112":"df = pd.read_table('\/kaggle\/input\/chipotle\/chipotle.tsv')","b7924276":"df.head()","b744c588":"df.shape","168fcd95":"df.info()","a736edc5":"# get rid of $ sign and convert the column to float\ndf['item_price'] = df['item_price'].str.split('$').str.get(1)\ndf['item_price'] = df['item_price'].astype('float')","3877f7d9":"total_revenue = df['item_price'].sum()\nprint('The total revenue is ${}'.format(total_revenue))","f97c8ff6":"order_price = df.groupby('order_id')['item_price'].sum().reset_index()\norder_price.head()","8bfb2510":"print('The highest single order price: ${}'.format(order_price['item_price'].max()))\nprint('The lowest single order price: ${}'.format(order_price['item_price'].min()))\nprint('The average single order price: ${:.2f}'.format(order_price['item_price'].mean()))\nprint('The median of single order price: ${:.2f}'.format(order_price['item_price'].median()))","3d3c8a5f":"plt.figure(figsize=(10,5))\nsns.boxplot(data=order_price, x='item_price');","9423365d":"plt.figure(figsize=(10,5));\nplt.hist(order_price['item_price'], bins=70);\nplt.xlabel('single order price');\nplt.ylabel('count');\nplt.title('Distribution of Single Order Price');","513cb7e6":"item_quantity = df.groupby('item_name')['quantity'].sum().reset_index().sort_values(by='quantity', ascending=False)","740f2fd4":"item_quantity.head()","5b1d3726":"sns.barplot(data=item_quantity.iloc[:10], x='quantity', y='item_name');\nplt.title('Top 10 Best Selling Items');\nplt.ylabel('');","16eabf1d":"sns.barplot(data=item_quantity.iloc[-10:], x='quantity', y='item_name');\nplt.title('Top 10 Worst Selling Items');\nplt.ylabel('');","f6b5c9b3":"chicken_bowl = df[df['item_name'] == 'Chicken Bowl']\nchicken_bowl.loc[:, 'choice_description'] = chicken_bowl['choice_description'].str.replace('[', '', regex=True)\nchicken_bowl.loc[:, 'choice_description'] = chicken_bowl['choice_description'].str.replace(']', '', regex=True)","c3eabfaa":"chicken_bowl.loc[:, 'choice_description'] = chicken_bowl['choice_description'].str.split(', ')","7706ce14":"choices_dict = {}\n\nfor choices in chicken_bowl['choice_description']:\n    for choice in choices:\n        if choice not in choices_dict:\n            choices_dict[choice] = 0\n        choices_dict[choice] += 1\n\nchoices_dict","39797a98":"choices_df = pd.DataFrame(choices_dict.items(), columns=['choice', 'occurances'])\nchoices_df = choices_df.sort_values('occurances', ascending=False)\n\nchoices_df","5ad59752":"plt.figure(figsize=(10,5))\nsns.barplot(data=choices_df, x='occurances', y='choice');\nplt.title('Whice choice got ordered most often for chicken bowl?');","42899a0b":"As you can see above, the dataset comes with 4,622 rows and 5 columns. Each row represents one item in an order. The columns include order id, quantity of the item, item name, side choice that comes with the item, and the item price. Notice that the item price column is already the total price of that specific item. So, we do not need to multiply quantity with price to get the total price. ","20083e54":"Carnitas salad is the least popular item out there, only got ordered once.","1801ea23":"plot above shows the number of occurrances descendingly. Rice, cheese, lettuce, sour cream, and black beans were the most popular side choices when people order chicken bowl at chipotle. It might also indicate that for \nChipotle, these 5 sides should be prepared and stored in inventory more than others so Chiptole always has enough to serve its customers.","06b80c3f":"# Order Price Range","0d5ac5d1":"In this notebook, I will explore the Chipotle sales data by analyzing and visualizing it with Python. I will follow the steps of taking a quick look as the data first. Then, modify the data a little so that it will be the form that suits our needs for plots and analytics. \n\nWhat I want to know from the sales of Chipotles are the price range of every single order, the best and worst selling items, and the popular side choices that come with the order. ","18d6939a":"With the box plot and bar plot above, we know that most orders were in the range of 15 to 30 dollars. Only a few orders exceeded over 50 or even 100 dollars.","8d058a11":"The most popular item is chicken bowl, which got ordered for more than 700 times.","da7ed06d":"Add up all the prices to get the total revenue, at least for this small dataset.","cdc862be":"Again, I used groupby to get the total quantity for each item and sort them descendingly.","3046972b":"Here we can get the data type of each feature. For the further analysis, we need to change the type of item price from string to numerical.","1a3b3662":"# Most popular side choice for the order of chicken bowl","2fc7dc5f":"Here I want to focus on what sides people tended to choose along with the most popular item chicken bowl. I would like to count the number of occurrances for side choices in chicken bowl to get my answer.\n\nBecause the choice_description column is in string type and contains \"[\" and \"]\", I first removed them by using replace method. ","7a2b76b3":"I used groupby method to get another dataframe that consists of total price for each order. And below we can see the statistics of the order prices.","cbf8d247":"Then, once choice_description only contains side choices seperated by comma, I splitted them so that each of them is stored in list now.\n\nFinally, a distionary is created to store the occurraces after running a for loop for counting.","97c58283":"# Best and Worst Selling Products"}}