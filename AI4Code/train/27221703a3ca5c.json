{"cell_type":{"fb92f34a":"code","683dc3fa":"code","e4a5087b":"code","52852f3c":"code","5025179f":"code","6e840394":"code","e024320d":"code","b6bcaa0e":"code","47cc421e":"code","278c9fe7":"code","737af3b1":"code","c81ad9ce":"code","4e95445f":"code","39e5db56":"code","21308990":"code","1b3385f6":"code","6f1c28b7":"code","722c0f82":"code","0d23de79":"markdown","cf7190aa":"markdown","ddb218b4":"markdown","ff5d8dfe":"markdown","5a00efaf":"markdown","6b9c17a4":"markdown","b67a8bd9":"markdown","c834e731":"markdown"},"source":{"fb92f34a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","683dc3fa":"import requests as req\nURL = \"https:\/\/en.wikipedia.org\/wiki\/Time%E2%80%93frequency_analysis\"\nrequest = req.get(URL)\nrequest.content[:1000]","e4a5087b":"from bs4 import BeautifulSoup\n\nsoup = BeautifulSoup(request.content,\"html.parser\")\nprint(soup)","52852f3c":"soup.prettify()","5025179f":"title = soup.h1\nprint(title)","6e840394":"image = soup.img\nprint(image)","e024320d":"table = soup.table\nprint(table)","b6bcaa0e":"tables = soup.find_all(\"table\")\nprint(len(tables))","47cc421e":"lists = soup.find_all(\"li\")\nprint(len(lists))","278c9fe7":"#finding all links\nlinks = soup.find_all(\"a\")\nprint(len(links))","737af3b1":"links[:3]","c81ad9ce":"filter_attr = {\"class\":\"mw-jump-link\"}\nlinks_filter = soup.find_all(\"a\",filter_attr)\nprint(links_filter)","4e95445f":"filter_attr = {\"class\":\"noprint\"}\nsoup.find_all(\"a\",filter_attr)","39e5db56":"attr_filter = {\"class\":\"fn\"}\nsoup.find_all(None,attr_filter)","21308990":"import json\n\n\nlink = \"https:\/\/jsonplaceholder.typicode.com\/posts\"","1b3385f6":"requests = req.get(link)\ndata = json.loads(requests.content)\ndata[:2]","6f1c28b7":"r = req.post(link)\ndata = json.loads(r.content)\nprint(data)","722c0f82":"input_data = {\"title\":\"test_data\",\n             \"user_id\":5}\n\nr = req.post(link,input_data)\ndata = json.loads(r.content)\nprint(data)","0d23de79":"### Post get Api","cf7190aa":"making a filter for attributes","ddb218b4":"### search for elements with given class and attribute","ff5d8dfe":"# Access element and attributes inside html ","5a00efaf":"# Load Webpage into python via Beautifulsoup","6b9c17a4":"see the style of the table ","b67a8bd9":"we have only one table into our webpage verify it.\n","c834e731":"### Finding all the tables within the webpage"}}