{"cell_type":{"73cc9355":"code","669de967":"code","0a5a04d3":"code","4e08d58a":"code","81cba851":"code","3730d0d2":"code","c7f0649c":"code","3e907efd":"code","5367d400":"code","1af63611":"code","91e2b901":"code","e5c64b71":"code","81016f94":"code","15524325":"code","836d0523":"code","18f40b65":"code","9a8eb13d":"code","d23b92aa":"code","8854f0fc":"code","e4a28bdb":"code","30ba94a8":"code","42c898bd":"code","e325c2a9":"code","0bf21bf3":"code","406f0385":"code","bda232e9":"code","122d0a89":"code","355ff9e6":"code","c22b4da7":"code","87f5590d":"code","c311020f":"code","83ac14fe":"code","2c9f2bda":"code","8d279237":"code","fefcc966":"code","fa707245":"code","11170b4b":"code","74b717e3":"code","5bbc6a8c":"code","bd90c7c4":"code","3ec2aa8d":"code","dbf9d64a":"code","99e0f50e":"code","ca69dee5":"code","00b87753":"code","9cd62a2d":"code","bf6864a4":"code","296d447e":"code","eb2451c0":"code","43286b00":"code","795a07ba":"markdown","331c1048":"markdown","bfa89221":"markdown","80642043":"markdown","3a4fa98d":"markdown","1e91a6c8":"markdown","aada66e3":"markdown","eba07211":"markdown","a7fd446f":"markdown","467f71c6":"markdown","dd0a8a8b":"markdown","1c5f4f8c":"markdown","6b48af9d":"markdown","c6ee6156":"markdown","da6b74c1":"markdown","4c73e8a6":"markdown","3b4bf388":"markdown","6c9a2d8f":"markdown","b277ef02":"markdown","c4f053ec":"markdown","ed328756":"markdown","40ad8c15":"markdown","a17ff25b":"markdown","bfa9b876":"markdown","754662cc":"markdown","76f926df":"markdown","53a53f8b":"markdown","1e29cc96":"markdown","66724180":"markdown","75c4bed0":"markdown","14c50e51":"markdown","e784db75":"markdown","aff8360f":"markdown","adfe581c":"markdown","a919042f":"markdown","fd900cda":"markdown","9910abd8":"markdown","ed650d45":"markdown","4014e151":"markdown","e6d7c823":"markdown","25d5b6ba":"markdown","cdcfe10f":"markdown","9c8cd39b":"markdown","3fe00a83":"markdown","cdff4da4":"markdown","0fdd9c06":"markdown","d7b08222":"markdown","dfca15f6":"markdown","96907ebc":"markdown","241c5edb":"markdown","570ecb28":"markdown","21697b29":"markdown","445d70bd":"markdown","35f1382e":"markdown","8d0650e0":"markdown","5b8b392e":"markdown","44c5c89f":"markdown","0ef3e99f":"markdown","8fd77139":"markdown"},"source":{"73cc9355":"import pandas as pd\nimport numpy as np\nimport scipy\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom IPython.display import display, HTML\n\npx.defaults.template = 'plotly_white'\npx.defaults.color_discrete_sequence = ['steelblue']\nMODE_BAR_BUTTONS = ['toImage', 'zoom2d', 'pan2d', 'select2d', 'lasso2d',\n                    'zoomIn2d', 'zoomOut2d', 'autoScale2d', 'resetScale2d',\n                    'toggleSpikelines', 'hoverClosestCartesian', 'hoverCompareCartesian']\nCONFIG = {\n    'modeBarButtonsToRemove': ['pan2d', 'select2d', 'lasso2d', 'toggleSpikelines']\n}\n\npssd = pd.read_csv('\/kaggle\/input\/the-ontario-sunshine-list\/pssd.csv').convert_dtypes()\npss = {year: pssd[pssd['Calendar Year'] == year].copy() for year in range(1996, 2020)}\n\ndef display_html(df, cols=None, num_rows=0):\n    if num_rows != 0:\n        df_to_display = df.head(num_rows)\n    else:\n        df_to_display = df\n    \n    df_html = df_to_display.to_html(columns=cols, index=False, na_rep='',\n                              escape=False, render_links=True)\n    display(HTML(df_html))","669de967":"display_html(pss[2019].sample(5, random_state=13))","0a5a04d3":"num_employees = (pssd.groupby('Calendar Year')\n                 .size()\n                 .to_frame(name='NumEmployees')\n                 .reset_index()\n                )\nfig = px.scatter(num_employees,\n                 x='Calendar Year',\n                 y='NumEmployees'\n                )\nfig.update_traces(mode='lines+markers',\n                  hovertemplate=\n                  '<b>%{x}<\/b><br>'+\n                  'Number of employees: <b>%{y}<\/b>'\n                 )\nfig.update_layout(title='Number of employees on the sunshine list by calendar year',\n                  xaxis_title='Calendar Year',\n                  yaxis_title=\"Number of employees\",\n                  yaxis_tickformat=',',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"x\",\n                  yaxis_zerolinecolor='grey',\n                  yaxis_zerolinewidth=1\n                 )\nfig.show(config=CONFIG)","4e08d58a":"pss[2019]['Salary Paid'].ge(153325.82).sum()","81cba851":"px.defaults.color_discrete_sequence = ['lightseagreen']","3730d0d2":"pss[2019].insert(3, 'Name', pss[2019]['First Name'].str.cat(pss[2019]['Last Name'], sep=' '))","c7f0649c":"fig = px.histogram(pss[2019],\n                   x='Salary Paid',\n                   marginal='box'\n                  )\nfig.update_layout(title='Distribution of salary paid',\n                  xaxis_title='Salary Paid',\n                  yaxis_title=\"Count\",\n                  xaxis_tickformat='$,',\n                  yaxis_tickformat=',',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14\n                 )\n# Hist\nfig.data[0].hovertemplate = 'Salary Paid: <b>%{x}<\/b><br>'+\\\n                            'Count: <b>%{y}<\/b>'\n# Box\nfig.data[1].hovertemplate = 'Salary Paid: <b>%{x:$,.0f}<\/b>'\n\nfig.show(config=CONFIG)","3e907efd":"f\"Mean: ${pss[2019]['Salary Paid'].mean():,.2f}, Median: ${pss[2019]['Salary Paid'].median():,.2f}\"","5367d400":"n, bins, _ = plt.hist(pss[2019]['Salary Paid'], bins=500,\n                      density=True,\n                      histtype='step',\n                      cumulative=True\n                     )\nplt.close()\nfig = px.scatter(x=bins,\n                 y=np.insert(n, 0, 0)\n                )\nfig.update_traces(mode='lines',\n                  line_shape='hvh',\n                  hovertemplate=\n                  'Percentage of data: <b>%{y}<\/b><br>'+\n                  'Salary Paid: <b>%{x}<\/b>'\n                 )\nfig.update_layout(title='Cumulative distribution of salary paid',\n                  xaxis_title='Salary Paid',\n                  yaxis_title='Percentage of data',\n                  xaxis_tickformat='$,.0f',\n                  yaxis_tickformat='%',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  yaxis_zerolinecolor='grey',\n                  yaxis_zerolinewidth=1\n                 )\nfig.show(config=CONFIG)","1af63611":"common_salaries = (pss[2019]['Salary Paid']\n                   .value_counts()\n                   .head(10)\n                   .to_frame()\n                   .reset_index()\n                   .rename(columns={'index': 'Salary Paid', 'Salary Paid': 'Count'})\n                  )\ncommon_salaries['Salary Paid'] = common_salaries['Salary Paid'].apply(lambda salary: f'{salary:,.2f}')\nfig = px.bar(common_salaries,\n             x='Count',\n             y='Salary Paid',\n             orientation='h'\n            )\nfig.update_traces(textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False,\n                  hovertemplate=\n                  'Count: <b>%{x}<\/b><br>'+\n                  'Salary Paid: <b>%{y}<\/b>'\n                 )\nfig.update_layout(title='Top 10 most common salaries',\n                  yaxis_title='Salary Paid',\n                  xaxis_title='Count',\n                  xaxis_tickformat=',',\n                  yaxis_tickprefix='$',\n                  yaxis_type='category',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\"\n                 )\nfig.show(config=CONFIG)","91e2b901":"display_html(pss[2019][pss[2019]['Salary Paid'] == 306475.79].sample(10, random_state=13),\n             cols=['Sector', 'Name', 'Salary Paid', 'Taxable Benefits', 'Employer', 'Job Title'])","e5c64b71":"display_html(pss[2019][pss[2019]['Salary Paid'] == 227382.93].sample(10, random_state=13),\n            cols=['Sector', 'Name', 'Salary Paid', 'Taxable Benefits', 'Employer', 'Job Title'])","81016f94":"top_earners = pss[2019].nlargest(20, 'Salary Paid')\nfig = px.bar(top_earners,\n             x='Salary Paid',\n             y='Name',\n             orientation='h',\n             custom_data=['Employer', 'Job Title']\n            )\nfig.update_traces(hovertemplate=\n                  'Name:       <b>%{y}<\/b><br>'+\n                  'Employer: <b>%{customdata[0]}<\/b><br>'+\n                  'Job Title:   <b>%{customdata[1]}<\/b><br>'+\n                  'Salary:      <b>%{x}<\/b>',\n                  textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 20 highest paid public employees',\n                  yaxis_title='Name',\n                  yaxis_autorange='reversed',\n                  xaxis_title='Salary Paid',\n                  xaxis_tickformat='$,.0f',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\"                  \n                 )\nfig.show(config=CONFIG)","15524325":"px.defaults.color_discrete_sequence = ['indianred']","836d0523":"fig = px.histogram(pss[2019],\n                   x='Taxable Benefits',\n                   marginal='box'\n                  )\nfig.update_layout(title='Distribution of taxable benefits',\n                  xaxis_title='Taxable Benefits',\n                  yaxis_title=\"Count\",\n                  xaxis_tickformat='$,',\n                  yaxis_tickformat=',',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  xaxis_range=[0, 350000]\n                 )\n# Hist\nfig.data[0].hovertemplate = 'Taxable Benefits: <b>%{x}<\/b><br>'+\\\n                            'Count: <b>%{y}<\/b>'\n# Box\nfig.data[1].hovertemplate = 'Taxable Benefits: <b>%{x:$,.0f}<\/b>'\n\nfig.show(config=CONFIG)","18f40b65":"f\"Mean: ${pss[2019]['Taxable Benefits'].mean():,.2f}, Median: ${pss[2019]['Taxable Benefits'].median():,.2f}\"","9a8eb13d":"n, bins, _ = plt.hist(pss[2019]['Taxable Benefits'],\n                      bins=500,\n                      density=True,\n                      histtype='step',\n                      cumulative=True\n                     )\nplt.close()\nfig = px.scatter(x=bins,\n                 y=np.insert(n, 0, 0)\n                )\nfig.update_traces(mode='lines',\n                  line_shape='hvh',\n                  hovertemplate=\n                  'Percentage of data: <b>%{y}<\/b><br>'+\n                  'Taxable Benefits: <b>%{x}<\/b>'\n                 )\nfig.update_layout(title='Cumulative distribution of taxable benefits',\n                  xaxis_title='Taxable Benefits',\n                  yaxis_title='Percentage of data',\n                  xaxis_tickformat='$,.0f',\n                  yaxis_tickformat='%',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  yaxis_zerolinecolor='grey',\n                  yaxis_zerolinewidth=1\n                 )\nfig.show(config=CONFIG)","d23b92aa":"common_taxable_benefits = (pss[2019]['Taxable Benefits']\n                           .value_counts()\n                           .head(10)\n                           .to_frame()\n                           .reset_index()\n                           .rename(columns={'index': 'Taxable Benefits', 'Taxable Benefits': 'Count'})\n                          )\ncommon_taxable_benefits['Taxable Benefits'] = common_taxable_benefits['Taxable Benefits'].apply(lambda tax_benefit: f'{tax_benefit:,.2f}')\nfig = px.bar(common_taxable_benefits,\n             x='Count',\n             y='Taxable Benefits',\n             orientation='h'\n            )\nfig.update_traces(textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False,\n                  hovertemplate=\n                  'Count: <b>%{x}<\/b><br>'+\n                  'Taxable Benefits: <b>%{y}<\/b>'\n                 )\nfig.update_layout(title='Top 10 most common taxable benefits amounts',\n                  yaxis_title='Taxable Benefits',\n                  xaxis_title='Count',\n                  xaxis_tickformat=',',\n                  yaxis_tickprefix='$',\n                  yaxis_type='category',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\"\n                 )\nfig.show(config=CONFIG)","8854f0fc":"display_html(pss[2019][pss[2019]['Taxable Benefits'] == 79.93].sample(10, random_state=13),\n            cols=['Sector', 'Name', 'Salary Paid', 'Taxable Benefits', 'Employer', 'Job Title'])","e4a28bdb":"top_taxable_benefits = pss[2019].nlargest(20, 'Taxable Benefits')\nfig = px.bar(top_taxable_benefits,\n             x='Taxable Benefits',\n             y='Name',\n             orientation='h',\n             custom_data=['Employer', 'Job Title']\n            )\nfig.update_traces(hovertemplate=\n                  'Name:                  <b>%{y}<\/b><br>'+\n                  'Employer:            <b>%{customdata[0]}<\/b><br>'+\n                  'Job Title:              <b>%{customdata[1]}<\/b><br>'+\n                  'Taxable benefits: <b>%{x}<\/b>',\n                  textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 20 highest taxable benefit recipients',\n                  yaxis_title='Name',\n                  yaxis_autorange='reversed',\n                  xaxis_title='Taxable Benefits',\n                  xaxis_tickformat='$,.0f',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode='y'\n                 )\nfig.show(config=CONFIG)","30ba94a8":"px.defaults.color_discrete_sequence = ['darkorange']","42c898bd":"fig = px.scatter(pss[2019],\n                 x='Salary Paid',\n                 y='Taxable Benefits',\n                 trendline='ols'\n                )\n\nfig.data[0].hovertemplate=('Salary Paid:         <b>%{x}<\/b><br>'\n                           'Taxable Benefits: <b>%{y}<\/b>'\n                          )\n\nfig.update_layout(title='Relationship between salary paid and taxable benefits',\n                  yaxis_title='Taxable Benefits',\n                  xaxis_title='Salary Paid',\n                  xaxis_tickformat='$,.0f',\n                  yaxis_tickformat='$,.0f',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14\n                 )\nfig.show(config=CONFIG)","e325c2a9":"cor, p_val = scipy.stats.spearmanr(pss[2019]['Salary Paid'], pss[2019]['Taxable Benefits'])\ncor, p_val","0bf21bf3":"px.defaults.color_discrete_sequence = ['dodgerblue']","406f0385":"sector_employers = (pss[2019].loc[~pss[2019]['Sector'].str.contains('seconded', case=False), ['Sector', 'Employer']]\n                    .drop_duplicates()\n                    .reset_index(drop=True)\n                   )\nsector_employers_counts = (sector_employers['Sector']\n                           .value_counts()\n                           .to_frame()\n                           .reset_index()\n                           .rename(columns={'Sector': 'NumEmployers', 'index': 'Sector'})\n                          )\n\nfig = px.bar(sector_employers_counts,\n             x='NumEmployers',\n             y='Sector',\n             orientation='h'\n            )\nfig.update_traces(hovertemplate=\n                  'Number of employers: <b>%{x}<\/b><br>'+\n                  'Sector: <b>%{y}<\/b>',\n                  textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Number of employers by sector',\n                  xaxis_title='Number of employers',\n                  yaxis_title='Sector',\n                  yaxis_autorange='reversed',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","bda232e9":"f\"Number of employers on the list: {pss[2019]['Employer'].nunique():,}\"","122d0a89":"sector_employees = (pss[2019]['Sector']\n                    .value_counts()\n                    .to_frame()\n                    .reset_index()\n                    .rename(columns={'index': 'Sector', 'Sector': 'NumEmployees'})\n                   )\nseconded_sector_counts = sector_employees[sector_employees['Sector'].str.contains('seconded', case=False)]\nsector_counts = sector_employees[~sector_employees['Sector'].str.contains('seconded', case=False)]\n\nfig = px.bar(sector_counts,\n             x='NumEmployees',\n             y='Sector',\n             orientation='h'\n            )\nfig.update_traces(hovertemplate=\n                  'Number of employees: <b>%{x}<\/b><br>'+\n                  'Sector: <b>%{y}<\/b>',\n                  textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Number of employees by sector',\n                  xaxis_title='Number of employees',\n                  yaxis_title='Sector',\n                  yaxis_autorange='reversed',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","355ff9e6":"not_seconded_sectors = pss[2019][~pss[2019]['Sector'].str.contains('seconded', case=False)]\nfig = px.box(not_seconded_sectors,\n             x='Sector',\n             y='Salary Paid',\n             log_y=True,\n             height=700,\n             custom_data=['Name', 'Employer', 'Job Title']\n            )\nfig.update_traces(boxmean=True,\n                  hovertemplate=\n                  'Name:          <b>%{customdata[0]}<\/b><br>'+\n                  'Employer:    <b>%{customdata[1]}<\/b><br>'+\n                  'Job Title:      <b>%{customdata[2]}<\/b><br>'+\n                  'Salary Paid: <b>%{y}<\/b>',\n                 )\nfig.update_layout(title='Distribution of salary paid by sector',\n                  xaxis_title='Sector',\n                  yaxis_title='Salary Paid',\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  yaxis_tickformat='$,.0f'\n                 )\nfig.show(config=CONFIG)","c22b4da7":"def plot_top_ten_sector(sector):\n    top_ten_sector = not_seconded_sectors[not_seconded_sectors.Sector == sector].nlargest(10, 'Salary Paid')\n    fig = px.bar(top_ten_sector,\n                 x='Salary Paid',\n                 y='Name',\n                 orientation='h',\n                 custom_data=['Employer', 'Job Title']\n                )\n    fig.update_traces(hovertemplate=\n                      'Name:       <b>%{y}<\/b><br>'+\n                      'Employer: <b>%{customdata[0]}<\/b><br>'+\n                      'Job Title:   <b>%{customdata[1]}<\/b><br>'+\n                      'Salary:      <b>%{x}<\/b>',\n                      textposition='outside',\n                      texttemplate='%{x}',\n                      cliponaxis=False\n                     )\n    fig.update_layout(title='Top 10 highest paid employees in the {} sector'.format(sector),\n                      yaxis_title='Name',\n                      yaxis_autorange='reversed',\n                      xaxis_title='Salary Paid',\n                      xaxis_tickformat='$,.0f',\n                      hoverlabel_bgcolor=\"white\",\n                      hoverlabel_font_size=14,\n                      hovermode=\"y\"                  \n                     )\n    fig.show(config=CONFIG)","87f5590d":"plot_top_ten_sector('Universities')","c311020f":"plot_top_ten_sector('Ontario Power Generation')","83ac14fe":"plot_top_ten_sector('Municipalities & Services')","2c9f2bda":"px.defaults.color_discrete_sequence = ['plum']","8d279237":"employer_counts = (pss[2019]['Employer']\n                   .value_counts()\n                   .head(20)\n                   .to_frame()\n                   .reset_index()\n                   .rename(columns={'index': 'Employer', 'Employer': 'NumEmployees'})\n                   .merge(sector_employers, on='Employer')\n                  )\n\nfig = px.bar(employer_counts,\n             x=\"NumEmployees\",\n             y=\"Employer\",\n             orientation='h',\n             custom_data=['Sector']\n            )\nfig.update_traces(hovertemplate=\n                  'Employer: <b>%{y}<\/b><br>'+\n                  'Number of employees: <b>%{x}<\/b><br>'+\n                  'Sector: <b>%{customdata[0]}<\/b>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 20 number of employees by employer',\n                  xaxis_title='Number of employees',\n                  yaxis_title='Employer',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","fefcc966":"employee_counts_employer = (pss[2019]['Employer']\n                            .value_counts()\n                            .to_frame()\n                            .reset_index()\n                            .rename(columns={'index': 'Employer', 'Employer': 'NumEmployees'})\n                           )\ntop_employers_median_salary = (pss[2019]\n                               .groupby('Employer')['Salary Paid']\n                               .median()\n                               .to_frame()\n                               .reset_index()\n                               .rename(columns={'Salary Paid': 'Median Salary Paid'})\n                               .merge(employee_counts_employer[employee_counts_employer.NumEmployees.ge(50)])\n                               .nlargest(20, 'Median Salary Paid')\n                              )\n\nfig = px.bar(top_employers_median_salary,\n             x=\"Median Salary Paid\",\n             y=\"Employer\",\n             orientation='h',\n             custom_data=['NumEmployees']\n            )\nfig.update_traces(hovertemplate=\n                  'Median salary paid: <b>%{x}<\/b><br>'+\n                  'Employer: <b>%{y}<\/b><br>'+\n                  'Number of employees: <b>%{customdata[0]:,}<\/b>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 20 highest median salary paid by employers with <br>50 or more employees on the list',\n                  xaxis_title='Median salary',\n                  yaxis_title='Employer',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat='$,.0f'\n                 )\nfig.show(config=CONFIG)","fa707245":"px.defaults.color_discrete_sequence = ['skyblue']","11170b4b":"f\"Unique job titles on the list: {pss[2019]['Job Title'].nunique():,}, Total number of employees on the list: {pss[2019].shape[0]:,}\"","74b717e3":"job_title_counts = (pss[2019]['Job Title']\n                    .value_counts()\n                    .head(20)\n                    .to_frame()\n                    .reset_index()\n                    .rename(columns={'index': 'Job Title', 'Job Title': 'NumEmployees'})\n                   )\nfig = px.bar(job_title_counts,\n             x='NumEmployees',\n             y='Job Title',\n             orientation='h'\n            )\nfig.update_traces(hovertemplate=\n                  'Job title: <b>%{y}<\/b><br>'+\n                  'Count: <b>%{x}<\/b><br>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 20 most common job titles',\n                  xaxis_title='Count',\n                  yaxis_title='Job title',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","5bbc6a8c":"num_profs = pss[2019]['Job Title'].str.contains('professor|professeur', case=False).sum()\n'Number of professors on the list: {:,}, Percentage of professors on the list: {:.1%}'.format(num_profs, num_profs \/ pss[2019].shape[0])","bd90c7c4":"px.defaults.color_discrete_sequence = ['mediumseagreen']","3ec2aa8d":"first_names = (pss[2019]['First Name']\n               .value_counts()\n               .head(10)\n               .to_frame()\n               .reset_index()\n               .rename(columns={'index': 'First Name', 'First Name': 'Count'})\n              )\n\nfig = px.bar(first_names,\n             x='Count',\n             y='First Name',\n             orientation='h'\n            )\nfig.update_traces(hovertemplate=\n                  'First name: <b>%{y}<\/b><br>'+\n                  'Count: <b>%{x}<\/b><br>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 10 most common first names',\n                  xaxis_title='Count',\n                  yaxis_title='First Name',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","dbf9d64a":"'Number of unique first names: {:,}'.format(pss[2019]['First Name'].nunique())","99e0f50e":"last_names = (pss[2019]['Last Name']\n              .value_counts()\n              .head(10)\n              .to_frame()\n              .reset_index()\n              .rename(columns={'index': 'Last Name', 'Last Name': 'Count'})\n             )\n\nfig = px.bar(last_names,\n             x='Count',\n             y='Last Name',\n             orientation='h'\n            )\nfig.update_traces(hovertemplate=\n                  'Last name: <b>%{y}<\/b><br>'+\n                  'Count: <b>%{x}<\/b><br>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 10 most common last names',\n                  xaxis_title='Count',\n                  yaxis_title='Last Name',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","ca69dee5":"'Number of unique last names: {:,}'.format(pss[2019]['Last Name'].nunique())","00b87753":"names = (pss[2019]['Name']\n         .value_counts()\n         .head(10)\n         .to_frame()\n         .reset_index()\n         .rename(columns={'index': 'Name', 'Name': 'Count'})\n        )\n\nfig = px.bar(names,\n             x='Count',\n             y='Name',\n             orientation='h'\n            )\nfig.update_traces(hovertemplate=\n                  'Name: <b>%{y}<\/b><br>'+\n                  'Count: <b>%{x}<\/b><br>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 10 most common names',\n                  xaxis_title='Count',\n                  yaxis_title='Name',\n                  yaxis_autorange='reversed',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat=','\n                 )\nfig.show(config=CONFIG)","9cd62a2d":"'Number of unique names: {:,}'.format(pss[2019]['Name'].nunique())","bf6864a4":"px.defaults.color_discrete_sequence = ['lightcoral']","296d447e":"mayors = pss[2019][pss[2019]['Job Title'].str.contains('^Mayor$|Waterloo Mayor', case=False) & pss[2019]['Sector'].str.contains('municipalities', case=False)].sort_values('Salary Paid')\nfig = px.bar(mayors,\n             x='Salary Paid',\n             y='Name',\n             orientation='h',\n             custom_data=['Employer']\n            )\nfig.update_traces(hovertemplate=\n                  'Name:          <b>%{y}<\/b><br>'+\n                  'Employer:    <b>%{customdata[0]}<\/b><br>'+\n                  'Salary Paid: <b>%{x}<\/b>',                  \n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Salaries of mayors in Ontario',\n                  xaxis_title='Salary Paid',\n                  yaxis_title='Name',\n                  height=1000,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat='$,.0f'\n                 )\nfig.show(config=CONFIG)","eb2451c0":"uoft = pss[2019][pss[2019]['Employer'] == 'University Of Toronto'].nlargest(20, 'Salary Paid')\nfig = px.bar(uoft,\n             x='Salary Paid',\n             y='Name',\n             orientation='h',\n             custom_data=['Employer', 'Job Title']\n            )\nfig.update_traces(hovertemplate=\n                  'Name:       <b>%{y}<\/b><br>'+\n                  'Employer: <b>%{customdata[0]}<\/b><br>'+\n                  'Job Title:   <b>%{customdata[1]}<\/b><br>'+\n                  'Salary:      <b>%{x}<\/b>',\n                  textposition='outside',\n                  texttemplate='%{x}',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Top 20 highest paid employees at University of Toronto',\n                  yaxis_title='Name',\n                  yaxis_autorange='reversed',\n                  xaxis_title='Salary Paid',\n                  xaxis_tickformat='$,.0f',\n                  height=700,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\"                  \n                 )\nfig.show(config=CONFIG)","43286b00":"mcs_employees = pss[2019][pss[2019]['Job Title'].str.contains('Mathematical and Computational Sciences', case=False)].sort_values('Salary Paid')\nfig = px.bar(mcs_employees,\n             x='Salary Paid',\n             y='Name',\n             orientation='h',\n             custom_data=['Taxable Benefits']\n            )\nfig.update_traces(hovertemplate=\n                  'Name:                   <b>%{y}<\/b><br>'+\n                  'Salary Paid:          <b>%{x}<\/b><br>'+\n                  'Taxable Benefits:  <b>%{customdata[0]:$,.0f}<\/b>',\n                  texttemplate='%{x}',\n                  textposition='outside',\n                  cliponaxis=False\n                 )\nfig.update_layout(title='Salaries of employees at the department of Mathematical and <br>Computational Sciences at UTM',\n                  xaxis_title='Salary Paid',\n                  yaxis_title='Name',\n                  height=1000,\n                  hoverlabel_bgcolor=\"white\",\n                  hoverlabel_font_size=14,\n                  hovermode=\"y\",\n                  xaxis_tickformat='$,.0f'\n                 )\nfig.show(config=CONFIG)","795a07ba":"![](https:\/\/www.google.com\/maps\/vt\/data=kS8SDz9HFAu62DnpOEORnLF2W6ROdr8py5iRqfV_mZYKO9gbhUTCvi-n4Wnc2LvCKNnysx_-9VKF04x4NRiC88Tkw8-qmWczhEh_WP-7z6edGCGHMEkNrMVCOL0L-tOl08D5jtElq-9rz51rl5wJyzjsqlcPdJYirf5P-Zo_u9UkGAOJhW_WewNTafh4nM951Q_y_KR_7uV8SF4uPup-hjn3f4mSmFpzGWbPN5QRfKNDII0)","331c1048":"We will now examine the highest paid employees in a few sectors.","bfa89221":"# Job titles","80642043":"## Table of contents\n\n<p style=\"line-height: 1.6em;\">\n    <a href=\"#background\">1. Background and summary<\/a><br>\n    <a href=\"#number-employees\">2. Number of employees<\/a><br>\n    <a href=\"#salaries\">3. Salaries<\/a><br>\n    <a href=\"#taxable-benefits\">4. Taxable benefits<\/a><br>\n    <a href=\"#salaries-and-taxable-benefits\">5. Relationship between salaries and taxable benefits<\/a><br>\n    <a href=\"#sectors\">6. Sectors<\/a><br>\n    <a href=\"#employers\">7. Employers<\/a><br>\n    <a href=\"#job-titles\">8. Job titles<\/a><br>\n    <a href=\"#names\">9. Names<\/a><br>\n    <a href=\"#misc\">10. Miscellaneous<\/a><br>\n    <a href=\"#references\">11. References<\/a><br>\n<\/p>","3a4fa98d":"Toronto police chief Mark Saunders is the highest paid public employee in the Municipalities & Services sector, earning more than the CEO of Toronto Transit Commission (TTC). Eight of the top 10 all have \"Chief\" in their job titles. The other two are City Managers.","1e91a6c8":"# Relationship between salaries and taxable benefits","aada66e3":"<a id=\"number-employees\"><\/a>\n[Return to table of contents](#table-of-contents)","eba07211":"As noted earlier, Ontario Power Generation is considered both an employer and a sector on this list. Four of the top 10 highest paid employees at Ontario Power Generation are responsible for nuclear operations. Barbara Keenan at 9th on the list is the highest paid woman at Ontario Power Generation.","a7fd446f":"There are 59,590 unique last names on the list. Smith is by far the most common last name on the list.","467f71c6":"The differences are not large, but the Ministry of the Attorney General has the highest median salary among employees on the list. Note that 13 employers of the top 20 on the list are universities.","dd0a8a8b":"Markham mayor Frank Scarpitti tops the list while Toronto mayor John Tory is third on the list.","1c5f4f8c":"As expected, the most common taxable benefit received is \\\\(\\$\\\\)0.00. The next most common amount is \\\\(\\$\\\\)79.93 and it seems like this is common among Ontario school board employees.","6b48af9d":"# Ontario's public sector salary disclosure - 2019 EDA\n### \"The names, positions, salaries and total taxable benefits of public sector employees paid \\\\(\\$\\\\)100,000 or more in a calendar year.\"","c6ee6156":"Since I attend the University of Toronto, let's take a look at the top 20 highest paid employees.","da6b74c1":"Getting more specific, I am a student at the Department of Mathematical and Computational Sciences at University of Toronto Mississauga (UTM). Below is a chart including salaries of all employees that earn \\\\(\\$\\\\)100,000 or more at the Department of Mathematical and Computational Sciences at UTM.","4c73e8a6":"# Miscellaneous","3b4bf388":"<a id=\"salaries-and-taxable-benefits\"><\/a>\n[Return to table of contents](#table-of-contents)","6c9a2d8f":"By far, most employees on the list are employees of the \"Municipalities & Services\" sector. There are almost three times as many employees in the Universities sector than in the Colleges sector on the list. Also, if we were to combine Universities, Colleges, and School Boards into a sector called \"Education\", it would be the largest sector in terms of number of employees on the list.","b277ef02":"Earlier, we noticed two peaks in the salary distribution beyond \\\\(\\$\\\\)200k. Here, we discover that the two salaries that contribute to those peaks are \\\\(\\$\\\\)227,382.93 and \\\\(\\$\\\\)306,475.79. It turns out that the latter salary is standard among judges at the Ontario Court Of Justice.","c4f053ec":"Professors of strategic management, finance, and accounting make the top 20. The president Meric Gertler is only the 13th highest paid employee of the University of Toronto.","ed328756":"The distribution of salaries has a mean of \\\\(\\$\\\\)127,388.59 and a median of \\\\(\\$\\\\)115,279.21.\nAs expected, the distribution of salaries is highly skewed. We could visualize the data on a logarithmic scale,\nbut since a person can receive \\\\(\\$\\\\)0.00 in taxable benefits, this approach won't work for the next section.\nWe will opt for a more general approach by plotting a cumulative histogram instead.<br><br>\n\nThere are two prominent peaks in the salary distribution beyond \\\\(\\$\\\\)200k.\nIt is very likely that these are due to standard salaries put in place.\nWe will determine which salaries are most common and see if we can make sense of these two peaks.","40ad8c15":"We learn that the number of Ontario's public sector employees earning more than \\\\(\\$\\\\)100,000 has grown quickly from 4501 employees in 1996\nto 166,977 employees in 2019. The province of Alberta publishes a similar list which is adjusted for inflation.<sup><a href=\"#references\">[5]<\/a><\/sup>\nOn the other hand, Ontario's \\\\(\\$\\\\)100,000 threshold has remained in place since 1996.<sup><a href=\"#references\">[1]<\/a><a href=\"#references\">[2]<\/a><\/sup>\nAccording to the Bank of Canada inflation calculator, \\\\(\\$\\\\)100,000 in 1996 is equivalent to \\\\(\\$\\\\)153,325.82 in 2019.<sup><a href=\"#references\">[6]<\/a><\/sup>\nWith a threshold of \\\\(\\$\\\\)153,325.82, only 23,646 employees would make the 2019 list.","a17ff25b":"Here, we explore the relationship between salary paid and taxable benefits received.","bfa9b876":"Toronto based employers seem to have the most employees on the list. Ontario Power Generation tops the list with 8,043 employees earning \\\\(\\$\\\\)100,000 or more.","754662cc":"<a id=\"misc\"><\/a>\n[Return to table of contents](#table-of-contents)","76f926df":"<a id=\"sectors\"><\/a>\n[Return to table of contents](#table-of-contents)","53a53f8b":"The Judiciary sector is the only sector without outliers in the salary distribution. As we observed earlier, judges at the Ontario Court of Justice are paid a standard salary of \\\\(\\$\\\\)306,475.79. The Judiciary sector also has the highest median salary, while the School Boards sector has the lowest median salary.","1e29cc96":"# References\n\n1. https:\/\/www.ontario.ca\/page\/public-sector-salary-disclosure\n1. https:\/\/www.ontario.ca\/page\/public-sector-salary-disclosure-background-and-faq\n1. https:\/\/www.canada.ca\/en\/revenue-agency\/services\/forms-publications\/publications\/t4130\/employers-guide-taxable-benefits-allowances.html\n1. https:\/\/turbotax.intuit.ca\/tips\/common-taxable-benefits-in-canada-344\n1. https:\/\/www.alberta.ca\/public-sector-body-compensation-disclosure.aspx\n1. https:\/\/www.bankofcanada.ca\/rates\/related\/inflation-calculator\/\n1. https:\/\/www.opg.com\/story\/seasoned-energy-executive-ready-to-lead-opg\/\n1. https:\/\/www.opg.com\/powering-ontario\/our-generation\/","66724180":"<a id=\"salaries\"><\/a>\n[Return to table of contents](#table-of-contents)","75c4bed0":"<a id=\"job-titles\"><\/a>\n[Return to table of contents](#table-of-contents)","14c50e51":"# Salaries","e784db75":"Next, we will examine the top 20 highest paid public employees.","aff8360f":"# Number of employees\nBefore diving into the 2019 data, we will take a look at the number of employees on the list for each calendar year since 1996.","adfe581c":"Five of the top 10 highest paid public employees on the list are Ontario Power Generation executives. The top two earners on the list both held the title \"President and Chief Executive Officer\" at Ontario Power Generation in 2019. It turns out that Kenneth Hartwick took over from Jeffrey Lyash after Lyash left the company on 31 March 2019.<sup><a href=\"#references\">[7]<\/a><\/sup>\n\nAlso worth noting is that the top 10 highest paid employees are all men. Only 3 of the top 20 highest paid employees are women. At 14th on the list, Maureen Jensen is the highest paid woman.","a919042f":"<a id=\"names\"><\/a>\n[Return to table of contents](#table-of-contents)","fd900cda":"<a id=\"employers\"><\/a>\n[Return to table of contents](#table-of-contents)","9910abd8":"<a id=\"table-of-contents\"><\/a>","ed650d45":"Six of the top 10 highest paid employees in the Universities sector are University of Toronto employees. Interestingly, three of the top 10 are professors of strategic management at the University of Toronto.","4014e151":"There are many outliers and the $R^2$ value is very low at approximately 0.057. Based on the Spearman correlation coefficient of 0.3126, there is a weak positive correlation between salary paid and taxable benefits received.","e6d7c823":"The cumulative histogram gives us the percentage of data that falls below the given salary. For instance, from the plot, we see that approximately 33% of employees on the list earn \\\\(\\$\\\\)108,388 or less.","25d5b6ba":"From the plot, we see that about 95% of employees on the list earn \\\\(\\$\\\\)3,339 or less in taxable benefits. The outlier of \\\\(\\$\\\\)333,918 is just over 100 times that amount.","cdcfe10f":"# Taxable benefits","9c8cd39b":"There are 158,546 unique names on the list. David Smith is the most common name and six of the top 10 most common names on the list have a last name of Smith.","3fe00a83":"# Names","cdff4da4":"Here's a sample of the data. Each row refers to an employee that earned at least \\\\(\\$\\\\)100,000 in 2019. I decided to only explore the 2019 data for now because of inconsistencies across calendar years. I discuss these inconsistencies in my other [notebook](https:\/\/www.kaggle.com\/sahidvelji\/cleaning-the-ontario-sunshine-list-data), where I cleaned the data.","0fdd9c06":"# Background and summary\n> *The Public Sector Salary Disclosure Act, 1996* makes Ontario\u2019s public sector more open and accountable to taxpayers. The act requires organizations that receive public funding from the Province of Ontario to make public, by March 31 each year, the names, positions, salaries and total taxable benefits of employees paid \\\\(\\$\\\\)100,000 or more in the previous calendar year.\n\n\\- https:\/\/www.ontario.ca\/page\/public-sector-salary-disclosure\n\nThe public sector salary disclosure is also known as the Ontario [sunshine list](https:\/\/en.wikipedia.org\/wiki\/Sunshine_list) and is published by March 31st annually.<sup><a href=\"#references\">[1]<\/a><\/sup> Note that this data is not an exhaustive list of all public sector employees that earn more than \\\\(\\$\\\\)100,000. In particular, not all organizations are covered by the Public Sector Salary Disclosure Act (PSSDA).\n\nThe following organizations are covered by the PSSDA:<sup><a href=\"#references\">[2]<\/a><\/sup>\n- The Government of Ontario, crown agencies, municipalities, hospitals, boards of public health, school boards, universities, colleges, Hydro One, and Ontario Power Generation.\n- Non-profit organizations receiving \\\\(\\$\\\\)1 million in funding or more.\n- Organizations receiving between \\\\(\\$\\\\)120,000 and \\\\(\\$\\\\)1 million in funding are covered if the funding they receive is 10 per cent or more of their gross revenues.\n\nDirectly from the [Government of Ontario website](https:\/\/www.ontario.ca\/page\/public-sector-salary-disclosure-background-and-faq#section-8):\n> The \\\\(\\$\\\\)100,000 figure means salary before taxes, and does not include taxable benefits. However, for those who are paid \\\\(\\$\\\\)100,000 or more, the total value of these taxable benefits must be disclosed.\n\nA taxable benefit is a benefit from an employer to an employee. Examples of taxable benefits include:<sup><a href=\"#references\">[3]<\/a><a href=\"#references\">[4]<\/a><\/sup>\n> - tips\n- boarding, lodging, rent-free or low-rent housing\n- travel expenses for personal travel\n- personal use of an employer\u2019s automobile\n- gifts over \\\\(\\$\\\\)500 per year\n- use of vacation property owned by the company\n- holiday trips\n- prizes and awards\n- life insurance premiums\n- costs of employer-paid courses for personal interest not related to work\n\nIn this notebook, I aim to explore the data and document my findings. To learn how the data was cleaned, see my other notebook [here](https:\/\/www.kaggle.com\/sahidvelji\/cleaning-the-ontario-sunshine-list-data).","d7b08222":"The salary of \\\\(\\$\\\\)227,382.93 seems to be standard among attorneys at the Ministry of the Attorney General.","dfca15f6":"<a id=\"background\"><\/a>\n<!-- [Return to table of contents](#table-of-contents) -->","96907ebc":"# Sectors","241c5edb":"### Summary\n\n- There are 166,977 employees on the 2019 list.\n- \\\\(\\$\\\\)100,000 in 1996 is equivalent to \\\\(\\$\\\\)153,325.82 in 2019. Only 23,646 employees would make the 2019 list at that threshold.\n- Five of the top 10 highest paid public employees on the list are Ontario Power Generation executives.\n- Former Ontario Power Generation President and CEO Jeffrey Lyash topped the list, earning \\\\(\\$\\\\)938,846.\n- Former President and CEO of The Hospital For Sick Children Michael Apkon earned \\\\(\\$\\\\)333,918 in taxable benefits, more than 3 times as much as anyone else on the list.\n- The top 10 highest paid employees are all men. \n- Only 3 of the top 20 highest paid employees are women. \n- At 14th on the list, Maureen Jensen is the highest paid woman.\n- The employer with the most employees on the list is Ontario Power Generation at 8,043 employees.\n- The most common job title on the list is \"Professor\".\n- At least 10% of employees on the list are professors.","570ecb28":"<a id=\"taxable-benefits\"><\/a>\n[Return to table of contents](#table-of-contents)","21697b29":"There are 32,868 unique job titles on the list. As a reminder, there are a total of 166,977 employees on the list.","445d70bd":"The most common job title on the list is \"Professor\". However, \"Associate Professor\", \"Assistant Professor\", and \"Professeur(e)\" are also one of the top 20 most common job titles on the list. There are 17,911 job titles containing \"professor\" or \"professeur\". This means that at least 10% of all employees on the list are professors. Professors could also be listed under job titles such as lecturer or instructor.","35f1382e":"<a id=\"references\"><\/a>\n[Return to table of contents](#table-of-contents)","8d0650e0":"The distribution of taxable benefits has a mean of \\\\(\\$\\\\)826.58 and a median of \\\\(\\$\\\\)370.28. The taxable benefits distribution is even more skewed than the salary distribution. One employee earned \\\\(\\$\\\\)333,918 in taxable benefits.","5b8b392e":"For reference, there are 1,898 employers on the list. This means that more than half of employers on the list are part of the \"Other Public Sector Employers\" sector. Ontario Power Generation is a Crown corporation responsible for approximately half of the electricity generation in Ontario.<sup><a href=\"#references\">[8]<\/a><\/sup> On this list, it is considered a sector of its own. The Judiciary sector has just two employers on the list: the Ontario Court Of Justice and the Superior Court Of Justice.","44c5c89f":"# Employers","0ef3e99f":"Michael Apkon, the former president and CEO of the Hospital For Sick Children, received more than three times the amount in taxable benefits compared to anyone else. It's also worth noting that 5 of the top 10 are hospital executives.","8fd77139":"There are 27,006 unique first names on the list. The most common first name on the list is Michael, appearing 3,029 times. Of the top 10 most common first names on the list, Jennifer is the only female first name."}}