{"cell_type":{"197ec2f4":"code","3c0c75e7":"code","eafd05f5":"code","b2d15787":"code","1b755460":"code","adc1e10b":"code","3fec591d":"code","48a08b4c":"code","09d30a78":"code","29709f13":"code","8e476c09":"code","55cb4da6":"code","d4b93fa7":"code","29defff4":"code","ffdfe0bd":"code","f5ee2d42":"code","5b8f56dd":"code","e020a0a0":"code","a4ad1e36":"code","bcdf7903":"markdown","71567acb":"markdown","8a633015":"markdown"},"source":{"197ec2f4":"import numpy as np\nimport pandas as pd  #dataframe\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split","3c0c75e7":"test = pd.read_csv('..\/input\/hmnist_28_28_RGB.csv')\n\ntest.head(10)","eafd05f5":"test.tail(3)","b2d15787":"test.info()","1b755460":"cancer_dict = {\n    0: 'Melanocytic nevi',\n    1: 'Melanoma',\n    2: 'Benign keratosis-like lesions ',\n    3: 'Basal cell carcinoma',\n    4: 'Actinic keratoses',\n    5: 'Vascular lesions',\n    6: 'Dermatofibroma'\n}","adc1e10b":"#input_shape = (28,28,3)\nX = test.iloc[:,0:-1]\nY = test.iloc[:,-1]","3fec591d":"X.shape, Y.shape","48a08b4c":"X = np.array(X)\nY = np.array(Y)","09d30a78":"X = X.reshape(X.shape[0],28,28,3)","29709f13":"trainX,testX,trainY,testY = train_test_split(X,Y,test_size=0.1,random_state=13)","8e476c09":"trainX = trainX.astype('float64') \/ 255.0\ntestX =  testX.astype('float64') \/ 255.0","55cb4da6":"trainY = to_categorical(trainY)\ntestY = to_categorical(testY)","d4b93fa7":"from keras.layers import Flatten, Dense, Activation, Conv2D, MaxPooling2D, Dropout, BatchNormalization\nfrom keras.models import load_model, Sequential\nfrom keras.callbacks import EarlyStopping,ReduceLROnPlateau, ModelCheckpoint\nfrom keras.preprocessing.image import ImageDataGenerator","29defff4":"datagen = ImageDataGenerator(rotation_range=25, width_shift_range=0.1,\n    height_shift_range=0.1, shear_range=0.2, zoom_range=0.2,\n    horizontal_flip=True, fill_mode=\"nearest\")\n\nmodel = Sequential()\nmodel.add(Conv2D(32, (3,3), padding='same', input_shape=(28,28,3)))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(3,3)))\n\nmodel.add(Conv2D(64, (3,3), padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, (3,3), padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Conv2D(128, (3,3), padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(128, (3,3), padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Flatten())\nmodel.add(Dense(256))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(7))\nmodel.add(Activation('softmax'))\n\nmodel.compile(loss='categorical_crossentropy', optimizer='RMSprop', metrics=['accuracy'])\n\ndatagen.fit(trainX)\n\nfilepath = 'cancer.model'\n\ncheckpoint = ModelCheckpoint(filepath, monitor='val_acc', verbose=1, save_best_only=True, mode='max')\n\nreduce_lr = ReduceLROnPlateau(monitor='val_acc', factor=0.5, patience=3, verbose=1, mode='max', min_lr=0.0001)\n\ncallbacks_list = [checkpoint, reduce_lr]","ffdfe0bd":"\nmodel.fit(trainX, trainY,\n          batch_size=32,\n          epochs=25,\n          verbose=1,\n          validation_data=(testX, testY),shuffle=True)","f5ee2d42":"model.save('cancer.model')","5b8f56dd":"pred = model.predict(testX)\nfrom sklearn.metrics import accuracy_score","e020a0a0":"\nplt.imshow(testX[11].reshape(28,28,3), cmap='viridis')\nplt.title('Prediction: {} \\nTrue Value: {}'.format(cancer_dict[np.argmax(pred[11])], cancer_dict[np.argmax(testY[11])]))\nplt.show()","a4ad1e36":"\nplt.imshow(testX[1].reshape(28,28,3), cmap='viridis')\nplt.title('Prediction: {} \\nTrue Value: {}'.format(cancer_dict[np.argmax(pred[11])], cancer_dict[np.argmax(testY[11])]))\nplt.show()","bcdf7903":"### Import Libraries ","71567acb":"### Author : Sanjoy Biswas \n### Project : Skin Cancer Cell Classification & Prediction\n### Email : sanjoy.eee32@gmail.com","8a633015":"### If this Kernal Helpful for you then please upvote it."}}