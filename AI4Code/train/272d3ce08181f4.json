{"cell_type":{"8a7813ad":"code","988edcdd":"code","2e5484e3":"code","689ab57d":"code","9520b18c":"code","b301a387":"code","6a208de5":"code","23898b15":"code","25e2cd63":"code","7649b2dd":"code","99bbc299":"code","8604d00d":"code","2e96939c":"code","b2c7af6f":"code","86df31ff":"code","b136af7b":"code","eee3f429":"markdown","a7969172":"markdown","905764b9":"markdown","6ef21c84":"markdown","6a1b7b20":"markdown"},"source":{"8a7813ad":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","988edcdd":"import matplotlib.pyplot as plt","2e5484e3":"Train_Data=pd.read_csv(\"..\/input\/walmart-sales-prediction\/train.csv\", parse_dates=[\"Date\"])\nTest_Data=pd.read_csv(\"..\/input\/walmart-sales-prediction\/test.csv\", parse_dates=[\"Date\"])","689ab57d":"\"\"\"\n1. aggregate to weekly data\n2. rename columns for Prophet Model\n\"\"\"\n\nTrain_Data_Cln=Train_Data.copy()\nTrain_Data_Cln=Train_Data.groupby([\"Date\"]).agg({\"Weekly_Sales\":[\"sum\"]}).reset_index()\nTrain_Data_Cln.columns=[\"ds\",\"y\"]\nTrain_Data_Cln","9520b18c":"\"\"\"\n1. aggregate to weekly data\n2. rename columns for Prophet Model\n\"\"\"\n\nTest_Data_Cln=Test_Data.copy()\nTest_Data_Cln=Test_Data[\"Date\"].drop_duplicates().sort_values().to_frame()\nTest_Data_Cln.columns=[\"ds\"]\nTest_Data_Cln","b301a387":"plt.figure(figsize=(20,5)) # chart size\nplt.plot(Train_Data_Cln[\"ds\"], Train_Data_Cln[\"y\"])","6a208de5":"\"\"\"\n1. decompose time series data: level, trend, seasonality\n\"\"\"\n\nimport statsmodels.api as sm\n\n#sm.tsa.seasonal_decompose(Train_Data.groupby(\"Date\")[\"Weekly_Sales\"].sum(), period=52, model=\"additive\").plot().show()\n#sm.tsa.seasonal_decompose(Train_Data.groupby(\"Date\")[\"Weekly_Sales\"].sum(), period=52, model=\"multiplicative\").plot().show()\nsm.tsa.seasonal_decompose(Train_Data_Cln[\"y\"], period=52, model=\"additive\").plot().show()\nsm.tsa.seasonal_decompose(Train_Data_Cln[\"y\"], period=52, model=\"multiplicative\").plot().show()","23898b15":"pip install prophet # Settings > Internet > enable","25e2cd63":"\"\"\"\nProphet\n\"\"\"\n\nfrom prophet import Prophet\n\nProphet_Model=Prophet(yearly_seasonality=True, seasonality_mode=\"additive\")\nProphet_Model.fit(Train_Data_Cln)","7649b2dd":"Y_P_Prophet_Model=Prophet_Model.predict(Test_Data_Cln)\nY_P_Prophet_Model","99bbc299":"\"\"\"\n1. evaluate forecast accuracy\n2. prepare dataframe for performance_metrics function (same structure as cross_validation output)\n\"\"\"\n\nY_Prophet_Model=Prophet_Model.predict(Train_Data_Cln)\nY_Prophet_Model=Y_Prophet_Model[[\"ds\",\"yhat\",\"yhat_lower\",\"yhat_upper\"]]\n\nY_Prophet_Model=Train_Data_Cln.merge(Y_Prophet_Model, how=\"left\", left_on=\"ds\", right_on=\"ds\")\nY_Prophet_Model[\"cutoff\"]=Y_Prophet_Model[\"ds\"]\nY_Prophet_Model","8604d00d":"from prophet.diagnostics import performance_metrics\nperformance_metrics(Y_Prophet_Model)","2e96939c":"plt.figure(figsize=(20,5)) # chart size\nplt.plot(Y_Prophet_Model[\"ds\"], Y_Prophet_Model[\"y\"], label=\"y\")\nplt.plot(Y_Prophet_Model[\"ds\"], Y_Prophet_Model[\"yhat\"], label=\"yhat\")\nplt.legend(loc='best')","b2c7af6f":"Prophet_Model.plot(Y_P_Prophet_Model, figsize=(10,3))\nProphet_Model.plot_components(Y_P_Prophet_Model, yearly_start=0, figsize=(10,5))","86df31ff":"from fbprophet.plot import plot_plotly, plot_components_plotly\n\nplot_plotly(Prophet_Model, Y_P_Prophet_Model)","b136af7b":"plot_components_plotly(Prophet_Model, Y_P_Prophet_Model)","eee3f429":"# Reference\n1. https:\/\/facebook.github.io\/prophet\/docs\/quick_start.html#python-api","a7969172":"# Data Exploration","905764b9":"# Model","6ef21c84":"# Data Preparation","6a1b7b20":"# Visualization"}}