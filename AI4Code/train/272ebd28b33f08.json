{"cell_type":{"a43f033a":"code","5e714248":"code","695642b0":"code","69f17a4d":"code","0707e69e":"code","f64b5b83":"code","9cce0a36":"code","c170fd87":"code","7015ed52":"code","32facb25":"code","e9fd2449":"code","0900e327":"code","ca8af162":"code","66ac0636":"code","696d1a69":"code","9922ba84":"code","00d7ec65":"markdown","03c983e8":"markdown"},"source":{"a43f033a":"# plotting\nimport pandas as pd # pandas\nimport numpy as np # numpy\n\n# preprocessing\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import LabelEncoder\n\n# classifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n# other\nfrom sklearn.model_selection import train_test_split","5e714248":"# read csv\ndata_frame = pd.read_csv(\n    filepath_or_buffer = \"..\/input\/StudentsPerformance.csv\", # file path of csv\n    header = 0, # header row\n)","695642b0":"data_frame.head(10) # top 10 rows from csv","69f17a4d":"data_frame.isnull().sum() # checking missing values","0707e69e":"# get writing, reading, and math scores for a separate data frame\nML_DataPoints = pd.read_csv(\n    filepath_or_buffer = \"..\/input\/StudentsPerformance.csv\", # file path of csv\n    header = 0, # header row\n    usecols = ['math score',\n               'reading score',\n               'writing score'] # data points columns\n)","f64b5b83":"# get test preparation course values\nML_Labels = pd.read_csv(\n    filepath_or_buffer = \"..\/input\/StudentsPerformance.csv\", # file path of csv\n    header = 0, # header row\n    usecols = ['test preparation course'] # data points labels\n)","9cce0a36":"# min max scaler\nMNScaler = MinMaxScaler()\nMNScaler.fit(ML_DataPoints) # fit math, reading, and writing scores\nT_DataPoints = MNScaler.transform(ML_DataPoints) # transform the scores","c170fd87":"# label encoder\nLEncoder = LabelEncoder()\nLEncoder.fit(ML_Labels) # fit labels\nT_Labels = LEncoder.transform(ML_Labels) # transform the labels","7015ed52":"# split train test data set\nXTrain, XTest, YTrain, YTest = train_test_split(T_DataPoints, T_Labels, random_state = 10)","32facb25":"RandomForest = RandomForestClassifier(\n    n_estimators = 10,\n    random_state = 3\n) # load the classifier","e9fd2449":"RandomForest.fit(XTrain, YTrain) # fit data points and labels","0900e327":"RandomForest.score(XTrain, YTrain)","ca8af162":"RandomForest.score(XTest, YTest)","66ac0636":"data_points= np.array ([\n    [72, 72, 74], [90, 95, 93], [47, 57, 44], [76, 78, 75], [71,83, 78], #none --> 1\n    [69, 90, 88], [88, 95, 92], [64, 64, 67], [78, 72, 70], [46, 42, 46] # completed --> 0\n\n])","696d1a69":"T_Points = MNScaler.transform(data_points)","9922ba84":"RandomForest.predict(T_Points)","00d7ec65":"**Split train test data set**","03c983e8":"Split arrays or matrices into random *train* and *test* subsets."}}