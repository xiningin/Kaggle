{"cell_type":{"d6d013b0":"code","d93e3096":"code","699db8b3":"code","87696e9d":"code","2be21b21":"code","d6c5d19a":"code","1a40b547":"code","fc580213":"code","768ed753":"code","96b66856":"code","7c0f8b64":"code","1edf2e5b":"code","0eb89402":"code","5ab913e9":"code","21a0b65d":"code","fb3d937b":"code","bb19ce9c":"code","4a900fde":"code","4ee7c2a2":"code","4e7e2d26":"code","54a9dc46":"code","91f95e11":"code","9ecaf0bf":"code","645b1fa5":"code","79dd15bc":"code","62cb0133":"code","272c38f1":"code","1334b6ae":"code","d47dca52":"code","40974fa4":"code","0f6d208d":"code","bf28a8b4":"code","3e031e42":"code","3b142039":"code","d968b986":"code","a9c85264":"code","d37bf4b8":"code","6bf6286a":"code","c6baf743":"code","99a24284":"code","4de3bc6b":"markdown","81811bec":"markdown","bdeeabad":"markdown","427341e9":"markdown","f61013e7":"markdown","9dfd16d6":"markdown","3b18a1eb":"markdown","5f6ee9d1":"markdown"},"source":{"d6d013b0":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nimport seaborn as sns\nimport matplotlib.pyplot as plt","d93e3096":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")","699db8b3":"train.head()","87696e9d":"train.describe()","2be21b21":"train.isnull()","d6c5d19a":"sns.heatmap(train.isnull())","1a40b547":"sns.countplot(x=\"Survived\",data=train)","fc580213":"sns.barplot(x=\"Sex\",y=\"Survived\",hue=\"Pclass\",data=train)","768ed753":"sns.countplot(x=\"Sex\",hue=\"Pclass\",data=train)","96b66856":"sns.boxplot(x=\"Pclass\",y=\"Age\",data=train)","7c0f8b64":"def age_adjust(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 37\n        elif Pclass ==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","1edf2e5b":"train[\"Age\"]=train[[\"Age\",\"Pclass\"]].apply(age_adjust,axis=1)","0eb89402":"sns.heatmap(train.isnull())","5ab913e9":"train.drop(\"Cabin\",axis=1,inplace=True)","21a0b65d":"sns.heatmap(train.isnull())","fb3d937b":"train.head()","bb19ce9c":"train.drop(\"Name\",axis=1,inplace=True)","4a900fde":"train.drop(\"Ticket\",axis=1,inplace=True)","4ee7c2a2":"train.head()","4e7e2d26":"sex=pd.get_dummies(train[\"Sex\"],drop_first=True)\nembark=pd.get_dummies(train[\"Embarked\"],drop_first=True)\ntrain.drop([\"Sex\",\"Embarked\"],axis=1,inplace=True)","54a9dc46":"train.head()","91f95e11":"train=pd.concat([train,sex,embark],axis=1)","9ecaf0bf":"train.head()","645b1fa5":"train.drop([\"PassengerId\"],axis=1)","79dd15bc":"train.head()","62cb0133":"train.drop(\"PassengerId\",axis=1,inplace=True)","272c38f1":"train.head()","1334b6ae":"X = train.drop('Survived', axis=1)\ny = train['Survived']","d47dca52":"from sklearn.model_selection import train_test_split","40974fa4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","0f6d208d":"from sklearn.linear_model import LogisticRegression\n","bf28a8b4":"logmodel = LogisticRegression()\n","3e031e42":"logmodel.fit(X_train, y_train)\n","3b142039":"predictions = logmodel.predict(X_test)\n","d968b986":"from sklearn.metrics import classification_report\n","a9c85264":"print(classification_report(y_test, predictions))\n","d37bf4b8":"y_test","6bf6286a":"y_test[331]","c6baf743":"from sklearn.metrics import accuracy_score","99a24284":"accuracy_score(y_test,predictions)","4de3bc6b":"Now our data has no missing values ","81811bec":"Now that we have found the mean age for \"Pclass\" 1,2,3 we will replace the null values with respect to their \"Pclass\"","bdeeabad":"# Data Cleaning","427341e9":"# Make an algorithim that can predict if someone will survive or  not survive","f61013e7":"Will re add sex and embarked","9dfd16d6":"# Viewing our Data","3b18a1eb":"Now i will change Sex and Embarked from categorical","5f6ee9d1":"According to our heatmap we are missing some age information and alot of cabin information. \n\nAge= For age we can find the mean for each \"Pclass\" and replace null values as the mean for the \"Pclass\" it partains to.\n\nCabin= We will drop cabin because it simply is missing too many values\n"}}