{"cell_type":{"12639527":"code","97f2c2b1":"code","70836f07":"code","0eef243c":"code","a82ede6f":"code","004bbb5c":"code","e1dd4ce3":"code","63e069b8":"code","11daef7b":"code","7284de83":"code","7f96414a":"code","062fc8c2":"code","7532e1fe":"code","3b37e88c":"code","21dae74b":"code","7bd605b5":"code","77b29d86":"code","f0228b56":"code","6962ac78":"code","68017a7c":"code","f3dd3b86":"code","31e82659":"code","ac542b7e":"code","6ea5e231":"code","a9874270":"code","3686f91b":"code","cfe3504c":"code","68bcbbf4":"code","7af1cea5":"code","91b9fce7":"code","1beab4f5":"code","4a2dfd18":"code","ece92213":"code","61d3dd4b":"code","adaf2025":"code","65290152":"code","02e17f77":"code","357d07e9":"code","5edca1d3":"code","27d99e4f":"code","f9a4ae8f":"code","4edf9256":"code","4e0d6769":"code","30b1593c":"markdown","d3087996":"markdown","dff10c25":"markdown","0b70f3cd":"markdown","990b8799":"markdown","81bdccf8":"markdown","2c2ec49c":"markdown","9854f90f":"markdown","83ab45ba":"markdown","d010874b":"markdown","9e481c13":"markdown","c3ff9b37":"markdown","c9b167f4":"markdown","a8214090":"markdown","01ed89be":"markdown","c92a7b6d":"markdown","d83f04bd":"markdown","46b979a6":"markdown","60657cc7":"markdown","e8f007af":"markdown","6e009e25":"markdown","0cfd60ab":"markdown","f015e3ae":"markdown","6dc19841":"markdown","0a9e4204":"markdown","d792dd6d":"markdown","b1f4460c":"markdown","2952f0ac":"markdown","86601a9c":"markdown","92a2c51d":"markdown","e7daebf1":"markdown","511ddfcd":"markdown","0ec6fa41":"markdown","9bf87c17":"markdown","b66b8c74":"markdown","f7a95c43":"markdown","605765b4":"markdown","ceae7d99":"markdown","0be9f47f":"markdown","ac746465":"markdown","fe1245e7":"markdown","7e1b3235":"markdown","609966c8":"markdown"},"source":{"12639527":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport calendar\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","97f2c2b1":"df = pd.read_csv('\/kaggle\/input\/uberdrives\/My Uber Drives - 2016.csv')\ndf.head()","70836f07":"df.tail()","0eef243c":"print(df.shape)\ndf.dtypes","a82ede6f":"df.isna().sum()","004bbb5c":"df[df['END_DATE*'].isna()]","e1dd4ce3":"# dropping row containing null vals\ndf.drop(df[df['END_DATE*'].isna()].index,axis=0,inplace=True)","63e069b8":"df.isna().sum()","11daef7b":"df.info()","7284de83":"# droppig Purpose\ndf.drop(['PURPOSE*'],axis=1,inplace=True)\ndf.head(2)","7f96414a":"df[df.duplicated()]","062fc8c2":"df.drop(df[df.duplicated()].index, axis=0, inplace=True)\ndf[df.duplicated()]","7532e1fe":"df['START_DATE*'] = pd.to_datetime(df['START_DATE*'], format='%m\/%d\/%Y %H:%M')\ndf['END_DATE*'] = pd.to_datetime(df['END_DATE*'], format='%m\/%d\/%Y %H:%M')\ndf.dtypes","3b37e88c":"df['CATEGORY*'].unique()","21dae74b":"df[['CATEGORY*','MILES*']].groupby(['CATEGORY*']).agg(tot_miles=('MILES*','sum'))","7bd605b5":"plt.figure()\ndf[['CATEGORY*','MILES*']].groupby(['CATEGORY*']).agg(tot_miles=('MILES*','sum')).plot(kind='bar')\nplt.xlabel('Category')\nplt.ylabel('Total Miles')\nplt.title('Total Miles per Category')","77b29d86":"len(df['START*'].unique())","f0228b56":"# Top 10 Start places\ndf['START*'].value_counts(ascending=False)[:10]","6962ac78":"\ndf['START*'].value_counts(ascending=False)[:10].plot(kind='barh',ylabel='Places',xlabel='Pickup Count',title='Top 10 Pickup places')","68017a7c":"len(df['STOP*'].unique())","f3dd3b86":"\ndf['STOP*'].value_counts(ascending=False)[:10].plot(kind='barh',ylabel='Places',xlabel='Pickup Count',title='Top 10 Drop places')","31e82659":"df[df['START*']=='Unknown Location']['START*'].value_counts()","ac542b7e":"df[df['STOP*']=='Unknown Location']['STOP*'].value_counts()","6ea5e231":"sns.histplot(df['MILES*'],kde=True)","a9874270":"df.describe().T","3686f91b":"df.head()","cfe3504c":"df.groupby(['START*','STOP*'])['MILES*'].apply(print)","68bcbbf4":"df.groupby(['START*','STOP*'])['MILES*'].sum().sort_values(ascending=False)[1:11]","7af1cea5":"def is_roundtrip(df):\n    if df['START*'] == df['STOP*']:\n        return 'YES'\n    else:\n        return 'NO'\n    \ndf['ROUND_TRIP*'] = df.apply(is_roundtrip, axis=1)\n\nsns.countplot(x='ROUND_TRIP*',data=df, order=df['ROUND_TRIP*'].value_counts().index)","91b9fce7":"df['ROUND_TRIP*'].value_counts()","1beab4f5":"df.dtypes","4a2dfd18":"df['Ride_duration'] = df['END_DATE*']-df['START_DATE*']\ndf.head()","ece92213":"# using datetime.Timedelta  => https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/timedeltas.html\ndf.loc[:, 'Ride_duration'] = df['Ride_duration'].apply(lambda x: pd.Timedelta.to_pytimedelta(x).days\/(24*60) + pd.Timedelta.to_pytimedelta(x).seconds\/60)\ndf.head()","61d3dd4b":"#Capture Hour, Day, Month and Year of Ride in a separate column\ndf['month'] = pd.to_datetime(df['START_DATE*']).dt.month\ndf['Year'] = pd.to_datetime(df['START_DATE*']).dt.year\ndf['Day'] = pd.to_datetime(df['START_DATE*']).dt.day\ndf['Hour'] = pd.to_datetime(df['START_DATE*']).dt.hour\n\ndf['day_of_week'] = pd.to_datetime(df['START_DATE*']).dt.dayofweek\ndays = {0:'Mon',1:'Tue',2:'Wed',3:'Thur',4:'Fri',5:'Sat',6:'Sun'}\n\ndf['day_of_week'] = df['day_of_week'].apply(lambda x: days[x])\n\ndf.head()","adaf2025":"df['month'] = df['month'].apply(lambda x: calendar.month_abbr[x])\ndf.head()","65290152":"print(df['month'].value_counts())","02e17f77":"sns.countplot(x='month',data=df,order=pd.value_counts(df['month']).index,hue='CATEGORY*')","357d07e9":"sns.countplot(x='day_of_week',data=df,order=pd.value_counts(df['day_of_week']).index,hue='CATEGORY*')","5edca1d3":"df.groupby('month').mean()['MILES*'].sort_values(ascending = False).plot(kind='bar')\nplt.axhline(df['MILES*'].mean(), linestyle='--', color='red', label='Mean distance')\nplt.legend()\nplt.show()","27d99e4f":"sns.countplot(x='Hour',data=df,order=pd.value_counts(df['Hour']).index,hue='CATEGORY*')","f9a4ae8f":"df.head()","4edf9256":"df['Duration_hours'] = df['Ride_duration']\/60\ndf['Speed_KM'] = df['MILES*']\/df['Duration_hours']\ndf.head(2)","4e0d6769":"fig, ax = plt.subplots()\nsns.histplot(x='Speed_KM',data=df,kde=True,ax=ax)\nax.set_xlim(1,31)\nax.set_xticks([x*50 for x in range(0,5)])\n","30b1593c":"# Conclusion","d3087996":"**User mostly take single-trip Uber rides.**<br>\n* Around 75% trip is single-trip and 25% are ROund-Trip","dff10c25":"## MILES*","0b70f3cd":"## STOP*","990b8799":"**There are 177 unique starting points**","81bdccf8":"**Cary is the most popular Stop place for this user.**<br> \n***Maybe his home is in Cary (as mostly start & stop are from here)***","2c2ec49c":"This dataset contains details of uber rides of a customer.<br>\n**Dataset:** The dataset contains Start Date, End Date, Start Location, End Location, Miles Driven and Purpose of drive (Business, Personal, Meals etc) [dataset](https:\/\/www.kaggle.com\/zusmani\/uberdrives).<br>\n","9854f90f":"**Cary is the most popular Starting point for this user**","83ab45ba":"**Converting Ride_duration into Minutes**","d010874b":"* **User mainly uses Uber cabs for its Business purposes** <br>\n    * Around 94% miles was consumed during Business trips.\n    * Only 6% miles were consumed during personal trips.\n* There are 177 unique starting points<br>\n    * **Cary is most poplular starting point for this driver.**\n* There are 188 unique Stop points.\n    * **Cary is most poplular drop point for this driver.**\n* **Cary-Durham & Cary-Morrisville and vice versa are the User's longest distance Uber ride.**\n* **User usually takes single-trip Uber rides.**\n    * Around 75% trip is single-trip and 25% are Round-Trip.\n* **User's Most number of rides were in month of December & Least were in September.**\n* **Friday has maximum number of trips.**\n* **Afternoons and evenings seem to have the maximum number of trips.**\n* **User's Longest ride were on April & shortest were on November**","9e481c13":"# Checking for duplicate rows","c3ff9b37":"**There are 6 catagorical vars and 1 numeric type variable**<br>\n***Here STATR_DATE* and END_DATE* are in object type. We need to convert them back into datetime variable***","c9b167f4":"**User's Longest ride were on April & shortest were on November**","a8214090":"**Average distance covered\/month**","01ed89be":"**Maximim number of trips were on Evening & at noon.**","c92a7b6d":"There are 2 ride-categories...  Business: For work related & Personal: For personal travel ","d83f04bd":"## Multivariate analysis","46b979a6":"**Miles data is Rightly Skewed **","60657cc7":"## Calculating Ride duration","e8f007af":"# EDA","6e009e25":"**FRIDAY was the day at which uber rides were mostly used**","0cfd60ab":"# Checking for null values","f015e3ae":"**There are 188 unique Drop points (destination)**","6dc19841":"# Uber Ride Data Analysis","0a9e4204":"**Speed is right skewed**","d792dd6d":"**Most number of rides were in month of December (all of them were Business trips)**<br>\nTop 5 months having most trips were:    December,August,November,February & March.<br>\n**Uber Ride was used at Feb,Mar,Jul,Jun & Apr for personal trips.**","b1f4460c":"**Converting start_date & end_date cols into datetime** ","2952f0ac":"## 1. Category","86601a9c":"We will remove this duplicate row","92a2c51d":"**As we can see this row contains wrong data for most of the columns. We will delete it**","e7daebf1":"# Loading dataset","511ddfcd":"**Cary-Durham & Cary-Morrisville and vice versa are the farthest distance ride.**","0ec6fa41":"# Importing libraries","9bf87c17":"To fetch insights from the behavior of an common Uber customer.","b66b8c74":"# Univariate","f7a95c43":"# Objective","605765b4":"**Total rides\/month**","ceae7d99":"**Checking for Round Trip**","0be9f47f":"**Addding month name instead of month number**","ac746465":"## START*","fe1245e7":"### Calculating Trip speed","7e1b3235":"**Now we have null data only in Purpose column. <br>\nAs we have more than 55% data missing. So I am dropping this columns and excluding this from this analysis.**\n<br> You may also delete the null value rows and include this column in the analysis.<br>\n```sns.countplot(df['PURPOSE*'], order=df['PURPOSE*'].value_counts().index)```\n","609966c8":"**User mainly uses Uber cabs for its Business purposes**<br>\n* Around 94% miles was consumed during Business trips.\n* Only 6% miles were consumed during personal trips."}}