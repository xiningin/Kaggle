{"cell_type":{"2fda196e":"code","e854d677":"code","cd69d1a0":"code","1ea5acd5":"code","f60db2af":"code","86e4e5c8":"code","bbc83f7c":"code","5ba007c8":"code","b042b942":"code","ed89cc5d":"code","cf8d153e":"code","de807944":"code","6a1e0e0a":"code","1410484c":"code","fb3a27f6":"code","2dcd2f23":"code","6bc0b4e3":"code","3d077e4d":"code","6f36de0f":"code","9e58f7a9":"code","0cf2c750":"code","e2519f1f":"code","06b3ebf5":"markdown","f78b79ce":"markdown","7b303f30":"markdown","44644603":"markdown","24ec6280":"markdown","505bde67":"markdown","ecbdd4a8":"markdown","b56821c1":"markdown"},"source":{"2fda196e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e854d677":"import matplotlib.pyplot as plt\nimport seaborn as sns\nmlb_data = pd.read_csv('..\/input\/melbourne-housing-snapshot\/melb_data.csv')\nprint(mlb_data.columns)","cd69d1a0":"mlb_data.describe()","1ea5acd5":"mlb_data.head()","f60db2af":"mlb_data.info()","86e4e5c8":"regionName=mlb_data['Regionname']\nregionName.head(10)","bbc83f7c":"mcols=['Suburb', 'Rooms']\ntype(mcols)","5ba007c8":"mlb_selectedCols=mlb_data[mcols]","b042b942":"type(mlb_selectedCols)","ed89cc5d":"mlb_selectedCols.describe()","cf8d153e":"mlb_selectedCols.groupby('Suburb').mean().head(10)","de807944":"rooms=mlb_data[mlb_data['Rooms']>3]\nrooms","6a1e0e0a":"rooms.groupby('Suburb')['Address'].head(5)","1410484c":"def split_address(address):\n    return address.split(' ')[2]\nmlb_data['loc']=mlb_data['Address'].apply(split_address)\nmlb_data['loc']","fb3a27f6":"mlb_data[mlb_data['loc']=='St'].groupby('Suburb')[['Rooms','Type','Price']].head(5)\n","2dcd2f23":"mlb_data.corr","6bc0b4e3":"mlb_data['Type'].unique()","3d077e4d":"mlb_data['Type'].value_counts()","6f36de0f":"sns.barplot(data=mlb_data, x='Type', y=\"Price\")","9e58f7a9":"plt.figure(figsize=(16,8))\nsns.countplot(data=mlb_data, x=\"Price\")","0cf2c750":"sns.scatterplot(data=mlb_data , x='Rooms', y=\"Type\"  )","e2519f1f":"sns.histplot(mlb_data['Price'], bins=40 , kde=True)","06b3ebf5":"output has Dataframe type","f78b79ce":"# Find houses with more than 3 rooms","7b303f30":"# Dtaset Information","44644603":"# Barplot","24ec6280":"output has series type","505bde67":"# select mulitple coulmns","ecbdd4a8":"# Find houses in streets\n","b56821c1":"# Catregrise the output with suburb col"}}