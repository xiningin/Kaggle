{"cell_type":{"885e5557":"code","abb1579a":"code","7f5cf074":"code","6f81dbad":"code","7781fb30":"code","da032370":"code","a1f9be27":"code","1ae3c450":"code","0575eae4":"code","3a6e79df":"code","fd4491f9":"code","6d99fc49":"code","3f1e3cc3":"code","e9bc7d84":"code","da729880":"code","fe59deb8":"code","96132fb1":"code","a67553cf":"code","9ba3ef55":"code","a88a2921":"code","5cc776cc":"code","943d7cd3":"code","ddc4b9bd":"code","d5570fd2":"code","02538a33":"code","48485a83":"code","dcafb1b4":"code","e5a66b87":"code","a2d6ae6f":"code","d81e2663":"code","34598e3a":"code","a407b34c":"code","863545ea":"code","2a97d6db":"code","cb18eae4":"code","f84174ae":"code","3e0b8fec":"code","7114ed78":"code","cf5a95d6":"code","71fe3839":"code","2de74a9b":"code","a50513dc":"markdown","2887933b":"markdown","b93775b2":"markdown","8dd6aecb":"markdown","f7df22a4":"markdown","8bf8640a":"markdown","7531db96":"markdown","e1b6f6c8":"markdown","0138931c":"markdown","98b40c93":"markdown"},"source":{"885e5557":"\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline \n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\n\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import precision_score, recall_score, f1_score\nfrom sklearn.metrics import plot_roc_curve","abb1579a":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndf.head()","7f5cf074":"df.info()","6f81dbad":"df.isna().sum()","7781fb30":"sns.countplot(df.target)","da032370":"df.describe()","a1f9be27":"pd.crosstab(df.target,df.sex)","1ae3c450":"pd.crosstab(df.target,df.sex).plot(kind = 'bar',\n                                   figsize = (8,8),\n                                   color = ['lightgreen','lightblue'])\nplt.title('Heart-Disease as per sex')\nplt.xlabel('0 = No-Disease,1 = Disease')\nplt.ylabel('Percent')\nplt.legend(['Female','Male'])\nplt.xticks(rotation = 0);","0575eae4":"pd.crosstab(df.cp,df.target)","3a6e79df":"pd.crosstab(df.cp,df.target).plot(kind = 'bar',\n                                  figsize = (8,8),\n                                  color = ['lightgreen','lightblue'])\nplt.title('Heart-Diseae as per chest pain')\nplt.xlabel('chest pain')\nplt.ylabel('percent')\nplt.legend(['No Disease','Disease'])\nplt.xticks(rotation = 0);","fd4491f9":"sns.distplot(df.age)","6d99fc49":"corr = df.corr()\ncorr","3f1e3cc3":"fig,ax = plt.subplots(figsize = (12,12))\nax = sns.heatmap(corr,\n                 annot=True,\n                 linewidths=0.5,\n                 fmt=\".2f\",\n                 cmap=\"YlGnBu\");","e9bc7d84":"x = df.drop('target',axis = 1)\ny = df['target']","da729880":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)","fe59deb8":"model = RandomForestClassifier()\nmodel.fit(x_train,y_train)","96132fb1":"model.score(x_test,y_test)","a67553cf":"y_preds = model.predict(x_test)","9ba3ef55":"print(classification_report(y_test,y_preds))","a88a2921":"conf = confusion_matrix(y_test,y_preds)\nconf","5cc776cc":"f, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(conf,\n            annot=True,\n            linewidths=0.5,\n            linecolor=\"red\",\n            fmt=\".0f\",\n            ax=ax)\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"True Values\")\nplt.show();","943d7cd3":"model1 = KNeighborsClassifier()\nmodel1.fit(x_train,y_train)","ddc4b9bd":"model1.score(x_test,y_test)","d5570fd2":"kn_preds = model1.predict(x_test)","02538a33":"print(classification_report(y_test,kn_preds))","48485a83":"conf_mat = confusion_matrix(y_test,kn_preds)\nconf_mat","dcafb1b4":"f, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(conf_mat,\n            annot=True,\n            linewidths=0.5,\n            linecolor=\"red\",\n            fmt=\".0f\",\n            ax=ax)\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"True Values\")\nplt.show();","e5a66b87":"model2 = LogisticRegression()\nmodel2.fit(x_train,y_train)","a2d6ae6f":"model2.score(x_test,y_test)","d81e2663":"log_preds = model2.predict(x_test)","34598e3a":"print(classification_report(y_test,log_preds))","a407b34c":"mat = confusion_matrix(y_test,log_preds)\nmat","863545ea":"f, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(mat,\n            annot=True,\n            linewidths=0.5,\n            linecolor=\"red\",\n            fmt=\".0f\",\n            ax=ax)\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"True Values\")\nplt.show();","2a97d6db":"model3 = SVC()\nmodel3.fit(x_train,y_train)","cb18eae4":"model3.score(x_test,y_test)","f84174ae":"svc_preds = model3.predict(x_test)","3e0b8fec":"print(classification_report(y_test,svc_preds))","7114ed78":"svc_mat = confusion_matrix(y_test,svc_preds)\nsvc_mat","cf5a95d6":"f, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(svc_mat,\n            annot=True,\n            linewidths=0.5,\n            linecolor=\"red\",\n            fmt=\".0f\",\n            ax=ax)\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"True Values\")\nplt.show();","71fe3839":"scores = pd.DataFrame({'RandomForest': model.score(x_test,y_test),\n                       'KNeighborsClassifier': model1.score(x_test,y_test),\n                       'LogisticRegression': model2.score(x_test,y_test),\n                       'SVC': model3.score(x_test,y_test)},\n                        index = [0])","2de74a9b":"scores.T.plot(kind = 'bar',\n              figsize = (10,10))\nplt.title('Scores of all Model')\nplt.xlabel('Model Name')\nplt.ylabel('Scores');\n              \n                      \n","a50513dc":"# Plz Upvote !!! If You Like This Kernal.","2887933b":"Some Basic Visualization for better understanding","b93775b2":"Plotting the scores of all model","8dd6aecb":"## SVC","f7df22a4":"Importing The Data","8bf8640a":"## LogisticRegression","7531db96":"Splitting the data ","e1b6f6c8":"Model Building","0138931c":"## RandomForestClassifier","98b40c93":"## KNeighborsClassifier"}}