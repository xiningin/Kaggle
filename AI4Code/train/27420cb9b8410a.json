{"cell_type":{"f17d0795":"code","53aadc05":"code","e14f0a3f":"code","9cc50fed":"code","afb17ff5":"code","4b5f8939":"code","3eb73958":"code","69ad76ed":"code","5e5ddbbf":"code","aa24007c":"code","906a121e":"code","a56f15dd":"code","b11a9be4":"code","23538af6":"code","dfc82f2b":"code","f4cf0af8":"code","768e4528":"code","0a4a9de6":"code","b6541fd4":"code","0825aa4b":"markdown","ca224427":"markdown","41d02eec":"markdown","e92bbb03":"markdown","4001fe38":"markdown","8c03a297":"markdown","8217cd21":"markdown","f269776a":"markdown","85f41078":"markdown","0e9c6c2a":"markdown","d98bab93":"markdown","d83bcbd1":"markdown","a302f163":"markdown","ac3bc598":"markdown","5017b647":"markdown","9cfcdf1f":"markdown","3c6d6651":"markdown","a920ee3d":"markdown","92800a52":"markdown"},"source":{"f17d0795":"from IPython.display import Image\nfrom IPython.core.display import HTML \nImage(url=\"https:\/\/cdn-images-1.medium.com\/max\/800\/1*pr2lbvx1jHw9aU1WsP73LA.gif\")","53aadc05":"# import numpy library as np\nimport numpy as np\n\nimport matplotlib.pyplot as plt","e14f0a3f":"arr = np.array([1,3,5,np.nan,6,8])\narr","9cc50fed":"arr[1]","afb17ff5":"# import pandas library as pd\nimport pandas as pd\n# Create Pandas Series \ns = pd.Series([1,3,5,np.nan,6,8])\nprint(s)","4b5f8939":"series_index = pd.Series(np.array([10,20,30,40,50,60]), index=['a', 'b', 'c', 'd', 'e', 'f'])\nseries_index","3eb73958":"#Generate dates\ndates = pd.date_range('20130101', periods=6)\nprint(dates)","69ad76ed":"temp_data = pd.DataFrame(np.random.randint(low=-20, high=40, size=(12, 2)))\ntemp_data","5e5ddbbf":"df = pd.DataFrame(np.random.randn(6,4), index=[1,2,3,4,5,6], columns=list('ABCD'))\nprint(df)","aa24007c":"# Generate new list of dates\ndates = pd.date_range('20190101', periods=12)\n\n# Generate dataframe with random temperatures\ntemp_data = pd.DataFrame(np.random.randint(low=-20, high=40, size=(12, 2)), index=dates, \n                             columns=['Forecast Avg', 'Actual Average'])\n# Print temp data\ntemp_data","906a121e":"df2 = pd.DataFrame({ 'A' : 1.,\n                     'B' : pd.Timestamp('20130102'),\n                     'C' : pd.Series(1,index=list(range(4)),dtype='float32'),\n                     'D' : np.array([3] * 4,dtype='int32'),\n                     'E' : pd.Categorical([\"test\",\"train\",\"test\",\"train\"]),\n                     'F' : 'foo' })\n\nprint(df2)\nprint(\"\\n\")\nprint(df2.dtypes)","a56f15dd":"temp_data.head()","b11a9be4":"temp_data.tail(3)","23538af6":"temp_data.index","dfc82f2b":"temp_data.iloc[0]['Forecast Avg']","f4cf0af8":"import pandas as pd\nData = {'x': [25,34,22,27,33,33,31,22,35,34,67,54,57,43,50,57,59,52,65,47,49,48,35,33,44,45,38,43,51,46],\n        'y': [79,51,53,78,59,74,73,57,69,75,51,32,40,47,53,36,35,58,59,50,25,20,14,12,20,5,29,27,8,7]\n       }\ndf = pd.DataFrame(Data,columns=['x','y'])","768e4528":"# vectors = array_function( dataframe )\ntwoDvectors = np.array(df)","0a4a9de6":"from sklearn.cluster import KMeans\n\n# model_name = Kmeans(n_Of_clusters).fit(vectors)\nkmeans_model = KMeans(n_clusters = 3).fit(twoDvectors)\n\n# get cluster centroids\n# cluster_centroids = model_name.cluster_centers_\ncluster_centroids = kmeans_model.cluster_centers_","b6541fd4":"import matplotlib.pyplot as plt\n\n# plot feature points and cluster lables\nplt.scatter(twoDvectors[:,0], twoDvectors[:,1], c= kmeans_model.labels_)\n\n# plot cluster centroids \nplt.scatter(cluster_centroids[:,0], cluster_centroids[:,1], c='red', s=50)","0825aa4b":"Generate a series of numbers between -20 and 40 in a 12 x 2 dimensional array as **temp_data** [randint Documentation](https:\/\/het.as.utexas.edu\/HET\/Software\/Numpy\/reference\/generated\/numpy.random.randint.html)","ca224427":"# Machine Learning and Python Intership Training\n\n#### Demo 1\n\n\n\n","41d02eec":"#### Demo 2.\n#### K-Means Clustering\n\nCluster the data in df dataframe using K-means algorithm and visualize the results.\n\n#### Step 1.\n*Load the dataframe*\n","e92bbb03":"Differences between **Numpy arrays** and **Pandas Series** \n* Indexing - Custom indexing in Series, can contain number and letters; indexes in arrays are always numeric.\n* Series allow aligning data and matching indexes. ","4001fe38":"#### Step 3.\n*Create and fit a Kmeans model*","8c03a297":"# Pandas\n\n**PANDAS** probably is the most popular library for data analysis in Python programming language. This library is a high-level abstraction over low-level NumPy which is written in pure C.\n\n#### Main Features:\n\n* Tabular data with heterogeneously-typed columns, as in an SQL table or Excel spreadsheet.\n* Powerful, flexible group by functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data.\n* Intuitive merging and joining data sets, as in SQL\n","8217cd21":"## Object Creation\n\nData in Python is stored in Objects, such as lists, arrays dataframes etc.\n\n\nSee the [Data Structure Intro section](https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.0\/dsintro.html#dsintro)\n","f269776a":"#### Exploring the dataframe\n.head(), tail(), .index, .values, .describe can be used to explorre the data ","85f41078":"Creating a [DataFrame](https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.0\/generated\/pandas.DataFrame.html#pandas.DataFrame) by passing a numpy array, with a datetime index and labeled columns:","0e9c6c2a":"Creating a DataFrame by passing a list of objects that can be converted to series-like.","d98bab93":"numpy arrays are very similar to python lists, but are stored more efficiently and support some matematical operations.","d83bcbd1":"#### Numpy Arrays\n\nndarrays are stored more efficiently than Python lists and allow mathematical operations to be vectorized, which results in significantly higher performance than with looping constructs in Python.","a302f163":"#### Series\nThey represent a one-dimensional labeled indexed array based on the NumPy ndarray.\n> [](http:\/\/) \nCreating a [Series](https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.0\/generated\/pandas.Series.html#pandas.Series) by passing a list of values, letting pandas create a default integer index:","ac3bc598":"to access the pandas library we prefix our function with **pd.**","5017b647":"### Main takeaways:\n* Clustering is powerful technique to understand your data\n* Distinguish between n - dimensional and 2-dimensional data\n* There is no right and wrong way in clustering data","9cfcdf1f":"#### DataFrames","3c6d6651":"#### Step 4.\n*Visualize results*","a920ee3d":"#### Step 2.\n*Create data vectors from the dataframe*","92800a52":"Pandas has a number of useful functions not only to manipulate data but also to generate data points."}}