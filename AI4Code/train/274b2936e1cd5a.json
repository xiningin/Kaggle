{"cell_type":{"157cbe6f":"code","e65167c1":"code","764e2175":"code","bb7b4c6d":"code","9aa7455e":"code","1c50c65e":"code","b4fbc544":"code","58abe960":"code","b0352307":"code","1f924c58":"code","901d0d17":"code","a7c439d0":"code","23ef232c":"code","639f2dbd":"code","e7d0b93d":"code","a75ef7ac":"code","afb49bb4":"code","f6e75e34":"code","75a6b8c1":"code","db80ad59":"code","0d40e37d":"code","ce3e6cb1":"markdown","a8ac10d8":"markdown","0f4ed8e9":"markdown","72f1f105":"markdown","5af47dd6":"markdown","215023e6":"markdown","d0aaedfa":"markdown","0b7c3133":"markdown","f0f7e295":"markdown","ad7af035":"markdown","2b394cab":"markdown","98cbeaac":"markdown"},"source":{"157cbe6f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nsns.set()","e65167c1":"data = pd.read_csv('\/kaggle\/input\/gender-classification\/Transformed Data Set - Sheet1.csv')","764e2175":"data.info()","bb7b4c6d":"data.shape","9aa7455e":"data.head()","1c50c65e":"_ = sns.countplot(x = data.Gender, y=None)","b4fbc544":"from sklearn.preprocessing import LabelEncoder\n\ndata1 = data.copy(deep = True)\nle_color = LabelEncoder()\ndata1['Favorite Color'] = le_color.fit_transform(data['Favorite Color'])\n\nle_genre = LabelEncoder()\ndata1['Favorite Music Genre'] = le_genre.fit_transform(data['Favorite Music Genre'])\n\n\nle_beverage = LabelEncoder()\ndata1['Favorite Beverage'] = le_beverage.fit_transform(data['Favorite Beverage'])\n\n\nle_drink = LabelEncoder()\ndata1['Favorite Soft Drink'] = le_drink.fit_transform(data['Favorite Soft Drink'])\n\n\nle_gender = LabelEncoder()\ndata1['Gender'] = le_gender.fit_transform(data['Gender'])","58abe960":"data1.head()","b0352307":"X = data1.drop(['Gender'], axis = 1)\ny = data1.Gender","1f924c58":"from sklearn import tree\n\nclf = tree.DecisionTreeClassifier(max_depth=4)\nclf = clf.fit(X, y)","901d0d17":"clf.score(X, y)","a7c439d0":"import matplotlib.pyplot as plt\nplt.figure(figsize = (20,20))\n_ = tree.plot_tree(clf.fit(X, y)) ","23ef232c":"import graphviz \ndot_data = tree.export_graphviz(clf, out_file=None,feature_names=data1.drop(['Gender'],axis=1).columns, filled=True) \ngraph = graphviz.Source(dot_data) ","639f2dbd":"graph","e7d0b93d":"from sklearn import tree\n\nclf = tree.DecisionTreeClassifier(max_depth=4, min_samples_split=6)\nclf = clf.fit(X, y)","a75ef7ac":"clf.score(X, y)","afb49bb4":"import graphviz \ndot_data = tree.export_graphviz(clf, out_file=None,feature_names=data1.drop(['Gender'],axis=1).columns, filled=True) \ngraph = graphviz.Source(dot_data) ","f6e75e34":"graph","75a6b8c1":"from sklearn import tree\n\nclf = tree.DecisionTreeClassifier(max_depth=4, min_samples_split=6, min_samples_leaf=5)\nclf = clf.fit(X, y)","db80ad59":"dot_data = tree.export_graphviz(clf, out_file=None,feature_names=data1.drop(['Gender'],axis=1).columns, filled=True) \ngraph = graphviz.Source(dot_data) ","0d40e37d":"graph","ce3e6cb1":"# min_samples_split","a8ac10d8":"# With GraphViz","0f4ed8e9":"## This small dummy data I have used takes four independent factors to predict the Gender of the person.","72f1f105":"#### 1. Each box represents a split.\n#### 2. In tree.plot_tree function we can see the condition for split.\n#### 3. Both graphs mention gini on each box. Gini is the default objective function of decision trees.\n#### 4. Number of samples used to make the split or leaf is also mentioned in each box.\n#### 5. Value = [] gives us the split count on all splits made\n#### 6. In graphviz function we can see the feature name used for split.","5af47dd6":"# With tree.plot_tree","215023e6":"# Visualization","d0aaedfa":"# Model","0b7c3133":"# Label Encoding to plug into model","f0f7e295":"# min_samples_leaf","ad7af035":"# Basic Interpretation","2b394cab":"## Some splits are now not made due to the hyperparameters we put. This is a great way to study tree hyperparameters and its tuning on a decent scale","98cbeaac":"# Hyper parameter tuning"}}