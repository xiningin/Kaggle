{"cell_type":{"cada2b33":"code","8fbcd590":"code","fa72fd78":"code","573f5448":"code","fbc74a3e":"code","bf368d5a":"code","c1afd720":"code","8254ba47":"code","5224fadd":"code","2348b445":"code","bb76caff":"code","3eb84e29":"code","925a1325":"code","b6fa4a5a":"code","f7079943":"markdown","723dc60d":"markdown","2d19291e":"markdown","d4670386":"markdown","7ceb18c0":"markdown","60f01ab3":"markdown","653611b4":"markdown","7f2ed719":"markdown","89dc3323":"markdown","421edfe4":"markdown","5e7bb025":"markdown"},"source":{"cada2b33":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8fbcd590":"!pip install kornia","fa72fd78":"import cv2\nfrom matplotlib import pyplot as plt\n\nimport torch\nimport torchvision\nimport kornia as K","573f5448":"img_bgr: np.array = cv2.imread('..\/input\/sculptures-of-greek-olympians-dataset\/images\/athena\/000000003.jpg')  # HxWxC \/ np.uint8\nimg_rgb: np.array = cv2.cvtColor(img_bgr, cv2.COLOR_BGR2RGB)\n\nplt.imshow(img_rgb); plt.axis('off');","fbc74a3e":"x_rgb: torch.tensor = torchvision.io.read_image('..\/input\/sculptures-of-greek-olympians-dataset\/images\/apollo\/000000001.jpg')  # CxHxW \/ torch.uint8\nx_rgb = x_rgb.unsqueeze(0)  # BxCxHxW\nprint(x_rgb.shape);","bf368d5a":"#Code by https:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html\n\nx_bgr: torch.tensor = K.image_to_tensor(img_bgr)  # CxHxW \/ torch.uint8\nx_bgr = x_bgr.unsqueeze(0)  # 1xCxHxW\nprint(f\"convert from '{img_bgr.shape}' to '{x_bgr.shape}'\")","c1afd720":"x_rgb: torch.tensor = K.color.bgr_to_rgb(x_bgr)  # 1xCxHxW \/ torch.uint8","8254ba47":"img_bgr: np.array = K.tensor_to_image(x_bgr)\nimg_rgb: np.array = K.tensor_to_image(x_rgb)","5224fadd":"#Code by https:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html\n\nfig, axs = plt.subplots(1, 2, figsize=(32, 16))\naxs = axs.ravel()\n\naxs[0].axis('off')\naxs[0].imshow(img_rgb)\n\naxs[1].axis('off')\naxs[1].imshow(img_bgr)\n\nplt.show()","2348b445":"#Code by https:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html\n\nimg_bgr1: np.array = cv2.imread('..\/input\/sculptures-of-greek-olympians-dataset\/images\/hera\/000000024.jpg')  # HxWxC \/ np.uint8\nimg_rgb1: np.array = cv2.cvtColor(img_bgr1, cv2.COLOR_BGR2RGB)\n\nplt.imshow(img_rgb1); plt.axis('off');","bb76caff":"#Code by https:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html\n\nx_bgr1: torch.tensor = K.image_to_tensor(img_bgr1)  # CxHxW \/ torch.uint8\nx_bgr1 = x_bgr1.unsqueeze(0)  # 1xCxHxW\nprint(f\"convert from '{img_bgr1.shape}' to '{x_bgr1.shape}'\")","3eb84e29":"#Convert from BGR to RGB with a kornia.color component.\n\nx_rgb1: torch.tensor = K.color.bgr_to_rgb(x_bgr1)","925a1325":"#Visualize an image with Matplotib\n\nimg_bgr1: np.array = K.tensor_to_image(x_bgr1)\nimg_rgb1: np.array = K.tensor_to_image(x_rgb1)","b6fa4a5a":"#Code by https:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html\n\nfig, axs = plt.subplots(1, 2, figsize=(32, 16))\naxs = axs.ravel()\n\naxs[0].axis('off')\naxs[0].imshow(img_rgb1)\n\naxs[1].axis('off')\naxs[1].imshow(img_bgr1)\n\nplt.show()","f7079943":"#Convert from BGR to RGB with a kornia.color component.","723dc60d":"#Load an image with Kornia\n\n\"The utility is kornia.image_to_tensor which casts a numpy.ndarray to a torch.Tensor and permutes the channels to leave the image ready for being used with any other PyTorch or Kornia component.\nThe image is casted into a 4D torch.Tensor with zero-copy.\"\n\nhttps:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html","2d19291e":"#Acknowledgements:\n\nKornia AI is on the mission to leverage and democratize the next generation of Computer Vision tools and Deep Learning libraries within the context of an Open Source community.\n\nhttps:\/\/kornia.readthedocs.io\/en\/latest\/\n","d4670386":"@misc{Arraiy2018,\n  author    = {E. Riba, M. Fathollahi, W. Chaney, E. Rublee and G. Bradski},\n  title     = {torchgeometry: when PyTorch meets geometry},\n  booktitle = {PyTorch Developer Conference},\n  year      = {2018},\n  url       = {https:\/\/drive.google.com\/file\/d\/1xiao1Xj9WzjJ08YY_nYwsthE-wxfyfhG\/view?usp=sharing}\n}","7ceb18c0":"@inproceedings{eriba2020kornia,\n  author    = {E. Riba, D. Mishkin, J. Shi, D. Ponsa, F. Moreno-Noguer and G. Bradski},\n  title     = {A survey on Kornia: an Open Source Differentiable Computer Vision Library for PyTorch},\n  year      = {2020},\n}","60f01ab3":"#Visualize an image with Matplotib","653611b4":"@inproceedings{eriba2019kornia,\n  author    = {E. Riba, D. Mishkin, D. Ponsa, E. Rublee and G. Bradski},\n  title     = {Kornia: an Open Source Differentiable Computer Vision Library for PyTorch},\n  booktitle = {Winter Conference on Applications of Computer Vision},\n  year      = {2020},\n  url       = {https:\/\/arxiv.org\/pdf\/1910.02190.pdf}\n}","7f2ed719":"#Load an image with Torchvision\n\nIt returns the images in a torch.Tensor in the shape (C,H,W).","89dc3323":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSbcOn93jAsKgAsmDDWUPQ1pIKABV7_XIyHgRxfNaK0Eb6SWPv8v1RUrAgpWBDwOh7QAuU&usqp=CAU)medium.com","421edfe4":"#Load an image with OpenCV","5e7bb025":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #001f3f;\"><b style=\"color:white;\">Kornia Computer Vision in Pytorch<\/b><\/h1><\/center>\n\nhttps:\/\/kornia-tutorials.readthedocs.io\/en\/latest\/hello_world_tutorial.html"}}