{"cell_type":{"7e63e1ec":"code","38ee1ec2":"code","9910631e":"code","ffdb177b":"code","8634f1f5":"code","cd0c2689":"code","b22e0fb3":"code","fffe81bb":"code","f422585e":"code","68b96a5f":"code","520388de":"code","0df631e5":"code","0c9d120c":"code","6c842ff1":"code","096812e1":"code","4163371e":"code","871717b5":"code","70db5229":"code","f8b0bb5f":"code","5b6f06eb":"code","0c630a81":"code","5236aa2e":"code","5a0e3bb8":"code","85fbc49c":"code","91cae072":"code","1d92e237":"code","af0c17f8":"code","4193521c":"code","f6b5e305":"code","bcf30e91":"code","af670b5b":"code","de394b67":"code","71a99de7":"code","a413522e":"code","5504eea1":"code","dc576d5f":"code","4f565e37":"code","c901ccd7":"code","787a9c71":"code","9428a42a":"code","0d388c43":"code","b2d47127":"code","713ca162":"code","50c0075d":"code","fc1d4561":"code","0bbe6e28":"code","40504395":"code","66923172":"code","5bb9135f":"code","7de551ae":"code","feb16255":"code","e733fdab":"code","854e4fa6":"code","751eddf3":"code","55fd32fb":"code","4d83506b":"code","bce989ca":"code","509cf6c2":"code","d4a082b8":"code","5c99e028":"code","41a67c1c":"code","896c6eed":"code","49813bad":"code","d56beb77":"code","0ba9c72b":"code","316b0d19":"markdown","5989bbdd":"markdown","bb6b641d":"markdown","79206e3f":"markdown","dc949e12":"markdown","43449a73":"markdown","afd301f3":"markdown","bc59a4a6":"markdown","5781d374":"markdown","de9eadd4":"markdown","c94c3af3":"markdown","d9f93d6c":"markdown","46b5e776":"markdown","0e96df09":"markdown","e6feaa88":"markdown","57daf05f":"markdown","6d65c08e":"markdown","deef9f6d":"markdown","1ed55af4":"markdown","613c2205":"markdown","fe56f68e":"markdown","4e51943c":"markdown","bda4eca2":"markdown","568cbdc6":"markdown","c4448432":"markdown","2523fed6":"markdown","f297344d":"markdown","68d9ef4a":"markdown","00281c3c":"markdown","53070c39":"markdown","acfb9732":"markdown","7d1acb83":"markdown","d32d6862":"markdown","8b0420bd":"markdown","46eb8306":"markdown","8c3de202":"markdown","05bceef7":"markdown","9d8fb6bb":"markdown","bdd36b69":"markdown","062f8bfd":"markdown","a2319236":"markdown","298d751f":"markdown","478c933c":"markdown","7754ef46":"markdown","0c05c316":"markdown","175bc5f7":"markdown","04e55deb":"markdown","2e8abc2d":"markdown","adc932c2":"markdown","0a6fdd08":"markdown","fa28288b":"markdown","4f794983":"markdown","59882278":"markdown","7bfe75b4":"markdown","809033bb":"markdown","931210c0":"markdown","da944176":"markdown","66be1562":"markdown","f2ab9a81":"markdown","453cf864":"markdown","ff37955e":"markdown","337ebc96":"markdown","4342e74a":"markdown","91370b88":"markdown","daff38a6":"markdown","8c539acb":"markdown","55272a67":"markdown","ec0ef0cf":"markdown","8e8c6697":"markdown","47e9e7d1":"markdown","c82c84a0":"markdown","bb54a976":"markdown","96dad161":"markdown","2751699f":"markdown","2bd26ac5":"markdown","5a757b1a":"markdown","3e9a2197":"markdown","c624cdc9":"markdown","70a9e785":"markdown","b4a54799":"markdown","d9207330":"markdown","2d9963ce":"markdown","d4827ab6":"markdown","a2159732":"markdown","1947616b":"markdown","e2fcdc79":"markdown","6622e745":"markdown","3e1c1e6a":"markdown","5a09a91e":"markdown","bfecbe64":"markdown","43ea9c2f":"markdown","cae4ac6f":"markdown","4f716d9a":"markdown","85545aec":"markdown","39c11791":"markdown","a9b60e2d":"markdown","4a980487":"markdown","2623715d":"markdown","47f60cc9":"markdown","03b4f26c":"markdown","a03f3f88":"markdown","7382dbc7":"markdown","83bd2a1b":"markdown","46af37a2":"markdown","4206f234":"markdown","8ae043fb":"markdown"},"source":{"7e63e1ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","38ee1ec2":"# \u6570\u636e\u6574\u7406\u548c\u5206\u6790\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n\n# \u53ef\u89c6\u5316\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# \u673a\u5668\u5b66\u4e60\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score","9910631e":"train_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')\ncombine = [train_df, test_df]","ffdb177b":"print(train_df.columns.values)","8634f1f5":"train_df.head()","cd0c2689":"train_df.tail()","b22e0fb3":"train_df.isnull().sum()","fffe81bb":"test_df.isnull().sum()","f422585e":"train_df.info()\nprint('_'*40)\ntest_df.info()","68b96a5f":"train_df.describe(percentiles=[.61, .62, .68, .69, .75, .8, .99])","520388de":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=train_df['Fare'])\nplt.ylabel('Fare')\nplt.subplot(222)\nsns.histplot(train_df['Fare'])\nplt.xlabel('Fare')","0df631e5":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=train_df['Age'])\nplt.ylabel('Age')\nplt.subplot(222)\nsns.histplot(train_df['Age'])\nplt.xlabel('Age')","0c9d120c":"train_df.describe(include='O')","6c842ff1":"plt.figure(figsize=[15, 8])\nplt.subplot(231)\nsns.countplot(x='Embarked', data=train_df)\nplt.subplot(232)\nsns.countplot(x='Pclass', data=train_df)\nplt.subplot(233)\nsns.countplot(x='Sex', data=train_df)","096812e1":"train_df[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)","4163371e":"train_df[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","871717b5":"train_df[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","70db5229":"train_df[['SibSp', 'Survived']].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)","f8b0bb5f":"train_df[['Parch', 'Survived']].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)","5b6f06eb":"g = sns.FacetGrid(train_df, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","0c630a81":"grid = sns.FacetGrid(train_df, col='Survived', row='Pclass', height=2.2, aspect=1.6)\ngrid.map(plt.hist, 'Age', alpha=0.5, bins=20)\ngrid.add_legend()","5236aa2e":"grid = sns.FacetGrid(train_df, row='Embarked', height=2.2, aspect=1.6)\ngrid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\ngrid.add_legend()","5a0e3bb8":"grid = sns.FacetGrid(train_df, row='Embarked', col='Survived', height=2.2, aspect=1.6)\ngrid.map(sns.barplot, 'Sex', 'Fare', alpha=0.5, ci=None)\ngrid.add_legend()","85fbc49c":"train_df = train_df.drop(columns=['Ticket', 'Cabin'])\ntest_df = test_df.drop(['Ticket', 'Cabin'], axis=1)","91cae072":"train_df = train_df.drop(columns=['PassengerId'])\ncombine = [train_df, test_df]","1d92e237":"for dataset in combine:\n    dataset['Title'] = dataset['Name'].str.extract('([A-Za-z]+)\\.', expand=False)","af0c17f8":"pd.crosstab(train_df['Title'], train_df['Sex'])","4193521c":"for dataset in combine:\n    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess', 'Capt', 'Col', 'Don', \n                                                 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer',\n                                                'Dona'], 'Rare')\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')","f6b5e305":"train_df[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()","bcf30e91":"train_df = train_df.drop(['Name'], axis=1)\ntest_df = test_df.drop(columns=['Name'])\ncombine = [train_df, test_df]\ntrain_df.head()","af670b5b":"for dataset in combine:\n    dataset['FamilySize'] = dataset['SibSp'] + dataset['Parch'] + 1 # \u522b\u5fd8\u4e86\u52a0\u4e0a\u81ea\u5df1","de394b67":"train_df[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=False).mean().sort_values(by='Survived', ascending=False)","71a99de7":"for dataset in combine:\n    dataset['IsAlone'] = 0\n    dataset.loc[dataset['FamilySize'] == 1, 'IsAlone'] = 1\ntrain_df[['IsAlone', 'Survived']].groupby(['IsAlone'], as_index=False).mean()","a413522e":"train_df = train_df.drop(['Parch', 'SibSp'], axis=1)\ntest_df = test_df.drop(['Parch', 'SibSp'], axis=1)\ncombine = [train_df, test_df]\ntrain_df.head()","5504eea1":"train_df = train_df.join(pd.get_dummies(train_df['Title']))\ntrain_df = train_df.drop(columns=['Title'])\ntest_df = test_df.join(pd.get_dummies(test_df['Title']))\ntest_df = test_df.drop(columns=['Title'])\ncombine = [train_df, test_df]","dc576d5f":"train_df","4f565e37":"for dataset in combine:\n    dataset['Sex'] = dataset['Sex'].map({\n        'female': 1,\n        'male': 0,\n    }).astype(int)","c901ccd7":"freq_port = train_df['Embarked'].dropna().mode()[0]\nprint(\"\u586b\u5145\u7684\u6e2f\u53e3\u662f:{}\".format(freq_port))\nfor dataset in combine:\n    dataset['Embarked'] = dataset['Embarked'].fillna(freq_port)","787a9c71":"train_df = train_df.join(pd.get_dummies(train_df['Embarked']))\ntrain_df = train_df.drop(columns=['Embarked'])\ntest_df = test_df.join(pd.get_dummies(test_df['Embarked']))\ntest_df = test_df.drop(columns=['Embarked'])\ncombine = [train_df, test_df]","9428a42a":"train_df.head()","0d388c43":"grid = sns.FacetGrid(train_df, row='Pclass', col='Sex', height=2.2, aspect=1.6)\ngrid.map(plt.hist, 'Age', alpha=.5, bins=20)\ngrid.add_legend()","b2d47127":"guess_ages = np.zeros((2, 3))\nfor dataset in combine:\n    # \u8ba1\u7b97\u586b\u5145\u503c\n    for i in range(2):\n        for j in range(3):\n            age_guess = dataset[(dataset['Sex'] == i) & (dataset['Pclass'] == j+1)]['Age'].dropna().median()\n            guess_ages[i, j] = round(age_guess) # \u56db\u820d\u4e94\u5165\n    \n    # \u586b\u5145\n    for i in range(2):\n        for j in range(3):\n            dataset.loc[(dataset['Age'].isnull()) & (dataset['Sex'] == i) & \n                        (dataset['Pclass'] == j+1), 'Age'] = guess_ages[i, j]\n            \n    dataset['Age'] = dataset['Age'].astype(int)\n            ","713ca162":"train_df.head()","50c0075d":"test_df['Fare'].fillna(test_df['Fare'].dropna().median(), inplace=True)","fc1d4561":"train_df['AgeBand'] = pd.cut(train_df['Age'], 5)\ntrain_df[['AgeBand', 'Survived']].groupby(['AgeBand'], as_index=False).mean().sort_values(by='AgeBand', ascending=True)","0bbe6e28":"for dataset in combine:\n    dataset.loc[dataset['Age'] <= 16, 'Age'] = 0\n    dataset.loc[(dataset['Age'] <= 32) & (dataset['Age'] > 16), 'Age'] = 1\n    dataset.loc[(dataset['Age'] <= 48) & (dataset['Age'] > 32), 'Age'] = 2\n    dataset.loc[(dataset['Age'] <= 64) & (dataset['Age'] > 48), 'Age'] = 3\n    dataset.loc[dataset['Age'] > 64, 'Age'] = 4\ntrain_df = train_df.drop(['AgeBand'], axis=1)\ncombine = [train_df, test_df]\ntrain_df.head()","40504395":"train_df['FareBand'] = pd.qcut(train_df['Fare'], 4)\ntrain_df[['FareBand', 'Survived']].groupby(['FareBand'], as_index=False).mean().sort_values(by='FareBand', ascending=True)","66923172":"for dataset in combine:\n    dataset.loc[ dataset['Fare'] <= 7.91, 'Fare'] = 0\n    dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare'] = 1\n    dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']   = 2\n    dataset.loc[ dataset['Fare'] > 31, 'Fare'] = 3\n    dataset['Fare'] = dataset['Fare'].astype(int)\n\ntrain_df = train_df.drop(['FareBand'], axis=1)\ncombine = [train_df, test_df]","5bb9135f":"train_df.head()","7de551ae":"X_train = train_df.drop('Survived', axis=1)\nY_train = train_df['Survived']\nX_test = test_df.drop('PassengerId', axis=1).copy()\nX_train.shape, Y_train.shape, X_test.shape","feb16255":"LR = LogisticRegression()\nLR.fit(X_train, Y_train)\nY_pred_LR = LR.predict(X_test)\nacc_LR = round(LR.score(X_train, Y_train) * 100, 2)\nprint(\"LR\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_LR))\n\nacc_LR_cv = round(cross_val_score(LR, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"LR\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_LR_cv))","e733fdab":"coeff_df = pd.DataFrame(train_df.columns.delete(0))\ncoeff_df.columns = ['Feature']\ncoeff_df['Correlation'] = pd.Series(LR.coef_[0])\ncoeff_df.sort_values(by='Correlation', ascending=False)","854e4fa6":"svc = SVC()\nsvc.fit(X_train, Y_train)\nY_pred_svc = svc.predict(X_test)\nacc_svc = round(svc.score(X_train, Y_train) * 100, 2)\nprint(\"svc\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_svc))\n\nacc_svc_cv = round(cross_val_score(svc, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"svc\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_svc_cv))","751eddf3":"knn = KNeighborsClassifier(n_neighbors = 9)\nknn.fit(X_train, Y_train)\nY_pred_knn = knn.predict(X_test)\nacc_knn = round(knn.score(X_train, Y_train) * 100, 2)\nprint(\"KNN\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_knn))\n\nacc_knn_cv = round(cross_val_score(knn, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"KNN\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_knn_cv))","55fd32fb":"gaussian = GaussianNB()\ngaussian.fit(X_train, Y_train)\nY_pred_gaussian = gaussian.predict(X_test)\nacc_gaussian = round(gaussian.score(X_train, Y_train) * 100, 2)\nprint(\"Gaussian NB\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_gaussian))\n\nacc_gaussian_cv = round(cross_val_score(gaussian, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"Gaussian NB\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_gaussian_cv))","4d83506b":"perceptron = Perceptron()\nperceptron.fit(X_train, Y_train)\nY_pred_perceptron = perceptron.predict(X_test)\nacc_perceptron = round(perceptron.score(X_train, Y_train) * 100, 2)\nprint(\"Perceptron\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_perceptron))\n\nacc_perceptron_cv = round(cross_val_score(perceptron, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"Perceptron\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_perceptron_cv))","bce989ca":"linear_svc = LinearSVC(max_iter = 10000)\nlinear_svc.fit(X_train, Y_train)\nY_pred_linear_svc = linear_svc.predict(X_test)\nacc_linear_svc = round(linear_svc.score(X_train, Y_train) * 100, 2)\nprint(\"linear_svc\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_linear_svc))\n\nacc_linear_svc_cv = round(cross_val_score(linear_svc, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"linear_svc\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_linear_svc_cv))","509cf6c2":"sgd = SGDClassifier()\nsgd.fit(X_train, Y_train)\nY_pred_SGD = sgd.predict(X_test)\nacc_sgd = round(sgd.score(X_train, Y_train) * 100, 2)\nprint(\"SGD\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_sgd))\n\nacc_sgd_cv = round(cross_val_score(sgd, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"SGD\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_sgd_cv))","d4a082b8":"decision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X_train, Y_train)\nY_pred_decision_tree = decision_tree.predict(X_test)\nacc_decision_tree = round(decision_tree.score(X_train, Y_train) * 100, 2)\nprint(\"Decision Tree\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_decision_tree))\n\nacc_decision_tree_cv = round(cross_val_score(decision_tree, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"Decision Tree\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_decision_tree_cv))","5c99e028":"random_forest = RandomForestClassifier()\nrandom_forest.fit(X_train, Y_train)\nY_pred_random_forest = random_forest.predict(X_test)\nrandom_forest.score(X_train, Y_train)\nacc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\nprint(\"RF\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_random_forest))\n\nacc_random_forest_cv = round(cross_val_score(random_forest, X_train, Y_train, cv=10, scoring='accuracy').mean() * 100, 2)\nprint(\"RF\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684cv\u51c6\u786e\u7387\u662f\uff1a{}%\".format(acc_random_forest_cv))","41a67c1c":"models = pd.DataFrame({\n    'Model': ['Support Vector Machines', 'KNN', 'Logistic Regression', \n              'Random Forest', 'Naive Bayes', 'Perceptron', \n              'Stochastic Gradient Decent', 'Linear SVC', \n              'Decision Tree'],\n    'Score': [acc_svc, acc_knn, acc_LR, \n              acc_random_forest, acc_gaussian, acc_perceptron, \n              acc_sgd, acc_linear_svc, acc_decision_tree],\n    'CV-Score': [acc_svc_cv, acc_knn_cv, acc_LR_cv, \n              acc_random_forest_cv, acc_gaussian_cv, acc_perceptron_cv, \n              acc_sgd_cv, acc_linear_svc_cv, acc_decision_tree_cv]\n})\nmodels.sort_values(by='Score', ascending=False)","896c6eed":"from sklearn.model_selection import GridSearchCV, StratifiedKFold\nRFC = RandomForestClassifier(n_jobs=-1)\n\n## Search grid for optimal parameters\nrf_param_grid = {\n    'max_depth' : [4, 5, 6],\n    \"min_samples_split\": [2, 3, 5],\n    \"min_samples_leaf\": [2, 3, 5],\n    \"n_estimators\" :[50, 70, 90],\n    \"criterion\": [\"gini\"]\n}\n\n# Cross validate model with Kfold stratified cross val\nkfold = StratifiedKFold(n_splits=10)\n\ngsRFC = GridSearchCV(RFC, param_grid=rf_param_grid, cv=kfold, scoring=\"accuracy\", verbose=1)\n\ngsRFC.fit(X_train, Y_train)\n\nRFC_best = gsRFC.best_estimator_\n\n# Best score\nprint(\"10\u6298CV\u51c6\u786e\u7387\uff1a{}\".format(round(gsRFC.best_score_, 2)))\nprint(\"\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\uff1a{}\".format(round(RFC_best.score(X_train, Y_train), 2)))","49813bad":"feature_importance = pd.DataFrame({\n    'feature': X_train.columns,\n    'feature importances': RFC_best.feature_importances_\n})\nfeature_importance.sort_values(by='feature importances', ascending=False)","d56beb77":"Y_pred_RFbest = RFC_best.predict(X_test)","0ba9c72b":"submission = pd.DataFrame({\n        \"PassengerId\": test_df[\"PassengerId\"],\n        \"Survived\": Y_pred_RFbest\n    })\n\nsubmission.to_csv('submission.csv', index=False)\n\nsubmission_LR = pd.DataFrame({\n        \"PassengerId\": test_df[\"PassengerId\"],\n        \"Survived\": Y_pred_LR\n    })\nsubmission_LR.to_csv('submission_LR.csv', index=False)\n\nsubmission_random_forest = pd.DataFrame({\n        \"PassengerId\": test_df[\"PassengerId\"],\n        \"Survived\": Y_pred_random_forest\n    })\nsubmission_random_forest.to_csv('submission_random_forest.csv', index=False)","316b0d19":"\u6839\u636e\u524d\u9762\u7684\u89c2\u5bdf\u548c\u731c\u60f3\uff0c\u6211\u4eec\u8ba4\u4e3a\u5bf9\u5e74\u9f84\u8fdb\u884c\u5206\u7bb1\u6709\u52a9\u4e8e\u63d0\u9ad8\u6a21\u578b\u7684\u51c6\u786e\u7387\n\n\u5c06`Age`\u5b57\u6bb5\u6309\u7b49\u95f4\u8ddd\u5206\u7bb1\uff0c\u5206\u62105\u4efd\uff0c\u5206\u522b\u7edf\u8ba1\u751f\u8fd8\u7387","5989bbdd":"**\u5173\u4e8e\u7968\u4ef7\u7684\u7ed3\u8bba**\n\n- \u6a21\u578b\u9700\u8981\u8003\u8651`Fare`\u7279\u5f81\n- \u9700\u8981\u5c06\u7968\u4ef7\u8fdb\u884c\u5206\u7bb1","bb6b641d":"**\u5173\u4e8e\u5206\u7c7b\u578b\u7279\u5f81\u7684\u4e00\u4e9b\u7ed3\u8bba**\n\n- Names\u6ca1\u6709\u91cd\u590d\u503c\uff0c\u6ca1\u6709\u4eba\u91cd\u540d\n- 577\/891(65%)\u662f\u7537\u6027\n- Cabin\u6709\u4e0d\u5c11\u91cd\u590d\u503c\uff0c\u6709\u4e0d\u5c11\u4e58\u5ba2\u5171\u4eab\u8231\u4f4d\n- Embarked\u53ea\u67093\u4e2a\u503c\uff0cS\u6e2f\u53e3\u6700\u591a\u4eba\u767b\u8239\n- Ticket\u6709\u4e0d\u5c11\u91cd\u590d\u503c\uff0c\u6709\u4e0d\u5c11\u4e58\u5ba2\u5171\u4eab\u8239\u7968\uff1f","79206e3f":"\u9884\u5904\u7406\u4e4b\u540e\u7684\u6570\u636e\u96c6","dc949e12":"## 3.2 \u521d\u6b65\u60f3\u6cd5\u4e0e\u4e00\u4e9b\u5047\u8bbe\n\n\u5bf9\u6570\u636e\u96c6\u7684\u60c5\u51b5\u6709\u4e86\u57fa\u672c\u4e86\u89e3\u4e4b\u540e\uff0c\u6839\u636e\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u5728\u8fd9\u4e00\u9636\u6bb5\u63d0\u51fa\u4e00\u4e9b\u521d\u6b65\u60f3\u6cd5\u3001\u4e00\u4e9b\u5148\u9a8c\u7684\u5047\u8bbe\uff0c\u4ee5\u53ca\u7ed9\u51fa\u5904\u7406\u65b9\u6848\n\n\u6309\u7167\u5904\u7406\u65b9\u6848\u4e00\u4e00\u5217\u4e3e\u5982\u4e0b\uff1a","43449a73":"\u7528groupby\u770b\u770b\u65b0\u6784\u9020\u7684\u7279\u5f81\u662f\u5426\u548c\u751f\u5b58\u6709\u5173","afd301f3":"\u5bfc\u5165\u6570\u636e\u96c6\u540e\u9996\u8981\u4efb\u52a1\u7684\u662f\u4e86\u89e3\u6570\u636e\u96c6\uff0c\u9010\u4e00\u56de\u7b54\u5982\u4e0b\u95ee\u9898\uff1a\n\n1. \u6570\u636e\u96c6\u5305\u542b\u54ea\u4e9b\u7279\u5f81\n2. \u54ea\u4e9b\u7279\u5f81\u662f\u5206\u7c7b\u578b(Categorical)\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u6570\u503c\u578b(numeric)\u7279\u5f81\n3. \u5206\u7c7b\u578b\u7279\u5f81\u91cc\u54ea\u4e9b\u5c5e\u4e8e\u6807\u79f0\u578b(\u679a\u4e3e\u578b)\uff0c\u54ea\u4e9b\u662f\u5e8f\u6570\u578b\n4. \u6570\u503c\u578b\u7279\u5f81\u91cc\u54ea\u4e9b\u5c5e\u4e8e\u533a\u95f4\u6807\u5ea6\uff0c\u54ea\u4e9b\u5c5e\u4e8e\u6bd4\u7387\u6807\u5ea6\n5. \u6570\u503c\u578b\u7279\u5f81\u91cc\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u54ea\u4e9b\u662f\u79bb\u6563\u7684\n6. \u54ea\u4e9b\u7279\u5f81\u7684\u53d6\u503c\u4e0d\u89c4\u8303\n7. \u54ea\u4e9b\u7279\u5f81\u6709\u7f3a\u5931\u503c\n8. \u54ea\u4e9b\u7279\u5f81\u6709\u79bb\u7fa4\u503c(\u5f02\u5e38\u503c\u3001\u566a\u58f0)\n9. \u5b58\u50a8\u8fd9\u4e9b\u7279\u5f81\u7684\u6570\u636e\u7c7b\u578b\u662f\u5426\u5408\u9002\n10. \u6570\u636e\u96c6\u4e2d\u662f\u5426\u6709\u91cd\u590d\u7684\u6837\u672c\n11. \u6570\u636e\u96c6\u4e2d\u5404\u4e2a\u7279\u5f81\u7684\u5206\u5e03\u5982\u4f55\uff0c\u662f\u5426\u7c7b\u522b\u4e0d\u5e73\u8861","bc59a4a6":"\u901a\u5e38\u4f7f\u7528\u76f8\u5173\u7cfb\u6570\u548c\u70ed\u529b\u56fe\u6765\u63a2\u7d22\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u5220\u9664\u76f8\u5173\u7a0b\u5ea6\u9ad8\u7684\u7279\u5f81\u4e5f\u8bb8\u80fd\u63d0\u9ad8\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\n\n\u7ec3\u4e602\uff1a\u4f7f\u7528\u76f8\u5173\u7cfb\u6570\u3001\u70ed\u529b\u56fe\u63a2\u7d22\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u5173\u6027\n\n\u7ec3\u4e602 plus*\uff1a\u6839\u636e\u76f8\u5173\u5206\u6790\u7684\u7ed3\u679c\u8fdb\u884c\u7279\u5f81\u7b5b\u9009\uff0c\u770b\u770b\u662f\u5426\u80fd\u63d0\u9ad8\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\n\n\u53c2\u8003\uff1ahttps:\/\/www.kaggle.com\/gunesevitan\/titanic-advanced-feature-engineering-tutorial#1.-Exploratory-Data-Analysis","5781d374":"## 3.3 \u5206\u6790\u7279\u5f81\u4e0e\u6807\u7b7e\u7684\u5173\u7cfb","de9eadd4":"**\u586b\u5145**\n\n\u5e74\u9f84\u663e\u7136\u662f\u4e0e\u751f\u8fd8\u6709\u5f88\u5927\u5173\u7cfb\u7684\uff08\u5c0a\u8001\u7231\u5e7c\uff09\n\n\u6211\u4eec\u5047\u8bbe`Age`\u548c`Embarked`\u90fd\u4e0e\u751f\u8fd8\u6709\u7d27\u5bc6\u8054\u7cfb\uff0c\u63a5\u4e0b\u6765\u5bf9\u8fd9\u4e24\u4e2a\u7279\u5f81\u8fdb\u884c\u586b\u5145\n\n**\u7ea0\u6b63**\n\n1. `Ticket`\u670922%\u91cd\u590d\u503c\uff0c\u6211\u4eec\u5047\u8bbe\u8239\u7968\u53f7\u4e0e\u751f\u8fd8\u6ca1\u6709\u8054\u7cfb\u3002\u5220\u9664\u8fd9\u4e2a\u7279\u5f81\u3002\n2. `Cabin`\u5728\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u91cc\u90fd\u6709\u592a\u591a\u7f3a\u5931\u503c\u3002\u5220\u9664\u8fd9\u4e2a\u7279\u5f81\u3002\n3. `PassenerId`\u662f\u4e58\u5ba2ID\u53f7\uff0c\u6bcf\u4e2a\u6837\u672c\u90fd\u4e0d\u4e00\u6837\uff0c\u5bf9\u4e8e\u9884\u6d4b\u751f\u8fd8\u6ca1\u6709\u5e2e\u52a9\u3002\u5220\u9664\u8fd9\u4e2a\u7279\u5f81\u3002\n4. `Name`\u662f\u4e58\u5ba2\u540d\u79f0\uff0c\u540d\u5b57\u672c\u8eab\u4e0e\u751f\u8fd8\u6ca1\u6709\u8054\u7cfb\uff0c\u4f46\u91cc\u9762\u5305\u542b\u4e86\u79f0\u8c13\u4fe1\u606f\uff0c\u79f0\u8c13\u4fe1\u606f\u6709\u53ef\u80fd\u5bf9\u6211\u4eec\u7684\u9884\u6d4b\u6709\u5e2e\u52a9\u3002\u63d0\u53d6\u79f0\u8c13\u4fe1\u606f\u6784\u9020\u65b0\u7279\u5f81\u5e76\u5220\u9664\u8fd9\u4e2a\u7279\u5f81\u3002\n\n**\u6784\u9020**\n1. \u6784\u9020\u7279\u5f81`Family`\u8868\u793a\u4e58\u5ba2\u7684\u5bb6\u5ead\u6210\u5458\u6570\u91cf\u3002\u6839\u636e`Parch`\u548c`SibSp`\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u4e58\u5ba2\u5bb6\u5ead\u6210\u5458\u7684\u6570\u91cf\u3002\u76f4\u89c9\u4e0a\u6765\u770b\uff0c\u6709\u5bb6\u5ba4\u7684\u4e58\u5ba2\u548c\u5355\u8eab\u7684\u4e58\u5ba2\u8fd9\u4e24\u4e2a\u7fa4\u4f53\uff0c\u5728\u9047\u5230\u7a81\u53d1\u4e8b\u4ef6\u65f6\u8868\u73b0\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u4f1a\u5f71\u54cd\u662f\u5426\u751f\u8fd8\u3002\u8fd9\u4e2a\u7279\u5f81\u7684\u6784\u9020\u662f\u975e\u5e38\u5408\u7406\u7684\u3002\n2. \u5c06\u5e74\u9f84`Age`\u8fdb\u884c\u5206\u7bb1\u3002\u76f4\u89c9\u4e0a\u6765\u770b\uff0c\u4e24\u4e2a\u5e74\u9f84\u76f8\u5dee\u4e0d\u5927\u7684\u4e58\u5ba2\uff0c\u53ef\u80fd\u5728\u751f\u8fd8\u7684\u8868\u73b0\u4e0a\u6ca1\u6709\u592a\u5927\u7684\u5dee\u5f02\uff1b\u4f46\u662f\u5e74\u9f84\u76f8\u5dee\u8f83\u5927\u7684\u4e58\u5ba2\uff0c\u4f8b\u5982\u4e2d\u5e74\u4eba\u548c\u9752\u5c11\u5e74\uff0c\u5728\u751f\u8fd8\u7684\u8868\u73b0\u4e0a\u80af\u5b9a\u662f\u6709\u5dee\u5f02\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\u5206\u7bb1\u8fd9\u4e00\u6280\u5de7\uff0c\u53ef\u4ee5\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u51c6\u786e\u5ea6\u3002\u800c\u4e14\u5982\u679c\u6709\u5e74\u9f84\u865a\u62a5\u7684\u60c5\u51b5\uff0c\u5206\u7bb1\u53ef\u4ee5\u7ea0\u6b63\u8fd9\u79cd\u5f02\u5e38\uff08\u865a\u62a5\u5e74\u9f84\u4e0d\u4f1a\u548c\u771f\u5b9e\u5e74\u9f84\u76f8\u5dee\u592a\u8fdc\uff09\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u9c81\u68d2\u6027\u3002\n3. \u5c06\u8239\u7968\u7684\u4ef7\u683c`Fare`\u8fdb\u884c\u5206\u7bb1\u3002\u548c`Age`\u540c\u7406\uff0c\u800c\u4e14`Fare`\u540e1%\u7684\u503c\u975e\u5e38\u5927\uff0c\u5206\u7bb1\u53ef\u4ee5\u63d0\u9ad8\u9c81\u68d2\u6027\u3002\n4. `Name`\u5b57\u6bb5\u4e2d\u6709\u4e9b\u5305\u542b\u4e86\u79f0\u8c13\uff0c\u53ef\u4ee5\u6784\u9020`Title`\u7279\u5f81\u8868\u793a\u6837\u672c\u7684\u79f0\u8c13\u3002\n\n**\u5206\u7ec4\uff08\u7279\u5f81\u5316\uff09**\n\n\u6839\u636e\u95ee\u9898\u80cc\u666f\u91cc\u7684\u63cf\u8ff0\uff0c\u5973\u6027\u7fa4\u4f53(Sex=female)\u3001\u5e74\u8f7b\u7fa4\u4f53(Age<=?)\u3001\u9ad8\u6536\u5165\u7fa4\u4f53(Pclass=1)\u66f4\u53ef\u80fd\u751f\u8fd8","c94c3af3":"**\u5173\u4e8e\u6570\u503c\u578b\u7279\u5f81\u7684\u4e00\u4e9b\u7ed3\u8bba**\n\n- \u6570\u636e\u96c6\u4e2d\u5305\u542b891\u4e2a\u6837\u672c\uff0c\u95ee\u9898\u80cc\u666f\u91cc\u8bf4Titanic\u67092224\u4e2a\u4eba\uff0c\u6570\u636e\u96c6\u53ea\u5305\u542b\u4e86\u771f\u5b9e\u6570\u636e\u7ea640%\u4e2a\u4f53\n- \u6570\u636e\u96c6\u91cc\u7684\u6837\u672c\u7684\u751f\u8fd8\u7387\u662f38%\uff0c\u95ee\u9898\u80cc\u666f\u91cc\u8bf4\u771f\u5b9e\u7684\u751f\u8fd8\u7387\u4e3a32%\n- \u8d85\u8fc775%\u7684\u6837\u672c\u6ca1\u6709\u7236\u6bcd\u6216\u5b69\u5b50\u540c\u884c\n- \u63a5\u8fd130%\u7684\u6837\u672c\u6709\u5144\u5f1f\u59d0\u59b9\u6216\u914d\u5076\u540c\u884c\n- \u7968\u4ef7\u5206\u5e03\u4e0d\u5747\uff0c<1%\u6837\u672c\u7684\u7968\u4ef7\u9ad8\u8fbe512\u7f8e\u5143\n- \u8001\u5e74\u4eba(65-80\u5c81)\u7684\u6bd4\u4f8b\u5c0f\u4e8e1%","d9f93d6c":"**Sex**","46b5e776":"**Age**","0e96df09":"## 5.5 Perceptron","e6feaa88":"**Embarked**","57daf05f":"\u8bb8\u591a\u79f0\u8c13\u548c\u6027\u522b\u662f\u76f4\u63a5\u76f8\u5173\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`Title`\u548c`Sex`\u7684\u4ea4\u53c9\u8868\u6765\u89c2\u5bdf","6d65c08e":"**Pclass**","deef9f6d":"# 3. \u63a2\u7d22\u6027\u6570\u636e\u5206\u6790\uff08EDA\uff09","1ed55af4":"**\u586b\u5145\u6570\u503c\u578b\u7279\u5f81\u2014\u2014`Age`\u5b57\u6bb5**","613c2205":"### \u6784\u9020`FamilySize`\u548c`IsAlone`\u7279\u5f81\n\n\u5c06`Parch`\u548c`SibSp`\u7ed3\u5408\uff0c\u6784\u9020`FamilySize`\u7279\u5f81\n\n\u6309`FamilySize`\u533a\u5206\u662f\u5426\u5355\u8eab","fe56f68e":"**Parch**","4e51943c":"\u6211\u4eec\u6ca1\u6709\u5206\u6790`Cabin`\u548c\u751f\u8fd8\u7387\u7684\u76f8\u5173\u6027\uff0c\u5b9e\u9645\u4e0a`Cabin`\u5b57\u6bb5\u91cc\u5305\u542b\u4e86\u8231\u4f4d\u7c7b\u578b\u4fe1\u606f\n\n\u7ec3\u4e603\uff1a\u5206\u6790`Cabin`\u548c`Survived`\u7684\u5173\u7cfb\uff0c\u63d0\u53d6\u8231\u4f4d\u7c7b\u578b\u4fe1\u606f\uff0c\u6784\u9020\u65b0\u7279\u5f81\n\n\u53c2\u8003\uff1ahttps:\/\/zhuanlan.zhihu.com\/p\/50194676","bda4eca2":"**\u54ea\u4e9b\u7279\u5f81\u662f\u6df7\u5408\u7c7b\u578b\u7684**\n\n- Ticket\u65e2\u6709\u7eaf\u6570\u503c\u53c8\u6709\u5b57\u7b26\u52a0\u6570\u503c\n\n\u4f8b\u5982\uff1aA\/5 21171\n\n- Cabin\u5b57\u7b26\u52a0\u6570\u503c\n\n\u4f8b\u5982\uff1aC123\n\n\u8fd9\u4e9b\u7279\u5f81\u53ef\u80fd\u540e\u7eed\u9700\u8981\u8fdb\u884c\u7ea0\u6b63","568cbdc6":"\u56e0\u4e3aLR\u7684\u53ef\u89e3\u91ca\u6027\u5f88\u5f3a\uff0c\u6bcf\u4e2a\u7279\u5f81\u7684\u6743\u91cd\u4ee3\u8868\u4e86\u5bf9\u9884\u6d4b\u76ee\u6807\u7684\u8d21\u732e\u60c5\u51b5\n\n\u901a\u5e38\u5efa\u8bae\u5728\u6784\u5efabaseline\u7684\u65f6\u5019\u4f7f\u7528Logistic Regression\uff0c\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u5404\u4e2a\u7279\u5f81\u7684\u6743\u91cd\u6765\u5224\u65ad\u7279\u5f81\u7684\u91cd\u8981\u6027\n\n\u540c\u65f6\u4e5f\u53ef\u4ee5\u9a8c\u8bc1\u6211\u4eec\u5148\u524d\u7684\u60f3\u6cd5\u548c\u731c\u60f3\uff0c\u8fd8\u53ef\u4ee5\u8bc4\u4f30\u6211\u4eec\u6784\u5efa\u7684\u65b0\u7279\u5f81\u662f\u5426\u771f\u7684\u5bf9\u9884\u6d4b\u76ee\u6807\u6709\u5e2e\u52a9","c4448432":"\u5c06`Embarked`\u7279\u5f81\u8f6c\u6362\u4e3a\u6570\u503c\u7c7b\u578b\uff0c\u7531\u4e8e\u8fd9\u4e2a\u5b57\u6bb5\u6709\u7f3a\u5931\u503c\uff0c\u9700\u8981\u5148\u586b\u5145\u7f3a\u5931\u503c\u518d\u8f6c\u6362\u6570\u636e\u7c7b\u578b","2523fed6":"\u53d1\u73b0\u5973\u6027\u7fa4\u4f53\u751f\u8fd8\u7387\u9ad8\u8fbe74%\uff0c\u7537\u6027\u7fa4\u4f53\u751f\u8fd8\u7387\u53ea\u6709\u4e0d\u523019%\uff0c\u9a8c\u8bc1\u4e86\u5148\u524d\u7684\u5047\u8bbe","f297344d":"## 5.1 Logistic Regression","68d9ef4a":"\u5355\u8eab\u7684\u4e58\u5ba2\u751f\u8fd8\u7387\u6bd4\u8f83\u4f4e\uff0c\u975e\u5355\u8eab\u7684\u4e58\u5ba2\u751f\u8fd8\u7387\u8fbe\u523050%","00281c3c":"**\u7ed3\u8bba**\n\n\u5148\u524d\u8ba4\u4e3a\u7684\u5973\u6027\u666e\u904d\u6bd4\u7537\u6027\u751f\u8fd8\u7387\u9ad8\u4e0d\u5b8c\u5168\u6b63\u786e\uff0c\u9ad8\u6536\u5165\u7fa4\u4f53\u666e\u904d\u6bd4\u4f4e\u6536\u5165\u7fa4\u4f53\u751f\u8fd8\u7387\u9ad8\u4e5f\u4e0d\u5b8c\u5168\u6b63\u786e\n\n\u751f\u8fd8\u7387\u8fd8\u8981\u53d7\u5230\u767b\u8239\u6e2f\u53e3\u7684\u5f71\u54cd\uff0c\u4e0d\u540c\u7684\u767b\u8239\u6e2f\u53e3\u5bf9\u8fd9\u4e24\u4e2a\u8d8b\u52bf\u5f71\u54cd\u5f88\u5927\n\n- \u9700\u8981\u586b\u5145`Embarked`\u7279\u5f81\u7684\u7f3a\u5931\u503c\uff0c\u5e76\u4e14\u6a21\u578b\u4e5f\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u7279\u5f81","53070c39":"\u67e5\u9605\u8d44\u6599\u540e\u53d1\u73b0\u4e0d\u5c11\u95ee\u9898\uff1a\n\n- Ms\u3001Miss\u548cMlle\u662f\u4e00\u4e2a\u610f\u601d\n- Mme\u548cMrs\u662f\u4e00\u4e2a\u610f\u601d\n- \u6709\u8bb8\u591a\u79f0\u8c13\u53ea\u6709\u5c11\u6570\u51e0\u4e2a\u6837\u672c(Capt, Col, Coutess, Don, Jonkheer, Dr, Lady, Major, Mlle, Mme, Ms, Rev, Sir)\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u628a\u4e00\u6837\u610f\u601d\u7684\u79f0\u8c13\u7528\u540c\u4e00\u4e2a\u79f0\u8c13\u4ee3\u66ff\uff0c\u53ea\u6709\u5c11\u91cf\u6837\u672c\u7684\u79f0\u8c13\u7edf\u4e00\u79f0\u4e3a`Rare`","acfb9732":"### 3.3.2 \u901a\u8fc7\u6761\u5f62\u56fe\u63a2\u7d22\u6570\u503c\u578b\u7279\u5f81\n\n\u5148\u524d\u5bf9\u6570\u503c\u578b\u7279\u5f81\u7684\u731c\u60f3\u6709\uff1a\n\n- `Age`\uff1a \u5e74\u9f84\u4e0e\u751f\u8fd8\u6709\u5bc6\u5207\u8054\u7cfb\n\n\u9996\u5148\u5bf9\u5e74\u9f84`Age`\u548c\u751f\u8fd8`Survived`\u7684\u5173\u7cfb\u8fdb\u884c\u63a2\u7d22","7d1acb83":"# 2. \u83b7\u53d6\u6570\u636e","d32d6862":"\u5bf9\u6bd4\u5404\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u548c\u4ea4\u53c9\u9a8c\u8bc1\u7684\u51c6\u786e\u7387\u53ef\u4ee5\u53d1\u73b0\uff0c\u968f\u673a\u68ee\u6797\u548c\u51b3\u7b56\u6811\u7684\u62df\u5408\u80fd\u529b\u5f3a\u4e8e\u5176\u4ed6\u5206\u7c7b\u7b97\u6cd5\uff0c\u4f46\u4ea4\u53c9\u9a8c\u8bc1\u7684\u5e73\u5747\u51c6\u786e\u7387\u53cd\u800c\u964d\u4f4e\u4e86\n\n\u8fd9\u8bf4\u660e\u968f\u673a\u68ee\u6797\u7684\u62df\u5408\u80fd\u529b\u592a\u5f3a\uff0c\u5f88\u6709\u53ef\u80fd\u4ea7\u751f\u4e86\u8fc7\u62df\u5408","8b0420bd":"## 5.7 Stochastic Gradient Descent","46eb8306":"**\u89c2\u5bdf**\n\n- \u7968\u4ef7\u8d8a\u9ad8\u7684\u4e58\u5ba2\u751f\u8fd8\u7387\u8d8a\u9ad8\n- Q\u6e2f\u53e3\u767b\u8239\u7684\u4e58\u5ba2\u7968\u4ef7\u666e\u904d\u8f83\u4f4e\uff0c\u800c\u4e14\u751f\u8fd8\u7387\u4f3c\u4e4e\u4e0e\u7968\u4ef7\u65e0\u5173","8c3de202":"## 5.2 Support Vector Machines","05bceef7":"| \u5b57\u6bb5\u540d | \u5b9a\u4e49                                 | \u503c                                            |\n|----------|--------------------------------------------|------------------------------------------------|\n| PassengerId|\u4e58\u5ba2ID\u53f7|\n| Survived | \u662f\u5426\u751f\u8fd8                                   | 0 = No, 1 = Yes                                |\n| Pclass   | \u8239\u7968\u7c7b\u578b                               | 1 = 1st, 2 = 2nd, 3 = 3rd                      |\n| Name | \u59d3\u540d|\n| Sex      | \u6027\u522b                                |                                                |\n| Age      | \u5e74\u9f84                       |                                                |\n| SibSp    | \u8239\u4e0a\u5144\u5f1f\u59d0\u59b9\u6216\u914d\u5076\u7684\u6570\u91cf                      |\n| Parch    | \u8239\u4e0a\u7236\u6bcd\u6216\u5b50\u5973\u7684\u6570\u91cf |                                                |\n| Ticket   | \u8239\u7968\u53f7                              |                                                |\n| Fare     | \u7968\u4ef7                             |                                                |\n| Cabin    | \u8231\u4f4d\u53f7                               |                                                |\n| Embarked | \u767b\u8239\u6e2f\u53e3                        | C = Cherbourg, Q = Queenstown, S = Southampton |","9d8fb6bb":"**\u54ea\u4e9b\u7279\u5f81\u5177\u6709\u7f3a\u5931\u503c**\n\n\u8fd9\u4e9b\u7f3a\u5931\u503c\u540e\u7eed\u9700\u8981\u5904\u7406\n\n- \u8bad\u7ec3\u96c6\uff1aCabin\u3001Age\u3001Embarked\u6709\u7f3a\u5931\u503c\n- \u6d4b\u8bd5\u96c6\uff1aCabin\u3001Age\u3001Fare\u6709\u7f3a\u5931\u503c","bdd36b69":"\u6709\u7f3a\u5931\u503c\u9700\u8981\u5904\u7406\u7684\u5b57\u6bb5\u5305\u62ec`Age`\u548c`Embarked`\uff0c\u9996\u5148\u5bf9`Age`\u5b57\u6bb5\u8fdb\u884c\u7f3a\u5931\u503c\u586b\u5145\n\n\u7b80\u5355\u7684\u586b\u5145\u65b9\u6cd5\u53ef\u4ee5\u586b\u5145\u4e2d\u4f4d\u6570\u3001\u5e73\u5747\u503c\u3001\u968f\u673a\u6570\u7b49\uff0c\u66f4\u7cbe\u786e\u7684\u65b9\u6cd5\u662f\u57fa\u4e8e\u5176\u4ed6\u76f8\u5173\u7684\u7279\u5f81\u6765\u586b\u5145\n\n\u8fd9\u91cc\u6211\u4eec\u6839\u636e`Pclass`\u548c`Gender`\u5bf9`Age`\u8fdb\u884c\u7f3a\u5931\u503c\u586b\u5145\uff08\u66f4\u9ad8\u7ea7\u7684\u6709\u57fa\u4e8e\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u7f3a\u5931\u503c\u586b\u5145\uff09\n\n`Pclass`\u6709\u4e09\u79cd\uff0c`Gender`\u6709\u4e24\u79cd\uff0c\u5b83\u4eec\u7684\u7ec4\u5408\u4e00\u5171\u6709\u516d\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u6839\u636e\u8fd9\u516d\u79cd\u7fa4\u4f53\u7684\u4e2d\u4f4d\u6570\u5bf9`Age`\u8fdb\u884c\u586b\u5145","062f8bfd":"### \u4ece`Name`\u4e2d\u63d0\u53d6\u79f0\u8c13\u4fe1\u606f`Title`\n\n\u79f0\u8c13\u901a\u5e38\u90fd\u6709\u4e00\u4e2a\u53e5\u70b9.\u548c\u59d3\u540d\u5206\u9694\u5f00\uff0c\u4f8b\u5982Mr. Mrs.\u7b49\uff0c\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7279\u70b9\u6784\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u63d0\u53d6\u6837\u672c\u7684\u79f0\u8c13\n\n\u5982\u679c\u4e0d\u61c2\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u6ca1\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528`apply()`\u65b9\u6cd5\u914d\u5408`split()`\u65b9\u6cd5\u5c06\u5b57\u6bb5\u6309\u53e5\u70b9.\u5206\u9694\u5f00\uff0c\u7136\u540e\u63d0\u53d6\u53e5\u70b9\u4e4b\u524d\u7684\u90e8\u5206","a2319236":"**\u89c2\u5bdf**\n\n1. \u5a74\u513f\u7fa4\u4f53(Age <= 4)\u751f\u8fd8\u7387\u8f83\u9ad8\n2. \u6700\u8001\u7684\u4e58\u5ba2(Age = 80)\u751f\u8fd8\u4e86\n3. \u5927\u91cf\u9752\u58ee\u5e74\u4e58\u5ba2(15 <= Age <= 25)\u6b7b\u4ea1\u4e86\n4. 15-35\u5c81\u7684\u4e58\u5ba2\u5360\u6bd4\u6700\u591a","298d751f":"**SibSp**","478c933c":"**\u5220\u9664`Name`\u7279\u5f81**","7754ef46":" \u53d1\u73b0\u7684\u786e\u79f0\u8c13\u4e0e\u751f\u8fd8\u5b58\u5728\u67d0\u79cd\u8054\u7cfb\n\n- \u5973\u6027\u79f0\u8c13\u5b58\u6d3b\u7387\u66f4\u9ad8\uff0c\u7537\u6027\u79f0\u8c13\u5b58\u6d3b\u7387\u66f4\u4f4e\n- \u5176\u4ed6\u79f0\u8c13\u7684\u5b58\u6d3b\u7387\u8f83\u4f4e\uff0c\u53ea\u670934%\n- Master\u7684\u5b58\u6d3b\u7387\u7ea657%","0c05c316":"**\u6570\u503c\u578b\u7279\u5f81\u7684\u7ecf\u9a8c\u5206\u5e03\u5982\u4f55**\n\n\u6570\u636e\u96c6\u7684\u7ecf\u9a8c\u5206\u5e03\u6709\u52a9\u4e8e\u6211\u4eec\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u521d\u6b65\u89c2\u5bdf\uff0c\u5224\u65ad\u7ecf\u9a8c\u5206\u5e03\u80fd\u5426\u4ee3\u8868\u771f\u5b9e\u5206\u5e03","175bc5f7":"### 3.3.1 \u901a\u8fc7groupby\u5206\u6790\u5206\u7c7b\u578b\u7279\u5f81\n\n\u5148\u524d\u5173\u4e8e\u5206\u7c7b\u578b\u7279\u5f81\u7684\u731c\u60f3\u6709\u5982\u4e0b\u51e0\u6761\uff1a\n\n- `Pclass`\uff1a \u8239\u7968\u7c7b\u578b\u4ee3\u8868\u4e86\u4e58\u5ba2\u7684\u6536\u5165\u6c34\u5e73\uff0c\u6211\u4eec\u8ba4\u4e3a\u9ad8\u6536\u5165\u7fa4\u4f53\u66f4\u53ef\u80fd\u751f\u8fd8\n- `Sex`\uff1a \u6211\u4eec\u8ba4\u4e3a\u5973\u6027\u7fa4\u4f53\u66f4\u53ef\u80fd\u751f\u8fd8\n- `Embarked`\uff1a \u6211\u4eec\u8ba4\u4e3a\u767b\u8239\u6e2f\u53e3\u53ef\u80fd\u4e0e\u662f\u5426\u751f\u8fd8\u6709\u5173\n- `family`\uff1a \u6309\u7167`SibSp`\u548c`Parch`\u5c06\u6570\u636e\u96c6\u5355\u72ecgroupby","04e55deb":"\u9996\u5148\u4e0d\u8fdb\u884c\u8d85\u53c2\u6570\u8c03\u8282\uff0c\u76f4\u63a5\u5bf9\u5404\u4e2a\u7b97\u6cd5\u4f7f\u7528\u9ed8\u8ba4\u7684\u53c2\u6570\u62df\u5408\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u8ba1\u7b97\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u3002\u518d\u901a\u8fc710\u6298\u4ea4\u53c9\u9a8c\u8bc1\u6765\u4f30\u8ba1\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\n\n\u5148\u76f4\u89c2\u611f\u53d7\u4e00\u4e0b\u6811\u6a21\u578b\u548c\u5176\u4ed6\u7b80\u5355\u7684\u6a21\u578b\u5bf9\u6570\u636e\u96c6\u62df\u5408\u80fd\u529b\u7684\u5dee\u5f02","2e8abc2d":"# 4. \u6570\u636e\u9884\u5904\u7406\n\n\u5728EDA\u9636\u6bb5\u6211\u4eec\u5df2\u7ecf\u5bf9\u6574\u4e2a\u6570\u636e\u96c6\u8fdb\u884c\u4e86\u7ec6\u81f4\u7684\u8003\u5bdf\uff0c\u63a2\u7d22\u4e86\u5404\u4e2a\u7279\u5f81\u4e4b\u95f4\u7684\u8054\u7cfb\u3001\u4e0e\u9884\u6d4b\u76ee\u6807\uff08\u751f\u8fd8\uff09\u7684\u5173\u7cfb\uff0c\u63d0\u51fa\u4e86\u8bb8\u591a\u521d\u6b65\u60f3\u6cd5\u548c\u731c\u60f3\uff0c\u5e76\u4e14\u5bf9\u8fd9\u4e9b\u60f3\u6cd5\u548c\u731c\u60f3\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u9a8c\u8bc1\n\n\u5728\u6570\u636e\u9884\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u4f1a\u9075\u5faa\u5148\u524d\u5df2\u7ecf\u9a8c\u8bc1\u7684\u60f3\u6cd5\u548c\u731c\u60f3\uff0c\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u5904\u7406\u3002\u5728\u8fd9\u4e00\u9636\u6bb5\u6211\u4eec\u8fd8\u4f1a\u4e0d\u65ad\u63d0\u51fa\u5176\u4ed6\u731c\u60f3\u3001\u9a8c\u8bc1\u5e76\u4e14\u5904\u7406","adc932c2":"**\u5173\u4e8e\u5e74\u9f84\u7684\u7ed3\u8bba**\n\n\u57fa\u4e8e\u4e0a\u8ff0\u8fd9\u56db\u6761\u89c2\u5bdf\uff0c\u6211\u4eec\u8bc1\u5b9e\u4e86\u5e74\u9f84\u4e0e\u751f\u8fd8\u6709\u5bc6\u5207\u8054\u7cfb\u8fd9\u4e00\u731c\u60f3\uff0c\u5148\u524d\u5173\u4e8e\u5e74\u9f84\u7684\u51e0\u4e2a\u60f3\u6cd5\u662f\u5408\u7406\u7684\n\n- \u6a21\u578b\u9700\u8981\u8003\u8651`Age`\u7279\u5f81\n- \u586b\u5145`Age`\u7279\u5f81\u7684\u7f3a\u5931\u503c\n- \u5bf9\u5e74\u9f84\u8fdb\u884c\u5206\u7bb1","0a6fdd08":"\u5728\u6b63\u5f0f\u6572\u5b9a\u9884\u5904\u7406\u65b9\u6848\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u5bf9\u4e0a\u8ff0\u7684\u731c\u60f3\u8fdb\u884c\u9a8c\u8bc1\u3002\u7ecf\u8fc7\u9a8c\u8bc1\u540e\u6211\u4eec\u624d\u6709\u5145\u5206\u7684\u7406\u7531\u5b9e\u65bd\u5bf9\u5e94\u7684\u9884\u5904\u7406\u65b9\u6848\n\n\u63a5\u4e0b\u6765\u5c06\u4f1a\u7528\u5176\u4ed6\u7684\u5206\u6790\u65b9\u6cd5\u63a2\u7d22\u6570\u636e\u96c6\uff0c\u63d0\u51fa\u66f4\u591a\u7684\u731c\u60f3\u4ee5\u53ca\u9010\u4e00\u9a8c\u8bc1\u6211\u4eec\u7684\u731c\u60f3\u3002","fa28288b":"## 4.4 \u7f3a\u5931\u503c\u5904\u7406\n\n","4f794983":"**Embarked\u3001Pclass\u548cAge**","59882278":"\u987a\u4fbf\u4e5f\u5c06`Age`\u7684\u5206\u5e03\u56fe\u753b\u51fa\u6765\u770b\u770b","7bfe75b4":"\u6839\u636e\u4e0a\u9762\u7684\u89c2\u5bdf\uff0c\u6211\u4eec\u9009\u62e9\u4fdd\u7559`IsAlone`\u548c`FamilySize`\u7279\u5f81\uff0c\u5220\u53bb\u4e24\u4e2a\u539f\u59cb\u7279\u5f81","809033bb":"## 5.8 Decision Tree","931210c0":"\u53d1\u73b0Pclass=1\u7684\u7fa4\u4f53\u7684\u786e\u62e5\u6709\u66f4\u9ad8\u7684\u751f\u8fd8\u7387\uff0c\u9a8c\u8bc1\u4e86\u6211\u4eec\u5148\u524d\u7684\u5047\u8bbe","da944176":"## 4.5 \u5176\u4ed6\u5904\u7406","66be1562":"**\u54ea\u4e9b\u7279\u5f81\u662f\u5206\u7c7b\u578b(\u5b9a\u6027)\u7684**\n\n\u4e0d\u4ec5\u5e94\u8be5\u8bc6\u522b\u51fa\u54ea\u4e9b\u662f\u5206\u7c7b\u578b\u7279\u5f81\uff0c\u6700\u597d\u80fd\u7ec6\u5206\u4e3a\u6807\u79f0\u578b\u3001\u5e8f\u6570\u578b\n\n- \u6807\u79f0\u578b\u7279\u5f81\u6709\uff1aPassengerId, Survived, Name, Sex, Ticket, Carbin, Embarked\n- \u5e8f\u6570\u578b\u7279\u5f81\u6709\uff1aPclass","f2ab9a81":"**\u54ea\u4e9b\u7279\u5f81\u7684\u503c\u4e0d\u89c4\u8303**\n\n- Name\u7279\u5f81\u53ef\u80fd\u5177\u6709\u9519\u8bef\u503c\n\n\u4f8b\u5982\uff1aFutrelle, Mrs. Jacques Heath (Lily May Peel)\uff0c\u6709\u591a\u4f59\u7684\u62ec\u53f7\uff0c\u800c\u4e14\u6709\u79f0\u8c13\u4fe1\u606fMrs\n\n\u8f93\u5165\u9519\u8bef\u3001\u5927\u5c0f\u5199\u9519\u8bef\u3001\u5706\u62ec\u53f7\u3001\u5f15\u53f7\u7b49\n\n\u540e\u7eed\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u4fee\u6b63","453cf864":"\u9664\u4e86\u5a74\u513f\u7684\u6570\u91cf\u8f83\u591a\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904","ff37955e":"\u7ec3\u4e604:\n\n\u4f7f\u7528XGBoost\u6784\u5efa\u5206\u7c7b\u5668\uff0c\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u5bf9\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff0c\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u6cd5\u8fdb\u884c\u8d85\u53c2\u6570\u8c03\u8282\uff0c\u770b\u662f\u5426\u80fd\u63d0\u9ad8\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b","337ebc96":"\u5bf9`Fare`\u7279\u5f81\u8fdb\u884c\u5206\u7bb1","4342e74a":"\u5c06\u4e0a\u8ff0\u7684\u521d\u6b65\u60f3\u6cd5\u3001\u5047\u8bbe\u548c\u8bbe\u60f3\u7684\u5904\u7406\u65b9\u6848\u6574\u7406\u5982\u4e0b\uff1a\n\n| \u5b57\u6bb5\u540d | \u5b9a\u4e49                                 | \u5904\u7406\u65b9\u6cd5                                            |\n|----------|--------------------------------------------|------------------------------------------------|\n| PassengerId|\u4e58\u5ba2ID\u53f7|\u5220\u9664\n| Survived | \u662f\u5426\u751f\u8fd8                                   |                                |\n| Pclass   | \u8239\u7968\u7c7b\u578b                               |                       |\n| Name | \u59d3\u540d | \u5220\u9664\n| Sex      | \u6027\u522b                                |                                                |\n| Age      | \u5e74\u9f84                       | \u586b\u5145\u7f3a\u5931\u503c                                   |\n| SibSp    | \u8239\u4e0a\u5144\u5f1f\u59d0\u59b9\u6216\u914d\u5076\u7684\u6570\u91cf                      | \u6784\u9020\u65b0\u7279\u5f81\n| Parch    | \u8239\u4e0a\u7236\u6bcd\u6216\u5b50\u5973\u7684\u6570\u91cf | \u6784\u9020\u65b0\u7279\u5f81                                         |\n| Ticket   | \u8239\u7968\u53f7                              |  \u5220\u9664                                   |\n| Fare     | \u7968\u4ef7                             |                                                |\n| Cabin    | \u8231\u4f4d\u53f7                               |  \u5220\u9664                                              |\n| Embarked | \u767b\u8239\u6e2f\u53e3                        | \u586b\u5145\u7f3a\u5931\u503c |","91370b88":"**\u6570\u636e\u96c6\u4e2d\u5305\u542b\u54ea\u4e9b\u7279\u5f81**","daff38a6":"**\u586b\u5145\u5206\u7c7b\u578b\u7279\u5f81\u2014\u2014`Embarked`\u5b57\u6bb5**\n\n\u56e0\u4e3a\u8fd9\u4e2a\u5b57\u6bb5\u53ea\u6709\u4e24\u4e2a\u7f3a\u5931\u503c\uff0c\u91c7\u53d6\u7b80\u5355\u7684\u586b\u5145\u65b9\u6cd5\u6216\u8005\u5e72\u8106\u5220\u9664\u7f3a\u5931\u7684\u4e24\u6761\u6570\u636e\u90fd\u53ef\u4ee5\n\n\u8fd9\u91cc\u6211\u4eec\u91c7\u53d6\u4f17\u6570\u586b\u5145\u7684\u65b9\u6cd5","8c539acb":"## 3.1 \u63cf\u8ff0\u6027\u6570\u636e\u5206\u6790","55272a67":"### 3.3.4 \u901a\u8fc7\u6298\u7ebf\u56fe\u7ed3\u5408\u591a\u4e2a\u7279\u5f81\u5206\u6790\n\n\u6211\u4eec\u5c06\u767b\u8239\u6e2f\u53e3`Embarked`\u3001\u8239\u7968\u7c7b\u578b`Pclass`\u3001\u6027\u522b`Age`\u7efc\u5408\u5728\u4e00\u8d77\u8003\u5bdf\u751f\u8fd8\u7387","ec0ef0cf":"**\u5bfc\u5305**","8e8c6697":"## 5.10 \u5bf9\u6bd4\u5404\u4e2a\u6a21\u578b\u7684\u51c6\u786e\u7387","47e9e7d1":"\u6211\u4eec\u5c06`Embarked`\u767b\u8239\u6e2f\u53e3\u3001`Sex`\u6027\u522b\u3001`Fare`\u7968\u4ef7\u7efc\u5408\u8d77\u6765\u5206\u6790\u5b83\u4eec\u4e0e\u751f\u8fd8\u7387\u7684\u8054\u7cfb","c82c84a0":"**\u54ea\u4e9b\u7279\u5f81\u5177\u6709\u5f02\u5e38\u503c(\u79bb\u7fa4\u503c)**\n\n\u7ec3\u4e601\uff1a\u91c7\u53d6\u9002\u5f53\u7684\u5f02\u5e38\u503c\u5904\u7406\u65b9\u6cd5\n\n\u53c2\u8003\uff1ahttps:\/\/www.kaggle.com\/yassineghouzam\/titanic-top-4-with-ensemble-modeling","bb54a976":"\u5c06`Sex`\u7279\u5f81\u8f6c\u6362\u4e3a\u6570\u503c\u7c7b\u578b\uff0c\u75280\u8868\u793a\u7537\u6027\uff0c1\u8868\u793a\u5973\u6027","96dad161":"**\u89c2\u5bdf**\n\n- `Pclass=3`\u7684\u4e58\u5ba2\u6b7b\u4ea1\u7387\u662f\u6700\u9ad8\u7684\uff0c`Pclass=1`\u7684\u4e58\u5ba2\u6b7b\u4ea1\u7387\u662f\u6700\u4f4e\u7684\uff0c\u800c\u4e14\u5dee\u5f02\u76f8\u5f53\u660e\u663e\uff0c\u518d\u6b21\u9a8c\u8bc1\u4e86\u5148\u524d\u5173\u4e8e`Pclass`\u4e0e\u751f\u8fd8\u7387\u6709\u5173\u7684\u731c\u60f3\n- `Pclass=2 or 3`\u7684\u5a74\u513f\u5927\u591a\u6570\u90fd\u751f\u8fd8\u4e86\uff08`Pclass=1`\u7684\u5a74\u513f\u6570\u91cf\u592a\u5c11\uff0c\u4e0d\u8003\u8651\uff09\uff0c\u5bf9\u5e74\u9f84\u8fdb\u884c\u5206\u7bb1\u7684\u786e\u6709\u52a9\u4e8e\u5206\u6790\n- `Pclass`\u4e0d\u540c\u7684\u4e58\u5ba2\u7fa4\u4f53\u5e74\u9f84\u5206\u5e03\u4e0d\u540c\uff0c\u5176\u4e2d`Pclass=3`\u7684\u4e58\u5ba2\u91cc\u9752\u58ee\u5e74\u7279\u522b\u591a","2751699f":"| \u5b57\u6bb5\u540d | \u5b9a\u4e49                                 | \u5904\u7406\u65b9\u6cd5                                            |\n|----------|--------------------------------------------|------------------------------------------------|\n| PassengerId|\u4e58\u5ba2ID\u53f7|\u5728\u8bad\u7ec3\u96c6\u4e2d\u5220\u9664\n| Survived | \u662f\u5426\u751f\u8fd8                                   |                                |\n| Pclass   | \u8239\u7968\u7c7b\u578b                               |                       |\n| Name | \u59d3\u540d | \u6784\u9020Title\u7279\u5f81\uff0c\u5220\u9664 |\n| Sex      | \u6027\u522b |                                |                                               \n| Age      | \u5e74\u9f84                       | \u586b\u5145\u7f3a\u5931\u503c,\u5206\u7bb1                                   |\n| SibSp    | \u8239\u4e0a\u5144\u5f1f\u59d0\u59b9\u6216\u914d\u5076\u7684\u6570\u91cf                      | \u6784\u9020\u65b0\u7279\u5f81FamilySize\uff0c\u5220\u9664 |\n| Parch    | \u8239\u4e0a\u7236\u6bcd\u6216\u5b50\u5973\u7684\u6570\u91cf | \u6784\u9020\u65b0\u7279\u5f81FamilySize\uff0c\u5220\u9664                                        |\n| Ticket   | \u8239\u7968\u53f7                              |  \u5220\u9664                                   |\n| Fare     | \u7968\u4ef7                             |   \u586b\u5145\u7f3a\u5931\u503c\uff0c\u5206\u7bb1                                  |\n| Cabin    | \u8231\u4f4d\u53f7                               |  \u5220\u9664                                          |\n| Embarked | \u767b\u8239\u6e2f\u53e3                        | \u586b\u5145\u7f3a\u5931\u503c\uff0c\u8f6c\u4e3aOne-Hot\u7f16\u7801 |\n| Title | \u79f0\u8c13 | \u7531Name\u6784\u9020\uff0c\u8f6c\u4e3aOne-Hot\u7f16\u7801|\n| FamilySize | \u5bb6\u5ead\u5927\u5c0f | \u7531SibSp\u548cParch\u6784\u9020 |\n| IsAlone | \u662f\u5426\u5355\u8eab | \u7531SibSp\u548cParch\u6784\u9020 |","2bd26ac5":"## 4.1 \u5220\u9664\u7279\u5f81\n\n\u6839\u636e\u5148\u524d\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u5220\u9664\u7279\u5f81`Cabin`\u3001`Ticket`\u3001`Name`\u548c`PassengerId`\n\n\u5728\u5220\u9664\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u9a8c\u8bc1\u8fd9\u51e0\u4e2a\u7279\u5f81\u548c\u4e58\u5ba2\u751f\u8fd8\u4e0e\u5426\u786e\u5b9e\u6ca1\u6709\u5173\u8054\uff0c\u7136\u540e\u518d\u5220\n\n\u8fd9\u91cc\u4e3a\u4e86\u7701\u7565\u7bc7\u5e45\uff0c\u53ea\u5728\u5220\u9664`Name`\u4e4b\u524d\u9a8c\u8bc1\u5b83\u548c\u751f\u8fd8\u786e\u5b9e\u6ca1\u6709\u5173\u8054\uff0c`Cabin`\u548c`Ticket`\u76f4\u63a5\u5220\u9664\n\n\u4e58\u5ba2ID\u53f7`PassengerId`\u9700\u8981\u5728\u8bad\u7ec3\u96c6\u4e2d\u5220\u9664\uff0c\u5728\u6d4b\u8bd5\u96c6\u4e2d\u4fdd\u7559\uff08\u4e3a\u4e86\u63d0\u4ea4\uff09\n\n**Tips**\n- \u6240\u6709\u64cd\u4f5c\u5fc5\u987b\u5bf9\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u540c\u65f6\u5904\u7406\n- \u6570\u636e\u9884\u5904\u7406\u9636\u6bb5\u5efa\u8bae\u4ece\u5220\u9664\u7279\u5f81\u5f00\u59cb\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u91cf\uff0c\u51cf\u5c11\u540e\u7eed\u5904\u7406\u7684\u8ba1\u7b97\u91cf","5a757b1a":"**Pclass\u548cAge**","3e9a2197":"C\u6e2f\u53e3\u767b\u8239\u7684\u4e58\u5ba2\u6709\u66f4\u9ad8\u7684\u751f\u8fd8\u7387\uff0c\u9a8c\u8bc1\u4e86\u5148\u524d\u7684\u5047\u8bbe","c624cdc9":"## 5.11 \u8d85\u53c2\u6570\u8c03\u8282\n\n\u5728kaggle\u7ade\u8d5b\u91cc\uff0c\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\u4f8b\u5982\u968f\u673a\u68ee\u6797\uff0cXGBoost\u7b49\u901a\u5e38\u90fd\u80fd\u53d6\u5f97\u5f88\u597d\u7684\u8868\u73b0\uff0c\u4e5f\u662f\u4f17\u591a\u9009\u624b\u4eec\u9996\u9009\u7684\u6a21\u578b\u3002\n\n\u4e3a\u4e86\u8282\u7701\u8bad\u7ec3\u6a21\u578b\u7684\u65f6\u95f4\uff0c\u4e5f\u4e3a\u4e86\u7cbe\u7b80\u6559\u5b66\uff0c\u7a81\u51fa\u6838\u5fc3\u601d\u60f3\uff0c\u6211\u4eec\u5c06\u968f\u673a\u68ee\u6797\u4f5c\u4e3a\u9884\u6d4b\u7528\u7684\u6700\u7ec8\u6a21\u578b\uff0c\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u5bf9\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff0c\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u6cd5\u8fdb\u884c\u8d85\u53c2\u6570\u8c03\u8282\u3002\n\n\u5176\u4ed6\u66f4\u9ad8\u7ea7\u800c\u590d\u6742\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u3001\u53c2\u6570\u8c03\u8282\u65b9\u6cd5\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6a21\u578b\u7684\u8868\u73b0\uff0c\u7559\u5f85\u540c\u5b66\u4eec\u81ea\u884c\u5b66\u4e60","70a9e785":"\u5355\u72ec\u770b\u8fd9\u4e24\u4e2a\u7279\u5f81\u90fd\u548c\u751f\u8fd8\u7387\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb","b4a54799":"**\u4e03\u4e2a\u5e38\u89c1\u7684\u9884\u5904\u7406**\n\n1. \u5206\u7ec4\uff1a\u5bf9\u6837\u672c\u8fdb\u884c\u5206\u7ec4(\u7279\u5f81\u5316)\uff0c\u63a2\u7d22\u7fa4\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u548c\u95ee\u9898\u76ee\u6807\u7684\u5173\u7cfb\n2. \u8054\u7cfb\uff1a\u63a2\u7d22\u54ea\u4e9b\u7279\u5f81\u5bf9\u95ee\u9898\u7684\u6c42\u89e3\u8d21\u732e\u6700\u5927\uff0c\u662f\u5426\u6709\u7edf\u8ba1\u610f\u4e49\u4e0a\u7684\u76f8\u5173\u6027\uff0c\u7279\u5f81\u4e4b\u95f4\u662f\u5426\u6709\u76f8\u5173\u6027\n3. \u8f6c\u5316\uff1a\u5c06\u7279\u5f81\u8f6c\u5316\u4e3a\u7b26\u5408\u7b97\u6cd5\u6a21\u578b\u8981\u6c42\u7684\u7c7b\u578b\n4. \u586b\u5145\uff1a\u5bf9\u7f3a\u5931\u503c\u8fdb\u884c\u586b\u5145\n5. \u4fee\u6b63\uff1a\u7ea0\u6b63\u67d0\u4e9b\u7279\u5f81\u4e0d\u6b63\u786e\u7684\u503c\uff0c\u6216\u8005\u6392\u9664\u5177\u6709\u8fd9\u4e9b\u4e0d\u6b63\u786e\u503c\u7684\u6837\u672c\uff0c\u751a\u81f3\u662f\u4e22\u5f03\u54ea\u4e9b\u5bf9\u4efb\u52a1\u6ca1\u6709\u8d21\u732e\u7684\u7279\u5f81\u3002\u5f02\u5e38\u68c0\u6d4b\u662f\u4e00\u4e2a\u65b9\u6cd5\u3002\n6. \u6784\u9020\uff1a\u6784\u9020\u65b0\u7684\u7279\u5f81\n7. \u4f5c\u56fe","d9207330":"**\u5404\u4e2a\u7279\u5f81\u7684\u6570\u636e\u7c7b\u578b\u662f\u4ec0\u4e48**\n\n\u540e\u7eed\u9700\u8981\u6839\u636e\u7279\u5f81\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u548c\u7279\u5f81\u771f\u6b63\u7684\u7c7b\u578b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\n\n- \u4e03\u4e2a\u7279\u5f81\u662f\u6574\u578b\u6216\u6d6e\u70b9\u578b\n- \u4e94\u4e2a\u7279\u5f81\u662f\u5b57\u7b26\u4e32","2d9963ce":"## 5.9 Random Forest","d4827ab6":"## 4.2 \u6784\u9020\u65b0\u7279\u5f81\n\n\u6ce8\u610f\u5230`Name`\u7279\u5f81\u4e2d\u5305\u542b\u4e86\u6837\u672c\u7684\u79f0\u8c13\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53cd\u6620\u4e86\u6837\u672c\u7684\u8eab\u4efd\u5730\u4f4d\n\n\u867d\u7136\u59d3\u540d\u672c\u8eab\u548c\u751f\u8fd8\u7387\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u4f46\u8eab\u4efd\u5730\u4f4d\u6709\u53ef\u80fd\u4e0e\u751f\u8fd8\u6709\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u5220\u9664`Name`\u7279\u5f81\u4e4b\u524d\uff0c\u53ef\u4ee5\u5148\u628a\u6837\u672c\u7684\u8eab\u4efd\u5730\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u6784\u9020\u65b0\u7279\u5f81`Title`\u7136\u540e\u518d\u5220\u53bb`Name`\u7279\u5f81","a2159732":"**\u54ea\u4e9b\u7279\u5f81\u662f\u6570\u503c\u578b(\u5b9a\u91cf)\u7684**\n\n\u6839\u636e\u53d6\u503c\u8fd8\u5e94\u8be5\u533a\u5206\u8fde\u7eed\u7684\u548c\u79bb\u6563\u7684\n\n- \u8fde\u7eed\u578b\u7279\u5f81\u6709\uff1aAge, Fare\n- \u79bb\u6563\u578b\u7279\u5f81\u6709\uff1aSibSp, Parch","1947616b":"**\u5206\u7c7b\u578b\u7279\u5f81\u5206\u5e03\u5982\u4f55**","e2fcdc79":"\u4f7f\u7528get_dummies()\u5c06`Title`\u6539\u6210one-hot\u7f16\u7801","6622e745":"## 5.6 LinearSVC","3e1c1e6a":"**\u89c2\u5bdf**\n\n- \u5bb6\u5ead\u5927\u5c0f\u592a\u5927\u7684\u4eba(FamilySize >= 5)\u751f\u8fd8\u7387\u90fd\u6bd4\u8f83\u4f4e\n- \u5bb6\u5ead\u5927\u5c0f\u9002\u4e2d\u7684\u4eba(FamilySize = 2, 3, 4)\u751f\u8fd8\u7387\u8f83\u9ad8\n- \u5355\u8eab\u7684\u4eba(FamilySize = 1)\u751f\u8fd8\u7387\u4e5f\u5f88\u4f4e","5a09a91e":"**\u5220\u9664`Cabin`\u548c`Ticket`**","bfecbe64":"**\u89c2\u5bdf**\n\n- \u5728S\u6e2f\u53e3\u548cQ\u6e2f\u53e3\u767b\u8239\u7684\u5973\u6027\u666e\u904d\u6bd4\u7537\u6027\u751f\u8fd8\u7387\u66f4\u9ad8\uff0c\u4f46\u662f\u5728C\u6e2f\u53e3\u767b\u8239\u7684\u7537\u6027\u53cd\u800c\u751f\u8fd8\u7387\u66f4\u9ad8\n- \u5728Q\u6e2f\u53e3\u767b\u8239\u7684\u4f4e\u6536\u5165\u7537\u6027\u53cd\u800c\u6bd4\u9ad8\u6536\u5165\u7537\u6027\u751f\u8fd8\u7387\u9ad8","43ea9c2f":"## 5.4 Gaussian Naive Bayes","cae4ac6f":"**\u5728\u8bad\u7ec3\u96c6\u4e2d\u5220\u9664`PassengerId`**","4f716d9a":"\u4ece\u767e\u5206\u4f4d\u6570\u6765\u770b\uff0c`Fare`\u7684\u5206\u5e03\u975e\u5e38\u4e0d\u5e73\u8861\uff0c\u518d\u628a\u5b83\u7684\u7bb1\u7ebf\u56fe\u548c\u67f1\u5f62\u56fe\u753b\u51fa\u6765\u770b\u770b","85545aec":"# 1. \u5b9a\u4e49\u95ee\u9898\n\n\u8bad\u7ec3\u96c6\u5305\u542b\u4e00\u4e9b\u4e58\u5ba2\u7684\u6837\u672c\u5e76\u7ed9\u51fa\u4e86\u662f\u5426\u751f\u8fd8\u7684\u6807\u8bb0\uff0c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u5224\u65ad\u6d4b\u8bd5\u96c6\u4e2d\u7684\u4e58\u5ba2\u662f\u5426\u751f\u8fd8\n\nOn **April 15, 1912**, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, **there weren\u2019t enough lifeboats for everyone onboard**, resulting in **the death of 1502 out of 2224 passengers and crew**.\nWhile there was some element of luck involved in surviving, it seems **some groups of people were more likely to survive than others**.\n\n\u5176\u4ed6\u80cc\u666f\u4fe1\u606f\uff1a\n- 1912\u5e744\u670815\u65e5Titanic\u649e\u51b0\u5c71\u540e\u6c89\u6ca1\uff0c1502\/2204\u4e58\u5ba2\u548c\u8239\u5458\u6b7b\u4ea1\uff0c\u5927\u7ea6\u4e3a32%\u751f\u8fd8\u7387\n- \u9020\u6210\u4e8b\u6545\u7684\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f\u6ca1\u6709\u8db3\u591f\u7684\u6551\u751f\u8247\n- \u4e00\u4e9b\u7fa4\u4f53\u6bd4\u5176\u4ed6\u4eba\u66f4\u5bb9\u6613\u751f\u8fd8\uff0c\u4f8b\u5982\u5973\u4eba\u3001\u5b69\u5b50\u3001\u4e0a\u5c42\u9636\u7ea7\u7684\u4eba","39c11791":"# \u4e03\u6b65\u6d41\u7a0b\n\n1. \u5b9a\u4e49\u95ee\u9898\n2. \u83b7\u53d6\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\n3. \u6574\u7406\u3001\u51c6\u5907\u3001\u6e05\u6d17\u6570\u636e\n4. \u5206\u6790\u3001\u53d1\u73b0\u6a21\u5f0f\u3001\u63a2\u7d22\u6570\u636e\n5. \u5efa\u6a21\u3001\u9884\u6d4b\u3001\u6c42\u89e3\u95ee\u9898\n6. \u53ef\u89c6\u5316\u3001\u62a5\u544a\u3001\u5448\u73b0\u95ee\u9898\u6c42\u89e3\u6b65\u9aa4\u548c\u6700\u7ec8\u7ed3\u8bba\n7. \u63d0\u4ea4","a9b60e2d":"# 5. \u5efa\u7acb\u6a21\u578b\uff0c\u9884\u6d4b\u6c42\u89e3\n\n\u91cd\u65b0\u660e\u786e\u4e00\u4e0b\u6570\u636e\u6316\u6398\u4efb\u52a1\uff1a\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u4e58\u5ba2\u7684\u4fe1\u606f\u9884\u6d4b\u8be5\u4e58\u5ba2\u662f\u5426\u751f\u8fd8\n\n\u8fd9\u662f\u4e00\u4e2a\u5206\u7c7b\/\u56de\u5f52\u4efb\u52a1\u3002\u53ef\u4ee5\u4f7f\u7528\u6709\u76d1\u7763\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\n\n\u9002\u7528\u4e8e\u8fd9\u4e00\u4efb\u52a1\u7684\u6a21\u578b\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\n\n- Logistic Regression\n- \u652f\u6301\u5411\u91cf\u673a\n- k-\u8fd1\u90bb\n- \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\n- \u51b3\u7b56\u6811\n- \u968f\u673a\u68ee\u6797\n- \u611f\u77e5\u673a\n- \u795e\u7ecf\u7f51\u7edc","4a980487":"## 4.3 \u8f6c\u6362\u6570\u636e\u7c7b\u578b\n\n\u4e3a\u4e86\u540e\u7eed\u8f93\u5165\u5230\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\uff0c\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5b57\u6bb5\u8f6c\u6362\u6210\u6570\u503c\u7c7b\u578b","2623715d":"## 5.3 KNN","47f60cc9":"**\u5173\u4e8e\u4e58\u5ba2\u6536\u5165\u6c34\u5e73\u7684\u7ed3\u8bba**\n\n\u4e0d\u540c\u6536\u5165\u6c34\u5e73\u7684\u4e58\u5ba2\u7fa4\u4f53\u751f\u8fd8\u7387\u5dee\u5f02\u8f83\u5927\uff0c\u7279\u522b\u662f\u4f4e\u6536\u5165\u6c34\u5e73\u7684\u4e58\u5ba2\u751f\u8fd8\u7387\u6700\u4f4e\uff0c\u6211\u4eec\u7684\u6a21\u578b\u9700\u8981\u8003\u8651`Pclass`\u7279\u5f81","03b4f26c":"\u586b\u5145\u5b8c\u4e4b\u540e\u628a`Embarked`\u8f6c\u6362one-hot\u7f16\u7801","a03f3f88":"\u901a\u8fc7groupby\u5206\u6790\u79f0\u8c13\u548c\u751f\u5b58\u7387\u4e4b\u95f4\u7684\u5173\u7cfb","7382dbc7":"**\u586b\u5145\u6d4b\u8bd5\u96c6\u4e2d\u7684`Fare`\u5b57\u6bb5**\n\n\u56e0\u4e3a\u6d4b\u8bd5\u96c6\u4e2d`Fare`\u5b57\u6bb5\u53ea\u67091\u4e2a\u7f3a\u5931\u503c\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u4e2d\u4f4d\u6570\u586b\u5145\u5373\u53ef","83bd2a1b":"\u5c06\u6570\u503c\u578b\u5c5e\u6027`Age`\u6309\u7167\u5206\u7bb1\u7684\u7ed3\u679c\u8f6c\u6362\u6210\u5e8f\u6570\u6027\u5c5e\u6027\uff0c\u5220\u9664`AgeBand`\u5b57\u6bb5","46af37a2":"# 6. \u63d0\u4ea4","4206f234":"## 3.4 \u5206\u6790\u7279\u5f81\u4e0e\u7279\u5f81\u4e4b\u95f4\u7684\u5173\u7cfb","8ae043fb":"### 3.3.3 \u4f7f\u7528\u6761\u5f62\u56fe\u7ed3\u5408\u591a\u4e2a\u7279\u5f81\u5206\u6790\n\n\u6211\u4eec\u5c06`Pclass`\u548c`Age`\u7ed3\u5408\u5728\u4e00\u8d77\u8003\u8651\u4e0e\u751f\u8fd8\u7684\u5173\u7cfb\uff0c\u540c\u65f6\u4e5f\u63a2\u7d22\u4e0d\u540c\u6536\u5165\u6c34\u5e73\u7684\u4eba\u7fa4\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5"}}