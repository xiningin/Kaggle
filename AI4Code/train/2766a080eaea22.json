{"cell_type":{"577b4e27":"code","180047d8":"code","fdcfc93d":"code","b498a0da":"code","21bbcaeb":"code","a02a5a0e":"code","4b8f9078":"code","eb801195":"code","61f42d6b":"code","00efb16a":"code","07086d67":"code","75e2ac7c":"code","fcfc53b9":"code","4da45499":"code","116071e1":"code","41789ea0":"code","92d624d1":"code","19157b2b":"code","41b2dd4b":"code","b7a54870":"code","ec590aba":"code","4417802c":"code","2ca46b01":"code","b8e65c65":"code","61e3909e":"code","1503b935":"code","12ac8e30":"code","d79ea71f":"code","63da8cc0":"code","7d627d9f":"code","4a295212":"code","c968b82a":"code","2c483774":"code","c43dbe4f":"code","8e67f494":"code","a5be45a0":"code","838ea6e2":"code","ebfa010c":"code","9d778946":"code","1b01b4aa":"code","2cedf89d":"code","905ec92d":"code","fa81d754":"code","8ea4677b":"code","11636ed7":"code","a13c29b1":"code","0fe30637":"code","dd4f65d4":"code","28583fa1":"code","69abeacf":"code","7c368747":"code","0a385bf3":"code","7b3e7e95":"code","208299c0":"code","cda9d3d6":"code","fc1bc1f2":"code","5eed63a8":"code","2b8eae53":"code","848aa9d7":"code","2c6231f8":"code","948d39c0":"code","f6c0adc2":"code","36e57fa3":"code","958073a5":"code","6443e507":"code","66d43975":"code","a751c80f":"code","e9667833":"code","8fb7c85c":"code","a48d35f6":"code","1cc87bbc":"code","b1bb6872":"code","09f076f0":"code","bbb659a7":"code","038aca1d":"code","989eadd7":"code","13a77a0b":"code","ae3eb2da":"code","3d9799ce":"code","bab42c58":"code","72c16a0b":"code","7868ed81":"code","36ed03dd":"code","5af487ea":"code","fcfe6325":"code","8a6f5adf":"code","be4598b5":"code","292929f6":"code","23138044":"code","a9ab2a89":"code","8f2d775f":"code","42974cfa":"code","5a118c6b":"code","c0e248c0":"code","58ef73aa":"code","ce904bd6":"code","9b23e91c":"code","ae090d01":"code","45b34842":"code","a8b393cd":"code","662dd9a5":"code","f37d4e7b":"code","d1097a0a":"code","15277b08":"code","a06ac09c":"code","abb281e6":"code","328f27e5":"code","24a2b020":"code","5d66b668":"code","90331f88":"code","4ef6f703":"code","87fe5ab1":"code","c579b5fd":"code","19d33038":"code","b619128d":"code","6d585a10":"code","81e0986e":"code","db5e7cb3":"code","f77fa774":"code","4baf9811":"code","79ae14f4":"code","a220d7b9":"code","e6d44a6d":"code","d206a18b":"code","9a02efd9":"code","cc17490b":"code","b45ad8b6":"code","01332d45":"code","2eb48c86":"code","7647ee1d":"code","d5eb9cf6":"code","b784a9c4":"code","767d941d":"code","6c683dac":"code","842f4b5f":"code","32595e03":"code","21eb7bbe":"code","fad28124":"code","0b9f097c":"code","0fca762e":"code","0b8c7fca":"code","909fadfc":"code","012e9d80":"code","5f3725b0":"code","90b1248e":"code","434052cf":"code","1734cdd8":"code","7b67357c":"code","9a0928e1":"code","7ed08ddc":"code","9600e1a9":"code","983e7534":"code","db773add":"code","485064d8":"code","3726e40d":"code","e72de562":"code","101ef36e":"code","e56dc1d1":"code","95a90301":"code","b191a8fd":"code","72763554":"code","ccc544b0":"code","08c39440":"code","a1b2b92a":"code","18bbc7f5":"code","42a656e5":"code","27fff7e8":"code","78fc693f":"code","864746b0":"code","1cad633e":"code","662b344e":"code","4b6e9108":"code","f268491c":"code","0006dd1e":"code","d127e525":"code","f2dc2e61":"code","b2d4c0c6":"code","6a63d2d4":"code","6ceccb0c":"code","df98d11c":"code","0e89eacd":"code","802033e9":"code","cf90b6c7":"code","6f1902cc":"code","94c6c2ae":"code","92cdd697":"markdown","b92104d1":"markdown","f54ce8b4":"markdown","d0a02e3c":"markdown","771f5046":"markdown","8649f854":"markdown","01515206":"markdown","1f6e13f8":"markdown","5b28a575":"markdown","4824839f":"markdown","57380374":"markdown","46836611":"markdown","b706719c":"markdown","f59a3fc1":"markdown","03be0eb1":"markdown","14be68be":"markdown","233f7df5":"markdown","becad7c0":"markdown","d87ea9e0":"markdown","74771b8c":"markdown","f361d278":"markdown","5cdabbf0":"markdown","18616281":"markdown","6e90c1c6":"markdown","bf74e75a":"markdown","6c8234cf":"markdown","5ef6bda2":"markdown","cc1ce3cf":"markdown","b19b0144":"markdown","69ea4372":"markdown","be8586d8":"markdown","028a5e15":"markdown","6e03b172":"markdown","1d3980a5":"markdown","5aee2d6a":"markdown","fbc4c9e5":"markdown","ae085e9a":"markdown","ad48b22f":"markdown","c5cde68e":"markdown","6a36df99":"markdown","4751c6b2":"markdown","5192d84c":"markdown","423a5a92":"markdown","11938495":"markdown","496d5452":"markdown","447a76b3":"markdown","a5f61bc9":"markdown","75cbc7df":"markdown","7795645e":"markdown","e86d8d98":"markdown","e6cb98a5":"markdown","1f08849a":"markdown","8e8ed1aa":"markdown","4b20f517":"markdown","1d0c13f8":"markdown","a5d027d2":"markdown","044ace67":"markdown","6d1af54d":"markdown","8cdedd4e":"markdown","87aadb22":"markdown","e243e9b3":"markdown","a1b0bfd6":"markdown","6a4843ea":"markdown","85b3c3a6":"markdown","80946ff3":"markdown","fc6a14c2":"markdown","dbc7d423":"markdown","ba528c82":"markdown","d5d9bca7":"markdown","76a2b36d":"markdown","466485b5":"markdown","361b915b":"markdown","9d760077":"markdown","f0453aab":"markdown","87f1dd16":"markdown","1f3f783c":"markdown","eff62438":"markdown","4689b698":"markdown","64e03761":"markdown","c6ff2c6c":"markdown","759380c5":"markdown","9b4cf4b2":"markdown","3a494e9f":"markdown","57f25256":"markdown","d8d0e277":"markdown","77b6eec5":"markdown","2a5f0304":"markdown","ac310072":"markdown","95207f1f":"markdown","f1d23279":"markdown","63b0c3be":"markdown","cd195bfe":"markdown","2b6a51ad":"markdown","1a659937":"markdown","cae8c131":"markdown","1d4abbc1":"markdown","9dbd8b1e":"markdown","7fd063ee":"markdown","84f716d7":"markdown","dbc31427":"markdown","b253fabb":"markdown","523e7dfd":"markdown"},"source":{"577b4e27":"#import all necessary packages\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('ggplot')\nimport os\n\nimport statsmodels.api as sm\nimport statsmodels.stats.api as sms\nimport statsmodels.formula.api as smf\n\nimport scipy.stats as stats\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","180047d8":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fdcfc93d":"#load dataset and view the first 5 rows\nkc_house = pd.read_csv('\/kaggle\/input\/housesalesprediction\/kc_house_data.csv')\nkc_house.head()","b498a0da":"#get all column names\nkc_house.columns","21bbcaeb":"#review number of rows and columns\nkc_house.shape","a02a5a0e":"#look at all columns together with their datatype\nkc_house.info()","4b8f9078":"#check to see if 'id' is unique identifier for each sample\nkc_house['id'].nunique()","eb801195":"#get sum of duplicates\nkc_house['id'].duplicated().sum()","61f42d6b":"#drop duplicates and only keep the most current data\nkc_house = kc_house.sort_values('id', ascending = False).drop_duplicates(subset = 'id', keep = 'first')","00efb16a":"#check again\nkc_house['id'].duplicated().sum()","07086d67":"#recheck dataframe shape\nkc_house.shape","75e2ac7c":"#drop the entire 'id' since we already dealt with its duplicates and we don't need it anymore\nkc_house.drop('id', axis = 1, inplace = True)\nkc_house.head(2)","fcfc53b9":"#check for null values\nkc_house.isnull().sum()","4da45499":"#check out 'waterfront'\nprint(kc_house['waterfront'].nunique())\n\nkc_house['waterfront'].value_counts()","116071e1":"#calculate how big a percentage of the missing values in 'waterfront' from the whole dataset is\n((kc_house['waterfront'].isnull().sum()) \/ (len(kc_house)) * 100).round(2)","41789ea0":"#assuming that missing values in 'waterfront' is the absence of waterfront, we'll replace it with value of 0 since the majority of data falls under this value\nkc_house['waterfront'] = kc_house['waterfront'].fillna(0)\n\n#check again\nkc_house['waterfront'].isnull().sum()","92d624d1":"#calculate how big a percentage of the missing values in 'view' from the whole dataset is\n((kc_house['view'].isnull().sum()) \/ (len(kc_house)) * 100).round(2)","19157b2b":"#'view' is number of times a house is viewed with the majority of the house has not been viewed \n#this is not a feature we are interested in and it provides no useful information \n#drop 'view'\nkc_house.drop('view', axis = 1, inplace = True)\nkc_house.head(2)","41b2dd4b":"#check out 'yr_renovated'\nprint(kc_house['yr_renovated'].nunique())\n\nkc_house['yr_renovated'].value_counts()","b7a54870":"#calculate how big a percentage of the missing values in 'yr_renovated' from the whole dataset is\n((kc_house['yr_renovated'].isnull().sum()) \/ (len(kc_house)) * 100).round(2)","ec590aba":"#take a look at the missing data\nkc_house[kc_house['yr_renovated'].isnull()].head(5)","4417802c":"#calculate percentage of 'yr_renovated' == 0.0\n((len(kc_house[kc_house['yr_renovated'] == 0.0]) \/ len(kc_house)) * 100)","2ca46b01":"#since the majority of 'yr_renovated' is 0.0, replace NaN with 0\nkc_house['yr_renovated'] = kc_house['yr_renovated'].fillna(0)\n\n#check again\nkc_house['yr_renovated'].isnull().sum()","b8e65c65":"#check out the 'sqft_basement' feature\nkc_house['sqft_basement'].sort_values(ascending = True)","61e3909e":"len(kc_house[kc_house['sqft_basement'] == '?'])","1503b935":"#calculate 'sqft_basement' = 'sqft_living' - 'sqft_above'\nfor i in list(kc_house[kc_house['sqft_basement'] == '?'].index.values): \n    kc_house.loc[i, 'sqft_basement'] = kc_house.loc[i, 'sqft_living'] - kc_house.loc[i, 'sqft_above']","12ac8e30":"#check again\nkc_house[kc_house['sqft_basement'] == '?']","d79ea71f":"#correct 'sqft_basement' to float\nkc_house['sqft_basement'] = kc_house['sqft_basement'].astype('float64')\n\n#check\nkc_house['sqft_basement'].dtypes","63da8cc0":"#check to see if 'date' is a datetime object\nimport datetime\n\nisinstance(kc_house['date'][0], datetime.date)","7d627d9f":"#convert 'date' to a datetime object\nkc_house['date'] = pd.to_datetime(kc_house['date'])\n\n#check again\nisinstance(kc_house['date'][0], datetime.date)","4a295212":"#get data summary statistics\nkc_house.describe()","c968b82a":"#quickly scan for linearity\nsns.pairplot(kc_house, diag_kind = 'hist', corner = True)","2c483774":"#split data into 2 groups of type continous and type categoricals and see how they behave with respect to 'price'\ncontinuous = ['price', 'sqft_living','sqft_lot', 'sqft_above', 'sqft_basement', 'sqft_living15', 'sqft_lot15']\ncategoricals = ['price', 'bedrooms', 'bathrooms', 'floors', 'waterfront', 'condition', 'grade']","c43dbe4f":"#take a closer look at continuous data\nsns.pairplot(kc_house[continuous], diag_kind = 'hist', corner = True)","8e67f494":"#take a closer look at categoricals data\nsns.pairplot(kc_house[categoricals], diag_kind = 'hist', corner = True)","a5be45a0":"#look at summary statistics & remove scientific notation\nkc_house['price'].describe().apply(lambda x: format(x, 'f'))","838ea6e2":"#get skewness\nprint('Skewness:', kc_house['price'].skew()) #data is highly skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['price'].kurtosis()) #data is leptokurtic, data has heavy outliers","ebfa010c":"#plot 'price'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['price'], kde = True)\nplt.title('Distribution of Price')\nplt.xlabel('Price in Millions')\nplt.axvline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['price'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Price QQPlot')","9d778946":"#applying log transformation\nkc_house['price_log'] = np.log(kc_house['price'])\n\n#re-plot 'price'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['price_log'], kde = True)\nplt.title('Distribution of Price Log')\nplt.xlabel('Log Price in Millions')\nplt.axvline(kc_house['price_log'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#re-check for normality\nfig = sm.graphics.qqplot(kc_house['price_log'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Log Price QQPlot')","1b01b4aa":"#get skewness\nprint('Skewness:', kc_house['price_log'].skew()) #data is fairly symmetrical\n\n#get kurtosis\nprint('Kurtosis:', kc_house['price_log'].kurtosis()) #data is platykurtic and moderately spread out ","2cedf89d":"#get price__med\nkc_house['price_med'] = kc_house['price'] > kc_house['price'].median()\nkc_house['price_med'] = np.where(kc_house['price_med'] == False, 'Below Median', 'Above Median')\n\n#get price_log_med\nkc_house['price_log_med'] = kc_house['price_log'] > kc_house['price_log'].median()\nkc_house['price_log_med'] = np.where(kc_house['price_log_med'] == False, 'Below Median', 'Above Median')","905ec92d":"#look at summary statistics & remove scientific notation\nkc_house['sqft_living'].describe().apply(lambda x: format(x, 'f'))","fa81d754":"#get skewness\nprint('Skewness:', kc_house['sqft_living'].skew()) #data is highly skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_living'].kurtosis()) #data is leptokurtic, data has heavy outliers","8ea4677b":"#plot 'sqft_living'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_living'], kde = True)\nplt.title('Distribution of Square Footage of The Home')\nplt.xlabel('Square Feet')\nplt.axvline(kc_house['sqft_living'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_living'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Square Footage of Living Space QQPlot')","11636ed7":"#applying log transformation\nkc_house['sqft_living_log'] = np.log(kc_house['sqft_living'])\n\n#re-plot 'price_log'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_living_log'], kde = True)\nplt.title('Log Distribution of Square Footage of The Home')\nplt.xlabel('Log Square Feet')\nplt.axvline(kc_house['sqft_living_log'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_living_log'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Log Square Footage of Living Space QQPlot')","a13c29b1":"#get skewness\nprint('Skewness:', kc_house['sqft_living_log'].skew()) #data is fairly symmetrical\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_living_log'].kurtosis()) #data is platykurtic and moderately spread out","0fe30637":"#plot 'price' vs. sqft_living'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_living',\n           y = 'price',\n           hue = 'price_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Square Footage of The Home vs. Price')\nplt.xlabel('Square Feet')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()\n\n#plot 'price_log' vs. sqft_living_log'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_living_log',\n           y = 'price_log',\n           hue = 'price_log_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Log Square Footage of The Home vs. Log Price')\nplt.xlabel('Log Square Feet')\nplt.ylabel('Log Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()","dd4f65d4":"#get correlation\nkc_house[['sqft_living', 'sqft_living_log', 'price']].corr()","28583fa1":"#look at summary statistics & remove scientific notation\nkc_house['sqft_lot'].describe().apply(lambda x: format(x, 'f'))","69abeacf":"#get skewness\nprint('Skewness:', kc_house['sqft_lot'].skew()) #data is extremely skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_lot'].kurtosis()) #data is leptokurtic and has heavy outliers","7c368747":"#plot 'sqft_lot'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_lot'], kde = True)\nplt.title('Distribution of Square Footage of The Lot')\nplt.xlabel('Square Feet')\nplt.axvline(kc_house['sqft_lot'].mean(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_lot'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Square Footage of Lot QQPlot')","0a385bf3":"#applying log transformation\nkc_house['sqft_lot_log'] = np.log(kc_house['sqft_lot'])\n\n#plot 'sqft_lot_log'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_lot_log'], kde = True)\nplt.title('Log Distribution of Square Footage of The Lot')\nplt.xlabel('Log Square Feet')\nplt.axvline(kc_house['sqft_lot_log'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_lot_log'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Log Square Footage of Lot QQPlot')","7b3e7e95":"#get skewness\nprint('Skewness:', kc_house['sqft_lot_log'].skew()) #data is heavily skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_lot_log'].kurtosis()) #data is leptokurtic and has heavy outliers","208299c0":"#plot 'price' vs. sqft_lot'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_lot',\n           y = 'price',\n           hue = 'price_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Square Footage of The Lot vs. Price')\nplt.xlabel('Square Feet')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()\n\n#plot 'price_log' vs. sqft_lot_log'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_lot_log',\n           y = 'price_log',\n           hue = 'price_log_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Log Square Footage of The Lot vs. Log Price')\nplt.xlabel('Log Square Feet')\nplt.ylabel('Log Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()","cda9d3d6":"kc_house[['sqft_lot', 'sqft_lot_log', 'price']].corr()","fc1bc1f2":"#look at summary statistics & remove scientific notation\nkc_house['sqft_above'].describe().apply(lambda x: format(x, 'f'))","5eed63a8":"#get skewness\nprint('Skewness:', kc_house['sqft_above'].skew()) #data is heavily skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_above'].kurtosis()) #data is leptokurtic and has heavy outliers","2b8eae53":"#plot 'sqft_above'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_above'], kde = True)\nplt.title('Distribution of Square Footage of The Home Minus Basement')\nplt.xlabel('Square Feet')\nplt.axvline(kc_house['sqft_above'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_above'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Square Footage of The Home Minus Basement QQPlot')","848aa9d7":"#applying log transformation\nkc_house['sqft_above_log'] = np.log(kc_house['sqft_above'])\n\n#plot 'sqft_above_log'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_above_log'], kde = True)\nplt.title('Log Distribution of Square Footage of The Home Minus Basement')\nplt.xlabel('Log Square Feet')\nplt.axvline(kc_house['sqft_above_log'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_above_log'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Log Square Footage of The Home Minus Basement QQPlot')","2c6231f8":"#get skewness\nprint('Skewness:', kc_house['sqft_above_log'].skew()) #data is fairly symmetrical\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_above_log'].kurtosis()) #data is mesokurtic and has little outliers","948d39c0":"#plot 'price' vs. sqft_above'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_above',\n           y = 'price',\n           hue = 'price_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Square Footage of The Home Minus Basement vs. Price')\nplt.xlabel('Square Feet')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()\n\n#plot 'price_log' vs. sqft_above_log'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_above_log',\n           y = 'price_log',\n           hue = 'price_log_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Log Square Footage of The Home Minus Basement vs. Price')\nplt.xlabel('Log Square Feet')\nplt.ylabel('Log Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()","f6c0adc2":"kc_house[['sqft_above', 'sqft_above_log', 'price']].corr()","36e57fa3":"#look at summary statistics & remove scientific notation\nkc_house['sqft_basement'].describe().apply(lambda x: format(x, 'f'))","958073a5":"#get skewness\nprint('Skewness:', kc_house['sqft_basement'].skew()) #data is moderately skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_basement'].kurtosis()) #data is platykurtic and has little outliers","6443e507":"#plot 'sqft_basement'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_basement'], kde = True)\nplt.title('Distribution of Square Footage of Basement')\nplt.xlabel('Square Feet')\nplt.axvline(kc_house['sqft_basement'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_basement'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Square Footage of Basement QQPlot')","66d43975":"#classify 'sqft_basement' as dichotomous variable and will treat this as categorical variable\nkc_house['basement'] = kc_house['sqft_basement'].apply(lambda x: 1 if x > 0 else 0)\n\n#drop 'sqft_basement'\nkc_house.drop('sqft_basement', axis = 1, inplace = True)\n\n#view\nkc_house.head(2)","a751c80f":"#plot 'basement' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.catplot(x = 'basement', hue = 'price_med', \n            kind = 'count', palette = 'Spectral', aspect = 3,\n            data = kc_house)\nplt.title('Presence of Basement vs. Price')\nplt.xlabel('Presence of Basement')\nplt.xticks(fontsize = 10)\nplt.show()","e9667833":"#plot 'basement' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['basement'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Presence of Basement vs. Price')\nplt.xlabel('Presence of Basement')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#boxplot 'basement' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['basement'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Basememt vs. Price')\nplt.xlabel('Basememt')\nplt.ylabel('Price')\nplt.xticks(fontsize = 10, ha = 'right')\nplt.show()","8fb7c85c":"#relplot 'sqft_living' vs 'price' with respect to 'basement'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'sqft_living',\n            y = 'price',\n            hue = 'basement',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('SQFT Living vs. Price with Respect to Basement')\nplt.xlabel('SQFT Living')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'sqft_above' vs 'price' with respect to 'basement'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'sqft_above',\n            y = 'price',\n            hue = 'basement',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('SQFT Above vs. Price with Respect to Basement')\nplt.xlabel('SQFT Above')\nplt.ylabel('Price in Millions')\nplt.show()","a48d35f6":"#get correlation\nkc_house[['basement', 'price']].corr()","1cc87bbc":"#look at summary statistics & remove scientific notation\nkc_house['sqft_living15'].describe().apply(lambda x: format(x, 'f'))","b1bb6872":"#get skewness\nprint('Skewness:', kc_house['sqft_living15'].skew()) #data is moderately skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_living15'].kurtosis()) #data is platykurtic and has little outliers","09f076f0":"#plot 'sqft_living15'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_living15'], kde = True)\nplt.title('Distribution of Square Footage of Interior Housing Living Space for the Nearest 15 Neighbors')\nplt.xlabel('Square Feet')\nplt.axvline(kc_house['sqft_living15'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_living15'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Square Footage of Interior Housing Living Space for the Nearest 15 Neighbors QQPlot')","bbb659a7":"#applying log transformation\nkc_house['sqft_living15_log'] = np.log(kc_house['sqft_living15'])\n\n#plot 'sqft_living15_log'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_living15_log'], kde = True)\nplt.title('Log Distribution of Square Footage of Interior Housing Living Space for the Nearest 15 Neighbors')\nplt.xlabel('Log Square Feet')\nplt.axvline(kc_house['sqft_living15_log'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_living15_log'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Log Square Footage of Interior Housing Living Space for the Nearest 15 Neighbors QQPlot')","038aca1d":"#get skewness\nprint('Skewness:', kc_house['sqft_living15_log'].skew()) #data is fairly symmetrical\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_living15_log'].kurtosis()) #data is mesokurtic and has little outliers","989eadd7":"#plot 'price' vs. sqft_living15'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_living15',\n           y = 'price',\n           hue = 'price_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Square Footage of Interior Housing Living Space for the Nearest 15 Neighbors vs. Price')\nplt.xlabel('Square Feet')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()\n\n#plot 'price_log' vs. sqft_living15_log'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_living15_log',\n           y = 'price_log',\n           hue = 'price_log_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Log Square Footage of Interior Housing Living Space for the Nearest 15 Neighbors vs. Price')\nplt.xlabel('Log Square Feet')\nplt.ylabel('Log Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()","13a77a0b":"kc_house[['sqft_living15', 'sqft_living15_log', 'price']].corr()","ae3eb2da":"#look at summary statistics & remove scientific notation\nkc_house['sqft_lot15'].describe().apply(lambda x: format(x, 'f'))","3d9799ce":"#get skewness\nprint('Skewness:', kc_house['sqft_lot15'].skew()) #data is extremely skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_lot15'].kurtosis()) #data is leptokurtic and has heavy outliers","bab42c58":"#plot 'sqft_lot15'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_lot15'], kde = True)\nplt.title('Distribution of Square Footage of the Land Lots of the Nearest 15 Neighbors')\nplt.xlabel('Square Feet')\nplt.axvline(kc_house['sqft_lot15'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_lot15'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Square Footage of the Land Lots of the Nearest 15 Neighbors QQPlot')","72c16a0b":"#applying log transformation\nkc_house['sqft_lot15_log'] = np.log(kc_house['sqft_lot15'])\n\n#plot 'sqft_lot15'\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['sqft_lot15_log'], kde = True)\nplt.title('Log Distribution of Square Footage of the Land Lots of the Nearest 15 Neighbors')\nplt.xlabel('Log Square Feet')\nplt.axvline(kc_house['sqft_lot15_log'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['sqft_lot15_log'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Log Square Footage of the Land Lots of the Nearest 15 Neighbors QQPlot')","7868ed81":"#get skewness\nprint('Skewness:', kc_house['sqft_lot15_log'].skew()) #data is moderately skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['sqft_lot15_log'].kurtosis()) #data is mesokurtic and has little outliers","36ed03dd":"#plot 'price' vs. sqft_lot15'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_lot15',\n           y = 'price',\n           hue = 'price_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Square Footage of the Land Lots of the Nearest 15 Neighbors vs. Price')\nplt.xlabel('Square Feet')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()\n\n#plot 'price_log' vs. sqft_lot15_log'\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'sqft_lot15_log',\n           y = 'price_log',\n           hue = 'price_log_med', data = kc_house, \n           palette = 'Spectral', markers = '+', aspect = 3.5)\nplt.title('Log Square Footage of the Land Lots of the Nearest 15 Neighbors vs. Price')\nplt.xlabel('Log Square Feet')\nplt.ylabel('Log Price in Millions')\nplt.xticks(fontsize = 15)\nplt.show()","5af487ea":"kc_house[['sqft_lot15', 'sqft_lot15_log', 'price']].corr()","fcfe6325":"kc_house['bedrooms'].nunique()","8a6f5adf":"y_values = kc_house['bedrooms'].value_counts(ascending=False)\nx_values = y_values.index\n\ny_values","be4598b5":"#get skewness\nprint('Skewness:', kc_house['bedrooms'].skew()) #data is moderately skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['bedrooms'].kurtosis()) #data is platykurtic and has little outliers","292929f6":"#histplot 'bedroom' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['bedrooms'], kde = True)\nplt.title('Distribution of Bedrooms')\nplt.xlabel('Bedrooms')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['bedrooms'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Number of Bedrooms QQPlot')","23138044":"#plot 'bedrooms' vs 'price' \nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bedrooms',\n            y = 'price',\n            hue = 'bedrooms',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.title('Number of Bedrooms vs. Price')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price in Millions')\nplt.show()","a9ab2a89":"#check out the outlier at 9+ number of bedrooms\nkc_house[kc_house['bedrooms'] > 9]","8f2d775f":"#replace 33-bedrooms data with median value\nkc_house.loc[kc_house['bedrooms'] == 33, 'bedrooms'] = kc_house['bedrooms'].median()\n\n#check again to see if it is gone\nkc_house.loc[kc_house['bedrooms'] == 33]","42974cfa":"#barplot 'bedrooms' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['bedrooms'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Number of Bedrooms vs. Price')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#relplot 'bedrooms' vs 'price'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bedrooms',\n            y = 'price',\n            hue = 'bedrooms',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Bedrooms vs. Price')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'bedrooms' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['bedrooms'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Number of Bedrooms vs. Price')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price')\nplt.xticks(ha = 'right', fontsize = 15)\nplt.show()","5a118c6b":"#relplot 'bedrooms' vs 'price' with repsect to 'sqft_living'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bedrooms',\n            y = 'price',\n            hue = 'sqft_living',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Bedrooms vs. Price with Respect to SQFT Living')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'bedrooms' vs 'price' with respect to 'sqft_above'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bedrooms',\n            y = 'price',\n            hue = 'sqft_above',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Bedrooms vs. Price with Respect to SQFT Above')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price in Millions')\nplt.show()","c0e248c0":"#plot sqft_living * bedrooms interaction\nplt.figure(figsize = (15, 15))\nsns.lmplot(x = 'bedrooms', y = 'sqft_living', hue = 'price_med', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('sqft_living * bedrooms Interaction')\n\n#plot sqft_above * bedrooms interaction\nplt.figure(figsize = (15, 15))\nsns.lmplot(x = 'bedrooms', y = 'sqft_above', hue = 'price_med', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('sqft_above * bedrooms Interaction')","58ef73aa":"kc_house[['bedrooms', 'price']].corr()","ce904bd6":"#get summary statistics\nkc_house['bathrooms'].describe()","9b23e91c":"kc_house['bathrooms'].nunique()","ae090d01":"y_values = kc_house['bathrooms'].value_counts(ascending=False)\nx_values = y_values.index\n\ny_values","45b34842":"#get skewness\nprint('Skewness:', kc_house['bathrooms'].skew()) #data is moderately skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['bathrooms'].kurtosis()) #data is platykurtic and has little outliers","a8b393cd":"#barplot 'grade' distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(x_values, y_values, \n            palette = \"Spectral\")\nplt.title('Distribution of Bathromms')\nplt.xlabel('Bathrooms')\nplt.ylabel('Count')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#histplot 'bedroom' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['bathrooms'], kde = True)\nplt.title('Distribution of Bathrooms')\nplt.xlabel('Bathrooms')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['bathrooms'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Number of Bathrooms QQPlot')","662dd9a5":"#barplot 'bathrooms' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['bathrooms'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Number of Bathrooms vs. Price')\nplt.xlabel('Number of Bathrooms')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10, rotation = 90)\nplt.show()\n\n#relplot 'bathrooms' vs 'price' \nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bathrooms',\n            y = 'price',\n            hue = 'bathrooms',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Bathrooms vs. Price')\nplt.xlabel('Number of Bathrooms')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'bathrooms' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['bathrooms'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Number of Bathrooms vs. Price')\nplt.xlabel('Number of Bathrooms')\nplt.ylabel('Price')\nplt.xticks(ha = 'right', fontsize = 8)\nplt.show()","f37d4e7b":"#relplot 'bathrooms' vs 'price' with respect to 'sqft_living'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bathrooms',\n            y = 'price',\n            hue = 'sqft_living',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Bathrooms vs. Price with Respect to SQFT Living')\nplt.xlabel('Number of Bathrooms')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'bathrooms' vs 'price'  with respect to 'sqft_above'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'bathrooms',\n            y = 'price',\n            hue = 'sqft_above',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Bathrooms vs. Price with Respect to SQFT Above')\nplt.xlabel('Number of Bathrooms')\nplt.ylabel('Price in Millions')\nplt.show()","d1097a0a":"#plot sqft_living * bathrooms interaction\nplt.figure(figsize = (15, 15))\nsns.lmplot(x = 'bathrooms', y = 'sqft_living', hue = 'price_med', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('sqft_living  * bathrooms Interaction')\n\n#plot sqft_above * bathrooms interaction\nplt.figure(figsize = (15, 15))\nsns.lmplot(x = 'bathrooms', y = 'sqft_above', hue = 'price_med', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('sqft_above * bathrooms Interaction')","15277b08":"kc_house[['bathrooms', 'price']].corr()","a06ac09c":"kc_house['grade'].nunique()","abb281e6":"y_values = kc_house['grade'].value_counts(ascending = False)\nx_values = y_values.index\n\ny_values","328f27e5":"#get skewness\nprint('Skewness:', kc_house['grade'].skew()) #data is moderately skewed right\n\n#get kurtosis\nprint('Kurtosis:', kc_house['grade'].kurtosis()) #data is platykurtic and has little outliers","24a2b020":"#barplot 'grade' distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(x_values, y_values, \n            palette = \"Spectral\")\nplt.title('Distribution of Grade')\nplt.xlabel('Grade')\nplt.ylabel('Count')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#histplot 'grade' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['grade'], kde = True)\nplt.title('Distribution of Grade')\nplt.xlabel('Grade')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#check for normality\nfig = sm.graphics.qqplot(kc_house['grade'], \n                         dist = stats.norm, \n                         line = '45', \n                         fit = True)\nfig.set_size_inches(15, 5)\nplt.title('Grade QQPlot')","5d66b668":"#barplot 'grade' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['grade'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Grade vs. Price')\nplt.xlabel('Grade')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#relplot 'grade' vs 'price' \nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'grade',\n            y = 'price',\n            hue = 'grade',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Grade vs. Price')\nplt.xlabel('Grade')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'grade' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['grade'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Grade vs. Price')\nplt.xlabel('Grade')\nplt.ylabel('Price')\nplt.xticks(ha = 'right', fontsize = 15)\nplt.show()","90331f88":"#relplot 'grade' vs 'price' with respect to 'sqft_living'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'grade',\n            y = 'price',\n            hue = 'sqft_living',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Grade vs. Price with Repsect to SQFT Living')\nplt.xlabel('Grade')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'grade' vs 'price' with respect to 'sqft_abive' \nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'grade',\n            y = 'price',\n            hue = 'sqft_above',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Grade vs. Price with Repsect to SQFT Above')\nplt.xlabel('Grade')\nplt.ylabel('Price in Millions')\nplt.show()","4ef6f703":"#get correlation\nkc_house[['grade', 'price']].corr()","87fe5ab1":"kc_house['floors'].nunique()","c579b5fd":"y_values = kc_house['floors'].value_counts(ascending=False)\nx_values = y_values.index\n\ny_values","19d33038":"#barplot 'floors' distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(x_values, y_values, \n            palette = \"Spectral\")\nplt.title('Distribution of Floors')\nplt.xlabel('Floors')\nplt.ylabel('Count')\nplt.xticks(fontsize = 10)\nplt.show()","b619128d":"#barplot 'floors' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['floors'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Number of Floors vs. Price')\nplt.xlabel('Number of Floors')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#relplot 'floors' vs 'price' \nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'floors',\n            y = 'price',\n            hue = 'floors',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Floors vs. Price')\nplt.xlabel('Number of Floors')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'floors' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['floors'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Number of Floors vs. Price')\nplt.xlabel('Number of Floors')\nplt.ylabel('Price')\nplt.xticks(ha = 'right', fontsize = 15)\nplt.show()","6d585a10":"#relplot 'floors' vs 'price' with respect to 'sqft_living'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'floors',\n            y = 'price',\n            hue = 'sqft_living',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Floors vs. Price with Respect to SQFT Living')\nplt.xlabel('Number of Floors')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'floors' vs 'price' with respect to 'sqft_above'\nplt.figure(figsize = (15, 15))\nsns.relplot(x = 'floors',\n            y = 'price',\n            hue = 'sqft_above',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Number of Floors vs. Price with Respect to SQFT Above')\nplt.xlabel('Number of Floors')\nplt.ylabel('Price in Millions')\nplt.show()","81e0986e":"#plot sqft_above * floors interaction\nplt.figure(figsize = (15, 15))\nsns.lmplot(x = 'floors', y = 'sqft_above', hue = 'price_med', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('sqft_above * floors Interaction')","db5e7cb3":"kc_house[['floors', 'price']].corr()","f77fa774":"kc_house['waterfront'].nunique()","4baf9811":"y_values = kc_house['waterfront'].value_counts(ascending=False)\nx_values = y_values.index\n\ny_values","79ae14f4":"#plot 'waterfront' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.catplot(x = 'waterfront', hue = 'price_med', \n            kind = 'count', palette = 'Spectral', aspect = 3,\n            data = kc_house)\nplt.title('Presence of Waterfront vs. Price')\nplt.xlabel('Presence of Waterfront')\nplt.xticks(fontsize = 10)\nplt.show()","a220d7b9":"#barplot 'waterfront' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['waterfront'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Waterfront vs. Price')\nplt.xlabel('Waterfront')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'waterfront' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['waterfront'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Waterfront vs. Price')\nplt.xlabel('Waterfront')\nplt.ylabel('Price')\nplt.xticks(fontsize = 10, ha = 'right')\nplt.show()","e6d44a6d":"#relplot 'sqft_above' vs 'price' with respect to 'waterfront'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'sqft_above',\n            y = 'price',\n            hue = 'waterfront',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('SQFT Above vs. Price with Respect to Waterfront')\nplt.xlabel('SQFT Above Living Space')\nplt.ylabel('Price in Millions')\nplt.show()","d206a18b":"kc_house[['waterfront', 'price']].corr()","9a02efd9":"kc_house['condition'].nunique()","cc17490b":"y_values = kc_house['condition'].value_counts(ascending = False)\nx_values = y_values.index\n\ny_values","b45ad8b6":"#barplot 'condition' distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(x_values, y_values, \n            palette = \"Spectral\")\nplt.title('Distribution of Condition')\nplt.xlabel('Condition')\nplt.ylabel('Count')\nplt.xticks(fontsize = 10, ha = 'right')\nplt.show()","01332d45":"#barplot 'condition' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['condition'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Condition vs. Price')\nplt.xlabel('Condition')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#relplot 'condition' vs 'price' \nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'condition',\n            y = 'price',\n            hue = 'condition',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Condition vs. Price')\nplt.xlabel('Condition')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'condition' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['condition'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Condition vs. Price')\nplt.xlabel('Condition')\nplt.ylabel('Price')\nplt.xticks(ha = 'right', fontsize = 15)\nplt.show()","2eb48c86":"#relplot 'condition' vs 'price' with respect to 'sqft_living'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'condition',\n            y = 'price',\n            hue = 'sqft_living',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Condition vs. Price with Respect to SQFT Living')\nplt.xlabel('Condition')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'condition' vs 'price' with respect to 'sqft_above'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'condition',\n            y = 'price',\n            hue = 'sqft_above',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Condition vs. Price with Respect to SQFT Above')\nplt.xlabel('Condition')\nplt.ylabel('Price in Millions')\nplt.show()","7647ee1d":"#relplot 'condition' vs 'price' with respect to 'grade'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'condition',\n            y = 'price',\n            hue = 'grade',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Condition vs. Price with Respect to Grade')\nplt.xlabel('Condition')\nplt.ylabel('Price in Millions')\nplt.show()","d5eb9cf6":"kc_house[['condition', 'price']].corr()","b784a9c4":"#get summary statistics\nkc_house['date'].describe()","767d941d":"#histplot 'date' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['date'], kde = True)\nplt.title('Distribution of Date Sold')\nplt.xlabel('Date Sold')\nplt.xticks(fontsize = 10)\nplt.show()","6c683dac":"#plot 'yr_built' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['yr_built'], kde = True)\nplt.axvline(kc_house['yr_built'].mean(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Distribution of Year Built')\nplt.xlabel('Year Built')\nplt.xticks(fontsize = 10)\nplt.show()","842f4b5f":"#average yr_built\nkc_house['yr_built'].mean()","32595e03":"#plot 'yr_built' vs 'price' \nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'yr_built',\n            y = 'price',\n            hue = 'yr_built',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral', legend = False)\nplt.axvline(kc_house['yr_built'].mean(),\n           ls = '--', lw = 1, color = 'r')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Year Built vs. Price')\nplt.xlabel('Year Built')\nplt.ylabel('Price in Millions')\nplt.show()","21eb7bbe":"#we see from above that the dataset most current year is 2015\n#use 2015 to calculate the house age\nkc_house['age'] = 2015 - kc_house['yr_built']\nkc_house.head()","fad28124":"#plot 'age' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['age'], kde = True)\nplt.axvline(kc_house['age'].mean(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Distribution of House Age')\nplt.xlabel('Age')\nplt.xticks(fontsize = 10)\nplt.show()","0b9f097c":"#average house age\nkc_house['age'].mean() ","0fca762e":"#barplot 'age' vs. 'price' distribution\nplt.figure(figsize = (20, 8))\nsns.barplot(kc_house['age'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Age vs. Price')\nplt.xlabel('Age')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10, rotation = 90)\nplt.show()","0b8c7fca":"#relplot 'age' vs 'price' with respect to 'sqft_living'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'age',\n            y = 'price',\n            hue = 'sqft_living',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axvline(kc_house['age'].mean(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.title('Age vs. Price with Respect to SQFT Living')\nplt.xlabel('Age')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'age' vs 'price' with respect to 'grade'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'age',\n            y = 'price',\n            hue = 'grade',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axvline(kc_house['age'].mean(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.title('Age vs. Price with Respect to Grade')\nplt.xlabel('Age')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#relplot 'age' vs 'price' with respect to 'condition'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'age',\n            y = 'price',\n            hue = 'condition',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axvline(kc_house['age'].mean(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.title('Age vs. Price with Respect to Condition')\nplt.xlabel('Age')\nplt.ylabel('Price in Millions')\nplt.show()","909fadfc":"#plot age * price * grade interaction\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'age', y = 'price', hue = 'grade', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('age * price * grade Interaction')\n\n#plot age * price * condition interaction\nplt.figure(figsize = (15, 5))\nsns.lmplot(x = 'age', y = 'price', hue = 'condition', \n           data = kc_house, \n           fit_reg = True, palette = 'Spectral', markers = '+', size = 4, aspect = 2.5);\nplt.title('age * price * condition Interaction')","012e9d80":"#relplot 'age' vs 'price' with respect to 'waterfront'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'age',\n            y = 'price',\n            hue = 'waterfront',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('Age vs. Price with Respect to Waterfront')\nplt.xlabel('Age')\nplt.ylabel('Price in Millions')\nplt.show()","5f3725b0":"#get correlation\nkc_house[['date', 'yr_built', 'age', 'price']].corr()","90b1248e":"#drop\nkc_house.drop(['yr_built', 'date'], axis = 1, inplace = True)","434052cf":"#plot 'yr_renovated' distribution\nplt.figure(figsize = (15, 5))\nsns.histplot(kc_house['yr_renovated'], kde = True)\nplt.title('Renovation')\nplt.xlabel('Year')\nplt.xticks(fontsize = 10)\nplt.show()","1734cdd8":"#plot 'yr_renovated' vs 'price' \nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'yr_renovated',\n            y = 'price',\n            hue = 'yr_renovated',\n            data = kc_house,\n            alpha = 0.5, s = 50, aspect = 3, palette = 'Spectral')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r')\nplt.title('Year Renovated vs. Price')\nplt.xlabel('Year')\nplt.ylabel('Price in Millions')\nplt.show()","7b67357c":"#classify 'yr_renovated' as dichotomous variable\nkc_house['renovation'] = kc_house['yr_renovated'].apply(lambda x: 1 if x > 0 else 0)\n\n#drop 'yr_renovated'\nkc_house.drop('yr_renovated', axis = 1, inplace = True)\n\n#view\nkc_house.head(2)","9a0928e1":"#plot 'basement' vs. 'price'  distribution\nplt.figure(figsize = (15, 5))\nsns.catplot(x = 'renovation', hue = 'price_med', \n            kind = 'count', palette = 'Spectral', aspect = 3,\n            data = kc_house)\nplt.title('Renovation vs. Price')\nplt.xlabel('Renovation')\nplt.xticks(fontsize = 10)\nplt.show()\n\n#barplot 'renovation' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.barplot(kc_house['renovation'], kc_house['price'], \n            palette = \"Spectral\")\nplt.title('Renovation vs. Price')\nplt.xlabel('Renovation')\nplt.ylabel('Price in Millions')\nplt.show()\n\n#boxplot 'renovation' vs. 'price'\nplt.figure(figsize = (15, 5))\nsns.boxplot(x = kc_house['renovation'], \n            y = kc_house['price'], \n            linewidth = 1,\n            palette = 'Spectral')\nplt.title('Renovation vs. Price')\nplt.xlabel('Renovation')\nplt.ylabel('Price in Millions')\nplt.xticks(ha = 'right', fontsize = 15)\nplt.show()","7ed08ddc":"#relplot 'sqft_above' vs 'price' with respect to 'renovation'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'sqft_above',\n            y = 'price',\n            hue = 'renovation',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('SQFT Above vs. Price with Respect to Renovation')\nplt.xlabel('SQFT Above')\nplt.ylabel('Price in Millions')\nplt.show()","9600e1a9":"#relplot 'age' vs 'price' with respect to 'renovation'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'age',\n            y = 'price',\n            hue = 'renovation',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.axvline(kc_house['age'].mean(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.axhline(kc_house['price'].median(),\n           ls = '--', lw = 1, color = 'r', label = 'Mean Price')\nplt.title('Age vs. Price with Respect to Renovation')\nplt.xlabel('Age')\nplt.ylabel('Price in Millions')\nplt.show()","983e7534":"#get correlation\nkc_house[['renovation', 'price']].corr()","db773add":"#plot 'zipcode' vs. 'price'  distribution\nplt.figure(figsize = (20, 8))\nsns.countplot(x ='zipcode', \n              data = kc_house, \n              palette = \"Spectral\")\nplt.title('Zipcode Count')\nplt.xlabel('Zipcode')\nplt.xticks(fontsize = 10, rotation = 90)\nplt.show()","485064d8":"#plot 'zipcode' vs. 'price'  distribution\nplt.figure(figsize = (20, 8))\nsns.barplot(kc_house['zipcode'], kc_house['price'],\n            palette = \"Spectral\")\nplt.title('Zipcode vs. Price')\nplt.xlabel('Zipcode')\nplt.ylabel('Price in Millions')\nplt.xticks(fontsize = 10, rotation = 90)\nplt.show()","3726e40d":"#code adopted from https:\/\/github.com\/calbal91\/project-king-county-housing\/blob\/master\/Analysis.ipynb\n\n# Seattle, Shoreline, Lake Forest Park\nAzips = [98177, 98133, 98125, 98155, 98107, 98115, 98105, 98109, 98112,\n        98117, 98199, 98122, 98144, 98118, 98108, 98106, 98136, 98126,\n        98116, 98102, 98103, 98119, 98134]\n\n# Kirkland, Kenmore, Bothell, Redmond, Woodinville\nBzips = [98053, 98052, 98077, 98072, 98033, 98034, 98011, 98028]\n\n# Bellevue, Medina, Mercer Island, Newcastle\nCzips = [98059, 98056, 98006, 98040, 98008, 98007, 98005, 98004, 98039]\n\n# Renton, Kent\nDzips = [98057, 98055, 98058, 98032, 98031, 98030, 98178]\n\n# Burien, Normandy Park, Des Moines, SeaTac, Tukwilla, Vashon Island\nEzips = [98070, 98146, 98168, 98166, 98198, 98148, 98158, 98188]\n\n# Federal Way, Auburn, Algona, Milton, Pacific\nFzips = [98023, 98003, 98063, 98047, 98001, 98002, 98093, 98071, 98002, 98092]\n\n# Sammamish, Issaquah, Carnation, Duvall\nGzips = [98074, 98075, 98029, 98027, 98019, 98014]\n\n# Covington, Maple Valley, Black Diamond, Enumclaw\nHzips = [98022, 98042, 98010, 98038, 98051]\n\n# Snoquaimie, North Bend\nIzips = [98065, 98045, 98024]","e72de562":"def zipcode(x):\n    \n    '''Parameters:\n           x (int): The property's zip code.\n       Returns:\n           zipcode group (str): The property's area group (a letter from A to I)\n           Will return X if zip code not recognised.'''\n    \n    if x in Azips:\n        return 'A'\n    elif x in Bzips:\n        return 'B'\n    elif x in Czips:\n        return 'C'\n    elif x in Dzips:\n        return 'D'\n    elif x in Ezips:\n        return 'E'\n    elif x in Fzips:\n        return 'F'\n    elif x in Gzips:\n        return 'G'\n    elif x in Hzips:\n        return 'H'\n    elif x in Izips:\n        return 'I'\n    else:\n        return 'X'","101ef36e":"#one hot encoding our zipcode\nkc_house['zipcat'] = kc_house['zipcode'].map(zipcode)\nzip_dummies = pd.get_dummies(kc_house[\"zipcat\"], prefix=\"zip\")\n\n#merge with our dataframe\nkc_house = pd.concat([kc_house, zip_dummies], axis=1)\n\n#review\nkc_house.head()","e56dc1d1":"#plot 'zipcat' \nplt.figure(figsize = (8, 8))\nsns.scatterplot(x = 'long',\n                y = 'lat',\n                hue = 'zipcat',\n                data = kc_house,\n                alpha = 0.5, s = 25, palette = 'Spectral')\nplt.title('Zipcode')\nplt.xlabel('Longitude')\nplt.ylabel('Lattitude')\nplt.show()\n\n#plot 'zipcode' vs 'price' \nplt.figure(figsize = (8, 8))\nsns.scatterplot(x = 'long',\n                y = 'lat',\n                hue = 'price',\n                data = kc_house,\n                alpha = 0.75, s = 25, palette = 'Spectral')\nplt.title('Location vs. Price')\nplt.xlabel('Longitude')\nplt.ylabel('Lattitude')\nplt.show()\n\n#plot 'zipcode' vs 'price' with respect to 'sqft_living'\nplt.figure(figsize = (8, 8))\nsns.scatterplot(x = 'long',\n                y = 'lat',\n                hue = 'sqft_living15',\n                data = kc_house,\n                alpha = 0.75, s = 15)\nplt.title('Location vs. Price with Respect to SQFT Living of 15 Nearest Neighbors')\nplt.xlabel('Longitude')\nplt.ylabel('Lattitude')\nplt.show()\n\n#plot 'zipcode' vs 'price' with respect to 'waterfront'\nplt.figure(figsize = (8, 8))\nsns.scatterplot(x = 'long',\n                y = 'lat',\n                hue = 'waterfront',\n                data = kc_house,\n                alpha = 0.75, s = 25)\nplt.title('Location vs. Price with Respect to Waterfront')\nplt.xlabel('Longitude')\nplt.ylabel('Lattitude')\nplt.show()\n\n#plot 'zipcode' vs 'price' with respect to 'age'\nplt.figure(figsize = (8, 8))\nsns.scatterplot(x = 'long',\n                y = 'lat',\n                hue = 'age',\n                data = kc_house,\n                alpha = 0.75, s = 25)\nplt.title('Location vs. Price with Respect to Age')\nplt.xlabel('Longitude')\nplt.ylabel('Lattitude')\nplt.show()\n\n#plot 'zipcode' vs 'price' with respect to 'age'\nplt.figure(figsize = (8, 8))\nsns.scatterplot(x = 'long',\n                y = 'lat',\n                hue = 'grade',\n                data = kc_house,\n                alpha = 0.75, s = 25)\nplt.title('Location vs. Price with Respect to Grade')\nplt.xlabel('Longitude')\nplt.ylabel('Lattitude')\nplt.show()","95a90301":"#relplot 'zipcat' vs 'price' with respect to 'waterfront'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'zipcat',\n            y = 'price',\n            hue = 'waterfront',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('Zip Area vs. Price with Respect to Waterfront')\nplt.xlabel('Zip Area')\nplt.ylabel('Price in Millions')\nplt.show()","b191a8fd":"#relplot 'zipcat' vs 'price' with respect to 'sqft_above'\nplt.figure(figsize = (15, 5))\nsns.relplot(x = 'zipcat',\n            y = 'price',\n            hue = 'sqft_above',\n            data = kc_house,\n            s = 50, aspect = 3, palette = 'YlOrBr')\nplt.title('Zip Area vs. Price with Respect to SQFT Above')\nplt.xlabel('Zip Area')\nplt.ylabel('Price in Millions')\nplt.show()","72763554":"#get correlation of all features\nkc_house.corr()","ccc544b0":"kc_house.columns","08c39440":"#heatmap for all the required features\nmask = np.zeros_like(kc_house.corr())\nmask[np.triu_indices_from(mask)] = True\n\nwith sns.axes_style(\"white\"):\n    fig, ax = plt.subplots(figsize = (15, 15))\n    ax = sns.heatmap(kc_house.corr(), \n                     annot = True,\n                     annot_kws={\"size\": 8},\n                     ax = ax, \n                     cbar_kws = {\"shrink\": .5}, \n                     mask = mask, \n                     vmax = 1,\n                     vmin = -1,\n                     square = True)","a1b2b92a":"#check for multicollinearity\nmask = np.zeros_like(abs(kc_house.corr()) > 0.75)\nmask[np.triu_indices_from(mask)] = True\n\nwith sns.axes_style(\"white\"):\n    fig, ax = plt.subplots(figsize = (15, 15))\n    ax = sns.heatmap(abs(kc_house.corr()) > 0.75, \n                     annot = True, \n                     ax = ax, \n                     cbar_kws = {\"shrink\": .5}, \n                     mask = mask, \n                     vmax = 1,\n                     vmin = -1,\n                     square = True)","18bbc7f5":"#create a more robust solution that will return the variable pairs from the correlation matrix \n#that have correlations over .75, but less than 1\nkc_house_corr = kc_house.corr().abs().stack().reset_index().sort_values(0, ascending = False)\nkc_house_corr.head()","42a656e5":"kc_house_corr['pairs'] = list(zip(kc_house_corr['level_0'], kc_house_corr['level_1']))\nkc_house_corr.head()","27fff7e8":"kc_house_corr.set_index(['pairs'], inplace = True)\nkc_house_corr.head()","78fc693f":"kc_house_corr.drop(columns = ['level_0', 'level_1'], inplace = True)\nkc_house_corr.head()","864746b0":"#add correlation column\nkc_house_corr.columns = ['cc']\nkc_house_corr.head()","1cad633e":"kc_house_corr.drop_duplicates(inplace = True)","662b344e":"#correlations over .75, but less than 1. = multicollinarity\nkc_house_corr[(kc_house_corr['cc'] > 0.75) & (kc_house_corr['cc'] < 1)]\nkc_house_corr.head(20)","4b6e9108":"#compare features' correlation with 'price'\nkc_house[['sqft_living', 'sqft_above', 'sqft_living15', 'bathrooms', 'grade', 'price']].corr()","f268491c":"#drop features to prevent multicollinarity\nkc_house.drop(['sqft_living', 'grade'], axis = 1, inplace = True)","0006dd1e":"#drop their associated log transform to prevent multicollinarity\nkc_house.drop(['sqft_living_log', 'sqft_lot15_log'], axis = 1, inplace = True)","d127e525":"kc_continuous = kc_house[['price', 'price_log', \n                          'sqft_above', 'sqft_above_log', \n                          'sqft_lot', 'sqft_lot_log',\n                          'sqft_living15', 'sqft_living15_log', \n                          'sqft_lot15',  \n                          'age']]\n\nkc_ordinals = kc_house[['bedrooms', 'bathrooms', 'floors']]\n\nkc_categoricals = kc_house[['waterfront', 'basement', 'renovation']]","f2dc2e61":"kc_continuous.head()","b2d4c0c6":"kc_ordinals.head()","6a63d2d4":"kc_categoricals.head()","6ceccb0c":"#cast to a numeric type then to string type\nkc_house['waterfront'] = kc_house['waterfront'].astype('str')\nkc_house['basement'] = kc_house['basement'].astype('float64').astype('str')\nkc_house['renovation'] = kc_house['renovation'].astype('float64').astype('str')\nkc_house['condition'] = kc_house['condition'].astype('float64').astype('str')\n\n#recheck datatype\nprint(kc_house['waterfront'].dtypes)\nprint(kc_house['basement'].dtypes)\nprint(kc_house['renovation'].dtypes)\nprint(kc_house['condition'].dtypes)","df98d11c":"#one hot encode categoricals\nwater_dummies = pd.get_dummies(kc_house['waterfront'], prefix = 'water', drop_first = True)\nbasement_dummies = pd.get_dummies(kc_house['basement'], prefix = 'base', drop_first = True)\nrenovation_dummies = pd.get_dummies(kc_house['renovation'], prefix = 'reno', drop_first = True)\ncondition_dummies = pd.get_dummies(kc_house['condition'], prefix = 'cond', drop_first = True)","0e89eacd":"#merge dummies & other columns\nclean = pd.concat([kc_continuous, kc_ordinals, \n                   water_dummies, basement_dummies, renovation_dummies, condition_dummies,\n                   zip_dummies], axis = 1)","802033e9":"#view\nclean.head()","cf90b6c7":"clean.columns","6f1902cc":"#recheck for multicollinearity\nmask = np.zeros_like(abs(clean.corr()) > 0.75)\nmask[np.triu_indices_from(mask)] = True\n\nwith sns.axes_style(\"white\"):\n    fig, ax = plt.subplots(figsize = (15,15))\n    ax = sns.heatmap(abs(clean.corr()) > 0.75, \n                     annot = True, \n                     ax = ax, \n                     cbar_kws = {\"shrink\": .5}, \n                     mask = mask, \n                     vmax = 1,\n                     vmin = -1,\n                     square = True)","94c6c2ae":"#save\nclean.to_csv('clean.csv')","92cdd697":"For this section, we will look for linearity of a feature with respect to targe variable 'price'. \n\nWe will also look for skewness and kurtosis in our data distribution and perform data transformation and\/or removal of outliers when needed. Skewness essentially measures the symmetry of the distribution, while kurtosis determines the heaviness of the distribution tails.\n\n* If the skewness is between -0.5 and 0.5, the data are fairly symmetrical\n* If the skewness is between -1 and \u2014 0.5 or between 0.5 and 1, the data are moderately skewed\n* If the skewness is less than -1 or greater than 1, the data are highly skewed\n\nKurtosis is one of the two measures that quantify shape of a distribution. Kutosis determine the volume of the outlier. Kurtosis describes the peakedness of the distribution.\n\n* If the distribution is tall and thin it is called a leptokurtic distribution(Kurtosis > 3). Values in a leptokurtic distribution are near the mean or at the extremes.\n* A flat distribution where the values are moderately spread out (i.e., unlike leptokurtic) is called platykurtic(Kurtosis <3) distribution.\n* A distribution whose shape is in between a leptokurtic distribution and a platykurtic distribution is called a mesokurtic(Kurtosis=3) distribution. A mesokurtic distribution looks more close to a normal distribution.\n* High kurtosis in a data set is an indicator that data has heavy outliers.\n* Low kurtosis in a data set is an indicator that data has lack of outliers.\n* If kurtosis value + means pointy and \u2014 means flat.\n\nPearson correlation will be calculated to get correlation between a feature and the target variable 'price'\n* A value = 0 implies no correlation\n* A value closer to 0 implies weaker correlation\n* A value closer to 1 implies stronger positive correlation\n* A value closer to -1 implies stronger negative correlation.","b92104d1":"## Business Statements\n\n**Q1: What are the most predictive features to predict the price of a home?** \n\n**Q2: What features increase or decrease value of a home?** \n\n**Q3: How does age affect the value of a home?**\n\n**Q4: How does location affect the price of a home?** \n","f54ce8b4":"### Square footage of interior housing living space for the nearest 15 neighbors: 'sqft_living15'","d0a02e3c":"**Observations:**\n* 'waterfront' is positively correlated to 'price'.\n* There are houses without a waterfront make it into Above Median price but with waterfront, a house is guaranteed to be Above Median.","771f5046":"### \u2018date\u2019, 'yr_built'","8649f854":"**'waterfront'**","01515206":"## Prepare Categorical Data with One Hot Encoding","1f6e13f8":"**Observations:**\n* 'sqft_living' is strongly & positively correlated with target 'price'.\n* The higher the square footage of living space, the higher the price.\n* 4,500 sqft guarantees above price median.","5b28a575":"### Number of Floors: 'floors'","4824839f":"## Deal with duplicates","57380374":"**Observation:** We see multicollinearity between: 'sqft_living', 'sqft_above', 'sqft_living15', 'bathrooms', 'grade'\n\nWe will examine which of these features are to keep and which are to drop to avoid multicollinearity","46836611":"**Observation:**\n* There are more houses without a basement than with a basement.\n* The presence of a basement increases the price of a house but not always: there are houses without a basement still make to Above Median price and there are houses with a basement stay behind in Below Median price.\n* 'basement' is weakly & positively correlated to 'price'.","b706719c":"**Observation:** Quick scan for linearity\n* 'sqft_living' vs. 'price', 'sqft_living' vs. 'bathrooms', 'sqft_living' vs. 'sqft_above', 'sqft_living' vs. 'sqft_living15'\n* 'sqft_above' vs. 'grade'\n* 'sqft_living15' vs. 'grade', 'sqft_living15' vs. 'sqft_above'\n* 'price' vs. 'bedrooms', 'price' vs. 'bathrooms', 'price' vs. 'grade', 'price' vs. 'sqft_above', 'price' vs. 'sqft_living15'","f59a3fc1":"### Grade: overall grade given to the housing unit, based on King County grading system: 'grade'\n\nFrom grade 1 to 13:\n\n1-3 = Falls short of minimum building standards. Normally cabin or inferior structure.\n\n4 = Generally older, low quality construction. Does not meet code.\n\n5 = Low construction costs and workmanship. Small, simple design.\n\n6 = Lowest grade currently meeting building code. Low quality materials and simple designs.\n\n7 = Average grade of construction and design. Commonly seen in plats and older sub-divisions.\n\n8 = Just above average in construction and design. Usually better materials in both the exterior and interior finish work.\n\n9 = Better architectural design with extra interior and exterior design and quality.\n\n10 = Homes of this quality generally have high quality features. Finish work is better and more design quality is seen in the floor plans. Generally have a larger square footage.\n\n11 = Custom design and higher quality finish work with added amenities of solid woods, bathroom fixtures and more luxurious options.\n\n12 = Custom design and excellent builders. All materials are of the highest quality and all conveniences are present.\n\n13 = Generally custom designed and built. Mansion level. Large amount of highest quality cabinet work, wood trim, marble, entry ways etc.","03be0eb1":"**'date'**","14be68be":"Let's see how 'condition' and 'grade' are interacting.","233f7df5":"# In-Depth Look into Each Feature","becad7c0":"We see that majority of the houses are in condition 3 (average) and they surprisingly perform equally well as those with condition 4 (good) and condition 5 (very good). This could be an interesting feature to include in our model since there are obviously other interactions in play.","d87ea9e0":"## Deal with missing values","74771b8c":"# Q4: How does location affect the value of a home?","f361d278":"## Check for Multicollinearity","5cdabbf0":"# INTRODUCTION\n\n## [Read My Full Blog Here](https:\/\/baotramduong.medium.com\/data-science-vs-the-real-estate-in-king-county-washington-5d8798345543)","18616281":"Most homes are graded 7 (average) and 8 (above average).","6e90c1c6":"## Categorical variables","bf74e75a":"Dataset is from 2014 - 2015.","6c8234cf":"## Final Dataframe","5ef6bda2":"1. Casting columns to the appropriate data types\n2. Identifying and dealing with null and duplicated values appropriately\n3. Removing columns that aren't required for modeling\n4. Checking for normality with distplot, qqplot\n5. Checking for linearity with boxplot, correlation coefficient\n6. Removing outliers that are more than 3 standard deviation away from the mean\n7. Checking for and dealing with multicollinearity with heatmap\n8. Select potential features for modeling\n9. Normalizing the continuous\n10. One hot encoding categorical data","cc1ce3cf":"## Check for Linearity with Target Variable 'price'","b19b0144":"### Square footage of the home: 'sqft_living'","69ea4372":"We see that that there are many pairs of highly correlated features and the correct approach is to drop one variable from each pair.\n\n**Deal with non log transformed set:**\n\n* (sqft_living, sqft_above)\t= 0.876533\n* (sqft_living, grade) =\t0.762477\n* (grade, sqft_above) =\t0.756221\n* (sqft_living, sqft_living15) = 0.756186\n* (sqft_living, bathrooms) = 0.755522\n\n'sqft_living' seems to be the one to be dropped since it appears in all pairs.\n\n'grade' (0.667393) are more highly correlated with 'price' than 'sqft_above' (0.604916) but since we dropped 'sqft_living', we should at least keep 'sqft_above' as it is an informative feature about the house livable space. We will drop 'grade' instead and just use the initial EDA to answer business questions.\n\n**Deal with log transformed set:**\n\n* (sqft_lot_log, sqft_lot15_log) = 0.918609\n* (sqft_living_log, sqft_above_log)\t0.865062 \n* (sqft_living_log, bathrooms) = 0.761854\n\nDrop 'sqft_lot15_log' since square footage of lot does not correlate highly with 'price' as seen above. \n\nDrop 'sqft_living_log' since it is the common highly correlated feature.","be8586d8":"**Observations:**\n* 'condition' is weakly and positively correlated to 'price'.\n* 'condition' of at least 3 is needed to raise value of a home.\n* a low 'condition' score decreases the value of a home even if that home has high square footage.\n* High 'grade' does not matter if 'condition' is low.","028a5e15":"Higher number of bathrooms add value to the home. \nMajority of homes have 5 bathrooms or less. \nHouses with 5 or more bathrroms start to make a big difference.","6e03b172":"Extra bedrooms add extra values to the home. But after 6, the price starts to plateu or even decreases.","1d3980a5":"## Ordinal variables","5aee2d6a":"We can see there is an outlier at 30+ number of bedrooms. ","fbc4c9e5":"We see that 'yr_renovated' is zero-inflated, meaning there are lots of houses that did not get renovated. We can classify 'yr_renovated' as dichotomous variable: yes renovation (1) and no renovation (0)","ae085e9a":"Majority of homes have 1 floor. If they have an extra floor (2 - 2.5), price starts to increase but decrease if there are more than 2.5 floors.","ad48b22f":"Majority of the houses have 3 bedrooms. ","c5cde68e":"### 'yr_renovated'","6a36df99":"**'basememt', 'renovation', 'floor', 'waterfront', 'condition'** as string since we will use One Hot Encoding on them later","4751c6b2":"## Methodology\n\n**This part of the project includes:**\n\n1. Scrubbing data\n2. Preparing data\n3. Understanding data and answering business questions based on initial understanding","5192d84c":"## Summary","423a5a92":"There are 21597 samples and 21 features for each.","11938495":"**Observation:**\n* 'sqft_basement' datatye should be float\n* 'date', 'yr_built', 'yr_renovated' should be in datetime object","496d5452":"### Column Names and descriptions for Kings County Data Set\n* **id** - Unique identified for a house\n* **date** - Date house was sold\n* **price** - Price is prediction target\n* **bedrooms** - Number of Bedrooms\/House\n* **bathrooms** - Number of bathrooms\/bedrooms\n* **sqft_living** - Square footage of the home\n* **sqft_lot** - Square footage of the lot\n* **floors** - Total floors (levels) in house\n* **waterfront** - House which has a view to a waterfront\n* **view** - Has been viewed\n* **condition** - How good the condition is ( Overall )\n* **grade** - overall grade given to the housing unit, based on King County grading system\n* **sqft_above** - Square footage of house apart from basement\n* **sqft_basement** - Square footage of the basement\n* **yr_built** - Built Year\n* **yr_renovated** - Year when house was renovated\n* **zipcode** - Zipcode\n* **lat** - Latitude coordinate\n* **long** - Longitude coordinate\n* **sqft_living15** - Square footage of interior housing living space for the nearest 15 neighbors\n* **sqft_lot15** - Square footage of the land lots of the nearest 15 neighbors","447a76b3":"### Correct datatypes","a5f61bc9":"Majority of home is rated 3 in condition: Some evidence of deferred maintenance and normal obsolescence with age in that a few minor repairs are needed, along with some refinishing. All major components still functional and contributing toward an extended life expectancy. ","75cbc7df":"### Square footage of the lot: 'sqft_lot'","7795645e":"*  id:              dropped\n*  date:            dropped\n*  price:           target variable\n*  sqft_living:     dropped: multicollinarity  \n*  sqft_living_log: dropped: multicollinarity\n*  sqft_above:      dropped: multicollinarity  \n*  sqft_above_log:  dropped: multicollinarity\n*  sqft_basement:   dropped: zero-flated\n*  basement:        dichotomous OHE\n*  sqft_lot:        continuous \n*  sqft_lot_log:    dropped: multicollinarity \n*  sqft_living15:   \n*  sqft_living15_log: \n*  sqft_lot15:   \n*  sqft_lot15_log: \n*  yr_built:        dropped \n*  age:             continuous\n*  yr_renovated:    dropped: zero-flated \n*  renovation:      dichotomous OHE\n*  bedrooms:        ordinal \n*  bathrooms:       ordinal\n*  floors:          OHE \n*  waterfront:      OHE\n*  view:            dropped\n*  condition:       OHE\n*  grade:           ordinal\n*  zipcode:        \n*  zipcat:\n*  lat:            \n*  long:             \n           ","e86d8d98":"* Renovation adds value to the home but not that much. \n* Older houses need renovation more than newer houses\n* Age is more impactful than renovation hence, even if we renovate the house, if the house is old, it is not valued highly.","e6cb98a5":"### Square footage of basement: 'sqft_basement'","1f08849a":"We notice that the feature 'grade' plays a huge role in deciding the price of a house.\nGrade of 6 (lowest grade currently meeting building code) and below has below or about the mean value.\nGrade 7 (average grade of construction & design) and above is needed to pull the value of the home upward.\nGrade 12 and above guarantees substantial value for the home.","8e8ed1aa":"# Q3: How does age affect the value of a home? ","4b20f517":"## Time Data: \u2018date\u2019, \u2018yr_built\u2019, \u2018yr_renovated\u2019","1d0c13f8":"There are 21597 sample while 'id' has only 21420 counts, which means there are duplicates in the 'id' columns.","a5d027d2":"## Data Overview","044ace67":"### Price: 'price'","6d1af54d":"**'yr_renovated'**","8cdedd4e":"**'sqft_basement'**","87aadb22":"Since 'sqft_living' and 'sqft_above' is highly correlated with 'price' and 'bedrooms' is an integral part of them. Let's visualize their relationships. ","e243e9b3":"We see that the house with 33 bedrooms only has 1.75 bathrooms, which makes little sense. There are also houses with 10-11 bedrooms with only 2-3 bathrroms, which also makes little sense. We can assume that there is a typo in '33' or in '1.75': 3 bedrooms with 1.75 bathrooms, 13 bedrooms with 1.75 bathrooms or 33 bedrooms with 17.5 bathrooms, etc. Since this is the outlier that impacts our data spread, we will replace with the median value of 'bedrooms'.","a1b0bfd6":"### Condition: 'condition'\n\nRelative to age and grade. Coded 1-5.\n\n1 = Poor - Worn out. Repair and overhaul needed on painted surfaces, roofing, plumbing, heating and numerous functional inadequacies. Excessive deferred maintenance and abuse, limited value-in-use, approaching abandonment or major reconstruction; reuse or change in occupancy is imminent. Effective age is near the end of the scale regardless of the actual chronological age.\n\n2 = Fair - Badly worn. Much repair needed. Many items need refinishing or overhauling, deferred maintenance obvious, inadequate building utility and systems all shortening the life expectancy and increasing the effective age.\n\n3 = Average - Some evidence of deferred maintenance and normal obsolescence with age in that a few minor repairs are needed, along with some refinishing. All major components still functional and contributing toward an extended life expectancy. Effective age and utility is standard for like properties of its class and usage.\n\n4 = Good - No obvious maintenance required but neither is everything new. Appearance and utility are above the standard and the overall effective age will be lower than the typical property.\n\n5 = Very Good - All items well maintained, many having been overhauled and repaired as they have shown signs of wear, increasing the life expectancy and lowering the effective age with little deterioration or obsolescence evident with a high degree of utility.","6a4843ea":"### Square footage of house apart from basement: 'sqft_above'","85b3c3a6":"**Observations:**\n\n* 'grade' is strongly and positively correlated with 'price'.\n* The higher the grade, the higher the value of a home.\n* To get above the price median, a home needs to be at least grade 10.\n* There is also the 'sqft_living' and 'sqft_above' effect: the higher the square footage, the higher the grade.\n* Smaller square footage houses need at least grade 7 to get past the price median.","80946ff3":"Reminder: \n* A - Seattle, Shoreline, Lake Forest Park: 98177, 98133, 98125, 98155, 98107, 98115, 98105, 98109, 98112, 98117, 98199, 98122, 98144, 98118, 98108, 98106, 98136, 98126,98116, 98102, 98103, 98119, 98134\n\n* B - Kirkland, Kenmore, Bothell, Redmond, Woodinville: 98053, 98052, 98077, 98072, 98033, 98034, 98011, 98028\n\n* C - Bellevue, Mercer Island, Newcastle: 98059, 98056, 98006, 98040, 98008, 98007, 98005, 98004, 98039\n\n* D - Renton, Kent: 98057, 98055, 98058, 98032, 98031, 98030, 98178\n\n* E - Burien, Normandy Park, Des Moines, SeaTac, Tukwilla, Vashon Island: 98070, 98146, 98168, 98166, 98198, 98148, 98158, 98188\n\n* F - Federal Way, Auburn, Algona, Milton, Pacific: 98023, 98003, 98063, 98047, 98001, 98002, 98093, 98071, 98002, 98092\n\n* G - Sammamish, Issaquah, Carnation, Duvall: 98074, 98075, 98029, 98027, 98019, 98014\n\n* H - Covington, Maple Valley, Black Diamond, Enumclaw: 98022, 98042, 98010, 98038, 98051\n\n* I - Snoquaimie, North Bend: 98065, 98045, 98024","fc6a14c2":"# DATA EXPLORATION","dbc7d423":"The presence of a basement increases the value of the home.","ba528c82":"We no longer need 'yr_built' and 'date' so we are dropping them fron the dataset.","d5d9bca7":"### Waterfront: 'waterfront'","76a2b36d":"### Square footage of the land lots of the nearest 15 neighbors: 'sqft_lot15'","466485b5":"Once we've the cleaned data, we do some further EDA to check out the distributions of the various columns, examine the descriptive statistics for the dataset, and to create some initial visualizations to better understand the dataset.\n\n* Visualizing Distributions - Histplot with KDE\n* Visualizing Normality - QQplot\n* Visualizing Linearity - Boxplot of feature vs. 'price'\n* Visualizing Linearity - LMplot to see regression line vs. data distribution ","361b915b":"## Location Data: 'zipcode'","9d760077":"**Observations:**\n\n* 'sqft_lot' ranges from 520 - 1,625,359 sqft with majority of houses <50,000 sqft_lot\n* 'sqft_lot' is weakly & positively correlated to 'price'\n* Higher 'sqft_lot' does not equal to higher price","f0453aab":"Majority of home has 2.5 bathrooms.","87f1dd16":"**Observations:**\n* 'floors' is positively correlated to 'price'.\n* Higher number of floors can add value to houses that have smaller square footage.\n* Higher number of floors doesn't add more value to houses that have big square footage.\n* Higher number of floors with small square footage decreases the value of a home.\n* 2 floors is ideal to have, more than that is unneccessary.","1f3f783c":"## Data Source","eff62438":"# DATA SCRUBBING","4689b698":"**'view'**","64e03761":"We observe that 'grade' has a linear correlation with price. Although it is a categorical data, we will not use OHE on it.","c6ff2c6c":"We observe that zipcode 98004, 98039, 98040, 98112 are those with highest value. We can take a look at these zipcodes later.","759380c5":"### Number of Bedrooms: 'bedrooms'","9b4cf4b2":"# Q2: How to increase the value of a home?","3a494e9f":"We see that the '?' prevents us from correcting 'sqft_basement' to 'float64'. We need to fix this first.","57f25256":"**Observations:**\n\n* 'sqft_above' is strongly & positively correlated to 'price'\n* The higher the 'sqft_above' the higher the price","d8d0e277":"**Observations:**\n* 'age' is negatively correlated with 'price'.\n* The higher the 'age', the lower the 'price'.\n* With respect to 'sqft_living', 'age' does not matter much. Higher square footage is still valued at higher price.\n* Older houses tend to have lower 'grade'.\n* Those older houses with higher 'grade' of 10 and above is still valued equally high as newer houses with the same 'grade'.\n* New houses tend to score higher 'grade' of 10 and above.\n* Older houses with great 'condition' is valued equally high as new houses with average 'condition'.\n* New houses is largely scored only an average 'condition'.","77b6eec5":"**Observations:**\n\n* 'sqft_living15' is strongly & positively correlated with 'price'.\n* The higher the square footage of the nearest 15 neighbor houses, the higher the price for a house.\n* This demonstrates that neighborhood\/location is a value-adding feature when predict the price of a home.","2a5f0304":"Most houses have 1 - 2 floors.","ac310072":"We can section our maps into areas as such: Zipcode data is categoried (A-I) as per the zipcode map on the King County website: https:\/\/www.kingcounty.gov\/services\/gis\/Maps\/vmc\/Boundaries.aspx\n\n* A - Seattle, Shoreline, Lake Forest Park\n\n* B - Kirkland, Kenmore, Bothell, Redmond, Woodinville\n\n* C - Bellevue, Mercer Island, Newcastle\n\n* D - Renton, Kent\n\n* E - Burien, Normandy Park, Des Moines, SeaTac, Tukwilla, Vashon Island\n\n* F - Federal Way, Auburn, Algona, Milton, Pacific\n\n* G - Sammamish, Issaquah, Carnation, Duvall\n\n* H - Covington, Maple Valley, Black Diamond, Enumclaw\n\n* I - Snoquaimie, North Bend\n","95207f1f":"## Target Variable","f1d23279":"### Number of Bathrooms: 'bathrooms'","63b0c3be":"**Observations:**\n\n* 'bedrooms' is positively correlated with 'price'.\n* Higher number of bedrooms stops mattering if 'sqft_living' or 'sqft_above' is small.\n* Too many bedrooms to crowd square footage of the home will have less value.\n* 3 - 5 bedrooms is ideal for houses > 2,000 sqft of living space.\n* 1 - 2 bedrooms is idead for houses < 2,000 sqft of living space.","cd195bfe":"## Initial Observation of Data","2b6a51ad":"**Observations:**\n\n* 'bathrooms' is highly and positively correlated with 'price'\n* Higher number of bathrooms does not matter if 'sqft_living' or 'sqft_above' is low\n* Too many bathrooms crowding square footage of the home will have less value.\n* 'Penalty' of having too many 'bathrooms' is less severe than having too many 'bedrooms'","1a659937":"Most houses has no water view.","cae8c131":"Older built houses are lower in value than the newer built ones after 1970.","1d4abbc1":"**Observations:**\n* We see that properties that are 1.6M+ are clustered and increase in price as they go toward the center. \n* The yellow region of C which includes Bellevue, Mercer Island, Newcastle is the region with the highest values. \n* The neighboring region of G also stands out, including Sammamish, Issaquah, Carnation, Duvall\n* Both C and G have waterfront properties.\n* Both C and G have high 'sqft_living15'.\n* Both C and G are graded high, of 10 and above\n* Both C and G are average age, with G seems 'younger.'","9dbd8b1e":"**Observations:**\n\n* Similar to 'sqft_lot', 'sqft_lot15' is weakly & positively correlated to 'price'\n* There is a positive correlation between 'sqft_lot15' and 'price'\n","7fd063ee":"Houses with a waterfront view are valued highly.","84f716d7":"## Continuous Variables","dbc31427":"**Observations:**\n* Renovation is weakly and positively correlated with 'price'.\n* There are houses without renovation is still Above Median price and there are houses with renovation is still Below Median price.\n* Older houses tend to have renovation done. This explains why some older houses are scored high in 'grade' and 'condition'.","b253fabb":"We see that 'bedrooms', 'bathrooms', and 'grade' have somewhat of a linearity with respect to 'price.' We will look at them again later to determine if they belong to continous data group or categorical data group.","523e7dfd":"There are inflated value of 0 since many houses have no basement. Zero-inflated variable is cumbersome to work with so we will classify 'sqft_basement' as dichotomous variable."}}