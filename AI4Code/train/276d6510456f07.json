{"cell_type":{"5ac1f744":"code","e2ef4133":"code","7a3c8cf7":"code","25d46316":"code","245526fe":"code","a303cff2":"code","a54ac6cf":"code","de519c86":"code","c40b98f0":"code","aa3e79fd":"code","0c2ada79":"code","601bc04a":"code","969221dc":"code","58f80d0b":"code","ee030865":"code","2d9655fc":"code","71de5a87":"code","ab170821":"code","77a896e1":"markdown","8e543520":"markdown"},"source":{"5ac1f744":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e2ef4133":"from fbprophet import Prophet","7a3c8cf7":"df = pd.read_csv('\/kaggle\/input\/gold-prices\/monthly_csv.csv')\ndf.head()\n# rename columns\ndf.columns = ['ds', 'y']\ndf.head()","25d46316":"m = Prophet()\nm.fit(df)","245526fe":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","a303cff2":"forcast = m.predict(future)\nforcast[['ds','yhat','yhat_lower','yhat_upper']].tail()","a54ac6cf":"fig1 = m.plot(forcast)","de519c86":"fig2 = m.plot_components(forcast)","c40b98f0":"from fbprophet.plot import plot_plotly, plot_components_plotly\nplot_plotly(m, forcast)","aa3e79fd":"plot_components_plotly(m, forcast)","0c2ada79":"dfy=pd.read_csv('\/kaggle\/input\/gold-prices\/annual_csv.csv')\n# rename columns\ndfy.columns = ['ds', 'y']\ndfy.head()","601bc04a":"my=Prophet()\nmy.fit(dfy)","969221dc":"future_y = my.make_future_dataframe(periods=365)\nfuture_y.tail()","58f80d0b":"forecast_y = my.predict(future_y)\nforecast_y[['ds','yhat','yhat_lower','yhat_upper']].tail()","ee030865":"fig3 = my.plot(forecast_y)","2d9655fc":"fig4 = my.plot_components(forecast_y)","71de5a87":"plot_plotly(my, forecast_y)","ab170821":"plot_components_plotly(my, forecast_y)","77a896e1":"**Monthly Forecast**","8e543520":"**Yearly Forecast**"}}