{"cell_type":{"531d5fc1":"code","7db5fb8d":"code","29aa9a14":"code","b9dcabb7":"code","978c1afc":"code","a3b5eaec":"code","406a398d":"code","91a224ea":"code","f77330a7":"code","1255a9ab":"code","5fbf226a":"code","1f7d492e":"code","a2c64467":"code","c0391076":"code","43cdf3a4":"code","41af537f":"code","8ad9ddc4":"code","54432e41":"code","880a41d3":"code","6db50e63":"code","e59bcb9b":"markdown","9896fd73":"markdown","ac205803":"markdown","499ce944":"markdown","3f1b1226":"markdown","882b157a":"markdown","be602967":"markdown","d44d4e0b":"markdown","2a4bade1":"markdown","772b59d3":"markdown"},"source":{"531d5fc1":"import pandas as pd","7db5fb8d":"train_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/test.csv\")","29aa9a14":"label = train_df[\"label\"]","b9dcabb7":"train_df = train_df.drop([\"label\"], axis=1)","978c1afc":"train_df = train_df.astype('float32') \/ 255\ntest_df = test_df.astype('float32') \/ 255","a3b5eaec":"train_images = train_df.values.reshape((42000,28,28,1))\ntest_images = test_df.values.reshape((28000,28,28,1))","406a398d":"from sklearn import model_selection","91a224ea":"train_x,valid_x,train_y,valid_y = model_selection.train_test_split(train_images,label,\n                                                                   test_size=0.1,stratify=label,random_state=0)","f77330a7":"from keras.utils import to_categorical","1255a9ab":"train_labels = to_categorical(train_y)\ntest_labels = to_categorical(valid_y)","5fbf226a":"from keras.preprocessing.image import ImageDataGenerator\ngen = ImageDataGenerator(rotation_range=8, width_shift_range=0.08, shear_range=0.3,\n                         height_shift_range=0.08, zoom_range=0.08)","1f7d492e":"from keras import models\nfrom keras import layers\nfrom keras.layers.normalization import BatchNormalization\n","a2c64467":"model = models.Sequential()\nmodel.add(layers.Conv2D(128,(3,3),activation='relu',input_shape=(28,28,1)))\nmodel.add(layers.MaxPooling2D((2,2)))\nmodel.add(BatchNormalization())\nmodel.add(layers.Dropout(0.4))\nmodel.add(layers.Conv2D(128,(3,3),activation='relu'))\nmodel.add(layers.MaxPooling2D((2,2)))\nmodel.add(BatchNormalization())\nmodel.add(layers.Dropout(0.4))\nmodel.add(layers.Conv2D(128,(3,3),activation='relu'))\n#model.add(layers.MaxPooling2D((2,2)))\nmodel.add(layers.Dropout(0.4))\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(128,activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(layers.Dense(10,activation='softmax'))\nmodel.summary()","c0391076":"model.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])","43cdf3a4":"history = model.fit_generator(gen.flow(train_x,train_labels, batch_size=64),\n                              epochs = 20, validation_data = (valid_x,test_labels),\n                              steps_per_epoch=train_x.shape[0] \/\/ 64)\n","41af537f":"#model.fit(train_x,train_labels,epochs=20,batch_size=64,validation_data=(valid_x, test_labels))","8ad9ddc4":"valid_loss, valid_acc = model.evaluate(valid_x, test_labels)\nvalid_acc","54432e41":"pred_test = model.predict(test_images)\nytestpred = pred_test.argmax(axis=1)","880a41d3":"df = pd.read_csv('..\/input\/sample_submission.csv')\ndf['Label'] = ytestpred\ndf.head()","6db50e63":"df.to_csv('submission.csv', index=False)","e59bcb9b":"Get label dataset from training set","9896fd73":"Drop label set from training set","ac205803":"Read training & test dataset","499ce944":"Import to_categorical from Keras for One hot encoding of label set","3f1b1226":"Reframe datset to fit into (28,28,1) structure","882b157a":"Normalise dataset","be602967":"Import Pandas Library","d44d4e0b":"Import Keras Library","2a4bade1":"Built a CNN model with droput & batch normalization","772b59d3":"Import model_selection from sklearn & solit training set into training & validation set"}}