{"cell_type":{"c39450c8":"code","a9a1093d":"code","6fcaf392":"code","1fdb7a7f":"code","0d7570e3":"code","2ec4cb70":"code","66ed3e59":"code","9034bf55":"code","3d60593d":"code","7fa6fc10":"code","4c07b2be":"code","c6226718":"code","f3a77896":"code","75626320":"code","fdbf4a90":"code","7ff04eb1":"code","10da1713":"code","2ae12db7":"code","3985f0d6":"code","27e588aa":"code","48a0ef83":"code","0c6fa1a3":"code","f221923e":"code","ede2c792":"code","a6b30060":"markdown","0d9b7a11":"markdown","ba73f1cc":"markdown","4270b5ec":"markdown"},"source":{"c39450c8":"#importing data \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","a9a1093d":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport warnings\n\n\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_columns', None)","6fcaf392":"df  = pd.read_csv(\"\/kaggle\/input\/ethereum-frauddetection-dataset\/transaction_dataset.csv\")\n","1fdb7a7f":"df.sample(10)","0d7570e3":"df.dtypes","2ec4cb70":"#shape of the data \ndf.shape","66ed3e59":"df.drop(['Unnamed: 0','Index','Address'],axis =1,inplace = True)","9034bf55":"\ndf.describe ()","3d60593d":"for col in df:print(f'{col} : {len(df[col].unique())}')","7fa6fc10":"#checking the missing values \ndf.isnull().sum()","4c07b2be":"# Fraudulant Correlation\ndf_fraud = df[df['FLAG']==1]\ncorr = df_fraud.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)]=True\nwith sns.axes_style('white'):\n    fig, ax = plt.subplots(figsize=(18,20))\n    sns.heatmap(corr,  mask=mask, annot=False, cmap='YlGnBu',center=0, linewidths=0.8, square=True)\n\n","c6226718":"# Non-Fraudulant Correlation\ndf_not_fraud = df[df['FLAG']==0]\ncorr = df_fraud.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)]=True\nwith sns.axes_style('white'):\n    fig, ax = plt.subplots(figsize=(18,20))\n    sns.heatmap(corr,  mask=mask, annot=False, cmap='YlGnBu',center=0, linewidths=0.8, square=True)","f3a77896":"df.hist(figsize=(18,20))\n","75626320":"df.select_dtypes(include = ['float64','int64']).skew()","fdbf4a90":"sns.countplot(x=\"FLAG\", data=df)","7ff04eb1":"#counts of the FLAG category\ndf[\"FLAG\"].value_counts()","10da1713":"print(f'Percentage of non-fraudulent instances : {len(df.loc[df[\"FLAG\"]==0])\/len(df[\"FLAG\"])*100}')\nprint(f'Percentage of fraudulent instances : {len(df.loc[df[\"FLAG\"]==1])\/len(df[\"FLAG\"])*100}')","2ae12db7":"for i in df.select_dtypes(include = ['object']).columns:\n    print(f' {i} : {len(df[i].unique())}')","3985f0d6":"#let have a look at the values \ndf[df.select_dtypes(include = ['object']).columns].sample(10)","27e588aa":"#let have a look at the values \ndf[df.select_dtypes(include = ['object']).columns].head(10)","48a0ef83":"#let have a look at the values \ndf[df.select_dtypes(include = ['object']).columns].tail(10)","0c6fa1a3":"#lets check the frequecny of categorical values\ndf[' ERC20 most sent token type'].value_counts()","f221923e":"#lets check the frequecny of categorical values\ndf[' ERC20_most_rec_token_type'].value_counts()","ede2c792":"#it seems irrelvant for columns for creating our model and hence we will drop it \ndf.drop([' ERC20_most_rec_token_type',' ERC20 most sent token type'],axis =1,inplace = True)","a6b30060":"From the above graph and data we can see that our data is highly skewed","0d9b7a11":"Our data is highly imblance with 22% fraudlent instances.","ba73f1cc":"### Checking Imbalance ","4270b5ec":"##### Checking unique values of categorical columns"}}