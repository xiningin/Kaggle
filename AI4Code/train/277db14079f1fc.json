{"cell_type":{"0e2bb948":"code","3556ddcf":"code","878d9576":"code","ee626467":"code","2bf36c51":"code","78ab4523":"code","fd277ba5":"code","f0fad33c":"code","3ad47866":"code","947cbf5f":"code","edb4a021":"code","c049f06e":"code","b88472d0":"code","df67f723":"code","05c6aee8":"code","1d26bcf2":"code","545139cb":"code","d24081f4":"code","2d0032af":"code","b183ff88":"code","b463e12d":"code","9b58645e":"markdown","1e4a5523":"markdown","c06915bb":"markdown","8ce41d1c":"markdown","50a59906":"markdown","28d36af7":"markdown","27016b61":"markdown","6f195f4c":"markdown","1fccbeb4":"markdown","16af0c09":"markdown"},"source":{"0e2bb948":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ndataset = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/anv.csv', delimiter=',')\n","3556ddcf":"dataset.info()","878d9576":"dataset.describe()","ee626467":"dataset.head(20)","2bf36c51":"dataset.tail(20)","78ab4523":"datasetviz = dataset[['aeronave_pmd_categoria','aeronave_pmd','aeronave_ano_fabricacao','aeronave_fabricante',\n                      'aeronave_tipo_veiculo',\n                      'aeronave_operador_categoria',\n                      'aeronave_motor_tipo',\n                      'aeronave_motor_quantidade',\n                      'aeronave_fase_operacao',\n                      'total_fatalidades']]\ndatasetviz.tail(100)","fd277ba5":"arr_classific = [['aeronave_pmd_categoria','Qualitativa Nominal'],\n                 ['aeronave_pmd_categoria','Qualitativa Nominal'],\n                ['aeronave_ano_fabricacao','Qualitativa Ordinal'],\n              ['aeronave_tipo_veiculo','Qualitativa Nominal'],\n              ['aeronave_operador_categoria','Qualitativa Nominal'],\n              ['aeronave_motor_tipo','Qualitativa Nominal'],\n              ['aeronave_motor_quantidade','Qualitativa Ordinal'],\n              ['aeronave_fase_operacao','Qualitativa Nominal'],\n              ['total_fatalidades','Quantitativa Discreta'],\n                ['aeronave_pmd','Quantitativa Continua']\n                ]\ndtclassific = pd.DataFrame(data=arr_classific, columns=['Variable','Classification'])\ndtclassific","f0fad33c":"pmd=datasetviz[['aeronave_pmd_categoria','aeronave_pmd']].copy()\npmd[pmd['aeronave_pmd_categoria']=='***']","3ad47866":"datasetviz['aeronave_pmd_categoria'].replace(\n    to_replace=['***'],\n    value='SEM PESO',\n    inplace=True\n)\n\ndf_freq_fabric = pd.DataFrame(data=datasetviz['aeronave_pmd_categoria'].value_counts())\ndf_freq_fabric","947cbf5f":"#datasetviz[datasetviz['aeronave_ano_fabricacao'].isnull()]\ndatasetviz.update(datasetviz['aeronave_ano_fabricacao'].fillna(2008.0))\ndatasetviz['aeronave_ano_fabricacao'].replace(0,1936,inplace=True)\n\ndatasetviz['aeronave_ano_fabricacao'] = datasetviz['aeronave_ano_fabricacao'].astype(int)\ndf_ano_fabric = pd.DataFrame(data=datasetviz['aeronave_ano_fabricacao'].value_counts())\ndf_ano_fabric.reset_index().sort_values(by='index',ascending=True)","edb4a021":"datasetviz['aeronave_fabricante'].replace(\n    to_replace=['***'],\n    value='NAO INFORMADO',\n    inplace=True\n)\n\ndf_freq_fabric = pd.DataFrame(data=datasetviz['aeronave_fabricante'].value_counts())\ndf_freq_fabric\n","c049f06e":"df_freq_type = pd.DataFrame(data=datasetviz['aeronave_tipo_veiculo'].value_counts())\ndf_freq_type","b88472d0":"df_freq_oper_cat = pd.DataFrame(data=datasetviz['aeronave_operador_categoria'].value_counts())\ndf_freq_oper_cat","df67f723":"datasetviz['aeronave_motor_tipo'].replace(\n    to_replace=['***'],\n    value='NAO INFORMADO',\n    inplace=True\n)\ndf_freq_motor_type = pd.DataFrame(data=datasetviz['aeronave_motor_tipo'].value_counts())\ndf_freq_motor_type","05c6aee8":"datasetviz['aeronave_motor_quantidade'].replace(\n    to_replace=['***'],\n    value='NAO INFORMADO',\n    inplace=True\n)\ndf_freq_motor_quant = pd.DataFrame(data=datasetviz['aeronave_motor_quantidade'].value_counts())\ndf_freq_motor_quant","1d26bcf2":"datasetviz['aeronave_fase_operacao'].replace(\n    to_replace=['***'],\n    value='NAO INFORMADO',\n    inplace=True\n)\ndf_freq_fase_oper = pd.DataFrame(data=datasetviz['aeronave_fase_operacao'].value_counts())\ndf_freq_fase_oper","545139cb":"\ndf_freq_type = datasetviz['aeronave_tipo_veiculo'].value_counts().rename_axis('Tipo').reset_index(name='Freq')\ndf_freq_type = df_freq_type.sort_values('Freq', ascending=False)\n\ndf_freq_type.plot(x ='Tipo', y='Freq', kind = 'barh')\nplt.show()","d24081f4":"#agrupado por fatalidade\n#dt_operador_fatal = datasetviz.loc[datasetviz['total_fatalidades'] > 0][['aeronave_operador_categoria','total_fatalidades']].copy()\ndt_operador_fatal = datasetviz[['aeronave_operador_categoria','total_fatalidades']].copy()\ndt_operador_fatal = dt_operador_fatal.groupby(by=['aeronave_operador_categoria'],as_index=False)['total_fatalidades'].sum()\ndt_operador_fatal = dt_operador_fatal.sort_values('aeronave_operador_categoria', ascending=True)\n#agrupado por ocorrencias\ndt_operador_freq = datasetviz['aeronave_operador_categoria'].value_counts().reset_index().rename(columns={'index':'Operador','aeronave_operador_categoria':'Ocorrencias'})\ndt_operador_freq = dt_operador_freq.sort_values('Operador', ascending=True)\n#adicionando novo campo de ocorrencias no dataframe\nnew_ocorr = []\nfor index,row in dt_operador_fatal.iterrows():\n    new_ocorr.append(dt_operador_freq.loc[dt_operador_freq['Operador']==row['aeronave_operador_categoria']]['Ocorrencias'].values[0])\n\ndt_operador_fatal['Ocorrencias'] = new_ocorr\ndt_operador_fatal=dt_operador_fatal.sort_values('total_fatalidades', ascending=True)\ndt_operador_fatal\n\n\nfig, ax = plt.subplots(figsize=(18, 8))\nx = np.arange(len(dt_operador_fatal))\n# Define bar width. We'll use this to offset the second bar.\nbar_width = 0.4\n# Note we add the `width` parameter now which sets the width of each bar.\nb1 = ax.bar(x, dt_operador_fatal['Ocorrencias'],\n            width=bar_width, label='Ocorr\u00eancias')\n# Same thing, but offset the x by the width of the bar.\nb2 = ax.bar(x + bar_width,dt_operador_fatal['total_fatalidades'],\n            width=bar_width, label='Fatalidades')\n\nax.set_xticks(x + bar_width \/ 2)\nax.set_xticklabels(dt_operador_fatal['aeronave_operador_categoria'])\nax.legend()\nax.set_xlabel('', labelpad=15)\nax.set_ylabel('Fatalidade\/Ocorr\u00eancia', labelpad=15)\nax.set_title('Fatalidade vs Ocorr\u00eancia por categoria de operador', pad=15)\nax.yaxis.grid(True, color='#C0C0C0')\nax.xaxis.grid(False)","2d0032af":"dt_pmd_fatalidade = datasetviz[['aeronave_pmd','total_fatalidades']].copy()\ndt_pmd_fatalidade = dt_pmd_fatalidade[dt_pmd_fatalidade['total_fatalidades']>0]\n#dt_pmd_fatalidade\n\nx = dt_pmd_fatalidade['aeronave_pmd']\ny = dt_pmd_fatalidade['total_fatalidades']\nfig, ax = plt.subplots(figsize=(18, 8))\nplt.scatter(x, y, label = 'Pontos',  marker = 'o')\nax.set_xlabel('Peso M\u00e1ximo Decolagem', labelpad=15)\nax.set_ylabel('Fatalidade', labelpad=15)\nax.set_title('Rela\u00e7\u00e3o do peso de decolagem com o n\u00famero de fatalidades da ocorr\u00eancia', pad=15)\n  \nplt.show()","b183ff88":"#agrupado por fatalidade\n\ndt_pmd_categ_fatal = datasetviz[['aeronave_pmd_categoria','total_fatalidades']].copy()\ndt_pmd_categ_fatal = dt_pmd_categ_fatal.groupby(by=['aeronave_pmd_categoria'],as_index=False, sort=True)['total_fatalidades'].sum()\n#dt_pmd_categ_fatal = dt_pmd_categ_fatal.sort_values('aeronave_pmd_categoria', ascending=True)\n#agrupado por ocorrencias\ndt_pmd_categ_freq = datasetviz['aeronave_pmd_categoria'].value_counts().reset_index().rename(columns={'index':'Categoria_PMD','aeronave_pmd_categoria':'Ocorrencias'})\ndt_pmd_categ_freq = dt_pmd_categ_freq.sort_values('Categoria_PMD', ascending=True)\n#adicionando novo campo de ocorrencias no dataframe\nnew_ocorr = []\nfor index,row in dt_pmd_categ_fatal.iterrows():\n    new_ocorr.append(dt_pmd_categ_freq.loc[dt_pmd_categ_freq['Categoria_PMD']==row['aeronave_pmd_categoria']]['Ocorrencias'].values[0])\n\ndt_pmd_categ_fatal['Ocorrencias'] = new_ocorr\ndt_pmd_categ_fatal=dt_pmd_categ_fatal.sort_values('total_fatalidades', ascending=True)\ndt_pmd_categ_fatal\n\n\nfig, ax = plt.subplots(figsize=(18, 8))\nx = np.arange(len(dt_pmd_categ_fatal))\n# Define bar width. We'll use this to offset the second bar.\nbar_width = 0.4\n# Note we add the `width` parameter now which sets the width of each bar.\nb1 = ax.bar(x, dt_pmd_categ_fatal['Ocorrencias'],\n            width=bar_width, label='Ocorr\u00eancias')\n# Same thing, but offset the x by the width of the bar.\nb2 = ax.bar(x + bar_width,dt_pmd_categ_fatal['total_fatalidades'],\n            width=bar_width, label='Fatalidades')\n\nax.set_xticks(x + bar_width \/ 2)\nax.set_xticklabels(dt_pmd_categ_fatal['aeronave_pmd_categoria'])\nax.legend()\nax.set_xlabel('', labelpad=15)\nax.set_ylabel('Fatalidade\/Ocorr\u00eancia', labelpad=15)\nax.set_title('Ocorr\u00eancia e Fatalidade com Base no Peso ap\u00f3s Decolagem', pad=15)\nax.yaxis.grid(True, color='#C0C0C0')\nax.xaxis.grid(False)","b463e12d":"#agrupado por fatalidade\ndt_ano_fab_fatal = datasetviz[['aeronave_ano_fabricacao','total_fatalidades']].copy()\ndt_ano_fab_fatal = dt_ano_fab_fatal.groupby(by=['aeronave_ano_fabricacao'],as_index=False, sort=True)['total_fatalidades'].sum()\n\n#agrupado por ocorrencias\ndt_ano_fab_freq = datasetviz['aeronave_ano_fabricacao'].value_counts().reset_index().rename(columns={'index':'Ano_Fabricacao','aeronave_ano_fabricacao':'Ocorrencias'})\n#dt_ano_fab_freq = dt_operador_freq.sort_values('Ano_Fabricacao', ascending=True)\n#adicionando novo campo de ocorrencias no dataframe\nnew_ocorr = []\nfor index,row in dt_ano_fab_fatal.iterrows():\n    new_ocorr.append(dt_ano_fab_freq.loc[dt_ano_fab_freq['Ano_Fabricacao']==row['aeronave_ano_fabricacao']]['Ocorrencias'].values[0])\n\ndt_ano_fab_fatal['Ocorrencias'] = new_ocorr\ndt_ano_fab_fatal=dt_ano_fab_fatal.sort_values('aeronave_ano_fabricacao', ascending=True)\ndt_ano_fab_fatal\n\n\n\n# multiple line plot\n# x = aeronave_ano_fabricacao\n# y1 = Ocorrencias\n# y2 = total_fatalidades\nfig, ax = plt.subplots(figsize=(18, 8))\nax.plot('aeronave_ano_fabricacao', 'Ocorrencias', data=dt_ano_fab_fatal, marker='', color='blue', linewidth=2,)\nax.plot('aeronave_ano_fabricacao', 'total_fatalidades', data=dt_ano_fab_fatal, marker='', color='red', linewidth=2)\n#ax.axis([1936, 2017,0, dt_ano_fab_fatal['Ocorrencias'].sum()]) # [xmin, xmax, ymin, ymax]\nax.set_title('Evolu\u00e7\u00e3o de Fatalidades e Ocorr\u00eancias conforme Ano de Fabrica\u00e7\u00e3o', pad=15)\nax.legend()\n\n","9b58645e":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","1e4a5523":"# Dicas\n\n- Exemplo de acesso aos CSVs dispon\u00edveis no dataset\n> df = pd.read_csv('..\/input\/anv.csv', delimiter=',')","c06915bb":"### Evolu\u00e7\u00e3o Fatalidades e Ocorr\u00eancias conforme Ano de Fabrica\u00e7\u00e3o","8ce41d1c":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio 1 - Primeiro contato com o Kaggle\n(valendo nota)\n\n* **Data de entrega:** at\u00e9 o final da aula \n* **Professor:**  Matheus Mota\n* **Aluno:** Thiago Antonio Pedroso\n* **RA:** 191601","50a59906":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Exerc\u00edcio 1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","28d36af7":"### Ocorr\u00eancia e Fatalidade com Base no Peso ap\u00f3s Decolagem","27016b61":"### Ocorr\u00eancias por tipo de veiculo","6f195f4c":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n","1fccbeb4":"### Rela\u00e7\u00e3o do peso de decolagem com o n\u00famero de fatalidades da ocorr\u00eancia","16af0c09":"### N\u00famero de acidentes com fatalidade por categoria de operador"}}