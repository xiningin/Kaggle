{"cell_type":{"73d68e07":"code","caf8ff0b":"code","554aab78":"code","88364522":"code","a3c5e6f0":"code","276c9212":"code","eb692f17":"code","23049353":"code","eb5473d4":"code","b4a7d3f7":"code","96ee866b":"code","ef7c8eb6":"code","d10af985":"code","1d492f61":"code","0fc3dffb":"code","825b83b6":"code","cd10c50c":"code","8ee0b616":"code","f26fd9f4":"code","d3d96d28":"code","2e2d1508":"code","1ab616c2":"code","510d8f29":"code","00285f01":"code","e03775b5":"code","eb064f70":"code","af3d03f8":"code","6cc0c3c3":"code","b970e1e4":"code","1bab1f44":"code","de317488":"code","5622b8ea":"code","d13c615f":"code","8444e00c":"code","9103d5d8":"code","4f394008":"code","c989af6b":"code","08673086":"code","8a1d359f":"code","b6c4d875":"code","e9dc773c":"code","99863abc":"code","43abdb95":"code","f1e1c212":"code","bb35b060":"code","69af4458":"code","6554d08d":"code","516e7ffe":"code","78a0b7e3":"code","3a931d75":"code","0a99834c":"markdown","3476045e":"markdown","ee304dfa":"markdown","bbfd1107":"markdown","ad0511cd":"markdown","587e62b7":"markdown","29fcecb7":"markdown","a23a169a":"markdown","28cca939":"markdown","addc9d11":"markdown","47424a2e":"markdown"},"source":{"73d68e07":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nplt.rcParams['font.sans-serif']=['SimHei'] #\u7528\u6765\u6b63\u5e38\u663e\u793a\u4e2d\u6587\u6807\u7b7e\nfrom plotly import tools\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px","caf8ff0b":"gps=pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')","554aab78":"gps.info()\n#\u67e5\u770b\u57fa\u672c\u4fe1\u606f","88364522":"for i in gps.columns:\n    print(i,end=' ')\n    print(type(gps[i][1]))\n#\u5f97\u5230column\u7684\u5c5e\u6027","a3c5e6f0":"gps['Rating']=gps['Rating'].astype(float)\n#\u5c06\u8bc4\u4ef7\u7b49\u7ea7\u6539\u4e3afloat\u683c\u5f0f","276c9212":"gps['Reviews']=gps['Reviews'].apply(lambda x : x.replace('3.0M','3000000'))","eb692f17":"gps['Reviews']=gps['Reviews'].astype(int)\n#\u5c06Reviews\u6539\u4e3aint\u683c\u5f0f","23049353":"gps['Installs']=gps['Installs'].apply(lambda x : x.replace('+','') if '+' in x else x)\ngps['Installs']=gps['Installs'].apply(lambda x : x.replace(',','') if ',' in x else x)","eb5473d4":"gps['Installs'].unique()\n#\u53ef\u4ee5\u53d1\u73b0\u6709\u4e9b\u6570\u636e\u4e0d\u7b26\u5408\uff0c\u5982Free","b4a7d3f7":"gps=gps[gps['Installs']!='Free']","96ee866b":"gps['Installs']=gps['Installs'].astype(int)","ef7c8eb6":"gps['Size'] = gps['Size'].apply(lambda x: str(x).replace('Varies with device', 'NaN') if 'Varies with device' in str(x) else x)\ngps['Size'] = gps['Size'].apply(lambda x: str(x).replace('M', '') if 'M' in str(x) else x)\ngps['Size'] = gps['Size'].apply(lambda x: str(x).replace(',', '') if 'M' in str(x) else x)\ngps['Size'] = gps['Size'].apply(lambda x: float(str(x).replace('k', '')) \/ 1000 if 'k' in str(x) else x)\ngps['Size'] = gps['Size'].apply(lambda x: float(x))\n#\u5904\u7406Size\u7684\u683c\u5f0f","d10af985":"gps['Price']=gps['Price'].apply(lambda x: x.replace('$','') if '$' in x else x)\ngps['Price']=gps['Price'].astype(float)\n#\u5904\u7406Price\u7684\u683c\u5f0f","1d492f61":"gps.index=np.arange(10840)","0fc3dffb":"avg_rate = gps.groupby('Category',as_index=False)[['Rating','Installs']].mean()\navg_rate.head(5)","825b83b6":"color = sns.color_palette()\n%matplotlib inline","cd10c50c":"avg_rate_data = [go.Histogram(\n        x = gps.Rating,\n        xbins = {'start': 1, 'size': 0.1, 'end' :5}\n)]\n\nprint('Average app rating:', np.mean(gps['Rating']))\npy.offline.iplot(avg_rate_data, filename='rating_dist')","8ee0b616":"def box_plot(reference_data,reference_column,datas,xlabel,title):\n    traces = []\n    avg_rate=reference_data\n    Category=str(reference_column)\n    a = avg_rate[Category].tolist()\n    for i in range(len(a)):\n        y = np.array(datas[datas[Category] == a[i]].Rating)\n        trace = go.Box(\n            y=y,\n            name = a[i])\n        traces.append(trace)\n    layout = go.Layout(\n    title=str(title),\n    xaxis=dict(\n        title=str(xlabel),\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=15,\n            color='salmon'\n        ))# xaxis \u8bbe\u7f6e\u6ce8\u91ca\u683c\u5f0f\n    )    \n    data_avg_rating = traces\n    fig = go.Figure(data=data_avg_rating, layout=layout)\n    plot_url = py.iplot(fig, filename='avg_rating-plot')","f26fd9f4":"box_plot(avg_rate,'Category',gps,'the various of App',\\\n         'the Ratings of various types of paid App')","d3d96d28":"type_free=gps[gps['Type']=='Free'].groupby('Category',as_index=False)\\\n['Reviews'].sum()\nfree_app_pie=[go.Pie(\n    labels=type_free['Category'].tolist(),\n    values=type_free['Reviews'].tolist(),\n    title='the amount of reviews of various paid App',\n    title_font_color='crimson',\n    title_font_size=15,\n    hoverinfo='label+value',\n    name='Reviews by Category'\n)]\npy.offline.iplot(free_app_pie,filename='active_category')","2e2d1508":"values=avg_rate['Installs'].sort_values(ascending=False)\nlabels=avg_rate['Category']\nfig=go.Figure(data=[go.Pie(values=values,labels=labels)])\nfig.update_layout(title_text='the Analysis of various of App',title_font_color='crimson')\nfig.show()","1ab616c2":"category=plt.figure(figsize=(12,8))\ncatagory=sns.countplot(x='Category',data=gps,palette='Set3')\ncatagory.set_xticklabels(catagory.get_xticklabels(), rotation=90, ha=\"right\")\nplt.title('Number of Apps in each category',size = 15,color='crimson')\nplt.grid(True)\nplt.show()\n","510d8f29":"plt.figure(figsize = (14,7))\nsns.regplot(x=\"Reviews\", y=\"Rating\", \\\n            data=gps[gps['Reviews']<100000]);\nplt.title('Reviews Vs Ratings for an App',size = 15)\nplt.show()\n#\u8bc4\u5206\u548c\u8bc4\u8bba\u6570\u7684\u7ebf\u6027\u76f8\u5173\u6027\u5f88\u5f3a\uff0c\u8bef\u5dee\u8303\u56f4\u5f88\u5c0f\uff08\u9634\u5f71\u90e8\u5206\uff09","00285f01":"gps.groupby('Type',as_index=False)['Installs'].mean()\n#\u5206\u6790\u4ed8\u8d39APP\u7684\u57fa\u672c\u60c5\u51b5","e03775b5":"paid_app=gps[gps['Type']=='Paid']\navg_paid=paid_app.groupby('Category',as_index=False)[['Rating','Installs']].mean()","eb064f70":"labels=avg_paid['Category']\nvalues=avg_paid['Installs'].sort_values(ascending=False)\nfig=go.Figure(data=[go.Pie(values=values,labels=labels)])\nfig.update_layout(title_text='The Analysis of paid App',title_font_color='crimson')\nfig.show()","af3d03f8":"paid_app.sort_values(by='Price',ascending=False).head(5)\n#\u53d1\u73b0\u4e00\u4e9b\u597d\u8d35\u7684APP\uff01\uff01\uff01","6cc0c3c3":"review_file=pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv')","b970e1e4":"review_file['Sentiment'].unique()","1bab1f44":"review_file=review_file.dropna(axis=0)","de317488":"review_file.index=np.arange(37427)","5622b8ea":"review_file.head(5)","d13c615f":"import wordcloud ","8444e00c":"review_file.groupby('App').count()","9103d5d8":"text=''\ni=0\nwhile i < 37427:\n    if review_file['App'][i]==review_file['App'][1]:\n        data=review_file['Translated_Review'][i]\n        text+=data\n    else :\n        break\n    i+=1","4f394008":"from PIL import Image","c989af6b":"wd=wordcloud.WordCloud(background_color='white',collocations=False).generate(text)\nfig=plt.figure(dpi=300)\nplt.axis('off')\nplt.imshow(wd)\n# color_func \u5b57\u4e91\u989c\u8272\u8bbe\u7f6e\n# background_color \u80cc\u666f\u989c\u8272\n# mask \u56fe\u5f62 \uff08\u4f7f\u7528np.array\u8bfb\u53d6\u4e3a\u591a\u5143\u6570\u7ec4\u683c\u5f0f\uff09\n# collocations \u91cd\u590d\u5b57\u662f\u5426\u51fa\u73b0","08673086":"len(review_file['App'].unique())","8a1d359f":"gps['App']. count()","b6c4d875":"review_by_category=gps.loc[gps['App'].isin(review_file['App'].unique())]\\\n                    .groupby('Category').count().sort_values(by='Type',ascending=False)","e9dc773c":"review_by_category.head(5)","99863abc":"game_analysis=review_file.loc[review_file['App'].isin(gps[gps['Category']=='GAME']['App'])]\ngame_analysis.index=np.arange(6678)","43abdb95":"game_analysis.head(5)","f1e1c212":"review_game=''\nfor i in range(len(game_analysis)):\n    review_game+=game_analysis['Translated_Review'][i]","bb35b060":"wc=wordcloud.WordCloud(collocations=False).generate(review_game)\nplt.figure(dpi=250)\nplt.axis('off')\nplt.imshow(wc)","69af4458":"useless_word=['play','ad','make','even','take','really']\nfor i in useless_word:\n    review_game_1=review_game.replace(i,'')","6554d08d":"wc=wordcloud.WordCloud(collocations=False,background_color='lightblue').generate(review_game_1)\nplt.figure(dpi=250)\nplt.axis('off')\nplt.imshow(wc)","516e7ffe":"review_by_category.head(5)","78a0b7e3":"health_word=''\nhealth_reviews=review_file.loc[review_file['App'].isin(gps[gps['Category']=='HEALTH_AND_FITNESS']['App'])]\nhealth_reviews.index=np.arange(len(health_reviews))\nfor i in range(len(health_reviews)):\n    health_word+=health_reviews['Translated_Review'][i]\nuseless_health_word=['app','day','much','make','even','really']\nfor i in useless_health_word:\n    health_word=health_word.replace(i,'')\nwd=wordcloud.WordCloud(collocations=False,background_color='pink').generate(health_word)\nplt.figure(dpi=250)\nplt.axis('off')\nplt.imshow(wd)","3a931d75":"import pandas as pd\ngoogleplaystore = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")\ngoogleplaystore_user_reviews = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv\")","0a99834c":"#### \u53bb\u9664\u65e0\u5173\u8bcd\u6c47","3476045e":"#### \u5b57\u4e91\u5c55\u793a","ee304dfa":"### \u9996\u5148\u5206\u6790\u4e00\u4e0b\u7b2c\u4e00\u4e2aAPP\u7684\u8bc4\u4ef7","bbfd1107":"## \u5176\u4ed6\u7c7bApp\u60c5\u51b5","ad0511cd":"### \u540e\u7eed\u5206\u6790","587e62b7":"### \u5206\u6790\u6e38\u620f\u7c7b\u7684\u9ad8\u9891\u8bc4\u4ef7","29fcecb7":"### \u53d1\u73b0\u6709\u4e9bAPP\u6ca1\u6709\u8bc4\u8bba\uff0c\u63a5\u4e0b\u6765\u57fa\u4e8e\u8bc4\u8bba\u6570\u5206\u6790\u54ea\u4e9b\u7c7b\u578b\u7684APP\u66f4\u53d7\u6b22\u8fce","a23a169a":"## wordcloud \u5e93\u5206\u6790\u8bc4\u8bba\n","28cca939":"#### \u5176\u4ed6\u53c2\u6570\n\u53c2\u6570\u540d|\u89e3\u91ca\n--|:--:\nfont_path=|\u8bbe\u7f6e\u5b57\u4f53\nbackground_color=|\u80cc\u666f\u989c\u8272\nmax_words=|\u8bcd\u4e91\u663e\u793a\u7684\u6700\u5927\u8bcd\u6570\nmax_font_size=|\u5b57\u4f53\u6700\u5927\u503c\nmin_font_size=|\u5b57\u4f53\u6700\u5c0f\u503c\nrandom_state=|\u968f\u673a\u6570\ncollocations=|\u907f\u514d\u91cd\u590d\u5355\u8bcd\nmask=|\u9020\u578b\u906e\u76d6","addc9d11":"- avg_rate=input('\u8bf7\u8f93\u5165\u53c2\u8003\u96c6')\n- Category=str(input('\u8bf7\u8f93\u5165\u53c2\u8003\u5217'))\n- target=input('\u8bf7\u8f93\u5165\u76ee\u6807\u96c6')\n- xlabel=str(input('\u8bf7\u8f93\u5165X\u8f74\u6807\u7b7e'))\n- title=str(input('\u8bf7\u8f93\u5165\u8868\u540d\u6807\u7b7e'))\n- \u4e00\u4e2a\u5c1d\u8bd5\uff0c\u5c06\u8be5\u51fd\u6570\u6cdb\u7528\uff08\u53ef\u4ee5\u6539\u4e3aPython\uff09","47424a2e":"> ### \u8fd9\u91cc\u5efa\u7acb\u4e86\u4e00\u4e2a\u5236\u8868\u51fd\u6570\uff0c\u57fa\u4e8eplotly\u7684box(\u5f15\u7528\u81eakaggle\u7684\u4ee3\u7801"}}