{"cell_type":{"d3c5f157":"code","23814eef":"code","f81a726c":"code","abc9d76f":"code","5da833f4":"code","9d98308d":"code","1b7cd3ee":"code","da1a302e":"code","4e7d6001":"code","e0a51b11":"code","9645df2c":"code","583525e6":"code","0c07069d":"code","ce583959":"code","11225ee4":"code","330a4078":"code","c6f4bd73":"code","c8b35d29":"code","9579f02a":"code","107d36ec":"code","8ae94780":"code","4cbdf0f6":"code","712e0c8e":"code","9ae3b6c7":"code","73f65733":"code","a9e1e9f6":"code","a20165d3":"code","c9f0eb0c":"code","6eb226c7":"code","3e60ae4d":"code","2a68c0a7":"code","bd7c2144":"code","c56983ca":"code","25bb5aaa":"code","a6682551":"code","1d3d8f8f":"code","f51e947c":"code","291d80b7":"markdown","80012f7a":"markdown","349aa237":"markdown","bb4b1389":"markdown","84445da2":"markdown","951b1af4":"markdown","a33b75f6":"markdown","b9c360cc":"markdown","6d16eb92":"markdown","d31994ea":"markdown","b801be13":"markdown"},"source":{"d3c5f157":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# set the graphs to show in the jupyter notebook\n%matplotlib inline\n\n# set seabor graphs to a better style\nsns.set(style=\"ticks\")","23814eef":"#importing the Dataset\ncustomer = pd.read_csv('..\/input\/retail-dataset\/Customer.csv')\nprod_cat_info = pd.read_csv('..\/input\/retail-dataset\/prod_cat_info.csv')\nTransactions = pd.read_csv('..\/input\/retail-dataset\/Transactions.csv')","f81a726c":"inter = pd.merge(Transactions,prod_cat_info,left_on = ['prod_cat_code','prod_subcat_code'],right_on = ['prod_cat_code','prod_sub_cat_code'])","abc9d76f":"Customer_Final = pd.merge(customer,inter,left_on = 'customer_Id',right_on = 'cust_id')","5da833f4":"Customer_Final.drop(['cust_id','prod_subcat_code'],axis=1,inplace=True)\nCustomer_Final.head()","9d98308d":"#Converting \"DOB\" and \"Tran_date\" dtype from object to datetime\nCustomer_Final.DOB = Customer_Final.DOB.astype(np.datetime64)\nCustomer_Final.tran_date = Customer_Final.tran_date.astype(np.datetime64)","1b7cd3ee":"#Checking For Duplicates\nCustomer_Final.duplicated().sum()","da1a302e":"#dropping duplicates\nCustomer_Final.drop_duplicates(inplace=True)","4e7d6001":"Customer_Final.isnull().sum()","e0a51b11":"#Replacing nan Value with N\/A in Customer_Final Dataset\nCustomer_Final.fillna('N\/A',inplace=True)","9645df2c":"#a. Get the column names and their corresponding data types\nCustomer_Final.info()","583525e6":"#b. Top\/Bottom 10 observations\nCustomer_Final.head(10)","0c07069d":"Customer_Final.tail(10)","ce583959":"# c. \u201cFive-number summary\u201d for continuous variables (min, Q1, median, Q3 and max)\nCustomer_Final.describe()\n        ","11225ee4":"# d. Frequency tables for all the categorical variables\nCustomer_Final.loc[:,Customer_Final.dtypes == 'object'].describe()","330a4078":"# histograms for all continuous variables\n\ncontinuous_var = Customer_Final.loc [:,['prod_cat_code','Qty','Rate','Tax','total_amt','prod_sub_cat_code']]\ncontinuous_var.columns","c6f4bd73":"for i in continuous_var.columns:\n    continuous_var[i].plot(kind='hist')\n    plt.title(i)\n    plt.show()","c8b35d29":"# frequency bars for categorical variables\n\ncategorical_var = Customer_Final.loc[:,Customer_Final.dtypes=='object']\ncategorical_var.columns","9579f02a":"for i in categorical_var.columns:\n    if i == 'prod_subcat':\n        plt.figure(figsize=(8,8))\n        categorical_var.groupby(\"prod_subcat\")[\"prod_subcat\"].count().plot(kind = \"barh\")\n        plt.xlabel(\"Frequency\")\n        plt.ylabel(\"Product sub-category\")\n        plt.show()\n        \n    else:\n        plt.figure(figsize=(8,8))\n        categorical_var.groupby(i)[i].count().plot(kind = \"bar\")\n        plt.ylabel('Frequency')\n        plt.show()","107d36ec":"# a. Time period of the available transaction data\n\ntp_min = Customer_Final.tran_date.min()\ntp_max = Customer_Final.tran_date.max()\n\nprint('Time period of the available transaction data is from ' + pd.Timestamp.strftime(tp_min,format = '%d-%b-%y') + ' to ' +  pd.Timestamp.strftime(tp_max,format = '%d-%b-%y'))","8ae94780":"# b. Count of transactions where the total amount of transaction was negative\n\nCustomer_Final[Customer_Final.total_amt < 0]['transaction_id'].count()","4cbdf0f6":"populer_products = Customer_Final.groupby(['Gender','prod_cat'])['Qty'].sum().reset_index()\npopuler_products.pivot(index = 'Gender',columns = 'prod_cat', values = 'Qty')","712e0c8e":"print('Products popular in Females are : \\n 1. Books \\n 2. Electronics \\n 3. Home and kitchen \\n')\nprint('Products popular in Males are : \\n 1. Books \\n 2. Electronics \\n 3. Home and kitchen \\n 4. Clothing')","9ae3b6c7":"cust_grp = Customer_Final.groupby('city_code')['customer_Id'].count().sort_values(ascending = False)\npct = round(cust_grp[4.0]\/cust_grp.sum()*100,2)\ncust_grp","73f65733":"print('City code 4.0 has the maximum customers and the percentage of customers from the city is',pct)","a9e1e9f6":"Customer_Final.groupby(['Store_type'])[['Qty','Rate']].sum().sort_values(by = 'Qty', ascending = False)","a20165d3":"store_grp = round(Customer_Final.pivot_table(index = 'prod_cat', columns = 'Store_type', values = 'total_amt', aggfunc =  'sum'),2)\nstore_grp","c9f0eb0c":"t_amt = store_grp.loc[['Electronics','Clothing'],'Flagship store'].sum()\nprint('The total amount earned from the Electronics and Clothing categories from Flagship Stores is',t_amt)\n","6eb226c7":"g_grp = round(Customer_Final.pivot_table(index = 'prod_cat', columns = 'Gender', values = 'total_amt', aggfunc = 'sum'),2)\ng_grp","3e60ae4d":"m_amt = g_grp.loc['Electronics','M'].sum()\nprint('The total amount earned from \"Male\" customers under the \"Electronics\" category is',m_amt)","2a68c0a7":"# Creating a DF which have no negative transactions\npos_tran = Customer_Final[Customer_Final.total_amt>0]\npos_tran","bd7c2144":"#creating a new df that have unique positive transaction\nunq_tran = pos_tran.groupby(['customer_Id','prod_cat_code','prod_sub_cat_code'])['transaction_id'].count().reset_index()\nunq_tran","c56983ca":"unq_tran.loc[unq_tran.transaction_id > 10]","25bb5aaa":"print(\"There are no unique transactions greater than 10\")","a6682551":"now = pd.Timestamp('now')\nCustomer_Final['DOB'] = Customer_Final['DOB'].where(Customer_Final['DOB'] < now, Customer_Final['DOB'] - np.timedelta64(100, 'Y'))\nCustomer_Final['AGE'] = (now - Customer_Final['DOB']).astype('<m8[Y]')\n\nCustomer_Final['Age_cat'] = pd.cut(Customer_Final['AGE'],bins=[24,35,46,57],labels=['25-35','36-46','47-57'],include_lowest=True)\nCustomer_Final","1d3d8f8f":"# a. What was the total amount spent for \u201cElectronics\u201d and \u201cBooks\u201d product categories \n\ncust_spent = Customer_Final.groupby(['Age_cat','prod_cat'])['total_amt'].sum()\nround(cust_spent.loc['25-35',['Electronics','Books']].sum(),2)","f51e947c":"# b. What was the total amount spent by these customers between 1st Jan, 2014 to 1st Mar, 2014?\n\ncust_25_35 = Customer_Final[Customer_Final.Age_cat == '25-35']\nt_amt = cust_25_35[(cust_25_35.tran_date >= '2014-01-01') & (cust_25_35.tran_date <= '2014-03-01')]\nt_amt['total_amt'].sum()","291d80b7":"# 6. Which City code has the maximum customers and what was the percentage of customers from that city?","80012f7a":"# 2. Prepare a summary report for the merged data set.\n#### a. Get the column names and their corresponding data types\n#### b. Top\/Bottom 10 observations\n#### c. \u201cFive-number summary\u201d for continuous variables (min, Q1, median, Q3 and max)\n#### d. Frequency tables for all the categorical variables","349aa237":"# 9. What was the total amount earned from \"Male\" customers under the \"Electronics\" category?","bb4b1389":"# 5. Analyze which product categories are more popular among females vs male customers.","84445da2":"# 1. Merge the datasets Customers, Product Hierarchy and Transactions as Customer_Final. \nEnsure to keep all customers who have done transactions with us and select the join type accordingly.","951b1af4":"# 11. For all customers aged between 25 - 35, find out:\n#### a. What was the total amount spent for \u201cElectronics\u201d and \u201cBooks\u201d product categories?\n#### b. What was the total amount spent by these customers between 1st Jan, 2014 to 1st Mar, 2014?","a33b75f6":"# 8. What was the total amount earned from the \"Electronics\" and \"Clothing\" categories from Flagship Stores?","b9c360cc":"# 7. Which store type sells the maximum products by value and by quantity?","6d16eb92":"# 3. Generate histograms for all continuous variables and frequency bars for categorical variables.","d31994ea":"# 4. Calculate the following information using the merged dataset :\n#### a. Time period of the available transaction data\n#### b. Count of transactions where the total amount of transaction was negative","b801be13":"# 10. How many customers have more than 10 unique transactions, after removing all transactions which have any negative amounts?"}}