{"cell_type":{"30b82b2e":"code","f1bf1c33":"code","d1743e2f":"code","6775f838":"code","976c2bc8":"code","57e96563":"code","64a54faf":"markdown","bce83cab":"markdown","0ea8b4ae":"markdown","230d4d4f":"markdown","1520c5c1":"markdown"},"source":{"30b82b2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split # splitting the dataset into training data and test data\nfrom sklearn.linear_model import LinearRegression #  to built Linear Regression model\nfrom sklearn.compose import ColumnTransformer # to Encode column with 'str' datatype\nfrom sklearn.preprocessing import OneHotEncoder # encoder used\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f1bf1c33":"filepath = '..\/input\/fish-market\/Fish.csv'\ndataset = pd.read_csv(filepath)","d1743e2f":"# Selecting features and Labels\n\ndataset = dataset.dropna()\nfeatures = ['Length1', 'Length2', 'Length3', 'Height', 'Width', 'Species']\nx = dataset.loc[:, features].values\ny = dataset.loc[:, 'Weight'].values\n\n# Encoding the categorical data in the feature\nct = ColumnTransformer(transformers = [('encode', OneHotEncoder(), [-1])], remainder = 'passthrough')\nx = np.array(ct.fit_transform(x))","6775f838":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","976c2bc8":"regressor = LinearRegression()\nregressor.fit(x_train, y_train)","57e96563":"y_pred = regressor.predict(x_test)\nnp.set_printoptions(precision = 2)\nprint(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), 1))","64a54faf":"## Splitting the dataset into training and test dataset","bce83cab":"## Training the Multiple Linear Regression model on the Training set","0ea8b4ae":"## Encoding categorical data","230d4d4f":"## Predicting the data using the model","1520c5c1":"## Importing Dataset"}}