{"cell_type":{"fc897cff":"code","326a873f":"code","e0e3a634":"markdown","33f34594":"markdown"},"source":{"fc897cff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","326a873f":"class Vehicle:\n    def __init__(self):\n        self.mileage=None\n        self.fuel_left=None\n    \n    def identify_distance_travelled(self,initial_fuel):\n        distance_travelled=(initial_fuel-self.fuel_left)* self.mileage\n        return distance_travelled\n    def identify_distance_that_can_be_travelled(self):\n        initial_fuel=15\n        distance_travelled=self.identify_distance_travelled(initial_fuel)\n        if self.fuel_left>5:\n            return (initial_fuel-5)*self.mileage- distance_travelled\n        else:\n            return 0\nv1=Vehicle()\nv1.mileage=10\nv1.fuel_left=20\nprint(v1.identify_distance_that_can_be_travelled())","e0e3a634":"**EXERCISE6**\nA vehicle is identified by its mileage (in kms per litre) and fuel left (in litres) in the vehicle. From the fuel left, 5 litres will always be considered as reserve fuel. At any point of time, the driver of the vehicle may want to know:\nthe maximum distance that can be covered without using the reserve fuel\nhow many kms he\/she has already travelled based on the initial fuel the vehicle had\nWrite a Python program to implement the class chosen with its attributes and methods based on the requirements given below:\nidentify_distance_that_can_be_travelled(): Return the distance that can be travelled by the vehicle without using the reserve fuel. If the fuel left is less than or equal to reserve fuel, the method should return 0.\n\n\nidentify_distance_travelled(initial_fuel): Return the distance so far travelled by the vehicle based on the initial fuel,fuel left and mileage.\nAssume that initial fuel is always greater than fuel left.\n\n\nRepresent a vehicle and test your program by initializing the instance variables and invoking the appropriate methods.","33f34594":"**Exercise5**\nhttps:\/\/docs.google.com\/document\/d\/1Mrj5OrP9kdcJmgpdUfvJQY4Mq3V7z1r2zIxgwH8kDWQ\/edit?usp=sharing"}}