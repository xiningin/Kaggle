{"cell_type":{"b80330c7":"code","806b4a84":"code","b2174524":"code","b837e0b1":"code","f3f2e9ff":"code","ebe697f4":"code","7b5053bf":"code","b56986f9":"code","2bc718de":"code","9f1d9939":"code","868ea921":"code","48ab2392":"code","59a897f9":"code","4d6f4812":"code","ff48f6c2":"code","6f4830e1":"code","42cc5fe9":"code","70f34d88":"code","31917299":"code","3e14a807":"code","cbedb89f":"code","4f2ffdb4":"code","f8556f6c":"code","d70895d9":"code","ed898552":"code","fa93d0ef":"code","7259866b":"code","01703947":"code","feb7b381":"code","d36b57c9":"code","a2668e6d":"code","adc02609":"code","10685113":"code","6e741e5a":"code","13b338cc":"code","7f60bcf5":"code","235f7173":"code","72aea6b0":"code","e551ac99":"code","fd546891":"code","4eda9e23":"code","15d2c1d2":"code","05e2969c":"code","b907b1cf":"code","aa12583a":"code","bceea872":"code","80f2acee":"code","d28ee602":"code","f95ab5c4":"code","cc407918":"code","3465f943":"code","cf258606":"code","1d0dfc99":"code","f2954b92":"code","11138348":"code","a6afbd0a":"code","78e66830":"code","162bcc02":"code","52f84630":"code","f4402d7d":"code","586083b4":"code","cd21c764":"code","80a37661":"code","17e182b4":"markdown","0a31c29a":"markdown","06e03ee7":"markdown","c2d457be":"markdown","c69aa6c9":"markdown","2365c94f":"markdown","1f2de0b3":"markdown","740099dd":"markdown","0b9b8df7":"markdown","4487c99b":"markdown","fad6d4de":"markdown","e1ff2983":"markdown","c590328e":"markdown","7f2bf339":"markdown","b30d81df":"markdown","fcb1ec26":"markdown","fda274a0":"markdown","9cfc4105":"markdown","0beb4ecd":"markdown","5d28cdcd":"markdown","f953f277":"markdown","a6a5210e":"markdown","407d9ef3":"markdown","575cdd30":"markdown"},"source":{"b80330c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","806b4a84":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport os\nimport time\nimport scipy as sp\nfrom statsmodels.graphics.mosaicplot import mosaic","b2174524":"df=pd.read_csv('..\/input\/unsupervised-ml\/nba_2013.csv')\ndf.head()","b837e0b1":"df.info()","f3f2e9ff":"df.describe()","ebe697f4":"df.columns","7b5053bf":"df.dtypes","b56986f9":"df.value_counts","2bc718de":"df.shape","9f1d9939":"df.var","868ea921":"df.mean()","48ab2392":"df.mode()","59a897f9":"df.hist(figsize=(20,16))\nplt.show()\n","4d6f4812":"sns.boxplot(x='age',y='pts',data=df)","ff48f6c2":"sns.lineplot(x='g',y='age',data=df)","6f4830e1":"sns.scatterplot(x='ft',y='tov',data=df)","42cc5fe9":"sns.relplot(x='ast',y='pf',data=df)","70f34d88":"sns.violinplot(x='pos',y='pts',data=df)","31917299":"col=['pos','pts','g','gs','player','season','ast','fga']\nsns.pairplot(df[col])","3e14a807":"sns.jointplot(x='pos',y='gs',data=df)","cbedb89f":"plt.figure(figsize=(10,6))\nplt.style.use('default')\nsns.distplot(df['pts'])\nplt.title('Player Rating',size=20)\nplt.show()","4f2ffdb4":"sns.lineplot(x='g',y='gs',data=df)\nplt.title('G vs GS Plot',size=15)\nplt.xlabel('G',size=15)\nplt.ylabel('Gs',size=15)\nplt.show()","f8556f6c":"plt.figure(figsize=(14,8))\nsns.set_style(style='whitegrid')\nplt.subplot(2,3,1)\nsns.boxplot(df['pts'],data=df)\nplt.subplot(2,3,2)\nsns.boxplot(df['gs'],data=df)\nplt.subplot(2,3,3)\nsns.boxplot(df['g'],data=df)\nplt.subplot(2,3,4)\nsns.boxplot(df['ast'],data=df)\nplt.subplot(2,3,5)\nsns.boxplot(df['mp'],data=df)\nplt.subplot(2,3,6)\nsns.boxplot(df['fg'],data=df)","d70895d9":"df.isnull().sum()","ed898552":"df=df.drop(['ft.','fg.','x2p.'],axis=1)","fa93d0ef":"df=df.dropna()","7259866b":"df.columns","01703947":"df.isnull().sum()","feb7b381":"df.corr()","d36b57c9":"df.var()","a2668e6d":"list1=list(df.columns)","adc02609":"list2=[]\nfor i in list1:\n    if df[i].dtype=='object':\n        list2.append(i)","10685113":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","6e741e5a":"for i in list2:\n    df[i]=le.fit_transform(df[i])","13b338cc":"df","7f60bcf5":"y=df['pos']\nx=df.drop('pos',axis=1)\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.3)","235f7173":"print(x_train)","72aea6b0":"print(x_test)","e551ac99":"print(len(x_test))\nprint(len(x_train))\nprint(len(y_test))\nprint(len(y_train))","fd546891":"from sklearn.linear_model import LogisticRegression\nreg=LogisticRegression()\nreg.fit(x_train,y_train)","4eda9e23":"from sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.metrics import mean_squared_error,classification_report\ny_pred=reg.predict(x_test)\nacc=accuracy_score(y_test,y_pred)\ncm=confusion_matrix(y_test,y_pred)\ncr=classification_report(y_test,y_pred)\nprint(acc)\nprint(cr)\nprint(cm)\n","15d2c1d2":"from sklearn.model_selection import GridSearchCV\nparam={'penalty':['l1','l2'],'C':[0.001,0.01, 0.1, 1, 10, 20,100, 1000]}\nlr=LogisticRegression(penalty='l1')\ncv=GridSearchCV(reg,param,cv=5,n_jobs=-1)\ncv.fit(x_train,y_train)\ncv.predict(x_test)\n","05e2969c":"print('CV Best Score',cv.best_score_)","b907b1cf":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()\nknn.fit(x_train,y_train)","aa12583a":"y_pred=knn.predict(x_test)\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint('Classification report',classification_report(y_test,y_pred))\nprint('Confusion Metrics',confusion_matrix(y_test,y_pred))\nprint('Acciracy score',accuracy_score(y_test,y_pred))","bceea872":"from sklearn.svm import SVC\nsvc=SVC()\nsvc.fit(x_train,y_train)","80f2acee":"y_pred=svc.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint('Classification report',classification_report(y_test,y_pred))\nprint('Confusion Metrics',confusion_matrix(y_test,y_pred))\n","d28ee602":"from sklearn.naive_bayes import GaussianNB\ngnb=GaussianNB()\ngnb.fit(x_train,y_train)\n","f95ab5c4":"y_pred=gnb.predict(x_test)\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint('Classification report',classification_report(y_test,y_pred))\nprint('Confusion Metrics',confusion_matrix(y_test,y_pred))\nprint('Acciracy score',accuracy_score(y_test,y_pred))","cc407918":"from sklearn.tree import DecisionTreeClassifier\ndtc=DecisionTreeClassifier()\ndtc.fit(x_train,y_train)","3465f943":"y_test=dtc.predict(x_test)\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nacc=accuracy_score(y_test,y_pred)\nprint('Classification report',classification_report(y_test,y_pred))\nprint('Confusion Metrics',confusion_matrix(y_test,y_pred))\n\nprint(acc)","cf258606":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nrfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)","1d0dfc99":"y_pred=rfc.predict(x_test)\nfrom sklearn.metrics import confusion_matrix,accuracy_score\ncm=confusion_matrix(y_test,y_pred)\nscore=accuracy_score(y_test,y_pred)\nprint(cm)\nprint(score)\nprint(\"Training Score:\\n\",rfc.score(x_train,y_train)*100)","f2954b92":"from sklearn.ensemble import AdaBoostClassifier\nada=AdaBoostClassifier()\nada.fit(x_train,y_train)","11138348":"y_pred=ada.predict(x_test)\nscore=accuracy_score(y_test,y_pred)\nprint(score)\nprint('confusion matrix',confusion_matrix(y_test,y_pred))\nprint('Training score',ada.score(x_train,y_train))","a6afbd0a":"from sklearn.ensemble import GradientBoostingClassifier\ngba=GradientBoostingClassifier()\ngba.fit(x_train,y_train)","78e66830":"y_pred=gba.predict(x_test)\ncm=confusion_matrix(y_test,y_pred)\nclf=classification_report(y_test,y_pred)\nscore=accuracy_score(y_test,y_pred)\nprint(score)\nprint(\"Training Score:\\n\",gba.score(x_train,y_train)*100)\nprint(clf)\nprint(cm)","162bcc02":"from xgboost import XGBClassifier\n\nxgb =XGBClassifier(objective ='reg:linear', colsample_bytree = 0.3, learning_rate = 0.1,\n                max_depth = 5, alpha = 10, n_estimators = 10)\n\nxgb.fit(x_train, y_train)","52f84630":"y_pred=xgb.predict(x_test)\ncm=print(confusion_matrix(y_test,y_pred))\nacc=print(accuracy_score(y_test,y_pred))\ntrr=print(xgb.score(x_train,y_train))","f4402d7d":"from sklearn.ensemble import ExtraTreesClassifier\netc=ExtraTreesClassifier(n_estimators=100,random_state=0)\netc.fit(x_train,y_train)","586083b4":"y_pred=etc.predict(x_test)\ncm=print(confusion_matrix(y_test,y_pred))\nclf=print(classification_report(y_test,y_pred))\nscore=accuracy_score(y_test,y_pred)\nscore\nprint(etc.score(x_train,y_train)*100)","cd21c764":"from sklearn.ensemble import BaggingClassifier\nfrom sklearn import tree\nmodel=BaggingClassifier(tree.DecisionTreeClassifier(random_state=1))\nmodel.fit(x_train,y_train)\nmodel.score(x_test,y_test)\ncm=print(confusion_matrix(y_test,y_pred))\nac=print(accuracy_score(y_test,y_pred))\nts=print(model.score(x_train,y_train))","80a37661":"df=pd.DataFrame({'Actual':y_test,'predicted':y_pred})\ndf","17e182b4":"# Data Preprocessing","0a31c29a":"# Random forest classifier","06e03ee7":"# Libraries Used","c2d457be":"# Training and test data","c69aa6c9":"# Reading the file","2365c94f":"# Naive Bayes","1f2de0b3":"# Unsupervised ML","740099dd":"# Decision Tree Classifier","0b9b8df7":"``Data contains 481 rows and 31 columns``","4487c99b":"# Extra Tree Classifier","fad6d4de":"<img src='https:\/\/www.nba.com\/sixers\/sites\/sixers\/files\/3.gif'>","e1ff2983":"# Knn classifier","c590328e":"``Logistic regression``","7f2bf339":"# Building models","b30d81df":"``It shows that most of the datatypes are of value int ``","fcb1ec26":"``Data shows that it contains 31 columns``","fda274a0":"# Ada boost","9cfc4105":"# Unsupervised algorithms","0beb4ecd":"``These are the different columns in the dataset``","5d28cdcd":"# SVC Classifier","f953f277":"# Xgb classifier","a6a5210e":"``Most of the values do not have null values``","407d9ef3":"# Bagging Classifier","575cdd30":"# Gradient boost classifier"}}