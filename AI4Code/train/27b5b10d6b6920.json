{"cell_type":{"fb14c16f":"code","e35882af":"code","4bc463cb":"code","8bded204":"code","e6d04679":"code","b30690f1":"code","83290a1d":"code","fdccfdcf":"code","8e6b204a":"code","523f6938":"code","275038a2":"code","285e7dd9":"code","48b15c7e":"code","40cf2d42":"code","06b965fa":"code","8e2880eb":"code","d4caff86":"code","26f44d58":"code","d7dddb47":"code","117b991f":"code","3de1cf92":"code","0672f6b7":"code","5603a3c3":"code","fd04b9c5":"code","bff7f77b":"code","3d59b332":"code","8f21d2a6":"code","f6de67f1":"code","9701b5e0":"code","3476feea":"code","64452543":"code","906ac214":"code","f5ba27f0":"code","ce3610f0":"code","228d7928":"code","3477f633":"code","f517159a":"code","ffa69cc8":"code","a1040723":"code","93bd8b9f":"code","9a29aef0":"code","df8d6fb0":"code","1afa5b25":"code","a5b04bd3":"code","fb1d81d0":"code","55c925c0":"code","cbae6eca":"code","7a42997a":"code","db681e84":"code","20f82dec":"code","d1c35ab6":"code","12339e76":"code","2c5e2451":"code","d3224e1c":"code","50df700a":"code","331b5d36":"code","a7691aa0":"code","67e10f1a":"code","882ae7b0":"code","067ae33d":"code","1a1d5c1e":"code","794b7a05":"code","bc26c56f":"code","b3c1993f":"code","d389d3fa":"code","c4121b02":"code","e7d0596a":"code","cc814c3f":"code","89003037":"code","71d26854":"code","291a3974":"code","faaa907c":"code","2fada305":"code","ab78a4b2":"code","533cc66c":"code","4d2b3131":"code","84d3f72d":"code","76c8820a":"code","10aa78bf":"code","363db6f9":"code","039d8c81":"code","cca0feba":"code","f962df7e":"code","d115be5f":"code","8fafc8a7":"code","a0f05c69":"code","425b4960":"code","18c4df46":"code","c9ced176":"code","4274cf14":"code","e6717e04":"code","88b1e146":"code","1c70d594":"code","b073027a":"code","9e1b0bc6":"code","1fab5796":"code","e4e12ab0":"code","3bab025b":"code","65295424":"code","d4f9d494":"markdown","0024e741":"markdown","ebf3a1e7":"markdown","c8ea72a7":"markdown","a56f4826":"markdown","014507ba":"markdown","61f9c855":"markdown","0335645e":"markdown","cecbe9e2":"markdown","63c01a69":"markdown","188e3235":"markdown","cab0cf9f":"markdown","4e35a0c9":"markdown","a31c6c3b":"markdown","03c7092e":"markdown","09e6a5ff":"markdown","881bca2d":"markdown","242dadd4":"markdown","b9091e3b":"markdown","f2a9548a":"markdown","c95b51c4":"markdown","c03886dd":"markdown","dd9a286c":"markdown","891389db":"markdown","217db82a":"markdown","a8adb6d7":"markdown","84ae6ef8":"markdown","68bf9396":"markdown","a90cef2c":"markdown","8d4c5aa2":"markdown","1ae36276":"markdown","2cb8f721":"markdown","2bea5de7":"markdown","f3d27e41":"markdown","e3b286df":"markdown","9bfb114c":"markdown","6609a6a1":"markdown","7fcca51f":"markdown","3710f684":"markdown","401dcedf":"markdown","f38088f9":"markdown","b79ee046":"markdown","963d8cbf":"markdown","ece02f78":"markdown","24c85c01":"markdown","c69a850b":"markdown","782efc0b":"markdown","cb7f1c84":"markdown","25be3cd3":"markdown","79880f65":"markdown","f0450fb7":"markdown","7d567249":"markdown","e5d355c4":"markdown","291779b0":"markdown","7996efd5":"markdown","e33a8b11":"markdown","9a61d153":"markdown","c54b7625":"markdown","cd473c87":"markdown","2adb491d":"markdown","081b6d1c":"markdown","06d30771":"markdown","84bf6743":"markdown","8391c495":"markdown","60a267a4":"markdown","21929e0f":"markdown","2797405c":"markdown","d7206d64":"markdown","d1df7697":"markdown","444df010":"markdown","436a2d1c":"markdown","5948ba1c":"markdown","0bdc998e":"markdown","16c0b3b1":"markdown"},"source":{"fb14c16f":"import numpy as np\nimport seaborn as sns\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport statistics # medyan mod vs. i\u00e7in\nfrom sklearn.tree import DecisionTreeClassifier # DecisionTree modeli i\u00e7in\nfrom sklearn import ensemble\nfrom sklearn.metrics import confusion_matrix as cm\nfrom matplotlib.legend_handler import HandlerLine2D\nfrom sklearn.neighbors import KNeighborsClassifier # 2-15 aras\u0131 kom\u015fu say\u0131lar i\u00e7in\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score # train test split i\u00e7in\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report#classification_report ve karma\u015f\u0131kl\u0131k matrisi\nfrom sklearn.metrics import roc_auc_score, roc_curve, recall_score, f1_score, precision_score # skor tahminleri i\u00e7in\nfrom sklearn.naive_bayes import GaussianNB # Gaussian modelimiz i\u00e7in\nfrom statistics import mode # mod alabilmek i\u00e7in\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler","e35882af":"df = pd.read_csv(\"..\/input\/tabletpc-priceclassification\/tablet.csv\") # Pandas k\u00fct\u00fcphanesi arac\u0131l\u0131\u011f\u0131 ile datasetimizi tan\u0131tt\u0131k.\nkopya = df.copy() # i\u00e7inde de\u011fi\u015fikli\u011fe gidersek kopyas\u0131 elimizde her ihtimale kar\u015f\u0131 bulunsun...","4bc463cb":"df.sample(5) # Bakt\u0131\u011f\u0131m\u0131zda 12 adet s\u00fcrekli verimiz var. Eksiksiz girilenlerde 2000'er tane de\u011fer tan\u0131ml\u0131.","8bded204":"df.info() # Bu bilgilerden biz de\u011fi\u015fkenlerin tipini, bellek kullan\u0131m\u0131n\u0131, hatta ka\u00e7ar tanesinin bo\u015f olmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliyoruz.","e6d04679":"df.shape # 20 \u00f6zellik ve bu \u00f6zelliklerden herhangi birine sahip 2000 tablet oldu\u011funu \u00f6\u011frendik.","b30690f1":"df.describe() # 12 s\u00fcrekli de\u011fi\u015fkenimize dair bilgler g\u00f6r\u00fcnt\u00fclenmektedir. Bilgilerde;\n# count = ka\u00e7 adet oldu\u011fu\n# mean = ortalamas\u0131\n# std = standart sapmas\u0131\n# min = en k\u00fc\u00e7\u00fck de\u011fer, max = en b\u00fcy\u00fck de\u011fer , ve \u00e7eyrekler a\u00e7\u0131kl\u0131klar\u0131 olmak \u00fczere listelenmi\u015ftir.\n# \u00d6NEML\u0130 UYARI : import statistics dedikten sonra statistics.mean(df[\"RAM\"]) yazarsak \u00e7\u0131kt\u0131 olarak nan verecektir. \u00c7\u00fcnk\u00fc\n# RAM \u00f6zelli\u011finde nan yani bo\u015f b\u0131rak\u0131lanlar var, bunu statistics olarak hesaplamaktansa burdan eri\u015fmek daha uygun.","83290a1d":"print(pd.concat([df.isnull().sum(), 100 * df.isnull().sum()\/len(df)], \n          axis = 1).rename(columns={0:'Kay\u0131p De\u011ferler', 1:'Y\u00fczdesi (%)'}))\n\nprint('\\nTOPLAM NULL DEGER SAYISI : \\t', df.isna().sum().sum(), '\\t   ',\n     100 * df.isnull().sum().sum()\/len(df))\n# 12 RAM ve 5 \u00d6n kameran\u0131n ka\u00e7 MP oldu\u011funu bilmiyoruz. 2000 tablet i\u00e7inde 17 tanesinin bo\u015f olmas\u0131 g\u00fczel bir\n# veri setine sahip oldu\u011fumuzu g\u00f6sterir. Bu de\u011ferleri doldurman\u0131n bir\u00e7ok yolu var fakat ortalama bir de\u011feri bu \n# \u00f6zelliklere atarsak ortalamada de\u011fi\u015fiklik olmayaca\u011f\u0131 ve bizden de doldurmam\u0131z istendi\u011fi i\u00e7in ben ilerleyen ad\u0131mlarda\n# ortalama de\u011fer atayaca\u011f\u0131m.","fdccfdcf":"print(df[\"FiyatAraligi\"].unique()) # Ka\u00e7 \u00e7e\u015fit kategoriye sahip oldu\u011fumuzu\nprint(df[\"FiyatAraligi\"].nunique()) # ve toplamda ka\u00e7 kategori oldu\u011funu b\u00f6yle \u00f6\u011frenebiliriz\nprint(df[\"Renk\"].unique())\nprint(df[\"Renk\"].nunique())","8e6b204a":"df.corr() # T\u00fcm alanlar\u0131n birbiri ile korealasyonun getirir. 1'e \u00e7ok yak\u0131n olmasa da en g\u00fc\u00e7l\u00fc ili\u015fki 0.64 ile ArkaKameraMP ve\n# OnKameraMP aras\u0131ndad\u0131r. Yani e\u011fer tablet al\u0131p g\u00fczel manzaralar \u00e7ekmek isterseniz, g\u00fczel selfie'ler de \u00e7ekebilirsiniz :))","523f6938":"corr = df.corr() # df.corr()'dan yararlanarak \u0131s\u0131 haritam\u0131z\u0131 \u00e7iziyoruz. Y\u00fczdeliklerini g\u00f6r\u00fcnt\u00fclemek daha kolay yorum \nsns.heatmap(corr, # yapmam\u0131z\u0131 sa\u011flar. Yukar\u0131da aramak yerne en g\u00fc\u00e7l\u00fc ili\u015fkiyi burdan tespit etmek i\u015fimizi daha da kolayla\u015ft\u0131r\u0131r.\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values, annot=True, fmt='.0%');","275038a2":"sns.countplot # yazarak i\u00e7ine yazabilece\u011fimiz parametreleri g\u00f6rebiliriz.","285e7dd9":"df.hist(figsize = (15,15),color=\"c\")\n\nplt.show()  # Burada bakacak olursak en dengeli \u00c7\u00f6z\u00fcn\u00fcrl\u00fck Geni\u015flik gibi g\u00f6z\u00fck\u00fcyor, OnKameraMP ise en dengesiz verimiz gibi\n# g\u00f6z\u00fck\u00fcyor","48b15c7e":"print(df[\"FiyatAraligi\"].value_counts())\nprint(sns.countplot(x=\"FiyatAraligi\", data = df)) # 500x4 ile dengeli da\u011f\u0131ld\u0131\u011f\u0131n\u0131 \u00f6\u011frenmi\u015f ve g\u00f6rm\u00fc\u015f olduk...","40cf2d42":"renkler = [\"white\", \"pink\", \"purple\", \"orange\", \"grey\", \"yellow\", \"darkblue\", \"turquoise\", \"brown\", \"green\", \"red\", \"black\"];\nprint(sns.countplot(x=\"Renk\", data = df, palette = renkler));\nprint(df[\"Renk\"].value_counts()) # Isimler s\u0131\u011fmad\u0131\u011f\u0131 i\u00e7in renklerden de anla\u015f\u0131lmas\u0131n\u0131 istedim. List tan\u0131mlay\u0131p i\u00e7ine renkleri\n# s\u0131ras\u0131yla yaz\u0131p bunu da palette dei\u015fkenine atad\u0131m.","06b965fa":"sns.countplot(x=\"WiFi\", data = df)\nprint(df[\"WiFi\"].value_counts()) # T\u00fcm veriler ile ilgili a\u00e7\u0131klamalar en sonda yap\u0131lm\u0131\u015ft\u0131r...","8e2880eb":"print(df[\"Dokunmatik\"].value_counts())\nsns.countplot(x=\"Dokunmatik\", data = df)","d4caff86":"sns.countplot(x=\"3G\", data = df)\nprint(df[\"3G\"].value_counts())","26f44d58":"sns.countplot(x=\"4G\", data = df)\nprint(df[\"4G\"].value_counts())","d7dddb47":"sns.countplot(x=\"CiftHat\", data = df)\nprint(df[\"CiftHat\"].value_counts())","117b991f":"sns.countplot(x=\"Bluetooth\", data = df)\nprint(df[\"Bluetooth\"].value_counts())","3de1cf92":"sns.violinplot(x = df.FiyatAraligi, y = df.RAM, data = df);","0672f6b7":"sns.catplot(x=\"FiyatAraligi\", y=\"MikroislemciHizi\", hue=\"4G\",\n            kind=\"swarm\", data=df);","5603a3c3":"sns.relplot(x=\"FiyatAraligi\", y=\"CekirdekSayisi\", col=\"Dokunmatik\",hue=\"DahiliBellek\", data = df); # Bu sefer Dokunmatik olan \n# olmayan tabletler i\u00e7in \u00c7ekirdek Say\u0131s\u0131 artarken Dahili Bellek say\u0131s\u0131ndaki art\u0131\u015f\u0131 Fiyat Aral\u0131\u011f\u0131na g\u00f6re inceliyoruz. \n# 4 t\u00fcr\u00fc ayn\u0131 anda yorumlayabiliyoruz fakat biraz daha kar\u0131\u015f\u0131k.","fd04b9c5":"# NAN yani bo\u015f b\u0131rak\u0131lan de\u011ferlerinkini bularken nan \u00e7\u0131kt\u0131s\u0131n\u0131 verece\u011fi i\u00e7in, nan olan RAM ve \n# OnKameraMP \u00f6zelliklerine yukar\u0131da yazd\u0131\u011f\u0131m describe()'tan bakmak daha uygun olacakt\u0131r.","bff7f77b":"print(statistics.median(df[\"ArkaKameraMP\"]))\nprint(mode(df[\"Renk\"])) # moduna bakabilmemiz i\u00e7in de\u011ferlerin dengeli da\u011f\u0131lmamalar\u0131 laz\u0131m, bu y\u00fczden Fiyat aral\u0131\u011f\u0131n\u0131n moduna\n# bakamay\u0131z\nprint(mode(df[\"4G\"]))","3d59b332":"kopya['RAM'] = kopya['RAM'].fillna(kopya['RAM'].sum()\/len(kopya['RAM'])) # asl\u0131 nolur nolmaz bende kals\u0131n dedim ve \nkopya['OnKameraMP'] = kopya['OnKameraMP'].fillna(kopya['OnKameraMP'].sum()\/len(kopya['OnKameraMP'])) # ortalamalar\u0131n\u0131 ald\u0131m\n# ve bo\u015f de\u011ferlere onlar\u0131 atad\u0131m. Test ederek g\u00f6rebiliriz;","8f21d2a6":"kopya.info() # g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi hi\u00e7 bo\u015f de\u011fer bulunmamakta art\u0131k.","f6de67f1":"kopya.Bluetooth = kopya.Bluetooth.eq('Var').mul(1) # Var olanlar\u0131 1'e e\u015fitleyecek, di\u011ferlerini 0'a ve sonras\u0131nda bunu\nkopya.Bluetooth # kopya.Bluetooth'a atayacak. B\u00f6ylelikle Bluetooth \u00f6zelli\u011fini say\u0131salla\u015ft\u0131rm\u0131\u015f olduk. Di\u011ferlerine de uygulayal\u0131m","9701b5e0":"kopya['CiftHat'] = kopya['CiftHat'].map({'Var': 1, 'Yok': 0}) # eq().mul()'dan fark\u0131 de\u011fi\u015fecek de\u011ferleri kendimiz girebiliyoruz.\nkopya.CiftHat # Yani 2 se\u00e7enekten fazlas\u0131 var ise elimizde(renkler gibi) bu y\u00f6ntem kullan\u0131\u015fl\u0131 olacakt\u0131r.","3476feea":"kopya['4G'] = kopya['4G'].map({'Var': 1, 'Yok': 0})\nkopya['4G']","64452543":"kopya['3G'] = kopya['3G'].map({'Var': 1, 'Yok': 0})\nkopya['3G']","906ac214":"kopya['Dokunmatik'] = kopya['Dokunmatik'].map({'Var': 1, 'Yok': 0})\nkopya['Dokunmatik']","f5ba27f0":"kopya['WiFi'] = kopya['WiFi'].map({'Var': 1, 'Yok': 0})\nkopya['WiFi']","ce3610f0":"kopya['FiyatAraligi'] = kopya['FiyatAraligi'].map({'\u00c7ok Ucuz': 0, 'Ucuz': 1, 'Normal': 2, 'Pahal\u0131': 3})\nkopya['FiyatAraligi'] # Fiyat aral\u0131klar\u0131 s\u0131ralanabilir(ordered) yani Ordinal'dir.","228d7928":"renkler = [\"white\", \"pink\", \"purple\", \"orange\", \"grey\", \"yellow\", \"darkblue\", \"turquoise\", \"brown\", \"green\", \"red\",\n           \"darkslategray\"];\nsns.violinplot(x=\"Renk\", y=\"FiyatAraligi\", data = kopya, height = 8, alpha = .5, palette = renkler);","3477f633":"Renkler = pd.get_dummies(kopya[\"Renk\"]) # Renkleri say\u0131salla\u015ft\u0131rd\u0131k\nRenkler.head() # art\u0131k yeni renklerimiz veri setimizde b\u00f6yle g\u00f6r\u00fcnecek","f517159a":"kopya = pd.concat([kopya, Renkler], axis = 1) # art\u0131k Renk kategorisi yerine dummy olarak elde etti\u011fimiz Renkler bulunmakta\nkopya.drop([\"Renk\"], axis = 1, inplace = True) # Bu sayede 20 \u00f6zniteli\u011fe 12 yenisi eklendi ve 1 tanesi \u00e7\u0131kar\u0131ld\u0131\nkopya.head() # bu sayede toplamda 31 s\u00fctunumuz olmas\u0131 gerekiyor.","ffa69cc8":"kopya.hist(figsize = (15,15),color=\"brown\")\n\nplt.show() # T\u00fcm say\u0131sal verilerimiz a\u015fa\u011f\u0131da modellenmi\u015ftir.","a1040723":"Y = kopya.iloc[:,18].values # 18. s\u00fctunu almak i\u00e7in bu kodu yaz\u0131yoruz. Renkler en sona eklendi\u011fi i\u00e7in ilk 19 s\u00fctun ayn\u0131.\nX = kopya.drop(['FiyatAraligi'], axis=1) # kopya verisetinden Y i\u00e7in kulland\u0131\u011f\u0131m\u0131z s\u00fctunu at\u0131p X i\u00e7in kullan\u0131yoruz.","93bd8b9f":"Y # '\u00c7ok Ucuz': 0, 'Ucuz': 1, 'Normal': 2, 'Pahal\u0131': 3 olmak \u00fczere;","9a29aef0":"X # kopya.head(5) yazarak do\u011fru olup olmad\u0131\u011f\u0131n\u0131 kontrol edelim.","df8d6fb0":"kopya.head(5) # verilerimiz ba\u015far\u0131l\u0131 bir \u015fekilde ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z olarak ayr\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6rd\u00fck.","1afa5b25":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25, random_state = 42) # \u015eu an %75 e\u011fitim ve %25 test\n# olmak \u00fczere de\u011fi\u015fkenlerimizi train_test_split metoduyla ay\u0131rd\u0131k. Verileri de bize rastgele verdi.","a5b04bd3":"X_train  # g\u00f6rd\u00fc\u011f\u00fcm\u00fcz gibi 31-1=30 s\u00fctunumuzda 1500 \u00f6rnek mevcut. Bu de\u011ferleri kendisini e\u011fitmesi i\u00e7in makineye g\u00f6nderece\u011fiz.","fb1d81d0":"X_test # 500x30 yani 500 tanesi test i\u00e7in kullan\u0131lacak. Bunlar\u0131 modele g\u00f6nderece\u011fiz ve ondan Y'yi tahmin etmesini isteyece\u011fiz.","55c925c0":"Y_train","cbae6eca":"Y_test # Tahmin etti\u011fi Y de\u011ferleri ile ger\u00e7ek de\u011ferlerimizi kar\u015f\u0131la\u015ft\u0131raca\u011f\u0131z ve ba\u015far\u0131 oran\u0131na bakaca\u011f\u0131z.","7a42997a":"nb = GaussianNB()\nnb_model = nb.fit(X_train, Y_train) # Modelimize train i\u00e7in ay\u0131rd\u0131\u011f\u0131m\u0131z verileri g\u00f6nderiyoruz. Test k\u0131sm\u0131 i\u00e7in ayr\u0131lan %25 lik\n# k\u0131s\u0131mdan haberi yok. Tahmin etmesini isteyece\u011fiz ve kalan %25 ile kar\u015f\u0131la\u015ft\u0131raca\u011f\u0131z.","db681e84":"X_test[0:10]","20f82dec":"nb_model.predict(X_test)[0:10]","d1c35ab6":"Y_test[0:10] # G\u00f6rd\u00fc\u011f\u00fcm\u00fcz gibi \u00fcstte ve altta de\u011ferlerimizi kar\u015f\u0131la\u015ft\u0131rabiliriz. Ben \u015f\u00f6yle bir yorumda bulundum. De\u011ferler 0 dan\n# 4'e do\u011fru artt\u0131k\u00e7a yani \u00e7ok ucuzdan pahal\u0131ya do\u011fru makine tahminde hatalar yap\u0131yor.","12339e76":"Y_pred = nb_model.predict(X_test)\nY_pred","2c5e2451":"Y_test # kar\u015f\u0131la\u015ft\u0131rmam\u0131z\u0131 daha kolay yapabiliriz.","d3224e1c":"print(accuracy_score(Y_test, Y_pred))\nprint(nb_model.score(X_test, Y_test))","50df700a":"karmasiklik_matrisi = confusion_matrix(Y_test, Y_pred)\nprint(karmasiklik_matrisi) ","331b5d36":"(karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[3][3]) \/ ((karmasiklik_matrisi[0][0] + karmasiklik_matrisi[0][1] + karmasiklik_matrisi[0][2] + karmasiklik_matrisi[0][3]) + (karmasiklik_matrisi[1][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[1][2] + karmasiklik_matrisi[1][3]) + (karmasiklik_matrisi[2][0] + karmasiklik_matrisi[2][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[2][3]) + (karmasiklik_matrisi[3][0] + karmasiklik_matrisi[3][1] + karmasiklik_matrisi[3][2] + karmasiklik_matrisi[3][3]))\n# Art\u0131lardan sonra a\u015fa\u011f\u0131 ge\u00e7ip d\u00fczenli yazmak istedi\u011finizde hata veriyor hata ile u\u011fra\u015f\u0131rken b\u00f6yle deneyince biraz g\u00fcld\u00fcm :)))\n# Bu skoru \u015f\u00f6yle elde ediyoruz : TP+TN \/ TP+TN+FN+FP . \u015e\u00f6yle de ak\u0131lda tutabilirsiniz : K\u00f6\u015fegenlerin toplam\u0131 \/ T\u00fcm\u00fc","a7691aa0":"print(classification_report(Y_test, Y_pred)) # G\u00f6rd\u00fc\u011f\u00fcm\u00fcz gibi yukar\u0131da yapt\u0131\u011f\u0131m yorumu kan\u0131tlar nitelikte oldu. \u00c7ok ucuzdan\n# pahal\u0131ya gittik\u00e7e modelimiz tahminlerinde hatalar yapt\u0131. Ortalama skorlar\u0131 da g\u00f6rebiliyoruz.\n# Modelimiz 0.91 e \u00e7\u0131kabilmi\u015f fakat 0.60'\u0131 da g\u00f6rm\u00fc\u015f. Birbirine yak\u0131n ve y\u00fcksek de\u011ferler her zaman daha iyidir.","67e10f1a":"F1Score = f1_score(Y_test, Y_pred, average='weighted')  \nF1Score","882ae7b0":"PrecisionScore = precision_score(Y_test, Y_pred, average='weighted')\nPrecisionScore","067ae33d":"RecallScore = recall_score(Y_test, Y_pred, average='weighted')\nRecallScore","1a1d5c1e":"cart_grid = {\"max_depth\": range(1,20), \"min_samples_split\" : range(2,50)}\n# Modelimizi in\u015fa edelim ve e\u011fitelim. Ancak modeli in\u015fa etmeden \u00f6nce model i\u00e7in kritik olan iki parametreyi optimize edelim.","794b7a05":"cart = DecisionTreeClassifier() # modelimizi olu\u015fturuyoruz\ncart_cv = GridSearchCV(cart, cart_grid, cv = 10, n_jobs = -1, verbose = 2)","bc26c56f":"cart_cv_model = cart_cv.fit(X_train, Y_train) # modele de\u011ferlerimizi g\u00f6nderdik. Bitirme s\u00fcrelerini de ekranda g\u00f6rebiliriz.","b3c1993f":"print(\"En iyi parametreler : \" + str(cart_cv_model.best_params_))\nprint(\"En iyi skor : \" + str(cart_cv_model.best_score_))","d389d3fa":"cart = DecisionTreeClassifier(max_depth = 13, min_samples_split = 11) # Buraya en iyi parametrelerimizi yazarsak en iyi skoru \ncart_tuned = cart.fit(X_train, Y_train) # yakalam\u0131\u015f oluruz. Bu i\u015flemi manuel yapmal\u0131y\u0131z.","c4121b02":"Y_pred = cart_tuned.predict(X_test)","e7d0596a":"accuracy_score(Y_test, Y_pred) # Bir \u00f6nceki modellemeden daha y\u00fcksek bir skor verdi","cc814c3f":"karmasiklik_matrisi = confusion_matrix(Y_test, Y_pred)\nprint(karmasiklik_matrisi) ","89003037":"(karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[3][3]) \/ ((karmasiklik_matrisi[0][0] + karmasiklik_matrisi[0][1] + karmasiklik_matrisi[0][2] + karmasiklik_matrisi[0][3]) + (karmasiklik_matrisi[1][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[1][2] + karmasiklik_matrisi[1][3]) + (karmasiklik_matrisi[2][0] + karmasiklik_matrisi[2][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[2][3]) + (karmasiklik_matrisi[3][0] + karmasiklik_matrisi[3][1] + karmasiklik_matrisi[3][2] + karmasiklik_matrisi[3][3]))","71d26854":"cross_val_score(cart_tuned, X_test, Y_test, cv = 10)\ncross_val_score(cart_tuned, X, Y, cv = 10).mean() # 10 defa yapt\u0131k ve 10 a b\u00f6lerek ortalamas\u0131n\u0131 bulduk","291a3974":"PrecisionScore = precision_score(Y_test, Y_pred, average='weighted')\nPrecisionScore ","faaa907c":"RecallScore = recall_score(Y_test, Y_pred, average='weighted')\nRecallScore # En y\u00fcksek skoru burdan ald\u0131k","2fada305":"F1Score = f1_score(Y_test, Y_pred, average = 'weighted')  \nF1Score","ab78a4b2":"print(classification_report(Y_test, Y_pred)) # Tahminimiz Recall i\u00e7in 0.92'den 0.79 aras\u0131nda oynam\u0131\u015f. Bu skorlar \u00e7ok iyi.","533cc66c":"from sklearn import tree\nDT = tree.DecisionTreeClassifier(criterion = 'entropy')\nDT_model = DT.fit(X_train,Y_train)\nDT_Y_pred = DT_model.predict(X_test)\nkopya_DT = pd.DataFrame({ \"Tahmini \" : DT_Y_pred, \"Ger\u00e7ek \" : Y_test, \"Sonuc \" : DT_Y_pred == Y_test})\nkopya_DT # Buradan hangi de\u011ferleri do\u011fru tahmin etti\u011fini g\u00f6r\u00fcyoruz. Burdan pek anlamasak da yeni bir skor isteyerek kar\u015f\u0131la\u015ft\u0131rma yapabiliriz.","4d2b3131":"DT_model.score(X_test,Y_test) # G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere skorumuz y\u00fckseldi. criterion = \u201centropy\u201d olarak kullanmak bizim i\u015fimize yarad\u0131.","84d3f72d":"print(classification_report(Y_test, DT_Y_pred)) # Aral\u0131\u011f\u0131m\u0131z 0.93 ile 0.78'e y\u00fckselebildi. F1-score daha yak\u0131n skorlar verdi.","76c8820a":"karmasiklik_matrisi = confusion_matrix(Y_test, DT_Y_pred)\nprint(karmasiklik_matrisi)\n(karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[3][3]) \/ ((karmasiklik_matrisi[0][0] + karmasiklik_matrisi[0][1] + karmasiklik_matrisi[0][2] + karmasiklik_matrisi[0][3]) + (karmasiklik_matrisi[1][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[1][2] + karmasiklik_matrisi[1][3]) + (karmasiklik_matrisi[2][0] + karmasiklik_matrisi[2][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[2][3]) + (karmasiklik_matrisi[3][0] + karmasiklik_matrisi[3][1] + karmasiklik_matrisi[3][2] + karmasiklik_matrisi[3][3]))","10aa78bf":"knn = KNeighborsClassifier()","363db6f9":"knn_tuned = knn.fit(X_train, Y_train)\n\nY_pred = knn_tuned.predict(X_test)","039d8c81":"accuracy_score(Y_test, Y_pred) # Bu model i\u00e7lerinde en y\u00fcksek skoru veren model oldu.","cca0feba":"karmasiklik_matrisi = confusion_matrix(Y_test, Y_pred)\nprint(karmasiklik_matrisi)","f962df7e":"(karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[3][3]) \/ ((karmasiklik_matrisi[0][0] + karmasiklik_matrisi[0][1] + karmasiklik_matrisi[0][2] + karmasiklik_matrisi[0][3]) + (karmasiklik_matrisi[1][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[1][2] + karmasiklik_matrisi[1][3]) + (karmasiklik_matrisi[2][0] + karmasiklik_matrisi[2][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[2][3]) + (karmasiklik_matrisi[3][0] + karmasiklik_matrisi[3][1] + karmasiklik_matrisi[3][2] + karmasiklik_matrisi[3][3]))","d115be5f":"cross_val_score(cart_tuned, X_test, Y_test, cv = 10)\ncross_val_score(cart_tuned, X, Y, cv = 10).mean() ","8fafc8a7":"PrecisionScore = precision_score(Y_test, Y_pred, average='weighted')\nPrecisionScore","a0f05c69":"RecallScore = recall_score(Y_test, Y_pred, average='weighted')\nRecallScore","425b4960":"F1Score = f1_score(Y_test, Y_pred, average = 'weighted')  \nF1Score","18c4df46":"print(classification_report(Y_test, Y_pred)) # Skorumuz 0.98 e kadar \u00e7\u0131km\u0131\u015f. B\u00fcy\u00fck ba\u015far\u0131. En iyi modelleme i\u00e7lerinde bu oldu...","c9ced176":"knn_params = {\"n_neighbors\": np.arange(2,15)}\n\n\nknn = KNeighborsClassifier()\nknn_cv = GridSearchCV(knn, knn_params, cv = 3)\nknn_cv.fit(X_train, Y_train)","4274cf14":"print(\"En iyi skor: \" + str(knn_cv.best_score_))\nprint(\"En iyi parametreler: \" + str(knn_cv.best_params_)) # en iyi kom\u015fu say\u0131s\u0131 0.928 puan ile 11'dir. Fakat bunu yazd\u0131r\u0131rken 9 olarak g\u00f6steriyor.\n# Bunun sebebi 2 den ba\u015fl\u0131yor olmas\u0131, o y\u00fczden 2 say\u0131 geri atm\u0131\u015f.","e6717e04":"knn = KNeighborsClassifier(11) # n_neighbors un buldu\u011fu en iyi de\u011feri i\u00e7ine yazd\u0131r\u0131yoruz.\nknn_tuned = knn.fit(X_train, Y_train)\n\nY_pred = knn_tuned.predict(X_test)\n\naccuracy_score(Y_test, Y_pred) #  En iyi neighbor de\u011feri ile 0.92'den 0.93'e y\u00fckseldi.","88b1e146":"karmasiklik_matrisi = confusion_matrix(Y_test, Y_pred)\nprint(karmasiklik_matrisi)","1c70d594":"(karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[3][3]) \/ ((karmasiklik_matrisi[0][0] + karmasiklik_matrisi[0][1] + karmasiklik_matrisi[0][2] + karmasiklik_matrisi[0][3]) + (karmasiklik_matrisi[1][0] + karmasiklik_matrisi[1][1] + karmasiklik_matrisi[1][2] + karmasiklik_matrisi[1][3]) + (karmasiklik_matrisi[2][0] + karmasiklik_matrisi[2][1] + karmasiklik_matrisi[2][2] + karmasiklik_matrisi[2][3]) + (karmasiklik_matrisi[3][0] + karmasiklik_matrisi[3][1] + karmasiklik_matrisi[3][2] + karmasiklik_matrisi[3][3]))","b073027a":"PrecisionScore = precision_score(Y_test, Y_pred, average='weighted')\nPrecisionScore","9e1b0bc6":"RecallScore = recall_score(Y_test, Y_pred, average='weighted')\nRecallScore","1fab5796":"F1Score = f1_score(Y_test, Y_pred, average = 'weighted')  \nF1Score","e4e12ab0":"print(classification_report(Y_test, Y_pred)) # Skorlar\u0131m\u0131z \u00e7ok y\u00fckseldi g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi.","3bab025b":"score_list = []\n\nfor each in range(2,16):\n    knn2 = KNeighborsClassifier(n_neighbors = each)\n    knn2.fit(X_train,Y_train)\n    score_list.append(knn2.score(X_test, Y_test))\n    \nplt.plot(range(2,16),score_list)\nplt.xlabel(\"kom\u015fu say\u0131lar\u0131\")\nplt.ylabel(\"do\u011fruluk skoru\")\nplt.show() ","65295424":"array = []\ni = 2\nwhile i < 16 :\n    knn = KNeighborsClassifier(n_neighbors = i)\n    knn_tuned = knn.fit(X_train, Y_train)\n    Y_pred = knn_tuned.predict(X_test)\n    print(i,\"Kom\u015fulu Skorumuz : \", knn_tuned.score(X_test,Y_test))\n    knn_score = knn_tuned.score(X_test, Y_test)\n    array.insert(i,knn_score)\n    i = i + 1  # 11 say\u0131s\u0131 bu veri seti i\u00e7in en iyi kom\u015fu say\u0131s\u0131","d4f9d494":"Veri \u00e7er\u00e7evesindeki say\u0131sal de\u011fi\u015fkenler i\u00e7in temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","0024e741":"# Art\u0131k t\u00fcm de\u011ferlerimiz say\u0131salla\u015ft\u0131 ve bo\u015f olanlar uygun \u015fekilde dolduruldu. \u015eimdi son safhaya yani makine \u00f6\u011frenmesine ge\u00e7ebiliriz..","ebf3a1e7":"Korelasyon katsay\u0131lar\u0131n\u0131 daha iyi okuyabilmek i\u00e7in seaborn ile \u0131s\u0131 haritas\u0131 \u00e7izdirelim;","c8ea72a7":"S\u0131n\u0131fland\u0131rma raporunu da g\u00f6r\u00fcnt\u00fcleyelim;","a56f4826":"\u015eimdi de modelimiz 2 ile 15 aras\u0131n\u0131 tek tek denesin. Bakal\u0131m nas\u0131l bir de\u011fi\u015fim g\u00f6zlemleyece\u011fiz;","014507ba":"S\u00fcrekli verilerimizi daha iyi g\u00f6rebilmek i\u00e7in s\u00fcrekli de\u011fi\u015fkenlere ait histogram grafikleri \u00e7izdirelim;","61f9c855":"Kesinlik skorunu g\u00f6r\u00fcnt\u00fcleyelim;","0335645e":"Verilerimizi daha iyi tan\u0131mak amac\u0131yla rastgele 5 de\u011feri yazd\u0131ral\u0131m;","cecbe9e2":"Karma\u015f\u0131kl\u0131k matrisimizin skorunu(accuracy) hesaplayal\u0131m","63c01a69":"Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimiz olan Y'yi g\u00f6r\u00fcnt\u00fcleyelim. FiyatAraligi de\u011fi\u015fkenimiz a\u00e7\u0131klamak istenen hedef de\u011fi\u015fkenimizdir.","188e3235":"Yakalama (Recall) veya Hassasl\u0131k (Sensitivity) skorunu g\u00f6r\u00fcnt\u00fcleyelim.","cab0cf9f":"\u015eu ana kadarki t\u00fcm de\u011ferlerimiz Ordinal de\u011fi\u015fkenlerdi yani s\u0131ralanabilir, bize \u00f6l\u00e7meye \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z de\u011ferlerin hangisinin di\u011ferinden kaliteli \/ kalitesiz veya var\/yok gibi bilgiler s\u00f6yler, fakat yine de\u011ferlerin birbirlerinden \u201cne kadar fazla olduklar\u0131n\u0131\u201d s\u00f6ylemez. Fakat renkler nominal'dirler. Birbirine \u00fcst\u00fcnl\u00fc\u011f\u00fc yoktur. Ordinal de\u011fildirler. Kendileri aras\u0131nda s\u0131ralama yap\u0131lamaz. O y\u00fczden \u015fu ana kadar yapt\u0131\u011f\u0131m\u0131z i\u015flemlerden farkl\u0131 bir i\u015flem uygulayaca\u011f\u0131z. Yine de \u00f6ncesinde renklerin hedef de\u011fi\u015fkenimize nas\u0131l bir etkisi var ona bakal\u0131m;","4e35a0c9":"Bir verinin s\u0131ralanabilir olmas\u0131 demek de\u011ferinin iki aral\u0131k aras\u0131nda olmas\u0131 demektir. \u00d6rne\u011fin 1 ile 8 de\u011ferleri aras\u0131nda bir de\u011fer alan \u00c7ekirdek Say\u0131s\u0131, k\u00fc\u00e7\u00fckten b\u00fcy\u00fc\u011fe ya da b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ralanabilir. Fakat Bluetooth \u00f6zelli\u011fi sadece 'Var' ya da 'Yok' i\u00e7erdi\u011fi i\u00e7in s\u0131ralanamaz.\nAyr\u0131ca Fiyat Aral\u0131\u011f\u0131 \u00f6zelli\u011fi de s\u0131ralanabilir. Fakat kategorik bir veri oldu\u011fu i\u00e7in makine bunu nas\u0131l s\u0131ralayaca\u011f\u0131n\u0131 anlamaz. Biz en ucuza 0 ve en pahal\u0131ya 3 dersek anca o zaman makine bu say\u0131lar\u0131 kendi aralar\u0131nda kar\u015f\u0131la\u015ft\u0131r\u0131p s\u0131ralayabilir.\nFiyat Aral\u0131\u011f\u0131 gibi kategorik bir de\u011fer olan Renk \u00f6zelli\u011fi ise say\u0131salla\u015ft\u0131r\u0131labilir fakat s\u0131ralanamaz. Birbirlerine \u00fcst\u00fcnl\u00fckleri yoktur \u00e7\u00fcnk\u00fc.","a31c6c3b":"Renkler \u00f6zniteli\u011fini silip dummy olarak \u00e7evirdi\u011fimiz de\u011ferleri tablomuza ekleyelim.","03c7092e":"Bu de\u011fi\u015fimi modellemek istersek;","09e6a5ff":"# Art\u0131k bo\u015f verileri doldurarak ikinci safhaya ba\u015flayabiliriz.","881bca2d":"Y_pred isimli de\u011fi\u015fken olu\u015fturup t\u00fcm X_test g\u00f6zlemlerinin tahmin sonucunu atayal\u0131m;","242dadd4":"Verimizin en \u00f6nemli \u00f6zelliklerinden biri olmayan veya girilmeyen de\u011ferlerdir. Null olan de\u011ferlerimizi g\u00f6r\u00fcnt\u00fcleyelim;","b9091e3b":"Var - Yok veya Evet - Hay\u0131r hari\u00e7, yani 2 kategoriden \u00e7ok kategoriye sahip olan Renk ve Fiyat aral\u0131\u011f\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyelim. \u0130leride makinenin anlayabilmesi i\u00e7in Var Yok ya da Evet Hay\u0131r 0 veya 1 e d\u00f6nd\u00fcr\u00fclecek, fakat 0 veya 1 den fazla kategoriye ihtiya\u00e7 duyaca\u011f\u0131m\u0131z zamanlar da olacak. Bakal\u0131m tabletlerin ka\u00e7 \u00e7e\u015fit rengi var ve fiyatlar\u0131 nas\u0131l kategorilenmi\u015f;","f2a9548a":"HATIRLATMA :  dir(nb_model) yazarak model \u00fczerinde yaz\u0131labilecek t\u00fcm komutlar\u0131 g\u00f6r\u00fcnt\u00fcleyebiliriz.","c95b51c4":"Bu sefer bir ba\u015fka y\u00f6ntem olan .map() ile say\u0131salla\u015ft\u0131ral\u0131m","c03886dd":"Modeli farkl\u0131 g\u00f6zlemlerle kombinleyerek tekrardan skorunu hesaplayal\u0131m. Buldu\u011fumuz toplam skoru da skor say\u0131s\u0131na b\u00f6lerek ortalama puan\u0131m\u0131z\u0131 bulal\u0131m.","dd9a286c":"F1 skorunu g\u00f6r\u00fcnt\u00fcleyelim.","891389db":"Do\u011fruluk skorunu 2 \u015fekilde yazd\u0131rabiliriz;","217db82a":"    Bir al\u0131\u015fveri\u015f merkezinde teknolojik \u00fcr\u00fcnler satan ma\u011fazaya ait tablet \u00fcr\u00fcnlerini en do\u011fru \u015fekilde sergileyebilmek i\u00e7in 2.000 adet tableti fiyat\/performans durumlar\u0131na g\u00f6re \u201c\u00c7ok Ucuz\u201d, \u201cUcuz\u201d, \u201cNormal\u201d, \u201cPahal\u0131\u201d olarak etiketlemi\u015ftir\n    Bizden mevcut verilerle ba\u015far\u0131l\u0131 bir makine \u00f6\u011frenmesi algoritmas\u0131 geli\u015ftirmek istenmektedir.\n    B\u00f6ylelikle yeni gelecek tablet \u00fcr\u00fcnlerini hangi vitrinde sergilemeleri gerekti\u011fini h\u0131zl\u0131 ve g\u00fcvenilir \u015fekilde elde edebileceklerdir.","a8adb6d7":"Ger\u00e7ek de\u011ferler ile kar\u015f\u0131la\u015ft\u0131ral\u0131m ;","84ae6ef8":"De\u011ferleri tek tek g\u00f6rmek istersek;","68bf9396":"# \u00d6ncelikle verileri tan\u0131yal\u0131m ve sindirelim. Ba\u015fta s\u00f6zel ve sonras\u0131nda modelleme olacak \u015fekilde ilk safham\u0131za ba\u015flayal\u0131m...","a90cef2c":"Hepsi say\u0131salla\u015fm\u0131\u015f m\u0131? Bakal\u0131m t\u00fcm verilerimiz modelle\u015fecek mi ? Belki g\u00f6ze batan bir yanl\u0131\u015f\u0131m\u0131z olmu\u015ftur;","8d4c5aa2":"Veri \u00e7er\u00e7evesinin ka\u00e7 \u00f6znitelik ve ka\u00e7 g\u00f6zlemden olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim;","1ae36276":"Veri \u00e7er\u00e7evemizi okuyal\u0131m ve daha kolay ula\u015fabilmek i\u00e7in 'df' de\u011fi\u015fkenine atayal\u0131m;","2cb8f721":"Yakalama (Recall) veya Hassasl\u0131k (Sensitivity) skorunu g\u00f6r\u00fcnt\u00fcleyelim;","2bea5de7":"# DecisionTree modellemesiyle devam edelim","f3d27e41":"Modelin bulduklar\u0131yla verimizin kar\u015f\u0131la\u015ft\u0131rmas\u0131n\u0131 yapacak ve bunu puanlayacak olursak;","e3b286df":"Modelin parametrelerini ve ald\u0131\u011f\u0131 en iyi skoru yazd\u0131rabiliriz;","9bfb114c":"Karma\u015f\u0131kl\u0131k matrisimizi ve skorumuzu g\u00f6r\u00fcnt\u00fcleyelim;","6609a6a1":"Modelin e\u011fitimde kullanmad\u0131\u011f\u0131m\u0131z, test k\u0131sm\u0131n\u0131n ilk 10 verisini tahmin ettirelim;","7fcca51f":"Karma\u015f\u0131kl\u0131k matrisimizi g\u00f6relim;","3710f684":"Karmasiklik matrisini ve skorunu g\u00f6r\u00fcnt\u00fcleyelim;","401dcedf":"Modelimiz en yak\u0131n kom\u015fu say\u0131s\u0131n\u0131 otomatik 5 alacakt\u0131r. Biz ileride bunun yerine 2 de\u011fer aras\u0131ndaki t\u00fcm sonu\u00e7lar\u0131 elde etmeyi deneyece\u011fiz. Modelimizi yazal\u0131m;","f38088f9":"Biraz veri setimizin matematiksel fonksiyonlar\u0131n\u0131 inceleyelim...","b79ee046":"Karma\u015f\u0131kl\u0131k matrisimizi ve skorunu g\u00f6r\u00fcnt\u00fclemek istersek;","963d8cbf":"S\u0131n\u0131fland\u0131rma raporunu \u00e7izdirelim;","ece02f78":"# Buraya kadar g\u00f6r\u00fcyoruz ki 3G \u00f6zelli\u011fi hari\u00e7 t\u00fcm kategorik veriler dengeli da\u011f\u0131lm\u0131\u015flar. 3G'nin eskide kalm\u0131\u015f bir \u00f6zellik olmas\u0131ndan dolay\u0131 bu d\u00fczensizlik IT Ekibimiz taraf\u0131ndan beklenmekteydi.","24c85c01":"Hat\u0131rlarsak RAM ve OnKameraMP'de bo\u015f k\u0131s\u0131mlar vard\u0131. Bizden bunlar\u0131 doldurmam\u0131z(Data Imputation) bekleniyor. En mant\u0131kl\u0131 doldurma \u015fekli ortalamalar\u0131n\u0131 vermek olaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fcyorum.","c69a850b":"Yakalama (Recall) veya Hassasl\u0131k (Sensitivity) skorunu g\u00f6r\u00fcnt\u00fcleyelim.","782efc0b":"## Bir de\u011fi\u015fken alt ve \u00fcst s\u0131n\u0131rlar\u0131 aras\u0131nda herhangi bir de\u011fer alabilme ve kesirli olarak ifade edilebilme \u00f6zelliklerine sahip de\u011fi\u015fkenlere S\u00dcREKL\u0130, ortak \u00f6zelliklerine g\u00f6re gruplanabilen, kendi i\u00e7inde b\u00f6l\u00fcnmeye elveri\u015fli olmayan de\u011fi\u015fkenlere s\u00fcreksiz yani KATEGOR\u0130K veriler denir. Yukar\u0131da da g\u00f6rece\u011fimiz \u00fczere 12 s\u00fcrekli ve 8 de kategorik verimiz vard\u0131r.","cb7f1c84":"Bana g\u00f6re bir tablette en \u00f6nemli \u00f6zelliklerden biri RAM'dir. Bunlar\u0131 violinplot ile Fiyat Aral\u0131\u011f\u0131na g\u00f6re inceleyelim. \u00c7ok Ucuzdan Pahal\u0131'ya do\u011fru giderken \u015feklimiz ;","25be3cd3":"Bence renklerin fiyata etkisi var. Bunu bir \u00fcst modellemede g\u00f6rebiliyoruz. Bu y\u00fczden renkleri u\u00e7urmak yerine get_dummies ile kategorik \u00f6znitelik \u00e7\u0131kar\u0131mlar\u0131nda bulunal\u0131m","79880f65":"En g\u00fc\u00e7l\u00fc pozitif ili\u015fki hangi iki de\u011fi\u015fken aras\u0131ndad\u0131r g\u00f6rmek i\u00e7in;","f0450fb7":"Uzun vadede modelimizi 10 defa \u00e7al\u0131\u015ft\u0131r\u0131p ortalama skorumuzu elde dedelim;","7d567249":"# KNN Modellemesi ;","e5d355c4":"\u015eimdilik parametre optimizasyonu yapmadan modeli e\u011fitmi\u015f olal\u0131m ve modelin karar a\u011fac\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyelim","291779b0":"\u00c7ok genel bir kullan\u0131m oldu\u011fui\u00e7in veri \u00e7er\u00e7evemizin bilgilerini g\u00f6r\u00fcnt\u00fcleyelim.","7996efd5":"F1 skorunu g\u00f6r\u00fcnt\u00fcleyelim.","e33a8b11":"Kesinlik skorunu g\u00f6r\u00fcnt\u00fcleyelim.","9a61d153":"X_train ve X_test 'i ekrana yazd\u0131ral\u0131m, bakal\u0131m ka\u00e7 g\u00f6zlemden olu\u015fuyor;","c54b7625":"Kesinlik(Precision) skorunu g\u00f6r\u00fcnt\u00fcleyelim.","cd473c87":"\u00d6ncelikle kullanaca\u011f\u0131m\u0131z k\u00fct\u00fcphaneleri tek bir sat\u0131rda biriktirelim ki hepsine bir yerden ula\u015fabilelim;","2adb491d":"Modellemeler hakk\u0131nda HATIRLATMA","081b6d1c":"Modelin tahminini yapaca\u011f\u0131 X_test'in ilk 10 g\u00f6zlemini modele yollayal\u0131m. Ve Modelin tahmin etti\u011fi ilk 10 cevaba bakal\u0131m;","06d30771":"Bu sefer de Y_train ve Y_test 'i ekrana yazd\u0131ral\u0131m, bakal\u0131m ka\u00e7 g\u00f6zlemden olu\u015fuyor;","84bf6743":"S\u00fcrekli verilerimizi modellemi\u015ftik, s\u0131rada kategorik verilerin modellemesi var. ","8391c495":"F1 skorunu g\u00f6r\u00fcnt\u00fcleyelim;","60a267a4":"S\u0131ras\u0131yla Kesinlik skorunu, Yakalama (Recall) veya Hassasl\u0131k (Sensitivity) skorunu ve F1 skorunu g\u00f6r\u00fcnt\u00fcleyelim;","21929e0f":"X_test'i modellemeye yollayarak e\u011fitimimize ba\u015flayal\u0131m, tahmin edece\u011fi de\u011ferleri de Y_pred'de tutal\u0131m.","2797405c":"E\u011fitmek i\u00e7in de\u011ferlerimizi modele verelim. Y_pred de\u011fi\u015fkenimizi tutal\u0131m.","d7206d64":"Ba\u011f\u0131ms\u0131z de\u011fi\u015fkenimiz olan X, Y ba\u011f\u0131ml\u0131 de\u011fi\u015fkenini a\u00e7\u0131klamak i\u00e7in kullan\u0131l\u0131r. Onu da g\u00f6r\u00fcnt\u00fcleyelim;","d1df7697":"\u00c7a\u011flar Hekimci 180601040 ","444df010":"# Makine \u00d6\u011frenmesi ile Fiyat \/ Performans De\u011ferlendirmesi Yapma","436a2d1c":"Bakal\u0131m veri \u00e7er\u00e7evemiz ne kadar dengeli da\u011f\u0131lm\u0131\u015f. Sonras\u0131nda bunu g\u00f6rselle\u015ftirelim. Hedef de\u011fi\u015fkenimiz kategorik bir de\u011fer olan Fiyat Aral\u0131\u011f\u0131 olacak;","5948ba1c":"\u015eimdi bir de DecisionTree i\u00e7indeki default parametreyi \"criterion = \u201centropy\u201d\" olarak de\u011fi\u015ftirerek skorda de\u011fi\u015fiklik olup olmayaca\u011f\u0131n\u0131 g\u00f6zlemleyelim.","0bdc998e":"# \u00d6ncelikle GaussianNB modeli olu\u015ftural\u0131m ve e\u011fitime ba\u015flayal\u0131m;","16c0b3b1":"Karma\u015f\u0131kl\u0131k matris skorunu(accuracy) hesaplayal\u0131m;"}}