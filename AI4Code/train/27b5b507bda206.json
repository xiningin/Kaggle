{"cell_type":{"a6a774d4":"code","a5bb8bce":"code","cf4c3c32":"code","5c1deb99":"code","9b84b4ab":"code","9b89ed1c":"code","be2de695":"code","0a0d0f71":"code","73846780":"code","8a4ef488":"code","e9c8a9a4":"code","880b28d0":"code","84cc3daa":"code","8fd73353":"code","9b296f43":"code","fc5c8c84":"code","26154689":"markdown","137a627e":"markdown","683bd0ff":"markdown","bd897a45":"markdown","2c4dfe29":"markdown","2a3d0d16":"markdown","e1739637":"markdown"},"source":{"a6a774d4":"\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","a5bb8bce":"\n\nimport pandas as pd # data processing\nimport numpy as np # linear algebra\nfrom sklearn.metrics import confusion_matrix, recall_score, accuracy_score, roc_curve, precision_score, roc_auc_score, f1_score\nfrom sklearn.preprocessing import LabelEncoder\nfrom catboost import CatBoostRegressor\nimport matplotlib.pyplot as plt\nimport seaborn as sn","cf4c3c32":"\n\ntrain = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')\n\n","5c1deb99":"train.shape\n","9b84b4ab":"train.head()","9b89ed1c":"train.describe()","be2de695":"train.info","0a0d0f71":"fig, scatter = plt.subplots(figsize = (16,9))\ncorrMatrix = train.corr()\nscatter = sn.heatmap(corrMatrix, annot = True)\nscatter","73846780":"dataset = pd.concat([train, test])","8a4ef488":"train_cat_cols = [f\"cat{i}\" for i in range(10)]\ntrain_num_col = [f\"cont{i}\" for i in range(14)]","e9c8a9a4":"for col in train_cat_cols:\n    le = LabelEncoder()\n    le.fit(dataset[col])\n    train[col] = le.transform(train[col])\n    test[col] = le.transform(test[col])","880b28d0":"df_train = train.sample(frac=0.9, random_state=0)\ndf_valid = train.drop(df_train.index)\n\n\nX_train = df_train[[col for col in train.columns if col in (train_cat_cols + train_num_col)]]\nX_valid = df_valid[[col for col in train.columns if col in (train_cat_cols + train_num_col)]]\ny_train = df_train['target']\ny_valid = df_valid['target']","84cc3daa":"model = CatBoostRegressor(n_estimators= 850, task_type=\"GPU\",  loss_function= 'RMSE', eval_metric='RMSE', metric_period=1000, use_best_model=True,random_seed=42)","8fd73353":"model.fit(X_train, y_train, eval_set=(X_valid, y_valid))","9b296f43":"pred = model.predict(test[(train_cat_cols + train_num_col)])\nsub[\"target\"] = pred\nsub.to_csv('submission.csv', index=False)","fc5c8c84":"\n\npd.read_csv('submission.csv')\n\n","26154689":"# Submission ","137a627e":" CatBoostRegressor","683bd0ff":"# Model\n","bd897a45":" # Preprocessing ","2c4dfe29":"# Libraries","2a3d0d16":" LabelEncoder ","e1739637":"# Data"}}