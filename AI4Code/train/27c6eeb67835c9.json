{"cell_type":{"b1b2884c":"code","9ebc551e":"code","963225b6":"code","24142a04":"code","69e97aa5":"code","5945ecf4":"code","b515e75e":"code","c96064c3":"code","83c4e31a":"code","6454e232":"code","a000a504":"markdown","abf4b98c":"markdown","a81bae6a":"markdown","f0d22275":"markdown"},"source":{"b1b2884c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport missingno as msno\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ebc551e":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","963225b6":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","24142a04":"#cu\u00e1ntas filas y columnas\nprint('cantidad de filas y columnas son: ', train_data.shape)","69e97aa5":"\n#Cuantos valores nulos tenemos\nprint ('Cantidad de valores nulos son:')\ntrain_data.isnull().sum()","5945ecf4":"msno.matrix(train_data)","b515e75e":"print('Distribuci\u00f3n de mujeres y hombres')\nsns.countplot(x='Survived',data=train_data,hue='Sex', palette='Set2')","c96064c3":"print('Bar plot de muertes y supervivientes por edad y g\u00e9nero')\nsns.barplot(x='Survived', y='Age', hue='Sex', data=train_data, estimator=np.median, palette='Set2')","83c4e31a":"women_survive = train_data.loc[train_data.Sex == 'female']['Survived']\nwomen = sum(women_survive)\/len(women_survive)\nprint(\"Porcentaje de mujeres que sobrevivieron:\", women*100,'%')\n\nman_survive = train_data.loc[train_data.Sex == 'male']['Survived']\nman = sum(man_survive)\/len(man_survive)\nprint(\"Porcentaje de hombres que sobrevivieron:\", man*100,'%')","6454e232":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","a000a504":"# **Exploratory Data Analysis**","abf4b98c":"# **Machine Learning**","a81bae6a":"Solo las columnas Age y Cabin tiene valores nulos, especialmente la columna cabin","f0d22275":"cu\u00e1ntas filas y columnas tiene?"}}