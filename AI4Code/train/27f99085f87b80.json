{"cell_type":{"1001d78d":"code","f558a45e":"code","32b4167a":"code","9f9b08c9":"code","acccd8de":"code","fed8307a":"code","436c6bb3":"code","a87c201c":"code","2b45bbfc":"code","ed31f0db":"code","effead43":"code","493aef6d":"code","0750afcf":"code","73ef1a71":"code","bda9cb21":"code","08bbfb3a":"code","3a3b55fb":"code","56ef8ea9":"code","0e904739":"code","a1bb9e6e":"code","b0963118":"code","184b9271":"code","62efa749":"code","f3657492":"code","0e88085d":"code","0567fd57":"code","0c293a3f":"code","ddc58518":"code","e58e09e6":"code","6cafe92d":"code","8ed3fb98":"code","a94f5a03":"code","b3fa03ef":"code","280f8756":"code","48452e7f":"code","250c9d07":"code","8d9620bf":"code","fe637f6a":"code","7e9664aa":"code","a9f8ff19":"code","7d564a9d":"code","68f1782f":"code","e5dea4b2":"code","5b56e927":"code","297839dc":"code","c1960dca":"code","d1983697":"code","72cca88e":"code","c9505be0":"code","7c5ae1f5":"code","8712ddc5":"code","9011659e":"markdown","7e99ce00":"markdown","7a89aa07":"markdown","59b10bd8":"markdown","7f158541":"markdown","e56b9252":"markdown","1bdde04c":"markdown"},"source":{"1001d78d":"import pandas as pd\nimport numpy as np","f558a45e":"raw_csv_data = pd.read_csv('..\/input\/heart-disease-prediction-using-logistic-regression\/framingham.csv')","32b4167a":"raw_csv_data","9f9b08c9":"df = raw_csv_data.copy()","acccd8de":"df.head(5)","fed8307a":" ## Diplaying all the columns, None means set no maximum value\npd.options.display.max_columns = None\npd.options.display.max_rows = None","436c6bb3":"## display(raw_csv_data)","a87c201c":"## display(df)","2b45bbfc":"df.info()","ed31f0db":"missing_values_count = df.isnull().sum() ##same as df.info but instead of giving the all info, we can see just missing values","effead43":"missing_values_count","493aef6d":"##Finding how many percent of the data is missing?","0750afcf":"total_cells = np.product(df.shape)\ntotal_missing = missing_values_count.sum()\n\n# percent of data that is missing\npercent_missing = (total_missing\/total_cells) * 100\npercent_missing","73ef1a71":"## Decide why the data is missing? It wasn't recorded or it doesn't exist?","bda9cb21":"percent_missing_edu = (df['education'].isnull().sum() \/ df.shape[0]) *100\npercent_missing_edu","08bbfb3a":"## Based on the missing education calculation only 2.5% of the education column is  missing and gueesing the people's education level from the medical reports are almost impossible\n## So, I will drop the missing education data\nedu_missing = df[df['education'].isnull()].index\nedu_missing","3a3b55fb":"df = df.drop(edu_missing)\ndf.isnull().sum()","56ef8ea9":"## cigsPerDay can be both, so I will check if the same index of the missing data current smoker or not,\n## if not null data will fill with 0, or median","0e904739":"cigarette_index = df[df['cigsPerDay'].isnull()].index\ncigarette_index","a1bb9e6e":"## I will check if every missing value from cigsPerDay are actually currentSmoker?\ncurrent_smoke_status = []\nfor i in cigarette_index:\n   current_smoke_status.append(df['currentSmoker'][i])","b0963118":"current_smoke_status  \n","184b9271":"smokers = df[df['currentSmoker'] == 1].index\nsmokers","62efa749":"cigarettes_by_smokers = []\nfor i in smokers:\n     if df['cigsPerDay'][i] != 'nan':\n        cigarettes_by_smokers.append(df['cigsPerDay'][i])","f3657492":"len(cigarettes_by_smokers)","0e88085d":"import statistics","0567fd57":"smoker_median = statistics.median(cigarettes_by_smokers)\nsmoker_median","0c293a3f":"## All of the missing values in cigsPerDay actually current smokers so, i will replace missing values with mean\ndf['cigsPerDay'] = df['cigsPerDay'].fillna(smoker_median)","ddc58518":"df.isnull().sum()","e58e09e6":"## BPMed missing values: I made some research on Google, so if your blood pressure is higher than 140-90 \n## Doctors are recommending to take BPMed. So, I will check if sysBP is higher than 140 and\/or diaBP is higher \n## than 90, if so I will switch NaN values to 1 or 0\n\nBP_missing_index = df[df['BPMeds'].isnull()].index\nBP_missing_index","6cafe92d":"for i in BP_missing_index:\n    if ( df['sysBP'][i] > 140 or df['diaBP'][i] > 90 ):\n        df.loc[i,'BPMeds'] = 1.0  \n    else:\n        df.loc[i,'BPMeds'] = 0.0","8ed3fb98":"df.isnull().sum()","a94f5a03":"df_1 = df.copy()","b3fa03ef":"df_1.head()","280f8756":"## I will going fill rest of the NaN value with mean values","48452e7f":"df_1['totChol'] = df_1['totChol'].fillna(round(df_1['totChol'].mean()))","250c9d07":"df_1['BMI'] = df_1['BMI'].fillna(df_1['BMI'].mean())","8d9620bf":"df_1['glucose'] = df_1['glucose'].fillna(round(df_1['glucose'].mean()))","fe637f6a":"## There is only one missing value in heart rate, I will use bfill method for replacing NA value\n## will bfill it replaces the value that comes directly after it in the same column\n\ndf_1['heartRate'] = df_1['heartRate'].fillna(method='bfill', axis=0)","7e9664aa":"df_1.isnull().sum()","a9f8ff19":"df_1.head(10)","7d564a9d":"## There is no NA value in the dataset, so I can save it!\ndf_2 = df_1.copy()","68f1782f":"df_2[\"education\"].unique()","e5dea4b2":"df_2[\"education\"].value_counts()","5b56e927":"## I will re-group them 0: Less than High School and High School degrees, 1: College Degree and Higher\n\ndf_2[\"education\"] = df_2[\"education\"].map({1.0:0, 2.0:0, 3.0:1, 4.0:1})","297839dc":"df_2[\"education\"].unique()","c1960dca":"df_2[\"education\"].value_counts()","d1983697":"df_2.isnull().sum()","72cca88e":"df_preprocessed = df_2.copy()","c9505be0":"df_preprocessed.head(10)","7c5ae1f5":"df_preprocessed.isnull().sum()","8712ddc5":"df_preprocessed.to_csv('CHD_preprocessed.csv', index=False)","9011659e":"## Dealing with missing values","7e99ce00":"I will create a cigarettes array using smokers indeces. So, I will get the median only from smokers (almost half of the participants are non smokers, reduces the mean( Median turns 0 without checking only smokers)","7a89aa07":"### Checkpoint 3","59b10bd8":"When I only use smoker_mean = round(df['cigsPerDay'].mean()) result was 9, because it was including non-smokers as well. I think this one makes more sense","7f158541":"### Checkpoint 2","e56b9252":"1 - Less than High School Education\n2 - High School\n3 - Undergraduate Degree\n4 - Graduate Degree","1bdde04c":"### Checkpoint 1"}}