{"cell_type":{"5872ca05":"code","83ebcb49":"code","8d160b85":"code","8563cae4":"code","b1e77cd9":"code","e1697b81":"code","d01e363d":"code","bc70bd62":"code","cb17703d":"code","147922f9":"code","1844d1d3":"code","4d7305ee":"code","208a8f59":"code","33e4aec1":"code","03d5e81a":"code","ef029266":"code","f476a3c6":"code","b2ff7db2":"code","e0d629b9":"code","1532d2de":"code","52bc7810":"code","73d58374":"code","ccb849d6":"code","ca2faf19":"code","6a35a92a":"code","c164a1f5":"code","ff607fa7":"code","a5f3a6cd":"code","4f3ce0b8":"code","ff3483d8":"code","1f80cdb3":"code","edca34d3":"code","a3ec879d":"code","3abf0803":"code","cf5dd5d2":"code","ed312ac2":"markdown","35b5af9e":"markdown","28803b4f":"markdown","74f15fd0":"markdown","bfd709b0":"markdown","0d1c15ec":"markdown","073c8a7c":"markdown","4336aab2":"markdown","41d0479f":"markdown","e57e5795":"markdown","58cc541c":"markdown","e60c8368":"markdown","46ac6589":"markdown","cfea1341":"markdown","6fc3958d":"markdown","5d1a69e0":"markdown","168e2e57":"markdown"},"source":{"5872ca05":"import datetime as dt\nimport pandas as pd\nimport matplotlib.pyplot as plt\n!pip install lifetimes\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\n\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)\npd.set_option(\"display.float_format\", lambda x: \"%.2f\" % x)","83ebcb49":"!pip install openpyxl","8d160b85":"df_ = pd.read_excel(\"..\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")\ndf=df_.copy()","8563cae4":"df.shape","b1e77cd9":"df.head()","e1697b81":"df.info()\ndf.describe().T","d01e363d":"# Let's take only United Kingdom for calculation to be fast and take out the returned products from the data\ndf.dropna(inplace=True)\ndf = df[~(df[\"Invoice\"].str.contains(\"C\", na=False))]\ndf = df[df[\"Quantity\"] > 0]\ndf = df[df[\"Country\"] == \"United Kingdom\"]\ndf.describe().T","bc70bd62":"# to define and outlier threshold:\ndef outlier_thresholds(dataframe, variable):\n    Q1=dataframe[variable].quantile(0.01)\n    Q3=dataframe[variable].quantile(0.99)\n    interquartile_range= Q3 - Q1\n    up_limit = Q3 + 1.5 * interquartile_range\n    low_limit = Q1 - 1.5 * interquartile_range\n    return low_limit, up_limit\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    # dataframe.loc[(dataframe[variable]< low_limit), variable]=low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable]=up_limit","cb17703d":"replace_with_thresholds(df, \"Quantity\")\nreplace_with_thresholds(df, \"Price\")\ndf.describe().T","147922f9":"df[\"TotalPrice\"] = df[\"Price\"] * df[\"Quantity\"]\ndf[\"InvoiceDate\"].max()\ntoday_date = dt.datetime(2011, 12, 11)\ndf.head()","1844d1d3":"rfm = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() -date.min()).days,\n                                                     lambda date: (today_date - date.min()).days],\n                                     'Invoice': lambda num: num.nunique(),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\nrfm.columns = rfm.columns.droplevel(0)\nrfm.columns = ['recency_cltv_p', 'T', 'frequency', 'monetary']\nrfm.head()\n# requency gives the number of unique purhase from the company which we can measure with the unique number of invoice\n# monetary is the total revenue that the company makes out of each customer\n# T is the tenure measuring the time between the first purchase and today's date\n# recency is the time between first and last purchase of a customer","4d7305ee":"rfm[\"monetary\"] = rfm[\"monetary\"] \/ rfm[\"frequency\"]\nrfm.rename(columns={\"monetary\": \"monetary_avg\"}, inplace=True)\n\nrfm[\"recency_weekly_p\"] = rfm[\"recency_cltv_p\"] \/ 7\nrfm[\"T_weekly\"] = rfm[\"T\"] \/ 7\n\nrfm = rfm[rfm[\"monetary_avg\"] > 0] \nrfm = rfm[(rfm['frequency'] > 1)] # at least one purchase should be made\nrfm[\"frequency\"] = rfm[\"frequency\"].astype(int)\n\nrfm.head()","208a8f59":"bgf = BetaGeoFitter(penalizer_coef=0.001)\n\nbgf.fit(rfm['frequency'],\n        rfm['recency_weekly_p'],\n        rfm['T_weekly'])","33e4aec1":"bgf.predict(1,\n            rfm['frequency'],\n            rfm['recency_weekly_p'],\n            rfm['T_weekly']).sort_values(ascending=False).head(10)","03d5e81a":"rfm[\"expected_number_of_purchases\"] = bgf.predict(1,\n                                                  rfm['frequency'],\n                                                  rfm['recency_weekly_p'],\n                                                  rfm['T_weekly'])\n\nrfm.head()\n","ef029266":"bgf.predict(4,\n            rfm['frequency'],\n            rfm['recency_weekly_p'],\n            rfm['T_weekly']).sort_values(ascending=False).head(10)","f476a3c6":"rfm[\"expected_number_of_purchases\"] = bgf.predict(4,\n                                                  rfm['frequency'],\n                                                  rfm['recency_weekly_p'],\n                                                  rfm['T_weekly'])\n\nrfm.sort_values(\"expected_number_of_purchases\", ascending=False).head(20)","b2ff7db2":"bgf.predict(4,\n            rfm['frequency'],\n            rfm['recency_weekly_p'],\n            rfm['T_weekly']).sum()","e0d629b9":"bgf.predict(4 * 3,\n            rfm['frequency'],\n            rfm['recency_weekly_p'],\n            rfm['T_weekly']).sum()","1532d2de":"Evaluation of Prediction Results","52bc7810":"plot_period_transactions(bgf)\nplt.show()","73d58374":"ggf = GammaGammaFitter(penalizer_coef=0.01)\nggf.fit(rfm['frequency'], rfm['monetary_avg'])\n\nggf.conditional_expected_average_profit(rfm['frequency'],\n                                        rfm['monetary_avg']).head(10)\n\nrfm[\"expected_average_profit\"] = ggf.conditional_expected_average_profit(rfm['frequency'],\n                                                                         rfm['monetary_avg'])\n\nrfm.sort_values(\"expected_average_profit\", ascending=False).head(10)","ccb849d6":"cltv_1 = ggf.customer_lifetime_value(bgf,\n                                   rfm['frequency'],\n                                   rfm['recency_weekly_p'],\n                                   rfm['T_weekly'],\n                                   rfm['monetary_avg'],\n                                   time=1,  # 1 month\n                                   freq=\"W\",  # Tenure frequency information-weekly.\n                                   discount_rate=0.01)\n\ncltv_1.head()","ca2faf19":"cltv_1 = cltv_1.reset_index()\ncltv_1.rename(columns={\"clv\":\"clv_1\"}, inplace=True)\ncltv_1.head()","6a35a92a":"cltv_6 = ggf.customer_lifetime_value(bgf,\n                                   rfm['frequency'],\n                                   rfm['recency_weekly_p'],\n                                   rfm['T_weekly'],\n                                   rfm['monetary_avg'],\n                                   time=6,  # 6 month\n                                   freq=\"W\",  # Tenure frequency information-weekly.\n                                   discount_rate=0.01)\n\ncltv_6 = cltv_6.reset_index()\ncltv_6.rename(columns={\"clv\":\"clv_6\"}, inplace=True)\ncltv_6.head()","c164a1f5":"cltv_12 = ggf.customer_lifetime_value(bgf,\n                                   rfm['frequency'],\n                                   rfm['recency_weekly_p'],\n                                   rfm['T_weekly'],\n                                   rfm['monetary_avg'],\n                                   time=12,  # 12 ayl\u0131k\n                                   freq=\"W\",  # T'nin frekans bilgisi.\n                                   discount_rate=0.01)\n\ncltv_12 = cltv_12.reset_index()\ncltv_12.rename(columns={\"clv\":\"clv_12\"}, inplace=True)\ncltv_12.head()","ff607fa7":"cltv_1_6 = cltv_1.merge(cltv_6, on=\"Customer ID\", how=\"left\")\ncltv_1_6.head()\ncltv_final = cltv_1_6.merge(cltv_12, on=\"Customer ID\", how= \"left\")\ncltv_final.head()\n\nrfm_cltv_final = rfm.merge(cltv_final, on=\"Customer ID\", how= \"left\")\nrfm_cltv_final.head()\n\nrfm_cltv_final.head(15)","a5f3a6cd":"rfm_cltv_final[[\"Customer ID\", \"clv_1\"]].sort_values(by=\"clv_1\", ascending=False).head(10)","4f3ce0b8":"rfm_cltv_final[[\"Customer ID\", \"clv_12\"]].sort_values(by=\"clv_12\", ascending=False).head(10)","ff3483d8":"# Let us group the customers according to their 6 months cltv predictions and select the top 20%.","1f80cdb3":"pd.qcut(rfm_cltv_final[\"clv_6\"], 3, labels=[\"C\", \"B\", \"A\"]).head()\n\nrfm_cltv_final[\"clv_6_segment\"]=pd.qcut(rfm_cltv_final[\"clv_6\"], 3, labels=[\"C\", \"B\", \"A\"])\nrfm_cltv_final.head()\nrfm_cltv_final.sort_values(\"clv_6\", ascending=False).head(10)","edca34d3":"# total customer\nrfm_cltv_final.shape[0]","a3ec879d":"# top 20% of customers:\n2570*0.20","3abf0803":"rfm_cltv_final_top = rfm_cltv_final.nlargest(514,columns=\"clv_6\")\nrfm_cltv_final_top.head(10)","cf5dd5d2":"rfm_cltv_final.groupby(\"clv_6_segment\").agg({\n                                            \"monetary_avg\": \"mean\",\n                                             \"recency_weekly_p\": \"mean\",\n                                            \"T_weekly\": \"mean\",\n                                             \"frequency\": \"mean\",\n                                             \"expected_number_of_purchases\": \"mean\",\n                                             \"expected_average_profit\": \"mean\"}).head(10)\n\n","ed312ac2":"### 1 Month CLTV Prediction with BG-NBD & GG Model","35b5af9e":"## DATA PREPARATION","28803b4f":"## RFM TABLE","74f15fd0":"Who are the top 10 customers that we expect to spend the most according to the model in 1 week?","bfd709b0":"### Segmentation","0d1c15ec":"## BG\/NBD MODEL","073c8a7c":"### Project Description\n* Customer Lifetime Value means a customer's purchase history from the beginning of its first purchase to the current date.\n* This means the monetary value of a customer during its relation with the company.\n* If we know the benefit that a customer brings to the company than it is easier to manage the relations.\n* We will make CLTV Predicition by using BGNBD and Gamma-Gamma model\n* Instead of calculate the current value of a custumer lifetime; we will predict the value for example 6 months or 1 year\n\n\n#### Dataset\nThe dataset named online_retail_II includes sales information of an online retail company based on England between 2009-2011.\n\n#### Data Description\nInvoiceNo: Invoice number. Nominal. A 6-digit integral number uniquely assigned to each transaction. If this code starts with the letter 'c', it indicates a cancellation.\n\nStockCode: Product (item) code. Nominal. A 5-digit integral number uniquely assigned to each distinct product.\n\nDescription: Product (item) name. Nominal.\n\nQuantity: The quantities of each product (item) per transaction. Numeric.\n\nInvoiceDate: Invice date and time. Numeric. The day and time when a transaction was generated.\n\nUnitPrice: Unit price. Numeric. Product price per unit in sterling (\u00a3).\n\nCustomerID: Customer number. Nominal. A 5-digit integral number uniquely assigned to each customer.\n\nCountry: Country name. Nominal. The name of the country where a customer resides.\n","4336aab2":"### 12 Months CLTV Prediction with BG-NBD & GG Model","41d0479f":"1. From the top 10 customers, only 2 of them have a slight order change comparing 1 and 12 months cltv prediciton and the last customer has changed from 1 month to 12 months in the top 10 order.","e57e5795":"What is the expected number of sales for the company in 1 month?","58cc541c":"What is the expected number of sales for the company in 3 months?","e60c8368":"Who are the top 10 customers that we expect to spend the most according to the model in 1 month?","46ac6589":"### 6 Months CLTV Prediction with BG-NBD & GG Model","cfea1341":"## GAMMA-GAMMA MODEL","6fc3958d":"#### Any difference between 1 month exp. cltv and 12 months exp. cltv on customer basis? ","5d1a69e0":"### Merge Tables","168e2e57":"* We see that the A_segment customers have the highest profit brought to the company and by far have the highest frequency.\n* Interestingly B_segment has a higher recency score than the others this brings to the conclusion that monetray values have higher impact on the cltv predictions."}}