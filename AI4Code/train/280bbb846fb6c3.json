{"cell_type":{"69c4b290":"code","42699fd5":"code","7b44f9f0":"code","5260ad06":"code","2623bc15":"code","30a5d604":"code","5af86348":"code","f91ed32e":"code","70e0e352":"code","982fe9a8":"code","290d9a07":"code","67c9dfa9":"code","718f4242":"code","a432e30e":"code","56b14701":"code","78ef0ada":"code","ab6e1872":"code","d4c6c93f":"code","397da8e5":"code","5a93ae33":"code","66861c3f":"code","a8a93722":"code","fb9e7b3e":"code","6584018d":"code","4e79a276":"code","682bd7cd":"code","e0545b3c":"code","9ce2c981":"code","1e6472c5":"markdown","825553f1":"markdown","99225b5e":"markdown","9d926aa4":"markdown","27b06c95":"markdown","a82faf66":"markdown","de922e7b":"markdown","4165cab0":"markdown","f0992b4d":"markdown"},"source":{"69c4b290":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42699fd5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport\n\nprint('imports ok')","7b44f9f0":"df = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ndf.head(10)","5260ad06":"df.tail(10)","2623bc15":"df.dtypes","30a5d604":"df.describe()","5af86348":"df.describe(include=\"all\")","f91ed32e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom IPython.display import HTML\nimport calendar\nimport plotly.graph_objects as go\nfrom wordcloud import WordCloud, STOPWORDS","70e0e352":"# Missing Values\n\nmissing_value = 100 * df.isnull().sum()\/len(df)\nmissing_value = missing_value.reset_index()\nmissing_value.columns = ['variables', 'missing values in percentage']\n\n# heatmap\nfig = px.imshow(df.isnull().T, template='ggplot2')\nfig.update_layout(title='Missing values in dara set')\nfig.show()","982fe9a8":"# barplot\nfig = px.bar(missing_value, y='missing values in percentage', x='variables', title='Missing values % in each column', template='ggplot2')\nfig.show()\n","290d9a07":"# passando data para formato pt-BR\n\n# df['date'] = pd.to_datetime(df['date'], format('%d\/%m\/%y'))\n# df['date']\n\n# df['date'] = df['date'] = pd.to_datetime(df.date, infer_datetime_format=True)\n# df.head(100)\n# df['date'] = df['date'].dt.strftime(format = '%d\/%m\/%y')","67c9dfa9":"df.head()","718f4242":"# Limpeza de ISO code dados\ndf[df['iso_code'].isnull()]['country'].unique()\n\n# pa\u00edses que est\u00e3o bob c\u00f3digo do Reino Unido","a432e30e":"df['iso_code'] = df['iso_code'].fillna('GBR')","56b14701":"\nprofile = ProfileReport(df, title=\"Pandas Profiling Report\")\n\nprofile","78ef0ada":"df_vaccines = df.groupby(['country', 'vaccines'])[['people_vaccinated']].max().reset_index()\ndf_vaccines","ab6e1872":"df_vaccines = df_vaccines.sort_values('people_vaccinated', ascending=False)\ndf_vaccines.columns = ['Country','Vaccines','Total number of people vaccinated']\ndf_vaccines.head(10)","d4c6c93f":"fig = px.sunburst(\n    df_vaccines, path=['Vaccines', 'Country'],\n    values='Total number of people vaccinated',\n    title='Quais pa\u00edses usam quais vacinas?',\n    height=650, color_continuous_scale=px.colors.cyclical.Twilight\n)\n\nfig.show()","397da8e5":"plot_vaccines = df.groupby(['vaccines'])[['people_vaccinated']].max().reset_index()\nplot_vaccines","5a93ae33":"plot_vaccines = plot_vaccines.sort_values('people_vaccinated', ascending=False)\nplot_vaccines","66861c3f":"plot_vaccines.columns = ['Vaccines', 'Total number of people vaccinated']\n\nfig = px.bar(plot_vaccines, x = 'Vaccines', y='Total number of people vaccinated', template='none', title='Top Vaccines', color='Total number of people vaccinated')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","a8a93722":"# Top countries in Vaccination\n\nfig = px.bar(df_vaccines[0:24], x='Country', y='Total number of people vaccinated', template='none', title='Top countries in Vaccination progress', color='Total number of people vaccinated')\nfig.update(layout_coloraxis_showscale=True)\nfig.show()","fb9e7b3e":"plot_vac = df.groupby('iso_code')['total_vaccinations'].max().reset_index()\nplot_vac","6584018d":"fig = px.choropleth(plot_vac, locations=\"iso_code\",\n                   color=\"total_vaccinations\",\n                   hover_name='iso_code',\n                   color_continuous_scale=px.colors.sequential.Magma,\n                   title='Total vaccinations in each country')\n\nfig.update_layout(geo=dict(bgcolor = 'white'))\n\nfig.update_geos(projection_type=\"natural earth\")\n\nfig.show()","4e79a276":"date_plot = df.sort_values('date', ascending=True)\n","682bd7cd":"fig = px.choropleth(date_plot, locations='iso_code',\n                   color='daily_vaccinations',\n                   animation_frame = 'date',\n                   hover_name='country',\n                   title='Daily vaccinations in each Country')\n\nfig.update_layout(geo=dict(bgcolor = 'White'))\nfig.update_geos(projection_type='natural earth')\nfig.show()","e0545b3c":"percent_vacc = df.groupby(['country', 'iso_code']).max().reset_index()\npercent_vacc","9ce2c981":"fig = px.scatter_geo(percent_vacc, locations='iso_code',\n                    size='total_vaccinations_per_hundred',\n                    color='country',\n                    hover_name='country',\n                    color_continuous_scale=px.colors.sequential.Tealgrn,\n                    title=\"Percentage of people vaccinated per hundred in each Country\")\n\nfig.update_layout(geo=dict(bgcolor='#61efff'))\nfig.update_geos(projection_type='natural earth')\n\nfig.show()","1e6472c5":"# Em qual pa\u00eds o programa de vacina\u00e7\u00e3o est\u00e1 mais avan\u00e7ado?","825553f1":"* Mutias das vari\u00e1veis possuem NaN\/Valores nulos como People_cavvinations_raw e People_fully_vaccinations possuem mais de 80% de valores nulos\n* Dayly_vaccinations, total_vaccinations possuem valores nulos porque se tomarmos em considera\u00e7\u00e3o que alguns pa\u00edses n\u00e3o iniciaram a vacina\u00e7\u00e3o a partir da data em 2020","99225b5e":"# Quais pa\u00edses usam qual vacina?","9d926aa4":"## import packages","27b06c95":"# Limpeza dos dados","a82faf66":"## Exploring dataset","de922e7b":"* The USa, China and the U.K are the top of the vaccination progress","4165cab0":"* no plot acima, podemos perceber no centro, os tipos de vacinas e ao clicar nelas, podemos ver quais pa\u00edses mais a usam. ","f0992b4d":"* Alguns pa\u00edses iniciaram o programa de vacina\u00e7\u00e3o em Dezembro de 2020. (R\u00fassia, EUA, China, Argentina, M\u00e9xico e UK)\n\n* Alguns pa\u00edses iniciaram o programa de vacina\u00e7\u00e3o em meados de Janeiro. (Indon\u00e9sia,India, Emirados \u00c1rabes Unidos, Brasil, Fran\u00e7a e It\u00e1lia)"}}