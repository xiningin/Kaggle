{"cell_type":{"dee3ca85":"code","5dfb1b0c":"code","cd1a4bdf":"code","bc68208e":"code","d3a1ab03":"code","271ebc20":"code","f23a1192":"code","aed86c04":"code","cdb18ab2":"code","22f70e75":"code","40841c6b":"code","603ac892":"code","9698b34e":"code","e8047004":"code","1a9a4c24":"code","7d02ba3a":"code","fb51c3ca":"code","cefb5d0d":"code","7fe9e0d5":"code","5cb2d55c":"code","1200a9da":"code","9279453a":"code","71e8422d":"code","37737150":"code","975be4f8":"code","6e933dac":"markdown","7cb2fc3f":"markdown","3835f9fc":"markdown","2b282730":"markdown","d408b0e0":"markdown","bb34ab33":"markdown","a257ff5e":"markdown","02b0ab4c":"markdown","ee47d946":"markdown","0e909aa2":"markdown","be3d0a5d":"markdown","63c2d9a2":"markdown","c5183775":"markdown","0b0d0ebc":"markdown","72760051":"markdown","345e8847":"markdown","62766363":"markdown","17c1ebfb":"markdown","a0d852a1":"markdown","b7a43f2e":"markdown","42bfeddf":"markdown","9a5b2ffa":"markdown","1c35e286":"markdown"},"source":{"dee3ca85":"import numpy as np\nimport holoviews as hv\n\nhv.extension('matplotlib')","5dfb1b0c":"import warnings\nwarnings.filterwarnings('ignore')","cd1a4bdf":"c = 299792458 # m\/c\nmc = 0.511e6 # eV\/c\nQe = 1.60217662e-19 # elementary charge in Coulombs\n\np0 = 400e6 # eV\/c","bc68208e":"Ne = 2e10  # Number of electrons\/positrons in the beam\nN  = 200000 # number of macro-particles in this simulation","d3a1ab03":"print(\"Bunch charge = %.1f nC\" % (Ne*Qe\/1e-9))","271ebc20":"sigma_z = 0.6 # m\n#sigma_z = 1.0e-2 # m -- to test wakefield calculation\n\nsigma_dp = 0.004 # relative momentum spread","f23a1192":"z0  = np.random.normal(scale=sigma_z, size=N)\n#z0  = np.random.uniform(low=-sigma_z*2, high=sigma_z*2, size=N)\ndp0 = np.random.normal(scale=sigma_dp, size=N)","aed86c04":"%opts Scatter (alpha=0.01 s=1) [aspect=3 show_grid=True]\n\ndim_z  = hv.Dimension('z',  unit='m', range=(-12,+12))\ndim_dp = hv.Dimension('dp', label='100%*$\\Delta p\/p$', range=(-1.5,+1.5))\n\n%output backend='matplotlib' fig='png' size=200 dpi=100","cdb18ab2":"hv.Scatter((z0,dp0*100), kdims=[dim_z,dim_dp])","22f70e75":"def get_I(z, z_bin = 0.05, z_min=-15, z_max=+15):\n    # z, z_bin, z_min, z_max in meters\n    \n    hist, bins = np.histogram( z, range=(z_min, z_max), bins=int((z_max-z_min)\/z_bin) )\n    Qm = Qe*Ne\/N # macroparticle charge in C\n    I = hist*Qm\/(z_bin\/c) # A\n\n    z_centers = (bins[:-1] + bins[1:]) \/ 2\n    \n    return z_centers, I","40841c6b":"%opts Area [show_grid=True aspect=3] (alpha=0.5)\n\ndim_I = hv.Dimension('I',  unit='A',  range=(0.0,+1.0))\n\nhv.Area(get_I(z0), kdims=[dim_z], vdims=[dim_I])","603ac892":"L = 27.0 # m -- storage ring perimeter\ngamma_t = 6.0 # gamma transition in the ring\neta = 1\/(gamma_t*gamma_t) - 1\/((p0\/mc)*(p0\/mc))","9698b34e":"#N_turns = 1000020\nN_turns = 2000\nN_plots = 11\n\nh = 1\neVrf = 5e3 # eV\n#eVrf = 0.0 # eV\nphi0 = np.pi\/2\n\nt_plots = np.arange(0,N_turns+1,int(N_turns\/(N_plots-1)))\n\ndata2plot = {}\n\nz = z0; dp = dp0\nfor turn in range(0,N_turns+1):\n    if turn in t_plots:\n        print( \"\\rturn = %g (%g %%)\" % (turn, (100*turn\/N_turns)), end=\"\")\n        data2plot[turn] = (z,dp)\n    \n    phi = phi0 - 2*np.pi*h*(z\/L)  # phase in the resonator\n    \n    # 1-turn transformation:\n    dp  = dp + eVrf*np.cos(phi)\/p0\n    z = z - L*eta*dp","e8047004":"def plot_z_dp(turn):\n    z, dp = data2plot[turn]\n    z_dp = hv.Scatter((z, dp*100), [dim_z,dim_dp])\n    z_I  = hv.Area(get_I(z), kdims=[dim_z], vdims=[dim_I])\n    return (z_dp+z_I).cols(1)","1a9a4c24":"#plot_z_dp(1000)","7d02ba3a":"items = [(turn, plot_z_dp(turn)) for turn in t_plots]\n\nm = hv.HoloMap(items, kdims = ['Turn'])\nm.collate()","fb51c3ca":"def Wake(xi):\n    # of course some other wake can be defined here.\n    \n    fr = 0.3e9 # Hz\n    Rs = 1.0e5 # Ohm\n    Q  = 5  # quality factor\n   \n    wr = 2*np.pi*fr\n    alpha = wr\/(2*Q)\n    wr1 = wr*np.sqrt(1 - 1\/(4*Q*Q))\n    \n    W = 2*alpha*Rs*np.exp(alpha*xi\/c)*(np.cos(wr1*xi\/c) + (alpha\/wr1)*np.sin(wr1*xi\/c))\n    W[xi==0] = alpha*Rs\n    W[xi>0] = 0\n    \n    return W","cefb5d0d":"%opts Curve [show_grid=True aspect=3]\n\ndim_xi   = hv.Dimension('xi', label=r\"$\\xi$\", unit='m')\ndim_Wake = hv.Dimension('W',  label=r\"$W$\", unit='V\/pC')\n\nL_wake = 10 # m\ndz = 0.04 # m\nxi = np.linspace(-L_wake, 0, int(L_wake\/dz)) # m\nW = Wake(xi)\n\nhv.Curve((xi, W\/1.0e12), kdims=[dim_xi], vdims=[dim_Wake])","7fe9e0d5":"zc, I = get_I(z0, z_bin=dz)\n\nV = -np.convolve(W, I)*dz\/c # V","5cb2d55c":"zV = np.linspace(max(zc)-dz*len(V), max(zc), len(V))","1200a9da":"dim_V = hv.Dimension('V', unit='kV', range=(-10,+10))\n\n(hv.Curve((zV, V\/1e3), kdims=[dim_z], vdims=[dim_V]) + \\\n hv.Area((zc,I), kdims=[dim_z], vdims=[dim_I])).cols(1)","9279453a":"data2plot = {}\n\n#eVrf = 0    # V\n#eVrf = 3e3 # V\n\nz = z0; dp = dp0\nfor turn in range(0,N_turns+1):\n    if turn in t_plots:\n        print( \"\\rturn = %g (%g %%)\" % (turn, (100*turn\/N_turns)), end=\"\")\n        data2plot[turn] = (z,dp)\n    \n    phi = phi0 - 2*np.pi*h*(z\/L)  # phase in the resonator\n    \n    # RF-cavity\n    dp  = dp + eVrf*np.cos(phi)\/p0\n    \n    # wakefield:\n    zc, I = get_I(z, z_bin=dz) # A\n    V = -np.convolve(W, I)*dz\/c # V    \n    V_s = np.interp(z,zV,V)\n    dp  = dp + V_s\/p0\n\n    # z after one turn:\n    z = z - L*eta*dp","71e8422d":"def plot_z_dp(turn):\n    z, dp = data2plot[turn]\n    z_dp = hv.Scatter((z, dp*100), [dim_z,dim_dp])\n    zc, I = get_I(z, z_bin=dz)\n    z_I  = hv.Area((zc,I), kdims=[dim_z], vdims=[dim_I])\n    V = -np.convolve(W, I)*dz\/c # V\n    z_V  = hv.Curve((zV, V\/1e3), kdims=[dim_z], vdims=[dim_V])\n    return (z_dp+z_I+z_V).cols(1)","37737150":"items = [(turn, plot_z_dp(turn)) for turn in t_plots]\n\nm = hv.HoloMap(items, kdims = ['Turn'])\nm.collate()","975be4f8":"#np.save(\"plots.npy\", data2plot)","6e933dac":"## Tracking with impedance","7cb2fc3f":"Longitudinal coordinate $z$ gives the longitudinal distance from the electron to the reference particle at the moment when the reference particle arrives at the RF-phase $\\phi_0$ (which is always the same). So the electron then arrives to the RF-resonator after the time\n\n$$\n\\Delta T = -\\frac{z}{c}.\n$$","3835f9fc":"The function to get beam current profile corresponding to particle distribution:","2b282730":"RF-resonator frequency $f_{\\rm{RF}}$ is some harmonic $h$ of revolution frequency:\n\n$$\nf_{\\rm{RF}} = \\frac{h}{T_s},\n$$\n\nwhere $T_s$ is the revolution period.","d408b0e0":"## Multi-turn tracking","bb34ab33":"Then the longitudinal position after one turn is\n$$\nz_{n+1} = z_n - L \\eta\\frac{\\Delta p_{n+1}}{p}.\n$$","a257ff5e":"Distribution in $z$ and $\\delta p = \\frac{\\Delta p}{p}$ can be defined easily since they are not correlated:","02b0ab4c":"Now let's introduce the longitiudinal wakefield.\n\nFirst define wake-function in terms of $\\xi = z - ct$:","ee47d946":"where $L$ is the ring perimeter. If the electron momentum is different from its reference value then the period of revolution $T$ is different from $T_s$:\n$$\nT = \\frac{L+\\Delta l}{\\upsilon_s + \\Delta \\upsilon} \\approx T_s \\left ( 1 + \\frac{\\Delta l}{L} - \\frac{\\Delta \\upsilon}{\\upsilon_s} \\right ) \\approx T_s \\left ( 1 + \\frac{\\Delta l}{L} - \\frac{1}{\\gamma^2} \\frac{\\Delta p}{p} \\right ).\n$$\nThe difference between the length of electron trajectory and the reference orbit length is given by the $M_{56}$ element of the 1-turn transport matrix:\n$$\n\\Delta l = M_{56} \\frac{\\Delta p} {p}.\n$$\n$\\Delta T = T - T_s$ in can be written as\n$$\n\\Delta T \\approx T_s \\left ( \\frac{M_{56}}{L} - \\frac{1}{\\gamma^2} \\right ) \\frac{\\Delta p}{p} = T_s \\left ( \\frac{1}{\\gamma_t^2} - \\frac{1}{\\gamma^2} \\right ) \\frac{\\Delta p}{p} = T_s\\eta\\frac{\\Delta p}{p}.\n$$","0e909aa2":"Then the electron phase in the RF-resonator is\n\n$$\n\\phi = \\phi_0 + 2\\pi f_{\\rm{RF}}\\Delta T = \\phi_0 - 2\\pi \\frac{hz}{T_s c} \\approx \\phi_0 - 2\\pi \\frac{hz}{L}.\n$$","be3d0a5d":"where $E_{\\rm{RF}}$ is the accelerating electric field and $\\phi$ is the electron phase in the RF resonator. The resulting longitudinal momentum change:","63c2d9a2":"Electron beam parameters:","c5183775":"Longitudinal momentum gain of electron after it has passed through the RF-resonator depends on the electron phase with respect to the RF:","0b0d0ebc":"$$\n\\delta p_z = e\\frac{ V_{\\rm{RF}} }{ L_{\\rm{RF}}} (\\cos\\phi) \\Delta t = e\\frac{ V_{\\rm{RF}} }{c} \\cos\\phi,\n$$","72760051":"where $V_{\\rm{RF}}$ is the RF-voltage.","345e8847":"### Electron beam definition","62766363":"Longitudinal wake-function defines the wakefield amplitude from a point-like charge. Therefore a distribution of charge will produce the wakefield\n\n$$\nE(z) = -\\int\\limits_{z}^{+\\infty} W(z-z')I(z')dz'\/c = -\\int\\limits_{-\\infty}^{0} W(\\xi)I(z-\\xi)d\\xi\/c,\n$$","17c1ebfb":"## Longitudinal wakefield","a0d852a1":"### Wakefield from e-bunch","b7a43f2e":"### Effects of RF-resonator","42bfeddf":"# Microwave instability simulation\n\n<a href=\"http:\/\/www.inp.nsk.su\/~petrenko\/\">A. Petrenko<\/a> (Novosibirsk, 2019)\n\nThis notebook explains the basics of longitudinal particle motion in a storage ring with impedance.","9a5b2ffa":"Equation for wake-function can be obtained by performing a Fourier transformation of the impedance\n\n$$\nZ = \\frac{R_s}{1 + iQ\\left(\\frac{\\omega_R}{\\omega} -\\frac{\\omega}{\\omega_R}\\right)},\n$$\nwhere $Q$ is the quality factor, $\\omega_R$ is the frequency.\n\n(from A. Chao's book &#147;<a href=http:\/\/www.slac.stanford.edu\/~achao\/wileybook.html>Physics of Collective Beam Instabilities in High Energy Accelerators<\/a>&#148;. <a href=http:\/\/www.slac.stanford.edu\/~achao\/WileyBook\/WileyChapter2.pdf>Chapter 2<\/a>, p. 73):\n\n$$\nW(\\xi) = \\begin{cases}\n 2\\alpha R_s e^{\\alpha \\xi\/c}\\left(\\cos\\frac{\\overline{\\omega} \\xi}{c} + \\frac{\\alpha}{\\overline{\\omega}}\\sin\\frac{\\overline{\\omega} \\xi}{c}\\right), & \\mbox{if } \\xi < 0 \\\\\n \\alpha R_s, & \\mbox{if } \\xi = 0 \\\\\n 0, & \\mbox{if } \\xi > 0,\n\\end{cases}\n$$\n\nwhere $\\alpha = \\omega_R \/ 2Q$ and $\\overline\\omega = \\sqrt{\\omega_R^2 -\\alpha^2}$.","1c35e286":"$$\n\\frac{dp_z}{dt} = eE_{\\rm{RF}}\\cos\\phi,\n$$"}}