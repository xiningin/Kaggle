{"cell_type":{"506d0059":"code","68c4fc8d":"code","b13f7af8":"code","7de2c27b":"code","6b17521f":"code","52228a21":"code","de25a1d6":"code","36d3229a":"code","7d69dbd7":"code","8de1c5e6":"code","bfb472b0":"code","e9449b41":"code","a8f97c2e":"code","7f06719e":"code","9299f8cc":"code","e713547b":"code","c8113b09":"code","3e2160b8":"code","1bb09d0f":"code","cee94667":"code","6b47f2a1":"code","26baf5c4":"code","5881d163":"code","06fc01f5":"code","8fc9cc0b":"code","1e8cd5f6":"code","153b270f":"code","d539c059":"code","5a22ef31":"code","798ca3e8":"markdown","c9ac95c3":"markdown","5c2621eb":"markdown","e9f7d31c":"markdown","32e34193":"markdown","d3bef3e0":"markdown","8fb233b5":"markdown","986d2286":"markdown","56c6d4eb":"markdown","d92d8f8a":"markdown"},"source":{"506d0059":"import json\nimport os\n\nimport numpy as np\nimport pandas as pd \nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","68c4fc8d":"base_path = \"\/kaggle\/input\/kensho-ohio-voter-project\"\nall_files = os.listdir(base_path)\ngeo_files = [file for file in all_files if file.endswith(\"geojson\")]\ndemo_county_files = [file for file in all_files if file.startswith(\"oh_counties\")]\ndemo_cousub_files = [file for file in all_files if file.startswith(\"oh_county_sub\")]\ndemo_cd116_files = [file for file in all_files if file.startswith(\"oh_cong_dist\")]\n\nprint(\"base_path=\", base_path)\nprint()\nprint(\"geography files\")\nfor file in geo_files:\n    print(\"  \", file)\nprint()\nprint(\"demographic county files\")\nfor file in demo_county_files:\n    print(\"  \", file)\nprint()\nprint(\"demographic sub county files\")\nfor file in demo_cousub_files:\n    print(\"  \", file)\nprint()\nprint(\"demographic congressional district files\")\nfor file in demo_cd116_files:\n    print(\"  \", file)","b13f7af8":"def read_geojson(entity):\n    ss = \"us\" if entity == \"zcta510\" else \"39\"\n    file_path = os.path.join(base_path, f\"cb_2019_{ss}_{entity}_500k.geojson\")\n    with open(file_path, \"r\") as fp:\n        gjson = json.load(fp)\n    return gjson","7de2c27b":"def df_from_geojson(gjson):\n    df = pd.DataFrame({\n        key: [feature[\"properties\"][key] for feature in gjson[\"features\"]]\n        for key in gjson[\"features\"][0][\"properties\"]\n    })\n    return df","6b17521f":"gjsons = {\n    \"county\": read_geojson(\"county\"),\n    \"cousub\": read_geojson(\"cousub\"),\n    \"cd116\": read_geojson(\"cd116\"),\n}","52228a21":"dfs_geo = {\n    \"county\": df_from_geojson(gjsons[\"county\"]),\n    \"cousub\": df_from_geojson(gjsons[\"cousub\"]),\n    \"cd116\": df_from_geojson(gjsons[\"cd116\"]),\n}","de25a1d6":"dfs_geo[\"county\"]","36d3229a":"dfs_geo[\"cousub\"]","7d69dbd7":"dfs_geo[\"cd116\"]","8de1c5e6":"def generate_county_demo(df_geo):\n    df_demo = df_geo[[\"COUNTYFP\", \"NAME\"]].copy()\n    quants = [\"median_age\", \"median_income\", \"total_pop\", \"black_pop\", \"hisp_pop\", \"white_pop\"]\n    file_map = {\n        \"median_age\": \"oh_counties_median_age_2018.csv\",\n        \"median_income\": \"oh_counties_median_income_2018.csv\",\n        \"total_pop\": \"oh_counties_total_pop_2018.csv\",\n        \"black_pop\": \"oh_counties_black_2018.csv\",\n        \"hisp_pop\": \"oh_counties_hisp_2018.csv\",\n        \"white_pop\": \"oh_counties_white_alone_not_hisp_2018.csv\",\n    }\n        \n    for qq in quants:\n        file_path = os.path.join(base_path, \"{}\".format(file_map[qq]))\n        df = pd.read_csv(file_path)[[\"county_fips\", \"value\"]]\n        df = df.rename(columns={\"value\": qq})\n        df[\"COUNTYFP\"] = df[\"county_fips\"].apply(lambda x: '{:0>3d}'.format(x))\n        df = df.drop(columns=[\"county_fips\"])\n        df_demo = pd.merge(df_demo, df, on=\"COUNTYFP\")\n\n    df_demo[\"black_perc\"] = df_demo[\"black_pop\"] \/ df_demo[\"total_pop\"]\n    df_demo[\"hisp_perc\"] = df_demo[\"hisp_pop\"] \/ df_demo[\"total_pop\"]\n    df_demo[\"white_perc\"] = df_demo[\"white_pop\"] \/ df_demo[\"total_pop\"]\n    return df_demo","bfb472b0":"def generate_cousub_demo(df_geo):\n    df_demo = df_geo[[\"AFFGEOID\", \"NAME\"]].copy()\n    file_path = os.path.join(base_path, \"oh_county_sub_perc_white_non_hisp.csv\")\n    df = pd.read_csv(file_path) \n    df[\"AFFGEOID\"] = df[\"geoid\"].apply(lambda x: x.replace(\"06000\", \"0600000\"))\n    df = df[[\"AFFGEOID\", \"total_pop\", \"white_pop\", \"perc_white\"]]\n    df = df.rename(columns={\"perc_white\": \"white_perc\"})\n    df_demo = pd.merge(df_demo, df, on=\"AFFGEOID\")\n    return df_demo","e9449b41":"def generate_cd116_demo(df_geo):\n    df_demo = df_geo[[\"CD116FP\"]].copy()\n    quants = [\"median_age\", \"median_income\", \"total_pop\", \"black_pop\", \"hisp_pop\", \"white_pop\"]\n    file_map = {\n        \"median_age\": \"oh_cong_dist_median_age_2018.csv\",\n        \"median_income\": \"oh_cong_dist_median_income_2018.csv\",\n        \"total_pop\": \"oh_cong_dist_total_pop_2018.csv\",\n        \"black_pop\": \"oh_cong_dist_black_2018.csv\",\n        \"hisp_pop\": \"oh_cong_dist_hisp_2018.csv\",\n        \"white_pop\": \"oh_cong_dist_white_alone_not_hisp_2018.csv\",\n    }\n        \n    for qq in quants:\n        file_path = os.path.join(base_path, \"{}\".format(file_map[qq]))\n        df = pd.read_csv(file_path)[[\"cong_district\", \"value\"]]\n        df = df.rename(columns={\"value\": qq})\n        df[\"CD116FP\"] = df[\"cong_district\"].apply(lambda x: '{:0>2d}'.format(x))\n        df = df.drop(columns=[\"cong_district\"])\n        df_demo = pd.merge(df_demo, df, on=\"CD116FP\")\n\n    df_demo[\"black_perc\"] = df_demo[\"black_pop\"] \/ df_demo[\"total_pop\"]\n    df_demo[\"hisp_perc\"] = df_demo[\"hisp_pop\"] \/ df_demo[\"total_pop\"]\n    df_demo[\"white_perc\"] = df_demo[\"white_pop\"] \/ df_demo[\"total_pop\"]\n    return df_demo","a8f97c2e":"dfs_demo = {}","7f06719e":"dfs_demo[\"county\"] = generate_county_demo(dfs_geo[\"county\"])\ndfs_demo[\"county\"]","9299f8cc":"dfs_demo[\"cousub\"] = generate_cousub_demo(dfs_geo[\"cousub\"])\ndfs_demo[\"cousub\"]","e713547b":"dfs_demo[\"cd116\"] = generate_cd116_demo(dfs_geo[\"cd116\"])\ndfs_demo[\"cd116\"]","c8113b09":"def plot_age_income(df_demo):\n    plot_cols = [\"median_age\", \"median_income\"]\n    fig = make_subplots(rows=1, cols=2, subplot_titles=plot_cols)\n\n    fig.append_trace(go.Histogram(x=df_demo[\"median_age\"]), 1, 1)\n    fig.append_trace(go.Histogram(x=df_demo[\"median_income\"]), 1, 2)\n\n    fig = fig.update_layout(\n        margin={\"r\":0,\"t\":50,\"l\":0,\"b\":0},\n        height=350,\n        width=700,\n        showlegend=False,\n    )\n    fig.show() ","3e2160b8":"plot_age_income(dfs_demo[\"county\"])","1bb09d0f":"plot_age_income(dfs_demo[\"cd116\"])","cee94667":"def plot_pop(df_demo):\n    plot_cols = [\"total_pop\", \"black_pop\", \"hisp_pop\", \"white_pop\"]\n    fig = make_subplots(rows=2, cols=2, subplot_titles=plot_cols)\n\n    fig.append_trace(go.Histogram(x=df_demo[\"total_pop\"]), 1, 1)\n    fig.update_yaxes(type=\"log\")\n    fig.append_trace(go.Histogram(x=df_demo[\"black_pop\"]), 1, 2)\n    fig.update_yaxes(type=\"log\")\n    fig.append_trace(go.Histogram(x=df_demo[\"hisp_pop\"]), 2, 1)\n    fig.update_yaxes(type=\"log\")\n    fig.append_trace(go.Histogram(x=df_demo[\"white_pop\"]), 2, 2)\n    fig.update_yaxes(type=\"log\")\n\n    fig = fig.update_layout(\n        margin={\"r\":0,\"t\":50,\"l\":0,\"b\":0},\n        height=700,\n        width=700,\n        showlegend=False,\n    )\n    \n    fig.show()","6b47f2a1":"plot_pop(dfs_demo[\"county\"])","26baf5c4":"plot_pop(dfs_demo[\"cd116\"])","5881d163":"def plot_perc(df_demo):\n    plot_cols = [\"black_perc\", \"hisp_perc\", \"white_perc\"]\n    fig = make_subplots(rows=2, cols=2, subplot_titles=plot_cols)\n    xbins={\"start\": 0, \"end\": 1}\n    \n    fig.append_trace(go.Histogram(\n        x=df_demo[\"black_perc\"], xbins=xbins, bingroup=1), 1, 1)\n#    fig.update_yaxes(type=\"log\")\n    fig.update_xaxes(range=(0,1))\n    \n    fig.append_trace(go.Histogram(\n        x=df_demo[\"hisp_perc\"], xbins=xbins, bingroup=1), 1, 2)\n#    fig.update_yaxes(type=\"log\")\n    fig.update_xaxes(range=(0,1))\n    \n    fig.append_trace(go.Histogram(\n        x=df_demo[\"white_perc\"], xbins=xbins, bingroup=1), 2, 1)\n#    fig.update_yaxes(type=\"log\")\n    fig.update_xaxes(range=(0,1))\n\n    fig = fig.update_layout(\n        margin={\"r\":0,\"t\":50,\"l\":0,\"b\":0},\n        height=700,\n        width=700,\n        showlegend=False,\n    )\n    \n    fig.show()","06fc01f5":"plot_perc(dfs_demo[\"county\"])","8fc9cc0b":"plot_perc(dfs_demo[\"cd116\"])","1e8cd5f6":"DEFAULT_QUANTS = [\n    \"median_age\", \"median_income\", \n    \"total_pop\", \"black_pop\", \"hisp_pop\", \"white_pop\", \n    \"black_perc\", \"hisp_perc\", \"white_perc\"\n]\ndef plot_choropleths(gjson, df_demo, entity, quants=DEFAULT_QUANTS):\n\n    if entity == \"county\":\n        hover_data = [\"NAME\"]\n        locations=\"COUNTYFP\"\n        featureidkey=\"properties.COUNTYFP\"\n    elif entity == \"cousub\":\n        hover_data = [\"NAME\"]\n        locations=\"AFFGEOID\"\n        featureidkey=\"properties.AFFGEOID\"\n    elif entity == \"cd116\":\n        hover_data = []\n        locations=\"CD116FP\"\n        featureidkey=\"properties.CD116FP\"\n    \n    \n    for col in quants:\n        range_color = (0.0, 1.0) if \"perc\" in col else None\n    \n        fig = px.choropleth(\n            df_demo,\n            geojson=gjson,\n            locations=locations,\n            featureidkey=featureidkey,\n            color=col,\n            color_continuous_scale=\"Viridis\",\n            range_color=range_color,\n            hover_data=hover_data,\n        )\n        fig = fig.update_geos(\n            visible=False,\n            lonaxis={\"range\": (-85,-80.3)},\n            lataxis={\"range\": (38.2,42.1)},\n        )\n        fig = fig.update_layout(\n            margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},\n            height=600,\n        )\n        fig.show()","153b270f":"plot_choropleths(gjsons[\"county\"], dfs_demo[\"county\"], \"county\")","d539c059":"plot_choropleths(gjsons[\"cousub\"], dfs_demo[\"cousub\"], \"cousub\", quants=[\"white_perc\"])","5a22ef31":"plot_choropleths(gjsons[\"cd116\"], dfs_demo[\"cd116\"], \"cd116\")","798ca3e8":"# Histogram - Population Count","c9ac95c3":"# Maps ","5c2621eb":"# Load Demograhpic Data","e9f7d31c":"# Maps - County Subdivisions","32e34193":"# Histogram - Population Percentage","d3bef3e0":"# Maps - Congressional Districts","8fb233b5":"# Maps - Counties","986d2286":"# Ohio Census Data Starter Kernel\n\n* This notebook demonstrates how to read and plot geographic and demographic census data from a dataset compiled during a collaboration between [Kensho](https:\/\/blog.kensho.com\/kenshins-put-their-talents-to-use-for-community-impact-projects-c91fff8e3e5) and the [Ohio Voter Project](https:\/\/ohiovoterproject.org\/). ","56c6d4eb":"# Load Geographic Data\n\nLets read the geojson files for counties and congressional districts. Note that there are 88 [counties in Ohio](https:\/\/en.wikipedia.org\/wiki\/List_of_counties_in_Ohio) and 16 [congressional districts](https:\/\/en.wikipedia.org\/wiki\/Ohio%27s_congressional_districts).  ","d92d8f8a":"# Histograms Age-Income"}}