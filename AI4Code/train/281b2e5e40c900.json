{"cell_type":{"19880929":"code","7fd95d88":"code","12112980":"code","a227ce0c":"code","09303919":"code","c535f0d6":"code","a33369d6":"code","40d2f9e3":"code","9cab56fe":"code","1b5be5fd":"code","6f72b7a3":"code","afc56668":"code","3e2377c9":"code","57c15bb6":"code","03b41d8b":"markdown","b4414fd4":"markdown","6da99acf":"markdown","12d7c7e3":"markdown","d9ea39a1":"markdown"},"source":{"19880929":"# import library\nimport numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport seaborn as sns","7fd95d88":"df = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndf.head()","12112980":"# count mean of 'MonthlyCharges' per customer group by 'PaymentMethod'\ndf1 = df.groupby(['PaymentMethod']).mean()[['MonthlyCharges']].reset_index()\ndf1.head()","a227ce0c":"# set plot style\nsns.set_style('whitegrid')\n\n# palette color to highlight the highest amount\ncolor_focus1 = ['blue' if (x == df1['MonthlyCharges'].max()) else 'grey' for x in df1['MonthlyCharges']]\n\n# create bar plot\nplt.figure(figsize = (10, 8))\nax = sns.barplot(\n    x = 'PaymentMethod',\n    y = 'MonthlyCharges',\n    data = df1,\n    palette = color_focus1\n)\n\n# adjust yticks of 'MonthlyCharges'\nmonthly_c = [x for x in range(0, 85, 5)]\nplt.yticks(monthly_c)\n\n# add tile and rename xlabel & ylabel\nplt.title('Electronic Check is Payment Method with the Highest Monhtly Charges per Customer', fontsize = 18, fontweight = 'bold', x = 0.625, y = 1.05)\nplt.xlabel('Payment Method', fontsize = 12)\nplt.ylabel('Monthly Charges', fontsize = 12);\n\n# add data points\nfor p in ax.patches:\n    ax.annotate(\n            format(p.get_height(), '.2f'),\n            (p.get_x() + p.get_width() \/ 2., p.get_height()), \n            ha = 'center',\n            va = 'center',\n            fontweight = 'semibold',\n            size = 13,\n            xytext = (0, 7), \n            textcoords = 'offset points'\n    )","09303919":"# create new column 'TenureGroup'\ndf['TenureGroup'] = np.where(df['tenure'] < 21, 'low_tenure', np.where((df['tenure'] >= 21) & (df['tenure'] <= 41), 'medium_tenure', 'high_tenure'))\ndf.head()","c535f0d6":"# count number of unique customers group by 'TenureGroup'\ndf2 = df.groupby(['TenureGroup']).nunique()[['customerID']].reset_index()\ndf2.head()","a33369d6":"# create bar plot\nplt.figure(figsize = (10, 8))\nax = sns.barplot(\n    x = 'TenureGroup',\n    y = 'customerID',\n    data = df2,\n    palette = ['#85a5fb', '#1d4cce', '#001c66'],\n    order = ['low_tenure','medium_tenure','high_tenure'] # order 'TenureGroup by level'\n)\n\n# hide top line\nsns.despine(top = True, right = False, left = False, bottom = False)\n\n# add tile and subtitle\nplt.title('Number of Customers Group by Tenure', fontsize = 18, fontweight = 'bold', y = 1.13)\nplt.suptitle('Most of the customers are in the \"low_tenure\" group.', fontsize = 13, y = 0.97)\n\n# rename xlabel & ylabel\nplt.xlabel('Tenure Group', fontsize = 12)\nplt.ylabel(\"# of Customers\", fontsize = 12);\n\n    \n# add data points\nfor p in ax.patches:\n    ax.annotate(\n            format(p.get_height(), '.0f'),\n            (p.get_x() + p.get_width() \/ 2., p.get_height()), \n            ha = 'center',\n            va = 'center',\n            fontweight = 'semibold',\n            size = 13,\n            xytext = (0, 6), \n            textcoords = 'offset points'\n    )","40d2f9e3":"# create bar plot\nplt.figure(figsize = (10, 8))\nsns.boxplot(\n    x = 'Churn',\n    y = 'MonthlyCharges',\n    data = df,\n    palette = ['grey', 'red']\n)\n\n# add tile and subtitle\nplt.title('Customer Churn Tendency Based on Their Monthly Charges', fontsize = 18, fontweight = 'bold', y = 1.13)\nplt.suptitle('Customer with high monthly charges tend to churn.', fontsize = 13, y = 0.97)\n\n# rename xlabel & ylabel\nplt.xlabel('Churn', fontsize = 12)\nplt.ylabel('Monthly Charges', fontsize = 12);","9cab56fe":"# concat value of 'Partner' & 'Dependents' columns\ndf['Partner & Dependents'] = df['Partner'] + ' - ' + df['Dependents']\ndf.head()","1b5be5fd":"# count number of unique customers group by 'Partner & Dependents' and 'Churn'\ndf4_in_numbers = df.groupby(['Partner & Dependents', 'Churn']).nunique()[['customerID']].reset_index()\ndf4_in_numbers","6f72b7a3":"# palette color to highlight Churn = 'Yes'\ncolor_focus2 = ['red' if (x == 'Yes') else 'grey' for x in df4_in_numbers['Churn']]\n\n# create bar plot number of unique customers group by 'Partner & Dependents' and 'Churn'\nplt.figure(figsize = (10, 8))\nax = sns.barplot(\n    x = 'Partner & Dependents',\n    y = 'customerID',\n    hue = 'Churn',\n    data = df4_in_numbers,\n    palette = color_focus2\n)\n\n# highlight important part\nax.add_patch(Rectangle(\n    (-0.48, 0),\n    1, 2350,\n    fc ='none',\n    ec ='yellow',\n    lw = 3,\n    linestyle = '--')\n)\n\n# adjust yticks of number of unique customers\nnum_of_customers = [x for x in range(0, 3000, 500)]\nplt.yticks(num_of_customers)\n\n# add tile and subtitle\nplt.title('Customer Churn Rate Based on Having a Partner & Dependents', fontsize = 18, fontweight = 'bold', y = 1.13)\nplt.suptitle('Customer who doesn\\'t have a partner & dependents tend to churn.', fontsize = 13, y = 0.97)\n\n# add xlabel & ylabel\nplt.xlabel('Partner & Dependents', fontsize = 12)\nplt.ylabel(\"# of Customers\", fontsize = 12);\n\n# add data points\nfor p in ax.patches:\n    if p.get_height() == 2350: # continue if it's the 'Rectangle'\n        continue\n    else:\n        ax.annotate(\n            format(p.get_height(), '.0f'),\n            (p.get_x() + p.get_width() \/ 2., p.get_height()), \n            ha = 'center',\n            va = 'center',\n            fontweight = 'semibold',\n            size = 13,\n            xytext = (0, 10), \n            textcoords = 'offset points'\n        )","afc56668":"# concat value of 'PhoneService' & 'InternetService' columns\ndf['Phone & Internet Services'] = df['PhoneService'] + ' - ' + df['InternetService']\ndf.head()","3e2377c9":"# count percentage of number of unique customers group by 'Phone & Internet Services' and 'Churn'\ndf5_percentage_of_customers = df.groupby(['Phone & Internet Services', 'Churn']).nunique()[['customerID']]\nservices = df.groupby(['Phone & Internet Services']).nunique()[['customerID']]\ndf5_percentage_of_customers = df5_percentage_of_customers.div(services, level = 'Phone & Internet Services') * 100\ndf5_percentage_of_customers = df5_percentage_of_customers.reset_index()\ndf5_percentage_of_customers","57c15bb6":"# palette color to highlight Churn = 'Yes'\ncolor_focus3 = ['red' if (x == 'Yes') else 'grey' for x in df5_percentage_of_customers['Churn']]\n\n# create bar plot number of unique customers group by 'Phone & Internet Service' and 'Churn'\nplt.figure(figsize = (10, 8))\nax = sns.barplot(\n    x = 'Phone & Internet Services',\n    y = 'customerID',\n    hue = 'Churn',\n    data = df5_percentage_of_customers,\n    palette = color_focus3\n)\n\n# highlight important part\nax.add_patch(Rectangle(\n    (1.5, 0),\n    1, 65,\n    fc ='none',\n    ec ='yellow',\n    lw = 3,\n    linestyle = '--')\n)\n\n# adjust yticks of percentage of number of unique customers\npercentage_ = [x for x in range(0, 110, 10)]\nplt.yticks(percentage_)\n\n# add tile and subtitle\nplt.title('Almost Half of the Customers who Used Phone & Fiber Optic Internet Services are Churned', fontsize = 18, fontweight = 'bold', x = -0.04, y = 1.13, loc = 'left')\nplt.suptitle('Around 42% of Phone & Fiber Optic Internet Services customers are churned, need to check the complaint on the related services,\\nmeanwhile we could give special discount\/promo for customers who use the services.', fontsize = 13, x = 0.095, y = 0.97, ha = 'left')\n\n# add xlabel & ylabel\nplt.xlabel('Phone & Internet Services', fontsize = 12)\nplt.ylabel('# of Customers', fontsize = 12)\n\n# formatting ylabels + '%'\nylabels = [format(y) + '%' for y in ax.get_yticks()]\nax.set_yticklabels(labels = ylabels);\n\n# add data points\nfor bar in ax.patches:\n    if bar.get_height() == 65: # continue if it's the 'Rectangle'\n        continue\n    else:\n        ax.annotate(\n            format(bar.get_height(), '.2f') + '%',\n            (bar.get_x() + bar.get_width() \/ 2., bar.get_height()), \n            ha = 'center',\n            va = 'center',\n            fontweight = 'semibold',\n            size = 13,\n            xytext = (0, 7), \n            textcoords = 'offset points'\n        )","03b41d8b":"# Customer Churn Tendency Based on Their Monthly Charges","b4414fd4":"# Customer Churn Rate Based on Services Used","6da99acf":"# Number of Customers Group by Tenure","12d7c7e3":"# Customer Churn Rate Based on Having a Partner & Dependents","d9ea39a1":"# Payment Method with the Highest Monhtly Charges per Customer"}}