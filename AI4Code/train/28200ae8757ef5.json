{"cell_type":{"53e6d679":"code","90382b57":"code","8f585b8a":"code","e8023f64":"code","b90b8907":"code","9bf0b025":"code","84bb690f":"code","625ab1df":"code","7b4091ba":"code","9cd7b771":"code","3430371a":"code","7aff85df":"code","746b0f70":"code","6e5a1821":"code","b66e5028":"code","78840536":"code","bfbc942e":"code","90a50345":"code","628d12df":"code","ade8d2ee":"code","f11d7990":"code","13a128bd":"code","bf7f3ce7":"code","70710409":"code","342ae47c":"code","54f3062d":"code","89b6a8a3":"code","a7061592":"code","6eaa7244":"markdown","2382c914":"markdown","7a32caf3":"markdown","37e26a0f":"markdown","8f05e760":"markdown","ca834cf9":"markdown","c26ea4c9":"markdown","795f144d":"markdown","52dd49ef":"markdown","0f6401c7":"markdown","01912e73":"markdown","63deb1f2":"markdown","62f35735":"markdown","19b71088":"markdown","31379789":"markdown","79f244f7":"markdown","8bd012be":"markdown","e8ece118":"markdown","cb33ee4d":"markdown","06d58809":"markdown","0522af33":"markdown","b2f240ee":"markdown","1515661b":"markdown","8696a16c":"markdown","58257222":"markdown","1e63807f":"markdown"},"source":{"53e6d679":"from pandas_datareader import data, wb\nimport pandas as pd\nimport numpy as np\nimport datetime\n%matplotlib inline","90382b57":"df = pd.read_pickle('..\/input\/dataset\/all_banks')\ndf['BAC']","8f585b8a":"# Bank of America\nBAC = df['BAC']\n\n# CitiGroup\nC = df['C']\n\n# Goldman Sachs\nGS = df['GS']\n\n# JPMorgan Chase\nJPM = df['JPM']\n\n# Morgan Stanley\nMS = df['MS']\n\n# Wells Fargo\nWFC = df['WFC']","e8023f64":"tickers = ['BAC', 'C', 'GS', 'JPM', 'MS', 'WFC']","b90b8907":"bank_stocks = pd.concat([BAC, C, GS, JPM, MS, WFC],axis=1,keys=tickers)","9bf0b025":"bank_stocks.columns.names = ['Bank Ticker','Stock Info']","84bb690f":"bank_stocks.head()","625ab1df":"bank_stocks.xs(key='Close',axis=1,level='Stock Info').max()","7b4091ba":"returns = pd.DataFrame()","9cd7b771":"for tick in tickers:\n    returns[tick+' Return'] = bank_stocks[tick]['Close'].pct_change()\nreturns.head()","3430371a":"import seaborn as sns\nsns.pairplot(returns[1:])","7aff85df":"returns.idxmin()","746b0f70":"returns.idxmax()","6e5a1821":"returns.std()","b66e5028":"returns.loc['2015-01-01':'2015-12-31'].std()","78840536":"sns.distplot(returns.loc['2015-01-01':'2015-12-31']['MS Return'],color='green',bins=100)","bfbc942e":"sns.distplot(returns.loc['2008-01-01':'2008-12-31']['C Return'],color='red',bins=100)","90a50345":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline\n\n# Optional Plotly Method Imports\nimport plotly\nimport cufflinks as cf\ncf.go_offline()","628d12df":"for tick in tickers:\n    bank_stocks[tick]['Close'].plot(figsize=(12,4),label=tick)\nplt.legend()","ade8d2ee":"bank_stocks.xs(key='Close',axis=1,level='Stock Info').plot()","f11d7990":"bank_stocks.xs(key='Close',axis=1,level='Stock Info').iplot()","13a128bd":"plt.figure(figsize=(12,6))\nBAC['Close'].loc['2008-01-01':'2009-01-01'].rolling(window=30).mean().plot(label='30 Day Avg')\nBAC['Close'].loc['2008-01-01':'2009-01-01'].plot(label='BAC CLOSE')\nplt.legend()","bf7f3ce7":"sns.heatmap(bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr(),annot=True)","70710409":"sns.clustermap(bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr(),annot=True)","342ae47c":"close_corr = bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr()\nclose_corr.iplot(kind='heatmap',colorscale='rdylbu')","54f3062d":"BAC[['Open', 'High', 'Low', 'Close']].loc['2015-01-01':'2016-01-01'].iplot(kind='candle')","89b6a8a3":"MS['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='sma',periods=[13,21,55],title='Simple Moving Averages')","a7061592":"BAC['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='boll')","6eaa7244":"Use .iplot(kind='candle) to create a candle plot of Bank of America's stock from Jan 1st 2015 to Jan 1st 2016.","2382c914":"Use pd.concat to concatenate the bank dataframes together to a single data frame called bank_stocks. Set the keys argument equal to the tickers list. Also pay attention to what axis you concatenate on.","7a32caf3":"# Finance Data Project \n\nIn this data project we will focus on exploratory data analysis of stock prices. Keep in mind, this project is just meant to practice visualization and pandas skills, it is not meant to be a robust financial analysis or be taken as financial advice.\n____\nWe'll focus on bank stocks and see how they progressed throughout the [financial crisis](https:\/\/en.wikipedia.org\/wiki\/Financial_crisis_of_2007%E2%80%9308).","37e26a0f":"# The Imports","8f05e760":"# Data Analysis and Visualisation is Done\nStill there are many ways to do so...\n\n","ca834cf9":"Create a distplot using seaborn of the 2015 returns for Morgan Stanley","c26ea4c9":"Use .ta_plot(study='boll') to create a Bollinger Band Plot for Bank of America for the year 2015.","795f144d":"Create a pairplot using seaborn of the returns dataframe.","52dd49ef":"Check the head of the bank_stocks dataframe.","0f6401c7":"Create a distplot using seaborn of the 2008 returns for CitiGroup","01912e73":"Use seaborn's clustermap to cluster the correlations together:","63deb1f2":"Set the column name levels","62f35735":"# Moving Averages\n\nLet's analyze the moving averages for these stocks in the year 2008. \n\nPlot the rolling 30 day average against the Close Price for Bank Of America's stock for the year 2008","19b71088":"Create a line plot showing Close price for each bank for the entire index of time.(2 ways to do)","31379789":" Create a heatmap of the correlation between the stocks Close Price.","79f244f7":"Use .ta_plot(study='sma') to create a Simple Moving Averages plot of Morgan Stanley for the year 2015.","8bd012be":"# EDA\n\nLet's explore the data a bit! Before continuing,\n\n\nWhat is the max Close price for each bank's stock throughout the time period?","e8ece118":"# Data\n\nWe will get stock information for the following banks:\n*  Bank of America\n* CitiGroup\n* Goldman Sachs\n* JPMorgan Chase\n* Morgan Stanley\n* Wells Fargo","cb33ee4d":"\n\nI would like to know your views about this notebook, I am new to this, if you have any good and diffrent approach of doing the analysis and visualisation, Please share!\n\nIf you find this Notebook useful? => Do Upvote!\n\n","06d58809":"____\n# More Visualization\n\nWe have many options to use a visualization libraries,like seaborn, matplotlib, plotly and cufflinks, or just pandas.\n\n### Imports","0522af33":"Take a look at the standard deviation of the returns, which stock would you classify as the riskiest over the entire time period? Which would you classify as the riskiest for the year 2015?","b2f240ee":"Using this returns DataFrame, figure out on what dates each bank stock had the best and worst single day returns. You should notice that 4 of the banks share the same day for the worst drop.","1515661b":"We can use pandas pct_change() method on the Close column to create a column representing this return value. Create a for loop that goes and for each Bank Stock Ticker creates this returns column and set's it as a column in the returns DataFrame.","8696a16c":"Create a new empty DataFrame called returns. This dataframe will contain the returns for each bank's stock. returns are typically defined by:\n\n$$r_t = \\frac{p_t - p_{t-1}}{p_{t-1}} = \\frac{p_t}{p_{t-1}} - 1$$","58257222":"Create a list of the ticker symbols (as strings) in alphabetical order. Call this list: tickers","1e63807f":"# Part 2 \n\nWe use cufflinks library to create some Technical Analysis plots."}}