{"cell_type":{"4b7d6aa6":"code","91e24843":"code","5c84fb16":"code","da3274c1":"code","f9493a61":"code","bc10c675":"code","9bc3970f":"code","99b97e0a":"code","f748d874":"code","bfad05e4":"code","42657b54":"code","cb8f25f3":"code","1e64c371":"code","c178964f":"code","446f729a":"markdown","e631aec7":"markdown","3000eef5":"markdown","8bef4fd2":"markdown","f860e8b7":"markdown","36600a7b":"markdown","7b7d5afe":"markdown","4cec78f9":"markdown","9b18bf03":"markdown","b59db924":"markdown","3bd2389f":"markdown","a4d23177":"markdown"},"source":{"4b7d6aa6":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.layers import Conv2D\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image","91e24843":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)","5c84fb16":"training_set = train_datagen.flow_from_directory('..\/input\/cotton-disease-dataset\/Cotton Disease\/train',\n                                                 target_size=  (64, 64),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')\n\n# Preprocessing the Test set\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory('..\/input\/cotton-disease-dataset\/Cotton Disease\/test',\n                                            target_size = (64, 64),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","da3274c1":"# Initialising the CNN\ncnn = tf.keras.models.Sequential()\n\n# Step 1 - Convolution\ncnn.add(tf.keras.layers.Conv2D(filters=32,padding=\"same\",kernel_size=3, activation='relu', input_shape=[64, 64, 3]))\n\n# Step 2 - Pooling\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))\n\n# Adding a second convolutional layer\ncnn.add(tf.keras.layers.Conv2D(filters=32,padding='same',kernel_size=3, activation='relu'))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))\n\n# Step 3 - Flattening\ncnn.add(tf.keras.layers.Flatten())\n\n# Step 4 - Full Connection\ncnn.add(tf.keras.layers.Dense(units=128, activation='relu'))\n\n# Step 5 - Output Layer\ncnn.add(tf.keras.layers.Dense(units=4, activation='softmax')) ","f9493a61":"cnn.summary()\n","bc10c675":"# Compiling the CNN\ncnn.compile(optimizer = 'adam',loss = 'categorical_crossentropy', metrics = ['accuracy'])\n\n# Training the CNN on the Training set and evaluating it on the Test set\ncnn.fit(x = training_set, validation_data = test_set, epochs = 10)","9bc3970f":"test_image = image.load_img('..\/input\/cotton-disease-dataset\/Cotton Disease\/test\/fresh cotton leaf\/d (7)_iaip.jpg',\n                            target_size = (64,64))\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)","99b97e0a":"result\n","f748d874":"result = result.ravel() ","bfad05e4":"result","42657b54":"print(\"Largest element is:\", max(result))","cb8f25f3":"result.sort\nresult ","1e64c371":"result=result.tolist() ","c178964f":"result1=[\"diseased_leaf\",\"diseased_plant\",\"freash_leaf\",\"freash_plant\"]\nmax = result[0];    \n     \n#Loop through the array    \nfor i in range(0, len(result)):    \n    #Compare elements of array with max    \n    if(result[i] > max):    \n        max = result[i];    \n           \nprint(\"Largest element present in given array: \" + str(max) +\" And it belongs to \" +str(result1[2]) +\" class.\");      \n","446f729a":"## Testing ","e631aec7":" ## Training & DataLoader","3000eef5":"## Conclusion","8bef4fd2":"## Summary","f860e8b7":"![This is the image of plant. ](https:\/\/d2r55xnwy6nx47.cloudfront.net\/uploads\/2020\/07\/Photosynthesis_2880_Lede.jpg)","36600a7b":"## Table of Content\n1. Libraries\n2. Training & DataLoader\n3. Building the CNN\n4. Summary\n5. Training The CNN\n6. Testing \n7. Conclusion","7b7d5afe":"## Please upvote this notebook if you find it useful.It really motivate to make new notebook.","4cec78f9":"The purpose of this notebook is to predict wheather the image belongs to diseased class or not. In this dataset we have 4 classes diseased leaf , diseased plant , freash leaf and freash plant.I will use basic CNN method to train the model and will check that testing image is belongs to which class.   ","9b18bf03":"## Libraries","b59db924":"## Training the CNN","3bd2389f":"We have tested the Freash leaf image from the testing dataset and our model is able to recognize it. ","a4d23177":"## Building the CNN"}}