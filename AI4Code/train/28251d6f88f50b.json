{"cell_type":{"801c16f8":"code","e9440118":"code","6494c4de":"code","fee0e1fc":"code","d44e9d09":"code","be8f344d":"code","4d13f2ba":"code","4a96523a":"code","fe032206":"code","c3220c07":"code","8298d28e":"code","7b3b06fb":"code","b0c73443":"markdown","a5ef67db":"markdown","e2ce3168":"markdown","9e34da51":"markdown","540f2b89":"markdown","4b88eaaa":"markdown","694d9487":"markdown","fdff47d2":"markdown","4650fcbf":"markdown","7bfcbc3f":"markdown","e4ec9aa5":"markdown","fc5bf921":"markdown","234da9a5":"markdown","0a121058":"markdown","852a1401":"markdown","9be6baf0":"markdown","1658f6d6":"markdown","0ab0896c":"markdown","8bdc12d9":"markdown"},"source":{"801c16f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\ndf_multiple = pd.read_csv('\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv', low_memory=False)","e9440118":"# Q12\ndf_multiple['Q12_Part_1'].replace('Twitter (data science influencers)', 'Twitter', inplace=True)\ndf_multiple['Q12_Part_2'].replace('Hacker News (https:\/\/news.ycombinator.com\/)', 'Hacker', inplace=True)\ndf_multiple['Q12_Part_3'].replace('Reddit (r\/machinelearning, r\/datascience, etc)', 'Reddit', inplace=True)\ndf_multiple['Q12_Part_4'].replace('Kaggle (forums, blog, social media, etc)', 'Kaggle', inplace=True)\ndf_multiple['Q12_Part_5'].replace('Course Forums (forums.fast.ai, etc)', 'Course', inplace=True)\ndf_multiple['Q12_Part_6'].replace('YouTube (Cloud AI Adventures, Siraj Raval, etc)', 'YouTube', inplace=True)\ndf_multiple['Q12_Part_7'].replace('Podcasts (Chai Time Data Science, Linear Digressions, etc)', 'Podcasts', inplace=True)\ndf_multiple['Q12_Part_8'].replace('Blogs (Towards Data Science, Medium, Analytics Vidhya, KDnuggets etc)', 'Blogs', inplace=True)\ndf_multiple['Q12_Part_9'].replace('Journal Publications (traditional publications, preprint journals, etc)', 'Journal', inplace=True)\ndf_multiple['Q12_Part_10'].replace('Slack Communities (ods.ai, kagglenoobs, etc)', 'Slack', inplace=True)\ndf_multiple['Q12_Part_11'].replace('None', 'None', inplace=True)\ndf_multiple['Q12_Part_12'].replace('Other', 'Other', inplace=True)\n\n# Q24\ndf_multiple['Q24_Part_1'].replace('Linear or Logistic Regression', 'Line or Logi', inplace=True)\ndf_multiple['Q24_Part_2'].replace('Decision Trees or Random Forests', 'DTorRF', inplace=True)\ndf_multiple['Q24_Part_3'].replace('Gradient Boosting Machines (xgboost, lightgbm, etc)', 'Gbm', inplace=True)\ndf_multiple['Q24_Part_4'].replace('Bayesian Approaches', 'Bayesian', inplace=True)\ndf_multiple['Q24_Part_5'].replace('Evolutionary Approaches', 'Evolutionary', inplace=True)\ndf_multiple['Q24_Part_6'].replace('Dense Neural Networks (MLPs, etc)', 'Mlp', inplace=True)\ndf_multiple['Q24_Part_7'].replace('Convolutional Neural Networks', 'Cnn', inplace=True)\ndf_multiple['Q24_Part_8'].replace('Generative Adversarial Networks', 'Generative', inplace=True)\ndf_multiple['Q24_Part_9'].replace('Recurrent Neural Networks', 'RNN', inplace=True)\ndf_multiple['Q24_Part_10'].replace('Transformer Networks (BERT, gpt-2, etc)', 'Transformer', inplace=True)\ndf_multiple['Q24_Part_11'].replace('None', 'None', inplace=True)\ndf_multiple['Q24_Part_12'].replace('Other', 'Other', inplace=True)","6494c4de":"# About Q12 Who\/what are your favorite media sources that report on data science topics?\nlist_q12 = ['Q12_Part_1', 'Q12_Part_2', 'Q12_Part_3', 'Q12_Part_4', 'Q12_Part_5', 'Q12_Part_6', 'Q12_Part_7', 'Q12_Part_8']\ndf_mult_12 = df_multiple.loc[1:, list_q12]\n\ndf_mult_12_ = df_mult_12.loc[:, list_q12].fillna('')\ndf_mult_12_['Q12_matome'] = ''\nfor cols in list_q12:\n    df_mult_12_['Q12_matome'] = df_mult_12_['Q12_matome'].str.cat(df_mult_12_[cols])\ndf_mult_12['Q12_matome'] = df_mult_12_['Q12_matome']\ndf_mult_12.replace('', 'NaN', inplace=True)\n\n\n# About Q18 What programming languages do you use on a regular basis?\nlist_q18 = ['Q18_Part_1', 'Q18_Part_2', 'Q18_Part_3', 'Q18_Part_4', 'Q18_Part_5', 'Q18_Part_6', 'Q18_Part_7', 'Q18_Part_8', 'Q18_Part_9', 'Q18_Part_10', 'Q18_Part_11', 'Q18_Part_12']\ndf_mult_18 = df_multiple.loc[1:, list_q18]\n\ndf_mult_18_ = df_mult_18.loc[:, list_q18].fillna('')\ndf_mult_18_['Q18_matome'] = ''\nfor cols in list_q18:\n    df_mult_18_['Q18_matome'] = df_mult_18_['Q18_matome'].str.cat(df_mult_18_[cols])\ndf_mult_18['Q18_matome'] = df_mult_18_['Q18_matome']\ndf_mult_18.replace('', 'NaN', inplace=True)\n\n\n# About Q24 Which of the following ML algorithms do you use on a regular basis?\nlist_q24 = ['Q24_Part_1', 'Q24_Part_2', 'Q24_Part_3', 'Q24_Part_4', 'Q24_Part_5', 'Q24_Part_6', 'Q24_Part_7', 'Q24_Part_8', 'Q24_Part_9', 'Q24_Part_10', 'Q24_Part_11', 'Q24_Part_12']\ndf_mult_24 = df_multiple.loc[1:, list_q24]\n\ndf_mult_24_ = df_mult_24.loc[:, list_q24].fillna('')\ndf_mult_24_['Q24_matome'] = ''\nfor cols in list_q24:\n    df_mult_24_['Q24_matome'] = df_mult_24_['Q24_matome'].str.cat(df_mult_24_[cols])\ndf_mult_24['Q24_matome'] = df_mult_24_['Q24_matome']\ndf_mult_24.replace('', 'NaN', inplace=True)","fee0e1fc":"df_mult_q = df_multiple.loc[1:, ['Q1', 'Q2', 'Q3', 'Q4', 'Q5']]\ndf_mult_q['Q12_matome'] = df_mult_12_['Q12_matome']\ndf_mult_q['Q18_matome'] = df_mult_18_['Q18_matome']\ndf_mult_q['Q24_matome'] = df_mult_24_['Q24_matome']\ndf_mult_q = df_mult_q.replace('', 'Unknown')\n\nlist_top20_q12 = df_mult_q['Q12_matome'].value_counts().head(20).index.to_list()\nlist_top20_q18 = df_mult_q['Q18_matome'].value_counts().head(20).index.to_list()\nlist_top20_q24 = df_mult_q['Q24_matome'].value_counts().head(20).index.to_list()","d44e9d09":"fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(nrows=2, ncols=2, figsize=(15,10))\nax1.bar(df_mult_q.loc[:, 'Q2'].unique(), df_mult_q.loc[:, 'Q2'].value_counts())\nax2.pie(df_mult_q.loc[:, 'Q2'].value_counts(), labels=df_mult_q.loc[:, 'Q2'].unique(),\n        startangle=90, autopct='%1.1f%%',\n        wedgeprops={'linewidth': 3, 'edgecolor':\"white\"})\nax3.bar(df_multiple.loc[1:, 'Q5'].dropna().unique(), df_multiple.loc[1:, 'Q5'].dropna().value_counts())\nax4.pie(df_multiple.loc[1:, 'Q5'].dropna().value_counts(), labels=df_multiple.loc[1:, 'Q5'].dropna().unique(),\n        startangle=90, autopct='%1.1f%%',\n        wedgeprops={'linewidth': 3, 'edgecolor':\"white\"})\nax1.tick_params(axis='x', labelrotation=0)\nax3.tick_params(axis='x', labelrotation=90)\nax2.set_title('Q2   Ratio')\nax4.set_title('Q5   Ratio')\nax1.set_title('Q2   What is your gender?')\nax3.set_title('Q5   Select the title most similar to your current role (or most recent title if retired)')","be8f344d":"multiple_q12_1 = df_multiple.loc[1:, 'Q12_Part_1'].value_counts(dropna=False)\nmultiple_q12_2 = df_multiple.loc[1:, 'Q12_Part_2'].value_counts(dropna=False)\nmultiple_q12_3 = df_multiple.loc[1:, 'Q12_Part_3'].value_counts(dropna=False)\nmultiple_q12_4 = df_multiple.loc[1:, 'Q12_Part_4'].value_counts(dropna=False)\nmultiple_q12_5 = df_multiple.loc[1:, 'Q12_Part_5'].value_counts(dropna=False)\nmultiple_q12_6 = df_multiple.loc[1:, 'Q12_Part_6'].value_counts(dropna=False)\nmultiple_q12_7 = df_multiple.loc[1:, 'Q12_Part_7'].value_counts(dropna=False)\nmultiple_q12_8 = df_multiple.loc[1:, 'Q12_Part_8'].value_counts(dropna=False)\n\nlist_mult = [multiple_q12_1, multiple_q12_2, multiple_q12_3, multiple_q12_4, multiple_q12_5, multiple_q12_6, multiple_q12_7, multiple_q12_8]\ndf_mult = pd.DataFrame(list_mult).T\ndf_mult['result'] = df_mult.sum(axis=1)\ndf_mult.rename(index={'Twitter (data science influencers)': 'Twitter',\n                     'Hacker News (https:\/\/news.ycombinator.com\/)': 'Hacker',\n                     'Reddit (r\/machinelearning, r\/datascience, etc)': 'Reddit',\n                     'Kaggle (forums, blog, social media, etc)': 'Kaggle',\n                     'Course Forums (forums.fast.ai, etc)': 'Course',\n                     'YouTube (Cloud AI Adventures, Siraj Raval, etc)': 'YouTube',\n                     'Podcasts (Chai Time Data Science, Linear Digressions, etc)': 'podcasts',\n                     'Blogs (Towards Data Science, Medium, Analytics Vidhya, KDnuggets etc)': 'Blogs'}, inplace=True)\ndf_mult_sort = df_mult.loc[:, 'result'].sort_values()\ndf_mult_sort = df_mult_sort.drop(np.nan, axis=0)\n\n\nmultiple_q18_1 = df_multiple.loc[1:, 'Q18_Part_1'].value_counts(dropna=False)\nmultiple_q18_2 = df_multiple.loc[1:, 'Q18_Part_2'].value_counts(dropna=False)\nmultiple_q18_3 = df_multiple.loc[1:, 'Q18_Part_3'].value_counts(dropna=False)\nmultiple_q18_4 = df_multiple.loc[1:, 'Q18_Part_4'].value_counts(dropna=False)\nmultiple_q18_5 = df_multiple.loc[1:, 'Q18_Part_5'].value_counts(dropna=False)\nmultiple_q18_6 = df_multiple.loc[1:, 'Q18_Part_6'].value_counts(dropna=False)\nmultiple_q18_7 = df_multiple.loc[1:, 'Q18_Part_7'].value_counts(dropna=False)\nmultiple_q18_8 = df_multiple.loc[1:, 'Q18_Part_8'].value_counts(dropna=False)\nmultiple_q18_9 = df_multiple.loc[1:, 'Q18_Part_9'].value_counts(dropna=False)\nmultiple_q18_10 = df_multiple.loc[1:, 'Q18_Part_10'].value_counts(dropna=False)\nmultiple_q18_11 = df_multiple.loc[1:, 'Q18_Part_11'].value_counts(dropna=False)\nmultiple_q18_12 = df_multiple.loc[1:, 'Q18_Part_12'].value_counts(dropna=False)\n\nlist_q18 = [multiple_q18_1, multiple_q18_2, multiple_q18_3, multiple_q18_4, multiple_q18_5, multiple_q18_6,multiple_q18_7, multiple_q18_8, multiple_q18_9, multiple_q18_10, multiple_q18_11, multiple_q18_12]\ndf_q18 = pd.DataFrame(list_q18).T\ndf_q18['result'] = df_q18.sum(axis=1)\ndf_q18_sort = df_q18.loc[:, 'result'].sort_values()\ndf_q18_sort = df_q18_sort.drop(np.nan, axis=0)\n\n\nmultiple_q24_1 = df_multiple.loc[1:, 'Q24_Part_1'].value_counts(dropna=False)\nmultiple_q24_2 = df_multiple.loc[1:, 'Q24_Part_2'].value_counts(dropna=False)\nmultiple_q24_3 = df_multiple.loc[1:, 'Q24_Part_3'].value_counts(dropna=False)\nmultiple_q24_4 = df_multiple.loc[1:, 'Q24_Part_4'].value_counts(dropna=False)\nmultiple_q24_5 = df_multiple.loc[1:, 'Q24_Part_5'].value_counts(dropna=False)\nmultiple_q24_6 = df_multiple.loc[1:, 'Q24_Part_6'].value_counts(dropna=False)\nmultiple_q24_7 = df_multiple.loc[1:, 'Q24_Part_7'].value_counts(dropna=False)\nmultiple_q24_8 = df_multiple.loc[1:, 'Q24_Part_8'].value_counts(dropna=False)\nmultiple_q24_9 = df_multiple.loc[1:, 'Q24_Part_9'].value_counts(dropna=False)\nmultiple_q24_10 = df_multiple.loc[1:, 'Q24_Part_10'].value_counts(dropna=False)\nmultiple_q24_11 = df_multiple.loc[1:, 'Q24_Part_11'].value_counts(dropna=False)\nmultiple_q24_12 = df_multiple.loc[1:, 'Q24_Part_12'].value_counts(dropna=False)\n\nlist_q24 = [multiple_q24_1, multiple_q24_2, multiple_q24_3, multiple_q24_4, multiple_q24_5, multiple_q24_6,\n            multiple_q24_7, multiple_q24_8, multiple_q24_9, multiple_q24_10, multiple_q24_11, multiple_q24_12]\ndf_q24 = pd.DataFrame(list_q24).T\ndf_q24['result'] = df_q24.sum(axis=1)\ndf_q24_sort = df_q24.loc[:, 'result'].sort_values()\ndf_q24_sort = df_q24_sort.drop(np.nan, axis=0)","4d13f2ba":"fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(nrows=2, ncols=2, figsize=(20,10))\nax1.barh(df_mult_sort.index, df_mult_sort)\nax2.barh(df_q18_sort.index, df_q18_sort)\nax3.barh(df_q24_sort.index, df_q24_sort)\nax4.pie(df_q18_sort, labels=df_q18_sort.index,\n        startangle=90, autopct='%1.1f%%',\n        wedgeprops={'linewidth': 3, 'edgecolor':\"white\"})\nax1.set_title('Q12  What is favorite media source to get data science info.')\nax2.set_title('Q18  What programming languages do you use on a regular basis?')\nax3.set_title('Q24  Which of the following ML algorithms do you use on a regular basis?')","4a96523a":"df_crosstab_q5_q12 = pd.crosstab(df_mult_q.loc[1:,'Q5'], df_mult_q.loc[1:, 'Q12_matome'])\na512 = df_crosstab_q5_q12.loc[:,list_top20_q12]\n\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(15,8))\nleft = 0\nfor col in list_top20_q12:\n    ax1.barh(a512.index, a512.loc[:, col], left=left)\n    left += a512.loc[:, col]\nax1.legend(list_top20_q12, bbox_to_anchor=(3, 1), loc='upper right')\nax2.pie(a512.T.loc[:, 'Data Scientist'], labels=a512.T.loc[:, 'Data Scientist'].index,\n        startangle=90, autopct='%1.1f%%',\n        wedgeprops={'linewidth': 3, 'edgecolor':\"white\"})\nax1.set_title('Q5 x Q12 Favorite media sources that report on data science topics each roll')\nax2.set_title('Q12 Favorite media sources ratio of Data Scientist')","fe032206":"df_crosstab_q18_q5 = pd.crosstab(df_mult_q.loc[1:, 'Q18_matome'], df_mult_q.loc[1:, 'Q5'])\na185 = df_crosstab_q18_q5.loc[list_top20_q18, :].T\n\ncol_name_q185 = df_crosstab_q18_q5.loc[list_top20_q18, :].T.columns\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(15, 8))\nleft = 0\nfor cols in col_name_q185:\n    ax1.barh(a185.index, a185.loc[:, cols].T, left=left)\n    left += a185.loc[:, cols].T\nax1.legend(col_name_q185, bbox_to_anchor=(3, 1), loc='upper right')\nax2.pie(a185.T.loc[:, 'Data Scientist'], labels=a185.T.loc[:, 'Data Scientist'].T.index,\n        startangle=90, autopct='%1.1f%%',\n        wedgeprops={'linewidth': 2.8, 'edgecolor':\"white\"})\nax1.set_title('Q5 x Q18 Using programming languages each roll')\nax2.set_title('Q18 Using programming languages ratio of Data Scientist')","c3220c07":"df_crosstab_q5_q24 = pd.crosstab(df_mult_q.loc[1:,'Q5'], df_mult_q.loc[1:, 'Q24_matome'])\na524 = df_crosstab_q5_q24.loc[:,list_top20_q24]\n\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(15,8))\nleft = 0\nfor col in list_top20_q24:\n    ax1.barh(a524.index, a524.loc[:, col], left=left)\n    left += a524.loc[:, col]\nax1.legend(list_top20_q24, bbox_to_anchor=(3.3, 1), loc='upper right')\nax2.pie(a524.T.loc[:, 'Data Scientist'], labels=a524.T.loc[:, 'Data Scientist'].index,\n        startangle=90, autopct='%1.1f%%',\n        wedgeprops={'linewidth': 3, 'edgecolor':\"white\"})\nax1.set_title('Q5 x Q24 The following ML algorithms each roll')\nax2.set_title('Q24 ML algorithms ratio of Data Scientist')","8298d28e":"df_crosstab_q18_q24 = pd.crosstab(df_mult_q.loc[(df_mult_q['Q5']=='Data Scientist'),'Q18_matome'], df_mult_q.loc[(df_mult_q['Q5']=='Data Scientist'), 'Q24_matome'])\na1824 = df_crosstab_q18_q24.loc[:,list_top20_q24]\na1824['sum'] = a1824.sum(axis=1)\na_1824_datascientist = a1824.sort_values('sum', ascending=False).head(10)\n\na_1824_datascientist_t = a_1824_datascientist .T\na_1824_datascientist_t['sum'] = a_1824_datascientist_t .sum(axis=1)\ndf = a_1824_datascientist_t .sort_values('sum', ascending=False).iloc[1:11, 0:10]\ndf.style.background_gradient(cmap='Blues',\n                             subset=pd.IndexSlice[:'Line or Logi', ['PythonRSQL', 'Python', 'PythonSQL', 'PythonR']])","7b3b06fb":"fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(20,5))\nplt.subplots_adjust(wspace = 0.4, hspace=3)\nax1.barh(a_1824_datascientist.loc[:, 'sum'].index, a_1824_datascientist.loc[:, 'sum'])\nax2.barh(a_1824_datascientist.T.loc[:, 'PythonRSQL'].drop('sum').head(10).index, a_1824_datascientist.T.loc[:, 'PythonRSQL'].drop('sum').head(10))\nax1.set_title('Ranking of Programming languages that Data Scientist use')\nax2.set_title('Ranking of ML algorithms using Python, R and SQL(Data Scientist)')","b0c73443":"# What are Skill Sets required for the Data Scientist?","a5ef67db":"This article purpose was to make clear skill sets requirement for Data Science. Let us look at DataFrame and Graph as follows. The most frequently programming languages are 'Python, R and SQL'. And the most frequently ML algorithm are 'Linear or Logistic Regression', 'Decision Tree or Random Forest' and 'Gradient Boosting Machine'. If you want to become highly Data Scientist, it is necessary to acquire Beyesian in addition to the above.","e2ce3168":"# 2. Extracting top 20 elements of Q12, Q18, Q24\n \n * Attention: matome is called summary in English. matome is Japanese. If you think that, you exchange word in your brain.\n \n So, this section purpose is to extract top20 elements from Q12, Q18 and Q24. Used colomuns are \"Q**_matome\".Q12, Q18 and Q24 List is as follows. As you can see, these \"Q\" have \"Unknown\" element that is top. Top2 of Q12 is \"Kaggle,Blogs\". This means that many people use \"Kaggle and Blogs\" to search data science info. Next rows, many poeple use \"Kaggle\" to get informations. In this way, we can understand list as follows.","9e34da51":"# 5. Conclusion","540f2b89":"Next, in regard to Q12, Q18 and Q24, they have 8+1 or 12+1 columns that are \"...Part1, Part2, ..., Part8, ..., Part12\". And these elements is joined from Qxx_Part1 to Qxx_Part8 or Qxx_Part12.We consider that what skills Data Scientists or other rolls have. Therefore these elements is joined each row.","4b88eaaa":"In regard to Q12 and Q24, their elements is renamed as follows.","694d9487":"<center><font size=4 > Top20 Lists of Q12, Q18 and Q24 <\/font><\/center>\n <br>\n \n |Q12s|numbers||*||Q18s|numbers||*||Q24s|numbers|\n |:--|--:|--|--|--|:--|--:|--|--|--|:--|--:|\n |Unknown|4142||*||Unknown|5313||*||Unknown|5629|\n |KaggleBlogs|1299||*||Python |2672||*||Line or LogiDTorRF|1197|\n |Kaggle|1176||*||PythonSQL|1394||*||None|1186|\n |KaggleYouTubeBlogs|1135||*||PythonRSQL|1073||*||Line or LogiDTorRFGbm|1047|\n |Blogs|880||*||PythonR|822||*||Line or Logi|1008|\n |KaggleYouTube|788||*||R|367||*||Line or LogiDTorRFBayesian|560|\n |YouTube|512||*||PythonC++|340||*||Line or LogiDTorRFGbmBayesian|507|\n |KaggleCourseYouTubeBlogs|498||*||PythonSQLBash|311||*||Cnn|299|\n |YouTubeBlogs|451||*||PythonMATLAB|302||*||Line or LogiDTorRFGbmCnn|263|\n |KaggleCourseBlogs|368||*||PythonJava|271||*||Line or LogiDTorRFCnn|237|\n |TwitterKaggleBlogs|352||*||PythonBash|238||*||Line or LogiCnn|221|\n |RedditKaggleBlogs|279||*||RSQL|237||*||DTorRF|220|\n |KaggleCourseYouTube|269||*||PythonSQLJavascript|206||*||Line or LogiBayesian|203|\n |TwitterKaggleYouTubeBlogs|262||*||PythonRSQLBash|203||*||Line or LogiDTorRFGbmMlpCnn|187|\n |RedditKaggleYouTubeBlogs|240||*||PythonJavascript|188||*||Line or LogiDTorRFGbmMlpCnnRNN|174|\n |TwitterBlogs|225||*||PythonSQLJava|176||*||Line or LogiDTorRFGbmMlp|163|\n |KaggleCourse|205||*||PythonSQLOther|159||*||Line or LogiDTorRFGbmCnnRNN|153|\n |TwitterKaggle|180||*||PythonCC++|155||*||DTorRFGbm|146|\n|RedditBlogs|174||*||PythonOther|130||*||Line or LogiDTorRFGbmBayesianCnnRNN|125|\n |Twitter|164||*||PythonC|128||*||Line or LogiDTorRFGbmBayesianMlpCnnRNN|125|","fdff47d2":"# 4. Exploratory Data Analysis (Partial Version)\nThis section purpose is to analyze from many directions. And We find out that how are 'Q5 x Q12', 'Q5 x Q18' and 'Q5 x Q24' related.","4650fcbf":"We consider how media sources Data Scientist use. Let us look at two graphs of 'Q5 x Q12' as follows. As you can see, Data Scientist use multiple sources of 'Kaggle and Blogs' or 'Kaggle, YouTube and Blogs' etc. It is not single source, they get multiple media sources.","7bfcbc3f":"We can see these graphs in whole point of simple veiw, top3 of ranking are bacic and favorite informations to do Data Science.","e4ec9aa5":"### Class of Required Data Scientist Skill Sets\nIn conclusion, Skill Sets requirement for Data Science is divided into 6 classes as follows.\n\n|Class|Programming Languages|ML Algorithms|\n|--:|--:|--:|\n|Class1|Python|Linear or Logistic Regressor|\n|Class2|Python|Linear or Logistic Regressor, Decision Tree or Random Forest|\n|Class3|Python|Linear or Logistic Regressor, Decision Tree or Random Forest, Gradient Boosting Machine|\n|Class4|Python, R|Linear or Logistic Regressor, Decision Tree or Random Forest, Gradient Boosting Machine|\n|Class5|Python, R, SQL|Linear or Logistic Regressor, Decision Tree or Random Forest, Gradient Boosting Machine|\n|Class6|Python, R, SQL|Linear or Logistic Regressor, Decision Tree or Random Forest, Gradient Boosting Machine, Bayesian|","fc5bf921":"Data Scientist is popular job in Japan or Worldwide. Many people study linear algebra, differncial, statistic, machine learning and so on to become Data Scientist. Needless to say, there are many information that we should get and learn to be Data Scientist on internet. But there is not clear defined to say \"I'm Data Scientist!\". This porpose is to research how skill sets Data Sceintists should have.","234da9a5":"We know skill sets to do Data Science from this list. where you see Q18, many people use \"Python\" and \"Python + SQL\". Thus we understand that we should use \"Python + SQL\" skills. And let us see Q24, \"Linear or Logistic Regression + Decision Tree or Random Foreset + GBM\" are popular. So we should use these.","0a121058":"Last, we consider that how ML algorithms Data Scientist use. Let us see graphs as follows. 'Linea or Logistic Regression', 'Decision Tree or Random Forest' and 'Gradient Boosting Machine' are used to Data Scientist as graph follows. We understand that Data Scientist should use multiple ML algorithms.","852a1401":"We consider that what is necessary skills to do Data Science. We use DataFrame is \"df_multiple\" and columns are as follows.\n - Q2 : What is your gender?\n - Q3 : In which country do you currently reside?\n - Q5 : Select the title most similar to your current role (or most recent title if retired)\n - Q12: Who\/what are your favorite media sources that report on data science topics?\n - Q18: What programming languages do you use on a regular basis? \n - Q24: Which of the following ML algorithms do you use on a regular basis?","9be6baf0":"# 3. Exploratory Data Analysis (Entier Version)\n This section purpose is to see data at simple veiw. Let us see number of Gender, Roll and Favorit media to grasp whole point of view.\n  - 3-1. Personal Data\n  - 3-2. Tecnical Data","1658f6d6":"### 3-1. Personal Data\n It is cleary from Q2 and Q5 graphs that Male and Software Engineer are the greatest others. Male accounts for more 80%. And Software Engineer, Other, Data Scientist and Student account for more 70%. ","0ab0896c":"We consider how programming languages Data Scientist use. As you can see as follows, No1 programming language is Python. The second is Pyhton, R and SQL. The third is Python and SQL. If you become Data Scientist, you may use multiple programming languages.","8bdc12d9":"### 3-2. Technical Data\n On Q12, most people have preferance for Kaggle, Blogs and YouTube at favorite medeia sources. On Q18, most people use Python and SQL to analyze by programming languages. On Q24, 'Linear or Logistic Regression' and 'Decision Tree or Random Forest' are commonly used for data analysis. And 'Gradient Boosting Machine' is also used to analyze."}}