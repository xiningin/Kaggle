{"cell_type":{"48cc6450":"code","487dfbe5":"code","bdaffac9":"code","57cb3d1b":"code","8fb16658":"code","e27fd746":"code","4ca954eb":"code","a7aa5423":"code","fe9f200f":"code","8952eee2":"code","61e24846":"code","72893139":"code","51c1202e":"code","3f8470b7":"markdown"},"source":{"48cc6450":"import numpy as np \nimport pandas as pd\nimport os\nfrom keras.models import Sequential\nfrom keras import layers\nfrom keras.layers import BatchNormalization, Convolution2D , MaxPooling2D\nfrom keras.layers.core import  Reshape , Dense, Flatten, Dropout\nfrom sklearn.model_selection import train_test_split\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","487dfbe5":"df_train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndf_test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntarget = df_train[[\"label\"]]\nfeature = df_train.drop(columns=[\"label\"])\nx_train,x_test,y_train,y_test = train_test_split(feature,target,test_size=0.25)","bdaffac9":"y_train = pd.get_dummies(y_train.astype(str))\ny_test = pd.get_dummies(y_test.astype(str))","57cb3d1b":"net = Sequential()\nnet.add(layers.Dense(510,activation=\"relu\",input_dim=784))\nnet.add(layers.Dense(10,activation=\"softmax\"))\nnet.compile(optimizer=\"Adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","8fb16658":"model_net = net.fit(x_train,y_train,epochs=10,batch_size=64,validation_split=0.1)","e27fd746":"score= net.evaluate(x_test,y_test,batch_size=64)\nscore","4ca954eb":"import matplotlib.pyplot as plt\npd.DataFrame(model_net.history).loc[:, [\"loss\", \"val_loss\"]].plot()\nplt.xticks(range(10))\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Loss\")\nplt.show()","a7aa5423":"net.summary()","fe9f200f":"x_train = x_train.astype(\"float32\")\nx_test = x_test.astype(\"float32\")\nmodel = Sequential([\n    Reshape((28, 28, 1)),\n    Convolution2D(32,(3,3), activation='relu'),\n    Convolution2D(32,(3,3), activation='relu'),\n    MaxPooling2D(),\n    Convolution2D(64,(3,3), activation='relu'),\n    Convolution2D(64,(3,3), activation='relu'),\n    MaxPooling2D(),\n    Flatten(),\n    Dense(512, activation='relu'),\n    Dense(10, activation='softmax')\n])","8952eee2":"model.compile(optimizer=\"Adam\", loss=\"categorical_crossentropy\", metrics=[\"accuracy\"])\ncon_net = model.fit(x=x_train, y=y_train, batch_size=64, validation_split=0.1, epochs=10)","61e24846":"pd.DataFrame(con_net.history).loc[:, [\"loss\", \"val_loss\"]].plot()\nplt.xticks(range(10))\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Loss\")\nplt.show()","72893139":"y_test = y_test.astype(int)\nmodel.evaluate(x=x_test, y=y_test, batch_size=64)","51c1202e":"df_test = df_test.astype(\"float32\")\npredict = np.argmax(model.predict(df_test, verbose=0), axis=1)\nsubmissions=pd.DataFrame({\"ImageId\": list(range(1,len(predict)+1)),\n                         \"Label\": predict})\nsubmissions.to_csv(\"predictions.csv\", index=False, header=True)","3f8470b7":"# Convolutional"}}