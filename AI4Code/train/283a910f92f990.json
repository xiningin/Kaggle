{"cell_type":{"bd0cbb87":"code","4eb99e03":"code","00e6ebb3":"code","ade3e2c7":"code","469c17bc":"code","7aecaab4":"code","a7f3f0a3":"markdown"},"source":{"bd0cbb87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics import classification_report\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4eb99e03":"\n\ndata = pd.read_csv('\/kaggle\/input\/big-data-certification-study\/breast-cancer-wisconsin.csv')\n#data\n\nx = data[data.columns[1:10]]\n\ny =data[[\"Class\"]]\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(x, y, stratify=y, random_state=42)\n\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit(X_train)\nX_scaled_train=scaler.transform(X_train)\nX_scaled_test=scaler.transform(X_test)\n\n\nfrom sklearn.neighbors import KNeighborsClassifier\nmodel=KNeighborsClassifier()\nmodel.fit(X_scaled_train, y_train)\npred_train=model.predict(X_scaled_train)\nmodel.score(X_scaled_train, y_train)\n","00e6ebb3":"\npred_test = model.predict(X_scaled_test)\nmodel.score(X_scaled_test, y_test)","ade3e2c7":"from sklearn.metrics import confusion_matrix\nconfusion_test = confusion_matrix(y_test, pred_test)\nprint(\"\ud14c\uc2a4\ud2b8\ub370\uc774\ud130 \uc624\ucc28\ud589\ub82c\\n\" , confusion_test)","469c17bc":"from sklearn.metrics import classification_report\n\ncfreport_test = classification_report(y_test, pred_test)\nprint(\"\ubd84\ub958\uc608\uce21 \ub808\ud3ec\ud2b8:\\n\", cfreport_test)\n\n","7aecaab4":"import numpy as np \nfrom sklearn.metrics import mean_squared_error \n\n\nMSE_train = mean_squared_error(y_train,pred_train)\nMSE_test = mean_squared_error(y_test, pred_test)\n\nprint(\"\ud6c8\ub828  \ub370\uc774\ud130 RMSE: \", np.sqrt(MSE_train))\nprint(\"\ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 RMSE: \", np.sqrt(MSE_test))\n\n\n\n\n\n","a7f3f0a3":"\ub9ac\ud3ec\ud2b8 \uc791\uc131\ud558\uae30"}}