{"cell_type":{"5090a5a1":"code","63f6237b":"code","4c564f9f":"code","d18a73b5":"code","fd2339de":"code","0906f509":"code","34852c61":"code","876b2e27":"code","4a19a8df":"code","58326ad7":"code","f8ef02ed":"code","b41be9d9":"code","6aff5efc":"code","021f9199":"code","4f267988":"code","9015333a":"markdown","263dd23d":"markdown","682ffaa5":"markdown","34094a61":"markdown","bc069945":"markdown","410f6b40":"markdown","bb286864":"markdown","d62f8e81":"markdown","0a16a80a":"markdown","4c4bb5b4":"markdown","58d0f310":"markdown","cf052977":"markdown","7dc4c0a0":"markdown","55ee9e7e":"markdown","f66cd7f7":"markdown","93aecc9a":"markdown","c97ad601":"markdown","60bd2a56":"markdown","23d630ce":"markdown","d400e84b":"markdown","8f6ece32":"markdown"},"source":{"5090a5a1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nimport nltk\n\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score, plot_confusion_matrix\nfrom sklearn.metrics import classification_report\n\n# Models\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\n\n# hyperparameter tuning\nfrom sklearn.model_selection import RandomizedSearchCV\n\n# Stacking\nfrom sklearn.ensemble import StackingClassifier\n\n# Removes warning\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","63f6237b":"dataset = pd.read_csv('\/kaggle\/input\/reviews\/Restaurant_Reviews.tsv', delimiter = '\\t', quoting = 3)","4c564f9f":"dataset.head()","d18a73b5":"dataset.shape","fd2339de":"dataset.dtypes","0906f509":"dataset.info()","34852c61":"corpus = []\nfor i in range(0, 1000):\n  review = re.sub('[^a-zA-Z]', ' ', dataset['Review'][i])\n  review = review.lower()\n  review = review.split()\n  ps = PorterStemmer()\n  all_stopwords = stopwords.words('english')\n  all_stopwords.remove('not')\n  review = [ps.stem(word) for word in review if not word in set(all_stopwords)]\n  review = ' '.join(review)\n  corpus.append(review)","876b2e27":"print(corpus[:15])","4a19a8df":"cv = CountVectorizer(max_features = 1500)\nX = cv.fit_transform(corpus).toarray()\ny = dataset.iloc[:, -1].values","58326ad7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)","f8ef02ed":"# to store accuracy scores\nmodels = {} \n\nnb_models = [RandomForestClassifier,SVC]\nfor algorithm in nb_models:\n    model = algorithm().fit(X_train,y_train)\n    y_pred = model.predict(X_test)\n    cm = confusion_matrix(y_test,y_pred)\n\n    print(f'---- Algorithm: {algorithm.__name__}\\nConfusion Matrix:\\n\\n {cm} \\n\\nScore Accuracy: {accuracy_score(y_test,y_pred)}\\n Classification Report:\\n\\n{classification_report(y_test,y_pred)}\\n{\"-\"*25}')\n    models[algorithm.__name__] = accuracy_score(y_test,y_pred)","b41be9d9":"models = [('RandomForestClassifier',\n            RandomForestClassifier(random_state = 0),\n           {'max_depth': [100,110],\n            'min_samples_leaf': [1, 2, 3],\n            'min_samples_split': [5, 6,7],\n            'n_estimators': [2300,2400,2500]}),\n          \n          ('SVC',\n           SVC(random_state = 0),\n           {'C':[2,2.5,3],\n            'gamma' : [0.1, 0.2, 0,3],\n            'degree' : [1, 2, 3],\n            \"kernel\":[\"linear\",\"rbf\",\"sigmoid\"],}),\n         ]\n\nfor name, model, param_grid in models:\n    rs = RandomizedSearchCV(estimator = model, \n                            param_distributions = param_grid,\n                            scoring='accuracy',\n                            cv = 5,\n                            n_iter = 10,\n                            random_state = 0)\n    \n    rs.fit(X_train, y_train)\n    print(f'{name :20} {rs.best_score_}')\n    print(f'{name :20} {rs.best_params_}')","6aff5efc":"final_svc = rs.best_estimator_\nfinal_svc","021f9199":"# making predictions\nfinal_pred = final_svc.predict(X_test)","4f267988":"print(\"Accuracy Score (SVC Final Model):\", accuracy_score(y_test,final_pred)*100,\"%\")\nprint('Classification Report\\n',classification_report(y_test,final_pred))\nplot_confusion_matrix(final_svc, X_test, y_test)","9015333a":"# **Natural Language Processing In Restaurant Reviews**","263dd23d":"<a id=\"data_cleaning\"><\/a>\n### 4.1 Data Cleaning","682ffaa5":"<a id=\"evaluation\"><\/a>\n## 8. Evaluation","34094a61":"### Import Libraries","bc069945":"<a id=\"introduction\"><\/a>\n## 1. Introduction","410f6b40":"<a id=\"word_model\"><\/a>\n### 4.2 Creating the Bag of Words Model","bb286864":"<a id=\"data_understanding\"><\/a>\n## 3. Data Understanding","d62f8e81":"<a id=\"split\"><\/a>\n## 5. Splitting the dataset into the Training set and Test set","0a16a80a":"> From these results, SVC's performance is better in terms of accuracy than RandomForestClassifier which has been optimized using RandomSearchCV. I will use the best estimator or parameter for SVC to predict the X_test.","4c4bb5b4":"> The accuracy of the SVC model increases after the parameters are tuned from 78% to 78.5%.","58d0f310":"<div align='left'><font size=\"3\" color=\"#000000\"> Most of the Restaurants ask reviews to the customers and based on the reviews the restaurant can improve the customer satisfaction. So Reviews plays a vital role for the successful growth of the restaurant.\n<\/font><\/div>\n\n* **Problem Statement:**\n<div align='left'><font size=\"3\" color=\"#000000\"> Restaurant owners need to know if they're getting good reviews based on the comments they receive, as it can be difficult to go through each comment and classify whether or not it gives a good review. Natural Language Processing (NLP) allows us to address this particular issue by making such predictions if commenters leave a good review or not.\n<\/font><\/div>","cf052977":"<a id=\"randomized\"><\/a>\n### 7.1 RandomizedSearchCV","7dc4c0a0":"<a id=\"model_improvement\"><\/a>\n## 7. Model Improvement","55ee9e7e":"> <center><img src=\"https:\/\/img.freepik.com\/free-photo\/waitress-taking-orders-from-people-restaurant_23-2148006738.jpg?size=626&ext=jpg\" width=\"1000px\"><\/center>","f66cd7f7":"> I used two Models (SVC and RandomForestClassifier) to compare which one performs better in terms of accuracy.","93aecc9a":"<a id=\"data_preprocessing\"><\/a>\n## 4. Data Preprocessing","c97ad601":"<a id=\"modeling\"><\/a>\n## 6. Modeling","60bd2a56":"### Load the Dataset","23d630ce":"<h1 style='color:white;background-color:black' > Table of Contents <\/h1>\n\n* [Introduction](#introduction)\n* [Data Acquisition](#data_acquisition)\n* [Data Understanding](#data_understanding)\n* [Data Preprocessing](#data_preprocessing)\n    - [Data Cleaning](#data_cleaning)\n    - [Creating the Bag of Words Model](#word_model)\n* [Splitting the dataset into the Training set and Test set)](#split)\n* [Modeling](#modeling)\n    - [Model Comparison](#model_comparison)\n* [Model Improvement](#model_improvement)\n    - [RandomizedSearchCV](#randomized)\n* [Evaluation](#evaluation)","d400e84b":"<a id=\"data_acquisition\"><\/a>\n## 2. Data Acquisition","8f6ece32":"<a id=\"model_comparison\"><\/a>\n### 6.1 Model Comparison"}}