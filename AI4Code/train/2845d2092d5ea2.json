{"cell_type":{"28e82981":"code","1807b4b4":"code","86ce1bf3":"code","e3711b6d":"code","8cab5086":"code","1d14bdfb":"code","33737824":"code","2036aff3":"code","ba679814":"code","a0835b0d":"code","2f3f59b8":"code","c8c0939f":"code","09af52d9":"code","ce808b5d":"code","b1968db8":"code","59e60091":"code","352eea83":"code","7a87ca04":"code","32fe9f7c":"code","069ac113":"code","35a7466f":"code","37784624":"code","765aded1":"code","7bc16193":"code","080119f9":"code","537ad324":"code","bf590778":"code","a31577be":"code","51a9bf50":"code","25c84744":"code","39a4b2d7":"code","12736a98":"code","47fd7a8c":"code","8a80283e":"code","a2d30684":"code","096597dc":"code","e69082d8":"code","8f230167":"code","932605ea":"code","56e3d592":"code","367bd0f3":"code","fdec2aec":"code","8c8efa04":"code","3a5d2c28":"markdown","74aeef35":"markdown","bdb8cc66":"markdown"},"source":{"28e82981":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1807b4b4":"file_path=\"\/kaggle\/input\/515k-hotel-reviews-data-in-europe\/Hotel_Reviews.csv\"\nreviews= pd.read_csv(file_path)\nreviews.head()","86ce1bf3":"reviews.rename(columns={'Review_Total_Negative_Word_Counts': 'Total_Negative_Word','Review_Total_Positive_Word_Counts':'Total_Positive_Word',\n                        'Additional_Number_of_Scoring':'Additional_Scoring'}, inplace=True)","e3711b6d":"reviews.describe()","8cab5086":"reviews.info()","1d14bdfb":"reviews.isnull().sum()","33737824":"reviews.duplicated().sum()","2036aff3":"duplicateRowsreviews = reviews[reviews.duplicated()]\nduplicateRowsreviews.head()","ba679814":"reviews.Reviewer_Score.value_counts()","a0835b0d":"reviews.Average_Score.value_counts()","2f3f59b8":"data_plot =reviews[[\"Hotel_Name\",\"Average_Score\"]].drop_duplicates()\nfig, ax = pyplot.subplots(figsize=(30, 12))\nsns.countplot(ax = ax,x = \"Average_Score\",data=data_plot)","c8c0939f":"reviews['year'] = pd.DatetimeIndex(reviews['Review_Date']).year\nreviews['month'] = pd.DatetimeIndex(reviews['Review_Date']).month\nreviews[\"score\"] = np.where(reviews.eval(\"Reviewer_Score > 5\"), \"1\", \"0\")\nreviews.drop(columns=['Hotel_Address', 'Review_Date'],inplace=True)","09af52d9":"reviews.score.value_counts()","ce808b5d":"sns.pairplot(reviews)","b1968db8":"df_corr = reviews.corr()\nplt.figure(figsize=(15,10))\nsns.heatmap(df_corr, annot = True)\nplt.title(\"Correlation between the variables\", fontsize = 22)\nplt.show()","59e60091":"nans = lambda reviews: reviews[reviews.isnull().any(axis=1)]\nnans_df = nans(reviews)\nnans_df = nans_df[['Hotel_Name','lat','lng']]\nprint('No of missing values in the dataset: {}'.format(len(nans_df)))","352eea83":"len(nans_df.groupby('Hotel_Name').Hotel_Name.count())","7a87ca04":"reviews.Reviewer_Nationality.value_counts()","32fe9f7c":"reviews.Hotel_Name.value_counts()","069ac113":"reviews.groupby([\"Reviewer_Nationality\",\"score\"])[\"score\"].count()","35a7466f":"reviews.groupby([\"Hotel_Name\"]).Reviewer_Score.agg([max,min])","37784624":"reviews.groupby([\"Hotel_Name\",'Reviewer_Nationality']).Reviewer_Score.count().head()\n","765aded1":"reviews.groupby([\"Hotel_Name\",'Reviewer_Nationality']).Reviewer_Score.max().head()\n","7bc16193":"plt.figure(figsize=(25,10))\nsns.scatterplot(x=reviews['Total_Negative_Word'], y=reviews['Total_Positive_Word'],hue=reviews['score'])","080119f9":"plt.figure(figsize=(25,10))\nsns.scatterplot(x=reviews['Total_Positive_Word'], y=reviews['Average_Score'],hue=reviews['score'])","537ad324":"reviews.groupby([\"month\"]).Average_Score.max()","bf590778":"plt.figure(figsize=(25,6))\nplt.ylabel(\"Average_Score\")\nsns.barplot(x=reviews.month, y=reviews['Average_Score'])","a31577be":"plt.figure(figsize=(10,6))\nplt.ylabel(\"Average_Score\")\nsns.barplot(x=reviews.year, y=reviews['Average_Score'])","51a9bf50":"plt.figure(figsize=(25,6))\nplt.ylabel(\"Average_Score\")\nsns.barplot(x=reviews.year, y=reviews['Total_Positive_Word'],hue=reviews['score'])","25c84744":"plt.figure(figsize=(15,6))\nplt.ylabel(\"Average_Score\")\nsns.barplot(x=reviews.month, y=reviews['Total_Positive_Word'],hue=reviews['score'])","39a4b2d7":"sns.lineplot(x=reviews.month, y=reviews['Total_Positive_Word'],hue=reviews['score'], data=reviews)","12736a98":"plt.figure(figsize=(20,6))\n\nsns.lineplot(x=reviews.month, y=reviews['Total_Negative_Word'],hue=reviews['score'], data=reviews)\n","47fd7a8c":"plt.figure(figsize=(10,6))\nsns.scatterplot(x=reviews.lat, y=reviews.lng, hue=reviews['score'])","8a80283e":"from matplotlib import pyplot\nfig, ax = pyplot.subplots(figsize=(30, 8))\nsns.countplot(ax = ax,x = \"month\",hue=\"score\",data=reviews)","a2d30684":"from wordcloud import WordCloud, STOPWORDS\nimport matplotlib.pyplot as plt\n\ndef show_wordcloud(data, title = None):\n    stopwords = set(STOPWORDS)\n    wordcloud = WordCloud( background_color = 'white',max_words = 200,max_font_size = 40,scale=3,random_state = 50,stopwords=stopwords).generate(str(data))\n\n    fig = plt.figure(1, figsize = (20, 20))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize = 15)\n        fig.subplots_adjust(top = 2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()","096597dc":"show_wordcloud(reviews[\"Positive_Review\"])","e69082d8":"show_wordcloud(reviews[\"Negative_Review\"])","8f230167":"show_wordcloud(reviews[\"Reviewer_Nationality\"])","932605ea":"reviews[\"pos_count\"] = 1\nreviews[\"neg_count\"] = 1\nreviews[\"pos_count\"] = reviews.apply(lambda x: 0 if x[\"Positive_Review\"] in ['No Positive',\"Nothing\",'n a','no','none'] else x[\"pos_count\"],axis =1)\nreviews[\"neg_count\"] = reviews.apply(lambda x: 0 if x[\"Negative_Review\"] in ['No Negative',\"Nothing\",'n a','no','none'] else x[\"neg_count\"],axis =1)","56e3d592":"reviews.head()","367bd0f3":"pos=reviews.groupby([\"Hotel_Name\",\"Average_Score\"])[\"pos_count\",\"neg_count\"].sum()\npos.head(10)","fdec2aec":"pos=reviews.groupby([\"Average_Score\"])[\"pos_count\",\"neg_count\"].sum()\npos.head(10)","8c8efa04":"word_dic = {}\nfor index, row in reviews.iterrows():\n    sent=row['Negative_Review']\n    sent = sent.split()\n    for word in sent:\n        if word in word_dic:\n            word_dic[word] += 1 \n        else:\n            word_dic[word] = 1 \n\nword_dic","3a5d2c28":"# Correlation","74aeef35":"# **WordCloud**","bdb8cc66":"# Positive and Negative count"}}