{"cell_type":{"5b3242ea":"code","b2a3eba3":"code","a380d5de":"code","4912b4d0":"code","75bd858f":"code","38751abb":"code","c592a184":"code","56502227":"code","3008da55":"code","a6ca1d4c":"code","b6e6be66":"code","31829bef":"code","41bc8e41":"code","0aa864e8":"code","20c45f44":"code","15d97b0f":"code","698ec5cd":"code","fbe8fbdb":"code","736781d1":"code","8393e7ec":"code","8628a6b5":"code","eac875bf":"code","cac33abf":"code","98cc5fd0":"code","9e800592":"code","e9144491":"code","844a91b2":"code","f728e08a":"code","ace75206":"markdown","a9856dab":"markdown","f25c9a70":"markdown","4a2030d1":"markdown","8e51d408":"markdown","69ca451f":"markdown","05bd9eb1":"markdown","5a97c9e5":"markdown","fc8fdbc2":"markdown","a203e35e":"markdown","7257f6de":"markdown","05aed23f":"markdown","62214e41":"markdown","8ef282e9":"markdown","9da94d69":"markdown","5beac08c":"markdown","e9898965":"markdown","aac26868":"markdown","e5940ac9":"markdown","5e2a2a6f":"markdown","39b8dabc":"markdown"},"source":{"5b3242ea":"import numpy as np\nimport pandas as pd\n\ncccd = pd.read_csv('..\/input\/credit-card-customer-dataset\/Credit Card Customer Data - Sheet1.csv', index_col='Sl_No')\n\ncccd.head()","b2a3eba3":"from sklearn.preprocessing import StandardScaler\n\ncccd_scaled = cccd.copy()\ncccd_scaled[:] = StandardScaler().fit_transform(cccd_scaled)\ncccd_scaled.drop('Customer Key', axis=1, inplace=True)\ncols = list(cccd_scaled.columns)\ncccd_scaled.head()","a380d5de":"cccd.shape","4912b4d0":"cccd.isnull().sum()","75bd858f":"gb_cccd = cccd.groupby('Customer Key').count()\nprint('There are',gb_cccd.loc[gb_cccd.Total_calls_made >=2].shape[1], 'duplicate entries for Customer Key')\n\nfor k in list(gb_cccd.loc[gb_cccd.Total_calls_made >=2].index):\n    display(cccd.loc[cccd['Customer Key'] == k])","38751abb":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","c592a184":"plt.figure(figsize=(12,7))\nsns.distplot(cccd.Avg_Credit_Limit);","56502227":"plt.figure(figsize=(12,8))\nsns.distplot(cccd.Total_Credit_Cards);","3008da55":"plt.figure(figsize=(12,7))\nsns.distplot(cccd.Total_visits_bank);","a6ca1d4c":"plt.figure(figsize=(12,7))\nsns.distplot(cccd.Total_calls_made);","b6e6be66":"plt.figure(figsize=(12,7))\nsns.distplot(cccd.Total_visits_online);","31829bef":"sns.pairplot(cccd[['Avg_Credit_Limit', 'Total_Credit_Cards', 'Total_visits_bank', 'Total_visits_online', 'Total_calls_made']], diag_kind='kde');","41bc8e41":"sns.heatmap(cccd[['Avg_Credit_Limit', 'Total_Credit_Cards', 'Total_visits_bank', 'Total_visits_online', 'Total_calls_made']].corr(), annot=True);","0aa864e8":"from mpl_toolkits.mplot3d import axes3d, Axes3D\n\nfig = plt.figure(figsize=(10,10))\n\nax = Axes3D(fig)\n\n\n\nx = cccd.Total_visits_bank\ny = cccd.Total_visits_online\nz = cccd.Total_calls_made\n\n\ng = ax.scatter(x, y, z, c=x, marker='o', depthshade=False, cmap='Paired')\nax.set_xlabel('Total Bank Visits')\nax.set_ylabel('Total Visits Online')\nax.set_zlabel('Total Calls Made')\n\n# produce a legend with the unique colors from the scatter\nlegend = ax.legend(*g.legend_elements(), loc=\"lower center\", title=\"Total bank visits\", borderaxespad=-10, ncol=4)\nax.add_artist(legend)\n\n# plt.show()\n\nfrom matplotlib import animation\n\ndef rotate(angle):\n     ax.view_init(azim=angle)\n\nangle = 1\nani = animation.FuncAnimation(fig, rotate, frames=np.arange(0, 360, angle), interval=1)\nani.save('Cluster_plot.gif', writer=animation.PillowWriter(fps=25));","20c45f44":"from sklearn.cluster import KMeans\n\nfrom scipy.spatial.distance import cdist\nmeanDistortions=[]\n\nfor k in range(1, 10):\n    model=KMeans(n_clusters=k)\n    model.fit(cccd_scaled)\n    prediction=model.predict(cccd_scaled)\n    meanDistortions.append(sum(np.min(cdist(cccd_scaled, model.cluster_centers_, 'euclidean'), axis=1)) \/ cccd_scaled.shape[0])\n\n\nplt.plot(range(1, 10), meanDistortions, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Average distortion')\nplt.title('Selecting k with the Elbow Method');","15d97b0f":"model = KMeans(n_clusters=3)\nmodel.fit(cccd_scaled)\npreds = model.predict(cccd_scaled)\n","698ec5cd":"from sklearn.metrics import silhouette_score\nlabels = model.labels_\nsilhouette_score(cccd_scaled, labels, metric='euclidean')","fbe8fbdb":"cccd['Kmean_grouping'] = preds #here we add the predictions to the unscaled data so that we can gain some real world interpretability.\ncccd_scaled['Kmean_grouping'] = preds\n\ncccd.groupby('Kmean_grouping').count()","736781d1":"_ = cccd.groupby('Kmean_grouping').mean().append(pd.DataFrame(cccd.std()).T)\n_.index = ['Phone', 'Online', 'In person', 'Mean']\n_","8393e7ec":"cccd_scaled.boxplot(by='Kmean_grouping', layout=(3,2), figsize=(10,14));","8628a6b5":"cccd_scaled.drop('Kmean_grouping', inplace=True, axis=1)","eac875bf":"from scipy.cluster.hierarchy import cophenet, dendrogram, linkage\nfrom scipy.spatial.distance import pdist\n\nlinks = ['ward', 'complete', 'average', 'single', 'weighted', 'centroid', 'median']\naffs = ['braycurtis', 'canberra', 'chebyshev', 'cityblock', 'correlation',\n        'cosine', 'dice', 'euclidean', 'hamming', 'jaccard',\n        'kulsinski', 'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto',\n        'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean']\n\nfor aff in affs:\n    for link in links:\n        if link == 'ward' and aff != 'euclidean':\n            pass\n        elif link == 'centroid' and aff != 'euclidean':\n            pass\n        elif link == 'median' and aff != 'euclidean':\n            pass\n        else:\n            Z = linkage(cccd_scaled[cols], metric=aff, method=link)\n            c, coph_dists = cophenet(Z , pdist(cccd_scaled[cols]))\n            if c > .75:\n                print('affinity:',aff, ', link:',link,':', c)","cac33abf":"from sklearn.cluster import AgglomerativeClustering\n\n# model = AgglomerativeClustering(n_clusters=3, affinity='euclidean',  linkage='average')\n# model.fit(cccd_scaled)\n\nmeanDistortions=[]\n\nfor k in range(2, 10):\n    model=AgglomerativeClustering(n_clusters=k, affinity='euclidean',  linkage='average')\n    model.fit(cccd_scaled)\n    prediction=model.labels_\n    meanDistortions.append(silhouette_score(cccd_scaled, prediction))\n\n\nplt.plot(range(2, 10), meanDistortions, 'bx-')\nplt.xlabel('k')\nplt.ylabel('silhouette score')\nplt.title('Selecting k with silhouette score');","98cc5fd0":"Z = linkage(cccd_scaled[cols], metric='euclidean', method='average')\nc, coph_dists = cophenet(Z , pdist(cccd_scaled[cols]))\nplt.figure(figsize=(10, 5))\n\ndendrogram(Z, p=15, truncate_mode='lastp', leaf_rotation=90.,color_threshold = 40, leaf_font_size=8.)\nplt.show()","9e800592":"model=AgglomerativeClustering(n_clusters=2, affinity='euclidean',  linkage='average')\nmodel.fit(cccd_scaled)\npreds=model.labels_\ncccd['hc_grouping'] = preds\ncccd_scaled['hc_grouping'] = preds\n\ncccd.groupby('hc_grouping').count()","e9144491":"_ = cccd.groupby('hc_grouping').mean().append(pd.DataFrame(cccd.std()).T)\n_.index=['Offline','Online', 'Mean']\n_","844a91b2":"cccd_scaled.boxplot(by='hc_grouping', layout=(3,2), figsize=(10,14));","f728e08a":"gb_cccd = cccd.groupby('Customer Key').count()\nprint('There are',gb_cccd.loc[gb_cccd.Total_calls_made >=2].shape[0], 'duplicate entries for Customer Key')\n\nfor k in list(gb_cccd.loc[gb_cccd.Total_calls_made >=2].index):\n    display(cccd.loc[cccd['Customer Key'] == k])","ace75206":"<a id=\"part-one\"><\/a>\n## Part One: Exploratory Data Analysis\n[Return to Table of Contents](#TOC)","a9856dab":"Below we see the average values for each feature in each cluster, the final row of the dataframe is the mean value for each column (since this data is unscaled we can use this to determine how big of a step each of these means is from one another).\n\nIt would appear my hypothesis of the clusters forming along query method has proven correct. If we look at the data we see that there is a group which prefers online interactions with their bank, they have a much higher credit limit and also have more credit cards. The customers who prefer in-person interactions tend to have the least number of credit cards and the lowest credit limit. The customers who contact via phonecall are in the middle.\n\nOne additional observation is that if we tally up the number of interactions per group (how many times they have used online, phone, or in-person services) we see the in-person customers appear to be the most active. This was the opposite of my initial expectations as visiting a bank in person has the highest friction (effort required) to complete. \n ","f25c9a70":"<a id=\"part-two\"><\/a>\n## Part Two: K-means\n\nFirst, we want to iterate through and view the performance of each value of K for K-means, then using a linegraph to find the elbow of the plot we can select the optimal number of clusters.\n\n[Return to Table of Contents](#TOC) \n","4a2030d1":"### State vs Trait:\nWhen trying to serve a customer it is important to understand whether a characteristic is a state or a trait. A state is a characteristic that can change over time, for instance, a person can be illiterate as a state, but if they choose to overcome such a weakness they can change. A trait is something which is unchanging, for instance, if a person is left-handed they can try to learn to use their non-dominant hand but they won't be able to attain the same level of mastery with it as their dominant hand.\n\nBelow we have 5 sets of records for customers with entries that have changed over time, we can see that in three of the five cases customers have moved from one cluster to another. Since this is the case one possible choice is to incentivize customers to change to a more desirable class. As a possible example, we may want more customers to switch to digital, as they are more engaged (have more visits) and have more credit cards. Another possible option is to start monitoring usage that indicates a state change so that we can change contact methods accordingly for their preferences.\n","8e51d408":"<a id=\"TOC\"><\/a>\n# Table of Contents:\n\n* [Part One: Exploratory Data Analysis](#part-one)\n* [Part Two: K-means Clustering](#part-two)\n* [Part Three: Hierarchical Clustering](#part-three)\n* [Part Four: Key questions](#part-four)","69ca451f":"### Contact method:\nA hypothesis that I had going into this was that there would be three clusters for contact method, where customers would stick to their preferred method for interacting with their bank (online, in person, and through the phone). Below we can see a 3D rotating scatter plot which shows my hypothesis was correct.\n\nThe code below is extremely influenced by the two links below: \n\n\nhttp:\/\/blog.mahler83.net\/2019\/10\/rotating-3d-t-sne-animated-gif-scatterplot-with-matplotlib\/\n   \n https:\/\/stackoverflow.com\/questions\/52285104\/3d-scatterplots-in-python-with-hue-colormap-and-legend]","05bd9eb1":"------\n# Project: Problem Statement - Credit Card Customer Segmentation\n\n### AllLife Credit Card Customer Segmentation\n\n \n\n \n\nBackground: AllLife Bank wants to focus on its credit card customer base in the next financial year. They have been advised by their marketing research team, that the penetration in the market can be improved. Based on this input, the Marketing team proposes to run personalised campaigns to target new customers as well as upsell to existing customers. Another insight from the market research was that the customers perceive the support services of the back poorly. Based on this, the Operations team wants to upgrade the service delivery model, to ensure that customers queries are resolved faster. Head of Marketing and Head of Delivery both decide to reach out to the Data Science team for help.\n\n \n\nObjective: To identify different segments in the existing customer based on their spending patterns as well as past interaction with the bank.\n\n \n\nKey Questions:\n\n    How many different segments of customers are there?\n    How are these segments different from each other?\n    What are your recommendations to the bank on how to better market to and service these customers?\n\n \n\nData Description: Data is of various customers of a bank with their credit limit, the total number of credit cards the customer has, and different channels through which customer has contacted the bank for any queries, different channels include visiting the bank, online and through a call.\n\n    Customer key - Identifier for the customer\n    Average Credit Limit - Average credit limit across all the credit cards\n    Total credit cards - Total number of credit cards\n    Total visits bank - Total number of bank visits\n    Total visits online - total number of online visits\n    Total calls made - Total number of calls made by the customer\n\n \n\nSteps to follow: \n\n    Perform univariate analysis on the data to better understand the variables at your disposal and to get an idea about the no of clusters. Perform EDA, create visualizations to explore data. (10 marks)\n    Properly comment on the codes, provide explanations of the steps taken in the notebook and conclude your insights from the graphs. (5 marks)\n    Execute K-means clustering use elbow plot and analyse clusters using boxplot (10 marks)\n    Execute hierarchical clustering (with different linkages) with the help of dendrogram and cophenetic coeff. Analyse clusters formed using boxplot (15 marks)\n    Calculate average silhouette score for both methods. (5 marks)\n    Compare K-means clusters with Hierarchical clusters. (5 marks)\n    Analysis the clusters formed, tell us how is one cluster different from another and answer all the key questions. (10 marks)\n------","5a97c9e5":"### Total calls made:\nThe total number of calls made by the customer.\n \n","fc8fdbc2":"The Following notebook is my unsupervised learning coursework for the University of Texas at Austin's post graduate program in AI\/ML. The data used in this notebook does not belong to me, the markdown cell below is the provided project overview, the rest of this notebook (from the table of contents on) is my own creation with links included for any code sections that were heavily influenced by other works.","a203e35e":"<a id=\"part-four\"><\/a>\n## Part Four: Key Questions\n[Return to Table of Contents](#TOC)\n\n    How many different segments of customers are there?\n    How are these segments different from each other?\n    What are your recommendations to the bank on how to better market to and service these customers?\n    \nArguably, there are three distinct categories of customers:\n* In-person users: prefer to handle bank transactions in person. They have the fewest credit cards and the lowest available credit. They are also the most active users.\n* Phone users: prefer verbally handling transactions remotely.\n* Online users: prefer digital transactions. They also have the most credit cards and the highest available credit.\n\nWe can tailor contact methods to these customer preferences. Online\/phone users will probably prefer email\/text notifications, while in-person users mail prefer mail notifications and upselling (when at the bank location). Since online users tend to have (and presumably use) the most credit, these may be the demographic we want to target with our next ad campaign, focusing on digit recruiting.\n \n","7257f6de":"<a id=\"part-three\"><\/a>\n## Part Three: Hierarchical Clustering\n\nFor hierarchical clustering, we begin by evaluating the cophenetic coefficients for each linkage type and also each affinity\/metric. Below is a list of said outcomes, ignoring any combination that scores poorly, and ignoring any combination that will result in an error. It's worth noting that scipy has more options than sklearn does for metrics and linkages. While there are several good combinations, I will pick euclidean for the metric and average for linkage as these are options in both scipy and sklearn.\n\n[Return to Table of Contents](#TOC) \n","05aed23f":"### Average credit limit:\nThe majority of records do not have credit or have a low limit. ","62214e41":"### Total bank visits:\nOnce again, normally distributed variable. \n","8ef282e9":"This method resulted in two clusters, with one cluster containing only 8% of the total records. It is also worth noting that the online user segment matches the same online user segment from Kmeans. Interestingly enough this division seems to be the users who prefer internet transactions and those who do not. Once again, online users have more credit cards and a larger credit limit.\n\nNot shown below: when using 3, 4, 5, or 6 clusters, all but two of the clusters have less than five records. Obviously, such clusters don't provide meaningful data. \n","9da94d69":"The two bivariate plots below are useful to see what amount of feature interaction is present.","5beac08c":"### Customer Key and Sl_No\nInitially, I believed that these two features were redundant, that Customer key was the intended primary key for a database but that Sl_No was generated when the data was added to a SQL like database but the user failed to explicitly state the primary key so a new one was generated. Strangely enough, the duplicate records for Customer Key don't match up, this may be that a record was added to the database when the intent was actually to update an existing record, another possibility may be that these are cases of identity theft, or possibly just joint accounts where the Customer Key is shared but not the Sl_No.\n\n------\nI now know that the duplicate entries are updated records, I will leave in the dataset for now as they consist of less than 1% of the total amount of data, they aren't outliers, and they will be useful for proving a point at the end of this project. ","e9898965":"### Total credit cards:\nLooks to be normally distributed. I can't help but wonder, why do some many users have more than one credit card? \n","aac26868":"Next, I need to decide on the number of clusters. There are two methods I use here to reach my conclusion, the first plot shows the silhouette score by the number of clusters. Based on this I would not want more than 4 clusters as the score gets too low. The second plot is the dendrogram, which plots the merging of the groups base on distance. The dendrogram shows a long distance (the y axis) for the two final groups and each of the subsequent groups has a drastically shorter distance. This would suggest to me that there are two distinct groups under this method. ","e5940ac9":"Thanks for viewing this notebook. If you found this notebook useful or interesting please give it an upvote. I'm always open to constructive feedback. If you have any questions, comments, concerns, or if you would like to collaborate on a future project feel free to leave a comment here or message me directly.","5e2a2a6f":"Since clustering methods use distance metrics I will create a scaled copy of the data.","39b8dabc":"![SegmentLocal](.\/Cluster_plot.gif \"segment\")"}}