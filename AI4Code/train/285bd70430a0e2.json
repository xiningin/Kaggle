{"cell_type":{"f36a1f47":"code","ff8855eb":"code","15389180":"code","2529249d":"code","5a8d6b13":"code","04499d9f":"code","6b114576":"code","b5dbf1e8":"markdown","8fe50ab4":"markdown","86a05007":"markdown","c16d9920":"markdown","9369335f":"markdown","770d7f20":"markdown","cdd41849":"markdown"},"source":{"f36a1f47":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble.gradient_boosting import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier","ff8855eb":"\ndf = pd.read_csv('..\/input\/heart.csv')\ndf = df.fillna(0)","15389180":"df.columns\n","2529249d":"y = df['target'].values\ndf = df.fillna(0)\nX = df.drop(columns=['target'], axis=1).values","5a8d6b13":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=39)\nmodel = GradientBoostingClassifier(random_state=39, n_estimators=50)\nmodel.fit(X_train, y_train)\npred = model.predict(X_test)\naccuracy = np.mean(pred == y_test)\nprint('accuracy: ', accuracy*100, '%')","04499d9f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=39)\nmodel = RandomForestClassifier(random_state=39, n_estimators=100)\nmodel.fit(X_train, y_train)\npred = model.predict(X_test)\naccuracy = np.mean(pred == y_test)\nprint('accuracy: ', accuracy*100, '%')","6b114576":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=33)\nmodel = RandomForestClassifier(random_state=33, n_estimators=100)\nmodel.fit(X_train, y_train)\npred = model.predict(X_test)\naccuracy = np.mean(pred == y_test)\nprint('accuracy: ', accuracy*100, '%')","b5dbf1e8":"Model with RandomForest","8fe50ab4":"Model","86a05007":"IMPORT","c16d9920":"Because of small file it depends on random state.","9369335f":"Read","770d7f20":"X and y","cdd41849":"With more estimators Random Forest has the same accuracy"}}