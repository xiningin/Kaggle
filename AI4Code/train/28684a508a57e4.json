{"cell_type":{"a9c6d270":"code","76ed6fe7":"code","9913de3b":"code","3dbfdc19":"code","d5207e7d":"code","4520f0e8":"code","875844ac":"markdown","87843e1e":"markdown","18d34815":"markdown"},"source":{"a9c6d270":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nfrom scipy.spatial.distance import pdist, squareform\n\nsns.set()","76ed6fe7":"date_rng = pd.date_range(start='1\/1\/2018', end='1\/08\/2018', freq='H')\ndf = pd.DataFrame(date_rng, columns=['date'])\ndf['data'] = np.random.randint(0,100,size=(len(date_rng)))\ndf.head(10)","9913de3b":"df['data'].plot(figsize=(16,6))","3dbfdc19":"def rec_plot(s, eps=0.10, steps=10):\n    d = pdist(s[:,None])\n    d = np.floor(d\/eps)\n    d[d>steps] = steps\n    Z = squareform(d)\n    return Z","d5207e7d":"a = []\n\na.append(rec_plot(df['data'], eps=0.10))\na.append(rec_plot(df['data'], eps=0.30))\na.append(rec_plot(df['data'], eps=0.60))\na.append(rec_plot(df['data'], eps=0.80))\na.append(rec_plot(df['data'], eps=5))\n","4520f0e8":"\nfig, axs = plt.subplots(1, len(a), figsize=(16, 4), sharey=True)\n\nfor i, obj in enumerate(a):\n    axs[i].imshow(obj, cmap='gray')","875844ac":"# Recurrent PLOT","87843e1e":"## Create a Time series","18d34815":"create a recurrent plot "}}