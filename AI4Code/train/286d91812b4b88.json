{"cell_type":{"8560b43d":"code","087d2f5b":"code","f898409c":"code","f6dab36d":"code","d039e7c1":"code","5017b3b5":"code","a62212ae":"code","41493a13":"code","0f96729d":"code","6393fd38":"code","6ca908bc":"markdown"},"source":{"8560b43d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","087d2f5b":"aa_full = pd.read_csv(\"..\/input\/tglf-new-coefficients\/aa.csv\").iloc[:, 1]\nbb_full = pd.read_csv(\"..\/input\/tglf-new-coefficients\/bb.csv\").iloc[:, 1]\ncc_full = pd.read_csv(\"..\/input\/tglf-new-coefficients\/cc.csv\").iloc[:, 1]\n\naa_michele = pd.read_csv(\"..\/input\/tglf-new-coefficients\/aa_michele.csv\").iloc[:, 1]\nbb_michele = pd.read_csv(\"..\/input\/tglf-new-coefficients\/bb_michele.csv\").iloc[:, 1]\ncc_michele = pd.read_csv(\"..\/input\/tglf-new-coefficients\/cc_michele.csv\").iloc[:, 1]\n\naa_slow = pd.read_csv(\"..\/input\/tglf-new-coefficients\/aa_slow.csv\").iloc[:, 1]\nbb_slow = pd.read_csv(\"..\/input\/tglf-new-coefficients\/bb_slow.csv\").iloc[:, 1]\ncc_slow = pd.read_csv(\"..\/input\/tglf-new-coefficients\/cc_slow.csv\").iloc[:, 1]\n\naa_wo_relu = pd.read_csv(\"..\/input\/tglf-new-coefficients\/aa_wo_relu.csv\").iloc[:, 1]\nbb_wo_relu = pd.read_csv(\"..\/input\/tglf-new-coefficients\/bb_wo_relu.csv\").iloc[:, 1]\ncc_wo_relu = pd.read_csv(\"..\/input\/tglf-new-coefficients\/cc_wo_relu.csv\").iloc[:, 1]\n\naa_scaled = pd.read_csv(\"..\/input\/tglf-new-coefficients\/aa_scaled.csv\").iloc[:, 1]\nbb_scaled = pd.read_csv(\"..\/input\/tglf-new-coefficients\/bb_scaled.csv\").iloc[:, 1]\ncc_scaled = pd.read_csv(\"..\/input\/tglf-new-coefficients\/cc_scaled.csv\").iloc[:, 1]","f898409c":"taml = pd.read_csv(\"..\/input\/tglf-and-ml\/TAML_v1.csv\")[:-6]\naa0 = taml[\"aa0\"]\naa1 = taml[\"aa1\"]\nbb0 = taml[\"bb0\"]\nbb1 = taml[\"bb1\"]\ncc0 = taml[\"cc0\"]\ncc1 = taml[\"cc1\"]\n\n# aa_full = sigmoid(aa_full)\n# bb_full = sigmoid(bb_full)\n# cc_full = sigmoid(cc_full)","f6dab36d":"import matplotlib.pyplot as plt\nbins = 20\nalpha=0.5\n\ncomparison = [aa_scaled,bb_scaled,cc_scaled]","d039e7c1":"plt.hist(comparison[0], bins, alpha=alpha, label='aa_new')\nplt.hist(aa0, bins, alpha=alpha, label='aa0')\nplt.legend(loc='upper right')\nplt.show()","5017b3b5":"plt.hist(comparison[0], bins, alpha=alpha, label='aa_new')\nplt.hist(aa1, bins, alpha=alpha, label='aa1')\nplt.legend(loc='upper right')\nplt.show()","a62212ae":"plt.hist(comparison[1], bins, alpha=alpha, label='bb_new')\nplt.hist(bb0, bins, alpha=alpha, label='bb0')\nplt.legend(loc='upper right')\nplt.show()","41493a13":"plt.hist(comparison[1], bins, alpha=alpha, label='bb_new')\nplt.hist(bb1, bins, alpha=alpha, label='bb1')\nplt.legend(loc='upper right')\nplt.show()","0f96729d":"plt.hist(comparison[2], bins, alpha=alpha, label='cc_new')\nplt.hist(cc0, bins, alpha=alpha, label='cc0')\nplt.legend(loc='upper right')\nplt.show()","6393fd38":"plt.hist(comparison[2], bins, alpha=alpha, label='cc_new')\nplt.hist(cc1, bins, alpha=alpha, label='cc1')\nplt.legend(loc='upper right')\nplt.show()","6ca908bc":"**Compare New to Old Coefficients**"}}