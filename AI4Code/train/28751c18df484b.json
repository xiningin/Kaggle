{"cell_type":{"71ea6326":"code","65f6cf43":"code","131406ae":"code","bd9d8a88":"code","a388d918":"code","94630313":"code","50100d15":"code","914adb7e":"code","104720a8":"code","d46ba696":"code","2586238a":"code","922e674c":"markdown","cc6f13ad":"markdown"},"source":{"71ea6326":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","65f6cf43":"train = pd.read_csv('\/kaggle\/input\/infopulsehackathon\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/infopulsehackathon\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/infopulsehackathon\/sample_submission.csv')","131406ae":"train.info()","bd9d8a88":"train.select_dtypes(object).keys()","a388d918":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\n\nfor i in train.select_dtypes(object).keys():\n    train[i] = le.fit_transform(train[i])\n    test[i] = le.transform(test[i])","94630313":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor( max_features = 'sqrt', n_estimators = 500)","50100d15":"rf.fit(train.drop(columns = ['Energy_consumption','Id']) , train['Energy_consumption'] )","914adb7e":"sample_submission['Energy_consumption'] = rf.predict(test.drop(columns = ['Id'] ))","104720a8":"from matplotlib import pyplot as plt\nprint('Train target distribution')\ntrain['Energy_consumption'].hist(bins=30);\n\nplt.show()\n\nprint('Test Prediction distribution')\npd.Series(sample_submission['Energy_consumption']).hist(bins=30);","d46ba696":"sample_submission.head()","2586238a":"sample_submission.to_csv('sample_submission.csv', index=False)","922e674c":"Simple Encoder for 4 object","cc6f13ad":"RF"}}