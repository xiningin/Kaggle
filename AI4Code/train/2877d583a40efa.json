{"cell_type":{"b88c7ad8":"code","79f59325":"code","fed098bb":"code","38886f47":"code","76520f96":"code","b7159dd1":"code","cacd1144":"code","12c00b7b":"code","5eaa80b3":"code","614a9ccb":"code","8042a066":"code","4acb33cf":"code","add94697":"code","b59bf9eb":"code","504beb1f":"code","55b90df8":"code","9740d5fe":"code","89ff4117":"code","3a57504a":"code","32ed30c7":"code","b706071d":"markdown","e9af73c7":"markdown","ef0b7a37":"markdown","c434fcc3":"markdown","d2d6669d":"markdown","1b754721":"markdown","cd1fe4da":"markdown","f76ccfa5":"markdown","3b1cfd88":"markdown"},"source":{"b88c7ad8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.set_option('display.max_columns',50)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn import metrics\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79f59325":"df_train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-mar-2021\/train.csv\", sep = \",\", encoding = \"ISO-8859-1\", header = 0)\ndf_train.head()","fed098bb":"df_test = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-mar-2021\/test.csv\", sep = \",\", encoding = \"ISO-8859-1\", header = 0)\ndf_test.head()","38886f47":"df_train.info()","76520f96":"df_train.describe()","b7159dd1":"contVars = [col for col in df_train.columns if col.startswith('cont')]\ncatVars = [col for col in df_train.columns if col.startswith('cat')]\n\nprint(\"contVars : \")\nprint(contVars)\n\nprint(\"------------------\\ncatVars : \")\nprint(catVars)","cacd1144":"plt.figure(figsize = (15,7))\ndf_train[contVars].boxplot()\nplt.show()","12c00b7b":"for col in catVars:\n    df_train[col].value_counts(normalize = True).plot(kind = \"barh\", figsize = (15,5), title = col)\n    plt.show()\n    ","5eaa80b3":"df_train[\"target\"].value_counts(normalize = True).plot(kind = \"bar\", figsize = (10,5), title = \"Class Imbalance\")","614a9ccb":"le = LabelEncoder()\n\nfor col in catVars:\n    le.fit(df_train[col].append(df_test[col]))\n    df_train[col] = le.transform(df_train[col])\n    df_test[col] = le.transform(df_test[col])","8042a066":"df_train.head()","4acb33cf":"X = df_train.drop([\"id\",\"target\"], axis = 1)\ny = df_train[\"target\"]","add94697":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7, test_size = 0.3, random_state = 42)","b59bf9eb":"scaler = MinMaxScaler()\n\ncols = X_train.columns\n\nX_train[cols] = scaler.fit_transform(X_train[cols])\n\nX_train.head()","504beb1f":"X_test[cols] = scaler.transform(X_test[cols])\nX_test.head()","55b90df8":"df_test[cols] = scaler.transform(df_test[cols])\ndf_test.head()","9740d5fe":"# GridSearchCV on local machine gave the below parameters\n\nrf = RandomForestClassifier(class_weight='balanced', criterion='entropy', max_depth=25, min_samples_leaf=75, n_estimators=150, random_state=42)\n\nrf.fit(X_train,y_train)","89ff4117":"# Checking ROC AUC Score for X_test \n\nmetrics.roc_auc_score(y_true = y_test, y_score = rf.predict(X_test) )","3a57504a":"pred_proba = rf.predict_proba(df_test.drop(\"id\", axis = 1))\n\nsubmission = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-mar-2021\/sample_submission.csv\")\nsubmission[\"target\"] = pred_proba[:,1]\nsubmission.head()","32ed30c7":"submission.to_csv(\"submission.csv\", index=False)","b706071d":"### Data Encoding","e9af73c7":"## EDA and Data Preparation","ef0b7a37":"## Reading and Inspecting Data","c434fcc3":"Fitting the same to the test dataset","d2d6669d":"### Predicting Test Dataset","1b754721":"### Feature Scaling","cd1fe4da":"## Create Model using Random Forest","f76ccfa5":"## Importing Libraries","3b1cfd88":"### Train-Test Split"}}