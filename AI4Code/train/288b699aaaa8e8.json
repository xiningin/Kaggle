{"cell_type":{"a601de88":"code","999d8148":"code","9a7bbcc4":"code","88148910":"code","b1a7a4ce":"code","c21a8b14":"code","02d40cf9":"code","da34258e":"code","e6c99790":"code","5e0f63f7":"code","242cccd1":"code","e710724f":"code","8e3451be":"code","c59cc4d6":"code","cd83f793":"code","26367720":"code","2b412047":"code","f9afc2d5":"code","1da91022":"code","26b8804a":"code","d48d0758":"code","2c1fd669":"code","5318faac":"code","fbad2ae5":"code","b79bcd5b":"markdown","e8cd5912":"markdown"},"source":{"a601de88":"# Hello This is my First Project on Kaggle,\n# Red Wine Quality Classification.","999d8148":"# import necessary libraries\nimport pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix,accuracy_score,precision_score,recall_score, f1_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split","9a7bbcc4":"df = pd.read_csv('..\/input\/winequalityred\/winequality-red.csv')\ndf.head(10)","88148910":"df.shape","b1a7a4ce":"df.info()","c21a8b14":"df.describe()","02d40cf9":"# Check null\ndf.isnull().sum()","da34258e":"# visualizing the whole dataset\ndf.hist(bins=20, figsize=(20,20))\nplt.show()","e6c99790":"# quality is target variable.\ndf['quality'].hist(color='maroon')\nplt.title('Quality of wine')\nplt.show()","5e0f63f7":"df['quality'].value_counts()","242cccd1":"# Heatmap for Correlation of Parameters\nplt.figure(figsize=(20,10))\nsns.heatmap(df.corr(), annot=True, linewidths=.5, fmt= '.1f')\nplt.show()","e710724f":"# quality vs alcohol bar plot\nplt.figure(figsize=(8,6))\nsns.barplot(x='quality', y='alcohol', data=df)","8e3451be":"# quality vs sulphate\nplt.figure(figsize=(8,6))\nsns.barplot(x='quality', y='sulphates', data=df)","c59cc4d6":"# quality vs volatile acidity\nplt.figure(figsize=(8,6))\nsns.barplot(x='quality', y='volatile acidity', data=df)","cd83f793":"# Preparation\n# If a wine has quality value over 5 its is a good wine and if value is below 5 its bad wine\n\ny = df['quality'] > 5\ny","26367720":"X = df[df.columns[:-1]]  # we dont need target variable in X train set , so from first to last second(-1)\nX","2b412047":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=0)\n\nX_train.shape","f9afc2d5":"X_test.shape","1da91022":"# Feature Scaling for classify better\n\nscaler = StandardScaler()\nX_train_scaled  = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","26b8804a":"# SVM\nfrom sklearn.svm import SVC\n\nclf = SVC(kernel='rbf')\nclf.fit(X_train_scaled, y_train)\nprint(\"SVC CLasifier Score on Test Set: \", clf.score(X_test_scaled, y_test))\n\ny_predict = clf.predict(X_test_scaled)\n\n# confusion matrix\ncm = confusion_matrix(y_test, y_predict)\nsns.heatmap(cm, annot=True, fmt='2.0f')","d48d0758":"random_clf = RandomForestClassifier(random_state=9)\nrandom_clf.fit(X_train_scaled, y_train)\n\nprint(\"Random Forest CLasifier Score on Test Set: \", random_clf.score(X_test_scaled, y_test) * 100)\ny_predict = random_clf.predict(X_test_scaled)\n\n# confusion matrix\ncm = confusion_matrix(y_test, y_predict)\nsns.heatmap(cm, annot=True, fmt='2.0f')","2c1fd669":"# Improving the model performance by parameter tuning for classify much better than previous score.\n\nfrom sklearn.model_selection import GridSearchCV\n\nparameters = {\n    \"n_estimators\" : [5,10,50,125,150],\n    \"max_depth\" : [2,4,8,16,32,None]\n}\n\ngrid_cv = GridSearchCV(random_clf, parameters, scoring= 'accuracy', cv=5)\ngrid_cv.fit(X_train_scaled, y_train)\n\nprint(\"Mean Accuracy for the Model: \", grid_cv.best_score_ * 100)\nprint(\"Best Parameters for the Model: \", grid_cv.best_params_)","5318faac":"random_clf2 = RandomForestClassifier(max_depth = 32, n_estimators=125, random_state=37)\nrandom_clf2.fit(X_train_scaled, y_train)\n\nprint(\"Random Forest CLasifier Score on Test Set: \", random_clf2.score(X_test_scaled, y_test) * 100)\ny_predict_test = random_clf.predict(X_test_scaled)\n\n# confusion matrix\ncm = confusion_matrix(y_test, y_predict)\nsns.heatmap(cm, annot=True, fmt='2.0f')","fbad2ae5":"# Thank You :)","b79bcd5b":"**As you can see sulphate and alcohol are positive correlative variables and most negative correlative variable is volatile acidity.**","e8cd5912":"**as we can see there are 76 errors which is bad for the model, for that we will use random forest to classifiy better**"}}