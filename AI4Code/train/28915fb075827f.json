{"cell_type":{"05328086":"code","ca847dae":"code","bb04d4cf":"code","14579dbb":"code","1bfa302f":"code","d4353813":"code","43fdf320":"code","7260fc0a":"code","ba4d1a81":"code","f3eb9d82":"code","4850252d":"code","5f54022e":"code","e3efeb78":"code","91efba77":"code","53ee63e9":"code","7f8fc721":"code","3bdb779b":"code","ec9f5e12":"code","c28697f4":"code","c7618bc6":"code","928f253d":"code","e7391d31":"markdown"},"source":{"05328086":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca847dae":"cancer_data=pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\ncancer_data.head()","bb04d4cf":"cancer_data.columns","14579dbb":"cancer_data.shape","1bfa302f":"cancer_data.isnull().sum()","d4353813":"cancer_data.drop(['Unnamed: 32','id'], axis=1,inplace=True)","43fdf320":"cancer_data.isnull().sum()","7260fc0a":"sns.countplot(cancer_data['diagnosis'])","ba4d1a81":"malignant_data = len(cancer_data[cancer_data['diagnosis']=='M'])\nbenign_data=len(cancer_data[cancer_data['diagnosis']=='B'])","f3eb9d82":"diagnosis_data = [malignant_data,benign_data]\nlabels = 'malignant','benign'\nplt.pie(diagnosis_data,labels=labels,autopct='%1.1f%%')\nplt.title('Diagnosis')\nplt.axis('equal')\nplt.show()","4850252d":"for i in range(len(cancer_data.columns[2:])):\n    fig = plt.figure(figsize=(10,6))\n    sns.distplot(cancer_data.loc[cancer_data['diagnosis'] == 'M'][str(cancer_data.columns[2:][i])],10)\n    sns.distplot(cancer_data.loc[cancer_data['diagnosis'] == 'B'][str(cancer_data.columns[2:][i])],10)\n    fig.legend(labels=['malignant','benign'])\n    plt.title(str(cancer_data.columns[2:][i]))\n    plt.figure(figsize=(10,6))","5f54022e":"sns.pairplot(cancer_data[[\"diagnosis\", \"radius_mean\", \"texture_mean\", \"perimeter_mean\", \"area_mean\"]],hue=\"diagnosis\")","e3efeb78":"sns.heatmap(cancer_data.corr())","91efba77":"X=cancer_data.drop('diagnosis', axis=1)\nY=cancer_data['diagnosis']","53ee63e9":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=100)","7f8fc721":"from sklearn.linear_model import LogisticRegression","3bdb779b":"model_log = LogisticRegression()\nmodel_log.fit(X_train,Y_train)","ec9f5e12":"pred_log=model_log.predict(X_test)\nlog_score =model_log.score(X_train,Y_train)\nlog_pred_score =round(log_score*100,2)\nlog_pred_score","c28697f4":"from sklearn.tree import DecisionTreeClassifier","c7618bc6":"model_decision=DecisionTreeClassifier()\nmodel_decision.fit(X_train,Y_train)","928f253d":"pred_decision=model_decision.predict(X_test)\ndecision_score =model_decision.score(X_train,Y_train)\ndecision_pred_score =round(decision_score*100,2)\ndecision_pred_score","e7391d31":"### % of diagnosis"}}