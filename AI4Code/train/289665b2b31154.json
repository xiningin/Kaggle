{"cell_type":{"19c5f6c7":"code","9ae67b8e":"code","7e896c96":"code","f0e9a00c":"code","b3601d05":"code","2bb293b8":"code","1f3d205c":"code","cd06a4c8":"code","9831227d":"code","82e85713":"code","c05c872f":"code","2748e435":"code","5c13e420":"code","4bea4e59":"code","720a9aa3":"code","3b981daa":"code","9a9ced9c":"code","c754d9b3":"code","e4764f69":"markdown","7faa6816":"markdown","0f67dd31":"markdown"},"source":{"19c5f6c7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","9ae67b8e":"df_train = pd.read_csv(\"..\/input\/loan-default-prediction\/train_v2.csv.zip\")\ndf_test = pd.read_csv(\"..\/input\/loan-default-prediction\/test_v2.csv.zip\")","7e896c96":"df_train.shape","f0e9a00c":"df_train.info()","b3601d05":"df_train.keys()","2bb293b8":"df_train.isnull().sum()","1f3d205c":"df_train.dropna(inplace=True)\ndf_test.dropna(inplace=True)","cd06a4c8":"df_train.isnull().sum()","9831227d":"df_train.shape","82e85713":"for i in df_train.select_dtypes(include=['object']).columns:\n    df_train.drop(labels=i, axis=1, inplace=True)\nfor i in df_test.select_dtypes(include=['object']).columns:\n    df_test.drop(labels=i, axis=1, inplace=True)","c05c872f":"df_train.shape","2748e435":"X = df_train.iloc[:,1:751]\ny = df_train.iloc[:,751]","5c13e420":"from sklearn.model_selection import train_test_split","4bea4e59":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","720a9aa3":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=50)\nmodel.fit(X_train, y_train)","3b981daa":"model.score(X_test, y_test)","9a9ced9c":"from sklearn.metrics import mean_squared_error","c754d9b3":"mse = mean_squared_error(y_test, model.predict(X_test))\nprint(\"The mean squared error (MSE) on test set: {:.4f}\".format(mse))","e4764f69":"## Random Forest Algorithm","7faa6816":"## Split data to training set and testing set","0f67dd31":"## Cleaning the data"}}