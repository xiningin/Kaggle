{"cell_type":{"bcea1e0e":"code","af4ed156":"code","44f7c9ed":"code","a26ab1b4":"code","328b3cab":"code","76e8cae7":"markdown","7e624507":"markdown","bc72998f":"markdown","ce2bc466":"markdown","85059fad":"markdown"},"source":{"bcea1e0e":"inputs = [1, 2, 3, 2.5]\n\nweights = [[0.2, 0.8, -0.5, 1.0],\n          [0.5, -0.91, 0.26, -0.5],\n          [-0.26, -0.27, 0.17, 0.87]]\n\nbiases = [2, 3, 0.5]\n\n\n\nlayer_outputs = [] # Output of current layer\nfor neuron_weights, neuron_bias in zip(weights, biases):\n    neuron_output = 0 # Output of given neuron\n    for n_input, weight in zip(inputs, neuron_weights):\n        neuron_output += n_input*weight\n    neuron_output += neuron_bias\n    layer_outputs.append(neuron_output)\n    \nprint(layer_outputs)","af4ed156":"import numpy as np\n\ninputs = [1, 2, 3, 2.5]\nweights = [0.2, 0.8, -0.5, 1.0]\nbias = 2\n\noutput = np.dot(weights, inputs) + bias\nprint(output)","44f7c9ed":"import numpy as np\n\ninputs = [1, 2, 3, 2.5]\n\nweights = [[0.2, 0.8, -0.5, 1.0],\n          [0.5, -0.91, 0.26, -0.5],\n          [-0.26, -0.27, 0.17, 0.87]]\n\nbiases = [2, 3, 0.5]\n\n\n\noutput = np.dot(weights, inputs) + biases\nprint(output)","a26ab1b4":"import numpy as np\n\ninputs = [[1, 2, 3, 2.5],\n         [2.0, 5.0, -1.0, 2.0],\n         [-1.5, 2.7, 3.3, -0.8]]\n\nweights = [[0.2, 0.8, -0.5, 1.0],\n          [0.5, -0.91, 0.26, -0.5],\n          [-0.26, -0.27, 0.17, 0.87]]\n\nbiases = [2, 3, 0.5]\n\n\n\noutput = np.dot(inputs, np.array(weights).T) + biases\nprint(output)","328b3cab":"import numpy as np\n\ninputs = [[1, 2, 3, 2.5],\n         [2.0, 5.0, -1.0, 2.0],\n         [-1.5, 2.7, 3.3, -0.8]]\n\nweights = [[0.2, 0.8, -0.5, 1.0],\n          [0.5, -0.91, 0.26, -0.5],\n          [-0.26, -0.27, 0.17, 0.87]]\n\nbiases = [2, 3, 0.5]\n\nweights2 = [[0.1, -0.14, 0.5],\n          [-0.5, 0.12, -0.33],\n          [-0.44, 0.73, -0.13]]\n\nbiases2 = [-1, 2, -0.5]\n\n\nlayer1_outputs = np.dot(inputs, np.array(weights).T) + biases\n\nlayer2_outputs = np.dot(layer1_outputs, np.array(weights2).T) + biases2\n\nprint(layer2_outputs)","76e8cae7":"# Neural Network Using Numpy\n***Neural Network Using Numpy\n     With Multiple Input**\n     \nAs the input and weights both are now matrix that's why we have transpose the weights\nwhich means all rows will become columns.","7e624507":"# Neural Network Using Numpy\n***Neural Network Using Numpy\n     With Single Input**","bc72998f":"# Most Basic Neural Network only with 6 lines\n**It is the most basic neural network using Numpy**\n\nIn this example we can put the weights and inputs as we need, The weights can also be written first and Inputs also","ce2bc466":"# Neural Network with multiple layer\n**In the multiple layers of neural network the first layer will bwcame the input for the second layer.**","85059fad":"# Basic Neural Network\n**It is a basic neural network without using any module or libraries only with python and math.**"}}