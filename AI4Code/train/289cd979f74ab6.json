{"cell_type":{"058703ec":"code","1f2c3c26":"code","7c7aadb8":"code","92f205d1":"code","5d1a7b8b":"code","9f78f82b":"code","cc4b2ec3":"code","e2ebeb0f":"code","b9c8abd5":"code","ec72f302":"code","871df534":"code","da380987":"code","7df0edb0":"code","99874300":"code","eea858ee":"code","653b8674":"code","fd15dd7b":"code","daf25bcf":"code","9450ef91":"code","4d26ffbb":"code","cbc8d907":"code","755acef2":"code","f65ad6d9":"code","cf31430c":"code","000f8b22":"code","c454f706":"code","23f61d94":"code","527dd7cd":"code","9b1671eb":"code","4f928b78":"code","2c30102b":"code","a0356d7c":"code","95ef8604":"code","9a24f0b9":"code","fc2fa7b7":"code","cf36d6e6":"code","269f231c":"markdown","492ca801":"markdown","44f0c4fd":"markdown","775d4ad6":"markdown","c43ac890":"markdown","912f3b72":"markdown","3fb917b7":"markdown","44094c65":"markdown","cc976028":"markdown","aede8b9a":"markdown","2f3a5fa3":"markdown","fee8bf01":"markdown","c92ecfce":"markdown","d0a3055a":"markdown","21745c6b":"markdown","8f70f319":"markdown","45fe4584":"markdown","ab31fb12":"markdown","16c2f995":"markdown","58bafd3f":"markdown","2bda9598":"markdown","2dbabe93":"markdown","c510a93b":"markdown","a9bc1fcc":"markdown","353b1165":"markdown","d0feccba":"markdown","f5a974d3":"markdown","fe21a44e":"markdown","bf704892":"markdown"},"source":{"058703ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f2c3c26":"train_data = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/train.csv\")\ntrain_data.head(10)","7c7aadb8":"test_data = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/test.csv\")\ntest_data.head(10)","92f205d1":"train_data.info()","5d1a7b8b":"test_data.info()","9f78f82b":"train_data.describe().T","cc4b2ec3":"test_data.describe().T","e2ebeb0f":"train_data.isnull().sum()\n","b9c8abd5":"test_data.isnull().sum()","ec72f302":"import plotly.express as px\n\ndef detect_oulier(data,col):\n    fig = px.box(data, y=col,color_discrete_sequence=['seagreen'])\n    fig.show()","871df534":"\ndetect_oulier(train_data,train_data.columns)","da380987":"detect_oulier(test_data,test_data.columns)","7df0edb0":"train_data.columns\n","99874300":"X = train_data[['battery_power', 'blue', 'clock_speed', 'dual_sim', 'fc', 'four_g',\n       'int_memory', 'm_dep', 'mobile_wt', 'n_cores', 'pc', 'px_height',\n       'px_width', 'ram', 'sc_h', 'sc_w', 'talk_time', 'three_g',\n       'touch_screen', 'wifi', 'price_range']]\ny = X.pop( 'price_range')\n\nmodel = RandomForestClassifier()\nmodel.fit(X, y)\n\n","eea858ee":"import plotly.express as px\n\ndf = pd.Series(model.feature_importances_, index=X.columns)\ndf.nlargest(20)\n","653b8674":"fig = px.bar(df,color=X.columns,title=\"Feature Importance\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","fd15dd7b":"fig = px.imshow(train_data,title = \"HeatMap Feature Importance\")\nfig.show()","daf25bcf":"fig = px.histogram(train_data, x=\"price_range\", y=\"ram\", color=\"price_range\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","9450ef91":"fig = px.violin(train_data, x=\"price_range\", y=\"battery_power\", color=\"price_range\")\nfig.show()","4d26ffbb":"fig = px.scatter(train_data, x=\"px_width\", y=\"px_height\",color=\"price_range\")\nfig.show()","cbc8d907":"fig =   px.pie(train_data,names='price_range',title=\"Price Range Distribution\",color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","755acef2":"\nfig =   px.histogram(train_data,x='touch_screen',color='touch_screen',title=\"Touch Screen Distribution\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","f65ad6d9":"fig =   px.pie(train_data,names='three_g',title=\"3G Distribution\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","cf31430c":"fig =   px.pie(train_data,names='four_g',title=\"4G Distribution\",color_discrete_sequence=px.colors.qualitative.Alphabet)\nfig.show()","000f8b22":"fig = px.histogram(train_data, x=\"n_cores\", color=\"n_cores\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","c454f706":"fig = px.scatter(train_data, x=\"sc_w\", y=\"sc_h\",color=\"price_range\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","23f61d94":"fig = px.scatter(train_data, x=\"int_memory\", y=\"ram\",color=\"price_range\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","527dd7cd":"fig = px.density_contour(train_data, x=\"price_range\", y=\"clock_speed\", color=\"price_range\",color_discrete_sequence=px.colors.qualitative.Alphabet)\nfig.show()","9b1671eb":"X = train_data.drop('price_range',axis=1)\ny = train_data['price_range']","4f928b78":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state = 0)\n","2c30102b":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","a0356d7c":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\n\nknn= KNeighborsClassifier(n_neighbors=10)\ndt= DecisionTreeClassifier(max_depth=10,random_state=0)\nsvc = SVC()\nlr= LogisticRegression()","95ef8604":"models = [knn,dt,svc,lr]\nscores = []\n\nfor model in models:\n    model.fit(X_train,y_train)\n    score = model.score(X_test,y_test)\n    scores.append(score)\n    print(\"The score for \" + str(model)+\" : \" + str(score))","9a24f0b9":"classifiers = [\"KNN\",\"DT\",\"SVC\",\"LR\"]\nfig = px.bar(scores,color=classifiers,title=\"Model Evaluation\",color_discrete_sequence=px.colors.qualitative.Antique)\nfig.show()","fc2fa7b7":"from yellowbrick.classifier import ConfusionMatrix\n\nfor model in models:\n    cm = ConfusionMatrix(\n    model, classes=[0,1,2,3])\n    cm.fit(X_train, y_train)\n    cm.score(X_test, y_test)\n    cm.poof()\n    ","cf36d6e6":"from sklearn.metrics import classification_report\n\nfor model in models:\n    print(\"Classification Report of \"+ str(model))\n    print(\"\\n\")\n    print(classification_report(model.predict(X_test), y_test))\n    print(\"\\n\")\n","269f231c":"<p style=\"color:red;font-family:Monospace;\"> From the above graph we can conclude that Logistic  Regression has highest score i.e. 0.962 . <\/p>\n","492ca801":"<h3 style=\"color:blue;font-family:Monospace;\"> Cores Distribution ? <\/h3>","44f0c4fd":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\"> Feature Importance <\/h2>","775d4ad6":">  <h2 style=\"text-align:center;color:green;font-family:Monospace;\"> Summarizing the dataset <\/h2>","c43ac890":"<p style=\"color:red;font-family:Monospace;\"> From the above graph we can conclude that count of touch screen phones = 1006 and non touch phones = 994 <\/p>","912f3b72":"<p style=\"color:red;font-family:Monospace;\"> From the above graphs we can conclude that there are equal number of mobile_phones in each price range. <\/p>","3fb917b7":"<p style=\"color:red;font-family:Monospace;\">From the above histogram graphs we can conclude that with increase in ram size price is increasing.<br>\n<ul style=\"color:red;font-family:Monospace;\">\n    <li>price_range = 0 upto o.4M RAM size<\/li>\n    <li>price_range = 1 upto o.8M RAM size<\/li>\n    <li>price_range = 2 upto 1.2M RAM size<\/li>\n    <li>price_range = 3 upto 1.7M RAM size<\/li>\n<\/ul>\n<\/p>\n","44094c65":"<p style=\"color:red;font-family:Monospace;\"> From the above graphs we can conclude that price range is highly related with ram size. <\/p>","cc976028":"<h3 style=\"color:blue;font-family:Monospace;\"> How Price_Range Dependent on Clock Speed? <\/h3>","aede8b9a":"<h3 style=\"color:blue;font-family:Monospace;\"> How Price_Range Varies with Pixel Width and Pixel Height ? <\/h3>","2f3a5fa3":"<p style=\"color:red;font-family:Monospace;\"> From the above boxplots we can conclude that data is clean and having no outlier. <\/p>","fee8bf01":"<h3 style=\"color:blue;font-family:Monospace;\"> Count of TouchScreen Mobile Phones <\/h3>","c92ecfce":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Classification Report  <\/h2>","d0a3055a":"<h3 style=\"color:blue;font-family:Monospace;\"> How Price_Range Varies with RAM size ? <\/h3>","21745c6b":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\"> Loading Datasets <\/h2>","8f70f319":"<h3 style=\"color:blue;font-family:Monospace;\"> How Price_Range Dependent on RAM  and Internal Memory? <\/h3>","45fe4584":"<h3 style=\"color:blue;font-family:Monospace;\"> How Price_Range Varies with Battery Power ? <\/h3>","ab31fb12":"<h3 style=\"color:blue;font-family:Monospace;\"> 4G Enable Phones Distribution ? <\/h3>","16c2f995":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\"> Model Selection <\/h2>","58bafd3f":"<p style=\"color:red;font-family:Monospace;\"> From the above graph we can conclude that 76.1% phones are 3G enabled. <\/p>\n","2bda9598":"\n<img src= \"https:\/\/www.netstar.co.uk\/wp-content\/uploads\/2018\/11\/Top-10-IT-SUPPORT-ISSUES-3.png\" width=\"1000\" height=\"50\"><\/img>","2dbabe93":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Confusion Matrix  <\/h2>","c510a93b":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\"> Exploratory Data Analysis <\/h2>","a9bc1fcc":"<h3 style=\"color:blue;font-family:Monospace;\"> Price Range Distribution <\/h3>","353b1165":"<h3 style=\"color:blue;font-family:Monospace;\"> How Price_Range Dependent on Screen Width and Height? <\/h3>","d0feccba":"<h3 style=\"color:blue;font-family:Monospace;\"> 3G Enable Phones Distribution ? <\/h3>","f5a974d3":"<p style=\"color:red;font-family:Monospace;\"> From the above graph we can conclude that 52.1% phones are 4G enabled. <\/p>\n","fe21a44e":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\"> Outlier Detection <\/h2>","bf704892":"<h2 style=\"color:green;font-family:Monospace;\">Context<\/h2>\n\n<p style=\"color:blue;font-family:Monospace;\" >Bob has started his own mobile company. He wants to give tough fight to big companies like Apple,Samsung etc.<\/p>\n\n<p style=\"color:blue;font-family:Monospace;\" >He does not know how to estimate price of mobiles his company creates. In this competitive mobile phone market you cannot simply assume things. To solve this problem he collects sales data of mobile phones of various companies.<\/p>\n\n<p style=\"color:blue;font-family:Monospace;\" >Bob wants to find out some relation between features of a mobile phone(eg:- RAM,Internal Memory etc) and its selling price. But he is not so good at Machine Learning. So he needs your help to solve this problem.<\/p>\n\n<p style=\"color:blue;font-family:Monospace;\" >In this problem you do not have to predict actual price but a price range indicating how high the price is.<\/p>"}}