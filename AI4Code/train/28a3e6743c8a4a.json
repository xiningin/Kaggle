{"cell_type":{"1ce88435":"code","ffcbb58c":"code","ece67629":"code","841a59e0":"code","47f44b7f":"code","b243bc3b":"code","74224013":"code","4345915c":"code","c840589d":"code","fa7e3185":"code","05b912a0":"code","51ec47b3":"code","3a3f833e":"code","d88d47fc":"code","09f55d83":"code","ffa51000":"code","2a2de3b5":"code","a5a54fb9":"markdown","2aa74a62":"markdown","4654baa2":"markdown","c6dfeaab":"markdown"},"source":{"1ce88435":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# \n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ffcbb58c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\nimport matplotlib.pyplot as plt","ece67629":"g = pd.read_csv('\/kaggle\/input\/board-game-data\/bgg_db_2017_04.csv')\ng.head()","841a59e0":"# get all the list of columns\ng.columns.tolist()","47f44b7f":"# this is our target value we are checking its distribution \nplt.hist(g[\"avg_rating\"])","b243bc3b":"#  to check all the null values in the data\ng.isnull().sum()","74224013":"g.info()","4345915c":"#  save all the lst in the data\ncol = g.columns.tolist()","c840589d":"# filtering  out the features which are not important and can overfit the data\ncol= [ c for c in col if c not in ['bgg_url', \"avgrating\",'game_id','weight','image_url','category','mechanic','designer','names']]","fa7e3185":"target= 'avg_rating' ","05b912a0":"# g = g.dropna(axis=0)","51ec47b3":"\ntrain= g.sample(frac=0.8,random_state=1)\ntest= g.loc[~g.index.isin(train.index)]","3a3f833e":"print(train.shape)\nprint(test.shape)","d88d47fc":"g.shape","09f55d83":"train[col]","ffa51000":"from sklearn.linear_model import LinearRegression\n#lr\nmodel = LinearRegression()\nmodel.fit(train[col],train[target])\nfrom sklearn.metrics import mean_absolute_error\npredictions= model.predict(test[col])\nprint(mean_absolute_error(predictions,test[target]))","2a2de3b5":"\n#  the mean error is near 6 in this model \n# i will create different models in next update and show the comparison","a5a54fb9":"# Defining train and test data for model creation","2aa74a62":"# creating a model(linear regressor) ","4654baa2":"# All the feedbacks are requested. thank you for scrolling here ","c6dfeaab":"# importing the libraries and loading the data(2017) "}}