{"cell_type":{"37c83839":"code","1f4518fa":"code","171d0f45":"code","66cf94ad":"code","988c6ee3":"code","bc1b7357":"code","ec1bacf2":"code","d534d65c":"code","d5fc2af4":"code","2916d12a":"code","97219a91":"markdown","45e37bb2":"markdown","b7afd06e":"markdown","5f86bd56":"markdown","4cd180a6":"markdown","6c5deded":"markdown","6684cc25":"markdown"},"source":{"37c83839":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1f4518fa":"# \u94f6\u884c\u5361\u5237\u5361\u4ea4\u6613\u6570\u636e\u51c6\u5907\uff0c\u5e38\u7528 python package\nimport numpy as np # \u6570\u503c\u8ba1\u7b97\nimport pandas as pd # \u6570\u636e\u96c6\u5904\u7406\u5de5\u5177\nimport seaborn as sns # \u53ef\u89c6\u5316\nimport matplotlib.pyplot as plt # \u753b\u56fe\u5de5\u5177\nimport matplotlib.gridspec as gridspec \n\n# \u4f7f\u5f97\u56fe\u7247\u53ef\u4ee5\u5728 jupyter notebook \u4e2d\u5448\u73b0\n%matplotlib inline","171d0f45":"# Load data\ndf_credit = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")","66cf94ad":"# \u67e5\u770b\u524d5\u884c\u6570\u636e\ndf_credit.head()","988c6ee3":"# \u67e5\u770b\u6570\u636e\u7c7b\u578b\u548c\u662f\u5426\u6709\u7a7a\u503c\uff0c\u53d1\u73b0\u6570\u636e\u96c6\u670928\u4e2a\u53d8\u91cf\uff0c\u800c\u4e14\u6ca1\u6709\u7a7a\u503c\u3002\ndf_credit.info()","bc1b7357":"# \u67e5\u770b\u6b63\u5e380\u548c\u76d7\u52371\u5206\u7c7b\u7edf\u8ba1\u4e2a\u6570\uff1a\nprint(\"\u7edf\u8ba1\u5206\u5e03\uff1a\u6b63\u5e380 vs \u76d7\u52371:\")\nprint(df_credit['Class'].value_counts())","ec1bacf2":"plt.figure(figsize=(7,5))\nsns.countplot(df_credit['Class'])\nplt.title('Distribution', fontsize=18)\nplt.ylabel(\" # of transaction\", fontsize=15)\nplt.show()","d534d65c":"# \u67e5\u770b\u76d7\u5237\u548c\u6b63\u5e38\u4ea4\u6613\u4e4b\u95f4\u7684\u4ea4\u6613\u91d1\u989d\u7edf\u8ba1\u7ed3\u679c\ndf_fraud = df_credit[df_credit['Class'] == 1]\ndf_normal = df_credit[df_credit['Class'] == 0]\n\nprint('\u76d7\u5237\u91d1\u989d\u7edf\u8ba1')\nprint(df_fraud[\"Amount\"].describe())\nprint('\u6b63\u5e38\u4ea4\u6613\u91d1\u989d\u7edf\u8ba1')\nprint(df_normal[\"Amount\"].describe())","d5fc2af4":"columns = df_credit.iloc[:1:29].columns # \u5220\u9664\u5df2\u63a2\u7d22\u8fc7\u7684\u53d8\u91cf\n\nfrauds = df_credit.Class == 1\nnormals = df_credit.Class == 0\n\ngrid = gridspec.GridSpec(14,2)\nplt.figure(figsize=(15,20*4))\n\nfor n, col in enumerate(df_credit[columns]):\n    ax = plt.subplot(grid[n])\n    sns.distplot(df_credit[col][frauds], bins=50, color='g') # \u7eff\u8272\u63cf\u7ed8\u76d7\u5237\u6837\u672c\u5206\u5e03\n    sns.distplot(df_credit[col][normals], bins=50, color='r') # \u7ea2\u8272\u63cf\u7ed8\u6b63\u5e38\u6837\u672c\u5206\u5e03\n    ax.set_ylabel('Density')\n    ax.set_title(str(col))\n    ax.set_xlabel('')\nplt.show()","2916d12a":"timedelta = pd.to_timedelta(df_credit['Time'], unit='s')\ndf_credit['Time_min']  = (timedelta.dt.components.minutes).astype(int)\ndf_credit['Time_hour'] = (timedelta.dt.components.hours).astype(int)\n\n# \u4ece\u5c0f\u65f6\u4e0a\u770b\uff0c\u5bfb\u627einsight\nplt.figure(figsize=(12,5))\nsns.distplot(df_credit[df_credit['Class'] ==0][\"Time_hour\"],color='g')\nsns.distplot(df_credit[df_credit['Class'] ==1][\"Time_hour\"],color='r')\n\nplt.title('Fraud X Normal Transactions by Hours', fontsize=17)\nplt.xlim([-1,25])\nplt.show()","97219a91":"## \u4ece\u4e0a\u9762\u5206\u5e03\u4e2d\u53ef\u4ee5\u770b\u51fa\u76d7\u5237\u7684\u5361\u572825%\u523075%\u5206\u4f4d\u70b9\u7684\u5206\u5e03\u5176\u5b9e\u6bd4\u8f83\u5bbd\uff0c\u800c\u6b63\u5e38\u4ea4\u6613\u6709\u5f88\u5f3a\u7684\u957f\u5c3e\u6548\u5e94\uff0c\u4e0b\u9762\u8fdb\u884c\u53ef\u89c6\u5316\u5c55\u793a","45e37bb2":"## \u4ece\u6b63\u5e38\u548c\u76d7\u5237\u7edf\u8ba1\u5206\u5e03\u6765\u8fdb\u884c\u63a2\u7d22","b7afd06e":"## \u7528\u63cf\u7ed8\u5206\u5e03\u65b9\u6cd5\u5728\u5176\u4ed6\u53d8\u91cf\u4e0a\u8fdb\u884c\u6279\u91cf\u7684\u63a2\u7d22","5f86bd56":"# \u6570\u636e\u51c6\u5907\uff0c\u5229\u7528 BI \u65b9\u5f0f\uff08\u53ef\u89c6\u5316\u6316\u6398\uff0c\u7edf\u8ba1\u65b9\u6cd5\uff09\u8fdb\u884c\u6570\u636e\u6316\u6398\n\u8fd0\u7528\u516c\u5171\u7814\u7a76\u6570\u636e\u5e93\u6570\u636e\uff1a\u5305\u542b2013\u5e749\u6708\u6b27\u6d32\u884c\u7528\u5361\u6301\u5361\u8005\u4e24\u5929\u5185\u7684\u4ea4\u6613\u6570\u636e\uff0c\u6848\u4f8b\u6570\u636e\u5e93\u4e2d\u6709284807\u6b21\u4ea4\u6613\uff0c492\u6b21\u76d7\u5237\u3002\n","4cd180a6":"## \u4ece\u4ea4\u6613\u65f6\u95f4\u6765\u8fdb\u884c\u63a2\u7d22","6c5deded":"## \u53ef\u4ee5\u770b\u51fa\u4e24\u7c7b\u6837\u672c\u5728\u5f88\u591a\u53d8\u91cf v4 v9 v16 \u7b49\u4e0a\u6709\u8f83\u5927\u5dee\u5f02\uff0c\u4ece\u800c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6a21\u578b\u5efa\u7acb\u627e\u5230\u76d7\u5237\u4e8b\u4ef6\u3002","6684cc25":"## \u4ece\u4ea4\u6613\u91d1\u989d\u6765\u8fdb\u884c\u63a2\u7d22"}}