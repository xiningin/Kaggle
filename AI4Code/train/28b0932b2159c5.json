{"cell_type":{"04be866f":"code","549bdbf5":"code","b6cef29b":"code","fb8da30c":"code","736db0cd":"code","e77f005a":"code","5354099e":"code","11e75075":"code","913342fe":"code","3b0f56ba":"code","8c0b2256":"code","b8a3b207":"code","4bbc0586":"code","004df942":"code","00d33833":"code","a781c3b1":"code","1c4dc478":"code","6dfa30c3":"code","bf385885":"code","f2f644f3":"code","3d71cc0a":"code","136293c6":"code","21de255b":"code","cd2ac8f1":"code","54ad3480":"code","08e38da0":"code","b05ad1c0":"code","635b9160":"code","8f29b662":"code","7d0f1823":"code","e0a2b950":"code","53fbf34c":"code","7e2bd995":"code","334386a0":"code","8f8611a9":"code","d1132ad7":"code","02dc0e25":"code","9953bc39":"code","df6530c4":"code","ccdd420d":"code","c07804b1":"code","8a24b347":"code","2ca60fb6":"code","c97b3a67":"code","55d695ef":"code","a0804ebc":"code","7a55cbeb":"code","ea0013c8":"code","5da53fc5":"code","6ad0e7aa":"code","23c26d84":"code","d4b4ed63":"code","0b8a388c":"code","f3eb071e":"code","8c56acf8":"code","6dbd0c8e":"code","cd18fa8d":"code","366b63eb":"code","92ebda1a":"code","193a7d27":"code","80bc53d6":"code","c65ebee7":"code","2617a3d4":"code","a39f52be":"code","3b3a5206":"code","ba2c0e76":"code","d7129c94":"code","4e7bec37":"code","6fdcdc07":"code","daea5d3c":"code","1bd1d77b":"code","9c24216d":"code","79f4b8ab":"code","5bd4370b":"code","98b2ad93":"code","69fc182e":"code","bf6452e5":"code","7de350a3":"code","ad40eff1":"code","db2a8835":"code","8f3bdc49":"code","82a1afd0":"code","50b2a881":"code","b96fd1db":"code","f3e1b636":"code","3e5f4526":"code","de3fb78f":"code","d5a2249e":"code","e851b391":"code","afb07dca":"code","3eb3539b":"code","d1cd9115":"code","b921ea5a":"code","8a66a679":"markdown","2e95e484":"markdown","98c41695":"markdown","bc8045bc":"markdown","d55f6599":"markdown","65b271bb":"markdown","cd461008":"markdown","f31ccf1a":"markdown","db7d76d7":"markdown","a5e18ddc":"markdown","36aad1bc":"markdown","eb8b81a9":"markdown","9babbd18":"markdown","73b72cf8":"markdown","87af612f":"markdown","4a8a8cbc":"markdown","5a1146fa":"markdown","9af52fbb":"markdown"},"source":{"04be866f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","549bdbf5":"url = '..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv'\ndf = pd.read_csv(url)","b6cef29b":"df.head(10)","fb8da30c":"df.tail(10)","736db0cd":"df.shape","e77f005a":"df.columns","5354099e":"df.info()","11e75075":"# Missing values\ndf.isnull().sum()","913342fe":"# Duplicated values\ndf.duplicated().sum()","3b0f56ba":"# Outliers values\nplt.figure(figsize=(20, 15))\nplt.boxplot(df, labels=df.columns)\nplt.show()","8c0b2256":"df.creatinine_phosphokinase.describe()","b8a3b207":"# plt.figure(figsize=(20, 15))\nplt.boxplot(df['creatinine_phosphokinase'], labels=['Creatinine Phosphokinase'])\nplt.title('Outliers values')","4bbc0586":"# Removing outliers\nq1 = df['creatinine_phosphokinase'].quantile(0.25)\nq3 = df['creatinine_phosphokinase'].quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'creatinine_phosphokinase'] > toprange:\n        df.loc[i, 'creatinine_phosphokinase'] = toprange\n    if df.loc[i, 'creatinine_phosphokinase'] < botrange:\n        df.loc[i, 'creatinine_phosphokinase'] = botrange","004df942":"# Creatinine phosphokinase column after cleaning\n# plt.figure(figsize=(20, 15))\nplt.boxplot(df['creatinine_phosphokinase'], labels=['Creatinine Phosphokinase'])\nplt.title('Cleaning values')","00d33833":"df.ejection_fraction.describe()","a781c3b1":"# plt.figure(figsize=(20, 15))\nplt.boxplot(df['ejection_fraction'], labels=['Ejection fraction'])\nplt.title('Outliers values')","1c4dc478":"# Removing outliers\nq1 = df['ejection_fraction'].quantile(0.25)\nq3 = df['ejection_fraction'].quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'ejection_fraction'] > toprange:\n        df.loc[i, 'ejection_fraction'] = toprange\n    if df.loc[i, 'ejection_fraction'] < botrange:\n        df.loc[i, 'ejection_fraction'] = botrange","6dfa30c3":"# Ejection fraction column after cleaning\n# plt.figure(figsize=(20, 15))\nplt.boxplot(df['ejection_fraction'], labels=['Ejection fraction'])\nplt.title('Cleaning values')","bf385885":"df.platelets.describe()","f2f644f3":"# plt.figure(figsize=(20, 15))\nplt.boxplot(df['platelets'], labels=['Platelets'])\nplt.title('Outliers values')","3d71cc0a":"# Removing outliers\nq1 = df.platelets.quantile(0.25)\nq3 = df.platelets.quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'platelets'] > toprange:\n        df.loc[i, 'platelets'] = toprange\n    if df.loc[i, 'platelets'] < botrange:\n        df.loc[i, 'platelets'] = botrange","136293c6":"# Platelets column after cleaning\n# plt.figure(figsize=(20, 15))\nplt.boxplot(df['platelets'], labels=['Platelets'])\nplt.title('Cleaning values')","21de255b":"df.serum_creatinine.describe()","cd2ac8f1":"# plt.figure(figsize=(20, 15))\nplt.boxplot(df['serum_creatinine'], labels=['Serum creatinine'])\nplt.title('Outliers values')","54ad3480":"# Removing outliers\nq1 = df.serum_creatinine.quantile(0.25)\nq3 = df.serum_creatinine.quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'serum_creatinine'] > toprange:\n        df.loc[i, 'serum_creatinine'] = toprange\n    if df.loc[i, 'serum_creatinine'] < botrange:\n        df.loc[i, 'serum_creatinine'] = botrange","08e38da0":"# Platelets column after cleaning\n# plt.figure(figsize=(20, 15))\nplt.boxplot(df['serum_creatinine'], labels=['Serum creatinine'])\nplt.title('Cleaning values')","b05ad1c0":"df.serum_sodium.describe()","635b9160":"# plt.figure(figsize=(20, 15))\nplt.boxplot(df['serum_sodium'], labels=['Serum sodium'])\nplt.title('Outliers values')","8f29b662":"# Removing outliers\nq1 = df.serum_sodium.quantile(0.25)\nq3 = df.serum_sodium.quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'serum_sodium'] > toprange:\n        df.loc[i, 'serum_sodium'] = toprange\n    if df.loc[i, 'serum_sodium'] < botrange:\n        df.loc[i, 'serum_sodium'] = botrange","7d0f1823":"# Serum sodium column after cleaning\n# plt.figure(figsize=(20, 15))\nplt.boxplot(df['serum_sodium'], labels=['Serum sodium'])\nplt.title('Cleaning values')","e0a2b950":"plt.figure(figsize=(20, 15))\nplt.boxplot(df, labels=df.columns)\nplt.show()","53fbf34c":"df.drop('time', axis=1, inplace=True)","7e2bd995":"df.head(10)","334386a0":"df.tail(10)","8f8611a9":"df.info()","d1132ad7":"df.loc[:, ['creatinine_phosphokinase', 'ejection_fraction', 'platelets', 'serum_creatinine', 'serum_sodium']].describe()","02dc0e25":"df.anaemia.value_counts()","9953bc39":"# Ages with anaemia cases\ndf.groupby('anaemia')['age'].describe()","df6530c4":"# Some of ages in each anaemia case\ndf.groupby('anaemia')['age'].unique()","ccdd420d":"plt.figure(figsize=(10, 7))\nplt.hist(df.anaemia, histtype='bar')\nplt.title('Anaemic Patients')\nplt.show()","c07804b1":"df.diabetes.value_counts()","8a24b347":"# Ages with diabetes cases\ndf.groupby('diabetes')['age'].describe()","2ca60fb6":"# Some of ages in each diabetes case\ndf.groupby('diabetes')['age'].unique()","c97b3a67":"# Patients of diabetes and anaemia cases\ndf.groupby('diabetes')['anaemia'].value_counts()","55d695ef":"plt.figure(figsize=(10, 7))\nplt.hist(df.diabetes, histtype='bar')\nplt.title('Diabetic Patients')\nplt.show()","a0804ebc":"df.high_blood_pressure.value_counts()","7a55cbeb":"# Ages with hypertension cases\ndf.groupby('high_blood_pressure')['age'].describe()","ea0013c8":"# Some of ages in each hypertension case\ndf.groupby('high_blood_pressure')['age'].unique()","5da53fc5":"# Patients of hypertension and anaemia cases\ndf.groupby('high_blood_pressure')['anaemia'].value_counts()","6ad0e7aa":"# Patients of hypertension and diabetes cases\ndf.groupby('high_blood_pressure')['diabetes'].value_counts()","23c26d84":"plt.figure(figsize=(10, 7))\nplt.hist(df.high_blood_pressure, histtype='bar')\nplt.title('Blood Pressure Patients')\nplt.show()","d4b4ed63":"df.sex.value_counts()","0b8a388c":"# Ages in each gender\ndf.groupby('sex')['age'].describe()","f3eb071e":"# Some of ages in each gender\ndf.groupby('sex')['age'].unique()","8c56acf8":"# Gender of patients in each anaemia case\ndf.groupby('sex')['anaemia'].value_counts()","6dbd0c8e":"# Gender of patients in each diabetes case\ndf.groupby('sex')['diabetes'].value_counts()","cd18fa8d":"# Gender of patients in each hypertension case\ndf.groupby('sex')['high_blood_pressure'].value_counts()","366b63eb":"plt.figure(figsize=(10, 7))\nplt.hist(df.sex, histtype='bar')\nplt.title('Gender of Patients')\nplt.show()","92ebda1a":"df.smoking.value_counts()","193a7d27":"# Ages with smoking cases\ndf.groupby('smoking')['age'].describe()","80bc53d6":"# Some of ages in each smoking cases\ndf.groupby('smoking')['age'].unique()","c65ebee7":"# Patients of smoking and anaemia cases\ndf.groupby('smoking')['anaemia'].value_counts()","2617a3d4":"# Patients of smoking and diabetes cases\ndf.groupby('smoking')['diabetes'].value_counts()","a39f52be":"# Patients of smoking and hypertension cases\ndf.groupby('smoking')['high_blood_pressure'].value_counts()","3b3a5206":"# Gender of patients in each smoking case\ndf.groupby('sex')['smoking'].value_counts()","ba2c0e76":"plt.figure(figsize=(10, 7))\nplt.hist(df.smoking, histtype='bar')\nplt.title('Smoker Patients')\nplt.show()","d7129c94":"# Age\nplt.figure(figsize=(15, 10))\nsns.heatmap(df.loc[:, ['age', 'anaemia', 'diabetes', 'high_blood_pressure', 'smoking']].corr(), annot=True)\nplt.title('Correlation between age and anaemia, diabetes, high blood pressure and smoking')\nplt.show()","4e7bec37":"# Sex\nplt.figure(figsize=(15, 10))\nsns.heatmap(df.loc[:, ['sex', 'anaemia', 'diabetes', 'high_blood_pressure', 'smoking']].corr(), annot=True)\nplt.title('Correlation between sex and anaemia, diabetes, high blood pressure and smoking', loc='left')\nplt.show()","6fdcdc07":"df.DEATH_EVENT.value_counts()","daea5d3c":"# Ages with death cases\ndf.groupby('DEATH_EVENT')['age'].describe()","1bd1d77b":"plt.figure(figsize=(10, 7))\ndeath_age = df.groupby('DEATH_EVENT')['age'].mean()\nmyexplode = [0.1, 0]\nplt.pie(death_age, autopct='%.1f%%', labels=['Alive', 'Dead'], explode=myexplode, shadow=True)\nplt.title('Average Ages In Death Cases')\nplt.legend(death_age, loc='upper right')\nplt.show()","9c24216d":"# Some of ages in each death cases\ndf.groupby('DEATH_EVENT')['age'].unique()","79f4b8ab":"# Patients of death and anaemia cases\ndf.groupby('DEATH_EVENT')['anaemia'].value_counts()","5bd4370b":"plt.figure(figsize=(10, 7))\ndeath_anae = df.groupby('DEATH_EVENT')['anaemia'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_anae, autopct='%.1f%%', labels=['Alive-non anaemic', 'Alive-anaemic', 'Dead-non anaemic', 'Dead-anaemic'], explode=myexplode, shadow=True)\nplt.title('Anaemic Patients In Death Cases')\nplt.legend(death_anae, loc='upper left')\nplt.show()","98b2ad93":"# Patients of death and diabetes cases\ndf.groupby('DEATH_EVENT')['diabetes'].value_counts()","69fc182e":"plt.figure(figsize=(10, 7))\ndeath_diab = df.groupby('DEATH_EVENT')['diabetes'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_diab, autopct='%.1f%%', labels=['Alive-non diabetic', 'Alive-diabetic', 'Dead-non diabetic', 'Dead-diabetic'], explode=myexplode, shadow=True)\nplt.title('Diabetic Patients In Death Cases')\nplt.legend(death_diab, loc='upper left')\nplt.show()","bf6452e5":"# Patients of death and hypertension cases\ndf.groupby('DEATH_EVENT')['high_blood_pressure'].value_counts()","7de350a3":"plt.figure(figsize=(10, 7))\ndeath_hbp = df.groupby('DEATH_EVENT')['high_blood_pressure'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_hbp, autopct='%.1f%%', labels=['Alive-normal press', 'Alive-high press', 'Dead-normal press', 'Dead-high press'], explode=myexplode, shadow=True)\nplt.title('Blood Pressure Patients In Death Cases')\nplt.legend(death_hbp, loc='upper left')\nplt.show()","ad40eff1":"# Patients of death and smoking cases\ndf.groupby('DEATH_EVENT')['smoking'].value_counts()","db2a8835":"plt.figure(figsize=(10, 7))\ndeath_smok = df.groupby('DEATH_EVENT')['smoking'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_smok, autopct='%.1f%%', labels=['Alive-non smoker', 'Alive-smoker', 'Dead-non smoker', 'Dead-smoker'], explode=myexplode, shadow=True)\nplt.title('Smoker Patients In Death Cases')\nplt.legend(death_smok, loc='upper left')\nplt.show()","8f3bdc49":"# Gender of patients in death cases\ndf.groupby('DEATH_EVENT')['sex'].value_counts()","82a1afd0":"plt.figure(figsize=(10, 7))\ndeath_sex = df.groupby('DEATH_EVENT')['sex'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_sex, autopct='%.1f%%', labels=['Alive-female', 'Alive-male', 'Dead-female', 'Dead-male'], explode=myexplode, shadow=True)\nplt.title('Gender of Patients In Death Cases')\nplt.legend(death_sex, loc='upper left')\nplt.show()","50b2a881":"# Average CPK enzyme in each death case\ndf.groupby('DEATH_EVENT')['creatinine_phosphokinase'].mean()","b96fd1db":"plt.figure(figsize=(10, 7))\ndeath_cpk = df.groupby('DEATH_EVENT')['creatinine_phosphokinase'].mean()\nmyexplode = [0.07, 0]\nplt.pie(death_cpk, autopct='%.1f%%', labels=['Alive-avg cpk', 'Dead-avg cpk'], explode=myexplode, shadow=True)\nplt.title('Average values of Creatinine Phosphokinase In Death Cases')\nplt.legend(death_cpk, loc='upper right')\nplt.show()","f3e1b636":"# Average EF enzyme in each death case\ndf.groupby('DEATH_EVENT')['ejection_fraction'].mean()","3e5f4526":"plt.figure(figsize=(10, 7))\ndeath_ef = df.groupby('DEATH_EVENT')['ejection_fraction'].mean()\nmyexplode = [0.07, 0]\nplt.pie(death_ef, autopct='%.1f%%', labels=['Alive-avg ef enzyme', 'Dead-avg ef enzyme'], explode=myexplode, shadow=True)\nplt.title('Average values of Ejection Fraction In Death Cases')\nplt.legend(death_ef, loc='upper right')\nplt.show()","de3fb78f":"# Average count of platelets in each death case\ndf.groupby('DEATH_EVENT')['platelets'].mean()","d5a2249e":"plt.figure(figsize=(10, 7))\ndeath_plts = df.groupby('DEATH_EVENT')['platelets'].mean()\nmyexplode = [0.07, 0]\nplt.pie(death_plts, autopct='%.1f%%', labels=['Alive-avg plts', 'Dead-avg plts'], explode=myexplode, shadow=True)\nplt.title('Average values of Platelets In Death Cases')\nplt.legend(death_plts, loc='upper right')\nplt.show()","e851b391":"# Average Serum Creatinine in each death case\ndf.groupby('DEATH_EVENT')['serum_creatinine'].mean()","afb07dca":"plt.figure(figsize=(10, 7))\ndeath_SC = df.groupby('DEATH_EVENT')['serum_creatinine'].mean()\nmyexplode = [0.1, 0]\nplt.pie(death_SC, autopct='%.1f%%', labels=['Alive-avg Serum Creatinine', 'Dead-avg Serum Creatinine'], explode=myexplode, shadow=True)\nplt.title('Average values of Serum Creatinine In Death Cases')\nplt.legend(death_SC, loc='upper left')\nplt.show()","3eb3539b":"# Average Serum Sodium in each death case\ndf.groupby('DEATH_EVENT')['serum_sodium'].mean()","d1cd9115":"plt.figure(figsize=(10, 7))\ndeath_SS = df.groupby('DEATH_EVENT')['serum_sodium'].mean()\nmyexplode = [0.1, 0]\nplt.pie(death_SS, autopct='%.1f%%', labels=['Alive-avg Serum Sodium', 'Dead-avg Serum Sodium'], explode=myexplode, shadow=True)\nplt.legend(death_SS, loc='upper right')\nplt.title('Average values of Serum Sodium In Death Cases')\nplt.show()\n","b921ea5a":"plt.figure(figsize=(20, 15))\nsns.heatmap(df.corr(), annot=True)\nplt.title('Correlation between Death Events and other data')\nplt.show()","8a66a679":"Platelets column","2e95e484":"DEATH EVENT is a boolean column (   0:alive patient  -  1:dead patient)","98c41695":"sex is a boolean column (  0:females    -     1:males)","bc8045bc":"Creatinine phosphokinase column","d55f6599":"Anaemia is a boolean column (  0:non anaemic patient   -   1:anaemic patient  )","65b271bb":"Correlation between Death cases and other factors","cd461008":"# Exploring the data","f31ccf1a":"Serum sodium column","db7d76d7":"# Cleaning the data","a5e18ddc":"Diabetes is a boolean column (  0:non diabetic patient  -  1:diabetic patient)","36aad1bc":"Serum creatinine column","eb8b81a9":"High Blood Pressure is a boolean column ( 0:non hypertension patient - 1:hypertension patient)","9babbd18":"# Death cases","73b72cf8":"Unnecessary Data","87af612f":"Data After Cleaning Outliers","4a8a8cbc":"Smoking is a boolean column (  0:non smoker    -    1:smoker)","5a1146fa":"Ejection fraction column","9af52fbb":"Correlation between age\/sex and the anaemia, diabetes, high blood pressure and smoking"}}