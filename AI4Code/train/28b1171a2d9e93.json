{"cell_type":{"69e6412a":"code","ca0c1932":"code","7840ebb1":"code","6b4764ac":"code","a22edded":"code","6554b75d":"code","cdf14adb":"code","93af23a7":"code","651af0fc":"code","d3db2828":"code","f205b910":"code","0e3a745e":"code","99cb61d8":"markdown"},"source":{"69e6412a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ca0c1932":"data = pd.read_csv(\"\/kaggle\/input\/crimeagainstwomen\/CrimeAgainstWomen.csv\")","7840ebb1":"data.describe","6b4764ac":"data.columns","a22edded":"for col in data.columns:\n    print (col , \":\", len(data[col].unique()) )","6554b75d":"pd.get_dummies(data , drop_first = True).shape","cdf14adb":"data['Crime Head'].value_counts().sort_values(ascending=False)","93af23a7":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder","651af0fc":"X = data.iloc[:,:].values","d3db2828":"labelencoder_X_1 = LabelEncoder()\nX[:, 1] = labelencoder_X_1.fit_transform(X[:, 1])","f205b910":"labelencoder_X_0 = LabelEncoder()\nX[:, 0] = labelencoder_X_0.fit_transform(X[:, 0])","0e3a745e":"from sklearn.compose import ColumnTransformer\nct = ColumnTransformer([(\"Crime Head\", OneHotEncoder(), [1])],    remainder = 'passthrough')\nX = ct.fit_transform(X).toarray()","99cb61d8":"If dummies variable added for all "}}