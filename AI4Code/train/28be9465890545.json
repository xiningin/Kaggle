{"cell_type":{"a12303c7":"code","8567e780":"code","a53c2a75":"code","814359b7":"code","31b2cc6c":"code","1a1946cf":"code","fbba3d65":"code","e74a279f":"code","1c392e8d":"code","4f6d213b":"code","e2909821":"code","37ee86f1":"code","e0333dc7":"code","ca50016e":"code","7317a7e3":"code","51cabd64":"code","e85ff150":"code","2ccf975a":"code","389f9fa2":"code","c8e4b63e":"code","e2e8ade1":"code","6ad959ef":"code","45a0c540":"code","63c7005e":"code","70d1a1e9":"code","f8c6b38e":"code","e28634cb":"code","181be9c0":"markdown","a30d9692":"markdown"},"source":{"a12303c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8567e780":"import matplotlib.pyplot as plt\nimport seaborn as sns","a53c2a75":"df = pd.read_csv('..\/input\/mlcourse\/telecom_churn.csv')\ndf.head()","814359b7":"df.shape","31b2cc6c":"df['International plan'] = df['International plan'].map({'Yes': 1, 'No': 0})\ndf['Voice mail plan'] = df['Voice mail plan'].map({'Yes': 1, 'No': 0})","1a1946cf":"df['Churn'] = df['Churn'].astype('int')","fbba3d65":"plt.rcParams['figure.figsize'] = (16, 12)\ndf.drop(['State'], axis = 1).hist()","e74a279f":"sns.heatmap(df.corr())","1c392e8d":"df.drop([feat_name for feat_name in df.columns if 'charge' in feat_name], axis = 1, inplace=True) ","4f6d213b":"df.shape","e2909821":"df.shape","37ee86f1":"sns.countplot(x = 'State', data = df)","e0333dc7":"State = df['State']","ca50016e":"df.drop('State', axis=1, inplace=True)","7317a7e3":"df['Total day minutes'].describe()","51cabd64":"from sklearn.manifold import TSNE\ntsne = TSNE(random_state=17)","e85ff150":"%%time\nX_repr_churn = tsne.fit_transform(df)","2ccf975a":"X_repr_churn.shape","389f9fa2":"plt.rcParams['figure.figsize'] = (8,6)\nplt.scatter(X_repr_churn[df['Churn'] == 1 , 0], \n            X_repr_churn[df['Churn'] == 1 ,1], alpha= .5, c='blue');\nplt.scatter(X_repr_churn[df['Churn'] == 0 , 0], \n            X_repr_churn[df['Churn'] == 0 ,1], alpha= .5, c='orange');\nplt.xlabel('tSNE axis #1')\nplt.ylabel('tSNE axis #2')\nplt.legend()\nplt.title('tSNE Repr');\nplt.savefig('churn_tsne.png', dpi= 300);","c8e4b63e":"sns.boxplot(x = 'Total day minutes', data = df)","e2e8ade1":"plt.rcParams['figure.figsize'] = (8,6)\ndf['Total day minutes'].hist()","6ad959ef":"df['Churn'].value_counts(normalize = True)","45a0c540":"sns.countplot(x = 'Churn', data = df)","63c7005e":"plt.scatter(df['Total day minutes'], df['Customer service calls'])","70d1a1e9":"\ndf.corrwith(df['Total day minutes'])","f8c6b38e":"pd.crosstab(df['Churn'], df['Customer service calls'])","e28634cb":"sns.countplot(x= 'Customer service calls', hue = 'Churn', data = df)\nplt.title('Customer Service Calls For loyal and churned');","181be9c0":"<img src= 'churn_tsne.png'>","a30d9692":"## Whole dataset visualization"}}