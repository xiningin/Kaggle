{"cell_type":{"f9df3741":"code","dc63affe":"code","9142797e":"code","fd0b3b76":"code","38dbbae9":"code","499bb77e":"code","02882c67":"code","78530eb5":"code","6ba8db86":"code","c8e4e130":"code","308352de":"code","2693e134":"code","8a1e96d8":"code","b9274a13":"markdown","0d983e01":"markdown","fb1215f4":"markdown","bef0e146":"markdown","a3a06f8c":"markdown","f52bdc1f":"markdown","868e4836":"markdown","5208a238":"markdown","b441e44c":"markdown","c14f68fb":"markdown","f70f10e3":"markdown","9fad15a2":"markdown","90dc4489":"markdown","d66f3417":"markdown"},"source":{"f9df3741":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dc63affe":"train_df = pd.read_csv(\"\/kaggle\/input\/bachelor-degree-majors-by-age-sex-and-state\/Bachelor_Degree_Majors.csv\")\ntrain_df.head(10)","9142797e":"print(len(train_df))\nsummary = pd.DataFrame(train_df.dtypes)\nsummary[\"null\"] = train_df.isnull().sum()\nsummary[\"unique\"] = train_df.nunique()\nsummary[\"first\"] = train_df.loc[0]\nsummary[\"second\"] = train_df.loc[1]\nsummary[\"third\"] = train_df.loc[2]\nsummary","fd0b3b76":"train_df.Sex.unique()\n# These are the unique values in this feature","38dbbae9":"def convert_str_to_num(Series):\n    Series = Series.split(\",\")\n    Series = int(\"\".join(Series))\n    return Series","499bb77e":"cols = train_df.columns.to_list()\nfor col in cols[3:]:\n    train_df[col] = train_df[col].apply(convert_str_to_num)","02882c67":"total_df = train_df[(train_df[\"Sex\"] == \"Total\") & (train_df[\"Age Group\"] == \"25 and older\")]\nMale_df = train_df[(train_df[\"Sex\"] == \"Male\") & (train_df[\"Age Group\"] == \"25 and older\")]\nFemale_df = train_df[(train_df[\"Sex\"] == \"Female\") & (train_df[\"Age Group\"] == \"25 and older\")]","78530eb5":"fg, ax = plt.subplots(4, 2, figsize = (20,10))\nfg.tight_layout() \nfor idx, col in enumerate(cols[1:]):\n    sns.histplot(x = col, data = train_df, color=\"Green\", ax = ax[idx\/\/2, idx%2])","6ba8db86":"def write_percentage(train_df, ax):\n    \"\"\"Writes percentage on top of the bars on the plots\"\"\"\n    for patches in ax.patches:\n        height = patches.get_height()\n        width = patches.get_width()\n        x_loc = patches.get_x()\n        values = height\n        ax.text(x = x_loc , y=height+100, s = '{:1.1f}%'.format(values), fontsize = 10 )","c8e4e130":"train_df.columns","308352de":"fg, ax = plt.subplots(6,1,figsize = (20,30))\nfor idx, col in enumerate(cols[3:]):\n    sns.barplot(y = col, x = \"State\", data = total_df, palette=\"Reds\", ax= ax[idx])\n    plt.sca(ax[idx])\n    plt.xticks(rotation = 90)\n    fg.tight_layout(pad=3.0)\nplt.show()","2693e134":"fg, ax = plt.subplots(2,3,figsize = (30,15))\npeople_df = train_df[train_df[\"Sex\"] != \"Total\"]\nfor idx, col in enumerate(cols[3:]):\n    sns.barplot(y = col, x = \"Sex\", data = people_df, palette=\"Greens\", ax = ax[idx\/\/3, idx%3])","8a1e96d8":"fg, ax = plt.subplots(2,3,figsize = (30,15))\ndata = train_df[(train_df[\"Sex\"] != \"Total\") & (train_df[\"Age Group\"] != \"25 and older\" )]\nfor idx, col in enumerate(cols[3:]):\n    sns.barplot(y = \"Bachelor's Degree Holders\", x = \"Age Group\", hue = \"Sex\", data = data, palette=\"Reds\", ax = ax[idx\/\/3, idx%3])","b9274a13":"## Univariate Analysis","0d983e01":"### Degree holders ","fb1215f4":"From  these plots we could see that sex and age group is uniformly distributed in the data while other features are not. Other features are having right skewness","bef0e146":" From here we could see that Females are having high number in most of the categories, except for **Science and \nEngineering** and **Business**","a3a06f8c":"### Countrywise distribution","f52bdc1f":"From here, we can make following observations:\n1. There are total of 612 rows and there are no null values in the data.\n2. Every feature has a datatype object but we could see numbers as the values for quite some features which we need to convert to float\n3. There are all unique values in Bachelor's degree holder and that makes sense.\n4. There are all unique values to Science and Eng as well.\n5. Data is in certain age groups and there are total 4 age groups.\n","868e4836":"### Summary of Data","5208a238":"### Looking forward for your comments would be more than happy to get a feedback!\n### Have a great day! :)","b441e44c":"It is clear that total number of degree holders in California has performed great. There are few other cities as well which performed pretty well like in  the case of Education degree. In the sector of degree holders related to education department, Texas has highest number of people in that sector with a close competition with Florida, New york and California. All in all California has been performing really well in all departments with holder of highest number of degree holders in most of the department.\n\nIt could also be the case that since California and Texas are big cities with total population greater than other cities so it is no great deal to have higher number of degree holders.\n\nOne feature that could have been of great importance is the total number of degree holders with respect to the population of the city.","c14f68fb":"# Closer Look","f70f10e3":"### Convert the object values to float values","9fad15a2":"# Reading Data","90dc4489":"Removing the rows with have total as a value in sex feature because we already have male and female\"","d66f3417":"From here we could see that mostly people of age category 40 to 64 are having highest count be it male or female and on the other hand people with age group with 65 and older are having least count"}}