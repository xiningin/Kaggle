{"cell_type":{"255d49e9":"code","43e79f3a":"code","271e53cb":"code","f7948670":"code","ce5ed042":"code","c819a994":"code","5dbd7d30":"code","0c81fb7c":"code","1a16d935":"code","8c1f5cf6":"code","2918c967":"code","2e8c7e50":"code","5da88243":"code","e1205ef0":"code","436c9622":"code","20e7a4bd":"code","c21b0a0d":"code","2dd1fab8":"code","ca3c9146":"code","1ed0a7c6":"code","b748d24a":"code","62fc38d7":"code","3ad40ba6":"markdown","e37cb7cc":"markdown","2d5c76f3":"markdown","5ee250e1":"markdown","5d2a31a1":"markdown","a64c299c":"markdown","d5a90574":"markdown","163083ae":"markdown","1df94401":"markdown"},"source":{"255d49e9":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n\ndt= pd.read_csv(\n    \"\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\",\n    encoding='UTF-8')\n\nimport warnings  \nwarnings.filterwarnings('ignore')","43e79f3a":"#to check few rows\n\ndt.head()","271e53cb":"#to check the number of column & rows\nprint(\"dimensions are : \", dt.shape)","f7948670":"#to check the columns names, data type and null values (if any)\n\nprint(dt.info())","ce5ed042":"#to see the null values\ndt[dt.isna().any(axis=1)]","c819a994":"#drop the null values\ndt=dt.dropna()","5dbd7d30":"#rename the columns\ndt = dt.rename(columns={'Order Number': 'Order_Number',\"Order Status\":\"Order_Status\", \"Book Name\":\"Book_Name\",\"Order Date & Time\":\"Date_Time\",\"Payment Method\":\"Payment_Method\",\"Total items\":\"Total_Items\",\"Total weight (grams)\":\"Weight\"})\ndt.columns","0c81fb7c":"#change to proper datatypes\n\n\ndt['Order_Status'] = dt['Order_Status'].astype(str)\ndt[\"Book_Name\"]=dt[\"Book_Name\"].astype(str)\ndt[\"Date_Time\"]=dt[\"Date_Time\"].astype(str)\ndt[\"City\"]=dt[\"City\"].astype(str)\ndt[\"Payment_Method\"]=dt[\"Payment_Method\"].astype(str)\ndt['Date_Time'] = pd.to_datetime(dt['Date_Time'])\ndt[\"Book_Name\"].str.encode('utf-8')\nprint(dt.info())","1a16d935":"#to extract further info from \"Date_Time\" column \n\ndt = dt.sort_values('Date_Time') \n\ndt['Date']  = dt['Date_Time'].dt.date\ndt['Year']  = dt[\"Date_Time\"].dt.year\ndt[\"Month\"] = dt[\"Date_Time\"].dt.month_name()\ndt[\"Day\"]   = dt[\"Date_Time\"].dt.day_name()\ndt['Hour']  = dt['Date_Time'].dt.hour\ndt['Time']  = dt['Date_Time'].dt.time\ndt[\"MY\"]=pd.to_datetime(dt['Date_Time']).dt.to_period('M')\ndt[\"MY\"]= dt[\"MY\"].dt.strftime('%Y-%m')\n\ndt.columns","8c1f5cf6":"#to separate, from multiple to single book tiltle per line\n\nprint('No of rows BEFORE splitting : ',dt.shape[0])\n\nscol = dt['Book_Name'].str.split('\/', expand=True).stack()\nscol.index = scol.index.droplevel(-1) \nscol.name = 'Book_Name' \ndt = dt.drop(columns='Book_Name').join(scol)\n\nprint('No of rows AFTER splitting : ',dt.shape[0])\n\n#ref:https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.Series.str.split.html\n#ref:https:\/\/stackoverflow.com\/questions\/40955656\/how-does-python-split-function-works\/40955737","2918c967":"#just have a look at top cities to see if there any resemble city name\n\ntopcities=dt.groupby(\"City\")[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False).head(50)\n\ntopcities","2e8c7e50":"#rename the resembled city names to single name \n\n#print(\"Before rename:\", len(df[\"City\"].unique())) \ndt['City'] = dt['City'].replace(['karachi','KARACHI'],'Karachi')\ndt['City'] = dt['City'].replace(['lahore','LAHORE'],'Lahore')\ndt['City'] = dt['City'].replace(['ISLAMABAD','islamabad'],'Islamabad')\n#print(\"AFTER rename:\", len(df[\"City\"].unique())) \n\ntopcities=topcities=dt.groupby(\"City\")[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False).head(10)\n\ntopcities\n#https:\/\/datatofish.com\/replace-values-pandas-dataframe\/","5da88243":"#freebks=dt[dt[\"Book_Name\"].str.contains(\"Free\")]\n#freebks\n#some books were distributed as free in lucky draw. we will see later \n#what useful information we can extract from this point","e1205ef0":"#top 30 books by order, to see if there anything inaccurate with title\n\ntemp=dt.groupby(\"Book_Name\")[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False).head(30)\ntemp\n\n","436c9622":"#  some books titles are referred to the same book, so we renamed those..\n\nprint(\"Before rename:\", len(dt[\"Book_Name\"].unique())) \ndt['Book_Name'] = dt['Book_Name'].replace(['\u0627\u0646\u0679\u0631\u0646\u06cc\u0679 \u0633\u06d2 \u067e\u06cc\u0633\u06c1 \u06a9\u0645\u0627\u0626\u06cc\u06ba\u061f- \u0645\u0633\u062a\u062d\u0642\u06cc\u0646 \u0632\u06a9\u0648\u0627\u0629'],'\u0627\u0646\u0679\u0631\u0646\u06cc\u0679 \u0633\u06d2 \u067e\u06cc\u0633\u06c1 \u06a9\u0645\u0627\u0626\u06cc\u06ba')\ndt['Book_Name'] = dt['Book_Name'].replace(['\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633 \u06d4 \u0627\u06cc\u06a9 \u062a\u0639\u0627\u0631\u0641','\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633'],'Data Science')\ndt['Book_Name'] = dt['Book_Name'].replace(['Python Programming- Release Date: August 14, 2020'],'Python Programming')\n\nprint(\"AFTER rename:\", len(dt[\"Book_Name\"].unique()))","20e7a4bd":"#lets have a final look at our data before proceed further.\ndt.head(10)","c21b0a0d":"#top books by order\nbnon=dt.groupby(\"Book_Name\")[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False).head(20)\n\n\nfig, ax = plt.subplots()\nax=sns.barplot(x=\"Book_Name\",y=\"Order_Number\",data=bnon, color=\"deepskyblue\")\nax.set_xticklabels(bnon[\"Book_Name\"], rotation=90)\nfig.set_size_inches([10, 6])\nax.set_title('Top 20 Selling Books',fontsize=16)\nax.set_xlabel(\"Books Titles\",fontsize=13)\nax.set_ylabel(\"Number of Order\",fontsize=13) \nplt.show()","2dd1fab8":"\ndtos=dt.groupby([\"Order_Status\"])[\"Order_Number\"].count().reset_index()\n#sns.countplot(x=\"Order_Status\", data=dtos)\n\nfig, ax = plt.subplots()\nax=sns.barplot(x=\"Order_Status\",y=\"Order_Number\",data=dtos,color=\"deepskyblue\")\nax.set_xticklabels(dtos[\"Order_Status\"], rotation=90)\nfig.set_size_inches([10, 6])\nax.set_title('Category-wise Total Orders',fontsize=16)\nax.set_ylabel(\"Number of Orders\",fontsize=13) \nax.set_xlabel(\"Order Categories\",fontsize=13)\nplt.show()","ca3c9146":"#top cities and order nos\n\ncion=topcities\n\nfig, ax = plt.subplots()\nax=sns.barplot(x=\"City\",y=\"Order_Number\",data=cion, color=\"deepskyblue\")\nax.set_xticklabels(cion[\"City\"], rotation=90)\nfig.set_size_inches([10, 6])\nax.set_title('City-wise Total Orders',fontsize=16)\nax.set_ylabel(\"Number of Orders\",fontsize=13) \nax.set_xlabel(\"Top 10 Cities\",fontsize=13)\n\nplt.show()","1ed0a7c6":"sns.countplot(x=\"Order_Status\",hue=\"Payment_Method\", data=dt)\n\n#copied from someone's notebook","b748d24a":"#Date-wise Order Status\ndton=dt.groupby([\"Order_Status\",\"MY\"])[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False)\ndton=dton.sort_values(\"MY\")\n\nfig, ax = plt.subplots()\nax.set_xticklabels(dton[\"MY\"], rotation=60)\nfig.set_size_inches([10, 6])\n\nax=sns.barplot(x=\"MY\",y=\"Order_Number\",hue=\"Order_Status\",hue_order=[\"Completed\", \"Returned\", \"Cancelled\"],data=dton,palette=\"muted\")\nax.set_title('Date-wise Order Status',fontsize=16)\nax.set_xlabel(\"Dates\",fontsize=13)\nax.set_ylabel(\"Number of Orders\",fontsize=13) \nplt.show()","62fc38d7":"\n#order status of top cities \n\ncios=dt.groupby([\"City\",\"Order_Status\" ])[\"Order_Number\"].count().reset_index().sort_values(\"Order_Number\", ascending=False)\ncios=cios[cios[\"City\"].isin(topcities[\"City\"])]\n\nfig, ax = plt.subplots()\nax=sns.barplot(x=\"City\",y=\"Order_Number\",hue=\"Order_Status\",data=cios, palette=\"muted\")\nax.set_xticklabels(cion[\"City\"], rotation=90)\nfig.set_size_inches([10, 6])\nax.set_title('City-wise Order Status',fontsize=16)\nax.set_ylabel(\"Number of Orders\",fontsize=13) \nax.set_xlabel(\"Top 10 Cities\",fontsize=13)","3ad40ba6":"# Visualize order status frequency","e37cb7cc":"# Find any hidden patterns that are counter-intuitive for a layman","2d5c76f3":"now we have only one book title per row.","5ee250e1":"Now data is clean. we are good to go now. Next step is to address the queries\n\n# What is the best-selling book?","5d2a31a1":"# Correlation between date and time with order status","a64c299c":"# Basic Data Exploration","d5a90574":"Data contains null values.","163083ae":"# Can we predict number of orders, or book names in advance?\n\n","1df94401":"# Correlation between city and order status"}}