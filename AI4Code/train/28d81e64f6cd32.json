{"cell_type":{"c5a248cd":"code","47203cfd":"code","d0c544bf":"code","ccc54cf4":"code","694c811c":"code","26f9c034":"code","568c8857":"code","809c6891":"code","3201971c":"code","2233bce8":"code","5270152a":"code","9160c9e8":"code","b0498718":"code","d3f45470":"code","743ef332":"code","362a5f1b":"code","59185000":"code","26bf27fe":"code","7efcb896":"code","1f3b3f19":"code","4f18f1c5":"markdown","b2c1eb81":"markdown","a33a22d2":"markdown","b3a9c4fa":"markdown","4e82bb70":"markdown","fec9fae4":"markdown","4a4f88fe":"markdown","27104bd5":"markdown","685fd068":"markdown"},"source":{"c5a248cd":"import pandas as pd\nimport seaborn as sns  \nimport numpy as np\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom matplotlib import pyplot as plt  \nfrom scipy.stats import shapiro     ## Normality Test\nfrom scipy.stats import stats    ## Correlation Tests","47203cfd":"dff = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf = dff.copy()","d0c544bf":"df.head()","ccc54cf4":"print (\"In DataFrame: \", df.shape[0],\"obs, and \", df.shape[1], \"features\" )","694c811c":"df.isnull().sum().sort_values(ascending = False)[0:20]","26f9c034":"df.describe().T","568c8857":"numericdf = df.select_dtypes(exclude = [\"object\"])\nnumericdf.drop([\"Id\"], axis = 1 , inplace = True )","809c6891":"numericdf.info()","3201971c":"numericdf.isna().sum()","2233bce8":"numericdf[\"LotFrontage\"].fillna((numericdf[\"LotFrontage\"].median()), inplace = True)\nnumericdf[\"MasVnrArea\"].fillna((numericdf[\"MasVnrArea\"].median()), inplace = True)\nnumericdf[\"GarageYrBlt\"].fillna((numericdf[\"GarageYrBlt\"].median()), inplace = True)","5270152a":"print(\"Skewness: %f\" % numericdf[\"SalePrice\"].skew())\nprint(\"Kurtosis: %f\" % numericdf[\"SalePrice\"].kurt())","9160c9e8":"sns.distplot(numericdf[\"SalePrice\"] , color = \"c\", bins = 100 , hist_kws={\"alpha\": 0.4});","b0498718":"fg = plt.figure(figsize=(22,22))\nfor index in range(len(numericdf.columns)):\n    plt.subplot(10 ,5 ,index + 1)\n    sns.scatterplot(x = numericdf.iloc[:,index], y = \"SalePrice\", data = numericdf)\nfg.tight_layout(pad = 1.0)","d3f45470":"figure, ax = plt.subplots(1,6, figsize = (32,8))\nsns.violinplot(data = numericdf, x = \"OverallQual\", y=\"SalePrice\", ax = ax[0])\nsns.violinplot(data = numericdf, x = \"OverallCond\", y=\"SalePrice\", ax = ax[1])\nsns.violinplot(data = numericdf, x = \"GarageCars\", y=\"SalePrice\", ax = ax[2])\nsns.violinplot(data = numericdf, x = \"Fireplaces\", y=\"SalePrice\", ax = ax[3])\nsns.violinplot(data = numericdf, x = \"YrSold\", y=\"SalePrice\", ax = ax[4])\nsns.violinplot(data = numericdf, x = \"MoSold\", y=\"SalePrice\", ax = ax[5])\nplt.show()","743ef332":"numericdf.corr()[\"SalePrice\"].nlargest(20)","362a5f1b":"(sns.FacetGrid(numericdf,\n              hue = \"OverallQual\",\n              height = 8,\n              xlim = (0, numericdf[\"SalePrice\"].max()))\n.map(sns.kdeplot, \"SalePrice\", shade = True)\n.add_legend());","59185000":"plt.figure(figsize = (14,8))\nsns.heatmap(numericdf.corr(),\n            cmap = \"RdPu\" ,\n            annot = False ,\n            linewidths = 1 ,\n            robust = True);","26bf27fe":"for i in numericdf :\n    test_statistics, pvalue = shapiro(numericdf[i])\n    print(f\"Shapiro Test Statistics for {i}: = {test_statistics:.4f}, P-value = { pvalue:.5f}\")","7efcb896":"for i in numericdf:\n    test_statistics, pvalue = stats.spearmanr(numericdf[i],numericdf[\"SalePrice\"])\n    print(f\"Spearman-Correlation Coefficient for {i}: = {test_statistics:.4f}, P-value = { pvalue:.5f}\")","1f3b3f19":"for i in numericdf:\n    test_statistics, pvalue = stats.kendalltau(numericdf[i],numericdf[\"SalePrice\"])\n    print(f\"KendallTau-Correlation Coefficient for {i}: = {test_statistics:.4f}, P-value = { pvalue:.5f}\")","4f18f1c5":"**Decision** : \n\nP-values < 0.05 is statistically significant. \n\nP-values > 0.05 is not statistically significant. ","b2c1eb81":"**Hi everyone**\n\n**What are we going to do on this notebook?**\n\n* Dataset overview\n\n* Control Missing observations\n\n* Data Visualization for correlation\n\n* Normality and correlation tests\n\n\n\n\n**Thanks for reading. Pls dont forget to upvote ;) Lets start.**\n\nNote : It is not a detailed analysis.","a33a22d2":"**Kendall\u2019s Rank Correlation** :\n\nTests whether a data sample is montonically separable.\n\n**Assumption** : 1- Observations in each sample are independent and distributed identically.  2- Observations in each sample are ranked .\n\n**Hypothesis** :\n\nH0: the samples are correlated.\n\nH1: the sample does not have any correlation.","b3a9c4fa":"## Normality Test\nMain obejctive of performing Normality Tests is to validate the Gaussian distribution of data.\n\n**Shapiro-Wilk Test** :\n\nTests whether a data sample has a Gaussian distribution.\n\n**Assumption** : Observations in each sample are independent and distributed identically.\n\n**Hypothesis** :\n\nH0: the sample has a Gaussian distribution.\n\nH1: the sample does not have a Gaussian distribution.","4e82bb70":"**Highest positive** correlation variable : OverallQual\n\nlet's look at the distribution","fec9fae4":"## Correlation Tests\nCorrelation Tests are used to check the correlation between two independent features or variables.\n\n**Spearman\u2019s Rank Correlation** :\nTests whether a data sample is montonically separable.\n\n**Assumption** : 1-Observations in each sample are independent and distributed identically. 2- Observations in each sample are ranked \n\n**Hypothesis** :\n\nH0: the samples are correlated.\n\nH1: the sample does not have any correlation.","4a4f88fe":"### Visualization\n\nWe will look at the distribution of the target variable and its correlation with other variables","27104bd5":"**Decision** : Since P values are < 0.05 . No Gaussian distribution for all variables","685fd068":"The correlation table is at the below."}}