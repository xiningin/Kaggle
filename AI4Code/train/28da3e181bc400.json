{"cell_type":{"a0b5f593":"code","1354a451":"code","1307b520":"code","371db02c":"code","9ea7ea0b":"code","76dfc429":"code","b402777b":"code","399473ad":"code","99a60b70":"code","70860803":"code","86180a1a":"code","e2aede38":"code","13abee43":"code","f37ad67d":"code","f5b00db1":"code","1758ddf8":"code","5b968876":"code","da06237d":"code","f2eabf1d":"code","00acf56d":"code","2a2036eb":"code","316a02b8":"code","243ecbf2":"code","70109c51":"code","50018060":"code","69de72ca":"code","554d6545":"code","8d307ff8":"code","6a136596":"code","1c27f095":"code","0cc25371":"code","27571d08":"code","7a22adc6":"code","131c9a7f":"code","866972e3":"code","6c80cebc":"code","e11d8d55":"code","cd521236":"code","52fcac2a":"code","5aa2d987":"code","6cc5c742":"code","579337fd":"code","aa875e5a":"code","486424c6":"code","e4593f20":"markdown","e13f0a5d":"markdown","cddc548f":"markdown","090255f9":"markdown","f1a677f7":"markdown","84514ad0":"markdown","f1a39ee5":"markdown"},"source":{"a0b5f593":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1354a451":"train_data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain_data.head()","1307b520":"test_data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest_data.head()\n","371db02c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","9ea7ea0b":"fig, ax = plt.subplots(figsize=(20,10))\nsns.heatmap(train_data.isnull(), yticklabels = False, cbar = True)","76dfc429":"train_data.drop(['PoolQC', 'Fence', 'MiscFeature'], axis = 1, inplace = True)\ntest_data.drop(['PoolQC', 'Fence', 'MiscFeature'], axis = 1, inplace = True)","b402777b":"fig, ax = plt.subplots(figsize=(20,10))\nsns.heatmap(train_data.isnull(), yticklabels = False, cbar = True)","399473ad":"train_data.drop(['FireplaceQu','Alley', 'LotFrontage'], axis = 1, inplace = True)\ntest_data.drop(['FireplaceQu','Alley', 'LotFrontage'], axis = 1, inplace = True)","99a60b70":"fig, ax = plt.subplots(figsize=(20,10))\nsns.heatmap(train_data.isnull(), yticklabels = False, cbar = True)","70860803":"train_data.dropna(inplace=True)\ntest_data.dropna(inplace=True)","86180a1a":"fig, ax = plt.subplots(figsize=(20,10))\nsns.heatmap(train_data.isnull(), yticklabels = False, cbar = True)","e2aede38":"train_data.head()","13abee43":"test_data.head()","f37ad67d":"train_data.corr()","f5b00db1":"train_data[\"SalePrice\"].corr(train_data[\"LotArea\"])","1758ddf8":"sns.jointplot(x=train_data['SalePrice'],y=train_data['YearBuilt'],data=train_data)","5b968876":"sns.countplot(train_data[\"Street\"])","da06237d":"train_data.drop(['Street','Utilities'], axis = 1, inplace=True)\ntest_data.drop(['Street','Utilities'], axis = 1, inplace=True)","f2eabf1d":"sns.countplot(train_data[\"LandContour\"])","00acf56d":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='LandContour',y='SalePrice',data=train_data,palette='winter')","2a2036eb":"sns.countplot(train_data[\"MSZoning\"])","316a02b8":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='MSZoning',y='SalePrice',data=train_data,palette='winter')","243ecbf2":"sns.countplot(train_data[\"LotShape\"])","70109c51":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='LotShape',y='SalePrice',data=train_data,palette='winter')","50018060":"train_data['Neighborhood'].value_counts()","69de72ca":"train_data['HouseStyle'].value_counts()","554d6545":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='HouseStyle',y='SalePrice',data=train_data,palette='winter')","8d307ff8":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='BldgType',y='SalePrice',data=train_data,palette='winter')","6a136596":"train_data.drop(['Condition1','Condition2','RoofMatl', 'BsmtFinType2', 'BsmtFinSF2', 'Heating','HeatingQC', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'BsmtQual', 'BsmtCond', 'BsmtExposure'], axis = 1, inplace=True)\ntest_data.drop(['Condition1','Condition2','RoofMatl', 'BsmtFinType2', 'BsmtFinSF2', 'Heating','HeatingQC', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'BsmtQual', 'BsmtCond', 'BsmtExposure'], axis = 1, inplace=True)","1c27f095":"train_data.columns","0cc25371":"test_data.columns","27571d08":"LandContour = pd.get_dummies(train_data['LandContour'],drop_first=True)\nMSZoning = pd.get_dummies(train_data['MSZoning'],drop_first=True)\nLotShape = pd.get_dummies(train_data['LotShape'],drop_first=True)\nNeighborhood = pd.get_dummies(train_data['Neighborhood'],drop_first=True)\nHouseStyle = pd.get_dummies(train_data['HouseStyle'],drop_first=True)\nBldgType = pd.get_dummies(train_data['BldgType'],drop_first=True)\nFoundation = pd.get_dummies(train_data['Foundation'],drop_first=True)\nCentralAir = pd.get_dummies(train_data['CentralAir'],drop_first=True)\nRoofStyle = pd.get_dummies(train_data['RoofStyle'],drop_first=True)\nKitchenQual = pd.get_dummies(train_data['KitchenQual'],drop_first=True)\nFunctional = pd.get_dummies(train_data['Functional'],drop_first=True)\nGarageType = pd.get_dummies(train_data['GarageType'],drop_first=True)\nSaleType = pd.get_dummies(train_data['SaleType'],drop_first=True)\nSaleCondition = pd.get_dummies(train_data['SaleCondition'],drop_first=True)\nLotConfig = pd.get_dummies(train_data[\"LotConfig\"], drop_first=True)\nBsmtFinType1 = pd.get_dummies(train_data[\"BsmtFinType1\"], drop_first=True)","7a22adc6":"train_data.drop(['LandContour','MSZoning','LotShape', \n                 'Neighborhood', 'HouseStyle', 'BldgType',\n                 'Foundation', 'CentralAir', 'RoofStyle', \n                 'KitchenQual', 'Functional', 'GarageType', \n                 'SaleType', 'SaleCondition', 'LotConfig','LandSlope', 'BsmtFinType1'], axis = 1, inplace=True)","131c9a7f":"train_data = pd.concat([train_data,LandContour,MSZoning,LotShape,Neighborhood,HouseStyle,BldgType,Foundation,CentralAir,RoofStyle,KitchenQual,Functional,GarageType,SaleType,SaleCondition, LotConfig, BsmtFinType1],axis=1)","866972e3":"LandContour = pd.get_dummies(test_data['LandContour'],drop_first=True)\nMSZoning = pd.get_dummies(test_data['MSZoning'],drop_first=True)\nLotShape = pd.get_dummies(test_data['LotShape'],drop_first=True)\nNeighborhood = pd.get_dummies(test_data['Neighborhood'],drop_first=True)\nHouseStyle = pd.get_dummies(test_data['HouseStyle'],drop_first=True)\nBldgType = pd.get_dummies(test_data['BldgType'],drop_first=True)\nFoundation = pd.get_dummies(test_data['Foundation'],drop_first=True)\nCentralAir = pd.get_dummies(test_data['CentralAir'],drop_first=True)\nRoofStyle = pd.get_dummies(test_data['RoofStyle'],drop_first=True)\nKitchenQual = pd.get_dummies(test_data['KitchenQual'],drop_first=True)\nFunctional = pd.get_dummies(test_data['Functional'],drop_first=True)\nGarageType = pd.get_dummies(test_data['GarageType'],drop_first=True)\nSaleType = pd.get_dummies(test_data['SaleType'],drop_first=True)\nSaleCondition = pd.get_dummies(test_data['SaleCondition'],drop_first=True)\nLotConfig = pd.get_dummies(test_data[\"LotConfig\"], drop_first=True)\nBsmtFinType1 = pd.get_dummies(test_data[\"BsmtFinType1\"], drop_first=True)","6c80cebc":"test_data.drop(['LandContour','MSZoning','LotShape', \n                 'Neighborhood', 'HouseStyle', 'BldgType',\n                 'Foundation', 'CentralAir', 'RoofStyle', \n                 'KitchenQual', 'Functional', 'GarageType', \n                 'SaleType', 'SaleCondition','LotConfig','LandSlope', 'BsmtFinType1'], axis = 1, inplace=True)","e11d8d55":"test_data = pd.concat([test_data,LandContour,MSZoning,LotShape,Neighborhood,HouseStyle,BldgType,Foundation,CentralAir,RoofStyle,KitchenQual,Functional,GarageType,SaleType,SaleCondition, LotConfig, BsmtFinType1],axis=1)","cd521236":"train_data.info()","52fcac2a":"sns.countplot(train_data[\"Electrical\"])","5aa2d987":"train_data.drop(['Electrical'], axis=1, inplace=True)\ntest_data.drop(['Electrical'], axis=1, inplace=True)","6cc5c742":"train_data.columns\n","579337fd":"test_data.columns","aa875e5a":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(train_data.drop(['SalePrice'], axis=1),train_data['SalePrice'])","486424c6":"lm.coef_","e4593f20":"# Importing some visualization libraries","e13f0a5d":"# Dealing With Categorical Data","cddc548f":" # Important Step:  Exploratory Data Analysis and Data Cleaning","090255f9":"# Modelling","f1a677f7":"# Loading Data","84514ad0":"* Creating Dummies for test data","f1a39ee5":"* Creating Dummies for Train Data"}}