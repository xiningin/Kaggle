{"cell_type":{"cc6d6ea0":"code","4370c093":"code","bddb576b":"code","4c90b189":"code","65d15a46":"code","7c1337bb":"code","ea8edaba":"code","11ea92de":"code","6aeda946":"code","d1037611":"code","778c4de7":"markdown","a9d898a8":"markdown","680caf3e":"markdown","584ab510":"markdown","cf50e543":"markdown","320ae365":"markdown","c1a6393f":"markdown","e9e63ff1":"markdown","94b6f051":"markdown","4d49024f":"markdown","1e3b2031":"markdown","756f2eec":"markdown","22a22d4f":"markdown"},"source":{"cc6d6ea0":"import pandas as pd\nimport numpy as np\ndata = pd.read_csv(\"..\/input\/df_text_eng.csv\")\ndata.head()","4370c093":"del data['Unnamed: 0'] \nfrom io import StringIO\ndata['state_id'] = data['state'].factorize()[0]\nstate_id_df = data[['state', 'state_id']].drop_duplicates().sort_values('state_id')\nstate_to_id = dict(state_id_df.values)\nid_to_state = dict(state_id_df[['state_id', 'state']].values)\ndata.head()","bddb576b":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(8,6))\ndata.groupby('state').blurb.count().plot.bar(ylim=0)\nplt.show()","4c90b189":"import re\ndef clean(text):\n    text = str(text)\n    text = re.findall(r'\\w+', text)\n    return ' '.join(text)\ndata['blurb'] = data['blurb'].apply(lambda x: clean(x))","65d15a46":"from sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nx_train, x_test, y_train, y_test = train_test_split(data['blurb'], data['state'], train_size=0.8)\nvectorizer = TfidfVectorizer().fit(x_train)\nx_train_v = vectorizer.transform(x_train)\nx_test_v  = vectorizer.transform(x_test)","7c1337bb":"from sklearn.linear_model import LogisticRegression, SGDClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import classification_report\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import accuracy_score\nfrom time import time\nentries = []\ndef train():\n    models = {\n        \"LogisticRegression\": LogisticRegression(),\n        \"SGDClassifier\": SGDClassifier(),\n        \"Multinomial\":MultinomialNB(),\n        \"LinearSVC\": LinearSVC(),\n    }\n    for model in models:\n        print(\"training model\"+model)\n        start = time()\n        models[model].fit(x_train_v, y_train)\n        end = time()\n        print(\"trained in {} secs\".format(end-start))\n        y_pred = models[model].predict(x_test_v)\n        entries.append((model,accuracy_score(y_test, y_pred)))","ea8edaba":"train()","11ea92de":"cv_df = pd.DataFrame(entries, columns=['model_name','accuracy'])\nimport seaborn as sns\nsns.boxplot(x='model_name', y='accuracy', data=cv_df)\nsns.stripplot(x='model_name', y='accuracy', data=cv_df, \n              size=8, jitter=True, edgecolor=\"gray\", linewidth=2)\nplt.show()","6aeda946":"model = LogisticRegression()\nmodel.fit(x_train_v, y_train)\ny_pred = model.predict(x_test_v)\nfrom sklearn.metrics import confusion_matrix\n\nconf_mat = confusion_matrix(y_test, y_pred)\nfig, ax = plt.subplots(figsize=(10,10))\nsns.heatmap(conf_mat, annot=True, fmt='d',\n            xticklabels=state_id_df.state.values, yticklabels=state_id_df.state.values)\nplt.ylabel('Actual')\nplt.xlabel('Predicted')\nplt.show()","d1037611":"print(classification_report(y_test, y_pred))","778c4de7":"I want to check if there is impalanced class ","a9d898a8":"Now for text representation i will use tfidf model","680caf3e":"Now lets clean the text for training , i see no need to delete the stopwords so i will just remove punctuations","584ab510":"## Training ","cf50e543":"I will try multiple algorthims and see what gives better accuracy","320ae365":"## Text Representation","c1a6393f":"## Introduction:\n\n> Kickstarter is an American public-benefit corporation[2] based in Brooklyn, New York, that maintains a global crowdfunding platform focused on creativity and merchandising.[3] The company's stated mission is to \"help bring creative projects to life\".[4] Kickstarter has reportedly received more than $1.9 billion in pledges from 9.4 million backers to fund 257,000 creative projects, such as films, music, stage shows, comics, journalism, video games, technology and food-related projects.[5]\nPeople who back Kickstarter projects are offered tangible rewards or experiences in exchange for their pledges.[6] This model traces its roots to subscription model of arts patronage, where artists would go directly to their audiences to fund their work.[7][Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Kickstarter)\n\nSo, with the help of the crawlers of [webrobots](https:\/\/webrobots.io\/kickstarter-datasets\/), we got all the data from the run along 2017 kickstater projects and keep just those written in english and finished either as \"successful\" or \"failed\", and two columns:\n\n- the one with the blurb or short description of the project [text]\n- the one with the final state: \"successful\" if the project got the money goal in time or \"failed\" if don't [factor]","e9e63ff1":"Ok,it seems that LogisticRegression did the job.","94b6f051":"## Getting and preprocessing data:","4d49024f":"seems that there is no problem here","1e3b2031":"Here we organize the dataframe more and make colum for mapping the {'successful':1,'failed':0}","756f2eec":"> #### lets Visualize the accuracies","22a22d4f":"## Evaluation:\nnow lets look at the confusion matrix, and show the discrepancies between predicted and actual labels."}}