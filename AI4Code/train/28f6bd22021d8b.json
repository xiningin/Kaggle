{"cell_type":{"f28bad9f":"code","acb23937":"code","123cd89e":"code","15841974":"code","23e24fdf":"code","1be4fc71":"code","76152ed6":"code","5d6ca968":"code","535caa07":"code","a7724647":"code","6314349a":"code","a4d7d822":"code","d44b6b06":"code","662c3035":"code","2eacf27e":"code","b30234bc":"code","6cbfdddc":"code","e4edcd86":"code","29e69ee8":"code","52c864a2":"code","51898e8b":"code","e4f95302":"code","93772a04":"code","af2134bb":"code","e14f0617":"code","c93dfe8d":"code","51508a17":"code","2b393bde":"code","5f98e9d3":"code","d31572c6":"code","e072a13a":"code","0305990f":"code","6190519f":"code","9cadce89":"code","89708961":"code","1d49b9dc":"code","d8454689":"code","4f43c92f":"code","63ee4004":"code","6c60d316":"code","c8738302":"code","4e1c0b88":"code","e5bb3d05":"code","f5e26784":"code","1ddf34ca":"code","6d8b19f7":"code","a50d9a96":"code","7f538f3f":"code","150ddd6c":"code","05ecee58":"code","e47506aa":"code","991039c6":"code","81aa98d3":"code","c09329f4":"code","a64a95c6":"code","2774ed51":"code","360563bc":"code","1bbd4181":"code","d4229011":"code","8d2d962a":"code","158fd5a8":"code","85b90ba1":"code","9e554f00":"code","3d86603e":"code","876f6410":"code","d6bfebf8":"code","d1ffcac7":"code","8f001dc9":"code","2c66e392":"code","d15ac5b4":"code","8fbc1bc8":"code","d4c9a192":"code","76fb05fd":"code","0fb58768":"code","94acea15":"code","16ef0fcb":"code","3ec7e33b":"code","ad928dfd":"code","85721bcc":"code","52b7508f":"code","a0cf6138":"code","137b261f":"code","8b44e9d3":"code","88e30ba4":"code","d7898c24":"code","dc833d5f":"code","32f6f2d1":"code","22072af1":"code","52c71768":"code","3c750e02":"code","2217010c":"code","9f445301":"code","3092abd8":"code","fbbe2555":"code","0c2d28c6":"code","d78c4ba8":"code","3c591955":"code","4a96af81":"code","602a3639":"code","19f68a3e":"code","42073afe":"code","b14c8d9d":"markdown","ef5f210c":"markdown","a82e23c8":"markdown","238feeff":"markdown","c1d2681f":"markdown","493b790b":"markdown","03014883":"markdown","60f0cb9a":"markdown","81213a48":"markdown","c1734b90":"markdown","8db40b87":"markdown","538c026f":"markdown","317e3268":"markdown","baea6245":"markdown","87c13bfa":"markdown","b71aed2b":"markdown","db4c2568":"markdown","c98f3575":"markdown","0f9fe528":"markdown","622e4dfa":"markdown","8a85f417":"markdown","c9020854":"markdown","55fb2d7d":"markdown","2e583d9c":"markdown","9c2e8de9":"markdown","96b96742":"markdown","16ddda2d":"markdown","f09d86ba":"markdown","731e4c8a":"markdown","59d1f770":"markdown","8fc1619c":"markdown","8bca0399":"markdown","ac220ab4":"markdown","35feab7c":"markdown","27889c9f":"markdown","9fecf449":"markdown","00322230":"markdown","140f3c6f":"markdown","245c2231":"markdown","3313f75d":"markdown","d4a9e590":"markdown","d64793ad":"markdown","45d7cb2d":"markdown","94e4f73c":"markdown","95121dcc":"markdown","2989a24a":"markdown","33f033ee":"markdown","aa84a08f":"markdown","ca859264":"markdown","643262d0":"markdown","a28cb706":"markdown","8e3e8fab":"markdown","2d8983ac":"markdown","37eb3425":"markdown","0c0e4c28":"markdown","df0d10e9":"markdown","a25b2608":"markdown","e12effba":"markdown","ac97e6b5":"markdown","6c59f554":"markdown","7f523d6e":"markdown","3a5ae503":"markdown","4e6c5aa0":"markdown","5bff507d":"markdown","e748e59d":"markdown","3b7c58b7":"markdown","0a1ad262":"markdown","83d1465b":"markdown","3a3bce8d":"markdown","028fa5f3":"markdown","21a25cf5":"markdown","30e834fb":"markdown","c1d1c5bd":"markdown","653061bf":"markdown","7d431f9e":"markdown","3aedb1d5":"markdown","52e223e8":"markdown","06741c7e":"markdown","aed024ee":"markdown","1f720afa":"markdown","528b5385":"markdown","82cbf32d":"markdown"},"source":{"f28bad9f":"import pandas as pd\nimport numpy as np","acb23937":"df = pd.read_csv('..\/input\/divvy-cyclist-04-20-to-04-21\/Divvy_Cyclist.csv', low_memory=False)","123cd89e":"print(df.shape)","15841974":"print(df.dtypes)\n","23e24fdf":"df.isna().sum()","1be4fc71":"print(df.head())","76152ed6":"df.shape","5d6ca968":"duplicate_df = df[df.duplicated()]\nprint(duplicate_df.shape)","535caa07":"id_ride = df.ride_id.unique()\nid_start = df.start_station_id.unique()\nid_end = df.end_station_id.unique()\nprint(len(id_ride), len(id_start), len(id_end))","a7724647":"df = df.drop(['ride_id', 'start_station_id', 'end_station_id'], axis = 1)","6314349a":"df = df.rename(columns = {'rideable_type' : 'Bike_Type', 'started_at' : 'Start_Time', 'ended_at' : 'End_Time', 'start_station_name' : 'Starting_Station', 'end_station_name' : 'Ending_Station', 'member_casual' : 'Rider_Status', 'start_lat' : 'Starting_Latitude', 'start_lng' : 'Starting_Longitude','end_lat' : 'Ending_Latitude', 'end_lng' : 'Ending_Longitude'})\ndf.head()","a4d7d822":"df.dtypes","d44b6b06":"from datetime import datetime","662c3035":"#Convert to time format\ndf['Start_Time'] = pd.to_datetime(df['Start_Time'])\ndf['End_Time'] = pd.to_datetime(df['End_Time'])\n","2eacf27e":"df.dtypes","b30234bc":"df['Ride_Length'] = ((df['End_Time'] - df['Start_Time']).dt.days) * 24 + ((df['End_Time'] - df['Start_Time']).dt.seconds)\/ 3600","6cbfdddc":"df['Day_of_Week'] = df['Start_Time'].dt.day_name()\nprint(df.head())","e4edcd86":"df_short = df.drop(['Start_Time', 'End_Time', 'Starting_Station', 'Ending_Station', 'Starting_Latitude', 'Ending_Latitude', 'Starting_Longitude', 'Ending_Longitude'], axis=1 )","29e69ee8":"df_short.groupby(['Day_of_Week', 'Rider_Status']).mean()","52c864a2":"df_short.groupby('Rider_Status')['Rider_Status'].count()","51898e8b":"import seaborn as sns                       #visualisation\nimport matplotlib.pyplot as plt             #visualisation\n%matplotlib inline     \nsns.set(color_codes=True)\n\nsns.boxplot(x=df['Ride_Length'])","e4f95302":"df['Ride_Length'].describe()","93772a04":"df_sort = df.sort_values('Ride_Length')\ndf_sort.head()","af2134bb":"df_time_error = df[df['Ride_Length']<0]\ndf_time_error.count()","e14f0617":"df_time_error['Start_Time'].max()","c93dfe8d":"df_time_error['Start_Time'].min()","51508a17":"df_time_error.groupby('Day_of_Week')['Rider_Status'].count()","2b393bde":"df_time_error.groupby('Rider_Status')['Start_Time'].count()","5f98e9d3":"df_time_high = df[df['Ride_Length']>24]\ndf_time_high.count()","d31572c6":"df_clean = df[(df['Ride_Length'] < 24) & (df['Ride_Length'] > 0)]\ndf.shape","e072a13a":"df_clean.shape","0305990f":"sns.boxplot(x=df_clean['Ride_Length'])","6190519f":"df_clean.groupby(['Day_of_Week', 'Rider_Status'])['Ride_Length'].mean()","9cadce89":"print(df_clean.isnull().sum())","89708961":"df_clean = df_clean.dropna()","1d49b9dc":"print(df_clean.isnull().sum())","d8454689":"df.head()","4f43c92f":"df['Bike_Type'].value_counts()\n","63ee4004":"df['Starting_Station'].value_counts(),","6c60d316":"df['Starting_Longitude'].describe()","c8738302":"df['Starting_Latitude'].describe()","4e1c0b88":"#Cleaning up our columns:\n\ndfML = df.drop(['Starting_Station', 'Ending_Station', 'End_Time', 'Starting_Latitude', 'Ending_Latitude', 'Starting_Longitude', 'Ending_Longitude'], axis='columns')\ndfML.head()\n","e5bb3d05":"dfML['Ride_Length'] = dfML['Ride_Length'] * 60","f5e26784":"dfML['Ride_Length'] = dfML['Ride_Length'].astype(int)","1ddf34ca":"dfML.head()","6d8b19f7":"#Break datetime into integer value for Month\ndfML['Month'] = dfML['Start_Time'].dt.month","a50d9a96":"dfML.Month.value_counts()","7f538f3f":"dfML['Season'] = pd.cut(dfML['Month'],\n                            [0,3,9,12],\n                            labels = ['Cold', 'Warm', 'Cold'],\n                             include_lowest=True,\n                            ordered=False)","150ddd6c":"dfML['Part_of_Week'] = np.where((dfML['Day_of_Week'] == 'Saturday') | (dfML['Day_of_Week'] == 'Sunday'), 1,0)","05ecee58":"dfML.head()","e47506aa":"#Break datetime into integer value for hour\ndfML['Hours'] = dfML['Start_Time'].dt.hour","991039c6":"dfML['Part_of_Day'] = pd.cut(dfML['Hours'],\n                            [0,4,8,16,20,23],\n                            labels = ['Late_Night', 'Morning', 'Afternoon','Evening', 'Night'],\n                             include_lowest=True,\n                            ordered=False)\n                                                         ","81aa98d3":"dfML.Part_of_Day.value_counts()","c09329f4":"dfML.head()","a64a95c6":"dfML['Ride_Type'] = np.where(dfML['Rider_Status'] == 'member',1,0)","2774ed51":"bt_dummies = pd.get_dummies(dfML['Bike_Type'])","360563bc":"seasons_dummies = pd.get_dummies(dfML['Season'])","1bbd4181":"pod_dummies = pd.get_dummies(dfML['Part_of_Day'])","d4229011":"dfML = pd.concat([dfML, bt_dummies, seasons_dummies, pod_dummies], axis=1)","8d2d962a":"dfML = dfML.drop(columns = ['Part_of_Day', 'Day_of_Week', 'Season','Start_Time', 'Bike_Type', 'Rider_Status'])","158fd5a8":"dfML.head()","85b90ba1":"dfML.isna().sum()","9e554f00":"from sklearn.model_selection import train_test_split\ny = dfML['Ride_Type']\nX = dfML.drop(['Ride_Type'], axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3, random_state=30)","3d86603e":"#checking training data \ny_train.value_counts()","876f6410":"X_train.value_counts()","d6bfebf8":"#checking test data\nX_test.value_counts()","d1ffcac7":"y_test.value_counts()","8f001dc9":"#Lets double check we have no relevant nulls\nX_test.isna().sum()","2c66e392":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report","d15ac5b4":"clf = RandomForestClassifier(n_estimators = 100, random_state = 20)\nrf_train = clf.fit(X_train,y_train)","8fbc1bc8":"y_pred = clf.predict(X_test)","d4c9a192":"clf.predict_proba(X)[0:5]","76fb05fd":"importance = list(zip(X, clf.feature_importances_))\nimportance","0fb58768":"print(classification_report(y_test, y_pred))","94acea15":"accuracy = (metrics.accuracy_score(y_test, y_pred)) * 100\naccuracy","16ef0fcb":"dfML_time = dfML[['Ride_Type','Ride_Length', 'Month', 'Hours', 'Part_of_Week']].copy()","3ec7e33b":"yt = dfML_time['Ride_Type']\nXt = dfML_time.drop(['Ride_Type'], axis=1)\nXt_train, Xt_test, yt_train, yt_test = train_test_split(Xt,yt, test_size=0.3, random_state=30)","ad928dfd":"clft = RandomForestClassifier(n_estimators = 100, random_state = 20)\nrft_train = clft.fit(Xt_train,yt_train)","85721bcc":"yt_pred = clft.predict(Xt_test)","52b7508f":"clft.predict_proba(Xt)[0:5]","a0cf6138":"impt = list(zip(Xt, clft.feature_importances_))\nimpt","137b261f":"print(classification_report(yt_test, yt_pred))","8b44e9d3":"acct = (metrics.accuracy_score(yt_test, yt_pred)) * 100\nacct","88e30ba4":"dfML_temp = dfML[['Ride_Type','Ride_Length', 'Cold', 'Warm']].copy()","d7898c24":"ytp = dfML_temp['Ride_Type']\nXtp = dfML_temp.drop(['Ride_Type'], axis=1)\nXtp_train, Xtp_test, ytp_train, ytp_test = train_test_split(Xtp,ytp, test_size=0.3, random_state=30)\n\nclftp = RandomForestClassifier(n_estimators = 100, random_state = 20)\nrftp_train = clftp.fit(Xtp_train,ytp_train)\n\nytp_pred = clftp.predict(Xtp_test)","dc833d5f":"clftp.predict_proba(Xtp)[0:5]","32f6f2d1":"print(classification_report(ytp_test, ytp_pred))","22072af1":"imptp = list(zip(Xtp, clftp.feature_importances_))\nimptp","52c71768":"acctp = (metrics.accuracy_score(ytp_test, ytp_pred)) * 100\nacctp","3c750e02":"dfML_PoD = dfML[['Ride_Type','Late_Night', 'Morning', 'Afternoon', 'Evening', 'Night']].copy()","2217010c":"yp = dfML_PoD['Ride_Type']\nXp = dfML_PoD.drop(['Ride_Type'], axis=1)\nXp_train, Xp_test, yp_train, yp_test = train_test_split(Xp,yp, test_size=0.3, random_state=30)\n\nclfp = RandomForestClassifier(n_estimators = 100, random_state = 20)\nrfp_train = clfp.fit(Xp_train,yp_train)\n\nyp_pred = clfp.predict(Xp_test)","9f445301":"clfp.predict_proba(Xp)[0:5]","3092abd8":"print(classification_report(yp_test, yp_pred))","fbbe2555":"imp = list(zip(Xp, clfp.feature_importances_))\nimp","0c2d28c6":"accp = (metrics.accuracy_score(yp_test, yp_pred))* 100\naccp","d78c4ba8":"dfML_Best = dfML[['Ride_Type','Ride_Length', 'Morning', 'Hours', 'docked_bike']].copy()","3c591955":"yb = dfML_Best['Ride_Type']\nXb = dfML_Best.drop(['Ride_Type'], axis=1)\nXb_train, Xb_test, yb_train, yb_test = train_test_split(Xb,yb, test_size=0.3, random_state=30)\n\nclfb = RandomForestClassifier(n_estimators = 100, random_state = 20)\nrfb_train = clfb.fit(Xb_train,yb_train)\n\nyb_pred = clfb.predict(Xb_test)","4a96af81":"clfb.predict_proba(Xb)[0:5]","602a3639":"print(classification_report(yb_test, yb_pred))","19f68a3e":"impb = list(zip(Xb, clfb.feature_importances_))\nimpb","42073afe":"accb= (metrics.accuracy_score(yb_test, yb_pred)) * 100\naccb","b14c8d9d":"### For this notebook, I loaded and merged all files with pandas, as described below, and then uploaded to kaggle\n\nThe merged, pre-cleaned dataset can be found here: [Divvy Cyclist Dataset](https:\/\/www.kaggle.com\/michaelmcray\/divvy-cyclist-04-20-to-04-21)\n\n```\nimport pandas as pd\nimport numpy as np\n\n#List to hold dataframes\ndf_list = []\n\nfor file in \/file_location\/csv_files:\n    df_csv = pd.read_csv(file)\n    df_list.append(df_csv)\n    \n#Ensure all 13 files were added to the list\nprint(len(df_list))\n```\n\n#### Use Concat to combine all files into single dataframe\n\n`df = pd.concat(df_list, axis=0)`","ef5f210c":"**Let's break down a few of these columns and see how many unique values we have:**","a82e23c8":"It looks like we might have some questionable data for ride length with some times showing negative.  Lets make a quick box plot to check outliers.\n","238feeff":"### Delete Columns","c1d2681f":"# Prepare\n\nLocate, Organize and Verify the Data","493b790b":"**The following will let us split our monthly time into warm\/cold**","03014883":"#### Facts worth note in the case study:\n- Cyclist has 5824 bicycles and 692 docking stations all in Chicago\n- Cyclist offers reclinging bikes, hand tricycles and cargo bikes to aid with riders who may have dissabilities.  \n - These only make up for ~8 of riders\n- 30% of cyclists ride to commute to work each day ","60f0cb9a":"## Just the best performers:","81213a48":"### Weekly Breakdown\n![dpw.png](attachment:dpw.png)\n#### What we found:\n- Member rides are highest on Saturday but fairly consistent.\n- Casual rides are much higher in the weekend.\n\n#### What we don't know:\n- If any monthly outliers are efficting this.\n\n#### Considerations:\n- How can we leverage more Casual rides during the week or market to member riders on the weekend.","c1734b90":"## What time of day and year are they riding?\n\n### Monthly breakdown:\n\n![Monthly.PNG](attachment:Monthly.PNG)\n\n#### What we found:\n- In summer months, member and casual rides are nearly equal.\n- This drastically falls off between November and March with members going for over twice as many rides as casuals for those months.\n\n#### What we don't know:\n- The weather is likely a large factor here, but so may location of bikes. \n\n#### Considerations:\n- Could something be done to spark casual interest in rides even in the colder months?\n","8db40b87":"### Data Summary:\n\nWe are provided zip files from an Amazon S3 Cloud storage including monthly and quarterly data since the company started.\n\nWe download the last 12 months (April 2020 - April 2021) which include csv files with data on:\n- ride_id\n- rideable_type\n- start & end times, stations and longitute\/latitude\n- rider status: member or casual\n\n### Data Acquisition method:\n\nCurrently unknown\n\n### Data Licensing:\n\nCan be found [here](https:\/\/www.divvybikes.com\/data-license-agreement)\n\n### Data organization and verification:\n\nThese files contain 10s of thousands of rows each.  \n\nDue to the amount of data, we will use Python via Jupyter Notebook and clean\/view\/merge our data with the Pandas library.  ","538c026f":"# Process Data\n\nDetermine any errors, reformat as necessary, prepare to create visualizations","317e3268":"#### We are assigned the question:\n\nHow do annual members and casual riders use Cyclistic bikes differently?\n    \nFollowing the **ask, prepare, process, analyze, share and act** data analysis process you are to deliver a report including:\n- A clear statement of the business task\n- A description of all data sources used\n- Documentation of any cleaning or manipulation of data\n- A summary of your analysis\n- Supporting visualizations and key findings\n- Your top three recomendations based on your analysis","baea6245":"df_clean = df_clean.to_csv('\/\/Divvy_Cyclist.csv', index=False)\n","87c13bfa":"### The following is a case study done as part of Google's Data Analyst Professional certification. \n\n**Note:**  While the course does not include Python, I've decided to use it for this case study.  Some of the steps were done more for fun then for time efficiency.  The case study includes some guided steps that I diverge from slightly.  I acknowledge that there would have been faster or more efficient methods if this were a real assignment. \n\nAdditionally, this document is reflective of the process as outlined in the course, not as a final stakeholder deliverable.","b71aed2b":"# Import RandomForestClassifier for our algorithm:","db4c2568":"**Results**: 10557 rows where End time is before start time.  Out of 3826978 rides this is less then 1\/4 of a percent.  Still We'll take a quick look to see if we can find any other correlations.","c98f3575":"#### Observation\n- Much lower accuracy ~8% and poor F1 score without Ride Length included\n- Importance score for morning now reflective of the difference we saw in our analysis","0f9fe528":"### Check our available column names and data types","622e4dfa":"### Reviewing data types","8a85f417":"- id_ride = approximately 3826800;\n- id_start, id_end were ~1800","c9020854":"# ASK\n\nWhat problem are we trying to solve and how will it drive business decisions?","55fb2d7d":"#### Observation\n- Only slightly worse performance then with all our variables, 0.8% accuracy\n- Once again, heavily weighted on Ride Length","2e583d9c":"# Experimenting with Machine Learning\n\nIt seems irresponsible to run this on Kaggle and not at least put the data through a machine learning algorithm. \n\n### Goals:\n- Gain insight into how similar\/different our two ride types are based on ability for ML to accurately predict. \n- Determine which variables are most important in predictions\n\n### Note:  This is a very basic approach to ML using Random Forest Classification to see what insight can be gained on the goals listed.  Any feedback, or suggestions for other algorithms\/methods are appreciated.","9c2e8de9":"## Conclusion:\n**So how do annual members and casual riders use Cyclistic bikes differently**\n1. Length (Duration)\n- Members are more consistent riders from day to day, while casual rides last on average twice as long.  This could be doe to price structure making short trips less economic for casual rides, marketing towards leisure instead of convenience etc.\n2. When (Day, Week, Month)\n- Member rides spike during the normal start and of the business day, where casual rides start slower and increase\/decrease at a steadier rate\n- Casual riders prefer weekends, where members are more frequent on the weekdays especially around the start and end of work.  This is likely due to members being more likely to use the bikes for commutes, and casuals for leisure.\n- All rides are down in the colder months, but casual riders all but dissapear then are nearly as frequent as members in the summer.\n3. What (Type of Bike)\n- Members adopted the classic bike faster then casual riders and now strongly prefer them where casual riders are showing a returned interest in docked bikes.\n- **(Assumption)** Members are more likely to adapt to a new type of bike, but casual riders will more likely ride what is available.  \n - This is an assumption due to not knowing what accentives, bike availability, or price structures each group includees.\n","96b96742":"### Rename Columns","16ddda2d":"### Check for duplicate rows","f09d86ba":"# Import sklearn and split our data into training and testing data","731e4c8a":"### Intro Summary: \n\nWe work for the marketing department for a bike share company out of Chicago.  The company has three payment methods: single ride, full day passes, and annual memberships.  Annual membership holders are considered members, while all others are considered casual riders.  The companies marketing strategy has to now been based around building awareness and appealing to a large audience.  The marketing director, Moreno, believes that the future of the company resides in turning more casual riders into members and wants to focus the marketing strategy, but requires approval from the executive team.\n\n","59d1f770":"### Quickview of our first 5 rows","8fc1619c":"### Check for Null values","8bca0399":"# Wrapping Up:  Google's Data Analysis Case Study\n\nThis concludes the case study portion of my analysis.  I enjoyed my time pouring through the data and trying to gleam some insight into what makes these ride types different.  If I was an employee of this company, I'd love to know more about the locations, the number of users of each type involved with these rides, and spend more time looking into the paths and distances of each trip.\n\nIn the next section, I'm going to experiment a little bit with running the data through some beginner Machine Learning algorithms. This is unrelated to the assigned case study, but may provide some fun insight.","ac220ab4":"Start by creating a new dataframe with reduced columns to check our ride length calculation. Ride length times are in hours.","35feab7c":"### Train our RFC model","27889c9f":"## Business task:\n\nWith the provided data what can we determine about the ways casual riders and members use Cyclistic bikes, what tendancies they share, and how do they differ.","9fecf449":"## Time to add all our dummy frames into our dataFrame\n\n**Note: Also remove redundant columns**","00322230":"Less then 0.1 % of rides last over 24 hours.  For now, we'll remove these values as well. I'll create a new dataframe with the removed rows in case I want to compare the two.","140f3c6f":"### What type of bikes are they riding?\n![Bike%20Rides.PNG](attachment:Bike%20Rides.PNG)\n#### What we found:\n- Classic bikes appear to be implemented around December 2020.\n- Members appear to have taken to the classic bikes more quickly then the casual riders.\n- Around the end of February casual riders became interested in the docked bikes again while the member riders stuck with the classic.\n\n#### What we don't know:\n- Really much of anything about what entails these different bike types.\n- What incitive there is to ride any of these variations.\n\n#### Considerations:\n- We'd need more information on the types of bikes to make a solid recommendation but it's worth pointing out the difference in user levels especially as the difference is increasing at the time of the investigation.","245c2231":"### Check if ids unique or specific to rider\/location","3313f75d":"# Google Data Analyst Professional: \n\n### Case Study: Cyclist Bike Share\n","d4a9e590":"#### Potential Bias' to keep in mind:\n- Your told that membership holders are more profitable.  It makes logical sense, but we have not seen any data to back that up.\n- Moreno appears to have already decided the course of action, market towards casual riders to get more members.  They may be looking to steer the data to prove this point.\n- Moreno believes that casual riders are already aware of membership offerings.","d64793ad":"### Reducing our variables:\n- Both the start station name and ID have too many distinct values to categorize for this.  If I knew more about the area, maybe we could break them into sections of the town, but for now we'll remove.\n- We'll continue to use Start Time and remove End Time\n- ride_id is a unique column\n- Latitude and Longitude data","45d7cb2d":"**0 duplicated rows, great!**","94e4f73c":"Now we'll check for any more nulls and remove those as well.","95121dcc":"# Analyze & Share","2989a24a":"## Let's get started  with our data:  \n\n#### We'll import our libraries for analysis and load our merged csv.","33f033ee":"## For how long are they riding?\n![Duration.PNG](attachment:Duration.PNG)\n#### What we found:\n- Casual rides tend to last almost twice as long as member rides.\n- Shorter rides are unsurprisingly in the winter and longest in the winter.\n- Members are more consistant with their ride durations with average ride duration ranging between 12-19 minutes compared to 22 and 44 for the casuals.\n\n#### What we don't know:\n- What ending and starting locations relate to these shorter and longer rides.\n- How the number of unique users may relate to this data. \n\n#### Considerations:\n- It was stated in the case study that members tended to be more likely to use the vehicles for transportation to work.  This could explain the steadier trend and lower average","aa84a08f":"## Begin Inspecting:\n\nWe'll look through our data for nulls, duplicates, poor formatting and outliers.\n\n### Check number of rows and columns:","ca859264":"# Act","643262d0":"### Now we'll seperate our daily time into hours\n\n**In our analysis we determined members had large spikes in rides during morning and evening commutes.  These maybe beneficial for our model to predict**\n- The following will let us split our hourly time into parts of the day","a28cb706":"### Add some informative Columns:\n- We'll start by creating a 'Ride Length' Column expressing a difference in Start and End times.  I found this a bit clunky in Pandas, but ended up with a result in decimal of hours.\n- Second, we'll find the day of the week coresponding to each Start Time.\n","8e3e8fab":"# Final Note:\n\nTo anyone tha makes it this far, thanks for reading.  I'd appreciate any feedback.  Many of these steps could have been simplified, but I've enjoyed experimenting in different areas.\n\n### To do:\n- Code and Text clean up\n- Consistent formatting\n- Create a data cleaning summary\n","2d8983ac":"#### Key Stakeholders:\n- Moreno, Director of Marketing and your boss, is certain the key to the company's future is turning casual riders into members.\n\n- The executive team who will be deciding whether to move forward with the marketing program.  All we know is that they are described as 'detail-oriented'","37eb3425":"#### Observations\n\n- Nearly identical accuracy with ride length now nearly 75% of the importance\n- Hours measuring as high in importance as months and part of week combined.","0c0e4c28":"### Now we'll export the data to a csv and load into Tableau Public to visualize.","df0d10e9":"#### Observation:\n- Only slightly lower scores\n- Ride Length now taking up over 92% of the importance","a25b2608":"## Where are they riding?\n\nThe following gif shows start locations for members, casuals and combined:\n\n![5aer3n.gif](attachment:5aer3n.gif)\n\n#### What we found:\n- From this graphic there doesn't appear to be a large difference between members and casuals.\n- A seperate graph of ending locations showed comprable results.\n- Most rides appear to be clustered in the metro area.\n\n#### What we don't know:\n- The relation of ending location or duration of these trips. \n- The time of the day\/year these trips were taken\n\n#### Considerations:\n- Further examinations of this based on time or specific areas may add beneficial information.","e12effba":"## Now we'll break our categorical data into numerical form using One-Hot Encoding via pandas get_dummies.  \n\n### We'll do this for our 'Rider Status', 'Bike Type', 'Season' and 'Part_of_Day' columns\n\n[Here]('https:\/\/towardsdatascience.com\/what-is-one-hot-encoding-and-how-to-use-pandas-get-dummies-function-922eb9bd4970') is a simple guide on One hot encoding.\n\nI could likely do this by changing the labels of the columns we cut, but I'm going to experiment with this method first","ac97e6b5":"**Note**:\n- started_at & ended_at should be datetime columns, but are showing as object.\n - Object means the columns may have string or mixed data.  \n - We'll need to investigate further.","6c59f554":"Appear to have been happening for the entire year, reasonably spread out through the days of the week.  For now, I'm going to remove this data, but definitely something I'd investigate a little further if possible. ","7f523d6e":"**The following will let us split our hourly time into parts of the day**","3a5ae503":"Quick review of our header:","4e6c5aa0":"### From our earlier analysis we accessed the key difference in ride types were ride length(duration) , ride time(hour of day, day of week, month of year), and to a lesser extend bike type   \n\n**Let's break these down a bit so they can be categories**\n\n#### From our Rider per Month chart their seems to be two distinct areas: Colder months (October-March) and Warmer months (April-September)","5bff507d":"### Let's seperate our 'Day of Week' column based on weekday or weekend\n- In our chart we can see the count of casual rides drops much lower then members during weekdays","e748e59d":"**Lets move ahead and clean up our ride length data by getting minutes (multiple x 60) and setting to integer.**","3b7c58b7":"# Final thoughts\n\n- Ride Length comes out the heavy winner in most important variable when trying to determine if a ride was casual or a member \n- Business accumen on this industry and the city of Chicago, along with further user data could help with our assessment\n- Much more time could be spent trying different algorithms, adjusting our variables and hypertuneing","0a1ad262":"We indeed have some negative values and an unexpectedly large standard deviation.  Well create a new dataframe and sort and remove these values.","83d1465b":"**Note**:\n- Sizable amount of nulls in the station columns (~20%).  \n- Ended up deleting after further evaluation.","3a3bce8d":"### Investigate data to determine any additional cleaning needed","028fa5f3":"Our **Assignment** was 'How do annual members and casual riders use Cyclistic bikes differently?'\n\nFirst lets list some questions that we can ask to determine thes differences:\n- Who are taking these rides, members or casuals?\n- Where are they riding?\n- For how long are they riding?\n- What times of the day and year are they riding?\n- What type of bikes are they riding?\n\nAfter loading the data into Tableau Public the following charts were developed to address these questions.","21a25cf5":"## First we will need to further process our data before we can begin:","30e834fb":"## Just the times of day by our grouped categories","c1d1c5bd":"### Let's take another look at longitude and latitude","653061bf":"## Just  Ride lenght and cold\/warm months","7d431f9e":"**There might be enough variance in latitude to take a closer look.  We might be able to scale it to something useful, but for now we'll remove it for simplicity**","3aedb1d5":"## Who is taking the rides?\n![TotalTime.PNG](attachment:TotalTime.PNG)\n\n#### What we found:\n- There was over 3.5 million rides between April 2020 and April 2021.\n- For these rides, nearly 59% were members and 41% were casuals.\n\n#### What we don't know:\n- How many of these rides were from the same individuals.  Our information is specific to the ride and not the user.\n\n#### Considerations:\n- Suprised by the high percentage of members.  I expected them to be a minority.","52e223e8":"## Let's try with fewer variables\n- We'll keep Ride Length, but focus on the time variables\n- The 'Part of Day' variables may need some adjusting or maybe its just adding too many variables.","06741c7e":"#### Start Time, End Time should are objects but should be datetime dtypes","aed024ee":"### Hourly Breakdown\n\n![Hourly.PNG](attachment:Hourly.PNG)\n\n#### What we found:\n- Member rides spike heavily between 6-8 AM and again between 4 and 6 PM. They also have a peak around noon (lunch)\n- Casual rides begin more slowly at the start of the day but ramp up more consistently.\n\n#### What we don't know:\n- How this varies by month to month\n\n#### Considerations:\n- This is likely again do the people using the bikes for transportation to work.\n- It's interesting that casual rides don't decrease as quickly in the evenings, although they do begin declining at the same time as member rides.","1f720afa":"#### id_ride is apparently unique while station id is tied to station name\n- We'll delete the id_ride column since we're not planning to use SQL and currently don't need a unique column\n- Well delete the station id's because the station names will be easier for our stakeholder's to understand","528b5385":"### Seperate our Rider Status into member = 1, casual = 0","82cbf32d":"### Observations:\n- Not surprised Ride Length is the highest importance since this data showed the greatest deviation, but surprised it seems the only relevant variable.\n- Expected more signifigance from some of the grouped time and season categories.  The way I have these split may need to be reassesed.\n"}}