{"cell_type":{"4e95f1a4":"code","e16bc721":"code","aa7c4bde":"code","c41d48e4":"code","479e8ade":"code","2e972b63":"code","2fddb504":"code","e20e0b1f":"code","ae2df3cb":"code","44fb5bfb":"code","a457d0fb":"code","91c4a148":"code","b2c2e8e1":"code","6d9cf7d0":"code","9dd3848f":"code","82f7e2e9":"code","58ab1647":"code","26cdfd88":"code","41e7736c":"code","cf75bc2e":"code","e99c02c8":"code","359aae98":"code","aebf506c":"code","9196ec58":"code","51f91f24":"code","aba5cc5c":"code","9447e6e1":"code","a502b151":"code","1e8e99a9":"code","55052a43":"code","52e75257":"code","724dcaa6":"code","42223f36":"code","527043ac":"markdown","37695beb":"markdown","a5265c53":"markdown","237ba592":"markdown","188ebb72":"markdown","aaf5fa53":"markdown","1659a36a":"markdown","a36d5a16":"markdown","885d4cde":"markdown","9036e67a":"markdown","ecdde2e1":"markdown","fd4f0e9e":"markdown","a1abbcfc":"markdown","cfe8b4da":"markdown","33da9d8c":"markdown","b1047b0d":"markdown","9cdab493":"markdown","78f16550":"markdown","bdd70175":"markdown","f06471ec":"markdown","742ecd5c":"markdown","01cffe1f":"markdown","99e44835":"markdown","5c003fa0":"markdown","0e513234":"markdown","7e8eda0f":"markdown","5bcf9a26":"markdown"},"source":{"4e95f1a4":"import pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import roc_auc_score\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import metrics\n","e16bc721":"df = pd.read_csv('\/kaggle\/input\/flight-delays\/flights.csv', low_memory=False)\ndf","aa7c4bde":"df = df[0:100000]","c41d48e4":"df.shape","479e8ade":"df.info()","2e972b63":"df.value_counts('DIVERTED')","2fddb504":"sns.jointplot(data=df, x=\"SCHEDULED_ARRIVAL\", y=\"ARRIVAL_TIME\")","e20e0b1f":"df.corr()","ae2df3cb":"df[df.columns[1:]].corr()['ARRIVAL_DELAY'][:].sort_values(ascending=False)","44fb5bfb":"df=df.drop(['YEAR','FLIGHT_NUMBER','AIRLINE','DISTANCE','TAIL_NUMBER','TAXI_OUT', 'SCHEDULED_TIME','DEPARTURE_TIME','WHEELS_OFF','ELAPSED_TIME', 'AIR_TIME','WHEELS_ON','DAY_OF_WEEK','TAXI_IN','CANCELLATION_REASON'], axis=1)","a457d0fb":"#### Remaining columns after droping inwanted columns","91c4a148":"df.columns","b2c2e8e1":"df.shape","6d9cf7d0":"df.isna().sum()","9dd3848f":"df=df.fillna(df.mean())","82f7e2e9":"df.isna().sum()","58ab1647":"sns.heatmap(df.corr(), annot=True, cmap=\"PuBuGn\" ,fmt='g')","26cdfd88":"result=[]\nfor row in df['ARRIVAL_DELAY']:\n    if row > 15:\n        result.append(1)\n    else:\n        result.append(0)  ","41e7736c":"df['result'] = result","cf75bc2e":"df.head()","e99c02c8":"#### Unique counts of 'result' columns, wheather 0 indicate        and 1 is       .","359aae98":"df['result'].value_counts()","aebf506c":"df=df.drop(['ORIGIN_AIRPORT', 'DESTINATION_AIRPORT', 'ARRIVAL_TIME', 'ARRIVAL_DELAY'],axis=1)\ndf.columns","9196ec58":"df = df.values\nX, y = df[:,:-1], df[:,-1]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","51f91f24":"scaled_features = StandardScaler().fit_transform(X_train, X_test)","aba5cc5c":"clf = DecisionTreeClassifier()\nclf = clf.fit(X_train,y_train)","9447e6e1":"pred = clf.predict_proba(X_test)","a502b151":"auc_score = roc_auc_score(y_test, pred[:,1])\nauc_score","1e8e99a9":"print('AUC Score of Model is: {} %'.format(round(auc_score*100,2)))","55052a43":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nresult1 = confusion_matrix(y_test, pred[:,1])\nprint(\"Confusion Matrix:\")\nprint(result1)\nprint('')\nresult2 = classification_report(y_test, pred[:,1])\nprint(\"Classification Report:\",)\nprint (result2)\nresult3 = accuracy_score(y_test,pred[:,1])\nprint(\"Accuracy:\",result3)","52e75257":"class_names=[0,1]\nfig,ax=plt.subplots()\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks, class_names)\nplt.yticks(tick_marks, class_names)\nsns.heatmap(pd.DataFrame(result1), annot=True, cmap=\"PuBuGn\" ,fmt='g')## visualized confusion matrix using heatmap\nax.xaxis.set_label_position(\"top\")\nplt.tight_layout()\nplt.title('Confusion matrix', y=1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')","724dcaa6":"plt.subplots(1, figsize=(10,6))\nplt.title('Receiver Operating Characteristic - DecisionTree')\ny_pred_proba = clf.predict_proba(X_test)[::,1]\nfpr, tpr, _ = metrics.roc_curve(y_test,  y_pred_proba)\nplt.plot(fpr, tpr)\nplt.plot([0, 1], ls=\"--\")\nplt.plot([0, 0], [1, 0] , c=\".7\"), plt.plot([1, 1] , c=\".7\")\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","42223f36":"print(\"Accuracy Achieved:\",round(metrics.accuracy_score(y_test, pred[:,1])*100,2),'%')\nprint(' ')\nprint(\"Precision Achieved:\",round(metrics.precision_score(y_test, pred[:,1])*100,2),'%')\nprint(' ')\nprint(\"Recall Achieved:\",round(metrics.recall_score(y_test, pred[:,1])*100,2),'%')","527043ac":"#### Unique counts of 'DIVERTED' columns, wheather 0 indicate Not Diverted and 1 is Diverted.","37695beb":"#### Confuction Matrix using Heatmap","a5265c53":"#### Replacing Null values with mean","237ba592":"#### Receiver Operating Characteristic (ROC) curve of DecisionTreeClassifier","188ebb72":"#### Shape of dataset","aaf5fa53":"#### Info of datasset","1659a36a":"#### Preview after adding new column 'result'","a36d5a16":"#### Droping unwwanted columns (i.e not highly co-related)","885d4cde":"#### Here we notice that there are no dependent variable yet which serves as our result wheather flight is delayed or not. \n\n#### So here I'm creating new feature called 'result' which takes the value 0 and 1. O for the resulting flight is not delayed and 1 for flight delayed.\n\n#### Here I'm Imputing these values by using the condition if 'ARRIVAL_DELAY' is greater than 15 then imputing 1 else o.","9036e67a":"#### AUC score of Model","ecdde2e1":"#### Accuracy, Precision, and Recall achived by model.","fd4f0e9e":"#### Correlation of features with 'ARRIVAL_DELAY'","a1abbcfc":"#### Confusion Matrix and Classification Report","cfe8b4da":"### Thank you :)","33da9d8c":"#### Feature Scalling","b1047b0d":"# Data Science Internship at Widhya","9cdab493":"#### Subsetting only 100000 rows for analysis","78f16550":"#### Model: DecisionTreeClassifier","bdd70175":"#### Shape of dataset","f06471ec":"## Mission: Flight Delay Prediction","742ecd5c":"#### Correlation","01cffe1f":"#### Reading & Previewing dataset","99e44835":"#### Splitting Dataset into Training and Testing with 70:30 ratio and with random_state = 42","5c003fa0":"#### Identifying Null values in dataset","0e513234":"#### Jointplot of 'SCHEDULED_ARRIVAL' and 'ARRIVAL_TIME'","7e8eda0f":"#### Importing Required Libraries","5bcf9a26":"#### Selecting only following columns for Model Building.\n>'MONTH', 'DAY', 'SCHEDULED_DEPARTURE', 'DEPARTURE_DELAY', 'SCHEDULED_ARRIVAL', 'DIVERTED', 'CANCELLED', 'AIR_SYSTEM_DELAY','SECURITY_DELAY', 'AIRLINE_DELAY', 'LATE_AIRCRAFT_DELAY','WEATHER_DELAY', 'result'"}}