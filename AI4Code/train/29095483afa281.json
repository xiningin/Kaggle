{"cell_type":{"46dd6a9c":"code","18e4b3c5":"code","9f8ea561":"code","25ff78cd":"code","44c14cc4":"code","6d3eb15e":"code","920c192e":"code","b7becaa8":"code","2079c6ea":"code","0cf0847f":"code","c3150564":"code","c0283098":"code","ddf9e729":"code","e969fdf5":"code","16438517":"code","b1231ed9":"code","255ff6b1":"code","f60530ec":"code","b3050953":"code","f11e162d":"code","bf92e299":"code","68b0e2ba":"code","e078a723":"code","7652c7c5":"code","e62e5c13":"code","c2207da7":"code","4a4e7db2":"code","ffcd463f":"code","8ebdd17d":"code","3aa37756":"code","7fa02ea5":"code","718165c2":"code","02a53e14":"code","a086aaf8":"code","177242b8":"code","da4efbef":"code","d99a1f32":"code","2367f11d":"code","0dfe0194":"code","e6c728a0":"code","f1b75dc2":"markdown","e6223e13":"markdown","f222c52d":"markdown","237f6539":"markdown","26b19b33":"markdown","6fac1bf9":"markdown","59c465cd":"markdown","f7b3b583":"markdown"},"source":{"46dd6a9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18e4b3c5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport plotly.express as px\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score\nfrom sklearn.metrics import f1_score, confusion_matrix, precision_recall_curve, roc_curve\nimport lightgbm as lgb\nfrom lightgbm import plot_importance\nimport xgboost as xgb\n\n\n\nplt.style.use('seaborn')\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","9f8ea561":"train_df = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/test.csv')\ntrain_df.head()","25ff78cd":"features = train_df.drop(['ID_code','target'],axis=1)","44c14cc4":"train_df.shape","6d3eb15e":"train_df['target'].value_counts()","920c192e":"f, ax = plt.subplots(1,2,figsize=(10,4))\ntrain_df['target'].value_counts().plot.pie(\n    explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True\n)\nsns.countplot('target', data=train_df, ax=ax[1])\nplt.show()","b7becaa8":"null_value = train_df.isnull().sum().sort_values(ascending = False)\nnull_percent = round(train_df.isnull().sum().sort_values(ascending = False)\/len(train_df)*100, 2)\npd.concat([null_value,null_percent], axis=1,keys=['Null values','Percent'])","2079c6ea":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of mean values per row in the train and test set\")\nsns.distplot(train_df[features.columns].mean(axis=1),color=\"black\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features.columns].mean(axis=1),color=\"red\", kde=True,bins=120, label='test')\nplt.legend()\nplt.show()","0cf0847f":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of mean values per column in the train and test set\")\nsns.distplot(train_df[features.columns].mean(),color=\"black\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features.columns].mean(),color=\"red\", kde=True,bins=120, label='test')\nplt.legend()\nplt.show()","c3150564":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of std values per rows in the train and test set\")\nsns.distplot(train_df[features.columns].std(axis=1),color=\"blue\",kde=True,bins=120, label='train')\nsns.distplot(test_df[features.columns].std(axis=1),color=\"green\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","c0283098":"t0 = train_df[train_df['target'] == 0]\nt1 = train_df[train_df['target'] == 1]\nplt.figure(figsize=(16,6))\nplt.title(\"Distribution of skew values per row in the train set\")\nsns.distplot(t0[features.columns].skew(axis=1),color=\"red\", kde=True,bins=120, label='target = 0')\nsns.distplot(t1[features.columns].skew(axis=1),color=\"blue\", kde=True,bins=120, label='target = 1')\nplt.legend(); plt.show()","ddf9e729":"t0 = train_df[train_df['target'] == 0]\nt1 = train_df[train_df['target'] == 1]\nplt.figure(figsize=(16,6))\nplt.title(\"Distribution of skew values per column in the train set\")\nsns.distplot(t0[features.columns].skew(),color=\"red\", kde=True,bins=120, label='target = 0')\nsns.distplot(t1[features.columns].skew(),color=\"blue\", kde=True,bins=120, label='target = 1')\nplt.legend(); plt.show()","e969fdf5":"train_df.drop('ID_code', axis=1, inplace=True)\ntest_df.drop('ID_code', axis=1, inplace=True)","16438517":"train_df.head()","b1231ed9":"x = train_df.drop(['target'], axis=1,)\ny = train_df['target']","255ff6b1":"scaler = StandardScaler()\nx_scaler = scaler.fit_transform(x)\nx_scaler_df = pd.DataFrame(x_scaler, columns=x.columns)\n\npca = PCA(n_components=2)\nx_scaler_pca = pca.fit_transform(x_scaler)\nx_scaler_pca_df = pd.DataFrame(x_scaler_pca)","f60530ec":"test_scaler = StandardScaler()\ntrans_test_scaler = test_scaler.fit_transform(test_df)\ntrans_test_scaler_df = pd.DataFrame(trans_test_scaler, columns=test_df.columns)","b3050953":"x_scaler_pca_df.head()","f11e162d":"pca.explained_variance_ratio_","bf92e299":"sum(pca.explained_variance_ratio_)","68b0e2ba":"x_scaler_pca_df['target'] = y","e078a723":"plt.scatter(x_scaler_pca_df.loc[:, 0], x_scaler_pca_df.loc[:, 1], c=y,  cmap=\"copper_r\")\nplt.axis('off')\nplt.colorbar()\nplt.show()","7652c7c5":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","e62e5c13":"print(\"Train Dataset shape {} \/ {}\".format(x_train.shape, y_train.shape))\nprint(\"Test Dataset shape {} \/ {}\".format(x_test.shape, y_test.shape))","c2207da7":"train_data = lgb.Dataset(x_train, label=y_train)\nval_data = lgb.Dataset(x_test, label=y_test)\nparams = {\n    'n_estimators': 5000,\n    'num_leaves': 20,\n    'max_depth': -1,\n    'min_data_in_leaf': 80,\n    'learning_rate': 0.01,\n    'boosting': 'gbdt',\n    'objective': 'binary',\n    'metric': 'auc',\n    'Is_training_metric': True,\n    'n_jobs': -1\n}","4a4e7db2":"model = lgb.train(params,\n                  train_data,\n                  valid_sets=val_data, \n                  valid_names=['train','valid'],\n                  early_stopping_rounds=100)","ffcd463f":"plt.figure(figsize=(10,10))\nplot_importance(model, max_num_features=30)","8ebdd17d":"x_train, x_test, y_train, y_test = train_test_split(x_scaler_df, y, test_size=0.2)","3aa37756":"train_data = lgb.Dataset(x_train, label=y_train)\nval_data = lgb.Dataset(x_test, label=y_test)\nparams = {\n    'n_estimators': 5000,\n    'num_leaves': 20,\n    'max_depth': -1,\n    'min_data_in_leaf': 80,\n    'learning_rate': 0.01,\n    'boosting': 'gbdt',\n    'objective': 'binary',\n    'metric': 'auc',\n    'Is_training_metric': True,\n    'n_jobs': -1\n}","7fa02ea5":"scaler_model = lgb.train(params,\n                  train_data,\n                  valid_sets=val_data, \n                  valid_names=['train','valid'],\n                  early_stopping_rounds=100)","718165c2":"submission = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsubmission.head()","02a53e14":"target = model.predict(test_df)","a086aaf8":"submission['target'] = target","177242b8":"submission.head()","da4efbef":"submission.to_csv('submission.csv', index=False)","d99a1f32":"scaler_submission = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nscaler_submission.head()","2367f11d":"scaler_target = scaler_model.predict(trans_test_scaler_df)","0dfe0194":"scaler_submission['target'] = scaler_target","e6c728a0":"scaler_submission.to_csv('scaler_submission.csv', index=False)","f1b75dc2":"# EDA\n* Target Percent","e6223e13":"# Preprocessing\n* Drop Columns","f222c52d":"# Submission","237f6539":"=> We cant use PCA","26b19b33":"#### Reference\n* https:\/\/www.kaggle.com\/gpreda\/santander-eda-and-prediction\n* https:\/\/www.kaggle.com\/roydatascience\/eda-pca-simple-lgbm-on-kfold-technique","6fac1bf9":"* StandardScaler","59c465cd":"# Modeling\n* LightGBM","f7b3b583":"# Feature Egineering\n* PCA\n* Split Data to Train \/ Test \/ Validation"}}