{"cell_type":{"8dd06910":"code","2200e709":"code","af626771":"code","3350dd57":"code","d8f96e4b":"code","57ae8510":"code","b50c330e":"code","76799193":"code","75d51c33":"code","2dab63fc":"code","d45e9345":"code","80d59fa5":"code","2c473394":"code","f386fe21":"code","48f1452a":"code","bb21a9e6":"code","192a7734":"code","dc94e32f":"markdown","c277d114":"markdown","ee35943a":"markdown","d0087f45":"markdown","5ec0a475":"markdown","afab8897":"markdown","52141085":"markdown"},"source":{"8dd06910":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2200e709":"data = pd.read_csv('\/kaggle\/input\/global-co2-emissions\/CO2Emission_LifeExp.csv')\ndata.head()","af626771":"# data frames from dictionary \n# Jupiter 79\n# Saturn 82\n# Uranus 27\n# Neptune 14\n\nplanet = [\"Jupiter\",\"Saturn\", \"Uranus\"]\nsatellite = [\"79\",\"82\",\"27\"]\nlist_label = [\"planet\",\"number of satellites\"]\nlist_col = [planet,satellite]\nzipped = list(zip(list_label,list_col))\ndata_dict = dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf","3350dd57":"# Add new columns\ndf[\"color\"] = [\"yellow\",\"grey\",\"white\"]\ndf","d8f96e4b":"# Broadcasting\ndf[\"galaxy\"] = \"Milky Way\"\ndf","57ae8510":"# Plotting all data \ndata1 = data.loc[:,[\"Country\",\"Code\",\"CO2Emissions\",\"YearlyChange\",\"Percapita\",\"Population\",\"LifeExpectancy\"]]\ndata1.plot()\n# it is confusing","b50c330e":"# subplots\ndata1.plot(subplots = True)\nplt.show()","76799193":"# scatter plot  \ndata1.plot(kind = \"scatter\",x=\"LifeExpectancy\",y = \"Percapita\")\nplt.show()","75d51c33":"# scatter plot  \ndata1.plot(kind = \"scatter\",x=\"Population\",y = \"CO2Emissions\")\nplt.show()","2dab63fc":"# histogram subplot with non cumulative and cumulative\nfig, axes = plt.subplots(nrows=2,ncols=1)\ndata1.plot(kind = \"hist\",y = \"LifeExpectancy\",bins = 50,range= (0,250), density=True, stacked=True,ax = axes[0])\ndata1.plot(kind = \"hist\",y = \"LifeExpectancy\",bins = 50,range= (0,250), density=True, stacked=True,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt.show()","d45e9345":"data.describe()","80d59fa5":"time_list = [\"2016-03-08\",\"2016-04-12\"]\nprint(type(time_list[1])) \ndatetime_object = pd.to_datetime(time_list)\nprint(type(datetime_object))","2c473394":"\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2 = data.head()\ndate_list = [\"2016-01-10\",\"2016-02-10\",\"2016-03-10\",\"2016-03-15\",\"2016-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"date\"] = datetime_object\n\ndata2= data2.set_index(\"date\")\ndata2 ","f386fe21":"print(data2.loc[\"2016-03-16\"])\nprint(data2.loc[\"2016-03-10\":\"2016-03-16\"])","48f1452a":"data2.resample(\"A\").mean()","bb21a9e6":"data2.resample(\"M\").mean()","192a7734":"data2.resample(\"M\").first().interpolate(\"linear\")","dc94e32f":"**RESAMPLING PANDAS TIME SERIES**","c277d114":"**REV\u0130EW of PANDAS**\n\nsingle column = series\n\nNaN = not a number\n\ndataframe.values = numpy","ee35943a":"Country: Unique Identifier\n\nCode: Country Code\n\nCO2Emissions: CO2 Emission by country (tons, 2016)\n\nYearlyChange: Yearly CO2 Emission Change in Percentage\n\nPercapita: CO2 Emission Per Capita\n\nPopulation: Population of the Country (2016)\n\nLifeExpectancy: Life Expectancy of the Country (2016)","d0087f45":"# PANDAS FOUNDATION","5ec0a475":"**STATISTICAL EXPLORATORY DATA ANALYSIS**","afab8897":"**INDEXING PANDAS TIME SERIES**","52141085":"**VISUAL EXPLORATORY DATA ANALYSIS**"}}