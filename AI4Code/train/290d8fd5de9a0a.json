{"cell_type":{"ae7d6ccf":"code","e9630a89":"code","2a4f544a":"code","7a820f84":"code","3c7a6118":"code","01872a95":"code","5557c631":"code","1f5f5634":"code","28616948":"code","d5995bd6":"code","32e0e627":"code","df8a1f18":"code","bcec2e27":"code","981ef261":"code","aae47a00":"code","ddaae61d":"code","240c4659":"code","c64a7d13":"code","dd0c5c16":"code","9efd6805":"code","644de362":"code","b71bf0ec":"code","44d45bc8":"markdown","b9b46387":"markdown","b2827bd5":"markdown","ed71a14f":"markdown","1fd1a78c":"markdown","1b662d77":"markdown","1349d8b2":"markdown","33229e5e":"markdown","42d7616d":"markdown","0e828a1b":"markdown","a92ab041":"markdown","a11f6e69":"markdown","d5170101":"markdown","22dc3b35":"markdown","c75f332a":"markdown","8e4bc787":"markdown"},"source":{"ae7d6ccf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e9630a89":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import scatter_matrix\nfrom sklearn.model_selection import train_test_split","2a4f544a":"data=pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\ntest=pd.read_csv('..\/input\/mobile-price-classification\/test.csv')","7a820f84":"fig = plt.figure(figsize = (15,20))\nax = fig.gca()\ndata.hist(ax = ax)","3c7a6118":"print(data.shape)\ndata.head()","01872a95":"print(test.shape)\ntest.head()","5557c631":"data.columns","1f5f5634":"data.isnull().sum()","28616948":"data.dtypes","d5995bd6":"X=data.drop(['price_range'],axis=1)","32e0e627":"Y=data['price_range']","df8a1f18":"x_train,x_test,y_train,y_test=train_test_split(X,Y,random_state=4,test_size=0.2)","bcec2e27":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(x_train,y_train)","981ef261":"from sklearn.metrics import mean_squared_error\npredict=lr.predict(x_test)\nmean_squared_error(predict,y_test)","aae47a00":"lr.score(x_test,y_test)","ddaae61d":"plt.scatter(y_test,predict)\nplt.show()","240c4659":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=10)\nknn.fit(x_train,y_train)","c64a7d13":"knn_predict=knn.predict(x_test)\nprint(knn.score(x_test,y_test))\nprint(mean_squared_error(knn_predict,y_test))","dd0c5c16":"test=test.drop(['id'],axis=1)\ntest_predict=knn.predict(test)","9efd6805":"print(test_predict)","644de362":"pd.DataFrame(test_predict).head()","b71bf0ec":"test['price_range']=test_predict\ntest.head(50)","44d45bc8":"Context\n\nBob has started his own mobile company. He wants to give tough fight to big companies like Apple,Samsung etc.\n\nHe does not know how to estimate price of mobiles his company creates. In this competitive mobile phone market you cannot simply assume things. To solve this problem he collects sales data of mobile phones of various companies.\n\nBob wants to find out some relation between features of a mobile phone(eg:- RAM,Internal Memory etc) and its selling price. But he is not so good at Machine Learning. So he needs your help to solve this problem.\n\nIn this problem you do not have to predict actual price but a price range indicating how high the price is","b9b46387":"**Data Columns Name**","b2827bd5":"**Data Types **\nNo String Data","ed71a14f":"**Load Data and libraries**","1fd1a78c":"Our Target is price_range","1b662d77":"**Are There any Null Values??**","1349d8b2":"# Please do Vote up if you liked my work","33229e5e":"**Data Visualization **","42d7616d":"# Conclusion: KNN performed the best","0e828a1b":"# Work With Data","a92ab041":"**Check the shape of the data**","a11f6e69":"# Check How the model is good ?\n","d5170101":"# Spliting Data To X and Y","22dc3b35":"Spliting data to use it in the model","c75f332a":"# Now Let's Predict the price Range of the test file","8e4bc787":"# Bulding Our Model \nWe will use LinearRegression model"}}