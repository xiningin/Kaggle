{"cell_type":{"3bf95b40":"code","cf124e81":"code","b9ab40bb":"code","b4e4d431":"code","b351c33f":"code","d343a6e5":"code","1bc96439":"code","45d6ad29":"code","b069dea1":"code","fb1d6ad2":"code","fc2e839d":"code","5ba62098":"code","985ff775":"code","fe4b989f":"code","185a9f4c":"code","0930fa6e":"code","90aa39a3":"code","d53ffe47":"code","52af9dbc":"code","5fedf98e":"code","83d75390":"code","8e38034c":"code","8a9bd822":"code","b6c097b4":"code","d6ff92e5":"code","c745d621":"code","f98aa0c3":"code","0d7483a5":"code","a3ffaa4a":"code","d2ae2d95":"code","637f9727":"code","89750ede":"code","b829274b":"code","acbc86ff":"code","a6ce2a02":"code","96555ae2":"code","e9a9c306":"code","15b97d9f":"code","8c8a2492":"code","54b07386":"code","9efbbc42":"code","d35ccf64":"code","2b3019a7":"code","a9f5e80d":"code","e92cd50a":"markdown"},"source":{"3bf95b40":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","cf124e81":"df_train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","b9ab40bb":"df_train.head()","b4e4d431":"df_test.head()","b351c33f":"df_train.info()","d343a6e5":"df_train.describe()","1bc96439":"df_train['SalePrice'].describe()","45d6ad29":"df_train.isna().sum()","b069dea1":"df_test.isna().sum()","fb1d6ad2":"# Convert strings to categories with using pandas API\n\nfor label, content in df_train.items():\n    if pd.api.types.is_string_dtype(content):\n        print(label)","fc2e839d":"for label, content in df_train.items():\n    if pd.api.types.is_string_dtype(content):\n        df_train[label] = content.astype('category').cat.as_ordered()","5ba62098":"df_train.info()","985ff775":"df_train.isnull().sum()\/len(df_train)","fe4b989f":"for label, content in df_train.items():\n    if pd.api.types.is_numeric_dtype(content):\n        print(label)","185a9f4c":"for label, content in df_train.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            print(label)","0930fa6e":"# Fill numeric rows with median()\n\nfor label, content in df_train.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            df_train[label+ '_is_missing'] = pd.isnull(content)\n            df_train[label] = content.fillna(content.median())","90aa39a3":"for label, content in df_train.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            print(label)","d53ffe47":"for label, content in df_train.items():\n    if not pd.api.types.is_numeric_dtype(content):\n        print(label)","52af9dbc":"for label, content in df_train.items():\n    if not pd.api.types.is_numeric_dtype(content):\n        df_train[label + '_is_missing'] = pd.isnull(content)\n        df_train[label] = pd.Categorical(content).codes+1","5fedf98e":"df_train.isna().sum()","83d75390":"#sns.pairplot(df_train)","8e38034c":"sns.distplot(df_train['SalePrice'], kde=False, color='m')","8a9bd822":"sns.kdeplot(df_train['SalePrice'], shade=True, color='m')","b6c097b4":"df_train['SalePrice'].value_counts()","d6ff92e5":"from sklearn.model_selection import train_test_split\nx = df_train.drop('SalePrice', axis=1)\ny = df_train['SalePrice']\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=22)","c745d621":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","f98aa0c3":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nscaler.fit(x_train)","0d7483a5":"x_train = scaler.transform(x_train)\nx_test = scaler.transform(x_test)","a3ffaa4a":"from sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression()\nmodel.fit(x_train, y_train)","d2ae2d95":"model.predict(x_test)","637f9727":"y_test","89750ede":"model.score(x_test, y_test)","b829274b":"from xgboost import XGBRegressor\nmodel = XGBRegressor(n_estimators = 500)\nmodel.fit(x_train, y_train)","acbc86ff":"model.predict(x_test)","a6ce2a02":"y_test","96555ae2":"model.score(x_test, y_test)","e9a9c306":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(n_estimators=200)\nmodel.fit(x_train, y_train)\n","15b97d9f":"model.predict(x_test)","8c8a2492":"y_test","54b07386":"model.score(x_test, y_test)","9efbbc42":"from sklearn.svm import SVR \n\nmodel = SVR()\nmodel.fit(x_train, y_train)\n","d35ccf64":"model.predict(x_test)\n","2b3019a7":"y_test\n","a9f5e80d":"model.score(x_test, y_test)","e92cd50a":"## Data Description\nThe data set describing the sale of individual residential property in Ames, Iowafrom 2006 to 2010. The data set contains 2930 observations and a large number of explanatory variables (23 nominal, 23 ordinal, 14 discrete, and 20 continuous) involved in assessing home values.\n\nIf need more information in this link\n\n(Ames, Iowa: Alternative to the Boston Housing Data as an End of Semester Regression Project)\n\n[Paper ](http:\/\/jse.amstat.org\/v19n3\/decock.pdf)\n\n\n\n\n### File descriptions\n* train.csv - the training set\n* test.csv - the test set\n* data_description.txt - full description of each column, originally prepared by Dean De Cock but lightly edited to match the column names used here\n* sample_submission.csv - a benchmark submission from a linear regression on year and month of sale, lot square footage, and number of bedrooms\n\n\n### Dataset\n\n\n\n[Link](https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/overview)"}}