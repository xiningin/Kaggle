{"cell_type":{"a0f74897":"code","593c3f2d":"code","f4c45cd9":"code","e8dabd56":"code","6be53999":"code","1c9b1b3a":"code","b9ba88d6":"code","cf84a1ef":"code","f69b27c9":"code","743a8f22":"code","23dbc80d":"code","dabdfce8":"code","bd92df91":"code","54673f84":"code","7db26da5":"code","57042de1":"code","0f4d9ba5":"code","b4c0408b":"code","f51606e2":"code","7e12624c":"code","e45d238b":"code","25b2ecd3":"code","4294c2c0":"code","d2c26750":"markdown","a4fbb703":"markdown","af5d9a13":"markdown","8f11c307":"markdown","506c47df":"markdown","77241722":"markdown","212cccb6":"markdown","144f0a05":"markdown","1d3e8c02":"markdown","d24c339c":"markdown","f6912802":"markdown","7eddfff1":"markdown","282a4e64":"markdown","ac220dba":"markdown","dbae92ed":"markdown","133581ea":"markdown"},"source":{"a0f74897":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","593c3f2d":"data = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndata.head()","f4c45cd9":"data.describe().transpose()","e8dabd56":"data.isnull().sum()","6be53999":"cont_var=[\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"]\ncate_var=['sex','exng','caa','cp','fbs','restecg','slp','thall']\nprint(\"continoius colums are: \",cont_var)\nprint(\"categorical colums are: \",cate_var)","1c9b1b3a":"corrMat = data[cont_var].corr().transpose()\ncorrMat","b9ba88d6":"fig= plt.subplots(figsize=(10,10))\nsns.heatmap(data[cont_var].corr(), annot = True, fmt='.1g')","cf84a1ef":"sns.kdeplot(data=data, x='age',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","f69b27c9":"sns.kdeplot(data=data, x='cp',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","743a8f22":"sns.kdeplot(data=data, x='trtbps',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","23dbc80d":"sns.kdeplot(data=data, x='age',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","dabdfce8":"sns.kdeplot(data=data, x='thalachh',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","bd92df91":"sns.kdeplot(data=data, x='caa',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","54673f84":" sns.kdeplot(data=data, x='oldpeak',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","7db26da5":" sns.kdeplot(data=data, x='chol',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)","57042de1":"unscaled_inputs = data.drop(['output'],axis=1)\ntargets =data['output']\ndata_with_dummies = pd.get_dummies(unscaled_inputs, drop_first = True)\nfrom sklearn import preprocessing \nscaledInputs=preprocessing.scale(data_with_dummies)\nsamples_count=data_with_dummies.shape[0]\ndata_with_dummies\n","0f4d9ba5":" from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(scaledInputs,targets, test_size = 0.2, random_state = 365)\nprint(\"The shape of X_train is      \", X_train.shape)\nprint(\"The shape of X_test is       \",X_test.shape)\nprint(\"The shape of y_train is      \",y_train.shape)\nprint(\"The shape of y_test is       \",y_test.shape)","b4c0408b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nlogistic_model=LogisticRegression()\nlogistic_model.fit(X_train, y_train)\nlogistic_acc = logistic_model. score (X_test, y_test)\nprint (\"accuracy = \",logistic_acc)","f51606e2":"from sklearn.svm import SVC\nclf = SVC(kernel='rbf', random_state=42).fit(X_train,y_train)\ny_pred = clf.predict(X_test)\nsvm_acc=accuracy_score(y_test, y_pred)","7e12624c":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier()\nknn.fit(X_train, y_train)\nknn_acc = accuracy_score(y_test, knn.predict(X_test))\nprint(f\"Accuracy Score of Training Data is {accuracy_score(y_train, knn.predict(X_train))}\")\nprint(f\"Accuracy Score of Test Data is {knn_acc}\\n\")","e45d238b":"from sklearn.naive_bayes import GaussianNB\nnbc=GaussianNB()\nnbc.fit(X_train, y_train)\nnbc_acc = accuracy_score(y_test, nbc.predict(X_test))\nprint(f\"Accuracy Score of Training Data is {accuracy_score(y_train, nbc.predict(X_train))}\")\nprint(f\"Accuracy Score of Test Data is {nbc_acc}\\n\")","25b2ecd3":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(X_train, y_train)\nrf_acc = accuracy_score(y_test, rf.predict(X_test))\nprint(f\"Accuracy Score of Training Data is {accuracy_score(y_train, rf.predict(X_train))}\")\nprint(f\"Accuracy Score of Test Data is {rf_acc}\\n\")","4294c2c0":"models = pd.DataFrame({\n    'Model' : ['Logistic Regression','SVM', 'KNN','Navie Bayes','Random Forest'],\n    'Score' : [logistic_acc,svm_acc,knn_acc,nbc_acc,rf_acc]\n})\nmodels.sort_values(by = 'Score', ascending = False)\nplt.figure(figsize = (6, 6))\nsns.barplot(x = 'Score', y = 'Model', data = models)\n\nplt.show()","d2c26750":" **Train-Test-Validation split**","a4fbb703":"* **Visualising the correlation matrix**","af5d9a13":"* **Checking for null values**","8f11c307":"**Random Forest**","506c47df":"**Naive Bayes**","77241722":"**KNN**","212cccb6":"* **Checking for correlations**","144f0a05":"* **Loading the data set**","1d3e8c02":" **PREPROCESSING**","d24c339c":"* Lets import the libraries","f6912802":"**Kernal SVM**","7eddfff1":"**We can see that there are no null values in the dataset**","282a4e64":"**Comparing the prediction results**","ac220dba":"**Performing variable analysis**","dbae92ed":"**INSIGHTS:**\n\n* **No significance correlation between the variables**.\n\n* **Age doesn't seem to be directly causing heart attacks**\n\n* **People with chest pain type 2 seems to be at greater risk**  \n\n* **People with old peak 0 seems to be at greater risk** \n\n* **People with caa 0 seems to be at greater risk**","133581ea":"**Performing Logistic Rergession**"}}