{"cell_type":{"70c2c9b6":"code","9f7a8c67":"code","e64107ab":"code","943468c6":"code","deb51d96":"code","e8fc4fe6":"code","6624d326":"code","c35452dd":"code","1c8dab83":"code","d039766f":"code","ade52cdb":"code","2eb2a616":"code","c898dc29":"code","a755b286":"code","ffe70b5c":"code","c39fd1ef":"code","7054017f":"code","8c6af18e":"code","91e5d5d0":"code","35da6067":"code","57f161e7":"code","60a30141":"code","807a2a8c":"code","bed90f76":"code","a25ae47f":"code","fb12b528":"code","82c8a529":"code","6605b98f":"code","a566ac17":"code","01bc5e2c":"code","54f395ac":"code","d052e757":"code","c73d515e":"code","b0ee7d7d":"code","697fc861":"code","2e3ffb40":"code","00b3cc55":"code","036096e9":"code","5f289b6b":"code","0ff6704d":"code","59da88ab":"code","544e514c":"code","d17ed84b":"code","68259474":"code","0cb87b98":"code","e6a4cdf1":"code","da0309d8":"code","6ddbd58d":"code","0cc58cba":"code","a55cf9be":"code","6b541019":"code","aa116ec8":"code","02fe81f6":"code","65b2d98b":"code","d30bf9a6":"code","02e143c2":"code","cd636f2b":"code","374e6cc8":"code","72be65f0":"code","dc108790":"code","833d52d5":"code","f5b39cb5":"code","5d830b70":"code","59fa14a5":"code","362f02d9":"code","27e4483d":"code","7b3b6c18":"markdown","6e3f6dd4":"markdown","0d9576f9":"markdown","b062b551":"markdown","8445219f":"markdown","c1dcb959":"markdown","22cbf882":"markdown","4c52f54d":"markdown","e16ec437":"markdown","fead429d":"markdown","344b2350":"markdown","ccb4c7b8":"markdown","8bcd4c27":"markdown","a01bd05b":"markdown","da0f7fde":"markdown","142119cd":"markdown","bbb28943":"markdown","230418e0":"markdown","58eced1c":"markdown","16f33fdc":"markdown","c66e84da":"markdown","94a84bcc":"markdown","d59e5aaa":"markdown","876ceb5a":"markdown"},"source":{"70c2c9b6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression\n\n\n%matplotlib inline ","9f7a8c67":"df = pd.read_csv(\"..\/input\/housing2\/housing2.csv\")\ndf.head()","e64107ab":"df.info()","943468c6":"df.describe()","deb51d96":"df.isnull().sum()","e8fc4fe6":"sns.heatmap(df.isnull())","6624d326":"df.dropna(subset = [\"housing_median_age\"], inplace=True)\ndf.dropna(subset = [\"population\"], inplace=True)","c35452dd":"df[\"total_bedrooms\"].describe()","1c8dab83":"sns.distplot(df[\"total_bedrooms\"],bins = 100, kde = False)  ","d039766f":"#it is a normal distribution, so we can use the mean to replace NaN values\n\ndf[\"total_bedrooms\"] = df[\"total_bedrooms\"].replace(np.nan , df[\"total_bedrooms\"].mean())","ade52cdb":"df[\"households\"].value_counts()","2eb2a616":"df['households'] = df['households'].replace(\"no\" , 0)","c898dc29":"df['households'] = df['households'].astype(float)\ndf['households'].describe()","a755b286":"sns.distplot(df[\"households\"],bins = 100, kde = False)  ","ffe70b5c":"df[\"households\"] = df[\"households\"].replace(np.nan , df[\"households\"].mean())","c39fd1ef":"df.isnull().sum()","7054017f":"sns.distplot(df[\"median_income\"],bins = 100, kde = False)  ","8c6af18e":"df['median_income'] = df['median_income'].fillna(pd.Series(np.random.choice(df['median_income'] , size = len(df.index))))","91e5d5d0":"sns.distplot(df[\"median_income\"],bins = 100, kde = False)  ","35da6067":"df.drop([\"gender\"] ,axis=1, inplace = True)","57f161e7":"df.isnull().sum()","60a30141":"df.hist(bins = 50, figsize= (20,20))\n","807a2a8c":"df.plot(kind = \"scatter\", x=\"longitude\" , y=\"latitude\" , c =df[\"median_house_value\"], s =df[\"population\"]\/100,\n            alpha = 0.4, cmap = plt.get_cmap(\"jet\"), figsize = (10,10))\n","bed90f76":"df.plot(kind = \"scatter\", x=\"longitude\" , y=\"latitude\" , c =df[\"median_house_value\"], s =df[\"population\"]\/100,\n        alpha = 0.4, cmap = plt.get_cmap(\"jet\"), figsize = (12,8))\n\n\n#load png image\nmap_image = mpimg.imread(\"..\/input\/california\/california.png\")\n\nplt.imshow(map_image, extent = [-124.55, -114, 32.55, 42.05], alpha = 0.4, cmap = plt.get_cmap(\"jet\"))\n\nplt.xlabel(\"longitude\")\nplt.ylabel(\"latitude\")","a25ae47f":"plt.figure(figsize=(12,8))\ncmap = sns.diverging_palette(220, 10, center='light', as_cmap=True)\nsns.heatmap(data = df.corr(), annot=True, cmap=cmap)","fb12b528":"#seeing correlation\n\ndf.corr()[\"median_house_value\"].sort_values(ascending=False)","82c8a529":"df.info()","6605b98f":"label_encoder = LabelEncoder()\ndf['ocean_proximity'] = label_encoder.fit_transform(df['ocean_proximity'])","a566ac17":"df.plot(kind = \"box\" , subplots = True , figsize = (20, 20), layout = (5, 2) )\nplt.show()","01bc5e2c":"df.shape","54f395ac":"df_test = df.copy()","d052e757":"firstQ = df['total_bedrooms'].quantile(0.25)\nthirdQ = df['total_bedrooms'].quantile(0.75)\nIQR = thirdQ - firstQ\nIQR","c73d515e":"newB = thirdQ + 3*(IQR)\ndf_test.drop(df_test[df_test['total_bedrooms']>newB].index, axis = 0, inplace =True)","b0ee7d7d":"df_test.shape","697fc861":"firstQ_p = df['population'].quantile(0.25)\nthirdQ_p = df['population'].quantile(0.75)\nIQR_p = thirdQ_p - firstQ_p\nIQR_p","2e3ffb40":"newB_p = thirdQ_p + 3*(IQR_p)\ndf_test.drop(df_test[df_test['population']>newB_p].index, axis = 0, inplace =True)\ndf_test.shape","00b3cc55":"firstQ_h = df['households'].quantile(0.25)\nthirdQ_h = df['households'].quantile(0.75)\nIQR_h = thirdQ_h - firstQ_h\nIQR_h","036096e9":"newB_h = thirdQ_h + 3*(IQR_h)\ndf_test.drop(df_test[df_test['households']>newB_h].index, axis = 0, inplace =True)\ndf_test.shape","5f289b6b":"firstQ_t = df['total_rooms'].quantile(0.25)\nthirdQ_t = df['total_rooms'].quantile(0.75)\nIQR_t = thirdQ_t - firstQ_t\nIQR_t","0ff6704d":"newB_t = thirdQ_t + 3*(IQR_t)\ndf_test.drop(df_test[df_test['total_rooms']>newB_t].index, axis = 0, inplace =True)\ndf_test.shape","59da88ab":"df_test.hist(bins = 50, figsize= (20,20))","544e514c":"df_test.head()","d17ed84b":"df_test.info()","68259474":"from sklearn.model_selection import train_test_split\n\nX = df_test.drop(\"median_house_value\" , axis = 1).values\ny = df_test['median_house_value'].values\n\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size=0.25 , random_state=42)","0cb87b98":"from sklearn.preprocessing import StandardScaler\n\nscale = StandardScaler ()\nX_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","e6a4cdf1":"lr = LinearRegression()\nlr.fit(X_train,y_train)","da0309d8":"lr.score(X_train,y_train)","6ddbd58d":"lr.score(X_test,y_test)","0cc58cba":"X = df.drop(\"median_house_value\" , axis = 1).values\ny = df['median_house_value'].values\n\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size=0.25 , random_state=42)","a55cf9be":"\nscale = StandardScaler ()\nX_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","6b541019":"lr = LinearRegression()\nlr.fit(X_train,y_train)","aa116ec8":"lr.score(X_train,y_train)","02fe81f6":"lr.score(X_test,y_test)","65b2d98b":"from sklearn.linear_model import Ridge\nrid = Ridge()","d30bf9a6":"rid.fit(X_train,y_train)","02e143c2":"rid.score(X_train,y_train)","cd636f2b":"rid.score(X_test,y_test)","374e6cc8":"from sklearn.linear_model import Lasso\n\nmodel_lasso = Lasso(alpha=0.01)\nmodel_lasso.fit(X_train, y_train) \n","72be65f0":"pred_train_lasso= model_lasso.predict(X_train)","dc108790":"model_lasso.score(X_train,y_train)","833d52d5":"pred_test_lasso= model_lasso.predict(X_test)","f5b39cb5":"model_lasso.score(X_test,y_test)","5d830b70":"y_pred = lr.predict(X_test)","59fa14a5":"y_pred2 = rid.predict(X_test)","362f02d9":"from sklearn.metrics import r2_score\nr2 = r2_score(y_test , y_pred)\nr2","27e4483d":"import statsmodels.api as sm\nfrom scipy import stats\nX2 = sm.add_constant(X)\nest = sm.OLS(y,X2)\nest2 = est.fit()\nest2.summary()","7b3b6c18":"# Training and testing the model","6e3f6dd4":"# California Housing prediction","0d9576f9":"#### we can see that median income, total rooms and median house age are  the highest\n#### features that are correlated to the median house value\n#### while long and lat have low correlations\n#### from the above map we can see that the closer we are to the ocean, the more expensive the houses become","b062b551":"###### Housing median age\nhousing median age and population have limited numbers so we can drop them","8445219f":"##### households","c1dcb959":"## original data","22cbf882":"#### total rooms","4c52f54d":"### trying ridge regression","e16ec437":"# calculating R2 score","fead429d":"# EDA","344b2350":"# Dealing with catigorical data","ccb4c7b8":"### trying lasso regressor","8bcd4c27":"#### red dots are where houses are most expensive, lighter colors = cheaper\n#### wider circles represent higher population","a01bd05b":"#### population","da0f7fde":"##### the greatest outliers are in total rooms and bedrooms, median income, we can say all the factors that are the most highly correlated with the house price","142119cd":"##### Total bedrooms","bbb28943":"##### median income","230418e0":"# Data info","58eced1c":"# dealing with outliers","16f33fdc":"##### we can add random variables from the median income column instead of the mean\n##### adding the mean changed the distribution of the data, thus might affect the model","c66e84da":"#### households","94a84bcc":"##### again the distribution is normal so we can use the mean to fill the NaN values","d59e5aaa":"##### gender\nthe gender does not seem to have any effect on the prediction, so we will drop the column","876ceb5a":"# Data cleaning"}}