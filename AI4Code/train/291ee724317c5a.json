{"cell_type":{"583d44e0":"code","5ba3a342":"code","4390b8cd":"code","3c9629cf":"code","3c975c82":"code","2913a6a6":"code","4a1042ec":"code","37a3e0b0":"code","968d7a52":"code","e6815d45":"code","c69258ae":"code","b6070b62":"code","cd2df00e":"code","28a62a29":"code","a237aad8":"code","7c3c904e":"code","711bc6dd":"markdown","60acae6b":"markdown","2d7176fd":"markdown","2ae1db45":"markdown","e4809a4d":"markdown","a3d1976f":"markdown","aa726a46":"markdown","dd8a58c4":"markdown","203e26d6":"markdown","45373f4d":"markdown","914709b8":"markdown","a0089d88":"markdown","2d74fad9":"markdown","d124c626":"markdown","76e18418":"markdown","4c5a902e":"markdown","bf95a300":"markdown","f93b6ee6":"markdown","217b1482":"markdown","a78517b6":"markdown","ff89eb1a":"markdown","24a24131":"markdown","91832c38":"markdown","362e3623":"markdown","3b536ddb":"markdown","01ca4f80":"markdown","5d89e94b":"markdown","5dc78bf7":"markdown","ac0e6428":"markdown","a6b6fe2d":"markdown","77629a74":"markdown"},"source":{"583d44e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom wordcloud import WordCloud, STOPWORDS #wordcloud \nimport matplotlib.pyplot as plt #plotting\n%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (15,10) #Set the default figure size\nplt.style.use('ggplot') #Set the plotting method\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ba3a342":"udemy = pd.read_csv(\"..\/input\/finance-accounting-courses-udemy-13k-course\/udemy_output_All_Finance__Accounting_p1_p626.csv\") #Get the Udemy data\nudemy.head() #Take a peek at the data","4390b8cd":"print(udemy.isnull().any()) #Check for null values","3c9629cf":"print(udemy.loc[udemy[\"price_detail__amount\"].isnull()]) #Check where the price is null","3c975c82":"udemy = udemy.drop(columns = {\"created\", \"discount_price__amount\", \"discount_price__currency\", \"discount_price__price_string\",\n                             \"price_detail__price_string\", \"price_detail__currency\"}) #Drop several unnecessary rows\nudemy.head() #Take a peek at the dataframe","2913a6a6":"udemy[\"price_detail__amount\"] = udemy[\"price_detail__amount\"].apply(lambda x: 0 if pd.isnull(x) else x) #Change null values to 0\nprint(udemy.isnull().any()) #Check for null values","4a1042ec":"udemy[\"usd\"] = udemy[\"price_detail__amount\"].apply(lambda x: x*0.014) #Add the prices in USD\nudemy.head() #Take a peek at the dataframe","37a3e0b0":"columns = udemy.columns #Take the current column names\n#Create a list of the new column names I want to give\nnewColumns = [\"id\", \"title\", \"url\", \"costsMoney\", \"subCount\", \"avgRating\", \"recentRating\", \"rating\", \"reviewNum\", \n              \"wishlisted\", \"lectureNum\", \"testNum\", \"published\", \"priceRupees\", \"priceUSD\"]\n\ncolumnChange = dict(zip(columns, newColumns)) #Zip together the column names, then put them into a dictionary of current : new\nudemy = udemy.rename(columns = columnChange) #Rename the columns with the dictionary\nudemy.head() #Take a peek at the dataframe","968d7a52":"titleWords = \"\" #Make a holder variable for words to make a word cloud\nstopwords = set(STOPWORDS) #Get a set of the stopwords to remove\ntitles = udemy[\"title\"] #Get the titles to look through\n  \n#For each title, get the words for the cloud\nfor title in titles: \n    tokens = title.split() #Split the titles into words\n    length = len(tokens) #Get the number of words to loop through\n    \n    #For each word, make the word lower case\n    for i in range(0, length): \n        tokens[i] = tokens[i].lower() #Make the current word lowercase\n      \n    titleWords += \" \".join(tokens) + \" \" #Add the word to the set of words for the cloud\n\ncloud = WordCloud(width = 800, height = 800, #Build a word cloud of size 800x800 \n            stopwords = stopwords, #Set the stopwords to remove\n            min_font_size = 14).generate(titleWords) #Set the min size and generate the cloud\n  \nplt.figure(figsize = (10, 10), facecolor = None) #Build an 10x10 figure\nplt.imshow(cloud) #Display the cloud\nplt.axis(\"off\") #Remove the axis\nplt.tight_layout(pad = 0) #Remove the padding from the grid\n  \nplt.show() #Show the cloud","e6815d45":"udemy.plot.scatter(x = \"lectureNum\", y = \"rating\", title = \"Num Lectures vs Rating\") #Build a scatterplot comparing rating and lecture number","c69258ae":"udemy.plot.scatter(x = \"testNum\", y = \"rating\", title = \"Num Tests vs Rating\") #Build a scatterplot comparing rating and test number","b6070b62":"udemy.plot.scatter(x = \"priceUSD\", y = \"rating\", title = \"Price vs Rating\") #Build a scatterplot comparing rating and price","cd2df00e":"udemy.plot.scatter(x = \"reviewNum\", y = \"rating\", title = \"Num Reviews vs Rating\") #Build a scatterplot comparing rating and review number","28a62a29":"udemy.plot.scatter(x = \"subCount\", y = \"rating\", title = \"Subscriber Count vs Rating\") #Build a scatterplot comparing rating and Sub Count","a237aad8":"udemy.plot.scatter(x = \"lectureNum\", y = \"priceUSD\", title = \"Num Lectures vs Price\") #Build a scatterplot comparing price and lecture number","7c3c904e":"high = udemy.loc[udemy[\"reviewNum\"] > 20000] #Take rows with review counts higher than 20000 into the \"high\" dataframe\nhigh = high.loc[high[\"rating\"] > 4.5] #Cut out courses from the high dataframe that are less than 4.5\nhigh #Show all of the best Udemy courses","711bc6dd":"---","60acae6b":"---","2d7176fd":"---","2ae1db45":"---","e4809a4d":"# Drop Column\/Fix Null","a3d1976f":"Review count has been shown to be an important metric in showing the best classes. So, which classes rate above 4.5 with more than 20000 reviews?","aa726a46":"# Udemy Course Data Exploration","dd8a58c4":"It does not seem price is a good indicator of quality with Udemy. While there are less lower rated courses at high price points, there is a steady amount of high and low rated courses throughout the whole graph.","203e26d6":"---","45373f4d":"It appears as a course gets sufficiently high review\/subscriber counts (and thus are more popular), they tend to get overall higher ratings. This turning point appears to be 5000 ratings and 50000 subscribers.","914709b8":"# Price vs Rating","a0089d88":"---","2d74fad9":"---","d124c626":"The only null values appear to be prices on rows where the courses are not paid. I will be dropping several of these rows, but the others I will just replace with 0. ","76e18418":"# Check for Null Values","4c5a902e":"Price and Lecture Number appear to have no corelation. I had assumed a lower price would imply less content, but apparently not.","bf95a300":"Coded by Luna McBride","f93b6ee6":"It appears a low number of lectures does not indicate rating. Once there are 200 or more lectures, however, it is almost guarenteed to have a rating above 3.","217b1482":"---","a78517b6":"# Lecture Number vs Rating","ff89eb1a":"# Update Column Names","24a24131":"# Num Lectures vs Price","91832c38":"The best courses seem to be leadership, data analysis, and personal investment type courses. This is a financial dataset, so it makes sense. Though, the inclusion of Hadoop and Big Data is really interesting, as I pictured that as a heavy data science concept rather than financial analysis.","362e3623":"Higher test numbers appear to have a higher rating, with exception to some 0 ratings (likely untaken courses)","3b536ddb":"Source: https:\/\/www.geeksforgeeks.org\/generating-word-cloud-python\/","01ca4f80":"# Build a WordCloud from the Titles","5d89e94b":"# Review Number\/Subscriber Count (Popularity) vs Rating","5dc78bf7":"---","ac0e6428":"# Test Number vs Rating","a6b6fe2d":"# The Best Courses","77629a74":"---"}}