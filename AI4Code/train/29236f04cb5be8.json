{"cell_type":{"2cf31c95":"code","dd0a3162":"code","6ec9baf9":"code","ddb13ca7":"markdown","bd3bb9e3":"markdown","987a3dd9":"markdown","295d9eb8":"markdown","96ae7d60":"markdown","4eb683c9":"markdown","db8b8cc6":"markdown"},"source":{"2cf31c95":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import svm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom time import time\nimport csv \n\n# loading dataset\ndf_train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\n\ndisplay(df_train)","dd0a3162":"labels = df_train['label']\nfeatures = df_train.drop('label',axis=1)\n\n# splitting the data into training and testing sets\nfeatures_train,features_test,labels_train,labels_test = train_test_split(features,labels,test_size = 0.1)\n\n# creating the classifier\nclf = svm.SVC()\nclf.fit(features_train,labels_train)\n\npred = clf.predict(features_test)\n\nprint(\"Accuracy =\", accuracy_score(pred, labels_test)*100, \"%\")","6ec9baf9":"pred2 = clf.predict(df_test)\nprint(pred2)","ddb13ca7":"## SVM","bd3bb9e3":"To find out how accurate the classifier is *(since test.csv does not contain labels)*, we will split the training dataset into two sets.\n\n> Training set - 90%\n\n> Testing set - 10%","987a3dd9":"The training data set, has 785 columns. The first column, called LABEL, is the digit that was drawn by the user. The rest of the columns contain the pixel-values of the associated image.","295d9eb8":"### Importing libraries and loading datase","96ae7d60":"*It takes around 150 seconds to train the model and around 430 seconds for the model to make the final predictions.*","4eb683c9":"Predicting test.csv :","db8b8cc6":"# Digit Recognizer"}}