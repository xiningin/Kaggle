{"cell_type":{"c59ed93e":"code","b2191156":"code","74e41135":"code","84117655":"code","bd349c28":"code","57915d38":"code","1a37c5c6":"code","6fdd58dc":"code","e8c7f0ee":"code","58938cc3":"code","5b37e8af":"code","35de9542":"code","fc0bb1c3":"code","e00b5e79":"code","55ef4f0b":"code","21215a46":"code","f75acb5c":"code","0184dddc":"code","39c67be5":"code","2aa6ff3a":"code","5240802d":"code","026e336e":"code","2e42946b":"code","4c197d93":"code","4a9016df":"code","cd5791af":"code","39980f75":"code","3c812222":"code","9e6e6238":"code","adfcf87c":"code","928e87ba":"code","717ab27e":"code","8f545dbd":"code","fc4dfca2":"code","15bc93b6":"code","0971c626":"code","9e04e567":"code","7eaa1bb0":"code","3b98bf21":"code","1fcf601c":"code","a82ed905":"code","7e12e223":"code","5477befb":"code","29aea64f":"code","2b582e2d":"code","56c32a61":"code","342532bd":"code","30126f9c":"code","87eaeec7":"code","35f41278":"code","6dce000a":"code","bb47013d":"code","8f4a2269":"markdown"},"source":{"c59ed93e":"import pandas as pd\nimport numpy as np\nimport random as rnd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import cross_val_score","b2191156":"test=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ndf=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","74e41135":"print(\"dimensions of train: {}\".format(df.shape))\nprint(\"dimensions of test: {}\".format(test.shape))","84117655":"df.describe()","bd349c28":"df.head()","57915d38":"df.columns","1a37c5c6":"print(df.isnull().sum())","6fdd58dc":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False)","e8c7f0ee":"df.info()","58938cc3":"df['LotFrontage']=df['LotFrontage'].fillna(df['LotFrontage'].mean())\ndf['BsmtCond']=df['BsmtCond'].fillna(df['BsmtCond'].mode()[0])\ndf['BsmtQual']=df['BsmtQual'].fillna(df['BsmtQual'].mode()[0])\ndf['FireplaceQu']=df['FireplaceQu'].fillna(df['FireplaceQu'].mode()[0])\ndf['GarageType']=df['GarageType'].fillna(df['GarageType'].mode()[0])\ndf['GarageFinish']=df['GarageFinish'].fillna(df['GarageFinish'].mode()[0])\ndf['GarageQual']=df['GarageQual'].fillna(df['GarageQual'].mode()[0])\ndf['GarageCond']=df['GarageCond'].fillna(df['GarageCond'].mode()[0])\ndf['MasVnrType']=df['MasVnrType'].fillna(df['MasVnrType'].mode()[0])\ndf['MasVnrArea']=df['MasVnrArea'].fillna(df['MasVnrArea'].mode()[0])\ndf['BsmtExposure']=df['BsmtExposure'].fillna(df['BsmtExposure'].mode()[0])\ndf['BsmtFinType2']=df['BsmtFinType2'].fillna(df['BsmtFinType2'].mode()[0])","5b37e8af":"df.drop(['Id','PoolQC','GarageYrBlt','Alley','Fence','MiscFeature'],axis=1,inplace=True)","35de9542":"df.shape","fc0bb1c3":"print(df.isnull().sum())","e00b5e79":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='YlGnBu')","55ef4f0b":"df.dropna(inplace=True)","21215a46":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='coolwarm')","f75acb5c":"df.shape","0184dddc":"df.head()","39c67be5":"colums=['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood','Condition1','Condition2','BldgType','HouseStyle','RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','ExterQual','ExterCond','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir','Electrical','KitchenQual','Functional','FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive','SaleType','SaleCondition']","2aa6ff3a":"len(colums)","5240802d":"def category_onehot_multcols(multcolumns):\n    df_final=final_df\n    i=0\n    for fields in multcolumns:\n        \n        print(fields)\n        df1=pd.get_dummies(final_df[fields],drop_first=True)\n        \n        final_df.drop([fields],axis=1,inplace=True)\n        if i==0:\n            df_final=df1.copy()\n        else:\n            df_final=pd.concat([df_final,df1],axis=1)\n        i=i+1\n    df_final=pd.concat([final_df,df_final],axis=1)\n    \n    return df_final","026e336e":"main_df=df.copy()","2e42946b":"test.head()","4c197d93":"print(test.isnull().sum())","4a9016df":"test.shape","cd5791af":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False,cmap='viridis')","39980f75":"test['LotFrontage']=test['LotFrontage'].fillna(test['LotFrontage'].mean())\ntest['MSZoning']=test['MSZoning'].fillna(test['MSZoning'].mode()[0])\ntest['BsmtCond']=test['BsmtCond'].fillna(test['BsmtCond'].mode()[0])\ntest['BsmtQual']=test['BsmtQual'].fillna(test['BsmtQual'].mode()[0])\ntest['FireplaceQu']=test['FireplaceQu'].fillna(test['FireplaceQu'].mode()[0])\ntest['GarageType']=test['GarageType'].fillna(test['GarageType'].mode()[0])\ntest['MasVnrType']=test['MasVnrType'].fillna(test['MasVnrType'].mode()[0])\ntest['MasVnrArea']=test['MasVnrArea'].fillna(test['MasVnrArea'].mode()[0])\ndf['GarageFinish']=df['GarageFinish'].fillna(df['GarageFinish'].mode()[0])\ndf['GarageQual']=df['GarageQual'].fillna(df['GarageQual'].mode()[0])\ndf['GarageCond']=df['GarageCond'].fillna(df['GarageCond'].mode()[0])\ntest['BsmtExposure']=test['BsmtExposure'].fillna(test['BsmtExposure'].mode()[0])\ntest['BsmtFinType2']=test['BsmtFinType2'].fillna(test['BsmtFinType2'].mode()[0])","3c812222":"test.drop(['Id','GarageYrBlt','Alley','PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","9e6e6238":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False,cmap='viridis')","adfcf87c":"test.loc[:,test.isnull().any()].head()","928e87ba":"test['Utilities']=test['Utilities'].fillna(test['Utilities'].mode()[0])\ntest['Exterior1st']=test['Exterior1st'].fillna(test['Exterior1st'].mode()[0])\ntest['Exterior2nd']=test['Exterior2nd'].fillna(test['Exterior2nd'].mode()[0])\ntest['BsmtFinType1']=test['BsmtFinType1'].fillna(test['BsmtFinType1'].mode()[0])\ntest['BsmtFinSF1']=test['BsmtFinSF1'].fillna(test['BsmtFinSF1'].mode()[0])\ntest['BsmtFinSF2']=test['BsmtFinSF2'].fillna(test['BsmtFinSF2'].mode()[0])\ntest['BsmtUnfSF']=test['BsmtUnfSF'].fillna(test['BsmtUnfSF'].mode()[0])\ntest['TotalBsmtSF']=test['TotalBsmtSF'].fillna(test['TotalBsmtSF'].mode()[0])\ntest['BsmtFullBath']=test['BsmtFullBath'].fillna(test['BsmtFullBath'].mode()[0])\ntest['BsmtHalfBath']=test['BsmtHalfBath'].fillna(test['BsmtHalfBath'].mode()[0])\ntest['KitchenQual']=test['KitchenQual'].fillna(test['KitchenQual'].mode()[0])\ntest['Functional']=test['Functional'].fillna(test['Functional'].mode()[0])\ntest['GarageCars']=test['GarageCars'].fillna(test['GarageCars'].mode()[0])\ntest['GarageArea']=test['GarageArea'].fillna(test['GarageArea'].mode()[0])\ntest['SaleType']=test['SaleType'].fillna(test['SaleType'].mode()[0])\ntest['MasVnrArea']=test['MasVnrArea'].fillna(test['MasVnrArea'].mode()[0])","717ab27e":"test.shape","8f545dbd":"final_df=pd.concat([df,test],axis=0)","fc4dfca2":"final_df.shape","15bc93b6":"final_df=category_onehot_multcols(colums) ","0971c626":"final_df.shape","9e04e567":"final_df=final_df.loc[:,~final_df.columns.duplicated()]","7eaa1bb0":"final_df.shape","3b98bf21":"final_df","1fcf601c":"final_df.isnull().sum()","a82ed905":"df_train=final_df.iloc[:1422,:]\ndf_test=final_df.iloc[1422:,:]","7e12e223":"df_train.head()","5477befb":"df_test.head()","29aea64f":"df_test.drop(['SalePrice'],axis=1,inplace=True)","2b582e2d":"x=df_train.drop(['SalePrice'],axis=1)\ny=df_train[['SalePrice']]","56c32a61":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=0)","342532bd":"sc=StandardScaler()","30126f9c":"x_train=sc.fit_transform(x_train)\nx_test=sc.fit_transform(x_test)","87eaeec7":"rdmf=RandomForestClassifier(n_estimators=10,criterion='entropy',random_state=0) \nrdmf.fit(x_train,y_train)","35f41278":"print(rdmf.score(x_test,y_test))","6dce000a":"test = sc.fit_transform(df_test)\ny_pred = rdmf.predict(test)","bb47013d":"y_pred","8f4a2269":"# test data"}}