{"cell_type":{"de7c8640":"code","cdea7ae1":"code","f0f46020":"code","20cb3d6d":"code","522c8e54":"code","7e6a45d7":"code","467d8173":"code","79e19baf":"code","fba3ce55":"code","dc3923b0":"code","d5cd75a8":"code","4ed03fad":"code","9398bec5":"code","2fb09b9b":"code","429714ff":"code","94999c4d":"code","05dbfe24":"code","e9d4e508":"code","5276f9d7":"code","bcc0d5ad":"code","a4e7e9d6":"code","b813eaa3":"code","997eb553":"code","42c0e5a9":"code","aa93bac2":"code","69e5b363":"code","88081d61":"code","152406ac":"code","8b2b8911":"code","6245e35b":"code","deeea91c":"code","efef6293":"code","f694b724":"code","b2210de3":"code","9cb0c647":"code","17d0e305":"code","79c6d48a":"code","686ca905":"code","71ae5924":"code","85b8b16c":"code","c95fe4db":"code","60825814":"code","9ff32beb":"code","4202d7f5":"code","78f0bfa7":"markdown","8157240b":"markdown","5f05921f":"markdown","e1897b81":"markdown","a9d80e1c":"markdown","c764e8b3":"markdown","d2191622":"markdown","db43ea3f":"markdown"},"source":{"de7c8640":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt","cdea7ae1":"df = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")","f0f46020":"df.shape","20cb3d6d":"df.head()","522c8e54":"df[df[\"title\"] == \"Breaking Bad\"]","7e6a45d7":"df.describe()","467d8173":"df.info()","79e19baf":"df.isnull().sum()","fba3ce55":"import missingno\n\nmissingno.bar(df)","dc3923b0":"df.director.fillna(\"missing\", inplace=True)\ndf.cast.fillna(\"missing\", inplace=True)\ndf.country.fillna(\"missing\", inplace=True)\n\ndf.isna().sum()","d5cd75a8":"df.dropna(subset=[\"date_added\"], inplace=True)\ndf.dropna(subset=[\"rating\"], inplace=True)\n\n# df = df.dropna()\n\ndf.isna().sum()","4ed03fad":"df.shape","9398bec5":"df = df.rename(columns={\"listed_in\": \"genre\"})\ndf[\"genre\"] = df[\"genre\"].apply(lambda x: x.split(\", \")[0])\n\ndf.tail()","2fb09b9b":"df.country.value_counts()","429714ff":"df[\"country_main\"] = df[\"country\"].apply(lambda x: x.split(\", \")[0])\n\ndf.tail()","94999c4d":"df[\"month_add\"] = df[\"date_added\"].apply(lambda x: x.split(\" \")[0])\ndf[\"year_add\"] = df[\"date_added\"].apply(lambda x: x.split(\" \")[-1])\n\ndf.head()","05dbfe24":"sns.countplot(x=\"type\", data=df)","e9d4e508":"temp_df = df[df[\"release_year\"] > 2000]\nsns.countplot(y=\"release_year\", data=temp_df)","5276f9d7":"plt.figure(figsize=(12,7))\nsns.countplot(y=\"release_year\", data=temp_df, hue=\"type\")\nplt.gca().invert_yaxis()","bcc0d5ad":"df.genre.value_counts()","a4e7e9d6":"plt.figure(figsize=(10, 6))\nsns.barplot(x=df.genre.value_counts()[:10].sort_values().index, \n            y=df.genre.value_counts()[:10].sort_values().values)\nplt.xticks(rotation=45)\nplt.show()","b813eaa3":"plt.figure(figsize=(12,7))\nsns.countplot(x=\"genre\", data=df, order=df[\"genre\"].value_counts()[:10].index)","997eb553":"plt.figure(figsize=(12,7))\nsns.countplot(x=\"country_main\", data=df, order=df[\"country_main\"].value_counts()[:10].index, hue=\"type\")","42c0e5a9":"tv_df = df[df[\"type\"]==\"TV Show\"]\n\ntv_df[\"duration\"]=tv_df[\"duration\"].str.replace(\" Season\", \"\")\ntv_df[\"duration\"]=tv_df[\"duration\"].str.replace(\"s\", \"\")\ntv_df[\"duration\"]=tv_df[\"duration\"].astype(str).astype(int)\ntv_df[\"duration\"]","aa93bac2":"tv_df.loc[:, [\"title\", \"duration\"]].sort_values(by=\"duration\", ascending=False)[:5]","69e5b363":"tv_df[\"duration\"].hist()","88081d61":"tv_shows = df[df[\"type\"]==\"TV Show\"]\ntv_shows[\"duration\"] = tv_shows[\"duration\"].str.replace(\" Season\", \"\")\ntv_shows[\"duration\"] = tv_shows[\"duration\"].str.replace(\"s\", \"\")\ntv_shows[\"duration\"] = tv_shows[\"duration\"].astype(str).astype(int)\ntv_shows[\"duration\"].head()","152406ac":"tv_shows.sort_values(by=\"duration\", ascending=False)[:1]","8b2b8911":"tv_shows[\"duration\"].hist()","6245e35b":"movies = df[df[\"type\"]==\"Movie\"]\nmovies[\"duration\"] = movies[\"duration\"].str.replace(\" min\", \"\")\nmovies[\"duration\"] = movies[\"duration\"].astype(str).astype(int)\nmovies[\"duration\"].head()","deeea91c":"sns.kdeplot(data=movies[\"duration\"])","efef6293":"duration_year = movies.groupby([\"release_year\"]).mean()\nduration_year\n\nplt.figure(figsize=(15,6))\nsns.lineplot(x=duration_year.index, y=duration_year.duration.values)","f694b724":"# 1 - get top ten countries\ntop_n_countries = movies[\"country_main\"].value_counts()[:5].index.values\n# [\"US\", \"India\", \"UK\", ...]\n\n# 2 Filter movies\n# datensatz[datensatz[\"Spalte\"] OPERATOR Wert]\nmovies_new = movies[movies[\"country_main\"].isin(top_n_countries)]\n# movies_new.country_main.unique()\n\n# 3 Groupby release_year und country_main -> Durchschnittliche Dauer pro Jahr f\u00fcr jedes Land\nduration_year_country = movies_new.groupby([\"release_year\", \"country_main\"]).mean()\nduration_year_country = duration_year_country.reset_index()\n\n# 4 Plot\nplt.figure(figsize=(15,6))\nsns.lineplot(x=duration_year_country[\"release_year\"], \n             y=duration_year_country[\"duration\"], \n             hue=duration_year_country[\"country_main\"])","b2210de3":"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n\ntrain = [\"The sky is blue.\", \"The sky is bright.\"]\n\ncountVectorizer = CountVectorizer(analyzer=\"word\", stop_words=\"english\")\ntfidfVectorizer = TfidfVectorizer(analyzer=\"word\", stop_words=\"english\")\n\ncount_wm = countVectorizer.fit_transform(train)\ntfidf_wm = tfidfVectorizer.fit_transform(train)\n\ncount_tokens = countVectorizer.get_feature_names()\ntfidf_tokens = tfidfVectorizer.get_feature_names()\n\ndf_count = pd.DataFrame(data=count_wm.toarray(), index=[\"Doc1\", \"Doc2\"], columns=count_tokens)\ndf_count","9cb0c647":"df_tfidf = pd.DataFrame(data=tfidf_wm.toarray(), index=[\"Doc1\", \"Doc2\"], columns=tfidf_tokens)\ndf_tfidf","17d0e305":"df[\"text\"] = df[\"description\"] + \" \" + df[\"genre\"] + \" \" + df[\"type\"]","79c6d48a":"df[\"description\"]","686ca905":"tfidf = TfidfVectorizer(stop_words=\"english\")\n#tfidf = CountVectorizer(stop_words=\"english\")","71ae5924":"df[\"text\"] = df[\"text\"].fillna(\"\")\n\ntfidf_matrix = tfidf.fit_transform(df[\"text\"])\n\ntfidf_matrix.shape","85b8b16c":"from sklearn.metrics.pairwise import linear_kernel\n\nsim_matrix = linear_kernel(tfidf_matrix, tfidf_matrix)","c95fe4db":"indices = pd.Series(df.index, index=df[\"title\"]).drop_duplicates()\nindices","60825814":"def get_recommendations(title, sim_matrix = sim_matrix):\n    idx = indices[title]\n    \n    sim_scores = list(enumerate(sim_matrix[idx]))\n    \n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True) # sim_scores.sort(_values)()\n    \n    sim_scores = sim_scores[1:100]\n    \n    movie_idx = [i[0] for i in sim_scores]\n    \n    return df[\"title\"].iloc[movie_idx]","9ff32beb":"get_recommendations(\"Breaking Bad\")","4202d7f5":"df[df[\"title\"]==\"Gothika\"]","78f0bfa7":"Wir nehmen immer nur das erst genannte Land:","8157240b":"## Staffeln","5f05921f":"1. Welche L\u00e4nder machen Filme\/Serien\n1. Welche Genres sind \"beliebt\"\n1. H\u00e4ufigkeit von Schauspielern\n1. Welcher Direktor hat di meisten Filme produziert\n1. Schauspieler x Genres\n1. Filmdauer\/Seriendauer (Durchschnitt & Summe)\n1. Welches Jahr hat die meisten Filme\/Serien\n1. Rating (F\u00fcr wen wede Filme produziert)","e1897b81":"## Jahre","a9d80e1c":"# Visualisierungen","c764e8b3":"## Country","d2191622":"# Recommender","db43ea3f":"--- TBD: year_added\n\n## Genres"}}