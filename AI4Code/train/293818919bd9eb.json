{"cell_type":{"1bcc7be7":"code","f807d366":"code","715804be":"code","548c0701":"code","a010918d":"code","00b38b33":"code","5d45a6a8":"code","313982ed":"code","1039ac11":"code","abee4543":"code","46bbef94":"code","4ab3d9c9":"code","3e1dd95d":"code","2c196b40":"code","7ab916ad":"code","6cdd844e":"code","6d24eef5":"code","7f2e77b4":"code","6a9fc82c":"code","8aaa3001":"markdown","a2457583":"markdown","b24d3ff4":"markdown","2d2ef7dd":"markdown"},"source":{"1bcc7be7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f807d366":"df = pd.read_csv('..\/input\/playstation2-games\/playstation2_games_L-Z.csv', encoding='utf8')\ndf.head()","715804be":"df1 = pd.read_csv('..\/input\/playstation2-games\/playstation2_games_L-Z.csv', encoding='utf8')\ndf1.head()","548c0701":"#Code by Mohammad Imran Shaikh https:\/\/www.kaggle.com\/shikhnu\/covid19-tweets-eda-visualization-wordcloud\n\nunique_df = pd.DataFrame()\nunique_df['Features'] = df.columns\nunique=[]\nfor i in df.columns:\n    unique.append(df[i].nunique())\nunique_df['Uniques'] = unique\n\nf, ax = plt.subplots(1,1, figsize=(15,7))\n\nsplot = sns.barplot(x=unique_df['Features'], y=unique_df['Uniques'], alpha=0.8)\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center',\n                   va = 'center', xytext = (0, 9), textcoords = 'offset points')\nplt.title('Bar plot for number of unique values in each column',weight='bold', size=15)\nplt.ylabel('#Unique values', size=12, weight='bold')\nplt.xlabel('Features', size=12, weight='bold')\nplt.xticks(rotation=90)\nplt.show()","a010918d":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Developer)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set1', background_color=\"purple\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","00b38b33":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Publisher)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","5d45a6a8":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import linear_kernel\nfrom textwrap import wrap\n\ntfidf = TfidfVectorizer(stop_words='english')\ntfidf_matrix = tfidf.fit_transform(df['Developer'])\nprint(tfidf_matrix.shape)","313982ed":"cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)","1039ac11":"indices = pd.Series(df.index, index=df['Title']).drop_duplicates()\nprint(indices)","abee4543":"idx = indices['Zwei!!']\nprint(idx)","46bbef94":"def get_recommendations(text, cosine_sim=cosine_sim):\n    idx = indices[text]\n    sim_scores = list(enumerate(cosine_sim[idx]))\n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    sim_scores = sim_scores[1:11]\n    episodes_indices = [i[0] for i in sim_scores]\n\n    return df['Title'].iloc[episodes_indices]","4ab3d9c9":"get_recommendations('Zoo Puzzle?SuperLite 2000: ZoooJP')","3e1dd95d":"!pip install pycomp","2c196b40":"# Importing libraries\nfrom pycomp.viz.insights import *\n\n# JP rate\njp_colors = ['crimson', 'darkslateblue']\nplot_donut_chart(df=df, col='JP',  colors=jp_colors,\n                 title='Absolute Total and Percentual JP PlayStation2')","7ab916ad":"# Countplot for gender\nEuPal_colors = ['lightskyblue', 'lightcoral']\n\nplot_countplot(df=df, col='EU\/PAL', palette=EuPal_colors,\n               title='PlayStation2 Released Percentual')","6cdd844e":"# Plotting a double donut chart\nplot_double_donut_chart(df=df, col1='JP', col2='EU\/PAL',  \n                        colors1=['crimson', 'navy'], colors2=['lightcoral', 'lightskyblue'],\n                        title=\"Playstation2 JP & EU\/PAL\")","6d24eef5":"# Distribution of age variable\nplot_distplot(df=df, col='Unnamed: 0', title=\"PlayStation2 Distribution\")","7f2e77b4":"plot_distplot(df=df, col='Unnamed: 0', hue='JP', kind='boxen', palette=jp_colors,\n              title=\"JP PlayStation2\")","6a9fc82c":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","8aaa3001":"![](https:\/\/www.wikihow.com\/images_en\/thumb\/8\/8d\/Play-PS2-Games-on-a-PS3-Step-34.jpg\/v4-1200px-Play-PS2-Games-on-a-PS3-Step-34.jpg)pt.wikihow.com","a2457583":"Spoiler alert: No Missing Values.","b24d3ff4":"![](https:\/\/assets.change.org\/photos\/3\/pa\/hv\/SFpAhvtBpCzVxHA-800x450-noPad.jpg?1521799994)https:\/\/www.change.org\/p\/ubisoft-and-south-park-studios-make-south-park-the-stick-of-truth-for-ps4-and-xbox-one","2d2ef7dd":"#PyComp Library\n\n#Codes by Thiago Panini https:\/\/www.kaggle.com\/thiagopanini\/pycomp-predicting-survival-on-titanic-disaster\/notebook\n\nhttps:\/\/pypi.org\/project\/pycomp\/"}}