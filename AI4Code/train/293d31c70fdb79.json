{"cell_type":{"8098c14d":"code","76105770":"code","13d81cd8":"code","1f987c46":"code","65d7bfba":"code","49fc88eb":"code","a13c624b":"code","3b04850a":"code","b24b5650":"code","964c0acb":"code","a46e6c5c":"code","a114d290":"code","b8694c2b":"code","414c733d":"code","9acdd2d7":"code","cc2f93b5":"code","d4e57f10":"markdown","e8ec3af0":"markdown","b2b1428d":"markdown","88f4c593":"markdown","586246b4":"markdown","36a6da7a":"markdown","e3e47e7f":"markdown"},"source":{"8098c14d":"import warnings\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#supress warnings\nwarnings.filterwarnings(\"ignore\")\n#Load Haberman.csv into a pandas dataFrame.\nhaberman = pd.read_csv(\"..\/input\/habermans-survival-data-set\/haberman.csv\",names=['age', 'operation_year', 'axil_nodes', 'survival_status'])\nhaberman.reset_index(drop=True, inplace=True)\nstatus1 = haberman.loc[haberman[\"survival_status\"] == 1];\nstatus2 = haberman.loc[haberman[\"survival_status\"] == 2];","76105770":"#Data-Points and Features\nprint(haberman.shape)","13d81cd8":"print(haberman.columns)","1f987c46":"#shows first 10 data-points.\nhaberman.head(n=11)","65d7bfba":"print(haberman.info())","49fc88eb":"print(haberman.describe())","a13c624b":"print(\"No. Of Rows: \" + str(haberman.shape[0]))\nprint(\"No. Of Columns: \" + str(haberman.shape[1]))\nprint(\"Columns: \" + \", \".join(haberman.columns))\nprint(\"No. of patients in each survival status:\")\nprint(haberman[\"survival_status\"].value_counts())\nprint(\"% of patients in each survival status:\")\nprint(haberman[\"survival_status\"].value_counts(normalize=True)*100)","3b04850a":"\"\"\"\n2.1 PDF and Histogram\n\nProbality Density Function (PDF) is the probabilty that the variable takes a value x. (smoothed version of the histogram)\nKernel density estimation (KDE) is a non-parametric way to estimate the probability density function of a random variable\nHere the height of the bar denotes the percentage of data points under the corresponding group\n\"\"\"\nsns.FacetGrid(haberman, hue=\"survival_status\", size=5) \\\n   .map(sns.distplot, \"age\") \\\n   .add_legend();\nplt.show();\n\nsns.FacetGrid(haberman, hue=\"survival_status\", size=5) \\\n   .map(sns.distplot, \"operation_year\") \\\n   .add_legend();\nplt.show();\n\nsns.FacetGrid(haberman, hue=\"survival_status\", size=5) \\\n   .map(sns.distplot, \"axil_nodes\") \\\n   .add_legend();\nplt.show();\n","b24b5650":"\"\"\"\n2.2 CDF\n\nThe cumulative distribution function (cdf) is the probability that the variable takes a value less than or equal to x.\n\"\"\"\nlabel = [\"PDF\", \"CDF\"]\n#status1\nprint(\"Status 1\")\ncounts, bin_edges = np.histogram(status1['age'], bins=10,density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.figure(1)\nplt.title(\"PDF and CDF for age\")\nplt.xlabel(\"Age\")\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend(label)\nplt.show()\n\n# status2\nprint(\"*\"*100)\nprint(\"Status 2\")\ncounts, bin_edges = np.histogram(status2['age'], bins=10, density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.figure(2)\nplt.title(\"PDF and CDF for age\")\nplt.xlabel(\"Age\")\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend(label)\nplt.show();","964c0acb":"\"\"\"\n2.2 CDF\n\nThe cumulative distribution function (cdf) is the probability that the variable takes a value less than or equal to x.\n\"\"\"\nlabel = [\"PDF\", \"CDF\"]\n\n#status1\nprint(\"Status 1\")\ncounts, bin_edges = np.histogram(status1['operation_year'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.figure(1)\nplt.title(\"PDF and CDF for Operation Year\")\nplt.xlabel(\"Operation Year\")\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend(label)\nplt.show()\n# status2\nprint(\"*\"*100)\nprint(\"Status 2\")\ncounts, bin_edges = np.histogram(status2['operation_year'], bins=10,density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.figure(2)\nplt.title(\"PDF and CDF for Operation Year\")\nplt.xlabel(\"Operation Year\")\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend(label)\nplt.show();","a46e6c5c":"\"\"\"\n2.2 CDF\n\nThe cumulative distribution function (cdf) is the probability that the variable takes a value less than or equal to x.\n\"\"\"\nlabel = [\"PDF\", \"CDF\"]\n#status1\nprint(\"Status 1\")\ncounts, bin_edges = np.histogram(status1['axil_nodes'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.figure(1)\nplt.title(\"PDF and CDF for Axil Nodes\")\nplt.xlabel(\"Axil Nodes\")\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend(label)\nplt.show()\n# status2\nprint(\"*\"*100)\nprint(\"Status 2\")\ncounts, bin_edges = np.histogram(status2['axil_nodes'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.figure(2)\nplt.title(\"PDF and CDF for Axil Nodes\")\nplt.xlabel(\"Axil Nodes\")\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend(label)\nplt.show();","a114d290":"\"\"\"\n2.3 Box Plot with whiskers\nBox-plot can be visualized as a PDF on the side-ways.\n\"\"\"\nfig,axes = plt.subplots(1, 3, figsize=(15, 5))\nsns.boxplot(x = \"survival_status\", y = \"age\", data = haberman,ax=axes[0]).set_title(\"Box plot for survival_status and age\")\nsns.boxplot(x = \"survival_status\", y = \"operation_year\", data = haberman,ax=axes[1]).set_title(\"Box plot for survival_status and operation_year\")\nsns.boxplot(x = \"survival_status\", y = \"axil_nodes\", data = haberman,ax=axes[2]).set_title(\"Box plot for survival_status and axil_node\")\nplt.show()","b8694c2b":"\"\"\"\n2.4 : Violin Plot\nA violin plot combines the benefits of the previous two plots \nand simplifies them\nDenser regions of the data are fatter, and sparser ones thinner \nin a violin plot\n\"\"\"\nfig,axes = plt.subplots(1, 3, figsize=(15, 5))\nsns.violinplot(x = \"survival_status\", y = \"age\", data = haberman,ax=axes[0]).set_title(\"Box plot for survival_status and age\")\nsns.violinplot(x = \"survival_status\", y = \"operation_year\", data = haberman,ax=axes[1]).set_title(\"Box plot for survival_status and operation_year\")\nsns.violinplot(x = \"survival_status\", y = \"axil_nodes\", data = haberman,ax=axes[2]).set_title(\"Box plot for survival_status and axil_node\")\nplt.show()","414c733d":"\"\"\"\n3.1 1-D scatter plot for axil_nodes and age\n\"\"\"\nimport numpy as np\nplt.xlabel(\"Axil-Nodes\")\nplt.plot(status1[\"axil_nodes\"], np.zeros_like(status1[\"axil_nodes\"]), 'o')\nplt.plot(status2[\"axil_nodes\"], np.zeros_like(status2[\"axil_nodes\"]), 'o')\nplt.show()\nplt.xlabel(\"Age\")\nplt.plot(status1[\"age\"], np.zeros_like(status1[\"age\"]), 'o')\nplt.plot(status2[\"age\"], np.zeros_like(status2[\"age\"]), 'o')\nplt.show()","9acdd2d7":"\"\"\"\n3.2 2-D scatter plot\nTwo-dimensional scatterplots visualize a relation (correlation) between two variables X and Y\n\"\"\"\nsns.set_style(\"whitegrid\");\nsns.FacetGrid(haberman, hue=\"survival_status\", size=4) \\\n   .map(plt.scatter, \"age\", \"axil_nodes\") \\\n   .add_legend();\nplt.show(); ","cc2f93b5":"\"\"\"\n3.3 Pair Plot\n\nPair plot in seaborn plots the scatter plot between every two data columns in a given dataframe.\nIt is used to visualize the relationship between two variables.\n\"\"\"\nplt.close();\nsns.set_style(\"whitegrid\");\nsns.pairplot(haberman, hue=\"survival_status\", size=4,vars=[\"age\",\"operation_year\", \"axil_nodes\"]);\nplt.show()","d4e57f10":"# Haberman's Cancer Survival - EDA\nThe dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago's Billings Hospital on the survival of patients who had undergone surgery for breast cancer.\n\n**FEATURES**:\n\n1. Age of patient at time of operation (numerical)\n2. Patient's year of operation (year - 1900, numerical)\n3. Number of positive axillary nodes detected (numerical)\n4. Survival status (class attribute)<br>\n-- 1 = the patient survived 5 years or longer<br>\n-- 2 = the patient died within 5 year\n\n**Domain**:\n\n  Positive axillary lymph node:\n* A lymph node in the area of the armpit (axilla) to which cancer has spread. This spread is determined by surgically removing some of the lymph nodes and examining them under a microscope to see whether cancer cells are present.\n\n* Here Number of positive axillary nodes detected features is being referred as \"axil nodes\"\n\n**OBJECTIVE:**\n\nPredict the patient survival status i.e survival status=1 or survival status=2 based upon patient\u2019s age, year of treatment and the number of axil nodes.","e8ec3af0":"**Observation(s):**\n* The number of axil nodes of the survivors is highly densed from 0 to 5.\n* Almost 80% of the patients have less than or equal to 5 axil nodes and Patients with 0 axil nodes were the highest.\n* Data in axil_nodes column is skewed.\n* The data is very less to predict survival rate correctly and most of the data is overlapping.","b2b1428d":"# 3. Bi-variate analysis (scatter plots, pair-plots) ","88f4c593":"# 2. Univariate Analysis(PDF, CDF, Boxplot and Violin Plot)","586246b4":"**Observation(s):**\n* The patient's whose age>77 died within 5 year(Survival Status=2) and those having age<34 survived 5 years or longer(Survival Status=1).\n* Most of the patients had positive axillary nodes from 0 to 5.\n* Patients with axil-nodes>46 died within 5 year(Survival Status=2).\n* Axil-Node is giving some intution in the dataset as compared to other features.","36a6da7a":"**Observations:**<br>\n* The age of the patients vary from 30 to 83\n* The maximum number of positive axil nodes observed is 52\n* Nearly 75% of the patients have less than 5 axil nodes and nearly 50% of the patients have less than 1 axil node\n* The dataset is imbalanced with approximately 74% of values as '1' i.e in about 74% cases the patient survived 5 years or longer","e3e47e7f":"# 1. High level statistics of the dataset"}}