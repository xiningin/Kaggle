{"cell_type":{"0206113e":"code","6342297a":"code","2b43d608":"code","17897eb9":"code","6e83f076":"code","206a2783":"markdown","23452d67":"markdown","4c1efe24":"markdown","7735763c":"markdown","7c080eae":"markdown"},"source":{"0206113e":"%%capture\n\n!git clone https:\/\/github.com\/Megvii-BaseDetection\/YOLOX -q\n\n%cd YOLOX\n!pip install -U pip && pip install -r requirements.txt\n!pip install -v -e . ","6342297a":"%%capture\n\n!wget https:\/\/github.com\/Megvii-BaseDetection\/storage\/releases\/download\/0.0.1\/yolox_s.pth","2b43d608":"!pip install -Uqqq 'git+https:\/\/github.com\/cocodataset\/cocoapi.git#subdirectory=PythonAPI'","17897eb9":"%%writefile cots_config.py\n\nimport os\n\nfrom yolox.exp import Exp as MyExp\n\nclass Exp(MyExp):\n    def __init__(self):\n        super(Exp, self).__init__()\n        self.depth = 0.33\n        self.width = 0.50\n        self.exp_name = os.path.split(os.path.realpath(__file__))[1].split(\".\")[0]\n        \n        self.data_dir = \"\/kaggle\/input\/cots-yolox-dataset\"\n        self.train_ann = \"\/kaggle\/input\/cots-yolox-dataset\/annotations_train.json\"\n        self.val_ann = \"\/kaggle\/input\/cots-yolox-dataset\/annotations_valid.json\"\n\n        self.num_classes = 1\n\n        self.max_epoch = 5\n        self.data_num_workers = 2\n        self.eval_interval = 1\n        \n        self.mosaic_prob = 1.0\n        self.mixup_prob = 1.0\n        self.hsv_prob = 1.0\n        self.flip_prob = 0.5\n        self.no_aug_epochs = 2\n        \n        self.input_size = (960, 960)\n        self.mosaic_scale = (0.5, 1.5)\n        self.random_size = (10, 20)\n        self.test_size = (960, 960)","6e83f076":"!python tools\/train.py \\\n    -f cots_config.py \\\n    -d 1 \\\n    -b 32 \\\n    --fp16 \\\n    -o \\\n    -c yolox_s.pth","206a2783":"## COCO api install","23452d67":"<h1><center>Clean & Modular YoloX Training script<\/center><\/h1>     \n\n<center><img src = \"https:\/\/i.imgur.com\/iatgdo5.jpg\" width = \"635\" height = \"235\"\/><\/center>         \n\nThe dataset was built to be compatible with the train (train.py) script that can be found [HERE](https:\/\/github.com\/Megvii-BaseDetection\/YOLOX). To see how the dataset was built you can check [HERE](https:\/\/www.kaggle.com\/coldfir3\/simple-yolox-dataset-generator-coco-json). The inference notebook is still WIP.\n\nThe four main steps for training YoloX:\n1. Generating the dataset in a compatible format (COCO)\n1. Installing YoloX\n1. Creating the config.py file\n1. Training the model\n\nI took inspiration on [this](https:\/\/www.kaggle.com\/remekkinas\/yolox-training-pipeline-cots-dataset-lb-0-507) amazing notebook\n\n<h3 style='background:orange; color:black'><center>Consider upvoting this notebook if you found it helpful.<\/center><\/h3>","4c1efe24":"## YoloX install","7735763c":"## Training YolovX","7c080eae":"## Configuring your model\n\nFor more details on how to configure the hypeparams check [this](https:\/\/github.com\/Megvii-BaseDetection\/YOLOX\/blob\/main\/docs\/train_custom_data.md). Those hyperparametes ARE NOT OPTIMAL and have been chosen just to make commiting this notebook quick. Feel free to share good hyperparams on the comments."}}