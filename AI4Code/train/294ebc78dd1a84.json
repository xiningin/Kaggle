{"cell_type":{"06621e46":"code","12ce78a9":"code","d2743070":"code","150af7a2":"code","107044cd":"code","6b62a351":"code","74a2c9a5":"markdown","3d2fc3cd":"markdown","45151fb4":"markdown","208b71b6":"markdown","332585f2":"markdown","d94403f6":"markdown","90cabe49":"markdown"},"source":{"06621e46":"from IPython.display import clear_output\n\n!pip install -U lightautoml\nclear_output()","12ce78a9":"import numpy as np\nimport pandas as pd\nfrom lightautoml.automl.presets.tabular_presets import TabularUtilizedAutoML\nfrom lightautoml.tasks import Task\nfrom sklearn.metrics import f1_score","d2743070":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\nsubs = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\n\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","150af7a2":"N_THREADS = 4 \nN_FOLDS = 5 \nRANDOM_STATE = 12\nTEST_SIZE = 0.2 \nTIMEOUT = 1800  #30 mins\n\ndef f1_metric(y_true, y_pred, **kwargs):\n    return f1_score(y_true, (y_pred > 0.5).astype(int), **kwargs)\n\ntask = Task('binary', metric = f1_metric)\nroles = {\n    'target': 'Survived',\n}","107044cd":"automl = TabularUtilizedAutoML(task = task, \n                       timeout = TIMEOUT,\n                       cpu_limit = N_THREADS,\n                       random_state=RANDOM_STATE,\n                       general_params = {'use_algos': [['linear_l2', 'lgb', 'lgb_tuned']]},\n                       reader_params = {'n_jobs': N_THREADS})\nhistory = automl.fit_predict(train, roles = roles , verbose =1 )","6b62a351":"test_pred = automl.predict(test)\nsubs['Survived'] = (test_pred.data[:, 0] > 0.5).astype(int)\nsubs.to_csv('lightautoml.csv', index = False)\nsubs.head()","74a2c9a5":"# Data Loading and Preprocessing","3d2fc3cd":"# Installing LightAutoML","45151fb4":"# Imports","208b71b6":"# AutoML","332585f2":"# <center> \ud83e\udd16LIGHTAUTOML CLASSIFICATION - TITANIC<\/center>\n## <center>If you find this notebook useful, support with an upvote\ud83d\udc4d<\/center>","d94403f6":"**Created by Sanskar Hasija**\n\n**\ud83e\udd16LightAutoML Classification - Titanic**\n\n**15 NOVEMBER 2021**\n","90cabe49":"### Submission"}}