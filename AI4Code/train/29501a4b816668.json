{"cell_type":{"63669cfc":"code","99ea001a":"code","beff821f":"code","84b9fc09":"code","a08d266d":"code","477ef2a6":"code","f33b3a9f":"code","1dc3d3f8":"code","d9ec0466":"code","360fd0ec":"code","a57b71d2":"code","1937ce7a":"code","8decd998":"code","8c195daf":"code","964bbcf9":"code","7bb21749":"code","e34dbc08":"code","6d8f37fa":"code","6636525d":"code","428f66ab":"code","6220f14f":"code","03cf5b1b":"code","4a101b8c":"code","41b782fc":"code","dc2a9821":"code","2306ff04":"code","d9e3bd15":"code","0efb891f":"code","7296e7e2":"code","fffb21df":"code","a73023e1":"code","c0ac500d":"code","eb53d578":"code","bf1ff234":"code","d1ec49c5":"code","b34c843f":"code","a74af528":"code","88620fda":"code","832ab3f7":"code","aee1da07":"code","e4876ad3":"code","e31d6af6":"code","50ddb022":"code","ee21e495":"code","49ea1316":"code","552d1799":"markdown","0df1cd92":"markdown","93937276":"markdown","acc9f6f1":"markdown","6c20a124":"markdown","4672f97e":"markdown","1a9bb7f5":"markdown","a638967f":"markdown","79015fdb":"markdown","4c09fc7e":"markdown","704e2631":"markdown","7b4464a2":"markdown","aada9376":"markdown","a2e3b2aa":"markdown","d5c97ce8":"markdown"},"source":{"63669cfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","99ea001a":"path = '\/kaggle\/input\/dwdm-petrol-prices\/Petrol Prices.csv'\ndata = pd.read_csv(path)","beff821f":"data.head(7)","84b9fc09":"data.tail(4)","a08d266d":"from pandasql import sqldf # XXXXXXX","477ef2a6":"data['Months'] = pd.DatetimeIndex(data['Date']).month \ndata","f33b3a9f":"print(data.loc[143]) #locate record","1dc3d3f8":"data.iat[143,0] ='Aug 18 2016' #change value","d9ec0466":"print(data.loc[143])#locate cell","360fd0ec":"data['Months'] = pd.DatetimeIndex(data['Date']).month \ndata","a57b71d2":"groupy = data.groupby(\"Months\").count()\ngroupy","1937ce7a":"#import calendar","8decd998":"#data['Months'] = calendar.month_name('Months')\n#data","8c195daf":"groupy.plot(kind='bar',title='Data Grouping by Month',figsize=(20,20))","964bbcf9":"data['Day']=pd.DatetimeIndex(data['Date']).day\ndata['Year']=pd.DatetimeIndex(data['Date']).year\ndata['Months'].fillna('NULL',inplace = True)\ndata['Day'].fillna('NULL',inplace = True)\ndata['Year'].fillna('NULL',inplace = True)\ndata","7bb21749":"data['Months'] = data['Months'].astype(str)\ndata.dtypes","e34dbc08":"data['Timestamp'] = \" \"","6d8f37fa":"data['Timestamp']= pd.to_datetime(data['Date'])","6636525d":"from datetime import datetime","428f66ab":"data['Timestamp'] = pd.to_datetime(data['Date']).values.astype(datetime)","6220f14f":"data","03cf5b1b":"extract = data[['Gasolene_87', 'Gasolene_90', 'Auto_Diesel', 'Kerosene', 'Propane', 'Butane', 'HFO', 'Asphalt', 'ULSD', 'Ex_Refinery']]\nextract","4a101b8c":"extract = data[['Gasolene_87' ,'Gasolene_90', 'Auto_Diesel', 'Kerosene', 'Propane', 'Butane', 'HFO', 'Asphalt', 'ULSD', 'Ex_Refinery','Timestamp']]\nextract","41b782fc":"extract.plot(kind='line',title='Gas prices over the Period',x='Timestamp',\n             y=['Gasolene_87' ,'Gasolene_90','Kerosene', 'Propane' ,'Butane' ,'HFO', 'Asphalt' ,'ULSD' ,'Ex_Refinery'],\n             figsize=(18,18))","dc2a9821":"percentage = data['Kerosene'].pct_change(periods = 4) #pandas.DataFrame\npercentage","2306ff04":"percentage.plot(kind='line', title='percentage change(y) for four time periods(x)',figsize=(18,18))\n","d9e3bd15":"newdataset = {'Propane' :data.Propane ,'Gasolene_90' :data.Gasolene_90, 'Month' :data.Months,\n               'Day' :data.Day, 'Year' :data.Year, 'Timestamp' :data.Timestamp} \nnewdataset\n","0efb891f":"data2 = pd.DataFrame(newdataset)\ndata2","7296e7e2":"data3 = data2.drop(data2.index[[229,230,231]])#error in using null values\ndata3  #drop last 3 null rows","fffb21df":"from sklearn.cluster import KMeans","a73023e1":"interestdataset = {'Propane' :data3.Propane ,'Gasolene_90' :data3.Gasolene_90} #dataset with just two columns for kmmeans\ninterestdataset","c0ac500d":"data4 = pd.DataFrame(interestdataset) #dataframe with that dataset\ndata4","eb53d578":"Mean=KMeans(n_clusters=10, init='k-means++', n_init=10, max_iter=6)\ndata3['Cluster#'] = Mean.fit_predict(data4) #assign result from kmeans to the extra row\ndata3","bf1ff234":"frame2 = frame.drop(frame.index[[229,230,231]])#error in using null values\nframe2  #drop last 3 null rows","d1ec49c5":"#suppose to be cluster# column from previous output","b34c843f":"import seaborn as sns","a74af528":"plt.style.use('dark_background')","88620fda":"frame2.dtypes #an error was discovered after the plot ran","832ab3f7":"frame2['Propane']= frame2['Propane'].astype(int)\nframe2['Gasolene_90']= frame2['Gasolene_90'].astype(int)\nframe2","aee1da07":"frame2.plot(kind='scatter', x='Propane' , y= 'Gasolene_90', c=Mean.labels_, cmap='rainbow', figsize=(16,16))","e4876ad3":"#a\ngrouping = data.groupby('Year')","e31d6af6":"#grouping.mean() gave an error\n#changing columns to int\ndata.dtypes","50ddb022":"data","ee21e495":"data['Propane']= data['Propane'].astype(int)\ndata['Gasolene_90']= data['Gasolene_90'].astype(int)\ndata['Gasolene_87']= data['Gasolene_87'].astype(int)\ndata['Auto_Diesel']= data['Auto_Diesel'].astype(int)\ndata['Kerosene']= data['Kerosene'].astype(int)\ndata['Butane']= data['Butane'].astype(int)\ndata['HFO']= data['HFO'].astype(int)\ndata['Asphalt']= data['Asphalt'].astype(int)\ndata['ULSD']= data['ULSD'].astype(int)\ndata['87_Change']= data['87_Change'].astype(int)\ndata['SCT']= data['SCT'].astype(int)\ndata['Ex_Refinery']= data['Ex_Refinery'].astype(int)\ndata","49ea1316":"grouping.mean()","552d1799":"#HFO was not selling for a while....had NAN for multiple columns","0df1cd92":"#creat column and populate wid date","93937276":"#14","acc9f6f1":"#11","6c20a124":"#15","4672f97e":"#n_init => Number of time the k-means algorithm will be run with different centroid seeds. The final results will be the best output of n_init consecutive runs in terms of inertia","1a9bb7f5":"#10\n#every four time periods is 4 weeks(1 month)","a638967f":"#error discovered for in recoord\n#locate error in data set and correct it","79015fdb":"#K-Means","4c09fc7e":"#15D\nThe Microsoft Time Series algorithm provides multiple algorithms that are optimized for forecasting continuous values, such as product sales, over time\n\nThe simple exponential smoothing (SES) is a short-range forecasting method that assumes a reasonably stable mean in the data with no trend (consistent growth or decline). It is one of the most popular forecasting methods that uses weighted moving average of past data as the basis for a forecast.\n","704e2631":"9)#plot prices against period(timestamp)","7b4464a2":"#create column","aada9376":"#display date from date column as the int","a2e3b2aa":"#record 4 is the percentage change for 0, 1, 2, 3....record 8 is the percentage change for 7,6,5 and 4","d5c97ce8":"#13\n"}}