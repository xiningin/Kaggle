{"cell_type":{"3babf15b":"code","7329b5be":"code","c6dd7e16":"code","02cf4ced":"code","a72a52a9":"code","e949317d":"code","8772ea7f":"code","1f7be56b":"code","eac1c33d":"code","ab249899":"code","9af6f689":"code","14f91e14":"code","8e4e7b01":"code","be3219a2":"code","d3087c6a":"code","c0843621":"code","2b14432f":"code","84f3f14e":"code","c99d1d3f":"code","572f11dd":"code","0800f11f":"code","b2e2a4cc":"code","5799f2a2":"code","154b9c77":"code","e9ea4bd5":"code","12f047b2":"code","9ca8d700":"code","60ccffcc":"code","7ff7b9f5":"code","69dd598f":"code","12d771bd":"code","c06bdc7f":"code","10f250f0":"code","d0128179":"code","5cb2407b":"code","0571e311":"code","d07e6acf":"code","29df2a60":"code","171759bd":"code","9f125023":"code","2ea6c375":"code","e2155f3f":"code","e221cdf9":"code","69dff814":"code","2563e438":"code","b207f4b6":"code","d96ee706":"code","e66b68df":"code","f30e4704":"code","517d039c":"code","bc3d9a17":"code","3c7b2848":"code","191da12b":"code","bdf7cd27":"code","8e871f18":"code","cfa63964":"code","6d40fa89":"markdown","d2e1df01":"markdown","59e00f61":"markdown","8096b46e":"markdown","62f0751c":"markdown","785fa255":"markdown","2a7d1667":"markdown","43f5af4d":"markdown","cc1dbe97":"markdown","3eba0578":"markdown","aa5d7db5":"markdown","948cde93":"markdown","662804dd":"markdown","d40bb868":"markdown","7eb8765b":"markdown","b7756fe2":"markdown","4facaf97":"markdown","36ef04ad":"markdown"},"source":{"3babf15b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nplt.rcParams['figure.figsize'] = [14.0, 10.0]\nimport folium","7329b5be":"df = pd.read_csv('..\/input\/used-car-information\/UsedCars_Combined.csv')","c6dd7e16":"df.info()","02cf4ced":"df.describe()","a72a52a9":"df.head(5)","e949317d":"df['brand'].unique()","8772ea7f":"df['fuel_type'].unique()","1f7be56b":"temp_rank = [7,11,1,2,14,32,15,3,27,4,40,10,44,8,24,40,45,39,18,12,50,19,5,9,81,16,46,20,43,37,24]","eac1c33d":"len(temp_rank)","ab249899":"len(df['brand'].unique())","9af6f689":"rankings = {}\nj=0\nfor i in df['brand'].unique():\n    rankings[i] = int(temp_rank[j])\n    j+=1","14f91e14":"temp_rank = []","8e4e7b01":"for i in df['brand']:\n    temp_rank.append(rankings[i])","be3219a2":"len(temp_rank)","d3087c6a":"df['brand_rank'] = temp_rank","c0843621":"df.head()","2b14432f":"current_year = 2021","84f3f14e":"age = []","c99d1d3f":"for i in df['year']:\n    age.append(current_year-float(i))","572f11dd":"df['car_age'] = age","0800f11f":"df.head()","b2e2a4cc":"fig = px.box(x = df['distance_travelled(kms)'])\nfig.show()","5799f2a2":"# According to sources cars clocking below 30k kms is a good car","154b9c77":"thresh_kms = 30000","e9ea4bd5":"temp = []","12f047b2":"for i in df['distance_travelled(kms)']:\n    if(i<=thresh_kms):\n        temp.append(int(1))\n    else:\n        temp.append(int(0))","9ca8d700":"df['distance below 30k km'] = temp","60ccffcc":"df.head()","7ff7b9f5":"temp = []","69dd598f":"for i in range(0,1725,1):\n    if((df['car_age'][i]<=4) and (df['distance below 30k km'][i] == 1)):\n        temp.append(int(1))\n    else:\n        temp.append(int(0))","12d771bd":"df['new and less used'] = temp","c06bdc7f":"df.head()","10f250f0":"df['inv_car_price'] = 1\/df['price']\ndf['inv_car_dist'] = 1\/df['distance_travelled(kms)']\ndf['inv_car_age'] = 1\/df['car_age']\ndf['inv_brand'] = 1\/df['brand_rank']","d0128179":"df.head()","5cb2407b":"max_price = df['inv_car_price'].max()\nmin_price = df['inv_car_price'].min()\nprice_range = max_price - min_price","0571e311":"temp = []","d07e6acf":"for i in df['inv_car_price']:\n    temp.append((i-min_price)\/price_range)","29df2a60":"df['std_invprice'] = temp","171759bd":"max_dist = df['inv_car_dist'].max()\nmin_dist = df['inv_car_dist'].min()\ndist_range = max_dist - min_dist","9f125023":"temp = []","2ea6c375":"for i in df['inv_car_dist']:\n    temp.append((i-min_dist)\/dist_range)","e2155f3f":"df['std_invdistance_travelled'] = temp","e221cdf9":"temp = []","69dff814":"max_br = df['inv_brand'].max()\nmin_br = df['inv_brand'].min()\nbr_range = max_br-min_br","2563e438":"for i in df['inv_brand']:\n    temp.append((i-min_br)\/br_range)","b207f4b6":"df['std_invrank'] = temp","d96ee706":"df.head(10)","e66b68df":"df['best_buy1'] = df['std_invprice'] * df['std_invrank'] *df['std_invdistance_travelled']*1000000","f30e4704":"df.head()","517d039c":"df[df['best_buy1'] == 0]","bc3d9a17":"df['best_buy2'] = df['best_buy1'] * df['new and less used']","3c7b2848":"df.head()","191da12b":"df_temp = df.sort_values(by = ['best_buy2'], ascending=False)","bdf7cd27":"df_temp = df_temp[0:10]","8e871f18":"df_temp['name'] = df['brand']+\" \"+df['model_name']","cfa63964":"fig = px.histogram(x = df_temp['name'], y=df_temp['best_buy2'])\nfig.show()","6d40fa89":"# Brand Ranking","d2e1df01":"# Inverting price, distance, car_age and brand","59e00f61":"# Import Statements","8096b46e":"# Adding Brand Rank To Dataset","62f0751c":"# Calculating Car Age","785fa255":"# Loading The Dataset","2a7d1667":"\n    for best_buy1 the values higher the better is the value for money in regards to price, distance and rank","43f5af4d":"# Standardising car_ranks","cc1dbe97":"# Adding Age To Dataset","3eba0578":"# Car Distance Travelled Exploration","aa5d7db5":"# Getting Unique Values For Columns","948cde93":"# Getting New And Less Used Cars","662804dd":"    \n    higher the value of best_buy2 better is the value for money as well as the\n    less used and newly made cars","d40bb868":"# Dataset Description","7eb8765b":"# Best Buy","b7756fe2":"# Reviewing New Features In Dataset","4facaf97":"\n\n    Best buy will be defined by std_price * std_distance_travelled * std_rank *100000\n    \n    It will get their product and the car with the lowest will be  good buy  =  best_buy1\n    \n    To further differntiate the data, the cars having newandlessused 1 will be segregated   =   best_buy2\n    \n","36ef04ad":"# Standardising inv_price and inv_dist"}}