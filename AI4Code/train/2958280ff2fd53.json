{"cell_type":{"0d4e231a":"code","4dce73eb":"code","691f6d69":"code","f6080896":"code","e42224ef":"code","39c9fda5":"code","c52527de":"code","9ac2b2bb":"code","2e5ae731":"code","b24aad30":"code","867314f3":"code","7d210ddc":"code","7f5e8023":"code","0df82bd5":"code","873f5601":"code","e0cf2655":"markdown","31f71be5":"markdown","d1a4efbe":"markdown"},"source":{"0d4e231a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4dce73eb":"data = pd.Series([10,20,30,40,50,60,70], index = ['A','B','C','D','E','F','G'])\ndata","691f6d69":"print(data)  \nprint(data['A':'D'])  # This is Explicit method which including final index\nprint(data[1: 4])  # this is implicit method which excluding final index and it begins with 0 integer index","f6080896":"print(data)\nprint(data['A':'D'])    # It is equivalent to the explicit method loc\nprint(data.loc['A':'D']) # it is explicit method \nprint(data.iloc[0:4])    # it is implicit method which excluding final index E ","e42224ef":"states_capt = pd.Series({'Uttar Pradesh':'Lucknow','Madhya Pradesh': 'Bhopal','Tamil Nadu':'Chennai',\n                        'Kerala':'Thiruvandanpuram','Himachal Pradesh':'Shimla' })\nstates_lan = pd.Series({'Uttar Pradesh':'Awadhi','Madhya Pradesh':'Hindi','Tamil Nadu':'Tamil',\n                       'Kerala':'Malyalam','Himachal Pradesh':'Pahadi'})","39c9fda5":"states_d = pd.DataFrame({'Capitals':states_capt,'Language':states_lan})\nstates_d","c52527de":"states_d['Capitals']","9ac2b2bb":"states_d.Capitals","2e5ae731":"states_d.keys()","b24aad30":"states_d.values","867314f3":"states_d.index","7d210ddc":"states_d['Uttar Pradesh': 'Kerala'] # this is the explicit method ","7f5e8023":"states_d[1:3] # This is implicit method","0df82bd5":"print(states_d)\nprint(states_d.loc[:'Kerala',:]) # This is explicit method   ","873f5601":"print(states_d)\nprint(states_d.iloc[0:3,:]) # it is immplicit method ","e0cf2655":"There are two methods for data indexing and selection in series  and dataFrame\n1. Implicit : Integers are used for slicing and it doesn't includes the final index\n2. Explicit : Labels are used for slicing and it includes the final index\nExplicit is better than Implicits.","31f71be5":"# Data Indexing and Selecction in Series ","d1a4efbe":"# Data Indexing and selection in dataFrame "}}