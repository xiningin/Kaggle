{"cell_type":{"3216bceb":"code","b52143c9":"code","63800a4b":"code","424bcbb6":"code","f5ec3a19":"code","b730c99a":"code","6774f608":"code","71676bdd":"code","9ee86003":"code","8603ff40":"code","fc5c2f09":"code","67b02e36":"markdown"},"source":{"3216bceb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b52143c9":"import pandas as pd\nimport numpy as np\n\ndata=pd.read_csv('\/kaggle\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","63800a4b":"target=data[['Churn']]\ntarget.head()","424bcbb6":"from sklearn.preprocessing import LabelEncoder\n\nle=LabelEncoder()\ntarget=le.fit_transform(target)\ntarget=pd.DataFrame(target,columns=['target'])\ntarget.head()","f5ec3a19":"data.drop(['customerID','TotalCharges','Churn'],axis=1,inplace=True)\ndata.head()","b730c99a":"cat_cols=data.select_dtypes(exclude=['int','float']).columns\nenc_data=list(cat_cols)\ndata[enc_data]=data[enc_data].apply(lambda col:le.fit_transform(col))\ndata.head()","6774f608":"data.shape","71676bdd":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(data,target,test_size=0.3,random_state=50)\n\nprint(\"x train shape : \",x_train.shape)\nprint(\"x test shape : \",x_test.shape)\nprint(\"y train shape : \",y_train.shape)\nprint(\"y test shape : \",y_test.shape)","9ee86003":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nimport warnings\n\nmodel=KNeighborsClassifier(n_neighbors=5)\nmodel.fit(x_train,y_train)\npred=model.predict(x_test)\nprint(\"Accuracy of the model is : \",accuracy_score(pred,y_test)*100)\nwarnings.filterwarnings(\"ignore\")","8603ff40":"from sklearn.ensemble import ExtraTreesClassifier\n\nmodel=ExtraTreesClassifier(n_estimators=100)\nmodel.fit(data,target)\nk=model.feature_importances_\nprint(k)","fc5c2f09":"import seaborn as sns\nimp = pd.Series(k, index=data.columns).sort_values(ascending=False)\nsns.barplot(y=imp.index, x=imp.values, palette=\"Blues_d\", orient='h')","67b02e36":"Feature Importances"}}