{"cell_type":{"153c5019":"code","59c182e3":"code","c822ee6a":"code","2c1378f1":"code","9ded83cc":"code","5c68d651":"code","ff4ceffe":"code","c344a787":"code","066190e0":"code","35270653":"code","080ede0b":"code","080f8e0b":"code","598f5588":"markdown","b096d6ec":"markdown","85e0e50e":"markdown","3dcb1e8f":"markdown","662bc000":"markdown","1fceb9cd":"markdown","ed08f1be":"markdown","95d42776":"markdown","7a78dc90":"markdown","54734c28":"markdown","96d34da3":"markdown"},"source":{"153c5019":"import numpy as np # for manipulating 3d images\nimport pandas as pd # for reading and writing tables\nimport h5py # for reading the image files\nimport skimage # for image processing and visualizations\nimport sklearn # for machine learning and statistical models\nimport os # help us load files and deal with paths","59c182e3":"%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport seaborn as sns\nplt.rcParams[\"figure.figsize\"] = (8, 8)\nplt.rcParams[\"figure.dpi\"] = 125\nplt.rcParams[\"font.size\"] = 14\nplt.rcParams['font.family'] = ['sans-serif']\nplt.rcParams['font.sans-serif'] = ['DejaVu Sans']\nplt.style.use('ggplot')\nsns.set_style(\"whitegrid\", {'axes.grid': False})","c822ee6a":"train_df = pd.read_csv('..\/input\/train.csv')\ntrain_df.head(5) # show the first 5 lines","2c1378f1":"def read_scan(in_filename, folder='train'):\n    full_scan_path = os.path.join('..', 'input',folder, in_filename)\n    # load the image using hdf5\n    with h5py.File(full_scan_path, 'r') as h:\n        return h['image'][:][:, :, :, 0] # we read the data from the file","9ded83cc":"sample_scan = train_df.iloc[0] # just take the first row\nprint(sample_scan)\n# turn the h5_path into the full path\nimage_data = read_scan(sample_scan['h5_path'])\nprint('Image Shape:', image_data.shape)","5c68d651":"def calc_brightness(in_image_data):\n    return np.mean(in_image_data)\nprint(calc_brightness(image_data))","ff4ceffe":"%%time\ntrain_df['brightness'] = train_df['h5_path'].map(lambda c_filename: calc_brightness(read_scan(c_filename)))","c344a787":"sns.lmplot('age_years', 'brightness', data=train_df)","066190e0":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(train_df['brightness'].values.reshape((-1, 1)), train_df['age_years'].values)\nlin_reg.coef_","35270653":"test_df = pd.read_csv('..\/input\/test_sample_submission.csv')[['scan_id']]\ntest_df['h5_path'] = test_df['scan_id'].map(lambda s_id: 'mri_{:08d}.h5'.format(s_id))\ntest_df['brightness'] = test_df['h5_path'].map(lambda c_filename: calc_brightness(read_scan(c_filename, folder='test')))\ntest_df.head(5)","080ede0b":"test_df['age_years'] = lin_reg.predict(test_df['brightness'].values.reshape((-1, 1)))\nsns.lmplot('age_years', 'brightness', data=test_df)","080f8e0b":"# save the output\ntest_df[['scan_id', 'age_years']].to_csv('linear_brightness_prediction.csv', index=False)","598f5588":"# Load a Scan\n- the data on kaggle are located in a parent folder called input. \n- Since the files have been organized into train and test we use the train folder","b096d6ec":"We reuse the trained model to generate predictions of the age based on the brightness","85e0e50e":"# Calculate Brightness\nWe can calculate the average brightness by just taking the average of all the pixels","3dcb1e8f":"# Read Image","662bc000":"# Visualize the Values\nUsing a simple linear model we see that brightness goes down with age","1fceb9cd":"### Plot Setup Code\nHere we setup the defaults to make the plots look a bit nicer for the notebook","ed08f1be":"We see that the linear model was correct and that we lose 9 brightness points per year","95d42776":"### Run over all scans\nWe use the `.map` function from pandas to calculate the brightness for all the scans","7a78dc90":"# Load the Training Data\nWe start with the training data since we have labels for them and can look in more detail","54734c28":"# Overview\nIn this notebook we load the data and view different images to get a better idea about the challenge we are facing. This is always a very helpful first step. It is also important that you can see and try to make some of your own predictions about the data. If you cannot see differences between the groups it is going to be difficult for a biomarker to capture that (but not necessarily impossible)","96d34da3":"# Apply to Test Data\nWe can now load the test data and make a prediction"}}