{"cell_type":{"d08a287d":"code","6ed1ca3d":"markdown"},"source":{"d08a287d":"#coding:utf-8\nimport sys\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\nimport math\nfrom pylab import*\n\nImage = cv2.imread('..\/input\/skin-cancer\/cccc.jpg',1)  \nimage = cv2.cvtColor(Image,cv2.COLOR_BGR2GRAY)\nimg=np.array(image,dtype=np.float64) \n\n\nIniLSF = np.ones((img.shape[0],img.shape[1]),img.dtype) \nIniLSF[30:80,30:80]= -1 \nIniLSF=-IniLSF \n\n\nImage = cv2.cvtColor(Image,cv2.COLOR_BGR2RGB) \nplt.figure(1),plt.imshow(Image),plt.xticks([]), plt.yticks([])   # to hide tick values on X and Y axis\nplt.contour(IniLSF,[0],color = 'b',linewidth=2)  \nplt.draw(),plt.show(block=False) \n\ndef mat_math (intput,str):\n    output=intput \n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            if str==\"atan\":\n                output[i,j] = math.atan(intput[i,j]) \n            if str==\"sqrt\":\n                output[i,j] = math.sqrt(intput[i,j]) \n    return output \n\n\ndef CV (LSF, img, mu, nu, epison,step):\n\n    Drc = (epison \/ math.pi) \/ (epison*epison+ LSF*LSF)\n    Hea = 0.5*(1 + (2 \/ math.pi)*mat_math(LSF\/epison,\"atan\")) \n    Iy, Ix = np.gradient(LSF) \n    s = mat_math(Ix*Ix+Iy*Iy,\"sqrt\") \n    Nx = Ix \/ (s+0.000001) \n    Ny = Iy \/ (s+0.000001) \n    Mxx,Nxx =np.gradient(Nx) \n    Nyy,Myy =np.gradient(Ny) \n    cur = Nxx + Nyy \n    Length = nu*Drc*cur \n\n    Lap = cv2.Laplacian(LSF,-1) \n    Penalty = mu*(Lap - cur) \n\n    s1=Hea*img \n    s2=(1-Hea)*img \n    s3=1-Hea \n    C1 = s1.sum()\/ Hea.sum() \n    C2 = s2.sum()\/ s3.sum() \n    CVterm = Drc*(-1 * (img - C1)*(img - C1) + 1 * (img - C2)*(img - C2)) \n\n    LSF = LSF + step*(Length + Penalty + CVterm) \n    #plt.imshow(s, cmap ='gray'),plt.show() \n    return LSF \n\n\nmu = 1 \nnu = 0.003 * 255 * 255 \nnum = 20 \nepison = 1 \nstep = 0.1 \nLSF=IniLSF \nfor i in range(1,num):\n    LSF = CV(LSF, img, mu, nu, epison,step) \n    if i % 1 == 0:   \n        plt.imshow(Image),plt.xticks([]), plt.yticks([])  \n        plt.contour(LSF,[0],colors='r',linewidth=2) \n        plt.draw(),plt.show(block=False),plt.pause(0.01) ","6ed1ca3d":"The python code of Chan-Vese model and RSF model for image segmentation\n\nT. Chan, L. Vese, 2001. Active contours without edges. IEEE Trans. Image Process. 10, 266\u2013277.\n\nC. Li, C. Kao J. Gore, Z. Ding, 2008. Minimization of region-scalable fitting energy for image segmentation. IEEE Trans. Image Process. 17\uff0c 1940\u20131949."}}