{"cell_type":{"793dc5db":"code","d393b9af":"code","a42c203a":"code","20c47d7d":"code","dc6c5a9f":"code","0e5e061e":"code","5a99033f":"markdown","5451afa0":"markdown"},"source":{"793dc5db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d393b9af":"# borrowed from https:\/\/www.kaggle.com\/samaxtech\/designing-and-creating-a-database-sql#Importing-Data-into-SQLite\nimport sqlite3\n#run_query(q): Takes a SQL query as an argument and returns a pandas dataframe by using the connection as a SQLite built-in context manager. \ndef run_query(q):\n    with sqlite3.connect('testing') as conn:\n        return pd.read_sql_query(q, conn)\n    \n#run_command(c): Takes a SQL command as an argument and executes it using the sqlite module.\ndef run_command(c):\n    with sqlite3.connect('testing') as conn:\n        conn.execute('PRAGMA foreign_keys = ON;') #Enables enforcement of foreign key restraints.\n        conn.isolation_level = None\n        conn.execute(c)\n    \n#show_tables(): calls the run_query() function to return a list of all tables and views in the database.\ndef show_tables():\n    q = '''SELECT\n            name,\n            type\n        FROM sqlite_master\n        WHERE type IN (\"table\",\"view\");\n        '''\n    return run_query(q)    ","a42c203a":"import pandas as pd\n\n\ndf = pd.read_csv(\"\/kaggle\/input\/democratvsrepublicantweets\/ExtractedTweets.csv\")\n\nconn = sqlite3.connect('testing')\ndf.to_sql('tweets', conn, index=False, if_exists='replace')","20c47d7d":"show_tables()","dc6c5a9f":"cursor = conn.cursor()","0e5e061e":"cursor.execute(\"select * from tweets\")\nbooks = cursor.fetchall()\nfor i in books:\n    print(i)","5a99033f":"run sql queries using pandas and sqlalchemy\nTutorial: https:\/\/www.kaggle.com\/kaikarren\/sql-with-pandas-and-sqlalchemy","5451afa0":"https:\/\/www.kaggle.com\/samaxtech\/designing-and-creating-a-database-sql#Importing-Data-into-SQLite"}}