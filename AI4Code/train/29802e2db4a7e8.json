{"cell_type":{"4608b028":"code","623a28c1":"code","6fb6e7aa":"code","7b6520b6":"code","d1ebf0fa":"code","03700f68":"code","cc8706ec":"code","b251586f":"code","e13a80aa":"code","3517877d":"code","0e22c207":"code","a1d6d84e":"code","974b7f3f":"code","4cfd5eb7":"code","77f92e5b":"code","6b9507f6":"code","ccfa22c5":"markdown","998a9d6b":"markdown","5a4887d9":"markdown","dafb8fd9":"markdown","5980ea18":"markdown","9045b3ae":"markdown","b3aa062f":"markdown","ecdb720e":"markdown","cce9f420":"markdown","bb7be41f":"markdown","485ab607":"markdown"},"source":{"4608b028":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nfrom sklearn.metrics import r2_score , mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures , LabelEncoder\nfrom sklearn.tree import DecisionTreeRegressor , plot_tree\nfrom sklearn.ensemble import RandomForestRegressor\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","623a28c1":"data = pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")\ndata.head(5)","6fb6e7aa":"data.info()","7b6520b6":"data.describe().T","d1ebf0fa":"le = LabelEncoder()\ndata[\"sex\"] = le.fit_transform(data[\"sex\"])\ndata[\"sex\"].unique()","03700f68":"data[\"smoker\"] = le.fit_transform(data[\"smoker\"])\ndata[\"smoker\"].unique()","cc8706ec":"data[\"region\"] = le.fit_transform(data[\"region\"])\ndata[\"region\"].unique()","b251586f":"sns.pairplot(data, hue=\"smoker\");","e13a80aa":"sns.heatmap(data.corr() , annot=True);","3517877d":"X, y = data.drop([\"charges\"], axis=1), data[\"charges\"].values.reshape(-1,1)","0e22c207":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","a1d6d84e":"model = LinearRegression()\nmodel.fit(X_train, y_train)","974b7f3f":"print(\"intercept : \" , model.intercept_)\nprint(\"slope : \" , model.coef_)","4cfd5eb7":"y_pred = model.predict(X_test)\ny_pred_df = pd.DataFrame(y_pred, columns=[\"Predicted Response\" ])\ny_test_df = pd.DataFrame(y_test, columns=[\"Real Values\"])\npd.concat([y_test_df , y_pred_df] , axis=1)","77f92e5b":"score = r2_score(y_test , y_pred)\nprint(\"R2 Score : {}\".format(score))","6b9507f6":"MSE = mean_squared_error(y_test , y_pred)\nprint(\"MSE: {}\".format(MSE))","ccfa22c5":"## Create Model & Fit","998a9d6b":"# Dataset\n\n## Columns\n\n**age:** age of primary beneficiary\n\n**sex:** insurance contractor gender, female, male\n\n**bmi:** Body mass index, providing an understanding of body, weights that are relatively high or low relative to height,\nobjective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9\n\n**children:** Number of children covered by health insurance \/ Number of dependents\n\n**smoker:** Smoking\n\n**region:** the beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n\n**charges**: Individual medical costs billed by health insurance","5a4887d9":"### Transformation non-numerical labels to numerical labels.\n*    Smoker :\n        - Yes = 1\n        - No  =0\n*    Sex :\n        - Male = 1\n        - Female = 0","dafb8fd9":"## Preprocessing","5980ea18":"## Data Preprocessing","9045b3ae":"## Get Results","b3aa062f":"## Metrics","ecdb720e":"## Predict","cce9f420":"# Multiple Linear Regression","bb7be41f":"## Describe","485ab607":"## Visualize"}}