{"cell_type":{"362099bf":"code","77f3cc26":"code","26c2683b":"code","a4e71a94":"code","25bcd7f1":"code","369d0f73":"code","0ff9a752":"code","a39945e4":"code","f5e15a50":"code","592a216f":"code","798a8caa":"code","8cc21db7":"code","46217ecd":"code","de2264b2":"code","df2ff4c5":"code","c7b609cd":"code","e9a64d01":"code","4c90577c":"code","86fa6307":"code","c6ddadec":"code","91e69091":"code","90b4d061":"code","4dbfd91b":"code","36cda250":"code","d8ebe37d":"code","a7a3ef73":"code","404071b8":"code","ea4cee2f":"code","dd83f2fc":"code","ae4360a3":"code","9e2c21a1":"code","318c1890":"code","d841ffde":"code","2b082198":"code","0dd38853":"code","11daaafb":"code","814083a9":"code","f8033b22":"code","ad778cf5":"code","366c7cc3":"code","47337d9b":"code","c0a65fda":"code","f14e40db":"code","34dea9a8":"code","e5566233":"code","38340c4b":"code","01622878":"code","936dee66":"code","60cac28f":"code","3589ae51":"code","56d679b7":"code","b5746f83":"code","95fb5383":"code","b3d0ca6b":"code","f7d22d64":"code","340a1ba7":"code","61424a73":"code","b424241f":"code","bac0bc7e":"code","78ecdd5e":"code","c74468ae":"code","85a4e70c":"code","aefee737":"code","043631b0":"code","5cb6addc":"code","15d44e81":"code","92b11b69":"code","ebcdeba6":"code","50f52b12":"code","46e1224b":"code","0a1ed0aa":"code","8ddaef5b":"code","e76299a0":"code","0122a264":"code","5faf0bbc":"code","5429ae0f":"code","2ecd9c1a":"code","3b25072d":"code","6e7f2ad0":"code","1c522c0c":"code","99b25c98":"code","67ac73aa":"code","8addc9de":"code","d647b2e3":"code","ca7864eb":"code","d4884114":"code","4ff1b457":"code","3de8b98d":"markdown","a93de564":"markdown","9efeda96":"markdown","df5b39f9":"markdown","0c3e572e":"markdown","4be9abe2":"markdown","385e43ac":"markdown"},"source":{"362099bf":"import pandas as pd\npd.Series?","77f3cc26":"animals = ['Tiger', 'Bear', 'Moose']\npd.Series(animals)","26c2683b":"flower = ['Subarna']\npd.Series(flower)","a4e71a94":"numbers = [1, 2, 3]\npd.Series(numbers)","25bcd7f1":"animals = ['Tiger', 'Bear', None]\npd.Series(animals)","369d0f73":"numbers = [1, 2, None]\npd.Series(numbers)","0ff9a752":"import numpy as np\nnp.nan == None","a39945e4":"np.nan == np.nan","f5e15a50":"np.isnan(np.nan)","592a216f":"sports = {'Archery': 'Bhutan',\n          'Golf': 'Scotland',\n          'Sumo': 'Japan',\n          'Taekwondo': 'South Korea'}\ns = pd.Series(sports)\ns","798a8caa":"s.index","8cc21db7":"import pandas as pd\ns = pd.Series(['Tiger', 'Bear', 'Moose'], index=['India', 'America', 'Canada'])\ns","46217ecd":"sports = {'Archery': 'Bhutan',\n          'Golf': 'Scotland',\n          'Sumo': 'Japan',\n          'Taekwondo': 'South Korea'}\ns = pd.Series(sports, index=['Golf', 'Sumo', 'Hockey'])\ns","de2264b2":"sports = {'Archery': 'Bhutan',\n          'Golf': 'Scotland',\n          'Sumo': 'Japan',\n          'Taekwondo': 'South Korea'}\ns = pd.Series(sports)\ns","df2ff4c5":"s.iloc[3]","c7b609cd":"s.loc['Golf']","e9a64d01":"s[3]","4c90577c":"s['Golf']","86fa6307":"sports = {99: 'Bhutan',\n          100: 'Scotland',\n          101: 'Japan',\n          102: 'South Korea'}\ns = pd.Series(sports)\ns\n","c6ddadec":"s[0] #This won't call s.iloc[0] as one might expect, it generates an error instead","91e69091":"s = pd.Series([100.00, 120.00, 101.00, 3.00])\ns","90b4d061":"total = 0\nfor item in s:\n    total+=item\nprint(total)","4dbfd91b":"import numpy as np\n\ntotal = np.sum(s)\nprint(total)","36cda250":"#this creates a big series of random numbers\ns = pd.Series(np.random.randint(0,1000,10000))\ns.head()","d8ebe37d":"len(s)","a7a3ef73":"%%timeit -n 100\nsummary = 0\nfor item in s:\n    summary+=item","404071b8":"%%timeit -n 100\nsummary = np.sum(s)","ea4cee2f":"s+=2 #adds two to each item in s using broadcasting\ns.head()","dd83f2fc":"for label, value in s.iteritems():\n    s.set_value(label, value+2)\ns.head()","ae4360a3":"%%timeit -n 10\ns = pd.Series(np.random.randint(0,1000,10000))\nfor label, value in s.iteritems():\n    s.loc[label]= value+2","9e2c21a1":"%%timeit -n 10\ns = pd.Series(np.random.randint(0,1000,10000))\ns+=2\n","318c1890":"s = pd.Series([1, 2, 3])\ns.loc['Animal'] = 'Bears'\ns","d841ffde":"original_sports = pd.Series({'Archery': 'Bhutan',\n                             'Golf': 'Scotland',\n                             'Sumo': 'Japan',\n                             'Taekwondo': 'South Korea'})\ncricket_loving_countries = pd.Series(['Australia',\n                                      'Barbados',\n                                      'Pakistan',\n                                      'England'], \n                                   index=['Cricket',\n                                          'Cricket',\n                                          'Cricket',\n                                          'Cricket'])\nall_countries = original_sports.append(cricket_loving_countries)","2b082198":"original_sports","0dd38853":"cricket_loving_countries","11daaafb":"all_countries","814083a9":"all_countries.loc['Cricket']","f8033b22":"import pandas as pd\npurchase_1 = pd.Series({'Name': 'Chris',\n                        'Item Purchased': 'Dog Food',\n                        'Cost': 22.50})\npurchase_2 = pd.Series({'Name': 'Kevyn',\n                        'Item Purchased': 'Kitty Litter',\n                        'Cost': 2.50})\npurchase_3 = pd.Series({'Name': 'Vinod',\n                        'Item Purchased': 'Bird Seed',\n                        'Cost': 5.00})\ndf = pd.DataFrame([purchase_1, purchase_2, purchase_3], index=['Store 1', 'Store 1', 'Store 2'])\ndf.head()","ad778cf5":"df.loc['Store 2']","366c7cc3":"type(df.loc['Store 2'])","47337d9b":"df.loc['Store 1']","c0a65fda":"df.loc['Store 1', 'Cost']","f14e40db":"df.T","34dea9a8":"df.T.loc['Cost']","e5566233":"df['Cost']","38340c4b":"df.loc['Store 1']['Cost']","01622878":"df.loc[:,['Name', 'Cost']]","936dee66":"df.drop('Store 1')","60cac28f":"df","3589ae51":"copy_df = df.copy()\ncopy_df = copy_df.drop('Store 1')\ncopy_df","56d679b7":"copy_df.drop?","b5746f83":"del copy_df['Name']\ncopy_df","95fb5383":"df['Location'] = None\ndf","b3d0ca6b":"costs = df['Cost']\ncosts","f7d22d64":"costs+=2\ncosts","340a1ba7":"df","61424a73":"!cat ..\/input\/olympics\/olympics.csv\n","b424241f":"import pandas as pd","bac0bc7e":"df = pd.read_csv('..\/input\/olympics\/olympics.csv')\ndf.head()","78ecdd5e":"df = pd.read_csv('..\/input\/olympics\/olympics.csv', index_col = 0, skiprows=1)\ndf.head()","c74468ae":"df.columns","85a4e70c":"for col in df.columns:\n    if col[:2]=='01':\n        df.rename(columns={col:'Gold' + col[4:]}, inplace=True)\n    if col[:2]=='02':\n        df.rename(columns={col:'Silver' + col[4:]}, inplace=True)\n    if col[:2]=='03':\n        df.rename(columns={col:'Bronze' + col[4:]}, inplace=True)\n    if col[:1]=='\u2116':\n        df.rename(columns={col:'#' + col[1:]}, inplace=True) \n\ndf.head()","aefee737":"def answer_one():\n    #df[df['Gold'] == df['Gold'].max()].index.item()\n    return df[df['Gold'] == df['Gold'].max()].index.item()","043631b0":"def answer_two():\n    s = df['Gold'] - df['Gold.1']\n    return s[s==s.max()].index.item()\nanswer_two()","5cb6addc":"df['Gold'] > 0","15d44e81":"only_gold = df.where(df['Gold'] > 0)\nonly_gold.head()","92b11b69":"only_gold['Gold'].count()","ebcdeba6":"df['Gold'].count()","50f52b12":"only_gold = only_gold.dropna()\nonly_gold.head()","46e1224b":"only_gold = df[df['Gold'] > 0]\nonly_gold.head()","0a1ed0aa":"len(df[(df['Gold'] > 0) | (df['Gold.1'] > 0)])","8ddaef5b":"df[(df['Gold.1'] > 0) & (df['Gold'] == 0)]","e76299a0":"df.head()","0122a264":"df['country'] = df.index\ndf = df.set_index('Gold')\ndf.head()","5faf0bbc":"df = df.reset_index()\ndf.head()","5429ae0f":"import pandas as pd\ndf = pd.read_csv('..\/input\/census\/census.csv')\ndf.head()","2ecd9c1a":"df['SUMLEV'].unique()","3b25072d":"df=df[df['SUMLEV'] == 50]\ndf.head()","6e7f2ad0":"columns_to_keep = ['STNAME',\n                   'CTYNAME',\n                   'BIRTHS2010',\n                   'BIRTHS2011',\n                   'BIRTHS2012',\n                   'BIRTHS2013',\n                   'BIRTHS2014',\n                   'BIRTHS2015',\n                   'POPESTIMATE2010',\n                   'POPESTIMATE2011',\n                   'POPESTIMATE2012',\n                   'POPESTIMATE2013',\n                   'POPESTIMATE2014',\n                   'POPESTIMATE2015']\ndf = df[columns_to_keep]\ndf.head()","1c522c0c":"df = df.set_index(['STNAME', 'CTYNAME'])\ndf.head()","99b25c98":"df.loc['Michigan', 'Washtenaw County']","67ac73aa":"df.loc[ [('Michigan', 'Washtenaw County'),\n         ('Michigan', 'Wayne County')] ]","8addc9de":"df = pd.read_csv('..\/input\/logdata\/log.csv')\ndf","d647b2e3":"df.fillna?","ca7864eb":"df = df.set_index('time')\ndf = df.sort_index()\ndf","d4884114":"df = df.reset_index()\ndf = df.set_index(['time', 'user'])\ndf","4ff1b457":"df = df.fillna(method='ffill')\ndf.head()","3de8b98d":"# Querying a Series","a93de564":"# Dataframe Indexing and Loading","9efeda96":"# The DataFrame Data Structure","df5b39f9":"# The Series Data Structure","0c3e572e":"# Missing values","4be9abe2":"# Querying a DataFrame","385e43ac":"# Indexing Dataframes"}}