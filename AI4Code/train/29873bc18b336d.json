{"cell_type":{"8417aebb":"code","3a54d8e9":"code","83defd39":"code","ce56a83a":"code","e3aeeac1":"code","085752c8":"code","d864f9a2":"code","42fb312e":"code","aabf0777":"code","78dffd32":"code","2f02998c":"code","39afcb26":"code","d291a032":"code","1d92c17b":"code","505d74f3":"code","52ffc5ab":"code","70df2dcd":"markdown","316d6573":"markdown"},"source":{"8417aebb":"! pip install -q folium","3a54d8e9":"import pandas as pd\nimport folium\nfrom folium.plugins import HeatMap\nfrom folium.plugins import HeatMapWithTime","83defd39":"df_train = pd.read_csv('..\/input\/nyc-taxi-trip-duration\/train.zip').drop(columns=['trip_duration', 'dropoff_datetime'])\ndf_test = pd.read_csv('..\/input\/nyc-taxi-trip-duration\/test.zip')\ndf = pd.concat([df_train, df_test], sort=False, ignore_index=True)","ce56a83a":"df.head()","e3aeeac1":"df.info()","085752c8":"df.pickup_datetime = pd.to_datetime(df.pickup_datetime, format='%Y-%m-%d %H:%M:%S')\ndf['month'] = df.pickup_datetime.apply(lambda x: x.month)\ndf['week'] = df.pickup_datetime.apply(lambda x: x.week)\ndf['day'] = df.pickup_datetime.apply(lambda x: x.day)\ndf['hour'] = df.pickup_datetime.apply(lambda x: x.hour)","d864f9a2":"df.head()","42fb312e":"def generateBaseMap(default_location=[40.693943, -73.985880], default_zoom_start=11):\n    \"\"\"\n    location: Define the default location to zoom at when rendering the map\n    zoom_start: The zoom level that the map will default to when rendering the map\n    control_scale: Shows the map scale for a given zoom level\n    \"\"\"\n    base_map = folium.Map(location=default_location, control_scale=True, zoom_start=default_zoom_start)\n    return base_map","aabf0777":"base_map = generateBaseMap()\nbase_map","78dffd32":"# We will be using 2 months worth of data for this analysis, May - June 2016\ndf_copy = df[df.month>4].copy()\ndf_copy['count'] = 1","2f02998c":"df_copy[['pickup_latitude', 'pickup_longitude', 'count']].groupby(['pickup_latitude', 'pickup_longitude']).sum().sort_values('count', ascending=False).head(10)","39afcb26":"# From the dataframe above, it can be clearly seen that using tables to try to understand spatial data is an impossible task (duh)\nbase_map = generateBaseMap()\nHeatMap(data=df_copy[['pickup_latitude', 'pickup_longitude', 'count']].groupby(['pickup_latitude', 'pickup_longitude']).sum().reset_index().values.tolist(), radius=8, max_zoom=13).add_to(base_map)","d291a032":"base_map","1d92c17b":"base_map.add_child(folium.ClickForMarker(popup='Potential Location'))","505d74f3":"df_hour_list = []\nfor hour in df_copy.hour.sort_values().unique():\n    df_hour_list.append(df_copy.loc[df_copy.hour == hour, ['pickup_latitude', 'pickup_longitude', 'count']].groupby(['pickup_latitude', 'pickup_longitude']).sum().reset_index().values.tolist())","52ffc5ab":"base_map = generateBaseMap(default_zoom_start=11)\nHeatMapWithTime(df_hour_list, radius=5, gradient={0.2: 'blue', 0.4: 'lime', 0.6: 'orange', 1: 'red'}, min_opacity=0.5, max_opacity=0.8, use_local_extrema=True).add_to(base_map)\nbase_map","70df2dcd":"**Analysis Question:**<br>\nThe city is planning to install taxi stops, locations throughout the city where people can get picked up\/dropped off by cabs and wait for cabs to pick them up. This initiative is aiming to:\n1. Reduce the amount of taxis that stops at the bicycle lanes\u00a0\n2. Making it easier and safer for the citizens of the city to get a cab especially during night time\u00a0\n3. Allowing taxi cab drivers to know where to go when they want to find riders\n4. Allowing potential riders to have a point where they can go to when they are looking for taxis.\n\nYou are tasked with suggesting the best locations for these taxi stops, and also generating insights about the pattern of rides amount throughout the day across the city.","316d6573":"Source : [Spatial Visualizations and Analysis in Python with Folium](http:\/\/https:\/\/towardsdatascience.com\/data-101s-spatial-visualizations-and-analysis-in-python-with-folium-39730da2adf)"}}