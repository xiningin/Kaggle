{"cell_type":{"2ec97136":"code","d63f4503":"code","d2e75c44":"code","bbd09f2b":"code","22d898c8":"code","3af3273f":"code","e2ad41c1":"code","b289a96b":"code","8770c544":"code","aa6f50b8":"markdown"},"source":{"2ec97136":"import json\nfrom plotly.graph_objs import Scattergeo, Layout\nfrom plotly import offline","d63f4503":"# Explore the structure of the data\n\nfilename = '..\/input\/earthquake-data\/eq_data_1_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n    \nreadable_file = 'readable_eq_data.json'\nwith open(readable_file, 'w') as f:\n    json.dump(all_eq_data, f, indent=4)","d2e75c44":"# Making a list of all earthquakes\n\nfilename = '..\/input\/earthquake-data\/eq_data_1_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nprint(len(all_eq_dicts))\n\nprint(all_eq_dicts[:1])\n","bbd09f2b":"# Extracting magnitudes\n\nfilename = '..\/input\/earthquake-data\/eq_data_1_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nmags = []\nfor eq_dict in all_eq_dicts:\n    mag = eq_dict['properties']['mag']\n    mags.append(mag)\n    \nprint(mags[:10])\n","22d898c8":"# Extracting location data\n\nfilename = '..\/input\/earthquake-data\/eq_data_1_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nmags = []\nlons = []\nlats = []\n\nfor eq_dict in all_eq_dicts:\n    mag = eq_dict['properties']['mag']\n    mags.append(mag)\n    \n    lon = eq_dict['geometry']['coordinates'][0]\n    lons.append(lon)\n    \n    lat = eq_dict['geometry']['coordinates'][1]\n    lats.append(lat)\n    \nprint(mags[:10])\nprint(lons[:10])\nprint(lats[:10])","3af3273f":"# Building a world map\n\nfilename = '..\/input\/earthquake-data\/eq_data_1_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nmags = []\nlons = []\nlats = []\n\nfor eq_dict in all_eq_dicts:\n    mag = eq_dict['properties']['mag']\n    mags.append(mag)\n    \n    lon = eq_dict['geometry']['coordinates'][0]\n    lons.append(lon)\n    \n    lat = eq_dict['geometry']['coordinates'][1]\n    lats.append(lat)\n    \n# Map the earthquakes\ndata = [Scattergeo(lon=lons, lat=lats)]\nmy_layout = Layout(title='Global Earthquakes')\n\nfig = {'data': data, 'layout': my_layout}\noffline.iplot(fig)","e2ad41c1":"# Customizing marker size\n\nfilename = '..\/input\/earthquake-data\/eq_data_1_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nmags = []\nlons = []\nlats = []\n\nfor eq_dict in all_eq_dicts:\n    mag = eq_dict['properties']['mag']\n    mags.append(mag)\n    \n    lon = eq_dict['geometry']['coordinates'][0]\n    lons.append(lon)\n    \n    lat = eq_dict['geometry']['coordinates'][1]\n    lats.append(lat)\n    \n# Map the earthquakes (in different way)\ndata = [{\n    'type': 'scattergeo',\n    'lon': lons,\n    'lat': lats,\n    'marker':{\n        'size': [5*mag for mag in mags],\n    }\n}]\n\nmy_layout = Layout(title='Global Earthquakes')\n\nfig = {'data': data, 'layout': my_layout}\noffline.iplot(fig)","b289a96b":"# Customazing marker colors and using a 30-day data file\n\nfilename = '..\/input\/earthquake-data\/eq_data_30_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nmags = []\nlons = []\nlats = []\n\nfor eq_dict in all_eq_dicts:\n    mag = eq_dict['properties']['mag']\n    mags.append(mag)\n    \n    lon = eq_dict['geometry']['coordinates'][0]\n    lons.append(lon)\n    \n    lat = eq_dict['geometry']['coordinates'][1]\n    lats.append(lat)\n    \n# Map the earthquakes (in different way)\ndata = [{\n    'type': 'scattergeo',\n    'lon': lons,\n    'lat': lats,\n    'marker':{\n        'size': [5*mag for mag in mags],\n        'color': mags,\n        'colorscale': 'Viridis',\n        'reversescale': True,\n        'colorbar': {'title': 'Magnitude'}\n    }\n}]\n\nmy_layout = Layout(title='Global Earthquakes')\n\nfig = {'data': data, 'layout': my_layout}\noffline.iplot(fig)","8770c544":"# Adding hover text\n\nfilename = '..\/input\/earthquake-data\/eq_data_30_day_m1.json'\nwith open(filename) as f:\n    all_eq_data = json.load(f)\n\nall_eq_dicts = all_eq_data['features']\n\nmags = []\nlons = []\nlats = []\nhover_texts = []\n\nfor eq_dict in all_eq_dicts:\n    mag = eq_dict['properties']['mag']\n    mags.append(mag)\n    \n    lon = eq_dict['geometry']['coordinates'][0]\n    lons.append(lon)\n    \n    lat = eq_dict['geometry']['coordinates'][1]\n    lats.append(lat)\n    \n    title = eq_dict['properties']['title']\n    hover_texts.append(title)\n    \n    \n# Map the earthquakes (in different way)\ndata = [{\n    'type': 'scattergeo',\n    'lon': lons,\n    'lat': lats,\n    'text': hover_texts,\n    'marker':{\n        'size': [5*mag for mag in mags],\n        'color': mags,\n        'colorscale': 'Viridis',\n        'reversescale': True,\n        'colorbar': {'title': 'Magnitude'}\n    }\n}]\n\nmy_layout = Layout(title='Global Earthquakes')\n\nfig = {'data': data, 'layout': my_layout}\noffline.iplot(fig)","aa6f50b8":"# Python Crash Course\nProjects from the book Python Crash Course by Eric Matthes"}}