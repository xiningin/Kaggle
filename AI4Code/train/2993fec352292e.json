{"cell_type":{"4ced4ce7":"code","366c5ebd":"code","6915732b":"code","adc5c459":"code","5dd55fd2":"code","969214e5":"code","5e2e2f1f":"code","a8495080":"code","83ab5c6e":"code","1a0fce9b":"code","e49c020e":"code","82de3b80":"code","1b4c6afd":"code","6705a78c":"code","10ce263d":"code","ca4982ff":"code","90d61450":"code","2d6074b0":"code","1409ea41":"code","3fc9f068":"code","f8fdb12a":"code","2adc4dda":"code","20378474":"code","eb9c61bc":"code","8dbc4d5a":"markdown","da6ce179":"markdown","0c78be88":"markdown","f5ee0b5c":"markdown","acb9f1f8":"markdown","f9d6c630":"markdown","449323e2":"markdown","e9d8c095":"markdown","3d93bdfa":"markdown","6ad94a8b":"markdown","44d8724e":"markdown","5f01d860":"markdown","10af7265":"markdown","0df889e6":"markdown","3c343e03":"markdown","99ff41a9":"markdown","79b2ab3c":"markdown","89fe1020":"markdown","d063e25f":"markdown","48fa3759":"markdown","e145232a":"markdown","f9b10a3f":"markdown"},"source":{"4ced4ce7":"# Machine learning library\n!pip install pycaret","366c5ebd":"# Python 3 environment\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O\n\n# Plotly libraries\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\n\n# Machine learning library\nfrom pycaret.regression import *","6915732b":"# data \naudi = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/audi.csv')\nbmw = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/bmw.csv')\ncclass = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/cclass.csv')\nfocus = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/focus.csv')\nford = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/ford.csv')\nhyundai = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/hyundi.csv')\nmerc = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/merc.csv')\nskoda = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/skoda.csv')\ntoyota = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/toyota.csv')\nvauxhall = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/vauxhall.csv')\nvw = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/vw.csv')","adc5c459":"# data summary\naudi.info()","5dd55fd2":"audi['manufacturer'] = 'Audi'\naudi['has_tax'] = 1\n\nbmw['manufacturer'] = 'BMW'\nbmw['has_tax'] = 1\n\ncclass['manufacturer'] = 'Mercedes-Benz'\ncclass['has_tax'] = 0\ncclass['tax'] = np.nan\n\nfocus['manufacturer'] = 'Ford'\nfocus['has_tax'] = 0\nfocus['tax'] = np.nan\n\nhyundai['manufacturer'] = 'Hyundai Motor'\nhyundai['has_tax'] = 1\nhyundai = hyundai.rename(columns={\"tax(\u00a3)\": \"tax\"})\n\nmerc['manufacturer'] = 'Mercedes'\nmerc['has_tax'] = 1\n\nskoda['manufacturer'] = 'Skoda'\nskoda['has_tax'] = 1\n\ntoyota['manufacturer'] = 'Toyota'\ntoyota['has_tax'] = 1\n\nvauxhall['manufacturer'] = 'Vauxhall'\nvauxhall['has_tax'] = 1\n\nvw['manufacturer'] = 'Volkswagen'\nvw['has_tax'] = 1","969214e5":"# aggregation\ncars = pd.concat([audi, bmw, cclass, focus, hyundai, merc, skoda, toyota, vauxhall, vw], ignore_index=True)\n\n# dimensionality\ncars.shape","5e2e2f1f":"# data overview\ncars","a8495080":"fig = px.histogram(cars, x=\"manufacturer\", hover_data=cars.columns)\nfig.update_layout(title='Quantitative representation of the number of vehicles per manufacturer')\nfig.show()","83ab5c6e":"fig = px.histogram(cars, x=\"price\", marginal=\"box\")\nfig.update_layout(title='Statistical Distribution of Price')\nfig.show()","1a0fce9b":"fig = px.histogram(cars, x=\"year\", marginal=\"box\")\nfig.update_layout(title='Statistical Distribution of Year')\nfig.show()","e49c020e":"fig = px.histogram(cars, x=\"mpg\", marginal=\"box\")\nfig.update_layout(title='Statistical Distribution of Miles Per Gallon')\nfig.show()","82de3b80":"fig = px.histogram(cars, x=\"mileage\", marginal=\"box\")\nfig.update_layout(title='Statistical Distribution of Mileage')\nfig.show()","1b4c6afd":"fig = px.histogram(cars, x=\"tax\", marginal=\"box\")\nfig.update_layout(title='Statistical Distribution of Tax')\nfig.show()","6705a78c":"fig = px.histogram(cars, x=\"engineSize\", marginal=\"box\")\nfig.update_layout(title='Statistical Distribution of Engine Size')\nfig.show()","10ce263d":"fig = px.scatter(cars, x='manufacturer', y='price', color='price')\nfig.update_layout(title='Sales Price VS Manufacturer',xaxis_title=\"Manufacturer\",yaxis_title=\"Price\")\nfig.show()","ca4982ff":"fig = px.scatter(cars, x='mileage', y='price', color='price')\nfig.update_layout(title='Sales Price VS Mileage',xaxis_title=\"Mileage\",yaxis_title=\"Price\")\nfig.show()","90d61450":"fig = px.scatter(cars, x='transmission', y='price', color='price')\nfig.update_layout(title='Sales Price VS Transmission System',xaxis_title=\"Transmission\",yaxis_title=\"Price\")\nfig.show()","2d6074b0":"env = setup(cars, target='price', normalize=True, transformation=True, transform_target=True, polynomial_features=True, polynomial_degree=2, sampling=False, silent=True,  session_id=707)","1409ea41":"compare_models(blacklist=['svm', 'tr', 'ransac', 'huber', 'lar', 'llar', 'lr'])","3fc9f068":"rf = create_model('rf')","f8fdb12a":"plot_model(rf, plot='parameter')","2adc4dda":"plot_model(rf, plot='feature')","20378474":"rf_final = finalize_model(rf)","eb9c61bc":"save_model(rf_final, 'lrm_rf_model_28072020')","8dbc4d5a":"## <a id='3.1'>3.1 Setting up Environment<\/a>\n\nThis function initializes the environment in pycaret and creates the transformation pipeline to prepare the data for modeling and deployment.","da6ce179":"## Table of Content\n\n- <a href='#TD'>Task Details<\/a>\n    - <a href='#CTX'>Context of the Dataset<\/a>\n    - <a href='#CTT'>Content of the Dataset<\/a>\n- <a href='#1'>Step 1 : Data<\/a>\n    - <a href='#1.1'>1.1 Data aggregation<\/a>\n- <a href='#2'>Step 2 : Exploratory Data Analysis<\/a>\n    - <a href='#2.1'>2.1 Quantitative representation of variables<\/a>\n    - <a href='#2.2'>2.2 Statistical Distribution <\/a>\n    - <a href='#2.3'>2.3 Relationship between values<\/a>\n- <a href='#3'>Step 3 : Model<\/a>\n    - <a href='#3.1'>3.1 Setting up Environment<\/a>\n    - <a href='#3.2'>3.2 Compare Models<\/a>\n    - <a href='#3.3'>3.3 Create Model<\/a>\n    - <a href='#3.4'>3.4 Evaluate Model<\/a>\n    - <a href='#3.5'>3.5 Finalize Model<\/a>\n    - <a href='#3.6'>3.6 Save Model<\/a>","0c78be88":"# <a id='3'>Step 3 : Model<\/a>","f5ee0b5c":"![](https:\/\/autonetmagz.com\/wp-content\/uploads\/2016\/11\/electric-car-meme.jpg)","acb9f1f8":"## <a id='1.1'>1.1 Data Aggregation<\/a>\n\nThe data of the different files are merged to make a global work. To begin with, an additional category is added to indicate the manufacturers. Then, work will be done to unify the \"tax\" column. An additional column \"has_tax\" will be created to indicate if the column was missing in the initial file in order to better indicate to our future model that there is a missing column.","f9d6c630":"# 100K UK Used Car - Price Prediction Model [0.95+]","449323e2":"## <a id='3.2'>3.2 Compare Models<\/a>\n\nThis function uses all models in the model library and scores them using K-fold Cross Validation. The output prints a score grid that shows MAE, MSE, RMSE, R2, RMSLE and MAPE by fold (default CV = 10 Folds) of all the available models in model library.","e9d8c095":"## <a id='2.3'>2.3 Relationship between values<\/a>","3d93bdfa":"## <a id='2.1'>2.1 Quantitative representation of variables<\/a>","6ad94a8b":"### **Question** :  What's the probabilities of occurrence for Price, Year, Miles Per Gallon, Mileage, Tax and Engine Size ?","44d8724e":"# <a id='2'>Step 2 : Exploratory Data Analysis<\/a>","5f01d860":"## <a id='3.6'>3.6 Save Model<\/a>\n\n\nThis function saves the transformation pipeline and trained model object into the current active directory as a pickle file for later use.","10af7265":"### **Question :** How much dependency between Sales Prices and Transmission?","0df889e6":"### **Question :** How much dependency between Sales Prices and the Manufacturer?","3c343e03":"## <a id='3.5'>3.5 Finalize Model<\/a>\n\nThis function fits the estimator onto the complete dataset passed during the setup() stage. The purpose of this function is to prepare for final model deployment after experimentation.","99ff41a9":"### **Question :** How much dependency between Sales Prices and Mileage?","79b2ab3c":"# <a id='TD'>Task Details<\/a>\n\nThis Notebook has been written with an interest in the task \"*Make a tool to predict car value*\" from the task \"*Car Price Regression Model*\" from the \"*100,000 UK Used Car Dataset*\" Dataset.\n\nMore specifically, the purpose of this notebook is to have some insights and visualisations of the dataset as a whole and create a generalized used car price prediction model.\n\n## <a id='CTX'>Context of the Dataset<\/a>\n\n\"*Scraped data of used cars listings. 100,000 listings, which have been separated into files corresponding to each car manufacturer. [I](https:\/\/www.kaggle.com\/adityadesai13) collected the data to make a tool to predict how much my friend should sell his old car for compared to other stuff on the market, and then just extended the data set. Then made a more general car value regression model.*\"\n\n## <a id='CTT'>Content of the Dataset<\/a>\n\n\"*The cleaned data set contains information of price, transmission, mileage, fuel type, road tax, miles per gallon (mpg), and engine size. I've removed duplicate listings and cleaned the columns, but have included a notebook showing the process and the original data for anyone who wants to check\/improve my work.*\"","89fe1020":"## <a id='3.4'>3.4 Evaluate Model<\/a>\n\n\nThis function takes a trained model object and returns a plot based on the test \/ hold-out set. ","d063e25f":"## <a id='2.2'>2.2 Statistical Distribution<\/a>","48fa3759":"# <a id='1'>Step 1 : Data<\/a>","e145232a":"## <a id='3.3'>3.3 Create Model<\/a>\n\nThis function tunes the hyperparameters of a model and scores it using K-fold Cross Validation. The output prints the score grid that shows MAE, MSE, RMSE, R2, RMSLE and MAPE by fold (by default = 10 Folds). This function returns a trained model object. The model was not tuned because it takes too much time and was not considered necessary in this context.","f9b10a3f":"### **Question** : How many cars per Manufacturers?"}}