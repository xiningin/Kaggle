{"cell_type":{"a73afb88":"code","e1d8b991":"code","cdbb80f4":"code","aa485deb":"code","04b1f564":"code","1228922b":"code","dc8ed369":"code","44bf42a6":"code","5b5adf97":"code","d761bd83":"code","5917ed69":"code","cf36d626":"code","b0e997a7":"code","ca6b23e4":"code","a62cfc9d":"code","3d9ce991":"code","d2ef8874":"code","2b954e64":"code","2fcca7bc":"code","05834718":"code","6cace10a":"markdown","608362a2":"markdown","d8bbf46e":"markdown","cbac6bd4":"markdown","7571cdfa":"markdown","b5315e6d":"markdown","d11ea598":"markdown","518f9145":"markdown","369fbdc9":"markdown","98047d01":"markdown"},"source":{"a73afb88":"!pip install klib","e1d8b991":"import sys\n\nsys.path.append('..\/input\/klib-library-python')","cdbb80f4":"import klib","aa485deb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","04b1f564":"from pathlib import Path\n\ninput_path = Path('\/kaggle\/input\/widsdatathon2021\/')","1228922b":"TARGET_COL = \"diabetes_mellitus\"\n\ndf = pd.read_csv(input_path \/ 'TrainingWiDS2021.csv')\ndisplay(df.head())","dc8ed369":"klib.missingval_plot(df)","44bf42a6":"klib.cat_plot(df, figsize=(50,15))","5b5adf97":"df_cleaned = klib.data_cleaning(df)","d761bd83":"klib.corr_plot(df_cleaned, annot=False)","5917ed69":"klib.corr_plot(df_cleaned, split='pos', annot=False)","cf36d626":"klib.corr_plot(df_cleaned, split='neg', annot=False)","b0e997a7":"klib.corr_plot(df_cleaned, target='diabetes_mellitus')","ca6b23e4":"klib.corr_mat(df_cleaned)","a62cfc9d":"klib.dist_plot(df_cleaned['encounter_id'])","3d9ce991":"klib.dist_plot(df_cleaned['bmi'])","d2ef8874":"klib.dist_plot(df_cleaned['weight'])","2b954e64":"klib.dist_plot(df_cleaned['age'])","2fcca7bc":"klib.dist_plot(df_cleaned['height'])","05834718":"#Code by Lucas Morin https:\/\/www.kaggle.com\/lucasmorin\/hierarchical-clustering-for-uncovering-structure\n\nfrom matplotlib import pyplot as plt\nplt.figure(figsize=(10,10))\n\ncorr_mat = df.corr()\nplt.imshow(corr_mat, cmap='Spectral')\nplt.show()","6cace10a":"#Display only positive correlation.","608362a2":"#Display all correlations data.","d8bbf46e":"A diverging colormap is better to visualise the extreme as being similar (a correlation of -1 is a correlation of 1 with the opposite feature).","cbac6bd4":"\n### <b><mark style=\"background-color: #9B59B6\"><font color=\"white\">Best Practices: Always give credits. Not giving credits: Best way to loose respect forever <\/font><\/mark><\/b>","7571cdfa":"#Display correlation with a target variable of interest","b5315e6d":"Wow! A lot of missing values.","d11ea598":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Klib Library by Andreas Kanz<\/h3>\n\n<font color=\"#EC7063\">Speed up your Data Cleaning and Preprocessing with klib<\/font>\n\n\nhttps:\/\/medium.com\/@akanz\n\nhttps:\/\/towardsdatascience.com\/speed-up-your-data-cleaning-and-preprocessing-with-klib-97191d320f80\n\nhttps:\/\/klib.readthedocs.io\/en\/latest\/\n\nhttps:\/\/github.com\/akanz1\/klib\/tree\/main\/examples\n\nhttps:\/\/www.kaggle.com\/sripaadsrinivasan\/speed-up-your-data-science-projects-using-klib\/comments","518f9145":"#Display only negative correlation","369fbdc9":"#Data Cleaning","98047d01":"#Correlation data matrix"}}