{"cell_type":{"5a9b627b":"code","6c7e8dd7":"code","706eb204":"code","1db3797f":"code","cbfa6c84":"code","7da9873a":"code","07287520":"code","0ac2881a":"code","b41a255a":"code","7dd94c03":"code","b28bfd61":"code","87d136d4":"code","a51d96d2":"code","84b2139b":"code","de804ee1":"code","95a9c5c2":"code","427cd947":"code","33febff3":"code","ccdf1fab":"code","2206bbfd":"code","f101983e":"code","26c4faab":"code","21c79b16":"code","43ca57fa":"code","fc6d7733":"code","68f2f0bb":"code","a337fe2b":"code","1c4cec30":"code","10b532da":"code","e44e2396":"code","0cc4f352":"code","55e7dff0":"code","5dea40be":"code","aa7a6ec0":"code","96c5e5b5":"code","c8c861f2":"code","1908ddbd":"code","3ce1f824":"code","b4a8f5d5":"code","5b7e68e6":"code","9bd6044e":"code","5e67a45d":"markdown","7aa7d011":"markdown","3bd8f1f2":"markdown","b3a69622":"markdown","07625734":"markdown","03c54373":"markdown","a0e4bc2c":"markdown","25994847":"markdown","84e3be5a":"markdown","5d2942df":"markdown","5ec69089":"markdown","65440f4e":"markdown","8c90c971":"markdown","6f5ad94a":"markdown","e5c54ffb":"markdown","8e3313b3":"markdown","12bb74e2":"markdown","64965a1b":"markdown","3050ea8b":"markdown","6a1dce6e":"markdown"},"source":{"5a9b627b":"from numpy.random import seed\nseed(9)\nimport tensorflow\ntensorflow.random.set_seed(9)\nimport numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6c7e8dd7":"# Import necessary libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.decomposition import PCA","706eb204":"# Read the datasets\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","1db3797f":"# Explore the dataset\ndisplay(train.head())","cbfa6c84":"# Explore the dataset\ndisplay(sample_submission.head())","7da9873a":"# Explore the dataset\ndisplay(train.info())","07287520":"display(test.info())","0ac2881a":"# Convert the date_time column into datetime format\ntrain.date_time = pd.to_datetime(train.date_time)\ntest.date_time = pd.to_datetime(test.date_time)","b41a255a":"dt = train.date_time.dt","7dd94c03":"for df in [train, test]:\n    df['hour'] = dt.hour\n    df['mrng'] = df['hour'].isin(np.arange(4,9,1)).astype('int')\n    df['day'] = df['hour'].isin(np.arange(8,13,1)).astype('int')\n    df['noon'] = df['hour'].isin(np.arange(12,19,1)).astype('int')\n    df[\"weekday\"] = (df.date_time.dt.dayofweek < 5).astype(\"int\")\n\ntrain = train.drop('hour', axis=1)\ntest = test.drop('hour', axis=1)    ","b28bfd61":"# Set date_time column iinto index\ntrain_set = train.set_index('date_time')\ntest_set = test.set_index('date_time')\ntrain_set.head(2)","87d136d4":"trgts = train_set.loc[:,['target_carbon_monoxide','target_benzene','target_nitrogen_oxides']]\ntrain_set = train_set.drop(['target_carbon_monoxide','target_benzene','target_nitrogen_oxides'], axis=1)\ntrain_set = pd.concat([train_set, trgts], axis=1)\ntrain_set.head(5)","a51d96d2":"train_set.shape","84b2139b":"# Check for the sstatistics\ntrain_set.describe()","de804ee1":"sns.pairplot(train_set.iloc[:,0:8])\nplt.show()","95a9c5c2":"train_set.iloc[:,0:12].corr()","427cd947":"sns.heatmap(train_set.corr())\nplt.show()","33febff3":"train_set.iloc[:,12:15].corr()","ccdf1fab":"for i in range(12,15):\n    print(train_set.iloc[:,i].mean())","2206bbfd":"sns.pairplot(train_set.iloc[:,12:15])\nplt.show()","f101983e":"fig, ax = plt.subplots(figsize=(15,10))\nax.plot(train_set[train_set.columns[range(0,8)]], alpha=.7)\nax.legend(train_set.columns[range(0,8)])\nax.set(yscale='log')\nplt.show()","26c4faab":"fig, ax = plt.subplots(figsize=(15,10))\nax.plot(train_set[train_set.columns[range(3,8)]], alpha=.7)\nax.legend(train_set.columns[range(3,8)])\nplt.show()","21c79b16":"fig, ax = plt.subplots(figsize=(15,10))\nax.plot(train_set[train_set.columns[range(12,15)]], alpha=.7)\nax.set(yscale='log')\nax.legend(train_set.columns[range(12,15)])\nplt.show()","43ca57fa":"env_factors = train_set.columns[0:3]\nsensors = train_set.columns[3:8]\ntime_segs = train_set.columns[8:12]\ntargets = train_set.columns[12:15]\ncols = [env_factors,sensors,targets]\ncols","fc6d7733":"for ss in cols:\n    sns.boxplot(data=train_set[ss])\n    plt.show()","68f2f0bb":"train_set_melt_tgt = pd.melt(train_set,id_vars=train_set.columns[list(range(0,12))],var_name='target', value_name='target_value', ignore_index=False)\ntrain_set_melt_tgt['time'] = train_set_melt_tgt[['mrng','day','noon']].idxmax(axis=1)\ntrain_set_melt_tgt = train_set_melt_tgt.drop(['mrng','day','noon'], axis=1)\ndisplay(train_set_melt_tgt.head(2))\ntrain_set_melt_tgt.shape","a337fe2b":"g = sns.FacetGrid(train_set_melt_tgt, col=\"target\", row='time')\ng.set(yscale='log')\ng.map(sns.boxplot,'weekday', \"target_value\")","1c4cec30":"for column in train_set_melt_tgt.columns[range(0,8)]:\n    g = sns.FacetGrid(train_set_melt_tgt, col=\"weekday\", row='time', sharex=True, sharey=True, aspect = 3\/2)\n    g.map(sns.scatterplot,x=column, y='target_value', hue='target',data=train_set_melt_tgt, alpha=.7)\n    g.set(yscale='log')\n    plt.xlabel(column)\n    plt.legend()\n    plt.ylabel('target_value')\n    plt.show()","10b532da":"train_set_melt_tgt.columns","e44e2396":"train_set_melt_tgt_sens = pd.melt(train_set_melt_tgt,id_vars=train_set_melt_tgt.columns[[0,1,2,8,9,10,11]],var_name='sensor', value_name='sensor_value', ignore_index=False)\ndisplay(train_set_melt_tgt_sens.head(2))\ntrain_set_melt_tgt_sens.shape","0cc4f352":"train_set_melt_tgt_sens.columns","55e7dff0":"train_set_melt_tgt_sens_env = pd.melt(train_set_melt_tgt_sens,id_vars=train_set_melt_tgt_sens.columns[[3,4,5,6,7,8]],var_name='env', value_name='env_value', ignore_index=False)\ndisplay(train_set_melt_tgt_sens_env.head(2))\ntrain_set_melt_tgt_sens_env.shape","5dea40be":"g = sns.FacetGrid(train_set_melt_tgt_sens_env, col=\"target\", row=\"sensor\",hue='time', margin_titles=True)\ng.map_dataframe(sns.scatterplot, x=\"sensor_value\", y=\"target_value\", style='weekday', alpha=.3)\ng.set_axis_labels(\"sensor_value\",\"target_value\")\ng.set(yscale='log')\nplt.legend(loc='best')\ng.tight_layout()\n","aa7a6ec0":"g = sns.FacetGrid(train_set_melt_tgt_sens_env, col=\"target\", row=\"env\",hue='time', margin_titles=True)\ng.map_dataframe(sns.scatterplot, x=\"env_value\", y=\"target_value\", style='weekday', alpha=.3)\ng.set_axis_labels(\"env_value\",\"target_value\")\ng.set(yscale='log')\ng.set(xscale='log')\nplt.legend(loc='best')\ng.tight_layout()","96c5e5b5":"g = sns.FacetGrid(train_set_melt_tgt_sens_env, col=\"weekday\", row=\"env\", margin_titles=True, aspect=3\/2)\ng.map_dataframe(sns.histplot, x=\"env_value\", hue='time', alpha=.3, bins=100)\ng.set_axis_labels(\"env_value\")\nplt.legend(loc='best')\ng.tight_layout()","c8c861f2":"env_factors = train_set.columns.values.tolist()[0:3]\nsensors = train_set.columns.values.tolist()[3:8]\ntime_segs = train_set.columns.values.tolist()[8:12]\ntargets = train_set.columns.values.tolist()[12:15]\ncols= env_factors+sensors+time_segs\ntrain_data=train_set[cols]\ntrain_data.head(2)","1908ddbd":"normalizer = Normalizer()\nnorm_train = pd.DataFrame(normalizer.fit_transform(train_data), columns=train_data.columns)\nnorm_train.head(2)","3ce1f824":"pca = PCA()\npca_train = pca.fit_transform(norm_train)\npca_train.shape","b4a8f5d5":"print(abs(pca.components_))\nprint(pca.explained_variance_ratio_)","5b7e68e6":"feature_imp = pd.DataFrame(pca.explained_variance_ratio_, columns=['pca_value'])\nfeature_imp['pca'] = ['PC1','PC2','PC3','PC4','PC5','PC6','PC7','PC8','PC9','PC10','PC11','PC12']\nfeature_imp['cumsum'] = feature_imp.pca_value.cumsum()\nfeature_imp","9bd6044e":"fig, ax = plt.subplots(figsize=(15,7))\nsns.barplot(x='pca',y='pca_value', data = feature_imp)\nsns.lineplot(x='pca',y='cumsum', data = feature_imp)\nsns.scatterplot(x='pca',y='cumsum', data = feature_imp, marker='o')\nplt.show()","5e67a45d":"Let us convert our dataset into more tidier format.","7aa7d011":"THe above correlation matrix and the below heatmap are in sync with our obesrvation that the features are strongly correlated. This might lead to overfitting.","3bd8f1f2":"The pairplot shows most of the features are strongly correlated with each other","b3a69622":"Sensor_5 seems to be more widely spread over the period, while sensor_4 has higher values and sensor_3 has lower values. ","07625734":"This notebooks explores and does primarily visual analysis of the datasets provided under Tabular Playground Series - Jul 2021 competition, specifically the training set","03c54373":"Finally we prepare our training data, scale it and do PCA analysis to identify the top principal components.","a0e4bc2c":"Let us create initial tidy dataset.","25994847":"All the above graphs prove clearly weekday (or not) and phase of the day also have clear correlations to the targets","84e3be5a":"The first 3 principal components explain about 92% of the variance in the data.","5d2942df":"The training data is primarily numeric data and does not contain misiing numbers.","5ec69089":"The test data also is primarily numeric data and does not contain misiing numbers.","65440f4e":"While most of the sensors seem to have clear positive correlation with all 3 targets, the other sensors seem to have no relationship.","8c90c971":"While temperature is slightly negatively correlated with nitrogen oxides, relative humidity is relately more strongly positive correclated. Other environmental factors do not seem to have much correlation with any targets.","6f5ad94a":"While all three targets have right skewed distributions as seen in pair plot earlier, the spread in carbon monoxide and benzene seem to be just uniform when compared to nitrogen oxides.","e5c54ffb":"Nitrogen oxides seem to be more dominant than the other targets and seem to be on slight rise compared to other targets with time.","8e3313b3":"The above boxplots confirm that relative humidity, sensor_5 and nitrogen oxides are more widely spread than others in their respective categories. ","12bb74e2":"Even the targets seem to be strongly positively correlated with each other and are logarithmically distribued with right skewedness indicating big variance and several outliers.","64965a1b":"The above graphs show all the features are clearly and well correlated seperately with the three targets.","3050ea8b":"The graph shows clear seperation between the distribution of sensor information and environmental featues. Sensor data seem to be steady over the time period but the environmental data has some clear swings.","6a1dce6e":"The features look different scales and spread."}}