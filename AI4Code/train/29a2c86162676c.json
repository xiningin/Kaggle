{"cell_type":{"79c3ef35":"code","05e2ae7f":"code","2877ac9b":"code","b561a525":"code","b95117ca":"code","e9083b98":"code","d0907715":"code","e7e96e85":"code","8e620224":"code","07d1e629":"code","c406fc41":"markdown","aef2bdec":"markdown","ffab136a":"markdown","f05556ce":"markdown","7cb7dbe0":"markdown","33bd10f9":"markdown"},"source":{"79c3ef35":"from tensorflow.keras.layers import Activation, Dense\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras import optimizers\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","05e2ae7f":"data=pd.read_csv(\"\/kaggle\/input\/league-of-legends-diamond-ranked-games-10-min\/high_diamond_ranked_10min.csv\")\ndata.head()","2877ac9b":"print(data.shape)","b561a525":"Victory=data['blueWins'] #Victory=label\ngameId=data['gameId']\ndata.drop(['gameId'],1,inplace=True)\ndata.drop(['blueWins'],1,inplace=True)","b95117ca":"print(data.shape)\nprint(Victory.shape)\nprint(Victory)","e9083b98":"mean=data.mean(axis=0)\nstd=data.std(axis=0)\nN_data=(data-mean)\/std\n\nN_data.head()","d0907715":"model = Sequential()\nmodel.add(Dense(8, input_shape=(38,)))\nmodel.add(Dense(16, activation='relu'))\nmodel.add(Dense(8, activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))","e7e96e85":"opt = optimizers.Adam(learning_rate=0.001)\nmodel.compile(loss='binary_crossentropy', optimizer=opt, metrics=['accuracy'])","8e620224":"#early_stop = EarlyStopping(monitor='val_loss', patience=20)\nhistory = model.fit(N_data, Victory, batch_size=100, epochs=4, validation_split=0.2)#, callbacks=[early_stop])","07d1e629":"plt.plot(history.history['accuracy'], label='accuracy')\nplt.plot(history.history['val_accuracy'], label='val_accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(loc='best')\nplt.show()","c406fc41":"Model making finish.\nWe got not bad model.\nIt have 72% of accuracy about not only learning data but also validation data.\n\nNow we need to check it. \nI separated some data from offered data for test.\nBut I can't control the dataset on Kaggle notebook I guess.\nIf you wanna check it out, please refer to link.\nhttps:\/\/github.com\/Sion1225\/Predict-League-of-Legends-Ranked-game\/blob\/master\/Predict_Model.ipynb","aef2bdec":"Z-Score Normalization","ffab136a":"Build-up the model","f05556ce":"early_stop callbacks option is for when you train alot(many epochs), it's gonna prevent overfitting.","7cb7dbe0":"this is the best model what I tried.","33bd10f9":"Drop unnecessary data('gameId') and separate 'blueWins' for use the label"}}