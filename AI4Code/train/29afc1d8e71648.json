{"cell_type":{"95d77697":"code","f394f370":"code","c09d5f8e":"code","460a5986":"code","d1ada9fd":"code","65a960d9":"code","83112432":"code","004f60d6":"code","0fbb701b":"code","0c4a88d9":"code","bd090845":"code","164b5cab":"code","afdbcd5d":"code","63dabe74":"code","18d2828b":"code","a5bafb16":"code","41568803":"code","4ec171f0":"code","480a21ed":"code","6daac2fa":"markdown","f0685aaa":"markdown","63c066af":"markdown","fb499f42":"markdown","be64a4b1":"markdown","a0ae4221":"markdown","7e4d86b5":"markdown","7479c2d9":"markdown","f61c5543":"markdown","6463c10b":"markdown","32a60ccb":"markdown","01db0ec7":"markdown","1862486c":"markdown","af1c07b6":"markdown"},"source":{"95d77697":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f394f370":"df = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\",low_memory=False)","c09d5f8e":"np.random.seed(0)\ndf.sample(10)","460a5986":"df.shape","d1ada9fd":"df.isnull().sum()","65a960d9":"df.drop(['director','cast'],axis=1,inplace=True)","83112432":"df['country'] = df['country'].fillna(df['country'].mode()[0])\ndf['date_added'] = df['date_added'].fillna(df['date_added'].mode()[0])\ndf['rating'] = df['rating'].fillna(df['country'].mode()[0])","004f60d6":"df.sample(10)","0fbb701b":"df.isnull().sum()","0c4a88d9":"values=df['type'].value_counts()\nshow_type = df['type'].unique()","bd090845":"plt.figure(figsize=(4,5))\nplt.bar(show_type,values)\nplt.show()","164b5cab":"time=df[['type','release_year']]\ndf1=time.value_counts(['type','release_year'])","afdbcd5d":"plt.figure(figsize=(10,8))\nplt.xlabel(\"Year\", size = 'x-large')\nplt.ylabel(\"Number of Shows\",size = 'x-large')\nplt.title(\"Trend over time\")\n\nplt.plot(df1['TV Show'])\nplt.plot(df1['Movie'])\nplt.legend(['TV Shows', 'Movies'])\nplt.show()","63dabe74":"countries = ['United States', 'India']\ndf.loc[df['country'].isin(countries)]","18d2828b":"during_2020 = df[(df['release_year']<2021) & (df['release_year']>2019)]['release_year']\nduring_2019 = df[(df['release_year']<2020) & (df['release_year']>2018)]['release_year']\nduring_2018 = df[(df['release_year']<2019) & (df['release_year']>2017)]['release_year']\nduring_2017 = df[(df['release_year']<2018) & (df['release_year']>2016)]['release_year']\nbefore_2017 = df[df['release_year']<2017]['release_year']\n\n# year_value = df[['during_2020','during_2019','during_2018','during_2017','before_2017']].value_counts()\n# WRITE A FOR LOOP FOR THIS","a5bafb16":"plt.figure(figsize=(10,10))\nplt.bar(during_2020.unique(), during_2020.value_counts())\nplt.bar(during_2019.unique(), during_2019.value_counts())\nplt.bar(during_2018.unique(), during_2018.value_counts())\nplt.bar(during_2017.unique(), during_2017.value_counts())\nplt.bar(before_2017.unique(), before_2017.value_counts())\nplt.legend(['2020','2019','2018','2017','<2017'])","41568803":"ratings = df['rating'].value_counts()\n# ratings.unique()\nplt.figure(figsize=(15,10))\nc = ['red', 'yellow', 'black', 'blue', 'orange']\nplt.bar(df['rating'].unique(),ratings,color= c)","4ec171f0":"plt.figure(figsize=(10,10))\nplt.pie(df['type'].value_counts(),labels=df['type'].unique())\nplt.show()","480a21ed":"country = df['country'][0:10]\nplt.figure(figsize=(10,10))\nplt.pie(country.value_counts(),labels=country.unique())\nplt.show()","6daac2fa":"## The trend is kinda weird at the end. After I analyzed the dataset further, I saw there are entries in the year 2021 too. Something to learn from every small thing, I guess","f0685aaa":"### Bar chart of Ratings ","63c066af":"### Plotting content by year. ","fb499f42":"## Checking for null values","be64a4b1":"## Having an initial look at the data","a0ae4221":"### A pie chart will be better visualization of the content available","7e4d86b5":"### Trend of Movies and TV shows over time","7479c2d9":"## The Netflix data has a lot of possibilities. I have used it to do some analysis and visualization","f61c5543":"## Visualizing the types of content","6463c10b":"## It seems that the director and the cast columns would be difficult to address and will not add much to the visualizations and analysis","32a60ccb":"## Checking for the size of the dataset","01db0ec7":"## We fill the other columns with the mode of the values. ","1862486c":"### Reading the dataset","af1c07b6":"### Pie chart of content in various countries "}}