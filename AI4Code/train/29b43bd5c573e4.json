{"cell_type":{"21658382":"code","53ffaab8":"code","d8d98620":"code","e0a303e7":"code","a9e392e2":"code","997e90ba":"code","e110ca53":"code","7b4a919b":"code","1ef7dbdb":"code","e6ac9943":"code","2df77028":"code","bc18fed2":"code","8fe0dc80":"code","05a785a8":"code","451e20ad":"code","350e8e4b":"code","b22d84eb":"code","52a2cc2d":"code","0100954f":"code","3b93e207":"code","f5426eb9":"code","6a291746":"markdown","09d45a95":"markdown","4c0a8135":"markdown","40952760":"markdown","0130c4bf":"markdown","3bbc7e66":"markdown","fbe2df54":"markdown","6ecf4edc":"markdown","a11550fe":"markdown","4cac2239":"markdown","021d15a4":"markdown","a3737c74":"markdown","6d313881":"markdown","5f16207d":"markdown","ce617a5c":"markdown","27f4b24f":"markdown","41359828":"markdown","8c811f3d":"markdown","c3a1a5e0":"markdown","f7d01e3e":"markdown"},"source":{"21658382":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53ffaab8":"cars = pd.read_csv('..\/input\/cheapest-electric-cars\/Cheapestelectriccars-EVDatabase.csv')","d8d98620":"cars.head()","e0a303e7":"cars.tail()","a9e392e2":"cars.describe()","997e90ba":"cars.info()","e110ca53":"cars.isnull().sum()","7b4a919b":"\ncars.columns = ['name', 'subtitle','acceleration_in_sec', 'top_speed_km_per_h', 'range_km', \n                'efficiency_wh_per_hour','fast_charge_speed_km_per_h','drive', 'number_of_seats', 'price_in_euros', 'price_to_drop']","1ef7dbdb":"cars.drop(columns='price_to_drop', inplace=True)","e6ac9943":"numeric_columns = cars.loc[:,['acceleration_in_sec', 'top_speed_km_per_h', 'range_km', \n                'efficiency_wh_per_hour','fast_charge_speed_km_per_h', 'number_of_seats', 'price_in_euros']]","2df77028":"numeric_columns","bc18fed2":"cars.acceleration_in_sec = cars.acceleration_in_sec.str.replace('sec','').astype('float')\ncars.top_speed_km_per_h.str.replace('km\/h','').astype('int')\ncars.range_km = cars.range_km.str.replace('km','').astype('int')\ncars.efficiency_wh_per_hour = cars.efficiency_wh_per_hour.str.replace('Wh\/km','').astype('int')\ncars.fast_charge_speed_km_per_h = cars.fast_charge_speed_km_per_h.str.replace('km\/h', '')\ncars.price_in_euros = cars.price_in_euros.str.replace('\u20ac', '').str.replace(',','.').astype('float')","8fe0dc80":"cars.loc[cars.price_in_euros.isnull(), 'price_in_euros'] = round(cars.price_in_euros.mean(),2)","05a785a8":"cars.describe()","451e20ad":"sns.heatmap(cars.corr())","350e8e4b":"cars.corr()","b22d84eb":"fig = px.scatter(cars, x = 'range_km', y='acceleration_in_sec',hover_data=['name'],\n                color = 'price_in_euros', trendline='ols', trendline_scope = 'overall')\n\nfig.update_layout(\n    title={\n        'text': 'eletric cars scatter plot',\n        'y':0.92,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'bottom'},\n    legend = {'orientation': 'h'}\n)\n\nfig.show()","52a2cc2d":"cars_range_from_90_to_400 = cars.loc[cars.range_km.between(90,400)]\ncars_range_from_401_to_600 = cars.loc[cars.range_km.between(401,650)]\ncars_range_from_601_to_1000 = cars.loc[cars.range_km.between(651,1000)]\n\nfig, ax = plt.subplots(figsize=(15,5))\nplt.style.use('fivethirtyeight')\nsns.set_style('white')\nax.set_ylim([15,250])\nax.set_xlim([90, 1000])\nax.bar(cars_range_from_90_to_400['range_km'], cars_range_from_90_to_400['price_in_euros'],width=6)\nax.bar(cars_range_from_401_to_600['range_km'], cars_range_from_401_to_600['price_in_euros'],width=6)\nax.bar(cars_range_from_601_to_1000['range_km'], cars_range_from_601_to_1000['price_in_euros'],width=6)\n\nspines = ['right', 'left', 'bottom', 'top'] #  setting spines\nfor spine in spines:\n    ax.spines[spine].set_visible(False)\n\nax.xaxis.set_label_text('range (km)', fontsize = 18, weight = 'bold')\nax.yaxis.set_label_text('price (thousands of \u20ac)', fontsize = 18, weight = 'bold')\nax.set_title('Range categories:')\nax.legend(['90-400 km','401-650 km','651-1000 km'], loc=\"upper center\")","0100954f":"cars_range_from_90_to_400.loc[cars_range_from_90_to_400.price_in_euros > 150]","3b93e207":"top_10 = cars_range_from_90_to_400.loc[cars_range_from_90_to_400.price_in_euros < 150].sort_values(by='price_in_euros').tail(10)","f5426eb9":"top_10","6a291746":"On the plot above there is some of the cars with range between 90 - 400 km and they are more expensive than cars with range between 400 and 650. Why?","09d45a95":"Selecting first 5 rows","4c0a8135":"Converting objects type to numeric","40952760":"... And last five rows","0130c4bf":"## 2. Data visualizations","3bbc7e66":"So let's start with makin pandas DataFrame to store data","fbe2df54":"They're all Porsches. This cars are very exclusive and their usually more expensive than others cars.","6ecf4edc":"Let's group the cars by range","a11550fe":"Scatter plot:","4cac2239":"Acceleration in this table is expressed in seconds: how much seconds the car needs to get from 0 to 100 km\/h.\nFor example : Acceleration time  10 sec is worse than acceleration 5 sec in this case. But there's also one catch. When acceleration time decreases the total range you can drive increases. And when acceleration time descreases, range increases... the price increases too. It's quite logick. You want so fast and long-living eletric car? You have to pay more.","021d15a4":"## 3.Conclusions ","a3737c74":"I think that this is the best 10 options to buy if you have less than 150 thousands \u20ac. If you have more in my the  winner of this competition is: **Tesla Roadster**. I made this conclusion because they all have quite big range (for me this is the most important - you should ride a car not charging it all the days). They have quite good accleration. As car charging places will be growing and growing it will be better to buy cars with lower range and bigger fast charge speed. But now - it's not such good idea.","6d313881":"I'm going to change the names of the columns, and drop PriceinUK column, it's redundant","5f16207d":"# 1.  Examine the data and set goals","ce617a5c":"Using describe,info methods and examine null values","27f4b24f":"We can see strong positive correlation between price and range. But we can see two negative strong correlations: accelration and range and price and acceleration. It means that when acceleration decreases price increases. But it also means that when range increases acceleration decreases.","41359828":"Heatmap and correlation","8c811f3d":"Now let's use describe method","c3a1a5e0":"Goal of this analysis is to find cheap and good eletric car. Eletric cars market gets bigger and bigger nowadays. Now hybrid cars are the most popular, but it's gonna change, I guess.","f7d01e3e":"We still have null values in the price in euros column, I'm going to set the mean price value for missing prices"}}