{"cell_type":{"77bbc647":"code","558f6f54":"code","7268367f":"code","69bf3cb2":"code","9d245558":"code","5082d3de":"code","459415fb":"code","89a29e9f":"code","9aade655":"code","57345bdd":"code","1ac4d138":"code","c2f05dd1":"code","20a5ee3a":"code","025e484e":"markdown","4f859c69":"markdown","4a033b71":"markdown","5e688641":"markdown","ed285eda":"markdown","8a584704":"markdown","51ad7b10":"markdown","c7969c8b":"markdown","ec114c93":"markdown","82445ec0":"markdown","69fd82b5":"markdown"},"source":{"77bbc647":"from IPython.display import clear_output\n!pip3 install -U lazypredict\n\nclear_output()","558f6f54":"!pip3 install -U pandas==1.2.3 #Upgrading pandas\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport lazypredict\nfrom lazypredict import Supervised\nfrom lazypredict.Supervised import LazyClassifier\n\n\nplt.style.use('fivethirtyeight')\nplt.rcParams[\"figure.figsize\"] = (20,5)\nclear_output()","7268367f":"# Load the training data\ntrain = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/train.csv\", index_col=0)\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/test.csv\", index_col=0)\n\n# Preview the data\ntrain.head()","69bf3cb2":"X = train.drop(['target'], axis=1)\ny = train['target']","9d245558":"#Spliting into training and validation set\nfrom sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X,y,test_size = 0.20,random_state = 1)","5082d3de":"del X,y,train,test","459415fb":"num_models = 22 #Total number of model is 29 for classification model but removed some of them due to error :(\nreg_idx = [i for i in range(num_models)]\nnoregs_idx = [4,9,9,9,13,20,20] # Removing 7 models from 29 models. Some of these models are time consuming whereas other require lot of ram and some getting error\nregs_name =[]\nregs = []\nfor i in range(29):\n    regs_name.append(lazypredict.Supervised.CLASSIFIERS[i][0])\n    regs.append(lazypredict.Supervised.CLASSIFIERS[i][1])\n\nfor i in noregs_idx:\n    del regs_name[i]\n    del regs[i]","89a29e9f":"print(\"ALL 22 AVAILABLE CLASSIFICATION MODELS:\")\nfor i in range(NUM_):\n    print(i+1 , regs_name[i])","9aade655":"results = pd.DataFrame()\nfor i in range(22):\n    print(i,regs_name[i])\n    reg = LazyClassifier(verbose=0, \n                    ignore_warnings=False,\n                    custom_metric=None,\n                    classifiers = [regs[i]])\n    models, predictions = reg.fit(X_train, X_valid, y_train, y_valid)\n    models.index = [regs_name[i]]\n    results = results.append(models)\n    print(results)\nclear_output()","57345bdd":"results = results.sort_values(by = \"ROC AUC\",ascending=False)\nprint(results)","1ac4d138":"results.head()","c2f05dd1":"plt.plot(reg_idx , results[\"ROC AUC\"],label = \"ROC AUC\" ,marker='o')\nplt.xlabel(\"Model ID\")\nplt.ylabel(\"ROC AUC\")\nplt.title(\"MAE Comparison of 22 Different Models\")\nplt.legend()\nplt.show()","20a5ee3a":"plt.plot(reg_idx , results[\"Time Taken\"],label = \"Time Taken\" ,marker='*' , color = 'r')\nplt.xlabel(\"Model ID\")\nplt.ylabel(\"Time Taken\")\nplt.title(\"TIME TAKEN for 22 Different Models\")\nplt.legend()\nplt.show()","025e484e":"# <h1 style=' border:0; color:#FFA500 '><left>Installing Lazy Predict \ud83d\ude34<\/left><\/h1> ","4f859c69":"# <h1 style=' border:0; color:#FFA500 '><left>Import Libraries \ud83d\udcda<\/left><\/h1> ","4a033b71":"# <h1 style=' border:0; color:#FFA500 '><left>\ud83e\udd47 Top 5 Performing Models<\/left><\/h1> ","5e688641":"# <h1 style=' border:0; color:#FFA500 '><center> If you find this notebook usefull support me with giving \u2b06\ufe0f!<\/left><\/h1> ","ed285eda":"# <h1 style=' border:0; color:#FFA500 '><left>Training on 22 different models \ud83c\udfcb\ufe0f<\/left><\/h1> ","8a584704":"# <h1 style=' border:0; color:#FFA500 '><left>Model Selection \ud83d\udcda<\/left><\/h1> ","51ad7b10":"# <h1 style=' border:0; color:#FFA500 '><left> Comparison Plots \ud83d\udcc8 <\/left><\/h1> ","c7969c8b":"# <h1 style=' border:0; color:#FFA500 '><left>\u2714\ufe0f Results<\/left><\/h1> ","ec114c93":"# <h1 style=' border:0; color:#FFA500 '><left>Loading Data \ud83d\ude9a<\/left><\/h1> ","82445ec0":"  ## <h1 style=' border:0; color:#FFA500 '><center>\u2728[TPS Oct - 21] -> 22 models comparision\ud83d\udcc8\ud83d\udcca<\/center><\/h1>","69fd82b5":"Inspired from https:\/\/www.kaggle.com\/odins0n\/30dml-comparison-of-36-different-models"}}