{"cell_type":{"52c7427e":"code","ad680dd9":"code","cf222359":"code","bd9c546d":"code","7670f559":"code","3d48ce25":"code","321ab37b":"code","8374c64f":"code","2bb53c1d":"code","905a9a38":"code","5f4c0dd0":"code","dc2f2c08":"code","d0250a4f":"code","b325b01a":"code","bba1de77":"markdown","ad471f73":"markdown"},"source":{"52c7427e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad680dd9":"J21 = pd.read_csv('..\/input\/top500\/top500\/June 2020.csv')","cf222359":"J21.head()","bd9c546d":"J21.info()","7670f559":"J21.isna().sum()","3d48ce25":"J21.columns","321ab37b":"Cores21 = J21[[ 'Name', 'Manufacturer:','Cores:']].copy()\nCores21 = Cores21.sort_values(by=['Cores:'],ascending=False)","8374c64f":"Cores21.head()","2bb53c1d":"Cores21 = Cores21.iloc[1: , :]\nCores21['Cores:'] = Cores21['Cores:'].str.replace(',', '').astype(float)","905a9a38":"Cores21['Cores:'] = pd.to_numeric(Cores21[\"Cores:\"])","5f4c0dd0":"Cores21.info()\nCores21.head()","dc2f2c08":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.image as mpimg","d0250a4f":"import matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\nimport seaborn as sns\nfrom matplotlib.offsetbox import TextArea, DrawingArea, OffsetImage, AnnotationBbox\nimport matplotlib.image as mpimg\nimport os","b325b01a":"fig, ax = plt.subplots(figsize=(21,13), facecolor=\"w\")\ndef make_img(img,zoom, x, y):\n    img = mpimg.imread(img)\n    imagebox = OffsetImage(img, zoom=zoom)\n    ab = AnnotationBbox(imagebox, (x,y),frameon=False)\n    ax.add_artist(ab)\nimg_path =os.listdir('..\/input\/logocompany4')\nimg_file = [img_path[0],img_path[1],img_path[2],img_path[3]]\nzoom = [0.1,0.4,0.15,0.65]\nimg_y= [1,1.4,3.2,4.8]\nx = [1.0,1.7,2.5,3.2]\ny = [4,4.4,4.5,2.35]\nname = ['Atos','NVIDIA','HPE','Sugon']\nname_pos = [2,2.5,2.7,2.6]\nchar = ['4th','2nd','1st','3rd']\ny_char = [4.1,4.4,4.5,4.4]\nx_char = [1.10,1.7,2.5,3.3]\nfontsize = [60,75,85,65]\nwidth = [0.4,0.6,0.7,0.6]\ncolor = ['#0059b3','#33cc00','#00b36b','#e60000']\nfor i in range(4):\n    make_img(f'..\/input\/logocompany4\/{img_file[i]}',zoom[i], x[i], img_y[i])\n    plt.bar(x=x[i],height=y[i],width=width[i],color=color[i])\n    plt.text(s=char[i],x=x_char[i],y = y_char[i],va='bottom',ha='center',font='Comic Sans MS',fontsize = fontsize[i]-25)\n    plt.text(s=name[i],x=x[i],y=name_pos[i],va='bottom',ha='center',font='Comic Sans MS',fontsize = fontsize[i]-25)\nplt.text(s='2020 Cores',x = 2.3,y= 5.1,font = 'Comic Sans MS',fontsize=80,va='bottom',ha='center')\nplt.axis('off')\nplt.show()","bba1de77":"# Work in progress","ad471f73":"char = ['Atos','NVIDIA','HPE','Sugon']"}}