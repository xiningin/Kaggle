{"cell_type":{"d8dfb5f5":"code","d6118505":"code","d31655dc":"code","fefdb957":"code","f1017c54":"code","e1b91bb3":"code","5a639595":"code","8feb117a":"code","24caf43b":"code","3eb8f370":"code","43647ce5":"code","835b3fbf":"code","efb08461":"code","b8f0c15e":"code","557d72f5":"code","c0730833":"code","3b13665b":"code","c26db999":"code","9af7fd04":"code","e0c994a9":"code","c23df557":"code","7f81b3ed":"code","53437941":"code","9cb3f96f":"code","5a1ad321":"code","866e7433":"code","584d2652":"code","88677a7b":"code","3e7871b6":"code","ac064223":"code","ff81fd2f":"code","9a5100f0":"code","6e7dbbbc":"markdown","f14b3ddb":"markdown","17ccfeb1":"markdown","bfe86a07":"markdown","a80e8f5e":"markdown","cdbba140":"markdown","538ff0df":"markdown","102a2843":"markdown"},"source":{"d8dfb5f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6118505":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nsns.set_style(style='darkgrid')\npd.set_option('display.max_columns',None)","d31655dc":"df = pd.read_csv('..\/input\/fifa19\/data.csv')\ndf.head()","fefdb957":"df.info()","f1017c54":"df.shape","e1b91bb3":"df.columns","5a639595":"df.drop(columns=['Unnamed: 0','ID','Photo','Flag','Club Logo'],axis=1,inplace=True)","8feb117a":"df.shape","24caf43b":"df.head()","3eb8f370":"plt.figure(figsize =(10,10))\nsns.countplot(df['Age'])","43647ce5":"df_young =df[df['Age']<=20]","835b3fbf":"df_young.shape[0]","efb08461":"df_young.sample()","b8f0c15e":"print('There are around {}% young players.'.format(np.round((len(df_young)\/len(df))*100,2)))","557d72f5":"youngest = df.sort_values('Age', ascending = True)[['Name', 'Nationality', 'Age','Club','Overall','Position']].head(30)\nyoungest.set_index('Name', inplace=True)\nprint(youngest)","c0730833":"df_strikers = df[df['Position']=='ST']","3b13665b":"df_strikers.shape[0]","c26db999":"df_strikers.sample(5)","9af7fd04":"df_strikers.columns","e0c994a9":"sns.countplot(df_strikers['Preferred Foot'])","c23df557":"df.columns","7f81b3ed":"plt.figure(figsize =(25,16))\nmatrix = np.triu(df_strikers[['Age', 'Overall', 'Potential', 'Value', 'Wage',\n                'Acceleration', 'Aggression', 'Agility', 'Balance', 'BallControl', \n                'Body Type','Composure', 'Crossing','Dribbling', 'FKAccuracy', 'Finishing', \n                'HeadingAccuracy', 'Interceptions','International Reputation',\n                'Joined', 'Jumping', 'LongPassing', 'LongShots',\n                'Marking', 'Penalties', 'Position', 'Positioning',\n                'ShortPassing', 'ShotPower', 'Skill Moves', 'SlidingTackle',\n                'SprintSpeed', 'Stamina', 'StandingTackle', 'Strength', 'Vision',\n                'Volleys']].corr())\nsns.heatmap(df_strikers[['Age', 'Overall', 'Potential', 'Value', 'Wage',\n                'Acceleration', 'Aggression', 'Agility', 'Balance', 'BallControl', \n                'Body Type','Composure', 'Crossing','Dribbling', 'FKAccuracy', 'Finishing', \n                'HeadingAccuracy', 'Interceptions','International Reputation',\n                'Joined', 'Jumping', 'LongPassing', 'LongShots',\n                'Marking', 'Penalties', 'Position', 'Positioning',\n                'ShortPassing', 'ShotPower', 'Skill Moves', 'SlidingTackle',\n                'SprintSpeed', 'Stamina', 'StandingTackle', 'Strength', 'Vision',\n                'Volleys']].corr(), annot=True, mask=matrix,cmap='Blues')","53437941":"features_y = ['Agility', 'Balance', 'Dribbling', 'SprintSpeed','BallControl']\nfor ft in features_y:\n    sns.regplot(x='Acceleration',y=ft,data=df_strikers)\n    plt.show()","9cb3f96f":"my_clubs = [ 'Real Madrid', 'Paris Saint-Germain', 'FC Barcelona', 'Juventus', 'Manchester United']\ndf_club = df.loc[df['Club'].isin(my_clubs) & df['Age']]\ndf_club.head()","5a1ad321":"plt.figure(figsize =(10,10))\nsns.barplot(x=df_club['Club'], y=df_club['Overall'], palette=\"rocket\")","866e7433":"plt.figure(figsize =(10,10))\nsns.barplot(x=df_club['Club'], y=df_club['Age'], palette=\"rocket\")","584d2652":"my_team = df[df['Club']=='Real Madrid']\nmy_team.shape","88677a7b":"my_team.sample(5)","3e7871b6":"my_team.sort_values(by='Age').head()","ac064223":"my_team.nlargest(5,'Potential')","ff81fd2f":"plt.figure(figsize =(15,10))\nsns.countplot(my_team['Nationality'])","9a5100f0":"plt.figure(figsize =(15,10))\nsns.countplot(my_team['Position'])","6e7dbbbc":"Makes sense, doesn't it? \nFor a striker atleast. ","f14b3ddb":"Well, that's a lot of them!","17ccfeb1":"Well Well, don't we need an RCM? Or has Ramos got everything under control?","bfe86a07":"Okay, we have 2152 strikers with us.","a80e8f5e":"**Let's name some of them.**","cdbba140":"> I am observing a positive relation between (ShotPower, ShortPassing, Positioning, **Finishing**, Dribbling, Ball Control) and Overall Performance.","538ff0df":"**I would like to focus on Strikers for now. Will think about others, later.**","102a2843":"> **Youngest Players ?**"}}