{"cell_type":{"245fa4d7":"code","86ac6ff3":"code","5d3afb4b":"code","77310cb3":"code","7a75d962":"code","b6b5a187":"code","5a3c614f":"code","c33c18aa":"code","a8311b20":"code","53456c1f":"code","4704e2f5":"code","5f2972ec":"code","e5dd384f":"code","2159cdc3":"code","6b80b3c2":"code","0cb95d17":"code","b169974a":"code","bd5cedd4":"code","cac9ab35":"code","258edf00":"code","327c4c5e":"code","a5cf236b":"code","f02188d1":"code","dd8ef7d8":"code","b864a54d":"markdown","bcebaef2":"markdown","ef985e1d":"markdown","47ebc181":"markdown","3f90875c":"markdown","90ca8160":"markdown","93e54a50":"markdown","59209b6d":"markdown","45778d4d":"markdown","605b7d08":"markdown"},"source":{"245fa4d7":"#importing modules\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","86ac6ff3":"#importing dataset\ndata = pd.read_csv(\"..\/input\/body-performance-data\/bodyPerformance.csv\")\ndata","5d3afb4b":"data.info()","77310cb3":"data.describe()","7a75d962":"#checking for null values if exist\ndata.isna().sum()","b6b5a187":"#Male vs Female performance\ndata.groupby([\"class\",\"gender\"]).size().unstack(level=1).plot(kind=\"bar\",figsize=(8,8),ylabel=\"gender\",color=[\"red\",\"indigo\"],title=\"Male vs Female Performance\");","5a3c614f":"#converting group and class column to numeric\ndef change_col_cat(df,col_name):\n    df[col_name] = pd.Categorical(df[col_name])\n    df[col_name+\"_cat\"] = df[col_name].cat.codes\n    df.drop(columns=[col_name],inplace=True)","c33c18aa":"cat_columns=[\"gender\",\"class\"] #categorical columns\nfor cat in cat_columns:\n    change_col_cat(data,cat)\n    \ndata","a8311b20":"fig,ax = plt.subplots(figsize=(10,8))\nsns.heatmap(data.corr(),cmap=\"YlGnBu\",annot=True,ax=ax);","53456c1f":"plt.style.use(\"seaborn-whitegrid\")\ndef plot_scatter(df,col1,col2,target,cmap=\"viridis\"):\n    fig, ax = plt.subplots(figsize=(10,8))\n    scatter = ax.scatter(df[col1],df[col2],c=df[target],cmap=cmap)\n    ax.legend(*scatter.legend_elements(),title=target)\n    ax.set(title=col1+\" vs \"+col2,\n          xlabel=col1,\n          ylabel=col2);\n    \nplot_scatter(data,\"weight_kg\",\"body fat_%\",\"class_cat\")","4704e2f5":"plot_scatter(data,\"gripForce\",\"height_cm\",\"class_cat\")","5f2972ec":"plot_scatter(data,\"sit-ups counts\",\"body fat_%\",\"class_cat\")","e5dd384f":"plot_scatter(data,\"broad jump_cm\",\"body fat_%\",\"class_cat\")","2159cdc3":"fig, ax = plt.subplots(figsize=(10,8))\nax.boxplot(data[\"weight_kg\"],notch=True);","6b80b3c2":"fig, ax = plt.subplots(figsize=(10,8))\nax.violinplot(data[\"gripForce\"],showmeans=True);","0cb95d17":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.compose import ColumnTransformer\n\nX = data.drop(columns=[\"class_cat\"])\ny = data[\"class_cat\"]\n\nscale_columns = [\"age\",\"height_cm\",\"weight_kg\",\"body fat_%\",\n              \"diastolic\",\"systolic\",\"gripForce\",\"sit and bend forward_cm\",\n              \"sit-ups counts\",\"broad jump_cm\"]\nscaler = StandardScaler()\ntransformer = ColumnTransformer([\n    (\"scaler\",scaler,scale_columns)\n])\ntransform_X = transformer.fit_transform(X)\ntransform_X","b169974a":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test = train_test_split(transform_X,y,test_size=0.2)","bd5cedd4":"from sklearn.multiclass import OneVsOneClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\nclf = OneVsOneClassifier(RandomForestClassifier())\nclf.fit(X_train,y_train)","cac9ab35":"clf.score(X_test,y_test)","258edf00":"y_preds = clf.predict(X_test)\ny_preds[:10]","327c4c5e":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report","a5cf236b":"print(\"Accuracy Score: \",accuracy_score(y_test,y_preds))","f02188d1":"print(confusion_matrix(y_test,y_preds))","dd8ef7d8":"print(classification_report(y_test,y_preds))","b864a54d":"## Splitting Dataset and Train","bcebaef2":"Let's visualize our data to explore more","ef985e1d":"We need to convert `gender` and `class` column to numeric","47ebc181":"## Loading Dataset and Initial Impressions","3f90875c":"## End-to-End Machine Learning Project for Kaggle `BodyPerformance` dataset","90ca8160":"## **Contents:**\n\n* Loading Dataset and Initial Impressions\n\n* Visualizing\n\n* Feature Engineering\n\n* Splitting Dataset and Train with perfect model\n\n* Evaluate the score","93e54a50":"## Visualizing","59209b6d":"## Feature Engineering","45778d4d":"No missing data in the dataset","605b7d08":"## Evaluate the Score"}}