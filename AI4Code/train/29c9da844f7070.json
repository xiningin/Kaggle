{"cell_type":{"dfc2fd9f":"code","a1e8c979":"code","cd1523ed":"code","c413f18e":"code","f37f63bd":"code","a9d5d762":"code","b71235a1":"code","ae6dca14":"code","da7ee082":"code","ab761217":"markdown"},"source":{"dfc2fd9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a1e8c979":"from subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","cd1523ed":"def get_winner(cand_main, cand_sub1, cand_sub2):\n    if(cand_sub1==cand_sub2):\n        return cand_sub1\n    else:\n        return cand_main","c413f18e":"df3 = pd.read_csv('..\/input\/submissions\/submission_LB94835.csv')\ndf2 = pd.read_csv('..\/input\/submissions\/submission_LB95026.csv')\ndf1 = pd.read_csv('..\/input\/submissions\/submission_LB95456.csv')","f37f63bd":"subm_df=pd.DataFrame(columns=['img_file', 'class', 'class1', 'class2', 'class3'])","a9d5d762":"subm_df['img_file']=df1['img_file']","b71235a1":"subm_df['class1']=df1['class']\nsubm_df['class2']=df2['class']\nsubm_df['class3']=df3['class']","ae6dca14":"subm_df['class']=subm_df.apply(lambda row : get_winner(row['class1'], row['class2'], row['class3']), axis=1)","da7ee082":"subm_df.drop(['class1','class2', 'class3'], axis=1, inplace=True)\nsubm_df.to_csv('.\/submission.csv')","ab761217":"\uc544\ub798\uc758 \uc138 \uac1c\uc758 submission\ud30c\uc77c\uc740 \ubaa8\ub450 https:\/\/www.kaggle.com\/seriousran\/what-0-95121-model-failed \uc5d0\uc11c \uc870\uae08 \uc218\uc815\ud558\uc5ec \ub9cc\ub4e4\uc5c8\uc73c\ub098, weight\ud30c\uc77c\uc744 \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\uc740 \uad00\uacc4\ub85c submission\ud30c\uc77c\uc744 \uc9c1\uc811 \uc774\uc6a9\ud558\uc5ec \uc77c\uc885\uc758 \ub2e4\uc218\uacb0 voting\uc744 \uc801\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4. (\uc0ac\uc6a9\ub41c \ubaa8\ub378\uc740 EfficientNetB3, Xception, InceptionV3\uc785\ub2c8\ub2e4. \uc57d\uac04\uc758 hyperparameter tuning\uc740 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.)\n\n(\uc774\ud6c4\uc5d0 tta\ub4f1\uc744 \uc801\uc6a9\ud55c \uc2e4\ud5d8\ub4e4\ub3c4 \ud558\uc600\uc73c\ub098, \uc2dc\uac04\uc0c1 \uc81c\ucd9c\uc744 \ud558\uc9c0 \ubabb\ud558\uc5ec \ud574\ub2f9 \uc81c\ucd9c\ubb3c\uc774 \ucd5c\uc885\ubcf8\uc73c\ub85c \ub0a8\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.)"}}