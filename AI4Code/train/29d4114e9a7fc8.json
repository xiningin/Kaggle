{"cell_type":{"6feccb6f":"code","59ff40e3":"code","96203f94":"code","55c758b3":"code","c2ee1af9":"code","8a877292":"code","9ef7d781":"code","1784abf9":"code","d29c8a42":"code","6251e1dd":"code","ece82263":"code","8cb13384":"code","148a95e6":"code","11337478":"code","8c69a5e5":"code","5cad4cb0":"code","6091cd79":"code","f72237c3":"code","d4a04a61":"code","ebd2889f":"code","dfb34953":"markdown","4479fe2f":"markdown","a9913d26":"markdown","a43068c0":"markdown","d261dec3":"markdown","5d5bfb4f":"markdown","8a0f8847":"markdown","a48d40d7":"markdown","800b5a77":"markdown","030fce25":"markdown","89998448":"markdown","6468a5db":"markdown","819ad1c7":"markdown","e0642608":"markdown","2d832636":"markdown","d13d5294":"markdown","b9d5f421":"markdown","9c0001fa":"markdown","36996737":"markdown","4d537cd5":"markdown","156235ac":"markdown"},"source":{"6feccb6f":"!pip install d2l > d2l_install.out\nimport torch\nfrom IPython import display\nfrom d2l import torch as d2l","59ff40e3":"batch_size = 256\ntrain_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)","96203f94":"num_inputs = 784\nnum_outputs = 10\n\nW = torch.normal(0, 0.01, size=(num_inputs, num_outputs), requires_grad=True)\nb = torch.zeros(num_outputs, requires_grad=True)","55c758b3":"X = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\nX.sum(0, keepdim=True), X.sum(1, keepdim=True)","c2ee1af9":"def softmax(X):\n    X_exp = torch.exp(X)\n    partition = X_exp.sum(1, keepdim=True)\n    return X_exp \/ partition  # \u8fd9\u91cc\u5e94\u7528\u4e86\u5e7f\u64ad\u673a\u5236","8a877292":"X = torch.normal(0, 1, (2, 5))\nX_prob = softmax(X)\nX_prob, X_prob.sum(1)","9ef7d781":"def net(X):\n    return softmax(torch.matmul(X.reshape((-1, W.shape[0])), W) + b)","1784abf9":"y = torch.tensor([0, 2])\ny_hat = torch.tensor([[0.1, 0.3, 0.6], [0.3, 0.2, 0.5]])\ny_hat[[0, 1], y]","d29c8a42":"def cross_entropy(y_hat, y):\n    return -torch.log(y_hat[range(len(y_hat)), y])\n\ncross_entropy(y_hat, y)","6251e1dd":"def accuracy(y_hat, y):  #@save\n    \"\"\"\u8ba1\u7b97\u9884\u6d4b\u6b63\u786e\u7684\u6570\u91cf\u3002\"\"\"\n    if len(y_hat.shape) > 1 and y_hat.shape[1] > 1:\n        y_hat = y_hat.argmax(axis=1)\n    cmp = y_hat.type(y.dtype) == y\n    return float(cmp.type(y.dtype).sum())","ece82263":"accuracy(y_hat, y) \/ len(y)","8cb13384":"def evaluate_accuracy(net, data_iter):  #@save\n    \"\"\"\u8ba1\u7b97\u5728\u6307\u5b9a\u6570\u636e\u96c6\u4e0a\u6a21\u578b\u7684\u7cbe\u5ea6\u3002\"\"\"\n    if isinstance(net, torch.nn.Module):\n        net.eval()  # \u5c06\u6a21\u578b\u8bbe\u7f6e\u4e3a\u8bc4\u4f30\u6a21\u5f0f\n    metric = Accumulator(2)  # \u6b63\u786e\u9884\u6d4b\u6570\u3001\u9884\u6d4b\u603b\u6570\n    for X, y in data_iter:\n        metric.add(accuracy(net(X), y), y.numel())\n    return metric[0] \/ metric[1]","148a95e6":"class Accumulator:  #@save\n    \"\"\"\u5728`n`\u4e2a\u53d8\u91cf\u4e0a\u7d2f\u52a0\u3002\"\"\"\n    def __init__(self, n):\n        self.data = [0.0] * n\n\n    def add(self, *args):\n        self.data = [a + float(b) for a, b in zip(self.data, args)]\n\n    def reset(self):\n        self.data = [0.0] * len(self.data)\n\n    def __getitem__(self, idx):\n        return self.data[idx]","11337478":"evaluate_accuracy(net, test_iter)","8c69a5e5":"def train_epoch_ch3(net, train_iter, loss, updater):  #@save\n    \"\"\"\u8bad\u7ec3\u6a21\u578b\u4e00\u4e2a\u8fed\u4ee3\u5468\u671f\uff08\u5b9a\u4e49\u89c1\u7b2c3\u7ae0\uff09\u3002\"\"\"\n    # \u5c06\u6a21\u578b\u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u6a21\u5f0f\n    if isinstance(net, torch.nn.Module):\n        net.train()\n    # \u8bad\u7ec3\u635f\u5931\u603b\u548c\u3001\u8bad\u7ec3\u51c6\u786e\u5ea6\u603b\u548c\u3001\u6837\u672c\u6570\n    metric = Accumulator(3)\n    for X, y in train_iter:\n        # \u8ba1\u7b97\u68af\u5ea6\u5e76\u66f4\u65b0\u53c2\u6570\n        y_hat = net(X)\n        l = loss(y_hat, y)\n        if isinstance(updater, torch.optim.Optimizer):\n            # \u4f7f\u7528PyTorch\u5185\u7f6e\u7684\u4f18\u5316\u5668\u548c\u635f\u5931\u51fd\u6570\n            updater.zero_grad()\n            l.backward()\n            updater.step()\n            metric.add(\n                float(l) * len(y), accuracy(y_hat, y),\n                y.size().numel())\n        else:\n            # \u4f7f\u7528PyTorch\u5185\u7f6e\u7684\u4f18\u5316\u5668\u548c\u635f\u5931\u51fd\u6570\n            l.sum().backward()\n            updater(X.shape[0])\n            metric.add(float(l.sum()), accuracy(y_hat, y), y.numel())\n    # \u8fd4\u56de\u8bad\u7ec3\u635f\u5931\u548c\u8bad\u7ec3\u51c6\u786e\u7387\n    return metric[0] \/ metric[2], metric[1] \/ metric[2]","5cad4cb0":"class Animator:  #@save\n    \"\"\"\u5728\u52a8\u753b\u4e2d\u7ed8\u5236\u6570\u636e\u3002\"\"\"\n    def __init__(self, xlabel=None, ylabel=None, legend=None, xlim=None,\n                 ylim=None, xscale='linear', yscale='linear',\n                 fmts=('-', 'm--', 'g-.', 'r:'), nrows=1, ncols=1,\n                 figsize=(3.5, 2.5)):\n        # \u589e\u91cf\u5730\u7ed8\u5236\u591a\u6761\u7ebf\n        if legend is None:\n            legend = []\n        d2l.use_svg_display()\n        self.fig, self.axes = d2l.plt.subplots(nrows, ncols, figsize=figsize)\n        if nrows * ncols == 1:\n            self.axes = [self.axes,]\n        # \u4f7f\u7528lambda\u51fd\u6570\u6355\u83b7\u53c2\u6570\n        self.config_axes = lambda: d2l.set_axes(self.axes[\n            0], xlabel, ylabel, xlim, ylim, xscale, yscale, legend)\n        self.X, self.Y, self.fmts = None, None, fmts\n\n    def add(self, x, y):\n        # \u5411\u56fe\u8868\u4e2d\u6dfb\u52a0\u591a\u4e2a\u6570\u636e\u70b9\n        if not hasattr(y, \"__len__\"):\n            y = [y]\n        n = len(y)\n        if not hasattr(x, \"__len__\"):\n            x = [x] * n\n        if not self.X:\n            self.X = [[] for _ in range(n)]\n        if not self.Y:\n            self.Y = [[] for _ in range(n)]\n        for i, (a, b) in enumerate(zip(x, y)):\n            if a is not None and b is not None:\n                self.X[i].append(a)\n                self.Y[i].append(b)\n        self.axes[0].cla()\n        for x, y, fmt in zip(self.X, self.Y, self.fmts):\n            self.axes[0].plot(x, y, fmt)\n        self.config_axes()\n        display.display(self.fig)\n        display.clear_output(wait=True)","6091cd79":"def train_ch3(net, train_iter, test_iter, loss, num_epochs, updater):  #@save\n    \"\"\"\u8bad\u7ec3\u6a21\u578b\uff08\u5b9a\u4e49\u89c1\u7b2c3\u7ae0\uff09\u3002\"\"\"\n    animator = Animator(xlabel='epoch', xlim=[1, num_epochs], ylim=[0.3, 0.9],\n                        legend=['train loss', 'train acc', 'test acc'])\n    for epoch in range(num_epochs):\n        train_metrics = train_epoch_ch3(net, train_iter, loss, updater)\n        test_acc = evaluate_accuracy(net, test_iter)\n        animator.add(epoch + 1, train_metrics + (test_acc,))\n    train_loss, train_acc = train_metrics\n    assert train_loss < 0.5, train_loss\n    assert train_acc <= 1 and train_acc > 0.7, train_acc\n    assert test_acc <= 1 and test_acc > 0.7, test_acc","f72237c3":"lr = 0.1\n\ndef updater(batch_size):\n    return d2l.sgd([W, b], lr, batch_size)","d4a04a61":"num_epochs = 10\ntrain_ch3(net, train_iter, test_iter, cross_entropy, num_epochs, updater)","ebd2889f":"def predict_ch3(net, test_iter, n=6):  #@save\n    \"\"\"\u9884\u6d4b\u6807\u7b7e\uff08\u5b9a\u4e49\u89c1\u7b2c3\u7ae0\uff09\u3002\"\"\"\n    for X, y in test_iter:\n        break\n    trues = d2l.get_fashion_mnist_labels(y)\n    preds = d2l.get_fashion_mnist_labels(net(X).argmax(axis=1))\n    titles = [true + '\\n' + pred for true, pred in zip(trues, preds)]\n    d2l.show_images(X[0:n].reshape((n, 28, 28)), 1, n, titles=titles[0:n])\n\npredict_ch3(net, test_iter)","dfb34953":"## \u5b9a\u4e49softmax\u64cd\u4f5c\n\n\u5728\u5b9e\u73b0softmax\u56de\u5f52\u6a21\u578b\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7b80\u8981\u5730\u56de\u987e\u4e00\u4e0b`sum`\u8fd0\u7b97\u7b26\u5982\u4f55\u6cbf\u7740\u5f20\u91cf\u4e2d\u7684\u7279\u5b9a\u7ef4\u5ea6\u5de5\u4f5c\uff0c\u5982 :numref:`subseq_lin-alg-reduction` \u548c :numref:`subseq_lin-alg-non-reduction` \u6240\u8ff0\u3002\u7ed9\u5b9a\u4e00\u4e2a\u77e9\u9635`X`\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u6709\u5143\u7d20\u6c42\u548c\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff09\uff0c\u4e5f\u53ef\u4ee5\u53ea\u6c42\u540c\u4e00\u4e2a\u8f74\u4e0a\u7684\u5143\u7d20\uff0c\u5373\u540c\u4e00\u5217\uff08\u8f740\uff09\u6216\u540c\u4e00\u884c\uff08\u8f741\uff09\u3002\u5982\u679c `X` \u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a `(2, 3)` \u7684\u5f20\u91cf\uff0c\u6211\u4eec\u5bf9\u5217\u8fdb\u884c\u6c42\u548c\uff0c\u5219\u7ed3\u679c\u5c06\u662f\u4e00\u4e2a\u5177\u6709\u5f62\u72b6 `(3,)` \u7684\u5411\u91cf\u3002\u5f53\u8c03\u7528sum\u8fd0\u7b97\u7b26\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u4fdd\u6301\u5728\u539f\u59cb\u5f20\u91cf\u7684\u8f74\u6570\uff0c\u800c\u4e0d\u6298\u53e0\u6c42\u548c\u7684\u7ef4\u5ea6\u3002\u8fd9\u5c06\u4ea7\u751f\u4e00\u4e2a\u5177\u6709\u5f62\u72b6 `(1, 3)` \u7684\u4e8c\u7ef4\u5f20\u91cf\u3002\n","4479fe2f":"\u8fd9\u91cc `Accumulator` \u662f\u4e00\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u7c7b\uff0c\u7528\u4e8e\u5bf9\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u7d2f\u52a0\u3002\n\u5728\u4e0a\u9762\u7684 `evaluate_accuracy` \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5728 `Accumulator` \u5b9e\u4f8b\u4e2d\u521b\u5efa\u4e86 2 \u4e2a\u53d8\u91cf\uff0c\u7528\u4e8e\u5206\u522b\u5b58\u50a8\u6b63\u786e\u9884\u6d4b\u7684\u6570\u91cf\u548c\u9884\u6d4b\u7684\u603b\u6570\u91cf\u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u636e\u96c6\u65f6\uff0c\u4e24\u8005\u90fd\u5c06\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u7d2f\u52a0\u3002\n","a9913d26":"\u63a5\u4e0b\u6765\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u8bad\u7ec3\u51fd\u6570\uff0c\u5b83\u4f1a\u5728`train_iter` \u8bbf\u95ee\u5230\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b`net`\u3002\u8be5\u8bad\u7ec3\u51fd\u6570\u5c06\u4f1a\u8fd0\u884c\u591a\u4e2a\u8fed\u4ee3\u5468\u671f\uff08\u7531`num_epochs`\u6307\u5b9a\uff09\u3002\u5728\u6bcf\u4e2a\u8fed\u4ee3\u5468\u671f\u7ed3\u675f\u65f6\uff0c\u5229\u7528 `test_iter` \u8bbf\u95ee\u5230\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\u5bf9\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\u3002\u6211\u4eec\u5c06\u5229\u7528 `Animator` \u7c7b\u6765\u53ef\u89c6\u5316\u8bad\u7ec3\u8fdb\u5ea6\u3002\n","a43068c0":"## \u5206\u7c7b\u51c6\u786e\u7387\n\n\u5728\u7ed9\u5b9a\u9884\u6d4b\u6982\u7387\u5206\u5e03 `y_hat`\u65f6\uff0c\u5f53\u6211\u4eec\u5fc5\u987b\u8f93\u51fa\u786c\u9884\u6d4b\uff08hard prediction\uff09\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u9009\u62e9\u9884\u6d4b\u6982\u7387\u6700\u9ad8\u7684\u7c7b\u3002\u8bb8\u591a\u5e94\u7528\u90fd\u8981\u6c42\u6211\u4eec\u505a\u51fa\u9009\u62e9\u3002\u5982Gmail\u5fc5\u987b\u5c06\u7535\u5b50\u90ae\u4ef6\u5206\u4e3a\u201cPrimary\uff08\u4e3b\u8981\uff09\u201d\u3001\u201cSocial\uff08\u793e\u4ea4\uff09\u201d\u3001\u201cUpdates\uff08\u66f4\u65b0\uff09\u201d\u6216\u201cForums\uff08\u8bba\u575b\uff09\u201d\u3002\u5b83\u53ef\u80fd\u5728\u5185\u90e8\u4f30\u8ba1\u6982\u7387\uff0c\u4f46\u6700\u7ec8\u5b83\u5fc5\u987b\u5728\u7c7b\u4e2d\u9009\u62e9\u4e00\u4e2a\u3002\n\n\u5f53\u9884\u6d4b\u4e0e\u6807\u7b7e\u5206\u7c7b `y` \u4e00\u81f4\u65f6\uff0c\u5b83\u4eec\u662f\u6b63\u786e\u7684\u3002\u5206\u7c7b\u51c6\u786e\u7387\u5373\u6b63\u786e\u9884\u6d4b\u6570\u91cf\u4e0e\u603b\u9884\u6d4b\u6570\u91cf\u4e4b\u6bd4\u3002\u867d\u7136\u76f4\u63a5\u4f18\u5316\u51c6\u786e\u7387\u53ef\u80fd\u5f88\u56f0\u96be\uff08\u56e0\u4e3a\u51c6\u786e\u7387\u7684\u8ba1\u7b97\u4e0d\u53ef\u5bfc\uff09\uff0c\u4f46\u51c6\u786e\u7387\u901a\u5e38\u662f\u6211\u4eec\u6700\u5173\u5fc3\u7684\u6027\u80fd\u8861\u91cf\u6807\u51c6\uff0c\u6211\u4eec\u5728\u8bad\u7ec3\u5206\u7c7b\u5668\u65f6\u51e0\u4e4e\u603b\u662f\u4f1a\u62a5\u544a\u5b83\u3002\n\n\u4e3a\u4e86\u8ba1\u7b97\u51c6\u786e\u7387\uff0c\u6211\u4eec\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002\u9996\u5148\uff0c\u5982\u679c `y_hat` \u662f\u77e9\u9635\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u5b58\u50a8\u6bcf\u4e2a\u7c7b\u7684\u9884\u6d4b\u5206\u6570\u3002\u6211\u4eec\u4f7f\u7528 `argmax` \u83b7\u5f97\u6bcf\u884c\u4e2d\u6700\u5927\u5143\u7d20\u7684\u7d22\u5f15\u6765\u83b7\u5f97\u9884\u6d4b\u7c7b\u522b\u3002\u7136\u540e\u6211\u4eec\u5c06\u9884\u6d4b\u7c7b\u522b\u4e0e\u771f\u5b9e `y` \u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\u3002\u7531\u4e8e\u7b49\u5f0f\u8fd0\u7b97\u7b26 `==` \u5bf9\u6570\u636e\u7c7b\u578b\u5f88\u654f\u611f\uff0c\u56e0\u6b64\u6211\u4eec\u5c06 `y_hat` \u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u4e0e `y` \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u542b 0\uff08\u9519\uff09\u548c 1\uff08\u5bf9\uff09\u7684\u5f20\u91cf\u3002\u8fdb\u884c\u6c42\u548c\u4f1a\u5f97\u5230\u6b63\u786e\u9884\u6d4b\u7684\u6570\u91cf\u3002\n","d261dec3":"\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc4\u4f30\u6570\u636e\u8fed\u4ee3\u5668 `data_iter` \u8bbf\u95ee\u7684\u6570\u636e\u96c6\u5728\u4efb\u610f\u6a21\u578b `net` \u4e0a\u7684\u51c6\u786e\u7387\u3002\n","5d5bfb4f":"\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u968f\u673a\u6743\u91cd\u521d\u59cb\u5316 `net` \u6a21\u578b\uff0c\u56e0\u6b64\u8be5\u6a21\u578b\u7684\u51c6\u786e\u7387\u5e94\u63a5\u8fd1\u4e8e\u968f\u673a\u731c\u6d4b\u3002\u4f8b\u5982\u5728\u670910\u4e2a\u7c7b\u522b\u60c5\u51b5\u4e0b\u7684\u51c6\u786e\u7387\u4e3a0.1\u3002\n","8a0f8847":"\u6ce8\u610f\uff0c\u867d\u7136\u8fd9\u5728\u6570\u5b66\u4e0a\u770b\u8d77\u6765\u662f\u6b63\u786e\u7684\uff0c\u4f46\u6211\u4eec\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\u6709\u70b9\u8349\u7387\u3002\u77e9\u9635\u4e2d\u7684\u975e\u5e38\u5927\u6216\u975e\u5e38\u5c0f\u7684\u5143\u7d20\u53ef\u80fd\u9020\u6210\u6570\u503c\u4e0a\u6ea2\u6216\u4e0b\u6ea2\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u91c7\u53d6\u63aa\u65bd\u6765\u9632\u6b62\u8fd9\u70b9\u3002\n\n## \u5b9a\u4e49\u6a21\u578b\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86softmax\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0softmax\u56de\u5f52\u6a21\u578b\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u8f93\u5165\u5982\u4f55\u901a\u8fc7\u7f51\u7edc\u6620\u5c04\u5230\u8f93\u51fa\u3002\u6ce8\u610f\uff0c\u5728\u5c06\u6570\u636e\u4f20\u9012\u5230\u6211\u4eec\u7684\u6a21\u578b\u4e4b\u524d\uff0c\u6211\u4eec\u4f7f\u7528 `reshape` \u51fd\u6570\u5c06\u6bcf\u5f20\u539f\u59cb\u56fe\u50cf\u5c55\u5e73\u4e3a\u5411\u91cf\u3002\n","a48d40d7":"\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u5bf9\u4e8e\u4efb\u4f55\u968f\u673a\u8f93\u5165\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u5143\u7d20\u53d8\u6210\u4e00\u4e2a\u975e\u8d1f\u6570\u3002\u6b64\u5916\uff0c\u56e0\u4e3a\u6982\u7387\u7684\u8981\u6c42\uff0c\u6bcf\u884c\u603b\u548c\u4e3a1\u3002\n","800b5a77":"\u73b0\u5728\u6211\u4eec\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u3002\n","030fce25":"# softmax\u56de\u5f52\u7684\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0\n:label:`sec_softmax_scratch`\n\n\u5c31\u50cf\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0\u7ebf\u6027\u56de\u5f52\u4e00\u6837\uff0c\u6211\u4eec\u8ba4\u4e3asoftmax\u56de\u5f52\u4e5f\u662f\u91cd\u8981\u7684\u57fa\u7840\uff0c\u56e0\u6b64\u4f60\u5e94\u8be5\u77e5\u9053\u5982\u4f55\u81ea\u5df1\u5b9e\u73b0\u5b83\u7684\u7ec6\u8282\u3002\u6211\u4eec\u4f7f\u7528\u521a\u521a\u5728 :numref:`sec_fashion_mnist` \u4e2d\u5f15\u5165\u7684Fashion-MNIST\u6570\u636e\u96c6\uff0c\u5e76\u8bbe\u7f6e\u6570\u636e\u8fed\u4ee3\u5668\u7684\u6279\u91cf\u5927\u5c0f\u4e3a256\u3002\n","89998448":"\u5728\u5c55\u793a\u8bad\u7ec3\u51fd\u6570\u7684\u5b9e\u73b0\u4e4b\u524d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5728\u52a8\u753b\u4e2d\u7ed8\u5236\u6570\u636e\u7684\u5b9e\u7528\u7a0b\u5e8f\u7c7b\u3002\u5b83\u80fd\u591f\u7b80\u5316\u672c\u4e66\u5176\u4f59\u90e8\u5206\u7684\u4ee3\u7801\u3002\n","6468a5db":"\u73b0\u5728\uff0c\u6211\u4eec\u8bad\u7ec3\u6a21\u578b10\u4e2a\u8fed\u4ee3\u5468\u671f\u3002\u8bf7\u6ce8\u610f\uff0c\u8fed\u4ee3\u5468\u671f\uff08`num_epochs`\uff09\u548c\u5b66\u4e60\u7387\uff08`lr`\uff09\u90fd\u662f\u53ef\u8c03\u8282\u7684\u8d85\u53c2\u6570\u3002\u901a\u8fc7\u66f4\u6539\u5b83\u4eec\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u5206\u7c7b\u51c6\u786e\u7387\u3002\n","819ad1c7":"[Discussions](https:\/\/discuss.d2l.ai\/t\/1789)\n","e0642608":"## \u5b9a\u4e49\u635f\u5931\u51fd\u6570\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0 :numref:`sec_softmax` \u4e2d\u5f15\u5165\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u3002\u8fd9\u53ef\u80fd\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6700\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\uff0c\u56e0\u4e3a\u76ee\u524d\u5206\u7c7b\u95ee\u9898\u7684\u6570\u91cf\u8fdc\u8fdc\u8d85\u8fc7\u56de\u5f52\u95ee\u9898\u3002\n\n\u56de\u987e\u4e00\u4e0b\uff0c\u4ea4\u53c9\u71b5\u91c7\u7528\u771f\u5b9e\u6807\u7b7e\u7684\u9884\u6d4b\u6982\u7387\u7684\u8d1f\u5bf9\u6570\u4f3c\u7136\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528Python\u7684for\u5faa\u73af\u8fed\u4ee3\u9884\u6d4b\uff08\u8fd9\u5f80\u5f80\u662f\u4f4e\u6548\u7684\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u8fd0\u7b97\u7b26\u9009\u62e9\u6240\u6709\u5143\u7d20\u3002\n\u4e0b\u9762\uff0c\u6211\u4eec\u4e00\u4e2a\u6f14\u793a\u6570\u636e\uff0c\u5176\u4e2d\u5305\u542b2\u4e2a\u6837\u672c\u57283\u4e2a\u7c7b\u522b\u7684\u9884\u6d4b\u6982\u7387`y_hat`\u3002\u4ee5\u53ca\u5b83\u4eec\u5bf9\u5e94\u7684\u6807\u7b7e`y`\u3002\n\u6709\u4e86`y`\uff0c\u6211\u4eec\u77e5\u9053\u5728\u7b2c\u4e00\u4e2a\u6837\u672c\u4e2d\uff0c\u7b2c\u4e00\u7c7b\u662f\u6b63\u786e\u7684\u9884\u6d4b\uff0c\u800c\u5728\u7b2c\u4e8c\u4e2a\u6837\u672c\u4e2d\uff0c\u7b2c\u4e09\u7c7b\u662f\u6b63\u786e\u7684\u9884\u6d4b\u3002\n\u7136\u540e\u4f7f\u7528`y`\u4f5c\u4e3a`y_hat`\u4e2d\u6982\u7387\u7684\u7d22\u5f15\uff0c\u6211\u4eec\u9009\u62e9\u7b2c\u4e00\u4e2a\u6837\u672c\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u7684\u6982\u7387\u548c\u7b2c\u4e8c\u4e2a\u6837\u672c\u4e2d\u7b2c\u4e09\u4e2a\u7c7b\u7684\u6982\u7387\u3002\n","2d832636":"\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u5b9e\u73b0softmax\u64cd\u4f5c\u4e86\u3002\u56de\u60f3\u4e00\u4e0b\uff0csoftmax \u7531\u4e09\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff1a\n\uff081\uff09\u5bf9\u6bcf\u4e2a\u9879\u6c42\u5e42\uff08\u4f7f\u7528`exp`\uff09\uff1b\n\uff082\uff09\u5bf9\u6bcf\u4e00\u884c\u6c42\u548c\uff08\u5c0f\u6279\u91cf\u4e2d\u6bcf\u4e2a\u6837\u672c\u662f\u4e00\u884c\uff09\uff0c\u5f97\u5230\u6bcf\u4e2a\u6837\u672c\u7684\u5f52\u4e00\u5316\u5e38\u6570\uff1b\n\uff083\uff09\u5c06\u6bcf\u4e00\u884c\u9664\u4ee5\u5176\u5f52\u4e00\u5316\u5e38\u6570\uff0c\u786e\u4fdd\u7ed3\u679c\u7684\u548c\u4e3a1\u3002\n\u5728\u67e5\u770b\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff1a\n\n$$\n\\mathrm{softmax}(\\mathbf{X})_{ij} = \\frac{\\exp(\\mathbf{X}_{ij})}{\\sum_k \\exp(\\mathbf{X}_{ik})}.\n$$\n\n\u5206\u6bcd\u6216\u5f52\u4e00\u5316\u5e38\u6570\uff0c\u6709\u65f6\u4e5f\u79f0\u4e3a*\u914d\u5206\u51fd\u6570*\uff08\u5176\u5bf9\u6570\u79f0\u4e3a\u5bf9\u6570-\u914d\u5206\u51fd\u6570\uff09\u3002\u8be5\u540d\u79f0\u7684\u8d77\u6e90\u6765\u81ea [\u7edf\u8ba1\u7269\u7406\u5b66](https:\/\/en.wikipedia.org\/wiki\/Partition_function_(statistical_mechanics))\u4e2d\u4e00\u4e2a\u6a21\u62df\u7c92\u5b50\u7fa4\u5206\u5e03\u7684\u65b9\u7a0b\u3002\n","d13d5294":"\u4f5c\u4e3a\u4e00\u4e2a\u4ece\u96f6\u5f00\u59cb\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u4f7f\u7528 :numref:`sec_linear_scratch` \u4e2d\u5b9a\u4e49\u7684\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6765\u4f18\u5316\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\uff0c\u8bbe\u7f6e\u5b66\u4e60\u7387\u4e3a0.1\u3002\n","b9d5f421":"## \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\n\n\u8fd9\u91cc\u7684\u6bcf\u4e2a\u6837\u672c\u90fd\u7528\u56fa\u5b9a\u957f\u5ea6\u5411\u91cf\u8868\u793a\u3002\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u90fd\u662f $28 \\times 28$ \u7684\u56fe\u50cf\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5c55\u5e73\u6bcf\u4e2a\u56fe\u50cf\uff0c\u5c06\u5b83\u4eec\u89c6\u4e3a\u957f\u5ea6\u4e3a784\u7684\u5411\u91cf\u3002\u5728\u4ee5\u540e\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u80fd\u591f\u5229\u7528\u56fe\u50cf\u7a7a\u95f4\u7ed3\u6784\u7684\u590d\u6742\u7b56\u7565\uff0c\u4f46\u73b0\u5728\u6211\u4ec5\u5c06\u6bcf\u4e2a\u50cf\u7d20\u4f4d\u7f6e\u89c6\u4e3a\u4e00\u4e2a\u7279\u5f81\u3002\n\n\u56de\u60f3\u4e00\u4e0b\uff0c\u5728softmax\u56de\u5f52\u4e2d\uff0c\u6211\u4eec\u7684\u8f93\u51fa\u4e0e\u7c7b\u522b\u4e00\u6837\u591a\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u6570\u636e\u96c6\u670910\u4e2a\u7c7b\u522b\uff0c\u6240\u4ee5\u7f51\u7edc\u8f93\u51fa\u7ef4\u5ea6\u4e3a 10\u3002\u56e0\u6b64\uff0c\u6743\u91cd\u5c06\u6784\u6210\u4e00\u4e2a $784 \\times 10$ \u7684\u77e9\u9635\uff0c\u504f\u7f6e\u5c06\u6784\u6210\u4e00\u4e2a $1 \\times 10$ \u7684\u884c\u5411\u91cf\u3002\u4e0e\u7ebf\u6027\u56de\u5f52\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6b63\u6001\u5206\u5e03\u521d\u59cb\u5316\u6211\u4eec\u7684\u6743\u91cd `W`\uff0c\u504f\u7f6e\u521d\u59cb\u5316\u4e3a0\u3002\n","9c0001fa":"## \u9884\u6d4b\n\n\u73b0\u5728\u8bad\u7ec3\u5df2\u7ecf\u5b8c\u6210\uff0c\u6211\u4eec\u7684\u6a21\u578b\u5df2\u7ecf\u51c6\u5907\u597d\u5bf9\u56fe\u50cf\u8fdb\u884c\u5206\u7c7b\u3002\u7ed9\u5b9a\u4e00\u7cfb\u5217\u56fe\u50cf\uff0c\u6211\u4eec\u5c06\u6bd4\u8f83\u5b83\u4eec\u7684\u5b9e\u9645\u6807\u7b7e\uff08\u6587\u672c\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\uff09\u548c\u6a21\u578b\u9884\u6d4b\uff08\u6587\u672c\u8f93\u51fa\u7684\u7b2c\u4e8c\u884c\uff09\u3002\n","36996737":"## \u8bad\u7ec3\n\n\u5982\u679c\u4f60\u770b\u8fc7 :numref:`sec_linear_scratch` \u4e2d\u7684\u7ebf\u6027\u56de\u5f52\u5b9e\u73b0\uff0csoftmax\u56de\u5f52\u7684\u8bad\u7ec3\u8fc7\u7a0b\u4ee3\u7801\u5e94\u8be5\u770b\u8d77\u6765\u975e\u5e38\u719f\u6089\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u91cd\u6784\u8bad\u7ec3\u8fc7\u7a0b\u7684\u5b9e\u73b0\u4ee5\u4f7f\u5176\u53ef\u91cd\u590d\u4f7f\u7528\u3002\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6765\u8bad\u7ec3\u4e00\u4e2a\u8fed\u4ee3\u5468\u671f\u3002\u8bf7\u6ce8\u610f\uff0c`updater` \u662f\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u5e38\u7528\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u6279\u91cf\u5927\u5c0f\u4f5c\u4e3a\u53c2\u6570\u3002\u5b83\u53ef\u4ee5\u662f\u5c01\u88c5\u7684`d2l.sgd`\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u6846\u67b6\u7684\u5185\u7f6e\u4f18\u5316\u51fd\u6570\u3002\n","4d537cd5":"\u6211\u4eec\u5c06\u7ee7\u7eed\u4f7f\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u53d8\u91cf `y_hat` \u548c `y` \u5206\u522b\u4f5c\u4e3a\u9884\u6d4b\u7684\u6982\u7387\u5206\u5e03\u548c\u6807\u7b7e\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u7b2c\u4e00\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u7c7b\u522b\u662f2\uff08\u8be5\u884c\u7684\u6700\u5927\u5143\u7d20\u4e3a0.6\uff0c\u7d22\u5f15\u4e3a2\uff09\uff0c\u8fd9\u4e0e\u5b9e\u9645\u6807\u7b7e0\u4e0d\u4e00\u81f4\u3002\u7b2c\u4e8c\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u7c7b\u522b\u662f2\uff08\u8be5\u884c\u7684\u6700\u5927\u5143\u7d20\u4e3a0.5\uff0c\u7d22\u5f15\u4e3a 2\uff09\uff0c\u8fd9\u4e0e\u5b9e\u9645\u6807\u7b7e2\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u4e2a\u6837\u672c\u7684\u5206\u7c7b\u51c6\u786e\u7387\u7387\u4e3a0.5\u3002\n","156235ac":"## \u5c0f\u7ed3\n\n* \u501f\u52a9 softmax \u56de\u5f52\uff0c\u6211\u4eec\u53ef\u4ee5\u8bad\u7ec3\u591a\u5206\u7c7b\u7684\u6a21\u578b\u3002\n* softmax \u56de\u5f52\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u7ebf\u6027\u56de\u5f52\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u975e\u5e38\u76f8\u4f3c\uff1a\u8bfb\u53d6\u6570\u636e\u3001\u5b9a\u4e49\u6a21\u578b\u548c\u635f\u5931\u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\u8bad\u7ec3\u6a21\u578b\u3002\u6b63\u5982\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u7684\u90a3\u6837\uff0c\u5927\u591a\u6570\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u90fd\u6709\u7c7b\u4f3c\u7684\u8bad\u7ec3\u8fc7\u7a0b\u3002\n\n## \u7ec3\u4e60\n\n1. \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u5b9e\u73b0\u4e86\u57fa\u4e8e\u6570\u5b66\u5b9a\u4e49softmax\u8fd0\u7b97\u7684`softmax`\u51fd\u6570\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ec0\u4e48\u95ee\u9898\uff1f\u63d0\u793a\uff1a\u5c1d\u8bd5\u8ba1\u7b97 $\\exp(50)$ \u7684\u5927\u5c0f\u3002\n1. \u672c\u8282\u4e2d\u7684\u51fd\u6570 `cross_entropy` \u662f\u6839\u636e\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u7684\u5b9a\u4e49\u5b9e\u73b0\u7684\u3002\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u80fd\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u63d0\u793a\uff1a\u8003\u8651\u5bf9\u6570\u7684\u503c\u57df\u3002\n1. \u4f60\u53ef\u4ee5\u60f3\u5230\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\uff1f\n1. \u8fd4\u56de\u6982\u7387\u6700\u5927\u7684\u6807\u7b7e\u603b\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u5417\uff1f\u4f8b\u5982\uff0c\u533b\u7597\u8bca\u65ad\u573a\u666f\u4e0b\u4f60\u4f1a\u8fd9\u6837\u505a\u5417\uff1f\n1. \u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u4f7f\u7528softmax\u56de\u5f52\u6765\u57fa\u4e8e\u67d0\u4e9b\u7279\u5f81\u9884\u6d4b\u4e0b\u4e00\u4e2a\u5355\u8bcd\u3002\u8bcd\u6c47\u91cf\u5927\u53ef\u80fd\u4f1a\u5e26\u6765\u54ea\u4e9b\u95ee\u9898?\n"}}