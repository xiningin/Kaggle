{"cell_type":{"d1e74595":"code","31336506":"code","a964b01b":"code","408418e0":"code","51884997":"code","2ad764bc":"code","23215465":"code","5b89dc5d":"code","259fee34":"code","cf0d2cb0":"code","d5c67564":"code","742824e9":"code","a1cfc900":"code","13407f79":"code","ad225691":"code","fcdeba7b":"code","7c684af6":"markdown","5d02b527":"markdown","a82f2f31":"markdown","9cad4366":"markdown","a9c391f3":"markdown","39217942":"markdown","8a642ad8":"markdown","fef46e86":"markdown","90cc4b3d":"markdown","01220b1e":"markdown","2d25337c":"markdown","49624631":"markdown","7c117d48":"markdown","07d75599":"markdown","28c89b8a":"markdown","287d9332":"markdown"},"source":{"d1e74595":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Importing libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","31336506":"# Reading the csv file with the train data\ndata = pd.read_csv(dirname+'\/train.csv', sep=',', header=0, index_col=0)\n#train_label = pd.read_csv('train_labels.csv', sep=',', header=0,index_col=0)\ndata.info()","a964b01b":"# Define some global variables we will use in our quick EDA\nnumerical_vars=['Elevation','Aspect','Slope','Horizontal_Distance_To_Hydrology','Vertical_Distance_To_Hydrology',\n                'Horizontal_Distance_To_Roadways','Hillshade_9am','Hillshade_Noon','Hillshade_3pm',\n                'Horizontal_Distance_To_Fire_Points']\n#Columns for the categorical variable Wilderness\nn_cat_for_wild=4\ncat_var_wild=['Wilderness_Area'+str(i) for i in range(1,n_cat_for_wild+1)]\n#Columns for the categorical variable Soil\nn_cat_for_soil=40\ncat_var_soil=['Soil_Type'+str(i) for i in range(1,n_cat_for_soil+1)]\n","408418e0":"# Descriptive statistics for numerical variables\n# First insight of data\ndata[numerical_vars].describe().T","51884997":"# Lets explore how many 0 values are in the features\nprint('Aspect=0 in rows:'+str(len(data[data['Aspect']==0].index)))\nprint('Slope=0 in rows:'+str(len(data[data['Slope']==0].index)))\nprint('Horizontal_Distance_To_Hydrology=0 in rows:'+str(len(data[data['Horizontal_Distance_To_Hydrology']==0].index)))\nprint('Vertical_Distance_To_Hydrology=0 in rows:'+str(len(data[data['Vertical_Distance_To_Hydrology']<=0].index)))\nprint('Horizontal_Distance_To_Roadways=0 in rows:'+str(len(data[data['Horizontal_Distance_To_Roadways']<=0].index)))","2ad764bc":"#We are defining an 3 x 4 matrix to help us plotting features\nplot_vars=np.array([['Elevation','Aspect','Slope',None],['Horizontal_Distance_To_Hydrology','Vertical_Distance_To_Hydrology',\n                'Horizontal_Distance_To_Roadways','Horizontal_Distance_To_Fire_Points'],['Hillshade_9am','Hillshade_Noon','Hillshade_3pm',None]])\n","23215465":"# Boxplots for numrical features\nf, axes = plt.subplots(3, 4, sharey=False, figsize=(15,15))\n#fig1, ax1 = plt.subplots()\nfor i in range(plot_vars.shape[0]):\n    for j in range(plot_vars.shape[1]):\n        if plot_vars[i,j]!=None:\n            axes[i,j].set_title(plot_vars[i,j])\n            axes[i,j].grid(True)\n            axes[i,j].tick_params(\n                axis='x',          # changes apply to the x-axis\n                which='both',      # both major and minor ticks are affected\n                bottom=False,      # ticks along the bottom edge are off\n                top=False,         # ticks along the top edge are off\n                labelbottom=False)\n            axes[i,j].boxplot(data[plot_vars[i,j]])\n        else:\n            axes[i,j].set_visible(False)\n\nplt.show()","5b89dc5d":"# Histograms for appicant featrures\nf, axes = plt.subplots(3, 4, sharey=False, figsize=(15,15))\n#fig1, ax1 = plt.subplots()\nfor i in range(plot_vars.shape[0]):\n    for j in range(plot_vars.shape[1]):\n        if plot_vars[i,j]!=None:\n            axes[i,j].set_title(plot_vars[i,j])\n            axes[i,j].grid(False)\n            axes[i,j].tick_params(\n                axis='x',          # changes apply to the x-axis\n                which='both',      # both major and minor ticks are affected\n                bottom=False,      # ticks along the bottom edge are off\n                top=False,         # ticks along the top edge are off\n                labelbottom=False)\n            axes[i,j].hist(data[plot_vars[i,j]],bins=20)\n        else:\n            axes[i,j].set_visible(False)\n\nplt.show()","259fee34":"import seaborn as sns\n\nsns.pairplot(data[numerical_vars+['Cover_Type']], vars = ['Elevation','Aspect','Slope','Horizontal_Distance_To_Hydrology','Vertical_Distance_To_Hydrology',\n                'Horizontal_Distance_To_Roadways','Horizontal_Distance_To_Fire_Points'],hue='Cover_Type',plot_kws = {'alpha': 0.6})\nplt.show()","cf0d2cb0":"g=sns.pairplot(data[numerical_vars+['Cover_Type']], vars = ['Hillshade_9am','Hillshade_Noon','Hillshade_3pm'],hue='Cover_Type',plot_kws = {'alpha': 0.6})\n\ng = g.add_legend()\nplt.show()\n","d5c67564":"plt.subplots(figsize=(20, 16))\nk = 50 #number of variables for heatmap\ncorrmat = data.corr()\ncols = corrmat.nlargest(k, 'Cover_Type')['Cover_Type'].index\n\ncm = np.corrcoef(data[cols].values.T)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True,\n                 fmt='.2f', annot_kws={'size': 8}, cmap='Blues',\n                 yticklabels=[x[0:10] for x in cols.values], xticklabels=cols.values)\nplt.show()","742824e9":"root_label='Soil_Type'\nlabels=[i[len(root_label):] for i in cat_var_soil]\nf, ax = plt.subplots(figsize=(20,5))\ndata[cat_var_soil].sum().plot(kind='bar',label='Soil Type',color='g')\nax.set_xticklabels(labels)\nax.set_xlabel('Soil Type',labelpad =15,fontsize=20)\n\nroot_label='Wilderness_Area'\nlabels=[i[len(root_label):] for i in cat_var_wild]\n\nf, ax = plt.subplots(figsize=(20,5))\ndata[cat_var_wild].sum().plot(kind='bar',label='Wilderness Area',color='brown')\nax.set_xticklabels(labels)\nax.set_xlabel('Wilderness Area',labelpad =15,fontsize=20)\n\nplt.show()","a1cfc900":"f, ax = plt.subplots(figsize=(20,5))\ndata['Cover_Type'].value_counts().plot(kind='bar',label='Cover type',color='orange')\nax.set_xlabel('Cover Type',labelpad =15,fontsize=20)\nplt.show()","13407f79":"# Histograms features vs target label\nvalues=data['Cover_Type'].unique()\nvalues.sort()\n\nf, axes = plt.subplots(3, 4, sharey=False, figsize=(15,15))\n#fig1, ax1 = plt.subplots()\nfor i in range(plot_vars.shape[0]):\n    for j in range(plot_vars.shape[1]):\n        if plot_vars[i,j]!=None:\n            for k in values:\n                axes[i,j].hist(data[data['Cover_Type']==k][plot_vars[i,j]],alpha=0.7,histtype='bar',bins=10,label=str(k))\n                \n            axes[i,j].set_xlabel(plot_vars[i,j],labelpad=10,fontsize=10)\n            if j==0:\n                axes[i,j].set_ylabel('Count')\n                axes[i,j].legend()\n        else:\n            axes[i,j].set_visible(False)\n\nplt.show()","ad225691":"Area1 = data[data['Wilderness_Area1']==1]\nArea2 = data[data['Wilderness_Area2']==1]\nArea3 = data[data['Wilderness_Area3']==1]\nArea4 = data[data['Wilderness_Area4']==1]\n\nf, ax = plt.subplots(figsize=(15,8))\nplt.hist(Area1['Cover_Type'],label='Area1',histtype='step',alpha=0.7,linewidth=5)\nplt.hist(Area2['Cover_Type'],label='Area2',histtype='step',alpha=0.7,linewidth=5)\nplt.hist(Area3['Cover_Type'],label='Area3',histtype='step',alpha=0.7,linewidth=5)\nplt.hist(Area4['Cover_Type'],label='Area4',histtype='step',alpha=0.7,linewidth=5)\nplt.title('Wilderness Area vs Cover Type',fontsize=16)\nplt.xlabel('Cover Type', fontsize=12)\nplt.legend()\nplt.show()","fcdeba7b":"plt.figure(figsize =(20,10)) \n\nfor i in cat_var_soil:\n    plt.hist(data[data[i]==1]['Cover_Type'],label=i[9:],histtype='bar',alpha=0.7,linewidth=5)\n    \nplt.title('Soil Type vs Cover Type',fontsize=16)\nplt.xlabel('Cover Type', fontsize=12)\nplt.legend()\nplt.show()","7c684af6":"The highest values of correlation have been calculated for horizontal and vertical distance to hidrology and for hillshade 3pm and Aspect. ","5d02b527":"There are about 10% of 0 values in the feature Horizontal_Distance_To_Hydrology. ","a82f2f31":"## Boxplots for numerical features","9cad4366":"- As we saw in a previous chart, Elevation feature seems to be a good predictor. We can observe that when elevation raises the cover type is changing too, based on an elevation range.\n- Rows with an aspect range in 100-150m are labeled as Cober Type 4\n- A Very low horizontal distance to hidrology value indicates a cover type 4 forest\n- But for some features the cover types are spread along the whole range of the values (Slope,distances, Hillshade Noon and Hillshade 3pm)","a9c391f3":"## Data distribution and analysis for categorical variables ","39217942":"As we mentioned previously there are many values outside the IQR (interquartile range), outliers presence should be a point to analize. Specially we can found some values for the feature Vertical_Distance_To_Hydrology above 500m when most of the values are below 400.","8a642ad8":"Values of the Elevation feature seems to be uniformly distributed. Features relatives to horizontal and vertical distances are right skewed distributions. Hillshade 3pm looks like a normal distribution and Hillshade 9am and Noon variables are left skewed distributed.\n\nNow that we know some aspects of our data, we will analyze the existence of correlations between our variables.","fef46e86":"There are 15120 rows in out dataset. For some variables (Slope, Horizontal and vertical distances) we can observe that the distance between the third IQ and the max value is very large, maybe some data outliers could be found. \n\nSome columns have value 0 or negative values, so they could be missing values.\n","90cc4b3d":"## Let's explore features values respect to target","01220b1e":"* Some nice plots (;-)) and some positive and negative correlations are shown for the Hillshade atribute.\n\nFinnaly we will calculate the correlation matrix for our numerical features to confirm what we have observed. ","2d25337c":"**Yes, it is completely balanced**","49624631":"- Soil Types 7, 8, 15, 25 have only 0 values so they are irrelevant. Soil Types 9, 21, 27, 28 and 36 have are very low number of 1s so they might be useless.\n- Willdernes Area is an unbalanced feature, only 3% of the rows are Type 2.\n\n*\u00bfis our target label balanced?* Lets explore it","7c117d48":"The most discriminative variable in our dataset is the Elevation feature, we can identify some groups of our target variable when we plot it vs other feature. But there are many data correlations, except for horizontal and vertical distance to hidrology.\n\nWe should have drawn all the features in the same scatter matrix plot but for a better visualization we will draw next matrix:","07d75599":"## Histograms for numerical features","28c89b8a":"Willdernes Area 4 identify cover type 4 and that categorical feature can be a good predictor. Many soil types appears in every cover type. ","287d9332":"- All data columns are type integer 64 and there are not any null values\n- Wilderness and Soil are categorical variables but they have been transformed to one-hot-encode variables\n\nNext step: extract the descriptive statistics for numerical features"}}