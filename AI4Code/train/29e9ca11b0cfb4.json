{"cell_type":{"c03863a2":"code","c7018c14":"code","d712bf01":"code","bd5c6ca4":"code","5f71fd90":"code","cc763d22":"code","aaed41ee":"code","79301bc2":"code","19d0d1ec":"code","cfa7b634":"code","321cbc06":"code","85114af5":"code","c0dd5c99":"code","c014c49c":"code","f910cb0c":"code","d342f050":"code","465708b8":"code","74c3433f":"code","dc6bce4e":"code","7156598d":"code","7bbadf8b":"code","bb77a75e":"code","40ea54d5":"code","3f1ebb99":"code","e54dadab":"code","0ec03cba":"code","c29f837e":"code","592ab7d9":"code","32a63a5b":"code","9bd62b8c":"markdown","3399b22f":"markdown","4b3eaf55":"markdown","138a639d":"markdown","0e766751":"markdown","0ddc77ad":"markdown","e116aca4":"markdown","5f603e9b":"markdown"},"source":{"c03863a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7018c14":"from matplotlib import pyplot as plt\nimport seaborn as sns\nimport datetime\n\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n\n%matplotlib inline","d712bf01":"data = \"\/kaggle\/input\/us-border-crossing-data\/Border_Crossing_Entry_Data.csv\"\ndf = pd.read_csv(data)\ndf.head()","bd5c6ca4":"#Drop all NaNs in the data\ndf.dropna(inplace=True)\ndf.head()","5f71fd90":"#converting Date to datetime instance\ndf['Date'] = pd.to_datetime(df['Date'])\nyears = df['Date'].dt.year.unique().tolist() #Extract years from the date\nyears.remove(2020) #Remove 2020 due to insufficient data\ndf.Date.dt.year.value_counts()","cc763d22":"df.head()","aaed41ee":"#Investigating Number of people crossing different borders by Measure of Crossing from 2010 to 2020\nAvg_Measure = df.groupby(\"Measure\")[\"Value\"].mean()\nAvg_Measure\n\nsns.set(rc={'figure.figsize':(12,10)})\n\nax = sns.barplot(y=Avg_Measure, x = Avg_Measure.axes[0]).set(title='Method of Crossing from 2010 to 2020', xlabel = 'Measure of Crossing', ylabel = 'Number of People Crossing Border')\n\nplt.xticks(rotation=45, ha='right', fontweight='light', fontsize='small');","79301bc2":"#Investigating Number of people crossing different borders by Border of Crossing from 2010 to 2020\nAvg_Value = df.groupby(\"Border\")[\"Value\"].mean()\nAvg_Value\n\nplt.figure(figsize=(8,6))\nax = sns.barplot(y=Avg_Value, x = Avg_Value.axes[0]).set(title='Method of Crossing from 2010 to 2020', xlabel = 'Measure of Crossing', ylabel = 'Number of People Crossing Border')\n\nplt.xticks(rotation=45, ha='right', fontweight='light', fontsize='small');","19d0d1ec":"sns.pairplot(df, hue=\"Border\");","cfa7b634":"Port_Pivot = df.pivot_table(index='Port Name', columns='Measure', values='Value')\nPort_Pivot.head()","321cbc06":"Port_Pivot.columns","85114af5":"Port_most = Port_Pivot[[\"Buses\", \"Personal Vehicles\"]]\nPort_most_6 = Port_most.nlargest(6, 'Personal Vehicles', keep='first')\nPort_most_6.plot(kind='pie', subplots=True)\nplt.gcf().set_size_inches(20,18)","c0dd5c99":"Port_Pivot['Total Transport'] = Port_Pivot['Bus Passengers'] + Port_Pivot['Train Passengers'] + Port_Pivot['Personal Vehicle Passengers']\nPort_most_tr = Port_Pivot[['Total Transport', \"Pedestrians\"]]","c014c49c":"Port_most_tr6 = Port_most_tr.nlargest(6, 'Pedestrians', keep='first')\nPort_most_tr6.plot(kind='pie', subplots=True)\nplt.gcf().set_size_inches(20,18)","f910cb0c":"Port_most_tr20 = Port_most_tr.nlargest(20, 'Pedestrians')\nax = sns.barplot(x=Port_most_tr20.axes[0], y=Port_most_tr20['Pedestrians']).set(title='Investigating Top 20 Cities by Pedestrian Crossing', xlabel = 'Cities', ylabel='Number of People Crossing (2010 - 2020)')\nplt.xticks(rotation=50, ha='right', fontweight='light', fontsize='small');","d342f050":"Port_most_tr20 = Port_most_tr.nlargest(20, 'Total Transport')\nax = sns.barplot(x=Port_most_tr20.axes[0], y=Port_most_tr20['Total Transport']).set(title='Investigating Top 20 Cities by Passengers Crossing by Buses, Personal Vehicles and Trains', xlabel = 'Cities', ylabel='Number of People Crossing (2010 - 2020)')\nplt.xticks(rotation=50, ha='right', fontweight='light', fontsize='small');","465708b8":"Port_stat = df.pivot_table(index='Port Name', values='Value', aggfunc=[np.sum, np.mean])\nPort_stat.head()","74c3433f":"Port_stat.columns","dc6bce4e":"#Port_stat.columns = Port_stat.columns.get_level_values(1)\nPort_stat.columns = [' '.join(col).strip() for col in Port_stat.columns.values]\nPort_stat.columns","7156598d":"Port_stat.head()","7bbadf8b":"Port_stat_ten = Port_stat.nlargest(5, 'sum Value')\nPort_stat_ten.plot(kind='pie', subplots=True)\nplt.gcf().set_size_inches(20,6)\nplt.legend(loc=\"upper left\");","bb77a75e":"Port_stat_20 = Port_stat.nlargest(20, 'sum Value', keep=\"last\")\nPort_stat_20.plot(kind='bar')\nplt.gcf().set_size_inches(20,8)\n\nplt.xticks(rotation=45, ha='right', fontweight='light', fontsize='small');\nplt.title(\"Top 20 Cities with highest total people crossing from 2010 to 2020\", fontsize=14)\nplt.ylabel(\"People Crossing Border\")\nplt.legend([\"Maximum Value\", \"Mean Value\"]);","40ea54d5":"ax = sns.barplot(x=Port_stat_20.axes[0], y=Port_stat_20['mean Value']).set(title='Investigating Top 20 Cities by average number of people crossing from 2010 to 2020', xlabel = 'Cities', ylabel='Average Number of People Crossing (2010 - 2020)')\nplt.xticks(rotation=50, ha='right', fontweight='light', fontsize='small');","3f1ebb99":"Avg_Year_Values = df.groupby(pd.DatetimeIndex(df['Date']).year)[\"Value\"].mean()\nAvg_Year_Values.head()","e54dadab":"x = Avg_Year_Values.axes[0].values.reshape(-1,1)\ny = Avg_Year_Values.values.reshape(-1,1)\nprint(x.shape)\nprint(y.shape)","0ec03cba":"Poly_reg=PolynomialFeatures(degree=4) \nx_poly=Poly_reg.fit_transform(x)\nLin_reg = LinearRegression()\nLin_reg.fit(x_poly,y)","c29f837e":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)","592ab7d9":"lin_reg = LinearRegression()\nlin_reg.fit(x, y)\n\nplt.figure(figsize=(14, 8))\nplt.scatter(x,y)\nplt.xlim(1995,2019)\nplt.xlabel(\"Years\",fontsize=14)\nplt.ylabel(\"People Crossing Border\",fontsize=14)\nplt.title(\"People Crossing Border by Years\",fontdict={'fontsize': 18, 'fontweight': 'medium'},color='m')\nplt.grid(color='k', linestyle='dotted', linewidth=0.5)\ny_pred=Lin_reg.predict(x_poly)\nplt.plot(x,y_pred,color=\"r\",label=\"Polynomial Regression Model\")\nplt.legend()\nplt.show()","32a63a5b":"# Predicting total number of immigration in n with Polymonial Regression\nn = int(input());\nPrediction = int(Lin_reg.predict(Poly_reg.fit_transform([[n]])));\nprint(\"The Predicted number of people that will cross the border in \", n, \"is\", Prediction)","9bd62b8c":"#### Investigate top six cities with trucks and trains entrance  ","3399b22f":"### Check different distributions of People Crossing at the borders and the means of their crossing","4b3eaf55":"### Regression","138a639d":"#### Investigating the cities with highest number of total people crossing since 2010 and the average value per port","0e766751":"#### Investigate top six cities with bus and personal vehicle entrance  ","0ddc77ad":"#### Top 20 cities with highest number of people crossing","e116aca4":"#### Investigating Top 20 Cities by Pedestrians Crossing","5f603e9b":"#### Investigating Top 20 Cities by Passengers Crossing by Buses, Personal Vehicles and Trains"}}