{"cell_type":{"00b82851":"code","838a7fa2":"code","c6eae963":"code","67d1201e":"code","3f629825":"code","4fa464fc":"code","a38bca86":"code","51cadc06":"code","91500911":"code","767f1958":"code","d88f2552":"code","054c70f9":"code","29b3b1d9":"code","8f76e953":"code","b07e3ada":"code","cb7fee16":"code","99930668":"code","e1609df4":"code","4cbf343e":"markdown","714ee198":"markdown"},"source":{"00b82851":"pip install openpyxl","838a7fa2":"# !pip install mlxtend\nimport pandas as pd\npd.set_option('display.max_columns', None)\n# pd.set_option('display.max_rows', None)\npd.set_option('display.width', 500)\n# \u00e7\u0131kt\u0131n\u0131n tek bir sat\u0131rda olmas\u0131n\u0131 sa\u011flar.\npd.set_option('display.expand_frame_repr', False)\nfrom mlxtend.frequent_patterns import apriori, association_rules","c6eae963":"df_ = pd.read_excel(\"\/kaggle\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")\ndf = df_.copy()","67d1201e":"df.head()","3f629825":"df.info()","4fa464fc":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\ndef retail_data_prep(dataframe):\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[dataframe[\"Quantity\"] > 0]\n    dataframe = dataframe[dataframe[\"Price\"] > 0]\n    replace_with_thresholds(dataframe, \"Quantity\")\n    replace_with_thresholds(dataframe, \"Price\")\n    return dataframe\n\ndf = retail_data_prep(df)","a38bca86":"df_germ = df[df['Country'] == \"Germany\"]\ndf_germ.head()","51cadc06":"df_germ.groupby(['Invoice', 'Description']).agg({\"Quantity\": \"sum\"}).head(20)","91500911":"df_germ.groupby(['Invoice', 'Description']).agg({\"Quantity\": \"sum\"}).unstack().iloc[0:5, 0:5]","767f1958":"df_germ.groupby(['Invoice', 'Description']).agg({\"Quantity\": \"sum\"}).unstack().fillna(0).iloc[0:5, 0:5]","d88f2552":"df_germ.groupby(['Invoice', 'Description']).agg({\"Quantity\": \"sum\"}).unstack().fillna(0).applymap(\n    lambda x: 1 if x > 0 else 0).iloc[0:5, 0:5]","054c70f9":"# df_germ.groupby(['Invoice', 'Description']). \\\n#    agg({\"Quantity\": \"sum\"}). \\\n#    unstack(). \\\n#    fillna(0). \\\n#   applymap(lambda x: 1 if x > 0 else 0).iloc[0:5, 0:5]","29b3b1d9":"def create_invoice_product_df(dataframe, id=False):\n    if id:\n        return dataframe.groupby(['Invoice', \"StockCode\"])['Quantity'].sum().unstack().fillna(0). \\\n            applymap(lambda x: 1 if x > 0 else 0)\n    else:\n        return dataframe.groupby(['Invoice', 'Description'])['Quantity'].sum().unstack().fillna(0). \\\n            applymap(lambda x: 1 if x > 0 else 0)","8f76e953":"germ_inv_pro_df = create_invoice_product_df(df_germ)\ngerm_inv_pro_df.head()","b07e3ada":"germ_inv_pro_df = create_invoice_product_df(df_germ, id=True)","cb7fee16":"def check_id(dataframe, stock_code):\n    product_name = dataframe[dataframe[\"StockCode\"] == stock_code][[\"Description\"]].values[0].tolist()\n    print(product_name)\n","99930668":"check_id(df_germ,21987)\ncheck_id(df_germ,23235)\ncheck_id(df_germ,22747)","e1609df4":"frequent_itemsets = apriori(germ_inv_pro_df, min_support=0.01, use_colnames=True)\nfrequent_itemsets.sort_values(\"support\", ascending=False).head(50)\n\nrules = association_rules(frequent_itemsets, metric=\"support\", min_threshold=0.01)\nrules.sort_values(\"support\", ascending=False).head()\n\nrules.sort_values(\"lift\", ascending=False).head(500)","4cbf343e":"![1.png](attachment:c9b4c0b3-c657-4845-984e-ab816b23a0ba.png)","714ee198":"Recommender systems provide personalized service support to users by learning their previous behaviors and predicting their current preferences for particular products. I hope the information will be useful to you. Thanks for taking the time to my notebook."}}