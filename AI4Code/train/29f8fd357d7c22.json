{"cell_type":{"a8d11bad":"code","bac17352":"code","cd1572f1":"code","f008868e":"code","bc1561f7":"code","94d025d8":"code","e894e36f":"code","d520d498":"code","0424fb5c":"code","147c746b":"code","a6611296":"code","baa4c6c1":"code","0179cd87":"code","097d2197":"code","a56cf3af":"code","4720c5aa":"code","c58ae18f":"code","76568b03":"markdown","1d85d32f":"markdown","9719095b":"markdown","4d836916":"markdown","13cfd325":"markdown","891b6ae3":"markdown","677d2e08":"markdown","45b1d078":"markdown","e35363cd":"markdown"},"source":{"a8d11bad":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Visualisation Libraries\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nfrom matplotlib import cm\nimport seaborn as sns\nimport warnings\nimport re\n\npd.plotting.register_matplotlib_converters()\n%matplotlib inline\nplt.style.use('seaborn-darkgrid')\npd.set_option('display.max_columns', 50)\nwarnings.filterwarnings(\"ignore\")\npd.options.display.float_format = '{:.0f}'.format","bac17352":"url = '..\/input\/coronavirus-source-data-covid19-daily-reports\/full_data.csv'\ndata = pd.read_csv(url, header='infer')","cd1572f1":"data.shape","f008868e":"#Checking for null\/ missing values\ndata.isnull().sum()","bc1561f7":"data = data.fillna(0)","94d025d8":"cols = set(data.columns)\ncol_numeric = set(['new_cases','new_deaths','total_cases','total_deaths'])\n\nfor x in col_numeric:\n    data[x] = data[x].astype('int')\n","e894e36f":"data.dtypes","d520d498":"data.head()","0424fb5c":"#Creating a function to visualize Location wise\n\ndef visualise(loc):\n    \n    loc_df = data[data['location'] == loc]   #creating a seperate dataframe\n    loc_df.index = pd.DatetimeIndex(loc_df['date'])  #converting the date column to index\n    loc_df.drop(['date'], axis=1, inplace=True)      # dropping the original date columns\n    \n    fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n    \n    ax.plot(loc_df['total_cases'].resample('D').sum()) \n    ax.plot(loc_df['total_deaths'].resample('D').sum(), color='red') \n    \n    ax.set_ylabel('Cases')\n    ax.set_title(f'{loc.capitalize()} - Total Cases vs Total Deaths', fontsize=16)\n    ax.legend(prop={'size':12},bbox_to_anchor=(1, 0, 0.15, 1),shadow=True)\n    ax.tick_params(labelsize=10, rotation=45)\n    \n    fig.tight_layout()\n    plt.show()\n","147c746b":"#visualising USA\nvisualise('United States')","a6611296":"#visualising Brazil\nvisualise('Brazil')","baa4c6c1":"#Visualising Nigeria\nvisualise('Nigeria')","0179cd87":"#China\nvisualise('China')","097d2197":"#Italy\nvisualise('Italy')","a56cf3af":"#Iran\nvisualise('Iran')","4720c5aa":"#Australia\nvisualise('Australia')","c58ae18f":"#India\nvisualise('India')","76568b03":"## Covid19 Daily World Report Analysis","1d85d32f":"### **Data Exploration**","9719095b":"### Loading Data","4d836916":"### Visualisation & Analysis","13cfd325":"### Location Wise Analysis - Total Cases vs Total Deaths","891b6ae3":"Converting all the numerical columns data type to INT","677d2e08":"**Visualising following countries (one each from every continent)**\n\n* United States\n* Brazil\n* Nigeria\n* China\n* Italy\n* Iran\n* Australia\n* India","45b1d078":"### Libraries","e35363cd":"As we can observe, there are lot of missing & null values. We shall fill these NULL values with 0"}}