{"cell_type":{"9bf38ac3":"code","f94f3cc8":"code","018ad6ed":"code","4e450c72":"code","96c07902":"code","bfe503db":"code","a04dec0f":"code","7019f23e":"markdown","cfa96ff7":"markdown","fbf6099e":"markdown","4bfb0f2d":"markdown","624c95d8":"markdown"},"source":{"9bf38ac3":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import GridSearchCV\nfrom IPython.display import display_html ","f94f3cc8":"#This notebook extends the code from the Intermediate Machine Learning course\n# Read the data\ndf = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv', index_col='Id')\ndf.dropna(axis=0, subset=['SalePrice'], inplace=True)\n\ncat_cols = [cname for cname in df.columns if df[cname].dtype == \"object\"]\nnum_cols = [cname for cname in df.columns if df[cname].dtype in ['int64', 'float64']]","018ad6ed":"df_cat = (df[cat_cols].describe()).T.sort_index()\ndf_num = (df[num_cols].describe()).T.sort_index()\n\ndf1_style = df_cat.style.set_table_attributes(\"style='display:inline'\").set_caption('Categorical Variables')\ndf2_style = df_num.style.set_table_attributes(\"style='display:inline'\").set_caption('Numerical Variables')\n\ndisplay_html(df1_style._repr_html_() + \"\\xa0\\xa0\\xa0\" + df2_style._repr_html_(), raw=True)","4e450c72":"na_df = pd.DataFrame(df.isnull().sum().sort_values(ascending=False),\n                    columns=[\"Count\"])\nna_df = na_df[na_df.Count > 0]\nna_df[\"Type\"] = [\"Categorical\" if x in cat_cols else \"Numerical\" for x in na_df.index]\nna_df","96c07902":"figure(figsize=(12, 8))\np = sns.barplot(x=\"Count\", y=na_df.index, data=na_df, hue = \"Type\", dodge=False);\np.legend(loc='lower right')\n\np.axvline(1460*0.75, 0, color='grey')\np.text(1060, 10,'75%', rotation = 90, fontsize=14, color='grey');\n\np.axvline(1460*0.5, 0, color='grey')\np.text(700, 10,'50%', rotation = 90, fontsize=14, color='grey');\n\np.axvline(1460*0.25, 0, color='grey')\np.text(335, 11.5,'25% missing', rotation = 90, fontsize=14, color='grey');","bfe503db":"boxplot_cols = [\"MSSubClass\", \"OverallQual\", \"OverallCond\", \"BsmtFullBath\", \"BsmtHalfBath\", \n                \"FullBath\", \"HalfBath\", \"BedroomAbvGr\", \"KitchenAbvGr\", \"TotRmsAbvGrd\", \n                \"Fireplaces\", \"GarageCars\", \"MoSold\"]\n\nfigure(figsize=(20, 35))\n\nfor i in range(0,35):\n    plt.subplot(9, 4, i+1)\n    if num_cols[i] in boxplot_cols:\n        p = sns.boxplot(x=num_cols[i], \n                        y=num_cols[36], \n                        data=df, \n                        color=\"lightgrey\")\n    else:\n        p = sns.scatterplot(x=num_cols[i], \n                            y=num_cols[36], \n                            data=df)\n    if i%4 != 0:\n        p.set(ylabel='')\n    ylabs = ['{:,.0f}'.format(x) + 'K' for x in p.get_yticks()\/1000]\n    p.set_yticklabels(ylabs)\n        ","a04dec0f":"figure(figsize=(20, 40))\n\nj = 0\nfor i in range(0,43):\n    if len(df[cat_cols[i]].unique()) < 15:\n        j += 1\n        plt.subplot(10, 4, j)\n        p = sns.boxplot(x=cat_cols[i], \n                        y=num_cols[36], \n                        data=df, \n                        color=\"lightgrey\")\n        if (j-1)%4 != 0:\n            p.set(ylabel='')\n        ylabs = ['{:,.0f}'.format(x) + 'K' for x in p.get_yticks()\/1000]\n        p.set_yticklabels(ylabs)","7019f23e":"# Summary Statistics","cfa96ff7":"A notebook building a pipeline for predicting `SalePrice` can be found here:\nhttps:\/\/www.kaggle.com\/db102291\/housing-prices-rf-pipeline-w-gridsearch","fbf6099e":"# Categorical Variables","4bfb0f2d":"# Numerical Variables","624c95d8":"# Null Values"}}