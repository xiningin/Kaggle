{"cell_type":{"f9e6eeb2":"code","1c278f54":"code","803d1484":"code","5b7b6659":"code","16f219a6":"code","52261b68":"code","fc56d5af":"code","569c46aa":"code","879423d0":"markdown","7b93f17d":"markdown"},"source":{"f9e6eeb2":"import numpy as np\nimport pandas as pd\nimport os\nfrom fastai.vision.all import *\nfrom fastai.callback.hook import *","1c278f54":"path = untar_data(URLs.PETS)\/'images'\nPath.BASE_PATH = path\npath.ls()","803d1484":"def file(x): return x\n\ndls = ImageDataLoaders.from_name_func(\n        path,get_image_files(path),valid_pct=0.2,seed=2021,\n        label_func=file,item_tfms=[Resize(224)])","5b7b6659":"dls.show_batch(max_n=16, figsize=(12,12))","16f219a6":"def conv(ni,nf,ks=3,act=True):\n    layers = [nn.Conv2d(ni, nf, stride=2, kernel_size=ks, padding=ks\/\/2)]\n    if act: layers.append(nn.ReLU())\n    layers.append(nn.BatchNorm2d(nf))\n    return nn.Sequential(*layers)","52261b68":"learn = cnn_learner(dls,resnet34,metrics=error_rate)\nlearn","fc56d5af":"learn.fine_tune(5)","569c46aa":"learn.recorder.plot_sched()","879423d0":"This notebook refferred to the following.<br\/>\nhttps:\/\/www.kaggle.com\/stanislaurybachkin\/mnist-fast-ai<br\/>\nhttps:\/\/github.com\/JChungYS\/fastai\/wiki\/Notes-on-FastAI2020","7b93f17d":"# PETS fastai"}}