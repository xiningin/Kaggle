{"cell_type":{"9a45f82a":"code","bd5bc1a4":"code","25d7a102":"code","987ebf93":"code","9919b41e":"code","5ef3dcc3":"code","a00f5cf8":"code","cfb2984a":"code","49399f0d":"code","08716ad2":"code","ae26279f":"code","5c8ef27e":"code","f2067c62":"code","36a0d5b7":"code","2b01347c":"code","3913986f":"code","a15b3de6":"code","194ebcd0":"code","82ca9e15":"code","eca99640":"code","5ecabc14":"code","4c494377":"code","abe1feee":"code","57ed209f":"code","4a5a0ab9":"code","e624763c":"code","8b452250":"code","677eeaa9":"code","4bbfe97f":"code","df6dde63":"code","257d12c9":"code","34909a52":"code","ff421e52":"code","7b0ece7b":"code","55e5da0d":"code","7b91c8bc":"code","5cd0185b":"code","9025a920":"code","5f42b550":"code","998d3657":"code","76019c3f":"code","9ac66dd7":"code","ba7942a5":"code","fcab1859":"code","a126a5d1":"code","056898ca":"code","9f3d202e":"code","269cc5f8":"code","075c5125":"code","7d9e2e40":"code","b2e26351":"code","d950239c":"code","d4038f03":"code","2c906bd2":"code","5ad628b0":"code","abb7cbe6":"code","5f4a907e":"code","075f6923":"code","347f5b6b":"code","192fd16d":"code","64b33e81":"code","38574986":"code","bb00fcdb":"code","0f07cd6b":"code","02e87bc2":"code","f0cb1f21":"code","de15935e":"code","ee9b0710":"code","24c062dc":"markdown","5b3ed584":"markdown","d1485110":"markdown","1e8c1766":"markdown","b0d8ddca":"markdown","62eac968":"markdown","50e0acb7":"markdown","f74adb4b":"markdown","97f4e092":"markdown","eac63ab1":"markdown","3712ab66":"markdown","58dfd3c6":"markdown","d14b2d75":"markdown","0ac067fe":"markdown"},"source":{"9a45f82a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","bd5bc1a4":"os.system(\"pip install openpyxl\")\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nimport itertools\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nwarnings.filterwarnings(\"ignore\", category=FutureWarning) \nwarnings.filterwarnings(\"ignore\", category=UserWarning) ","25d7a102":"#Veri seti k\u0131s\u0131rl\u0131k olan ve olmayan olarak ikiye ayr\u0131lm\u0131\u015f. \u0130kisini de ekleyelim. \nfile_path_with_infertility=\"\/kaggle\/input\/polycystic-ovary-syndrome-pcos\/PCOS_infertility.csv\"\nfile_path_without_infertility=\"\/kaggle\/input\/polycystic-ovary-syndrome-pcos\/PCOS_data_without_infertility.xlsx\"\n\nPCOS_inf = pd.read_csv(file_path_with_infertility)\nPCOS_woinf = pd.read_excel(file_path_without_infertility, sheet_name=\"Full_new\")","987ebf93":"#Dosya numaras\u0131na g\u00f6re iki dosyay\u0131 birle\u015ftirelim.\ndata = pd.merge(PCOS_woinf,PCOS_inf, on='Patient File No.', suffixes={'','_y'},how='left')\n\n#Birle\u015ftirmeden sonra tekrarlayan \u00f6zellikleri silelim\ndata =data.drop(['Unnamed: 44', 'Sl. No_y', 'PCOS (Y\/N)_y', '  I   beta-HCG(mIU\/mL)_y',\n       'II    beta-HCG(mIU\/mL)_y', 'AMH(ng\/mL)_y'], axis=1)\n\n#Datay\u0131 kontrol edelim\ndata.head()","9919b41e":"# Veri setindeki de\u011fi\u015fken ve g\u00f6zlem say\u0131s\u0131\nprint(\"G\u00f6zlem say\u0131s\u0131 : \" ,len(data))\nprint(\"De\u011fi\u015fken say\u0131s\u0131 : \", len(data.columns))","5ef3dcc3":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %32.7, 0 s\u0131n\u0131f\u0131n\u0131n ise %67.3\nf,ax=plt.subplots(1,2,figsize=(18,8))\ndata['PCOS (Y\/N)'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,cmap=\"Pastel2\")\nax[0].set_title('Da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')\nsns.countplot('PCOS (Y\/N)',data=data,ax=ax[1],palette=\"Pastel2\")\nax[1].set_title('PKOS (V\/Y) [1 == Var]')\nplt.show()","a00f5cf8":"#Veri tiplerini ve null de\u011fer olup olmad\u0131\u011f\u0131n\u0131 kontrol edelim.\ndata.info()","cfb2984a":"#Mariage Status ve Fast food verilerinde eksik veriler var gibi g\u00f6r\u00fcn\u00fcyor. Ayr\u0131ca, iki verinin veritipi farkl\u0131 g\u00f6r\u00fcn\u00fcyor ancak bize say\u0131sal de\u011fer gerekiyor.\n#Veri tipi object olarak g\u00f6r\u00fcnen verilere bakal\u0131m:\ndata[\"AMH(ng\/mL)\"].head() ","49399f0d":"data[\"II    beta-HCG(mIU\/mL)\"].head()","08716ad2":"#Veri tiplerini d\u00fczenleyelim.\ndata[\"AMH(ng\/mL)\"] = pd.to_numeric(data[\"AMH(ng\/mL)\"], errors='coerce')\ndata[\"II    beta-HCG(mIU\/mL)\"] = pd.to_numeric(data[\"II    beta-HCG(mIU\/mL)\"], errors='coerce')\n\n#\u015eimdi de eksik verileri elden ge\u00e7irelim.\n#ilgili \u00f6zelli\u011fin mode verisi ile doldurabiliriz eksikleri.\n\ndata['Marraige Status (Yrs)'].fillna(data['Marraige Status (Yrs)'].mode()[0],inplace=True)\ndata['II    beta-HCG(mIU\/mL)'].fillna(data['II    beta-HCG(mIU\/mL)'].mode()[0],inplace=True)\ndata['AMH(ng\/mL)'].fillna(data['AMH(ng\/mL)'].mode()[0],inplace=True)\ndata['Fast food (Y\/N)'].fillna(data['Fast food (Y\/N)'].mode()[0],inplace=True)\n\n#S\u00fctun isimlerini d\u00fczenleyelim.\n\nturkce_sutun_isimleri = ['S\u0131ra No', 'Dosya No', 'PKOS (V\/Y)','Ya\u015f', 'Kilo (Kg)', 'Boy (Cm)','VK\u0130', 'Kan Grubu', 'Kalp At\u0131\u015f\u0131(bpm)','Solunum H\u0131z\u0131(nefes\/dakika)','Hb(g\/dl)','D\u00f6ng\u00fc(D\u00fczenli\/D\u00fczensiz)','D\u00f6ng\u00fc Uzunlu\u011fu(g\u00fcn)','Evlilik Durumu(y\u0131l)','Hamilelik(V\/Y)','K\u00fcrtaj Say\u0131s\u0131', 'I beta-HCG(mIU\/mL)', 'II beta-HCG(mIU\/mL)','FSH(mIU\/mL)','LH(mIU\/mL)','FSH\/LH','Kal\u00e7a(inch)','Bel(inch)','Kal\u00e7a:Bel Oran\u0131','TSH (mIU\/L)','AMH(ng\/mL)'\n                        ,'PRL(ng\/mL)','Vit D3 (ng\/mL)','PRG(ng\/mL)','RBS(mg\/dl)','Kilo Al\u0131m\u0131(V\/Y)','Hirsutizm(V\/Y)','Cilt Koyula\u015fmas\u0131(V\/Y)','Sa\u00e7 D\u00f6k\u00fclmesi(V\/Y)','Sivilce(V\/Y)','Fast Food(V\/Y)','D\u00fczenli Egzersiz(V\/Y)','BP _Systolic(mmHg)','BP _Diastolic(mmHg)','Folik\u00fcl Say\u0131s\u0131(Sol)','Folik\u00fcl Say\u0131s\u0131(Sa\u011f)','Ort. Folik\u00fcl Boyutu(sol)(mm)','Ort. Folik\u00fcl Boyutu(sa\u011f)(mm)','Endometrium(mm)']\ndata.columns = turkce_sutun_isimleri","ae26279f":"data.info()","5c8ef27e":"data.describe()","f2067c62":"#Genel ili\u015fkisine bakal\u0131m\ncorrmat = data.corr()\nplt.subplots(figsize=(18,18))\nsns.heatmap(corrmat,cmap=\"Pastel1\", square=True);","36a0d5b7":"#PKOS durumuna g\u00f6re en ilgilileri s\u0131ralayal\u0131m\ncorrmat[\"PKOS (V\/Y)\"].sort_values(ascending=False)","2b01347c":"#En anlaml\u0131 sonu\u00e7 \u00e7\u0131karan \u00f6zelliklere bir bakal\u0131m\n\nplt.figure(figsize=(12,12))\nk = 10 #\u0131s\u0131 haritas\u0131 i\u00e7in pozitif olan de\u011fi\u015fken say\u0131s\u0131\nl = 3 #\u0131s\u0131 haritas\u0131 i\u00e7in negatif olan de\u011fi\u015fken say\u0131s\u0131\ncols_p = corrmat.nlargest(k, \"PKOS (V\/Y)\")[\"PKOS (V\/Y)\"].index \ncols_n = corrmat.nsmallest(l, \"PKOS (V\/Y)\")[\"PKOS (V\/Y)\"].index\ncols = cols_p.append(cols_n) \n\ncm = np.corrcoef(data[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True,cmap=\"Pastel2\", annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","3913986f":"#Normal ve PKOSlular aras\u0131nda d\u00f6ng\u00fc uzunlu\u011funu&ya\u015f\u0131 kar\u015f\u0131la\u015ft\u0131ral\u0131m. \ncolor = [\"teal\", \"orange\"]\nfig=sns.lmplot(data=data,x=\"Ya\u015f\",y=\"D\u00f6ng\u00fc Uzunlu\u011fu(g\u00fcn)\", hue=\"PKOS (V\/Y)\",palette=color)\nplt.show(fig)","a15b3de6":"#Normal ve PKOSlular aras\u0131nda y\u0131llar i\u00e7inde kilo al\u0131m\u0131n\u0131(V\u00fccut kitle indeksini) kar\u015f\u0131la\u015ft\u0131ral\u0131m\nfig= sns.lmplot(data =data,x=\"Ya\u015f\",y=\"VK\u0130\", hue=\"PKOS (V\/Y)\", palette= color )\nplt.show(fig)","194ebcd0":"#Normal ve PKOSlular aras\u0131nda d\u00f6ng\u00fc&ya\u015f\u0131 kar\u015f\u0131la\u015ft\u0131ral\u0131m. \nsns.lmplot(data =data,x=\"Ya\u015f\",y=\"D\u00f6ng\u00fc(D\u00fczenli\/D\u00fczensiz)\", hue=\"PKOS (V\/Y)\",palette=color)\nplt.show()","82ca9e15":"#Normal ve PKOSlular aras\u0131nda hamilelik ili\u015fkisini kar\u015f\u0131la\u015ft\u0131ral\u0131m. \nsns.lmplot(data =data,x=\"PKOS (V\/Y)\",y=\"Hamilelik(V\/Y)\",palette=color)\nplt.show()","eca99640":"#\u015eimdi de her iki yumurtal\u0131kta folik\u00fcl da\u011f\u0131l\u0131m\u0131na bakal\u0131m\nsns.lmplot(data =data,x='Folik\u00fcl Say\u0131s\u0131(Sa\u011f)',y='Folik\u00fcl Say\u0131s\u0131(Sol)', hue=\"PKOS (V\/Y)\",palette=color)\nplt.show()","5ecabc14":"features = [\"Folik\u00fcl Say\u0131s\u0131(Sol)\",\"Folik\u00fcl Say\u0131s\u0131(Sa\u011f)\"]\nfor i in features:\n    sns.swarmplot(x=data[\"PKOS (V\/Y)\"], y=data[i], color=\"black\", alpha=0.5 )\n    sns.boxenplot(x=data[\"PKOS (V\/Y)\"], y=data[i], palette=color)\n    plt.show()","4c494377":"features = [\"Ya\u015f\",\"Kilo (Kg)\", \"VK\u0130\", \"Hb(g\/dl)\", \"D\u00f6ng\u00fc Uzunlu\u011fu(g\u00fcn)\",\"Endometrium(mm)\" ]\nfor i in features:\n    sns.swarmplot(x=data[\"PKOS (V\/Y)\"], y=data[i], color=\"black\", alpha=0.5 )\n    sns.boxenplot(x=data[\"PKOS (V\/Y)\"], y=data[i], palette=color)\n    plt.show()","abe1feee":"#\u00d6zellikler->(X) hedef -> (y)\n\nX=data.drop([\"PKOS (V\/Y)\",\"S\u0131ra No\",\"Dosya No\"],axis = 1) #\u00f6zelliklerdeki index s\u00fctununu atal\u0131m\ny=data[\"PKOS (V\/Y)\"]","57ed209f":"#Test ve \u00f6\u011frenme verilerini ay\u0131ral\u0131m\n\nX_train,X_test, y_train, y_test = train_test_split(X,y, test_size=0.3)\n#Random Forest Classifier\n\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)\n\n#Tahmin yapal\u0131m ve test verileri ile kar\u015f\u0131la\u015ft\u0131ral\u0131m\n\npred_rfc_3 = rfc.predict(X_test)\naccuracy_3 = accuracy_score(y_test, pred_rfc_3)\nprint(accuracy_3)","4a5a0ab9":"from sklearn.model_selection import cross_validate\nrf = RandomForestClassifier(n_estimators=150)\ncv = cross_validate(rf, X, y, cv=10)\nprint(cv['test_score'])\nprint(cv['test_score'].mean())","e624763c":"from sklearn.metrics import make_scorer, accuracy_score, precision_score, recall_score, f1_score,roc_auc_score\nscoring = {'accuracy' : make_scorer(accuracy_score), \n           'precision' : make_scorer(precision_score),\n           'recall' : make_scorer(recall_score), \n           'f1_score' : make_scorer(f1_score),\n           \"auc\": make_scorer(roc_auc_score)}","8b452250":"scores = cross_validate(estimator=rf, X=X, y=y, cv=10, scoring=scoring)","677eeaa9":"scores","4bbfe97f":"pd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\nsd=pd.DataFrame.from_dict(scores)\nprint(sd)","df6dde63":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import roc_curve, roc_auc_score, classification_report, accuracy_score, confusion_matrix","257d12c9":"scaler = StandardScaler()\nlr = LogisticRegression()\nmodel1 = Pipeline([('standardize', scaler),\n                    ('log_reg', lr)])","34909a52":"model1.fit(X_train, y_train)","ff421e52":"y_train_hat = model1.predict(X_train)\ny_train_hat_probs = model1.predict_proba(X_train)[:,1]\n\ntrain_accuracy = accuracy_score(y_train, y_train_hat)*100\ntrain_auc_roc = roc_auc_score(y_train, y_train_hat_probs)*100\n\nprint('Confusion matrix:\\n', confusion_matrix(y_train, y_train_hat))\n\nprint('Training AUC: %.4f %%' % train_auc_roc)\n\nprint('Training accuracy: %.4f %%' % train_accuracy)","7b0ece7b":"y_test_hat = model1.predict(X_test)\ny_test_hat_probs = model1.predict_proba(X_test)[:,1]\n\ntest_accuracy = accuracy_score(y_test, y_test_hat)*100\ntest_auc_roc = roc_auc_score(y_test, y_test_hat_probs)*100\n\nprint('Confusion matrix:\\n', confusion_matrix(y_test, y_test_hat))\n\nprint('Testing AUC: %.4f %%' % test_auc_roc)\n\nprint('Testing accuracy: %.4f %%' % test_accuracy) ","55e5da0d":"print(classification_report(y_test, y_test_hat, digits=6))","7b91c8bc":"cm=confusion_matrix(y_test, y_test_hat)\nplt.figure(dpi=150)\nsns.heatmap(cm,annot=True, fmt=\".3g\", cmap=\"Pastel2\")","5cd0185b":"# Auc Roc Curve\ndef generate_auc_roc_curve(clf, X_test):\n    y_pred_proba = clf.predict_proba(X_test)[:, 1]\n    fpr, tpr, thresholds = roc_curve(y_test,  y_pred_proba)\n    auc = roc_auc_score(y_test, y_pred_proba)\n    plt.plot(fpr,tpr)\n    plt.show()\n    pass\n\ngenerate_auc_roc_curve(model1, X_test)","9025a920":"y_pred_proba = model1.predict_proba(X_test)[:, 1]\nauc = roc_auc_score(y_test, y_pred_proba)\nprint(\"AUC ROC Curve with Area Under the curve = %.3f\"%auc)","5f42b550":"y_train.value_counts()","998d3657":"# RandomOver Sampling uygulanmas\u0131 (E\u011fitim setine uygulan\u0131yor)\nfrom imblearn.over_sampling import RandomOverSampler\noversample = RandomOverSampler(sampling_strategy='minority')\nX_randomover, y_randomover = oversample.fit_resample(X_train, y_train)","76019c3f":"# random oversampling den sonra e\u011fitim setinin s\u0131n\u0131f say\u0131s\u0131\ny_randomover.value_counts()","9ac66dd7":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %32.7, 0 s\u0131n\u0131f\u0131n\u0131n ise %67.3\nf,ax=plt.subplots(1,2,figsize=(18,8))\ny_randomover.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,cmap=\"Pastel2\")\nax[0].set_title('Da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')","ba7942a5":"# modelin e\u011fitilmesi ve ba\u015far\u0131 oran\u0131\nmodel1.fit(X_randomover, y_randomover)\ny_pred = model1.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: %.3f%%\" % (accuracy))","fcab1859":"cm=confusion_matrix(y_test, y_pred=y_pred)\nplt.figure(dpi=150)\nsns.heatmap(cm,annot=True, fmt=\".3g\", cmap=\"Pastel2\")","a126a5d1":"#s\u0131n\u0131fland\u0131rma raporu\nprint(classification_report(y_test, y_pred))","056898ca":"# Auc Roc Curve\ndef generate_auc_roc_curve(clf, X_test):\n    y_pred_proba = clf.predict_proba(X_test)[:, 1]\n    fpr, tpr, thresholds = roc_curve(y_test,  y_pred_proba)\n    auc = roc_auc_score(y_test, y_pred_proba)\n    plt.plot(fpr,tpr)\n    plt.show()\n    pass\n\ngenerate_auc_roc_curve(model1, X_test)","9f3d202e":"y_pred_proba = model1.predict_proba(X_test)[:, 1]\nauc = roc_auc_score(y_test, y_pred_proba)\nprint(\"AUC ROC Curve with Area Under the curve = %.3f\"%auc)","269cc5f8":"# smote dan \u00f6nce e\u011fitim setindeki s\u0131n\u0131f say\u0131s\u0131\ny_train.value_counts()","075c5125":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %32.7, 0 s\u0131n\u0131f\u0131n\u0131n ise %67.3\nf,ax=plt.subplots(1,2,figsize=(18,8))\ny_train.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,cmap=\"Pastel2\")\nax[0].set_title('Da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')","7d9e2e40":"# Smote uygulanmas\u0131 (E\u011fitim setine uygulan\u0131yor)\nfrom imblearn.over_sampling import SMOTE\noversample = SMOTE()\nX_smote, y_smote = oversample.fit_resample(X_train, y_train)","b2e26351":"# smote dan sonra e\u011fitim setinin s\u0131n\u0131f say\u0131s\u0131\ny_smote.value_counts()","d950239c":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %32.7, 0 s\u0131n\u0131f\u0131n\u0131n ise %67.3\nf,ax=plt.subplots(1,2,figsize=(18,8))\ny_smote.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,cmap=\"Pastel2\")\nax[0].set_title('Da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')","d4038f03":"# modelin e\u011fitilmesi ve ba\u015far\u0131 oran\u0131\nmodel1.fit(X_smote, y_smote)\ny_pred = model1.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: %.3f%%\" % (accuracy))","2c906bd2":"cm=confusion_matrix(y_test, y_pred=y_pred)\nplt.figure(dpi=150)\nsns.heatmap(cm,annot=True, fmt=\".3g\", cmap=\"Pastel2\")","5ad628b0":"#s\u0131n\u0131fland\u0131rma raporu\nprint(classification_report(y_test, y_pred))","abb7cbe6":"# Auc Roc Curve\ndef generate_auc_roc_curve(clf, X_test):\n    y_pred_proba = clf.predict_proba(X_test)[:, 1]\n    fpr, tpr, thresholds = roc_curve(y_test,  y_pred_proba)\n    auc = roc_auc_score(y_test, y_pred_proba)\n    plt.plot(fpr,tpr)\n    plt.show()\n    pass\n\ngenerate_auc_roc_curve(model1, X_test)","5f4a907e":"y_pred_proba = model1.predict_proba(X_test)[:, 1]\nauc = roc_auc_score(y_test, y_pred_proba)\nprint(\"AUC ROC Curve with Area Under the curve = %.3f\"%auc)","075f6923":"# random undersampling den \u00f6nce e\u011fitim setindeki s\u0131n\u0131f say\u0131s\u0131\ny_train.value_counts()","347f5b6b":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %32.7, 0 s\u0131n\u0131f\u0131n\u0131n ise %67.3\nf,ax=plt.subplots(1,2,figsize=(18,8))\ny_train.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,cmap=\"Pastel2\")\nax[0].set_title('Da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')","192fd16d":"from imblearn.under_sampling import RandomUnderSampler\n# transform the dataset\nranUnSample = RandomUnderSampler()\nX_ranUnSample, y_ranUnSample = ranUnSample.fit_resample(X_train, y_train)","64b33e81":"# Random undersampling sonra\ny_ranUnSample.value_counts()","38574986":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %32.7, 0 s\u0131n\u0131f\u0131n\u0131n ise %67.3\nf,ax=plt.subplots(1,2,figsize=(18,8))\ny_ranUnSample.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,cmap=\"Pastel2\")\nax[0].set_title('Da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')","bb00fcdb":"# modelin e\u011fitilmesi ve ba\u015far\u0131 oran\u0131\nmodel1.fit(X_ranUnSample, y_ranUnSample)\ny_pred = model1.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: %.3f%%\" % (accuracy))","0f07cd6b":"cm=confusion_matrix(y_test, y_pred=y_pred)\nplt.figure(dpi=150)\nsns.heatmap(cm,annot=True, fmt=\".3g\", cmap=\"Pastel2\")","02e87bc2":"#s\u0131n\u0131fland\u0131rma raporu\nprint(classification_report(y_test, y_pred))","f0cb1f21":"# Auc Roc Curve\ndef generate_auc_roc_curve(clf, X_test):\n    y_pred_proba = clf.predict_proba(X_test)[:, 1]\n    fpr, tpr, thresholds = roc_curve(y_test,  y_pred_proba)\n    auc = roc_auc_score(y_test, y_pred_proba)\n    plt.plot(fpr,tpr)\n    plt.show()\n    pass\n\ngenerate_auc_roc_curve(model1, X_test)","de15935e":"y_pred_proba = model1.predict_proba(X_test)[:, 1]\nauc = roc_auc_score(y_test, y_pred_proba)\nprint(\"AUC ROC Curve with Area Under the curve = %.3f\"%auc)","ee9b0710":"#Building a dictionalry with list of optional values that will me analyesed by GridSearch CV\n#\n#parameters = { \n#    'n_estimators': [100,150, 200,500,700],\n#    'max_features': ['auto', 'sqrt', 'log2'],\n#    'max_depth' : [4,5,6,7,8,9,10,12],\n#    'criterion' :['gini', 'entropy'],\n#    'n_jobs':[-1,1,None]\n#}\n\n#Fitting the trainingset to find parameters with best accuracy\n\n#CV_rfc = GridSearchCV(estimator=rfc, param_grid=parameters, cv= 7)\n#CV_rfc.fit(X_train, y_train)\n\n#Getting the outcome of gridsearch\n\n#CV_rfc.best_params_","24c062dc":"V\u00fccut kitle indeksi (VK\u0130) normal vakalar i\u00e7in tutarl\u0131l\u0131k g\u00f6steriyor. PKOS i\u00e7in ise VK\u0130 ya\u015fla birlikte artar.","5b3ed584":"Sol yumurtal\u0131ktaki ortalama folik\u00fcl boyutu ve sa\u011f yumurtal\u0131ktaki folik\u00fcl say\u0131s\u0131 ve PKOS durumuyla olduk\u00e7a y\u00fcksek bir ili\u015fki g\u00f6zlenmekte. Ayr\u0131ca g\u00f6rmekteyiz ki; sa\u00e7 d\u00f6k\u00fclmesi, cilt koyula\u015fmas\u0131, k\u0131llanma ve d\u00fczensiz adet g\u00f6rme de PKOS tan\u0131s\u0131 koymada olduk\u00e7a \u00f6nemli parametrelerdir. D\u00fczenli egzersiz yapmama, fast food al\u0131m\u0131 ve bunlara ba\u011fl\u0131 olarak kilo ve v\u00fccut kitle indeksinin artmas\u0131 da PKOS ile y\u00fcksek ili\u015fkidedir. Negatif ili\u015fkilere bakarak d\u00f6ng\u00fc uzunlu\u011funun fazla olmas\u0131 ve ya\u015f ile evlilik s\u00fcresinin uzamas\u0131 ise PKOS durumu ile ters orant\u0131l\u0131 oldu\u011funu s\u00f6yleyebiliriz. ","d1485110":"Not : ROC e\u011frisinin (AUC) alt\u0131ndaki alan, genel s\u0131n\u0131fland\u0131rma performans\u0131n\u0131 de\u011ferlendirir. AUC, bir s\u0131n\u0131fa di\u011ferine daha fazla \u00f6nem vermedi\u011finden, az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131 iyi yans\u0131tmamaktad\u0131r.\n\nDengesizli\u011fi gidermek i\u00e7in \u00e7e\u015fitli y\u00f6ntemleri veri setine uygulayal\u0131m.\n\nNOT: Y\u00f6ntemler e\u011fitim setine uygulanmal\u0131d\u0131r. Test setine uygulan\u0131rsa do\u011fru de\u011ferlendirme yap\u0131lamaz.","1e8c1766":"# SMOTE OverSampling","b0d8ddca":"Mensuration'da D\u00fczensizlik Kal\u0131plar\u0131 Bu \u00f6zelli\u011fin ve de\u011ferlerinin neyi g\u00f6sterdi\u011fi konusunda netlik yok ancak, G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re \"D\u00f6ng\u00fc (R\/I)\" \u00f6zelli\u011finde: 4 d\u00fczensiz adet d\u00f6ng\u00fcs\u00fcn\u00fc g\u00f6sterir 2 d\u00fczenli bir adet d\u00f6ng\u00fcs\u00fcn\u00fc g\u00f6sterir","62eac968":"Adet d\u00f6nemi uzunlu\u011fu normal vakalarda genel olarak sabit. PCOS durumlar\u0131nda ya\u015f artt\u0131k\u00e7a d\u00f6ng\u00fc s\u00fcresi uzunlu\u011fu da art\u0131\u015f g\u00f6steriyor. ","50e0acb7":"Baz\u0131 veriler say\u0131sal olmas\u0131na ra\u011fmen string kaydedilmi\u015f. Bu y\u00fczden AMH ve II beta-HCG datatype object olarak geliyor. \u00d6ncelikle bunlar\u0131 elden ge\u00e7irmeliyiz.\nSonra da eksik verileri silelim. Fast\/Food ve Mariage Status'de eksik veriler vard\u0131.","f74adb4b":"Adet d\u00f6ng\u00fcs\u00fc, ya\u015fla birlikte normal vakalarda daha d\u00fczenli hale gelir. Oysa PCOS i\u00e7in d\u00fczensizlik ya\u015fla birlikte artar.","97f4e092":"# Re-Sampling","eac63ab1":"Her iki yumurtal\u0131ktaki folik\u00fcl da\u011f\u0131l\u0131m\u0131 Sol ve Sa\u011f PCOS'lu kad\u0131nlarda \"Normal\" hasta ile kar\u015f\u0131la\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda e\u015fit de\u011fildir. hadi bunu boxen plot ile inceleyelim.","3712ab66":"# Undersampling","58dfd3c6":"precisionlarda d\u00fc\u015f\u00fc\u015f, recall de\u011ferlerinde y\u00fckseli\u015f var. Yani; modelin 1 s\u0131n\u0131f\u0131n\u0131 tahmin etme oran\u0131 artt\u0131.\u0130lk modele g\u00f6re 0 s\u0131n\u0131f\u0131n\u0131n tahmin edilme ba\u015far\u0131s\u0131 d\u00fc\u015fm\u00fc\u015f durumda ama 1 s\u0131n\u0131f\u0131n\u0131n do\u011fru tahmin edilmesindeki y\u00fckselme randomoversampling yap\u0131ld\u0131ktan sonra olu\u015fturulmu\u015f modeli tercih etmemizde b\u00fcy\u00fck bir etken.","d14b2d75":"precision 0 s\u0131n\u0131f\u0131 i\u00e7in yap\u0131lan tahminlerden ka\u00e7\u0131n\u0131n do\u011fru oldu\u011funu verir. Confusion matrixine bak\u0131ld\u0131\u011f\u0131nda; 143+11 = 154 tanesine 0 dedi. Bunun 143 tanesi do\u011fru. Yani; 143\/154=0,92 diyebiliriz. \n1 s\u0131n\u0131f\u0131 i\u00e7in yap\u0131lan tahminlere bak\u0131nca; 52+11=63 tanesine 1 dedi. Bunun 52 tanesi do\u011fru. Yani; 52\/63=0,82 diyebiliriz.\n\nRecall 0 s\u0131n\u0131f\u0131 i\u00e7in tahmin etmemiz gereken s\u0131n\u0131flardan ne kadar\u0131n\u0131 do\u011fru tahmin edebildi\u011fimizi g\u00f6sterir. 143+11=154 tanesi 0 iken bunlar\u0131n 143 tanesine 0 dedi. 0 i\u00e7in recall de\u011feri: 143\/154=0,92 dir.\n1 s\u0131n\u0131f\u0131 i\u00e7in tahmin etmemiz gereken 63 de\u011fer vard\u0131. Bunlar\u0131n 52 tanesini do\u011fru bildi. Yani; 52\/63=0,82 dir.\n\n1 s\u0131n\u0131f\u0131n\u0131n tahmin edilme ba\u015far\u0131s\u0131zl\u0131\u011f\u0131 daha y\u00fcksek. ","0ac067fe":"\nPCOS'lu kad\u0131nlarda folik\u00fcl say\u0131s\u0131 beklendi\u011fi gibi daha fazlad\u0131r. Ve ayn\u0131 zamanda iki taraf i\u00e7in e\u015fit de\u011filler."}}