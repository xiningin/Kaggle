{"cell_type":{"d3a3665c":"code","15887828":"code","71bba9fd":"code","cc075eca":"code","c836ff46":"code","60ab136b":"code","2e964410":"code","75f12bb1":"code","c7cf9594":"code","0d34fa00":"code","e661582c":"code","4e8b4cfd":"code","9151d6b5":"code","15244ca8":"code","a13c31e7":"code","b2077f2e":"code","72a5fa4d":"code","43707f91":"code","ff60e080":"code","a0c294cb":"code","ca630e5d":"code","b6907d6c":"code","b62e800e":"code","425c8f00":"code","cb791a69":"code","11169832":"code","edca8db6":"code","65c4fb63":"code","9c272804":"code","6ea2ba19":"code","0790d71f":"code","33fd0a54":"code","803346f7":"code","f6983682":"code","c14cc10c":"code","99947f4a":"code","56429d3e":"code","80c94734":"code","f73f2bc3":"code","97ff3d6f":"code","6f38cadd":"code","b23bf234":"code","0502eb00":"code","553fcac4":"code","22ef2a5d":"code","bc218a74":"code","6975b96c":"code","af77fa4b":"code","08603a36":"code","dd5fab7a":"code","29e7341d":"code","d0b9fd40":"code","a88cdaf7":"code","644b328e":"code","99c9969d":"code","bdc61a6a":"code","922b03b3":"code","1144cf22":"code","32229ee2":"code","f8f5907b":"code","03ad1f16":"code","5b336b69":"code","0fc846b4":"code","4ad68aca":"code","ea4753d4":"code","91d63ade":"code","532e2b32":"code","59d87428":"code","a44e56be":"code","900e34c5":"markdown","f915415e":"markdown","5dfb7596":"markdown","fdce0f39":"markdown","e164be1e":"markdown","854a1032":"markdown","e542b004":"markdown","d9f7a94e":"markdown","154a7595":"markdown","01470a99":"markdown","076cea7b":"markdown","064c21b1":"markdown","04fb8cc8":"markdown","bcb1da59":"markdown","a224c033":"markdown","3368753d":"markdown","ff67e07b":"markdown","7e70ffa3":"markdown","1e8ec620":"markdown","8e36d6c1":"markdown","c43815e4":"markdown","f728ffb6":"markdown","f2c6c233":"markdown","d3f108b4":"markdown","6ce68442":"markdown","d047193c":"markdown","76eb900c":"markdown","6d01b48e":"markdown"},"source":{"d3a3665c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn import linear_model, decomposition\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import make_pipeline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","15887828":"train_data = pd.read_csv(\"\/kaggle\/input\/cap-4611-2021-fall-assignment-02\/train.csv\")","71bba9fd":"train_data.info()","cc075eca":"train_data.head()","c836ff46":"train_data.esrb_rating.unique()","60ab136b":"train_data = train_data.replace(dict.fromkeys(['E'], 1))\ntrain_data = train_data.replace(dict.fromkeys(['ET'], 2))\ntrain_data = train_data.replace(dict.fromkeys(['T'], 3))\ntrain_data = train_data.replace(dict.fromkeys(['M'], 4))","2e964410":"train_data = train_data.drop(axis=1, columns=['title', 'console'])","75f12bb1":"train_data.head()","c7cf9594":"train_data.info()","0d34fa00":"train_data.describe()","e661582c":"missing = train_data.isnull().sum()\nmissing = missing[missing > 0]\nmissing.sort_values(inplace = True)\nprint(missing)","4e8b4cfd":"features = ['id', 'alcohol_reference', 'animated_blood', 'blood',\n            'blood_and_gore', 'cartoon_violence', 'crude_humor',\n            'drug_reference', 'fantasy_violence', 'intense_violence', 'language',\n            'lyrics', 'mature_humor', 'mild_blood', 'mild_cartoon_violence',\n            'mild_fantasy_violence', 'mild_language', 'mild_lyrics', 'mild_suggestive_themes', 'mild_violence',\n            'no_descriptors', 'nudity', 'partial_nudity', 'sexual_content', 'sexual_themes',\n            'simulated_gambling', 'strong_janguage', 'strong_sexual_content',\n            'suggestive_themes', 'use_of_alcohol', 'use_of_drugs_and_alcohol', 'violence']\ntarget = ['esrb_rating']","9151d6b5":"X = pd.get_dummies(train_data[features])\ny = pd.get_dummies(train_data[target])","15244ca8":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = .60)","a13c31e7":"logreg = LogisticRegression()","b2077f2e":"log_scaler = StandardScaler()","72a5fa4d":"log_scaler.fit(X_train)","43707f91":"X_scale_tr = log_scaler.transform(X_train)\nX_scale_ts = log_scaler.transform(X_test)","ff60e080":"parameters = {\n    'C': (0.1, 1, 10, 100),\n    'penalty': ('l2', 'none')\n}","a0c294cb":"log_grid = GridSearchCV(LogisticRegression(), parameters)","ca630e5d":"#GridSearchCV(cv=None, error_score='raise',\n#       estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n#          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n#          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,\n#          verbose=0, warm_start=False),\n#       iid=True, n_jobs=1,\n#       param_grid={'C': (0.1, 1, 10), 'penalty': ('l2', 'none')},\n#       pre_dispatch='2*n_jobs', refit=True, return_train_score='warn',\n#       scoring=None, verbose=0)","b6907d6c":"log_grid.fit(X_scale_tr, y_train)\nlog_grid","b62e800e":"log_grid.score(X_scale_ts, y_test)","425c8f00":"log_grid.cv_results_","cb791a69":"from sklearn.svm import SVC","11169832":"SVC_parameters = { 'C':[1,10,20,30], 'kernel':['linear','rbf']}\nSVC_parameters","edca8db6":"SVC_grid = GridSearchCV(SVC(),SVC_parameters, refit=True, verbose=2)\nSVC_grid","65c4fb63":"SVC_grid.fit(X_train,y_train)\nSVC_grid","9c272804":"SVC_grid.score(X_test, y_test)","6ea2ba19":"SVC_grid.cv_results_","0790d71f":"from sklearn.tree import DecisionTreeClassifier","33fd0a54":"dec_model = DecisionTreeClassifier()","803346f7":"criterion = ['gini', 'entropy']\nmax_depth = [1, 3, 5, None]\nsplitter = ['best', 'random']","f6983682":"dec_grid = GridSearchCV(estimator=dec_model, cv=3, param_grid=dict(criterion=criterion, max_depth=max_depth, splitter=splitter))","c14cc10c":"dec_grid.fit(X_train, y_train)","99947f4a":"dec_grid.predict(X_test)","56429d3e":"print(dec_grid.best_score_)","80c94734":"print(dec_grid.best_params_)","f73f2bc3":"dec_grid.cv_results_","97ff3d6f":"from sklearn.ensemble import RandomForestRegressor","6f38cadd":"forest_model = RandomForestRegressor()","b23bf234":"forest_parameters = {'n_estimators':[40,60,20], 'max_features':[1, 3, 1],\n                     'max_depth':[3,5,7,9], 'max_samples':[3, 5, 8]}","0502eb00":"forest_grid = GridSearchCV(RandomForestRegressor(),forest_parameters)\nforest_grid","553fcac4":"forest_grid.fit(X_train, y_train)","22ef2a5d":"forest_grid.score(X_test, y_test)","bc218a74":"forest_grid.cv_results_","6975b96c":"from sklearn.neighbors import KNeighborsClassifier","af77fa4b":"k_model = KNeighborsClassifier()","08603a36":"k_parameters = {'n_neighbors':[3,5,7], 'weights':['uniform','distance'], 'algorithm':['auto', 'ball_tree', 'kd_tree', 'brute'], \n               'leaf_size':[15,30,45], 'p':[1,2,3]}","dd5fab7a":"k_grid = GridSearchCV(KNeighborsClassifier(), k_parameters)\nk_grid","29e7341d":"k_grid.fit(X_train, y_train)","d0b9fd40":"k_grid.score(X_test, y_test)","a88cdaf7":"k_grid.cv_results_","644b328e":"sub_data = pd.read_csv('\/kaggle\/input\/cap-4611-2021-fall-assignment-02\/eval.csv')","99c9969d":"X_train.columns.to_list()","bdc61a6a":"sub_data.columns.to_list()","922b03b3":"sub_data = sub_data.drop(axis=1, columns=['console'])","1144cf22":"#alpha_pred = dec_grid.predict(sub_data)","32229ee2":"#sub_scale = log_scaler.transform(sub_data)","f8f5907b":"#alpha_pred = log_grid.predict(sub_scale)","03ad1f16":"alpha_pred = SVC_grid.predict(sub_data)","5b336b69":"alpha_pred","0fc846b4":"alpha_out = alpha_pred.astype(str)","4ad68aca":"\n\nfor i in range(len(alpha_out)):\n    if alpha_out[i] == '1':\n        alpha_out[i] = 'E'\n    elif alpha_out[i] == '2':\n        alpha_out[i] = 'ET'\n    elif alpha_out[i] == '3':\n        alpha_out[i] = 'T'\n    elif alpha_out[i] == '4':\n        alpha_out[i] = 'M'","ea4753d4":"alpha_out","91d63ade":"output = pd.DataFrame({'id': sub_data.id, 'esrb_rating':alpha_out})","532e2b32":"output.to_csv('submission.csv', index=False)","59d87428":"output","a44e56be":"print(output.to_string())","900e34c5":"# Check for missing data","f915415e":"# Train and run a Logistic Regression model","5dfb7596":"# Joseph Stewart","fdce0f39":"print target vector","e164be1e":"# train_test_split the data","854a1032":"# Build and train a Random Forest model","e542b004":"# Build and train a Support Vector Machine","d9f7a94e":"Run prediction","154a7595":"Kaggle stopped letting me use notebook submission and isn't updating \"best score.\nScore submitted using download and upload of SVC w\/ grid search of sub_data.\nLeaderboard score shows 0.86286","01470a99":"Distribution of validation scores","076cea7b":"# Score = 0.86286","064c21b1":"Distribution of validation scores","04fb8cc8":"Looking at the unique values for esrb_rating","bcb1da59":"# Build and train a K Nearest Neighbors model","a224c033":"Distribution of validation","3368753d":"After viewing the data in excel, there weren't any duplicate columns, but we can drop redundant columns: id, title, console\n","ff67e07b":"SVC model","7e70ffa3":"# Build and train Decision Tree Model","1e8ec620":"Transform columns for Logistic Regression use","8e36d6c1":"# Convert alpha data to numeric data","c43815e4":"Logistic regression model","f728ffb6":"# Submit best model","f2c6c233":"There isn't any missing data. No rows needed to be dropped.","d3f108b4":"# Drop redundant columns","6ce68442":"# No visible outliers, binary data","d047193c":"Distribution of validation scores","76eb900c":"Train the model","6d01b48e":"Distribution of validation scores"}}