{"cell_type":{"5731d2bf":"code","d4e6c1dd":"code","56dc923b":"code","e69736bf":"code","30a7f9e5":"code","88219027":"code","c9c91c58":"code","e67c55a3":"code","e32a6a35":"code","8fed41f2":"code","4cc4b0f1":"code","b7c90d0c":"code","a04803c6":"code","ec55decc":"code","750e1e02":"code","5f6f1e0e":"code","8eb5b0c6":"markdown","f95e3d4e":"markdown","dc849f7e":"markdown","a40a110a":"markdown"},"source":{"5731d2bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nfrom wordcloud import WordCloud, STOPWORDS \nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d4e6c1dd":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","56dc923b":"df=pd.read_csv('..\/input\/HRDataset_v9.csv')\n\ndf.head(5)","e69736bf":"df.rename(columns=({'Days Employed':'Days_Employed'}),inplace=True)\n\ndef GetYears(Days_Employed):\n    if ( Days_Employed >= 0 and Days_Employed <= 365  ):\n        return \"1 Year\"\n    if ( Days_Employed >= 365 and Days_Employed <= 730 ):\n        return \"2 Year\"\n    if ( Days_Employed >= 730 and Days_Employed <= 1095 ):\n        return \"3 Year\"\n    if ( Days_Employed >= 1095 and Days_Employed <= 1460 ):\n        return \"4 Year\"\n    if ( Days_Employed >= 1460 and Days_Employed <= 1825 ):\n        return \"5 Year\"\n    else: \n        return 'More than 5 Year'\n\ndf['Years_With_Company'] = df.apply(lambda x : GetYears(x['Days_Employed']), axis=1)\n\ndf.Years_With_Company.value_counts()\n\ndf.head()","30a7f9e5":"plt.figure(figsize=(15,8))\nsns.stripplot(x='Age',y='Days_Employed',hue='Years_With_Company',data=df)\nplt.xlabel('Age')\nplt.ylabel('Years_With_Company')\nplt.title('Age vs Years_With_Company')\nplt.show()","88219027":"# to see if there are no Nulls in the dataset\ndf.isnull().sum()","c9c91c58":"# to check the type of dataset and to make sure that it makes sense\ndf.dtypes","e67c55a3":"#I have Groupby the Position to analyze the number of employees in the each respective Position\ncount=df.groupby(df[\"Position\"]).count()\ncount = pd.DataFrame(count.to_records())\n#count = count.sort_values(by= 'left', ascending = False)\ncount = count['Position']\ncount","e32a6a35":"plt.figure(figsize=(15,10))\nsns.countplot(y='Position', data=df,order=count )","8fed41f2":"#A large number of People meets the Annual Performance Expectation\nplt.figure(figsize=(15,5))\nsns.countplot(x=\"Performance Score\",data=df)\nplt.xticks(rotation=45)","4cc4b0f1":"#It seems that Pay rate is equal between  genders and it appears to be no discrimnation \nsns.catplot(x=\"GenderID\",y=\"Pay Rate\",hue=\"Sex\",data=df ,legend_out =True)\nplt.legend(loc=0)\nplt.figure(figsize=(25,20))\n\n","b7c90d0c":"dfcorr=df[['GenderID','Age','Pay Rate']]\ncorr=dfcorr.corr()\nplt.figure(figsize=(5,5))\nsns.heatmap(corr,vmax=0.6,annot=True)\nplt.xticks(rotation=45)\nplt.yticks(rotation=90)","a04803c6":"#Count the frquency of gender \nax=sns.barplot(x=df['Sex'].value_counts().index,y=df['Sex'].value_counts().values,palette=\"Blues_d\",hue=['Female','Male'])\nplt.legend(loc=8)\nplt.xlabel('Gender')\nplt.ylabel('Frequency')\nplt.title('Show of Employees by Gender')\nplt.xticks(rotation=45)\nplt.show()\n","ec55decc":"#This graph shows the Pay rate per Gender and Race\nplt.figure(figsize=(20,10))\nax = sns.violinplot(x=\"Sex\", y=\"Pay Rate\",data=df,hue=\"RaceDesc\")\n\n\nplt.legend(loc=8)\nplt.xlabel('Gender')\nplt.ylabel('Pay Rate')\nplt.title('Show of PayRate by Race')\nplt.xticks(rotation=45)\nplt.show()","750e1e02":"plt.figure(figsize=(5,10))\nsns.stripplot(data=df, x=\"Pay Rate\",y=\"Position\",hue=\"Sex\",jitter=True,dodge=True,palette=\"Set2\",)\nplt.legend(loc=0)\nplt.xlabel('Pay Rate')\nplt.ylabel('Position')\nplt.title('Pay Rate per Position')\nplt.yticks(rotation=45)\nplt.show()\n","5f6f1e0e":"from wordcloud import WordCloud, STOPWORDS\nall_locations = ','.join(df['Employee Name'].values)\n\nwordcloud = WordCloud(width=1500, height=800).generate(all_locations)\n\nplt.figure(figsize=(20, 8))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","8eb5b0c6":"Correlation in Python\nCorrelation values range between -1 and 1.\n\nThere are two key components of a correlation value:\n\nmagnitude \u2013 The larger the magnitude (closer to 1 or -1), the stronger the correlation\nsign \u2013 If negative, there is an inverse correlation. If positive, there is a regular correlation.","f95e3d4e":"A visual prespective of Pay rate per Position in the Organization","dc849f7e":"I have created one more column **\"Years_With_Company\"** from **\"Days Employed\" **to find out the number of years , Employee has been working in the Company ","a40a110a":"To see the Gender inclination in the Organization"}}