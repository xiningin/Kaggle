{"cell_type":{"4618e005":"code","6fca2474":"code","87b3e9ea":"code","9fe761a9":"code","e874a51e":"code","084e8dd5":"code","e09a7097":"code","6af8855a":"code","7829b1d4":"code","56c1779b":"code","6c07839c":"code","cda6964b":"code","00d839d2":"code","33ddca10":"code","43a2f157":"markdown","36fd30f9":"markdown","32062727":"markdown","fac5555e":"markdown","fc7983e4":"markdown","aa0bb011":"markdown","4c6767dc":"markdown","27a8706d":"markdown","db382385":"markdown","b2b9e5dd":"markdown","dab77626":"markdown"},"source":{"4618e005":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #for visualizations\n\ndata = pd.read_csv(\"..\/input\/column_2C_weka.csv\")","6fca2474":"data.info()","87b3e9ea":"data.head()","9fe761a9":"data.tail()","e874a51e":"data.describe()","084e8dd5":"data.rename(columns={\n    'class': 'symptom_class'\n}, inplace=True)","e09a7097":"abnormal = data[data.symptom_class == \"Abnormal\"]\nnormal = data[data.symptom_class == \"Normal\"]\nplt.scatter(abnormal.lumbar_lordosis_angle, abnormal.degree_spondylolisthesis, color = \"red\",label = \"Abnormal\")\nplt.scatter(normal.lumbar_lordosis_angle, normal.degree_spondylolisthesis, color = \"green\",label = \"Normal\")\nplt.legend()\nplt.xlabel(\"Lumbar Lordosis\")\nplt.ylabel(\"Degree Spondylolisthesis\")\nplt.show()","6af8855a":"data.symptom_class = [1 if each == \"Abnormal\" else 0 for each in data.symptom_class]","7829b1d4":"y = data.symptom_class.values\nx_ = data.drop([\"symptom_class\"],axis=1)","56c1779b":"x = (x_ - np.min(x_))\/(np.max(x_)-np.min(x_)).values","6c07839c":"#Split data into Train and Test \nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2,random_state =42)","cda6964b":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3) #set K neighbor as 3\nknn.fit(x_train,y_train)\npredicted_y = knn.predict(x_test)\nprint(\"KNN accuracy according to K=3 is :\",knn.score(x_test,y_test))","00d839d2":"score_array = []\nfor each in range(1,25):\n    knn_loop = KNeighborsClassifier(n_neighbors = each) #set K neighbor as 3\n    knn_loop.fit(x_train,y_train)\n    score_array.append(knn_loop.score(x_test,y_test))\n    \nplt.plot(range(1,25),score_array)\nplt.xlabel(\"Range\")\nplt.ylabel(\"Score\")\nplt.show()","33ddca10":"knn_final = KNeighborsClassifier(n_neighbors = 15) #set K neighbor as 15\nknn_final.fit(x_train,y_train)\npredicted_y = knn_final.predict(x_test)\nprint(\"KNN accuracy according to K=15 is :\",knn_final.score(x_test,y_test))","43a2f157":"We have 6 numerical and 1 object typed columns. All columns are full of data, no missing or null values exist. \nsypmtom_class column has two values as Abnormal and Normal. This is the column that we want to use for classification. But we need this column as integer so I want to change its names as 0 and 1. ","36fd30f9":"I changed name of class column because it gives an error, I guess kernel confuses it with the real class.","32062727":"In order to calculate the accuracy of our algorithm, we need to split it into train and test data. We will use train data to train our algorithm, and then apply it to our test data to measure the accuracy. I prefer to split the data as %80 train and %20 test, so I give 0.2 to the test_size parameter.","fac5555e":"Now it is time to create KNN model, train our data and test it.","fc7983e4":"We assume K = 3 for first iteration, but actually we don't know what is the optimal K value that gives maximum accuracy. So we can write a for loop that iterates for example 25 times and gives the accuracy at each iteartion. So that we can find the optimal K value.","aa0bb011":"# **KNN Algorithm for Biomechanical Features of Orthopedic Patients**\nKNN means \"K Nearest Neighbour\" and the algorithm is used to classify points according to class of their K nearist neighbour point.\nThe algorithm selects K closest points according to Euclidean Distance formula and assigns class name according to its neighbours class names. \nAssume we assign K as 5. Algorithm finds 5 nearest neighbours according to Euclidean Distance. If class name of one of them is A and the class name of rest of four is B, then the class name of our point is classified as B.\n\nLet's start with importing libraries and loading our data set.","4c6767dc":"As you can see above, if we use K = 15, then we get maximum score of %80.","27a8706d":"Explore the data set.","db382385":"Before applying the algorithm, I want to normalize x values. Normalization means scaling all values between 0 and 1. This is important not to ignore small values.","b2b9e5dd":"Split our data set as x and y values. y would be syptom_class column because this column is the column that we want to use for classification. Rest of the columns would be our x.","dab77626":"Split our data set into Abnormal and Normal and visiualize it to see the distribution."}}