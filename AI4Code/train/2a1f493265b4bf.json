{"cell_type":{"3d19d915":"code","5e9f24f2":"code","d8264db1":"code","182512bf":"code","ed36697f":"code","4d39b9b0":"code","1aa0cf8c":"code","1c33359f":"code","41904636":"code","e6a7aa91":"code","61c8071f":"code","f53b887b":"code","752fda13":"code","f3324023":"code","c8eb9b38":"code","95629540":"code","3d0506ca":"code","70c77d4b":"code","9275c06f":"markdown","ce7035c4":"markdown","2f708532":"markdown","b68e2714":"markdown"},"source":{"3d19d915":"import pandas as pd","5e9f24f2":"df = pd.read_csv('..\/input\/oranges-vs-grapefruit\/citrus.csv')","d8264db1":"df.info()","182512bf":"df.head()","ed36697f":"df.tail()","4d39b9b0":"df.name[df.name == 'orange'] =0\ndf.name[df.name =='grapefruit'] =1","1aa0cf8c":"dataset= df.values","1c33359f":"dataset","41904636":"X = dataset[:,1:6]","e6a7aa91":"y = dataset[:,0]","61c8071f":"#normalization\n\nfrom sklearn import preprocessing\n\nmin_max_scaler = preprocessing.MinMaxScaler()\nX_scale = min_max_scaler.fit_transform(X)\nX_scale","f53b887b":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X_scale, y, test_size=0.3)","752fda13":"import numpy as np\n\nY_train = Y_train.astype(np.float32)\nY_test = Y_test.astype(np.float32)","f3324023":"from keras.models import Sequential\nfrom keras.layers import Dense\n","c8eb9b38":"model = Sequential ([\n                    Dense(32, activation = 'relu', input_shape=(5,)),\n                    Dense(32, activation = 'relu'),\n                    Dense(1, activation = 'sigmoid'),\n])","95629540":"model.compile(\n                optimizer ='sgd',\n                loss ='binary_crossentropy',\n                metrics=['accuracy']\n)","3d0506ca":"model.fit(X_train, Y_train, epochs=100)","70c77d4b":"#Yang pertama adalah nilai loss, dan yang kedua adalah nilai akurasinya.\nmodel.evaluate(X_test, Y_test)","9275c06f":"Sampai pada tahap ini model kita belum dapat memproses dataset ini karena dataset kita masih dalam bentuk dataframe. Betul, dataset harus dalam bentuk array agar dapat diproses oleh model. Nah untungnya kita dapat melakukan ini dengan mudah menggunakan atribut values dari dataframe. **Values mengembalikan numpy array yang dikonversi dari dataframe.**","ce7035c4":"Karena tadi kita mengubah nilai-nilai pada kolom name menjadi bilangan numerik, yang artinya kita mengubah label menjadi tipe data boolean, maka kita perlu mengubah tipe data tersebut menjadi float32 dengan cara berikut.","2f708532":"memisahkan kembali data kita menjadi **data latih dan data uji** untuk mengevaluasi kinerja model kita. Fungsi train_test_split dapat membantu kita untuk melakukan hal ini dengan mudah. Pada latihan ini kita akan menggunakan 30% dari seluruh data sebagai data uji.","b68e2714":"kita mulai membangun model jst kita. Impor library di bawah dan lanjutkan ke tahap berikutnya."}}