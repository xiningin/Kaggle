{"cell_type":{"be76736e":"code","8683c145":"code","6a6a5818":"code","fe1453bc":"code","20d3d7f1":"code","aa2bfc57":"code","3914f0d9":"code","9d17a718":"code","35d63ebd":"code","de741acd":"code","b2c960b2":"code","a5b241ff":"code","c21c8365":"code","9691b3eb":"code","d8a761f8":"code","b5f14284":"code","e9f34a7b":"code","4787cd97":"code","6ebd0aa6":"code","61d91c6c":"code","9a8bf1c7":"markdown","e050b9fd":"markdown","962bf446":"markdown","7bce5a08":"markdown","31f44d80":"markdown","596aae0e":"markdown","57e21a61":"markdown"},"source":{"be76736e":"import keras\nimport numpy as np\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nfrom kerastuner import RandomSearch\nfrom kerastuner.engine.hyperparameters import HyperParameters","8683c145":"fashion_mnist = keras.datasets.fashion_mnist","6a6a5818":"(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()","fe1453bc":"plt.figure(figsize=(10,10))\nfor i in range(20):\n    plt.subplot(4,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.imshow(X_train[i], cmap = plt.cm.binary)\nplt.show()","20d3d7f1":"X_train.shape, X_test.shape","aa2bfc57":"classes = {0 : \"T-shirt\/top\", 1 : \"Trouser\", 2 : \"Pullover\", 3 : \"Dress\", 4 : \"Coat\",\n           5 : \"Sandal\",      6 : \"Shirt\",   7 : \"Sneaker\",  8 : \"Bag\",   9 : \"Ankle Boot\"}","3914f0d9":"X_train = X_train \/ 255.0\nX_test  = X_test  \/ 255.0","9d17a718":"X_train = X_train.reshape(X_train.shape[0], 28, 28, 1)\nX_test = X_test.reshape(X_test.shape[0], 28, 28, 1)\nX_train.shape, X_test.shape","35d63ebd":"def build_model(params):\n  model = keras.Sequential([\n                            keras.layers.Conv2D(filters = params.Int('conv_1_filter', min_value = 32, max_value = 128, step = 16),\n                                                kernel_size = params.Choice('conv_1_kernel', values = [3,5]),\n                                                activation = 'relu',\n                                                input_shape = (28,28,1)\n                                               ),\n                            keras.layers.Conv2D(filters = params.Int('conv_2_filter', min_value = 32, max_value = 64, step = 16),\n                                                kernel_size = params.Choice('conv_2_kernel', values = [3,5]),\n                                                activation = 'relu'\n                                                ),\n                            keras.layers.Flatten(),\n                            keras.layers.Dense(units = params.Int('dense_1_units', min_value = 32, max_value = 64, step = 16),\n                                               activation = 'relu'\n                                              ),\n                            keras.layers.Dense(10, activation='softmax')\n                          ])\n  \n  model.compile(optimizer=keras.optimizers.Adam(params.Choice('learning_rate', values = [1e-2, 1e-3])),\n                loss = 'sparse_categorical_crossentropy',\n                metrics = ['accuracy']\n               )\n\n  return model  ","de741acd":"tuner = RandomSearch(build_model, \n                     objective='val_accuracy',\n                     max_trials = 5,\n                     directory = 'output',\n                     project_name = 'Fashion Mnist')","b2c960b2":"tuner.search_space_summary()","a5b241ff":"tuner.search(X_train, y_train, epochs=3, validation_split=0.1)","c21c8365":"model = tuner.get_best_models(num_models=1)[0]","9691b3eb":"model.summary()","d8a761f8":"model.fit(X_train, y_train, epochs=10, initial_epoch=3, validation_data=(X_test, y_test), validation_split=0.1)","b5f14284":"preds = model.predict(X_test)","e9f34a7b":"X_test = X_test.reshape(X_test.shape[0], 28, 28)\nX_test.shape","4787cd97":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,7,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.imshow(X_test[i], cmap = plt.cm.binary)\n    plt.xlabel(classes[y_test[i]])\n    plt.title(classes[np.argmax(preds[i])])\nplt.show()","6ebd0aa6":"def plot_image(prediction, img):\n    plt.xticks([])\n    plt.yticks([])\n    plt.imshow(img, cmap=plt.cm.binary)\n    predicted_label = classes[np.argmax(prediction)]\n    plt.xlabel(\"Predicted:{} \".format(predicted_label,\n               \n               ),\n                color=\"red\")","61d91c6c":"def plot_value_array(prediction):\n    plt.xticks(range(10))\n    plt.yticks([])\n    thisplot = plt.bar(range(10), prediction)\n    plt.ylim([0,1])\n    predicted_label = np.argmax(prediction)\n    thisplot[predicted_label].set_color('salmon')\n\nplt.figure(figsize=(8,12))\nfor i in range(5):\n    plt.subplot(5, 2, 2*i+1)\n    #plt.xticks([])\n    #plt.yticks([])\n    plot_image(preds[i], X_test[i])\n    #plt.imshow( X_test[i], cmap = plt.cm.binary)\n    plt.subplot(5, 2, 2*i+2)\n    plot_value_array(preds[i])\nplt.show()  ","9a8bf1c7":"## Create a dictionary for each type of unique label","e050b9fd":"## Load Dataset from keras\n","962bf446":"# **HyperParameter Tunning for Fashion MNIST With Keras\/Tensorflow**","7bce5a08":"## Reshape input data\n- as our model entertain only 3D data","31f44d80":"## Normalize Data","596aae0e":"## Packages","57e21a61":"## HyperParameter Tunning\n- We'll use keras tunner for the same."}}