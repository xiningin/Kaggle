{"cell_type":{"728b38ca":"code","dfc9a563":"code","279a1c11":"code","8cdd5673":"code","f3b80081":"code","c76a89da":"code","be898ed5":"code","b752b4a6":"code","04d7ca3a":"code","aaa70d3f":"code","4a98ba66":"code","d66a316b":"code","c52f59ff":"code","b5857f80":"code","fcfac17a":"code","c66c0d80":"code","519ebfcd":"code","83b8588c":"markdown","ce42e5ac":"markdown","dd35c4de":"markdown","188758fe":"markdown","d59ae5b3":"markdown","e3445a0d":"markdown","6f0d2633":"markdown","688f40a6":"markdown","ac267445":"markdown","b0f01647":"markdown","bc3ffab1":"markdown","d17ab5dc":"markdown","f5ced3a4":"markdown","4c872b84":"markdown","5e8690eb":"markdown","a7201fdd":"markdown","5d318bf0":"markdown","59a02de0":"markdown"},"source":{"728b38ca":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport os\nfrom itertools import chain\nfrom collections import Counter\nsns.set_style(\"white\")\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\n\nfrom keras.preprocessing.image import load_img\nfrom matplotlib import pyplot as plt\n%matplotlib inline","dfc9a563":"os.listdir('..\/input\/')","279a1c11":"df = pd.read_csv('..\/input\/train.csv')\ndef count_target(target_val):\n    return len(target_val.split(' '))\n\ndf['nclass'] = df.Target.map(count_target)\ndf.head()","8cdd5673":"def plot_img(img_id):\n    filt_no = 0\n    plt.figure(figsize=(30,60))\n    plt.tight_layout()\n    for filt in img_filt:\n        img_path = train_img_path + img_id + filt\n        img = np.array(load_img(img_path))\n        plt.subplot(1,4,filt_no+1)\n        plt.imshow(img)\n        if i==0: plt.title(filt[1:-4]+' filter')\n        plt.axis('off')\n        filt_no += 1        ","f3b80081":"label_count = []\nfor i in range(df.nclass.min(),df.nclass.max()+1):\n    label_count.append(np.sum(df.nclass==i))\n    print('No. of images with',i,'label:',label_count[-1])","c76a89da":"x = np.arange(len(label_count))+1\nplt.bar(x,label_count)\nplt.title('Label Count Distribution in Train Set')","be898ed5":"os.listdir('..\/input\/train\/')[:10]","b752b4a6":"img_filt = ['_green.png','_blue.png','_red.png','_yellow.png']\ntrain_img_path = '..\/input\/train\/'\nids = df[df.nclass==5].reset_index()\ni = 0; nimg = 2\nwhile True:\n    if i == nimg: break\n    img_id =  ids.Id[i]   \n    plot_img(img_id)\n    i += 1","04d7ca3a":"ids = df[df.nclass==4].reset_index()\ni = 0; nimg = 5\nwhile True:\n    if i == nimg: break\n    img_id =  ids.Id[i]   \n    plot_img(img_id)\n    i += 1","aaa70d3f":"ids = df[df.nclass==3].reset_index()\ni = 0; nimg = 5\nwhile True:\n    if i == nimg: break\n    img_id =  ids.Id[i]   \n    plot_img(img_id)\n    i += 1","4a98ba66":"ids = df[df.nclass==2].reset_index()\ni = 0; nimg = 5\nwhile True:\n    if i == nimg: break\n    img_id =  ids.Id[i]   \n    plot_img(img_id)\n    i += 1","d66a316b":"ids = df[df.nclass==1].reset_index()\ni = 0; nimg = 5\nwhile True:\n    if i == nimg: break\n    img_id =  ids.Id[i]   \n    plot_img(img_id)\n    i += 1","c52f59ff":"def mk_list(val):\n    return [int(label) for label in val.split(' ')]\ndf['target_list'] = df['Target'].map(mk_list)\nall_labels = list(chain.from_iterable(df['target_list'].values))\nlabel_count = Counter(all_labels)\narr = np.zeros((28,))\nfor key,value in label_count.items():\n    arr[key] = value","b5857f80":"map_class_labels = {0:  'Nucleoplasm',\n1:  'Nuclear membrane',\n2:  'Nucleoli',\n3:  'Nucleoli fibrillar center',\n4:  'Nuclear speckles',\n5:  'Nuclear bodies',\n6: 'Endoplasmic reticulum',\n7:  'Golgi apparatus',\n8:  'Peroxisomes',\n9:  'Endosomes',\n10:  'Lysosomes',\n11:  'Intermediate filaments',\n12:  'Actin filaments',\n13:  'Focal adhesion sites',\n14: 'Microtubules',\n15: 'Microtubule ends',\n16: 'Cytokinetic bridge',\n17: 'Mitotic spindle',\n18: 'Microtubule organizing center',\n19: 'Centrosome',\n20: 'Lipid droplets',\n21: 'Plasma membrane',\n22: 'Cell junctions',\n23: 'Mitochondria',\n24: 'Aggresome',\n25: 'Cytosol',\n26: 'Cytoplasmic bodies',\n27: 'Rods and rings'}","fcfac17a":"plt.figure(figsize=(30,5))\nax = sns.barplot(x=np.arange(28),y=arr)\nax.set_xticklabels(list(map_class_labels.values()), fontsize=15, rotation=40, ha=\"right\")\nax.set(xlabel='Classes', ylabel='Class Counts')\nplt.show()","c66c0d80":"ids = []\nnucleoplasm_class = [0]\nfor i,val in enumerate(df.target_list.values):\n    if nucleoplasm_class==val:\n        ids.append(i)\ni = 0; nimg = 3\nwhile True:\n    if i == nimg: break\n    img_id =  df.Id[ids[i]]\n    plot_img(img_id)\n    i += 1","519ebfcd":"ids = []\ncytosol_class = [25]\nfor i,val in enumerate(df.target_list.values):\n    if cytosol_class==val:\n        ids.append(i)\ni = 0; nimg = 3\nwhile True:\n    if i == nimg: break\n    img_id =  df.Id[ids[i]]\n    plot_img(img_id)\n    i += 1","83b8588c":"# Lets see the contents of train folder.\nAs expected it contains files in the format of** file_id + filter_name + .png**","ce42e5ac":"# It seems that most of the images contain only 1 class ! There are very images with 4 or more classes.","dd35c4de":"# Loading Libraries","188758fe":"There are only 2 such files !","d59ae5b3":"# Visualizing the Nucleoplasm class images","e3445a0d":"# Visualizing files with 3 targets","6f0d2633":"# Visualizing files with 4 targets","688f40a6":"From the figure it is clear that Nucleoplasm is the most common class followed by Cytosol.\n\nNucleoplasm  - the substance of a cell nucleus, especially that not forming part of a nucleolus.\n\nCytosol - the aqueous component of the cytoplasm of a cell, within which various organelles and particles are suspended.","ac267445":"# Visualizing files with 2 targets","b0f01647":"# The input directory contains the following files:\n1. train - This folder contains the training images of size 512x512 in PNG format.\n1. test -  This folder contains the test images of size 512x512 in PNG format.\n1. train.csv - This CSV file contains all the filenames and labels for the training set.\n1. sample_submission.csv - This file contains a sample submission file with two columns Id and Predicted. The predicted column contains all the predicted test classes..","bc3ffab1":"# Label Count Distribribution","d17ab5dc":"# Mapping the labels\nThere are in total 28 different labels present in the dataset. \n\nThe labels are represented as integers that map to the following","f5ced3a4":"# Function for plotting the images","4c872b84":"I will keep updating this notebook as i explore further.\n\nPS - Mitochondria is the power house of the cell :-)","5e8690eb":"# Visualizing the Cytosol class images","a7201fdd":"# Visualizing files with 1 target","5d318bf0":"# Visualizing files with 5 targets","59a02de0":"Let's load the train.csv file.\nIt contains two columns:\n1.     Id - the base filename of the sample. All ids consist of four files - blue, green, red, and yellow.\n1.     Target - in the training data, this represents the labels assigned to each sample.\n"}}