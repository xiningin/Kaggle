{"cell_type":{"ad48409d":"code","ec11f5de":"code","8ff9196f":"code","fb373a51":"code","32c92f45":"code","b7adc59b":"code","97c6e712":"code","baa1d6d8":"code","4135d0a5":"code","147342ba":"code","a33422b8":"code","5d2fcb08":"code","6c9315ec":"code","99afe1e0":"code","0536083f":"code","651903cf":"code","382698da":"code","b176a261":"code","c9e2c119":"code","171cb573":"markdown","1329fb38":"markdown"},"source":{"ad48409d":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nfrom fbprophet import Prophet\nimport statsmodels.api as sm\nfrom scipy import stats\nfrom plotly import tools\nimport chart_studio.plotly as py\nimport plotly.figure_factory as ff\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.style.use(\"seaborn-whitegrid\")","ec11f5de":"df = pd.read_csv('\/kaggle\/input\/lt-finance-holdings-ltd-stock-price-2017-to-2020\/LT_Finance_Holdings_Ltd_Stock_Price_2017_to_2020.csv',parse_dates=['Date'])","8ff9196f":"df.head()","fb373a51":"# Brief Description of our dataset\ndf.describe()","32c92f45":"Lt_df = df.copy()\n# Change to datetime datatype.\n","b7adc59b":"f, (ax1, ax2) = plt.subplots(1, 2, figsize=(14,5))\nax1.plot(Lt_df[\"Date\"], Lt_df[\"Close Price\"])\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Stock Price\")\nax1.set_title(\" L&T Close Price History\")\n\n# Second Subplot\n\nplt.figure(1)\nax1.plot(Lt_df[\"Date\"], Lt_df[\"High Price\"], color=\"green\")\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Stock Price\")\nax1.set_title(\" L&T High Price History\")\n\n# Third Subplot\nax1.plot(Lt_df[\"Date\"], Lt_df[\"Low Price\"], color=\"red\")\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Stock Price\")\nax1.set_title(\" L&T Low Price History\")\n\n\n# Fourth Subplot\nax2.plot(Lt_df[\"Date\"], Lt_df[\"WAP\"], color=\"orange\")\nax2.set_xlabel(\"Date\", fontsize=12)\nax2.set_ylabel(\"Stock Price\")\nax2.set_title(\"Amazon's Volume History\")\nplt.show()","97c6e712":"m = Prophet()\n\n# Drop the columns\nph_df = Lt_df.drop(['Open Price', 'High Price', 'Low Price','WAP'], axis=1)\nph_df.rename(columns={'Close Price': 'y', 'Date': 'ds'}, inplace=True)\n\nph_df.head()","baa1d6d8":"m = Prophet()\n\nm.fit(ph_df)","4135d0a5":"future_prices = m.make_future_dataframe(periods=365)\n\n# Predict Prices\nforecast = m.predict(future_prices)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","147342ba":"import matplotlib.dates as mdates\n\n# Dates\nstarting_date = dt.datetime(2018, 4, 7)\nstarting_date1 = mdates.date2num(starting_date)\ntrend_date = dt.datetime(2018, 6, 7)\ntrend_date1 = mdates.date2num(trend_date)\n\npointing_arrow = dt.datetime(2018, 2, 18)\npointing_arrow1 = mdates.date2num(pointing_arrow)\n\n# Learn more Prophet tomorrow and plot the forecast for amazon.\nfig = m.plot(forecast)\nax1 = fig.add_subplot(111)\nax1.set_title(\"L&T Stock Price Forecast\", fontsize=16)\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Close Price\", fontsize=12)\n\n# Forecast initialization arrow\nax1.annotate('Forecast \\n Initialization', xy=(pointing_arrow1, 1350), xytext=(starting_date1,1700),\n            arrowprops=dict(facecolor='#ff7f50', shrink=0.1),\n            )\n\n# Trend emphasis arrow\nax1.annotate('Upward Trend', xy=(trend_date1, 1225), xytext=(trend_date1,950),\n            arrowprops=dict(facecolor='#6cff6c', shrink=0.1),\n            )\n\nax1.axhline(y=1260, color='b', linestyle='-')","a33422b8":"fig2 = m.plot_components(forecast)\nplt.show()\n","5d2fcb08":"m = Prophet(changepoint_prior_scale=0.01).fit(ph_df)\nfuture = m.make_future_dataframe(periods=12, freq='M')\nfcst = m.predict(future)\nfig = m.plot(fcst)\nplt.title(\"Monthly Prediction \\n 1 year time frame\")\n\nplt.show()","6c9315ec":"fig = m.plot_components(fcst)\nplt.show()\n","99afe1e0":"trace = go.Ohlc(x=Lt_df['Date'],\n                open=Lt_df['Open Price'],\n                high=Lt_df['High Price'],\n                low=Lt_df['Low Price'],\n                close=Lt_df['Close Price'],\n               increasing=dict(line=dict(color= '#58FA58')),\n                decreasing=dict(line=dict(color= '#FA5858')))\n\nlayout = {\n    'title': 'L&T Historical Price',\n    'xaxis': {'title': 'Date',\n             'rangeslider': {'visible': False}},\n    'yaxis': {'title': 'Stock Price (USD$)'},\n    'shapes': [{\n        'x0': '2016-12-09', 'x1': '2016-12-09',\n        'y0': 0, 'y1': 1, 'xref': 'x', 'yref': 'paper',\n        'line': {'color': 'rgb(30,30,30)', 'width': 1}\n    }],\n    'annotations': [{\n        'x': '2017-01-20', 'y': 0.05, 'xref': 'x', 'yref': 'paper',\n        'showarrow': False, 'xanchor': 'left',\n        'text': 'President Donald Trump <br> takes Office'\n    }]\n}\n\ndata = [trace]\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='simple_ohlc')","0536083f":"last_two = Lt_df.loc[Lt_df['Date'].dt.year > 2016]\n\ng = last_two.groupby([\"Date\"])\nmonthly_averages = g.aggregate({\"Open Price\": np.mean, \"High Price\": np.mean, \"Low Price\": np.mean, \"Close Price\":np.mean})\nmonthly_averages.reset_index(level=0, inplace=True)\n\ntrace = go.Candlestick(x=monthly_averages['Date'],\n                       open=monthly_averages['Open Price'].values.tolist(),\n                       high=monthly_averages['High Price'].values.tolist(),\n                       low=monthly_averages['Low Price'].values.tolist(),\n                       close=monthly_averages['Close Price'].values.tolist(),\n                      increasing=dict(line=dict(color= '#58FA58')),\n                decreasing=dict(line=dict(color= '#FA5858')))\n\nlayout = {\n    'title': 'L&T Historical Price <br> <i>For the Last two years <\/i>',\n    'xaxis': {'title': 'Date',\n             'rangeslider': {'visible': False}},\n    'yaxis': {'title': 'Stock Price (USD$)'},\n    'shapes': [{\n        'x0': '2018-01-02', 'x1': '2018-01-02',\n        'y0': 0, 'y1': 1, 'xref': 'x', 'yref': 'paper',\n        'line': {'color': 'rgb(30,30,30)', 'width': 1}\n    }],\n    'annotations': [{\n        'x': '2018-01-07', 'y': 0.9, 'xref': 'x', 'yref': 'paper',\n        'showarrow': True, 'xanchor': 'left',\n        'text': 'Upward Trend'\n    }]\n}\ndata = [trace]\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='simple_ohlc')","651903cf":"Lt_df['month_year'] = pd.to_datetime(Lt_df['Date']).dt.to_period('M')\n\n# 2017 onwards\nlast_year = Lt_df.loc[Lt_df['Date'].dt.year > 2017]\ng = last_year.groupby([\"Date\"])\nmonthly_averages = g.aggregate({\"Open Price\": np.mean, \"High Price\": np.mean, \"Low Price\": np.mean, \"Close Price\":np.mean})\nmonthly_averages.reset_index(level=0, inplace=True)\n\nmonthly_averages.dtypes\n\n\ntrace = go.Candlestick(x=monthly_averages['Date'],\n                       open=monthly_averages['Open Price'].values.tolist(),\n                       high=monthly_averages['High Price'].values.tolist(),\n                       low=monthly_averages['Low Price'].values.tolist(),\n                       close=monthly_averages['Close Price'].values.tolist(),\n                      increasing=dict(line=dict(color= '#58FA58')),\n                decreasing=dict(line=dict(color= '#FA5858')))\n\n\nlayout = {\n    'title': 'L&T Historical Price <br> <i>A closer look to the upward trend <\/i>',\n    'xaxis': {'title': 'Date',\n             'rangeslider': {'visible': False}},\n    'yaxis': {'title': 'Stock Price (USD$)'}\n}\n\n\ndata = [trace]\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='simple_ohlc')\n\n","382698da":"Lt_df.head()","b176a261":"Lt_df['10_d_avg'] = Lt_df['Close Price'].rolling(window=10).mean()\nLt_df['50_d_avg'] = Lt_df['Close Price'].rolling(window=50).mean()\nLt_df['200_d_avg'] = Lt_df['Close Price'].rolling(window=200).mean()\nclose_p = Lt_df['Close Price'].values.tolist()\n\n\n# Variables to insert into plotly\nten_d = Lt_df['10_d_avg'].values.tolist()\nfifty_d = Lt_df['50_d_avg'].values.tolist()\ntwoh_d = Lt_df['200_d_avg'].values.tolist()\ndate = Lt_df['Date'].values.tolist()\n\n# Set date as index\namzn_df = Lt_df.set_index('Date')\nfig = tls.make_subplots(rows=2, cols=1, shared_xaxes=True)\n\ncolors = ['#ff4500', '#92a1cf', '#6E6E6E']\navgs = ['10_d_avg', '50_d_avg', '200_d_avg']\n# for i,c in zip(range(n),color):\n#    ax1.plot(x, y,c=c)\n\nfor col, c in zip(avgs, colors):\n    fig.append_trace({'x': Lt_df.index, 'y': Lt_df[col], 'type': 'scatter', 'name': col, 'line': {'color': c}}, 1, 1)\nfor col in ['Close Price']:\n    fig.append_trace({'x': amzn_df.index, 'y': amzn_df[col], 'type': 'scatter', 'name': 'Closing Price', 'line':{'color': '#01DF3A'}}, 2, 1)\n    \nfig['layout'].update(height=800,title='Relationship between MAs <br> and Closing Price',\n                    paper_bgcolor='#F2DFCE', plot_bgcolor='#F2DFCE')\n    \niplot(fig, filename='pandas\/mixed-type subplots')","c9e2c119":"Lt_df = Lt_df.reset_index()\n\n# Plotly\ntrace0 = go.Scatter(\n    x = Lt_df['Date'],\n    y = ten_d,\n    name = '10-day MA',\n    line = dict(\n        color = ('#ff6347'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = Lt_df['Date'],\n    y = fifty_d,\n    name = '50-day MA',\n    line = dict(\n        color = ('#92a1cf'),\n        width = 4,\n    dash=\"dot\")\n)\ntrace2 = go.Scatter(\n    x = Lt_df['Date'],\n    y = twoh_d,\n    name = '200-day MA',\n    line = dict(\n        color = ('#2EF688'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\n\ndata = [trace0, trace1, trace2]\n\n\n# Edit the layout\nlayout = dict(title = 'Moving Averages for L&T',\n              xaxis = dict(title = 'Date'),\n              yaxis = dict(title = 'Price'),\n             \n              paper_bgcolor='#FFF9F5',\n              plot_bgcolor='#FFF9F5'\n              )\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='styled-line')","171cb573":"![](https:\/\/static.businessworld.in\/article\/article_extra_large_image\/1576132863_nh0Sxg_images.png)","1329fb38":"**L&T Finance Holdings** Limited is a non-banking financial institution-core investment company. The Company's segments include Retail and Mid Market Finance, which consists of rural products finance, personal vehicle finance, microfinance, housing finance, commercial vehicle finance, construction equipment finance, loans and leases and loan against shares; Wholesale Finance, which consists of project finance and non-project corporate finance to infra and non-infra segments across power-thermal and renewable; transportation-roads, ports and airports; telecom, and other non-infra segments; Investment Management, which consists of assets management of mutual fund and private equity fund, and Other Business, which consists of wealth management and financial product distribution. It offers a range of financial products and services across retail, corporate, housing and infrastructure finance sectors, as well as mutual fund products and investment management services."}}