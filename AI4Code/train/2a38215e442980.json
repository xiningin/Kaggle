{"cell_type":{"a3e5bb4c":"code","428fb739":"code","0b217694":"code","a63a4e0c":"code","25d3aa68":"code","543d80b1":"code","5c3585e2":"code","b2537c11":"code","8e2162c4":"code","c8be6d04":"code","21ae8c37":"code","1641de70":"code","0d43cf63":"code","eab302e6":"code","651113cc":"code","6e296ab0":"code","b1b9d54c":"code","9dbd0f85":"code","1ea9239d":"code","38ebc735":"code","8788db74":"code","25aa8890":"code","cc41e854":"code","92a000b8":"markdown","8f27fa4b":"markdown","189ce8a0":"markdown","cfb12db9":"markdown","61303e2b":"markdown","cc8583e5":"markdown","869cf3c2":"markdown","f6e2a2f4":"markdown","c496269a":"markdown","40f18ddb":"markdown","2361c716":"markdown","6dd2f3fd":"markdown","30f1ca80":"markdown","8de6a717":"markdown","5eb9d393":"markdown","d749b73b":"markdown","ce308cf3":"markdown"},"source":{"a3e5bb4c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","428fb739":"df = pd.read_csv('..\/input\/adult-income-dataset\/adult.csv')","0b217694":"df","a63a4e0c":"df = df.replace('?',np.NaN)\ndf = df.dropna(axis = 0)\ndf = df.reset_index(drop=True)\ndf","25d3aa68":"df['income'].value_counts()","543d80b1":"df['income'] = (df['income']==(\"<=50K\")).astype(int)\n\ndf['income']","5c3585e2":"df_str = df.select_dtypes(include='object')\ndf_int = df.select_dtypes(exclude='object')\ndf_str.describe(include='all')","b2537c11":"df_str.head()","8e2162c4":"df_int.head()","c8be6d04":"df_str = pd.get_dummies(df_str)\ndf_str.head()","21ae8c37":"y_last = df_int['income']\nx = df_int.drop(columns='income')\ncolumn_names = x.columns.values\ntype(x)","1641de70":"from sklearn import preprocessing\nscaler = preprocessing.StandardScaler()\nx_stndrd = scaler.fit_transform(x)\ntype(x_stndrd)","0d43cf63":"x_stndrd = pd.DataFrame(x_stndrd)\nx_stndrd.columns = column_names\ntype(x_stndrd)","eab302e6":"x_last = pd.concat([x_stndrd,df_str],axis=1)\nx_last.head()","651113cc":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test  = train_test_split(x_last,y_last,test_size=0.30,random_state=42)","6e296ab0":"from sklearn.neighbors import KNeighborsClassifier\nneigh = KNeighborsClassifier(n_neighbors=4).fit(x_train,y_train)","b1b9d54c":"y_hat = neigh.predict(x_test)","9dbd0f85":"from sklearn import metrics\nmetrics.accuracy_score(y_test,y_hat)","1ea9239d":"Ks=30\nmean_acc = np.zeros((Ks-1))\nstd_acc = np.zeros((Ks-1))\n\nfor n in range(1,Ks):\n    neigh = KNeighborsClassifier(n_neighbors = n).fit(x_train,y_train)\n    y_hat = neigh.predict(x_test)\n    mean_acc[n-1] = metrics.accuracy_score(y_test,y_hat)\n    std_acc[n-1] = np.std(y_hat==y_test)\/np.sqrt(y_hat.shape[0])\n    \nmean_acc","38ebc735":"plt.plot(range(1,Ks),mean_acc,'g',marker='o')\nplt.fill_between(range(1,Ks),mean_acc - 1 * std_acc,mean_acc + 1 * std_acc, alpha=0.10)\nplt.legend(('Accuracy ', '+\/- 3xstd'))\nplt.ylabel('Accuracy ')\nplt.xlabel('Number of Nabors (K)')\nplt.tight_layout()\nplt.show()","8788db74":"neigh = KNeighborsClassifier(n_neighbors=13).fit(x_train,y_train)\ny_hat = neigh.predict(x_test)\nmetrics.accuracy_score(y_test,y_hat)","25aa8890":"from sklearn.metrics import plot_confusion_matrix, confusion_matrix\nconfusion_matrix(y_test, y_hat)","cc41e854":"plot_confusion_matrix(neigh,x_test,y_test)","92a000b8":"I tried to implement KNN algorithm to adult-income-dataset.","8f27fa4b":"I will take 13 as K value.","189ce8a0":"# **Introduction**","cfb12db9":"We observed that there ae some unknown cells in df.","61303e2b":"Change x_stndrd's type, because we cannot combine str and int data.","cc8583e5":"I want to get rid of unknown values, then I will delete those rows due to misleading. However I will lose some data.","869cf3c2":"First step is impoting data.","f6e2a2f4":"Checking values that are contained in income column.","c496269a":"Let's take a short look at DataFrame.","40f18ddb":"# **Spliting DataFrame to integers and strings**","2361c716":"If there is just 2 different values in income array, income could be converted to 0s and 1s.","6dd2f3fd":"# **Applying KNN**","30f1ca80":"# **Clearing Data**","8de6a717":"# **Normalizing numeric part**","5eb9d393":"# **Confusion Matrix**","d749b73b":"# **Selecting Best 'K' Value**","ce308cf3":"# **Train Test Split**"}}