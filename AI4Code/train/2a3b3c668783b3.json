{"cell_type":{"9edcacd7":"code","01cfdcf4":"code","0f7d398a":"code","d91a4d42":"code","b92605ec":"code","0e8dab81":"code","eaaf81de":"code","cd068a99":"code","d4ded03e":"code","5e514237":"code","3278eee0":"code","b639e6b9":"code","bc9393e3":"code","79e721d0":"code","e04a0a04":"code","5e818211":"code","cb1aefb3":"code","73391d6f":"code","da86b329":"code","54932eca":"code","1179563b":"code","34e39679":"code","b964c947":"code","8d5e6fd1":"code","45c2909e":"code","cf4b190b":"code","81e3e6e2":"code","ff693261":"code","2989cac9":"code","35ea4f0c":"markdown","58773f79":"markdown","00dbdfe8":"markdown","1c61d9b5":"markdown","7b09f78d":"markdown","6e2ed0e8":"markdown","11f4ecb2":"markdown","ccd79d2e":"markdown","21d0da56":"markdown","e1bf27b7":"markdown","0d36e404":"markdown","b0ff6346":"markdown"},"source":{"9edcacd7":"!pip install imutils\nimport numpy as np \nimport pandas as pd \nimport tensorflow as tf\nimport tensorflow_hub as tfhub\nfrom sklearn.cluster import KMeans\nfrom tqdm import tqdm\nimport os\nfrom imutils import paths\nfrom tensorflow.keras.preprocessing import image\nimport matplotlib.pyplot as plt\n\n#\/kaggle\/input\/fashion-product-images-small\/myntradataset\/images\/","01cfdcf4":"import time\nimport cv2","0f7d398a":"#img_list = os.path.join(\"..\/input\/fashion-product-images-small\/images\/\")\nimage_path = list(paths.list_images(\"..\/input\/fashion-product-images-small\/images\/\"))","d91a4d42":"ResNet_Url = \"https:\/\/tfhub.dev\/tensorflow\/resnet_50\/feature_vector\/1\"","b92605ec":"model = tf.keras.Sequential([\n    tfhub.KerasLayer(ResNet_Url, trainable = False)\n])","0e8dab81":"Features = []\nimage_array = []\nimage_name = []\nfor imgname in image_path:\n    img = image.load_img(imgname, target_size  = (224,224))\n    img = image.img_to_array(img)\n    img2 = np.expand_dims(img, axis = 0)\n    Features.append(model.predict(img2))\n    image_array.append(img)\n    image_name.append(imgname.split('\/')[4])\n    \n\ndel model\ndel image_path\n        ","eaaf81de":"Features_array = np.array(Features)\ndel Features\nFeatures_array[0]","cd068a99":"Features_data = Features_array.reshape(44441, 2048)\nFeatures_data = pd.DataFrame(Features_data)\nFeatures_data.head()","d4ded03e":"Features_data.to_csv('Image_Features')","5e514237":"data = pd.read_csv(\"..\/input\/fashion-image-features\/Image_Features.csv\")\ndata.head()","3278eee0":"data.drop('Unnamed: 0', axis = 1, inplace = True)\ndata.head()","b639e6b9":"from sklearn.preprocessing import StandardScaler\n\nSD = StandardScaler().fit(data)\nData_std = SD.transform(data)\nprint(Data_std[:5])\ndel data","bc9393e3":"from sklearn.decomposition import PCA\n\npca = PCA(n_components=200)\npca = pca.fit(Data_std)\nDF_pca = pca.transform(Data_std)","79e721d0":"d = pd.DataFrame(data = DF_pca)\nd.head()","e04a0a04":"from sklearn.cluster import MiniBatchKMeans","5e818211":"start = time.time()\nk = range(1,30)\nSSE_MB = []\nfor i in tqdm(k):\n    KMeans_model_MB = MiniBatchKMeans(n_clusters = i, batch_size=1000).fit(d)\n    SSE_MB.append(KMeans_model_MB.inertia_)\n    \nplt.figure(figsize = (20,7))\nplt.plot(k, SSE_MB)\nend = time.time()\nprint(\"Time for Elbow method in Mini Batch KMeans: \", (end - start))","cb1aefb3":"MB_KMeans_model = MiniBatchKMeans(n_clusters = 14,batch_size=1000).fit(d)","73391d6f":"MB_KMeans_clusters = MB_KMeans_model.predict(d)\nMB_KMeans_clusters","da86b329":"image_name = []\nfor imgname in tqdm(image_path):\n    image_name.append(imgname)","54932eca":"MB_KMeans_cluster_DataFrame = pd.DataFrame()\n\nMB_KMeans_cluster_DataFrame['Image'] = image_name\nMB_KMeans_cluster_DataFrame['Cluster'] = MB_KMeans_clusters\n\nMB_KMeans_cluster_DataFrame.head()","1179563b":"sub_df = pd.DataFrame()\nsub_df = MB_KMeans_cluster_DataFrame[MB_KMeans_cluster_DataFrame['Cluster'] == 7]\nsub_df","34e39679":"fig = plt.figure(figsize=(10, 7))\nimg1 = cv2.imread(sub_df['Image'][25])\nimg2 = cv2.imread(sub_df['Image'][66])\nimg3 = cv2.imread(sub_df['Image'][85])\nimg4 = cv2.imread(sub_df['Image'][87])\n\n\nfig.add_subplot(2, 2, 1)\nplt.imshow(img1)\nplt.axis('off')\nplt.title(\"First\")\n\nfig.add_subplot(2, 2, 2)\nplt.imshow(img2)\nplt.axis('off')\nplt.title(\"Second\")\n\nfig.add_subplot(2, 2, 3)\nplt.imshow(img3)\nplt.axis('off')\nplt.title(\"Third\")\n\nfig.add_subplot(2, 2, 4)\nplt.imshow(img4)\nplt.axis('off')\nplt.title(\"Fourth\")\n","b964c947":"start - time.time()\nk = range(1,30)\nSSE = []\nfor i in tqdm(k):\n    KMeans_model = KMeans(n_clusters = i).fit(d)\n    SSE.append(KMeans_model.inertia_)\n\nplt.figure(figsize = (20,7))\nplt.plot(k, SSE)\nend = time.time()\nprint(\"Time for Elbow method in KMeans: \", (start - end))","8d5e6fd1":"model_KMeans = KMeans(n_clusters = 7).fit(d)\nclusters = model_KMeans.predict(d)","45c2909e":"KMeans_cluster_DataFrame = pd.DataFrame()\n\nKMeans_cluster_DataFrame['Image'] = image_name\nKMeans_cluster_DataFrame['Cluster'] = clusters\n\nKMeans_cluster_DataFrame.head()","cf4b190b":"sub_df_1 = pd.DataFrame()\nsub_df_1 = KMeans_cluster_DataFrame[KMeans_cluster_DataFrame['Cluster'] == 0]\nsub_df_1","81e3e6e2":"fig = plt.figure(figsize=(10, 7))\nimg1 = cv2.imread(sub_df_1['Image'][0])\nimg2 = cv2.imread(sub_df_1['Image'][3])\nimg3 = cv2.imread(sub_df_1['Image'][7])\nimg4 = cv2.imread(sub_df_1['Image'][16])\n\n\nfig.add_subplot(2, 2, 1)\nplt.imshow(img1)\nplt.axis('off')\nplt.title(\"First\")\n\nfig.add_subplot(2, 2, 2)\nplt.imshow(img2)\nplt.axis('off')\nplt.title(\"Second\")\n\nfig.add_subplot(2, 2, 3)\nplt.imshow(img3)\nplt.axis('off')\nplt.title(\"Third\")\n\nfig.add_subplot(2, 2, 4)\nplt.imshow(img4)\nplt.axis('off')\nplt.title(\"Fourth\")\n\ndel sub_df_1","ff693261":"import seaborn as sns","2989cac9":"Algorithm = [\"KMeans\", \"Mini-Batch KMeans\"]\nTime = [2186.98 ,99.82]\nsns.set_theme()\nsns.barplot(x = Algorithm, y = Time)","35ea4f0c":"## Getting Fetures from the ResNet Model\n*We will store the extracted features into an NumPy Array*\n","58773f79":"***Saving Feature DataFrame into CSV file****","00dbdfe8":"# **KMeans Algorithm**","1c61d9b5":"## **We will reduce some Features using the PCA Algorithm**","7b09f78d":"![image.png](attachment:e88068e7-0d51-40b7-a0f0-7ec43f8fc09b.png)","6e2ed0e8":"***Converting Feature list into an Array***","11f4ecb2":"# **Creating a list for image paths**","ccd79d2e":"# **Mini-Batch KMeans Algorithm**","21d0da56":"# Applying the KMeans Algorithm on Feature vectors for finding the clusters","e1bf27b7":"# **Transfer Learning for Feature Extraction**\n*We will use ResNet model for Feature Extraction*","0d36e404":"***Converting Feature Array into an Pandas DataFrame***","b0ff6346":"# Time Required by algorithms"}}