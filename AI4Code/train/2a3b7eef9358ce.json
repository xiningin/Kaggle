{"cell_type":{"5cc10757":"code","b566ffce":"code","4bb4fffc":"code","a07c36d7":"code","596bdc0f":"code","398eaff6":"code","ae39eb88":"code","2244bb3f":"code","751bf022":"code","6bd7b841":"code","e91a7058":"code","d12fbdda":"code","6c03c29c":"code","41faa9fb":"code","d35fa06a":"code","e1844dc2":"code","9219f9a0":"code","ccc60cb4":"code","98a46dc7":"code","7958a807":"code","74101eb6":"code","0b999906":"code","f6c03b6c":"code","edc91931":"code","62db3e6c":"code","e546f774":"code","7180f744":"code","a927f0a3":"code","1f34cdbf":"code","99455325":"code","4735daed":"code","50716427":"code","0a776b66":"code","5d7b2f30":"code","505d391c":"code","244d8f7a":"code","276f517c":"code","a3afed27":"code","2278834c":"code","99e68a6c":"code","673ed348":"code","05d4db74":"code","49b90e27":"code","d40a452b":"code","dbd3ef2a":"code","44ece0f0":"code","47186818":"code","2b97aed8":"code","26da7e21":"code","26baf90f":"code","8dccb2f7":"code","fe5778e3":"code","c714458f":"markdown","16e18ca2":"markdown","d1a0bb2a":"markdown","f7da39fe":"markdown","33c45222":"markdown","b60003de":"markdown","c59f6e2e":"markdown","8686770a":"markdown","a9cd47dd":"markdown","1f4b0c91":"markdown","5f8c8f10":"markdown","4c72d617":"markdown","e699bf77":"markdown","bbe83f85":"markdown","5d847fb4":"markdown","5cb4fb1e":"markdown","c401df6b":"markdown","4e72be73":"markdown","7ed8dfcb":"markdown","79b3f911":"markdown","5ae65398":"markdown","a4005818":"markdown","427e47fb":"markdown","c611e58b":"markdown","8bfd7d2f":"markdown","2964f0fb":"markdown","649795cf":"markdown","f4fd27d0":"markdown","66ac2adf":"markdown","29d3ad9c":"markdown","b8f808f3":"markdown","1ac73ca0":"markdown","86dedc88":"markdown","4f3326b1":"markdown","0d6a603f":"markdown","7c10b0f2":"markdown","84e9da28":"markdown","1deec8b1":"markdown","158a35a8":"markdown","48293a02":"markdown","f5529a1c":"markdown","26d6156d":"markdown","d1a61bda":"markdown","ecda4c58":"markdown","500ac9d9":"markdown","49b26784":"markdown","ceff1fd3":"markdown","8e6b2050":"markdown","c3212ddf":"markdown","89112e72":"markdown","a0375a58":"markdown","80f796fd":"markdown","b6926c94":"markdown"},"source":{"5cc10757":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits import mplot3d\n\nimport plotly\nimport plotly.express as px\n\nimport pycountry\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nfrom math import isnan\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\n\nimport warnings\nwarnings.filterwarnings('ignore')\n","b566ffce":"# reading data\ncountry_df = pd.read_csv('..\/input\/country-data\/Country-data.csv')\ncountry_df.head()","4bb4fffc":"# getting dataframe insights\nprint('shape of the data set (rows, columns) :', country_df.shape)","a07c36d7":"# Checking for data types and additional info\ncountry_df.info()","596bdc0f":"# checkinf for null values if any\ncountry_df.isnull().sum()","398eaff6":"# check for duplicate rows\nprint('No of duplicate rows: ',country_df.duplicated().sum())","ae39eb88":"# Converting imports, exports and health spending percentages to absolute values.\ncountry_df['exports'] = country_df['exports']*country_df['gdpp']\/100\ncountry_df['health'] = country_df['health']*country_df['gdpp']\/100\ncountry_df['imports'] = country_df['imports']*country_df['gdpp']\/100\ncountry_df.head()","2244bb3f":"# describe dataset and Checking percentiles at 25%,50%,75%,90%,95% and 99%\ncountry_df.describe(percentiles=[.25,.5,.75,.90,.95,.99])","751bf022":"# Box plot\nvar = country_df.select_dtypes(exclude='object').columns\ncol = 3\nrow = len(var)\/col+1\n\nplt.figure(figsize=(12,12))\nfor i in enumerate(var):\n    plt.subplot(row,col,i[0]+1)\n    sns.boxplot(country_df[i[1]],color=\"orange\")\n    plt.tight_layout(pad = 2)\nplt.show()","6bd7b841":"\nfig, axs = plt.subplots(3,3,figsize = (12,12))\n# poor top 10 countries represented as `top10`\n\n# Child Mortality Rate \ntop10_child_mort = country_df[['country','child_mort']].sort_values('child_mort', ascending = False).head(10)\nplt1 = sns.barplot(x='country', y='child_mort', data= top10_child_mort, ax = axs[0,0])\nplt1.set(xlabel = '', ylabel= 'Child Mortality Rate')\n\n# Exports\ntop10_exports = country_df[['country','exports']].sort_values('exports', ascending = True).head(10)\nplt2 = sns.barplot(x='country', y='exports', data= top10_exports, ax = axs[2,1])\nplt2.set(xlabel = '', ylabel= 'Exports')\n\n# Health \ntop10_health = country_df[['country','health']].sort_values('health', ascending = True).head(10)\nplt3 = sns.barplot(x='country', y='health', data= top10_health, ax = axs[1,0])\nplt3.set(xlabel = '', ylabel= 'Health')\n\n# Imports\ntop10_imports = country_df[['country','imports']].sort_values('imports', ascending = True).head(10)\nplt4 = sns.barplot(x='country', y='imports', data= top10_imports, ax = axs[2,2])\nplt4.set(xlabel = '', ylabel= 'Imports')\n\n# Per capita Income \ntop10_income = country_df[['country','income']].sort_values('income', ascending = True).head(10)\nplt5 = sns.barplot(x='country', y='income', data= top10_income, ax = axs[1,2])\nplt5.set(xlabel = '', ylabel= 'Per capita Income')\n\n# Inflation\ntop10_inflation = country_df[['country','inflation']].sort_values('inflation', ascending = False).head(10)\nplt6 = sns.barplot(x='country', y='inflation', data= top10_inflation, ax = axs[2,0])\nplt6.set(xlabel = '', ylabel= 'Inflation')\n\n# Fertility Rate\ntop10_total_fer = country_df[['country','total_fer']].sort_values('total_fer', ascending = False).head(10)\nplt7 = sns.barplot(x='country', y='total_fer', data= top10_total_fer, ax = axs[0,1])\nplt7.set(xlabel = '', ylabel= 'Fertility Rate')\n\n# Life Expectancy\ntop10_life_expec = country_df[['country','life_expec']].sort_values('life_expec', ascending = True).head(10)\nplt8 = sns.barplot(x='country', y='life_expec', data= top10_life_expec, ax = axs[0,2])\nplt8.set(xlabel = '', ylabel= 'Life Expectancy')\n\n# The GDP per capita \ntop10_gdpp = country_df[['country','gdpp']].sort_values('gdpp', ascending = True).head(10)\nplt9 = sns.barplot(x='country', y='gdpp', data= top10_gdpp, ax = axs[1,1])\nplt9.set(xlabel = '', ylabel= 'GDP per capita')\n\n\nfor ax in fig.axes:\n    plt.sca(ax)\n    plt.xticks(rotation = 90)\n    \nplt.tight_layout()\n# plt.savefig('eda')\nplt.show()\n    \n","e91a7058":"# distrbution plot\nvar = country_df.select_dtypes(exclude='object').columns\ncol = 3\nrow = len(var)\/col+1\n\nplt.figure(figsize=(12,12))\nfor i in enumerate(var):\n    plt.subplot(row,col,i[0]+1)\n    sns.distplot(country_df[i[1]])\n    plt.tight_layout(pad = 2)\nplt.show()","d12fbdda":"# pairplot for continuous data type\nsns.pairplot(country_df.select_dtypes(['int64','float64']), diag_kind='kde', corner=True)\nplt.show()","6c03c29c":"# look at the correlation between continous varibales using heat map\nplt.figure(figsize=(10,6))\nsns.heatmap(country_df.corr(), annot=True, cmap='RdYlGn')\nplt.show()","41faa9fb":"# Getting country code for geographical visualisation\ncountry_geoplot = country_df.copy()\nmapping = {country.name: country.alpha_3 for country in pycountry.countries}\ncountry_geoplot['country_code'] = country_geoplot['country'].map(lambda x: mapping.get(x))\ncountry_geoplot.head()","d35fa06a":"#gdpp\nfig = px.choropleth(country_geoplot, locations=\"country_code\",\n                    color=\"gdpp\",      \n                    hover_name=\"country\",\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","e1844dc2":"#Child Moratlity\nfig = px.choropleth(country_geoplot, locations=\"country_code\",\n                    color=\"child_mort\",     \n                    hover_name=\"country\", \n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","9219f9a0":"#Child Moratlity\nfig = px.choropleth(country_geoplot, locations=\"country_code\",\n                    color=\"income\",     \n                    hover_name=\"country\",\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","ccc60cb4":"# selectig numerical columns and droppig country\ndf = country_df.drop('country', axis=1)","98a46dc7":"# list cols for upper caping and get insigts of data\ncols = ['exports', 'health', 'imports', 'total_fer','gdpp']\ndf[cols].describe(percentiles= [0.01,0.25,0.5,0.75,0.99])\n","7958a807":"# upper caping to 0.99 percentile\ncap = 0.99\nfor col in cols:\n    HL = round(df[col].quantile(cap),2)\n    df[col] = df[col].apply(lambda x: HL if x>HL else x)","74101eb6":"# Check values after outlier treatment\ndf[cols].describe(percentiles= [0.01,0.25,0.5,0.75,0.99])","0b999906":"# check outliers after capping\ndf[cols].plot.box(subplots = True, figsize = (18,6), fontsize = 12)\nplt.tight_layout(pad=3)\nplt.show()","f6c03b6c":"# Creating scaler object\nscaler = MinMaxScaler()\n\n# fit transform\ndf_scaled = scaler.fit_transform(df)\ndf_scaled","edc91931":"# function hopkin statustics\n\ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","62db3e6c":"# Create dataframe of sclaled fetaures\ndf_scaled = pd.DataFrame(df_scaled, columns = df.columns)\n\n# Evaluate Hopkins Statistics\nprint('Hopkins statistics is: ', round(hopkins(df_scaled),2))","e546f774":"# silhouette analysis\nnum_clusters = list(range(2,11))\nss = []\nfor cluster in num_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters= cluster, max_iter=50)\n    kmeans.fit(df_scaled)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = round(silhouette_score(df_scaled, cluster_labels),4)\n    ss.append(silhouette_avg)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(cluster, silhouette_avg))\n\n\nplt.title('Silhoutte Score')\nplt.plot(num_clusters,pd.DataFrame(ss)[0])\nplt.show()","7180f744":"# Creating list of clusters for no of cluster\nnum_clusers = list(range(1,11))\nssd = []\nfor clustuer in num_clusers:\n    kmeans = KMeans(n_clusters=clustuer, max_iter= 50)\n    kmeans.fit(df_scaled)\n    ssd.append(kmeans.inertia_)\n","a927f0a3":"# pltng elbow method plot\nplt.figure(figsize=(10,6))\nplt.plot(num_clusers,ssd, marker = 'o')\nplt.title('Elbow Method', fontsize = 16)\nplt.xlabel('Number of clusters',fontsize=12)\nplt.ylabel('Sum of Squared distance',fontsize=12)\nplt.vlines(x=3, ymax=ssd[-1], ymin=ssd[0], colors=\"r\", linestyles=\"-\")\nplt.hlines(y=ssd[2], xmax=9, xmin=1, colors=\"r\", linestyles=\"--\")\n\nplt.show()","1f34cdbf":"#chosing no. of clusters as 3 and refitting kmeans model\nkmeans = KMeans(n_clusters = 3, max_iter=50,random_state = 50)\nkmeans.fit(df_scaled)","99455325":"#adding produced labels dataframe\ncountry_df['KMean_ClusterID']= pd.Series(kmeans.labels_)\ncountry_df.head()","4735daed":"# visualising clusters\nplt.figure(figsize=(15,5))\nplt.subplot(1,3,1)\nsns.scatterplot(x = 'gdpp', y = 'child_mort', data= country_df, hue = 'KMean_ClusterID', palette=\"bright\")\nplt.subplot(1,3,2)\nsns.scatterplot(x = 'income', y = 'child_mort', data= country_df, hue = 'KMean_ClusterID', palette=\"bright\")\nplt.subplot(1,3,3)\nsns.scatterplot(x = 'income', y = 'gdpp', data= country_df, hue = 'KMean_ClusterID', palette=\"bright\")\nplt.tight_layout()\n\nplt.show()","50716427":"# visualising clusters barplot on : `gdpp, child_mort and income` \nplt.figure(figsize=(15,5))\nplt.subplot(1,3,1)\nsns.barplot(x = 'KMean_ClusterID', y = 'gdpp', data= country_df)\nplt.title('GDP Percapita')\n\nplt.subplot(1,3,2)\nsns.barplot(x = 'KMean_ClusterID', y = 'child_mort', data= country_df)\nplt.title('Child Mortality Rate')\n\nplt.subplot(1,3,3)\nsns.barplot(x = 'KMean_ClusterID', y = 'income', data= country_df)\nplt.title('Income Per Person')\n\nplt.tight_layout()\n\nplt.show()","0a776b66":"# sort based on 'child_mort','income','gdpp' in respective order\nKMean_cluster_Undeveloped = country_df[country_df['KMean_ClusterID']== 2]\nK_top5 = KMean_cluster_Undeveloped.sort_values(by = ['gdpp','income','child_mort'],\n                                                     ascending=[True, True, False]).head(5)\n\nprint( 'Top 5 undeveloped countries based on KMean cluster are:' , K_top5['country'].values )","5d7b2f30":"# Single Linkage\nmergings = linkage(df_scaled, method=\"single\", metric='euclidean')\nplt.figure(figsize=(12,6))\ndendrogram(mergings)\nplt.title('Single Linkage')\nplt.show()","505d391c":"# complete linkage\nmergings = linkage(df_scaled, method=\"complete\", metric='euclidean')\nplt.figure(figsize=(12,6))\ndendrogram(mergings)\nplt.title('Complete Linkage')\nplt.show()","244d8f7a":"# labeling 3 clusters\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","276f517c":"# assign cluster labels\ncountry_df['H_ClusterID'] = cluster_labels\ncountry_df.head()","a3afed27":"# visualising clusters\nplt.figure(figsize=(15,5))\nplt.subplot(1,3,1)\nsns.scatterplot(x = 'gdpp', y = 'child_mort', data= country_df, hue = 'H_ClusterID', palette=\"bright\" )\n\nplt.subplot(1,3,2)\nsns.scatterplot(x = 'income', y = 'child_mort', data= country_df, hue = 'H_ClusterID', palette=\"bright\" )\n\nplt.subplot(1,3,3)\ncmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.scatterplot(x = 'income', y = 'gdpp', data= country_df, hue = 'H_ClusterID',palette=\"bright\")\n\nplt.tight_layout()\nplt.show()","2278834c":"# visualising clusters\nplt.figure(figsize=(15,5))\nplt.subplot(1,3,1)\nsns.barplot(x = 'H_ClusterID', y = 'gdpp', data= country_df)\nplt.title('GDP Percapita')\n\nplt.subplot(1,3,2)\nsns.barplot(x = 'H_ClusterID', y = 'child_mort', data= country_df)\nplt.title('Child Mortality Rate')\n\nplt.subplot(1,3,3)\nsns.barplot(x = 'H_ClusterID', y = 'income', data= country_df)\nplt.title('Income Per Person')\n\nplt.tight_layout()\n\nplt.show()","99e68a6c":"# sort based on 'child_mort','income','gdpp' in respective order\nH_cluster_Undeveloped = country_df[country_df['H_ClusterID']== 0]\nH_top5 = H_cluster_Undeveloped.sort_values(by = ['gdpp','income','child_mort'],\n                                                     ascending=[True, True, False]).head(5)\n\nprint( 'Top 5 countries dire need of aid  based on H cluster are:' , H_top5['country'].values )","673ed348":"# No of countries in Each Distribution\n\nH_cluster_count = country_df.H_ClusterID.value_counts()\nprint('Cluster wise No of Countries (Hierarchical Clustering):')\nprint(H_cluster_count)\n\nK_cluster_count = country_df.KMean_ClusterID.value_counts()\nprint('\\nCluster wise No of Countries (KMean Clustering):')\nprint(K_cluster_count)","05d4db74":"# Get the % of cluster distribution\nH_cluster_per = country_df.H_ClusterID.value_counts(normalize = True)*100\nprint('Cluster wise Countries % (Hierarchical Clustering):')\nprint(round(H_cluster_per,2))\n\nK_cluster_per = country_df.KMean_ClusterID.value_counts(normalize = True)*100\nprint('\\nCluster wise Countries % (KMean Clustering):')\nprint(round(K_cluster_per,2))","49b90e27":"# barplot for cluster distribution\nplt.figure(figsize=(16,4))\nplt.subplot(1,2,1)\nsns.barplot(x= H_cluster_per.index, y = H_cluster_per)\nplt.title('Hierarchical Cluster Distribution')\nplt.xlabel('ClusterID')\nplt.ylabel('Percentage Distribution')\n\nplt.subplot(1,2,2)\nsns.barplot(x= K_cluster_per.index, y = K_cluster_per)\nplt.title('KMean Cluster Distribution')\nplt.xlabel('ClusterID')\nplt.ylabel('Percentage Distribution')\nplt.show()","d40a452b":"# visulaise final cluster Mean\nK_cluster_mean = country_df.groupby(by = 'KMean_ClusterID').mean()\n\nprint(round(K_cluster_mean[['gdpp','income','child_mort']],2))\nK_cluster_mean[['gdpp','income','child_mort']].plot.bar()\nplt.yscale('log')\nplt.show()","dbd3ef2a":"# final labels\ncountry_df['ClusterLabels'] = country_df['KMean_ClusterID'].map({0: 'Developed', 1:'Developing', 2: 'Undeveloped'})\ncountry_df.head()                                                      ","44ece0f0":"# select final data frame for profiling\nKMean_cluster = country_df[['country','gdpp','child_mort','income','ClusterLabels']]\nKMean_cluster.head()","47186818":"# Subset data frame based on undeveloped countries\nKMean_cluster_Undeveloped = KMean_cluster[KMean_cluster['ClusterLabels'] == 'Undeveloped']\nKMean_cluster_Undeveloped.head()","2b97aed8":"# sort based on 'child_mort','income','gdpp' in respective order\ntop5 = KMean_cluster_Undeveloped.sort_values(by = ['gdpp','income','child_mort'],\n                                                     ascending=[True, True, False]).head(5)\ntop5 = top5[['country','gdpp','income','child_mort']]\ntop5","26da7e21":"# plot for final top5 countries based on child_mort, gdpp and income\nplotdata = top5.set_index('country')\nplotdata.plot.bar(figsize = (8,4))\nplt.show()","26baf90f":"# Visualising top 5 undeveloped countries based on 'gdpp', 'income' and 'child_mort' (plotly library is required)\nfig = px.scatter(top5, x = 'income', y = 'gdpp', \n                 animation_group=\"country\",\n                 size=\"child_mort\",\n                 color = 'country',\n                 hover_name=\"country\",\n                 \n                 )\nfig.show()","8dccb2f7":"# scater plot for bottom 5 countries based on profiling varibles\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='country',\n                data=top5, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='gdpp', y='income', hue='country',\n                data=top5, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='income', y='child_mort', hue='country',\n                data=top5, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.show()\n","fe5778e3":"# Get the statistics of final cluster\ntop5.describe()","c714458f":"## 8. Conclusion\n\n<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>The 5 countries those in direst need of aid: <\/b>\n        <ul><b>\n            <li>Burundi<\/li>\n            <li>Liberia<\/li>\n            <li>Congo, Dem. Rep.<\/li>\n            <li>Niger<\/li>\n            <li>Sierra Leone<\/li><\/b> \n        <\/ul>\n    <\/span>    \n<\/div>","16e18ca2":"Insights:\n\n- The maximum silhouette score is at cluster no 3\n- There is less reduction in sum of squared distance after cluster 3 in elbow method.\n\nWith above two methods to select optimum cluster we would choose `3 clusters` as optimal no.","d1a0bb2a":"- `child_mort`, `inflation`: High Child mortality  and higher inflation are our matter of concern so we will not do uppercapping for these features.\n- `export`, `health`, `imports`, `total_fer` and `gdpp` : It has outlier at higher level. We will impute outlier to upper capping (0.99 percentile)\n- `life_expec` : It has outlers bellow the lower hinge, But again it is our matter of concern so we will not impute these values.","f7da39fe":"## 1. import required libraries","33c45222":"### 4.2 Feature Scaling","b60003de":"From Hierarchical Clusturing we could get top 5 undeveloped countries are:\n> `'Burundi' 'Liberia' 'Congo, Dem. Rep.' 'Niger' 'Sierra Leone'`","c59f6e2e":"### 3.3 Geographical Visualisaion\nGeographical visualisation on world map to see the how the contries as clusetured based on socio echonomic development\n<br>(Plotly library need to be imported for this section)","8686770a":"Insights:\n\n\n- From above analysis we could see KMean is having better distributed cluster. So we will select final model as KMean cluster and doing profiling considering the labels accordingly.\n\n- Kindly note that both the model has resulted the same coutries as top 5 undeveloped county.","a9cd47dd":"**5.1.1 Choose K using both Silhouette score and Elbow method**","1f4b0c91":"Insights: \n- There are still some outliers exists but, we will choose to keep them and proceed for modeling.","5f8c8f10":"We wiil prioritize the features on the order of gdpp, income and child_mort with below understanding,\n - `gdpp` and `income` are highly `+ve` correlated.\n - `gdpp` and `income` both have `-ve` correlation with `child_mort`.\n - Finalcial aid will directly improve `gdpp` and `income` and thus child_mort can be reduced.","4c72d617":"Before we apply any clustering algorithm to the given data, it's important to check whether the given data has some meaningful clusters or not? which in general means the given data is not random. The process to evaluate the data to check if the data is feasible for clustering or not is know as the clustering tendency. To check cluster tendency, we use Hopkins test. Hopkins test examines whether data points differ significantly from uniformly distributed data in the multidimensional space.\n- If the value is between {0.01, ...,0.3}, the data is regularly spaced.\n- If the value is around 0.5, it is random.\n- If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster.","e699bf77":"Insights:\n- Data set is having 167 country data of 10 features of each.\n- There is no missing malue or duplicate rows in the dataset\n- Referring to data dictionary, `exports, health and imports` are given as %age of GDP per capita. So lets convert it to actual value","bbe83f85":"## 5. Clustering","5d847fb4":"**Check for top 10 affected contries countries:**","5cb4fb1e":"Insights:\n\n- We could observe that outliers present in all the features. These may impact our clustering model.\n- Since we have limited number of countries(167), removing these outliers would shrink the shape of data and the under-developed countries which are in actual dire need may not contribute to the dataset.\n- So we will cap them to upper and lower limit. But simply capping them to `Upper and Lower Hinge` of box plot may shift the `cluster centroid`.\n- So considering all the scenario we would cap the extreme values in the outliers to `0.01 and 0.99` percentile. By doing this we will be avoiding the risk of cluster overlapping.\n- There are some exclusions while doing outlier treatment.\n    - `child_mort`, `inflation`: High Child mortality  and higher inflation are our matter of concern so we will not do uppercapping for these features.\n    - `export`, `health`, `imports`, `total_fer` and `gdpp` : It has outlier at higher level. We will impute outlier to upper capping (0.99 percentile)\n    - `life_expec` : It has outlers bellow the lower hinge, But again it is our matter of concern so we will not impute these values.\n        ","c401df6b":"- Coutries (5 most) dire need of aid are: `['Burundi' 'Liberia' 'Congo, Dem. Rep.' 'Niger' 'Sierra Leone']`\n- It is intersting to see that from EDA we could get countries: `[Congo, Dem. Rep.' 'Niger' 'Sierra Leone]`","4e72be73":"**5.2.3 Choose one method based on the results**","7ed8dfcb":"Insights:\n- By comparing mean and barplot visualisation we can conclude that,\n\n> - Cluster 2 belongs to `Undeveloped` Countries,\n> - Cluster 1 belongs to `Developed` Countries\n> - Cluster 0 belongs to `Developing` Countries.\n\nFor better understanding the labels of KMean can be changed and labeled as, `{0: developed, 1:developing, 2: Undeveloped}`","79b3f911":"From above bar plot we could see the common countries in the profile of `gdpp`, `child_mort` and `income` are: \n> `Congo, Dem. Rep.`, `Niger`, `Sierra Leone`,`Central African Republic`","5ae65398":"## 7. Analysis (Undeveloped countries)","a4005818":"Insights:\n\n- The clusters of the single linkage are not truly satisfying. The single linkage method appears to be making clusters having sigle countries.\n\n- As single linkage didn't produce a good enough result for us to analyse the clusters. Hence, we need to go ahead and utilise the complete linkage method and then analyse the clusters once again.","427e47fb":"## 6. Model Selction","c611e58b":"Their range of all the features are different which indicates the need of standardising the data before we build the model. Since we need to compute the Euclidean distance between the data points, it is important to ensure that the attributes with a larger range of values do not out-weight the attributes with smaller range. Thus, scaling down of all attributes to the same normal scale is important here.","8bfd7d2f":"# <font color = Blue> **Clustering of Countries**\n    \n**Clustering of countries based on socio-economic factors for financial aid using `K-means` and `Hierarchial` Clustering methods**\n\nPrepared by : Santh Raul","2964f0fb":"## 3. Exploratory Data Analysis","649795cf":"### 4.1 Outlier Treatment","f4fd27d0":"### Business Case:\n\n\"HELP International\" is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\n \n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n\n### Problem statement:\n\n- Categorise the countries using some socio-economic and health factors that determine the overall development of the country. \n- Identify and Suggest the countries which in the direst need of aid. \n","66ac2adf":"**5.1.2 Run KMean with choosen K**","29d3ad9c":"Insights:\n\n- From the above Dendrograms, it is evident that 'Complete Linkage' give a better cluster formation compared to single linkage method.\n- So we will use Complete linkage output for our further analysis.\n- We could see 3 clusters fom the above dendogram","b8f808f3":"### 2.1 Reaading data set","1ac73ca0":"Insights from Geoplot:\n\n1. countries of `South Americal, africa and Asian continent` are having `low gdpp`.\n2. Mostly `african` contries are having `high child mortality`\n2. Countries of `Americal, africa, Asia and some of european` continent are having `low income`.","86dedc88":"**5.1.1 Single Linkage:** Here, the distance between 2 clusters is defined as the shortest distance between points in the two clusters.","4f3326b1":"### 4.3. Hopkins Statistics","0d6a603f":"\n---------------------------------------------------------\n| Statistics of the selected countries |\n| :-:\n\n|  | GDPP | INCOME | CHILD_MORT |\n| :---- | :----: | :----: | :----: |\n| Min | 231 | 609 | 89.3\n| Max | 399 | 1200 | 160 \n| Mean | 327 | 821 | 116 \n\n----------------------------------------------------------","7c10b0f2":"- `life_expec` are right skewed and all other features are leftskewed","84e9da28":"Insights:\n\nWe observe the following correlations from the plot.\n\n1. Most of the data point are 'NOT Normally' distributed\n2. From pairplot and heatmap we could observe that there are features with high correlations\n    > - gdpp and income are most highly correlated with correlation of 0.9\n    > - child_mortality and life_expentency are highly correlated with correlation of -0.89\n    > - child_mortality and total_fertility are highly correlated with correlation of 0.85\n    > - imports and exports are highly correlated with correlation of 0.74\n    > - life_expentency and total_fertility are highly correlated with correlation of -0.76","1deec8b1":"**Technical Approach:**\n\n1. Read, Inspect, Understand and Transform data<br>\n2. Exploratory data Analysis\n        a. Data cleaning\n        b. Univariate analysis\n        c. Bivariate analysis\n        \n4. Data preparation for clustering\n        a. Outlier Treatment\n        b. Feature Scaling\n        c. Hopkin Check\n\t\t\n5. Perform Clustering\n        a. KMean Clustering\n            i. choose K using both Elbow and Silhouette score\n            ii. Run K-Means with the chosen K\n            iii. Visulise the clusters\n            iv. Cluster profiling using \u201cgdpp, child_mort and income\u201d\n        b. Hierarchical Clustering\n            i. Use both Single and Complete linkage\n            ii. Choose one method based on the results\n            iii. Visualise the clusters\n            iv. Clustering profiling using \u201cgdpp, child_mort and income\u201d\n6. Final Model Selection and labellinga.\n        a. Select model based on cluster results\n\n7.\tAnalysis (Undeveloped Countries)\n\n8. Conclusion\n        a. Based on the analysis, choose the countries that are in need for the aid.\n        b. Choose the countries based on some socio-economic and health factors.","158a35a8":"**5.2.4 Visualisation and Cluster Analysis (Hierarchical Cluster)***","48293a02":"**5.1.3 Visualisation and Cluster Analysis (K Mean Cluster)**","f5529a1c":"Insights:\n\n- In th scater plot the clusters are clearly visible\n- From  the bar plot of clusters we could see that,\n> - Cluster 0 : Developing\n> - Cluster 1: Developed\n> - Cluste 2 : Undeveloped\n\n- We are intrested on cluster 2 in KMean Clusters","26d6156d":"**5.2.2 Complete Linkage:** Here, the distance between 2 clusters is defined as the `maximum` distance between points in the two clusters.","d1a61bda":"### 2.3 Data Conversion\/ Trasformation\n\nIn our dataframe, the `'imports'`, `'exports'` and `'health'` variable seems to be in `percentage of GDP per capita, and this can sometimes give a incorrect insight in our EDA.` So the % values to be converted to absolute values.","ecda4c58":"### 5.1 K- Mean Cluster","500ac9d9":"Insights:\n- In th scatter plot the clusters are clearly visible\n\n- From  the bar plot of clusters we could see that,\n> - Cluster 0 : Undeveloped\n> - Cluster 1: Developing\n> - Cluste 2 : Developed\n\nWe are intrested on cluster 0 as objective is to find top 5 undevelped countries","49b26784":"### 2.2 Inspect data set","ceff1fd3":"## 2. Read, Inspect, Understand and Transform data","8e6b2050":"### 5.2 Hierarchical Clustering","c3212ddf":"## 4. Data Preparation","89112e72":"Insights:\n- We got 'Hopkins Statistic' value is >0.8 tends to indicate the data is highly clustered,","a0375a58":"### 3.2 Bi-variate analysis","80f796fd":"From KMean Clusturing we could get top 5 undeveloped countries are:\n> `'Burundi' 'Liberia' 'Congo, Dem. Rep.' 'Niger' 'Sierra Leone'`","b6926c94":"### 3.1 Univariate Analysis"}}