{"cell_type":{"908afb83":"code","7fecd870":"code","13ea5a8d":"code","e82a4c1c":"code","cbc10f6c":"code","734a0d36":"code","369eb92c":"code","ec8d7d57":"code","3602096e":"code","68c88780":"code","53294453":"code","6441b59f":"code","028c2815":"code","d52f6250":"code","e7df5aaf":"code","ed5b364e":"code","b04951c9":"code","608b53a5":"code","ee730a99":"code","da2ece4f":"code","cc2fd33b":"code","2cbb146b":"code","fd16f730":"code","a34dc827":"code","8afed429":"code","9c6a732f":"code","9774100b":"code","f8846dbc":"code","0814e795":"code","acc3aec2":"code","2e3486ef":"code","4c49d068":"code","b5073edd":"code","2451781f":"code","74608bc4":"code","dc337b0b":"code","a7559c54":"code","5b87994c":"markdown","99722c5b":"markdown","3c96eba7":"markdown","04c2ad9f":"markdown","ed1db5c6":"markdown","814e388b":"markdown","081410a5":"markdown","dc7c8503":"markdown","6772f605":"markdown","ff9ee020":"markdown","f0750566":"markdown","74ee1c73":"markdown"},"source":{"908afb83":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\nprint(os.listdir(\"..\/input\"))","7fecd870":"google_data = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")","13ea5a8d":"type(google_data)","e82a4c1c":"google_data.head(10)","cbc10f6c":"google_data.tail()","734a0d36":"google_data.info()","369eb92c":"google_data.describe()","ec8d7d57":"google_data.shape","3602096e":"google_data.boxplot()","68c88780":"google_data.hist()","53294453":"google_data.isnull()","6441b59f":"#count the number of missing values in each column\ngoogle_data.isnull().sum()","028c2815":"google_data[google_data.Rating > 5]","d52f6250":"google_data.drop([10472],inplace = True)","e7df5aaf":"google_data[10470:10475]","ed5b364e":"google_data.boxplot()","b04951c9":"google_data.hist()","608b53a5":"threshold = len(google_data)*0.1 #10% of (my rows = 10841)\nthreshold","ee730a99":"google_data.dropna(thresh = threshold,axis = 1,inplace =True)","da2ece4f":"print(google_data.isnull().sum())","cc2fd33b":"google_data.shape","2cbb146b":"#Define a function impute median\ndef impute_median(series):\n    return series.fillna(series.median())","fd16f730":"google_data.Rating = google_data['Rating'].transform(impute_median)","a34dc827":"#Count the number of null values to each column\ngoogle_data.isnull().sum()","8afed429":"# modes of Categorical values\nprint(google_data ['Type'].mode())\nprint(google_data ['Current Ver'].mode())\nprint(google_data ['Android Ver'].mode())","9c6a732f":"#fill the missing categorical values with mode\ngoogle_data['Type'].fillna(str(google_data['Type'].mode().values[0]),inplace=True)\ngoogle_data['Current Ver'].fillna(str(google_data['Current Ver'].mode().values[0]),inplace=True)\ngoogle_data['Android Ver'].fillna(str(google_data['Android Ver'].mode().values[0]),inplace=True)          ","9774100b":"#count the number of null values in each column\ngoogle_data.isnull().sum()","f8846dbc":"# Lets convert Price,Reviews and Ratings into Numerical Values","0814e795":"# Lets convert Price,Reviews and Ratings into Numerical Values\ngoogle_data['Price']= google_data['Price'].apply(lambda x: str(x).replace('$','')if '$' in str(x) else str(x))\ngoogle_data['Price']=google_data['Price'].apply(lambda x: float(x))\ngoogle_data['Reviews']=pd.to_numeric(google_data['Reviews'],errors = 'coerce')","acc3aec2":"google_data['Installs']=google_data['Installs'].apply(lambda x: str(x).replace('+', '')if '+' in str(x) else str(x))\ngoogle_data['Installs']=google_data['Installs'].apply(lambda x: str(x).replace(',' , '')if ',' in str(x) else str(x))\ngoogle_data['Installs']=google_data['Installs'].apply(lambda x: float(x))","2e3486ef":"google_data.head(10)","4c49d068":"google_data.describe() #summary stats After Cleaning","b5073edd":"grp = google_data.groupby('Category')\nx = grp['Rating'].agg(np.mean)\ny = grp['Price'].agg(np.sum)\nz = grp['Reviews'].agg(np.mean)\nprint(x)\nprint(y)\nprint(z)","2451781f":"plt.figure(figsize=(12,5))\nplt.plot(x,'ro')\nplt.xticks(rotation=90)\nplt.show()","74608bc4":"plt.figure(figsize =(16,5))\nplt.plot(x,'*',color='b')\nplt.xticks(rotation=90)\nplt.title('Category wise Rating')\nplt.xlabel('Categories-->')\nplt.ylabel('Rating-->')\nplt.show()\n","dc337b0b":"plt.figure(figsize=(16,5))\nplt.plot(x,'r--',color='g')\nplt.xticks(rotation=90)\nplt.title('Category wise Pricing')\nplt.xlabel('Categories-->')\nplt.ylabel('Prices-->')\nplt.show()","a7559c54":"plt.figure(figsize =(16,5))\nplt.plot(x,'g^',color='m')\nplt.xticks(rotation=90)\nplt.title('Category wise Reviews')\nplt.xlabel('Categories-->')\nplt.ylabel('Reviews-->')\nplt.show()\n","5b87994c":"Read Data","99722c5b":"## Data Visualization","3c96eba7":"## Data Cleaning","04c2ad9f":"Remove columns that are 90% empty ","ed1db5c6":"## Data Impution and Manipulation","814e388b":"# Conclusion","081410a5":"On the basis of above Plots we can Conclude :","dc7c8503":"## Exploratory Data Analysis","6772f605":"* The top Category app that have received a highest Ratings are Event apps then Education and then Art & Design\n\n* People are mostly buying Finance app from Google play Store apps but the Ratings of Finance app have been a bit lower like 4.15 to 4.20.Then people are buying Family,Lifestyle and then medical apps.\n\n* Most of the Reviews people have given on Communication apps then Social apps and then on Game apps so these are the top three categories for Reviews.  ","ff9ee020":"Check how many ratings are more that 5 outliers","f0750566":"Fill the null values with appropriate values using aggregate functions such as mean,median and mode","74ee1c73":"Count the number of missing values in the Dataframe"}}