{"cell_type":{"25f22a79":"code","3a295549":"code","a5b1bca6":"code","cfd89225":"code","6c8e3fcc":"code","7aca80ce":"code","95aba374":"code","43f845af":"code","5b107c28":"code","50b4ac2d":"code","7277d89a":"code","c8ea294d":"code","05d76fb2":"code","274e4877":"code","e855570a":"code","6f47be85":"code","b67c7fe4":"code","2eb7b192":"code","01f7815f":"code","5dc1654a":"code","100e0613":"code","5389100a":"code","a52a6897":"code","7dfec1bf":"code","26938051":"markdown","7bc2a4e2":"markdown","9606767a":"markdown","e585bc24":"markdown","4a4544d9":"markdown","56d7b4ec":"markdown","294e90c8":"markdown"},"source":{"25f22a79":"import numba as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\n","3a295549":"data = pd.read_csv('sonar.all-data 2.csv', header = None)","a5b1bca6":"data.head()","cfd89225":"data.shape","6c8e3fcc":"data.isnull().sum()","7aca80ce":"data.describe()","95aba374":"data.value_counts()","43f845af":"data[60].value_counts()","5b107c28":"data.groupby(60).mean()","50b4ac2d":"# Separating data and labels\nx = data.drop(columns = 60, axis = 1)\ny = data[60]","7277d89a":"print(x)","c8ea294d":"print(y)","05d76fb2":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.1, stratify = y, random_state = 1)","274e4877":"print(x.shape)\nprint(x_train.shape)\nprint(x_test.shape)","e855570a":"print(x_train) # training data","6f47be85":"print(y_train) # training model","b67c7fe4":"model = LogisticRegression()","2eb7b192":"model","01f7815f":"model.fit(x_train, y_train)","5dc1654a":"# accuracy on training data\nx_train_predict = model.predict(x_train)\ntrain_accu = accuracy_score(x_train_predict, y_train) ","100e0613":"print(\"Accuracy of train data\",train_accu)","5389100a":"# accuracy on test data\nx_test_predict = model.predict(x_test)\ntest_accu = accuracy_score(x_test_predict, y_test) ","a52a6897":"print(\"Accuracy of test data\",test_accu)","7dfec1bf":"import_data = (0.0352,0.0116,0.0191,0.0469,0.0737,0.1185,0.1683,0.1541,0.1466,0.2912,0.2328,0.2237,0.2470,0.1560,0.3491,0.3308,0.2299,0.2203,0.2493,0.4128,0.3158,0.6191,0.5854,0.3395,0.2561,0.5599,0.8145,0.6941,0.6985,0.8660,0.5930,0.3664,0.6750,0.8697,0.7837,0.7552,0.5789,0.4713,0.1252,0.6087,0.7322,0.5977,0.3431,0.1803,0.2378,0.3424,0.2303,0.0689,0.0216,0.0469,0.0426,0.0346,0.0158,0.0154,0.0109,0.0048,0.0095,0.0015,0.0073,0.0067)\n\ninput_data_np_array = np.asarray(import_data)\n\n# reshape\ninput_data_reshape = input_data_np_array.reshape(1, -1)\n\nprediction = model.predict(input_data_reshape)\nprint(prediction)\n\nif (prediction[0] == 'R'):\n    print(\"Object is Rock\")\n    \nelse:\n    print(\"Object is Mine\")\n","26938051":"# Data Collection and Processing","7bc2a4e2":"### M = Mine , R = Rocks","9606767a":"# Importing necessary libraries","e585bc24":"# Traing and Test Data","4a4544d9":"# Predictive System","56d7b4ec":"# Model Training using Logistic Regression","294e90c8":"# Model Evaluation"}}