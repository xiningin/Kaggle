{"cell_type":{"7e5bfc8a":"code","6ddfe0a5":"code","44cb9965":"code","aa1b977d":"code","bd090939":"code","8701f3e9":"code","b532cb00":"code","4f319e96":"code","2ffc3131":"code","a348265c":"code","aa801b3e":"code","11c37a04":"code","4d4dae98":"markdown","38538db2":"markdown","34e20f37":"markdown","e82d35f9":"markdown","b04006e4":"markdown","1a0cfd6f":"markdown","1c09a4c8":"markdown","4915ae13":"markdown"},"source":{"7e5bfc8a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime as dt\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndef make_DataFrame(path):\n    tmp = pd.read_csv(path)\n    if (\"date\" in tmp.columns):\n        tmp[\"date\"] = pd.to_datetime(tmp[\"date\"]).dt.strftime('%m-%d')\n    if (\"time\" in tmp.columns):\n        tmp.drop('time',axis = 1 ,inplace = True)\n    print( tmp.tail() )\n    return tmp\n\ndef new_data(data):\n    pre = 0\n    tmp = []\n    for i in range(61):\n        tmp.append(data[i] - pre)\n        pre = data[i]\n    return tmp\n\n# for comparing with China\ndef Country_datasets(country):\n    tmp = data[data['Country\/Region'] == country]\n    tmp = tmp.groupby('date',as_index = False).sum()\n    tmp[\"Death_rate\"] = tmp[\"Deaths\"]\/ tmp[\"Confirmed\"] * 100\n    tmp[\"Recovered_rate\"] = tmp[\"Recovered\"]\/ tmp[\"Confirmed\"] * 100\n    return tmp","6ddfe0a5":"main_data = make_DataFrame('\/kaggle\/input\/coronavirusdataset\/Time.csv')","44cb9965":"time_age = make_DataFrame('\/kaggle\/input\/coronavirusdataset\/TimeAge.csv')","aa1b977d":"age = time_age.groupby(['age']).sum()['confirmed']\nplt.title(\"Confirmed number\")\nplt.bar(age.index, age.values , color = 'red')","bd090939":"main_data[\"Confirmed_rate\"] = main_data['confirmed'] \/ main_data['test']\nmain_data[\"Death_rate\"] = main_data['deceased'] \/ main_data['confirmed']\nmain_data[\"Recovered_rate\"] = main_data['released'] \/ main_data['confirmed']\nmain_data['negative_rate'] = main_data['negative'] \/ main_data['test']\n\nmain_data['new_confirmed'] = new_data(main_data['confirmed'])\nmain_data['new_recover'] = new_data(main_data['released'])\nmain_data['new_death'] = new_data(main_data['deceased'])\n\nmain_data['decreasing_confirmed'] = main_data['new_recover'] + main_data['new_death'] - main_data['new_confirmed'] ","8701f3e9":"main_data.drop(['test','negative'],axis = 1).tail()","b532cb00":"#main_data.to_csv('main_data.csv')","4f319e96":"# for Outlier\nmain_data_graph = main_data[main_data[\"date\"] > dt.datetime(2000,1,30,0,0).strftime('%m-%d') ]","2ffc3131":"x = 'date'\nplt.figure(figsize=(15, 7)) \nplt.plot(x,'Confirmed_rate',data = main_data_graph,label = 'confirmed_rate')\nplt.plot(x,'Death_rate',data = main_data_graph,label = 'death_rate')\nplt.plot(x,'Recovered_rate',data = main_data_graph,label = 'recovered_rate')\nplt.xticks(rotation = 90)\nplt.xlabel('date')\nplt.legend(fontsize = 15 ,loc = 'upper left')\n","a348265c":"data = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ndata['ObservationDate'] = pd.to_datetime(data[\"ObservationDate\"]) #time_data\ndata = data[data['ObservationDate'] >= dt.datetime(2020,1,31)]\ndata['ObservationDate'] = data['ObservationDate'].dt.strftime('%m-%d')\ndata['date'] = data['ObservationDate']  # rename\ndata.drop(['SNo','Last Update','Province\/State','ObservationDate'],axis = 1, inplace = True)\ndata_China = Country_datasets('Mainland China')\n\ndata_China.tail()","aa801b3e":"x = 'date'\nplt.figure(figsize=(15, 7)) \nplt.plot(x,'Death_rate',data = main_data_graph,label = 'death_rate')\nplt.plot(x,'Death_rate',data = data_China,label = 'China_death_rate')\n\nplt.xticks(rotation = 90)\nplt.xlabel('date')\nplt.title('death_rate')\nplt.legend(fontsize = 15 ,loc = 'upper left')","11c37a04":"x = 'date'\nplt.figure(figsize=(15, 7)) \nplt.plot(x,'Recovered_rate',data = main_data_graph,label = 'recovered_rate')\nplt.plot(x,'Recovered_rate',data = data_China,label = 'China_recovered_rate')\n\nplt.plot(main_data_graph[x], main_data_graph['Recovered_rate'] * 100 , label = 'recovered_rate * 100')\n\nplt.xticks(rotation = 90)\nplt.xlabel('date')\nplt.title('recovered_rate')\nplt.legend(fontsize = 15 ,loc = 'upper left')","4d4dae98":"# library & define function","38538db2":"# EDA: rate","34e20f37":"# main_data","e82d35f9":"# about Age","b04006e4":"Reference:\n\nhttps:\/\/www.kaggle.com\/peranto\/easy-looking-corona-dataset-ebola : Easy looking Corona Dataset, Ebola","1a0cfd6f":"# Comparing with China\nusing another dataset","1c09a4c8":"# load_dataset","4915ae13":"### create new feature values"}}