{"cell_type":{"e59ee218":"code","77be1461":"code","b9581af2":"code","ed472294":"code","1fde7e7c":"code","39f384f4":"code","c1425853":"code","6d791f2b":"code","36eb430c":"code","bc66d967":"code","4325756e":"code","24504da5":"code","9c81a8d9":"code","fda4222f":"code","30582ede":"code","ebfa3e3f":"code","5c447458":"code","2bb0fbbe":"code","c3e1d0f3":"code","2badf7ec":"code","a8d8cfe2":"code","bfef0878":"code","ae843544":"code","a345f05e":"code","4c39f9ff":"code","7f0f7475":"code","9c98459e":"code","5d851b8f":"code","4349db40":"code","6b4db3e7":"code","f3314e39":"code","cb744a43":"code","bce2fe4e":"code","efc752f8":"code","1f3ee9c3":"code","2947ae62":"code","15c72c86":"code","3073c607":"code","af11370c":"code","3f39a15c":"code","4d94c8bd":"code","c70eba12":"code","5c30c5aa":"code","a33c6339":"code","fd86be1f":"code","a2cc5acf":"code","1a9131cd":"code","c21f9e26":"code","98b0ecef":"code","f8671d72":"code","0d080b12":"code","0c5dc6b9":"code","8e7b063f":"code","4a51c09d":"code","8bd78c9f":"code","dbb76e65":"code","f97ea48f":"code","36063240":"code","1280babb":"code","2d2f2372":"code","1254c824":"code","9d2df583":"code","1cbf3894":"code","ffcc7b0b":"markdown","bebbd741":"markdown","d2959c6c":"markdown","717081ee":"markdown","0e87eddb":"markdown"},"source":{"e59ee218":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn import preprocessing\nfrom sklearn.datasets import load_digits\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nimport scipy.cluster.hierarchy as sch\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","77be1461":"data = pd.read_csv(\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","b9581af2":"data","ed472294":"import pandas_profiling","1fde7e7c":"data.profile_report()","39f384f4":"data.Gender","c1425853":"le = preprocessing.LabelEncoder()\ng = le.fit_transform(data.iloc[:,1])\nprint(g)","6d791f2b":"g.shape","36eb430c":"gender = pd.DataFrame(data = g, index = range(200), columns = [\"Gender\"])","bc66d967":"gender","4325756e":"data[\"Gender\"] = gender","24504da5":"data.head(20)","9c81a8d9":"data.describe()","fda4222f":"data.corr()","30582ede":"data[[\"Gender\", \"Age\"]].head(20)","ebfa3e3f":"data[data[\"Gender\"]>0].head(30)","5c447458":"data[data[\"Gender\"]<1].head(30)","2bb0fbbe":"data[\"Age\"].max()","c3e1d0f3":"data[\"Age\"].min()","2badf7ec":"data[\"Annual Income (k$)\"].max()","a8d8cfe2":"data[\"Annual Income (k$)\"].min()","bfef0878":"data[data[\"Spending Score (1-100)\"]>98]","ae843544":"data[data[\"Spending Score (1-100)\"]<2]","a345f05e":"data[data[\"Annual Income (k$)\"]>136]","4c39f9ff":"data.isnull().sum()","7f0f7475":"data.count()","9c98459e":"data.mean()","5d851b8f":"data.max()","4349db40":"age = data.groupby(\"Age\")","6b4db3e7":"age.count()","f3314e39":"age.mean()","cb744a43":"age.describe()","bce2fe4e":"plt.plot(data)","efc752f8":"data","1f3ee9c3":"plt.plot(data[\"Annual Income (k$)\"], data[\"Spending Score (1-100)\"], \"r\")\nplt.xlabel(\"Annual Income\", c=\"g\")\nplt.ylabel(\"Spending Score\", c=\"g\")","2947ae62":"plt.plot(data[\"Age\"], data[\"Annual Income (k$)\"], \"k\")\nplt.xlabel(\"Age\", c=\"g\")\nplt.ylabel(\"Annual Income\", c=\"b\")","15c72c86":"plt.scatter('Annual Income (k$)', 'Spending Score (1-100)', c=\"g\", s = 50, data=data)\nplt.xlabel(\"Annual Income\", c=\"b\")\nplt.ylabel(\"Spending Score\", c=\"b\")","3073c607":"plt.scatter('Age', 'Annual Income (k$)', c=\"r\", s = 50, data=data)\nplt.xlabel(\"Age\", c=\"b\")\nplt.ylabel(\"Annual Income\", c=\"b\")","af11370c":"gender1 = data.groupby(\"Gender\").size()","3f39a15c":"gender1","4d94c8bd":"plt.pie(gender1.values, labels = [\"Women \", \"Men\"] , autopct='%1.1f%%', radius = 1.5, textprops = {\"fontsize\" : 16}) \nplt.show()","c70eba12":"plt.hist(data.Gender)","5c30c5aa":"plt.hist(data.Age)","a33c6339":"age1 = data.groupby(\"Age\").size()","fd86be1f":"age1","a2cc5acf":"plt.boxplot(age1)","1a9131cd":"plt.boxplot(gender1)","c21f9e26":"X = data.iloc[:,1:].values","98b0ecef":"X","f8671d72":"kmeans = KMeans(n_clusters = 3, init = \"k-means++\")\nkmeans.fit(X)\nkmeans.cluster_centers_","0d080b12":"sonuclar = []\nfor i in range (1,11):\n    kmeans = KMeans(n_clusters = i, init = \"k-means++\", random_state=0)\n    kmeans.fit(X)\n    sonuclar.append(kmeans.inertia_)\n","0c5dc6b9":"plt.plot(range(1,11), sonuclar)","8e7b063f":"kmeans = KMeans(n_clusters = 6, init = \"k-means++\", random_state = 0)\nY_tahmin = kmeans.fit_predict(X)\nY_tahmin","4a51c09d":"X.shape","8bd78c9f":"data = load_digits().data\npca = PCA(4)","dbb76e65":"df = pca.fit_transform(X)","f97ea48f":"kmeans = KMeans(n_clusters = 5, init = \"k-means++\", random_state = 0)\nY_tahmin = kmeans.fit_predict(df)\ncentroids = kmeans.cluster_centers_\nY_tahmin","36063240":"y_pred = np.unique(Y_tahmin)\ncentroids = kmeans.cluster_centers_\nfor i in y_pred:\n    plt.scatter(df[Y_tahmin == i, 0], df[Y_tahmin == i, 1],  label = i)\n   \nplt.scatter(centroids[:,0], centroids[:,1], s = 100, color =\"k\" )\nplt.legend()\nplt.title(\"Kmeans\", c = \"b\")\nplt.show()","1280babb":"kmeans.predict([[1,19,15,39]])","2d2f2372":"kmeans.predict([[0,  30,  19,  72]])","1254c824":"ac = AgglomerativeClustering(n_clusters = 5, affinity = \"euclidean\", linkage = \"ward\")\nY_tahmin1 = ac.fit_predict(X)\nY_tahmin1\n","9d2df583":"y_pred1 = np.unique(Y_tahmin1)\nfor i in y_pred1:\n    plt.scatter(df[Y_tahmin1 == i, 0], df[Y_tahmin1 == i, 1],  label = i)\n   \nplt.legend()\nplt.title(\"HC\", c = \"b\")\nplt.show()","1cbf3894":"dendrogram = sch.dendrogram(sch.linkage(X, method = \"ward\"))","ffcc7b0b":"Mall Customer Segmentation Data\n\nI will use two cluster method for unsupervised learning:\n\n1)KMeans\n\n2)Hierarchical","bebbd741":"**Hierarchical Clustering**","d2959c6c":"![attract-customers-giveaways-design.gif](attachment:5f70b036-c5eb-4d98-ada5-9bddd04bab6f.gif)\n","717081ee":"**K-Means**","0e87eddb":"![icegif-853.gif](attachment:aa0e2cc4-90f2-4d91-bffd-6019c15cad0f.gif)"}}