{"cell_type":{"565df7e2":"code","3495f31b":"code","f444e48c":"code","e87fec66":"code","274e46e0":"code","457dc30d":"code","a977225b":"code","51ce184a":"code","a9d8efd4":"code","17386155":"code","19eca066":"code","b03e96ea":"code","ca010bfe":"code","a2ada354":"code","3fac8edb":"code","c5d56706":"code","407ee6b4":"code","43a73c28":"code","081141e6":"code","1ec66fde":"code","60d91ed8":"code","6dc77421":"code","e6ead99c":"code","86f8df7a":"code","3230400c":"code","c3ec910d":"code","b41551d6":"code","703f3bda":"code","6cd2b307":"code","a838792d":"code","c01483f2":"code","2ceacbc9":"code","23f8c132":"markdown","acacc468":"markdown","583598d5":"markdown","002f44b4":"markdown","7a3fe163":"markdown","d768bc0d":"markdown","d073b947":"markdown","c7db5b10":"markdown","e7ea9acf":"markdown","fb161d99":"markdown","249960b3":"markdown","fcf8872f":"markdown"},"source":{"565df7e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\nimport missingno as msno\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3495f31b":"import sklearn as sk\nfrom scipy import stats\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import mean_absolute_error","f444e48c":"from sklearn.linear_model import LogisticRegression","e87fec66":"df = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\ndf.head()","274e46e0":"df.shape","457dc30d":"df.dtypes","a977225b":"df.nunique()","51ce184a":"df = df.astype({\"sex\":'category',\"cp\":'category',\"fbs\":'category',\\\n                \"restecg\":'category',\"exang\":'category',\"slope\":'category',\"ca\":'category',\"thal\":'category',\"target\":'category'})","a9d8efd4":"df.dtypes","17386155":"df.info()","19eca066":"df.describe(include='all')","b03e96ea":"msno.bar(df)","ca010bfe":"sns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.set_theme(style=\"whitegrid\")","a2ada354":"sns.boxplot(data=df,palette=\"Set3\",linewidth=2.5,orient=\"h\",showfliers=False)","3fac8edb":"vals =['age', 'trestbps', 'chol', 'thalach', 'oldpeak']\nfig, ax = plt.subplots(1,5,figsize=(20,6))\nplt.suptitle('DISTRIBUTION PLOTS')\n# Histogram Plot for distribution and skewness\nsns.histplot(df['age'], kde=True, color='red', bins=20,ax=ax[0]) #Age\nplt.title('Age Distribution', fontsize=18)\nplt.xlabel('Age', fontsize=16)\nplt.ylabel('Count', fontsize=16)\n\nsns.histplot(df['trestbps'], kde=True, color='green', bins=20,ax=ax[1]) #Credit amount \nplt.title('trestbps', fontsize=18)\nplt.xlabel('trestbps', fontsize=16)\nplt.ylabel('Count', fontsize=16)\n\nsns.histplot(df['chol'], kde=True, color='blue', bins=20,ax=ax[2])#Duration\nplt.title('chol', fontsize=18)\nplt.xlabel('chol', fontsize=16)\nplt.ylabel('Count', fontsize=16)\n\nsns.histplot(df['thalach'], kde=True, color='blue', bins=20,ax=ax[3])#Duration\nplt.title('thalach', fontsize=18)\nplt.xlabel('thalach', fontsize=16)\nplt.ylabel('Count', fontsize=16)\n\nsns.histplot(df['oldpeak'], kde=True, color='blue', bins=20,ax=ax[4])#Duration\nplt.title('oldpeak', fontsize=18)\nplt.xlabel('oldpeak', fontsize=16)\nplt.ylabel('Count', fontsize=16)","c5d56706":"plt.figure(figsize=(15, 10))\nf, axes = plt.subplots(3, 3)\nsex = df['sex']\nsns.countplot(x= sex ,data =df,orient='v', ax=axes[0][0])#box plot fot sex column\ncp = df['cp']\nsns.countplot(x= cp ,data =df,order=cp.value_counts().sort_values().index,orient='v', ax=axes[0][1])#box plot fot job column\nfbs = df['fbs']\nsns.countplot(x= fbs ,data =df,orient='v', ax=axes[0][2])#box plot fot sex column\nrestecg = df['restecg']\nsns.countplot(x= restecg ,data =df,order=restecg.value_counts().sort_values().index,orient='v', ax=axes[1][0])#box plot fot job column\nexang = df['exang']\nsns.countplot(x= exang ,data =df,orient='v', ax=axes[1][2])#box plot fot sex column\nslope = df['slope']\nsns.countplot(x= slope ,data =df,order=slope.value_counts().sort_values().index,orient='v', ax=axes[1][1])#box plot fot job column\nca = df['ca']\nsns.countplot(x= ca ,data =df,order=ca.value_counts().sort_values().index,orient='v', ax=axes[2][0])#box plot fot job column\nthal = df['thal']\nsns.countplot(x= thal ,data =df,orient='v', ax=axes[2][2])#box plot fot sex column\ntarget = df['target']\nsns.countplot(x= target ,data =df,order=target.value_counts().sort_values().index,orient='v', ax=axes[2][1])#box plot fot job column","407ee6b4":"X= df.drop(columns='target',axis=1)\nY=df['target']","43a73c28":"X.head()","081141e6":"Y.head()","1ec66fde":"labels = Y\nfeatures =X\ntrain_features, test_features, train_labels, test_labels = train_test_split(features, labels, test_size = 0.2, stratify=labels,random_state = 2)","60d91ed8":"test_labels","6dc77421":"train_labels","e6ead99c":"train_features","86f8df7a":"test_features","3230400c":"test_features.info()","c3ec910d":"model = LogisticRegression(solver='liblinear')","b41551d6":"model.fit(train_features, train_labels);","703f3bda":"predictions = model.predict(train_features)","6cd2b307":"training_data_accuracy =  accuracy_score(predictions,train_labels)","a838792d":"training_data_accuracy","c01483f2":"predictions_test = model.predict(test_features)\ntest_data_accuracy =  accuracy_score(predictions_test,test_labels)\ntest_data_accuracy","2ceacbc9":"input_data=(37,1,2,130,250,0,1,187,0,3.5,0,0,2)\n\ninput_data_as_numpy_array=np.asarray(input_data)\n\ninput_data_as_numpy_array_reshaped = input_data_as_numpy_array.reshape(1,-1)\n\nprediction = model.predict(input_data_as_numpy_array_reshaped)\n\nprediction\n\nif (prediction[0]==0):\n    print('The pesron has at that point less chances of heart risk.')\nelse:\n    print('The pesron has at that point chances of heart risk.')\n","23f8c132":"## Importing the Dependencies\n\n-----------------------","acacc468":"## Spliting the Features and Target","583598d5":"## Introduction\n---------------------\n\n1. This database contains 76 attributes, but all published experiments refer to using a subset of 14 of them. \n2. In particular, the Cleveland database is the only one that has been used by ML researchers to  this date. \n3. The \"goal\" field refers to the presence of heart disease in the patient. It is integer valued from 0 (no presence) to 4.","002f44b4":"## Model Evaluation","7a3fe163":"## Statistical Measure about data\n\n-----------------------","d768bc0d":"## Building a Predictive System","d073b947":"## Model Training\n\n_____________________________","c7db5b10":"### Accuracy Score","e7ea9acf":"## Spliting the data into training data and test data","fb161d99":"# Heart_Rate_Prediction\n\n----------------------------------------------","249960b3":"## Feature Information\n\n-------------------------------\n\n1. age\n2. sex\n3. cp -> chest pain type (4 values)\n4. trestbps -> resting blood pressure\n5. chol-> serum cholestoral in mg\/dl\n6. fbs -> fasting blood sugar > 120 mg\/dl\n7. restcg -> resting electrocardiographic results (values 0,1,2)\n8. thalach -> maximum heart rate achieved\n9. exang -> exercise induced angina\n10. oldpeak  -> ST depression induced by exercise relative to rest\n11. slope -> the slope of the peak exercise ST segment\n12. ca -> number of major vessels (0-3) colored by flourosopy\n13. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect","fcf8872f":"## Data Colection and Pre-Processing\n\n----------------------------"}}