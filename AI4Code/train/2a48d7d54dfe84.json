{"cell_type":{"e77edf7a":"code","5f814ab9":"code","a43a5b15":"code","5706ba41":"code","4e676e72":"code","ba1206a0":"code","b74e945d":"code","07876f73":"code","d1d12834":"code","8d33e64c":"code","daf54d88":"code","398b6711":"code","ceedc22b":"code","99d41f03":"code","625608f8":"code","96124a00":"code","faed50ef":"code","9c5cbce4":"code","f2282775":"code","d9ac2560":"code","e3c394ed":"code","1dda594d":"code","c4402975":"code","ba7df286":"code","30221029":"code","a069b873":"code","7ee38047":"code","e49612d8":"code","31dee1c9":"code","e3d07ebb":"code","ecf21f7f":"code","945c579d":"code","2b42687c":"code","5e6eb92e":"code","0f158008":"code","7b2d5903":"code","c8cf7c54":"code","de5de1df":"code","75d0417c":"code","1c220f8b":"code","b9d1ce75":"code","d77c197c":"code","723f5cb8":"code","087bd576":"code","0531c551":"code","87fe16df":"code","5d90d188":"markdown","d929c1a4":"markdown","15dad3eb":"markdown","6b077540":"markdown","006dd713":"markdown","2d3a8505":"markdown","3e2c320c":"markdown","9225dd65":"markdown","4b4853ea":"markdown"},"source":{"e77edf7a":"import pandas as pd\nimport numpy as np","5f814ab9":"car = pd.read_csv('\/kaggle\/input\/quicker-car\/quikr_car.csv')","a43a5b15":"car.head()","5706ba41":"car.info()","4e676e72":"car['year'].unique()","ba1206a0":"car['Price'].unique()","b74e945d":"car['kms_driven'].unique()","07876f73":"car['fuel_type'].unique()","d1d12834":"car['name'].unique()","8d33e64c":"backup = car.copy()","daf54d88":"car = car[car['year'].str.isnumeric()]\n","398b6711":"car['year']=car['year'].astype(int)","ceedc22b":"car['year'].unique()","99d41f03":"car = car[car['Price']!=\"Ask For Price\"]","625608f8":"car['Price'] = car['Price'].str.replace(',','').astype(int)","96124a00":"car['Price'].head()","faed50ef":"car['kms_driven'] = car['kms_driven'].str.split(' ').str.get(0).str.replace(',','')","9c5cbce4":"car = car[car['kms_driven'].str.isnumeric()]","f2282775":"car","d9ac2560":"car['kms_driven'] = car['kms_driven'].astype(int)","e3c394ed":"car.info()","1dda594d":"car = car[~car['fuel_type'].isna()]","c4402975":"car.info()","ba7df286":"car['name'] = car['name'].str.split(' ').str.slice(0,3).str.join(' ')","30221029":"car.info()","a069b873":"car = car.reset_index(drop = True)","7ee38047":"car.describe()","e49612d8":"car = car[car['Price']<5e6].reset_index(drop = True)","31dee1c9":"car.describe()","e3d07ebb":"car.to_csv('cleaned car.csv')","ecf21f7f":"x = car.drop(columns = 'Price')","945c579d":"y = car['Price']","2b42687c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x,y, test_size=0.2)","5e6eb92e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.pipeline import make_pipeline","0f158008":"ohe = OneHotEncoder()\nohe.fit(x[['name','company','fuel_type']])","7b2d5903":"column_trans = make_column_transformer((OneHotEncoder(categories= ohe.categories_),['name','company','fuel_type']), remainder = 'passthrough')","c8cf7c54":"lr=LinearRegression()","de5de1df":"pipe = make_pipeline(column_trans, lr)","75d0417c":"pipe.fit(X_train,y_train)","1c220f8b":"y_pred = pipe.predict(X_test)","b9d1ce75":"r2_score(y_test,y_pred)","d77c197c":"scores = []\nfor i in range(1000):\n    X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=i)\n    lr=LinearRegression()\n    pipe=make_pipeline(column_trans,lr)\n    pipe.fit(X_train,y_train)\n    y_pred=pipe.predict(X_test)\n    scores.append(r2_score(y_test,y_pred))","723f5cb8":"np.argmax(scores)","087bd576":"scores[np.argmax(scores)]","0531c551":"X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=np.argmax(scores))\nlr=LinearRegression()\npipe=make_pipeline(column_trans,lr)\npipe.fit(X_train,y_train)\ny_pred=pipe.predict(X_test)\nr2_score(y_test,y_pred)","87fe16df":"pipe.predict(pd.DataFrame(columns=X_test.columns, data=np.array(['Audi A4 1.8','Audi', 2018,1000,'Petrol']).reshape(1,5)))","5d90d188":"- Name preprocessing","d929c1a4":" - Price entity cleaning","15dad3eb":"## Dataset issues\n- year has many non-year values\n- year object to int\n- price has string values\n- price object to int\n- kms_driven object to int\n- kms_driven as some nan values\n- fuel_type as nan values\n- keeping only  names in names","6b077540":"- year cleaning","006dd713":"- fuel type cleaning","2d3a8505":" - Kms_driven cleaning","3e2c320c":"## Model","9225dd65":"- Removing Highly diviating Values","4b4853ea":"# Cleaning"}}