{"cell_type":{"d1ede96a":"code","c791a282":"code","80affb9c":"code","bf6a1d71":"code","72f2d016":"code","7b12e4a1":"code","1a6120e0":"code","b83c170d":"code","1dd398b7":"code","cbfeee38":"code","760fd0bd":"code","fb61d203":"code","0f931ed9":"code","915f09c4":"code","ab7e145f":"code","128ef51e":"code","c2004680":"code","b400272e":"code","79623333":"code","55e81e85":"code","7f967e70":"code","4c2b812a":"code","9e840fd5":"code","9203f9ae":"code","04318444":"code","efd614ce":"code","aeb829fa":"code","4df2a5ae":"code","f471fd82":"code","554325f6":"code","786e5a8d":"code","47ab2d82":"code","353506f9":"code","ee539c00":"code","9c22307f":"code","d53b05ea":"code","f504e2bf":"code","30d92e70":"code","945343bc":"markdown","3fb553fb":"markdown","12c9534e":"markdown","dbdf2007":"markdown","dc54c45c":"markdown","aa8308c1":"markdown","44547701":"markdown","f21d2b88":"markdown","4c7844c2":"markdown","008ce099":"markdown","07dfe90c":"markdown","b31df8e8":"markdown","5cc332cd":"markdown"},"source":{"d1ede96a":"import warnings\nwarnings.filterwarnings('ignore')","c791a282":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","80affb9c":"movies = pd.read_csv('..\/input\/movielens-dataset\/movies.csv')\nratings = pd.read_csv('..\/input\/movielens-dataset\/ratings.csv')","bf6a1d71":"movies.head()","72f2d016":"ratings.tail()","7b12e4a1":"ratings.describe()","1a6120e0":"dataset = pd.merge(movies, ratings, how='left', on='movieId')","b83c170d":"dataset.tail()","1dd398b7":"dataset.head()","cbfeee38":"genres = []\nfor genre in movies.genres:\n    x = genre.split('|')\n    #print(x)\n    for i in x:\n        if(i not in genres):\n            genres.append(str(i))","760fd0bd":"genres","fb61d203":"movies.title.describe()","0f931ed9":"titles = []\nfor title in movies.title:\n    if(title not in titles):\n        titles.append(str(title))","915f09c4":"titles","ab7e145f":"highest_number_of_rating = dataset.groupby('title')[['rating']].count()\n\n# List of 10 movies with high number of ratings\nhighest_number_of_rating = highest_number_of_rating.nlargest(10, 'rating')","128ef51e":"highest_number_of_rating.head()","c2004680":"highest_number_of_rating.shape","b400272e":"table = dataset.pivot_table(index='title', columns='userId', values='rating')","79623333":"table.shape","55e81e85":"table.tail()","7f967e70":"table.head(10)","4c2b812a":"\ndataset.rating.value_counts().sort_values().plot(kind='barh')","9e840fd5":"from scipy.sparse import csr_matrix\nfrom  sklearn.neighbors import NearestNeighbors","9203f9ae":"table","04318444":"table = table.fillna(0)","efd614ce":"table","aeb829fa":"table.values","4df2a5ae":"matrix = csr_matrix(table.values)","f471fd82":"model_knn = NearestNeighbors(metric= 'cosine', algorithm= 'brute')\nmodel_knn.fit(matrix)","554325f6":"user_query_index = np.random.choice(table.shape[1])\nuser_query_index","786e5a8d":"table.index[user_query_index]","47ab2d82":"table.iloc[user_query_index, :]","353506f9":"distances, indices = model_knn.kneighbors(table.iloc[user_query_index, :].values.reshape(1, -1), n_neighbors = 6)","ee539c00":"for i in range(0, len(distances.flatten())):\n    # the below line will be printed anyway\n    # we always start i = 0\n    # just getting the variable i ready to print for which book we are\n    # generating the recommendation for:\n    if i == 0:\n        print('Recommendation for {0}:\\n'.format(table.index[user_query_index]))\n    else:\n        print('{0}: {1}, with distance of {2}:'.format(i, table.index[indices.flatten()[i]], distances.flatten()[i]))","9c22307f":"from sklearn.metrics.pairwise import linear_kernel","d53b05ea":"cosine = linear_kernel(matrix, matrix)\ncosine","f504e2bf":"def recommendations(title):\n    idx = user_query_index\n    print(idx)\n    scores = list(enumerate(cosine[idx]))\n    scores = sorted(scores, key=lambda x: x[1], reverse=True)\n    scores = scores[1:5]\n    print(scores)\n    movie_indices = [i[0] for i in scores]\n    print(movie_indices)\n    return table.iloc[movie_indices]","30d92e70":"recommendations(table.index[user_query_index])","945343bc":"## Movies that received the highest number of ratings from User\n \nnumber of ratings from different user for a single movie ","3fb553fb":"# Recommendation with Cosine similarity","12c9534e":"## Classifying different ratings","dbdf2007":"## Movies rated by users","dc54c45c":"#### table.shape[0] = 668 (all the userId)\n#### table.shape[1] = 10323 ( all the book titles)\n> we are randomly choosing a book tiltle to get recommendations for that specific book.","aa8308c1":"> It can be seen from the below table that the min and max rating from the user is 0.5 and 5.0 respectively. The average rating value is 3.5.\n\n> total user = 668\n\n>total movie = 149532","44547701":"## Collaborative filtering with KNN (K- nearest neighbor)","f21d2b88":"# Importing the MovieLens Dataset","4c7844c2":"## Generating recommendation using KNN for the selected movie","008ce099":"## List of all Genres","07dfe90c":"#### We are randomly choosing a a movie to generate recommendation for using KNN","b31df8e8":"## List of all Movie titles","5cc332cd":"## Data exploration"}}