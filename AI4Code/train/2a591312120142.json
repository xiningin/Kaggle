{"cell_type":{"9f18be00":"code","1f8dda5e":"code","459c47b9":"code","68dbe9a2":"code","7b05d494":"code","0631eba8":"code","f4433167":"code","84701a77":"code","b9952368":"code","7b16ff8d":"code","f90bf546":"code","b3c66200":"code","e5658cd1":"code","8d5df280":"code","1bd4d033":"code","c4b76d52":"code","1625c009":"code","393f922e":"code","4f9208a4":"code","970fce46":"code","098b0631":"code","5abcae4f":"code","b6d989de":"code","19ea97ae":"code","7e76034c":"code","71b14b04":"code","5e735017":"code","e84db34a":"code","e1ed1cf9":"code","5e392953":"code","153b3570":"code","e35f355c":"code","54eae996":"code","f7fc08ab":"code","59713ed3":"code","61ef2842":"code","c8a9dd63":"code","d5bd7b1f":"code","f789f1de":"code","311b7af8":"code","ad2f90fe":"code","1586b82b":"code","2ab2ac17":"code","1932c47e":"code","6679903e":"code","5a54a4bd":"code","d01f8045":"code","41264ed5":"code","3e500a6d":"code","fa46ed52":"code","28d7927d":"code","a2fa51a2":"code","5db3c2ab":"code","8c81346a":"code","feeef838":"code","28a79dae":"code","52968d20":"code","5b665358":"code","3d2d02c4":"code","ecdc91ae":"code","45bf6990":"code","bafb806f":"code","f5c9d6e7":"code","27d1e42f":"code","54fb0277":"code","b0f52b67":"code","a0b020ed":"code","4d143846":"code","77aa83ed":"code","b4cc5b20":"code","f2283890":"code","20453d40":"code","8cc1df89":"code","739a6b34":"code","65aeb0e4":"code","20de9685":"code","ed85395b":"code","5eeb8dfb":"code","ae2f537f":"code","98b36874":"code","2b9d8385":"markdown","b28e5208":"markdown","7d48bb02":"markdown","1d763536":"markdown","94839d25":"markdown","3e31a05d":"markdown","9e46ce73":"markdown","6d09af9d":"markdown","6dd3c9fc":"markdown","eac93698":"markdown","005e998b":"markdown","0293d480":"markdown","c73ef238":"markdown","938a8336":"markdown","8c15c30a":"markdown","64c80783":"markdown","44ad7794":"markdown","94f22772":"markdown","fee4987f":"markdown","ac60d9fa":"markdown","b0f687c2":"markdown","7230caa2":"markdown","15c22a60":"markdown","88c7dc8c":"markdown","a5a5caf1":"markdown","3724a854":"markdown","eb7c47eb":"markdown","f69ac6b8":"markdown","c07fc30a":"markdown","15ea4c1b":"markdown","1351543d":"markdown","3087d4ca":"markdown","592dea67":"markdown","2779869c":"markdown","76e8ecc7":"markdown","bd017f6b":"markdown","b85aac50":"markdown","724f43c9":"markdown","342113cb":"markdown","9429d371":"markdown","051afcab":"markdown","f35ba398":"markdown","8fca2daf":"markdown","26949023":"markdown","b4349aff":"markdown","d70fa9e5":"markdown","526f3375":"markdown","364e4b6f":"markdown","e3825ffe":"markdown","5925b0ad":"markdown","37b9e900":"markdown","5fa3a543":"markdown","1b50ab6b":"markdown","2de2534b":"markdown","d7616ce4":"markdown","99372c4c":"markdown","0856edad":"markdown","3f5eb5da":"markdown","3f51d9b6":"markdown","46207bc3":"markdown","500c4cae":"markdown","49b60405":"markdown","a9f49bf6":"markdown","97348e88":"markdown"},"source":{"9f18be00":"pip install plotly==5.1.0","1f8dda5e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","459c47b9":"df = pd.read_csv('..\/input\/top-play-store-games\/android-games.csv')\ndf","68dbe9a2":"df.shape","7b05d494":"df.columns","0631eba8":"df.info()","f4433167":"df.isnull().sum()","84701a77":"df['total ratings'].value_counts()","b9952368":"df['title'].value_counts()","7b16ff8d":"df['paid'].value_counts(normalize=True)","f90bf546":"df.columns","b3c66200":"df[\"category\"].unique()","e5658cd1":"df[\"category\"].nunique()","8d5df280":"df.describe()","1bd4d033":"df.sample(10)","c4b76d52":"df['installs'] = df['installs'].str.replace( '0.M', '000.000').str.strip()\ndf['installs']","1625c009":"df['installs'] = df['installs'].str.replace( '0.k', '000').str.strip()\ndf['installs']","393f922e":"df['installs'].value_counts()","4f9208a4":"df['installation_in_million'] = df['installs'].str.split(\".\").str.join('').astype('int')\/1000000\ndf['installation_in_million']","970fce46":"df['installation_in_million'].value_counts()","098b0631":"df.sample(10)","5abcae4f":"df.info()","b6d989de":"df = df.drop(\"installs\", axis=1)\ndf","19ea97ae":"# DO NOT RUN this part under comment not to cause any conflict\/error. \n# This just gives an alternative way for conversion\n\n# def in_thousand (inst):\n#     if inst == '500.0 k':\n#         return '0.5 M' \n#     elif inst == '100.0 k':\n#         return '0.1 M'\n#     else:\n#         return inst\n\n# df['installs']= df['installs'].apply(in_thousand)\n\n# df['installs']= df['installs'].str.replace( 'M', '').str.strip().astype('float')\n\n# df= df.rename(columns={'installs': 'installation_in_million'})\n\n# df['installation_in_million'].value_counts()","7e76034c":"df.category.nunique()","71b14b04":"df.category.value_counts()","5e735017":"df.groupby('category')[['average rating']].mean().sort_values(by = 'average rating', ascending = False)","e84db34a":"growth_30 = df.groupby('category')[['growth (30 days)']].mean().sort_values(by = 'growth (30 days)', ascending = False)\ngrowth_30.head()","e1ed1cf9":"growth_60 = df.groupby('category')[['growth (60 days)']].mean().sort_values(by = 'growth (60 days)', ascending = False)\ngrowth_60.head()","5e392953":"df.price.value_counts() ","153b3570":"df.paid.value_counts() ","e35f355c":"df.paid.value_counts(normalize=True) ","54eae996":"df.head()","f7fc08ab":"def paid_unpaid(paid):\n    if paid == True:\n        return 'Paid'\n    elif paid == False:\n        return 'Free'\n    else:\n        return paid","59713ed3":"df['paid']= df['paid'].apply(paid_unpaid)","61ef2842":"df.head()","c8a9dd63":"df.groupby(['paid', 'average rating'])[['installation_in_million']].mean()","d5bd7b1f":"df.groupby(['paid', 'average rating'])[['installation_in_million']].sum()","f789f1de":"popular_games = df[df['rank'] <= 5][['rank','title','category', 'total ratings', 'installation_in_million', '5 star ratings']]\npopular_games","311b7af8":"top_10_by_total_ratings = df.sort_values(by='total ratings', ascending=False)[['title','category', 'installation_in_million', '5 star ratings', 'total ratings']].head(10)\ntop_10_by_total_ratings","ad2f90fe":"# Barplot with Plotly\n\nfig = px.bar(top_10_by_total_ratings, x= 'title', y='total ratings', hover_data = top_10_by_total_ratings[['category']], color='category', title='Top 10 Games By Total Ratings')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","1586b82b":"top_10_by_installation = df.sort_values(by='installation_in_million', ascending=False)[['title','category', 'installation_in_million', '5 star ratings', 'total ratings']].head(10)\ntop_10_by_installation","2ab2ac17":"# Barplot with Plotly\n\nfig = px.bar(top_10_by_installation, x= 'title', y='installation_in_million', hover_data = top_10_by_installation[['category']], color='category', title='Top 10 Games By Installation')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","1932c47e":"# Barplot with Plotly for whole data set\n\nfig = px.scatter(df, x= 'total ratings', y='5 star ratings', hover_data = df[['title', 'installation_in_million']], color='category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","6679903e":"# Barplot with Plotly for Top 10 Games By Total Ratings\n\nfig = px.scatter(top_10_by_total_ratings, x= 'total ratings', y='5 star ratings', hover_data = top_10_by_total_ratings[['title', 'installation_in_million']], color='category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","5a54a4bd":"# Barplot with Plotly for Top 10 Games By Installation\n\nfig = px.scatter(top_10_by_installation, x= 'total ratings', y='5 star ratings', hover_data = top_10_by_installation[['title', 'installation_in_million']], color='category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","d01f8045":"#with Seaborn\n\nplt.figure(figsize=(10,4))\nsns.countplot(x = \"category\", data = df)\nplt.xticks(rotation = 45);","41264ed5":"#withPlotly\n\nfig = px.histogram(df, x=\"category\", title='Game Categories')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","3e500a6d":"growth_30 = df.groupby('category')[['growth (30 days)']].mean().sort_values(by = 'growth (30 days)', ascending = False)\ngrowth_30.head()","fa46ed52":"a = growth_30.index\na","28d7927d":"plt.figure(figsize=(20,7))\nsns.barplot(x='category', y='growth (30 days)', data=df, order=a).set(xlabel=\"Game Categories\", ylabel='Growth (30 Days')\nplt.xticks(rotation = 60)\nplt.title('The Growth of Android Games in the First 30 Days by Category', fontdict={'fontsize': 16})\nplt.show();","a2fa51a2":"# df = px.data.gapminder().query(\"country=='Canada'\")\nfig = px.bar(df, x='category', y='growth (30 days)', title='The Growth of Android Games in the First 30 Days by Category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","5db3c2ab":"growth_60 = df.groupby('category')[['growth (60 days)']].mean().sort_values(by = 'growth (60 days)', ascending = False)\ngrowth_60.head()","8c81346a":"b = growth_60.index\nb","feeef838":"plt.figure(figsize=(20,7))\nsns.barplot(x='category', y='growth (60 days)', order=b, data=df).set(xlabel=\"Game Categories\", ylabel='Growth (60 Days')\nplt.xticks(rotation = 60)\nplt.title('The Growth of Android Games in the First 60 Days by Category', fontdict={'fontsize': 16})\nplt.show();","28a79dae":"df['total ratings'].describe()","52968d20":"df[\"total ratings\"].describe().apply(lambda x: format(x, 'f'))","5b665358":"#Boxplot with Seaborn\n\nplt.figure(figsize=(15,5))\nsns.boxplot(data=df, x =\"total ratings\");","3d2d02c4":"#Boxplot with Plotly\n\nfig = px.box(df, x= 'total ratings', hover_data = df[['title','category']])\nfig.update_traces(quartilemethod=\"inclusive\")\nfig.show()","ecdc91ae":"#Histogram with Seaborn by 'total ratings'\n\nplt.figure(figsize = (10,6))\nsns.histplot(df['total ratings'], bins = 50);","45bf6990":"#Histogram with Plotly by 'total ratings'\n\nfig = px.histogram(df, x= 'total ratings', title='Total Ratings of the Games')\nfig.show()","bafb806f":"df.skew()","f5c9d6e7":"# With Seaborn\n\nplt.figure(figsize=(15,5))\nsns.histplot(data=df, x =\"installation_in_million\");","27d1e42f":"# With Plotly\n\nfig = px.histogram(df, x= 'installation_in_million', title='The Number of Games Installed in Millions')\nfig.show()","54fb0277":"# Boxplot With Plotly\n\nfig = px.box(df, x= 'installation_in_million', hover_data = df[['title','category']])\nfig.update_traces(quartilemethod=\"inclusive\")\nfig.show()","b0f52b67":"df['paid'].value_counts(normalize=True)*100","a0b020ed":"values_paid = df.paid.value_counts()\nvalues_paid","4d143846":"x = values_paid.values\nx","77aa83ed":"y = values_paid.index\ny","b4cc5b20":"plt.figure(figsize=(9,6))\nplt.pie(x, labels = y, autopct='%1.1f%%')\nplt.show()","f2283890":"# Pie Chart With Plotly\n\npaid_free= df['paid'].value_counts()\nlabel =['Free','Paid']\nfig = px.pie(paid_free, values=df['paid'].value_counts().values, names=label,\n             title='Paid & Free Games')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","20453d40":"category_ratings = df.groupby('category')['total ratings'].mean()\ncategory_ratings","8cc1df89":"plot_order = df.groupby('category')['total ratings'].mean().sort_values(ascending=False).index.values","739a6b34":"# Barplot With Seaborn\n\nplt.figure(figsize=(10,6))\nsns.barplot(data = df, x = category_ratings.index, y = category_ratings.values, order=plot_order).set(xlabel=\"Game Categories\", ylabel='Total Ratings')\nplt.xticks(rotation = 60)\nplt.title('Game Categories by Total Ratings')\nplt.show();","65aeb0e4":"# Barplot With Plotly\n\nfig = px.bar(category_ratings, x= category_ratings.index, y=category_ratings.values, labels={'x': 'Games Categories','y':'Total Ratings'})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","20de9685":"installation_by_category = df.groupby('category')['installation_in_million'].mean().sort_values(ascending =False)\ninstallation_by_category","ed85395b":"index1 = installation_by_category.index\nindex1","5eeb8dfb":"value1 = installation_by_category.values\nvalue1","ae2f537f":"# Barplot with Seaborn\n\nplt.figure(figsize=(12,6))\nsns.barplot(data = df, x = index1, y = value1).set(xlabel=\"Game Categories\", ylabel='Instalation in Million')\nplt.xticks(rotation = 60)\nplt.title('Game Categories by Installation')\nplt.show();","98b36874":"# Barplot with Plotly\n\nfig = px.bar(installation_by_category, x= index1, y=value1, labels={'x': 'Games Categories','y':'Install in Millions'})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","2b9d8385":"**Explanation:** in \"intalls\" column we replaced '0.M' and '0.k' with '000.000' and '000'.","b28e5208":"**Explanation:** we have checked the values, numbers and type of variable in our new column named 'installation_in_million'.","7d48bb02":"**Explanation:** Since we don't need the former column 'installs' we have dropped it from our DataFrame.","1d763536":"df.value_counts() [link text](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.Series.value_counts.html)","94839d25":"**Explanation:** The function of df.isnull().sum() is one of the best way to find out the number of missing values in the dataset. At hand, thankfully it looks like there have been no missing values for the given dataset whisch is miracle for real world.","3e31a05d":"df.columns [link text](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.columns.html)","9e46ce73":"**Explanation:** df.columns atribute has returned all column labels of the given DataFrame.","6d09af9d":"As seen above, the 'paid' column has boolean values of True and False, which actually represent Unpaid and Paid meaning, respectively. We decide to change the names of this values in this column as 'Unpaid' and 'Paid' for more readibility and clearity.  ","6dd3c9fc":"df.skew() [link text](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.skew.html)","eac93698":"**The Number of Android Games Installed**","005e998b":"**Method-1 using split(), replace(), join() and astype() methods for the conversion of \"installs\" column :**","0293d480":"**Explanation:** When we make comparison;\n\nWhile the first 5 game categories are 'CASINO', 'TRIVIA', 'CARD', 'ADVENTURE' and 'ROLE PLAYING', respectively, which need to be grew in the first 30-day period, 'BOARD', 'CARD', 'STRATEGY', 'ACTION' and'RACING' are the first 5 game categories need to be grew the first 60-day period. The category of 'CARD' has been common in both groups. This may result from either being popular among the players or their deficiencies such as bug, development, needs of players etc. So implication on this subject needs more detailed examination and\/or domain exprience.  ","c73ef238":"**Explanation:** The highest 5 android games showing spectacular growth in 30 days are Casino, Trivia, Card, Adventure and Role Playing ones, respectively.","938a8336":"**PREFACE**\n\nIn this Exploratory Data Analysis (EDA), we will examine the dataset named as \"Top Games on Google Playstore\" under the 'android-games.csv' file at Kaggle website [link text](https:\/\/www.kaggle.com\/dhruvildave\/top-play-store-games). \n\nThis study, in general, will cover what any beginner can do as much as possible for a better understanding with the given dataset not only by examining its various aspects but also visualising it.\n\nAccording to description, \"this is a dataset of top 100 games of each category of games on Google Play Store along with their ratings and other data like price and number of installs.\"\n\nNOTE: For a better understanding and comprehending the coding, this author will try to give pandas official links of methods\/atributes.  \n\nNow it's time to jump on the dataset.","8c15c30a":"**The Growth of Android Games in Time**","64c80783":"**The first step is to import the required libraries.**\n\nFor the visualization, the study will use both Seaborn and Plotly's interactive environment for making a better and meaningful comparison with related subjects.","44ad7794":"**VISUALIZATION**","94f22772":"**The Relation Between \"total ratings\" & \"5 star ratings\"**","fee4987f":"**The Number of Installations by Category**","ac60d9fa":"If your plotly module is not in your working environment, please download plotly and run the following codes.\n\nFirst --> pip install plotly==5.1.0","b0f687c2":"**The Growth of Android Games  in the First 30 Days by Category**","7230caa2":"**Explanation:** When we examine the 'installation_in_million' column after grouping 'paid' and 'average rating' columns, unpaid android games with average rating '4' are mostly downloaded by the game lowers. In general, the unpaid android games have higher ratings in numbers than the paid android games. \n\nMoreover paid android games deserve a special attention since its number is not enough to make a robust implication due to the lack of unbiased, fair and sufficient data for paid games. Nevertheles, it can be clearly captured that all paid android games have a high average rating of '4'.  ","15c22a60":"**Explanation:** When we examine the 'category' column, there have 17 categories in different names. In addition to 15 out of 17 android games have the same size, Game Card and the Game Word categories are a little more than the others.","88c7dc8c":"**The Average Ratings of Paid\/Unpaid Games**","a5a5caf1":"pd.unique() [link text](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.unique.html)\n\ndf.nunique() [link text](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.nunique.html)","3724a854":"The boxplot\/whisker plot demonstrates that there has also been highly right skewed distribution with possible outliers for Clash of Clans with 500 Million installations and Candy Crush Saga with 1 Billion installations.\n\nSize of the outliers definitely affect mean value and distributions.\nAs mentioned above, it would be reasonable to use median for further analysis.","eb7c47eb":"**Total Ratings by Category**","f69ac6b8":"**Explanation:** the object (string) values in \"intalls\" column were assigned as 'int' type in a new column named 'installation_in_million' after being splitted and joined.","c07fc30a":"**Explanation:** When we examine the 'price' and 'paid' columns, almost all android games, 1723 out of 1730, are free (unpaid). \n\nAs shown above, there are only 7 paid games, so it can be concluded that the data is highly inclined (biased) to  unpaid android games; therefore, it should be cautious for making impications for paid games\n\nPrice ranges from 0 (free) to 7.49 including 0.00 (1723), 0.99 (1), 1.49 (1), 1.99 (3), 2.99 (1) and 7.49 (1). Unpaid games consist of 99.6% of all games installed.","15ea4c1b":"How to read and assign the dataset as df. [link text](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.read_csv.html) (You can define it as what you want instead of df)","1351543d":"Check how many records are in the dataset and if we have any NA.\n\ndf.info() [link text](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.info.html)\n\ndf.isnull() [link text](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.isnull.html)\n\ndf.sum() [link text](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.sum.html)","3087d4ca":"**Explanation:** we have checked our new column named 'installation_in_million' at the end of our DataFrame.","592dea67":"df.shape() [link text](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.shape.html)","2779869c":"**Explanation:** for numerical variables, df.describe() generates descriptive statistics including count, mean, std, min, first, second and third quartiles and max. However, any analyst should be careful since some values for some columns may NOT give meaningful implications. ","76e8ecc7":"**Free  & Paid Android Games**","bd017f6b":"In this Exploratory Data Analysis (EDA), we have examined the dataset named as \"Top Games on Google Playstore\" under the 'android-games.csv' file at Kaggle website.\n\nThis study, in general, has covered what any beginner can do as much as possible for a better understanding with the given dataset not only by examining its various aspects but also visualising it.\n\nFor a better understanding and comprehending the coding, pandas official links of methods\/atributes have mostly been attached next to methods used in the analysis. \n\nThank you for your time.I hope you all like it and may it contribute to your knowledge .","b85aac50":"Our dataset demonstrates;\n\n*   11 numeric variable including (8) int64 and (3) float64 data types out of 11.\n\n*   4 non-numeric variable including (3) object and (1) bool types out of 4.\n\n**Special Note:** Although \"Installs\" column has a data type of object, for further analysis it's better to convert its values into either integer or float data type. ","724f43c9":"As seen in the histogram, much of the ratings are between 0 and 500.000 total ratings range.\n\nSimilar to boxplot\/whisker plot, histogram demonstrates a number of outliers including extreme ones, which increase mean value and create a huge gap between median and mean. \n\nAs a general rule of thumb [link text](https:\/\/community.gooddata.com\/metrics-and-maql-kb-articles-43\/normality-testing-skewness-and-kurtosis-241) :\n\n*   If skewness is less than -1 or greater than 1, the distribution is highly skewed.\n*   If skewness is between -1 and -0.5 or between 0.5 and 1, the distribution is moderately skewed.\n*   If skewness is between -0.5 and 0.5, the distribution is approximately symmetric.\n\nSo all extremly high skewness values made by outliers, especially extreme ones in our case, causes highly right skewed distribution for all attributes.\n\nInstead of using mean values, using the meadian is going to make much more sense for further analysis.","342113cb":"**Top 10 Games By Total Ratings**","9429d371":"As seen in the scatter plot, it looks like there have been a positive relationship between \"total ratings\" and \"5 star ratings\" for the top 10 Games by installation. As the number of installation increases, 5-star ratings given by the players also increase. It looks like these players are likely to enjoy these games; indeed, all 5-star ratings for each top 10 Game consist of more than half of the total ratings itself.  \n\nMoreover; the games named as Subway Surfers\tand Candy Crush Saga have the highest instalation number with 1 billion, while the others have 500 million. \n\nOn the other hand, Gerena Free Fire-World Series installed 500 million times has the highest 5-star rating and total ratings with the value of 63546766 and 86273129, respectively.","051afcab":"For a better understanding and comparison, Seaborn and Plotly libraries will be used in the following visualization part.","f35ba398":"**Method-2 for the conversion of \"installs\" column using def function, split(), replace(), join() and astype() methods:**","8fca2daf":"**The Genres of Android Games**","26949023":"**SPECIAL NOTE ON SAMPLE SIZE:** The central limit theorem states that the sampling distribution of the mean of any independent, random variable will be normal or nearly normal, **if the sample size is large enough**. However, the question is that how large is \"large enough\"? The answer depends on two factors.\n\n**Requirements for accuracy.** The more closely the sampling distribution needs to resemble a normal distribution, the more sample points will be required.\n\n**The shape of the underlying population.** The more closely the original population resembles a normal distribution, the fewer sample points will be required.\n\nIn practice, some statisticians say that **a sample size of 30** is large enough when the population distribution is roughly bell-shaped. Others recommend a sample size of at least 40. But if the original population is distinctly not normal (e.g., is badly skewed, has multiple peaks, and\/or has outliers), researchers like the sample size to be even larger. [link text](https:\/\/guides.fscj.edu\/Statistics\/centrallimit)","b4349aff":"**Explanation:** We have suppressed scientific notation output from df.describe().","d70fa9e5":"**Explanation:** df.value_counts returns a Series containing counts of unique values. When necessary, we can implement this method to each column to get the number of unique values in a given column. ","526f3375":"Now let's make 'installs' numerical.","364e4b6f":"**Explanation:** Unlike 30-Days growth, The highest 5 android games showing spectacular growth in 60 days are Board, Card, Strategy, Action and Racing ones, respectively. As kept itself in both table without much mean differences, the growth of Card android games is more stabil than other android games.  ","e3825ffe":"**Total Ratings**","5925b0ad":"df.describe() [link text](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.describe.html)","37b9e900":"**Explanation:** With normalize set to True, we can obtain the relative frequencies by dividing all values by the sum of values. For example, regarding \"paid\" column in our case, unpaid android games represent almost 99.5% of all installed games.","5fa3a543":"**Explanation:** With unique() and nunique() methods, we can obtain unique values and their numbers. For example, regarding \"category\" column in our case, there have been 17 unique values.","1b50ab6b":"**Unique Game Categories**","2de2534b":"First thing taken into consideration is the huge difference between mean value (1064331.919653) and Q2 value (428606.5). Most probably this can  likely be caused by the probable outliers. Indeed the max. value of 86273129.0 supports this assumption to some extent. Nevertheless, we need to examine boxplot\/whisker plot.","d7616ce4":"**Explanation:** Indeed boxplot\/whisker plot demonstrates outliers including extreme ones.","99372c4c":"**The Growth of Android Games in the First 60 Days by Category**","0856edad":"**Top 10 Games By Installation**","3f5eb5da":"As shown above, racing games are one of the most popular games with the average rating of 3.96.Later casino, casual, word and simulation games consist of top 5 most popular ones with the average ratings of 3.95, 3.95, 3.942308 and 3.94, respectively. ","3f51d9b6":"**The Most Popular Games in Each Category by Rank**","46207bc3":"**Sum Up Overview**\n\nBefore going further, let's summarize what we have got from the dataset.\n\nThe given dataset represents android games from different categories on the basis of different ratings and different number of installs.\n\n'installs' is an atractive variable to make some inferences on  other variables. Therefore it would be better to convert and use it as a numerical variable.\n\nThere is no missing value, which is very good during the data preparation stage.\n\n'Category' column is categorical variable and may give some significant differences among the categories of android games.\n\nNumerical variables deserves special attention for further analysis.\n\n'Paid' and 'Price' looks like common on nature except their data types. In consistent with the analyst's needs, it can be either dropped or maintaned. With respect to evaluating the impact of categories that are \"False\" representing the unpaid games and \"True\" represending the paid games, this study will keep them in the analysis.","500c4cae":"**The Worth of Android Games**","49b60405":"**SPECIAL NOTE: \"Thank you to all in Clarusway Cohort08-Data Science Path who have contributed in this work and to my knowledge\"**","a9f49bf6":"**OVERVIEW THE DATASET**\n\n1. Identification of variables and data types.\n2. Examining\/Deciding if columns\/variables are appropriate for our analysis.\n3. Analyzing the basic metrics.\n4. Exploring missing values in Dataset.\n5. Dealing with missing\/invalid values.\n6. Outlier treatment.\n7. If needed, variable transformations.\n8. Visualization.","97348e88":"**Explanation:** df itself and df.shape have returned 1730 observations (rows) and 15 atributes\/feaatures (columns)."}}