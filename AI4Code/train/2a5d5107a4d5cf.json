{"cell_type":{"ee752843":"code","11d6e813":"code","d6c587ba":"code","7d65fead":"code","238f2350":"code","afea4fa5":"code","7ed965a3":"code","b8398383":"code","ee334833":"code","88179d60":"code","ac24f412":"code","0fc9642d":"markdown"},"source":{"ee752843":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","11d6e813":"import torch\nfrom torch import nn\nfrom torch import optim\nfrom torch.utils.data import DataLoader\nfrom torch.autograd import Variable\n\nimport torchvision\nfrom torchvision import datasets, models, transforms\n\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm_notebook","d6c587ba":"hot_dog_image_dir = '..\/input\/seefood\/train\/hot_dog'\nnot_hot_dog_image_dir = '..\/input\/seefood\/train\/not_hot_dog'\nhot_dog_test_image_dir = '..\/input\/seefood\/test\/hot_dog'\nnot_hot_dog_test_image_dir = '..\/input\/seefood\/test\/not_hot_dog'","7d65fead":"train_dir='..\/input\/seefood\/train'\ntest_dir='..\/input\/seefood\/test'","238f2350":"train_data_hd = [os.path.join(hot_dog_image_dir, filename)\n              for filename in os.listdir(hot_dog_image_dir)]\ntrain_data_nhd = [os.path.join(not_hot_dog_image_dir, filename)\n              for filename in os.listdir(not_hot_dog_image_dir)]\ntest_data_hd = [os.path.join(hot_dog_test_image_dir, filename)\n              for filename in os.listdir(hot_dog_test_image_dir)]\ntest_data_nhd = [os.path.join(not_hot_dog_test_image_dir, filename)\n              for filename in os.listdir(not_hot_dog_test_image_dir)]\n","afea4fa5":"#There total 998 images, 498 in train set and 500 in test set.\nprint(len(train_data_hd))\nprint(len(train_data_hd))\nprint(len(test_data_hd))\nprint(len(test_data_nhd))","7ed965a3":"# Define transforms for the training, validation, and testing sets\ntrain_transforms = transforms.Compose([\n    transforms.RandomRotation(30),\n    transforms.RandomResizedCrop(size=224),\n    transforms.RandomHorizontalFlip(),\n    transforms.RandomVerticalFlip(),\n    transforms.ToTensor(),\n    transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n])\n\ntest_transforms = transforms.Compose([\n    transforms.Resize(256),\n    transforms.CenterCrop(224),\n    transforms.ToTensor(),\n    transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n])\n","b8398383":"# Load the datasets with ImageFolder\ntrain_dataset = datasets.ImageFolder(train_dir, transform=train_transforms)\ntest_dataset = datasets.ImageFolder(test_dir, transform=test_transforms)\n\n# Using the image datasets and the transforms, define the dataloaders\ntrain_dataloader = DataLoader(train_dataset, shuffle=True, batch_size=8, num_workers=4)\ntest_dataloader = DataLoader(test_dataset, shuffle=False, batch_size=8, num_workers=4)","ee334833":"print(\"Length of Train Dataset: {:.1f}.. \".format(len(train_dataset)))\nprint(\"Length of Test Dataset: {:.1f}.. \".format(len(test_dataset)))","88179d60":"#Visualization of dataset\ndef imshow(imgs, title=None):\n    \"\"\"Imshow for Tensor.\"\"\"\n    imgs = imgs.numpy().transpose((1, 2, 0))\n    plt.imshow(imgs)\n    if title is not None:\n        plt.title(title)\n    \n\n\n# Get a batch of training data\ninputs, _ = next(iter(train_dataloader))\n\n# Make a grid from batch\nimgs = torchvision.utils.make_grid(inputs)\n\nimshow(imgs)","ac24f412":"train_on_gpu = torch.cuda.is_available()\n\nif not train_on_gpu:\n    print('CUDA is not available.  Training on CPU ...')\nelse:\n    print('CUDA is available!  Training on GPU ...')","0fc9642d":"#Loading of important Packages"}}