{"cell_type":{"801fd295":"code","a081bfae":"code","7c87e562":"code","81eb2c03":"code","3010119a":"code","6ac5755c":"code","a866cfdf":"code","7e08c1a1":"code","c944f623":"code","1af33c83":"code","b68ee605":"code","0849edf6":"code","c4069ab2":"code","b97a8285":"code","c60ef167":"code","9b87f3af":"code","74a8f19b":"code","34daccc7":"code","93b5b3ec":"code","d85d537d":"code","9568cf2a":"code","5867ccfb":"code","87c04630":"code","66d1388c":"code","0dfc5134":"code","bed0f554":"code","70620739":"code","ec669193":"code","913048ea":"markdown"},"source":{"801fd295":"# importing train and test data into train_df and test_df dataframes\nimport pandas as pd\ntrain_df = pd.read_csv('\/kaggle\/input\/sce-ml-algorithms-course-2021\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/sce-ml-algorithms-course-2021\/test.csv')","a081bfae":"# dataframe deep copy\ndata = train_df.copy(deep = True)","7c87e562":"# dataframe column names\ntrain_df.columns.values","81eb2c03":"# preview the n first rows of dataframe\ntrain_df.head(n = 4)","3010119a":"# preview the n last rows of dataframe\ntrain_df.tail(n=7)","6ac5755c":"# dataframe types\ntrain_df.info()","a866cfdf":"# dataframe numerical features distribution\ntrain_df.describe()","7e08c1a1":"# dataframe categorical features distribution\ntrain_df.describe(include=['O'])","c944f623":"# dataframe missing data information\ntrain_df.isnull().sum()","1af33c83":"# get table of frequency counts for items in a dataframe column\ntrain_df['Pclass'].value_counts()","b68ee605":"# get table of frequency counts for items in a dataframe column\ntrain_df['Embarked'].value_counts()","0849edf6":"# rename column in dataframe\nd = train_df.copy(deep = True)\nd.rename(columns = {'Survived':'S'}, inplace = True)\nd.head(1)","c4069ab2":"# selecting a subset of dataframe\ndf_subset = train_df[(train_df.Age > 50) & (train_df.Pclass == 2)] \ndf_subset.describe()","b97a8285":"# selecting a subset of dataframe\ndf_subset = train_df[((train_df.Pclass == 1) | (train_df.Pclass == 2)) & (train_df.Survived == 'T')] \ndf_subset.describe()","c60ef167":"# selecting a subset of dataframe by range of indexes and column index\ndf_subset = train_df.iloc[0:100, 5]\ndf_subset.describe()","9b87f3af":"# group data by dataframe subset\ngrouped_data = train_df.groupby(['Sex', 'Pclass','Age'])\ngrouped_data['Survived'].describe()","74a8f19b":"# missing values replacement for numerical column\ndata = train_df.copy(deep = True)\nc = 'Age'\nm = data[c].dropna().mean()\ndata[c].fillna(m, inplace=True)\ndata.info()","34daccc7":"# missing values replacement for categorical column\ndata = train_df.copy(deep = True)\nc = 'Cabin'\nm = data[c].dropna().mode()[0]\ndata[c].fillna(m, inplace=True)\ndata.info()","93b5b3ec":"# columns transformation - way 1\ndata = train_df.copy(deep = True)\nc = {'T':1,'F':0}\ndata.rename(columns = {'Survived':'S'}, inplace = True)\ndata['Survived'] = data['S'].map(c)\ndata['Died'] = 1 - data['Survived']\ndata.head(10)","d85d537d":"# columns transformation - way 2\ndata = train_df.copy(deep = True)\ndata.rename(columns = {'Survived':'S'}, inplace = True)\ndata['Survived'] = data['S'].apply(lambda x: 1 if x == 'T' else 0)\ndata['Died'] = 1 - data['Survived']\ndata.head(10)","9568cf2a":"# columns transformation - way 3\n# http:\/\/queirozf.com\/entries\/one-hot-encoding-a-feature-on-a-pandas-dataframe-an-example\ndata = train_df.copy(deep = True)\ncols = pd.get_dummies(data['Survived'],prefix='Survived_', drop_first=False)\ndata = pd.concat([data,cols],axis=1)\ndata.head(10)","5867ccfb":"# label encoder","87c04630":"data.columns","66d1388c":"# grouping data and aggregating columns\ndata_group = data.groupby('Sex').agg('sum')[['Survived__F', 'Survived__T']]\nprint(data_group.head())\n","0dfc5134":"# plotting data\ndata_group.plot(kind='bar', figsize=(25, 7), stacked=False, color=['g', 'r'])","bed0f554":"# add a column with constant value\ndata = train_df.copy(deep = True)\ndata['Test'] = 'Test'\ndata.head(10)","70620739":"# add a column and bin to intervals\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.4\/generated\/pandas.cut.html\ndata = train_df.copy(deep = True)\ndata['Age_Intervals'] = pd.cut(data['Age'], 4)\ndata.head(10)","ec669193":"#drop a column\ndata = train_df.copy(deep = True)\ndata = data.drop(['Age'], axis=1)\ndata.info()","913048ea":"Manipulating dataframe\nhttps:\/\/gist.github.com\/agalea91\/545e2337b94d965be788f7db18b1f497"}}