{"cell_type":{"7b7ca34d":"code","736c2252":"code","3bbfeab8":"code","2648e277":"code","66b925a8":"code","b9e5798b":"code","ff476332":"code","a47bbb7a":"code","e293b340":"code","0b89e1a9":"code","3264d667":"code","8bc007ae":"code","d4398439":"code","4b374e1c":"code","6b98fa64":"code","cddf467c":"code","99e105d1":"code","395bdfbc":"code","7d4a14f4":"code","a690b51f":"code","ceda0ca6":"code","a644b9dd":"code","429b2f04":"code","dd63bbd1":"code","3b14cde4":"code","37853493":"code","bc471ec6":"code","ab9ad4d3":"code","bd7b3a32":"code","eeaff001":"code","530d6cbf":"code","495fcea5":"code","fe7d12cc":"code","ebaecd41":"code","ff5ee2ed":"code","7391ebe6":"code","41f7a324":"code","972f27c2":"code","ae234b20":"code","36ea6e7e":"code","43119dc1":"code","7ea8e954":"code","9b067151":"markdown","1afdad1d":"markdown","4c08f065":"markdown","63adc51d":"markdown","80fc2b61":"markdown","a43d0b75":"markdown","00717510":"markdown","16c657c9":"markdown","3f9fdc4a":"markdown","5b22c8cf":"markdown","4dc3164a":"markdown","10b63fd4":"markdown","ff048b54":"markdown","23015f70":"markdown","fea16765":"markdown","054a76df":"markdown"},"source":{"7b7ca34d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","736c2252":"# importing useful packages\nimport numpy as np\nimport pandas as pd\nimport csv\nimport random\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3bbfeab8":"# making data frame from csv file  and making the index from column \"Index\"\ntop = pd.read_csv('\/kaggle\/input\/spotify-top-2000s-mega-dataset\/Spotify-2000.csv',delimiter = \",\",\n             encoding = \"utf - 8\", doublequote=True, engine=\"python\")\ntop.head(5)","2648e277":"#show size of table- in rows and columns\ntop.shape","66b925a8":"#showing all info about columns\ntop.info()","b9e5798b":"#counting types of columns\ntop.dtypes.value_counts()","ff476332":"# get all the statistical derscription of numerical columns\ntop.describe()","a47bbb7a":"#finding missing values on each column\ntop.isnull().sum()","e293b340":"#finding duplicated records in dataset\ntop.duplicated().sum()","0b89e1a9":"#renaming columns\ntop1 = top.rename(columns={\"Length (Duration)\": \"Duration (sec)\"})\ntop1.head()","3264d667":"#so , because we find no missing values, next we are going to modificate our data.\n#in this step, we will change type and values in column \"Length(Duration)\"\ntop1['Duration (sec)'].dtype","8bc007ae":"#replacing comma from numbers that make them string values by using replace() method\n#and convert into integer by using to_numeric and apply methods\ntop1.replace(',','', regex=True, inplace=True)\ntop1['Duration (sec)']= top1['Duration (sec)'].apply(pd.to_numeric,errors='coerce')\ntop1['Duration (sec)'].dtype","d4398439":"#show the results\ntop1['Duration (sec)']","4b374e1c":"#describing the statistical part of column\ntop1['Duration (sec)'].describe()","6b98fa64":"#change the column name of Top Genre\ntop1.rename(columns = {'Top Genre' : 'Genre'}, inplace = True)\ntop1.head()","cddf467c":"#merging similar genres to the one general\n#conert all value's lettercases to lower\ngenre = (top1[\"Genre\"].str.strip()).str.lower()\ntop1.head(3)","99e105d1":"# function to split the genre column\ndef genre_splitter(genre):\n    result = genre.copy()\n    result = result.str.split(\" \",1)\n    for i in range(len(result)):\n        if (len(result[i]) > 1):\n            result[i] = [result[i][1]]\n    return result.str.join('')\n#loop until the genre cannot be split any further\ngenre_m1 = genre.copy()\nwhile(max((genre_m1.str.split(\" \", 1)).str.len()) > 1):\n    genre_m1 = genre_splitter(genre_m1)\nlen(genre_m1.unique())","395bdfbc":"genre_m1.value_counts()","7d4a14f4":"#changing the column values to the results\ntop1['Genre'] = genre_m1\ntop1.head(5)","a690b51f":"#convert negative values in \"Loudness \" column to positive by using abs() function\ntop1['Loudness (dB)'] = top1['Loudness (dB)'].abs()\ntop1.head(5)","ceda0ca6":"#next, we'll define how many artists participate in our research and how many songs of these artists are in this dataset\ntop1['Artist'].value_counts()","a644b9dd":"#sorting songs from most to less popular\ntop1.sort_values(['Popularity'], ascending = False)","429b2f04":"#here we define highest value of popularity by each genre\ntop1.groupby(['Genre']).aggregate({'Popularity' : 'max'}).sort_values(['Popularity'], ascending = False)","dd63bbd1":"# before we begin visualisation of particular researching, we draw correlation matrix for all data in our analysis\nplt.figure(figsize=(10,8))\ncorrMatrix = top1.corr()\nsns.heatmap(corrMatrix, annot = True)","3b14cde4":"#find most occuring artists\nprint(top1[['Artist', 'Popularity']].groupby('Artist')['Popularity'].count().nlargest(5).reset_index(name='top5 most occurring'))","37853493":"#draw barplot for result\nfig = plt.figure(figsize = (15,7))\ntop1[['Artist', 'Popularity']].groupby('Artist')['Popularity'].count().nlargest(5) \\\n.reset_index(name='top5 most occurring').plot(kind = 'bar')\nplt.xlabel('Artist Index', fontsize = 20)\nplt.ylabel('Count of songs', fontsize = 20)\nplt.title('Amount of songs of Artists', fontsize = 30)","bc471ec6":"#find top5 popular songs\nprint(top1[['Artist', 'Popularity']].groupby('Artist')['Popularity'].max().nlargest(5).reset_index(name='top5 most popular'))","ab9ad4d3":"#draw barplot for the result\ntop1[['Artist', 'Popularity']].groupby('Artist')['Popularity'].max().nlargest(5) \\\n.reset_index(name='top5 most popular').plot(kind = 'bar')\nplt.xlabel('Artist Index', fontsize = 20)\nplt.ylabel('Popularity of song', fontsize = 20)\nplt.title('Popular song of Artists', fontsize = 30)","bd7b3a32":"#Calculating the number of songs of each genre\nprint(type(top1['Genre']))\npopular_genre=top1.groupby('Genre').size()\npopular_genre.sort_values(ascending = False)","eeaff001":"#draw a pieplot for result\nlabels = top1.Genre.value_counts().index\nsizes = top1.Genre.value_counts().values\ncolors = ['red', 'yellowgreen', 'coral', 'blue','cyan', 'green', 'black','yellow']\nplt.figure(figsize = (10,10))\nplt.pie(sizes, labels=labels, colors=colors)\nautopct=('%1.1f%%')\nplt.axis('equal')\nplt.show()","530d6cbf":"#find genres with highest value of popularity\ntop1.groupby(['Genre']).aggregate({'Popularity' : 'max'}).sort_values('Popularity',ascending = False).head(5)","495fcea5":"#draw a lineplot for result\nfig, ax = plt.subplots(figsize=(15,7))\ntop1.groupby(['Genre']).max()['Popularity'].plot(ax = ax)\nplt.xlabel('genre', fontsize = 20)\nplt.ylabel('Popularity', fontsize = 20)\nplt.title('Popularity of genre', fontsize = 30)","fe7d12cc":"#get data with highest bpm value\ntop1.loc[: ,'Title':'Beats Per Minute (BPM)'].sort_values('Beats Per Minute (BPM)', ascending = False).head(5)","ebaecd41":"#draw a distribution plot\nplt.figure(figsize=(8,4))\nsns.distplot(top1['Beats Per Minute (BPM)'], kde=False, bins=15,color='red', hist_kws=dict(edgecolor=\"k\", linewidth=1))\nplt.show()","ff5ee2ed":"#get data with highest energy value\ntop1.loc[: ,'Title':'Energy'].sort_values('Energy', ascending = False).head(5)","7391ebe6":"#draw a distribution plot\nplt.figure(figsize=(8,4))\nsns.distplot(top1['Energy'], kde=False, bins=15,color='aqua', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","41f7a324":"top1.loc[: ,'Title':'Danceability'].sort_values('Danceability', ascending = False).head(5)","972f27c2":"#draw a distribution plot\nplt.figure(figsize=(8,4))\nsns.distplot(top1['Danceability'], kde=False, bins=15,color='darkorchid', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","ae234b20":"# Analysing the relationship between energy and year\nplt.figure(figsize=(14,7))\nregplot=sns.lineplot(x=\"Year\",y='Energy',data=top1, label = 'Energy',marker='o')\nregplot=sns.lineplot(x=\"Year\",y='Danceability', data=top1, label = 'Danceability', marker='o')\nregplot=sns.lineplot(x=\"Year\",y='Beats Per Minute (BPM)',data=top1, label = 'Beats Per Minute (BPM)', marker='o')\nregplot.set_title(\"Relationship between Years and Energy, Danceability and BPM\")\n","36ea6e7e":"top1[['Title','Acousticness','Year']].sort_values('Acousticness').head(5)","43119dc1":"#draw a distplot\nsns.distplot( top1['Acousticness'] , color=\"skyblue\")","7ea8e954":"#joinplot for analyzing acousticness\nplt.figure(figsize=(16,9))\nsns.jointplot(x=top1['Year'], y=top1['Acousticness'], kind=\"kde\")","9b067151":"### 5.3 Q3: define in which time period people had listened more energetic songs \n*  to find this, we research data in columns 'Beats per Minute(BPM)', 'Energy ' and 'Dancebility'\n*  draw a matching plots\n","1afdad1d":"## 2. Description of project\nThe popularity factor is central to this research.\nThe analysis is based on ready dataset taken from site kaggle.com : \n(https:\/\/www.kaggle.com\/iamsumat\/spotify-top-2000s-mega-dataset).\nGiven dataset contains audio statistics of the top 2000 tracks on Spotify. The data contains about 15 columns each describing the track and it's qualities.Chosen tracks were released in period from 1956 to 2019 and there were included songs from some notable and famous artists like Queen, The Beatles, Guns N' Roses, etc.\nThis data is extracted from the Spotify playlist - Top 2000s on PlaylistMachinery(@plamere) using Selenium with Python. More specifically, it was scraped from http:\/\/sortyourmusic.playlistmachinery.com\/ This data contains audio features like Danceability, BPM, Liveness, Valence(Positivity) and many more.\nEach feature's description has been given in detail below.\n* Index is ID.\n* Title- name of the track.\n* Artist- name of the artist.\n* Top Genre is the genre of track.\n* Year is the year that track was released.\n* Beats per Minute(BPM) - The tempo of the song.\n* Energy: The energy of a song - the higher the value, the more energtic song is.\n* Danceability - The higher the value, the easier to dance to this song.\n* Loudness - The higher the value, the louder the song is.\n* Liveness - The higher the value , the more lively song hears to listener.\n* Valence - The higher the value, the more positive mood for the song is.\n* Length - duration of the song.\n* Acoustic - The higher the value the more acoustic the song is.\n* Speechiness- The higher the value the more spoken words the song contains.\n* Popularity - The higher the value the more popular the song is.\n","4c08f065":"## 1. Introduction\nOver the years, listening to music has developed with tremendous success and today one of the most popular music services is the streaming service Spotify, with nearly 300 million users worldwide. The service contains a database of 60 million tracks of all genres.Those songs that achieve great success among the audience remain in memory for a long time. Their influence on people can be so great that they leave their contribution to history. Songs can sometimes show us the development of entire generations.So, main goal of the project is to research and see power of the music.","63adc51d":"### 5.4 Q4: Find if  trend for acousticness in songs was popular in 1960s, than they are today\n*  to find this, we research data in column 'Acousticness'\n*  draw a matching plots\n","80fc2b61":"So, we define that most Artists with most popular songs are Tones and I , Billie Eilish, Imagine Dragons, Maroon 5, Marriah Carey.\nAnd most occurring artists are groups Queen,The Beatles, Coldplay,U2, the Rolling Stones","a43d0b75":"here we can see that trend to acousticness was less in 2010s than in 1960s","00717510":"# Analysis of Spotify Top-2000 songs","16c657c9":"### 5.1 Q1: Analyze the most known Artists in the world of all times\n* count amount of songs of each artist\n* define artists with high marks of popularity in general term\n* draw plots","3f9fdc4a":"found that \n* more energetic songs were listened in period 2000-2010\n* more dance songs were listened in period 1970-1980\n* more more beat songs were listened in period 1960-1970","5b22c8cf":"we researched that most popular genres are pop, rock, electropop,standards,metal,room, mellow","4dc3164a":"### 5.2 Q2 : Analyze the most listened genres of all times\n* count amount of songs in each genre\n* get genres with high marks of popularity each year  \n* plot the given result","10b63fd4":"## 5.Data visualisation","ff048b54":"## 4.Data preparation: cleaning and shaping\nfor well-working with data, we need to prepare it to right format.\n* find all the missing values.\n* renaming some columns\n* change values in column 'Genre'\n* convert column Length(duration) from object to int type\n* convert all the negative values in column 'loudness' to the positive\n* grouping data by columns ","23015f70":"## Conclusion\nIn this data analysis, we made a research to the top 2000 songs of Spotify music service.\nWe conclude that:\n* firstly, we find most popular Artist and their popular songs\n* second, find the most popular genres of music\n* third, find trend in time periods on several characteristics of track which are- Energy, acousticness, danceability\nOur analysis has shown various data that can help with more advanced research of music trends and their various indicators to improve and optimize various services such as spotify, etc.","fea16765":"### Content:\n* 1.Introduction\n* 2.Description of project\n* 3.Research questions\n* 4.Data preparation:cleaning and shaping  \n* 5.Data visualization","054a76df":"##  3.Formulation of research questions\n#### For detailed and deep analysis, we need to answer to the following questions:\n1. Analyze the most known Artists in the world of all times\n2. Analyze the most listened genres of all times\n3. Analyze the in which years people had listened dance and energetic songs\n4. Find trend for acousticness in songs was popular in 1960s, than they are today\n5. Find which words contained in songs are more popular?"}}