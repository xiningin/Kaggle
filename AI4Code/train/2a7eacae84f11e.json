{"cell_type":{"ed7729c0":"code","d33cb930":"code","3e6aa4e4":"code","3b74f583":"code","a891b912":"code","58bf3fd3":"code","84341366":"code","a3b1a31a":"code","7fc17cca":"code","0d4cd266":"code","35e4a935":"code","b61b6544":"code","61eba6a2":"code","956dc5b5":"code","b8688161":"code","e3e30d30":"code","337d62a1":"code","a1888dd1":"code","45f05f99":"code","8bb2dc4f":"code","da028626":"code","199c1edd":"markdown","949627a6":"markdown","36c3e6af":"markdown","ccf6a1b7":"markdown","a11fdcac":"markdown","fe7e25df":"markdown"},"source":{"ed7729c0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random as rd\nimport plotly.express as px\n\n%config IPCompleter.greedy = True\n%matplotlib inline","d33cb930":"data = pd.read_csv('..\/input\/fifa19\/data.csv')\ndata.head()","3e6aa4e4":"data.columns","3b74f583":"data.describe().T","a891b912":"data.info()","58bf3fd3":"# Shape of the data\n\nprint('-'*10, 'THE SHAPE OF DATA', '-'*10, '\\n')\n\nprint('Number of rows is about: ' + \"\\033[1m\" + str(data.shape[0]) + \"\\033[0;0m\")\nprint('Number of cols is about: ' + \"\\033[1m\" + str(data.shape[1]) + \"\\033[0;0m\")\nprint('Number of total information: ' + \"\\033[1m\"+ str(data.shape[0] * data.shape[1]) + \"\\033[0;0m\")","84341366":"#und_columns = ['Unnamed: 0', 'ID', 'Flag', 'Photo', 'Club Logo']\n#data = data.drop(und_columns, axis = 1)","a3b1a31a":"data.isnull().sum()","7fc17cca":"null_GKReflexes = data[data['GKReflexes'].isnull()].index.tolist()\nnull_GKPositioning = data[data['GKPositioning'].isnull()].index.tolist()\n\nif null_GKPositioning == null_GKReflexes:\n    print('Yes, the behaviour of the repetitive number of nan is correct')\nelse:\n    print('No, the behaviour of the repetitive number of nan is incorrect')","0d4cd266":"# We can asume with a proof, if we eliminate the rows related with the previous indexes, the nan will be reduced \ndata.drop(data.index[null_GKPositioning])","35e4a935":"print('-' * 10, 'AGE ANALYSIS', '-'*10, '\\n')\nprint('The minimum age is about: ' + str(data['Age'].min()))\nprint('The maximum age is about: ' + str(data['Age'].max()))\nprint('The average age is about: ' + str(round(data['Age'].mean(), 2)))\n","b61b6544":"sns.set_style('darkgrid')\nplt.subplots(figsize = (15, 5))\n\nplt.title('Age analysis', fontsize = 30, fontstyle = 'oblique', backgroundcolor = 'yellow')\nsns.countplot(x = data['Age'], palette = 'tab10', linewidth = 1, edgecolor = 'black')\nplt.axhline(data['Age'].value_counts().mean(), linestyle = ':', color = 'black') ","61eba6a2":"sns.lmplot(data = data, x = 'Age', y = 'Stamina', lowess = True, scatter_kws = {'alpha': 0.01, 's': 5, 'color': 'green'},\n          line_kws = {'color': 'red'})","956dc5b5":"# Compare the age with the overall score, with this table, we have a guide in order to do graphs\n\n# If the age x has more than 69 points on overall, it would be a very good age to play football\n\ndef best_overaverage(x, best = ''):\n    return best if x > 69 else None\n\n# If the age x has less than 60 points on overall, it would be a very good age to play football\n\ndef bad_overaverage(x, a = ''):\n    return a if x < 65 else None\n\n# We apply to the table\n\noverall = pd.DataFrame(data.groupby(['Age'])['Overall'].mean())\npotential = pd.DataFrame(data.groupby([\"Age\"])['Potential'].mean())\n\n#overall = overall.style.applymap(best_overaverage, best ='color:white;background-color:green;')\\\n#              .applymap(lambda v: 'opacity: 20%;' if (v < 0.3) and (v > -0.3) else None)\n\n# Combine the previous creations\n\ncombined = pd.merge(overall, potential, on = 'Age', how = 'inner')\ncombined['Age'] = combined.index\n\ncombined.reset_index(drop = True, inplace = True)\ncombined = combined.reindex(['Age', 'Overall', 'Potential'], axis = 1)\n\ncombined","b8688161":"sns.set_style('darkgrid')\nplt.plot('Age', 'Potential', data = combined, label = 'Potential', lw = 1, marker = 'x')\nplt.plot('Age', 'Overall', data = combined, label = 'Overall', lw = 1, marker = 's', color = 'red')\nplt.title('Potential and Overall by Age', fontsize = 15, fontstyle = 'italic', backgroundcolor = 'orange', pad = 20)\nplt.xlabel('Overall X', fontsize = 10)\nplt.ylabel('Average Growth Potential', fontsize = 10)\nplt.legend();","e3e30d30":"club = data.groupby('Club')['Overall'].mean().reset_index().sort_values('Overall', ascending = False).head(10)","337d62a1":"fig = px.bar(club, x = 'Overall', y = 'Club', orientation = 'h', text_auto = '.4s', color = 'Club')\nfig.show()","a1888dd1":"club_1 = data.groupby('Club')['Potential'].mean().reset_index().sort_values('Potential', ascending = False).head(10)\n\nfig = px.bar(club_1, x = 'Potential', y = 'Club', orientation = 'h', text_auto = '.4s', color = 'Club')\nfig.show()","45f05f99":"foot = data['Preferred Foot'].value_counts()\nfoot_r = foot[0]\nfoot_l = foot[1]\nfoot_total = foot.sum()\n\nprint('The % of players that used the right foot are about: ' + str(round((foot_r \/ foot_total) * 100, 2)))\nprint('The % of players that used the left foot are about: ' + str(round((foot_l \/ foot_total) * 100, 2)))","8bb2dc4f":"fig, ax = plt.subplots(figsize=(10, 5), subplot_kw=dict(aspect=\"equal\"))\n\nplt.pie(foot, shadow = True, startangle = 90, autopct = '%1.1f%%', wedgeprops = {'linewidth': 4},\n       textprops = {'fontsize': 15, 'weight': 'bold', 'color': 'white'}) \n\nax.legend(['Right', 'Left'],\n          title = \"Foot\",\n          loc = \"center left\",\n          bbox_to_anchor = (1, 0, 0.5, 1))","da028626":"fig = px.pie(data, values = foot, names = data['Preferred Foot'].value_counts().index.tolist())\nfig.update_traces(textposition = 'inside', textinfo = 'percent+label', hole = .2, \n                  marker=dict(line=dict(color='#000000', width=2)))\n\nfig.update_layout(title_text='\u00bfLeft or right?')\nfig.show()","199c1edd":"# Data analysis","949627a6":"# Clubs","36c3e6af":"When the players have more than *25 years*, starts to have **less stamina**","ccf6a1b7":"## Fifa Analysis","a11fdcac":"The potential is better when they are younger, between the ages of **15** to **25**. The poor point of potent is when they are in the age of **43**.","fe7e25df":"# Data cleaning"}}