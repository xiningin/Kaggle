{"cell_type":{"9219e9f1":"code","4c9d941c":"code","1de117f4":"code","e0a0dfc7":"code","10f40cbc":"code","5252c88a":"code","b55eeb65":"code","19da4b0e":"code","2c2cb1f9":"code","4713b5de":"code","cbc92212":"code","9610bb8f":"code","a245619a":"code","4bed1c36":"code","2d059ab7":"code","3ba8ebf9":"code","40281044":"code","8cfa45bd":"code","279cb31a":"code","63c8d15f":"code","deae17cb":"code","1f424668":"code","54f98e1f":"code","41ed7cb3":"code","9acda301":"markdown","13b966f4":"markdown","ebe64b42":"markdown","cee3885d":"markdown","75a49939":"markdown","45d58570":"markdown","410d089b":"markdown","9eb29284":"markdown","72db882b":"markdown","6139b852":"markdown","9cc69daf":"markdown"},"source":{"9219e9f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c9d941c":"try:\n    from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\n    from pycaret.regression import *\nexcept:\n    !pip install pycaret-ts-alpha\n    from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\n    from pycaret.regression import *\n\nfrom sktime.utils.plotting import plot_series","1de117f4":"## Read the Dataset","e0a0dfc7":"dataset=pd.read_csv('..\/input\/starbucks-stock-data-live-and-latest\/Starbucks_stock_history.csv')\ndataset.head()","10f40cbc":"dataset.shape","5252c88a":"train = dataset.sample(frac=0.9, random_state=786)\ntest = dataset.drop(train.index)\n\ntrain.reset_index(drop=True, inplace=True)\ntest.reset_index(drop=True, inplace=True)\n\nprint('Data for Modeling: Train =  ' + str(train.shape))\nprint('Unseen Data For Predictions: Test = ' + str(test.shape))\n","b55eeb65":"from pycaret.regression import *\n\nsbux_reg = setup(data = train, target = 'Close', \n                   ignore_features= ['High','Low','Open','Volume','Dividends','Stock Splits'],\n                   normalize = True, silent = True, session_id = 123)\n","19da4b0e":"best = compare_models()","2c2cb1f9":"models()","4713b5de":"ada = create_model('ada')","cbc92212":"lr = create_model('lr')","9610bb8f":"tuned_lr = tune_model(lr)","a245619a":"print(tuned_lr)","4bed1c36":"plot_model(tuned_lr, plot='residuals_interactive')\n","2d059ab7":"plot_model(tuned_lr, plot='error')\n","3ba8ebf9":"plot_model(tuned_lr, plot='cooks')\n","40281044":"plot_model(tuned_lr, plot='rfe')\n","8cfa45bd":"plot_model(tuned_lr, plot='learning')","279cb31a":"plot_model(tuned_lr, plot='manifold')\n","63c8d15f":"plot_model(tuned_lr, plot='feature')\n","deae17cb":"plot_model(tuned_lr, plot='feature_all')\n","1f424668":"plot_model(tuned_lr, plot='parameter')\n","54f98e1f":"evaluate_model(tuned_lr)","41ed7cb3":"train['MA12'] = train['Close'].rolling(12).mean()\n# plot the data and MA\nimport plotly.express as px\nfig = px.line(train, x=\"Date\", y=[\"Close\", \"MA12\"], template = 'plotly_dark')\npx.line(test, x=\"Date\", y=[\"Close\"], template = 'plotly_dark')\nfig.show()","9acda301":"## Install PyCaret Libraries","13b966f4":"## Evaluate the Tuned Regression Model","ebe64b42":"# More to come... Work in Progress","cee3885d":"## Setup PyCaret Library","75a49939":"## Plot the Tuned Regresion Model fo Residuals, Error, Cooks Plot, Learning Curve, Manifolds, Features, Parameters","45d58570":"## Check for Ada and Linear Regression Models","410d089b":"## Compare the Models and choose the best","9eb29284":"## Check the dataset","72db882b":"## Print the Moving Averages","6139b852":"## Tune Linear Regression Models","9cc69daf":"## Display the comparison"}}