{"cell_type":{"18ae2eb1":"code","400151eb":"code","5b5ffbdc":"code","d60da7d2":"code","2b418bd2":"code","d2c686fd":"code","bd026185":"code","4785d590":"code","c9fbb140":"code","7a4a1a4b":"code","a8de1dca":"code","2532e0fa":"code","15a520e2":"code","1958a07a":"code","6f62895e":"code","1e3c430f":"code","886ff84f":"code","ed29f39a":"code","5e9e2286":"code","51cd3c7c":"code","0bb6ad73":"code","9b2e3d96":"code","e917a5b2":"code","c082a6e9":"code","aec28d4b":"code","0a4a03ab":"code","15b4de2e":"code","35f96e9d":"markdown","724b2cdf":"markdown","346d3b4e":"markdown","87bdc46b":"markdown","38679167":"markdown","319b194a":"markdown","35a48cd3":"markdown","e8bbe07c":"markdown"},"source":{"18ae2eb1":"# packages\nimport numpy as np\nimport pandas as pd\n\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom statsmodels.graphics.mosaicplot import mosaic\n\nimport os","400151eb":"# file overview\n!ls \"\/kaggle\/input\/rfcx-species-audio-detection\"","5b5ffbdc":"# import files\ndf_TP = pd.read_csv('..\/input\/rfcx-species-audio-detection\/train_tp.csv')\ndf_FP = pd.read_csv('..\/input\/rfcx-species-audio-detection\/train_fp.csv')","d60da7d2":"df_TP.head()","2b418bd2":"df_FP.head()","d2c686fd":"features_numeric = ['t_min','t_max','f_min','f_max']","bd026185":"df_TP.shape","4785d590":"df_TP.describe()","c9fbb140":"df_TP.species_id.value_counts().plot(kind='bar')\nplt.title('Species ID [TP]')\nplt.grid()\nplt.show()","7a4a1a4b":"df_TP.songtype_id.value_counts().plot(kind='bar')\nplt.title('Songtype ID [TP]')\nplt.grid()\nplt.show()","a8de1dca":"sns.pairplot(df_TP[features_numeric])\nplt.show()","2532e0fa":"df_FP.shape","15a520e2":"df_FP.describe()","1958a07a":"df_FP.species_id.value_counts().plot(kind='bar')\nplt.title('Species ID [FP]')\nplt.grid()\nplt.show()","6f62895e":"df_FP.songtype_id.value_counts().plot(kind='bar')\nplt.title('Songtype ID [FP]')\nplt.grid()\nplt.show()","1e3c430f":"sns.pairplot(df_FP[features_numeric])\nplt.show()","886ff84f":"df_TP['label'] = 'TP'\ndf_FP['label'] = 'FP'\ndf = pd.concat([df_TP, df_FP], ignore_index=True)","ed29f39a":"sns.violinplot(data=df, x='label', y='t_min')\nplt.title('Compare t_min')\nplt.grid()\nplt.show()","5e9e2286":"sns.violinplot(data=df, x='label', y='t_max')\nplt.title('Compare t_max')\nplt.grid()\nplt.show()","51cd3c7c":"sns.violinplot(data=df, x='label', y='f_min')\nplt.title('Compare f_min')\nplt.grid()\nplt.show()","0bb6ad73":"sns.violinplot(data=df, x='label', y='f_max')\nplt.title('Compare f_max')\nplt.grid()\nplt.show()","9b2e3d96":"pd.crosstab(df.species_id, df.label)","e917a5b2":"# normalized\npd.crosstab(df.species_id, df.label, normalize=True)","c082a6e9":"# graphical view\nrcParams['figure.figsize'] = 10, 4\nmosaic(df, ['species_id', 'label'], title='TP\/FP vs Species')\nplt.show()","aec28d4b":"pd.crosstab(df.songtype_id, df.label)","0a4a03ab":"# normalized\npd.crosstab(df.songtype_id, df.label, normalize=True)","15b4de2e":"# graphical view\nrcParams['figure.figsize'] = 10, 4\nmosaic(df, ['songtype_id', 'label'], title='TP\/FP vs Songtype')\nplt.show()","35f96e9d":"## TP\/FP by Species","724b2cdf":"# False Positive Training File","346d3b4e":"## Compare frequency","87bdc46b":"## Compare time","38679167":"# True Positive Training File","319b194a":"# Combine to one table","35a48cd3":"## TP\/FP by Songtype","e8bbe07c":"# Take a first look on the training data tables"}}