{"cell_type":{"33e473d1":"code","fb2f94ad":"code","393bf91d":"code","ba6be037":"code","71fc8c60":"code","03c576bd":"code","96888c63":"code","b8868169":"code","74d256d8":"markdown","5522cea4":"markdown","d2446734":"markdown","90a303cc":"markdown","055b7286":"markdown","d9efae05":"markdown"},"source":{"33e473d1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches","fb2f94ad":"# Get the data\n\npath = '..\/input\/tensorflow-great-barrier-reef\/'\ntrain = pd.read_csv(path+'train.csv')\ntest = pd.read_csv(path+'test.csv')\n\n# Add images path to data\n\ntrain['image_path'] = '..\/input\/tensorflow-great-barrier-reef\/train_images\/video_'+train['video_id'].astype(str)+'\/'+train['image_id'].apply(lambda x: x.split('-')[1])+'.jpg'\n\n# Reorganise columns\n\ncols = train.columns[:-2].tolist()+['image_path']+[train.columns[-2]]\ntrain = train[cols]\n\nprint('First rows of training data:\\n')\nprint(train.head(), '\\n')\n\nprint('Training data types:\\n')\nprint(train.dtypes)","393bf91d":"# How many videos are there in the training set?\n\nprint('Number of unique videos in the training set: {}\\n'.format(train['video_id'].nunique()))\n\n# How many frames are there in each video of the training set?\n\nprint('Number of video frames per video in the training set:'')\ntrain.groupby('video_id', as_index=False)['video_frame'].count()","ba6be037":"# How does the presence of a starfish materialises in the data?\n\nmask_starfish = train['annotations'] != '[]'\ntrain[mask_starfish].head()","71fc8c60":"# \"annotations\" is in str() format. Let's transform it as a list\n# It will help later\n\ntrain['annotations'] = train['annotations'].apply(lambda x: eval(x))","03c576bd":"# How are starfishes distributed in the training data?\n\ntrain['is_starfish'] = train['annotations'].apply(lambda x: 1 if len(x)>0 else 0)\n\nplt.figure(figsize=(8, 6))\nplt.title('Distribution of frames showing a starfish [1] vs. frames without starfish [0]')\nplt.xlabel('Presence of a starfish');\nplt.xticks([0, 1]);\nplt.ylabel('Number of video frames');\ntrain['is_starfish'].hist();\nplt.grid(False);","96888c63":"# How are starfish bounding boxes distributed in the training data?\n\nplt.figure(figsize=(8, 6))\nplt.title('Number of starfishes distribution in the training data')\ntrain[mask_starfish][\"annotations\"].apply(lambda x: len(x)).value_counts().hist();\nplt.xlabel('Number of video frames');\nplt.ylabel('Number of bounding boxes per video frame');\nplt.grid(False)","b8868169":"# Pick a frame in the training data\nframe = pd.DataFrame.sample(train, n=1)\nn_starfish = frame['annotations'].apply(lambda x: len(x)).tolist()[0]\nprint('There is {} starfish(es) in this frame.'.format(n_starfish)) if n_starfish > 0 else print('There is no starfish in this frame.')\n\nplt.figure(figsize=(15, 10))\nimg_path = frame['image_path'].tolist()[0]\nimg = plt.imread(img_path)\nax = plt.gca()\n\nann_mask = train['image_path'] == img_path\nannotations = train[ann_mask]['annotations'].tolist()[0]\nfor bbox in annotations:\n    x, y, w, h = bbox['x'], bbox['y'], bbox['width'], bbox['height']\n    rect = patches.Rectangle((x, y), w, h, linewidth=1, edgecolor='darkorange', facecolor='orange', alpha=.5)\n    ax.add_patch(rect)\nplt.imshow(img);\nplt.axis('off');","74d256d8":"### Visualise some random images","5522cea4":"## Exploratory Data Analysis","d2446734":"### Training data","90a303cc":"This notebook was built to quickly explore training data from tensorflow-great-barrier-reef competition. Feel free to reuse.\n\n**Objectives**\n1. Load the data\n2. Get a high-level view of the data structure\n3. Get a high-level view of data distribution\n4. Visualise some images with starfishes","055b7286":"## Get the Data","d9efae05":"# TensorFlow Great Barrier Reef"}}