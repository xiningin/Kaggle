{"cell_type":{"31bb8817":"code","58c4343e":"code","68d411b0":"code","e61e764c":"code","6691eb19":"code","ff9232a5":"code","0f6b6476":"code","d66173cf":"code","dfd9bfda":"code","2ac54f28":"code","a112c5d2":"code","dc819163":"code","5dbdb0ea":"code","c43e05a9":"code","39d39f4c":"code","9bee95b8":"code","61ec5ecf":"code","337d1726":"code","c52e962a":"code","54b23b8b":"code","25ecd5c5":"code","22514c1a":"code","0620f93b":"code","877411bf":"code","ab9123dc":"code","3c7d8fb8":"code","e39f1f44":"code","404f36cf":"code","6c83ff19":"code","f786e224":"code","e3a16d80":"code","ff3b6c0e":"code","232f2c60":"code","5f57a9c8":"code","9c45cb93":"code","9a38bc5f":"markdown","b23d384b":"markdown","49e4732c":"markdown","cc8f96ac":"markdown","8ce63393":"markdown","44fa32c8":"markdown","d749bb0f":"markdown","8ec334e2":"markdown","e1b870d8":"markdown","aecf26ac":"markdown","767358fc":"markdown","1074c1e2":"markdown","b1885705":"markdown","dcf16070":"markdown","bf832eb6":"markdown","129108c7":"markdown","1bf8e7cf":"markdown","8dd2e36d":"markdown","3a3cab76":"markdown","a7f805f4":"markdown","b93fd349":"markdown","8b56d976":"markdown"},"source":{"31bb8817":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58c4343e":"from wordcloud import WordCloud,STOPWORDS\nstopwords = set(STOPWORDS)\n\nfrom textblob import TextBlob\nimport re\nfrom collections import Counter\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","68d411b0":"df = pd.read_csv(\"..\/input\/covid19-tweets\/covid19_tweets.csv\")\ndf.head()","e61e764c":"city = pd.read_csv(\"..\/input\/all-city-name-in-india\/in.csv\")\ncity.head()","6691eb19":"city_name = list(city['city'])\ncity_name","ff9232a5":"rslt_df = df.loc[df['user_location'].isin(city_name)].reset_index(drop=True)\nrslt_df.head()","0f6b6476":"ind_tweets = rslt_df.sort_values(by='date').reset_index(drop=True)\nind_tweets","d66173cf":"ind_tweets = ind_tweets[['date', 'text']]\nind_tweets.head()","dfd9bfda":"apl = pd.read_csv(\"..\/input\/india-twiiter-data-in-text-format\/india_tweets_data_april .csv\")\napl.head()","2ac54f28":"apl['date'] = apl['date'].str.replace('T',' ')\napl['date'] = apl['date'].str.replace('Z',' ')\napl.head()","a112c5d2":"apl.info()","dc819163":"ind_tweets = pd.concat([ind_tweets,apl]).reset_index(drop=True)\nind_tweets.head()","5dbdb0ea":"ind_tweets['date'] = pd.to_datetime(ind_tweets['date'], utc=True)\nind_tweets.info()","c43e05a9":"for i in range(ind_tweets.shape[0]):\n    ind_tweets['text'][i] = ' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\\/\\\/\\S+)|(#[A-Za-z0-9]+)\", \" \", ind_tweets['text'][i]).split()).lower()\n    \nind_tweets['text'].head()","39d39f4c":"ind_tweets.isnull().sum()","9bee95b8":"ap_tweet = ind_tweets[ind_tweets['date']<\"2020-07-01\"]['text']\nwordcloud = WordCloud(background_color='black', stopwords=stopwords, max_words=200,\n                      max_font_size=40).generate(str(ap_tweet))\nfig = plt.figure(1, figsize=(15, 15))\nplt.axis('off')\nplt.title('cloud', size = 25)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.show()","61ec5ecf":"# tweets in 7 month\nsv_tweet = ind_tweets[(ind_tweets['date']<\"2020-08-01\") & (ind_tweets['date']>\"2020-07-01\")]['text']\nwordcloud = WordCloud(background_color='black', stopwords=stopwords, max_words=200,\n                      max_font_size=40).generate(str(sv_tweet))\nfig = plt.figure(1, figsize=(15, 15))\nplt.axis('off')\nplt.title('cloud', size = 25)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.show()","337d1726":"# tweets in 8 month\nei_tweet = ind_tweets[ind_tweets['date']>=\"2020-08-01\"]['text']\nwordcloud = WordCloud(background_color='black', stopwords=stopwords, max_words=200,\n                      max_font_size=40).generate(str(ei_tweet))\nfig = plt.figure(1, figsize=(15, 15))\nplt.axis('off')\nplt.title('cloud', size = 25)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.show()","c52e962a":"stopwords","54b23b8b":"ind_tweets['text'] = ind_tweets['text'].apply(lambda tweets: ' '.join([word for word in tweets.split() if word not in stopwords]))\nind_tweets['text'].head() ","25ecd5c5":"ind_tweets['sentiment'] = ' '\nfor i,tweets in enumerate(ind_tweets.text) :\n    blob = TextBlob(tweets)\n    if blob.sentiment.polarity > 0 :\n        ind_tweets['sentiment'][i] = 'positive'\n    elif blob.sentiment.polarity < 0 :\n        ind_tweets['sentiment'][i] = 'negative'\n    else :\n        ind_tweets['sentiment'][i] = 'neutral'\n        \nind_tweets.head()","22514c1a":"pos_tweet = ind_tweets[ind_tweets['sentiment']=='positive']['text']\nwordcloud = WordCloud(background_color='black', stopwords=stopwords, max_words=50,\n                      max_font_size=40).generate(str(pos_tweet))\nfig = plt.figure(1, figsize=(15, 15))\nplt.axis('off')\nplt.title('cloud', size = 25)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.show()","0620f93b":"neg_tweet = ind_tweets[ind_tweets['sentiment']=='negative']['text']\nwordcloud = WordCloud(background_color='black', stopwords=stopwords, max_words=50,\n                      max_font_size=40).generate(str(neg_tweet))\nfig = plt.figure(1, figsize=(15, 15))\nplt.axis('off')\nplt.title('cloud', size = 25)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.show()","877411bf":"net_tweet = ind_tweets[ind_tweets['sentiment']=='neutral']['text']\nwordcloud = WordCloud(background_color='black', stopwords=stopwords, max_words=50,\n                      max_font_size=40).generate(str(net_tweet))\nfig = plt.figure(1, figsize=(15, 15))\nplt.axis('off')\nplt.title('cloud', size = 25)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.show()","ab9123dc":"order=[\"neutral\",\"positive\",\"negative\"]\nsns.countplot(ind_tweets[ind_tweets['date']<\"2020-07-01\"]['sentiment'], order=order)","3c7d8fb8":"sns.countplot(ind_tweets[(ind_tweets['date']<\"2020-08-01\") & (ind_tweets['date']>\"2020-07-01\")]['sentiment'], order=order)","e39f1f44":"sns.countplot(ind_tweets[ind_tweets['date']>=\"2020-08-01\"]['sentiment'], order=order)","404f36cf":"df = ind_tweets[['date','sentiment']].copy()\ndf['month'] = df['date'].dt.month\ndf['month'] = df['month'].map({4:'April', 7:'July', 8:'August'})\na = df.reset_index().groupby(['month', 'sentiment'])['date'].count()","6c83ff19":"a = a.unstack().reindex([\"April\",\"July\",\"August\"])\na","f786e224":"cols = ['negative','neutral','positive']\na[cols] = a[cols].div(a[cols].sum(axis=1), axis=0).multiply(100)","e3a16d80":"a","ff3b6c0e":"a.plot.bar(title='Covid19 Sentiment Analysis', ylabel=\"Percentage of tweets in each Month\",\n           figsize=(12,6), rot=0,fontsize=15)","232f2c60":"b = df.reset_index().groupby(['sentiment', 'month'])['sentiment'].count().unstack()\ncols = [\"April\",\"July\",\"August\"]\nb = b[cols]\nb = b[cols].div(b[cols].sum(axis=0), axis=1).multiply(100)","5f57a9c8":"b","9c45cb93":"b.plot.bar(title='Covid19 Sentiment Analysis',  ylabel=\"Percentage of tweets in each Month\",\n           figsize=(12,6), rot=0, fontsize=15)","9a38bc5f":"### Sentiment plot in August","b23d384b":"# Sentiment Analysis","49e4732c":"## Sort the data on the basis of date","cc8f96ac":"### Removing stopwords in the tweets data","8ce63393":"## Null values","44fa32c8":"#### Neutral words cloud in entire Dataset","d749bb0f":"### WordCloud in July","8ec334e2":"### Stopwords","e1b870d8":"## data preprocessing","aecf26ac":"### Load April data","767358fc":"### Sentiment plot in July","1074c1e2":"#### Negative words cloud in entire Dataset","b1885705":"### Extract India Twitter data using filter \"city name\"","dcf16070":"#### Positive words cloud in entire Dataset","bf832eb6":"# Tweeter text data in World","129108c7":"### Cities in India","1bf8e7cf":"## India geographical data","8dd2e36d":"### WordCloud in August","3a3cab76":"### Sentiment plot in April","a7f805f4":"### WordCloud in April","b93fd349":"## Sentiment group analysis","8b56d976":"## Take the only usefull columns"}}