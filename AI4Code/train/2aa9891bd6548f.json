{"cell_type":{"89688701":"code","148378cf":"code","1d7bc4ac":"code","dd76d5bb":"code","e8eb5df8":"code","2dfa964d":"code","f8e7ceb4":"code","28d33a94":"code","07e46835":"code","c1f8099b":"code","659ed521":"code","00fb041c":"code","8447d57f":"code","80d485a9":"code","99df6d3d":"code","5ab61e04":"code","a13315b9":"code","c1e2af26":"code","05577910":"code","3f9ef032":"code","38527a8d":"code","0feb2efd":"code","e48f603b":"code","171d5090":"code","69cbfc3f":"code","18c1f4af":"markdown","79bc0f28":"markdown","831a7c9d":"markdown","b275fe47":"markdown","94f7d384":"markdown"},"source":{"89688701":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","148378cf":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style(\"whitegrid\")","1d7bc4ac":"amazon = pd.read_csv('..\/input\/amazon.csv')\namazon.head()","dd76d5bb":"flipkart = pd.read_csv('..\/input\/flipkart.csv')\nflipkart.head()","e8eb5df8":"# dropping the outliers.\n\nwild_card = flipkart[flipkart.flipkart_price > 1000].index\n\nflipkart = flipkart.drop(wild_card)\namazon = amazon.drop(wild_card)","2dfa964d":"plt.figure(figsize=(10, 6))\nsns.distplot(flipkart.flipkart_price, color='red', label=\"Flipkart\", kde=False, bins=30)\nsns.distplot(amazon.amazon_price, color='green', label=\"Amazon\", kde=False, bins=30)\nplt.legend()\nplt.xlabel('Price')\nplt.ylabel('Number of Books')","f8e7ceb4":"flipkart.columns = ['flipkart_author', 'isbn', 'flipkart_title',\n       'flipkart_ratings count', 'flipkart_price', 'flipkart_stars']\n\namazon.columns = ['amazon_title', 'amazon_author', 'amazon_rating',\n       'amazon_reviews count', 'isbn', 'amazon_price']\n\ndf = pd.merge(flipkart, amazon, how='outer')\ndf = df.drop_duplicates()","28d33a94":"df.head()","07e46835":"cols_to_drop = ['flipkart_ratings count','flipkart_stars', 'amazon_title', 'amazon_author',\n       'amazon_rating', 'amazon_reviews count']\ndf.drop(cols_to_drop, axis=1, inplace=True)\ndf.columns = ['author', 'isbn', 'title', 'flipkart_price', 'amazon_price']","c1f8099b":"df.tail()","659ed521":"f_minus_a = df['flipkart_price'] - df['amazon_price']\na_minus_f = df['amazon_price'] - df['flipkart_price']","00fb041c":"df['price_diff'] = df['flipkart_price'] - df['amazon_price']","8447d57f":"df.price_diff.describe()","80d485a9":"df['price_diff_perc'] = df['price_diff']\/df['flipkart_price']*100\ndf.tail()","99df6d3d":"df.price_diff_perc.describe()","5ab61e04":"max_price = []\nmin_price = []\nl = list()\nfor i, row in df.iterrows():\n    if row['flipkart_price'] < row['amazon_price']:\n        max_price.append(row['amazon_price'])\n        min_price.append(row['flipkart_price'])\n    else:\n        max_price.append(row['flipkart_price'])\n        min_price.append(row['amazon_price'])","a13315b9":"\nprint()\nprint(\"If you only bought books from Flipkart: {}\".format(df['flipkart_price'].sum()))\n\nprint()\nprint(\"If you only bought books from Amazon: {}\".format(df['amazon_price'].sum()))","c1e2af26":"plt.figure(figsize=(10, 6))\nsns.kdeplot(max_price, color='red')\nsns.kdeplot(min_price, color='green')","05577910":"print(\"Price Worst Case Scenario: {}\".format(sum(max_price)))\nprint(\"Price Best Case Scenario: {}\".format(sum(min_price)))\n\nprint()\ndiff = sum(max_price) - sum(min_price)\nprint(\"Difference: {}\".format(diff))\nprint(\"Percentage difference: {0:.2f}%\".format(diff\/sum(max_price)*100))","3f9ef032":"plt.figure(figsize=(10, 6))\nsns.distplot(abs(df['price_diff_perc']), kde=False, color='green', bins=100)\nplt.xlabel('Price Difference (Percentage)')","38527a8d":"no_diff = df[df['price_diff'] == 0].count()[0]\/df.shape[0]\nprint('Percentage of books which are priced the same: {0:.2f}%'.format(no_diff*100))\n\nprint()\nno_diff = df[(abs(df['price_diff_perc']) > 0) & (abs(df['price_diff_perc']) < 100)].count()[0]\/df.shape[0]\nprint('Percentage of books with price difference: {0:.2f}%'.format(no_diff*100))\n\nprint()\nno_diff = df[df['price_diff_perc'] < 0].count()[0]\/df.shape[0]\nprint('Better pricing on Flipkart: {0:.2f}%'.format(no_diff*100))\n\nprint()\nno_diff = df[df['price_diff_perc'] > 0].count()[0]\/df.shape[0]\nprint('Better pricing on Amazon: {0:.2f}%'.format(no_diff*100))","0feb2efd":"# How much would you overpay if you choose any one of the site, compared to our best price?\n\nprint(\"Only Flipkart: {0:.2f}%\".format((100*(df.flipkart_price.sum() - sum(min_price))\/sum(min_price))))\nprint()\nprint(\"Only Amazon: {0:.2f}%\".format((100*(df.amazon_price.sum() - sum(min_price))\/sum(min_price))))\n","e48f603b":"plt.figure(figsize=(10, 6))\nsns.distplot(df['price_diff_perc'], kde=False, color='green')\nplt.xlabel('Price Difference (Percentage)')\nplt.ylabel('Number of books')","171d5090":"# Books less than 500\nplt.figure(figsize=(10, 6))\nsns.distplot(df[df['flipkart_price'] <500 ]['price_diff_perc'], kde=False, color='red')\nplt.xlabel('Price Difference (Percentage)')\nplt.ylabel('Number of books')","69cbfc3f":"# Books greater than 500\nplt.figure(figsize=(10, 6))\nsns.distplot(df[df['flipkart_price'] > 500]['price_diff_perc'], kde=False, color='blue')\nplt.xlabel('Price Difference (Percentage)')\nplt.ylabel('Number of books')","18c1f4af":"## Max Min difference","79bc0f28":"# Price difference plots","831a7c9d":"# Amazon Vs. Flipkart","b275fe47":"# Price Distribution","94f7d384":"# Histogram of the data"}}