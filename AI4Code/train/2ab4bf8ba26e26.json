{"cell_type":{"b9063f1c":"code","2c9c6290":"code","c29df1fe":"code","e9a587cb":"code","d345c5fb":"code","76c71e1d":"code","4ef40c7f":"markdown","f8250e6c":"markdown","3a9a93b6":"markdown","d96ad395":"markdown"},"source":{"b9063f1c":"import numpy as np\nimport pandas as pd\nimport os\nimport gc\nimport pickle\n\nimport lightgbm as lgb\nimport xgboost as xgb\n\nfrom datetime import timedelta\n\nfrom sklearn import metrics\nfrom sklearn import preprocessing\n\nimport matplotlib.pyplot as plt\n\npd.set_option('display.max_columns', 500)\ninput_dir = '\/kaggle\/input\/dmc2020\/DMC20_Data'","2c9c6290":"infos = pd.read_csv(f'{input_dir}\/infos.csv', sep='|')\norders = pd.read_csv(f'{input_dir}\/orders.csv', sep='|')\nitems = pd.read_csv(f'{input_dir}\/items.csv', sep='|')","c29df1fe":"N_WEEKS = 2\n\n# Creating date feature in format YYYY-MM-DD\norders['time'] = pd.to_datetime(orders['time'])\norders['date'] = orders['time'].dt.date\n\n# Making sure to get Kaggle train data only\norders = orders[orders['date'] < pd.to_datetime('2018-06-16')].copy()\nprint(orders['date'].max())\n\n# Tranforming date to n\u00ba of days since first date\nbasedate = orders['date'].min()\norders['date'] = (orders['date'] - basedate).dt.days\n\n# Transforming date to 'n\u00ba of n-week blocks - we'll work with 2 weeks for now\norders['date'] = orders['date'] \/\/ (7 * N_WEEKS)","e9a587cb":"# Grouping orders by day and itemID, getting the sum of orders and mean of salesPrice\norders_by_date = orders.groupby(['date', 'itemID'], as_index=False).agg({'order':'sum', \n                                                                            'salesPrice':'mean'})\n# Creating dataframe in the usual timeseries format just to take a look\ntimeseries = orders_by_date.pivot(index='itemID', columns='date')['order']\ntimeseries = timeseries.fillna(0)","d345c5fb":"timeseries","76c71e1d":"sub = orders_by_date[orders_by_date['date'] >= 8].copy()\nsub = sub.groupby('itemID', as_index=False)['order'].mean()\n\nsub = items[['itemID']].merge(sub, on='itemID', how='left')\nsub = sub.fillna(0)\n\nsub.columns = ['itemID', 'demandPrediction']\n\nsub['demandPrediction'] = sub['demandPrediction'].round(0).astype(int)\nsub.to_csv('submission.csv', index=False)","4ef40c7f":"## Mean of last 2-week blocks","f8250e6c":"## Processing data","3a9a93b6":"# Baseline model","d96ad395":"## Reading data"}}