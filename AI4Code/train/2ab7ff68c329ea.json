{"cell_type":{"ad6a00dd":"code","90bd374d":"code","3efa2da8":"code","ca385b09":"code","630b5fa7":"code","8d3fe3e5":"code","827d9875":"code","132b1d03":"code","2dfc4ef3":"code","2ca131ea":"code","57fc9524":"code","f48b65ab":"code","06da0a59":"code","472ea0a5":"code","bbcec37b":"code","d80ed31c":"code","168a39dd":"code","f51fbb77":"code","a3589a7f":"code","321ab826":"code","1448294d":"code","3f9a411f":"code","e848e52e":"code","940dd532":"code","2e93ab8d":"code","6dcbdf31":"code","c1247b01":"code","2c5b6372":"code","6d6152a6":"code","36be2c76":"code","ddb74d7c":"code","938e1d4f":"code","779e84fa":"code","c95c137b":"code","e30d9b94":"code","89dfdcc9":"code","a7eb4a85":"code","0595403a":"markdown"},"source":{"ad6a00dd":"\nimport numpy as np # linear algebra\nimport seaborn as sns \nsns.set(color_codes=True)\nimport matplotlib.pyplot as plt\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","90bd374d":"#read dataset\n\ndata=pd.read_csv ('..\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')","3efa2da8":"#To see column name and dataset\n\ndata.head(15) ","ca385b09":"#to check for a gap, line, or data type mismatch in the dataset\n\ndata.info () ","630b5fa7":"#While analyzing, columns should be checked individually. UNIQE->like DISTINCT in SQL. \n#What I want to see here is how many kinds of cases are. \n#It may be useful to use unique columns for diversity.\n\ndata.case.unique()","8d3fe3e5":"#To see how many of each case. \n#value_counts() gives count by group. \n#We do this by using aggregation functions and groupby together in SQL.\n\ndata.case.value_counts()\n\n\n\n\n#I wrote to learn the following codes. My aim was to see just for count of one case. \n#Please ignore.\n\n\n#output_lambda = data.apply (lambda x: [x.value_counts().to_dict()])\n#print (output_lambda)\n#output_lambda = data.apply (lambda x: [x.value_counts([1])])\n#print (output_lambda)\n#data.case.value_counts() if data.case==1 \n#if data[\"case\"]==1 return data.case.count\n","827d9875":"data.cc3.unique()","132b1d03":"data.cc3.value_counts()\n","2dfc4ef3":"data.country.unique()","2ca131ea":"data.country.value_counts()","57fc9524":"data.banking_crisis.value_counts()","f48b65ab":"data.year.value_counts()","06da0a59":"len(data.year.value_counts())","472ea0a5":"temp= data [(data[\"case\"] == 1) & (data[\"cc3\"] == 'DZA') & (data['banking_crisis']=='crisis')]\ntemp.head(5)\n#if you want to write in SQL the above code, you shuld write as follows.\n#select top 5 * from african_crises ac where ac.case=1 and ac.cc3='DZA' and ac.banking_crisis='crisis'\n","bbcec37b":"temp= data [(data[\"systemic_crisis\"] == 0) & (data['banking_crisis']=='crisis')]\ntemp.head(50)\n\n","d80ed31c":"count_list_=[]\ncount_list = len(data.country)\n#count_list_.append(count_list)\ncount_list","168a39dd":"country_list = list(data['country'].unique())\ncountry_list","f51fbb77":"\nfrom itertools import groupby\nx=[9,2,2,2,2,3,4,4,55,55,6,2,2,2,7,0,0]\nout = [len([*group]) for i, group in groupby(x)]\n\nout\n\n","a3589a7f":"from itertools import groupby\nx=data.country\nout = [len([*group]) for i, group in groupby(x)]\nout","321ab826":"# Plotting a bar graph of the crisis number in each country\n# in the column 'country'\ncountry_count  = data['country'].value_counts()\ncountry_count = country_count[:15,]\nplt.figure(figsize=(25,10))\nsns.barplot(country_count.index, country_count.values, alpha=1)\nplt.xticks(rotation= 30,fontsize=13)\nplt.yticks(rotation= 0,fontsize=13)\nplt.title('Crisis Numbers in Each Countries',fontsize=20)\nplt.ylabel('Number of Crisis', fontsize=20)\nplt.xlabel('Country', fontsize=20)\nplt.show() \n \n","1448294d":"data.head(5)","3f9a411f":"sns.relplot(x=\"country\",y=\"year\",data=data,height=20)","e848e52e":"sns.relplot(x=\"country\", y=\"year\",data=data,height=20, alpha=0.25, edgecolor=None)","940dd532":"# Add \"clarity\" variable as color\nsns.relplot(\n            x=\"country\",\n            y=\"year\",\n            hue=\"cc3\", # added to color axis\n            data=data,\n            height=20,\n            palette=\"Set1\", # change color palette \n            edgeColor=None)","2e93ab8d":"data.head(5)","6dcbdf31":"sns.relplot(\n            x=\"country\",\n            y=\"year\",\n            hue=\"year\",\n            size=\"cc3\",   ###\n            style=\"banking_crisis\",  ###\n            data=data,\n            palette=\"CMRmap_r\",\n            edgecolor=None,\n            height=20)","c1247b01":"sns.relplot(\n            x=\"country\",\n            y=\"year\",\n            size=\"cc3\",\n            style=\"systemic_crisis\",\n            markers=True,\n            kind=\"line\",\n            data=data,\n            hue=\"banking_crisis\",\n            height=20\n            )\n\nplt.savefig(\"graph2.png\")","2c5b6372":"sns.relplot(x=\"country\",\n            y=\"cc3\",\n            col=\"case\", # show region in columns\n            data=data,\n            height=20)","6d6152a6":"data.info()","36be2c76":"sns.jointplot(x=\"exch_usd\", y=\"inflation_annual_cpi\", data=data);","ddb74d7c":"sns.boxplot(y=\"case\", data=data);","938e1d4f":"data.head()","779e84fa":"data = data.drop(['domestic_debt_in_default'],1)","c95c137b":"sns.boxplot(data=data);","e30d9b94":"data = pd.melt(data, id_vars=[\"cc3\", \"country\", \"year\"], var_name=\"banking_crisis\")\n","89dfdcc9":"data.head()","a7eb4a85":"sns.swarmplot(x=\"cc3\", y=\"year\", data=data, hue=\"country\")","0595403a":"\nThis research is dataset of African Economic, Banking and Systemic Crisis. I'm trying to learn data scientist. \nI have many shortcomings. There are a lot of things I don't know. I am trying to use every code I see. If you have any suggest, I will be happy to hear it. Thank you.\n\n"}}