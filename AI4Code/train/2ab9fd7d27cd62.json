{"cell_type":{"d8340741":"code","efa88b92":"code","a2ee31c4":"code","45fe5f47":"code","c115a040":"code","8bbeddad":"code","2145f700":"code","f4392ce1":"code","ef4ac176":"code","1f26b79b":"code","1910efe8":"code","095ed3db":"code","1727ee98":"code","bc9e367f":"code","cccc07af":"code","ac23729a":"code","4330ead4":"code","b3cc12b9":"code","59b9c093":"code","8cd58c15":"code","23ed71fc":"code","b4fc9e7a":"code","9e0d6fcb":"code","3f5d43c1":"code","4c4266d3":"code","d660ddc4":"code","7e01e6b3":"code","81d4ca03":"code","c58a9303":"code","d72381b6":"code","0b9c8d32":"markdown","b2e86815":"markdown","40e48564":"markdown","6632a742":"markdown","d8ddf31c":"markdown","c6246728":"markdown","f21d08a8":"markdown","361f9e44":"markdown","436e491a":"markdown","ede1543d":"markdown","42aac146":"markdown","af25c356":"markdown","a76655b1":"markdown","20ab5f88":"markdown","1e148894":"markdown","e158b10e":"markdown","8ea455ae":"markdown","188c6f09":"markdown","22b0a15d":"markdown","64f80a37":"markdown","32bfbe3e":"markdown","01e3569c":"markdown","0dfdd483":"markdown","1ffe9529":"markdown"},"source":{"d8340741":"# Import libs\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd # to plot the map\nimport seaborn as sns # for other plots","efa88b92":"# Set the width to display\npd.set_option('display.width', 120)\n# Increase the number of rows to display\npd.set_option('display.max_rows', 180) \n\n# Get the data\nhappiness = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv')\n\n# Column map to rename\ncols_dict = {'Country':'country',\n             'Country or region':'country',\n             'Region':'region',\n             'Happiness Rank':'rank',\n             'Happiness.Rank':'rank',\n             'Overall rank':'rank',\n             'Happiness Score':'score',\n             'Happiness.Score':'score',\n             'Score':'score',\n             'Economy (GDP per Capita)':'gdp_per_capita',\n             'Economy..GDP.per.Capita.':'gdp_per_capita',\n             'GDP per capita':'gdp_per_capita',\n             'Family':'family',\n             'Freedom':'freedom',\n             'Freedom to make life choices':'freedom',\n             'Generosity':'generosity',\n             'Health (Life Expectancy)':'life_expectancy',\n             'Health..Life.Expectancy.':'life_expectancy',\n             'Healthy life expectancy':'life_expectancy',\n             'Perceptions of corruption':'trust_corruption',\n             'Trust (Government Corruption)':'trust_corruption',\n             'Trust..Government.Corruption.':'trust_corruption',\n             'Social support':'social_support',\n             'Dystopia Residual':'dystopia_residual',\n             'Dystopia.Residual':'dystopia_residual',\n             'Standard Error':'standard_error',\n             'Upper Confidence Interval':'whisker_high',\n             'Whisker.high':'whisker_high',\n             'Lower Confidence Interval':'whisker_low',\n             'Whisker.low':'whisker_low'\n            }\n\nhappiness.rename(columns=cols_dict, inplace=True) # rename the columns\n\nprint(happiness.columns) # check the new column names\n\nhappiness.head() # check the values","a2ee31c4":"happiness.tail(10) # last ten rows","45fe5f47":"happiness.info()","c115a040":"# Duplicated\nprint('Duplicated: {}'.format(happiness.duplicated(subset='country').sum()))","8bbeddad":"file_shape = '\/kaggle\/input\/natural-earth\/10m_cultural\/10m_cultural\/ne_10m_admin_0_countries_lakes.shp' # the shape file\n\ncols = ['NAME_LONG', 'NAME', 'GEOUNIT', 'ADM0_A3', 'CONTINENT', 'SUBREGION', 'REGION_WB', 'LEVEL', 'geometry']\n\n# Read the shapes\ncountries = gpd.read_file(file_shape)\ncountries = countries[cols].to_crs('EPSG:4326')\n\n# Convert column names to lowercase\ncountries.columns = countries.columns.str.lower()\n\ncountries.sample(5, random_state=1) # check the values randomly","2145f700":"countries.info()","f4392ce1":"print('Level of detail: {}'.format(countries['level'].value_counts()))","ef4ac176":"cols_check = ['country', 'geounit']\nhappiness_geo = countries.merge(happiness, left_on='geounit', right_on='country', how='outer')[cols_check]\nhappiness_geo[happiness_geo.isnull().any(axis=1)].sort_values(by='country') # the countries don't match","1f26b79b":"# Countries map to rename\ncountry_to_rename = {'Republic of the Congo':'Congo (Brazzaville)',\n                     'Democratic Republic of the Congo':'Congo (Kinshasa)',\n                     'Czechia':'Czech Republic',\n                     'Hong Kong S.A.R.':'Hong Kong',\n                     'Macedonia':'North Macedonia',\n                     'Palestine':'Palestinian Territories',\n                     'Republic of Serbia':'Serbia',\n                     'eSwatini':'Swaziland',\n                     'Trinidad and Tobago':'Trinidad & Tobago',\n                     'United States of America':'United States'\n                    }\n\ncountries['country'] = countries['geounit']\ncountries['country'].replace(country_to_rename, inplace=True) # rename\n\ncountries.sample(5, random_state=3) # check the values randomly","1910efe8":"happiness_geo = countries.merge(happiness, on='country', how='outer').copy()\n\n# Check for full match\nprint('Non-matching countries: {}'.format( happiness_geo[cols_check].isnull().any(axis=1).sum() )\n     )","095ed3db":"happiness_geo.info()","1727ee98":"from mpl_toolkits.axes_grid1 import make_axes_locatable\n%matplotlib inline\n\n# Turn on svg rendering\n%config InlineBackend.figure_format = 'svg'\n\n# Color palette for the blog\nsnark_palette = ['#e0675a', # red\n                 '#5ca0af', # green\n                 '#edde7e', # yellow\n                 '#211c47' # dark blue\n                ]","bc9e367f":"# ***With GeoPandas***\n\n# Color palette for the data\npalette = 'BrBG'\n\n# Inscriptions\ntitle = 'World Happiness in 2019'\n\ndescription = \"\"\"\nCountries with happiness scores on a 10-point scale based on answers to the main life evaluation question asked in the poll.\nData: Gallup World Poll - www.kaggle.com\/unsdsn\/world-happiness | Author: @data.sugar\n\"\"\"\n\n# Plot size\nfigsize = (8, 6)\n\n# Create the plot\nfig, ax = plt.subplots(1, 1, facecolor='w')\ndivider = make_axes_locatable(ax) # add colorbar\ncax = divider.append_axes('right', size=\"2%\", pad=0.1) # set colorbar\n\nax = happiness_geo.plot(column='score', figsize=figsize,\n                        cmap=palette, legend=True,\n                        missing_kwds={'color': 'lightgrey', # for non-rated countries\n                                      'label':'missing values'\n                                     },\n                        alpha=0.9, facecolor='white',\n                        ax=ax, cax=cax\n                       )\n\n# Set some aesthetic params for the plot\nax.set_title(title, fontdict={'fontsize': 14}, loc='left', c=snark_palette[-1]) # set a title of the plot\nax.annotate(description, xy=(0.03, 0.06), size=6, xycoords='figure fraction', c=snark_palette[-1])\nax.set_axis_off() # hide axes\nax.set_xlim([-170, 180])\nax.set_ylim([-65, 85])\ncax.tick_params(colors=snark_palette[-1]) # color x ticks\n\n# Save and plot\nfig.subplots_adjust(bottom=0.025, top=0.88, left=0.025, right=0.9) # adjust for the post picture\nplt.savefig('\/kaggle\/working\/plot.happiness.map.png', dpi=150, bbox_inches='tight')\nplt.show()","cccc07af":"pop = pd.read_csv('\/kaggle\/input\/population-2019\/population.csv')[['name', 'pop2019']]\npop['pop2019'] = pop['pop2019'] * 1000 # the population is given in thousands\npop.head()","ac23729a":"happiness_geo = happiness_geo[happiness_geo['score'].notnull()]","4330ead4":"cols_check = ['geounit', 'country', 'name_pop']\nhappiness_geo_pop = happiness_geo.merge(pop, how='outer',\n                                        left_on='country', right_on='name',\n                                        suffixes=(None, '_pop')\n                                       )[cols_check]\nhappiness_geo_pop[happiness_geo_pop.isnull().any(axis=1)] # the countries don't match","b3cc12b9":"# Countries map to rename\ncountry_to_rename = {'Palestine':'Palestinian Territories',\n                     'Republic of the Congo':'Congo (Brazzaville)',\n                     'DR Congo':'Congo (Kinshasa)',\n                     'Macedonia':'North Macedonia',\n                     'Trinidad and Tobago':'Trinidad & Tobago'\n                    }\n\npop['country'] = pop['name']\npop['country'].replace(country_to_rename, inplace=True) # rename\n\npop.sample(5, random_state=3) # check the values randomly","59b9c093":"happiness_geo_pop = happiness_geo.merge(pop, how='left', on='country', suffixes=(None, '_pop'))\nhappiness_geo_pop[happiness_geo_pop.isnull().any(axis=1)] # Check for full match","8cd58c15":"pop2019_update = {'Kosovo':1788891,\n                  'Northern Cyprus':326000,\n                  'Cyprus':888000,\n                  'Serbia':6945235\n                 }\n\nfor cntr in pop2019_update:\n    happiness_geo_pop.loc[happiness_geo_pop['country'] == cntr, 'pop2019'] = pop2019_update[cntr]\n    happiness_geo_pop.loc[happiness_geo_pop['country'] == cntr, 'name_pop'] = cntr\n\nhappiness_geo_pop[happiness_geo_pop['country'].isin(pop2019_update.keys())]","23ed71fc":"happiness_geo_pop.info()","b4fc9e7a":"# Define the weighted mean function according to the above formula\nmean_weighted = lambda x: np.average(x, weights=happiness_geo_pop.loc[x.index, 'pop2019'])","9e0d6fcb":"happiness_pv_cont = happiness_geo_pop.pivot_table(values='score', index='continent',\n                                                  aggfunc=mean_weighted, margins=True\n                                                 )\nhappiness_pv_cont = happiness_pv_cont.reset_index().sort_values(by='score', ascending=False)\nhappiness_pv_cont","3f5d43c1":"happiness_pv_reg = happiness_geo_pop.pivot_table(values='score', index='region_wb',\n                                                 aggfunc=mean_weighted, margins=True\n                                                )\nhappiness_pv_reg = happiness_pv_reg.reset_index().sort_values(by='score', ascending=False)\nhappiness_pv_reg","4c4266d3":"%matplotlib inline\n\n# Turn on svg rendering\n%config InlineBackend.figure_format = 'svg'\n\n# Color palette for the blog\nsnark_palette = ['#e0675a', # red\n                 '#5ca0af', # green\n                 '#edde7e', # yellow\n                 '#211c47' # dark blue\n                ]","d660ddc4":"# Color palette for the data\npalette = 'BrBG_r'\n\n# Inscriptions\ntitle = \"\"\"World Happiness by Continent in 2019\"\"\"\ndescription = \"\"\"\nContinents with weighted average happiness scores on a 10-point scale based on country scores.\nData: Gallup World Poll - www.kaggle.com\/unsdsn\/world-happiness | Author: @data.sugar\n\"\"\"\n\n# Plot size\nfigsize = (6,4)\n\n# Set the figure\nsns.set(context='paper', style='ticks', palette='BrBG',\n        rc={'xtick.major.size': 4, 'ytick.left':False,\n            'axes.spines.left': False, 'axes.spines.bottom': True,\n            'axes.spines.right': False, 'axes.spines.top': False\n           }\n       )\n\n# Create the plot\nf, ax = plt.subplots(1, 1, figsize=figsize, facecolor='w')\nsns.barplot(x='score', y='continent',\n            data=happiness_pv_cont[happiness_pv_cont['continent'] != 'All'],\n            orient='h', palette=palette, ax=ax\n           )\nax.axvline(x=happiness_pv_cont.loc[(happiness_pv_cont['continent'] == 'All'), 'score'].item(),\n           ymin=0, ymax=0.99,\n           marker='_', linestyle='--',\n           color=snark_palette[-1], label='World'\n          ) # World score\n\n# Set some aesthetic params for the plot\nax.set_title(title, fontdict={'fontsize': 16}, loc='left', pad=0, c=snark_palette[-1]) # set a title of the plot\nax.annotate(description, xy=(0.305, 0.004), size=6, xycoords='figure fraction', c=snark_palette[-1])\nax.text(s='World', x=5.25, y=6.2, c=snark_palette[-1]) # set label for the World score\nax.set_xlabel('Score', x=1.02, ha='right', c=snark_palette[-1]) # set label of x axis\nax.set_ylabel('') # set label of x axis\nax.tick_params(axis='x', colors=snark_palette[-1]) # color x ticks\nax.tick_params(axis='y', labelsize=12, colors=snark_palette[-1]) # set y ticks\nax.spines['bottom'].set_color(snark_palette[-1]) # color x axis\n\n# Save and plot\nfig.subplots_adjust(bottom=0.025, top=0.88, left=0.025, right=0.9) # adjust for the post picture\nplt.savefig('\/kaggle\/working\/plot.happiness.continent.png', dpi=150, bbox_inches='tight')\nplt.show()","7e01e6b3":"%matplotlib inline\n\n# Turn on svg rendering\n%config InlineBackend.figure_format = 'svg'\n\n# Color palette for the blog\nsnark_palette = ['#e0675a', # red\n                 '#5ca0af', # green\n                 '#edde7e', # yellow\n                 '#211c47' # dark blue\n                ]","81d4ca03":"# Color palette for the data\npalette = 'BrBG_r'\n\n# Inscriptions\ntitle = \"\"\"World Happiness by Region in 2019\"\"\"\ndescription = \"\"\"\nRegions with weighted average happiness scores on a 10-point scale based on country scores.\nData: Gallup World Poll - www.kaggle.com\/unsdsn\/world-happiness | Author: @data.sugar\n\"\"\"\n\n# Plot size\nfigsize = (6,4)\n\n# Set the figure\nsns.set(context='paper', style='ticks', palette='BrBG',\n        rc={'xtick.major.size': 4, 'ytick.left':False,\n            'axes.spines.left': False, 'axes.spines.bottom': True,\n            'axes.spines.right': False, 'axes.spines.top': False\n           }\n       )\n\n# Create the plot\nf, ax = plt.subplots(1, 1, figsize=figsize, facecolor='w')\nsns.barplot(x='score', y='region_wb',\n            data=happiness_pv_reg[happiness_pv_reg['region_wb'] != 'All'],\n            orient='h', palette=palette, ax=ax\n           )\nax.axvline(x=happiness_pv_reg.loc[(happiness_pv_reg['region_wb'] == 'All'), 'score'].item(),\n           ymin=0, ymax=0.99,\n           marker='_', linestyle='--',\n           color=snark_palette[-1], label='World'\n          ) # World score\n\n# Set some aesthetic params for the plot\nax.set_title(title, fontdict={'fontsize': 16}, loc='left', pad=0, c=snark_palette[-1]) # set a title of the plot\nax.annotate(description, xy=(0.315, 0.004), size=6, xycoords='figure fraction', c=snark_palette[-1])\nax.text(s='World', x=5.25, y=6.2, c=snark_palette[-1]) # set label for the World score\nax.set_xlabel('Score', x=1.02, ha='right', c=snark_palette[-1]) # set label of x axis\nax.set_ylabel('') # set label of x axis\nax.tick_params(axis='x', colors=snark_palette[-1]) # color x ticks\nax.tick_params(axis='y', labelsize=12, colors=snark_palette[-1]) # set y ticks\nax.spines['bottom'].set_color(snark_palette[-1]) # color x axis\n\n# Save and plot\nfig.subplots_adjust(bottom=0.025, top=0.88, left=0.025, right=0.9) # adjust for the post picture\nplt.savefig('\/kaggle\/working\/plot.happiness.region.png', dpi=150, bbox_inches='tight')\nplt.show()","c58a9303":"happiness_top5 = (happiness_geo_pop[['country', 'rank', 'score']] # get only the required columns\n                      .sort_values(by='score', ascending=False) # get the first 5 rows with the highest score \n                                                                #     and the last 5 rows with the lowest score\n                      .iloc[[*range(5), *range(-5, 0)]] # select only the first and last 5 rows\n                 )\nhappiness_top5","d72381b6":"# Color palette for the data\npalette = 'BrBG_r'\n\n# Inscriptions\ntitle = \"\"\"Top5 Happiest and Least Happy Countries\"\"\"\ndescription = \"\"\"Countries with the highest and lowest happiness scores on a 10-point scale.\nData: Gallup World Poll - www.kaggle.com\/unsdsn\/world-happiness | Author: @data.sugar\n\"\"\"\n\n# Plot size\nfigsize = (6,4)\n\n# Set the figure\nsns.set(context='paper', style='ticks', palette='BrBG',\n        rc={'xtick.major.size': 4, 'ytick.left':False,\n            'axes.spines.left': False, 'axes.spines.bottom': True,\n            'axes.spines.right': False, 'axes.spines.top': False\n           }\n       )\n\n# Create the plot\nf, ax = plt.subplots(1, 1, figsize=figsize, facecolor='w')\nsns.barplot(x='score', y='country', data=happiness_top5,\n            orient='h', palette=palette, ax=ax\n           )\nax.axvline(x=happiness_pv_reg.loc[(happiness_pv_reg['region_wb'] == 'All'), 'score'].item(),\n           ymin=0, ymax=0.996,\n           marker='_', linestyle='--',\n           color=snark_palette[-1], label='World'\n          ) # World score\n\n# Set some aesthetic params for the plot\nax.set_title(title, fontdict={'fontsize': 16}, loc='left', pad=0, c=snark_palette[-1]) # set a title of the plot\nax.annotate(description, xy=(0.3, 0.004), size=6, xycoords='figure fraction', c=snark_palette[-1])\nax.text(s='World', x=5.25, y=9.2, c=snark_palette[-1]) # set label for the World score\nax.set_xlabel('Score', x=1.02, ha='right', c=snark_palette[-1]) # set label of x axis\nax.set_ylabel('') # set label of x axis\nax.tick_params(axis='x', colors=snark_palette[-1]) # color x ticks\nax.tick_params(axis='y', labelsize=12, colors=snark_palette[-1]) # set y ticks\nax.spines['bottom'].set_color(snark_palette[-1]) # color x axis\n\n# Save and plot\nfig.subplots_adjust(bottom=0.025, top=0.88, left=0.025, right=0.9) # adjust for the post picture\nplt.savefig('\/kaggle\/working\/plot.happiness.top5.png', dpi=150, bbox_inches='tight')\nplt.show()","0b9c8d32":"It's all right.\nLet's continue with the plots.\n\n\n## The World Happiness Map\n\nWe want to display a map of the world and overview how the happiness scores are distributed on it.  \nWe'll get the borders of countries from [Natural Earth Data](http:\/\/www.naturalearthdata.com\/downloads\/10m-cultural-vectors\/).  \n\nWe'll create a GeoDataFrame from the `Admin 0 - Countries` shapefile.  \nHere are some notes on the Natural Earth's data:\n\n- Natural Earth uses `UTF-8` character encoding to support internationalization with a full range of language scripts.\n- The projection specified in the `PRJ` file is `WGS84`, which is `EPSG:4326`.\n\nWe'll only be interested in the following columns:\n\n- `NAME_LONG` - full name of the country\n- `NAME` - name of the country\n- `GEOUNIT` - label for the territory\n- `ADM0_A3` - the 3-letter country codes defined in ISO 3166-1 alpha-3\n- `CONTINENT`\n- `SUBREGION` - subregion the country belongs to\n- `REGION_WB` - region the country belongs to\n- `LEVEL` - level of detail\n- `geometry` - the country shapes as polygons","b2e86815":"We have 156 countries with non-empty variables.  \nLet's compute the weighted mean happiness scores by continent and region.\n\n### Calculating the weighted average happiness score","40e48564":"## Happiness Rating by Region","6632a742":"By region:","d8ddf31c":"Below, we'll check the prepared data.","c6246728":"By continent:","f21d08a8":"## Happiness Rating by Continent","361f9e44":"To provide the same country names:\n\n- Create a dictionary mapping all names to the values in the `happiness` dataset since we explore the happiness data.\n- Store the `geounit` column in a new column `country`.\n- Rename the countries by replacing the values in the new `country` column according to the map dictionary.","436e491a":"There are 255 countries, and there are no empty values for them.\n\nAccording to the [`How-to` section](https:\/\/www.naturalearthdata.com\/downloads\/10m-cultural-vectors\/10m-admin-0-details\/), let's check that the borders are at the country level, i.e. the `level` equal to 2.","ede1543d":"`Kosovo` and `Northern Cyprus` are disputed area and are not presented in the World Population Review report.  \nWe should also clarify the population for related countries: Serbia and Cyprus, respectively.\nSo, we'll fill in the popualtion for these areas from the following resources:\n\n- [Wikipedia Northern Cyprus](https:\/\/en.wikipedia.org\/wiki\/Northern_Cyprus)\n- [Wikipedia Demographics of Cyprus](https:\/\/en.wikipedia.org\/wiki\/Demographics_of_Cyprus#Population)\n- [Wikipedia Demographics of Serbia](https:\/\/en.wikipedia.org\/wiki\/Demographics_of_Serbia)\n- [Wikipedia Demographics of Kosovo](https:\/\/en.wikipedia.org\/wiki\/Demographics_of_Kosovo) ","42aac146":"Let's combine the happiness data with the population.","af25c356":"Let's take the latest report, published in 2019.  \nWe'll rename the columns according to the snake_case format.","a76655b1":"We can now use the new `country` column to merge the two datasets.","20ab5f88":"## Happiness by Continent and Region\n\nIt should be noted that we have only 156 ranked countries, not all countries in the world.  \nWith this in mind, let's continue with creating a happiness rating by continent\/region.\n\nWe'll calculate the weighted average happiness score using the formula:  \n    for each continent\/region - $$\\overline{score}_{continent\/region} = {\\displaystyle\\sum_{i=1}^{n} score_{i} * population_{i} \\over \\displaystyle\\sum_{i=1}^{n} population_{i}},$$ where `n` - the number of ranked countries per continent\/region.\n\nThe formula takes into account the population of each country in the region.\n\n### Getting population by country\n\nWe'll take the population by country from [World Population Review](https:\/\/worldpopulationreview.com\/#liveWorldPop).  \nWe have uploaded the data to the `population.csv` file.  \nAs we explore the happiness report for 2019, we should get the population for 2019.\n\nLet's read the file and examine the data.","1e148894":"Now, we can merge geo data with happiness data.  \n\nFirst, we need to check the columns that will be used for merging.  \nCountry names may differ in data sets, for instance, `eSwatini` and `Swaziland`, `Trinidad and Tobago` and `Trinidad & Tobago`. In this case, the rows will not match.\n\nLet's compare the `geounit` column and the `country` column of the `happiness` data set.  \nTo do this, we'll combine two data sets using `outer` join.","e158b10e":"We see 156 countries in the report. Fortunately, there is no any missing values. All columns except the `country` were successfully casted to a numeric type.\n\nLet's check for duplicates.","8ea455ae":"There are 255 countries in total, 156 of them are ranked by their happiness levels.  \n\nLet's create the World Happiness Map.","188c6f09":"First, we need to check the key columns before merging.  \nWe'll compare the `country` column and the `name` column of the `pop` data set.","22b0a15d":"Let's bring these names to the same values:\n\nAs in the previous case, we'll do the following:\n\n- Create a dictionary mapping all names to the values in the `happiness` dataset since we explore the happiness data.\n- Store the `name` column in a new column `country`.\n- Rename the countries by replacing the values in the new `country` column according to the map dictionary.","64f80a37":"## TOP5 Countries\n\nLet's show the five countries with the highest happiness scores and the five with the lowest happiness scores.","32bfbe3e":"## Conclusions\n\nHere are our thoughts on the World Happiness Map.  \n\nLet's distinguish three groups of cultures: [Western culture, Eastern culture](https:\/\/en.wikipedia.org\/wiki\/East%E2%80%93West_dichotomy) and others.  \n\nOn the map, the happiest areas are those where Western culture has the greatest influence on people's minds.  \n\nThere are many different cultures in Africa. Eastern culture, for example, covers India and China. Russia or the countries of South America belong to mixed cultures, where, however, the influence of Western values is felt.  \n\nIt seems that the countries where Western culture is widespread are the happiest.  \n\nHowever, we would say that the method of evaluating happiness is most likely not suitable for evaluating the happiness of other cultures, and the map reflects more the spread of Western culture in the world than happiness.  \n\nNotwithstanding, we are surprised that the least happy region is South Asia.","01e3569c":"Next, we'll plot the ratings.","0dfdd483":"# In Search Of Happiness: Where Is It?\n\nPeople all over the world are looking for a recipe for happiness. People try to measure happiness like height or temperature.  \nFor example, [this report from Kaggle](https:\/\/www.kaggle.com\/unsdsn\/world-happiness?select=2019.csv) ranks 156 countries by their level of happiness on a 10-point scale.\n\n\n## The World Happiness Report\n\nQuoting Kaggle:\n\nThe World Happiness Report is a landmark survey of the state of global happiness. The first report was published in 2012, the second in 2013, the third in 2015, and the fourth in the 2016 Update. The World Happiness 2017, which ranks 155 countries by their happiness levels, was released at the United Nations at an event celebrating International Day of Happiness on March 20th. The report continues to gain global recognition as governments, organizations and civil society increasingly use happiness indicators to inform their policy-making decisions. Leading experts across fields \u2013 economics, psychology, survey analysis, national statistics, health, public policy and more \u2013 describe how measurements of well-being can be used effectively to assess the progress of nations. The reports review the state of happiness in the world today and show how the new science of happiness explains personal and national variations in happiness.\n\nYou can read more [here](https:\/\/www.kaggle.com\/unsdsn\/world-happiness).\n\n\n## Introduction\n\nEven in our search of happiness, we've never been interested in anything but the data.  \nWith The World Happiness Report, we would like to discover the happiest places.\n\nWe are most interested in the following columns:\n\n- `Country or region` - country name\n- `Overall rank` - country's place in the rating\n- `Score` - happiness score\n\nIn this project, we'll do the following:\n\n1. Generate a world happiness map.\n2. Determine happiness by region and continent. \n3. Overview TOP5 rating of the happiest countries and the least happy countries.\n\nAs a result, we want to find out ***where*** *the happiest people live*.\n\n\n## Reading The Report","1ffe9529":"We'll select only the ranked countries and then combine them with the population data."}}