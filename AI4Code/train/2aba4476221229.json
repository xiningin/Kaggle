{"cell_type":{"15fe81b1":"code","29b01ad4":"code","7e3b11b2":"code","1369fdbe":"code","7b129736":"markdown","0d65f6dd":"markdown"},"source":{"15fe81b1":"from numpy import random\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import LinearRegression\nimport shap\n\n\nsample_size = 1000\nX1 = 2*random.rand(sample_size)\nX2 = 2*random.rand(sample_size)\nX3 = random.rand(sample_size)\ny = X1**1.5 + 1.7 * X1 - 2 * X1 * X2 + 3 * X2\n\nq4_data = pd.DataFrame({'feature_of_interest': X1,\n                        'other_feature': X2,\n                        'y': y})\n\n\nq4_X = q4_data.iloc[:,:2]\nfirst_model = RandomForestRegressor(n_estimators=30, random_state=1).fit(q4_X, q4_data.y)\n\nn_to_plot = 200\n\nexplainer = shap.TreeExplainer(first_model)\nq4_shap_values = explainer.shap_values(q4_X)\nshap.summary_plot(q4_shap_values, q4_X)\n\nshap.dependence_plot(\"feature_of_interest\", q4_shap_values, q4_X, interaction_index=\"other_feature\")\n","29b01ad4":"second_model = LinearRegression().fit(q4_X, q4_data.y)\nn_to_plot = 200\n\nexplainer = shap.KernelExplainer(second_model.predict, q4_X)\nsecond_shap_values = explainer.shap_values(q4_X, nsamples=50)\nshap.summary_plot(second_shap_values, q4_X)\n\nshap.dependence_plot(\"feature_of_interest\", second_shap_values, q4_X, interaction_index=\"other_feature\")\n","7e3b11b2":"stump_model = RandomForestRegressor(n_estimators=500, max_depth=1, random_state=1).fit(q4_X, q4_data.y)\n\nexplainer = shap.TreeExplainer(stump_model)\nstump_shap_values = explainer.shap_values(q4_X)\nshap.summary_plot(stump_shap_values, q4_X)\n\nshap.dependence_plot(\"feature_of_interest\", stump_shap_values, q4_X, interaction_index=\"other_feature\")\n","1369fdbe":"q4_data.plot.scatter('feature_of_interest', 'y')\nq4_data.plot.scatter('other_feature', 'y')","7b129736":"### Linear Model","0d65f6dd":"### Decision Stumps"}}