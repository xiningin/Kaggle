{"cell_type":{"e2f64b76":"code","0d4ff495":"code","6efb4ebf":"code","0dfe04d6":"code","be5b2107":"code","afeb48ca":"code","5938a561":"code","78db531a":"code","52b36658":"code","ca3c2e0f":"code","6d0fecb4":"code","a633542e":"code","6a180627":"code","09183fc4":"code","0fda5836":"code","cfb6732f":"code","b22ebddb":"code","69eea5b5":"code","5ea77ae6":"code","c2a8471a":"code","686d9ae0":"code","b6f0c751":"code","53f16d3c":"code","723bdb7c":"code","09ae510b":"code","8ce2200b":"code","8d072f2e":"code","d33dada3":"code","450bc09f":"code","90837df1":"code","b84230a4":"code","1f286295":"code","43763fe6":"code","347702d2":"code","beef570a":"code","e75ffc59":"code","25c3faee":"code","ba5aae98":"code","9cda1265":"code","41aba230":"code","9ae1cecd":"code","8aded571":"code","949c9037":"code","96e85beb":"code","63df8996":"code","9942e518":"code","b0c2802d":"code","1a18ee2a":"code","09a23cac":"code","73e495a9":"code","eca5089b":"code","d0b73469":"code","688e679e":"code","d2dbf6bd":"code","be5880c9":"code","9187d0df":"code","d6c819d3":"code","e9b54f34":"code","554a37f4":"code","7c93075c":"code","209face5":"markdown","db3a35a0":"markdown","7f19f447":"markdown","512e33e0":"markdown","2958b52c":"markdown","4a85b260":"markdown","1fd20dc9":"markdown","73b0ba2c":"markdown","b69056a5":"markdown","3c3f2407":"markdown","7cbc4cf2":"markdown","7d7b7290":"markdown","044876ac":"markdown","90693245":"markdown","e2a8c0d1":"markdown","aa9817a0":"markdown","447608cb":"markdown","c488643f":"markdown","51f351fb":"markdown","2e4addda":"markdown","2c52ebb0":"markdown","70235163":"markdown","ddb52f97":"markdown","9cb760da":"markdown","1ee1b321":"markdown","5e532436":"markdown","51e5af67":"markdown","3179b332":"markdown"},"source":{"e2f64b76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom IPython.display import display\npd.options.display.max_columns = None","0d4ff495":"meta = pd.read_csv('\/kaggle\/input\/nba-playoff-2020\/nba_playoffs_meta.csv')\nmeta","6efb4ebf":"games = pd.read_csv('\/kaggle\/input\/nba-playoff-2020\/nba_playoffs_games.csv')\ngames","0dfe04d6":"df = pd.merge(games, meta, left_on='home_team', right_on='team_short')\ndf = df.drop(['team', 'team_short', 'conference'], axis=1)\ndf['home_team_win_ratio'] = df['game_won'] \/ df['game_played']\ndf['home_team_points_per_game'] = df['points_scored'] \/ df['game_played']\ndf['home_team_missed_points'] = df['points_missed'] \/ df['game_played']\ndf['home_team_home_win_ratio'] = df['game_won_home'] \/ (df['game_won_home'] + df['game_lose_home'])\ndf['home_team_away_win_ratio'] = df['game_won_away'] \/ (df['game_won_away'] + df['game_lose_away'])\ndf = df.drop(['game_won', 'game_lose', 'game_played', 'points_scored', 'points_missed', 'game_won_home', 'game_lose_home', 'game_won_away', 'game_lose_away'], axis=1)\ndf.columns = ['series_id', 'home_team', 'away_team', 'home_points', 'away_points', 'round', 'game', 'score_home', 'score_away', 'home_conference_position',\n              'home_team_win_ratio', 'home_team_points_per_game', 'home_team_missed_points', 'home_team_home_win_ratio', 'home_team_away_win_ratio']\ndf = pd.merge(df, meta, left_on='away_team', right_on='team_short')\ndf = df.drop(['team', 'team_short', 'conference'], axis=1)\ndf['away_team_win_ratio'] = df['game_won'] \/ df['game_played']\ndf['away_team_points_per_game'] = df['points_scored'] \/ df['game_played']\ndf['away_team_missed_points'] = df['points_missed'] \/ df['game_played']\ndf['away_team_home_win_ratio'] = df['game_won_home'] \/ (df['game_won_home'] + df['game_lose_home'])\ndf['away_team_away_win_ratio'] = df['game_won_away'] \/ (df['game_won_away'] + df['game_lose_away'])\ndf = df.drop(['game_won', 'game_lose', 'game_played', 'points_scored', 'points_missed', 'game_won_home', 'game_lose_home', 'game_won_away', 'game_lose_away'], axis=1)","be5b2107":"X = df.drop(['home_points', 'away_points'], axis=1)\ny = df[['home_points', 'away_points']]\nX","afeb48ca":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import cross_val_score","5938a561":"Xtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"neg_root_mean_squared_error Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"neg_root_mean_squared_error Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","78db531a":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 1}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 0\nXtr['score_away'] = 0\nXtr['home_conference_position'] = X[X['home_team'] == 'BOS']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'BOS']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'BOS']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","52b36658":"print('BOSTON points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","ca3c2e0f":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'BOS'\nXtr['away_team'] = 'MIA'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","6d0fecb4":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 2}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 0\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'BOS']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'BOS']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'BOS']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","a633542e":"print('BOSTON points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","6a180627":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'BOS'\nXtr['away_team'] = 'MIA'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","09183fc4":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 3}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 1\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'BOS']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'BOS']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'BOS']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_away_win_ratio'].values[0]\nXtr","0fda5836":"print('MIAMI points: ', int(model_home.predict(Xtr)[0]))\nprint('BOSTON points: ', int(model_away.predict(Xtr)[0]))","cfb6732f":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'MIA'\nXtr['away_team'] = 'BOS'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","b22ebddb":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 4}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 2\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'BOS']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'BOS']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'BOS']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_away_win_ratio'].values[0]\nXtr","69eea5b5":"print('MIAMI points: ', int(model_home.predict(Xtr)[0]))\nprint('BOSTON points: ', int(model_away.predict(Xtr)[0]))","5ea77ae6":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'MIA'\nXtr['away_team'] = 'BOS'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","c2a8471a":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 5}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 1\nXtr['score_away'] = 3\nXtr['home_conference_position'] = X[X['home_team'] == 'BOS']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'BOS']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'BOS']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'BOS']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","686d9ae0":"print('BOSTON points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","b6f0c751":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'BOS'\nXtr['away_team'] = 'MIA'\nX = pd.concat([X, Xtr])\n\nX_semi = X.tail(5)\ny_semi = y.tail(5)","53f16d3c":"X = X.head(66)\ny = y.head(66)","723bdb7c":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 1}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 0\nXtr['score_away'] = 0\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'DEN']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'DEN']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'DEN']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_away_win_ratio'].values[0]\nXtr","09ae510b":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('DENVER points: ', int(model_away.predict(Xtr)[0]))","8ce2200b":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'LAL'\nXtr['away_team'] = 'DEN'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","8d072f2e":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 2}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 1\nXtr['score_away'] = 0\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'DEN']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'DEN']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'DEN']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_away_win_ratio'].values[0]\nXtr","d33dada3":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('DENVER points: ', int(model_away.predict(Xtr)[0]))","450bc09f":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'LAL'\nXtr['away_team'] = 'DEN'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","90837df1":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 3}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 1\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'DEN']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'DEN']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'DEN']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr","b84230a4":"print('DENVER points: ', int(model_home.predict(Xtr)[0]))\nprint('LAKERS points: ', int(model_away.predict(Xtr)[0]))","1f286295":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'DEN'\nXtr['away_team'] = 'LAL'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","43763fe6":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 4}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 1\nXtr['score_away'] = 2\nXtr['home_conference_position'] = X[X['home_team'] == 'DEN']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'DEN']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'DEN']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr","347702d2":"print('DENVER points: ', int(model_home.predict(Xtr)[0]))\nprint('LAKERS points: ', int(model_away.predict(Xtr)[0]))","beef570a":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'DEN'\nXtr['away_team'] = 'LAL'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","e75ffc59":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 5}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 3\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'DEN']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'DEN']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'DEN']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'DEN']['home_team_away_win_ratio'].values[0]\nXtr","25c3faee":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('DENVER points: ', int(model_away.predict(Xtr)[0]))","ba5aae98":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'LAL'\nXtr['away_team'] = 'DEN'\nX = pd.concat([X, Xtr])","9cda1265":"X = pd.concat([X, X_semi])\ny = pd.concat([y, y_semi])","41aba230":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 1}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 0\nXtr['score_away'] = 0\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","9ae1cecd":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","8aded571":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'LAL'\nXtr['away_team'] = 'MIA'\nX = pd.concat([X, Xtr])","949c9037":"Xtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","96e85beb":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 2}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 0\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","63df8996":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","9942e518":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'LAL'\nXtr['away_team'] = 'MIA'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","b0c2802d":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 3}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 2\nXtr['score_away'] = 0\nXtr['home_conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr","1a18ee2a":"print('MIAMI points: ', int(model_home.predict(Xtr)[0]))\nprint('LAKERS points: ', int(model_away.predict(Xtr)[0]))","09a23cac":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'MIA'\nXtr['away_team'] = 'LAL'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","73e495a9":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 4}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 2\nXtr['score_away'] = 1\nXtr['home_conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr","eca5089b":"print('MIAMI points: ', int(model_home.predict(Xtr)[0]))\nprint('LAKERS points: ', int(model_away.predict(Xtr)[0]))","d0b73469":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'MIA'\nXtr['away_team'] = 'LAL'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","688e679e":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 5}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 2\nXtr['score_away'] = 2\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","d2dbf6bd":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","be5880c9":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'LAL'\nXtr['away_team'] = 'MIA'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","9187d0df":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 6}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 3\nXtr['score_away'] = 2\nXtr['home_conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr","d6c819d3":"print('MIAMI points: ', int(model_home.predict(Xtr)[0]))\nprint('LAKERS points: ', int(model_away.predict(Xtr)[0]))","e9b54f34":"ytr = pd.DataFrame({'home_points': int(model_home.predict(Xtr)[0]), 'away_points': int(model_away.predict(Xtr)[0])}, index=[0])\ny = pd.concat([y, ytr])\nXtr['home_team'] = 'MIA'\nXtr['away_team'] = 'LAL'\nX = pd.concat([X, Xtr])\n\nXtr = X.drop(['series_id', 'home_team', 'away_team', 'round'], axis=1)\nmodel_home = DecisionTreeRegressor(random_state=666)\ntarget = y['home_points']\nmodel_home.fit(Xtr, target)\nscores = cross_val_score(model_home, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Home: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))\ntarget = y['away_points']\nmodel_away = DecisionTreeRegressor(random_state=666)\nmodel_away.fit(Xtr, target)\nscores = cross_val_score(model_away, Xtr, target, cv=10, scoring='neg_root_mean_squared_error')\nprint(\"Score Away: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","554a37f4":"Xtr = pd.DataFrame([], columns=['game', 'score_home', 'score_away', 'home_conference_position',\n       'home_team_win_ratio', 'home_team_points_per_game',\n       'home_team_missed_points', 'home_team_home_win_ratio',\n       'home_team_away_win_ratio', 'conference_position',\n       'away_team_win_ratio', 'away_team_points_per_game',\n       'away_team_missed_points', 'away_team_home_win_ratio',\n       'away_team_away_win_ratio'])\n\nXtr = Xtr.append({'game': 7}, ignore_index=True)\nXtr['game'] = Xtr['game'].astype(np.int8)\nXtr['score_home'] = 3\nXtr['score_away'] = 3\nXtr['home_conference_position'] = X[X['home_team'] == 'LAL']['home_conference_position'].values[0]\nXtr['home_team_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_win_ratio'].values[0]\nXtr['home_team_points_per_game'] = X[X['home_team'] == 'LAL']['home_team_points_per_game'].values[0]\nXtr['home_team_missed_points'] = X[X['home_team'] == 'LAL']['home_team_missed_points'].values[0]\nXtr['home_team_home_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_home_win_ratio'].values[0]\nXtr['home_team_away_win_ratio'] = X[X['home_team'] == 'LAL']['home_team_away_win_ratio'].values[0]\nXtr['conference_position'] = X[X['home_team'] == 'MIA']['home_conference_position'].values[0]\nXtr['away_team_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_win_ratio'].values[0]\nXtr['away_team_points_per_game'] = X[X['home_team'] == 'MIA']['home_team_points_per_game'].values[0]\nXtr['away_team_missed_points'] = X[X['home_team'] == 'MIA']['home_team_missed_points'].values[0]\nXtr['away_team_home_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_home_win_ratio'].values[0]\nXtr['away_team_away_win_ratio'] = X[X['home_team'] == 'MIA']['home_team_away_win_ratio'].values[0]\nXtr","7c93075c":"print('LAKERS points: ', int(model_home.predict(Xtr)[0]))\nprint('MIAMI points: ', int(model_away.predict(Xtr)[0]))","209face5":"## Game 4: Denver 1 - 2 Lakers","db3a35a0":"## GAME 1: Boston 0 - 0 Miami","7f19f447":"### Prepare training set","512e33e0":"## Game 5: Lakers 3 - 1 Denver","2958b52c":"<h1><center>Miami Heat - champion! (4-3 in Finals)<\/center><\/h1>\n\n<center><img src=\"https:\/\/sportsgamingrosters.files.wordpress.com\/2019\/06\/u6bxz6n2tlrjgwnyewlke2i54.png?w=843&h=547&crop=1\"><\/center>","4a85b260":"## Game 2: Lakers 1 - 0 Denver","1fd20dc9":"### This file contains information about 16 teams that take part in NBA playoffs 2020","73b0ba2c":"## Game 1: Lakers 0 - 0 Denver","b69056a5":"## GAME 2: Boston 0 - 1 Miami","3c3f2407":"<h1><center>NBA playoffs 2020. Predict the champion<\/center><\/h1>\n\n<center><img src=\"https:\/\/sportshub.cbsistatic.com\/i\/r\/2020\/09\/16\/e04e0e6f-b22b-4116-8f11-e2bea3023b06\/thumbnail\/1200x675\/dcd639df9b5bf40ef699354dfba23d7a\/2020nbabracketnuggets.png\"><\/center>","7cbc4cf2":"## Game 6: Miami 3 - 2 Lakers","7d7b7290":"### Let's build simple decision tree model","044876ac":"# MIAMI 4 - 1 BOSTON","90693245":"## GAME 5: Boston 1 - 3 Miami","e2a8c0d1":"## Game 3: Denver 1 - 1 Lakers","aa9817a0":"<h1><center>WEST Conference finals. LAKERS vs DENVER<\/center><\/h1>\n\n<center><img src=\"https:\/\/www.lineups.com\/articles\/wp-content\/uploads\/2018\/12\/lakers-vs-denver-nuggets-1200x720.jpg\"><\/center>\n\n\n","447608cb":"## GAME 4: Miami 2 - 1 Boston","c488643f":"<h1><center>NBA Finals: Lakers - Miami<\/center><\/h1>\n\n<center><img src=\"https:\/\/www.lineups.com\/articles\/wp-content\/uploads\/2018\/12\/lakers-vs-heat-1200x720.jpg\"><\/center>\n\n","51f351fb":"## Game 2: Lakers 0 - 1 Miami","2e4addda":"## Game 3: Miami 2 - 0 Lakers","2c52ebb0":"<h1><center>EAST Conference finals. Boston vs MIAMI<\/center><\/h1>\n\n<center><img src=\"https:\/\/artwork.espncdn.com\/airings\/d8cabc82-3c46-48b4-a4e6-67c65057f8c6\/16x9\/original_20200510003013.jpg\"><\/center>\n\n","70235163":"### 1. nba_playoffs_meta.csv","ddb52f97":"## Game 5: Lakers 2 - 2 Miami","9cb760da":"## GAME 3: Miami 1 - 1 Boston","1ee1b321":"## Game 1: Lakers 0 - 0 Miami","5e532436":"## Game 7: Lakers 3 - 3 Miami","51e5af67":"# LAKERS 4 - 1 DENVER","3179b332":"## Game 4: Miami 2 - 1 Lakers"}}