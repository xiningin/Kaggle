{"cell_type":{"0ca3662a":"code","380bd773":"code","d84ac565":"code","bbbd73d9":"code","c6d8ac38":"code","78952270":"code","06857a89":"code","76c6a4b9":"code","3477e046":"code","04c7d35c":"code","21a3a60e":"code","9731faf1":"code","21b289b7":"code","9ef9cd1a":"code","0fb74b22":"code","f45fa064":"code","f6a532cd":"code","efc456f6":"code","48f546cf":"code","7243b451":"code","31060228":"code","f4f4d2a0":"code","5fdd5ea2":"code","5453f5ea":"code","34f9771d":"code","5a8a3cb7":"markdown","470b9feb":"markdown","39aed538":"markdown","447b26dc":"markdown","8b0988d9":"markdown","1aa5c3f8":"markdown","d22bacd1":"markdown","afe72f21":"markdown","69219caf":"markdown","2c9b3f6f":"markdown","e3230945":"markdown","d9baaaa9":"markdown","0ab2caec":"markdown","47bb3416":"markdown","7edf9850":"markdown","97b1a701":"markdown","d310b0e0":"markdown","cd975842":"markdown","d49949ae":"markdown","474ff48d":"markdown"},"source":{"0ca3662a":"# Check files\n!ls ..\/input\/*","380bd773":"# Set up modules\/libraries\nimport pandas as pd\nimport numpy as np\nfrom pandasql import sqldf\nsql = lambda q: sqldf(q, globals())\n\n# Data Viz libraries\nimport matplotlib.pyplot as plt # basic plotting\nimport seaborn as sns # for prettier plots\nimport plotly.graph_objects as go\n\n# Config plot style sheets\n# https:\/\/matplotlib.org\/3.1.0\/gallery\/style_sheets\/style_sheets_reference.html\nplt.style.use('fivethirtyeight')\npd.plotting.register_matplotlib_converters()\n\n# suppress warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d84ac565":"#import BOM dataset from Kaggle\nweather_AU = pd.read_csv('..\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\nweather_AU.head(5)","bbbd73d9":"weather_AU.describe().transpose()","c6d8ac38":"print('min', weather_AU['Date'].min())\nprint('max', weather_AU['Date'].max())","78952270":"# Import Australian BOM weather observation data\n# Ingest daily maximum temperature for Sydney, Brisbane and Melbourne\nweather_brisbane = pd.read_csv('..\/input\/bom-weather-observation-data-select-stations\/IDCJAC0010_040913_1800_Data.csv') # 040913 is Brisbane\n\nweather_brisbane.head(10)","06857a89":"# Let's see spread of data\nweather_brisbane.describe().transpose()","76c6a4b9":"# See how many missing values\nweather_brisbane[weather_brisbane.isna().any(axis=1)]","3477e046":"# Let's get rid of the missing values - get rid of the row if any NaNs\nweather_brisbane.drop(columns=['Bureau of Meteorology station number', 'Product code', 'Days of accumulation of maximum temperature', 'Quality'], inplace=True)\n\nweather_brisbane.dropna(axis=0, how='any', inplace=True)\n\nweather_brisbane.head(10)","04c7d35c":"weather_brisbane['Date'] = pd.to_datetime(weather_brisbane[['Year', 'Month', 'Day']])\n\nweather_brisbane.drop(columns=['Year', 'Month', 'Day'], inplace=True)\n\nweather_brisbane.head(10)","21a3a60e":"# Let's set index to be datetime so we can filter easily\nweather_brisbane.set_index('Date', inplace=True)","9731faf1":"weather_brisbane.dtypes","21b289b7":"# Given forecast weather, let's have a look at autocorrelation at the averaged to the monthly level\nfrom pandas.plotting import autocorrelation_plot\n\nweather_brisbane_monthly = weather_brisbane.resample('M').mean()\n\nautocorrelation_plot(weather_brisbane_monthly['Maximum temperature (Degree C)'])","9ef9cd1a":"# Show interactive plot limited to date range\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=weather_brisbane.index\n                         ,y=weather_brisbane['Maximum temperature (Degree C)']\n                         ,name='Weather - Brisbane observation for Max Temp (c)'\n                         ,line_color='deepskyblue'\n                         )\n             )\nfig.update_layout(title_text='Interactive - Brisbane weather max temperature'\n                  ,xaxis_range=['1999-01-01','2019-12-31']\n                  ,xaxis_rangeslider_visible=True)\nfig.show()","0fb74b22":"# More comprehensive profiling\n\n# 3 aspects of EDA that it captures:\n# 1. Data Quality - ie df.dtypes and df.describe\n# 2. Variable relationship - Pearson correlation - sns.heatmap(df.corr().annot=True)\n# 3. Data spread - mean, std dev, median, min, max, histograms - sns.boxplot('variable', data=df)\n\nimport pandas_profiling\nweather_brisbane.profile_report(style={'full_width':True})","f45fa064":"print(\"min\", weather_brisbane.index.min())\nprint(\"max\", weather_brisbane.index.max())","f6a532cd":"train = weather_brisbane\n\ntrain.reset_index(inplace=True) # Reset index\ntrain.rename(columns={'Date': 'ds', 'Maximum temperature (Degree C)': 'y'}, inplace=True)\n\ntrain.head(10)","efc456f6":"# Create Prophet model - and fit training data to the model\n# We set changepoint range to 80% and MCMC sampling to 100 - MCMC sampling adds uncertainty interval to seasonality\nfrom fbprophet import Prophet\nmodel = Prophet(changepoint_range=0.8, mcmc_samples=100)\n\nmodel.fit(train)","48f546cf":"# Using helper, create next forecast range to be next 2 years (720 days) - \n# aggregated to daily basis (since we only have daily readings)\nfrom fbprophet import Prophet\nfuture = model.make_future_dataframe(periods=720, freq='D')\n\nfuture.tail()","7243b451":"# Make prediction using - show confidence interval \n# By default, Prophet uses Monte Carlo Markov Chain sampling to create confidence interval - \n# which covers 80% (not 95%) of the samples\nforecast = model.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']]","31060228":"# Plot forecast\n# Plot interactive plotly viz\nfrom fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(model, forecast)  # This returns a plotly Figure\n\nfig.update_layout(title_text='Interactive - Brisbane weather max temperature with forecast')\n\npy.iplot(fig)","f4f4d2a0":"# Plot components of forecast in detail\nmodel.plot_components(forecast)","5fdd5ea2":"# Cross validation between actuals and forecasted data between cutoff and horizon\nfrom fbprophet.diagnostics import cross_validation\ndf_cv = cross_validation(model, period='180 days', horizon ='365 days')\ndf_cv.head()","5453f5ea":"# See diagnostics of Prophet\nfrom fbprophet.diagnostics import performance_metrics\ndf_perf = performance_metrics(df_cv)\ndf_perf.describe()","34f9771d":"# mean absolute percentage error (MAPE) visualised\nfrom fbprophet.plot import plot_cross_validation_metric\nfig = plot_cross_validation_metric(df_cv, metric='mape')","5a8a3cb7":"We can see that there is a correlation around every 12 months (which makes sense due to seasons)","470b9feb":"# More comprehensive EDA using Pandas Profiling\nNow let's do more profiling using Pandas profiling - a library that does a lot of summaries for you out of the box","39aed538":"There's obvious seasonality and a nice spread of data","447b26dc":"# Basic Exploratory Data Analysis (EDA)\nFirst step in forecasting is getting to know the data - this involves knowing the spread, how many null values etc.","8b0988d9":"# Measuring performance of Forecast Model\nWe will grab the last 365 days of actual historical data to evaluate the model.\n\nTHis means the horizon will be 365 days.\n\nWe will have evaluations every month so the spacing between cutoff periods will be 180 days.\n\nIn particular, a forecast is made for every observed point between cutoff and cutoff + horizon. That is, model is trained up untll every cutoff point, then re-evaluated every 180 days.","1aa5c3f8":"As part of EDA, given this is weather data, seasonality is expected.\n\nTherefore, we need to look at autocorrelation - which is how the same time in different days correlate with each other - \ne.g. 9am March compared to 9am April, as well as 9am March 2019 compared to 9am March 2018.\n\nIf a correlation exists between months, this is monthly seasonality. If between years, yearly seasonality etc.","d22bacd1":"So we see we have data from 1999 to 2019, with a relatively good spread of temperature data.","afe72f21":"We need to create a date field by combining all the year, month, and day columns together","69219caf":"We can see that the dataset while having more data points, only goes back to 2007 compared to getting data directly from BOM, so therefore we will stick with BOM observation data.\n\nData also from BOM \nCourtesy of http:\/\/www.bom.gov.au\/climate\/data\/","2c9b3f6f":"# Observations on Performance\nThe Mean Absolute Percentage Error (MAPE) ranges between 7 to 9%, which is relatively low.\n\nFurthermore, as visualised below, the overall trend of the MAPE stays relatively flat (which indicates that the forecasting does not 'decay' over time).","e3230945":"So in conclusion, using Prophet, we managed to get a pretty good forecasting model of Brisbane weather with a MAPE of less than 10%.","d9baaaa9":"# Facebook Prophet\nWe are now ready to do the training and fitting the model using Prophet","0ab2caec":"First let's clean up the columns and check for missing values","47bb3416":"# Forecasting using Prophet\n\nNow that the data is ready, let's first separate the observation data into two categories (train and test)\n\nAs time-series data, we won't use a random splitter (e.g. scikit-learn train test split), but just set a cutoff date.\n\nIn this case, we will aim for 80% train and 20% test. This will be set using the Prophet's changepoint range to 0.8.","7edf9850":"Let's have a look at the data in an interactive way - you can drag the bottom bar to change the range","97b1a701":"The above shows daily, monthly and yearly trends of seasonality.\n\n# Observations on forecasting\nSeasonality has been correctly identified by the model - it is clear that Brisbane's winter (July) has lowest temperature of the year.\n\nThere is a general trend of yearly average temperature increasing, consistent with a global warming pattern.\n\nInterestingly, Thursday seems to be the coldest day in the week.","d310b0e0":"The above shows:\n\nblack dots are the actual observation data points (i.e. actual temp readings)\n\nblue line represents the model's regression line that it identified\n\nblue shaded around the blue line indicates the confidence interval - it represents the range that covers 95% of the actual data","cd975842":"Data from Kaggle\nhttps:\/\/www.kaggle.com\/selfishgene\/historical-hourly-weather-data\n\n","d49949ae":"# Weather Forecast Modelling\n   \nUsing Facebook Prophet's open source forecasting library, Brisbane weather has been forecasted.\n\nProphet is an additive regression model that has intelligent forecasting methods out of the box. It is designed to operate on daily basis and factors in holiday effects, seasonality etc.\n\nThe library allows powerful forecasting without a significant amount of statistical tweaking, such as required in more heavy methods, such as ARIMA models.","474ff48d":"Now the Facebook Prophet library requires the format to be time-series with 2 columns - ds for datetime and y for values"}}