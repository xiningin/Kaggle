{"cell_type":{"4e5fa044":"code","44d9d54e":"code","539629bc":"code","d2551586":"code","31795c24":"code","26521a83":"code","a8e56275":"markdown","196254d5":"markdown","eefcf8e6":"markdown","ffb5cc59":"markdown","5517315e":"markdown","b152b589":"markdown"},"source":{"4e5fa044":"# Load the libraries\n\nimport numpy as np\nimport cv2\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport os","44d9d54e":"# Loading haarcascade file for face detection\n\npath = \"..\/input\/fdimages\/vhaarcascade_frontalface_alt.xml\"\n# path = \"..\/input\/fdimages\/haarcascade_frontalcatface_extended.xml\"\n\nfd=cv2.CascadeClassifier(path)","539629bc":"# Face Detection - 1 face\n\n# loading image\nImgPath=\"..\/input\/fdimages\/9.jpg\"\nimg=plt.imread(ImgPath)\nprint(img.shape) # printing shape of image. It is colour so 124 x 408 pixel having 3 channel - RGB\n#print(img) # printing array value of image\nplt.imshow(img)\nplt.show() # printing image\n\n# Face detection\n# The haarcascade classifier provides the location of the human face\/faces\n# It will provide top, left, width and hight\n\ncorners=fd.detectMultiScale(img)\nprint(corners)\n\n# draw box on the face detected\nfor (x,y,w,h) in corners:\n      cv2.rectangle(img,(x,y),(x+w,y+h),[255,0,0],2) # we are drawing box with red colour\n\nplt.imshow(img)\nplt.show()","d2551586":"# Face Detection - 2 face\n\n# loading image\nImgPath=\"..\/input\/fdimages\/4.jpg\"\nimg=plt.imread(ImgPath)\nprint(img.shape) # printing shape of image. It is colour so 124 x 408 pixel having 3 channel - RGB\n#print(img) # printing array value of image\nplt.imshow(img)\nplt.show() # printing image\n\n# Face detection\n# The haarcascade classifier provides the location of the human face\/faces\n# It will provide top, left, width and hight\n\ncorners=fd.detectMultiScale(img)\nprint(corners)\n\n# draw box on the face detected\nfor (x,y,w,h) in corners:    \n    cv2.rectangle(img,(x,y),(x+w,y+h),[255,0,0],2) # we are drawing box with red colour\n\nplt.imshow(img)\nplt.show()","31795c24":"# Face Detection - 1 face\n\n# loading image\nImgPath=\"..\/input\/fdimages\/10.jpg\"\nimg=plt.imread(ImgPath)\nprint(img.shape) # printing shape of image. It is colour so 124 x 408 pixel having 3 channel - RGB\n#print(img) # printing array value of image\nplt.imshow(img)\nplt.show() # printing image\n\n# Face detection\n# The haarcascade classifier provides the location of the human face\/faces\n# It will provide top, left, width and hight\n\ncorners=fd.detectMultiScale(img)\n#print(corners)\n\n# draw box on the face detected\nfor (x,y,w,h) in corners:\n    cv2.rectangle(img,(x,y),(x+w,y+h),[255,0,0],2) # we are drawing box with red colour\n\nplt.imshow(img)\nplt.show()","26521a83":"print(\"Notebook completed!\")","a8e56275":"## Face Detection - 2 Faces","196254d5":"# Computer Vision - Face Detection from Images using openCV\nIn this notebook, we will understand Face Detection from the images using openCV","eefcf8e6":"## Loading Haarcascade file for face detection","ffb5cc59":"## Face Detection - 1 Face","5517315e":"## Face Detection - Multiple Faces","b152b589":"## Load the libraries"}}