{"cell_type":{"98ce4575":"code","64d4f2e6":"code","a8e2c8f6":"code","0203d265":"code","24e0c015":"code","21a4e265":"code","f1520f7a":"code","e63d3a54":"code","598bfa43":"code","1eab0916":"code","6d834d8f":"code","cb5cbf88":"code","12b2010a":"code","07101150":"code","198bb393":"code","327a1843":"code","97ad1e92":"code","ca8d81e6":"code","7f4c34b3":"code","7bfe4d01":"code","07ad8322":"code","7e4bb986":"code","2eec4d63":"markdown","c9486589":"markdown","fcb58344":"markdown","9224ba39":"markdown","f6671724":"markdown","b67d10f0":"markdown","4455997c":"markdown","dfc36ee9":"markdown","cb9a4405":"markdown","97d4ed00":"markdown"},"source":{"98ce4575":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/ecdc-covid-data\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","64d4f2e6":"df = pd.read_excel('\/kaggle\/input\/ecdc-covid-data\/COVID-19-geographic-disbtribution-worldwide-2020-03-17.xlsx')","a8e2c8f6":"df[df['Countries and territories']=='Taiwan']","0203d265":"df.dtypes","24e0c015":"country = df['Countries and territories'].unique()\nprint(country)\n\nprint(\"Number of countries Infected: \",len(country))","21a4e265":"df.head()","f1520f7a":"abbr = df.iloc[:,6:].drop_duplicates()","e63d3a54":"len(df['Countries and territories'].value_counts())","598bfa43":"case = pd.DataFrame(df.groupby('Countries and territories')['Cases'].sum())\ncase['Countries and territories'] = case.index\ncase.index = np.arange(1,146,1)\n\nworldwide = case[['Countries and territories','Cases']]","1eab0916":"worldwide.sort_values(['Cases'], ascending=False)","6d834d8f":"worldwide = pd.merge(abbr,worldwide,on='Countries and territories')","cb5cbf88":"worldwide","12b2010a":"countries = pd.read_csv(\"..\/input\/counties-geographic-coordinates\/countries.csv\")","07101150":"countries","198bb393":"world = pd.merge(worldwide,countries,how='left',left_on='GeoId',right_on='country')\nworld ","327a1843":"world = world.drop(['name','country'], axis=1)","97ad1e92":"world.isna().sum()","ca8d81e6":"plot = world.dropna()","7f4c34b3":"plot.head()","7bfe4d01":"import folium \n\nmap_dist = folium.Map()\n\nfor latitude, longitude, case, country in zip(plot['latitude'], plot['longitude'], plot['Cases'], plot['Countries and territories']):\n    folium.CircleMarker([latitude, longitude], radius=case*0.0005,  popup = (str(country) +'\\n\\n' +'Cases: ' + str(case)), color='red', fill_color='red').add_to(map_dist)\nmap_dist","07ad8322":"worldwide.sort_values('Cases',ascending=False)","7e4bb986":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set()\n\nplt.figure(figsize=(15,10))\nax = sns.barplot(x=\"Countries and territories\", y=\"Cases\", data=worldwide.sort_values('Cases',ascending=False)[:10])\nplt.title('Top 10 Countries with Covid-19 Cases')","2eec4d63":"If we look at the data, seems that the cases weren't cumulative data. ","c9486589":"## Sorted by Cases","fcb58344":"## TBA: Time series cases","9224ba39":"![CDC](https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/images\/2019-coronavirus.png)","f6671724":"### We will use additional data from [ECDC](https:\/\/www.ecdc.europa.eu\/en\/publications-data\/download-todays-data-geographic-distribution-covid-19-cases-worldwide) (Thanks to [panos](https:\/\/www.kaggle.com\/panosc))\n","b67d10f0":"For a while, we will drop ","4455997c":"We will add the coordinates from https:\/\/www.kaggle.com\/eidanch\/counties-geographic-coordinates","dfc36ee9":"Take the Abbreviation ","cb9a4405":"# Countries Affected","97d4ed00":"Take an example,"}}