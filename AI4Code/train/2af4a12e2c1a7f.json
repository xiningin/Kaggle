{"cell_type":{"04ff84ef":"code","5bd56df9":"code","09761762":"code","f2a33445":"code","aaf41f08":"code","7312ddc9":"code","290edd7b":"code","515a9dc6":"code","2195e3bc":"code","d164ba6a":"code","5628d46b":"markdown","2ed956d9":"markdown","c106161c":"markdown","df8a9088":"markdown"},"source":{"04ff84ef":"import numpy as np \nimport pandas as pd \nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBRegressor\n","5bd56df9":"train = pd.read_csv(\"\/kaggle\/input\/30-days-of-ml\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/30-days-of-ml\/test.csv\")","09761762":"train.head()","f2a33445":"train.set_index('id',drop=True, inplace=True)\ntest.set_index('id',drop=True, inplace=True)\ntrain.head()","aaf41f08":"y = train.target\ntrain.drop(['target'], axis = 1, inplace = True)\nX = train.copy()\nX_test = test.copy()","7312ddc9":"\n# Apply frequency encoder to each column with categorical data\nfor col in X.columns:\n    if 'cat' in col:\n        fe = X.groupby(col).size()\/len(X)\n        X[col]= X[col].map(fe)\n        X_test[col]= X_test[col].map(fe)\nX_test.head()","290edd7b":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size = 0.2)","515a9dc6":"from sklearn.metrics import mean_squared_error\nxgb_params = {'n_estimators': 10000,\n              'learning_rate': 0.25,\n              'subsample': 0.926,\n              'colsample_bytree': 0.84,\n              'max_depth': 2,\n              'booster': 'gbtree', \n              'reg_lambda': 45.1,\n              'reg_alpha': 34.9,\n              'random_state': 42,\n              'n_jobs': 4}\nmodel = XGBRegressor(**xgb_params)\nmodel.fit(X_train, y_train, verbose=False, eval_set=[(X_train, y_train), (X_valid, y_valid)], eval_metric=\"rmse\", early_stopping_rounds=100)\npreds = model.predict(X_valid)\nprint(\"RMAE: \", np.sqrt(mean_squared_error(y_valid, preds)))","2195e3bc":"#model.fit(X, y, verbose=False)\npreds = model.predict(X_test)","d164ba6a":"# Save test predictions to file\noutput = pd.DataFrame({'id': X_test.index,\n                       'target': preds})\noutput.to_csv('submission.csv', index=False)\n","5628d46b":"# Split Dataset","2ed956d9":"# Modeling","c106161c":"# Encoding categorical data","df8a9088":"In this notebook I'm only using a few things I learned on the lasts days of \"30 Days of ML\" so I'm keeping things as simple as I can.\n# Load and visualize dataset"}}