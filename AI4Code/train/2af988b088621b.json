{"cell_type":{"8eb37135":"code","40b20e78":"code","43139cc4":"code","fceed776":"code","07798b67":"code","0e9c158b":"markdown","317fb480":"markdown","c1b5699e":"markdown","55464a95":"markdown","634d88f3":"markdown","73929b7a":"markdown","9b27d26c":"markdown"},"source":{"8eb37135":"import IPython.display as ipd\nipd.Audio('..\/input\/train\/Train\/1008.wav')","40b20e78":"import os\n\nimport pandas as pd\n\nimport librosa\n\nimport librosa.display\n\nimport glob\n\n% pylab inline\n\nfrom sklearn.preprocessing import LabelEncoder\n\nimport numpy as np\n\nfrom scipy.fftpack import fft\n\nfrom scipy import signal\n\nfrom scipy.io import wavfile\n\nfrom keras.utils import np_utils\n\nfrom keras.models import Sequential\n\nfrom keras.layers import Dense, Dropout, Activation, Flatten\n\nfrom keras.layers import Convolution2D, MaxPooling2D\n\nfrom keras.optimizers import Adam\n\nfrom sklearn import metrics \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\nprint(os.listdir(\"..\/input\"))","43139cc4":"data,sample_rate = librosa.load('..\/input\/train\/Train\/2004.wav')\n\nplt.figure(figsize=(12,4))\n\nlibrosa.display.waveplot(data,sr=sample_rate)","fceed776":"import numpy as np\nimport pandas as pd\nimport librosa\n\ndef job():\n    df = pd.read_csv('..\/input\/train.csv')\n\n    Classes = df.Class.unique().tolist()\n    y = []\n    X = []; yp = []; new_X = []\n    for i in df.ID:\n        new, rate = librosa.load('..\/input\/train\/Train\/%d.wav'%i)\n        mfccs = np.mean(librosa.feature.mfcc(y=new, sr=rate, n_mfcc=200).T, axis = 0)\n        idx = Classes.index(df[df.ID == i]['Class'].tolist()[0])\n        yp.append(idx)\n        print (i)\n        new_X.append(mfccs)\n    return new_X, yp","07798b67":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nimport time\n\nt_beg = time.time()\n\nNewX, y = job()\n\nNewX_train, NewX_test, Newy_train, Newy_test = train_test_split(NewX, y, test_size=0.2, shuffle = True)\nprint ('successfully splitted')\nt0 = time.time()\nprint ('time elapsed for reading: ', t0-t_beg)\n\n#clf = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes=(15,), random_state=1)\n#clf = LogisticRegressionCV(multi_class = 'ovr')\nclf = RandomForestClassifier(n_estimators = 100)\nclf.fit(NewX_train, Newy_train)\nt1 = time.time()\nprint ('time elapsed for fitting: ', t1-t0)\nprint ('done fitting')\n\nprint ('fit to train new: ', clf.score(NewX_train, Newy_train))\nprint ('fit to test: ', clf.score(NewX_test, Newy_test))","0e9c158b":"I have just made changes to the existing kernel : https:\/\/www.kaggle.com\/pavansanagapati\/urban-sound-classification-using-cnn-model","317fb480":"To load the audio files into the jupyter notebook ass a numpy array I have used 'librosa' library in python by using the pip command as follows\n\n ***pip install librosa***","c1b5699e":"Now let us load a sample audio file using librosa","55464a95":"### Step 3: Run a deep learning model and get results,\nI will use Random Forest Classifier","634d88f3":"#### Step 2: Convert the data to pass it in our deep learning model","73929b7a":"As you can see the air conditioner class is shown as random class and we can see its pattern.Let us again see another class by using the same code to randomly select another class and observe its pattern","9b27d26c":"It appears that jackhammer has more count than any other classes\n\nNow let us see how we can leverage the concepts we learned above to solve the problem. We will follow these steps to solve the problem.\n\n- Step 1: Load audio files & Extract features\n- Step 2: Convert the data to pass it in our deep learning model\n- Step 3: Run a deep learning model and get results\n\n#### Step 1: Load audio files & Extract features\n\nLet us create a function to load audio files and extract features"}}