{"cell_type":{"189585bb":"code","6c319ab7":"code","371f47bc":"code","4a96f821":"code","f6efa6d1":"code","13489f8e":"code","b534b1f1":"code","520116e8":"code","17883ee9":"code","c08e3502":"code","07875b2f":"code","6eae7407":"code","0f05a1d3":"code","2fef35ee":"code","aba5ebcf":"code","e0ce8c21":"code","0a5339d4":"code","96c7ffcb":"code","75e1835f":"code","23804e54":"code","7bd98b30":"code","31946df2":"code","73b4d357":"code","a2780cba":"code","018a1ce3":"code","d28ae79c":"code","1409b69c":"code","239bae9e":"code","1ee531f5":"code","4aa922a2":"code","ee6a9410":"code","1dcfe3b7":"code","46af4827":"code","dbe0c18c":"code","d64466ec":"code","038f8e19":"code","a1fd52ba":"code","13c43b8b":"code","055f10c3":"code","9dbfba07":"code","bf5044fa":"markdown"},"source":{"189585bb":"import numpy as np \nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","6c319ab7":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\n","371f47bc":"df_train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf_test =  pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","4a96f821":"df_train.head()","f6efa6d1":"df_train.isnull().sum()","13489f8e":"sns.countplot(x='Survived', data=df_train)","b534b1f1":"sns.countplot(x='Survived', hue='Pclass', data=df_train)","520116e8":"sns.distplot(df_train['Age'],kde=False, bins=int(80\/5), color ='blue',hist_kws={'edgecolor':'black'})","17883ee9":"sns.countplot(x=\"Survived\",hue=\"Sex\", data=df_train)","c08e3502":"sns.countplot(x='Pclass',hue='Sex', data=df_train)","07875b2f":"df_train['Sex'].value_counts()","6eae7407":"gender=['male', 'female']\n\nfor gen in gender:\n    \n    subplot = df_train[df_train['Sex']==gen]['Age']\n    \n    sns.distplot(subplot, kde=False, kde_kws = {'linewidth': 3},\n                 label = gen,bins=15)\n\nplt.legend()","0f05a1d3":"sns.countplot(x=\"Parch\", hue=\"Survived\", data=df_train)","2fef35ee":"sns.countplot(x=\"SibSp\",hue=\"Survived\", data=df_train)","aba5ebcf":"df_train[[\"Sex\",\"Survived\"]].groupby(\"Sex\", as_index=False).mean()","e0ce8c21":"df_train[[\"Pclass\", \"Survived\"]].groupby(\"Pclass\", as_index=False).mean()","0a5339d4":"df_train_len = len(df_train)","96c7ffcb":"df = pd.concat([df_train, df_test], axis=0, sort=False).reset_index(drop=True)\ndf.drop('Cabin', axis=1, inplace=True)","75e1835f":"plt.figure(figsize=(12,8))\nsns.set_style(\"whitegrid\")\nsns.boxplot(x=\"Pclass\",y='Age', hue='Sex',data=df)\nplt.yticks(np.arange(0, 80, 5))\nplt.show() ","23804e54":"def fill_age(cols):\n    \n    age = cols[0]\n    Pcls= cols[1]\n    sex = cols[2]\n    \n    if pd.isnull(age):\n        if Pcls==1:\n            if sex=='male':\n                return 42\n            else:\n                return 36\n    \n        if Pcls==2:\n            if sex=='male':\n                return 29\n            else:\n                return 28\n        if Pcls==3:\n            if sex=='male':\n                return 25\n            else:\n                return 22\n    else:\n        return age","7bd98b30":"df['Age'] = df[['Age','Pclass', 'Sex']].apply(fill_age,axis=1)","31946df2":"df.isnull().sum()","73b4d357":"df[df[\"Embarked\"].isnull()]","a2780cba":"df[df[\"Fare\"].isnull()]","018a1ce3":"plt.figure(figsize=(10,8))\nsns.boxplot(y=\"Fare\", x=\"Embarked\", data=df)","d28ae79c":"df[\"Embarked\"] = df[\"Embarked\"].fillna(\"C\")","1409b69c":"df[\"Fare\"] = df[\"Fare\"].fillna(np.mean(df[df['Embarked']==\"C\"][\"Fare\"]))","239bae9e":"df.isnull().sum()","1ee531f5":"df['Title'] = [name.split('.')[0].split(',')[-1].strip() for name in df['Name']]\ndf['Title'].value_counts()","4aa922a2":"df['Title'] = df['Title'].replace(['Dr', 'Mme','Jonkheer','Don','Dona','Lady','the Countess','Capt'],'other')\ndf['Title'] = df['Title'].replace(['Ms','Mlle'],'Miss')\ndf['Title'] = df['Title'].replace(['Major','Rev','Col','Sir'],'Mr')\ndf['Title'].value_counts()","ee6a9410":"sns.heatmap(df.corr(),annot=True)","1dcfe3b7":"sex= pd.get_dummies(df['Sex'],drop_first=True)\nembarked=pd.get_dummies(df['Embarked'],drop_first=True,prefix='Embark')\ntitle = pd.get_dummies(df['Title'],prefix='Title')\ndf = pd.concat([df.drop(['Sex','Embarked','Title','Ticket'],axis=1),sex,embarked,title],axis=1)","46af4827":"df.drop(['Name'], axis=1,inplace=True)","dbe0c18c":"df_train = df[:df_train_len]\ndf_test = df[df_train_len:]\nlen(df_train)","d64466ec":"x = df_train.drop(['PassengerId','Survived'], axis=1)\ny = df_train['Survived'].astype(int)\nX_train, X_test, Y_train, Y_test = train_test_split(x, y, stratify=y,test_size=0.4,random_state=102)","038f8e19":"rf = RandomForestClassifier(random_state=101)\nrf.fit(X_train,Y_train)\nrf_train_accuracy = round(rf.score(X_train,Y_train) * 100,2)\nrf_test_accuracy = round(rf.score(X_test,Y_test) * 100,2)\nprint(f\"Train accuracy: %{rf_train_accuracy}\")\nprint(f\"Test accuracy: %{rf_test_accuracy}\")","a1fd52ba":"df_test.head()","13c43b8b":"predictions = rf.predict(df_test.iloc[:,2:])","055f10c3":"submission = pd.DataFrame({'PassengerId':df_test['PassengerId'],'Survived':predictions})","9dbfba07":"submission.reset_index()\nfilename = 'Titanic_Predictions.csv'\nsubmission.to_csv(filename,index=False)\nprint('Saved file: ' + filename)","bf5044fa":"Passengers in the Pclass=1 survived more than other Pclass"}}