{"cell_type":{"884f29f4":"code","41ea9570":"code","adbca9d2":"code","93f2ca02":"code","dc0298cb":"code","93daeb85":"code","a445f086":"code","7697ae44":"code","aab70b17":"code","4c3ab805":"code","3aeebad6":"code","1bd0d41a":"markdown","f641b53a":"markdown"},"source":{"884f29f4":"import gc\n\nimport numpy as np \nimport pandas as pd \n\nimport PIL.Image\nimport PIL.ImageFont\nimport PIL.ImageDraw\nimport PIL.ImageOps","41ea9570":"# Path to data \nPATH = '..\/input\/bengaliai-cv19\/'","adbca9d2":"# Train data import\ntrain = pd.read_csv(f'{PATH}train.csv')\n\n# Drop grapheme column\ntrain = train.drop(['grapheme'], axis=1)\n\n# Class labels import\nclass_map = pd.read_csv(f'{PATH}class_map.csv')","93f2ca02":"# Train images import (partial)\ntrain_img_0 = pd.read_parquet(f'{PATH}train_image_data_0.parquet')","dc0298cb":"# Merge train data and images\ntrain_data_0 = pd.merge(train_img_0, train, on='image_id', how='left')\ndel train_img_0; gc.collect()","93daeb85":"print(train_data_0.shape)","a445f086":"print(train_data_0.head())","7697ae44":"# Get image with corresponding information\ndef get_image(train_data, idx):\n    image_data = train_data[['grapheme_root', 'vowel_diacritic', 'consonant_diacritic']].iloc[idx]\n    \n    image = train_data.iloc[idx].drop(\n        ['image_id', 'grapheme_root', 'vowel_diacritic', 'consonant_diacritic']).values.astype(np.uint8) \n    \n    unpacked_image = PIL.Image.fromarray(image.reshape(137, 236))\n    \n    return unpacked_image, image_data","aab70b17":"# Display image with corresponding data\nunpacked_image, image_data = get_image(train_data_0, 20)\n\nprint(image_data)","4c3ab805":"unpacked_image","3aeebad6":"# Some additional visualization\nimport matplotlib.pyplot as plt\n\nunpacked_image_1, image_data_1 = get_image(train_data_0, 20)\nunpacked_image_2, image_data_2 = get_image(train_data_0, 30)\n\nfig = plt.figure(figsize=(20, 20))\n\nax_1 = fig.add_subplot(1, 2, 1)\nax_1.imshow(np.asarray(unpacked_image_1), interpolation='nearest', cmap='Greys_r')\nax_1.set_xlim(0, 200)\nax_1.set_ylim(100, 0)\nax_1.text(10, 25, str(image_data_1), bbox={'facecolor': 'white', 'pad': 10})\n\nax_2 = fig.add_subplot(1, 2, 2)\nax_2.imshow(np.asarray(unpacked_image_2), interpolation='nearest', cmap='Greys_r')\nax_2.set_xlim(0, 200)\nax_2.set_ylim(100, 0)\nax_2.text(10, 25, str(image_data_2), bbox={'facecolor': 'white', 'pad': 10})","1bd0d41a":"This is a simple starter code with data visualization.","f641b53a":"# Simple Starter"}}