{"cell_type":{"72f0c921":"code","282e2e21":"code","af578513":"code","4c7972b7":"code","ca3c5dc1":"code","8e38ed7b":"code","92528c7a":"code","627f8b40":"code","5f49769d":"code","0e929a55":"code","337e5b19":"code","05eadce4":"code","e63d5bfb":"code","f633f6bc":"code","98c75029":"code","df8e604b":"code","f0390316":"code","ba77662a":"code","4943f353":"code","7a4ee01b":"code","a422e022":"code","9813381f":"code","480e316f":"code","430fac27":"code","b812a341":"markdown","6a542124":"markdown","aa58022a":"markdown","25f51e6c":"markdown","cfc1d1c1":"markdown","7753a9bd":"markdown","ba8dc0ba":"markdown","d59b5c25":"markdown","a2f1687a":"markdown","4aff1322":"markdown","a08f581d":"markdown","4b3b09f9":"markdown","715eb950":"markdown","e5b6bcf5":"markdown"},"source":{"72f0c921":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as pex\nimport datetime","282e2e21":"doge = pd.read_csv('\/kaggle\/input\/dogecoin-historical-prices\/doge.tsv', delimiter='\\t')\n","af578513":"doge.head()","4c7972b7":"doge.shape","ca3c5dc1":"doge.dtypes","8e38ed7b":"doge.describe()","92528c7a":"doge.isnull().sum()","627f8b40":"doge['Year'] = pd.DatetimeIndex(doge['Date']).year\ndoge['Month'] = pd.DatetimeIndex(doge['Date']).month\ndoge['Day'] = pd.DatetimeIndex(doge['Date']).day\ndoge['Day2'] = pd.DatetimeIndex(doge['Date']).dayofyear\ndoge['Weekday'] = pd.DatetimeIndex(doge['Date']).weekday\ndoge.Volume = doge.Volume.str.replace(\",\", \"\")\ndoge.Volume = doge.Volume.astype(int)\ndoge.head()","5f49769d":"doge.dtypes","0e929a55":"weekdays = {\"Monday\": 0, \"Tuesday\":1, \"Wednesday\":2, \"Thursday\":3, \"Friday\":4, \"Saturday\":5, \"Sunday\":6}\nmonths = {\"January\":1, \"February\":2, \"March\":3, \"April\":4, \"May\":5, \"June\":6, \"July\":7, \"August\":8, \"September\":9,\"October\":10, \"November\":11, \"December\":12 }","337e5b19":"poof = mutate_dict(lambda x: x+1, my_dictionary)","05eadce4":"doge.tail(15)","e63d5bfb":"doge.Year.value_counts()","f633f6bc":"from plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","98c75029":"doge.Year.value_counts()","df8e604b":"sixteen = doge[ doge.Year == 2016]\neighteen = doge[ doge.Year == 2018]\nseventeen = doge[ doge.Year == 2017]\nnineteen = doge[ doge.Year == 2019]\ntwenty = doge[ doge.Year == 2020]\ntwentyone = doge[ doge.Year == 2021]","f0390316":"January = doge[doge.Month == 1]\nFebruary = doge[doge.Month == 2]\nMarch = doge[doge.Month == 3]\nApril = doge[doge.Month == 4]\nMay = doge[doge.Month == 5]\nJune = doge[doge.Month == 6]\nJuly = doge[doge.Month == 7]\nAugust = doge[doge.Month == 8]\nSeptember = doge[doge.Month == 9]\nOctober = doge[doge.Month == 10]\nnovember = doge[doge.Month == 11]\nDecember = doge[doge.Month == 12]","ba77662a":"jan16 = January[January.Year == 2016]\njan17 = January[January.Year == 2017]\njan18 = January[January.Year == 2018]\njan19 = January[January.Year == 2019]\njan20 = January[January.Year == 2020]\njan21 = January[January.Year == 2021]","4943f353":"line16 =go.Scatter(\n                    x = sixteen.Day2,\n                    y = sixteen.Open,\n                    mode = \"lines\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(63, 191, 64, 0.8)'),\n                    text= sixteen.Open)\nline17 =go.Scatter(\n                    x = seventeen.Day2,\n                    y = seventeen.Open,\n                    mode = \"lines\",\n                    name = \"2017\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= sixteen.Open)\n\nline18 =go.Scatter(\n                    x = eighteen.Day2,\n                    y = eighteen.Open,\n                    mode = \"lines\",\n                    name = \"2018\",\n                    marker = dict(color = 'rgba(255, 196, 4, 0.8)'),\n                    text= seventeen.Open)\nline19 = go.Scatter(\n                    x = nineteen.Day2,\n                    y = nineteen.Open,\n                    mode = \"lines\",\n                    name = \"2019\",\n                    marker = dict(color = \"rgba(255, 5, 2, 0.8)\"),\n                    text = nineteen.Open)\nline20 = go.Scatter(\n                    x = twenty.Day2,\n                    y = twenty.Open,\n                    mode = \"lines\",\n                    name = \"2020\",\n                    marker = dict(color = \"rgba(11, 255, 22, 0.8)\"),\n                    text = nineteen.Open)\nline21 = go.Scatter(\n                    x = twentyone.Day2,\n                    y = twentyone.Open,\n                    mode = \"lines\",\n                    name = \"2021\",\n                    marker = dict(color = \"rgba(226, 245, 19, 0.8)\"),\n                    text = nineteen.Open)\ndata = [line16,line17,line18,line19,line20, line21]\nlayout = dict(title = 'Open prices of dogecoin from 2016 to 2021',\n              xaxis= dict(title= 'Day Of The Year',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Price at Open',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","7a4ee01b":"line16 =go.Scatter(\n                    x = sixteen.Day2,\n                    y = sixteen.Open,\n                    mode = \"lines\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(63, 191, 64, 0.8)'),\n                    text= sixteen.Open)\nline17 =go.Scatter(\n                    x = seventeen.Day2,\n                    y = seventeen.Open,\n                    mode = \"lines\",\n                    name = \"2017\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= sixteen.Open)\n\nline18 =go.Scatter(\n                    x = eighteen.Day2,\n                    y = eighteen.Open,\n                    mode = \"lines\",\n                    name = \"2018\",\n                    marker = dict(color = 'rgba(255, 196, 4, 0.8)'),\n                    text= seventeen.Open)\nline19 = go.Scatter(\n                    x = nineteen.Day2,\n                    y = nineteen.Open,\n                    mode = \"lines\",\n                    name = \"2019\",\n                    marker = dict(color = \"rgba(255, 5, 2, 0.8)\"),\n                    text = nineteen.Open)\nline20 = go.Scatter(\n                    x = twenty.Day2,\n                    y = twenty.Open,\n                    mode = \"lines\",\n                    name = \"2020\",\n                    marker = dict(color = \"rgba(11, 255, 22, 0.8)\"),\n                    text = nineteen.Open)\n\ndata = [line16,line17,line18,line19,line20]\nlayout = dict(title = 'Open prices of dogecoin from 2016 to 2020',\n              xaxis= dict(title= 'Day Of The Year',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Price at Open',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","a422e022":"monthJan =go.Scatter(\n                    x = January.Day,\n                    y = January.Open,\n                    mode = \"lines\",\n                    name = \"January\",\n                    marker = dict(color = 'rgba(63, 191, 64, 0.8)'),\n                    text= January.Date)\n\ndata = [ monthJan]\nlayout = dict(title= \"January Opening prices\",\n            xaxis= dict(title=\"Day Of The Month\", ticklen=5,zeroline=False),\n             yaxis= dict(title=\"Opening Price\", ticklen=5,zeroline=False)\n             )\nfig = dict(data=data, layout=layout)\niplot(fig)","9813381f":"janline16 =go.Scatter(\n                    x = jan16.Day2,\n                    y = jan16.Open,\n                    mode = \"lines\",\n                    name = \" Jan 2016\",\n                    marker = dict(color = 'rgba(63, 191, 64, 0.8)'),\n                    text= jan16.Date)\njanline17 =go.Scatter(\n                    x = jan17.Day2,\n                    y = jan17.Open,\n                    mode = \"lines\",\n                    name = \"Jan 2017\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= jan17.Date)\n\njanline18 =go.Scatter(\n                    x = jan18.Day2,\n                    y = jan18.Open,\n                    mode = \"lines\",\n                    name = \"Jan 2018\",\n                    marker = dict(color = 'rgba(255, 196, 4, 0.8)'),\n                    text= jan18.Date)\njanline19 =go.Scatter(\n                    x = jan19.Day2,\n                    y = jan19.Open,\n                    mode = \"lines\",\n                    name = \"Jan 2019\",\n                    marker = dict(color = 'rgba(15, 15, 252, 0.8)'),\n                    text= jan19.Date)\njanline20 =go.Scatter(\n                    x = jan20.Day2,\n                    y = jan20.Open,\n                    mode = \"lines\",\n                    name = \"Jan 2020\",\n                    marker = dict(color = 'rgba(15, 188, 252, 0.8)'),\n                    text= jan20.Date)\njanline21 =go.Scatter(\n                    x = jan21.Day2,\n                    y = jan21.Open,\n                    mode = \"lines\",\n                    name = \"Jan 2021\",\n                    marker = dict(color = 'rgba(114, 165, 252, 0.8)'),\n                    text= jan21.Date)\n\ndata = [janline16,janline17,janline18, janline19,janline20, janline21]\nlayout = dict(title = 'Open prices of dogecoin from 2016 to 2021',\n              xaxis= dict(title= 'Day Of The Month',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Price at Open',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","480e316f":"January","430fac27":"means = doge.groupby(by=\"Year\").mean()\ndiff = means.High - means.Low\ndiff","b812a341":"<a id= \"3\" ><\/a><br>\n# Check the Data","6a542124":"<a id = \"1\"><\/a><br>\n# Special Doge Song","aa58022a":"![](https:\/\/static.coindesk.com\/wp-content\/uploads\/2021\/02\/musk-doge-710x458.png?format=webp)","25f51e6c":"Creating new dataframes for comparing yearly, daily opening prices","cfc1d1c1":"As a little treat, heres a doge video with a supercool song on it. My daughter is currently 8 years old and she puts it on everytime she gets in my car.\n\nI also love it.","7753a9bd":"<a id=\"2\" ><\/a><br>\n# Import the nessecary","ba8dc0ba":"<a id=\"3\" ><\/a><br>\n### Adding in Some Buffer Columns\nIn order to get some more numerical data in the set Im using datetimeindex to add some buffer columns with:\n* Year\n* Month\n* Day\n* Cumulative Day Of The Year\n* Weekday\n\nIm hopintg that once these can be plotted there may be some correlation to when certain spikes are made, i.e at the end of a week\/month to coincide when people get paid. If there is a clear trend then it could be worth taking the risk to ride on as the data covers a span of over 4 years.","d59b5c25":"<iframe width=\"1280\" height=\"720\" src=\"https:\/\/www.youtube.com\/embed\/sd4bqmP_460\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","a2f1687a":"*  [Special Doge Song](#1)\n*  [Import the Nessecary](#2)\n*  [Check The Data](#3)","4aff1322":"# Much Crypto, Such Wow","a08f581d":"Creating some new datframes for comparing data based on months Opening prices.","4b3b09f9":"Sweet, no missing data. This is usually the point where I'd be all up for making a heatmap, but with the limited sets of columns i doubt there'd be any correlation. If there were it would be pretty meaningless without looking outside of the dataset.\n","715eb950":"# A little bit about Dogecoin\nFirst introduced as a joke coin as a fast and free payment process in 2013, it has continued to garner the support of people across the globe. Elon Musk is a huge supporter and in recent times every time he nmakes a tweet about Dogecoin, there is a price spike.\nIt is programmed in C++ and has the logo of the Shiba Inu dog meme where it gets its namesake.","e5b6bcf5":"Creating more dataframes to comapre months better by year...."}}