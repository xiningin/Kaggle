{"cell_type":{"75b496e5":"code","ddff74d5":"code","c0d2627d":"code","2989b7a1":"code","ed852db5":"code","f6440ee7":"code","86254748":"code","0b7aa937":"code","9e69c60f":"code","231f3711":"code","918aff38":"code","485209d4":"code","a83df223":"code","47a59952":"code","d2aba4b0":"code","3ccfc4ed":"code","7b1c7727":"code","cda72f3b":"code","c40d56ff":"code","5f435002":"code","4e51fddb":"code","d89860aa":"code","d208e9df":"code","78055287":"code","1b52672d":"code","b3c96586":"code","1ed101d4":"code","62ec97ac":"markdown","457cbc6d":"markdown","1e3a3836":"markdown","ab0d17a4":"markdown","caa6d276":"markdown","10abfa27":"markdown","dfb059c7":"markdown","45d3e998":"markdown","57a3e4c9":"markdown","1af06bdf":"markdown","930b0d7e":"markdown","7bf960bd":"markdown","2bb30a6f":"markdown","a68acabf":"markdown","5aa1bcfd":"markdown"},"source":{"75b496e5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom pandas.api.types import is_string_dtype, is_numeric_dtype\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","ddff74d5":"# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c0d2627d":"# run this to see non-scientific notation\npd.options.display.float_format = '{:.5f}'.format","2989b7a1":"# load data \ndata = pd.read_csv('\/kaggle\/input\/developher-reco\/training_data.csv', sep=';', decimal='.')\n\n# \"head\" shows us the first rows of a table \ndata.head(5)","ed852db5":"# create the new variable \"conversion_rate\" and name it cvr\ndata['cvr'] = data['n_orders'] \/ data['n_impressions'] \n\n# Note: the variables n_orders and n_impressions may not be used as input variables and thus will not appear in the test set. \n# Thus, we are dropping the variable here. \ndata = data.drop(['n_orders', 'n_impressions'], axis=1)","f6440ee7":"data.info()","86254748":"# Dealing with missing values\n# \"color\" has null values => how often is it null?\nprint(round(data['color'].isnull().sum() *100 \/ len(data['color']),2), '% of rows of column \"color\" are empty')","0b7aa937":"# Number of distinct articles\nprint(\"number of distinct products:\", data.id.nunique())","9e69c60f":"# TASK: print the number of distinct brands, categories, ...\nprint()","231f3711":"# create a histogram of each column in the train_data:\nfor column in data:\n    plt.figure(column)\n    plt.title(column)\n    if is_numeric_dtype(data[column]):\n        data[column].plot(kind='hist')\n        plt.gcf().axes[0].xaxis.get_major_formatter().set_scientific(False) # don't show scientific notation\n    elif is_string_dtype(data[column]):\n        #show only the TOP 10 value count in each categorical data\n        data[column].value_counts()[:20].plot(kind='bar')\nplt.close() ","918aff38":"# correlation matrix and heatmap: shows the strength of linare relationship\n# numeric vs. numeric variables\ncorrelation = data.corr()\nsns.heatmap(correlation, cmap=\"GnBu\", annot=False)","485209d4":"# before the transformation:\nprint(data.head(2))\n\n# how many distinct category 1 do we have?\nprint(\"number of distinct products:\", data.category_1.nunique())","a83df223":"data = pd.get_dummies(data, columns=['category_1'])","47a59952":"# after the transformation:\n# we can even use the describe function because now the categories 1 will be seen as numeric\n# describe: overview of basic statistics\nprint(data.describe())","d2aba4b0":"# split training data into train and test (hide samples) \nnp.random.seed(2808)\n\nprint(\"total n rows of dataset:\", len(data))\ntrain, test = train_test_split(data, test_size=0.3)\nprint(\"train\",len(train))\nprint(\"test\",len(test))","3ccfc4ed":"# transform data from pandas dataframe to numpy \ny = train['cvr'].to_numpy()\nx = train[['new_product', 'selling_price']].to_numpy() # make sure not to add cvr with the independent variables!","7b1c7727":"# show the input of the first row for the prediction\nx[0,]","cda72f3b":"# show the target value (what we want to predict)\ny[0]","c40d56ff":"# apply model to test data\n# x: attributes (same as in definition of y above), y: target\n\nmodel = LinearRegression()\nmodel.fit(x,y) \npredicted = model.predict(test[['new_product', 'selling_price']].to_numpy())\ntest['predicted'] = predicted # add column \"predicted\" to test data","5f435002":"test.head(3)","4e51fddb":"# which cvr was predicted for the first article?\npredicted[0]","d89860aa":"# check MAE\nsklearn.metrics.mean_absolute_error(test['cvr'].to_numpy(), predicted)","d208e9df":"# check first x products from predicted cvr and compare to order of actual cvr (rank by cvr)\nprint(test[['id', 'article_name', 'cvr']].sort_values(by = ['cvr'], ascending= False).head(5))\n\n# cvr of 1 or 0.33333 => 1 impression and 1 order? => if yes, remove it from dataset? ","78055287":"# products ranked by predicted cvr\nprint(test[['id', 'article_name', 'predicted']].sort_values(by = ['predicted'], ascending= False).head(5))","1b52672d":"# submission: id and expected on data \"evaluation_data_all_features\"\neval = pd.read_csv('\/kaggle\/input\/developher-reco\/evaluation_data_all_features.csv', sep=';', decimal='.')","b3c96586":"# use model on new data\npred_eval = model.predict(eval[['new_product', 'selling_price']].to_numpy())\neval['predicted'] = pred_eval # add column \"predicted\" to evaluation data\neval.sort_values(by = ['predicted'], ascending= False).head()","1ed101d4":"my_submission = pd.DataFrame({'Id': eval.Id, 'Predicted': eval.predicted})\nmy_submission.to_csv('submission.csv', index=False)","62ec97ac":"# 5. submit your results for the kaggle competition","457cbc6d":"# 4. Evaluation","1e3a3836":"### Now it's up to you - try to add new features to the model. You can either calculate something by yourself or you can select an existing feature. ","ab0d17a4":"# 2. Get an overview of the data you have","caa6d276":"# 0. Reading data\n\nInput data files are available in the read-only \"..\/input\/\" directory","10abfa27":"# 3. Model training","dfb059c7":"Linear regressions can't handle categorical features like category 1 ('Kinderbekleidung', 'Schuhe', 'Spiele') <br>\nThus we need to transform the values in the given column and create a new column for each possible value <br>\nThere will be 1 column for each category (e.g. category_1_Baby) and it will be either 1 or 0, depending on the article being from this category or not\nthe column \"category_1\" will be removed automatically <br>","45d3e998":"### repeat all steps with regard to data transformation. The evaluation data must have the same features as the data with which you trained the model with. ","57a3e4c9":"# Importing python libraries","1af06bdf":"# 1. Data preparation","930b0d7e":"data formats and non-null values <br>\nit is important to have the correct data formats, because it decides how we can use the data. <br>\nE.g., if the price was formatted as a string (object), we wouldn't be able to use it for calculation. <br>\nIn addition, not every algorithm can handle Null values. <br>","7bf960bd":"# 2. Data preparation","2bb30a6f":"### Data finding, organizing and cleaning can take up to 80 % of your Data Science projects time (IBM Data Analytics). Make sure you take this into account when planning your project. ","a68acabf":"Options: <br>\n A) remove column or don't use it for modelling<br>\n B) replace NaN values by ? (hard for categorical values; for numeric values you could use mean, median or even try to predict a value by using the other features)<br>\n C) remove all rows with missing values<br>\n<br>\n For simplicity reasons we'll just go with option A and not use the color for our model.<br>","5aa1bcfd":"# Welcome to our session at developHER!\n\nWe are happy to have you and hope you'll have a good time! <br>\nD\u00e2nia and Marielle\n\n\nGoal: Make a prediction of the conversion rate <br>\nData: Use the file \"training_data.csv\" to create a model "}}