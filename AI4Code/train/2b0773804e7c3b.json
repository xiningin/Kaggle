{"cell_type":{"2bd969db":"code","8094ca9d":"code","1c17f61a":"code","9153978e":"code","9b597f30":"code","1004870e":"code","817146b9":"markdown"},"source":{"2bd969db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pyarrow.parquet as pq #data reading\nimport os\nimport matplotlib.pyplot as plt # visulation\n\n#Efficient Implementation for moving average\ndef runningMeanFast(x, N):\n    return np.convolve(x, np.ones((N,))\/N)[(N-1):]\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n\n# Any results you write to the current directory are saved as output.\n\n","8094ca9d":"#In the power signals there are lot of verticals lines. These flucuations are seen in non faulty and faulty lines.\n#Let us examine one of these signals. \n#The signal 2576 have lot of these patterns and till not faulty.\ncolumn = str((3*2576)+0)\nsignalOrg = pd.read_parquet('..\/input\/train.parquet', engine='pyarrow', columns=[column]) \nplt.figure(figsize=(24, 10))\nplt.plot(signalOrg,'g')\nplt.show()","1c17f61a":"#let us zoom in for vertical line around 450,000\nplt.figure(figsize=(24, 10))\nplt.plot(signalOrg[495000:497000],'g')\nplt.show()","9153978e":"#It is clearly visible that the voltage is following exponential decay pattern.\n#let us define a pattern of these behaviour. \n# These pattern has approx. 10 length.\npattern = [42,-34,27,-19,14,-10,7,-5,3,-2,1] \npattern = pattern - np.mean(pattern)\nimg=plt.plot(np.asarray(pattern),'b')","9b597f30":"#Convluing with pattern will help detect  presense of these pattern. Let us see how it performs.\n#Before we convul, we need to get signal stationary. We substract moving average from signal from the same.\nsignal = pd.read_parquet('..\/input\/train.parquet', engine='pyarrow', columns=[column]) \nsignal = signal[column]\n\nmvSignal = runningMeanFast(signal,30)\ncon = np.convolve(signal-mvSignal,pattern,mode ='same')\nmv = runningMeanFast(abs(con),10)\nmv = np.roll(mv,7)\nplt.figure(figsize=(24, 10))\nplt.plot(mv,'b+')\nplt.show()","1004870e":"#Let us replace the variations with moving average\nsignal [mv > 200] = mvSignal[mv > 200]\nplt.figure(figsize=(24, 10))\nimg=plt.plot(np.asarray(signalOrg),'r-')\nimg=plt.plot(np.asarray(signal),'g-')","817146b9":"The red portion is removed from signal. \nThis denosing has **preserved all other variations** ( before 200000 and 600000). \nWe can define more patterns and extract the features.\nWe can use **CNN with filter size of 10** as smaller filters will remove almost all variations."}}