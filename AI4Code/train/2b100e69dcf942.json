{"cell_type":{"99073b32":"code","c9b52681":"code","156e78ce":"code","1e49f1fe":"code","ed17f7e6":"code","a19f9fef":"code","76351aa0":"code","50bce743":"code","e4cf1ffa":"code","1972fc08":"code","1be826a4":"code","22c7998d":"code","6a3c8073":"code","20c0e6a8":"code","2727d775":"code","a8496c2c":"code","f8ccd128":"code","ae56bd44":"code","98f5144e":"code","d7b23446":"code","538913e1":"code","965258b6":"code","fbe18cea":"code","7b8cb57a":"code","613208f4":"code","1b3a26c3":"code","d3801240":"code","9ab6e9fc":"code","235d4496":"code","d10e4a6c":"code","4514b084":"code","1f92f877":"code","ee915128":"code","22d0a9a7":"code","712de03f":"code","e293444e":"code","ee5bf33e":"code","9fe8d1b8":"code","3b1d6b62":"code","90ac8dfe":"code","694490f8":"code","1c7c24ac":"code","10213383":"code","5368ae0d":"code","b233c02e":"code","b08a2499":"code","c495717a":"code","eb0f1db6":"code","b730608c":"markdown","597a929b":"markdown","26b26a51":"markdown","db6bebf8":"markdown","eeea9ebb":"markdown","4336fc30":"markdown","b5911046":"markdown"},"source":{"99073b32":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","c9b52681":"import warnings\nwarnings.filterwarnings(\"ignore\")","156e78ce":"import os\nos.listdir(\"..\/input\")","1e49f1fe":"df = pd.read_csv(\"..\/input\/Training.csv\")\ndf.head()","ed17f7e6":"df.columns","a19f9fef":"df.info()","76351aa0":"len(df.columns)","50bce743":"len(df)","e4cf1ffa":"len(df['prognosis'].unique())","1972fc08":"cols = df.columns\ncols = cols[:-1]\ncols","1be826a4":"len(cols)","22c7998d":"x = df[cols]\ny = df['prognosis']","6a3c8073":"df['loss_of_appetite'].value_counts(normalize ='True').plot(kind=\"bar\")","20c0e6a8":"sn=sns.FacetGrid(df, hue=\"prognosis\", size=5) \nsn.map(plt.scatter, \"itching\",\"redness_of_eyes\") \nsn.add_legend()\nplt.show()","2727d775":"import warnings\nwarnings.filterwarnings(\"ignore\")","a8496c2c":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier","f8ccd128":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","ae56bd44":"mnb = MultinomialNB()\nmnb = mnb.fit(x_train, y_train)","98f5144e":"mnb.score(x_test, y_test)","d7b23446":"from sklearn import model_selection\nprint (\"result\")\nscores = model_selection.cross_val_score(mnb, x_test, y_test, cv=3)\nprint (scores)\nprint (scores.mean())","538913e1":"test_data = pd.read_csv(\"..\/input\/Testing.csv\")","965258b6":"test_data.head()","fbe18cea":"testx = test_data[cols]\ntesty = test_data['prognosis']","7b8cb57a":"mnb.score(testx, testy)","613208f4":"from sklearn.tree import DecisionTreeClassifier","1b3a26c3":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","d3801240":"print (\"DecisionTree\")\ndt = DecisionTreeClassifier()\nclf_dt=dt.fit(x_train,y_train)\nprint (\"Acurracy: \", clf_dt.score(x_test,y_test))","9ab6e9fc":"from sklearn import model_selection\nprint (\"result\")\nscores = model_selection.cross_val_score(dt, x_test, y_test, cv=3)\nprint (scores)\nprint (scores.mean())","235d4496":"print (\"Acurracy on the actual test data: \", clf_dt.score(testx,testy))","d10e4a6c":"dt.__getstate__()","4514b084":"%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimportances = dt.feature_importances_\nindices = np.argsort(importances)[::-1]\n\n# Print the feature ranking\nprint(\"Feature ranking\",indices)","1f92f877":"features = cols","ee915128":"for f in range(40):\n    print(\"%d. feature %d - %s (%f)\" % (f + 1, indices[f], features[indices[f]] ,importances[indices[f]]))","22d0a9a7":"feature_dict = {}\nfor i,f in enumerate(features):\n    feature_dict[f] = i","712de03f":"feature_dict['loss_of_appetite']","e293444e":"sample_x = [i\/35 if i ==35 else i*0 for i in range(len(features))]\n#This means predicting the disease where the only symptom is redness_of_eyes.","ee5bf33e":"len(sample_x)","9fe8d1b8":"sample_x = np.array(sample_x).reshape(1,len(sample_x))","3b1d6b62":"dt.predict(sample_x)","90ac8dfe":"dt.predict_proba(sample_x)","694490f8":"feature_dict['enlarged_thyroid']","1c7c24ac":"sample_x = [i\/71 if i ==71 else i*0 for i in range(len(features))]","10213383":"sample_x = np.array(sample_x).reshape(1,len(sample_x))","5368ae0d":"dt.predict(sample_x)","b233c02e":"def train_model(X_train, y_train, X_test, y_test, classifier, **kwargs):\n    model = classifier(**kwargs)\n    model.fit(X_train,y_train)\n    \n    # check accuracy and print out the results\n    fit_accuracy = model.score(X_train, y_train)\n    test_accuracy = model.score(X_test, y_test)\n    \n    return model","b08a2499":"plt.figure(figsize=(30,20))\nmodel = train_model(x_train, y_train, x_test, y_test, RandomForestClassifier, random_state=2606)\npd.Series(model.feature_importances_,x.columns).sort_values(ascending=True).plot.barh()","c495717a":"accuracy = []\n\n# list of algorithms names\nclassifiers = ['Logistic Regression', 'Random Forests', 'Knn (5 Neighbors)']\n\n# list of algorithms with parameters\nmodels = [LogisticRegression(), RandomForestClassifier(n_estimators=1177, random_state=2), KNeighborsClassifier(n_neighbors=5)]\n\nfor i in models:\n    model = i\n    model.fit(x_train, y_train)\n    score = model.score(x_test, y_test)\n    accuracy.append(score)","eb0f1db6":"# create a dataframe from accuracy results\nsummary = pd.DataFrame({'accuracy':accuracy}, index=classifiers)       \nsummary","b730608c":"***Finding Accuracy***","597a929b":"Hence the disease would be Peptic ulcer diseae.\n\n","26b26a51":"## Applying Machine Learning Algorithms ","db6bebf8":"**Predicting the disease where the only symptom is enlarged_thyroid.**","eeea9ebb":"**Predicting the disease where the only symptom is loss_of_appetite.**","4336fc30":"# Project: Predicting the disease\nThe Objective of this Project is to take a closer look at the data and to predict the chance of occurrence based on the various features (Risk Factors) responsible for the Disease.","b5911046":"Hence the disease would be Arthritis.\n\n"}}