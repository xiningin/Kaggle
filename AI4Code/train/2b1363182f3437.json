{"cell_type":{"03db0a6e":"code","ea617d74":"code","d26f3ee4":"code","bbcbc57d":"code","67ae6da1":"code","6d2398bb":"code","714d0932":"code","04154e3e":"code","3f8113e2":"code","cd7c93b6":"code","ea6ee1dc":"code","0641b717":"code","ee326d5b":"code","e6a19eee":"code","c3fc5587":"code","b14fecef":"code","b3b21bf2":"code","5d248f6f":"code","31382244":"code","2de60e8d":"code","16821bcc":"code","9c377b8b":"code","5effd3dc":"code","897ed9a1":"code","7ecedde3":"code","aebd9a3f":"code","17645790":"code","c767ab8c":"code","aa74ae96":"code","5c713f0f":"code","9f3494bc":"code","6db985a2":"code","01754c0a":"code","c46df564":"code","6d8e2260":"code","8ed3afc6":"code","eb378384":"code","c2b5d6c7":"code","fdd959cf":"code","361e4580":"code","2b8ed0e4":"code","0d613856":"code","79790261":"code","2b095100":"code","51ef5cfa":"code","fd5cc12b":"code","05215000":"code","f8b3f34e":"code","c6838955":"code","f745fcf7":"code","6e1e8845":"code","1fe1251b":"markdown","f09887e0":"markdown","b2967527":"markdown","bfa03d8e":"markdown","f0add6b9":"markdown","347ba771":"markdown","5f5eeb6f":"markdown","2045b6b6":"markdown","f2daa3af":"markdown","8ed78073":"markdown","7d7d07c9":"markdown","783e5b78":"markdown","75130162":"markdown","f3ff3db4":"markdown","e8744c29":"markdown","49c81241":"markdown","682d005b":"markdown","620d4683":"markdown","eae0ce4b":"markdown","b1b97e96":"markdown","c3fffcc2":"markdown","39fc52a2":"markdown","d451d2e1":"markdown","9479f11e":"markdown","3dcb5cd6":"markdown","30c5b093":"markdown","82c79926":"markdown","2979f32e":"markdown","235a94dd":"markdown","b9c279ec":"markdown","2cde1643":"markdown","e60d6999":"markdown","b5010431":"markdown","ac64dda4":"markdown","2d9cdbf7":"markdown","ec47b2d6":"markdown","d2fc1eee":"markdown","43ad4675":"markdown","7138ab6f":"markdown","592eda3c":"markdown","8a524002":"markdown","5f2d50f3":"markdown","37ccb522":"markdown","434af88b":"markdown","86e7bffb":"markdown","2e06234e":"markdown","e5ff864a":"markdown","31dd2e69":"markdown","11dcac85":"markdown","7fa49470":"markdown","f4162479":"markdown","ad8004b8":"markdown","d29ac8d7":"markdown","e190a570":"markdown","48076b0c":"markdown"},"source":{"03db0a6e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.ticker as mtick ","ea617d74":"import os\nprint(os.listdir(\"..\/input\/churn-prediction\"))","d26f3ee4":"df=pd.read_csv(\"..\/input\/churn-prediction\/Churn.csv\")","bbcbc57d":"df.head()","67ae6da1":"df.shape","6d2398bb":"df.isna().sum()","714d0932":"df.dtypes","04154e3e":"df['Churn'].value_counts()","3f8113e2":"df['TotalCharges']=df.TotalCharges.convert_objects(convert_numeric=True)","cd7c93b6":"df['tenure_range']=pd.cut(df.tenure,[0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75],right=True)","ea6ee1dc":"df['tenure_range'].value_counts()","0641b717":"df.dropna(inplace=True)","ee326d5b":"df=df.drop('tenure',axis=1)","e6a19eee":"df['SeniorCitizen']=df['SeniorCitizen'].map({0:'No',1:'Yes'})","c3fc5587":"df['Churn']=df['Churn'].map({\"No\":0,\"Yes\":1})","b14fecef":"gender_dis=(df['gender'].value_counts()*100\/len(df)).plot(kind='bar',stacked=True)\ngender_dis.set_ylabel('% Customers')\ngender_dis.set_xlabel('Gender')\ngender_dis.yaxis.set_major_formatter(mtick.PercentFormatter())\n\ntotals = []\nfor i in gender_dis.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\n\n#to print the values on top of the bars\nfor i in gender_dis.patches:\n    gender_dis.text(i.get_x()+.15, i.get_height()+3.9, \\\n            str(round((i.get_height()\/total), 1))+'%',\n            fontsize=12,\n            color='black')","b3b21bf2":"sc_dis=(df['SeniorCitizen'].value_counts()*100\/len(df)).plot(kind='bar',stacked=True)\nsc_dis.set_ylabel('% Customers')\nsc_dis.set_xlabel('Senior Citizen')\nsc_dis.yaxis.set_major_formatter(mtick.PercentFormatter())\n\ntotals = []\nfor i in sc_dis.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\n\nfor i in sc_dis.patches:\n    sc_dis.text(i.get_x()+.15, i.get_height()+5, \\\n            str(round((i.get_height()\/total), 1))+'%',\n            fontsize=12,\n            color='black')","5d248f6f":"sc_dependents=df.groupby(['SeniorCitizen','Dependents']).size().unstack()\nsc_dependents=(sc_dependents.T*100\/sc_dependents.T.sum()).T.plot(kind='bar',stacked=True)\nsc_dependents.set_ylabel('% Customers')\nsc_dependents.set_xlabel('Senior Citizens')\nsc_dependents.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in sc_dependents.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    sc_dependents.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","31382244":"sc_dependents=df.groupby(['Partner','Dependents']).size().unstack()\nsc_dependents=(sc_dependents.T*100\/sc_dependents.T.sum()).T.plot(kind='bar',stacked=True)\nsc_dependents.set_ylabel('% Customers')\nsc_dependents.set_xlabel('Partners')\nsc_dependents.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in sc_dependents.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    sc_dependents.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","2de60e8d":"payment_dis=(df['PaymentMethod'].value_counts()).plot(kind='bar',stacked=True)\npayment_dis.set_ylabel('Number of Customers')\npayment_dis.set_xlabel('Payment Methods')\n#payment_dis.yaxis.set_major_formatter(mtick.PercentFormatter())\n\ntotals = []\nfor i in payment_dis.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\n\nfor i in payment_dis.patches:\n    payment_dis.text(i.get_x()+.05, i.get_height()-4.5, \\\n            str(np.ceil((i.get_height()\/total))),\n            fontsize=12,\n            color='black')","16821bcc":"df.groupby(['tenure_range'])['Churn'].size().plot(kind='bar')","9c377b8b":"df.groupby(['Contract'])['Churn'].count().plot(kind='bar')","5effd3dc":"all_services=['PhoneService', 'MultipleLines', 'InternetService', 'OnlineSecurity',\n       'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV',\n       'StreamingMovies']\n\nfig,axes=plt.subplots(nrows=3,ncols=3,figsize=(17,9))\nfig.tight_layout()\nfor i, item in enumerate(all_services):\n    if i < 3:\n        ax =(df[item].value_counts()*100\/len(df)).plot(kind = 'bar',ax=axes[i,0],rot = 0)\n        ax.set_ylabel('% Customers')\n        ax.yaxis.set_major_formatter(mtick.PercentFormatter())\n        \n        totals = []\n        for i in ax.patches:\n            totals.append(i.get_width())\n        total = sum(totals)\n        \n        for i in ax.patches:\n            ax.text(i.get_x()+.05, i.get_height()-6, \\\n            str(round((i.get_height()\/total), 1))+'%',\n            fontsize=12,\n            color='black')\n        \n    elif i >=3 and i < 6:\n        ax =(df[item].value_counts()*100\/len(df)).plot(kind = 'bar',ax=axes[i-3,1],rot = 0)\n        ax.set_ylabel('% Customers')\n        ax.yaxis.set_major_formatter(mtick.PercentFormatter())\n        \n        totals = []\n        for i in ax.patches:\n            totals.append(i.get_width())\n        total = sum(totals)\n        \n        for i in ax.patches:\n            ax.text(i.get_x()+.05, i.get_height()-6, \\\n            str(round((i.get_height()\/total), 1))+'%',\n            fontsize=12,\n            color='black')\n        \n    elif i < 9:\n        ax =(df[item].value_counts()*100\/len(df)).plot(kind = 'bar',ax=axes[i-6,2],rot = 0)\n        ax.set_ylabel('% Customers')\n        ax.yaxis.set_major_formatter(mtick.PercentFormatter())\n        \n        totals = []\n        for i in ax.patches:\n            totals.append(i.get_width())\n        total = sum(totals)\n        \n        for i in ax.patches:\n            ax.text(i.get_x()+.05, i.get_height()-6, \\\n            str(round((i.get_height()\/total), 1))+'%',\n            fontsize=12,\n            color='black')\n        \n    ax.set_title(item)","897ed9a1":"company_services = df[['OnlineSecurity', 'DeviceProtection', 'StreamingMovies'\n                                       ,'TechSupport', 'StreamingTV', 'OnlineBackup', 'Churn']]\ncompany_services.replace(to_replace='Yes', value=1, inplace=True)\ncompany_services.replace(to_replace='No', value=0, inplace=True)\ncompany_services = company_services[company_services.OnlineSecurity !='No internet service']             \ngroupby_aggregation = company_services.groupby('Churn', as_index=False)[['OnlineSecurity', 'DeviceProtection', 'StreamingMovies', 'TechSupport',\n                                                               'StreamingTV', 'OnlineBackup']].sum()\nax = groupby_aggregation.set_index('Churn').T.plot(kind='bar', stacked=True, figsize=(12,6))\npatches, labels = ax.get_legend_handles_labels()\nax.legend(patches, labels, loc='best')\nax.set_title('Which Service Customers Churn Higher', fontsize=20)","7ecedde3":"OnileSecuity_churn=df.groupby(['OnlineSecurity'])['Churn'].size()\nOnileSecuity_churn=(OnileSecuity_churn.T*100\/OnileSecuity_churn.T.sum()).T.plot(kind='bar',stacked=True)\nOnileSecuity_churn.set_ylabel('% Customers')\nOnileSecuity_churn.set_xlabel('Onile Security')\nOnileSecuity_churn.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in OnileSecuity_churn.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    OnileSecuity_churn.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","aebd9a3f":"TechSupport_churn=df.groupby(['TechSupport'])['Churn'].size()\nTechSupport_churn=(TechSupport_churn.T*100\/TechSupport_churn.T.sum()).T.plot(kind='bar',stacked=True)\nTechSupport_churn.set_ylabel('% Customers')\nTechSupport_churn.set_xlabel('Tech Support')\nTechSupport_churn.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in TechSupport_churn.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    TechSupport_churn.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","17645790":"OnileBackup_churn=df.groupby(['OnlineBackup'])['Churn'].size()\nOnileBackup_churn=(OnileBackup_churn.T*100\/OnileBackup_churn.T.sum()).T.plot(kind='bar',stacked=True)\nOnileBackup_churn.set_ylabel('% Customers')\nOnileBackup_churn.set_xlabel('Onile Backup')\nOnileBackup_churn.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in OnileBackup_churn.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    OnileBackup_churn.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","c767ab8c":"StreamingMovies_churn=df.groupby(['StreamingMovies'])['Churn'].size()\nStreamingMovies_churn=(StreamingMovies_churn.T*100\/StreamingMovies_churn.T.sum()).T.plot(kind='bar',stacked=True)\nStreamingMovies_churn.set_ylabel('% Customers')\nStreamingMovies_churn.set_xlabel('Streaming Movies')\nStreamingMovies_churn.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in StreamingMovies_churn.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    StreamingMovies_churn.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","aa74ae96":"StreamingTV_churn=df.groupby(['StreamingTV'])['Churn'].size()\nStreamingTV_churn=(StreamingTV_churn.T*100\/StreamingTV_churn.T.sum()).T.plot(kind='bar',stacked=True)\nStreamingTV_churn.set_ylabel('% Customers')\nStreamingTV_churn.set_xlabel('Streaming TV service')\nStreamingTV_churn.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in StreamingTV_churn.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    StreamingTV_churn.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","5c713f0f":"InternetService_churn=df.groupby(['InternetService'])['Churn'].size()\nInternetService_churn=(InternetService_churn.T*100\/InternetService_churn.T.sum()).T.plot(kind='bar',stacked=True)\nInternetService_churn.set_ylabel('% Customers')\nInternetService_churn.set_xlabel('Internet service Type')\nInternetService_churn.yaxis.set_major_formatter(mtick.PercentFormatter())\nfor i in InternetService_churn.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    InternetService_churn.annotate('{:.0f}%'.format(height), (i.get_x()+.40*width, i.get_y()+.3*height),\n                color = 'black')","9f3494bc":"IS_SM=df.groupby(['InternetService','StreamingMovies'])['Churn'].size().unstack().plot(kind='bar',stacked=True)\nIS_SM.set_ylabel('Customers')\nIS_SM.set_xlabel('Internet Service Type')\nIS_SM.legend(loc='center left', bbox_to_anchor=(1, 0.5))\nIS_SM.set_title('Internet service and StreamingMovies Services vs Customer Churn')\nfor i in IS_SM.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    IS_SM.annotate('{:.0f}'.format(height), (i.get_x()+.30*width, i.get_y()+.3*height),color = 'black')","6db985a2":"IS_STV=df.groupby(['InternetService','StreamingTV'])['Churn'].size().unstack().plot(kind='bar',stacked=True)\nIS_STV.set_ylabel('Customers')\nIS_STV.set_xlabel('Internet Service Type')\nIS_STV.legend(loc='center left', bbox_to_anchor=(1, 0.5))\nIS_STV.set_title('Internet service and StreamingMovies Services vs Customer Churn')\nfor i in IS_STV.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y =i.get_xy() \n    IS_STV.annotate('{:.0f}'.format(height), (i.get_x()+.30*width, i.get_y()+.3*height),color = 'black')","01754c0a":"plt.figure(figsize=(12,6))\nax = sns.boxplot(x='Churn', y='MonthlyCharges', data=df)\nax.set_title('Monthly Charges vs Churn')\nax.set_ylabel('Monthly Charges')\nax.set_xlabel('Churn')","c46df564":"### Higher the monthly charges more the churn rate,because people who are churning are paying arounf 80$ while non-churners are paying above 60$","6d8e2260":"!pip install scikit-plot","8ed3afc6":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics as sm\nfrom sklearn.metrics import f1_score, roc_auc_score\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import  cross_val_score,GridSearchCV\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nimport scikitplot as skplt\nfrom scikitplot.metrics import plot_roc_curve ","eb378384":"cat_x=df[['gender', 'SeniorCitizen', 'Partner', 'Dependents',\n       'PhoneService', 'MultipleLines', 'InternetService', 'OnlineSecurity',\n       'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV',\n       'StreamingMovies', 'Contract', 'PaperlessBilling', 'PaymentMethod', 'tenure_range']].copy()\n\ncat_x=pd.get_dummies(cat_x)\nnum_x=df[['MonthlyCharges', 'TotalCharges']].copy()\n\nx=pd.concat([cat_x,num_x],axis=1)\ny=df['Churn']","c2b5d6c7":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)","fdd959cf":"clf = RandomForestClassifier(n_estimators=100,random_state=0, n_jobs=-1, class_weight=\"balanced\",oob_score=True)\nclf.fit(x_train,y_train)","361e4580":"rf_predictions=clf.predict(x_test)\nprint(\"Random Forest Accuracy:\",sm.accuracy_score(y_test,rf_predictions)*100)","2b8ed0e4":"sm.confusion_matrix(y_test,rf_predictions)","0d613856":"report=sm.classification_report(y_test,rf_predictions)\nprint(report)","79790261":"y_pred_probs = clf.predict_proba(x_test)\nplot_roc_curve(y_test, y_pred_probs, curves=['each_class'], figsize=(10,7))\nplt.show()","2b095100":"imp_features=clf.feature_importances_\ncols=x_train.columns\nimportant_features=[]\nfor feat_names in zip(cols,imp_features):\n    important_features.append(feat_names)\n\n#imp_vals=pd.series(imp_features,x.columns.values)\ntop_10_features=sorted(important_features, key=lambda x: x[1],reverse=True)[:10]\nplt.bar(*zip(*top_10_features))\nplt.xticks(rotation=90)\nplt.show()","51ef5cfa":"imp_features=clf.feature_importances_\ncols=x_train.columns\nimportant_features=[]\nfor feat_names in zip(cols,imp_features):\n    important_features.append(feat_names)\n\n#imp_vals=pd.series(imp_features,x.columns.values)\ntop_10_features=sorted(important_features, key=lambda x: x[1],reverse=True)[-10:]\nplt.bar(*zip(*top_10_features))\nplt.xticks(rotation=90)\nplt.show()","fd5cc12b":"logit_model=LogisticRegression().fit(x_train,y_train)\nlogit_predictions=logit_model.predict(x_test)","05215000":"print(\"Logistic Regression Accuracy:\",sm.accuracy_score(y_test,logit_predictions)*100)","f8b3f34e":"sm.confusion_matrix(y_test,logit_predictions)","c6838955":"report=sm.classification_report(y_test,logit_predictions)\nprint(report)","f745fcf7":"y_pred_probs = logit_model.predict_proba(x_test)\nplot_roc_curve(y_test, y_pred_probs, curves=['each_class'], figsize=(10,7))\nplt.show()","6e1e8845":"top_feats=pd.Series(logit_model.coef_[0],index=x.columns)\ntop_feats.sort_values(ascending=False)[:10].plot(kind=\"bar\")","1fe1251b":"## Senior Citizens Distribution","f09887e0":"## Randon Forest Classifier","b2967527":"## Customers who are Senior Citizens and Dependents","bfa03d8e":"### Findings: we can observe that slightly more than half of the data are males and remaining are females.","f0add6b9":"### Findings: there are only 16.2% i.e. 1140 Senior Citizens from overall 7043 customers.","347ba771":"### Findings: For 90% of customers who do'nt have partners are also not dependents,surprisingly 49% of customers who has partrners are also not dependents,while 51% of them are dependents.","5f5eeb6f":"# Churn by Online Security Service","2045b6b6":"### Data Visualization","f2daa3af":"### here if we observe more Tenure_range(60-65] and (65-70] along with NoInternetService in all services is least important feature to predict the churn.","8ed78073":"## In both the models(Random Forest and Logistic regression),Logistic regression got highest accuracy and if we consider Precison and Recall, logistic regression has predicted well in both the models, and as we observe ROC curves for both the models Logistic regression has more AUC i.e. 0.84 while Random Forest has 0.81.","7d7d07c9":"### Findings: Customers who did not purchased online security service are churning more.","783e5b78":"### Importing the data","75130162":"## customers who has partners and dependents","f3ff3db4":"## Churn based on the Tenure Range","e8744c29":"### Final Conclusions","49c81241":"### Findings: Customers who opted for Fiber Optic Internet Service and also StreamingTV service are the majority customers who are churning,and customers who availed DSL Internet Service type and not opted for StreamingTV service are also churning second.","682d005b":"# Churn by Internet Service Type","620d4683":"### Understanding the data","eae0ce4b":"# Churn based on Internet Service type and StreamingTV Service","b1b97e96":"# Churn by TechSupport Service","c3fffcc2":"# Monthly Charges vs Churn ","39fc52a2":"### Important Features","d451d2e1":"# Churn based on Internet Service type and StreamingMovies Service","9479f11e":"### Findings: Customers who has Fiber Optic Service Type are mostly churning than DSL type customers.","3dcb5cd6":"## Churn by Contract Type","30c5b093":"This Kernal discusses about,\n1. what are the factors that are effecting a company and causing customers churn?\n2. Clear EDA for each factor that effecting the churn?\n3. Finally suggested few measures that company can take inorder to reduce the churn?\nHope it will be helpful!","82c79926":"# Distribution of All Service Provided by the company","2979f32e":"### Here we can observe TotalCharges,MonthlyCharges,Contract_Month-to-Month are top three important features to predict churn in random Forest\n### As we saw in our EDA that if monthlycharges are increasing the churn rate is also increasing, and most churners are from Month-to-Month contract,so we can confidently say that these predictor variables are playing crucial role in predicting churn.","235a94dd":"### Findings: Customers who opted for Fiber Optic Internet Service and also Streaming Movies service are the majority customers who are churning.","b9c279ec":"### Here we can observe tenure_range(0,5],Contract_Month-to-Month,InternetService_FiberOptic are top three important features to predict churn in Logistic Regression.\n### As we saw in our EDA most of the churners are from customers who are having tenure(0-5] and month-month contract and also customers who are availing fiberoptic internet service.","2cde1643":"### Findings: Customers who did not purchased online Backup service are churning more.","e60d6999":"## Top 10 Important Features","b5010431":"### Inorder to solve churn problem company need to concentrate on Different Factors:\n### 1) Customers who availed Month-to-Month contract has high churning rate among all the other contracts, so company can provide different intresting offers to those customers who has choosen monthly contract, so that we can decrease the churning rate, and customers who availed 2 year contract also churning in second place, so company can offer any intresting offers before their contract ends,so they'll stay back. \n### 2) As Monthly charges are increasing churning rate is also increasing, so inorder to decrease the churning rate, company should take a decision on the monthly charges by decreasing them to an extent.\n### 3) Customers who Availed Streaming Movies and Streaming Tv services are churning at high rate, it might be based on different factors like speed of the internet, Internet service type that customer opting for etc.,as we observed in our EDA that customers who opted for FiberOptic and StreamingMovies and StreamingTV services are highly churning,so we can say that FiberOptic Internet service is one factor to consider regarding churning of customers.\n### 4) Customers who did not avalied Servies like OnlineBackup, Device Protection, Techsupport, PhoneService, MultipleLines are Churning a lot, So company can take different measures that makes customer to choose that services so they won't churn.\n### 5) Customers who has choosen FiberOptic Internet Service are churning a lot, so company can check out reasons because their might be different reasons that effect Internet service like speed of that particular service etc.\n\n## So here are some Factors that are leading to customer churn and measures to be taken to reduce the churn.","ac64dda4":"### Findings: Customers who purchased Streaming Movies service are almost equally churning with customers who did not purchased the service.","2d9cdbf7":"### Findings: Customers who are purchasing 'StreamingMovies' and 'StreamingTV' services churning more.","ec47b2d6":"### Implement Machine Learning Models","d2fc1eee":"## ROC curve","43ad4675":"# Churn by Online Backup Service","7138ab6f":"# Churn by Streaming Movies Service","592eda3c":"## ROC Curve","8a524002":"# Logistic Regression","5f2d50f3":"# Distribution of customers based on payment method","37ccb522":"### Findings: Customers whose tenure is between [0-5] their churning rate is high,and as tenure is increasing the churning rate is decreasing,so we can say that customers who are not churning are staying for longer period.So shorter the tenure,higher is the probability of churn.","434af88b":"### Findings: Customers who purchased Streaming TV service are almost equally churning with customers who did not purchased the service.","86e7bffb":"## which service has highest impact on churn","2e06234e":"### Findings: Nothing Surprising,Customers who had month-to-month contract has highest churning rate, and second is Two year contract.","e5ff864a":"### Findings: there are very less senior citizens who are dependents (8%) i.e. only 91 customers,on the otherhand majority (66%) of the customers are not senior citizens and also not dependents.","31dd2e69":"### Findings: Customers who did not availed Tech Support service are churning more.","11dcac85":"### Data Manipulation","7fa49470":"### Starting from Gender Distribution:","f4162479":"### Model Evaluation","ad8004b8":"# Churn by Streaming TV Service","d29ac8d7":"## Least Important Features","e190a570":"### Findings: Customers with Electronic Payment are churning more than any other customers.","48076b0c":"### Model Evaluation"}}