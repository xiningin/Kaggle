{"cell_type":{"94cd55ae":"code","fa22a747":"code","da6d81ca":"code","cdc9df5e":"code","e503a9c3":"code","627cf9df":"code","e22d9e21":"code","bcae335a":"code","7fb9984c":"code","bc0b520c":"code","1b1da255":"code","41ad86e8":"code","bcae78a6":"code","d51a1104":"code","7b0edf3b":"code","1b175087":"code","caf0c628":"code","938bad80":"code","50cfb138":"code","605875cd":"code","784a67c9":"code","43d41b87":"code","6cebd41a":"code","4d2cdec4":"code","18558051":"markdown","7917ee3a":"markdown","d116514b":"markdown","b120004d":"markdown","522fc884":"markdown","f209d9e8":"markdown","af1aa49e":"markdown","3264ad1b":"markdown","5f1588d1":"markdown","273af905":"markdown","2bf9ab94":"markdown","125360cd":"markdown","b34eb290":"markdown","82a6eb4e":"markdown"},"source":{"94cd55ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa22a747":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler,OneHotEncoder\nimport tensorflow as tf\nsns.set_style(style='darkgrid')\n\n%matplotlib inline","da6d81ca":"from sklearn.metrics import classification_report\n\ndef eval1(predic,ytest):\n  print(\"-----------------------------------------------------------------\")\n  print( classification_report(predic,ytest) )\n  print(\"-----------------------------------------------------------------\")","cdc9df5e":"def transformer1(x_train,x_test):\n  m1=MinMaxScaler()\n  x_train=m1.fit_transform(x_train)\n  x_test=m1.transform(x_test)\n  return x_train,x_test","e503a9c3":"def transformer2(x_train,x_test):\n  m1=StandardScaler()\n  x_train=m1.fit_transform(x_train)\n  x_test=m1.transform(x_test)\n  return x_train,x_test","627cf9df":"data=pd.read_csv('..\/input\/sensorless-drive-diag\/Sensorless_drive_diagnosis.txt',sep=' ',header=None)","e22d9e21":"data","bcae335a":"data.info()","7fb9984c":"data.describe(include='all')","bc0b520c":"data[48].value_counts()","1b1da255":"data.isna().any()","41ad86e8":"plt.figure(figsize=(10,10))\nsns.heatmap(data.isna().transpose(),cmap='viridis',xticklabels=False,cbar=False)","bcae78a6":"plt.figure(figsize=(20,6))\nsns.countplot(data=data,x=48,palette='rainbow')\nplt.tight_layout()","d51a1104":"o1=OneHotEncoder()\n\ndy=(data[48]).values\ndy1=dy.reshape(-1,1)\ny=o1.fit_transform(dy1).toarray()\n\n# y=pd.get_dummies(data[48]).values\nX=data.drop([48],axis=1).values","7b0edf3b":"x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.15,random_state=42)","1b175087":"# x_train,x_test=transformer1(x_train,x_test)","caf0c628":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping","938bad80":"e1=EarlyStopping(patience=5,verbose=1)","50cfb138":"model =Sequential()\n\nmodel.add(Dense(X.shape[1],activation='relu'))\n\nmodel.add(Dense(2*X.shape[1],activation='relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(2*X.shape[1],activation='relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(2*X.shape[1],activation='relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(2*X.shape[1],activation='relu'))\n\nmodel.add(Dense(y.shape[1],activation='softmax'))\n\nmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","605875cd":"history=model.fit(x=x_train,y=y_train,epochs=800,verbose=1,callbacks=[e1],validation_split=0.3,workers=15)","784a67c9":"pred1=np.argmax(model.predict(x_test), axis=-1)+1","43d41b87":"d1=pd.DataFrame(history.history)\n\nd1.plot(figsize=(8,8))","6cebd41a":"eval1(o1.inverse_transform(y_test),pred1)","4d2cdec4":"model.summary()","18558051":"# PRE-MADE FUNCTIONS","7917ee3a":"# MODEL RUN","d116514b":"# EDA(Exploratory Data Analysis)","b120004d":"# GETTING DATA","522fc884":"# X,Y,SPLITTING","f209d9e8":"## DATA SCALERS","af1aa49e":"# Summary of model","3264ad1b":"# IMPORT LIBRARY","5f1588d1":"# DATA SCALING","273af905":"# DATA DESCRIPTION","2bf9ab94":"## EVALUATORS","125360cd":"# NULL CHECK","b34eb290":"# DATA PREPROCESS","82a6eb4e":"# EVALUATIONS"}}