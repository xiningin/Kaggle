{"cell_type":{"80b95982":"code","1bffd968":"code","286ac072":"code","9d917b54":"code","4729ce60":"code","ad766366":"code","8e66cdc0":"code","f1570248":"code","6d7c81a0":"code","4cf68e67":"code","695f28eb":"code","f54ec41d":"code","47066e03":"code","2b3af193":"code","9fb98019":"code","e8d45941":"code","e1f7a6fe":"code","a9bf4b1f":"code","e11c5d97":"code","fecc7781":"code","2b10848e":"code","32d8477e":"code","e3800132":"markdown","f6b560c2":"markdown","14afcf80":"markdown","0472e363":"markdown","b2e839fe":"markdown","80a44699":"markdown","3687af43":"markdown","e696566f":"markdown","c17c072d":"markdown","3b52a3af":"markdown","6080a0b5":"markdown","a2e543cd":"markdown","02bb8f02":"markdown","95d4fc99":"markdown","6f28eae8":"markdown","3f740890":"markdown","2493aec6":"markdown","0981bf41":"markdown","f85e943d":"markdown","fd21eb3a":"markdown","f993a7d0":"markdown","c38bafe4":"markdown","7170d66c":"markdown","11fa5b55":"markdown","ab5024c7":"markdown","01fde0b4":"markdown","f36fd259":"markdown","f72a9156":"markdown","de761580":"markdown","ef6ee7f8":"markdown","6d849a79":"markdown","ca92d312":"markdown","7a702f37":"markdown","33f03b4f":"markdown","ac47a949":"markdown","cc1fc5f7":"markdown","2db209af":"markdown","c776abd6":"markdown"},"source":{"80b95982":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import tree\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score\nfrom sklearn.metrics import f1_score, confusion_matrix, precision_recall_curve, roc_curve\nfrom sklearn.metrics import ConfusionMatrixDisplay\nfrom sklearn import model_selection","1bffd968":"heart_df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\nheart_df.head()","286ac072":"heart_df.target.unique()","9d917b54":"heart_df.info()","4729ce60":"labels = ['No HD', 'HD']\nvalues = heart_df.target.value_counts()\/heart_df.target.shape[0]\ncolors = sns.color_palette('RdPu_r')[0:2]\nplt.pie(values, labels = labels, colors = colors, autopct='%.0f%%')\nplt.show()","ad766366":"women = heart_df.loc[heart_df.sex == 0]\nmen = heart_df.loc[heart_df.sex == 1]\nlabels = ['No HD', 'HD']\nvalues_w = women.target.value_counts()\/women.target.shape[0]\nvalues_m = men.target.value_counts()\/men.target.shape[0]\ncolors = [sns.color_palette('RdPu')[0:2], sns.color_palette('crest')[0:2]]\n\nfig, axs = plt.subplots(1, 2)\naxs[0].pie(values_w, labels = labels, colors = colors[0])\naxs[1].pie(values_m, labels = labels, colors = colors[1])\nplt.show()","8e66cdc0":"plt.figure(figsize=(12,5))\nplt.subplots_adjust(wspace=0.3)\nsns.set_style(\"white\")\nax = sns.countplot(data=heart_df, x='slope',hue='target',palette='BuPu')\nfor p in ax.patches:\n    x, height, width = p.get_x(), p.get_height(), p.get_width()\n    ax.text(x + width \/ 2, height + 7, f'{height} \/ {height \/ len(heart_df.target) * 100:2.1f}%', va='center', ha='center', size=15)\nplt.legend(labels=labels)\nsns.despine()","f1570248":"corr=heart_df.corr().round(2)\n\nsns.set(font_scale=0.85)\nplt.figure(figsize=(10, 10))\nsns.set_palette(\"bright\")\nsns.set_style(\"white\")\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr,annot=True,cmap='cool',mask=mask,cbar=True)\nplt.title('Correlation matrix')","6d7c81a0":"sns.set(font_scale=1.2)\nplt.figure(figsize=(8,8))\nabs(corr['target']).sort_values()[:-1].plot.barh(color='#993366')\nplt.gca().set_facecolor('#ebc2af')\nsns.despine()","4cf68e67":"from sklearn.inspection import plot_partial_dependence\ntree_classifier = tree.DecisionTreeClassifier(criterion = 'entropy', max_depth = 5)\nX_train_for_tree = heart_df.drop(['target'], axis=1)\ny_train_for_tree = heart_df.target\ntree_classifier.fit(X_train_for_tree, y_train_for_tree)\nfig,ax = plt.subplots(figsize=(10,20))\nplot_partial_dependence(tree_classifier, X_train_for_tree, X_train_for_tree.columns, ax=ax,)","695f28eb":"plt.figure(figsize=(20,5))\nsns.set_style(\"white\")\nax = sns.countplot(data=heart_df, x='cp',hue='target',palette='BuPu')\nfor i in ax.patches:\n    x, height, width = i.get_x(), i.get_height(), i.get_width()\n    ax.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ len(heart_df.target) * 100:2.1f}%', va='center', ha='center', size=20)\nplt.legend(labels=labels)\nsns.despine()","f54ec41d":"heart_df_test = heart_df.sample(n=33, random_state=1)","47066e03":"heart_df_train = heart_df.drop(heart_df_test.index)\nheart_df_train.head()","2b3af193":"X_train = heart_df_train.drop(['target'], axis=1)\ny_train = heart_df_train.target","9fb98019":"parametrs = {'n_estimators':range(5,31,5),\n    'max_depth':range(1,13,2),\n    'min_samples_leaf':range(1,8),\n    'min_samples_split':range(2,4)}\nheart_rf = RandomForestClassifier(random_state=0)\nsearch = GridSearchCV(heart_rf, parametrs, n_jobs=-1, cv=3)\nsearch.fit(X_train,y_train)\nbest_heart_forest = search.best_estimator_ ","e8d45941":"X_test = heart_df_test.drop(['target'], axis=1)\ny_test = heart_df_test.target\ny_test_array = y_test.to_numpy()","e1f7a6fe":"predictions = best_heart_forest.predict(X_test)","a9bf4b1f":"(predictions == y_test_array).sum()","e11c5d97":"precision, recall, thresholds = precision_recall_curve(y_test_array, predictions)\nplt.figure(figsize = (5,5))\nplt.plot([0, 1], [0.5, 0.5],'k--')\nplt.plot(recall, precision, color='#92000a')\nplt.xlabel('recall')\nplt.ylabel('precision')\nplt.title('PRC curve')\nplt.show()","fecc7781":"from sklearn.metrics import plot_confusion_matrix\nplot_confusion_matrix(best_heart_forest, X_test, y_test)  \nplt.show()","2b10848e":"heart_df_test_2 = heart_df.sample(n=69, random_state=25)\nX_test_2 = heart_df_test_2.drop(['target'], axis=1)\ny_test_2 = heart_df_test_2.target\npredictions_2 = best_heart_forest.predict(X_test_2)","32d8477e":"plot_confusion_matrix(best_heart_forest, X_test_2, y_test_2)  \nplt.show()","e3800132":"# Conclusion","f6b560c2":"Our dataset has float values, we can use Logistic Regression, Random Forest Classifier, CatBoost Classifier, etc.","14afcf80":"Let's look at these graphs. While our classifier was building the model, only couple of features quickly increased: cp and thalach. Then let's look at correlation matrix, \"pink\" features are cp and thalach again. Thus, we can conclude that thalach and, of course, cp are the most important features. Besides, when they arre high, chance of having heart disease approaches to one.","0472e363":"Now add simple tree classifier and draw partial dependence of features.","b2e839fe":"### Features and correlation","80a44699":"Need to say that heart disease must be determined if all symptoms match and probability is high. It's crusial, because an undiagnosed heart disease can lead to an accident. Medical centers must give appropriate treatment to the patient if results are positive or even doubtful. \nOur model shouldn't be mistaken in diagnosing a class of positive outputs. Thus, we need to optimize recall metric, because it's the most important indicator.","3687af43":"Let's check what we work with:","e696566f":"![https:\/\/www.irishtimes.com\/polopoly_fs\/1.4679204.1632168227!\/image\/image.jpg](http:\/\/)","c17c072d":"# Introduction","3b52a3af":"Our data is balanced.","6080a0b5":"# Classifier and predictions","a2e543cd":"We got excellent curve, if recall increase, precision has slow descent.","02bb8f02":"Confusion matrix shows count of our different results, true or wrong, it contains TruePositives, FalsePositives, TrueNegative and FalseNegative classes. Let's draw this matrix using scikit-learn and use it for calculating our metrics:","95d4fc99":"### Import libraries that may be useful and download data","6f28eae8":"We must make some batch, train sample, and, of course, test sample. For this reason, we use pandas and do it.","3f740890":"### Visualization","2493aec6":"Heart disease describes a range of conditions that affect your heart. Heart diseases include: blood vessel disease,  heart rhythm problems (arrhythmias), heart defects you're born with (congenital heart defects), heart valve disease, disease of the heart muscle or heart infection.\nRisk factors for developing heart disease include: age, sex, family history, poor diet, stress, physical inactivity etc.","0981bf41":"Rare situation, because we get maximum recall value and it's perfect. Let's chose another random sample from dataset and test our model on precision\/recall score again:","f85e943d":"# Data analysis","fd21eb3a":"Precision = 0.8125, recall = 1 ","f993a7d0":"![](http:\/\/www.irishtimes.com\/polopoly_fs\/1.4679204.1632168227!\/image\/image.jpg)","c38bafe4":"The heart is the main gear in our body mechanism, because it activates the blood circulation. The heart like an engine of a car, one breakdown and it may never start again. Thus, we must learn about heart disease all and analize it, so that use these researches to prevent  accidents. Even this dataset, origin of which lead us to research in Cleveland and other universities, can save lives! ","7170d66c":"### Confusion matrix","11fa5b55":"Now we can calculate accuracy. Accuracy = 30\/33=0.91, that is 91% ","ab5024c7":"Thus, men are more prone to heart disease","01fde0b4":"Our model's recall is over 90% in all samples that we check. Of course, new data may be worse compiled, or maybe our classifier hasn't learned enough due to lack of examples. Although, we won't do another model, with gradient descent or BoostClassifiers, because our random forest works well. ","f36fd259":"The proposed dataset contains more accurate features that describe the disease from a medical point of view. The following features we'll use to predict our target variable (heart disease or no heart disease):\n* age - age in years\n* sex - (1 = male; 0 = female)\n* cp - chest pain type\n* trestbps - resting blood pressure (in mm Hg on admission to the hospital)\n* chol - serum cholestoral in mg\/dl\n* serum = LDL + HDL + .2 * triglycerides\n* fbs - (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* restecg - resting electrocardiographic results\n    0: Nothing to note\n    1: ST-T Wave abnormality\n    2: Possible or definite left ventricular hypertrophy\n* thalach - maximum heart rate achieved\n* exang - exercise induced angina (1 = yes; 0 = no)\n* oldpeak - ST depression \n* slope - the slope of the peak exercise ST segment\n    0: Upsloping: better heart rate with excercise (uncommon)\n    1: Flatsloping: minimal change (typical healthy heart)\n    2: Downslopins: signs of unhealthy heart\n* ca - number of major vessels (0-3) colored by flourosopy colored vessel \n* thal - thalium stress result\n    1,3: normal\n    6: fixed defect: used to be defect but ok now\n    7: reversable defect: no proper blood movement when excercising\n* target - have disease or not (1=yes, 0=no) ","f72a9156":"### Presicion\/recall","de761580":"Precision = 0.84, recall = 0.9","ef6ee7f8":"### Random Forest Classifier","6d849a79":"If patient has typical angina, atypical angina or even asymptomatic angina, heart disease probability quickly increase.","ca92d312":"Let's check our result:","7a702f37":"Write formulas for all metrics:\n* Precision = TruePositives \/ (TruePositives + FalsePositives)\n* Recall = TruePositives \/ (TruePositives + FalseNegatives)\n* F-Measure = (2 * Precision * Recall) \/ (Precision + Recall)","33f03b4f":"Now add Random Forest Classifier. Chose the best with GridSearchCV, selecting ideal parameters. If we get unpleasant results, we will use another classifier or tune our forest with some functions, for example, PyCaret tunes.","ac47a949":"So we have 14 columns and 303 entries, standart binary classification in outputs. Besides, our dataset has no missing values.","cc1fc5f7":"### About heart disease","2db209af":"# Thanks for your attention:)","c776abd6":"We can see that the highest correlation is between target and cp(angina type)."}}