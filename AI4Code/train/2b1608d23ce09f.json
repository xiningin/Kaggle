{"cell_type":{"076b1e97":"code","f1cd1256":"code","213b9d28":"code","f4e97ffb":"code","3879a26d":"code","060142f3":"code","b6b3364a":"code","232f4dc1":"code","151e3059":"code","3b2c05bf":"code","1607b2e9":"code","0e0b32d1":"code","052f6e62":"code","beb630fc":"code","ac270ebe":"code","df5418c3":"code","fb946ca1":"code","c058104a":"code","f6c2c1cc":"code","edd1bb82":"code","5085ebf3":"code","b6aac27f":"code","5d6c80ea":"code","f3ae15b4":"code","f6029d9d":"code","8c88b7f6":"code","921aa4bd":"code","82cb4e13":"code","d95bc339":"code","612d7ba6":"code","e502f452":"code","6b54158f":"code","339c3f55":"code","3ad990a1":"code","3784634d":"code","79f9f846":"code","b1033304":"code","54116c79":"code","02d55cd4":"code","a4b5913f":"code","0ad67501":"code","ff0d7f07":"code","ac5cbfe4":"code","68852289":"code","3c36b549":"code","a60cf981":"code","74c0d520":"code","701adeb9":"code","8726c9c6":"code","ee279055":"code","563e0372":"code","c91c8f1b":"code","4eefb473":"code","d44a4f92":"code","1b408d38":"code","0b2617e4":"code","81cbac7c":"code","b51e83e4":"code","ed3d6f18":"markdown"},"source":{"076b1e97":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits.basemap import Basemap\nimport os\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f1cd1256":"df=pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")","213b9d28":"df.head()","f4e97ffb":"df.info()","3879a26d":"df.shape","060142f3":"df.tail()","b6b3364a":"df.drop(['id','host_id','host_name','last_review'],axis=1,inplace=True)","232f4dc1":"df.isnull().sum()","151e3059":"def impute_median(series):\n    return series.fillna(series.median())","3b2c05bf":"df.reviews_per_month=df[\"reviews_per_month\"].transform(impute_median)","1607b2e9":"df.isnull().sum()","0e0b32d1":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(df.corr(),annot=True,linewidths=5,fmt='.1f',ax=ax)\nplt.show()","052f6e62":"sns.pairplot(df)\nplt.show()","beb630fc":"fig = plt.figure(figsize = (15,10))\nax = fig.gca()\ndf.hist(ax=ax)\nplt.show()","ac270ebe":"df.columns","df5418c3":"df.nunique()","fb946ca1":"#room_type - price\nresult = df.groupby([\"room_type\"])['price'].aggregate(np.median).reset_index().sort_values('price')\nsns.barplot(x='room_type', y=\"price\", data=df, order=result['room_type']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","c058104a":"#neighbourhood_group - price\nresult = df.groupby([\"neighbourhood_group\"])['price'].aggregate(np.median).reset_index().sort_values('price')\nsns.barplot(x='neighbourhood_group', y=\"price\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","f6c2c1cc":"labels = df.neighbourhood_group.value_counts().index\ncolors = ['green','yellow','orange','pink','red']\nexplode = [0,0,0,0,0]\nsizes = df.neighbourhood_group.value_counts().values\n\nplt.figure(0,figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Airbnb According to Neighbourhood Group',color = 'blue',fontsize = 15)\nplt.show()","edd1bb82":"plt.figure(figsize=(10,7))\nsns.barplot(x = \"neighbourhood_group\", y = \"price\", hue = \"room_type\", data = df)\nplt.xticks(rotation=45)\nplt.show()","5085ebf3":"plt.figure(figsize=(18,18))\nsns.lmplot(x='minimum_nights',y='calculated_host_listings_count',hue=\"neighbourhood_group\",data=df)\nplt.xlabel('calculated_host_listings_count')\nplt.ylabel('minimum_nights')\nplt.title('calculated_host_listings_count vs minimum_nights')\nplt.show()","b6aac27f":"df.price.max()","5d6c80ea":"ax = sns.violinplot(x=\"neighbourhood_group\", y=\"price\",\n                    data=df[df.price < 1000],\n                    scale=\"width\", palette=\"Set3\")","f3ae15b4":"#neighbourhood_group - reviews_per_month\nresult = df.groupby([\"neighbourhood_group\"])['reviews_per_month'].aggregate(np.median).reset_index().sort_values('reviews_per_month')\nsns.barplot(x='neighbourhood_group', y=\"reviews_per_month\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","f6029d9d":"#neighbourhood_group - minimum_nights\nresult = df.groupby([\"neighbourhood_group\"])['minimum_nights'].aggregate(np.median).reset_index().sort_values('minimum_nights')\nsns.barplot(x='neighbourhood_group', y=\"minimum_nights\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","8c88b7f6":"#neighbourhood_group - number_of_reviews\nresult = df.groupby([\"neighbourhood_group\"])['number_of_reviews'].aggregate(np.median).reset_index().sort_values('number_of_reviews')\nsns.barplot(x='neighbourhood_group', y=\"number_of_reviews\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","921aa4bd":"ax = sns.violinplot(x=\"room_type\", y=\"price\",\n                    data=df[df.price < 1000],\n                    scale=\"width\", palette=\"Set3\")","82cb4e13":"sns.kdeplot(df['price'])\nplt.xlabel('Values')\nplt.ylabel('Frequency')\nplt.title('Price Kde Plot')\nplt.show()","d95bc339":"#neighbourhood_group - reviews_per_month\nresult = df.groupby([\"neighbourhood_group\"])['reviews_per_month'].aggregate(np.median).reset_index().sort_values('reviews_per_month')\nsns.barplot(x='neighbourhood_group', y=\"reviews_per_month\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","612d7ba6":"sns.lineplot(x='reviews_per_month',y='price',data=df)\nplt.show()","e502f452":"#neighbourhood_group - calculated_host_listings_count\nresult = df.groupby([\"neighbourhood_group\"])['calculated_host_listings_count'].aggregate(np.median).reset_index().sort_values('calculated_host_listings_count')\nsns.barplot(x='neighbourhood_group', y=\"calculated_host_listings_count\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","6b54158f":"sns.lineplot(x='calculated_host_listings_count',y='price',data=df)\nplt.show()","339c3f55":"#neighbourhood_group - availability_365\nresult = df.groupby([\"neighbourhood_group\"])['availability_365'].aggregate(np.median).reset_index().sort_values('availability_365')\nsns.barplot(x='neighbourhood_group', y=\"availability_365\", data=df, order=result['neighbourhood_group']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","3ad990a1":"sns.lineplot(x='availability_365',y='price',data=df)\nplt.show()","3784634d":"df.price.describe().T","79f9f846":"labels = df.room_type.value_counts().index\ncolors = ['orange','yellow','red']\nexplode = [0,0,0]\nsizes = df.room_type.value_counts().values\n\nplt.figure(0,figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Airbnb According to Room Type',color = 'blue',fontsize = 15)\nplt.show()","b1033304":"#room_type - minimum_nights\nresult = df.groupby([\"room_type\"])['minimum_nights'].aggregate(np.median).reset_index().sort_values('minimum_nights')\nsns.barplot(x='room_type', y=\"minimum_nights\", data=df, order=result['room_type']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","54116c79":"sns.lineplot(x='minimum_nights',y='price',data=df)\nplt.show()","02d55cd4":"#room_type - number_of_reviews\nresult = df.groupby([\"room_type\"])['number_of_reviews'].aggregate(np.median).reset_index().sort_values('number_of_reviews')\nsns.barplot(x='room_type', y=\"number_of_reviews\", data=df, order=result['room_type']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","a4b5913f":"sns.lineplot(x='number_of_reviews',y='price',data=df)\nplt.show()","0ad67501":"#room_type - reviews_per_month\nresult = df.groupby([\"room_type\"])['reviews_per_month'].aggregate(np.median).reset_index().sort_values('reviews_per_month')\nsns.barplot(x='room_type', y=\"reviews_per_month\", data=df, order=result['room_type']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","ff0d7f07":"#room_type - calculated_host_listings_count\nresult = df.groupby([\"room_type\"])['calculated_host_listings_count'].aggregate(np.median).reset_index().sort_values('calculated_host_listings_count')\nsns.barplot(x='room_type', y=\"calculated_host_listings_count\", data=df, order=result['room_type']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","ac5cbfe4":"#room_type - availability_365\nresult = df.groupby([\"room_type\"])['availability_365'].aggregate(np.median).reset_index().sort_values('availability_365')\nsns.barplot(x='room_type', y=\"availability_365\", data=df, order=result['room_type']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","68852289":"#neighbourhood - price\nplt.figure(figsize=(18,8))\n#result = df.groupby([\"neighbourhood\"])['price'].aggregate(np.median).reset_index().sort_values('price')\nsns.barplot(x=df.price[:25], y=df.neighbourhood[:25]) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.xticks(rotation=90)\nplt.show()","3c36b549":"#neighbourhood - minimum_nights\nplt.figure(figsize=(18,8))\n#result = df.groupby([\"neighbourhood\"])['minimum_nights'].aggregate(np.median).reset_index().sort_values('minimum_nights')\nsns.barplot(x=df.minimum_nights[:25], y=df.neighbourhood[:25]) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.xticks(rotation=90)\nplt.show()","a60cf981":"#neighbourhood - number_of_reviews\nplt.figure(figsize=(18,8))\n#result = df.groupby([\"neighbourhood\"])['number_of_reviews'].aggregate(np.median).reset_index().sort_values('number_of_reviews')\nsns.barplot(x=df.number_of_reviews[:25], y=df.neighbourhood[:25]) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.xticks(rotation=90)\nplt.show()","74c0d520":"#neighbourhood - reviews_per_month\nplt.figure(figsize=(18,8))\n#result = df.groupby([\"neighbourhood\"])['reviews_per_month'].aggregate(np.median).reset_index().sort_values('reviews_per_month')\nsns.barplot(x=df.reviews_per_month[:25], y=df.neighbourhood[:25]) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.xticks(rotation=90)\nplt.show()","701adeb9":"#neighbourhood - calculated_host_listings_count\nplt.figure(figsize=(18,8))\n#result = df.groupby([\"neighbourhood\"])['calculated_host_listings_count'].aggregate(np.median).reset_index().sort_values('calculated_host_listings_count')\nsns.barplot(x=df.calculated_host_listings_count[:25], y=df.neighbourhood[:25]) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.xticks(rotation=90)\nplt.show()","8726c9c6":"#neighbourhood - availability_365\nplt.figure(figsize=(18,8))\n#result = df.groupby([\"neighbourhood\"])['availability_365'].aggregate(np.median).reset_index().sort_values('availability_365')\nsns.barplot(x=df.availability_365[:25], y=df.neighbourhood[:25]) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.xticks(rotation=90)\nplt.show()","ee279055":"df = df.sort_values(by=[\"price\"], ascending=False)\ndf['rank']=tuple(zip(df.price))\ndf['rank']=df.groupby('price',sort=False)['rank'].apply(lambda x : pd.Series(pd.factorize(x)[0])).values\ndf.head()","563e0372":"df.reset_index(inplace=True,drop=True)\ndf.head(5)","c91c8f1b":"df_rich_hosts=pd.DataFrame(df.iloc[:,0:2])\ndf_rich_hosts['latitude']=df.iloc[:,3]\ndf_rich_hosts['longitude']=df.iloc[:,4]\ndf_rich_hosts['room_type']=df.iloc[:,5]\ndf_rich_hosts['price']=df.iloc[:,6]\ndf_rich_hosts.head()","4eefb473":"df.room_type.unique()","d44a4f92":"df[df.room_type==\"Private room\"].describe().T","1b408d38":"sns.scatterplot(df_rich_hosts.longitude,df_rich_hosts.latitude,hue=df_rich_hosts.neighbourhood_group)\nplt.ioff()","0b2617e4":"sns.scatterplot(df_rich_hosts.longitude,df_rich_hosts.latitude,hue=df_rich_hosts.room_type)\nplt.ioff()","81cbac7c":"import folium\nfrom folium.plugins import HeatMap\nm=folium.Map([40.7128,-74.0060],zoom_start=11)\nHeatMap(df_rich_hosts[['latitude','longitude']].dropna(),radius=8,gradient={0.2:'blue',0.4:'purple',0.6:'orange',1.0:'red'}).add_to(m)\ndisplay(m)","b51e83e4":"from wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df_rich_hosts.name)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"yellow\").generate(text)\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","ed3d6f18":"![](https:\/\/tophotel.news\/wp-content\/uploads\/2019\/03\/New-York-City-Brooklyn-Bridge-Panorama-Juergen-Roth-2.jpg)"}}