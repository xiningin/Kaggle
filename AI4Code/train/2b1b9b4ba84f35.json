{"cell_type":{"c769e1e0":"code","88e08bca":"code","f5589600":"code","a0890bfa":"code","4275003b":"code","3818647d":"code","861e8731":"code","47e127e1":"code","f046f551":"code","f6c065c4":"code","640eb9b7":"code","264ba0e3":"code","52f1665f":"code","2a165d2b":"code","bd73f0b5":"code","538c6bd5":"code","e25e1a1a":"code","68209eee":"code","f2687768":"code","4fa0bf7c":"code","5b224186":"code","10921d00":"code","a6d97ed9":"code","ced0f8c0":"code","c105290a":"code","189bfea6":"code","44b94b97":"code","0c5b9dcf":"code","080910ea":"code","0a617e97":"code","74caf361":"code","76d84c26":"code","68491f9c":"code","6299cca9":"code","ac2eb773":"code","c638b781":"code","1bea665c":"code","bbbfbd55":"code","b79c874b":"code","6514fc0b":"code","6b6a24c2":"code","fc8c2e31":"code","2f5913f7":"code","c4afa88e":"code","608ac37b":"code","742fba65":"code","65d0c407":"code","bac1db4c":"code","febc08be":"code","a0530f26":"code","a443e011":"code","67b688c7":"code","041ad483":"code","ca483bf9":"code","e82aaa31":"code","287652c3":"code","e496919f":"code","170563ee":"code","782f9ffe":"code","41a0eb3a":"code","bee100a5":"code","d6b92ec9":"code","546c0e48":"code","be60669b":"code","93929899":"code","c79c572e":"code","984553d5":"code","7cbf0967":"code","32a065c0":"code","9fde03a4":"code","b89ee982":"code","5b9f6082":"markdown","2f749fca":"markdown"},"source":{"c769e1e0":"import matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport tensorflow as tf\nimport statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\nfrom kerastuner.tuners import RandomSearch","88e08bca":"df=pd.read_csv('..\/input\/rideshare_kaggle.csv') ","f5589600":"df.head()","a0890bfa":"df.shape","4275003b":"df=df.drop(['id'],axis=1)","3818647d":"df.head()","861e8731":"df=df.drop(['timestamp','datetime','windGustTime','temperatureHigh','temperatureHighTime','temperatureLow','temperatureLowTime',\n           'apparentTemperatureHigh','apparentTemperatureHighTime','apparentTemperatureLow','apparentTemperatureLowTime',\n            'sunriseTime','sunsetTime','precipIntensityMax','uvIndexTime','temperatureMin','temperatureMinTime','temperatureMax',\n            'temperatureMaxTime','apparentTemperature','apparentTemperatureMin','apparentTemperatureMinTime','apparentTemperatureMax'\n           ,'apparentTemperatureMaxTime','long_summary','icon','product_id','timezone','visibility.1','destination'],axis=1)","47e127e1":"df.head()","f046f551":"df.describe()","f6c065c4":"df.describe(include='object')","640eb9b7":"df.shape","264ba0e3":"df.isnull().sum()","52f1665f":"\nplt.figure(figsize=(25, 10))\n\nsns.heatmap(df.isnull(), cbar=False)\n\nplt.show()","2a165d2b":"df=df[df['price'].isnull()==False]","bd73f0b5":"df.isnull().sum()","538c6bd5":"\nplt.figure(figsize=(25, 10))\n\nsns.heatmap(df.isnull(), cbar=False)\n\nplt.show()","e25e1a1a":"df.shape","68209eee":"num_col=df.select_dtypes(include='number')","f2687768":"num_col.shape","4fa0bf7c":"cat_col=df.select_dtypes(include='object')","5b224186":"cat_col.shape","10921d00":"cat_col.head()","a6d97ed9":"plt.figure(figsize=(60,55))\nplt.rcParams.update({'font.size': 40})\nj=1\nfor column in num_col:\n    plt.subplot(8,3,j)\n    sns.distplot(num_col[column])\n    plt.tight_layout()\n    j=j+1","ced0f8c0":"plt.figure(figsize=(60,55))\nplt.rcParams.update({'font.size': 40})\nj=1\nfor column in num_col:\n    if column=='price':\n        continue\n    else:\n        plt.subplot(8,3,j)\n        sns.scatterplot(x=num_col[column],y=num_col['price'])\n        plt.tight_layout()\n        j=j+1","c105290a":"cat_col1=cat_col.copy()","189bfea6":"cat_col['price']=df['price']","44b94b97":"plt.figure(figsize=(70,69))\nplt.rcParams.update({'font.size': 40})\nj=1\nfor column in cat_col:\n    if column=='price':\n        continue\n    else:\n        plt.subplot(8,1,j)\n        sns.boxplot(x=cat_col[column],y=cat_col['price'])\n        plt.tight_layout()\n        j=j+1","0c5b9dcf":"corr=num_col.corr()","080910ea":"# set figure size\nplt.figure(figsize=(30, 30))\n\n# set condition to get a strong correlation between the variables\nsns.set(font_scale=2)\nsns.heatmap(corr[(corr >= 0.7) | (corr <= -0.7)],\n            vmax=1.0, vmin=-1.0, linewidths=0.1,\n           annot=True, annot_kws={\"size\": 18}, square=True);\n\n# specify name of the plot\nplt.title('Correlation between numeric features')\nplt.show()","0a617e97":"plt.figure(figsize=(60,55))\nplt.rcParams.update({'font.size': 40})\nj=1\nfor column in num_col:\n    plt.subplot(8,3,j)\n    sns.boxplot(x=num_col[column])\n    plt.tight_layout()\n    j=j+1","74caf361":"data2=df[['price','distance','latitude','temperature','windGust','visibility','dewPoint']]","76d84c26":"#Outlier Treatment\n#Outlier Treatment\n#Capping the outliers #Winsorization\nfor i in data2.columns:\n    q1=data2[i].quantile(0.25)\n    q3=data2[i].quantile(0.75)\n    iqr=q3-q1\n    ub=q3 + 1.5*iqr\n    lb=q1 - 1.5*iqr\n    uc=data2[i].quantile(0.99)\n    lc=data2[i].quantile(0.01)\n    for ind1 in data2[i].index:\n        if data2.loc[ind1, i] >ub:            \n            data2.loc[ind1, i] =uc\n        if data2.loc[ind1, i] < lb:\n            data2.loc[ind1, i] =lc","68491f9c":"plt.figure(figsize=(60,55))\nplt.rcParams.update({'font.size': 40})\nj=1\nfor column in data2:\n    plt.subplot(8,3,j)\n    sns.boxplot(x=data2[column])\n    plt.tight_layout()\n    j=j+1","6299cca9":"for column in data2:\n    df[column]=data2[column]","ac2eb773":"num_col=df.select_dtypes(include='number')","c638b781":"plt.figure(figsize=(60,55))\nplt.rcParams.update({'font.size': 40})\nj=1\nfor column in num_col:\n    plt.subplot(8,3,j)\n    sns.boxplot(x=num_col[column])\n    plt.tight_layout()\n    j=j+1","1bea665c":"cat_col","bbbfbd55":"df.source.value_counts()","b79c874b":"df.cab_type.value_counts()","6514fc0b":"df.name.value_counts()","6b6a24c2":"df.short_summary.value_counts()","fc8c2e31":"df=pd.get_dummies(df,columns=['cab_type'],drop_first=True)","2f5913f7":"df=pd.get_dummies(df,columns=['short_summary'],drop_first=True)","c4afa88e":"df=pd.get_dummies(df,columns=['name'],drop_first=True)","608ac37b":"df=pd.get_dummies(df,columns=['source'],drop_first=True)","742fba65":"df.head()","65d0c407":"data=df.copy()","bac1db4c":"X=data.drop(['price'],axis=1)\nY=data['price']\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.3,random_state=48)","febc08be":"lm=LinearRegression()","a0530f26":"lm.fit(x_train,y_train)","a443e011":"pred=lm.predict(x_test)","67b688c7":"r2_score(y_test,pred)","041ad483":"num_col=num_col-num_col.mean()","ca483bf9":" vif=pd.DataFrame()","e82aaa31":"vif['VIF']=[variance_inflation_factor(num_col.values,i) for i in range(num_col.shape[1])] \nvif['feature']=num_col.columns \nvif.sort_values('VIF',ascending=False)","287652c3":"num_col=num_col.drop(['dewPoint'],axis=1)","e496919f":"vif1=pd.DataFrame()\nvif1['VIF']=[variance_inflation_factor(num_col.values,i) for i in range(num_col.shape[1])] \nvif1['feature']=num_col.columns \nvif1.sort_values('VIF',ascending=False)","170563ee":"num_col=num_col.drop(['month'],axis=1)","782f9ffe":"vif1=pd.DataFrame()\nvif1['VIF']=[variance_inflation_factor(num_col.values,i) for i in range(num_col.shape[1])] \nvif1['feature']=num_col.columns \nvif1.sort_values('VIF',ascending=False)","41a0eb3a":"num_col=num_col.drop(['windSpeed'],axis=1)","bee100a5":"vif1=pd.DataFrame()\nvif1['VIF']=[variance_inflation_factor(num_col.values,i) for i in range(num_col.shape[1])] \nvif1['feature']=num_col.columns \nvif1.sort_values('VIF',ascending=False)","d6b92ec9":"num_col=num_col.drop(['pressure'],axis=1)","546c0e48":"vif1=pd.DataFrame()\nvif1['VIF']=[variance_inflation_factor(num_col.values,i) for i in range(num_col.shape[1])] \nvif1['feature']=num_col.columns \nvif1.sort_values('VIF',ascending=False)","be60669b":"num_col=num_col.drop(['precipProbability'],axis=1)","93929899":"vif1=pd.DataFrame()\nvif1['VIF']=[variance_inflation_factor(num_col.values,i) for i in range(num_col.shape[1])] \nvif1['feature']=num_col.columns \nvif1.sort_values('VIF',ascending=False)","c79c572e":"data=data.drop(['dewPoint','month','windSpeed','pressure','precipProbability'],axis=1)","984553d5":"X=data.drop(['price'],axis=1)\nY=data['price']\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.3,random_state=48)","7cbf0967":"lm1=LinearRegression()","32a065c0":"lm1.fit(x_train,y_train)","9fde03a4":"pred=lm1.predict(x_test)","b89ee982":"r2_score(y_test,pred)","5b9f6082":"# **Model-2**","2f749fca":"# **Base Model**"}}