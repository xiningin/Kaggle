{"cell_type":{"0540a61b":"code","089a80b6":"code","4bdaaba6":"code","1e770f80":"code","641114c1":"code","dfa32542":"code","9d86606b":"code","a9bd6e6f":"code","700ee380":"code","e37d08f7":"code","9dc72b65":"code","2e867ee1":"code","cacba8e3":"code","f4511715":"code","44f77183":"code","8563aa15":"code","e5d5bb8a":"code","e4252a46":"code","ce43a4b8":"code","81afe9a1":"code","632a386c":"code","e6c67539":"markdown","5178218a":"markdown","217e8770":"markdown","4368977b":"markdown","1754505a":"markdown","c4acf1dc":"markdown","6b2b54a2":"markdown","8580d81f":"markdown","cd7fbd19":"markdown","2418e837":"markdown","0dc23bcd":"markdown","2064a4f4":"markdown","0ab095ec":"markdown","7e5f02b6":"markdown"},"source":{"0540a61b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","089a80b6":"df = pd.read_csv('\/kaggle\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')","4bdaaba6":"df.head()","1e770f80":"df.isnull().sum()","641114c1":"df.drop(['cc3'],axis=1,inplace=True)\ndf.head()","dfa32542":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ndf.country = le.fit_transform(df.country)\ndf.banking_crisis = le.fit_transform(df.banking_crisis)","9d86606b":"train_test_split = np.random.rand(len(df)) < 0.7\ntrain = df[train_test_split]\ntest = df[~train_test_split]","a9bd6e6f":"train[:10]","700ee380":"len(train)","e37d08f7":"test[:10]","9dc72b65":"len(test)","2e867ee1":"train_data = train.iloc[:,0:12]\ntrain_data.head()","cacba8e3":"train_label = train.iloc[:,12]\ntrain_label.head()","f4511715":"test_data = test.iloc[:,0:12]\ntest_data.head()","44f77183":"test_label = test.iloc[:,12]\ntest_label.head()","8563aa15":"from keras import models\nfrom keras import layers\n\nmodel = models.Sequential()\nmodel.add(layers.Dense(8, activation = 'relu', input_shape = (12,)))\nmodel.add(layers.Dense(8, activation = 'relu'))\nmodel.add(layers.Dense(1, activation = 'sigmoid'))","e5d5bb8a":"model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics =['accuracy'])","e4252a46":"x_val = train_data[:100]\npartial_x_train = train_data[100:]\ny_val = train_label[:100]\npartial_y_train = train_label[100:]","ce43a4b8":"history = model.fit(partial_x_train, partial_y_train, epochs = 60, batch_size = 10, validation_data = (x_val, y_val))","81afe9a1":"model.fit(train_data,train_label, epochs = 60, batch_size = 10)\nresults = model.evaluate(test_data, test_label)","632a386c":"print(results)","e6c67539":"Label encoding to covert string values to integers","5178218a":"A fairly naive approach achieved an accuracy of 96.04% which can be increased with other state of art approaches such as K fold validation and iterated K fold.","217e8770":"The final accuracy turned out to be 96.04%","4368977b":"looking few rows of train and test data","1754505a":"Feature engineering => dropping unneccessary columns which do not have effect of predictions","c4acf1dc":"Randomizing the data for non bias and doing train and test split in 80% and 20%","6b2b54a2":"Creating a Deep learning predictive model from the data set to get the prediction whether a country can have banking crisis in future with the given set of data with simple hold out validation.\n\nNote: However I will be using simple hold out validation but K fold validation and iterated K fold will be a better choice as we have a small dataset of 1059 rows.","8580d81f":"Running model fit to train the model and test on validation data, after the 9th epochs the model started to show appreciable and consistant accuracy","cd7fbd19":"Checking for null values in dataframe","2418e837":"Column 12 - \"banking_crisis\" is what i have to predict from the given dataset so I will map 'train_data' from col 0 to col 11 and will map 'train_label' to col 12 which we have to predict and the same for test data as well","0dc23bcd":"Compiling the model and fixing the required metrics","2064a4f4":"Finally running the model on the test data","0ab095ec":"Seggregating 100 validation samples from training data to check training accuracy and loss and validation accuracy and loss","7e5f02b6":"Creating the network architecture: selecting 3 layer model (one input, one hidden and one output) with 8 hidden units of layer for input and hidden layer (to lessen the complexity) and one for output layer with activation function as sigmoid"}}