{"cell_type":{"36e8d551":"code","c9c74a85":"code","a49f0321":"code","91032aab":"code","303e33b1":"code","6fb2381c":"code","12170e36":"code","316e9ca2":"code","20ac4805":"code","74edacd6":"code","0833d85b":"code","3746678d":"code","c2ef83fc":"code","10281a10":"code","72b9652c":"code","4cdc012a":"code","531e35eb":"code","bc1e0ab1":"code","33ea92fd":"code","38da8308":"code","8cb19cdf":"code","2152ed68":"code","5889630a":"code","56f01fc6":"code","755f3b64":"code","efbbbbd0":"code","8a28723b":"code","eed5725e":"code","9e4f88b6":"code","73db4ebe":"code","d516ccb5":"code","d6a61a37":"code","5623941b":"code","3c5b28cd":"code","3cee46e3":"code","64d8b4ba":"code","a1eacd07":"code","52f39565":"code","03170919":"code","3811c645":"code","28ca6e59":"markdown","4ad66bcd":"markdown","2c8c8ba7":"markdown","26f53b8b":"markdown","c8fd7241":"markdown"},"source":{"36e8d551":"import pandas as pd\n","c9c74a85":"df=pd.read_csv('..\/input\/titanic\/train.csv')  #reading training file.\ndf.head()","a49f0321":"df.drop(['Name','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True)  ## droping unnecessary columns if you all want you can use embarked while training your model. ","91032aab":"df.head()","303e33b1":"df['Embarked'].isna().sum()","6fb2381c":"df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])\n","12170e36":"df['Embarked'].isna().sum()","316e9ca2":"df['Embarked']=pd.get_dummies(df['Embarked'])","20ac4805":"df['Sex']=pd.get_dummies(df['Sex']) ##ML algorithm only take numerical feature so we have to convert 'Sex' columns into interger with the help of one hot encoding.","74edacd6":"df['Embarked'].value_counts()","0833d85b":"df.head()","3746678d":"df.isna().mean()   ## For finding null values.","c2ef83fc":"age_mean=df['Age'].median()  #we are filling null values with the help of mean you can also use median.\n","10281a10":"df['Age'].fillna(age_mean,inplace=True)","72b9652c":"df.isna().mean()","4cdc012a":"df.dtypes","531e35eb":"df.corr()","bc1e0ab1":"import seaborn as sns\nsns.heatmap(df.corr(),annot=True)  #CHECKING THE RELATIONSHIP OF ALL THE INDEPENDENT VARIABLE WITH DEPENDENT VARIABLE.","33ea92fd":"from sklearn import tree\nfrom sklearn.model_selection import train_test_split","38da8308":"x=df.drop('Survived',axis=1)\ny=df['Survived']","8cb19cdf":"test_data=pd.read_csv('..\/input\/titanic\/test.csv')\ntest_data.head() #this is our test dataset, we will be using this for our prediction.","2152ed68":"test_data.drop(['Name','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True) #same thing we have to do in test data as we had done in our training data.","5889630a":"test_data.isna().mean()","56f01fc6":"test_data['Embarked']=pd.get_dummies(test_data['Embarked'])","755f3b64":"test_data['Sex']=pd.get_dummies(test_data['Sex'])","efbbbbd0":"Age_mean=test_data['Age'].median()\nfare_mean=test_data['Fare'].median()","8a28723b":"test_data['Age'].fillna(Age_mean,inplace=True)\ntest_data['Fare'].fillna(fare_mean,inplace=True)","eed5725e":"test_data.isna().mean()","9e4f88b6":"df.head(3)","73db4ebe":"test_data.head(3)","d516ccb5":"X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)","d6a61a37":"model=tree.DecisionTreeClassifier()","5623941b":"model.fit(X_train,y_train)","3c5b28cd":"model.predict(X_test)","3cee46e3":"y_test","64d8b4ba":"model.score(X_test,y_test)","a1eacd07":"prediction=model.predict(test_data)   #this is our output.","52f39565":"prediction","03170919":"test_data.shape","3811c645":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': prediction})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","28ca6e59":"### What is one hot encoding: a one-hot is a group of bits among which the legal combinations of values are only those with a single high bit and all the others low","4ad66bcd":"## Importing decision tree algo:","2c8c8ba7":"### Importing necessary module or package.","26f53b8b":"# This Analysis is for those who are new to decision tree.","c8fd7241":"## Thankyou:)"}}