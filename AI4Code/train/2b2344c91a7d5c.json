{"cell_type":{"9d3c7c60":"code","10d58187":"code","ba705ea8":"code","4a27ef00":"code","77a1d490":"code","e86d4de7":"code","64e1fe78":"code","cc0f801a":"markdown","ed48f9db":"markdown","e59c3bb7":"markdown","038cbcf6":"markdown","6a039115":"markdown","64f5d3e2":"markdown"},"source":{"9d3c7c60":"import os\nimport numpy as np \nimport pandas as pd\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, GlobalAveragePooling2D, Activation, Flatten, Dropout, BatchNormalization\nfrom tensorflow.keras import optimizers, regularizers\nfrom tensorflow.keras.applications import InceptionResNetV2\nfrom tensorflow.keras.applications.inception_resnet_v2 import preprocess_input\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.optimizers import SGD \nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","10d58187":"df=pd.read_csv('..\/input\/labels.csv')\ntest_df=pd.read_csv('..\/input\/sample_submission.csv')\nimage_size = 299","ba705ea8":"model = Sequential()\nmodel.add(InceptionResNetV2(include_top=False, pooling='avg', weights=\"imagenet\"))\nmodel.add(Dense(512))\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.8))\nmodel.add(Dense(120, activation='softmax'))\nmodel.layers[0].trainable = False\nmodel.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])","4a27ef00":"\n# creating data generator \ndatagen = ImageDataGenerator(preprocessing_function=preprocess_input, rescale=1.\/255., horizontal_flip=True,width_shift_range = 0.2,height_shift_range = 0.2,validation_split=0.15)\n\n#train generator \ntrain_generator=datagen.flow_from_dataframe(dataframe=df,directory=\"..\/input\/train\/\",x_col=\"id\",y_col=\"breed\",has_ext=False,subset=\"training\",batch_size=16,seed=1997,shuffle=True,class_mode=\"categorical\",target_size=(image_size, image_size))\n\n#test generator \nvalid_generator=datagen.flow_from_dataframe(dataframe=df,directory=\"..\/input\/train\/\",x_col=\"id\",y_col=\"breed\",has_ext=False,subset=\"validation\",batch_size=1,seed=1997,shuffle=True,class_mode=\"categorical\",target_size=(image_size, image_size))\n\n#creating test generator \ntest_datagen=ImageDataGenerator(preprocessing_function=preprocess_input,rescale=1.\/255.)\n\n#train generator \ntest_generator=test_datagen.flow_from_dataframe(dataframe=test_df,directory=\"..\/input\/test\/\",x_col=\"id\",y_col=None,has_ext=False,batch_size=1,seed=42,shuffle=False,class_mode=None,target_size=(image_size, image_size))","77a1d490":"model.fit_generator(generator=train_generator,steps_per_epoch=train_generator.n,validation_data=valid_generator,validation_steps=train_generator.n,epochs=1)","e86d4de7":"pred=model.predict_generator(test_generator,verbose=1)","64e1fe78":"labels = (train_generator.class_indices)\nlabels = list(labels.keys())\ndf = pd.DataFrame(data=pred,\n                 columns=labels)\n\ncolumns = list(df)\ncolumns.sort()\ndf = df.reindex(columns=columns)\n\nfilenames = test_df[\"id\"]\ndf[\"id\"]  = filenames\n\ncols = df.columns.tolist()\ncols = cols[-1:] + cols[:-1]\ndf = df[cols]\ndf.head(5)\n\ndf.to_csv(\"submission_InceptionResnet50.csv\",index=False)","cc0f801a":"# Model Training","ed48f9db":"# Prediction ","e59c3bb7":"# Dog Breed Classification using Transfer Learning  ","038cbcf6":"## Data Generator ","6a039115":"Creating submission file for model evaluation ","64f5d3e2":"## Loading Model and Pretrained Weights"}}