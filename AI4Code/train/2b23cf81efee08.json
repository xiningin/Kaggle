{"cell_type":{"b80461af":"code","ece0b6ba":"code","3a3eb260":"code","b81819e9":"code","c496b0fa":"code","0b841bf9":"code","858aef13":"code","8dc05ca9":"code","297ae862":"code","04dd6135":"code","44344482":"code","ee775864":"code","0eb24f6a":"code","831b82b0":"code","8da0edb5":"code","d28ef8da":"code","d33a4bf5":"code","26ef3e1b":"code","cce13a9c":"code","9d2897ac":"code","eac7c0bf":"code","9daba85b":"code","04c82125":"code","072a0866":"code","e13c4a1d":"code","9cea2a98":"code","af4c4a6e":"code","0d407efd":"code","63b8c37e":"code","bfa803b9":"code","3874451f":"code","fccd0fe9":"code","93a2fd0d":"code","26eba56a":"code","1654e64c":"code","c8ac4833":"code","9abf600a":"code","9a7586fd":"code","7e4aa30b":"code","30ea2d31":"code","aba88286":"markdown","7faad4ba":"markdown","ffc58320":"markdown","61df5a26":"markdown","0117c49a":"markdown","7fb04c50":"markdown","fd38973d":"markdown","21283808":"markdown","981dc6e7":"markdown","d21b417b":"markdown","bb91cb33":"markdown","12d22a89":"markdown","94781665":"markdown","699b7a98":"markdown","c316364c":"markdown","55018959":"markdown","620c8317":"markdown","e7856157":"markdown","811d6285":"markdown","9c5bff07":"markdown"},"source":{"b80461af":"# Import libraries -> Statistics\nimport pandas as pd\nimport numpy as np\nimport missingno\nimport fuzzywuzzy\nfrom fuzzywuzzy import process\nimport collections\n\n# Import libraries -> Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\n\n# Import libraries -> Hypothesis testing\nfrom scipy.stats import shapiro\nfrom scipy.stats import mannwhitneyu\n\n%matplotlib inline","ece0b6ba":"# Reading data\ndf = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head(7)","3a3eb260":"df.tail(7)","b81819e9":"df.describe().T","c496b0fa":"df.info()","0b841bf9":"# Let's look at the dimension of the data\nprint(f'This Dataset contain {df.shape[0]} records and {df.shape[1]} columns.')","858aef13":"print(f'This Columns in this Dataset are :{df.columns.tolist()}')","8dc05ca9":"# Let's deduce data types\nprint(df.dtypes)","297ae862":"# Deal with duplicate data\ndf.tail(7)","04dd6135":"# Remove duplicates and check how many books are left in the data\ndf = df.drop_duplicates(subset='Name', keep='last')\ndf","44344482":"# Delete the year column\ndel df['Year']","ee775864":"df.Genre.value_counts()","0eb24f6a":"# Visualize\n\ndf[\"Genre\"].value_counts().plot(kind=\"bar\", color=[\"pink\", \"blue\"])","831b82b0":"# Change the data type\ndf.Genre = df.Genre.astype('category')","8da0edb5":"# Cheacking for missing values\ndf.isnull().sum()","d28ef8da":"# Forming categorical columns\ncat_col = list(df.select_dtypes(exclude=('int', 'float')).columns)\nprint(f'\u0421ategorical Columns: {\", \".join(cat_col)}.')","d33a4bf5":"# Check for duplicate data\nfor col in cat_col:\n    if df[col].duplicated().any() == True:\n        print (f'Column {col} has duplicate data.')\n    else:\n        print (f'Column {col} does have duplicate data.')","26ef3e1b":"# Check for spelling errors in entire dataset\nfor col in cat_col:\n    print(f'Actual {col}: \"{len(set(df[col]))}\" - After Spell Check {col}: \"{len(set(df[col].str.title().str.strip()))}\"')","cce13a9c":"# Correct the errors\ndf.Name = df.Name.str.title().str.strip()","9d2897ac":"# Check if the changes have passed\nfor col in cat_col:\n    print(f'Actual {col}: \"{len(set(df[col]))}\" - After Spell Check {col}: \"{len(set(df[col].str.title().str.strip()))}\"')","eac7c0bf":"# Check for spelling errors in Author column\nauthors = df.Author.sort_values().unique()\nauthors","9daba85b":"# Let's build a list of the most similar spellings for the first Author with this error\nmatches_author_name = fuzzywuzzy.process.extract('George R.R. Martin', authors, limit=4, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nmatches_author_name","04c82125":"# Let's build a list of the most similar spellings for the second Author with this error\nmatches_author_name = fuzzywuzzy.process.extract('J. K. Rowling', authors, limit=4, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nmatches_author_name","072a0866":"# Replace the names of the Authors with the correct ones\ndf = df.replace('George R. R. Martin', 'George R.R. Martin')\ndf = df.replace('J. K. Rowling', 'J.K. Rowling')","e13c4a1d":"# Check if the changes have passed\nfor col in cat_col:\n    print(f'Before {col}: {len(set(df[col]))} After {col}: {len(set(df[col].str.title().str.strip()))}')","9cea2a98":"# Author with the highest entries\nprint(f'Author with the most entries for different books: `{df.Author.sort_values().max()}`')","af4c4a6e":"# Analysis -> Best Authors by User Rating\nbest_sellers = df[df['User Rating'].values == 4.9]\nbest_sellers = best_sellers.groupby('Author')[['User Rating']].mean().sort_values('User Rating', ascending=False).reset_index()\n\n# Visualize \nsns.set_theme(style=\"darkgrid\")\nsns.set(rc = {'figure.figsize': (12, 8)})\nax = sns.barplot(x=\"User Rating\", y=\"Author\", data=best_sellers, color=\"teal\")\\\n                .set(title=\"Authors with a Rating equal to 4.9(Highest Rating)\", ylabel=None)","0d407efd":"# Analysis -> Best Books by User Rating\nbest_books = df[df['User Rating'].values == 4.9]\nbest_books = best_books.groupby('Name')[['User Rating']].mean().sort_values('User Rating', ascending=False).reset_index()\n\n# Visualize\nsns.set(rc = {'figure.figsize': (12, 8)})\nax = sns.barplot(x=\"User Rating\", y=\"Name\", data=best_books, color=\"salmon\")\\\n                .set(title=\"Books with a Rating equal to 4.9(Highest Rating)\", ylabel=None)","63b8c37e":"# Analysis -> Books by most reviews\nmost_reviews = df[df['Reviews'].values > 40000]\nmost_reviews = most_reviews.groupby('Name')[['Reviews']].sum().sort_values('Reviews', ascending=False).reset_index()\n\n# Visualize\nsns.set(rc = {'figure.figsize': (8, 4)})\nax = sns.barplot(x=\"Reviews\", y=\"Name\", data=most_reviews, color=\"teal\")\\\n                .set(title=\"Books with more than 40000 reviews\", ylabel=None)","bfa803b9":"# Analysis -> Books by expense\nmost_worth = df.groupby('Name')[['Price']].sum().sort_values('Price', ascending=False).head(10).reset_index()\n\n# Visualize\nsns.set(rc = {'figure.figsize': (8, 4)})\nax = sns.barplot(x=\"Price\", y=\"Name\", data=most_worth, color=\"salmon\")\\\n                .set(title=\"10 most Valuable Books\", ylabel=None)","3874451f":"# Analysis -> Books by Genres\nbooks_by_genre = df.groupby('Genre')[['Name']].count()\\\n                                             .sort_values('Name', ascending=False)\\\n                                             .head(10)\\\n                                             .reset_index()\n\n# Visualize\n\ndf[\"Genre\"].value_counts().plot(kind=\"bar\", color=[\"pink\", \"blue\"]).set_title(\"Genre Distribution\")","fccd0fe9":"# Displaying measures of the central trend of The Price\ndf[\"Price\"].describe()","93a2fd0d":"# Building a correlation matrix and building a correlation matrix and visualizing relationships\ndf.corr()","26eba56a":"# Correlation Matrix\ncorr = df.corr()\nfig, ax = plt.subplots(figsize = (8, 6))\nax = sns.heatmap(corr,\n                annot=True,\n                linewidths=0.5,\n                fmt=\".2f\",\n                cmap=\"YlGnBu\");\nbottom, top = ax.get_ylim()","1654e64c":"sns.scatterplot(data=df, x=\"Price\", y=\"Reviews\", hue=\"Genre\")","c8ac4833":"sns.scatterplot(data=df, x=\"Price\", y=\"User Rating\", hue=\"Genre\")","9abf600a":"sns.scatterplot(data=df, x=\"Reviews\", y=\"User Rating\", hue=\"Genre\")","9a7586fd":"# Encode Genre column to perform hypothesis testing\ndf[\"Genre\"] = df[\"Genre\"].replace({\"Fiction\": 1, \"Non Fiction\": 0})\ndf.head(3)","7e4aa30b":"# Generate samples to test\nnon_fiction = df[df['Genre'] == 0]['Price']\nfiction = df[df['Genre'] == 1]['Price']","30ea2d31":"# Set the alpha level\nalpha=0.5\n\n# We pass groups to the criterion for testing using the nonparametric Mann-Whitney test.\nstat, pval = mannwhitneyu(non_fiction, fiction)\n\nprint('Statistic:', f'{stat:.3f}')\nprint('P-Value:', f'{pval:.20f}')\n \n# Checking the condition for accepting or rejecting H0\nif pval > alpha:\n    print('Accept Null Hypothesis - Hmm, Such a relationship exists.')\nif pval < alpha:\n    print('Reject Null Hpothesis - Nahh, No such thing.')","aba88286":"> Take care of spelling error encountered","7faad4ba":"## Sections In Report:\n\n- Brief description of the data set and a summary of its attributes\n- Initial plan for data exploration\n- Actions taken for data cleaning and feature engineering\n- Key Findings and Insights, which synthesizes the results of Exploratory Data Analysis in an insightful and actionable manner\n- Formulating hypothesis about this data\n- Conducting a formal significance test for one of the hypotheses and discuss the results \n- Suggestions for next steps in analyzing this data\n- A paragraph that summarizes the quality of this data set and a request for additional data if needed","ffc58320":"### Dataset Description & Summary of attributes\nThis section performs exploratory data analysis.","61df5a26":"> Observe that there are duplicate data in the dataset with different years, we will deal with that when we start Feature Cleaning","0117c49a":"### Important necessary libraries\n\npandas, numpy, matplotlib, fuzzywuzzy(for values replacement), missingno(deal with missing values), scipy(for hypothesis thesis)\n","7fb04c50":"    Diagnostic And Statistical Manual Of Mental Disorders, 5th Edition is the most valuable bestseller","fd38973d":"> We are going to remove all duplicated rows save the last one as it is the most recent","21283808":"> The data has no missing values, so no further transformations are required.","981dc6e7":"### Observations:\n    - The highest positive correlation can be seen between The Number of reviews written and the Year.\n    - There exists no positive or negative linear relationship between the rating, reviews and the price of books.\n    - A negative relationship exits between the Price of the Bestseller and the Year","d21b417b":"    Non-fiction is more likely to become a bestseller.","bb91cb33":"### Exploratory Data Analysis\nThe dataset contains 350 different books written by 246 authors. All books are presented in two categories (Non Fiction, Fiction).","12d22a89":"### Hypothesis Testing - Does the Genre of the Book drive it's Price?\n\n    Null Hypothesis :- There exists a relationship between The price and the Genre where the genre determines the Price\n\n    Alternative Hypothesis :- No relationship exits between Genres and Price in which the Genre determines the Price\n","94781665":"<b>INSIGHT:<\/b>\n\n    As a result of the testing, It is observed that the Genre of the Book has no definitive impact in the price at which it is sold.","699b7a98":">Alice Schertle, Jill Twiss, Sarah Young, Nathan W. Pyle, Patrick Thorpe, Eric Carle, Emily Winfield Martin, Chip Gaines,  Rush Limbaugh, Sherri Duskey Rinker,  Pete Souza, Lin-Manuel Miranda, Bill Martin Jr., Dav Pilkey all have an average rating of 4.9.","c316364c":"### Summary\n\n    - During the E.D.A, Authors that received the highest ratings from readers were established alongside the Author with the most Bestsellers (look out for Zhi Gang Sha) and the most Valuable Books in terms of Price ( I see you Stats \ud83d\ude0a), High Reviews and high Ratings.\n    - The Analysis also established that Non-Fiction is the fan's favorite over the years and is more likely to be a bestseller according to Amazon (This is your chance - Creatives).\n    - Also the fact that the Genre of the book drives the price is not valid according to Statistical Testing.\n    \n    More data can also be gathered to improve this Analysis, although would not significantly improve the results established.","55018959":"### Data Cleaning and Feature Engineering\n\nData contains 3 categorical columns and 4 columns contains numeric values. Let's convert the genre to the category data type, leaving the year as a number.","620c8317":"It is observed that:\n- There are books that cost much higher than the mean Price\n- There are books which cost nothing.","e7856157":"> Observe that names with initial have a tendency to be in different varaiations. <br>\n<b>George R. R. Martin<\/b> and <b>J. K. Rowling<\/b> fall into this category.","811d6285":"### Load data","9c5bff07":"<p style=\"font-family: Arials, sans-serif; font-size: 14px; color: rgba(0,0,0,.7)\">Let's check if there are the same author names but with different spellings.<\/p>"}}