{"cell_type":{"668510fb":"code","a3bbbc2a":"code","ee5cd85a":"code","7980553a":"code","e160a4b1":"code","c18aadaa":"markdown","faa9feb6":"markdown","63398e82":"markdown"},"source":{"668510fb":"# import dependencies\nimport os\nimport subprocess\nimport shutil","a3bbbc2a":"def video_process(source_dir_path, dst_dir_path, types, img_ext, maxSize=1024):\n    if not os.path.exists(dst_dir_path):\n        os.makedirs(dst_dir_path)\n\n    # check that video formats equal types \n    for file_name in os.listdir(source_dir_path):\n        for type in types:\n            if type not in file_name:\n                continue\n\n        name, ext = os.path.splitext(file_name)\n    \n        video_file_path = os.path.join(source_dir_path, file_name)\n\n        # skip large files\n        # if os.path.getsize(video_file_path) > maxSize * 1000:\n        #\tcontinue\n        \n        # get frames\n        cmd = 'ffmpeg -i \\\"{}\\\" -qscale:v 2 \\\"{}\/{}_%d.{}\\\"'.format(video_file_path, dst_dir_path, name, img_ext)\n\n        print(cmd)\n        subprocess.call(cmd, shell=True)\n        print('\\n')","ee5cd85a":"# create destination folder for images\nimg_ext = 'png'\ndst_dir_path = f'\/kaggle\/working\/{img_ext}_from_mp4\/'\nos.makedirs(dst_dir_path, exist_ok=True)\n\n# source folder with videos\nsource_dir_path = '..\/input\/nfl-health-and-safety-helmet-assignment\/test'\n\n# allowed video types \ntypes = ['.mp4']\n\n# convert\nvideo_process(source_dir_path, dst_dir_path, types, img_ext)","7980553a":"import cv2\nimport os\n\nvideo_name = 'video.mp4'\nvideo_dir_path = f'\/kaggle\/working\/mp4_from_{img_ext}\/'\nos.makedirs(video_dir_path, exist_ok=True)\n\nframe_rate = 38 \n\n# get only frames for 57995_000109_Endzone_ video\nimages = [img for img in os.listdir(dst_dir_path) if img.startswith(\"57995_000109_Endzone_\")]\n\n# need to sort images to create video from this sorted list\nsorted_images = [''] * len(images)\nfor im in images:\n    filename, _ = os.path.splitext(im.split('_')[-1])\n    sorted_images[int(filename) - 1] = im","e160a4b1":"# get image size\nframe = cv2.imread(os.path.join(dst_dir_path, images[0]))\nheight, width, layers = frame.shape\n\n# create video\nvideo = cv2.VideoWriter(os.path.join(video_dir_path, video_name), cv2.VideoWriter_fourcc(*'DIVX'), frame_rate, (width,height))\n\nfor image in sorted_images:\n    video.write(cv2.imread(os.path.join(dst_dir_path, image)))\n\nvideo.release()","c18aadaa":"## Convert back from PNG to MP4","faa9feb6":"<p style='text-align: center;'><span style=\"color: #000508; font-family: Segoe UI; font-size: 2.5em; font-weight: 350;\"> Convert MP4 to JPG or PNG<\/span><\/p>\n\n<span style=\"color: #000508; font-family: Segoe UI; font-size: 1.3em; font-weight: 350;\">This script will be useful for you during inference on test videos.<\/span><br>","63398e82":"<span style=\"color: #027fc1; font-family: Segoe UI; font-size: 1.9em; font-weight: 350;\">Thank you for attention!<\/span>\n<br>\n<span style=\"color: #000508; font-family: Segoe UI; font-size: 1.3em; font-weight: 350;\">If you have some questions or suggestions you can write them on comments \ud83d\udcac<\/span><br>\n\n<span style=\"color: #027fc1; font-family: Segoe UI; font-size: 1.7em; font-weight: 350;\">Good luck! \ud83d\udcaa<\/span>\n<br>"}}