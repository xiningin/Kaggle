{"cell_type":{"186e4332":"code","15be9c85":"code","8c86cff4":"code","19470cbf":"code","6ca7137d":"code","570795fd":"code","b2b2dac1":"code","8e121431":"code","e1af1682":"code","9a1a7ada":"code","fac4b08c":"markdown","52de5a49":"markdown","7c1cdd15":"markdown","7adeeac8":"markdown","636b0639":"markdown","da9daae8":"markdown","78779d06":"markdown","517e6f45":"markdown","bbea582b":"markdown"},"source":{"186e4332":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","15be9c85":"dataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')\nX = dataset.iloc[:, [2,3]].values\ny = dataset.iloc[:, 4].values","8c86cff4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","19470cbf":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","6ca7137d":"from sklearn.linear_model import LogisticRegression\nclassifier= LogisticRegression(random_state=0)\nclassifier.fit(X_train,y_train)\n","570795fd":"y_pred=classifier.predict(X_test)\nprint(y_pred)","b2b2dac1":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\n","8e121431":"from sklearn.metrics import accuracy_score\nacc=accuracy_score(y_test, y_pred)\nprint(acc)","e1af1682":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","9a1a7ada":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()\n\n","fac4b08c":" Visualising the Training set results\n","52de5a49":" Visualising the Test set results\n","7c1cdd15":" Feature Scaling","7adeeac8":"confusion_matrix","636b0639":"Splitting the dataset into the Training set and Test set","da9daae8":"Predicting a new result","78779d06":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","517e6f45":"importing dataset to x and y","bbea582b":"fitting model"}}