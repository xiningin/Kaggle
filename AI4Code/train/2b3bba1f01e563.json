{"cell_type":{"5e3d943f":"code","3f28afa4":"code","c44bb8d1":"code","79084f38":"code","15f3fc73":"code","e7fd324c":"code","d00bd93a":"code","679dda89":"code","7a633b92":"code","9bc91235":"code","a39c440d":"code","9fc3582e":"code","60f3d748":"code","3190512a":"code","f9a91ae2":"code","62722780":"code","3351433c":"code","22d3382c":"code","34b17781":"code","26d28183":"code","6e779eab":"code","b411fdd4":"code","b17dad4f":"code","4b8670fe":"code","6489fefa":"code","26cb97cd":"code","025fb1d7":"code","878c577d":"code","e0dd790c":"code","069d44d1":"code","7d9b5973":"code","1e9ab106":"code","bad9be96":"markdown","dd19ae1f":"markdown"},"source":{"5e3d943f":"import pandas as pd\nimport numpy as np\nimport plotly\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sb\nimport missingno as mno\n\n%matplotlib inline","3f28afa4":"netflix_df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv', index_col = False)","c44bb8d1":"netflix_df.head()","79084f38":"mno.matrix(netflix_df)","15f3fc73":"netflix_df.info()","e7fd324c":"netflix_df.columns","d00bd93a":"# removing show_id because it provides no insights and also removing director and cast becuase of high NaN\nclean_df = netflix_df.drop(['show_id','director','cast'], axis = 1)","679dda89":"clean_df.info()","7a633b92":"clean_df['year'] = pd.DatetimeIndex(clean_df['date_added']).year.fillna(2009).astype('object')\n# filling 10 NaN values from TV Shows to 2009 which was a year that actually had 0 TV Shows added\nclean_df.info()","9bc91235":"movies = clean_df.loc[clean_df.type == 'Movie']","a39c440d":"tv_shows = clean_df.loc[clean_df.type == 'TV Show']","9fc3582e":"tv_country = tv_shows['country'].value_counts()[tv_shows['country'].value_counts(normalize=True)>0.005]\ntv_country_list = list(tv_country.index)","60f3d748":"plt.figure(figsize = (30,15))\nplt.title('TV Show count per Country', fontsize=22)\nplt.tick_params(labelsize = 16)\nsb.barplot(y = tv_country.index, x = tv_country.values, palette=\"Blues_d\")\nsb.set_style('white')\nplt.show","3190512a":"movie_country = movies['country'].value_counts()[movies['country'].value_counts(normalize=True)>0.005]\nmovie_country_list = list(movie_country.index)","f9a91ae2":"plt.figure(figsize = (30,15))\nplt.title('Movie count per Country', fontsize=22)\nplt.tick_params(labelsize = 16)\nsb.barplot(y = movie_country.index, x = movie_country.values, palette=\"Oranges_d\")\nsb.set_style('white')\nplt.show","62722780":"# number of tv shows\ntv_shows['type'].value_counts()","3351433c":"# number of movies\nmovies['type'].value_counts()","22d3382c":"# removing 'min' from duration so I can use as numeric and average\nmovies['duration'] = movies['duration'].replace({'min':''}, regex=True)","34b17781":"movies['duration'] = pd.to_numeric(movies['duration'])","26d28183":"tvrelease_year = tv_shows['release_year'].value_counts().sort_index()\nprint(tvrelease_year.head())\nmovierelease_year = movies['release_year'].value_counts().sort_index()\nprint(movierelease_year.head())","6e779eab":"plt.figure(figsize = (16, 5))\nsb.set_style('darkgrid')\nplt.plot(tvrelease_year.index, tvrelease_year.values, color = 'b', label = 'TV Shows')\nplt.plot(movierelease_year.index, movierelease_year.values, color = 'orange', label = 'Movies')\n\n# showing the drop-off in production during 2020 due to COVID\nplt.axvline(x = 2020, color = 'salmon', label = 'COVID-19')\n\nplt.xticks(list(range(1925, 2022, 4)), fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.title('TV Shows and Movies per year', fontsize = 18)\nplt.xlabel('Year', fontsize = 14)\nplt.ylabel('Release Count', fontsize = 14)\nplt.legend()\nplt.show","b411fdd4":"tv_added = tv_shows['year'].value_counts().sort_index()\nmovie_added = movies['year'].value_counts().sort_index()","b17dad4f":"plt.figure(figsize = (16, 5))\nsb.set_style('darkgrid')\nplt.plot(tv_added.index, tv_added.values, color = 'b', label = 'TV Shows added')\nplt.plot(movie_added.index, movie_added.values, color = 'orange', label = 'Movies added')\n\n# showing the drop-off in production during 2020 due to COVID\nplt.axvline(x = 2020, color = 'salmon', label = 'COVID-19')\n\nplt.xticks(list(range(2008, 2022, 1)), fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.title('TV Shows and Movies added per year', fontsize = 18)\nplt.xlabel('Year', fontsize = 14)\nplt.ylabel('Content added count', fontsize = 14)\nplt.legend()\nplt.show","4b8670fe":"# df for release year and duration\nrel_dur = movies[['release_year','duration']]","6489fefa":"# average duration per release year\navg_dur = rel_dur.groupby(pd.Grouper(key='release_year')).mean()\navg_dur = avg_dur.sort_index()","26cb97cd":"plt.figure(figsize = (16, 5))\nsb.set_style('white')\nplt.plot(avg_dur.index, avg_dur.values, color = 'green', label = 'Movie Duration')\n\nplt.xticks(list(range(1940, 2022, 4)), fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.title('Average Movie Duration since 1943', fontsize = 18)\nplt.xlabel('Year', fontsize = 14)\nplt.ylabel('Average Duration', fontsize = 14)\nplt.legend()\nplt.show","025fb1d7":"# rating df with all ratings as individual columns\nrat_df = movies[['country', 'rating']]\nrat_df.dropna()\nrat_df.loc[:,'TV-MA'] = np.where(rat_df['rating']=='TV-MA', 1, 0)\nrat_df.loc[:,'TV-14'] = np.where(rat_df['rating']=='TV-14', 1, 0)\nrat_df.loc[:,'R'] = np.where(rat_df['rating']=='R', 1, 0)\nrat_df.loc[:,'TV-PG'] = np.where(rat_df['rating']=='TV-PG', 1, 0)\nrat_df.loc[:,'PG-13'] = np.where(rat_df['rating']=='PG-13', 1, 0)\nrat_df.loc[:,'PG'] = np.where(rat_df['rating']=='PG', 1, 0)\nrat_df.loc[:,'TV-Y'] = np.where(rat_df['rating']=='TV-Y', 1, 0)\nrat_df.loc[:,'TV-G'] = np.where(rat_df['rating']=='TV-G', 1, 0)\nrat_df.loc[:,'TV-Y7'] = np.where(rat_df['rating']=='TV-Y7', 1, 0)\nrat_df.loc[:,'NR'] = np.where(rat_df['rating']=='NR', 1, 0)\nrat_df.loc[:,'G'] = np.where(rat_df['rating']=='G', 1, 0)\nrat_df.loc[:,'Total'] = rat_df.sum(numeric_only=True, axis=1)","878c577d":"# grouping country to sum each rating\nrat_country = rat_df.groupby(pd.Grouper(key='country')).sum()","e0dd790c":"rat_country = rat_country.sort_values(by=['Total'], ascending = False)\n# top 20 countries and their ratings\nrat_country[:20]","069d44d1":"# percent of ratings per country\nper_country = rat_country\nper_country['TV-MA'] = (rat_country['TV-MA']\/rat_country['Total'])\nper_country['TV-14'] = (rat_country['TV-14']\/rat_country['Total'])\nper_country['R'] = (rat_country['R']\/rat_country['Total'])\nper_country['TV-PG'] = (rat_country['TV-PG']\/rat_country['Total'])\nper_country['PG-13'] = (rat_country['PG-13']\/rat_country['Total'])\nper_country['PG'] = (rat_country['PG']\/rat_country['Total'])\nper_country['TV-Y'] = (rat_country['TV-Y']\/rat_country['Total'])\nper_country['TV-G'] = (rat_country['TV-G']\/rat_country['Total'])\nper_country['TV-Y7'] = (rat_country['TV-Y7']\/rat_country['Total'])\nper_country['NR'] = (rat_country['NR']\/rat_country['Total'])\nper_country['G'] = (rat_country['G']\/rat_country['Total'])\nper_country['Total'] = 1","7d9b5973":"per_country[:20]","1e9ab106":"labels = per_country.index[:15]\n\nfig, ax = plt.subplots()\n\nax.bar(labels, per_country['Total'][:15], .6, label=\"Total\")\nax.bar(labels, per_country['TV-MA'][:15], .6, label='TV-MA')\nax.bar(labels, per_country['TV-14'][:15], .6, label='TV-14')\nax.bar(labels, per_country['R'][:15], .6, label='R')\nax.bar(labels, per_country['TV-PG'][:15], .6, label='TV-PG')\nax.bar(labels, per_country['PG-13'][:15], .6, label='PG-13')\nax.bar(labels, per_country['PG'][:15], .6, label='PG')\nax.bar(labels, per_country['TV-Y'][:15], .6, label='TV-Y')\nax.bar(labels, per_country['TV-G'][:15], .6, label='TV-G')\nax.bar(labels, per_country['TV-Y7'][:15], .6, label='TV-Y7')\nax.bar(labels, per_country['NR'][:15], .6, label='NR')\nax.bar(labels, per_country['G'][:15], .6, label='G')\n\n\nax.set_ylabel('Counts', fontsize = 18)\nax.set_xlabel(\"Countries\", fontsize = 18)\nplt.yticks(fontsize = 14)\nplt.xticks(fontsize = 16, rotation = 70)\nax.set_title('Movie rating per country', fontsize = 24)\nax.legend()\n\nplt.gcf().set_size_inches(20,10)\nplt.show()","bad9be96":"## Final Thoughts:\nGiven the Covid-19 pandemic it seems like Netflix worked to bring more TV-Shows to their audience, while there was an obvious drop in 2020 productions released.  \nIt is always interesting to see the drop off in movie duration over the years as well, and it seems to still be trending downwards.  \nNo surprise that the U.S leads in production, it was very cool to see how the ratings spit up between the countries,  where the U.S was heavy in TV-MA but fairly spread out between other ratings where other countries like Spain had 83% of their movies were rated TV-MA.","dd19ae1f":"## Netlfix Exploratory Data Analysis\n![netflix](https:\/\/www.popsci.com\/resizer\/O1PqrHRUbBYvZnwQKq0mW2DOiU0=\/2068x1552\/arc-anglerfish-arc2-prod-bonnier.s3.amazonaws.com\/public\/AUSBJ7SDRWXMD7VXVNJASUT6ME.jpg)"}}