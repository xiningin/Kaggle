{"cell_type":{"5a2581bb":"code","8054ffb9":"code","246727f8":"code","5251da88":"code","37b62c06":"code","b1312d9a":"code","0710bd9c":"code","a4e2dcf1":"code","804bdffe":"code","9b4a0b80":"code","c32ef39e":"code","e7d576c2":"code","6edcd744":"code","e776d15e":"code","fad6f528":"code","91ef62e6":"code","4facf52c":"code","bd0113d1":"code","809845ab":"code","a5d04eb5":"code","f7fecdbf":"code","ef55fce7":"code","6d605c06":"code","dbd59a62":"code","aedbd177":"code","756250c5":"code","e4305d0e":"code","9a9a461b":"code","f06959c0":"code","97c2a68d":"code","bad8f16b":"code","50d66a42":"markdown","bff0844f":"markdown","dfe4088a":"markdown","3b253244":"markdown","a07646a3":"markdown"},"source":{"5a2581bb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import style\nstyle.use(\"fivethirtyeight\")","8054ffb9":"data = pd.read_csv(r\"..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")","246727f8":"data.shape","5251da88":"data.head()","37b62c06":"data.info()","b1312d9a":"missing = 100 * data.isna().sum().sort_values(ascending=False) \/ data.shape[0]\nmissing.plot(kind='bar', color=\"mediumspringgreen\", figsize=(17,8))\nplt.title(\"\\nPercentages of Missing Values\\n\\n\")\nplt.show()","0710bd9c":"for col in data.columns:\n    print(f\"\\n\\nNumber of unique values in {col}:\\n\")\n    print(len(data[col].unique()))","a4e2dcf1":"data.drop(\"enrollee_id\", axis=1, inplace=True)","804bdffe":"data_one = data[data[\"target\"]==1]\nd = {}\nfor city in data[\"city\"].unique():\n    d[city] = 100 * data_one[data_one[\"city\"]==city].shape[0] \/ data[data[\"city\"]==city].shape[0]","9b4a0b80":"d","c32ef39e":"plt.figure(figsize=(18,8))\nplt.bar(x=d.keys(), height=d.values())\nplt.xticks(ticks=[])\nplt.show()","e7d576c2":"for i in range(data.shape[0]):\n    city = data.loc[i,\"city\"]\n    data.loc[i,\"city\"] = d[city]","6edcd744":"fig, axes = plt.subplots(nrows=2, ncols=1, figsize=(20,16))\nsns.histplot(x=\"training_hours\", data=data, ax=axes[0])\nsns.histplot(x=\"city_development_index\", data=data, ax=axes[1])\nplt.show()","e776d15e":"for col in data.columns:\n    data[col].fillna(data[col].mode()[0], inplace=True)","fad6f528":"data.isna().sum()","91ef62e6":"data.head()","4facf52c":"from sklearn.preprocessing import LabelEncoder\nenc = LabelEncoder()","bd0113d1":"for col in data.columns:\n    data[col] = enc.fit_transform(data[col])","809845ab":"data.head()","a5d04eb5":"x = data.drop(\"target\", axis=1)\ny = data[\"target\"]","f7fecdbf":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","ef55fce7":"xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.1)","6d605c06":"ss = StandardScaler()\nss.fit(xtrain)\nxtrain = ss.transform(xtrain)\nxtest = ss.transform(xtest)","dbd59a62":"from sklearn.tree import DecisionTreeClassifier","aedbd177":"tree = DecisionTreeClassifier()","756250c5":"tree.fit(xtrain, ytrain)\nypred_train = tree.predict(xtrain)\nypred_test = tree.predict(xtest)","e4305d0e":"from sklearn.metrics import classification_report","9a9a461b":"print(\"Training Results:\\n\")\nprint(classification_report(ytrain, ypred_train))\nprint(\"\\n\\nTesting Results:\\n\")\nprint(classification_report(ytest, ypred_test))","f06959c0":"tree = DecisionTreeClassifier()\ntree.fit(xtrain, ytrain)\nypred_tr = tree.predict(xtrain)\nypred_ts = tree.predict(xtest)\nprint(\"Training Results:\\n\")\nprint(classification_report(ytrain, ypred_tr))\nprint(\"\\n\\nTesting Results:\\n\")\nprint(classification_report(ytest, ypred_ts))","97c2a68d":"from sklearn.ensemble import RandomForestClassifier","bad8f16b":"forest = RandomForestClassifier(max_samples=0.01)\nforest.fit(xtrain, ytrain)\nypred_tr = forest.predict(xtrain)\nypred_ts = forest.predict(xtest)\nprint(\"Training Results:\\n\")\nprint(classification_report(ytrain, ypred_tr))\nprint(\"\\n\\nTesting Results:\\n\")\nprint(classification_report(ytest, ypred_ts))","50d66a42":"![Pr%C3%A9sentation%20sans%20titre%20%2810%29.png](attachment:Pr%C3%A9sentation%20sans%20titre%20%2810%29.png)","bff0844f":"![tree%20tuning.png](attachment:tree%20tuning.png)","dfe4088a":"# Random Forest Hyperparameter-Tuning","3b253244":"# Decision Tree Hyperparameter-Tuning","a07646a3":"# Decision Tree & Random Forest Optimization\n\nThis is a tutorial I presented as a Data Science \/ Machine Learning instructor at Google Develepor Student Club Enet'Com, Tunisia."}}