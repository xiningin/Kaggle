{"cell_type":{"36086730":"code","de0bab71":"code","2e71869b":"code","a51fa2a5":"code","e094114f":"code","2ef909a0":"code","ff1d962e":"code","4d68ebdc":"code","dee296ae":"code","7a933e00":"code","ba4d7608":"code","93e34bdc":"code","6611b7a9":"markdown","ec96bf94":"markdown"},"source":{"36086730":"#Importing packages\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os","de0bab71":"#Loading the dataset\ndata = pd.read_csv(\"..\/input\/cardiovascular-disease-dataset\/cardio_train.csv\",sep=\";\")\ndata.head()","2e71869b":"data.shape","a51fa2a5":"data.describe()","e094114f":"data.info()","2ef909a0":"data.isnull().sum()","ff1d962e":"# Add 'overweight' column\ndata['overweight'] = np.where((data['weight']\/((data['height']\/100)**2)) > 25, 1, 0)\ndata.head()","4d68ebdc":"# Normalize data by making 0 always good and 1 always bad. \n#If the value of 'cholestorol' or 'gluc' is 1, make the value 0. If the value is more than 1, make the value 1.\ndata['cholesterol'] = np.where(data['cholesterol']==1,0,1)\ndata['gluc'] = np.where(data['gluc']==1,0,1)\ndata.head()","dee296ae":"# Draw Categorical Plot\ndef draw_cat_plot():\n    # Create DataFrame for cat plot using `pd.melt` \n    #using just the values from 'cholesterol', 'gluc', 'smoke', 'alco', 'active', and 'overweight'.\n    data_cat = pd.melt(data,value_vars = ['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'],\n                       id_vars=['cardio'])\n\n    # Group and reformat the data to split it by 'cardio'. Show the counts of each feature.\n    #You will have to rename one of the columns for the catplot to work correctly.\n    data_cat = pd.DataFrame(data_cat.groupby(['variable', 'value', 'cardio'])['value']\n                          .count()).rename(columns={'value': 'total'}).reset_index()    \n\n    # Draw the catplot with 'sns.catplot()'\n    fig = plt.figure(figsize=(8,8))\n    sns.catplot(data = data_cat, x='variable', y='total', hue='value', col='cardio', kind=\"bar\")\n\n    # saving the png image\n    fig.savefig('catplot.png')\n    return fig","7a933e00":"draw_cat_plot()","ba4d7608":"# Draw Heat Map\ndef draw_heat_map():\n    # Clean the data\n    data_heat = data[(data['ap_lo'] <= data['ap_hi']) & \n                    (data['height'] >= data['height'].quantile(0.025)) &\n                    (data['height'] <= data['height'].quantile(0.975)) &\n                    (data['weight'] >= data['weight'].quantile(0.025)) & \n                    (data['weight'] <= data['weight'].quantile(0.975))]\n\n    # Calculate the correlation matrix\n    corr = data_heat.corr()\n\n    # Generate a mask for the upper triangle\n    mask = np.zeros_like(corr, dtype=np.bool)\n    mask[np.triu_indices_from(mask)] = True\n\n    # Set up the matplotlib figure\n    fig, ax = plt.subplots(figsize=(11,9))\n\n    # Draw the heatmap with 'sns.heatmap()'\n    sns.heatmap(corr, annot=True, fmt='.1f', mask=mask, vmax=.3, center=0,\n              square=True, linewidths=.9, cbar_kws={\"shrink\": .5})\n\n    # saving the png image\n    fig.savefig('heatmap.png')","93e34bdc":"draw_heat_map()","6611b7a9":"No features have any missing values.","ec96bf94":"Dataset contains 70000 records with 12 features."}}