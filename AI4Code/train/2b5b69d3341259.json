{"cell_type":{"e66a12ee":"code","fb459fe9":"code","fe732eba":"code","e3d54171":"code","16e5196d":"code","1c6f7a20":"code","b77257f3":"code","a129e36f":"code","621215ca":"code","9f4102bb":"code","239a414b":"code","6b88b2c8":"code","dd62ee56":"code","bffeed43":"code","f69e1444":"code","351fb5ea":"code","e0da640b":"code","28d59ff6":"code","df862d52":"code","31766470":"code","8dc4f172":"code","4dfddd7d":"code","17176a64":"code","4ac1b310":"code","d1de336c":"code","f6c53bfd":"code","3f331554":"code","1c0fe07c":"code","d2a30372":"code","5fe21af0":"code","21f3095f":"code","15541418":"code","c729e8da":"code","a377ecf8":"code","08f348aa":"code","67258fb9":"code","b5b0dba0":"code","0a0924d9":"code","9fde1590":"markdown","cb7e8e61":"markdown","2fb82ddf":"markdown","fba903a7":"markdown","d83138e6":"markdown","621755ea":"markdown","71adf0d6":"markdown"},"source":{"e66a12ee":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nfrom sklearn import metrics\nimport statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score,classification_report\nfrom imblearn.combine import SMOTETomek","fb459fe9":"us=pd.read_csv(\"\/kaggle\/input\/heart-patients\/US_Heart_Patients.csv\")\nus.head()","fe732eba":"us.info()","e3d54171":"us.isnull().sum()","16e5196d":"us=us.drop(\"education\",axis=1)","1c6f7a20":"us.shape","b77257f3":"us.dropna(subset=['BPMeds'],inplace=True)","a129e36f":"us.totChol.describe()","621215ca":"us[\"totChol\"].fillna(us[\"totChol\"].mean(),inplace=True)","9f4102bb":"us.BMI.describe()","239a414b":"us[\"BMI\"].fillna(us[\"BMI\"].mean(),inplace=True)","6b88b2c8":"us.dropna(subset=['heartRate'],inplace=True)","dd62ee56":"us.glucose.describe()","bffeed43":"us[\"glucose\"].fillna(us[\"glucose\"].mean(),inplace=True)","f69e1444":"us.dropna(subset=['cigsPerDay'],inplace=True)","351fb5ea":"us.isnull().sum()","e0da640b":"def draw_histograms(dataframe, features, rows, cols):\n    fig=plt.figure(figsize=(20,20))\n    for i, feature in enumerate(features):\n        ax=fig.add_subplot(rows,cols,i+1)\n        dataframe[feature].hist(bins=20,ax=ax,facecolor='midnightblue')\n        ax.set_title(feature+\" Distribution\",color='DarkRed')\n        \n    fig.tight_layout()  \n    plt.show()\ndraw_histograms(us,us.columns,6,3)","28d59ff6":"us.TenYearCHD.value_counts().plot.bar()\nplt.show()","df862d52":"sns.pairplot(data=us)","31766470":"us.describe()","8dc4f172":"X=us.drop(['TenYearCHD'],axis=1)\ny=us['TenYearCHD']\nprint(X.shape,y.shape)","4dfddd7d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","17176a64":"dtr=DecisionTreeClassifier(random_state=100,max_depth=4,min_samples_leaf=2)\ndtr.fit(X_train,y_train)","4ac1b310":"gini_pred=dtr.predict(X_test)","d1de336c":"gini_train=dtr.predict(X_train)","f6c53bfd":"print('accuracy for train:',accuracy_score(y_train,gini_train))\nprint('accuracy for test:',accuracy_score(y_test,gini_pred))\nprint('difference between train and test:',accuracy_score(y_train,gini_train)-accuracy_score(y_test,gini_pred))\nprint('Classification Report:\\n',classification_report(y_test,gini_pred))","3f331554":"entropy_dtr=DecisionTreeClassifier(criterion='entropy',splitter='best',random_state=100,max_depth=4,min_samples_leaf=1,min_samples_split=3)\nentropy_dtr.fit(X_train,y_train)","1c0fe07c":"entropy_pred=entropy_dtr.predict(X_test)","d2a30372":"entropy_train=entropy_dtr.predict(X_train)","5fe21af0":"print('accuracy for train:',accuracy_score(y_train,entropy_train))\nprint('accuracy for test:',accuracy_score(y_test,entropy_pred))\nprint('difference between train and test:',accuracy_score(y_train,entropy_train)-accuracy_score(y_test,entropy_pred))\nprint('Classification Report:\\n',classification_report(y_test,entropy_pred))","21f3095f":"rfc = RandomForestClassifier(random_state=42)","15541418":"import time\nnp.random.seed(42)\nstart = time.time()\n\nparam_dist = {'max_depth': [2, 3, 4],'bootstrap': [True, False],'max_features': ['auto', 'sqrt', 'log2', None],'criterion': ['gini', 'entropy']}\n\ncv_rf = GridSearchCV(rfc, cv = 10,param_grid=param_dist, n_jobs = 3)\n\ncv_rf.fit(X_train, y_train)\nprint('Best Parameters using grid search: \\n', cv_rf.best_params_)\nend = time.time()\nprint('Time taken in grid search: {0: .2f}'.format(end - start))","c729e8da":"rfc_fit=rfc.set_params(criterion = 'gini',max_features = 'auto',max_depth = 3,bootstrap=True)","a377ecf8":"rfc_fitted=rfc.fit(X_train,y_train)","08f348aa":"rfc_predict=rfc.predict(X_test)","67258fb9":"print(classification_report(y_test,rfc_predict))","b5b0dba0":"from sklearn.linear_model import LogisticRegression\nlogreg=LogisticRegression()\nlogreg.fit(X_train,y_train)\ny_pred=logreg.predict(X_test)","0a0924d9":"sklearn.metrics.accuracy_score(y_test,y_pred)","9fde1590":"## Logistic Regression","cb7e8e61":"# US Heart Patients Analysis\n","2fb82ddf":"## Splitting data into train and test","fba903a7":"## Random Forest","d83138e6":"## Data Cleaning","621755ea":"## Exploratory Data Analysis","71adf0d6":"## Decison Tree "}}