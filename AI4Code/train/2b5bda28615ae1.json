{"cell_type":{"252d154a":"code","7f0e7de6":"code","2f18274c":"code","841d667a":"code","15d92b56":"code","79c7991f":"code","9041036a":"code","3ea9308a":"code","376c62e6":"markdown","d6466ce3":"markdown"},"source":{"252d154a":"!pip install face_recognition","7f0e7de6":"import cv2\nimport numpy as np\nimport face_recognition\nimport os\nfrom datetime import datetime","2f18274c":"path = '..\/input\/training-images\/Training images'\nimages = []\nclassNames = []\nmyList = os.listdir(path)\nprint(myList)\nfor cl in myList:\n    curImg = cv2.imread(f'{path}\/{cl}')\n    images.append(curImg)\n    classNames.append(os.path.splitext(cl)[0])\nprint(classNames)","841d667a":"def findEncodings(images):\n    encodeList = []\n\n\n    for img in images:\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n        encode = face_recognition.face_encodings(img)[0]\n        encodeList.append(encode)\n    return encodeList","15d92b56":"def markAttendance(name):\n    with open('Attendance.csv', 'r+') as f:\n        myDataList = f.readlines()\n\n\n        nameList = []\n        for line in myDataList:\n            entry = line.split(',')\n            nameList.append(entry[0])\n            if name not in nameList:\n                now = datetime.now()\n                dtString = now.strftime(\"%m\/%d\/%Y,%H:%M:%S\")\n                f.writelines(f'\\n{name},{dtString}')","79c7991f":"encodeListKnown = findEncodings(images)\nprint('Encoding Complete')","9041036a":"cap = cv2.VideoCapture(0)","3ea9308a":"\nwhile True:\n    success, img = cap.read()\n\n    imgS = cv2.resize(img, (0, 0), None, 0.25, 0.25)\n    imgS = cv2.cvtColor(imgS, cv2.COLOR_BGR2RGB)\n\n    facesCurFrame = face_recognition.face_locations(imgS)\n    encodesCurFrame = face_recognition.face_encodings(imgS, facesCurFrame)\n\n    for encodeFace, faceLoc in zip(encodesCurFrame, facesCurFrame):\n        matches = face_recognition.compare_faces(encodeListKnown, encodeFace)\n        faceDis = face_recognition.face_distance(encodeListKnown, encodeFace)\n\n        matchIndex = np.argmin(faceDis)\n\n        if matches[matchIndex]:\n            name = classNames[matchIndex].upper()\n\n            y1, x2, y2, x1 = faceLoc\n            y1, x2, y2, x1 = y1 * 4, x2 * 4, y2 * 4, x1 * 4\n            cv2.rectangle(img, (x1, y1), (x2, y2), (0, 255, 0), 2)\n            cv2.rectangle(img, (x1, y2 - 35), (x2, y2), (0, 255, 0), cv2.FILLED)\n            cv2.putText(img, name, (x1 + 6, y2 - 6), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 255, 255), 2)\n            markAttendance(name)\n\n    cv2.imshow('Webcam', img)\n    cv2.waitKey(1)","376c62e6":"# **Import the required modules **","d6466ce3":"# **1. This project is inspired by Adam Geitgey,Murtaza Hassan and Krish Naik's Youtube playlist.**\n# **2. Run it in your local system.**\n# **3. I have used my personal images for training.You can use your own training images**\n# **4. Github link: https:\/\/github.com\/amlanmohanty1\/Attendance-system-using-Face-Recognition**\n"}}