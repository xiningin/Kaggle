{"cell_type":{"4afad0b2":"code","a972ce56":"code","cc38e209":"code","7044d971":"code","b81ebca7":"code","c38efa3d":"code","bf7ebb80":"code","1f7422bb":"code","a43b8d5f":"code","11b4ea9b":"code","64c6290e":"code","a4a26769":"code","5eed3da5":"code","60d110f3":"code","46552b05":"code","3ef310c5":"code","e08fc147":"code","c681a147":"code","6b6b2f76":"code","0cdbf114":"code","d6895ee5":"code","7ae7b5c2":"code","da26ef67":"code","bf840841":"code","4f16ffc0":"code","c0702f6a":"code","e71e56cc":"code","8dffb714":"code","679187c0":"code","3b5694da":"code","3c7f03ae":"code","6a0a0cac":"code","975b22f9":"code","f0211ccf":"code","521702ab":"code","1c8aaa1c":"code","14e43d59":"code","185630d6":"code","3805bd2d":"code","4794c070":"code","585a6285":"code","caf17f80":"code","42eb481e":"code","3b8c87aa":"code","e1719a24":"code","21fbff6f":"code","6406262f":"code","3d63eb87":"code","8263db02":"code","85d46e22":"code","5f228283":"code","302ee69d":"code","ef5933a9":"code","0703042d":"code","20894dc4":"code","10a7bb3e":"code","f6530e69":"markdown","298502ea":"markdown","4990dd21":"markdown","76ccfe71":"markdown","f5c93a84":"markdown","a62d1edf":"markdown","58b07033":"markdown","6071f29c":"markdown","3a20116a":"markdown","7ef3aa46":"markdown","0848ca76":"markdown","e1478e23":"markdown","f53f20b6":"markdown"},"source":{"4afad0b2":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm \nfrom matplotlib import cm\nimport seaborn as sns","a972ce56":"df_train = pd.read_csv('..\/input\/GiveMeSomeCredit\/cs-training.csv')\ndf_test = pd.read_csv('..\/input\/GiveMeSomeCredit\/cs-test.csv')\ndf_s = pd.read_csv('..\/input\/GiveMeSomeCredit\/sampleEntry.csv')","cc38e209":"df_train.head()","7044d971":"df_test.head()","b81ebca7":"print(df_train.shape)\nprint(df_test.shape)","c38efa3d":"df_train['Id'] = df_train['Unnamed: 0']","bf7ebb80":"df_train.drop('Unnamed: 0', axis=1, inplace=True)","1f7422bb":"df_train.head()","a43b8d5f":"df_test['Id'] = df_test['Unnamed: 0']","11b4ea9b":"df_test.drop('Unnamed: 0', axis=1, inplace=True)","64c6290e":"df_test.head()","a4a26769":"df_train.describe()","5eed3da5":"df_train.isnull().sum()","60d110f3":"df_train.nunique()","46552b05":"df_test.isnull().sum()","3ef310c5":"df_train['MonthlyIncome'].fillna(df_train['MonthlyIncome'].mean(),inplace=True)","e08fc147":"df_train['NumberOfDependents'].fillna(df_train['NumberOfDependents'].mode()[0], inplace=True)","c681a147":"df_test['MonthlyIncome'].fillna(df_test['MonthlyIncome'].mean(),inplace=True)","6b6b2f76":"df_test['NumberOfDependents'].fillna(df_test['NumberOfDependents'].mode()[0], inplace=True)","0cdbf114":"df_train.isnull().sum()","d6895ee5":"df_test.isnull().sum()","7ae7b5c2":"sns.countplot(x='SeriousDlqin2yrs',data=df_train)\nplt.show()","da26ef67":"f,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(df_train.corr(), annot=True, linewidths=.5, fmt= '.3f',ax=ax)\nplt.show()","bf840841":"Id = df_test['Id']","4f16ffc0":"df_train.drop('Id', axis=1, inplace=True)","c0702f6a":"df_test.drop('Id', axis=1, inplace=True)","e71e56cc":"X = df_train.drop('SeriousDlqin2yrs',axis=1)\ny = df_train['SeriousDlqin2yrs']","8dffb714":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score\nfrom sklearn.model_selection import GridSearchCV, cross_val_score, RandomizedSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier","679187c0":"X_train, X_test, y_train, y_test = train_test_split( X.values, y.values, test_size=0.2, random_state=116214 )","3b5694da":"from sklearn.model_selection import GridSearchCV, RandomizedSearchCV\nRF = RandomForestClassifier()","3c7f03ae":"param_grid = { \n           \"n_estimators\" : [9, 18, 27, 36, 100, 150],\n           \"max_depth\" : [2,3,5,7,9],\n           \"min_samples_leaf\" : [2, 4, 6, 8]}","6a0a0cac":"RF_random = RandomizedSearchCV(RF, param_distributions=param_grid, cv=5)","975b22f9":"RF_random.fit(X_train, y_train)","f0211ccf":"best_est_RF = RF_random.best_estimator_","521702ab":"print('Accuracy of classifier on training set: {:.2f}'.format(RF_random.score(X_train, y_train) * 100))\nprint('Accuracy of classifier on test set: {:.2f}'.format(RF_random.score(X_test, y_test) * 100))","1c8aaa1c":"y_pred = best_est_RF.predict_proba(X_train)\ny_pred = y_pred[:,1]","14e43d59":"from sklearn.metrics import roc_curve, auc","185630d6":"fpr,tpr,_ = roc_curve(y_train, y_pred)\nroc_auc = auc(fpr, tpr)\nplt.figure(figsize=(10,8))\nplt.title('Receiver Operating Characteristic')\nsns.lineplot(fpr, tpr, label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","3805bd2d":"df_test.drop('SeriousDlqin2yrs', axis=1, inplace=True)\ny_pred=best_est_RF.predict_proba(df_test)\ny_pred= y_pred[:,1]","4794c070":"df_s[\"Probability\"]=y_pred\ndf_s.head()","585a6285":"df_s.to_csv(\"submission_RF.csv\",index=False)","caf17f80":"XGB = XGBClassifier(n_jobs=-1) \n \nparam_grid = {\n                  'n_estimators' :[100,150,200,250,300],\n                  \"learning_rate\" : [0.001,0.01,0.0001,0.05, 0.10 ],\n                  \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3 ],\n                  \"colsample_bytree\" : [0.5,0.7],\n                  'max_depth': [3,4,6,8]\n              }","42eb481e":"XGB_random = RandomizedSearchCV(XGB, param_distributions=param_grid, cv=5)","3b8c87aa":"XGB_random.fit(X_train,y_train)","e1719a24":"best_est_XGB = XGB_random.best_estimator_","21fbff6f":"print('Accuracy of classifier on training set: {:.2f}'.format(XGB_random.score(X_train, y_train) * 100))\nprint('Accuracy of classifier on test set: {:.2f}'.format(XGB_random.score(X_test, y_test) * 100))","6406262f":"from imblearn.over_sampling import SMOTE","3d63eb87":"smote = SMOTE(random_state=0)\n\ns_X,s_y=smote.fit_sample(X_train,y_train)","8263db02":"RF_random.fit(s_X,s_y)","85d46e22":"best_est_RF1 = RF_random.best_estimator_","5f228283":"print('Accuracy of classifier on training set: {:.2f}'.format(RF_random.score(s_X,s_y) * 100))\nprint('Accuracy of classifier on test set: {:.2f}'.format(RF_random.score(s_X,s_y) * 100))","302ee69d":"y_pred_RF1 = best_est_RF1.predict_proba(X_train)\ny_pred_RF1 = y_pred_RF1[:,1]","ef5933a9":"fpr,tpr,_ = roc_curve(y_train, y_pred_RF1)\nroc_auc = auc(fpr, tpr)\nplt.figure(figsize=(10,8))\nplt.title('Receiver Operating Characteristic')\nsns.lineplot(fpr, tpr, label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","0703042d":"prediction_RF = best_est_RF1.predict_proba(df_test)\nprediction_RF = prediction_RF[:,1]","20894dc4":"df_s[\"Probability\"]=prediction_RF\ndf_s.head()","10a7bb3e":"df_s.to_csv(\"submission_RF_S.csv\",index=False)","f6530e69":"Predicting the probability that somebody will experience financial distress in the next two years by using the credit score, which make a guess at the probability of default, are the method banks use to determine whether or not a loan should be granted to the customer of the bank","298502ea":"##### Imputing the null values","4990dd21":"As we can see the target variable clases in the above plot, it shows an class imbalance problem","76ccfe71":"### EDA","f5c93a84":"### Model Building","a62d1edf":"#### Reading the data","58b07033":"#### Importing libraries","6071f29c":"## Problem Statement","3a20116a":"The dataset has **12**  features plus the price along with **150000** observations.\n\nThe description for the 12 features is given below:\n\n- ``SeriousDlqin2yrs``\tPerson experienced 90 days past due delinquency or worse\tY\/N\n- ``RevolvingUtilizationOfUnsecuredLines``\tTotal balance on credit cards and personal lines of credit except real estate and no installment debt like car loans divided by the sum of credit limits\tpercentage\n- ``age``\tAge of borrower in years\tinteger\n- ``NumberOfTime3059DaysPastDueNotWorse``\tNumber of times borrower has been 30-59 days past due but no worse in the last 2 years.\tinteger\n- ``DebtRatio``\tMonthly debt payments, alimony,living costs divided by monthy gross income\tpercentage\n- ``MonthlyIncome``\tMonthly income\treal\n- ``NumberOfOpenCreditLinesAndLoans``\tNumber of Open loans (installment like car loan or mortgage) and Lines of credit (e.g. credit cards)\tinteger\n- ``NumberOfTimes90DaysLate``\tNumber of times borrower has been 90 days or more past due.\tinteger\n- ``NumberRealEstateLoansOrLines``\tNumber of mortgage and real estate loans including home equity lines of credit\tinteger\n- ``NumberOfTime60-89DaysPastDueNotWorse``\tNumber of times borrower has been 60-89 days past due but no worse in the last 2 years.\tinteger\n- ``NumberOfDependents``\tNumber of dependents in family excluding themselves (spouse, children etc.)\tinteger","7ef3aa46":"#### Correlation","0848ca76":"##### Checking Null values","e1478e23":"#### Random Forest model","f53f20b6":"### Visualization"}}