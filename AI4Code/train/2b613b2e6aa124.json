{"cell_type":{"5868510b":"code","099f1ad6":"code","c3b3ecfa":"code","86f175fb":"code","263d8adc":"code","a8540ead":"code","a52a5f32":"code","3ff1735c":"code","55887479":"code","e665253d":"code","d309918e":"code","db04de66":"code","0b1b99bc":"code","190d2366":"code","9c68b119":"code","42ec2014":"code","4c733d10":"code","40e62c24":"code","735d42ed":"code","ea58267e":"code","9ec7ecca":"code","d29df509":"code","79ae284a":"code","96c5f232":"code","4efea3b0":"markdown"},"source":{"5868510b":"#!kaggle competitions download -c 2020-ai-exam-fashionmnist-2","099f1ad6":"#!unzip 2020-ai-exam-fashionmnist-2.zip","c3b3ecfa":"import torch\nimport torchvision.datasets as data\nimport torchvision.transforms as transforms\nimport random\n\nimport pandas as pd\nimport numpy as np\n","86f175fb":"device = 'cuda' if torch.cuda.is_available() else 'cpu'\n\nrandom.seed(777)\ntorch.manual_seed(777)\nif device == 'cuda':\n  torch.cuda.manual_seed_all(777)","263d8adc":"learning_rate = 0.1\ntraining_epochs = 15\nbatch_size = 100","a8540ead":"train_data = pd.read_csv('..\/input\/2020-ai-exam-fashionmnist-2\/mnist_train_label.csv', header = None)\ntest_data = pd.read_csv('..\/input\/2020-ai-exam-fashionmnist-2\/mnist_test.csv', header = None, usecols=range(1, 785))","a52a5f32":"test_data","3ff1735c":"train_data","55887479":"x_train_data = train_data.loc[:, 1:784]\ny_train_data = train_data.loc[:, 0]\n\n#\ub370\uc774\ud130 \uc815\uaddc\ud654\nx_train_data = x_train_data\/255\nx_train_data","e665253d":"  \nx_train_data = np.array(x_train_data)\ny_train_data = np.array(y_train_data)\nx_train_data = torch.FloatTensor(x_train_data)\ny_train_data = torch.LongTensor(y_train_data)","d309918e":"train_dataset =  torch.utils.data.TensorDataset(x_train_data, y_train_data)","db04de66":"data_loader = torch.utils.data.DataLoader(dataset=train_dataset, \n                                          batch_size=batch_size, \n                                          shuffle = True, \n                                          drop_last = True)","0b1b99bc":"linear = torch.nn.Linear(784,10, bias = True)","190d2366":"torch.nn.init.xavier_normal_(linear.weight)","9c68b119":"model = torch.nn.Sequential(linear).to(device)","42ec2014":"loss = torch.nn.CrossEntropyLoss().to(device)\noptimizer = torch.optim.SGD(model.parameters(), lr = learning_rate)","4c733d10":"print(len(data_loader))","40e62c24":"total_batch = len(data_loader)\nfor epoch in range(training_epochs):\n  avg_cost = 0\n\n  for X, Y in data_loader:\n    X = X.to(device)\n    Y = Y.to(device)\n\n    optimizer.zero_grad()\n    hypothesis = model(X)\n    cost = loss(hypothesis, Y)\n    cost.backward()\n    optimizer.step()\n\n    avg_cost += cost\/total_batch\n  print(epoch+1)\n  print(avg_cost)\nprint(\"f\")","735d42ed":"with torch.no_grad():\n  test_data.loc[:, 783] = 0\n  x_test = test_data.loc[:,:]\n  x_test = x_test\/255\n  x_test = np.array(x_test)\n  x_test = torch.from_numpy(x_test).float().to(device)\n  prediction = model(x_test)\n  correct = torch.argmax(prediction, 1)\ncorrect","ea58267e":"correct = correct.cpu().numpy().reshape(-1, 1)\ncorrect","9ec7ecca":"submit = pd.read_csv('..\/input\/2020-ai-exam-fashionmnist-2\/submission.csv')\nsubmit","d29df509":"for i in range(len(correct)):\n  submit['Category'][i] = correct[i].item()\nsubmit","79ae284a":"submit.to_csv('submit.csv', index = False, header = True)","96c5f232":"!kaggle competitions submit -c 2020-ai-exam-fashionmnist-2 -f submit.csv -m \"result\"","4efea3b0":"!pip uninstall kaggle<br>\n!pip install --upgrade pip<br>\n!pip install kaggle==1.5.6<br>\n!mkdir -p ~\/.kaggle<br>\n!cp kaggle.json ~\/.kaggle<br>\n!ls -lha kaggle.json<br>\n!chmood 600 ~\/.kaggle\/kaggle.json<br>"}}