{"cell_type":{"4dc2f5cc":"code","20739bbb":"code","15ad04de":"code","372f9389":"code","2b34e0c2":"code","ade4602a":"code","03844d1a":"code","77410e7a":"code","82711ed1":"markdown","765d4293":"markdown","e60a5ff4":"markdown","62505190":"markdown","e70b3ecd":"markdown","88985c4d":"markdown"},"source":{"4dc2f5cc":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport seaborn as sns\nfrom pylab import rcParams\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","20739bbb":"healthyDataset = pd.read_csv(\"..\/input\/gearbox-fault-diagnosis-elaborated-datasets\/gearbox-fault-diagnosis-elaborated-datasets\/stdev\/healthy30hz_stdev_100.csv\")\nhealthyDataset","15ad04de":"brokenDataset = pd.read_csv(\"..\/input\/gearbox-fault-diagnosis-elaborated-datasets\/gearbox-fault-diagnosis-elaborated-datasets\/stdev\/broken30hz_stdev_100.csv\")\nbrokenDataset","372f9389":"dataset = pd.concat([healthyDataset, brokenDataset], axis=0)\ndataset.describe()","2b34e0c2":"fig, axes = plt.subplots(1, 2, figsize=(15, 5), sharey=True)\n   \nfig.suptitle('%Load count of rows', fontsize=20)\nsns.set(style='whitegrid', palette='muted', font_scale=1.5)\n\n# Broken gearbox\nbroken = sns.countplot(ax=axes[0], x='load',data=brokenDataset)\naxes[0].set_title('Broken gearbox', fontsize=15)\nbroken.set_xlabel('Load %',fontsize=15)\nbroken.set_ylabel('Count of rows',fontsize=15)\n\n# Healthy gearbox\nhealthy = sns.countplot(ax=axes[1], x='load',data=healthyDataset)\naxes[1].set_title('Healthy gearbox' , fontsize=15)\nhealthy.set_xlabel('Load %',fontsize=15)\nhealthy.set_ylabel('Count of rows',fontsize=15)","ade4602a":"plt.figure(figsize=(15,28*4))\ngs = gridspec.GridSpec(28, 1)\nfor i, cn in enumerate(dataset[['a1','a2','a3','a4']]):\n    ax = plt.subplot(gs[i])\n    sns.distplot(dataset[cn][dataset.failure == 1], bins=50)\n    sns.distplot(dataset[cn][dataset.failure == 0], bins=50)\n    ax.set_xlabel('')\n    plt.legend(['broken', 'healthy'])\n    ax.set_title('histogram for ' + str(cn))\nplt.show()","03844d1a":"plt.figure(figsize=(15,28*4))\ngs = gridspec.GridSpec(28, 1)\nfor i, cn in enumerate(dataset[['a1','a2','a3','a4']]):\n    ax = plt.subplot(gs[i])\n    sns.distplot(dataset[cn][dataset.load == 0], bins=50)\n    sns.distplot(dataset[cn][dataset.load == 50], bins=50)\n    sns.distplot(dataset[cn][dataset.load == 90], bins=50)\n    ax.set_xlabel('')\n    plt.legend(['0%', '50%', '90%'])\n    ax.set_title('histogram for ' + str(cn) + ': healthy & broken')\n    ax.set_title('histogram for ' + str(cn))\nplt.show()","77410e7a":"rcParams['figure.figsize'] = 15, 8\n\ncolumns = ['failure','a1', 'a2', 'a3', 'a4', 'load']\nsns.heatmap(dataset[columns].corr(),annot=True,cmap='RdYlGn')\nfig=plt.gcf()\nplt.show()","82711ed1":"## Compared histograms\n### Overall (all loads)","765d4293":"## Rows count per % load","e60a5ff4":"## Join healthy & broken datasets in a single dataframe","62505190":"## Correlation matrix","e70b3ecd":"# Exploring the dataset","88985c4d":"### Separated per loads 0%, 50%, 90%"}}