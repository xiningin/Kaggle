{"cell_type":{"6d8755c2":"code","92fa3672":"code","ee751e8c":"code","6d498d9e":"code","c0a82ede":"code","345d49d4":"code","2e2ac538":"code","7f7985c8":"code","3ea2aff7":"code","5ffa5943":"code","a6f891a3":"code","f266406c":"code","8ba55bca":"code","40a83001":"code","c4cf4a86":"code","99b9c0a6":"code","b43fb5b2":"code","4f998b80":"code","b65869fb":"markdown","e9213480":"markdown","a548d599":"markdown","941f85c1":"markdown","e5b70c68":"markdown","4df0881a":"markdown","7ad63430":"markdown","de01b9ea":"markdown","025a392d":"markdown","0a3bb508":"markdown","a0d8637c":"markdown","30226b32":"markdown"},"source":{"6d8755c2":"#importing required libraries to read and clean raw data\nimport pandas as pd\nimport numpy as np\ndata = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")\ndata.head()","92fa3672":"#getting basic info about the data frame\ndata.info()","ee751e8c":"data.isna().sum() # returns total no. of rows which contain null or missing values","6d498d9e":"data.columns = [\"gender\", \"race\",\"parent_edu\", \"lunch\", \"test_prep\", \"score_math\", \"score_reading\", \"score_writing\"] #passing a list of string to rename columns\ndata.columns #re-checking work!","c0a82ede":"data[\"race\"] = data[\"race\"].str.replace(\"group\", \"\")\ndata.head()","345d49d4":"#introducing categorical variables \"P\" and \"F\" to indicate pass\/fail status\ndata[\"math_status\"] = np.where(data[\"score_math\"] >=40, \"P\", \"F\")\ndata[\"reading_status\"]= np.where(data[\"score_reading\"] >=40, \"P\", \"F\")\ndata[\"writing_status\"] = np.where(data[\"score_writing\"] >=40, \"P\", \"F\")\ndata.head(3)\n","2e2ac538":"#importing required libraries for data visualisation\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n","7f7985c8":"plt.rcParams[\"figure.figsize\"] = 8,6\nsns.countplot(x = data[\"gender\"]).set_title(\"Sex ratio of students\")\nplt.show()","3ea2aff7":"total = data[\"gender\"].shape[0]\nfemale = pd.value_counts(data[\"gender\"] == \"female\")\nfemale_percent = (female\/total)*100\nmale_percent = 1 - female_percent\nprint(female_percent)\n\n# 51.7% students are female and 48.2% students are male","5ffa5943":"plt.rcParams[\"figure.figsize\"] = 8,6\nsns.countplot(x = data[\"race\"]).set_title(\"Race\/ethnicity distribution of students\")\nplt.show()","a6f891a3":"plt.rcParams[\"figure.figsize\"] = 12,7\nsns.countplot(x = data[\"parent_edu\"]).set_title(\"Parent's education level\")\nplt.show()\n","f266406c":"plt.rcParams[\"figure.figsize\"] = 8,8\nsns.countplot(x = data[\"gender\"], hue = data[\"test_prep\"]).set_title(\"Preparation of students\")\nplt.show()","8ba55bca":"plt.rcParams[\"figure.figsize\"] = 8,8\nsns.countplot(x = data[\"gender\"], hue = data[\"lunch\"]).set_title(\"Lunch types\")\nplt.show()","40a83001":"fig, axarr = plt.subplots(2, 2)\nax1, ax2, ax3, ax4 = axarr[0, 0], axarr[0, 1], axarr[1, 0], axarr[1, 1]\nfig.set_figheight(15)\nfig.set_figwidth(25)\n\nsns.pointplot(y=data['score_math'], x=data[\"race\"], ax=ax1)\nsns.pointplot(y=data['score_math'], x=data['gender'], ax=ax2)\nsns.pointplot(y=data['score_math'], x=data[\"parent_edu\"],ax=ax3)\nsns.pointplot(y=data['score_math'], x=data['gender'], hue= data[\"test_prep\"],ax=ax4)\nplt.show()","c4cf4a86":"fig, axarr = plt.subplots(2, 2)\nax1, ax2, ax3, ax4 = axarr[0, 0], axarr[0, 1], axarr[1, 0], axarr[1, 1]\nfig.set_figheight(15)\nfig.set_figwidth(25)\n\nsns.pointplot(y=data['score_reading'], x=data[\"race\"], ax=ax1)\nsns.pointplot(y=data['score_reading'], x=data['gender'], ax=ax2)\nsns.pointplot(y=data['score_reading'], x=data[\"parent_edu\"],ax=ax3)\nsns.pointplot(y=data['score_reading'], x=data['gender'], hue= data[\"test_prep\"],ax=ax4)\nplt.show()","99b9c0a6":"fig, axarr = plt.subplots(2, 2)\nax1, ax2, ax3, ax4 = axarr[0, 0], axarr[0, 1], axarr[1, 0], axarr[1, 1]\nfig.set_figheight(15)\nfig.set_figwidth(25)\n\nsns.pointplot(y=data['score_writing'], x=data[\"race\"], ax=ax1)\nsns.pointplot(y=data['score_writing'], x=data['gender'], ax=ax2)\nsns.pointplot(y=data['score_writing'], x=data[\"parent_edu\"],ax=ax3)\nsns.pointplot(y=data['score_writing'], x=data['gender'], hue= data[\"test_prep\"],ax=ax4)\nplt.show()","b43fb5b2":"a = pd.value_counts(data[\"lunch\"])\nprint(a)\n\n#35.5% students qualified for the lunch fees waiver","4f998b80":"plt.rcParams[\"figure.figsize\"] = 15,10\nsns.countplot(x = data[\"parent_edu\"], hue = data[\"lunch\"]).set_title(\"Parents education levels qualifying for lunch wiaver\")\nplt.show()","b65869fb":"**Inferences of Reading Section:**\n1.Students of Race E performed the best!\n2. Female students performed better than males\n3. Parent's higher level of education makes a positive impact on students' scores. \n4. As expected, completing test preparation course has a positive impact on students' performance","e9213480":"**EDA on Student scores**","a548d599":"**Inferences of Writing Section:**\n1.Students of Race E performed the best!\n2. Female students performed better than males\n3. Parent's higher level of education makes a positive impact on students' scores. \n4. As expected, completing test preparation course has a positive impact on students' performance","941f85c1":"Our data frame as no null\/missing values. This makes my work easier, but missing values would have added some more fun into cleaning\/replacing missing values! \nI shall rename some columns and remove word \"group\" from the column \"Race\/Ethinicity\" so as to get only one categorical variable (A\/B\/C)\n","e5b70c68":"There is no strong causation effect of low education levels of parents on the lunch waiver. Some information on how students' qualify for lunch waiver would be helpful for analysis. ","4df0881a":"**Numerical Variables**\nThe following columns have categorical variables:\n1. Math section\n2. Reading section\n3. Writing section\n\nPoint plots represents an estimator of central tendency (mean value in this case) for a numerical variable. \nMore here: https:\/\/seaborn.pydata.org\/generated\/seaborn.pointplot.html","7ad63430":"**Categorical Variables**\nThe following columns have categorical variables:\n1. Gender \n2. Race \n3. Parent_edu\n4. Lunch\n5. test_prep\n","de01b9ea":"In the above snapshot of our data, \"none\" value appears in the \"test_prep\" column. Please note that this is not a missing value. It simply indicates whether the student prepared for the exam or not. \nNow that we have completed steps 1 & 2, lets dive into the action! Get ready for some beautiful visualisations using seaborn! \n\nWe need to set a passing grade so as to draw some useful analysis from the dataset. \n**Pass grade = 40 assuming that maximum marks = 100 for each section i.e math, reading and writing***","025a392d":"Lets find out if there are any missing values in any of the columns.","0a3bb508":"Let's see how students have qualified for \"free\/reduced\" lunch. Does it depend on their parent's low education leading to low finanical status thus, the children qualifying for a waiver on lunch prices","a0d8637c":"**Inferences of Math Section:**\n1.Students of Race E performed the best!\n2. Male students performed better than females\n3. Parent's higher level of education makes a positive impact on students' scores. However, there is **not** a marginal difference in scores of students whose parents have a master's degree over bachelor's degree\n4. As expected, completing test preparation course has a positive impact on students' performance\n","30226b32":"Attempt to doing better than \"Hello World\"\nThis is my second attempt at analysing data using Python. Apart from data visualisation, I hope to get my hands on linear regression. I shall follow the basic steps of EDA:\n1. Getting a feel of the raw data\n2. Cleaning and preparing data for further analysis\n3. Action with analysis\n4. Inferences\n"}}