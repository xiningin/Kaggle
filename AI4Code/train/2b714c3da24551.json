{"cell_type":{"4746fe4c":"code","4c91a7c6":"code","5adb63a3":"code","fd38fc00":"code","ff2739d5":"code","9adb60b1":"code","39a4ce17":"markdown","1ee5b3a7":"markdown","05cb8a15":"markdown","c0608f43":"markdown","75d272f5":"markdown","619e04f1":"markdown"},"source":{"4746fe4c":"import os\nimport pandas as pan\nimport numpy as np\nimport matplotlib.pyplot as plt\n\norgdf = pan.read_csv(\"..\/input\/california-housing-dataset\/housing.csv\")\norgdf.info()","4c91a7c6":"from mpl_toolkits.basemap import Basemap\n\n# 1. Draw the map background\nfig = plt.figure(figsize=(8, 8))\nm = Basemap(projection='lcc', resolution='l', \n            lat_0=37.5, lon_0=-119,\n            width=1E6, height=1.2E6)\nm.shadedrelief()\nm.drawcoastlines(color='black')\nm.drawcountries(color='black')\nm.drawstates(color='black')\n\nlon = np.array(orgdf['longitude'])\nlat = np.array(orgdf['latitude'])\nprice = np.array(orgdf['median_house_value'])\npopu = np.array(orgdf['population'])\n\nm.scatter(lon, lat, latlon=True,\n          c=price, s=popu\/50,\n          cmap='RdBu_r', alpha=0.9)\n\nplt.colorbar(label=r'House value')\nplt.clim(min(price), 300000)\n\nfor a in [100, 500]:\n    plt.scatter([], [], c='k', alpha=0.5, s=a,\n                label=str(a) + ' population density')\nplt.legend(scatterpoints=1, frameon=False,\n           labelspacing=1, loc='lower left');","5adb63a3":"conv = {'<1H OCEAN':1.0,'INLAND':2.0,'ISLAND':3.0,'NEAR BAY':4.0,'NEAR OCEAN':5.0}\norgdf['ocean_proximity'] = orgdf['ocean_proximity'].map(lambda x: conv[x])\nX = orgdf.drop('median_house_value', axis=1)\nY = orgdf['median_house_value']\nX = X.fillna(X.median())\nY = Y.fillna(Y.median())","fd38fc00":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)","ff2739d5":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\n\nmodel = Pipeline([\n    (\"poly_features\", PolynomialFeatures(degree=2, include_bias=False)),\n    (\"std_scaler\", StandardScaler()),\n    (\"lin_reg\", LinearRegression())])\n\nmodel.fit(X_train, Y_train)\nY_train_predict = model.predict(X_train)\nY_test_predict = model.predict(X_test)\nr2tr = r2_score(Y_train, Y_train_predict)\nr2es = r2_score(Y_test, Y_test_predict)\nprint( 'R2 of the training dataset: ' , str(np.around( r2tr , 2)) )\nprint( 'R2 of the test dataset: ' , str(np.around( r2es , 2)) )","9adb60b1":"def plot_learning_curves(model, X, y):\n    X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=10)\n    train_errors, val_errors = [], []\n    for m in range(1, len(X_train)):\n        model.fit(X_train[:m], y_train[:m])\n        y_train_predict = model.predict(X_train[:m])\n        y_val_predict = model.predict(X_val)\n        train_errors.append(mean_squared_error(y_train[:m], y_train_predict))\n        val_errors.append(mean_squared_error(y_val, y_val_predict))\n\n    plt.figure(figsize=(8, 5), dpi=80, facecolor='w', edgecolor='k')\n    plt.plot(np.sqrt(train_errors), \"r-+\" ,linewidth=2, label=\"train\")\n    plt.plot(np.sqrt(val_errors), \"b-\", linewidth=3, label=\"val\")\n    plt.legend(loc=\"upper right\", fontsize=14)   # not shown in the book\n    plt.xlabel(\"Training set size\", fontsize=14) # not shown\n    plt.ylabel(\"RMSE\", fontsize=14)              # not shown\n    plt.ylim(0, 500000)\n\nplot_learning_curves( model , X_train[:1400] , Y_train[:1400] )\nplt.show()","39a4ce17":"In the following lines of code, the Machine Learning pipeline is created and the training dataset is fitted to the model. R-squared is used to evaluate the model performance on both the training and test datasets.","1ee5b3a7":"The following plot allows us to visualize some apparent correlations among features.","05cb8a15":"The main objective of this study is to predict the median housing price in California, given its geographical location and basic information. The dataset will be explored briefly. Limited preprocessing will be performed where it is necessary. A nonlinear SGD regression model is fitted to the transformed data and its performance is evaluated using r-squared.","c0608f43":"The plot shows that the median housing price is related to the location (e.g., proximity to the ocean) and the population density. Let's separate and preprocess the features from the target variable.","75d272f5":"The following plot shows the learning curve on the training datasets. The error on the test dataset (or validation dataset) decreases and reaches a plateau as new instances are added to the training dataset.","619e04f1":"The main dataset is split into training and test datasets."}}