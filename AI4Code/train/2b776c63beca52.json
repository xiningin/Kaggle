{"cell_type":{"182a3b51":"code","f113965d":"code","68a83437":"code","154e55c9":"code","30386dca":"code","34731370":"code","afe8b0e8":"code","e45be184":"code","8e9c0a98":"code","7dce4441":"code","38dafe5d":"code","8cce7172":"code","b8e7f886":"code","7adbe749":"code","22fadff7":"code","c176a780":"code","3174490c":"code","b7951306":"code","96613418":"code","abdce06e":"code","e74992e7":"code","cf09b9fa":"markdown","c1168db1":"markdown","51283fb6":"markdown","9fd16adf":"markdown","643af556":"markdown","55ffcdf6":"markdown"},"source":{"182a3b51":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import train_test_split\nimport warnings\nwarnings.filterwarnings('ignore')\nimport sklearn.neighbors\nfrom sklearn.neighbors import KNeighborsClassifier","f113965d":"df = pd.read_csv('..\/input\/heart-disease-prediction\/Heart_Disease_Prediction.csv')","68a83437":"df.head()","154e55c9":"df.describe()","30386dca":"df.shape","34731370":"# Checking for missing values.\ndf.isnull().values.any()","afe8b0e8":"# Checking for imbalanced data based on sex.\ndf['Sex'].value_counts()","e45be184":"# Checking for imbalanced data based on outcome.\ndf['Heart Disease'].value_counts()","8e9c0a98":"sns.countplot(x='Heart Disease', data=df)","7dce4441":"# Checking for any correlations.\ndf.corr()","38dafe5d":"# Splitting the dataset into training and testing sets.\nx = df.iloc[:, :-2]\ny = df.iloc[:, -1]\nx_train, x_test, y_train, y_test = train_test_split(x, y, random_state = 0, test_size = 0.35)","8cce7172":"# Using standard scaler as a standardization technique.\nsc_x = StandardScaler()\nx_train = sc_x.fit_transform(x_train)\nx_test = sc_x.transform(x_test)","b8e7f886":"# Looking for optimal number of nearest neighbours.\nimport math\nmath.sqrt(len(y_test))","7adbe749":"# Creating KNN Model.\nclassifier = KNeighborsClassifier(n_neighbors = 9, p = 2, metric = 'euclidean')\nclassifier.fit(x_train,y_train)","22fadff7":"y_pred = classifier.predict(x_test)\ny_pred","c176a780":"cm = confusion_matrix(y_test,y_pred)\nprint(cm)","3174490c":"print(accuracy_score(y_test,y_pred))","b7951306":"# Creating SVM model.\nfrom sklearn import svm\nclf = svm.SVC(kernel='rbf')\nclf.fit(x_train,y_train)\ny_pred = clf.predict(x_test)","96613418":"y_pred = clf.predict(x_test)\ny_pred","abdce06e":"cm = confusion_matrix(y_test,y_pred)\nprint(cm)","e74992e7":"print(accuracy_score(y_test,y_pred))","cf09b9fa":"# Importing Libraries","c1168db1":"This notebook is a simple introduction to the K-NN and SVM algorithms using a heart disease dataset that can be found at https:\/\/data.world\/informatics-edu\/heart-disease-prediction.","51283fb6":"# SVM Model","9fd16adf":"# K-Nearest Neighbours ","643af556":"# Data","55ffcdf6":"# Predicting Heart Disease with K-NN and SVM"}}