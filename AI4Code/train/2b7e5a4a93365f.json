{"cell_type":{"cb92cd70":"code","53b905a5":"code","8dd52369":"code","6335bd9b":"code","b539446d":"code","a68d24f1":"code","8951348b":"code","17d97ee9":"code","9e2aec94":"code","a5980215":"code","6d72322f":"code","cf9b4549":"code","4ded5ace":"code","cbe6fffe":"code","339adcd5":"code","91c944ff":"code","2781f8d8":"code","1e9b4641":"code","2c929aa2":"code","d0c31a94":"code","231dda4c":"code","e84090e4":"code","0e6cd860":"code","c25e1aef":"code","8a89e130":"code","24fe09c9":"code","28b649ad":"code","b21a0be7":"code","3b1d4b9d":"code","bc007d34":"code","e366da85":"code","b20ba400":"code","bb7f3f15":"code","155c30e1":"code","c4ea544c":"code","d5f9905a":"code","216d3bd8":"code","8bfd4130":"code","ebd9e10e":"markdown","ef3d8c11":"markdown","40ac68e0":"markdown","0d4ee182":"markdown","9aad11de":"markdown","8b873bb7":"markdown","7c9e4ce4":"markdown","79934f8d":"markdown","c5bc00f6":"markdown","f5ca5f2d":"markdown"},"source":{"cb92cd70":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport random\nimport seaborn as sns\nfrom fbprophet import Prophet     #facebook prophet package","53b905a5":"# finding out Kaggle cwd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8dd52369":"chicago_df_1 = pd.read_csv('\/kaggle\/input\/crimes-in-chicago\/Chicago_Crimes_2005_to_2007.csv', error_bad_lines=False)\nchicago_df_2 = pd.read_csv('\/kaggle\/input\/crimes-in-chicago\/Chicago_Crimes_2008_to_2011.csv', error_bad_lines=False)\nchicago_df_3 = pd.read_csv('\/kaggle\/input\/crimes-in-chicago\/Chicago_Crimes_2012_to_2017.csv', error_bad_lines=False)\n# error_bad_lines are used to ignore rows that are corrupted","6335bd9b":"#concatenating all the datasets together\nchicago_df = pd.concat([chicago_df_1, chicago_df_2, chicago_df_3], ignore_index=False, axis=0)","b539446d":"chicago_df.shape","a68d24f1":"chicago_df.head()","8951348b":"chicago_df.tail(20)","17d97ee9":"#visualizing and observing the null elements in the dataset\nplt.figure(figsize=(10,10))\nsns.heatmap(chicago_df.isnull(), cbar = False, cmap = 'YlGnBu')   #ploting missing data #cbar, cmap = colour bar, colour map","9e2aec94":"# Dropping the following columns: ID Case Number Date Block IUCR Primary Type Description Location Description Arrest Domestic Beat District Ward Community Area FBI Code X Coordinate Y Coordinate Year Updated On Latitude Longitude Location\nchicago_df.drop(['Unnamed: 0', 'Case Number', 'Case Number', 'IUCR', 'X Coordinate', 'Y Coordinate','Updated On','Year', 'FBI Code', 'Beat','Ward','Community Area', 'Location', 'District', 'Latitude' , 'Longitude'], inplace=True, axis=1)","a5980215":"chicago_df","6d72322f":"#assembling a datetime by rearranging the dataframe column \"Date\" converting it to date-time format\nchicago_df.Date = pd.to_datetime(chicago_df.Date, format='%m\/%d\/%Y %I:%M:%S %p')  #I-Hour %p-AM\/PM","cf9b4549":"chicago_df.Date ","4ded5ace":"# setting the index to be the date-time column \nchicago_df.index = pd.DatetimeIndex(chicago_df.Date)","cbe6fffe":"#counting all the no of elements within a specific column 'Primary Type'\nchicago_df['Primary Type'].value_counts()","339adcd5":"#top 15 cases\nchicago_df['Primary Type'].value_counts().iloc[:15]","91c944ff":"#indices of the top 15 cases\norder_data = chicago_df['Primary Type'].value_counts().iloc[:15].index","2781f8d8":"#plotting a bar plot for the top 15 cases\nplt.figure(figsize=(15,10))\nsns.countplot(y='Primary Type', data=chicago_df, order = order_data)","1e9b4641":"#Locations where the crimes happened\nplt.figure(figsize = (15, 10))\nsns.countplot(y= 'Location Description', data = chicago_df, order = chicago_df['Location Description'].value_counts().iloc[:15].index)","2c929aa2":"#count the no of crimes occuring in a particular year\nchicago_df.resample('Y').size()\n#resample is a convenience method for frequency conversion and resampling of time series. ","d0c31a94":"#plotting crimmes occuring each year vs no. of crimes happening in that year\nplt.plot(chicago_df.resample('Y').size())\nplt.title('Crimes Count Per Year')\nplt.xlabel('Years')\nplt.ylabel('Number of Crimes')","231dda4c":"chicago_df.resample('M').size()         #over the period of 'M' Months","e84090e4":"plt.plot(chicago_df.resample('M').size())\nplt.title('Crimes Count Per Month')\nplt.xlabel('Months')\nplt.ylabel('Number of Crimes')","0e6cd860":"chicago_df.resample('Q').size()           #over the period of 'Q' Quaters","c25e1aef":"plt.plot(chicago_df.resample('Q').size())\nplt.title('Crimes Count Per Quarter')\nplt.xlabel('Quarters')\nplt.ylabel('Number of Crimes')","8a89e130":"#performing quality set index\nchicago_prophet = chicago_df.resample('M').size().reset_index()","24fe09c9":"chicago_prophet","28b649ad":"chicago_prophet.columns = ['Date', 'Crime Count']","b21a0be7":"chicago_prophet","3b1d4b9d":"chicago_prophet_df = pd.DataFrame(chicago_prophet)","bc007d34":"chicago_prophet_df","e366da85":"chicago_prophet_df.columns","b20ba400":"#renaming the columns into 'ds' and 'y' format for facebook prophet,\n#formatting in 'M' for implementation\nchicago_prophet_df_final = chicago_prophet_df.rename(columns={'Date':'ds', 'Crime Count':'y'})","bb7f3f15":"chicago_prophet_df_final","155c30e1":"#instantiating prophet object\nm = Prophet()\nm.fit(chicago_prophet_df_final)","c4ea544c":"#forcasting into the future\nfuture = m.make_future_dataframe(periods=720)  #periods = no. of days for prediction\nforecast = m.predict(future)","d5f9905a":"forecast","216d3bd8":"#visualizing future results\nfigure = m.plot(forecast, xlabel='Date', ylabel='Crime Rate')","8bfd4130":"#expected trend in the future\nfigure3 = m.plot_components(forecast)","ebd9e10e":"# Importing the Libraries and Dataset","ef3d8c11":"- Prophet is open source software released by Facebook\u2019s Core Data Science team.\n\n- Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. \n\n- Prophet works best with time series that have strong seasonal effects and several seasons of historical data. \n\n- For more information, check out: https:\/\/research.fb.com\/prophet-forecasting-at-scale\/\nhttps:\/\/facebook.github.io\/prophet\/docs\/quick_start.html#python-api\n","40ac68e0":"# Exploring the Dataset","0d4ee182":"- The Chicago Crime dataset contains a summary of the reported crimes occurred in the City of Chicago from 2001 to 2017. \n- Dataset has been obtained from the Chicago Police Department's CLEAR (Citizen Law Enforcement Analysis and Reporting) system.\n- Dataset contains the following columns: \n    - ID: Unique identifier for the record.\n    - Case Number: The Chicago Police Department RD Number (Records Division Number), which is unique to the incident.\n    - Date: Date when the incident occurred.\n    - Block: address where the incident occurred\n    - IUCR: The Illinois Unifrom Crime Reporting code.\n    - Primary Type: The primary description of the IUCR code.\n    - Description: The secondary description of the IUCR code, a subcategory of the primary description.\n    - Location Description: Description of the location where the incident occurred.\n    - Arrest: Indicates whether an arrest was made.\n    - Domestic: Indicates whether the incident was domestic-related as defined by the Illinois Domestic Violence Act.\n    - Beat: Indicates the beat where the incident occurred. A beat is the smallest police geographic area \u2013 each beat has a dedicated police beat car. \n    - District: Indicates the police district where the incident occurred. \n    - Ward: The ward (City Council district) where the incident occurred. \n    - Community Area: Indicates the community area where the incident occurred. Chicago has 77 community areas. \n    - FBI Code: Indicates the crime classification as outlined in the FBI's National Incident-Based Reporting System (NIBRS). \n    - X Coordinate: The x coordinate of the location where the incident occurred in State Plane Illinois East NAD 1983 projection. \n    - Y Coordinate: The y coordinate of the location where the incident occurred in State Plane Illinois East NAD 1983 projection. \n    - Year: Year the incident occurred.\n    - Updated On: Date and time the record was last updated.\n    - Latitude: The latitude of the location where the incident occurred. This location is shifted from the actual location for partial redaction but falls on the same block.\n    - Longitude: The longitude of the location where the incident occurred. This location is shifted from the actual location for partial redaction but falls on the same block.\n    - Location: The location where the incident occurred in a format that allows for creation of maps and other geographic operations on this data portal. This location is shifted from the actual location for partial redaction but falls on the same block.\n- Datasource: https:\/\/www.kaggle.com\/currie32\/crimes-in-chicago","9aad11de":"# Predicting Crime Rate in Chicago using Facebook Prophet\n\n**Author** : Rahul Bordoloi\n\n\n\n\n","8b873bb7":"# Preparing the Data for Prophet","7c9e4ce4":"# End","79934f8d":"# Making Future Predictions using Prophet","c5bc00f6":"# About Facebook Prophet","f5ca5f2d":"PROBLEM STATEMENT"}}