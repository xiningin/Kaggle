{"cell_type":{"50d49ef7":"code","8f19f9f9":"code","a9b16ba5":"code","94cac753":"code","d6640fdc":"code","92dd7781":"code","eb523860":"markdown","40719ff9":"markdown"},"source":{"50d49ef7":"import pandas as pd","8f19f9f9":"#\ud6c8\ub828\uc6a9 df \uc0dd\uc131 : Feauture\uc640 Label \ubcd1\ud569\ntrain_df = pd.merge(pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_train.csv'),pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/y_train.csv'),how='outer')\n#\uc2dc\ud5d8\uc6a9 df \uc0dd\uc131\ntest_df = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_test.csv')\n\n#Nan \uac12 \ud655\uc778\nprint(\"*****\ud6c8\ub828\uc6a9 \ub370\uc774\ud130\uc14b Nan \uc720\ubb34 \ud655\uc778*****\")\nprint(train_df.isna().sum())\nprint(\"*****\uc2dc\ud5d8\uc6a9 \ub370\uc774\ud130\uc14b Nan \uc720\ubb34 \ud655\uc778*****\")\nprint(test_df.isna().sum())\n\n#\ud6c8\ub828\uc6a9 \ub370\uc774\ud130\uc14b \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \uceec\ub7fc \ubc0f \uc624\uc5fc\uc720\ubb34 \ud655\uc778\n\nfor col in train_df.select_dtypes(include=object).columns:\n    print(\"*****\ud6c8\ub828\uc6a9 \ub370\uc774\ud130\uc14b \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \ud655\uc778*****\")\n    print(col)\n    print(train_df[col].nunique())\n    print(train_df[col].unique())\n    print(train_df[col].value_counts())\n\n#\uc2dc\ud5d8\uc6a9 \ub370\uc774\ud130\uc14b \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \uceec\ub7fc \ubc0f \uc624\uc5fc\uc720\ubb34 \ud655\uc778\n\nfor col in test_df.select_dtypes(include=object).columns:\n    print(\"*****\uc2dc\ud5d8\uc6a9 \ub370\uc774\ud130\uc14b \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \ud655\uc778*****\")\n    print(col)\n    print(test_df[col].nunique())\n    print(test_df[col].unique())\n    print(test_df[col].value_counts())    \n","a9b16ba5":"# drop_features() : \ubd88\ud544\uc694\ud55c \ub370\uc774\ud130\uac00 \uc788\ub294 \uceec\ub7fc \uc0ad\uc81c\ndef drop_features(df):\n    df.drop(['CustomerId', 'Surname'], axis = 1, inplace = True)\n    return df\n\n# format_features() : Gender \uceec\ub7fc \uc218\uc815 \/ Gender,Geography \uceec\ub7fc \ub77c\ubca8\ub9c1\ndef format_features(df):\n    df['Gender'] = df['Gender'].str.replace(' ', '') # \uacf5\ubc31\uc81c\uac70\n    df['Gender'] = df['Gender'].str.upper() # \ub300\ubb38\uc790\ub85c \uc77c\uad04 \ubcc0\uacbd\n    df = pd.get_dummies(df) # Gender,Geography \uceec\ub7fc \ub77c\ubca8\ub9c1\n    return df\n\n# Gender \uceec\ub7fc \uc218\uc815 \ud655\uc778\uc6a9\n# train_df = drop_features(train_df)\n# train_df = format_features(train_df)\n# print(train_df['Gender'].value_counts())\n\n# transform_features(df): \uc704 \ud568\uc218\ub4e4\uc744 \uc77c\uad04\uc801\uc6a9\ud558\uae30 \uc704\ud55c \ud568\uc218\ndef transform_features(df):\n    df = drop_features(df)\n    df = format_features(df)\n    return df","94cac753":"# \ud6c8\ub828\uc6a9 \ub370\uc774\ud130\uc14b \ubd84\ub9ac \ubc0f \uac80\uc99d\nfrom sklearn.model_selection import train_test_split\n\ntrain_df = transform_features(train_df)\nX = train_df.drop('Exited', axis = 1)\ny = train_df['Exited']\n\nX_train_model, X_test_val, y_train_model, y_test_val = train_test_split(X, y, test_size = 0.3, random_state = 42, stratify = y)\n\n# \ubaa8\ub378 \ud6c8\ub828 \ubc0f \uc131\ub2a5 \ud3c9\uac00\nfrom sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(random_state = 42)\nmodel.fit(X_train_model, y_train_model)\n#pred\ub294 \ud63c\ub3d9\ud589\ub82c(confusion matrix), \uc815\ud655\ub3c4(accuracy), \uc815\ubc00\ub3c4(precision), \uc7ac\ud604\uc728(recall) \ud655\uc778\uc6a9\npred_model = model.predict(X_test_val)\n#pred_proba\ub294 roc_auc_score \ud655\uc778\uc6a9\npred_proba_model = model.predict_proba(X_test_val)[:,1]\n\nfrom sklearn.metrics import roc_auc_score\nras_model = roc_auc_score(y_test_val, pred_proba_model)\nprint(\"\ubaa8\ub378 roc_auc_score :{0:.4f}\".format(ras_model))","d6640fdc":"# \uc81c\ucd9c\uc6a9 \ub370\uc774\ud130 \uc0dd\uc131 \ubc0f \uc81c\ucd9c\nsubmission_Id = test_df['CustomerId']\ntest_df = transform_features(test_df)\n\nsubmission = pd.DataFrame({'CustomerId': submission_Id, 'Exited': model.predict(test_df)})\nprint(submission)\nsubmission.to_csv('submission.csv', index=False)","92dd7781":"# \uc2e4\uc81c \uac12\uacfc \ube44\uad50\ud55c \uc81c\ucd9c\ub370\uc774\ud130 \uc131\ub2a5 \ud3c9\uac00\ntrue_label = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/test_label\/y_test.csv')['Exited']\nguess_label = model.predict_proba(test_df)[:,1]\nras_test = roc_auc_score(true_label, guess_label)\nprint(\"\uc2e4\uc81c \uac12\uacfc \ube44\uad50 roc_auc_score :{0:.4f}\".format(ras_test))","eb523860":"\/kaggle\/input\/churn-model-data-set-competition-form\/X_test.csv\n\n\/kaggle\/input\/churn-model-data-set-competition-form\/y_train.csv\n\n\/kaggle\/input\/churn-model-data-set-competition-form\/X_train.csv\n\n\/kaggle\/input\/churn-model-data-set-competition-form\/test_label\/y_test.csv\n","40719ff9":"#\ud655\uc778 \uacb0\uacfc\n1. Nan\uac12\uc774 \uc5c6\uc73c\ubbc0\ub85c fillna \ub610\ub294 dropna \ud568\uc218 \ubd88\ud544\uc694\n2. CustomerID(\uc218\uce58\ud615)\uc640 Surname(\ubc94\uc8fc\ud615)\uc740 \ubd88\ud544\uc694\ud55c \ub370\uc774\ud130\ub85c \uceec\ub7fc \uc0ad\uc81c\uac00 \ud544\uc694\n3. Gender \uceec\ub7fc\uc758 \uacbd\uc6b0 Male Female male female\ub85c \ub300\uc18c\ubb38\uc790\ub85c \uc778\ud55c \ub370\uc774\ud130 \uc624\uc5fc\uc774 \uc788\uc5b4 \uceec\ub7fc \uc218\uc815\uc774 \ud544\uc694\n4. 3\ubc88 \uc2e4\ud589 \uc774\ud6c4 Gender, Geography \uceec\ub7fc\uc740 \ub77c\ubca8\ub9c1(\uc218\uce58\ud654)\uc774 \ud544\uc694"}}