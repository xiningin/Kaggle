{"cell_type":{"3a94bf0c":"code","c8d6d67e":"code","20119a98":"code","8ebddf84":"code","4e7e5ade":"code","b1a953fc":"code","c70c9d8a":"code","43094df0":"code","3d2cd6c4":"code","de7fe57d":"code","f1b255a1":"code","459510f2":"code","8292cc72":"code","bfed3740":"code","ee40c9f5":"code","836eb1f1":"code","dcdb0be2":"code","4e94a9ec":"code","b2679c67":"code","b16c7aee":"code","faafed10":"code","4380053a":"code","65a36e1f":"code","c25ca441":"code","2f3cf3cb":"code","00e23b7b":"code","47259718":"code","14d43d44":"code","970db188":"code","888b5360":"code","33be8884":"code","886bd9a9":"code","ce9391b6":"code","2108a96f":"code","44926452":"code","166200f2":"code","b51b588c":"code","fc4c90a2":"code","5ca2768a":"code","461370cc":"code","77138f2a":"code","7636bf69":"code","5c073832":"code","81825ad6":"code","2e973bbd":"code","44292716":"code","1e1893b2":"code","27008370":"markdown","866fcf63":"markdown","4412a81f":"markdown","14bc312b":"markdown","3ccf099a":"markdown","66c9cd2b":"markdown","cf8e1c95":"markdown","a8829fb7":"markdown","1c4e96d5":"markdown","3c1c354e":"markdown","42e5c7d2":"markdown","d54ff599":"markdown","a76d73f3":"markdown","30bd08cd":"markdown","e4ad9272":"markdown","182a1593":"markdown"},"source":{"3a94bf0c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import PolynomialFeatures\nplt.style.use(\"Solarize_Light2\")\n%matplotlib inline","c8d6d67e":"df= pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","20119a98":"df.head()","8ebddf84":"df.shape","4e7e5ade":"df.info()","b1a953fc":"sns.pairplot(df,diag_kind='kde')","c70c9d8a":"sns.heatmap(df.corr(), annot=True,cmap='YlGnBu')","43094df0":"sns.displot(data= df, x='Y house price of unit area', kde=True , color='b')","3d2cd6c4":"X=df.drop('Y house price of unit area',axis=1)\ny=df['Y house price of unit area']","de7fe57d":"from sklearn.model_selection import train_test_split","f1b255a1":"X_train,X_test,y_train,y_test=train_test_split(X, y, test_size=0.3, random_state=101)","459510f2":"from sklearn.linear_model import LinearRegression","8292cc72":"model= LinearRegression()","bfed3740":"model.fit(X_train, y_train)","ee40c9f5":"pd.DataFrame(model.coef_, X.columns, columns=['Coeficient'])","836eb1f1":"y_pred=model.predict(X_test)","dcdb0be2":"pd.DataFrame({'Y_Test': y_test,'Y_Pred':y_pred }).head(5)","4e94a9ec":"from sklearn import metrics\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)\n\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","b2679c67":"df['Y house price of unit area'].mean()","b16c7aee":"test_residuals=y_test-y_pred\npd.DataFrame({'y_test':y_test,'y_pred':y_pred,'test_residuals':y_test-y_pred})","faafed10":"sns.scatterplot(x=y_test, y=y_pred)\nplt.xlabel('Y-Test')\nplt.ylabel('Y-Pred')","4380053a":"sns.scatterplot(x=y_test, y=test_residuals)\nplt.axhline(y=0, color='r', ls='--')","65a36e1f":"sns.displot(test_residuals, bins=25, kde=True,color='g')","c25ca441":"polynomial_converter=PolynomialFeatures(degree=2, include_bias=False)\npoly_features=polynomial_converter.fit_transform(X)\npoly_features.shape","2f3cf3cb":"\n# Train List of RMSE per degree\ntrain_RMSE_list=[]\n#Test List of RMSE per degree\ntest_RMSE_list=[]\n\nfor d in range(1,10):\n    \n    #Preprocessing\n    #create poly data set for degree (d)\n    polynomial_converter= PolynomialFeatures(degree=d, include_bias=False)\n    poly_features= polynomial_converter.fit_transform(X)\n    \n    \n    #Split the dataset\n    X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)\n    \n    #Train the Model\n    polymodel=LinearRegression()\n    polymodel.fit(X_train, y_train)\n    \n    #Predicting on both Train & Test Data\n    y_train_pred=polymodel.predict(X_train)\n    y_test_pred=polymodel.predict(X_test)\n    \n    #Evaluating the Model\n    \n    #RMSE of Train set\n    train_RMSE=np.sqrt(metrics.mean_squared_error(y_train, y_train_pred))\n    \n    #RMSE of Test Set\n    test_RMSE=np.sqrt(metrics.mean_squared_error(y_test, y_test_pred))\n    \n    #Append the RMSE to the Train and Test List\n    \n    train_RMSE_list.append(train_RMSE)\n    test_RMSE_list.append(test_RMSE)","00e23b7b":"pd.DataFrame({'Train RMSE List':train_RMSE_list})","47259718":"pd.DataFrame({'Ttest RMSE List':test_RMSE_list})","14d43d44":"plt.plot(range(1,6), train_RMSE_list[:5], label='Train RMSE',color='r')\nplt.plot(range(1,6), test_RMSE_list[:5], label='Test RMSE',color='b')\n\nplt.xlabel('Polynomial Degree')\nplt.ylabel('RMSE')\nplt.legend()","970db188":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()\nscaler.fit(X_train)","888b5360":"X_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)","33be8884":"#Train the Model\nfrom sklearn.linear_model import Ridge\nridge_model= Ridge(alpha=10)\nridge_model.fit(X_train, y_train)","886bd9a9":"#predict Test Data\ny_pred= ridge_model.predict(X_test)","ce9391b6":"#Evaluating the Model\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n\nMAE= mean_absolute_error(y_test, y_pred)\nMSE= mean_squared_error(y_test, y_pred)\nRMSE= np.sqrt(MSE)","2108a96f":"pd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","44926452":"#Train the Model\nfrom sklearn.linear_model import RidgeCV\nridge_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0,100), scoring='neg_mean_absolute_error')\nridge_cv_model.fit(X_train, y_train)","166200f2":"ridge_cv_model.alpha_","b51b588c":"#Predicting Test Data\ny_pred_ridge= ridge_cv_model.predict(X_test)","fc4c90a2":"MAE_ridge= mean_absolute_error(y_test, y_pred_ridge)\nMSE_ridge= mean_squared_error(y_test, y_pred_ridge)\nRMSE_ridge= np.sqrt(MSE_ridge)","5ca2768a":"pd.DataFrame([MAE_ridge, MSE_ridge, RMSE_ridge], index=['MAE', 'MSE', 'RMSE'], columns=['Ridge Metrics'])","461370cc":"ridge_cv_model.coef_","77138f2a":"from sklearn.linear_model import LassoCV","7636bf69":"lasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5)","5c073832":"lasso_cv_model.fit(X_train, y_train)","81825ad6":"lasso_cv_model.alpha_","2e973bbd":"y_pred_lasso= lasso_cv_model.predict(X_test)","44292716":"MAE_Lasso= mean_absolute_error(y_test, y_pred_lasso)\nMSE_Lasso= mean_squared_error(y_test, y_pred_lasso)\nRMSE_Lasso= np.sqrt(MSE_Lasso)\npd.DataFrame([MAE_Lasso, MSE_Lasso, RMSE_Lasso], index=['MAE', 'MSE', 'RMSE'], columns=['Lasso Metrics'])","1e1893b2":"lasso_cv_model.coef_","27008370":"#  Import the Data","866fcf63":"#  Determine the Features & Target Variable","4412a81f":"# Lasso Regression","14bc312b":"# Evalutaing the Model","3ccf099a":"#  Adjusting Model Parameters","66c9cd2b":"###  Data Overview","cf8e1c95":"# Predict Test Data","a8829fb7":"# Train the Model","1c4e96d5":"#  Split the Dataset to Train & Test","3c1c354e":"# Scaling the Features","42e5c7d2":"# Ridge Regression","d54ff599":"# Coeficient Matrix","a76d73f3":"# Exploratory Data Analysis (EDA)","30bd08cd":"# Import all Necessary Libraries","e4ad9272":"# Residuals","182a1593":"# Plot the Polynomial degree VS RMSE"}}