{"cell_type":{"02c0fdd5":"code","75c151db":"code","42ca6937":"code","0d27a094":"code","39910315":"code","25e0f02b":"code","5eea14c4":"code","3332324d":"code","980306fa":"code","c2d63406":"code","fee11c79":"code","3199a348":"code","a5d48a76":"code","79c71b6f":"code","ce75a64d":"code","8b7907b9":"code","b9015059":"code","187de45c":"code","68ae2201":"code","0725223e":"code","69605460":"code","9665e619":"code","b732f040":"code","7fc59ccb":"code","4702407d":"code","526479c8":"code","838474b3":"code","d7544ac2":"code","01111378":"code","cea018b0":"code","59a1c5d6":"code","dd816366":"markdown","4f50b9cb":"markdown","cacdb112":"markdown","bf98158e":"markdown","27f68eba":"markdown","600e2ae0":"markdown","605f09ba":"markdown","b91af419":"markdown","cad07936":"markdown","5f5392e6":"markdown","84155f54":"markdown","734d66d1":"markdown","2291d865":"markdown","725212db":"markdown","45c15ac8":"markdown"},"source":{"02c0fdd5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","75c151db":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","42ca6937":"ship = pd.read_csv('..\/input\/titanic\/train.csv')","0d27a094":"ship.head()","39910315":"sns.heatmap(ship.isnull(),yticklabels=False,cbar=False)","25e0f02b":"sns.set_style('darkgrid')\nsns.countplot(x = 'Survived',data = ship)","5eea14c4":"sns.set_style('darkgrid')\nsns.countplot(x = 'Survived',data = ship,hue = 'Sex')","3332324d":"sns.set_style('darkgrid')\nsns.countplot(x = 'Survived',data = ship,hue = 'Pclass')","980306fa":"plt.xlabel('AGE')\nship['Age'].hist(bins = 30,color = 'darkred')","c2d63406":"sns.countplot(x = 'SibSp',data = ship)","fee11c79":"plt.xlabel('FARE')\nship['Fare'].hist(bins = 30,color = 'darkred')","3199a348":"plt.figure(figsize=(11,7))\nsns.boxplot(x = 'Pclass',y = 'Age',data = ship)","a5d48a76":"def func(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        if Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n        ","79c71b6f":"ship['Age'] = ship[['Age','Pclass']].apply(func,axis=1)","ce75a64d":"sns.heatmap(ship.isnull(),yticklabels=False,cbar=False)","8b7907b9":"ship.drop('Cabin',axis=1,inplace = True)","b9015059":"ship.dropna(inplace=True)","187de45c":"ship.head()","68ae2201":"sex = pd.get_dummies(ship['Sex'],drop_first=True)\nembark = pd.get_dummies(ship['Embarked'],drop_first=True)","0725223e":"ship.drop(['Sex','Name','Ticket','Embarked'],axis=1,inplace=True)","69605460":"ship = pd.concat([ship,sex,embark],axis=1)","9665e619":"ship.head()","b732f040":"from sklearn.model_selection import train_test_split","7fc59ccb":"X = ship[['PassengerId','Pclass','Age','SibSp','Parch','Fare','male','Q','S']]\ny = ship['Survived']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\n","4702407d":"from sklearn.linear_model import LogisticRegression","526479c8":"logmodel = LogisticRegression(max_iter=10000)","838474b3":"logmodel.fit(X_train,y_train)","d7544ac2":"predictions = logmodel.predict(X_test)","01111378":"from sklearn.metrics import classification_report,confusion_matrix","cea018b0":"print(classification_report(y_test,predictions))","59a1c5d6":"print(confusion_matrix(y_test,predictions))","dd816366":"We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.","4f50b9cb":"Converting Categorical Features","cacdb112":"Now check the heatmap again","bf98158e":"Check the Head","27f68eba":"**Data Cleaning\n\nWe want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers (imputation). However we can be smarter about this and check the average age by passenger class. For example:","600e2ae0":"# Import Libraries","605f09ba":"# Missing Data","b91af419":"Now Get the data","cad07936":"Great","5f5392e6":"# > Now building a Logistic Model\nTrain Test Split","84155f54":"# EDA\n","734d66d1":" Drop the Cabin column and the row in Embarked that is NaN.","2291d865":"Roughly 20% of Age Data is Missing.","725212db":"# Train test Split","45c15ac8":"# Evaluation"}}