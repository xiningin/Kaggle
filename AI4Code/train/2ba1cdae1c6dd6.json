{"cell_type":{"8c3e2e67":"code","fce4311d":"code","abae3cd1":"code","3a1996da":"code","a808560d":"code","84288421":"code","b5a9bfc3":"code","f41d61bf":"code","0068bc9d":"code","83815df5":"code","079c56b8":"code","8e5150af":"code","3755653f":"code","f0a53d83":"code","365e20ed":"markdown"},"source":{"8c3e2e67":"# BLOCK 1. START                                                                                * * * FIRST OF ALL, CLICK '+ ADD DATA' AND SEARCH FOR TITANIC, FROM THE SIDEBAR AT RIGHT !!!\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport csv\nimport time\nimport array\nimport os\nfrom xml.dom.expatbuilder import parseString\nfrom optparse import _parse_num\nimport requests\nfrom urllib.parse import urlencode, urlparse\nimport urllib.parse\nfrom urllib.request import Request, urlopen\n# SEND ME A NOTIFICATION TO MY SMARTPHONE, ADD A MESSAGE IF YOU WANT\nMESSAGE=''\nif len(MESSAGE)==0:\n    NOTIFY_ME = requests.get(\"https:\/\/qrisys.com\/notification_kernel_titanic.php\")\nif len(MESSAGE)>0:\n    NOTIFY_ME = requests.get(\"https:\/\/qrisys.com\/notification_kernel_titanic.php?MESSAGE=\"+MESSAGE)\n\n# LOCATE AND ACCESS KAGGLE FILES\ndireccion_archivo='\/kaggle\/input'\nfor dirname, _, filenames in os.walk(direccion_archivo):\n    for filename in filenames:\n        direccion_archivo=str(os.path.join(dirname,filename))\n\n# GETTING INFORMATION FROM TRAIN.CSV\nwith open('\/kaggle\/input\/titanic\/train.csv', newline='') as csvfile:\n    data_bruta_native = list(csv.reader(csvfile))\n# GETTING INFORMATION FROM TEST.CSV\nwith open('\/kaggle\/input\/titanic\/test.csv', newline='') as csvfile:\n    data_bruta_test_native = list(csv.reader(csvfile))\n    \n# UNIFY TEST AND TRAIN\ndata_total=list()\ni=-1;N_DATOS_TRAIN=1;\nfor x in data_bruta_native:\n    i=i+1\n    if i>0:\n        N_DATOS_TRAIN=N_DATOS_TRAIN+1\n        dline=list()\n        change_honor='L.'\n        if change_honor in x[3]:\n            x[3]=str(x[3]).replace(change_honor,'')\n        change_honor='Dona.'\n        if change_honor in x[3]:\n            x[3]=str(x[3]).replace(change_honor,'Lady.')\n        change_honor='Mme.'\n        if change_honor in x[3]:\n            x[3]=str(x[3]).replace(change_honor,'Lady.')\n        change_honor='Ms.'\n        if change_honor in x[3]:\n            x[3]=str(x[3]).replace(change_honor,'Mrs.')\n        change_honor='Mlle.'\n        if change_honor in x[3]:\n            x[3]=str(x[3]).replace(change_honor,'Lady.')\n        change_honor='Countess.'\n        if change_honor in x[3]:\n            x[3]=str(x[3]).replace(change_honor,'Lady.')\n        dline.append(x[0]);dline.append(x[1]);dline.append(x[2]);dline.append(x[3]);dline.append(x[4]);dline.append(x[5]);\n        dline.append(x[6]);dline.append(x[7]);dline.append(x[8]);dline.append(x[9]);dline.append(x[10]);\n        oblivions=0;family=0;\n        if len(x[11])==0:\n            x[11]='S'\n            oblivions=oblivions+1\n        dline.append(x[11])\n        if len(x[10])==0:\n            oblivions=oblivions+1\n        if len(x[5])==0:\n            oblivions=oblivions+1\n        if (float(x[6])==0) & (float(x[7])==0):\n            family=0\n        if (float(x[6])>0) & (float(x[7])==0):\n            family=1\n        if (float(x[6])==0) & (float(x[7])>0):\n            family=2\n        if (float(x[6])>0) & (float(x[7])>0):\n            family=2\n        dline.append(str(family));dline.append(str(oblivions));\n        data_total.append(dline)\ni=-1;N_DATOS_TEST=0;\nfor x in data_bruta_test_native:\n    i=i+1\n    if i>0:\n        N_DATOS_TEST=N_DATOS_TEST+1\n        dline=list()\n        change_honor='L.'\n        if change_honor in x[2]:\n            x[2]=str(x[2]).replace(change_honor,'')\n        change_honor='Dona.'\n        if change_honor in x[2]:\n            x[2]=str(x[2]).replace(change_honor,'Lady.')\n        change_honor='Mme.'\n        if change_honor in x[2]:\n            x[2]=str(x[2]).replace(change_honor,'Lady.')\n        change_honor='Ms.'\n        if change_honor in x[2]:\n            x[2]=str(x[2]).replace(change_honor,'Mrs.')\n        change_honor='Mlle.'\n        if change_honor in x[2]:\n            x[2]=str(x[2]).replace(change_honor,'Lady.')\n        change_honor='Countess.'\n        if change_honor in x[2]:\n            x[2]=str(x[2]).replace(change_honor,'Lady.')\n        dline.append(x[0]);dline.append('2');dline.append(x[1]);dline.append(x[2]);dline.append(x[3]);dline.append(x[4]);\n        dline.append(x[5]);dline.append(x[6]);dline.append(x[7]);dline.append(x[8]);dline.append(x[9]);\n        oblivions=0;family=0;\n        if len(x[10])==0:\n            x[10]='S'\n            oblivions=oblivions+1\n        dline.append(x[10])\n        if len(x[9])==0:\n            oblivions=oblivions+1\n        if len(x[4])==0:\n            oblivions=oblivions+1\n        if (float(x[5])==0) & (float(x[6])==0):\n            family=0\n        if (float(x[5])>0) & (float(x[6])==0):\n            family=1\n        if (float(x[5])==0) & (float(x[6])>0):\n            family=2\n        if (float(x[5])>0) & (float(x[6])>0):\n            family=2\n        dline.append(str(family));dline.append(str(oblivions));\n        data_total.append(dline)\n        \n# INPUT OPTIONS (if you want to study all data, only males or only females)\nprint(' ----------------------- THE TITANIC PROBLEM ------------------------- \\n')\n# OPCIONES = input(\" -> OPCIONES ( 1 = Everything \/ 2 = Females \/ 3 = Males ) :  \")\nOPCIONES='1';\n\nif OPCIONES=='1':\n    data_bruta=data_total\nif OPCIONES=='2':\n    data_bruta=list()\n    for x in data_total:\n        if x[4]=='female':\n            data_bruta.append(x)\nif OPCIONES=='3':\n    data_bruta=list()\n    for x in data_total:\n        if x[4]=='male':\n            data_bruta.append(x)\n# DATA CONFIGURATION\nprint('\\n ORIGINAL DATA HEADERS: ')\nprint(' '+str(data_bruta_native[0]))\nTOTAL_DATOS = len(data_bruta)\nprint('\\n\\n There are' , TOTAL_DATOS, 'travellers in the whole Dataset')\n\n# GENERAL SURVIVAL RATE\nRate_survive = 0\nfor x in data_bruta:\n    if x[1] == '1':\n        Rate_survive = Rate_survive + 1\nprint(' TRAIN: Survivals,', Rate_survive, 'travellers (', Rate_survive \/ N_DATOS_TRAIN * 100, '% )')\nprint(' TOTAL: Survivals,', Rate_survive, 'travellers (', Rate_survive \/ TOTAL_DATOS * 100, '% )')\ntime.sleep(1.8)","fce4311d":"# BLOCK 2 -> PCLASS (Very easy study)\nprint('\\n -PCLASS')\nprint('  [ First , Second , Third ]')\nPR_Pclass = [0, 0, 0]\nN_Pclass = [0, 0, 0]\nfor x in data_bruta:\n    if x[2] == '1':\n        N_Pclass[0] = N_Pclass[0] + 1\n        if x[1] == '1':\n            PR_Pclass[0] = PR_Pclass[0] + 1\n    if x[2] == '2':\n        N_Pclass[1] = N_Pclass[1] + 1\n        if x[1] == '1':\n            PR_Pclass[1] = PR_Pclass[1] + 1\n    if x[2] == '3':\n        N_Pclass[2] = N_Pclass[2] + 1\n        if x[1] == '1':\n            PR_Pclass[2] = PR_Pclass[2] + 1\nN_suman = N_Pclass[0] + N_Pclass[1] + N_Pclass[2]\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\nPR_Pclass[0] = PR_Pclass[0] \/ N_Pclass[0]\nPR_Pclass[1] = PR_Pclass[1] \/ N_Pclass[1]\nPR_Pclass[2] = PR_Pclass[2] \/ N_Pclass[2]\nprint(' ', PR_Pclass)\nprint(' ', N_Pclass)\ntime.sleep(1.0)","abae3cd1":"# BLOCK 3 -> HONOR (it belongs to the name of the passenger)\nprint('\\n -HONOR')\nPR_honour = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nN_honour = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nEDAD_media= [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nCANT_media=  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nHonours=list()\nfor y in data_bruta:\n    NO=0\n    palabras=y[3].split(sep=\" \")\n    titulo=''\n    for xx in palabras:\n        if xx.__contains__('.'):\n            titulo=xx\n    for x in Honours:\n        if x==titulo:\n            NO=1\n    if (NO==0) & (len(titulo)>0):\n        Honours.append(titulo)\nprint(' ',Honours)   \ni = -1\nfor x in Honours:\n    i = i + 1\n    titulo=str(x)\n    j = 0\n    for y in data_bruta:\n        j = j + 1\n        if y[3].__contains__(titulo):\n            N_honour[i] = N_honour[i] + 1\n            if y[1] == '1':\n                PR_honour[i] = PR_honour[i] + 1\n            if len(y[5])>0:\n                EDAD_media[i]=float(EDAD_media[i])+float(y[5])\n                CANT_media[i]=int(CANT_media[i])+1\nN_suman = sum(N_honour)\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\ni = -1\nfor x in PR_honour:\n    i = i + 1\n    if (N_honour[i]>0):\n        PR_honour[i] = x \/ N_honour[i]\nprint(' ',PR_honour)\nprint(' ',N_honour)\ni=0\nfor x in EDAD_media:\n    if float(CANT_media[i])>0:\n        EDAD_media[i]=float(x)\/float(CANT_media[i])\n    i=i+1\nprint('  -MEAN AGES PER HONOR: ',EDAD_media)\nfor x in data_bruta:\n    i=-1\n    for y in Honours:\n        i=i+1\n        if y in x[3]:\n            if len(x[5])==0:\n                x[5]=str(EDAD_media[i])\n                #x[5]=str(250)\ntime.sleep(1.0)","3a1996da":"# BLOCK 4-> GENDER or SEX (Very easy study)\nprint('\\n -GENDER')\nprint('  [ Female , Male ]')\nPR_gender = [0, 0]\nN_gender = [0, 0]\nfor x in data_bruta:\n    if x[4] == 'female':\n        N_gender[0] = N_gender[0] + 1\n        if x[1] == '1':\n            PR_gender[0] = PR_gender[0] + 1\n    if x[4] == 'male':\n        N_gender[1] = N_gender[1] + 1\n        if x[1] == '1':\n            PR_gender[1] = PR_gender[1] + 1\nN_suman = N_gender[0] + N_gender[1]\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\nif OPCIONES=='1':\n    PR_gender[0] = PR_gender[0] \/ N_gender[0]\n    PR_gender[1] = PR_gender[1] \/ N_gender[1]\nif OPCIONES=='2':\n    PR_gender[0] = PR_gender[0] \/ N_gender[0]\n    PR_gender[1] = PR_gender[0]\nif OPCIONES=='3':\n    PR_gender[0] = PR_gender[1] \/ N_gender[1]\n    PR_gender[1] = PR_gender[0]\nprint(' ', PR_gender)\nprint(' ', N_gender)\ntime.sleep(1.0)","a808560d":"# BLOCK 5 -> AGE (Grouping ranges of ages)\nprint('\\n -AGES')\nPR_Age = [0, 0, 0, 0, 0, 0, 0, 0, 0]\nN_Age = [0, 0, 0, 0, 0, 0, 0, 0, 0]\nfor x in data_bruta:\n    if float(x[5])<=6:\n        N_Age[0]=N_Age[0]+1\n        if x[1]=='1':\n            PR_Age[0]=PR_Age[0]+1\n    if (float(x[5])>6) & (float(x[5])<=16):\n        N_Age[1]=N_Age[1]+1\n        if x[1]=='1':\n            PR_Age[1]=PR_Age[1]+1\n    if (float(x[5])>16) & (float(x[5])<=21):\n        N_Age[2]=N_Age[2]+1\n        if x[1]=='1':\n            PR_Age[2]=PR_Age[2]+1\n    if (float(x[5])>21) & (float(x[5])<=29):\n        N_Age[3]=N_Age[3]+1\n        if x[1]=='1':\n            PR_Age[3]=PR_Age[3]+1\n    if (float(x[5])>29) & (float(x[5])<=36):\n        N_Age[4]=N_Age[4]+1\n        if x[1]=='1':\n            PR_Age[4]=PR_Age[4]+1\n    if (float(x[5])>36) & (float(x[5])<=45):\n        N_Age[5]=N_Age[5]+1\n        if x[1]=='1':\n            PR_Age[5]=PR_Age[5]+1\n    if (float(x[5])>45) & (float(x[5])<=54):\n        N_Age[6]=N_Age[6]+1\n        if x[1]=='1':\n            PR_Age[6]=PR_Age[6]+1\n    if (float(x[5])>54) & (float(x[5])<=200):\n        N_Age[7]=N_Age[7]+1\n        if x[1]=='1':\n            PR_Age[7]=PR_Age[7]+1 \n    if float(x[5])==250:\n        N_Age[8]=N_Age[8]+1\n        if x[1]=='1':\n            PR_Age[8]=PR_Age[8]+1   \nN_suman = sum(N_Age)\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\ni = -1\nfor x in PR_Age:\n    i = i + 1\n    if N_Age[i] == 0:\n        PR_Age[i] = 0\n    if N_Age[i] != 0:\n        PR_Age[i] = x \/ N_Age[i]\nprint(' ', PR_Age)\nprint(' ', N_Age)\ntime.sleep(1.0)","84288421":"# BLOCK 6 -> SIBLINGS AND SPOUSE (Very easy study)\nprint('\\n -SIBLING AND SPOUSE')\nprint('  [ 0 , 1 , >1 ]')\nPR_SSValues = [0, 0, 0]\nN_SSValues = [0, 0, 0]\nfor x in data_bruta:\n    if float(x[6])==0:\n        N_SSValues[0]=N_SSValues[0]+1\n        if x[1]=='1':\n            PR_SSValues[0]=PR_SSValues[0]+1\n    if float(x[6])==1:\n        N_SSValues[1]=N_SSValues[1]+1\n        if x[1]=='1':\n            PR_SSValues[1]=PR_SSValues[1]+1\n    if float(x[6])>=2:\n        N_SSValues[2]=N_SSValues[2]+1\n        if x[1]=='1':\n            PR_SSValues[2]=PR_SSValues[2]+1\nN_suman = sum(N_SSValues)\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\ni = -1\nfor x in PR_SSValues:\n    i = i + 1\n    if N_SSValues[i] == 0:\n        PR_SSValues[i] = 0\n    if N_SSValues[i] != 0:\n        PR_SSValues[i] = x \/ N_SSValues[i]\nprint(' ', PR_SSValues)\nprint(' ', N_SSValues)\ntime.sleep(1.0)","b5a9bfc3":"# BLOCK 7 -> PARENTS AND CHILDRENS (Very easy study)\nprint('\\n -PARENTS AND CHILDRENS')\nprint('  [ 0 , 1 , >1 ]')\nPR_PCValues = [0, 0, 0]\nN_PCValues = [0, 0, 0]\nfor x in data_bruta:\n    if float(x[7])==0:\n        N_PCValues[0]=N_PCValues[0]+1\n        if x[1]=='1':\n            PR_PCValues[0]=PR_PCValues[0]+1\n    if float(x[7])==1:\n        N_PCValues[1]=N_PCValues[1]+1\n        if x[1]=='1':\n            PR_PCValues[1]=PR_PCValues[1]+1\n    if float(x[7])>=2:\n        N_PCValues[2]=N_PCValues[2]+1\n        if x[1]=='1':\n            PR_PCValues[2]=PR_PCValues[2]+1\nN_suman = sum(N_PCValues)\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\ni = -1\nfor x in PR_PCValues:\n    i = i + 1\n    if N_PCValues[i] == 0:\n        PR_PCValues[i] = 0\n    if N_PCValues[i] != 0:\n        PR_PCValues[i] = x \/ N_PCValues[i]\nprint(' ', PR_PCValues)\nprint(' ', N_PCValues)\ntime.sleep(1.0)","f41d61bf":"# BLOCK 8-> FARE (Grouping rates of prices)\nprint('\\n -FARE')\nunique_ticket=list()\ni=-1\nfor x in data_bruta:\n    i=i+1\n    NO=0\n    if i>1:\n        for y in unique_ticket:\n            if x[8]==y:\n                NO=1\n        if NO==0:\n            unique_ticket.append(x[8])\nn_unique_ticket=[]\nn_unique_ticket = [0 for i in range(len(unique_ticket))] \ni=-1\nfor x in unique_ticket:\n    i=i+1\n    for y in data_bruta:\n        if y[8]==x:\n            n_unique_ticket[i]=n_unique_ticket[i]+1\nfare_unique_ticket=[]\nfare_unique_ticket=[0 for i in range(len(unique_ticket))]\ni=-1\nfor x in unique_ticket:\n    i=i+1\n    for y in data_bruta:\n        if y[8]==x:\n            if len(y[9])==0:\n                y[9]='23'\n            fare_unique_ticket[i]=float(y[9])\/float(n_unique_ticket[i])\n            y[9]=str(fare_unique_ticket[i])\n            #print(' Ticket '+y[8]+' -> '+y[9])\n\nPR_Fare = [0, 0, 0, 0, 0, 0 ,0]\nN_Fare = [0, 0, 0, 0, 0, 0, 0]\ni = -1\nfor x in data_bruta:\n    if float(x[9])<=7:\n        N_Fare[0]=N_Fare[0]+1\n        if x[1]=='1':\n            PR_Fare[0]=PR_Fare[0]+1\n    if (float(x[9])>7) & (float(x[9])<=8):\n        N_Fare[1]=N_Fare[1]+1\n        if x[1]=='1':\n            PR_Fare[1]=PR_Fare[1]+1\n    if (float(x[9])>8) & (float(x[9])<=10):\n        N_Fare[2]=N_Fare[2]+1\n        if x[1]=='1':\n            PR_Fare[2]=PR_Fare[2]+1\n    if (float(x[9])>10) & (float(x[9])<=12.5):\n        N_Fare[3]=N_Fare[3]+1\n        if x[1]=='1':\n            PR_Fare[3]=PR_Fare[3]+1\n    if (float(x[9])>12.5) & (float(x[9])<=22):\n        N_Fare[4]=N_Fare[4]+1\n        if x[1]=='1':\n            PR_Fare[4]=PR_Fare[4]+1\n    if (float(x[9])>22) & (float(x[9])<=29):\n        N_Fare[5]=N_Fare[5]+1\n        if x[1]=='1':\n            PR_Fare[5]=PR_Fare[5]+1\n    if float(x[9])>29:\n        N_Fare[6]=N_Fare[6]+1\n        if x[1]=='1':\n            PR_Fare[6]=PR_Fare[6]+1\nN_suman = sum(N_Fare)\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\ni = -1\nfor x in PR_Fare:\n    i = i + 1\n    if N_Fare[i] == 0:\n        PR_Fare[i] = 0\n    if N_Fare[i] != 0:\n        PR_Fare[i] = x \/ N_Fare[i]\nprint(' ', PR_Fare)\nprint(' ', N_Fare)\ntime.sleep(1.0)","0068bc9d":"# BLOCK 9 -> CABINS (Very easy study)\nprint('\\n -CABINS')\nCAValues = ('0', 'A', 'B', 'C', 'D', 'E', '1')\nprint(' ',CAValues)\nPR_CAValues = [0, 0, 0, 0, 0, 0, 0]\nN_CAValues = [0, 0, 0, 0, 0, 0, 0]\nCA_ya=list()\ni = -1\nfor x in CAValues:\n    i = i + 1\n    j = 0\n    for y in data_bruta:\n        j=j+1\n        ref=y[10].replace('1','2')\n        ref=ref.replace('0','2')\n        cambia=1\n        if len(y[10])==0:\n            ref='0'\n            cambia=0\n        if '0' in ref:\n            cambia=0\n        if 'A' in ref:\n            cambia=0\n        if 'B' in ref:\n            cambia=0\n        if 'C' in ref:\n            cambia=0\n        if 'D' in ref:\n            cambia=0\n        if 'E' in ref:\n            cambia=0\n        if cambia==1:\n            ref='1'\n        if x in ref:\n            NO=0\n            for yaya in CA_ya:\n                if yaya==j:\n                    NO=1\n            if NO==0:\n                CA_ya.append(j)\n                N_CAValues[i] = N_CAValues[i] + 1\n                if y[1] == '1':\n                    PR_CAValues[i] = PR_CAValues[i] + 1\nN_suman = sum(N_CAValues)\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\ni = -1\nfor x in PR_CAValues:\n    i = i + 1\n    if N_CAValues[i] == 0:\n        PR_CAValues[i] = 0\n    if N_CAValues[i] != 0:\n        PR_CAValues[i] = x \/ N_CAValues[i]\nprint(' ', PR_CAValues)\nprint(' ', N_CAValues)\ntime.sleep(1.0)","83815df5":"# BLOCK 10 -> EMBARKED (Very easy study)\nprint('\\n -EMBARKED')\nprint('  [ C , Q , S ]')\nPR_embarked = [0, 0, 0]\nN_embarked = [0, 0, 0]\nfor x in data_bruta:\n    if x[11] == 'C':\n        N_embarked[0] = N_embarked[0] + 1\n        if x[1] == '1':\n            PR_embarked[0] = PR_embarked[0] + 1\n    if x[11] == 'Q':\n        N_embarked[1] = N_embarked[1] + 1\n        if x[1] == '1':\n            PR_embarked[1] = PR_embarked[1] + 1\n    if x[11] == 'S':\n        N_embarked[2] = N_embarked[2] + 1\n        if x[1] == '1':\n            PR_embarked[2] = PR_embarked[2] + 1\nN_suman = N_embarked[0] + N_embarked[1] + N_embarked[2]\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\nPR_embarked[0] = PR_embarked[0] \/ N_embarked[0]\nPR_embarked[1] = PR_embarked[1] \/ N_embarked[1]\nPR_embarked[2] = PR_embarked[2] \/ N_embarked[2]\nprint(' ', PR_embarked)\nprint(' ', N_embarked)\ntime.sleep(1.0)","079c56b8":"# BLOCK 11 -> FAMILY (Very easy study)\nprint('\\n -FAMILY')\nprint('  [ Lonely , Relation , Generational ]')\nPR_family = [0, 0, 0 ]\nN_family = [0, 0, 0 ]\nfor x in data_bruta:\n    if x[12] == '0':\n        N_family[0] = N_family[0] + 1\n        if x[1] == '1':\n            PR_family[0] = PR_family[0] + 1\n    if x[12] == '1':\n        N_family[1] = N_family[1] + 1\n        if x[1] == '1':\n            PR_family[1] = PR_family[1] + 1\n    if x[12] == '2':\n        N_family[2] = N_family[2] + 1\n        if x[1] == '1':\n            PR_family[2] = PR_family[2] + 1\nN_suman = N_family[0] + N_family[1] + N_family[2]\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\nPR_family[0] = PR_family[0] \/ N_family[0]\nPR_family[1] = PR_family[1] \/ N_family[1]\nPR_family[2] = PR_family[2] \/ N_family[2]\nprint(' ', PR_family)\nprint(' ', N_family)\ntime.sleep(1.0)","8e5150af":"# BLOCK 12 -> OBLIVION (Very easy study)\nprint('\\n -OBLIVION')\nprint('  [ 0 , 1 , 2 , 3 ]')\nPR_oblivion = [0, 0, 0, 0]\nN_oblivion = [0, 0, 0, 0]\nfor x in data_bruta:\n    if x[13] == '0':\n        N_oblivion[0] = N_oblivion[0] + 1\n        if x[1] == '1':\n            PR_oblivion[0] = PR_oblivion[0] + 1\n    if x[13] == '1':\n        N_oblivion[1] = N_oblivion[1] + 1\n        if x[1] == '1':\n            PR_oblivion[1] = PR_oblivion[1] + 1\n    if x[13] == '2':\n        N_oblivion[2] = N_oblivion[2] + 1\n        if x[1] == '1':\n            PR_oblivion[2] = PR_oblivion[2] + 1\n    if x[13] == '3':\n        N_oblivion[3] = N_oblivion[3] + 1\n        if x[1] == '1':\n            PR_oblivion[3] = PR_oblivion[3] + 1\nN_suman = N_oblivion[0] + N_oblivion[1] + N_oblivion[2] + N_oblivion[3]\nif TOTAL_DATOS > N_suman:\n    print('  * There are' , TOTAL_DATOS - N_suman, 'lost values')\nPR_oblivion[0] = PR_oblivion[0] \/ N_oblivion[0]\nPR_oblivion[1] = PR_oblivion[1] \/ N_oblivion[1]\nPR_oblivion[2] = PR_oblivion[2] \/ N_oblivion[2]\n#PR_oblivion[3] = PR_oblivion[3] \/ N_oblivion[3]\nprint(' ', PR_oblivion)\nprint(' ', N_oblivion)\ntime.sleep(1.0)","3755653f":"# BLOCK 13. TRANSFORM ORIGINAL INFORMATION INTO MATRIX OF VALUES\nprint('\\n\\n -------------------------------------------------------------------- ')\nprint(' Adapting matrix...')\nMATRIX=list()\nif OPCIONES=='1':\n    linea='function D=DAT()\\n\\nD = [ '\nif OPCIONES=='2':\n    linea='function D=DAT_female()\\n\\nD = [ '\nif OPCIONES=='3':\n    linea='function D=DAT_male()\\n\\nD = [ '\ni=0\nfor x in data_bruta:\n    i=i+1\n    dline=list()\n    linea=linea+'\\n'\n    linea=linea+' '+str(x[0])+' '+str(x[1])\n    dline.append(x[0])\n    \n    LINE_DAT=0\n    if x[2]=='1':\n        linea=linea+' '+str(PR_Pclass[0]);dline.append(PR_Pclass[0]);\n        LINE_DAT=1\n    if x[2]=='2':\n        linea=linea+' '+str(PR_Pclass[1]);dline.append(PR_Pclass[1]);\n        LINE_DAT=1\n    if x[2]=='3':\n        linea=linea+' '+str(PR_Pclass[2]);dline.append(PR_Pclass[2]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost PCLASS in row '+str(i));print(x)     \n    LINE_DAT=0\n    j=-1\n    for y in Honours:\n        j=j+1\n        if y in x[3]:\n            linea=linea+' '+str(PR_honour[j]);dline.append(PR_honour[j]);\n            LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost HONOR in row '+str(i));print(x)   \n        print(x) \n        linea=linea+' '+str(0.3333)       \n    LINE_DAT=0\n    if x[4]=='male':\n        linea=linea+' '+str(PR_gender[1]);dline.append(PR_gender[1]);\n        LINE_DAT=1\n    if x[4]=='female':\n        linea=linea+' '+str(PR_gender[0]);dline.append(PR_gender[0]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost GENDER in row '+str(i));print(x)       \n    LINE_DAT=0\n    if float(x[5])<=6:\n        linea=linea+' '+str(PR_Age[0]);dline.append(PR_Age[0]);\n        LINE_DAT=1\n    if (float(x[5])>6) & (float(x[5])<=16):\n        linea=linea+' '+str(PR_Age[1]);dline.append(PR_Age[1]);\n        LINE_DAT=1\n    if (float(x[5])>16) & (float(x[5])<=21):\n        linea=linea+' '+str(PR_Age[2]);dline.append(PR_Age[2]);\n        LINE_DAT=1\n    if (float(x[5])>21) & (float(x[5])<=29):\n        linea=linea+' '+str(PR_Age[3]);dline.append(PR_Age[3]);\n        LINE_DAT=1\n    if (float(x[5])>29) & (float(x[5])<=36):\n        linea=linea+' '+str(PR_Age[4]);dline.append(PR_Age[4]);\n        LINE_DAT=1\n    if (float(x[5])>36) & (float(x[5])<=45):\n        linea=linea+' '+str(PR_Age[5]);dline.append(PR_Age[5]);\n        LINE_DAT=1\n    if (float(x[5])>45) & (float(x[5])<=54):\n        linea=linea+' '+str(PR_Age[6]);dline.append(PR_Age[6]);\n        LINE_DAT=1\n    if (float(x[5])>54) & (float(x[5])<=200):\n        linea=linea+' '+str(PR_Age[7]);dline.append(PR_Age[7]);\n        LINE_DAT=1\n    if float(x[5])==250:\n        linea=linea+' '+str(PR_Age[8]);dline.append(PR_Age[8]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> Lost AGE in row '+str(i));print(x)        \n    LINE_DAT=0\n    if float(x[6])==0:\n        linea=linea+' '+str(PR_SSValues[0]);dline.append(PR_SSValues[0]);\n        LINE_DAT=1\n    if float(x[6])==1:\n        linea=linea+' '+str(PR_SSValues[1]);dline.append(PR_SSValues[1]);\n        LINE_DAT=1\n    if float(x[6])>=2:\n        linea=linea+' '+str(PR_SSValues[2]);dline.append(PR_SSValues[2]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost SIBS in row '+str(i));print(x)            \n    LINE_DAT=0\n    if float(x[7])==0:\n        linea=linea+' '+str(PR_PCValues[0]);dline.append(PR_PCValues[0]);\n        LINE_DAT=1\n    if float(x[7])==1:\n        linea=linea+' '+str(PR_PCValues[1]);dline.append(PR_PCValues[1]);\n        LINE_DAT=1\n    if float(x[7])>=2:\n        linea=linea+' '+str(PR_PCValues[2]);dline.append(PR_PCValues[2]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost PARCH in row '+str(i));print(x)           \n    LINE_DAT=0\n    if float(x[9])<=7:\n        linea=linea+' '+str(PR_Fare[0]);dline.append(PR_Fare[0]);\n        LINE_DAT=1\n    if (float(x[9])>7) & (float(x[9])<=8):\n        linea=linea+' '+str(PR_Fare[1]);dline.append(PR_Fare[1]);\n        LINE_DAT=1\n    if (float(x[9])>8) & (float(x[9])<=10):\n        linea=linea+' '+str(PR_Fare[2]);dline.append(PR_Fare[2]);\n        LINE_DAT=1\n    if (float(x[9])>10) & (float(x[9])<=12.5):\n        linea=linea+' '+str(PR_Fare[3]);dline.append(PR_Fare[3]);\n        LINE_DAT=1\n    if (float(x[9])>12.5) & (float(x[9])<=22):\n        linea=linea+' '+str(PR_Fare[4]);dline.append(PR_Fare[4]);\n        LINE_DAT=1\n    if (float(x[9])>22) & (float(x[9])<=29):\n        linea=linea+' '+str(PR_Fare[5]);dline.append(PR_Fare[5]);\n        LINE_DAT=1\n    if float(x[9])>29:\n        linea=linea+' '+str(PR_Fare[6]);dline.append(PR_Fare[6]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost FARE in row '+str(i));print(x)         \n    LINE_DAT=0\n    ref=x[10].replace('1','2');ref=ref.replace('0','2')\n    cambia=1\n    if len(x[10])==0:\n        ref='0'\n        cambia=0\n    if '0' in ref:\n        linea=linea+' '+str(PR_CAValues[0]);dline.append(PR_CAValues[0]);\n        LINE_DAT=1\n        cambia=0\n    if 'A' in ref:\n        linea=linea+' '+str(PR_CAValues[1]);dline.append(PR_CAValues[1]);\n        LINE_DAT=1\n        cambia=0\n    if 'B' in ref:\n        linea=linea+' '+str(PR_CAValues[2]);dline.append(PR_CAValues[2]);\n        LINE_DAT=1\n        cambia=0\n    if 'C' in ref:\n        linea=linea+' '+str(PR_CAValues[3]);dline.append(PR_CAValues[3]);\n        LINE_DAT=1\n        cambia=0\n    if 'D' in ref:\n        linea=linea+' '+str(PR_CAValues[4]);dline.append(PR_CAValues[4]);\n        LINE_DAT=1\n        cambia=0\n    if 'E' in ref:\n        linea=linea+' '+str(PR_CAValues[5]);dline.append(PR_CAValues[5]);\n        LINE_DAT=1\n        cambia=0\n    if cambia==1:\n        linea=linea+' '+str(PR_CAValues[6]);dline.append(PR_CAValues[6]);\n        LINE_DAT=1\n    if LINE_DAT==0:\n        print(' -LOG -> lost CABIN in row '+str(i));print(x)              \n    LINE_DAT=0\n    if x[11] == 'C':\n        linea=linea+' '+str(PR_embarked[0]);dline.append(PR_embarked[0]);\n        LINE_DAT=1\n    if x[11] == 'Q':\n        linea=linea+' '+str(PR_embarked[1]);dline.append(PR_embarked[1]);\n        LINE_DAT=1\n    if x[11] == 'S':\n        linea=linea+' '+str(PR_embarked[2]);dline.append(PR_embarked[2]);\n        LINE_DAT=1          \n    if LINE_DAT==0:\n        print(' -LOG -> lost EMBARK in row '+str(i));print(x)                 \n    LINE_DAT=0\n    if x[12] == '0':\n        linea=linea+' '+str(PR_family[0]);dline.append(PR_family[0]);\n        LINE_DAT=1\n    if x[12] == '1':\n        linea=linea+' '+str(PR_family[1]);dline.append(PR_family[1]);\n        LINE_DAT=1\n    if x[12] == '2':\n        linea=linea+' '+str(PR_family[2]);dline.append(PR_family[2]);\n        LINE_DAT=1   \n    if LINE_DAT==0:\n        print(' -LOG -> lost FAMILY in row '+str(i));print(x)                \n    LINE_DAT=0\n    if x[13] == '0':\n        linea=linea+' '+str(PR_oblivion[0]);dline.append(PR_oblivion[0]);\n        LINE_DAT=1\n    if x[13] == '1':\n        linea=linea+' '+str(PR_oblivion[1]);dline.append(PR_oblivion[1]);\n        LINE_DAT=1\n    if x[13] == '2':\n        linea=linea+' '+str(PR_oblivion[2]);dline.append(PR_oblivion[2]);\n        LINE_DAT=1   \n    if LINE_DAT==0:\n        print(' -LOG -> lost OBLIVION in row '+str(i));print(x)         \n        \n    MATRIX.append(dline)\n            \nlinea=linea+' ] ;'\nif OPCIONES=='1':\n    outF = open(\"DAT.m\", \"w\")\nif OPCIONES=='2':\n    outF = open(\"DAT_female.m\", \"w\")\nif OPCIONES=='3':\n    outF = open(\"DAT_male.m\", \"w\")\noutF.write(linea)","f0a53d83":"# BLOCK 14. SOLVING MODEL AND UPLOADING RESULTS\n# I use my own algorithm to look for the best solution.\n# If my public score is a little bit higher is because I\u00b4ve found better models than the following one:\nPid=list()\nSur=list()\nSS=[1.04148841771704,0.416925383023442,1.93701360964777,11.3489862384857,5.43912036507226,31.0296301622725,1.24135036069345,8.64962654670336,1.01440600902306,11.8071651386805,4.2519724869832,-1.55278693994422]\nfor x in MATRIX:\n    if float(x[0])>891:\n        SURV='0'\n        F=float(x[1])**SS[0] + float(x[2])**SS[1] + float(x[3])**SS[2] + float(x[4])**SS[3] + float(x[5])**SS[4] + float(x[6])**SS[5] + float(x[7])**SS[6] + float(x[8])**SS[7] + float(x[9])**SS[8] + float(x[10])**SS[9] + float(x[11])**SS[10] + SS[11]\n        if F>=0:\n            SURV='1'\n        if F<0:\n            SURV='0'\n        Pid.append(str(x[0]))\n        Sur.append(str(SURV))\nmy_submission = pd.DataFrame({'PassengerId': Pid, 'Survived': Sur})\nmy_submission.to_csv('submission.csv', index=False)\nprint('\\n -------------------------------------------------------------------- ')\nprint('             * TITANIC PROBLEM IS SUCCESFULLY FINISHED *')","365e20ed":"TIPS IN ORDER TO MAKE THIS WORK\n\n    Tip A. This kernel is bound for be executed in local computer. But everything I made locally and manually, while inspecting data, is represented in this code\n    \n    Tip B. Download the Titanic database, open train.csv and test.csv with Excel and make the following changes:\n            - If the passanger doesn\u00b4t have ticket FARE -> copy the value from other passenger with the same TICKET NUMBER\n            - If there is more than one word containing a point \".\" in the cell of passenger NAME -> delete the unuseful (there is someone with an unuseful \"L.\" in the name)\n            - If there is not EMBARKED -> surely it was in S (Southampton)\n            - Look for equivalencies between HONOR titles\n            \n    Tip C. My model is solved with a NelderMead + GradientDescent + Annealing algorithm which I\u00b4ve been working on for several years and it has different versions depending on the nature of the problem. This is a BINARY CLASSIFICATION problem, we have 11 values that we ought to adjust with another 12 values.\n    \n    Tip D. Since that we need to solve train.csv, constructing combinations of passengers from the train.csv that satisfies at least S similarity with the test.csv could help us to get more accuracy. Try to look for an accuracy in your training greater than 0.815\n \nSUMMARY OF CODE BLOCKS\n\n     Block 1.  START.    Getting original data from train.csv and test.csv. Input Options (OPCIONES) if you want study all data, males or females.\n     \n     Block 2.  PCLASS.   Easy extraction of probabilities (P1)\n     \n     Block 3.  HONOR.    Obtain all honor titles first contained in NAME, then easy extraction of probabilities (P2)\n     \n     Block 4.  SEX.      Easy extraction of probabilities (P3)\n     \n     Block 5.  AGE.      Making groups of people of different ages, then easy extraction of probabilities (P4)\n     \n     Block 6.  SIBSP.    Easy extraction of probabilities (P5)\n     \n     Block 7.  PARCH.    Easy extraction of probabilities (P6)\n     \n     Block 8.  FARE.     Obtain all different TICKET NUMBER and count how many of them were sold. After that get the original FARE for each ticket and make groups of passengers of different cost (P7)\n     \n     Block 9.  CABIN.    Easy extraction of probabilities (P8)\n     \n     Block 10. EMBARK.   Easy extraction of probabilities (P9)\n     \n     Block 11. FAMILY.   Combination of PARCH and SIBSP. Easy extraction of probabilities (P10)\n     \n     Block 12. OBLIVION. Counting lost data. Easy extraction of probabilities (P11)\n     \n     Block 13. MATRIX.   Getting the matrix with the PROBABILITIES that we extracted before\n     \n     Block 14. MODEL.    Implementing model in order to predict either a passenger survives or not. Uploading results."}}