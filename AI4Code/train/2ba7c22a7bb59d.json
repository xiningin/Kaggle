{"cell_type":{"c7490d4a":"code","caac7f62":"code","5090ef83":"code","8ab064cb":"code","09f6d060":"code","632e2494":"code","c6d701b0":"code","bf794b71":"code","03a85679":"code","de8a4a93":"code","4b0b5ce7":"code","48e553e5":"code","9d399fa4":"code","a48ece35":"code","f2768356":"code","2f4bebcd":"code","c2eba1b8":"code","edc8aa0a":"code","f2f7ac52":"code","8f96ccaa":"code","792d887f":"code","7eef6ecd":"code","70b49913":"code","d2c9b997":"code","a9f24e06":"code","f0bf4a5d":"code","9b958007":"code","a335012e":"code","546e0470":"code","5adc9d73":"code","d44e32b3":"code","406b5df7":"code","e52ef8c8":"code","cddad5dd":"code","f212cc5c":"code","bf1b238b":"code","f8f5aa20":"code","a2c446bc":"code","c1f7d7d2":"code","cd70dd22":"code","f3b67f7c":"code","5ee7a337":"code","3afc9639":"code","8595a9a1":"code","b1ccea6a":"code","9b1f437f":"code","7719d31f":"code","36578b75":"code","37654d27":"code","1783a51f":"code","522e0ad3":"code","b0d5ba85":"code","5d616ee5":"code","e2443920":"code","fc3ea091":"code","37a1f5a2":"code","550cf491":"code","052c726d":"code","c6a97c3e":"code","fe15484a":"code","4b6ac908":"code","1b5df059":"code","17d242ee":"code","249cf140":"code","c66528d1":"code","adb6e103":"code","62a1eb37":"code","97d299a6":"code","1c2182e3":"code","bdc6b7b1":"code","9910e389":"code","a6151950":"code","d3935e9e":"code","8fd36a2c":"code","bacb11bf":"code","f12fe1cc":"code","ea5fa61b":"code","1a8ec8dd":"code","747a6abc":"code","e4fa39ea":"code","a911333a":"code","9fb9c71c":"code","498f8cc9":"code","85b48df6":"code","8a689dc5":"code","bc15beea":"code","23792e30":"code","8521db90":"code","f03d9741":"code","2fd574ac":"code","5f0d208d":"code","1561f81b":"code","ae1616ae":"code","29eadbd4":"code","8771469a":"code","123ca2aa":"code","b3d92fbc":"code","12834b82":"code","9bc3131e":"code","22c04967":"code","f7f7bf69":"code","e4511d5d":"markdown","fd09e495":"markdown","66b659e5":"markdown","b64ec875":"markdown","e376a790":"markdown","2c68b687":"markdown","e5220769":"markdown","0677add2":"markdown","cb87a63d":"markdown","a84c4229":"markdown","962d9289":"markdown","fe202e91":"markdown","a4322153":"markdown","69979374":"markdown","5205c19e":"markdown","537083be":"markdown","072e1e2e":"markdown","dcc04de4":"markdown","6fe472d8":"markdown","b6f266ea":"markdown","fdc0e516":"markdown","c864c2fb":"markdown","00527ddc":"markdown","5a59d421":"markdown","e80d7916":"markdown","6c741168":"markdown","e128ece0":"markdown","cab3a1cc":"markdown","7f864fbf":"markdown","2599c8de":"markdown","9bb43e40":"markdown","df35b2d5":"markdown","e901f457":"markdown","7abe6439":"markdown","bf50fe93":"markdown","3e0a5b34":"markdown","719dd4f3":"markdown","b7761787":"markdown","717e6d0f":"markdown","e331878d":"markdown","e09777b4":"markdown","bd7baa3c":"markdown","5f99affb":"markdown","a93b02ab":"markdown","050b8d36":"markdown","8388f9c5":"markdown","20488a93":"markdown","69df7bbc":"markdown","fabd6f6e":"markdown","c15230fb":"markdown","a642c804":"markdown","02622ccc":"markdown","ce893948":"markdown","f7fb75c2":"markdown","be1139b5":"markdown","98388a61":"markdown","fbce95d4":"markdown","2fab6b3f":"markdown","532bc0e8":"markdown","f72a22e9":"markdown","f7cf878d":"markdown","15cf3757":"markdown","bad808e9":"markdown","0c9e2a34":"markdown","206461ff":"markdown","e2048656":"markdown","3552afb1":"markdown","806381af":"markdown","48ac24da":"markdown","11e2d51f":"markdown","a9a192cf":"markdown","5988605e":"markdown","fd77d8e8":"markdown","b5f4df4f":"markdown","523b99a4":"markdown"},"source":{"c7490d4a":"# import all packages and set plots to be embedded inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n%matplotlib inline","caac7f62":"# Loading data.\ndf = pd.read_csv('..\/input\/prosper-loan-data\/prosperLoanData.csv')","5090ef83":"# Showing first 5 rows.\ndf.head()","8ab064cb":"df.duplicated().value_counts()","09f6d060":"df.shape","632e2494":"df.info()","c6d701b0":"# Selecting 17 features for visualization.\nnew_df = df[['LoanKey','Term','LoanStatus','BorrowerAPR','BorrowerRate','ListingCategory (numeric)','BorrowerState','Occupation','EmploymentStatus','LoanOriginalAmount','CreditScoreRangeLower','CreditScoreRangeUpper','DebtToIncomeRatio','Investors','StatedMonthlyIncome','MonthlyLoanPayment',\n       'IncomeVerifiable']]","bf794b71":"new_df.info()","03a85679":"new_df.duplicated().value_counts()","de8a4a93":"# Removing duplicate data.\nnew_df2=new_df.drop_duplicates()","4b0b5ce7":"new_df2.duplicated().value_counts()","48e553e5":"new_df2.isnull().sum()","9d399fa4":"# Removing null data.\nnew_df2=new_df2.dropna()","a48ece35":"new_df2.isna().sum()","f2768356":"new_df2.shape","2f4bebcd":"new_df2.head()","c2eba1b8":"new_df2.info()","edc8aa0a":"# Functioon to calculate cuberoot.\ndef cuberoot_trans(x, inverse = False):\n    \"\"\" quick function for computing cube root and cube operations \"\"\"\n    if not inverse:\n        return x ** (1\/3)\n    else:\n        return x ** 3\n# Function to calculate log.\ndef log_trans(z,inverse=False):\n\n    if not inverse:\n\n        return np.log10(z)\n    else:\n        return z**3","f2f7ac52":"new_df2['Term'].value_counts()","8f96ccaa":"new_df2['Term'].value_counts().values[0]","792d887f":"base_color = sns.color_palette()[0]\nsns.countplot(x='Term',data=new_df2,color=base_color,order=new_df2['Term'].value_counts().index)\nplt.xlabel('Term (Months)')\n# Adding counts of each term in our data on top of of each bar.\nfor i in range (new_df2['Term'].value_counts().shape[0]):\n    count = new_df2['Term'].value_counts().values[i]\n    plt.text(i, count+3000, count, ha = 'center', va='top')\nplt.title('The length of the loan expressed in months.');","7eef6ecd":"new_df2['LoanStatus'].value_counts()","70b49913":"# Countplot.\nsns.countplot(y='LoanStatus',data = new_df2,color=base_color)\nplt.title('Displaying counts for each loan status');","d2c9b997":"# Plotting displot.\nsns.displot(data=new_df2,x='BorrowerAPR',rug=True,rug_kws={'c':'purple'})\nplt.title('Distribution of borrower APR');","a9f24e06":"# Plotting histogram.\nbins = np.arange(0,new_df2['BorrowerRate'].max()+0.01,0.01) \nplt.hist(x='BorrowerRate',data=new_df2,bins=bins)\nplt.title('Distribution of borrower Rate')\nplt.xlabel('borrower rate')\nplt.ylabel('count');","f0bf4a5d":"# Category names for each numerical value.\nlist_cat={0:'Not Available',1:'Debt Consolidation',2:'Home Improvement',3:'Business',4:'Personal Loan',5:'Student Use',6:'Auto',\n 7:'Other',8:'Baby&Adoption',9:'Boat',10:'Cosmetic Procedure',11:'Engagement Ring',12:'Green Loans',\n 13:'Household Expenses',14:'Large Purchases',15:'Medical\/Dental',16:'Motorcycle',17:'RV',18:'Taxes',19:'Vacation',20:'Wedding Loans'}","9b958007":"# Running a loop over dataset and dictionary created.\n#Appending dictionary values to a list based on keys which are equal to the values present in our listing category.\nl=[]\nfor i in range(new_df2.shape[0]):\n    for j in range(len(list_cat)):\n        if new_df2['ListingCategory (numeric)'].values[i] == list(list_cat.keys())[j]:\n            l.append(list(list_cat.values())[j])","a335012e":"# Assigning a new column with listing labels.\nnew_df2['ListingLabels'] = l","546e0470":"new_df2.head(5)","5adc9d73":"# Plotting countplot.\nbase_color2 = sns.color_palette()[1]\nplt.figure(figsize=(10,8))\nsns.countplot(y='ListingLabels',data=new_df2,order=new_df2['ListingLabels'].value_counts().index,color=base_color2)\nplt.title('Displaying counts of listing labels in our data');","d44e32b3":"# Plotting map of US states using plotly.\nfig = px.choropleth(locations=new_df2['BorrowerState'].value_counts().index, locationmode=\"USA-states\",color= new_df2['BorrowerState'].value_counts().values,scope=\"usa\", hover_name=new_df2['BorrowerState'].value_counts().index,hover_data={'Borrowers':new_df2['BorrowerState'].value_counts().values})\nfig.layout.coloraxis.colorbar.title = 'Number of Borrowers'\nfig.layout.title = 'U.S state map showing states and counts of borrowers from each states in the data.'\nfig.show()\n","406b5df7":"# Plotting countplot.\nplt.figure(figsize=(12,9))\nsns.countplot(y='BorrowerState',data=new_df2,color=base_color2,order = new_df2['BorrowerState'].value_counts().index)\nplt.title('Displaying counts for each state in data');","e52ef8c8":"occupations = new_df2['Occupation'].value_counts()\n\noccupations[occupations >10000].plot.barh(color='grey',rot=0)\nplt.title('Displaying occupation with counts greater than 10000',fontdict={'size':20})\nplt.xlabel('Count',fontdict={'size':15})\nplt.ylabel('Occupation',fontdict={'size':15})\nplt.show()\n\noccupations[(occupations > 1000) & (occupations < 5000)].plot.barh(color='grey',rot=0)\nplt.title('Displaying occupation with counts greater than 1000 and less than 5000',fontdict={'size':20})\nplt.xlabel('Count',fontdict={'size':15})\nplt.ylabel('Occupation',fontdict={'size':15})\nplt.show()\n\noccupations[(occupations > 200) & (occupations < 1000)].plot.barh(color='grey',rot=0)\nplt.title('Displaying occupation with counts greater than 200 and less than 1000',fontdict={'size':20})\nplt.xlabel('Count',fontdict={'size':15})\nplt.ylabel('Occupation',fontdict={'size':15})\nplt.show()\n\noccupations[occupations < 200].plot.barh(color='grey',rot=0)\nplt.title('Displaying occupation with counts less than 200',fontdict={'size':20})\nplt.xlabel('Count',fontdict={'size':15})\nplt.ylabel('Occupation',fontdict={'size':15})\nplt.show()","cddad5dd":"new_df2['EmploymentStatus'].value_counts()","f212cc5c":"# Plotting countplot.\nbase_color4 = sns.color_palette()[3]\nplt.figure(figsize=(8,8))\nsns.countplot(x='EmploymentStatus',data=new_df2,color=base_color4)\nplt.xticks(rotation=25)\nplt.title('Displaying counts of employment status');","bf1b238b":"new_df2['LoanOriginalAmount'].describe()","f8f5aa20":"# Plotting histogram.\nbins = np.arange(1000,new_df2['LoanOriginalAmount'].max()+40,300)\nplt.hist(x='LoanOriginalAmount',data=new_df2,bins=bins)\nplt.title('Distribution of loan original amount')\nplt.xlabel('Loan original amount($)');","a2c446bc":"np.log10(new_df2['LoanOriginalAmount'].describe())","c1f7d7d2":"# Again plotting histogram but with log transgormation.\nbins = 10** np.arange(3,4.5+0.01,0.02)\ntick = [1000,2000,3000,5000,10000,15000,30000]\nlabels=['{}'.format(x)for x in tick]\nplt.hist(x='LoanOriginalAmount',data=new_df2,bins=bins)\nplt.xscale('log')\nplt.xticks(tick,labels)\nplt.title('Distribution of loan original amount (Log Scale)')\nplt.xlabel('Loan original amount($)');","cd70dd22":"new_df2['DebtToIncomeRatio'].describe()","f3b67f7c":"# Plotting histogram\nplt.hist(x='DebtToIncomeRatio',data=new_df2)\nplt.title('distribution of DTI before changing bin size and removing outliers')\nplt.xlabel('DTI (Debt to income ratio)');","5ee7a337":"# Select outliers in debt to income ratio with ratio greater than 1.\noutliers_dti = (new_df2['DebtToIncomeRatio']>1)","3afc9639":"out_df = new_df2.loc[outliers_dti,:]","8595a9a1":"#Removing outlier from our data.\nfilter_df = new_df2.loc[-outliers_dti,:]","b1ccea6a":"filter_df.head()","9b1f437f":"filter_df.shape","7719d31f":"# Plotting histogram after removal of outliers.\nplt.hist(x='DebtToIncomeRatio',data=filter_df)\nplt.xlabel('DTI Ratio')\nplt.title('Distribution of debt to income ratio without chaging bin size');","36578b75":"# Plotting a histogram with more number of bins.\nbins = np.arange(0,1+0.01,0.01)\ntick = [0,0.1,0.2,0.3,0.4,0.6,0.8,1]\nlabels = ['{}'.format(v)for v in tick]\nplt.hist(x='DebtToIncomeRatio',data=filter_df,bins=bins)\nplt.xlabel('DTI Ratio')\n#plt.xscale('log');\nplt.xticks(np.array(tick),labels)\nplt.xlim(0,1.1)\nplt.title('distribution of DTI after changing bin size');","37654d27":"# Plotting displot just to check the distribution of DTI.\nsns.displot(x='DebtToIncomeRatio',data=filter_df,kind='hist',rug_kws={'c':'red'})\nplt.xlim(0,0.6)\nplt.title('distribution of DTI');","1783a51f":"# Plotting histogram by scaling the x-axis to log-type, and changing the axis limit.\nplt.figure(figsize=[18,7])\nbins = 10**np.arange(-1.07,4.6+0.1,0.01)\nticks = [0,5e2,1e3,2e3,3e3,4e3,5e3,10e3,15e3,20e3,25e3,30e3,35e3,40e3]\nlabels = ['{}'.format(v)for v in ticks]\nplt.hist(x='StatedMonthlyIncome',data=filter_df,bins=bins)\nplt.xscale('log')\nplt.xticks(10**(log_trans(np.array([0.001,100,500,1e3,2e3,3e3,4e3,5e3,6e3,7e3,8e3,9e3,10e3,15e3,20e3,25e3,30e3,35e3,40e3]))),['0','100','500','1k','2k','3k','4k','5k','6k','7k','8k','9k','10k','15k','20k','25k','30k','35k','40k'],rotation=25);\nplt.xlim(10**(log_trans(200)),10**(log_trans(40500)))\nplt.xlabel('Stated monthly income ($)',fontdict={'size':15})\nplt.ylabel('Count',fontdict={'size':15})\nplt.title('Distribution of stated monthly income (Log Scale)');","522e0ad3":"filter_df.info()","b0d5ba85":"loan_df = filter_df.reset_index()","5d616ee5":"# Dropping index.\nloan_df=loan_df.drop('index',axis=1)","e2443920":"loan_df.info()","fc3ea091":"# Making a list of all numerical variables.\nnumeric_var = ['Term','BorrowerAPR','BorrowerRate','LoanOriginalAmount','CreditScoreRangeLower','CreditScoreRangeUpper','DebtToIncomeRatio','Investors','StatedMonthlyIncome']","37a1f5a2":"# Plotting a heat map to show the correlation of each numerical variable.\nplt.figure(figsize=(10,8))\nsns.heatmap(data=loan_df[numeric_var].corr(),annot=True,fmt='.3f')\nplt.title('Correlation of numerical variable using heat map');","550cf491":"# plot matrix: sample 500 loans so that plots are clearer.\nsamples = np.random.choice(loan_df.shape[0], 10000, replace = False)\nloan_samp = loan_df.loc[samples,:]\npg = sns.PairGrid(data = loan_samp, vars = numeric_var,height=2)\npg = pg.map_diag(plt.hist, bins = 20)\npg.map_offdiag(plt.scatter,alpha=1\/6)\npg.fig.suptitle('Displaying how numerical features are related with each other using pairgrid',y=1.02);","052c726d":"loan_df[['CreditScoreRangeLower','CreditScoreRangeUpper']].describe()","c6a97c3e":"# Selecting outliers with credit score range for both, lower and upper, less than 300.\noutlier_data = (loan_df['CreditScoreRangeLower']<300) | (loan_df['CreditScoreRangeUpper']<300)","fe15484a":"# Removing outliers from data.\nloan_df=loan_df.loc[-outlier_data,:]","4b6ac908":"loan_df = loan_df.reset_index()","1b5df059":"# Plotting heat map without outliers in our dataset.\nplt.figure(figsize=(10,8))\nsns.heatmap(data=loan_df[numeric_var].corr(),annot=True,fmt='.3f')\nplt.title('Correlation of numerical variables.');","17d242ee":"# plot matrix: sample 500 loans so that plots are clearer.\nsamples = np.random.choice(loan_df.shape[0], 10000, replace = False)\nloan_samp = loan_df.loc[samples,:]\npg = sns.PairGrid(data = loan_samp, vars = numeric_var,height=2)\npg = pg.map_diag(plt.hist, bins = 20)\npg.map_offdiag(plt.scatter,alpha=1\/6)\npg.fig.suptitle('Displaying how numerical features are related with each other using pairgrid',y=1.02);","249cf140":"# Converting credit score range from numerical dataype to categorical data type.\ncs = np.array(loan_df['CreditScoreRangeLower'])\n# Dictionary of class (key) associated with its range of credit score (value).\nd = {'Exceptional':np.arange(800,881,1),'Very Good':np.arange(740,800,1),'Good':np.arange(670,740,1),'Fair':np.arange(580,670,1),'Poor':np.arange(300,580,1)}\nl=[]\nns=[]\nfor i in range(cs.shape[0]):\n    for key,val in d.items():\n        if cs[i] in val:\n            l.append(key)\nloan_df=loan_df.assign(credit_score_class=l)\n# Convertin dataype to categorical.\ncredit_class=['Poor','Fair','Good','Very Good','Exceptional']\nt=pd.api.types.CategoricalDtype(categories=credit_class,ordered=True)\nloan_df['credit_score_class']=loan_df['credit_score_class'].astype(t)","c66528d1":"# The \"inner\" argument represents the datapoints in the violin interior. \n# It can take any value from {\u201cbox\u201d, \u201cquartile\u201d, \u201cpoint\u201d, \u201cstick\u201d, None}\n# If \"box\", it draws a miniature boxplot. \nbase_c=sns.color_palette()[0]\nsns.violinplot(data=loan_df, x='credit_score_class', y='BorrowerAPR', color=base_c, innner=None)\nplt.xticks(rotation=15)\nplt.title('Violin plot showing relation between credit score class and APR');","adb6e103":"# Plotting boxplot.\nplt.figure(figsize=(12,10))\nbase_c = sns.color_palette()[4]\nsns.boxplot(x='LoanStatus',y='BorrowerAPR',data=loan_df,color=base_c)\nplt.xticks(rotation=25)\nplt.title('Box plot showing relation between APR and loan status');","62a1eb37":"# Plotting histogram with seaborn's facetgrid function.\nbins = np.arange(0.01,0.4+0.01,0.01)\nf=sns.FacetGrid(data=loan_df,col='LoanStatus',col_wrap=4,sharey=False,sharex=False,height=4.5)\nf.map(plt.hist,'BorrowerAPR',bins=bins)\nf.fig.suptitle('Borrower APR vs Loan status',y=1.02);","97d299a6":"# Plotting pointplot\nplt.figure(figsize=(23,5))\nplt.subplot(1,2,1)\nbase_c=sns.color_palette()[9]\nbase_c2=sns.color_palette()[8]\nsns.pointplot(data=loan_df,x='LoanStatus',y='BorrowerAPR',join=False,ci='sd',color=base_c)\nplt.xticks(rotation=25)\nplt.title('Point plot showing relation between loan status and APR')\n# plotting violin plot.\nplt.subplot(1,2,2)\nsns.violinplot(data=loan_df,x='LoanStatus',y='BorrowerAPR',inner='quartile',color=base_c2)\nplt.xticks(rotation=25)\nplt.title('Violin plot showing relation between loan status and APR');","1c2182e3":"for lab in ['BorrowerAPR','BorrowerRate']:\n    bins = np.arange(0,loan_df[lab].max()+0.04,0.04)\n    bins = [round(x,2) for x in bins]\n    loan_df[f'{lab} cat'] = pd.cut(x=loan_df[lab],bins=bins,labels=bins[1:],include_lowest=False)","bdc6b7b1":"plt.figure(figsize=(18, 7))\nsns.heatmap(loan_df.groupby(['BorrowerAPR cat','BorrowerRate cat']).size().unstack('BorrowerRate cat').replace({0:np.nan}),annot=True,\n           fmt='.0f',cmap='viridis_r',vmin=0,cbar_kws={'label':'Count of borrower Rate with respect to borrower APR'})\nplt.title('Borrower Rate affect on Borrower APR',fontdict={'size':20})\nplt.xlabel('Borrower Rate',fontdict={'size':15})\nplt.ylabel('Borrower APR',fontdict={'size':15})\nplt.yticks(rotation=0)\nplt.show();","9910e389":"# Plotting regplot.\nplt.figure(figsize=(12,10))\nsns.regplot(data = loan_df, x = 'Term', y = 'BorrowerAPR', truncate=False, x_jitter=2,scatter_kws={'alpha':1\/30})\nplt.title('Regplot showing distribution of loan term w.r.t APR');","a6151950":"plt.figure(figsize=(16,8))\n# Plotting boxplot.\nplt.subplot(1,2,1)\nbase_c=sns.color_palette()[9]\nbase_c2=sns.color_palette()[7]\nsns.boxplot(x='Term',y='BorrowerAPR',data=loan_df,color=base_c2)\nplt.title('Term vs Borrower APR (Boxplot)')\n# Plotting violinplot.\nplt.subplot(1,2,2)\nsns.violinplot(x='Term',y='BorrowerAPR',data=loan_df,color=base_c,inner='quartile')\nplt.title('Term vs Borrower APR (Violinplot)');","d3935e9e":"# Plotting scatter plot.\nsns.scatterplot(x='LoanOriginalAmount',y='BorrowerAPR',data=loan_df,x_jitter=0.3,alpha=1\/4)\nplt.title('Loan original amount vs APR');","8fd36a2c":"plt.figure(figsize=(20,8))\nbins_x2 = np.arange(1000,35000+5000,3000)\nbins_y2=np.arange(0.05,0.40+0.06,0.04)\nlabels = ['{}'.format(x) for x in bins_x2]\ngt = plt.hist2d(y='BorrowerAPR',x='LoanOriginalAmount',data=loan_df,cmin=0.5,cmap='viridis_r',bins=[bins_x2,bins_y2])\ncount = gt[0]\nfor i in range(count.shape[0]):\n    for j in range(count.shape[1]):\n        annot = count[i,j]\n        if annot!=np.nan and annot >= 2000:\n            plt.text(x=gt[1][i]+50,y=gt[2][j]+0.005,s=int(annot),color='white')\n        elif annot !=np.nan and annot > 0:\n             plt.text(x=gt[1][i]+50,y=gt[2][j]+0.005,s=int(annot),color='black')\nplt.colorbar()\nplt.xticks(bins_x2,labels)\nplt.title('Heatmap showing influence of loan original amount on APR')\nplt.xlabel('LOA')\nplt.ylabel('APR');","bacb11bf":"# plotting box plot.\nsamples = np.random.choice(loan_df.shape[0], 20000, replace = False)\nloan_samp = loan_df.loc[samples,:]\nbase_c=sns.color_palette()[9]\nbase_c2=sns.color_palette()[5]\ng = sns.PairGrid(data = loan_samp, y_vars = ['LoanOriginalAmount','BorrowerAPR'], x_vars = 'EmploymentStatus',height = 4.9,diag_sharey=False, aspect = 3)\ng.map(sns.boxplot,color=base_c)\ng.fig.suptitle('Employment status vs Loan original amount')\nplt.title('Employment status vs APR')\nplt.show()\n# plotting countplot.","f12fe1cc":"# Plotting violin plot using seaborn's pairgrid with APR values >=0.20.\nbad_apr = loan_df[loan_df['BorrowerAPR']>=0.2]\n#samples = np.random.choice(loan_df.shape[0], 20000, replace = False)\n#loan_samp = loan_df.loc[samples,:]\nbase_c=sns.color_palette()[9]\nbase_c2=sns.color_palette()[5]\ng = sns.PairGrid(data = bad_apr, y_vars = ['LoanOriginalAmount','BorrowerAPR'], x_vars = 'EmploymentStatus',height = 4.9,diag_sharey=False, aspect = 3)\ng.map(sns.violinplot,inner='quartile',color=base_c)\ng.fig.suptitle('Employment status vs loan original amount (APR >=0.20)')\nplt.title('Employment status vs Borrower APR (APR >=0.20)')\nplt.show()","ea5fa61b":"# Plotting box plot using seaborn's pairgrid with APR values >0.20.\nbad_apr = loan_df[loan_df['BorrowerAPR']>=0.2]\n#samples = np.random.choice(loan_df.shape[0], 20000, replace = False)\n#loan_samp = loan_df.loc[samples,:]\nbase_c=sns.color_palette()[9]\ng = sns.PairGrid(data = bad_apr, y_vars = ['LoanOriginalAmount','BorrowerAPR'], x_vars = 'EmploymentStatus',height = 4.9,diag_sharey=False, aspect = 3)\ng.map(sns.boxplot,color=base_c)\ng.fig.suptitle('Employment status vs loan original amount (APR >=0.20)')\nplt.title('Employment status vs Borrower APR (APR >=0.20)')\nplt.show()","1a8ec8dd":"# Grouping data by 'Occupation' variable and calculating avergae borrower APR for each occupation.\nocc_apr=loan_df.groupby('Occupation')['BorrowerAPR'].mean().reset_index()","747a6abc":"occ_apr","e4fa39ea":"# Plotting line plot.\nplt.figure(figsize=(10,10))\nplt.errorbar(y='Occupation', x='BorrowerAPR', data=occ_apr)\nplt.title('Occupation vs borrower APR');","a911333a":"# Plotting line plots for fiiferent APRs.\n# Function to assign different color palettes to line plot\ndef base_color(c=0):\n    l = sns.color_palette()[c]\n    return l\nfilter1=occ_apr[occ_apr['BorrowerAPR']<0.2]\nf2 = occ_apr['BorrowerAPR'].between(0.2,0.21,inclusive=False)\nfilter2 = occ_apr.loc[f2,:]\nf3 = occ_apr['BorrowerAPR'].between(0.21,0.22,inclusive=False)\nfilter3 = occ_apr.loc[f3,:]\nf4 = occ_apr['BorrowerAPR'].between(0.22,0.23,inclusive=False)\nfilter4 = occ_apr.loc[f4,:]\nf5 = occ_apr['BorrowerAPR'].between(0.23,0.25,inclusive=False)\nfilter5 = occ_apr.loc[f5,:]\nplt.figure(figsize=[26,40])\n# Line plot for APR less than 0.20\nplt.subplot(5,1,1)\nplt.scatter(x='Occupation',y='BorrowerAPR',data=filter1)\nplt.errorbar(x='Occupation',y='BorrowerAPR',data=filter1,c=base_color(c=2),linestyle='--',)\nplt.xticks(rotation=20)\nplt.ylabel('Average borrower APR')\nplt.title('Occupation vs Average borrower APR (<0.2)')\nplt.xlabel('Occupation')\n# Line plot for APR greater than 0.20 and less than 0.21\nplt.subplot(5,1,2)\nplt.scatter(x='Occupation',y='BorrowerAPR',data=filter2)\nplt.errorbar(x='Occupation',y='BorrowerAPR',data=filter2,c=base_color(c=1),linestyle='-.',)\nplt.xticks(rotation=20)\nplt.title('Occupation vs Average borrower APR (between 0.2 and 0.21)')\nplt.xlabel('Occupation')\nplt.ylabel('Average borrower APR')\n# Line plot for APR greater than 0.21 and less than 0.22\nplt.subplot(5,1,3)\nplt.scatter(x='Occupation',y='BorrowerAPR',data=filter3)\nplt.errorbar(x='Occupation',y='BorrowerAPR',data=filter3,c=base_color(c=3),linestyle=':',)\nplt.xticks(rotation=20)\nplt.title('Occupation vs Average borrower APR (between 0.21 and 0.22)')\nplt.xlabel('Occupation')\nplt.ylabel('Average borrower APR')\n# Line plot for APR greater than 0.22 and less than 0.23\nplt.subplot(5,1,4)\nplt.scatter(x='Occupation',y='BorrowerAPR',data=filter4)\nplt.errorbar(x='Occupation',y='BorrowerAPR',data=filter4,c=base_color(c=5),linestyle='--')\nplt.xticks(rotation=25)\nplt.title('Occupation vs Average borrower APR (between 0.22 and 0.23)')\nplt.xlabel('Occupation')\nplt.ylabel('Average borrower APR')\n# Line plot for APR greater than 0.23 and less than 0.25\nplt.subplot(5,1,5)\nplt.scatter(x='Occupation',y='BorrowerAPR',data=filter5)\nplt.errorbar(x='Occupation',y='BorrowerAPR',data=filter5,c=base_color(c=4),linestyle='dotted',)\nplt.xticks(rotation=20)\nplt.title('Occupation vs Average borrower APR (between 0.23 and 0.25)')\nplt.xlabel('Occupation')\nplt.ylabel('Average borrower APR');","9fb9c71c":"# Plotting countplot using seaborn's facetgrid.\nls=sns.FacetGrid(data=loan_df,col='LoanStatus',col_wrap=3,height=5,sharey=False,sharex=False)\nls.map(sns.countplot,'credit_score_class',order=['Poor','Fair','Good','Very Good','Exceptional'])\nls.fig.suptitle('Loan status vs credit score class',y=1.02);","498f8cc9":"# Set a number of bins into which the data will be grouped.\n# Set bin edges, and compute center of each bin \nbins_edges = np.arange(0,1+0.1,0.01)\nbins_center = bins_edges[:-1]+0.0025\n# Cut the bin values into discrete intervals. Returns a Series object.\ndispl_binned = pd.cut(loan_df['DebtToIncomeRatio'], bins_edges, include_lowest = True)\ndispl_binned\n\n","85b48df6":"bins_edges = np.arange(0,1+0.1,0.01)\nbins_center = bins_edges[:-1]+0.0025\ndispl_binned = pd.cut(loan_df['DebtToIncomeRatio'], bins_edges, include_lowest = True)\nplt.figure(figsize=[11.69, 8.27])\ncomb_mean = loan_df['BorrowerAPR'].groupby(displ_binned).mean()\ncomb_std = loan_df['BorrowerAPR'].groupby(displ_binned).std()\n\n# Plot the summarized data\n#plt.errorbar(x=bins_center, y=comb_mean,yerr=comb_std,)\nline_color = sns.color_palette('dark')[3]\nplt.scatter(data=loan_df,x = 'DebtToIncomeRatio', y = 'BorrowerAPR',alpha=1\/20)\nplt.scatter(x = bins_center, y = comb_mean)\nplt.errorbar(x = bins_center, y = comb_mean, c = line_color)\nplt.errorbar(x = bins_center, y = comb_std, c = line_color, linestyle = '--')\n#plt.errorbar(x = x_winmean, y = y_q3, c = line_color, linestyle = '--')\nplt.title('Debt to income ratio vs Average borrower APR ---:Standard deviation, -. :Mean',fontdict={'size':20})\nplt.xlabel('Debt to income ratio (changed bins size)',fontdict={'size':15})\nplt.ylabel('Average borrower APR',fontdict={'size':15});","8a689dc5":"# Set a number of bins into which the data will be grouped.\n# Set bin edges, and compute center of each bin \nbins_edges = np.arange(1,1189+100,100)\nbins_center = bins_edges[:-1]+50\n# Cut the bin values into discrete intervals. Returns a Series object.\ndispl_binned = pd.cut(loan_df['Investors'], bins_edges, include_lowest = True)\ndispl_binned\n","bc15beea":"plt.figure(figsize=[18,10])\ncomb_mean = loan_df['BorrowerAPR'].groupby(displ_binned).mean()\ncomb_std = loan_df['DebtToIncomeRatio'].groupby(displ_binned).std()\n\n# Plot the summarized data\nplt.errorbar(x=bins_center, y=comb_mean)\nplt.xticks(rotation=15);\nplt.xlabel('investors')\nplt.ylabel('Average APR')\nplt.title('Investors vs Average APR');","23792e30":"# Taking data with monthly income less than 50000.\nincome = loan_df[loan_df['StatedMonthlyIncome']<=50000]","8521db90":"income['StatedMonthlyIncome'].describe()","f03d9741":"plt.figure(figsize=[ 11.69, 8.27])\nbins_edges = np.arange(0,40000+100,2000)\nbins_center = bins_edges[:-1]+1000\ndispl_binned = pd.cut(income['StatedMonthlyIncome'], bins_edges, include_lowest = True)\ncomb_mean = income['BorrowerAPR'].groupby(displ_binned).mean()\ncomb_std = income['BorrowerAPR'].groupby(displ_binned).std()\n\n# Plot the summarized data\nplt.scatter(data=income,x='StatedMonthlyIncome',y='BorrowerAPR',alpha=1\/14)\nplt.scatter(x=bins_center,y=comb_mean)\nplt.errorbar(x = bins_center, y = comb_mean, c = line_color)\nplt.errorbar(x = bins_center, y = comb_std, c = line_color, linestyle = '--')\n#plt.errorbar(x = x_winmean, y = y_q3, c = line_color, linestyle = '--')\nplt.title(' Stated Monthly Income vs Average borrower APR ---:Standard deviation, -. :Mean',fontdict={'size':20})\nplt.xlabel('Stated Monthly Income ($)',fontdict={'size':15})\nplt.ylabel('Average borrower APR',fontdict={'size':15});","2fd574ac":"# Plotting boxplot using seaborn's facetgrid.\ng = sns.PairGrid(data = loan_df, x_vars = ['BorrowerAPR', 'BorrowerRate'],\n                y_vars = 'LoanStatus',height=9,aspect=0.6)\ng.map(sns.boxplot, color=base_color(1))\ng.fig.suptitle('Loan status by borrower APR and borrower Rate',y=1.02);","5f0d208d":"# Plotting heatmap using seaborn's facetgrid.\nbins_x = np.arange(0,loan_df['BorrowerAPR'].max()+0.01,0.02)\nbins_y = np.arange(0,loan_df['BorrowerRate'].max()+0.01,0.03)\ng = sns.FacetGrid(data = loan_df, col = 'LoanStatus', col_wrap = 4, height = 4.7)\ng.map(plt.hist2d, 'BorrowerAPR', 'BorrowerRate',bins=[bins_x,bins_y], cmap = 'viridis_r', cmin = 0.5)\ng.set_xlabels('APR')\ng.set_ylabels('Rate')\ng.fig.suptitle('Loan status by borrower rate and APR',y=1.01)\n\nplt.show()\n","1561f81b":"#bins_x = np.arange(1000,np.log10(loan_df['LoanOriginalAmount'].max())+0.01,0.2)\n#bins_y = 10**(np.arange(0,loan_df['DebtToIncomeRatio'].max()+0.1,0.1))\n# Plotting heatmap using seavorn's facetgrid\ng = sns.FacetGrid(data = loan_df, col = 'LoanStatus', col_wrap = 4, height = 4,sharex=False,sharey=False)\ng.map(plt.hist2d, 'LoanOriginalAmount', 'DebtToIncomeRatio',cmap = 'inferno_r',cmin=0.5)\ng.set_xlabels('loa')\ng.set_ylabels('dti')\ng.fig.suptitle('Loan status by DTI and loan amount',y=1.01)\nplt.colorbar()\nplt.show()","ae1616ae":"# Plotting heatmap for 'Term' = 12.\nterm12 = loan_df[loan_df['Term'] == 12]\n#bins_x = np.arange(1000,term12['LoanOriginalAmount'].max()+0.01,0.05)\n#bins_y = np.arange(0,term12['DebtToIncomeRatio'].max()+0.01,0.05)\ng = sns.FacetGrid(data = term12, col = 'LoanStatus',row='credit_score_class', sharex=False,sharey=False,height = 5,aspect=0.85)\ng.map(plt.hist2d,'LoanOriginalAmount','DebtToIncomeRatio',cmap='inferno_r',cmin=0.5)\ng.set_xlabels('loa')\ng.set_ylabels('dti')\ng.fig.suptitle('Loan status by loan amount, credit score class and DTI',y=1.01)\n#g.set(xlim=(1000, 37000), ylim=(0, 1.3), xticks=[1000, 5000, 10000,15000,20000,25000,30000,350000], yticks=[0, 0.1, 0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1])\n\nplt.show()","29eadbd4":"# Plotting heatmap for 'Term' = 36.\nterm36 = loan_df[loan_df['Term'] == 36]\n#bins_x = np.arange(1000,term12['LoanOriginalAmount'].max()+0.01,0.05)\n#bins_y = np.arange(0,term12['DebtToIncomeRatio'].max()+0.01,0.05)\ng = sns.FacetGrid(data = term36, col = 'LoanStatus',row='credit_score_class', sharex=False,sharey=False,height = 5,aspect=0.85)\ng.map(plt.hist2d,'LoanOriginalAmount','DebtToIncomeRatio',cmap='inferno_r',cmin=0.5)\ng.set_xlabels('loa')\ng.set_ylabels('dti')\ng.fig.suptitle('Loan status by loan amount,credit score class and DTI',y=1.01)\n#g.set(xlim=(1000, 37000), ylim=(0, 1.3), xticks=[1000, 5000, 10000,15000,20000,25000,30000,350000], yticks=[0, 0.1, 0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1])\n\nplt.show()","8771469a":"# Plotting heatmap for 'Term' = 60.\nterm60 = loan_df[loan_df['Term'] == 60]\n#bins_x = np.arange(1000,term12['LoanOriginalAmount'].max()+0.01,0.05)\n#bins_y = np.arange(0,term12['DebtToIncomeRatio'].max()+0.01,0.05)\ng = sns.FacetGrid(data = term60, col = 'LoanStatus',row='credit_score_class',sharex=False,sharey=False,height = 5,aspect=0.85)\ng.map(plt.hist2d,'LoanOriginalAmount','DebtToIncomeRatio',cmap='inferno_r',cmin=0.5)\ng.set_xlabels('loa')\ng.set_ylabels('dti')\ng.fig.suptitle('Loan status by loan amount,credit score class and DTI',y=1.01)\n#g.set(xlim=(1000, 37000), ylim=(0, 1.3), xticks=[1000, 5000, 10000,15000,20000,25000,30000,350000], yticks=[0, 0.1, 0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1])\n\nplt.show()","123ca2aa":"# Grouping data by credit score class,loan status and calculating mean of monthly income for each grouping variable.\nmean_income = loan_df.groupby(['credit_score_class','LoanStatus'])['StatedMonthlyIncome'].mean()","b3d92fbc":"mi=mean_income.reset_index()","12834b82":"# Plotting pointplot by taking log transformation on y-axis.\nfig = plt.figure(figsize = [18,6])\nax = sns.pointplot(data = mi, x = 'credit_score_class', y = 'StatedMonthlyIncome', hue = 'LoanStatus',\n           palette = 'Blues', linestyles = '', dodge = 0.4)\n#plt.title('0.3-carat diamond prices across cut and clarity')\n#plt.ylabel('Mean Price ($)')\nplt.yscale('log')\nplt.yticks([2e3, 3e3, 4e3,5e3,6e3,8e3,10e3], ['2000', '3000','4000','5000','6000','8000','10000'])\nax.set_yticklabels([],minor = True)\n#plt.xticks(rotation=25)\nplt.legend(loc=2)\nplt.title('Stated monthly income by credit score class and loan status (log-scale)')\nplt.show();","9bc3131e":"# Plotting heatmap using seaborn's facetgrid.\nbins_x = np.arange(0,loan_df['BorrowerAPR'].max()+0.01,0.02)\nbins_y = np.arange(0,loan_df['BorrowerRate'].max()+0.01,0.03)\ng = sns.FacetGrid(data = loan_df, col = 'credit_score_class', sharex=False,sharey=False,col_wrap = 3, height = 3)\ng.map(plt.hist2d, 'BorrowerAPR', 'BorrowerRate',bins=[bins_x,bins_y], cmap = 'viridis_r', cmin = 0.5)\ng.set_xlabels('APR')\ng.set_ylabels('Rate')\ng.fig.suptitle('Credit score class by APR and borrower Rate',y=1.02)\n\nplt.show()\n","22c04967":"# Plotting heatmap using seaborn's facetgrid.\nbins_x = np.arange(0,loan_df['BorrowerAPR'].max()+0.01,0.02)\nbins_y = np.arange(0,loan_df['BorrowerRate'].max()+0.01,0.03)\ng = sns.FacetGrid(data = loan_df, col = 'EmploymentStatus', sharex=False,sharey=False,col_wrap = 3, height = 3)\ng.map(plt.hist2d, 'BorrowerAPR', 'BorrowerRate',bins=[bins_x,bins_y], cmap = 'viridis_r', cmin = 0.5)\ng.set_xlabels('APR')\ng.set_ylabels('Rate')\ng.fig.suptitle('Employment status by borrower Rate and APR',y=1.02)\nplt.show()\n","f7f7bf69":"# Plotting heatmap using seaborn's facetgrid.\nbins = (np.arange(0,1+0.01,0.02))**1\/3\ntick = [0,0.1,0.2,0.3,0.4,0.6,0.8,1]\nlabels = ['{}'.format(v)for v in tick]\nbins_y = np.log10(np.arange(1000,loan_df['LoanOriginalAmount'].max()+40,1500))\ntick_y=[]\ng = sns.FacetGrid(data = loan_df, col = 'EmploymentStatus', sharex=False,sharey=False,col_wrap = 3, height = 3)\ng.map(plt.hist2d, 'LoanOriginalAmount', 'DebtToIncomeRatio', cmap = 'viridis_r', cmin = 0.5)\ng.set_xlabels('loa')\ng.set_ylabels('dti')\ng.fig.suptitle('Employment status by debt to income ratio and loan original amount',y=1.02)\n\nplt.show()\n\n","e4511d5d":"### Let's look at our first variable \"Term\".","fd09e495":"### Let's look at our second variable \"Loan Status\".","66b659e5":">Debt consolidation has the maximum number of counts in our dataset. This means that maximum loans are taken for Debt Consolidation category. This could mean that many borrowers already have existing debts that is why they have taken debt consolidation loan in order to reduce the burden of existing debts and pay some amount for new loan every month at low interest.","b64ec875":"- Exceptional: 800 to 850. FICO\u00ae Scores ranging from 800 to 850 are considered exceptional. ...\n- Very good: 740 to 799. FICO\u00ae Scores in the 740 to 799 range are deemed very good. ...\n- Good: 670 to 739. FICO\u00ae Scores in the range of 670 to 739 are rated good. ...\n- Fair: 580 to 669. ...\n- Poor: 300 to 579.","e376a790":"### Let's look at 'Stated Monthly Income'.","2c68b687":"<a id='uni'><\/a>\n## Univariate Exploration\n\n> In this section, investigate distributions of individual variables. If\nyou see unusual points or outliers, take a deeper look to clean things up\nand prepare yourself to look at relationships between variables.","e5220769":"> It is clear from above point plot that with loan status and change in credit score from 'Poor' to 'Exceptional' we can observe increase in stated monthly income. ","0677add2":"### Let's find the relationship between 'credit score class' and 'loan original amount' and 'debt to income ratio'.","cb87a63d":">DTI Ratio is unimodal but distribution is slightly right skewed. Let's look at the data more closely to see if it holds interesting pattern.","a84c4229":"> Many borrowers having self employed as employment status, have had loan original amount close to 25000. Borrowers with 'not employed' as employment staus are very less in our data and also most of them have loan amount close to 2500 only with APR cloase to 0.20.","962d9289":"![alt text](http:\/\/thestonefoxnashville.com\/wp-content\/uploads\/2020\/10\/loan-approved-px.jpg)\n# Loan Data from Prosper\n## by Shikhar Sharma\n\n## Preliminary Wrangling\n>This data set contains 113,937 loans with 81 variables on each loan, including loan amount, borrower rate (or interest rate), current loan status, borrower income, and many others.<br>\nThis [data dictionary](https:\/\/www.google.com\/url?q=https:\/\/docs.google.com\/spreadsheet\/ccc?key%3D0AllIqIyvWZdadDd5NTlqZ1pBMHlsUjdrOTZHaVBuSlE%26usp%3Dsharing&sa=D&source=editors&ust=1620931527882000&usg=AOvVaw3vbnU-g9ISX-OFBKzCIkqf) explains the variables in the data set.\n\nWhat factors affect a loan\u2019s outcome status?\n\n\nWhat affects the borrower\u2019s APR or interest rate?\n\n\nWhat affects the original loan amount?<br>\n\n__Table of Contents__<br>\n\n[Univariate Analysis](#uni)<br>\n[Bivariate Analysis](#bi)<br>\n[Multivariate Analysis](#multi)<br>","fe202e91":"> Using the above heatmap, following observations have been made:\n> - Count of borrowers APR between 1000-7000 approx. is highest.\n> - Highest count of APR between 1000-7000 is 5428 which is situated at 0.35 approx.\n> - As loan original amount is increasing, borrower APR is decreasing and count of borrower APR is decreasing too. (yellow boxes after 16000 loan amount)<br><br>\nIt is now getting more clear that the borrowers who took small amount of loans have highest count as well as have highest APR values. But I want to see why borrowers with small loan amount have high APR and also what are the reasons behind it?. Is it because of type of loan or because of high debt to income ratio or due to occupation etc.","a4322153":"From above scatter plot, although, we can see that their is a gradual decrease in Borrower APR with loan amount still it does not give a clear picture of count of APR between a given range of loan amount.<br>\nLet's try to plot a heat map.","69979374":"### Let's explore 'Loan Status' with 'Borrower APR' and 'Borrower Rate'.","5205c19e":">First of all, data is right skewed.<br>\nSecondly, from descriptive statistics we can see that minimum loan original amount is 1000 whereas maximum loan original amount is 35000.<br>\nThird, from displot we can see that density of data points is highest between approx. 1000 and 8000. This means that the loan original amount taken by the maximum number of borrowers  ranges from approx. 1000 to 8000.","537083be":"### Let's explore 'Borrower APR' and 'Debt To Income Ratio'.","072e1e2e":"### Let's look at our fifth variable \"Listing Category\" and try to find hidden pattern in it using histogram.","dcc04de4":"### Let's explore 'credit class','monthly income', and 'loan status'.","6fe472d8":"> Make sure that, after every plot or related series of plots, that you\ninclude a Markdown cell with comments about what you observed, and what\nyou plan on investigating next.","b6f266ea":" > Maximum borrowers with credit score 'Good', 'Very Good' and 'Exceptional' had borrower APR and borrower Rate below 0.20.","fdc0e516":">Maximum DTI seems to lie between 0.15 and 0.2 which is quite good DTI. After 0.2 (between 0.22 and 0.25 their is an increase in counts of DTI ratio) count of DTI decreases with a smooth slope.","c864c2fb":"###  Surprising interactions between features.\n\n> In multivariate analysis of borrower APR, borrower Rate and Employment Status, most of the data with the status 'Not Employed' surprisingly had low APR and low rate (below 0.2). But after further analysis it turns out to be that 'Not employed' although had low loan original amount, its debt to income ratio was low for most of the borrowers and also its data is very less. This could be the reason why 'Not Employed' had low APR.","00527ddc":"### Talk about some of the relationships you observed in this part of the investigation. How did the feature(s) of interest vary with other features in the dataset?\n\n> - Borrower APR was high for less loan original amount and low for high loan amount. Also, Borrower APR and debt to income ratio although tend to go up, had weak correlation whereas borrower APR was weaky negative correlated with monthly income.","5a59d421":"### Let's look at our ninth variable \"LoanOriginalAmount\".","e80d7916":"From the above plot we can cannot make clear interpretation abount which occupations have low average apr and which has highest APR.","6c741168":"### Let's look at our sixth variable \"Borrower State\" and try to find hidden pattern in it using plots.","e128ece0":">> Their seems to exist a moderate negative correlation between APR and monthly income which indicate that while both variables tend to go down in response to one another, the relationship is not very strong.","cab3a1cc":"__Plotting for borrower APR > 0.2 as any value above 0.2 or 20% is considered as bad APR normally.__","7f864fbf":"> From above heat map I have made several observations:\n> - Borrower Rate is highly proportional with borrower APR. This means that if we increase Borrower APR than Borrower Rate will also increase and vice-versa.<br>\n> - Maximum borrowers have APR and Rate between 0.1 and 0.2.(see dark portion)<br>\n> - Between 0.05 and 0.2, count of borrower APR and borrower Rate increases. Between 0.2 and 0.35 count of borrower APR and rate decreases.","2599c8de":"### Let's take a look at 'Borrower APR' and 'Loan original amount' quantitative variables.","9bb43e40":"> Their seems to exist a weak positive correlation which indicate that while both variables DTI and APR tend to go up in response to one another, the relationship is not very strong.","df35b2d5":"<a id='multi'><\/a>\n## Multivariate Exploration\n\n> Create plots of three or more variables to investigate your data even\nfurther. Make sure that your investigations are justified, and follow from\nyour work in the previous sections.","e901f457":"### Let's find the relationship between 'credit score class' and 'Borrower APR' and 'Borrower Rate'.","7abe6439":"__Let's first find the correlation using heatmap and pair grid between numeric variables present in our dataset.__","bf50fe93":"### Let's take a look at 'Borrower APR' and 'Borrower Rate' variable.","3e0a5b34":"###  Let's explore 'loan status' , 'Loan Term',loan amount' and 'debt to income ratio'.","719dd4f3":"### Let's take a look at 'Occupation' ,'Borrower APR'  qualitative and quantitative variables respectively.","b7761787":"### Let's explore 'Borrower APR' and 'StatedMonthlyIncome'","717e6d0f":"### Let's explore 'Borrower APR' and 'Investors' variables.","e331878d":"### Let's take a look at 'Borrower APR' and 'Loan Term' quantitative variables.","e09777b4":">Most of our data falls between 0 and 1. Also, their are some points greater than 1 between 1 and 2, 9 and 10. So, I think these are outliers because highest debttoincome ratio is approx. 50%.","bd7baa3c":"### Discuss the distribution(s) of your variable(s) of interest. Were there any unusual points? Did you need to perform any transformations?\n\n> In debt to income variable, their were some points which were greater than 1. So, I considered them as outliers because when I did some research about minimum and maximum DTI, I found that maximum DTI can reach upto 50% or 0.5. So, it is very unlikely that DTI would be greater than 1.<br>\nI performed some transformation on Debt to income ratio variable, Loan original amount variable, and borrower rate.<br>\nI did log transformation on stated monthly income. Data was highly right skewed before transformation but after doing transformation I observed that most of the data points are between 2k to 10k approx..\n\n### Of the features you investigated, were there any unusual distributions? Did you perform any operations on the data to tidy, adjust, or change the form of the data? If so, why did you do this?\n\n> I did some transformation on Debt to income ratio variable, Loan original amount variable, and borrower rate.<br>\nThese transformations include:<br>\n1- Changing X-ticks to view more exact point of interest.<br>\n2- Changing bins size to reduce noise in the graph and view data more precisely.<br>\n3- Using log xscale to make interpretations from the graph easy.","5f99affb":"> I have made several observations from above three plots:\n> - Maximum number of borrowers took loan for 36 months.\n> - Also, count of borrower APR is maximum at 36 months because of first observation.\n> - Using box plot I observed that at 36 month distribution of Borrower APR is slightly left skewed.\n> - Also, median falls at 0.2 approx which is close to first quartile. This could mean that maximum borrowers who took loan for 36 months had APR between 0.16 and 0.2 approx. which is quite good compare to other borrowers APR which falls between 0.21 and 0.3 approx.\n> - Minimum APR is 0.01 approx. at 36 month term which is a good sign.\n> - Maximum APR is above 0.4 at 36 month term which is considered as bad news.\n> - Second highest count of borrowers who took loan is for 60 month term.\n> - Using boxplot I see that distribution is slightly left skewed.\n> - Using violin plot, I observed that density of APR values is higher between first and second quartile (0.18-0.21 approx.) compare to the density of APR values between second and third quartile. I think range is also less for Borrower APR at 60.\n> - Minimum APR is 0.08 approx. which is again a good news.\n> - Maximum APR is 0.36 approx. which is again a bad news.\n> - Lastly, our count of borrowers who took loan for 12 months is lowest.(Reg plot).\n> - Distribution at 12 month term seems to be normally distributed which means 50% of data falls below mean and 50% of data fall above mean.\n> - Mean of APR is approx. 0.22 at 12 month term.\n> - Smallest APR is 0.05 approx. (good news) and largest APR is 0.36 approx. (bad news).<br><br>\n>Does Borrower APR depends on loan original amount? Lets answer this question in our next bivariate analysis.","a93b02ab":">It is a bimodal distribution with one peak lie between 0.15 and 0.17 and another peak lies between 0.30 and 0.33. It is right skewed distribution. After 0.16 rate their is decrease in count but between 0.32 and 0.34 their is sudden increase in the count of borrower rate.","050b8d36":"I want to see what features affect loan status.","8388f9c5":"### Let's take a look at 'Borrower APR' and 'loan status' variable.","20488a93":"### Let's take a look at 'Employment status' ,'Borrower APR' and 'Loan original amount' qualitative and quantitative variables respectively.","69df7bbc":"> After removing outliers, I have concluded several points:<br>\n1- We can see the moderate negative correlation between investors and Borrower APR, Rate variable more clearly.<br>\n2- Also, we can see the moderate negative correlation of credit score lower and upper range with both Borrower APR, Rate variables more clearly.<br>\n3- We can clearly see the moderate positive correlation between loan original amount and Credit score lower and upper.<br>\n4- Debt to income ratio is moderately negatively correlated with stated monthly income.","fabd6f6e":"### Let's look at our third variable \"Borrower APR\".","c15230fb":"### Let's look at our fourth variable \"Borrower Rate\" and try to find hidden pattern in it using histogram.","a642c804":"### Let's explore 'credit class' and 'loan status'.","02622ccc":">From the above two graphs, I have concluded several points:<br>\n1- Borrower APR is highly correlated with Borrower Rate.<br>\n2- If borrower rate increases borrower APR will also increase and vice-versa.<br>\n3- There is a moderate correlation between investors and Loan original amount.<br>\n4- It is strange that debt to income ratio is very low correlated with every other variable. It could be due to not including large number of features from main dataframe 'df'. But I will try to explore this feature with categorical variables. Also, if we look at the DTI (debt to income ratio) graph (pairplot) and compare it with the graphs of borrower APR and borrower Rate, we can observe that their is some correlation between these variables.<br>\n5- Their seem to be some outliers present in credit score range upper and credit score range lower variables. I will remove them and than again plot the pairgrid to see the correlation.<br>\n6- Their is moderate negative correlation between loan original amount and Borrower APR, Borrower Rate variables.","ce893948":">So, from the above plot we can say that the length of the loan (in months) is maximum for 36 months and minimum for 12 months. We will try to find out why loan term is minimum for 12 months and maximum for 36 months later.","f7fb75c2":"### Let's look at our seventh variable \"Occupation\" and try to find hidden pattern in it using plots.","be1139b5":"> I have plotted 4 subplots for different range in order to clearly show which occupation has the highest count and which occupation has lowest count. From above, we can see that \"other\" category has the highest count (first graph)and \"Student Technical School\" has the lowest count (fourth graph.\nFor above plots, range is\n> - 1st plot: >10000\n> - 2nd plot: <5000 & >1000\n> - 3rd plot: <1000 & >200\n> - 4th plot: <200","98388a61":"__Removing outliers from credit score range upper and credit score range lower variables with values below 300.__","fbce95d4":"<a id='bi'><\/a>\n## Bivariate Exploration\n\n> In this section, investigate relationships between pairs of variables in your\ndata. Make sure the variables that you cover here have been introduced in some\nfashion in the previous section (univariate exploration).","2fab6b3f":">Loan status \"current\" has maximum counts whereas loan status \"Completed\" have second most number of counts.","532bc0e8":"### Let's look at our tenth variable \"DebtToIncomeRatio\" and try to find hidden pattern in it using plots.","f72a22e9":"> From above facet plot I have made some observations:\n> - For loan status 'Default' most of the borrowers have either fair or poor credit score.<br>\n> - Apart from this I can not make much interpretations because their could be other features which show some kind of relationship with these two categorical variables. Right now it is difficult to say anything about how credit score class influence loan status. I will try to find the relationship between these features using multivariate analysis.","f7cf878d":"> I can not make any interpretation from above plot as their are so many box plots. I will try to use different plotting style to make any interpretations.","15cf3757":"> - For every employment status most of the loan original amount is between 1000 and 5000.\n> - Not employed status has the least count but their APR ranges from 0.15 to 0.42 approx. Also, most of the APR values lie between median (second quartile 0.28 approx.) and third quartile (0.32 approx.).\n> - Not available status has 1647 counts whose APR is >= 0.20. Most of the APR values are present between 0.28 and 0.32.<br><br>\n> Nearly for every employment status, most of the loan amount lies in same range and also, borrowers who are employed seems to have APR normally distributed compare to other borrowers APR.<br><br>\n__So, according to me, considering employment status is not a good idea to find out that why borrower APR is high for some loan amount and low for another and also what affects borrower APR. I will try to explore other categorical variables and compare them with borrower APR and Borrower Rate furhter in my exploratory analysis.__","bad808e9":">Borrowers who are Employed are maximum.\nBorrowers who are not employed are minimum.","0c9e2a34":"> From above histogram 2d I have made several observations:\n> 1- Out of all loan status, 'completed' and 'current' status are the only ones with maximum count of APR and rate less than or equal to 0.2.<br>\n> 2- Rest of the loan status have a 'cloud' of points above 0.2 for both APR and Rate except 'cancelled' status as it has only one record in our data.\n> 3- If borrower APR and rate are high than loan status is more likely to be anything except 'current' and 'completed'","206461ff":"### Let's find the relationship between 'Employment status' and 'Borrower APR' and 'Borrower Rate'.","e2048656":"### Let's look at our eighth variable \"EmploymentStatus\" and try to find hidden pattern in it using plots.","3552afb1":">Count of borrower APR between 0.34 and 0.36 is maximum. This could mean that average percentage rate for many loans is approximately between 0.3 and 0.4 which is very high. And minimum APR is approx. 0.02. There are some high bins between 0.16 and 0.2. There is a fall in count of APR values after 0.2 but again APR increases from 0.26 to 0.3. Than data fall and again their is huge rise in the count of APR.","806381af":"_Let's add annotations and transform x-axis and y-axis bins to get more accurate data representation.__","48ac24da":">  Yellow part of the graph shows that maximum number (13106) of borrowers are from california (CA).","11e2d51f":"### Structure of my dataset.\n\n>Number of rows in dataset are 97022 and Number of Columns in dataset are 14.<br>\n\n### What is\/are the main feature(s) of interest in your dataset?\n\n>The main features of interest in our dataset are<br>\n- LoanKey<br>\n- Term<br>\n- Loanstatus<br>\n- BorrowerAPR<br>\n- BorrowerRate<br>\n- ListingCategory<br>\n- BorrowerState<br>\n- Occupation<br>\n- EmploymentStatus<br>\n- LoanOriginalAmount<br>\n- CreditScoreRangeLower<br>\n- CreditScoreRangeUpper<br>\n- DebtToIncomeRatio<br>\n- Investors","a9a192cf":"### Talk about some of the relationships you observed in this part of the investigation. How did the feature(s) of interest vary with other features in the dataset?\n>From the above four plots that is boxplot,histogram and pointplot I have gather some points which are discussed below:<br>\n- Loan status- \"Completed\" has the lowest APR (approx. 0.02). Also, median of APR for \"completed\" variable is approx. 0.2 which is still the lowest. Moreover, most of the APR values lie between first quertile (approx. 0.14 APR) and second quertile (approx. 0.20 APR). However, maximum APR lie just above 0.4.<br>\n- Loan Status- \"Current\" variable's median is approx. 0.22 APR which is second lowest after \"Completed\" loan status. Lowest APR is approx. 0.05 and highest APR is 0.36. Distribution is left skewed a little bit. From violin plot we can see that most of the APR values lie between first quartile and second quartile ranging from approx. 0.13 to 0.23. Also, data is unimodal having one peak. <br>\n- Loan Status- \"Past Due (1-15 days)\" Distribution is left skewed with lowest whisker length extends to approx. 0.08 APR and maximum whisker length extends to approx. 0.38. Median is approx. 0.26 and data is slightly unimodal having one peak.<br>\n- Loan Status- \"Defaulted\" Distribution is left skewed and data is unimodal having one peak. Minimum APR is approx. 0.03 and maximum APR is approx. 0.42. Desnity of APR is greatest between 0.23 and 0.32 APR values and nearly equal number of APR values lie between first quartile and median as compare to count of APR values between second quartile and third quartile.<br>\n- Loan Status- 'Chargedoff', 'Past Due (16-30 days)', 'Past Due (61-90 days)','Past Due (31-60 days)', 'Past Due (91-120 days)' Distribution is left skewed and data is unimodal. Minimum value is approx. 0.03,0.07, 0.07, 0.06, 0.08 respectively. Maximum value is approx. 0.43 (greatest APR), 0.36,0.36,0.36,0.38 respectively. Median is approx 0.27,0.28,0.28,0.28,0.28 respectively.<br>\n- Loan Status- 'FinalPaymentInProgress', 'Past Due (>120 days)', 'Cancelled' Distribution for 'FinalPaymentInProgress' is left skewed and data is unimodal with only one peak. For 'Past Due (>120 days)' variable, distribution is left skewed but data is multimodal having multiple peaks. Data in 'Past Due (>120 days)' seems to be less compared to other features. This could mean that very few borrowers who took loans had loan status of 'Past Due (>120 days)'. On the other hand, \"cancelled\" variable had only one value which is approx. 0.18 APR which means only one borrowers's loan was cancelled. \n\n### Did you observe any interesting relationships between the other features (not the main feature(s) of interest)?\n\n> Some Loan status have high APR values and one loan status is cancelled with APR value of 0.18 approx. So, I will try to find why some loan status have high APR. Also, what features are responsible for high APR of loan status. By doing so we can avoid giving loans to borrowers on the basis of several features.","5988605e":"> From above hist2d I have made several observations:<br>\n> 1- For 'Term' = 12, loan status 'Complete' has maximum data points with most of the Borrower APR less than 0.2 between 1000 and 5000 loan amount. Also, loan status of 'current' and 'charged off' have some points with 'current' having 'cloud' of points above 0.2 debt to income ratio and 'chargedoff' having 'cloud' of points below 0.2 debt to income ratio. Rest of the loan status either have very few data or no data at all for term 12.<br>\n>2- For 'Term' = 36, every loan status have some amount of data available with 'complete' having the maximum data for giving debt to income ratio and loan original amount. Also, I observed that loan status which have very less or no data available for term-12 are having some amount of data. This means that borrowers who took loan for 36 months term with debt to income ratio of greater than 0.2 are more likely to have loan status of 'past due', 'default', 'chargeoff'.<br>\n>3- For 'Term' = 60, I observed that many borrowers have taken large amount compare to terms 12 and 36 and those who took loan between 10000-15000 are more likely to have high debt to income ratio.<br><br>\n> Hence, loan amount,term,and debt to income ratio does play an important role in deciding the loan status. Let's see how credit score, ","fd77d8e8":"> > Their seems to exist a moderate negative correlation which indicate that while both variables Investors and APR tend to go down in response to one another, the relationship is moderately strong.","b5f4df4f":"### Let's take a look at 'Borrower APR' and 'credit score class' variable.","523b99a4":">Adding one column in our data for listing category names."}}