{"cell_type":{"7982bb22":"code","fd3db57b":"code","fcf75da4":"code","3f5a4bd5":"code","96cef980":"code","3fc8985e":"code","c47bdf8d":"code","c1c741f7":"code","958d9a92":"code","b79c6e75":"code","5e8b38ee":"code","6e48e4c7":"code","817240f8":"code","6bc20e45":"code","36a57857":"code","c6f01f7c":"code","c7d073df":"code","aa90b74b":"code","0f867d85":"code","f4f7866c":"code","c51ecf2b":"code","e688792e":"code","7c3494e3":"code","59488c25":"code","9ba5cd89":"code","8eb993d5":"code","d2604690":"code","c3fa99c5":"code","d5075a8c":"code","2b976bf9":"code","04682d7d":"code","5950d800":"code","6c7b750f":"code","130047b0":"code","a2e584ca":"code","132a1181":"code","d031d2f5":"code","3df66122":"code","c284593e":"code","0cb59a06":"code","e696c74f":"code","94181c60":"code","b49e4bf2":"code","835bcf52":"code","566f6634":"code","b1d9d80e":"code","666d890c":"code","f44e8971":"code","bc6a55c7":"code","f7bda584":"code","84b26515":"code","e4e99d35":"code","a0117783":"code","12226f5c":"code","450dbb41":"code","1cbad80d":"code","e6fa3a7f":"code","47e4e7c4":"code","d2b695cd":"code","1a527c6a":"code","738e3edd":"code","2d5cda76":"code","70941e7b":"code","6ed1b97b":"code","f9503193":"code","6c9f20f0":"code","5ec7c928":"code","dbf17c4f":"code","1975b802":"code","05802a2d":"code","25498fb9":"code","7597f945":"markdown","52a22802":"markdown","ec7d3d37":"markdown","6e5ba2a2":"markdown","7c5772bc":"markdown","aa700497":"markdown","e59d2507":"markdown","644456e6":"markdown","e2d145c9":"markdown","36521456":"markdown","fad37928":"markdown","d80e4c76":"markdown","2f289d9a":"markdown","60453f6b":"markdown","b46d0711":"markdown","f225b3ee":"markdown","11450fd2":"markdown"},"source":{"7982bb22":"#for data processing\nimport numpy as np \nimport pandas as pd\n\n#for visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","fd3db57b":"train= pd.read_csv(\"..\/input\/customer-segmentation\/train.csv\")\ntest= pd.read_csv(\"..\/input\/customer-segmentation\/test.csv\")","fcf75da4":"train.head(2)","3f5a4bd5":"test.head(2)","96cef980":"train['train_y_n']=1\ntest['train_y_n']=0\nall=pd.concat([train,test])","3fc8985e":"all.head()","c47bdf8d":"#Visualization to check for missing values\nsns.heatmap(all.isna())","c1c741f7":"all.info()","958d9a92":"all.describe()","b79c6e75":"#ID\nall['ID'].value_counts()>1","5e8b38ee":"sum(all['ID'].value_counts()>1)","6e48e4c7":"all[all['train_y_n']==0]['ID'].nunique()","817240f8":"2332\/2627","6bc20e45":"all[all['ID']==462826]","36a57857":"sum(all.groupby(['ID','train_y_n'])['ID'].count()>1)","c6f01f7c":"#Gender\nsns.countplot(all['Gender'],hue=all['Segmentation'])","c7d073df":"groupby_df = all[all['train_y_n']==1].groupby(['Gender', 'Segmentation']).agg({'Segmentation': 'count'})\ngroupby_pcts = groupby_df.groupby(level=0).apply(lambda x:round(100 * x \/ x.sum(),2))\ngroupby_df,groupby_pcts","aa90b74b":"#Ever_Married\nsns.countplot(all['Ever_Married'],hue=all['Segmentation'])","0f867d85":"groupby_df = all[all['train_y_n']==1].groupby(['Ever_Married', 'Segmentation']).agg({'Segmentation': 'count'})\ngroupby_pcts = groupby_df.groupby(level=0).apply(lambda x:round(100 * x \/ x.sum(),2))\ngroupby_df,groupby_pcts","f4f7866c":"sum(all['Ever_Married'].isnull())","c51ecf2b":"#Age\nsns.distplot(all['Age'])","e688792e":"sns.set_style('whitegrid')\nsns.distplot(all[all['Segmentation']=='A']['Age'],bins=30,color='blue')\nsns.distplot(all[all['Segmentation']=='B']['Age'],bins=30,color='red')\nsns.distplot(all[all['Segmentation']=='C']['Age'],bins=30,color='green')\nsns.distplot(all[all['Segmentation']=='D']['Age'],bins=30,color='black')\nplt.legend(labels=['Seg=A', 'Seg=B', 'Seg=C','Seg=D'])","7c3494e3":"#Graduated\nsns.countplot(all['Graduated'],hue=all['Segmentation'])","59488c25":"groupby_df = all[all['train_y_n']==1].groupby(['Graduated', 'Segmentation']).agg({'Segmentation': 'count'})\ngroupby_pcts = groupby_df.groupby(level=0).apply(lambda x:round(100 * x \/ x.sum(),2))\ngroupby_df,groupby_pcts","9ba5cd89":"#Profession\nplt.rcParams['figure.figsize'] = (10, 6)\nsns.countplot(all['Profession'],hue=all['Segmentation'])","8eb993d5":"#Work_Experience\nsns.countplot(all['Work_Experience'])","d2604690":"#Spending_Score\nsns.countplot(all['Spending_Score'],hue=all['Segmentation'])","c3fa99c5":"groupby_df = all[all['train_y_n']==1].groupby(['Spending_Score', 'Segmentation']).agg({'Segmentation': 'count'})\ngroupby_pcts = groupby_df.groupby(level=0).apply(lambda x:round(100 * x \/ x.sum(),2))\ngroupby_df,groupby_pcts","d5075a8c":"#Family_Size\nsns.countplot(all['Family_Size'],hue=all['Segmentation'])","2b976bf9":"#Var_1\nsns.countplot(all['Var_1'],hue=all['Segmentation'])","04682d7d":"all.dtypes","5950d800":"sns.heatmap(all.corr(),annot=True)","6c7b750f":"feature_cols = all.columns.tolist()\nfeature_cols.remove('ID')\nfeature_cols.remove('Segmentation')\nfeature_cols.remove('train_y_n')\nlabel_col = 'Segmentation'\nprint(feature_cols)","130047b0":"all.isnull().sum()","a2e584ca":"#Gender\nall=pd.get_dummies(all,prefix='Gender',columns=['Gender'],drop_first=True)","132a1181":"all.head(2)","d031d2f5":"#Ever_Married\nsns.countplot(all['Ever_Married'],hue=all['Family_Size'])","3df66122":"all[all['Ever_Married'].isnull()]['Family_Size'].value_counts()","c284593e":"all['Ever_Married']=all['Ever_Married'].fillna('Yes')","0cb59a06":"all=pd.get_dummies(all,prefix='Married',columns=['Ever_Married'],drop_first=True)","e696c74f":"all.head(2)","94181c60":"#Graduated\nsns.countplot(all['Graduated'])","b49e4bf2":"all['Graduated']=all['Graduated'].fillna('Yes')","835bcf52":"all=pd.get_dummies(all,prefix='Graduated',columns=['Graduated'],drop_first=True)\nall.head(2)","566f6634":"#Profession\nall['Profession'].fillna('Unknown',inplace=True)","b1d9d80e":"all['Profession']=all['Profession'].astype('str')","666d890c":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\nall['Profession_en']=le.fit_transform(all['Profession'])","f44e8971":"sns.countplot(all['Profession_en'],hue=all['Profession'])","bc6a55c7":"all['Profession_en'].value_counts()","f7bda584":"all.drop('Profession',axis=1,inplace=True)","84b26515":"#Work_Experience\nall['Work_Experience'].fillna(all['Work_Experience'].mean(),inplace=True)","e4e99d35":"#Spending_Score\nall.loc[all['Spending_Score']=='Low','Spending_Score']=1\nall.loc[all['Spending_Score']=='Average','Spending_Score']=2\nall.loc[all['Spending_Score']=='High','Spending_Score']=3\nall['Spending_Score']=all['Spending_Score'].astype('int')","a0117783":"#Family_Size\nall['Family_Size'].fillna(round(all['Family_Size'].mean()),inplace=True)","12226f5c":"#Var_1\nall['Var_1'].fillna('Cat_6',inplace=True)\nall['Var_1']=all['Var_1'].apply(lambda x:x[-1])\nall['Var_1']=all['Var_1'].astype('int')","450dbb41":"#Train & Test Split\nfrom sklearn.model_selection import train_test_split\ndf_train, df_eval = train_test_split(all[all['train_y_n']==1], test_size=0.40, random_state=101, shuffle=True, stratify=all[all['train_y_n']==1][label_col])","1cbad80d":"le = preprocessing.LabelEncoder()\ndf_train['Segmentation']=le.fit_transform(df_train['Segmentation'])\ndf_eval['Segmentation']=le.fit_transform(df_eval['Segmentation'])","e6fa3a7f":"df_train.info()","47e4e7c4":"df_eval.info()","d2b695cd":"import lightgbm as lgb\nfrom sklearn import preprocessing\nfrom sklearn.metrics import mean_squared_log_error, mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import log_loss\nfrom sklearn.metrics import classification_report\nimport seaborn as sns\nfrom collections import Counter\nsns.set_style('whitegrid')","1a527c6a":"params = {}\nparams['learning_rate'] = 0.04\nparams['max_depth'] = 18\nparams['n_estimators'] = 3000\nparams['objective'] = 'multiclass'\nparams['boosting_type'] = 'gbdt'\nparams['subsample'] = 0.7\nparams['random_state'] = 42\nparams['colsample_bytree']=0.7\nparams['min_data_in_leaf'] = 55\nparams['reg_alpha'] = 1.7\nparams['reg_lambda'] = 1.11\n#params['class_weight']: {0: 0.44, 1: 0.4, 2: 0.37}","738e3edd":"feature_cols = df_train.columns.tolist()\nfeature_cols.remove('ID')\nfeature_cols.remove('Segmentation')\nfeature_cols.remove('train_y_n')\nlabel_col = 'Segmentation'\nprint(feature_cols)","2d5cda76":"cat_cols=['Spending_Score','Family_Size','Var_1','Gender_Male','Married_Yes','Graduated_Yes','Profession_en']","70941e7b":"clf = lgb.LGBMClassifier(**params)\n    \nclf.fit(df_train[feature_cols], df_train[label_col], early_stopping_rounds=100, eval_set=[(df_train[feature_cols], df_train[label_col]), (df_eval[feature_cols], df_eval[label_col])], eval_metric='multi_error', verbose=True, categorical_feature=cat_cols)\n\neval_score = accuracy_score(df_eval[label_col], clf.predict(df_eval[feature_cols]))\n\nprint('Eval ACC: {}'.format(eval_score))","6ed1b97b":"test=all[all['train_y_n']==0]\ntrain=all[all['train_y_n']==1]","f9503193":"#Since there is big overlap between test and train, using train data for all the overlapping IDs\nsub=pd.merge(left=test['ID'],right=train[['ID','Segmentation']],how='left',on='ID')","6c9f20f0":"actual_test=(test[test['ID'].isin(train['ID'])==False])","5ec7c928":"actual_test.shape","dbf17c4f":"pred=clf.predict(actual_test[feature_cols])","1975b802":"pred=le.inverse_transform(pred)\nactual_test['Segmentation']=pred","05802a2d":"l=actual_test[['ID','Segmentation']]\nr=sub[sub['Segmentation'].isnull()==False]\nfr=[l,r]\nsub=pd.concat(fr)","25498fb9":"sub[['ID','Segmentation']].to_csv('submission.csv',index = False)","7597f945":"<img src='https:\/\/datahack-prod.s3.ap-south-1.amazonaws.com\/__sized__\/contest_cover\/Customer_Segmentation-thumbnail-1200x1200-90.jpg'>","52a22802":"Graduated people are in Seg A,B,C while D has lesser graduates","ec7d3d37":"# Loading Data","6e5ba2a2":"# Exploratory Data Analysis","7c5772bc":"## Feel free to share your feedback,do Upvote if you like\/found the notebook useful!","aa700497":"Segmentation D has slightly higher Male %, while there is no other significant difference","e59d2507":"###### Interestingly 89% of the test data IDs are part of train data, so a minimum 88% accuracy is guaranteed! :)","644456e6":"An automobile company has plans to enter new markets with their existing products (P1, P2, P3, P4 and P5). After intensive market research, they\u2019ve deduced that the behavior of new market is similar to their existing market. \n\nIn their existing market, the sales team has classified all customers into 4 segments (A, B, C, D ). Then, they performed segmented outreach and communication for different segment of customers. This strategy has work exceptionally well for them. They plan to use the same strategy on new markets and have identified 2627 new potential customers. \n\nYou are required to help the manager to predict the right group of the new customers.\n\n\n#### Public and Private split:\nThe public leaderboard is based on 40% of test data, while final rank would be decided on remaining 60% of test data (which is private leaderboard)","e2d145c9":"Target variable: Segmentation (A,B,C,D) , Potential Predictors: All Others","36521456":"Sample ID available in both train & test","fad37928":"# Problem Statement \n","d80e4c76":"## Bivariate Analysis","2f289d9a":"# References:\n1. EDA - https:\/\/www.analyticsvidhya.com\/blog\/2016\/01\/guide-data-exploration\/\n2. Label Encoder - https:\/\/medium.com\/@contactsunny\/label-encoder-vs-one-hot-encoder-in-machine-learning-3fc273365621","60453f6b":"## Univariate Analysis","b46d0711":"# Model Building","f225b3ee":"A,B,C have higher Married people vs D has more Single people","11450fd2":"#### Feature Engineering & Missing Value Treatment"}}