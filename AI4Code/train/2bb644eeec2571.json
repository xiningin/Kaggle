{"cell_type":{"e9998803":"code","31426699":"code","bf43e8b5":"code","47bc12b7":"code","38ac15cc":"code","3860ceae":"code","d44a200d":"code","40012822":"code","061d1b7a":"code","460bfcab":"code","2290851c":"code","abd9e133":"code","e1e4fe00":"code","f19b5691":"code","70e110cb":"code","6d1482d1":"code","03ad2f71":"code","c6a6227f":"code","96e6ebd0":"code","57e4cb6d":"code","8360ab4b":"code","69074cb5":"code","508a1049":"code","17e07b06":"code","3a15dbe0":"code","64e0c379":"code","fa96de79":"code","e40cd9fe":"code","1040f512":"code","1a13a491":"code","dc78fe82":"code","7108f049":"code","a41e57c6":"code","afeed1c7":"code","3047a7db":"code","21e8451d":"code","929814d3":"code","f51cc5c0":"code","92767a31":"code","eb977cd0":"code","de3950a5":"code","809d066d":"code","98cf90e4":"code","6d326c17":"code","6845eb07":"code","2104bd06":"code","1295e004":"code","6911a6f1":"code","be258b6e":"code","baee0604":"code","40aafd9d":"code","2207ee91":"code","66518a47":"code","2d668986":"code","54d82371":"code","9ec7dc8c":"code","43b6374e":"code","575ceff0":"code","532514d1":"code","2f97d822":"code","8f5dc1f6":"code","74c3839e":"code","e787814f":"code","51305967":"code","e9babce3":"code","ecb1a908":"code","fc797c55":"code","971b4bcf":"code","f4b27f6a":"code","261ca815":"code","184e9f38":"code","a161ccb1":"code","967d1c45":"code","b671b3bf":"code","b1b2c0a2":"code","732e9d6e":"code","18c778e6":"code","b2c1506e":"code","15e37260":"code","2b79d95f":"code","5e06c6c2":"code","a07f0201":"code","93d966d8":"code","a0bb93fd":"code","d1a20a52":"code","9449d9a9":"code","b1ce7001":"code","f37c8d92":"code","7d78c665":"code","95d48821":"code","6779f8d8":"code","a40b3058":"code","25b55b06":"code","6b8ec56e":"code","839caf10":"code","931d2d3f":"code","977bc984":"code","a1581473":"code","c1c11e1d":"code","dbfc2b17":"code","39746eff":"markdown","74a4a399":"markdown","d290b7cd":"markdown","1fd11c2c":"markdown","0516e021":"markdown","35558cfc":"markdown","1068647a":"markdown","162e140a":"markdown","fb4ce17b":"markdown","5c5164bc":"markdown","a347ed87":"markdown","eec6fc80":"markdown","b6c019cc":"markdown","d60cff7e":"markdown","4105f52b":"markdown","f9634720":"markdown"},"source":{"e9998803":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","31426699":"df = pd.read_csv(\"\/kaggle\/input\/bigdatacertificationkr\/basic2.csv\",\n                parse_dates = [\"Date\"],index_col = 0)\ndf.head()","bf43e8b5":"df2 = pd.read_csv(\"\/kaggle\/input\/bigdatacertificationkr\/basic2.csv\")\ndf2.dtypes","47bc12b7":"df2[\"Date\"] = pd.to_datetime(df2[\"Date\"])","38ac15cc":"dir(pd)[-10:]","3860ceae":"df2.set_index(\"Date\")","d44a200d":"df_w = df.resample(\"W\").sum()","40012822":"df_w.head(3)","061d1b7a":"max(df_w[\"Sales\"])-min(df_w[\"Sales\"])","460bfcab":"weeks = []\nfor i in range(len(df2)):\n    weeks.append(df2.Date[i].week)\ndf2[\"week\"] = weeks","2290851c":"df_ww = df2.groupby(\"week\").sum()","abd9e133":"df_ww.head()","e1e4fe00":"max(df_ww[\"Sales\"]) - min(df_ww[\"Sales\"]) # \uc544\ub9c8 \ud2c0\ub9b0\ub4ef","f19b5691":"df = pd.read_csv(\"\/kaggle\/input\/bigdatacertificationkr\/basic1.csv\")","70e110cb":"df.head()","6d1482d1":"df.dtypes","03ad2f71":"df.isnull().sum()","c6a6227f":"df[df[\"age\"] <= 0]","96e6ebd0":"df[df[\"age\"]*10%10 != 0]","57e4cb6d":"o1 = df[df[\"age\"] > 0]\no2 = o1[o1[\"age\"]*10%10 == 0]","8360ab4b":"o2.head()","69074cb5":"o2.shape","508a1049":"age = o2.age\nage = sorted(age)","17e07b06":"a1 = age[:30]\na2 = age[30:60]\na3 = age[60:]\n\nprint(a1[14:16])\nprint(a2[14:16])\nprint(a3[14:16])","3a15dbe0":"sum(a1[14:16])\/2 + sum(a2[14:16])\/2 + sum(a3[14:16])\/2\n","64e0c379":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')\n# age \uc774\uc0c1\uce58 (\uc74c\uc218(0\ud3ec\ud568), \uc18c\uc218\uc810 \uc81c\uac70)\nprint('\uc804\uccb4 \ub370\uc774\ud130:', df.shape)\ndf = df[~(df['age'] <= 0)]\nprint('\uc74c\uc218(0\ud3ec\ud568)\uac12 \uc81c\uac70 \ud6c4 \ub370\uc774\ud130 \ud06c\uae30:', df.shape)\n\ndf = df[(df['age'] == round(df['age'],0))]\nprint('\uc18c\uc218\uc810 \uc81c\uac70 \ud6c4 \ub370\uc774\ud130 \ud06c\uae30:', df.shape)","fa96de79":"pd.qcut(df['age'], q=3)","e40cd9fe":"df['range'] = pd.qcut(df['age'], q=3, labels=['group1','group2','group3'])","1040f512":"df['range'].value_counts()","1a13a491":"# \uc911\uac04\uc774\uc0c1 - \uc911\uac04\uc774\ud558 \ng1_med = df[df['range'] == 'group1']['age'].median()\ng2_med = df[df['range'] == 'group2']['age'].median()\ng3_med = df[df['range'] == 'group3']['age'].median()\n\nprint(g1_med + g2_med + g3_med)","dc78fe82":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')\ndf.isnull().sum()","7108f049":"help(sorted)","a41e57c6":"top10 = df['f1'].sort_values(ascending=False)\nprint(top10)","afeed1c7":"f1 = top10[9]","3047a7db":"f1","21e8451d":"df[\"f1\"] = df[\"f1\"].fillna(f1)","929814d3":"df.shape","f51cc5c0":"df.f1.median()","92767a31":"r = df.drop_duplicates(subset=[\"age\"])","eb977cd0":"r.shape","de3950a5":"r.f1.median() ","809d066d":"df.shape","98cf90e4":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic2.csv')\ndf.head()","6d326c17":"# \uacb0\uce21\uce58 \ud655\uc778\ndf.isnull().sum()","6845eb07":"#1\uc77c \ucc28\uc774\uac00 \ub098\ub294 \uc2dc\ucc28 \ud2b9\uc131 \ub9cc\ub4e4\uae30\ndf['previous_PV'] = df['PV'].shift(1)\ndf.head()","2104bd06":"# 1\uc77c \uc529 \ubbf8\ub918\uc74c\uc73c\ub85c \uac00\uc7a5 \uc55e\uc774 \uacb0\uce21\uac12\uc774 \ub428 (\ubc14\ub85c \ub4a4\uc758 \uac12\uc73c\ub85c \ucc44\uc6c0)\ndf['previous_PV'] = df['previous_PV'].fillna(method = 'bfill')\ndf.head()","1295e004":"# \uc870\uac74\uc5d0 \ub9de\ub294 1\uc77c \uc774\uc804 PV\uc758 \ud569\ncond = (df['Events'] == 1) & (df['Sales'] <= 1000000)\nprint(df[cond]['previous_PV'].sum())","6911a6f1":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic2.csv',parse_dates=[\"Date\"])","be258b6e":"df.head()","baee0604":"df.loc[2,\"Date\"].day","40aafd9d":"df.loc[2,\"Date\"].weekday","2207ee91":"df.loc[2,\"Date\"].dayofweek ###","66518a47":"df.loc[2,\"Date\"].day_name()","2d668986":"df5 = df[ df.Date.dt.month == 5]\ndf5 = df5[ df5.Date.dt.year == 2022]","54d82371":"df5.head()","9ec7dc8c":"df5['weekend'] = df5.Date.dt.dayofweek.apply(lambda x: x>=5, 1, 0)","43b6374e":"df5","575ceff0":"r = df5.groupby(\"weekend\").mean()\nr","532514d1":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')","2f97d822":"df.head()","8f5dc1f6":"df.isnull().sum()","74c3839e":"medi = df.f1.median()","e787814f":"df.f1 = df.f1.fillna(medi)","51305967":"df.isnull().sum()","e9babce3":"df.head()","ecb1a908":"cond = (df.f4 ==\"ISFJ\") & (df.f5 >= 20)\nresult = df[cond]","fc797c55":"result.head()","971b4bcf":"result.f1.mean()","f4b27f6a":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')","261ca815":"df = df[df.age != round(df.age,0)]","184e9f38":"o_truc= df[df.age != round(df.age,0)]\no_truc[\"age\"] = o_truc[\"age\"].apply(np.trunc )","a161ccb1":"# \uc774\uc0c1\uce58\ub97c \ud3ec\ud568\ud55c \ub370\uc774\ud130 \uc62c\ub9bc, \ub0b4\ub9bc, \ubc84\ub9bc\uc758 \ud3c9\uade0\uac12 \n\n# \uc62c\ub9bc\nm_ceil = np.ceil(df['age']).mean()\n\n# \ub0b4\ub9bc\nm_floor = np.floor(df['age']).mean()\n\n# \ubc84\ub9bc\nm_trunc = np.trunc(df['age']).mean()\n\nm_ceil, m_floor, m_trunc","967d1c45":"print(m_ceil + m_floor + m_trunc)","b671b3bf":"df1 = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')\ndf3 = pd.read_csv('..\/input\/bigdatacertificationkr\/basic3.csv')","b1b2c0a2":"df1.head(3)","732e9d6e":"r = df1.merge(df3, left_on='f4', right_on='f4')","18c778e6":"r.head()","b2c1506e":"r.isnull().sum()","15e37260":"rr = r.dropna(subset = [\"r2\"])","2b79d95f":"rr.isnull().sum()","5e06c6c2":"r.loc[:20,\"f2\"].sum()","a07f0201":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')","93d966d8":"df = df[df.age >= 20.0]\ndf.head()","a0bb93fd":"r = df.f1.mode()\nr[0]","d1a20a52":"df.f1 = df.f1.fillna(r[0])","9449d9a9":"df.head()","b1ce7001":"\nfrom sklearn.preprocessing import power_transform\ndata = [[1, 2], [3, 2], [4, 5]]\nprint(power_transform(data, method='box-cox'))\n","f37c8d92":"df[\"yeo\"]= power_transform( df[[\"f1\"]] ,method = \"yeo-johnson\")\ndf.head()","7d78c665":"df[\"box\"]= power_transform( df[[\"f1\"]] ,method = \"box-cox\")\ndf.head()","95d48821":"df[\"diff\"] = abs(df[\"yeo\"] - df[\"box\"])","6779f8d8":"df","a40b3058":"round(sum(df[\"diff\"]),2)","25b55b06":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv')\n\ndf = df[df.f2 == 0]\ndf.head()","6b8ec56e":"r = df.sort_values(by=[\"age\"])[:20]\nr","839caf10":"output1 = r.f1.std() # \ud45c\uc900\ud3b8\uc790 --> \ub098\uc911\uc5d0 \ubd84\uc0b0\uc73c\ub85c\noutput1","931d2d3f":"minn = min(r.f1)","977bc984":"r.f1 = r.f1.fillna(minn)","a1581473":"output2 = r.f1.std()\noutput2","c1c11e1d":"round(output1**2-output2**2,2)","dbfc2b17":"df.corr()","39746eff":"### mode \ud560\ub584 \uacb0\uacfc\uac12[0]","74a4a399":"### dayofweek","d290b7cd":"# T1-21","1fd11c2c":"## \uc88b\uc740 \ucf54\ub4dc","0516e021":"# 15","35558cfc":"# 24","1068647a":"Hint\nimport numpy as np\n- \uc62c\ub9bc: np.ceil()\n- \ub0b4\ub9bc: np.floor()\n- \ubc84\ub9bc: np.trunc()\n\n\n\uc26c\uc5b4\uac00\uae30 : \ub0b4\ub9bc\uacfc \ubc84\ub9bc\uc758 \ucc28\uc774\ub294??\n\uc591\uc218\uc5d0\uc11c\ub294 \uac19\uc9c0\ub9cc \uc74c\uc218\uc5d0\uc11c\ub294 -5.5\uc5d0\uc11c \ub0b4\ub9bc\uc744 \ud558\uba74 -6, \ubc84\ub9bc\uc744\ud558\uba74 -5\uac00 \ub41c\ub2e4.","162e140a":"r.loc[0,\"Sales\"] - r.loc[1,\"Sales\"]","fb4ce17b":"# 2","5c5164bc":"# 18","a347ed87":"# 23","eec6fc80":"# 20","b6c019cc":"# 16\n\n\nT1-16. Variance\nKIM TAE HEON \u00b7 27 Submissions \u00b7 200 years to go\n\n\uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130 \uc14b\uc5d0\uc11c f2\uac00 0\uac12\uc778 \ub370\uc774\ud130\ub97c age\ub97c \uae30\uc900\uc73c\ub85c \uc624\ub984\ucc28\uc21c \uc815\ub82c\ud558\uace0\n\uc55e\uc5d0\uc11c \ubd80\ud130 20\uac1c\uc758 \ub370\uc774\ud130\ub97c \ucd94\ucd9c\ud55c \ud6c4\nf1 \uacb0\uce21\uce58(\ucd5c\uc18c\uac12)\ub97c \ucc44\uc6b0\uae30 \uc804\uacfc \ud6c4\uc758 \ubd84\uc0b0 \ucc28\uc774\ub97c \uacc4\uc0b0\ud558\uc2dc\uc624 (\uc18c\uc218\uc810 \ub458\uc9f8 \uc790\ub9ac\uae4c\uc9c0)\n\ub370\uc774\ud130\uc14b : basic1.csv\n\n\uc624\ub978\ucabd \uc0c1\ub2e8 copy&edit \ud074\ub9ad -> \uc608\uc0c1\ubb38\uc81c \ud480\uc774 \uc2dc\uc791\n\nFile -> Editor Type -> Script\n\n\uc815\ub2f5 : 38.44","d60cff7e":"# dropna\n\nhttps:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.dropna.html\n","4105f52b":"# \ub0b4 \ud480\uc774","f9634720":"# 10\n\nbox-cox \ubcc0\ud658\n\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.power_transform.html"}}