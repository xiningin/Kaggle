{"cell_type":{"07cd14b4":"code","f513f825":"code","83076dfb":"code","af8a0284":"code","5399c773":"code","cf998dd3":"code","a674d7f9":"code","e2b54bdf":"code","9579b375":"code","6a59356b":"code","b6a186db":"code","60a2d8f3":"code","e7fdd9b8":"code","4c305126":"code","3f77b1db":"code","12e5232d":"code","a81ec4b0":"code","5278a4ca":"code","76829910":"code","364a18ea":"code","252ae9c9":"code","e6b0cdb5":"markdown","c4cc2ec2":"markdown","014bcec6":"markdown","5682cd61":"markdown","5d5e3839":"markdown","fa85373c":"markdown","6599dde2":"markdown","b678bbf2":"markdown","bf8e60f1":"markdown","cca9cb0e":"markdown","e08bc4bc":"markdown","dd9076e3":"markdown"},"source":{"07cd14b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f513f825":"df = pd.read_csv('\/kaggle\/input\/jobs-on-naukricom\/home\/sdf\/marketing_sample_for_naukri_com-jobs__20190701_20190830__30k_data.csv')\ndf.head()","83076dfb":"df.info()","af8a0284":"df.shape","5399c773":"df.isnull().sum()","cf998dd3":"sns.heatmap(df.isnull(),yticklabels = False,cbar=True)","a674d7f9":"skills = df['Key Skills'].to_list()\nskills = [str(s) for s in skills]\nprint(skills)","e2b54bdf":"skills = [s.strip().lower()  for i in skills for s in i.split(\"|\")]\n#removing nan elements\nskills = [s for s in skills if s!='nan']\nlen(skills)","9579b375":"print(skills)","6a59356b":"from collections import Counter\n\nwords = skills","b6a186db":"key_skills = pd.DataFrame({'Skills':list(Counter(words).keys()),'Skill Importance':list(Counter(words).values())})\nkey_skills = key_skills.sort_values(['Skill Importance'],ascending = False)\nkey_skills = key_skills.reset_index(drop=True)\nkey_skills.head(20)","60a2d8f3":"from wordcloud import WordCloud\n\ncombined = \" \".join([w for w in skills])\nwordcloud = WordCloud(width = 500, height = 500, \n                background_color ='black', \n                min_font_size = 10).generate(combined)\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \n  \nplt.show()","e7fdd9b8":"import matplotlib.pyplot as plt","4c305126":"x = key_skills['Skills'].to_list()[0:10]\ny = key_skills['Skill Importance'].to_list()[0:10]\nplt.title('Skill Count Distribution')\nplt.ylabel('Skill Count')\nplt.xlabel('Types of Skills')\nplt.bar(x,y)\nplt.xticks(rotation=45)\nplt.show()","3f77b1db":"job_title = df['Job Title'].value_counts().nlargest(n=10)\njob_title","12e5232d":"import plotly\nimport plotly.express as px","a81ec4b0":"fig = px.pie(job_title, \n       values = job_title.values, \n       names = job_title.index, \n       title=\"Top 10 Job Titles\", \n       color=job_title.values,\n       color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7,\n                  marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5)\nfig.update_layout(title_x=0.5)\nfig.show()","5278a4ca":"function = df['Functional Area'].dropna().to_list()\nfunction = [str(s) for s in function]\nfunction = [s.strip()  for i in function for s in i.split(\",\")]\nfunction = [ i.split(\"-\")[0] for i in function ]\n","76829910":"functional_areas = pd.DataFrame({'Funtional Areas':list(Counter(function).keys()),'Functional Area Importance':list(Counter(function).values())})\nfunctional_areas = functional_areas.sort_values(['Functional Area Importance'],ascending = False)\nfunctional_areas = functional_areas.reset_index(drop=True)\nfunctional_areas.head(20)","364a18ea":"combined = \" \".join(w for w in function)\nwordcloud = WordCloud(width = 500, height = 500, \n                background_color ='green', \n                min_font_size = 10).generate(combined) \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \n  \nplt.show() ","252ae9c9":"ax = sns.barplot(x=functional_areas['Funtional Areas'].to_list()[0:10],y=functional_areas['Functional Area Importance'].to_list()[0:10])\nax.set(xlabel='Application Areas', ylabel='Application Area Importance')\nax.set_xticklabels(ax.get_xticklabels(), rotation=90, horizontalalignment='right')\n","e6b0cdb5":"Tokenizing Skills Column ","c4cc2ec2":"With the given table, shows that Skill of \"Sales\" is of most important","014bcec6":"Check for the data types ","5682cd61":"# Key Skills","5d5e3839":"# Functional Areas","fa85373c":"Business Development Executives and Sales Executive are the most dominant employees required ","6599dde2":"11 columns with 30000 Rows Data","b678bbf2":"Top Big Skills Required are:-\n1. Business Development\n2. Sales Executive\n3. Software Development\n4. Technical Support","bf8e60f1":"From both the Bar Plot and Word Cloud displays that top functional areas of requirements are:\n1.IT Software\n2. Maintainence\n3. Sales\n4. Retail","cca9cb0e":"To display the null values","e08bc4bc":"Check for the null values","dd9076e3":"Sales skill is the most important"}}