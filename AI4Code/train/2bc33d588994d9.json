{"cell_type":{"56032bb8":"code","da082b4d":"code","b65d77ab":"code","2fd72afe":"code","9c4c0c32":"code","b07edd91":"code","800b9b4c":"code","d1fd7969":"code","32a799e7":"code","0665fbc9":"code","dc4d5f07":"code","0f881e9e":"code","68c07f45":"code","f3f8fd38":"code","c0f2bc66":"code","a9fbabd4":"code","52db19c4":"code","01e65b62":"code","69c5b94e":"code","cd4cd5f5":"code","6c5d6990":"code","bd03f88a":"code","bfb0e86a":"code","2b9b234e":"code","f27c500b":"code","eb4b4ee5":"code","00dad3c8":"code","b7ae8ae0":"code","edaff5a3":"code","fb79d4bc":"code","49df0fe7":"code","36844db5":"code","8a5d88b9":"code","e53d8aa3":"code","95328678":"code","d3cff32c":"code","04c574f3":"code","4e8c0218":"code","5f72464f":"code","3cb971b8":"code","ced1a2be":"code","b02be438":"code","59a77864":"code","c47c7d66":"code","dec95066":"code","d9635cb2":"code","7ea68977":"code","71d59eea":"code","ff914b71":"code","2d7921b8":"code","ddd7d957":"code","20bf366d":"code","47636646":"code","2a5dc54e":"code","f3a8ce71":"code","9e7d3537":"code","81c904bc":"code","d85817f8":"code","f1df43b4":"code","084e32e7":"code","db6d62f7":"code","f6231291":"code","a2a38280":"code","15666e2a":"markdown","027939dd":"markdown","9411c1a9":"markdown","f3aec780":"markdown","9ee430e8":"markdown"},"source":{"56032bb8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport  matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da082b4d":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix,classification_report,accuracy_score,f1_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nimport xgboost as xgb\nfrom sklearn.model_selection import cross_val_score,cross_val_predict,StratifiedKFold\n\nfrom sklearn.preprocessing import MinMaxScaler,RobustScaler\n","b65d77ab":"df=pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndf.head()","2fd72afe":"df=df.rename(columns={'ssc_p':'sslc_p','ssc_b':'sslc_b','workex':'work_exp'})","9c4c0c32":"df.drop('sl_no',inplace=True,axis=1)","b07edd91":"df.info()","800b9b4c":"for col in df.select_dtypes(object).columns:\n    print(f'{col} has {df[col].nunique()} values')\n    print(f'{col} -----  {df[col].unique()}')\n    print()","d1fd7969":"plt.hist(df['salary'])","32a799e7":"#based on gender and status\n\ngend_stat=df.groupby(['gender','status']).count()['sslc_p'].unstack(level=1)\ngend_stat.plot(kind='bar')\n\n\n","0665fbc9":"gend_stat['Fem_placed']=(gend_stat['Placed'][0]\/df['gender'].value_counts()[1])*100\ngend_stat['Male_placed']=(gend_stat['Placed'][1]\/df['gender'].value_counts()[0])*100\ngend_stat","dc4d5f07":"from plotly.subplots import make_subplots\nval_f=[gend_stat.iloc[0][0],gend_stat.iloc[0][1]]\nval_m=[gend_stat.iloc[1][0],gend_stat.iloc[1][1]]\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]],subplot_titles=['Female status %','Male Status %'])\nfig_f=px.pie(values=val_f,names=['notplaced','placed'])\nfig_m=px.pie(values=val_m,names=['notplaced','placed'])\nfig.add_trace(fig_f['data'][0],row=1,col=1)\nfig.add_trace(fig_m['data'][0],row=1,col=2)","0f881e9e":"df[df['salary'].isnull()]['status'].unique()\n#Notplaced status  has nullvalues in salary.we impute it with 00000 ,but first let us see how salary varies wrt to gender, mba stream","68c07f45":"df_placed=df[df['status']=='Placed']\ndf_placed['salary'].describe()","f3f8fd38":"df_placed_f=df_placed[df_placed['gender']=='F']\ndf_placed_m=df_placed[df_placed['gender']=='M']\nfig,ax=plt.subplots(1,2,figsize=(16,6))\nsns.distplot(df_placed_f['salary'],ax=ax[0]).set_title('female salary dist')\n\nsns.distplot(df_placed_m['salary'],ax=ax[1])\nax[1].set_title('male salary dist')","c0f2bc66":"print(df_placed_f['salary'].describe())\nprint('------')\nprint(df_placed_m['salary'].describe())","a9fbabd4":"#specilization wrt to mba streram vs salarydist\n\nprint(df_placed[df_placed['specialisation']=='Mkt&Fin']['salary'].describe())\nprint('__________')\nprint('HR VS salary')\nprint(df_placed[df_placed['specialisation']=='Mkt&HR']['salary'].describe())","52db19c4":"fig,ax=plt.subplots(1,2,figsize=(16,4))\nsns.distplot(df_placed[df_placed['specialisation']=='Mkt&HR']['salary'],ax=ax[0]).set_title('HR salary dist')\nsns.distplot(df_placed[df_placed['specialisation']=='Mkt&Fin']['salary'],ax=ax[1]).set_title('Fin salary dist')\n\n#Maxsalary for Hr is 450000andfor Fin is 940000","01e65b62":"df_placed_sal=df_placed[df_placed['salary']<800000]\ndf_placed_sal.describe()\n#so only one person had salry greater than 800000so for time we will remmove him\n\nprint(df_placed_sal[df_placed_sal['specialisation']=='Mkt&Fin']['salary'].describe())\nprint('__________')\nprint('HR VS salary')\nprint(df_placed_sal[df_placed_sal['specialisation']=='Mkt&HR']['salary'].describe())","69c5b94e":"val=[df_placed_sal[df_placed_sal['specialisation']=='Mkt&Fin']['salary'].mean(),df_placed_sal[df_placed_sal['specialisation']=='Mkt&HR']['salary'].mean()]\nnames=['Fin mean sal','HR mean sal']\nsns.barplot(y=val,x=names)\n#mean sal of mktfin is almost 20,000moretha mkthr","cd4cd5f5":"print('work_exp does not affect the chance of getting placed. More number of students  who  got placed have no work_exp ')\nprint('----------')\nprint(df_placed_sal.groupby(['specialisation','work_exp'])['work_exp'].count())\n\nprint()\nprint('-------------------')\nprint('having work_exp gets you lillte more salary')\nprint('-----')\nprint(df_placed_sal.groupby(['specialisation','work_exp'])['salary'].mean())\n#having work_exp fetches more salary \n","6c5d6990":"plt.figure(figsize=(13,6))\ndf['status_enc']=np.where(df['status']=='Placed',1,0)\ndf['work_exp_enc']=np.where(df['work_exp']=='No',0,1)\nsns.heatmap(df.corr(),annot=True,cmap='YlGnBu')\nplt.yticks(rotation=0,fontsize=12,color='black')\nplt.xticks(color='black')\n\n#sslc_p,hsc_p,degree_p has more effect on statusthan others","bd03f88a":"#does MBA % affects placement\nplt.style.use('ggplot')\nplt.figure(figsize=(10,6))\nsns.kdeplot(df_placed['mba_p'],label='placed',shade=True)\nsns.kdeplot(df[df['status']=='Not Placed']['mba_p'],label='not_placed',shade=True)\nplt.title('MBA Percentage')\n\n#MBA percentage makes no effect on status","bfb0e86a":"#sslc_p vs sta\nplt.figure(figsize=(10,6))\nsns.kdeplot(df_placed['sslc_p'],label='placed',shade=True,color='green')\nsns.kdeplot(df[df['status']=='Not Placed']['sslc_p'],label='not_placed',shade=True,color='red')\nplt.title('SSLC Percentage')","2b9b234e":"#hsc_p vs status\nplt.figure(figsize=(10,6))\nsns.kdeplot(df_placed['hsc_p'],label='placed',shade=True,color='green')\nsns.kdeplot(df[df['status']=='Not Placed']['hsc_p'],label='not_placed',shade=True,color='red')\nplt.title('12th Percentage')","f27c500b":"#dgree vs status\nplt.figure(figsize=(10,6))\nsns.kdeplot(df_placed['degree_p'],label='placed',shade=True,color='green')\nsns.kdeplot(df[df['status']=='Not Placed']['degree_p'],label='not_placed',shade=True,color='red')\nplt.title('degree Percentage')","eb4b4ee5":"#doesetest have  impact on placement\n#hsc_p vs status\nplt.figure(figsize=(10,6))\nsns.kdeplot(df_placed['etest_p'],label='placed',shade=True,color='green')\nsns.kdeplot(df[df['status']=='Not Placed']['etest_p'],label='not_placed',shade=True,color='red')\nplt.title('12th Percentage')\n\n#we couldsee that etest_p has no impact","00dad3c8":"#does degree stream affect placement\nfig = make_subplots(rows=1, cols=3, specs=[[{'type':'domain'}, {'type':'domain'},{'type':'domain'}]],subplot_titles=['commerce placed %','others placed %','sci&tech placed %'])\ndf_degree=df.groupby(['degree_t','status'])['status'].count()\nfig_c=px.pie(values=[df_degree[0],df_degree[1]],names=['notplaced','placed'])\nfig_o=px.pie(values=[df_degree[2],df_degree[3]],names=['notplaced','placed'])\nfig_sc=px.pie(values=[df_degree[4],df_degree[5]],names=['notplaced','placed'])\nfig.add_trace(fig_c['data'][0],row=1,col=1)\nfig.add_trace(fig_o['data'][0],row=1,col=2)\nfig.add_trace(fig_sc['data'][0],row=1,col=3)","b7ae8ae0":"#now checking the salary for these streams\nplt.figure(figsize=(10,4))\nsns.boxplot(y=df_placed['degree_t'],x=df_placed['salary'])","edaff5a3":"df_p_c=df_placed.groupby(['degree_t'])['status'].count().reset_index()\nfig=px.pie(values=df_p_c['status'],names=df_p_c['degree_t'])\nfig.update_traces(textinfo='label+percent',marker=dict(line=dict(color='white', width=2)))","fb79d4bc":"#again , commerce and science background students has more chance both accounting for53 and 42% respectively","49df0fe7":"#puc stream vs placement\ndf_puc_stream=df_placed.groupby(['hsc_s'])['status'].count().reset_index()\nfig=px.pie(values=df_puc_stream['status'],names=df_puc_stream['hsc_s'])\nfig.update_traces(textinfo='label+percent',marker=dict(line=dict(color='white', width=2)))","36844db5":"plt.figure(figsize=(25,5))\nsns.countplot(df['salary'])\nplt.xticks(rotation=90);\n#23 students have salary 300000(majority) followed by 15 and 17 students with salary 240000 and 250000","8a5d88b9":"\nfig,ax=plt.subplots(1,2,figsize=(20,8))\nsns.boxplot(df['specialisation'],df['salary'],hue=df['gender'],ax=ax[0]).set_title('gender  wise specialisation wrt salary ')\nsns.boxplot(df['gender'],df['salary'],ax=ax[1]).set_title('gender vs salary')\n\n","e53d8aa3":"#as per above visuals,there is salary disparity ,unequal pay","95328678":"#let us check percentage wrt to gender\nfig,ax=plt.subplots(1,3,figsize=(15,8))\nsns.boxplot(df['gender'],df['mba_p'],hue=df['gender'],ax=ax[0]).set_title('gender wrt mba_p  ')\nsns.boxplot(df['gender'],df['hsc_p'],ax=ax[1]).set_title('gender wrt hsc_p')\nsns.boxplot(df['gender'],df['degree_p'],ax=ax[2]).set_title('gender wrt degree_p')","d3cff32c":"#yup female mean score is more than male for mba,degree","04c574f3":"df.groupby(['status','work_exp'])['work_exp'].count().unstack(level=1).plot(kind='bar')\nplt.xticks(rotation=0)\n\n#i dont think work_exp impacts placement ,bcz more number of people  are placed have no work_exp","4e8c0218":"#Imputing NUll values\n#since null values in salary is bcz of students not being placed, so we will impute it 0000\n#df_new['salary'].fillna(0,inplace=True)","5f72464f":"#converting string type to int by one hot encoding.\ndf.head()","3cb971b8":"print(df.columns)\ndf['hsc_s1']=df['hsc_s'].map({'Commerce':2,'Science':1,'Arts':0})\ndf['degree_t1']=df['degree_t'].map({'Sci&Tech':1,'Comm&Mgmt':2,'Others':0})\n\ndf_new=df.copy()\ndf_new['gender']=df_new['gender'].map({'M':1,\"F\":0})\ndf_new['work_exp']=df_new['work_exp'].map({\"No\":0, \"Yes\":1})\ndf_new['specialisation']=df_new['specialisation'].map({\"Mkt&HR\":0, \"Mkt&Fin\":1})\n\ndf_new['status']=df_new['status'].map({'Placed':1,'Not Placed':0})    ","ced1a2be":"df_new.head()","b02be438":"df_new=df.copy()","59a77864":"for col in ['gender','work_exp','specialisation']:\n    dummy=pd.get_dummies(df_new[col],drop_first=True)\n    df_new=df_new.join(dummy)","c47c7d66":"df_new.columns\nX=df_new[['sslc_p',  'hsc_p', 'degree_p',\n         'etest_p', 'mba_p', \n        'hsc_s1', 'degree_t1', 'M', 'Yes', 'Mkt&HR']]\ny=df_new['status']\n","dec95066":"x_train,x_test,y_train,y_test=train_test_split(X,y,train_size=0.75,random_state=42)\nprint(f'{x_train.shape} {x_test.shape} {y_train.shape} {y_test.shape}')","d9635cb2":"lr=LogisticRegression().fit(x_train,y_train)\npred=lr.predict(x_test)\nprint(confusion_matrix(pred,y_test))\nprint(classification_report(pred,y_test))\naccuracy_score(y_test, pred)","7ea68977":"#DecisionTree\n\nfrom sklearn.model_selection import RandomizedSearchCV\ndt=DecisionTreeClassifier()\nparam={'max_depth':[2,3,4,5,8]}\nrs=RandomizedSearchCV(dt,param_distributions=param,n_iter=5,n_jobs=1,cv=3,random_state=22)\nrs.fit(x_train,y_train)\n\nrs.best_params_","71d59eea":"def metrics(obj,x_test,y_test):\n    pred=obj.predict(x_test)\n    print(confusion_matrix(pred,y_test))\n    print(classification_report(pred,y_test))\n    print('acc_score',accuracy_score(pred,y_test))\n\ndt=DecisionTreeClassifier(max_depth=5).fit(x_train,y_train)\nmetrics(dt,x_test,y_test)","ff914b71":"feat_imp=pd.Series(dt.feature_importances_,index=X.columns).sort_values(ascending=False)\nsns.barplot(feat_imp,feat_imp.index)","2d7921b8":"#80%accuracy  less  than log_reg\n#dectree considering only percentage","ddd7d957":"#Random  Forest\nrfc=RandomForestClassifier()\nparam={'n_estimators':[100,200,300],\n      'max_depth':[2,4,6,8],\n      'min_samples_leaf':[1,2,3,4,5]}\nrs=RandomizedSearchCV(rfc,param_distributions=param,n_iter=5,n_jobs=1,cv=3,random_state=22)\nrs.fit(x_train,y_train)\n\n","20bf366d":"rs.best_params_","47636646":"rfc=RandomForestClassifier(n_estimators=100,max_depth=6,min_samples_leaf=3).fit(x_train,y_train)\nmetrics(rfc,x_test,y_test)\n","2a5dc54e":"feat_imp=pd.Series(rfc.feature_importances_,index=X.columns).sort_values(ascending=False)\nsns.barplot(feat_imp,feat_imp.index)\n#81% after hypertuning\n# still percentages are playing key roles","f3a8ce71":"from sklearn.neighbors import KNeighborsClassifier\n\nerror_rate = []\n\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    pred = knn.predict(x_test)\n    error_rate.append(np.mean(pred != y_test))\n    \nplt.plot(range(1,40),error_rate, marker='o', linestyle='dashed')    ","9e7d3537":"#k value is \nknn = KNeighborsClassifier(n_neighbors=7, metric='euclidean').fit(x_train,y_train)\nmetrics(knn,x_test,y_test)\n","81c904bc":"#80%% accuracy","d85817f8":"#lets try ensemble method VotingClassifier\nfrom sklearn.ensemble import VotingClassifier\nestimators=[('log_reg',lr),('decision_tree',dt)]","f1df43b4":"vc=VotingClassifier(estimators).fit(x_train,y_train)\nmetrics(vc,x_test,y_test)","084e32e7":"#still lr performs better\nX","db6d62f7":"import pickle\npickle.dump(lr, open('model_upd.pkl','wb'))","f6231291":"model=pickle.load(open('model_upd.pkl','rb'))","a2a38280":"model.predict([[67,91,58,55,58.8,2,1,1,0,1]])","15666e2a":"#chances of getting placed from commerce and sci&tech background are more,whereas other stream haveless chance","027939dd":"#salary wrt to streams, sci$Tech has more avg salary,salary is concentrated b\/w(27,0000,360000),for commerce salary is b\/w(240000,310000) \n#some outliers in commerces 940000\/-  for student is highest among all streams","9411c1a9":"#68% students got placed  were from commerce ,27.7%werefrom science and Tech","f3aec780":"Pls upvote!!!!!!\nHappy Learning!!!!!","9ee430e8":"#insights\nForm our confusin matrix our model correctly  classified 15+40 datapoints.\n#ie out of 41 placed students, model clssified 38 of  them correctly  and from out of 13 not placed students 11 were correctly classifed\n#we have 2 type 1 error and 3 type 2 error.\n#In case of hiring type1 error should be low.bcz predicting as fit candidate even though he is not ,will  affect compy perf\n"}}