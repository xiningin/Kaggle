{"cell_type":{"a82747f8":"code","55096080":"code","e2ab1331":"code","66e89e6a":"code","cb329e13":"code","f14d5448":"code","be08169f":"code","ef05a02d":"code","920a670e":"code","f9f2c014":"code","59cc566f":"code","fb751151":"code","fd012bb3":"code","0dd83bf3":"markdown","09508b14":"markdown","5b22f496":"markdown","9751826a":"markdown","b3bbd808":"markdown","55daa26a":"markdown","15e318f5":"markdown","ae49873e":"markdown"},"source":{"a82747f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","55096080":"os.getcwd()\ndf = pd.read_csv('\/kaggle\/input\/international-football-results-from-1872-to-2017\/results.csv')\ndf['result'] = ['Draw' if i == 0  else 'Home_Won' if i > 0  else 'Away_Won' for i in df['home_score'] - df['away_score']]","e2ab1331":"df.head(10)","66e89e6a":"\nteam_list = list(df['home_team'].unique())\nteam_list.extend(list(df['away_team'].unique()))\nteam_list = list(set(team_list))\n","cb329e13":"team_goals_dict = {}\ntotal_goals = []\ntotal_games = []\ntotal_conceded = []\ntotal_win = []\ntotal_lost = []\n\nfor team in team_list:\n    total_goals.append(sum(df[df['home_team'] == team]['home_score']) + sum(df[df['away_team'] == team]['away_score']))\n    total_games.append(len(df[df['home_team'] == team]) + len(df[df['away_team'] == team]))\n    total_conceded.append(sum(df[df['home_team'] == team]['away_score']) + sum(df[df['away_team'] == team]['home_score']))\n    total_win.append(len(df[(df['home_team'] == team) & (df['result'] == 'Home_Won')]) + len(df[(df['away_team'] == team) & (df['result'] == 'Away_Won')]))\n    total_lost.append(len(df[(df['home_team'] == team) & (df['result'] == 'Away_Won')]) + len(df[(df['away_team'] == team) & (df['result'] == 'Home_Won')]))\n\nteam_goals_dict['teams'] = team_list\nteam_goals_dict['total_goals'] = total_goals\nteam_goals_dict['total_games'] = total_games\nteam_goals_dict['total_conceded'] = total_conceded\nteam_goals_dict['total_win'] = total_win\nteam_goals_dict['total_lost'] = total_lost","f14d5448":"#print(team_goals_dict)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndf_tally = pd.DataFrame(team_goals_dict)\ndf_tally['total_draw'] = df_tally['total_games'] - df_tally['total_win'] - df_tally['total_lost'] \ndf_tally['goals_per_game'] = df_tally['total_goals'] \/ df_tally['total_games']\ndf_tally['goals_conceded_per_game'] = df_tally['total_conceded'] \/ df_tally['total_games']\ndf_goal_top = df_tally.sort_values(ascending=False,by=['total_goals']).reset_index(drop=True).head(10)\ndf_goal_top.head(10)","be08169f":"df_goal_per_game_top = df_tally[df_tally['total_games'] > 500].sort_values(ascending=False,by=['goals_per_game']).reset_index(drop=True).head(10)\ndf_goal_per_game_top ","ef05a02d":"sns.set(rc={'figure.figsize':(15,12)})\nsns.barplot(x='teams',y='total_goals',data =df_goal_top)","920a670e":"import plotly.express as plty\nfig = plty.bar(df_goal_per_game_top,x='teams',y='goals_per_game',color = 'total_games',color_continuous_scale='Viridis')\nfig.show()","f9f2c014":"df_worst_defending = df_tally.sort_values(ascending=False,by=['total_conceded']).reset_index(drop=True).head(10)\ndf_worst_defending","59cc566f":"sns.set(rc={'figure.figsize':(15.7,12.27)})\nsns.barplot(x='teams',y='total_conceded',data =df_worst_defending)","fb751151":"df_goal_conceded_per_game_top = df_tally[df_tally['total_games'] > 500].sort_values(ascending=False,by=['goals_conceded_per_game']).reset_index(drop=True).head(10)\ndf_goal_conceded_per_game_top ","fd012bb3":"fig = plty.bar(df_goal_conceded_per_game_top,x='teams',y='goals_conceded_per_game',color = 'total_games',color_continuous_scale='Viridis')\nfig.show()","0dd83bf3":"Adding Result variable","09508b14":"**Top 10 teams with respect to goals conceded**","5b22f496":"**Country with most goals in competitive matches **","9751826a":"**So from the above 4 plots its evident that we can go ahead with goals_per_game and goals_conceded_per_game for further analysis for categorising teams based on their style of play**","b3bbd808":"**Top 10 teams with respect to goals per game\nInteractive plot**","55daa26a":"***Going on lets see how we can filter top 10 teams based on their attacking and defencive records over the year.\nAnd also will see how our data differs when we plot based on ratios for above data (owing to differnt games played between each team).***","15e318f5":"**Top 10 Teams based on total goals scored**","ae49873e":"**Top 10 Teams with respect to goals conceded per game ratio**"}}