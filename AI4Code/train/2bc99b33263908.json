{"cell_type":{"5e76d390":"code","b411a822":"code","14596582":"code","dcad5d1f":"code","d63ffb2a":"code","13dd0777":"code","27ab2b51":"code","06e89b40":"code","2b3c2ba6":"code","348d5879":"code","7b07858b":"code","5ef644db":"code","b5a4ad53":"code","96d3cb1a":"code","285bcef2":"code","de3090d3":"code","76022593":"code","fe74f655":"code","1642c4b8":"code","cafa260c":"code","69c8a86f":"code","f88302e5":"code","66f6748d":"code","a4a8f344":"code","24afbb5c":"code","94881e6e":"code","e2218d25":"code","26298c98":"code","11ca57f6":"code","33122619":"code","86883e99":"code","1bd84d01":"code","d30c5531":"code","9759a03b":"code","12ef5698":"code","21d254a3":"code","066947f3":"code","6a0c1604":"code","fa752c63":"code","99f3efcd":"code","6fc34b4a":"code","4f75aea7":"code","3286fb48":"code","e3664480":"code","62075f7f":"code","05cb9c80":"code","04d993b5":"code","e32574e0":"code","a15fc0ea":"code","f9173384":"code","36b4f1d5":"code","5ceca596":"code","092090c5":"code","faa7ae26":"code","3e495063":"code","f3439101":"code","e921d8e6":"code","453d8f11":"code","d802b588":"code","dc18dd91":"code","aa176f56":"code","01a01d1f":"code","76f5ac3e":"code","d5119a8f":"code","b7283cae":"code","2002f09e":"code","e8101c1c":"code","69525705":"code","50707438":"code","557fd49d":"code","8bf8710b":"code","1b5d713d":"code","aaf0b862":"code","02ba6634":"code","f43d97ce":"code","3d5c6773":"code","8e60a88f":"code","39140ae6":"code","dd3e185e":"code","dac26300":"code","fbd01581":"code","00520896":"code","33127d5b":"code","4cc1e503":"code","9d6f4513":"code","5bdabab6":"code","a3769be6":"code","7d49a370":"code","d4b9d039":"code","fe7ad89c":"code","0803f041":"code","4bb83838":"code","2c733e3e":"code","05c1af9c":"code","1b0dc989":"code","dd30974f":"code","c6d46fa6":"code","7d07d335":"code","4f9bc137":"code","d15c242b":"code","19a69f73":"code","046f0b5a":"code","fccb0b73":"code","063dfc8e":"code","6fc1fa33":"code","fead8258":"markdown","b614a45c":"markdown","dde3e981":"markdown","316d80fb":"markdown","591231bc":"markdown","4423e104":"markdown","73bc98fb":"markdown","a1d2c0a0":"markdown","8ff3dcd4":"markdown","dadcab5a":"markdown","35b753c2":"markdown","4ba80d71":"markdown","c7d20179":"markdown","10765b26":"markdown","62ef3f1e":"markdown","c907733f":"markdown","11a91874":"markdown","fc269a33":"markdown","b6b3c4e5":"markdown","ffd37e14":"markdown","7395adea":"markdown","d0bb7846":"markdown","c1a65ea1":"markdown","6ffca4ea":"markdown","9c84766c":"markdown","32cfd133":"markdown","3235f72f":"markdown","eef5dc6b":"markdown","bd9c311c":"markdown","2261056c":"markdown","0e2ecf40":"markdown","f458907b":"markdown","9c72a992":"markdown","e89b8515":"markdown","83510d1d":"markdown","0bc0f8cc":"markdown","b56a642e":"markdown","3d0b41a9":"markdown","b906b286":"markdown","15fdd79e":"markdown","0c827276":"markdown","5c94b717":"markdown","153ea6cb":"markdown","7b80e301":"markdown","cbabd542":"markdown","cbb93623":"markdown","e09b8851":"markdown"},"source":{"5e76d390":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b411a822":"import matplotlib.pyplot as plt\nimport seaborn as sns","14596582":"file = \"\/kaggle\/input\/co2-emission-by-vehicles\/CO2 Emissions_Canada.csv\"\ndf = pd.read_csv(file)","dcad5d1f":"df.head()","d63ffb2a":"df.info()","13dd0777":"df.describe(include='all')","27ab2b51":"df.hist(figsize=(20,10),bins=50)","06e89b40":"df.isna().sum()","2b3c2ba6":"df['Transmission'].unique()","348d5879":"df['Transmission'] = np.where(df['Transmission'].isin(['A4','A5','A6','A7','A8','A9','A10']),\"Automatic\",df['Transmission'])\ndf['Transmission'] = np.where(df['Transmission'].isin([\"AM5\", \"AM6\", \"AM7\", \"AM8\", \"AM9\"]),\"Automated Manual\",df['Transmission'])\ndf['Transmission'] = np.where(df['Transmission'].isin([\"AS4\", \"AS5\", \"AS6\", \"AS7\", \"AS8\", \"AS9\", \"AS10\"]),\"Automatic with Select Shift\",df['Transmission'])\ndf['Transmission'] = np.where(df['Transmission'].isin([\"AV\", \"AV6\", \"AV7\", \"AV8\", \"AV10\"]),\"Continuously Variable\",df['Transmission'])\ndf['Transmission'] = np.where(df['Transmission'].isin([\"M5\", \"M6\", \"M7\"]),\"Manual\",df['Transmission'])","7b07858b":"df['Transmission'].unique()","5ef644db":"sns.distplot(df['CO2 Emissions(g\/km)'])","b5a4ad53":"sns.violinplot(df['CO2 Emissions(g\/km)'])","96d3cb1a":"plt.figure(figsize=(20,5))\ndf.groupby(['Make'])['Make'].count().sort_values(ascending=False).plot(kind='bar')","285bcef2":"df.groupby(['Model'])['Model'].count().sort_values(ascending=False).head(10)","de3090d3":"plt.figure(figsize=(15,5))\ndf.groupby(['Vehicle Class'])['Vehicle Class'].count().sort_values().plot(kind='bar')\nplt.tight_layout()\nplt.xticks(fontsize=8,rotation=45)","76022593":"plt.figure(figsize=(15,5))\ndf.groupby(['Cylinders'])['Cylinders'].count().sort_values(ascending=False).plot(kind='bar')","fe74f655":"df.groupby(['Transmission'])['Transmission'].count().sort_values(ascending=False).plot(kind='bar')","1642c4b8":"df.groupby(['Fuel Type'])['Fuel Type'].count().sort_values(ascending=False).plot(kind='bar')","cafa260c":"plt.figure(figsize=(20,5))\ndf.groupby(['Make'])['CO2 Emissions(g\/km)'].mean().sort_values(ascending=False).plot(kind='bar')\nplt.ylabel('CO2 Emissions(g\/km)')","69c8a86f":"plt.figure(figsize=(10,3))\ndf.groupby(['Vehicle Class'])['CO2 Emissions(g\/km)'].mean().sort_values(ascending=False).plot(kind='bar')\nplt.xticks(fontsize=8)\nplt.ylabel(\"CO2 Emissions(g\/km)\")","f88302e5":"plt.figure(figsize=(15,3))\ndf.groupby(['Engine Size(L)'])['CO2 Emissions(g\/km)'].median().sort_values(ascending=True).plot(kind='bar')\nplt.xlabel('Engine Size')\nplt.ylabel('CO2 Emissions(g\/km)')","66f6748d":"df.groupby(['Cylinders'])['CO2 Emissions(g\/km)'].mean().sort_values().plot(kind='bar')\nplt.ylabel('CO2 Emissions(g\/km)')","a4a8f344":"df.groupby(['Transmission'])['CO2 Emissions(g\/km)'].mean().sort_values().plot(kind='bar')\nplt.ylabel('CO2 Emissions(g\/km)')","24afbb5c":"df.groupby(['Fuel Type'])['CO2 Emissions(g\/km)'].mean().sort_values().plot(kind='bar')\nplt.ylabel('CO2 Emissions(g\/km)')","94881e6e":"plt.figure(figsize=(25,5))\ndf.groupby(['Fuel Consumption City (L\/100 km)'])['CO2 Emissions(g\/km)'].mean().sort_values().plot(kind='bar')\nplt.xticks(rotation=90, horizontalalignment='center', fontweight='light', fontsize='7')\nplt.ylabel(\"CO2 Emissions(g\/km)\")","e2218d25":"plt.figure(figsize=(20,5))\ndf.groupby(['Fuel Consumption Hwy (L\/100 km)'])['CO2 Emissions(g\/km)'].mean().sort_values().plot(kind='bar')\nplt.xticks(rotation=90, horizontalalignment='center', fontweight='light', fontsize='7')\nplt.ylabel(\"CO2 Emissions(g\/km)\")","26298c98":"plt.figure(figsize=(20,5))\ndf.groupby(['Fuel Consumption Comb (mpg)'])['CO2 Emissions(g\/km)'].mean().sort_values().plot(kind='bar')\nplt.xticks(rotation=90, horizontalalignment='center', fontweight='light', fontsize='7')\nplt.ylabel(\"CO2 Emissions(g\/km)\")","11ca57f6":"sns.scatterplot(df['Fuel Consumption City (L\/100 km)'],df['CO2 Emissions(g\/km)'],hue=df['Fuel Type'])","33122619":"sns.scatterplot(df['Fuel Consumption Hwy (L\/100 km)'],df['CO2 Emissions(g\/km)'],hue=df['Fuel Type'])","86883e99":"sns.scatterplot(df['Fuel Consumption Comb (L\/100 km)'],df['CO2 Emissions(g\/km)'],hue=df['Engine Size(L)'])","1bd84d01":"sns.scatterplot(df['Fuel Consumption Comb (mpg)'],df['CO2 Emissions(g\/km)'],hue=df['Engine Size(L)'])","d30c5531":"plt.figure(figsize=(8,6))\nsns.boxplot(df['Fuel Type'],df['CO2 Emissions(g\/km)'])","9759a03b":"sns.pointplot(df['Cylinders'],df['CO2 Emissions(g\/km)'])","12ef5698":"corr = df.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(corr,annot=True)","21d254a3":"Ft = pd.get_dummies(df['Fuel Type'],drop_first=True,prefix='Fuel')\ndf = df.drop(['Fuel Type'],axis=1)\ndf = pd.concat([df,Ft],axis=1)","066947f3":"Tr = pd.get_dummies(df['Transmission'],drop_first=True)\ndf = df.drop(['Transmission'],axis=1)\ndf = pd.concat([df,Tr],axis=1)","6a0c1604":"df.head()","fa752c63":"X = df.drop(['CO2 Emissions(g\/km)','Fuel Consumption Comb (L\/100 km)'],axis=1)\ny = df['CO2 Emissions(g\/km)']","99f3efcd":"from sklearn.model_selection import train_test_split","6fc34b4a":"x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","4f75aea7":"x_train.head()","3286fb48":"cat_cols = ['Make','Model','Vehicle Class']","e3664480":"import category_encoders as ce","62075f7f":"target_enc = ce.CatBoostEncoder(cols = cat_cols)\ntarget_enc.fit(x_train[cat_cols],y_train)","05cb9c80":"train_enc = target_enc.transform(x_train[cat_cols])","04d993b5":"test_enc = target_enc.transform(x_test[cat_cols])","e32574e0":"train_enc.head()","a15fc0ea":"x_train = x_train.drop(['Make','Model','Vehicle Class'],axis=1)\nx_test = x_test.drop(['Make','Model','Vehicle Class'],axis=1)","f9173384":"x_train = pd.concat([x_train,train_enc],axis=1)\nx_test = pd.concat([x_test,test_enc],axis=1)","36b4f1d5":"x_train.head()","5ceca596":"x_test.head()","092090c5":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","faa7ae26":"best_features = SelectKBest(score_func=chi2)","3e495063":"fit = best_features.fit(x_train,y_train)","f3439101":"best = pd.DataFrame(fit.scores_,columns=['scores'])","e921d8e6":"best['var'] = x_train.columns","453d8f11":"best.sort_values(by='scores' ,ascending=False)","d802b588":"from sklearn.preprocessing import StandardScaler","dc18dd91":"scaler = StandardScaler()","aa176f56":"xs_train = scaler.fit_transform(x_train)\nxs_test = scaler.fit_transform(x_test)","01a01d1f":"from sklearn.linear_model import LinearRegression","76f5ac3e":"lr = LinearRegression()","d5119a8f":"model1 = lr.fit(x_train,y_train)","b7283cae":"y_pred1 = model1.predict(x_test) ","2002f09e":"from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error","e8101c1c":"r2_score(y_test,y_pred1)","69525705":"mse = mean_squared_error(y_test,y_pred1)\nmse","50707438":"rmse = np.sqrt(mse)\nrmse","557fd49d":"mae = mean_absolute_error(y_test,y_pred1)\nmae","8bf8710b":"from sklearn.neighbors import KNeighborsRegressor","1b5d713d":"knn = KNeighborsRegressor(n_neighbors=3)","aaf0b862":"model2 = knn.fit(xs_train,y_train)","02ba6634":"y_pred2 = model2.predict(xs_test)","f43d97ce":"r2_score(y_test,y_pred2)","3d5c6773":"mean_squared_error(y_test,y_pred2)","8e60a88f":"from sklearn.svm import LinearSVR","39140ae6":"svr = LinearSVR()","dd3e185e":"model3 = svr.fit(xs_train,y_train)","dac26300":"y_pred3 = model3.predict(xs_test)","fbd01581":"r2_score(y_test,y_pred3)","00520896":"mean_squared_error(y_test,y_pred3)","33127d5b":"from sklearn.tree import DecisionTreeRegressor","4cc1e503":"dtree = DecisionTreeRegressor()","9d6f4513":"model4 = dtree.fit(x_train,y_train)","5bdabab6":"y_pred4 = model4.predict(x_test)","a3769be6":"r2_score(y_test,y_pred4)","7d49a370":"mean_squared_error(y_test,y_pred4)","d4b9d039":"from sklearn.ensemble import RandomForestRegressor","fe7ad89c":"rf = RandomForestRegressor(n_estimators=100)","0803f041":"model5 = rf.fit(x_train,y_train)","4bb83838":"y_pred5 = model5.predict(x_test)","2c733e3e":"r2_score(y_test,y_pred5)","05c1af9c":"mean_squared_error(y_test,y_pred5)","1b0dc989":"from sklearn.ensemble import GradientBoostingRegressor","dd30974f":"gb = GradientBoostingRegressor()","c6d46fa6":"model6 = gb.fit(x_train,y_train)","7d07d335":"y_pred6 = model6.predict(x_test)","4f9bc137":"r2_score(y_test,y_pred6)","d15c242b":"from sklearn.ensemble import AdaBoostRegressor","19a69f73":"ada = AdaBoostRegressor()","046f0b5a":"model7 = ada.fit(x_train,y_train)","fccb0b73":"y_pred7 = model7.predict(x_test)","063dfc8e":"r2_score(y_test,y_pred7)","6fc1fa33":"mean_squared_error(y_test,y_pred7)","fead8258":"## Linear Regression Model","b614a45c":"### Reading the CSV file","dde3e981":"#### We can observe as increase in number of cylinders Carbon emissions are also increasing.","316d80fb":"#### Random Forest Regressor model performs exceptionally well than any ohter model so far with 99.3% accuracy and with only 22.3 mean squarred error which is less than all models.","591231bc":"#### We can observe as fuel consumtion of vehivles on city roads increases carbon emissions also increase.","4423e104":"## Random Forest Regressor model","73bc98fb":"#### VAN-Passenger vehicles are the top most carbon emitting type of vehicle and Station Wagon-Small is the least Carbon emitting type of vehicle.","a1d2c0a0":"## Gradient Booosting Regressor Model","8ff3dcd4":"#### From this plot we can see that lots of vehicles are SUV-SMALL,MID-SIZE and COMPACT type and VAN_CARGO is very less frequnent vehicle.","dadcab5a":"#### From the corelation plot we can see all the features are positively corelated with carbon emissions except Fuel Consumption Comb (mpg) which is negatively corelated with carbon emissions.\n#### We can see that Fuel Consumption Comb (L\/100 km) is highly corelated with Fuel Consumption City (L\/100 km) and Fuel Consumption Hwy (L\/100 km) with corelation of 0.99 and 0.98 respectively. It shows that Fuel Consumption Comb (L\/100 km) is redundant feature and we can drop this column from the dataset.","35b753c2":"#### Dropping the redundant feature Fuel Consumption Comb (L\/100 km)","4ba80d71":"#### Linear SVR model also performs better with 98.8% accuracy.","c7d20179":"### Understanding the distributions of data attributes.","10765b26":"#### Automatic with Select Shift type is the most frequent in Transmission.","62ef3f1e":"#### Boosting models also done a good job predicting the target variable on test set.","c907733f":"#### These are the 10 top most frequent vehicle models in our dataset.","11a91874":"####  There are 7385 entries of data and 12 columns. There are 7 numerical variables and 5 categorical variables in the dataset.","fc269a33":"### Encoding the remaining categorical Features with category_encoders.","b6b3c4e5":"### Scaling the features for further usage of data in models.","ffd37e14":"### Fuel type\n#### X = Regular gasoline, Z = Premium gasoline, D = Diesel, E = Ethanol (E85), N = Natural gas\n#### Gasoline is most used type of Fuel and Natural gas is the least used type of fuel\u26fd.","7395adea":"#### Fuel consumption of vehicles on highway is positively corelated with cabon emissions.","d0bb7846":"#### It looks like 4 and 6 Cylinders vehicles are mostly used ones.","c1a65ea1":"### replacing similar labels with single label.","6ffca4ea":"#### We see that Natural gas emitts less amount of carbon emissions and Ethanol emitts large amount of carbon emissions.","9c84766c":"#### These scores show us which features are important for our model. It seems that model type  and make are the most important features.","32cfd133":"#### From the plot Automatic Transmission Type vehicles emitt a large amount of carbon dioxide.","3235f72f":"### Having a clear look at attributes.","eef5dc6b":"#### KNeighbors model also performs better with 98.5% accuracy.","bd9c311c":"### We see that all our models are performing well in predicting the carbon emissions from vehicles. From the Observations we can see that 95% of the vehicles generate carbon emissions between 133.5(g\/km) to 367.5(g\/km). Most influencing factors that increase carbon emissions are fuel consumption of vehicle. Vehicles with good mileage generate less amount of carbon dioxide. Even the Top brands does not do any good they even stay top in emitting carbon emissions. With large Engine sizes and more number of Cylinders of heavy vechiles more carbon emissions are observed.","2261056c":"#### Fuel consumption of vehicles on city roads is positively corealated with Carbon emissions.","0e2ecf40":"#### Decision tree model performs amazingly well with 99% accuracy.","f458907b":"#### There are no missing values in the dataset.","9c72a992":"## Support Vector Regressor model","e89b8515":"#### We can observe as Engine size increase CO2 emissions are also rising.","83510d1d":"### Checking the information from the dataset.","0bc0f8cc":"#### We can see that Large size Engines consumes more fuel and emitt large amount of carbon emissions.","b56a642e":"#### Our linear regression model performs best on the test set with 99% accuracy and mean absolute error of 3.","3d0b41a9":"## CONTEXT\n#### Hi, I am currently pursuing PGP in Data Science. Recently we were assigned with a project on regression and hypothesis by our Statistics department. While looking for a dataset relevant to my project, I stumbled upon this one.\n\n## CONTENT\n#### This dataset captures the details of how CO2 emissions by a vehicle can vary with the different features. The dataset has been taken from Canada        Government official open data website. This is a compiled version. This contains data over a period of 7 years.\n#### There are total 7385 rows and 12 columns. There are few abbreviations that has been used to describe the features. I am listing them out here. The      same can be found in the Data Description sheet.\n\n## Model\n#### 4WD\/4X4 = Four-wheel drive\n#### AWD = All-wheel drive\n#### FFV = Flexible-fuel vehicle\n#### SWB = Short wheelbase\n#### LWB = Long wheelbase\n#### EWB = Extended wheelbase\n\n## Transmission\n#### A = Automatic\n#### AM = Automated manual\n#### AS = Automatic with select shift\n#### AV = Continuously variable\n#### M = Manual\n#### 3 - 10 = Number of gears\n\n## Fuel type\n#### X = Regular gasoline\n#### Z = Premium gasoline\n#### D = Diesel\n#### E = Ethanol (E85)\n#### N = Natural gas\n\n## Fuel Consumption\n#### City and highway fuel consumption ratings are shown in litres per 100 kilometres (L\/100 km) - the combined rating (55% city, 45% hwy) is shown in        L\/100 km and in miles per gallon (mpg)\n\n## CO2 Emissions\n#### The tailpipe emissions of carbon dioxide (in grams per kilometre) for combined city and highway driving","b906b286":"#### As per gallon number of miles a vehicle travels increases carbon emissions decreases. It implies that less fuel consumption vehicles emitt less carbon emissions.","15fdd79e":"## Decision Tree Regresor Model","0c827276":"#### As number of miles a vehicle can travel with one gallon increases carbon Emissions decreases. Fuel Consumption Comb (mpg) is negatively corelated with CO2 Emissions.","5c94b717":"#### We can see high frequency in FORD,CHEVROLET and BMW brands which are dominant in our dataset.","153ea6cb":"#### Even on highway as fuel consumtion of vechiles increses carbon emissions also increases.","7b80e301":"### Plotting the histogram of all numerical features.","cbabd542":"## KNeighbors Regressor model","cbb93623":"### One hot Encoding of Features Fuel Type and Transmission.","e09b8851":"#### We can see most of the costly brand cars are also emmitting lot of carbon emissions and brands like Honda and Smart are least carbon emitting vehicles."}}