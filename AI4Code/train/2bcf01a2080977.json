{"cell_type":{"d542ca95":"code","34f2472f":"code","c6a9a77c":"code","424dfe15":"code","536acb74":"code","5f472ad0":"code","71cc9ca1":"code","4531f07f":"code","e930a393":"code","0b15c32b":"code","81cbe6b8":"code","692e1005":"code","0debd810":"code","d39bd975":"code","915798d6":"code","84ffecef":"code","cc0cc721":"markdown","e9d62bca":"markdown","dfaf9b75":"markdown","fc25b5e9":"markdown","cb9063f2":"markdown","098f0762":"markdown","b50e3a3a":"markdown","62590d6b":"markdown","c0560e12":"markdown","3e36baaa":"markdown","08470205":"markdown"},"source":{"d542ca95":"from shutil import copyfile\n\ncopyfile(src = \"..\/input\/qt-utils\/pandas_techinal_indicators.py\", dst = \"..\/working\/pandas_techinal_indicators.py\")","34f2472f":"import numpy as np\nimport pandas as pd\nimport random\nimport matplotlib.pyplot as plt\nimport pandas_techinal_indicators as ta\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.model_selection import train_test_split","c6a9a77c":"%matplotlib inline","424dfe15":"np.random.seed(5)\nrandom.seed(5)","536acb74":"# \u8a13\u7df4\u6a23\u672c\u6578\u6bd4\u4f8b\nSPLIT_RATIO = 0.66","5f472ad0":"spy_prices = pd.read_csv('..\/input\/quantitative-trading\/SPY_2018.csv')\ndel(spy_prices['Date'])\ndel(spy_prices['Adj Close'])\nspy_prices.head()","71cc9ca1":"def expPreprocessing(df, alpha=0.9):\n    edata = df.ewm(alpha=alpha).mean()    \n    return edata","4531f07f":"# Smoothed by Date\nsspy = expPreprocessing(spy_prices)\nsspy.head()","e930a393":"def featureExtraction(data):\n    for x in [14, 26, 44, 66, 95]:\n        data = ta.relative_strength_index(data, n=x)\n        data = ta.stochastic_oscillator_d(data, n=x)\n        data = ta.accumulation_distribution(data, n=x)\n        data = ta.average_true_range(data, n=x)\n        data = ta.momentum(data, n=x)\n        data = ta.money_flow_index(data, n=x)\n        data = ta.rate_of_change(data, n=x)\n        data = ta.on_balance_volume(data, n=x)\n        data = ta.commodity_channel_index(data, n=x)\n        data = ta.ease_of_movement(data, n=x)\n        data = ta.trix(data, n=x)\n        data = ta.vortex_indicator(data, n=x)\n    \n    data['ema50'] = data['Close'] \/ data['Close'].ewm(50).mean()\n    data['ema21'] = data['Close'] \/ data['Close'].ewm(21).mean()\n    data['ema14'] = data['Close'] \/ data['Close'].ewm(14).mean()\n    data['ema5'] = data['Close'] \/ data['Close'].ewm(5).mean()\n\n    # KD \u8f14\u52a9\u6307\u6a19\n    data = ta.macd(data, n_fast=12, n_slow=26)\n    \n    del(data['Open'])\n    del(data['High'])\n    del(data['Low'])\n    del(data['Volume'])\n    \n    return data\n   \ndef computePredictionInt(df, n):\n    pred = (df.shift(-n)['Close'] >= df['Close'])\n    pred = pred.iloc[:-n]\n    return pred.astype(int)\n\ndef prepareData(df, horizon):\n    data = featureExtraction(df).dropna().iloc[:-horizon]\n    data['pred'] = computePredictionInt(data, n=horizon)\n    del(data['Close'])\n    return data.dropna()\n","0b15c32b":"dataset = prepareData(sspy, 10)\nprint(f'\u52a0\u5165\u6280\u8853\u6307\u6a19\uff1a{np.array(dataset.columns)}')","81cbe6b8":"features = [x for x in dataset.columns if x not in ['pred']]\nx = dataset[features]\n\ny = dataset['pred']","692e1005":"x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=SPLIT_RATIO, random_state=5)\n\nprint('\u8a13\u7df4 > \u7279\u5fb5\u6578\u91cf', len(x_train))\nprint('\u8a13\u7df4 > \u6a19\u7c64\u6578\u91cf', len(y_train))\nprint('\u6e2c\u8a66 > \u7279\u5fb5\u6578\u91cf', len(x_test))\nprint('\u6e2c\u8a66 > \u6a19\u7c64\u6578\u91cf', len(y_test))","0debd810":"Model = RandomForestClassifier(n_jobs=-1, n_estimators=65, random_state=5)\nModel.fit(x_train, y_train.values.ravel());","d39bd975":"prediction = Model.predict(x_test)\n\nreport = classification_report(y_test, prediction)\nconfusion = confusion_matrix(y_pred=prediction, y_true=y_test)\nprint('=== \u6e96\u78ba\u5ea6\u5831\u544a ===')\nprint(report)\nprint('=== \u6df7\u6dc6\u77e9\u9663 ===')\nprint(confusion)","915798d6":"plt.figure(figsize=(20, 7))\nplt.plot(np.arange(len(prediction)), prediction, alpha=0.7, label='\u9810\u6e2c\u5e02\u5834\u6f32\u8dcc')\nplt.plot(np.arange(len(y_test)), y_test, alpha=0.7, label='\u771f\u5be6\u5e02\u5834\u6f32\u8dcc' );\nplt.title('\u6e2c\u8a66\u96c6\u4e2d\u7684\u6f32\u8dcc\u9810\u6e2c')\nplt.legend();","84ffecef":"plt.figure(figsize=(20, 7))\nprobability = Model.predict_proba(x_test)[:, 1]\nplt.figure(figsize=(20,7))\nplt.plot(np.arange(len(probability)), probability, alpha=0.7, label='\u9810\u6e2c\u5e02\u5834\u6f32\u8dcc\u6a5f\u7387')\nplt.plot(np.arange(len(y_test)), y_test, alpha=0.7, label='\u771f\u5be6\u5e02\u5834\u6f32\u8dcc' );\nplt.title('\u6e2c\u8a66\u96c6\u4e2d\u7684\u6f32\u8dcc\u6a5f\u7387\u9810\u6e2c');\nplt.legend();","cc0cc721":"## \u6bd4\u5c0d \u9810\u6e2c\u6a5f\u7387","e9d62bca":"## \u5efa\u7acb\u6a21\u578b\n\n- n_jobs\uff1a-1 \u4ee3\u8868\u4f7f\u7528\u5168\u90e8\u6838\u5fc3\n- n_estimators\uff1a\u751f\u6210\u591a\u5c11\u9846\u6c7a\u7b56\u6a39\n- random_state\uff1a\u96a8\u6a5f\u78bc","dfaf9b75":"### \u8b93\u8cc7\u6599\u4ee5\u6642\u9593\u70ba\u6b0a\u91cd\u95dc\u806f\u5728\u4e00\u8d77\uff0c\u4f46\u8ad6\u6587\u4f5c\u8005\u6c92\u6709\u8aaa\u660e alpha \u503c\uff0c\u9019\u908a\u5148\u7528 0.9","fc25b5e9":"## \u7d50\u8ad6\n\n\u8ad6\u6587\u4e2d\u4f7f\u7528\u860b\u679c\u80a1\u7968\u793a\u7bc4\uff0c\u6e96\u78ba\u6027\u70ba 92\uff05\uff0c\u800c\u6211\u5011\u7684\u9810\u6e2c\u6e96\u78ba\u5ea6\u70ba 90\uff05\u3002\u539f\u56e0\u6709\u5f88\u591a\uff0c\u53ef\u80fd\u5305\u62ec\uff1a\n\n- \u5e73\u6ed1\u6307\u6578 ewm \u7684 alpha \u4e0d\u4e00\u5b9a\u662f 0.9\n- \u63d0\u53d6\u6280\u8853\u6307\u6a19\u7684\u65e5\u671f [14, 26, 44, 66, 95] \u4e0d\u662f(\u7576\u6642)\u6700\u597d\u7684\u7d44\u5408\n- \u76ee\u524d\u4f7f\u7528\u7684\u9019\u4e9b\u6280\u8853\u6307\u6a19\u4e26\u4e0d\u80fd\u5f88\u597d\u7684\u5305\u542b\u5e02\u5834\u60c5\u7dd2\n\n\u9019\u500b\u65b9\u6cd5\u78ba\u5be6\u53ef\u4ee5\u9810\u6e2c\u5e02\u5834\u65b9\u5411\uff0c\u4e5f\u5df2\u7d93\u6709\u5f88\u591a\u7d93\u7406\u4eba\u4f7f\u7528\u6b64\u4fe1\u865f\u4f5c\u70ba\u8cb7\u8ce3\u4f9d\u64da\n\n\u4f46\u8acb\u6ce8\u610f\uff01\u9019\u908a\u53ea\u662f\u793a\u7bc4\u5982\u4f55\u8a13\u7df4\u4e00\u500b\u6a21\u578b\uff0c\u4e26\u6c92\u6709\u8003\u616e\u5230\u6f32\u8dcc\u7684\u5e45\u5ea6\uff0c\u6709\u6642\u5019\u6ce2\u52d5\u592a\u5c0f\u6642\u4ea4\u6613\u7372\u5229\u6703\u88ab\u624b\u7e8c\u8cbb\u5403\u6389\u8981\u7279\u5225\u6ce8\u610f\n\n\u53e6\u5916\u9019\u500b\u4fe1\u865f\u662f\u4ee5\u5e02\u5834\u7a69\u5b9a\u767c\u5c55\u70ba\u524d\u63d0\uff0c\u4e0d\u8003\u616e\u4efb\u4f55\u9ed1\u5929\u9d5d\u4e8b\u4ef6(\u5927\u898f\u6a21\u8cbf\u6613\u6230\u3001\u570b\u50b5\u51cd\u7d50)\u7b49\u60c5\u6cc1\uff0c\u6211\u5011\u9700\u8981\u591a\u6ce8\u610f\u5e02\u5834\u60c5\u7dd2\uff0c\u4e26\u898f\u5283\u597d \u6b62\u640d\u3001\u6b62\u76c8 \u9ede\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u56b4\u683c\u4f9d\u64da\u4fe1\u865f\u53ca\u7b56\u7565\u64cd\u4f5c\uff01\u964d\u4f4e\u4eba\u70ba\u56e0\u7d20\u7684\u5e72\u64fe","cb9063f2":"### \u52a0\u5165\u6a21\u7d44\u3001\u8a2d\u5b9a\u74b0\u5883\u5e38\u6578","098f0762":"\u4f7f\u7528 Peter Bakker \u63d0\u4f9b\u7684 \u6280\u8853\u6307\u6a19\uff0c\u5305\u542b\uff1a\n\n- [\u76f8\u5c0d\u5f37\u5f31\u6307\u6578 RSI](https:\/\/tw.tradingview.com\/scripts\/relativestrengthindex\/)\n- [\u96a8\u6a5f\u9707\u76ea\u6307\u6a19 KD](https:\/\/tw.tradingview.com\/scripts\/stochastic\/)\n- [\u7d2f\u7a4d\/\u6d3e\u767c\u7dda AD](https:\/\/tw.tradingview.com\/scripts\/accumulationdistribution\/)\n- [\u771f\u5be6\u6ce2\u52d5\u5e45\u5ea6\u5747\u503c ATR](https:\/\/tw.tradingview.com\/scripts\/volatility\/)\n- [\u52d5\u91cf\u6307\u6a19 Momentum](https:\/\/tw.tradingview.com\/scripts\/momentum\/)\n- [\u8cc7\u91d1\u6d41\u91cf\u6307\u6a19 MFI](https:\/\/kknews.cc\/zh1.tw\/invest\/b8n5brn.html)\n- [\u8b8a\u52d5\u7387\u6307\u6a19 ROC](https:\/\/tw.tradingview.com\/scripts\/rateofchange\/)\n- [\u80fd\u91cf\u6f6e\u6307\u6a19 OBV](https:\/\/tw.tradingview.com\/scripts\/onbalancevolume\/)\n- [\u9806\u52e2\u6307\u6a19 CCI](https:\/\/tw.tradingview.com\/scripts\/commoditychannelindex\/)\n- [\u7c21\u6613\u6ce2\u52d5\u6307\u6a19 EOM](https:\/\/tw.tradingview.com\/scripts\/easeofmovement\/)\n- [\u4e09\u91cd\u5e73\u6ed1\u5747\u7dda TRIX](https:\/\/tw.tradingview.com\/scripts\/trix\/)\n- [\u65cb\u6e26\u6307\u6a19 VI](https:\/\/tw.tradingview.com\/scripts\/vortex\/)\n- [\u6307\u6578\u5e73\u6ed1\u7570\u540c\u79fb\u52d5\u5e73\u5747\u7dda MACD](https:\/\/www.cmoney.tw\/learn\/course\/technicals\/topic\/750)\n- [\u6307\u6578\u79fb\u52d5\u5e73\u5747 EMA](https:\/\/ey90223.pixnet.net\/blog\/post\/350258995)","b50e3a3a":"### \u62c6\u5206 \u8a13\u7df4\u8cc7\u6599\u3001\u6e2c\u8a66\u8cc7\u6599","62590d6b":"### \u8a2d\u5b9a\u5e38\u6578","c0560e12":"### \u52a0\u5165\u8cc7\u6599","3e36baaa":"\u6211\u5011\u9700\u8981\u66f4\u591a\u6c7a\u7b56\u907f\u514d\u904e\u5ea6\u64ec\u548c\uff0c\u4e5f\u9700\u8981\u8003\u616e\u66f4\u591a\u7684\u5e02\u5834\u56e0\u7d20\uff1a\n\n- \u5e02\u5834\u8d70\u5411\n- \u50f9\u683c\u6ce2\u52d5\u7387\n- \u5e02\u5834\u4fe1\u5fc3\u5ea6\n\n\u9019\u908a\u6211\u5011\u91cd\u88fd 2016 \u5e74\u8ad6\u6587 [Khaidem, Luckyson, Snehanshu Saha, and Sudeepa Roy Dey. \"Predicting the direction of stock market prices using random forest.\" arXiv preprint arXiv:1605.00003](https:\/\/arxiv.org\/abs\/1605.00003)","08470205":"## \u6bd4\u5c0d \u9810\u6e2c\u7d50\u679c"}}