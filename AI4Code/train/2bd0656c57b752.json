{"cell_type":{"779e3f68":"code","5ccbc0e5":"code","4ad4bde5":"code","beae1062":"code","ddd19a39":"code","63255f69":"code","697165f9":"code","42540422":"code","706ad357":"code","80db2f76":"code","36b8dcdb":"code","42d4f569":"code","4ce8ef5e":"code","8ec3ce82":"code","0bd7aca8":"code","c586158d":"code","bd179a5a":"code","d7fd4834":"code","7c02ab8d":"code","5a1fc389":"code","c67ea3d9":"code","b0e9f1a5":"code","80488716":"code","6cadefcc":"code","90c16cc5":"code","003f6513":"code","3b218073":"code","64e528da":"code","937cf29b":"code","bfd1c377":"markdown","43f1303e":"markdown","9c27f5a0":"markdown","b05f15e5":"markdown"},"source":{"779e3f68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5ccbc0e5":"pwd","4ad4bde5":"ls ..\/input\/portland-oregon-avg-rider-monthly-data\/","beae1062":"df = pd.read_csv('..\/input\/portland-oregon-avg-rider-monthly-data\/portland-oregon-average-monthly-.csv')","ddd19a39":"df.head(10)","63255f69":"len(df)","697165f9":"df.info(verbose=True)","42540422":"df.dtypes","706ad357":"# rename df columns\ndf.columns = ['Date','Riders']","80db2f76":"df","36b8dcdb":"# the amount of riders shouldn't be an object type, much be there are other types mixed in \ndf.Riders.unique()","42d4f569":"df = df[df['Riders'] != ' n=114']","4ce8ef5e":"# convert columns to correct types \ndf.Riders = df.Riders.astype(int)\ndf.Date = pd.to_datetime(df['Date'])#, format='%Y-%m')","8ec3ce82":"df","0bd7aca8":"df.dtypes","c586158d":"sns.lineplot(df['Date'],df['Riders'])\nplt.show()","bd179a5a":"# the amount of riders are increasing over the course of time ","d7fd4834":"df_months=df.groupby(by=df['Date'].dt.month).sum().reset_index()","7c02ab8d":"sns.barplot(x='Date',y='Riders',data=df_months)\nplt.show()","5a1fc389":"sns.scatterplot(x='Date',y='Riders',data=df_months)\nplt.show()","c67ea3d9":"# can see here the variation over the year for the average number of riders. the summer had the least amount ","b0e9f1a5":"# Autocorrelation plots are often used for checking randomness in time series\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/visualization.html#visualization-autocorrelation","80488716":"pd.plotting.autocorrelation_plot(df.Riders)\nplt.show()","6cadefcc":"# the autocorrelation is positive for a lag of 30-40 days. this means there is a montly trend","90c16cc5":"# Lag plots are used to check if a data set or time series is random\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/visualization.html#lag-plot","003f6513":"pd.plotting.lag_plot(df.Riders)\nplt.show()","3b218073":"# we see there is a relationship between the time lags ","64e528da":"for window in [1,30,3*30]:\n    df['Riders'].rolling(window).mean().plot()\n    plt.title('window size: '+str(window))\n    plt.show()","937cf29b":"# the larger the window is, the more smoothing is done in order to remove noise and capture the patterns in data.\n# there is a clear trend that the amount increases over the course of the year","bfd1c377":"# time series analysis","43f1303e":"### moving average ","9c27f5a0":"### monthly average trends ","b05f15e5":"### analyzing trend in seaons "}}