{"cell_type":{"65c53e77":"code","89770bc2":"code","7c9cf497":"code","2ddbcf04":"code","a276e365":"code","20abb233":"code","e85ec808":"code","ce8177a8":"code","f9b57c3e":"code","464f0e0e":"code","7a13093e":"code","d567be7c":"code","77e896f4":"code","29c411e8":"code","845b5ca0":"code","0ebfb16f":"code","9fa1b1a5":"code","1259b2d4":"code","eb04d54a":"code","ebc85968":"code","8fac1a8c":"code","c83e58c7":"code","31580ed7":"code","37de8d11":"code","72841373":"code","59f3ea0b":"code","4d5de0ee":"code","bfea2e05":"code","f898ee14":"code","aaae760a":"code","699f1427":"code","fc43472c":"code","dec253f5":"code","84f39274":"code","aa69a530":"markdown","18b5e25d":"markdown","cc88431b":"markdown","9d829397":"markdown","b98dc316":"markdown","33023a6b":"markdown","ac7a64a3":"markdown","de0ba56f":"markdown","5d2f1cd4":"markdown","325d39d9":"markdown","70941795":"markdown","b79faab3":"markdown","5390852a":"markdown","7c77b69c":"markdown","aae32830":"markdown","3b5f359b":"markdown","ea03dfe7":"markdown","9ffa0b96":"markdown","53138c95":"markdown","b3c40715":"markdown","d569cbed":"markdown","6c5de65d":"markdown","971821e3":"markdown","2938c587":"markdown","b5b7c1f8":"markdown","d9e6d514":"markdown","84594e67":"markdown","aae25231":"markdown"},"source":{"65c53e77":"import pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use(\"ggplot\")\nimport numpy as np\nimport scipy as sp\nimport seaborn as sns\nimport re\nimport os\nimport time\nimport plotly.express as px\n","89770bc2":"# Loading dataset, checking the shape and first few rows\ndata = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\nprint (data.shape)\ndata.head()","7c9cf497":"# Let's drop the duplicate rows from the dataframe and check the shape\ndata = data.drop_duplicates()\nprint (data.shape)\ndata.dtypes","2ddbcf04":"# Let's look at the stat\ndata.describe()","a276e365":"# Renaming the columns for better understanding\ndata.columns = ['age', 'sex', 'chest_pain_type', 'resting_bp', 'chol_level', 'fasting_blood_sugar', 'resting_ec_results', \\\n               'max_heart_rate', 'excercise_angina', 'old_peak', 'slope', 'no_major_vessels', 'thal_rate', 'target']","20abb233":"# is ther any null values in the columns? -- no.\ndata.isnull().sum()","e85ec808":"column = list(data.columns)\n\ncat = []\nnum = []\n\nfor col in column:\n    if len(data[col].value_counts()) < 6:\n        cat.append(col)\n    else:\n        num.append(col)","ce8177a8":"for col in cat:\n    \n    plt.figure(figsize=(6, 5))\n    df = data[col].value_counts().to_frame().reset_index()\n    df.columns = ['Labels', 'Count']\n    \n    import plotly.graph_objects as go\n\n    fig = go.Figure(data=[go.Bar(\n            x=df.Labels, y=df.Count,\n            text=df.Count,\n            textposition='outside',\n        )])\n    \n    # Customize aspect\n    fig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\n    fig.update_layout(title_text='Different Levels of {}'.format(col))\n\n    fig.show()\n    \n\nfor col in num:\n    \n    plt.figure(figsize=(6, 5))\n    df = data[col].value_counts().to_frame().reset_index()\n    df.columns = ['Labels', 'Count']\n    \n    import plotly.graph_objects as go\n\n    fig = go.Figure(data=[go.Bar(\n            x=df.Labels, y=df.Count,\n            text=df.Count,\n            textposition='outside',\n        )])\n    \n    # Customize aspect\n    fig.update_traces(marker_color='rgb(158,202,158)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\n    fig.update_layout(title_text='Different Levels of {}'.format(col))\n\n    fig.show()","f9b57c3e":"plt.figure(figsize=(24, 12))\nsns.heatmap(data.corr(method='pearson'), annot=True, vmin=-1.0, vmax=1.0, cmap=sns.color_palette(\"RdBu_r\", 15))\nplt.show()","464f0e0e":"data.corr(method='pearson')[:13].target.plot(kind = 'bar')","7a13093e":"def uni_var(xx):\n    \n    plt.figure(figsize=(12, 5))\n    plt.subplot(1, 2, 1)\n    sns.histplot(data[xx])\n    plt.subplot(1, 2, 2)\n    sns.boxplot(x=xx, data=data)\n    plt.show()\n    \nfor col in column:\n    uni_var(col)","d567be7c":"def count_var_a(xx, hh, title):\n    \n    g = sns.countplot(x=xx, hue=hh, data=data,palette=\"Set2\")\n    plt.title(title)\n    plt.ylabel('Count')\n    plt.legend(loc = 'upper right', bbox_to_anchor=(1.2,1))\n    plt.show()","77e896f4":"for col in cat:\n    \n    plt.figure(figsize=(7,4))\n    count_var_a(col, 'chest_pain_type', 'Countplot of different levels of {} with respect to Types of Chest pain'.format(col))","29c411e8":"for col in cat:\n    \n    plt.figure(figsize=(7,4))\n    count_var_a(col, 'excercise_angina', 'Countplot of different levels of {} with respect to Exercise Included Angina'.format(col))","845b5ca0":"for col in cat:\n    \n    plt.figure(figsize=(7,4))\n    count_var_a(col, 'slope', 'Countplot of different levels of {} with respect to Slope'.format(col))","0ebfb16f":"for col in cat:\n    \n    plt.figure(figsize=(7,4))\n    count_var_a(col, 'no_major_vessels', 'Countplot of different levels of {} with respect to no_major_vessels'.format(col))","9fa1b1a5":"for col in cat:\n    \n    plt.figure(figsize=(7,4))\n    count_var_a(col, 'thal_rate', 'Countplot of different levels of {} with respect to thal_rate'.format(col))","1259b2d4":"def count_var_a(col, title):\n    \n    sns.stripplot(x=\"max_heart_rate\",y=col,hue=col, data=data)\n    plt.title(title)\n    plt.ylabel('Levels')\n    plt.legend(loc = 'upper right', bbox_to_anchor=(1.2,1))\n    plt.xticks(rotation=90) \n    plt.show()","eb04d54a":"for col in cat:\n    \n    plt.figure(figsize=(20,4))\n    count_var_a(col, 'Different levels of {} with respect to max_heart_rate'.format(col))","ebc85968":"def count_var_a(col, title):\n    \n    sns.stripplot(x=\"old_peak\",y=col,hue=col, data=data)\n    plt.title(title)\n    plt.ylabel('Levels')\n    plt.legend(loc = 'upper right', bbox_to_anchor=(1.2,1))\n    plt.xticks(rotation=90) \n    plt.show()","8fac1a8c":"for col in cat:\n    \n    plt.figure(figsize=(20,4))\n    count_var_a(col, 'Different levels of {} with respect to old_peak'.format(col))","c83e58c7":"data.corr().target","31580ed7":"sns.jointplot('chest_pain_type', \"excercise_angina\", data, kind='kde', height=6)\nplt.show()","37de8d11":"sns.jointplot('max_heart_rate', \"old_peak\", data, kind='kde', height=6)\nplt.show()","72841373":"for col in num:\n    \n    plt.figure(figsize=(8,4))\n    ax = sns.swarmplot(x=\"target\", y=col, data=data)\n    plt.title('{} vs Target'.format(col))\n    plt.show()","59f3ea0b":"data.corr().target","4d5de0ee":"def multi_var_(xx, yy, ss):\n    \n    sns.set_theme(style=\"white\")\n    sns.relplot(x=xx, y=yy, hue=\"target\", size=ss,\n            sizes=(40, 400), alpha=.5, palette=\"muted\",\n            height=6, data=data)","bfea2e05":"multi_var_('chest_pain_type', 'max_heart_rate', 'target')","f898ee14":"multi_var_('excercise_angina', 'max_heart_rate', 'target')","aaae760a":"multi_var_('excercise_angina', 'old_peak', 'target')","699f1427":"multi_var_('no_major_vessels', 'old_peak', 'target')","fc43472c":"multi_var_('age', 'thal_rate', 'sex')","dec253f5":"feat = [\"chol_level\", \"max_heart_rate\", \"old_peak\", \"thal_rate\"]\n\nfor ff in feat:\n    plt.figure(figsize=(10,6))\n    sns.lineplot(x=\"age\",y=ff,hue=\"target\",data=data)\n    plt.show()","84f39274":"plt.figure(figsize=(10, 6))\nsns.histplot(data = data, x = 'age', hue = 'target')\nplt.title(\"Age-vs-Target\")\nplt.show()","aa69a530":"### Realationship of **chest_pain_type** with other features","18b5e25d":"## Load Dataset","cc88431b":"### Realationship of **thal_rate** with other features","9d829397":"### Relationship of 'excercise_angina' and 'max_heart_rate' with Target","b98dc316":"## 1) Uni-variate Analysis","33023a6b":"### Realationship of **old_peak** with other features","ac7a64a3":"## Import Libraries","de0ba56f":"## Separating the Categorical and Numerical columns","5d2f1cd4":"### Target vs particular features with an effect of Age","325d39d9":"## 2) Bi-variate Analysis","70941795":"### Realationship of **max_heart_rate** with other features","b79faab3":"### Realationship of **no_major_vessels** with other features","5390852a":"## Corelation","7c77b69c":"### Realationship of **excercise_angina** with other features","aae32830":"A heart attack occurs when the flow of blood to the heart is blocked. The blockage is most often a buildup of fat, cholesterol and other substances, which form a plaque in the arteries that feed the heart (coronary arteries).\n\nSometimes, a plaque can rupture and form a clot that blocks blood flow. The interrupted blood flow can damage or destroy part of the heart muscle.\n\nA heart attack, also called a myocardial infarction, can be fatal, but treatment has improved dramatically over the years. \n\n<img src= \"https:\/\/www.mayoclinic.org\/-\/media\/kcms\/gbs\/patient-consumer\/images\/2013\/08\/26\/10\/08\/ds00094_im00938_mcdc7_heartattackthu_jpg.jpg\" alt =\"HD\" style='width: 350px;'>\n\nImage and description source: https:\/\/www.mayoclinic.org\/diseases-conditions\/heart-attack\/symptoms-causes\/syc-20373106","3b5f359b":"# EDA: Heart Attack Prediction","ea03dfe7":"### Relationship of 'no_major_vessels' and 'old_peak' with Target","9ffa0b96":"## References\n\n* https:\/\/seaborn.pydata.org\/examples\/scatter_bubbles.html\n* https:\/\/plotly.com\/python\/bar-charts\/\n* https:\/\/seaborn.pydata.org\/generated\/seaborn.boxplot.html\n* https:\/\/seaborn.pydata.org\/generated\/seaborn.swarmplot.html?highlight=swarmplot\n* https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html?highlight=countplot#seaborn.countplot\n* https:\/\/www.kaggle.com\/aryantiwari123\/heart-attack-analysis-eda\n\n\n\n","53138c95":"### Relationship of 'excercise_angina' and 'old' with Target","b3c40715":"### Relationship of 'age', 'thal_rate and 'sex' with Target","d569cbed":"### Much appreciation for taking a look! \n\n<img src= \"https:\/\/images.greetingsisland.com\/images\/cards\/thank-you\/previews\/a-round-of-thanks.png?auto=format,compress\" alt =\"HD\" style='width: 500px;'>","6c5de65d":"## 3) Multi-variate Analysis","971821e3":"### Realationship of **slope** with other features","2938c587":"### Relationship of 'chest_pain_type' and 'max_heart_rate' with Target","b5b7c1f8":"# Prediction\n\n(will be available soon)","d9e6d514":"## About this dataset\n\n* Age : Age of the patient\n\n* Sex : Sex of the patient\n\n* exang: exercise induced angina (1 = yes; 0 = no)\n\n* ca: number of major vessels (0-3)\n\n* cp : Chest Pain type chest pain type\n\n        * Value 1: typical angina\n        * Value 2: atypical angina\n        * Value 3: non-anginal pain\n        * Value 4: asymptomatic\n        * trtbps : resting blood pressure (in mm Hg)\n\n* chol : cholestoral in mg\/dl fetched via BMI sensor\n\n* fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n\n* rest_ecg : resting electrocardiographic results\n\n        * Value 0: normal\n        * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n        * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n        * thalach : maximum heart rate achieved\n\n* target : 0 = less chance of heart attack 1 = more chance of heart attack","84594e67":"### Target vs Numerical Features","aae25231":"The features having corelation coefficient close to +0.4 and -0.4 have stronger relation with the target variable."}}