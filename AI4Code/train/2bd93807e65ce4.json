{"cell_type":{"d2a3eee0":"code","76abbd6b":"code","c6250c84":"code","dae621c8":"code","7d1c0068":"code","1691e534":"code","06a263f2":"code","1529bfc5":"code","7af03dfd":"code","7485c77e":"code","58f8b078":"code","0dccc348":"code","391fc5d0":"code","2f9129b1":"code","d18c7a38":"code","c7a74189":"code","fc2c48a2":"code","41506811":"code","59c33e44":"code","73473041":"code","56eb7155":"code","bf8faa3c":"code","6ab51b08":"code","a2864517":"code","0853589a":"code","bfea7ac5":"code","ecf23ee9":"code","93f1e00d":"code","c1b9459e":"code","e6e65997":"code","641c0318":"code","db8b29f7":"code","86b8bcd8":"code","c1b4dcf5":"code","281132e4":"code","f9ac8bc0":"code","ee91ef52":"code","61fd2f4c":"code","e101b88d":"code","21657538":"code","086c7785":"code","26afc9d3":"code","d8160b63":"code","6ef169dc":"code","b862fb2a":"code","ce6821ae":"code","b9053a6b":"code","a0c86337":"code","e9370cc3":"code","c88bff8f":"code","752c9d44":"code","259b639b":"code","90f4cec2":"code","c401442c":"code","cb651db9":"code","65f0b8b7":"code","c4ae784e":"code","4f7648f5":"code","b77360b2":"markdown","96a480ff":"markdown","f9d70e91":"markdown","7f9a1ba0":"markdown","b9391a44":"markdown","364514de":"markdown","f869b667":"markdown","a4f33b6a":"markdown","513308bd":"markdown","ac9e8178":"markdown","d3bab308":"markdown","b694868c":"markdown","17ac847a":"markdown","f0672f71":"markdown","ad0ea970":"markdown","a29db1de":"markdown"},"source":{"d2a3eee0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","76abbd6b":"#import libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# plotly library\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c6250c84":"# read data\ndf = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","dae621c8":"df.shape","7d1c0068":"df.describe()","1691e534":"df.columns","06a263f2":"df.isnull().sum()","1529bfc5":"df.info()","7af03dfd":"df.describe().T","7485c77e":"df.corr()","58f8b078":"# create average column\ndf['average score'] = df[['math score', 'reading score', 'writing score']].mean(axis=1)\ndf","0dccc348":"# rename some cloumn for convenience\ndf.rename(columns = {'race\/ethnicity': 'race'}, inplace = True)","391fc5d0":"df.hist()","2f9129b1":"plt.hist(df['average score'], color='blue', edgecolor= 'black', bins=10)\nplt.title(\"Average Score\")","d18c7a38":"# numerical columns distribution\nnumerical_columns = ['math score', 'reading score', 'writing score', 'average score']","c7a74189":"for i in numerical_columns:\n    plt.figure(figsize=(12,10))\n    sns.distplot(df[i])","fc2c48a2":"bar = sns.barplot(x='race', y='math score', data=df)\nplt.xlabel('Race')\nplt.ylabel('Math Score')\nplt.title('Math Score with Race')","41506811":"bar = sns.barplot(x='race', y='math score', hue='gender', data=df, palette='autumn')\nplt.title('Mathe Score with Race and Gender')\nplt.xlabel('Race')\nplt.ylabel('Math Score')","59c33e44":"bar = sns.barplot(x='race', y='math score', hue='parental level of education',\n                 data = df, palette = 'rainbow')\nplt.ylabel('Mathe Score')\nplt.xlabel('Race')\nplt.title('Mathe Score with Race and Parental Level of Education')","73473041":"bar = sns.barplot(x='race', y='reading score', hue='gender', data = df,\n                 )\nplt.ylabel('Reading Score')\nplt.xlabel('Race')\nplt.title(\"Reading Score with Race\")","56eb7155":"df_rece_math=df.groupby(by =['race'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\nfig = go.Figure(go.Bar(\n    y=df_rece_math['Race'],x=df_rece_math['Reading Score'],orientation=\"h\",\n    marker={'color': df_rece_math['Reading Score'], \n    'colorscale': 'sunsetdark'},  \n    text=df_rece_math['Reading Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Mean Reading Score',xaxis_title=\"Race\",yaxis_title=\"Reading Score\",title_x=0.5)\nfig.show()","bf8faa3c":"df_rece_math=df.groupby(by =['race'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\nfig = go.Figure(go.Bar(\n    x=df_rece_math['Race'],y=df_rece_math['Reading Score'],\n    marker={'color': df_rece_math['Reading Score'], \n    'colorscale': 'Viridis'},  \n    text=df_rece_math['Reading Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Mean Reading Score',xaxis_title=\"Race\",yaxis_title=\"Reading Score\",title_x=0.5)\nfig.show()","6ab51b08":"sns.scatterplot(data=df, x='math score', y='reading score')\nplt.title(\"Reading Score with Math Score\")\nplt.xlabel(\"Math Score\")\nplt.ylabel('Reading Score')","a2864517":"sns.scatterplot(data=df, x='writing score', y='reading score', hue='gender',\n               style='gender')","0853589a":"sns.scatterplot(data=df, x='writing score', y='math score', hue='parental level of education')","bfea7ac5":"fig = px.scatter(df, x='math score', y='reading score')\nfig.update_layout(title='Math Score Vs Writing Score',\n                 xaxis_title= 'Math Score', yaxis_title='Writing Score', title_x=0.5)\nfig.show()","ecf23ee9":"fig = px.scatter(df, x='math score', y='reading score', color='gender')\nfig.update_layout(title='Math Score Vs Writing Score',\n                 xaxis_title= 'Math Score', yaxis_title='Writing Score', title_x=0.5)\nfig.show()","93f1e00d":"sns.lineplot(data=df, x='math score', y='reading score')","c1b9459e":"sns.lineplot(data=df, x='math score', y='writing score', hue='gender')","e6e65997":"sns.lineplot(data=df,x='math score',y='reading score', hue='race')","641c0318":"labels = df.race.value_counts().index\ncolors = ['red', 'green', 'blue','yellow', 'orange']\nexplode = [0.1,0,0,0,0]\nsizes = df.race.value_counts().values\n\n# visulize\n\nplt.figure(figsize=(7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Race', color='black', fontsize=15)","db8b29f7":"plot = sns.countplot(data=df, x='gender')\nplt.title(\"Gender Count\")","86b8bcd8":"plot = sns.countplot(data=df, x='gender', hue='race', palette='bone')","c1b4dcf5":"graph = sns.catplot(x='gender', hue='race', col='lunch',\n                   data=df, kind='count',\n                   height=4, aspect=.7)","281132e4":"a = sns.swarmplot(x=df['math score'])","f9ac8bc0":"a = sns.swarmplot(y=df['math score'], x='race', data=df)","ee91ef52":"ax = sns.swarmplot(x=\"race\", y=\"math score\", hue=\"gender\", data=df)\nplt.ylabel('Math Score');\nplt.title('Math Score Distribution With Gender');","61fd2f4c":"sns.pairplot(df)","e101b88d":"sns.pairplot(df, hue='gender')","21657538":"sns.pairplot(df, hue=\"gender\", diag_kind=\"hist\");","086c7785":"sns.jointplot(data=df, x=\"math score\", y=\"reading score\");\n","26afc9d3":"sns.jointplot(data=df, x=\"math score\", y=\"reading score\", kind=\"reg\");\n","d8160b63":"sns.jointplot(data=df, x=\"math score\", y=\"reading score\", kind=\"hex\");\n","6ef169dc":"ax = sns.pointplot(y=\"math score\", x=\"gender\", data=df,hue='lunch',palette=\"gnuplot\")\nplt.xlabel('Gender')\nplt.ylabel('Math Score');","b862fb2a":"ax = sns.pointplot(x=\"math score\", y=\"gender\", data=df,hue='race',palette=\"ocean\")\nplt.ylabel('Gender')\nplt.xlabel('Math Score');","ce6821ae":"g = sns.catplot(x=\"gender\", y=\"math score\",\n                hue=\"race\", col=\"lunch\",\n                data=df, kind=\"point\",\n                dodge=True,\n                height=4, aspect=.7);","b9053a6b":"sns.kdeplot(df['math score'],shade=True,color='LightSeaGreen');\nplt.ylabel('Possibility')\nplt.xlabel('Math Score');","a0c86337":"sns.kdeplot(df['reading score'],color='Indigo')\nsns.kdeplot(df['writing score'],color='IndianRed')\nplt.ylabel('Possibility')\nplt.xlabel('Score');","e9370cc3":"sns.kdeplot(df['math score'],df['writing score'])\nplt.ylabel('Writing Score')\nplt.xlabel('Math Score')\nplt.show()","c88bff8f":"ax = sns.boxplot(x=df[\"math score\"])\n\nplt.xlabel('Math Score Distributions ')\nplt.show()","752c9d44":"ax = sns.boxplot(y=\"math score\", x=\"gender\", data=df)\nplt.ylabel('Math Score ')\nplt.xlabel('Gender ')\nplt.title('Math Score Distributions With Gender')\nplt.show()","259b639b":"ax = sns.boxplot(x=\"gender\", y=\"math score\", hue=\"lunch\",\n                 data=df, linewidth=2.5)\nplt.ylabel('Math Score ')\nplt.xlabel('Gender ')\nplt.title('Math Score Distributions With Gender,Lunch')\nplt.show()","90f4cec2":"ax = sns.boxplot(data=df, orient=\"h\", palette=\"gist_rainbow\")\nplt.xlabel(' Score ')\nplt.title('Math,Reading And Writing Score Distributions ')\nplt.show()","c401442c":"ax = sns.boxplot(x=\"race\", y=\"math score\", data=df)\nax = sns.swarmplot(x=\"race\", y=\"math score\", data=df, color=\".25\")\nplt.xlabel(' Race ')\nplt.ylabel('Math Score ')\nplt.title('Math Score Distributions With Box And Swarm plot ')\nplt.show()","cb651db9":"ax = sns.violinplot(x=\"gender\", y=\"math score\", data=df)\nplt.xlabel(' Gender ')\nplt.ylabel('Math Score ')\nplt.title('Math Score Distributions With Gender ')\nplt.show()","65f0b8b7":"ax=sns.distplot(df[\"math score\"])\nplt.ylabel(' Possibility ')\nplt.xlabel(' Score ')\nplt.title('Math Score Distributions')\nplt.show()","c4ae784e":"sns.distplot(df['reading score'], bins = 10, kde = False);\nplt.ylabel(' Count ')\nplt.xlabel(' Score ')\nplt.title('Reading Score Distributions')\nplt.show()","4f7648f5":"sns.heatmap(df.corr(), annot=True, linewidths=.5, fmt='f' ,cmap='inferno')\nplt.show()","b77360b2":"# Scatter Plot Plotly ","96a480ff":"# Joint Plot Seaborn","f9d70e91":"# Hist Plot Seaborn","7f9a1ba0":"# Count Plot Seaborn","b9391a44":"# Point Plot Seaborn","364514de":"# Pairplot Plot Seaborn","f869b667":"# Kde Plot Seaborn","a4f33b6a":"# Line Plot Seaborn","513308bd":"# Bar plot Ploty ","ac9e8178":"# Bar Plot Seaborn\n\nShow point estimates and confidence intervals as rectangular bars.\n A bar plot represent an estimate of central tendency for a numeric variable with the height of each rectangle and provides some indication of the uncertainty around that estimate using error bars","d3bab308":"# Violin Plot Seaborn","b694868c":"# Pie Plot Seaborn","17ac847a":"# Swarmplot Plot Seaborn","f0672f71":"# Heatmap Plot Seaborn","ad0ea970":"# Box Plot Seaborn","a29db1de":"# Scatter Plot Seaborn\nDraw a scatter plot with possibility of several semantic groupings.\n\nThe relationship between x and y can be shown for different subsets of the data using the hue, size, and style parameters"}}