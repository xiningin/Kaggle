{"cell_type":{"1de49440":"code","e2f1552b":"code","07ccfa32":"code","f6430312":"code","20f7ce15":"code","bc0b29cc":"code","f64ad3fa":"code","94d52901":"code","08f2d575":"code","1e1b4b7e":"code","a4f00e5d":"code","0c7e56e1":"code","ed5424ba":"code","0dc03a2c":"code","dd2cc9c5":"code","50c5f06f":"code","03d53743":"code","0bd1cac0":"code","3c00d9fd":"code","e1bef6b0":"code","778ce05a":"markdown","5aa1bcbd":"markdown","a25d446d":"markdown","764a65ff":"markdown","c7702439":"markdown","52218d3e":"markdown","2bad4711":"markdown","0ec72d3a":"markdown","866a4909":"markdown","6ef2765b":"markdown","37db0071":"markdown","62eeaa25":"markdown","efc8d110":"markdown","8dc454dc":"markdown","60e9c5c2":"markdown"},"source":{"1de49440":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","e2f1552b":"dataset = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","07ccfa32":"dataset.columns","f6430312":"nottexistingvar","20f7ce15":"dataset.head()","bc0b29cc":"pd.set_option('display.max_rows', 200)\ndataset.head(n=200)","f64ad3fa":"import matplotlib.image as mpimg\n\nimg = mpimg.imread('https:\/\/logomakr.com\/storage\/2021\/09\/logomaker.png')\nimgplot = plt.imshow(img)\n\nplt.show();","94d52901":"f, ax = plt.subplots(figsize=(7, 5))\n\nsns.despine(f)\n\nsns.histplot(\n    dataset,\n    x=\"math score\", hue=\"gender\",\n    multiple=\"stack\",\n    palette=\"light:m_r\",\n    edgecolor=\".3\",\n);","08f2d575":"sns.relplot(\n    x=\"math score\", \n    y=\"reading score\", \n    hue=\"gender\", \n    sizes=(40, 400), \n    alpha=.5, \n    palette=\"muted\",\n    height=6, \n    data=dataset,\n);","1e1b4b7e":"plt.figure(figsize=(15, 20), dpi=80);\n\nsns.pairplot(dataset, hue=\"parental level of education\", palette=\"tab10\");","a4f00e5d":"from ipywidgets import interact \n\n\n@interact(x=(0, 100, 10))\ndef p(x=50):\n    print(x)","0c7e56e1":"parental_education_levels = dataset[\"parental level of education\"].value_counts()\nparental_education_levels","ed5424ba":"fig = px.pie(values=parental_education_levels.values, names=parental_education_levels.index, title='Distribution of parental education levels')\nfig.show()","0dc03a2c":"fig = px.scatter_3d(dataset, x=\"math score\", y=\"writing score\", z=\"reading score\", opacity=0.8, color=\"parental level of education\")\nfig.show()","dd2cc9c5":"from bokeh.io import output_file, show, output_notebook, push_notebook, curdoc\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource, HoverTool, CategoricalColorMapper, DataRange1d, Select, Div, Select, Button, ColorBar, CustomJS\nfrom bokeh.layouts import row,column, gridplot\nfrom bokeh.models.widgets import Tabs, Panel\nfrom bokeh.palettes import Blues4\nfrom bokeh.application import Application\nfrom bokeh.application.handlers import FunctionHandler\nfrom bokeh.transform import cumsum, linear_cmap\n\noutput_notebook()","50c5f06f":"p = figure(plot_width=500, plot_height=500)\n\n# add a circle renderer with a size, color, and alpha\np.circle(dataset[\"writing score\"], dataset[\"math score\"], size=20, color=\"navy\", alpha=0.2)\n\n# show the results\nshow(p)","03d53743":"full = pd.read_csv('..\/input\/titanic-extended\/full.csv')\nfull.head()","0bd1cac0":"df2 = full[['Lifeboat', 'Pclass']].copy()\n\ndf2 = df2[(df2.Lifeboat.notna()) & (df2.Lifeboat != '?')]\n\ndf2.loc[df2.Lifeboat == '14?', 'Lifeboat'] = '14'\ndf2.loc[df2.Lifeboat == '15?', 'Lifeboat'] = '15'\ndf2.loc[df2.Lifeboat == 'A[64]', 'Lifeboat'] = 'A'\n\ndf2 = pd.get_dummies(df2, columns=['Pclass'], prefix='', prefix_sep='')\n\ndf2 = df2.groupby('Lifeboat', as_index=False).sum()\n\norder = ['7', '5', '3', '8', '1', '6', '16', '14', '12', '9',\n         '11', '13', '15', '2', '10', '4', 'C', 'D', 'B', 'A']\ndf2 = df2.set_index('Lifeboat').reindex(order).reset_index()","3c00d9fd":"df2['1_per'] = df2['1'] \/ (df2['1'] + df2['2'] + df2['3']) * 100\ndf2['2_per'] = df2['2'] \/ (df2['1'] + df2['2'] + df2['3']) * 100\ndf2['3_per'] = df2['3'] \/ (df2['1'] + df2['2'] + df2['3']) * 100\n\n\ndf2['1_ang'] = df2['1_per'] \/ 100 * 2 * np.pi\ndf2['2_ang'] = df2['2_per'] \/ 100 * 2 * np.pi\ndf2['3_ang'] = df2['3_per'] \/ 100 * 2 * np.pi\n\ndf2_plot=pd.DataFrame({'class': ['Class 1', 'Class 2', 'Class 3'],\n                       'percent': [float('nan'), float('nan'), float('nan')],\n                       'angle': [float('nan'), float('nan'), float('nan')],\n                       'color': ['#c9d9d3', '#718dbf', '#e84d60']})","e1bef6b0":"# Create the ColumnDataSource objects \"s2\" and \"s2_plot\"\ns2 = ColumnDataSource(df2)\ns2_plot = ColumnDataSource(df2_plot)\n\n# Create the Figure object \"p2\"\np2 = figure(plot_width=275, plot_height=350, y_range=(-0.5, 0.7),\n            toolbar_location=None, tools=['hover'], tooltips='@percent{0.0}%')\n\n# Add circular sectors to \"p2\"\np2.wedge(x=0, y=0, radius=0.8, source=s2_plot,\n         start_angle=cumsum('angle', include_zero=True), end_angle=cumsum('angle'),\n         fill_color='color', line_color=None, legend='class')\n\n# Change parameters of \"p2\"\np2.axis.visible = False\np2.grid.grid_line_color = None\np2.legend.orientation = 'horizontal'\np2.legend.location = 'top_center'\n\n# Create the custom JavaScript callback\ncallback2 = CustomJS(args=dict(s2=s2, s2_plot=s2_plot), code='''\n    var ang = ['1_ang', '2_ang', '3_ang'];\n    var per = ['1_per', '2_per', '3_per'];\n    if (cb_obj.value != 'Please choose...') {\n        var boat = s2.data['Lifeboat'];\n        var ind = boat.indexOf(cb_obj.value);\n        for (var i = 0; i < ang.length; i++) {\n            s2_plot.data['angle'][i] = s2.data[ang[i]][ind];\n            s2_plot.data['percent'][i] = s2.data[per[i]][ind];\n        }\n    }\n    else {\n        for (var i = 0; i < ang.length; i++) {\n            s2_plot.data['angle'][i] = undefined;\n            s2_plot.data['percent'][i] = undefined;\n        }\n\n    }\n    s2_plot.change.emit();\n''')\n\n# When changing the value of the dropdown menu execute \"callback2\"\noptions = ['Please choose...'] + list(s2.data['Lifeboat'])\nselect = Select(title='Lifeboat (in launch order)', value=options[0], options=options)\nselect.js_on_change('value', callback2)\n\n# Display \"select\" and \"p2\" as a column\nshow(column(select, p2))","778ce05a":"Tables can be really looong, so we need to think about scrolling expirience:","5aa1bcbd":"## Matplotlib-based Graphic\n\nA lot of python libraries are based on matplotlib library. It provides a static image output. \n\nFor example, let's take a look at distributions of math scores over gender:","a25d446d":"Try to hover over the chart. Try to save the plot as a PNG image by clicking on the top right popup buttons","764a65ff":"### Interactive Plots with Bokeh\n\nBokeh provides a way to have different UI control that changes the way your plots get generated:","c7702439":"## Interactive Widgets\n\nJupyter provides a way to have interactive outputs. \n\n### IPyWidgets\n\nHere is the simplest form of it (try to drag the slider and see how output got changed):","52218d3e":"### Plotly\n\nPlotly is another popular DataViz tool that provides interactive graphics.\n\nFor example, let's see distribution of parental level of education as a donut graph:","2bad4711":"# Jupyter Interactive DataViz Widgets  \n\nThis notebook illustrates a complex output types that occur when working with some popular DataViz libs","0ec72d3a":"## Exception Trace\n\nSimilar to the plain text but we may want to style it a bit differently to emphasize that error has occured:","866a4909":"Size of the graphics can be changed:","6ef2765b":"## Images\n\nJupyter is capable of showing images:","37db0071":"Try to hover over the dots. Try to turn the chart. Try to hover over buttons in the top right block.","62eeaa25":"Now let's try to see what kind of surface our scores form in the 3d space:","efc8d110":"..and correlation between reading and math scores:","8dc454dc":"## Tables\n\nPandas is one of the most popular tools for data wrangling in Python. It can retrieve a table-like structure when you want to preview a dataframe:","60e9c5c2":"## Plain Text\n\nThe simplest possible response output:"}}