{"cell_type":{"437092d8":"code","e9cf80f5":"code","4cde08b6":"code","d3408e12":"code","9bd3f21a":"code","c43518f2":"code","258070bf":"code","3293283e":"code","b662aab9":"code","e048f383":"code","b9b186af":"code","63d0e2f1":"code","7e184e9a":"code","4d3dfd37":"code","34975c9c":"code","95de7c77":"code","a9294dd4":"code","4d3d797e":"markdown","3247fe28":"markdown","435cebb8":"markdown","f28e5893":"markdown","66bce730":"markdown","b7c2a91d":"markdown","f2e5579b":"markdown","1f3a3909":"markdown","9d192736":"markdown","ede8bb11":"markdown","fbcd1a16":"markdown","f6d81cf9":"markdown","605fedfc":"markdown","301c2be5":"markdown","5bcd8f29":"markdown"},"source":{"437092d8":"import os\nimport glob\nfrom pathlib import Path\nimport numpy as np\nimport pandas as pd\n\nfrom tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt\nfrom PIL import Image","e9cf80f5":"!pip install -q faiss-cpu\nimport faiss","4cde08b6":"INPUT_ROOT = Path('..\/input\/shigglecup-1st')\n\nINPUT = INPUT_ROOT \/ \"DATA\"\nDATA = INPUT\nTRAIN = DATA \/ \"pokemon_images\"\nTEST = DATA \/ \"pokemon_images\"","d3408e12":"df_train = pd.read_csv(DATA \/ \"train.csv\")\ndf_test = pd.read_csv(DATA \/ \"test.csv\")\nsmpl_sub = pd.read_csv(DATA \/ \"sample_submission.csv\")","9bd3f21a":"df_train.shape, df_test.shape","c43518f2":"df_all = pd.concat([df_train, df_test], axis=0)\ndf_all.shape","258070bf":"spec_col = ['attack', 'defense', 'hp', 'special_attack', 'special_defense', 'speed']\nrate_col = spec_col+['spec_sum']\n\ndf_all['spec_sum'] = df_all[spec_col].sum(axis=1)\n\nfor col in rate_col:\n    df_all[col] = df_all[col]\/df_all[col].max()\n\ndf_all.head().T","3293283e":"df_plot = df_all[df_all['image_exist']==1]\ndf_plot = df_plot[~df_plot['target'].isna()]\ndf_plot.shape","b662aab9":"def plot_img_spec(row):\n    y_pos = np.arange(len(rate_col))\n    if row['image_exist']:\n        try:\n            img = Image.open(TRAIN \/ f\"{row['url_image']}\")\n        except:\n            img = Image.open(glob.glob(str(TRAIN \/ f\"{row['url_image'][:-4]}-*.png\"))[0])\n        img = np.array(img)\n\n        plt.figure(figsize=(8,4))\n        plt.subplot(121)\n        plt.imshow(img)\n        plt.title(f\"{row['pokemon']}  target = {row['target']}\")\n\n        plt.subplot(122)\n        plt.barh(y_pos, row[rate_col], align='center', color=['dodgerblue']*(len(rate_col)-1)+['darkorange'])\n        plt.yticks(y_pos, rate_col)\n        plt.xlim(0, 1.0)\n        plt.tight_layout()\n        plt.show()\n    else:\n        print('None image')\n        plt.figure(figsize=(8,4))\n        plt.subplot(121)\n        plt.title(f\"{row['pokemon']}  target = {row['target']}\")\n\n        plt.subplot(122)\n        plt.barh(y_pos, row[rate_col], align='center', color=['dodgerblue']*(len(rate_col)-1)+['darkorange'])\n        plt.yticks(y_pos, rate_col)\n        plt.xlim(0, 1.0)\n        plt.tight_layout()\n        plt.show()","e048f383":"df_tmp = df_plot.sort_values('target', ascending=True).iloc[:20]\n\nfor index, row in df_tmp.iterrows():\n    plot_img_spec(row)","b9b186af":"df_tmp = df_plot.sort_values('target', ascending=False).iloc[:20]\n\nfor index, row in df_tmp.iterrows():\n    plot_img_spec(row)","63d0e2f1":"class FaissKNeighbors:\n    def __init__(self, k=5):\n        self.index = None\n        self.d = None\n        self.k = k\n\n    def fit(self, X):\n        X = X.copy(order='C')\n        self.d = X.shape[1]\n        self.index = faiss.IndexFlatL2(self.d)\n        self.index.add(X.astype(np.float32))\n\n    def predict(self, X):\n        X = X.copy(order='C')\n        X = np.reshape(X, (-1, self.d))\n        distances, indices = self.index.search(X.astype(np.float32), k=self.k)\n        return indices[0]","7e184e9a":"kn = FaissKNeighbors(k=10)\nkn.fit(df_plot[rate_col].values)","4d3dfd37":"idx = kn.predict(df_plot[rate_col][df_plot['pokemon']=='audino'].values)\ndf_tmp = df_plot.iloc[idx]\ndf_tmp","34975c9c":"for index, row in df_tmp.iterrows():\n    plot_img_spec(row)","95de7c77":"idx = kn.predict(df_plot[rate_col][df_plot['pokemon']=='kyogre'].values)\ndf_tmp = df_plot.iloc[idx]\ndf_tmp","a9294dd4":"for index, row in df_tmp.iterrows():\n    plot_img_spec(row)","4d3d797e":"\u4f59\u8ac7\u3067\u3059\u304c\u3001google\u691c\u7d22\u3067\u300c\u30bf\u30d6\u30f3\u30cd\u300d\u3068\u5165\u529b\u3059\u308b\u3068\u3001\u300c\u30bf\u30d6\u30f3\u30cd\u72e9\u308a\u300d\u3068\u3044\u3046\u4e0d\u7a4f\u306a\u5019\u88dc\u30ef\u30fc\u30c9\u304c\u51fa\u3066\u304d\u307e\u3059\u3002  \n[\u30dd\u30b1\u30e2\u30f3wiki](https:\/\/wiki.xn--rckteqa2e.com\/wiki\/%E3%82%BF%E3%83%96%E3%83%B3%E3%83%8D%E7%8B%A9%E3%82%8A)\u306b\u3088\u308b\u3068\u3001\u7d4c\u9a13\u5024\u7a3c\u304e\u3068\u3057\u3066\u30ab\u30e2\u3089\u308c\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\uff08\u304b\u308f\u3044\u305d\u3046\uff09\n> \u30bf\u30d6\u30f3\u30cd\u72e9\u308a(\u30bf\u30d6\u30f3\u30cd\u304c\u308a)\u3068\u306f\u3001\u7b2c\u4e94\u4e16\u4ee3\u3067\u7d4c\u9a13\u5024\u3092\u7a3c\u3050\u65b9\u6cd5\u3068\u3057\u3066\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u65b9\u6cd5\u306e\u4fd7\u79f0\u3002\u7b2c\u516d\u4e16\u4ee3\u3067\u3082\u540c\u7a2e\u306e\u624b\u6cd5\u304c\u672a\u3060\u884c\u308f\u308c\u3066\u3044\u308b\u3002","3247fe28":"### \u5f15\u6570`k`\u3067\u691c\u7d22\u3059\u308b\u5019\u88dc\u6570\u3092\u6307\u5b9a\n\u4eca\u56de\u306f\u4e0a\u4f4d10\u30dd\u30b1\u30e2\u30f3\u3092\u691c\u7d22\u3002","435cebb8":"### \u753b\u50cf\u304c\u306a\u3044\u30dd\u30b1\u30e2\u30f3\u306f\u524a\u9664","f28e5893":"## \u6982\u8981\n- target\u5024\u306b\u5bfe\u3059\u308b\u753b\u50cf\u3001\u57fa\u790e\u80fd\u529b\u3092\u53ef\u8996\u5316\u3000(\u3059\u3067\u306b[\u753b\u50cfEDA](https:\/\/www.kaggle.com\/shunsuketakahashi\/shiggle-1-eda-image)\u3042\u308b\u306e\u3067\u4e8c\u756a\u714e\u3058\u611f\u3042\u308a\u307e\u3059\u304c\u3001\u4f9b\u990a\u3055\u305b\u3066\u304f\u3060\u3055\u3044)\n- \u7279\u5b9a\u306e\u30dd\u30b1\u30e2\u30f3\u3068\u57fa\u790e\u80fd\u529b\u304c\u4f3c\u3066\u3044\u308b\u30dd\u30b1\u30e2\u30f3\u3092faiss\u3067\u691c\u7d22\u3057\u3001\u53ef\u8996\u5316","66bce730":"### audino(\u30bf\u30d6\u30f3\u30cd)\u3068\u4f3c\u3066\u3044\u308b\u30dd\u30b1\u30e2\u30f3","b7c2a91d":"### \u53ef\u8996\u5316\u7528\u306e\u95a2\u6570","f2e5579b":"### Read Data","1f3a3909":"### Target\u4e0a\u4f4d\u3092\u53ef\u8996\u5316","9d192736":"### kyogre(\u30ab\u30a4\u30aa\u30fc\u30ac)\u3068\u4f3c\u3066\u3044\u308b\u30dd\u30b1\u30e2\u30f3\n\u30b5\u30d5\u30a1\u30a4\u30a2\u4e16\u4ee3\u306a\u306e\u3067\u30ab\u30a4\u30aa\u30fc\u30ac\u3084\u30ec\u30c3\u30af\u30a6\u30b6\u597d\u304d\u3067\u3059","ede8bb11":"\u6240\u611f\uff1a[\u3053\u3061\u3089\u306eDiscussion](https:\/\/www.kaggle.com\/c\/shigglecup-1st\/discussion\/267876)\u3067\u3082\u8a00\u308f\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u521d\u306e\u753a\u3067\u906d\u9047\u3057\u305d\u3046\u306a\u30dd\u30b1\u30e2\u30f3\u591a\u3044\u3067\u3059\u306d","fbcd1a16":"\u6240\u611f\uff1a\n- \u4f1d\u8aac\u306e\u30dd\u30b1\u30e2\u30f3\u7cfb\u3092\u6291\u3048\u3066\u3001blissey\uff08\u30cf\u30d4\u30ca\u30b9\uff09\u30fbaudino\uff08\u30bf\u30d6\u30f3\u30cd\uff09\u304c\u4e0a\u4f4d\u306b\u3044\u307e\u3059\u306d\u3002  \n  \u8abf\u3079\u305f\u3068\u3053\u308d\u3001\u30cf\u30d4\u30ca\u30b9\u306f\u9032\u5316\u6761\u4ef6\u304c\u96e3\u3057\u3044\u305f\u3081\u30ec\u30a2\u30ad\u30e3\u30e9\u3068\u3057\u3066\u7d0d\u5f97\u611f\u3042\u308a\u307e\u3059\u304c\u3001\u30bf\u30d6\u30f3\u30cd\u306f\u8b0e\u3067\u3059\uff08\u9032\u5316\u30ad\u30e3\u30e9\u3067\u3082\u4f1d\u8aac\u3067\u3082\u306a\u3044\uff09\u3002\n- spec_sum(\u7a2e\u65cf\u5024)\u304c\u9ad8\u3044\u30dd\u30b1\u30e2\u30f3\u304c\u57fa\u672c\u7684\u306b\u306f\u7d4c\u9a13\u5024\u3082\u9ad8\u3044\u50be\u5411\u306b\u3042\u308a\u305d\u3046\u3067\u3059","f6d81cf9":"\u6240\u611f\n- \u57fa\u790e\u80fd\u529b\u304c\u4f3c\u3066\u3044\u308b\u30dd\u30b1\u30e2\u30f3\u306b\u6bd4\u3079\u3001\u30bf\u30d6\u30f3\u30cd\u306e\u7d4c\u9a13\u5024\u306f\u3084\u306f\u308a\u304a\u5f97\u3067\u3059\u306d","605fedfc":"### \u57fa\u790e\u80fd\u529b\u3092\u5404\u9805\u76ee\u306e\u6700\u5927\u5024\u3067\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\u5168\u9805\u76ee\u3092\u5408\u8a08\u3057\u305f\u9805\u76ee\u3082\u8ffd\u52a0\u3057\u3001[Host\u66f0\u304f](https:\/\/www.kaggle.com\/shimishige\/host-baseline)\n\u7a2e\u65cf\u5024\u306a\u308b\u3082\u306e\u3082\u7b97\u51fa","301c2be5":"### Target\u4e0b\u4f4d\u3092\u53ef\u8996\u5316","5bcd8f29":"## faiss\u3067\u985e\u4f3c\u30b9\u30da\u30c3\u30af\u306e\u30dd\u30b1\u30e2\u30f3\u3092\u691c\u7d22"}}