{"cell_type":{"2d6eed3f":"code","c678142c":"code","19d7792b":"code","c7f09e09":"code","048e90ac":"code","30399ced":"code","90545f9d":"code","64a72b5b":"code","ab2ce080":"code","3f0a8d45":"code","12a700dc":"code","2b5bbe72":"code","1178b225":"code","f7ddb386":"code","70a10d15":"code","4c2b5050":"code","03509459":"code","55b9131d":"code","eb908c27":"code","e9d5ad78":"code","c2ac77b5":"code","a4d58073":"code","313eaac7":"code","2fed6712":"code","2c7c4c7d":"code","9641fff6":"code","f132a91f":"code","056ac564":"code","fb89bd40":"markdown","727859d3":"markdown","ee5fbeb1":"markdown","82307a64":"markdown","03742166":"markdown","236235f7":"markdown","2a28f309":"markdown","a00ffe5f":"markdown","e8d54cc5":"markdown","f29746a3":"markdown","3e0d1f3a":"markdown","f3315076":"markdown","95543978":"markdown","fdee6e1d":"markdown","2d495c9b":"markdown","98afa9ba":"markdown","e7f1ad83":"markdown","5a9aea14":"markdown","4f0e39f5":"markdown","09181357":"markdown","5fde2998":"markdown","ccd9b6d6":"markdown","b80f7291":"markdown","b205dcb2":"markdown","d4f78af7":"markdown","aa5f08c3":"markdown","2ff7ceec":"markdown"},"source":{"2d6eed3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c678142c":"import seaborn as sns\nsns.set(style=\"darkgrid\")","19d7792b":"tips = sns.load_dataset('tips')","c7f09e09":"tips.info()","048e90ac":"tips.head(10)","30399ced":"tips.describe().T","90545f9d":"plt.figure(figsize=(10,7))\nplt.title('Total Bill Amounts By Days')\nsns.stripplot(x=\"day\", y=\"total_bill\", data=tips);","64a72b5b":"plt.figure(figsize=(10,7))\nplt.title('Total Wage Distributions By Gender And Days')\nsns.stripplot(x=\"sex\", y=\"total_bill\", hue=\"day\", data=tips, marker=\"D\");","ab2ce080":"plt.figure(figsize=(10,7))\nplt.title('Total Bill Amounts By Days')\nsns.swarmplot(x=\"day\", y=\"total_bill\", data=tips);","3f0a8d45":"plt.figure(figsize=(10,7))\nplt.title('Total Bill Amount by Days and Customer Smoking Status')\nsns.swarmplot(x=\"day\", y=\"total_bill\", hue=\"smoker\", data=tips, palette=\"Set2\", dodge=True);","12a700dc":"plt.figure(figsize=(20,7))\nplt.title('Total Bill')\nsns.boxplot(x=tips[\"total_bill\"]);","2b5bbe72":"plt.figure(figsize=(20,7))\nplt.title('Total Bill By Time And Day')\nsns.boxplot(x=\"day\", y=\"total_bill\", hue=\"time\", data=tips, palette=\"Set1\");","1178b225":"plt.figure(figsize=(20,7))\nplt.title('Total Bill')\nsns.violinplot(x=tips[\"total_bill\"]);","f7ddb386":"plt.figure(figsize=(20,7))\nplt.title('Total Bill By Sex And Day')\nsns.violinplot(x=\"day\", y=\"total_bill\", hue=\"sex\", data=tips, palette=\"Set3_r\");","70a10d15":"plt.figure(figsize=(20,7))\nplt.title('Total Bill')\nsns.boxenplot(x=tips[\"total_bill\"], color='g');","4c2b5050":"plt.figure(figsize=(20,7))\nplt.title('Total Bill By Time')\nsns.pointplot(x=\"time\", y=\"total_bill\", data=tips);","03509459":"plt.figure(figsize=(20,7))\nplt.title('Number Of Customers By Days')\nsns.barplot(y=tips.day.index, x=tips.day, color='purple'); ","55b9131d":"plt.figure(figsize=(20,7))\nplt.title('Tip Total By Days')\nsns.barplot(y='tip', x='day', data=tips, ci=77);","eb908c27":"plt.figure(figsize=(20,7))\nplt.title('Gender Of Customers Who Tip By Days')\nsns.barplot(y=tips.tip, x=tips.day, hue=tips.sex); ","e9d5ad78":"plt.figure(figsize=(20,7))\nplt.title('Tip Distributions By Customer Group')\nsns.barplot(x=\"size\", y=\"total_bill\", data=tips, palette=\"cubehelix\");","c2ac77b5":"plt.figure(figsize=(20,7))\nplt.title('Customer Distributions By Sex')\nsns.countplot(x=\"sex\", data=tips);","a4d58073":"plt.figure(figsize=(20,7))\nplt.title('Tips by Total Bill')\nsns.scatterplot(x=\"total_bill\", y=\"tip\", data=tips);","313eaac7":"plt.figure(figsize=(20,7))\nplt.title('Total Bill by Day')\nsns.lineplot(x=\"day\", y=\"tip\", data=tips);","2fed6712":"plt.figure(figsize=(20,7))\nplt.title('Total Bill by Tip')\nsns.regplot(x=\"total_bill\", y=\"tip\", data=tips);","2c7c4c7d":"sns.lmplot(x=\"total_bill\", y=\"tip\", data=tips);","9641fff6":"plt.figure(figsize=(20,7))\nsns.residplot(x=tips.tip, y=tips.total_bill, data=tips, scatter_kws={\"s\": 80});","f132a91f":"plt.figure(figsize=(20,7))\nsns.distplot(tips.total_bill);","056ac564":"plt.figure(figsize=(20,7))\nsns.kdeplot(tips.total_bill);\nsns.kdeplot(tips.tip);","fb89bd40":"### Visualizing the distribution of the dataset\n  * distplot\n   - It gives information about distribution.\n  * kdeplot\n   - It gives information about density.","727859d3":"#### Categorical Scatterplots","ee5fbeb1":"### Visualizing categorical data\n- Categorical scatterplots\n  * stripplot\n  * swarmplot\n- Distributions of observations within categories\n  * boxplot\n  * violinplot\n  * boxenplot\n- Statistical estimation within categories\n  * pointplot\n  * barplot\n  * countplot","82307a64":"### Visualizing linear relationships\n  * reglot \n   - Used to visualize a linear relationship as determined through regression\n  * lmplot\n   - Used to visualize a linear relationship as determined through regression\n  * residplot\n   - The residplot() function can be a useful tool for checking whether the simple regression model is appropriate for a dataset.\n","03742166":"##### regplot\n\nregplot(x, y, data=None, x_estimator=None, x_bins=None, x_ci='ci', scatter=True, fit_reg=True, ci=95, n_boot=1000, units=None, seed=None, order=1, logistic=False, lowess=False, robust=False, logx=False, x_partial=None, y_partial=None, truncate=True, dropna=True, x_jitter=None, y_jitter=None, label=None, color=None, marker='o', scatter_kws=None, line_kws=None, ax=None)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.regplot.html#seaborn.regplot)","236235f7":"##### violinplot\n- Gives information about the central trend.\n- A violin plot plays a similar role as a box and whisker plot. \n- It shows the distribution of quantitative data across several levels of one (or more) categorical variables such that those distributions can be compared. \n\n\nviolinplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, bw='scott', cut=2, scale='area', scale_hue=True, gridsize=100, width=0.8, inner='box', split=False, dodge=True, orient=None, linewidth=None, color=None, palette=None, saturation=0.75, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.violinplot.html#seaborn.violinplot)","2a28f309":"##### swarmplot\n\n* This function is similar to stripplot(), but the points are adjusted (only along the categorical axis) so that they don\u2019t overlap. This gives a better representation of the distribution of values, but it does not scale well to large numbers of observations. \n\n\nswarmplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, dodge=False, orient=None, color=None, palette=None, size=5, edgecolor='gray', linewidth=0, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.swarmplot.html#seaborn.swarmplot)","a00ffe5f":"### Visualizing statistical relationships\n  * scatterplot\n  * lineplot","e8d54cc5":"##### barplot\n- Usually used for categorical variables.\n- The bar chart is suitable for comparing multiple values. The dimension axis shows the category items compared, and the measurement axis shows the value of each category item.\n- Grouping and stacking columns make grouped data easy to visualize.\n\nbarplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, estimator=<function mean at 0x105c7d9e0>, ci=95, n_boot=1000, units=None, seed=None, orient=None, color=None, palette=None, saturation=0.75, errcolor='.26', errwidth=None, capsize=None, dodge=True, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.barplot.html#seaborn.barplot)","f29746a3":"##### countplot\n- A count plot can be thought of as a histogram across a categorical, instead of quantitative, variable. \n\ncountplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, dodge=True, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html#seaborn.countplot)","3e0d1f3a":"#### Categorical distribution plots","f3315076":"##### lmplot\n\nlmplot(x, y, data, hue=None, col=None, row=None, palette=None, col_wrap=None, height=5, aspect=1, markers='o', sharex=True, sharey=True, hue_order=None, col_order=None, row_order=None, legend=True, legend_out=True, x_estimator=None, x_bins=None, x_ci='ci', scatter=True, fit_reg=True, ci=95, n_boot=1000, units=None, seed=None, order=1, logistic=False, lowess=False, robust=False, logx=False, x_partial=None, y_partial=None, truncate=True, x_jitter=None, y_jitter=None, scatter_kws=None, line_kws=None, size=None)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.lmplot.html#seaborn.lmplot)","95543978":"##### boxplot\n- Box plot is suitable for comparing the range and distribution of numerical data sets.\n- The box plot is suitable for comparing the range and distribution of numerical data groups with a box with horizontal lines and a center line in the middle. Horizontal lines represent high and low reference values to exclude outliers.\n- Used in contrary observation analysis.\n- Used to visualize continuous variables.\n\nboxplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, width=0.8, dodge=True, fliersize=5, linewidth=None, whis=1.5, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.boxplot.html#seaborn.boxplot)","fdee6e1d":"##### kdeplot\n\nkdeplot(data, data2=None, shade=False, vertical=False, kernel='gau', bw='scott', gridsize=100, cut=3, clip=None, legend=True, cumulative=False, shade_lowest=True, cbar=False, cbar_ax=None, cbar_kws=None, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.kdeplot.html#seaborn.kdeplot)\n","2d495c9b":"### Resources\n\nhttps:\/\/seaborn.pydata.org\/index.html","98afa9ba":"##### boxenplot\n\n* Is the type of box chart used in large data sets.\n\n\nboxenplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, width=0.8, dodge=True, k_depth='proportion', linewidth=None, scale='exponential', outlier_prop=None, showfliers=True, ax=None, **kwargs)\n\n[see for parameters](http:\/\/seaborn.pydata.org\/generated\/seaborn.boxenplot.html#seaborn.boxenplot)","e7f1ad83":"### We can divide the graphics into 4 groups according to their usage areas.\n- Visualizing categorical data\n  * stripplot\n  * swarmplot\n  * boxplot\n  * violinplot\n  * boxenplot\n  * pointplot\n  * barplot\n  * countplot\n- Visualizing statistical relationships\n  * scatterplot\n  * lineplot\n- Visualizing linear relationships\n  * reglot\n  * lmplot\n  * residplot\n- Visualizing the distribution of the dataset\n  * distplot\n  * kdeplot\n  * scatterplot\n  * hexbinplot","5a9aea14":"In this kernel, we will examine the Seaborn's plots. I used the tips data set in visualizations.\n\nData set columns\n* total_bill: the total amount of the meal\n* tip: tip\n* sex: the sex of the payer\n* smoker: customer smoking status\n* time: time\n* size: how many people in the customer group\n* day: day","4f0e39f5":"#### Categorical estimate plots","09181357":"Note: Since the data set is not time dependent, the graph drawn will not be very meaningful.","5fde2998":"##### pointplot\n- A point plot represents an estimate of central tendency for a numeric variable by the position of scatter plot points and provides some indication of the uncertainty around that estimate using error bars.\n\n\npointplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, estimator=<function mean at 0x105c7d9e0>, ci=95, n_boot=1000, units=None, seed=None, markers='o', linestyles='-', dodge=False, join=True, scale=1, orient=None, color=None, palette=None, errwidth=None, capsize=None, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.pointplot.html#seaborn.pointplot)","ccd9b6d6":"##### distplot\n\ndistplot(a, bins=None, hist=True, kde=True, rug=False, fit=None, hist_kws=None, kde_kws=None, rug_kws=None, fit_kws=None, color=None, vertical=False, norm_hist=False, axlabel=None, label=None, ax=None)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.distplot.html#seaborn.distplot)","b80f7291":"##### lineplot\n- Used in datasets with time dependent variables.\n- It is used in data sets that we want to recognize structurally.\n- It helps us understand how the resulting variable is formed.\n\nlineplot(x=None, y=None, hue=None, size=None, style=None, data=None, palette=None, hue_order=None, hue_norm=None, sizes=None, size_order=None, size_norm=None, dashes=True, markers=None, style_order=None, units=None, estimator='mean', ci=95, n_boot=1000, seed=None, sort=True, err_style='band', err_kws=None, legend='brief', ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.lineplot.html#seaborn.lineplot)","b205dcb2":"##### residplot\n\nresidplot(x, y, data=None, lowess=False, x_partial=None, y_partial=None, order=1, robust=False, dropna=True, label=None, color=None, scatter_kws=None, line_kws=None, ax=None)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.residplot.html#seaborn.residplot)","d4f78af7":"##### stripplot\n* A strip plot is a scatter plot where one of the variables is categorical. \n\nstripplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, jitter=True, dodge=False, orient=None, color=None, palette=None, size=5, edgecolor='gray', linewidth=0, ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.stripplot.html#seaborn.stripplot)","aa5f08c3":"##### scatterplot\n\n- The scatter chart helps you find possible relationships between values and outliers in datasets.\n\nscatterplot(x=None, y=None, hue=None, style=None, size=None, data=None, palette=None, hue_order=None, hue_norm=None, sizes=None, size_order=None, size_norm=None, markers=True, style_order=None, x_bins=None, y_bins=None, units=None, estimator=None, ci=95, n_boot=1000, alpha='auto', x_jitter=None, y_jitter=None, legend='brief', ax=None, **kwargs)\n\n[see for parameters](https:\/\/seaborn.pydata.org\/generated\/seaborn.scatterplot.html#seaborn.scatterplot)","2ff7ceec":"# Data Visualization With Seaborn"}}