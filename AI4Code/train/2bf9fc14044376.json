{"cell_type":{"74991ffb":"code","965e074f":"code","e198f6aa":"code","b40675bf":"code","76686bee":"code","2d714e40":"code","73be12e9":"code","fa9e960b":"code","d7710eac":"code","a476d7fb":"code","e60036e4":"code","3ebacc19":"code","2fbbff1d":"code","9d4da9b4":"code","33713c3e":"code","0128a21d":"code","4c1a9004":"code","53eb6c92":"code","9ea66d27":"code","5447d072":"code","4bda0932":"code","e9ea91c1":"code","1cc32f1e":"code","de65354c":"code","63f5c994":"code","0669bd81":"code","e5576a12":"code","784eaab4":"code","13e5a159":"code","af42ec00":"code","9f62dbae":"code","716aeb45":"code","75055257":"code","96a9b879":"code","3e52abc4":"code","c1f11fc4":"code","2df9a054":"code","306d884f":"code","5316b609":"code","e0a9908a":"code","0e84b8bf":"code","1156cf7a":"code","2aaf98d5":"code","04d58bb4":"code","8f81ff33":"code","65aa280b":"code","5058a1da":"code","55053331":"code","2fe71bb1":"code","c882f316":"code","ec3845e7":"code","e0e4920d":"code","35d390b8":"code","86ac5f2d":"code","e9d6aeae":"code","8cd85a9c":"code","7fc42771":"code","3a85737a":"code","777d12d0":"code","855c4b0f":"code","9e55158e":"code","f362abc4":"code","0a347785":"code","4f74730c":"code","798f3e71":"code","d09a9749":"code","4b4c0116":"code","4ce28196":"code","94e7dc35":"code","db103d4d":"code","b60a3a8d":"code","621ecc1a":"code","248d0605":"code","4ef762dd":"code","dc59a922":"code","9e2e830f":"code","6674b321":"code","6e8b48fb":"code","d49db971":"code","3c00cca8":"code","bc16670c":"code","b5c20407":"code","5274453f":"code","0c6c67fa":"code","4d0f90a3":"code","5ae20669":"code","8ecbff3f":"code","575b8328":"code","d8e4ce7c":"code","6115ad1c":"code","c35a2b3a":"code","dbbdc80e":"code","42f63e73":"code","90e970d3":"code","c8b4ca28":"code","effb7da1":"code","a1f4eaa6":"code","360a96a8":"code","e0dbbf29":"code","885385b4":"code","10a08a94":"code","926f9307":"code","debdd584":"code","f18daacf":"code","79dd73c6":"code","dd04b3ee":"code","1239a64a":"code","39f0acc4":"code","9343cdd1":"code","d48c5cc1":"code","5c2212ab":"code","d26d270f":"code","4634b744":"code","72e5797f":"code","fd856461":"code","7673e6fa":"code","d499cb91":"code","b8db36e4":"code","00ab9eda":"code","8e3dd46a":"code","17dd2f47":"code","11cee3de":"code","be7ba5dd":"code","2a59d869":"code","9fde9826":"code","2d57ad33":"code","fb7acda9":"code","126af7b3":"code","a46eaae2":"code","5bad1868":"code","3a49e977":"code","6d49e669":"code","7ab7dc13":"code","852263ea":"code","5391b4ca":"code","7591cff3":"code","49c7c0cc":"code","4b87a6d2":"code","ebf362e9":"code","f02c99be":"code","f5ca146b":"code","ce921d89":"code","cab195db":"code","3150b747":"code","e24abace":"code","cc1034e0":"code","0b5d82ff":"code","9aead6aa":"code","0aa9f9e8":"code","e46ab42a":"code","efcfc885":"code","0da81bb7":"code","83ca3013":"code","51c1c409":"code","c5f7aa03":"code","39836fb2":"code","ccd1dccc":"code","aa122d65":"code","f8e525c3":"code","616ffabe":"code","7c2af457":"code","5fae358b":"code","7f797229":"code","7bae5622":"code","19cddcfe":"code","76c66985":"code","33360f62":"code","b2431557":"code","6acc82bf":"code","62532bb5":"code","104a8a3e":"code","60fca679":"code","41e964b8":"code","2d114c6d":"code","b85b0f44":"code","2b58c51e":"code","41e4c86a":"code","7bcad9d8":"code","cc087cc6":"code","758999cb":"code","1cebafac":"code","05dea1a6":"code","9a2c7fa1":"code","53aa3f97":"code","442ea300":"code","0b7d4b53":"code","230254a4":"code","99fa0552":"code","ac2bc081":"code","7adac6aa":"code","1cb1e4bf":"code","bafc86cd":"code","16480dde":"code","3ebef164":"code","ab6c7336":"code","d0145e75":"code","64e01d73":"code","2e3a6533":"code","a5fa920f":"code","e3887532":"code","77ffc4d6":"code","849bc22b":"code","9ca62944":"code","b3e7e323":"code","f3525a83":"code","f210746c":"code","c4870fae":"code","73541ba7":"code","768c0d56":"code","e902525e":"code","2235c433":"markdown","7f6108ad":"markdown","aa2f5e6c":"markdown","dc2919e2":"markdown","d0ace351":"markdown","3b257fad":"markdown","6a751b9c":"markdown","e37860a6":"markdown","91c8ce1b":"markdown","a086da87":"markdown","90f605f6":"markdown","9a59ec9a":"markdown","d72ea32a":"markdown","5a114547":"markdown","4b964e7e":"markdown","17ca6a8d":"markdown","112599a6":"markdown","5b239383":"markdown","8287f43d":"markdown","bf5d9f2d":"markdown","66090d7f":"markdown","f715fcce":"markdown","88b01034":"markdown","b0d42e4d":"markdown","47502b2c":"markdown","70709c9a":"markdown","93d9075b":"markdown","3aeb60f5":"markdown","235227a0":"markdown","7d52eb54":"markdown","2f94fe00":"markdown","c3eb1df0":"markdown","2cd4ebf7":"markdown","8c44128e":"markdown","3e10d38c":"markdown","dc1633f2":"markdown","4410bf23":"markdown","c147f6a4":"markdown","68eff648":"markdown","897e0267":"markdown","2a082e28":"markdown","53076f3a":"markdown","0db90076":"markdown","9435e0ee":"markdown","47717761":"markdown","49495804":"markdown","e8038e74":"markdown","067669be":"markdown","57e04c62":"markdown","f1987c0d":"markdown","2f764626":"markdown","4043929d":"markdown","6f7dd62b":"markdown","2cd48396":"markdown","16bcfb1f":"markdown","901bf85e":"markdown","b06cd62c":"markdown","cd258d53":"markdown","4d6dbb0d":"markdown","a7090ebc":"markdown","ae8718d8":"markdown","edec3013":"markdown","44998c53":"markdown","212f4d19":"markdown","b6aff536":"markdown","a96670f0":"markdown","14d08d14":"markdown","ad6b536c":"markdown","5cabe3f6":"markdown","acef35e9":"markdown","82b9c080":"markdown","3136972d":"markdown","c562ff8f":"markdown","0f254d71":"markdown","3340384d":"markdown","53839b35":"markdown","59520904":"markdown","697486e9":"markdown","e029c1d6":"markdown","5eab596f":"markdown","22cf455b":"markdown","83b2e8fe":"markdown","95962c66":"markdown","8fccd10b":"markdown","3acfc38c":"markdown","b598b65e":"markdown","4c1f23e7":"markdown","be645ea2":"markdown","a680987e":"markdown","5ff996c8":"markdown","c93a03b2":"markdown","896a243b":"markdown","d8f93fdd":"markdown","dd6735bc":"markdown","42f44950":"markdown","1a072f55":"markdown","1192dc2f":"markdown","b5665190":"markdown","87b7dbfd":"markdown","a8674eba":"markdown","fdcb2c7d":"markdown","a94ed060":"markdown","36e1384f":"markdown","8b3ac550":"markdown","6d37d354":"markdown","5d9cece5":"markdown","ef6ce7d1":"markdown","983e6d80":"markdown","1d367039":"markdown","988e293c":"markdown","6f090392":"markdown","21e88c91":"markdown","b8fc771e":"markdown","4e496667":"markdown","8926c690":"markdown","b907a2e9":"markdown","d4d55e27":"markdown","a2baa494":"markdown","834f77b1":"markdown","87b92de4":"markdown","cfae0e3f":"markdown","6141f234":"markdown","7d6c811c":"markdown","79ecc9c6":"markdown","f3ccb366":"markdown","346f9007":"markdown","e6837133":"markdown","7c8de7d8":"markdown","27b13539":"markdown","c7407102":"markdown","01d8f94c":"markdown","8c210805":"markdown","ce9b1d9a":"markdown"},"source":{"74991ffb":"import numpy as np \nimport pandas as pd\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","965e074f":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e198f6aa":"survey_df =pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\nsurvey_df.head()","b40675bf":"questions = survey_df.iloc[0]\nquestions = list(questions)","76686bee":"survey_df = survey_df.iloc[1:]\nsurvey_df.head()","2d714e40":"usa_df = survey_df[survey_df['Q3'] == 'United States of America']\nindia_df = survey_df[survey_df['Q3'] == 'India']","73be12e9":"columns = survey_df.columns.values.tolist()\nprint(columns)","fa9e960b":"print(questions[1])\nprint(survey_df['Q1'].unique())","d7710eac":"parameter = 'Q1'\nsurvey_df = survey_df.sort_values(by = parameter)\nsns.countplot(survey_df[parameter])\nplt.show()","a476d7fb":"parameter = 'Q1'\nsurvey_df = india_df.sort_values(by = parameter)\nsns.countplot(survey_df[parameter])\nplt.title('India')\nplt.show()","e60036e4":"parameter = 'Q1'\nsurvey_df = usa_df.sort_values(by = parameter)\nsns.countplot(survey_df[parameter])\nplt.title('USA')\nplt.show()","3ebacc19":"print(questions[2])\nprint(survey_df['Q2'].unique())","2fbbff1d":"parameter = 'Q2'\nsns.countplot(survey_df[parameter], order = ['Man', 'Woman', 'Prefer not to say', 'Prefer to self-describe', 'Nonbinary'])\nplt.xticks(rotation = 90)\nplt.show()","9d4da9b4":"parameter = 'Q2'\nsns.countplot(india_df[parameter], order = ['Man', 'Woman', 'Prefer not to say', 'Prefer to self-describe', 'Nonbinary'])\nplt.xticks(rotation = 90)\nplt.title('India')\nplt.show()","33713c3e":"parameter = 'Q2'\nsns.countplot(usa_df[parameter], order = ['Man', 'Woman', 'Prefer not to say', 'Prefer to self-describe', 'Nonbinary'])\nplt.xticks(rotation = 90)\nplt.title('USA')\nplt.show()","0128a21d":"print(questions[3])\nprint('Total number of country entries: ', len(survey_df['Q3'].unique()))\nprint('Total number of replies: ', survey_df['Q3'].value_counts().sum())\nprint(survey_df['Q3'].unique())","4c1a9004":"country_counts = survey_df['Q3'].value_counts()\nprint(country_counts[:10])","53eb6c92":"country_counts = survey_df['Q3'].value_counts()\/survey_df['Q3'].value_counts().sum()\nprint(country_counts[:20])","9ea66d27":"country_list = ['India', 'USA', 'Other', 'Japan', 'China', 'Brazil', 'Russia', 'Nigeria', 'UK & NI', 'Pakistan', 'Egypt',\n               'Germany', 'Spain', 'Indonesia', 'Turkey', 'France', 'South Korea', 'Taiwan', 'Canada', 'Bangladesh']\nplt.bar(country_list, country_counts[:20])\nplt.xticks(rotation = 90)\nplt.show()","5447d072":"print(questions[4])\nprint(survey_df['Q4'].unique())","4bda0932":"parameter = 'Q4'\nsns.countplot(survey_df[parameter], \n              order = ['No formal education past high school',\n 'Some college\/university study without earning a bachelor\u2019s degree','Bachelor\u2019s degree',\n 'Master\u2019s degree','Professional doctorate','Doctoral degree',\n 'I prefer not to answer'  ])\nplt.xticks(rotation=90)\nplt.show()","e9ea91c1":"parameter = 'Q4'\nsns.countplot(india_df[parameter],order = ['No formal education past high school',\n 'Some college\/university study without earning a bachelor\u2019s degree' ,'Bachelor\u2019s degree',\n 'Master\u2019s degree','Professional doctorate','Doctoral degree',\n 'I prefer not to answer'  ])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","1cc32f1e":"parameter = 'Q4'\nsns.countplot(usa_df[parameter],order = ['No formal education past high school',\n 'Some college\/university study without earning a bachelor\u2019s degree' ,'Bachelor\u2019s degree',\n 'Master\u2019s degree','Professional doctorate','Doctoral degree',\n 'I prefer not to answer'  ])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","de65354c":"pd.crosstab([survey_df.Q2],[survey_df.Q4],margins=True).style.background_gradient(cmap='summer_r')","63f5c994":"men_percentage = (20598\/25973)*100\nprint('Percentage of male respondents:' + str(men_percentage) + '%')\ncolumn_names = ['Bachelor\u2019s degree',\t'Doctoral degree',\t'I prefer not to answer',\n                'Master\u2019s degree',\t'No formal education past high school',\t'Professional doctorate',\n                'Some college\/university study without earning a bachelor\u2019s degree']\ned_values_men = [7928,\t2171,\t445,\t7995,\t360,\t270,\t1429]\ned_values_all = [9907,\t2795,\t627,\t10132,\t417,\t360,\t1735]\nres = [str(round((i \/ j),4)*100)+'%' for i, j in zip(ed_values_men, ed_values_all)]\nres = [(i,j) for i, j in zip(column_names, res)]\nfor (a,b) in res:\n    print(a,b)","0669bd81":"pd.crosstab([survey_df.Q3],[survey_df.Q4],margins=True).style.background_gradient(cmap='summer_r')","e5576a12":"print(questions[5])\nprint(survey_df['Q5'].unique())","784eaab4":"parameter = 'Q5'\nsns.countplot(survey_df[parameter],\n             order = ['Student', 'Software Engineer', 'Machine Learning Engineer',\n 'Data Scientist', 'Currently not employed', 'Data Engineer', 'Data Analyst',\n 'DBA\/Database Engineer', 'Other', 'Statistician', 'Business Analyst',\n 'Developer Relations\/Advocacy', 'Program\/Project Manager',\n 'Research Scientist', 'Product Manager'])\nplt.xticks(rotation=90)\nplt.show()","13e5a159":"parameter = 'Q5'\nsns.countplot(india_df[parameter],\n             order = ['Student', 'Software Engineer', 'Machine Learning Engineer',\n 'Data Scientist', 'Currently not employed', 'Data Engineer', 'Data Analyst',\n 'DBA\/Database Engineer', 'Other', 'Statistician', 'Business Analyst',\n 'Developer Relations\/Advocacy', 'Program\/Project Manager',\n 'Research Scientist', 'Product Manager'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","af42ec00":"parameter = 'Q5'\nsns.countplot(usa_df[parameter],\n             order = ['Student', 'Software Engineer', 'Machine Learning Engineer',\n 'Data Scientist', 'Currently not employed', 'Data Engineer', 'Data Analyst',\n 'DBA\/Database Engineer', 'Other', 'Statistician', 'Business Analyst',\n 'Developer Relations\/Advocacy', 'Program\/Project Manager',\n 'Research Scientist', 'Product Manager'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","9f62dbae":"print(questions[6])\nprint(survey_df['Q6'].unique())","716aeb45":"parameter = 'Q6'\nsns.countplot(survey_df[parameter], \n              order = ['I have never written code','< 1 years', '1-3 years', '3-5 years', \n                       '5-10 years', '10-20 years','20+ years' ])\nplt.xticks(rotation=90)\nplt.show()","75055257":"parameter = 'Q6'\nsns.countplot(india_df[parameter], \n              order = ['I have never written code','< 1 years', '1-3 years', '3-5 years', \n                       '5-10 years', '10-20 years','20+ years' ])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","96a9b879":"parameter = 'Q6'\nsns.countplot(usa_df[parameter], \n              order = ['I have never written code','< 1 years', '1-3 years', '3-5 years', \n                       '5-10 years', '10-20 years','20+ years' ])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","3e52abc4":"pd.crosstab([survey_df.Q5],[survey_df.Q6],margins=True).style.background_gradient(cmap='summer_r')","c1f11fc4":"print(questions[columns.index('Q7_OTHER')])\nprint(survey_df['Q7_Part_1'].unique())\nprint(survey_df['Q7_Part_2'].unique())\nprint(survey_df['Q7_Part_3'].unique())\nprint(survey_df['Q7_Part_4'].unique())\nprint(survey_df['Q7_Part_5'].unique())\nprint(survey_df['Q7_Part_6'].unique())\nprint(survey_df['Q7_Part_7'].unique())\nprint(survey_df['Q7_Part_8'].unique())\nprint(survey_df['Q7_Part_9'].unique())\nprint(survey_df['Q7_Part_10'].unique())\nprint(survey_df['Q7_Part_11'].unique())\nprint(survey_df['Q7_Part_12'].unique())\nprint(survey_df['Q7_OTHER'].unique())","2df9a054":"Q7_plot_columns = ['Q7_Part_1', 'Q7_Part_2', 'Q7_Part_3', 'Q7_Part_4', 'Q7_Part_5',\n                    'Q7_Part_6', 'Q7_Part_7','Q7_Part_8','Q7_Part_9', 'Q7_Part_10',\n                    'Q7_Part_11', 'Q7_OTHER']\nQ7_plot_labels = ['Python', 'R', 'SQL', 'C',\n                   'C++', 'Java', 'Javascript', 'Julia', 'Swift',\n                   'Bash', 'MATLAB','None', 'Other' ]\nQ7_plot_counts = [0]*len(Q7_plot_labels)\nfor col in Q7_plot_columns:\n    idx = Q7_plot_columns.index(col)\n    Q7_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q7_plot_counts)\nprint(Q7_plot_labels)","306d884f":"plt.bar(Q7_plot_labels, Q7_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","5316b609":"Q7_plot_counts = [0]*len(Q7_plot_labels)\nfor col in Q7_plot_columns:\n    idx = Q7_plot_columns.index(col)\n    Q7_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q7_plot_labels, Q7_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","e0a9908a":"Q7_plot_counts = [0]*len(Q7_plot_labels)\nfor col in Q7_plot_columns:\n    idx = Q7_plot_columns.index(col)\n    Q7_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q7_plot_labels, Q7_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","0e84b8bf":"print(questions[columns.index('Q8')])\nprint(survey_df['Q8'].unique())","1156cf7a":"parameter = 'Q8'\nsns.countplot(survey_df[parameter], order = ['Python', 'Julia', 'R', 'C', 'Java', 'SQL', 'C++',\n                                            'None', 'MATLAB', 'Javascript','Other', 'Swift', 'Bash'])\nplt.xticks(rotation=90)\nplt.show()","2aaf98d5":"parameter = 'Q8'\nsns.countplot(india_df[parameter], order = ['Python', 'Julia', 'R', 'C', 'Java', 'SQL', 'C++',\n                                            'None', 'MATLAB', 'Javascript','Other', 'Swift', 'Bash'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","04d58bb4":"parameter = 'Q8'\nsns.countplot(usa_df[parameter], order = ['Python', 'Julia', 'R', 'C', 'Java', 'SQL', 'C++',\n                                            'None', 'MATLAB', 'Javascript','Other', 'Swift', 'Bash'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","8f81ff33":"print(questions[columns.index('Q9_OTHER')])\nprint(survey_df['Q9_Part_1'].unique())\nprint(survey_df['Q9_Part_2'].unique())\nprint(survey_df['Q9_Part_3'].unique())\nprint(survey_df['Q9_Part_4'].unique())\nprint(survey_df['Q9_Part_5'].unique())\nprint(survey_df['Q9_Part_6'].unique())\nprint(survey_df['Q9_Part_7'].unique())\nprint(survey_df['Q9_Part_8'].unique())\nprint(survey_df['Q9_Part_9'].unique())\nprint(survey_df['Q9_Part_10'].unique())\nprint(survey_df['Q9_Part_11'].unique())\nprint(survey_df['Q9_OTHER'].unique())","65aa280b":"Q9_plot_columns = ['Q9_Part_1', 'Q9_Part_2', 'Q9_Part_3', 'Q9_Part_4', 'Q9_Part_5', 'Q9_Part_6', 'Q9_Part_7', 'Q9_Part_8',\n               'Q9_Part_9', 'Q9_Part_10', 'Q9_Part_11', 'Q9_OTHER']\nQ9_plot_labels = ['JupyterLab\/Notebook', 'RStudio', 'Visual Studio', 'VSCode', 'PyCharm','Spyder','Notepad++', 'Sublime text', \n               'Vim\/Emacs', 'Other' ]\nQ9_plot_counts = [0]*len(Q9_plot_labels)\nfor col in Q9_plot_columns:\n    idx = Q9_plot_columns.index(col)\n    if col in ['Q9_Part_11']:\n        idx = 0\n    if col in ['Q9_OTHER']:\n        idx = 9\n    Q9_plot_counts[idx] += int(survey_df[col].value_counts())\n    \nprint(Q9_plot_counts)\nprint(Q9_plot_labels)","5058a1da":"plt.bar(Q9_plot_labels, Q9_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","55053331":"Q9_plot_counts = [0]*len(Q9_plot_labels)\nfor col in Q9_plot_columns:\n    idx = Q9_plot_columns.index(col)\n    if col in ['Q9_Part_11']:\n        idx = 0\n    if col in ['Q9_OTHER']:\n        idx = 9\n    Q9_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q9_plot_labels, Q9_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","2fe71bb1":"Q9_plot_counts = [0]*len(Q9_plot_labels)\nfor col in Q9_plot_columns:\n    idx = Q9_plot_columns.index(col)\n    if col in ['Q9_Part_11']:\n        idx = 0\n    if col in ['Q9_OTHER']:\n        idx = 9\n    Q9_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q9_plot_labels, Q9_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","c882f316":"print(questions[columns.index('Q10_OTHER')])\nprint(survey_df['Q10_Part_1'].unique())\nprint(survey_df['Q10_Part_2'].unique())\nprint(survey_df['Q10_Part_3'].unique())\nprint(survey_df['Q10_Part_4'].unique())\nprint(survey_df['Q10_Part_5'].unique())\nprint(survey_df['Q10_Part_6'].unique())\nprint(survey_df['Q10_Part_7'].unique())\nprint(survey_df['Q10_Part_8'].unique())\nprint(survey_df['Q10_Part_9'].unique())\nprint(survey_df['Q10_Part_10'].unique())\nprint(survey_df['Q10_Part_11'].unique())\nprint(survey_df['Q10_Part_12'].unique())\nprint(survey_df['Q10_Part_13'].unique())\nprint(survey_df['Q10_Part_14'].unique())\nprint(survey_df['Q10_Part_15'].unique())\nprint(survey_df['Q10_Part_16'].unique())\nprint(survey_df['Q10_OTHER'].unique())","ec3845e7":"Q10_plot_columns = ['Q10_Part_1', 'Q10_Part_2', 'Q10_Part_3', 'Q10_Part_4', 'Q10_Part_5', 'Q10_Part_6', 'Q10_Part_7',\n                    'Q10_Part_8','Q10_Part_9', 'Q10_Part_10', 'Q10_Part_11', 'Q10_Part_12', 'Q10_Part_13', 'Q10_Part_14',\n                    'Q10_Part_15', 'Q10_Part_16', 'Q10_OTHER']\nQ10_plot_labels = ['Kaggle Notebooks', 'Colab Notebooks', 'Azure Notebooks', 'Paperspace\/Gradient', 'Binder\/JupyterHub', \n                   'Code Ocean','IBM Watson Studio','Amazon Sagemaker Studio Notebooks', 'Amazon EMR Notebooks',\n                   'Google Cloud Notebooks','Google Cloud Datalab', 'Databricks Collaborative Notebooks',\n                   'Zeppelin \/ Zepl Notebooks ','Deepnote Notebooks','Observable Notebooks', 'None', 'Other' ]\nQ10_plot_counts = [0]*len(Q10_plot_labels)\nfor col in Q10_plot_columns:\n    idx = Q10_plot_columns.index(col)\n    Q10_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q10_plot_counts)\nprint(Q10_plot_labels)","e0e4920d":"plt.bar(Q10_plot_labels, Q10_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","35d390b8":"Q10_plot_counts = [0]*len(Q10_plot_labels)\nfor col in Q10_plot_columns:\n    idx = Q10_plot_columns.index(col)\n    Q10_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q10_plot_labels, Q10_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","86ac5f2d":"Q10_plot_counts = [0]*len(Q10_plot_labels)\nfor col in Q10_plot_columns:\n    idx = Q10_plot_columns.index(col)\n    Q10_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q10_plot_labels, Q10_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","e9d6aeae":"print(questions[columns.index('Q11')])\nprint(survey_df['Q11'].unique())","8cd85a9c":"parameter = 'Q11'\nsns.countplot(survey_df[parameter],\n             order = ['A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)',\n 'A laptop', 'A personal computer \/ desktop' ,\n 'A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)', 'Other', 'None'])\nplt.xticks(rotation=90)\nplt.show()","7fc42771":"parameter = 'Q11'\nsns.countplot(india_df[parameter],\n             order = ['A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)',\n 'A laptop', 'A personal computer \/ desktop' ,\n 'A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)', 'Other', 'None'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","3a85737a":"parameter = 'Q11'\nsns.countplot(usa_df[parameter],\n             order = ['A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)',\n 'A laptop', 'A personal computer \/ desktop' ,\n 'A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)', 'Other', 'None'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","777d12d0":"pd.crosstab([survey_df.Q11],[survey_df.Q6],margins=True).style.background_gradient(cmap='summer_r')","855c4b0f":"cloud_percentage = (2328\/24270)*100\nprint('Percentage of cloud platform users:' + str(cloud_percentage) + '%')\ncolumn_names = ['<1 year', '1-3 years', '3-5 years', '5-10 years', '10-20 years', '20+ years']\ned_values_cloud = [215, 554, 458, 482, 364, 255]\ned_values_all = [5841, 7774, 4023, 3083, 2154, 1845]\nres = [str(round((i \/ j),4)*100)+'%' for i, j in zip(ed_values_cloud, ed_values_all)]\nres = [(i,j) for i, j in zip(column_names, res)]\nfor (a,b) in res:\n    print(a,b)","9e55158e":"print(questions[columns.index('Q12_OTHER')])\nprint(survey_df['Q12_Part_1'].unique())\nprint(survey_df['Q12_Part_2'].unique())\nprint(survey_df['Q12_Part_3'].unique())\nprint(survey_df['Q12_Part_4'].unique())\nprint(survey_df['Q12_Part_5'].unique())\nprint(survey_df['Q12_OTHER'].unique())","f362abc4":"Q12_plot_columns = ['Q12_Part_1', 'Q12_Part_2', 'Q12_Part_3', 'Q12_Part_4', 'Q12_Part_5', 'Q12_OTHER']\nQ12_plot_labels = ['NVIDIA GPUs', 'Google Cloud TPUs', 'AWS Trainium Chips',\n                   'AWS Inferentia Chips', 'None', 'Other' ]\nQ12_plot_counts = [0]*len(Q12_plot_labels)\nfor col in Q12_plot_columns:\n    idx = Q12_plot_columns.index(col)\n    Q12_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q12_plot_counts)\nprint(Q12_plot_labels)","0a347785":"plt.bar(Q12_plot_labels, Q12_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","4f74730c":"Q12_plot_counts = [0]*len(Q12_plot_labels)\nfor col in Q12_plot_columns:\n    idx = Q12_plot_columns.index(col)\n    Q12_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q12_plot_labels, Q12_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","798f3e71":"Q12_plot_counts = [0]*len(Q12_plot_labels)\nfor col in Q12_plot_columns:\n    idx = Q12_plot_columns.index(col)\n    Q12_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q12_plot_labels, Q12_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","d09a9749":"print(questions[columns.index('Q13')])\nprint(survey_df['Q13'].unique())","4b4c0116":"parameter = 'Q13'\nsns.countplot(survey_df[parameter],\n             order = ['Never','Once','2-5 times', '6-25 times' , 'More than 25 times'  ])\nplt.xticks(rotation=90)\nplt.show()","4ce28196":"parameter = 'Q13'\nsns.countplot(india_df[parameter],\n             order = ['Never','Once','2-5 times', '6-25 times' , 'More than 25 times'  ])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","94e7dc35":"parameter = 'Q13'\nsns.countplot(usa_df[parameter],\n             order = ['Never','Once','2-5 times', '6-25 times' , 'More than 25 times'  ])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","db103d4d":"pd.crosstab([survey_df.Q13],[survey_df.Q6],margins=True).style.background_gradient(cmap='summer_r')","b60a3a8d":"most_times_percentage = (612\/24403)*100\nprint('Percentage of cloud platform users:' + str(most_times_percentage) + '%')\ncolumn_names = ['<1 year', '1-3 years', '3-5 years', '5-10 years', '10-20 years', '20+ years']\ned_values_cloud = [49, 154, 122, 100, 86, 101]\ned_values_all = [5742, 7645, 3977, 3062, 2134, 1843]\nres = [str(round((i \/ j),4)*100)+'%' for i, j in zip(ed_values_cloud, ed_values_all)]\nres = [(i,j) for i, j in zip(column_names, res)]\nfor (a,b) in res:\n    print(a,b)","621ecc1a":"pd.crosstab([survey_df.Q13],[survey_df.Q5],margins=True).style.background_gradient(cmap='summer_r')","248d0605":"most_times_percentage = (612\/24403)*100\nprint('Percentage of cloud platform users:' + str(most_times_percentage) + '%')\ncolumn_names = ['Business Analyst',\t'Currently not employed',\t'DBA\/Database Engineer',\t\n                'Data Analyst',\t'Data Engineer', 'Data Scientist', 'Developer Relations\/Advocacy',\t\n                'Machine Learning Engineer',\t'Other',\t'Product Manager',\t'Program\/Project Manager',\t\n                'Research Scientist',\t'Software Engineer',\t'Statistician',\t'Student']\ned_values_most = [15,\t32,\t11,\t31,\t12,\t136,\t6,\t85,\t33,\t7,\t28,\t59,\t47,\t7,\t103,\t612]\ned_values_all = [829,\t1926,\t158,\t2134,\t651,\t3491,\t90,\t1429,\t2057,\t274,\t777,\n                   1440,\t2389,\t287,\t6471]\nres = [str(round((i \/ j),4)*100)+'%' for i, j in zip(ed_values_most, ed_values_all)]\nres = [(i,j) for i, j in zip(column_names, res)]\nfor (a,b) in res:\n    print(a,b)","4ef762dd":"print(questions[columns.index('Q14_OTHER')])\nprint(survey_df['Q14_Part_1'].unique())\nprint(survey_df['Q14_Part_2'].unique())\nprint(survey_df['Q14_Part_3'].unique())\nprint(survey_df['Q14_Part_4'].unique())\nprint(survey_df['Q14_Part_5'].unique())\nprint(survey_df['Q14_Part_6'].unique())\nprint(survey_df['Q14_Part_7'].unique())\nprint(survey_df['Q14_Part_8'].unique())\nprint(survey_df['Q14_Part_9'].unique())\nprint(survey_df['Q14_Part_10'].unique())\nprint(survey_df['Q14_Part_11'].unique())\nprint(survey_df['Q14_OTHER'].unique())","dc59a922":"Q14_plot_columns = ['Q14_Part_1', 'Q14_Part_2', 'Q14_Part_3', 'Q14_Part_4', 'Q14_Part_5', 'Q14_Part_6',\n                    'Q14_Part_7','Q14_Part_8','Q14_Part_9', 'Q14_Part_10', 'Q14_Part_11', 'Q14_OTHER']\nQ14_plot_labels = ['Matplotlib', 'Seaborn', 'Plotly', 'Ggplot', 'Shiny', 'D3 js', 'Altair', 'Bokeh',\n                   'Geoplotlib', 'Leaflet\/Folium','None', 'Other' ]\nQ14_plot_counts = [0]*len(Q14_plot_labels)\nfor col in Q14_plot_columns:\n    idx = Q14_plot_columns.index(col)\n    Q14_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q14_plot_counts)\nprint(Q14_plot_labels)","9e2e830f":"plt.bar(Q14_plot_labels, Q14_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","6674b321":"Q14_plot_counts = [0]*len(Q14_plot_labels)\nfor col in Q14_plot_columns:\n    idx = Q14_plot_columns.index(col)\n    Q14_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q14_plot_labels, Q14_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","6e8b48fb":"Q14_plot_counts = [0]*len(Q14_plot_labels)\nfor col in Q14_plot_columns:\n    idx = Q14_plot_columns.index(col)\n    Q14_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q14_plot_labels, Q14_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","d49db971":"print(questions[columns.index('Q15')])\nprint(survey_df['Q15'].unique())","3c00cca8":"parameter = 'Q15'\nsns.countplot(survey_df[parameter], \n              order = ['I do not use machine learning methods', 'Under 1 year', '1-2 years',\n                      '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-20 years'])\nplt.xticks(rotation=90)\nplt.show()","bc16670c":"parameter = 'Q15'\nsns.countplot(india_df[parameter], \n              order = ['I do not use machine learning methods', 'Under 1 year', '1-2 years',\n                      '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-20 years'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","b5c20407":"parameter = 'Q15'\nsns.countplot(usa_df[parameter], \n              order = ['I do not use machine learning methods', 'Under 1 year', '1-2 years',\n                      '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-20 years'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","5274453f":"pd.crosstab([survey_df.Q15],[survey_df.Q5],margins=True).style.background_gradient(cmap='summer_r')","0c6c67fa":"print(questions[columns.index('Q16_OTHER')])\nprint(survey_df['Q16_Part_1'].unique())\nprint(survey_df['Q16_Part_2'].unique())\nprint(survey_df['Q16_Part_3'].unique())\nprint(survey_df['Q16_Part_4'].unique())\nprint(survey_df['Q16_Part_5'].unique())\nprint(survey_df['Q16_Part_6'].unique())\nprint(survey_df['Q16_Part_7'].unique())\nprint(survey_df['Q16_Part_8'].unique())\nprint(survey_df['Q16_Part_9'].unique())\nprint(survey_df['Q16_Part_10'].unique())\nprint(survey_df['Q16_Part_11'].unique())\nprint(survey_df['Q16_Part_12'].unique())\nprint(survey_df['Q16_Part_13'].unique())\nprint(survey_df['Q16_Part_14'].unique())\nprint(survey_df['Q16_Part_15'].unique())\nprint(survey_df['Q16_Part_16'].unique())\nprint(survey_df['Q16_Part_17'].unique())\nprint(survey_df['Q16_OTHER'].unique())","4d0f90a3":"Q16_plot_columns = ['Q16_Part_1', 'Q16_Part_2', 'Q16_Part_3', 'Q16_Part_4', 'Q16_Part_5', 'Q16_Part_6', 'Q16_Part_7',\n                    'Q16_Part_8','Q16_Part_9', 'Q16_Part_10', 'Q16_Part_11', 'Q16_Part_12', \n                    'Q16_Part_13', 'Q16_Part_14','Q16_Part_15', 'Q16_Part_16', 'Q16_Part_17', \n                    'Q16_OTHER']\nQ16_plot_labels = ['Scikit-learn', 'Tensorflow', 'Keras', 'Pytorch', 'Fast.ai', 'MXNet', 'Xgboost',\n                   'LightGBM', 'CatBoost', 'Prophet', 'H20 3', 'Caret', 'Tidymodels', 'JAX',\n                   'PyTorch Lightning', 'Huggingface','None', 'Other' ]\nQ16_plot_counts = [0]*len(Q16_plot_labels)\nfor col in Q16_plot_columns:\n    idx = Q16_plot_columns.index(col)\n    Q16_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q16_plot_counts)\nprint(Q16_plot_labels)","5ae20669":"plt.bar(Q16_plot_labels, Q16_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","8ecbff3f":"Q16_plot_counts = [0]*len(Q16_plot_labels)\nfor col in Q16_plot_columns:\n    idx = Q16_plot_columns.index(col)\n    Q16_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q16_plot_labels, Q16_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","575b8328":"Q16_plot_counts = [0]*len(Q16_plot_labels)\nfor col in Q16_plot_columns:\n    idx = Q16_plot_columns.index(col)\n    Q16_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q16_plot_labels, Q16_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","d8e4ce7c":"print(questions[columns.index('Q17_OTHER')])\nprint(survey_df['Q17_Part_1'].unique())\nprint(survey_df['Q17_Part_2'].unique())\nprint(survey_df['Q17_Part_3'].unique())\nprint(survey_df['Q17_Part_4'].unique())\nprint(survey_df['Q17_Part_5'].unique())\nprint(survey_df['Q17_Part_6'].unique())\nprint(survey_df['Q17_Part_7'].unique())\nprint(survey_df['Q17_Part_8'].unique())\nprint(survey_df['Q17_Part_9'].unique())\nprint(survey_df['Q17_Part_10'].unique())\nprint(survey_df['Q17_Part_11'].unique())\nprint(survey_df['Q17_OTHER'].unique())","6115ad1c":"Q17_plot_columns = ['Q17_Part_1', 'Q17_Part_2', 'Q17_Part_3', 'Q17_Part_4', 'Q17_Part_5', 'Q17_Part_6', 'Q17_Part_7',\n                    'Q17_Part_8','Q17_Part_9', 'Q17_Part_10', 'Q17_Part_11', 'Q17_OTHER']\nQ17_plot_labels = ['Linear\/Logistic Regression', 'Decision trees\/Random forests', 'GBMs', 'Bayesian approaches',\n                   'Evolutionary approaches', 'Dense Neural Networks', 'CNNs', 'GANs', 'RNNs', 'Transformers',\n                   'None', 'Other' ]\nQ17_plot_counts = [0]*len(Q17_plot_labels)\nfor col in Q17_plot_columns:\n    idx = Q17_plot_columns.index(col)\n    Q17_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q17_plot_counts)\nprint(Q17_plot_labels)","c35a2b3a":"plt.bar(Q17_plot_labels, Q17_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","dbbdc80e":"Q17_plot_counts = [0]*len(Q17_plot_labels)\nfor col in Q17_plot_columns:\n    idx = Q17_plot_columns.index(col)\n    Q17_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q17_plot_labels, Q17_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","42f63e73":"Q17_plot_counts = [0]*len(Q17_plot_labels)\nfor col in Q17_plot_columns:\n    idx = Q17_plot_columns.index(col)\n    Q17_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q17_plot_labels, Q17_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","90e970d3":"pd.crosstab([survey_df.Q17_Part_1],[survey_df.Q5],margins=True).style.background_gradient(cmap='summer_r')","c8b4ca28":"pd.crosstab([survey_df.Q17_Part_8],[survey_df.Q5],margins=True).style.background_gradient(cmap='summer_r')","effb7da1":"print(questions[columns.index('Q18_OTHER')])\nprint(survey_df['Q18_Part_1'].unique())\nprint(survey_df['Q18_Part_2'].unique())\nprint(survey_df['Q18_Part_3'].unique())\nprint(survey_df['Q18_Part_4'].unique())\nprint(survey_df['Q18_Part_5'].unique())\nprint(survey_df['Q18_Part_6'].unique())\nprint(survey_df['Q18_OTHER'].unique())","a1f4eaa6":"Q18_plot_columns = ['Q18_Part_1', 'Q18_Part_2', 'Q18_Part_3', 'Q18_Part_4', 'Q18_Part_5', 'Q18_Part_6',\n                    'Q18_OTHER']\nQ18_plot_labels = ['PIL\/cv2\/skimage', 'U-Net\/Mask R-CNN', 'YOLOv3\/RetinaNet', 'VGG\/Inception\/ResNet',\n                   'GAN\/VAE', 'None', 'Other' ]\nQ18_plot_counts = [0]*len(Q18_plot_labels)\nfor col in Q18_plot_columns:\n    idx = Q18_plot_columns.index(col)\n    Q18_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q18_plot_counts)\nprint(Q18_plot_labels)","360a96a8":"plt.bar(Q18_plot_labels, Q18_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","e0dbbf29":"Q18_plot_counts = [0]*len(Q18_plot_labels)\nfor col in Q18_plot_columns:\n    idx = Q18_plot_columns.index(col)\n    Q18_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q18_plot_labels, Q18_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","885385b4":"Q18_plot_counts = [0]*len(Q18_plot_labels)\nfor col in Q18_plot_columns:\n    idx = Q18_plot_columns.index(col)\n    Q18_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q18_plot_labels, Q18_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","10a08a94":"print(questions[columns.index('Q19_OTHER')])\nprint(survey_df['Q19_Part_1'].unique())\nprint(survey_df['Q19_Part_2'].unique())\nprint(survey_df['Q19_Part_3'].unique())\nprint(survey_df['Q19_Part_4'].unique())\nprint(survey_df['Q19_Part_5'].unique())\nprint(survey_df['Q19_OTHER'].unique())","926f9307":"Q19_plot_columns = ['Q19_Part_1', 'Q19_Part_2', 'Q19_Part_3', 'Q19_Part_4', 'Q19_Part_5',\n                    'Q19_OTHER']\nQ19_plot_labels = ['GLoVe\/fastText\/word2vec', 'seq2seq\/vanilla transformers', 'ELMo\/CoVe', \n                    'GPT-3\/BERT\/XLnet','None', 'Other' ]\nQ19_plot_counts = [0]*len(Q19_plot_labels)\nfor col in Q19_plot_columns:\n    idx = Q19_plot_columns.index(col)\n    Q19_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q19_plot_counts)\nprint(Q19_plot_labels)","debdd584":"plt.bar(Q19_plot_labels, Q19_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","f18daacf":"Q19_plot_counts = [0]*len(Q19_plot_labels)\nfor col in Q19_plot_columns:\n    idx = Q19_plot_columns.index(col)\n    Q19_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q19_plot_labels, Q19_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","79dd73c6":"Q19_plot_counts = [0]*len(Q19_plot_labels)\nfor col in Q19_plot_columns:\n    idx = Q19_plot_columns.index(col)\n    Q19_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q19_plot_labels, Q19_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","dd04b3ee":"print(questions[columns.index('Q20')])\nprint(survey_df['Q20'].unique())","1239a64a":"parameter = 'Q20'\nsns.countplot(survey_df[parameter],\n             order = ['Computers\/Technology', 'Medical\/Pharmaceutical', 'Other',\n 'Academics\/Education', 'Broadcasting\/Communications', 'Marketing\/CRM',\n 'Online Business\/Internet-based Sales', 'Hospitality\/Entertainment\/Sports',\n 'Accounting\/Finance', 'Insurance\/Risk Assessment',\n 'Shipping\/Transportation', 'Energy\/Mining', 'Retail\/Sales',\n 'Online Service\/Internet-based Services', 'Government\/Public Service',\n 'Manufacturing\/Fabrication', 'Military\/Security\/Defense',\n 'Non-profit\/Service'])\nplt.xticks(rotation=90)\nplt.show()","39f0acc4":"parameter = 'Q20'\nsns.countplot(india_df[parameter],\n             order = ['Computers\/Technology', 'Medical\/Pharmaceutical', 'Other',\n 'Academics\/Education', 'Broadcasting\/Communications', 'Marketing\/CRM',\n 'Online Business\/Internet-based Sales', 'Hospitality\/Entertainment\/Sports',\n 'Accounting\/Finance', 'Insurance\/Risk Assessment',\n 'Shipping\/Transportation', 'Energy\/Mining', 'Retail\/Sales',\n 'Online Service\/Internet-based Services', 'Government\/Public Service',\n 'Manufacturing\/Fabrication', 'Military\/Security\/Defense',\n 'Non-profit\/Service'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","9343cdd1":"parameter = 'Q20'\nsns.countplot(usa_df[parameter],\n             order = ['Computers\/Technology', 'Medical\/Pharmaceutical', 'Other',\n 'Academics\/Education', 'Broadcasting\/Communications', 'Marketing\/CRM',\n 'Online Business\/Internet-based Sales', 'Hospitality\/Entertainment\/Sports',\n 'Accounting\/Finance', 'Insurance\/Risk Assessment',\n 'Shipping\/Transportation', 'Energy\/Mining', 'Retail\/Sales',\n 'Online Service\/Internet-based Services', 'Government\/Public Service',\n 'Manufacturing\/Fabrication', 'Military\/Security\/Defense',\n 'Non-profit\/Service'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","d48c5cc1":"print(questions[columns.index('Q21')])\nprint(survey_df['Q21'].unique())","5c2212ab":"parameter = 'Q21'\nsns.countplot(survey_df[parameter],\n             order = [ '0-49 employees', '50-249 employees','250-999 employees','1000-9,999 employees',\n '10,000 or more employees' ])\nplt.xticks(rotation=90)\nplt.show()","d26d270f":"parameter = 'Q21'\nsns.countplot(india_df[parameter],\n             order = [ '0-49 employees', '50-249 employees','250-999 employees','1000-9,999 employees',\n '10,000 or more employees' ])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","4634b744":"parameter = 'Q21'\nsns.countplot(usa_df[parameter],\n             order = [ '0-49 employees', '50-249 employees','250-999 employees','1000-9,999 employees',\n '10,000 or more employees' ])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","72e5797f":"print(questions[columns.index('Q22')])\nprint(survey_df['Q22'].unique())","fd856461":"parameter = 'Q22'\nsns.countplot(survey_df[parameter], order = ['0','1-2','3-4','5-9','10-14','15-19','20+'])\nplt.xticks(rotation=90)\nplt.show()","7673e6fa":"parameter = 'Q22'\nsns.countplot(india_df[parameter], order = ['0','1-2','3-4','5-9','10-14','15-19','20+'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","d499cb91":"parameter = 'Q22'\nsns.countplot(usa_df[parameter], order = ['0','1-2','3-4','5-9','10-14','15-19','20+'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","b8db36e4":"print(questions[columns.index('Q23')])\nprint(survey_df['Q23'].unique())","00ab9eda":"parameter = 'Q23'\nsns.countplot(survey_df[parameter],\n             order = [\n 'We use ML methods for generating insights (but do not put working models into production)',\n 'I do not know',\n 'We recently started using ML methods (i.e., models in production for less than 2 years)',\n 'We are exploring ML methods (and may one day put a model into production)',\n 'No (we do not use ML methods)',\n 'We have well established ML methods (i.e., models in production for more than 2 years)'])\nplt.xticks(rotation=90)\nplt.show()","8e3dd46a":"parameter = 'Q23'\nsns.countplot(india_df[parameter],\n             order = [\n 'We use ML methods for generating insights (but do not put working models into production)',\n 'I do not know',\n 'We recently started using ML methods (i.e., models in production for less than 2 years)',\n 'We are exploring ML methods (and may one day put a model into production)',\n 'No (we do not use ML methods)',\n 'We have well established ML methods (i.e., models in production for more than 2 years)'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","17dd2f47":"parameter = 'Q23'\nsns.countplot(usa_df[parameter],\n             order = [\n 'We use ML methods for generating insights (but do not put working models into production)',\n 'I do not know',\n 'We recently started using ML methods (i.e., models in production for less than 2 years)',\n 'We are exploring ML methods (and may one day put a model into production)',\n 'No (we do not use ML methods)',\n 'We have well established ML methods (i.e., models in production for more than 2 years)'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","11cee3de":"print(questions[columns.index('Q24_OTHER')])\nprint(survey_df['Q24_Part_1'].unique())\nprint(survey_df['Q24_Part_2'].unique())\nprint(survey_df['Q24_Part_3'].unique())\nprint(survey_df['Q24_Part_4'].unique())\nprint(survey_df['Q24_Part_5'].unique())\nprint(survey_df['Q24_Part_6'].unique())\nprint(survey_df['Q24_Part_7'].unique())\nprint(survey_df['Q24_OTHER'].unique())","be7ba5dd":"Q24_plot_columns = ['Q24_Part_1', 'Q24_Part_2', 'Q24_Part_3', 'Q24_Part_4', 'Q24_Part_5',\n                    'Q24_Part_6', 'Q24_Part_7', 'Q24_OTHER']\nQ24_plot_labels = ['Data analysis', 'Data infrastructure', 'Build prototype', 'ML service in product\/workflow',\n                    'Experimentation to improve ML models', 'ML research','None', 'Other' ]\nQ24_plot_counts = [0]*len(Q24_plot_labels)\nfor col in Q24_plot_columns:\n    idx = Q24_plot_columns.index(col)\n    Q24_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q24_plot_counts)\nprint(Q24_plot_labels)","2a59d869":"plt.bar(Q24_plot_labels, Q24_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","9fde9826":"Q24_plot_counts = [0]*len(Q24_plot_labels)\nfor col in Q24_plot_columns:\n    idx = Q24_plot_columns.index(col)\n    Q24_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q24_plot_labels, Q24_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","2d57ad33":"Q24_plot_counts = [0]*len(Q24_plot_labels)\nfor col in Q24_plot_columns:\n    idx = Q24_plot_columns.index(col)\n    Q24_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q24_plot_labels, Q24_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","fb7acda9":"print(questions[columns.index('Q25')])\nprint(survey_df['Q25'].unique())","126af7b3":"parameter = 'Q25'\nsns.countplot(survey_df[parameter],  \n              order=['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999', '5,000-7,499',\n                    '7,500-9,999', '10,000-14,999', '15,000-19,999', '20,000-24,999', '25,000-29,999',\n                    '30,000-39,999', '40,000-49,999', '50,000-59,999', '60,000-69,999', '70,000-79,999',\n                    '80,000-89,999', '90,000-99,999', '100,000-124,999', '125,000-149,999', \n                    '150,000-199,999', '200,000-249,999', '300,000-499,999', '$500,000-999,999', \n                    '>$1,000,000'])\nplt.xticks(rotation=90)\nplt.show()","a46eaae2":"parameter = 'Q25'\nsns.countplot(india_df[parameter],  \n              order=['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999', '5,000-7,499',\n                    '7,500-9,999', '10,000-14,999', '15,000-19,999', '20,000-24,999', '25,000-29,999',\n                    '30,000-39,999', '40,000-49,999', '50,000-59,999', '60,000-69,999', '70,000-79,999',\n                    '80,000-89,999', '90,000-99,999', '100,000-124,999', '125,000-149,999', \n                    '150,000-199,999', '200,000-249,999', '300,000-499,999', '$500,000-999,999', \n                    '>$1,000,000'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","5bad1868":"parameter = 'Q25'\nsns.countplot(usa_df[parameter],  \n              order=['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999', '5,000-7,499',\n                    '7,500-9,999', '10,000-14,999', '15,000-19,999', '20,000-24,999', '25,000-29,999',\n                    '30,000-39,999', '40,000-49,999', '50,000-59,999', '60,000-69,999', '70,000-79,999',\n                    '80,000-89,999', '90,000-99,999', '100,000-124,999', '125,000-149,999', \n                    '150,000-199,999', '200,000-249,999', '300,000-499,999', '$500,000-999,999', \n                    '>$1,000,000'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","3a49e977":"print(questions[columns.index('Q26')])\nprint(survey_df['Q26'].unique())","6d49e669":"parameter = 'Q26'\nsns.countplot(survey_df[parameter],  \n              order=['$0 ($USD)', '$1-$99','$100-$999', '$1000-$9,999', '$10,000-$99,999', '$100,000 or more ($USD)'])\nplt.xticks(rotation=90)\nplt.show()","7ab7dc13":"parameter = 'Q26'\nsns.countplot(india_df[parameter],  \n              order=['$0 ($USD)', '$1-$99','$100-$999', '$1000-$9,999', '$10,000-$99,999', '$100,000 or more ($USD)'])\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","852263ea":"parameter = 'Q26'\nsns.countplot(usa_df[parameter],  \n              order=['$0 ($USD)', '$1-$99','$100-$999', '$1000-$9,999', '$10,000-$99,999', '$100,000 or more ($USD)'])\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","5391b4ca":"print(questions[columns.index('Q27_A_OTHER')])\nprint(survey_df['Q27_A_Part_1'].unique())\nprint(survey_df['Q27_A_Part_2'].unique())\nprint(survey_df['Q27_A_Part_3'].unique())\nprint(survey_df['Q27_A_Part_4'].unique())\nprint(survey_df['Q27_A_Part_5'].unique())\nprint(survey_df['Q27_A_Part_6'].unique())\nprint(survey_df['Q27_A_Part_7'].unique())\nprint(survey_df['Q27_A_Part_8'].unique())\nprint(survey_df['Q27_A_Part_9'].unique())\nprint(survey_df['Q27_A_Part_10'].unique())\nprint(survey_df['Q27_A_Part_11'].unique())\nprint(survey_df['Q27_A_OTHER'].unique())","7591cff3":"Q27_plot_columns = ['Q27_A_Part_1', 'Q27_A_Part_2', 'Q27_A_Part_3', 'Q27_A_Part_4', 'Q27_A_Part_5',\n                    'Q27_A_Part_6', 'Q27_A_Part_7','Q27_A_Part_8','Q27_A_Part_9', 'Q27_A_Part_10',\n                    'Q27_A_Part_11', 'Q27_A_OTHER']\nQ27_plot_labels = ['AWS', 'Microsoft Azure', 'Google Cloud Platform', 'IBM Cloud\/Red Hat',\n                   'Oracle Cloud', 'SAP Cloud', 'Salesforce Cloud', 'VMWare Cloud', \n                   'Alibaba Cloud', 'Tencent Cloud','None', 'Other' ]\nQ27_plot_counts = [0]*len(Q27_plot_labels)\nfor col in Q27_plot_columns:\n    idx = Q27_plot_columns.index(col)\n    Q27_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q27_plot_counts)\nprint(Q27_plot_labels)","49c7c0cc":"plt.bar(Q27_plot_labels, Q27_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","4b87a6d2":"Q27_plot_counts = [0]*len(Q27_plot_labels)\nfor col in Q27_plot_columns:\n    idx = Q27_plot_columns.index(col)\n    Q27_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q27_plot_labels, Q27_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","ebf362e9":"Q27_plot_counts = [0]*len(Q27_plot_labels)\nfor col in Q27_plot_columns:\n    idx = Q27_plot_columns.index(col)\n    Q27_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q27_plot_labels, Q27_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","f02c99be":"print(questions[columns.index('Q28')])\nprint(survey_df['Q28'].unique())","f5ca146b":"parameter = 'Q28'\nsns.countplot(survey_df[parameter])  \nplt.xticks(rotation=90)\nplt.show()","ce921d89":"parameter = 'Q28'\nsns.countplot(india_df[parameter])  \nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","cab195db":"parameter = 'Q28'\nsns.countplot(usa_df[parameter])  \nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","3150b747":"print(questions[columns.index('Q29_A_OTHER')])\nprint(survey_df['Q29_A_Part_1'].unique())\nprint(survey_df['Q29_A_Part_2'].unique())\nprint(survey_df['Q29_A_Part_3'].unique())\nprint(survey_df['Q29_A_Part_4'].unique())\nprint(survey_df['Q29_A_OTHER'].unique())","e24abace":"Q29_plot_columns = ['Q29_A_Part_1', 'Q29_A_Part_2', 'Q29_A_Part_3', 'Q29_A_Part_4', 'Q29_A_OTHER']\nQ29_plot_labels = ['Amazon EC2', 'Microsoft Azure Virtual Machines', \n                   'Google Cloud Compute Engine', 'No\/None', 'Other' ]\nQ29_plot_counts = [0]*len(Q29_plot_labels)\nfor col in Q29_plot_columns:\n    idx = Q29_plot_columns.index(col)\n    Q29_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q29_plot_counts)\nprint(Q29_plot_labels)","cc1034e0":"plt.bar(Q29_plot_labels, Q29_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","0b5d82ff":"Q29_plot_counts = [0]*len(Q29_plot_labels)\nfor col in Q29_plot_columns:\n    idx = Q29_plot_columns.index(col)\n    Q29_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q29_plot_labels, Q29_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","9aead6aa":"Q29_plot_counts = [0]*len(Q29_plot_labels)\nfor col in Q29_plot_columns:\n    idx = Q29_plot_columns.index(col)\n    Q29_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q29_plot_labels, Q29_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","0aa9f9e8":"print(questions[columns.index('Q30_A_OTHER')])\nprint(survey_df['Q30_A_Part_1'].unique())\nprint(survey_df['Q30_A_Part_2'].unique())\nprint(survey_df['Q30_A_Part_3'].unique())\nprint(survey_df['Q30_A_Part_4'].unique())\nprint(survey_df['Q30_A_Part_5'].unique())\nprint(survey_df['Q30_A_Part_6'].unique())\nprint(survey_df['Q30_A_Part_7'].unique())\nprint(survey_df['Q30_A_OTHER'].unique())","e46ab42a":"Q30_plot_columns = ['Q30_A_Part_1', 'Q30_A_Part_2', 'Q30_A_Part_3', 'Q30_A_Part_4', 'Q30_A_Part_5',\n                    'Q30_A_Part_6', 'Q30_A_Part_7', 'Q30_A_OTHER']\nQ30_plot_labels = ['Microsoft Azure Data Lake Storage', 'Microsoft Azure Disk Storage', \n                   'Amazon S3', 'Amazon EFS',\n                    'Google Cloud Storage', 'Google Cloud Filestore','No\/None', 'Other' ]\nQ30_plot_counts = [0]*len(Q30_plot_labels)\nfor col in Q30_plot_columns:\n    idx = Q30_plot_columns.index(col)\n    Q30_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q30_plot_counts)\nprint(Q30_plot_labels)","efcfc885":"plt.bar(Q30_plot_labels, Q30_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","0da81bb7":"Q30_plot_counts = [0]*len(Q30_plot_labels)\nfor col in Q30_plot_columns:\n    idx = Q30_plot_columns.index(col)\n    Q30_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q30_plot_labels, Q30_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","83ca3013":"Q30_plot_counts = [0]*len(Q30_plot_labels)\nfor col in Q30_plot_columns:\n    idx = Q30_plot_columns.index(col)\n    Q30_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q30_plot_labels, Q30_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","51c1c409":"print(questions[columns.index('Q31_A_OTHER')])\nprint(survey_df['Q31_A_Part_1'].unique())\nprint(survey_df['Q31_A_Part_2'].unique())\nprint(survey_df['Q31_A_Part_3'].unique())\nprint(survey_df['Q31_A_Part_4'].unique())\nprint(survey_df['Q31_A_Part_5'].unique())\nprint(survey_df['Q31_A_Part_6'].unique())\nprint(survey_df['Q31_A_Part_7'].unique())\nprint(survey_df['Q31_A_Part_8'].unique())\nprint(survey_df['Q31_A_Part_9'].unique())\nprint(survey_df['Q31_A_OTHER'].unique())","c5f7aa03":"Q31_plot_columns = ['Q31_A_Part_1', 'Q31_A_Part_2', 'Q31_A_Part_3', 'Q31_A_Part_4', 'Q31_A_Part_5',\n                    'Q31_A_Part_6', 'Q31_A_Part_7', 'Q31_A_Part_8', 'Q31_A_Part_9', 'Q31_A_OTHER']\nQ31_plot_labels = ['Amazon SageMaker', 'Azure ML studio', \n                   'Google Cloud Vertex AI', 'DataRobot',\n                    'Databricks', 'Dataiku', 'Alteryx', 'Rapidminer','None', 'Other' ]\nQ31_plot_counts = [0]*len(Q31_plot_labels)\nfor col in Q31_plot_columns:\n    idx = Q31_plot_columns.index(col)\n    Q31_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q31_plot_counts)\nprint(Q31_plot_labels)","39836fb2":"plt.bar(Q31_plot_labels, Q31_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","ccd1dccc":"Q31_plot_counts = [0]*len(Q31_plot_labels)\nfor col in Q31_plot_columns:\n    idx = Q31_plot_columns.index(col)\n    Q31_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q31_plot_labels, Q31_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","aa122d65":"Q31_plot_counts = [0]*len(Q31_plot_labels)\nfor col in Q31_plot_columns:\n    idx = Q31_plot_columns.index(col)\n    Q31_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q31_plot_labels, Q31_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","f8e525c3":"print(questions[columns.index('Q32_A_OTHER')])\nprint(survey_df['Q32_A_Part_1'].unique())\nprint(survey_df['Q32_A_Part_2'].unique())\nprint(survey_df['Q32_A_Part_3'].unique())\nprint(survey_df['Q32_A_Part_4'].unique())\nprint(survey_df['Q32_A_Part_5'].unique())\nprint(survey_df['Q32_A_Part_6'].unique())\nprint(survey_df['Q32_A_Part_7'].unique())\nprint(survey_df['Q32_A_Part_8'].unique())\nprint(survey_df['Q32_A_Part_9'].unique())\nprint(survey_df['Q32_A_Part_10'].unique())\nprint(survey_df['Q32_A_Part_11'].unique())\nprint(survey_df['Q32_A_Part_12'].unique())\nprint(survey_df['Q32_A_Part_13'].unique())\nprint(survey_df['Q32_A_Part_14'].unique())\nprint(survey_df['Q32_A_Part_15'].unique())\nprint(survey_df['Q32_A_Part_16'].unique())\nprint(survey_df['Q32_A_Part_17'].unique())\nprint(survey_df['Q32_A_Part_18'].unique())\nprint(survey_df['Q32_A_Part_19'].unique())\nprint(survey_df['Q32_A_Part_20'].unique())\nprint(survey_df['Q32_A_OTHER'].unique())","616ffabe":"Q32_plot_columns = ['Q32_A_Part_1', 'Q32_A_Part_2', 'Q32_A_Part_3', 'Q32_A_Part_4', 'Q32_A_Part_5',\n                    'Q32_A_Part_6', 'Q32_A_Part_7', 'Q32_A_Part_8', 'Q32_A_Part_9', 'Q32_A_Part_10',\n                    'Q32_A_Part_11', 'Q32_A_Part_12', 'Q32_A_Part_13', 'Q32_A_Part_14', 'Q32_A_Part_15',\n                    'Q32_A_Part_16', 'Q32_A_Part_17', 'Q32_A_Part_18', 'Q32_A_Part_19', 'Q32_A_Part_20',\n                     'Q32_A_OTHER']\nQ32_plot_labels = ['MySQL', 'PostgreSQL', 'SQLite', 'Oracle database', 'MongoDB', 'Snowflake', 'IBM db2',\n                   'Microsoft SQL Server', 'Microsoft Azure SQL database', 'Microsoft Azure Cosmos DB',\n                   'Amazon Redshift', 'Amazon Aurora', 'Amazon RDS', 'Amazon DynamoDB',\n                   'Google Cloud BigQuery', 'Google Cloud SQL', 'Google Cloud Firestore',\n                   'Google Cloud BigTable', 'Google Cloud Spanner','None', 'Other' ]\nQ32_plot_counts = [0]*len(Q32_plot_labels)\nfor col in Q32_plot_columns:\n    idx = Q32_plot_columns.index(col)\n    Q32_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q32_plot_counts)\nprint(Q32_plot_labels)","7c2af457":"plt.bar(Q32_plot_labels, Q32_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","5fae358b":"Q32_plot_counts = [0]*len(Q32_plot_labels)\nfor col in Q32_plot_columns:\n    idx = Q32_plot_columns.index(col)\n    Q32_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q32_plot_labels, Q32_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","7f797229":"Q32_plot_counts = [0]*len(Q32_plot_labels)\nfor col in Q32_plot_columns:\n    idx = Q32_plot_columns.index(col)\n    Q32_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q32_plot_labels, Q32_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","7bae5622":"print(questions[columns.index('Q33')])\nprint(survey_df['Q33'].unique())","19cddcfe":"parameter = 'Q33'\nsns.countplot(survey_df[parameter])  \nplt.xticks(rotation=90)\nplt.show()","76c66985":"parameter = 'Q33'\nsns.countplot(india_df[parameter])  \nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","33360f62":"parameter = 'Q33'\nsns.countplot(usa_df[parameter])  \nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","b2431557":"print(questions[columns.index('Q34_A_OTHER')])\nprint(survey_df['Q34_A_Part_1'].unique())\nprint(survey_df['Q34_A_Part_2'].unique())\nprint(survey_df['Q34_A_Part_3'].unique())\nprint(survey_df['Q34_A_Part_4'].unique())\nprint(survey_df['Q34_A_Part_5'].unique())\nprint(survey_df['Q34_A_Part_6'].unique())\nprint(survey_df['Q34_A_Part_7'].unique())\nprint(survey_df['Q34_A_Part_8'].unique())\nprint(survey_df['Q34_A_Part_9'].unique())\nprint(survey_df['Q34_A_Part_10'].unique())\nprint(survey_df['Q34_A_Part_11'].unique())\nprint(survey_df['Q34_A_Part_12'].unique())\nprint(survey_df['Q34_A_Part_13'].unique())\nprint(survey_df['Q34_A_Part_14'].unique())\nprint(survey_df['Q34_A_Part_15'].unique())\nprint(survey_df['Q34_A_Part_16'].unique())\nprint(survey_df['Q34_A_OTHER'].unique())","6acc82bf":"Q34_plot_columns = ['Q34_A_Part_1', 'Q34_A_Part_2', 'Q34_A_Part_3', 'Q34_A_Part_4', 'Q32_A_Part_5',\n                    'Q34_A_Part_6', 'Q34_A_Part_7', 'Q34_A_Part_8', 'Q34_A_Part_9', 'Q32_A_Part_10',\n                    'Q34_A_Part_11', 'Q34_A_Part_12', 'Q34_A_Part_13', 'Q34_A_Part_14', 'Q32_A_Part_15',\n                    'Q34_A_Part_16','Q34_A_OTHER']\nQ34_plot_labels = ['Amazon QuickSight', 'Microsoft Power BI', 'Google Data Studio', 'Looker', 'Tableau',\n                   'Salesforce', 'Tableau CRM', 'Qlik', 'Domo', 'TIBCO Spotfire', 'Alteryx', 'Sisense',\n                   'SAP Analytics Cloud', 'Microsoft Azure Synapse', 'Thoughtspot','None', 'Other' ]\nQ34_plot_counts = [0]*len(Q34_plot_labels)\nfor col in Q34_plot_columns:\n    idx = Q34_plot_columns.index(col)\n    Q34_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q34_plot_counts)\nprint(Q34_plot_labels)","62532bb5":"plt.bar(Q34_plot_labels, Q34_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","104a8a3e":"Q34_plot_counts = [0]*len(Q34_plot_labels)\nfor col in Q34_plot_columns:\n    idx = Q34_plot_columns.index(col)\n    Q34_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q34_plot_labels, Q34_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","60fca679":"Q34_plot_counts = [0]*len(Q34_plot_labels)\nfor col in Q34_plot_columns:\n    idx = Q34_plot_columns.index(col)\n    Q34_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q34_plot_labels, Q34_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","41e964b8":"print(questions[columns.index('Q35')])\nprint(survey_df['Q35'].unique())","2d114c6d":"parameter = 'Q35'\nsns.countplot(survey_df[parameter])  \nplt.xticks(rotation=90)\nplt.show()","b85b0f44":"parameter = 'Q35'\nsns.countplot(india_df[parameter])  \nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","2b58c51e":"parameter = 'Q35'\nsns.countplot(usa_df[parameter])  \nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","41e4c86a":"print(questions[columns.index('Q36_A_OTHER')])\nprint(survey_df['Q36_A_Part_1'].unique())\nprint(survey_df['Q36_A_Part_2'].unique())\nprint(survey_df['Q36_A_Part_3'].unique())\nprint(survey_df['Q36_A_Part_4'].unique())\nprint(survey_df['Q36_A_Part_5'].unique())\nprint(survey_df['Q36_A_Part_6'].unique())\nprint(survey_df['Q36_A_Part_7'].unique())\nprint(survey_df['Q36_A_OTHER'].unique())","7bcad9d8":"Q36_plot_columns = ['Q36_A_Part_1', 'Q36_A_Part_2', 'Q36_A_Part_3', 'Q36_A_Part_4', 'Q36_A_Part_5',\n                    'Q36_A_Part_6', 'Q36_A_Part_7','Q36_A_OTHER']\nQ36_plot_labels = ['Automated data augmentation', 'Automated feature engineering\/selection',\n                   'Automated model selection', 'Automated model architecture searches', \n                   'Automated hyperparameter tuning', 'Automation of full ML pipelines', 'None', 'Other' ]\nQ36_plot_counts = [0]*len(Q36_plot_labels)\nfor col in Q36_plot_columns:\n    idx = Q36_plot_columns.index(col)\n    Q36_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q36_plot_counts)\nprint(Q36_plot_labels)","cc087cc6":"plt.bar(Q36_plot_labels, Q36_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","758999cb":"Q36_plot_counts = [0]*len(Q36_plot_labels)\nfor col in Q36_plot_columns:\n    idx = Q36_plot_columns.index(col)\n    Q36_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q36_plot_labels, Q36_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","1cebafac":"Q36_plot_counts = [0]*len(Q36_plot_labels)\nfor col in Q36_plot_columns:\n    idx = Q36_plot_columns.index(col)\n    Q36_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q36_plot_labels, Q36_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","05dea1a6":"print(questions[columns.index('Q37_A_OTHER')])\nprint(survey_df['Q37_A_Part_1'].unique())\nprint(survey_df['Q37_A_Part_2'].unique())\nprint(survey_df['Q37_A_Part_3'].unique())\nprint(survey_df['Q37_A_Part_4'].unique())\nprint(survey_df['Q37_A_Part_5'].unique())\nprint(survey_df['Q37_A_Part_6'].unique())\nprint(survey_df['Q37_A_Part_7'].unique())\nprint(survey_df['Q37_A_OTHER'].unique())","9a2c7fa1":"Q37_plot_columns = ['Q37_A_Part_1', 'Q37_A_Part_2', 'Q37_A_Part_3', 'Q37_A_Part_4', 'Q37_A_Part_5',\n                    'Q37_A_Part_6', 'Q37_A_Part_7','Q37_A_OTHER']\nQ37_plot_labels = ['Google Cloud AutoML', 'H2O Driverless AI',\n                   'Databricks AutoML', 'DataRobot AutoML', \n                   'Amazon Sagemaker Autopilot', 'Azure Automated Machine Learning', 'None', 'Other' ]\nQ37_plot_counts = [0]*len(Q37_plot_labels)\nfor col in Q37_plot_columns:\n    idx = Q37_plot_columns.index(col)\n    Q37_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q37_plot_counts)\nprint(Q37_plot_labels)","53aa3f97":"plt.bar(Q37_plot_labels, Q37_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","442ea300":"Q37_plot_counts = [0]*len(Q37_plot_labels)\nfor col in Q37_plot_columns:\n    idx = Q37_plot_columns.index(col)\n    Q37_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q37_plot_labels, Q37_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","0b7d4b53":"Q37_plot_counts = [0]*len(Q37_plot_labels)\nfor col in Q37_plot_columns:\n    idx = Q37_plot_columns.index(col)\n    Q37_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q37_plot_labels, Q37_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","230254a4":"print(questions[columns.index('Q38_A_OTHER')])\nprint(survey_df['Q38_A_Part_1'].unique())\nprint(survey_df['Q38_A_Part_2'].unique())\nprint(survey_df['Q38_A_Part_3'].unique())\nprint(survey_df['Q38_A_Part_4'].unique())\nprint(survey_df['Q38_A_Part_5'].unique())\nprint(survey_df['Q38_A_Part_6'].unique())\nprint(survey_df['Q38_A_Part_7'].unique())\nprint(survey_df['Q38_A_Part_8'].unique())\nprint(survey_df['Q38_A_Part_9'].unique())\nprint(survey_df['Q38_A_Part_10'].unique())\nprint(survey_df['Q38_A_Part_11'].unique())\nprint(survey_df['Q38_A_OTHER'].unique())","99fa0552":"Q38_plot_columns = ['Q38_A_Part_1', 'Q38_A_Part_2', 'Q38_A_Part_3', 'Q38_A_Part_4', 'Q38_A_Part_5',\n                    'Q38_A_Part_6', 'Q38_A_Part_7','Q38_A_Part_8', 'Q38_A_Part_9', 'Q38_A_Part_10', 'Q38_A_Part_11',\n                    'Q38_A_OTHER']\nQ38_plot_labels = ['Neptune.ai', 'Weights & Biases', 'Comet.ml', 'Sacred + Omniboard', 'TensorBoard',\n                   'Guild.ai', 'Polyaxon', 'ClearML', 'Domino Model Monitor', 'MLflow', 'None', 'Other' ]\nQ38_plot_counts = [0]*len(Q38_plot_labels)\nfor col in Q38_plot_columns:\n    idx = Q38_plot_columns.index(col)\n    Q38_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q38_plot_counts)\nprint(Q38_plot_labels)","ac2bc081":"plt.bar(Q38_plot_labels, Q38_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","7adac6aa":"Q38_plot_counts = [0]*len(Q38_plot_labels)\nfor col in Q38_plot_columns:\n    idx = Q38_plot_columns.index(col)\n    Q38_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q38_plot_labels, Q38_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","1cb1e4bf":"Q38_plot_counts = [0]*len(Q38_plot_labels)\nfor col in Q38_plot_columns:\n    idx = Q38_plot_columns.index(col)\n    Q38_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q38_plot_labels, Q38_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","bafc86cd":"print(questions[columns.index('Q39_OTHER')])\nprint(survey_df['Q39_Part_1'].unique())\nprint(survey_df['Q39_Part_2'].unique())\nprint(survey_df['Q39_Part_3'].unique())\nprint(survey_df['Q39_Part_4'].unique())\nprint(survey_df['Q39_Part_5'].unique())\nprint(survey_df['Q39_Part_6'].unique())\nprint(survey_df['Q39_Part_7'].unique())\nprint(survey_df['Q39_Part_8'].unique())\nprint(survey_df['Q39_Part_9'].unique())\nprint(survey_df['Q39_OTHER'].unique())","16480dde":"Q39_plot_columns = ['Q39_Part_1', 'Q39_Part_2', 'Q39_Part_3', 'Q39_Part_4', 'Q39_Part_5',\n                    'Q39_Part_6', 'Q39_Part_7','Q39_Part_8', 'Q39_Part_9',\n                    'Q39_OTHER']\nQ39_plot_labels = ['Plotly Dash', 'Streamlit', 'NBViewer', 'GitHub', 'Personal blog',\n                   'Kaggle', 'Colab', 'Shiny',  'I do not share my work publicly', 'Other' ]\nQ39_plot_counts = [0]*len(Q39_plot_labels)\nfor col in Q39_plot_columns:\n    idx = Q39_plot_columns.index(col)\n    Q39_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q39_plot_counts)\nprint(Q39_plot_labels)","3ebef164":"plt.bar(Q39_plot_labels, Q39_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","ab6c7336":"Q39_plot_counts = [0]*len(Q39_plot_labels)\nfor col in Q39_plot_columns:\n    idx = Q39_plot_columns.index(col)\n    Q39_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q39_plot_labels, Q39_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","d0145e75":"Q39_plot_counts = [0]*len(Q39_plot_labels)\nfor col in Q39_plot_columns:\n    idx = Q39_plot_columns.index(col)\n    Q39_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q39_plot_labels, Q39_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","64e01d73":"print(questions[columns.index('Q40_OTHER')])\nprint(survey_df['Q40_Part_1'].unique())\nprint(survey_df['Q40_Part_2'].unique())\nprint(survey_df['Q40_Part_3'].unique())\nprint(survey_df['Q40_Part_4'].unique())\nprint(survey_df['Q40_Part_5'].unique())\nprint(survey_df['Q40_Part_6'].unique())\nprint(survey_df['Q40_Part_7'].unique())\nprint(survey_df['Q40_Part_8'].unique())\nprint(survey_df['Q40_Part_9'].unique())\nprint(survey_df['Q40_Part_10'].unique())\nprint(survey_df['Q40_Part_11'].unique())\nprint(survey_df['Q40_OTHER'].unique())","2e3a6533":"Q40_plot_columns = ['Q40_Part_1', 'Q40_Part_2', 'Q40_Part_3', 'Q40_Part_4', 'Q40_Part_5',\n                    'Q40_Part_6', 'Q40_Part_7','Q40_Part_8', 'Q40_Part_9', 'Q40_Part_10', 'Q40_Part_11',\n                    'Q40_OTHER']\nQ40_plot_labels = ['Coursera', 'edX', 'Kaggle Learn Courses', 'DataCamp', 'Fast.ai',\n                   'Udacity', 'Udemy', 'LinkedIn Learning', 'Cloud-certification programs', 'University Courses', 'None', 'Other' ]\nQ40_plot_counts = [0]*len(Q40_plot_labels)\nfor col in Q40_plot_columns:\n    idx = Q40_plot_columns.index(col)\n    Q40_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q40_plot_counts)\nprint(Q40_plot_labels)","a5fa920f":"plt.bar(Q40_plot_labels, Q40_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","e3887532":"Q40_plot_counts = [0]*len(Q40_plot_labels)\nfor col in Q40_plot_columns:\n    idx = Q40_plot_columns.index(col)\n    Q40_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q40_plot_labels, Q40_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","77ffc4d6":"Q40_plot_counts = [0]*len(Q40_plot_labels)\nfor col in Q40_plot_columns:\n    idx = Q40_plot_columns.index(col)\n    Q40_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q40_plot_labels, Q40_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","849bc22b":"print(questions[columns.index('Q41')])\nprint(survey_df['Q41'].unique())","9ca62944":"parameter = 'Q41'\nsns.countplot(survey_df[parameter], order = ['Local development environments (RStudio, JupyterLab, etc.)',\n 'Basic statistical software (Microsoft Excel, Google Sheets, etc.)',\n 'Cloud-based data software & APIs (AWS, GCP, Azure, etc.)' ,'Other'\n 'Business intelligence software (Salesforce, Tableau, Spotfire, etc.)',\n 'Advanced statistical software (SPSS, SAS, etc.)'])  \nplt.xticks(rotation=90)\nplt.show()","b3e7e323":"parameter = 'Q41'\nsns.countplot(india_df[parameter], order = ['Local development environments (RStudio, JupyterLab, etc.)',\n 'Basic statistical software (Microsoft Excel, Google Sheets, etc.)',\n 'Cloud-based data software & APIs (AWS, GCP, Azure, etc.)' ,'Other'\n 'Business intelligence software (Salesforce, Tableau, Spotfire, etc.)',\n 'Advanced statistical software (SPSS, SAS, etc.)'])  \nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","f3525a83":"parameter = 'Q41'\nsns.countplot(usa_df[parameter], order = ['Local development environments (RStudio, JupyterLab, etc.)',\n 'Basic statistical software (Microsoft Excel, Google Sheets, etc.)',\n 'Cloud-based data software & APIs (AWS, GCP, Azure, etc.)' ,'Other'\n 'Business intelligence software (Salesforce, Tableau, Spotfire, etc.)',\n 'Advanced statistical software (SPSS, SAS, etc.)'])  \nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","f210746c":"print(questions[columns.index('Q42_OTHER')])\nprint(survey_df['Q42_Part_1'].unique())\nprint(survey_df['Q42_Part_2'].unique())\nprint(survey_df['Q42_Part_3'].unique())\nprint(survey_df['Q42_Part_4'].unique())\nprint(survey_df['Q42_Part_5'].unique())\nprint(survey_df['Q42_Part_6'].unique())\nprint(survey_df['Q42_Part_7'].unique())\nprint(survey_df['Q42_Part_8'].unique())\nprint(survey_df['Q42_Part_9'].unique())\nprint(survey_df['Q42_Part_10'].unique())\nprint(survey_df['Q42_Part_11'].unique())\nprint(survey_df['Q42_OTHER'].unique())","c4870fae":"Q42_plot_columns = ['Q42_Part_1', 'Q42_Part_2', 'Q42_Part_3', 'Q42_Part_4', 'Q42_Part_5', 'Q42_Part_6', 'Q42_Part_7',\n                    'Q42_Part_8','Q42_Part_9', 'Q42_Part_10', 'Q42_Part_11', 'Q42_OTHER']\nQ42_plot_labels = ['Twitter', 'Email newsletters', 'Reddit', 'Kaggle',\n                   'Course forums', 'YouTube', 'Podcasts', 'Blogs', 'Journal publications', \n                   'Slack Communities','None', 'Other' ]\nQ42_plot_counts = [0]*len(Q42_plot_labels)\nfor col in Q42_plot_columns:\n    idx = Q42_plot_columns.index(col)\n    Q42_plot_counts[idx] += int(survey_df[col].value_counts())\n    #print(idx, int(survey_df[col].value_counts()))\nprint(Q42_plot_counts)\nprint(Q42_plot_labels)","73541ba7":"plt.bar(Q42_plot_labels, Q42_plot_counts)\nplt.xticks(rotation=90)\nplt.show()","768c0d56":"Q42_plot_counts = [0]*len(Q42_plot_labels)\nfor col in Q42_plot_columns:\n    idx = Q42_plot_columns.index(col)\n    Q42_plot_counts[idx] += int(india_df[col].value_counts())\nplt.bar(Q42_plot_labels, Q42_plot_counts)\nplt.xticks(rotation=90)\nplt.title('India')\nplt.show()","e902525e":"Q42_plot_counts = [0]*len(Q42_plot_labels)\nfor col in Q42_plot_columns:\n    idx = Q42_plot_columns.index(col)\n    Q42_plot_counts[idx] += int(usa_df[col].value_counts())\nplt.bar(Q42_plot_labels, Q42_plot_counts)\nplt.xticks(rotation=90)\nplt.title('USA')\nplt.show()","2235c433":"The three most popular Big Data products seem to be MySQL, PostgreSQL and Microsoft SQL Server. Many do not use Big Data products and they must predominantly be students. ","7f6108ad":"# Age distribution of Kagglers","aa2f5e6c":"We can see that an overwhelming majority of respondents are men. This could be attributed to the already large gender gap in STEM fields. Perhaps raising more awareness in schools and colleges, and creating curated data science sessions with prominent women in data science could help in reducing this gap. Kaggle is definitely a good place to start for data science enthusiasts and therefore it would be amazing if the representation of women on this platform could be increased. The number of respondents who idenitified with other genders is also surprisingly low, so perhaps we need to create a safe space for everyone in the discussion and community sections. ","dc2919e2":"# Platforms for studying data science ","d0ace351":"Tableau and Microsoft Power BI seem to the most often used BI tools, across the board. ","3b257fad":"# Most often used BI platform ","6a751b9c":"The insight here is that the respondents are either the only data scientist in their team, or part of a huge team specializing data science. It is less likely that the respondents are from a mid-sized data science team. ","e37860a6":"# Distribution of size of current company","91c8ce1b":"The percentage of respondents who use cloud platforms is low. However, we can see that those with experience >3 years use cloud platforms more","a086da87":"Here we can see that most people do not spend money on cloud computing systems. This could be because many Kagglers are in the early stages of their data science journey, and also because of the availability of free platforms like Kaggle and Colab for their experiments. ","90f605f6":"MySQL, PostgreSQL and Microsoft SQL Server seem to be the most regularly used Big Data products. MongoDB is less used in the USA as opposed to India. ","9a59ec9a":"Google Cloud AutoML seems to be the most regularly used ML automation tool amongst the respondents. ","d72ea32a":"Some findings include:\n* There are very few students who do not have experience in programming\n* Most Data Scientists seem to have a lot of coding experience\n* Most Data Analysts seem to have lesser coding experience\n* Most of the people who didn't have programming experience did not hold a data science job, unsurprisingly\n* Most  software engineers and research scientists have a lot of coding experience, as expected","5a114547":"A larger proportion of Kagglers from USA work on their PCs as opposed to India. ","4b964e7e":"# Data analysis of all 42 questions asked in the Kaggle Survey 2021\n\nHi! I'm Prajit, a PhD student and data enthusiast. In this notebook, I wish to help you understand some insights that I derived from the Kaggle Survey 2021 data. I analyzed all 42 questions in the survey, but left out the optional questions. If you're short on time you can check the TLDR section for the important points. It was indeed interesting to find some insights regarding the distributions of age, experience, skills and preference of fellow data enthusiasts on Kaggle! **The comparison between India and USA, conclusions and insights are at the beginning of the notebook for easy reading. Do share and upvote if you found it interesting!!**","17ca6a8d":"# Specialized hardware used for ML","112599a6":"GitHub is popular in both India and the USA. However, Kaggle has a higher preference amongst Indians. ","5b239383":"28.62% of Kagglers are from India, which has 16% of the globe's population. The United States comes in at a distant second with 10.2%. This is also quite high because the US has close to 4% of the world's population. As expected, nations with large populations such as China, Japan, Russia, Nigeria, Pakistan and Indonesia feature in the list too. Over 70% of Kagglers come from the top 20 countries alone. ","8287f43d":"There seems to be a preference to local development environments like RStudio and Jupyter in the USA compared to India, where basic statistical tools like spreadsheets are preferred. ","bf5d9f2d":"The trend seems to be similar in both the countries. ","66090d7f":"Most of the Kagglers are students and hence they don't report an income, but upon observing the rest of the respondents, we can notice two peaks. The peak at the range 10000 USD to 15000 USD should represent the average salary from India and the developing nations. The other at 100000 US to 125000 USD should represent the average salary from US and the developed nations. Thus, we can see a clear divide in the range of salaries in the different regions. At the extreme end of the spectrum, we can see that there are few who earn close to or more than a million USD per annum. ","f715fcce":"Not surprisingly, Kaggle features amongst the favourite online notebook by Kagglers! Apart from Kaggle, the most preferred online notebook is Colab notebooks by Google, which is a preferred environment for many ML researchers. ","88b01034":"The trends are similar in both India and the USA.","b0d42e4d":"# Tools to manage ML experiments ","47502b2c":"# Data science roles distribution ","70709c9a":"# Educational qualifications of Kagglers","93d9075b":"The usage trend of BI tools in USA and India seem to be very similar. ","3aeb60f5":"A larger proportion of Kagglers from India use Google Cloud TPUs as opposed to those from the USA.","235227a0":"# Extracting data for USA and India in separate data frames","7d52eb54":"C and C++ seems to be more popular in India than in USA. ","2f94fe00":"Image classification using architectures like VGG\/Inception\/ResNet etc seem to be the most common CV application worked on by Kagglers. Object detection, image processing and image segmentation are also popular. ","c3eb1df0":"The only value which seems to be differing in women and men is that even though 80% of Kagglers are men, of all the Kagglers without formal education past high school, 86.33% of them are men. ","2cd4ebf7":"Not surprisingly, most of the respondents are students. This makes sense because Kaggle is the go-to platform for beginners and students of data science. The other popular roles include data scientist, data analyst and software engineer. There are also a significant number of unemployed people who are here to upskill and build a good data science portfolio. ","8c44128e":"Across the board, AWS seems to be the most popular option. ","3e10d38c":"The distribution is similar in both the countries. ","dc1633f2":"# Distribution of industry of current job","4410bf23":"Amazon EC2 and Google Cloud Compute Engine seem to be the most popular cloud products, according to the respondents. ","c147f6a4":"# Usage of TPUs","68eff648":"Removing the first row containing the questions to get the survey answers data","897e0267":"There seem to be very few takers for automated ML tools amongst the respondents. Data augmentation, hyperparameter tuning and model selection seem be to the areas in which automation is more popular. ","2a082e28":"# India v USA comparison \n\n* AGE: India = Most respondents are under 24; USA = Most respondents are in the age range 25-39\n* NUMBER OF RESPONDENTS: India = 28.62% of all; USA = 10.20% of all\n* EDUCATION: India = Most have a Bachelor degree; USA = Most have a Master degree \n* JOB PROFILES: India = Most are students; USA = Significant number of Data Scientists present\n* CODING EXPERIENCE: India = Most have <3 years work exp; USA = Most have >3 years work exp\n* PREFERRED PROGRAMMING LANGUAGE: C and C++ seems to be more popular in India than in USA\n* WORKING ENVIRONMENT: A larger proportion of Kagglers from USA work on their PCs as opposed to India\n* USE OF TPUs: A larger proportion of Kagglers from India use Google Cloud TPUs as opposed to those from the USA\n* VISUALIZATION LIBRARIES: Ggplot is more commonly used in the USA than in India\n* ML EXPERIENCE: India = Few people with >3 years exp; USA = Significant amount of people with >3 years exp\n* ML ADOPTION IN COMPANIES: India has more companies who are in early stage (<2 years) of ML adoption\n* PEAK SALARY RANGE PER ANNUM: India = 10000-14999 USD; USA = 100000-124999 USD\n* EXPENDITURE ON ML\/CLOUD: Respondents from USA tend to spend more\n* PREFERRED CLOUD PRODUCT: India = Amazon EC2, GCE and Azure; USA = Amazon EC2 by a long shot\n* PREFERRED DATA STORAGE PRODUCT: India = Amazon S3 and Google Cloud; USA = Amazon S3 by a long shot\n* PREFERRED BIG DATA TOOL: MongoDB seems to be more popular in India than in the USA\n* TOOLS TO MANAGE ML EXPERIMENTS: Indians seem to be using more tools as compared to their counterparts in the USA\n* SHARING DATA SCIENCE PORTFOLIO: India = Kaggle and GitHub, USA = More of GitHub\n* COURSEWORK: Picking university courses related to data science and ML seems to be more popular in the USA compared to India\n* BASIC DATA ANALYSIS: India = Google Sheets, Microsoft Excel; USA = RStudio, Jupyter\n* SOURCE OF INFORMATION ABOUT DATA SCIENCE: India = Kaggle, YouTube, blogs; US = Top 3 + Twitter and other platforms","53076f3a":"Word embeddings like GLoVe\/word2vec and transformer architectures like GPT-3\/BERT seem to be the most commonly used aspects in NLP by Kagglers. ","0db90076":"# Preferred media for information on data science ","9435e0ee":"# Regularly used Big Data products","47717761":"The distributions seem to be similar in both countries. ","49495804":"# Conclusions (TLDR)\n\n* Most people on Kaggle seem to be young and\/or in the early stages of their data science journey\n* There is a huge gender imbalance in data science \n* The most regularly used algorithms and tools are the basic ones\n* Most respondents don't seem to be using costly infrastructures for training, or third party softwares for various ML process- related to the previous point\n* Amazon products like AWS, EC2, S3 seem to be preferred over their Google, Microsoft equivalents\n* GitHub, Kaggle and Colab seem to be the most popular platforms for people to share their data science portfolios","e8038e74":"Here we can see that most of the respondents work with data analysis to influence product or business decision. Very few Kagglers are involved in core ML research. ","067669be":"As expected, we can see that most of the respondents are younger than 30. The largest group of Kagglers are thus students and young professionals in the early stages of their careers. However, it is enlightening to see that there are a significant number of people in older groups on Kaggle, demonstrating that there is no specific age limit to acquiring knowledge in data science. ","57e04c62":"# Automated ML tools","f1987c0d":"The most commonly used ML frameworks are Scikit-learn, Tensorflow, Keras, Pytorch and Xgboost. ","2f764626":"# Primary tool to analyze data","4043929d":"Coursera, Kaggle and Udemy seem to be the most popular learning platform amongst the respondents. ","6f7dd62b":"# Importing libraries\nFirst, let us import some of the libraries we may need for data processing and visualization","2cd48396":"# ML frameworks used regularly","16bcfb1f":"There seem to be Kagglers from small companies and big companies alike, but what sticks out is that many are in the range of <50 employees. This could either be so because students selected that option, or because many work in startups with the former being more likely.","901bf85e":"# Regularly used cloud computing platforms","b06cd62c":"The trend seems to the same in both USA and India, however the USA prefers Amazon S3 to a greater degree. ","cd258d53":"The distribution seems to be similar in both the countries. ","4d6dbb0d":"# NLP methods used regularly","a7090ebc":"Here we can see that the users pretty much enjoy using the top three cloud platforms, especially GCP and AWS,","ae8718d8":"Kagglers from the USA seem to have more ML experience than Kagglers from India in general. ","edec3013":"# Data visualization libraries used","44998c53":"There are a lesser number of companies in the USA which have been using ML for less than 2 years as opposed to India, as per the respondents. ","212f4d19":"Separating out the questions alone so that we can refer to them later","b6aff536":"Here we can see that most of the Kagglers do not use specialized hardware, presumably making use of Kaggle or Colab GPUs. However amongst the ones who do, NVIDIA GPUs seem to be the most popular one. ","a96670f0":"It is impressive to see that most Kagglers have a master's degree and an overwhelming majority of folks on the platform possess at least a bachelor's degree. This shows that people use Kaggle as an additional learning tool along with their conventional educational degrees. ","14d08d14":"Unsurprisingly, most Kagglers belong to the Computers\/Technology industry or belong to the academia as students or researchers. Quite a few finance professionals also seem to be interested in data science, which is fascinating. Since data is the currency of the 21st century, we can expect people from more diverse industries to enter data science very soon. ","ad6b536c":"From the above plot, we can see that most Kagglers haven't made use of TPUs for training their models. Barely anyone has used it more than 6 times. ","5cabe3f6":"Most Kagglers seem to be new in the field of machine learning, with most being exposed to ML for less than a year. A majority of the respondents have less than 2 years experience with ML models. ","acef35e9":"Most Kagglers from India hold Bachelor degrees whereas most Kagglers from USA hold Master degrees. ","82b9c080":"# ML and cloud service expenses ","3136972d":"MongoDB seems to be more popular in India than in the USA. ","c562ff8f":"We can see from the above plots that respondents from the USA tend to spend more money on ML infrastructure than their Indian counterparts. ","0f254d71":"# Primary programming language recommended to aspiring data scientists ","3340384d":"ML Engineers, Data scientists, DBA engineers, Developer Relations\/Advocacy professionals and research scientists seem to be the Kagglers who make use of TPUs the most. ","53839b35":"We can see that the most frequently used programming language by the respondents is Python by a long shot. SQL comes a distant second. This makes sense because Python and SQL are the fundamental skills needed to break into data science. ","59520904":"The trend seems to be similar in both India and the USA. ","697486e9":"In India, most of the respondents get their data science information from the top three platforms. In the USA we can see that share of people getting their information from other sources is higher. ","e029c1d6":"The plots are similar for India and USA, indicating similar trends. ","5eab596f":"# Current job roles reported by Kagglers","22cf455b":"# Computing platform used for data science projects","83b2e8fe":"Python is the overwhelming favorite in both India and the USA.","95962c66":"The trends seem to be similar in both the countries. ","8fccd10b":"The same trend holds for both India and USA.","3acfc38c":"# Key insights \n* Most Kagglers are aged younger than 30 years\n* Most Kagglers are men (~80%)\n* Most Kagglers are Indians (US, China, Japan and Brazil round up the top 5)\n* Most Kagglers have at least Bachelor's degrees (>40% have master's too)\n* Most Kagglers are currently students\n* Most Kagglers are in the early stage of their careers (1-3 years of experience)\n* Data scientists on average have more programming experience than data analysts\n* Most Kagglers use Python regularly (SQL is also used quite often)\n* Most Kagglers overwhelmingly recommend Python as the first programming language to learn for beginners \n* Most Kagglers use JupyterLab\/notebook as their primary local IDE and Google Colabs or Kaggle as online notebook environments\n* Most Kagglers use their laptops as the primary computing platform for data science projects \n* Most Kagglers don't use cloud computing platforms, but those with >3 years do more than the others \n* Most Kagglers don't use specialized hardware, but those who do prefer NVIDIA GPUs\n* Most Kagglers haven't made use of TPUs for training their models, but those with >3 years do more than the others \n* Most Kagglers use matplotlib for data viz, Seaborn and Plotly are also popular\n* Over 50% of Kagglers have been exposed to ML methods for less than two years\n* The most commonly used ML frameworks by Kagglers are Scikit-learn, Tensorflow, Keras, Pytorch and Xgboost\n* The most commonly used algorithms by Kagglers are simple ones like linear\/logistic regression and decision trees\/random forests\n* The most commonly used Computer vision application by Kagglers is image classification\n* The most commonly used NLP applications by Kagglers is GLoVe\/word2vec and GPT-3\/BERT\n* Most Kagglers belong to the Computers\/Technology industry or are in academia as students or researchers\n* Most Kagglers are either the only data scientist in their team, or part of a huge team specializing in data science\n* Most businesses where the respondents work seem to be in the early stages of ML adoption\n* Most Kagglers work with data analysis to influence product and business decisions\n* Most Kagglers do not spend money for ML infrastructure\/cloud services\n* The top 3 cloud platforms are AWS, GCP and Microsoft Azure and developers seem to enjoy using them\n* Amazon EC2 and Google Cloud Compute Engine seem to be the most popular cloud products\n* Amazon S3 and Google Cloud Filestore are the popular data storage options for the respondents\n* Most Kagglers don't seem to be making use of ML products like Amazon SageMaker or DataBricks\n* The three most popular Big Data products seem to be MySQL, PostgreSQL and Microsoft SQL Server \n* Microsoft Power BI and Tableau seem to be the most regularly used BI tools\n* Most Kagglers don't seem to be using automated ML tools like auto-sklearn\n* Data augmentation, hyperparameter tuning and model selection seem be to the areas in which ML automation is more popular\n* Google Cloud AutoML is the most regularly used ML automation tool by the respondents \n* Most Kagglers don't use any tools to manage their Ml experiments; For those who do, Tensorboard is the favorite\n* GitHub, Kaggle and Colab are the most preferred portals for the respondents to share their data science portfolios \n* Coursera, Kaggle Learn and Udemy are the most popular learning platforms for ML and data science amongst the respondents \n* To perform data analysis, respondents are mostly making use of local development environments like RStudio or basic statistical tools like spreadsheets \n* Most of the respondents seem to get their data science information from Kaggle, YouTube and blogs","b598b65e":"Most of the respondents have some coding experience. It is also evident that most Kagglers have 1-3 years experience. As we reach higher experience bands, the number of respondents decreases, indicating that most of the people on the platform are in the early stages of their careers. ","4c1f23e7":"# Regularly used BI tools ","be645ea2":"The distribution seems to be similar in both the countries. ","a680987e":"# Popular ML algorithms used regularly","5ff996c8":"Microsoft Power BI and Tableau seem to be the most regularly used BI tools. ","c93a03b2":"ML products seem to be an underutilized market, with none of them used by a large proportion of the respondents. ","896a243b":"# Data science team size distribution","d8f93fdd":"# Checking out the files in the input folder","dd6735bc":"Picking university courses related to data science and ML seems to be more popular in the USA compared to India. ","42f44950":"Indians seem to be using more tools to manage ML experiments as compared to their counterparts in the USA. ","1a072f55":"Ggplot seems to be more commonly used in the USA than in India. ","1192dc2f":"Most Kagglers seem to prefer JupyterLab\/notebook as their primary IDE. This makes sense because data analysis is easier when done on a notebook style environment. VSCode and PyCharm are not far behind, possibly used for projects and Kaggle competitions. ","b5665190":"# Regularly used ML automation tools ","87b7dbfd":"The distribution seems to be similar in both the countries. ","a8674eba":"The trend shows that Amazon EC2 is by far the favorite cloud product in the USA, compared to India where there is a more equitable distribution of preference. ","fdcb2c7d":"Again, we can see that Amazon S3 and Google Cloud Filestore are the popular data storage options for the respondents. ","a94ed060":"The general trends seem to be the same in both the countries. ","36e1384f":"Python is the clear winner in this category. Most Kagglers recommmend data science beginners to start with Python, which is hands down, the most the important building block in one's data science career. ","8b3ac550":"Respondents seem to prefer local development environments or basic statistical software to perform their primary data analysis. ","6d37d354":"# Gender distribution of Kagglers","5d9cece5":"Most Indians on Kaggle have coding experience less than 3 years whereas most Kagglers from US have a significant amount of work experience. ","ef6ce7d1":"We can see that TPUs are used mainly by more experienced Kagglers. ","983e6d80":"# Development environments used by Kagglers","1d367039":"# Preferred online notebook environment","988e293c":"# Computer vision methods used regularly","6f090392":"GitHub, Kaggle and Colab are the most popular platforms used by the respondents to share their data science work. There is also a large number of people who do not share their work publicly. ","21e88c91":"# Regularly used data storage products","b8fc771e":"Most Indians on Kaggle seem to be students, compared to the US where a significant number of Data Scientists and other professionals seem to active on Kaggle. ","4e496667":"The most commonly used algorithms seem to linear\/logistic regression and decision trees\/random forests. GBMs and CNNs are in third and fourth position respectively. In line with the analysis, most of the Kagglers seem to be beginners and hence opt for classical ML as opposed to complex novel approaches such as GANs or Transformers. ","8926c690":"Most of the respondents seem to get their data science information from Kaggle, YouTube and blogs.","b907a2e9":"# Regularly used cloud computing products","d4d55e27":"# Work experience distribution of Kagglers","a2baa494":"Matplotlib seems to the favorite for data viz amongst the Kagglers. Seaborn and Plotly also take podium positions. ","834f77b1":"Most Kagglers use a laptop for their personal projects. Very few use cloud computing platforms, presumably because most of the respondents are students. ","87b92de4":"The respondents from the USA are clearly on average older than respondents from India. This could be due to the presence of a large number of Indian students on Kaggle. ","cfae0e3f":"# Years of experience with ML methods","6141f234":"# ML methods' perforation into businesses","7d6c811c":"The gender imbalance seems to be the same in both India and USA.","79ecc9c6":"# Public platforms to share data science portfolio","f3ccb366":"# Cloud platform with best developer experience","346f9007":"TensorBoard is clearly the most popular ML experiment management tool. However, we can see that most respondents don't make use of such tools. ","e6837133":"# Salary distribution","7c8de7d8":"# Regularly used programming language","27b13539":"JupyterLab\/Notebook is the most popular IDE in both India and the USA.","c7407102":"# Regularly used ML products","01d8f94c":"Although there are a significant number of teams who have established production pipelines for ML, from the data it seems that most businesses are in the early stage of adoption or haven't considered ML yet. This makes sense because many traditional businesses are only now warming up to digitalization and machine learning. ","8c210805":"# Nationality distribution of Kagglers","ce9b1d9a":"Across the board, we can see that AWS, Microsoft Azure and GCP are the preferred cloud platforms. "}}