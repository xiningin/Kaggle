{"cell_type":{"9e6c2c2c":"code","1e702028":"code","ec560a28":"code","03b2b5c4":"code","ac80229e":"code","1bc3c275":"code","97b83926":"code","02fe0be1":"code","ed65e2a7":"code","bb81aff7":"code","ee98b9a1":"code","f733f9ed":"code","9c1c9dad":"code","cddccbf0":"code","2d98587d":"code","db4b0404":"code","b502dd17":"code","dd0f0f2c":"code","bb74d0b0":"code","b1973cc2":"code","13e7f963":"code","01a28f01":"code","dfb319d2":"code","6eb5504f":"code","97fe1707":"code","02c21bda":"code","e6badea4":"code","2156161d":"code","04ba0d69":"code","73f6c3c1":"code","886e96b1":"code","71bf1b01":"code","029741e9":"code","25f42469":"code","f794da32":"code","b2233a76":"code","c6782852":"code","c75d6090":"code","31203624":"code","66464604":"code","90e7202c":"code","a41affa9":"code","68df7b40":"code","797bd704":"code","a5e2e28b":"code","200d7c86":"code","7ffa47b0":"code","3c20963b":"code","3d985f35":"code","57d2a70a":"code","752e6651":"code","0beb467e":"code","e506dc0c":"code","e653cbb8":"code","fd4a113a":"code","ccaa6166":"code","2366d0d3":"code","f4fa6a71":"code","a26ef643":"code","cd71bfd8":"code","e8161715":"code","7ff08213":"code","4628bd53":"code","45ac81ef":"code","11ee4ff1":"code","d8ad89f3":"code","f7c5617f":"code","2ef8aa40":"code","9deaf084":"code","5e3f35ca":"code","8b6185f8":"code","9b7509a9":"code","ee248949":"code","2b3302dc":"code","ecef9f71":"code","8b001c06":"code","adb7816f":"code","b40424d9":"code","07303b6c":"code","2f851585":"code","be72ed8d":"code","ffe4e3b7":"code","b85e4f88":"code","26919327":"code","a3a02e5c":"code","dfc1c79c":"code","e207fbd6":"code","7e5b00f8":"code","c6d2a07e":"code","00b809bf":"code","3f45f2d4":"markdown","484527a4":"markdown","4aa8ee8b":"markdown","a7d8b0bc":"markdown","50cdb708":"markdown","d35874cc":"markdown","1dd3f0f5":"markdown"},"source":{"9e6c2c2c":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1e702028":"train=pd.read_csv(r'..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain.tail()","ec560a28":"test=pd.read_csv(r'..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest.head()","03b2b5c4":"train[train.isnull()==True]\n#Train df showing all nan values","ac80229e":"sns.heatmap(data=train.isnull())\n#Heatmap for visualizing null values","1bc3c275":"train.columns","97b83926":"train.drop(columns=['Alley','PoolQC','Fence','MiscFeature','Fireplaces','FireplaceQu','GarageType',\n       'GarageYrBlt', 'GarageFinish','GarageQual','GarageCond'],inplace=True,axis=1)","02fe0be1":"sns.heatmap(train.isnull())","ed65e2a7":"train[train['LotFrontage'].isnull()==True]","bb81aff7":"plt.figure(figsize=(12,6))\nsns.boxplot(data=train['LotFrontage'])","ee98b9a1":"train['LotFrontage']=train['LotFrontage'].fillna(train['LotFrontage'].mean())","f733f9ed":"plt.figure(figsize=(14,8))\nsns.heatmap(data=train.isnull())","9c1c9dad":"train.columns","cddccbf0":"train[['BsmtQual', 'BsmtCond',\n         'BsmtFinSF1', 'BsmtFinType2',\n       'BsmtFinSF2', 'BsmtUnfSF']]","2d98587d":"sns.heatmap(data=train.isnull())","db4b0404":" train[train['BsmtFinType2'].isnull()==True].iloc[:,30:40]","b502dd17":"train.drop(columns=['BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2'],axis=1,inplace=True)","dd0f0f2c":"plt.figure(figsize=(14,4))\nsns.heatmap(train.isnull())","bb74d0b0":"train.isnull()==True","b1973cc2":"train.dropna(axis=1,inplace=True)","13e7f963":"sns.heatmap(train.isnull())","01a28f01":"len(train.columns)","dfb319d2":"train.head(10)","6eb5504f":"test.head(10)","97fe1707":"test.drop(columns=['Alley','PoolQC','Fence','MiscFeature','Fireplaces','FireplaceQu','GarageType',\n       'GarageYrBlt', 'GarageFinish','GarageQual',\n                   'GarageCond','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2'],axis=1,inplace=True)","02c21bda":"sns.heatmap(test.isnull())","e6badea4":"test['LotFrontage']=test['LotFrontage'].fillna(test['LotFrontage'].mean())","2156161d":"plt.figure(figsize=(14,4))\nsns.heatmap(test.isnull())","04ba0d69":"print(test.columns)","73f6c3c1":"test.drop(columns=['MasVnrType', 'MasVnrArea', 'BsmtQual', 'Electrical'],axis=1,inplace=True)","886e96b1":"plt.figure(figsize=(14,4))\nsns.heatmap(test.isnull())","71bf1b01":"test[test['Utilities'].isnull()==True]","029741e9":"test['Utilities'].fillna('AllPub',inplace=True)","25f42469":"test['MSZoning'].fillna('RH',inplace=True)","f794da32":"test['BsmtFinSF1'].fillna(test['BsmtFinSF1'].mean(),inplace=True)","b2233a76":"test['BsmtFinSF2'].fillna(test['BsmtFinSF2'].mean(),inplace=True)","c6782852":"test['BsmtUnfSF'].fillna(test['BsmtUnfSF'].mean(),inplace=True)","c75d6090":"test['TotalBsmtSF'].fillna(test['TotalBsmtSF'].mean(),inplace=True)","31203624":"test['SaleType'].fillna('WD',inplace=True)","66464604":"test['BsmtFullBath'].fillna(0,inplace=True)","90e7202c":"test['BsmtHalfBath'].fillna(0,inplace=True)","a41affa9":"test['Functional'].fillna('Typ',inplace=True)","68df7b40":"test['GarageCars'].fillna(test['GarageCars'].median(),inplace=True)","797bd704":"test['GarageArea'].fillna(test['GarageArea'].mean(),inplace=True)","a5e2e28b":"plt.figure(figsize=(20,4))\nsns.heatmap(test.isnull())","200d7c86":"test","7ffa47b0":"cat_train=train.select_dtypes(include='object')\ncat_train.head(20)","3c20963b":"from sklearn.preprocessing import OrdinalEncoder","3d985f35":"oe=OrdinalEncoder()","57d2a70a":"encat_train=oe.fit_transform(cat_train)\nencat_train\n#encoded_categorical_train_array","752e6651":"encat_train2=pd.DataFrame(data=encat_train,columns=cat_train.columns)\nencat_train2\n#encoded_categorical_train_dataframe","0beb467e":"num_train=train.select_dtypes(include='int')\nnum_train","e506dc0c":"float_train=train.select_dtypes(include='float')\nfloat_train","e653cbb8":"final_train=pd.concat([encat_train2,num_train,float_train],axis=1)\nfinal_train.head(10)","fd4a113a":"cat_test=test.select_dtypes(include='object')\ncat_test","ccaa6166":"cat_test=cat_test.fillna('dummy')","2366d0d3":"encat_test=oe.fit_transform(cat_test)\nencat_test","f4fa6a71":"encat_test2=pd.DataFrame(data=encat_test,columns=cat_test.columns)\nencat_test2\n#encoded_categorical_test_dataframe","a26ef643":"num_test=test.select_dtypes(include='int')\nnum_test","cd71bfd8":"float_test=test.select_dtypes(include='float')\nfloat_test","e8161715":"final_test=pd.concat([encat_test2,num_test,float_test],axis=1)\nfinal_test","7ff08213":"final_train=final_train.fillna(0)\nfinal_test=final_test.fillna(0)","4628bd53":"final_train.columns","45ac81ef":"font = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 10}\n\nplt.rc('font', **font)","11ee4ff1":"plt.figure(figsize=(16,4))\nplt.xlabel('No of Houses')\nplt.ylabel('Lot_Area of houses')\nfinal_train['LotArea'].plot(color='red')\nplt.tight_layout()","d8ad89f3":"plt.figure(figsize=(15,4))\nplt.xlabel('Different parameters of SalePrice')\nplt.ylabel('Values')\nfinal_train.describe()['SalePrice'].plot(kind='line',color='green')\nplt.tight_layout()","f7c5617f":"final_train.iloc[:,25:40]","2ef8aa40":"Yr_stay=final_train['YrSold']-final_train['YearBuilt']\nYr_stay\n#years stayed","9deaf084":"plt.figure(figsize=(18,5))\nplt.subplot(1,2,1)\nplt.plot(Yr_stay)\nplt.title('Year stayed in Houses')\nplt.xlabel('No of Houses')\nplt.ylabel('Yr_sold - Yr_built')\nplt.subplot(1,2,2)\nplt.plot(Yr_stay.describe(),color='purple')\nplt.title('Statistics of Year stayed feature')\nplt.xlabel('Statistics')\nplt.ylabel('Values')\nplt.tight_layout(w_pad=3)","5e3f35ca":"sns.jointplot(data=final_train,x='LotArea',y='SalePrice',color='g',kind='reg',height=7,space=0)\nplt.tight_layout(w_pad=15)","8b6185f8":"X_train=final_train.drop('SalePrice',axis=1).values\nfinal_train['SalePrice'] = final_train['SalePrice'].astype(float)\ny_train=final_train['SalePrice'].values\nX_test=final_test.values","9b7509a9":"from sklearn.preprocessing import MinMaxScaler","ee248949":"scaler=MinMaxScaler()","2b3302dc":"scaler.fit(X_train)","ecef9f71":"X_train=scaler.transform(X_train)","8b001c06":"X_test=scaler.transform(X_test)","adb7816f":"X_train.min()","b40424d9":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout,Activation","07303b6c":"X_train.shape","2f851585":"model=Sequential()\n\nmodel.add(Dense(61,activation='relu'))\nmodel.add(Dense(30,activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(15,activation='relu'))\nmodel.add(Dropout(0.1))\nmodel.add(Dense(1,activation='relu'))\n\nmodel.compile(optimizer='rmsprop',loss='mse')","be72ed8d":"model.fit(x=X_train, \n          y=y_train, \n          epochs=10000,\n          batch_size=256 \n          )","ffe4e3b7":"losses = pd.DataFrame(model.history.history)\nlosses.plot()","b85e4f88":"prediction=model.predict(X_test)\nprediction","26919327":"#from sklearn.tree import DecisionTreeRegressor","a3a02e5c":"#clf=DecisionTreeRegressor(max_depth=5)\n#clf=clf.fit(X_train,Y_train)","dfc1c79c":"#prediction=clf.predict(X_test)","e207fbd6":"ypred=pd.DataFrame(data=prediction,columns=['SalePrice'])\nypred","7e5b00f8":"idcol=pd.DataFrame(data=final_test['Id'],columns=['Id'])\nidcol","c6d2a07e":"result=pd.concat([idcol,ypred],axis=1)\nresult","00b809bf":"result.to_csv('submis.csv')","3f45f2d4":"Cleaning of Final dataset on which we need to work.","484527a4":"Encode categorical features as an integer array.\n\nThe input to this transformer should be an array-like of integers or strings, denoting the values taken on by categorical (discrete) features. The features are converted to ordinal integers. This results in a single column of integers (0 to n_categories - 1) per feature.","4aa8ee8b":"# **The End**","a7d8b0bc":"**1. 1. Boxplot to measure the inter-quartile range,outliers & mean for missing data imputation**","50cdb708":"Graph shows lot area of all 1460 houses","d35874cc":"Graph describing all statistics of sale price of houses","1dd3f0f5":"Setting up the format & font size for matplotlib graphs"}}