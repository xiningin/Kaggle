{"cell_type":{"b156398a":"code","6fc10ebf":"code","99117a39":"code","394d3f0f":"code","e9f6bb20":"code","6c32fb80":"code","e58c3c5e":"code","0f1eb044":"code","9fbd855a":"code","26a3df4e":"code","ae6b7152":"code","fbb26109":"code","c3a45ea1":"code","374440ab":"code","28262521":"code","b07e5cf5":"code","5dd70520":"markdown","3f8f051e":"markdown","d02970c5":"markdown","547786a8":"markdown","e310d33d":"markdown","9c99a86f":"markdown","92e4c110":"markdown","a04c47aa":"markdown","66cab907":"markdown","7ba1b348":"markdown","4cdd133d":"markdown","96710509":"markdown"},"source":{"b156398a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6fc10ebf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nimport plotly\nimport plotly.figure_factory as ff\nimport warnings\nwarnings.simplefilter(\"ignore\")","99117a39":"data = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndata.head()","394d3f0f":"data.shape","e9f6bb20":"data.info()","6c32fb80":"data.describe()","e58c3c5e":"data.isnull().sum()","0f1eb044":"percent_null_bmi = (data['bmi'].isna().sum() \/ data.shape[0]) * 100\npercent_null_bmi","9fbd855a":"data = data.dropna()\ndata.shape","26a3df4e":"plt.style.use(\"classic\")\nsns.distplot(data['age'],kde=True)\nplt.axvline(data['age'].mean())\nplt.xlabel(\"Age (in years)\")\nplt.title(f\"Distribution of Ages\")\nplt.show()","ae6b7152":"labels = data['gender'].value_counts().index.tolist()[:2]\nvalues = data['gender'].value_counts().tolist()[:2]\n\nplt.pie(x=values, labels=labels,autopct=\"%1.2f%%\", shadow=True)\nplt.title(\"Gender Distribution Pie Chart\",fontdict={'fontsize': 14})\nplt.show()","fbb26109":"labels = [\"Not Present\", \"Present\"]\nvalues = data['hypertension'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\",shadow=True)\nplt.title(\"Hypertension Distribution Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","c3a45ea1":"labels = [\"Heart Disease Absent\", \"Heart Disease Present\"]\nvalues = data['heart_disease'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\",shadow=True)\nplt.title(\"Heart Disease Distribution Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","374440ab":"labels = [\"Married\", \"Never Married\"]\nvalues = data['ever_married'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\",shadow=True)\nplt.title(\"Marital Status Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","28262521":"labels = [\"Private Job\", \"Self-employed\", \"Have Children\", \"Goverment Job\", \"Never Worked Before\"]\nvalues = data['work_type'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\",shadow=True)\nplt.title(\"Work Type Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","b07e5cf5":"labels = [\"Urban Residence\", \"Rural Residence\"]\nvalues = data['Residence_type'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\",shadow=True)\nplt.title(\"Residence Type Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","5dd70520":"## Age","3f8f051e":"#### Since the percentage value is small we can drop the rows containing the nulls","d02970c5":"## Importing the necessary Libraries","547786a8":"#### Work Type","e310d33d":"#### We can see from above list that only the column with Null values is bmi.\n\n#### Let's see what percentage of values in bmi column are Null.","9c99a86f":"## Checking the null values","92e4c110":"#### Residence Type","a04c47aa":"#### Married or not?","66cab907":"## Univariate Analysis","7ba1b348":"## Hypertension","4cdd133d":"#### Presence of Heart Disease","96710509":"## Gender"}}