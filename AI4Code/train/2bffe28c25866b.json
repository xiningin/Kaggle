{"cell_type":{"5264907a":"code","9ed7e302":"code","571e6a4f":"code","47e0cfcd":"code","d195bdd2":"code","c8035266":"code","cad9f6af":"code","df0378bd":"code","ef25ff54":"code","2c5d3d77":"code","0ae3ccd1":"code","b6104521":"code","01abd919":"code","31c5161e":"code","b254e758":"code","1f7ce890":"code","b660b0d4":"code","05f40b12":"code","e576504f":"code","a1a1ca0a":"code","4c4633d9":"code","cc044c57":"code","59b8fea8":"code","eafc68b1":"code","7b9796f7":"code","46583295":"code","3711971b":"code","a42bb379":"code","fac484a1":"code","fea8c8fb":"code","9c6cc6c6":"code","889626e2":"code","8880ea61":"code","54f9cc79":"code","24a1764f":"code","f8d7187b":"code","33461eae":"code","87a3d039":"code","91185e15":"code","79adc5f5":"code","dd9df803":"code","b50e6305":"code","06b3fcd5":"code","0c98c4d5":"code","a225ebbf":"code","0de2aa2e":"code","48a90cce":"code","b07ab2a9":"code","b60babe7":"code","4ceae0c7":"code","b127c0be":"code","934a0cbe":"code","2201cf84":"code","d3cfe498":"code","ad93caab":"code","f0e38d6c":"code","47c32475":"code","6a17c903":"code","1fbcf5e4":"code","9c9f4569":"code","6f01e48e":"code","47af9271":"code","edbbd55a":"code","85fe38af":"code","1d289556":"code","e75ca53c":"code","b4560c83":"code","f034b804":"code","575f1308":"code","06e1c75d":"code","3b8f7ca0":"code","54349722":"code","8f44d191":"code","bf76b01a":"code","f4ca0be4":"code","2f0252ca":"code","a9310d4c":"code","7fa99a1b":"code","948cd813":"code","ed36593b":"code","4e1beacb":"code","178dd040":"code","67cd1d00":"code","aab19d65":"code","835d4c51":"code","ee10f3b1":"markdown","e749d6d8":"markdown","ed67628f":"markdown","dd407253":"markdown","4ed27a89":"markdown","61bd201d":"markdown","9475c11b":"markdown","da6a63ad":"markdown","1cf56990":"markdown","213d8fb4":"markdown","247ac0e9":"markdown","a3475922":"markdown","9e4aad71":"markdown","cf6a81eb":"markdown","a6ab29d8":"markdown","b9a5ade4":"markdown","f472ebfd":"markdown","78f66814":"markdown","92bbe9c0":"markdown","2e848639":"markdown","fda0780c":"markdown","b6f1234f":"markdown"},"source":{"5264907a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt, seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_columns',None)","9ed7e302":"pip install openpyxl","571e6a4f":"# We will be using 5 datasets for this project\n\n# General data\ngeneral_data = pd.read_csv('..\/input\/hr-analytics-case-study\/general_data.csv')\n\n# survey data \nmanager_survey_data = pd.read_csv('..\/input\/hr-analytics-case-study\/manager_survey_data.csv')\nemployee_survey_data = pd.read_csv('..\/input\/hr-analytics-case-study\/employee_survey_data.csv')\n\n# office entry\/exit time\nin_time = pd.read_csv('..\/input\/hr-analytics-case-study\/in_time.csv')\nout_time = pd.read_csv('..\/input\/hr-analytics-case-study\/out_time.csv')\n\n## data dictionary\ndata_dictionary = pd.read_excel('..\/input\/hr-analytics-case-study\/data_dictionary.xlsx')","47e0cfcd":"data_dictionary.replace(np.nan,\" \")","d195bdd2":"general_data.head()","c8035266":"manager_survey_data.head()","cad9f6af":"employee_survey_data.head()","df0378bd":"in_time","ef25ff54":"out_time","2c5d3d77":"in_time.fillna(0,inplace=True)\nout_time.fillna(0,inplace= True)","0ae3ccd1":"# Convert all columns(except unnamed:0 which is employee id)to datetime format using pandas.to_datetime\nin_time.iloc[:,1:]= in_time.iloc[:,1:].apply(pd.to_datetime, errors='coerce') \n#coerce : in case of error during conversion place NaN.\n\nout_time.iloc[:,1:] = out_time.iloc[:,1:].apply(pd.to_datetime, errors='coerce')","b6104521":"#join in_time and out_time in a single df total_time \ntotal_time = in_time.append(out_time)","01abd919":"total_time","31c5161e":"# Find out the difference between the out_time and in_time\n# pandas df have diff(periods=1,axis=0)\ntotal_time = total_time.diff(periods=4410)","b254e758":"total_time = total_time.iloc[4410:]","1f7ce890":"total_time","b660b0d4":"total_time.reset_index(inplace=True)\ntotal_time.head()","05f40b12":"# few columns have 0 value. It means that office was closed on that particular day.\n## remove these columns to calculate mean time(remember that index is employee id, so later we need to add it again)\ntotal_time.drop(columns=['index','Unnamed: 0'],axis=1,inplace=True)\ntotal_time.head()","e576504f":"# remove all 0 columns which represent holidays.\ntotal_time.drop(['2015-01-01','2015-01-14','2015-01-26','2015-03-05','2015-05-01','2015-07-17','2015-09-17','2015-10-02','2015-11-09','2015-11-10','2015-11-11','2015-12-25'],axis=1,inplace=True)","a1a1ca0a":"total_time['mean_time'] = total_time.mean(axis=1)","4c4633d9":"total_time","cc044c57":"total_time.iloc[0,0]","59b8fea8":"# convert mean time into hours\ntotal_time.mean_time = total_time.mean_time.apply(lambda x : int(str(x).split(' ')[2].split(':')[0]) + int(str(x).split(' ')[2].split(':')[1])\/60 + float(str(x).split(' ')[2].split(':')[2])\/3600)","eafc68b1":"## Adding column for employee id \ntotal_time.reset_index(inplace=True)","7b9796f7":"total_time","46583295":"total_time = total_time.rename(columns = {'index' : 'EmployeeID'})","3711971b":"#we only want id and mean time\ntotal_time = total_time[['EmployeeID','mean_time']]  ","a42bb379":"df = pd.merge(general_data, manager_survey_data, on = 'EmployeeID', how = 'inner')","fac484a1":"df = pd.merge(df, employee_survey_data, on = 'EmployeeID', how = 'inner')","fea8c8fb":"df = pd.merge(df, total_time, on = 'EmployeeID', how = 'inner')","9c6cc6c6":"df","889626e2":"df.info()","8880ea61":"df.describe()","54f9cc79":"obj_cols = df.select_dtypes(include = ['object']).columns\nobj_cols","24a1764f":"for i in obj_cols:\n  unique_values = len(df[i].value_counts())\n  if unique_values == 1:\n    print(i)","f8d7187b":"df.drop(['EmployeeCount', 'StandardHours', 'Over18'], axis = 1, inplace = True)","33461eae":"df.isnull().sum()","87a3d039":"#check the distribution of the data\nplt.figure(figsize = (20,5))\nsns.countplot(x = 'NumCompaniesWorked', data = df)","91185e15":"#fill missing value in numcompaniesworked with mode i.e 1\ndf['NumCompaniesWorked'].fillna(1.0, inplace = True)","79adc5f5":"# fill missing values in EnvironmentSatisfaction with mod value i.e. 3\ndf['EnvironmentSatisfaction'].fillna(3.0, inplace = True)","dd9df803":"df.JobSatisfaction.median()","b50e6305":"# fill missing values in JobSatisfaction with median value i.e. 3\ndf['JobSatisfaction'].fillna(3.0, inplace = True)","06b3fcd5":"# check the distribution of the data\nplt.figure(figsize = (20,5))\nsns.countplot(x = 'WorkLifeBalance', data = df)","0c98c4d5":"# fill missing values in JobSatisfaction with mode value i.e. 3\ndf['WorkLifeBalance'].fillna(3.0, inplace = True)","a225ebbf":"df.TotalWorkingYears.median()","0de2aa2e":"# fill missing values in JobSatisfaction with median value i.e. 10\ndf['TotalWorkingYears'].fillna(10.0, inplace = True)","48a90cce":"df.isnull().sum().sum()","b07ab2a9":"#copy of df\ndf_eda=df.copy()","b60babe7":"#create buckets of 10 years\n#pd.cut is used to segment and sort data values into bins \ndf_eda.Age = pd.cut(df.Age, range(10,70,10))  ","4ceae0c7":"df_eda.Age","b127c0be":"def make_plot(feature_name):\n    plt.figure(figsize = (8,5))\n    ax = sns.countplot(x = feature_name, hue = 'Attrition', data = df_eda, palette = 'Set2')\n    plt.xlabel(feature_name)\n    plt.ylabel('Employee count')\n    plt.title('{} vs Attrition'.format(feature_name))\n    plt.legend()","934a0cbe":"make_plot('Age')","2201cf84":"make_plot('BusinessTravel')","d3cfe498":"make_plot('Department')","ad93caab":"make_plot('Education')","f0e38d6c":"make_plot('Gender')","47c32475":"make_plot('MaritalStatus')","6a17c903":"make_plot('JobLevel')","1fbcf5e4":"make_plot('YearsWithCurrManager')","9c9f4569":"make_plot('WorkLifeBalance')","6f01e48e":"df_eda.columns","47af9271":"make_plot('StockOptionLevel')","edbbd55a":"#One hot encoding using pandas.get_dummies\n\none_hot_var = ['BusinessTravel','Department','EducationField','JobRole','MaritalStatus']\nfor i in one_hot_var:\n  x_t = pd.get_dummies(df[i], prefix = i, prefix_sep = '_', drop_first = True)\n  df = df.join(x_t)\n  df.drop(i, axis = 1, inplace = True)","85fe38af":"df","1d289556":"#To encode attrition and gender\n\ndf.Attrition = df.Attrition.apply(lambda x : 1 if x == 'Yes' else 0)\ndf.Gender = df.Gender.apply(lambda x : 1 if x == 'Male' else 0)","e75ca53c":"df","b4560c83":"x = df.drop('Attrition', axis = 1)\ny = df['Attrition']","f034b804":"from sklearn.model_selection import train_test_split","575f1308":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 42)","06e1c75d":"df_cor = x_train.copy()","3b8f7ca0":"df_cor","54349722":"df_cor.corr()","8f44d191":"plt.figure(figsize = (18,12))\nsns.heatmap(df_cor.corr())","bf76b01a":"df_cor['Attrition'] = y_train\nplt.figure(figsize = (18,12))\ndf_cor.corr()['Attrition'].sort_values(ascending = False)[1:].plot(kind = 'bar')","f4ca0be4":"#checking for high multicollinearity between features\n\ndf_corr = df_cor.corr()\nfor i in range(df_corr.shape[0]):\n  for j in range(df_corr.shape[1]):\n    if(abs(df_corr.iloc[i,j]) > 0.8) &  (abs(df_corr.iloc[i,j]) != 1):\n      print(round(df_corr.iloc[i,j], 3), df_corr.columns[j], '&', df_corr.index[i])","2f0252ca":"x_train.drop('Department_Sales', axis = 1, inplace = True)\nx_test.drop('Department_Sales', axis = 1, inplace = True) ","a9310d4c":"from sklearn.tree import DecisionTreeClassifier\n\nml = DecisionTreeClassifier()\nml.fit(x_train, y_train)","7fa99a1b":"from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix","948cd813":"y_pred = ml.predict(x_test)","ed36593b":"accuracy_score(y_test, y_pred)","4e1beacb":"precision_score(y_test, y_pred)","178dd040":"recall_score(y_test, y_pred)","67cd1d00":"f1_score(y_test, y_pred)","aab19d65":"from sklearn.metrics import classification_report","835d4c51":"cr = classification_report(y_test, y_pred)\nprint(cr)","ee10f3b1":"**Singles are more tend to leave**","e749d6d8":"##Feature Engineering","ed67628f":"##Check for multicollinearity","dd407253":"### Missing values imputation","4ed27a89":"# HR Analytics with decison tree classifier","61bd201d":"**not much impact of job level, it is just attrition appears to slightly decrease with increasing job level**","9475c11b":"**1) We observe that there is a clear trend of employees who travel very frequently tend to have higher attrition compared to employees who don't travel**","da6a63ad":"We can compute the total hours by converting this to string and splitting it by \"\", then by again splitting it by '' we will get hours, minutes and seconds. Add hours,minutes\/60 and seconds\/3600 to get total hours.","1cf56990":"# Outline:\n\n*   Import & merge the datasets\n*   Missing value imputation\n\n\n*   EDA\n*   Feature engineering\n\n*   Model building\n*   Model evaluation\n\n\n\n\n","213d8fb4":"Notes:\n\n1) The performance of developed model is excellent and it can be deployed to predict future employee attrition.\n\n2) We found a lot of insights about employee attrition during EDA.\n\n3) Few major caused of employee attrition includes human resource work, bad work life balance, frequent travels and unmarried employees. So, in order to reduce attrition company should focus on these reasons.\n","247ac0e9":"# Problem Statement:\nIn a company, 4000 employees, and every year 15% of employees are leaving the company.we have to analyse the reason as well we will predict based on the features if the employees leave the company or not.","a3475922":"# Exercise 1\nFiltering can be done to see the columns in which all values are 0 days..... display the column names in which all values are 0 days.","9e4aad71":"# Exercise 3\nin index column do the increment by 1","cf6a81eb":"**Gender does not appear to have significant impact on attrition**","a6ab29d8":"##EDA ","b9a5ade4":"\n# Exercise 2\n#### Using apply and lambda we can replace every 0 days value with \"\" in each column...........","f472ebfd":"**1) with age, employee attrition is decreasing**\n\n**2) majority of employees having age between 20-30 are leaving maybe in search of some better jobs**\n\n**3) more than 50% of attrition is seen in age group 10-20 but this is not a problem because very few employees are there in this age group and most of them would be intern only**","78f66814":"**Education level of employee does not appear to have significant effect on attrition**","92bbe9c0":"**impact is not clearly seen of number of year value but still we can say by looking at majority that less the number of year, more attrition was there**","2e848639":"**1) Employees in HR department have much higher attrition compared to other departments**","fda0780c":"**not much effect on attrition**","b6f1234f":"**employees having very bad work life balance are more tend to leave**"}}