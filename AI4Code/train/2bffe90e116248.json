{"cell_type":{"04a0dd46":"code","e516871d":"code","6829c473":"code","1597458b":"code","45b44694":"code","f54c2f25":"code","87923fac":"code","25d032c5":"code","66326dd5":"code","694b91c0":"code","37110413":"code","6427fb58":"code","9c02142b":"code","f1e9c858":"code","5acf8e8c":"code","140c080e":"code","f4bcf929":"code","31bcb14e":"code","d6aae18e":"code","98f8977d":"code","922b7148":"code","204e67ef":"code","2c811b18":"code","e1be60bf":"markdown","7fb3c05d":"markdown","f9439e9d":"markdown","f2c6c57d":"markdown","ff24a492":"markdown","3b7eb06f":"markdown","7f4795ae":"markdown","345e71ef":"markdown","73f4f59d":"markdown"},"source":{"04a0dd46":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nimport sklearn.metrics as metrics\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e516871d":"df1 = pd.read_csv('\/kaggle\/input\/pizza-price-prediction\/pizza_v2.csv')","6829c473":"df1.head()","1597458b":"df1.info()","45b44694":"#Checking for null values\ndf1.isna().sum()","f54c2f25":"#Modification of datpoints for better usability\ndf1['price'] = df1['price_rupiah'].apply(lambda x : x.replace(\"Rp\",\"\").replace(\",\",\"\"))\ndf1['diameter'] = df1['diameter'].map(lambda x : x.replace(\" inch\",\"\"))\ndf1.drop(['price_rupiah'],axis=1,inplace=True)\ndf1.head()","87923fac":"#Converting data types of Price & Diameter to int and float respectively \ndf1[\"diameter\"] = df1[\"diameter\"].astype(float)\ndf1[\"price\"] = df1[\"price\"].astype(int)\ndf1.describe()","25d032c5":"print((\"Company: \\n\"),df1.company.value_counts(),(\"\\n\"))\nprint((\"Toppings: \\n\"),df1.topping.value_counts(),(\"\\n\"))\nprint((\"Variants: \\n\"),df1.variant.value_counts(),(\"\\n\"))\nprint((\"Size: \\n\"),df1['size'].value_counts())","66326dd5":"fig = px.pie(df1, names='company', title='Data Distribution based on Company')\nfig.show()","694b91c0":"df1.topping.value_counts().plot(kind='bar')","37110413":"df1.variant.value_counts().plot(kind='bar')","6427fb58":"px.pie(df1,names='size',title='Share of Size in Data available to us')","9c02142b":"en = LabelEncoder()","f1e9c858":"to_encode = ['company','topping','variant','size','extra_sauce','extra_cheese','extra_mushrooms']","5acf8e8c":"for val in to_encode:\n    df1[val] = en.fit_transform(df1[val])\ndf1.head()","140c080e":"sns.heatmap(df1.corr(),annot=True)\nplt.show()\n#we can see that there is high correlation btwn price & diameter","f4bcf929":"# creating train,test sets\nX = df1.drop(\"price\",axis = 1)\nY = df1[\"price\"]\nx_train, x_test, y_train, y_test = train_test_split(X,Y, test_size = 0.1, random_state =0) ","31bcb14e":"reg = LinearRegression()","d6aae18e":"#Training\nreg.fit(x_train,y_train)\ny_train_preds = reg.predict(x_train)\ntrain_r2 = metrics.r2_score(y_train, y_train_preds)\nprint(\"Training R2 score:\",train_r2)","98f8977d":"#Testing\ny_preds = reg.predict(x_test)\nr2 =  metrics.r2_score(y_test, y_preds)\nfig = px.scatter(x = y_test, y = y_preds,trendline='ols', title=\"Linear Regression Model\")\nprint(\"Test R2 score :\",r2)\nfig.show()","922b7148":"ran = RandomForestRegressor()","204e67ef":"ran.fit(x_train,y_train)\ny_train_preds = ran.predict(x_train)\ntrain_r2 = metrics.r2_score(y_train, y_train_preds)\nprint(\"Training R2 score:\",train_r2)","2c811b18":"y_preds = ran.predict(x_test)\nr2 =  metrics.r2_score(y_test, y_preds)\nfig = px.scatter(x = y_test, y = y_preds,trendline='ols', title=\"Random Forest Regressor Model\")\nprint(\"R2 score :\",r2)\nfig.show()","e1be60bf":"# Encoding Columns","7fb3c05d":"We can see that our Random Forest Regressor Model performed better than the linear regression model. \n\nIf you found this helpful, \ud83d\ude4c.","f9439e9d":"# Linear Regression","f2c6c57d":"# Importing Packages & Dataset","ff24a492":"# Understanding & Preprocessing Data","3b7eb06f":"### Pizza Lovers Welcome!!!\n![Pizzzaa](https:\/\/images.unsplash.com\/photo-1574126154517-d1e0d89ef734?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=667&q=80)","7f4795ae":"# Visualizing Columns","345e71ef":"# Conclusion","73f4f59d":"# Random Forest Regressor"}}