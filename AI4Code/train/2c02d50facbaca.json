{"cell_type":{"26ec75ec":"code","bcc3e2a1":"code","1586e19a":"code","44808b2f":"code","9e4fd5be":"code","4f1bef3a":"code","643b1d2a":"code","db6cf350":"code","1c6276f3":"code","ef2b199e":"code","cd2a73d5":"markdown","5b1fb4c3":"markdown","aa074d04":"markdown","f9b37730":"markdown","ff67ceef":"markdown"},"source":{"26ec75ec":"filename_train = '..\/input\/Kannada-MNIST\/train.csv'\nfilename_test  = '..\/input\/Kannada-MNIST\/test.csv'","bcc3e2a1":"import pandas as pd\n\ndf_train = pd.read_csv(filename_train)\ndf_test  = pd.read_csv(filename_test )","1586e19a":"import tensorflow as tf\n\n# training data\nX_train = df_train.values[:, 1:].reshape((-1, 28, 28, 1)) \/ 255.\ny_train = tf.keras.utils.to_categorical(df_train.values[:, 0], 10)\n# test data\nX_test = df_test.values[:, 1:].reshape((-1, 28, 28, 1)) \/ 255.","44808b2f":"input = tf.keras.layers.Input(shape=(28, 28, 1))\n\nx = input\nx = tf.keras.layers.Conv2D(32, 3, padding='same', activation='relu')(x)\nx = tf.keras.layers.MaxPool2D()(x)\nx = tf.keras.layers.Conv2D(64, 3, padding='same', activation='relu')(x)\nx = tf.keras.layers.MaxPool2D()(x)\nx = tf.keras.layers.Conv2D(64, 3, padding='same', activation='relu')(x)\nx = tf.keras.layers.MaxPool2D()(x)\nx = tf.keras.layers.Dropout(0.2)(x)\n\nx = tf.keras.layers.Flatten()(x)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\n\noutput = tf.keras.layers.Dense(10, activation='softmax')(x)\n\nmodel = tf.keras.models.Model(input, output)\nmodel.summary()","9e4fd5be":"model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['acc'])","4f1bef3a":"image_data_generator = tf.keras.preprocessing.image.ImageDataGenerator(\n    rotation_range=30,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    validation_split=0.1)\nimage_data_generator.fit(X_train)","643b1d2a":"epochs = 100\nbatch_size = 64\n\n# \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u5b9a\u7fa9\ncallbacks = [\n    tf.keras.callbacks.EarlyStopping(patience=5, restore_best_weights=True)\n]\n\ntrain_generator = image_data_generator.flow(X_train, y_train, batch_size=batch_size, subset='training')\nvalid_generator = image_data_generator.flow(X_train, y_train, batch_size=batch_size, subset='validation')\n\nhistory = model.fit(train_generator,\n                    steps_per_epoch=train_generator.n \/\/ batch_size, \n                    validation_data=valid_generator,\n                    validation_steps=valid_generator.n \/\/ batch_size,\n                    epochs=epochs,\n                    callbacks=callbacks)","db6cf350":"y_pred = model.predict(X_test).argmax(axis=-1)","1c6276f3":"import numpy as np\n\ny_pred = pd.DataFrame([np.arange(len(y_pred)), y_pred], index=['id', 'label']).T\ny_pred","ef2b199e":"filename_output = '.\/submission.csv'\ny_pred.to_csv(filename_output, index=False)","cd2a73d5":"# Learning","5b1fb4c3":"# Modeling","aa074d04":"# Reshape data","f9b37730":"# Load files","ff67ceef":"# Prediction"}}