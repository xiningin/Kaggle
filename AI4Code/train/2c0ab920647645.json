{"cell_type":{"13d2e379":"code","27d34418":"code","bc28e2f5":"code","45a121cf":"code","90ff0c4b":"code","3a4bebf4":"code","aa88f24e":"code","cd68f1ce":"code","6612f34e":"code","76dbee37":"code","13ebbe9f":"code","868c03c6":"code","e7672ac6":"code","4e4b1b31":"code","dc282dfd":"code","ba30902c":"code","65b81830":"code","a6c7f868":"code","306762ef":"code","eef0f10e":"code","fab0c6de":"code","b1b85902":"code","878a4276":"code","af4e4c30":"code","9628337f":"code","0db5d72b":"code","23c978bc":"code","eb672372":"code","a2f8be4f":"code","aeefcd2c":"code","8d0caf94":"code","2e5d16be":"code","4794a3fe":"code","8f350b8b":"code","ab4217ca":"code","11f3f5f9":"code","0413c68d":"markdown","28a43477":"markdown","d020139f":"markdown","00500a65":"markdown","2abf9652":"markdown","2ee55880":"markdown","53f4ba2b":"markdown","126aa2e1":"markdown","15530953":"markdown","6906ca20":"markdown","32f8003c":"markdown","85a70b5b":"markdown","9e379eeb":"markdown","874d5488":"markdown","28e09be4":"markdown","ca7203ae":"markdown","27584583":"markdown","2bed223f":"markdown","f477f55a":"markdown","c2ee3049":"markdown","668a1ae7":"markdown","0b716759":"markdown","a393c85e":"markdown","66b3f839":"markdown","0c639204":"markdown"},"source":{"13d2e379":"#importing libraries\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly_express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\nfrom plotly.offline import plot, iplot,init_notebook_mode","27d34418":"data = pd.read_csv('..\/input\/productivity-prediction-of-garment-employees\/garments_worker_productivity.csv')\ndata.head()","bc28e2f5":"df = data.copy()","45a121cf":"df.shape","90ff0c4b":"df.info()","3a4bebf4":"df.isna().sum()","aa88f24e":"df['date'] = pd.to_datetime(df['date'])\ndf['month_name'] = df['date'].dt.month_name() #create month name","cd68f1ce":"df['overtime_in_hours'] = df['over_time'].apply(lambda x: x\/60) #create a new feature which has overtime measured in hours","6612f34e":"df['quarter'].value_counts()","76dbee37":"df['department'].value_counts().index.to_list() #We can see there is an extra space, which led to 3 categories, we'll fix it and also fix the spelling of sewing","13ebbe9f":"df['department'] = df['department'].apply(lambda x: 'finishing' if x == ('finishing ' or 'finishing' ) else 'sewing' )","868c03c6":"df['department'].value_counts().index.to_list()","e7672ac6":"df['day'].value_counts() #Friday is not a working day","4e4b1b31":"dept = df.department.value_counts().reset_index()\ndept.rename(columns = {'index':'department', 'department':'total_num'},inplace=True)\ndept","dc282dfd":"fig = go.Figure(data=[go.Pie(labels=dept.department.to_list(),\n                             values=dept.total_num.to_list())])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=['green', 'yellow'], line=dict(color='#000000', width=2)))\nfig.show()","ba30902c":"qdf = df['quarter'].value_counts().reset_index()\nqdf.rename(columns={'index': 'quarters', 'quarter': 'days_in_each_quarter'}, inplace=True)\nfig = go.Figure(data=[go.Pie(labels=qdf.quarters.to_list(), values=qdf.days_in_each_quarter.to_list(), pull=[0, 0, 0, 0, 0.4], hole=.3)])\nfig.show()","65b81830":"fig = px.histogram(df, x=\"targeted_productivity\", nbins=20, template='plotly_dark')\nfig.update_layout(title='Distribution of Targeted productivity', title_x=0.5)\nfig.show()","a6c7f868":"fig = px.violin(df, y=\"actual_productivity\", box=True, points='all')\nfig.update_layout(title='Distribution of actual_productivity', title_x=0.5)\nfig.show()","306762ef":"fig = px.histogram(df, x=\"smv\", \n                   marginal=\"violin\", template='ggplot2' # or violin, rug\n                  )\nfig.update_layout(title='Distribution of smv(standard minute value)', title_x=0.5)\n\nfig.show()","eef0f10e":"fig = make_subplots(rows=1, cols=2)\ny1= df['no_of_workers']\ny2=df['incentive']\nx=df['month_name']\n\nfig.add_trace(go.Bar( x=x,y=y1), row=1, col=1)\nfig.add_trace(go.Bar(x=x, y=y2), row=1, col=2)\n\nfig.update_layout(title='Plots of number of workers and incentive paid in each month', title_x=0.5)\n\nfig.show()","fab0c6de":"fig = px.scatter(df, x=\"date\", y=\"idle_time\",color=\"team\", template=\"plotly_dark\")\nfig.update_layout(title='Idle time spent by Teams', title_x=0.5)\nfig.show()","b1b85902":"fig = px.scatter(df, y=\"idle_men\", x=\"date\", color=\"idle_men\", facet_col=\"team\", \n                 title=\"Number of Idle_men in Teams\", template=\"plotly_dark\")\nfig.update_layout(title='Count of Idle men in Teams', title_x=0.5)\nfig.update_xaxes(showgrid=False)\n\nfig.show()","878a4276":"fig = px.violin(df, y=\"actual_productivity\", box=True, points='all', color='department')\nfig.show()","af4e4c30":"fig = px.scatter(df, y=\"actual_productivity\",x=\"targeted_productivity\", color='department'\n             )\nfig.update_layout(title_text='Actual vs Targeted Productivity',title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"rosybrown\"\n    ))\n\nfig.show()","9628337f":"fig = px.bar(df, x=\"department\", y=\"actual_productivity\", barmode=\"group\", color=\"department\",\n             facet_col=\"quarter\")\nfig.update_layout(title_text='Productivity of departments in each quarter',title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"maroon\"\n    ))\n\nfig.show()","0db5d72b":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    y=df['month_name'].to_list(),\n    x=df['no_of_workers'].to_list(),\n    name='Sewing',\n    orientation='h',\n    marker=dict(\n        color='rgba(246, 78, 139, 0.6)',\n        line=dict(color='rgba(246, 78, 139, 1.0)', width=3)\n    )\n))\nfig.add_trace(go.Bar(\n    y=df['month_name'].to_list(),\n    x=df['no_of_workers'].to_list(),\n    name='Finishing',\n    orientation='h',\n    marker=dict(\n        color='rgba(58, 71, 80, 0.6)',\n        line=dict(color='rgba(58, 71, 80, 1.0)', width=3)\n    )\n))\n\nfig.update_layout(barmode='stack')\nfig.show()","23c978bc":"daydf = df[['day', 'actual_productivity']].groupby('day').mean()\ndaydf = daydf.sort_values('actual_productivity', ascending=False).reset_index()\nfig = px.bar(daydf, x='day', y='actual_productivity',\n             hover_data=['day', 'actual_productivity'], color='actual_productivity',\n             labels={'actual_productivity':'Productivity'}, height=500)\nfig.show()","eb672372":"teamdf = df[['team', 'actual_productivity']].groupby('team').mean()\nteamdf = teamdf.sort_values('actual_productivity', ascending=False).reset_index()\nteamdf\nfig = px.bar(teamdf, x=\"team\", y=\"actual_productivity\", color='actual_productivity')\nfig.update_layout(title_text='Productivity by Teams',title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"green\"\n    ))\nfig.show()","a2f8be4f":"fig = px.bar(df, x=\"team\", y=\"no_of_workers\", barmode=\"group\", color='department'\n             )\nfig.update_layout(title_text='Team size',title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"red\"\n    ))\n\nfig.show()  ","aeefcd2c":"idf = df[['team', 'incentive']].groupby('team').mean().sort_values('incentive',ascending=False).reset_index()\nfig = px.bar(idf, x=\"team\", y=\"incentive\", barmode=\"group\"\n             )\nfig.update_layout(title_text='Incentive paid to each team',title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"green\"\n    ))\n\nfig.show()  ","8d0caf94":"fig = px.box(df, x=\"team\", y=\"incentive\")\nfig.update_layout(title_text='Incentive paid to each team - boxplot',title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=10,\n        color=\"red\"\n    ))\nfig.show()","2e5d16be":"fig = px.box(df, x=\"department\", y=\"incentive\")\nfig.show()","4794a3fe":"fig = px.box(df, x=\"department\", y=\"overtime_in_hours\")\n\nfig.update_layout(title_text='Overtime spent(in hours) vs Departments',xaxis_title = 'Department',yaxis_title='Overtime in minutes', title_x=0.5,font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"mediumvioletred\"\n    ))\n\nfig.show()","8f350b8b":"fig = px.box(df, x=\"department\", y=\"wip\")\nfig.show()","ab4217ca":"fig = px.box(df, x=\"team\", y=\"wip\")\nfig.show()","11f3f5f9":"fig = px.box(df, x=\"quarter\", y=\"wip\")\nfig.show()","0413c68d":"# Work in progress in departments, teams, quarters","28a43477":"# Team 1 is the most productive followed by Team 3","d020139f":"# Incentives paid to different teams","00500a65":"**Surprisingly Saturday is the most productive with an average of 0.75, maybe because Friday is holiday which makes sense, after a break your productivity is more**","2abf9652":"# Over-time vs Teams, department","2ee55880":"**Team 9 gets the highest incentive on avg, let us check the box plots to see if any outliers exist**","53f4ba2b":"# Data Cleaning - Feature engineering","126aa2e1":"# Data Description\n1. The dataset contains 1197 rows and 15 columns\n \nAttribute Information:\n\n1. date : Date in MM-DD-YYYY\n2. day : Day of the Week\n3. quarter : A portion of the month. A month was divided into four quarters\n4. department : Associated department with the instance\n5. teamno : Associated team number with the instance\n6. noofworkers : Number of workers in each team \n7. noofstylechange : Number of changes in the style of a particular product\n8. targetedproductivity : Targeted productivity set by the Authority for each team for each day.\n9. smv : Standard Minute Value, it is the allocated time for a task \n10. wip : Work in progress. Includes the number of unfinished items for products \n11. overtime : Represents the amount of overtime by each team in minutes\n12. incentive : Represents the amount of financial incentive (in BDT) that enables or motivates a particular course of action.\n13. idletime : The amount of time when the production was interrupted due to several reasons \n14. idlemen : The number of workers who were idle due to production interruption\n15. actual_productivity : The actual % of productivity that was delivered by the workers. It ranges from 0-1.\n\nDate,quarter, department and day are object datatypes and rest are int or float types","15530953":"# Productivity in each month","6906ca20":"**the median value of financing department working overtime is 1 day , it is not paid incentive, while sewing department works 4 days as overtime**","32f8003c":"# Team 8 and 7 spent most idle time","85a70b5b":"# Although less number of people worked in March, high incentive was paid, which means they are working overtime.","9e379eeb":"# Bivariate Analysis","874d5488":"**A violin plot is a method of plotting numeric data. It is similar to a box plot, with the addition of a rotated kernel density plot on each side**","28e09be4":"**Because of the outlier, team 9 avg incentive value is very high****","ca7203ae":"## Work in progress in teams","27584583":"# Only sewing department gets incentive","2bed223f":"**Notebook is under construction .. Do Appreciate if you find it useful and checkout this dataset to create visualisations and submitting tasks**\n**Thank you**","f477f55a":"# Actual productivity w.r.t departments","c2ee3049":"# Univariate analysis of categorical variables","668a1ae7":"# Number of workers in each Team","0b716759":"# Univariate analysis of continuous variables","a393c85e":"**Histogram is representation of the distribution of numerical data**","66b3f839":"Both departments are exceeding targets","0c639204":"# Work in progress in teams"}}