{"cell_type":{"cbef7381":"code","050568d1":"code","91295ce8":"code","922465f4":"code","7bafaf3a":"code","7c019efc":"code","221aa284":"code","1282685c":"markdown"},"source":{"cbef7381":"#\u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a:\nimport csv as csv\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nfrom calendar import monthrange\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report","050568d1":"#\u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445:\ncustomers = pd.read_csv('..\/input\/mlhse\/CASC_Constant.csv')\norders = pd.read_csv('..\/input\/mlhse\/casc-resto.csv', sep=';', dtype = {\n    'CustomerID': 'int64',\n    'Restaurant': 'int64',\n    'Quantity': 'int64',\n    'SummBasic': 'float64',\n    'SummAfterPointsUsage': 'float64'\n}, parse_dates=['RKDate'], header=0, decimal=\",\")\ncustomers.rename(columns={'CustomerId': 'CustomerID'}, inplace=True)","91295ce8":"#Visited - \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u0440\u0438\u0448\u0451\u043b \u0445\u043e\u0442\u044f \u0431\u044b \u0440\u0430\u0437 \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434 START_DATE - END_DATE?\nSTART_DATE = np.datetime64('2017-07-01')\nEND_DATE = np.datetime64('2017-12-31')\nvisited = orders.groupby('CustomerID').agg(\n    Visited=('RKDate', lambda x: x.where((START_DATE <= x) & (x <= END_DATE)).count() > 0)\n)","922465f4":"#\u0420\u0430\u0441\u0447\u0451\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e \u043f\u043e\u043a\u0443\u043f\u043a\u0430\u043c, \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u043c \u0434\u043e START_DATE (\u0434\u043b\u044f \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f):\nprevOrders = orders.where(orders.RKDate < START_DATE)\ncustomerStats = prevOrders.groupby('CustomerID').agg(\n    Recency=('RKDate', lambda x: START_DATE - x.max()),\n    Frequency=('RKDate', lambda x: x.groupby([x.dt.month]).agg('count').mean()\/30), #\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u0430 \u0434\u0435\u043d\u044c\n    MonetaryValue=('SummBasic', 'mean')\n)","7bafaf3a":"#\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0432\u0441\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0432 \u043e\u0434\u043d\u0443 \u0442\u0430\u0431\u043b\u0438\u0446\u0443:\ncustomerStats = customerStats.merge(customers, on='CustomerID').merge(visited, on='CustomerID').dropna()\n\n#\u041f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u0432 \u043c\u043e\u0434\u0435\u043b\u044f\u0445:\ncustomerStats['Visited'] = customerStats['Visited'].astype(int)\ncustomerStats['Recency'] = customerStats['Recency'].dt.days\ncustomerStats['Age'] = customerStats['Age'].astype(int)\ncustomerStats['Sex'] = (customerStats['Sex'] == 'Female').astype(int)\n#\u0414\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438:\ncustomerStats['SubscribedEmail'] = customerStats['SubscribedEmail'].astype(int)\ncustomerStats['SubscribedPush'] = customerStats['SubscribedPush'].astype(int)","7c019efc":"#\u0414\u0430\u043d\u043d\u044b\u0435 \u0431\u0435\u0437 \u0434\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a:\ny = customerStats[['Visited']].values.ravel()\nx = customerStats[['Age', 'Sex', 'Recency', 'Frequency', 'MonetaryValue']]\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2)\n\n#\u0414\u0430\u043d\u043d\u044b\u0435 \u0441 \u0434\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438:\ny_alt = customerStats[['Visited']].values.ravel()\nx_alt = customerStats[['Age', 'Sex', 'Recency', 'Frequency', 'MonetaryValue', 'SubscribedEmail', 'SubscribedPush']]\nX_train_alt, X_test_alt, y_train_alt, y_test_alt = train_test_split(x_alt, y_alt, test_size=0.2)","221aa284":"#\u041c\u043e\u0434\u0435\u043b\u044c \u0431\u0435\u0437 \u0434\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a:\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\nscoreTrain = logreg.score(X_train, y_train)\nscoreTest = logreg.score(X_test, y_test)\ny_pred = logreg.predict(X_test)\nprint('\u0414\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a:')\nprint(f\"Score train: {scoreTrain*100:.2f}%\\nScore test: {scoreTest*100:.2f}% \\n\")\n\n#\u041c\u043e\u0434\u0435\u043b\u044c \u0441 \u0434\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438:\nlogreg_alt = LogisticRegression()\nlogreg.fit(X_train_alt, y_train_alt)\nscoreTrain_alt = logreg.score(X_train_alt, y_train_alt)\nscoreTest_alt = logreg.score(X_test_alt, y_test_alt)\nprint('\u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043f. \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a:')\nprint(f\"Score train: {scoreTrain_alt*100:.2f}%\\nScore test: {scoreTest_alt*100:.2f}%\\n\")\nprint(f\"\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e: {(scoreTest_alt - scoreTest)*100:.2f}%\")\n\nprint(classification_report(y_test, y_pred))","1282685c":"### \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 1 (\u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \"\u0432\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\")\n1. \u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 CSV. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u043c\u0435\u0436\u0434\u0443 \u044f\u0447\u0435\u0439\u043a\u0430\u043c\u0438 \u0438 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c.\n2. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e:\n    - \u0417\u0430\u0444\u0438\u043a\u0438\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u0442\u0443 2017-07-01 \u043a\u0430\u043a \u0434\u0430\u0442\u0443, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432.\n    - \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u043b \u043b\u0438 \u043e\u043d \u0432\u0438\u0437\u0438\u0442 \u0432 \u043f\u0435\u0440\u0438\u043e\u0434 \u043c\u0435\u0436\u0434\u0443 2017-07-01 \u0438 2017-12-31 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0444\u043b\u0430\u0433 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 Y, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c.\n    - \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c Recency (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0438\u0437\u0438\u0442\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u043e\u0439 2017-07-01).\n    - \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c Frequency (\u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u043f\u043e\u0445\u043e\u0434\u043e\u0432 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u0434\u0430\u0442\u0443 2017-07-01, \u0438\u0437\u043c\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0438\u0437\u0438\u0442\u043e\u0432 \u0432 \u043c\u0435\u0441\u044f\u0446 \u0437\u0430 \u0432\u0440\u0435\u043c\u044f \u043c\u0435\u0436\u0434\u0443 2017-07-01 \u0438 \u043f\u0435\u0440\u0432\u044b\u043c \u0432\u0438\u0437\u0438\u0442\u043e\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\n    - \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c Monetary Value (\u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0447\u0435\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u043e\u043a\u0443\u043f\u043a\u0430\u043c \u0434\u043e 2017-07-01).\n\n> \u0412\u0441\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u00abpandas.DataFrame.groupby\u00bb, \u0446\u0438\u043a\u043b\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c.\n\n4. \u041f\u0440\u0438\u0434\u0443\u043c\u0430\u0442\u044c \u0438 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0441\u0432\u043e\u044e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0433\u043b\u0430 \u0431\u044b \u043f\u043e\u043c\u043e\u0447\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e Y. \u041f\u043e\u044f\u0441\u043d\u0438\u0442\u044c, \u043f\u043e\u0447\u0435\u043c\u0443 \u0432\u044b\u0431\u0440\u0430\u043d\u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u044d\u0442\u0430 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430.\n5. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043a \u0443\u0436\u0435 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u043c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u0440\u0438\u0442\u044f\u043d\u0443\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u043e\u043b\u0443 \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\n6. \u0420\u0430\u0437\u0431\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u043d\u0430 \u0434\u0432\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u0432 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 80:20. \u0411\u043e\u043b\u044c\u0448\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 \u2014 \u044d\u0442\u043e \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430, \u0430 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 \u044d\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430.\n7. \u041e\u0431\u0443\u0447\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438 \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\n8. \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0445\u043e\u0434\u0430 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\n9. \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u0435\u0442\u0440\u0438\u043a\u0438 Precision \u0438 Recall \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0438 \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 Y."}}