{"cell_type":{"4c2b3d58":"code","386a2084":"code","94d80b05":"code","e7f20b41":"code","68db20c6":"code","db1f09ce":"code","dea9e16e":"code","6e9fa6f5":"code","88a19c10":"code","2f7f0778":"code","dd6cc527":"code","a79201ab":"code","ce3dc0b0":"code","be48f595":"markdown","36b1bfdf":"markdown","33bcc52c":"markdown","70ce6baf":"markdown","b05d65ef":"markdown","77e64f8a":"markdown","acca09e3":"markdown"},"source":{"4c2b3d58":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","386a2084":"import pandas as pd # data processing\nimport numpy as np # linear algebra\nfrom sklearn.metrics import confusion_matrix, recall_score, accuracy_score, roc_curve, precision_score, roc_auc_score, f1_score\nfrom sklearn.preprocessing import LabelEncoder","94d80b05":"# reading the data into the dataframe\ndata = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")","e7f20b41":"data.shape","68db20c6":"data.head(10)","db1f09ce":"data.describe()","dea9e16e":"data.info()","6e9fa6f5":"data.isna().sum()","88a19c10":"X = data.drop([\"class\"], axis=1)\ny = data[\"class\"]\nX = pd.get_dummies(X)\n\nle = LabelEncoder()\ny = le.fit_transform(y)","2f7f0778":"from sklearn.model_selection import train_test_split\n\n# Splitting test train set, with 20% of the data as the validation set \n\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2)","dd6cc527":"from catboost import CatBoostClassifier","a79201ab":"clf = CatBoostClassifier(\n    iterations=20, \n    learning_rate=0.2, \n    # Cat boost Classifier is a boosting based appraoch and can work with categorical variables\n    \n)\nclf.fit(X_train, y_train,  plot=True)\n\n\npredicted = clf.predict(X_test)\n\npredicted_proba = clf.predict(X_test)\n\nprint(\"Accuracy is: \"+ str(clf.score(X_test,y_test)))\nprint(\"Recall score is: \" + str(round(recall_score(y_test, predicted),3)))\nprint(\"Precision score is: \" + str(round(precision_score(y_test, predicted),3)))\nprint(\"F1 score is: \" + str(round(f1_score(y_test, predicted),3)))\nprint(\"\\nConfusion matrix:\")\nprint(confusion_matrix(y_test, predicted))","ce3dc0b0":"clf.plot_tree(tree_idx=0)","be48f595":"\n# Importing all the libraries","36b1bfdf":"# Data processing","33bcc52c":"\n\nLet's see how many mushrooms we know about, and what do we know about them:\n","70ce6baf":"# Now let's make our train and test datasets","b05d65ef":"\n\n# Preview the dataset","77e64f8a":"# CatBoost implementation ","acca09e3":"#  Importing the dataset"}}