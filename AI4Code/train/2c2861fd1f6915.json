{"cell_type":{"6971d506":"code","cdfe0439":"code","e3e4d5d5":"code","bf0cdd5f":"code","d78f9582":"code","fde5b3f5":"markdown","4cc4d3d7":"markdown","d8af1283":"markdown","62486427":"markdown","eb6017c9":"markdown","9ae3eed2":"markdown"},"source":{"6971d506":"import pandas as pd\nimport numpy as np\n\nraw = pd.read_csv('..\/input\/6000-indian-food-recipes-dataset\/IndianFoodDatasetCSV.csv')\ndf = raw.copy()\n\ncolumns_to_drop = ['RecipeName', 'Ingredients', 'URL', 'PrepTimeInMins' , 'CookTimeInMins',\n                   'TotalTimeInMins','TranslatedInstructions', 'Instructions', 'Servings', 'Srno']\n\ndf = df.drop(columns = columns_to_drop).dropna()\n\n# data seems to contain more than just indian cuisines, so I drop these\ncuisines_to_drop = ['Mexican', 'Italian Recipes', 'Thai', 'Chinese', 'Asian', 'Middle Eastern', 'European',\n                   'Arab', 'Japanese', 'Vietnamese', 'British', 'Greek', 'French', 'Mediterranean', 'Sri Lankan',\n                   'Indonesian', 'African', 'Korean', 'American', 'Carribbean', 'World Breakfast', 'Malaysian', 'Dessert',\n                   'Afghan', 'Snack', 'Jewish', 'Brunch', 'Lunch', 'Continental', 'Fusion']\n\n# need to drop desserts and breakfasts, as these are much less likely to contain spices\ncourses_to_drop = ['South Indian Breakfast', 'Snack', 'Appetizer', 'Indian Breakfast', 'Dessert', 'North Indian Breakfast',\n                  'World Breakfast', 'Brunch', 'Side Dish']\n\ndf = df[~df['Cuisine'].isin(cuisines_to_drop)]\ndf = df[~df['Course'].isin(courses_to_drop)]\ndf.shape","cdfe0439":"#dataset contains hindi even in \"translated\" columns, dropping these for convenience sake\ndf = df['TranslatedIngredients']\n\ndef isEnglish(s):\n    try:\n        s.encode(encoding='utf-8').decode('ascii')\n    except UnicodeDecodeError:\n        return False\n    else:\n        return True\n\n#create boolean mask\nmask = df.apply(isEnglish)\ndf = df[mask].dropna()\n\ndf.shape #I see we dropped about 350 entries.","e3e4d5d5":"#I am interested in only the recipe ingredients\nrecipes = df\n\n#read file of all indian spices on wikipedia\nraw = pd.read_csv('..\/input\/spices\/spices.csv')\nspices = raw['Standard English'].copy().str.lower()\n\n#some important spices I also added from experience\/my own cookbook\nspices_to_add = pd.Series(['black mustard seed\/raee', 'black salt', 'cumin powder', 'coriander leaves'])\n\n#some spices are too common (such as pepper) or not a spice, but a vegetable, or are otherwise corrupted (for example,\n#cardamom is often listed as \"cardamom\" nto specifying whether it is black or green)\nspices_to_drop = ['black pepper', 'peppercorns', 'capers', 'chili pepper powder', 'cinnamon buds', 'garlic',\n                  'cumin seed ground into balls', 'dried ginger', 'green chili pepper', 'indian bedellium tree',\n                 'indian gooseberry', 'mango extract', 'saffron pulp', 'black cumin']\n\nspices = spices[~spices.isin(spices_to_drop)].append(spices_to_add)\n\n#editing the spices so that my string counter can find different versions of the same spice\nspices = spices.str.replace('amchoor', 'amchur\/amchoor') \\\n                    .replace('asafoetida', 'asafetida\/asafoetida') \\\n                    .replace('alkanet root', 'alkanet\/alkanet root') \\\n                    .replace('capsicum', 'CHILIPLACEHOLD') \\\n                    .replace('celery \/ radhuni seed', 'celery\/radhuni seed') \\\n                    .replace('bay leaf, indian bay leaf', 'bay leaf\/bay leaves') \\\n                    .replace('curry tree or sweet neem leaf', 'curry leaf\/curry leaves') \\\n                    .replace('fenugreek leaf', 'fenugreek leaf\/fenugreek leaves\/kasoori methi') \\\n                    .replace('nigella seed', 'nigella seed\/black cumin') \\\n                    .replace('thymol\/carom seed', 'fenuthymol\/carom seed') \\\n                    .replace('ginger', 'ginger\/dried ginger\/ginger powder') \\\n                    .replace('black cardamom', 'blackcardamom') \\\n                    .replace('cloves', 'laung') \\\n                    .replace('green cardamom', 'cardamom') \n\n","bf0cdd5f":"# do the same as above except output is a list, not a dict\n\n# iterate over each recipe and split into individual ingredients\n\nwords = []\nfor recipe in recipes:\n    w = recipe.split(',')\n    words.append(w)\n\n# iterate over each sublist in list of ingredients and create one list (series), set to lowercase, strip whitespace\n    \ning = [item for sublist in words for item in sublist]\ning = pd.Series(ing).str.strip()\ning = ing.str.lower()\n\nlist_of_spices = []\nfor row in ing:\n    row = row.replace('red chili powder', 'CHILIPLACEHOLD').replace('red chilli powder','CHILIPLACEHOLD') \\\n            .replace('chilli flakes', 'CHILIPLACEHOLD').replace('chili flakes', 'CHILIPLACEHOLD') \\\n            .replace('red chilli','').replace('red chili', '') \\\n            .replace('green chilli', '').replace('green chili', '')\n    row = row.replace('black cardamom', 'blackcardamom')\n    row = row.replace('coriander (dhania) seeds', 'coriander seed')\n    row = row.replace('coriander (dhania) leaves', 'coriander leaves').replace('coriander -', 'coriander leaves')\n    row = row.replace('ginger garlic paste', '')\n    for k in spices:\n        k_new = k.split('\/')\n        for split in k_new:\n            if split in row:\n                k = k.capitalize()\n                list_of_spices.append(k)\nlist_of_spices = pd.Series(list_of_spices)\n\n# change back the spices for better readability and to include indian names where applicable\n\nlist_of_spices = list_of_spices.str.replace('Amchur\/amchoor','Amchur (dried mango powder)') \\\n                                   .replace('Bay leaf\/bay leaves','Bay leaves') \\\n                                    .replace('Chiliplacehold', 'Red chilli powder') \\\n                                    .replace('Asafetida\/asafoetida','Asafetida (hing)') \\\n                                    .replace('Curry leaf\/curry leaves','Curry leaves') \\\n                                    .replace('Fenuthymol\/carom seed', 'Carom seed (ajwain)') \\\n                                    .replace('Fenugreek leaf\/fenugreek leaves\/kasoori methi','Fenugreek leaves (kasoori methi)') \\\n                                    .replace('Curry leaf\/curry leaves','Curry leaves') \\\n                                    .replace('Cumin seed','Cumin seed (jeera)') \\\n                                    .replace('Black salt\/kala namak','Black salt (kala namak)') \\\n                                    .replace('Nigella seed\/black cumin','Nigella seed (black cumin)') \\\n                                    .replace('Celery\/radhuni seed','Celery seed (radhuni)') \\\n                                    .replace('Ginger\/dried ginger\/ginger powder','Ginger') \\\n                                    .replace('Blackcardamom','Black cardamom') \\\n                                    .replace('Cardamom','Green cardamom') \\\n                                    .replace('Laung','Cloves (laung)') \\\n                                    .replace('Ginger','Ginger (paste or root)') \\\n                                    .replace('Turmeric','Turmeric (haldi)') \n\n# count occurences of each spice\nlist_of_spices = pd.Series(list_of_spices).value_counts()\n\n# exclude spices that are in less than 20 recipes out of all 5200\nlist_of_spices = list_of_spices[list_of_spices.values > 20]\n\n# calculate a percentage of in how many recipes is each spice included\nlist_of_spices = pd.DataFrame(list_of_spices)\nlist_of_spices.columns = ['freq']\nlist_of_spices['perc'] = list_of_spices.apply(lambda x: round((x\/len(recipes)),2))\n\n#view\nlist_of_spices","d78f9582":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.ticker import FuncFormatter\n\n#create fig, axes\nfig, ax = plt.subplots(figsize=(28, 28))\n\n#create barplot\nsns.barplot(y=list_of_spices.index, x=list_of_spices['perc'], \n            data = list_of_spices, orientation = 'horizontal',  palette=\"Reds_r\")\nplt.xticks(fontsize = 35);\nplt.yticks(fontsize = 35);\nsns.despine()\n\n# titles, labels\nax.set_title('Most frequently used spices in Indian cuisine', fontsize = 80, pad = 100);\nax.text(x=0.5, y=1.025, s=\"Sample consists of ~2000 indian recipes from the website 'Archana's kitchen'\", \n        fontsize=40, alpha=0.75, ha='center', va='bottom', transform=ax.transAxes);\nax.set_xlabel('Percentage of recipes containing each spice', fontsize = 35, labelpad = 20);\nax.set_xticks(np.linspace(0,1,11), minor = False)\n\n# set x axis to percentages\nax.xaxis.set_major_formatter(FuncFormatter(lambda x, _: '{:.0%}'.format(x))) \n\n# create grid for better readability\nax.grid(axis = 'x', linestyle = ':', linewidth = 3)\n\nplt.show()","fde5b3f5":"Now, I need to iterate over my list of spices and my list of ingredients and find the counts of each spice in the whole dataset.","4cc4d3d7":"Next, let's remove all columns that were not properly translated from Hindi and only keep the ingredient lists that are in English.","d8af1283":"# Plotting\n \nNow our data is ready to be plotted!","62486427":"# Goal\n\nI want to find the most often used spices in Indian cuisine, to help novices to indian cuisine effectively buy the spices that are most often used and not spend money on \"niche\" spices that shall be bought later. \n\nIdeally, my analysis will give you the most \"bang for your buck\" spices.","eb6017c9":"# Cleaning the data\n\nLet's clean the data first - we need to drop columns not needed for my goal and drop the cuisines that are not strictly indian.\n\nThen, let's look at how many recipes we have left.\n","9ae3eed2":"We can see that we dropped around 350 recipes.\n\nNext, we import a list of indian spices from [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_spices) and clean it. **Unfortunately, read_html does not work in this notebook, so I imported it in Jupyter and created a csv which I then uploaded to Kaggle**\n\nSome spices need to be deleted as they're not strictly considered spices (such as capers, chilli pepper) and some need to be deleted due to anomalities in the dataset (such as, cardamom is often referred to as \"cardamom\", not specifying the color).\n\nFurthermore, often spices have several names (such as amchoor\/amchur, jeera\/cumin etc.). Therefore, I created a string of all possible names divided by slash."}}