{"cell_type":{"31632e68":"code","b2d4e9a4":"code","1e8a567e":"code","fc12ad3e":"code","985ce6de":"code","5b01fe5c":"code","da37234c":"code","5936c969":"code","d797fd67":"code","d691f898":"code","f6a6f792":"code","06cdf54b":"code","90546bbb":"code","46c257b7":"code","cd3f3743":"code","8f6952e9":"code","ba3bdfae":"code","17ed5355":"code","ca2d6a30":"code","5ec69a1a":"code","77df4a6e":"code","db85899c":"markdown","6980ff3e":"markdown","ef8013cf":"markdown","5b0478bd":"markdown","da9f13ab":"markdown","54bc4a93":"markdown","52755948":"markdown","57b0b5e7":"markdown","2987d1af":"markdown","b05784bc":"markdown"},"source":{"31632e68":"import pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt\nimport seaborn as sns\n\nplt.style.use('ggplot')\nplt.rcParams['figure.figsize'] = [12, 8]\npd.set_option('display.max_columns', None)","b2d4e9a4":"!ls ..\/input\/autism-prediction\/Autism-prediction","1e8a567e":"train = pd.read_csv('..\/input\/autism-prediction\/Autism-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/autism-prediction\/Autism-prediction\/test.csv')\ntrain","fc12ad3e":"train.info()","985ce6de":"train['Class\/ASD'].value_counts()","5b01fe5c":"train['Class\/ASD'].value_counts(normalize=True)","da37234c":"score_features = train.filter(regex='A[0-9]_', axis=1).columns.tolist()\ntrain.groupby('Class\/ASD')[score_features].mean().T.plot.bar()\nplt.title('Mean score based on Autism Spectrum Quotient (AQ) 10 item screening tool')\nplt.xticks(ticks=range(len(score_features)), labels=[x.split('_')[0] for x in score_features], rotation=0);","5936c969":"train.groupby('A1_Score')['Class\/ASD'].mean()","d797fd67":"sns.kdeplot(x='age', data=train[train['Class\/ASD'] == 0], shade=True, label='No autism')\nsns.kdeplot(x='age', data=train[train['Class\/ASD'] == 1], shade=True, label='Autism')\nplt.title('Age of the patient in years')\nplt.legend();","d691f898":"sns.kdeplot(x='result', data=train[train['Class\/ASD'] == 0], shade=True, label='No autism')\nsns.kdeplot(x='result', data=train[train['Class\/ASD'] == 1], shade=True, label='Autism')\nplt.title('Score for AQ1-10 screening test')\nplt.legend();","f6a6f792":"train.groupby('ethnicity')['Class\/ASD'].mean().sort_values().plot.bar()\nplt.title('Ethnicity of the patient')\nplt.xticks(rotation=30);","06cdf54b":"train.groupby('austim')['Class\/ASD'].mean().sort_values().plot.bar()\nplt.title('Whether an immediate family member has been diagnosed with autism')\nplt.xticks(rotation=0);","90546bbb":"train.groupby('relation')['Class\/ASD'].mean().sort_values().plot.bar()\nplt.title('Relation of patient who completed the test')\nplt.xticks(rotation=0);","46c257b7":"train.groupby('jaundice')['Class\/ASD'].mean().sort_values().plot.bar()\nplt.title('Whether the patient had jaundice at the time of birth')\nplt.xticks(rotation=0);","cd3f3743":"from sklearn.model_selection import StratifiedKFold\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","8f6952e9":"# encode binary\nbinary_map = {'no': 0, 'yes': 1}\ntrain['jaundice'] = train['jaundice'].map(binary_map)\ntrain['austim'] = train['austim'].map(binary_map)\ntest['jaundice'] = test['jaundice'].map(binary_map)\ntest['austim'] = test['austim'].map(binary_map)","ba3bdfae":"features = [\n    *score_features,\n    'age',\n    'jaundice',\n    'austim',\n    'result'\n]\n\naucs = []\ndf_sub = test[['ID']].copy()\n\nn_splits = 5\nkf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\nfor fold, (tr, val) in enumerate(kf.split(train[features], train['Class\/ASD'])):\n    print('FOLD:', fold)\n    \n    # split\n    X_train = train.loc[tr, features]\n    y_train = train.loc[tr, 'Class\/ASD']\n    X_val = train.loc[val, features]\n    y_val = train.loc[val, 'Class\/ASD']\n    X_test = test[features]\n    \n    # fit\n    model = LogisticRegression(\n        random_state=1\n    )\n    model.fit(X_train, y_train)\n    \n    # predict\n    preds = model.predict(X_val)\n    probs = model.predict_proba(X_val)[:, 1]\n    \n    # predict on test set\n    df_sub[f'fold_{fold}'] = model.predict_proba(X_test)[:, 1]\n    \n    # metrics\n    report = metrics.classification_report(y_val, preds)\n    auc = metrics.roc_auc_score(y_val, probs)\n    aucs.append(auc)\n    print(report)\n    print('AUC:', auc)\n    print()\n    \nprint('-' * 30)\nprint('Mean:', np.mean(aucs))\nprint('Std:', np.std(aucs))","17ed5355":"df_sub['Class\/ASD'] = df_sub.filter(regex='fold_', axis=1).mean(axis=1)\ndf_sub","ca2d6a30":"train['Class\/ASD'].plot.hist(density=True, alpha=0.5, label='Train')\ndf_sub['Class\/ASD'].plot.hist(density=True, alpha=0.5, label='Predictions')\nplt.legend()\nplt.ylabel('Density');","5ec69a1a":"df_sub[['ID', 'Class\/ASD']].to_csv('submission.csv', index=False)","77df4a6e":"!head submission.csv","db85899c":"The difference appears when the age becomes larger.      ","6980ff3e":"## Checking submission","ef8013cf":"Seems that patients with higher scores are more likely to have autism.    ","5b0478bd":"The distribution of result for pacients without autism is pretty simetric, with mean close to 5. In the other way, most of the pacients with autism shows bigger result values.     ","da9f13ab":"## EDA","54bc4a93":"Patients with an immediate family that has autism seems to be more likely to has autism as well.   ","52755948":"## Training","57b0b5e7":"We expect more density on the negative label (no autism) due the target imbalance that was observed in the training set, so this seems ok.   ","2987d1af":"The target is imbalanced.   ","b05784bc":"Curious that half of White-European in this dataset was observed with autism.  "}}