{"cell_type":{"2f9035cc":"code","f6704480":"code","346728fb":"code","220a91f3":"code","818fecf3":"code","d2e631eb":"code","e3059bf1":"code","bd0e1a25":"code","e5e2eef3":"code","73546aa7":"code","283248d7":"code","dd3ed32d":"code","3fa6370a":"code","009ad8ce":"markdown","b7fe559f":"markdown","ef30889b":"markdown","68957916":"markdown"},"source":{"2f9035cc":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pp\nimport seaborn as sns\nimport warnings\nimport os\n\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n\nprint(os.listdir(\"..\/input\"))","f6704480":"df_iris = pd.read_csv('..\/input\/Iris.csv')","346728fb":"df_iris.info()","220a91f3":"df_iris.isnull().sum()","818fecf3":"df_iris.describe()","d2e631eb":"df_iris.head()","e3059bf1":"# pp.ProfileReport(df_iris)","bd0e1a25":"import lightgbm as lgb\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nimport numpy as np","e5e2eef3":"    # Iris \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n    iris = datasets.load_iris()\n    X, y = iris.data, iris.target\n\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5b66\u7fd2\u7528\u3068\u30c6\u30b9\u30c8\u7528\u306b\u5206\u5272\u3059\u308b\n    X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)\n    # \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u3092\u8a55\u4fa1\u7528\u3068\u691c\u8a3c\u7528\u306b\u5206\u3051\u308b\n    X_eval, X_valid, y_eval, y_valid = train_test_split(X_test, y_test, random_state=42)\n\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u751f\u6210\u3059\u308b\n    lgb_train = lgb.Dataset(X_train, y_train)\n    lgb_eval = lgb.Dataset(X_eval, y_eval, reference=lgb_train)","73546aa7":"def main():\n    # LightGBM \u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\n    lgbm_params = {\n        # \u591a\u5024\u5206\u985e\u554f\u984c\n        'objective': 'multiclass',\n        # \u30af\u30e9\u30b9\u6570\u306f 3\n        'num_class': 3,\n    }\n    # \u4e0a\u8a18\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\n    model = lgb.train(lgbm_params, lgb_train,\n                      # \u30e2\u30c7\u30eb\u306e\u8a55\u4fa1\u7528\u30c7\u30fc\u30bf\u3092\u6e21\u3059\n                      valid_sets=lgb_eval,\n                      # \u6700\u5927\u3067 1000 \u30e9\u30a6\u30f3\u30c9\u307e\u3067\u5b66\u7fd2\u3059\u308b\n                      num_boost_round=1000,\n                      # 10 \u30e9\u30a6\u30f3\u30c9\u7d4c\u904e\u3057\u3066\u3082\u6027\u80fd\u304c\u5411\u4e0a\u3057\u306a\u3044\u3068\u304d\u306f\u5b66\u7fd2\u3092\u6253\u3061\u5207\u308b\n                      early_stopping_rounds=10)\n\n    # \u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3067\u30db\u30fc\u30eb\u30c9\u30a2\u30a6\u30c8\u691c\u8a3c\u3059\u308b\n    y_pred_proba = model.predict(X_valid, num_iteration=model.best_iteration)\n    \n    # \u8fd4\u308a\u5024\u306f\u78ba\u7387\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6700\u5c24\u306b\u5bc4\u305b\u308b\n    y_pred = np.argmax(y_pred_proba, axis=1)\n\n    # \u7cbe\u5ea6 (Accuracy) \u3092\u8a08\u7b97\u3059\u308b\n    accuracy = accuracy_score(y_valid, y_pred)\n    print(accuracy)\n    \nif __name__ == '__main__':\n    main()","283248d7":"print(accuracy)","dd3ed32d":"print(y_valid)","3fa6370a":"print(y_pred)","009ad8ce":"# \u6b20\u640d\u5024\u306e\u78ba\u8a8d","b7fe559f":"This is the data being created. Feb\/23 .2020","ef30889b":"# Light GBM\u3067\u5b9f\u88c5\n\"\"\"LightGBM \u3092\u4f7f\u3063\u305f\u591a\u5024\u5206\u985e\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\"\"\"","68957916":"<span style=\"color: red; \">## \u2605<\/span>\u30001   print(accuracy)\u3000\u3067\u3000name 'accuracy' is not defined\n\u3000\u306b\u306a\u308b\u306e\u306f\u3001\u306a\u305c\uff1f"}}