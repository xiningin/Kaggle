{"cell_type":{"54572f0b":"code","f0475cef":"code","78f4f3cd":"code","1c5f5f51":"code","1be50227":"code","bd789111":"code","d76ee361":"code","38d43e3c":"code","b7e96f1d":"code","9d02b0a4":"code","42778255":"code","a32591b9":"markdown","f78be506":"markdown","b6c5c2d3":"markdown","769f83ed":"markdown","b7775ad3":"markdown"},"source":{"54572f0b":"# loading important modules\n# pandas: Python data analysis library https:\/\/pandas.pydata.org\n# numpy: Python package for scientific computing https:\/\/numpy.org\n# seaborn: statistical data visualization https:\/\/seaborn.pydata.org\n# matplotlib: basic plotting\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt","f0475cef":"# Reading the dataset\nsales_data = pd.read_csv(\"..\/input\/SalesKaggle3.csv\")\n\n# Gist of the dataset\nsales_data.head()","78f4f3cd":"#See the types\nsales_data.dtypes","1c5f5f51":"#Statistical description of the dataset\n# sales_data.describe()\n# Includes categorical variable \nsales_data.describe(include='all')","1be50227":"# Basic questions about the dataset\n\n# 1. Number of enteries \nprint(sales_data.shape)\n# We have 198917 rows and 14 columns \n\n# 2. Total number of products & unique values of the columns \nprint(\"*****************\")\nprint(sales_data.nunique())\n\n# 3. Count of the historical and active state \nprint(\"*****************\")\nprint(sales_data[sales_data['File_Type'] == 'Historical']['SKU_number'].count())\nprint(sales_data[sales_data['File_Type'] == 'Active']['SKU_number'].count())\n\n# 3.1 Split the dataset into two parts based on the file_type \nsales_data_hist = sales_data[sales_data['File_Type'] == 'Historical']\nsales_data_act = sales_data[sales_data['File_Type'] == 'Active']\n","bd789111":"#Check out data using some plots\nsales_data['File_Type'].value_counts().plot.bar(title=\"Freq dist of File Type\")","d76ee361":"#Numerical variables -- histograms\n#Plots with a kernel density estimate and histogram with bin size determined automatically\n#Multiple plots on one canvas (using subplots)\ncol_names = ['StrengthFactor','PriceReg', 'ReleaseYear', 'ItemCount', 'LowUserPrice', 'LowNetPrice']\n\nfig, ax = plt.subplots(len(col_names), figsize=(16,12))\n\nfor i, col_val in enumerate(col_names):\n        \n    sns.distplot(sales_data_hist[col_val], hist=True, ax=ax[i])\n    ax[i].set_title('Freq dist '+col_val, fontsize=10)\n    ax[i].set_xlabel(col_val, fontsize=8)\n    ax[i].set_ylabel('Count', fontsize=8)\n    \nplt.show()","38d43e3c":"#Check out outliers\nfig, ax = plt.subplots(len(col_names), figsize=(8,40))\n\nfor i, col_val in enumerate(col_names):\n        \n    sns.boxplot(y=sales_data_hist[col_val], ax=ax[i])\n    ax[i].set_title('Box plot - '+col_val, fontsize=10)\n    ax[i].set_xlabel(col_val, fontsize=8)\n    \nplt.show()","b7e96f1d":"sales_data_hist = sales_data_hist.drop(['Order', 'File_Type','SKU_number','SoldFlag','MarketingType','ReleaseNumber','New_Release_Flag'], axis=1)\nsns.pairplot(sales_data_hist)","9d02b0a4":"f, ax = plt.subplots(figsize=(10, 8))\ncorr = sales_data_hist.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","42778255":"# Percentile based outlier removal \ndef percentile_based_outlier(data, threshold=95):\n    diff = (100 - threshold) \/ 2.0\n    minval, maxval = np.percentile(data, [diff, 100 - diff])\n    return (data < minval) | (data > maxval)\n\ncol_names = ['StrengthFactor','PriceReg', 'ReleaseYear', 'ItemCount', 'LowUserPrice', 'LowNetPrice']\n\nfig, ax = plt.subplots(len(col_names), figsize=(8,40))\n\nfor i, col_val in enumerate(col_names):\n    x = sales_data_hist[col_val][:1000]\n    sns.distplot(x, ax=ax[i], rug=True, hist=False)\n    outliers = x[percentile_based_outlier(x)]\n    ax[i].plot(outliers, np.zeros_like(outliers), 'ro', clip_on=False)\n\n    ax[i].set_title('Outlier detection - '+col_val, fontsize=10)\n    ax[i].set_xlabel(col_val, fontsize=8)\n    \nplt.show()","a32591b9":"### Bivariate plots \n\nTo plot multiple pairwise bivariate distributions in a dataset","f78be506":"### Correlation plot\n\nPositively correlated variables will have correlation value close to +1 and negatively correlated variables will have correlation value close to -1.","b6c5c2d3":"## Inventory Management Problem Statement:\n\n* **Context:** A retail firm has many products in their inventory, and very few of them tend to sell (only about 10% sell each year) and many of the products only have a single sale in the course of a year\n\n* **Objective:** The sales and growth team of the retail firm wants to determine which products from their inventory should they retain to sell and the ones to discard \n\n* **Data:** The data given contains both historical sales data AND active inventory\n\n* **Goal:** We have a to building a binary classifier which gives us a list of product ID which need to retained in the inventory or list of products that need to be removed\n","769f83ed":"### Univariate Outlier treatment\n\nMany algorithms are sensitive to the range and distribution of attribute values in the input data. Outliers in input data can skew and mislead the results and make results less reliable, that's why we have to recognize all the outliers and treat them.","b7775ad3":"## Data exploration\n- Case study: Inventory Management System\n- For demonstration of data exploration (B565)\n- Ref: Modified from [this notepad](https:\/\/www.kaggle.com\/dvigneshwer\/kernele7f4dbb964) by Yuzhen Ye"}}