{"cell_type":{"e243e08c":"code","9d986b91":"code","3e3bacd8":"code","682e4479":"code","c29fbd2f":"code","47b83f20":"code","044139e3":"code","ef1de1c8":"code","14e8075e":"code","270e8dbc":"code","044369a2":"code","e6169b56":"code","a7d5cefb":"code","3c333f7e":"code","8e2dbcd7":"code","5fe2be6a":"code","511015ea":"code","6797897a":"code","cecc83c5":"code","67c7a654":"code","f9f97cbc":"code","777f88f3":"code","5a04a0aa":"code","028f6195":"code","f0078a3a":"code","173e7c93":"code","c46d2f21":"code","a27b80bd":"code","3c82beee":"code","f7b64b04":"code","a4e97cd8":"code","674301dd":"code","d1c28f3a":"code","4718245c":"code","bb15ec08":"code","95408af5":"code","e93d6161":"code","3238da5b":"code","84a6e7e1":"markdown","48eccb8c":"markdown","60459136":"markdown","c6a98469":"markdown","4d2cd790":"markdown","957ac770":"markdown","0d4dc0af":"markdown","a9dbf6cc":"markdown","f8ef9ca8":"markdown","de8841bb":"markdown","fefe412b":"markdown"},"source":{"e243e08c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os \nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d986b91":"import plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams\nimport warnings\nwarnings.filterwarnings('ignore')","3e3bacd8":"df_2020 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report\/2020.csv\")\ndf_2019 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report\/2019.csv\")\ndf_2018 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report\/2018.csv\")\ndf_2017 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report\/2017.csv\")\ndf_2016 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report\/2016.csv\")\ndf_2015 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report\/2015.csv\")","682e4479":"fig = px.treemap(df_2020, path=[\"Country name\"], values='Ladder score',title=\"Country names based on Happiness score\")\nfig.show()","c29fbd2f":"columns = df_2020.columns\ncolumns_df = pd.DataFrame({\"names\":columns})\nprint(\"factors considerd for a country to be happy\")\n(columns_df.style.background_gradient(cmap='Blues'))\n","47b83f20":"df_2020.head()","044139e3":"print(\"There are {} rows and {} columns in the dataset.\".format(df_2020.shape[0], df_2020.shape[1]))","ef1de1c8":"df_2020.isna().sum()","14e8075e":"df_2020.info()","270e8dbc":"df_2020.describe()","044369a2":"df_2020[\"Regional indicator\"].value_counts()","e6169b56":"fig = px.bar(data_frame = df_2020.nlargest(10,\"Ladder score\"),\n             y=\"Country name\",\n             x=\"Ladder score\",\n             orientation='h',\n             color=\"Country name\",\n             text=\"Ladder score\",\n             color_discrete_sequence=px.colors.qualitative.D3)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  showlegend=False,\n                  title=\"Top 10 happiest countries\",\n)\nfig.show()","a7d5cefb":"fig = px.bar(data_frame = df_2020.nsmallest(10,\"Ladder score\"),\n             y=\"Country name\",\n             x=\"Ladder score\",\n             orientation='h',\n             color=\"Country name\",\n             text=\"Ladder score\",\n             color_discrete_sequence=px.colors.qualitative.D3)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  showlegend=False,\n                  title=\"Top 10 Un happiest countries\",\n)\nfig.show()","3c333f7e":"region = df_2020[\"Regional indicator\"].value_counts()\nregion_df_2020 = pd.DataFrame({'region':region.index, 'frequency':region.values})\nfig = px.bar(region_df_2020, x=\"frequency\", y=\"region\",color='region', orientation='h',\n             hover_data=[\"region\", \"frequency\"],\n             height=500,\n             title='Percentage of contribution of regions')\nfig.show()","8e2dbcd7":"fig = px.pie(values = region_df_2020[\"frequency\"],\n             names= region_df_2020[\"region\"],\n             title=\"Percentage of contribution of regions\",\n             )\nfig.show()","5fe2be6a":"rcParams[\"figure.figsize\"] = 20,10\nplt.title(\"Corellation between different features\")\nsns.heatmap(df_2020.corr(),annot=True,cmap=\"YlGnBu\")","511015ea":"fig = px.histogram(data_frame=df_2020,x=\"Ladder score\",marginal=\"box\")\nfig.update_layout(showlegend=False,\n                  title=\"Distribution of happiness scores (skew: {:.3f})\".format(df_2020[\"Ladder score\"].skew()),\n                  width=800)\nfig.show()","6797897a":"def feature_plots(dataframe,feature):\n    grouped_df_2020 = df_2020.groupby([\"Regional indicator\"]).agg({feature : np.mean}).reset_index()\n    fig = px.bar(data_frame=grouped_df_2020,x = \"Regional indicator\",y=feature,color = \"Regional indicator\" ,title=\"Region vs {}\".format(feature))\n    fig.show()","cecc83c5":"feature_plots(dataframe=df_2020,feature=\"Logged GDP per capita\")","67c7a654":"feature_plots(dataframe=df_2020,feature=\"Healthy life expectancy\")","f9f97cbc":"feature_plots(dataframe=df_2020,feature=\"Social support\")","777f88f3":"feature_plots(dataframe=df_2020,feature=\"Freedom to make life choices\")","5a04a0aa":"feature_plots(dataframe=df_2020,feature=\"Social support\")","028f6195":"social_support = df_2020.sort_values(\"Social support\",ascending=False)\nsocial = social_support[[\"Country name\",\"Social support\"]]","f0078a3a":"fig = px.line(data_frame=social,x = \"Country name\",y=\"Social support\",hover_name=\"Social support\")\nfig.show()","173e7c93":"fig = px.line(data_frame=df_2020,x =\"Country name\",y=\"Ladder score\",hover_name=\"Ladder score\")\nfig.show()","c46d2f21":"fig = px.bar(data_frame=df_2019.sort_values(by=\"Perceptions of corruption\",ascending=False).head(10),\n             x=\"Country or region\",y=\"Perceptions of corruption\",color=\"Country or region\",\n            title=\"Country which high Perceptions of corruption\",)\nfig.show()","a27b80bd":"Score2015=df_2015[['Country', 'Happiness Score']]\nScore2016=df_2016[['Country', 'Happiness Score']]\nScore2017=df_2017[['Country', 'Happiness.Score']]\nScore2018=df_2018[['Country or region', 'Score']]\nScore2019=df_2019[['Country or region', 'Score']]\nScore2020=df_2020[['Country name', 'Ladder score']]","3c82beee":"Score2015.rename(columns={'Happiness Score': 'Happyness2015'}, \n                 inplace=True)\nScore2016.rename(columns={'Happiness Score': 'Happyness2016'}, \n                 inplace=True)\nScore2017.rename(columns={'Happiness.Score': 'Happyness2017'}, \n                 inplace=True)\nScore2018.rename(columns={'Country or region':'Country', 'Score': 'Happyness2018'}, \n                 inplace=True)\nScore2019.rename(columns={'Country or region':'Country', 'Score': 'Happyness2019'}, \n                 inplace=True)\nScore2020.rename(columns={'Country name':'Country', 'Ladder score': 'Happyness2020'}, \n                 inplace=True)","f7b64b04":"Score2015.sort_values(by=['Country'])\nScore2016.sort_values(by=['Country'])\nScore2017.sort_values(by=['Country'])\nScore2018.sort_values(by=['Country'])\nScore2019.sort_values(by=['Country'])\nScore2020.sort_values(by=['Country'])","a4e97cd8":"mergedStuff = pd.merge(Score2015, Score2016, on=['Country'], how='inner')\nmergedStuff.head()\n\nmergedStuff1 = pd.merge(Score2017, Score2018, on=['Country'], how='inner')\nmergedStuff1.head()\n\nmergedStuff2 = pd.merge(Score2019, Score2020, on=['Country'], how='inner')\nmergedStuff2.head()\n\nmergedStuff3 = pd.merge(mergedStuff, mergedStuff1, on=['Country'], how='inner')\nmergedStuff3.head()\n\nmergedStuff4 = pd.merge(mergedStuff3, mergedStuff2, on=['Country'], how='inner')\nmergedStuff4.head()\n","674301dd":"fig = go.Figure()\nmergedStuff4 = mergedStuff4.head(20)\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Happyness2015\"],\n                    mode='lines',\n                    name='Year_2015'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Happyness2016\"],\n                    mode='lines+markers',\n                    name='Year_2016'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Happyness2017\"],\n                    mode='lines',\n                    name='Year_2017'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Happyness2018\"],\n                    mode='lines',\n                    name='Year_2018'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Happyness2019\"],\n                    mode='lines',\n                    name='Year_2019'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Happyness2020\"],\n                    mode='lines',\n                    name='Year_2020'))\nfig.update_layout(title = \"Happiness Distrubution between Country over a period of time\")\nfig.show()","d1c28f3a":"Freedom2015=df_2015[['Country', 'Freedom']]\nFreedom2016=df_2016[['Country', 'Freedom']]\nFreedom2017=df_2017[['Country', 'Freedom']]\nFreedom2018=df_2018[['Country or region', 'Freedom to make life choices']]\nFreedom2019=df_2019[['Country or region', 'Freedom to make life choices']]\nFreedom2020=df_2020[['Country name', 'Freedom to make life choices']]","4718245c":"Freedom2015.rename(columns={'Freedom': 'Freedom2015'}, \n                 inplace=True)\nFreedom2016.rename(columns={'Freedom': 'Freedom2016'}, \n                 inplace=True)\nFreedom2017.rename(columns={'Freedom': 'Freedom2017'},inplace=True)\nFreedom2018.rename(columns={'Country or region':'Country', 'Freedom to make life choices': 'Freedom2018'}, \n                 inplace=True)\nFreedom2019.rename(columns={'Country or region':'Country', 'Freedom to make life choices': 'Freedom2019'}, \n                 inplace=True)\nFreedom2020.rename(columns={'Country name':'Country', 'Freedom to make life choices': 'Freedom2020'}, \n                 inplace=True)","bb15ec08":"Freedom2015.sort_values(by=['Country'])\nFreedom2016.sort_values(by=['Country'])\nFreedom2017.sort_values(by=['Country'])\nFreedom2018.sort_values(by=['Country'])\nFreedom2019.sort_values(by=['Country'])\nFreedom2020.sort_values(by=['Country'])","95408af5":"mergedStuff = pd.merge(Freedom2015, Freedom2016, on=['Country'], how='inner')\nmergedStuff.head()\n\nmergedStuff1 = pd.merge(Freedom2017, Freedom2018, on=['Country'], how='inner')\nmergedStuff1.head()\n\nmergedStuff2 = pd.merge(Freedom2019, Freedom2020, on=['Country'], how='inner')\nmergedStuff2.head()\n\nmergedStuff3 = pd.merge(mergedStuff, mergedStuff1, on=['Country'], how='inner')\nmergedStuff3.head()\n\nmergedStuff4 = pd.merge(mergedStuff3, mergedStuff2, on=['Country'], how='inner')\nmergedStuff4.head()","e93d6161":"fig = go.Figure()\nmergedStuff4 = mergedStuff4.head(20)\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Freedom2015\"],\n                    mode='lines',\n                    name='Year_2015'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Freedom2016\"],\n                    mode='lines+markers',\n                    name='Year_2016'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Freedom2017\"],\n                    mode='lines',\n                    name='Year_2017'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Freedom2018\"],\n                    mode='lines',\n                    name='Year_2018'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Freedom2019\"],\n                    mode='lines',\n                    name='Year_2019'))\nfig.add_trace(go.Scatter(x= mergedStuff4[\"Country\"],y=mergedStuff4[\"Freedom2020\"],\n                    mode='lines',\n                    name='Year_2020'))\nfig.update_layout(title = \"Freedom of people Distrubution between Country over a period of time\")\n\nfig.show()","3238da5b":"data_frame_2019=df_2019.sort_values(by=\"Perceptions of corruption\",ascending=False).head(10)\ndata_frame_2020 = df_2020.sort_values(by=\"Explained by: Perceptions of corruption\",ascending=False).head(10)\ndata_frame_2018=df_2018.sort_values(by=\"Perceptions of corruption\",ascending=False).head(10)\ndata_frame_2017=df_2017.sort_values(by=\"Trust..Government.Corruption.\",ascending=False).head(10)\ndata_frame_2016=df_2016.sort_values(by=\"Trust (Government Corruption)\",ascending=False).head(10)\ndata_frame_2015=df_2015.sort_values(by=\"Trust (Government Corruption)\",ascending=False).head(10)\n\n\nfig = go.Figure(go.Bar(x=data_frame_2019[\"Country or region\"],y=data_frame_2019[\"Perceptions of corruption\"],\n            name=\"Country which high Perceptions of corruption year 2019\",text=data_frame_2019[\"Perceptions of corruption\"]))\nfig.add_trace(go.Bar(x=data_frame_2020[\"Country name\"],y = data_frame_2020[\"Perceptions of corruption\"],\n                     name=\"Country which high Perceptions of corruption year 2020\",text = data_frame_2020[\"Perceptions of corruption\"]))\nfig.add_trace(go.Bar(x=data_frame_2018[\"Country or region\"],y = data_frame_2018[\"Perceptions of corruption\"],\n                     name=\"Country which high Perceptions of corruption year 2018\",text = data_frame_2018[\"Perceptions of corruption\"]))\nfig.add_trace(go.Bar(x=data_frame_2017[\"Country\"],y = data_frame_2017[\"Trust..Government.Corruption.\"],\n                     name=\"Country which high Perceptions of corruption year 2017\",text=data_frame_2017[\"Trust..Government.Corruption.\"]))\nfig.add_trace(go.Bar(x=data_frame_2016[\"Country\"],y = data_frame_2016[\"Trust (Government Corruption)\"],\n                     name=\"Country which high Perceptions of corruption year 2016\",text=data_frame_2016[\"Trust (Government Corruption)\"]))\nfig.add_trace(go.Bar(x=data_frame_2015[\"Country\"],y = data_frame_2015[\"Trust (Government Corruption)\"],\n                     name=\"Country which high Perceptions of corruption year 2015\",text=data_frame_2015[\"Trust (Government Corruption)\"]))\nfig.update_layout(title=\"Corruption over years in each country\")\nfig.show()","84a6e7e1":"# Over all Compariosn of all years ","48eccb8c":"# Loading Library","60459136":"# Year 2019","c6a98469":"\nAccording to the research in 2007 that followed more than 6,000 men and women aged 25 to 74 for 20 years, for example, Laura Kubzansky, HSPH associate professor of society, human development, and health, found that emotional vitality\u2014a sense of enthusiasm, of hopefulness, of engagement in life, and the ability to face life\u2019s stresses with emotional balance\u2014appears to reduce the risk of coronary heart disease. The protective effect was distinct and measurable, even when taking into account such wholesome behaviors as not smoking and regular exercise.\n### Happiness makes you feel good about yourself, and life in general","4d2cd790":"References \nhttps:\/\/www.kaggle.com\/agirlcoding\/happyness-report","957ac770":"### See the entire report https:\/\/happiness-report.s3.amazonaws.com\/2020\/WHR20.pdf\n### Official Website for report -> https:\/\/www.dayofhappiness.net\/report","0d4dc0af":"![](https:\/\/currentaffairs.adda247.com\/wp-content\/uploads\/2020\/03\/21174153\/ffff-300x192.jpg)The World Happiness Report is a landmark survey of the state of global happiness that ranks 156 countries by how happy their citizens perceive themselves to be. The World Happiness Report 2020 for the first time ranks cities around the world by their subjective well-being and digs more deeply into how the social, urban and natural environments combine to affect our happiness","a9dbf6cc":"## checking whether null values are there are not","f8ef9ca8":"# Loading Necessary files","de8841bb":"<h2 class=\"list-group-item list-group-item-action active\"  aria-controls=\"home\"><center>Why Happiness is important in life ?<\/center><\/h2>\n","fefe412b":"It is surprising to see Denmark ,finland which is in Third and Fourth  rank by  **Perceptions of corruption**  even though they are in the top list by hapinees score"}}