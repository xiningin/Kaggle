{"cell_type":{"eaffa581":"code","fa9e491c":"code","0e55f7c5":"code","c22eb1f8":"code","416e0df6":"code","be6d7829":"code","4b5c4277":"code","66168320":"code","1561c67c":"code","947923a8":"code","df0f42ca":"code","07ade3c3":"code","bfc933ba":"code","3681d9d9":"code","ac1e981a":"code","1ec0401f":"code","1558aaa3":"code","d4186b2e":"code","233ee4e3":"code","5a08f701":"code","763d8dce":"code","c3b59a40":"code","53aaae03":"code","6d2c49cd":"code","f9f99ff5":"code","629fd348":"code","db43e962":"code","e39bf7bb":"code","9c82bf65":"code","6e0787bc":"code","58b175e7":"code","02fc8e15":"code","821ba0b2":"code","bccc01fc":"code","1c04221b":"code","8828f6d0":"code","49a690d0":"code","2f805539":"code","73b23532":"code","db19f1fb":"markdown","15a27034":"markdown","e6de206a":"markdown","92518d0c":"markdown","9d1f264a":"markdown","123cd304":"markdown","ef630bec":"markdown","ccebb337":"markdown","237717a6":"markdown","7327f2ba":"markdown","3aa4cd00":"markdown","1bfb75cc":"markdown","f525f491":"markdown","03d68dfd":"markdown","da2c4cf0":"markdown","f7431b94":"markdown","3fed3651":"markdown","cf260597":"markdown","605d6ea9":"markdown","365ef1d3":"markdown","f77be92f":"markdown","2dbf26e1":"markdown","677b0a78":"markdown","2dbd7784":"markdown","8d0c38f7":"markdown","f9f832ff":"markdown"},"source":{"eaffa581":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fa9e491c":"data = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")\ndata","0e55f7c5":"data.shape","c22eb1f8":"data.dtypes","416e0df6":"data.dtypes.value_counts().plot.pie()","be6d7829":"(data.isna().sum()\/data.shape[0]).sort_values(ascending = True)","4b5c4277":"data.describe()","66168320":"data['target'].value_counts()","1561c67c":"for col in data.select_dtypes('int64'):\n    sns.set()\n    sns.displot(data[col], kde = True)","947923a8":"sns.distplot(data['oldpeak'], kde= True)","df0f42ca":"sns.boxplot(x = \"sex\", y = \"age\", data = data)","07ade3c3":"data.groupby('sex').age.plot(kind='kde')","bfc933ba":"data[[\"sex\", \"age\"]].groupby(\"sex\").mean()","3681d9d9":"# positive results\npositive_result = data[data['target'] == 1]\n\n# negative results\nnegative_result = data[data['target'] == 0]","ac1e981a":"blood = data[['trestbps','chol', 'thal','fbs']]\nblood","1ec0401f":"sns.pairplot(data)","1558aaa3":"data_corr = data.corr()\nsns.heatmap(data_corr, annot = True)","d4186b2e":"sns.displot(data, x = 'sex', hue='target', alpha = 0.9)","233ee4e3":"data.groupby('target').age.plot(kind='kde')","5a08f701":"sns.countplot(x=\"age\", hue=\"target\", data=data)","763d8dce":"cp_zero_pos_target = len(data[(data['cp'] == 0) & (data['target'] == 1)])\ncp_zero_neg_target = len(data[(data['cp'] == 0) & (data['target'] == 0)])","c3b59a40":"sns.barplot(x = ['cp = zero and negative target', 'cp = zero and positive target'], \n            y = [cp_zero_neg_target, cp_zero_pos_target])\nplt.show()","53aaae03":"cp_one_pos_target = len(data[(data['cp'] == 1) & (data['target'] == 1)])\ncp_one_neg_target = len(data[(data['cp'] == 1) & (data['target'] == 0)])","6d2c49cd":"sns.barplot(x = ['cp = One and negative target', 'cp = one and positive target'], \n            y = [cp_one_neg_target, cp_one_pos_target])\nplt.show()","f9f99ff5":"cp_two_pos_target = len(data[(data['cp'] == 2) & (data['target'] == 1)])\ncp_two_neg_target = len(data[(data['cp'] == 2) & (data['target'] == 0)])","629fd348":"sns.barplot(x = ['cp = two and negative target', 'cp = two and positive target'], \n            y = [cp_two_neg_target, cp_two_pos_target])\nplt.show()","db43e962":"cp_three_pos_target = len(data[(data['cp'] == 3) & (data['target'] == 1)])\ncp_three_neg_target = len(data[(data['cp'] == 3) & (data['target'] == 0)])","e39bf7bb":"sns.barplot(x = ['cp = three and negative target', 'cp = three and positive target'], \n            y = [cp_three_neg_target, cp_three_pos_target])\nplt.show()","9c82bf65":"for col in blood:\n    plt.figure()\n    negative_result[col].hist(label = \"negative\")\n    positive_result[col].hist(label = \"positive\", alpha = 0.7)\n    plt.legend()\n    plt.xlabel(col)","6e0787bc":"sns.displot(data, x='thalach', hue='target', alpha = 0.8)","58b175e7":"data.groupby('target').thalach.plot(kind='kde')","02fc8e15":"sns.pairplot(blood)","821ba0b2":"for col in blood:\n    plt.figure()\n    sns.lmplot(x=\"age\", y=col, hue=\"target\", data=data)","bccc01fc":"data.corr()[\"age\"].sort_values()","1c04221b":"from scipy.stats import ttest_ind","8828f6d0":"positive_result.shape","49a690d0":"negative_result.shape","2f805539":"def t_test(col):\n    alpha = 0.02\n    stat, p = ttest_ind(negative_result[col], positive_result[col])\n    if p < alpha:\n        return \"H0 rejected\"\n    else:\n        return 0","73b23532":"for col in data:\n    print(f'{col :-<30} {t_test(col)}')","db19f1fb":"### Negative \/ positive subset","15a27034":"## Test hypothesis","e6de206a":"> # Heart Disease UCI dataset Analysis\n<a href=\"https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci\">GET HERE<\/a>\n\n-----------------","92518d0c":"### Sexe \/ target","9d1f264a":"### Types","123cd304":"### Age \/ Target","ef630bec":"#### Chest 3 \/ target value subset","ccebb337":"#### Chest 2 \/ target value subset","237717a6":"### What types of data ? \n\n**Size :** 303 values, 14 columns\n\n**Target column :** data[\"target\"]\n\n**Column types :** 13 features + 1 target\n\n\n| Name   | Type   |\n| :----: | :----: |\n|age     | int64  |\n|sex     | int64  |\n|cp      | int64  |\n|trestbps| int64  |\n|chol\t | int64  |\n|fbs\t | int64  |\n|restecg | int64  |\n|thalach | int64  |\n|exang \t | int64  |\n|oldpeak | float64|\n|slope \t | int64  |\n|ca \t | int64  |\n|thal    | int64  |\n|target|int64|\n\n**NaN  :** 0 null values\n\n\n**Attributes information** : \n\n   * **sex** = 1 : male; 0 : female\n   * **cp** = The chest pain experienced (Value 1: typical angina, Value 2: atypical angina, Value 3: non-anginal pain, Value 4: asymptomatic)\n   * **trestbps** = resting blood pressure\n   * **chol** = serum cholestoral in mg\/dl\n   * **fbs** = fasting blood sugar  > 120 mg\/dl : (1 = true; 0 = false) \n   * **restecg** = resting electrocardiographic results (values 0,1,2)\n   * **thalach** = maximum heart rate achieved\n   * **exang** = exercise induced angina\n   * **oldpeak** = ST depression induced by exercise relative to rest\n   * **slope** = the slope of the peak exercise ST segment\n   * **ca** = number of major vessels (0-3) colored by flourosopy\n   * **thal**: is a blood disorder called thalassemia, 3 = normal; 6 = fixed defect; 7 = reversable defect\n\n\n-----------------\n\n### Data analysis \n\n* **Univariate** : \n\n    * Target -> positive = 165, negative = 138. The target is nicely balanced\n    * Age    -> global mean = 54.3 ; women mean: 55.677083 ; man mean: 53.758454\n    * Chest pain type -> most of the data are type 0, can be usefull to try to correlate this one with target\n    * thalac -> mean = 149 heart beats per minutes; max = 202\n\n* **Bivariate** : \n    * Create subset of data : Positive \/ negative , Blood (column :'trestbps','chol', 'thal', 'fbs) \n    * Corr matrix : max corr between target and cp (0.43) , target thalach (0,42)\n    * Age \/ Target\n    * Sex \/ Target\n    * Chest type \/ Target : \n    * blood \/ target : thal = 5 -> the highest positive result    \n    * Blood \/ Blood : \n    * Blood \/ Age : Blood is not correlate with Age (max trestbps = 0.279351)\n\n\n### Hypothesis test\n* H0 = Chess type seems to play a role of Heart disease\n\n* H1 = thalach seems to be correlate with heart disease","7327f2ba":"#### Target","3aa4cd00":"### Describe data","1bfb75cc":"#### t_test function","f525f491":"## Blood \/ Blood ","03d68dfd":"### Univariate ","da2c4cf0":"## Create Subset","f7431b94":"### Chest value \/ Target","3fed3651":"#### Create the pair plot correlation matrix","cf260597":"#### distribution plot of the features","605d6ea9":"### NaN","365ef1d3":"#### Chest 0 \/ target value subset","f77be92f":"## Bivariate \/ multi Analysis","2dbf26e1":"### Blood \/ Target","677b0a78":"#### Chest 1 \/ target value subset","2dbd7784":"### Blood \/ Age","8d0c38f7":"check class (must be nicely balanced), if is not we can select a sample of class with the sample() function","f9f832ff":"### THALCH (maximum heart rate achieved) \/ Target   "}}