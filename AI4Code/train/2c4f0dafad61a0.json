{"cell_type":{"a385c62f":"code","e73541fb":"code","8c37e5e4":"code","822ec678":"code","f0100271":"code","3698c583":"code","b895a943":"code","cf6db502":"code","003c52ad":"code","815dd692":"code","9259cf13":"code","b14fa8b1":"code","745ce64d":"code","c0b0456f":"code","e656571b":"code","84652f10":"code","614814dc":"code","0dad7f50":"code","e8ca4b4e":"code","78f05ab1":"code","b70f6ece":"code","f933bbdf":"code","bc2b1ff1":"code","9fda19b6":"code","accbb95c":"code","7efd5d48":"code","b9fac2cb":"code","52b8de29":"code","d23afa36":"code","5cd8b746":"code","854fe06b":"code","467c84d4":"code","c94e9b7b":"code","af0437ff":"code","59cd8b77":"code","c780e343":"code","0875d869":"code","3bdd562b":"code","ed45a3ac":"code","baab0724":"code","6f6f7589":"code","c1b7ce5c":"code","ef7378d8":"code","7120cfb9":"code","66fc27cb":"code","276bf3fa":"code","b8fecf3b":"code","a4a9f35b":"code","2ac94c27":"code","3de35865":"code","f4660b5c":"code","681c83b2":"code","6f76d233":"code","39138e43":"code","ad34c404":"code","b23b5d51":"code","4af0ef87":"code","10b9cdc6":"code","7bfc14a9":"code","528c6c3c":"markdown","447061b1":"markdown","87483acb":"markdown","8c25c148":"markdown","328f5258":"markdown"},"source":{"a385c62f":"import pandas as pd\nimport numpy as np\n","e73541fb":"path = '..\/input\/pima-indians-diabetes-database\/diabetes.csv'\ndf= pd.read_csv(path)\nprint(\"Reading completed\")#data frame created","8c37e5e4":"df\n","822ec678":"type(df)","f0100271":"import matplotlib.pyplot as plt\nimport seaborn as sns \nimport plotly.figure_factory as ff","3698c583":"sns.factorplot('Outcome',data=df,kind=\"count\")","b895a943":"# PREGNANCIES","cf6db502":"preg=df['Pregnancies']\n","003c52ad":"preg","815dd692":"outcomes0=len(df.loc[df['Outcome']==0])\noutcomes1=len(df.loc[df['Outcome']==1])","9259cf13":"(outcomes0,outcomes1)","b14fa8b1":"plt.figure(figsize=(8,6))\nsns.heatmap(df.corr(), annot=True, linewidths=2)\n#plt.xticks(rotation=45)\n#plt.yticks(rotation=45)\nplt.show()","745ce64d":"df.describe()","c0b0456f":"df.groupby('Outcome').mean()","e656571b":"df.plot()","84652f10":"df['Outcome']","614814dc":"df['Outcome']==1","0dad7f50":"df[df['Outcome']==1]\n","e8ca4b4e":"df0=df[df['Outcome']==0]\ndf1=df[df['Outcome']==1]","78f05ab1":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['Glucose'],label=\"Non-Diab\",color=\"r\")\nplt.scatter(df1['Pregnancies'],df1['Glucose'],label=\"Diab\",color=\"m\",marker='*')\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"Glucose\")\nplt.title(\"glucose analysis\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","b70f6ece":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['BloodPressure'],label=\"Non-Diab\",color=\"g\",marker='*')\nplt.scatter(df1['Pregnancies'],df1['BloodPressure'],label=\"Diab\",color=\"b\")\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"BloodPressure\")\nplt.title(\"BloodPressureanalysis\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","f933bbdf":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['SkinThickness'],label=\"Non-Diab\",color=\"g\")\nplt.scatter(df1['Pregnancies'],df1['SkinThickness'],label=\"Diab\",color=\"r\",marker='*')\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"SkinThickness\")\nplt.title(\"analysis according to skin\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","bc2b1ff1":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['Insulin'],label=\"Non-Diab\",color=\"y\")\nplt.scatter(df1['Pregnancies'],df1['Insulin'],label=\"Diab\",color=\"m\")\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"Insulin\")\nplt.title(\"Insulin analysis\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","9fda19b6":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['BMI'],label=\"Non-Diab\",color=\"g\",marker='*')\nplt.scatter(df1['Pregnancies'],df1['BMI'],label=\"Diab\",color=\"y\")\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"BMI\")\nplt.title(\"BMI analysis\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","accbb95c":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['DiabetesPedigreeFunction'],label=\"Non-Diab\",color=\"m\")\nplt.scatter(df1['Pregnancies'],df1['DiabetesPedigreeFunction'],label=\"Diab\",color=\"b\",marker=\"*\")\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"DiabetesPedigreeFunction\")\nplt.title(\" DiabetesPedigreeFunction analysis\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","7efd5d48":"plt.figure(figsize=(10,5))\nplt.scatter(df0['Pregnancies'],df0['Age'],label=\"Non-Diab\",color=\"y\")\nplt.scatter(df1['Pregnancies'],df1['Age'],label=\"Diab\",color=\"b\",marker='*')\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"Pregnancies\")\nplt.ylabel(\"Age\")\nplt.title(\"diab and non-diab\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","b9fac2cb":"sns.pairplot(df)\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)","52b8de29":"x=df.iloc[:,0:8]\nY=df.iloc[:,8]","d23afa36":"x","5cd8b746":"Y","854fe06b":"df.head(10)","467c84d4":"df.tail(10)","c94e9b7b":"Col_name=['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age','Outcome']","af0437ff":"col_norm=df_norm=['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction']","59cd8b77":"df_norm=['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction']\n","c780e343":"df_norm=df[col_norm]","0875d869":"df_norm.head(2)","3bdd562b":"import tensorflow as tf","ed45a3ac":"feat_Pregnancies = tf.feature_column.numeric_column(\"Pregnancies\")","baab0724":"feat_Glucose = tf.feature_column.numeric_column(\"Glucose\")","6f6f7589":"feat_BloodPressure = tf.feature_column.numeric_column(\"BloodPressure\")","c1b7ce5c":"feat_SkinThickness = tf.feature_column.numeric_column(\"SkinThickness\")","ef7378d8":"feat_Insulin = tf.feature_column.numeric_column(\"Insulin\")","7120cfb9":"feat_BMI = tf.feature_column.numeric_column(\"BMI\")","66fc27cb":"feat_DiabetesPedigreeFunction = tf.feature_column.numeric_column(\"DiabetesPedigreeFunction\")","276bf3fa":"from tensorflow.python.feature_column import feature_column\nfeature_column = [feat_Pregnancies,feat_Glucose,feat_BloodPressure,feat_SkinThickness,feat_Insulin,feat_BMI,feat_DiabetesPedigreeFunction ]","b8fecf3b":"from sklearn.model_selection import train_test_split","a4a9f35b":"df1_norm=df[col_norm].apply(lambda x:((x-x.min())\/(x.max()-x.min())))","2ac94c27":"X_Data = df1_norm\nX_Data.head(2)","3de35865":"Y_Data = df['Outcome']\nY_Data.head(2)","f4660b5c":"X_Train,X_Test,Y_Train,Y_Test = train_test_split(X_Data,Y_Data,test_size=0.3)","681c83b2":"X_Train.values","6f76d233":"Y_Train.values","39138e43":"from sklearn.neighbors import KNeighborsClassifier as KNN","ad34c404":"model=KNN()\nmodel.fit(X_Train,np.ravel(Y_Train,order='C'))","b23b5d51":"Y_pred=model.predict(X_Test)","4af0ef87":"Y_pred","10b9cdc6":"score = model.score(X_Test,Y_Test)\nscore","7bfc14a9":"from sklearn.metrics import confusion_matrix\n\nconfusion_matrix(Y_Test,Y_pred)","528c6c3c":"SPLITING DATA INTO TRAINING AND TESTING","447061b1":"PREDICT FOR TESTING DATA","87483acb":"EXPLORATORY DATA ANALYSIS\n","8c25c148":"SPLIT INTO INPUT AND OUTPUT\n","328f5258":"ACCURACY SCORE AND CONFUSION MATRIX"}}