{"cell_type":{"c2d3685b":"code","e03cea8f":"code","9f1f77dc":"code","b2a608fc":"code","f1c59ce4":"code","3fa61b36":"code","e0b3afef":"code","95d488ae":"code","a9eec1aa":"code","2fbba5b9":"code","1af5a794":"code","9ef077eb":"code","f07d5390":"code","6b6699a4":"code","f6913d14":"code","e618e546":"code","db1da888":"code","8f19c101":"code","513a7bc9":"code","b7bd0aa4":"code","b29367a6":"code","ba3d3094":"code","7e7ab38a":"code","4e41bdd2":"code","27451650":"code","143ea383":"markdown","4605638b":"markdown","b85daed4":"markdown","4a5173fe":"markdown"},"source":{"c2d3685b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport datetime\nfrom  pandas import json_normalize\n#sns.set_style('whitegrid')\n#from plotly.offline import init_notebook_mode, iplot, plot\n#import plotly as py\n#import plotly.graph_objs as go\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e03cea8f":"#df = pd.read_csv('..\/input\/covid19-coronavirus-dataset\/COVID-19-geographic-disbtribution-worldwide-2020-08-02.csv')\nd = pd.read_json('\/kaggle\/input\/covid19-stream-data\/json')\ndf = json_normalize(d['records'])","9f1f77dc":"df","b2a608fc":"df.dateRep = pd.to_datetime(df.dateRep, format=\"%d\/%m\/%Y\")","f1c59ce4":"df[df.countriesAndTerritories=='']","3fa61b36":"df.info()","e0b3afef":"df.isnull().sum()","95d488ae":"df.countriesAndTerritories.nunique()","a9eec1aa":"df.countriesAndTerritories.unique()","2fbba5b9":"df[df.countriesAndTerritories == 'United_Kingdom'].sort_values('dateRep')","1af5a794":"df.head(10)","9ef077eb":"df = df.sort_values('dateRep')","f07d5390":"df.groupby('continentExp').sum()","6b6699a4":"px.pie(df, df.groupby('continentExp').sum().index, df.groupby('continentExp').sum().cases,title='Covid-19 Cases w.r.t Continents')","f6913d14":"px.pie(df, df.groupby('continentExp').sum().index, df.groupby('continentExp').sum().deaths, title='Covid-19 Mortality w.r.t Continents')","e618e546":"print(df.dateRep.min(), df.dateRep.max())","db1da888":"df['cases_cum'] = df.groupby('countriesAndTerritories').cases.cumsum()\ndf['deaths_cum'] = df.groupby('countriesAndTerritories').deaths.cumsum()","8f19c101":"df","513a7bc9":"fig = px.line(df, x=\"dateRep\", y=\"cases_cum\", color=\"continentExp\",\n              line_group=\"countriesAndTerritories\", hover_name=\"countriesAndTerritories\", title= 'Covid-19 Cases w.r.t. Continents')\nfig.show()","b7bd0aa4":"fig = px.line(df, x=\"dateRep\", y=\"deaths_cum\", color=\"continentExp\",\n              line_group=\"countriesAndTerritories\", hover_name=\"countriesAndTerritories\", title= \"Covid-19 Deaths w.r.t. Continents\")\nfig.show()","b29367a6":"df","ba3d3094":"df.dateRep = df.dateRep.apply(lambda x: x.strftime('%Y-%m-%d'))","7e7ab38a":"fig = px.scatter_geo(df, locations=\"countryterritoryCode\",\n                    color=\"cases_cum\",\n                    size=\"cases_cum\",\n                    hover_name=\"countriesAndTerritories\",\n                    #animation_frame=\"dateRep\",\n                    title = \"Total COVID cases by 2020-08-02\",\n                    color_continuous_scale=px.colors.cyclical.IceFire,\n                    #width =1200,\n                    #height=600,\n                    projection = 'equirectangular',\n                    scope = 'world',\n                    size_max=20)\n\n\nfig.update_layout(margin={'r':0,'t':0,'l':0,'b':0})\nfig.show()","4e41bdd2":"fig = px.choropleth(df, locations=\"countryterritoryCode\",\n                    color=\"cases_cum\",\n                    hover_name=\"countriesAndTerritories\",\n                    animation_frame=\"dateRep\",\n                    title = \"Daily Total COVID cases\",\n                    color_continuous_scale=px.colors.sequential.Reds,\n                    #width =1200,\n                    #height=600,\n                    projection = 'equirectangular',\n                    scope = 'world')\n\n\nfig.update_layout(margin={'r':0,'t':0,'l':0,'b':0})\nfig.show()","27451650":"fig = px.choropleth(df, locations=\"countryterritoryCode\",\n                    color=\"deaths_cum\",\n                    hover_name=\"countriesAndTerritories\",\n                    animation_frame=\"dateRep\",\n                    title = \"Daily Total COVID Deaths\",\n                    color_continuous_scale=px.colors.sequential.Reds,\n                    #width =1200,\n                    #height=600,\n                    projection = 'equirectangular',\n                    scope = 'world')\n\n\nfig.update_layout(margin={'r':0,'t':0,'l':0,'b':0})\nfig.show()","143ea383":"In this Notebook, I intend to present some visualizations regarding the Covid-19 (until August) cases worldwide based on the [Covid-19 data set that I uploaded to Kaggle](https:\/\/www.kaggle.com\/hgultekin\/covid19-coronavirus-dataset). I will be using Plotly Express which I find very useful and practical for generating quick interactive visualizations.","4605638b":"# Exploring Coronavirus Cases Worldwide","b85daed4":"For more about Plotly Express, please check https:\/\/plotly.github.io\/plotly.py-docs\/generated\/plotly.express.html#module-plotly.express","4a5173fe":"It would seem a little bit hard to deal with the country legends considering the fact that there are around 210 countries, let's try grouping legends in terms of continents:"}}