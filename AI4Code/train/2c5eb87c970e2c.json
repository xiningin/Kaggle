{"cell_type":{"c4aefb57":"code","648cf768":"code","786a60b5":"code","872debca":"code","2ef258ff":"code","1a2e27ed":"code","7a5e3f5e":"code","fe945c03":"code","bb7b7302":"code","9aa67d34":"code","3d2ec84f":"code","afd1d420":"code","43d25099":"code","bd9e2924":"code","7c088e7a":"code","1ba94c6d":"code","5b436008":"code","69678208":"code","5192e9e1":"code","3f51c956":"code","4c692b17":"code","6e92cf74":"code","b012be22":"code","f217dcdd":"code","0d27a9e0":"code","f6e80e22":"code","3dbefc74":"code","bfea38d2":"code","b13a3fd3":"code","fb265cad":"code","d903dcf0":"code","3a4e403a":"code","223ad0c8":"code","dddbabe9":"code","9ada452e":"code","25e40b0a":"code","297d2300":"code","792a0429":"code","f4886ff7":"code","eb5fc206":"code","b524f46d":"code","5aab398b":"markdown","2125fe1b":"markdown","8145635f":"markdown","5853910e":"markdown","403fd54f":"markdown","24312806":"markdown","d93682c9":"markdown","a9759711":"markdown","e641f311":"markdown","028cbf21":"markdown","abe45bdd":"markdown","90cfb31f":"markdown","00fbcbcd":"markdown","26570fba":"markdown","3e9f837b":"markdown","10db3aeb":"markdown","a5806ddf":"markdown","5d5ac9e3":"markdown","5d405708":"markdown","1e9c5e80":"markdown","ebb91337":"markdown","75a26935":"markdown","85cbced0":"markdown","12551e3b":"markdown","1a71f7ba":"markdown","114cacf1":"markdown","1041a0e9":"markdown","5e1a3216":"markdown"},"source":{"c4aefb57":"import pandas as pd #Manipula\u00e7\u00e3o\nimport numpy as np #Manipula\u00e7\u00e3o\nimport matplotlib.pyplot as plt #Visualiza\u00e7\u00e3o\nimport seaborn as sns #Visualiza\u00e7\u00e3o","648cf768":"df = pd.read_csv(\"..\/input\/titanic\/test.csv\") ","786a60b5":"df.dtypes","872debca":"df.describe(include=[np.number]).T","2ef258ff":"df.describe(include='O')\n","1a2e27ed":"pd.isnull(df)","7a5e3f5e":"df.isnull().any()","fe945c03":"df.isnull().sum()","bb7b7302":"df.isnull().sum().sum()","9aa67d34":"np.mean(df['Age'])","3d2ec84f":"df.loc[pd.isnull(df['Age']),'Age'] = np.mean(df['Age'])","afd1d420":"df.describe(include=[np.number])","43d25099":"df.isnull().sum()","bd9e2924":"df = df.drop(['PassengerId', 'Parch','Fare','Cabin'],axis = 1) #axis = 1 -> Estou falando que quero que as colunas sejam removidas;\n\n\n","7c088e7a":"df.describe(include=[np.number])","1ba94c6d":"df.describe(include='O')\n","5b436008":"df.loc[pd.isnull(df['Embarked']),'Embarked'] = 'S'","69678208":"df.describe(include='O')","5192e9e1":"df.isnull().sum()","3f51c956":"df = df.drop(['Name','Ticket'],axis=1)","4c692b17":"df.describe(include='O')","6e92cf74":"df['Gender'] = 0","b012be22":"df.describe(include=[np.number])","f217dcdd":"df.head()","0d27a9e0":"df.loc[df['Sex']=='female','Gender'] = 1","f6e80e22":"df.describe(include=[np.number])","3dbefc74":"df.describe(include='O')","bfea38d2":"dummies = pd.get_dummies(df['Embarked'],prefix='Embarked')","b13a3fd3":"df=pd.concat([df,dummies],axis=1)","fb265cad":"df.describe(include=[np.number])","d903dcf0":"df=df.drop(['Sex','Embarked'],axis=1)","3a4e403a":"df.dtypes","223ad0c8":"df.head()","dddbabe9":"df['Age'] = round(df['Age']).values.astype(np.int64)","9ada452e":"df.dtypes","25e40b0a":"df.to_csv('titanic_numeric_only.csv',index=False)","297d2300":"plt.figure(figsize=(10,10))\n\ndf.Age.value_counts().plot(kind='bar')\nplt.ylabel('Counts')\nplt.xlabel('Age Groups')\nplt.title('Frequence of Age Groups')\nplt.show()","792a0429":"plt.figure(figsize=(10,10))\n\ndf.Gender.value_counts().plot(kind='bar')\nplt.ylabel('Counts')\nplt.xlabel('Gender')\nplt.title('Gender Distribution')\nplt.show()","f4886ff7":"df.Age.hist()\nplt.xlabel('Idade')\nplt.ylabel('Freq')\nplt.show()\n## Aqui percebemos o quanto \u00e9 melhor um histograma para plotar grupos de idade, do que um bar chart, que foi  o primeiro gr\u00e1fico exibido.","eb5fc206":"df.Age.plot()","b524f46d":"#FIM Espero que este notebook possa ajudar os colegas falantes da l\u00edngua portuguesa :)","5aab398b":"**Aqui eu concateno as colunas novas (dummies) no dataset original df**","2125fe1b":"**Name e Ticket possuem muitos valores \u00fanicos comprometendo o dataset. Devem ser removidos porque n\u00e3o tem import\u00e2ncia.**","8145635f":"**Olhando novamente as colunas categ\u00f3ricas**","5853910e":"**Vamos ver todas as colunas que temos**","403fd54f":"**Seto 'Gender' em zero, criando coluna gender com todos os dados iguais a zero.**","24312806":"**A maioria dos modelos n\u00e3o aceitam colunas categ\u00f3ricas, dessa forma, precisamos transformar elas em num\u00e9ricas. Tenho duas formas de fazer isso. 1-Criando uma coluna e setando um valor, como 1= female e 0=male. Essa forma de criar uma coluna com uma condicional.\nA 2 forma \u00e9 usando dummies,na qual a pr\u00f3pria fun\u00e7\u00e3o cria sozinha as colunas.**","d93682c9":"**Agora que j\u00e1 ajeitamos as colunas e transformamos as categ\u00f3ricas em num\u00e9ricas, vamos remover as categ\u00f3ricas antigas.**","a9759711":"# **Vamos ver as colunas que possuem nulo**","e641f311":"**Importando Libraries Necess\u00e1rias para o desenvolvimento da an\u00e1lise**","028cbf21":"**Substituindo os nulos pelo valor mais frequente da coluna**","abe45bdd":"**Aqui crio a condi\u00e7\u00e3o: Se coluna Sex == female, ent\u00e3o coluna nova Gender == 1. A condi\u00e7\u00e3o else \u00e9, caso contr\u00e1rio vai ficar como gender est\u00e1, ent\u00e3o os zeros ficam como masculino**","90cfb31f":"**Olhando novamente as colunas num\u00e9ricas**","00fbcbcd":"#**Lidando com colunas categ\u00f3ricas restantes**","26570fba":"**Age \u00e9 uma coluna que n\u00e3o precisa estar em float, pelo contr\u00e1rio, deve ser um n\u00famero inteiro!**","3e9f837b":"**Vamos dar aquela olhada final nas colunas restantes!**","10db3aeb":"**Total de nulos por coluna**","a5806ddf":"# **Vamos ver s\u00f3 as colunas num\u00e9ricas**","5d5ac9e3":"**A outra forma de transformar categ\u00f3rica em num\u00e9rica \u00e9 com dummies... essa fun\u00e7\u00e3o puxa todas as categorias dentro de uma coluna e cria colunas para cada categoria, com valores 1 e 0!**","5d405708":"**An\u00e1lise Explorat\u00f3ria de Dados**\n\nObjetivos de uma EDA:\n\n- Entendermos o dataset que temos: total de linhas, colunas, tipo de dados (string, objeto, float, int) e dados nulos;\n- Limpeza dos dados: Substituir ou remover os dados nulos, remover colunas que n\u00e3o agregam, adicionar colunas que podem vir a ser mais interessantes, transformar os tipos de dados (no exemplo, vamos transformar todos em num\u00e9ricos, uma vez que modelos de ml usam de prefer\u00eancia dados num\u00e9ricos);\n- Visualiza\u00e7\u00e3o da distribui\u00e7\u00e3o dos dados;\n- An\u00e1lise de correla\u00e7\u00e3o dos dados; (n\u00e3o abordado nesse notebook)\n\nFazemos tudo isso por qual motivo? Para por exemplo, colocarmos o dataset preparado em um modelo de ml para gerar uma predi\u00e7\u00e3o, por exemplo. \n","1e9c5e80":"**Remover colunas que n\u00e3o  fazem sentido, seja por possu\u00edrem muitos valores \u00fanicos, seja, por n\u00e3o serem importantes, seja por terem muitos missing.**","ebb91337":"**Vamos ler o arquivo test\n**","75a26935":"**Plotando umas figuras**","85cbced0":"**Total de nulos no dataset**","12551e3b":"**Agora que temos as colunas que importam e todas num\u00e9ricas, vamos gerar um csv para finalizar! Posso usar esse cvs no gretl, ou no h20 colocando em modelos de ml, ou setar um modelo por aqui mesmo, uma vez que o dataset est\u00e1 pronto para uso!** ","1a71f7ba":"**Substituir nulos da coluna Age pela m\u00e9dia de Age**","114cacf1":"# **Vamos ver s\u00f3 as colunas categ\u00f3ricas**","1041a0e9":"#**Lidando com Missing Data - Nulos!**\n\nPosso eliminar as linhas que possuem nulos.\n\ndf=df.dropna()\n\nPosso usar fillna ao inv\u00e9s do isnull\n\ndf.Age.fillna(value=9999)\n\ndf.Age.fillna(np.mean(df.Age))\n\n**Quanto aos dados duplicados:**\n\ndf.nunique() - me mostra quantidade de  valores \u00fanicos\n\ndf.drop_duplicates - remove todas as linhas do dataset que forem duplicadas.\n\ndf.drop_duplicates(subset = 'ID') - remove todas as linhas do dataset em que a coluna ID possuir o 2 valor como duplicado.\n","5e1a3216":"**Se ao menos 1 nulo na coluna, gerar\u00e1 true**"}}