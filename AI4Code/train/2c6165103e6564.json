{"cell_type":{"1b070537":"code","34f20437":"code","7aad2db4":"code","d7dd3559":"code","a3ac98ad":"code","100aee49":"code","7d190a28":"code","55028a44":"code","22bb7007":"code","13c536ae":"code","257d2942":"code","9ab0875a":"code","2f9c3f82":"code","6fa5142c":"code","e2d7e7a9":"code","fe19777b":"code","9a4c0860":"code","58555c39":"code","886d7c0f":"code","d047cc41":"code","67cecb60":"code","5fa6aa28":"code","ed98337f":"markdown"},"source":{"1b070537":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom keras.models import Model\nfrom keras.layers import Input,Dense\nfrom keras.datasets import fashion_mnist\nimport warnings \nwarnings.filterwarnings(\"ignore\")","34f20437":"(x_train,_),(x_test,_) = fashion_mnist.load_data() #don't need y_train and y_test because we apply unsupervised learning","7aad2db4":"x_train = x_train.astype(\"float32\") \/ 255.0\nx_test = x_test.astype(\"float32\") \/ 255.0","d7dd3559":"x_train.shape","a3ac98ad":"x_test.shape","100aee49":"x_train = x_train.reshape((len(x_train),x_train.shape[1:][0]*x_train.shape[1:][1]))","7d190a28":"x_test = x_test.reshape((len(x_test),x_test.shape[1:][0]*x_test.shape[1:][1]))","55028a44":"plt.imshow(x_train[1500].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","22bb7007":"plt.imshow(x_train[1320].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","13c536ae":"plt.imshow(x_train[94].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","257d2942":"input_img = Input(shape=(784,)) #input layer\nencoded1 = Dense(32,activation=\"relu\")(input_img) #1st encoder layer\nencoded2 = Dense(16,activation=\"relu\")(encoded1) #2nd encoder layer\ndecoded = Dense(32,activation=\"relu\")(encoded2) #decoded layer\noutput_layer = Dense(784,activation=\"sigmoid\")(decoded) #output layer\n\nautoencoder = Model(input_img,output_layer)\n\nautoencoder.compile(optimizer=\"rmsprop\",\n                   loss=\"binary_crossentropy\")\n\nhist = autoencoder.fit(x_train,\n                       x_train,\n                       epochs=100,\n                       batch_size=256,\n                       shuffle=True,\n                       validation_data=(x_train,x_train))","9ab0875a":"hist.history.keys()","2f9c3f82":"plt.figure(figsize=(15,6))\nplt.plot(hist.history[\"loss\"],label=\"train loss\")\nplt.plot(hist.history[\"val_loss\"],label=\"validation loss\")\nplt.legend()\nplt.show();","6fa5142c":"encoder = Model(input_img,output_layer)\nencoded_img = encoder.predict(x_test)","e2d7e7a9":"plt.imshow(x_test[1500].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","fe19777b":"plt.imshow(encoded_img[1500].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","9a4c0860":"plt.imshow(x_test[6284].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","58555c39":"plt.imshow(encoded_img[6284].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","886d7c0f":"plt.imshow(x_test[3029].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","d047cc41":"plt.imshow(encoded_img[3029].reshape(28,28))\nplt.axis(\"off\")\nplt.show();","67cecb60":"decoded_imgs = autoencoder.predict(x_test)","5fa6aa28":"n=10\nplt.figure(figsize=(20,4))\nfor i in range(n):\n    #display original\n    ax = plt.subplot(2,n,i+1)\n    plt.imshow(x_test[i].reshape(28,28))\n    plt.axis(\"off\")\n    \n    #display reconstruction\n    ax = plt.subplot(2,n,i + n+1)\n    plt.imshow(decoded_imgs[i].reshape(28,28))\n    plt.axis(\"off\")\nplt.show();","ed98337f":"### Prediction"}}