{"cell_type":{"3675b985":"code","c2fc59a4":"code","0356ad78":"code","7154a65e":"code","d7fb0022":"code","1eaf86ae":"code","dd3ba795":"code","c394aaa0":"code","1d6f1813":"code","25f34829":"code","ebd0dcbb":"code","c898d9f7":"code","9af46b28":"code","531cfb4d":"code","8603bb6d":"code","93f549de":"code","bba94b52":"code","9e175407":"markdown"},"source":{"3675b985":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib as plt\nimport seaborn as sns\n%matplotlib inline\n\n\n\n\n# import all models\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\n\n\n","c2fc59a4":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0356ad78":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","7154a65e":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","d7fb0022":"train_df = train_data.drop(['Ticket', 'Cabin'], axis=1)\ntest_df = test_data.drop(['Ticket', 'Cabin'], axis=1)","1eaf86ae":"train_df = train_df.drop(['Name', 'PassengerId'], axis=1)\ntest_df = test_df.drop(['Name','PassengerId'], axis=1)\n","dd3ba795":"combine = [train_df, test_df]","c394aaa0":"for dataset in combine:\n    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)","1d6f1813":"train_df['Age']=train_df['Age'].fillna(train_df['Age'].mean())\ntest_df['Age']=test_df['Age'].fillna(train_df['Age'].mean())","25f34829":"combine = [train_df, test_df]","ebd0dcbb":"freq_port = train_df.Embarked.dropna().mode()[0]","c898d9f7":"for dataset in combine:\n    dataset['Embarked'] = dataset['Embarked'].fillna(freq_port)\n    \ntrain_df[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","9af46b28":"features = [\"Pclass\", \"Sex\", \"Age\", \"SibSp\", \"Parch\", \"Fare\", \"Embarked\"]","531cfb4d":"\nX_train = pd.get_dummies(train_df[features])\nY_train = train_df[\"Survived\"]\nX_test  = pd.get_dummies(test_df[features])\nX_train.shape, Y_train.shape, X_test.shape","8603bb6d":"X_test[X_test.isna().any(axis=1)]","93f549de":"X_test['Fare']=X_test['Fare'].fillna(X_test['Fare'].mean())","bba94b52":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\n\ndecision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X_train, Y_train)\npredictions = decision_tree.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","9e175407":"for dataset in combine:\n    dataset['Embarked'] = dataset['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\n\ntrain_df.head()"}}