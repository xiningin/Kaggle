{"cell_type":{"63ad5b22":"code","d2733c54":"code","f40ea3d7":"code","53a18bc5":"code","b3100d36":"code","dba53039":"code","0e1251a7":"markdown","1ea22fd8":"markdown","38bc12b7":"markdown","fcc92363":"markdown","261ff3d6":"markdown","dd072028":"markdown"},"source":{"63ad5b22":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier","d2733c54":"data_dir = '\/kaggle\/input\/titanic\/'\n\ntrain = pd.read_csv(data_dir + 'train.csv')\ntest = pd.read_csv(data_dir + 'test.csv')\ntest_id = test.PassengerId\nsample_submission = pd.read_csv(data_dir + 'gender_submission.csv')\n\ntrain.head()","f40ea3d7":"train.drop(columns=[\"PassengerId\", \"Name\", \"Ticket\"], inplace=True)  # All of them are kind of unique identifiers, hence useless for our model\ntest.drop(columns=[\"PassengerId\", \"Name\", \"Ticket\"], inplace=True)\n\ndef train_cats(df):     #Turns Object datatype to Category datatype\n    for col in df.columns:\n        if df[col].dtype == 'O' : \n            df[col] = df[col].astype('category').cat.as_ordered()\n            \ntrain_cats(train)\ntrain_cats(test)\ntrain.info()","53a18bc5":"def fix_missing(df):  #Fixes Missing Values\n    for col in df.columns:\n        if (df[col].dtype == 'int64') or (df[col].dtype == 'float64') or (df[col].dtype == 'bool'):\n            if df[col].isnull().sum() != 0:\n                df[col + '_na'] = df[col].isnull()\n                df[col] = df[col].fillna(df[col].median())\n        else:\n            df[col + '_coded'] = df[col].cat.codes +1\n            df.drop(columns=[col], axis=1, inplace=True)\n            \nfix_missing(train)\nfix_missing(test)\ntrain.info()","b3100d36":"X = train.drop(columns='Survived')\ny = train.Survived\n\nrfc = RandomForestClassifier(n_estimators=200, n_jobs=-1, random_state=10) #default settings\ncross_val_score(rfc, X, y, cv=7, n_jobs=-1, verbose=1).mean()","dba53039":"rfc.fit(X, y)\nsub = rfc.predict(test.drop(columns='Fare_na'))  #Because \nsub_df = pd.DataFrame(data={'PassengerId': test_id, 'Survived': sub})\nsub_df.to_csv('submission.csv', index=False)","0e1251a7":"# Removing Useless Columns and Changing string data to category","1ea22fd8":"# Fixing Missing Values","38bc12b7":"# Reading and Seeing Data","fcc92363":"# Importing Important libraries","261ff3d6":"# Using Random Forest Classifier with K Fold Cross Validation","dd072028":"# Prediction Time"}}