{"cell_type":{"d42405a0":"code","5d7f4549":"code","04c8738d":"code","161ad0be":"code","86a53262":"code","ee014bba":"code","d82f6d57":"code","f28d956a":"code","be525b1d":"code","33c198cb":"code","b0104233":"code","d5ee7716":"code","e2688d3c":"code","172796c7":"code","923d581e":"code","13a3c876":"code","5412d3cd":"code","0155cd1a":"code","adfa9896":"code","e96a2fd3":"code","fda4dcaf":"markdown","0844e5df":"markdown","1a23a369":"markdown","9ab79229":"markdown","def063b1":"markdown","934c6f71":"markdown","6f5ff36a":"markdown","4c1b95df":"markdown","f3dffc50":"markdown","cd854f6b":"markdown","f775c511":"markdown","304bdf86":"markdown"},"source":{"d42405a0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5d7f4549":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n%matplotlib inline","04c8738d":"data = pd.read_csv('..\/input\/top-100-most-streamed-songs-on-spotify\/Top 100 most Streamed - Sheet1.csv')\ndata.head()","161ad0be":"print(\nf'''\nThe dataset has: ROWS: {data.shape[0]}   COLUMNS: {data.shape[1]}\nColumns of dataset are: {list(data.columns)}\n\nTotal null values of dataframe:\n{data.isnull().sum()}\n\nUnique values of dataframes:\n{data.nunique()}\n\nSome general information of datasets:\n{data.describe()}\n\nData types of each columns:\n{data.dtypes}\n''')","86a53262":"music_style = data[['title', 'artist', 'energy', 'danceability', 'popularity']]\n\nartist = music_style.groupby('artist')\n\nenergy = {}\ndance = {}\npopularity = {}\n\nfor art, dfr in artist:\n    energy[art] = round(np.mean(dfr['energy']), 2)\n    dance[art] = round(np.mean(dfr['danceability']), 2)\n    popularity[art] = round(np.mean(dfr['popularity']), 2)\n    \n","ee014bba":"# Energy distribution visualization\n\nenergy_values = list(energy.values())\nenergy_pie_vals = {}\nfor value in energy_values:\n    energy_pie_vals['<50'] = len([k for k in energy_values if k <50])\n    energy_pie_vals['50-70'] = len([k for k in energy_values if (k >= 50) & (k<70)])\n    energy_pie_vals['>70'] = len([k for k in energy_values if (k >= 70)])\n    \nenergy_pie_vals\n\nplt.style.use('fivethirtyeight')\nplt.figure(figsize = (15, 8))\nax2 = plt.axes()\nax1 = plt.axes([0.05, 0.45, 0.4, 0.4])\n\n\nax1.pie(x = list(energy_pie_vals.values()), \n        labels = list(energy_pie_vals.keys()),\n        shadow = True,\n        colors = ['#1debf2', '#d678ff', '#e83838'],\n        explode = (0.05,0.1, 0.05))\n\nax2.bar(x = list(energy_pie_vals.keys()),\n        height = list(energy_pie_vals.values()),\n        color = '#fff387',\n        edgecolor = 'black')\n\nax2.set_title('Energy distribution', fontsize = 18)\nax2.set_xlabel('Energy point', fontsize = 15)\nax2.set_ylabel('Count', fontsize = 15)\nplt.show()","d82f6d57":"# Artist and energy\nfig3, ax3 = plt.subplots(figsize = (15, 20))\nwidth3 = list(energy.values())\n\nax3.barh(y = list(energy.keys()),\n         width = width3, \n         color = '#cb87ff',\n         ec = 'black')\n\nfor i, v in enumerate(width3):\n    ax3.text(100, i-0.1, str(v))\n\nax3.set_title('Artist and energy visualization', fontsize = 18)\nax3.set_xlabel('Energy point', fontsize = 15)\nplt.show()","f28d956a":"fig4, ax4 = plt.subplots(figsize = (15, 20))\nwidth4 = list(dance.values())\n\nax4.barh(y = list(dance.keys()),\n         width = width4, \n         edgecolor = 'black', \n         color = '#f7cf60')\n\nfor i, v in enumerate(width4):\n    ax4.text(100, i-0.1, str(v))\nax4.set_title('Artist and dance ability correlation', fontsize = 18)\nax4.set_xlabel('Dance ability', fontsize = 15)\nax4.set_ylabel('Artist', fontsize = 15)\n\nplt.show()","be525b1d":"fig5, ax5 = plt.subplots(figsize = (15, 20))\nwidth5 = list(popularity.values())\n\nax5.barh(y = list(popularity.keys()),\n         width = width5, \n         edgecolor = 'black', \n         color = '#ff6bfa')\nax5.set_title('Artists and their popularity', fontsize = 18)\nax5.set_xlabel('Popular point', fontsize = 15)\nax5.set_ylabel('Artist', fontsize = 15)\n\nfor i, v in enumerate(width5):\n    ax5.text(100, i, str(v))\n\nplt.show()","33c198cb":"genres = data[['top genre', 'popularity']]\n\ngenres_l = list(genres['top genre'])\n\ngenres_d = {}\ngenres_d['dance pop'] = 28\ngenres_d['pop'] = 11\ngenres_d['dfw rap'] = 7\ngenres_d['modern rock'] = 6\ngenres_d['canadian pop'] = 6\ngenres_d['Other genres (<=4)'] = len([k for k in genres_l if genres_l.count(k) <= 4])\n\ngenres_d","b0104233":"plt.figure(figsize = (15, 8))\n\nax6 = plt.subplot(121)\nax6_ = plt.subplot(122)\nheight6 = list(genres_d.values())\n\nax6.bar(x = list(genres_d.keys()),\n        height = height6,\n        color = '#6bb8ff',\n        edgecolor = 'black')\nfor i, v in enumerate(height6):\n    ax6.text(i-0.1,v+2.5, str(v))\n\ncolors = ['#6bb8ff', '#d99cff', '#ff9cb9', '#fff89c', '#523ce6', '#b442ff']\nax6_.pie(x = height6,\n         labels = list(genres_d.keys()),\n         shadow = True,\n         colors = colors,\n         explode = (0, 0,0 ,0, 0.1, 0.05))\nax6.set_xticks(range(6))\nax6.set_xticklabels(labels = list(genres_d.keys()), rotation = 45)\n\nplt.title('Music Genres Distribution on Spotify survey', fontsize = 18)\nplt.show()","d5ee7716":"plt.style.use('seaborn-white')\nfig7, ax7 = plt.subplots(figsize = (15, 8))\n\nbins7 = range(0, 100, 10)\nax7.hist(x = data['energy'],\n         bins = bins7,\n         histtype = 'step',\n         label = 'Energy')\nax7.hist(x = data['danceability'],\n         bins = bins7, \n         histtype = 'step',\n         label = 'Dance ability')\n\nax7.set_xticks(bins7)\nax7.set_xticklabels(bins7)\nax7.set_title('Histogram of energy and dance ability point of Spotify', fontsize = 18)\nax7.set_xlabel('Point', fontsize = 15)\nax7.set_ylabel('Counts', fontsize = 15)\n\nplt.legend()\nplt.show()","e2688d3c":"plt.style.use('fivethirtyeight')\nfig8, ax8 = plt.subplots(figsize = (15, 8))\n\nenergy_dance = data[['energy', 'danceability']].sort_values('energy', ascending = True)\n\nax8.plot(energy_dance.energy,\n         energy_dance.danceability, 'r')\n\nax8.set_title('Energy and danceability correlation', fontsize = 18)\nax8.set_xlabel('Energy point', fontsize = 15)\nax8.set_ylabel('Dance ability point', fontsize = 15)\nplt.show()\n\n\n# We can see there is no a clear correlation of eneryg and dance ability","172796c7":"bpm_df = data[['beats.per.minute', 'energy', 'danceability']].sort_values('beats.per.minute')\nbpm_df","923d581e":"fig9, ax9 = plt.subplots(figsize = (20, 8))\n\nax9.plot(bpm_df['beats.per.minute'],\n         bpm_df.energy, label = 'Energy')\nax9.plot(bpm_df['beats.per.minute'],\n         bpm_df.danceability, label = 'Dance', color = 'red')\n\nax9.set_title('Beats per minute and energy\/dance ability correlation', fontsize = 18)\nax9.set_xlabel('BPM')\nax9.set_ylabel('Point')\n\nplt.legend()\nplt.show()","13a3c876":"energy_acoustic = data[['artist', 'energy', 'acousticness']]\nenergy_first = energy_acoustic.sort_values('energy')\nacoustic_first = energy_acoustic.sort_values('acousticness')\n\nenergy_first","5412d3cd":"fig10, ax10 = plt.subplots(figsize = (15, 8))\n\nax10.tick_params(axis = 'y', color = 'blue')\nax10.hist(x = energy_first.energy,\n          bins = range(0, 100, 10),\n          ec = 'black',\n          label = 'Energy')\n\nax10_ = ax10.twinx()\nax10_.tick_params(axis = 'y', color = 'red')\nax10_.plot(energy_first.energy, energy_first.acousticness, color = 'red', label = 'Acoustic')\n\nax10.set_xlabel('Energy', fontsize = 15)\nax10.set_ylabel('Count', fontsize = 15, color = 'blue')\nax10_.set_ylabel('Acousticness', fontsize = 15, color = 'red')\nax10_.set_title('Energy and acousticness', fontsize = 18)\n\nplt.legend()\nplt.show()","0155cd1a":"ener_ac_pop = data[['energy', 'acousticness', 'popularity']]\n\ndef get_top_5(df, column):\n    result = df[[column, 'popularity']].sort_values(column, ascending = False)\n    return result.head(5)\n\ntop5_energy = get_top_5(ener_ac_pop, 'energy')\ntop5_acou = get_top_5(ener_ac_pop, 'acousticness')\n\ntop5_energy = top5_energy.sort_values('energy', ascending = True)\ntop5_acou = top5_acou.sort_values('acousticness', ascending = True)\n","adfa9896":"fig11, ax11 = plt.subplots(nrows = 1, ncols = 2, figsize = (15, 8), sharey = True)\n\nax11[0].bar(x = top5_energy.energy, height = top5_energy.popularity)\nax11[1].bar(x = top5_acou.acousticness, height = top5_acou.popularity, color = 'yellow')\n\nax11[0].set_xlabel('Top 5 energy point', fontsize = 15)\nax11[1].set_xlabel('Top 5 acousticness point', fontsize = 15)\nax11[0].set_ylabel('Popularity', fontsize = 15)\n\nfig11.suptitle('Popularity of energy and acoustic music comparision', fontsize = 18)\nplt.show()","e96a2fd3":"fig12, ax12 = plt.subplots(figsize = (15, 8))\ntop5_energy = top5_energy.sort_values('popularity', ascending = True)\ntop5_acou = top5_acou.sort_values('popularity', ascending = True)\n\nax12.plot(top5_energy.popularity,\n          top5_energy.energy,\n          label = 'Energy',\n          color = 'red')\nax12.plot(top5_acou.popularity, \n          top5_acou.acousticness,\n          label = 'Acoustic',\n          color = '#3449eb')\n\nax12.set_title('Popularity of energetic and acoustic music comparision', fontsize = 18)\nax12.set_xlabel('Popularity', fontsize = 15)\nax12.set_ylabel('Point', fontsize = 15)\n\nplt.legend()\nplt.show()","fda4dcaf":"### Energy and danceability correlation of artist","0844e5df":"### Top 5 energy and acoustic artist","1a23a369":"#### Energy and artist correlation","9ab79229":"#### Top 5 energetic artist and their acousticness","def063b1":"### Music style of artist( accorrding to energy, danceability, popularity)","934c6f71":"## Genre comparision","6f5ff36a":"### Overview the data","4c1b95df":"### Import some important library","f3dffc50":"### Energy, acousticness and popularity","cd854f6b":"### bpm and energy, dance ability correlation","f775c511":"### Artist and dance ability correlation","304bdf86":"### Artist and popularity correlation"}}