{"cell_type":{"86ed0e96":"code","2607095e":"code","a2af1a0e":"code","913d92e0":"code","c9dff68f":"code","a639d290":"code","6e731e46":"code","10fe52ae":"code","84ffb7f1":"code","d8ad76b2":"code","89907c82":"code","d36f5356":"code","a0ec3b9d":"code","c5e4ccbf":"code","78c0fd97":"code","eab6de30":"code","8f6c225c":"code","d15abb86":"code","a85065da":"code","b4edf04d":"code","9b9982a6":"markdown","05df209f":"markdown","006ca432":"markdown","039cf080":"markdown","1835afcc":"markdown","103ed086":"markdown","44a2df75":"markdown"},"source":{"86ed0e96":"#import necessary libraries\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport datetime\nfrom plotly.subplots import make_subplots","2607095e":"# current version of seaborn generates a bunch of warnings that we'll ignore\nimport warnings \nwarnings.filterwarnings(\"ignore\")","a2af1a0e":"file = r'..\/input\/crimes-in-boston\/crime.csv'\ncrime = pd.read_csv(file, sep=',', encoding='latin-1')","913d92e0":"crime.head()","c9dff68f":"crime.describe(include='all')","a639d290":"# Rename columns to something easier to type (the all-caps are annoying!)\nrename = {'OFFENSE_CODE_GROUP':'Group',\n         'OFFENSE_DESCRIPTION':'Description',\n         'DISTRICT':'District',\n         'REPORTING_AREA':'Area',\n         'SHOOTING':'Shooting',\n         'OCCURRED_ON_DATE':'Date',\n         'YEAR':'Year',\n         'MONTH':'Month',\n         'DAY_OF_WEEK':'Day',\n         'HOUR':'Hour',\n         'STREET':'Street'}\ncrime.rename(index=str, columns=rename, inplace=True)","6e731e46":"#Convert into date time format\ncrime['Date'] = pd.to_datetime(crime['Date'])","10fe52ae":"# more data info\nprint(crime.dtypes)\nprint('+-'*20)\nprint(crime.isnull().sum())\nprint('+-'*20)\nprint(crime.shape)","84ffb7f1":"# Fill in nans in SHOOTING column\ncrime.Shooting.fillna('N', inplace=True)","d8ad76b2":"#since there are a number if crime types, lets first plot ways to pick the top crimes\ncrime_count = crime['Group'].value_counts()\nvalues =crime_count.values\ncategories = pd.DataFrame(data=crime_count.index, columns=[\"Group\"])\ncategories['values'] = values","89907c82":"px.treemap(categories, title='Major Crimes in Boston', path=['Group'], values=categories['values'], height=700,\n          color_discrete_sequence = px.colors.sequential.RdBu)","d36f5356":"# Lets also plot a bar plot for the top 10 crimes\nGroup=categories['Group'][0:10]\nValues=categories['values'][0:10]\n\nfig=px.bar(categories, x=Group,\n           y=Values, \n           title= 'Top 10 crimes in Boston', \n           color=categories['Group'][0:10], \n           height=400)\n\nfig.update_layout(\n    xaxis_title_text='Crime', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1)\n    \nfig.show()","a0ec3b9d":"crimes_year = crime['Year'].value_counts()\nyearly = pd.DataFrame(data=crimes_year.index, columns = ['Year'])\nyearly['values']=crimes_year.values","c5e4ccbf":"fig = px.pie(yearly, values='values', names='Year', color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","78c0fd97":"crimes_month = crime['Month'].value_counts()\nmonthly = pd.DataFrame(data=crimes_month.index, columns = ['Month'])\nmonthly['values']=crimes_month.values","eab6de30":"fig=px.bar(monthly, x=monthly['Month'],\n           y=monthly['values'], \n           title= 'Monthly Crime breakdown', \n           color=monthly['Month'], \n           height=400)\n\nfig.update_layout(\n    xaxis_title_text='Month', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1)\n    \nfig.show()","8f6c225c":"crimes_day= crime['Day'].value_counts()\ndaily = pd.DataFrame(data=crimes_day.index, columns = ['Day'])\ndaily['values']=crimes_day.values","d15abb86":"fig=px.bar(daily, x=daily['Day'],\n           y=daily['values'], \n           title= 'Daily Crime breakdown', \n           color=daily['Day'], \n           height=400)\n\nfig.update_layout(\n    xaxis_title_text='Day', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1)\n    \nfig.show()","a85065da":"crimes_hour= crime['Hour'].value_counts()\nhourly = pd.DataFrame(data=crimes_hour.index, columns = ['Hour'])\nhourly['values']=crimes_hour.values","b4edf04d":"fig=px.bar(daily, x=hourly['Hour'],\n           y=hourly['values'], \n           title= 'Hourly Crime breakdown', \n           color=hourly['Hour'], \n           height=400)\n\nfig.update_layout(\n    xaxis_title_text='Hour', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    bargap=0.2, \n    bargroupgap=0.1)\n    \nfig.show()","9b9982a6":"- Motor Vehicle Accident Response is the top crime followed by Larceny as illustrations.\n- Should we now check the top crimes per year? May be this is different, lets check.","05df209f":"## Data Exploration","006ca432":"## Yearly crime Rate","039cf080":"#### Observations\n- Friday's crime rate is more. And Sunday is the least. \n- June, July, August has a higher crime rate on an average. \n- Evenings had the highest crimes and early mornings the least.","1835afcc":"- 2015 has the least, increased further in 2016 and 2017 but dropped significantly in 2018. May be it is becuase data is from June 2015 to Sep 2018. we need a monthly analysis now.","103ed086":"### Focusing on top crimes","44a2df75":"## Monthly Analysis"}}