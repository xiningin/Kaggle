{"cell_type":{"0b62b144":"code","0773a2c2":"code","583ef6e2":"code","31385645":"code","faa5bd3c":"code","7f06e381":"code","0431a6e6":"code","5845d7f0":"code","00f99077":"code","2f30666e":"code","e1987cda":"code","9e55c757":"code","85d08a87":"code","7c82d16a":"code","53bfe5cc":"code","2c1e84a7":"code","e8ed5328":"code","4c6e807d":"code","aabc2136":"code","6293e26d":"code","bea20c5e":"code","516c1b0f":"code","8cb88388":"code","e0d68849":"markdown","0b91a3af":"markdown","42eaad49":"markdown","495d3c88":"markdown","6ed080d7":"markdown","ec44feaa":"markdown","b0ba244b":"markdown","a7d529a4":"markdown","72499854":"markdown","a12c5a00":"markdown","c0bbec06":"markdown","eac127d3":"markdown","7d4c0231":"markdown","a89dcc14":"markdown","93299721":"markdown","42866e6d":"markdown","641add82":"markdown","683103d4":"markdown","00663680":"markdown","c01c103e":"markdown","e4fac5a2":"markdown","f205b401":"markdown"},"source":{"0b62b144":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0773a2c2":"#pipeline\nimport pandas as pd\nimport random as rd, matplotlib.pyplot as plt, math , graphviz , seaborn as sns\n\n#Model_Selection\nfrom sklearn.model_selection import train_test_split, cross_val_score, KFold, StratifiedKFold\n\n#models\nfrom sklearn.linear_model import LogisticRegression\n#\nfrom sklearn.neighbors import KNeighborsClassifier\n#\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\n\n#Hyperparamenter\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\n\n#Metrics\nfrom sklearn.metrics import confusion_matrix, roc_curve, roc_auc_score\n\n#preprocessing\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler,  MaxAbsScaler, normalize","583ef6e2":"data = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")","31385645":"data.head()","faa5bd3c":"data.describe(percentiles= [0,.25,.5,.75])","7f06e381":"df = data.drop(\"pelvic_tilt numeric\",axis=1).copy()","0431a6e6":"print(\"\"\"\nWe have {0} RX patients and we are going to use {1} features.\n\"\"\".format(df.drop(\"class\",axis=1).shape[0],df.drop(\"class\",axis=1).shape[1]))","5845d7f0":"df['class'].value_counts()","00f99077":"numerical = df.select_dtypes(exclude= 'object')\nnumerical_corr = numerical.corr()\nf,ax=plt.subplots(figsize=(10,8))\nsns.heatmap(numerical_corr)\nplt.title(\"Numerical Features Correlation\", weight='bold', fontsize=18)\nplt.xticks(weight='bold')\nplt.yticks(weight='bold', color='dodgerblue')\n\nplt.show()","2f30666e":"numerical_corr.head()","e1987cda":"fig, ((ax1, ax2),(ax3, ax4)) = plt.subplots(2,2,figsize=(16,12))\n\nax1.hist(x=df[\"degree_spondylolisthesis\"], color='#0504aa',alpha=0.7)\nax1.set_title('Histogram Spondylolisthesis',fontdict={'fontsize': 14,'fontweight': 'bold'})\nax1.set( ylabel='Frequency') \n\nax2.scatter(x=data[\"degree_spondylolisthesis\"], y = data[\"pelvic_incidence\"], color = 'blue', alpha = 0.5)\nax2.set_title('Pelvic Incidence vs Spondylolisthesis',fontdict={'fontsize': 14,'fontweight': 'bold'})\nax2.set( ylabel='Pelvic Incidence') \n\nax3.scatter(x=data[\"degree_spondylolisthesis\"], y = data[\"sacral_slope\"], color = 'blue', alpha = 0.5)\nax3.set_title('Sacral Slope vs Spondylolisthesis',fontdict={'fontsize': 14,'fontweight': 'bold'})\nax3.set(xlabel='Degree of Spondylolisthesis', ylabel='Sacral Slope') \n\nax4.scatter(x=data[\"degree_spondylolisthesis\"], y = data[\"pelvic_radius\"], color = 'blue', alpha = 0.5)\nax4.set_title('Pelvic Radius vs Spondylolisthesis',fontdict={'fontsize': 14,'fontweight': 'bold'})\nax4.set(xlabel='Degree of Spondylolisthesis', ylabel='Pelvic Radius') \n\nplt.show()","9e55c757":"df.isnull().sum()","85d08a87":"fig = plt.figure(figsize=(20,8))\n\nax1 = plt.subplot2grid((1,2),(0,0))\nplt.hist(x=df[\"degree_spondylolisthesis\"], color='#0504aa',alpha=0.7)\nplt.title('Histogram Spondylolisthesis')\nplt.axvline(x=200,color='r',linestyle = '-')\n\nax1 = plt.subplot2grid((1,2),(0,1))\nfilter_spond = df[\"degree_spondylolisthesis\"] < 200\nplt.hist(x=df[filter_spond][\"degree_spondylolisthesis\"], color='#0504aa',alpha=0.7)\nplt.title('Histogram Spondylolisthesis Filtred')\nplt.show()","7c82d16a":"plt.hist(df['pelvic_radius'])\nplt.show()","53bfe5cc":"df = df[filter_spond].copy()","2c1e84a7":"x=df.drop(\"class\",axis=1).copy()\ntarget=df['class']\ny= pd.get_dummies(target)['Abnormal']","e8ed5328":"valores_C = np.array([0.01,0.1,0.5,1,2,3,5,10,20,50,100])\nregularizacao = ['l2']\nvalores_grid= {'C':valores_C, 'penalty': regularizacao}\n\nkfold = StratifiedKFold(n_splits=5)\n\nmodelo = LogisticRegression()\n\ngrid_regressao_logistica = GridSearchCV(modelo,param_grid = valores_grid, cv=  5)\ngrid_regressao_logistica.fit(x,y)","4c6e807d":"print(\"\"\"\nMelhor acur\u00e1cia: {0};\nPar\u00e2metro C: {1};\nRegulariza\u00e7\u00e3o: {2};\n\"\"\".format(grid_regressao_logistica.best_score_,\n           grid_regressao_logistica.best_estimator_.C,\n           grid_regressao_logistica.best_estimator_.penalty))","aabc2136":"x_treino,x_teste, y_treino, y_teste = train_test_split(x,y,test_size= 0.30,random_state=14)\n\nmodelo = LogisticRegression(C=0.1, penalty = 'l2')\nmodelo.fit(x_treino,y_treino)\npredicao = modelo.predict(x_teste)\nmatrix = confusion_matrix(y_teste,predicao)\nprint(matrix)","6293e26d":"#Normaliando os dados para trabalhar com dist\u00e2ncia\n\nnormalizadores = [MinMaxScaler(feature_range= (0,1)),\n                  StandardScaler(),\n                  MaxAbsScaler()]\n\nfor normalizador in normalizadores:\n  X_norm = normalizador.fit_transform(x)\n\n\n  #Hyperparameter\n  valores_k = np.array([3,5,7,9,11])\n  calculo_distancia = ['minkowski', 'chebyshev']\n  valores_p = np.array([1,2,3,4])\n  valores_grid = {'n_neighbors':valores_k, 'metric':calculo_distancia, 'p':valores_p }\n\n  #modelo\n  modelo = KNeighborsClassifier()\n\n  #Criando os grid\n  gridKNN = GridSearchCV(estimator= modelo , param_grid= valores_grid, cv = 5)\n  gridKNN.fit(X_norm,y)\n\n\n  #resultado\n  print(\"\"\"\n  Melhor acur\u00e1cia: {0};\n  Melhor K: {1};\n  Melhor Dist\u00e2ncia: {2};\n  Melhor p: {3};\n  {4}\n\n  \"\"\".format(gridKNN.best_score_,\n            gridKNN.best_estimator_.n_neighbors,\n            gridKNN.best_estimator_.metric,\n            gridKNN.best_estimator_.p,\n            normalizador))\n\n\n#Normaliando os dados para trabalhar com dist\u00e2ncia\n\nnormalizadores = [[normalize(x, norm='l1'), normalize(x, norm='l2'), normalize(x, norm='max')] ,\n                  ['normalize-l1', 'normalize-l2','normalize-max']]\n\nfor normalizador,tipo in zip(normalizadores[0],normalizadores[1]):\n  X_norm = normalizador\n\n\n  #Hyperparameter\n  valores_k = np.array([3,5,7,9,11])\n  calculo_distancia = ['minkowski', 'chebyshev']\n  valores_p = np.array([1,2,3,4])\n  valores_grid = {'n_neighbors':valores_k, 'metric':calculo_distancia, 'p':valores_p }\n\n  #modelo\n  modelo = KNeighborsClassifier()\n\n\n  #Criando os grid\n  gridKNN = GridSearchCV(estimator= modelo , param_grid= valores_grid, cv = 5)\n  gridKNN.fit(X_norm,y)\n\n\n  #resultado\n  print(\"\"\"\n  Melhor acur\u00e1cia: {0};\n  Melhor K: {1};\n  Melhor Dist\u00e2ncia: {2};\n  Melhor p: {3};\n  {4}\n\n  \"\"\".format(gridKNN.best_score_,\n            gridKNN.best_estimator_.n_neighbors,\n            gridKNN.best_estimator_.metric,\n            gridKNN.best_estimator_.p,\n            tipo))","bea20c5e":"normalizador = StandardScaler()\nX_norm = normalizador.fit_transform(x)\n\n\nx_treino,x_teste, y_treino, y_teste = train_test_split(X_norm,y,test_size= 0.30,random_state=14)\n\nmodelo = KNeighborsClassifier(n_neighbors=7,metric= 'chebyshev', p=1 )\nmodelo.fit(x_treino,y_treino)\npredicao = modelo.predict(x_teste)\nmatrix = confusion_matrix(y_teste,predicao)\nprint(matrix)","516c1b0f":"#Definindo valores que ser\u00e3o testados em DecisionTree\nminimos_split = np.array([2,3,4,5,6,7,8])\nmaximo_nivel = np.array([3,4,5,6,7,8,9,10,11])\nalgoritmo = ['gini', 'entropy']\nvalores_grid = {'min_samples_split': minimos_split, 'max_depth': maximo_nivel, 'criterion': algoritmo}\n#model\nmodelo = DecisionTreeClassifier()\n\n#Criando as grid\ngriDecisionTree = GridSearchCV(estimator=modelo, param_grid= valores_grid, cv = 5)\ngriDecisionTree.fit(x,y)\n\n#Imprimindo melhores par\u00e2metros\n\nprint(\"\"\"\nO Melhor Split: {0};\nM\u00e1xima Profundidade: {1};\nAlgoritmo escolhido: {2};\nAcur\u00e1cia: {3}\n\"\"\".format(griDecisionTree.best_estimator_.min_samples_split,\n           griDecisionTree.best_estimator_.max_depth,\n           griDecisionTree.best_estimator_.criterion,\n           griDecisionTree.best_score_))","8cb88388":"x_treino,x_teste, y_treino, y_teste = train_test_split(x,y,test_size= 0.30,random_state=14)\n\nmodelo = DecisionTreeClassifier(min_samples_split=5,max_depth=6)\nmodelo.fit(x_treino,y_treino)\npredicao = modelo.predict(x_teste)\nmatrix = confusion_matrix(y_teste,predicao)\nprint(matrix)","e0d68849":"## Machine Learning","0b91a3af":"Pelvic_Incidence (PI):\n1. The angle of incidence is the algebraic sum of two complementary angles: pelvic tilt (PT) and sacral slope (SS)\n\n  ![alt text](https:\/\/i.ibb.co\/1bSwkWg\/Screen-Shot-2020-05-27-at-15-10-53.png\")\n\n\nPelvic_Tilt_Numeric:\n1. Pelvic tilt is the angle between a vertical line and the CS segment\n\nLumbar_Lordosis_Angle\n1. The position of the lumbar spine, which is attached to the sacral plateau, is thus affected by the pelvic position. Consequently, the pelvic parameters affect the entire underlying sagittal profile of the spine. In conclusion, the greater the incidence, the greater the sacral slope and the higher the degree of lumbar lordosis \n\n  ![alt text](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC3175921\/bin\/586_2011_1940_Fig10_HTML.jpg)\n\n\nSacral_Slope:\n1. The degree of the sacral slope determines the position of the lumbar spine, since the sacral plateau forms the base of the spine\n\nPelvic_Radius:\n1. Jackson\u2019s pelvic radius technique involves measurements based on a line drawn between the hip axis and the posterior corner of S1 (PR)\n  ![alt text](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC3175921\/bin\/586_2011_1940_Fig12_HTML.jpg)\n\n  \nDegree_Spondylolisthesis:\n1. Spondylolisthesis can be described according to its degree of severity\n  ![alt text](https:\/\/i.ibb.co\/XpmbDSR\/Screen-Shot-2020-05-27-at-15-24-50.png\")\n\n\n\n\n\n\n\n\nbiografy:\nhttps:\/\/www.spineuniverse.com\/conditions\/spondylolisthesis\/spondylolisthesis-back-condition-treatment ; \nhttps:\/\/en.wikipedia.org\/wiki\/Pelvic_tilt ;\nhttps:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC3175921\/","42eaad49":"## KNN","495d3c88":"## Decision Tree","6ed080d7":"As we can see, there is no null values on this dataset.","ec44feaa":"Lets have a look for the different types of the Class, our target.","b0ba244b":"Lets have a look to the correlation of the features, in order to have a first idea of the connections between features.","a7d529a4":"Normalizing features","72499854":"Defining y\n* 1 - Abnormal\n* 0 - Normal","a12c5a00":"Our goal here is to predict the class of a patiant.\n\n**\"Class\"** is our target","c0bbec06":"### Logistic Regression","eac127d3":"## Variables Definition","7d4c0231":"We realize that \"pelvic_incidence\" and \"sacral_slope\"|\"lumbar_lordosis_angle\" have a high correlation.\n\nWe know that the correlation of SS and PI is True, the pelvic incidence is created by SS.\n\nNow, lets take a look about the corr on Lumbar Lordosis and Pelvic Incidence","a89dcc14":"## Data Comprehension","93299721":"## Considerations","42866e6d":"We will drop all Spondylolisthesis > 200","641add82":"# Exploratory Data Analysis","683103d4":"## Data Cleaning","00663680":"## Outlier Detection","c01c103e":"Since Pelvic Incidence is already PT + SS; We will drop PT and only use PI and SS","e4fac5a2":"Still working...","f205b401":"\n\nObs.: Still working on this kernel"}}