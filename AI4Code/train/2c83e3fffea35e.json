{"cell_type":{"a1e945a6":"code","e30c52b4":"code","7b77e884":"code","c8e01ee3":"code","07f6decd":"code","9c8666ce":"code","9da278ec":"code","0240b132":"code","c52b3f12":"code","9784a3d0":"code","f197519d":"code","32df6f90":"markdown","5e3fd17b":"markdown","5fa0a263":"markdown","3b7d32bc":"markdown","7d8b820c":"markdown","d920d47f":"markdown"},"source":{"a1e945a6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n# Any results you write to the current directory are saved as output.","e30c52b4":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(16,(3,3),activation='relu',input_shape=(28,28,1)),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Conv2D(32,(3,3),activation='relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Conv2D(64,(3,3),activation='relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(512,activation='relu'),\n    tf.keras.layers.Dense(10,activation='softmax')\n])","7b77e884":"training_data = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest_data = pd.read_csv('..\/input\/digit-recognizer\/test.csv').to_numpy()\ntraining_label = training_data['label'].to_numpy()\ntraining_data = training_data.drop('label',axis=1).to_numpy()\nsample_data = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\n","c8e01ee3":"model.compile(optimizer='rmsprop',loss='sparse_categorical_crossentropy',metrics=['accuracy'])","07f6decd":"training_data = training_data.reshape(-1,28, 28, 1)\nmodel.fit(training_data,training_label,epochs=15,validation_data=(training_data[800:1000],training_label[800:1000]))","9c8666ce":"print('training_labels : ',training_label[:5])\n","9da278ec":"test_data = test_data.reshape(-1,28, 28, 1)\npredictions = model.predict_classes(test_data)","0240b132":"predictions","c52b3f12":"a=0\nb=1\nfor i in range(10):\n    data = np.reshape(test_data[a:b],(28,28))\n    plt.imshow(data,cmap='gray')\n    plt.title('Predicted Value : '+str(predictions[a:b]))\n    plt.show()\n    a+=1\n    b+=1","9784a3d0":"sample_data['Label']=predictions\nsample_data.head()","f197519d":"sample_data.to_csv('sample_submission.csv',index=False)","32df6f90":"# DATA VISUALIZATION","5e3fd17b":"# Dataframe Creation","5fa0a263":"# TESTING DATA CLASSIFICATION","3b7d32bc":"# MODEL TRAINING\nThe final Accuracy obtained is 97%","7d8b820c":"# Model Compilation","d920d47f":"# MODEL CREATION\n   I used Convolutiona Neural Network(CNN) for making the classifier.\n![](https:\/\/miro.medium.com\/max\/2216\/1*0NwaOkzvom6YpMZoIgWTiQ.png)   "}}