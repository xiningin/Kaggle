{"cell_type":{"ceb1f7f2":"code","c5d6b368":"code","a7f5761f":"code","250eb881":"code","74ebf8f0":"code","717e0d13":"code","526adc45":"code","7d918c9f":"code","d3490ce8":"code","b220cad4":"code","5200d333":"code","04e533a0":"code","1ab52ad7":"code","4e5904fd":"code","b23c3d3a":"code","d012b43e":"code","30bae37b":"code","3cd04ea7":"code","0fe6c6ca":"code","5b923e80":"code","f60da0a2":"code","b52d34cb":"code","a6ae9da4":"code","fa1f1759":"code","93e1b083":"code","c1cb38ff":"code","a530ef37":"code","39486e23":"code","5eab67d8":"code","f2e7929d":"code","3404e08f":"code","b555cb26":"code","a23cd5b3":"code","ddcdccf1":"code","d5e07fa9":"code","bba6ef0a":"code","deecf32a":"code","f5a59269":"code","dbc53b7d":"markdown","269167c7":"markdown","353d527e":"markdown","a4e89aa7":"markdown","41a9bdc8":"markdown"},"source":{"ceb1f7f2":"!pip install imutils\n!pip install image-classifiers==1.0.0b1","c5d6b368":"# import the necessary packages\nimport tensorflow as tf\nimport gc\nfrom tensorflow.keras.optimizers import SGD,RMSprop\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications import VGG19\nfrom tensorflow.keras.layers import AveragePooling2D\nfrom tensorflow.keras.layers import Dropout, GlobalAveragePooling2D, Activation, BatchNormalization, Dropout, LSTM, ConvLSTM2D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Input,Conv2D, SeparableConv2D, MaxPool2D, LeakyReLU, Activation, LSTM, ConvLSTM2D, Lambda, Reshape, BatchNormalization, Bidirectional\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau, ModelCheckpoint,TensorBoard,TerminateOnNaN, LearningRateScheduler\nfrom tensorflow.keras.losses import binary_crossentropy\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping, ReduceLROnPlateau, TerminateOnNaN\nfrom tensorflow.keras.layers import Lambda, Reshape, DepthwiseConv2D, ZeroPadding2D, Add, MaxPooling2D,Activation, Flatten, Conv2D, Dense, Input, Dropout, Concatenate, GlobalMaxPooling2D, GlobalAveragePooling2D, BatchNormalization\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras import regularizers\nfrom tensorflow.keras import backend as K\n\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, RepeatedStratifiedKFold\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix, roc_auc_score, roc_curve, auc\nfrom imutils import paths\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport random\nimport shutil\nimport cv2\nimport os\nfrom datetime import datetime\n%load_ext tensorboard","a7f5761f":"# from __future__ import absolute_import, division, print_function, unicode_literals\n# print(\"Num GPUs Available: \", len(tf.config.experimental.list_physical_devices('GPU')))\n# tf.config.experimental.list_physical_devices('GPU')\n# tf.debugging.set_log_device_placement(True)","250eb881":"dataset_path = '.\/dataset'\nlog_path = '.\/logs'","74ebf8f0":"%%bash\nrm -rf dataset\nmkdir -p dataset\/covid\nmkdir -p dataset\/normal\nmkdir -p dataset\/pneumonia\nmkdir -p out\nmkdir -p logs","717e0d13":"##..\/input\/augmented-covid19-datasets\nlen(os.listdir('..\/input\/augmented-covid19-datasets\/Augmented-COVID-19'))","526adc45":"covid_dataset_input_path1 = '..\/input\/augmented-covid19-datasets\/Augmented-COVID-19'\ncovid_dataset_output_path = '..\/working\/dataset\/covid'\nsrc_files = os.listdir(covid_dataset_input_path1)\nfor file_name in src_files:\n    full_file_name = os.path.join(covid_dataset_input_path1, file_name)\n    if os.path.isfile(full_file_name):\n        shutil.copy(full_file_name, covid_dataset_output_path)","7d918c9f":"len(os.listdir('..\/working\/dataset\/covid'))","d3490ce8":"## chest-xray-covid19-pneumonia\nlen(os.listdir('..\/input\/chest-xray-covid19-pneumonia\/Data\/test\/COVID19'))","b220cad4":"covid_dataset_input_path2 = '..\/input\/chest-xray-covid19-pneumonia\/Data\/test\/COVID19'\ncovid_dataset_output_path = '..\/working\/dataset\/covid'\nsrc_files = os.listdir(covid_dataset_input_path2)\nfor file_name in src_files:\n    full_file_name = os.path.join(covid_dataset_input_path2, file_name)\n    if os.path.isfile(full_file_name):\n        shutil.copy(full_file_name, covid_dataset_output_path)","5200d333":"len(os.listdir('..\/working\/dataset\/covid'))","04e533a0":"len(os.listdir('..\/input\/chest-xray-covid19-pneumonia\/Data\/train\/COVID19'))","1ab52ad7":"covid_dataset_input_path3 = '..\/input\/chest-xray-covid19-pneumonia\/Data\/train\/COVID19'\ncovid_dataset_output_path = '..\/working\/dataset\/covid'\nsrc_files = os.listdir(covid_dataset_input_path3)\nfor file_name in src_files:\n    full_file_name = os.path.join(covid_dataset_input_path3, file_name)\n    if os.path.isfile(full_file_name):\n        shutil.copy(full_file_name, covid_dataset_output_path)","4e5904fd":"len(os.listdir('..\/working\/dataset\/covid'))","b23c3d3a":"## covid19-sirm-database\nlen(os.listdir('..\/input\/covid19-sirm-database\/COVID-19'))","d012b43e":"covid_dataset_input_path4 = '..\/input\/covid19-sirm-database\/COVID-19'\ncovid_dataset_output_path = '..\/working\/dataset\/covid'\nsrc_files = os.listdir(covid_dataset_input_path4)\nfor file_name in src_files:\n    full_file_name = os.path.join(covid_dataset_input_path4, file_name)\n    if os.path.isfile(full_file_name):\n        shutil.copy(full_file_name, covid_dataset_output_path)","30bae37b":"len(os.listdir('..\/working\/dataset\/covid'))","3cd04ea7":"covid_dataset_input_path5 = '..\/input\/covid19-chest-xray-image-repository\/covid19'\ncovid_dataset_output_path = '..\/working\/dataset\/covid'\nsrc_files = os.listdir(covid_dataset_input_path5)\nfor file_name in src_files:\n    full_file_name = os.path.join(covid_dataset_input_path5, file_name)\n    if os.path.isfile(full_file_name):\n        shutil.copy(full_file_name, covid_dataset_output_path)","0fe6c6ca":"len(os.listdir('..\/working\/dataset\/covid'))","5b923e80":"covid_dataset_input_path6 = '..\/input\/covid19imagerepositoryfrom\/covid-19-image-repository-master'\ncovid_dataset_output_path = '..\/working\/dataset\/covid'\ncsvPath = os.path.sep.join([covid_dataset_input_path6, \"data.csv\"])\ndf = pd.read_csv(csvPath)\n\nfor (i, row) in df.iterrows():\n    if row[\"projection\"] != \"pa\":\n        continue\n\n    imagePath = os.path.sep.join([covid_dataset_input_path6, \"png\", (row[\"image_id\"]+\".png\")])\n#     print(imagePath)\n\n    if not os.path.exists(imagePath):\n        continue\n\n    filename = (row[\"image_id\"]+\".png\")\n    outputPath = os.path.sep.join([f\"{dataset_path}\/covid\", filename])\n#     print(outputPath)\n\n    shutil.copy2(imagePath, outputPath)","f60da0a2":"len(os.listdir('..\/working\/dataset\/covid'))","b52d34cb":"## NIH Chest X-rays\nlen(os.listdir('..\/input\/data\/images_012\/images'))","a6ae9da4":"csvPath = '..\/input\/data\/Data_Entry_2017.csv'\ndf = pd.read_csv(csvPath)\n\nfor (i, row) in df.iterrows():\n    # if (1) the current case is not COVID-19 or (2) this is not\n    # a 'PA' view, then ignore the row\n    if row[\"Finding Labels\"] != \"Pneumonia\" or row[\"View Position\"] != \"PA\":\n        continue\n\n    if os.path.exists(os.path.sep.join(['..\/input\/data\/images_001', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_001', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_002', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_002', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_003', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_003', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_004', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_004', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_005', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_005', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_006', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_006', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_007', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_007', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_008', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_008', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_009', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_009', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_010', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_010', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_011', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_011', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    elif os.path.exists(os.path.sep.join(['..\/input\/data\/images_012', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_012', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n    else:\n        continue\n","fa1f1759":"len(os.listdir('..\/working\/dataset\/pneumonia'))","93e1b083":"## covid19 = 2313\nsamples = 2137","c1cb38ff":"pneumonia_dataset_path ='..\/input\/chest-xray-pneumonia\/chest_xray'","a530ef37":"basePath = os.path.sep.join([pneumonia_dataset_path, \"train\", \"PNEUMONIA\"])\nimagePaths = list(paths.list_images(basePath))\n\n# randomly sample the image paths\nrandom.seed(42)\nrandom.shuffle(imagePaths)\nimagePaths = imagePaths[:samples]\n\nfor (i, imagePath) in enumerate(imagePaths):\n    filename = imagePath.split(os.path.sep)[-1]\n    outputPath = os.path.sep.join([f\"{dataset_path}\/pneumonia\", filename])\n\n    shutil.copy2(imagePath, outputPath)","39486e23":"len(os.listdir('..\/working\/dataset\/pneumonia'))","5eab67d8":"csvPath = '..\/input\/data\/Data_Entry_2017.csv'\ndf = pd.read_csv(csvPath)\ncount = 0\n\nfor (i, row) in df.iterrows():\n    # if (1) the current case is not COVID-19 or (2) this is not\n    # a 'PA' view, then ignore the row\n    if row[\"Finding Labels\"] != \"No Finding\" or row[\"View Position\"] != \"PA\":\n        continue\n\n    if os.path.exists(os.path.sep.join(['..\/input\/data\/images_001', \"images\", row[\"Image Index\"]])):\n        imagePath = os.path.sep.join(['..\/input\/data\/images_001', \"images\", row[\"Image Index\"]])\n        filename = row[\"Image Index\"].split(os.path.sep)[-1]\n        outputPath = os.path.sep.join([f\"{dataset_path}\/normal\", filename])\n        shutil.copy2(imagePath, outputPath)\n#         print(outputPath)\n        count += 1\n    else:\n        continue\n        \n    if count == 2313:\n        break\n","f2e7929d":"len(os.listdir('..\/working\/dataset\/normal'))","3404e08f":"## covid19 = 2313\nsamples = 336","b555cb26":"basePath = os.path.sep.join([pneumonia_dataset_path, \"train\", \"NORMAL\"])\nimagePaths = list(paths.list_images(basePath))\n\n# randomly sample the image paths\nrandom.seed(42)\nrandom.shuffle(imagePaths)\nimagePaths = imagePaths[:samples]\n\nfor (i, imagePath) in enumerate(imagePaths):\n    filename = imagePath.split(os.path.sep)[-1]\n    outputPath = os.path.sep.join([f\"{dataset_path}\/normal\", filename])\n\n    shutil.copy2(imagePath, outputPath)","a23cd5b3":"len(os.listdir('..\/working\/dataset\/normal'))","ddcdccf1":"!ls ..\/working\/dataset\/","d5e07fa9":"dir_name = '..\/working\/dataset\/'","bba6ef0a":"shutil.make_archive('COVID19_Pneumonia_Normal_Chest_Xray_PA_Dataset', 'zip', dir_name)","deecf32a":"!ls ..\/working\/","f5a59269":"!rm -rf dataset\n!rm -rf logs\n!rm -rf out","dbc53b7d":"### Build normal xray dataset","269167c7":"### Covid xray dataset","353d527e":"## Build Dataset","a4e89aa7":"## Setup","41a9bdc8":"### Build pneumonia xray dataset"}}