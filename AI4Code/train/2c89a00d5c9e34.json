{"cell_type":{"f0d3a04c":"code","f2939d54":"code","ae6bd443":"code","80179da0":"code","ecd72706":"code","d53a56e8":"code","27b2105d":"code","16e67fea":"code","28034ca2":"code","b9ec4ea6":"code","877f21f9":"code","8dc4044e":"code","32eb6085":"code","e10d8f46":"code","0a3add45":"code","61c990e2":"code","ed2aeb39":"code","4db9d2c1":"code","a5dc480d":"code","53b32da6":"code","43953f5e":"code","568f1306":"code","791b7626":"code","1355bdf4":"code","83fe63dd":"code","d31e57f8":"code","6249f19e":"code","ce7aceb7":"code","48b7e605":"code","137895fc":"code","3b95e7de":"code","18af1c9e":"code","42a98b90":"code","f550c733":"code","58c79a97":"code","77c60ce9":"code","905b5d2e":"code","1dbd0e87":"markdown","74244abd":"markdown","75af5050":"markdown","30ee6e53":"markdown","3a0b28c8":"markdown","fa836e52":"markdown","2f2a2f74":"markdown","480caa4a":"markdown","3eeef6c5":"markdown","309b65f6":"markdown","35747add":"markdown","86c6ade9":"markdown","8d587e0d":"markdown","423b73b0":"markdown","9426d3d9":"markdown","e76f8523":"markdown","c1a828f5":"markdown","15798299":"markdown","2e698804":"markdown","9484bd9d":"markdown","b118cdbc":"markdown","df8d3c1d":"markdown","74f0ee9e":"markdown"},"source":{"f0d3a04c":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","f2939d54":"data=pd.read_csv(\"googleplaystore.csv\")\ndata.head(5)","ae6bd443":"data.shape","80179da0":"data.describe()","ecd72706":"data.boxplot()\nplt.show()","d53a56e8":"data.hist()\nplt.show()","27b2105d":"data.info()","16e67fea":"data.isnull().sum()","28034ca2":"data[data.Rating>5]","b9ec4ea6":"data.drop([10472],inplace=True)\ndata[10470:10475]","877f21f9":"data.boxplot()\nplt.show()","8dc4044e":"data.hist()\nplt.show()","32eb6085":"threshold= len(data)*0.1\nthreshold","e10d8f46":"data.dropna(thresh=threshold,axis=1,inplace=True)\nprint(data.isnull().sum())","0a3add45":"def impute_median(series):\n    return series.fillna(series.median())","61c990e2":"data[\"Rating\"]= data[\"Rating\"].transform(impute_median)","ed2aeb39":"data.isnull().sum()","4db9d2c1":"# Now imputing the categorical values\ndata[\"Type\"].fillna(str(data[\"Type\"].mode().values[0]),inplace=True)\ndata[\"Current Ver\"].fillna(str(data[\"Current Ver\"].mode().values[0]), inplace=True)\ndata[\"Android Ver\"].fillna(str(data[\"Android Ver\"].mode().values[0]),inplace=True)","a5dc480d":"data.isnull().sum()","53b32da6":"# Let's convert Price, Reviews and Installs into numerical values\ndata[\"Price\"]= data[\"Price\"].apply(lambda x:str(x).replace(\"$\",\"\") if \"$\" in str(x) else str(x))\ndata[\"Price\"]= data[\"Price\"].apply(lambda x: float(x))\ndata[\"Reviews\"]= pd.to_numeric(data[\"Reviews\"], errors=\"coerce\")\n\ndata[\"Installs\"]= data[\"Installs\"].apply(lambda x: str(x).replace(\"+\",\"\") if \"+\" in str(x) else str(x))\ndata[\"Installs\"]= data[\"Installs\"].apply(lambda x: str(x).replace(\",\",\"\") if \",\" in str(x) else str(x))\ndata[\"Installs\"]=data[\"Installs\"].apply(lambda x: float(x))","43953f5e":"data[\"Rating\"]= pd.to_numeric(data[\"Rating\"],errors=\"coerce\")\nsns.distplot(data[\"Rating\"],kde=True);","568f1306":"data.loc[data[\"Reviews\"].idxmax()]","791b7626":"data.loc[data[\"Rating\"].idxmax()]","1355bdf4":"data.loc[data[\"Installs\"].idxmax()]","83fe63dd":"data.iloc[0]['App']","d31e57f8":"\ndata[\"Category\"].value_counts()[:10].sort_values(ascending=True).plot(kind=\"barh\")\nplt.show()","6249f19e":"sns.boxplot(x=\"Content Rating\",y=\"Rating\",hue=\"Type\",data=data)\nplt.show()","ce7aceb7":"sns.lmplot(\"Reviews\",\"Rating\",data=data,hue=\"Type\",fit_reg=False,palette=\"Paired\",scatter_kws={\"marker\":\"D\",\"s\":100})\nplt.show()","48b7e605":"labels=[\"Free\",\"Paid\"]\nd=[data[\"Type\"].value_counts()[0],data[\"Type\"].value_counts()[1]]\nfig1,ax1=plt.subplots()\nax1.pie(d,labels=labels,shadow=True)\nax1.axis(\"equal\")\nplt.show()","137895fc":"X=data[[\"Reviews\",\"Price\"]]\ny=data.Rating\n\nX_train,X_test,y_train,y_test= train_test_split(X,y,random_state=42)","3b95e7de":"# Lets bring the dataset features into same scale\nscaler=StandardScaler()\nX= scaler.fit_transform(X)","18af1c9e":"from sklearn.linear_model import LinearRegression\nlin_r= LinearRegression()\nmodel= lin_r.fit(X_train,y_train)","42a98b90":"print(model.intercept_)\nprint(model.coef_)","f550c733":"rating= model.predict(np.array([[1000,3]]))\nprint(\"Predicted rating is:\",rating)","58c79a97":"y=model.intercept_ +(1000*model.coef_[0]+2*model.coef_[1])\nprint(\"Rating is:\",y)","77c60ce9":"pred= model.predict(X_test)\npred","905b5d2e":"from sklearn.metrics import mean_squared_error\nprint(\"RMSE: {}\".format(np.sqrt(mean_squared_error(y_test,pred))))","1dbd0e87":"**Summary Statistics**","74244abd":"* The distribution is highly skewed towards the right which implies that there are lesser apps that have low rating.\n* The distribution has high kurtosis indicating many of the apps are having a rating around 4.1-4.5","75af5050":"> ****Data Cleaning****","30ee6e53":"# **Most Popular Category**","3a0b28c8":"# App with Maximum number of reviews","fa836e52":"****Importing the Necesary Libraries****","2f2a2f74":"**Exploratory Data Analysis**","480caa4a":"****Distribution of ratings of apps****","3eeef6c5":"# **App which hasn't been updated**","309b65f6":"> Predict rating of app using Linear Regression","35747add":"> ** Remove columns that are >80% empty**","86c6ade9":"> **Data Visualization**","8d587e0d":"# **Analysing the pricing on apps based on content rating**","423b73b0":"All paid apps have a better rating in the content rating.","9426d3d9":"Test Evaluation","e76f8523":"# **Find out the Highest rated App**","c1a828f5":"There are 10841 rows and ****13**** columns in the dataset.","15798299":"Free apps have more reviews as compare to paid apps.","2e698804":"Preparing the data","9484bd9d":"# **Paid Vs Free App**","b118cdbc":"> **Data Imputation and Manipulation**","df8d3c1d":"** How many ratings are more than 5- (Outliers)**","74f0ee9e":"> There are Missing values in the attributes(Rating, Type, Content Rating, Current Ver and Android Ver."}}