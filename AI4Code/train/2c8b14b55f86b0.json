{"cell_type":{"6a4c6620":"code","2f8ad71a":"code","d8d790b6":"code","f55572ac":"code","5684a3dc":"code","38300c37":"code","ff14eff2":"code","6a2507ef":"code","a67bec3a":"code","c182a10c":"code","e90158c3":"code","21aebeea":"code","3e184626":"code","305c067f":"code","aa41cb8d":"code","4a8fa013":"code","b638ca66":"code","0ffda024":"code","2546a6d2":"code","cdc4e5ca":"code","3faae9f2":"code","cbdceda3":"code","b12fc83d":"code","5441c762":"code","daca1a00":"code","bb479225":"code","cb34cfe4":"code","a9afc282":"code","8382f3ef":"code","58a28a9b":"code","ce864b05":"code","590ee730":"code","ba1a9e95":"code","e31bedbb":"code","8b79be79":"code","41bc0514":"code","bcafd8cd":"code","3029cc82":"code","b587d135":"code","5a594466":"code","9a1adbb2":"code","184666fb":"code","18ffe69b":"code","316dc463":"code","c2fd41c2":"code","f91623ce":"code","f948155a":"code","1e11e4c9":"code","86ffb741":"code","37031e81":"code","aa9b16db":"code","60ce7209":"code","12e631f9":"markdown"},"source":{"6a4c6620":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport matplotlib.pyplot as plt","2f8ad71a":"df = pd.read_csv(\"..\/input\/air-passengers\/AirPassengers.csv\")\ndf.head()","d8d790b6":"df[\"Month\"] = pd.to_datetime(df[\"Month\"])\ndf.head()\n","f55572ac":"df.set_index(\"Month\", inplace=True)\ndf.columns = [\"passengers\"]\ndf.index.name = \"date\"\ndf.head()","5684a3dc":"df.plot(figsize=(10,6))","38300c37":"from statsmodels.tsa.seasonal import seasonal_decompose","ff14eff2":"results = seasonal_decompose(df['passengers'])\nresults.plot();\n","6a2507ef":"len(df)","a67bec3a":"144-12","c182a10c":"train = df.iloc[:132]\ntest = df.iloc[132:]","e90158c3":"\nlen(test)","21aebeea":"from sklearn.preprocessing import MinMaxScaler","3e184626":"scaler = MinMaxScaler()","305c067f":"import warnings\nwarnings.filterwarnings(\"ignore\")","aa41cb8d":"scaler.fit(train)","4a8fa013":"\n\nscaled_train = scaler.transform(train)\nscaled_test = scaler.transform(test)","b638ca66":"\n\nfrom keras.preprocessing.sequence import TimeseriesGenerator","0ffda024":"scaled_train","2546a6d2":"n_input = 2\nn_features = 1\ngenerator = TimeseriesGenerator(scaled_train, scaled_train, length=n_input, batch_size=1)","cdc4e5ca":"len(generator)","3faae9f2":"scaled_train","cbdceda3":"X,y = generator[0]","b12fc83d":"n_input = 12\ngenerator = TimeseriesGenerator(scaled_train, scaled_train, length=n_input, batch_size=1)","5441c762":"scaled_train","daca1a00":"X,y = generator[0]","bb479225":"print(f'Given the Array: \\n{X.flatten()}')\nprint(f'Predict this y: \\n {y}')","cb34cfe4":"\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM","a9afc282":"model = Sequential()\nmodel.add(LSTM(100, activation='relu', input_shape=(n_input, n_features)))\nmodel.add(Dense(1))\nmodel.compile(optimizer='adam', loss='mse')","8382f3ef":"model.summary()","58a28a9b":"model.fit_generator(generator,epochs=50)","ce864b05":"loss = model.history.history['loss']\nplt.plot(range(len(loss)),loss)","590ee730":"first_eval_batch = scaled_train[-12:]","ba1a9e95":"first_eval_batch","e31bedbb":"first_eval_batch = first_eval_batch.reshape((1, n_input, n_features))","8b79be79":"model.predict(first_eval_batch)","41bc0514":"scaled_test[0]","bcafd8cd":"test_predictions = []\n\nfirst_eval_batch = scaled_train[-n_input:]\ncurrent_batch = first_eval_batch.reshape((1, n_input, n_features))","3029cc82":"current_batch.shape","b587d135":"\n\ncurrent_batch","5a594466":"np.append(current_batch[:,1:,:],[[[99]]],axis=1)","9a1adbb2":"test_predictions = []\n\nfirst_eval_batch = scaled_train[-n_input:]\ncurrent_batch = first_eval_batch.reshape((1, n_input, n_features))\n\nfor i in range(len(test)):\n    \n    # get prediction 1 time stamp ahead ([0] is for grabbing just the number instead of [array])\n    current_pred = model.predict(current_batch)[0]\n    \n    # store prediction\n    test_predictions.append(current_pred) \n    \n    # update batch to now include prediction and drop first value\n    current_batch = np.append(current_batch[:,1:,:],[[current_pred]],axis=1)","184666fb":"test_predictions","18ffe69b":"scaled_test","316dc463":"true_predictions = scaler.inverse_transform(test_predictions)","c2fd41c2":"true_predictions","f91623ce":"test","f948155a":"test['Predictions'] = true_predictions","1e11e4c9":"test","86ffb741":"test.plot(figsize=(12,8))","37031e81":"model.save('rnn model')","aa9b16db":"from keras.models import load_model\nnew_model = load_model('rnn model')","60ce7209":"new_model.summary()","12e631f9":"*Keras, RNN and LSTM*"}}