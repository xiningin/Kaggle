{"cell_type":{"10942fa5":"code","a48a0188":"code","437c49c1":"code","486433d3":"code","2a1729bb":"code","b458ed60":"code","28dea9a7":"code","df6cae0c":"code","94c449be":"code","9b99c1b5":"code","1035e653":"code","afe8c87c":"code","302eb189":"code","f490acac":"code","2b84dd08":"code","23527fdb":"code","3cfe1412":"code","2f414069":"code","832014ed":"code","05f70140":"code","5a8dce7b":"code","d8904dc4":"code","f7ba2260":"code","0ad1ecbe":"code","4e0600dc":"code","e1fd46df":"code","27f06688":"code","411e7583":"code","cf1c0ad5":"code","9ed8c6bb":"code","80027079":"code","64ab96b3":"code","2068150f":"code","6f712feb":"code","f95561b8":"code","dede056f":"code","eaf752d3":"code","5788d1db":"code","b5b0c54b":"code","de0b7511":"code","6cadf854":"code","c7345a59":"code","dcf8744e":"code","e22f44d2":"code","1588a939":"code","7ce704b4":"code","616c1cf2":"code","d9723403":"code","a0cb32c1":"code","6b1c6dc9":"code","9012cc51":"code","f6717b36":"code","8f956008":"code","87a70463":"code","5fe105bd":"code","8b45c202":"code","04d14f47":"code","a26a4f1f":"code","c7be4905":"code","fd9e8371":"code","ac471744":"code","c821acd3":"code","1e872b29":"code","9a0c958f":"code","3585e15f":"code","68508b7f":"code","7e971ba6":"code","7224d809":"code","0780e45b":"code","e7ca598c":"code","49891068":"code","ca98a7a8":"code","640090d9":"code","df591c6d":"code","38968428":"code","b216dbc5":"code","46c34327":"code","8db6a510":"code","69e000cd":"code","45223ba5":"code","19081a08":"code","a529ec1c":"code","105abe3a":"code","d9f225cf":"code","ed0bf7af":"code","a8d6c7a3":"code","77b0bdc7":"code","4e1bea21":"code","7afa10d9":"code","c029f984":"code","846070a5":"code","d3154e90":"markdown","6e6f45ff":"markdown","ec13b5ec":"markdown","0143c591":"markdown","b6ebbbcc":"markdown","8e432002":"markdown","86714132":"markdown","582c5a86":"markdown","94be746f":"markdown","2067c828":"markdown","edea5bc6":"markdown","e8a78e79":"markdown","de74e285":"markdown","417bccf5":"markdown","40790e2d":"markdown","2f3fb6ef":"markdown","c21e21f3":"markdown","ef2c31ed":"markdown","af857575":"markdown","e9e5976d":"markdown","19265421":"markdown","5e9e048f":"markdown","e593a7bf":"markdown","140bc541":"markdown","ec57496c":"markdown","a0ce4734":"markdown","d5b37546":"markdown","a1cf3553":"markdown","c006930f":"markdown","9b304269":"markdown","cd5b1991":"markdown","6f74ea97":"markdown","e7ac9527":"markdown","bb8b47a4":"markdown","af9ef772":"markdown","1ce47cac":"markdown","f3f5f27c":"markdown","2990a504":"markdown","3c9c7e49":"markdown","c51a8acb":"markdown","563ff51a":"markdown","849238ec":"markdown","1c753583":"markdown","3672ae95":"markdown","65438811":"markdown","3d182920":"markdown","156b4e33":"markdown","d9f0f1cb":"markdown","c1f77694":"markdown"},"source":{"10942fa5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","a48a0188":"warnings.filterwarnings('ignore')","437c49c1":"d1 = pd.read_csv(\"..\/input\/ecommerce-fraud-data\/Customer_DF (1).csv\")","486433d3":"d1.columns","2a1729bb":"d1.head()","b458ed60":"d1.info()","28dea9a7":"d1.describe()","df6cae0c":"d2 = pd.read_csv('..\/input\/ecommerce-fraud-data\/cust_transaction_details (1).csv')","94c449be":"d2.columns","9b99c1b5":"d2.head()","1035e653":"d2.info()","afe8c87c":"d2.describe()","302eb189":"d1['customerEmail'].nunique()","f490acac":"d2['customerEmail'].nunique()","2b84dd08":"mail_list=[]\nrepeat =0\nresult={}\nfor i in range(0,168):\n    repeat = 0\n    for j in range(0,168):\n        if d1['customerEmail'][i] == d1['customerEmail'][j]:\n            repeat+=1\n    result.update({d1['customerEmail'][i]:repeat})\nresult    ","23527fdb":"d1[d1['customerEmail']=='johnlowery@gmail.com']","3cfe1412":"d2['paymentMethodType'].unique()","2f414069":"sns.countplot(d2['paymentMethodType'],data = d2)","832014ed":"sns.countplot(d2['orderState'])","05f70140":"plt.figure(figsize=(16,5))\nsns.countplot(d2['paymentMethodProvider'])\nplt.tight_layout()","5a8dce7b":"plt.figure(figsize=(15,5))\nsns.countplot(d2['paymentMethodProvider'],hue = d2['paymentMethodRegistrationFailure'])\nplt.tight_layout()","d8904dc4":"sns.countplot(d1['No_Payments'],hue = d1['Fraud'])","f7ba2260":"l = []\nfor i in range(0,168):\n    uncommon=0\n    for j in range(0,623):\n        if d1['customerEmail'][i]==d2['customerEmail'][j]:\n            uncommon+=1\n    if uncommon==0:\n        l.append(d1['customerEmail'][i])\nprint(len(l))\nl","0ad1ecbe":"common =0\nfor i in d1['customerEmail']:\n    for email in d2['customerEmail']:\n        if i==email:\n            common+=1\n            break\ncommon","4e0600dc":"final = d1[d1['customerEmail'].isin(d2['customerEmail'])== True]\nfinal.shape","e1fd46df":"final.drop('Unnamed: 0',axis = 1, inplace = True)","27f06688":"final.reset_index(inplace = True)","411e7583":"Total_transaction_amt = []\nfor i in range(0,143):\n    s=0\n    for j in range(0,623):\n        if(final['customerEmail'][i]==d2['customerEmail'][j]):\n            s += d2['transactionAmount'][j]\n    Total_transaction_amt.append(s)        \n","cf1c0ad5":"final['Total_transaction_amt'] = Total_transaction_amt","9ed8c6bb":"No_transactionsFail = []\nfor i in range(0,143):\n    s=0\n    for j in range(0,623):\n        if(final['customerEmail'][i]==d2['customerEmail'][j]):\n            s += d2['transactionFailed'][j]\n    No_transactionsFail.append(s)        ","80027079":"final['No_transactionsFail'] = No_transactionsFail","64ab96b3":"PaymentRegFail = []\nfor i in range(0,143):\n    s=0\n    for j in range(0,623):\n        if(final['customerEmail'][i]==d2['customerEmail'][j]):\n            s += d2['paymentMethodRegistrationFailure'][j]\n    PaymentRegFail.append(s)  ","2068150f":"final['PaymentRegFail'] = PaymentRegFail","6f712feb":"def col_make(column_name,category):\n    array = []\n    for i in range(0,143):\n        s=0\n        for j in range(0,623):\n            if(final['customerEmail'][i]==d2['customerEmail'][j]):\n                if d2[column_name][j]==category:\n                    s+=1\n        array.append(s)\n    return array ","f95561b8":"PaypalPayments = col_make('paymentMethodType','paypal')\nApplePayments = col_make('paymentMethodType','apple pay')\nBitcoinPayments = col_make('paymentMethodType','bitcoin')\nCardPayments = col_make('paymentMethodType','card')","dede056f":"final['PaypalPayments']= PaypalPayments\nfinal['ApplePayments']= ApplePayments\nfinal['CardPayments']= CardPayments\nfinal['BitcoinPayments']= BitcoinPayments","eaf752d3":"OrdersFulfilled = col_make('orderState','fulfilled')\nOrdersFailed =  col_make('orderState','failed')\nOrdersPending = col_make('orderState','pending')","5788d1db":"final['OrdersFulfilled'] = OrdersFulfilled\nfinal['OrdersPending'] = OrdersPending\nfinal['OrdersFailed'] = OrdersFailed","b5b0c54b":"JCB_16 = col_make('paymentMethodProvider','JCB 16 digit')\nAmericanExp = col_make('paymentMethodProvider','American Express')\nVISA_16 =  col_make('paymentMethodProvider','VISA 16 digit')\nDiscover =  col_make('paymentMethodProvider','Discover')\nVoyager = col_make('paymentMethodProvider','Voyager')\nVISA_13 = col_make('paymentMethodProvider','VISA 13 digit')\nMaestro = col_make('paymentMethodProvider','Maestro')\nMastercard = col_make('paymentMethodProvider','Mastercard')\nDC_CB =col_make('paymentMethodProvider','Diners Club \/ Carte Blanche')\nJCB_15= col_make('paymentMethodProvider','JCB 15 digit')","de0b7511":"final['JCB_16'] = JCB_16\nfinal['AmericanExp'] = AmericanExp \nfinal['VISA_16'] = VISA_16 \nfinal['Discover'] = Discover\nfinal['Voyager'] = Voyager \nfinal['VISA_13'] = VISA_13\nfinal['Maestro'] = Maestro \nfinal['Mastercard'] = Mastercard\nfinal['DC_CB'] = DC_CB \nfinal['JCB_15'] = JCB_15","6cadf854":"final.shape","c7345a59":"Trns_fail_order_fulfilled = []\nfor i in range(0,143):\n    s=0\n    for j in range(0,623):\n        if(final['customerEmail'][i]==d2['customerEmail'][j]):\n            if (d2['orderState'][j]=='fulfilled') & (d2['transactionFailed'][j]==1):\n                s+=1\n    Trns_fail_order_fulfilled.append(s)","dcf8744e":"final['Trns_fail_order_fulfilled'] = Trns_fail_order_fulfilled","e22f44d2":"Duplicate_IP = []\nfor i in range(0,143):\n    s=0\n    for j in range(0,143):\n        if(final['customerIPAddress'][i]==final['customerIPAddress'][j]):\n            s+=1\n    s-=1        \n    Duplicate_IP.append(s)","1588a939":"final['Duplicate_IP'] = Duplicate_IP","7ce704b4":"Fraud_Decoded = []\nfor i in range(0,143):\n    s=0\n    if(final['Fraud'][i]==True):\n        s+=1        \n    Fraud_Decoded.append(s)","616c1cf2":"final['Fraud_Decoded'] = Fraud_Decoded","d9723403":"Duplicate_Address = []\nfor i in range(0,143):\n    s=0\n    for j in range(0,143):\n        if(final['customerBillingAddress'][i]==final['customerBillingAddress'][j]):\n            s+=1\n    s-=1        \n    Duplicate_Address.append(s)","a0cb32c1":"final['Duplicate_Address']=Duplicate_Address","6b1c6dc9":"final[final['Fraud']==True].count()","9012cc51":"final.head()","f6717b36":"sns.barplot(x = final['No_Transactions'],y = final['No_transactionsFail'],hue = final['Fraud'])","8f956008":"final[(final['No_transactionsFail'] == 6) & (final['No_Transactions']==0)==True]","87a70463":"print(final['customerPhone'].nunique())\nprint(final['customerDevice'].nunique())\nprint(final['customerIPAddress'].nunique())\nprint(final['customerBillingAddress'].nunique())","5fe105bd":"final[final['Duplicate_IP']>0]","8b45c202":"final[final['Duplicate_Address']>0]","04d14f47":"sns.countplot(x = final['OrdersFulfilled'], hue = final['Fraud'])","a26a4f1f":"final.columns","c7be4905":"X = final[['No_Transactions',\n       'No_Orders', 'No_Payments', 'Total_transaction_amt',\n       'No_transactionsFail', 'PaymentRegFail', 'PaypalPayments',\n       'ApplePayments', 'CardPayments', 'BitcoinPayments', 'OrdersFulfilled',\n       'OrdersPending', 'OrdersFailed','Trns_fail_order_fulfilled','Duplicate_IP','Duplicate_Address','JCB_16', 'AmericanExp', 'VISA_16',\n       'Discover', 'Voyager', 'VISA_13', 'Maestro', 'Mastercard', 'DC_CB',\n       'JCB_15']]\ny = final['Fraud_Decoded']","fd9e8371":"from sklearn.model_selection import train_test_split","ac471744":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","c821acd3":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix,classification_report,accuracy_score","1e872b29":"rfc = RandomForestClassifier(n_estimators=150)\nrfc.fit(X_train,y_train)\npred = rfc.predict(X_test)\nprint(accuracy_score(y_test,pred))\nsns.heatmap(data = confusion_matrix(y_test,pred),annot = True)\nprint(classification_report(y_test,pred))","9a0c958f":"from sklearn.linear_model import LogisticRegression\nlogr = LogisticRegression()\nlogr.fit(X_train,y_train)\nlog_pred =logr.predict(X_test)\nprint(accuracy_score(y_test,log_pred))\nsns.heatmap(data=confusion_matrix(y_test,log_pred),annot = True)\nprint(classification_report(y_test,log_pred))","3585e15f":"from sklearn.svm import SVC\nsvc = SVC(gamma = 'auto')\nsvc.fit(X_train,y_train)\nsvc_pred=svc.predict(X_test)\nprint(accuracy_score(y_test,pred))\nsns.heatmap(data = confusion_matrix(y_test,pred),annot = True)\nprint(classification_report(y_test,pred))","68508b7f":"from sklearn.model_selection import GridSearchCV","7e971ba6":"svc_param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} ","7224d809":"gridsvc = GridSearchCV(SVC(),svc_param_grid,refit=True,verbose=3)","0780e45b":"gridsvc.fit(X_train,y_train)","e7ca598c":"gridsvc.best_params_","49891068":"gridsvc.best_estimator_","ca98a7a8":"grid_svc_predictions = gridsvc.predict(X_test)","640090d9":"print(accuracy_score(y_test,grid_svc_predictions))\nsns.heatmap(data = confusion_matrix(y_test,grid_svc_predictions),annot= True)\nprint(classification_report(y_test,grid_svc_predictions))","df591c6d":"logr_param_grid = {'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000] }","38968428":"grid_logr = GridSearchCV(LogisticRegression(),logr_param_grid,refit=True,verbose=3)","b216dbc5":"grid_logr.fit(X_train,y_train)","46c34327":"grid_logr.best_params_","8db6a510":"grid_logr.best_estimator_","69e000cd":"grid_logr_predictions = grid_logr.predict(X_test)","45223ba5":"print(accuracy_score(y_test,grid_logr_predictions))\nsns.heatmap(data = confusion_matrix(y_test,grid_logr_predictions),annot = True)\nprint(classification_report(y_test,grid_logr_predictions))","19081a08":"rfc_param_grid = { \n    'n_estimators': [100,150,200,350,500],\n    'max_features': ['auto', 'sqrt', 'log2'],\n    'max_depth' : [4,5,6,7,8],\n    'criterion' :['gini', 'entropy']\n}","a529ec1c":"grid_rfc = GridSearchCV(RandomForestClassifier(),rfc_param_grid,refit=True,verbose=3)","105abe3a":"grid_rfc.fit(X_train,y_train)","d9f225cf":"grid_rfc.best_params_","ed0bf7af":"grid_rfc.best_estimator_","a8d6c7a3":"grid_rfc_predictions = grid_rfc.predict(X_test)","77b0bdc7":"print(accuracy_score(y_test,grid_rfc_predictions))\nsns.heatmap(data = confusion_matrix(y_test,grid_rfc_predictions),annot = True)\nprint(classification_report(y_test,grid_rfc_predictions))","4e1bea21":"rfc.feature_importances_","7afa10d9":"from sklearn.model_selection import cross_val_score\ncv_scores_rfc = cross_val_score(grid_rfc.best_estimator_, X, y, cv=5)\nprint(cv_scores_rfc)\nprint(\"Mean 5-Fold R Squared: {}\".format(np.mean(cv_scores_rfc)))","c029f984":"cv_scores_logr = cross_val_score(grid_logr.best_estimator_, X, y, cv=5)\nprint(cv_scores_logr)\nprint(\"Mean 5-Fold R Squared: {}\".format(np.mean(cv_scores_logr)))","846070a5":"cv_scores_svc = cross_val_score(gridsvc.best_estimator_, X, y, cv=5)\nprint(cv_scores_svc)\nprint(\"Mean 5-Fold R Squared: {}\".format(np.mean(cv_scores_svc)))","d3154e90":"### Exploratory Data Analysis and Data Visualisations","6e6f45ff":"### Model Training","ec13b5ec":"**Note: When number of transactions  = 0, we have number of Transactions failed =6. And hence the customer is definitely a fraud.**","0143c591":"**On furthur checking on this email address we can see that all transactions from this email address are fraudulent.**\n\nNow, doing some analysis in d2, we can see that d2 has **4 unique payment methods** and **most of the payments are made from card**.","b6ebbbcc":"**Training the Logistic Regression Model.**","8e432002":"**Now adding Total Transaction amount column.**","86714132":"**When No. of Transaction is 10,11,13 then the transaction is definitely a fraud irrespective of the number of transactions failed.**","582c5a86":"**These 3 customers have the same Billing Address and hence these 3 are Fraud.**","94be746f":"**From this we can see that these 4 customers have the same IP address and as it is not possible for different devices to have the same IP therefore these are definitely fraud.**","2067c828":"**Out of 143 data points in the final dataset, 56 data points are Truely fraudulent in the data and rest 87 data points are not fraud.**","edea5bc6":"**Importing Datasets**","e8a78e79":"**As there are total 168 rows in the d1 dataset and we have 161 unique email addresses so some of them must be repeated.**\n\n**Finding out the emails that are repeated in the dataset.**","de74e285":"### Fraud Detection on Customer's Ecommerce Transactions Data.","417bccf5":"**Trainig the Support Vector Machines Ckassifier.**","40790e2d":"**Now adding No. of payments from Paypal, Apple Pay, Card, Bitcoin columns.**","2f3fb6ef":"# Ecommerce Fraud Detection EDA + Feature Engg. + Modelling","c21e21f3":"**Applying Grid Search CV on Random Forests Classifier.**","ef2c31ed":"**Using Grid Search Cross Validation to fine tune the models to improve accuracy.**","af857575":"**We can see that some of the IP Addresses and Billing Addresses are repeated in the data.**","e9e5976d":"**Now adding Payment Method Registration Failures column.**","19265421":"**Applying Kfold CV on SVC.**","5e9e048f":"**Training the Random Forest Classifier.**","e593a7bf":"**Splitting the data into training and testing set.**","140bc541":"**Now adding No. of Transactions Failed Columns.**","ec57496c":"**Now adding Order Fullfilled, Pending, Failed columns.**","a0ce4734":"**Preparing data to feed into model.**","d5b37546":"**The model's used are Random Forests, Logistic Regression and Support Vector Machines as all of them are good for binary classification.**","a1cf3553":"**The top 3 features used in the prediction are:**\n1. Total Transaction Amount\n2. Number Of Payments\n3. Orders Fulfilled ","c006930f":"**We can see that most of the order's are fulfilled and on doing furthur analysis on this we find out:**\n1. Orders Fulfilled = 516\n2. Order Failed = 63\n3. Order Pending = 44","9b304269":"**Applying Kfold CV on RFC.**","cd5b1991":"**Applying Grid Search CV on Logistic Regression.**","6f74ea97":"**Problem Statement:**\n\nThe profiles contain information about the customer, their orders, their transactions, what payment methods they used and whether the customer is fraudulent or not.\n\n1) Tasks\n\n * Provide exploratory analysis of the dataset.\n * Summarise and explain the key trends in the data, providing visualisations and tabular representations as necessary.\n * Explain what factors you think are significant and insignificant in contributing to fraud\n * Construct a model to predict if a customer is fraudulent based on their profile.\n * Report on the models success and show what features are most important\n","e7ac9527":"**To use the elements of both the dataset's we have to find the common emails in both the datasets.**","bb8b47a4":"**From this we can see that if the no. of payments is greaten than 5 then the customer is definitely a fraud.**\n\n**Now, finding out the emails that are not common in the 2 datasets.**","af9ef772":"**Importing Libraries**","1ce47cac":"**These are the 25 emails that are not common in both the datasets so we do not have the transaction details of these customers.**","f3f5f27c":"**From this we can see that if Number of Orders Fulfilled is greater than 8 then the transaction is definitely fraudulent.**","2990a504":"**More Payments were mane by 'JCB 16 digit' and 'VISA 16 digit' as compared to other payment method providers.**","3c9c7e49":"**As all the Phone Numbers and Devices in the data are unique so they are not of much use in the analysis.**","c51a8acb":"**It is the same Email Address that has been repeated 8 times in the data.**","563ff51a":"**From this we can see that 1 email address i.e 'johnlowery@gmail.com' has been repeated 8 times in the dataset.**","849238ec":"**This shows that maximum payments were made using 'JCB 16 digit'and 'VISA 13 digit' had most registration failures.**","1c753583":"**Applying Kfold CV on Logistic Regression.**","3672ae95":"### I am a Beginner in the field of machine learning and data analysis. This notebooks marks my entry in kaggle kernels.\n\n### If you like the notebook, do UPVOTE. Suggestions, improvements and corrections are always welcome. ","65438811":"**We can see that Logistic Regression Model is giving the best outcome as compared to other models.**","3d182920":"### Hyperparameter Tuning","156b4e33":"**Applying Grid Search CV on Support Vector Classifier.**","d9f0f1cb":"**This dataset has common emails from both the datasets.**","c1f77694":"**Applying K Fold Cross Validation on Grid Search Model to check the robustness and quality of the model.**"}}