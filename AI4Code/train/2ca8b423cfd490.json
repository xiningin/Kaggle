{"cell_type":{"cb2b2198":"code","57b9e830":"code","a3b3e854":"code","dd37f664":"code","1ec20ef6":"code","6655aab5":"code","b4f73972":"code","8602b1de":"code","faed7441":"code","c859e927":"code","ef500e0b":"code","31db4f02":"markdown"},"source":{"cb2b2198":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","57b9e830":"from fastai.vision.all import *","a3b3e854":"df = pd.read_csv('..\/input\/plant-pathology-2021-fgvc8\/train.csv')\ndf.head()","dd37f664":"path = '..\/input\/plant-pathology-2021-fgvc8'\n\ndef get_x(r):\n    return path + '\/train_images\/' + r['image']\n\ndef get_y(r):\n    return r['labels'].split(' ')\n\ndblock = DataBlock(blocks=(ImageBlock, MultiCategoryBlock),\n                   get_x = get_x, \n                   get_y = get_y,\n                  item_tfms = RandomResizedCrop(128, min_scale = 0.35),\n                  batch_tfms=aug_transforms())","1ec20ef6":"dls = dblock.dataloaders(df)\ntest_files = get_image_files(path + '\/test_images')\ntest_files.sort()\ntest_dl = dls.test_dl(test_files)\n\ndls.show_batch(nrows=1, ncols=3)","6655aab5":"f1score_multi = F1ScoreMulti()\nmodel = xresnet50(n_out=dls.c)\nlearn = Learner(dls, model, metrics=f1score_multi)","b4f73972":"learn.lr_find()","8602b1de":"learn.fit_one_cycle(7, 3e-3)","faed7441":"learn.show_results()","c859e927":"tst_preds, tst_targs = learn.get_preds(dl=test_dl)\nthresh = 0.5\nlabelled_preds = [' '.join([dls.vocab[i] for i,p in enumerate(pred) if p > thresh]) for pred in tst_preds]","ef500e0b":"fnames = [(f.name[:-4] + '.jpg') for f in test_files]\nfinal_df = pd.DataFrame({'image':fnames, 'labels':labelled_preds}, columns=['image', 'labels'])\nfinal_df.to_csv('.\/submission.csv', index=False)","31db4f02":"Adapted from: https:\/\/github.com\/fastai\/fastbook\/blob\/master\/06_multicat.ipynb"}}