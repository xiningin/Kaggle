{"cell_type":{"03e36554":"code","eacfe756":"code","233b3b8e":"code","7b2b02fe":"code","8eb7e746":"code","0cb8ac7c":"code","18e29965":"code","6da58e14":"code","1ed71c0a":"code","38683247":"code","a766e8fc":"code","766e83fd":"code","e5f62278":"code","3e7e172c":"markdown","32275f72":"markdown","b8137a34":"markdown","831f373f":"markdown","8da8cd07":"markdown","68925f37":"markdown","8ee21723":"markdown","43b18024":"markdown","0b01d737":"markdown"},"source":{"03e36554":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","eacfe756":"data = pd.read_csv('..\/input\/top250-00-19.csv')\ndata.info()","233b3b8e":"data.head()","7b2b02fe":"def modify_season(row):\n    row.Season = row.Season.split('-')[0]\n    return row\ndata = data.apply(modify_season,axis = 'columns')","8eb7e746":"data.loc[(data.Season >= '2013') & (data.Season <='2018')].groupby('Team_to').Transfer_fee.agg('sum').sort_values(ascending = False).head(5)\n#data.groupby('Team_to').apply(lambda l:l.Season == '2017-2018')\n\nimport seaborn as sns\ndata.loc[(data.Season >= '2013') & (data.Season <='2018')].groupby('Team_to').Transfer_fee.agg('sum').sort_values(ascending = False).head(5).plot.bar()","0cb8ac7c":"data.groupby('Position').Transfer_fee.sum().sort_values(ascending = False).head(5)\n","18e29965":"position_map = {'Right Winger': 'F','Centre-Forward':'F','Left Winger':'F','Centre-Back':'D','Central Midfield':\n               'M','Attacking Midfield': 'M', 'Defensive Midfield': 'M','Second Striker': 'F', 'Goalkeeper': 'G',\n               'Right-Back':'D','Left Midfield': 'M', 'Left-Back':'D','Right Midfield':'M','Forward':'F','Sweeper':'M',\n               'Defender':'D','Midfielter':'M'}\ndata['New_position'] = pd.Series(data.Position.map(position_map), index = data.index)\ndata.head(10)\n\nsns.lmplot(x='Transfer_fee',y='Age',hue='New_position',data = data,fit_reg = False)","6da58e14":"nt = data.loc[(data.Age >=33) & (data.New_position == 'F')].Team_to.unique()\nprint(nt)\nnl = data.loc[(data.Age >=33) & (data.New_position == 'F')].League_to.unique()\nprint(nl)","1ed71c0a":"nt = data.loc[(data.Age >=35) & (data.New_position == 'M')].Team_to.unique()\nprint(nt)\nnl = data.loc[(data.Age >=35) & (data.New_position == 'M')].League_to.unique()\nprint(nl)","38683247":"nt = data.loc[(data.Age >=34) & (data.New_position == 'D')].Team_to.unique()\nprint(nt)\nnl = data.loc[(data.Age >=34) & (data.New_position == 'D')].League_to.unique()\nprint(nl)","a766e8fc":"nt = data.loc[(data.Age >=34) & (data.New_position == 'G')].Team_to.unique()\nprint(nt)\nnl = data.loc[(data.Age >=34) & (data.New_position == 'G')].League_to.unique()\nprint(nl)","766e83fd":"def map_position(act,exp):\n    if(act == exp):\n        return 1\n    else:\n        return 0\n\nseries = data.New_position.map(lambda p: map_position(p,'F'))\ndata['F'] = pd.Series(series, index = data.index)\n\nseries = data.New_position.map(lambda p: map_position(p,'M'))\ndata['M'] = pd.Series(series, index = data.index)\n\nseries = data.New_position.map(lambda p: map_position(p,'D'))\ndata['D'] = pd.Series(series, index = data.index)\n\nseries = data.New_position.map(lambda p: map_position(p,'G'))\ndata['G'] = pd.Series(series, index = data.index)\ndata.head(10)","e5f62278":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.linear_model import LinearRegression\n\nfeatures = ['F','M','D','G','Age','Season']\ntest_data1 = pd.DataFrame({'F':[1,0,0,0],'M':[0,0,0,1],'D':[0,0,1,0],\n                           'G':[0,1,0,0],'Age': [29,39,21,26],'Season':[2013,2011,2018,2006]})\nX = data[features]\ny = data.Transfer_fee\ntrain_X, test_X, train_y, test_y = train_test_split(X.as_matrix(), y.as_matrix(), test_size=0.25)\n\n# Using Linear Regression model\n\nrf_model = LinearRegression()\n\n# train your model\nrf_model.fit(train_X, train_y)\n\n# predict for test data\npredictions = rf_model.predict(test_X)\n\nprint(mean_absolute_error(test_y, predictions))\npreds = rf_model.predict(test_data1)\nprint('Predictions for test_data1 ')\npreds","3e7e172c":"Update the Season data by assuming start year is an actual transfer season year.","32275f72":"**Data Analysis**\n\n- Identify top 5 clubs that spent most money on transfers from 2013 to 2018","b8137a34":"- Clubs and leagues goalkeepers joined after age of 35","831f373f":"- Clubs and leagues defenders joined after age of 34","8da8cd07":"- Top playing positions that got most transfer fee","68925f37":"- Clubs and leagues midfielders joined after age of 35","8ee21723":"- Let's identify most favorable clubs to join for a player after a certain age.\nFor striker, say age limit would be 33, for midfielder 35, for defender 35 and goal-keeper 35\nBefore that, add an extra column defining role of individual player based on actual position","43b18024":"**Transfer Fee prediction**\n\nPredict transfer fee for a player.\nBefore we start training our model, let's add few columns that would correspond players position numerically.\nWe will add four columns, F, M, D and G with boolean values for corresponding players.","0b01d737":"- Clubs and leagues strikers joined after age of 35"}}