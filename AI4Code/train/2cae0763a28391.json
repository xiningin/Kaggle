{"cell_type":{"38062420":"code","77a2f375":"code","384b7836":"code","e09156fe":"code","e75602e6":"code","f16eccc7":"code","90322242":"code","a29031c9":"code","b5f9fd9f":"markdown","ed4b3261":"markdown"},"source":{"38062420":"import pandas as pd\nimport numpy as np","77a2f375":"data = pd.read_csv('\/kaggle\/input\/carla-driver-behaviour-dataset\/full_data_carla.csv',index_col=0)\ndata.info()","384b7836":"from scipy import signal\nimport matplotlib.pyplot as plt\nlabels = data['class'].unique()\nfor label in labels:\n    data_label = data[data['class']==label]\n    acc_label_x = data_label.iloc[:,0]\n    corr = signal.correlate(acc_label_x,np.ones(len(acc_label_x)),mode='same') \/ len(acc_label_x)\n    clock= np.arange(64, len(acc_label_x), 128)\n    plt.plot(clock, corr[clock],label= label)\nplt.legend()\nplt.title('cross-correlation-features for AccelX')\nplt.show()","e09156fe":"from scipy import signal\nimport matplotlib.pyplot as plt\ndata_featured = pd.DataFrame()\ndata_prossed = pd.DataFrame()\nlabels = data['class'].unique()\n\nfor col in np.array([0,1,2,4,5,6]):    \n    for label in labels:\n        data_label = data[data['class']==label]\n        acc_label_x = data_label.iloc[:,col]\n        corr = signal.correlate(acc_label_x,np.ones(len(acc_label_x)),mode='same') \/ len(acc_label_x)\n        data_featured=pd.concat([data_featured,pd.DataFrame(corr)], ignore_index=True)\n        #clock= np.arange(64, len(acc_label_x), 128)\n        #plt.plot(clock, corr[clock],label= label)\n    data_prossed = pd.concat([data_prossed,data_featured],axis=1,ignore_index=True)\n    data_featured = pd.DataFrame()\n#plt.legend()\n#plt.title('cross-correlation-features for AccelX')\n#plt.show()","e75602e6":"data_prossed","f16eccc7":"data_prossed['class'] = data['class']\nx = data_prossed.drop([\"class\"],axis=1)\ny = data_prossed[\"class\"].values","90322242":"from sklearn.preprocessing import LabelEncoder\ny = LabelEncoder().fit_transform(y)\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.25, shuffle=True)","a29031c9":"from sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import SGDClassifier\n\nsgd = SGDClassifier()\nsgd.fit(X_train,y_train)\nnb = GaussianNB()\nnb.fit(X_train,y_train)\nknn = KNeighborsClassifier(n_neighbors = 3) #n_neighbors = k\nknn.fit(X_train,y_train)\nsvm = SVC(random_state = 1)\nsvm.fit(X_train,y_train)\nprint(\"SVM accuracy is :\",svm.score(X_test,y_test))\nprint('accuracy of bayes in test data is :', nb.score(X_test,y_test))\nprint('acc_of_sgd is: ', sgd.score(X_test,y_test))\nprint('acc_knn: ',knn.score(X_test,y_test))","b5f9fd9f":"**Cross correlation for all features and saved to \"data_prossed\"**","ed4b3261":"**Cross-Correlation for a feature**"}}