{"cell_type":{"aa1f4753":"code","3181a158":"code","792ff1ba":"code","02059954":"code","d97e3b19":"code","a29f606d":"code","e0600fc6":"code","050c3c69":"code","acf94c0f":"code","8b3d4424":"code","76993b42":"markdown","5f332779":"markdown","47e2787d":"markdown","982092fd":"markdown","baa0dced":"markdown"},"source":{"aa1f4753":"import numpy as np\nimport pandas as pd\nfrom numpy import loadtxt\nimport lightgbm as lgbm\nfrom sklearn.model_selection import train_test_split","3181a158":"df_train_raw = pd.read_csv('..\/input\/porto-seguro-data-challenge\/train.csv')\ndf_test_sub_raw = pd.read_csv('..\/input\/porto-seguro-data-challenge\/test.csv')","792ff1ba":"qualitativo_nominal=['var1', 'var2', 'var3', 'var4', 'var5', 'var6', 'var7', 'var8',\n                    'var9' , 'var10', 'var11', 'var12', 'var13', 'var14', 'var15', 'var16', \n                    'var17', 'var18', 'var19', 'var20', 'var21', 'var22', 'var23', 'var28', \n                    'var29', 'var30', 'var31', 'var28', 'var29', 'var30', 'var31', 'var33', \n                    'var34', 'var35', 'var36', 'var37', 'var38', 'var39', 'var41']\n\nqualitativo_ordinal = ['var26', 'var32', 'var42', 'var43']\n\nquantitativo_discreto = ['var24', 'var25', 'var27', 'var40', 'var44', 'var45', 'var46', 'var47',\n                        'var48', 'var49', 'var50', 'var51', 'var52', 'var53', 'var54', 'var67', \n                        'var68']\n\nquantitativo_continua = ['var55', 'var56', 'var57', 'var58', 'var59', 'var61', 'var62', \n                        'var63', 'var64', 'var60']\n\ncat_feature = quantitativo_discreto + qualitativo_ordinal","02059954":"## drop ID\ndf_train_raw = df_train_raw.drop('id', axis=1)\ndf_test_sub = df_test_sub_raw.drop('id', axis=1)","d97e3b19":"#Split X y \ndf_train_raw_X = df_train_raw.loc[:, df_train_raw.columns != 'y']\ndf_train_raw_y = df_train_raw['y']\n\n# Partition data\ndf_train_X, df_test_X, df_train_y, df_test_y = train_test_split(df_train_raw_X, \n                                                                df_train_raw_y, \n                                                                test_size=0.2, \n                                                                random_state=42)","a29f606d":"#Specifying the parameter\nparams = {\n        'boosting_type' : 'gbdt',\n        'max_depth' : 10,\n        'learning_rate' : 0.01,\n        'objective' : 'binary',\n        'is_unbalance':True,    \n        'boosting_type' : 'gbdt',\n        'metric' : 'binary_logloss',\n        'num_boost_round':1000\n    }\n\n#create model\nmodel_clf = lgbm.LGBMClassifier(**params)","e0600fc6":"#fit model\nmodel_clf.fit(df_train_X, df_train_y, eval_metric='binary_logloss' , categorical_feature = cat_feature)","050c3c69":"#prediction on the test set\ndf_test_pred = model_clf.predict(df_test_X)","acf94c0f":"from sklearn.metrics import f1_score, accuracy_score, confusion_matrix\n\n# evaluate predictions\nprint('f1_score:',f1_score(df_test_y, df_test_pred).round(3))\nprint('accuracy_score:',accuracy_score(df_test_y, df_test_pred).round(3))\nprint('confusion_matrix:', confusion_matrix(df_test_y, df_test_pred))","8b3d4424":"df_test_pred = model_clf.predict(df_test_sub)\n\ndf_sub = pd.concat([pd.DataFrame(df_test_sub_raw['id']), pd.DataFrame(df_test_pred, columns = ['predicted'])], axis=1)\n\n# Save data\ndf_sub.to_csv('submission.csv', index=False)","76993b42":"## Model Fit","5f332779":"## Predict submission","47e2787d":"## Load data","982092fd":"## Evaluate Model","baa0dced":"## Data prep"}}