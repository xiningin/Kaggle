{"cell_type":{"e0457c1b":"code","b2a16ec7":"code","ec9e8eea":"code","3a23892e":"code","83795069":"code","bede4c45":"code","1716030a":"code","0ecf15b6":"code","e28e436a":"code","70537e19":"code","6828befd":"code","f14db8d0":"code","6d54140f":"code","a05b0967":"code","1463bb09":"code","99ef73f7":"code","2a145d1d":"code","354f993a":"code","f2961d0c":"code","d3346355":"code","996d550b":"code","9a683642":"code","d9621931":"code","a5da393b":"code","473d66b2":"code","d361d5c6":"code","f07d15d4":"code","a295fcd1":"code","53e2a633":"code","0379be70":"code","ff5a22b1":"code","1c18795f":"code","9cf75e25":"code","1d49c94f":"code","81edabf3":"code","03deab54":"code","5395c5fc":"code","648fbeb3":"code","89ac26b2":"code","5861c21a":"code","67b1889e":"code","97355422":"code","11c06082":"code","5b07f0d5":"markdown","2522185f":"markdown","b7f9a072":"markdown","7b1de9ab":"markdown","0d1231a9":"markdown","dde7f97b":"markdown","718453d4":"markdown","9d541a41":"markdown","934fda43":"markdown","ff224ad6":"markdown","f977eb19":"markdown","5e251af7":"markdown","4395a17d":"markdown","c38e9ebd":"markdown","2ab2a973":"markdown","967fe97e":"markdown","db601e70":"markdown","6344d867":"markdown","4f08e830":"markdown","4d52f31e":"markdown","5a4b26cc":"markdown","3af73123":"markdown","5bcc265b":"markdown","0e13c0f0":"markdown"},"source":{"e0457c1b":"import os\nprint(os.listdir(\".\/\"))\n\nimport pandas as pd # data processing\ntrain = pd.read_csv('..\/input\/train.csv',index_col = \"PassengerId\")\nprint(train.shape)\ntrain.head()","b2a16ec7":"test = pd.read_csv('..\/input\/test.csv',index_col = \"PassengerId\")\nprint(test.shape)\ntest.head()","ec9e8eea":"%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt","3a23892e":"sns.countplot(data = train, x = \"Sex\", hue = \"Survived\")","83795069":"pd.pivot_table(train, index = \"Sex\", values = \"Survived\")","bede4c45":"sns.countplot(data = train, x = \"Pclass\", hue = \"Survived\")","1716030a":"pd.pivot_table(train, index = \"Pclass\", values = \"Survived\")","0ecf15b6":"sns.countplot(data = train, x = \"Embarked\", hue = \"Survived\")","e28e436a":"pd.pivot_table(train, index = \"Embarked\", values = \"Survived\")","70537e19":"train.loc[train[\"Sex\"] == \"male\", \"enc_sex\"] = 0\ntrain.loc[train[\"Sex\"] == \"female\", \"enc_sex\"] = 1\n\nprint(train.shape)\n\ntrain[[\"Sex\",\"enc_sex\"]].head()","6828befd":"test.loc[test[\"Sex\"] == \"male\", \"enc_sex\"] = 0\ntest.loc[test[\"Sex\"] == \"female\", \"enc_sex\"] = 1\n\nprint(test.shape)\n\ntest[[\"Sex\",\"enc_sex\"]].head()","f14db8d0":"train[\"Emb_C\"] = train[\"Embarked\"] == \"C\"\ntrain[\"Emb_S\"] = train[\"Embarked\"] == \"S\"\ntrain[\"Emb_Q\"] = train[\"Embarked\"] == \"Q\"\n\nprint(train.shape)\n\ntrain[[\"Embarked\",\"Emb_C\",\"Emb_S\",\"Emb_Q\"]].head()","6d54140f":"test[\"Emb_C\"] = test[\"Embarked\"] == \"C\"\ntest[\"Emb_S\"] = test[\"Embarked\"] == \"S\"\ntest[\"Emb_Q\"] = test[\"Embarked\"] == \"Q\"\n\nprint(test.shape)\n\ntest[[\"Embarked\",\"Emb_C\",\"Emb_S\",\"Emb_Q\"]].head()","a05b0967":"train[train[\"Fare\"].isnull()]","1463bb09":"test[test[\"Fare\"].isnull()]","99ef73f7":"train[\"fillinFare\"] = train[\"Fare\"]\n\nprint(train.shape)\n\ntrain[[\"Fare\",\"fillinFare\"]].head()","2a145d1d":"test[\"fillinFare\"] = test[\"Fare\"]\n\nprint(test.shape)\n\ntest[[\"Fare\",\"fillinFare\"]].head()","354f993a":"test.loc[test[\"Fare\"].isnull(), \"fillinFare\"] = 0\ntest.loc[test[\"Fare\"].isnull(), [\"Fare\", \"fillinFare\"]]","f2961d0c":"train[\"Name\"].head()","d3346355":"def title(Name):\n    Ans = Name.split(', ')[1].split(', ')[0]\n    return Ans\n\ntrain[\"Name\"].apply(title).unique()","996d550b":"train.loc[train[\"Name\"].str.contains(\"Mr\"), \"title\"] = \"Mr\"\ntrain.loc[train[\"Name\"].str.contains(\"Miss\"), \"title\"] = \"Miss\"\ntrain.loc[train[\"Name\"].str.contains(\"Mrs\"), \"title\"] = \"Mrs\"\ntrain.loc[train[\"Name\"].str.contains(\"Master\"), \"title\"] = \"Master\"\n\nprint(train.shape)\n\ntrain[[\"Name\", \"title\"]].head(10)","9a683642":"sns.countplot(data=train, x=\"title\", hue=\"Survived\")","d9621931":"pd.pivot_table(train, index=\"title\", values=\"Survived\")","a5da393b":"train[\"Master\"] = train[\"Name\"].str.contains(\"Master\")\nprint(train.shape)\ntrain[[\"Name\", \"Master\"]].head(20)","473d66b2":"test[\"Master\"] = test[\"Name\"].str.contains(\"Master\")\nprint(test.shape)\ntest[[\"Name\", \"Master\"]].head(20)","d361d5c6":"train[\"Child\"] = train[\"Age\"] < 14\n\nprint(train.shape)\n\ntrain[[\"Age\", \"Child\"]].head(10)","f07d15d4":"test[\"Child\"] = test[\"Age\"] < 14\n\nprint(test.shape)\n\ntest[[\"Age\", \"Child\"]].head(10)","a295fcd1":"train[\"FamilySize\"] = train[\"SibSp\"] + train[\"Parch\"] + 1\n\nprint(train.shape)\n\ntrain[[\"SibSp\", \"Parch\", \"FamilySize\"]].head()","53e2a633":"test[\"FamilySize\"] = test[\"SibSp\"] + test[\"Parch\"] + 1\n\nprint(test.shape)\n\ntest[[\"SibSp\", \"Parch\", \"FamilySize\"]].head()","0379be70":"train[\"Single\"] = train[\"FamilySize\"] == 1\n\ntrain[\"Middle\"] = (train[\"FamilySize\"] > 1) & (train[\"FamilySize\"] < 5)\n\ntrain[\"Big\"] = train[\"FamilySize\"] >= 5\n\nprint(train.shape)\n\ntrain[[\"FamilySize\", \"Single\", \"Middle\", \"Big\"]].head(10)","ff5a22b1":"test[\"Single\"] = test[\"FamilySize\"] == 1\ntest[\"Middle\"] = (test[\"FamilySize\"] > 1) & (test[\"FamilySize\"] < 5)\ntest[\"Big\"] = test[\"FamilySize\"] >= 5\n\nprint(test.shape)\n\ntest[[\"FamilySize\", \"Single\", \"Middle\", \"Big\"]].head(10)","1c18795f":"feature = [\"Pclass\", \"enc_sex\", \"Emb_C\", \"Emb_S\", \"Emb_Q\",\"fillinFare\",\n                 \"Master\",\"Child\", \"Single\", \"Middle\", \"Big\"]\nfeature","9cf75e25":"label = \"Survived\"\nlabel","1d49c94f":"X_train = train[feature]\n\nprint(X_train.shape)\n\nX_train.head()","81edabf3":"X_test = test[feature]\n\nprint(X_test.shape)\n\nX_test.head()","03deab54":"y_train = train[label]\n\nprint(y_train.shape)\n\ny_train.head()","5395c5fc":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier(max_depth=9, random_state=0)\nmodel","648fbeb3":"model.fit(X_train, y_train)","89ac26b2":"import graphviz\nfrom sklearn.tree import export_graphviz\n\ntree = export_graphviz(model,\n                           feature_names=feature,\n                           class_names=[\"Perish\", \"Survived\"],\n                           out_file=None)\n\ngraphviz.Source(tree)","5861c21a":"prediction = model.predict(X_test)\n\nprint(prediction.shape)\n\nprediction[0:9]","67b1889e":"submission = pd.read_csv('..\/input\/gender_submission.csv',index_col = \"PassengerId\")\n\nprint(submission.shape)\n\nsubmission.tail(10)","97355422":"submission[\"Survived\"] = prediction\n\nprint(submission.shape)\n\nsubmission.tail(10)","11c06082":"submission.to_csv(\"tree.csv\")","5b07f0d5":"**Fill in missing value - Fare**","2522185f":"**Column description**\n* survival : 0 = No, 1 = Yes\n* pclass : ticket class \/ 1 = 1st, 2 = 2nd, 3 = 3rd\n* sex : male, female\n* Age : age in years\n* sibsp : # of siblings \/ spouses aboard the Titanic\n* parch : # of parents \/ children aboard the Titanic\n* ticket : ticket number(strings)\n* fare : passenger fare\n* cabin : cabin number\n* embarked = port of embarkation \/ C = Cherbourg(France), Q = Queenstown(UK), S = Southampton(UK)","b7f9a072":"**Feature Selection**","7b1de9ab":"**Preprocessing**\n1. Encoding Sex\n2. One-Hot-Encoding Embarked\n3. Fill in missing value - Fare\n4. Name\n5. Age\n6. Family Size","0d1231a9":"**Label allocate**","dde7f97b":"**Submission**","718453d4":"**Conclusion** : Analysis shows that the higher the Pclass, the higher the probability of survival.","9d541a41":"**Load Data**","934fda43":"**Conclusion** : The analysis shows that although the survival rate of the passenger named Mr. is only 15.8%, the survival rate of the passenger named Miss is 70%, the survival rate of the passenger with Mrs is 79%, and, crucially, the survival rate of the master is 57.5%.","ff224ad6":"**Decision Tree - Scikit-learn**","f977eb19":"**One-Hot-Encoding Embarked**","5e251af7":"**Sex**","4395a17d":"**Prediction**","c38e9ebd":"**Pclass**","2ab2a973":"**Conclusion** : Analysis shows that female passengers are overwhelmingly more likely to survive than male passengers.","967fe97e":"**Name**","db601e70":"**Visualization**","6344d867":"**Embarked**","4f08e830":"** Training **","4d52f31e":"**Conclusion** : Analysis shows that the more you board in Cherbourg (C), the more likely you are to survive, and the more likely you are to die in Southampton (S).","5a4b26cc":"**Age**","3af73123":"**EDA : Exploratory Data Analysis**\n1. 1 Variable\n    * Sex\n    * Pclass\n    * Embarked\n\n2. 2 Variable\n    * Age & Fare\n    * SibSp & Parch","5bcc265b":"**Encoding Sex**","0e13c0f0":"** FamilySize **"}}