{"cell_type":{"de977a8c":"code","51e73b1d":"code","3793bb22":"code","08a561db":"code","07011aff":"code","0f492f82":"code","67b5bdcc":"code","7ce70e0c":"code","b455e01f":"code","e6cad503":"code","3fbd7acb":"code","c3d70a68":"code","54c3d625":"code","f92e8727":"markdown","65dbabb1":"markdown","64049ff7":"markdown","bbfb21d1":"markdown","8099ac44":"markdown"},"source":{"de977a8c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ntrain = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/sample_submission.csv')\ntrain.pop('id')\ntest.pop('id')\nprint(train.shape)\nprint(test.shape)\ntrain.head()","51e73b1d":"X = train.copy()\ny = X.pop('target')\ntarget_labels = {label:val for val,label in zip(range(1,10), np.sort(y.unique()))}\ny = y.map(target_labels)","3793bb22":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.1, random_state=42)","08a561db":"from sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import MinMaxScaler\n\n#Preprocssing for numerical data\nnumerical_transformer = MinMaxScaler()\npreprocessor = ColumnTransformer(transformers=[\n                                ('num', numerical_transformer, X_train.columns)])","07011aff":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import log_loss\nmodel = LogisticRegression(max_iter=1000)","0f492f82":"# Create and evaluate\nmy_pipeline = Pipeline(steps=[('preprcessor', preprocessor),\n                                ('model', model)])\n","67b5bdcc":"my_pipeline.fit(X_train, y_train)\npreds = my_pipeline.predict_proba(X_val)\nscore = log_loss(y_val, preds)\nprint('Logloss:', score)","7ce70e0c":"my_pipeline.fit(X, y)","b455e01f":"preds = my_pipeline.predict_proba(test)\npreds","e6cad503":"target_columns = {val:'Class_'+str(label) for val,label in zip(range(1,10), np.sort(y.unique()))}\nsub = pd.DataFrame(preds, columns=target_columns.values())\nsub","3fbd7acb":"sub['id'] = sample_submission['id']\nsub","c3d70a68":"sub = sub[['id'] + list(sub.columns[:-1])]\nsub","54c3d625":"sub.to_csv('first_logistic_submission.csv',index=False)","f92e8727":"# Create the model","65dbabb1":"#### Retrain on whole train data and predict on test","64049ff7":"## Define the preprocessing steps","bbfb21d1":"# Evaluate the model","8099ac44":"#### Predict on validation"}}