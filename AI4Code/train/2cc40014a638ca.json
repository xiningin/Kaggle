{"cell_type":{"b89ab018":"code","a3fd6e46":"code","eadd9e5a":"code","3a298658":"code","67fc53b8":"code","e04ecc57":"code","c1c93816":"code","103f39e3":"code","c47b2d6e":"code","51ea5033":"code","e84f7002":"code","d49af74d":"code","c00d45f9":"code","946e0d8e":"code","de33b79c":"code","5cdf5f73":"code","92fabf9e":"code","a82cf8e5":"markdown","33648d6c":"markdown","5efc4662":"markdown"},"source":{"b89ab018":"import numpy as np\nimport pandas as pd\nfrom sklearn.datasets import make_swiss_roll\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\n\nmpl.rc('axes', labelsize=14)\nmpl.rc('xtick', labelsize=12)\nmpl.rc('ytick', labelsize=12)\n\n\nfrom sklearn.model_selection import train_test_split","a3fd6e46":"N_SAMPLES = 1000\nNOISE = 0.2\nRANDOM_SEED = 42","eadd9e5a":"X, y = make_swiss_roll(n_samples=N_SAMPLES, noise=NOISE, random_state=RANDOM_SEED)","3a298658":"len(X),len(y)","67fc53b8":"X[:5]","e04ecc57":"y[:5]","c1c93816":"def addColumn(df):\n    new_col = []\n    i = 0\n    for col in df.columns:\n        if i ==  len(df.columns) - 1:\n            new_col.append(\"target\")\n        else :\n            new_col.append(\"f\" + str(i))\n\n        i += 1\n\n    df.columns = new_col","103f39e3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","c47b2d6e":"X_train_df = pd.DataFrame(X_train)\ny_train_df = pd.DataFrame(y_train)\n\ntrain = pd.concat([X_train_df,y_train_df],axis=1)\naddColumn(train)\ntrain.to_csv(\"train.csv\",index=False)\ntrain.head()","51ea5033":"X_test_df = pd.DataFrame(X_test)\ny_test_df = pd.DataFrame(y_test)\n\ntest = pd.concat([X_test_df,y_test_df],axis=1)\naddColumn(test)\ntest.to_csv(\"test.csv\",index=False)\ntest.head()","e84f7002":"fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(222, projection='3d')\n\nax.scatter(X[:, 0], X[:, 1], X[:, 2], c=y, cmap=plt.cm.hot)\nplt.show()","d49af74d":"axes = [-11.5, 14, -2, 23, -12, 15]\n\nfig = plt.figure(figsize=(5, 5))\nax = fig.add_subplot(111, projection='3d')\n\nax.scatter(X[:, 0], X[:, 1], X[:, 2], c=y, cmap=plt.cm.hot)\nax.view_init(10, -70)\nax.set_xlabel(\"$x_1$\", fontsize=18)\nax.set_ylabel(\"$x_2$\", fontsize=18)\nax.set_zlabel(\"$x_3$\", fontsize=18)\nax.set_xlim(axes[0:2])\nax.set_ylim(axes[2:4])\nax.set_zlim(axes[4:6])\n\nplt.show()","c00d45f9":"axes = [-11.5, 14, -2, 23, -12, 15]\n\nx2s = np.linspace(axes[2], axes[3], 10)\nx3s = np.linspace(axes[4], axes[5], 10)\nx2, x3 = np.meshgrid(x2s, x3s)","946e0d8e":"fig = plt.figure(figsize=(6, 5))\nax = plt.subplot(111, projection='3d')\n\npositive_class = X[:, 0] > 5\nX_pos = X[positive_class]\nX_neg = X[~positive_class]\n\nax.view_init(10, -70)\nax.plot(X_neg[:, 0], X_neg[:, 1], X_neg[:, 2], \"y^\")\nax.plot_wireframe(5, x2, x3, alpha=0.5)\nax.plot(X_pos[:, 0], X_pos[:, 1], X_pos[:, 2], \"gs\")\nax.set_xlabel(\"$x_1$\", fontsize=18)\nax.set_ylabel(\"$x_2$\", fontsize=18)\nax.set_zlabel(\"$x_3$\", fontsize=18)\nax.set_xlim(axes[0:2])\nax.set_ylim(axes[2:4])\nax.set_zlim(axes[4:6])\n\nplt.show()","de33b79c":"fig = plt.figure(figsize=(5, 4))\nax = plt.subplot(111)\n\nplt.plot(y[positive_class], X[positive_class, 1], \"gs\")\nplt.plot(y[~positive_class], X[~positive_class, 1], \"y^\")\n\nplt.axis([4, 15, axes[2], axes[3]])\nplt.xlabel(\"$z_1$\", fontsize=18)\nplt.ylabel(\"$x_2$\", fontsize=18, rotation=0)\nplt.grid(True)\n\nplt.show()","5cdf5f73":"fig = plt.figure(figsize=(6, 5))\nax = plt.subplot(111, projection='3d')\n\npositive_class = 2 * (y[:] - 4) > X[:, 1]\nX_pos = X[positive_class]\nX_neg = X[~positive_class]\nax.view_init(10, -70)\nax.plot(X_neg[:, 0], X_neg[:, 1], X_neg[:, 2], \"y^\")\nax.plot(X_pos[:, 0], X_pos[:, 1], X_pos[:, 2], \"gs\")\nax.set_xlabel(\"$x_1$\", fontsize=18)\nax.set_ylabel(\"$x_2$\", fontsize=18)\nax.set_zlabel(\"$x_3$\", fontsize=18)\nax.set_xlim(axes[0:2])\nax.set_ylim(axes[2:4])\nax.set_zlim(axes[4:6])\n\nplt.show()","92fabf9e":"fig = plt.figure(figsize=(5, 4))\nax = plt.subplot(111)\n\nplt.plot(y[positive_class], X[positive_class, 1], \"gs\")\nplt.plot(y[~positive_class], X[~positive_class, 1], \"y^\")\nplt.plot([4, 15], [0, 22], \"b-\", linewidth=2)\nplt.axis([4, 15, axes[2], axes[3]])\nplt.xlabel(\"$z_1$\", fontsize=18)\nplt.ylabel(\"$x_2$\", fontsize=18, rotation=0)\nplt.grid(True)\n\nplt.show()","a82cf8e5":"# make train dataset","33648d6c":"# Data Visualization","5efc4662":"# make test dataset "}}