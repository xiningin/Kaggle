{"cell_type":{"210f7f46":"code","5130b5cc":"code","be33c04d":"code","59d34aa5":"code","39fd4330":"code","80e9d56d":"code","77e107d8":"code","a6134dbb":"code","3cf18681":"code","7603aab3":"code","cec07f44":"code","d535a5f5":"code","7c29bd5a":"code","f95d3954":"markdown","376d42e0":"markdown","0ca4b19a":"markdown","303d7d12":"markdown","77f6f23f":"markdown","7538766e":"markdown","60243d34":"markdown","621dff8f":"markdown","983785c3":"markdown","4cb7cdbd":"markdown","7bcf250c":"markdown"},"source":{"210f7f46":"import pandas as pd\nimport numpy as np\nimport xgboost as xgb\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix\nimport sklearn as sk\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport matplotlib.pyplot as plt","5130b5cc":"df = pd.read_csv('..\/input\/crime.csv', encoding='ISO-8859-1')\ndf.head()","be33c04d":"df.info()","59d34aa5":"df = df[df['UCR_PART'] == 'Part One']\ndf.nunique()","39fd4330":"df2 =df.loc[:, ['OFFENSE_CODE_GROUP', 'DISTRICT', 'REPORTING_AREA', 'YEAR', 'MONTH', 'DAY_OF_WEEK', 'HOUR', 'STREET','Lat','Long']]","80e9d56d":"s = df2['OFFENSE_CODE_GROUP'].value_counts(normalize=True)\ns2 = pd.DataFrame(s)\ns2.plot.pie(y='OFFENSE_CODE_GROUP',figsize=(5, 5), legend=False, counterclock=False, startangle=0, autopct=\"%1.1f%%\")\nplt.show()","77e107d8":"str =['OFFENSE_CODE_GROUP', 'DISTRICT', 'REPORTING_AREA', 'DAY_OF_WEEK', 'STREET']\n\nfor column in str:\n    labels, uniques = pd.factorize(df2[column])\n    print(uniques)\n    df2[column] = labels\n","a6134dbb":"df2.nunique()","3cf18681":"df2.loc[df2['OFFENSE_CODE_GROUP'] == 3, 'OFFENSE_CODE_GROUP'] = 0\ndf2.loc[df2['OFFENSE_CODE_GROUP'] > 0, 'OFFENSE_CODE_GROUP'] = 1\ndf2.head()","7603aab3":"df2 = df2.drop('YEAR', axis=1)\ndf_train, df_test = train_test_split(df2, test_size=0.1)\nX_train = df_train.iloc[:,1:] \ny_train = df_train.iloc[:,:1]\nX_test = df_test.iloc[:,1:] \ny_test = df_test.iloc[:,:1].values.flatten()","cec07f44":"param_grid = {\n'learning_rate':[0.1],\n'n_estimators':[50,100],\n'max_depth':[5,10],\n'min_child_weight':[1,2,3],\n'max_delta_step':[5],\n'gamma':[0.001, 0.01, 0.1,1,10],\n'subsample':[0.8],\n'colsample_bytree':[0.8],\n'objective':['binary:logistic'],\n'nthread':[4],\n'scale_pos_weight':[1],\n'seed':[0],\n'scoring':['roc_auc'],\n'tree_method':['gpu_hist']\n}\n\ngrid_search = GridSearchCV(xgb.XGBClassifier(tree_method='gpu_hist',verbosity=2),param_grid, cv=5, verbose=3)\ngrid_search.fit(X_train, y_train)","d535a5f5":"grid_search.score(X_test,y_test)","7c29bd5a":"y_test_pred = grid_search.predict(X_test)\n\ncm = confusion_matrix(y_test, y_test_pred)\ncm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n\nlabels={'Larceny', 'others'}\n\ndf_cmx = pd.DataFrame(cm)\nsns.heatmap(df_cmx, annot=True, xticklabels=labels, yticklabels=labels)\nplt.show()","f95d3954":"See the estimation accuracy.","376d42e0":"Load data.","0ca4b19a":"## 3. Evaluation","303d7d12":"Since the distributions for these crime types (OFFENSE_CODE_GROUP), we decided to divide them into the following two categories.\n\n- Larceny: OFFENSE_CODE_GROUP = 'Larceny'(0) or 'Larceny From Motor Vehicle'(3)\n- Others : OFFENSE_CODE_GROUP is not 0 nor 3.\n\nThe baseline is 59.7% (42.1%(Larceny) + 17.6%(Larceny From Motor Vehicle))","77f6f23f":"See confusion matrix.","7538766e":"## Experimental: Crime Code Estimation\n\n### Assumption\nThere are some observable patterns in certain category of crimes.\n\n### What to do\n- Estimate types of crimes from their attributes (e.g. time and locations) by using xgboost.\n- Evaluate the accuracy of estimates.\n\n## 1. Preparation\n\nLoad libraries.","60243d34":"Here we analyze only serious crims. ('UCR_PART' == 'Part One')","621dff8f":"- Conduct two-class classification by XGBClassifier.\n- Perform hyperparameter search using GridSearchCV.","983785c3":"See the distribution of crime types ('OFFENSE_CODE_GROUP').","4cb7cdbd":"## 4. Summary\n\n- Accuracy is 68%. Not so better than the baseline (60%).\n- Precision for 'Larceny' type is high (78%), but not for 'others' (53%).\n\nAs a result, it seems that the attribute data does not have enough evidence to support the assumption (Certain types of crimes have pattens in time and location).","7bcf250c":"## 2. Estimate crime types\n\nPrepare training set and test set."}}