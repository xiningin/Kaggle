{"cell_type":{"876aec7c":"code","f9cc648a":"code","3b5ab0d6":"code","7a58bedb":"code","91f296ca":"code","1e50a8f9":"code","0d07fefd":"code","2b68000c":"code","897c0e4a":"code","e2c864db":"code","36d289a4":"code","99974cb1":"code","a1fdcb63":"code","81b8f81b":"code","b776b733":"code","66a639bf":"code","bc8b610f":"code","30ecb382":"code","93ad8c92":"code","994b8c39":"code","1a6d147c":"code","4e05c285":"code","ab103104":"code","1c63f43d":"code","af541a0c":"code","bb9672e0":"code","e133145b":"code","bb8e9aa8":"code","c2c8f299":"code","ae959d8a":"code","1b1be3e6":"code","a08e8b7a":"code","23c880ff":"code","cbce9cf6":"code","05330195":"code","eef3ce9c":"code","8b1998a3":"code","6c8a3e90":"code","a09319fb":"code","6cb4e8f8":"code","55f2d2ab":"code","59624b29":"code","bfb375c4":"code","5ba0f471":"code","a146271b":"code","df030f17":"code","79d73162":"code","5e623c2a":"code","5b574b48":"markdown","68c668ee":"markdown","dfbd2b28":"markdown","46b9f2f4":"markdown","f158a220":"markdown","a20a960d":"markdown","d4914261":"markdown","45c9ccf8":"markdown","23a9c22a":"markdown","ce440e2d":"markdown","b86a5307":"markdown","d27982b8":"markdown","24918996":"markdown","cf13e062":"markdown","30d4cd54":"markdown","8e3b9150":"markdown","7d105992":"markdown","bf3ff4a7":"markdown","e6195b76":"markdown","55c53f4a":"markdown","415084e7":"markdown","980308f6":"markdown","61575dd2":"markdown","7bd8d474":"markdown","064aa693":"markdown","f42a2254":"markdown","bfc4f277":"markdown","8b79cdda":"markdown","ea7a76d4":"markdown","e285d345":"markdown","6c58582f":"markdown","51eeb38e":"markdown","4332a72c":"markdown","071bd1db":"markdown","30a51e56":"markdown","4d9a075c":"markdown","94be13d2":"markdown","c4a9c464":"markdown","d2961551":"markdown","8a7ca997":"markdown","aad129bf":"markdown","106f1e88":"markdown","7a7aabb0":"markdown","29ce301b":"markdown","2838f3e1":"markdown","842b2683":"markdown","15b11908":"markdown","74a9638d":"markdown","773e8632":"markdown","973453f3":"markdown","475411a6":"markdown","0f7cd46f":"markdown","3002e28c":"markdown"},"source":{"876aec7c":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nimport pandas as pd\nimport warnings\n\nwarnings.filterwarnings('ignore')","f9cc648a":"median_house_hold_in_come = pd.read_csv('..\/input\/police\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\n\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/police\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\n\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/police\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\n\nshare_race_city = pd.read_csv('..\/input\/police\/ShareRaceByCity.csv', encoding=\"windows-1252\")\n\nkill = pd.read_csv('..\/input\/police\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","3b5ab0d6":"percentage_people_below_poverty_level.poverty_rate.value_counts()","7a58bedb":"percentage_people_below_poverty_level.info()","91f296ca":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)","1e50a8f9":"area_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\n\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    \n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)","0d07fefd":"data = pd.DataFrame({'area_list': area_list, 'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\n\nsorted_data = data.reindex(new_index)","2b68000c":"plt.figure(figsize=(15, 10))  # Create a 15x10 sized plot\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\n\nplt.xticks(rotation= 45)\n\nplt.xlabel('States')  # Rename x label\nplt.ylabel('Poverty Rate')  # Rename y label\n\nplt.title('Poverty Rate Given States')  # Add a title\n\nplt.show()","897c0e4a":"kill.name.value_counts()","e2c864db":"kill.info()","36d289a4":"separate = kill.name[kill.name != 'TK TK'].str.split()\nnames, surnames = zip(*separate)\n\nname_list = names+surnames\n\nname_count = Counter(name_list)\nmost_common_names = name_count.most_common(15)","99974cb1":"names, values = zip(*most_common_names)\nnames, values = list(names), list(values)","a1fdcb63":"plt.figure(figsize=(15,10))  # Create a 15x10 sized plot\nsns.barplot(x=names, y=values, palette=sns.cubehelix_palette(len(names)))\n\nplt.xticks(rotation= 45)\n\nplt.xlabel('Name or Surname of killed people')  # Rename x label\nplt.ylabel('Frequency')  # Rename y label\n\nplt.title('Most common 15 Name or Surname of killed people')  # Add a title\n\nplt.show()","81b8f81b":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","b776b733":"percent_over_25_completed_highSchool.info()","66a639bf":"percent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)","bc8b610f":"area_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_high_school = []\n\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n\n    area_high_school_rate = sum(x.percent_completed_hs)\/len(x)\n    area_high_school.append(area_high_school_rate)","30ecb382":"data = pd.DataFrame({'area_list': area_list,'area_high_school_ratio':area_high_school})\nnew_index = (data['area_high_school_ratio'].sort_values(ascending=True)).index.values\n\nsorted_data2 = data.reindex(new_index)","93ad8c92":"plt.figure(figsize=(15,10))  # Create a 15x10 sized plot\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_high_school_ratio'])\n\nplt.xticks(rotation= 45)\n\nplt.xlabel('States')  # Rename x label\nplt.ylabel('High School Graduate Rate')  # Rename y label\n\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")  # Add a title\n\nplt.show()","994b8c39":"share_race_city.value_counts()","1a6d147c":"share_race_city.info()","4e05c285":"share_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\n\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\n\narea_list = list(share_race_city['Geographic area'].unique())","ab103104":"share_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\n\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n\n    share_white.append(sum(x.share_white)\/len(x))\n\n    share_black.append(sum(x.share_black) \/ len(x))\n\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n\n    share_asian.append(sum(x.share_asian) \/ len(x))\n\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))","1c63f43d":"f, ax = plt.subplots(figsize = (9,15))  # Create a 15x10 sized plot\n\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")\n\nplt.show()","af541a0c":"sorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_high_school_ratio'] = sorted_data2['area_high_school_ratio']\/max( sorted_data2['area_high_school_ratio'])\n\ndata = pd.concat([sorted_data,sorted_data2['area_high_school_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)","bb9672e0":"f,ax1 = plt.subplots(figsize =(20,10))  # Create a 15x10 sized plot\n\nsns.pointplot(x='area_list', y='area_poverty_ratio', data=data,color='lime', alpha=0.8)\nsns.pointplot(x='area_list', y='area_high_school_ratio', data=data,color='red', alpha=0.8)\n\nplt.text(40,0.6, 'high school graduate ratio', color='red',fontsize = 17, style = 'italic')  # Put a text on graphic\nplt.text(40,0.55, 'poverty ratio',color='lime', fontsize = 18, style = 'italic')  # Put a text on graphic\n\nplt.xlabel('States', fontsize = 15, color='blue')  # Rename x label\nplt.ylabel('Values', fontsize = 15, color='blue')  # Rename y label\n\nplt.title('High School Graduate  VS  Poverty Rate', fontsize = 20, color='blue')  # Add a title\n\nplt.grid()\nplt.show()","e133145b":"grap = sns.jointplot(data.area_poverty_ratio, data.area_high_school_ratio, kind=\"kde\", size=7)\n\nplt.show()","bb8e9aa8":"g = sns.jointplot(\"area_poverty_ratio\", \"area_high_school_ratio\", data=data,size=5, ratio=3, color=\"r\")","c2c8f299":"kill.race.dropna(inplace = True)\nlabels = kill.race.value_counts().index\n\ncolors = ['grey','blue','red','yellow','green','brown']\n\nexplode = [0,0,0,0,0,0]\n\nsizes = kill.race.value_counts().values","ae959d8a":"plt.figure(figsize = (7,7))\n\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\n\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)\n\nplt.show()","1b1be3e6":"sns.lmplot(x=\"area_poverty_ratio\", y=\"area_high_school_ratio\", data=data)\n\nplt.show()","a08e8b7a":"sns.kdeplot(data.area_poverty_ratio, data.area_high_school_ratio, shade=True, cut=3)\n\nplt.show()","23c880ff":"pal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\n\nsns.violinplot(data=data, palette=pal, inner=\"points\")\n\nplt.show()","cbce9cf6":"f,ax = plt.subplots(figsize=(5, 5))\n\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\n\nplt.show()","05330195":"sns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\n\nplt.show()","eef3ce9c":"sns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=kill)\n\nplt.show()","8b1998a3":"sns.pairplot(data)\n\nplt.show()","6c8a3e90":"sns.countplot(kill.gender)\n\nsns.countplot(kill.manner_of_death)\n\nplt.title(\"gender\",color = 'blue',fontsize=15)\n\nplt.show()","a09319fb":"armed = kill.armed.value_counts()\n\nplt.figure(figsize=(10,7))\n\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\n\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\n\nplt.title('Kill weapon',color = 'blue',fontsize=15)\n\nplt.show()","6cb4e8f8":"above25 =['above25' if i >= 25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\n\nsns.countplot(x=df.age)\n\nplt.ylabel('Number of Killed People')\n\nplt.title('Age of killed people',color = 'blue',fontsize=15)\n\nplt.show()","55f2d2ab":"sns.countplot(data=kill, x='race')\n\nplt.title('Race of killed people',color = 'blue',fontsize=15)\n\nplt.show()","59624b29":"city = kill.city.value_counts()\n\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\n\nplt.xticks(rotation=45)\n\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)\n\nplt.show()","bfb375c4":"state = kill.state.value_counts()\n\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\n\nplt.title('Most dangerous state',color = 'blue',fontsize=15)\n\nplt.show()","5ba0f471":"sns.countplot(kill.signs_of_mental_illness)\n\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\n\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)\n\nplt.show()","a146271b":"sns.countplot(kill.threat_level)\n\nplt.xlabel('Threat Types')\n\nplt.title('Threat types',color = 'blue', fontsize = 15)\n\nplt.show()","df030f17":"sns.countplot(kill.flee)\n\nplt.xlabel('Flee Types')\n\nplt.title('Flee types',color = 'blue', fontsize = 15)\n\nplt.show()","79d73162":"sns.countplot(kill.body_camera)\n\nplt.xlabel('Having Body Cameras')\n\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)\n\nplt.show()","5e623c2a":"sta = kill.state.value_counts().index[:10]\n\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\n\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)\n\nplt.show()","5b574b48":"***\n\n## <center> <font color='#206ee3'>**Kde Plot** <a id=\"17\"><\/a>\n<font color='#a0ccd'>**What does kde plot mean?**<br>\n> <font color='#2fa3de'>sns.kdeplot(x=None, *, y=None, shade=None, vertical=False, kernel=None, bw=None, gridsize=200, cut=3, clip=None, legend=True, cumulative=False, shade_lowest=None, cbar=False, cbar_ax=None, cbar_kws=None, ax=None, weights=None, hue=None, palette=None, hue_order=None, hue_norm=None, multiple='layer', common_norm=True, common_grid=False, levels=10, thresh=0.05, bw_method='scott', bw_adjust=1, log_scale=None, color=None, fill=None, data=None, data2=None, **kwargs)<br> <br>\nA kernel density estimate (KDE) plot is a method for visualizing the distribution of observations in a dataset, analagous to a histogram. KDE represents the data using a continuous probability density curve in one or more dimensions. <br> <br>\n<font color='#a0ccd'> **Seaborn documentation :** **[Kde Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.kdeplot.html)**\n\n***","68c668ee":"***\n\n## <center><font color='#0c8bcf'>**Exercise IV**\n<a id=\"8\"><\/a>\n\n<font color='#a8a8a8'>**In this exercise we will take a look to a dataset which is about race rate by each city.\nAfter that, we will visualize the dataset.**\n\n***","dfbd2b28":"***\n\n<a id=\"2\"><\/a>\n## <center><font color='#206ee3'>  **Read data**\n\n***","46b9f2f4":"***\n\n## <center> <font color='#206ee3'>**Joint Plot** <a id=\"11\"><\/a>\n<font color='#a0ccd'>**What does joint plot mean?**<br>\n> <font color='#2fa3de'>sns.jointplot(**x**=None, **y**=None, **data**=None, **kind**='scatter', **color**=None, **height**=6, **ratio**=5, **space**=0.2, **dropna**=False, **xlim**=None, **ylim**=None, **marginal_ticks**=False, **joint_kws**=None, marginal_kws=None, hue=None, palette=None, hue_order=None, hue_norm=None, **kwargs)<br><br>\nDraw a plot of two variables with bivariate and univariate graphs.<br>\n    \n<font color='#a0ccd'> **Seaborn documentation :** **[Joint Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.jointplot.html)**     \n***","f158a220":"***\n\n### <center> <font color='#2a7ca8'> **Visualization**\n\n***","a20a960d":"***\n\n## <center> <font color='#206ee3'>**Swarm Plot** <a id=\"25\"><\/a>\n> <font color='#2fa3de'>sns.boxplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, width=0.8, dodge=True, fliersize=5, linewidth=None, whis=1.5, ax=None, **kwargs)<br> <br>\nDraw a box plot to show distributions with respect to categories.\n\n<font color='#a0ccd'> **Seaborn documentation :** **[Swarm Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.splot.html)**    \n***","d4914261":"***\n\n<a id=\"26\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will visualize gender and age ratio in dataset.**\n    \n***","45c9ccf8":"***\n\n### <center> <font color='#2a7ca8'> **Visualization**\n\n***","23a9c22a":"***\n\n<a id=\"20\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will take a look distribution with both violins and points.**\n    \n***","ce440e2d":"***\n\n## <center> <font color='#206ee3'>**Lm Plot** <a id=\"15\"><\/a>\n<font color='#a0ccd'>**What does lm plot mean?**<br>\n> <font color='#2fa3de'>sns.lmplot(x=None, y=None, data=None, hue=None, col=None, row=None, palette=None, col_wrap=None, height=5, aspect=1, markers='o', sharex=True, sharey=True, hue_order=None, col_order=None, row_order=None, legend=True, legend_out=True, x_estimator=None, x_bins=None, x_ci='ci', scatter=True, fit_reg=True, ci=95, n_boot=1000, units=None, seed=None, order=1, logistic=False, lowess=False, robust=False, logx=False, x_partial=None, y_partial=None, truncate=True, x_jitter=None, y_jitter=None, scatter_kws=None, line_kws=None, size=None) <br> <br>\nPlot data and regression model fits across a FacetGrid. <br>     \n<font color='#a0ccd'> **Seaborn documentation :** **[Lm Plot](http:\/\/seaborn.pydata.org\/generated\/seaborn.lmplot.html)**\n\n***","b86a5307":"***\n\n### <center> <font color='#2a7ca8'> **Change data to float**\n\n***","d27982b8":"***\n\n## <center> <font color='#206ee3'>**Point Plot** <a id=\"9\"><\/a>\n<font color='#a0ccd'>**What does point plot mean?**<br>\n> <font color='#2fa3de'>sns.pointplot(*, x=None, y=None, hue=None, data=None, order=None, hue_order=None, ci=95, n_boot=1000, units=None, seed=None, markers='o', linestyles='-', dodge=False, join=True, scale=1, orient=None, color=None, palette=None, errwidth=None, capsize=None, ax=None, **kwargs)<br><br>\nShow point estimates and confidence intervals using scatter plot glyphs.\nA point plot represents an estimate of central tendency for a numeric variable by the position of scatter plot points and provides some indication of the uncertainty around that estimate using error bars.<br>\n    \n<font color='#a0ccd'> **Seaborn documentation :** **[Point Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.pointplot.html)** \n***","24918996":"***\n\n### <center> <font color='#2a7ca8'> **Create lists for each race**\n\n***","cf13e062":"***\n\n## <center> <font color='#206ee3'> **Importing Libraries**\n<a id=\"1\"><\/a>\n\n***","30d4cd54":"***\n\n<a id=\"22\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will take a look correlation between high school graduation ratio and poverty ratio**\n    \n***","8e3b9150":"***\n\n### <center> <font color='#2a7ca8'> **Change dataset to list**\n\n***","7d105992":"***\n\n## <center> <font color='#206ee3'>**Box Plot** <a id=\"23\"><\/a>\n<font color='#a0ccd'>**What does box plot mean?**<br>\n> <font color='#2fa3de'>sns.boxplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, width=0.8, dodge=True, fliersize=5, linewidth=None, whis=1.5, ax=None, **kwargs)<br> <br>\nDraw a box plot to show distributions with respect to categories.\n\n<font color='#a0ccd'> **Seaborn documentation :** **[Box Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.boxplot.html)**    \n***","bf3ff4a7":"***\n\n## <center> <font color='#206ee3'>**Heatmap** <a id=\"21\"><\/a>\n<font color='#a0ccd'>**What does heatmap mean?**<br>\n> <font color='#2fa3de'>sns.heatmap(data, vmin=None, vmax=None, cmap=None, center=None, robust=False, annot=None, fmt='.2g', annot_kws=None, linewidths=0, linecolor='white', cbar=True, cbar_kws=None, cbar_ax=None, square=False, xticklabels='auto', yticklabels='auto', mask=None, ax=None, **kwargs)<br> <br>\nPlot rectangular data as a color-encoded matrix. <br>\n\n<font color='#a0ccd'> **Seaborn documentation :** **[Heatmap](https:\/\/seaborn.pydata.org\/generated\/seaborn.heatmap.html)**    \n    \n***","e6195b76":"***\n\n<a id=\"14\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will visualize race rates according in kill dataset.**\n    \n***","55c53f4a":"***\n\n<a id=\"18\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will compare and visualize high school graduation rate and poverty rate of each state.**\n    \n***","415084e7":"***\n\n### <center> <font color='#2a7ca8'> **Sort dataset and reindex it**\n\n***","980308f6":"***\n\n### <center> <font color='#2a7ca8'> **Visualization**\n\n***","61575dd2":"***\n\n## <center> <font color='#206ee3'>**Bar Plot** <a id=\"4\"><\/a>\n<font color='#a0ccd'>**What does bar plot mean?**<br>\n> <font color='#2fa3de'>sns.barplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, ci=95, n_boot=1000, units=None, seed=None, orient=None, color=None, palette=None, saturation=0.75, errcolor='.26', errwidth=None, capsize=None, dodge=True, ax=None, **kwargs)<br><br>\nShow point estimates and confidence intervals as rectangular bars.<br>\n    \n<font color='#a0ccd'> **Seaborn documentation :** **[Bar Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.barplot.html)** \n***","7bd8d474":"***\n\n### <center> <font color='#2a7ca8'> **Visualization**\n\n***","064aa693":"***\n\n## <center><font color='#0c8bcf'>**Exercise II**\n<a id=\"6\"><\/a>\n\n<font color='#a8a8a8'>**In this exercise we will take a look to a dataset which is about most common 15 name or surname of killed people.\nAfter that, we will visualize the dataset.**\n\n***","f42a2254":"***\n\n## <center> <font color='#206ee3'>**Violin Plot** <a id=\"19\"><\/a>\n<font color='#a0ccd'>**What does violin plot mean?**<br>\n> <font color='#2fa3de'>sns.violinplot(*, x=None, y=None, hue=None, data=None, order=None, hue_order=None, bw='scott', cut=2, scale='area', scale_hue=True, gridsize=100, width=0.8, inner='box', split=False, dodge=True, orient=None, linewidth=None, color=None, palette=None, saturation=0.75, ax=None, **kwargs) <br> <br>\nDraw a combination of boxplot and kernel density estimate.\n    \n<font color='#a0ccd'> **Seaborn documentation :** **[Violin Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.violinplot.html)**\n    \n***","bfc4f277":"***\n\n<a id=\"10\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will compare high school graduation rate and poverty rate of each state\nAfter that, we will visualize the dataset.**\n\n***","8b79cdda":"***\n\n### <center> <font color='#2a7ca8'> **Attend names and values to and variable and convert it to list**\n\n***","ea7a76d4":"***\n\n### <center> <font color='#2a7ca8'> **Attend areas to a list**\n\n***","e285d345":"***\n    \n## <font color='#77acfc'> **Contents**\n1. [**Importing Libraries**](#1)\n2. [**Read Data**](#2)\n3. [**Visualization**](#3) <br>\n4. [**Conclusion**](#31) <br>\n    \n***\n\n## <font color='#77acfc'> **Visualization** <a id=\"3\"><\/a>\n1. [**Bar Plot**](#4) <br>\n    1.1 [**Exercise I**](#5) <br>\n    1.2 [**Exercise II**](#6) <br>\n    1.3 [**Exercise III**](#7) <br>\n    1.4 [**Exercise IV**](#8) <br>\n2. [**Point Plot**](#9)<br>\n    2.1 [**Exercise I**](#10) \n3. [**Joint Plot**](#11)<br>\n    3.1 [**Exercise I**](#12)\n4. [**Pie Plot**](#13)<br>\n    4.1 [**Exercise I**](#14)\n5. [**Lm Plot**](#15)<br>    \n    5.1 [**Exercise I**](#16)\n6. [**Kde Plot**](#17)<br>    \n    6.1 [**Exercise I**](#18)\n7. [**Violin Plot**](#19)<br>    \n    7.1 [**Exercise I**](#20)\n8. [**Heatmap**](#21)<br>    \n    8.1 [**Exercise I**](#22)\n9. [**Box Plot**](#23)<br>    \n    9.1 [**Exercise I**](#24)\n10. [**Swarm Plot**](#25)<br>    \n    10.1 [**Exercise I**](#26)\n11. [**Pair Plot**](#27)<br>    \n    11.1 [**Exercise I**](#28)\n12. [**Count Plot**](#29)<br>    \n    12.1 [**Exercise I**](#30)\n    \n***    ","6c58582f":"***\n\n### <center> <font color='#2a7ca8'> **Separate and reunite values**\n\n***","51eeb38e":"***\n\n## <center> <font color='#0c8bcf'> **Exercise III**\n<a id=\"7\"><\/a>\n\n<font color='#a8a8a8'>**In this exercise we will take a look to a dataset which is about high school graduation rate of the population who is older than 25 years old in states.\nAfter that, we will visualize the dataset.**\n\n***","4332a72c":"***\n\n<a id=\"12\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will compare high school graduation rate and poverty rate of each state\nAfter that, we will visualize the dataset.**\nVisualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code <br>\npearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation. <br>\nIf it is zero, there is no correlation between variables. <br>\nShow the joint distribution using **K**ernel **D**ensity **E**stimation. <br>\n    \n***","071bd1db":"***\n\n## <center> <font color='#206ee3'>**Pair Plot** <a id=\"27\"><\/a>\n<font color='#a0ccd'>**What does pair plot mean?**<br>\n> <font color='#2fa3de'>sns.pairplot(data, *, hue=None, hue_order=None, palette=None, vars=None, x_vars=None, y_vars=None, kind='scatter', diag_kind='auto', markers=None, height=2.5, aspect=1, corner=False, dropna=False, plot_kws=None, diag_kws=None, grid_kws=None, size=None)<br> <br>\nPlot pairwise relationships in a dataset.\n\n<font color='#a0ccd'> **Seaborn documentation :** **[Pair Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.pairplot.html)**    \n***","30a51e56":"***\n\n### <center> <font color='#2a7ca8'> **Try to understand null data and data types**\n\n***","4d9a075c":"***\n\n## <center> <font color='#206ee3'>**Pie Plot** <a id=\"13\"><\/a>\n<font color='#a0ccd'>**What does pie plot mean?**<br>\n> <font color='#2fa3de'>plt.pie(x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=0, radius=1, counterclock=True, wedgeprops=None, textprops=None, center=0, 0, frame=False, rotatelabels=False, normalize=None, data=None)<br> <br>\nMake a pie chart of array x. <br>\n    \n<font color='#a0ccd'> **Seaborn documentation :** **[Pie Plot](https:\/\/matplotlib.org\/stable\/gallery\/pie_and_polar_charts\/pie_features.html)**    \n***","94be13d2":"***\n\n<a id=\"30\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will visualize the dataset.**\n    \n***","c4a9c464":"***\n\n### <center> <font color='#2a7ca8'> **Sorting**\n\n***","d2961551":"***\n\n### <center> <font color='#2a7ca8'> **Visualization**\n\n***","8a7ca997":"***\n\n<a id=\"16\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will compare and visualize high school graduation rate and poverty rate of each state.**\n    \n***","aad129bf":"***\n\n<a id=\"31\"><\/a>\n## <center><font color='#0c8bcf'>**Conclusion**\n### <font color='#000000'>**If you have any question, ask me then!**\n    \n***","106f1e88":"***\n\n<a id=\"28\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will visualize dataset.**\n    \n***","7a7aabb0":"***\n\n### <center> <font color='#2a7ca8'> Visualization\n\n***","29ce301b":"***\n\n### <center> <font color='#2a7ca8'> **Change dataset to list and replace null values to 0**\n\n***","2838f3e1":"***\n\n### <center> <font color='#2a7ca8'> **Attend high schools to a list**\n\n***","842b2683":"***\n\n### <center> <font color='#2a7ca8'> **Try to understand null data and data types**\n\n***","15b11908":"***\n\n# <center> <font color='#075e8c'> **Seaborn**\n\n<font color='#a0ccd'> **Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.**\n    \n<font color='#77acfc'> Seaborn Documentation : **[Seaborn](https:\/\/seaborn.pydata.org)** \n    \n***  ","74a9638d":"***\n\n<a id=\"24\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise, we will visualize gender and age ratio in dataset.**\n    \n***","773e8632":"***\n\n### <center> <font color='#2a7ca8'> **Analyze Data**\n\n***","973453f3":"***\n\n<a id=\"5\"><\/a>\n## <center><font color='#0c8bcf'>**Exercise I**\n<font color='#a8a8a8'>**In this exercise we will take a look to a dataset which is about people below poverty level as percentage.\nAfter that, we will visualize the dataset.**\n\n***","475411a6":"***\n\n## <center> <font color='#206ee3'>**Count Plot** <a id=\"29\"><\/a>\n<font color='#a0ccd'>**What does count plot mean?**<br>\n> <font color='#2fa3de'>sns.countplot(*, x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, dodge=True, ax=None, **kwargs)<br> <br>\nShow the counts of observations in each categorical bin using bars.\n    \n<font color='#a0ccd'> **Seaborn documentation :** **[Count Plot](https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html)**    \n***","0f7cd46f":"***\n\n### <center> <font color='#2a7ca8'> **Visualization**\n\n***","3002e28c":"***\n\n### <center> <font color='#2a7ca8'> **Try to understand null data and data types**\n\n***"}}