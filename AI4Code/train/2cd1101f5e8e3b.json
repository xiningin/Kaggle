{"cell_type":{"63cc67a7":"code","80488bdb":"code","1b99dca5":"code","9917aece":"code","79360903":"code","69b8b6d8":"code","3e3f902d":"code","586db96f":"code","166037d1":"code","7f539d60":"code","a3d93fc9":"code","504d4a62":"code","0f50c91b":"code","4dfac993":"code","25c7719f":"code","97162583":"code","1873167a":"code","4e162c52":"code","327a778c":"code","cffcc205":"code","b8a47d71":"code","1d25aca3":"code","0e0b7229":"code","4e5ad8e8":"code","2993f6e7":"code","7441050b":"code","c7a1872c":"code","f16646e2":"code","c92320b1":"code","48a29bd2":"code","6364ae03":"code","dad150d5":"code","4cec24e8":"code","3e0ac169":"code","074ca721":"code","a5ecfdf6":"code","93e0d2a9":"code","ee02b6e0":"code","b794a1ed":"code","adbfcef7":"code","43e2ac5c":"code","3f905780":"code","36b52944":"code","6bf64496":"code","4f4bdb34":"code","e4848925":"code","4b6903a0":"code","652b4a46":"markdown","f32bcf13":"markdown","eaa8cb24":"markdown","f1ecf123":"markdown","56e99c92":"markdown","ed812248":"markdown","5caefcb4":"markdown","e8bcd213":"markdown","85f433eb":"markdown","ae70fc4c":"markdown","feb2346b":"markdown","4c29b1c9":"markdown","5d853cf7":"markdown","878e1b6b":"markdown","1ee2979d":"markdown","d1706ad0":"markdown","35e14b16":"markdown","9a8f2822":"markdown","c6a344cf":"markdown","564b74df":"markdown","67417983":"markdown","b16c9faa":"markdown","656c3655":"markdown","e4c047f8":"markdown","70d91142":"markdown","1a3542b4":"markdown","b3110c42":"markdown","741dbb02":"markdown","fca6adc8":"markdown","59a90f1d":"markdown","d4301a86":"markdown","db05b722":"markdown"},"source":{"63cc67a7":"import pandas as pd","80488bdb":"from subprocess import check_output\nprint(check_output([\"ls\", \"\/kaggle\/input\/\"]).decode(\"utf8\"))","1b99dca5":"print(check_output([\"ls\", \"\/kaggle\/input\/loandata\"]).decode(\"utf8\"))","9917aece":"df = pd.read_csv(\"\/kaggle\/input\/loandata\/loanData.csv\")","79360903":"df.describe()","69b8b6d8":"df[\"annual_inc\"].describe()","3e3f902d":"df[[\"annual_inc\"]].info()","586db96f":"df.columns","166037d1":"df.iloc[:, 3]","7f539d60":"df[\"final_d\"]","a3d93fc9":"df.iloc[:, 3:6]","504d4a62":"df.iloc[4]","0f50c91b":"df.iloc[2:5]","4dfac993":"df.iloc[2:5, 2:5]","25c7719f":"df.iloc[:, 2].name","97162583":"df.columns.get_loc(\"issue_d\")","1873167a":"df.count()","4e162c52":"df.drop_duplicates()","327a778c":"df.drop_duplicates().count()","cffcc205":"df.drop_duplicates(subset =\"interest_rate\").count()","b8a47d71":"df.count()","1d25aca3":"df.drop_duplicates(subset =\"interest_rate\", inplace = True)","0e0b7229":"df.count()","4e5ad8e8":"df_copy = pd.read_csv(\"\/kaggle\/input\/loandata\/loanData.csv\")","2993f6e7":"df_copy.head()","7441050b":"df_copy[\"id\"].count()","c7a1872c":"df_copy.drop_duplicates(subset=\"interest_rate\", keep=False).count()","f16646e2":"df.sort_values(\"annual_inc\").head()","c92320b1":"df.sort_values(\"annual_inc\", ascending = False).head()","48a29bd2":"df.sort_values([\"home_ownership\", \"annual_inc\"])","6364ae03":"df_int = df[df[\"interest_rate\"] > 15.2]","dad150d5":"df_conditioned = df[(df[\"interest_rate\"] > 15.2) & (df[\"total_pymnt\"] > 20000)]","4cec24e8":"df_conditioned.count()","3e0ac169":"df_conditioned.head()","074ca721":"df_copy.groupby(\"home_ownership\").size()","a5ecfdf6":"type(df_copy.groupby(\"home_ownership\"))","93e0d2a9":"df_copy.groupby(\"home_ownership\").groups[\"MORTGAGE\"]","ee02b6e0":"df_copy.groupby(\"home_ownership\")[\"interest_rate\"].max().head()","b794a1ed":"df_copy.groupby(\"home_ownership\")[\"interest_rate\"].mean().head()","adbfcef7":"df.groupby(\"home_ownership\").agg({\"interest_rate\": [\"min\", \"max\", \"mean\", \"median\"],\n                                 \"annual_inc\":[\"min\", \"max\", \"mean\", \"median\"]})","43e2ac5c":"df_copy.groupby(\"home_ownership\").size()","3f905780":"df_copy.groupby([\"home_ownership\", \"income_category\"]).size()","36b52944":"df.isnull().sum()","6bf64496":"df.dropna()\ndf.fillna(0)","4f4bdb34":"import matplotlib.pyplot as plt\n%matplotlib inline","e4848925":"ax = df['interest_rate'].plot.hist(bins=20)\nax.set_xlabel('Interest Rate Histogram')","4b6903a0":"## 2 columns\ndf.plot(y='recoveries', x='total_pymnt')","652b4a46":"# Filtering Rows Conditionally","f32bcf13":"# Other Useful Functions","eaa8cb24":"Pandas is one of the most popular Python libraries for Data Science and Analytics. It helps you to manage two-dimensional data tables in Python. ","f1ecf123":"* **drop()** - This function removes the column or row that you pass in (You also have the specify the axis). \n* **agg()** - The aggregate function lets you compute summary statistics about each group\n* **apply()** - Lets you apply a specific function to any\/all elements in a Dataframe or Series\n* **get_dummies()** - Helpful for turning categorical data into one hot vectors.\n* **drop_duplicates()** - Lets you remove identical rows","56e99c92":"<b>How about (nth ro[](http:\/\/)w)?<\/b>","ed812248":"An interesting way of displaying Dataframes is through matplotlib. ","5caefcb4":"2. Sort by multiple columns","e8bcd213":"<b> How do we access third column (nth column)?<\/b>","85f433eb":"<b>What if we want to drop duplicates? <\/b>","ae70fc4c":"<b>Let's try a combination of selecting rows and columns<\/b>","feb2346b":"1. Drop duplicates on the entire set","4c29b1c9":"<b>How to get list of columns? <\/b>","5d853cf7":"<b>What if I want columns from 4th to 6th?<\/b>","878e1b6b":"# Data Cleaning","1ee2979d":"<b>Describe a column and get more info<\/b>","d1706ad0":"This also works if you have multiple conditions. I want to find all the elements where interest rate is greater than 15.2 and total payment is greater than 20000","35e14b16":"Drop duplicates based on one column","9a8f2822":"Another important function in Pandas is **groupby()**. This is a function that allows you to group entries by certain attributes (e.g Grouping entries by Wteam number) and then perform operations on them. ","c6a344cf":"# Sorting","564b74df":"Aggregation withing groupby","67417983":"## DAY 2\n\n# Recap\n\nLet's try to load the data (loan data), get information about it","b16c9faa":"# Introduction","656c3655":"# Grouping","e4c047f8":"# Visualizing Data","70d91142":"## Merging two datasets","1a3542b4":"Let's say that we want to sort the dataframe in increasing order for the scores of the losing team.\n\n1. Sort in ascending and descending order","b3110c42":"<b>How about row 3:6?<\/b>","741dbb02":"One of the big jobs of doing well in Kaggle competitions is that of data cleaning. A lot of times, the CSV file you're given (especially like in the Titanic dataset), you'll have a lot of missing values in the dataset, which you have to identify. The following **isnull** function will figure out if there are any missing values in the dataframe, and will then sum up the total for each column. In this case, we have a pretty clean dataset.","fca6adc8":"If you do end up having missing values in your datasets, be sure to get familiar with these two functions. \n* **dropna()** - This function allows you to drop all(or some) of the rows that have missing values. \n* **fillna()** - This function allows you replace the rows that have missing values with the value that you pass in.","59a90f1d":"Pandas has been around for a while and there are a lot of other good resources if you're still interested on getting the most out of this library. \n* http:\/\/pandas.pydata.org\/pandas-docs\/stable\/10min.html\n* https:\/\/www.datacamp.com\/community\/tutorials\/pandas-tutorial-dataframe-python\n* http:\/\/www.gregreda.com\/2013\/10\/26\/intro-to-pandas-data-structures\/\n* https:\/\/www.dataquest.io\/blog\/pandas-python-tutorial\/\n* https:\/\/drive.google.com\/file\/d\/0ByIrJAE4KMTtTUtiVExiUGVkRkE\/view\n* https:\/\/www.youtube.com\/playlist?list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y","d4301a86":"Now, let's say we want to find all of the rows that satisy a particular condition. For example, I want to find all the elements where interest rate is greater than 15.2.","db05b722":"# Lots of Other Great Resources"}}