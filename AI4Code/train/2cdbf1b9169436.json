{"cell_type":{"20869b52":"code","931fdf59":"code","fcda4669":"code","e37daf40":"code","869a6a38":"code","e4aeffcd":"code","34feb6d7":"code","d5713127":"code","627710cf":"code","f9917a85":"code","aef8b1a4":"code","fcbbed2b":"code","4b3588d5":"code","8924011e":"code","231c9705":"code","d63abaf1":"code","863d2f4f":"code","7586f88a":"markdown","95a3f146":"markdown","72373ea1":"markdown","c62b9948":"markdown","92ea4597":"markdown","68f70545":"markdown","b012b52f":"markdown","f60385d9":"markdown","46e53f62":"markdown","b224cb5f":"markdown","8a476478":"markdown","9fe5fd15":"markdown","89a52874":"markdown","f10fd3c2":"markdown","3f6a627b":"markdown","cf212383":"markdown","7a9532e4":"markdown","f3680267":"markdown","60d800b3":"markdown","6eac0972":"markdown"},"source":{"20869b52":"import numpy as np\nimport pandas as pd\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport itertools\n\n# Importing Machine learning models library used for classification\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","931fdf59":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndf = pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")\ndf.head()","fcda4669":"# Get the shape of dataset.\ndf.shape","e37daf40":"# Get dataset information.\ndf.info()","869a6a38":"# Identify columns with null values.\ndf.isnull().sum()","e4aeffcd":"# Describe the dataset by basic statistical calculations.\ndf.describe()","34feb6d7":"# Feature correlation.\nplt.figure(figsize=(14, 14))\nplt.title(\"Credit Card Transactions features correlation plot (Pearson)\")\ncorr = df.corr()\nsns.heatmap(\n    corr,\n    xticklabels=corr.columns,\n    yticklabels=corr.columns,\n    linewidths=0.1,\n    cmap=\"Blues\",\n)\nplt.show()","d5713127":"LABELS = [\"Legitimate (0)\", \"Fraud (1)\"]\ncount_classes = pd.value_counts(df[\"Class\"], sort=True)\ncount_classes.plot(kind=\"bar\", rot=0)\nplt.title(\"Transaction Class Distribution\")\nplt.xticks(range(2), LABELS)\nplt.xlabel(\"Class\")\nplt.ylabel(\"Frequency\")","627710cf":"Fraud = df[df[\"Class\"] == 1]\nLegitimate = df[df[\"Class\"] == 0]\nprint(\"Number of Legitimate entries = {}\".format(len(Legitimate)))\nprint(\"Number of Fraud entries = {}\".format(len(Fraud)))","f9917a85":"X = df.drop(\"Class\", axis=1)\nY = df[\"Class\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)\n\n# Convert data to numpy arrays to be fed into algorithms.\nX_train = X_train.values\nX_test = X_test.values\ny_train = y_train.values\ny_test = y_test.values","aef8b1a4":"num_neighbours = 7\nn_est = 100","fcbbed2b":"classifiers = {\n    \"Logisitic Regression\": LogisticRegression(),\n    \"K Nearest Neighbors\": KNeighborsClassifier(n_neighbors=num_neighbours),\n    \"Gaussian Naive Bays\": GaussianNB(),\n    \"Decision Tree Classifier\": DecisionTreeClassifier(),\n}","4b3588d5":"Acc = {}","8924011e":"# Train classifiers.\nprint(\"Cross-Validation Scores for classifiers:-\")\nfor key, classifier in classifiers.items():\n    classifier.fit(X_train, y_train)\n    cv_score = cross_val_score(classifier, X_train, y_train, cv=5)\n    pred = classifier.predict(X_test)\n    accuracy = accuracy_score(y_test, pred)\n    Acc[key] = accuracy\n    print(\"{}: {}\".format(key, round(cv_score.mean() * 100.0, 2)))","231c9705":"for model, acc in Acc.items():\n    print(\"Accuracy for {} = {}\".format(model, acc * 100))","d63abaf1":"# Train a Decision Tree Classifier since it has the best accuracy on the dataset.\nmodel = DecisionTreeClassifier()\nmodel = model.fit(X_train, y_train)\npredictions = model.predict(X_test)","863d2f4f":"print(\"Confusion matrix\")\ncm = confusion_matrix(y_test, predictions)\nprint(cm)","7586f88a":"# Credit Card Fraud Detection","95a3f146":"The dataset contains 284807 rows and 31 columns.","72373ea1":"### Read the dataset.","c62b9948":"### Observations\nDecision Tree Classifier has the best accuracy.","92ea4597":"### Import the required libraries.","68f70545":"No notable correlation between features.","b012b52f":"### Model Accuracy","f60385d9":"# 6. Prediction","46e53f62":"# 1. Introduction\n### About the dataset\nThe datasets contains transactions made by credit cards in September 2013 by european cardholders. This dataset presents transactions that occurred in two days, where we have 492 frauds out of 284,807 transactions. The dataset is highly unbalanced, the positive class (frauds) account for 0.172% of all transactions.\n\nIt contains only numerical input variables which are the result of a PCA transformation. Unfortunately, due to confidentiality issues, we cannot provide the original features and more background information about the data. Features V1, V2, \u2026 V28 are the principal components obtained with PCA, the only features which have not been transformed with PCA are 'Time' and 'Amount'. Feature 'Time' contains the seconds elapsed between each transaction and the first transaction in the dataset. The feature 'Amount' is the transaction Amount, this feature can be used for example-dependant cost-senstive learning.\n\n### Problem statement\nClassify the transactions as fraud (1) and legitimate (0).","b224cb5f":"# 5. Model Evaluation","8a476478":"### Define the model.","9fe5fd15":"### Set hyperparameters.","89a52874":"### Split the dataset.","f10fd3c2":"### Train the model.","3f6a627b":"## Contents\n\n1. Introduction\n2. Data Preparation\n    * Import the required libraries\n    * Read the dataset\n3. Exploratory Analysis\n4. Model Architecture\n    * Split the dataset\n    * Set hyperparameters\n    * Define the model\n    * Train model\n5. Model Evaluation\n    * Model Accuracy\n    * Observations\n6. Prediction","cf212383":"It is clear that the dataset is imbalanced, with maximum transactions labelled as \"Legitimate\".","7a9532e4":"# 4. Model Architecture","f3680267":"# 3. Exploratory Analysis.","60d800b3":"No column has any null values.","6eac0972":"# 2. Data Preparation"}}