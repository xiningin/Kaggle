{"cell_type":{"972f03a0":"code","8ce762b9":"code","b1f65bee":"code","66e9bc38":"code","c1b420de":"code","38815f1a":"code","8e6b50a1":"code","d7a1e080":"code","af225292":"code","176e0c3c":"code","548381ce":"code","f751d787":"code","3694ec0f":"code","bf28cd31":"code","a74a766e":"code","4f952728":"code","e24c8806":"code","fc6583f6":"code","33e08f92":"code","58c7f161":"code","4c42c378":"code","de889869":"markdown","8fc60bf8":"markdown","a1db775d":"markdown","65578390":"markdown","53d58cd7":"markdown","3571f989":"markdown","f66e0033":"markdown","e65f362b":"markdown"},"source":{"972f03a0":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2021)\n    \n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[target])\n\n    \n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='Outcome')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","8ce762b9":"# \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport pandas as pd","b1f65bee":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (\uc0dd\ub7b5)\nX_train.shape, y_train.shape, X_test.shape","66e9bc38":"X_train.head()","c1b420de":"y_train.value_counts()","38815f1a":"X_train.info()","8e6b50a1":"X_train.isnull().sum()","d7a1e080":"X_test.isnull().sum()","af225292":"X_train.describe()","176e0c3c":"#\uc774\uc0c1\uce58 \ucc98\ub9ac\n#Train\nprint('Glucose:',len(X_train[X_train['Glucose']==0]))\nprint('BloodPressure:',len(X_train[X_train['BloodPressure']==0]))\nprint('SkinThickness:',len(X_train[X_train['SkinThickness']==0]))\nprint('Insulin:',len(X_train[X_train['Insulin']==0]))\nprint('BMI:',len(X_train[X_train['BMI']==0]))","548381ce":"#Test\nprint('Glucose:',len(X_test[X_test['Glucose']==0]))\nprint('BloodPressure:',len(X_test[X_test['BloodPressure']==0]))\nprint('SkinThickness:',len(X_test[X_test['SkinThickness']==0]))\nprint('Insulin:',len(X_test[X_test['Insulin']==0]))\nprint('BMI:',len(X_test[X_test['BMI']==0]))","f751d787":"# \ud3ec\ub3c4\ub2f9 \uc774\uc0c1\uce58 \uc0ad\uc81c\ndel_idx = X_train[(X_train['Glucose']==0)].index\ndel_idx","3694ec0f":"print('Glucose \uc774\uc0c1\uce58 \uc0ad\uc81c \uc804 :', X_train.shape, y_train.shape)\nX_train = X_train.drop(index=del_idx, axis=0)\ny_train = y_train.drop(index=del_idx, axis=0)\nprint('Glucose \uc774\uc0c1\uce58 \uc0ad\uc81c \ud6c4 :', X_train.shape, y_train.shape)","bf28cd31":"# \ud3ec\ub3c4\ub2f9\uc744 \uc81c\uc678\ud55c \uc774\uc0c1\uce58, \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4\ncols = ['BloodPressure', 'SkinThickness', 'Insulin', 'BMI']\ncols_mean = X_train[cols].mean()\nX_train[cols].replace(0, cols_mean)","a74a766e":"# \uc2a4\ucf00\uc77c\ub9c1\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ncols = ['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']\nX_train[cols] = scaler.fit_transform(X_train[cols])\nX_test[cols] = scaler.fit_transform(X_test[cols])","4f952728":"# id \uc81c\uc678\nX = X_train.drop('id',axis=1)\ntest = X_test.drop('id',axis=1)","e24c8806":"from sklearn.svm import SVC\nmodel = SVC(random_state=2022)\nmodel.fit(X, y_train['Outcome'])\npredictions = model.predict(test)","fc6583f6":"# \uc624\ubc84\ud53c\ud305 \ub418\uc5c8\uc744 \uacbd\uc6b0\uc5d0 \uc810\uc218\uac00 \uc798\ub098\uc62c \uc218 \uc788\uc74c (\uac1d\uad00\uc801\uc778 \ud3c9\uac00 \uc544\ub2d8, \ubc38\ub9ac\ub370\uc774\uc158 \ub370\uc774\ud130\ub85c \ud3c9\uac00 \ud544\uc694\ud568)\nround(model.score(X, y_train['Outcome']) * 100, 2) ","33e08f92":"output = pd.DataFrame({'idx': X_test.index, 'Outcome': predictions})\noutput.head()","58c7f161":"# \uc218\ud5d8\ubc88\ud638.csv\ub85c \ucd9c\ub825\noutput.to_csv('1234567.csv', index=False)","4c42c378":"round(model.score(test, y_test['Outcome']) * 100, 2) # 60\uc810\ub300\ub85c \ub0ae\uc740 \uc815\ud655\ub3c4\ub97c \ubcf4\uc5ec\uc90c","de889869":"## [\ucc38\uace0]\uc791\uc5c5\ud6152 \ubb38\uad6c\n- \ucd9c\ub825\uc744 \uc6d0\ud558\uc2e4 \uacbd\uc6b0 print() \ud568\uc218 \ud65c\uc6a9\n- \uc608\uc2dc) print(df.head())\n- getcwd(), chdir() \ub4f1 \uc791\uc5c5 \ud3f4\ub354 \uc124\uc815 \ubd88\ud544\uc694\n- \ud30c\uc77c \uacbd\ub85c \uc0c1 \ub0b4\ubd80 \ub4dc\ub77c\uc774\ube0c \uacbd\ub85c(C: \ub4f1) \uc811\uadfc \ubd88\uac00\n\n### \ub370\uc774\ud130 \ud30c\uc77c \uc77d\uae30 \uc608\uc81c\n- import pandas as pd\n- X_test = pd.read_csv(\"data\/X_test.csv\")\n- X_train = pd.read_csv(\"data\/X_train.csv\")\n- y_train = pd.read_csv(\"data\/y_train.csv\")\n\n### \uc0ac\uc6a9\uc790 \ucf54\ub529\n\n### \ub2f5\uc548 \uc81c\ucd9c \ucc38\uace0\n- \uc544\ub798 \ucf54\ub4dc \uc608\uce21\ubcc0\uc218\uc640 \uc218\ud5d8\ubc88\ud638\ub97c \uac1c\uc778\ubcc4\ub85c \ubcc0\uacbd\ud558\uc5ec \ud65c\uc6a9\n- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)","8fc60bf8":"## \ub2f9\ub1e8\ubcd1 \uc5ec\ubd80 \ud310\ub2e8\n- \uc774\uc0c1\uce58 \ucc98\ub9ac (Glucose, BloodPressure, SkinThickness, Insulin, BMI\uac00 0\uc778 \uac12)","a1db775d":"## Start","65578390":"\ud2b8\ub808\uc778\uc5d0\ub9cc 0\uc774 \uc788\ub294 \ud3ec\ub3c4\ub2f9(Glucose)\ub294 \uc0ad\uc81c\n\ub098\uba38\uc9c0\ub294 \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4 \ud558\uc5ec \uc774\uc0c1\uce58\ub97c \ucc98\ub9ac\ud568","53d58cd7":"## EDA","3571f989":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","f66e0033":"## \uacb0\uacfc \uccb4\uc810 (\uc218\ud5d8\uc790\ub294 \uc54c \uc218 \uc5c6\ub294 \ubd80\ubd84\uc784)","e65f362b":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30"}}