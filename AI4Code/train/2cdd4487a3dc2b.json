{"cell_type":{"85a16fe1":"code","b7b10b78":"code","9b3b251e":"code","01cdeeee":"code","73a7e105":"code","9c9e608e":"code","e947dec2":"code","79cc54ee":"code","c9f8f1f5":"code","31a7b883":"code","cc60ad15":"markdown","a2c81af4":"markdown","fb7e236f":"markdown","dd3dfb5f":"markdown","c0513206":"markdown","362ec1c0":"markdown","dd4b96ca":"markdown","8a144267":"markdown"},"source":{"85a16fe1":"!pip install pymorphy2[fast]","b7b10b78":"from pymorphy2 import MorphAnalyzer\nfrom stop_words import get_stop_words\nimport string\n\nfrom tqdm import tqdm_notebook\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.svm import LinearSVC\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import cross_val_score\n\nimport pandas as pd\nimport numpy as np\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\nmorpher = MorphAnalyzer()\nsw = set(get_stop_words(\"ru\"))\nexclude = set(string.punctuation)","9b3b251e":"def preprocess_txt(line):\n  spls = \"\".join(i for i in line.strip() if i not in exclude).split()\n  spls = [morpher.parse(i.lower())[0].normal_form for i in spls]\n  spls = [i for i in spls if i not in sw and i != \"\"]\n  return ' '.join(spls)\n\ndef calc_score(model, X, y):\n  cv = cross_val_score(\n      model,\n      X, y,\n      cv=5,\n      scoring='f1_weighted'\n  )\n  print(f'F1_weighted cv: {np.mean(cv)}')\n  print(f'\\nClassification report\\n{classification_report(y, model.predict(X))}')","01cdeeee":"%%time\n\ndf = pd.read_csv('..\/input\/russian-jokes\/jokes.csv')","73a7e105":"%%time\n\nfor index, row in tqdm_notebook(df.iterrows(), total=df.shape[0]):\n    df.loc[index, 'text_token'] = preprocess_txt(row['text'])\n\ndf.head()","9c9e608e":"le = LabelEncoder()\ndf['theme'] = le.fit_transform(df['theme'])\ndf.head()","e947dec2":"X_train, X_test, y_train, y_test = train_test_split(\n  df['text_token'], df['theme'],\n  test_size=0.2,\n  stratify=df['theme'],\n  random_state=100\n)","79cc54ee":"%%time\n\ntfidf = TfidfVectorizer(\n  ngram_range=(1, 2),\n  max_features=10000\n)\n\nX_train_idf = tfidf.fit_transform(X_train)\nX_test_idf = tfidf.transform(X_test)","c9f8f1f5":"%%time\n\nsvc = LinearSVC(\n    random_state=100,\n    max_iter=1000,\n    loss='squared_hinge',\n    dual=False,\n)\nsvc.fit(X_train_idf, y_train)","31a7b883":"%%time\n\ncalc_score(svc, X_test_idf, y_test)","cc60ad15":"### Common functions","a2c81af4":"### Train LinearSVC model","fb7e236f":"# Baseline notebook\n\n**Let's try to predict theme of a joke by body text**","dd3dfb5f":"### TFIDF","c0513206":"### Encode target feature","362ec1c0":"### Load dataset","dd4b96ca":"### Split data","8a144267":"### Scores"}}