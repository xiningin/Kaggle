{"cell_type":{"c3a534a3":"code","a653a020":"code","2f383614":"code","6c5e5237":"code","a4a70f78":"code","55e4948d":"code","37e0f8fa":"code","45eba4cc":"code","fd1c82d2":"code","364902b4":"code","6277c953":"code","23bce11e":"code","f3780e88":"code","9127008b":"code","37ac413b":"code","8c24c496":"code","2efe4283":"code","17cc1fe3":"code","737134cd":"code","526a230e":"code","59493294":"code","2625fcc7":"code","a7bf2a61":"code","4a0e999b":"code","b099896e":"code","1b0624a7":"code","117e954d":"code","fc622a5c":"code","54bd92f8":"code","8eb863e1":"code","8f8b9ae3":"code","c1462478":"code","e7052d86":"code","7cb81567":"code","95419a9d":"code","af6fa298":"markdown","ce7c988f":"markdown","666d126f":"markdown","de218785":"markdown","cb0d1457":"markdown","5be81dd2":"markdown","666c86f9":"markdown","2ac2cb6a":"markdown","870a9cea":"markdown","433035ef":"markdown","3277acb6":"markdown","8d75e829":"markdown","1295711f":"markdown","9cfbf82d":"markdown","d73c46a5":"markdown","5f60a35e":"markdown","6c19de33":"markdown","f55b4f6e":"markdown","0a4b72ad":"markdown","0dc91991":"markdown","1f7e9eb3":"markdown","60e48cb3":"markdown","618d601b":"markdown","8e1d822d":"markdown","b44be366":"markdown","f6f0b60b":"markdown","41313a60":"markdown","aec2bdbc":"markdown","d17e6ca2":"markdown","3c3592fa":"markdown","e5114831":"markdown","fc05f3fc":"markdown","cf3750ec":"markdown","9e6cb60e":"markdown"},"source":{"c3a534a3":"# Directive pour afficher les graphiques dans Jupyter (inutile si on utilise Spyder)\n%matplotlib inline","a653a020":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import mean_squared_error, r2_score","2f383614":"#lecture du dataset\ndf = pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\")","6c5e5237":"df.head(10)","a4a70f78":"df.info()","55e4948d":"df.plot(kind=\"scatter\", x=\"long\", y=\"lat\", c=\"price\", cmap=\"rainbow\", s=3, figsize=(12,12))","37e0f8fa":"df.info()","45eba4cc":"df.count()","fd1c82d2":"df['year'] = pd.DatetimeIndex(df['date']).year\ndf['month'] = pd.DatetimeIndex(df['date']).month","364902b4":"df.groupby(['year','month'])['price'].mean().plot(kind = 'bar', figsize=(12,8))","6277c953":"df.groupby(['year','month'])['price'].count().plot(kind = 'bar', figsize=(12,8))","23bce11e":"df = df.drop(['id','date'], axis=1)","f3780e88":"tabcorr = df.corr()     # on peut utiliser aussi bos.corr(method='pearson') par exemple","9127008b":"plt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","37ac413b":"sns.clustermap(abs(tabcorr), cmap=\"coolwarm\")","8c24c496":"from scipy.cluster import hierarchy as hc\n\ncorr = 1 - df.corr()\ncorr_condensed = hc.distance.squareform(corr)\nlink = hc.linkage(corr_condensed, method='ward')\nplt.figure(figsize=(12,12))\nden = hc.dendrogram(link, labels=df.columns, orientation='left', leaf_font_size=10)","2efe4283":"correlations = tabcorr.price\nprint(correlations)","17cc1fe3":"correlations = correlations.drop(['price'],axis=0)","737134cd":"print(abs(correlations).sort_values(ascending=False))","526a230e":"continuous_features = ['sqft_living','sqrt_log','sqft_above','sqft_basement','sqft_living15','sqrt_lot15','lat','long']\ndiscrete_features = ['month','year','bedrooms','bathrooms','floors','waterfront','view','condition',\n                     'grade','yr_built','yr_renovated','zipcode']","59493294":"df1 = df[df.price<1000000].drop(discrete_features, axis=1)","2625fcc7":"X = df1.drop(['price'], axis=1)\ny = df1.price\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","a7bf2a61":"from sklearn.linear_model import LinearRegression","4a0e999b":"lm = LinearRegression()\nlm.fit(X_train, y_train)            # apprentissage\ny_pred = lm.predict(X_test)         # pr\u00e9diction sur l'ensemble de test","b099896e":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_pred)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","1b0624a7":"sns.distplot(y_test-y_pred)","117e954d":"print(np.sqrt(mean_squared_error(y_test, y_pred)))","fc622a5c":"scoreR2 = r2_score(y_test, y_pred)\nprint(scoreR2)","54bd92f8":"lm.score(X_test,y_test)","8eb863e1":"X = df1.drop(['price'], axis=1)\ny = df1.price\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","8f8b9ae3":"from sklearn import ensemble\nrf = ensemble.RandomForestRegressor()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\nprint(rf.score(X_test,y_test))","c1462478":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_rf)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","e7052d86":"sns.distplot(y_test-y_rf)","7cb81567":"print(np.sqrt(mean_squared_error(y_test, y_rf)))","95419a9d":"import xgboost as XGB\nxgb  = XGB.XGBRegressor()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)\nprint(xgb.score(X_test,y_test))\n\nplt.figure(figsize=(12,12))\nplt.scatter(y_test, y_xgb)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","af6fa298":"Les corr\u00e9lations fortement n\u00e9gatives sont aussi significatives que les positives ; on consid\u00e8re donc les valeurs absolues, et on trie par ordre d\u00e9croissant :","ce7c988f":"On trace le nuage de points pour comparer la pr\u00e9diction et les r\u00e9sultats attendus :","666d126f":"**Exercice** : visualiser les maisons par quartiers (zipcode)  \n**Exercice** : visualiser les maisons de moins de 1 million de dollars par prix. On pourra aussi faire varier la taille du point en fonction de la surface de la propri\u00e9t\u00e9\n**Exercice** : visualiser la densit\u00e9 des propri\u00e9t\u00e9s avec *jointplot*","de218785":"## R\u00e9gression par for\u00eats al\u00e9atoires","cb0d1457":"**Exemple de r\u00e9gressions**","5be81dd2":"## Importations des librairies courantes","666c86f9":"**Exercice** : donner l'importance des caract\u00e9ristiques","2ac2cb6a":"On voit que la plus forte corr\u00e9lation concerne la surface","870a9cea":"qu'on peut \u00e9crire plus simplement :","433035ef":"On peut calculer l'erreur sur les moindres carr\u00e9s :","3277acb6":"<img src=\"https:\/\/sightline-wpengine.netdna-ssl.com\/wp-content\/uploads\/2012\/04\/Sprawl_Walkability_CS06m_hi.jpg\">","8d75e829":"- id\n- date: Date house was sold(String)\n- price: Price of the sold house\n- bedrooms: Numer of Bedrooms\n- bathrooms: Numer of bathrooms\n- sqft_living: Square footage of the living room\n- sqrt_log: Square footage of the log\n- floors: Total floors in the house\n- waterfront: Whether the house has a view a waterfront(1: yes, 0: not)\n- view: unknown\n- condition: Condition of the house\n- grade: unknown\n- sqft_above: Square footage of house apart from basement\n- sqft_basement: Square footage of the basement\n- yr_built: Built year\n- yr_renovated: Year when the house was renovated\n- zipcode: zipcode of the house\n- lat: Latitude coordinate\n- long Longitude coordinate\n- sqft_living15: Living room area in 2015(implies some renovations)\n- sqrt_lot15: Lot area in 2015(implies some renovations)","1295711f":"## Exercice : utiliser le dataset de la valeur des maisons \u00e0 Boston","9cfbf82d":"On affiche un graphique montrant l'\u00e9volution du prix moyen en fonction de la date :","d73c46a5":"On dispose des statistiques de vente des maisons du disctrict de Seattle ","5f60a35e":"Pour la r\u00e9gression lin\u00e9aire, on se limite aux maisons de moins de 1M$, et on \u00e9limine les *features* discr\u00e8tes :","6c19de33":"## Exercice : tester la m\u00e9thode *Gradient Boosting Regressor*","f55b4f6e":"On s'int\u00e9resse plus pr\u00e9cis\u00e9ment \u00e0 la valeur des maisons :","0a4b72ad":"On supprime du dataset l'identifiant id, et la date (que nous avons convertie en mois et ann\u00e9e)","0dc91991":"On peut tracer uniquement le **dendrogramme** des corr\u00e9lations entre les caract\u00e9ristiques. On utilise une forme \"condens\u00e9e\" de la matrice de corr\u00e9lation. *linkage* permet de calculer les distances entre caract\u00e9ristiques \u00e0 partir des corr\u00e9lations","1f7e9eb3":"## Recherche de corr\u00e9lations","60e48cb3":"ou on peut visualiser la distribution de l'erreur avec *seaborn* :","618d601b":"# R\u00e9gression lin\u00e9aire multiple","8e1d822d":"## Lecture du fichier","b44be366":"Pour visualiser l'ensemble du tableau de corr\u00e9lations, on utilise une \"carte de temp\u00e9ratures\" (*heatmap*) :","f6f0b60b":"# Exemple d'analyse d'un dataset : prix des maisons \u00e0 Seattle","41313a60":"On utilise la fonction de r\u00e9gression lin\u00e9aire multiple de *sklearn* :","aec2bdbc":"On peut aussi regrouper les param\u00e8tres par *clusters* class\u00e9s par proximit\u00e9 :","d17e6ca2":"On va utiliser les for\u00eats al\u00e9atoires pour la r\u00e9gression. On conserve l'ensemble des caract\u00e9ristiques","3c3592fa":"On \u00e9limine la ligne MV elle-m\u00eame (qui est forc\u00e9ment \u00e0 1) :","e5114831":"Ou le *score R2* (rapport des variances estim\u00e9e\/r\u00e9elle) :\n(https:\/\/fr.wikipedia.org\/wiki\/Coefficient_de_d%C3%A9termination)","fc05f3fc":"et le nombre de maisons vendues :","cf3750ec":"On a vu assez clairement la corr\u00e9lation entre le nombre de pi\u00e8ces et la valeur.  \nOn va utiliser la fonction *corr* pour calculer syst\u00e9matiquement le degr\u00e9 de corr\u00e9lation entre deux param\u00e8tres :","9e6cb60e":"On s\u00e9pare les caract\u00e9ristiques continues et discr\u00e8tes :"}}