{"cell_type":{"c584ef91":"code","fb920b99":"code","b4b2c3ef":"code","4de8244f":"code","e5c0788b":"code","87e11138":"code","8118d2b6":"code","5ce1299f":"code","02b5b5e3":"code","93c91f3c":"code","70dbed81":"code","8701030a":"code","2b0f4556":"markdown","54defe8d":"markdown","c5494eac":"markdown","50b9cdfe":"markdown","a5188024":"markdown","e8816043":"markdown","7073fca5":"markdown","16546a29":"markdown","d39a34c9":"markdown"},"source":{"c584ef91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb920b99":"train = pd.read_csv('\/kaggle\/input\/sircleai-orientation-2020\/train.csv')\ntrain = train.set_index('id')\ntest = pd.read_csv('\/kaggle\/input\/sircleai-orientation-2020\/test.csv')\ntest = test.set_index('id')","b4b2c3ef":"sample_submission = pd.read_csv('\/kaggle\/input\/sircleai-orientation-2020\/sample_submission.csv')\nsample_submission = sample_submission.set_index('id')\nsample_submission.head()","4de8244f":"train.head()","e5c0788b":"test.head()","87e11138":"x = train.drop(columns='gender')\ny = train['gender']","8118d2b6":"from sklearn.tree import DecisionTreeClassifier\nclf = DecisionTreeClassifier()\nclf.fit(x,y)","5ce1299f":"pred = clf.predict(test)","02b5b5e3":"submission = sample_submission.copy()\nsubmission['gender'] = pred","93c91f3c":"submission.head()","70dbed81":"sample_submission.head()","8701030a":"submission.to_csv('submission.csv')","2b0f4556":"mari kita lihat data teratas dari file train dan test","54defe8d":"Klik save version dan commit pada halaman berikutnya :)","c5494eac":"Setelah model ditraining menggunakan data, dilakukan prediksi pada data test","50b9cdfe":"gunakan seluruh data yang ada untuk memprediksi gender. Disini kita akan menggunakan DecisionTreeClassifier sebagai contoh","a5188024":"### Meload data","e8816043":"Output dari code diatas menunjukan lokasi file-file yang kita butuhkan, ada 3 file yaitu train, test, dan sample_submission.\n\ntrain digunakan untuk membuat model machine learning<br \/>\ntest digunakan sebagai soal terakhir untuk diprediksi<br \/>\nsample_submission merupakan format untuk submisi<br \/>","7073fca5":"Bentuk submission dan sample submission sudah sama, sekarang tinggal dijadikan csv untuk di submit","16546a29":"lalu siapkan 1 csv untuk disubmit kedalam platform","d39a34c9":"mari kita masukan data train,test dan sample_submission kedalam variable yang namanya sama (biar gampang dikenalnya xixixi)"}}