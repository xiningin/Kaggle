{"cell_type":{"6fa2de2d":"code","d6beb5d6":"code","2c81813e":"code","673e98f5":"code","0fc82144":"code","36d5ddb7":"code","c5f70e47":"code","d5af21ed":"code","28ac8313":"code","a175878a":"code","240d0332":"code","899c6534":"code","4053e774":"code","208b037b":"code","072aff2e":"code","72428768":"code","6e2403ce":"code","8d3242b7":"code","351f3271":"code","9e46f158":"code","f42f498b":"markdown"},"source":{"6fa2de2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import StandardScaler\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d6beb5d6":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","2c81813e":"%%time\ndef normal(train, test):\n    print('Scaling with StandardScaler\\n')\n    len_train = len(train)\n\n    traintest = pd.concat([train,test], axis=0, ignore_index=True).reset_index(drop=True)\n    \n    scaler = StandardScaler()\n    cols = [c for c in train.columns if c not in ['id', 'target', 'wheezy-copper-turtle-magic']]\n    traintest[cols] = scaler.fit_transform(traintest[cols])\n    train = traintest[:len_train].reset_index(drop=True)\n    test = traintest[len_train:].reset_index(drop=True)\n\n    return train, test\n\ntrain, test = normal(train, test)","673e98f5":"train.to_csv('train.csv', index=False)\ntest.to_csv('test.csv', index=False)","0fc82144":"del train, test\ngc.collect()\ngc.collect()","36d5ddb7":"import h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","c5f70e47":"train = h2o.import_file(\"train.csv\")\ntest = h2o.import_file(\"test.csv\")","d5af21ed":"test.shape","28ac8313":"train.shape\n","a175878a":"test.head()","240d0332":"cols = [c for c in train.columns if c not in ['id', 'target']]","899c6534":"x = cols\ny = 'target'\nw = 'wheezy-copper-turtle-magic'","4053e774":"# For binary classification, response should be a factor\ntrain[y] = train[y].asfactor()\ntrain[w] = train[w].asfactor()\ntest[w] = test[w].asfactor()","208b037b":"aml = H2OAutoML(max_models=200, seed=137, max_runtime_secs=30000)\naml.train(x=x, y=y, training_frame=train)","072aff2e":"# View the AutoML Leaderboard\nlb = aml.leaderboard\nlb.head(rows=lb.nrows)  # Print all rows instead of default (10 rows)","72428768":"# The leader model is stored here\naml.leader","6e2403ce":"preds = aml.predict(test)\npreds['p1'].as_data_frame().values.flatten().shape","8d3242b7":"preds\n","351f3271":"sample_submission = pd.read_csv('..\/input\/sample_submission.csv')\nsample_submission.shape","9e46f158":"sample_submission['target'] = preds['p1'].as_data_frame().values\nsample_submission.to_csv('H2O_AutoML_submission_3.csv', index=False)","f42f498b":"[H2O AutoML](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/automl.html) is an automated machine learning meta-algorithm that is part of the [H2O software library](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-py\/docs\/intro.html#what-is-h2o). (It shold not be confused with [H2O DriverlessAI](https:\/\/www.h2o.ai\/products\/h2o-driverless-ai\/), which is a commercial product and built from an entirely different code base.) H2O\u2019s AutoML can be used for automating the machine learning workflow, which includes automatic training and tuning of many models within a user-specified time-limit. Stacked Ensembles \u2013 one based on all previously trained models, another one on the best model of each family \u2013 will be automatically trained on collections of individual models to produce highly predictive ensemble models which, in most cases, will be the top performing models in the AutoML Leaderboard."}}