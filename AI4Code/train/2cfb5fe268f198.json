{"cell_type":{"ebb3ad34":"code","67cf99ee":"code","442a5132":"code","741a84d4":"code","91d3a63d":"code","e04a6d32":"code","76e56d92":"code","b784f51f":"code","af69eaec":"code","590bf0fc":"code","9073ea62":"code","2e8e0676":"code","7560fa80":"code","b722ff95":"code","38825eeb":"code","86ea9f1f":"code","68b94d2d":"code","b99c3a80":"code","b3a99719":"code","dadb9824":"code","e8c1d415":"code","01e7cd3a":"code","b3ff8c8c":"code","27f6622b":"code","4dc5b903":"code","a87d7dff":"markdown","17bfa906":"markdown","19a43508":"markdown","7b7d5a7e":"markdown","24609edc":"markdown","d28fba01":"markdown","54820054":"markdown","78864f49":"markdown","66520b15":"markdown","f5c88267":"markdown","9a6a071d":"markdown","143fe810":"markdown"},"source":{"ebb3ad34":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67cf99ee":"data = pd.read_csv('..\/input\/wind-turbine-scada-dataset\/T1.csv')","442a5132":"import matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport seaborn as sns\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings(\"ignore\")","741a84d4":"data.shape","91d3a63d":"data.describe()","e04a6d32":"data.isnull().sum()","76e56d92":"data = data\nexp = data['LV ActivePower (kW)']\nthe = data['Theoretical_Power_Curve (KWh)']\nplt.figure(figsize=(25,10)) \nplt.plot(data['Wind Speed (m\/s)'], data['LV ActivePower (kW)'], 'o', label='Real Power')\nplt.plot(data['Wind Speed (m\/s)'], data['Theoretical_Power_Curve (KWh)'], '.', label='theoretical_power_curve (kwh)')\nplt.xlabel('wind speed (m\/s)', size=15)\nplt.ylabel('Power Production (kw)', size=15)\nplt.title('Wind Turbine Power Production Prediction')\nplt.legend(fontsize=15)\nplt.show()","b784f51f":"import seaborn as sns\nsns.pairplot(data, markers='*')","af69eaec":"from lightgbm import LGBMClassifier\nfrom sklearn import metrics\nfrom sklearn import model_selection\nfrom sklearn import preprocessing\nfrom sklearn.datasets import make_classification\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.preprocessing import StandardScaler, Normalizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import DecisionTreeRegressor\nfrom xgboost import XGBClassifier\nfrom xgboost.sklearn import XGBRegressor\nimport xgboost as xgb","590bf0fc":"def outlier_remover(dat, prop, min, max):\n    d = dat\n    q_low = d[prop].quantile(min)\n    q_hi  = d[prop].quantile(max)\n    return d[(d[prop] < q_hi) & (d[prop] > q_low)]","9073ea62":"# Create Sub-DataFrames\nd = {}\nstep = 50\ni = 1\nfor x in range(20, 3400, step):\n    d[i] = data.iloc[((data['LV ActivePower (kW)']>=x)&((data['LV ActivePower (kW)']<x+step))).values]\n    #print(d[i])\n    i = i + 1\nprint(\"There are in total of {} DataFrames\".format(i-1))","2e8e0676":"d[69] = data.iloc[(data['LV ActivePower (kW)']>=3300).values]","7560fa80":"# Remove outlier\nfor x in range(1, 70):\n    if x <= 3:\n        F = 0.95\n    elif ((x > 3) and (x <= 10)):\n        F = 0.9\n    elif ((x > 10) and (x <= 20)):\n        F = 0.92\n    elif ((x > 20) and (x < 30)):\n        F = 0.96\n    else:\n        F = 0.985\n    d[x] = outlier_remover(d[x], 'Wind Speed (m\/s)', 0.0001, F)","b722ff95":"df=pd.DataFrame()\nfor infile in range(1,70):\n    data = d[infile]\n    df=df.append(data,ignore_index=True)","38825eeb":"df.shape","86ea9f1f":"data = df\nexp = data['LV ActivePower (kW)']\nthe = data['Theoretical_Power_Curve (KWh)']\nplt.figure(figsize=(25,10)) \nplt.plot(data['Wind Speed (m\/s)'], data['LV ActivePower (kW)'], 'o', label='Real Power')\nplt.plot(data['Wind Speed (m\/s)'], data['Theoretical_Power_Curve (KWh)'], '.', label='theoretical_power_curve (kwh)')\nplt.xlabel('wind speed (m\/s)', size=15)\nplt.ylabel('Power Production (kw)', size=15)\nplt.title('Wind Turbine Power Production Prediction')\nplt.legend(fontsize=15)\nplt.show()","68b94d2d":"import matplotlib.pyplot as plt\ncolumns = ['LV ActivePower (kW)', 'Wind Speed (m\/s)', 'Theoretical_Power_Curve (KWh)', 'Wind Direction (\u00b0)']\ni=1\nplt.figure(figsize=(12,5))\nfor each in columns:\n    plt.subplot(1,4,i)\n    sns.boxplot(data = df, y= each)\n    plt.title(each)\n    i += 1","b99c3a80":"ftrain = ['LV ActivePower (kW)', 'Wind Speed (m\/s)', 'Wind Direction (\u00b0)']\n\ndef Definedata():\n    # define dataset\n    data2 = df[ftrain]\n    X = data2.drop(columns=['LV ActivePower (kW)']).values\n    y = data2['LV ActivePower (kW)'].values\n    #lab_enc = preprocessing.LabelEncoder()\n    #y = lab_enc.fit_transform(y0)\n    return X, y","b3a99719":"def Models(models):\n    \n    model = models\n    X, y = Definedata()\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.33, random_state = 25)\n    model.fit(X_train,y_train)\n    y_pred = model.predict(X_test)\n    y_total = model.predict(X)\n    \n    print(\"\\t\\tError Table\")\n    print('Mean Absolute Error      : ', metrics.mean_absolute_error(y_test, y_pred))\n    print('Mean Squared  Error      : ', metrics.mean_squared_error(y_test, y_pred))\n    print('Root Mean Squared  Error : ', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n    print('Accuracy on Traing set   : ', model.score(X_train,y_train))\n    print('Accuracy on Testing set  : ', model.score(X_test,y_test))\n    return y_total, y\n\ndef Featureimportances(models):\n    model = models\n    model.fit(X_train,y_train)\n    importances = model.feature_importances_\n    features = df_test.columns[:9]\n    imp = pd.DataFrame({'Features': ftest, 'Importance': importances})\n    imp['Sum Importance'] = imp['Importance'].cumsum()\n    imp = imp.sort_values(by = 'Importance')\n    return imp\n\ndef Graph_prediction(y_actual, y_predicted):\n    y = y_actual\n    y_total = y_predicted\n    TP = df['Theoretical_Power_Curve (KWh)']\n    number = len(df['Wind Speed (m\/s)'])\n    aa=[x for x in df['Wind Speed (m\/s)']]\n    plt.figure(figsize=(25,10)) \n    plt.plot(aa, y[:number], 'o', label='Real Power')\n    plt.plot(aa, y_total[:number], 'x', label='Predicted Power')\n    plt.plot(aa, TP[:number], '.', label='theoretical_power_curve (kwh)')\n    \n    plt.xlabel('wind speed (m\/s)', size=15)\n    plt.ylabel('Power Production (kw)', size=15)\n    plt.title('Wind Turbine Power Production Prediction')\n    plt.legend(fontsize=15)\n    plt.show()","dadb9824":"y_predicted, y_actual = Models(KNeighborsRegressor())\nGraph_prediction(y_actual, y_predicted)","e8c1d415":"y_predicted, y_actual = Models(DecisionTreeRegressor())\nGraph_prediction(y_actual, y_predicted)","01e7cd3a":"y_predicted, y_actual = Models(ExtraTreesRegressor())\nGraph_prediction(y_actual, y_predicted)","b3ff8c8c":"# line plot of observed vs predicted\nsns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,10))\nplt.plot(y_actual[0:100], label=\"True\")\nplt.plot(y_predicted[0:100], label=\"Predicted\")\nplt.legend(loc='upper right')\nplt.xlabel(\"Number of hours\")\nplt.ylabel(\"Power generated by system (kW)\")\nplt.show()","27f6622b":"y_predicted, y_actual = Models(RandomForestRegressor(n_estimators=350,min_samples_split=2,min_samples_leaf=1,max_features='sqrt',max_depth=25))\nGraph_prediction(y_actual, y_predicted)","4dc5b903":"y_predicted, y_actual = Models(GradientBoostingRegressor(random_state=21, n_estimators=2000))\nGraph_prediction(y_actual, y_predicted)","a87d7dff":"# Regression model. \n\nDifferent kinds of regression models have been used to obtain accurate power curves. Two popular machine learning methods, support vector machine (SVM) and GP, have been widely used in power curve modeling due to their superior nonlinear fitting ability. Janssens et al. employed several tree-based regression models (e.g. random forest, extremely randomized trees and stochastic gradient boosted regression trees) to describe the nonlinear relationship between wind speed and wind power.\n\nCurrently, most studies have focused on the estimation of steadystage power curves, such as a wind turbine power curve. However, for the power curve of a wind farm, which contains numerous wind turbines, not all wind turbines always work at the same time due to variations in wind regime, wind curtailment, local topography and other factors. Consequently, the power curve of a wind farm may vary with time.","17bfa906":"Now, create multi-DataFrames ","19a43508":"Re-joint the DataFrames","7b7d5a7e":"Remove all outliers","24609edc":"And, the last DataFrame will be the 69th.","d28fba01":"# Error characteristics of power curve modeling\n\nGenerally, normal wind data can be described by a power curve. However, in the open environment, due to complex geographical factors and changeable weather, as well as the characteristics of the wind turbine itself, there are many outliers, which are far from the corresponding ideal wind power in our power data. In order to demonstrate the error characteristics of power curve modeling, we analyze three kinds of representative outliers.\n\nThe first type of outlier is that the value of wind power tends to zero when the corresponding wind speed is greater than the cut-in wind speed but less than the cut-out wind speed. Wind turbine maintenance and wind curtailment may result in such outliers. \n\nThe second type of outlier is similar to the first type of outlier, they are also far from their ideal power data on the power curve, but do not equal to zero. The reasons for such outliers may be wind curtailment and dirt, bugs, or ice on blades, pitch malfunction and other factors. \n\nThe final type of outlier is that the value of wind power exceeds the physical limitation of the wind turbine.\n\nIt can be seen that most outliers are identified and removed from the raw wind data. After filtering those outliers, the refined wind data are employed to train the power curve models.\n\nA wind turbine power curve essentially captures the performance of the wind turbine. The power curve depicts the relationship between the wind speed and output power of the turbine. Modeling of wind turbine power curve aids in performance monitoring of the turbine and also in forecasting of power.","54820054":"# Analysis of influencing factors: conclusion\n\nBy reviewing the literature, four main steps are identified to derive a power curve from a given dataset.\n\nThe first step is to filter the raw wind data to reduce the adverse effects of abnormal samples. Then, it should be determined that which power curve model will be used to characterize the nonlinear relationship between wind power and wind speed, and any other variables, such as wind direction and temperature. Third, the major goal is to get the optimal parameters in the selected power curve model. Finally, the power curve model with the optimal parameters is calculated. Based on these four steps, several factors that affect the performance of the derived power curve are identified.\n\n+ Data filtering is an indispensable step in power curve modeling, and different data filtering methods produce different power curves. In the natural environment, due to the complexities of weather and the turbines themselves, it cannot be guaranteed that the data quality is good enough. In fact, there are large numbers of abnormal samples in our data. Consequently, it is essential to filter the raw wind data. However, it is not possible to ensure that there are no abnormal samples remaining in the filtered data, because there is no data filtering method that can identify all outliers under all complex conditions. Given the same power curve model, different data filtering methods will also result in different power curves.\n\n+ Even when the same wind data are applied, different power curve models produce different power curves since the properties of the different power curve models are different.\n\n+ For any given power curve model, different optimization strategies will also result in different power curves. \n\nFrom the above analysis, a better power curve can be further obtained in the following three ways:\n\n+ Develop appropriate data filtering methods to deal with all abnormal samples;\n+ Design robust power curve models, which can allow for the existence of some abnormal samples in the training phase;\n+ Create a robust objective function to get suitable model parameters.\n\nDue to the complex conditions during data acquisition and the facts that various kinds of abnormal samples and all models have errors, it is unrealistic to expect to be able to develop a method that can handle all abnormal samples. Therefore, it is necessary to pay more attention to the other two ways to enhance the accuracy of power curve modeling. However, whether designing a robust model or constructing a robust objective function to get an accurate power curve in the presence of outliers, the error characteristics of a particular task (i.e. power curve modeling) should be analyzed. Then, a specific model based on the observed error characteristics can be developed, which may be more suitable for power curve modeling.","78864f49":"# Introduction\n\nWind energy is clean, inexhaustible, inexpensive and widely distributed [1]. However, the randomness and intermittency of wind lead to uncertainty in wind power generation, which brings challenges to the corresponding energy management system and affects the reliability of the entire power grid. Therefore, accurate estimates of wind power curves,which show the non-linear relationship between wind speed and wind power, are required for effective integration of wind power into the power system, as well as wind turbine condition monitoring projects.\n\n<a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/i.ibb.co\/DDNt5tD\/A-typical-wind-power-curve.png\" alt=\"A-typical-wind-power-curve\" border=\"0\"><\/a>\n\nA typical wind power curve is shown in above. Each wind turbine manufacturer provides an ideal energy production curve for their turbines. Here is a brief overview about what it means:\n\n+ The power curve of a wind turbine presents the electrical power output ratings of the machine for different wind speeds. \n+ A typical wind turbine power curve has three main characteristic speeds: \n1) cut-in (Vc ); \n2) rated (Vr ); and \n3) cut-out (Vs) speeds. \n\nThe turbine starts generating power when the wind speed reaches the cut-in value. The rated speed is the wind speed at which the generator is producing the machine\u2019s rated power. When the wind speed reaches the cut-out speed, the power generation is shut down to prevent defects and damages. Theoretical power curves are supplied by manufacturers assuming ideal meteorological and topographical conditions. \n\nIn practice, however, wind turbines are never used under ideal conditions, and the empirical power curves could be substantially different from the theoretical ones due to the location of the turbine, air density, wind velocity distribution, wind direction, mechanical and control issues, as well as uncertainties in measurements.\n(Source: http:\/\/ieeexplore.ieee.org\/iel7\/5165391\/5433168\/06894235.pdf )","66520b15":"# Data description\n\nIn Wind Turbines, Scada Systems measure and save data's like wind speed, wind direction, generated power etc. for 10 minutes intervals. This file was taken from a wind turbine's scada system that is working and generating power in Turkey.\n\nThe data's in the file are:\n\n+ Date\/Time (for 10 minutes intervals)\n+ LV ActivePower (kW): The power generated by the turbine for that moment\n+ Wind Speed (m\/s): The wind speed at the hub height of the turbine (the wind speed that turbine use for electricity generation)\n+ TheoreticalPowerCurve (KWh): The theoretical power values that the turbine generates with that wind speed which is given by the turbine manufacturer, and\n+ Wind Direction (\u00b0): The wind direction at the hub height of the turbine (wind turbines turn to this direction automaticly)","f5c88267":"# Data preprocessing\n\nA number of techniques have been proposed to obtain accurate wind power curves, often in two steps: \n\n+ Data preprocessing, and\n+ Power curve modeling.\n\nData preprocessing is used to filter wind data when the turbine runs under abnormal conditions, such as wind curtailment and\nblade damage, thus alleviating the adverse effects of these outliers on the training phases of the power curve model. However, it cannot be guaranteed that different types of outliers will be detected and processed during the data preprocessing phase. Therefore, some hidden anomalies will still be present in the data. Consequently, the error distribution in the wind power curve modeling data will be asymmetric. At present, it can be concluded from the review of wind power curve modeling techniques\nthat few models have considered this problem adequately. In this Notebook, based on the analysis of asymmetric error distribution, a simple strategy for improving the accuracy of wind power curve models are proposed.\n\nCurrently, preprocessing approaches for the raw wind data can be divided into three groups: man-made approaches, statistic-based models and learning-based models. Based on the characteristics of the raw wind data, the man-made approaches usually define the abnormal samples by the authors themselves. Schlechtingen and Santos proposed a four-step wind data preprocessing method:\n\n+ validity check, \n+ data scaling, \n+ missing data preprocessing, and \n+ lag removal. \n\nWang et al. defined a simple interval-based detection method to help remove some obvious outliers directly based on the plot\nof wind speed and wind power.\n\nIn this Notebook, a two-step method to refine the raw power data was used. \n+ First, wind speed data were divided into many small independent intervals, in which outlier data was checked, detected and removed.\n+ Then, the wind power data were further refined according to a histogram with ten bins. \n\nThere are several authors have suggested differernt approaches to process the data, and it can be concluded that the man-made approaches and the statisticbased models seem to be simpler than the learning-based models. Noted that, the results of the man-made approaches depend largely on their own definition of outliers.  Therefore, before constructing a statistic-based model or a learning-based model to preprocess raw wind data, it is better to first take the man-made approaches to preprocess them.\n\nAlthough multiple data preprocessing methods are employed to process raw wind date, we cannot guarantee that all abnormal points are detected and processed, and there are still many abnormal samples in our processed data. This fact has been illustrated in several publications. Although most of outliers are eliminated, the preprocessed data also have an impact on power curve modeling. There are still several challenges to achieve relatively accurate power curves.","9a6a071d":"<a href=\"https:\/\/ibb.co\/xMr3mZc\"><img src=\"https:\/\/i.ibb.co\/qR2x064\/Wind-turbine.jpg\" alt=\"Wind-turbine\" border=\"0\"><\/a>\n# Abstract\n\nWind power curves play important roles in wind power forecasting, wind turbine condition monitoring, estimation of wind energy potential and wind turbine selection. In practice, it is a challenging task to produce reliable wind power curves from raw wind data due to the presence of outliers formed in unexpected conditions, e.g., wind curtailment and blade damage. This Notebook tried to approaching a model for power curve modeling. Moreover, the performances of different ML models are studied in different seasons. \n\nIn general, there are three factors that affect the final wind power curves: data filtering approaches; wind power curve models; and choice of optimization strategies. However, there is no guarantee that all outliers will be removed from the raw wind data. Consequently, designing robust regression models or constructing robust objective functions may be two effective ways to obtain accurate power curves in the presence of outliers.\n","143fe810":"# Roles of wind power curve modeling\n\nWind power curves mainly contribute to wind power forecasting wind turbine condition monitoring, estimation of potential wind energy and wind turbine selection.\n\n<a href=\"https:\/\/ibb.co\/BghRmvZ\"><img src=\"https:\/\/i.ibb.co\/khLFpz8\/The-roles-of-wind-power-curve-in-wind-power-forecasting.jpg\" alt=\"The-roles-of-wind-power-curve-in-wind-power-forecasting\" border=\"0\"><\/a>\n\n+ Wind power forecasting\n\nAccurate prediction of wind power is critical to increasing the utilization of wind in the electricity grid. It also helps power system operators to plan unit commitment, economic scheduling, and dispatch. In general, an accurate power curve is conducive to wind power prediction. So, a suitable power curve results in more accurate power forecasts. \n\n+ Wind energy potential estimation and wind turbine selection\n\nWind energy potential is an important factor in identifying potential areas that might be suitable for wind energy development. Accurate estimation of wind energy potential is not only an essential part of wind energy development and utilization, but also provides investors with the necessary confidence in financial feasibility and risk mitigation.\n\n+ Wind turbine condition monitoring\n\nThe wind power curve characterizes wind turbine generation under normal conditions, so it can be used as an online wind turbine power generation profile. This can help us understand whether a wind turbine works under normal conditions, and then allowing for troubleshooting and scheduling maintenance, as well as repair interventions when the turbine is faulty. Understanding potential failures will help maintain and improve the operational efficiency and reliability of wind energy conversion systems."}}