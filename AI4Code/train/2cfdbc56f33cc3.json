{"cell_type":{"2ae48061":"code","3cfee730":"code","478694c2":"code","73e8584f":"code","b0705d89":"code","636f9452":"code","15df1a78":"code","4c19bc04":"code","98439dfb":"code","3f1ada5d":"code","e33c30b0":"code","8842cdc7":"code","7d9558a2":"code","2943a1af":"code","2645f738":"code","40ec4d81":"markdown","182921e8":"markdown","003180c0":"markdown","f151cb53":"markdown","91189a94":"markdown","62bffaa3":"markdown","b74296cb":"markdown","106e3d8e":"markdown","f4ac38a9":"markdown","e80fbcec":"markdown"},"source":{"2ae48061":"#Libs\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","3cfee730":"df = pd.read_csv(\"..\/input\/customer-personality-analysis\/marketing_campaign.csv\", delimiter=\"\\t\")\ndf.dropna(inplace=True)","478694c2":"df.info()","73e8584f":"df.head()","b0705d89":"Education = list(set(df[\"Education\"].values.tolist()))\nMartialStatus = list(set(df[\"Marital_Status\"].values.tolist()))\nprint(f\"The categories of Educated people in the dataset {Education}\")\nprint(f\"The categories of Martial Status of people in the dataset {MartialStatus}\")","636f9452":"PhDEducationData = df[df[\"Education\"] == Education[0]]\nnCycleEducationData = df[df[\"Education\"] == Education[1]]\nGraduationEducationData = df[df[\"Education\"] == Education[2]]\nMasterEducationData = df[df[\"Education\"] == Education[3]]\nBasicEducationData = df[df[\"Education\"] == Education[4]]","15df1a78":"class IncomeDist():\n    def __init__(self, df):\n        self.df = df\n        self.martialStatus = list(set(df[\"Marital_Status\"].values.tolist()))\n        self.education = list(set(df[\"Education\"].values.tolist()))\n    def plotKDE(self):\n        fig, ax = plt.subplots(1,len(self.martialStatus),figsize = (23,5))\n        \n        for i, ms in enumerate(self.martialStatus):\n            msData = self.df[self.df[\"Marital_Status\"] == ms ]\n            sns.histplot(data = msData, x = \"Income\", kde = True, ax = ax[i]).set(title = f\"{self.education[0]} with Marital Status {ms}\")\n            \n        fig.tight_layout()\n        plt.ticklabel_format(style=\"plain\")\n        plt.show()\n    \n    def plotBox(self): \n        fig, ax = plt.subplots(1, len(self.martialStatus), figsize = (23,5))\n        \n        for i, ms in enumerate(self.martialStatus):\n            msData = self.df[self.df[\"Marital_Status\"] == ms ]\n            sns.boxplot(data = msData, x = \"Income\", showmeans = True, meanline = True, ax = ax[i]).set(title = f\"{self.education[0]} with Marital Status {ms}\")\n        \n        fig.tight_layout()\n        plt.show()\n    \n    def mean(self):\n        return self.df[\"Income\"].mean()\n    \n    def count(self):\n        return self.df[\"Income\"].count()\n\n\n        ","4c19bc04":"incDistBasic = IncomeDist(BasicEducationData)\nincDistPhD = IncomeDist(PhDEducationData)\nincDistGrad = IncomeDist(GraduationEducationData)\nincDistMast = IncomeDist(MasterEducationData)\nincDistnCyc = IncomeDist(nCycleEducationData)","98439dfb":"meanIncomeEducation = {\n    Education[0] : incDistPhD.mean(),\n    Education[1] : incDistnCyc.mean(),\n    Education[2] : incDistGrad.mean(),\n    Education[3] : incDistMast.mean(),\n    Education[4] : incDistBasic.mean(),\n}\n\ntotalPopulation = incDistBasic.count() + incDistGrad.count() + incDistMast.count() + incDistnCyc.count() + incDistPhD.count() \n\ncountByIncomeEducation = {\n    Education[0] : incDistPhD.count()\/totalPopulation * 100,\n    Education[1] : incDistnCyc.count()\/totalPopulation * 100,\n    Education[2] : incDistGrad.count()\/totalPopulation * 100,\n    Education[3] : incDistMast.count()\/totalPopulation * 100,\n    Education[4] : incDistBasic.count()\/totalPopulation * 100,\n}","3f1ada5d":"def barPlot(d, x_label, y_label, title):\n    fig = plt.figure(figsize=(10,10))\n    ax1 = sns.barplot(x = 0, y = 1, data = pd.DataFrame(d.items()))\n    ax1.set(xlabel = x_label, ylabel = y_label, title = title)\n    ax1.bar_label(ax1.containers[0])\n\n    plt.show()\n    ","e33c30b0":"barPlot(meanIncomeEducation, \"Education\", \"Income\", title = \"Mean Income by Education\")\nbarPlot(countByIncomeEducation, \"Education\", \"%\", title = \"Population of customers by Education\")","8842cdc7":"incDistPhD.plotBox()\nincDistnCyc.plotBox()\nincDistGrad.plotBox()\nincDistMast.plotBox()\nincDistBasic.plotBox()","7d9558a2":"incDistPhD.plotKDE()\nincDistnCyc.plotKDE()\nincDistGrad.plotKDE()\nincDistMast.plotKDE()\nincDistBasic.plotKDE()","2943a1af":"class CampaignSuccess(IncomeDist):\n    def __init__(self, df):\n        IncomeDist.__init__(self, df = df)\n        self.campgn = [f\"AcceptedCmp{i}\" for i in range(1, 6)]\n        \n    def plotMaritalStatus(self):\n        fig, ax = plt.subplots(5, 5, figsize  = (30,30))\n        \n        for i, ed in enumerate(self.education):\n            DF = self.df[self.df[\"Education\"] == ed]\n            for j, cm in enumerate(self.campgn):\n                x = sns.countplot(data = DF, x = \"Marital_Status\", hue = cm, ax=ax[i,j])\n                x.set(title = f\"{ed} group\")\n                for cnt in x.containers:\n                    x.bar_label(cnt)\n        plt.show()\n        \n    def plotCombinedMaritalStatus(self):\n        fig, ax = plt.subplots(5, 1, figsize = (30,30), sharex = True, subplot_kw={'ylim': (0,500)})\n        \n        for i, cm in enumerate(self.campgn):\n            x = self.df.groupby(['Education', 'Marital_Status', f'{cm}'])['ID'].count().unstack().plot(kind = 'bar', figsize = (20,20), ax = ax[i], title = f'Campaign {cm}')\n            x.set_ylabel(\"count\")\n            for p in x.patches:\n                x.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))\n        fig.tight_layout()\n        plt.show()\n        \n    def plotCombinedMaritalStatusTotal(self):\n        fig, ax = plt.subplots(5, figsize = (10,30), sharex = True)\n\n        for i, cm in enumerate(self.campgn):\n            x = self.df.groupby(['Education', 'Marital_Status', f'{cm}'])['ID'].count().unstack().sum().plot(kind = 'bar', ax = ax[i], title = f'Campaign Total {cm}')\n            x.set_ylabel(\"count\")\n            for p in x.patches:\n                x.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))\n        fig.tight_layout()\n        plt.show()","2645f738":"CampaignSuccess(df = df).plotMaritalStatus()\nCampaignSuccess(df = df).plotCombinedMaritalStatus()\nCampaignSuccess(df = df).plotCombinedMaritalStatusTotal()","40ec4d81":"**Does education play an important role in being a buyer? i.e. If a person is more educated do they end up spending more money?**","182921e8":"**A few thought provoking questions**\n1. What is the income distribution based on Education and Martial Status? i.e. (understand the client base)\n2. Based on Education which campaign was the most successful?\n3. Based on Education which group spent the most on each product?\n4. Which Education group complains the most? ","003180c0":"# Education is Important\n![photo-1524995997946-a1c2e315a42f.jfif](attachment:75b7a7b5-cbc2-45d5-92cc-468e76c702a2.jfif)","f151cb53":"**More stuff to come**","91189a94":"# Income distribution based on Education and Martial Status","62bffaa3":"**Observations**\n1. PhD customers have a higher mean income compared to any other group.\n2. Widows in all 5 education classes have an income closer to the mean.\n3. There are obscure marital statuses e.g. Absurd and YOLO which can be considered as undetermined class.\n4. In the graduate class there is a small number of extremeley wealthy individuals which can be considered as extreme outliers.\n5. The largest consumers of this website and shop are individuals witha a Graduate, PhD and Masters education. As a result 88.54% of the entire customer base has a tertiary qualification with an average of income of 53,927.73 (USD-can be assumed).\n6. Customers with tertiaty education interact more with Ad-campaigns than 2n-cycle and Basic education customers.\n7. Married\/Together group of customers react more to ad-campaigs than groups with single people in them. One hypothesis could be that customers are buying items from a wholesale prespective (this leads to what kind of products are being marketed in the ad campaigns)\n8. The most successful campagign is AcceptedCmp4, but it can be considered that AcceptedCmp3, AcceptedCmp4 and AcceptedCmp5 recieved the same amount of responses. It can be inferred that these campagins are very similar in nature? i.e. same campaign strategy but different product?\n9. The worst campaign is the AcceptedCmp2 with only 30 positive responses.\n10. Graduate customers were slightly more attracted to Ad-campagin 5 than any others.\n11. Masters customers were more attracted to Ad-campagin 4 than any others.\n12. PhD customers were more attracted to Ad-campagin 4 than any others.\n13. Overall each Ad-campagin has performed dismally ","b74296cb":"**Clearly education is the correct pathway to take in creating coherent sets.**","106e3d8e":"Problem Statement\n\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers.\n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\nContent\nAttributes\n\nPeople\n\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\n\nProducts\n\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\nPromotion\n\nNumDealsPurchases: Number of purchases made with a discount\n\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n\nPlace\n\n* NumWebPurchases: Number of purchases made through the company\u2019s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month\n\nTarget\nNeed to perform clustering to summarize customer segments.\n\nSolution\n","f4ac38a9":"# Campaign success based on education","e80fbcec":"# EDA aka (exploring the data)\n\nFundamentally this is the step which one takes when understanding what the data is made up. In this case we have a few variables 28 in total. There are some unique properties in the dataset which can be used to seperate the data into a more coherent sets of data. We will use the field with the lowest number of categories. "}}