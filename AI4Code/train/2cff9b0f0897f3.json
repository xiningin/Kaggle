{"cell_type":{"165b2705":"code","3ac05bfa":"code","b11fd065":"code","8c08329e":"code","ed38b6a1":"code","693988b3":"code","34c2d125":"code","d23ed468":"code","18a8a7ae":"code","94dd88cd":"code","c6b02459":"code","5ff470ab":"code","243ea0c6":"code","2ea80102":"code","0ffdc729":"code","eaacbd7e":"code","e14aae13":"code","a3407b52":"code","0196934b":"code","ecfdeca8":"code","4c712077":"code","58708853":"code","d2c2fe93":"code","b3afdeb7":"code","b4a85241":"code","b02cad9e":"code","189b94a1":"code","601a40ab":"code","a7381828":"code","ebc08e0d":"code","a647aade":"code","4122c112":"code","d3541e6a":"code","cf8bc403":"code","22123421":"code","1903ff0f":"code","c46c9e91":"code","10df0abf":"code","704de312":"code","ece443ca":"code","ff8c2b6c":"code","dbbcf869":"code","f1fe0771":"code","c61281e1":"code","ca08531a":"code","82191156":"markdown","7ffe9973":"markdown","212b3699":"markdown","45dd6450":"markdown","a835588c":"markdown","a31f940e":"markdown","d717708b":"markdown","f566204c":"markdown","1f022a48":"markdown","0ec4288c":"markdown","1f86c0ce":"markdown","15ef9625":"markdown"},"source":{"165b2705":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport itertools","3ac05bfa":"df = pd.read_feather('..\/input\/ednet-kt34\/KT3_merged.feather')\nquestions_df = pd.read_csv('..\/input\/ednet-contents\/questions.csv')","b11fd065":"questions_df.head()","8c08329e":"df.head(20)","ed38b6a1":"# questions_df[['first_correct', 'avg_attempts', 'final_correct', 'time_spend']] = pd.DataFrame([[0, 0, 0, 0]], index=questions_df.index)","693988b3":"questions_df.head()","34c2d125":"df['action_type'].unique()","d23ed468":"df[df['action_type']=='respond']['source'].unique()","18a8a7ae":"answers_dict = {q: questions_df[questions_df['question_id']==q]['correct_answer'].to_numpy()[0]\n               for q in questions_df['question_id']}","94dd88cd":"df_respond = df[df['action_type']=='respond']","c6b02459":"df_respond['correct_answer'] = df_respond['item_id'].map(answers_dict)\ndf_respond['is_correct'] = np.where(df_respond['correct_answer']==df_respond['user_answer'], 1, 0)","5ff470ab":"df_respond.head()","243ea0c6":"del answers_dict","2ea80102":"df_final_respond = df_respond.drop_duplicates(subset=['user_id', 'item_id'], keep='last')\nprint(df_respond.shape, df_final_respond.shape)","0ffdc729":"sns.countplot(x='is_correct', data=df_final_respond)","eaacbd7e":"df_final_correct = df_final_respond[df_final_respond['is_correct']==1]","e14aae13":"questions_df['final_correct'] = questions_df['question_id'].map(df_final_correct['item_id'].value_counts())","a3407b52":"questions_df.head()","0196934b":"users_per_question = df_respond.groupby('item_id')['user_id'].unique().apply(lambda x: len(x))\nusers_per_question.head()","ecfdeca8":"questions_df['num_users'] = questions_df['question_id'].map(users_per_question)","4c712077":"questions_df.head()","58708853":"questions_df['pct_correct'] = questions_df['final_correct'] \/ questions_df['num_users']\nquestions_df.head()","d2c2fe93":"question_total_attempts = df_respond['item_id'].value_counts()","b3afdeb7":"questions_df['avg_attempts'] = questions_df['question_id'].map(question_total_attempts \/ users_per_question)","b4a85241":"del question_total_attempts","b02cad9e":"questions_df.head()","189b94a1":"gb = df_respond.groupby('item_id')['user_id'].value_counts()","601a40ab":"gb","a7381828":"# questions that have only-one attempts\nquestions_with_one_att = gb[gb==1].reset_index(name='count')\nquestions_with_one_att","ebc08e0d":"questions_with_one_att['item_id'].value_counts()","a647aade":"one_correct = pd.merge(questions_with_one_att, df_final_correct, on=['item_id', 'user_id'], how='inner')[['item_id', 'user_id']]\none_correct","4122c112":"questions_df['correct_at_first'] = questions_df['question_id'].map(one_correct['item_id'].value_counts() \/ users_per_question)","d3541e6a":"questions_df.head(10)","cf8bc403":"del one_correct, questions_with_one_att, df_final_correct, df_final_respond, gb, users_per_question","22123421":"corr = questions_df[['pct_correct', 'avg_attempts', 'correct_at_first']].corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\nsns.heatmap(corr, mask=mask, cmap='YlGn', annot=True)","1903ff0f":"sns.pairplot(questions_df[['pct_correct', 'avg_attempts', 'correct_at_first']], kind='reg', plot_kws={'line_kws':{'color':'red'}}, corner=True)","c46c9e91":"tags = set(itertools.chain.from_iterable(questions_df['tags'].str.split(';')))\nprint(tags)","10df0abf":"for tag in tags:\n    if tag != '-1':\n        questions_df[tag] = 0","704de312":"def encode_tags(cols):\n    tags = questions_df[questions_df['question_id']==cols['question_id']]['tags'].str.split(';').values[0]\n    if tags[0] != '-1':\n        for tag in tags:\n            cols[tag] = 1\n    return cols","ece443ca":"questions_df = questions_df.apply(encode_tags, axis=1)","ff8c2b6c":"stats = {'tag': [], 'pct_correct': [], 'avg_attempts': [], 'correct_at_first': []}\nfor tag in tags:\n    if tag != '-1':\n        stats['tag'].append(tag)\n        stats['pct_correct'].append(questions_df[questions_df[tag]==1]['pct_correct'].mean())\n        stats['avg_attempts'].append(questions_df[questions_df[tag]==1]['avg_attempts'].mean())\n        stats['correct_at_first'].append(questions_df[questions_df[tag]==1]['correct_at_first'].mean())\n        \ntags_df = pd.DataFrame(stats)\ntags_df","dbbcf869":"print('Highest pct of correct ans:\\n', tags_df.loc[tags_df['pct_correct'].argmax()])\nprint()\nprint('Lowest pct of correct ans:\\n', tags_df.loc[tags_df['pct_correct'].argmin()])","f1fe0771":"print('Highest avg no. of attempts:\\n', tags_df.loc[tags_df['avg_attempts'].argmax()])\nprint()\nprint('Lowest avg no. of attempts:\\n', tags_df.loc[tags_df['avg_attempts'].argmin()])","c61281e1":"print('Highest pct of 1st correct attempt:\\n', tags_df.loc[tags_df['correct_at_first'].argmax()])\nprint()\nprint('Lowest pct of 1st correct attempt:\\n', tags_df.loc[tags_df['correct_at_first'].argmin()])","ca08531a":"questions_df.to_csv('question_features.csv', index=False)","82191156":"## Percentage of correct attempts","7ffe9973":"## Percentage of correct at first time","212b3699":"## Final correct respond","45dd6450":"Correlation","a835588c":"## Write to file","a31f940e":"## No. of users trying each question","d717708b":"## Basic analysis","f566204c":"Percentage of correct answers","1f022a48":"## Tags","0ec4288c":"Answer correctly using one attempts","1f86c0ce":"## Avg no. of attempts","15ef9625":"Avg no. of attempts"}}