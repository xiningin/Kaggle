{"cell_type":{"5c577c9e":"code","1f03aa79":"code","e5819a24":"code","ec585049":"code","60501031":"code","2f5ffefa":"code","38efb1ae":"code","b0471f82":"code","e19d4af4":"code","b53f5785":"code","bd5a89fb":"code","f0f39417":"code","794d387c":"code","7bd4297d":"markdown","ccb76df2":"markdown"},"source":{"5c577c9e":"import glob\nimport itertools\nimport collections\n\nfrom PIL import Image as IMG\nimport cv2\nfrom tqdm import tqdm_notebook as tqdm\nimport pandas as pd\nimport numpy as np\nimport torch\nimport imagehash\nfrom joblib import Parallel, delayed\nfrom sklearn.feature_extraction.text import CountVectorizer\nimport matplotlib.pyplot as plt\npd.options.display.max_rows = 20\npd.options.display.max_columns = 1000","1f03aa79":"train = pd.read_csv('..\/input\/train\/train.csv')\ntest = pd.read_csv('..\/input\/test\/test.csv')\ndef change_PetID(x):\n    err = 9-len(x['PetID'])\n    if err > 0:\n        x['PetID'] = '0'*err + x['PetID']\n    return x\ntrain = train.apply(change_PetID,axis=1)\ntest = test.apply(change_PetID,axis=1)\ntrain.loc[:,'Category'] = 'train'\ntest.loc[:,'Category'] = 'test'\ntest.loc[:,'AdoptionSpeed'] = np.nan\ndf = pd.concat([train, test], sort=False).reset_index(drop=True)","e5819a24":"def show_all_sim_pics(a,b):\n    def tt(a):\n        if a in list(train['PetID']):\n            return 'train'\n        else:\n            return 'test'\n    \n    sa = df[(df['PetID']==a)].iloc[0].loc['PhotoAmt']\n    sb = df[(df['PetID']==b)].iloc[0].loc['PhotoAmt']\n    print(tt(a),a,sa)\n    print(tt(b),b,sb)\n    for i in range(1,np.max((int(sa)+1,int(sb)+1))):\n        fig = plt.figure(figsize=(10, 20))\n        fig.add_subplot(1,2,1)\n        if i <= sa:\n            image1 = cv2.imread('..\/input\/%s_images\/%s-%s.jpg' % (tt(a), a, str(i)))\n            image1 = cv2.cvtColor(image1, cv2.COLOR_BGR2RGB)\n            plt.imshow(image1)\n        else:\n            plt.imshow([[0]])\n        fig.add_subplot(1,2, 2)\n        if i <= sb:\n            image2 = cv2.imread('..\/input\/%s_images\/%s-%s.jpg' % (tt(b), b, str(i)))\n            image2 = cv2.cvtColor(image2, cv2.COLOR_BGR2RGB)\n            plt.imshow(image2)\n        else:\n            plt.imshow([[0]])\n        plt.show()\n    return df[(df['PetID'] == a) | (df['PetID'] == b)]\n\n        \n","ec585049":"interesting_pairs = (('0940ecf2b', '937c2e14f'), \n                     ('6d5afdb0f', '95b94b4ac'), \n                     ('23379775f', '6b446b436'), \n                     ('1dfcfe139', '4dc36183c'), \n                     ('89c8b19eb', 'dc99804de'), \n                     ('bc2272277', 'eedb57cd6'), \n                     ('5ed5663ae', '8673a672d'), \n                     ('75b33cd1d', 'e93b2f0c5'), \n                     ('0c859ef92', '23829dc63'), \n                     ('5417ca8e6', 'cc563b215'), \n                     ('2d8db1c19', '4733d5e7a'), \n                     ('58e8cb9e1', 'afda0a2dd'), \n                     ('29558e678', 'd9801429b'), \n                     ('3721ed900', '9b9e24b37'), \n                     ('1bff3e46f', '65650b974'), \n                     ('40dfeeb65', '8d32f11b0'), \n                     ('2a9c5eab2', 'c24f53ec1'), \n                     ('0a98163c8', '0f9697729'), \n                     ('1b6f92bc2', '6cfba936a'), \n                     ('14c70b2c2', '759e2e94e'), \n                     ('59e7b5f52', '65650b974'), \n                     ('4733d5e7a', 'de591574b'), \n                     ('87b753139', 'e99a775d2'), \n                     ('9ab460730', 'de0ace433'))\n","60501031":"show_all_sim_pics(*interesting_pairs[0])","2f5ffefa":"show_all_sim_pics(*interesting_pairs[1])","38efb1ae":"show_all_sim_pics(*interesting_pairs[2])","b0471f82":"show_all_sim_pics(*interesting_pairs[3])","e19d4af4":"show_all_sim_pics(*interesting_pairs[4])","b53f5785":"show_all_sim_pics(*interesting_pairs[5])","bd5a89fb":"show_all_sim_pics(*interesting_pairs[6])","f0f39417":"show_all_sim_pics(*interesting_pairs[7])","794d387c":"print(len(interesting_pairs))\ncounter = collections.Counter()\nfor petid1, petid2 in interesting_pairs:\n    row1 = df.loc[df['PetID']==petid1].iloc[0]\n    row2 = df.loc[df['PetID']==petid2].iloc[0]\n    for attr in train.columns:\n        if getattr(row1, attr) != getattr(row2, attr):\n            counter[attr] += 1        \ncounter","7bd4297d":"## watch out the differents of 'Quantity' and other informations","ccb76df2":"# Interesting pair of pets\nIdeas came from [Appian's](https:\/\/www.kaggle.com\/appian) kernel : [Let's find out duplicate images with imagehash](https:\/\/www.kaggle.com\/appian\/let-s-find-out-duplicate-images-with-imagehash)"}}