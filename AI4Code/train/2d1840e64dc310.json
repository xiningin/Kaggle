{"cell_type":{"8c7dec20":"code","233044b6":"code","30e5c69b":"code","1b1db556":"code","d3028d0c":"code","4bc327e0":"code","e6ef8dae":"code","cddcebd9":"code","51138b2d":"code","fd05957c":"code","a85a7764":"code","10d1ae26":"code","4dd98d29":"code","85e29684":"code","6057c1be":"code","1630baea":"code","969c6cf3":"code","11da8874":"code","7bf89adb":"code","8be9d56f":"code","23ecd3c1":"code","82f11dae":"code","a4cac75f":"code","a8ea5809":"code","97e09223":"code","a7567abc":"markdown","ab8eac16":"markdown","95cd9818":"markdown","ababc614":"markdown","6133a325":"markdown","42bc24bd":"markdown","646cded8":"markdown","516f667f":"markdown","b3c02e53":"markdown","08fc871a":"markdown","41ee7b56":"markdown","c9977d2e":"markdown","97d4ccdf":"markdown","255c2822":"markdown","e4837112":"markdown","5abfb75d":"markdown","17c73d2d":"markdown","d96010b0":"markdown"},"source":{"8c7dec20":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport os\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.metrics import precision_score,accuracy_score,confusion_matrix\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import  Pipeline\nfrom sklearn.ensemble import RandomForestClassifier\n\n\nsns.set(color_codes=True)\nplt.style.use('seaborn-muted')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","233044b6":"dataset = pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')\ndataset.head()","30e5c69b":"dataset.columns","1b1db556":"dataset.dtypes","d3028d0c":"dataset.count()","4bc327e0":"dataset = dataset.drop_duplicates()\ndataset.count()","e6ef8dae":"dataset.isnull().values.sum()","cddcebd9":"dataset.dtypes.value_counts()","51138b2d":"dataset.describe()","fd05957c":"cols = ['V1', 'V14']\nf, axes = plt.subplots(1, 2, figsize=(20, 5), sharex=True)\nfor index,col in enumerate(cols):\n    sns.boxplot(x=\"Class\", y=col, hue=\"Class\", palette=\"colorblind\", data=dataset, ax=axes[index]) \n    sns.stripplot(x='Class', y=col,  data=dataset,dodge=True,jitter=True,marker='o',ax=axes[index],alpha=0.5,color='grey',hue='Class')\nplt.show()\nplt.clf()\nplt.close()\n","a85a7764":"f, axes = plt.subplots(1, 2, figsize=(20, 6), sharex=True)\nsns.distplot(dataset['V3'],ax=axes[0])\nsns.distplot(dataset['V4'],ax=axes[1])\n\nplt.show()\nplt.clf()\nplt.close()\n\n","10d1ae26":"sns.jointplot(y='Class',x='V7',data=dataset,kind='hex')","4dd98d29":"dataset.V8.hist()","85e29684":"sns.scatterplot(x=\"V9\", y=\"Class\",data=dataset)","6057c1be":"dataset.plot.scatter(x='V10',y='Class',c='V11',colormap='viridis')","1630baea":"sns.set(style=\"ticks\")\nsns.pairplot(dataset[[\"V12\",\"V13\",\"V14\",\"Class\"]], hue=\"Class\")","969c6cf3":"f, ax = plt.subplots(figsize=(15, 8))\ncorr = dataset.corr()\nsns.heatmap(corr,\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","11da8874":"x=dataset.iloc[:,:-1]\ny=dataset.iloc[:,len(dataset.columns)-1]\nncols  = [ 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n       'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount']\nx= x[ncols]\nprint(\"x.shape:\", x.shape)\nprint(\"y.shape:\", y.shape)","7bf89adb":"num = int(len(x) * 0.2)\nxtrain = x[:-num]\nytrain = y[:-num]\nxtest = x[-num:]\nytest = y[-num:]\n\nprint(\"# train:\", len(xtrain))\nprint(\"# test:\", len(xtest))","8be9d56f":"ntransformer = SimpleImputer(strategy='median')\n\npreprocessor = ColumnTransformer(transformers=[('num', ntransformer, ncols)])\n\npipeline = Pipeline(steps=[('preprocessor', preprocessor),\n                           ('model', RandomForestClassifier(random_state=0, n_estimators=3, max_depth=3))])\n\npipeline.fit(x,y)","23ecd3c1":"print('Cross validation score: {:.3f}'.format(cross_val_score(pipeline,x, y, cv=10).mean()))","82f11dae":"preds = pipeline.predict(xtest)","a4cac75f":"print(\"Precision score: {:.3f}\".format(precision_score(ytest, preds, average='macro')))","a8ea5809":"print(\"Accuracy score: {:.3f}\".format(accuracy_score(ytest, preds)))","97e09223":"cm=confusion_matrix(ytest,preds)\nprint(cm)\nplt.imshow(cm, cmap='binary')","a7567abc":"One additional and useful thing that can be done using Seaborn is to show a bivariate analysis in a scatter plot with an overlay of colored observations using categorical or other values","ab8eac16":"**Load the Sample Data**\n\nData column explanations\/definitions","95cd9818":"**Data Analysis Summary**\n\nWhile we worked through the examples of EDA in this dataset, we can come away from our view of this data with a few findings.\n\n**what can we think about?**\n\n","ababc614":"Pair plots can play a similar role to individual scatter plots as they provide a variety of visualizations","6133a325":"**Summary Statistics**\n\nSummary statistics are there to give you an overall view of the metrics in your data set at a glance. \n\nThey include the count of observations, the mean of observations, the standard deviation, min, 25% quartile, 50% quartile, 75% quartile, and the max value in each Series. \n\nWhat isn\u2019t usually included in the outputs of summary statistics are categorical variables or string variables.\n","42bc24bd":"**micro Feature Engeneering**","646cded8":"step by step *Refer*\n> * [Exploratory Data Analysis (EDA)](https:\/\/www.datacourses.com\/tips-for-performing-eda-with-python-671\/)\n> * [An EDA checklist](https:\/\/medium.com\/dataseries\/an-eda-checklist-800beeaee555)","516f667f":"**Column Data Type Assessment**\n\nOne additional step we should be taking as a part of our evaluation of the data is to see whether the datatypes loaded in the original dataset match our descriptive understanding of the underlying data.","b3c02e53":"**Exploratory Data Analysis (EDA)**\n\nEDA with Python is a critical skill for all data analysts, scientists, and even data engineers. EDA, or Exploratory Data Analysis, is the act of analyzing a dataset to understand the main statistical characteristics with visual and statistical methods.\n\n\n \ud83d\udc76 **Contexting us**\n\nIt is important that credit card companies are able to recognize fraudulent credit card transactions so that customers are not charged for items that they did not purchase.\n\n> _\u201cThe greatest value of a picture is when it forces us to notice what we never expected to see.\u201d_ **John W. Tukey**","08fc871a":"**Histogram & Jointplot Generation**\n\n Distribution plots are used to visualize univariate distributions of observations\n \n They can be used to identify outliers, identify how normal a dataset is, and whether there are potential gaps in your dataset, along with other applications.\n ","41ee7b56":"**Column Transformer**\n\nThis is particularly handy for the case of datasets that contain heterogeneous data types, since we may want to scale the numeric features and one-hot encode the categorical ones.","c9977d2e":"**Boxplots**\n\nOne important part beyond simply pulling summary statistical methods is to get a visual sense of the distributions of various variables within a given Series or Series by category using boxplots.","97d4ccdf":"The quick and dirty approach to plotting histograms.","255c2822":"**Check Column & Row Contents**","e4837112":"**Correlation Matrix**\n","5abfb75d":"**Libraries**","17c73d2d":"While histograms are useful to view, they are still ostensively univatiate in nature, meaning they only show the distribution of one variable at a time. \n\nWhen we want to compare two variables distributions at a time in Python, we can use the joint plot function.","d96010b0":"**Scatter Plots & Pair Plots**\n\nnother common method of performing bivariate analysis, or comparing more than one variable, is to use scatter plots and pair plots.Scatter plots are useful to show individual values plot on a two dimensional cartesian X & Y plane from two Series in a Pandas DataFrame."}}