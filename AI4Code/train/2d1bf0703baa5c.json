{"cell_type":{"40bae73f":"code","306d7263":"code","3ce02f71":"code","d18447ff":"code","a6935824":"code","1c42f27e":"code","8fad6c0a":"code","3953820b":"code","c7b66a8e":"code","0906b159":"code","7e7b052f":"code","8d63ca5f":"code","4d0098be":"code","a8818389":"code","1df7199f":"code","2e630713":"code","f5c2a0a2":"code","67cecb73":"code","34e715a3":"code","7bc62d18":"markdown","17505049":"markdown","4b68a005":"markdown","cf57f5ca":"markdown","e70dba12":"markdown"},"source":{"40bae73f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","306d7263":"df = pd.read_csv('\/kaggle\/input\/isotc213\/ISO_TC 213.csv')","3ce02f71":"df.head()","d18447ff":"df.drop(columns=['corrected_version'])","a6935824":"df['Status'].unique()","1c42f27e":"import matplotlib.pyplot as plt","8fad6c0a":"count_df = df.groupby('Status')['price_CF'].count().reset_index()","3953820b":"plt.bar(count_df['Status'],count_df['price_CF'])","c7b66a8e":"n_pages_max = df['Number of pages'].max()\ndf['Number of pages'] \/= n_pages_max","0906b159":"status_coded = df['Status'].factorize()\nstatus_coded[1]","7e7b052f":"s = [200*(n+0.00000000000001) for n in df['Number of pages']]\ncolors = ['b', 'g', 'y' ,'r'] #corresponding to 4 status\nc = [colors[n] for n in status_coded[0]]","8d63ca5f":"plt.figure(figsize=[10,8])\nplt.scatter(df.index, df['price_CF'], s=s, color= c)\nplt.xticks([])\nplt.xlabel('ISO Products')\nplt.ylabel('price_CF')\nplt.show()","4d0098be":"task_cols = ['title', 'Number of pages', 'price_CF']","a8818389":"df['Number of pages'] *= n_pages_max","1df7199f":"task_df = df[df['Status']=='Published'][task_cols]","2e630713":"task_df.head()","f5c2a0a2":"task_df['price_CF_to_npages_ratio'] = task_df['price_CF']\/task_df['Number of pages']","67cecb73":"mean_price_CF_to_npages_ratio = task_df['price_CF_to_npages_ratio'].mean()\nmean_price_CF_to_npages_ratio","34e715a3":"task_df[task_df['price_CF_to_npages_ratio']>mean_price_CF_to_npages_ratio][task_cols].sort_values(by=['price_CF'], ascending = False).head()","7bc62d18":"Grouping the products by their publication status","17505049":"list of top 5 ISO standard products with a published status and with price_CF to number of pages ratio greater than its mean","4b68a005":"0 - 'Withdrawn' --- Blue\n1 - 'Published' --- Green\n2 - 'Under development' --- Yellow\n3 - 'Deleted' --- Red","cf57f5ca":"size of the bubble is the number of pages and the color of the bubble corresponds to the status.","e70dba12":"on the X-axis we have all the ISO products and on the Y-axis we have their corresponding 'price_CF'"}}