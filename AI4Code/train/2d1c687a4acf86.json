{"cell_type":{"4859fa8c":"code","4a760f43":"code","83346812":"code","dc58e75b":"code","d672bf23":"code","f82d9853":"code","e45bb123":"code","8fd24009":"code","5a5e167d":"code","2869e6ab":"code","22818620":"code","e0ffc9fe":"code","e263ad8f":"code","86aa820a":"code","f96537da":"markdown","57ae7d45":"markdown","dd187310":"markdown"},"source":{"4859fa8c":"!pip install stylecloud","4a760f43":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport stylecloud\nfrom IPython.display import Image\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83346812":"df = pd.read_csv('..\/input\/name-of-pakistan-in-different-languages\/pakistan_name.csv')\ndf.head()","dc58e75b":"df.tail()","d672bf23":"df.isnull().sum()","f82d9853":"#Code by Kapa Kudaibergenov https:\/\/www.kaggle.com\/kapakudaibergenov\/stylecloud\/notebook\n\nconcat_languages = ' '.join([i for i in df.Language.astype(str)])\nprint(concat_languages[:1000])","e45bb123":"#Code by Kapa Kudaibergenov https:\/\/www.kaggle.com\/kapakudaibergenov\/stylecloud\/notebook\n\nstylecloud.gen_stylecloud(text=concat_languages,\n                          icon_name='fas fa-biking',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024)","8fd24009":"Image(filename=\".\/stylecloud.png\", width=1024, height=1024)","5a5e167d":"df.Language.value_counts()[:40]","2869e6ab":"#Code by Kapa Kudaibergenov https:\/\/www.kaggle.com\/kapakudaibergenov\/stylecloud\/notebook\n\nstylecloud.gen_stylecloud(text=''.join([i for i in df[df.Language.str.contains('Latin')].Name]),\n                          icon_name='fas fa-dharmachakra', #Freud above came from data.author.value_counts in 11\n                          palette='colorbrewer.sequential.BuGn_9',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024)","22818620":"Image(filename=\".\/stylecloud.png\", width=1024, height=1024)","e0ffc9fe":"#Code by Kapa Kudaibergenov https:\/\/www.kaggle.com\/kapakudaibergenov\/stylecloud\/notebook\n\nstylecloud.gen_stylecloud(text=''.join([i for i in df[df.Name.str.contains('\u0db4\u0dcf\u0d9a\u0dd2\u0dc3\u0dca\u0dad\u0dcf\u0db1\u0dba')].Language]),\n                          icon_name='fab fa-evernote',#Angelou contains above came from data.author.value_counts\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='vertical',\n                          size=1024)\n\nImage(filename=\".\/stylecloud.png\", width=1024, height=1024)","e263ad8f":"#Code by Kapa Kudaibergenov https:\/\/www.kaggle.com\/kapakudaibergenov\/stylecloud\/notebook\n\nstylecloud.gen_stylecloud(text=''.join([str(i) for i in df[df.Language.str.contains('Urdu')].Name]),\n                          icon_name='far fa-eye',#Twain above came from data.author.value_counts\n\n                          palette='scientific.diverging.Roma_17',\n                          background_color='black',\n                          gradient='center',\n                          size=1024)\n\nImage(filename=\".\/stylecloud.png\", width=1024, height=1024)","86aa820a":"#Code by Kapa Kudaibergenov https:\/\/www.kaggle.com\/kapakudaibergenov\/stylecloud\/notebook\n\nstylecloud.gen_stylecloud(text='Urdu, Punjabi, Hindko, Brahui, Pashto, English.'.join([str(i) for i in df[df.Language.str.contains('')].Language]),\n                          icon_name='fas fa-yin-yang',\n                          palette='tableau.Gray_5',\n                          background_color='lightblue',\n                          gradient='center',\n                          size=1024)\n\n\nImage(filename=\".\/stylecloud.png\", width=1024, height=1024)","f96537da":"#StyleCloud Project description\n\n\"Generate stylistic wordclouds, including gradients and icon shapes!\"\n\n\"Stylecloud is a Python package that leverages the popular word_cloud package, adding useful features to create truly unique word clouds!\"\n\n\"Icon shapes (of any size!) for wordclouds (via Font Awesome 5.13.0 Free, or your own Font Awesome Pro)\"\n\nSupport for advanced color palettes (via palettable)\n\nManual color selection for text and backgrounds,\n\nDirectional gradients w\/ the aforementioned palettes.\n\nSupports reading text files and CSVs (either one-column w\/ texts, or two columns w\/ words+weights).\n\nCommand Line Interface!\n\n\"This package is a more formal implementation of my stylistic word cloud project from 2016.\"\n\nhttps:\/\/pypi.org\/project\/stylecloud\/","57ae7d45":" https:\/\/www.kaggle.com\/methoomirza\/variant-name-of-pakistan\/data\n MUHAMMAD SHAHID MIRZA ","dd187310":"That's all for now."}}