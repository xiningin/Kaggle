{"cell_type":{"4b3354cc":"code","1bbca197":"code","d0166605":"code","d13d8ad6":"code","ad2a0120":"code","a7d02c62":"code","7f2549db":"code","d7513c95":"code","a38180a1":"code","fc788b26":"code","eb3bbd86":"code","568c2d23":"code","203eb2ef":"code","c2627118":"code","bc50d14d":"code","f56325d4":"code","ab05015e":"code","818b5317":"code","128bae90":"code","783fb149":"code","caa7a6e5":"code","ad320035":"code","174c0351":"code","ac8df04e":"code","d17c1be8":"code","89dbc690":"code","e22277e9":"code","50083555":"code","2836f19a":"code","c2991183":"code","dea220f6":"code","089c990a":"markdown","02bb5632":"markdown","a2d260d3":"markdown","60fca16c":"markdown","125faebb":"markdown","bf70b6ac":"markdown","b21c2817":"markdown","b2fe724a":"markdown","d35d5949":"markdown","8d205d19":"markdown","91de9e1f":"markdown","09e89bd0":"markdown","0e7e775f":"markdown","e3a2cb53":"markdown","bb9e4cd6":"markdown","7d7d304f":"markdown","d0a490ec":"markdown","a656deba":"markdown","3e94c043":"markdown"},"source":{"4b3354cc":"from datetime import date\nimport os\n\nimport geopandas as gpd\nimport folium\nimport geoplot as gplt\nimport mapclassify\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\nimport numpy as np ## Linear Alegbra\nimport pandas as pd ## data processing, file I\/O\nimport plotly.express as px\nimport re\nimport seaborn as sns\nfrom shapely.geometry import Point, Polygon\nfrom shapely.geometry import MultiPolygon","1bbca197":"%matplotlib inline","d0166605":"airport_impact = pd.read_csv(\"..\/input\/covid19s-impact-on-airport-traffic\/covid_impact_on_airport_traffic.csv\")","d13d8ad6":"airport_impact.head()","ad2a0120":"airport_impact.info()","a7d02c62":"airport_impact['Date'] = airport_impact['Date'].map(lambda x: date.fromisoformat(x))","7f2549db":"airport_impact['Weekday'] = airport_impact['Date'].map(lambda x: x.weekday())\n\nwk_list = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n\nairport_impact['Weekday'] = [wk_list[idx] for idx in airport_impact['Weekday']]","d7513c95":"def cut_long(point):\n    \n    long, _ = point[6:-1].split(\" \")\n    return float(long)\n\n\ndef cut_lat(point):\n    \n    _, lat = point[6:-1].split(\" \")\n    return float(lat)","a38180a1":"airport_impact[\"long\"] = airport_impact['Centroid'].map(cut_long)\n\nairport_impact['lat'] = airport_impact['Centroid'].map(cut_lat)","fc788b26":"drop_columns = [col for col in airport_impact.columns if not col in ['AggregationMethod', 'Version', \"Centroid\"]]\n\nairport_impact = airport_impact[drop_columns]","eb3bbd86":"airport_impact.info()","568c2d23":"airport_impact_unique = airport_impact[~airport_impact[[\"AirportName\"]].duplicated()].reset_index(drop=True)\nairport_impact_unique","203eb2ef":"df_geometry = airport_impact_unique[['AirportName', 'City', 'State',\n                                    'ISO_3166_2', 'Country', 'lat']]","c2627118":"def visualize_airport_map(df, zoom):\n    \n    lat_map = 30.038557\n    lon_map = 31.231781\n    \n    f = folium.Figure(width=1000, height=500)\n    m = folium.Map([lat_map,lon_map], zoom_start=zoom).add_to(f)\n    \n    for i in range(0,len(df)):\n        folium.Marker(location=[df['lat'][i],df['long'][i]],icon=folium.Icon(icon_color='Red', icon='plane', prefix='fa')).add_to(m)\n                                     \n    return m","bc50d14d":"airport_impact_map = visualize_airport_map(airport_impact_unique,1)","f56325d4":"airport_impact_map","ab05015e":"plt.figure(figsize = (10,5))\n\ng = sns.countplot(data = airport_impact, x = \"AirportName\",\n                 order = airport_impact['AirportName'].value_counts().index)\n\ng.set_xticklabels(g.get_xticklabels(), rotation = 90)\n\ng.set_title(\"Airport Records\")","818b5317":"df_month = pd.DataFrame(airport_impact[\"Date\"].map(lambda d: d.month).value_counts())\n\ndf_month = df_month.reset_index()\ndf_month = df_month.rename(columns = {'Date':'count', 'index':'month'})\n\ng = sns.barplot(data = df_month.reset_index(), y = 'count', x = 'month')\n\ng.set_xticklabels(g.get_xticklabels(), rotation = 90)\ng.set_title('Monthly Labels')","128bae90":"df_week = pd.DataFrame(airport_impact['Weekday'].value_counts())\n\ng = df_week.plot.pie(y = 'Weekday', figsize = (7,7))\n\ng.set_title(\"Weekly Records\")","783fb149":"gdf = gpd.GeoDataFrame(airport_impact_unique,\n                        geometry = gpd.points_from_xy(airport_impact_unique.long,\n                                    airport_impact_unique.lat))","caa7a6e5":"gdf.head()","ad320035":"world_map = gpd.read_file(gpd.datasets.get_path(\"naturalearth_lowres\"))\n\nworld_map.head()","174c0351":"g = world_map.plot(color = 'white', edgecolor = 'gray')\n\ng.set_title('World Map')","ac8df04e":"ax = world_map.plot(color = 'white', edgecolor = 'gray', figsize = (15, 10))\n\ng = gdf.plot(ax = ax, marker = '*', color = 'maroon', markersize = 50)\n\ng.set_title(\"Map with Markers\")\n\nplt.show()","d17c1be8":"fig, ax = plt.subplots(1, 1, figsize = (15, 10))\n\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes('right', size = '5%', pad = 0.1)\n\nworld_map.plot(ax = ax, color = 'white', edgecolor = 'gray')\ng = gdf.plot(column = 'PercentOfBaseline', ax = ax, markersize = 50,\n            legend = True, cax = cax)\ng.set_title(\"world map with \")\n\nplt.show()","89dbc690":"df_airport_weekday_mean = airport_impact[['AirportName', 'Weekday', 'PercentOfBaseline']].groupby(['AirportName', 'Weekday']).mean()\n\ndf_airport_weekday_mean = df_airport_weekday_mean.reset_index()\n\ndf_airport_weekday_mean = df_airport_weekday_mean.merge(df_geometry, on = \"AirportName\" )","e22277e9":"df_airport_weekday_mean.head()","50083555":"df_airport_all_mean = airport_impact.groupby(['AirportName']).mean()\n\ndf_airport_all_mean = df_airport_all_mean.reset_index()","2836f19a":"df_airport_all_mean.head()","c2991183":"fig = px.scatter_mapbox(df_airport_all_mean,\n                       lat = 'lat',\n                       lon = 'long',\n                       hover_name = 'AirportName',\n                       hover_data = ['PercentOfBaseline'],\n                        color = \"PercentOfBaseline\",\n                        zoom = 1,\n                        height = 600,\n                        size = \"PercentOfBaseline\",\n                        size_max = 30,\n                        opacity = 0.5,\n                        width = 1300)\n\n\nfig.update_layout(mapbox_style = 'stamen-terrain')\n\nfig.update_layout(margin = {'r': 0, 't': 0, 'l': 0, 'b': 0})\n\nfig.update_layout(title_text = \"Mean of Sunday Traffic\")\nfig.show()","dea220f6":"fig = px.scatter_mapbox(df_airport_all_mean,\n                       lat = 'lat',\n                       lon = 'long',\n                       hover_name = 'AirportName',\n                       hover_data = ['PercentOfBaseline'],\n                       color = 'PercentOfBaseline',\n                       zoom = 1,\n                       height = 600,\n                       size = 'PercentOfBaseline',\n                       size_max = 30,\n                       opacity = 0.5,\n                       width = 1300)\n\nfig.update_layout(mapbox_style = 'carto-positron')\nfig.update_layout(margin = {'r': 0, 't': 0, 'l': 0, 'b': 0})\nfig.show()","089c990a":"\ud83d\udcccHere We can use Folium to see the airports on a cool map. I love interactive maps.","02bb5632":"<a id=\"1\"><\/a>\n\n<h1 style=\"background-color:#33E4E2;font-family:newtimeroman;font-size:220%;text-align:center;border-radius:#33E4E2 12px 30px;\">\ud83d\udc40This is as far as ive gotten so far. Leave a thumbs up if you enjoy the work!","a2d260d3":"\ud83d\udcccAnd even further, with the weekly records(Thanks to us making this dataframe earlier).","60fca16c":"<a id=\"1\"><\/a>\n\n<h1 style=\"background-color:#33E4E2;font-family:newtimeroman;font-size:220%;text-align:center;border-radius:#33E4E2 12px 30px;\">\ud83d\udc40Average weekday airport reports","125faebb":"\ud83d\udcccGeopandas Example #3\nWorld map with added Legend and markers.","bf70b6ac":"\ud83d\udcccThe data is much easier to handle when there arent so many duplicated airport names. Crunching things down can save a lot of time.","b21c2817":"\ud83d\udcccTaking a quick peak at the data before we get in to preprocessing","b2fe724a":"\ud83d\udcccWe can even go a step further by checking reported for each month.","d35d5949":"\ud83d\udcccHere we can get some quick info, easier to pull this from .info rather than -->.head<--. We can see there are 11 columns, 7247 entries, and no missing values(yay).","8d205d19":"\ud83d\udcccGeopandas Example #2\nMap with markers using DF we created earlier.","91de9e1f":"\ud83d\udcccAs you can see, almost every single airport we have is located in North America. The only exceptions being Arturo Merino Ben\u00edtez International Airport in Santiago, Chile, and Inouye International Airport in Honolulu, Hawaii. Since we already know by looking at the map above that most airports are in north america, lets take a look at which airports have the most records in the dataset","09e89bd0":"<a id=\"1\"><\/a>\n\n<h1 style=\"background-color:#33E4E2;font-family:newtimeroman;font-size:220%;text-align:center;border-radius:#33E4E2 12px 30px;\">\ud83d\udc40Preprocessing","0e7e775f":"# <a id=\"1\"><\/a>\n# \n# <h1 style=\"background-color:#33E4E2;font-family:newtimeroman;font-size:220%;text-align:center;border-radius:#33E4E2 12px 30px;\">\ud83d\udc40Covid 19 has impacted most of everyones lives over the past 2 years. While meandering around the internet looking for an interesting read, something caught my eye. Atlanta's Hartsfield-Jackson Atlanta International Airport(has been consistantly one of the busiest airports in the world) has taken a massive hit in airport traffic. This lead me here, to kaggle, checking out some airport data. Lets take a look and see what we can come up with","e3a2cb53":"\ud83d\udcccGeopandas Example #1\nBasic World Map","bb9e4cd6":"<a id=\"1\"><\/a>\n\n<h1 style=\"background-color:#33E4E2;font-family:newtimeroman;font-size:220%;text-align:center;border-radius:#33E4E2 12px 30px;\">\ud83d\udc40Lets check out some mapping and visualization examples using Geopandas.","7d7d304f":"\ud83d\udcccCreating weekdays","d0a490ec":"<a id=\"1\"><\/a>\n\n<h1 style=\"background-color:#33E4E2;font-family:newtimeroman;font-size:220%;text-align:center;border-radius:#33E4E2 12px 30px;\">\ud83d\udc40Plotly Viz","a656deba":"\ud83d\udcccTaking a look at our data once more, you can see we are down to 9 columns. Above, we removed Aggregation Method, Version, and Centroid(we replaced it with long and lat).","3e94c043":"\ud83d\udcccLets check for any missing values"}}