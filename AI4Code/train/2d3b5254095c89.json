{"cell_type":{"0c15497d":"code","dbd55795":"code","0c227f8b":"code","3df68e38":"code","1e1b87bb":"code","aa9c70d5":"code","ebf8a5a3":"code","cd3deed1":"code","bd68db25":"code","17d68b40":"code","4877b577":"code","b52de677":"code","eced1ae7":"code","5f9567c5":"code","bd492ec5":"code","565e6064":"code","a6844eaf":"code","0eefa84b":"markdown","a7ed0b9b":"markdown","f64c2ef1":"markdown","bb752b69":"markdown","e8a67b41":"markdown","987d75f2":"markdown","0c76201b":"markdown","3b2c1540":"markdown","2a9458cd":"markdown","f25cf8de":"markdown","c0e44630":"markdown","9d9bfa31":"markdown","b7f2ff3b":"markdown"},"source":{"0c15497d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dbd55795":"df = pd.read_csv('\/kaggle\/input\/body-measurements-dataset\/Body Measurements _ original_CSV.csv')\ndf.head()","0c227f8b":"df.columns","3df68e38":"print('DF', df.shape)\nprint('DF without NA', df.dropna().shape)","1e1b87bb":"df = df.dropna()","aa9c70d5":"df.corr()","ebf8a5a3":"df[['ShoulderToWaist ', 'WaistToKnee ', 'Age']].corr()","cd3deed1":"import seaborn as sns\nsns.heatmap(df[['ShoulderToWaist ', 'WaistToKnee ', 'Age']].corr())","bd68db25":"import matplotlib.pyplot as plt\ndf[['ShoulderToWaist ', 'Age']].astype(float).plot(kind='scatter', x='ShoulderToWaist ', y='Age' , color='blue', alpha = 0.6)\nplt.xlabel('ShoulderToWaist')\nplt.ylabel('Age')\nplt.show()","17d68b40":"import matplotlib.pyplot as plt\ndf[['WaistToKnee ', 'Age']].astype(float).plot(kind='scatter', x='WaistToKnee ', y='Age' , color='green', alpha = 0.6)\nplt.xlabel('WaistToKnee')\nplt.ylabel('Age')\nplt.show()","4877b577":"X = df[['ShoulderToWaist ', 'WaistToKnee ']]\ny = df['Age']\nprint('X.shape', X.shape)\nprint('y.shape', y.shape)","b52de677":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\n\nprint('X_train.shape', X_train.shape)\nprint('y_train.shape', y_train.shape)","eced1ae7":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nreg = LinearRegression()\nreg.fit(X_train, y_train)\n\nprint('R2 score test', reg.score(X_test, y_test))\nprint('MSE', mean_squared_error(y_test, reg.predict(X_test)))","5f9567c5":"X = df[['Gender', 'HeadCircumference', 'ShoulderWidth', 'ChestWidth ',\n       'Belly ', 'Waist ', 'Hips ', 'ArmLength ', 'ShoulderToWaist ',\n       'WaistToKnee ', 'LegLength', 'TotalHeight']]\ny = df['Age']","bd492ec5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\n\nprint('X_train.shape', X_train.shape)\nprint('y_train.shape', y_train.shape)","565e6064":"import tensorflow as tf\n\ncallback = tf.keras.callbacks.EarlyStopping(\n    monitor='val_loss', \n    patience=30, \n    restore_best_weights=True, \n    mode='min'\n)\n\nneural_model = tf.keras.models.Sequential([\n  tf.keras.layers.Dense(32, activation='relu', input_shape=(536, 12)),\n  tf.keras.layers.Dense(768, activation='relu'),\n#  tf.keras.layers.Dense(512, activation='relu'),\n  tf.keras.layers.Dense(384, activation='relu'),\n#  tf.keras.layers.Dense(256, activation='relu'),\n  tf.keras.layers.Dense(48, activation='relu'),\n  tf.keras.layers.Dense(1, activation='linear')\n])\n\nneural_model.compile(loss='mean_squared_error', optimizer='adam')\nhistory = neural_model.fit(X_train, y_train, \n    validation_data=(X_test, y_test),\n    epochs=100, \n    callbacks=[callback]\n)\nneural_model.summary()\n\nimport matplotlib.pyplot as plt\nplt.plot(history.history['loss'], label='train')\nplt.plot(history.history['val_loss'], label='test')\nplt.legend()\nplt.show()","a6844eaf":"from sklearn.metrics import r2_score\n\ny_hat = neural_model.predict(X_test).flatten()\nprint('Neural MSE', mean_squared_error(y_test, y_hat))\nprint('R2 score', r2_score(y_test, y_hat))","0eefa84b":"# Predicting Age - Body Measurements Dataset\n\nReading the measurements file and showing their first 5 elements.","a7ed0b9b":"Plotting the relation between `WaistToKnee` and `Age` to see another perspective.","f64c2ef1":"## Scatter plots\n\nPlotting the relation between `ShoulderToWaist` and `Age` to see another perspective.","bb752b69":"Checking its shape","e8a67b41":"It looks like this relationship can be linear, let's try to use these two dimensions ","987d75f2":"Seems like there is strong correlation between `ShoulderToWaist` and `Age` together with `WaistToKnee` and `Age`.","0c76201b":"## Regression Neural Network\n\nCreating a regression neural network with an early stopping callback function to get the model of the best iteration.","3b2c1540":"Listing the columns of the dataset","2a9458cd":"Ploting this correlation to see it a little bit better.","f25cf8de":"It looks like the linear regression didn't go very well, probably due to the lack of linearity of the data, let's try to use a neural network to compensate that.","c0e44630":"## Remove N\/A\n\nSeems like there are some empty values on the dataset, we are going to remove them.","9d9bfa31":"## Linear Regression\n\nTraining a Linear Regression model to see how good it goes","b7f2ff3b":"## Correlation Matrix\n\nLooking at the correlation between different dimentions to the Age dimension."}}