{"cell_type":{"d1bac579":"code","be0c5ca9":"code","fa6b541e":"code","3e251ea7":"code","de47f8c7":"code","a52107d5":"code","d4b89fc4":"code","7b02be31":"code","b8ab6553":"code","82e2eb8e":"code","b607ddf4":"code","292c1834":"code","0d9fa139":"code","4e09ff9d":"code","2dfd53e6":"code","e2ec60b5":"code","dd63ed78":"code","61f24ed1":"code","1db66989":"code","b5d6dbaa":"code","fde9d912":"code","a6ad98bc":"code","a80095e8":"code","db568a02":"code","ef9a0c58":"code","c0dd7ccb":"code","da28c725":"code","85d62219":"code","2897b9e2":"code","4ab826d5":"code","aac9bb53":"code","b22cdebd":"code","8c349985":"code","a2e9ae1c":"code","13e4c85c":"code","77171834":"code","6e755960":"code","8d43fe6f":"code","147ca8ce":"code","0f7b59d5":"code","19767a4b":"code","298f87f5":"code","7775f373":"code","c83a47b6":"code","2ac60110":"code","b078ccd3":"code","4e027937":"code","98b92a01":"code","b2c431be":"code","1e93a9b2":"markdown","2db2c5ac":"markdown","12d94538":"markdown","f99fc2be":"markdown","e0a753f9":"markdown","8e8943a2":"markdown","04b16b49":"markdown","95000f71":"markdown","1ed7ad82":"markdown","104ced7e":"markdown","7777f58b":"markdown","a4296533":"markdown","b29246c8":"markdown","f92757e9":"markdown","acdd5581":"markdown","d8260f03":"markdown","3d046f6d":"markdown","1273da72":"markdown","f810aa1e":"markdown","f466c20c":"markdown","a7a2ceb4":"markdown","ca2b8a1c":"markdown","ff00f120":"markdown","84c90590":"markdown","9630690b":"markdown","4f766b83":"markdown","d7272d3b":"markdown","da91ca2e":"markdown","26e9f4fb":"markdown","65cae8cf":"markdown","05dadfaa":"markdown","b57bbd13":"markdown","a76f2543":"markdown","aedf6d95":"markdown","3bf8d57b":"markdown","ceba5664":"markdown","2706214e":"markdown"},"source":{"d1bac579":"import pandas as pd\ncs=pd.read_csv(r'\/kaggle\/input\/coursera-course-dataset\/coursea_data.csv')","be0c5ca9":"cs.describe(include= 'all')","fa6b541e":"!pip install langdetect\nimport langdetect\ncs['Language'] = cs['course_title'].apply(lambda x: langdetect.detect(x))\ncs['Language'].value_counts()","3e251ea7":"cs['enrolled'] = cs['course_students_enrolled'].map(lambda x: str(x)[:-1])\n","de47f8c7":"cs[\"enrolled\"] = pd.to_numeric(cs[\"enrolled\"])","a52107d5":"cs[\"enrolled\"]=cs[\"enrolled\"]*1000","d4b89fc4":"cs[\"enrolled\"].describe()","7b02be31":"import plotly.express as px\nfig = px.pie(cs, values='enrolled', names='course_difficulty')\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig.show()","b8ab6553":"import plotly.express as px\nfig = px.scatter(cs, x=\"course_rating\", y=\"enrolled\", color=\"course_difficulty\",\n                 size='course_rating', hover_data=['enrolled'])\nfig.show()\n","82e2eb8e":"import plotly.express as px\nfig = px.box(cs, x=\"course_difficulty\", y=\"enrolled\",color=\"Language\")\nfig.update_traces(quartilemethod=\"exclusive\")\nfig.show()\n","b607ddf4":"from nltk.corpus import stopwords\nstop_words = stopwords.words('english')\nfrom wordcloud import WordCloud\ncs['course_title_new'] = cs['course_title'].map(lambda x: x.split())\ncs['course_title_new']=cs['course_title_new'].apply(lambda x: [item for item in x if item not in stop_words])\ncs['course_title_new']=cs['course_title_new'].astype(str)","292c1834":"title_count = ','.join(list(cs['course_title_new'].values))","0d9fa139":"wordcloud = WordCloud(background_color=\"white\", max_words=100, contour_width=3, contour_color='steelblue')\nwordcloud.generate(title_count)\nwordcloud.to_image()","4e09ff9d":"cs[\"python\"]= cs[\"course_title\"].str.find(\"Python\") ","2dfd53e6":"cs.loc[cs['python'] == -1, 'python_yes'] = 0\ncs.loc[cs['python'] > -1, 'python_yes'] = 1","e2ec60b5":"unv_python=cs.groupby(['course_organization'],as_index=False).python_yes.sum()\nunv_python","dd63ed78":"unv_python.sort_values(by='python_yes',ascending=False)","61f24ed1":"import re\npatterns=['AI','Artificial Intelligence','Machine Learning','Data Science','Analytics','Neural Networks','Random Forest',\n          'Deep Learning','Reinforcement Learning','Pattern Recognition','Feature Engineering','Kaggle','Data Visualization']\nultimate_pattern = '|'.join(patterns)\ndef Clean_names(x):\n    if re.search(ultimate_pattern, x):\n        return 1\n    else: \n        return 0\ncs['ML_yes'] = cs['course_title'].apply(Clean_names) \n","1db66989":"cs['ML_yes'].sum()","b5d6dbaa":"unv_ml=cs.groupby(['course_organization'],as_index=False).ML_yes.sum()\nunv_ml.sort_values(by='ML_yes',ascending=False)","fde9d912":"ds_cs=cs[cs['ML_yes']==1]","a6ad98bc":"import plotly.express as px\nfig = px.bar(ds_cs, x=\"course_organization\", y=\"enrolled\",color=\"Language\")\nfig.show()\n","a80095e8":"import plotly.express as px\nfig = px.box(ds_cs, x=\"course_organization\", y=\"course_rating\",color=\"course_difficulty\")\nfig.update_traces(quartilemethod=\"exclusive\")\nfig.show()\n","db568a02":"unv_sp=cs.groupby(['course_organization','course_Certificate_type'],as_index=False).course_rating.mean()\nunv_sp.sort_values(by='course_rating',ascending=False)","ef9a0c58":"import re\npatterns2=['Business','Management','Leadership','Finance','Accounts','Consulting','Administration']\nultimate_pattern2 = '|'.join(patterns2)\ndef Clean_names(x):\n    if re.search(ultimate_pattern2, x):\n        return 1\n    else: \n        return 0\ncs['B_yes'] = cs['course_title'].apply(Clean_names) ","c0dd7ccb":"B_cs=cs[cs['B_yes']==1]","da28c725":"import plotly.express as px\nfig = px.bar(B_cs, x=\"course_organization\", y=\"enrolled\",color=\"Language\")\nfig.show()\n","85d62219":"!pip install distance\nimport distance\njd = lambda x, y: 1 - distance.jaccard(x, y)\nsim_unv_course=ds_cs['course_organization'].apply(lambda x: ds_cs['course_title'].apply(lambda y: jd(x, y)))","2897b9e2":"sim_unv_course","4ab826d5":"import numpy as np\n(sim_unv_course.values).trace()","aac9bb53":"cs['enrolled_cat'] = pd.cut(cs['enrolled'].astype(int), 5)","b22cdebd":"from sklearn.preprocessing import LabelEncoder\nlabel = LabelEncoder()\ncs['enrolled_cat']=cs['enrolled_cat'].apply(LabelEncoder().fit_transform)\n","8c349985":"import plotly.express as px\nfig = px.box(cs, x=\"enrolled_cat\", y=\"course_rating\",color=\"course_difficulty\")\nfig.update_traces(quartilemethod=\"exclusive\")\nfig.show()\n","a2e9ae1c":"cs_sub=cs[['course_Certificate_type','course_difficulty','enrolled_cat']]","13e4c85c":"cs_sub","77171834":"from sklearn.preprocessing import LabelEncoder\nlabel = LabelEncoder()\ncs_sub=cs_sub.apply(LabelEncoder().fit_transform)\n","6e755960":"cs_sub","8d43fe6f":"import xgboost as xgb\n","147ca8ce":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(cs_sub, cs['course_rating'], test_size=0.2)","0f7b59d5":"\nxg_reg = xgb.XGBRegressor(objective ='reg:linear', colsample_bytree = 0.3, learning_rate = 0.1,\n                max_depth = 5, alpha = 10, n_estimators = 10)\nmodel = xg_reg.fit(X_train, Y_train)\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\n\npreds = xg_reg.predict(X_test)\nrmse = np.sqrt(mean_squared_error(Y_test, preds))\nprint(\"RMSE: %f\" % (rmse))","19767a4b":"import os\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin'","298f87f5":"import matplotlib.pyplot as plt\n\nxgb.plot_tree(xg_reg,num_trees=0)\nplt.rcParams['figure.figsize'] = [10, 6]\nplt.show()","7775f373":"dtrain = xgb.DMatrix(X_train,Y_train)\nparams = {\"objective\":\"reg:linear\",'colsample_bytree': 0.3,'learning_rate': 0.1,\n                'max_depth': 5, 'alpha': 10}\nxg_reg = xgb.train(params=params, dtrain=dtrain, num_boost_round=10)","c83a47b6":"import matplotlib.pyplot as plt\n\nxgb.plot_tree(xg_reg,num_trees=9)\nplt.rcParams['figure.figsize'] = [50, 10]\nplt.show()","2ac60110":"from sklearn.svm import SVR\nregressor = SVR(kernel = 'rbf')\nregressor.fit(X_train, Y_train)","b078ccd3":"y_pred = regressor.predict(X_test)\nrmse = np.sqrt(mean_squared_error(Y_test, y_pred))\nprint(\"RMSE: %f\" % (rmse))","4e027937":"error=y_pred-Y_test","98b92a01":"error","b2c431be":"min(error),max(error),plt.hist(error)","1e93a9b2":"Install and set up environment for Graphviz","2db2c5ac":"# Jaccard Distamce, crude measure of how close text are related :Organization vs course title","12d94538":"# Using langdetect function to see what are available languages for courses","f99fc2be":"# pie chart for difficulty % using plotly","e0a753f9":"# Lets make some ML models to predict ratings using SVM,XGBOOST","8e8943a2":"Here we are searching for keywords in course title using re and creating a new column, We will then see which institutes are providing maximum courses.","04b16b49":"# Exploring text in course title using NLTK and wordcloud","95000f71":"# Ratings variations of AI\/ML\/DS organization courses ","1ed7ad82":"We have our top three: John hopkins, deeplearning.ai, and IBM","104ced7e":"# Courses on Python.","7777f58b":"# making categories of enrollment to see if something different comes up\n\n","a4296533":"# Exploring top enrolled courses in DS\/ML\/AI","b29246c8":"This RMSE is way better than XG boost suggesting SVM has fitted data good.","f92757e9":"# Let explore difficulty vs enrollment vs language using boxplot","acdd5581":"More analysis can be done considering ratings to be ordinal ,more feature engineering and exploring more techniques.","d8260f03":"# Does more enrollment leads to better ratings?","3d046f6d":"# Top rated course and speciliazation","1273da72":"# Converting k in enrollment to 1000 for better analysis\/aggregation","f810aa1e":"The trees are not buiding up suggesting that XGboost hasnt got the enough learning rate and depth of tree as specified in parameters","f466c20c":"Python, Data are expected. We also have business, introductionand fundamentals are expected as majority of courses are beginners. We also Machine Learning and Data Science in good numbers.","a7a2ceb4":"Median rating for high enrolled courses moves toward average: Law of averages, less enrolled categories 0 have near 5 ratings for few courses.One less enrolled courses was poorly rated as well.","ca2b8a1c":"The scatter graph shows enrollment and ratings are not linearly related, the bottom right where high desnity of observations are present do not have very high enrollments.","ff00f120":"Lets see organisations providing python course.","84c90590":"The top three B schools by enrollment are Univeristy of Penn, UC Irvine, Macquaire(this has diversity in langauges too)","9630690b":"We see majority of courses are in English followed by distant second spanish, third is french, and 4th is italian, 5th is german and russian","4f766b83":"# Using Support Vector Machines","d7272d3b":"We used Radial Basis Function as Kernel as ratings and other variables have non linear relationship. We didnt do hyperparameter tuning and went with defaults.","da91ca2e":"Key observations from boxplot:\n1. Only very few advanced courses and all are in English.\n2. The Italian beginner courses have very high enrollemt variations, one course has over 800K enrollemnts.\n3. English based courses have almost outliers in every category suggesting there are popular courses across difficulty levels.\n4. In intermediate level dutch has very high number of enrollments.","26e9f4fb":"# XG boost","65cae8cf":"The trace of jaccard distance matrix of DS\/AI\/ML suggest that course title and university are have high occurence together. 27\/83 suggest ~ 33% of similarity.","05dadfaa":"# Reading the file","b57bbd13":"Encoding the difficulty, enrollement category and course type to predict ratings","a76f2543":"\nError are nearly normally distributed having less variations and one outlier , the SVM has fitted data better than XG boost.","aedf6d95":"# Lets see business courses as well ","3bf8d57b":"# In this notebook we will learn use of:\n1. Plotly : One of the best and popular EDA libraries in python\/R\n2. langdetect library: to detect what language is present in text.\n3. NLTK and wordcloud : Popular libraries for text mining and creating word cloud\n4. RE: The regular expression library which gives us tools to search, replace and combine patterns in texts, we will explore few feratures in this notebook.\n5. Scikit learn and Xgboost library to try out predicting ratings based on enrolled certificate type and course difficulty","ceba5664":"# Lets see courses on ML\/AI\/DS using regular expression library","2706214e":"The RMSE 1.4 out of 5 scale rating is very high, probably our tree aren't getting information to split up, we chan check this using reg plot using gpahviz and matplotlib"}}