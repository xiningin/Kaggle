{"cell_type":{"9b6e4ac9":"code","7de70e15":"code","36564612":"code","23492a68":"code","3dcef37f":"code","9f127b57":"code","718c2095":"code","b03fca42":"code","be1caa7b":"code","a9fb5256":"code","c114bdb3":"code","a6a75318":"code","74d2a642":"code","e62d6b79":"code","3d8cd157":"code","62933aac":"code","cb08afb6":"code","1a819eb2":"code","2e3c8928":"code","c41f37ef":"code","d280f124":"code","94788b6d":"markdown","86855199":"markdown","65fbe3af":"markdown","692dfba3":"markdown","49f1005f":"markdown","e80006b6":"markdown","13ec43f4":"markdown","de612b0b":"markdown","800cb065":"markdown","f4fc032f":"markdown","b731e5c3":"markdown","28fc8a20":"markdown","20be3c86":"markdown","d0897ff3":"markdown"},"source":{"9b6e4ac9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7de70e15":"%%capture\n!pip install chart-studio","36564612":"# Importing libraries\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight') \n# Above is a special style template for matplotlib, highly useful for visualizing time series data\n%matplotlib inline\nfrom pylab import rcParams\nfrom chart_studio import plotly as py\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport statsmodels.api as sm\nfrom numpy.random import normal, seed\nfrom scipy.stats import norm\nfrom statsmodels.tsa.arima_model import ARMA\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.arima_process import ArmaProcess\nfrom statsmodels.tsa.arima_model import ARIMA\nimport math\nfrom sklearn.metrics import mean_squared_error\nprint(os.listdir(\"..\/input\"))","23492a68":"facebook = pd.read_csv('..\/input\/facebook-latest-stock-data-18-may12-to-13-oct21\/Facebook_Latest_Stock_Data.csv', index_col='Date', parse_dates=['Date'])\nfacebook.head()","3dcef37f":"facebook.tail(10)","9f127b57":"facebook.isna().sum()","718c2095":"facebook['2012':'2021'].plot(subplots=True, figsize=(10,12))\nplt.title('Facebook stock attributes from 2012 to 2021')\nplt.savefig('stocks.png')\nplt.show()","b03fca42":"facebook['Change'] = facebook.High.div(facebook.High.shift())\nfacebook['Change'].plot(figsize=(20,8))","be1caa7b":"facebook['Return'] = facebook.Change.sub(1).mul(100)\nfacebook['Return'].plot(figsize=(20,8))\n\n","a9fb5256":"facebook.High.pct_change().mul(100).plot(figsize=(20,6)) # Another way to calculate returns","c114bdb3":"facebook.High.diff().plot(figsize=(20,6))","a6a75318":"# OHLC chart of October 2021\ntrace = go.Ohlc(x=facebook['10-2021'].index,\n                open=facebook['10-2021'].Open,\n                high=facebook['10-2021'].High,\n                low=facebook['10-2021'].Low,\n                close=facebook['10-2021'].Close)\ndata = [trace]\niplot(data, filename='simple_ohlc')\n\n","74d2a642":"# OHLC chart of 2021\ntrace = go.Ohlc(x=facebook['2021'].index,\n                open=facebook['2021'].Open,\n                high=facebook['2021'].High,\n                low=facebook['2021'].Low,\n                close=facebook['2021'].Close)\ndata = [trace]\niplot(data, filename='simple_ohlc')","e62d6b79":"# OHLC chart from 2012 to 2021\ntrace = go.Ohlc(x=facebook.index,\n                open=facebook.Open,\n                high=facebook.High,\n                low=facebook.Low,\n                close=facebook.Close)\ndata = [trace]\niplot(data, filename='simple_ohlc')\n\n","3d8cd157":"\n\n# Candlestick chart of October 2021\ntrace = go.Candlestick(x=facebook['10-2021'].index,\n                open=facebook['10-2021'].Open,\n                high=facebook['10-2021'].High,\n                low=facebook['10-2021'].Low,\n                close=facebook['10-2021'].Close)\ndata = [trace]\niplot(data, filename='simple_candlestick')\n","62933aac":"# Candlestick chart of 2021\ntrace = go.Candlestick(x=facebook['2021'].index,\n                open=facebook['2021'].Open,\n                high=facebook['2021'].High,\n                low=facebook['2021'].Low,\n                close=facebook['2021'].Close)\ndata = [trace]\niplot(data, filename='simple_candlestick')\n\n","cb08afb6":"# Candlestick chart of 2012-2021\ntrace = go.Candlestick(x=facebook.index,\n                open=facebook.Open,\n                high=facebook.High,\n                low=facebook.Low,\n                close=facebook.Close)\ndata = [trace]\niplot(data, filename='simple_candlestick')\n\n","1a819eb2":"# Autocorrelation of closing price of facebook stocks\nplot_acf(facebook[\"Close\"],lags=25)\nplt.show()","2e3c8928":"# Partial Autocorrelation of closing price of facebook stocks\nplot_pacf(facebook[\"Close\"],lags=25)\nplt.show()\n\n","c41f37ef":"# Let's take facebook stocks High for this\nfacebook[\"High\"].plot(figsize=(16,8))","d280f124":"# Now, for decomposition.\nrcParams['figure.figsize'] = 11, 9\ndecomposed_facebook_volume = sm.tsa.seasonal_decompose(facebook[\"High\"],freq=360) # The frequncy is annual\nfigure = decomposed_facebook_volume.plot()\nplt.show()\n","94788b6d":"\n# Autocorrelation and Partial Autocorrelation\n\n*     Autocorrelation - The autocorrelation function (ACF) measures how a series is correlated with itself at different lags.\n    \n*     Partial Autocorrelation - The partial autocorrelation function can be interpreted as a regression of the series against its past lags. The terms can be interpreted the same way as a standard linear regression, that is the contribution of a change in that particular lag while holding others constant.\n\nSource: Quora\n","86855199":"Here, only 0th, 1st and 19th lag are statistically significant.","65fbe3af":"# Autocorrelation","692dfba3":"# OHLC charts\n**An OHLC chart is any type of price chart that shows the open, high, low and close price of a certain time period. Open-high-low-close Charts (or OHLC Charts) are used as a trading tool to visualise and analyse the price changes over time for securities, currencies, stocks, bonds, commodities, etc. OHLC Charts are useful for interpreting the day-to-day sentiment of the market and forecasting any future price changes through the patterns produced.**\n\nCheck this video to know understand the chart : [OHLC Charts Explained](https:\/\/www.youtube.com\/watch?v=zF3AGO0CvpY)\n","49f1005f":"## Percent change","e80006b6":"# Statistics","13ec43f4":"# Candlestick charts\n* Candlestick charts are used by traders to determine possible price movement based on past patterns.\n* Candlesticks are useful when trading as they show four price points (open, close, high, and low) throughout the period of time the trader specifies.\n\nTo understand the chart,check this video: [Understanding Candlestick Charts for Beginners](https:\/\/www.youtube.com\/watch?v=1rwVV_8uUxc)\n","de612b0b":"# Reference:\n\n* https:\/\/www.kaggle.com\/thebrownviking20\/everything-you-can-do-with-a-time-series\/notebook\n* https:\/\/www.investopedia.com\/articles\/active-trading\/092315\/5-most-powerful-candlestick-patterns.asp\n* https:\/\/www.kaggle.com\/taronzakaryan\/predicting-stock-price-using-lstm-model-pytorch\/notebook\n* https:\/\/www.kaggle.com\/faressayah\/stock-market-analysis-prediction-using-lstm\/notebook\n* https:\/\/www.kaggle.com\/raoulma\/ny-stock-price-prediction-rnn-lstm-gru\/notebook\n* https:\/\/www.kaggle.com\/pierpaolo28\/stock-market-analysis-and-time-series-prediction\/notebook\n* https:\/\/www.kaggle.com\/parulpandey\/getting-started-with-time-series-using-pandas","800cb065":"# Visualizing the datasets","f4fc032f":"# Partial Autocorrelation","b731e5c3":"# Absolute change in successive rows","28fc8a20":"Trends, seasonality and noise\n\nThese are the components of a time series\n\n*     Trend - Consistent upwards or downwards slope of a time series\n*     Seasonality - Clear periodic pattern of a time series(like sine funtion)\n*     Noise - Outliers or missing values\n","20be3c86":"Stock returns","d0897ff3":"# Time series decomposition and Random walks"}}