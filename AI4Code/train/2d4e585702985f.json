{"cell_type":{"b4a6414d":"code","5e7391e0":"code","7607c650":"code","8fff3bf8":"code","fd33151b":"code","85133e0a":"code","5b931da2":"code","47b3d2fd":"code","86fdc58a":"code","22feed08":"code","e7eb21aa":"code","294a6808":"code","77af3c63":"code","d87a5bed":"code","87bcdf2f":"code","dd175d65":"code","2427e74e":"code","17adfaa6":"code","283f97cf":"code","968c4873":"code","290224d3":"code","922ffab1":"code","c27644c2":"code","a7719b50":"code","5fb089cd":"code","16e5076e":"code","a8694642":"code","16821c50":"code","d32a5dc4":"code","2e647561":"code","ccd96f5f":"code","a879d642":"code","56926d5e":"code","c6e3c17d":"code","5dd9c35b":"code","a56a5789":"code","730a895d":"code","f0ab95f8":"code","1b415c23":"markdown","5dfab96f":"markdown","362416a8":"markdown","d695e057":"markdown"},"source":{"b4a6414d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.model_selection import cross_val_score","5e7391e0":"df = pd.read_csv(\"..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv\")","7607c650":"df.head()","8fff3bf8":"# Drop the Loan_ID column as it is of no use for model.\ndata = df.drop(columns=[\"Loan_ID\"])","fd33151b":"data.info()","85133e0a":"data.columns","5b931da2":"categorical_data = [i for i in data.columns if data[i].dtype==\"object\"]\ncategorical_data","47b3d2fd":"numerical_data = [i for i in data.columns if data[i].dtype!=\"object\"]\nnumerical_data","86fdc58a":"discrete_numerical_data = [i for i in numerical_data if len(data[i].unique())<16]\ndiscrete_numerical_data","22feed08":"continuous_numerical_data = [i for i in numerical_data if len(data[i].unique())>=16]\ncontinuous_numerical_data","e7eb21aa":"# For Categotical Data.\nfor i in categorical_data:\n    data[i].value_counts().plot(kind=\"bar\")\n    plt.xlabel(i)\n    plt.ylabel(\"Counts\")\n    plt.show()","294a6808":"# For Discrete Numerical Data\nfor i in discrete_numerical_data:\n    data[i].value_counts().plot(kind=\"bar\")\n    plt.xlabel(i)\n    plt.ylabel(\"Counts\")\n    plt.show()","77af3c63":"# For Continuous Numerical Data\nfor i in continuous_numerical_data:\n    sns.histplot(data[i])\n    plt.xlabel(i+\" Distribution\")\n    plt.show()","d87a5bed":"# Check for outliers(Since the above distribution graphs are skewed, hence outliers are present\nfor i in continuous_numerical_data:\n    sns.boxplot(data = data, y=i)\n    plt.show()","87bcdf2f":"# From the above box plot we can know that outliers are present, hence we need to handle missing values by replacing with median value.","dd175d65":"sns.heatmap(data.isnull(), cbar=False)","2427e74e":"# Since there are null values in categorical values and discrete numerical values, so we replace them with mode of that feature.\nfor i in categorical_data+discrete_numerical_data:\n    data[i] = data[i].fillna(data[i].mode().iloc[0])","17adfaa6":"# Now We replace the loan amount column from numerical category.\ndata[\"LoanAmount\"] = data[\"LoanAmount\"].fillna(data[\"LoanAmount\"].median())","283f97cf":"sns.heatmap(data.isnull(), cbar=False)","968c4873":"# Correlation Matrix\ndata.corr()","290224d3":"sns.heatmap(data.corr())","922ffab1":"# We will encode the categorical data using label Encoder.\nle = preprocessing.LabelEncoder()\n\nfor i in categorical_data:\n    data[i] = le.fit_transform(data[i])","c27644c2":"data.head()","a7719b50":"# If we want to apply log transformation for all the numerical variables, then majority of CoapplicantIncome values are 0.\n# Hence we will create a new variable called TotalIncome = ApplicantIncome + CoapplicantIncome.\n\ndata[\"TotalIncome\"] = data[\"ApplicantIncome\"]+data[\"CoapplicantIncome\"]","5fb089cd":"data.drop([\"ApplicantIncome\",\"CoapplicantIncome\"],axis=1,inplace=True)","16e5076e":"continuous_numerical_data","a8694642":"continuous_numerical_data.remove(\"ApplicantIncome\")\ncontinuous_numerical_data.remove(\"CoapplicantIncome\")\ncontinuous_numerical_data.append(\"TotalIncome\")","16821c50":"continuous_numerical_data","d32a5dc4":"# Log Transformation\nfor i in continuous_numerical_data+[\"Loan_Amount_Term\"]:\n    data[i] = np.log(data[i])","2e647561":"data.head()","ccd96f5f":"# Splitting the data.","a879d642":"X,y = data.drop(columns = \"Loan_Status\"),data[\"Loan_Status\"]","56926d5e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","c6e3c17d":"# Logistic Regression\nmodel = LogisticRegression()","5dd9c35b":"model.fit(X_train,y_train)","a56a5789":"print(\"Accuracy of Logistic Regression Model is \",model.score(X_test,y_test)*100)","730a895d":"score = cross_val_score(model, X, y, cv=5)\nprint(\"Cross validation is\",np.mean(score)*100)","f0ab95f8":"import pickle\n# open a file, where you want to store the data\nfile = open('model.pkl', 'wb')\n\n# dump information to that file\npickle.dump(model, file)","1b415c23":"## Model Building","5dfab96f":"## Feature Engineering","362416a8":"## Data Visualisation","d695e057":"## Handling Missing Values"}}