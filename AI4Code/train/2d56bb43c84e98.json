{"cell_type":{"11a0d63e":"code","ffe97a61":"code","22681da7":"code","9aee5950":"code","0495a0d1":"code","d8cf6d39":"code","8b07cf13":"code","00bef1b0":"code","9581ce84":"markdown"},"source":{"11a0d63e":"import numpy as np\nimport pandas as pd","ffe97a61":"# connect to sqlite database\nimport sqlite3\nconn = sqlite3.connect(\"..\/input\/FPA_FOD_20170508.sqlite\", detect_types=sqlite3.PARSE_DECLTYPES)","22681da7":"# read all fires in the continental US (excluding Alaska) from 2015 into dataframe\ndf = pd.read_sql_query(\"SELECT LATITUDE, LONGITUDE, FIRE_SIZE_CLASS, DISCOVERY_DOY, \\\n    CONT_DOY from Fires WHERE FIRE_YEAR=2015 AND CONT_DOY IS NOT NULL \\\n    AND DISCOVERY_DOY <= CONT_DOY \\\n    AND DISCOVERY_DOY IS NOT NULL AND LATITUDE IS NOT NULL \\\n    AND LONGITUDE IS NOT NULL \\\n    AND LATITUDE BETWEEN 25 AND 50 \\\n    AND LONGITUDE BETWEEN -125 AND -67;\",conn)","9aee5950":"# this function returns the location and size of wildfires active on day X of the year\ndef active_fires(doy):\n    return df[(df['DISCOVERY_DOY'] <= doy) & (df['CONT_DOY'] >= doy)]","0495a0d1":"# import some libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom mpl_toolkits.basemap import Basemap\nfrom matplotlib import animation","d8cf6d39":"# building the animation. This code will show a static image. The animation needs to be saved first and will then show correctly.\n# The animation will show for each day all the wildfires that were active during that day. The markers are sized to distinguish \n# smaller fires from bigger ones. \nfig = plt.figure(figsize=(18, 16))\n    \nmap = Basemap(projection='cyl',llcrnrlat=25,urcrnrlat=50,\\\n            llcrnrlon=-125,urcrnrlon=-67)\nmap.drawcoastlines(linewidth=0.25)\nmap.drawcountries(linewidth=0.25)\nmap.drawstates(linewidth=0.25)\nmap.drawmapboundary()\nmap.fillcontinents(color='lightgray', zorder=1)\nscat = map.scatter([], [])\nday_label = plt.text(-124,26,'Day 1',fontsize=15)\ndef anim(frame_number):\n    day = frame_number+1\n    fires_this_day = active_fires(day)\n    xs, ys = map(fires_this_day['LONGITUDE'], fires_this_day['LATITUDE'])\n    data = np.dstack((xs, ys))[0]\n    scat.set_color('r')\n    scat.set_alpha(0.5)\n    scat.set_zorder(10)\n    scat.set_sizes(fires_this_day['FIRE_SIZE_CLASS'].map({'A':1,'B':2,'C':4,'D':8,'E':16,'F':32,'G':64}))\n    scat.set_offsets(data)\n    day_label.set_text(\"Day {}\".format(day))\n    return scat,\n\nani = animation.FuncAnimation(fig, anim, interval=100, frames=365, repeat=False, blit=True)\nplt.title('US Wildfires during the year 2015')\nplt.show()","8b07cf13":"# save the animation. this can take some time\nani.save('animation.gif', writer='imagemagick', fps=3)","00bef1b0":"# and display the final animation\nfrom IPython.display import HTML\nimport io\nimport base64\n\nfilename = 'animation.gif'\n\nvideo = io.open(filename, 'r+b').read()\nencoded = base64.b64encode(video)\nHTML(data='''<img src=\"data:image\/gif;base64,{0}\" type=\"gif\" style=\"border-top:=100px; border-bottom:-100px;\"\/>'''.format(encoded.decode('ascii')))","9581ce84":"# Animated map of US wildfires\nI wanted to test animated graphs and show how wildfires developed over the year. I got some good ideas from this [kernel](https:\/\/www.kaggle.com\/pavelevap\/global-warming-confirmed-basemap-animation). So in this kernel I want to create an animated map that shows how wildfires spread over the continent in 2015 with a frame for each day of the year.\n\nThe dataset contains the longitude and latitude for each wildfire as well as the day of the year when the fire was discovered and when it was contained. So there's no much feature engineering to do, other than make sure the values are valid.\n\nTake a look at the final animation at the end of this notebook. Super interesting to see how the fires start on the east coast and then in the second half of the year how the west coast is troubled by wild fires."}}