{"cell_type":{"d309d00a":"code","3c64949d":"code","1a663da0":"code","495583fe":"code","100a085e":"code","9d2f5d26":"code","ef568587":"code","ad88c9bf":"code","cfc8c677":"code","15193169":"code","3f87c4c0":"code","0951f867":"code","91429e7b":"code","d43bff84":"code","e74d9cd1":"code","ae02d77f":"code","7d0bf75e":"code","058bc2bc":"code","e766d88c":"code","af9925d4":"code","80df11f4":"code","6a745f30":"code","02728726":"code","46143484":"code","34452fd8":"code","6c88e658":"code","0cfa0599":"markdown","88060b80":"markdown","e489a0d8":"markdown","9092ca74":"markdown","2ead25fd":"markdown","883f2790":"markdown","93579f0e":"markdown","71a2f434":"markdown","35ca1628":"markdown","6b54c77b":"markdown","ea11d242":"markdown","94380254":"markdown","e73600dd":"markdown","b8d53e76":"markdown","095843ba":"markdown","ea9504c6":"markdown","1b92be9d":"markdown","64d27d79":"markdown","8c8c2147":"markdown","3acca882":"markdown","96fa1487":"markdown","348f4386":"markdown","8e0d3569":"markdown","dd18f541":"markdown","f3305d20":"markdown","90e28713":"markdown","ff2d9a47":"markdown","5a580da6":"markdown","85066e80":"markdown","c430aeb0":"markdown","d1abb4f1":"markdown","0df5c4d5":"markdown","2cb25089":"markdown","7d5b1e23":"markdown","386b827a":"markdown","19519a6d":"markdown","6a46ec42":"markdown","966d4ad2":"markdown"},"source":{"d309d00a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly import tools\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","3c64949d":"data=pd.read_csv(\"..\/input\/mushrooms.csv\")","1a663da0":"data.info()","495583fe":"data.head()","100a085e":"values={\"b\":\"bell\",\"c\":\"conical\",\"x\":\"convex\",\"f\":\"flat\",\"k\":\"knobbed\",\"s\":\"sunken\"}\ndata[\"cap-shape\"]=data[\"cap-shape\"].replace(values)\nvalues2={\"f\": \"fibrous\", \"g\": \"grooves\",\"y\":\"scaly\",\"s\": \"smooth\"}\ndata[\"cap-surface\"]=data[\"cap-surface\"].replace(values2)\nvalues3={\"n\":\"brown\",\"b\":\"buff\",\"c\":\"cinnamon\",\"g\":\"gray\",\"r\":\"green\",\"p\":\"pink\",\"u\":\"purple\",\"e\":\"red\",\"w\":\"white\",\"y\":\"yellow\"}\ndata[\"cap-color\"]=data[\"cap-color\"].replace(values3)\nvalues4={\"a\":\"almond\",\"l\":\"anise\",\"c\":\"creosote\",\"y\":\"fishy\",\"f\":\"foul\",\"m\":\"musty\",\"n\":\"none\",\"p\":\"pungent\",\"s\":\"spicy\"}\ndata[\"odor\"]=data[\"odor\"].replace(values4)\nvalues5={\"a\":\"attached\",\"f\":\"free\"}\ndata[\"gill-attachment\"]=data[\"gill-attachment\"].replace(values5)\nvalues6={\"c\":\"close\",\"w\":\"crowded\"}\ndata[\"gill-spacing\"]=data[\"gill-spacing\"].replace(values6)\nvalues7={\"b\":\"broad\",\"n\":\"narrow\"}\ndata[\"gill-size\"]=data[\"gill-size\"].replace(values7)\nvalues8={\"k\":\"black\",\"b\":\"buff\",\"n\":\"brown\",\"h\":\"chocolate\",\"g\":\"gray\",\"r\":\"green\",\"o\":\"orange\",\"p\":\"pink\",\"u\":\"purple\",\"e\":\"red\",\"w\":\"white\",\"y\":\"yellow\"}\ndata[\"gill-color\"]=data[\"gill-color\"].replace(values8)\nvalues9={\"t\":\"tapering\",\"e\":\"enlarging\"}\ndata[\"stalk-shape\"]=data[\"stalk-shape\"].replace(values9)\nvalues10={\"b\":\"bulbous\",\"c\":\"club\",\"e\":\"equal\",\"z\":\"rhizomorphs\",\"r\":\"rooted\",\"?\":\"missing\"}\ndata[\"stalk-root\"]=data[\"stalk-root\"].replace(values10)\nvalues11={\"s\":\"smooth\",\"k\":\"silky\",\"f\":\"fibrous\",\"y\":\"scaly\"}\ndata[\"stalk-surface-above-ring\"]=data[\"stalk-surface-above-ring\"].replace(values11)\ndata[\"stalk-surface-below-ring\"]=data[\"stalk-surface-below-ring\"].replace(values11)\nvalues12={\"n\":\"brown\",\"b\":\"buff\",\"c\":\"cinnamon\",\"g\":\"gray\",\"p\":\"pink\",\"e\":\"red\",\"w\":\"white\",\"y\":\"yellow\",\"o\":\"orange\"}\ndata[\"stalk-color-above-ring\"]=data[\"stalk-color-above-ring\"].replace(values12)\ndata[\"stalk-color-below-ring\"]=data[\"stalk-color-below-ring\"].replace(values12)\nveil_type={\"p\":\"partial\",\"u\":\"universal\"} \ndata[\"veil-type\"]=data[\"veil-type\"].replace(veil_type)\nveil_color={\"n\":\"brown\",\"o\":\"orange\",\"w\":\"white\",\"y\":\"yellow\"} \ndata[\"veil-color\"]=data[\"veil-color\"].replace(veil_color)\nring_number= {\"n\":\"none\",\"o\":\"one\",\"t\":\"two\"}\ndata[\"ring-number\"]=data[\"ring-number\"].replace(ring_number)\nring_type={\"c\":\"cobwebby\",\"e\":\"evanescent\",\"f\":\"flaring\",\"l\":\"large\",\"n\":\"none\",\"p\":\"pendant\",\"s\":\"sheathing\",\"z\":\"zone\"}\ndata[\"ring-type\"]=data[\"ring-type\"].replace(ring_type)\nspore_print_color= {\"k\":\"black\",\"n\":\"brown\",\"b\":\"buff\",\"h\":\"chocolate\",\"r\":\"green\",\"o\":\"orange\",\"u\":\"purple\",\"w\":\"white\",\"y\":\"yellow\"}\ndata[\"spore-print-color\"]=data[\"spore-print-color\"].replace(spore_print_color)\npopulation={\"a\":\"abundant\",\"c\":\"clustered\",\"n\":\"numerous\",\"s\":\"scattered\",\"v\":\"several\",\"y\":\"solitary\"}\ndata[\"population\"]=data[\"population\"].replace(population)\nhabitat={\"g\":\"grasses\",\"l\":\"leaves\",\"m\":\"meadows\",\"p\":\"paths\",\"u\":\"urban\",\"w\":\"waste\",\"d\":\"woods\"}\ndata[\"habitat\"]=data[\"habitat\"].replace(habitat)\nbruises={\"t\":\"bruises\",\"f\":\"no\"}\ndata[\"bruises\"]=data[\"bruises\"].replace(bruises)","9d2f5d26":"data.head()","ef568587":"edible=data[data[\"class\"]==\"e\"]\npoisonous=data[data[\"class\"]==\"p\"]","ad88c9bf":"class_dim = go.parcats.Dimension(\n    values=data[\"class\"].values,\n    label=\"Mushroom Types\",\n    categoryarray=[\"e\", \"p\"],\n    ticktext=['edible', 'poisonous']\n)\n\ncap_shape_dim = go.parcats.Dimension(\n    values=data[\"cap-shape\"].values,\n    label=\"Cap Shape\"\n)\n\ncap_surface_dim = go.parcats.Dimension(\n  values=data[\"cap-surface\"].values,\n  label=\"Cap Surface\"\n)\ncap_color_dim = go.parcats.Dimension(\n  values=data[\"cap-color\"].values,\n  label=\"Cap Color\"\n)\n\n# Create parcats trace\ncolor = [1 if i==\"e\" else 0 for i in data[\"class\"]]\ncolorscale = [[0, 'lightcoral'], [1, 'mediumseagreen']];\ndata1 = [\n    go.Parcats(\n        dimensions=[class_dim,cap_surface_dim,cap_shape_dim,cap_color_dim],\n        line={'color': color,\n              'colorscale': colorscale},\n        hoveron='dimension',\n        hoverinfo='count+probability',\n        labelfont={'size': 18, 'family': 'Times'},\n        tickfont={'size': 16, 'family': 'Times'},\n        arrangement='fixed',\n    )\n\n]\n\n\niplot(data1)","cfc8c677":"data4 = [\n  go.Histogram(\n    histfunc = \"count\",\n    x = edible[\"bruises\"], \n    name = \"edible\",\n    marker=dict(color=\"lightgreen\",line=dict(color='darkgreen', width=5))\n  ),\n  go.Histogram(\n    histfunc = \"count\",\n    x = poisonous[\"bruises\"],\n    name = \"poisonous\",\n    marker=dict(color=\"mistyrose\",line=dict(color='maroon', width=5)),\n    opacity=0.75\n  )\n]\n\nlayout = go.Layout(\n    title='Bruises Counts with Mushroom Type',\n    xaxis=dict(\n        title=''\n    ),\n    yaxis=dict(\n        title='Count'\n    ),\n    bargap=0.2,\n    bargroupgap=0.1, paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor=\"rgb(243, 243, 243)\")\nfig = go.Figure(data=data4, layout=layout)\niplot(fig)\n","15193169":"odor_edible=pd.DataFrame(edible[\"odor\"].value_counts())\nodor_poisonous=pd.DataFrame(poisonous[\"odor\"].value_counts())\n\nlayout = go.Layout(yaxis=go.layout.YAxis(title='Color'),\n                   xaxis=go.layout.XAxis(\n                       range=[-1200, 1200],\n                     tickvals=[-1000, -700, -300, 0, 300, 700, 1000],\n                       ticktext=[1000, 700, 300, 0, 300, 700, 1000],\n                       title='Count'),\n                   barmode='overlay',\n                   bargap=0.1,\n                   paper_bgcolor='rgb(243, 243, 243)',\n                   plot_bgcolor='cornsilk')\n\ndata3 = [go.Bar(y=odor_edible.index,\n               x=odor_edible[\"odor\"],\n               orientation='h',\n               name='Edible',\n               hoverinfo='x',\n               marker=dict(color='lightslategrey')\n               ),\n        go.Bar(y=odor_poisonous.index,\n               x=-1*odor_poisonous[\"odor\"],\n               orientation='h',\n               name='Poisonous',\n               hoverinfo='text',\n               text=odor_poisonous[\"odor\"].astype('int'),\n               marker=dict(color='darksalmon')\n               )]\niplot(dict(data=data3, layout=layout))","3f87c4c0":"gill_attachment_edible=pd.DataFrame(edible[\"gill-attachment\"].value_counts())\ngill_attachment_poisonous=pd.DataFrame(poisonous[\"gill-attachment\"].value_counts())\ngill_spacing_edible=pd.DataFrame(edible[\"gill-spacing\"].value_counts())\ngill_spacing_poisonous=pd.DataFrame(poisonous[\"gill-spacing\"].value_counts())\ngill_size_edible=pd.DataFrame(edible[\"gill-size\"].value_counts())\ngill_size_poisonous=pd.DataFrame(poisonous[\"gill-size\"].value_counts())\ngill_color_edible=pd.DataFrame(edible[\"gill-color\"].value_counts())\ngill_color_poisonous=pd.DataFrame(poisonous[\"gill-color\"].value_counts())","0951f867":"trace0 = go.Scatter(\n    x = gill_attachment_edible.index,\n    y = gill_attachment_edible[\"gill-attachment\"],\n    mode = 'markers',\n    name = 'Edible',\n    marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"cadetblue\",\n                    opacity= 0.7\n                   )\n)\ntrace1 = go.Scatter(\n    x = gill_attachment_poisonous.index,\n    y = gill_attachment_poisonous[\"gill-attachment\"],\n    mode = 'markers',\n    name = 'Poisonous',\n       marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"firebrick\",\n                    opacity= 0.7,\n                   symbol=220\n                   )\n)\ntrace2 = go.Scatter(\n    x = gill_spacing_edible.index,\n    y = gill_spacing_edible[\"gill-spacing\"],\n    mode = 'markers',\n    name = 'Edible',\n    marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"cadetblue\",\n                    opacity= 0.7\n                   )\n)\ntrace3 = go.Scatter(\n    x = gill_spacing_poisonous.index,\n    y = gill_spacing_poisonous[\"gill-spacing\"],\n    mode = 'markers',\n    name = 'Poisonous',\n       marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"firebrick\",\n                    opacity= 0.7,\n                    symbol=220\n                   )\n)\ntrace4 = go.Scatter(\n    x = gill_size_edible.index,\n    y = gill_size_edible[\"gill-size\"],\n    mode = 'markers',\n    name = 'Edible',\n    marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"cadetblue\",\n                    opacity= 0.7\n                   )\n)\ntrace5 = go.Scatter(\n    x = gill_size_poisonous.index,\n    y = gill_size_poisonous[\"gill-size\"],\n    mode = 'markers',\n    name = 'Poisonous',\n       marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"firebrick\",\n                    opacity= 0.7,\n                   symbol=220\n                   )\n)\ntrace6 = go.Scatter(\n    x = gill_color_edible.index,\n    y = gill_color_edible[\"gill-color\"],\n    mode = 'markers',\n    name = 'Edible',\n    marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"cadetblue\",\n                    opacity= 0.7\n                   )\n)\ntrace7 = go.Scatter(\n    x = gill_color_poisonous.index,\n    y = gill_color_poisonous[\"gill-color\"],\n    mode = 'markers',\n    name = 'Poisonous',\n     marker= dict(size= 14,\n                    line= dict(width=1),\n                    color= \"firebrick\",\n                    opacity= 0.7,\n                   symbol=220\n                   )\n)\n\nfig = tools.make_subplots(rows=2, cols=2, \n                          subplot_titles=('Gill Attachment','Gill Size', 'Gill Spacing',\"Gill Color\"))\n\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 1, 2)\nfig.append_trace(trace5, 1, 2)\nfig.append_trace(trace6, 2, 2)\nfig.append_trace(trace7, 2, 2)\n\nfig['layout'].update(showlegend=False,height=800, width=800, title='Gill Properties' ,paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor=\"moccasin\")\niplot(fig)","91429e7b":"stalk_shape_edible=pd.DataFrame(edible[\"stalk-shape\"].value_counts())\nstalk_shape_poisonous=pd.DataFrame(poisonous[\"stalk-shape\"].value_counts())\nstalk_root_edible=pd.DataFrame(edible[\"stalk-root\"].value_counts())\nstalk_root_poisonous=pd.DataFrame(poisonous[\"stalk-root\"].value_counts())\nstalk_surface_above_ring_edible=pd.DataFrame(edible[\"stalk-surface-above-ring\"].value_counts())\nstalk_surface_above_ring_poisonous=pd.DataFrame(poisonous[\"stalk-surface-above-ring\"].value_counts())\nstalk_surface_below_ring_edible=pd.DataFrame(edible[\"stalk-surface-below-ring\"].value_counts())\nstalk_surface_below_ring_poisonous=pd.DataFrame(poisonous[\"stalk-surface-below-ring\"].value_counts())\nstalk_color_above_ring_edible=pd.DataFrame(edible[\"stalk-color-above-ring\"].value_counts())\nstalk_color_above_ring_poisonous=pd.DataFrame(poisonous[\"stalk-color-above-ring\"].value_counts())\nstalk_color_below_ring_edible=pd.DataFrame(edible[\"stalk-color-below-ring\"].value_counts())\nstalk_color_below_ring_poisonous=pd.DataFrame(poisonous[\"stalk-color-below-ring\"].value_counts())","d43bff84":"data8=[go.Scatterpolar(\n      r = list(stalk_shape_edible[\"stalk-shape\"].values),\n      theta = stalk_shape_edible.index,\n      fill = 'toself',\n      name = \"Edible\",\n    thetaunit = \"radians\",\n    ),\n go.Scatterpolar(\n      r = list(stalk_shape_poisonous[\"stalk-shape\"].values),\n      theta = stalk_shape_poisonous.index,\n      fill = 'toself',\n      name = 'Poisonous',\n    thetaunit = \"radians\"\n    ),\ngo.Scatterpolar(\n      r = stalk_root_edible[\"stalk-root\"].values,\n      theta = stalk_root_edible.index,\n      fill = 'toself',\n      name = \"Edible\",\n    thetaunit = \"radians\",\n     subplot = \"polar2\"\n    ),\ngo.Scatterpolar(\n      r = stalk_root_poisonous[\"stalk-root\"].values,\n      theta =stalk_root_poisonous.index,\n      fill = 'toself',\n      name = 'Poisonous',\n    subplot = \"polar2\",\n    thetaunit = \"radians\"\n    ),\ngo.Scatterpolar(\n      r = stalk_surface_above_ring_edible[\"stalk-surface-above-ring\"].values,\n      theta = stalk_surface_above_ring_edible.index,\n      fill = 'toself',\n      name = \"Edible\",\n    subplot = \"polar3\",\n     thetaunit = \"radians\"\n    ),\ngo.Scatterpolar(\n      r = stalk_surface_above_ring_poisonous[\"stalk-surface-above-ring\"].values,\n      theta = stalk_surface_above_ring_poisonous.index,\n      fill = 'toself',\n      name = 'Poisonous',\n    subplot = \"polar3\",\n     thetaunit = \"radians\"\n    ),\ngo.Scatterpolar(\n        r = stalk_surface_below_ring_edible[\"stalk-surface-below-ring\"].values,\n      theta = stalk_surface_below_ring_edible.index,\n      fill = 'toself',\n      name = \"Edible\",\n    subplot = \"polar4\"\n    ),\ngo.Scatterpolar(\n      r = stalk_surface_below_ring_poisonous[\"stalk-surface-below-ring\"].values,\n      theta = stalk_surface_below_ring_poisonous.index,\n      fill = 'toself',\n      name = \"Poisono\u0131s\",\n    subplot = \"polar4\",\n    \n    ),]\nlayout = go.Layout(\n    showlegend=False,\n    paper_bgcolor='moccasin',\n    title=\"STALK PROPERTIES\",\n    font=dict(family='Gravitas One',size=20,color='darkred'),\n     \n    \n    polar = dict(\n      bgcolor=\"linen\",\n      domain = dict(\n        y = [0.60, 0.90],\n        x = [0, 0.48]\n      ),\n      radialaxis = dict(\n             visible = False,\n        angle = 45\n      ),\n      angularaxis = dict(\n        direction = \"clockwise\",\n        period = 6,\n          gridwidth=3,\n          tickfont=dict(size=11,color=\"black\"),\n      )\n    ),\n    polar2 = dict(\n        bgcolor=\"linen\",\n      domain = dict(\n        y = [0.60, 0.90],\n        x = [0.52, 1]\n      ),\n      radialaxis = dict(\n             visible = False,\n        angle = 45\n      ),\n      angularaxis = dict(\n        direction = \"clockwise\",\n        period = 5,\n           gridwidth=3,\n          tickfont=dict(size=11,color=\"black\"),\n      )),\n     polar3 = dict(\n         bgcolor=\"linen\",\n      domain = dict(\n        x = [0, 0.48],\n        y = [0, 0.30]\n      ),\n      \n    radialaxis = dict(\n             visible = False,\n        \n        angle = 45\n      ),\n      angularaxis = dict(\n        direction = \"clockwise\",\n        period = 6,\n           gridwidth=3,\n          tickfont=dict(size=11,color=\"black\"),\n      )\n     \n    ),\n    polar4 = dict(\n         bgcolor=\"linen\",\n      domain = dict(\n        y = [0, 0.30],\n        x = [0.52, 1]\n      ),\n   radialaxis = dict(\n             visible = False,\n        angle = 45,\n       \n      ),\n      angularaxis = dict(\n        direction = \"clockwise\",\n        period = 4,\n           gridwidth=3,\n          tickfont=dict(size=11,color=\"black\")\n      )\n    ),\n     annotations=[dict(showarrow=False,text=\"Stalk Shape\",x=0.18,y=1.05,xref=\"paper\",yref=\"paper\",font=dict(size=15,color=\"midnightblue\"),bgcolor=\"lightyellow\",borderwidth=5),\n                                  dict(showarrow=False,text=\"Stalk Root\",x=0.83,y=1.05,xref=\"paper\",yref=\"paper\",font=dict(size=15,color=\"midnightblue\"),bgcolor=\"lightyellow\",borderwidth=5),\n                 dict(showarrow=False,text=\"Stalk Surface Above Ring\",x=0.13,y=0.40,xref=\"paper\",yref=\"paper\",font=dict(size=15,color=\"midnightblue\"),bgcolor=\"lightyellow\",borderwidth=5),\n                 dict(showarrow=False,text=\"Stalk Surface Below Ring\",x=0.88,y=0.40,xref=\"paper\",yref=\"paper\",font=dict(size=15,color=\"midnightblue\"),bgcolor=\"lightyellow\",borderwidth=5)]\n)\n\nfig = go.Figure(data=data8,layout=layout)\niplot(fig)","e74d9cd1":"value1=stalk_color_above_ring_edible[\"stalk-color-above-ring\"].values\nlabel1=stalk_color_above_ring_edible.index\nvalue2=stalk_color_above_ring_poisonous[\"stalk-color-above-ring\"].values\nlabel2=stalk_color_above_ring_poisonous.index\nvalue3=stalk_color_below_ring_edible[\"stalk-color-below-ring\"].values\nlabel3=stalk_color_below_ring_edible.index\nvalue4=stalk_color_below_ring_poisonous[\"stalk-color-below-ring\"].values\nlabel4=stalk_color_below_ring_poisonous.index\n\ntrace1=go.Bar(\n      x = value1,\n      y =label1 ,\n      name='Edible- Stalk Color Above Ring',\n    orientation = 'h',\n    marker = dict(\n        color = \"darksalmon\",\n        line = dict(\n            color = 'rgba(58, 71, 80, 1.0)',\n            width = 3),\n        opacity=0.8,\n    ))\n    \ntrace2=go.Bar(\n     x = value2 ,\n     y = label2,\n      name='Poisonous-Stalk Color Above Ring',\n    orientation = 'h',\n    marker = dict(\n        color = \"plum\",\n        line = dict(\n            color = 'rgba(58, 71, 80, 1.0)',\n            width = 3), opacity=0.8))\n    \ntrace3=go.Bar(\n     x = value3,\n     y = label3,\n            name='Edible-Stalk Color Below Ring',\n    orientation = 'h',\n    marker = dict(\n        color = \"palegreen\",\n        line = dict(\n            color = 'rgba(58, 71, 80, 1.0)',\n            width = 3), opacity=0.8))\n   \ntrace4=go.Bar(\n      x =value4 ,\n      y =label4 ,\n             name='Poisonous- Stalk Color Below Ring',\n    orientation = 'h',\n    marker = dict(\n        color = \"sienna\",\n        line = dict(\n            color = 'rgba(58, 71, 80, 1.0)',\n            width = 3), opacity=0.8))\n   \n\nfig= tools.make_subplots(rows=1, cols=2,subplot_titles=('Stalk Color Counts Above Ring','Stalk Color Counts Below Rings'))\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 1)\nfig.append_trace(trace3, 1, 2)\nfig.append_trace(trace4, 1, 2)\n\nfig['layout'].update(showlegend=True,height=600, width=800, barmode='stack',legend=dict(x=.58, y=-0.1,orientation=\"h\",font=dict(size=11,color='#000')),\n                     title='Stalk Colors Above and Below Ring')\niplot(fig)","ae02d77f":"edible_veil_color=pd.DataFrame(edible[\"veil-color\"].value_counts())\npoisonous_veil_color=pd.DataFrame(poisonous[\"veil-color\"].value_counts())","7d0bf75e":"trace1 = go.Bar(\n    x=edible_veil_color.index,\n    y=edible_veil_color[\"veil-color\"].values,\n    text=edible_veil_color[\"veil-color\"].values,\n    textposition = 'auto',\n    name=\"Edible\",\n    marker=dict(\n        color='rgb(158,202,225)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.6\n)\n\ntrace2 = go.Bar(\n    x=poisonous_veil_color.index,\n    y=poisonous_veil_color[\"veil-color\"],\n    text=poisonous_veil_color[\"veil-color\"],\n    name=\"Poisonous\",\n    textposition = 'auto',\n    marker=dict(\n        color='rgb(58,200,225)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.6\n    \n)\nLayout=go.Layout(\n    title='Veil Colors',\n    barmode='stack',\n    paper_bgcolor='rgba(245, 246, 249, 1)',\n    plot_bgcolor='rgba(245, 246, 249, 1)'\n   \n)\n\ndata65 = [trace1,trace2]\nfig = go.Figure(data=data65, layout=Layout)\niplot(fig)","058bc2bc":"import plotly.figure_factory as ff\n\nz=[[0, 3680, 528], [36, 3808, 72]]\n\nx=['None', 'One', 'Two']\ny = ['Edible', 'Poisonous']\n\nz_text = [[\"0\", '3680', '528'],  \n          ['36', '3808', '72']]\n\nfig = ff.create_annotated_heatmap(z, x=x, y=y, annotation_text=z_text, colorscale='Blackbody')\niplot(fig)","e766d88c":"sns.catplot(y=\"ring-type\", hue=\"class\", kind=\"count\",height=5,\n            palette=\"pastel\", edgecolor=\".6\",\n            data=data)","af9925d4":"fig = {\n  \"data\": [\n    {\n      \"values\": [1744,1648,576,48,48,48,48,48],\n      \"labels\": ['Brown','Black','White','Orange',\"Purple\",\"Chocolate\",\"Yellow\",\"Buff\"],\n      \"domain\": {\"column\": 0},\n      \"name\": \"Edible Mushrooms\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"type\": \"pie\",\n         \"hole\": .4,\n        'marker': {'colors': ['brown', 'black', 'white', 'orange',\"purple\",\"sienna\",\"yellow\",\"peru\"],\n                  \"line\":{\"color\":'#000000',\"width\":2}}\n    },\n    {\n      \"values\": [1812,1584,224,224,72],\n      \"labels\": [\"White\",\"Chocolate\",\"Brown\",\"Black\",\"Green\"],   \n      \"domain\": {\"column\": 1},\n      \"name\": \"Poisonous Mushrooms\",\n      \"hoverinfo\":\"label+percent+name\",\n         \"hole\": .4,\n      \"type\": \"pie\",\n        \"marker\": {\"colors\":[\"white\",\"sienna\",\"brown\",\"black\",\"green\"],\n                  \"line\":{\"color\":'#000000',\"width\":2}}\n\n    }],\n  \"layout\": {\n      \n        \"title\":\"Edible and Poisonous Mushrooms Spore Print Color Percentages\",\n        \"grid\": {\"rows\": 1, \"columns\": 2},\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"Edible\",\n                \"x\": 0.20,\n                \"y\": 1.05\n            },\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"Poisonous\",\n                \"x\": 0.85,\n                \"y\": 1.05\n            }\n        ]\n    }\n}\niplot(fig)","80df11f4":"class_dim = go.parcats.Dimension(\n    values=data[\"class\"].values,\n    label=\"Mushroom Types\",\n    categoryarray=[\"e\", \"p\"],\n    ticktext=['edible', 'poisonous']\n)\n\npopulation_dim = go.parcats.Dimension(\n    values=data[\"population\"].values,\n    label=\"Population\"\n)\n\nhabitat_dim = go.parcats.Dimension(\n  values=data[\"habitat\"].values,\n  label=\"Habitat\"\n)\n\n\n# Create parcats trace\ncolor = [1 if i==\"e\" else 0 for i in data[\"class\"]]\ncolorscale = [[0, 'coral'], [1, 'gray']];\ndata19 = [\n    go.Parcats(\n        dimensions=[class_dim,population_dim,habitat_dim],\n        line={'color': color,\"showscale\":True,\n              'colorscale': colorscale},\n        hoveron='dimension',\n        hoverinfo='count+probability',\n        labelfont={'size': 18, 'family': 'Arial'},\n        tickfont={'size': 16, 'family': 'Arial'},\n        arrangement='freeform',\n    )\n\n]\n\n\niplot(data19)","6a745f30":"from sklearn.preprocessing import LabelEncoder\nlabelencoder=LabelEncoder()\nfor column in data.columns:\n    data[column] = labelencoder.fit_transform(data[column])","02728726":"y = data[\"class\"].values\nx = data.drop([\"class\"],axis=1)","46143484":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2,random_state=1)","34452fd8":"from keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom keras.models import Sequential # initialize neural network library\nfrom keras.layers import Dense # build our layers library\ndef build_classifier():\n    classifier = Sequential() # initialize neural network\n    classifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu', input_dim = x_train.shape[1]))\n    classifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n    classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n    return classifier\nclassifier = KerasClassifier(build_fn = build_classifier, epochs = 70,batch_size=10)\naccuracies = cross_val_score(estimator = classifier, X = x_train, y = y_train, cv = 3)\nmean = accuracies.mean()\nvariance = accuracies.std()\nprint(\"Accuracy mean: \"+ str(mean))\nprint(\"Accuracy variance: \"+ str(variance))","6c88e658":"history = classifier.fit(x_test, y_test, validation_split=0.20, epochs=70, batch_size=10, verbose=1)\n\n# Plot training & validation accuracy values\n\nplt.plot(history.history['acc'])\nplt.plot(history.history['val_acc'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n# Plot training & validation loss values\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","0cfa0599":"ODOR","88060b80":"VEIL PROPERTIES","e489a0d8":"SPORE PRINT COLOR","9092ca74":"Following bar chart shows odor features according to mushroom type. We can see if a odor of a mushroom is almond or anise, it is edible or if it is musty, creosote, pungent, fishy, spicy or foul, it is poisonous. Moreover, even most of the mushrooms which have none odor are poisonous, there are 120 mushrooms in dataset both edible and have no odor. \n\nOdor feature is a really important feature to distinguish between a mushroom that is edible or poisonous.","2ead25fd":"BRUISES","883f2790":"GILL ATTACHMENT EXAMPLES:\n![](http:\/\/urbanmushrooms.com\/images\/183.jpg)","93579f0e":"Following bar chart shows number of veil colors according to mushroom classes. Most of the mushrooms have white veil color in dataset. Also edible mushrooms veil colors can be orange or brown. ","71a2f434":"ARTIFICIAL NEURAL NETWORK","35ca1628":"In this dataset, there are various features and following table shows first 5 rows in dataset.","6b54c77b":"And following bar chart shows number of stalk colors above and below ring. Same as the cap color, mushrooms which have buff, cinnamon,yellow or brown stalk color above or below ring are poisonous.","ea11d242":"Looking these features, it is difficult to say that a mushroom is poisonous or edible. Because there are no significant differences between features.","94380254":"For example in dataset, the probability of a mushroom being poisonous is 0.482 and there are 3916 poisonous mushrooms. \n\n* The probability of a mushroom is edible, the surface of the cap is smooth, cap shape is convex and the cap color to be brown is 0.015 and there are 124 such mushrooms in dataset. \n\nOr \n\n* The probability of a mushroom is poisonous, the surface of the cap is fibrous, cap shape is flat and the cap color to be yellow is 0.020 and there are 164 such mushrooms in dataset. and so on...\n","e73600dd":"POPULATION AND HABITAT","b8d53e76":"Following figure shows gill properties like gill attachment, gill spacing, gill size and gill color.","095843ba":"Following heatmap shows ring numbers of mushrooms according to their classes. For instance all of the edible mushrooms have one or two ring numbers. However, if you see a mushroom which has no ring number, it has to be poisonous!!","ea9504c6":"we've renamed all the features before we started analysis.","1b92be9d":"Following figure shows numbers and probabilities of cap shape- cap surface and cap color features according to the state of the mushroom being edible or poisonous.","64d27d79":"**Cap:** The cap is the top of the mushroom (and often looks sort of like a small umbrella). Mushroom caps can come in a variety of colors but most often are brown, white, or yellow.\n\n**Gills, Pores, or Teeth:** These structures appear under the mushroom's cap. They look similar to a fish's gills.\n\n**Ring:** The ring (sometimes called the annulus) is the remaining structure of the partial veil after the gills have pushed through.\n\n**Stem or Stipe:** The stem is the tall structure that holds the cap high above the ground.\n\n**Volva:** The volva is the protective veil that remains after the mushroom sprouted up from the ground. As the fungus grows, it breaks through the volva.\n\n**Spores:** Microscopic seeds acting as reproductive agents; they are usually released into the air and fall on a substrate to produce a new mushroom. \n\n(resource:https:\/\/1stchineseherbs.com\/parts-of-mushrooms\/, http:\/\/www.visualdictionaryonline.com\/plants-gardening\/plants\/mushroom\/structure-mushroom.php)","8c8c2147":"Gill attachment and gill spacing are not distinctive features. Most of the mushrooms in dataset have free gill attachment and close gill spacing. However, Gill- size and gill colors can be. We can say a mushroom which has buff and green gill color is poisonous or red and orange gill color is edible. And also, most of the edible mushrooms have broad gill-size but numbers of poisonous mushrooms which have broad or narrow are close to each other.","3acca882":"RING TYPE EXAMPLES: \n\n![](https:\/\/www.usask.ca\/biology\/fungi\/graphics\/glossary_pictures\/glossary_pic20)","96fa1487":"After we run the model, we have 1 accuracy mean and 0 accuracy variance. Also following graphs shows tarining and validation accuracies and training & validation loss values.","348f4386":"Now, our dataset looks like this:","8e0d3569":"Following figure type is same with cap properties. But it shows population and habitat properties. \n\nIf a mushroom has numerios or abundant population and if it lives in grass it is probabily an edible mushroom. Same as if a mushroom has several population and if it lives in paths it's most likely poisonous.","dd18f541":"RING NUMBER","f3305d20":"STALK PROPERTIES","90e28713":"GILL PROPERTIES","ff2d9a47":" To be more understandable, let's write properties one by one.\n\n**classes:** edible=e, poisonous=p\n\n**cap-shape:** bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n\n**cap-surface:** fibrous=f,grooves=g,scaly=y,smooth=s\n\n**cap-color:** brown=n,buff=b,cinnamon=c,gray=g,green=r,pink=p,purple=u,red=e,white=w,yellow=y\n\n**bruises:** bruises=t,no=f\n\n**odor:** almond=a,anise=l,creosote=c,fishy=y,foul=f,musty=m,none=n,pungent=p,spicy=s\n\n**gill-attachment:** attached=a,descending=d,free=f,notched=n\n\n**gill-spacing:** close=c,crowded=w,distant=d\n\n**gill-size:** broad=b,narrow=n\n\n**gill-color:** black=k,brown=n,buff=b,chocolate=h,gray=g, green=r,orange=o,pink=p,purple=u,red=e,white=w,yellow=y\n\n**stalk-shape:** enlarging=e,tapering=t\n\n**stalk-root:** bulbous=b,club=c,cup=u,equal=e,rhizomorphs=z,rooted=r,missing=?\n\n**stalk-surface-above-ring:** fibrous=f,scaly=y,silky=k,smooth=s\n\n**stalk-surface-below-ring:** fibrous=f,scaly=y,silky=k,smooth=s\n\n**stalk-color-above-ring:** brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n\n**stalk-color-below-ring:** brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n\n**veil-type:** partial=p,universal=u\n\n**veil-color:** brown=n,orange=o,white=w,yellow=y\n\n**ring-number:** none=n,one=o,two=t\n\n**ring-type:** cobwebby=c,evanescent=e,flaring=f,large=l,none=n,pendant=p,sheathing=s,zone=z\n\n**spore-print-color:** black=k,brown=n,buff=b,chocolate=h,green=r,orange=o,purple=u,white=w,yellow=y\n\n**population:** abundant=a,clustered=c,numerous=n,scattered=s,several=v,solitary=y\n\n**habitat:** grasses=g,leaves=l,meadows=m,paths=p,urban=u,waste=w,woods=d","5a580da6":"GILL SPACING EXAMPLES:\n![](https:\/\/www.usask.ca\/biology\/fungi\/graphics\/glossary_pictures\/glossary_pic17)","85066e80":"CAP SURFACE EXAMPLES\n\n![](https:\/\/www.usask.ca\/biology\/fungi\/graphics\/glossary_pictures\/glossary_pic16)","c430aeb0":"Also, following image shows mushroom parts as we mentioned above.\n\n![](https:\/\/i.pinimg.com\/originals\/0a\/c6\/4f\/0ac64fb5a9c29823572de772f4ba1ff1.jpg)","d1abb4f1":"CAP SHAPE EXAMPLES\n\n![](https:\/\/www.usask.ca\/biology\/fungi\/graphics\/glossary_pictures\/glossary_pic15)","0df5c4d5":"Following figure shows bruises counts with mushroom types. And we can say, most of edible mushrooms have bruises, however, a lot of the poisonous mushrooms haven't.","2cb25089":"A mushroom, or toadstool, is the fleshy, spore-bearing fruiting body of a fungus, typically produced above ground on soil or on its food source. \n\nIn this kernel, looking at the various properties of a mushroom, we will predict whether the mushroom is edible or poisonous. ","7d5b1e23":"Following radar charts show stalk properties of mushrooms according to their classes like stalk shape, stalk root, stalk surface above and below ring.","386b827a":"Following pie charts show spore print color percentages in dataset according class of a mushroom. For example 41% of edible mushrooms have brown spore print color or 40.4% of poisonous mushrooms have chocolate print color.","19519a6d":"COMPARISON OF CAP SHAPE-SURFACE AND COLOR ACCORDING TO THEIR CLASSES","6a46ec42":"Following bar chart shows number of mushrooms which have different ring type according to their classes. For example, most of the mushrooms which have pendant or flaring ring types are edible, or if they have large ring type, it is most likely poisonous.","966d4ad2":"To perdict whether a mushroom is poisonous or edible, we use ANN classification. "}}