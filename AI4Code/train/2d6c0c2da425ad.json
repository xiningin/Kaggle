{"cell_type":{"d2b9bea3":"code","632b31ee":"code","2175e3d8":"code","aca78b9a":"code","c701e4f1":"code","caa26427":"code","e81735e2":"code","51ff0d4f":"code","cdf59759":"code","bf763f41":"code","f681fd04":"code","aa6c2bf2":"code","391ab17a":"code","23a6648f":"code","a39cb398":"code","9b35a418":"code","5f042dc5":"code","a9bce03a":"code","c7230d5b":"code","7110c0b0":"code","744e68d8":"code","9146ba15":"code","430a7ff8":"code","95a75c3a":"code","9eda629f":"code","fda8fb86":"code","be3dab63":"code","53e216f7":"code","31525630":"code","9ad2895f":"code","1ad2fcab":"code","5eb66297":"code","61d91850":"code","8ad69113":"code","2c85c8c5":"code","225c7f2d":"code","764e51d0":"code","2dba9999":"code","2c99833e":"code","ccefe2d6":"code","cf515f43":"code","a692b4de":"code","e6f46258":"code","cdc1691a":"code","127063d0":"code","25bcbcf3":"code","66165d77":"code","e15fcd49":"code","8b643036":"code","b59df585":"code","025d87a3":"code","eb17766e":"code","cbc96c74":"code","db48c927":"code","1da89e76":"code","15483801":"code","63b0b9da":"code","8298e690":"code","cf90dfbc":"code","e48b8225":"code","80af1d1d":"code","7e3f7fd7":"code","5db17eb7":"code","efc302c9":"code","7b9b0373":"code","6aa9881e":"code","e91a834c":"code","59542f20":"code","4b794aea":"code","eb4b9f2f":"code","99e5bc0a":"markdown","74c967f3":"markdown","bafddaca":"markdown","553a1438":"markdown","060f20ae":"markdown","3d1da291":"markdown","8cb056ae":"markdown","472772f1":"markdown","c065017c":"markdown","fed5e4e1":"markdown","71351b29":"markdown","c4c642d9":"markdown","f760658b":"markdown","36f82e65":"markdown","c646120b":"markdown","6850521a":"markdown","f55b9697":"markdown","b9d1339e":"markdown","b2032c94":"markdown","dce8facc":"markdown","d20ed9c8":"markdown","2f880109":"markdown","c94c96c7":"markdown","91399609":"markdown","af30a24a":"markdown","a2cecee8":"markdown","5de13343":"markdown","d71bb701":"markdown","6af27d90":"markdown","bea7173a":"markdown","81a3e09b":"markdown","ffd97da0":"markdown","3603f55d":"markdown","b3f0de9a":"markdown","c6ec3082":"markdown","29debbe7":"markdown","9e649b96":"markdown","0106ba12":"markdown","796e97b2":"markdown","7777099e":"markdown","4873ecca":"markdown","8e41b88e":"markdown","6dd0c0a8":"markdown","60e33c4c":"markdown","871fff73":"markdown","cd766b3d":"markdown","44bd9a9e":"markdown","c04bcd07":"markdown","0467166d":"markdown","5273c790":"markdown"},"source":{"d2b9bea3":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import RandomForestRegressor # \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438\nfrom sklearn import metrics # \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438\nfrom math import cos\nfrom statistics import mode\nimport re\nimport requests    # \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f Web-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0437 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442\nimport os\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom itertools import combinations\nfrom scipy.stats import ttest_ind","632b31ee":"# \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u044b\n\nclass CheckByPattern():\n    '''\n        \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c\n        \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0438\u0437 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439\n    '''\n\n    def __init__(self):\n        self.match = []\n        self.not_match = []\n\n    def my_pattern(self, pattern):\n        self.pattern = re.compile(pattern)\n\n    def my_string(self, string):\n        if sel.pattern.match(string) is not None:\n            return 'Matched'\n        else:\n            return 'Not matched'\n\n    def my_series(self, series):\n        self.series = series\n        for value in self.series:\n            if self.pattern.match(value) is not None:\n                self.match.append(value)\n            else:\n                self.not_match.append(value)\n\n        self.result = f\"\u0412 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 {series.name}:\\n\\\n        - \u0421\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c: {len(self.match)} \u0437\u0430\u043f\u0438\u0441\u0435\u0439;\\n\\\n        - \u041d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442: {len(self.not_match)} \u0437\u0430\u043f\u0438\u0441\u0435\u0439.\"\n\n        return print(self.result)\n\n\ndef convert_to_list(str_data):\n    '''\n        \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a Reviews, \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u044e\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0438.\n        \u0422\u0430\u043a\u0436\u0435 \u0443\u0447\u0442\u0435\u043d\u044b \u0434\u0432\u043e\u0439\u043d\u044b\u0435 \u043a\u0430\u0432\u044b\u0447\u043a\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 177 \u0438 \u0441\u043b\u043e\u0432\u043e nan \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 5315.\n    '''\n    nan_reviews = [['a', 'a'], ['01\/01\/1900', '01\/01\/1900']]\n    if pd.isna(str_data):\n        return nan_reviews\n    str_data = str_data.replace('\"', \"'\")  # \u0441\u0442\u0440\u043e\u043a\u0430 177\n    str_data = str_data.replace('nan', \"'nan'\")  # \u0441\u0442\u0440\u043e\u043a\u0430 5315\n    str_data = str_data[3:-3]\n    list_data = str_data.split(\"'], ['\")\n    list_data[0] = list_data[0].split(\"', '\")\n    list_data[1] = list_data[1].split(\"', '\")\n    return list_data\n\n\ndef fill_nans(feature, dataframe, by='city', using='mode'):\n    '''\n       \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435, \u0433\u0434\u0435:\n       feature   - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438;\n       dataframe - \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u0443\u0434\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c;\n       by        - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e \u043a\u043e\u043e\u0442\u0440\u043e\u043c\u0443 \u0431\u0443\u0434\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 ('City' \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e);\n       using     - \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 (\u043c\u043e\u0434\u0430 (\u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e), \u0441\u0440\u0435\u0434\u043d\u0435\u0435, \u043c\u0435\u0434\u0438\u0430\u043d\u0430).\n    '''\n    process = dataframe[[feature, by]].groupby([by])\n    if using == 'mode':\n        grouped = process.agg(lambda x: x.value_counts().index[0])\n    elif using == 'mean':\n        grouped = process.mean().round()\n    elif using == 'median':\n        grouped = process.median()\n    else:\n        grouped = process.agg(lambda x: x.value_counts().index[0])\n    # \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0438\u0448\u0435\u043c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435:\n    # \u043a\u043b\u044e\u0447 - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u043e\u0440\u043e\u0434\u0430\n    # \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u043c\u0435\u0434\u0438\u0430\u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u0437\u043e\u0440\u043e\u0432\n    grouped = grouped.to_dict()\n    grouped = grouped.get(feature)\n    # \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c df \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 fearture, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    # \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0443\u0441\u0442\u044b\u0435\n    number_nans = dataframe[pd.isna(dataframe[feature])]\n    # \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c series \u0441 \u043f\u0443\u0441\u0442\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 feature\n    number_nans = number_nans[feature]\n\n    for idx in number_nans.index:\n        key = dataframe.at[idx, by]\n        dataframe.at[idx, feature] = grouped.get(key)\n","2175e3d8":"# \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u044d\u0442\u043e\u043c \u0431\u043b\u043e\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f. \u041e\u0441\u0442\u0430\u0432\u0438\u043b \u0438\u0445 \u043a\u0430\u043a \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u043d\u043d\u043e\u0439\n# \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u0441\n# \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 URL_TA\n\ndef download_pages(dataframe):\n    '''\n        \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441 \u0441\u0430\u0439\u0442\u0430 TripAdviso web-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n        \u043f\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430\u043c. \u0410\u0434\u0440\u0435\u0441\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0431\u0435\u0440\u0443\u0442\u0441\u044f \u0438\u0437 \u0438\u043c\u0435\u044e\u0449\u0435\u0433\u043e\u0441\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\n    '''\n    for index in dataframe.index:\n        # \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 id_ta\n        file_name = dataframe.loc[index].id_ta\n        # \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0430\u0434\u0440\u0435\u0441 \u0441\u0430\u0439\u0442\u0430 TripAdvisor \u043a \u0430\u0434\u0440\u0435\u0441\u0443 web-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430\n        # \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\n        url = 'https:\/\/www.tripadvisor.com' + dataframe.loc[index].url_ta\n        r = requests.get(url)\n        with open('web_pages\/{}.html'.format(file_name),\n                  'w', encoding='utf-8') as output_file:\n            output_file.write(r.text)\n\n\ndef lines(local_file):\n    '''\n        \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u0441\n        \u0441\u0430\u0439\u0442\u0430 TripAdvisor \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0441\u0442\u0440\u043e\u043a\u0435,\n        \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u0443\u043a\u0430\u0436\u0435\u043c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a Cusine style \u043c\u044b \u0431\u0443\u0434\u0435\u043c\n        \u0438\u0441\u043a\u0430\u0442\u044c \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435  \u043c\u0435\u0436\u0434\u0443 4000 \u0438 8000\n        (lines[-1][4000:8000])\n    '''\n    with open(local_file, \"r\", encoding=\"utf-8\") as file:\n        lines = file.readlines()\n    return lines\n\n\ndef find_cuisine(string):\n    '''\n        \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a 'cuisine' \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\n        \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438\n    '''\n    if 'cuisine' not in string:\n        return np.nan\n    # \u0438\u0449\u0435\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u043e\u0432\u043e 'cuisine'\n    idx = string.index('cuisine')\n    # \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u043e \u0441\u043b\u043e\u0432\u0430 'cuisine'\n    string = string[idx:]\n    # \u0438\u0449\u0435\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e, \u0433\u0434\u0435 \u0441\u0442\u043e\u044f\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b '],' - \u043a\u043e\u043d\u0435\u0446 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e cuisine\n    idx = string.index('],')\n    # \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u043f\u0440\u0430\u0432\u0430, \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0435\u0435 \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e cuisine\n    string = string[:idx]\n    # \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u043c \u043b\u0438\u0448\u043d\u0435\u0435 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 - 'cuisine\":[\"' \u0438 \u0432 \u043a\u043e\u043d\u0446\u0435 '\"'\n    # \u0438 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0431\u0443\u043a\u0432\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n    string = string[11:-1].lower()\n    # \u0441\u043e\u0437\u0434\u0430\u0451\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 cuisine\n    cuisine_list = string.split('\",\"')\n    return cuisine_list\n\n\ndef find_price_range(string):\n    '''\n        \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a Price Range\n    '''\n    if 'priceRange' not in string:\n        return np.nan\n    # \u0438\u0449\u0435\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u043e\u0432\u043e 'priceRange'\n    idx = string.index('priceRange')\n    # \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u043e \u0441\u043b\u043e\u0432\u0430 'priceRange'\n    string = string[idx:]\n    # \u0438\u0449\u0435\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e, \u0433\u0434\u0435 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0438\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e Price Range('\",') \n    idx = string.index('\",')\n    # \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u043f\u0440\u0430\u0432\u0430, \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0435\u0435 \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e Price Range\n    string = string[:idx]\n    # \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u043c \u043b\u0438\u0448\u043d\u0435\u0435 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 - 'priceRange\":\"'\n    string = string[13:]\n    return string\n","aca78b9a":"DATA_DIR = '\/kaggle\/input\/sf-dst-restaurant-rating\/'\ndf_train = pd.read_csv(DATA_DIR+'\/main_task.csv')\ndf_test = pd.read_csv(DATA_DIR+'kaggle_task.csv')\nsample_submission = pd.read_csv(DATA_DIR+'\/sample_submission.csv')","c701e4f1":"df_train.info()","caa26427":"df_train.head(5)","e81735e2":"df_test.info()","51ff0d4f":"df_test.head(5)","cdf59759":"sample_submission.head(5)","bf763f41":"sample_submission.info()","f681fd04":"# \u0412\u0410\u0416\u041d\u041e! \u0434\u0440\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0441\u0435\u0442\ndf_train['sample'] = 1 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ndf_test['sample'] = 0 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442\ndf_test['Rating'] = 0 # \u0432 \u0442\u0435\u0441\u0442\u0435 \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Rating, \u043c\u044b \u0435\u0433\u043e \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043d\u0443\u043b\u044f\u043c\u0438\n\ndf = df_test.append(df_train, sort=False).reset_index(drop=True) # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c","aa6c2bf2":"df.info()","391ab17a":"df.sample(5)","23a6648f":"# \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043c \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\ndf.columns = df.columns.str.lower()\n# \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0438\u0436\u043d\u0438\u0439 \u043f\u043e\u0434\u0447\u0435\u0440\u043a\ndf.columns = df.columns.str.replace(' ', '_')","a39cb398":"df.rename(columns = {'restaurant_id': 'id',\n                     'cuisine_style': 'cuisine',\n                     'number_of_reviews': 'reviews_count'},\n         inplace=True)","9b35a418":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0431\u0437\u043e\u0440\u043e\u0432\nfill_nans('reviews_count', dataframe=df, using='median')","5f042dc5":"df.id.sample(4)","a9bce03a":"check = CheckByPattern()\ncheck.my_pattern('[i][d][_]\\d*')\ncheck.my_series(df.id)","c7230d5b":"df.id = df.id.apply(lambda x: x[3:])","7110c0b0":"len(df.city.value_counts())","744e68d8":"df.cuisine.sample(5)","9146ba15":"type(df.cuisine[0])","430a7ff8":"# \u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u0441 \u0432\u044c\u0435\u0442\u043d\u0430\u043c\u0441\u043a\u043e\u0439 \u043a\u0443\u0445\u043d\u0435\u0439\ndf.cuisine[21199]","95a75c3a":"# \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0438\ndf.cuisine = df.cuisine.str.lower() # \u043f\u0435\u0440\u0435\u0432\u0435\u043b\u0438 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n# \u0448\u0430\u0433 1: \u0443\u0434\u0430\u043b\u044f\u0435\u043c \"['\" \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0432 \u043a\u043e\u043d\u0446\u0435 \u043a\u0430\u0436\u0434\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\ndf.cuisine = df.cuisine.apply(lambda x: x if pd.isna(x)\n                              else x[2:-2])\n# \u0448\u0430\u0433 2: \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0438\ndf.cuisine = df.cuisine.apply(lambda x: x if pd.isna(x)\n                              else x.split(\"', '\"))\n","9eda629f":"print(df.cuisine[0])\ntype(df.cuisine[0])","fda8fb86":"# \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c pd.series \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0443\u0445\u043d\u0438\ncuisine_values = df.cuisine.explode().value_counts()\n# \u043e\u0431\u044a\u0435\u0434\u0435\u043d\u0438\u043c \u0432\u0441\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0438\u043b\u0435\u0439 \u043a\u0443\u0445\u043d\u0438 \u0432 \u0435\u0434\u0438\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a\ncuisine_list = [cuisine for cuisine in cuisine_values.index]\n# \u0438 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0432 \u043d\u0435\u043c \u0437\u0430\u043f\u0438\u0441\u0438\ncuisine_list.sort()\ncuisine_list","be3dab63":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u041a\u0443\u0445\u043d\u044e \u043c\u043e\u0434\u043e\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443\nfill_nans('cuisine', dataframe=df)","53e216f7":"df.price_range.value_counts()","31525630":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043c\u043e\u0434\u043e\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u0446\u0435\u043d\u043e\u0432\u043e\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435\nfill_nans('price_range', dataframe=df)","9ad2895f":"df.reviews.value_counts().head(5)","1ad2fcab":"type(df.reviews[0])","5eb66297":"nan_reviews = [['a', 'a'],['01\/01\/1900', '01\/01\/1900']]","61d91850":"df.reviews","8ad69113":"nan_reviews = [['a', 'a'],['01\/01\/2007', '01\/01\/2007']]\ndf.reviews = df.reviews.apply(lambda x: nan_reviews if x == '[[], []]'\n                              else convert_to_list(x))","2c85c8c5":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0431\u0437\u043e\u0440\u043e\u0432\nfill_nans('reviews_count', dataframe=df, using='median')","225c7f2d":"df.id_ta.head(5)","764e51d0":"df.iloc[0]","2dba9999":"dfid = df[['id', 'id_ta', 'city']]\n# \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 id \u0440\u0430\u0432\u0435\u043d '5569'\ndfid[dfid.id == '5569']","2c99833e":"check = CheckByPattern()\ncheck.my_pattern('[d]\\d*')\ncheck.my_series(df.id_ta)","ccefe2d6":"df.iloc[1].url_ta","cf515f43":"# \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438\nprice_dummies = pd.get_dummies(df.price_range)\nprice_dummies","a692b4de":"df.reset_index(inplace=True)\nprice_dummies.reset_index(inplace=True)\ndf = df.merge(price_dummies)\n# \u0443\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 'index', \u043f\u043e\u044f\u0432\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438\ndf.drop(['index'], axis=1, inplace=True)","e6f46258":"df.price_range = df.price_range.apply(lambda x: 0.1 if x=='$'\n                                      else 0.5 if x=='$$ - $$$'\n                                      else 0.9 if x=='$$$$'\n                                      else x)","cdc1691a":"# \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0433\u043e\u0440\u043e\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u043d\u044c\u0448\u0435  1000\ndf.city.value_counts()[12:]","127063d0":"# \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0433\u043e\u0440\u043e\u0434\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u043d\u044c\u0448\u0435  800\nout_cities = []\nfor idx in df.city.value_counts()[12:].index:\n    out_cities.append(idx)","25bcbcf3":"# \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438, \u043e\u0441\u0442\u0430\u0432\u0438\u0432 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0433\u043e\u0440\u043e\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 1000\ncity_dummies = pd.get_dummies(df.city).drop(out_cities, axis=1)\ncity_dummies","66165d77":"df.reset_index(inplace=True)\ncity_dummies.reset_index(inplace=True)\ndf = df.merge(city_dummies)\n# \u0443\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 'index', \u043f\u043e\u044f\u0432\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438\ndf.drop(['index'], axis=1, inplace=True)","e15fcd49":"df['cuisines_count'] = df.cuisine.apply(lambda x: len(x))","8b643036":"df.cuisine.explode().value_counts()[:26]","b59df585":"# \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0438\u043b\u0435\u0439 \u043a\u0443\u0445\u043d\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u043c\u0435\u043d\u044c\u0448\u0435 800\nout_cuisines = []\nfor idx in df.cuisine.explode().value_counts()[25:].index:\n    out_cuisines.append(idx)","025d87a3":"# \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n# .stack() \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u0441\u0451 \u0432 \u043e\u0434\u0438\u043d \u0441\u0442\u043e\u043b\u0431\u0435\u0446 (\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043d\u043e\u0433\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430)\ncuisine_dummies = pd.get_dummies(df.cuisine.apply(pd.Series).stack()).sum(level=0)\n# \u0443\u0434\u0430\u043b\u0438\u043c \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0442\u0435 \u0441\u0442\u0438\u043b\u0438 \u043a\u0443\u0445\u043d\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u043c\u0435\u043d\u044c\u0448\u0435 800 \u0440\u0430\u0437\ncuisine_dummies.drop(out_cuisines, axis=1, inplace=True)","eb17766e":"cuisine_dummies.head(4)","cbc96c74":"df.reset_index(inplace=True)\ncuisine_dummies.reset_index(inplace=True)\ndf = df.merge(cuisine_dummies)\n# \u0443\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 'index', \u043f\u043e\u044f\u0432\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438\ndf.drop(['index'], axis=1, inplace=True)","db48c927":"df['rev_1'] = df['reviews'].apply(lambda x: len(x[0][0]))","1da89e76":"df['rev_2'] = df['reviews'].apply(lambda x: len(x[0][1]) if len(x[0]) == 2\n                                  else 1)","15483801":"df['date_1'] = df['reviews'].apply(lambda x: x[1][0])","63b0b9da":"df['date_2'] = df['reviews'].apply(lambda x: x[1][1] if len(x[1]) == 2\n                                  else 'n')","8298e690":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0432\u0442\u043e\u0440\u0443\u044e \u0434\u0430\u0442\u0443 \u043e\u0431\u0437\u043e\u0440\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0435\u0440\u0432\u043e\u0439 \u0434\u0430\u0442\u044b, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0443\u0441\u0442\u043e\u0435\nfor idx in df.index:\n    if df.at[idx, 'date_2'] == 'n':\n        df.at[idx, 'date_2'] = df.at[idx, 'date_1']","cf90dfbc":"df.date_1 = pd.to_datetime(df.date_1)\ndf.date_2 = pd.to_datetime(df.date_2)","e48b8225":"df['weekday_1'] = df.date_1.dt.weekday\ndf['weekday_2'] = df.date_2.dt.weekday","80af1d1d":"df.date_1 = df.date_1.astype('int64')\ndf.date_2 = df.date_2.astype('int64')","7e3f7fd7":"df['time_delta'] = df.date_1 - df.date_2","5db17eb7":"df['reviews_norm'] = df.reviews_count.apply(lambda x: cos(x))\ndf['reviews_norm'].hist()","efc302c9":"# \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u043f\u043e \u0438\u0442\u043e\u0433\u0443\ndf.info()","7b9b0373":"# \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0441\u0438\u0434 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\nRANDOM_SEED = 42","6aa9881e":"# \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u043d\u0430 \u0447\u0430\u0441\u0442\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438  \n    # \u0425 - \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430\u0445, \u0443 - \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f (\u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0438 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432)  \nX = df.drop(['id',\n             'rating', 'city',\n             'cuisine',\n             'reviews',\n             'url_ta',\n             'id_ta'],\n            axis = 1)\n\ny = df['rating']\n      \n    # \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u0438\u0432\u043a\u0438:  \nfrom sklearn.model_selection import train_test_split  \n      \n    # \u041d\u0430\u0431\u043e\u0440\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043c\u0435\u0442\u043a\u043e\u0439 \"train\" \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438, \"test\" - \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.  \n    # \u0414\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c 25% \u043e\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.  \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=RANDOM_SEED)","e91a834c":"X.head(3)","59542f20":"# \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438:\nfrom sklearn.ensemble import RandomForestRegressor # \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438\nfrom sklearn import metrics # \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438\n\n# \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043c\u043e\u0434\u0435\u043b\u044c\nregr = RandomForestRegressor(n_estimators=100,\n                             random_state=RANDOM_SEED)\n\n# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\nregr.fit(X_train, y_train)\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\n# \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e y_pred\ny_pred = regr.predict(X_test)","4b794aea":"# \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (y_pred) \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 (y_test), \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u043d\u0438 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f\n# \u041c\u0435\u0442\u0440\u0438\u043a\u0430 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Mean Absolute Error (MAE) \u0438 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043e\u0442 \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445.\nprint('MAE:', metrics.mean_absolute_error(y_test, y_pred))","eb4b9f2f":"submission = pd.DataFrame(y_pred.T)\nsubmission.to_csv('submission.csv', index=False)\nsubmission","99e5bc0a":"# \u041f\u0440\u043e\u0435\u043a\u0442 3. \u041e \u0432\u043a\u0443\u0441\u043d\u043e\u0439 \u0438 \u0437\u0434\u043e\u0440\u043e\u0432\u043e\u0439 \u043f\u0438\u0449\u0435","74c967f3":"df.date_1 = df.date_1.astype('int64')\/\/10**11\ndf.date_2 = df.date_2.astype('int64')\/\/10**11","bafddaca":"\u041f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0434\u0435\u0441\u044f\u0442\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e:\n\n- __Restaurant_id__ \u2014 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \/ \u0441\u0435\u0442\u0438 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432;\n\n\n- __City__ \u2014 \u0433\u043e\u0440\u043e\u0434, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d;\n\n\n- __Cuisine Style__ \u2014 \u043a\u0443\u0445\u043d\u044f \u0438\u043b\u0438 \u043a\u0443\u0445\u043d\u0438, \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043d\u0435\u0441\u0442\u0438 \u0431\u043b\u044e\u0434\u0430, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0435 \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435;\n\n\n- __Ranking__ \u2014 \u043c\u0435\u0441\u0442\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u0441\u0432\u043e\u0435\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430;\n\n\n- __Rating__ \u2014 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u043f\u043e \u0434\u0430\u043d\u043d\u044b\u043c TripAdvisor (__\u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f (!)__);\n\n\n- __Price Range__ \u2014 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0446\u0435\u043d \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435;\n\n\n- __Number of Reviews__ \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435;\n\n\n- __Reviews__ \u2014 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0434\u0432\u0443\u0445 \u043e\u0442\u0437\u044b\u0432\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430;\n\n\n- __URL_TA__ \u2014 URL \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u043d\u0430 TripAdvisor;\n\n\n- __ID_TA__ \u2014 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 TripAdvisor.","553a1438":"\u0410 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043a\u0430\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0443 \u043d\u0430\u0441 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438\u0441\u044c:","060f20ae":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u044b \u043a\u0443\u0445\u043d\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c '[nan]'\ndf.cuisine.fillna('[nan]', inplace=True)","3d1da291":"## 1.3 Price Range","8cb056ae":"\u041f\u043e \u0441\u043c\u044b\u0441\u043b\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a ID_TA \u0441\u0445\u043e\u0436 \u0441 Restaurant_id. \u041e\u0434\u043d\u0430\u043a\u043e \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 Restaurant_id \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u043e \u0441\u0435\u0442\u0438 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 (\u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u044d\u0442\u0430 \u0441\u0435\u0442\u044c \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430), \u0430 ID_TA \u0443\u043d\u0438\u043a\u0430\u043b\u0435\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430.\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u044d\u0442\u043e \u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438:","472772f1":"\u0412\u0441\u0435\u0433\u043e 10 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n\n\u0412 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445 __Ranking__, __Rating__, __Number of Reviews__ \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n\n\u0421\u0442\u043e\u043b\u0431\u0446\u044b __Cuisine Style__, __Price Range__, __Number of Reviews__ \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438.","c065017c":"### 1.2.1 \u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n\n\u0412\u0441\u0435\u0433\u043e \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043a\u0443\u0445\u043d\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u0443 \u043d\u0430\u0441 30717 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0438\u0437 40000, \u0442.\u0435. \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 24% \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0443 \u043d\u0430\u0441 \u043f\u0443\u0441\u0442\u044b\u0435. \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c __unknown__.","fed5e4e1":"\u041f\u0440\u0435\u0436\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u043b\u043e\u0441\u044c.\n\n\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 `id_ta` \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442, \u043a\u0430\u043a \u0431\u0443\u043a\u0432\u0430 `'d'` \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0438\u0434\u0451\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0446\u0438\u0444\u0440. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u044d\u0442\u043e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u0430\u0441\u0441 __CheckByPattern__.","71351b29":"---------\n## 1.8 URL_TA","c4c642d9":"### 1.2.2 \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","f760658b":"### 2.1. City\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u0430\u0441\u0441\u0438\u0432 __city_dummies__, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 dummy-\u043f\u0435\u0440\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0433\u043e\u0440\u043e\u0434\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0431\u043e\u043b\u0431\u0448\u0435 1000:","36f82e65":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 `date_1` \u0438 `date_2` \u0432  \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 UNIX","c646120b":"------------------------\n### 2.3. Reviews","6850521a":"\u041f\u0440\u043e\u0447\u0438\u0442\u0430\u0435\u043c \u043d\u0430\u0448 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043d\u0451\u043c.","f55b9697":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a  __Cuisine style__(`'cuisine'`) \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043f\u0438\u0441\u043a\u0438 \u043a\u0443\u0445\u043e\u043d\u044c, \u0431\u043b\u044e\u0434\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430\u0445. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0441\u043f\u0438\u0441\u043a\u0438.\n\n\u0412 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430\u0445 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043a\u0430\u043a \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0445\u043e\u043d\u044c, \u0442\u0430\u043a \u0438 \u043e\u0434\u043d\u0430:","b9d1339e":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0433\u0434\u0435:\n- __rev_1__ \u0438 __rev_2__ - \u0434\u043b\u0438\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043e\u0431\u0437\u043e\u0440\u0430;\n- __date_1__ \u0438 __date_2__ - \u0434\u0430\u0442\u0430 \u043e\u0431\u0437\u043e\u0440\u0430.","b2032c94":"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 __city_dummies__ \u0441 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c __df__:","dce8facc":"-------------------\n# 3. \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430","d20ed9c8":"\u0422\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u0434\u043d\u0451\u043c \u043d\u0435\u0434\u0435\u043b\u0438 (__weekday_1__, __weekday_2__), \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b \u0441\u0434\u0435\u043b\u0430\u043d \u043e\u0431\u0437\u043e\u0440:","2f880109":"### 2.2. Cuisines\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a __cuisines_count__, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0438\u043b\u0435\u0439 \u043a\u0443\u0445\u043d\u0438\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d.","c94c96c7":"    ---- \u043a\u043e\u043d\u0435\u0446 \u043a\u043e\u0434\u0430.","91399609":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a URL_TA \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 TripAdvisor.\n\u0427\u0442\u043e\u0431\u044b \u0435\u0439 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u043d\u0435\u0439 `\"https:\/\/www.tripadvisor.com\/\"`","af30a24a":"-----------\n## 1.7 ID_TA","a2cecee8":"-----------------------\n## 1.2 Cuisine style","5de13343":"## 1.6 Number of Reviews","d71bb701":"\u0414\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a:","6af27d90":"\n\u0420\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u044b \u0440\u0430\u0437\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 31 \u0433\u043e\u0440\u043e\u0434\u0430\u0445 \u0415\u0432\u0440\u043e\u043f\u044b.","bea7173a":"### 2.0. Price Range","81a3e09b":"df = pd.read_csv('main_task.csv')\ndf.info()","ffd97da0":"\u0412 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435 Price Range 26114 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0438\u0437 40000.\n\u0422\u0430\u043a \u043a\u0430\u043a \u0447\u0438\u0441\u043b\u043e \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0447\u0442\u0438 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u043e\u0442 \u043e\u0431\u0449\u0435\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0438\u0445 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u0438 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438.\n\n\u0423 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0446\u0435\u043d \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435 \u0442\u0440\u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a:\n\n- __`$`__ - \u043d\u0438\u0437\u043a\u0438\u0439\n- __`$$ - $$$`__ - \u0441\u0440\u0435\u0434\u043d\u0438\u0439\n- __`$$$$`__ - \u0432\u044b\u0441\u043e\u043a\u0438\u0439","3603f55d":"## \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438:","b3f0de9a":"--------------------\n## 1.4 Reviews","c6ec3082":"------------\n## 1.1 Restaurant ID","29debbe7":"\u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b:\n\n- _restaurant_id_ - __id__\n- _cuisine_style_ - __cuisine__\n- _number_of_reviews_ - __reviews_count__\n","9e649b96":"\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 `id` \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442, \u043a\u0430\u043a \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0435 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 `'id_'` \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0446\u0438\u0444\u0440. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u044d\u0442\u043e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u0430\u0441\u0441 __CheckByPattern__.","0106ba12":"\u0414\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 __Reviews__ \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043a\u0430\u043a __\u0441\u0442\u0440\u043e\u043a\u0438__, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043e\u043d\u0438 __\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438__, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u043c\u0438 \u0432 \u0441\u0435\u0431\u0435 __\u0434\u0432\u0430 \u0441\u043f\u0438\u0441\u043a\u0430__.\n\n\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c, \u0447\u0442\u043e \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f __\u0442\u0435\u043a\u0441\u0442\u044b \u043e\u0431\u0437\u043e\u0440\u043e\u0432__, \u0430 \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b __\u0434\u0430\u0442\u044b__, \u043a\u043e\u0433\u0434\u0430 \u044d\u0442\u0438 \u043e\u0431\u0437\u043e\u0440\u044b \u0431\u044b\u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u043d\u044b.\n\n\u0422\u0430\u043a\u0436\u0435 \u043d\u0435 \u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0432 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435, __\u043f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f__ \u0432\u0441\u0451 \u0436\u0435 \u0435\u0441\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0432 \u0432\u0438\u0434\u0435 __`[[], []]`__.","796e97b2":"\u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445 date_1 \u0438 date_2  \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u0442\u044b:","7777099e":"\u041f\u0435\u0440\u0435\u043f\u0438\u0448\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f __`[[], []]`__ \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 Reviews \u043d\u0430 `[['a', 'a'],['01\/01\/2000', '01\/01\/2000']]`, \u0430 __\u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438__ \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432 __\u0441\u043f\u0438\u0441\u043a\u0438__.","4873ecca":"C\u0440\u0430\u0432\u043d\u0438\u043c \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u0441\u0442\u043e\u043b\u0431\u0446\u044b `'id'`, `'id_ta'` \u0438 `'city'`.","8e41b88e":"\u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0446\u0435\u043d \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442:\n- __`$`__ - 0.1\n- __`$$ - $$$`__ - 0.5\n- __`$$$$`__ - 0.9","6dd0c0a8":"----------------\n# 2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","60e33c4c":"\u041e\u0431\u044a\u0435\u0434\u0435\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432 __cuisine_dummies__ \u0441 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c __df__","871fff73":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u0430\u0441\u0441\u0438\u0432 __cuisine_dummies__, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 dummy-\u043f\u0435\u0440\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0441\u0442\u0438\u043b\u0435\u0439 \u043a\u0443\u0445\u043d\u0438:","cd766b3d":"__\u0423\u0434\u0430\u043b\u0438\u043c \"id_\"__ \u0438\u0437 `id` \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432, \u0442\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u043d\u0435 \u043d\u0435\u0441\u0441\u0451\u0442 \u043d\u0430\u043c \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.","44bd9a9e":"---------------------\n# 1. \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","c04bcd07":"## 2.2 Number of Reviews","0467166d":"\u042d\u0442\u0443 \u0447\u0430\u0441\u0442\u044c \u043a\u043e\u0434\u0430 \u0432\u0437\u044f\u043b\u0438 \u0438\u0437 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0441 kaggle:\n\n    ---- \u041d\u0430\u0447\u0430\u043b\u043e \u043a\u043e\u0434\u0430:","5273c790":"\u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043c \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438 \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0438\u0436\u043d\u0438\u0439 \u043f\u043e\u0434\u0447\u0435\u0440\u043a."}}