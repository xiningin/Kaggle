{"cell_type":{"a66cefcb":"code","f6444d1a":"code","45eaf475":"code","60971c68":"code","624ee814":"code","4adbe06b":"code","c483c6c3":"code","e3515a91":"code","072e5fda":"code","63d284f7":"code","7141daee":"code","738ff961":"code","f64d5047":"code","2ba2c895":"code","2debc5ba":"code","68bd0f85":"code","67aac92a":"code","fe3652b4":"code","a416aeae":"code","fbf3910d":"code","707e2830":"code","8b1ed15e":"code","9f460087":"code","21c8839c":"code","0883860a":"code","083ae8aa":"code","ea718d44":"code","3a166ed7":"code","b2b24c0c":"code","c4e64a44":"code","1d4c5e27":"code","976a7871":"code","2f67b65f":"code","215c6d2f":"code","a019a153":"code","012522b0":"code","8fa50888":"code","e879e737":"code","5c1495af":"code","d6381d82":"code","af2cc39f":"code","fdc4709b":"code","0e821ff9":"code","00992db4":"code","16943ce6":"code","cfcb61d2":"code","bb2d7237":"code","3f7b6301":"code","7c54d599":"code","d86b9c03":"code","baa70c4b":"code","b69da0f1":"code","7164e542":"code","c7631cae":"code","fcd05a94":"code","361ebbda":"code","e8df9861":"code","704b1223":"code","4345ec94":"code","2bde4921":"code","d8dbd98b":"code","28a34b0a":"code","72b2f233":"code","086272f3":"code","cce6e9c0":"code","d00a46b2":"code","dc36c9b3":"code","4f759101":"code","0d7a21d6":"code","a7d6bea6":"code","c9eb59b2":"code","7a0b2bc6":"code","06600651":"code","2d9d6e0a":"code","db26720f":"code","853b3aab":"code","ca3ab99d":"code","d3be2c6a":"code","9712c7a6":"code","6e148a3e":"code","0d3e2717":"code","e1b4bc03":"code","fdcccd32":"code","e770e146":"code","0f725b2e":"code","6fc0ec2b":"code","0ce9df25":"code","e6c1355a":"code","550cd05c":"code","155446d6":"code","c2cdc8b1":"code","c82ecb7f":"code","3336633c":"code","3ec48fd2":"code","4ed7caa6":"code","b72e95dc":"code","a2a84331":"code","171f0e00":"code","e7f192e5":"code","7ff29ea1":"code","82f3c324":"code","cec2811d":"code","2fc29ba5":"code","b6c0c7c1":"code","41f8095d":"code","367532fb":"code","10b8f0e3":"code","08f1661c":"code","b9e1b3f0":"code","2faecf69":"code","a247b6c8":"code","eda3e5a8":"code","4c3cd77e":"code","ee58448f":"code","13210a4f":"code","6990b0dd":"code","3776fa4f":"code","8a1a31c0":"code","983b40c8":"code","897a9edb":"code","8022723e":"code","b5719f6e":"code","a652f83f":"code","517c40c3":"code","8b97cbef":"code","03ed2750":"code","6971fb78":"code","62416edc":"code","964417c7":"code","6705c229":"code","7be9f125":"code","9297dfda":"code","2de17540":"code","d99ce8af":"code","54e6ea46":"code","3b761ed6":"code","318a4823":"code","7e3bc416":"code","88e82fc4":"code","3f44178c":"markdown","481ab87b":"markdown","cf64dbf3":"markdown","d7d52746":"markdown","6f9f01b1":"markdown","700bd77c":"markdown","4d499e37":"markdown","47dbd2bd":"markdown","be40b7b3":"markdown","22fc97bb":"markdown","1bbc1920":"markdown","33d13807":"markdown","462bcc40":"markdown","479321be":"markdown","8de6422c":"markdown","6d84519e":"markdown","b04ea3fb":"markdown","55a2bbb9":"markdown","ebf4f296":"markdown","353fa0ef":"markdown","ece80c24":"markdown","20846e0d":"markdown","e519a4ef":"markdown","94ce925d":"markdown","bd8827af":"markdown","974aca3a":"markdown","3bd95ca4":"markdown","35d145be":"markdown","80eff4cd":"markdown","ac6824f3":"markdown","06f1b137":"markdown","343633ba":"markdown","b2725008":"markdown","f6f1b788":"markdown","dcebd9e2":"markdown","f80cbe0b":"markdown","aa87a5b5":"markdown","bf0330cc":"markdown","10e863e9":"markdown","a97f2f0d":"markdown","37c87413":"markdown","5b8be124":"markdown","25c13621":"markdown","37c26270":"markdown","97509f47":"markdown","a6be8421":"markdown","d1dc44d3":"markdown","e6bdca97":"markdown","0db76c4e":"markdown","f61e8013":"markdown","32312e42":"markdown","f000b11a":"markdown","eaf2e44b":"markdown"},"source":{"a66cefcb":"import numpy as np\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt","f6444d1a":"! pip uninstall xgboost -y\n!pip install xgboost==0.90 ","45eaf475":"import xgboost\nxgboost.__version__","60971c68":"from sklearn.model_selection import cross_val_score","624ee814":"from joblib import dump, load","4adbe06b":"import warnings as wg\nwg.filterwarnings('ignore')","c483c6c3":"from sklearn.metrics import plot_confusion_matrix\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import f1_score","e3515a91":"# This version supports oversampling\n# !pip install scikit-learn==0.22.2.post1","072e5fda":"df_3 = pd.read_csv('..\/input\/analyzed-data\/original_df.csv')\ntest =  pd.read_csv('..\/input\/analyzed-data\/test_encod.csv')","63d284f7":"df_3.columns","7141daee":"x_train = df_3.drop('income', axis = 'columns')\ny_train = df_3['income']","738ff961":"x_test = test.drop('income', axis = 'columns')\ny_test = test['income']","f64d5047":"y_train.value_counts()","2ba2c895":"y_test.value_counts()","2debc5ba":"from sklearn.metrics import classification_report\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RandomizedSearchCV","68bd0f85":"from sklearn.ensemble import RandomForestClassifier","67aac92a":"rfc = RandomForestClassifier(n_estimators=100)","fe3652b4":"rfc.fit(x_train, y_train)","a416aeae":"y_pred = rfc.predict(x_test)","fbf3910d":"from sklearn.metrics import f1_score\nf1_score(y_test, y_pred)","707e2830":"print(classification_report(y_test,rfc.predict(x_test)))","8b1ed15e":"plot_confusion_matrix(rfc, x_test, y_test, normalize='true')  \nplt.show()","9f460087":"from sklearn.svm import SVC","21c8839c":"svc = SVC()","0883860a":"svc.fit(x_train, y_train)","083ae8aa":"print(classification_report(y_test,svc.predict(x_test)))","ea718d44":"plot_confusion_matrix(svc, x_test, y_test, normalize='true')  \nplt.show()","3a166ed7":"from sklearn.linear_model import LogisticRegression","b2b24c0c":"lr = LogisticRegression()","c4e64a44":"lr.fit(x_train, y_train)","1d4c5e27":"print(classification_report(y_test,lr.predict(x_test)))","976a7871":"plot_confusion_matrix(lr, x_test, y_test, normalize='true')  \nplt.show()","2f67b65f":"#pip install imbalanced-learn --user","215c6d2f":"## RandomOverSampler to handle imbalanced data\n\nfrom imblearn.over_sampling import RandomOverSampler\n\nfrom collections import Counter","a019a153":"os =  RandomOverSampler(sampling_strategy=1)","012522b0":"x_train_res, y_train_res = os.fit_resample(x_train, y_train)","8fa50888":"print('Original dataset shape {}'.format(Counter(y_train)))\nprint('Resampled dataset shape {}'.format(Counter(y_train_res)))","e879e737":"x_train_res.shape, x_train.shape","5c1495af":"y_train_res.shape, y_train.shape","d6381d82":"y_train.head()","af2cc39f":"x_train_res = pd.DataFrame(x_train_res, columns=x_train.columns)","fdc4709b":"y_train_res = pd.Series(y_train_res)","0e821ff9":"# from google.colab import files","00992db4":"# x_train_res.to_csv('x_train_res.csv', index = False)         \n# files.download('x_train_res.csv')","16943ce6":"# y_train_res.to_csv('y_train_res.csv', index = False)         \n# files.download('y_train_res.csv')","cfcb61d2":"# After restarting the runtime I am loading the files\nx_train_res = pd.read_csv('..\/input\/analyzed-data\/x_train_res.csv')\ny_train_res = pd.read_csv('..\/input\/analyzed-data\/y_train_res.csv', header=None).iloc[:,0]","bb2d7237":"y_train_res.head()","3f7b6301":"x_train_res.shape, y_train_res.shape","7c54d599":"rfc.fit(x_train_res, y_train_res)","d86b9c03":"print(classification_report(y_test,rfc.predict(x_test)))","baa70c4b":"plot_confusion_matrix(rfc, x_test, y_test, normalize='true')  \nplt.show()  ","b69da0f1":"svc.fit(x_train_res, y_train_res)","7164e542":"print(classification_report(y_test,svc.predict(x_test)))","c7631cae":"plot_confusion_matrix(svc, x_test, y_test, normalize='true')  \nplt.show()  ","fcd05a94":"lr.fit(x_train_res, y_train_res)","361ebbda":"print(classification_report(y_test,lr.predict(x_test)))","e8df9861":"plot_confusion_matrix(lr, x_test, y_test, normalize='true')  \nplt.show()","704b1223":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import GridSearchCV","4345ec94":"model_params = {\n    'svm': {\n        'model': SVC(gamma='auto'),\n        'params' : {\n            'C': [0.1, 1, 10, 100, 1000], \n            'gamma': [1, 0.1, 0.01, 0.001, 0.0001],\n            'kernel': ['rbf','linear']\n        }  \n    },\n    'random_forest': {\n        'model': RandomForestClassifier(),\n        'params' : {\n            'bootstrap': [True, False],\n             'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, None],\n             'max_features': ['auto', 'sqrt'],\n             'min_samples_leaf': [1, 2, 4],\n             'min_samples_split': [2, 5, 10],\n             'n_estimators': [200, 400, 600, 800, 1000]\n        }\n    },\n    'logistic_regression' : {\n        'model': LogisticRegression(solver='liblinear',multi_class='auto'),\n        'params': {\n  #          'C': [1,5,10]\n            'penalty' : ['l1', 'l2'],\n            'C' : np.logspace(-4, 4, 20)\n        }\n    }\n}","2bde4921":"# scores = []\n\n# for model_name, mp in model_params.items():\n#     clf =  RandomizedSearchCV(mp['model'], mp['params'], cv=5, return_train_score=False, n_iter=2)\n#     clf.fit(x_train_res, y_train_res)\n#     scores.append({\n#         'model': model_name,\n#         'best_score': clf.best_score_,\n#         'best_params': clf.best_params_\n#     })\n    \n# df = pd.DataFrame(scores,columns=['model','best_score','best_params'])\n# df","d8dbd98b":"#df[df['model'] == 'random_forest']['best_params'].values","28a34b0a":"rfc_hyper = RandomForestClassifier(n_estimators =  200, \n                                   min_samples_split= 2, \n                                   min_samples_leaf= 1, \n                                   max_features= 'sqrt', \n                                   max_depth= 50, \n                                   bootstrap= True)\nrfc_hyper.fit(x_train_res, y_train_res)\nprint(classification_report(y_test,rfc_hyper.predict(x_test)))","72b2f233":"plot_confusion_matrix(rfc_hyper, x_test, y_test, normalize='true')  \nplt.show()","086272f3":"lr_hyper = LogisticRegression(penalty='l2',\n                              C = 78.47599)\n\nlr_hyper.fit(x_train_res, y_train_res)\nprint(classification_report(y_test,lr_hyper.predict(x_test)))","cce6e9c0":"plot_confusion_matrix(lr_hyper, x_test, y_test, normalize='true')  \nplt.show()","d00a46b2":"svc_hyper = SVC(kernel='rbf',\n          C = 20)\n\nsvc.fit(x_train_res, y_train_res)\nprint(classification_report(y_test,svc.predict(x_test)))","dc36c9b3":"plot_confusion_matrix(lr_hyper, x_test, y_test, normalize='true')  \nplt.show()","4f759101":"xgboost.__version__","0d7a21d6":"classifier=xgboost.XGBClassifier()","a7d6bea6":"params={\n \"learning_rate\"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15],\n \"min_child_weight\" : [ 1, 3, 5, 7 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ]    \n}","c9eb59b2":"random_search = RandomizedSearchCV(classifier,param_distributions=params,n_iter=5,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)","7a0b2bc6":"random_search.fit(x_train_res,y_train_res)","06600651":"random_search.best_estimator_","2d9d6e0a":"random_search.best_params_","db26720f":"# xg_res = xgboost.XGBClassifier(colsample_bytree = 0.3,\n#                                gamma = 0.0,\n#                                learning_rate = 0.25,\n#                                max_depth = 8,\n#                                min_child_weight = 1)","853b3aab":"#xg_res.fit(x_train_res,y_train_res)","ca3ab99d":"#dump(xg_res, 'xg_res.joblib')","d3be2c6a":"xg_res = load('..\/input\/analyzed-data\/xg_res.joblib') ","9712c7a6":"plot_confusion_matrix(xg_res, x_test, y_test, normalize='true')  \nplt.show()","6e148a3e":"f1_score(y_test, xg_res.predict(x_test))","0d3e2717":"#random_search.fit(x_train,y_train)","e1b4bc03":"#random_search.best_params_","fdcccd32":"# xg_non_res = xgboost.XGBClassifier(colsample_bytree = 0.5,\n#                                gamma = 0.4,\n#                                learning_rate = 0.15,\n#                                max_depth = 5,\n#                                min_child_weight = 3)","e770e146":"# xg_non_res.fit(x_train_res,y_train_res)","0f725b2e":"#dump(xg_non_res, 'xg_non_res.joblib')","6fc0ec2b":"xg_non_res = load('..\/input\/analyzed-data\/xg_non_res.joblib') ","0ce9df25":"plot_confusion_matrix(xg_non_res, x_test, y_test, normalize='true')  \nplt.show()","e6c1355a":"f1_score(y_test, xg_non_res.predict(x_test))","550cd05c":"from sklearn.ensemble import AdaBoostClassifier","155446d6":"ada = AdaBoostClassifier()","c2cdc8b1":"ada.fit(x_train, y_train)","c82ecb7f":"plot_confusion_matrix(ada, x_test, y_test, normalize='true')  \nplt.show()","3336633c":"ada.fit(x_train_res, y_train_res)","3ec48fd2":"plot_confusion_matrix(ada, x_test, y_test, normalize='true')  \nplt.show()","4ed7caa6":"param_grid = {\n    'n_estimators' : [100, 200],\n    'learning_rate' : [0.001, 0.01, 0.1, 0.2, 0.5]\n}","b72e95dc":"gs_ab = GridSearchCV(AdaBoostClassifier(), param_grid = param_grid)","a2a84331":"# gs_ab.fit(x_train, y_train)","171f0e00":"#dump(gs_ab, 'ada_non_res.joblib') # on non resampled data","e7f192e5":"ada_non_res = load('..\/input\/analyzed-data\/ada_non_res.joblib') ","7ff29ea1":"plot_confusion_matrix(ada_non_res, x_test, y_test, normalize='true')  \nplt.show()","82f3c324":"f1_score(y_test, ada_non_res.predict(x_test))","cec2811d":"# gs_ab.fit(x_train_res, y_train_res)","2fc29ba5":"#dump(gs_ab, 'ada_res.joblib')","b6c0c7c1":"ada_res = load('..\/input\/analyzed-data\/ada_res.joblib') ","41f8095d":"plot_confusion_matrix(ada_res, x_test, y_test, normalize='true')  \nplt.show()","367532fb":"f1_score(y_test, ada_res.predict(x_test))","10b8f0e3":"#!pip install catboost","08f1661c":"from catboost import CatBoostClassifier\nfrom scipy.stats import randint","b9e1b3f0":"cbc = CatBoostClassifier(eval_metric='F1', task_type= 'GPU', random_state = 2, iterations = 50)","2faecf69":"param_grid = { \"learning_rate\": np.linspace(0,0.2,5),\n               \"max_depth\": randint(3, 10)}","a247b6c8":"# rscv = RandomizedSearchCV(cbc , param_grid, scoring='f1', cv =5)","eda3e5a8":"#rscv.fit(x_train, y_train)","4c3cd77e":"# rscv.best_params_","ee58448f":"# cbc_non_res = CatBoostClassifier(eval_metric='F1', task_type= 'GPU', random_state = 2, \n#                                  iterations = 50, learning_rate = 0.2, max_depth = 7)","13210a4f":"#cbc_non_res.fit(x_train, y_train)","6990b0dd":"#dump(cbc_non_res, 'cbc_non_res.joblib')","3776fa4f":"cbc_non_res = load('..\/input\/analyzed-data\/cbc_non_res.joblib')","8a1a31c0":"plot_confusion_matrix(cbc_non_res, x_test, y_test, normalize='true')  \nplt.show()","983b40c8":"f1_score(y_test, cbc_non_res.predict(x_test))","897a9edb":"#rscv.fit(x_train_res, y_train_res)","8022723e":"# rscv.best_params_","b5719f6e":"#dump(cbc_res, 'cbc_res.joblib')","a652f83f":"cbc_res = load('..\/input\/analyzed-data\/cbc_res.joblib')","517c40c3":"# cbc_res = CatBoostClassifier(eval_metric='F1', task_type= 'GPU', random_state = 2, \n#                                  iterations = 50, learning_rate = 0.1, max_depth = 9)","8b97cbef":"# cbc_res.fit(x_train_res, y_train_res)","03ed2750":"plot_confusion_matrix(cbc_res, x_test, y_test, normalize='true')  \nplt.show()","6971fb78":"f1_score(y_test, cbc_res.predict(x_test))","62416edc":"#!pip install boruta","964417c7":"from boruta import BorutaPy","6705c229":"forest = RandomForestClassifier(n_jobs=-1, max_depth=5, random_state=1)","7be9f125":"boruta_selector = BorutaPy(forest, n_estimators='auto', verbose=2, random_state=1)","9297dfda":"boruta_selector.fit(np.array(x_train_res), np.array(y_train_res))","2de17540":"selected_rfe_features = pd.DataFrame({'Feature':list(x_train_res.columns),\n'Ranking':boruta_selector.ranking_})\nselected_rfe_features.sort_values(by='Ranking')","d99ce8af":"x_important_train = x_train_res.drop(['occupation_Tech-support','race_Other'], axis = 'columns')\nx_important_test =  x_test.drop(['occupation_Tech-support','race_Other'], axis = 'columns')","54e6ea46":"xgb = xgboost.XGBClassifier(colsample_bytree = 0.3,\n                               gamma = 0.0,\n                               learning_rate = 0.25,\n                               max_depth = 8,\n                               min_child_weight = 1)","3b761ed6":"xgb.fit(x_important_train, y_train_res)","318a4823":"plot_confusion_matrix(xgb, x_important_test, y_test, normalize='true')  \nplt.show()","7e3bc416":"x_test.shape, x_important_test.shape","88e82fc4":"f1_score(y_test, xgb.predict(x_important_test))","3f44178c":"**For colab users only**","481ab87b":"{'learning_rate': 0.2, 'max_depth': 7} with 50 iterations<br>\n'learning_rate': 0.2, 'max_depth': 5 with 100 iterations","cf64dbf3":"<h1 style=\"background-color:#00FFFF;font-size:23px;color:#00033E;font-weight : bold\">\u2705 On normal data<\/h1>","d7d52746":"<h1 style=\"background-color:#00FFFF;font-size:23px;color:#00033E;font-weight : bold\">\u2705  On Resampled Data<\/h1>","6f9f01b1":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Hyperparameter Tuning<\/h1>","700bd77c":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Random Forest<\/h1>","4d499e37":"{'colsample_bytree': 0.5,\n 'gamma': 0.4,\n 'learning_rate': 0.15,\n 'max_depth': 5,\n 'min_child_weight': 3}","47dbd2bd":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 On normal data<\/h1>","be40b7b3":"<h1 style=\"background-color:#FF5733;font-size:20px;color:#00033E;font-weight : bold\">\u2705  Saving\/Loading the model<\/h1>","22fc97bb":"<h1 style=\"background-color:#FF5733;font-size:20px;color:#00033E;font-weight : bold\">\u2705  Saving\/Loading the model<\/h1>","1bbc1920":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Adaboost<\/h1>","33d13807":"<h1 style=\"background-color:#ABFF9B;font-size:30px;color:#00033E;font-weight : bold\">\u2705 Using Default Hyperparameters<\/h1>","462bcc40":"best parameter for random forest:- {'n_estimators': 200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 50, 'bootstrap': True} for accuracy 0.8999 on resampled data.","479321be":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 OverSampling<\/h1>","8de6422c":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 SVM after resampling<\/h1>","6d84519e":"<br>\n<h1 style = \"font-size:30px; font-family:monospace ; font-weight : bold; color : #AE0052; text-align: center; border-radius: 10px 10px;\">\ud83d\ude0bDo Upvote If You Liked My Work\ud83d\ude05<\/h1>\n<br>","b04ea3fb":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 SVM<\/h1>","55a2bbb9":"It is working fine with 50 iterations","ebf4f296":"<h1 style=\"background-color:#ABFF9B;font-size:30px;color:#00033E;font-weight : bold\">\u2705 Importing Required Libraries<\/h1>","353fa0ef":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Catboost<\/h1>","ece80c24":"<h1 style=\"background-color:#00FFFF;font-size:23px;color:#00033E;font-weight : bold\">\u2705 On normal data<\/h1>","20846e0d":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 Downloading the two files after resampling<\/h1>","e519a4ef":"{'colsample_bytree': 0.3,\n 'gamma': 0.0,\n 'learning_rate': 0.25,\n 'max_depth': 8,\n 'min_child_weight': 1}","94ce925d":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Logistic Regression<\/h1>","bd8827af":"<h1 style=\"background-color:#AAFF00;font-size:20px;color:#00033E;font-weight : bold\">\u2705 Saving\/Loading the model<\/h1>","974aca3a":"<h1 style=\"background-color:#00FFFF;font-size:23px;color:#00033E;font-weight : bold\">\u2705  On Resampled Data<\/h1>","3bd95ca4":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 On Resampled Data<\/h1>","35d145be":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 On Resampled Data<\/h1>","80eff4cd":"<br>\n<h1 style = \"font-size:35px; font-family:Brush Script MT ; font-weight : bold; color : #0331A8; text-align: center; border-radius: 10px 10px;\">The End<\/h1>\n<br>","ac6824f3":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Xgboost<\/h1>","06f1b137":"**Since, majority of the models are only working good with resampled data**","343633ba":"{'learning_rate': 0.1, 'max_depth': 9} for 50 iterations<br>\n{'learning_rate': 0.2, 'max_depth': 8} for 70 iterations","b2725008":" \n<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Feature Selection<\/h1>","f6f1b788":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 Logistic Regression after resampling<\/h1>","dcebd9e2":"Best parameters for random forest{'n_estimators': 200, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 70, 'bootstrap': True} without resampling with the score of 0.8422","f80cbe0b":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 On normal data<\/h1>","aa87a5b5":"<h1 style=\"background-color:#00FFFF;font-size:20px;color:#00033E;font-weight : bold\">\u2705 Random Forest after resampling<\/h1>","bf0330cc":"#### Results after hyperparameter tuning second time on non-resampled data","10e863e9":"It is working better with 50 iterations","a97f2f0d":"**Importing Required Libraries**<br>\n**Random Forest**<br>\n**SVM**<br>\n**Logistic Regression**<br>\n**OverSampling**<br>\n - Downloading the oversampled file\n - Applying Random Forest, Logistic Regression, SVM on OverSampled Data<br>\n\n**HyperParameter Tuning**<br>\n - Using RF, Logistic, SVM on Normal Data\n - Using RF, Logistic, SVM on Resampled Data<br>\n\n**Xgboost**\n - Hyperparameter Tuning\n   - On Noraml Data\n   - On Resampled Data\n   \n**Adaboost**\n - Hyperparameter Tuning\n   - On Noraml Data\n   - On Resampled Data\n \n**Catboost**\n - Hyperparameter Tuning\n   - On Noraml Data\n   - On Resampled Data\n   \n**Feature Selection Using Boruta**\n  - On Resampled Data(Since, majority of the models were working good with Resampled Data)","37c87413":"<h1 style=\"background-color:#00FFFF;font-size:23px;color:#00033E;font-weight : bold\">\u2705  On Resampled Data<\/h1>","5b8be124":"<h1 style=\"background-color:#ABFF9B;font-size:35px;color:#00033E;font-weight : bold\">\u2705 Checking the  models on resampled data after Hyperparameter Tuning<\/h1>","25c13621":"<h1 style=\"background-color:#00FF7F;font-size:25px;color:#00033E;font-weight : bold\">\u2705 After Hyperparameter Tuning<\/h1>","37c26270":"<br>\n<h1 style = \"font-size:40px; font-family:monospace ; font-weight : bold; color : #3C0096; text-align: center; border-radius: 5px 25px;\">Table Of Contents<\/h1>\n<br>","97509f47":"![Screenshot (133).png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAksAAACOCAYAAAAhB0wsAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAhdEVYdENyZWF0aW9uIFRpbWUAMjAyMTowNjowNyAyMDozODo0N7N3elUAAD4sSURBVHhe7d0NXFRl3jfw353M2owGJrgTSYQhJVSDOrlggQmlkqJoEcoqrWLSFo\/KY3p705aWubF7az6YN71gvjyRaym9UNqKrtAdpPAYlpiQjSYRxs4GpJMw2Zj387\/OOQMzw8wBFN\/w\/90P68y5zpw5L9f1P\/\/rOmdO\/xYZGfk\/IN9\/\/734hzHGGGOMObhG+ZcxxhhjjLnByRJjjDHGmApOlhhjjDHGVHCyxBhjjDGmgpMlxhhjjDEVnCwxxhhjjKngZIkxxhhjTAUnS4wxxhhjKlofSskYY4wxxtrjkSXGGGOMMRWcLDHGGGOMqeBkiTHGGGNMBSdLjDHGGGMqOFlijDHGGFPByRJjjDHGmApOlhhjjDHGVHCyxBhjjDGmgpMlxhhjjDEVnCwxxhhjjKngZIkxxhhjTAUnS4wxxhhjKjhZYowxxhhTwckSY4wxxpgKTpYYY4wxxlRwssQuvqlLsW7dOiydqrz3KALzV6+T5hV\/a+ZFKNPPTdJSsZylSFLeM8aubhwTWGdxssQuY+VYPX82Zs8uRK0y5XIUMW8NBdw1mD9SmcAYu6pxTOh5OFlijDHGGFPxb5GRkf+jvGZMnbh8djdQi0AE9qV\/a+lVYCBwqhK581ejHElYum4clSpap5OR87HmUQN0UoGsdudsPPc2vXAtqy3E7Oe2KG8Eebl+B3Ix9yVpaedEDLmPC6yl9ab1V1aydR2IXC6\/BlpQ+fpcrN4rXrtsl70skPbH2LaprdqtvxtiXzp+1nFfEY\/r4vK5ltZ9Iq8jaHuqh9g\/W4vC2c9BWhOPn2Ps6qUeE8RtAGkwUKyTObSn7o4JSgxssMdUoTUmuK4HaV2eXDb4aC7exAykhYsoao8Xrutob\/eQPtOvyR6\/afvtMV3ZdjEyJi9L0ZmY1sPxyBLrmr7UuPbMRmEtENj\/BHJfr0RL3364WWq01DBFA5+tXDrra0Da0qS2ZEg0OFG20\/GiGjVoKgM1YqlMLC9w3Hnfn+RZIPx+lL9L2oax8v0KIjiIoFkorbso08HwqFyWtFQEnLay2bOVxOXt56T3uQda6I0IUEp5h0GFtlkEVPv+EH\/tEiU33yf2I31OBDxpOu1HXXia071ffnevQehXVCb2I611tNiPyudEIPT0OcauXu5jQtJSSlBgj2e5qDwViHGr51OkuxAxQSZyF2mZUlw1YIYUB+23Iyh\/In5SjHRsv7rgGYijdEm+ZYFi11ixBVvwnP0z9CfWSRc+o\/XSYFv8bovpfno5XsygRKk1zoi\/qzxREjhZYl1Ui2plJAZN9coJ3g\/+KZEYTD2TlqNlyrQtqBY5UWAo5o8YTM2XAsdONw1uaigFHWrsdPKWbuR2GX3qfrUoUUZUvv1RBDRa95ERiAwW30rBULmZvG1Uxz6fUiaSv\/P2LU6con8o4LW\/0T0JofTdLQd2KD3YNhHKfjyyT0mr3q6mraHFDGlbJx2OYIc4PntXYy4FOTF6JH+O5hsrb5vbni9jVy13MUFuhxAdPikmOI\/sdH9MkLW2+731aKB\/dNffLN7JI8PSenhov30bUC1tg5IgKcmNfO+U\/DmnkSLSFqtbcEIEEiJ9n\/27pZjM913ZcbLELgutox7K3yW5RNQ6Kmb\/k4fcy1+aK72XeotKgnN+I1\/2nqLordqTGCUojfSnUH0eWhNYVw69XOXPfvmRMeaB4+iv+FNGgLs\/JqhwM6LczqkT1AVzQQmWSJDssVUe7eoM+4iUMkr1qIhP\/ItBTpZY9zii9EaCI6VhavsICWqrsdoslaCf1CGKwPy7HXpGtSfoNE7x5m55ePviSUKc6GmdOoKyveWob6JJ1IuMU7k0JQVI6fJWd5GTJqcgtrcMRyiB0oXHtQtO5cp+HDxC2VPKqFztV25G7BzYPycPzTPG3HOMCfbR32jVkZXujwmyiHnRbW07sJ80MtxgFmmaS\/xUEaEX3S77qJGybV0iJ03i8hzjG7xZV0g3CYtr6s8B4r4aUK9rpz\/WPDoYR8QNhVDuTVJmd7wp0PGG5ZYDlWgIN0g3I7u9wVsaBXF\/g6LQdgNm1zjfNE1Ub6omyvp39DkRiJzW02G73fN046V9ia43dNr3hwiizjdetu0LZZmevtvlBm\/6pHQc1dMsxno29bbt2g7b2mm3x4R2MdCxbTuvRy3FTz+Knw1SuVIm7q1y+n7BcR0ohhxogCHcj2LJm8A0+abwufsiW+N3\/VjaptaY7mldrl6cLDHGGGOXkpIsiR+68K9UL098GY4xxhhjTAWPLDF2AbQbpnfgfMmNMdbztb\/03qYFlR8fweDRPLJ0OeNkiTHGGGNMBV+GY4wxxhhTwckSY4wxxpgKTpYYY4wxxlRwssQYY4wxpoKTJcYYY4wxFVfUr+HMZrPyijHGGGOXA71er7zqua6oZOm6665TXjHGGGPscvDTTz8pr3ouvgzHGGOMMaaCkyXGGGOMMRWcLDHGGGOMqeBkiTHGGGNMBSdLjDHGGGMqOFlijDHGGFPByRJjjDHGmIpeAQEBzyqvL3u9e\/dWXjHGGLtSaQ2JyJg3DUOavHHff0zEgB17MGRRNmbe\/gN2769X5rp4Elq\/+3dYmC2vz2GlzJVxThbmGU+0X88Racj69xj09fhZLSIfWYT0PyRi4qhA9A1ORIq75UiMSPvzPBh\/2o2K75VJHnhcn\/MUlJyJxRNvxekvP0ftz8pED3755RflVc\/VYx5KGfRABlJjg+CtoTdnLagrzUfOu5WwysWMdQttRAoyJhuh19Kbs1aYvyhA9htl7euZNhIpGQkwSjMClu9Kkf9yPirFjP0CYBgaiUhjKAYNtKJswUoUSHMJQZgwLxVjbvGW3tksNfh4fTa219AbrQGJTyQi6ia5zGquws7NuSiWyvQIGmpA9NC7EHKLFnVbliB3nzSbdCKIGSi\/dmQ9lIfMtRXKO8YuliikZyXAe18Ost4Nx8I\/61H6p1zoqZ5Gnrg0dVK0Efm7A1rXp0wpcyWSk7GNy2jdXVq9SJame6Msw7E9O7gtBc88HoamrVnI+dTieTkSkSyNRdPyLORTsUgu0xMjECCd4KjtNplQunk9tpusHSxHERSDtOSxCFPikdVcgYLsPJSJj7jEqrYyb8SkZ2K8rgwrVxRA7b+fwQ+lvFLcnoKUcZQowYKaQ1Uwn\/ZGwKhkpN6jlDPWLaKQSomStiYfSzIysOSdY9AOT3Bbz6JmUvDRHkP+sxnIeDYfdT5RSJ4ZJZUlzF6I5FFBlEGdgZdLC9Q\/nIwxN1lQmpOJjMwclP80EGOSEyH+YwJj5qQgQmtCnrTMXBw4G4LxkydQf5VC64x0pD9wF7ybLYBGDqh2BStoflrf1r\/M7aixWVFXxYkSuwRGhCFAa0bVuyLLl9mUfy8XHa2PjTpKXeathQ6NqKNEyU59OTZQM6VEJwHpKRHQflOArEy57Rc16jEmNZUikkx9OWFIeSQBgyxFyKHPZ2bl45jWiIfmjJFKXWOVKEuQYpUFxYfqgN8OgkGa8+rWIy7DGSYm4h59b5g\/fRYrN5Wj1GsI7gsZgH6\/OY1d+9oaJLu4pKH29DQkJcQhbuy9GKZvRsUBbzzy7J8Qr\/8cnxxqluYLm7kMf3rAF5\/7jcefU+5G4LA4pExNUD5zDbS\/m4o5MxIx8YE43H1rLxwrN+GE9MmLbEQcHhx+Fl+s+hs+PwOc\/q4KvuFxCNZ+j+LPnftdw2Im4oZ\/7cCGPfXAz7XA4Hth9G7Cjj2HcXjvDuz+7z2o6BWGWENv1DkM298\/IRE31H+ENTup3p5pQtWvg3BvJKVKO36AZmgATvy\/V7HDRDP+\/AO+HBCOCSG9UV9UgYr9xdhVXIp9B26EMS4Apw96Hr4Pemg64vpUIW\/Tl5dmP7Kr20Aj7m+t94exh+qvuIA05J44BPxcKV1OEiO4mRkp+N11Nfi8ugkBsWl4PC0FiRMpltw7DANOVaDyeDjS\/rwY4w1D8EDSNNwf+AP63rcYM4fdiDsn\/gHTRNxpnZcaLIIQM+dxPKbEknuHDUBzRSXqqKjtu4tb12fMvBWYN+4GHP3vSjSJ9VbU79+NPV\/Ri8kLkZ1yL4bcnYBpD4aj98HTCDD0A266Bw+6xisx76RgaKhLPyiOvvumH5C3Nk9ejlv1qCiS44Lx4ZmI9vocuS99BGkzqO1\/86U37ogz4Ib\/2YX3tijrI0aunknB8DO7UPaNWIbd7xA7vh9qP9qAYsp9zjTL8WhYXzPFo76Im2LE2c9X4W8iqFGsqrp+GOJCrsX3xZ\/DPGAYYodqYVa5LClcDZfhesTIkqaX3JNuza6bWiDqlEYnX65gl0IIEidHwbfedRSmCiXfNMI3JEYaLRHzGQO9YT5SIg\/z9vGF5kAeBcpM5Oy1oP\/wCYj1KkH2n2gZr1XAdstoTBgtffDi8\/eGtpl6hq2dOCvVubb656iu0QLtTUZEUexEvygYb9Ki0SyyHDUG+F5H\/bkfDijvCS1fZkLBayuR96n8TquPRModeliOUqIkT+qkKEwY6o2aigJwN4JdEh2ddcRISqIB1r25yHnXBKu4cjApBLZ9ORQXliDvsBeMk9tGVXz721D0Rg5e+6BKeq8N0uOf7y+RRmZLT\/SHcdRYafQ17JEUJNxqQ8Urmch4Ng8mjX0Exb3Sj3eieHcJtTwVffpDe\/Qd5LzyFoqlCb7QX1OCrAUUr96geHXTaIqDFOneX4mMTVUUMepQTPGwK5caA\/ppYaXY4dRerQVYmbEI2YXKe+FwCYqLdqJIiRFttiN78fPI+0J5S0ljiN4ejwLg3ceKxuNtI1PWszaglxcldswR\/xqOXSAWWKnNefUbBKNBD9unech5aT0KDtFpf5cJjX4hiPGn2W6LRFB\/M0ylyshM8zGU\/YMCJP3PtM1EPTorjn1WCjO1ZUt1FczNGmhFAnIpKK2lM5cMKjZ\/hMqzYUh8NhvZzyYipLkU77whB3PPNPDq1dGQegIWZmcjK3MajF7V+Ghz11Il\/cPRCDldjZ1\/V\/sOxi4Ub0QNHwRtkxluW8M1g5CWGgPvrykBEYkSTTJEhMC3oQJ50nsLKjZWok4bgLAR8kfMX6zHri8omRBBgli\/3om39lvohQn5hymu9NMjjDoikYN90fhZHvJNNN+JCqyvrIM2IAxG6VPtWSt3oeDTDroUzSYUby6D6XAdrZlQh4rXSqXXlv15KKWPBwRHSiXnxgh9p+NdDUo\/2CXfF+mRFpFzUhH5myrs2upwBFo7ZS6+PA6zzRcBsTzwwMkSu0DMyH8lD+XNQRibkomsVUuQel8AvMR1n\/piVJt9MShKD\/3QIPger8J2dz\/koGzrsrqXQQkoHfe49Eh44iGEUoKUq9xfVH42ArMyxkg9XM9sOPMrLf8atblEj1JeZmlzKKZlyPczdQ71pIfqYT603f2JirELzDgnE4khNlQW5rsdsfEaHAr9GedWL43c+kUikzoJ2dJfDAKoJXmLzhbp3P1DckfEd2Smsgz6Gx0A9PGmZZ0ftRhl+eXMeZ5lK2Dutmvl4td4C\/HQYAuK1+fKN3fbeVpH63bs3GtB0KRlWDhZmXaV6hHJku1Xubpqeyunjf46eNE\/tpa2G+nYxUZBSN+IkrXPI3NRBpasPQDcmoDESaLMjJIjZugHj8XYEG\/UfLlT6kFe9mqbYOlDvazWXEZPda6t\/rWJRMhNZ1CzJx9VItCdqEI+9dA0A29vvXTgXiUaT9KeGxCuvCd9KMhLL0KQ8NhCpNhvJhfL3FMDqz6Ivq1ztA9EI+QaE0q2qv2uhbELp2JtFvJNGhjGJVKNbu\/MkV14fm0pLBQrUkfLDU1qX\/WlyLT\/QEH5W\/mBVNxJckfE\/Emm0zIyPP1yrZt4\/4Zar6dRm05qPGWFVh+CIOW9RCtGmFcgY5zyvkNahDyYjofutKL0Fdrm1gGzY2iyaOE7sK2Dpu9Nr389IyeB\/olIGEUxeusSrHxfKr5q9YhkqbLchEb61\/eudGTMSUPm6CDqR1hR84V8FZldCgYkzMxA2lQjpU0Uqs6Iu8jamLdVoW6AEUaf4zB9fEWkSsAXX8Ns1cPwSJS0Td73JCDMz4q6g5X0LghRk8bAKA2ZV8HcpEXAiAkIETGoXxgS7xgI\/NTY4X1CZbVmaAdHUe+bPqgNQeIICpHHTSiDBZr+ATCMmiZ\/B5WNGUr9a0+XM9oJQ3JEECzVxShVpjB28VlQ+tkxWPuLS2NuiPtl6guQV9KIoAnpSKDqX3mwBha9EY9NCpPbXWgCMhanIcpP\/kjnVOJAjQX6EY8hIVRaCsImZSBzThR85Rna0RrGIOEepxSlEwJgfCxKerSI9\/AURNHH6456egiBIjQGifGRHkeIS\/9ehjofI5KTaR4lnoxJNSKgmTo+jvcsKTHIIOZxETQ5HWkjaVk5jomSUImv663QD6V1Ve6vTLjdF9bvDlAJCehPe8r5F3xXq55xGe5QHvIKqUHRYQ26PYwyYwvqPtmM9e1udGMXTynWv1+GM7ekYJm4x+ZxI7y+2YV8e2\/QuhPVtTbYjh\/C9iskV5K3qQLWoERpm5Y9NAiWvZuRJz3PKByRsRMQIw0dmZD3xi7UeYvnyYh7ltJg9DKh4I089ZtFiXnrZuz6zhsRj2chOysdEdoafLRVPONEXNbMRzV9T4q4D4rKYr2PdWqZgnbcWIT2qcF+x\/sUGLtMmT\/IQ+k\/9YiamoigfeuxftsxaEemye1uDsUSUxkqGpSZO6li\/XoUfCPu2VmG7OxlSLvLC6byCqmj7U7U6LGIuS\/a7QiYZ40wn41Gxp9pPR8xQvPNR8h\/v4OR3NuMiBpp8Hw5sKYAOXnlsIU+hEwlnsR616Fgba7zjztui0ZM7FjEtnuUiRFjRwRAowlATIZyCVL6y0LaCIpqGwtQYR3Uen\/loJ\/KsPnNrt0LeTXoMQ+lZIwxdgXwT0TmYiMs7y9DzpUyqnwBiYdKTutThEXZu5Qplw\/xWJe0QBNylql3yvihlIwxxlh3qs\/H5g+OwXvMQqRGKNOuWgaE+dtQ\/enllyj5Tl6IlEAzdnVy9Lqn45ElxhhjjJ0zHllijDHGGLvKcbLEGGOMMaaCkyXGGGOMMRWcLDHGGGOMqeBkiTHGGGNMBSdLjDHGGGMqrqhHBzDGGGOMXWw8ssQYY4wxpoKTJcYYY4wxFZwsMcYYY4yp4GSJMcYYY0wFJ0uMMcYYYyo4WWKMMcYYU8HJEmOMMcaYCk6WGGOMMcZUcLLUYyRh6bo1mD9SeXuh3TIFT61ah3Xr1mHpVGUau3rohmP6M2uwKn0a5q++iPXODd2QWIyL8FHeXc4iLvm+6qyIeWuwZl6E8q6TdKGIHRuBK+FItHeR42cHxP5ftzRJeq1Wv8\/pOLFz0mOSJZ+gaMTPmo+lf12DV1fOp7DELqT45HEIPFWElXNn47m3lYkXlDjRXPrETBeVhuVr5CRx3do1WJ4WDZ1S5uSWcZi\/nAKefb7HY9tOIrpopNnL6G\/N8jREty4kGFP+Y1Vr2aurnsKUW5QinT+CR8Uj7cnlWPXqKufArlZGgic\/hVVrlfWm8qcmBysl5yb28VmI1pQhJ+cYvTuJhgPy9Iti5HysWbeUTm+y6IlJSJo8hfZcN3L5ju7T0b7SwT+EYlnaQixf9SpWuZwI1erfuZZ5crLhoPKqk6ImIGnqg5gSorxn3cKpfruplx0dp+C4+V0+9qy9npEsUQVa\/sxMTIkyINBPB41Gmc4uGJ2XBraGI6huUSZcFWLxxNQI6I5uwoLZs7Hgb0egi0jCEzFKcSt\/TE9NQqitTEomF7xeAYQnIWOqv1Qa+3gSInRHsGnhbMxeuAlHdBFIomRK8J8xC\/FBJ1G0Yi5mz12JkpOBiE+dTkukdPHRRVg0ORLeP52AayVXK8PA6Zg1MRAni1di7uy5WPnJSQROnIXpA5XyLovAnYE61B\/ahKPSextsl7AeFK74I2ZnblTW5XLXwb4aOQeLnpyCyOssOHFWA+cjqVb\/zrXMM9uvXTyoO1fij7MXY6NJec+6RUf1W\/U4hach7eHBOPF3ue0\/\/ZY49tORMV4pZ53WM\/7bcAOpJ3Z7Myr3DcaslWLEoxK581ejXCm+rIiewaM3ot6kQzD1wCpfn4ttPvMxa4IB\/iLdP3sSR7fn4IX3qWlI8w7AEdqQwSP8oaPU9qRpG3L+8h41HB2G\/2ERZkUFytNraoEgP3xLy1u9l5KZ4dOxaEYsAsVwxtkW1O9\/DyteKaJ+rRihScONdZWwBSrfefIotm3\/FoYJyvwt9Sh\/+wXklrprhPLnDX2Vt6hF4eznsEVclnlyBmKD5PGTlvr9eO\/FHBT9CCQtXYfoXkfR4hcMP3MhZj9XgXHzKCm4U96mlvpybHkhFyX0de3We98WvHBwOP76qKGtN1QrlrFFeXMRKcejbO7T2CTtGh2mL1sDozkHC3L2S7PIxJB+NE5soGNRKk+JzliDmdeVYPbz30r7b0A5Ba6\/yftX9\/vlWHNXPXIW5GCw2FcnN2JudolUhij6zln9UCL2sTyFKMtXjrUzN2VTl2Ld3SewkdqEvNRoWoeZ6Fc6G89tlSZ0kVwH+u1xGVWUvqcZ++tvxPAQOoD245dbAo\/h3KXeONXv3y\/CjJhA+IgunVInDwz\/K9LC2\/rFtTtnY4d+DdKup30r6oS0DtSuGnxgEMuU1qEQZddGYpxS387lO557O9ipztqozRTmZuO9r2jLpO\/U4GiLH4J\/W0\/tYQWOuFmuU3sa\/xRefcgH+19cjNwqZZoLqd38mIu5LymRTK3+7Y8+tzKneutGV\/antH5KXVWNXR6I0djUeBikoOQ8vxgd8Rwjb8S3B2y42WF9ttUaEK\/s\/9b4Ei7PW2\/SUOxV6lvVFuS8WEjf4dxunOOQw\/fBuR5IsfO\/XsB734ilueO+jom6YI+LJ68PlrerpRYlG1Zg4\/4W6fKavU7bX+f+GO2mXipvwtLw1yeH4+Q7f8QLHynThIeont3VgNzMXMhH2kPbZR0Sh+\/Kd7wE23buRy2dmK8MfvD7tZAaaTa2\/It6\/Q+HwrZX6fX\/dwv1+mcgqbVN+ONmnzK8PJ96hG9WQxMSi3hxiYV6oLNGUXL0nvjcAmw8JpqlQhePjLRY+NRuwtNuRjYEn\/5WfLhEHtmo7hWMeFqHbzcswGwKqO\/V+iBiQpI0mtFeOVbTuhRSbtZyIBezpZO4DvH\/Ow2x13+LTU\/PpWXmogJ3Imle2zJ0v9Wh+q2VWPl\/C2FIS0NSmA1lL8rzfqWxj6yEYsbUWPgdd+kBX7uatjEXlafkAHFJEiUhoB90p35Abes5r4V6dYCmV8dDmSX1DXTY\/SlU3Yx+fVvwQ9tC0PKrDejlBQ2GYwAF55P\/ouNlR8s\/X8P9xEIb6JjY\/SL\/c86t\/zfyP2flf5z0HQx\/89t0\/ERdPgm\/CKqvbfHdhUO9WTgbc1dsQ8PAeMyaQbUmbAam3ueH7\/9GdZLq96ajOkRMfQJ9XqI683ol7XmRpHsI+H39oKlYq7QnsQ5TME5ThBdEG8ouhy1kHKaMpflinsCs+3zwrf07aqjePzwHcPMdrXX2JdFGVmJbvR\/iH59Dx1NB36n7ehNWvrgBhR7WXR47VHy8A9t2FGK3h0TJLbX6d65lndHZ\/dmOh9jlQXzyFISelUdj566gjl2QUhfEyKhqjPTBgJYP8fQc+\/fEI2nIt9j477Scp9\/Dtz4RFN\/skcgHPg2ifop5K6meTcHUyS4V1CF+SvV4RwP87SOxE6diShjk2EX1oMhh5NetDuqCzucXlOUoy2rwR\/TvZ8GglLkqV6v7VbtRuGMbdnysvLd75wX8sTVRIreE4kZdA+q\/Ut6zTusZydIVpx4VOduwv+oo6uuLsOHFF5D9t2pqBC2ofrcaDZRM+Ycrs1LDKKOTiLjcdbK4BEdO6dAvkE6Aw2+Gjk6qmz4SnzuJSgoS9conMMGI4LPVKMwuQr34XPlGbDlAAWbouNZGXf9FLspFcvljEcqP0Uz1ldh48CTF0XrqldGJXecD+ppOiofxFqB6x2oUiS\/8sRwbtx5ES6AR45RLPS1fFWLjJ9WorglG9BA\/NOzNxSbRK6d5c\/bXQhd4J514TqCZ8gbN9YMROdwftuK1WPGXl7HlC3kZl5zSWpRUQwUdp3odQu+bjlCKwz53xmNhhMvedJsEaeDV6xwuf3RAOilSQtZdS\/WJicDgvhRwDykTHJ2qxocbyqlGUl2mk1G9U1125VBvqC62fPUedpta4B8cTZW2GTbaH\/1CIjHc34ai3BV44ZUtDgmfilNHUCK1C3t7asGRPUpbOHgA35\/SoM\/1NN8XW\/DyX1ZgbTHVe1rjovIjaOnbj9JZV8Pb6qzURqqxLacER3uHItqeJNB2F24oQXVVLU52Zt1b9mPb1iLPoyzuqNW\/cy3rjM7uz3bcxy5PWn6mvdb3Ztx5VyA0X21C9l9WYsNu2t8Uo9RjJMXT10WdE99TTt9DUw5tRKWoU\/XbIIcz+xc7zrsahZQ0BN7ulMY6xU+pHr+zm5bpj8FRVHbqF9g0Otx8pxGBvaux6aUXqAMo5vOgg7rQcpQ6+iIOUp3a9HoZGq4PRCQlY113FEVb6Zyi1sh10Zj\/v6KhObgNbx5QprFO42TpknC4b6HlJHyGzsLSV5Ub8NbEeu6lOJBOgD+3tCVIjsRRtdko9WhT2UTN2UMC9Iu7EYIuo236SXkpHPiBAogOrTHqrD1UywmB36jl8vaKv7E0k3SSqsemF3NRcioY8WnLsWbtX5H+AAXOy2XEUNlPyriKCtqO9RSkfWKxcM06rEqLBBpp\/zfVt10apn3Qng1npB6\/x6GYc2KTRq40bSOP52PkfCyfQb38zyjgdmVUxCMNQqcq9YD+pMsMPgMw\/PgmrBCX74LjkbZsDdb9NR3xgRrPJyVPWqheKi\/b+VGDwAfS8Vf7je+zHC71OpHrbMvPDq2t5Xs0n3ZOElqTke5ad1dq9e9cy7pKbX+ep6JXXsZ7Jh0ipy3FKjoeS1OGw+ekSCS6EiO7lhKeOE2pjJfLURfxkxLhJKVOrlsn33bg4zccKH4ZL79zFLqR07F0JZU9MwvDrxMplQddqQvHRSqog1a+Qti9xI9KllLn7cdC5LykclmcecTJ0qUmXQrQ4eibT2Pu7NmYPbuQ+mMdk06A1+rcBw0RHDXUm5HfSQz9qQX+bIVFed\/9NNBcp7wUwgfAh5qktV1UkBOC+t1zaVvF9tr\/xOU8Sub8G1D00mLM\/eNsLHiJ+l9hSZjxsPLRS+1YA072HYDA1tjqD921yrFw9c17eGGBsm1zc1BPEbChXvxq5QgaTuowoG0h8KfjiF\/P0J7Zjx8oMfT5rVEpIde53uTbdfv\/RQfBxw9tS+0n3wOunES7ZO9qPC0uddwVjxnn1AN21YLKDY71gP4W5GA\/9bBvbCpC9uK5+OOcBVj9GRD68AynXwGdL3EzfVJIC0rEpTXxvdIlDnfkOqu71qG16W5En94ebta+UOuuVv\/OteyyQbFsIHXq3noaC54Ql8824Xu\/WMyYRQnKOcbIzujXWwPbGZeDKNrFqUpsdKyT9Cfu79L5Ux2oehNPL\/ijdMvCpuN+iKV6RGvpXlfqwkAd7QV3MfM86UIxfdF0DG8pwornt3RtNJO14mTpUuv7G2hsNjRTD6pF549o6t12ZmRp\/\/5v0UIn1enjQ6mB+cBAvf3Wz22vwNFrQjEug3pgFCB97pyOKeE+qD\/4IaqVWbrXNlR8Q0Egbj5ixRdeb8D0yXfCp74SH7YbfdiPz46ehP\/IDCTdKbpQtO4PP4Xl82IhTudJjz+FjD\/Iz2qx0X5xpdN16w\/Eu+azanzf4g+juJ+B3vrEJMHw2xZ8u1\/cERCM2IfjEeFyOULnH42k\/1iEWL+jKKEkQ2x\/NfUg\/e+ag1gx7\/WxSAr3Q0vNZ9J9BSXH6qXnqkwfQvtRBLmRg4HaauXG7HO05wjq+4Yi9veirugQ+vtIDL6mFtV7lPIuki+p+MH\/TmXCOStBdY0GoRPT5XpD9T\/28eV4itYTQ5PwxH9kYJb0fBlKStpdtqQtsT9S4Rz101HGePYXNDRQPaM6Gx91My3Vkf079qPkqwb4jUzDdFFnxXqmRSPYdgRlH0ozOutw3YluOOIfju3a4w7U6t+5llHUiH5oOsad97E8Xz6I\/cNCLHpiinTpuuVnZbJwjjHSPX8YZsnxxSdmPsYNoeZVWSQX2e2pRm3vUMQ\/LsdPnX8s0pc9RW2SPnPfLCx8Mh1TRPts6cT4TAd1QSceeWNv649Gwq\/hKMo6HLF1V\/fl+DPcuQKTYCQtmo9oUKL0nGui5HDslfoo9r1rLAum+hJ\/RTzH7MLiZOlS+\/BtFNboEJ2xCuvWLMeU\/idw0nWUxp29a7FhdwNunrIQa9atwpzgZtSfUspatiE7twgnA6dLz9dYNS8SmgObsOJNtxftukELtv2fXBT9eDOmi+cHrZyPSM1BbHpxk9vLhOU5Odhiom2eJ54nJJ4JpEF1aRkaqEG\/\/HYJbCFp0jD8midpvU3b8Kb0i61ylH11En5RT2HdM93\/9JvOEetXjpbg6dL6rfr9YJz8ZAPWSr86MyI6bgriHG5\/EL92WbNsOiJ1R7HlP1\/ANiW2Fr2yBeUtgzFdDOOvnI7BJ0uw4XX5Al39mxuwrcYH0U\/SflyzENG6I3gvb4v7y62ddXwTNnxYC59Roq6swcJROhx5\/01sOa6UXzL12KJcdpXqjaj\/A39ARRkllcUvY0upDcGPijpC6xyhwZEPaZ3Fx\/aW4asf\/RD9p3VYeh6jjtVvbkP5T0qd\/c85MJ4Vd+PQiUjcZ+fyHZW5udhSpUGkqLO0nkmBDdiW8zLVCDfU1t1udBzi48bhvi6NzqnVv3MtC8TwUbHneJ9Md5IvXX\/rLV+6Fu3iRmoX722ghO5cY6RbJ9GinyrvB3E5+cB7ePtDl6Tn+Bb50lmIHD\/XLJsC\/4YKij9t7TNWtE+KXdMHnkTJuxukjo5bHdSFllO\/QWS63NZj+9ej6O03UamUueWp7ofdh3Fx8Ygbrby3GxmP6EDaV4Hj8BRts\/1y97rV4lmEDsc+bCRi6fOxUj1wjmXGKHEDv8t9XVehnvHoAHZBiJP9uHY3ObVIjzto\/5N1dvXwpwRjOSJPbsHiFYUeLl21kX767PCTZzunnz6zS0OXhKVrjKhXeYRBt5J+6u\/m3rCL8TgQx0cbKJO6y7nEynaPhrjYLvaxv8JxssQY6zrlmTg3Ui988SvndZGQXUJ+E5\/CU0OPSPeyXKhx58vGBUyWzsWlTpauqmPfDThZYowx1vNxssTOAydLjDHGGGMq+AZvxhhjjDEVnCwxxhhjjKngZIkxxhhjTAUnS4wxxhhjKjhZYowxxhhTcUX9Gu66687pka2MMcYYu0B++snxv6LeM\/HIEmOMMcaYCk6WGGOMMcZUcLLEGGOMMaaCkyXGGGOMMRWcLDHGGGOMqeBkiTHGGGNMBSdLjDHGGGMqOFlyZ0QasrIXIkF5e268YRwdhRCt8raTtCFRiBnurbzrobQhiBptpD3E2IUShJg5zyDryQSMnJOFrDlGZfrFk7Aou4vfa0Tan7OQNkJ5687khcheJEemzi0\/AQvVYpnD8tR1Yt1YjxKUnImszFRE9VMmXOV6yEMptTA8mI7EqAB4i\/TvrBXmyu3I2VgKizxD14hkabo3yjJWokCZ1GW3TMMz84xoen8Rcj5Wprnj8l0x6SuQcH0Fspe\/hRp5jp5ndDpWTO6Pipeex1vfKNOuENqIFGRMNkIvkmBRz74oQPYbZbDKxW20kUjJSIBRmhGwfFeK\/JfzUSlmdCmzmitQkJ2HMqnMgMQnEhF1k5xKWr7Zhby122GyipNeDAKkqY6sqNqUidx99JKS0DEzEhF7qx7aX6qQ96dcVNBkcVKNGSjN7MR6KA+Za8UcPY\/+4UxkDm3EW8tzYZuRhbGNy5D1brujdEGJ\/R55QtnHnYopIiEZi6blWcj3tKqU3GTpS5H5Wpnz8vsFwDA0EpHGUAwaaEXZAvv3UL35sx6lVBfKpPcuHJYnBMWmIXlMmFy\/iaW+DDtfewulJzpet47qmXPbsaCuNB8571a2bzuttIh8bAmmhTaiWOw3aR+G0VRXdXI5DEhdlgqDUy9MKfPYruiNSllH2xT0QAZSxwTJ5x2bBTVF65H9dxG5Xc5JVjOqdm1GbpES1SdRkhrr3Jrty\/S+yQBjZCSMoYMQ0FyGjBfd1BiKIWlPT0PYiWJkrGgr9x6eiLTJEQjw1qDu4wysfF8p8BRz7lDbp7mwpGdivK4MK+k7zEqJO\/xQyiuEfnI6UkZRpTxNFfJQDSy\/aqEfmoDUB9pXgYvmm7fwfEYHiZIbxTmLkNGTEyXh4xwsyrjyEiUgCqkU7LU1+ViSkYEl7xyDdjjVs3uUYgdRMykwaY8h\/9kMZDybjzqfKCTPjHJbdkxrREJrWTKifOqkssyc7TD7jUHqDDF6UICV9J0ZDn+ZFJRt1jpUiUQJQUj4X2kY69+IorwsZCqJklCwwvlzGZnbUWOzoq6qZyZKQmSQHtaaCjkBJTZKbK8MNjqmyktPztqUF20SZi9E8qggOtOfgZebqN7+Ew6U5Wkj0pAaPwjWvblS\/c7MegtV1xiR+Hgi9NIc6uumXs9c204dvEclu207diK5Sgh1iOH7cpHpuHz6y93fCJhrlERQB69eNpjed5xHTho9tyv1MtVt8k9E8riBsJTm0HplImevBQPHJSPRnz54\/2NIGamF6c0l9LklyP0CCHlgMiYom6P10gANZchyWLaU9FJym\/a\/aX0C6VCe9vJwhqYk8pEEhPVR3irE8Vso1vvgO1hJ29KaKBGPMUd1n1pQfKgO+O0gSkNZr4CAgGeV15e93r17K6+c3T8xCcHe1MPOfxa5H5Sh7LphuP9mb\/Q+XY\/d++uVubpgoBH3G3qjbsceHKa3orf1eFoKEifGIe6+uzGkdx0OfN2EM1LvgSrYnCRMfCAO9w4bgt89MA2R3juw5ysxEjATdzTuRsX38nzpNF8CzRd37zAMOFUBzfjnsfi+G6GBNwbFxeGOa3fgdHQWTeuLHXvEN9N3U89lwWPTkDBB\/tyNP1fi8+9OS2XtiJ7Xv4\/Hnbc+gGnJ9yOQvrvKLxEZ6WlISqDPj6V1v+YYyo6coJlV1n0I9XpS7sWQuxMw7cFw9Kb9UGvwtBxxueNxPDYjUVpO3N1D0OtYGUxUpHX6zL0Ypm9GxYE6nJHWMwZ9O9q\/0nxjEfzbaCT+QV7+3bf2wrFyE8Q3X3Qj4vDg8LP4YtXf8PkZ4PR3VfANj0Ow9nsUf+7c7xoWMxE3\/GsHNuyh+vdzLTD4Xhi9m+i49kXcFCPOfr4KfxMLobKq64chLuRafF\/8K+6c9DvQF0hlZ5q+wZei7La+VPa5S88uCInJcehblYc3D9HeuGc6ZoafwI6sV7H7eDPVTc+CHpqOuD5VyNv05aXZjxfBkHviEEBtRbT\/+v27qT3SRHHJSdTriAmYljhRqpN39PsBnx8yS\/vLqR4qbbTy+BlpdGHmsBtx58Q\/YJqoyw5l0qjE\/HSkTU1AHLXhe4cNQHNFJeqoyL4OJ4zznNv5zYGYmDIeNx77BJV0XgJikP7XDNzb9y2sefkTqU3g\/gysmDcGN7TOo\/hqT2tMc9zGw3t3YPd\/70FFrzDEOsQu0P\/vKaqAxyjYujwtJvw+GcH\/+ggr39yHZppyprkOX54ehHtHBsH72FvYsEVZpqd1c+Fcz4bh3ok34IedG7Dne9F2KHmINqLvCRErlQ840kYiNTUKZw9\/A41e47A9DrQxSEocgqaPX0dxjTiCRsRMGoCfyorx+T\/lWWQG3O+xXXWlzbls0\/3jkTigHh\/l7KLO7Rk0VZ\/FoOhI6P9nB37QGBDw4z68utNEnzqNHw75InzCEPQ2i\/MBEB41AeG9avDOXtetouNVuBuf7KXEKSwW4dfWtZ4L7LQRqUi9+ywOH9NAr7GX6zH5kQfR\/8sc\/GXLl7D8LM8rM6rEHJdtdN2nA4YhdqgWZnf738Evv\/yivOq5esTIkpz9ZyK3XLyjrNtfDKfaYK6rEhPOz+0pSJkUAtt+0dui3kOhGf3vT0WKuHZ\/O\/UiRvnCXCT3LNYf9kJ\/l2xfclsiEsR878i9jPwaLYyTU6Fdm4mMTVWgfgqKKaN37AlIRlCjGNMf5kKxfOqd7LchlD5n752454v+vxZh\/SuvoeDIGDyWEgXv46I3R+te1AS9vefT0br36Q\/t0XeQ88pbKNaqLGfcZIy\/Fah4hbYlMwelPw3EmGTREw1B4uQo+NZ3MAqjtn8legRc9xnW\/4mWsdUEzS1RGHup7pugeqVtbkRda+\/aCttZQNOLeoku6hot0N5klK\/394uC8SYtGs0icAbAu48VjcfbuuhW0bPv5UUnUw31jJWJCut3jbB698cg5X2reyjY+tRg\/wfyGGTkHQHwaqa6vyQb2dn0l5WJlAh3FSUKE4Z6o6aioAePXmqhochm+9XNeEofb9j2rZdHAkoboR+ZiOTbabq9Hu6T21oetQfRRuXxPlpikB7\/fJ\/ar6jjJ\/rDOGosfYvzqIQ0gtiXeuzKqIRdhWs7f62UOhO+CIoIkWe4JwwB1EEwFToM23xahJ1FxShRO0N1qzDoqa6ajxc7XxaTRh6ep\/2hvBc6tW6u9awOTRYtAoZTHKF33vcYEaBthNQk2qF6PGM8Qk6WIu+g5zExfXwkQk6bUPyxssa3Ufuk\/4VMbWsDabFBVKDWrrrQ5ly2ydCftsTShANyIVHWleqe6YNcrNxUKr\/X6hE53QC9xYQKaRQYFGu9YPttpLye9LfsyUQYVOO6QlxOmxACy6d5OOCYn2ijEaK34ExAatsy502gLpWgFnOctdunrFWPSJYcBU1Ox\/gQLWzHS\/H+38\/\/gBsooPk2VCBvaxUsFEZM\/1iP8hovhPwuhsqox9VUhe3bTFRCZe+a3F\/XtVip3+EF72AjDHobSt\/IQfbGAlQqxZ4Y7qTlmyux\/h9i+RZUbf0IH+01oVH1hjszKtfvQuXhGpijwxF0lio+BWdp3beV4FiznoK02K4O1r2ZPre5DKbDdbCM8bwcnLLhjIaCYGg4BXwT8teuRs7bJTQfzUnt0avfIBgNetiocee8tB4Fh+TF26ntX1kdKqjnJu4fsHxaRt+rhbebewguCqW1eA7fbSo2f4TKs2FIfJYC17OJCGkuxTtvOCTvlGS1V4EqysT0Q1OkJEurj8S0+0Okk7IzPSW6dGI\/tBPblSqu96YEwUeDY1udE3L7yd5O\/zAF1dPV2NkNbeNypQ2ZgBA\/G5pq3bSw5mMok9qTqPN5qGjwxkBjSFs9pHYg2lrFxkrUaQMQpiTm1q934q39FnpBdfwwtZR+ekovgMpt65Gdk0cJFL05UYqKWiu0\/drfWeasCmU1FvgGGqXLW8awAGiPm7DT8ZBYK7Hrg9KLmNCKE6rysiOdWLf29awCm7fT8aCO4zJxIn84BNbSd5DnEg8kI5IxfrAFpX9Tu08mConD+6OmfDPtTYWlDjXfmFD2hkhqs6Q2ECZd+lJrV51tc+23SeokUdKh1pLEqKRI2qYZNajevrn10vjxmhoc\/2I7sjKpEyji6g20PVNFjVJnTFaSyA9c9swd\/SkJpWTx5xLk0DIzc2iZN41B8sPyBVSJ25jjyM0+\/fI4zDZfBMTK93NdzXpUshQ0eSHSRwdAY6nCO\/\/VPT1nqUGctjo0Wiv+2XwGGp23XGa1wG3nyFF9PnLeKIc1aCxSFmche0kqxg70opCs7qbrqYI6NcYqFL+7HWWqVxYd7isQR7d3CBKUnkZ2dop0ndu7v6FT696aFKgsB5+ux\/ptNdDe9RAWisRgwTSE9xVpjxn5r+ShvDkIY1MykbVqCVLvC4CXy3Uftf172VGCDa1xB\/RIeOIhhFKClCuNOOSi\/GwEZmWMaQvCHlpeKSXRFdZBUpKVtXg8bqCeq63ZQimjgxHiRk1KigudR05bT+hUs0rfqISZerS3DpXLZEYkDNXDfGh7WzDscRKQnh6F\/v\/8GJv\/oUzyyAzraUDXW2nLfpHIbK3j4mZ6SszF6KkKS68AjE1donwmG9Mc77FRUbWvBha\/EMT4hyDMX4s6007Vk+6FR50ice2tW7ipZ\/50XBJDYVHuh1ryWjlsI2chY5zr\/jIidaKYLx8FKnFOPzkSQRThP3NM+uuLkfdSLgqqRVJrRulrJTTHQISMUm9XnWpzbrZJGrm8RuM2sbKTr3osQe5eC0KTM+TReFL1PnWYN5fCTKtvqaZtPdgIb0qelbFG90akIuE2atvveEoi2zqWVlM+So9QEhgYqZSRDs72bvepdTt20roHTVqGhZOVaVepHpMsOSZKb2Xltt7Yeb6kBtFbK\/UAZVrcIIZQbS2wnG5xKfOAepr6EyV4bVkmFi1QbvablOj557yK736kRu\/UGL0RcFtQ6y9VOiRO7s20Pyg4Od7At2R9ZefXXVBZjlZPSzicj6wli+TeXL0vohKTYRDrqm9EydrnkbmI5l17ALg1AYmT5EXaqe3fy05tEyx9qJfVuv\/10PZWtsFJJEJuOoOaPfmokkYcqpBPPTTNwNup73ZMuhzhO7DtIOpp+\/HrGTk5tZYhj3qi0j6muvLZWUoafzjW2iMV+2fCPRRSD5fQvlYmEUuLDV59blAN3NoHqGd8jQklWz331698BcihXnXTDaORPE6Z5JF8\/FpOW+RjWF8K15tdV36gzOqWHonJCRhEx0xKimn+vEOdDDyHSmBq8kVIfAyC+rtcgrsk6tB0irZoYIxzHRL3DWY\/g5TblPed4LaejQhBwJkalEkjyHKCUH1cg4G3uYx9ToqBwVuDgNEZcgIq\/VIrADH0uu1kHYYJQwPQtJ8SAmWKEDIpDQunu46lKtTaVYdtzv02VTbQlnj3R7jyXsRnjRf9Q\/HSeV3EVYEy1FiV0XiKAilPplHiIxV2WsIoiqq9aV9kyIl5yu10pOh4ZYtHQ9RZ0ELf7ysuKbfTQcyRuN+n4ib2hFHeqNm6pP1tIleZHpEs6ScpidLZRpgONiHggUQkPkh\/8ZGdSwZUVJab0OhnRMrDYWKQE\/pRKYgIohPhPsrgK2qoLBzJ8WLYVouQB0Pcf9\/tCUidl4Zk6flJNuk+F2f0afnispPKg9T71BuQMoqCurT8NMx\/NBGRqpfhHOwzoe43IRgzM0pKsLT6KKQupt4NnWs7ve6CynLEL1rSn0jFBPFAKatjwDcgYWYG0qbKz1OynRE3YLantn8vO198TT1BPQyP2O+7SECYnxV1B8XlniBETRoDo3RsqmBuohA\/YoL8nK1+YUi8YyDwUyP12yrxdX3bsL+4nynhdl9YvzvgfFmWPhPzSCYSQlpQucthX9yeTPuHgu8nTiENxf\/PhDMUieW64o2oRwzQU+\/6a0rMZWFIjgiik1SxczDsgUSvuupfGupVO987JOkTgEjpMouo8ykw+tExqTApbc2IxyaJekjHNjQBGYvTEOUnf8w9qrFimPF0IxpPi8+MQeRN4oB74tjOTdh5uJFObmHwdb0EJ2gNGDMpSrnnpHuEjU7EhAhPrdyM7UVVsAbHIHWcvA\/sl6S8jlfSuspzSVTXzUM9O2xGozYAd0nxRuyrRIRSk7A0ivF\/h7bzwcrWRFX6c3NPp\/aBsQjtU4PPtjkn\/aYWHbWrGKRIcdYbxumRGIjjMH0il0s8tSvBY5mHbdpXA3OfEERR7JTrkxFB11Diu4+2qzd1qoZGY5q0LlR2f7h8j1a1+CCtd58wqodjpPigDRmDsbf5wlJboTrSX\/Ciw36hPykxP15Mr1eioL4Ylce1CB2fiDBxOTEkEVGDtTDXit8JdhxzPO1TBIjLe42o+1SkuFe3HpEsBeh95Usj11BP7Z4oRI1S\/kYaqE9yng7lIe8DEzTD07AsOwuZEyn7\/sd6rP9UlOXjrX+Y0T82nXpfWUi9Tev+V0ifrkdB+RkEzVhGvYAspA\/3Qk1hvvwclH3UQE74IpJ6CwtdRl2wj75nFyV\/EzOl5aeP0KAyP0d1eNpJPfWy88phvSURmVliiHkC9E0H8JlokZ1dd0FlOeatm7Gr9jpEPZ5F27YMif4WlG3fTI2wFOvfL8OZW1KkexSyHjfC65tdyHftqavt38uO2KYKWIOU+y4eGgTL3s3Ik27aDEdk7ATESJ1JE\/Le2IU67yik0\/7KfjYNRi8TCt7Ik4Kh47C\/uJ9p0E9l2PxmWz\/WOEdcqp2FsUFWlG9c6XBfhxZjxoRCW7Mf+a73euzLw\/p\/UF2ZLOoKHYeBFpRuXt8a3LXj5GC4n3r2V7VmKzQjUuX2FOUL8ycF8r4UbW3bMWhHinpIx3YO1VdTGSoa5I+5Z0J+YQUsgXK7WPZIONBEJzB3I7Zu2rn5E+oo0L9uL8HdE4uxsTGI7uLog5qQERQTDZ4jorU8l\/ZBHbxHy\/sga\/FDCPulHHn\/5XLZR2XdPNazw9TOC+tw3T0i3sj7V\/N1AfI2iRbh2HY6Qh2PEUGwHtqJXa477R+vIW+vFSFSnF2GlDvOwPT391vv6\/PcrtTLPG5TfT42Fx6H90g5hqaP1KLm7\/LlQ\/PWHKlehdtj\/n3eOPYB7QMp6RTxoQDHvGOl+JCVLuJpKfLfPp+2aUbB2gJUexmRJi4nUrwV+3ezMhKmHnNU9ilr1UMeSnnpaLVaWFtHVMTjAiJh2Wz\/Zd6F4f5BaQ4PJ+ykS7HujF0MInlP9D3g\/HBX8eiAEZbWh3Vecv7T8MziAFRmrkTBBT9JiYdKToPuk0XILlQmMdaBsJnLkBZoQs4yuaPnCT+Ukqm7ZRoWPpuhDLV6I+oxIwJsZhxz8yOc7tTuQWnSX9cSpUu17oxdDKUbN6PUGobHMhLgq0y7rGj1iJocDu+a6vaX4C4EQxj0tmqUcKLEOsmXOhcpgWbsUkbEr3Y8snRe2j\/SvuL9bOSVXwljmVfyujN2Di6bkSXlP13TXINda7Ox\/eI9H4CxC+JqGFniZIkxxhhj54wvwzHGGGOMXeU4WWKMMcYYU8HJEmOMMcaYCk6WGGOMMcZUcLLEGGOMMaaCkyXGGGOMMRVX1KMDGGOMMcYuNh5ZYowxxhhTwckSY4wxxpgKTpYYY4wxxlRwssQYY4wxpoKTJcYYY4wxFZwsMcYYY4yp4GSJMcYYY0wFJ0uMMcYYYyo4WWKMMcYYU8HJEmOMMcaYCk6WGGOMMcZUcLLEGGOMMaaCkyXGGGOMMRWcLDHGGGOMeQT8f\/SxTjcZiZJGAAAAAElFTkSuQmCC)","a6be8421":"![Screenshot (134).png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAiYAAACLCAYAAABV01JfAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAhdEVYdENyZWF0aW9uIFRpbWUAMjAyMTowNjowNyAyMjoyODo1Menw1rgAAEFvSURBVHhe7Z0PXFRV3v8\/q5LNSIMBNqGEGFKCCemkoA4qKH8UFC1CXaVVTFzjUXlc\/fmjLS1rY3u0fpgPtWFqG7qa2R9KW\/+s0AopPIZ\/RoMMTSKMnRVIUZhsjOf3PfdeYBiGAf8y1vfta17Mvefec88993u+5\/M959zxN15eXv8LhmEYhmEYB6CL8pdhGIZhGKbTYWHCMAzDMIzDwMKEYRiGYRiHgYUJwzAMwzAOw2+Cg4N58SvDMAzDMA4Bj5gwDMMwDOMwsDBhGIZhGMZhYGHCMAzDMIzDwMKEYRiGYRiHgYUJwzAMwzAOAwsThmEYhmEcBhYmDMMwDMM4DCxMGIZhGIZxGFiYMAzDMAzjMLAwYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh4GFCcMwDMMwDgMLE4ZhGIZhHAYWJgzDMAzDOAwsTBiGYRiGcRhYmDA3jqkrsH79eqyYqmy3SRAWrVkvHSs+axcGKfuvjfgVIp8ViFe2GYb5dcE+4JcFCxOmEyjEmkVzMGfObpQrexyRoIVrydmtxaLhyg6GYX5VsA\/oHFiYMAzDMAzjMPwmODj4f5XvzK8VMQUzAiiHF7yc6W85ffPyAi4ZkLloDQoRjxXrIylVoWk\/MXwR1j4ZALWUIFO+Zw6ef5e+WKeV78ac57cpGwI5X\/djmVjwmpTbNSGGcSO9yqncVH6lkE1lIOR0+TtQD8NbC7DmoPhudV+NaV5UHxHNe5toVX4biLq0PNeyrog2y2J1Xn1TnchlBN1PyYDGc8uxe87zkErS5nkM8+vBvg8QU8dJCCDfJmPRfm60D1B8XlWjDxU0+QDrchBN+clp\/U9nYhNmIilQeM1G\/2BdxsZ2DumcnjWN\/pruv9GHK\/cuRnzkvBQ64sMcAB4xYWScybAPzMHucsDL9Twy3zKg3rkn+koNhhqFaFxzlOkX5wAkrYhvFh7C2EXaHsuJGWpMlAZqQFKayM8r8rrXk7SNF9x\/kK8l3UOEPN8sGqZwWLulsos0NQKelNPiV4jG3pw2Z44iEt59XtrOPFZPG8I5KOntNmi6Z+HMGutDfFqJEhvXE\/VI5wlnI+2nelQHJrVYq+M+Yi38vqI0UY9U6hBRj8p5wgm1dR7D\/Hqw7QPiV5AYQKP\/yoThkhci1ywiz3YzfICM0AlSnpIfDcBMye81TmErH+EvySdatle1z0xEkTSRp7nJV0WIO9iG5xvPoY8okzpwZtP0UrO\/bvbh7lrZP8wkUdLkV8TnNhAlAhYmjEI5SpQRBtRUKp2pOzwSgtGfFHj96QJl3zaUCP3h5YdFQ\/tT06FGu8eGsU\/1owZPDY06SmmRq9Woyo2nHHnKSMG3PwhnQmUfHoRgH3FVckTKQtvm0YrG45Q0IbSum29x\/hL9IWfTehFwPPzo2vXHdimRWjNBSj2eOqRImHdL6G4omwHNZVLjFHaJ53NwDRaQgxGjIvJ5dFyEfG82IzyG+dVgywfI7Q4imJJ8QMsRixvvA2Sa2vnBSlTRH\/XdfcWWPMIplaON9upchRLpHhQxoggJea2LfF6LERCi2TfX47xwHIR0vcZrSz749lonw8KEuak0RfPKp1OmGZpGexo\/8jBu4WsLpG0pKlLExPWN6DRGRCIqaxQMikMY7kFu8jpoEovWWERzyqdxCothGAXLUUzxUUYyb7wPsIONkdFWXDpP4Y0VJGaEGGn0pfIoTkdoHGlRRl+eFP7o9nhziYUJY59Tiur2CZaGPhsjf5SXYI1RSkFPSfgHYdEIiwig\/Dx1mdTWR8hDpreOeESJiOLSKRQcLERlDe2iaCnKzvSG5JykKZIbhSxQWjiQgwU4RWJFHRjVyjEUKvXYf6hSU8poU\/lXNkaiLGg8Tx7uZRhGxtIHNI5ihtgdMbjxPkAmaGFIc1v26imNcFYZhSSy8pd2CNKKkKZxNES5t6tCFihiiud2gRe\/MsoCSjEn+jwg1kGAoos9Hlj7ZH+cEouvoKwlUQ63XEBluZiz\/pgBVYEB0kJNm4tfpeje9mIuQfNitauj5YJSwu6CU0Ipf3vnCSfQopwW922bthapNeZovfitsT6EA2u5SK25LpQ827q21eJXOlN6jvYlDcP8srDflq3bXXO7vOE+oJXPs2zLLctRTv7SnfxllZSupIm1MC2uL7AsA\/mMY1UICHQn37EJmCYvmF1wKLjJX1dG0D01+fC2yuLYsDBhGIZhmBuBIkzEon9+O+7a4akchmEYhmEcBh4xYZiroNXQrwUtp20YhvklYtcHlJdDeleYfcF1wcKEYRiGYRiHgadyGIZhGIZxGFiYMAzDMAzjMLAwYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh8Eh3soxGo3KN4ZhGIZhOgOtVqt861wcQpjcddddyjeGYRiGYTqDixcvKt86F57KYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh4GFCcMwDMMwDgMLE4ZhGIZhHAYWJgzDMAzDOAwsTBiGYRiGcRi6enp6Pqd87zS6d++ufGMYhmFuF1QBcUhZOA0DajQY+38noteuAxiwNB2zBp7DvsOVylG3jtimaw\/DknS5PCeVNGt0c9OwUHfeRjl1SPrTMoRqduHAV8quFqgQ\/MRSJP8uDhNHecHZJw4JNvMRiLwWQndxH4q+V3a1QdvluT68p6di2cQHcPnEEZT\/qOxsg59++kn51rk4vDDxHp+CxfOmITY6ClERI\/BQj2ocKTHiipLOMDcCVVAClv5HIuImCjsbjcHaOhQdq2htZ6pgJCxNRmLcRERFRWHEQGdUHy2GURzoHYqk+fOQYCsN3oheuBhJU2MRPT4Kowd7oaGiCGXnRZ4BiFuULKVJ5z3QFRWGUtSI86zSxo4YgDvOFKBUnEdI7eMpah+UZ9TYERjQ7QwKTimJDHNT0WNeyliov8jE2tx7MSLECSU5RXAeGQXPHw2dIkwGNF1b01SeCiXNmt66cfCs3o78EutW3hu6sYHo\/n0bwuTB6Zg9yRPG7S\/ghbcPQNVmPgKRlydqtuej2KI9z35c9gNRo4fCR1WJE1\/XoJfdfBSsfMzowb1QV2RAhZR3S9\/UmHbiiAENgbGYGOwMw4GTqJNzsomjCBPHnsoZmICESG9oUIuyL8nBX9bAc9R0JI5U0hnmhqBH4mQdVGXbsTwlBcvfPwPVkFibdqafFQud6gy2P5eClOe2o8JFj+mz9JTii4QnYtGvNgcZqSlITdsOo6secVP9pfO0j09H+H21KHwjFSmpGSi64ovY6XEQPwCtnzUdepcKKc\/UjJ0wuocjcaaOUlQIn5eAIFUpsqTrZaLwYh+EP5FAVyM84jA9sg9q8zOQmpKKjIO16BM5HXEeIpFhbjJD\/eGpMqL4gzJlB2BW\/joK7ZXH3GBSvl0FGhXUqEbF57XKjvbyMcMsJXsj9j+oPfcoQ\/bL5AdSliPzsxpoxyU2+Rr7+fi38jFnVDo8NjdcSrX2TSItVvJNtcj9kuTZPf0QIB3p+Dj0iEnAxDiM1HaH8fPnsHpzIfK7DcBY317oecdl7D3U3BiYW4s0fJuchPhYy9EFDZ547o+I0R7B\/i9lTe4\/ayX+ON4NR9wn4E8JI+A1OAoJIvKXzukC1bCpmDszDhMpchCjBGcKS9Epsf7QKDw6pAFHX\/0bjlDkcfm7YrgFRlEk8z1yj7T8f5wGh07Evf\/ehY0HKBr8sRzoPxo6TQ12HeiCwEeA07vew4F\/AVfqytHgMxrD3EyUdpIiuWgE\/mzAq5+coMQaFN8TiKh+XVCWY8bAScNAF8ff6OJXar7BibsHI+pBZ3yfexn9xwXiytHV+NBAF\/\/xnHyeVwNOUiRYOW4C4npV4tOMvSjDFdSUNKBfSDC0\/0uRXlvj1wxzo+ijw7iA7qiQpktO4oCwSdrdPGpRKY1EpqYkYNhdZThSUgPPsCTMT0qQRyZHD0avS0UwnA2Upk4mBAzA+PhpGOd1Ds5jl2HW4N4YNPF3mCb8TNOxYmjAG6Fz52Oe4jssRw2ar53bVJ7whauwMPJenP6nATWi3AqVh\/fJIyKTlyA9YTQGjIjFtEcD0X1XGV0\/ED1\/44WRjyplHTEAXcVI5Rg6dpIPnChc7idGJe47h6x1WW1M+QgqUZSjTCcNjceskU448uYafCrdx2WcO30CmkFRCLj3Z\/z19Uw5nwcT8OyzCRhyZS8KvhEnNjIMYRN6ovzTjcglnSF8jPA\/g52N5GOcETVFh4Yjsh8RvqlY+BHfO8mPHIGx12CEPayC0c7UloBHTDqAU1cn6W+Tiqypl4bWndQaeZvpBHwRN1kPt0rr0YVi5H1TDTffUGkUQByn89LAeCoPUtfeww1Ox7KaInvXIdEI65aH9D9SHm8WwXz\/GESPkU689XhooKqjCKgpWDGRzTXbnyUV1bVQ3aeDvidt9NRDd58K1cZS2shH1iuZyFZavcYvHMHe3VBxskDarjBWw3wP1Z2vipSd+KuF+dwZFJOL69ZVOqQJ03fVMGlc0Q8GZL24FOk7lASoENrHTTmPhLsrtYPaGhyTEwklPuQl7cytoD07845FclwATAczkfFBKUxiBHySL8yHxAjfcmSd7Abd5ESImF7g5mpGzjsZePNjYd1k7d5a\/Ouj5dIIY\/55V+hGRVALoIDniQTEPmBGkRh9fC4LpU6NIwO2yf9sD3L35UG00jbp4QrV6feR8cZW5Cq73MiR5b0sRh+yUPRTH4x5PBbaj1YjZXMxeYgK5JL\/S11XpBzdAfoIP2NEaYuY2oTsVSlYmr5X2SZO5iE3Zw9yPle2m9iJ9GUvIOuoskkCzVfb6H88oelhQvXZ5hEXUwP5g67dyMPcfrALY66SWpjI3rv17AddAHWun2ch47UNyP4SKN1bimp3X4SKqYQHg+HtSo0wXxlxqDuDgn+Qc6J\/pTtKKXIx4cwX+TBSO6otKYaxzgkq0dl3Bkor6MgwdNGWT2Fo8Efcc+lIfy4OvnX5eP8d2ZFKDE1CWno6Vs6LhmfNZ8j+WL5\/48dZ+OxfWuiT05Celgz9XaX49O29VAtFKCZFpH04QRI7Km0wpo3zlRywNd6TkzHBuxr5H4nzFOFEzqfZFTHMrUID\/ZB+UNUYJZHcii79kJQYCs3X1NkLUUK7AoJ84VZVhCxpuxZFbxtQofKE\/1D5FOPRDdh7tBRlwikQpq\/3YOvhWvpSiu0nqR311MIfAQju74bqL7KwvZSOO1+EDYYKqDz9ISY\/bWEy7EX25+2MsNeVIndLAUpPVlDJZCoOZ5Igoi90jax8Or+PL4LlpGtC18tN+dYeZcj\/eC8Mdhu2CsFzExF8RzH2vmfxBCigssmJszCa3eAZdnsE9SxMmKvEiO1vZKGwzhsRCalIe3U5Esd6optowJW5KDG6oZ9eSx2tN9zOFmOnrfVvpGw6IgJuGUpjbj+y0CL2qcfgR2Iks3HNR0MQZqeENwuJQ5kUDSrzvy7hSJwvR3K6xGSEu5CDTRNrTNKw\/awnYhcmkKOliO7tbBSZ+kliJ23ZBNxbWwNzXW2LRXtikeu8URqUbM9AtuJjzT9TLXYhQSdvMswtQzc3FXG+Zhh2b7c5EtGtvx+0V1q2cklIuwcjlYR7uvQJpThfBY2yJqpj6z3kEUa34alKHvQZ4wn00FBe14ddn1Rnvu4XLorOVSvfrhfxVtASPNa\/FrkbMlFgWW1t9eimndhzsBbek1ZiyWRlnwPj0MJEcryEqrs8OQBXNbrRH3N986Ij5lZDDkBbjbx1LyB1aQqWrzsGPBCLuEkizYi8U0Zo+0cgwleDshN7bo9ovrwGtT0ommjq4bVkc83210wwfO+7grID21EsRVLF2E6RiFOfgdDTv4Q\/JCH2QflIkzEfW48blUguAIHeGhiPb0W+iAZNRuTvL0Wtqzd094uDC5AlBAsJmpTFy\/FFA0U1586gcZBYMzIJieGuOPNuGjYUNteooYragcYVgcq2eDZOooG0FTUxzA2iaB2J61InBETGyQuxrbhyai9eWJePWvINiWPkhiW1p8p8SbhLtq58Vn8sJXcQEgg\/k6fZr7SXps9qZCtH3BR6kCBSvl4z50ww9dDC11vZllBJrzivouCmY6jg+2gyHhtkQv4bdM9NA0FnUFOrgluf5jBF252+\/3xFFlwecYilwKbsveVY\/ZGU7NA4tDAxFJZCaEy3R5KRMjcJqWO8SS+bUHa0cRaQufUEIHZWCpKm6qgbJDdxpWUcYdxRjIpeOuhczqL0s9tClgBHv4bRpEXAE3rpnjQjY+HvbkLFcbHi1Bv6SeHQSdNMxTDWqOA5NBpiqQh6+iPuoT7AxWoI\/6BxJxEyLlxJ05FIcYXZKASGAd9VmaH1i5PzUWmhH+ULjfki\/mW5uI3yC30iFbG+9TDsleecVUFJWPKYJypIlGRaiBKJQ2Uw9vCF\/lEx9SMclg7eXSpQekhJZ5ibRi3yvzgDk6uYXrGBWN9QmY2svGp4Rycjljpjw\/Ey1Gp1mDfJX25nfrFIWZYEvbt8Sscw4FhZLbRD5yHWT8oF\/pNSkDpXj7YmSlQB4Ygd2UINdAjPIVQ2LTVmassJejr\/bCnkFWNt4BeKuJhgZY2dDT7fiYKzGuimT0OwyFeUPTIRuj4mlH5uscZE8TkB4hArxHRu0nAgP8NSlAgM+LqyeUpYrH+LHegG03fHKIXwdKWrtXyTyJFx7KmcL7OQtZuMmarUe6A\/KcBaVOzfgg2tFgUxt458bPioAFfuT8DK9HSkzdeh2zd7sb0x6jHtQUm5GeazX2LnbaJL5Hsqgsk7TrqnlY\/1Q+3BLciSOvhABIdFI1SakSlF1jt7UaHRIzlNrDFJgq5bKbLfyaIUymPDXtRoI5S0BPiaCpG1TnY4e9e9j4LL3kgQa1PSUhHXhxx71ptodEfix5XSl89GhLcJhW+vRtaX8v6IUeTEu5ADm07pjUPX9JGGYyu3Y8vus9AMT0ZaehqSh6tQ9vftyL71Px\/BMDYRa6vyxdqqqXHwPrQBG3acgWp4ktzO5pLvKC1AUZVycAcp2rAB2d+INRYrqS2sRNIj3VBaWCQFsbbQj4lA6NgQmyM79qg2AiEp1O6oLeu6leHT97Llhfxt8aAO+uEBdqaUypD931ko\/Mkfjy0T7ZnKPkaDio\/fRKZlMPFgCELDIhDW6ucKdIgY6gknJ0+EpjT7gnRq+0lDW04Ji\/Vv\/S4WYMumq1ic60D8Jjg4+H+V753GXXfdpXxjGIZhbgs84pC6TIfaj1Yi43YZHb2JiOBiWo+clm\/YOAjipxuSvEqRsVIEUW1z8eJF5VvnwotfGYZhmKtHjNh9fAaa8CVIDFL2\/WoJgL+HGSUtpmQcA7fJS5DgZcReaWT39oBHTBiGYRiG4REThmEYhmEYa1iYMAzDMAzjMLAwYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh4GFCcMwDMMwDoNDvC7MMAzDMAwj4BEThmEYhmEcBhYmDMMwDMM4DCxMGIZhGIZxGFiYMAzDMAzjMLAwYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh4GFCcMwDMMwDgMLE4cnHivWr8Wi4crmzeb+KXj61fVYv349VkxV9jG\/HtRDMOPZtXg1eRoWrbmFdmcD9YAwRAa5KFuOTFCn15UlQQvXYu3CIGWrg6j9EBYRhNuhtltzi31kO4j6X78iXvpuz4av6Tn9SnD4X3518Q5BSOgQ6Ab0h0fXU9i4ZA0KlbRfB6LRheD8Wwuw5qCy6yYS88e\/IKZ7Htb8eTNK6pWdNxXh1JPQ88AcPP+usqsTUOuT8PTUIHioaaOhHpWHtuGlzDy0qgJ1CJKejkeQdCBwoSwHm17ZjMMtDlQjJOVlzBpUhd1znsc2aRd1+H+YiTBv2UmZL5zG7v9+CR9+Yy9NPPtIeEl7LamHgeyhMmI9Ilsnov5YJha8dm2tJOwPaxHvUoBVy08hZs1EVKU+g823xA6I4Yuw9smeyFPqLHLpXxDvWoCXUt\/GafmI68fqGjcGYcPt1ZUaQ367FDNDveAiwkHzBZzelYGXPpLvzJ79ddg2FUSHN7FqGZ7521U8uIgl+MvUXij48zK8Xarsu224tT6yPUT9J92dhznPb2tpw1a215Hn5BO1CLOjAzr87H8pOPaICT3IF5+dhSn6AHi5q+HkpOxnbhrqbk4wV526RaLEUQjDU+T41ac3Y\/GcOVj8t1NQB8XjqVAl2YKw+SRK1KeweckczFmyGd\/eHYbZ88OUVBm1fi7iB8nCRUaNmP9MQoj6K2RK561B3gUvxMxLgp\/dtG14nsozx+KzgDoyc\/23OE4OeNvzLdPmLPgQp831+Pb4tUr3IAzyUqPyy82KEDDTtaQvncLuVb\/HnBspSm4q9utKPTEFSaPU+OqtxfSsFmNN\/gV4TUxCkr9ItWd\/HbdNS8w\/X+WD27Mav59zO4oSx6Y9G7b7nALJPh7vj\/N\/X40Fcxbgma3i2c9AygQl\/ReMY4+Y9AlBzMA6GA71x+zVFDleMiBzkYOOmEhquDcqS9Xw8YUU0e5wsVS7FCHtVCIk6dheOEU30n+oB9QkDy+U7kDGn6ljEZHV75Zitt5L3l9WDni741slGlAPmYGlM8PgJYJroaAPf4hVb+TggjLy0LvCALOXck2KvHfs\/BYB0crx9ZUofPclZObbagzy+QHOyibK5WjfKpqvrzyMD1\/JQM4PFKesWI+QrqdR7+4Dd+NuihCKELlwNmIGyfdUX1mIbS9lIo8u16rcQvkfH4KXnwygO1YoF3ncuDi2wyjPo2BBY8SrxoyVa6EzZmBxxmHpkEake\/6heUTCMjqSUIdg0Ysz0PP0KbgP6aFER0OQlJYE9y9+j5felw\/D1BVYP+I82XMeAttMs7Z1H8xKexp+X72EZX9t7ep8fvcynh5Qch0jDG2MXknlqcPhyt4Y4ksPsCORm5XdtLBvy5EDxSaPDXkZSYHNYq58zxzs0lrUrVQGaldVLggQeUpl2I2CO4MRqdjbtVzj+Xd9WtisNFqVmY4Pv6I7k67phNP17vC5p5LawyqcspFvi\/Y04Wn85TEXHH5lGTKLlX3EkCS6NkXOv6fyyVhE+bBjf4dDOmybrbiaOrOM5q\/led8fiUWJMQiQHI\/ls7CO+i384NWUr\/FZXHSBj8iIji3P34hVfz1MZWo5YtLS11hcj9qP5bOW\/GPjqKVN2jpe8bX\/Pg0nbx\/ZFn4owbbXV2M35WXpExq\/Z\/4QYsP2lI02bAaP0f5HqpCZmgn5SbfRPn+BiCp1XM7mYceewyinTvD2wB3uP+9Gxivp2PbvGZj9uB\/MB2W1u\/qf9RQhzUR8k216oK9LAV5fRFHQphI4+YYhRsyRDp+L2aNIiHwozluMt88IV6SgjkFKUhhcyjfjmQV03ltFpKrjkTLVQzkAcHE14ZPlFD1TNF\/S1QcxVIZvN1KURo7tw3IXBEXH05VtUYg1VJbdpIPEVMAcqUOVo\/mwu7\/F5mcWUJ6ZKMIgxC9szkN9jxolW1dj9V93IyApCfH+ZhS8Ih\/7lVMQ4qXRBD\/MnBoG97NWUd+da+geM2G4JDfUThElAs+eUF86h\/Imr1tPkQzg1LX1EN23VReg9g6mOqGNu8MQ7K1GVeVXciLVV8iTU+D3Qw4yD5uVfYLD5FwshAcdF+nlDjM5tuN206wInQLd3adR8J4t2RGGKY+44HThtmsUJYI75D8N8p8WOPeHh\/Fden7Cli\/APYjstdnPWmFhN0vmYMGqHajqE4PZM8lq\/Gdi6lh3fP83eeRg82k1gqY+hR6vkc28ZaCaF4K4Dcfr7A6nonVKexJlmIJIpxy8JNpQeiHMvpGYEkHHhT6F2WNd8G3jNcrI7h+fC9i4RpPNvibayGrsqHRHzPy51AUo0DXVX2\/G6lc2YncbZW8xXvbZLuzYtRv7LDsY4nDmMgtRQjUU4QV3cyVOH6MNe\/Z3FbZpk47WmTVX9byBmOlk9w0FWE1+acEqCpS8lefdpx0\/eDXlc3bBTwdel4\/NrYLHqJmYHaikNWLhI6Wy76LjJs7GjD6UNnEqpvhD9k\/0rHPEyGTijDb8IdHO8S7OVXj3\/8i+1tDFD1OoDtqqokJ79t2GzeD9l\/D7JlFC3O+H3uoqNLmbXzCOLUxuOypRlLEDh4tPo7IyBxtfeQnpfyshY6xHyQclqCLh4tHUkMpRQA5bTJlcyM3DqUtq9PSiyGpIX6j\/XYTNn4rzLsBAoqVSOQPROvg0lGB3eg4qxXmFb2PbMWroD0c2NZbKo5koFEKOOsfCM3RQpQFvH78gRXc7yquo4brYWLPQFjHQ3Q+U7FqDHHHBHwrx9nvHUe+lQ6Ro6ET9V7vx9v4SlJT5IGSAO6oOZmKziDbp2IzD5VB7DSInfx511E873d0fwUM8YM5dh1V\/fh3bjsp5dDpKK\/hJ\/mOXwo0f4nBDAGasXo\/1q2fA71IONmca5MThszFlwAXkbNjW\/Mxs4DN1Kab4VCFnyw56xi1pO80DM8aSgz+2Ax9an0R4UITod\/k4dnxkI7GDuIQGoT8528ovlR2WXCrBJxsLySLJljcZ6P4sbdkaC7shW6z\/6kPsK62Hh08IGW0dzHBCT99gDPEwIydzFV56YxsJ3g5w6RTypHbR2J7qceqA0haOH8P3l5zQQwjGo9vw+p9XYV0u2T2VOKfwFOqde6KvlIklQ5ptVmojJdiRkYfT3f0Q0tgZ0n3v3piHkuJyXOhI2esPY8d7OfbF4f3xWPpof1Tlvosd4nHZs7+rsE2bdLTOrLmq5023\/SPVjHNfDHrEC05fbUb6n1dj4z6qU\/JDdv3g1ZTP8ti\/ZaLg3+TLgvyURAULHymV\/f195Fs90F9PaZd+gtlJjb6DdPDqXoLNr71EAZU4rg3aOd7S167ZVQLc59dSpHaUjtiMGIn9jxA4Hd+BTULM\/sJhYXJDsZhnrr8Al4dnY8Vf5Ddc1q8Na1uZWyBFQj\/W2+7YxNMym6mbb8ZQQ82kDbHxk63I96qhe7qofBUcO0cNUw2Xxgs2NLpMJ3TrCriPelG+X\/GhqBBSh1CJza9kIu+SD2KSXsTadS8jeTw5MEcZCVPqSRkvsIMH4v8wA4MukiNqXA\/ycwie+mMM1UgQkh8fhAv\/3IRtZ5XDbeAz+WmkjHPB8U2rsM1qCNleGobHI9iDhO\/HighqQRDih3qQo\/wAtlI7hFjPNZOEzxfk+Kwjt2vCCX5TFTugjzSM7dILQ85uxioxJeATg6SVa7H+5WTEeDm13Tm0RT3ZpfK1FT84wWt8Ml5ep1x\/tsV0YQtkm63\/0aK11X+PusstO+smUXAjyi7eevvPSLgcp7zeVboie\/bXYdvsAPbq7DrJeeN1fFiqRvC0FXiV6nxFwhC4XCBneDV+8KrKV0nPjVzfnRplW0H4SBKW8YrdrV8vT0+7uA8Bcl\/H6++fhnr4DKwQgcWzszHkLiFf2uBqjr9IZXdyanPE5LoQC+5XUBD0w25kvPbLX\/gqYGFys5CGk9U4vekZLJhDndic3ShXkuxh\/pma5p1q241XOCky\/p7ylkSAqwsJGRNqle0bjxOc7lK+CgJ7wYWahqmVNzbjys\/kLvYtoHsV99v4EVNCJJw8qpDz2jIs+P0cLH6NYkz\/eMx8XDm1szlThQvOveDV5FU8yOEpz6IFIfDzNuPU\/s0wSJGSAZuPlcPpvgCEPR6FIS7UIUY8LTtEae2MFyKFk1Zeu3YJXYTkaHec+uszyLBa52MvjTwTpoRRZFicg802RI968lj4dSlBziZ74zTtcHANnhFTio\/EYKa0IPN6qYdho6Ud0GdxBg7f7YXeNTlIX7YAv5+7GGu+APwenwn55cobg8fM2Yj3rUeemJ4R15WG0G0h26z6TovWpu6NHt2pk7F1wvWW\/e4winpj4F76Np7JsOhg7Nlfh22zMyF\/1YeCpK3PYPFTc7Dgmc343j0MM2eTGLhGP9g+cj3U\/2jl+YSPvGTA25Z2Rx+xHkftQc+5eBOeWfx7aWp781l3hJGtUCltclXH30V+koJG23Z2Haj9MGPpDAypz8GqF65nmvb2goXJzcL5DslQ6yhqqFd7IISitjYjBQsOH\/4W9ffoMGOCeF\/DBQEUxTadt7MIp7v4ITKFog5yVC6DZmBKoAsqj3+CEuWQG8sOFFHk7he1CGHigncHYMbkQXCpNOCTVlH1YXxx+gI8hqcgfpBYdUZlf\/xpvLgwDO7QIX7+00j5nfw7CWaqF2vUah\/lWyfwRQm+r\/eATsxN06ZLaDwC7qnHt4fF7K4PiY4YBEkR9HFUVqnRd8QU+ImOQtRHoBdwoQqn33u+hSO0nk9W6xdhxW\/74lsSHmushIe9NInA2Qi5\/wKO\/yNH2WFJAGbrfXDh+B7YSr0a5ClFd3gMUnZcM3koKXOC38Rk2W7I\/sPmv4inf0vi6uF4PPV\/UzBb+m0HEgAkDFqihvp+5es10lPtRB3UT6iqIjujZxSj70u5WtJ4jcPI+6oK7sOTMEPYrChnUgh8zKdQ8Il0YEvaLTuhHoKYx8PIaqwQQ\/HPzkDfMhIl1lGvPfuzl9YnBFN+G0kW0Nm4IOx3S7D0KbldiJGMJq7RD9rEuS9CJL+oht9vkxB8D7W7QivPd6AE5d39EDNf9pFqjzAkr3waMwZQKcfOxpI\/JGPKAFHI9iVEe8d7DJol+wUhOKPItr8zdKAN2rDvtmyG9sQvXUThEImS561ESVvPXslL8k8tfBdtke3E3Ba\/C8TC5ObxybvYXSZ+z+JVrF\/7Iqa4nscF69EHWxxch437qtB3yhKsXf8q5vrUofKSkla\/A+mZObjgNQMvrl2PVxcGw+nYZqy6nkjZLvXY8f8ykfNDX8x4cS3Wr16EYKfj2PzKZptTTYUZGdhWSve8kO6Zyr5ouBNK8gtQRQ3r9XfzYPZNkoZ51\/6Byl26A5vek85CwVcX4K5\/GuufvZFx89UgyleIep8ZUvle\/W1\/XNi\/Eeuk30TQISRqCqKkyeMSZL65A99qwrCE6l+ujxJsezOzXWEYMzYALl1IrM2mepSGmOWPGE2xlyYcWUzMIKi\/KbA5t6yeGINBzqdRsOmaJ3FuApXYpkzdSXYj7L\/PORQVUC3lvo5t+Wb4PClsZC2WBDnh1CebpN91wMECfPWDO0L+SPd+HaNpJZt2oPCiYrP\/NRe6BrFygToEsS7K6hqGzExsK3ZCsLBZKme8VxV2ZLxuu4OxV\/ZGxkQhJioSY61HnSaGIYD6BJfAWdSum5+x\/ENc9uzPTprXEISNDQb1uZ1MJTZvsGwXM9D7Qh4+3Eji6Vr9oC0u1eOOEU9R\/VHdh7qjct+7rdvE2W3ydJuv7CPXrpwCj6oi8jFUyk0bsaOMRNQfRDt7FTP6XEDeBxubF5da0d7xF0y9MfW\/5Pv1u2zAhzbWjLWgLftuy2aGxyDEi+rKKxJPW9rMmkUIauvZ+w9HWFQMwqS8LH0XbenFQuJrWgVzy3H4H1hjbjzildfWP8wl\/2iXI\/xAEdNZeFBn\/iKCL2zDslW77TtZQnoV0uIVyEZavArJ3DTUU1dg7ZBKrF7WvjC+IUivFNtYr3MrXvOXXhe29Qr99XP1\/rDzX9u95c\/+FsPChGGYZpTfo+hNkeeyN\/KUnYzj4Y6YPz4N3der8Px7N2vE1IG4icLk6ulsYfLLf\/YsTBiGYRjHhoXJrwoWJgzDMAzDOAy8+JVhGIZhGIeBhQnDMAzDMA4DCxOGYRiGYRwGFiYMwzAMwzgMLEwYhmEYhnEYHOKtnLvuupafAWQYhmEY5kZx8aLl\/9jaefCICcMwDMMwDgMLE4ZhGIZhHAYWJgzDMAzDOAwsTBiGYRiGcRhYmDAMwzAM4zCwMGEYhmEYxmFgYcIwDMMwjMPw6xImQ5OQlr4EscrmtaGBbowevipls4OofPUIHaJRtn6hqHyhH6OjGmKYq8EboXOfRdofYjF8bhrS5uqU\/beO2KXpV3ldHZL+lIakocqmLSYvQfpS4W1isSS9nWMlxHF2\/FNTfu3RgbIxvxq8p6ciLTUR+p7KjtsAB\/+BNRUCHk1GnN4TGiGhGkwwGnYi4+181MoHXB1CmMzQoCBlNbKVXVfN\/dPw7EIdaj5aiozPlH22sLpWaPIqxN5dhPQXt6JMPuKXx5hkrJrsiqLXXsDWb5R9twmqoASkTNZBKwSnsLOj2Uh\/pwAmObkZVTASUmKhkw4Ear\/Lx\/bXt8MgDvQORdL0CPi3ShMdTig8pb2WmFC8ORWZh+gribrwmXEIe0AL1U\/FyPpjJorEIaoAxD0VB\/19styr\/WYvstbtRGlTwVTwHZeAuFBfaHtcac7vNkL7eCpSH67G1hczYZ6ZhojqlUj7oFXN31SEMAk+n4XUdVTrQgAMrW1+BjYRnX8Eal5Mw\/a2ikr5pGnzkfqmlp5\/MGobn01PTwQ8HIxgnR\/69TGhYHGjPyI7+ZMW+XTdAmnbiqb85FTvsCRMD\/eXbZaorSzAnje3Iv98B8pm7VvNtSjL2YD0vwvvZJVWW4a9WW9iZ7PRyUg+zp+OtqYCuY0+tqcOcXNiEdRHA6fKXKSsUjyvlV2bjMXYsyUTuZJzDEDiykQEtIhwlDxVWng\/HICQhx+B7\/0qVGxbbtPevR9NRfIoDUpttQfvOKQm66H5WnnedAfa+wMRoNfhkf7eUH23Fcul\/Y203cZaPIOGWlTkb0fGBwbJb2juC4AuOBg6v37wrCtAyivNvY6989q2D6JNH9M6zWQsQnZ6FgpMGup\/UjFBXYDVVP9GKdU2\/ANrHUA7ORkJo6hxXDai+Msy1P5MBvRwLBLHt24Kt4xvtuKFlHZEiQ1yM5Yi5ZcsSgSfZWBpyu0nSgA9EkmUqMq2Y3lKCpa\/fwaqIWRnI5VkC\/SzSJSozmD7cylIeW47Klz0mD5LTym+SHgiFv1qc5CRmoLUtO0wuuoRN9Wf0rKxmvJNsfikUgdgNlWgWHJw3oj9jyREeFQjJysNqRYdon7WdOhdKqTrpWbshNE9HIkzmyN7b2ojSZFaVO\/Poqjo9hMlgmBvLUxlReRA5W0zCcPbAzM9Q+VrWzSYlS\/NxM5ZgumjvKlXuYJuNjxw6zMsUPJTBSUhMaYfTAczJZtNTduK4i4kAubHQSsdYb9sqsh5SBiuQumm5WSP1Ln\/Ty36RCYg4UFKHJlI5dOg4n1KS83ATqMrwmclkBSz4lAmUq3sOvNwNWAsk4UVifikxeI8A97\/f5RXoyghwucmIEhViiypHWXiWIMvJkyOVkSOGt26mlH6kWXecuesm5mM5PGPQFNHoamTk3R0K0h4TB+uhe1Ub2qTQdBaJg5NQPL8CXikRy1qG5xanddmG3uQ6mtSP9Tuy6B6SEXaR0a4jaJrDxSJsUj6T2q7XvSYL3dr2dPaPc+efdjzMf6t0s6odHhsbjil1SL3ywrgnn4k+W4Punp6ej6nfO80unfvrnxrybiJ8fDRUFS5\/TlkflyAgrsGY1xfDbpfrsS+w5XKUVdBHx3GBXRHxa4DOEmbQrXOTyIlPDEKUWNHYED3Chz7ugZXpIiBGsPceEwcH4XRgwdg2PhpCNbswoGvRPQ7Cw9V70PR9\/JxyXRcLB0XNXowel0qgtOEF7BsbG8ycA36RUXhoTt34XJIGu1zxq4D4sp07fEpWDxvGmKj5fN6\/2jAke8uS2mtEJHJ\/5mAQQ+Mx7Tp4+BF1y52j0NKchLiY+n8CCp7lzMoOHWeDrZT9gEUCSaMxoARsZj2aCC6Uz2UB7SVjxhen495FMWLfKJGDEDXMwUopSRVi3NGY7C2DkXHKnBFKmconNurX+m4CPjcE4K438n5j3igK84UlkJc+ZYzNAqPDmnA0Vf\/hiNXgMvfFcMtMAo+qu+Re6RlfDE4dCLu\/fcubDxA9vdjOdB\/NHSaGnquXRD4CHB613s48C\/gSl05GnxGY5ibqemZN0POcXoUnIuzsOlLuuORMzAr8Dx2pf0F+87Wkf01EoBxk4aBCoa\/UcGu1HyDE3cPRtSDzvg+9whFPnrM+F0gzv89DX\/ZdxZ1zSfeVgwYGQVPsn\/RpisP76M2RjvFqIWw1aBoTIubKNnZQz3P4ciXRql+WtiW0u4MZ69IIx+zBvfGoIm\/wzRhnxZpUpS+iDqZqbGIonY5enAv1BUZUEFJjWVwHrsM80WofkcvBEaNhpfGB3FzJ6D3mf0wUJ8LhCL55RSMdt6Kta\/vl+wc41KwamE47m06RuGrA4qfGoARUZ64fFz4DODkwV3Y988DKOrqjzALf0QpOJBThDY9W1N+KkT\/djp8\/v0pVm86hDrac6WuAicu98Po4d7QnNmKjdvkPMMXrsLCyHtx+p8G1Ig8FPxHhiPwp8NY\/dEJ2rqMc8Xifvuh4et9MPtPxLAGA17dcgRXrtTgmxNuGDzeF87\/ysURsu02UYUiPm4Aaj57C7llV6CdkoBH7z6BjJe34UStpW\/zxaCHPXH+f\/6CXaW0+eM5nOgViGjf7qiU7l+H0Em9cLGg9fUqD+dib24+Dh3rDZ1FnTZDIn\/uFHiVn8Q57d2t0r0nP4kpfb\/DySot7lZsDt8XIXdvLvK\/MKA3+YJGW5Sx08YGBGJYl9P49L0D1BavoO7bBviEDEPPH0U\/Qc9y9z7sP0ghhn8YAu+saPYDds+zZx\/+dnyMC8Im9ET5pxuRSxpEpAnfNNjZKF+312CEPayCsSkv2\/z000\/Kt87FoUdMslcJpUwKtVBsqRDsIcb2zDBWFIsd18dAoVp9YT4sIo5UZOw2wnVcIhLEvOzA6Ygb5QZjjqxoN5zsBtce8mkteDAOseI4EVlQ1LG9TAXd5ESo1qUiZXMxTNLwYwo1fuX4RoYmIjHcFcbdIn+KVg6b4UfnRdsdCHKD68852PDGm8g+FY55CXpozooIn8qeUwNtJJXZgw5rr+w9XKE6\/T4y3tiKXJWdfCInY8IDQNEbdC8UNeVf7IPw6SIa80XcZD3cKtsZXbBXvxJaeN71BTb8kfJ4rxRO9+sR0Vlz4mRXqrpqVDRFmCaK2ikg69o65qqoroXqPp08X9tTD919KlQbhXfNR9YrmchWWr3GLxzB3t1QcdLGoPzIaAS6lOHwx\/L4WfBDnuhWR\/a9PB3p6fRJS0VCkDAGJ4ocpUOaMH1XDZPGFf3ERpA\/PLvUQzV8uXzeq2lIfSJYiTpvF1RwIi9k\/tnGOEEPDcyHNkh2nJFfDe1wJapstK1DcvvJIhsX7U6MWwlU3lr86yM52s8\/7wrdqAipTixHn6TRLmcdYi1GnwSSz\/mMPHtdMbLoupnb8kmMu8E7yFc+YCTVOQns0t0WwxGf52BPTi7y7Hn8G4o\/tGR\/xrO58tB\/I9IIxgtUH8o2kf\/ZHuTuy4OwUEsM77yApa\/tVLaozsZ4ws1sxBnSKa3s3nQG1XUauFIQbw9tTDB8L5ci9zNRKhVC7tei1uyJxFcVu16Zgmgpj1Jkv7kaWZ+L73SkNhgJD9Gxp4vkkcIHqT3SP9+pze0hKaydiyt4T46D\/q4SZG+wMWHhHYu44RqUfLLB7nRGC+y1sc+zsPrNbKVuNfCPDEa\/O8g2pP7KDtd6nl0fsxPpy+jZH5XThEDz1Tb6ptsPhxYmlojhtAm+KpjP5uOjv9sZo+wgAeRo3KqKkPVeMWqpeZf+YwMKy7rBd1gopVHUUVOMnTtKKYXSPii1bci1JtK73aDx0SFAa0b+OxlIfzsbBiW5LQIGUf5GAzb8Q+Rfi+L3PsWnB0tRbXdxkhGGDXthOFkGY0ggvBvIAbwp1tpQ+Xbk4UydlpynuK92yl5H520pQOnJCtSGt50PLplxxUkFT79AcsSl2L5uDTLezaPj6EjqQ7r17AddgBZmamQZr21A9pdy9o3Yq1+ZChRl7JXWStR+XkDXVUHTR0m61SitwO4QukLRlk9haPBH3HPkpJ6Lg29dPt5\/x0Ioi9EgcmAr50XDs+YzZH9sbTlaEo7UqX65BzsVM9ZqqHN2ccKZ91oKXD256WJSS9qHEyQhJBz4tHG+slMUCEHVXQOnDkxBOSoq32j4uptRU26j1dSdQYHURoQdZ6GoSoM+Ot9m2yLbFu2n6G0DKlSe8FeErenrPdh6uJa+kN2epPrvqaWunDrjHRuQnpFFYoU2zuejqNwEVc\/WK39aUoyCslq4eemkKRKdvydUZ0uxx9IFmQzY+3H+LZym9YTGVqBkA5NhL7I\/b6dk1GEnk2Ko\/vwj7KX7KiqugMkjAAkjKRBUaRE8PQK+7V5Pj7ghrigr3EI1JvCHK52u6WFCXqvgphEx+pyOtNRp0HUrwadblAnM2gqUfVOKgneEuEyT2oP\/+MntBG6ER7PwaJwKbUaL2McoCDuZjQ1XM93ZgTamm5tGomUlksZ7ovqf2chuc8irJdd6Xvs+hoKcuYkIvqMYe8n\/Spw4C6PZDZ5hLRbuOCy3hTDxnrwEyaTonWqL8f5\/Z98QByBFBZdNFp22Cf+quwInNRmhSDPVtooyWlG5HRnvFMLkHYGEZWRkyxMR0acbuUr73Hc3GUeDma7YSDFyP9iJAruGaTFnLJ5ad1\/ECgUvfRLgT45D4xrQobI3dcB28sHnG7BhRxlUjzyGJaITXjwNgc5CYhix\/Y0sFNZ5IyIhFWmvLkfiWIr4reZg7NWvw9Eg\/7GKE21Azu2px+BHYiRTmRsvbAjC7JTwZrGgzLtLc7wu4Uic3xjHKwwVC2dJZO5uOerX1JmS9eS\/Y4CROoQHHqYYiYRukamfJITSlk3AvbU1MNfVkqxTIKG5hxy6dCaJREOlCtoHb5eZZOoQk\/Vw\/ddn2PIPZVebGGG6DKhFJyFsyz0YqU12KxYWk7AVI312qO3qiYhEJfKlzzS\/9no6meJDZah190Wohy\/8PVSoKN1j0XY7AwoqxPzNjcA7GinzQqEpeR8ZHymeldp+9mET+j22UhqtmNCrFjXkfGrPysm20E4Ophi9DF9YBY0VhzOwV0QfQiTuJyGp9Uawkta09oraUX6dH6alKKKlMhdZr2Uiu0SISyPy38yjnPvAd5R0UhtQ2\/wtCY9Tn2KLDeGhnUTi3qW0WfxcDe20sSIxQp5CvvCDM9CMS0RyBwODaz3Pvo8hUfLEEjzWvxa5GzKb1m3BtBN7DtbCe9JKLJms7HNgHF6YWIqSrWkWFX2dSEPH3cnAlG3xQO\/t0Q1mcz1qL9dbpbUBRVva83l4c2Uqli5ejsyjgO+kuLZf91P47gcy8S5OzZ0ZNPB80LtpdX27iI60jupDNGqLz\/INho6XXWAnH5WWcji5HWnLl8pRS6Ub9HHTESDKqq1G3roXkLqUjl13DHiAIpVJcpaN2Ktfh6O8BrU9KJpoqn8tRUnKPbQgGL73XUHZge0olqLuYmynSMSpz0CKF\/VI+EMSYsXiQcJkzMfW40aoPP0tFg2qED3Sl+o1j+pT2UXU1pvRrce9FvZggakAWdQ5SM+GbOyLBhJ2587IEeF5E8x3qHFvR+3G4chGRkY+au4dg+mRyq42kZ9J\/eVa+blU5kvO2dJuV3+sHGoTLeKmx6If1ackKun4rC876Ey+zENpjRt8Y0Lh7Wo1jdMpVKDmEt1Rn9CWNiNF0s\/KC1g7Qk89khLD4frNVqRtsHwDzYSCd9KQuliup+VkbBoShmfaHGnwR\/TDnqg5vB35yh5JPFGGmp5irMoaCobmLUFCY0cs2tGBsibR4jspCUtmWAn69ng4Grr7nKAZOE0aTWgUq\/4zxGvgUxD9CPUhGn9MS5NFaWgfao0DE5D+p6TWi3otsdfGRiZgybxYuhsBBWH7t8JgVMHT326O135euz5GBd9Hk\/HYIBPy31iNbMsI3kMsO9Cg7L3lrZcWOCAOLUy0kxRR0lCN0uM18Bwfh7hH6RMTbNHhXRuGwlJUu+uQ8Lg\/NTrqQEclIMibOp1De1FaVEZpgZgeI4bNxcP2tX29gbFIXJiE6dLvk5ildQktobNtTI0ajlMEpg1AwihytlL+SVj0ZByC7U7lWHCoFBV3+CJ8ll4SMyqtHonLUhBHlt7hsgvs5KMZNR3JTyUiWvxgi8nSEQcgdlYKkqbKv1divmJ7xaW9+nU4jn4No0mLgCco4qJNzchY+LubUHFcTC94Qz8pHDrp2RTDWEMOZGi0\/Ds25HTjHiIPd7FaGsXTuJODGBeupOnIgbjCbFREhGDgdKqDWhTvb3bfgtz\/KcUV7yDFHjTQPxEALUWKXzfNFxN0rdAnUhHrWw\/DXqUOPytA6U\/eCKJyi+enIYcX4EGO7mR7k4mOg6mURN6\/naD1suGUe3giWJq6EnacAJ071XNRqdJ+dJg3SdgW3bdfLFKWJUHvLp9mG7JCMSR2uRrVl8U54Qi+TzyoNuhGnVxTMkXMJ6vhNtAfbtbTOAJVAMIn6clSbhz+Y+IQHdRWyzViZ04xTD6hSIyU66Bxmq\/bWQOVVT5KoAoIR+xIGyWT3piJg+d3JErW2XgtXkJD5UhA6iRf1B\/fA9nqLNuDjGp8BPx6lOGLHZZTCkbknqigzn8C4vyohCpfaQpTJb2xUwsnV08EjJom5yNelSdho6oxStNApfVqaB8ORYLkVzXQzQhGH5xF6X6Rbxsc3SBNtTQL1VySRuJ1\/BSkrvsQG5ZbpqUg9yzZ3pdZSLH7Sjhht41p4OanQ4QyvaoZEgs\/VzOMZ9oblbnW8+hYOz5GentoOJCfYSVKBJ6udNVqVHwuxn0cH4d+K2fAqIkYfA95k9+o4eblBa++ykfbBWX2Vq+3heVbOecMKP+pHwL1UZg4cRxC+ndHZe5f8da+Glw5V4rKbgMQHBaB6PHjMOhOMxqc1TCViVXTFivsC06g7u5hGDp+ImLpuGG9LuObnK3IEm+1fA\/0Fe+wj4nCQ3fsQpnzuOaV2d8fwZkugRgdNRHR0XTePSYc\/WAttn1lu5O3fpsIl07iiNEFg0dG0flRGDeyH\/DdAezZW4bz9sqOEYjqcxmGxrqzk8\/Z4gp0fWAo9JETMXF8KPzvqEHBzrew7+w3OHGpJ4YFRWNiLJ3zSC9cPv0Ztm4uxfmO1q\/1\/aA3dGMD0f17eVX6raec7qkXHgkeR2WNQqifM84VbMFbe8Sa+dGInx+BfleobF\/XwPBtVwwYpkfUxImIGqNDL9NJfLp5I4rOUx7lXTFwxFhEREdTWiCcqw9i65s7YJQeqwrhM+Ix4PxBZHxCQkS6rsL3xSjvNhAhZEfRoq67n0P+tkzskk+U5qKXxenQ984aHNq6FltPNJ5dieLv6Jp6ekb0\/EL9uuNc3jZkSuW+fbB8K6eJAWSrvRpwsVcw4uKiMIyi4cq87fjrfro30X7MPhg8WtgW3fcQN1w6ugfZRUb4WOcl8pFsfi\/++WMvDA4aJ72REzpQjZoqJ7ipq3Fk\/wl4Wp53oRc9Yx2Co0agt\/ImSl1NbwzVi1GBTOy3bqdjpmN+5IO40\/qtnCZavpXTRKt20MyIx5MwwqWsZZ1YcOVsEdWBLx4ZK9fBuJEPQnO+EFszPsQ3FsULnTofEf53tnorBzHTkPCgBt3veQjjqD5EnUifQd1lHyW9ORcP3X3dUXNoK9ZuPaHYlGV7ENv+mP7bsdCc2ob1X5yTjmik7qsTMPUJxugJZJ\/hw+S2siULJ87XofjEJdw3NAQRMdSOxg3DfVdKlXZEJ35zDMa7BiMkJpb8aigCXS\/i5O7t2CpeCWyijTptwn66TZsjWu+308a+OyG12xFjydeKtEHOqDmwFW\/sbNn+eussfL+gg+e1tg97PkaH+IQQ3HunBv2CLZ6neLNMvEGKtm3NEkd5K8fBf2Ct81CpVDA1jRSIRVrBqN3S+IbQzUG86iiGGFti8SNcHaQzys4w14p+fhri3I61\/PFB8bpwuz9ydgvxmIZnl3nCkErRqO3hhRuI+IG0aVDvX4r03couhrkO\/GetRJJXKTJWZtldf8g\/sObI3D8NS55LwTRlKFE\/TwdP8SrdTR4hl1+Ptv5cnSjprLIzzLWS\/\/YW5Jv8MS8lFm7KPodCpYV+ciA0ZSWtp3FuBgH+0JpLkMeihLkBuJHIT\/AyYu879kWJI8EjJjax+klmkxFFH6Ujq\/BWeKXr5XYuO8MoOMyIiRhxDIVnXRn2rkvHTuu5e4b5BeEoIyYsTBiGYRiG4akchmEYhmEYa1iYMAzDMAzjMLAwYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh4GFCcMwDMMwDoNDvC7MMAzDMAwj4BEThmEYhmEcBhYmDMMwDMM4DCxMGIZhGIZxGFiYMAzDMAzjMLAwYRiGYRjGYWBhwjAMwzCMw8DChGEYhmEYh4GFCcMwDMMwDgMLE4ZhGIZhHAYWJgzDMAzDOAwsTBiGYRiGcRhYmDAMwzAM4zCwMGEYhmEYxmFgYcIwDMMwjIMA\/H9hMN0m7LsMVQAAAABJRU5ErkJggg==)","d1dc44d3":"<h1 style=\"background-color:#FF5733;font-size:20px;color:#00033E;font-weight : bold\">\u2705  Saving\/Loading the model<\/h1>","e6bdca97":"Since, this version of sklearn supports oversampling on Colab","0db76c4e":"<h1 style=\"background-color:#FF5733;font-size:20px;color:#00033E;font-weight : bold\">\u2705  Saving\/Loading the model<\/h1>","f61e8013":"<h1 style=\"background-color:#AAFF00;font-size:20px;color:#00033E;font-weight : bold\">\u2705 Saving\/Loading the model<\/h1>","32312e42":"After Feature selection, my score F1 score was reduced a little bit","f000b11a":"<h1 style=\"background-color:#00FFFF;font-size:23px;color:#00033E;font-weight : bold\">\u2705  Creating a new subset of the data using the selected features<\/h1>","eaf2e44b":"#### Results after hyperparameter tuning first time on resampled data"}}