{"cell_type":{"36426614":"code","d1a47ece":"code","9c57060d":"code","03537a59":"code","41abe419":"code","ff214d2a":"code","804e863c":"code","895f91a1":"code","f52de842":"code","7a48a733":"code","6ff005d1":"code","1d4ac3d9":"code","c5c5db86":"code","71218d03":"code","2873f912":"code","2894ee4b":"code","258b0800":"code","58d50800":"code","f1780704":"code","16414774":"code","add706db":"code","9f8eb2fa":"markdown","3b9f60ad":"markdown","f0af6e30":"markdown","44662290":"markdown","876045b5":"markdown","8d077ad9":"markdown","70eaac64":"markdown","be8afe4c":"markdown"},"source":{"36426614":"!pip install pytorch-tabnet","d1a47ece":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\n\nfrom pytorch_tabnet.tab_model import TabNetClassifier, TabNetRegressor\nfrom pytorch_tabnet.pretraining import TabNetPretrainer\nfrom pytorch_tabnet.metrics import Metric\nfrom torch.nn import functional as F\nimport torch.optim as optim\nfrom torch.optim.lr_scheduler import ReduceLROnPlateau\n\nimport seaborn as sns\nsns.set()","9c57060d":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","03537a59":"train[\"Age\"].fillna(train.Age.mean(), inplace=True)\ntest[\"Age\"].fillna(train.Age.mean(), inplace=True)\n\ntest['Fare'].fillna(train.Fare.mean(), inplace=True)\n\ntrain.drop('Cabin', axis=1, inplace=True)\ntest.drop('Cabin', axis=1, inplace=True)\n\ntrain['Embarked'].fillna('S', inplace=True)\ntest['Embarked'].fillna('S', inplace=True)","41abe419":"train.replace({'Sex': {'male': 0, 'female': 1}}, inplace=True)\ntest.replace({'Sex': {'male': 0, 'female': 1}}, inplace=True)\n\ntrain.replace({'Title': {'Mr': 0, 'Mrs': 1, 'Miss': 2, 'Master': 3}}, inplace=True)\ntest.replace({'Title': {'Mr': 0, 'Mrs': 1, 'Miss': 2, 'Master': 3}}, inplace=True)","ff214d2a":"embarked = pd.concat([train['Embarked'], test['Embarked']])\n\nembarked_ohe = pd.get_dummies(embarked)\n\nembarked_ohe_train = embarked_ohe[:891]\nembarked_ohe_test = embarked_ohe[891:]\n\ntrain = pd.concat([train, embarked_ohe_train], axis=1)\ntest = pd.concat([test, embarked_ohe_test], axis=1)\n\ntrain.drop('Embarked', axis=1, inplace=True)\ntest.drop('Embarked', axis=1, inplace=True)","804e863c":"train.drop('Name', axis=1, inplace=True)\ntest.drop('Name', axis=1, inplace=True)\n\ntrain.drop('Ticket', axis=1, inplace=True)\ntest.drop('Ticket', axis=1, inplace=True)","895f91a1":"X_full = train.iloc[:, 2:].values\ny_full = train.iloc[:, 1].values","f52de842":"X_train, X_valid, y_train, y_valid = train_test_split(X_full, y_full, test_size=0.3) ","7a48a733":"seed = 42","6ff005d1":"tabnet_params = dict(\n    n_d = 16,\n    n_a = 16,\n    n_steps = 5,\n    gamma = 1.3,\n    lambda_sparse = 0,\n    optimizer_fn = optim.Adam,\n    optimizer_params = dict(lr = 2e-2, weight_decay = 1e-5),\n    mask_type = \"entmax\",\n    scheduler_params = dict(\n        mode = \"min\", patience = 5, min_lr = 1e-5, factor = 0.9),\n    scheduler_fn = ReduceLROnPlateau,\n    seed = seed,\n    verbose = 10\n)","1d4ac3d9":"unsupervised_model = TabNetPretrainer(**tabnet_params)","c5c5db86":"unsupervised_model.fit(\n    X_train=X_train,\n    eval_set=[X_valid],\n    pretraining_ratio=0.8,\n)","71218d03":"EPOCH = 500\nBATCH_SIZE = 8","2873f912":"model = TabNetClassifier(**tabnet_params)","2894ee4b":"model.fit(X_train, y_train,\n          eval_set=[(X_valid, y_valid)],\n          max_epochs=EPOCH,\n          batch_size=BATCH_SIZE,\n          patience=500,\n          from_unsupervised=unsupervised_model\n)","258b0800":"model.feature_importances_","58d50800":"importance = pd.DataFrame()\nimportance['feature'] = train.iloc[:, 2:].columns\nimportance['importance'] = model.feature_importances_\n\nsns.barplot(x='importance', y='feature', data=importance.sort_values(by='importance', ascending=False))","f1780704":"submission = pd.DataFrame()\nsubmission[\"PassengerId\"] = test[\"PassengerId\"]","16414774":"pred = model.predict(test.iloc[:, 1:].values)","add706db":"submission[\"Survived\"] = pred\nsubmission.to_csv(\"submission.csv\", index=False)","9f8eb2fa":"# Import Library and Data","3b9f60ad":"# Submission","f0af6e30":"# Preprocessing","44662290":"# How to use TabNet","876045b5":"# Pre-training","8d077ad9":"# Feature importance","70eaac64":"# TabNet params","be8afe4c":"# Training"}}