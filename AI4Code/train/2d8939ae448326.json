{"cell_type":{"5036b392":"code","a435aa50":"code","b1f62375":"code","947bddd0":"code","45337c03":"code","77302eda":"code","153c7636":"code","52ec1410":"code","819bd025":"code","9ba59a83":"code","82e946de":"code","018b79f1":"code","935bbd50":"code","cb7440d8":"code","f515bf69":"code","daf98a86":"code","326c2271":"code","54a51236":"code","f1c88837":"code","cde05f55":"code","a4834a31":"code","bde97691":"code","b786765e":"code","c8bbf162":"code","ad8be60f":"code","fdbd1d67":"code","a857654b":"code","641f7fbf":"code","fd9d86ef":"code","2f1ff274":"code","19ccc9b1":"code","241b628b":"markdown","bd0cca2d":"markdown","3dabb8c9":"markdown","fe1231df":"markdown","8c6c939f":"markdown","0bf8e0f7":"markdown","319552c0":"markdown","ccf3a311":"markdown","fcd81fc1":"markdown","7dff0bd5":"markdown","24cb2db7":"markdown","885134a3":"markdown","761e8a34":"markdown","69d968a2":"markdown","3787c2a5":"markdown","0281671c":"markdown"},"source":{"5036b392":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import mean_squared_error, r2_score","a435aa50":"# Lecture du dataset\ndf = pd.read_csv(\"..\/input\/bostonhoustingmlnd\/housing.csv\")","b1f62375":"df.head(10).T","947bddd0":"df.info()","45337c03":"df.count()","77302eda":"tabcorr = df.corr()","153c7636":"tabcorr","52ec1410":"plt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","819bd025":"sns.clustermap(abs(tabcorr), cmap=\"coolwarm\")","9ba59a83":"from scipy.cluster import hierarchy as hc\n\ncorr = 1 - df.corr()\ncorr_condensed = hc.distance.squareform(corr)\nlink = hc.linkage(corr_condensed, method='ward')\nplt.figure(figsize=(12,12))\nden = hc.dendrogram(link, labels=df.columns, orientation='left', leaf_font_size=10)","82e946de":"correlations = tabcorr.MEDV\nprint(correlations)","018b79f1":"correlations = correlations.drop(['MEDV'],axis=0)","935bbd50":"print(abs(correlations).sort_values(ascending=False))","cb7440d8":"df.columns","f515bf69":"X = df.drop(['MEDV'], axis=1)\ny = df.MEDV\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","daf98a86":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(X_train, y_train)            # apprentissage\ny_pred = lm.predict(X_test)         # pr\u00e9diction sur l'ensemble de test","326c2271":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_pred)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","54a51236":"sns.distplot(y_test-y_pred)","f1c88837":"# On peut calculer l'erreur sur les moindres carr\u00e9s :\nprint(np.sqrt(mean_squared_error(y_test, y_pred)))","cde05f55":"lm.score(X_test,y_test)","a4834a31":"X = df.drop(['MEDV'], axis=1)\ny = df.MEDV\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","bde97691":"from sklearn import ensemble\nrf = ensemble.RandomForestRegressor()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\nprint(rf.score(X_test,y_test))","b786765e":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_rf)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","c8bbf162":"sns.distplot(y_test-y_rf)","ad8be60f":"print(np.sqrt(mean_squared_error(y_test, y_rf)))","fdbd1d67":"rf.score(X_test,y_test)","a857654b":"import xgboost as XGB\nxgb  = XGB.XGBRegressor()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)","641f7fbf":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_xgb)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","fd9d86ef":"sns.distplot(y_test-y_xgb)","2f1ff274":"print(np.sqrt(mean_squared_error(y_test, y_xgb)))","19ccc9b1":"print(xgb.score(X_test,y_test))","241b628b":"# Machine Learning","bd0cca2d":"## R\u00e9gression lin\u00e9aire multiple","3dabb8c9":"## Exercice : utiliser le dataset de la valeur des maisons \u00e0 Boston\nhttps:\/\/www.kaggle.com\/schirmerchad\/bostonhoustingmlnd","fe1231df":"On trace le nuage de points pour comparer la pr\u00e9diction et les r\u00e9sultats attendus :","8c6c939f":"## R\u00e9gression par for\u00eats al\u00e9atoires","0bf8e0f7":"Pour visualiser l'ensemble du tableau de corr\u00e9lations, on utilise une \"carte de temp\u00e9ratures\" (heatmap) :","319552c0":"## Lecture du fichier","ccf3a311":"On \u00e9limine la ligne MV elle-m\u00eame (qui est forc\u00e9ment \u00e0 1) :","fcd81fc1":"## Visualiser les corr\u00e9lations entre les colonnes","7dff0bd5":"on peut visualiser la distribution de l'erreur avec seaborn :","24cb2db7":"## Xgboost","885134a3":"On a vu assez clairement la corr\u00e9lation entre le nombre de pi\u00e8ces et la valeur.\nOn va utiliser la fonction corr pour calculer syst\u00e9matiquement le degr\u00e9 de corr\u00e9lation entre deux param\u00e8tres :","761e8a34":"Les corr\u00e9lations fortement n\u00e9gatives sont aussi significatives que les positives ; on consid\u00e8re donc les valeurs absolues, et on trie par ordre d\u00e9croissant :","69d968a2":"On s'int\u00e9resse plus pr\u00e9cis\u00e9ment \u00e0 la valeur des maisons :","3787c2a5":"On peut aussi regrouper les param\u00e8tres par clusters class\u00e9s par proximit\u00e9 :","0281671c":"On peut tracer uniquement le dendrogramme des corr\u00e9lations entre les caract\u00e9ristiques. On utilise une forme \"condens\u00e9e\" de la matrice de corr\u00e9lation. linkage permet de calculer les distances entre caract\u00e9ristiques \u00e0 partir des corr\u00e9lations"}}