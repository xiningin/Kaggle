{"cell_type":{"e3b82d5f":"code","d90eda59":"code","12f24880":"code","56a82436":"code","49c11f6f":"code","a14077bb":"code","4c60c52e":"code","171f6fab":"code","c5d27053":"code","5bfe2da6":"code","a207d2cb":"code","e5d8e482":"code","4b5740ea":"code","66faf7b5":"code","a76309c6":"code","797c9bdb":"code","ca7df30d":"code","6d196c37":"code","cfb81286":"code","ffc50de1":"markdown","2e8b18f8":"markdown","86275090":"markdown","6778086a":"markdown","7fbdb491":"markdown","bbdeea97":"markdown","53ed689b":"markdown","b443cac0":"markdown","3fb96639":"markdown","7c3fa635":"markdown","9c6c9a15":"markdown","62b29b76":"markdown","be390d40":"markdown","5b628987":"markdown","96e8b0b0":"markdown","7af9901b":"markdown","2d6e729c":"markdown"},"source":{"e3b82d5f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d90eda59":"path = '\/kaggle\/input\/home-data-for-ml-course\/train.csv'\nhousing = pd.read_csv(path)\n\nhousing.head()","12f24880":"housing.info()","56a82436":"housing.isnull().sum().sort_values(ascending=False).head(20)","49c11f6f":"housing.drop(['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature'], axis=1, inplace=True)","a14077bb":"housing['LotFrontage'] = housing['LotFrontage'].fillna(housing['LotFrontage'].mean())","4c60c52e":"garage_features = ['GarageType', 'GarageCond', 'GarageFinish', 'GarageQual']\n\nfor feature in garage_features:\n    housing[feature] = housing[feature].fillna('NA')\n    \nhousing['GarageYrBlt'] = housing['GarageYrBlt'].fillna(housing['YearBuilt'])","171f6fab":"bsmt_features = ['BsmtFinType2', 'BsmtExposure', 'BsmtQual', 'BsmtFinType1', 'BsmtCond']\n\nfor feature in bsmt_features:\n    housing[feature] = housing[feature].fillna('NA')","c5d27053":"housing['MasVnrType'] = housing['MasVnrType'].fillna('None')\nhousing['MasVnrArea'] = housing['MasVnrArea'].fillna(0)","5bfe2da6":"housing= housing.dropna()\nhousing.isnull().sum().sum()","a207d2cb":"def cleaning_data(df):\n    df.drop(['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature'], axis=1, inplace=True)\n    \n    df['LotFrontage'] = df['LotFrontage'].fillna(df['LotFrontage'].mean())\n    \n    features = ['GarageType', 'GarageCond', 'GarageFinish', 'GarageQual', 'BsmtFinType2', 'BsmtExposure', 'BsmtQual', 'BsmtFinType1', 'BsmtCond']\n    for feature in features:\n        df[feature] = df[feature].fillna('NA')\n    \n    df['GarageYrBlt'] = df['GarageYrBlt'].fillna(housing['YearBuilt'])\n        \n    df['MasVnrType'] = df['MasVnrType'].fillna('None')\n    df['MasVnrArea'] = df['MasVnrArea'].fillna(0)\n        \n    \n    ","e5d8e482":"path_test = '\/kaggle\/input\/home-data-for-ml-course\/test.csv'\nhousing_test = pd.read_csv(path_test)\nhousing_test.info()","4b5740ea":"cleaning_data(housing_test)","66faf7b5":"housing_test['GarageCars'] = housing_test['GarageCars'].fillna(0)\nhousing_test['GarageArea'] = housing_test['GarageArea'].fillna(0)","a76309c6":"housing_test['Exterior2nd'] = housing_test['Exterior2nd'].fillna('Other')\nhousing_test['Exterior1st'] = housing_test['Exterior1st'].fillna('Other')","797c9bdb":"housing_test['BsmtFullBath'] = housing_test['BsmtFullBath'].fillna(housing_test['BsmtFullBath'].median())\nhousing_test['BsmtHalfBath'] = housing_test['BsmtHalfBath'].fillna(housing_test['BsmtHalfBath'].median())","ca7df30d":"housing_test['BsmtFinSF1'] = housing_test['BsmtFinSF1'].fillna(0)\nhousing_test['BsmtFinSF2'] = housing_test['BsmtFinSF2'].fillna(0)\nhousing_test['TotalBsmtSF'] = housing_test['TotalBsmtSF'].fillna(0)\nhousing_test['BsmtUnfSF'] = housing_test['BsmtUnfSF'].fillna(0)","6d196c37":"housing_test['SaleType'] = housing_test['SaleType'].fillna(housing_test['SaleType'].value_counts().index[0])\nhousing_test['KitchenQual'] = housing_test['KitchenQual'].fillna(housing_test['KitchenQual'].value_counts().index[0])\nhousing_test['Utilities'] = housing_test['Utilities'].fillna(housing_test['Utilities'].value_counts().index[0])\nhousing_test['Functional'] = housing_test['Functional'].fillna(housing_test['Functional'].value_counts().index[0])\nhousing_test['MSZoning'] = housing_test['MSZoning'].fillna(housing_test['MSZoning'].value_counts().index[0])","cfb81286":"def cleaning_data(df):\n    df.drop(['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature'], axis=1, inplace=True)\n    \n    df['LotFrontage'] = df['LotFrontage'].fillna(df['LotFrontage'].mean())\n    df['BsmtFullBath'] = df['BsmtFullBath'].fillna(df['BsmtFullBath'].median())\n    df['BsmtHalfBath'] = df['BsmtHalfBath'].fillna(df['BsmtHalfBath'].median())\n    \n\n    NA_features = ['GarageType', 'GarageCond', 'GarageFinish', 'GarageQual', 'BsmtFinType2', 'BsmtExposure', 'BsmtQual', 'BsmtFinType1', 'BsmtCond']\n    for feature in NA_features:\n        df[feature] = df[feature].fillna('NA')\n    \n    df['GarageYrBlt'] = df['GarageYrBlt'].fillna(df['YearBuilt'])\n        \n    df['MasVnrType'] = df['MasVnrType'].fillna('None')\n    df['MasVnrArea'] = df['MasVnrArea'].fillna(0)\n    \n    bsmt_gar_features = ['BsmtFinSF1', 'BsmtFinSF2', 'TotalBsmtSF', 'BsmtUnfSF', 'GarageCars', 'GarageArea']\n    for feature in bsmt_gar_features:\n        df[feature] = df[feature].fillna(0)\n        \n    ext_features = ['Exterior2nd', 'Exterior1st']\n    for feature in ext_features:\n        df[feature] = df[feature].fillna('Other')\n\n        \n    other_features = ['SaleType', 'KitchenQual', 'Utilities', 'Functional', 'MSZoning', 'Electrical']\n    for feature in other_features:\n        df[feature] = df[feature].fillna(df[feature].value_counts().index[0])\n    \n    \n        \n        \n    \n    \n    ","ffc50de1":"Let's try to see the other features separately.\n\n<h3>- LotFrontage<\/h3>\n\nIn this case we are going to fill in the missing values by the mean, as we do not know these values nor can we extract them from other features.","2e8b18f8":"The rest of the features are categorical and we fill them with the most common value.","86275090":"\n**Alley, FireplaceQu, PoolQC, Fence, MiscFeature** are variable with more than 50% of missed values, therefore we are going to drop this columns.","6778086a":"<h3>- Mansonery <\/h3>\n\nIn this case we suposse that the are not any Masonry veneer. So we fill the MasVnrType with None and MasVnrArea with 0.","7fbdb491":"<h3>- Garage <\/h3>\n\nThese houses don't have garage, so the GarageCars and GarageArea are 0.","bbdeea97":"<h3>- Garage <\/h3>\n\nWe see that all the missing values related with garage are 81. After analysing this data, these houses don't have garage. \n\nExcept the GarageYrBlt, all the other features are categorial, thefore we are going to create a new category : NA of Not applicable.\n\nFor the *GarageYrBlt* we are going to use the YearBuilt.","53ed689b":"<h3>- Basement <\/h3>\n\nThese houses don't have basement, so this features are filled by 0.","b443cac0":"# 1. Introduction\n\nThis notebook aims to clean the data before visualization or building a prediction model.\n\nPlease don't forget to UpVote this notebook if you like it.","3fb96639":"# 4. Data cleaning\n\nThere are some features with missing values. Therefore, we have to clean the data before build the prediction model.\n","7c3fa635":"<h3>- Basement <\/h3>\n\nThe same as Garage happens with the basement. There are 38 houses without basement. As all the features are categorical we fill them with NA.\n","9c6c9a15":"<center><h1> Housing Price Prediction <\/h1><\/center>\n<img src=\"https:\/\/www.gannett-cdn.com\/-mm-\/993b9c963af2f809bf7016def674a2171fed7451\/c=95-0-2002-1430\/local\/-\/media\/2019\/09\/18\/USATODAY\/usatsports\/MotleyFool-TMOT-dad84df8-sold-sign.jpg?quality=50&width=640\" width=\"600px\">","62b29b76":"# 3. Reading Train CSV Data to build models","be390d40":"<h3>- Electrical <\/h3>\n\nWe can not know with electrical category is this house and as there are only one missing values, we are going to drop this house.","5b628987":"# 2. Importing required libraries","96e8b0b0":"<h3>- Exterior <\/h3>\n\nWe fill the missing values for Other.","7af9901b":"We create a function with all this changes in order to do the same to the test data.","2d6e729c":"<h3>- Bathroom <\/h3>\n\nWe fill the missing values for the median."}}