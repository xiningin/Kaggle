{"cell_type":{"5d5df94a":"code","dee8b727":"code","3f3eaf03":"code","b4b763e3":"code","25ede42c":"code","d53693ec":"code","67f2a319":"code","4342e1dc":"code","8995d541":"code","5c9eab07":"code","e44d4955":"code","aeab4e3d":"code","2e1d17de":"code","f19f630d":"code","366eb88f":"code","411ca648":"code","ef7a9447":"code","0b00042e":"code","fb62908d":"code","05cf03a5":"code","7e4555be":"code","565617a6":"code","e51ed24c":"markdown","d2aa4e22":"markdown","ed6587ff":"markdown","a7a6bbfc":"markdown","c4833f29":"markdown","72ab2ed5":"markdown","39dd9db8":"markdown","0a0618bf":"markdown","2a56f9e6":"markdown","cdce9ac8":"markdown","48c8ce10":"markdown","2b826ec8":"markdown","5d7ec105":"markdown","02d6c168":"markdown","30c1157a":"markdown","1d2c8213":"markdown","5475cd20":"markdown","9b3b1b07":"markdown","8debe675":"markdown","b3495ec3":"markdown","86e32b13":"markdown","3d98e7e2":"markdown","91692e0d":"markdown","97332076":"markdown","7d3b55aa":"markdown","4d999771":"markdown","d61c2d34":"markdown","36dd854b":"markdown","d716fb09":"markdown"},"source":{"5d5df94a":"!pip install wtss[matplotlib]","dee8b727":"from wtss import WTSS","3f3eaf03":"service = WTSS('https:\/\/brazildatacube.dpi.inpe.br\/', access_token='change-me')","b4b763e3":"service.coverages","25ede42c":"cbers4_coverage = service['CB4_64_16D_STK-1']\ncbers4_coverage","d53693ec":"red_band = 'BAND15'\nnir_band = 'BAND16'","67f2a319":"time_series = cbers4_coverage.ts(attributes=(red_band, nir_band),\n                                 latitude=-16.817, longitude=-52.079,\n                                 start_date=\"2017-01-01\", end_date=\"2019-12-31\")","4342e1dc":"time_series.plot()","8995d541":"print(time_series.values(red_band))\nprint()\nprint(time_series.values(nir_band))","5c9eab07":"import matplotlib.pyplot as plt","e44d4955":"plt.scatter(time_series.values(red_band), time_series.values(nir_band), alpha=0.5)\nplt.title('Scatter plot')\nplt.xlabel('Red')\nplt.ylabel('NIR')\nplt.show()","aeab4e3d":"time_series2 = cbers4_coverage.ts(attributes=(red_band, nir_band),\n                                  latitude=-16.819, longitude=-52.079,\n                                  start_date=\"2017-01-01\", end_date=\"2019-12-31\")","2e1d17de":"plt.scatter(time_series.values(nir_band), time_series2.values(nir_band), alpha=0.5)\nident = [0.0, max(time_series.values(nir_band))] # Reference Line\nplt.plot(ident,ident, color='red', ls='--')\nplt.title('Scatter plot')\nplt.xlabel('NIR TS1')\nplt.ylabel('NIR TS2')\nplt.show()","f19f630d":"import numpy","366eb88f":"agriculture_time_series = []\nfor latitude in numpy.arange(-16.905,-16.955,-0.01):\n    time_series = cbers4_coverage.ts(attributes=(nir_band),\n                                     latitude=float(latitude), longitude=-53.989,\n                                     start_date=\"2017-01-01\", end_date=\"2019-12-31\")\n    agriculture_time_series.append(time_series.values(nir_band))","411ca648":"len(agriculture_time_series)","ef7a9447":"median = numpy.median(agriculture_time_series, axis=0)","0b00042e":"median","fb62908d":"for i in range(len(agriculture_time_series)):\n    plt.plot(agriculture_time_series[i], color='grey', alpha=0.5)\nplt.plot(median, color='blue', linewidth=2)\nplt.show()","05cf03a5":"from scipy.signal import savgol_filter","7e4555be":"median_smoothed = savgol_filter(median, window_length = 9, polyorder = 2)","565617a6":"plt.plot(median, color='blue')\nplt.plot(median_smoothed, color='red')\nplt.show()","e51ed24c":"# Scatter Plot\n<hr style=\"border:1px solid #0077b9;\">","d2aa4e22":"Let's retrieve the time series for data product `CB4_64_16D_STK-1`, in the location of `latitude -16.817` and `longitude -52.079` from January 1st, 2017 to December 31st, 2019, using the `ts` method:","ed6587ff":"Let's access the CBERS-4\/AWFI coverage using the `CB4_64_16D_STK-1` product:","a7a6bbfc":"# Python Client API\n<hr style=\"border:1px solid #0077b9;\">","c4833f29":"# See also the following Jupyter Notebooks\n<hr style=\"border:1px solid #0077b9;\">\n\n* [Introduction to the Web Time Series Service (WTSS)](.\/wtss-introduction.ipynb)","72ab2ed5":"Performing a scatterplot between `red` and `NIR` Time Series we can see the correlation of theese bands through the time for the selected pixel:","39dd9db8":"# Set the service and Search for time series\n<hr style=\"border:1px solid #0077b9;\">","0a0618bf":"CBERS-4\/AWFI spectral bands 15 and 16 correspond to the red and near-infrared (NIR) wavelength regions, respectivelly:","2a56f9e6":"# Time Series Smoothing\n<hr style=\"border:1px solid #0077b9;\">","cdce9ac8":"<img src=\"https:\/\/raw.githubusercontent.com\/brazil-data-cube\/code-gallery\/master\/img\/logo-bdc.png\" align=\"right\" width=\"64\"\/>\n\n# <span style=\"color:#336699\">Web Time Series Service (WTSS) - Examples<\/span>\n<hr style=\"border:2px solid #0077b9;\">\n\n<div style=\"text-align: left;\">\n    <a href=\"https:\/\/nbviewer.jupyter.org\/github\/brazil-data-cube\/code-gallery\/blob\/master\/jupyter\/Python\/wtss\/wtss-examples.ipynb\"><img src=\"https:\/\/raw.githubusercontent.com\/jupyter\/design\/master\/logos\/Badges\/nbviewer_badge.svg\" align=\"center\"\/><\/a>\n<\/div>\n\n<br\/>\n\n<div style=\"text-align: center;font-size: 90%;\">\n    Rennan F. B. Marujo<sup><a href=\"https:\/\/orcid.org\/0000-0002-0082-9498\"><i class=\"fab fa-lg fa-orcid\" style=\"color: #a6ce39\"><\/i><\/a><\/sup>, Matheus Zaglia<sup><a href=\"https:\/\/orcid.org\/0000-0001-6181-2158\"><i class=\"fab fa-lg fa-orcid\" style=\"color: #a6ce39\"><\/i><\/a><\/sup>, Gilberto R. Queiroz<sup><a href=\"https:\/\/orcid.org\/0000-0001-7534-0219\"><i class=\"fab fa-lg fa-orcid\" style=\"color: #a6ce39\"><\/i><\/a><\/sup>\n    <br\/><br\/>\n    Earth Observation and Geoinformatics Division, National Institute for Space Research (INPE)\n    <br\/>\n    Avenida dos Astronautas, 1758, Jardim da Granja, S\u00e3o Jos\u00e9 dos Campos, SP 12227-010, Brazil\n    <br\/><br\/>\n    Contact: <a href=\"mailto:brazildatacube@inpe.br\">brazildatacube@inpe.br<\/a>\n    <br\/><br\/>\n    Last Update: April 09, 2021\n<\/div>\n\n<br\/>\n\n<div style=\"text-align: justify;  margin-left: 25%; margin-right: 25%;\">\n<b>Abstract.<\/b> This Jupyter Notebook gives shows how to use the WTSS service to extract time series from <em>Brazil Data Cube<\/em>' service and how to perform a basic time series manipulation.\n<\/div>    \n\n<br\/>\n<div style=\"text-align: justify;  margin-left: 25%; margin-right: 25%;font-size: 75%; border-style: solid; border-color: #0077b9; border-width: 1px; padding: 5px;\">\n    <b>This Jupyter Notebook is a supplement to the following paper:<\/b>\n    <div style=\"margin-left: 10px; margin-right: 10px\">\n    Vinhas, L.; Queiroz, G. R.; Ferreira, K. R.; Camara, G. <a href=\"http:\/\/www.seer.ufu.br\/index.php\/revistabrasileiracartografia\/article\/view\/44004\" target=\"_blank\">Web Services for Big Earth Observation Data<\/a>. Revista Brasileira de Cartografia, v. 69, n. 5, 18 maio 2017.\n    <\/div>\n<\/div>","48c8ce10":"We can visually note that the `blue` time series is centered in comparison to the `grey` ones.","2b826ec8":"# Plot the Time Series\n<hr style=\"border:1px solid #0077b9;\">","5d7ec105":"The `Numpy` library provides the `median()` method, which calculates the median value of an array, and since we want to obtain the median value among the different time series, we can use the parameter `axis=0`:","02d6c168":"Let's see the time series values:","30c1157a":"# Calculate Median Time Series\n<hr style=\"border:1px solid #0077b9;\">","1d2c8213":"Define the service to be used:","5475cd20":"Smoothing Algorithms are helpful to reduce time series noise, one of the most used smoothing algorithm is Savitz Golay, which has an implementation on the `scipy` library:","9b3b1b07":"# References\n<hr style=\"border:1px solid #0077b9;\">\n\n- [Python Client Library for Web Time Series Service - User Guide](https:\/\/wtss.readthedocs.io\/en\/latest\/index.html)\n\n\n- [Python Client Library for Web Time Series Service - GitHub Repository](https:\/\/github.com\/brazil-data-cube\/wtss.py)\n\n\n- [WTSS OpenAPI 3 Specification](https:\/\/github.com\/brazil-data-cube\/wtss-spec)\n\n\n- VINHAS, L.; QUEIROZ, G. R.; FERREIRA, K. R.; C\u00c2MARA, G. [Web Services for Big Earth Observation Data](http:\/\/www.seer.ufu.br\/index.php\/revistabrasileiracartografia\/article\/view\/44004). Revista Brasileira de Cartografia, v. 69, n. 5, 18 maio 2017.","8debe675":"If all points were positioned on the red line, the time series would be equal. However, since they are similar, the points are located close to the red line, meaning they present close values.","b3495ec3":"If you haven't installed the [WTSS client for Python](https:\/\/github.com\/brazil-data-cube\/wtss.py), install it with `pip`:","86e32b13":"Now let's plot the original time series, in `grey` and the median time series, in `blue`:","3d98e7e2":"Another application would be: given a set of Time Series we may want to extract the median time series, which normally is the one with less noise.\n\nLet's start by acquiring a few time series from an agricultural region, in this case a fixed `longitude -53.989` but a variable `latitude` ranging from `-16.905` until `-16.955` by a rate of `-0.01`, considering images from January 1st, 2017 to December 31st, 2019.","91692e0d":"This loop provides a total of five time series:","97332076":"Time series of spatially-close points are likely to be similar. We can verify this by comparing our first time series to a time series extracted from `latitude -16.819` and `longitude -52.079` (also ranging from January 1st, 2017 to December 31st, 2019):","7d3b55aa":"We can observe that the smoothed time series (red) has less spikes than the original one (blue).","4d999771":"For more information on [WTSS client for Python](https:\/\/github.com\/brazil-data-cube\/wtss.py), see the introductory Jupyter Notebook about [Web Time Series Service (WTSS)](.\/wtss-introduction.ipynb) Introduction notebook.","d61c2d34":"Now let's see the difference between the original time series and the smoothed one:","36dd854b":"Import the WTSS client library:","d716fb09":"<div style=\"text-align: center;  margin-left: 25%; margin-right: 25%; border-style: solid; border-color: #0077b9; border-width: 1px; padding: 5px;\">\n    <b>Note:<\/b> The <em>Savitz Golay<\/em> algorithm uses a window_length and a polynomial order as parameters. You can change these values to see the impacts on the smoothed time series.\n<\/div>"}}