{"cell_type":{"12af1806":"code","9f9efd33":"code","9e00b8da":"code","1903c9f2":"code","e5bab055":"markdown","1ddeb642":"markdown","2015d7d7":"markdown"},"source":{"12af1806":"import pandas as pd\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import linear_kernel \nds = pd.read_csv(\"..\/input\/product-item-data\/sample-data.csv\")","9f9efd33":"ds.head(10)","9e00b8da":"tf = TfidfVectorizer(analyzer='word', ngram_range=(1, 3), min_df=0, stop_words='english')\ntfidf_matrix = tf.fit_transform(ds['description'])\n\ncosine_similarities = linear_kernel(tfidf_matrix, tfidf_matrix)\n\nresults = {}\n\nfor idx, row in ds.iterrows():\n    similar_indices = cosine_similarities[idx].argsort()[:-100:-1]\n    similar_items = [(cosine_similarities[idx][i], ds['id'][i]) for i in similar_indices]\n\n    results[row['id']] = similar_items[1:]\n\ndef item(id):\n    return ds.loc[ds['id'] == id]['description'].tolist()[0].split(' - ')[0]\n\n# Just reads the results out of the dictionary.\ndef recommend(item_id, num):\n    print(\"Recommending \" + str(num) + \" products similar to \" + item(item_id) + \"...\")\n    print(\"-------\")\n    recs = results[item_id][:num]\n    for rec in recs:\n        print(\"Recommended: \" + item(rec[1]) + \" (score:\" + str(rec[0]) + \")\")\n\nrecommend(item_id=11, num=5)","1903c9f2":"recommend(item_id=56, num=3)","e5bab055":"Disadvantages of Content Based Filtering\n* Limited content analysis: If the content doesn\u2019t contain enough information to discriminate the items precisely, the recommendation itself risks being imprecise.\n* Over-specialization: Content-based filtering provides a limited degree of novelty, since it has to match up the features of a user\u2019s profile with available items. In the case of item-based filtering, only item profiles are created and users are suggested items similar to what they rate or search for, instead of their past history. A perfect content-based filtering system may suggest nothing unexpected or surprising.","1ddeb642":"Advantages of Content Based Filtering\n* User independence: Collaborative filtering needs other users\u2019 ratings to find similarities between the users and then give suggestions. Instead, the content-based method only has to analyze the items and a single user\u2019s profile for the recommendation, which makes the process less cumbersome. Content-based filtering would thus produce more reliable results with fewer users in the system.\n* Transparency: Collaborative filtering gives recommendations based on other unknown users who have the same taste as a given user, but with content-based filtering items are recommended on a feature-level basis.\n* No cold start: As opposed to collaborative filtering, new items can be suggested before being rated by a substantial number of users.","2015d7d7":"modeled after: https:\/\/heartbeat.fritz.ai\/recommender-systems-with-python-part-i-content-based-filtering-5df4940bd831"}}