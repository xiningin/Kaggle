{"cell_type":{"215a2eb0":"code","77fce802":"code","55bba6d6":"code","2a728bf5":"code","c3dafb8b":"code","7c581ac5":"code","972f88bb":"code","cd78366a":"code","7c019c92":"code","4398dd92":"code","f555a0f3":"code","691f144d":"code","7595cf7b":"code","43fb5219":"code","2e1edb09":"code","57572b3e":"code","b3f1cc8c":"code","eddd9f90":"code","23f974d5":"code","9c3e0eba":"code","d656ee61":"code","e2353b20":"code","c38588ad":"code","f891f051":"code","74b71d0a":"code","5df8b7ab":"code","c8107ba5":"code","128eb79a":"code","1c9cc1b6":"code","b65b9062":"code","7dbb47be":"code","76bdfa72":"code","75d84f10":"code","4b2aed34":"code","e1e61d21":"code","c881f290":"code","f531690c":"code","7855a7dd":"code","0cf53b5c":"code","cf69d3f2":"code","9db222dd":"code","e5e7aee3":"code","2bed5838":"code","61e3f30a":"code","f7c458be":"code","94ade803":"code","33f1f5c0":"code","34e5192f":"code","2102f6bf":"code","a91587bf":"code","2afd0be8":"code","2ce97040":"code","b43dd09b":"code","3d0057a0":"code","6fe1f9b5":"markdown","8b38bd79":"markdown","70f6c19f":"markdown","787df369":"markdown","236f2855":"markdown","46fc466e":"markdown","4de4f95c":"markdown","d3d85930":"markdown","08faec8c":"markdown","3a66390a":"markdown","afe7695b":"markdown","0eb03c9e":"markdown","3dd62467":"markdown","5c405f69":"markdown","32362a7e":"markdown"},"source":{"215a2eb0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","77fce802":"# data loading\ntrain = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/train_users_2.csv.zip')\nage_gender = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/age_gender_bkts.csv.zip')\ncountries_df = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/countries.csv.zip')\nsession_df = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/sessions.csv.zip')\ntest = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/test_users.csv.zip')\n\nprint('train shape: ', train.shape) \nprint('test shape: ', test.shape)\nprint('age_gender_bkts: ', age_gender.shape)\nprint('countries: ', countries_df.shape)\nprint('session: ', session_df.shape)","55bba6d6":"train.head()","2a728bf5":"print(train.date_account_created.min())\nprint(train.date_account_created.max())","c3dafb8b":"train.info()","7c581ac5":"# https:\/\/gist.github.com\/sainathadapa\/08c1028c92684fe1ec89ecb5d5629a57\ndef glimpse(df, maxvals=10, maxlen=110):\n    print('Shape: ', df.shape)\n    \n    def pad(y):\n        max_len = max([len(x) for x in y])\n        return [x.ljust(max_len) for x in y]\n    \n    # Column Name\n    toprnt = pad(df.columns.tolist())\n    \n    # Column Type\n    toprnt = pad([toprnt[i] + ' ' + str(df.iloc[:,i].dtype) for i in range(df.shape[1])])\n    \n    # Num NAs\n    num_nas = [df.iloc[:,i].isnull().sum() for i in range(df.shape[1])]\n    num_nas_ratio = [int(round(x*100\/df.shape[0])) for x in num_nas]\n    num_nas_str = [str(x) + ' (' + str(y) + '%)' for x,y in zip(num_nas, num_nas_ratio)]\n    max_len = max([len(x) for x in num_nas_str])\n    num_nas_str = [x.rjust(max_len) for x in num_nas_str]\n    toprnt = [x + ' ' + y + ' NAs' for x,y in zip(toprnt, num_nas_str)]\n    \n    # Separator\n    toprnt = [x + ' : ' for x in toprnt]\n    \n    # Values\n    toprnt = [toprnt[i] + ', '.join([str(y) for y in df.iloc[:min([maxvals,df.shape[0]]), i]]) for i in range(df.shape[1])]\n    \n    # Trim to maxlen\n    toprnt = [x[:min(maxlen, len(x))] for x in toprnt]\n    \n    for x in toprnt:\n        print(x)","972f88bb":"glimpse(train)","cd78366a":"glimpse(test)","7c019c92":"train.first_affiliate_tracked.value_counts()","4398dd92":"plt.figure(figsize=(14,8))\ncd_count_idx = train['first_affiliate_tracked'].value_counts().index\nsns.countplot(data = train, x = 'first_affiliate_tracked', order = cd_count_idx, color = sns.color_palette()[3])\nplt.xlabel('First Affiliate Tracked')\nplt.ylabel('Count')\nplt.title('First Affiliate Distribution')\ncd_count_val = train['first_affiliate_tracked'].value_counts()\n\nfor i in range(cd_count_val.shape[0]):\n    count = cd_count_val[i]\n    percentage ='{:0.1f}%'.format(100 * count \/ len(train))\n    plt.text(i, count+1000, percentage, ha='center')","f555a0f3":"train.affiliate_provider.value_counts()","691f144d":"plt.figure(figsize=(14,8))\ncd_count_idx = train['affiliate_provider'].value_counts()[:6].index\nsns.countplot(data = train, x = 'affiliate_provider', order = cd_count_idx, color = sns.color_palette()[3])\nplt.xlabel('Affiliate Provider')\nplt.ylabel('Count')\nplt.title('Affiliate Provider Distribution')\ncd_count_val = train['affiliate_provider'].value_counts()[:6]\n\nfor i in range(cd_count_val.shape[0]):\n    count = cd_count_val[i]\n    percentage ='{:0.1f}%'.format(100 * count \/ len(train))\n    plt.text(i, count+1000, percentage, ha='center')","7595cf7b":"train[train.duplicated()]","43fb5219":"train['id'].describe()","2e1edb09":"train['gender'].value_counts()","57572b3e":"train['age'].describe()","b3f1cc8c":"sns.histplot(train['age'], kde = True)","eddd9f90":"train['age'] = train['age'].apply(lambda x: 122 if x > 122 else x)\ntrain['age'] = train['age'].apply(lambda x: 18 if x < 18 else x)","23f974d5":"test['age'].describe()","9c3e0eba":"test['age'] = test['age'].apply(lambda x: 122 if x > 122 else x)\ntest['age'] = test['age'].apply(lambda x: 18 if x < 18 else x)","d656ee61":"sns.histplot(train['age'], kde = True)","e2353b20":"train['signup_flow'].value_counts()","c38588ad":"train['signup_method'].value_counts()","f891f051":"train[train.duplicated()]","74b71d0a":"plt.figure(figsize=(14,8))\ncd_count_idx = train['country_destination'].value_counts().index\nsns.countplot(data = train, x = 'country_destination', order = cd_count_idx, color = sns.color_palette()[3])\nplt.xlabel('Destination Country')\nplt.ylabel('Count')\nplt.title('Destination Country Distribution')\ncd_count_val = train['country_destination'].value_counts()\n\nfor i in range(cd_count_val.shape[0]):\n    count = cd_count_val[i]\n    percentage ='{:0.1f}%'.format(100 * count \/ len(train))\n    plt.text(i, count+1000, percentage, ha='center')","5df8b7ab":"session_df.head(10)","c8107ba5":"session_df.sample(20)","128eb79a":"session_df['device_type'].value_counts()","1c9cc1b6":"plt.figure(figsize=(14,8))\ncd_count_idx = session_df['device_type'].value_counts()[:5].index\nsns.countplot(data = session_df, x = 'device_type', order = cd_count_idx, color = sns.color_palette()[3])\nplt.xlabel('Device')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\nplt.title('Devices Type Distribution')\ncd_count_val = session_df['device_type'].value_counts()[:5]","b65b9062":"session_df['action_detail'].unique()","7dbb47be":"session_df['action_detail'].value_counts()[:10]","76bdfa72":"view_search_time = session_df[session_df.action_detail == 'view_search_results']\nview_search_time","75d84f10":"sns.distplot(view_search_time['secs_elapsed'], kde = True)","4b2aed34":"labels = train['country_destination']\ntrain.drop('country_destination', inplace = True, axis = 1)","e1e61d21":"# concat all data into one dataframe for the encoding\ndata = pd.concat((train, test), axis=0, ignore_index=True)\ndata = data.drop(['id', 'date_first_booking'], axis=1)","c881f290":"#One-hot-encoding features\ncat_features = ['gender', 'signup_method', 'signup_flow', 'language', 'affiliate_channel',\n             'affiliate_provider', 'first_affiliate_tracked', 'signup_app', 'first_device_type', 'first_browser']\nfor f in cat_features:\n    data_dummy = pd.get_dummies(data[f], prefix=f) # encode categorical variables\n    data.drop([f], axis=1, inplace = True) # drop encoded variables\n    data = pd.concat((data, data_dummy), axis=1) # concat numerical and categorical variables","f531690c":"data.head()","7855a7dd":"from datetime import datetime\nfrom sklearn.preprocessing import LabelEncoder","0cf53b5c":"# convert date object to datetime\ndata['date_account_created'] = pd.to_datetime(data['date_account_created'])","cf69d3f2":"# create features from date account created.\ndata['ac_year'] = data['date_account_created'].dt.year\ndata['ac_month'] = data['date_account_created'].dt.month\ndata['ac_day'] = data['date_account_created'].dt.day","9db222dd":"# TODO:: Plot holidays effect on the booking or creating accounts.\n##       plot affiliation vs age","e5e7aee3":"data.drop('date_account_created', inplace = True, axis = 1)","2bed5838":"data['timestamp_first_active'] = pd.to_datetime(data['timestamp_first_active'])","61e3f30a":"# create features from timestamp first active.\ndata['ts_fa_year'] = data['timestamp_first_active'].dt.year\ndata['ts_fa_month'] = data['timestamp_first_active'].dt.month\ndata['ts_fa_day'] = data['timestamp_first_active'].dt.day","f7c458be":"data.drop('timestamp_first_active', inplace = True, axis = 1)","94ade803":"# label encode the target value\nle = LabelEncoder()\ny = le.fit_transform(labels)","33f1f5c0":"# split the data to train and test again\n#Splitting train and test\nX = data[:train.shape[0]]\nX_test = data[train.shape[0]:]","34e5192f":"from xgboost import XGBClassifier, plot_importance\nxgb = XGBClassifier(use_label_encoder=False)                  \nxgb.fit(X, y)\n##TODO:: Use GridSearch","2102f6bf":"y_pred = xgb.predict_proba(X_test)","a91587bf":"plot_importance(xgb, max_num_features=15)","2afd0be8":"# get the top 5 prob countries\nids = []  \ncountries = [] \ntest_id = test['id']","2ce97040":"for i in range(len(test_id)):\n    idx = test_id[i]\n    ids += [idx] * 5 # skip 5 indicies as we predict 5 locations for each user\n    countries += le.inverse_transform(np.argsort(y_pred[i])[::-1])[:5].tolist()","b43dd09b":"#Generate submission\nsubmission = pd.DataFrame(np.column_stack((ids, countries)), columns=['id', 'country'])\nsubmission.to_csv('submission.csv',index=False)","3d0057a0":"submission","6fe1f9b5":"### Feature Importance","8b38bd79":"Age seems to have some outliers, so we have to handle it.\n* minimum age to create an acount in airbnb is 18 years.\n* maximum age for a human is 122.  \nwe will set our min and max to these values.","70f6c19f":"No full row duplicates","787df369":"Implement glimpse (R) Function to take a look over the nulls counts, percentages, and dtypes. ","236f2855":"#### Explore values in some variables","46fc466e":"### Target Variable","4de4f95c":"### Sessions data","d3d85930":"# Modeling","08faec8c":"We can see that every user has only one unique record.","3a66390a":"### Apply One-Hot Encoding to Categorical variables","afe7695b":"First, lets check if there are any duplicates in the data","0eb03c9e":"We don't need the date_first_booking variable as it has more than 50% nulls in train and does not exist in test","3dd62467":"# Feature Engineering","5c405f69":"# EDA","32362a7e":"# Submission"}}