{"cell_type":{"540441ce":"code","d8197a6d":"code","58928b09":"code","2f84e05d":"code","d204724b":"code","29c367c3":"code","c17ad2e6":"code","61af8ff5":"code","4726b9ef":"code","4f71ba4e":"code","4d295040":"code","523db2ec":"code","2f20ab90":"code","7de88c22":"code","0801886e":"code","8f05d892":"code","dffef9d2":"code","d653a089":"code","70862271":"code","ef97b925":"code","dc663a8f":"code","a9b5f274":"code","a82bfacc":"code","419d4f0e":"code","54fc2cba":"code","5c671b9d":"code","8733440c":"code","1196cc05":"code","8b63d282":"code","c33a2587":"code","4742109e":"code","38251f4c":"code","8384ad6b":"code","fa90bbfb":"code","ca13d921":"code","e5237efa":"code","3a7c3c8f":"code","21d7bd62":"code","647ff34b":"code","950590d8":"code","260dc8e3":"code","a7555be4":"code","9eab2d00":"markdown","eab75521":"markdown"},"source":{"540441ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d8197a6d":"from dateutil.parser import parse","58928b09":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/a10.csv', parse_dates=['date'])\ndf.head()","2f84e05d":"df2 = pd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/a10.csv', parse_dates=['date'],index_col='date')\ndf2.head()","d204724b":"df2.index","29c367c3":"ts=df2['value']\nts.head()","c17ad2e6":"#import as series object\ndata = pd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/a10.csv', parse_dates=['date'], index_col='date',squeeze= True)\ndata.head()","61af8ff5":"print(type(data))","4726b9ef":"data['1991-07-01']","4f71ba4e":"from datetime import datetime\ndata[datetime(1991,7,1)]","4d295040":"ts['1991-07-01':'1991-12-01']","523db2ec":"ts[:'1991-12-01']","2f20ab90":"ts['1992']","7de88c22":"ts1=ts.sort_index()\nts1.head()","0801886e":"# dataset source: https:\/\/github.com\/rouseguy\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/MarketArrivals.csv')\ndf = df.loc[df.market=='MUMBAI', :]\ndf.head()","8f05d892":"from dateutil.parser import parse\nimport pandas as pd\n \n#import as dataframe\ndata = pd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/a10.csv', parse_dates=['date'],index_col='date')\n \nprint(data.size)\nprint(type(data))\nprint (data.isnull().sum())","dffef9d2":"print(data.describe())","d653a089":"# Time series data source: fpp pacakge in R.\nimport matplotlib.pyplot as plt\n \n# Draw Plot\ndef plot_data(data, x, y, title=\"\", xlabel='Date', ylabel='Value', dpi=100):\n    plt.figure(figsize=(16,5), dpi=dpi)\n    plt.plot(x, y, color='tab:red')\n    plt.gca().set(title=title, xlabel=xlabel, ylabel=ylabel)\n    plt.show()\n \nplot_data(data, x=data.index, y=data, title='Monthly anti-diabetic drug sales in Australia from 1992 to 2008.') \nplt.show()","70862271":"# Import data\nimport numpy as np\n \nx = data.index\ny1 = data.value\n \n# Plot\nfig, ax = plt.subplots(1, 1, figsize=(16,5), dpi= 120)\nplt.fill_between(x, y1=y1, y2=-y1, alpha=0.5, linewidth=2, color='seagreen')\nplt.ylim(-35, 35)\nplt.title('Monthly anti-diabetic drug sales in Australia from 1992 to 2008 (Two Side View)', fontsize=16)\nplt.hlines(y=0, xmin=np.min(data.index), xmax=np.max(data.index), linewidth=.5)\nplt.show()","ef97b925":"import matplotlib as mpl\nX=data\n \n# Prepare data\nX['year'] = [d.year for d in X.index]\nX['month'] = [d.strftime('%b') for d in X.index]\nyears = X['year'].unique()\n \n# Prep Colors\nnp.random.seed(100)\nmycolors = np.random.choice(list(mpl.colors.XKCD_COLORS.keys()), len(years), replace=False)\n \n# Draw Plot\nplt.figure(figsize=(16,12), dpi= 80)\nfor i, y in enumerate(years):\n    if i > 0:        \n        plt.plot('month', 'value', data=X.loc[X.year==y, :], color=mycolors[i], label=y)\n        plt.text(X.loc[X.year==y, :].shape[0]-.9, X.loc[X.year==y, 'value'][-1:].values[0], y, fontsize=12, color=mycolors[i])\n \n# Decoration\nplt.gca().set(xlim=(-0.3, 11), ylim=(2, 30), ylabel='$Drug Sales$', xlabel='$Month$')\nplt.yticks(fontsize=12, alpha=.7)\nplt.title(\"Seasonal Plot of Drug Sales Time Series\", fontsize=20)\nplt.show()","dc663a8f":"import matplotlib \nprint('matplotlib: {}'.format(matplotlib.__version__))","a9b5f274":"# Import Data\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n \n# Draw Plot\nfig, axes = plt.subplots(1, 2, figsize=(20,7), dpi= 80)\nsns.boxplot(x='year', y='value', data=X, ax=axes[0])\nsns.boxplot(x='month', y='value', data=X.loc[~X.year.isin([1991, 2008]), :])\n \n# Set Title\naxes[0].set_title('Year-wise Box Plot\\n(The Trend)', fontsize=18); \naxes[1].set_title('Month-wise Box Plot\\n(The Seasonality)', fontsize=18)\nplt.show()","a82bfacc":"# Import Data\nfrom matplotlib import pyplot as plt\nimport pandas as pd\nfig, axes = plt.subplots(1,3, figsize=(20,4), dpi=100)\npd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/guinearice.csv', parse_dates=['date'], index_col='date').plot(title='Trend Only', legend=False, ax=axes[0])\n \npd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/sunspotarea.csv', parse_dates=['date'], index_col='date').plot(title='Seasonality Only', legend=False, ax=axes[1])\n \npd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/AirPassengers.csv', parse_dates=['date'], index_col='date').plot(title='Trend and Seasonality', legend=False, ax=axes[2])\nplt.show()","419d4f0e":"from statsmodels.tsa.seasonal import seasonal_decompose\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\n \ndata = pd.read_csv('https:\/\/raw.githubusercontent.com\/selva86\/datasets\/master\/a10.csv', parse_dates=['date'],index_col='date')\n \n#additive decomposition\nresult_add = seasonal_decompose(data, model='additive',extrapolate_trend='freq')\n \n#multiplicative decomposition\nresult_mul = seasonal_decompose(data, model='multiplicative',extrapolate_trend='freq')\n \n#plot\nresult_mul.plot().suptitle('Multiplicative Decompose')\nresult_add.plot().suptitle('Additive Decompose')\nplt.show()","54fc2cba":"# Extract the Components ----\nreconst= pd.concat([result_mul.seasonal, result_mul.trend, result_mul.resid, result_mul.observed], axis=1)\nreconst.columns = ['seasonal', 'trend', 'residual', 'actual_values']\nreconst.head()","5c671b9d":"data.hist()\nplt.show()","8733440c":"split = int(len(data) \/ 2)\nX1, X2 = data[0:split], data[split:]\nmean1, mean2 = X1.mean(), X2.mean()\nvar1, var2 = X1.var(), X2.var()\nprint('mean1=%f, mean2=%f' % (mean1, mean2))\nprint('variance1=%f, variance2=%f' % (var1, var2))","1196cc05":"from statsmodels.tsa.stattools import adfuller\nX = data.value\nresult = adfuller(X)\nprint('ADF Statistic: %f' % result[0])\nprint('p-value: %f' % result[1])","8b63d282":"from statsmodels.tsa.stattools import kpss\nresult = kpss(X, regression='c')\nprint('\\nKPSS Statistic: %f' % result[0])\nprint('p-value: %f' % result[1])","c33a2587":"from scipy import signal\ndetrended = signal.detrend(data.value)\nplt.plot(detrended)\nplt.title('Drug Sales detrended', fontsize=22)\nplt.show()","4742109e":"# Using statmodels: Subtracting the Trend Component.\nresult_mul = seasonal_decompose(data.value, model='multiplicative', extrapolate_trend='freq')\ndetrended = data.value - result_mul.trend\nplt.plot(detrended)\nplt.title('Drug Sales detrended by subtracting the trend component', fontsize=12)\nplt.show()","38251f4c":"from statsmodels.tsa.seasonal import seasonal_decompose\nstationarized = result_mul.resid\nplt.plot(stationarized)\nplt.title('Drug Sales stationarized', fontsize=16)\nplt.show()","8384ad6b":"from numpy import log\nresult = adfuller(data.value.dropna())\nprint('p-value: %f' % result[1])\ndata_log=log(data.value)\n \n#After 1st difference\ndata_diff=data_log.diff()\nresult_diff = adfuller(data_diff.dropna())\nprint('p-value after 1st difference: %f' % result_diff[1])","fa90bbfb":"from pandas.plotting import autocorrelation_plot\n \n# Draw Plot\nautocorrelation_plot(data.value.tolist())","ca13d921":"from statsmodels.graphics.tsaplots import plot_pacf\nplot_pacf(data_diff.dropna())\n \nplt.show()","e5237efa":"from statsmodels.graphics.tsaplots import plot_acf\nplot_acf(data_diff.dropna())\n \nplt.show()","3a7c3c8f":"from statsmodels.tsa.arima_model import ARIMA\n \n# 1,1,2 ARIMA Model\nmodel = ARIMA(data_log, order=(1,1,2))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","21d7bd62":"from statsmodels.tsa.arima_model import ARIMA\n \n# 2,1,2 ARIMA Model\nmodel = ARIMA(data_log, order=(2,1,2))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","647ff34b":"# Plot residual errors\nresiduals = pd.DataFrame(model_fit.resid)\nfig, ax = plt.subplots(1,2)\nresiduals.plot(title=\"Residuals\", ax=ax[0])\nresiduals.plot(kind='kde', title='Density', ax=ax[1])\nplt.show()","950590d8":"from statsmodels.tsa.arima_model import ARIMA\n \n# AR-2 Model\nmodel = ARIMA(data_log, order=(2,1,0))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","260dc8e3":"from statsmodels.tsa.arima_model import ARIMA\n \n# MA-2 Model\nmodel = ARIMA(data, order=(0,1,2))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","a7555be4":"from statsmodels.tsa.arima_model import ARIMA\n \n# ARMA Model\nmodel = ARIMA(data_diff.dropna(), order=(2,0,2))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","9eab2d00":"# Working with Time Series Analysis - Bangla","eab75521":"Learning Source (1) - [here](https:\/\/www.kaykobadreza.com\/%e0%a6%9f%e0%a6%be%e0%a6%87%e0%a6%ae-%e0%a6%b8%e0%a6%bf%e0%a6%b0%e0%a6%bf%e0%a6%9c-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%be%e0%a6%b2%e0%a6%be%e0%a6%87%e0%a6%b8%e0%a6%bf%e0%a6%b8\/)\n\nLearning Source (2) - [here](https:\/\/www.kaykobadreza.com\/%e0%a6%9f%e0%a6%be%e0%a6%87%e0%a6%ae-%e0%a6%b8%e0%a6%bf%e0%a6%b0%e0%a6%bf%e0%a6%9c-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%be%e0%a6%b2%e0%a6%be%e0%a6%87%e0%a6%b8%e0%a6%bf%e0%a6%b8%e0%a7%87\/)\n\nLearning Source (3) - [here](https:\/\/www.kaykobadreza.com\/%e0%a6%9f%e0%a6%be%e0%a6%87%e0%a6%ae-%e0%a6%b8%e0%a6%bf%e0%a6%b0%e0%a6%bf%e0%a6%9c-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%be%e0%a6%b2%e0%a6%be%e0%a6%87%e0%a6%b8%e0%a6%bf%e0%a6%b8-2\/)\n\nLearning Source (4) - [here](https:\/\/www.kaykobadreza.com\/%e0%a6%9f%e0%a6%be%e0%a6%87%e0%a6%ae-%e0%a6%b8%e0%a6%bf%e0%a6%b0%e0%a6%bf%e0%a6%9c-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%be%e0%a6%b2%e0%a6%be%e0%a6%87%e0%a6%b8%e0%a6%bf\/)\n\nLearning Source (5) - [here](https:\/\/www.kaykobadreza.com\/%e0%a6%9f%e0%a6%be%e0%a6%87%e0%a6%ae-%e0%a6%b8%e0%a6%bf%e0%a6%b0%e0%a6%bf%e0%a6%9c-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%be%e0%a6%b2%e0%a6%be%e0%a6%87%e0%a6%b8%e0%a6%bf%e0%a6%b8-3\/)"}}