{"cell_type":{"7f5032ad":"code","db43f732":"code","e6a48256":"code","dcbe71dc":"code","910fd7fd":"code","f64abc18":"code","5633b72a":"code","28005ae0":"code","0b6fd613":"code","1192353e":"code","173c9078":"code","d4d93afa":"code","55cfd5d9":"code","4a02e395":"code","b9d3f932":"code","64cf0d5a":"code","2f13cee1":"code","855e9cc6":"code","e6aae527":"code","5c5152a2":"code","70e4eeec":"code","17bc04bb":"code","67b98646":"code","8cbb052c":"code","cec2faa9":"code","1c7cfc73":"code","19211cd1":"code","ac090729":"code","32f9ec70":"code","e1aaf5e4":"code","f2e43cca":"code","2a1dbb7f":"code","565aa401":"code","ac9135b2":"code","d9c937b8":"code","1143c60b":"code","43ee8adf":"code","afabdae1":"code","b953f261":"code","e55fe69b":"code","c36eda11":"code","323b3683":"code","5e997039":"code","ff83d97a":"code","5fa173f1":"code","46c4e566":"code","20948ea9":"code","d92f8a51":"code","58253eda":"code","b9a65c25":"code","5d63260b":"code","e222e771":"code","5b22b4a3":"code","0c0d7cba":"code","e5574250":"code","46831632":"code","2226989d":"code","2d145ed2":"code","9483151e":"code","b2e31297":"code","19ce231d":"code","8ba9117e":"code","d63875bd":"code","a15b14a9":"code","b9e734fb":"code","5a104d0f":"code","c48b9536":"code","4d1ab4ab":"code","3153c35f":"code","64974a33":"code","885c9be5":"code","cc5267fe":"code","b13d54aa":"code","a20d71fb":"code","04268a8b":"markdown","3dc2c076":"markdown","771ddec9":"markdown","6d402ac4":"markdown","41583892":"markdown","ce9d169b":"markdown","360b750c":"markdown","b73f6e59":"markdown","bd89da28":"markdown","4616ee6b":"markdown","1164335e":"markdown","be1b4f67":"markdown","7f52c913":"markdown","4dd55d2f":"markdown","bad84651":"markdown","64b3f53f":"markdown","9769d99a":"markdown","0fa8de62":"markdown","e5596983":"markdown","b4106dc6":"markdown","8ab736fd":"markdown","223fc5fe":"markdown","7f8b4312":"markdown","4a413de8":"markdown","6db2c59e":"markdown","9c8f4713":"markdown","dc530375":"markdown","5f25d37e":"markdown","5955a17a":"markdown","b7a4dc7f":"markdown","6fa17601":"markdown","55fc60e8":"markdown","1921a0a8":"markdown","a427c898":"markdown","e266041d":"markdown","bef59973":"markdown","49dfdab1":"markdown","62ec1124":"markdown","f2869d88":"markdown","e2bc2dc7":"markdown"},"source":{"7f5032ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db43f732":"country_data=pd.read_csv(\"..\/input\/datacamp-seaborn\/countries-of-the-world.csv\")\ncountry_data.head()","e6a48256":"gdp=country_data[\"GDP ($ per capita)\"].tolist()\nphones=country_data[\"Phones (per 1000)\"].tolist()\npercent_literate=country_data[\"Literacy (%)\"].tolist()\nregion=country_data[\"Region\"].tolist()","dcbe71dc":"# Create scatter plot with GDP on the x-axis and number of phones on the y-axis\nsns.scatterplot(x=gdp,y=phones)\nplt.show()","910fd7fd":"sns.scatterplot(x=gdp, y=percent_literate)\n\n# Show plot\nplt.show()","f64abc18":"# Create count plot with region on the y-axis\nsns.countplot(y=region)\n\n# Show plot\nplt.show()","5633b72a":"younPeople=pd.read_csv(\"..\/input\/datacamp-seaborn\/young-people-survey-responses.csv\")\nyounPeople.head()","28005ae0":"# Create a count plot with \"Spiders\" on the x-axis\nsns.countplot(x=\"Spiders\",data=younPeople)\n\n# Display the plot\nplt.show()","0b6fd613":"mpg=pd.read_csv(\"..\/input\/datacamp-seaborn\/mpg.csv\")","1192353e":"# Create scatter plot of horsepower vs. mpg\nsns.relplot(x=\"horsepower\",y=\"mpg\",data=mpg,kind=\"scatter\",\nsize=\"cylinders\")\n\n# Show plot\nplt.show()# Create scatter plot of horsepower vs. mpg\nsns.relplot(x=\"horsepower\", y=\"mpg\", \n            data=mpg, kind=\"scatter\", \n            size=\"cylinders\",hue=\"cylinders\")\n\n# Show plot\nplt.show()","173c9078":"# Create a scatter plot of acceleration vs. mpg\nsns.relplot(x=\"acceleration\",y=\"mpg\",data=mpg,style=\"origin\",hue=\"origin\")\n\n# Show plot\nplt.show()","d4d93afa":"# Create line plot\nsns.relplot(x=\"model_year\",y=\"mpg\",data=mpg,kind=\"line\")\n\n# Show plot\nplt.show()","55cfd5d9":"sns.relplot(x=\"model_year\", y=\"mpg\",\n            data=mpg, kind=\"line\",ci=\"sd\")\n\n# Show plot\nplt.show()","4a02e395":"# Change to create subgroups for country of origin\nsns.relplot(x=\"model_year\", y=\"horsepower\", \n            data=mpg, kind=\"line\", \n            ci=None,style=\"origin\",hue=\"origin\",markers=True,dashes=False)\n\n# Show plot\nplt.show()","b9d3f932":"survey_data=pd.read_csv(\"..\/input\/datacamp-seaborn\/young-people-survey-responses.csv\")","64cf0d5a":"# Create count plot of internet usage\nsns.catplot(x=\"Internet usage\",data=survey_data,kind=\"count\")\n\n\n# Show plot\nplt.show()","2f13cee1":"# Create count plot of internet usage\nsns.catplot(y=\"Internet usage\",data=survey_data,kind=\"count\")\n\n# Show plot\nplt.show()","855e9cc6":"# Create count plot of internet usage\nsns.catplot(y=\"Internet usage\",data=survey_data,kind=\"count\")\n\n# Show plot\nplt.show()","e6aae527":"# Create scatter plot\ng = sns.relplot(x=\"weight\", \n                y=\"horsepower\", \n                data=mpg,\n                kind=\"scatter\")\n\n# Add a title \"Car Weight vs. Horsepower\"\ng.fig.suptitle(\"Car Weight vs. Horsepower\")\n\n# Show plot\nplt.show()","5c5152a2":"grant_file='..\/input\/datacamp-seaborn\/schoolimprovement2010grants.csv'\n# Read in the DataFrame\ndf = pd.read_csv(grant_file)\nprint(df.head())","70e4eeec":"# Display pandas histogram\ndf['Award_Amount'].plot.hist()\nplt.show()\n\n# Clear out the pandas histogram\nplt.clf()","17bc04bb":"# Display a Seaborn distplot\nsns.distplot(df['Award_Amount'])\nplt.show()\n\n# Clear the distplot\nplt.clf()","67b98646":"# Create a distplot\nsns.distplot(df['Award_Amount'],\n             kde=False,\n             bins=20)\n\n# Display the plot\nplt.show()","8cbb052c":"# Create a distplot of the Award Amount\nsns.distplot(df['Award_Amount'],\n             hist=False,\n             rug=True,\n             kde_kws={'shade':True})\n\n# Plot the results\nplt.show()","cec2faa9":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/insurance_premiums.csv\")\nprint(df.head())\n# Create a regression plot of premiums vs. insurance_losses\nsns.regplot(data=df,x=\"insurance_losses\",y=\"premiums\")\n# Display the plot\nplt.show()","1c7cfc73":"# Create an lmplot of premiums vs. insurance_losses\nsns.lmplot(data=df,y=\"premiums\",x=\"insurance_losses\")\n# Display the second plot\nplt.show()","19211cd1":"# Create a regression plot using hue\nsns.lmplot(data=df,\n           x=\"insurance_losses\",\n           y=\"premiums\",\n           hue=\"Region\")\n\n# Show the results\nplt.show()","ac090729":"# Create a regression plot with multiple rows\nsns.lmplot(data=df,\n           x=\"insurance_losses\",\n           y=\"premiums\",\n           row=\"Region\")\n\n# Show the plot\nplt.show()","32f9ec70":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/FY18_4050_FMRs.csv\")\nprint(df.head())\n# Plot the pandas histogram\ndf['fmr_2'].plot.hist()\nplt.show()\nplt.clf()\n\n# Set the default seaborn style\nsns.set()\n\n# Plot the pandas histogram again\ndf['fmr_2'].plot.hist()\nplt.show()\nplt.clf()","e1aaf5e4":"# Plot with a dark style \nsns.set_style('dark')\nsns.distplot(df['fmr_2'])\nplt.show()\n\n# Clear the figure\nplt.clf()","f2e43cca":"# Plot with a whitegrid style\nsns.set_style('whitegrid')\nsns.distplot(df['fmr_2'])\nplt.show()\n\n# Clear the figure\nplt.clf()","2a1dbb7f":"# Set the style to white\nsns.set_style('white')\n\n# Create a regression plot\nsns.lmplot(data=df,\n           x='pop2010',\n           y='fmr_2')\n\n# Remove the spines\nsns.despine()\n\n# Show the plot and clear the figure\nplt.show()\nplt.clf()","565aa401":"# Set style, enable color code, and create a magenta distplot\nsns.set(color_codes=True)\nsns.distplot(df['fmr_3'], color='m')\n\n# Show the plot\nplt.show()","ac9135b2":"# Loop through differences between bright and colorblind palettes\nfor p in ['bright', 'colorblind']:\n    sns.set_palette(p)\n    sns.distplot(df['fmr_3'])\n    plt.show()\n    \n    # Clear the plots    \n    plt.clf()","d9c937b8":"# Create a figure and axes\nfig, ax = plt.subplots()\n\n# Plot the distribution of data\nsns.distplot(df['fmr_3'], ax=ax)\n\n# Create a more descriptive x axis label\nax.set(xlabel=\"3 Bedroom Fair Market Rent\")\n\n# Show the plot\nplt.show()","1143c60b":"# Create a figure and axes\nfig, ax = plt.subplots()\n\n# Plot the distribution of 1 bedroom rents\nsns.distplot(df['fmr_1'], ax=ax)\n\n# Modify the properties of the plot\nax.set(xlabel=\"1 Bedroom Fair Market Rent\",\n       xlim=(100 ,1500),\n       title=\"US Rent\")\n\n# Display the plot\nplt.show()","43ee8adf":"# Create a figure and axes. Then plot the data\nfig, ax = plt.subplots()\nsns.distplot(df['fmr_1'], ax=ax)\n\n# Customize the labels and limits\nax.set(xlabel=\"1 Bedroom Fair Market Rent\", xlim=(100,1500), title=\"US Rent\")\n\n# Add vertical lines for the median and mean\nax.axvline(x=df['fmr_1'].median(), color='m', label='Median', linestyle='--', linewidth=2)\nax.axvline(x=df['fmr_1'].mean(), color='b', label='Mean', linestyle='-', linewidth=2)\n\n# Show the legend and plot the data\nax.legend()\nplt.show()","afabdae1":"# Create a plot with 1 row and 2 columns that share the y axis label\nfig, (ax0, ax1) = plt.subplots(nrows=1, ncols=2, sharey=True)\n\n# Plot the distribution of 1 bedroom apartments on ax0\nsns.distplot(df['fmr_1'], ax=ax0)\nax0.set(xlabel=\"1 Bedroom Fair Market Rent\", xlim=(100,1500))\n\n# Plot the distribution of 2 bedroom apartments on ax1\nsns.distplot(df['fmr_2'], ax=ax1)\nax1.set(xlabel=\"2 Bedroom Fair Market Rent\", xlim=(100,1500))\n\n# Display the plot\nplt.show()","b953f261":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/schoolimprovement2010grants.csv\")\n# Create the stripplot\nsns.stripplot(data=df,\n         x='Award_Amount',\n         y='Model Selected',\n         jitter=True)\n\nplt.show()","e55fe69b":"# Create and display a swarmplot with hue set to the Region\nsns.swarmplot(data=df,\n         x='Award_Amount',\n         y='Model Selected',\n         hue='Region')\n\nplt.show()","c36eda11":"# Create a boxplot\nsns.boxplot(data=df,\n         x='Award_Amount',\n         y='Model Selected')\n\nplt.show()\nplt.clf()","323b3683":"# Create a violinplot with the husl palette\nsns.violinplot(data=df,\n         x='Award_Amount',\n         y='Model Selected',\n         palette='husl')\n\nplt.show()\nplt.clf()","5e997039":"# Create a lvplot with the Paired palette and the Region column as the hue\nsns.boxenplot(data=df,x='Award_Amount',y='Model Selected',palette='Paired',hue='Region')\nplt.show()\nplt.clf()","ff83d97a":"# Show a countplot with the number of models used with each region a different color\nsns.countplot(data=df,\n         y=\"Model Selected\",\n         hue=\"Region\")\n\nplt.show()\nplt.clf()","5fa173f1":"# Create a pointplot and include the capsize in order to show caps on the error bars\nsns.pointplot(data=df,\n         y='Award_Amount',\n         x='Model Selected',\n         capsize=.1)\n\nplt.show()\nplt.clf()","46c4e566":"# Create a barplot with each Region shown as a different color\nsns.barplot(data=df,\n         y='Award_Amount',\n         x='Model Selected',\n         hue='Region')\n\nplt.show()\nplt.clf()","20948ea9":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/college_datav3.csv\")\n# Display a regression plot for Tuition\nsns.regplot(data=df,\n         y='Tuition',\n         x=\"SAT_AVG_ALL\",\n         marker='^',\n         color='g')\n\nplt.show()\nplt.clf()","d92f8a51":"# Display the residual plot\nsns.residplot(data=df,\n          y='Tuition',\n          x=\"SAT_AVG_ALL\",\n          color='g')\n\nplt.show()\nplt.clf()","58253eda":"# Plot a regression plot of Tuition and the Percentage of Pell Grants\nsns.regplot(data=df,\n            y='Tuition',\n            x=\"PCTPELL\")\n\nplt.show()\nplt.clf()","b9a65c25":"# Create another plot that estimates the tuition by PCTPELL\nsns.regplot(data=df,\n            y='Tuition',\n            x=\"PCTPELL\",\n            x_bins=5)\n\nplt.show()\nplt.clf()","5d63260b":"# The final plot should include a line using a 2nd order polynomial\nsns.regplot(data=df,\n            y='Tuition',\n            x=\"PCTPELL\",\n            x_bins=5,\n            order=2)\n\nplt.show()\nplt.clf()","e222e771":"# Create a scatter plot by disabling the regression line\nsns.regplot(data=df,\n            y='Tuition',\n            x=\"UG\",\n            fit_reg=False)\n\nplt.show()\nplt.clf()","5b22b4a3":"# Create a scatter plot and bin the data into 5 bins\nsns.regplot(data=df,\n            y='Tuition',\n            x=\"UG\",\n            x_bins=5)\n\nplt.show()\nplt.clf()","0c0d7cba":"# Create a regplot and bin the data into 8 bins\nsns.regplot(data=df,\n         y='Tuition',\n         x=\"UG\",\n         x_bins=8)\n\nplt.show()\nplt.clf()","e5574250":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/daily_show_guests_cleaned.csv\")\n# Create a crosstab table of the data\npd_crosstab = pd.crosstab(df[\"Group\"], df[\"YEAR\"])\nprint(pd_crosstab)\n\n# Plot a heatmap of the table\nsns.heatmap(pd_crosstab)\n\n# Rotate tick marks for visibility\nplt.yticks(rotation=0)\nplt.xticks(rotation=90)\n\nplt.show()","46831632":"# Create the crosstab DataFrame\npd_crosstab = pd.crosstab(df[\"Group\"], df[\"YEAR\"])\n\n# Plot a heatmap of the table with no color bar and using the BuGn palette\nsns.heatmap(pd_crosstab, cbar=False, cmap=\"BuGn\", linewidths=0.3)\n\n# Rotate tick marks for visibility\nplt.yticks(rotation=0)\nplt.xticks(rotation=90)\n\n#Show the plot\nplt.show()\nplt.clf()","2226989d":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/college_datav3.csv\")\n# Create FacetGrid with Degree_Type and specify the order of the rows using row_order\ng2 = sns.FacetGrid(df, \n             row=\"Degree_Type\",\n             row_order=['Graduate', 'Bachelors', 'Associates', 'Certificate'])\n\n# Map a pointplot of SAT_AVG_ALL onto the grid\ng2.map(sns.pointplot, 'SAT_AVG_ALL')\n\n# Show the plot\nplt.show()\nplt.clf()","2d145ed2":"# Create a factor plot that contains boxplots of Tuition values\nsns.factorplot(data=df,\n         x='Tuition',\n         kind='box',\n         row='Degree_Type')\n\nplt.show()\nplt.clf()","9483151e":"# Create a facetted pointplot of Average SAT_AVG_ALL scores facetted by Degree Type \nsns.factorplot(data=df,\n        x='SAT_AVG_ALL',\n        kind='point',\n        row='Degree_Type',\n        row_order=['Graduate', 'Bachelors', 'Associates', 'Certificate'])\n\nplt.show()\nplt.clf()","b2e31297":"degree_ord=['Graduate', 'Bachelors', 'Associates', 'Certificate']\n# Create a FacetGrid varying by column and columns ordered with the degree_order variable\ng = sns.FacetGrid(df, col=\"Degree_Type\", col_order=degree_ord)\n\n# Map a scatter plot of Undergrad Population compared to PCTPELL\ng.map(plt.scatter, 'UG', 'PCTPELL')\n\nplt.show()\nplt.clf()","19ce231d":"\n# Re-create the previous plot as an lmplot\nsns.lmplot(data=df,\n        x='UG',\n        y='PCTPELL',\n        col=\"Degree_Type\",\n        col_order=degree_ord)\n\nplt.show()\nplt.clf()","8ba9117e":"inst_ord=['Public', 'Private non-profit']\n# Create an lmplot that has a column for Ownership, a row for Degree_Type and hue based on the WOMENONLY column\nsns.lmplot(data=df,\n        x='SAT_AVG_ALL',\n        y='Tuition',\n        col=\"Ownership\",\n        row='Degree_Type',\n        row_order=['Graduate', 'Bachelors'],\n        hue='WOMENONLY',\n        col_order=inst_ord)\n\nplt.show()\nplt.clf()","d63875bd":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/insurance_premiums.csv\")\n# Create a PairGrid with a scatter plot for fatal_collisions and premiums\ng = sns.PairGrid(df, vars=[\"fatal_collisions\", \"premiums\"])\ng2 = g.map(plt.scatter)\n\nplt.show()\nplt.clf()","a15b14a9":"# Create the same PairGrid but map a histogram on the diag\ng = sns.PairGrid(df, vars=[\"fatal_collisions\", \"premiums\"])\ng2 = g.map_diag(plt.hist)\ng3 = g2.map_offdiag(plt.scatter)\n\nplt.show()\nplt.clf()","b9e734fb":"# Create a pairwise plot of the variables using a scatter plot\nsns.pairplot(data=df,\n        vars=[\"fatal_collisions\", \"premiums\"],\n        kind='scatter')\n\nplt.show()\nplt.clf()","5a104d0f":"# Plot the same data but use a different color palette and color code by Region\nsns.pairplot(data=df,\n        vars=[\"fatal_collisions\", \"premiums\"],\n        kind='scatter',\n        hue='Region',\n        palette='RdBu',\n        diag_kws={'alpha':.5})\n\nplt.show()\nplt.clf()","c48b9536":"# Build a pairplot with different x and y variables\nsns.pairplot(data=df,\n        x_vars=[\"fatal_collisions_speeding\", \"fatal_collisions_alc\"],\n        y_vars=['premiums', 'insurance_losses'],\n        kind='scatter',\n        hue='Region',\n        palette='husl')\n\nplt.show()\nplt.clf()","4d1ab4ab":"# plot relationships between insurance_losses and premiums\nsns.pairplot(data=df,\n             vars=[\"insurance_losses\", \"premiums\"],\n             kind='reg',\n             palette='BrBG',\n             diag_kind  = 'kde',\n             hue='Region')\n\nplt.show()\nplt.clf()","3153c35f":"df=pd.read_csv(\"..\/input\/datacamp-seaborn\/bike_share.csv\")\n# Build a JointGrid comparing humidity and total_rentals\nsns.set_style(\"whitegrid\")\ng = sns.JointGrid(x=\"hum\",\n            y=\"total_rentals\",\n            data=df,\n            xlim=(0.1, 1.0)) \n\ng.plot(sns.regplot, sns.distplot)\n\nplt.show()\nplt.clf()","64974a33":"# Create a jointplot similar to the JointGrid \nsns.jointplot(x=\"hum\",\n        y=\"total_rentals\",\n        kind='reg',\n        data=df)\n\nplt.show()\nplt.clf()","885c9be5":"# Plot temp vs. total_rentals as a regression plot\nsns.jointplot(x=\"temp\",\n         y=\"total_rentals\",\n         kind='reg',\n         data=df,\n         order=2,\n         xlim=(0, 1))\n\nplt.show()\nplt.clf()","cc5267fe":"# Plot a jointplot showing the residuals\nsns.jointplot(x=\"temp\",\n        y=\"total_rentals\",\n        kind='resid',\n        data=df,\n        order=2)\n\nplt.show()\nplt.clf()","b13d54aa":"# Create a jointplot of temp vs. casual riders\n# Include a kdeplot over the scatter plot\ng = (sns.jointplot(x=\"temp\",\n             y=\"casual\",\n             kind='scatter',\n             data=df,\n             marginal_kws=dict(bins=10, rug=True))\n    .plot_joint(sns.kdeplot))\n    \nplt.show()\nplt.clf()","a20d71fb":"# Replicate the previous plot but only for registered riders\ng = (sns.jointplot(x=\"temp\",\n             y=\"registered\",\n             kind='scatter',\n             data=df,\n             marginal_kws=dict(bins=10, rug=True))\n    .plot_joint(sns.kdeplot))\n\nplt.show()\nplt.clf()","04268a8b":"### Regression and residual plots","3dc2c076":"### Rug plot and kde shading","771ddec9":"## Count plot","6d402ac4":"Cars from the USA tend to accelerate more quickly and get lower miles per gallon compared to cars from Europe and Japan.","41583892":"## Creating plots on data aware grids\n### Building a FacetGrid","ce9d169b":"### Adding annotations","360b750c":"## Seaborn more elaboration","b73f6e59":"## additional pairplots","bd89da28":"### Create a regression plot","4616ee6b":"## Customizing Seaborn Plots\n### Adding a title to a FacetGrid object","1164335e":"### barplots, pointplots and countplots","be1b4f67":"### Setting the default style","7f52c913":"### boxplots, violinplots and lvplots","4dd55d2f":"### Using matplotlib axes","bad84651":"## Additional plot types\n### stripplot() and swarmplot()","64b3f53f":"### Using a factorplot","9769d99a":"### Comparing styles","0fa8de62":"### Using a lmplot","e5596983":"## Using pairgrid & pairplot\n### Building a PairGrid","b4106dc6":"### Plotting multiple variables","8ab736fd":"### Customizing heatmaps","223fc5fe":"Cars with higher horsepower tend to get a lower number of miles per gallon. They also tend to have a higher number of cylinders.","7f8b4312":"### Matrix plots\n### Creating heatmaps","4a413de8":"### Additional plot customizations","6db2c59e":"## Customizing seaborn plots","9c8f4713":"### Complex jointplots","dc530375":"### Binning data","5f25d37e":"### Removing spines","5955a17a":"### Facetting multiple regressions","b7a4dc7f":"### Matplotlib color codes","6fa17601":"Replacing confidence internal with standard deviation","55fc60e8":"## Line plot in relation plotting","1921a0a8":"### Jointplots and regression","a427c898":"### Regression plot parameters","e266041d":"## Plotting subgroups in line plots","bef59973":"### Building a JointGrid and jointplot","49dfdab1":"## Customizing scatter plot","62ec1124":"### Comparing a histogram and distplot","f2869d88":"### Using default palettes","e2bc2dc7":"### Multiple plots"}}