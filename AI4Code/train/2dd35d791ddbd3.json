{"cell_type":{"bce989da":"code","6768b0ba":"code","11b3c094":"code","9ec6c9bc":"code","20198af5":"code","cefe16e6":"code","8ce6b2d9":"code","dbb9df8e":"code","f0e7a6f3":"markdown"},"source":{"bce989da":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics import roc_auc_score\nimport matplotlib.pyplot as plt\n\nimport os\nimport imagesize","6768b0ba":"train = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')\ntest  = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')\nsub   = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\n\ntrain.shape, test.shape, sub.shape","11b3c094":"train['sex'] = train['sex'].fillna('na')\ntrain['age_approx'] = train['age_approx'].fillna(0)\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].fillna('na')\n\ntest['sex'] = test['sex'].fillna('na')\ntest['age_approx'] = test['age_approx'].fillna(0)\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].fillna('na')","9ec6c9bc":"im_shape_test = []\nim_shape_train = []\n\nfor i in range(train.shape[0]):\n    im_shape_train.append(imagesize.get('..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/'+train['image_name'][i]+'.jpg'))\nfor i in range(test.shape[0]):\n    im_shape_test.append(imagesize.get('..\/input\/siim-isic-melanoma-classification\/jpeg\/test\/'+test['image_name'][i]+'.jpg'))\n    \n\ntrain['dim'] = im_shape_train\ntest['dim'] = im_shape_test","20198af5":"train.groupby('dim')['target'].count().reset_index(name='N').sort_values('N', ascending=False)","cefe16e6":"L = 15\nfeat = ['sex','age_approx','anatom_site_general_challenge', 'dim']\n\nM = train.target.mean()\nte = train.groupby(feat)['target'].agg(['mean','count']).reset_index()\nte['ll'] = ((te['mean']*te['count'])+(M*L))\/(te['count']+L)\ndel te['mean'], te['count']\n\ntest = test.merge( te, on=feat, how='left' )\ntest['ll'] = test['ll'].fillna(M)\n\ntest.head()","8ce6b2d9":"sub.target = test.ll.values\nsub.head(10)","dbb9df8e":"sub.to_csv( 'submission.csv', index=False )","f0e7a6f3":"A copy of Giba's simple baseline (https:\/\/www.kaggle.com\/titericz\/simple-baseline), appending the information about the dimensions of the image"}}