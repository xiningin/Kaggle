{"cell_type":{"691839a5":"code","805afd92":"code","59460d5f":"code","d1aadd8b":"code","47f70e9a":"code","af3e9b4c":"code","94d64fda":"code","df8f69e3":"code","74a458c8":"code","dd7e2621":"code","a4799c8c":"code","f19a9af4":"code","cedcae2f":"code","5677046c":"code","ba10ab00":"code","8ef1abf9":"code","7f102591":"code","4693d515":"code","f4a3e447":"code","94a3edc9":"code","cd5c61a4":"code","16db194d":"code","9574e0a6":"code","ad8ea5fc":"code","d1f92abe":"code","0055814c":"code","229a6595":"code","2ec0f89f":"code","ef5f9a99":"code","0f5a03ec":"code","2add7aef":"code","fa8479ca":"code","915b3166":"code","cfc941be":"code","de86768f":"code","bfe22be7":"code","d9dae3d4":"code","fec39922":"code","530c797a":"code","1fcd9048":"code","ca54d529":"code","0f6152ec":"code","f0125f54":"code","34de29f0":"code","7c25e627":"code","ed2a182a":"code","6439f8d3":"code","3d86f1eb":"code","ce279c1c":"code","8405cb7c":"markdown","10ed00dc":"markdown","b1dd4476":"markdown","41b48cf5":"markdown","525d9288":"markdown","6ea74f9a":"markdown","20e34af3":"markdown","5bcc5ffc":"markdown","59534186":"markdown","647b35d1":"markdown","7edecb56":"markdown","0c68a00e":"markdown","3322d2e1":"markdown","2ef75c83":"markdown","11235bbc":"markdown","8567ad78":"markdown","a3ce27a5":"markdown","39dc3be5":"markdown","c6e325d1":"markdown","29eaaf01":"markdown","6357e4d1":"markdown","f1c3fe5c":"markdown","924a2966":"markdown"},"source":{"691839a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","805afd92":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","59460d5f":"data=pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","d1aadd8b":"data.head()","47f70e9a":"data.describe()","af3e9b4c":"data.dtypes","94d64fda":"data.isnull().sum()","df8f69e3":"sns.pairplot(data,hue='output')","74a458c8":"sns.barplot(data.sex,data.output)","dd7e2621":"sns.barplot(data.output,data.chol)","a4799c8c":"datan=data.nunique()\nfloat_cols=datan[datan>5].index.to_list()\nfloat_cols","f19a9af4":"from sklearn.preprocessing import StandardScaler\ns=StandardScaler()\n\nfor col in float_cols:\n  data[col]=s.fit_transform(data[[col]])","cedcae2f":"data.head()","5677046c":"plt.subplots(figsize=(13,9))\nsns.heatmap(data.corr(),annot=True,cbar=False)","ba10ab00":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV,train_test_split\nfrom sklearn.metrics import  accuracy_score, classification_report, confusion_matrix","8ef1abf9":"X=data.drop('output',axis=1)\ny=data['output']\n\nx_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=172)\n","7f102591":"param_grid={'n_estimators':[40,50,70,100,200,300,400,500],\n            'max_features':[2,3,4,5,6,7,9],\n            'max_depth':[1,2,3,4,5,6,7]}\n\nGrid_rf=GridSearchCV(RandomForestClassifier(),param_grid,n_jobs=-1,scoring='accuracy')\nGrid_rf.fit(x_train,y_train)","4693d515":"Grid_rf.best_params_","f4a3e447":"y_pred=Grid_rf.predict(x_test)\nprint(classification_report(y_test,y_pred))","94a3edc9":"rf_param=Grid_rf.best_params_","cd5c61a4":"rf=RandomForestClassifier(**rf_param)","16db194d":"rf.fit(x_train,y_train)\ny_pred_rf=rf.predict(x_test)","9574e0a6":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,y_pred_rf),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('RandomForest Model',fontsize='32')","ad8ea5fc":"print(classification_report(y_test,y_pred_rf))","d1f92abe":"param_grid={'C':[0.0001,0.001,0.01,0.01,1.0,2.0,3.0],\n            }\nGrid_lr=GridSearchCV(LogisticRegression(penalty='l2',solver='saga'),\n                     param_grid,\n                     scoring='accuracy',\n                     n_jobs=-1)\nGrid_lr.fit(x_train,y_train)","0055814c":"Grid_lr.best_params_","229a6595":"y_pred=Grid_lr.predict(x_test)\nprint(classification_report(y_test,y_pred))","2ec0f89f":"lr_kwgs=Grid_lr.best_params_","ef5f9a99":"lr=LogisticRegression(**lr_kwgs)","0f5a03ec":"lr.fit(x_train,y_train)\ny_pred_lr=lr.predict(x_test)","2add7aef":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,y_pred_lr),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('Logistic Regression Model',fontsize='32')","fa8479ca":"print(classification_report(y_test,y_pred_lr))","915b3166":"from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nADA=AdaBoostClassifier(DecisionTreeClassifier(max_depth=1))\n\nparam_grid={'n_estimators':[10,20,30,40,50,80,100,200,100],\n            'learning_rate':[0.001,0.01,0.1,1]}\n\nAda_grid=GridSearchCV(ADA,\n                      param_grid=param_grid,\n                      scoring='accuracy',\n                      n_jobs=-1)\nAda_grid.fit(x_train,y_train)","cfc941be":"Ada_grid.best_params_\n","de86768f":"print(classification_report(y_test,Ada_grid.predict(x_test)))","bfe22be7":"ada_params=Ada_grid.best_params_","d9dae3d4":"Ada_model=AdaBoostClassifier(**ada_params)\nAda_model.fit(x_train,y_train)\ny_pred_ad=Ada_model.predict(x_test)","fec39922":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,y_pred_ad),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('AdaBoost Model',fontsize='32')","530c797a":"print(classification_report(y_test,y_pred_ad))","1fcd9048":"from sklearn.ensemble import VotingClassifier\n\nestimator=[('RandomForest',rf),\n           ('LogisticRegression',lr),\n           ('AdaGrad',Ada_model),\n           ('RandomForest2',rf),\n           ]\n\nvoter=VotingClassifier(estimator,voting='hard')\nvoter.fit(x_train,y_train)\n","ca54d529":"print(classification_report(y_test,voter.predict(x_test)))","0f6152ec":"from keras.layers import Dense,Activation,Dropout\nfrom keras.models import Sequential\nfrom keras.optimizers import RMSprop","f0125f54":"model_1=Sequential()\n\nmodel_1.add(Dense(20,activation='relu',input_shape=(13,)))\nmodel_1.add(Dense(20,activation='relu'))\nmodel_1.add(Dense(20,activation='relu'))\nmodel_1.add(Dense(20,activation='relu'))\nmodel_1.add(Dense(20,activation='relu'))\nmodel_1.add(Dense(1,activation='sigmoid'))\n\nopt=RMSprop(lr=0.001,decay=1e-6)\nmodel_1.compile(optimizer=opt,loss='binary_crossentropy',metrics=['accuracy'])\n\nhistory=model_1.fit(x_train,y_train,\n            batch_size=32,\n            epochs=12,\n            validation_data=(x_test,y_test),\n            shuffle=True)","34de29f0":"fig,ax=plt.subplots()\nax.plot(history.history['loss'],'b',label='train loss');\nax.plot(history.history['val_loss'],'r',label='valid loss');\nplt.legend();","7c25e627":"y_pred_nn=model_1.predict_classes(x_test)\nprint(classification_report(y_test,y_pred))","ed2a182a":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,y_pred_nn),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('FeedForward Neural Network',fontsize='32')\n","6439f8d3":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,voter.predict(x_test)),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('Combined Model',fontsize='32')\n","3d86f1eb":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,Ada_model.predict(x_test)),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('AdaBoost Model',fontsize='32')\n","ce279c1c":"fig=plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,y_pred_rf),annot=True,fmt='d',annot_kws={'size':40},cbar=False)\nplt.title('RandomForest Model',fontsize='32')","8405cb7c":"## AdaBoost Model","10ed00dc":"The Combined Model has better accuracy compared to the other models besides RandomForest Model, the Combined Model and the RandomForest has the same accuracy of 87%","b1dd4476":"# Modeling","41b48cf5":"## RandomForest Model","525d9288":"## Heart Attack by Sex","6ea74f9a":"We got an accuracy of 84% less than our Combined Models","20e34af3":"## Effect of cholesterol on Heart Attack  ","5bcc5ffc":"## Splitting the data into Train and Test","59534186":"### Training AdaBoost with the best paramters","647b35d1":"We got better accuracy after combining all the models","7edecb56":"## Correlations","0c68a00e":"## Scaling of the Data","3322d2e1":"### Training Logistic Regression with best parameters","2ef75c83":"## Pair plot","11235bbc":"## Combining all models ","8567ad78":"## Comparing Results","a3ce27a5":"### Training the RandomForest with best parameters","39dc3be5":"## Experimenting with FeedForward Neural Networks","c6e325d1":"# Heart Attack Prediction","29eaaf01":"## Check for null values","6357e4d1":"## Logistic Regression Model","f1c3fe5c":"## Check the data types","924a2966":"## Exploratory Data Analysis"}}