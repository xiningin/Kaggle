{"cell_type":{"696807f1":"code","1f764bbd":"code","8d4a56c5":"code","1dd49754":"code","699ab1ee":"code","d18613e9":"code","02dd5b66":"code","ac82ba30":"code","fda27148":"code","e6879935":"code","856557b8":"code","b7ac2c94":"markdown","38546880":"markdown","fa0a1b87":"markdown","e678dd25":"markdown","7b0d0a69":"markdown","74341bc6":"markdown","e56de194":"markdown","04760c62":"markdown","5cf641a4":"markdown"},"source":{"696807f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1f764bbd":"!pip install miraiml","8d4a56c5":"# Read the data\ndata = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndata = data[['LotArea', 'OverallQual', 'YearBuilt', 'TotRmsAbvGrd', 'SalePrice']]","1dd49754":"from sklearn.model_selection import train_test_split\n\ntrain_data, test_data = train_test_split(data, test_size=0.2)","699ab1ee":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.linear_model import  LinearRegression\nfrom sklearn.preprocessing import QuantileTransformer\nfrom sklearn.preprocessing import StandardScaler\n\nfrom miraiml import SearchSpace\nfrom miraiml.pipeline import compose\n\nPipeline = compose(\n    [('scaler', StandardScaler), ('linear_reg', LinearRegression)]\n)\n\nsearch_spaces = [\n    SearchSpace(\n        id='k-NeighborsRegressor',\n        model_class=KNeighborsRegressor,\n        parameters_values=dict(\n            n_neighbors=range(2, 9),\n            weights=['uniform', 'distance'],\n            p=range(2, 5)\n        )\n    ),\n    SearchSpace(\n        id='Pipeline',\n        model_class=Pipeline,\n        parameters_values=dict(\n            scaler__with_mean=[True, False],\n            scaler__with_std=[True, False],\n            lin_reg__fit_intercept=[True, False]\n        )\n    )\n]","d18613e9":"from sklearn.metrics import r2_score\n\nfrom miraiml import Config\n\nconfig = Config(\n    local_dir='miraiml_local',\n    problem_type='regression',\n    score_function=r2_score,\n    search_spaces=search_spaces,\n    ensemble_id='Ensemble'\n)","02dd5b66":"from miraiml import Engine\n\ndef on_improvement(status):\n    scores = status.scores\n    for key in sorted(scores.keys()):\n        print('{}: {}'.format(key, round(scores[key], 3)), end='; ')\n    print()\n\nengine = Engine(config=config, on_improvement=on_improvement)","ac82ba30":"engine.load_train_data(train_data, 'SalePrice')\nengine.load_test_data(test_data)","fda27148":"from time import sleep\n\nengine.restart()\n\nsleep(1)\n\nprint('\\nShuffling train data')\nengine.shuffle_train_data(restart=True)\n\nsleep(1)\n\nengine.interrupt()","e6879935":"status = engine.request_status()","856557b8":"print(status.build_report(include_features=True))","b7ac2c94":"Let's see the status report.","38546880":"![](https:\/\/github.com\/arthurpaulino\/miraiml\/raw\/master\/docs\/img\/MiraiML.svg?sanitize=true) \n\nMiraiML: asynchronous, autonomous and continuous Machine Learning in Python https:\/\/miraiml.readthedocs.io","fa0a1b87":"Now we're ready to load the data","e678dd25":"# Configuring the Engine\nFor this demonstration, let's use ``r2_score`` to evaluate our modeling.","7b0d0a69":"# Building the search spaces\nLet's compare (and ensemble) a ``KNeighborsRegressor`` and a pipeline composed by ``QuantileTransformer`` and a ``LinearRegression``.","74341bc6":"# Triggering the Engine\nLet's also print the scores everytime the Engine finds a better solution.","e56de194":"# Final","04760c62":"# Engine\u2019s status analysis","5cf641a4":"\nMiraiML\n=======\n    Mirai: `future` in japanese.\n\nMiraiML is an asynchronous engine for continuous & autonomous machine learning,\nbuilt for real-time usage.\nUsage\n-----\n\n1. Install: ``$ pip install miraiml``\n2. Now, inside a Python environment, you can import the main components:\n\n>>> from miraiml import SearchSpace, Config, Engine\n\nYou might want to `Read the Docs`_ for a better understanding of MiraiML.\n\nContributing\n------------\n\nPlease, follow the guidelines_ if you want to be part of this project.\n\n-  _examples: https:\/\/github.com\/arthurpaulino\/miraiml\/tree\/master\/examples\n\n- _Read the Docs: https:\/\/miraiml.readthedocs.io\/en\/latest\/\n\n- _guidelines: https:\/\/github.com\/arthurpaulino\/miraiml\/blob\/master\/CONTRIBUTING.md"}}