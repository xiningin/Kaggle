{"cell_type":{"723f92ba":"code","b496cdb9":"code","6669894a":"code","0772eda7":"code","89b8a7b3":"code","a36c58b0":"code","2b8fcf6c":"code","2debb799":"code","32bb3596":"code","ef30ebb7":"code","98add04f":"code","88f5f12f":"code","e0c75e6c":"code","228ef534":"code","711106eb":"code","87015450":"code","32ba50d3":"code","3a59b481":"code","79b86415":"code","9088b508":"code","e394c312":"code","4a11155f":"code","2c7fe84e":"code","1487a437":"code","06104f5f":"code","5742b70e":"code","6c4b3e49":"code","51c1af6b":"code","984c70cc":"code","895a3616":"code","e58dfcb3":"code","e7d3e38e":"code","6ac27569":"code","9047dd6c":"code","c98a80a4":"code","38056392":"code","7126e08d":"code","3a137dbd":"code","0ca60cf6":"code","cb314a48":"code","cb31dc99":"code","d4c513b4":"code","09fc6e7e":"code","5344b36d":"code","44a51c6c":"code","50796f31":"code","efc321db":"code","f2c5227a":"code","246f59eb":"code","7a6c6329":"code","e8fb7aff":"code","4b6ef959":"code","0f4fdcc1":"code","44d46f59":"code","8d410577":"code","c22b9eb9":"code","30ad8c08":"code","a1e40804":"code","ace97d94":"markdown","8b457f1b":"markdown","8d4a5cb6":"markdown","4b965042":"markdown","d5aa562f":"markdown","6e365dca":"markdown","0544a44c":"markdown","65f87355":"markdown","864ac3b8":"markdown","e5648d0c":"markdown","b2eb851a":"markdown","85c9865c":"markdown","60946d99":"markdown"},"source":{"723f92ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b496cdb9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","6669894a":"import seaborn as sns\nimport matplotlib.pyplot as plt","0772eda7":"from scipy.stats import zscore","89b8a7b3":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nss=StandardScaler()\nmms=MinMaxScaler()","a36c58b0":"df_id_death_part1=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","2b8fcf6c":"df_part1=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_part2=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","2debb799":"df_part3=df_id_death_part1.merge(df_part2,on='PassengerId',how='right')","32bb3596":"df_titanic=pd.concat([df_part1,df_part3],axis=0)\ntitanic=df_titanic","ef30ebb7":"titanic.head(10)","98add04f":"titanic.info()","88f5f12f":"titanic.drop('Cabin',axis=1,inplace=True)","e0c75e6c":"titanic.head(5)","228ef534":"titanic.Age.median()","711106eb":"titanic.Age.mean()","87015450":"titanic.Age.fillna(titanic.Age.median(),inplace=True)","32ba50d3":"titanic.isna().sum()","3a59b481":"titanic.info()","79b86415":"titanic.head(10)","9088b508":"plt.rcParams['figure.figsize']=[14,8]","e394c312":"sns.boxplot(titanic.Survived,titanic.Fare)","4a11155f":"plt.rcParams['figure.figsize']=[14,5]","2c7fe84e":"sns.boxplot(titanic.Fare)\nplt.grid()","1487a437":"sns.scatterplot(titanic.Survived,titanic.Fare)\nplt.grid()\nplt.show()","06104f5f":"titanic['Fare'].dtype","5742b70e":"m=titanic['Fare'].mean()","6c4b3e49":"sd=titanic['Fare'].median()","51c1af6b":"titanic['zfare']=(titanic['Fare']-m)\/sd","984c70cc":"plt.figure(figsize=(16,8))\nsns.distplot(titanic[titanic['Survived']==1]['Fare'],color='green',label='survived')\nsns.distplot(titanic[titanic['Survived']==0]['Fare'],color='red',label='dead')\nplt.legend()","895a3616":"plt.figure(figsize=(16,8))\nsns.distplot(np.cbrt(titanic[titanic['Survived']==1]['Fare'],),color='green',label='survived')\nsns.distplot(np.cbrt(titanic[titanic['Survived']==0]['Fare'],),color='red',label='dead')\nplt.legend()","e58dfcb3":"plt.figure(figsize=(16,8))\nsns.distplot(titanic['Fare'],color='green',)\nplt.grid()\nplt.show()","e7d3e38e":"outlier=titanic[(titanic['zfare']>3)|(titanic['zfare']<-3)]\n","6ac27569":"titanic_copy=titanic.drop(outlier.index).copy()","9047dd6c":"sns.distplot(titanic_copy.Fare)","c98a80a4":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","38056392":"titanic['sex']=le.fit_transform(titanic['Sex'])","7126e08d":"titanic.drop('Sex',axis=1,inplace=True)","3a137dbd":"titanic.head()","0ca60cf6":"titanic_copy['sex']=le.fit_transform(titanic_copy['Sex'])\ntitanic_copy.drop('Sex',axis=1,inplace=True)","cb314a48":"titanic_copy.head()","cb31dc99":"# create a new feature to extract title names from the Name column\n#We can see that there are alot of extra names we dont need.\ntitanic['Title'] = titanic.Name.apply(lambda name: name.split(',')[1].split('.')[0].strip())\ntitanic_copy['Title'] = titanic_copy.Name.apply(lambda name: name.split(',')[1].split('.')[0].strip())\n","d4c513b4":"titanic.Title.value_counts()","09fc6e7e":"titanic_copy.Title.value_counts()","5344b36d":"# normalize the titles\nnormalized_titles = {\n    \"Capt\":       \"Officer\",\n    \"Col\":        \"Officer\",\n    \"Major\":      \"Officer\",\n    \"Jonkheer\":   \"Royal\",\n    \"Don\":        \"Royal\",\n    \"Sir\" :       \"Royal\",\n    \"Dr\":         \"Officer\",\n    \"Rev\":        \"Officer\",\n    \"the Countess\":\"Royal\",\n    \"Dona\":       \"Royal\",\n    \"Mme\":        \"Mrs\",\n    \"Mlle\":       \"Miss\",\n    \"Ms\":         \"Mrs\",\n    \"Mr\" :        \"Mr\",\n    \"Mrs\" :       \"Mrs\",\n    \"Miss\" :      \"Miss\",\n    \"Master\" :    \"Master\",\n    \"Lady\" :      \"Royal\"\n}","44a51c6c":"# map the normalized titles to the current titles for train and test data.\ntitanic.Title = titanic.Title.map(normalized_titles)\ntitanic.Title = titanic.Title.map(normalized_titles)","50796f31":"# map the normalized titles to the current titles for train and test data.\ntitanic_copy.Title = titanic_copy.Title.map(normalized_titles)\ntitanic_copy.Title = titanic_copy.Title.map(normalized_titles)","efc321db":"titanic.Title.value_counts()","f2c5227a":"titanic_copy.Title.value_counts()","246f59eb":"titanic.Embarked.value_counts()","7a6c6329":"titanic_copy['Embarked']=le.fit_transform(titanic_copy['Embarked'])\n","e8fb7aff":"titanic_copy['Name']=le.fit_transform(titanic_copy['Name'])\n","4b6ef959":"titanic_copy.head()","0f4fdcc1":"titanic['LEName']=le.fit_transform(titanic['Name'])\n","44d46f59":"titanic.head()","8d410577":"titanic_copy.drop('Ticket',axis=1,inplace=True)","c22b9eb9":"titanic.drop('Ticket',axis=1,inplace=True)","30ad8c08":"titanic.head()","a1e40804":"titanic_copy.head()","ace97d94":"    Replacing Null values of the Age column with median as 25 percent of the values are null","8b457f1b":"    removing outliers from Fare","8d4a5cb6":"    Dropping outliers WRT Zscore and storing it in another dataframe\n","4b965042":"### Label Encoding on titanic main DF","d5aa562f":"#### Name","6e365dca":"####    Normalize gender","0544a44c":"#### Normalize title","65f87355":"#### EDA FARE","864ac3b8":"    Dropping Cabin column as 80 percent of the values present in the cabin collumn is null","e5648d0c":"#### Embarked","b2eb851a":"    Zscore of Fare","85c9865c":"#### Dropping tickets","60946d99":"#### Exploration"}}