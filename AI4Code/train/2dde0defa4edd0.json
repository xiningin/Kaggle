{"cell_type":{"a8610cc1":"code","ca6dbee0":"code","fd095e13":"code","d9b4bc25":"code","b13afc49":"code","d4b558d8":"code","d118d5e8":"code","5acf1d30":"code","7bd8dc4e":"code","0a37d2b7":"code","d5c6ae41":"code","c47b2d37":"code","d1bf8fa2":"code","61bfc9f8":"code","b0adb4ad":"code","17115688":"code","8ddd2a1e":"code","6d2bfd14":"code","db179b68":"code","3bae451e":"code","9610dfa9":"code","72c83f36":"code","d12098a8":"code","b0479791":"code","9e955c6e":"code","de6eef61":"code","201d4df1":"code","3a79a92f":"code","5f6df0ba":"code","3ab66a84":"code","b4846519":"code","fe8d4452":"code","bbee46b2":"code","35eed402":"code","bdba437a":"code","b65f5e32":"code","8b63507e":"code","721ab8db":"code","36a9d405":"code","a6d10ef7":"code","6797e20c":"code","c8de6345":"code","ad5440eb":"code","7b8c0ee4":"code","56772b75":"code","24d57afd":"code","ad96426e":"code","5dd0f250":"code","69d9d246":"code","7de4449f":"code","412c55ed":"code","a90acd2c":"code","34c89ff5":"code","845fe924":"code","b5844e25":"code","67efc9d5":"code","8be4d0f4":"code","5ee91d24":"code","3b6ec5fc":"code","ef39bba7":"code","5b62b157":"code","10bbf513":"code","69334761":"code","72256ac5":"code","9b0d249b":"code","a2691ef7":"code","62821885":"code","0aefafea":"code","0117977f":"code","c4eb9097":"code","65d88958":"code","a8f75545":"code","19646329":"code","370845c2":"code","9e59aa7a":"code","e7d61f24":"code","dcc78fd3":"code","4078607e":"code","2be49f2f":"markdown","289d3b2c":"markdown","f856acc9":"markdown","bb7bed53":"markdown","f67d49de":"markdown","d08a0560":"markdown","b0074582":"markdown","d9a48ced":"markdown","dcb65a29":"markdown","0e54877c":"markdown","e5c027f2":"markdown","1d51fca4":"markdown","27db2500":"markdown","ce8a2fbc":"markdown","dd24f62b":"markdown","ca54d252":"markdown","63f45169":"markdown","d353ce0b":"markdown","f4a321de":"markdown"},"source":{"a8610cc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport matplotlib.pyplot as plt\nimport pycountry\nimport seaborn as sns\nimport plotly.express as px\n\nplt.style.use('ggplot')\n\nimport warnings\nwarnings.filterwarnings('ignore')","ca6dbee0":"df_received = pd.read_csv('..\/input\/remittance-from-2010-to-2020\/Remittance  Recieved Countries.csv')\ndf_paid = pd.read_csv('..\/input\/remittance-from-2010-to-2020\/Remittance Paid Countries.csv')\ndf_comp = pd.read_csv('..\/input\/remittance-from-2010-to-2020\/Remittance Recieved compared to thier GDP.csv')","fd095e13":"df_received.head()","d9b4bc25":"cols = df_received.T.loc['Country Name',:]","b13afc49":"df_received = df_received.T\ndf_received = df_received.drop('Country Name')\ndf_received.columns = cols\ndf_received.head()","d4b558d8":"biggest_countries = dict()\nfor i in df_received.columns[1:]:\n    money_sum = df_received[i][1:].sum(axis = 0)\n    biggest_countries[i] = money_sum\n","d118d5e8":"total_money_received = pd.DataFrame.from_records(biggest_countries, index = [0]).T\ntotal_money_received.columns = ['Totals']\ntotal_money_received = total_money_received.sort_values('Totals',ascending = False)\ntotal_money_received = total_money_received.reset_index()\ntotal_money_received = total_money_received.rename({'index': 'Country'}, axis = 1)","5acf1d30":"country_names = list(country.name  for country in pycountry.countries)\ndrop_index = []\n\nfor i in total_money_received.Country:\n    if i not in country_names:\n        drop_index.append(i)","7bd8dc4e":"print(drop_index)","0a37d2b7":"total_money_received['Country'] = total_money_received['Country'].replace(\n{'Egypt, Arab Rep.' : 'Egypt',\n'Vietnam' : 'Viet Nam',\n'Congo, Rep.' : 'Congo',\n'Hong Kong SAR, China' : 'Hong Kong',\n\"Korea, Dem. People's Rep.\" : 'Korea, Republic of',\n'Czech Republic' : 'Czechia',\n'Tanzania' : 'Tanzania, United Republic of',\n'Venezuela, RB' : 'Venezuela, Bolivarian Republic of',\n'St. Vincent and the Grenadines' : 'Saint Vincent and the Grenadines',\n'Macao SAR, China' : 'Macao',\n'Bahamas, The' : 'Bahamas',\n'Virgin Islands (U.S.)' : 'Virgin Islands, U.S.',\n'St. Martin (French part)' : 'Saint Martin (French part)',\n'British Virgin Islands' : 'Virgin Islands, British',\n'Micronesia, Fed. Sts.' : 'Micronesia, Federated States of',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Bolivia'  : 'Bolivia, Plurinational State of',\n'Congo, Dem. Rep.' : 'Congo, The Democratic Republic of the',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Korea, Rep.' : 'Korea, Republic of',\n'Kyrgyz Republic' : 'Kyrgyzstan',\n'Lao PDR' : \"Lao People's Democratic Republic\",\n'Moldova' : 'Moldova, Republic of',\n'Slovak Republic' : 'Slovakia',\n'St. Kitts and Nevis' : 'Saint Kitts and Nevis',\n'St. Lucia' : 'Saint Lucia',\n'Yemen, Rep.' : 'Yemen'})","d5c6ae41":"drop_index_new = []\n\nfor i in total_money_received.Country:\n    if i not in country_names:\n        drop_index_new.append(i)","c47b2d37":"print(drop_index_new)","d1bf8fa2":"retain_index = [country for country in total_money_received['Country'] if country not in drop_index_new]\nboo = total_money_received.Country.apply(lambda x: x in retain_index) ","61bfc9f8":"total_money_received = total_money_received[boo]\ntotal_money_received = total_money_received.reset_index()\ntotal_money_received = total_money_received.drop(['index'], axis = 1)","b0adb4ad":"dummy_df = total_money_received[0:9]\nplt.figure(figsize = (10,5))\nx = dummy_df.iloc[:,0]\ny = dummy_df.iloc[:,1]\nplt.bar(x,y)\nplt.title('The Top 10 Remittance Received Countries ')\nplt.xticks(rotation = 90)\nplt.show()\n","17115688":"dummy_df = total_money_received[0:25]\nplt.figure(figsize = (15,5))\nx = dummy_df.iloc[:,0]\ny = dummy_df.iloc[:,1]\nbar_plot = plt.bar(x,y)\nbar_plot[21].set_color('g')\nplt.title('The Top 25 Remittance Received Countries ')\nplt.xticks(rotation = 90)\nplt.show()","8ddd2a1e":"fig = px.choropleth(locations = total_money_received['Country'],\n             locationmode = 'country names',\n                   color = total_money_received['Totals'],\n                    color_continuous_scale = px.colors.sequential.Burgyl\n                   )\nfig.update_layout(title = 'Total Remittance Received by Countries between 2010 & 2020')\nfig.show()","6d2bfd14":"df_received.head()","db179b68":"df_received = df_received.rename(columns = {'Egypt, Arab Rep.' : 'Egypt',\n'Vietnam' : 'Viet Nam',\n'Congo, Rep.' : 'Congo',\n'Hong Kong SAR, China' : 'Hong Kong',\n\"Korea, Dem. People's Rep.\" : 'Korea, Republic of',\n'Czech Republic' : 'Czechia',\n'Tanzania' : 'Tanzania, United Republic of',\n'Venezuela, RB' : 'Venezuela, Bolivarian Republic of',\n'St. Vincent and the Grenadines' : 'Saint Vincent and the Grenadines',\n'Macao SAR, China' : 'Macao',\n'Bahamas, The' : 'Bahamas',\n'Virgin Islands (U.S.)' : 'Virgin Islands, U.S.',\n'St. Martin (French part)' : 'Saint Martin (French part)',\n'British Virgin Islands' : 'Virgin Islands, British',\n'Micronesia, Fed. Sts.' : 'Micronesia, Federated States of',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Bolivia'  : 'Bolivia, Plurinational State of',\n'Congo, Dem. Rep.' : 'Congo, The Democratic Republic of the',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Korea, Rep.' : 'Korea, Republic of',\n'Kyrgyz Republic' : 'Kyrgyzstan',\n'Lao PDR' : \"Lao People's Democratic Republic\",\n'Moldova' : 'Moldova, Republic of',\n'Slovak Republic' : 'Slovakia',\n'St. Kitts and Nevis' : 'Saint Kitts and Nevis',\n'St. Lucia' : 'Saint Lucia',\n'Yemen, Rep.' : 'Yemen'})\n\ndummy_df = df_received[total_money_received.Country.to_list()]\ndummy_df = dummy_df.drop('Country Code')\ndummy_df = dummy_df.reset_index()\ndummy_df = dummy_df.rename(columns = {'index': 'Years'})\ndummy_df.head()","3bae451e":"dummy_df = dummy_df.replace(np.nan, 0)","9610dfa9":"dummy_df['Total for Year'] = dummy_df.iloc[:,1:].sum(axis = 1)","72c83f36":"plt.figure(figsize = (10,5))\nplt.bar(dummy_df['Years'],dummy_df['Total for Year'])\nplt.title('Total Remittance Received for Each Year')\nplt.show()","d12098a8":"df_paid.head()","b0479791":"df_paid = df_paid.T\ndf_paid = df_paid.drop('Country Name')\ndf_paid.columns = cols\ndf_paid.head()","9e955c6e":"biggest_countries = dict()\nfor i in df_paid.columns[1:]:\n    money_sum = df_paid[i][1:].sum(axis = 0)\n    biggest_countries[i] = money_sum\n","de6eef61":"total_money_paid = pd.DataFrame.from_records(biggest_countries, index = [0]).T\ntotal_money_paid.columns = ['Totals']\ntotal_money_paid = total_money_paid.sort_values('Totals',ascending = False)\ntotal_money_paid = total_money_paid.reset_index()\ntotal_money_paid = total_money_paid.rename({'index': 'Country'}, axis = 1)","201d4df1":"country_names = list(country.name  for country in pycountry.countries)\ndrop_index = []\n\nfor i in total_money_paid.Country:\n    if i not in country_names:\n        drop_index.append(i)","3a79a92f":"print(drop_index)","5f6df0ba":"total_money_paid['Country'] = total_money_paid['Country'].replace(\n{'Egypt, Arab Rep.' : 'Egypt',\n'Vietnam' : 'Viet Nam',\n'Congo, Rep.' : 'Congo',\n'Hong Kong SAR, China' : 'Hong Kong',\n\"Korea, Dem. People's Rep.\" : 'Korea, Republic of',\n'Czech Republic' : 'Czechia',\n'Tanzania' : 'Tanzania, United Republic of',\n'Venezuela, RB' : 'Venezuela, Bolivarian Republic of',\n'St. Vincent and the Grenadines' : 'Saint Vincent and the Grenadines',\n'Macao SAR, China' : 'Macao',\n'Bahamas, The' : 'Bahamas',\n'Virgin Islands (U.S.)' : 'Virgin Islands, U.S.',\n'St. Martin (French part)' : 'Saint Martin (French part)',\n'British Virgin Islands' : 'Virgin Islands, British',\n'Micronesia, Fed. Sts.' : 'Micronesia, Federated States of',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Bolivia'  : 'Bolivia, Plurinational State of',\n'Congo, Dem. Rep.' : 'Congo, The Democratic Republic of the',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Korea, Rep.' : 'Korea, Republic of',\n'Kyrgyz Republic' : 'Kyrgyzstan',\n'Lao PDR' : \"Lao People's Democratic Republic\",\n'Moldova' : 'Moldova, Republic of',\n'Slovak Republic' : 'Slovakia',\n'St. Kitts and Nevis' : 'Saint Kitts and Nevis',\n'St. Lucia' : 'Saint Lucia',\n'Yemen, Rep.' : 'Yemen'})","3ab66a84":"drop_index_new = []\n\nfor i in total_money_paid.Country:\n    if i not in country_names:\n        drop_index_new.append(i)","b4846519":"print(sorted(drop_index_new))","fe8d4452":"retain_index = [country for country in total_money_paid['Country'] if country not in drop_index_new]\nboo = total_money_paid.Country.apply(lambda x: x in retain_index) ","bbee46b2":"total_money_paid = total_money_paid[boo]\ntotal_money_paid = total_money_paid.reset_index()\ntotal_money_paid = total_money_paid.drop(['index'], axis = 1)","35eed402":"dummy_df = total_money_paid[0:9]\nplt.figure(figsize = (10,5))\nx = dummy_df.iloc[:,0]\ny = dummy_df.iloc[:,1]\nplt.bar(x,y)\nplt.title('The Top 10 Remittance Paid Countries ')\nplt.xticks(rotation = 90)\nplt.show()\n","bdba437a":"dummy_df = total_money_paid[0:25]\nplt.figure(figsize = (15,5))\nx = dummy_df.iloc[:,0]\ny = dummy_df.iloc[:,1]\nbar_plot = plt.bar(x,y)\nbar_plot[18].set_color('g')\nplt.title('The Top 25 Remittance Paid Countries ')\nplt.xticks(rotation = 90)\nplt.show()","b65f5e32":"fig = px.choropleth(locations = total_money_paid['Country'],\n             locationmode = 'country names',\n                   color = total_money_paid['Totals'],\n                    color_continuous_scale = px.colors.sequential.Burgyl\n                   )\nfig.update_layout(title = 'Total Remittance Paid by Countries between 2010 & 2020')\nfig.show()","8b63507e":"df_comp.head()","721ab8db":"df_comp = df_comp.T\ndf_comp = df_comp.drop('Country Name')\ndf_comp.columns = cols\ndf_comp.head()","36a9d405":"biggest_countries = dict()\nfor i in df_paid.columns[1:]:\n    money_sum = df_comp[i][1:].sum(axis = 0)\n    biggest_countries[i] = money_sum\n","a6d10ef7":"total_money_contribute = pd.DataFrame.from_records(biggest_countries, index = [0]).T\ntotal_money_contribute.columns = ['Totals']\ntotal_money_contribute = total_money_contribute.sort_values('Totals',ascending = False)\ntotal_money_contribute = total_money_contribute.reset_index()\ntotal_money_contribute = total_money_contribute.rename({'index': 'Country'}, axis = 1)","6797e20c":"contry_names = list(country.name  for country in pycountry.countries)\ndrop_index = []\n\nfor i in total_money_contribute.Country:\n    if i not in contry_names:\n        drop_index.append(i)","c8de6345":"print(sorted(country_names))","ad5440eb":"print(drop_index)","7b8c0ee4":"total_money_contribute['Country'] = total_money_contribute['Country'].replace(\n{'Egypt, Arab Rep.' : 'Egypt',\n'Vietnam' : 'Viet Nam',\n'Congo, Rep.' : 'Congo',\n'Hong Kong SAR, China' : 'Hong Kong',\n\"Korea, Dem. People's Rep.\" : 'Korea, Republic of',\n'Czech Republic' : 'Czechia',\n'Tanzania' : 'Tanzania, United Republic of',\n'Venezuela, RB' : 'Venezuela, Bolivarian Republic of',\n'St. Vincent and the Grenadines' : 'Saint Vincent and the Grenadines',\n'Macao SAR, China' : 'Macao',\n'Bahamas, The' : 'Bahamas',\n'Virgin Islands (U.S.)' : 'Virgin Islands, U.S.',\n'St. Martin (French part)' : 'Saint Martin (French part)',\n'British Virgin Islands' : 'Virgin Islands, British',\n'Micronesia, Fed. Sts.' : 'Micronesia, Federated States of',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Bolivia'  : 'Bolivia, Plurinational State of',\n'Congo, Dem. Rep.' : 'Congo, The Democratic Republic of the',\n'Iran, Islamic Rep.' : 'Iran, Islamic Republic of',\n'Korea, Rep.' : 'Korea, Republic of',\n'Kyrgyz Republic' : 'Kyrgyzstan',\n'Lao PDR' : \"Lao People's Democratic Republic\",\n'Moldova' : 'Moldova, Republic of',\n'Slovak Republic' : 'Slovakia',\n'St. Kitts and Nevis' : 'Saint Kitts and Nevis',\n'St. Lucia' : 'Saint Lucia',\n'Yemen, Rep.' : 'Yemen'})","56772b75":"drop_index_new = []\n\nfor i in total_money_contribute.Country:\n    if i not in country_names:\n        drop_index_new.append(i)","24d57afd":"print(drop_index_new)","ad96426e":"retain_index = [country for country in total_money_contribute['Country'] if country not in drop_index_new]\nboo = total_money_contribute.Country.apply(lambda x: x in retain_index) ","5dd0f250":"total_money_contribute = total_money_contribute[boo]\ntotal_money_contribute = total_money_contribute.reset_index()\ntotal_money_contribute = total_money_contribute.drop(['index'], axis = 1)","69d9d246":"dummy_df = total_money_contribute[0:9]\nplt.figure(figsize = (10,5))\nx = dummy_df.iloc[:,0]\ny = dummy_df.iloc[:,1]\nplt.bar(x,y)\nplt.title('The Top 10 Countries that Remittance Most Affect Their GDP')\nplt.xticks(rotation = 90)\nplt.show()","7de4449f":"dummy_df = total_money_contribute.iloc[:170,:]\ndummy_df = dummy_df[-10:]\nplt.figure(figsize = (10,5))\nx = dummy_df.iloc[:,0].tolist()[::-1]\ny = dummy_df.iloc[:,1].tolist()[::-1]\nplt.bar(x,y)\nplt.title('The Top 10 Countries that Remittance Least Affect Their GDP')\nplt.xticks(rotation = 90)\nplt.show()","412c55ed":"dummy_df = total_money_contribute.iloc[:170,:]\ndummy_df = dummy_df[-20:]\nplt.figure(figsize = (10,5))\nx = dummy_df.iloc[:,0].tolist()[::-1]\ny = dummy_df.iloc[:,1].tolist()[::-1]\nplt.bar(x,y)\nplt.title('The Top 20 Countries that Remittance Least Affect Their GDP')\nplt.xticks(rotation = 90)\nplt.show()","a90acd2c":"gdp = pd.read_csv('..\/input\/gdp-2021\/GDP 2021.csv',error_bad_lines=False, sep = ';')\ngdp.head()","34c89ff5":"gdp = gdp[['Country', '2021']]\ngdp.head()","845fe924":"total_money_contribute = total_money_contribute.iloc[:170,:]\ntotal_money_contribute.head()","b5844e25":"drop_index = []\n\nfor i in gdp.Country:\n    if i not in country_names:\n        drop_index.append(i)","67efc9d5":"print(drop_index)","8be4d0f4":"print(sorted(country_names))","5ee91d24":"gdp.Country = gdp.Country.replace({\n'The Bahamas': 'Bahamas',\n'Bolivia'  : 'Bolivia, Plurinational State of',\n'Democratic Republic of the Congo'  : 'Congo, The Democratic Republic of the',\n'Republic of Congo' : 'Congo',\n'Czech Republic' : 'Czechia',\n'The Gambia' : 'Gambia',\n'Hong Kong SAR' : 'Hong Kong',\n'Islamic Republic of Iran' : 'Iran, Islamic Republic of',\n'Korea' : 'Korea, Republic of',\n'Kyrgyz Republic' : 'Kyrgyzstan',\n'Lao P.D.R.' : \"Lao People's Democratic Republic\",\n'Macao SAR' : 'Macao',\n'Micronesia' : 'Micronesia, Federated States of',\n'Moldova' : 'Moldova, Republic of',\n'Russia' : 'Russian Federation',\n'S\u00e3o Tom\u00e9 and Pr\u00edncipe' : 'Sao Tome and Principe',\n'Slovak Republic' : 'Slovakia',\n'St. Kitts and Nevis' : 'Saint Kitts and Nevis',\n'St. Lucia' : 'Saint Lucia',\n'St. Vincent and the Grenadines' : 'Saint Vincent and the Grenadines',\n'Syria' : 'Syrian Arab Republic',\n'Taiwan Province of China' : 'Taiwan, Province of China',\n'Venezuela' : 'Venezuela, Bolivarian Republic of',\n'Vietnam' : 'Viet Nam',\n'Tanzania' : 'Tanzania, United Republic of'})   ","3b6ec5fc":"new_drop_index = []\n\nfor i in gdp.Country:\n    if i not in country_names:\n        new_drop_index.append(i)","ef39bba7":"print(new_drop_index)","5b62b157":"merged_df = pd.merge(total_money_contribute, gdp)\nmerged_df = merged_df.rename(columns = {'2021' : 'GDP_2021'})\nmerged_df = merged_df.replace(np.nan, 0)\n","10bbf513":"merged_df['GDP_2021'] = merged_df['GDP_2021'].str.replace('.','')\nmerged_df['GDP_2021'] = merged_df['GDP_2021'].str.replace(',','')\n","69334761":"merged_df.info()","72256ac5":"merged_df['GDP_2021'] = merged_df['GDP_2021'].apply(lambda x: float(x) ) ","9b0d249b":"merged_df","a2691ef7":"plt.figure(figsize = (10,5))\nsns.scatterplot(\n               y = 'Totals',\n               x = 'GDP_2021',\ndata = merged_df[:25] )\nplt.title('Total Remittance Contribution vs GDP (First 25 Countries)')\nplt.show()","62821885":"plt.figure(figsize = (10,5))\nsns.scatterplot(\n               y = 'Totals',\n               x = 'GDP_2021',\ndata = merged_df[25:50] )\nplt.title('Total Remittance Contribution vs GDP (Second 25 Countries)')\nplt.show()","0aefafea":"plt.figure(figsize = (10,5))\nsns.scatterplot(\n               y = 'Totals',\n               x = 'GDP_2021',\ndata = merged_df[50:75] )\nplt.title('Total Remittance Contribution vs GDP (Third 25 Countries)')\nplt.show()","0117977f":"sns.heatmap(merged_df.corr(), \n            annot = True,\n            )\n\nplt.show()","c4eb9097":"sep_df = merged_df.sort_values('GDP_2021', ascending = False).reset_index().drop('index', axis = 1)","65d88958":"sep_df = sep_df.fillna(0)\n\nlabels_for_cut = ['Low GDP','Low to Med GDP' , 'Med to High GDP','High GDP' ]\nsep_Series = pd.qcut(sep_df['GDP_2021'], \n        q = 4,\n        labels = labels_for_cut)","a8f75545":"sep_df = pd.concat([sep_df, sep_Series], axis = 1)","19646329":"sep_df.columns = ['Country', 'Totals', 'GDP_2021', 'Category']","370845c2":"gdp_high = sep_df[sep_df.Category == 'High GDP']\ngdp_medtohigh = sep_df[sep_df.Category ==  'Med to High GDP']\ngdp_lowtomed = sep_df[sep_df.Category == 'Low to Med GDP']\ngdp_low = sep_df[sep_df.Category == 'Low GDP']","9e59aa7a":"plt.figure(figsize = (10,5))\nprint(f'Correlation for high GDP countries: {np.round(gdp_high.corr().iloc[0,1],2)}')\nsns.scatterplot(x = 'GDP_2021',\n               y = 'Totals',\n               data = gdp_high)\nplt.title('Countries Having High GDP ')\nplt.show()","e7d61f24":"plt.figure(figsize = (10,5))\nprint(f'Correlation for Med to High GDP countries: {np.round(gdp_medtohigh.corr().iloc[0,1],2)}')\nsns.scatterplot(x = 'GDP_2021',\n               y = 'Totals',\n               data = gdp_medtohigh)\nplt.title('Countries Having Med to High GDP ')\nplt.show()","dcc78fd3":"plt.figure(figsize = (10,5))\nprint(f'Correlation for Low to Med GDP countries: {np.round(gdp_lowtomed.corr().iloc[0,1],2)}')\nsns.scatterplot(x = 'GDP_2021',\n               y = 'Totals',\n               data = gdp_lowtomed)\nplt.title('Countries Having Low to Med GDP ')\nplt.show()","4078607e":"plt.figure(figsize = (10,5))\nprint(f'Correlation for Low GDP countries: {np.round(gdp_low.corr().iloc[0,1],2)}')\nsns.scatterplot(x = 'GDP_2021',\n               y = 'Totals',\n               data = gdp_low)\nplt.title('Countries Having Low GDP ')\nplt.show()","2be49f2f":"<a id='4'><\/a>\n## Conclusion\n\n* US remits and India receives the most amount of remittance.\n* There is a weak correlation between GDP and contribution of remittance of countries to their GDP because each country receives a different amount of remittance.\n* Countries having low and med to high GDPs are the ones most affected by remittance.\n","289d3b2c":"------------------","f856acc9":"### Categorical Observation\n\nLet's do the same thing but this time group the countries into 4 categories. This way we can understand the effect better.","bb7bed53":"The poins on scatterplots generally lie left side on the graph. This shows there is an inverse relationship between GDP and remittance contribution. Let's find how strong this correlation actually is.","f67d49de":"### Total Money Received by Countries for Each Year","d08a0560":"United States is the most money paid country. On the other hand, India is at 18th ranking.","b0074582":"<a id='3'><\/a>\n## Data Visualization","d9a48ced":"### Most Money Received Countries","dcb65a29":"India is by far the most Money Received Country in the world between 2010 and 2020.","0e54877c":"Seems like as time goes on, total remittance increases.","e5c027f2":"\n<img src= \"https:\/\/www.globaltimes.cn\/Portals\/0\/attachment\/2020\/2020-03-11\/75b0de2d-ea90-45a6-a8c9-8807fd56c7c1.jpeg\"  style='width: 500px;'>\n","1d51fca4":"<a id='2'><\/a>\n## Analyzing the Data","27db2500":"When I look these graphs, the first thing come to my mind is as GDP of a given country increases, **generally** the effect of remittance on this country decreases. Thats how Netherlands, Australia, Spain, Ireland, UK etc. appear on this graph. However that is not the only reason why a country appears or not on contribution graphs. For example, not all 20 countries appear on last graph have high GDP.  \n\nLet's discover there is a strong inverse relationship between GDP values and remittance contribution. To do that we will utilize the data from **International Monetary Fund (IMF), World Economic Outlook Database, April 2021**. ","ce8a2fbc":"And the United States is at 20th ranking which surprised me.","dd24f62b":"<a id='1'><\/a>\n## Introduction\n\n   A remittance is a non-commercial transfer of money by a foreign worker, a member of a diaspora community, or a citizen with familial ties abroad, for household income in their home country or homeland. Money sent home by migrants competes with international aid as one of the largest financial inflows to developing countries. Workers' remittances are a significant part of international capital flows, especially in labor-exporting countries.\n\n   Remittances are playing an increasingly large role in the economies of many countries. They contribute to economic growth and the livelihoods of those countries. According to World Bank estimates, remittances will total 573 billion dollars in 2019, of which 422 billion dollars went to developing countries that involved 250 million migrant workers. For some individual recipient countries, remittances can be as high as a third of their GDP.[(1)](https:\/\/en.wikipedia.org\/wiki\/Remittance)\n\n   In this dataset, we will observe the remittance change within the years by company and hopefully conclude some useful information.","ca54d252":"Thanks...","63f45169":"# Content of this Notebook\n\n1. [Introduction](#1)\n1. [Analyzing the Data](#2)\n1. [Data Visualization](#3)\n1. [Conclusion](#4) ","d353ce0b":"--------------------------------","f4a321de":"---------------------"}}