{"cell_type":{"7b6ef713":"code","15ccc3cc":"code","63da229f":"code","00e2499d":"code","adb7bb50":"code","462fe040":"code","9a1408c7":"code","4e976427":"code","95232062":"code","abe1be28":"code","b19387c4":"markdown","4429c035":"markdown","9eaae80d":"markdown","9f0e9cf4":"markdown","3909aff6":"markdown","c0062dc5":"markdown","031a4400":"markdown","bc84d212":"markdown","e69d8ba2":"markdown"},"source":{"7b6ef713":"import pandas as pd\nimport warnings\n\n#Suppressing all warnings\nwarnings.filterwarnings(\"ignore\")\n\n","15ccc3cc":"df = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","63da229f":"df.head()","00e2499d":"df.isna().sum()","adb7bb50":"small_df=df[['age', 'ejection_fraction', 'serum_creatinine', 'serum_sodium', 'time']]","462fe040":"x = small_df\ny = df['DEATH_EVENT']","9a1408c7":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1,test_size=0.2)","4e976427":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\nscaler=StandardScaler()\nx_train_sc=scaler.fit_transform(x_train)\nx_train=pd.DataFrame(x_train)\nx_test_sc=scaler.fit_transform(x_test)\nx_test=pd.DataFrame(x_test)","95232062":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)\np3=rfc.predict(x_test)\ns3=accuracy_score(y_test,p3)\nprint(\"Random Forest Classifier Success Rate :\", \"{:.2f}%\".format(100*s3))","abe1be28":"from sklearn.neighbors import KNeighborsClassifier\nscorelist=[]\nfor i in range(1,21):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    p5=knn.predict(x_test)\n    s5=accuracy_score(y_test,p5)\n    scorelist.append(round(100*s5, 2))\nprint(\"K Nearest Neighbors Top 5 Success Rates:\")\nprint(sorted(scorelist,reverse=True)[:5])","b19387c4":"**This was a quick modelling by ignoring less-correlated features. Any thoughts on the notebook appreciated.**","4429c035":"## Importing Modules and Data","9eaae80d":"## Final Results:","9f0e9cf4":"Linear Regression: 88.30%\n\nGradient Booster Classifier: 85.00%\n\nSupport Vector Machine: 90.00%\n\nRandom Forest Classifier: 91.67%\n\nK Nearest Neighbors: 93.33%","3909aff6":"### Random Forest Classifier","c0062dc5":"### (Random Forest rate varies on each execution from 88.33% to 91.67%)","031a4400":"### K Nearest Neighbors","bc84d212":"## Model Training and Prediction","e69d8ba2":"## Initial Review of Data"}}