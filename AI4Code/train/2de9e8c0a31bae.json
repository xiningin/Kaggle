{"cell_type":{"733ebced":"code","84729c35":"code","64eb8f88":"code","029f028f":"code","b28003d4":"code","f88ad641":"code","e2eac074":"code","c3872de6":"code","36b8c702":"code","584da49c":"code","24e6a9a8":"code","9cd451e0":"code","afb997f3":"code","3212dbdb":"code","dc50f8e7":"code","030d09cc":"code","00ff28b1":"code","6e5f1e0f":"code","58740232":"code","0b1ead19":"code","b2ef5df5":"code","73b2a2eb":"code","47d9e2c6":"markdown","368ffab2":"markdown","87430492":"markdown","6bb723b5":"markdown","12b1a0f1":"markdown","0c0eabac":"markdown","d1775abe":"markdown","994da698":"markdown","f39596ac":"markdown","1dcfa2a3":"markdown","b7123531":"markdown","f47ec9b6":"markdown","6be3a5bd":"markdown","ea54f581":"markdown","08566296":"markdown","f0b7d718":"markdown","dad57896":"markdown","080ca773":"markdown"},"source":{"733ebced":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt#plot drawing\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","84729c35":"data = pd.read_csv(\"..\/input\/2017.csv\")\nprint(\"Data Info\")\ndata.info()\n#Change . sepertor with _ \ndata.columns = data.columns.str.replace(\".\", \"_\")\n\n\n","64eb8f88":"data.columns = data.columns.str.replace(\"Economy__GDP_per_Capita_\", \"Economy\")\ndata.columns = data.columns.str.replace(\"Health__Life_Expectancy_\",\"Health\")\ndata.columns = data.columns.str.replace(\"Trust__Government_Corruption_\",\"Government_trust\")\ndata.columns","029f028f":"print(\"2017 data set\")\ndata.corr() \n#correlation map view\nf, ax = plt.subplots(figsize = (8,8))\nsns.heatmap(data.corr(), annot = True, linewidths=.5, fmt = \".2f\", ax=ax)\nplt.show()\ndata.describe()","b28003d4":"plt.plot(data.Happiness_Score, data.Economy, color = \"red\", label = \"Economy\",alpha = 0.8)\nplt.plot(data.Happiness_Score, data.Family, color = \"yellow\", label = \"Family\",alpha = 0.8)\nplt.plot(data.Happiness_Score, data.Freedom, color = \"blue\", label = \"Freedom\",alpha = 0.8)\nplt.plot(data.Happiness_Score, data.Health, color = \"green\", label = \"Health\",alpha = 0.8)\n\nplt.legend()    \nplt.xlabel('Happiness Score')           \nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n","f88ad641":"#data.plot(kind=\"scatter\", x = \"Economy\", y =\"Family\", color = \"yellow\", label = \"Economy-Family\")\n#data.plot(kind=\"scatter\", x = \"Economy\", y =\"Health\", color = \"green\", label = \"Economy-Health\")\n#data.plot(kind=\"scatter\", x = \"Economy\", y =\"Freedom\", color = \"blue\", label = \"Economy- Freedom\")\nplt.scatter(data.Economy, data.Family, color = \"yellow\", label = \"Family\")\nplt.scatter(data.Economy, data.Health, color = \"green\", label = \"Health\")\nplt.scatter(data.Economy, data.Freedom, color = \"blue\", label = \"Freedom\")\nplt.xlabel('Economy') \nplt.legend()\nplt.title('Economy Relations')            \nplt.show()","e2eac074":"plt.scatter(data.Happiness_Score, data.Health, color = \"green\", label = \"Health\")\nplt.scatter(data.Happiness_Score, data.Freedom, color = \"blue\", label = \"Freedom\")\nplt.xlabel('Happiness Score') \nplt.legend()\nplt.title('Happiness Score Relations')            \nplt.show()","c3872de6":"happy = data[data[\"Happiness_Score\"] > 5.3] \nunhappy = data[data[\"Happiness_Score\"] < 5.3] \n\nhappy.Economy.plot(kind = 'hist',bins = 50,figsize = (8,8), color = \"blue\", alpha = 0.7, label = \"Happy\")\nunhappy.Economy.plot(kind = 'hist',bins = 50,figsize = (8,8), color = \"red\", alpha = 0.7, label = \"Unhappy\")\n\nplt.xlabel('Economy')             \nplt.title('Happiness and Economy relations') \nplt.legend()\nplt.show()","36b8c702":"happy = data[data[\"Happiness_Score\"] > 5.3] \nunhappy = data[data[\"Happiness_Score\"] < 5.3]\n\nhappy.Freedom.plot(kind = 'hist',bins = 50,figsize = (8,8), color = \"blue\", alpha = 0.7, label = \"Happy\")\nunhappy.Freedom.plot(kind = 'hist',bins = 50,figsize = (8,8), color = \"red\", alpha = 0.7, label = \"Unhappy\")\n\nplt.xlabel('Freedom')             \nplt.title('Happiness and Freedom relations') \nplt.legend()\nplt.show()","584da49c":"data = pd.read_csv('..\/input\/2016.csv')\ndata.columns\n#I need to make some changes about column names to work more better","24e6a9a8":"#Change . sepertor with _ \ndata.columns = data.columns.str.replace(\" \", \"\")\ndata.columns = data.columns.str.replace(\"(\", \"\")\ndata.columns = data.columns.str.replace(\")\", \"\")\n\ndata.columns = data.columns.str.replace(\"EconomyGDPperCapita\", \"Economy\")\ndata.columns = data.columns.str.replace(\"HealthLifeExpectancy\",\"Health\")\ndata.columns = data.columns.str.replace(\"TrustGovernmentCorruption\",\"Government_trust\")\ndata.columns","9cd451e0":"series = data['HappinessScore']\nprint(type(series))\n#Creating DataFrames to work more quicky\n#df is a column of happiness score --> new data frame creation\ndf = data[['HappinessScore']]\nprint(type(df))\n","afb997f3":"happy = data[data[\"HappinessScore\"] > 5.3]\nunhappy = data[data[\"HappinessScore\"] < 5.3]\nprint(\"First 5 happy Countries scores\")\nhappy.head()\nhappy.columns","3212dbdb":"print(\"TOP 10 HAPPY COUNTRIES\")\nwest = happy[happy[\"Region\"] == \"Western Europe\"]\ncnt = 0\nfor index,row in west.iterrows():\n    if(cnt < 10):\n        print(happy.Country[index])\n        cnt += 1\n\nprint(\"FIRST 10 UNHAPPY COUNTRIES\")\n\nwestu = unhappy[unhappy[\"Region\"] == \"Western Europe\"]\ncnt = 0\nfor index,row in westu.iterrows():\n    if(cnt < 10):\n        print(unhappy.Country[index])\n        cnt += 1\n\n\n","dc50f8e7":"data.info()","030d09cc":"#Find the happiest countries above from threashold value\ndf_a = pd.DataFrame(columns=[\"Country\",\"HappinessScore\", \"Economy\"])\ndf_b = pd.DataFrame(columns=[\"Country\",\"HappinessScore\", \"Economy\"])","00ff28b1":"#Find the happiest countries above from threashold value\ndef above_threashold(thr,avg = 5.3):\n    if(thr >= avg):\n        for index, value in data.iterrows():\n            if((data.HappinessScore[index] > thr) & (data.HappinessScore[index] > avg)):\n                print(\"(\",data.Country[index],\"-\", data.HappinessScore[index], \") above \", thr)\n            elif((data.HappinessScore[index] < thr) & (data.HappinessScore[index] > avg)):\n                print(\"(\",data.Country[index],\"-\", data.HappinessScore[index], \") below \", thr)\n            else:\n                continue\n    else:\n        print(\"your threashold is lower than average happiness score\")        \n\nprint(above_threashold(7))\n\n\n\n","6e5f1e0f":"#df_a.HappinessScore.plot(kind = 'line', figsize = (8,8), color = \"blue\", alpha = 0.7, label = \"Above Countries\")\n#df_b.HappinessScore.plot(kind = 'line',figsize = (8,8), color = \"red\", alpha = 0.7, label = \"Below Countries\")\n#plt.plot(df_a.Country, df_a.HappinessScore, color = \"red\", label = \"Above Counries\",alpha = 0.7)\n#plt.plot(df_b.Country, df_b.HappinessScore, color = \"blue\", label = \"Below Counries\",alpha = 0.7)","58740232":"west_countries = list(west.Country)\nhappy_score = list(west.HappinessScore)\nc_list = []\ns_list = []\nfor each in range(len(west_countries)):\n    c_name = west_countries[each]\n    h_score = int(happy_score[each])\n    i_name = iter(c_name)\n    c_list.append(next(i_name))\n    s_list.append(h_score)\nprint(\"clist: \", c_list, \"slist: \", s_list)\n#ZIP 2 list to combine\nz = zip(c_list, s_list)\nprint(z)\nz_list = list(z)\nprint(z_list)\n","0b1ead19":"data.Economy.describe()","b2ef5df5":"# Conditionals on iterable\nthreshold = sum(data.Economy) \/ len(data.Economy)\ndata[\"Economical_level\"] = [\"high\" if i > threshold else \"low\" for i in data.Economy]\n","73b2a2eb":"hec = data[data[\"Economical_level\"] == \"high\"]\nlec = data[data[\"Economical_level\"] == \"low\"]\n\nplt.plot(hec.Generosity, hec.HappinessScore, color = \"red\", label = \"Economically High\",alpha = 0.8 )\nplt.plot(lec.Generosity, lec.HappinessScore, color = \"blue\", label = \"Economically Low\",alpha = 0.8 )\n\nplt.xlabel('Generosity')             \nplt.title('How Generosity is effect on Happiness in economically high and low countries') \nplt.legend()\nplt.show()\n\n\n","47d9e2c6":"As it seems from the figure, in \"Happy\" counties Economical situation is better than \"Unhappy\" countries.\nThen I want focussing on \"How Freedom has effect on Happy and Unhappy countries?\"","368ffab2":"Lets continue with CORRELATION MAP to understand relationships between features with corr() function.\n\nIf corr==1 btw 2 feature,those features has linear relation(positive)\nIf corr ==0, features has no realtionship","87430492":"As it can seen from output  there are only 2 unhappy countries are there in Western Europe.","6bb723b5":"# My First Data Analysis Report\n**This is my first Data Analysis Report**\n","12b1a0f1":"Before starting analyzing data, data sets should be imported as dataframe from .csv file\n\nThen, reading column information about those dataframes with .info()\n\nThen looking which columns do have data frames with .column","0c0eabac":"**Histogram Plot**\n\nHistogram plot is useful to analyze the data with frequency differences. Also, in the beginning this graphs is very useful to understand mean values and distiributions.\nFor histogram plot, I want to analyze \"Happy and Unhappy countries behaviours\".\nNote: Mean of the Happiness score is approximately 5.3 therefore I'll use that data as a threashold on dividing happy and unhappy dataset.\n","d1775abe":"According to those values, for happiness the most important factor is Economy, but also having a family has a big effect on it.","994da698":"<a id=\"7\">ITERATORS<\/a> <br>\nInside of the list,String,dictionaries iterations instead of using for loop **iter() , next(), *iter_ed value** functions can be used\n<br>\nzip() function is also useful for combining list \n","f39596ac":"<a id=\"2\">MATPLOTLIB<\/a> <br>\n**Line Plot** \n\nThis plot is useful when we need to analyze increasing\/changing value on x-axis and impacts on other features y-axis\nIn this part, I want to analyze more correlated values effects on happiness score.","1dcfa2a3":"**Scatter Plot **\n\nWhen we need to analyze correlated values and their behaviour, scatter plot helps a lot. Therefore, I would like to analyze Economy values with other important values. Hence, Happiness score is more related with Economy, then lets analyze how the others are related with Economy...\n\n","b7123531":"<a id=\"8\">LIST COMPREHENSION<\/a> <br>\nWe use list comprehension for data analysis often. \n<br> list comprehension: collapse for loops for building lists into a single line\n","f47ec9b6":"As it seems from the figure above, Health and Freedom has more relations then having family. For example, Counties have the Economy scala between 0.75 and 1.0(averagly normal economical countires) has more common points and it is hard distinguish between them. ","6be3a5bd":"\n<a id=\"7\">FUNCTIONS<\/a> <br>\nDefault and Flexiable functions examples:<br>\nLets given a threashold find other happy countries...","ea54f581":"<a id=\"3\">PANDAS<\/a> <br>\nThis part, I will seperate my datas to improve my basic skills. Therefore now I changed my dataset and now I'll work on 2016's dataset","08566296":"For Freedom perspective, it is hard to distinguish values because both graphs mean values are very similar with each other. \n\nIt means that Economical situation has more power than Freedom to distinguish countries with each other.","f0b7d718":"Now using logical expression, lets create happy and unhappy dataframes again","dad57896":"Lets analyze the first 5 happy and unhappy countries in Western Europe situation with creating new dataframes by using while and for loops. In western Europe there are 19 data.","080ca773":"Additionally, when i analyzed health and freedom with respect to happiness score, it is hard to distinguish them, therefore to analyze those is a little bit hard."}}