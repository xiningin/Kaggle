{"cell_type":{"5039f310":"code","84d29323":"code","cca32bff":"code","c2d87c5f":"code","f49b5e8b":"code","e044fba3":"code","dd0e9138":"code","4ca65ff6":"code","9539eb5f":"code","cc4214d4":"code","2c096b2e":"code","47781e9a":"code","43520c81":"code","05c5bf95":"code","e8ba3bd1":"code","c63d7be6":"code","d0eaaaf8":"code","969a7531":"code","e335fe43":"code","f7450c8f":"code","78a0c797":"code","a5c75fac":"code","a48a0564":"code","aeb9a1f5":"code","625f8a56":"code","3cd949e0":"markdown","e74504c1":"markdown","0e1c3100":"markdown","01d69f9c":"markdown","ab7ade83":"markdown","64e61223":"markdown"},"source":{"5039f310":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom statsmodels.graphics.mosaicplot import mosaic\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","84d29323":"# import data\ndf = pd.read_csv('..\/input\/las-flight-arrivals-2019\/LAS_Arrivals_2019.csv')","cca32bff":"df.head()","c2d87c5f":"df.info()","f49b5e8b":"# distribution by origin airport\ndf.origin_airport.value_counts()","e044fba3":"df.origin_airport.value_counts()[0:10].plot(kind='bar')\nplt.grid()\nplt.title('Origin Airport - Top 10')\nplt.show()","dd0e9138":"# store top 5 airports for later\ntop5_airport = list(df.origin_airport.value_counts()[0:5].index)\ntop5_airport","4ca65ff6":"# distribution by carrier\ndf.carrier_code.value_counts().plot(kind='bar')\nplt.grid()\nplt.title('Carrier')\nplt.show()","9539eb5f":"# bivariate distribution airport\/carrier (use only top 5 airports)\ndf_top5_airport = df[df.origin_airport.isin(top5_airport)]\nplt.rcParams[\"figure.figsize\"]=(12,8)\nmosaic(df_top5_airport, ['origin_airport', 'carrier_code'], title='Distribution Airport [top 5] \/ Carrier')\nplt.show()","cc4214d4":"# corresponding figures\npd.crosstab(df_top5_airport.carrier_code, df_top5_airport.origin_airport)","2c096b2e":"# another visualization\npd.crosstab(df_top5_airport.origin_airport, df_top5_airport.carrier_code).plot(kind='bar', stacked=True)\nplt.grid()\nplt.show()","47781e9a":"# distribution by date\ndf.date.value_counts()","43520c81":"plt.figure(figsize=(12,4))\nplt.hist(df.arrival_delay_minutes,100)\nplt.grid()\nplt.title('Arrival Delay [mins]')\nplt.show()","05c5bf95":"df_origin_airport = df.groupby('origin_airport', as_index=False).agg(\n    mean_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=np.mean),\n    min_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=min),\n    max_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=max),\n    q10_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=lambda x:np.quantile(x,.1)),\n    q90_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=lambda x:np.quantile(x,.9)))\n\ndf_origin_airport","e8ba3bd1":"plt.figure(figsize=(18,4))\nplt.plot(df_origin_airport.origin_airport, df_origin_airport.mean_delay)\nplt.grid()\nplt.xticks(rotation=90)\nplt.title('Mean delay by origin airport')\nplt.show()","c63d7be6":"# select peaks\ndf_origin_airport_high = df_origin_airport[df_origin_airport.mean_delay > 20]\ndf_origin_airport_high","d0eaaaf8":"df_date = df.groupby('date', as_index=False).agg(\n    mean_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=np.mean),\n    min_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=min),\n    max_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=max),\n    q10_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=lambda x:np.quantile(x,.1)),\n    q90_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=lambda x:np.quantile(x,.9)))\n\ndf_date","969a7531":"plt.figure(figsize=(18,4))\nplt.plot(df_date.date, df_date.mean_delay)\nplt.xticks(rotation=90)\nplt.grid()\nplt.title('Mean delay by date')\nplt.show()","e335fe43":"# select peaks\ndf_date_high = df_date[df_date.mean_delay > 40]\ndf_date_high","f7450c8f":"# Highest mean delay was on 04\/29\/2019. Let's have a closer look.\ndf_date_max = df[df.date=='04\/29\/2019']","78a0c797":"# plot + compare with all delays\nfig, ax = plt.subplots(2, sharex=True, figsize=(12,4*2))\nfig.suptitle('Compare delays on peak day vs. all delays', fontweight='bold')\nax[0].hist(df_date_max.arrival_delay_minutes,100)\nax[0].set_title('Delays on 04\/29\/2019')\nax[0].grid()\nax[1].hist(df.arrival_delay_minutes,100)\nax[1].set_title('All Delays 2019')\nax[1].grid()\nplt.show()","a5c75fac":"df_carrier = df.groupby('carrier_code', as_index=False).agg(\n    mean_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=np.mean),\n    min_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=min),\n    max_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=max),\n    q10_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=lambda x:np.quantile(x,.1)),\n    q90_delay = pd.NamedAgg(column='arrival_delay_minutes', aggfunc=lambda x:np.quantile(x,.9)))\n\ndf_carrier","a48a0564":"plt.figure(figsize=(8,4))\nplt.plot(df_carrier.carrier_code, df_carrier.mean_delay)\nplt.plot(df_carrier.carrier_code, df_carrier.q90_delay, linestyle='dashed')\nplt.plot(df_carrier.carrier_code, df_carrier.q10_delay, linestyle='dashed')\nplt.grid()\nplt.title('Mean delay + 10%\/90% quantile by carrier')\nplt.show()","aeb9a1f5":"# violinplot\nplt.figure(figsize=(8,8))\nsns.violinplot(x='carrier_code', y='arrival_delay_minutes', data=df)\nplt.grid()\nplt.show()","625f8a56":"plt.figure(figsize=(8,8))\nsns.violinplot(x='carrier_code', y=np.log10(90+df.arrival_delay_minutes), data=df)\nplt.grid()\nplt.show()","3cd949e0":"#### This is not very helpful. Let's try a log transformation for plotting.","e74504c1":"# Delay by origin airport","0e1c3100":"# EDA","01d69f9c":"# Delay by carrier","ab7ade83":"# Explore delayed flights arriving in Las Vegas during 2019","64e61223":"# Delay by date"}}