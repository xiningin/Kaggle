{"cell_type":{"ac1567d7":"code","3d8aba09":"code","a327a311":"code","58170ed6":"code","8dc187df":"code","b02cabe4":"code","f784c2b1":"code","1f9d17b9":"code","7bf542ab":"code","18c9bdfc":"code","29e13784":"code","973a0af4":"code","d28e1d16":"code","5d1af804":"code","e22e6c60":"code","1e95f6cd":"code","2fafdb12":"code","f0a20df1":"code","d09b2887":"markdown","077c6aa4":"markdown","61304b05":"markdown","a01c4507":"markdown"},"source":{"ac1567d7":"import numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.simplefilter('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3d8aba09":"submission = pd.read_csv('..\/input\/cat-in-the-dat\/sample_submission.csv', index_col='id')","a327a311":"kernels = pd.read_csv('..\/input\/cat-in-dat-kernels\/kernels.csv', index_col='id')","58170ed6":"kernels.head()","8dc187df":"import glob\n\ndef make_filename(idx):\n    return glob.glob('..\/input\/cat-in-dat-kernels\/' + str(idx) + '__submission__*.csv')[0]\n\ndef read_predictions(idx):\n    temp = pd.read_csv(make_filename(idx), index_col='id')\n    temp.columns = [str(idx)]\n    return temp\n\n\npredictions = pd.concat([read_predictions(idx) for idx in kernels.index], axis=1)\npredictions.shape","b02cabe4":"predictions.head()","f784c2b1":"# From https:\/\/seaborn.pydata.org\/examples\/many_pairwise_correlations.html\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ncorr = predictions.corr()\n\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nf, ax = plt.subplots(figsize=(12, 12))\n\nsns.heatmap(corr, mask=mask, cmap='Blues', vmin=0.95, center=0, linewidths=1, annot=True, fmt='.4f')","1f9d17b9":"submission['target'] = predictions.mean(axis=1)\nsubmission.to_csv('stack-mean.csv')","7bf542ab":"submission.head()","18c9bdfc":"scores = kernels['score']\n\nsum_scores = sum(scores)\n\nweights = [x \/ sum_scores for x in scores]","29e13784":"sum_predictions = predictions.dot(pd.Series(weights, index=predictions.columns))","973a0af4":"sum_predictions.head()","d28e1d16":"submission['target'] = sum_predictions\nsubmission.to_csv('stack-weighted-sum.csv')","5d1af804":"N = 3\n\nselected = kernels.sort_values('score', ascending=False).head(N)","e22e6c60":"print('Max selected score =', selected['score'].max())\nprint('Min selected score =', selected['score'].min())","1e95f6cd":"filter_predictions = predictions.loc[:,selected.index.values.astype(str)]","2fafdb12":"filter_predictions.head()","f0a20df1":"submission['target'] = filter_predictions.mean(axis=1)\nsubmission.to_csv('stack-filtered.csv')","d09b2887":"## Weighted sum","077c6aa4":"## Stack","61304b05":"## Filter","a01c4507":"## Correlation matrix"}}