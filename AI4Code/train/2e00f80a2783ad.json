{"cell_type":{"ab8e2299":"code","357bc61e":"code","4ca8f176":"code","98423053":"code","90121f0d":"code","4081baaa":"code","ee38be61":"markdown","a96033b9":"markdown","924fdb54":"markdown"},"source":{"ab8e2299":"import cv2\nimport numpy as np\nfrom matplotlib import pyplot as plt","357bc61e":"img = cv2.imread(r'..\/input\/image-for-basic-digital-image-processing-operation\/lena.jpg',0)\nimg = cv2.medianBlur(img,5)","4ca8f176":"ret,th1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY)\nplt.imshow(th1,'gray')\nplt.title('Global Thresholding')","98423053":"th2 = cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_MEAN_C,\\\n            cv2.THRESH_BINARY,11,2)\nth3 = cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,\\\n            cv2.THRESH_BINARY,11,2)\n\ntitles = ['Original Image', \n            'Adaptive Mean Thresholding', 'Adaptive Gaussian Thresholding']\nimages = [img, th2, th3]","90121f0d":"plt.figure(figsize=(10,5))\nfor i in range(0,3):\n    plt.subplot(1,3,i+1),plt.imshow(images[i],'gray')\n    plt.title(titles[i])\n    plt.xticks([]),plt.yticks([])\nplt.show()","4081baaa":"img = cv2.imread(r'..\/input\/image-for-basic-digital-image-processing-operation\/noisysalterpepper.png',0)\n\n# global thresholding\nret1,th1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY)\n\n# Otsu's thresholding\nret2,th2 = cv2.threshold(img,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n\n# Otsu's thresholding after Gaussian filtering\nblur = cv2.GaussianBlur(img,(5,5),0)\nret3,th3 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n\n# plot all the images and their histograms\nimages = [img, 0, th1,\n          img, 0, th2,\n          blur, 0, th3]\ntitles = ['Original Noisy Image','Histogram','Global Thresholding (v=127)',\n          'Original Noisy Image','Histogram',\"Otsu's Thresholding\",\n          'Gaussian filtered Image','Histogram',\"Otsu's Thresholding\"]\nplt.figure(figsize=(10,10))\nfor i in range(3):\n    plt.subplot(3,3,i*3+1),plt.imshow(images[i*3],'gray')\n    plt.title(titles[i*3]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3,3,i*3+2),plt.hist(images[i*3].ravel(),256)\n    plt.title(titles[i*3+1]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3,3,i*3+3),plt.imshow(images[i*3+2],'gray')\n    plt.title(titles[i*3+2]), plt.xticks([]), plt.yticks([])\nplt.show()","ee38be61":"# Adaptive Thresholding","a96033b9":"# Global Thresholding","924fdb54":"# Image Segmentation\/Binarization\n# Siddhesh Mukesh Mahajan\n# 2017BEC047"}}