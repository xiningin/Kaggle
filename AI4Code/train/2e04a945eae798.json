{"cell_type":{"b0d8aaf1":"code","c4ce0ecd":"code","af3d38f6":"code","97519b2f":"code","1c507245":"code","c8ebcd34":"code","009d397d":"code","09892cbf":"code","6a86fd29":"code","b9e4e7a2":"code","2db9192d":"code","f42902f0":"code","3e5bbfe5":"code","0495a243":"code","c21cee0a":"code","0a9c71f8":"code","1e1ee058":"code","4a0976f2":"code","80293677":"code","d81bac00":"code","277903b7":"code","47d82bff":"code","cbcdd4ce":"code","35fed314":"code","f53146ed":"code","a23d930b":"code","489cbaff":"code","f3afc812":"code","636c98d6":"code","6f5858d0":"markdown","717a6f7f":"markdown","34edfd6b":"markdown","85e96d1a":"markdown","681eb9ef":"markdown","bfb271de":"markdown","f464657e":"markdown","f5ecfc2f":"markdown","f8d24d85":"markdown","bd1f797e":"markdown","304e1253":"markdown"},"source":{"b0d8aaf1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4ce0ecd":"import pandas as pd\nnetflix_shows=pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")\nnetflix_shows.head(10)","af3d38f6":"netflix_shows.shape              # let's see how big is the dataset","97519b2f":"# check null values of different columns\nnetflix_shows.isnull().sum()","1c507245":"# Analyse counts of different ratings  \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(14,8))\nsns.countplot(x=\"rating\",data=netflix_shows)","c8ebcd34":"netflix_shows[\"date_added\"]=netflix_shows[\"date_added\"].fillna(method='ffill')\nnetflix_shows[\"date_added\"].isnull().sum()     ","009d397d":"year=netflix_shows[\"date_added\"].to_list()  # convert to list for extracting the year added","09892cbf":"for i in range(len(year)):\n    netflix_shows[\"year_added\"].iloc[i]=year[i].split(',')[1]","6a86fd29":"netflix_shows.head()","b9e4e7a2":"import numpy as np\nnetflix_shows[\"year_added\"]=netflix_shows[\"year_added\"].astype(np.int)","2db9192d":"sns.set_style(\"darkgrid\")\nplt.figure(figsize=(14,8))\nsns.countplot(x=\"type\",hue=\"year_added\",data=netflix_shows)","f42902f0":"import matplotlib.pyplot as plt\nvalues=dict(netflix_shows[\"type\"].value_counts())\nlabels=values.keys()\nsizes=values.values()\nfig1, ax1 = plt.subplots()\nax1.pie(sizes,labels=labels, shadow=True,autopct='%1.1f%%',startangle=90)\nplt.show()","3e5bbfe5":"# Let's check some oldest movies and TV shows on netflix\nnetflix_shows[[\"title\",\"release_year\"]].groupby([\"release_year\"]).min().head(10)\n","0495a243":"# Let's focus on the distribution of duration of movies\ndef plot_movie_duration():\n    netflix_duration=netflix_shows[\"duration\"].copy()\n    index=[]\n    for i in range(len(netflix_shows[\"duration\"])):\n        if netflix_shows[\"type\"].iloc[i]=='TV Show':\n            index.append(i)\n        \n        \n    netflix_duration=netflix_duration.drop(index)\n    for i in range(len(netflix_duration)):\n        x=netflix_duration.iloc[i].split(' ')[0]\n        netflix_duration.iloc[i]=x\n        \n    plt.figure(figsize=(12,8))\n    sns.distplot(netflix_duration)\n\nplot_movie_duration()","c21cee0a":"def plot_series_duration():\n    netflix_tv_show_duration=netflix_shows[\"duration\"].copy()\n    index=[]\n    for i in range(len(netflix_shows[\"duration\"])):\n        if netflix_shows[\"type\"].iloc[i]=='Movie':\n            index.append(i)\n        \n        \n    netflix_tv_show_duration=netflix_tv_show_duration.drop(index)\n    for i in range(len(netflix_tv_show_duration)):\n        x=netflix_tv_show_duration.iloc[i].split(' ')[0]\n        netflix_tv_show_duration.iloc[i]=x\n        \n    plt.figure(figsize=(12,8))\n    sns.countplot(netflix_tv_show_duration)\n\nplot_series_duration()","0a9c71f8":"# Now see the top categories of shows\nfrom collections import Counter \n\n\nGenres=netflix_shows[\"listed_in\"].copy()\ncategories=[]\nfor i in range(len(Genres)):\n    elements=Genres.iloc[i].split(\",\")\n    for j in range(len(elements)):\n        categories.append(elements[j])\ncount_categories=Counter(categories)\n#print(count_categories)\n\ncount_categories=count_categories.most_common()   # for sorting values\nkeys=[count_categories[i][0] for i in range(len(count_categories))]\nvalues=[count_categories[i][1] for i in range(len(count_categories))]\n\n\ntop_10_keys=keys[0:10]\ntop_10_values=values[0:10]\nplt.figure(figsize=(21,10))\nsns.barplot(top_10_keys,top_10_values)\nplt.title(\"Top 10 movie-series categories\")","1e1ee058":"country=netflix_shows[\"country\"].copy()\ncountry=country.dropna(axis=0,how='all')\ncountry_list=[]\nfor i in range(len(country)):\n    elements=country.iloc[i].replace(\" \",\"\").split(\",\")\n    for j in range(len(elements)):\n        country_list.append(elements[j])\ncountry_dict=Counter(country_list)\n#print(country_dict)\ncountry_dict=country_dict.most_common()\n\nkeys=[country_dict[i][0] for i in range(len(country_dict))]\nvalues=[country_dict[i][1] for i in range(len(country_dict))]\n\ntop_20_countries=keys[:20]\ntop_20_values=values[:20]\n\nplt.style.use('Solarize_Light2')\nplt.figure(figsize=(14,10))\nsns.barplot(top_20_values,top_20_countries)","4a0976f2":"actors_country=netflix_shows[['cast','country']]\nactors_country=actors_country.dropna(axis=0,how='any')\n\ntop_actors_USA=[]\ntop_actors_India=[]\ntop_actors_UK=[]\ntop_actors_Canada=[]\ntop_actors_France=[]\n\nfor i in range(actors_country.shape[0]):\n    country = list(actors_country['country'].iloc[i].replace(\" \", \"\").split(\",\"))\n    actors= list(actors_country['cast'].iloc[i].split(\",\"))\n    for j in range(len(actors)):\n        for k in range(len(country)):\n            actors[j]=actors[j].strip()\n            if country[k]=='UnitedStates':\n                top_actors_USA.append(actors[j])\n            if country[k]=='India':\n                top_actors_India.append(actors[j])\n            if country[k]=='UnitedKingdom':\n                top_actors_UK.append(actors[j])\n            if country[k]=='Canada':\n                top_actors_Canada.append(actors[j])\n            if country[k]=='France':\n                top_actors_France.append(actors[j])\n\n","80293677":"def plot_top_actors(top_actors):\n    top_actors=Counter(top_actors)\n    top_actors=top_actors.most_common()\n    \n    keys=[top_actors[i][0] for i in range(len(top_actors))]\n    values=[top_actors[i][1] for i in range(len(top_actors))]\n\n    top_20_keys=keys[:20]\n    top_20_values=values[:20]\n    \n    plt.style.use('classic')\n    plt.figure(figsize=(10,6))\n    sns.barplot(top_20_values,top_20_keys)\n    \n\nplot_top_actors(top_actors_India)\nplt.title(\"Top Indian actors\")\n\n#plot_top_actors(top_actors_USA)","d81bac00":"plot_top_actors(top_actors_USA)\nplt.title(\"Top American actors\")","277903b7":"plot_top_actors(top_actors_UK)\nplt.title(\"Top English actors\")","47d82bff":"plot_top_actors(top_actors_Canada)\nplt.title(\"Top Canadian actors\")","cbcdd4ce":"plot_top_actors(top_actors_France)\nplt.title(\"Top French actors\")","35fed314":"directors_country=netflix_shows[['director','country']]\ndirectors_country=directors_country.dropna(axis=0,how='any')\n\ntop_director_USA=[]\ntop_director_INDIA=[]\ntop_director_UK=[]\ntop_director_CANADA=[]\ntop_director_FRANCE=[]\n\nfor i in range(directors_country.shape[0]):\n    country = list(directors_country['country'].iloc[i].replace(\" \", \"\").split(\",\"))\n    directors= list(directors_country['director'].iloc[i].split(\",\"))\n    for j in range(len(directors)):\n        for k in range(len(country)):\n            directors[j]=directors[j].strip()\n            if country[k]=='UnitedStates':\n                top_director_USA.append(directors[j])\n            if country[k]=='India':\n                top_director_INDIA.append(directors[j])\n            if country[k]=='UnitedKingdom':\n                top_director_UK.append(directors[j])\n            if country[k]=='Canada':\n                top_director_CANADA.append(directors[j])\n            if country[k]=='France':\n                top_director_FRANCE.append(directors[j])\n","f53146ed":"def plot_top_directors(top_directors):\n    top_directors=Counter(top_directors)\n    top_directors=top_directors.most_common()\n    \n    keys=[top_directors[i][0] for i in range(len(top_directors))]\n    values=[top_directors[i][1] for i in range(len(top_directors))]\n\n    top_20_keys=keys[:20]\n    top_20_values=values[:20]\n    \n    plt.style.use('classic')\n    plt.figure(figsize=(10,6))\n    sns.barplot(top_20_values,top_20_keys)\n    \n\nplot_top_actors(top_director_INDIA)\nplt.title(\"Top Indian directors\")\n","a23d930b":"plot_top_actors(top_director_USA)\nplt.title(\"Top American directors\")","489cbaff":"plot_top_actors(top_director_UK)\nplt.title(\"Top English directors\")","f3afc812":"plot_top_actors(top_director_CANADA)\nplt.title(\"Top Canadian directors\")","636c98d6":"plot_top_actors(top_director_FRANCE)\nplt.title(\"Top French directors\")","6f5858d0":"TV-MA(Matured Audiences),TV-14(for people above 14 years) are the most rated tv shows,which indicates there are a lot of matured contents,i.e majority of them are for people above 18 years of age.","717a6f7f":"I don't know why the plot showing(10,15) before 2.      :<","34edfd6b":"That's all.As a beginner in EDA,i tried to do my best.If you like it,upvote this.Also let me know how I can improve the analysis and visualization better.","85e96d1a":"Lets do something on top actors in the top 5 countries with most content.","681eb9ef":"Since very low number of values were missing,we just used ffill to fillup the missing values.","bfb271de":"Quite big dataset,good for having valuable insights and also for training models.","f464657e":"So,that's all for the actors.That was one hell of an analysis.Let us move on to the directors.","f5ecfc2f":"However,there are many TV-shows with 1 season.","f8d24d85":"Lets do some exploration on distribution of netflix contents across different countries.","bd1f797e":"USA tops the chart with most content,followed by India and UK.Is this because Netflix is an American Multinational Company with majority of their users based on USA?....Probably,Yes.","304e1253":"There is an overall balanced addition of tv-shows and movies,with 2019 the year being when most number of shows are added."}}