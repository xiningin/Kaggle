{"cell_type":{"29ec2ea5":"code","2e7b74ea":"code","0b4bdc1a":"code","a3054a96":"code","9bbaad4b":"code","cb5cfc70":"code","ccdf5249":"code","e3834852":"code","08e47e2d":"code","2cbb7569":"code","d8a6c0e0":"code","c883637b":"code","2d47e6f4":"code","9eddbc0d":"code","805274bf":"code","a19b971e":"code","7ff8a309":"code","ba0f87cf":"markdown","9d7fc7d1":"markdown","d6e6d025":"markdown","586b6b13":"markdown","c4726aa0":"markdown","765465f5":"markdown","fed0ba5e":"markdown"},"source":{"29ec2ea5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2e7b74ea":"df = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndf.head()","0b4bdc1a":"df.isnull().sum()","a3054a96":"df['OutcomeCat'] = np.where(df.Outcome == 1,\"Diabetic\",\"Not Diabetic\")\nsns.pairplot(df,hue='OutcomeCat')","9bbaad4b":"from sklearn.model_selection import train_test_split","cb5cfc70":"X_train, X_test, y_train, y_test = train_test_split(df.drop(['Outcome','OutcomeCat'],axis=1),df.Outcome,test_size  = 0.2, random_state=0)","ccdf5249":"import torch\nimport torch.nn as nn\nimport torch.nn.functional as F","e3834852":"X_train = torch.FloatTensor(X_train.values)\nX_test = torch.FloatTensor(X_test.values)\ny_train = torch.LongTensor(y_train.values)\ny_test = torch.LongTensor(y_test.values)","08e47e2d":"class Model(nn.Module):\n    def __init__(self,input_features = 8, hidden1 = 32, hidden2 = 32, hidden3 = 64,out_features=2):\n        super().__init__()\n        self.f_connected1 = nn.Linear(input_features,hidden1)\n        self.f_connected2 = nn.Linear(hidden1,hidden2)\n        self.f_connected3 = nn.Linear(hidden2,hidden3)\n        self.out = nn.Linear(hidden3,out_features)\n    \n    def forward(self,x):\n        x = F.relu(self.f_connected1(x))\n        x = F.relu(self.f_connected2(x))\n        x = F.relu(self.f_connected3(x))\n        x = self.out(x)\n        return x","2cbb7569":"torch.manual_seed(20)\nmodel = Model()","d8a6c0e0":"model.parameters","c883637b":"loss_function = nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.parameters(), lr= 0.01)","2d47e6f4":"epochs = 500\nfinal_losses = []\nfor i in range(epochs):\n    i += 1\n    y_pred = model.forward(X_train)\n    loss = loss_function(y_pred,y_train)\n    final_losses.append(loss)\n    if i%10 == 0:\n        print(f\"Epoch {i} : {loss.item()}\")\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()","9eddbc0d":"plt.plot(range(epochs),final_losses)\nplt.ylabel('Loss')\nplt.xlabel('Epoch')","805274bf":"predictions = []\nwith torch.no_grad():\n    for i,data in enumerate(X_test):\n        y_pred = model(data)\n        predictions.append(y_pred.argmax().item())","a19b971e":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,predictions)\ncm","7ff8a309":"sns.heatmap(cm,annot=True)\nplt.xlabel('Actual')\nplt.ylabel('Predicted')","ba0f87cf":"# Pima Indians Diabetes Database\n<br>\n<img src= \"https:\/\/res.cloudinary.com\/grohealth\/image\/upload\/c_fill,f_auto,fl_lossy,h_650,q_auto,w_1085\/v1581695681\/DCUK\/Content\/causes-of-diabetes.png\" width=400>\n<br>\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.","9d7fc7d1":"## Model Architecture","d6e6d025":"# Torch Begins","586b6b13":"## Loss Function and Optimizer","c4726aa0":"# Predictions","765465f5":"# Splitting into Train-Test data","fed0ba5e":"## Training"}}