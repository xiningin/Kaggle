{"cell_type":{"fcc4df92":"code","8dc5d805":"code","ec8873ba":"code","bde1779b":"code","62143798":"code","45cc9a46":"code","fbfcd27d":"code","89133b7e":"code","294e641c":"code","3a907ca5":"code","e76b20da":"code","e28a32b8":"code","a9ae0539":"code","00dacf49":"code","5bbb94de":"code","2811d63c":"code","7533fa72":"code","2acf9cdf":"code","d2cd57cc":"code","13290f00":"code","1d0267b4":"code","07fa7c66":"code","f6c743ad":"code","638a8348":"code","d8ba6783":"code","137b1415":"code","56002ff0":"markdown","aedacb95":"markdown","18d9cdc5":"markdown","0a3739f9":"markdown","685ae5cc":"markdown","8ed9463e":"markdown","bb7051ad":"markdown","4f29a47f":"markdown","e0dbea66":"markdown","bd1a214a":"markdown","b9bf7cb6":"markdown","ddb814a0":"markdown","002cfde0":"markdown","1d0c3fab":"markdown","8de0e136":"markdown","53b712d2":"markdown","80e56046":"markdown","a3a80f2e":"markdown","eaa465b9":"markdown","5ddd247e":"markdown","b0b0a445":"markdown","6d9a8bdf":"markdown"},"source":{"fcc4df92":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\nsns.set(style=\"darkgrid\")","8dc5d805":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ec8873ba":"df_zoo = pd.read_csv(\"..\/input\/zoo-animal-classification\/zoo.csv\")\ndf_zoo.head()","bde1779b":"df_zoo.shape","62143798":"df_class = pd.read_csv(\"..\/input\/zoo-animal-classification\/class.csv\")\ndf_class","45cc9a46":"df_class.shape","fbfcd27d":"len(df_zoo[df_zoo['class_type'] == 1].index)","89133b7e":"list(df_zoo[df_zoo['class_type'] == 1]['animal_name'])","294e641c":"df_zoo2 = pd.read_csv(\"..\/input\/zoo-animals-extended-dataset\/zoo2.csv\")\ndf_zoo3 = pd.read_csv(\"..\/input\/zoo-animals-extended-dataset\/zoo3.csv\")","3a907ca5":"df_zoo2.shape","e76b20da":"df_zoo3.shape","e28a32b8":"df_zoo['id_zoo'] = 'zoo1'\ndf_zoo2['id_zoo'] = 'zoo2'\ndf_zoo3['id_zoo'] = 'zoo3'","a9ae0539":"zoo_complet = pd.concat([df_zoo, df_zoo2, df_zoo3], axis=0)","00dacf49":"zoo_complet.dtypes","5bbb94de":"for col in ['hair', 'feathers', 'eggs', 'milk', 'airborne', 'aquatic', 'predator', 'toothed', 'backbone', 'breathes', 'venomous', 'fins', 'tail', 'domestic', 'catsize']:\n    zoo_complet[col] = zoo_complet[col].astype('bool')\n    \nzoo_complet['legs'] = zoo_complet['legs'].astype('category')","2811d63c":"zoo_complet.dtypes","7533fa72":"print (\"Nombre d'animaux dans zoo.csv : %d\" % df_zoo.shape[0])\nprint (\"Nombre d'animaux dans zoo2.csv : %d\" % df_zoo2.shape[0])\nprint (\"Nombre d'animaux dans zoo3.csv : %d\" % df_zoo3.shape[0])\nprint (\"Nombre d'animaux dans la fusion : %d\" % zoo_complet.shape[0])","2acf9cdf":"ax = sns.countplot(x=\"class_type\", data=zoo_complet) ","d2cd57cc":"ax = sns.countplot(x=\"class_type\", hue=\"id_zoo\", data=zoo_complet)         ","13290f00":"descriptors_columns = ['hair', 'feathers', 'eggs', 'milk', 'airborne', 'aquatic', 'predator', 'toothed', 'backbone', 'breathes', 'venomous', 'fins', 'tail', 'legs', 'domestic', 'catsize']\n\nzoo_complet.groupby(descriptors_columns).filter(lambda g: (g['class_type'].nunique() > 1)).sort_values(by=descriptors_columns)","1d0267b4":"classes = [\"Mammif\u00e8re\", \"Oiseau\", \"Reptile\", \"Poisson\", \"Amphibia\", \"Insecte\", \"Invert\u00e9br\u00e9\"]","07fa7c66":"zoo_complet['class_type'].value_counts().sort_index()","f6c743ad":"ax = sns.countplot(x=\"class_type\", data=zoo_complet)\nax.set_xticklabels(classes, rotation=45)\nplt.show()","638a8348":"ax = sns.countplot(x=\"id_zoo\", hue=\"class_type\", data=zoo_complet)\nax.set_xticklabels([\"Zoo #1\", \"Zoo #2\", \"Zoo #3\"], rotation=45)\nplt.legend(title='L\u00e9gende', ncol=2, labels=classes)\nplt.show()","d8ba6783":"ax = sns.countplot(x=\"class_type\", hue=\"id_zoo\", data=zoo_complet)\nax.set_xticklabels(classes, rotation=45)\nplt.legend(title='L\u00e9gende', labels=[\"Zoo #1\", \"Zoo #2\", \"Zoo #3\"])\nplt.show()","137b1415":"plt.subplots_adjust(left=0,\n                    bottom=0,\n                    right=2,\n                    top=2,\n                    wspace=0.35, \n                    hspace=0.35)\n    \n    \ncpt = 0\nfor col in descriptors_columns:\n    cpt += 1\n    fig = plt.subplot(4,4,cpt)\n    ax = sns.countplot(x=col, hue=\"class_type\", data=zoo_complet)\n    plt.legend(title='L\u00e9gende', ncol=2, labels=classes)\nplt.show()\n\n","56002ff0":"---\n\n* __zoo2.csv__ et __zoo3.csv__ poss\u00e8de la m\u00eame structure et les m\u00eames buts que __zoo.csv__, mais contiennent d'autres animaux.","aedacb95":"Les septs classes sont ainsi :\n1. _Mammal_ (Mammif\u00e8re)\n1. _Bird_ (Oiseau)\n1. _Reptile_ (Reptile)\n1. _Fish_ (Poisson)\n1. _Amphibian_ (Amphibia)\n1. _Bug_ (Insecte)\n1. _Invertebrate_ (Invert\u00e9br\u00e9)\n\n---\n\nLes colonnes *Number_Of_Animal_Species_In_Class* et *Animal_Names* sont obsol\u00e8tes car facilement trouvables gr\u00e2ce au premier fichier et doivent \u00eatre mises \u00e0 jour pour \u00eatre utilis\u00e9es.\n\nPar exemple pour la classe **1**, soit les mammif\u00e8res.\n\nNombre de mammif\u00e8res :","18d9cdc5":"Il est int\u00e9ressant de regarder ce que cela donne au niveau de la r\u00e9partition des sept classes dans les trois ensembles de donn\u00e9es.\nIl est possible de repr\u00e9senter cette r\u00e9partition de deux fa\u00e7ons selon si l'on souhaite mettre l'accent sur la r\u00e9partition entre les trois jeux de donn\u00e9es ou entre les familles d'esp\u00e8ces.","0a3739f9":"## 1.1 Liste des fichiers en entr\u00e9es:","685ae5cc":"Liste des mammif\u00e8res :","8ed9463e":"On peut maintenant fusionner les trois Dataframe.","bb7051ad":"## 2.3 Grouping By and Aggregation","4f29a47f":"# 1. Chargement et pr\u00e9sentation des jeux de donn\u00e9es","e0dbea66":"R\u00e9partition des sept classes dans l'ensemble des donn\u00e9es :","bd1a214a":"Une question importante \u00e0 se poser avant de commencer l'analyse est : \"Toutes nos entr\u00e9es ont-elles un ensemble de descripteurs distincts ?\"\n\nSi plusieurs entr\u00e9es ont la m\u00eame combinaison de valeurs, cela peut avoir deux cons\u00e9quences :\n\n1. Si ces entr\u00e9es ont la m\u00eame valeur de variable cible (ici la colonne *class_type*), alors cette combinaison de descripteurs prendra plus de poids dans notre apprentissage;\n2. Si \u00e0 l'inverse ces entr\u00e9es ont des valeurs de variable cible diff\u00e9rentes, alors cela veut dire qu'il ne sera pas possible d'atteindre un score de 100%. En effet, pour une m\u00eame entr\u00e9e nous allons demander au syst\u00e8me de classification de prendre des d\u00e9cisions diff\u00e9rentes.\n","b9bf7cb6":"A ce stade, tous les descripteurs sont d\u00e9finis comme des entiers (_int64_). Il est plus coh\u00e9rent pour l'analyse d'utiliser les types _category_ et _bool_.","ddb814a0":"Nous remarquons qu'il existe 11 entr\u00e9es partageant leur combinaison de valeurs avec au moins une autre entr\u00e9e.\n\nPlus pr\u00e9cisement, trois combinaisons sont trouv\u00e9es avec \u00e0 chaque fois deux valeurs diff\u00e9rentes pour **class_type**:\n1. Celle partag\u00e9e par _flea_, _termite_, _cricket_, _beetle_, _cockroach_ et _aphid_ (o\u00f9 **class_type** vaut 6, soit des **insectes**) et _bicho-pau_ (o\u00f9 **class_type** vaut 7, soit un **invert\u00e9br\u00e9**);\n2. Celle partag\u00e9e par _trajaca_ (**class_type**=3; **Reptile**) et _sapo-barriga-de-fogo_ (**class_type**=5; **Amphibien**);\n2. Celle partag\u00e9e par _newt_ (**class_type**=5; **Amphibien**) et _jacare-coroa_ (**class_type**=3; **Reptile**).","002cfde0":"Chaque animal est d\u00e9finie par un nom (*animal_name*), 16 caract\u00e9ristiques et une classe.\n\nLes 16 caract\u00e9ristiques sont :\n\n1. *hair* : {Boolean} l'animal a des poils;\n1. *feathers* :  {Boolean} si l'animal a des plumes;\n1. *eggs* :  {Boolean} l'animal pond des \u0153ufs;\n1. *milk* :  {Boolean} l'animal produit du lait;\n1. *airborne* :  {Boolean} l'animal vole;\n1. *aquatic* :  {Boolean} l'animal est aquatique;\n1. *predator* :  {Boolean} l'animal est un pr\u00e9dateur;\n1. *toothed* :  {Boolean} l'animal a des dents;\n1. *backbone* :  {Boolean} l'animal a une colonne vert\u00e9brale;\n1. *breathes* :  {Boolean} l'animal respire de l'air;\n1. *venomous* :  {Boolean} l'animal est venimeux;\n1. *fins* :  {Boolean} l'animal a des nageoires;\n1. *legs* :  {Boolean} nombre de jambes, qui peut \u00eatre: {0,2,4,5,6,8};\n1. *tail* :  {Boolean} l'animal a une queue;\n1. *domestic* :  {Boolean} l'animal est domestique;\n1. *catsize* :  {Boolean} TBD;\n\nEnfin la colonne *class_type* est un entier entre 1 et 7 correspondant \u00e0 une entr\u00e9e du fichier __class.csv__ (voir ci-dessous).\n\n---\n\n* __class.csv__ contient la descriptions des sept classes regroupant les animaux","1d0c3fab":"## 2.1 Ajustement des types","8de0e136":"Distribution des valeurs dans chaque colonne :","53b712d2":"## 2.2 Quelques statistiques de pr\u00e9sentation","80e56046":"## 1.2 Chargement des jeux de donn\u00e9es","a3a80f2e":"## 1.3 Cr\u00e9ation du Dataframe avec tous les animaux\n\nAvant de fusionner les jeux de donn\u00e9es, on ajoute une nouvelle colonne avec le jeu de donn\u00e9es de provenance de chaque animal pour garder une trace de cette information.","eaa465b9":"# 2. Exploration des donn\u00e9es","5ddd247e":"## 2.4 Visualizing Data","b0b0a445":"* __zoo.csv__ contient les premi\u00e8res donn\u00e9es sur les animaux.","6d9a8bdf":"Suite \u00e0 cette fusion, on peut recalculer les colonnes *class_type* et *animal_name* du fichier **class.csv**"}}