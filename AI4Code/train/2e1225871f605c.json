{"cell_type":{"b158ca1e":"code","a70952b9":"code","62dbb598":"code","8bb1cb86":"code","b1a0c0c0":"code","56bbf459":"code","fb57e188":"code","8914dedf":"code","ea4e3b17":"code","123bfc5c":"code","76fc389c":"code","e4b92ed8":"code","0701d1b8":"code","5dc56cad":"code","f5e3d34a":"markdown","d9dea3e2":"markdown","0bc6d058":"markdown","22142fba":"markdown","16288252":"markdown","7c1c5d9a":"markdown","4010fdfc":"markdown"},"source":{"b158ca1e":"import pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\n\n%matplotlib inline","a70952b9":"df = pd.read_csv('\/kaggle\/input\/eergy-efficiency-dataset\/ENB2012_data.csv')\ndf.head(5)","62dbb598":"df.describe()","8bb1cb86":"# the dataset is pretty clean\ndf.isnull().sum()","b1a0c0c0":"plt.figure(figsize=(10,6))\nplt.hist(sorted(df['Y2']), bins=50)\nplt.hist(sorted(df['Y1']), bins=50)\n\nplt.show()","56bbf459":"pd.set_option('display.float_format', lambda x: '%.3f' % x)\ndf.corr()[['Y1', 'Y2']]","fb57e188":"X = df.drop(['X6', 'X8', 'Y1', 'Y2'], axis=1)\ny = df[['Y1', 'Y2']]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=101)\n\nX_train = tf.convert_to_tensor(X_train.to_numpy())\ny_train = tf.convert_to_tensor(y_train.to_numpy())\nX_test = tf.convert_to_tensor(X_test.to_numpy())\ny_test = tf.convert_to_tensor(y_test.to_numpy())","8914dedf":"NUM_INPUTS = X.shape[1]","ea4e3b17":"inputs = tf.keras.layers.Input(shape=(6,))\n\nx = tf.keras.layers.Dense(32, activation='relu')(inputs)\nx = tf.keras.layers.Dense(32, activation='relu')(x)\n\nx1 = tf.keras.layers.Dense(8, activation='relu')(x)\noutput_1 = tf.keras.layers.Dense(1, name='output_heating')(x1)\n\nx2 = tf.keras.layers.Dense(8, activation='relu')(x)\noutput_2 = tf.keras.layers.Dense(1, name='output_cooling')(x2)\n\nmodel = tf.keras.Model(inputs=inputs, outputs=[output_1, output_2], name=\"two-outputs-model\")","123bfc5c":"model.summary()","76fc389c":"model.compile(\n    optimizer='adam', \n    loss={'output_heating': 'mse', 'output_cooling': 'mse'}, \n    metrics={\n        'output_heating': tf.keras.metrics.RootMeanSquaredError(),\n        'output_cooling': tf.keras.metrics.RootMeanSquaredError()\n    })","e4b92ed8":"model_history = model.fit(X_train, y_train, \n          batch_size=16, epochs=50, \n          validation_split=0.1, verbose=0,\n          callbacks=tf.keras.callbacks.EarlyStopping(patience=3))","0701d1b8":"model.evaluate(X_test, y_test, batch_size=16)","5dc56cad":"plt.figure(figsize=(18, 6))\n\nplt.subplot(1, 2, 1)\nplt.plot(model_history.history['output_heating_loss'], label='train')\nplt.plot(model_history.history['val_output_heating_loss'], label='val')\nplt.title('Heating Loss')\nplt.legend()\n\nplt.subplot(1, 2, 2)\nplt.plot(model_history.history['output_cooling_loss'], label='train')\nplt.plot(model_history.history['val_output_cooling_loss'], label='val')\nplt.title('Cooling Loss')\nplt.legend()\n\nplt.show()","f5e3d34a":"From this, we can see that variables X6 and X8 does not contribute much to the Y1 and Y2 variables. Hence, we will remove them.","d9dea3e2":"# Dataset","0bc6d058":"## Load","22142fba":"# Energy Efficiency Regression with TF 2","16288252":"# Modeling","7c1c5d9a":"Objective of this kernel is to try using functional API of Tensorflow to create a model that can product two outputs at the same time, as opposed to sequential API that restricts to only a single output.","4010fdfc":"## Analysis"}}