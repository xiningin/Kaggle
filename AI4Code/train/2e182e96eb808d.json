{"cell_type":{"ba69787f":"code","99036eaa":"code","5a1a3867":"code","4c152a76":"code","73da81a0":"code","2446a3cb":"code","a3d24edf":"code","e4f64dca":"code","09dee024":"code","9c5e70a6":"code","98e88a72":"code","389d651e":"code","9ff17841":"code","ba6f6101":"code","4289140f":"code","5db46b58":"code","145688c7":"code","17943f73":"code","7dbfc1b2":"code","f33f2dfb":"code","1296d7f8":"code","c11301ad":"code","638741b7":"code","7db1cfe1":"code","9b7d0819":"code","bb27caa2":"code","f4a60147":"code","cb395159":"code","aba81083":"markdown","f9407026":"markdown","4923eafb":"markdown","ec3bd18b":"markdown","c681d252":"markdown","c769b069":"markdown","0044c460":"markdown","c121d4be":"markdown","422cc1da":"markdown","5d12920e":"markdown","aa3eb5ae":"markdown","657d468d":"markdown","bd25656f":"markdown","628d46f2":"markdown","8e191216":"markdown","9c95acf2":"markdown","4d492e6c":"markdown","82a9e9d2":"markdown","b2c1b798":"markdown","4a320d32":"markdown"},"source":{"ba69787f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go","99036eaa":"data = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","5a1a3867":"data.head()","4c152a76":"data.shape","73da81a0":"data.info()","2446a3cb":"data.isnull().sum()","a3d24edf":"from sklearn.preprocessing import LabelEncoder","e4f64dca":"label = LabelEncoder()\ndata[\"Gender\"] = label.fit_transform(data[\"Gender\"])","09dee024":"data.head()","9c5e70a6":"data.hist(figsize=(16, 8))\nplt.show()","98e88a72":"sns.heatmap(data.corr(), annot=True)\nplt.show()","389d651e":"sns.violinplot(data['Age'], data['Gender'])\nsns.despine()","9ff17841":"fig = plt.figure()\nax = fig.add_subplot(1,1,1)\nax.scatter(data['Age'],data['Annual Income (k$)'], s=data['Spending Score (1-100)']) \nplt.show()","ba6f6101":"var=data.groupby(['Gender']).sum().stack()\ntemp=var.unstack()\ntype(temp)\nx_list = temp['Annual Income (k$)']\nlabel_list = temp.index\nplt.axis(\"equal\")\nplt.pie(x_list,labels=label_list,autopct=\"%1.1f%%\") \nplt.title(\"Pastafarianism expenses\") \nplt.show()","4289140f":"fig = px.scatter(data, x=\"Age\", y=\"Annual Income (k$)\", \n                 color=\"Age\",\n                 size='Age', \n                 hover_data=[ 'Spending Score (1-100)'], \n                 title = \"Age wise Annual Income\")\nfig.show()","5db46b58":"fig2 = go.Figure(data=go.Scatter(x=data['Age'],\n                                y=data['Annual Income (k$)'],\n                                mode='markers',\n                                marker_color=data['Age'],\n                                text=data['Spending Score (1-100)'])) # hover text goes here\n\nfig2.update_layout(title='Age wise Annual Income')\nfig2.show()","145688c7":"X = data.iloc[:, 0:4]\ny = data.iloc[:, 4]","17943f73":"from sklearn.ensemble import ExtraTreesClassifier","7dbfc1b2":"clf = ExtraTreesClassifier(n_estimators = 5, \n                                        criterion ='entropy', max_features = 2)\nclf.fit(X, y)","f33f2dfb":"feature_importance = clf.feature_importances_ \nfeature_importance_normalized = np.std([tree.feature_importances_ for tree in \n                                        clf.estimators_], \n                                        axis = 0) ","1296d7f8":"plt.bar(X.columns, feature_importance_normalized) \nplt.xlabel('Feature Labels') \nplt.ylabel('Feature Importances') \nplt.title('Comparison of different Feature Importances') \nplt.show()","c11301ad":"X_new = data.iloc[:, [2]].values\ny_new = data.iloc[:, 4].values","638741b7":"from sklearn.tree import DecisionTreeRegressor","7db1cfe1":"reg = DecisionTreeRegressor(random_state = 0)\nreg.fit(X_new, y_new)","9b7d0819":"y_pred = reg.predict(X_new)","bb27caa2":"y_pred","f4a60147":"y_test = reg.predict([[28]])","cb395159":"y_test","aba81083":"Test on this model by giving the age of customer and model predict it's spending score.","f9407026":"Have a look at dataset before preprocessing.","4923eafb":"Now Let's start visualization of the dataset.","ec3bd18b":"**Importing Libraries**","c681d252":"**Scatter visulizations with upgrade form**","c769b069":"I used basic libraries\n* Numpy \n* Pandas\n* Plotly\n* Seaborn\n* Sklearn","0044c460":"Here we see we have done the preprocessing part.","c121d4be":"**Pie Visualizations**","422cc1da":"# Mall Customer Data : Analysis and Visualization","5d12920e":"**Our Predictions**","aa3eb5ae":"In this notebook, I visualize the best feature of the dataset i.e have great importance in prediction of Spending Score. First I analyze the data an then find which feature has more importance. ","657d468d":" Let's have a look at data after preprocessing.","bd25656f":"**Violin Plotting**","628d46f2":"As we can see in the graph Age has maximum importance among all the columns in the dataset. So Let's start making model by this column only.","8e191216":"**Scatter Plotting**","9c95acf2":"Okay, If you like this notebook please give a upvote your upvote is my encouragement.","4d492e6c":"**HeatMap Visualization**","82a9e9d2":"Till then **Enjoy Machine Learning**","b2c1b798":"We see that there is no null values in the dataset. but there is a column name \"Gender\" which has categorical data so we have to do some preprocessing here. Let's start","4a320d32":"Finding which feature has great importances"}}