{"cell_type":{"1d2455e8":"code","dae78b50":"code","064cf5ae":"code","9db634bd":"code","14a2b037":"code","1ac5519a":"code","e72dda34":"code","847260e9":"code","85db5202":"code","5e4fd54b":"code","374acd70":"code","bec17578":"markdown","e06875c5":"markdown"},"source":{"1d2455e8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","dae78b50":"dataset = pd.read_csv(\"..\/input\/machinelearning\/50_Startups.csv\")\nX = dataset.iloc[ : , :-1].values\nY = dataset.iloc[ : ,  4 ].values","064cf5ae":"dataset","9db634bd":"\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nlabelenc= LabelEncoder()\nX[:,3] = labelenc.fit_transform(X[:, 3])\n\nct = ColumnTransformer([(\"State\", OneHotEncoder(), [3])], remainder = 'passthrough')\nX = ct.fit_transform(X)","14a2b037":"\nlabel_Y=LabelEncoder()\ny=label_Y.fit_transform(Y)","1ac5519a":"# avoid dummy variable\n\nX= X[: , 1:]","e72dda34":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test=train_test_split(X,Y, test_size=0.2, random_state=0)\n","847260e9":"#fitting multiple linear regression to training set\n\nfrom sklearn.linear_model import LinearRegression\nregressor= LinearRegression()\nregressor.fit(X_train, Y_train)","85db5202":"#Predicting the test results\n\ny_pred=regressor.predict(X_test)","5e4fd54b":"import matplotlib.pyplot as plt \nplt.plot(y_pred)","374acd70":"#---------------------DONE-----------------------------------#","bec17578":"\n# **Multiple Linear Regression**","e06875c5":"Encoding Categorical data"}}