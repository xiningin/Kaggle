{"cell_type":{"f1a52c15":"code","a76103bf":"code","a06c7d37":"code","c1a533f1":"code","62442439":"code","da34829b":"code","f9a52c6a":"code","e2bcfe4c":"code","549384e0":"code","8a086f14":"code","f4929c90":"code","f42ac439":"code","ad52d631":"code","f3876ff2":"code","54716d8b":"code","bc2e067d":"code","ed5de294":"code","32fc7d87":"code","0a031375":"code","f0c50f37":"code","3a0ff25a":"code","8acbd516":"code","a4bb8382":"code","48002deb":"code","b578a948":"code","f04a85cf":"code","961d2b08":"code","dad9c804":"code","c9ab14e1":"code","21ad6104":"code","7daaafd4":"code","db14ecb6":"code","84547b06":"code","8d25e306":"code","cd03923b":"code","5a493475":"code","ba8c64b3":"code","c42b0892":"markdown"},"source":{"f1a52c15":"# File Processing\nimport pandas as pd\n\n# Visualization\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","a76103bf":"# Read the file into a variable fifa_data\nfifa_filepath = \"..\/input\/data-for-datavis\/fifa.csv\"\n\n# (1) The filepath for the dataset is provided in fifa_filepath. \n# (2) Use the \"Date\" column to label the rows. \n# (3) Make sure that the row labels are recognized as dates.\nfifa_data = pd.read_csv(fifa_filepath, index_col = \"Date\", parse_dates = True)\n\nfifa_data.head()","a06c7d37":"# Set the width and height of the figure\nplt.figure(figsize = (16, 6))\n\n# Line chart showing how FIFA rankings evolved over time\nsns.lineplot(data = fifa_data)\n\n# Considering only the years represented in the dataset, which countries spent at least 5 consecutive years in the #1 ranked spot?\n# Solution: The only country that meets this criterion is Brazil (code: BRA), \n# as it maintains the highest ranking in 1996-2000. Other countries do spend some time in the number 1 spot, \n# but Brazil is the only country that maintains it for at least five consecutive years.","c1a533f1":"spotify_filepath = \"..\/input\/data-for-datavis\/spotify.csv\"\nspotify_data = pd.read_csv(spotify_filepath, index_col = \"Date\", parse_dates = True)\n\nspotify_data.head()","62442439":"# Print the last five rows of the data\nspotify_data.tail()","da34829b":"# Line chart showing daily global streams of each song\nsns.lineplot(data = spotify_data)","f9a52c6a":"# Change the style of the figure\n# https:\/\/seaborn.pydata.org\/generated\/seaborn.set_style.html\nsns.set_style(\"darkgrid\")\n\n# Set the width and height of the figure\nplt.figure(figsize = (16, 6))\n\n# Add title\nplt.title(\"Daily Global Streams of Popular Songs in 2017 - 2018\")\n\n# Line chart showing daily global streams of each song\nsns.lineplot(data = spotify_data)","e2bcfe4c":"list(spotify_data.columns)","549384e0":"# Set the width and height of the figure\nplt.figure(figsize = (14, 6))\n\n# Add title\nplt.title(\"Daily Global Streams of Popular Songs in 2017 - 2018\")\n\n# Line chart showing daily global streams of \"Shape of You\"\nsns.lineplot(data = spotify_data[\"Shape of You\"], label = \"Shape of You\")\n\n# Line chart showing daily global streams of \"Despacito\"\nsns.lineplot(data = spotify_data[\"Despacito\"], label = \"Despacito\")\n\n# Add label for horizontal axis\nplt.xlabel(\"Date\")","8a086f14":"# Path of the file to read\nmuseum_filepath = \"..\/input\/data-for-datavis\/museum_visitors.csv\"\n\n# Fill in the line below to read the file into a variable museum_data\nmuseum_data = pd.read_csv(museum_filepath, index_col = \"Date\", parse_dates = True)","f4929c90":"# Print the last give rows of the data\nprint(museum_data.tail())","f42ac439":"# Line chart showing the number of visitors to each museum over time\nsns.lineplot(data = museum_data)","ad52d631":"# Set the width and height of the figure\nplt.figure(figsize = (12, 6))\n\n# Line plot showing the number of visitors to Avila Adobe over time\nsns.lineplot(data = museum_data[\"Avila Adobe\"])","f3876ff2":"# Path of the file to read\nflight_filepath = \"..\/input\/data-for-datavis\/flight_delays.csv\"\n\n# Read the file into a variable flight_data\nflight_data = pd.read_csv(flight_filepath, index_col = \"Month\")","54716d8b":"flight_data","bc2e067d":"# Set the width and height of the figure\nplt.figure(figsize = (10, 6))\n\n# Add title\nplt.title(\"Average Arrival Delay for Spirit Airlines Flights, by Month\")\n\n# Bar chart showing average delay for Spirit Airlines Flight by month\nsns.barplot(x = flight_data.index, y = flight_data[\"NK\"])\n\n# Add label for vertical axis\nplt.ylabel(\"Arrival delay (in minutes)\")","ed5de294":"# Set the width and height of the figure\nplt.figure(figsize = (14, 7))\n\n# Add title\nplt.title(\"Average Arrival Delay for Each Airline, by Month\")\n\n# Heatmap showing average delay for Spirit Airlines Flight by month\nsns.heatmap(data = flight_data, annot=True)\n\n# Add label for horizontal axis\nplt.xlabel(\"Airline\")","32fc7d87":"# Path of the file to read\nign_filepath = \"..\/input\/data-for-datavis\/ign_scores.csv\"\n\n# Fill in the line below to read the file into a variable ign_data\nign_data = pd.read_csv(ign_filepath, index_col = \"Platform\")","0a031375":"# Print the data\nign_data","f0c50f37":"ign_data.describe()","3a0ff25a":"# Set the width and height of the figure\nplt.figure(figsize = (8, 6))\n\n# Add title\nplt.title(\"Average Score for Racing Games, by Platform\")\n\n# Bar chart showing average delay for Spirit Airlines Flight by month\nsns.barplot(x = ign_data[\"Racing\"], y = ign_data.index)\n\n# Add label for horizontal axis\nplt.xlabel(\"Rating\")","8acbd516":"# Set the width and height of the figure\nplt.figure(figsize = (10, 10))\n\n# Add title\nplt.title(\"Average Game Score, by Platform and Genre\")\n\n# Bar chart showing average delay for Spirit Airlines Flight by month\nsns.heatmap(data = ign_data, annot = True)\n\n# Add label for horizontal axis\nplt.xlabel(\"Genre\")","a4bb8382":"# Path of the file to read\ninsurance_filepath = \"..\/input\/data-for-datavis\/insurance.csv\"\n\n# Read the file into a variable insurance_data\ninsurance_data = pd.read_csv(insurance_filepath)","48002deb":"# Read the first 5 rows\ninsurance_data.head()","b578a948":"# Generate count plot based on sex\nsns.countplot(x = insurance_data[\"smoker\"])","f04a85cf":"# Generate scatter plot based on bmi and charges\nsns.scatterplot(x = insurance_data[\"bmi\"], y = insurance_data[\"charges\"])","961d2b08":"# Generate regression plot\nsns.regplot(x = insurance_data[\"bmi\"], y = insurance_data[\"charges\"])","dad9c804":"# Generate scatter plot with hue\nsns.scatterplot(x = insurance_data[\"bmi\"], y = insurance_data[\"charges\"], hue = insurance_data[\"smoker\"])","c9ab14e1":"# Generate regression plot with hue\nsns.lmplot(x = \"bmi\", y = \"charges\", hue = \"smoker\", data = insurance_data)","21ad6104":"# Generate swarm plot\nsns.swarmplot(x = insurance_data[\"smoker\"], y = insurance_data[\"charges\"])","7daaafd4":"# Path of the file to read\niris_filepath = \"..\/input\/data-for-datavis\/iris.csv\"\n\n# Read the file into a variable iris_data\niris_data = pd.read_csv(iris_filepath, index_col = \"Id\")\n\n# Print the first 5 rows of the data\niris_data.head()","db14ecb6":"# Generate histogram\nsns.distplot(a = iris_data[\"Petal Length (cm)\"], kde = False)","84547b06":"# KDE Plot\nsns.kdeplot(data = iris_data[\"Petal Length (cm)\"], shade = True)","8d25e306":"# 2D KDE Plot\nsns.jointplot(x = iris_data[\"Petal Length (cm)\"], y = iris_data[\"Sepal Width (cm)\"], kind = \"kde\")","cd03923b":"# Paths of the files to read\niris_set_filepath = \"..\/input\/data-for-datavis\/iris_setosa.csv\"\niris_ver_filepath = \"..\/input\/data-for-datavis\/iris_versicolor.csv\"\niris_vir_filepath = \"..\/input\/data-for-datavis\/iris_virginica.csv\"\n\n# Read the files into variables\niris_set_data = pd.read_csv(iris_set_filepath, index_col = \"Id\")\niris_ver_data = pd.read_csv(iris_ver_filepath, index_col = \"Id\")\niris_vir_data = pd.read_csv(iris_vir_filepath, index_col = \"Id\")\n\n# Print the first 5 rows of the Iris versicolor data\niris_ver_data.head()","5a493475":"# Histograms for each species\nsns.distplot(a = iris_set_data[\"Petal Length (cm)\"], label = \"Iris-setosa\", kde = False)\nsns.distplot(a = iris_ver_data[\"Petal Length (cm)\"], label = \"Iris-versicolor\", kde = False)\nsns.distplot(a = iris_vir_data[\"Petal Length (cm)\"], label = \"Iris-virginica\", kde = False)\n\n# Add title\nplt.title(\"Histogram of Petal Lengths, by Species\")\n\n# Force legend to appear\nplt.legend()","ba8c64b3":"# KDE Plots for each species\nsns.kdeplot(data = iris_set_data[\"Petal Length (cm)\"], label = \"Iris-setosa\", shade = True)\nsns.kdeplot(data = iris_ver_data[\"Petal Length (cm)\"], label = \"Iris-versicolor\", shade = True)\nsns.kdeplot(data = iris_vir_data[\"Petal Length (cm)\"], label = \"Iris-virginica\", shade = True)\n\n# Add title\nplt.title(\"Distribution of Petal Lengths, by Species\")","c42b0892":"# Data Visualization Using Seaborn\nThis notebook contains the source code from the materials and assignments on Data Visualization Course on Kaggle."}}