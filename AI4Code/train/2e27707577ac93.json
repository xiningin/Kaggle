{"cell_type":{"83708cf9":"code","91dc3dc6":"code","df140014":"code","7e05b190":"code","ac7c7796":"code","6b3da14b":"code","85ef82b6":"code","520b97bf":"code","5c41ce79":"code","255bbb5a":"code","f73896fb":"code","13bb59dc":"code","5c3c2026":"code","9e419dd2":"code","d804e7f8":"code","18cbd875":"code","6ceab32f":"code","ad9b9222":"code","fa622c68":"code","b43bf078":"code","9c567fbb":"code","3cf8cf0a":"code","880c4b55":"code","327e0d35":"markdown"},"source":{"83708cf9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport time\nfrom datetime import datetime\n# Any results you write to the current directory are saved as output.","91dc3dc6":"covid_train=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/train.csv')\ncovid_train.head()","df140014":"covid_test=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/test.csv')\ncovid_test.head()","7e05b190":"covid_train.shape","ac7c7796":"covid_test.shape","6b3da14b":"covid_train.describe()","85ef82b6":"covid_train.info()","520b97bf":"covid_train['Date']=pd.to_datetime(covid_train['Date'],infer_datetime_format=True)\ncovid_test['Date']=pd.to_datetime(covid_test['Date'],infer_datetime_format=True)","5c41ce79":"covid_train.info()","255bbb5a":"covid_test.info()","f73896fb":"covid_train.hist()","13bb59dc":"covid_test.hist()","5c3c2026":"\ncovid_train.shape","9e419dd2":"corr=covid_train.corr()\nsb.heatmap(corr,vmax=1.,square=True)","d804e7f8":"g=sb.heatmap(covid_train[[\"Id\",\"ConfirmedCases\",\"Fatalities\"]].corr(),annot=True,fmt=\".2f\",cmap=\"coolwarm\")","18cbd875":"covid_x=pd.DataFrame(covid_train.iloc[:,-1])\ncovid_x.head()","6ceab32f":"covid_y=pd.DataFrame(covid_train.iloc[:,-2])\ncovid_y.head()","ad9b9222":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(covid_x,covid_y,test_size=0.3)\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\n","fa622c68":"regression=LinearRegression()\nregression.fit(X_train,Y_train)\n#regression['Date']=regression['Date'].astype(int)\ntree_regressor=DecisionTreeRegressor()\ntree_regressor.fit(X_train,Y_train)\n\ny_pred_lin=regression.predict(X_test)\ny_pred_df=pd.DataFrame(y_pred_lin,columns=['Predict'])\nY_test.head()","b43bf078":"y_pred_df.head()","9c567fbb":"y_pred_tree=tree_regressor.predict(X_test)\ny_tree_pred_df=pd.DataFrame(y_pred_tree,columns=['Predict_tree'])\ny_tree_pred_df.head()","3cf8cf0a":"plt.figure(figsize=(5,5))\nplt.title('Actual vs Prediction')\nplt.xlabel('Fatalities')\nplt.ylabel('Predicted')\nplt.legend()\nplt.scatter((X_test['Fatalities']),(Y_test['ConfirmedCases']),c='red')\nplt.scatter((X_test['Fatalities']),(y_pred_df['Predict']),c='cyan')\nplt.show()\n            ","880c4b55":"sub=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/submission.csv')\nsub.to_csv('submission_csv',index=False)","327e0d35":"Linear Regression and Decision Tree Regressor"}}