{"cell_type":{"e3ba4891":"code","32c26b2f":"code","d35d76d6":"code","0ca062e0":"markdown"},"source":{"e3ba4891":"# Built application files\n*.apk\n*.aar\n*.ap_\n*.aab\n\n# Files for the ART\/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin\/\ngen\/\nout\/\n#  Uncomment the following line in case you need and you don't have the release build type files in your app\n# release\/\n\n# Gradle files\n.gradle\/\nbuild\/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard\/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation\/\n\n# Android Studio captures folder\ncaptures\/\n\n# IntelliJ\n*.iml\n.idea\/workspace.xml\n.idea\/tasks.xml\n.idea\/gradle.xml\n.idea\/assetWizardSettings.xml\n.idea\/dictionaries\n.idea\/libraries\n# Android Studio 3 in .gitignore file.\n.idea\/caches\n.idea\/modules.xml\n# Comment next line if keeping position of elements in Navigation Editor is relevant for you\n.idea\/navEditor.xml\n\n# Keystore files\n# Uncomment the following lines if you do not want to check your keystore files in.\n#*.jks\n#*.keystore\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n.cxx\/\n\n# Google Services (e.g. APIs or Firebase)\n# google-services.json\n\n# Freeline\nfreeline.py\nfreeline\/\nfreeline_project_description.json\n\n# fastlane\nfastlane\/report.xml\nfastlane\/Preview.html\nfastlane\/screenshots\nfastlane\/test_output\nfastlane\/readme.md\n\n# Version control\nvcs.xml\n\n# lint\nlint\/intermediates\/\nlint\/generated\/\nlint\/outputs\/\nlint\/tmp\/\n# lint\/reports\/","32c26b2f":"#!\/bin\/bash ############################################################ # SCRIPT: EXECUTEME.sh # USAGE: bash EXECUTEME.sh | .\/EXECUTEME.sh # PURPOSE: Shell script that prompts the user for their GitHub username, email name of their project and # the type of project that it is. Then it will replace the author's (josee9988) username and email # with the new ones (the user that is using this template). It will fully remove the LICENSE file, # delete all of the content of the README.md file, and add a simple header, # delete all of the content of the CHANGELOG.md and add a basic CHANGELOG versioning and 1st version, # then this script will auto remove itself, to leave the new project without this file (EXECUTEME.sh). # TITLE: EXECUTEME.sh # AUTHOR: Jose Gracia # VERSION: See in CHANGELOG.md # NOTES: This script will auto remove itself, and in case of wanting to run it again, the user must download # it again or do a 'git stash' and revert the changes. # BASH_VERSION: 5.0.17(1)-release # LICENSE: see in ..\/LICENSE (project root) or https:\/\/github.com\/Josee9988\/project-template\/blob\/master\/LICENSE # GITHUB: https:\/\/github.com\/Josee9988\/ # REPOSITORY: https:\/\/github.com\/Josee9988\/project-template # ISSUES: https:\/\/github.com\/Josee9988\/project-template\/issues # MAIL: jgracia9988@gmail.com ############################################################ ACTUAL_DATE=$(date '+%Y-%m-%d') RED='\\033[1;31m' NC='\\033[0m' # No Color UPurple='\\033[4;35m' BBLUE='\\033[1;34m' GREEN='\\033[1;32m' ### Check if the .github directory does exist ### if [ ! -d \".github\/\" ]; then echo -e \"${RED}Directory .github\/ DOES NOT EXIST.${NC}\" exit 1 # exit with error code 1 fi ### Checks if the root files exist ### if [ ! -f \"CHANGELOG.md\" ] || [ ! -f \"README.md\" ] || [ ! -f \".gitignore\" ]; then echo -e \"${RED}There are files missing. Have you modified the repository before executing this command?${NC}\" echo -e \"${RED}The script couldn't found one or many of these files${NC}: '${UPurple}CHANGELOG.md${NC}', '${UPurple}README.md${NC}' or '${UPurple}.gitignore${NC}'.\\n\" echo -e \"You should try to 'git stash' your changes and execute this script from the project root again, or clone again the repository without any changes.\\n\" echo -e \"For more information visit: ${UPurple}https:\/\/github.com\/Josee9988\/project-template${NC}\" echo -e \"If you think this may be an issue please post it at: ${UPurple}https:\/\/github.com\/Josee9988\/project-template\/issues${NC}\" exit 1 # exit with error code 1 fi # prompt for the username, mail and name of the project read -p \"Enter your $(echo -e \"$BBLUE\"\"username\"\"$NC\") (without '@'): \" NEW_USERNAME read -p \"Enter your $(echo -e \"$BBLUE\"\"email\"\"$NC\"): \" NEW_EMAIL read -p \"Enter the $(echo -e \"$BBLUE\"\"name of the project\"\"$NC\"): \" PROJECT_NAME read -p \"Enter $(echo -e \"$BBLUE\"\"what your project is\"\"$NC\") (program\/extension\/API\/web\/CLI tool\/backend\/frontend\/scrapper\/automation tool\/etc): \" PROJECT_TYPE # confirm that the data is correct read -p \"Is this data correct: username \\\"$(echo -e \"$GREEN\"\"$NEW_USERNAME\"\"$NC\")\\\", email: \\\"$(echo -e \"$GREEN\"\"$NEW_EMAIL\"\"$NC\")\\\", project name: \\\"$(echo -e \"$GREEN\"\"$PROJECT_NAME\"\"$NC\")\\\", of type: \\\"$(echo -e \"$GREEN\"\"$PROJECT_TYPE\"\"$NC\")\\\" (y\/n)? \" choice case \"$choice\" in y | Y) # replace the username and email find .github\/ -type f -name \"\" -print0 | xargs -0 sed -i \"s\/Josee9988\/${NEW_USERNAME}\/g\" find .github\/ -type f -name \"\" -print0 | xargs -0 sed -i \"s\/jgracia9988@gmail.com\/${NEW_EMAIL}\/g\" find .gitignore -type f -name \"\" -print0 | xargs -0 sed -i \"s\/Josee9988\\\/project-template\/${NEW_USERNAME}\\\/${PROJECT_NAME}\/g\" # remove the license rm LICENSE # delete the README.md and create one with just a header echo -e \"# *${NEW_USERNAME}'s project*\" >README.md echo \"<!-- Write your own README.md file. Build something amazing! -->\" >>README.md # write the basic structure of the CHANGELOG.md echo -e \"<!-- markdownlint-disable MD024-->\\n# **Change Log* \ud83d\udcdc\ud83d\udcdd\\n\" >CHANGELOG.md echo -e \"All notable changes to the \\\"*${PROJECT_NAME}\\\" ${PROJECT_TYPE} will be documented in this file.\\n\" >>CHANGELOG.md echo -e \"The format is based on [Keep a Changelog](https:\/\/keepachangelog.com\/en\/1.0.0\/) and this project adheres to [Semantic Versioning](https:\/\/semver.org\/spec\/v2.0.0.html).\\n\" >>CHANGELOG.md echo -e \"---\\n\\n## [0.0.1] - ${ACTUAL_DATE}\\n\\n### Added\\n\" >>CHANGELOG.md echo -e \" The basic project structure of [josee9988's](https:\/\/github.com\/Josee9988) [project template](https:\/\/github.com\/Josee9988\/project-template).\" >>CHANGELOG.md echo -e \"* A basic \\`.gitignore\\` file ignoring some linux files and IDE trash files.\" >>CHANGELOG.md echo -e \"* A \\`.github\/\\` folder with issue templates, code of conduct, a contributing guide, pull request template security advisory file, a funding and support file and an issue label bot file.\" >>CHANGELOG.md # remove author's custom funding links echo -e \"# add your own funding links\" >.github\/FUNDING.yml # commit the new files git add CHANGELOG.md README.md .gitignore .github EXECUTEME.sh LICENSE git commit -m \"Set up Josee9988's template: Personalized files by executing the EXECUTEME.sh script.\" echo -e \"Commiting the changes for you :)\\n\" git -c color.status=always status | less -REX # show git status with colours echo -e \"\\nRemember to review every file and customize it as you like.\\nYou are ready to start your brand new awesome project\ud83d\ude80\ud83d\ude80.\" # self remove this script rm -- \"$0\" ;; n | N) echo \"Then try it again!\" ;; *) echo -e \"${RED}Invalid option${NC}\" ;; esac exit 0","d35d76d6":"ARG BASE_TAG=m61\nARG TENSORFLOW_VERSION=2.4.1\n\nFROM gcr.io\/kaggle-images\/python-tensorflow-whl:${TENSORFLOW_VERSION}-py37 as tensorflow_whl\nFROM gcr.io\/deeplearning-platform-release\/base-cpu:${BASE_TAG}\n\nADD clean-layer.sh  \/tmp\/clean-layer.sh\nADD patches\/nbconvert-extensions.tpl \/opt\/kaggle\/nbconvert-extensions.tpl\nADD patches\/template_conf.json \/opt\/kaggle\/conf.json\n\n# This is necessary for apt to access HTTPS sources\nRUN apt-get update && \\\n    apt-get install apt-transport-https && \\\n    \/tmp\/clean-layer.sh\n\n    # Use a fixed apt-get repo to stop intermittent failures due to flaky httpredir connections,\n    # as described by Lionel Chan at http:\/\/stackoverflow.com\/a\/37426929\/5881346\nRUN sed -i \"s\/httpredir.debian.org\/debian.uchicago.edu\/\" \/etc\/apt\/sources.list && \\\n    apt-get update && \\\n    # Needed by vowpalwabbit & lightGBM (GPU build).\n    # https:\/\/github.com\/VowpalWabbit\/vowpal_wabbit\/wiki\/Python#installing\n    # https:\/\/lightgbm.readthedocs.io\/en\/latest\/GPU-Tutorial.html#build-lightgbm\n    apt-get install -y build-essential unzip cmake && \\\n    apt-get install -y libboost-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev libboost-math-dev libboost-test-dev libboost-python-dev libboost-filesystem-dev zlib1g-dev && \\\n    pip install --upgrade pip && \\\n    \/tmp\/clean-layer.sh\n\n# Make sure the dynamic linker finds the right libstdc++\nENV LD_LIBRARY_PATH=\/opt\/conda\/lib\n# b\/128333086: Set PROJ_LIB to points to the proj4 cartographic library.\nENV PROJ_LIB=\/opt\/conda\/share\/proj\n\n# Install conda packages not available on pip.\n# When using pip in a conda environment, conda commands should be ran first and then\n# the remaining pip commands: https:\/\/www.anaconda.com\/using-pip-in-a-conda-environment\/\n# Using the same global consistent ordered list of channels\nRUN conda config --add channels conda-forge && \\\n    conda config --add channels nvidia && \\\n    conda config --add channels pytorch && \\\n    conda config --add channels rapidsai && \\\n    # ^ rapidsai is the highest priority channel, default lowest, conda-forge 2nd lowest.\n    # 161473620#comment7 pin required to prevent resolver from picking pysal 1.x., pysal 2.2.x is also downloading data on import.\n    conda install matplotlib basemap cartopy python-igraph imagemagick \"pysal==2.1.0\" && \\\n    conda install \"pytorch=1.7\" \"torchvision=0.8\" \"torchaudio=0.7\" \"torchtext=0.8\" cpuonly && \\\n    \/tmp\/clean-layer.sh\n\n# The anaconda base image includes outdated versions of these packages. Update them to include the latest version.\nRUN pip install seaborn python-dateutil dask && \\\n    pip install pyyaml joblib husl geopy ml_metrics mne pyshp && \\\n    pip install pandas && \\\n    # Install h2o from source.\n    # Use `conda install -c h2oai h2o` once Python 3.7 version is released to conda.\n    apt-get install -y default-jre-headless && \\\n    pip install -f https:\/\/h2o-release.s3.amazonaws.com\/h2o\/latest_stable_Py.html h2o && \\\n    \/tmp\/clean-layer.sh\n\n# Install tensorflow from a pre-built wheel\nCOPY --from=tensorflow_whl \/tmp\/tensorflow_cpu\/*.whl \/tmp\/tensorflow_cpu\/\nRUN pip install \/tmp\/tensorflow_cpu\/tensorflow*.whl && \\\n    rm -rf \/tmp\/tensorflow_cpu && \\\n    \/tmp\/clean-layer.sh\n\n# Install tensorflow-gcs-config from a pre-built wheel\nCOPY --from=tensorflow_whl \/tmp\/tensorflow_gcs_config\/*.whl \/tmp\/tensorflow_gcs_config\/\nRUN pip install \/tmp\/tensorflow_gcs_config\/tensorflow*.whl && \\\n    rm -rf \/tmp\/tensorflow_gcs_config && \\\n    \/tmp\/clean-layer.sh\n\n# Install TensorFlow addons (TFA).\nCOPY --from=tensorflow_whl \/tmp\/tfa_cpu\/*.whl \/tmp\/tfa_cpu\/\nRUN pip install \/tmp\/tfa_cpu\/tensorflow*.whl && \\\n    rm -rf \/tmp\/tfa_cpu\/ && \\\n    \/tmp\/clean-layer.sh\n\nRUN apt-get install -y libfreetype6-dev && \\\n    apt-get install -y libglib2.0-0 libxext6 libsm6 libxrender1 libfontconfig1 --fix-missing && \\\n    pip install gensim && \\\n    pip install textblob && \\\n    pip install wordcloud && \\\n    pip install xgboost && \\\n    # Pinned to match GPU version. Update version together.\n    pip install lightgbm==3.1.1 && \\\n    pip install pydot && \\\n    pip install keras && \\\n    pip install keras-tuner && \\\n    pip install flake8 && \\\n    # Pinned because it breaks theano test with the latest version (b\/178107003).\n    pip install theano-pymc==1.0.11 && \\\n    pip install python-Levenshtein && \\\n    pip install hep_ml && \\\n    # NLTK Project datasets\n    mkdir -p \/usr\/share\/nltk_data && \\\n    # NLTK Downloader no longer continues smoothly after an error, so we explicitly list\n    # the corpuses that work\n    # \"yes | ...\" answers yes to the retry prompt in case of an error. See b\/133762095.\n    yes | python -m nltk.downloader -d \/usr\/share\/nltk_data abc alpino averaged_perceptron_tagger \\\n    basque_grammars biocreative_ppi bllip_wsj_no_aux \\\n    book_grammars brown brown_tei cess_cat cess_esp chat80 city_database cmudict \\\n    comtrans conll2000 conll2002 conll2007 crubadan dependency_treebank \\\n    europarl_raw floresta gazetteers genesis gutenberg \\\n    ieer inaugural indian jeita kimmo knbc large_grammars lin_thesaurus mac_morpho machado \\\n    masc_tagged maxent_ne_chunker maxent_treebank_pos_tagger moses_sample movie_reviews \\\n    mte_teip5 names nps_chat omw opinion_lexicon paradigms \\\n    pil pl196x porter_test ppattach problem_reports product_reviews_1 product_reviews_2 propbank \\\n    pros_cons ptb punkt qc reuters rslp rte sample_grammars semcor senseval sentence_polarity \\\n    sentiwordnet shakespeare sinica_treebank smultron snowball_data spanish_grammars \\\n    state_union stopwords subjectivity swadesh switchboard tagsets timit toolbox treebank \\\n    twitter_samples udhr2 udhr unicode_samples universal_tagset universal_treebanks_v20 \\\n    vader_lexicon verbnet webtext word2vec_sample wordnet wordnet_ic words ycoe && \\\n    # Stop-words\n    pip install stop-words && \\\n    pip install scikit-image && \\\n    \/tmp\/clean-layer.sh\n\nRUN pip install ibis-framework && \\\n    pip install mxnet && \\\n    pip install gluonnlp && \\\n    pip install gluoncv && \\\n    \/tmp\/clean-layer.sh\n\nRUN pip install scipy && \\\n    # b\/176817038 avoid upgrade to 0.24 which is causing issues with hep-ml package.\n    pip install scikit-learn==0.23.2 && \\\n    # HDF5 support\n    pip install h5py && \\\n    pip install biopython && \\\n    # PUDB, for local debugging convenience\n    pip install pudb && \\\n    pip install imbalanced-learn && \\\n    # Profiling and other utilities\n    pip install line_profiler && \\\n    pip install orderedmultidict && \\\n    pip install smhasher && \\\n    pip install bokeh && \\\n    pip install numba && \\\n    pip install datashader && \\\n    # Boruta (python implementation)\n    pip install Boruta && \\\n    apt-get install -y graphviz && pip install graphviz && \\\n    # Pandoc is a dependency of deap\n    apt-get install -y pandoc && \\\n    pip install git+git:\/\/github.com\/scikit-learn-contrib\/py-earth.git@issue191 && \\\n    pip install essentia && \\\n    \/tmp\/clean-layer.sh\n\n# vtk with dependencies\nRUN apt-get install -y libgl1-mesa-glx && \\\n    pip install vtk && \\\n    # xvfbwrapper with dependencies\n    apt-get install -y xvfb && \\\n    pip install xvfbwrapper && \\\n    \/tmp\/clean-layer.sh\n\nRUN pip install mpld3 && \\\n    pip install gpxpy && \\\n    pip install arrow && \\\n    pip install nilearn && \\\n    pip install nibabel && \\\n    pip install pronouncing && \\\n    pip install markovify && \\\n    pip install imgaug && \\\n    pip install preprocessing && \\\n    pip install path.py && \\\n    pip install Geohash && \\\n    # https:\/\/github.com\/vinsci\/geohash\/issues\/4\n    sed -i -- 's\/geohash\/.geohash\/g' \/opt\/conda\/lib\/python3.7\/site-packages\/Geohash\/__init__.py && \\\n    pip install deap && \\\n    pip install tpot && \\\n    pip install scikit-optimize && \\\n    pip install haversine && \\\n    pip install toolz cytoolz && \\\n    pip install plotly && \\\n    pip install hyperopt && \\\n    pip install fitter && \\\n    pip install langid && \\\n    # Delorean. Useful for dealing with datetime\n    pip install delorean && \\\n    pip install trueskill && \\\n    # Useful data exploration libraries (for missing data and generating reports)\n    pip install missingno && \\\n    pip install pandas-profiling && \\\n    pip install s2sphere && \\\n    pip install bayesian-optimization && \\\n    pip install matplotlib-venn && \\\n    pip install pyldavis && \\\n    pip install mlxtend && \\\n    pip install altair && \\\n    pip install pystan && \\\n    pip install ImageHash && \\\n    pip install ecos && \\\n    pip install CVXcanon && \\\n    # b\/179264579 cvxpy 1.1.8 requires numpy >= 1.20\n    pip install cvxpy==1.1.7 && \\\n    pip install fancyimpute && \\\n    pip install pymc3 && \\\n    pip install imagecodecs && \\\n    pip install tifffile && \\\n    pip install spectral && \\\n    pip install descartes && \\\n    pip install geojson && \\\n    pip install pydicom && \\\n    pip install wavio && \\\n    pip install SimpleITK && \\\n    pip install hmmlearn && \\\n    pip install bayespy && \\\n    pip install gplearn && \\\n    pip install PyAstronomy && \\\n    pip install squarify && \\\n    pip install fuzzywuzzy && \\\n    pip install python-louvain && \\\n    pip install pyexcel-ods && \\\n    pip install sklearn-pandas && \\\n    pip install stemming && \\\n    pip install fbprophet && \\\n    pip install holoviews && \\\n    pip install geoviews && \\\n    pip install hypertools && \\\n    pip install py_stringsimjoin && \\\n    pip install mlens && \\\n    pip install scikit-multilearn && \\\n    pip install cleverhans && \\\n    pip install leven && \\\n    pip install catboost && \\\n    pip install lightfm && \\\n    pip install folium && \\\n    pip install scikit-plot && \\\n    # dipy requires the optional fury dependency for visualizations.\n    pip install fury dipy && \\\n    pip install plotnine && \\\n    pip install scikit-surprise && \\\n    pip install pymongo && \\\n    pip install geoplot && \\\n    pip install eli5 && \\\n    pip install implicit && \\\n    pip install kaggle && \\\n    \/tmp\/clean-layer.sh\n\nRUN pip install tensorpack && \\   \n    # Add google PAIR-code Facets\n    cd \/opt\/ && git clone https:\/\/github.com\/PAIR-code\/facets && cd facets\/ && jupyter nbextension install facets-dist\/ --user && \\\n    export PYTHONPATH=$PYTHONPATH:\/opt\/facets\/facets_overview\/python\/ && \\\n    pip install pycountry && \\\n    pip install iso3166 && \\\n    pip install pydash && \\\n    pip install kmodes --no-dependencies && \\\n    pip install librosa && \\\n    pip install polyglot && \\\n    pip install mmh3 && \\\n    pip install fbpca && \\\n    pip install sentencepiece && \\\n    pip install cufflinks && \\\n    pip install lime && \\\n    pip install memory_profiler && \\\n    \/tmp\/clean-layer.sh\n\n# install cython & cysignals before pyfasttext\nRUN pip install --upgrade cython && \\\n    pip install --upgrade cysignals && \\\n    pip install pyfasttext && \\\n    # ktext has an explicit dependency on Keras 2.2.4 which is not\n    # compatible with TensorFlow 2.0 (support was added in Keras 2.3.0).\n    # Add the package back once it is fixed upstream.\n    # pip install ktext && \\\n    pip install fasttext && \\\n    apt-get install -y libhunspell-dev && pip install hunspell && \\\n    pip install annoy && \\\n    pip install category_encoders && \\\n    # google-cloud-automl 2.0.0 introduced incompatible API changes, need to pin to 1.0.1\n    pip install google-cloud-automl==1.0.1 && \\\n    # Newer version crashes (latest = 1.14.0) when running tensorflow.\n    # python -c \"from google.cloud import bigquery; import tensorflow\". This flow is common because bigquery is imported in kaggle_gcp.py\n    # which is loaded at startup.\n    pip install google-cloud-bigquery==1.12.1 && \\\n    pip install google-cloud-storage && \\\n    pip install google-cloud-translate==3.* && \\\n    pip install google-cloud-language==2.* && \\\n    pip install google-cloud-videointelligence==2.* && \\\n    pip install google-cloud-vision==2.* && \\\n    pip install ortools && \\\n    pip install scattertext && \\\n    # Pandas data reader\n    pip install pandas-datareader && \\\n    pip install wordsegment && \\\n    pip install wordbatch && \\\n    pip install emoji && \\\n    # Add Japanese morphological analysis engine\n    pip install janome && \\\n    pip install wfdb && \\\n    pip install vecstack && \\\n    # yellowbrick machine learning visualization library\n    pip install yellowbrick && \\\n    pip install mlcrate && \\\n    \/tmp\/clean-layer.sh\n\nRUN pip install bleach && \\\n    pip install certifi && \\\n    pip install cycler && \\\n    pip install decorator && \\\n    pip install entrypoints && \\\n    pip install html5lib && \\\n    # Latest version breaks nbconvert: https:\/\/github.com\/ipython\/ipykernel\/issues\/422\n    pip install ipykernel==5.1.1 && \\\n    pip install ipython && \\\n    pip install ipython-genutils && \\\n    pip install ipywidgets && \\\n    pip install isoweek && \\\n    # Lastest version breaks ipython. https:\/\/github.com\/ipython\/ipython\/issues\/12740\n    pip install jedi==0.17.2 && \\\n    pip install Jinja2 && \\\n    pip install jsonschema && \\\n    pip install jupyter && \\\n    pip install jupyter-client && \\\n    pip install jupyter-console && \\\n    pip install jupyter-core && \\\n    pip install MarkupSafe && \\\n    pip install mistune && \\\n    pip install nbconvert && \\\n    pip install nbformat && \\\n    pip install notebook==5.5.0 && \\\n    pip install olefile && \\\n    pip install kornia && \\\n    pip install pandas_summary && \\\n    pip install pandocfilters && \\\n    pip install pexpect && \\\n    pip install pickleshare && \\\n    pip install Pillow && \\\n    # Install openslide and its python binding\n    apt-get install -y openslide-tools && \\\n    pip install openslide-python && \\\n    pip install ptyprocess && \\\n    pip install Pygments && \\\n    pip install pyparsing && \\\n    pip install pytz && \\\n    pip install PyYAML && \\\n    pip install pyzmq && \\\n    pip install qtconsole && \\\n    pip install six && \\\n    pip install terminado && \\\n    # Latest version (6.0) of tornado breaks Jupyter notebook:\n    # https:\/\/github.com\/jupyter\/notebook\/issues\/4439\n    pip install tornado==5.0.2 && \\\n    pip install tqdm && \\\n    pip install traitlets && \\\n    pip install wcwidth && \\\n    pip install webencodings && \\\n    pip install widgetsnbextension && \\\n    pip install pyarrow && \\\n    pip install feather-format && \\\n    pip install fastai && \\\n    pip install allennlp && \\\n    python -m spacy download en && python -m spacy download en_core_web_lg && \\\n    apt-get install -y ffmpeg && \\\n    \/tmp\/clean-layer.sh\n\n    ###########\n    #\n    #      NEW CONTRIBUTORS:\n    # Please add new pip\/apt installs in this block. Don't forget a \"&& \\\" at the end\n    # of all non-final lines. Thanks!\n    #\n    ###########\n\nRUN pip install flashtext && \\\n    pip install wandb && \\\n    pip install marisa-trie && \\\n    pip install pyemd && \\\n    pip install pyupset && \\\n    pip install pympler && \\\n    pip install s3fs && \\\n    pip install featuretools && \\\n    pip install -e git+https:\/\/github.com\/SohierDane\/BigQuery_Helper#egg=bq_helper && \\\n    pip install hpsklearn && \\\n    pip install git+https:\/\/github.com\/Kaggle\/learntools && \\\n    pip install kmapper && \\\n    pip install shap && \\\n    pip install ray && \\\n    pip install gym && \\\n    # b\/167268016 tensorforce 0.6.6 has an explicit dependency on tensorflow 2.3.1 which is causing a downgrade.\n    pip install tensorforce==0.5.5 && \\\n    pip install pyarabic && \\\n    pip install pandasql && \\\n    pip install tensorflow_hub && \\\n    pip install jieba  && \\\n    pip install git+https:\/\/github.com\/SauceCat\/PDPbox && \\\n    # ggplot is broken and main repo does not merge and release https:\/\/github.com\/yhat\/ggpy\/pull\/668\n    pip install https:\/\/github.com\/hbasria\/ggpy\/archive\/0.11.5.zip && \\\n    pip install cesium && \\\n    pip install rgf_python && \\\n    # b\/145404107: latest version force specific version of numpy and torch.\n    pip install pytext-nlp==0.1.2 && \\\n    pip install tsfresh && \\\n    pip install pykalman && \\\n    pip install optuna && \\\n    pip install plotly_express && \\\n    pip install albumentations && \\\n    pip install catalyst && \\\n    pip install osmnx && \\\n    apt-get -y install libspatialindex-dev && \\\n    pip install pytorch-ignite && \\\n    pip install qgrid && \\\n    pip install bqplot && \\\n    pip install earthengine-api && \\\n    pip install transformers && \\\n    pip install dlib && \\\n    pip install kaggle-environments && \\\n    pip install geopandas && \\\n    # b\/175638062 remove pin once we update to cuDNN 8.x\n    pip install nnabla==1.13.0 && \\\n    pip install vowpalwabbit && \\\n    # papermill can replace nbconvert for executing notebooks\n    pip install papermill && \\\n    pip install cloud-tpu-client && \\\n    pip install tensorflow-cloud && \\\n    pip install tensorflow-datasets && \\\n    pip install pydub && \\\n    pip install pydegensac && \\\n    pip install pytorch-lightning && \\\n    pip install datatable && \\\n    pip install sympy && \\\n    # flask is used by agents in the simulation competitions.\n    pip install flask && \\\n    # pycrypto is used by competitions team.\n    pip install pycrypto && \\\n    # daal4py used for cpu optimized scikit-learn\n    pip install daal4py&& \\\n    \/tmp\/clean-layer.sh\n\n# Tesseract and some associated utility packages\nRUN apt-get install tesseract-ocr -y && \\\n    pip install pytesseract && \\\n    pip install wand==0.5.3 && \\\n    pip install pdf2image && \\\n    pip install PyPDF && \\\n    pip install pyocr && \\\n    \/tmp\/clean-layer.sh\nENV TESSERACT_PATH=\/usr\/bin\/tesseract\n\n# For Facets\nENV PYTHONPATH=$PYTHONPATH:\/opt\/facets\/facets_overview\/python\/\n# For Theano with MKL\nENV MKL_THREADING_LAYER=GNU\n\n# Temporary fixes and patches\n    # Temporary patch for Dask getting downgraded, which breaks Keras\nRUN pip install --upgrade dask && \\\n    # Stop jupyter nbconvert trying to rewrite its folder hierarchy\n    mkdir -p \/root\/.jupyter && touch \/root\/.jupyter\/jupyter_nbconvert_config.py && touch \/root\/.jupyter\/migrated && \\\n    mkdir -p \/.jupyter && touch \/.jupyter\/jupyter_nbconvert_config.py && touch \/.jupyter\/migrated && \\\n    # Stop Matplotlib printing junk to the console on first load\n    sed -i \"s\/^.*Matplotlib is building the font cache using fc-list.*$\/# Warning removed by Kaggle\/g\" \/opt\/conda\/lib\/python3.7\/site-packages\/matplotlib\/font_manager.py && \\\n    # Make matplotlib output in Jupyter notebooks display correctly\n    mkdir -p \/etc\/ipython\/ && echo \"c = get_config(); c.IPKernelApp.matplotlib = 'inline'\" > \/etc\/ipython\/ipython_config.py && \\\n    # Temporary patch for broken libpixman 0.38 in conda-forge, symlink to system libpixman 0.34 untile conda package gets updated to 0.38.5 or higher.\n    ln -sf \/usr\/lib\/x86_64-linux-gnu\/libpixman-1.so.0.34.0 \/opt\/conda\/lib\/libpixman-1.so.0.38.0 && \\\n    \/tmp\/clean-layer.sh\n\n# gcloud SDK https:\/\/cloud.google.com\/sdk\/docs\/quickstart-debian-ubuntu\nRUN echo \"deb [signed-by=\/usr\/share\/keyrings\/cloud.google.gpg] http:\/\/packages.cloud.google.com\/apt cloud-sdk main\" \\\n    | tee -a \/etc\/apt\/sources.list.d\/google-cloud-sdk.list && \\\n    curl https:\/\/packages.cloud.google.com\/apt\/doc\/apt-key.gpg | \\\n    apt-key --keyring \/usr\/share\/keyrings\/cloud.google.gpg add - && \\\n    apt-get update -y && apt-get install google-cloud-sdk -y && \\\n    \/tmp\/clean-layer.sh\n\n# Add BigQuery client proxy settings\nENV PYTHONUSERBASE \"\/root\/.local\"\nADD patches\/kaggle_gcp.py \/root\/.local\/lib\/python3.7\/site-packages\/kaggle_gcp.py\nADD patches\/kaggle_secrets.py \/root\/.local\/lib\/python3.7\/site-packages\/kaggle_secrets.py\nADD patches\/kaggle_session.py \/root\/.local\/lib\/python3.7\/site-packages\/kaggle_session.py\nADD patches\/kaggle_web_client.py \/root\/.local\/lib\/python3.7\/site-packages\/kaggle_web_client.py\nADD patches\/kaggle_datasets.py \/root\/.local\/lib\/python3.7\/site-packages\/kaggle_datasets.py\nADD patches\/log.py \/root\/.local\/lib\/python3.7\/site-packages\/log.py\nADD patches\/sitecustomize.py \/root\/.local\/lib\/python3.7\/site-packages\/sitecustomize.py\n# Override default imagemagick policies\nADD patches\/imagemagick-policy.xml \/etc\/ImageMagick-6\/policy.xml\n\n# TensorBoard Jupyter extension. Should be replaced with TensorBoard's provided magic once we have\n# worker tunneling support in place.\n# b\/139212522 re-enable TensorBoard once solution for slowdown is implemented.\n# ENV JUPYTER_CONFIG_DIR \"\/root\/.jupyter\/\"\n# RUN pip install jupyter_tensorboard && \\\n#     jupyter serverextension enable jupyter_tensorboard && \\\n#     jupyter tensorboard enable\n# ADD patches\/tensorboard\/notebook.py \/opt\/conda\/lib\/python3.7\/site-packages\/tensorboard\/notebook.py\n\n# Disable unnecessary jupyter extensions\nRUN jupyter-nbextension disable nb_conda --py --sys-prefix && \\\n    jupyter-serverextension disable nb_conda --py --sys-prefix && \\\n    python -m nb_conda_kernels.install --disable\n\n# Set backend for matplotlib\nENV MPLBACKEND \"agg\"\n\n# We need to redefine TENSORFLOW_VERSION here to get the default ARG value defined above the FROM instruction.\n# See: https:\/\/docs.docker.com\/engine\/reference\/builder\/#understand-how-arg-and-from-interact\nARG TENSORFLOW_VERSION\nARG GIT_COMMIT=unknown\nARG BUILD_DATE=unknown\n\nLABEL git-commit=$GIT_COMMIT\nLABEL build-date=$BUILD_DATE\nLABEL tensorflow-version=$TENSORFLOW_VERSION\n# Used in the Jenkins `Docker GPU Build` step to restrict the images being pruned.\nLABEL kaggle-lang=python\n\n# Correlate current release with the git hash inside the kernel editor by running `!cat \/etc\/git_commit`.\nRUN echo \"$GIT_COMMIT\" > \/etc\/git_commit && echo \"$BUILD_DATE\" > \/etc\/build_date","0ca062e0":"Boost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."}}