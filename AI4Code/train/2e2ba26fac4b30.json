{"cell_type":{"3648b8f9":"code","9493a7e3":"code","5fe07c4a":"code","da8fb4bd":"code","9e280354":"code","923c0547":"code","2532ee1c":"code","68c9b873":"code","cd4e4651":"code","0f0eb9dd":"code","92af4406":"code","1984c911":"code","4da9f597":"code","a283bd9c":"code","f1012ff0":"code","cfb4d1c9":"code","a1cbde05":"code","2e30da06":"code","b0311b04":"code","83e46a79":"code","929544cb":"code","dbead2cd":"code","9330436b":"code","35fccc55":"code","5737f06d":"code","2fe90c20":"code","47cd1694":"code","35a2b5ff":"code","cb011a0d":"code","0d1a2d35":"code","9f17c74a":"code","08ac106f":"code","ae189642":"code","a18e4787":"code","5527a7a8":"code","6f3947b1":"code","02ac744e":"code","9ee32a4d":"code","d53837da":"code","9676e916":"code","acff1ecc":"code","1932dbd5":"code","99b334f0":"code","d2ff23f3":"code","af16a62e":"code","1098aafc":"code","087610c9":"code","f79073cf":"code","01c7222d":"code","312d1158":"code","ee1f971d":"code","75229c87":"code","a6272121":"code","a987ed9d":"code","240c6508":"code","15e04cbc":"code","8144ad10":"code","d228b13b":"code","3a42c1b5":"code","0f12f746":"code","696741c2":"code","acca2fcb":"code","b950c28f":"code","d6a2011d":"code","cef5df30":"code","3bdcaaeb":"code","551e65c9":"code","3d54bf4f":"code","11fc7c62":"code","3a4014c4":"code","33c9e2b9":"code","ec1c9250":"code","9d86923d":"code","cb2cd350":"code","378536a1":"code","76136645":"code","5567e511":"code","553bf325":"code","49655bd9":"code","49d74a5e":"code","8fded738":"code","b94a87d2":"code","c87b479b":"code","e35e7e73":"markdown","9b25dd3d":"markdown","17545a7b":"markdown","dca14cee":"markdown","edd59092":"markdown","8401dc61":"markdown","d80409a4":"markdown","56184c75":"markdown","068a5e11":"markdown","4327bced":"markdown","8fc006ea":"markdown","75735afd":"markdown","a8b62439":"markdown","ccdc52d0":"markdown","96e2791e":"markdown","c3499dc6":"markdown","631f457a":"markdown","2fe5bbe9":"markdown","a80d4dd4":"markdown","2f0d897d":"markdown","7517564f":"markdown","81a7c8b9":"markdown","a969897f":"markdown","2fba2f47":"markdown","58bfd10e":"markdown","2a391996":"markdown","7f32124e":"markdown","30a7b606":"markdown","5733b164":"markdown","b3e2f8a0":"markdown","89fe7972":"markdown","129179a2":"markdown","7971342e":"markdown","1257ef7a":"markdown","a95ed0f4":"markdown","1df745b6":"markdown","7847ec0a":"markdown","a74f1db1":"markdown","7c4ca21f":"markdown","30c33dca":"markdown","551fd0d0":"markdown","f2c9f0b9":"markdown","688fabf6":"markdown","3ea85348":"markdown","293fab05":"markdown","f66d120f":"markdown","c7c77417":"markdown","9e32cad8":"markdown","011ac4b1":"markdown","41d9a762":"markdown","225b6c5d":"markdown","8dc85188":"markdown","68d23933":"markdown","e706b364":"markdown","206abecb":"markdown","197c000c":"markdown","88debe0f":"markdown","c0bbbd61":"markdown","8b6318f1":"markdown","8e5129bc":"markdown","0039d0c2":"markdown","3b4adefb":"markdown","ff4b2c6e":"markdown","01e1ca4c":"markdown","01ae7d98":"markdown","61478f89":"markdown","c29fab06":"markdown","8126869a":"markdown","6ead6fb5":"markdown","5293e66d":"markdown","8b8c5dc7":"markdown","04c95845":"markdown","f4b8a0c7":"markdown","4d12b217":"markdown","95be59d4":"markdown","8849b4f7":"markdown","3d654b1d":"markdown","935aa5b3":"markdown","b1461aa9":"markdown","6b71fe70":"markdown","ace99b6e":"markdown","323aad3f":"markdown","3f28ac17":"markdown","673abe5d":"markdown","3c5e9968":"markdown","a695313d":"markdown","7ead3a9f":"markdown","4d5e7c96":"markdown","26fbec46":"markdown","838c6a95":"markdown","45cece6b":"markdown","ddf65880":"markdown","c8fadf4f":"markdown","af1b3f12":"markdown","69dd109e":"markdown","a57a3cc3":"markdown","eac67c64":"markdown","45f5d98a":"markdown","8ac02d58":"markdown"},"source":{"3648b8f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9493a7e3":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom plotly.offline import iplot\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom imblearn.under_sampling import RandomUnderSampler\nfrom imblearn.over_sampling import RandomOverSampler\n\nfrom sklearn.pipeline import Pipeline\nfrom imblearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OneHotEncoder, MinMaxScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score, RandomizedSearchCV, GridSearchCV\n\nfrom sklearn.metrics import recall_score, classification_report, accuracy_score\n","5fe07c4a":"data=pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')","da8fb4bd":"data.drop(data.columns[[21, 22]], axis = 1, inplace = True)","9e280354":"data.info()","923c0547":"# Data Categorical\ncol_obj = list(data.select_dtypes(['object']).columns.drop('Attrition_Flag'))\ncol_obj","2532ee1c":"#Data Numerical\ncol_num = list(data.select_dtypes(['int64','float64']).columns.drop('CLIENTNUM'))\ncol_num","68c9b873":"#all population\ndf_all = data.copy()\n\n#churned population\ndf_churned = data[data['Attrition_Flag'] == \"Attrited Customer\"]\n\n#non churned population\ndf_nonchurned = data[data['Attrition_Flag'] == \"Existing Customer\"]","cd4e4651":"def plot_pie(column, title=\"\"):\n    data = df_all[column].value_counts()\n    plt.pie(data,autopct='%1.2f%%',labels=data.index)\n    plt.title(title)\n    plt.show()","0f0eb9dd":"plot_pie(\"Attrition_Flag\", title = 'Percentage of Existing and Attrited Customers')\nprint('Number of Credit Card Service Customers: ',df_all['Attrition_Flag'].count())\nprint('Dengan rincian: ')\nprint(df_all['Attrition_Flag'].value_counts())","92af4406":"plot_pie('Gender',\"All Population\")","1984c911":"plt.figure(figsize=(10,10))\nax= sns.countplot(data = df_all, x='Gender', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 120,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 3,\n                        str(p.get_height()),\n                        ha=\"center\")","4da9f597":"plot_pie('Education_Level', title=\"All Population\")","a283bd9c":"plt.figure(figsize=(10,10))\nax= sns.countplot(data = df_all, x='Education_Level', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 80,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 20,\n                        str(p.get_height()),\n                        ha=\"center\")","f1012ff0":"plot_pie('Marital_Status', title=\"All Population\")","cfb4d1c9":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Marital_Status', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 120,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 20,\n                        str(p.get_height()),\n                        ha=\"center\")","a1cbde05":"plot_pie('Income_Category', title=\"All Population\")","2e30da06":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Income_Category', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 80,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\") \n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 20,\n                        str(p.get_height()),\n                        ha=\"center\")","b0311b04":"plot_pie('Card_Category', title=\"All Population\")","83e46a79":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Card_Category', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 170,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 20,\n                        str(p.get_height()),\n                        ha=\"center\")","929544cb":"plt.figure(figsize = (16, 10))\nplt.title('Number of Age All Bank Customer')\nax = sns.countplot(data = df_all, x = 'Customer_Age')\nplt.xlabel('Age All Customer')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","dbead2cd":"plt.figure(figsize = (16, 10))\nplt.title('Number of Existing Customer Age')\nax = sns.countplot(data = df_all,hue = 'Attrition_Flag', x = 'Customer_Age')\nplt.xlabel('Existing Customer Age')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","9330436b":"plt.figure(figsize=(16, 10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer']['Customer_Age'],label='Existing Customer', rug = True)\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Customer_Age'],label='Attrited Customer', rug = True)\nplt.legend()","35fccc55":"plt.figure(figsize = (8, 5))\nplt.title('Number of Dependent by The Customer')\nax = sns.countplot(data = df_all, x = 'Dependent_count')\nplt.xlabel('Dependent All Customer')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","5737f06d":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Dependent_count', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 70,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 20,\n                        str(p.get_height()),\n                        ha=\"center\")","2fe90c20":"plt.figure(figsize = (16, 10))\nplt.title('Number of Customers holding the card for months of Existing Customer')\nax = sns.countplot(data = df_all, x = 'Months_on_book')\nplt.xlabel(' Customers holding the card for months of Existing Customer')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","47cd1694":"plt.figure(figsize = (16, 10))\nplt.title('Number of Customers holding the card for months')\nax = sns.countplot(data = df_all, x = 'Months_on_book', hue = 'Attrition_Flag')\nplt.xlabel('All Customers holding the card for months')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","35a2b5ff":"plt.figure(figsize=(16, 10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer']['Months_on_book'],label='Existing Customer', rug = True)\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Months_on_book'],label='Attrited Customer', rug = True)\nplt.legend()","cb011a0d":"plt.figure(figsize = (8, 5))\nplt.title('Number of All Customers Relationship')\nax = sns.countplot(data = df_all, x = 'Total_Relationship_Count')\nplt.xlabel('All Customers Relationship')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","0d1a2d35":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Total_Relationship_Count', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 60,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 15,\n                        str(p.get_height()),\n                        ha=\"center\")","9f17c74a":"plt.figure(figsize = (8, 5))\nplt.title('Number of Month Inactive All Customers in 12 Months')\nax = sns.countplot(data = df_all, x = 'Months_Inactive_12_mon')\nplt.xlabel('Month Inactive All Customers in 12 Months')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","08ac106f":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Months_Inactive_12_mon', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 80,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 15,\n                        str(p.get_height()),\n                        ha=\"center\")","ae189642":"plt.figure(figsize = (8, 5))\nplt.title('Number of Contacts Count All Customers in 12 Months')\nax = sns.countplot(data = df_all, x = 'Contacts_Count_12_mon')\nplt.xlabel('Contacts Count All Customers in 12 Months')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))","a18e4787":"plt.figure(figsize=(8,10))\nax= sns.countplot(data = df_all, x='Contacts_Count_12_mon', hue = 'Attrition_Flag')\nfor p in ax.patches:\n                height = p.get_height()\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 80,\n                        '{:1.2f}%'.format(height\/len(df_all)*100),\n                        ha=\"center\")\n                ax.text(p.get_x()+p.get_width()\/2.,\n                        height + 15,\n                        str(p.get_height()),\n                        ha=\"center\")","5527a7a8":"plt.figure(figsize = (16, 10))\nplt.title('Number of Credit Limit All Customers')\nax = plt.hist(df_all['Credit_Limit'], bins=50, density = False)\nplt.xlabel('Credit Limit All Customers')","6f3947b1":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer']['Credit_Limit'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Credit_Limit'],label='Attrited Customer')\nplt.legend()","02ac744e":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Revolving_Bal All Customers')\nax = plt.hist(df_all['Total_Revolving_Bal'], bins=50, density = False)\nplt.xlabel('Total_Revolving_Bal All Customers')","9ee32a4d":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Revolving_Bal Existing Customers')\nplt.hist(df_nonchurned['Total_Revolving_Bal'], bins=50, density = False)\nplt.hist(df_churned['Total_Revolving_Bal'], bins=50, density = False)\nplt.xlabel('Total_Revolving_Bal Existing Customers')","d53837da":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer'][ 'Total_Revolving_Bal'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Total_Revolving_Bal'],label='Attrited Customer')\nplt.legend()","9676e916":"plt.figure(figsize = (16, 10))\nplt.title('Number of Avg_Open_To_Buy All Customers')\nax = plt.hist(df_all['Avg_Open_To_Buy'], bins=50, density = False)\nplt.xlabel('Avg_Open_To_Buy All Customers')","acff1ecc":"plt.figure(figsize = (16, 10))\nplt.title('Number of Avg_Open_To_Buy Existing And Attrited Customers')\nplt.hist(df_nonchurned['Avg_Open_To_Buy'], bins=50, density = False, color='y')\nplt.hist(df_churned['Avg_Open_To_Buy'], bins=50, density = False)\nplt.xlabel('Avg_Open_To_Buy Existing Customers')","1932dbd5":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer'][ 'Avg_Open_To_Buy'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Avg_Open_To_Buy'],label='Attrited Customer')\nplt.legend()","99b334f0":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Amt_Chng_Q4_Q1 All Customers')\nax = plt.hist(df_all['Total_Amt_Chng_Q4_Q1'], bins=50, density = False)\nplt.xlabel('Total_Amt_Chng_Q4_Q1 All Customers')","d2ff23f3":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Amt_Chng_Q4_Q1 Existing and Attrited Customers')\nplt.hist(df_nonchurned['Total_Amt_Chng_Q4_Q1'], bins=50, density = False)\nplt.hist(df_churned['Total_Amt_Chng_Q4_Q1'], bins=50, density = False)\nplt.xlabel('Total_Amt_Chng_Q4_Q1 Existing and Attrited Customers')","af16a62e":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer'][ 'Total_Amt_Chng_Q4_Q1'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Total_Amt_Chng_Q4_Q1'],label='Attrited Customer')\nplt.legend()","1098aafc":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Trans_Amt All Customers')\nax = plt.hist(df_all['Total_Trans_Amt'], bins=50, density = False)\nplt.xlabel('Total_Trans_Amt All Customers')","087610c9":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Trans_Amt Existing Customers')\nplt.hist(df_nonchurned['Total_Trans_Amt'], bins=50, density = False)\nplt.hist(df_churned['Total_Trans_Amt'], bins=50, density = False)\nplt.xlabel('Total_Trans_Amt Existing Customers')","f79073cf":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer'][ 'Total_Trans_Amt'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Total_Trans_Amt'],label='Attrited Customer')\nplt.legend()","01c7222d":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Trans_Ct All Customers')\nax = plt.hist(df_all['Total_Trans_Ct'],bins=50, density = False)\nplt.xlabel('Total_Trans_Ct All Customers')","312d1158":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Trans_Ct Customers')\nplt.hist(df_nonchurned['Total_Trans_Ct'], bins=50, density = False)\nplt.hist(df_churned['Total_Trans_Ct'], bins=50, density = False)\nplt.xlabel('Total_Trans_Ct Customers')","ee1f971d":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer']['Total_Trans_Ct'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Total_Trans_Ct'],label='Attrited Customer')\nplt.legend()","75229c87":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Ct_Chng_Q4_Q1 All Customers')\nax = plt.hist(df_all['Total_Ct_Chng_Q4_Q1'], bins=50, density = False)\nplt.xlabel('Total_Ct_Chng_Q4_Q1 All Customers')","a6272121":"plt.figure(figsize = (16, 10))\nplt.title('Number of Total_Ct_Chng_Q4_Q1 Existing Customers')\nplt.hist(df_nonchurned['Total_Ct_Chng_Q4_Q1'], bins=50, density = False)\nplt.hist(df_churned['Total_Ct_Chng_Q4_Q1'], bins=50, density = False)\nplt.xlabel('Total_Ct_Chng_Q4_Q1 Existing Customers')\nplt.ylabel('Count')","a987ed9d":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer']['Total_Ct_Chng_Q4_Q1'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Total_Ct_Chng_Q4_Q1'],label='Attrited Customer')\nplt.legend()","240c6508":"plt.figure(figsize = (16, 10))\nplt.title('Number of Avg_Utilization_Ratio All Customers')\nax = plt.hist(df_all['Avg_Utilization_Ratio'], bins=50, density = False)\nplt.xlabel('Avg_Utilization_Ratio All Customers')\nplt.ylabel('Count')","15e04cbc":"plt.figure(figsize = (16, 10))\nplt.title('Number of Avg_Utilization_Ratio')\nplt.hist(df_nonchurned['Avg_Utilization_Ratio'], bins=50, density = False)\nplt.hist(df_churned['Avg_Utilization_Ratio'], bins=50, density = False)\nplt.xlabel('Avg_Utilization_Ratio Customers')\nplt.ylabel('Count')","8144ad10":"plt.figure(figsize=(16,10))\nsns.distplot(df_all[df_all['Attrition_Flag']=='Existing Customer']['Avg_Utilization_Ratio'],label='Existing Customer')\nsns.distplot(df_all[df_all['Attrition_Flag']=='Attrited Customer']['Avg_Utilization_Ratio'],label='Attrited Customer')\nplt.legend()","d228b13b":"df_corr = df_all.copy()\ndf_corr['Attrition_Flag'] = np.where(df_corr['Attrition_Flag'] == 'Existing Customer',1,0)","3a42c1b5":"col_num_cor = list(df_corr.select_dtypes(['int64','float64','int32']))\ncol_num_cor","0f12f746":"corr_data = df_corr.loc[:, col_num_cor].corr(method='spearman')\n\nplt.figure(figsize=(15,10))\nsns.heatmap(corr_data.abs(), annot=True, fmt='.3f',cmap='viridis',square=True)\nplt.show()","696741c2":"df = data.copy()","acca2fcb":"df.drop(data.columns[0], axis = 1, inplace = True)","b950c28f":"def plot_box(column):\n    plt.boxplot(df_all[column])\n    plt.title(column)\n    plt.show()\n\nfor i in col_num:\n    plot_box(i)","d6a2011d":"df['Attrition_Flag'] = np.where(df['Attrition_Flag'] == 'Attrited Customer', 1, 0)","cef5df30":"transformer= ColumnTransformer([\n    ('one_hot',OneHotEncoder(drop='first'),['Gender','Education_Level','Marital_Status','Income_Category','Card_Category']),\n    ('scale',MinMaxScaler(), ['Months_on_book', 'Credit_Limit', 'Avg_Open_To_Buy', 'Total_Amt_Chng_Q4_Q1', 'Total_Trans_Amt', 'Total_Ct_Chng_Q4_Q1'])]\n    , remainder='passthrough')","3bdcaaeb":"X=df.drop('Attrition_Flag',axis=1)\ny=df['Attrition_Flag']","551e65c9":"X_train, X_test, y_train, y_test = train_test_split(X,y,\n                                                   stratify = y,\n                                                   test_size = 0.3,\n                                                   random_state = 2020)","3d54bf4f":"logreg = LogisticRegression(solver='liblinear')\ntree = DecisionTreeClassifier(random_state = 1010)\nknn = KNeighborsClassifier(n_neighbors = 2)\nrf = RandomForestClassifier(random_state = 1010)","11fc7c62":"logreg_pipe = Pipeline([('transformer', transformer), ('logreg', logreg)])\ntree_pipe = Pipeline([('transformer', transformer), ('tree', tree)])\nknn_pipe = Pipeline([('transformer', transformer), ('knn', knn)])\nrf_pipe = Pipeline([('transformer', transformer), ('rf', rf)])\n\ndef model_evaluation(model, metric):\n    skfold = StratifiedKFold(n_splits = 5)\n    model_cv = cross_val_score(model, X_train, y_train, cv = skfold, scoring = metric)\n    return model_cv\n\nlogreg_pipe_cv = model_evaluation(logreg_pipe, 'recall')\ntree_pipe_cv = model_evaluation(tree_pipe, 'recall')\nknn_pipe_cv = model_evaluation(knn_pipe, 'recall')\nrf_pipe_cv = model_evaluation(rf_pipe, 'recall')\n\nfor model in [logreg_pipe, tree_pipe, knn_pipe, rf_pipe]:\n    model.fit(X_train, y_train)\n    \nscore_mean = [logreg_pipe_cv.mean(), tree_pipe_cv.mean(), knn_pipe_cv.mean(), rf_pipe_cv.mean()]\nscore_std = [logreg_pipe_cv.std(), tree_pipe_cv.std(), knn_pipe_cv.std(), rf_pipe_cv.std()]\nscore_recall_score = [recall_score(y_test, logreg_pipe.predict(X_test)),\n            recall_score(y_test, tree_pipe.predict(X_test)), \n            recall_score(y_test, knn_pipe.predict(X_test)), \n            recall_score(y_test, rf_pipe.predict(X_test))]\nmethod_name = ['Logistic Regression', 'Decision Tree Classifier', 'KNN Classifier', 'Random Forest Classifier']\ncv_summary = pd.DataFrame({\n    'method': method_name,\n    'mean score': score_mean,\n    'std score': score_std,\n    'recall score': score_recall_score\n})\ncv_summary","3a4014c4":"print(classification_report(y_test, tree_pipe.predict(X_test)))","33c9e2b9":"print(classification_report(y_test, rf_pipe.predict(X_test)))","ec1c9250":"ros = RandomOverSampler(random_state = 1010)\nX_over, y_over = ros.fit_resample(X_train, y_train) \n\nlogreg_pipe_over = Pipeline([('transformer', transformer), ('ros', ros), ('logreg', logreg)])\ntree_pipe_over = Pipeline([('transformer', transformer), ('ros', ros), ('tree', tree)])\nknn_pipe_over = Pipeline([('transformer', transformer), ('ros', ros), ('knn', knn)])\nrf_pipe_over = Pipeline([('transformer', transformer), ('ros', ros), ('rf', rf)])\n\ndef model_evaluation(model, metric):\n    skfold = StratifiedKFold(n_splits = 5)\n    model_cv = cross_val_score(model, X_train, y_train, cv = skfold, scoring = metric)\n    return model_cv\n\nlogreg_over_cv = model_evaluation(logreg_pipe_over, 'recall') \ntree_over_cv = model_evaluation(tree_pipe_over, 'recall')\nknn_over_cv = model_evaluation(knn_pipe_over, 'recall')\nrf_over_cv = model_evaluation(rf_pipe_over, 'recall')\n\nfor model in [logreg_pipe_over, tree_pipe_over, knn_pipe_over, rf_pipe_over]:\n    model.fit(X_train, y_train)\n    \nscore_mean = [logreg_over_cv.mean(), tree_over_cv.mean(), knn_over_cv.mean(),\n              rf_over_cv.mean()]\nscore_std = [logreg_over_cv.std(), tree_over_cv.std(), knn_over_cv.std(),\n             rf_over_cv.std()]\nscore_recall_score = [recall_score(y_test, logreg_pipe_over.predict(X_test)),\n            recall_score(y_test, tree_pipe_over.predict(X_test)), \n            recall_score(y_test, knn_pipe_over.predict(X_test)), \n            recall_score(y_test, rf_pipe_over.predict(X_test))]\nmethod_name = ['Logistic Regression OverSampling', 'Decision Tree Classifier OverSampling',\n              'KNN Classifier OverSampling', 'Random Forest Classifier OverSampling']\nover_summary = pd.DataFrame({\n    'method': method_name,\n    'mean score': score_mean,\n    'std score': score_std,\n    'recall score': score_recall_score\n})\nover_summary","9d86923d":"print(classification_report(y_test, tree_pipe_over.predict(X_test)))","cb2cd350":"print(classification_report(y_test, rf_pipe_over.predict(X_test)))","378536a1":"rus = RandomUnderSampler(random_state = 1010)\nX_under, y_under = rus.fit_resample(X_train, y_train) \n\nlogreg_pipe_under = Pipeline([('transformer', transformer), ('rus', rus), ('logreg', logreg)])\ntree_pipe_under = Pipeline([('transformer', transformer), ('rus', rus), ('tree', tree)])\nknn_pipe_under = Pipeline([('transformer', transformer), ('rus', rus), ('knn', knn)])\nrf_pipe_under = Pipeline([('transformer', transformer), ('rus', rus), ('rf', rf)])\n\ndef model_evaluation(model, metric):\n    skfold = StratifiedKFold(n_splits = 5)\n    model_cv = cross_val_score(model, X_train, y_train, cv = skfold, scoring = metric)\n    return model_cv\n\nlogreg_under_cv = model_evaluation(logreg_pipe_under, 'recall') \ntree_under_cv = model_evaluation(tree_pipe_under, 'recall')\nknn_under_cv = model_evaluation(knn_pipe_under, 'recall')\nrf_under_cv = model_evaluation(rf_pipe_under, 'recall')\n\nfor model in [logreg_pipe_under, tree_pipe_under, knn_pipe_under, rf_pipe_under]:\n    model.fit(X_train, y_train)\n    \nscore_mean = [logreg_under_cv.mean(), tree_under_cv.mean(), knn_under_cv.mean(),\n              rf_under_cv.mean()]\nscore_std = [logreg_under_cv.std(), tree_under_cv.std(), knn_under_cv.std(),\n             rf_under_cv.std()]\nscore_recall_score = [recall_score(y_test, logreg_pipe_under.predict(X_test)),\n            recall_score(y_test, tree_pipe_under.predict(X_test)), \n            recall_score(y_test, knn_pipe_under.predict(X_test)), \n            recall_score(y_test, rf_pipe_under.predict(X_test))]\nmethod_name = ['Logistic Regression UnderSampling', 'Decision Tree Classifier UnderSampling',\n              'KNN Classifier UnderSampling', 'Random Forest Classifier UnderSampling']\nunder_summary = pd.DataFrame({\n    'method': method_name,\n    'mean score': score_mean,\n    'std score': score_std,\n    'recall score': score_recall_score\n})\nunder_summary","76136645":"print(classification_report(y_test, tree_pipe_under.predict(X_test)))","5567e511":"print(classification_report(y_test, rf_pipe_under.predict(X_test)))","553bf325":"estimator = Pipeline([\n    ('transformer', transformer),\n    ('balancing', rus),\n    ('model', rf)\n])\n\nhyperparam_space={\n    'model__max_depth':[2,5,7,10],\n    'model__min_samples_leaf':[1,5,10,20,50,100],\n    'model__min_samples_split':[1,5,10,20,50,100],\n    'model__criterion':['gini','entropy']\n}\n\n\nskfold=StratifiedKFold(n_splits=5)\n\ngrid_search=GridSearchCV(\n    estimator,\n    param_grid=hyperparam_space,\n    cv=skfold,\n    scoring='recall',\n    n_jobs=-1\n)","49655bd9":"grid_search.fit(X_train, y_train)","49d74a5e":"print('best score', grid_search.best_score_)\nprint('best param', grid_search.best_params_)","8fded738":"print('Recall Score After Hyperparameter Tuning:')\ngrid_search.best_estimator_.fit(X_train, y_train)\ny_predict = grid_search.best_estimator_.predict(X_test)\nrecall_score(y_test, y_predict)","b94a87d2":"y_predict = rf_pipe_under.predict(X_test)\nrecall_score(y_test, y_predict)","c87b479b":"print('Accuracy Score:')\naccuracy_score(y_test, y_predict)","e35e7e73":"The highest number of customer contacts was 3 in the last 12 months.","9b25dd3d":"- There is no significant effect of Gender on Customer Attrition.\n- For customers who are no longer using a credit card, the Female Gender is 2.3% greater than Male Gender.\n- Comparison of the Male Gender Ratio for Attrition compared to 0.14.\n- Comparison of the Female Gender Ratio for Attrition compared to 0.17.","17545a7b":"There is no significant effect of Avg Open to Buy with Customer Attrition.","dca14cee":"### Random Over Sampling","edd59092":"- The distribution of the number of transactions between existing customers and all customers is not much different.\n- Distribution of the highest number of transactions to Attrited Customers in the range 35 - 45.","8401dc61":"- There is a tendency for attrited customers to have a credit limit of less than 1500.\n- There is no significant effect of Credit Limit on Attrition Customers.","d80409a4":"- Most existing customers use 36 months of usage.\n- Existing customers with the lowest usage, namely 13 months as many as 63 people.\n- Existing customers with the longest usage, namely 56 months as many as 86 people.","56184c75":"Terdapat outliers signifikan pada feature:\n1. Months_on_book\n2. Credit_Limit\n3. Avg_Open_To_Buy\n4. Total_Amt_Chng_Q4_Q1\n5. Total_Trans_Amt\n6. Total_Ct_Chng_Q4_Q1","068a5e11":"- Attrited customers as a whole from the age of 26 - 68 years.\n- Distribution of most attrited Bank Customers aged 40 - 54.\n- The highest number of Bank Customers at the age of 43 and 49 were 85 people and the lowest was at the ages of 28, 66, and 68 years at 1 person.","4327bced":"- Distribution of Dependent Counts for all Customer Banks from 0 -5.\n- The highest number is at 3 and the lowest is at 5.","8fc006ea":"- Existing customers as a whole from the age of 26 - 73 years.\n- The largest distribution of existing customers, aged 44 - 53.\n- The highest number of existing customers was at the age of 44 and 49 years as many as 416 people and the lowest was at the ages of 66, 68, 70, and 73 years as many as 1 person.","75735afd":"**Customer Age**\n* Customer_Age: Demographic variable - Customer's Age in Years","a8b62439":"# Summary","ccdc52d0":"**CARD CATEGORY**\n* Card_Category: Product Variable - Type of Card (Blue, Silver, Gold, Platinum)","96e2791e":"**Attrition Flag**\n* Attrition_Flag: Internal event (customer activity) variable - if the account is closed then 1(Attrited Customer) else 0(Existing Customer)","c3499dc6":"**Income Category**\n* Income_Category: Demographic variable - Annual Income Category of the account holder (< 40\ud835\udc3e, 40K - 60K, 60\ud835\udc3e\u2212 80K, 80\ud835\udc3e\u2212 120K,> $ 120K, Unknown)","631f457a":"- The highest number of customers using products, amounting to 3. In numbers 4, 5, and 6, the numbers were relatively similar.\n- The lowest customer uses 1 product.","2fe5bbe9":"## Pre Processing","a80d4dd4":"# Analysis","2f0d897d":"- There is no significant effect of Dependent Count on Customer Attrition.\n- The credit card customer with the highest amount of Attrition on Dependent Count 3 with a percentage of 4.76%.\n- Comparison of Dependent Count 0 ratio for Attrition compared to Existing ratio of 0.14.\n- Comparison of Dependent Ratio Count 1 for Attrition compared to Existing of 0.14.\n- Comparison of Dependent Ratio Count 2 for Attrition compared to Existing of 0.15.\n- Comparison of Dependent Count 3 Ratio for Attrition compared to Existing of 0.17.\n- Comparison of Dependent Count 4 Ratio for Attrition compared to Existing of 0.16.\n- Comparison of Dependent Count 5 ratio for Attrition compared to Existing ratio of 0.15.","7517564f":"The highest number of customers with a credit limit of around 1000, then the number significantly decreased to a limit of around 33000. Then the number increased quite rapidly on the credit limit of 33000 - 33500.","81a7c8b9":"## Numeric Data","a969897f":"*Define Model*\n- I use 4 models to predict:\n    * Logistic Regression\n    * Decision Tree Classifier\n    * K-Nearest Neighbor\n    * Random Forest","2fba2f47":"The number of Existing Customers in the Avg_Utilization_Ratio feature is higher than the Attrited Customers.","58bfd10e":"Distribution of Bank Customers who tend to be attrited in the largest age range from 43 - 46 years and 48 - 57 years. There is no significant effect.","2a391996":"**MONTH ON BOOK**\n* Period of relationship with bank","7f32124e":"**Months_Inactive_12_mon**\n* No. of months inactive in the last 12 months","30a7b606":"The distribution of Existing and Attrited has no significant difference with the distribution of the number of All Customers.","5733b164":"- The percentage distribution of Change in Transaction Count on Existing Customers and All Customers is not much different.\n- The percentage distribution of Change in Transaction Count on the highest attrited customers is in the range 0.4 - 0.6.","b3e2f8a0":"1. In Categorical feature, Attrition Customer is significantly lower than Existing Customer.\n2. Highest attrition number from each feature:\n    * GENDER\n        - The number of customers with the highest attrition in Feature Gender is female with a greater percentage of 2.3%. The Gender Female Ratio is also greater than Existing, with a value of 0.17. This figure is greater than the Male Gender for Attrition with a value of 0.14. However, this figure does not affect.\n    * EDUCATION LEVEL\n        - The number of customers with the highest attrition at the Feature Education Level is Graduate with a percentage of 4.81%. For Education Level, the ratio of subscribers to Attrition is more or less the same from High School to College levels. And, slowly there is an increase in the ratio from postgraduate to doctoral level.\n        - The increase in this ratio is because the numbers decrease when the Educational Level increases, so it cannot be said that a high ratio tends for greater Attrition. It needs to be seen from other aspects.\n    * MARITAL STATUS\n        - The number of customers with the highest attrition on the Feature Marital Status is Married with a percentage of 7% and Single at 6.6%. The ratio for Single is 0.16, Divorce and Unknown is 0.17. The ratio numbers for Single, Divorced, and Unknown is bigger than Married with a value of 0.15. So, the Single category has a bigger chance for Attrition, because the ratio is bigger than Married and with an amount that is not much different than Married.\n        - The tendency for Attrition in Marital Status Single can be triggered because they do not have more dependents than Married and Divorced ones.\n    * Income Category\n        - The number of subscribers with the highest attrition in the Feature Income Category is Less than 40k with a percentage of 6.04%. The higher the income category, the lower the number of Customers.\n        - The lowest attrition ratio in the Income Category is 60k-80k with a value of 0.18 compared to other categories.\n        - The income category ratio of 120k + is the same as Less than 40k with a value of 0.17, this ratio is the highest compared to other categories. The ratio at 120k + is high because the income level is the highest and the number is the least, therefore the attrition ratio is high even though the number of attractive customers is 4.8% different compared to Less than 40k.\n    * Card Category\n        - The number of subscribers with the highest Attrition in the feature Card Category is Blue, with a very large percentage of 15%, this figure is closer to the total of Attrition Customers of 16.07%.\n        - You could also say that the majority of Customer Attrition on Category Blue Cards.","89fe7972":"- There is no significant influence from Months Inactive 12 Months to Customer Attrition.\n- Credit card customers with the highest amount of Attrition on Months Inactive 12 Months in 3 Months with a percentage of 8.16%.\n- Comparison of the Ratio of Inactive 12 Months to 0 Months for Attrition compared to Existing of 0.51.\n- Comparison of the Ratio of Inactive 12 Months in 1 Month for Attrition compared to Existing at 0.04.\n- Comparison of the Ratio of Inactive 12 Months to 2 Months for Attrition compared to Existing at 0.15.\n- Comparison of the Ratio of Inactive 12 Months to 3 Months for Attrition compared to Existing of 0.21.\n- Comparison of the Ratio of Inactive 12 Months to 4 Months for Attrition compared to Existing of 0.29.\n- Comparison of the Ratio of Inactive 12 Months to 5 Months for Attrition compared to Existing at 0.18.\n- Comparison of the Ratio of Inactive 12 Months to 6 Months for Attrition compared to Existing at 0.15.","129179a2":"## Handling Imbalance","7971342e":"There are 21 columns without missing values.","1257ef7a":"- There is no significant effect of Marital Status on Customer Attrition, it can be seen in the graph that the proportion that is there is greater than Attribution in each category.\n- Credit card customers with the highest amount of attractiveness are married with a proportion of 7%.\n- Comparison of the Ratio of Marital Status to Attractiveness compared to the Existing is 0.15\n- Comparison of Single Status Marital Ratio for Attrition compared to the existing 0.17.\n- Comparison of the Ratio of Divorced Marital Status for Attrition compared to Existing at 0.16.\n- Comparison of Unknown Marital Status Ratio for Attrition compared to Existing 0.17.","a95ed0f4":"**DEPENDENT COUNT**\n* Dependent_count: Demographic variable - Number of dependents","1df745b6":"**Avg_Open_To_Buy**\n* Open to Buy Credit Line (Average of last 12 months)","7847ec0a":"There is a tendency for attrited customers to total transactions less than 2500 and in the range 7500 - 10500. However, the highest is less than 2500.","a74f1db1":"### Outliers Check","7c4ca21f":"**GENDER**\n*  Gender: Demographic variable - M=Male, F=Female","30c33dca":"- There is no significant effect of Educational Level on Customer Attrition.\n- Credit card customers with the highest number of Attrition at the Graduate Education level with a percentage of 4.81%.\n- Comparison of Education Unknown Ratio for Attrition compared to Existing of 0.16.\n- Comparison of High School Education Ratio for Attrition compared to Existing at 0.15.\n- Comparison of the ratio of Education Graduate to Attrition compared to Existing of 0.15.\n- Comparison of Education Uneducated Ratio for Attrition compared to Existing at 0.15.\n- Comparison of Education College Ratio for Attrition compared to Existing at 0.15.\n- Comparison of Education Post-Graduate Ratio for Attrition compared to Existing at 0.17.\n- Comparison of Education Doctorate Ratio for Attrition compared to Existing of 0.21. **Highest**","551fd0d0":"**Education Level**\n* Education_Level: Demographic variable - Educational Qualification of the account holder (example: high school, college graduate, etc.)","f2c9f0b9":"- Most customers use 36 months of usage.\n- Customers with the lowest usage, namely 13 months, as many as 70 people.\n- Customers with the longest usage, namely 56 months as many as 103 people.","688fabf6":"## Cross Validation","3ea85348":"- Bank customers as a whole from around 26 - 73 years of age.\n- The largest distribution of Bank Customers with ages 42 - 50.\n- The highest number of Bank Customers was at the age of 44 years as many as 500 people and the lowest was at the age of 70 and 73 years as many as 1 person.","293fab05":"- The distribution of the number of transactions between existing customers and all customers is not much different.\n- Distribution of the highest number of transactions on Attrited Customers in the amount of 2000 - 2500.","f66d120f":"The distribution of the highest number of transactions is in the range 4000 - 4500.","c7c77417":"**Total_Ct_Chng_Q4_Q1**\n* Change in Transaction Count (Q4 over Q1)","9e32cad8":"The highest number of customers. Revolving balance in the range 0-100. ","011ac4b1":"Customers with the highest number of months of inactivity were 3 in the last 12 months.","41d9a762":"**Marital Status**\n* Marital_Status: Demographic variable - Married, Single, Divorced, Unknown","225b6c5d":"In numeric features, there are several features that have a greater positive correlation than other features on the Attrition Flag, namely:\n1. Total_Revolving_Bal\n2. Total_Trans_Amt\n3. Total_Trans_Ct\n4. Total_Ct_Chng_Q4_Q1\n5. Avg_Utilization_Ratio","8dc85188":"**Total_Revolving_Bal**\n* Total Revolving Balance on the Credit Card","68d23933":"**DATA CLEANING**","e706b364":"Preprocessing Scheme\n- OneHot: Gender, Education_Level, Marital_Status, Income_Category, Card_Category\n- Min Max Scaller: Months_on_book, Credit_Limit, Avg_Open_To_Buy, Total_Amt_Chng_Q4_Q1, Total_Trans_Amt, Total_Ct_Chng_Q4_Q1 \n- Passthrogh: 'Customer_Age', 'Dependent_count', 'Total_Relationship_Count', 'Months_Inactive_12_mon', 'Contacts_Count_12_mon' ,'Total_Revolving_Bal', 'Total_Trans_Ct', 'Avg_Utilization_Ratio'","206abecb":"There are 16.07% of customers who have stopped credit card services and 83.93% of customers who still use credit card services.","197c000c":"1. Total Revolving Balance\n    - Difference between Credit Limit and Average Open to Buy. This means that the remaining debt from borrowing that has not been paid each month, in 12 months with a monthly average of less than 750 is more likely for Attrition.\n    - I hypothesize that users who have a small Revolving Balance every month do not tend to use it according to the portion. Users with income levels according to their daily needs. So, users with stable income like this feel disadvantaged by using credit cards with interest rates, so they tend to quit or move to other banks with lower interest rates.\n    \n2. Total Transaction Amount\n    - High Customer Attrition on the number of transactions less than 2500 dollars per customer on average in the last 12 months. These customers feel that they rarely use credit cards which makes them more likely to stop.\n\n3. Total Transaction Count\n    - High Customer Attrition on the number of transactions less than 50 times per customer in the last 12 months. These customers feel that they rarely use credit cards which makes them more likely to stop.\n    \n4. Change in Transaction Count (Q4 over Q1)\n    - Change in Transaction Count is the ratio of the increase in the use of the number of credit cards compared to each quarter, the highest Customer Attrition with a value of less than 0.5. This means that there is no change in the number of credit card uses every quarter.\n\n5. Average Utilization Ratio\n    - This feature explains the ratio of how useful the credit card is for its customers. The highest attrition ratio is at less than 0.05. Visibility means low customer usage can trigger Attrition.\n    ","88debe0f":"## Modeling Data","c0bbbd61":"The highest total transactions of All Customers, on average, are 60-80 times.","8b6318f1":"**Total_Trans_Amt**\n* Total Transaction Amount (Last 12 months)","8e5129bc":"From this method, we get the highest recall value on the Decision Tree Classifier and Random Forest Classifier.","0039d0c2":"### Random Under Sampling","3b4adefb":"From All Customers, there are 52.91% with Female gender and 47.09% with Male gender, this figure is balanced.","ff4b2c6e":"This project describes the demographic analysis of customers who stop using credit card services at a bank and predicts customers who will stop using credit card services. From the results that I did, I can predict with a Recall Score 95% and Accuracy Score 93%.","01e1ca4c":"## Categorical Data","01ae7d98":"Average Card Utilization Ratio 0.1 tends to Attrition.","61478f89":"- There is no significant effect of Marital Status on Customer Attrition.\n- Credit card customers with the highest amount of traction at Less than $40k with a proportion of 6.04%.\n\n- Comparison of Category Revenue Ratio of Less than $40k for Attrition compared to Existing of 0.17.\n- Comparison of 40k-60k Category Income Ratio for Attrition compared to Existing at 0.15.\n- Comparison of 60k-80k Category Income Ratio for Attrition compared to Existing at 0.13.\n- Comparison of 80k-120k Category Income Ratio for Attrition compared to Existing at 0.15.\n- Comparison of 120k + Category Income Ratio for Attrition compared to Existing at 0.17.","c29fab06":"The highest number of customers with Change in Transaction Count Q4 over Q1 at the percentage of 0-0.75%, then there is a decrease in the number of the percentage. However, there is no minus percentage, meaning that there is no decrease in transactions each year.","8126869a":"- There is no significant impact from Contacts Count 12 Months on Customer Attrition.\n- The credit card customer with the highest number of interests in the Contacts Count 12 Months at 3 with a percentage of 6.72%.\n- Comparison of the Ratio of Contacts Count for 12 Months at 0 for Attrition compared to Existing at 0.17.\n- Comparison of the Ratio of Contacts Count for 12 Months at 1 for Attrition compared to Existing at 0.07.\n- Comparison of the Ratio of Contacts Count 12 Months at 2 for Attrition compared to Existing at 0.12.\n- Comparison of the Ratio of Contacts Count 12 Months at 3 for Attrition compared to Existing at 0.20.\n- Comparison of the Ratio of Contacts Count for 12 Months at 4 for Attrition compared to Existing at 0.22.\n- Comparison of the Ratio of Contacts Count 12 Months at 5 for Attrition compared to Existing at 0.33.\n- Comparison of the Ratio of Contacts Count for 12 Months at 6 for Attrition compared to Existing at 1.","6ead6fb5":"There is no significant effect of Customer Age on Customer Attrition.","5293e66d":"## Hyperparameter Tunning","8b8c5dc7":"### Numerical Features","04c95845":"There is an effect of Change in Transaction Amount (Q4 over Q1) at a percentage of 0 - 0.5% and 1 - 1.2%.","f4b8a0c7":"**Total_Amt_Chng_Q4_Q1**\n* Change in Transaction Amount (Q4 over Q1)","4d12b217":"- There is no significant effect from the Card Category on Customer Attrition.\n- The credit card customer with the highest amount of Attrition on the Blue Card with a percentage of 15%.\n- Comparison of Card Category Blue Ratio for Attrition compared to Existing of 0.16.\n- Comparison of Card Category Silver Ratio for Attrition compared to Existing of 0.14.\n- Comparison of Card Category Gold Ratio for Attrition compared to Existing at 0.18.\n- Comparison of Card Category Platinum Ratio for Attrition compared to Existing of 0.25.","95be59d4":"Recall Score Random Forest Classifier UnderSampling naik menjadi 0.950820 dari sebelumnya 0.790984.","8849b4f7":"**Total Relationship Count**\n* Total number of products held by the customer.","3d654b1d":"Because of the imbalanced data, now we try handling with Under Sampling and Over Sampling.","935aa5b3":"**Total_Trans_Ct**\n* Total Transaction Count (Last 12 months)","b1461aa9":"Existing Customer dan Attrited Customer jumlah tertinggi pada range 0-100.","6b71fe70":"### Categorical Features","ace99b6e":"There is a tendency for attracted customers to total transactions of less than 55.","323aad3f":"There is a tendency for attracted customers to have a revolving balance in the range 0 - 500.","3f28ac17":"From the information, we should drop last two columns.","673abe5d":"- There is no significant effect of the Total Relationship Count on Customer Attrition.\n- Credit card customers with the highest number of Attrition on Total Relationship Count 3 with a percentage of 3.95%.\n- Comparison of Count 1 Total Relationship Ratio for Attrition compared to Existing of 0.25.\n- Comparison of Count 2 Total Relationship Ratio for Attrition compared to Existing of 0.27.\n- Comparison of Total Relationship Count 3 ratio for Attrition compared to Existing ratio of 0.17.\n- Comparison of Total Relationship Count 4 for Attrition compared to Existing ratio of 0.11.\n- Comparison of Total Relationship Count 5 ratio for Attrition compared to Existing ratio of 0.12.\n- Comparison of Total Relationship Count 6 for Attrition compared to Existing ratio of 0.10.","3c5e9968":"**Contacts_Count_12_mon**\n* No. of Contacts in the last 12 months","a695313d":"From the analysis I have done, it can be concluded that the majority of users and the majority of Attrition are:\n1. Level of education from high school to S1.\n2. Marital Status Married and Single.\n3. Income Category Less Than 40 dollars.\n4. Card Category Blue.\n5. The highest age ranges from 37 to 59 years.\n6. Number of dependents 2 and 3.\n7. Highest card usage for 36 months.\n8. Highest customers use 3 products.\n9. Customers are not actively using the card for a maximum of 3 months.\n10. And the lack of a card usage ratio in daily activities.\n\nFrom the existing problems, we can take the solution to suppress the Attrition Customer number:\n1. Expand the use of credit cards, especially for Category Blue cards from a wider variety of sectors, marketplaces, various merchants, property, health, education, transportation, and others. Create a promotion that can generate interest in using a credit card. In this way, the ratio of credit card usage automatically makes customers think again when they stop using it.\n2. Make a requirement if the card is not used at all in 2 months, an administration fee will be charged.\n3. Make the requirements again if you have subscribed to a credit card and if you stop later, the promos that the old customers get will not be valid again when registering again.","7ead3a9f":"## General Summary and What Solution maybe that I can Help","4d5e7c96":"**Credit_Limit**\n* Credit Limit on the Credit Card","26fbec46":"- Most attrated customers use 36 months of usage.\n- Attrited Customers with the lowest usage, namely 13 months, as many as 7 people.\n- Attrited Customers with the longest usage, which is 56 months, totaling 17 people.","838c6a95":"Recall score after tuning is lower than before tuning.","45cece6b":"First we drop Clientinum feature.","ddf65880":"* Attrited Customers = 1\n* Existing Customers = 0\n\n* * 0 = Keep Use *\n* * 1 = Off *\n\n         - TN: Some customers are predicted with Keep Use and in fact Off\n         - TP: Some customers are predicted to be Off and in fact, it is Off\n         - FP: Some customers are predicted to be Off, even though it's Keep Use\n         - FN: Some customers are predicted to use Keep Used even though it is Off\n\nAction:\n* FP: The wrong prediction, it doesn't matter what\n* FN: The company loses due to the loss of customers\n\n-> What will be pressed is FN, recall","c8fadf4f":"The highest number of customers with Change in Transaction Q4 over Q1 is at the percentage of 0-0.75%, then there is a decrease in the number of the percentage. However, there is no minus percentage, meaning that there is no decrease in transactions each year.","af1b3f12":"The number of Customers Open to Buy within 12 months has increased in the range of 0-2500. Then there was a significant decline to the range 32000, after that there was an increase back to the range 34500.","69dd109e":"- Existing Customer distribution is no different from All Customers.\n- Attrited Customer increases in the range 0-3500. Then there was a significant decline to the range 32000, after that there was an increase back to the range 34500.\n- The number of Existing Customers is more than Attrited Customers.","a57a3cc3":"There is a tendency for attracted customers to have a Change in Transaction Count percentage of less than 0.5.","eac67c64":"## Split Data","45f5d98a":"**Avg_Utilization_Ratio**\n* Average Card Utilization Ratio","8ac02d58":"# EDA"}}