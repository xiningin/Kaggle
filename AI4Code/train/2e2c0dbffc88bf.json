{"cell_type":{"8dac4911":"code","fe07946a":"code","aa752011":"code","9df466b9":"code","c82b7894":"code","dc419ead":"code","d5fab9b2":"code","92c7a13a":"code","df04419b":"code","5ced9b95":"code","589241ef":"code","0531b0d6":"code","2bb285eb":"code","a99e2032":"code","64769d65":"code","e97e594f":"code","c0ca5037":"code","f6df0207":"code","caa53980":"code","a5f6539e":"code","b9e8cdbe":"code","1ef9367f":"code","d584ea86":"code","8e7f8a2d":"code","1fa1155c":"code","4ec4ba47":"code","34deb3d0":"code","56458468":"code","3a2c7cfa":"code","d6da98b9":"code","1711be74":"code","9b320b97":"code","dfe56cb5":"code","fa6ec224":"code","a754a15f":"code","eefec2a4":"code","57ef4d9c":"code","a61405cc":"code","cfa78247":"markdown","c469fd26":"markdown","c8717f6f":"markdown","e751fa58":"markdown","62802b82":"markdown","76b329ea":"markdown","908176c9":"markdown","e3940704":"markdown","f2299448":"markdown","5a958190":"markdown","f12b1902":"markdown","c896fe0f":"markdown","9174f580":"markdown","2d75c78d":"markdown"},"source":{"8dac4911":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport math\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","fe07946a":"df_train = pd.read_csv('..\/input\/train.csv')","aa752011":"df_test = pd.read_csv('..\/input\/test.csv')","9df466b9":"df_train.head(10)","c82b7894":"df_train.info()","dc419ead":"df_train.describe()","d5fab9b2":"df_train['LotFrontage'] = df_train['LotFrontage'].fillna(df_train['LotFrontage'].mean())\ndf_train['MasVnrArea'] = df_train['MasVnrArea'].fillna(df_train['MasVnrArea'].mean())\ndf_train['GarageYrBlt'] = df_train['GarageYrBlt'].fillna(df_train['GarageYrBlt'].mean())","92c7a13a":"df_test['LotFrontage'] = df_test['LotFrontage'].fillna(df_test['LotFrontage'].mean())\ndf_test['MasVnrArea'] = df_test['MasVnrArea'].fillna(df_test['MasVnrArea'].mean())\ndf_test['GarageYrBlt'] = df_test['GarageYrBlt'].fillna(df_test['GarageYrBlt'].mean())","df04419b":"# Repartition of the sale price\n\nsns.distplot(df_train['SalePrice']);","5ced9b95":"sns.distplot(np.log1p(df_train['SalePrice']));","589241ef":"cor_mat = df_train[:].corr()\nmask = np.array(cor_mat)\nmask[np.tril_indices_from(mask)] = False\nfig = plt.gcf()\nfig.set_size_inches(80,15)\nsns.heatmap(data=cor_mat, mask=mask, square=True, annot=True, cbar=True);","0531b0d6":"var = 'OverallQual'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nsns.boxplot(x=var, y=\"SalePrice\", data=data);","2bb285eb":"var = 'GrLivArea'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nplt.xlabel('GrLivArea')\nplt.ylabel('SalePrice')\nplt.scatter(x=var, y=\"SalePrice\", data=data);","a99e2032":"df_train = df_train[df_train['GrLivArea'] < 4000]","64769d65":"var = 'GarageCars'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nsns.boxplot(x=var, y=\"SalePrice\", data=data);","e97e594f":"var = 'GarageArea'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nplt.xlabel('GarageArea')\nplt.ylabel('SalePrice')\nplt.scatter(x=var, y=\"SalePrice\", data=data);","c0ca5037":"var = 'TotalBsmtSF'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice');","f6df0207":"df_train = df_train[df_train['TotalBsmtSF'] < 3000]","caa53980":"var = '1stFlrSF'\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice');","a5f6539e":"df_train = df_train[df_train['1stFlrSF'] < 3000]","b9e8cdbe":"X = df_train.drop(columns= ['SalePrice', 'Alley', 'MasVnrType', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Electrical', 'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PoolQC', 'Fence', 'MiscFeature'])\nX_test_true = df_test.drop(columns= [ 'Alley', 'MasVnrType', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Electrical', 'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PoolQC', 'Fence', 'MiscFeature'])\ny = np.log1p(df_train['SalePrice'])\nX.shape, X_test_true.shape, y.shape","1ef9367f":"import xgboost as xgb\n\nfrom sklearn.model_selection import train_test_split,KFold, GridSearchCV, cross_val_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import Imputer, RobustScaler","d584ea86":"one_hot_encoded_training_predictors = pd.get_dummies(X)\none_hot_encoded_test_predictors = pd.get_dummies(X_test_true)\nX, X_test_true = one_hot_encoded_training_predictors.align(one_hot_encoded_test_predictors, join='inner', axis=1)\nX.shape, X_test_true.shape","8e7f8a2d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.25, random_state=9000)\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","1fa1155c":"kf = KFold(n_splits=5, random_state=42)","4ec4ba47":"imputer = Imputer()\nrb = RobustScaler()\nxgbr = xgb.XGBRegressor()","34deb3d0":"pipe = Pipeline([('imputer', imputer), ('rb', rb), ('xgbr', xgbr)])","56458468":"pipe.get_params().keys()","3a2c7cfa":"param_grid = {'imputer__strategy' : ['median', 'mean'],\n              'xgbr__n_estimators' : [750, 1000],\n              'xgbr__learning_rate' : [0.03, 0.04, 0.05]\n               }","d6da98b9":"gs = GridSearchCV(pipe, param_grid=param_grid, cv=kf, verbose=3)","1711be74":"gs.fit(X_train, y_train)","9b320b97":"gs.best_params_","dfe56cb5":"best_model = gs.best_estimator_\nbest_model.fit(X_train, y_train)","fa6ec224":"y_predic = np.exp(best_model.predict(X_test))","a754a15f":"mse_scores = -cross_val_score(best_model, X_train, y_train, cv=kf, scoring='neg_mean_squared_log_error')\nrmse_scores = mse_scores**0.5","eefec2a4":"rmse_scores.mean(), rmse_scores.std()","57ef4d9c":"predicted_prices = np.expm1(best_model.predict(X_test_true))","a61405cc":"my_submission = pd.DataFrame({'Id': X_test_true.Id, 'SalePrice': predicted_prices})\nmy_submission.to_csv('submission.csv', index=False)","cfa78247":"   ## Data cleaning \n  ","c469fd26":"** Split Data **","c8717f6f":"** Implementation of a pipe **","e751fa58":"There are 4 outliers, we delete them to improve our machine learning model ","62802b82":"It exists high correlation between SalePrice and OverallQual, GrLivArea, GarageCars, GarageArea, TotalBsmtSF, 1stFlrSF","76b329ea":"There are 3 outliers above 3000","908176c9":"One outlier above 3000","e3940704":"** Conclusion : ** We are going to make our predicions on log(y)","f2299448":"**One hot encoded values **","5a958190":"** Implementation of a GridSearch ** ","f12b1902":"** Comment ** : the repartition is right-skewed, we try to reach a normal distribution ","c896fe0f":"# Quick EDA ","9174f580":"## Machine Learning Models ","2d75c78d":"** Missing values **: LotFrontage, Alley, MasVnrType, MasVnrArea, BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2,Eletrical, FireplaceQu, GarageType, GarageYrBlt, GarageFinish, GarageQual, GarageCond, PoolQC, Fence, MiscFeature "}}