{"cell_type":{"725110c1":"code","9eaf8fe4":"code","2edc3656":"code","5c081055":"code","6ec8aaaa":"code","2c7bb218":"code","399ee34b":"code","649dc68d":"code","c8cb3a3c":"code","f587848e":"code","9e680ec7":"code","17b91ff7":"code","20baf866":"code","ae216ad6":"code","1e8a1377":"code","025e3f75":"code","201edbdc":"code","142c3231":"code","c77f1b35":"code","f55e721f":"code","51b65b7f":"code","cd92b869":"code","72619d03":"code","a5212811":"code","a93cbb98":"code","9d3ef760":"code","e11d7ff0":"code","de83fe04":"code","7945a5be":"code","edbfb681":"code","c9d85bcc":"markdown","3fe86ffe":"markdown","29659dfd":"markdown","94617d67":"markdown","c7be572f":"markdown","05e8ee5f":"markdown","e3e34a5b":"markdown","c11fb309":"markdown","c165dee6":"markdown","0c8faf42":"markdown","eb69fb89":"markdown"},"source":{"725110c1":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","9eaf8fe4":"%time\nfrom fastai.vision.all import *\nfrom fastprogress.fastprogress import progress_bar\nimport shutil","2edc3656":"INPUT_DIR = Path(\"..\/input\/digit-recognizer\")\nINPUT_DIR.ls()\nWORKING_DIR = Path(\".\/\")\nTRAINING_DATA = WORKING_DIR \/ 'train'\nTESTING_DATA = WORKING_DIR \/ 'test'","5c081055":"train_df = pd.read_csv(INPUT_DIR \/ 'train.csv')\ntest_df = pd.read_csv(INPUT_DIR \/ 'test.csv')","6ec8aaaa":"train_df.head()","2c7bb218":"Y_train = train_df[\"label\"]\nX_train = train_df.drop(\"label\", axis=1)","399ee34b":"X_train = X_train.values.reshape(-1, 28, 28)\nX_test = test_df.values.reshape(-1, 28, 28)","649dc68d":"plt.imshow(X_train[0], cmap=\"gray\")","c8cb3a3c":"filenames = list(Y_train.index)\ncategory = list(Y_train)","f587848e":"for name, digit, image in progress_bar(list(zip(list(Y_train.index), category, X_train))):\n    file_dir = TRAINING_DATA \/ str(digit)\n    file_dir.mkdir(parents=True, exist_ok=True)\n    file_name = f'{name}.png'\n    file_path = file_dir \/ file_name\n#     print(image.shape)\n    plt.imsave(file_path, image)","9e680ec7":"for name, image in progress_bar(list(zip(list(test_df.index), X_test))):\n    file_dir = TESTING_DATA\n    file_dir.mkdir(parents=True, exist_ok=True)\n    file_name = f'{name}.png'\n    file_path = file_dir \/ file_name\n#     print(image.shape)\n    plt.imsave(file_path, image)","17b91ff7":"batch_tfms = [*aug_transforms(do_flip=False,), Normalize.from_stats(*imagenet_stats)]\nmetrics = [accuracy]\nbs = 128","20baf866":"dls = ImageDataLoaders.from_folder(TRAINING_DATA, valid_pct=0.2, batch_tfms=batch_tfms, bs=bs)\ndls.show_batch()","ae216ad6":"learn = cnn_learner(dls, resnet34, metrics=metrics, loss_func=CrossEntropyLossFlat())","1e8a1377":"lrs = learn.lr_find()","025e3f75":"lrs","201edbdc":"cbs = [\n    GradientAccumulation(),\n    MixedPrecision(),\n    SaveModelCallback(monitor='accuracy', comp=np.greater, min_delta=0.001),\n    ReduceLROnPlateau(monitor='accuracy', comp=np.greater, min_delta=0.001, patience=2),\n#     MixUp(0.4),\n    EarlyStoppingCallback(monitor='accuracy', comp=np.greater, min_delta=0.001, patience=3),\n      ]","142c3231":"learn.fine_tune(15, lrs.lr_min, cbs=cbs)","c77f1b35":"%time\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","f55e721f":"%time\ninterp.plot_top_losses(8, nrows=2)","51b65b7f":"SAMPLE_SUBMISSION = pd.read_csv(INPUT_DIR \/ 'sample_submission.csv')","cd92b869":"SAMPLE_SUBMISSION.head()","72619d03":"test_images = list(Path(r'.\/test').glob('**\/*'))\ntest_dl = dls.test_dl(test_images)","a5212811":"preds = learn.get_preds(dl=test_dl, with_decoded=True)\npreds = preds[2].tolist()","a93cbb98":"ids = [int(img.stem) + 1 for img in test_images]","9d3ef760":"submission = pd.DataFrame(ids, columns=['ImageId'])","e11d7ff0":"submission['Label'] = preds","de83fe04":"submission","7945a5be":"submission.to_csv(\"submission.csv\",index=False)","edbfb681":"shutil.rmtree(TRAINING_DATA)\nshutil.rmtree(TESTING_DATA)","c9d85bcc":"# A fastai implementation for the famous MNIST handwritten digit dataset","3fe86ffe":"# Convert CSV to images","29659dfd":"# Move files into directory to make using fastai factory methods easier","94617d67":"# Remove Images\n\nFor some reason I can't make a submission from the notebook without deleting all of the saved training and test data files first.","c7be572f":"# Evaluate Results","05e8ee5f":"In this knowledge contest, we are trying to predict the number of the handwritten digit.","e3e34a5b":"**Version History**\n* *Version 1* - Getting the notebook setup, importing basic modules, reading the dataset, building a simple model, evaluate results, no submission\n* *Version 2* - Adding submisson, and callbacks\n* *Version 3* - removed MixUp callback\n* *Version 4* - cleaned up code, CrossEntropyLoss\n* *Version 5* - removed training and testing images from output\n* *Version 6* - Increased training epochs\n* *Version 7* - Adding Mixed presision callbacks (Final submission?)\n* *Version 8* - Editting and updating","c11fb309":"# Setup","c165dee6":"## Background\n\nI've tried to pull together a lot of the techniques I've used and seen other use.\n\nI feel like if I ran this notebook enough times, I'd eventually find a model that would get perfect accuracy but obviously I'm just overfitting to score super high on the test set\n\n### For beginners forking this notebook\n\nI highly suggest for anyone interested in solving problems like this to look into the course by Sylvain Gugger and Jeremy Howard. They spent a lot of time building `fastai` into a great library for accessing the latest deep learning techniques.\n\n[Practical Deep Learning for Coders](https:\/\/course.fast.ai\/)","0c8faf42":"# Model","eb69fb89":"# Submission"}}