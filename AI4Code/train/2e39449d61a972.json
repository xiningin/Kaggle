{"cell_type":{"747b1db1":"code","05b4cfa7":"code","2620121e":"code","b44aae8d":"code","c495513d":"code","d4568b2b":"code","47c46847":"code","8467bd08":"code","351917ef":"code","2958e475":"code","21e26e36":"code","1becb1fb":"code","a469ed54":"code","041f57af":"code","3e1027b4":"code","8f3ff23e":"code","a15325e7":"code","a3f3a1c2":"code","11e800db":"code","b0c3073c":"code","db10ed34":"code","726aa59b":"code","30c5b416":"code","ad055551":"code","bbe1fba9":"code","0a1bdd6a":"code","63345381":"code","dba57a09":"markdown","37a35be5":"markdown","0d45ac63":"markdown","67d9a931":"markdown","7dda2e1a":"markdown","eb5fc720":"markdown"},"source":{"747b1db1":"#import library\nimport numpy as np\nimport math\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso\nfrom sklearn import metrics","05b4cfa7":"df = pd.read_csv('..\/input\/fifa-football-world-cup-dataset\/FIFA - World Cup Summary.csv')","2620121e":"df.shape","b44aae8d":"df.head()","c495513d":"df.columns","d4568b2b":"#describe of variable\ndf.describe()","47c46847":"#info of variable\ndf.info()","8467bd08":"#correlation of variable\ndf.corr()","351917ef":"#visualize of correlation variable using pearson correlation\nplt.figure(figsize = (8,6))\nsns.heatmap(df.corr(), annot = True, cmap = 'viridis')\nplt.title('Pearson Correlation', fontsize = 15, pad = 12, color = 'b')\nplt.show()","2958e475":"#analyze count of teams based on host, champion, runner up and third place team\npd.pivot_table(df, index = ['HOST', 'CHAMPION', 'RUNNER UP', 'THIRD PLACE'], values = 'TEAMS', aggfunc = {'TEAMS' : np.sum}).sort_values('TEAMS', ascending = False)","21e26e36":"#analyze average of matches played based on host, champion, runner up third place team\npd.pivot_table(df, index = ['HOST', 'CHAMPION', 'RUNNER UP', 'THIRD PLACE'], values = 'MATCHES PLAYED',\n              aggfunc = {'MATCHES PLAYED' : np.mean}).sort_values('MATCHES PLAYED', ascending = False)","1becb1fb":"#analyze count of goal score based on host, champion, runner up and third place team\npd.pivot_table(df, index = ['HOST', 'CHAMPION', 'RUNNER UP', 'THIRD PLACE'], values = 'GOALS SCORED', \n              aggfunc = {'GOALS SCORED' : np.sum}).sort_values('GOALS SCORED', ascending = False)","a469ed54":"#analyze average of goal per game based on host, champion, runner up and third place team\npd.pivot_table(df, index = ['HOST', 'CHAMPION', 'RUNNER UP', 'THIRD PLACE'], values = 'AVG GOALS PER GAME',\n              aggfunc = {'AVG GOALS PER GAME' : np.mean}).sort_values('AVG GOALS PER GAME', ascending = False)","041f57af":"#analyze the factor of average goals per game\nchart = df.boxplot(column = ['TEAMS', 'MATCHES PLAYED', 'GOALS SCORED', 'AVG GOALS PER GAME'])\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title('The Factor of Average Goals per Game', fontsize = 15, pad = 12, color = 'b')\nplt.xlabel('Factors')\nplt.ylabel('Count')\nplt.show()","3e1027b4":"#visualize count of team based on champion team\nchart = df.groupby('CHAMPION')['TEAMS'].sum().sort_values(ascending = False).plot(kind = 'bar', color = 'salmon')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title('Count of Team based on Champion Team', fontsize = 15, pad = 12, color = 'b')\nplt.xlabel('Champion Team')\nplt.ylabel('Count of Team')\nplt.show()","8f3ff23e":"#visualize count of goals scored based on champion team\nchart = df.groupby('CHAMPION')['GOALS SCORED'].sum().sort_values(ascending = False).plot(kind = 'bar', color = 'darkorange')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title('Count of Goals Score based on Champion Team', fontsize = 15, pad = 12, color = 'g')\nplt.xlabel('Champion Team')\nplt.ylabel('Count of Goals Score')\nplt.show()","a15325e7":"#distribution of each variable\ndf.hist(figsize = (12,10), color = 'royalblue')\nplt.show()","a3f3a1c2":"#handling categorical data\ndf = pd.get_dummies(df, drop_first = True)\ndf.head()","11e800db":"#split data\nX = df.drop('AVG GOALS PER GAME', axis = 1)\ny = df['AVG GOALS PER GAME']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","b0c3073c":"#Linear Regression\nlr = LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","db10ed34":"#Ridge Regression\nridge = Ridge(alpha = 0.5)\n%time ridge.fit(X_train, y_train)\nridge.score(X_test, y_test)","726aa59b":"#Lasso Regression\nlasso = Lasso(alpha = 0.5)\n%time lasso.fit(X_train, y_train)\nlasso.score(X_test, y_test)","30c5b416":"#prediction\ny_pred = ridge.predict(X_test)\nprint(y_pred)","ad055551":"#check MAE, MSE and RMSE\nprint('Mean Absolute Error :', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error :', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error :', math.sqrt(metrics.mean_squared_error(y_test, y_pred)))","bbe1fba9":"#visualize model\nx = y_test\ny = y_pred\n\nplt.title('Ridge Regression Model', fontsize = 15, color = 'g', pad = 12)\nplt.plot(x, y, 'o', color = 'r')\n\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m * x + b, color = 'darkblue')\nplt.xlabel('Actual')\nplt.ylabel('Predicted')\nplt.show()","0a1bdd6a":"#defining feature\ncoef = pd.Series(ridge.coef_, index = X.columns)\n\nimp_coef = pd.concat([coef.sort_values().head(10),\n                     coef.sort_values().tail(10)])","63345381":"#visualize feature\nplt.figure(figsize = (8,5))\nimp_coef.plot(kind = 'barh', color = 'navy')\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","dba57a09":"# Exploratory Data Analysis (EDA)","37a35be5":"# Check Feature Importance","0d45ac63":"Ridge Regression is very suitable model to predict average goals per game from Football World Cup because has good accuracy score on 86%","67d9a931":"# Data Extraction","7dda2e1a":"# Regression Model","eb5fc720":"# Team Prediction Goals per Game"}}