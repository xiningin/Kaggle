{"cell_type":{"0eafbf05":"code","644d0890":"code","996c1b91":"code","7b8cae01":"code","09475205":"code","51c0e820":"code","40e57c70":"code","261b60e7":"markdown"},"source":{"0eafbf05":"#!\/usr\/bin\/env -S \/usr\/bin\/python3.8 -m poetry run python\n# pylint: disable=import-outside-toplevel, wrong-import-order\nfrom collections import Counter\nfrom typing import List, Iterator, Optional\nimport pandas as pd\nimport numpy as np","644d0890":"def scale(vectors: pd.DataFrame, cosine=False) -> pd.DataFrame:\n    if \"labels\" in vectors:\n        labels = vectors[\"labels\"]\n        vectors = vectors.loc[:, vectors.columns != \"labels\"]\n    from sklearn.manifold import MDS\n    if cosine:\n    # i thought word2vec was optimized for cosine similarity but that doesn't seem be as useful\n        from sklearn.metrics.pairwise import cosine_similarity\n        dissimilarity = cosine_similarity(vectors)\n        scaler = MDS(n_components=2, dissimilarity=\"precomputed\")\n        scaled = scaler.fit_transform(dissimilarity)\n    else:\n        scaler = MDS(n_components=2)\n        scaled = scaler.fit_transform(vectors)\n    df = pd.DataFrame(scaled, columns=[\"x\", \"y\"])\n    df[\"labels\"] = labels\n    return df\n","996c1b91":"def plot(df: pd.DataFrame) -> None:\n    from plotnine import ggplot, aes, geom_point\n    from matplotlib import use\n\n    fig = ggplot(df, aes(x=\"x\", y=\"y\", color=\"collapsed_labels\")) + geom_point()\n    fig.save(\n        \"experience_report_dissimilarity_by_category.png\", width=10, height=10\n    )\n    #use(\"TkAgg\")\n    fig.draw()\n    return fig","7b8cae01":"report_vectors = pd.read_csv(\"..\/input\/erowid-experience-report-word2vec-vectors\/report_vectors.csv\")","09475205":"report_vectors_2d = scale(report_vectors)\nreport_vectors_2d.to_csv(\"\/kaggle\/working\/report_vectors_2d.csv\")","51c0e820":"collapse = True # necessary only if common=None\nif collapse:\n     label_counts = Counter(report_vectors_2d[\"labels\"])\n     kept_labels = next(zip(*label_counts.most_common(15)))\n     report_vectors_2d[\"collapsed_labels\"] = [\n        label if label in kept_labels else \"other\"\n        for label in report_vectors_2d[\"labels\"]\n     ]\nelse:\n    report_vectors_2d[\"collapsed_labels\"] = report_vectors_2d[\"labels\"]","40e57c70":"plot(report_vectors_2d)","261b60e7":"This is weird and not at all the result I got locally, but w\/e, it's a proof of concept"}}