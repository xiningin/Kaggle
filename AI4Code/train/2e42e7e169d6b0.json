{"cell_type":{"d995921b":"code","1c794667":"code","779dd129":"code","606a5fa8":"code","13e742b6":"code","3d2713ec":"code","f7e514dd":"code","e0302ea3":"code","4bb31121":"code","6de506a8":"markdown","8e95a9be":"markdown","6725d0a5":"markdown","e03ff356":"markdown","744bfb20":"markdown","61c23b43":"markdown","cd31be5e":"markdown"},"source":{"d995921b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pp\nimport seaborn as sns\n%matplotlib inline","1c794667":"df = pd.read_csv('..\/input\/iris\/Iris.csv')","779dd129":"df.head()","606a5fa8":"df.isnull().sum()","13e742b6":"pp.ProfileReport(df)\n","3d2713ec":"X = df.drop('Species',axis=1)\ny = df['Species']","f7e514dd":"from sklearn.model_selection import train_test_split\n\n#Splitting data\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=44, shuffle =True)\n\n#Splitted Data\n#print('X_train shape is ' , X_train.shape)\n#print('X_test shape is ' , X_test.shape)\n#print('y_train shape is ' , y_train.shape)\n#print('y_test shape is ' , y_test.shape)","e0302ea3":"from sklearn.ensemble import GradientBoostingClassifier\n\nGBCModel = GradientBoostingClassifier(n_estimators=100,max_depth=3,random_state=33) \nGBCModel.fit(X_train, y_train)\n\n#Calculating Details\nprint('GBCModel Train Score is : ' , GBCModel.score(X_train, y_train))\nprint('GBCModel Test Score is : ' , GBCModel.score(X_test, y_test))\n#print('GBCModel features importances are : ' , GBCModel.feature_importances_)\n#print('----------------------------------------------------')\n\n#Calculating Prediction\ny_pred = GBCModel.predict(X_test)\ny_pred_prob = GBCModel.predict_proba(X_test)\n#print('Predicted Value for GBCModel is : ' , y_pred[:10])\n#print('Prediction Probabilities Value for GBCModel is : ' , y_pred_prob[:10])","4bb31121":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nCM = confusion_matrix(y_test, y_pred)\nprint('Confusion Matrix is : \\n', CM)\n\n# drawing confusion matrix\nsns.heatmap(CM, center = True,cmap='PuBu')\nplt.show()","6de506a8":"# Train Test Split\nSplit your data into a training set and a testing set.","8e95a9be":"# Read the dataset\n","6725d0a5":"# Applying GradientBoostingClassifier Model \n","e03ff356":"# Import the libraries","744bfb20":"# Calculating Confusion Matrix","61c23b43":"# Let\u2019s See The Magic!","cd31be5e":"# The Data\nFor this series of lectures, we will be using the famous Iris flower data set. The Iris flower data set or Fisher's Iris data set is a multivariate data set introduced by Sir Ronald Fisher in the 1936 as an example of discriminant analysis.\n\nThe data set consists of 50 samples from each of three species of Iris (Iris setosa, Iris virginica and Iris versicolor), so 150 total samples. Four features were measured from each sample: the length and the width of the sepals and petals, in centimeters. \n"}}