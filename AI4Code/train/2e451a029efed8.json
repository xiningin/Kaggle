{"cell_type":{"7b4c5e78":"code","677b48a4":"code","66a47e96":"code","fe05c5e2":"code","b9a6d965":"code","8ba6792a":"code","16c27a96":"code","c361cbaf":"code","e3af6048":"code","dda335b4":"code","23c316cf":"code","e78447cf":"code","dfac77e4":"code","0e2a2094":"code","e1e5c763":"code","63e89658":"code","1fa0fcbd":"markdown","c29e193b":"markdown","f1517388":"markdown","2ff74757":"markdown","5d15f8f9":"markdown","3e925630":"markdown","27786028":"markdown","9d408bc5":"markdown","96b5d98f":"markdown","2ec5365f":"markdown","1208b98f":"markdown","e44b605e":"markdown","174dc112":"markdown"},"source":{"7b4c5e78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","677b48a4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n\n\nimport plotly.graph_objs as go\nimport plotly.express as px\nsns.set()","66a47e96":"accidents_raw = pd.read_csv('..\/input\/road-accidents-in-india\/only_road_accidents_data_month2.csv')","fe05c5e2":"accidents_raw.head()","b9a6d965":"def master_dataframe(dataframe):\n    df_metadata = pd.DataFrame({'Datatype': dataframe.dtypes,\n                                \"Null Values\": dataframe.isna().sum(),  \n                                \"Null %\": round(dataframe.isna().sum()\/len(dataframe)*100, 2),\n                                \"No: Of Unique Values\": dataframe.nunique()})\n    \n    df_describe = dataframe.describe(include='all').T\n    \n    df_metadata = df_metadata.join(df_describe)  \n    \n    corr = dataframe.corr()\n    \n    fig, ax = plt.subplots(figsize = (15, 15))    \n    sns.heatmap(ax=ax,\n                data=corr, \n                annot=True,\n                cmap='flare')\n    ax.set_title('Correlation Matrix', fontsize = 16)\n    plt.show()\n    \n    return df_metadata","8ba6792a":"master_dataframe(accidents_raw)","16c27a96":"accidents_raw['STATE\/UT'].unique()","c361cbaf":"accidents_raw[(accidents_raw['STATE\/UT'] == \"Delhi Ut\") | (accidents_raw['STATE\/UT'] == \"Delhi (Ut)\")]","e3af6048":"accidents_raw.at[139, 'STATE\/UT'] = \"Delhi (Ut)\"","dda335b4":"fig = px.bar(data_frame=accidents_raw, \n             x='YEAR', \n             y='TOTAL', \n             title='Accidents Per Year')\n\nfig.update_layout(title = {'x': 0.5})\n\nfig.show()","23c316cf":"fig = px.bar(data_frame=accidents_raw, \n             x='YEAR', \n             y='TOTAL',\n             color='STATE\/UT', \n             barmode='stack',\n             title='State-wise Accidents Per Year')\n\nfig.update_layout(title = {'x': 0.5})\n\nfig.show()","e78447cf":"fig = px.bar(data_frame=accidents_raw, \n             x='YEAR', \n             y='TOTAL',\n             color='STATE\/UT',\n             barmode='group', \n             title='State-wise Accidents Per Year')\n\nfig.update_layout(title = {'x': 0.5})\n\nfig.show()","dfac77e4":"tamil_nadu_2005 = accidents_raw[(accidents_raw['STATE\/UT'] == \"Tamil Nadu\") & (accidents_raw['YEAR'] == 2005)].reset_index()\ntamil_nadu_2005.drop(columns=['STATE\/UT', 'YEAR', 'TOTAL', 'index'], axis=1, inplace=True)\ntamil_nadu_2005 = tamil_nadu_2005.T.reset_index()\ntamil_nadu_2005.rename(columns={'index': 'Month', 0:'Accidents'}, inplace=True)\n\n\nfig = px.pie(data_frame=tamil_nadu_2005, \n             values='Accidents', \n             names='Month', \n             color_discrete_sequence=px.colors.sequential.Aggrnyl, \n             title='Accidents in Tamil Nadu In 2005', hole=0.2)\n\nfig.update_layout(title = {'x': 0.5})\n\nfig.show()","0e2a2094":"accidents_raw['STATE\/UT'].unique()","e1e5c763":"UTs = [\"A & N Islands\", \"Chandigarh\", \"D & N Haveli\", \"Daman & Diu\", \"Delhi (Ut)\", \"Lakshadweep\", \"Puducherry\"]\naccidents_UTs = accidents_raw[accidents_raw['STATE\/UT'].isin(UTs)]\naccidents_UTs","63e89658":"fig = px.bar(data_frame=accidents_UTs, \n              x='YEAR', \n              y='TOTAL',\n             color='STATE\/UT')\n\nfig.show()","1fa0fcbd":"### From the above pie chart it is clear that, most of the accidents were in the month of May and least in the month of November.","c29e193b":"### Grouped Bars - State\/UT wise","f1517388":"#### The above chart clearly shows Tamil Nadu accounts for highest number of accidents every year. And highest in year 2005.","2ff74757":"### Stacked bars - State\/UT wise","5d15f8f9":"### Now lets check in which months Tamil Nadu experience most accidents using a Pie chart.","3e925630":"### We can clearly see Delhi is top in accidents followed by Puducherry.","27786028":"### Check total number of accidents across all states per year.","9d408bc5":"### Lets compare the number of accidents across Union Territories","96b5d98f":"### Updating the name of the UT as it is mentioned incorrect","2ec5365f":"#### We can see number of accidents have increased with every consequetive year.","1208b98f":"#### We have transposed the dataframe to get the months as rows instead of columns.","e44b605e":"# BAR CHARTS","174dc112":"### Master Dataframe created to get dataframe metadata at one place."}}