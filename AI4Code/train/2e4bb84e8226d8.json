{"cell_type":{"86430136":"code","5fb42eea":"code","ec34be96":"code","a7aa04c7":"code","5fc28ee0":"code","417c0c1b":"code","bc46b0e3":"code","bc3903cc":"code","1d6d577a":"code","29978fca":"markdown","2633581b":"markdown","c01a12e1":"markdown","b863c5b5":"markdown","9660f2dc":"markdown","68232430":"markdown","cc95c572":"markdown","381a1663":"markdown","944b9c7e":"markdown","92842684":"markdown","8751ce77":"markdown","2748daaa":"markdown","accccfdb":"markdown"},"source":{"86430136":"# Bibliotecas utilizadas\nimport pandas as pd \nfrom operator import itemgetter\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","5fb42eea":"# Leitura do dataset Black Friday]\ndf_blackfriday = pd.read_csv('..\/input\/dataviz-facens-20182-ex3\/BlackFriday.csv') \nprint(df_blackfriday.info())\nprint(df_blackfriday.describe())","ec34be96":"## Rotinas gerais\n\n# C\u00e1lculo da frequ\u00eancia de valores e identifica\u00e7\u00e3o dos valores n\u00e3o preenchidos\ndef frequencia_coluna(df, coluna, qtd_linhas):    \n    list_value = []    \n    list_freq_absoluta = df[coluna].value_counts() \n    qtd_tot_valores = 0\n    for item in list_freq_absoluta.iteritems():\n        list_value.append([str(item[0]), item[1]])\n        qtd_tot_valores = qtd_tot_valores + item[1] \n    qtd_nao_inf = qtd_linhas - qtd_tot_valores\n    list_value.append(['N\u00e3o dispon\u00edvel', qtd_nao_inf])\n    list_value = sorted(list_value,key=itemgetter(0)) \n    df = pd.DataFrame(list_value)\n    df = df.rename(columns={0:'valor', 1:'freq'}) \n    return df\n\n# Identifica\u00e7\u00e3o dos valores n\u00e3o preenchidos\ndef valores_zerados(df, coluna):\n    list_value = []    \n    list_freq_absoluta = df_blackfriday[coluna].value_counts() \n    qtd_tot_valores = 0\n    for item in list_freq_absoluta.iteritems():\n        qtd_tot_valores = qtd_tot_valores + item[1] \n    list_value.append(['Dispon\u00edvel', qtd_tot_valores])\n    qtd_nao_inf = qtd_linhas - qtd_tot_valores\n    list_value.append(['N\u00e3o dispon\u00edvel', qtd_nao_inf])\n    list_value = sorted(list_value,key=itemgetter(0)) \n    df = pd.DataFrame(list_value)\n    df = df.rename(columns={0:'valor', 1:'freq'}) \n    return df\n\n# Mostra fonte dos dados\ndef mostra_fonte(plt):\n    plt.annotate('Fonte: Loja Varejo - Hosted by Analytics Vidhya',\n                xy=(0.3, 0), xytext=(0, 0),\n                xycoords=('axes fraction', 'figure fraction'),\n                textcoords='offset points',\n                size=13, ha='right', va='bottom')  \n    \n# Apresenta\u00e7\u00e3o de gr\u00e1fico de barras\ndef mostra_bargraph(df, coluna_x, coluna_y, titulo, descricao_x, descricao_y):\n    df = df.sort_values(by=[coluna_x])\n    plt.figure(figsize=(15,6.5))\n    graph = sns.barplot(x=coluna_x, y=coluna_y, data=df)\n    for p in graph.patches:\n        graph.annotate(format(p.get_height(), '.0f'), \n                       (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                       ha = 'center',\n                       va = 'center', \n                       xytext = (0, 10), \n                       textcoords = 'offset points') \n    plt.title(titulo, fontsize=16)\n    plt.xlabel(descricao_x, fontsize=14)\n    plt.ylabel(descricao_y, fontsize=14)\n    mostra_fonte(plt)\n    plt.show()    \n    \n# Apresenta\u00e7\u00e3o de gr\u00e1fico de dispers\u00e3o\ndef mostra_boxplot(df, coluna_x, coluna_y, titulo, descricao_x, descricao_y):\n    df = df.sort_values(by=[coluna_x])\n    plt.figure(figsize=(15,6.5))    \n    sns.set_style(\"whitegrid\")\n    sns.boxplot(x=coluna_x, y=coluna_y, data=df) #, order=list(sorted_nb.index))\n    plt.title(titulo, fontsize=16)\n    plt.xlabel(descricao_x, fontsize=14)\n    plt.ylabel(descricao_y, fontsize=14)\n    mostra_fonte(plt)\n    plt.show()\n    \ndef mostra_heatmap(df, titulo):\n    plt.figure(figsize=(25,7))    \n    sns.heatmap(df, annot=True, annot_kws={\"size\": 12})\n    plt.title(titulo, fontsize=16)\n    mostra_fonte(plt)\n    plt.show()\n    \ndef mostra_scatter(df, coluna_x, coluna_y, coluna_s, titulo, descricao_x, descricao_y):\n    plt.figure(figsize=(25,7)) \n    df2 = df.groupby([coluna_x,coluna_y]).count()\n    for column in df2:\n        if column != coluna_x and column != coluna_y and column != coluna_s:\n            df2.drop(column, axis=1, inplace=True)\n    df2 = df2.reset_index()\n    plt.scatter(x=df2[coluna_x], y=df2[coluna_y], s=df2[coluna_s]\/25)\n    plt.title(titulo, fontsize=16)\n    plt.xlabel(descricao_x, fontsize=14)\n    plt.ylabel(descricao_y, fontsize=14)  \n    mostra_fonte(plt)\n    plt.show() \n    \n# Classifica\u00e7\u00e3o das colunas\ndef classificacao(codigo): \n    if codigo == 'QD':\n        return 'Quantitativa Descritiva'\n    elif codigo == 'QC':\n        return 'Quantitativa Cont\u00ednua'\n    elif codigo == 'QN':\n        return 'Qualitativa Nominal'\n    elif codigo == 'QO':\n        return 'Qualitativa Ordinal'\n    \n# C\u00e1lculo das frequ\u00eancias absolutas e relativas\ndef classificacao_coluna(coluna, classif, qtd_linhas):\n    classif_ret = classificacao(classif)\n\n    list_value = []    \n    if qtd_linhas != 0:                                               # Calcular frequ\u00eancias absolutas e relativas\n        qtd_tot_valores = 0\n        list_freq_absoluta = df_blackfriday[coluna].value_counts() \n        for item in list_freq_absoluta.iteritems():\n            list_value.append([item[0], item[1], '{:.3%}'.format(float(item[1] \/ qtd_linhas))])\n            qtd_tot_valores = qtd_tot_valores + item[1] \n        if qtd_tot_valores != qtd_linhas:                             # se diferente, existem dados n\u00e3o informados\n            qtd_nao_inf = qtd_linhas - qtd_tot_valores\n            list_value.append(['N\/A', qtd_nao_inf, '{:.3%}'.format(qtd_nao_inf \/ qtd_linhas)])\n    else:                                                             # N\u00e3o calcular frequ\u00eancias\n        list_value.append([0, 0, ''])\n    return [coluna, classif_ret, list_value]","a7aa04c7":"# Descri\u00e7\u00e3o do Dataset\n# estrutura sa\u00edda: lista(nome coluna, classifica\u00e7\u00e3o, lista(valor, frequ\u00eancia absoluta, frequ\u00eancia relativa))\nqtd_linhas = len(df_blackfriday)                                  \ncolunas = [classificacao_coluna('User_ID',                   'QN', qtd_linhas),              # QN - Qualitativa Nominal: caracter\u00edstica n\u00e3o num\u00e9rica sem ordem entre os valores             \n           classificacao_coluna('Product_ID',                'QN', qtd_linhas),              # QO - Qualitativa Ordinal: caracter\u00edstica n\u00e3o num\u00e9rica com ordem entre os valores\n           classificacao_coluna('Gender',                    'QN', qtd_linhas),              # QD - Quantitativa Discreta: conjunto finito ou enumer\u00e1vel de n\u00fameros,\n           classificacao_coluna('Age',                       'QO', 0         ),              #      e que resultam de uma contagem \n           classificacao_coluna('Occupation',                'QN', qtd_linhas),              # QC - Quantitativa Cont\u00ednua: valor contido num intervalo de n\u00fameros reais\n           classificacao_coluna('City_Category',             'QN', qtd_linhas),               \n           classificacao_coluna('Stay_In_Current_City_Years','QO', 0         ),\n           classificacao_coluna('Marital_Status',            'QN', qtd_linhas),\n           classificacao_coluna('Product_Category_1',        'QN', qtd_linhas),\n           classificacao_coluna('Product_Category_2',        'QN', qtd_linhas),\n           classificacao_coluna('Product_Category_3',        'QN', qtd_linhas),\n           classificacao_coluna('Purchase',                  'QC', 0         )]\ncolunas","5fc28ee0":"# Colunas consideradas para an\u00e1lise:\n# Gender \/ Age \/ Stay_In_Current_City_Years \/ Marital_Status \/ Purchase\n    \n# C\u00e1lculo das frequ\u00eancias de cada coluna verificando se alguma n\u00e3o foi preenchida\nqtd_linhas = len(df_blackfriday)\ndf_Gender                          = frequencia_coluna(df_blackfriday, 'Gender',                     qtd_linhas)\ndf_Age                             = frequencia_coluna(df_blackfriday, 'Age',                        qtd_linhas)\ndf_Stay_In_Current_City_Yearsprint = frequencia_coluna(df_blackfriday, 'Stay_In_Current_City_Years', qtd_linhas)\ndf_Marital_Status                  = frequencia_coluna(df_blackfriday, 'Marital_Status',             qtd_linhas)\n\n# Verificando se todos os valores de compras est\u00e3o preenchidos\ndf_Purchase                        = valores_zerados(df_blackfriday,   'Purchase')\n\n# Apresenta\u00e7\u00e3o do gr\u00e1fico de barras com os dados encontrados\nprint('N\u00famero total de linhas do dataset origem:', qtd_linhas)\nmostra_bargraph(df_Gender,                          'valor', 'freq', 'Qtd. Vendas por G\u00eanero',                      'G\u00eanero',            'N\u00famero Vendas')\nmostra_bargraph(df_Age,                             'valor', 'freq', 'Qtd. Vendas por Faixa de Idade',              'Faixa Idade',       'N\u00famero Vendas')\nmostra_bargraph(df_Stay_In_Current_City_Yearsprint, 'valor', 'freq', 'Qtd. Vendas por Tempo perman\u00eancia na cidade', 'Tempo perman\u00eancia', 'N\u00famero Vendas')\nmostra_bargraph(df_Marital_Status,                  'valor', 'freq', 'Qtd. Vendas por Estado Civil',                'Estado Civil',      'N\u00famero Vendas')\nmostra_bargraph(df_Purchase,                        'valor', 'freq', 'Valores gastos em cada compra',               'Informa\u00e7\u00e3o',        'N\u00famero Vendas')","417c0c1b":"# C\u00e1lculo do ticket m\u00e9dio\ndf_ticket_medio_idade    = pd.DataFrame(df_blackfriday.groupby(\"Age\")[\"Purchase\"].sum()                        \/ df_blackfriday.groupby(\"Age\")[\"Purchase\"].count()).reset_index()\ndf_ticket_medio_genero   = pd.DataFrame(df_blackfriday.groupby(\"Gender\")[\"Purchase\"].sum()                     \/ df_blackfriday.groupby(\"Gender\")[\"Purchase\"].count()).reset_index()\ndf_ticket_medio_tempo    = pd.DataFrame(df_blackfriday.groupby(\"Stay_In_Current_City_Years\")[\"Purchase\"].sum() \/ df_blackfriday.groupby(\"Stay_In_Current_City_Years\")[\"Purchase\"].count()).reset_index()\ndf_ticket_medio_estcivil = pd.DataFrame(df_blackfriday.groupby(\"Marital_Status\")[\"Purchase\"].sum()             \/ df_blackfriday.groupby(\"Marital_Status\")[\"Purchase\"].count()).reset_index()\n\n# Apresenta\u00e7\u00e3o do gr\u00e1fico de barras com os dados encontrados\nmostra_bargraph(df_ticket_medio_idade,    'Age',                        'Purchase', 'Vr.Ticket M\u00e9dio \/ Faixa Et\u00e1ria',    'Faixa Et\u00e1ria',    '$ Ticket M\u00e9dio')\nmostra_bargraph(df_ticket_medio_genero,   'Gender',                     'Purchase', 'Vr.Ticket M\u00e9dio \/ G\u00eanero',          'G\u00eanero',          '$ Ticket M\u00e9dio')\nmostra_bargraph(df_ticket_medio_tempo,    'Stay_In_Current_City_Years', 'Purchase', 'Vr.Ticket M\u00e9dio \/ Tempo na cidade', 'Tempo na cidade', '$ Ticket M\u00e9dio')\nmostra_bargraph(df_ticket_medio_estcivil, 'Marital_Status',             'Purchase', 'Vr.Ticket M\u00e9dio \/ Estado Civil',    'Estado Civil',    '$ Ticket M\u00e9dio')","bc46b0e3":"# Gr\u00e1fico de caixa (boxplot)\nmostra_boxplot(df_blackfriday, 'Gender',                     'Purchase', 'Distribui\u00e7\u00e3o de valores gastos x g\u00eanero',          'G\u00eanero',          '$ Valor Gasto')\nmostra_boxplot(df_blackfriday, 'Age',                        'Purchase', 'Distribui\u00e7\u00e3o de valores gastos x faixa et\u00e1ria',    'Faixa Et\u00e1ria',    '$ Valor Gasto')\nmostra_boxplot(df_blackfriday, 'Stay_In_Current_City_Years', 'Purchase', 'Distribui\u00e7\u00e3o de valores gastos x tempo na cidade', 'Tempo na Cidade', '$ Valor Gasto')\nmostra_boxplot(df_blackfriday, 'Marital_Status',             'Purchase', 'Distribui\u00e7\u00e3o de valores gastos x estado civil',    'Estado Cibil',    '$ Valor Gasto')","bc3903cc":"# Mapa de Calor (Heatmap)\nmostra_heatmap(df_blackfriday.corr(), 'C\u00e1lculo de correla\u00e7\u00e3o entre as colunas do dataset')\n","1d6d577a":"# Gr\u00e1fico de bolha (Bubble Plot)\nmostra_scatter(df_blackfriday, 'Product_Category_1',        'Age',            'Purchase', 'Volume de Vendas por Idade x Categoria de Produtos','Categoria de Produtos', 'Faixa Et\u00e1ria')\nmostra_scatter(df_blackfriday, 'Gender',                    'Age',            'Purchase', 'Volume de Vendas por Idade x G\u00eanero',               'G\u00eanero',                'Faixa Et\u00e1ria')\nmostra_scatter(df_blackfriday, 'Gender',                    'Marital_Status', 'Purchase', 'Volume de Vendas por Estado Civil x G\u00eanero',        'G\u00eanero',                'Estado Civil')\nmostra_scatter(df_blackfriday, 'Stay_In_Current_City_Years','Marital_Status', 'Purchase', 'Volume de Vendas por Estado Civil x Tempo Cidade',  'Tempo na Cidade',       'Estado Civil')","29978fca":"## **Item 1 - Classifica\u00e7\u00e3o das vari\u00e1veis**","2633581b":"## 3.2 - Distribui\u00e7\u00e3o dos valores (histograma, diagrama de caixa)","c01a12e1":"## **An\u00e1lise:**\n\nTodas as cinco colunas selecionas para an\u00e1lises est\u00e3o devidamente preenchidas, n\u00e3o necessitando assim qualquer procedimento de saneamento","b863c5b5":"* Dentro do universo pesquisado, os clientes do sexo masculino respondem por 75,41% do n\u00famero de vendas ocorridas\n* A faixa et\u00e1ria entre os 26 a 35 anos, representam 39,94% do n\u00famero de vendas ocorridas\n* Quem mora a 1 ano na cidade fez o maior volume de compras (35,19%)\n* O estado civil 0 representa 59,12% das vendas ocorridas\n\n* A diferen\u00e7a percentual entre o valor do ticket m\u00e9dio maior e menor \u00e9 de 6,67 (menor 9020 - faixa et\u00e1ria at\u00e9 17 anos e maior 9621 - faixa et\u00e1ria de 51 a 55 anos)\n* Este mesmo c\u00e1lculo entre os g\u00eaneros feminino (8810) e masculino (9505) \u00e9 de 7,89% em favor do g\u00eanero masculino\n* Em rela\u00e7\u00e3o ao tempo na cidade, verifica-se que o menor ticket \u00e9 quem mora na cidade a menos de 1 ano (9247) e o maior os que moram na cidade a dois anos (9398) - diferen\u00e7a de 1,63%\n* Entre os estados civil, o 0 apresentou um ticket m\u00e9dio de 9333 e o 1 de 9335, ou seja, apenas 0,02%\n\n* Aparentemente n\u00e3o existe nenhuma correla\u00e7\u00e3o forte entre as colunas do dataset utilizado para an\u00e1lise\n\n* Observa-se que um n\u00famero maior de vendas ocorreram para as categoria de produtos 1, 5 e 8 e faixa et\u00e1ria entre os 26 e 35 anos\n* Para esta mesma faixa et\u00e1ria, destaca-se como maiores comprados os clientes do sexo masculino com estado civil 0","9660f2dc":"## **Item 2 - Resumo, avalia\u00e7\u00e3o e corre\u00e7\u00e3o de eventuais problemas nos valores das vari\u00e1veis**","68232430":"## 3.3 - Rela\u00e7\u00f5es entre as vari\u00e1veis (mapa de calor, diagrama de dispers\u00e3o)","cc95c572":"## Resolu\u00e7\u00e3o","381a1663":"## 3.1 - Resumo\/comportamento dos valores (linha(s), setores, barra(s), diagrama de dispers\u00e3o) ","944b9c7e":"## Quest\u00e3o \u00fanica\n\nDesenvolva e documente ao longo deste notebook a **sua** an\u00e1lise explorat\u00f3ria do dataset `BlackFriday.csv`.\n\nSugest\u00e3o de roteiro:\n\n1. Classifica\u00e7\u00e3o das vari\u00e1veis (n\u00e3o esque\u00e7a de apresentar as frequ\u00eancias absolutas e relativas das vari\u00e1veis qualitativas nominais)\n\n2. Resumo, avalia\u00e7\u00e3o e corre\u00e7\u00e3o de eventuais problemas nos valores das vari\u00e1veis\n\n3. Exame gr\u00e1fico dos dados\n\n    3.1. Resumo\/comportamento dos valores (linha(s), setores, barra(s), diagrama de dispers\u00e3o) \n    \n    3.2. Distribui\u00e7\u00e3o dos valores (histograma, diagrama de caixa)\n    \n    3.3. Rela\u00e7\u00f5es entre as vari\u00e1veis (mapa de calor, diagrama de dispers\u00e3o)\n        \n4. Pelo menos tr\u00eas an\u00e1lises da distribui\u00e7\u00e3o por grupos\/recortes (exemplo: como ficam os histogramas de idade por categoria de produtos?)\n    \n5. Conclus\u00e3o: Hip\u00f3teses e observa\u00e7\u00f5es","92842684":"## **Item 4 - Pelo menos tr\u00eas an\u00e1lises da distribui\u00e7\u00e3o por grupos\/recortes (exemplo: como ficam os histogramas de idade por categoria de produtos?)**","8751ce77":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio Extra\n\n* **Data de entrega:** 08\/02\/2020 \n* **Professor:**  Matheus Mota\n* **Aluno:** Rodrigo Prenstteter\n* **RA:** 191352","2748daaa":"## **Item 3 - Exame gr\u00e1fico dos dados**","accccfdb":"## **Item 5 - Conclus\u00e3o: Hip\u00f3teses e observa\u00e7\u00f5es**"}}