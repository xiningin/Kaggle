{"cell_type":{"6ddeac80":"code","9bd3efd9":"code","19dea7ea":"code","8e584f62":"code","cb2c345a":"code","6208ed33":"code","3aae8ff2":"code","42239b75":"code","70aff887":"code","ba3f405c":"markdown"},"source":{"6ddeac80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9bd3efd9":"import numpy as np\nimport pandas as pd\n","19dea7ea":"patient_data = pd.read_csv (r'..\/input\/breast-cancer-wisconsin-data\/data.csv')\ndf=pd.DataFrame(patient_data)\ndf.head()\n","8e584f62":"from sklearn.preprocessing import LabelEncoder\n\n#dmap is mapping Malignant as 1 and Benign as 2\n\ndmap = LabelEncoder()\ndf['diagnosis_no'] = dmap.fit_transform(df['diagnosis'])\n\ndf.head()\n\n\n\n\n\n\n","cb2c345a":"X = df.drop(['id','diagnosis','texture_worst','texture_se','texture_mean','symmetry_worst','symmetry_se',\n             'symmetry_mean','smoothness_worst','smoothness_se','smoothness_mean',\n            'fractal_dimension_worst','fractal_dimension_se','fractal_dimension_mean',\n            'concavity_se','concave points_se','compactness_se',],axis='columns')\ny = df.diagnosis_no\n\nX_plot=pd.concat([X,y])\n","6208ed33":"#heatmap \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nplt.figure(figsize=(20,20))\ncor = X_plot.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds, fmt='.2f')\nplt.show()\n\n\n\n\n","3aae8ff2":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,train_size=0.7,test_size=0.3)\n\ncols_with_missing = [col for col in X_train.columns \n                                 if X_train[col].isnull().any()]\nreduced_X_train = X_train.drop(cols_with_missing, axis=1)\nreduced_X_test  = X_test.drop(cols_with_missing, axis=1)\n\n","42239b75":"from sklearn.svm import SVC \nmodel=SVC(C=50000) \nmodel.fit(reduced_X_train,y_train)","70aff887":"model.score(reduced_X_test,y_test)","ba3f405c":"from sklearn.svm import SVC\nmodel=SVC(C=10)\nmodel.fit(reduced_X_train,y_train)"}}