{"cell_type":{"3c731b79":"code","1f73e0dc":"code","b0fd0c95":"code","081f7ca1":"code","ed821be6":"code","6ebad201":"code","c1a35e53":"code","01b2fe49":"code","5021abe2":"code","5f9fdc93":"code","db8c7f9b":"code","a80db73f":"code","25cd4f12":"code","5c16ff85":"code","24897de9":"code","a2adc164":"code","12259c8a":"code","16b0a691":"code","dfedb84c":"code","e4a7b9b6":"code","b02d0292":"code","e78895ee":"code","ce680a93":"code","4d07bebe":"code","eb9fe687":"code","b13ac3aa":"code","5f995b27":"code","3a5ebf14":"code","a4c93438":"code","f6fc862a":"code","4507c589":"code","589cc440":"code","63ac85ab":"code","4831f3c4":"code","3d83b708":"code","ea80474e":"code","ecbb79c3":"code","6e3ec7f3":"code","7e04ebc9":"code","30befb8c":"markdown","572fa6e4":"markdown","45577f3f":"markdown","3d0e2049":"markdown","29ce79be":"markdown"},"source":{"3c731b79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error,r2_score\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1f73e0dc":"insdf=pd.read_csv(\"..\/input\/insurance.csv\")\ninsdf1=insdf.copy()\ninsdf.head()","b0fd0c95":"#To find no.of rows and columns\ninsdf1.shape","081f7ca1":"#Listing the columns of dataset\ninsdf1.columns","ed821be6":"#Dataframe.Info() This method prints information about a DataFrame including the\n# index dtype and column dtypes, non-null values and memory usage\ninsdf1.info()","6ebad201":"#To detect any missing values\ninsdf1.isna().sum()","c1a35e53":"#Check the duplicated records\ninsdf1.duplicated().sum()","01b2fe49":"#To return the duplicated rows\ndfRowsDuplicated=insdf1[insdf1.duplicated()]\ndfRowsDuplicated","5021abe2":"#Check the count of duplicate records and remove duplicate records\ninsdf1.duplicated().sum()\ninsdf1.drop_duplicates(inplace = True)","5f9fdc93":"#To check whether duplicated rows are removed\ninsdf1.duplicated().sum()","db8c7f9b":"num_col=insdf1.select_dtypes(include=np.number).columns\nnum_col","a80db73f":"cat_col=insdf1.select_dtypes(exclude=np.number).columns\ncat_col","25cd4f12":"#one hot encoding for category column\nencoded_cat_col=pd.get_dummies(insdf1[cat_col])\nencoded_cat_col.head()","5c16ff85":"#Concat Category column & numerical column\ninsdf1_ready_model=pd.concat([insdf1[num_col],encoded_cat_col], axis = 1)\ninsdf1_ready_model.head()","24897de9":"#performing Label encoding so that dataframe gets updated\nle = LabelEncoder()\nfor i in cat_col:\n    insdf1[i] = le.fit_transform(insdf1[i])\ninsdf1.head()","a2adc164":"insdf1.describe().T","12259c8a":"#Boxplot for Age\nax=sns.boxplot(insdf1['age'])\nax.set_title('Dispersion of Age')\nplt.show(ax)","16b0a691":"#Boxplot for BMI\nax=sns.boxplot(insdf1['bmi'])\nax.set_title('Dispersion of BMI')\nplt.show(ax)","dfedb84c":"#Boxplot for Expenses\nax=sns.boxplot(insdf1['expenses'])\nax.set_title('Dispersion of Expenses')\nplt.show(ax)","e4a7b9b6":"\nax=sns.scatterplot(x='bmi',y='expenses',data=insdf1)\nax.set_title('BMI vs Expenses')\nplt.show(ax)","b02d0292":"ax=sns.scatterplot(x='age',y='expenses',data=insdf1)\nax.set_title('Age vs Expenses')\nplt.show(ax)","e78895ee":"plt.figure(figsize=(15,10))\nax=sns.scatterplot(x='age',y='expenses',hue='bmi',size='bmi',data=insdf1)\nax.set_title('Age vs Expenses by BMI')\nplt.xlabel('Age')\nplt.ylabel('Expenses')\nplt.show(ax)","ce680a93":"#As you see Age with sex is not influencing the expenses\nplt.figure(figsize=(10,5))\nax = sns.scatterplot(x='age',y='expenses', hue='sex',style = 'sex',data=insdf1)\nax.set_title(\"Age vs Expenses by Sex\")\nplt.show(ax)","4d07bebe":"#Both age and smoker are higgly influencing the expenses\nplt.figure(figsize=(10,7))\nax=sns.scatterplot(x='age',y='expenses',hue=insdf1['smoker'],style=insdf1['smoker'],\n                   size=insdf1['smoker'],data=insdf1)\nax.set_title('Age vs Expenses by Smoker')\nplt.xlabel('Smoker(Yes-1 No-0)')\nplt.ylabel(\"Expenses\")\nplt.show(ax)","eb9fe687":"#Finding correlation\ninsdf1.corr()","b13ac3aa":"#Swarm plot shows how smoker feature is influencing the expeneses compare with smoker and non-smoker\nax=sns.swarmplot(x='smoker',y='expenses',data=insdf1)\nax.set_title(\"Smoker vs Expenses\")\nplt.xlabel(\"Smoker (Yes - 1, No - 0)\")\nplt.ylabel(\"Expenses\")\nplt.show(ax)\n","5f995b27":"#Loading y with dependant variable\ny=insdf1[\"expenses\"]\n","3a5ebf14":"#Filtering the dependant variable and loading X with Independant variable\nX=insdf1.drop(columns=\"expenses\")\nX.head()","a4c93438":"train_X,test_X,train_y,test_y=train_test_split(X,y,test_size=0.3,random_state=1)","f6fc862a":"print(\"Train X :\", train_X.shape)\nprint(\"Test X :\",test_X.shape)\nprint(\"Train y :\",train_y.shape)\nprint(\"Test y :\",test_y.shape)\n","4507c589":"model=LinearRegression()\nmodel.fit(train_X,train_y)","589cc440":"print(\"Coefficient value:\",model.coef_)\nprint(\"Intercept value:\", model.intercept_)","63ac85ab":"#Predicting the Y value from the train set and test set\ntrain_y_predict=model.predict(train_X)\ntrain_y_predict[0:5]\n\ntest_y_predict=model.predict(test_X)\n","4831f3c4":"#Plot to see the actual expenses and predicted expenses \nax=sns.scatterplot(train_y,train_y_predict)\nax.set_title(\"Actual Expenses vs Predicted Expenses\")\nplt.xlabel(\"Actual Expenses\")\nplt.ylabel(\"Predicted Expenses\")\nplt.show(ax)","3d83b708":"#MAE\nprint(\"Mean Absolute Error Train: \",mean_absolute_error(train_y_predict,train_y))\nprint(\"Mean Absolute Error Test: \",mean_absolute_error(test_y_predict,test_y))","ea80474e":"#MSE\nprint(\"mean_squared_error Train: \", mean_squared_error(train_y_predict,train_y))\nprint(\"mean_squared_error Test: \", mean_squared_error(test_y_predict,test_y))","ecbb79c3":"#MSE\nprint(\"mean_squared_error Train: \", mean_squared_error(train_y,train_y_predict))\nprint(\"mean_squared_error Test: \", mean_squared_error(test_y,test_y_predict))","6e3ec7f3":"#RMSE\nprint(np.sqrt(mean_squared_error(train_y_predict,train_y)))\nprint(np.sqrt(mean_squared_error(test_y_predict,test_y)))","7e04ebc9":"print(\"R-Squared Train value: \",r2_score(train_y_predict,train_y))\nprint(\"R-Squared Test value: \",r2_score(test_y_predict,test_y))","30befb8c":"To understand the relationship between the Age and expenses with respect to bmi.","572fa6e4":"Deriving the statistical measure for each column. Comparing the mean and median.\nAge - slight variation between mean and median\nBMI - slight variation between mean and median\nExpenses - High variation between mean and median","45577f3f":"Getting the  Outliers for Age, BMI, Expenses\n**Observation**:\nAge -> No outliers in Age\nBMI - Outlier in BMI above 47\nExpenses - Has outliers in expenses above 35000","3d0e2049":"#We need to find Correlation to understand the relationship of each independent variable with\n#dependent variable\n\n#Age has positive side (30%) relationship against expenses\n#bmi has positive side (20%) relationship against expenses\n#Children has almost no relationship against expenses\n#Smoker has strong positive relationship (78%) against expenses","29ce79be":"**Scatterplot for :**\nAge vs BMI\nAge vs Expenses\nBMI vs Expenses\n"}}