{"cell_type":{"35f74006":"code","55688ff4":"code","4c08f546":"code","c03bc636":"code","59482762":"code","b9bb7492":"code","71c46f20":"code","76346c0b":"code","cea38fd5":"code","5e9596b4":"code","01daf991":"code","e4a54124":"code","4726caf8":"code","fa8089de":"code","c2aabf94":"code","6d0f0cfc":"code","b939ceb3":"code","799eb820":"code","77700842":"code","3a5edbc8":"code","5152d8e9":"code","ccb4278f":"code","e58bb567":"code","80f89bd3":"code","33255221":"code","65b604e8":"code","8c975e4c":"code","3cb70ee4":"code","60b8b812":"code","2a364e6d":"markdown","48382bbe":"markdown","26457e76":"markdown","c7b79d6b":"markdown","f8a4c62f":"markdown","342f8fe5":"markdown","f9a1e560":"markdown","0d96d3ba":"markdown","9d361d90":"markdown","7e95f766":"markdown"},"source":{"35f74006":"import numpy as np\nimport pandas as pd","55688ff4":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","4c08f546":"df = pd.read_csv(r\"..\/input\/CC GENERAL.csv\")","c03bc636":"df.head(2)","59482762":"df.info()","b9bb7492":"df.shape","71c46f20":"df.describe()","76346c0b":"missing = df.isna().sum()\nprint(missing);","cea38fd5":"sns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='viridis');","5e9596b4":"df.dropna(inplace=True)","01daf991":"sns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='viridis');","e4a54124":"df.drop('CUST_ID', axis=1, inplace=True)","4726caf8":"from scipy.cluster.hierarchy import ward, dendrogram, linkage\nnp.set_printoptions(precision=4, suppress=True)","fa8089de":"distance = linkage(df, 'ward')","c2aabf94":"plt.figure(figsize=(25,10))\nplt.title(\"Hierachical Clustering Dendrogram\")\nplt.xlabel(\"Index\")\nplt.ylabel(\"Ward's distance\")\ndendrogram(distance,\n           leaf_rotation=90.,\n           leaf_font_size=9.,);\nplt.axhline(150000, c='k');","6d0f0cfc":"plt.title('Hierarchical Clustering Dendrogram (truncated)')\nplt.xlabel('Index')\nplt.ylabel(\"Ward's distance\")\ndendrogram(distance, truncate_mode='lastp',\n           p=6, leaf_rotation=0., leaf_font_size=12.,\n           show_contracted=True);\nplt.axhline(150000, c='k');","b939ceb3":"from sklearn.cluster import KMeans","799eb820":"sse_ = []\nfor k in range(1, 20):\n    kmeans = KMeans(n_clusters=k, random_state=5).fit(df)\n    sse_.append([k, kmeans.inertia_])","77700842":"plt.plot(pd.DataFrame(sse_)[0], pd.DataFrame(sse_)[1])\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances (sse)')\nplt.title('Elbow Method For Optimal k');","3a5edbc8":"from sklearn.metrics import silhouette_score","5152d8e9":"sse_ = []\nfor k in range(2, 20):\n    kmeans = KMeans(n_clusters=k, random_state=5).fit(df)\n    sse_.append([k, silhouette_score(df, kmeans.labels_)])","ccb4278f":"plt.plot(pd.DataFrame(sse_)[0], pd.DataFrame(sse_)[1]);","e58bb567":"k = n_clusters=8\nkmeans = KMeans(k)","80f89bd3":"clusters = kmeans.fit_predict(df)","33255221":"plt.hist(clusters, bins=range(k+1))\nplt.title('# Customers per Cluster')\nplt.xlabel('Cluster')\nplt.ylabel('# Customers')\nplt.show()","65b604e8":"df.columns","8c975e4c":"data = df.copy()\ndata[\"cluster\"] = clusters\ncols = list(data.columns)\ncols","3cb70ee4":"sns.countplot(x='cluster', data=data)","60b8b812":"sns.pairplot(data, hue=\"cluster\")","2a364e6d":"### Read data from csv","48382bbe":"## Ward Alogrithm","26457e76":"## Clustering using K-means","c7b79d6b":"### Adding created cluster as a column to the dataFrame df","f8a4c62f":"## Dendogram","342f8fe5":"####  Finding optimal value of k using Elbow Method and Silhouette Analysis","f9a1e560":"### We shall now derive our conclusions based for customer segmentation based on above graphs","0d96d3ba":"### Credit Card DataSet (Unsupervised Learning)","9d361d90":"### Import Libraries","7e95f766":"#### Thus selecting the number of clusters k=8 based on above Elbow and Silhouette Graphs"}}