{"cell_type":{"276d0d41":"code","142d58a1":"code","1d984f95":"code","f0c116e6":"code","ff752fe4":"code","7da2f46c":"code","e7465033":"code","f32a53cf":"code","7ef72ec6":"code","52cf20c1":"code","6c45c400":"code","f5e3596d":"code","93b6e041":"code","de3898a0":"code","92aa9a77":"code","9356371f":"code","ec974fd4":"code","ff52fc1f":"code","529ddfe7":"code","af28d4d5":"code","244128f3":"code","fc0b7c16":"code","3218257f":"code","b9fe126e":"code","25eec643":"code","9b3f16b8":"code","61cdc687":"code","1f429d82":"code","01326792":"code","a3adadc8":"code","6f175950":"code","2334567b":"code","19805014":"code","b86f7b48":"markdown","4077893b":"markdown","eadf6734":"markdown","13fee534":"markdown","dfbfef28":"markdown","60a48720":"markdown","af73de6a":"markdown","068079c4":"markdown","93d2fe1d":"markdown","ddc9b1da":"markdown","9792ff7a":"markdown","a48fd22f":"markdown","421e5b04":"markdown"},"source":{"276d0d41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","142d58a1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom keras.utils.np_utils import to_categorical\nfrom keras.models import Sequential, load_model\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom keras.optimizers import Adam, RMSprop\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.callbacks import ReduceLROnPlateau","1d984f95":"train = pd.read_csv(\"\/kaggle\/input\/Kannada-MNIST\/train.csv\")\nprint(train.shape)","f0c116e6":"y = train[\"label\"]\nX = train.drop(\"label\", axis = 1)\nprint(y.value_counts().to_dict())\ny = to_categorical(y, num_classes = 10)\ndel train","ff752fe4":"X = X \/ 255.0\nX = X.values.reshape(-1,28,28,1)","7da2f46c":"seed=2\ntrain_index, valid_index = ShuffleSplit(n_splits=1,\n                                        train_size=0.9,\n                                        test_size=None,\n                                        random_state=seed).split(X).__next__()","e7465033":"x_train = X[train_index]\nY_train = y[train_index]\nx_test = X[valid_index]\nY_test = y[valid_index]","f32a53cf":"model = Sequential()\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), padding='Valid', activation='relu', input_shape=(28, 28, 1)))\nmodel.add(Conv2D(filters=32, kernel_size=(3, 3), padding='Same', activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.2))","7ef72ec6":"model.add(Conv2D(filters=64, kernel_size=(5, 5), padding='Valid', activation='relu'))\nmodel.add(Conv2D(filters=64, kernel_size=(3, 3), padding='Same', activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2, 2), strides=(2, 2)))\nmodel.add(Dropout(0.2))","52cf20c1":"model.add(Flatten())\nmodel.add(Dense(519, activation=\"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation=\"softmax\"))","6c45c400":"model.compile(loss='categorical_crossentropy', optimizer=Adam(lr=1e-3), metrics=[\"accuracy\"])","f5e3596d":"annealer = ReduceLROnPlateau(monitor='val_accuracy', patience=1, verbose=2, factor=0.5, min_lr=0.0000001)","93b6e041":"datagen = ImageDataGenerator(featurewise_center=False,samplewise_center=False,featurewise_std_normalization=False,\n        samplewise_std_normalization=False,\n        zca_whitening=False,\n        rotation_range=10,\n        zoom_range=0.1,\n        width_shift_range=0.1,\n        height_shift_range=0.1,\n        horizontal_flip=False,\n        vertical_flip=False)","de3898a0":"epochs = 30\nbatch_size = 64\nvalidation_steps = 10000","92aa9a77":"train_generator = datagen.flow(x_train, Y_train, batch_size=batch_size)","9356371f":"test_generator = datagen.flow(x_test, Y_test, batch_size=batch_size)","ec974fd4":"history = model.fit_generator(train_generator,\n                    steps_per_epoch=x_train.shape[0]\/\/batch_size,\n                    epochs=epochs,\n                    validation_data=test_generator,\n                    validation_steps=validation_steps\/\/batch_size,\n                    callbacks=[annealer])","ff52fc1f":"score = model.evaluate(x_test, Y_test)","529ddfe7":"score","af28d4d5":"model.save('Digits-Kannada-1.3.0.h5')","244128f3":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='lower right')\nplt.show()","fc0b7c16":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper right')\nplt.show()","3218257f":"test = pd.read_csv(\"\/kaggle\/input\/Kannada-MNIST\/test.csv\")\nprint(test.shape)","b9fe126e":"test = test.drop(['id'],axis=1)","25eec643":"test = np.array(test)\ntest = test.reshape(5000,784)\nprint(test.shape)\ntest = test\/255\ntest = test.reshape(-1,28,28,1)\ntest.shape","9b3f16b8":"p = np.argmax(model.predict(test), axis=1)","61cdc687":"len(p)","1f429d82":"p","01326792":"valid_loss, valid_acc = model.evaluate(x_test, Y_test, verbose=0)\nvalid_p = np.argmax(model.predict(x_test), axis=1)\ntarget = np.argmax(Y_test, axis=1)\ncm = confusion_matrix(target, valid_p)","a3adadc8":"cm","6f175950":"sample_file = pd.DataFrame({\"Id\": list(range(1,len(p)+1)),\"Label\": p})\nsample_file.to_csv(\"kannada_didgit_kera_cnn.csv\", index=False, header=True)","2334567b":"sample = pd.read_csv(\"kannada_didgit_kera_cnn.csv\")","19805014":"sample.head(10)","b86f7b48":"## Start training","4077893b":"## Parameters","eadf6734":"## Separating dependent and independent variables","13fee534":"## Reshape the independent variables ","dfbfef28":"## summarize history for loss","60a48720":"## Model predict","af73de6a":"## Shuffle Split Train and Test from original dataset**","068079c4":"## summarize history for accuracy","93d2fe1d":"## Model definition","ddc9b1da":"## Importing all the required libraries","9792ff7a":"## Preparing file for submission","a48fd22f":"## Read train data set","421e5b04":"## Saving Model for future API"}}