{"cell_type":{"54a64fc2":"code","94215403":"code","8c8e8428":"code","1b2fe9eb":"code","7fa9b482":"code","2b230f3d":"code","0e11a029":"code","12751180":"code","62a2dd41":"code","d82f73a5":"code","b01d4812":"code","d41e5360":"code","a211c129":"code","c6721b34":"code","1a5bf5c2":"code","63c666e4":"code","6f288c79":"code","e4a89621":"code","dca0654b":"code","7aca38ad":"code","dbf56e74":"code","dcfb4c84":"code","e92bf8c7":"code","a2bef027":"code","122f9043":"code","b3376dc6":"code","f7872a48":"code","59f34521":"code","dfa50b7a":"code","b8b86e34":"code","7dcd3b95":"code","ce89fed6":"code","947fea3e":"code","a977ae54":"code","eb1ffcf9":"code","cc4961bd":"code","b395fefe":"code","ca52d110":"code","ed237301":"code","da986f95":"code","a86c2e75":"code","8bcfbee5":"code","004465f8":"code","bac90ccb":"code","dd1608aa":"code","e32b1f08":"markdown","6d2f0cd3":"markdown","731b6e58":"markdown","10eb09aa":"markdown","a5c96776":"markdown","e9743705":"markdown","42615205":"markdown","b82a036c":"markdown","c6bef466":"markdown","4a2372f7":"markdown","b4714b65":"markdown","813e85bb":"markdown","f2fdd51f":"markdown","e8fa898e":"markdown","b7a5a60f":"markdown","a5f1145f":"markdown","13e336b3":"markdown","2c7e50f8":"markdown","1211a8f9":"markdown"},"source":{"54a64fc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns # data visualization\nimport matplotlib.pyplot as plt # data visualization\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","94215403":"# Extracting data from the csv and stroring in data (dataframe)\ndata = pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')","8c8e8428":"# What does the data look like?\ndata","1b2fe9eb":"# What datatyes do the columns in the dataset have?\ndata.dtypes","7fa9b482":"# What values are null in the dataset?\ndata.isnull()","2b230f3d":"# How many values are null in the dataset?\ndata.isnull().sum()","0e11a029":"# Which columns have null values? How many?\ndata.isnull().sum()[data.isnull().sum() > 0]","12751180":"# What is this percentage as compared to the total number of values?\ndata.isnull().sum()[data.isnull().sum() > 0]*100\/len(data)","62a2dd41":"# Dropping the rows where children and\/or country are NaN\nprint(\"Number of rows before dropping: \", len(data))\ndata.dropna(subset = ['children', 'country'], inplace = True)\nprint(\"Number of rows after dropping: \", len(data))","d82f73a5":"# Before Replacement\n# What are the values of the 'agent' column ?\ndata['agent']","b01d4812":"# What is the mode of the 'agent' column?\ndata['agent'].mode()","d41e5360":"# Replacing null values of agent with the mode\ndata['agent'].fillna(float(data['agent'].mode()), inplace=True)","a211c129":"# After replacement\n# What are the values of the 'agent' column ?\ndata['agent']","c6721b34":"# Before dropping\n# Is the column 'company' present in data?\n'company' in data","1a5bf5c2":"# Dropping the column 'company'\ndata.drop('company', axis = 1, inplace = True)","63c666e4":"# Afer dropping\n# Is the column 'company' present in data?\n'company' in data","6f288c79":"# Now, how many null values are there in the dataset?\ndata.isnull().sum().sum()","e4a89621":"# Compute summary statistic of the 'lead_time' column\ndata['lead_time'].describe()","dca0654b":"# Visualize the summary statistic of 'lead_time' column using a Whisker plot \nsns.boxplot(y = data['lead_time']) # in seaborn\ndata.boxplot(column = ['lead_time']) # in pandas\n# The black circles are outliers","7aca38ad":"# What is the interquartile range of 'lead_time'?\nQ1, Q3 = data['lead_time'].quantile([.25, .75])\n# Interquartile Range = Upper Quartile - Lower Quartile\nIQR = Q3 - Q1 \nIQR","dbf56e74":"# How many outliers does 'lead_time' have?\n((data['lead_time'] < (Q1 - 1.5 * IQR)) | (data['lead_time'] > (Q3 + 1.5 * IQR))).sum()","dcfb4c84":"# What is this percentage as compared to the total number of values?\n((data['lead_time'] < (Q1 - 1.5 * IQR)) | (data['lead_time'] > (Q3 + 1.5 * IQR))).sum()*100\/len(data)","e92bf8c7":"# Compute summary statistic of the 'total_of_special_requests' column\ndata['total_of_special_requests'].describe()","a2bef027":"# Visualize the summary statistic of 'total_of_special_requests' column using a Whisker-box plot \nsns.boxplot(y = data['total_of_special_requests']) # in pandas\ndata.boxplot(column = ['total_of_special_requests']) # in seaborn\n# The black circles are outliers","122f9043":"# What is the interquartile range of 'total_of_special_requests'?\nQ1, Q3 = data['total_of_special_requests'].quantile([.25, .75])\n# Interquartile Range = Upper Quartile - Lower Quartile\nIQR = Q3 - Q1 \nIQR","b3376dc6":"# How many outliers does 'total_of_special_requests' have?\n((data['total_of_special_requests'] < (Q1 - 1.5 * IQR)) | (data['total_of_special_requests'] > (Q3 + 1.5 * IQR))).sum()","f7872a48":"# What is this percentage as compared to the total number of values?\n((data['total_of_special_requests'] < (Q1 - 1.5 * IQR)) | (data['total_of_special_requests'] > (Q3 + 1.5 * IQR))).sum()*100\/len(data)","59f34521":"# Compute summary statistic of the 'stays_in_weekend_nights' column\ndata['stays_in_weekend_nights'].describe()","dfa50b7a":"# Visualize the summary statistic of 'stays_in_weekend_nights' column using a Whisker-box plot \nsns.boxplot(y = data['stays_in_weekend_nights']) # in pandas\ndata.boxplot(column = ['stays_in_weekend_nights']) # in seaborn\n# The black circles are outliers","b8b86e34":"# What is the interquartile range of 'stays_in_weekend_nights'?\nQ1, Q3 = data['stays_in_weekend_nights'].quantile([.25, .75])\n# Interquartile Range = Upper Quartile - Lower Quartile\nIQR = Q3 - Q1 \nIQR","7dcd3b95":"# How many outliers does 'stays_in_weekend_nights' have?\n((data['stays_in_weekend_nights'] < (Q1 - 1.5 * IQR)) | (data['stays_in_weekend_nights'] > (Q3 + 1.5 * IQR))).sum()","ce89fed6":"# What is this percentage as compared to the total number of values?\n((data['stays_in_weekend_nights'] < (Q1 - 1.5 * IQR)) | (data['stays_in_weekend_nights'] > (Q3 + 1.5 * IQR))).sum()*100\/len(data)","947fea3e":"outliers = data[((data['stays_in_weekend_nights'] < (Q1 - 1.5 * IQR)) | (data['stays_in_weekend_nights'] > (Q3 + 1.5 * IQR)))].index\ndata.drop(outliers, inplace = True)","a977ae54":"# We can plot it again to see the changes\n# Visualize the summary statistic of 'stays_in_weekend_nights' column using a Whisker-box plot \nsns.boxplot(y = data['stays_in_weekend_nights']) # in pandas\ndata.boxplot(column = ['stays_in_weekend_nights']) # in seaborn\n# The black circles are outliers","eb1ffcf9":"data['stays_in_weekend_nights'].describe()","cc4961bd":"# Have we removed all the outliers?\n((data['stays_in_weekend_nights'] < (Q1 - 1.5 * IQR)) | (data['stays_in_weekend_nights'] > (Q3 + 1.5 * IQR))).sum()","b395fefe":"# How much in advance are the customers booking before their arrival?\nplt.figure(figsize = (10, 5))\nsns.barplot(x = 'arrival_date_year',y = 'lead_time', data = data).set_title('Arrival Year and Lead Time')","ca52d110":"# The above visualization does not give us a lot of information, so we can divide the x-axis into months instead of years\ndata.groupby(['arrival_date_month', 'arrival_date_year'])[['adults', 'children']].sum().plot.bar(figsize = (15, 5))\n\nplt.ylabel('no. of adults\/children')\nplt.title('Adults\/Children per Month, Year')","ed237301":"# Contrast the number of booking changes in the city hotel to that in the resort hotel \nplt.rcParams.update({'text.color': \"white\",\n                     'axes.labelcolor': \"none\"})\ndata.groupby(['hotel'])['booking_changes'].sum().plot.pie(radius = 2)","da986f95":"data.groupby(['hotel'])['required_car_parking_spaces'].sum().plot.pie(radius = 2)\nplt.title('Required Car Parking Spaces')","a86c2e75":"# Contrast the arrival timings of adults with children or babies with that of adults without children or babies\n\n# Finding out the values rows with and without children\nwithout_children = data[(data['children'] == 0) | (data['babies'] == 0)]\nwith_children = data[(data['children'] != 0) | (data['babies'] != 0)]\n\n# Calculating what percentage of the total values they form\nwithout_children_perc = without_children['arrival_date_month'].value_counts(sort = False)\/sum(without_children['arrival_date_month'].value_counts(sort = False)) * 100\nwith_children_perc = with_children['arrival_date_month'].value_counts(sort = False)\/sum(with_children['arrival_date_month'].value_counts(sort = False)) * 100\n\n# Plotting the two barplots\nfig, ax = plt.subplots(2, 1, figsize = (12, 8))\n\nplt.rcParams.update({'text.color': \"black\",\n                     'axes.labelcolor': \"black\"})\nfig.tight_layout(pad = 6.0)\n\nsns.barplot(x = without_children['arrival_date_month'].value_counts(sort = False).index, y = without_children_perc, ax = ax[0]).set(title= \"Distribution of customers without children\/babies month-wise\", xlabel = \"Months\", ylabel = \"Percentage\")\nsns.barplot(x = with_children['arrival_date_month'].value_counts(sort = False).index, y = with_children_perc, ax = ax[1]).set(title= \"Distribution of customers with children\/babies month-wise\", xlabel = \"Months\", ylabel = \"Percentage\")","8bcfbee5":"# Plot the number of guests arriving from different countries\nplt.figure(figsize = (30,10))\n\ndata.groupby(['country']).size().sort_values(ascending = False).plot.bar()","004465f8":"data.groupby(['country']).size().sort_values(ascending = False).index","bac90ccb":"import plotly.graph_objects as go\n\nlabels = data.groupby(['country']).size().sort_values(ascending = False).index\nvalues = data.groupby(['country']).size().sort_values(ascending = False)\n\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig.show()","dd1608aa":"lead_cancel_data_10 = data.groupby(\"lead_time\")[\"is_canceled\"].describe()\n\n# show figure\nplt.figure(figsize = (12, 8))\nsns.regplot(x = lead_cancel_data_10.index, y = lead_cancel_data_10[\"mean\"].values * 100)\nplt.title(\"Eff\")","e32b1f08":"### 1. <1% -> drop rows","6d2f0cd3":"# **Part 2:** Outlier Detection and Data Visualization","731b6e58":"## DATA VISUALIZATION","10eb09aa":"Yes, all the outliers have been removed","a5c96776":"### 3. \\>60% -> drop column","e9743705":"This chart tells us that Resort Hotel needs more parking spaces as compared to City Hotels","42615205":"If we summarise 'stays_in_the_weekend_nights' again","b82a036c":"#### Yes, there are no more null values in the data","c6bef466":"#### Checking if we have dealt with all null values","4a2372f7":"# **Part 1:** Initial Inspection and Data Cleaning","b4714b65":"The above bar plot is not very clear, so we can use a pie chart instead","813e85bb":"## Null value analysis\n\n##### There are four columns with null values. We can put them in three categories\n1. <1% -> drop rows <br\/>\n    a. children <br\/>\n    b. country <br\/>\n    \n2. <60% -> substitute null values with mode <br\/>\n    a. agent <br\/>\n    \n3. \\>60% -> drop column <br\/>\n    a. company","f2fdd51f":"##### Conclusions:\nThe above dataset is from US and so the values depend on the climate and lifestyle there. \n1. We notice a drop in the colder months like December and January and rise in hotter months like May and June\n2. We also notice a rise in the number of children during July and August because that is when the students have summer holidays","e8fa898e":"------------------------------------------------------------------------------------------------------------------------------------------------------------------","b7a5a60f":"This doesn't really tell us any useful information","a5f1145f":"### 2. <60% -> substitute null values with mode","13e336b3":"This is the only one with a low number of outliers\nSo, we can drop these rows","2c7e50f8":"## OUTLIER DETECTION","1211a8f9":"------------------------------------------------------------------------------------------------------------------------------------------------------------------"}}