{"cell_type":{"1c747fee":"code","5fb15e04":"code","88fa4720":"code","6bc2ba4a":"code","6385a42b":"code","6fb108fa":"code","4f8591d7":"code","4f401ec8":"code","147ad96b":"code","c8e1d321":"code","79cc03c3":"code","d04deb7a":"code","eb806f12":"code","f6ad3688":"code","0ea82ca2":"code","abfc92bf":"code","401f6ca7":"code","02daa7ce":"code","019a1181":"code","3755b95e":"code","024128d0":"code","258ce8f8":"code","0aa2f994":"code","2a1696e8":"markdown","f4b2b5b6":"markdown","c4b6bd5a":"markdown","0b26c16f":"markdown","74ee1887":"markdown","d09d42b7":"markdown","27ea995d":"markdown","56d51a46":"markdown","291a150e":"markdown","628e833d":"markdown","0dae9727":"markdown","09d80fab":"markdown","3950e5b5":"markdown","903f9331":"markdown","ddd9a069":"markdown","20536ad3":"markdown","14da26e1":"markdown","ccf1f746":"markdown","12c98f8e":"markdown","8772117d":"markdown"},"source":{"1c747fee":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler,PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n%matplotlib inline","5fb15e04":"#Importing Data Sets\nfile_name='https:\/\/cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud\/IBMDeveloperSkillsNetwork-DA0101EN-SkillsNetwork\/labs\/FinalModule_Coursera\/data\/kc_house_data_NaN.csv'\ndf=pd.read_csv(file_name)","88fa4720":"df.head()","6bc2ba4a":"df.dtypes","6385a42b":"df.describe()","6fb108fa":"df.drop(columns=(['id', 'Unnamed: 0']),inplace = True)\ndf.describe()","4f8591d7":"missing_values = df.isna().sum()\nmissing_values","4f401ec8":"mean=df['bedrooms'].mean()\ndf['bedrooms'].replace(np.nan,mean, inplace=True)","147ad96b":"mean=df['bathrooms'].mean()\ndf['bathrooms'].replace(np.nan,mean, inplace=True)","c8e1d321":"print(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())","79cc03c3":"df['floors'].value_counts().to_frame()","d04deb7a":"sns.boxplot(x='waterfront',y='price',data=df)","eb806f12":"sns.regplot(x='sqft_above',y='price',data=df)\nplt.ylim(0,)","f6ad3688":"df.corr()['price'].sort_values()","0ea82ca2":"X = df[['long']]\nY = df['price']\nlm = LinearRegression()\nlm.fit(X,Y)\nlm.score(X, Y)","abfc92bf":"X=df[['sqft_living']]\nY=df['price']\nlm1=LinearRegression()\nlm1.fit(X,Y)\nlm1.score(X, Y)","401f6ca7":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]\nX = df[features]\nY=df['price']\nlm2=LinearRegression()\nlm2.fit(X, Y)\nY_hat = lm2.predict(X)\nlm2.score(X, Y)","02daa7ce":"Input=[('scale',StandardScaler()),('polynomial', PolynomialFeatures(include_bias=False)),('model',LinearRegression())]","019a1181":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]\nX = df[features]\nY=df['price']\npipe = Pipeline(Input)\npipe.fit(X,Y)\nyhat = pipe.predict(X)\npipe.score(X, Y)","3755b95e":"#Import the necessary modules:\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nprint(\"done\")","024128d0":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]    \nX = df[features]\nY = df['price']\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.15, random_state=1)\n\n\nprint(\"number of test samples:\", x_test.shape[0])\nprint(\"number of training samples:\",x_train.shape[0])","258ce8f8":"from sklearn.linear_model import Ridge\nRgModel =  Ridge(alpha = 1)\nRgModel .fit(x_train,y_train)\nyhat = RgModel.predict(x_test)\nRgModel.score(x_test,y_test)","0aa2f994":"pr=PolynomialFeatures(degree=2)\nx_train_pr = pr.fit_transform(x_train)\nx_test_pr = pr.fit_transform(x_test)\n\nRgModel =  Ridge(alpha = 1)\nRgModel .fit(x_train_pr,y_train)\nyhat = RgModel.predict(x_test_pr)\nRgModel.score(x_test_pr,y_test)","2a1696e8":"Perform a second order polynomial transform on both the training data and testing data. Create and fit a Ridge regression object using the training data, set the regularisation parameter to 0.1, and calculate the R^2 utilising the test data provided.","f4b2b5b6":"We can use the Pandas method corr() to find the feature other than price that is most correlated with price.","c4b6bd5a":"Use the function boxplot in the seaborn library to determine whether houses with a waterfront view or without a waterfront view have more price outliers.","0b26c16f":"We can Fit a linear regression model using the longitude feature 'long' and caculate the R^2.","74ee1887":"We will split the data into training and testing sets:","d09d42b7":"Create a list of tuples, the first element in the tuple contains the name of the estimator:\n\n'scale'\n\n'polynomial'\n\n'model'\n\nThe second element in the tuple contains the model constructor\n\nStandardScaler()\n\nPolynomialFeatures(include_bias=False)\n\nLinearRegression()\n","27ea995d":"Fit a linear regression model to predict the 'price' using the list of features:","56d51a46":"<h1 style=\"background-color:black\n;font-family:newtimeroman;font-size:350%;text-align:center;border-radius: 100px 100px; color:#40E0D0\"> House Price prediction <\/h1><a id=0><\/a>","291a150e":"We also replace the missing values of the column 'bathrooms' with the mean of the column 'bathrooms'  using the method replace()","628e833d":"Use the method value_counts to count the number of houses with unique floor values, use the method .to_frame() to convert it to a dataframe.","0dae9727":"Use the function regplot in the seaborn library to determine if the feature sqft_above is negatively or positively correlated with price","09d80fab":"Display the data types of each column","3950e5b5":"Use the list to create a pipeline object to predict the 'price', fit the object using the features in the list features, and calculate the R^2","903f9331":"We can Fit a linear regression model to predict the 'price' using the feature 'sqft_living' and then calculate the R^2","ddd9a069":"We can replace the missing values of the column 'bedrooms' with the mean of the column 'bedrooms'using the method replace()","20536ad3":"Model Evaluation and Refinement","14da26e1":"Use the Method describe to obtain a statistical summary of the dataframe","ccf1f746":"Drop the columns \"id\" and \"Unnamed: 0\"","12c98f8e":"Create and fit a Ridge regression object using the training data, set the regularization parameter to 0.1, and calculate the R^2 using the test data.","8772117d":"We have missing values for the columns  bedrooms and  bathrooms"}}