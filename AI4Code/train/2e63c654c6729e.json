{"cell_type":{"958c4d78":"code","99286b20":"code","4dc211b4":"code","8f966830":"code","fd3b5d09":"code","fe582912":"code","ed9d0a7d":"code","e56ca8e3":"code","2a9ba2f6":"code","a8beb16b":"code","946575db":"code","4c983051":"code","ae67cba8":"markdown","83ff01d6":"markdown","3c6fa14b":"markdown","5d5c1bad":"markdown","9d232cb8":"markdown","90126800":"markdown"},"source":{"958c4d78":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob\nimport json\nimport re\nimport scipy as sc\nimport warnings\n\nimport matplotlib.pyplot as plt\nimport os\n\n","99286b20":"root_path = '\/kaggle\/input\/CORD-19-research-challenge\/'\nmetadata_path = f'{root_path}\/metadata.csv'\nmeta_df = pd.read_csv(metadata_path, dtype={\n    'pubmed_id': str,\n    'Microsoft Academic Paper ID': str, \n    'doi': str\n})\nmeta_df.head()\nmeta_df.info()","4dc211b4":"meta_df.head()\n","8f966830":"df=pd.read_csv('..\/input\/covid19prepareddata\/Prepared_data.csv')\ndf.head()\ndf.info()","fd3b5d09":"task1=\"\"\"Specifically, we want to know what the literature reports about:Specifically, we want to know what the literature reports about:\n\nHow can we measure changes in COVID-19_s behavior in a human host as the virus evolves over time_\nHuman immune response to COVID-19\nWhat is known about adaptations (mutations) of the virus_.csv\nStudies to monitor potential adaptations\nAre there studies about phenotypic change?\nChanges in COVID-19 as the virus evolves\nWhat regional genetic variations (mutations) exist\nWhat do models for transmission predict?\nSerial Interval (time between symptom onset in infector-infectee pair)\nEfforts to develop qualitative assessment frameworks\"\"\"","fe582912":"task=[task1]\nquery=[]\nfor i in range(len(task)):\n    task[i]=task[i].split(\"\\n\")\n    query.append(task[i][2:])\nprint(query)","ed9d0a7d":"!pip install -U sentence-transformers","e56ca8e3":"from sklearn.metrics.pairwise import cosine_similarity\nfrom sentence_transformers import SentenceTransformer\n\nwarnings.filterwarnings(\"ignore\")\nmodel = SentenceTransformer('bert-base-nli-mean-tokens')\n    ","2a9ba2f6":"query_embeddings=[]\nfor i in range(len(query)):\n    query_embeddings.append(model.encode(query[i]))","a8beb16b":"df.reset_index(drop = True, inplace = True)\ndf['abstract_summary']\nabstract_summary_embeddings = model.encode(df['abstract_summary'])\n","946575db":"def getfile_insensitive(path):\n    directory, filename = os.path.split(path)\n    directory, filename = (directory or '.'), filename.lower()\n    for f in os.listdir(directory):\n        newpath = os.path.join(directory, f)\n        if os.path.isfile(newpath) and f.lower() == filename:\n            return newpath\n\ndef isfile_insensitive(path):\n    return getfile_insensitive(path) is not None\n\nsample_document='4_models_and_open_questions'\n","4c983051":"scores=[]\ndef formatting(_topdf):\n    _topdf.rename(columns={'journal':'Journal'},inplace=True)\n    _topdf.rename(columns={'url':'Study Link'},inplace=True)\n    _topdf.rename(columns={'publish_time':'Date'},inplace=True)\n    _topdf.rename(columns={'title':'Study'},inplace=True)\n    \n    return _topdf\nfor tsk in range(len(task)):\n    \n    for prob, query_embedding in zip(query[tsk], query_embeddings[tsk]):\n        dis = sc.spatial.distance.cdist([query_embedding], abstract_summary_embeddings, \"cosine\")[0]\n        #print(dis)\n        results = zip(range(len(dis)), dis)\n        results = sorted(results, key=lambda x: x[1])\n        #print(\"Query:\", prob)\n        #print(\"Answer:\" )\n        scores.append(1-results[0][1])\n        #print(df['abstract'][results[0][0]].strip(), \"\\n(Score: %.4f)\" % (1-results[0][1]),\"\\n\")\n        k=50\n        #print(results[:k])\n        topk=results[:k]\n        id,id_v=zip(*topk)\n        topData=df.iloc[1]\n        _topdf = df.iloc[list(id), :]\n        _topdf = formatting(_topdf)\n        csv_str=prob.replace('?','_')+'.csv'\n        #print(csv_str)\n        path1 = f'{root_path}Kaggle\/target_tables\/{sample_document}\/'+csv_str\n        path1 = f'{path1}'\n        print(path1)\n        if (isfile_insensitive(path1)):\n            path1=getfile_insensitive(path1)\n            q_df = pd.read_csv(path1)\n            print(\"exist!\")\n        else:      \n            path1 = f'{root_path}Kaggle\/target_tables\/{sample_document}\/'\n            path1 = os.path.join(path1,os.listdir(path1)[-1])\n            q_df = pd.read_csv(path1)\n            q_df.drop(q_df.index,inplace=True)\n        #print(path1)\n        q_df.head()\n        q_df\n        #print(len(q_df))\n        #print(len(_topdf))\n        #print(q_df.columns)\n        res_df = pd.merge(q_df, _topdf, how='outer', on=['Study','Study Link','Date','Journal'])[q_df.columns[1:]]\n        #print(len(res_df))\n        res_df.info()\n        res_csv=r'\/kaggle\/output\/'+ csv_str\n        print(res_csv)\n        res_df.to_csv( csv_str, index = True)","ae67cba8":"# Get data from Prepared data. This data is created in another notebook in kaggle I made.\n\nCite:\nhttps:\/\/www.kaggle.com\/nike0good\/population-studies-that-related-to-covid-19","83ff01d6":"@inproceedings{Population studies that related to COVID-19, author = {Hang, Wu}, title = {Population studies that related to COVID-19}, year = {2020}, month = {June}, url = {\\url{https:\/\/www.kaggle.com\/nike0good\/population-studies-that-related-to-covid-19} } }","3c6fa14b":"# Check the keywords of the problems.","5d5c1bad":"# # This is a notebook that address models and open questions related to COVID-19","9d232cb8":"Specifically, we want to know what the literature reports about:\n\n- How can we measure changes in COVID-19_s behavior in a **human host** as the virus **evolves** over time_\n- **Human immune** response to COVID-19\n- What is known about **adaptations** (mutations) of the virus_.csv\n- Studies to monitor **potential adaptations**\n- Are there studies about **phenotypic change**?\n- **Changes** in COVID-19 as the **virus evolves**\n- What **regional** **genetic variations** (mutations) exist\n- What do models for **transmission predict**?\n- **Serial Interval** (time between symptom onset in infector-infectee pair)\n- Efforts to develop **qualitative assessment frameworks**\n","90126800":"# Prepare data"}}