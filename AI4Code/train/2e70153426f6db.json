{"cell_type":{"c25010a7":"code","86a591db":"code","3f4e970a":"code","cb5ced6e":"code","5190c74b":"code","27574768":"code","883d1813":"code","8d2764d3":"code","68955492":"code","25bbef51":"code","d851fe04":"code","45720823":"code","48724921":"code","1768f4f0":"code","45c7023c":"code","19eb52a1":"code","1ffba64d":"code","dac3d0e4":"code","db64b75f":"code","81e34aa3":"code","ba8fb8b1":"code","e5a7f03f":"code","c7340d90":"code","de10fdc7":"code","30a21db8":"code","f9fc7b33":"code","0f81c7dc":"code","13f1b951":"code","3d013cfd":"code","8d143ee1":"code","0ebfdb33":"code","47deda77":"code","acb14968":"code","f22e4371":"code","1c6aca6b":"code","6c288d75":"code","57389fd8":"code","fb9a7453":"code","977d52a2":"code","fd284dc2":"code","147400a6":"code","e45d84ec":"code","aaf8183f":"code","d6b53412":"code","dd9f4c19":"code","9a6678a3":"markdown","e9138c15":"markdown","9d98ec84":"markdown","de24f940":"markdown","365a20d8":"markdown","faef123a":"markdown","2be5509d":"markdown","d8876eea":"markdown","5bc76111":"markdown","e1cf0dde":"markdown","056c8ff8":"markdown","c075cabf":"markdown","75cd8eb5":"markdown","1f171909":"markdown","2746895c":"markdown","cf8c090f":"markdown","9367f878":"markdown","c89fa2f3":"markdown","954d293e":"markdown","90e87dd7":"markdown","78725b4b":"markdown","860e97ac":"markdown","4d1f99cf":"markdown"},"source":{"c25010a7":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report,accuracy_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.ensemble import AdaBoostClassifier,RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nimport xgboost\nfrom xgboost import XGBClassifier\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","86a591db":"data=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\ndata.head()","3f4e970a":"data.info()","cb5ced6e":"for col in data.columns:\n    p=(data[col].isnull().sum()\/len(data))*100\n    print('the column {0} have {1} percent of NAN values'.format(col,p.round(2)))\n    print()","5190c74b":"# data.drop(['Sulfate'],axis=1,inplace=True)","27574768":"def replace_nan_by_mean(info):\n    for col in info.columns:\n        info[col].fillna(np.mean(info[col]),inplace=True)\n    return info\ndata=replace_nan_by_mean(data)","883d1813":"data.describe()","8d2764d3":"data.info()","68955492":"train_data,test_data=train_test_split(data,test_size=0.2,random_state=42)","25bbef51":"plt.figure(figsize=(15,12))\nsns.heatmap(train_data.corr(),annot=True,vmin=-1)\nplt.show()","d851fe04":"plt.figure(figsize=(18,15))\nsns.pairplot(train_data)\nplt.show()","45720823":"plt.figure(figsize=(20,20))\nfor i in range(8):\n    plt.subplot(4,2,(i%8)+1)\n    sns.distplot(train_data[train_data.columns[i]])\n    plt.title(train_data.columns[i],fontdict={'size':20,'weight':'bold'},pad=3)\nplt.show()","48724921":"train_inp=train_data.iloc[:,:9]\ntrain_out=train_data.iloc[:,9]\ntest_inp=test_data.iloc[:,:9]\ntest_out=test_data.iloc[:,9]","1768f4f0":"scaler=MinMaxScaler()\ntrain_x_std=scaler.fit_transform(train_inp)","45c7023c":"test_x_std=scaler.transform(test_inp)","19eb52a1":"models_scores=pd.DataFrame()","1ffba64d":"model_log=LogisticRegression(C=0.1)\nmodel_log.fit(train_x_std,train_out)","dac3d0e4":"log_acc=accuracy_score(test_out,model_log.predict(test_x_std))\nmodel_acc=pd.DataFrame({'Model name':['Logistic Regression'],'Accuracy':[log_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)","db64b75f":"print('Train report of linear Regression \\n',classification_report(train_out,model_log.predict(train_x_std)))\nprint('Test report of linear Regression \\n',classification_report(test_out,model_log.predict(test_x_std)))","81e34aa3":"plt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,model_log.predict(test_x_std)),annot=True,)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.show()","ba8fb8b1":"model_tree=DecisionTreeClassifier()\ngrid_tree=GridSearchCV(model_tree,param_grid={'max_depth':range(6,11)})\ngrid_tree.fit(train_inp,train_out)","e5a7f03f":"tree_acc=accuracy_score(test_out,grid_tree.predict(test_inp))\nmodel_acc=pd.DataFrame({'Model name':['Decision Tree classifier'],'Accuracy':[tree_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)\ngrid_tree.best_params_","c7340d90":"print('Train report of DecisionTreeClassifier \\n',classification_report(train_out,grid_tree.predict(train_inp)))\nprint('Test report of DecisionTreeClassifier \\n',classification_report(test_out,grid_tree.predict(test_inp)))","de10fdc7":"\nplt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,grid_tree.predict(test_x_std)),annot=True)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.xlabel('Predicted value')\nplt.ylabel('Actual value')\nplt.show()","30a21db8":"\nmodel_forest=RandomForestClassifier()\ngrid_forest=GridSearchCV(model_forest,param_grid={'max_depth':range(6,11)})\ngrid_forest.fit(train_inp,train_out)","f9fc7b33":"forest_acc=accuracy_score(test_out,grid_forest.predict(test_inp))\nmodel_acc=pd.DataFrame({'Model name':['Random Forest Classifier'],'Accuracy':[forest_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)\nprint('best param',grid_forest.best_params_)\nprint('best score',grid_forest.best_score_)","0f81c7dc":"print('Train report of RandomForestClassifier \\n',classification_report(train_out,grid_forest.predict(train_inp)))\nprint('Test report of RandomForestClassifier \\n',classification_report(test_out,grid_forest.predict(test_inp)))","13f1b951":"plt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,grid_forest.predict(test_inp)),annot=True)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.xlabel('Predicted value')\nplt.ylabel('Actual value')\nplt.show()","3d013cfd":"model_xgb=XGBClassifier(n_estimators=10)\n# grid_xgb=GridSearchCV(model_forest,param_grid={'n_estimators':[25,50,75,100]})\nmodel_xgb.fit(train_x_std,train_out)","8d143ee1":"xgb_acc=accuracy_score(test_out,model_xgb.predict(test_x_std))\nmodel_acc=pd.DataFrame({'Model name':['XGBoost'],'Accuracy':[xgb_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)","0ebfdb33":"print('Train report of XGBClassifier \\n',classification_report(train_out,model_xgb.predict(train_x_std)))\nprint('Test report of XGBClassifier \\n',classification_report(test_out,model_xgb.predict(test_x_std)))","47deda77":"plt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,model_xgb.predict(test_x_std)),annot=True)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.xlabel('Predicted value')\nplt.ylabel('Actual value')\nplt.show()","acb14968":"model_neighbor=KNeighborsClassifier()\ngrid_neighbor=GridSearchCV(model_neighbor,param_grid={'n_neighbors':range(4,12)})\ngrid_neighbor.fit(train_x_std,train_out)","f22e4371":"neighbors_acc=accuracy_score(test_out,grid_neighbor.predict(test_x_std))\nmodel_acc=pd.DataFrame({'Model name':['KNeighborsClassifier'],'Accuracy':[neighbors_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)\ngrid_neighbor.best_params_","1c6aca6b":"print('Train report of KneighborsClassifier \\n',classification_report(train_out,grid_neighbor.predict(train_x_std)))\nprint('Test report of KneighborsClassifier \\n',classification_report(test_out,grid_neighbor.predict(test_x_std)))","6c288d75":"plt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,grid_neighbor.predict(test_x_std)),annot=True)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.xlabel('Predicted value')\nplt.ylabel('Actual value')\nplt.show()","57389fd8":"model_svc=SVC(C=2)\nmodel_svc.fit(train_x_std,train_out)","fb9a7453":"svc_acc=accuracy_score(test_out,grid_neighbor.predict(test_x_std))\nmodel_acc=pd.DataFrame({'Model name':['SVC'],'Accuracy':[svc_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)","977d52a2":"print('Train report of SVClassifier \\n',classification_report(train_out,model_svc.predict(train_x_std)))\nprint('Test report of SVClassifier \\n',classification_report(test_out,model_svc.predict(test_x_std)))","fd284dc2":"plt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,model_svc.predict(test_x_std)),annot=True)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.xlabel('Predicted value')\nplt.ylabel('Actual value')\nplt.show()","147400a6":"model_adaboost=AdaBoostClassifier(n_estimators=70)\nmodel_adaboost.fit(train_x_std,train_out)","e45d84ec":"adaboost_acc=accuracy_score(test_out,model_adaboost.predict(test_x_std))\nmodel_acc=pd.DataFrame({'Model name':['Adaboost'],'Accuracy':[adaboost_acc]})\nmodels_scores=models_scores.append(model_acc,ignore_index=True)","aaf8183f":"print('Train report of AdaboostClassifier \\n',classification_report(train_out,model_adaboost.predict(train_x_std)))\nprint('Test report of ADAboostClassifier \\n',classification_report(test_out,model_adaboost.predict(test_x_std)))","d6b53412":"plt.figure(figsize=(10,8))\nsns.heatmap(confusion_matrix(test_out,model_adaboost.predict(test_x_std)),annot=True)\nplt.title('Confusion matrix of test data',fontdict={'size':22,'weight':'bold'})\nplt.xlabel('Predicted value')\nplt.ylabel('Actual value')\nplt.show()","dd9f4c19":"models_scores.sort_values(by=['Accuracy'],ascending=False,ignore_index=True)","9a6678a3":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Support Vector Classifier<\/b><\/h4>","e9138c15":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Logistic Regression<\/b><\/h4>","9d98ec84":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Overview Of Dataset<\/b><\/h1>\n","de24f940":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Train Test Spliting Of Data<\/b><\/h1>\n","365a20d8":"<h1 style=\"background-color:#8ff080;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b><u>Drinking Water Quality Check<\/u><\/b><\/h1>\n","faef123a":"<center><img src=\"https:\/\/media.istockphoto.com\/photos\/glass-of-water-on-white-background-picture-id1161576130?k=6&m=1161576130&s=612x612&w=0&h=d0xqvms6VETXkvNyizAbgcSY0z_wmaw1-SG2TXdvD3M=\",height='300',width='600'><\/center>","2be5509d":"### Hope you enjoyed my notebook if you found it useful. Please upvote it!!\n### If having any queries or suggestions feel free to ask in comment section.","d8876eea":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Scaling Data<\/b><\/h1>\n","5bc76111":"### About the columns of dataset","e1cf0dde":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b><u>Models Test Accuracy<\/u><\/b><\/h1>","056c8ff8":"Access to safe drinking-water is essential to health, a basic human right and a component of effective policy for health protection. This is important as a health and development issue at a national, regional and local level. In some regions, it has been shown that investments in water supply and sanitation can yield a net economic benefit, since the reductions in adverse health effects and health care costs outweigh the costs of undertaking the interventions.","c075cabf":"### Checking percentage of missing values in dataset ","75cd8eb5":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>RandomForest Classifier<\/b><\/h4>","1f171909":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Models Evaluation<\/b><\/h1>","2746895c":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Importing Libraries And Loading Dataset<\/b><\/h1>\n","cf8c090f":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>XGBoost Classifier<\/b><\/h4>","9367f878":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>AdaBoost Classifier<\/b><\/h4>","c89fa2f3":"1. pH value:\nPH is an important parameter in evaluating the acid\u2013base balance of water. The current investigation ranges were 6.52\u20136.83 which are in the range of WHO standards.\n\n2. Hardness:\nHardness is mainly caused by calcium and magnesium salts.Hardness was originally defined as the capacity of water to precipitate soap caused by Calcium and Magnesium.\n\n3. Solids (Total dissolved solids - TDS):\nWater has the ability to dissolve a wide range of inorganic and some organic minerals or salts such as potassium, calcium, sodium, bicarbonates, chlorides, magnesium, sulfates etc. Desirable limit for TDS is 500 mg\/l and maximum limit is 1000 mg\/l which prescribed for drinking purpose.\n\n4. Chloramines:\nChlorine and chloramine are the major disinfectants used in public water systems. Chlorine levels up to 4 milligrams per liter (mg\/L or 4 parts per million (ppm)) are considered safe in drinking water.\n\n5. Sulfate:\nSulfates are naturally occurring substances that are found in minerals, soil, and rocks. They are present in ambient air, groundwater, plants, and food.\n\n6. Conductivity:\nPure water is not a good conductor of electric current rather\u2019s a good insulator. According to WHO standards, EC value should not exceeded 400 \u03bcS\/cm.\n\n7. Organic_carbon:\nTotal Organic Carbon (TOC) in source waters comes from decaying natural organic matter (NOM) as well as synthetic sources. TOC is a measure of the total amount of carbon in organic compounds in pure water. According to US EPA < 2 mg\/L as TOC in treated \/ drinking water, and < 4 mg\/Lit in source water which is use for treatment.\n\n8. Trihalomethanes:\nTHMs are chemicals which may be found in water treated with chlorine. The concentration of THMs in drinking water varies according to the level of organic material in the water, the amount of chlorine required to treat the water, and the temperature of the water that is being treated. THM levels up to 80 ppm is considered safe in drinking water.\n\n9. Turbidity:\nThe turbidity of water depends on the quantity of solid matter present in the suspended state. The mean turbidity value obtained for Wondo Genet Campus (0.98 NTU) is lower than the WHO recommended value of 5.00 NTU.\n\n10. Potability:\nIndicates if water is safe for human consumption where 1 means Potable and 0 means Not potable.","954d293e":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>DecisionTree Classifier<\/b><\/h4>","90e87dd7":"<h4 style=\"background-color:#f45999;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>KNeighbors Classifier<\/b><\/h4>","78725b4b":"<h1 style=\"background-color:#f45123;font-family:newtimeroman;font-size:550%;text-align:center;border-radius: 15px 10px;padding: 5px\"><b>Data Visualizations<\/b><\/h1>\n","860e97ac":"### From above classification report we could say that total accuracy is good i.e, 63% but it is quit clear that the model works very badly in predicting 1. Thus is is worst model and we should discard it.","4d1f99cf":"### Replacing missing value by mean of all values in respective column "}}