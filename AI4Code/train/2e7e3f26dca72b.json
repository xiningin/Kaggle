{"cell_type":{"7036c103":"code","337ca5a6":"code","32815b77":"code","3f62123d":"code","ba5b8dd2":"code","70bde64d":"code","064bdf8f":"code","02da14ed":"code","ee2b9136":"code","334b5d5b":"code","9726acb2":"code","c7485638":"code","272d1be8":"code","f10a91ed":"code","7732e93a":"code","66212c48":"code","89e36d04":"code","48f0872f":"code","afe2b3ed":"code","6aa6d44e":"code","02a1c1b0":"code","6478762a":"code","028cd87a":"code","cd743831":"code","b2991ec8":"code","d762ec1c":"code","0fb8785a":"code","5adb5187":"code","9b5beded":"code","f1af152d":"code","834cc4c6":"code","2ad76e40":"code","83b061dd":"code","74f65741":"code","c9ccda33":"code","f6426789":"code","0cf396d4":"code","28d3c83f":"code","43ccb772":"code","cdd03507":"code","09d86eb7":"code","6cbee26d":"code","d987c67d":"code","35e40cac":"code","35537834":"code","6ce77481":"code","3490b08a":"code","21a24f0e":"code","c7904916":"code","4d64bbd5":"code","e278ab07":"code","4283ada7":"code","2f0b1ee1":"code","b8f25b87":"code","e9466a42":"code","6fdf1b9d":"code","dc9655ab":"code","6ceabca4":"code","304e1ee5":"code","d5186b19":"code","0a96ee7b":"code","1a90a7c0":"code","52f0b36f":"code","787182c2":"code","d1dd0fe2":"code","bfce8fe2":"code","30072913":"code","5bd54ffb":"code","de3e43c9":"code","25999b95":"code","aee9618d":"code","959cda97":"code","10d82fbc":"code","64ef5f06":"code","2b3cc571":"code","b1b6299e":"code","68c8b244":"code","17bf63d6":"code","a5722969":"code","e93d0c38":"code","af2d4293":"code","21543f3d":"code","4596b887":"code","98ee378f":"code","de94f7f8":"code","8d8471af":"code","2f1598ad":"code","172ea5cc":"code","25e9b869":"code","ada7affb":"code","a2cf00b3":"code","fe0c7cd0":"code","4dbd723e":"code","9d464e9a":"code","03f6c810":"code","bcd30892":"markdown","63b2f91b":"markdown","309e3efe":"markdown","2f705013":"markdown","d798e6bd":"markdown","98f7275b":"markdown","22142a21":"markdown","eb5391b1":"markdown","78073d1c":"markdown","f531a0f6":"markdown","a951df4d":"markdown","ac751adc":"markdown","eab48417":"markdown","5204cffe":"markdown","45088d19":"markdown","d3ec5abe":"markdown","3f9d3611":"markdown","46c8a407":"markdown","6dcbebec":"markdown","75330cec":"markdown","d869cd42":"markdown","ee828e17":"markdown","9539efe3":"markdown","e7a753ed":"markdown","70bc9d07":"markdown","31d40374":"markdown","7567c324":"markdown","04487b13":"markdown","185eba06":"markdown","ff9ba69d":"markdown","821d40fa":"markdown","e979e46e":"markdown","205ab77d":"markdown","55f7695b":"markdown","c8288e48":"markdown","ca2df04e":"markdown","ab6a0d52":"markdown","4c3616c2":"markdown","8dcb6232":"markdown","6b55de09":"markdown","b2972561":"markdown","3781e0b2":"markdown","68abe301":"markdown","f28d00a9":"markdown","7e526316":"markdown","fd3e977f":"markdown","4d4c2a2e":"markdown","56568308":"markdown","e0c34ad1":"markdown","df49e94e":"markdown","c5a44f35":"markdown","7097d59f":"markdown","89d46d74":"markdown","8c81fc7d":"markdown","c21ceb6d":"markdown","9a45f51c":"markdown","ce33e53a":"markdown","c2190f47":"markdown","969c1d1e":"markdown","48fb7d85":"markdown","939e40d5":"markdown","5d0bd41f":"markdown","1e430a32":"markdown","0be61aae":"markdown","ba2c2de6":"markdown","7f64a80b":"markdown","109154d8":"markdown","8bfb8375":"markdown"},"source":{"7036c103":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\n%matplotlib inline\nsns.set(rc={'figure.figsize':(24,8),'figure.dpi':500})\n","337ca5a6":"df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","32815b77":"df.head()","3f62123d":"pd.DataFrame([df.shape],index=['#'],columns=['Rows','Columns'])","ba5b8dd2":"df.info()","70bde64d":"corr_data=df.corr().drop('SalePrice').sort_values('SalePrice',ascending=False)[['SalePrice']]","064bdf8f":"corr_data","02da14ed":"pd.DataFrame([[df.isna().sum().sum()]],columns=['Dataset'],index=['Missing Values'])","ee2b9136":"def missing_percent(df):\n    nan_precent=100*(df.isnull().sum().sort_values(ascending=False)\/len(df))\n    # Filter to find the missing count > 0\n    return nan_precent[nan_precent>0]","334b5d5b":"temp=missing_percent(df)\npd.DataFrame({'Column_Name':temp.index, 'Missing_Percentage':temp.values}).style.background_gradient(cmap='Reds')","9726acb2":"sns.distplot(df[['SalePrice']])\nplt.show()","c7485638":"res = stats.probplot(df['SalePrice'], plot=plt)\nplt.show()","272d1be8":"df['SalePrice']= np.log(df['SalePrice'])\nsns.distplot(df['SalePrice'])\nplt.show()","f10a91ed":"stats.probplot(df['SalePrice'], plot=plt)\nplt.show()","7732e93a":"def draw_barplot(data):\n    bar_plot=sns.barplot(x=data.index,y=data)\n    plt.xticks(rotation=45)\n    bar_plot.bar_label(bar_plot.containers[0],fmt='%.2f')\n    plt.show()","66212c48":"nan_percent=missing_percent(df)","89e36d04":"draw_barplot(nan_percent)","48f0872f":"df.groupby(['YrSold','MoSold']).Id.count().plot(kind='bar')\nplt.title('When was the property sold in which year and month ?')\nplt.show()","afe2b3ed":"df.groupby('Neighborhood').Id.count().sort_values().plot(kind='bar')\nplt.title('Where are the most of the property located ?')\nplt.show()","6aa6d44e":"# Finding numerical features\nnumeric_data=df.select_dtypes(include=[np.number]).drop(['SalePrice','Id'],axis=1)\n# Finding categorical features\ncategorical_data=df.select_dtypes(include='object')","02a1c1b0":"pd.DataFrame([[numeric_data.shape[1] , categorical_data.shape[1]]],columns=['Numerical_Features','Categorical_Features'],index=['Count'])","6478762a":"temp_numeric_data=pd.melt(df,value_vars=sorted(numeric_data))\ntemp_numeric_data","028cd87a":"facet_grid=sns.FacetGrid(temp_numeric_data,col='variable',col_wrap=3,sharex=False,sharey=False)\nfacet_grid.map(sns.distplot,'value')\nplt.show()","cd743831":"#will convert those columns into dummy variables later.\nint_to_object = ['MSSubClass','YrSold','MoSold','OverallCond']\n\nfor feature in int_to_object:\n    df[feature] = df[feature].astype(object)","b2991ec8":"# Finding numerical features\nnumeric_data=df.select_dtypes(include=[np.number]).drop(['SalePrice','Id'],axis=1)\n# Finding categorical features\ncategorical_data=df.select_dtypes(include='object')","d762ec1c":"pd.DataFrame([[numeric_data.shape[1] , categorical_data.shape[1]]],columns=['Numerical_Features','Categorical_Features'],index=['Count'])","0fb8785a":"temp_categorical_data=pd.melt(df,value_vars=sorted(categorical_data))","5adb5187":"facet_grid=sns.FacetGrid(temp_categorical_data,col='variable',col_wrap=3,sharex=False,sharey=False,height=3, aspect= 2)\nfacet_grid.map(sns.countplot,'value')\n[plt.setp(ax.get_xticklabels(),rotation=60,ha='right') for ax in facet_grid.axes.flat]\nfacet_grid.fig.tight_layout()\nplt.show()","9b5beded":"del df['Id']","f1af152d":"def draw_corr_plot(df):\n    data=df.corr().drop('SalePrice').sort_values('SalePrice',ascending=False)[['SalePrice']]\n    chart=sns.barplot(data.index,data['SalePrice'], palette='Blues_d')\n    plt.xticks(rotation=90)\n    plt.title('Correlation with Sale Price')\n    chart.bar_label(chart.containers[0],fmt='%.3f')\n    plt.show()","834cc4c6":"draw_corr_plot(df)","2ad76e40":"sns.scatterplot(data=df,x='OverallQual', y='SalePrice')\nplt.axhline(y=12.3,color='r')\nplt.axvline(x=9,color='g')","83b061dd":"df[(df['OverallQual']>9) & (df['SalePrice']<12.3)][['SalePrice','OverallQual']]","74f65741":"sns.scatterplot(data=df,x='GrLivArea', y='SalePrice')\nplt.axhline(y=12.5,color='r')\nplt.axvline(x=4500,color='g')","c9ccda33":"df[(df['GrLivArea']>4500) & (df['SalePrice']<12.5)][['SalePrice','GrLivArea']]","f6426789":"sns.scatterplot(data=df,x='TotalBsmtSF', y='SalePrice')\nplt.axhline(y=12.2,color='r')\nplt.axvline(x=6000,color='g')","0cf396d4":"df[(df['TotalBsmtSF']>6000) & (df['SalePrice']<12.2)][['SalePrice','TotalBsmtSF']]","28d3c83f":"sns.scatterplot(data=df,x='GarageCars', y='SalePrice')\nplt.axhline(y=10.7,color='r')\nplt.axvline(x=1,color='g')","43ccb772":"df[(df['GarageCars']==1) & (df['SalePrice']<10.7)][['SalePrice','GarageCars']]","cdd03507":"sns.scatterplot(data=df,x='GarageArea', y='SalePrice')\nplt.axhline(y=12.5,color='r')\nplt.axvline(x=1300,color='g')","09d86eb7":"df[(df['GarageArea']>1300) & (df['SalePrice']<12.5)][['SalePrice','GarageArea']]","6cbee26d":"sns.scatterplot(data=df,x='1stFlrSF', y='SalePrice')\nplt.axhline(y=12.1,color='r')\nplt.axvline(x=4000,color='g')","d987c67d":"df[(df['1stFlrSF']>4000) & (df['SalePrice']<12.1)][['SalePrice','1stFlrSF']]","35e40cac":"# Remove 30 , 916 , 523 , 581 , 1190 , 1298 \ndf=df.drop([30 , 916 , 523 , 581 , 1190 , 1298])","35537834":"draw_corr_plot(df)","6ce77481":"print(f'There are {df.isnull().sum().sum()} missing values')","3490b08a":"missing_percent(df)","21a24f0e":"def draw_missing_barplot(df,ylim_min=None,ylim_max=None):\n        nan_percent= missing_percent(df).sort_values(ascending=True)\n        bar_plot=sns.barplot(x=nan_percent.index,y=nan_percent)\n        plt.xticks(rotation=60)\n        bar_plot.bar_label(bar_plot.containers[0],fmt='%.3f')\n        if ylim_min!= None and ylim_max!= None:\n            plt.ylim(ylim_min,ylim_max)\n        plt.show()","c7904916":"draw_missing_barplot(df,0,1)","4d64bbd5":"100\/len(df)","e278ab07":"df[df['Electrical'].isnull()]","4283ada7":"df['Electrical'] = df['Electrical'].fillna(df['Electrical'].mode()[0])","2f0b1ee1":"df[\"MasVnrType\"] = df[\"MasVnrType\"].fillna(\"None\")\ndf[\"MasVnrArea\"] = df[\"MasVnrArea\"].fillna(0)","b8f25b87":"draw_missing_barplot(df,0,20)","e9466a42":"for col in ('BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2'):\n    # Replacing the missing values with None \n    df[col] = df[col].fillna('None')","6fdf1b9d":"draw_missing_barplot(df,0,20)","dc9655ab":"   df['GarageYrBlt']= df['GarageYrBlt'].fillna(0)","6ceabca4":"for col in ['GarageType', 'GarageFinish', 'GarageQual', 'GarageCond']:\n    df[col] = df[col].fillna(\"None\")","304e1ee5":"draw_missing_barplot(df)","d5186b19":"df[\"LotFrontage\"] = df.groupby(\"Neighborhood\")[\"LotFrontage\"].apply(lambda x: x.fillna(x.mean()))","0a96ee7b":"df[\"FireplaceQu\"] = df[\"FireplaceQu\"].fillna(\"None\")","1a90a7c0":"df[\"Fence\"] = df[\"Fence\"].fillna(\"None\")","52f0b36f":"df[\"Alley\"] = df[\"Alley\"].fillna(\"None\")","787182c2":"df[\"MiscFeature\"] = df[\"MiscFeature\"].fillna(\"None\")","d1dd0fe2":"df[\"PoolQC\"] = df[\"PoolQC\"].fillna(\"None\")","bfce8fe2":"df.isnull().sum().sum()","30072913":"df.to_csv('clean_df.csv', encoding='utf-8',index=False)","5bd54ffb":"df_num=df.select_dtypes(exclude='object')\ndf_obj=df.select_dtypes(include='object')","de3e43c9":"# use one-hot encoding\ndf_obj= pd.get_dummies(df_obj, drop_first=True)","25999b95":"Final_df= pd.concat([df_num, df_obj], axis=1)","aee9618d":"X = Final_df.drop('SalePrice',axis=1)\ny = Final_df['SalePrice']","959cda97":"from sklearn.model_selection import train_test_split\nX_train_linear, X_test_linear, y_train_linear, y_test_linear = train_test_split(X, y, test_size=0.3, random_state=101)","10d82fbc":"from sklearn.linear_model import LinearRegression","64ef5f06":"linear_model=LinearRegression()","2b3cc571":"linear_model.fit(X_train_linear, y_train_linear)","b1b6299e":"y_pred_linear=linear_model.predict(X_test_linear)","68c8b244":"from sklearn import metrics","17bf63d6":"MAE_linear=metrics.mean_absolute_error(y_test_linear,y_pred_linear)\nMSE_linear=metrics.mean_squared_error(y_test_linear,y_pred_linear)\nRMSE_linear=np.sqrt(MSE_linear)","a5722969":"metrics_linear=pd.DataFrame([MAE_linear,MSE_linear,RMSE_linear], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics Of Linear'])","e93d0c38":"metrics_linear","af2d4293":"residuals_linear=y_test_linear-y_pred_linear","21543f3d":"sns.scatterplot(x=y_test_linear,y=y_pred_linear)\nplt.ylabel('Y-Pred_Linear')\nplt.xlabel('Y-Test_Linear')\nsns.regplot(y_test_linear,y_pred_linear,ci=None)\nplt.show()","4596b887":"sns.distplot(residuals_linear, bins=20, kde=True)\nplt.show()","98ee378f":"sns.scatterplot(x=y_test_linear, y=residuals_linear)\nplt.ylabel('Y-Pred_Linear')\nplt.xlabel('Residuals_Linear')\nplt.axhline(y=0, color='r', ls='--')\nplt.show()","de94f7f8":"from sklearn.preprocessing import  PolynomialFeatures","8d8471af":"polynomial_converter=PolynomialFeatures(degree=2,include_bias=False)","2f1598ad":"polynomial_features=polynomial_converter.fit_transform(X)","172ea5cc":"from sklearn.model_selection import train_test_split\nX_train_poly, X_test_poly, y_train_poly, y_test_poly = train_test_split(polynomial_features, y, test_size=0.3, random_state=101)","25e9b869":"poly_model=LinearRegression()","ada7affb":"poly_model.fit(X_train_poly,y_train_poly)","a2cf00b3":"y_pred_poly=poly_model.predict(X_test_poly)","fe0c7cd0":"MAE_poly=metrics.mean_absolute_error(y_test_poly,y_pred_poly)\nMSE_poly=metrics.mean_squared_error(y_test_poly,y_pred_poly)\nRMSE_poly=np.sqrt(MSE_poly)","4dbd723e":"metrics_poly=pd.DataFrame([MAE_poly,MSE_poly,RMSE_poly], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics Of Polynomial'])","9d464e9a":"metrics_df= pd.concat([metrics_linear, metrics_poly], axis=1).T","03f6c810":"metrics_df","bcd30892":"#### Predicting Test Data","63b2f91b":"##### data description says NA means \"no fence\"","309e3efe":"\n<font color=#e6005c> <h4> If you liked this Notebook, please do upvote :)<\/h4> <\/font>","2f705013":"### Data Overview","d798e6bd":"#### Train the Model","98f7275b":"###### Most machine learning algorithm works well with data which are normally distributed ","22142a21":"#### **FireplaceQu**","eb5391b1":"##### Delete Id column from df because that is not need for corralation plot","78073d1c":"###### Deleting those four values with outliers ( 30 , 523 , 581 , 916 , 1190 , 1298 )","f531a0f6":"#### Split the Dataset to Train & Test","a951df4d":"#### LinearRegression is the better from Polynomial Regression method in this model","ac751adc":"### Polynomial Regression","eab48417":"#### **GarageYrBlt**","5204cffe":"#### **BsmtQual , BsmtCond , BsmtExposure , BsmtFinType1 , BsmtFinType2**","45088d19":"#### Preprocessing","d3ec5abe":"### Plotting Missing value in dataset","3f9d3611":"#### **GarageType, GarageFinish, GarageQual , GarageCond**","46c8a407":"#### Residuals","6dcbebec":"###### NaN values for these categorical basement df, means there's no basement","75330cec":"##### data description says NA means \"No Pool\"","d869cd42":"#### Predicting Test Data","ee828e17":"#### **MiscFeature**","9539efe3":"##### NA most likely means no masonry veneer for these houses. We can fill 0 for the area and None for the type","e7a753ed":"##### We see , correlation between our data has improved","70bc9d07":"#### Distribution of Target variable (SalePrice)","31d40374":"### Plot the feature with missing indicating the percent of missing data","7567c324":"#### Evalutaing the Model","04487b13":"##### The most of the property is located neighborhood **NAmes** and **CollgCr**","185eba06":"#### Evalutaing the Model","ff9ba69d":"##### Replacing missing data with 0 ","821d40fa":"##### Let's look at the number of rows and columns in the dataset","e979e46e":"#### **Alley**","205ab77d":"##### Replacing missing data with None","55f7695b":"### Import Libraries","c8288e48":"##### data description says NA means \"no misc feature\"","ca2df04e":"#### Train the Model","ab6a0d52":"##### Summary of the dataset","4c3616c2":"##### First let's see how many missing values are there","8dcb6232":"# Exploratory Data Analysis (EDA)","6b55de09":"# Data Visualisation","b2972561":"#### There are outliers in some features","3781e0b2":"# Housing Price Prediction","68abe301":"#### **MasVnrArea , MasVnrType**","f28d00a9":"#####  Since the area of each street connected to the house property most likely have a similar area to other houses in its neighborhood .\n##### We can fill in missing values by the mean LotFrontage of the Neighborhood.","7e526316":"#### It remains no missing value.","fd3e977f":"##### data description says NA means \"no fireplace\"","4d4c2a2e":"### Visualising missing values","56568308":"### Outliers","e0c34ad1":"#### Residuals is normally distributed","df49e94e":"## Introduction :","c5a44f35":"#### Getting dummy categorical features","7097d59f":"###### The target variable (SalePrice) is right skewed. we need to transform this variable and make it more normally distributed.\n###### Let's transform the target variable by taking log scale","89d46d74":"# Data Preparation","8c81fc7d":"##### This notebook explores all the features in determining Sale Price of a house.\n##### The dataset consists of all the features that help in predicting the sale price of a house.\n##### The complete description of the data is given in the description.txt file attached along with the data.","c21ceb6d":"##### The highest number of property sales is in **June** and **July**\n","9a45f51c":"#### **PoolQC**","ce33e53a":"###### **Electrical** : Fill in again with most frequent which is \"SBrkr\"","c2190f47":"##### Now SalePrice is normally distributed","969c1d1e":"#### **Fence**","48fb7d85":"##### data description says NA means \"no alley access\"","939e40d5":"### Linear Regression","5d0bd41f":"### Transforming some numerical variables that are really categorical\n##### We see that some of the features having int data type consists of discrete values.\n\n##### If the features have discrete values , it's better to change them into categorical variables that will help us in better analysis","1e430a32":"### Import the Data","0be61aae":"##### Determine the Features & Target Variable","ba2c2de6":"###### Let's plot of categorical features","7f64a80b":"#### **LotFrontage**","109154d8":"#### **Electrical**","8bfb8375":"#### Split the Dataset to Train & Test"}}