{"cell_type":{"d77e553f":"code","30042117":"code","73f7f130":"code","94229c95":"code","5a417f62":"code","96a8ee94":"code","1e42290e":"code","20d20ff7":"code","ea0c6953":"code","9cd63b91":"code","edb63565":"code","da9157e0":"code","b1b3eee1":"code","fbea26e9":"code","b22fa9d6":"code","44ecb127":"code","bb8d1509":"code","a1603dfc":"code","50e2d592":"code","eed684ad":"code","42a233d0":"code","a375c154":"code","e7c8e329":"code","c8a05a28":"code","eb45d2f1":"code","cf70ea39":"markdown","ecd78b17":"markdown","f74425d9":"markdown","c8f4df49":"markdown","05844c22":"markdown","73a74a34":"markdown","6b4d1896":"markdown","42726180":"markdown","3b8f3a78":"markdown","802a4503":"markdown","0247a6d4":"markdown","5688d177":"markdown","cc9103dc":"markdown","f73eea26":"markdown","654b5b07":"markdown","89377cbd":"markdown","cef6967c":"markdown","3afbe9ee":"markdown","4ca10980":"markdown","7846d5ee":"markdown","cc0ed1fe":"markdown","948e61f1":"markdown","143e92bd":"markdown","a7cea2e9":"markdown"},"source":{"d77e553f":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 100)\n\nfrom itertools import product\nfrom sklearn.preprocessing import LabelEncoder\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom xgboost import XGBRegressor\nfrom xgboost import plot_importance\n\ndef plot_features(booster, figsize):    \n    fig, ax = plt.subplots(1,1,figsize=figsize)\n    return plot_importance(booster=booster, ax=ax)\n\nimport time\nimport sys\nimport gc\nimport pickle\nsys.version_info\n\nplt.style.use('default')","30042117":"!pip install plotly","73f7f130":"import plotly.graph_objects as go","94229c95":"\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ncats = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\ntrain = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\n# set index to ID to avoid droping it later\ntest  = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv').set_index('ID')","5a417f62":"\nitems.head()","96a8ee94":"#data = go.Bar(x=items['item_category_id'].value_counts().sort_values(ascending=False).index, y=items['item_category_id'].value_counts().sort_values(ascending=False),\n#             marker=dict(color=np.random.randn(100),colorscale='hot'))\n\ndata = go.Bar(x=items['item_category_id'].value_counts().sort_values(ascending=False).index, y=items['item_category_id'].value_counts().sort_values(ascending=False))\nlayout = go.Layout(showlegend=False)\nfig = go.Figure(data, layout)\nfig.update_layout(title='The number of items each categories')","1e42290e":"shops.head()","20d20ff7":"print('item_category counts=',len(items['item_category_id'].unique()))\ncats.head()","ea0c6953":"#split day ,month,year.\ndata=train['date'].str.split('.', expand=True)\ndata.columns=['day','month','year']\n#concat month and year\ndata['year_month']=data['year']+data['month']\ntrain_concat=pd.concat([train,data[['year_month']]],axis=1)\ntrain_concat","9cd63b91":"print(data['year_month'].unique())\nprint('length of months=',len(data['year_month'].unique()))\nprint('The number of date_block_num=',len(train['date_block_num'].unique()))","edb63565":"data_mean=train.groupby(['shop_id', 'item_id'], as_index=False).mean()\ndata_mean","da9157e0":"print('counts of items (items.csv-train.csv) =',len(items['item_id'].unique())-len(train['item_id'].unique()))\n\n\ndata = go.Bar(x=['items of items.csv','items of train.csv'], y=[len(items['item_id'].unique()),len(train['item_id'].unique())]\n              ,marker=dict(color=np.random.randn(100),colorscale='hot'))\n\nlayout = go.Layout(showlegend=False)\nfig = go.Figure(data, layout)\nfig.update_layout(title='The number of items_id')\n","b1b3eee1":"for i in [40,41,43,45]:\n    data_a=data_mean[data_mean['item_id']==i]['item_price'].value_counts().sort_values(ascending=False)\n    data = go.Bar(x=data_a.index, y=data_a)#marker=dict(color=np.random.randn(100),colorscale='turbo_r')\n\n    layout = go.Layout(showlegend=False,xaxis=dict(title='price'),yaxis=dict(title='counts'))\n    fig = go.Figure(data, layout)\n    fig.update_layout(title='items_id='+str(i))\n    fig.show()","fbea26e9":"test.head()","b22fa9d6":"#Null\nprint('train.csv')\nprint(train.isnull().sum())\nprint('_______')\nprint('items.csv')\nprint(items.isnull().sum())\nprint('_______')\nprint('shops.csv')\nprint(shops.isnull().sum())\nprint('_______')\nprint('cats.csv')\nprint(cats.isnull().sum())\nprint('_______')","44ecb127":"print('train.csv')\nt=train.describe()\nprint(t)\nprint('_______')\nprint('items.csv')\ni=items.describe()\nprint(i)\nprint('_______')\nprint('shops.csv')\ns=shops.describe()\nprint(s)\nprint('_______')\nprint('cats.csv')\nc=cats.describe()\nprint(c)\nprint('_______')","bb8d1509":"plt.figure(figsize=(10,4))\nplt.xlim(-100, 3000)\nsns.boxplot(x=train.item_cnt_day)\n\nplt.figure(figsize=(10,4))\nplt.xlim(train.item_price.min(), train.item_price.max()*1.1)\nsns.boxplot(x=train.item_price)","a1603dfc":"train = train[train.item_price<100000]\ntrain = train[train.item_cnt_day<1001]","50e2d592":"train.loc[train['item_price']<0,'item_price']=train['item_price'].median()","eed684ad":"submission =pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nsubmission.head()","42a233d0":"#split day ,month,year\ndata_b=train_concat.groupby(['shop_id', 'item_id','year_month'], as_index=False).sum()\ndata_b = data_b.rename(columns={'item_cnt_day': 'item_cnt_month'})","a375c154":"# \u042f\u043a\u0443\u0442\u0441\u043a \u041e\u0440\u0434\u0436\u043e\u043d\u0438\u043a\u0438\u0434\u0437\u0435, 56\ntrain.loc[train.shop_id == 0, 'shop_id'] = 57\ntest.loc[test.shop_id == 0, 'shop_id'] = 57\n# \u042f\u043a\u0443\u0442\u0441\u043a \u0422\u0426 \"\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439\"\ntrain.loc[train.shop_id == 1, 'shop_id'] = 58\ntest.loc[test.shop_id == 1, 'shop_id'] = 58\n# \u0416\u0443\u043a\u043e\u0432\u0441\u043a\u0438\u0439 \u0443\u043b. \u0427\u043a\u0430\u043b\u043e\u0432\u0430 39\u043c\u00b2\ntrain.loc[train.shop_id == 10, 'shop_id'] = 11\ntest.loc[test.shop_id == 10, 'shop_id'] = 11","e7c8e329":"#make city code from shop_name\nshops.loc[shops.shop_name == '\u0421\u0435\u0440\u0433\u0438\u0435\u0432 \u041f\u043e\u0441\u0430\u0434 \u0422\u0426 \"7\u042f\"', 'shop_name'] = '\u0421\u0435\u0440\u0433\u0438\u0435\u0432\u041f\u043e\u0441\u0430\u0434 \u0422\u0426 \"7\u042f\"'\nshops['city'] = shops['shop_name'].str.split(' ').map(lambda x: x[0])\nshops.loc[shops.city == '!\u042f\u043a\u0443\u0442\u0441\u043a', 'city'] = '\u042f\u043a\u0443\u0442\u0441\u043a'\nshops['city_code'] = LabelEncoder().fit_transform(shops['city'])\nshops = shops[['shop_id','city_code']]\nshops.head()","c8a05a28":"#make category type code and subtype code from item_category_name\ncats['split'] = cats['item_category_name'].str.split('-')\ncats['type'] = cats['split'].map(lambda x: x[0].strip())\ncats['type_code'] = LabelEncoder().fit_transform(cats['type'])\n# if subtype is nan then type\ncats['subtype'] = cats['split'].map(lambda x: x[1].strip() if len(x) > 1 else x[0].strip())\n\ncats['subtype_code'] = LabelEncoder().fit_transform(cats['subtype'])\ncats = cats[['item_category_id','type_code', 'subtype_code']]\n\ncats.head()","eb45d2f1":"items.drop(['item_name'], axis=1, inplace=True)","cf70ea39":"There are items with strange prices and sales. After detailed exploration I decided to remove items with price > 100000 and sales > 1001 (1000 is ok).\n\n\u4fa1\u683c\u3084\u58f2\u308a\u4e0a\u3052\u304c\u304a\u304b\u3057\u3044\u5546\u54c1\u304c\u3042\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306a\u8abf\u67fb\u306e\u7d50\u679c\u3001\u4fa1\u683c\u304c100000\u3092\u8d85\u3048\u3001\u58f2\u4e0a\u304c1001\u3092\u8d85\u3048\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff081000\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\uff09\u3002\n\nReflection:[feature-engineering-xgboost](https:\/\/www.kaggle.com\/dlarionov\/feature-engineering-xgboost)","ecd78b17":"# Shops\/Cats\/Items preprocessing","f74425d9":"Several shops are duplicates of each other (according to its name). Fix train and test set.\n\u3044\u304f\u3064\u304b\u306e\u5e97\u306f\uff08\u305d\u306e\u540d\u524d\u306b\u3088\u308b\u3068\uff09\u91cd\u8907\u3067\u3059\u3002 train\u3068test\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002","c8f4df49":"* shop_name=Each shop_name starts with the city name.\n* shop_id=link to the items and train\n\n\n\n* shop_name =\u5404shop_name\u306f\u90fd\u5e02\u540d\u3067\u59cb\u307e\u308a\u307e\u3059\u3002\n* shop_id =train.csv,items.csv\u3078\u306e\u30ea\u30f3\u30af","05844c22":"Great! There are no null.","73a74a34":"# Null","6b4d1896":"# cats","42726180":"There is one item with price below zero. Fill it with median.\n\n\u4fa1\u683c\u304c\u30bc\u30ed\u672a\u6e80\u306e\u30a2\u30a4\u30c6\u30e0\u304c1\u3064\u3042\u308a\u307e\u3059\u3002 \u4e2d\u592e\u5024\u3067\u57cb\u3081\u307e\u3059\u3002","3b8f3a78":"The number of shop_id and item_id pair is 424123.\n\nshop_id\u3068item_id\u306e\u30da\u30a2\u306e\u6570\u306f424123\u3067\u3059\u3002\n\n","802a4503":"# Submission","0247a6d4":"## Target=item_cnt_month\n\nTarget is the item_cnt_month.\nI need to change the item_cnt_day to item_cnt_month.\n\n\u30bf\u30fc\u30b2\u30c3\u30c8\u306fitem_cnt_month(\u6708\u9593\u58f2\u4e0a\u9ad8)\u3067\u3059\u3002\nitem_cnt_day\u3092item_cnt_month\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n","5688d177":"Let's see the number of sales each shops and items in one month.\n\n\u6b21\u306b\u3001\u5404\u30b7\u30e7\u30c3\u30d7\u3068\u30a2\u30a4\u30c6\u30e0\u306e1\u304b\u6708\u9593\u306e\u58f2\u4e0a\u9ad8\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","cc9103dc":"I need to make more code from shops_name and category_name.\nBecouse these can be the features that is important.\n\nshop_name\u3068category_name\u304b\u3089\u3055\u3089\u306b\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306f\u91cd\u8981\u306a\u6a5f\u80fd\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3067\u3059\u3002","f73eea26":"# items\n* item_name=the product name\n* item_id=link to the train\n* item_category_id=link to the train and cats\n\n\n* item_name =\u88fd\u54c1\u540d\n* item_id =train.csv\u3078\u306e\u30ea\u30f3\u30af\n* item_category_id =train.csv\u3068cats.csv\u3078\u306e\u30ea\u30f3\u30af","654b5b07":"# shops","89377cbd":"train.csv\u306b\u6bd4\u3079\u3066363\u30a2\u30a4\u30c6\u30e0\u304c\u65b0\u54c1\u3067\u3059\u3002 \u65b0\u54c1\u306e\u30a2\u30a4\u30c6\u30e0\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306e\u9805\u76ee\u306b\u3064\u3044\u3066\u3001Target\u5024\u306f\u30bc\u30ed\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","cef6967c":"train started from '2013-01' and end  '2015-10'. And 34 months are in the datasets.\n34 months are same to the number of date_block_num.\n\ntrain\u306f\u300c2013-01\u300d\u304b\u3089\u59cb\u307e\u308a\u300c2015-10\u300d\u3067\u7d42\u308f\u308a\u307e\u3059\u3002 \u305d\u3057\u3066\u300134\u304b\u6708\u304c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3042\u308a\u307e\u3059\u3002\n34\u304b\u6708\u306fdate_block_num\u306e\u6570\u3068\u540c\u3058\u3067\u3059\u3002","3afbe9ee":"I'm continueing to write the notebook.","4ca10980":"Then let's see the prices are different each shops,\nfor exsample  item_id = 39,40,41.\n\n\u5e97\u3054\u3068\u306b\u5024\u6bb5\u304c\u9055\u3046\u306e\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3001\nitem_id = 39,40,41\u306e\u5834\u5408\u3002","7846d5ee":"# test","cc0ed1fe":"# Outliers","948e61f1":"* item_category_name=category name\n* item_category_id=link to the items and train\n\n\n* item_category_name =\u30ab\u30c6\u30b4\u30ea\u540d\n* item_category_id =items.csv,train.csv\u3078\u306e\u30ea\u30f3\u30af","143e92bd":"# train\n\n* date=The date when the item was saled.\n* date_block_num=The counts of the months.\n* shop_id=This number link to shop.csv.\n* item_id=This number link to items.csv.\n* item_price=The price of items.They are different from each shops.\n* item_cnt_day=How many items was saled in the day.Negative numbers are returns.\n\n\n\n* date =\u30a2\u30a4\u30c6\u30e0\u304c\u8ca9\u58f2\u3055\u308c\u305f\u65e5\u4ed8\u3002\n* date_block_num =\u6708\u306e\u6570\u3002\n* shop_id =\u3053\u306e\u756a\u53f7\u306fshop.csv\u306b\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\n* item_id =\u3053\u306e\u756a\u53f7\u306fitems.csv\u306b\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\n* item_price =\u30a2\u30a4\u30c6\u30e0\u306e\u4fa1\u683c\u3002\u30b7\u30e7\u30c3\u30d7\u3054\u3068\u306b\u7570\u306a\u308a\u307e\u3059\u3002\n* item_cnt_day = 1\u65e5\u306b\u8ca9\u58f2\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u6570\u3002\u8ca0\u306e\u6570\u306f\u8fd4\u54c1\u3067\u3059\u3002","a7cea2e9":"Then I will see how many the pairs of shop_id and item_id are.\n\n\u6b21\u306b\u3001shop_id\u3068item_id\u306e\u30da\u30a2\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002"}}