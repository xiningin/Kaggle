{"cell_type":{"bb94afc7":"code","2dd84621":"code","3e3bcdfb":"code","fef6916f":"code","64f47eef":"code","0170b43d":"code","cd25739a":"code","392ff816":"code","b1b7ec83":"code","73750814":"code","3f33a78c":"code","a6cfe394":"code","6407b515":"code","a7e957e1":"code","9711d534":"code","198325e9":"code","3ae38b49":"code","16e07f48":"code","857f9611":"code","a3ea6adf":"markdown"},"source":{"bb94afc7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import scale\nfrom sklearn import datasets\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n#import pandas as pd\n#Iris = pd.read_csv(\"..\/input\/iris-datasets\/Iris.csv\")\n\n# Any results you write to the current directory are saved as output.","2dd84621":"#Loading the iris dataset\niris = datasets.load_iris()\n","3e3bcdfb":"#Checking the dataset\niris.data\nprint(iris.data.shape)","fef6916f":"#Checking the featues\niris.feature_names","64f47eef":"#Scaling the data for clustering for better efficiency\nx = scale(iris.data)","0170b43d":"#checking the target\niris.target","cd25739a":"# Doing the clustering \nclustering = KMeans(n_clusters =3,random_state=1)","392ff816":"#Fitting the algorithm\nclustering.fit(x)","b1b7ec83":"#Labelling the cluster\nclustering.labels_","73750814":"#Adding the visualisation\nimport matplotlib.pyplot as plt\n%matplotlib inline","3f33a78c":"#Converting into DataFrame\niris_df = pd.DataFrame(iris.data)","a6cfe394":"iris_df.columns=['sepal_length','sepal_width','petal_length','petal_width']","6407b515":"y=pd.DataFrame(iris.target)\ny.columns=['targets']","a7e957e1":"y.head()","9711d534":"plt.scatter(x=iris_df.petal_length,y=iris_df.petal_width)\nplt.title(\"The actual dataset\")","198325e9":"from sklearn.cluster import KMeans\nwcss = []\n\nfor i in range(1, 9):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 100, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)\n    \n#Plotting the results onto a line graph, allowing us to observe 'The elbow'\nplt.plot(range(1, 9), wcss)\nplt.title('The elbow method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS') #within cluster sum of squares\nplt.show()\n","3ae38b49":"import numpy as np\ncolor =np.array(['red','blue','green'])","16e07f48":"#adding the colors\nplt.scatter(x=iris_df.petal_length,y=iris_df.petal_width,c=color[iris.target])\nplt.title(\"The actual dataset\")","857f9611":"#After the clustering\n#adding the colors\ncolor2=np.array(['green','red','blue'])\nplt.scatter(x=iris_df.petal_length,y=iris_df.petal_width,c=color2[clustering.labels_])\nplt.title(\"The dataset post clustering\")","a3ea6adf":"# Implementing the K Means Algorithm using the Iris Dataset"}}