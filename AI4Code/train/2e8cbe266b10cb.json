{"cell_type":{"e056ec50":"code","0f620871":"code","020d6b7c":"code","19d8c648":"code","b4942010":"code","9a87cc9d":"code","afc0e97e":"code","548c1306":"code","0549f001":"code","3307b436":"code","8e407eab":"code","b940969e":"code","6eb18dd3":"code","504d78d4":"code","e11104d2":"code","75855c09":"code","e4221a94":"code","15c4e113":"code","c98a9b90":"code","f10e1fb8":"code","68809a1a":"code","650dd7ca":"code","a193b157":"code","f81be7a4":"code","b7cd07ed":"code","57d4d7d4":"code","6de85be9":"code","3759535d":"markdown","e06cbbfd":"markdown","9e15173f":"markdown","c1955882":"markdown","95538f6b":"markdown","bd9a6ed9":"markdown","2b4b2121":"markdown","caf19e44":"markdown","a2386a23":"markdown","923bca65":"markdown","48064f34":"markdown"},"source":{"e056ec50":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom tensorflow.keras import Sequential,utils\nfrom tensorflow.keras.layers import Flatten, Dense, Conv1D, MaxPool1D, Dropout\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.model_selection import train_test_split","0f620871":"!ls ..\/input\/heartbeat\/mitbih_test.csv  mitbih_train.csv  ptbdb_abnormal.csv  ptbdb_normal.csv","020d6b7c":"data = pd.read_csv(\"..\/input\/heartbeat\/mitbih_train.csv\", header=None)\ndata=pd.DataFrame(data)","19d8c648":"data","b4942010":"data.isnull().sum()","9a87cc9d":"data.describe().T","afc0e97e":"data[187].value_counts()","548c1306":"# Applying Undersampling\nclass_1 = data[data[187]==1.0]\nclass_2 = data[data[187]==2.0]\nclass_3 = data[data[187]==3.0]\nclass_4 = data[data[187]==4.0]\nclass_0 = data[data[187]==0.0].sample(n = 8000)\ndata = pd.concat([class_1, class_2, class_3, class_4, class_0]).sample(frac=1)","0549f001":"data[187].value_counts()","3307b436":"xtrain, xtest, ytrain, ytest = train_test_split(data.drop([187], axis=1), data[187], test_size = 0.1)","8e407eab":"xtrain = np.array(xtrain).reshape(xtrain.shape[0], xtrain.shape[1], 1)\nxtest = np.array(xtest).reshape(xtest.shape[0], xtest.shape[1], 1)","b940969e":"fig, ax = plt.subplots(nrows = 1, ncols = 1, figsize=(25,2))\nax.plot(data[data[187]==float(1)].sample(1).iloc[0,:186])\n","6eb18dd3":"neu = Sequential()\n\nneu.add(Conv1D(filters=32, kernel_size=(3,), padding='same', activation='relu', input_shape = (xtrain.shape[1],1)))\nneu.add(Conv1D(filters=64, kernel_size=(3,), padding='same', activation='relu')) \nneu.add(Conv1D(filters=128, kernel_size=(5,), padding='same', activation='relu'))    \n\nneu.add(MaxPool1D(pool_size=(3,), strides=2, padding='same'))\nneu.add(Dropout(0.5))\n\nneu.add(Flatten())\n\nneu.add(Dense(units = 512, activation='relu'))\nneu.add(Dense(units = 1024, activation='relu'))\nneu.add(Dense(units = 5, activation='softmax'))\n\nneu.compile(optimizer='adam', loss = 'sparse_categorical_crossentropy', metrics=['accuracy'])","504d78d4":"his = neu.fit(xtrain, ytrain, epochs = 10)","e11104d2":"ypred_train = neu.predict(xtest)","75855c09":"y_lbl = [np.where(i == np.max(i))[0][0] for i in ypred_train]\nmat = confusion_matrix(ytest, y_lbl)\nfig, ax = plt.subplots(figsize=(7,7))\nsns.heatmap(mat, annot = True)","e4221a94":"print(\"Accuracy score of the predictions: {0}\".format(accuracy_score(y_lbl, ytest)))","15c4e113":"test = pd.read_csv(\"..\/input\/heartbeat\/mitbih_test.csv\", header=None)\ntest=pd.DataFrame(test)","c98a9b90":"test","f10e1fb8":"test[187].value_counts()","68809a1a":"# Applying Under Sampling\nclass_1 = test[test[187]==1.0]\nclass_2 = test[test[187]==2.0]\nclass_3 = test[test[187]==3.0]\nclass_4 = test[test[187]==4.0]\nclass_0 = test[test[187]==0.0].sample(n = 3000)\ntest = pd.concat([class_1, class_2, class_3, class_4, class_0]).sample(frac=1)","650dd7ca":"test[187].value_counts()","a193b157":"fig, ax = plt.subplots(nrows = 1, ncols = 1, figsize=(25,2))\nax.plot(test[test[187]==float(1)].sample(1).iloc[0,:186])\n","f81be7a4":"xtest = test.drop([187], axis=1) \nytest = test[187]\n\nxtest = np.array(xtest).reshape(xtest.shape[0], xtest.shape[1], 1)","b7cd07ed":"ytest_pred = neu.predict(xtest)","57d4d7d4":"ytest_lbl = [np.where(i == np.max(i))[0][0] for i in ytest_pred]\nmat = confusion_matrix(ytest, ytest_lbl)\nfig, ax = plt.subplots(figsize=(7,7))\nsns.heatmap(mat, annot = True)","6de85be9":"print(\"Accuracy score of the predictions: {0}\".format(accuracy_score(ytest_lbl, ytest)))","3759535d":"# Making Predictions using testing data ","e06cbbfd":"# Making Predictions using training data","9e15173f":"# Data Preprocessing","c1955882":"# Importing Train Data","95538f6b":"# Data Loading","bd9a6ed9":"# Loading Test Data Test","2b4b2121":"As we can see our data is imbalanced so we will apply Undersampling","caf19e44":"#Applying CNN","a2386a23":"# Spliting Data into Train and Test and Reshaping the data","923bca65":"# Importing Necessary libraries","48064f34":"# Data Preprocessing"}}