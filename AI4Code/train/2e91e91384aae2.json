{"cell_type":{"6deeaf6c":"code","d6361c53":"code","4dc65b68":"code","76f81313":"code","fa379175":"code","1ca44ade":"code","d94af1e3":"code","1f342875":"code","4c01efbf":"code","ba3390ce":"code","72ffdf12":"markdown"},"source":{"6deeaf6c":"import os\nimport cv2\nimport shutil\nimport numpy as np\nfrom tqdm import tqdm\nfrom glob import glob\nimport nibabel as nib\nimport matplotlib.pyplot as plt","d6361c53":"base_dir = '..\/input\/brats20-dataset-training-validation\/BraTS2020_TrainingData\/MICCAI_BraTS2020_TrainingData'\nmodality_types = ['flair', 't1ce', 't1', 't2', 'seg']","4dc65b68":"print ('number of patients:', len (os.listdir (base_dir)) - 2)","76f81313":"imgs_path = os.path.join (base_dir, sorted (os.listdir (base_dir))[0])","fa379175":"fnames = glob (f'{imgs_path}\/*.nii')\nfnames","1ca44ade":"plt.figure (figsize = (20, 5))\nfor i, modality_type in enumerate (modality_types):\n    plt.subplot (1, 5, i + 1)\n    img_path = glob (f'{imgs_path}\/*_{modality_type}.nii')[0]\n    img = nib.load (img_path)\n    img = np.asanyarray (img.dataobj).T\n    plt.imshow (img [75], cmap = 'bone')\n    plt.title (modality_type)\n    plt.axis ('off')","d94af1e3":"img = nib.load (fnames [3])\nimg = np.asanyarray (img.dataobj).T\nprint (img.dtype)\nprint (img.shape)","1f342875":"# maximum number of segmented image\nmax_nums = []\nfor i in tqdm (range (155)):\n    max_num = img [i].max ()\n    max_nums.append (max_num)\n\nprint (max (max_nums))","4c01efbf":"# 2 last data are csv files\nfolders = (sorted (os.listdir (base_dir)))[:-2]\n# delet this 355 folder becase the name of seg filet is different from others\nfolders.pop (354)","ba3390ce":"os.mkdir ('BraTs')\ni = 0\nfor folder in tqdm (folders):\n    # go to each patient data\n    folder_dir = os.path.join (base_dir, folder)\n    imgs = []\n    for modality_type in modality_types:\n        # read each data and save it to list\n        img_path = glob (f'{folder_dir}\/*_{modality_type}.nii')[0]\n        img = nib.load (img_path)\n        img = np.asanyarray (img.dataobj).T\n        img = ((img - img.min ())\/(img.max () - img.min ()) * 255).astype(np.uint8)\n        imgs.append (img)\n    for j in range (imgs [0].shape [0]):\n        # just not empty images\n        if sum ([imgs [num][j].sum () for num in range (5)]) != 0:\n            i += 1\n            # create directory\n            if not os.path.exists ('BraTs\/' + str (i)):\n                os.mkdir ('BraTs\/' + str (i))\n\n            for idx, modality_name in enumerate (modality_types):\n            \n                cv2.imwrite (modality_name + '.jpg', imgs [idx][j])\n                \n                # save 5 type of each slice in separate folder\n                src = modality_name + '.jpg'\n                dst = os.path.join ('BraTs\/' + str (i), src)\n                shutil.move (src, dst)","72ffdf12":"**Segmented image description**"}}