{"cell_type":{"909c54e5":"code","8b7f8a43":"code","bafd96a5":"code","6a0f75cc":"code","6d3e24b1":"code","ccc89173":"code","b33148fb":"code","eed36db6":"code","5a37e780":"code","9832a054":"code","696dfa05":"code","a1b8c4d3":"code","5ce78bc0":"code","d36ecff5":"code","57b7e19e":"code","77fb4cec":"code","d436b3d7":"code","2b61f846":"code","fd2e1b8f":"code","582c2923":"code","663ae7a0":"code","1366662d":"code","bb90ae7b":"code","f5cb150b":"code","d88a7391":"code","0e63a490":"code","6d666ef1":"code","017d83c9":"code","8278422f":"code","15c68afa":"code","bab5f2eb":"code","9cd05084":"code","346e9267":"code","d1acb4d1":"code","3abb3898":"markdown","4555476b":"markdown","f2d21602":"markdown","7c9c2eaa":"markdown","67b88adc":"markdown","7809edd7":"markdown","1dd5742c":"markdown","0927aa4d":"markdown","5f152f32":"markdown","0809718b":"markdown","91223d9d":"markdown","c4c2edc5":"markdown","91910330":"markdown","45111f53":"markdown","49571b47":"markdown","36d9420e":"markdown","f2151c20":"markdown","51a84466":"markdown","ad8d1e5b":"markdown","4de3afda":"markdown","faa54b80":"markdown"},"source":{"909c54e5":"from IPython.display import Image\n\nImage(filename='..\/input\/images\/PM25-COVID19.png')","8b7f8a43":"import pandas as pd\nimport warnings\nfrom IPython.display import HTML\n\ndef tables_side(titolo, tabs, tabslabel):\n    return HTML( '<table><caption style=\"background-color:#F1F2F3;\"><h1>'+titolo+'<\/h1><\/caption>'+\n                 '<tr style=\"background-color:#D9D9D9;\" >'+''.join(['<td><h2 align=\"center\">'+tlabel+ '<\/h2><\/td>' for tlabel in tabslabel]) +'<\/tr>'+\n                 '<tr style=\"background-color:#D9D9D9;\">'+''.join(['<td>'+table._repr_html_() + '<\/td>' for table in tabs]) +\n                 '<\/tr><\/table>'\n               )\nwarnings.filterwarnings('ignore')\n\ndf_demo = pd.read_csv('..\/input\/dataset\/Regions.csv', index_col=0)\ndf_covid = pd.read_csv('https:\/\/raw.githubusercontent.com\/pcm-dpc\/COVID-19\/master\/dati-regioni\/dpc-covid19-ita-regioni-latest.csv')\ndf_air = pd.read_excel('..\/input\/airpollution\/Tabella 3.xlsx', header=1)\ndf_demo.head()\ndf_covid.loc[df_covid.denominazione_regione=='Emilia-Romagna','denominazione_regione'] = 'Emilia Romagna'","bafd96a5":"df_air","6a0f75cc":"df_covid.groupby('denominazione_regione').sum()","6d3e24b1":"# Uniform the names of the regions in the datasets\ndf_air[df_air['max media annuale (mg\/m3)'].str.contains('n', na=False)]\ndf_air.drop(df_air[df_air['max media annuale (mg\/m3)']=='n.d.'].index, inplace=True)\ndf_air[df_air['Regione']=='SICILIA']\ndf_air['Regione'] = df_air.iloc[:,2].str.replace('_', ' ')\ndf_air['Regione'] = df_air.iloc[:,2].str.replace('PA ', 'P.A. ')\ndf_air['Regione'] = df_air.iloc[:,2].apply(str.title)\ndf_air2 = pd.read_excel('..\/input\/airpollution\/Tabella 2.xlsx', header=1)\ndf_basilicata = df_air2[df_air2['Regione']=='Basilicata']\ndata_basilicata=['Not Important',17, 'Basilicata', 'Rurale', 'Not Important', 'No',10]\ndata_basilicata = pd.DataFrame([pd.Series(data_basilicata)])\ndata_basilicata.columns = df_air.columns\ndf_air = pd.concat([df_air, data_basilicata], ignore_index=True)\ndf_air.loc[df_air['Regione']=='Valle Aosta', 'Regione']= \"Valle d'Aosta\"\ndf_air.iloc[:,6]= pd.to_numeric(df_air.iloc[:,6])","ccc89173":"df_air","b33148fb":"df_summary = df_covid[['codice_regione', 'denominazione_regione', 'deceduti']]\ndf_summary = df_summary.merge(df_demo, left_on='denominazione_regione', right_on='denominazione_regione')\ndf_summary['death%'] = df_summary['deceduti']\/df_summary['popolazione']*100\ndf_air_med = df_air.groupby(['Regione']).agg({'max media annuale (mg\/m3)': ['count', 'mean', 'median']})\ntables_side(titolo='Comparison between',\n            tabs=[df_summary.sort_values(by='death%', ascending=False), df_air_med.sort_values(by=('max media annuale (mg\/m3)', 'median'), ascending=False)],\n            tabslabel=['Summary COVID ord by Death%','Summary Air Pollution'])","eed36db6":"df_summary = df_summary.sort_values(by='death%', ascending=False).merge(df_air_med, left_on='denominazione_regione',right_on='Regione')\ndf_summary = df_summary.iloc[:,[0,1,2,3,4,7]]\ndf_summary.columns = ['codice_regione',\n               'denominazione_regione',\n                            'deceduti',\n                         'popolazione',\n                              'death%',\n                     'air_poll_median']\ndf_summary","5a37e780":"df_covid_complete = pd.read_csv('https:\/\/raw.githubusercontent.com\/pcm-dpc\/COVID-19\/master\/dati-regioni\/dpc-covid19-ita-regioni.csv')\ndf_covid_complete.head(3)","9832a054":"\ndf_covid_complete.loc[df_covid_complete.denominazione_regione=='Emilia-Romagna','denominazione_regione'] = 'Emilia Romagna'\nlist_Regions = df_demo.denominazione_regione\ndfCVprop = df_covid_complete[['data', 'denominazione_regione', 'deceduti','totale_ospedalizzati']]\nfor i in list_Regions:\n    dfCVprop.loc[dfCVprop.denominazione_regione==i,'deceduti'] = dfCVprop.loc[dfCVprop.denominazione_regione==i,'deceduti']\/df_demo[df_demo.denominazione_regione==i]['popolazione'].values*100\n    dfCVprop.loc[dfCVprop.denominazione_regione==i,'totale_ospedalizzati'] = dfCVprop.loc[dfCVprop.denominazione_regione==i,'totale_ospedalizzati']\/df_demo[df_demo.denominazione_regione==i]['popolazione'].values*100\ndf_main = dfCVprop.pivot_table(index='denominazione_regione', columns='data', values='deceduti').transpose()\ndf=df_covid_complete\nlista_Regioni = df.denominazione_regione.unique()\ntot = len(df[df['denominazione_regione']=='Lombardia'].loc[:,'deceduti'])\nfor l in lista_Regioni:\n    dec = df[df.denominazione_regione==l]['deceduti'].index\n    val =df[df.denominazione_regione==l]['deceduti'].values\n    valosp =df[df.denominazione_regione==l]['totale_ospedalizzati'].values\n    a = val[0]\n    b = valosp[0]\n    for x in range(1,tot):\n        df.loc[dec[x-1],'nuovi_dec'] = a\n        df.loc[dec[x-1],'nuovi_osp'] = b\n        a = val[x]-val[x-1]\n        b = valosp[x]-valosp[x-1]\n    df.loc[dec[tot-1],'nuovi_dec'] = val[tot-1]-val[tot-2]\n    df.loc[dec[tot-1],'nuovi_osp'] = valosp[tot-1]-valosp[tot-2]\n","696dfa05":"df_summary","a1b8c4d3":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nl = ['Lombardia', 'Emilia Romagna', 'Marche', \"Valle d'Aosta\", 'Toscana', 'Campania']\ndatagiorn=df.data.str[5:10]\nplt.figure(figsize=(20,10))\nfor i, r in zip (l, range(len(l))):\n    plt.subplot(2,3,r+1)\n    sns.lineplot(x=datagiorn.unique(), y=df[df.denominazione_regione==i]['nuovi_dec'], label='Progression of deaths')\n    sns.lineplot(x=datagiorn.unique(), y=df[df.denominazione_regione==i]['nuovi_osp'], label='Hospitalized')\n    plt.title(i)\n    plt.xticks(rotation=90)","5ce78bc0":"fig = plt.figure(figsize=(24,15))\nax1 = fig.add_subplot(121)\n\nfor i  in list_Regions:\n    ax1=sns.lineplot(x=df_main.index, y=df_main.loc[:,i], label=i)\n#ax1.axvline('2020-03-07T18:00:00', 0, 1, label='pyplot vertical line', ls='--')\nax1.grid(color='gray', linestyle='-', linewidth=0.3)\nax1.annotate('start of cases', xy=('2020-03-07T18:00:00', 0.001),\n             xycoords='data',\n             size = 15,\n             xytext=(0, 0.01),\n             textcoords='data',\n             arrowprops=dict(arrowstyle= '-|>',\n                             color='r',\n                             lw=5,\n                             ls='-')\n           )\nax1.legend()\n\nplt.xticks(rotation=90)\nplt.title('Death % Pop Progression')\n\nax2 = fig.add_subplot(122)\nfont_size=14\nbbox=[0, 0, 1, 1]\nax2.axis('off')\nplt.title('Table Max Death % Pop per Regions')\n\nmpl_table = ax2.table(cellText = df_summary.iloc[:,[1,4]].sort_values(by='death%',ascending=False).values, rowLabels = df_summary.iloc[:,[1,4]].index, bbox=bbox, colLabels=['Regione','Morti in % Popolazione'],)\nmpl_table.auto_set_font_size(False)\nmpl_table.set_fontsize(font_size)","d36ecff5":"heatmapshow = df_summary[['denominazione_regione',\n                                       'deceduti',\n                                         'death%',\n                                    'popolazione',\n                                'air_poll_median']].corr()\nplt.figure(figsize=(20,10))\nplt.subplot(122)\nsns.scatterplot(x=df_summary.iloc[:,5], y= df_summary['death%'], data=df_summary, hue='air_poll_median', s=500)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\n\nplt.subplot(121)\nsns.heatmap(heatmapshow, annot=True, annot_kws={'size':20})","57b7e19e":"pivtable = df_covid_complete.pivot_table(index='denominazione_regione', columns='data', values='deceduti')\nsns.clustermap(pivtable, cmap='coolwarm', standard_scale=1)\nplt.title('Clustermap Normalizzato')\n\nsns.clustermap(pivtable, cmap='coolwarm')\nplt.title('Clutermap NON normalizzato')\nplt.show()","77fb4cec":"import matplotlib.gridspec\ni='Emilia Romagna'\nsns.clustermap(df_main.transpose(), cmap='coolwarm', standard_scale=1, figsize=(10,10))\nplt.title('Clustermap Normalizzato')\nl = ['Lombardia', 'Emilia Romagna', 'Marche', \"Valle d'Aosta\", 'Toscana', 'Campania', 'Molise']\ng = sns.clustermap(df_main.transpose(), cmap='coolwarm',figsize=(20,10))\ng.gs.update(left=0.05, right=0.45)\nplt.title('Clutermap NON normalizzato')\ngs2 = matplotlib.gridspec.GridSpec(1,1, left=0.6)\nax2 = g.fig.add_subplot(gs2[0])\nfor i in l:\n    sns.lineplot(x=df_main.index, y=df_main.loc[:,i], label=i, ax=ax2)\nplt.ylabel('Death % population')\nplt.grid(color='gray', linestyle='-', linewidth=0.3)\nplt.xticks(rotation=90)\nplt.legend(loc='upper left')\n\n\nplt.show()","d436b3d7":"import geopandas as gpd\n# the json libraries that I found on the net do not have the same names of provinces and regions of my tables\n# I uniformed to be able to relate them not to lose data.\n# I want to display graphs both by region and by province\n\n# the original file can be found here, https:\/\/gist.github.com\/datajournalism-it\/f1abb68e718b54f6a0fe ,\n# my versions ARE UNIFORMED with my tables\n\nreg_json = gpd.read_file('..\/input\/libraries\/reg_ok_2020.geojson')\n\n# the original file for the provinces can be found here https:\/\/gist.github.com\/datajournalism-it\/212e7134625fbee6f9f7\nprov_json = gpd.read_file('..\/input\/libraries\/prov_ok_2020.geojson')\nvis = reg_json.merge(df_summary, how='left', left_on='Regione', right_on = 'denominazione_regione')\nfig, ax = plt.subplots(nrows=2, ncols=2, figsize=(16, 16))\n\nax[0][0].set_title('Air Pollution PM2.5')\nvis.plot(column='air_poll_median', ax=ax[0][0], cmap='coolwarm', legend=True)\nax[0][1].set_title('Death % population')\nvis.plot(column='death%', ax=ax[0][1], cmap='coolwarm', legend=True)\nax[1][0].set_title('Air Pollution PM2.5 - BoxPlot Legend')\nvis.plot(column='air_poll_median', ax=ax[1][0], cmap='coolwarm', legend=True, scheme='BoxPlot')\nax[1][1].set_title('Death % population - BoxPlot Legend')\nvis.plot(column='death%', ax=ax[1][1], cmap='coolwarm', legend=True, scheme='BoxPlot')\n\nplt.show()\n","2b61f846":"df_summary","fd2e1b8f":"ap_prov =  pd.read_excel('..\/input\/airpollution\/Tabella 2.xlsx', header=1)\n\nap_prov[ap_prov['50\u00b0 percentile1 [\u00b5g\/m3]'].str.contains('-', na=False)]\nap_prov.drop(ap_prov[ap_prov['50\u00b0 percentile1 [\u00b5g\/m3]']=='-'].index, inplace=True)\nap_prov['50\u00b0 percentile1 [\u00b5g\/m3]']=pd.to_numeric(ap_prov['50\u00b0 percentile1 [\u00b5g\/m3]'])\n\nap_prov[ap_prov['75\u00b0 percentile2 [\u00b5g\/m3]'].str.contains('-', na=False)]\nap_prov.drop(ap_prov[ap_prov['75\u00b0 percentile2 [\u00b5g\/m3]']=='-'].index, inplace=True)\nap_prov['75\u00b0 percentile2 [\u00b5g\/m3]']=pd.to_numeric(ap_prov['75\u00b0 percentile2 [\u00b5g\/m3]'])\n\ndf = ap_prov.groupby(by='Provincia').median()\ndf.columns = ['Region_id', 'Province_id', 'Municipality_id', 'Observation_id',\n       'Station_code', 'airpoll_50perc', 'airpoll_75perc', 'Numero di dati validi']\ndf.reset_index(inplace=True)\ndf.head(5)","582c2923":"df_covid_prov = pd.read_csv('https:\/\/raw.githubusercontent.com\/pcm-dpc\/COVID-19\/master\/dati-province\/dpc-covid19-ita-province.csv')\ndf_covid_prov.loc[df_covid_prov['denominazione_provincia']=='Forl\u00ec-Cesena','denominazione_provincia'] = 'Forl\u00ec -Cesena'\ndf_covid_prov.loc[df_covid_prov['denominazione_provincia']=='In fase di definizione\/aggiornamento','denominazione_provincia']\ndf_covid_prov.drop(df_covid_prov[df_covid_prov['denominazione_provincia']=='In fase di definizione\/aggiornamento'].index, inplace=True)\ndf_prov = df_covid_prov.groupby('denominazione_provincia').median()\ndf_prov.reset_index(inplace=True)\ndf = df_prov.merge(df, how='left', left_on='denominazione_provincia', right_on='Provincia')\ndf.head(3)","663ae7a0":"df = df.loc[:,['denominazione_provincia','totale_casi','airpoll_50perc', 'airpoll_75perc']]\ndf = df.loc[:,['denominazione_provincia','totale_casi','airpoll_50perc', 'airpoll_75perc']]\ndf['airpoll_50perc'].dropna(inplace=True)\ndf['airpoll_75perc'].dropna(inplace=True)\nvis_prov = prov_json.merge(df, how='left', left_on='NOME_PRO', right_on = 'denominazione_provincia')\nvis_prov.dropna(inplace=True)\na = vis_prov.sort_values('totale_casi', ascending=False).head(10).loc[:,['denominazione_provincia','totale_casi']]\nb = vis_prov.sort_values('airpoll_50perc', ascending=False).head(10).loc[:,['denominazione_provincia','airpoll_50perc']]\nc = vis_prov.sort_values('airpoll_75perc', ascending=False).head(10).loc[:,['denominazione_provincia','airpoll_75perc']]\ntables_side(titolo='Confronto provincie', tabs=[a,b,c], tabslabel=['Total cases','Pollution PM 2.5 - 50 percentile','Pollution PM 2.5 - 75 percentile'])","1366662d":"tableAP =pd.concat([b.reset_index(drop=True), c.reset_index(drop=True)], axis=1)\ntableAP.loc[:, 'airpoll_50perc'] = tableAP.loc[:, 'airpoll_50perc'].round(2)\ntableAP.loc[:, 'airpoll_75perc'] = tableAP.loc[:, 'airpoll_75perc'].round(2)\ntableAP.columns =['prov1', 'airpoll_50perc', 'prov2', 'airpoll_75perc']\ntableAP.loc[tableAP.prov1=='Monza e della Brianza','prov1'] = 'Monza Brianza'\ntableAP.loc[tableAP.prov2=='Monza e della Brianza','prov2'] = 'Monza Brianza'\nfig, ax = plt.subplots(nrows=2, ncols=2, figsize=(16,16))\nax[0][0].set_title('Air Pollution PM2.5 - 50 percentile')\nvis_prov.plot(column='airpoll_50perc', ax=ax[0][0], cmap='coolwarm', legend=True )\nax[0][1].set_title('Total COVID cases')\nvis_prov.plot(column='totale_casi', ax=ax[0][1], cmap='coolwarm', legend=True)\nax[1][0].set_title('Air Pollution PM2.5 - 75 percentile')\nvis_prov.plot(column='airpoll_75perc', ax=ax[1][0], cmap='coolwarm', legend=True)\n\nax[1][1].axis('off')\ntable = ax[1][1].table(cellText = tableAP.values, rowLabels = tableAP.index, bbox=bbox, colLabels=['Province','Air Poll 50 percentile', 'Province', 'Air Poll 75 percentile'],)\ntable.auto_set_font_size(False)\nmpl_table.set_fontsize(14)\n\nplt.show()\n","bb90ae7b":"fig, ax = plt.subplots(nrows=2, ncols=2, figsize=(16,16))\n\nax[0][0].set_title('Air Pollution PM2.5 - 50 percentile')\nvis_prov.plot(column='airpoll_50perc', ax=ax[0][0], cmap='coolwarm', legend=True , scheme='box_plot')\nax[0][1].set_title('Total COVID cases')\nvis_prov.plot(column='totale_casi', ax=ax[0][1], cmap='coolwarm', legend=True, scheme='box_plot')\nax[1][0].set_title('Air Pollution PM2.5 - 75 percentile')\nvis_prov.plot(column='airpoll_75perc', ax=ax[1][0], cmap='coolwarm', legend=True , scheme='box_plot')\n\nax[1][1].axis('off')\ntable = ax[1][1].table(cellText = tableAP.values, rowLabels = tableAP.index, bbox=bbox, colLabels=['Province','Air Poll 50 percentile', 'Province', 'Air Poll 75 percentile'],)\ntable.auto_set_font_size(False)\nmpl_table.set_fontsize(14)\n\nplt.show()","f5cb150b":"!pip install lmfit","d88a7391":"# libraries to manage number\nimport numpy as np\nimport pandas as pd\n# libraries to plotting\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# libraries to model\n\n# Libraries to metrics\nfrom sklearn import metrics\n\n\n# libraries to optimize model\nfrom lmfit import Model","0e63a490":"def sigmoid(x, b, r, t):\n    z = (t * (b + x))\n    sig = 1\/(1 + np.exp( -z ))*r\n    return sig\n#http:\/\/www.edscave.com\/forecasting---time-series-metrics.html\ndef mean_absolute_percentage_error(y_true, y_pred): \n    #y_true, y_pred = y_true, y_pred)\n\n    ## Note: does not handle mix 1d representation\n    #if _is_1d(y_true): \n    #    y_true, y_pred = _check_1d_array(y_true, y_pred)\n\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100\n","6d666ef1":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/pcm-dpc\/COVID-19\/master\/dati-regioni\/dpc-covid19-ita-regioni.csv')\ndf.head()","017d83c9":"days = df.loc[df.denominazione_regione=='Lombardia','data'].shape\ndays = np.arange(days[0])\nregion_list = df.denominazione_regione.unique()\nregion_list\nfig, ax = plt.subplots(nrows=21, ncols=2, figsize=(16,80))\nn = 0\ndf_coeff = pd.DataFrame()\nfor reg in region_list:\n    ax[n][0].set_title('Current situation {}'.format(reg))\n    sns.scatterplot(x=days, y=df.loc[df.denominazione_regione==reg,'deceduti'].values,ax=ax[n][0])\n    x = days\n    y = df.loc[df.denominazione_regione==reg,'deceduti'].values\n           \n    model = Model(sigmoid)\n    pred = model.fit(y, x=x, b= 0, r=y.max()\/2, t= 0.001)\n\n    x_ideal = np.linspace(np.min(x), np.max(x)*2)\n    ideal = pred.eval(x=x_ideal)\n    sns.scatterplot(x_ideal, ideal, label='forecasting model', ax=ax[n][1])\n    \n\n    sns.scatterplot(x=x, y=y, label='deaths in {} until now'.format(reg), s=100, color='red', ax=ax[n][1])\n\n    ax[n][1].grid()\n    ax[n][1].set_title('{} model'.format(reg))\n    ax[n][1].set_xlim(0)\n    \n    df_coeff = df_coeff.append(pred.values, ignore_index=True)\n    #df_coeff.loc[n, 'MAPE'] = mean_absolute_percentage_error(ideal[:len(y)],y)\n    df_coeff.loc[n,'Regions'] = reg\n    n+=1\n\n#plt.savefig('plot_fig.png')   \n#plt.show()\n","8278422f":"italy = df.groupby('data').sum()\n\nreg='Italy'\nfig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10,5))\nax[0].set_title('Current situation {}'.format(reg))\nsns.scatterplot(x=days, y=italy['deceduti'].values,ax=ax[0])\nx = days\ny = italy['deceduti'].values\n        \nmodel = Model(sigmoid)\npred = model.fit(y, x=x, b= 0, r=y.max()\/2, t= 0.001)\nx_ideal = np.linspace(np.min(x), np.max(x)*2)\nideal = pred.eval(x=x_ideal)\nsns.scatterplot(x_ideal, ideal, label='forecasting model', ax=ax[1])\nsns.scatterplot(x=x, y=y, label='deaths in {} until now'.format(reg), s=100, color='red', ax=ax[1])\n\nax[1].grid()\nax[1].set_title('{} model'.format(reg))\nax[1].set_xlim(0)\n\ndf_coeff = df_coeff.append(pred.values, ignore_index=True)\n#df_coeff.loc[n, 'MAPE'] = mean_absolute_percentage_error(ideal[:len(y)],y)\ndf_coeff.loc[21,'Regions'] = reg","15c68afa":"df_coeff.columns=['beta', 'cap', 'theta', 'Regions']\ndf_coeff['cap'] = df_coeff['cap'].apply(lambda x: int(x))\ndf_coeff[['cap','Regions']].rename(columns={'cap':'Assumed number of deaths','Regions':'Regions'})","bab5f2eb":"print('Forecasting with regions study: {}'.format(df_coeff.cap[:21].sum()))\nprint('Forecasting with regions study: {}'.format(df_coeff.cap[21]))","9cd05084":"from scipy.spatial import ConvexHull\ndef encircle(x,y, ax=None, **kw):\n    if not ax: ax=plt.gca()\n    p = np.c_[x,y]\n    hull = ConvexHull(p)\n    poly = plt.Polygon(p[hull.vertices,:], **kw)\n    ax.add_patch(poly)\ndf_coeff","346e9267":"plt.figure(figsize=(10,10))\nsns.scatterplot(data=df_coeff, x='beta', y='theta', s=100)\nn = list(np.concatenate( (df_coeff.sort_values('theta', ascending=False).head(3).index.values,df_coeff.sort_values('beta').head(2).index.values), axis=0))\nfor i in n:\n    plt.annotate(df_coeff.Regions[i], (df_coeff.beta[i], df_coeff.theta[i]*1.01),size=20)\n\nN = list(df_coeff.index.values)\nN = [x for x in N if x not in n]\nsns.scatterplot(data=df_coeff[df_coeff.index==21], x='beta', y='theta', s=200, color='red')\nplt.annotate(df_coeff.Regions[21], (df_coeff.beta[21], df_coeff.theta[21]*1.01),size=20)\nencircle(df_coeff[df_coeff.index.isin(N)].beta, df_coeff[df_coeff.index.isin(N)].theta, ec=\"orange\", fc=\"none\")","d1acb4d1":"model = Model(sigmoid)\npred = model.fit([1,2,3,4], x=[1,2,3,4], b= 0, r=y.max()\/2, t= 0.001)\n","3abb3898":"# Feature Engineering\nThe objective of this phase is to understand what values I can use and if necessary create new data by relating various values, combining everything in a table where it is possible.\nAs for the COVID data, I will keep only the number of the deceased, as the number of infected people is not reliable. No swabs were made to the whole population, therefore the number of infected people is unknown. Furthermore, the presence of people who are asymptomatic makes the analysis even more complicated.\nThe value concerning the number of hospitalized people is also difficult to use, as the number of places available in hospitals is difficult to recover and is not always proportional to the number of inhabitants. For these reasons, I will not even consider this value.\nThe number of deaths per region will be related to the number of inhabitants, in a subsequent analysis, I will also insert the population density by region.\nI will also add the column for air pollution and the label for exceeding the limit allowed by law. If a region contains more than one data, the data will be grouped and the median will be taken.\nThe operations regarding this phase will be collected in an ipynb file ([making_main_table.ipynb](https:\/\/github.com\/andreapas79\/COVID-19)) in the main directory.","4555476b":"These two tables summarize the data on which I will carry out the initial analyses and which I will summarize in some graphs.\n\nIt can be noted that Lombardy is at the top of both lists: one relating to deaths as a percentage, absolute deaths and the other relating to pollution (the polluting figure refers to the 50th percentile).\n\nThe data provided by the Civil Protection are divided into two large datasets:\n\n* one that contains the history by the region of cases ascertained, hospitalized, intensive care, isolation and the deceased\n* one that contains the history by the province which, unlike the previous one, is not as detailed and only has the history of the number of cases ascertained by province.\n\nThe number of deceased will be analyzed for the reasons previously expressed. For now, I will not consider the provincial data.\n\n***\n","f2d21602":"As for <u>deaths and polluting<\/u> the correlation value is <u>0.54<\/u>, which can be considered moderately correlated, obviously it must be remembered that the [\"correlation does not imply the cause\"](https : \/\/en.wikipedia.org\/wiki\/Correlation_does_not_imply_causation), in other words: it is not said that it is the cause but it could be one of the predisposing factors, or a contributing factor, which makes the pathology even more deleterious. Other useful data to get a better picture could be:\n\n* the **population density**, possibly subdivided by registry bands;\n* the **age of the deceased**;\n* **an index that expresses the health response capacity of the cities\/region** (ie number of beds in intensive care, reachability of patients by the rescue and health service)\n\nData I am not able to obtain.\n\nIt should be noted that <u>the pollution index is relative to the entire region<\/u>, the sampling stations are often scattered throughout the territory. This implies that the pollution of heavily populated municipalities is often compensated by other sparsely populated ones where the pollution rate falls below the threshold. This aspect does not give the same weight to the influence that the pollution of large centers has on the population and over the general state of health.\n\n|               | Population | Air Pollution |\n| ------------- | ---------- | ------------- |\n| city 1        | 1.000.000  | 100           |\n| city 2        | 1.000      | 10            |\n| city 3        | 1.000      | 10            |\n| Normal mean   |            | 40            |\n| Weighted mean |            | 99.8          |\n\n$$\nWeighted\\ Average = \\frac {\\sum Wx}{\\sum W}\n$$\n\nAll the data I found were calculated with an arithmetic average, not a weighted average, as soon as possible I will try to reformulate the regional data with a weighted average between population and pollution.\n\nThe following graphs refer to the pivot tables built on the deceased and expressed through clusterplots. I used two data sets one NOT proportionate to the population and one PROPORTIONAL to the population. I also made a normalized and non-normalized chart.","7c9c2eaa":"# Forecast Analysis\nI use the sigmoid function which often works well in epidemiological situations.\nThe function is as follow: \n\n$$\n    z = \\theta_0 + \\theta_1*x\\\\\n    g(z) = \\frac {1}{(1 + e^{-z})} \n$$\n\nThe Sigmoid function works between 0 and 1, if I do not change the formula, it simply tells us that the end of the event has been reached, through the number 1. For this reason, we must multiply the result of the sigmoid function by the maximum number reached by the series\n","67b88adc":"Different regions in Italy are evolving differently, the separate study can help to compare the predictive model, finding the most suitable one.","7809edd7":"Also in this case these first three graphs are represented with a color legend based on the values, in the following the data are divided by the Box Plot classifier.","1dd5742c":"The first two graphs are represented with a color legend based simply on values, in the other two the data are divided into 5 classes using the Box Plot classifier (or \"Box and whisker plot\"), which combines the minimum and maximum values (and then the interval) with the quartiles to highlight the dispersion index of the values\n\n------\n\nI will also do the same for the provinces, the database does not have numbers relating to deaths by province and I will have to use the value relating to the total number of cases. The problems are those discussed at the beginning: they are very relative data, like those of the infected, and above all, in this case, there are not even indications regarding the number of beds per province, but they are the only data in my possession to size the infection.","0927aa4d":"From these two graphs, the differentiation between the various groups is noticeable, the only region that stands out is always Lombardy.\n\nThings change slightly by proportioning the data.","5f152f32":"# **Introduction**\n\n### I state that this analysis should be understood as a simple data manipulation exercise, instead of as a study of any utility.\n\n***\n\nThe following document aims to analyze the trend of the COVID-19 pandemic in Italy, drawing on the net data that has been provided until 31-March-2020.\nI will analyze the following phases:\n1. [Understanding the problem](#Understanding-the-problem)\n2. [Data acquisition](#Data-acquisition)\n   * [Data cleaning](#Data-Cleaning)\n   * [Feature Engineering](#Feature-Engineering)\n   * [Data exploration](#Data-exploration)\n   * [Consideration](#Considerations)\n3. [Forecast Analysis](#Forecast-Analysis)\n4. Data Visualization\n5. Conclusions\n\n# Understanding the problem\n\nThe situation is complex as it is rich in variables, therefore the analysis of the spread of this pathology requires an understanding of:\n\n* reliability of the data provided and on which it is necessary to operate;\n* type of disease.\n\n## Are the data reliable?\n\nThis point must take into consideration two aspects:\n\n1. the data collection protocol between different States;\n\n2. on the other hand with the same protocol (ie within the same country) what percentage of cases can the data collected cover? (ie many people have gone through quarantine and illness in solitude, many are asymptomatic);\n\nThe answer to these two questions is likely to invalidate any analysis or give results that are not credible or usable, comparable to a dice roll.\n\n> 1. The data I have collected so far, based on the information received from the official media, lead me to think that the protocols between the various States are not uniform, as the attribution of death for COVID-19 is not equal, the number of swabs performed is not proportionally equal. For this reason, I believe it is not possible to treat two States within the same analysis, and I will limit my case study to the Italian State only.\n> 2. As for the amount of data collected, not having the possibility of knowing whether the data provided is adequate, I'm taking the chance that's entirely true, and I will operate on the data provided by the official national sources.\n\n## The illness\n\nThe viral agent that aggressively attacks the respiratory system, causing within a certain percentage, an aggravation of the therapeutic situation, changing into interstitial pneumonia, up to, in the most serious cases, the death of the patient.\nEven if the analysis of the problem is limited to the Italian State only, the evolution of the pandemic is very different. This leads me to think that a different evolution, with the same care, containment and recognition protocols, is caused by different situations between the various Italian regions. Pathogens proliferate in situations suitable for their reproduction, if the diffusion is different in two population groups, perhaps the cause should be sought in the population.\n\nA starting point for this consideration was provided by these two photos:","0809718b":"These 5 regions are outside the group of other, maybe their values are too few to be reliable, All the others are fairly uniform and close to the national value, the curves probably have a greater degree of plausibility.","91223d9d":"The photos without many analyzes demonstrate at least a similarity, perhaps not yet demonstrable, but certainly sufficient to start an analysis. Although the photo concerning the analysis of PM2.5 concentration is dated 2005, any damage to the respiratory system cannot be recovered in 10\/15 years, assuming that the situation has improved.\nThe question I asked myself was:\n\n*\"... can a virus that attacks the respiratory system find an optimal condition in a population that lives by breathing air that is harmful to the respiratory system itself?\"*\n\nDeepening this theme I found some articles:\nhttps:\/\/www.lifegate.com\/people\/news\/air-pollution-europe-eea\nhttp:\/\/www.ilmessengero.it\/category\/italia\/\nhttps:\/\/www.agi.it\/cronaca\/ecco_come_abbattere_lo_smog_in_citt_il_decalogo_di_legambiente-1347212\/news\/2017-01-05\/\nhttps:\/\/nova.ilsole24ore.com\/infodata\/scopri-la-mappa-mondiale-dellinquinamento-dellaria-nelle-citta\/?refresh_ce=1\nhttps:\/\/www.repubblica.it\/ambiente\/2019\/11\/14\/news\/italia_prima_in_europa_per_le_morti_da_polveri_sottili-241031894\/\nAnd from official government sources:\nhttp:\/\/www.salute.gov.it\/imgs\/C_17_paginaRelazione_1438_listaFile_itemName_2_file.pdf\n\n## Conclusions\nThe goal of this analysis will be:\n* analyze the progress of the pandemic;\n* analyze the diffusion on the Italian territory;\n* find correlations between air pollution and the death rate from interstitial pneumonia caused by COVID-19 in regions of Italy alone.\nThe model found can be applied to other individual countries so that protocols do not distort the results.\n\n# Data acquisition\n\n* The COVID-19 data, I cannot use on those provided by **[John Hopkins CSSE](https:\/\/github.com\/CSSEGISandData\/COVID-19\/tree\/master\/csse_covid_19_data\/csse_covid_19_time_series)** because they are differentiated for the various Italian regions. The data were acquired through the Github profile of the Prime Minister's Office - Italian Civil Protection Department, in the section relating to [COVID-19](https:\/\/github.com\/pcm-dpc\/COVID-19\/tree\/master\/dati-regioni). As far as my analysis is concerned, I downloaded them and they are also available in the [Data](Data\/Covid19).\n\n* The **Air pollution data** have been taken from the [ISPRA](https:\/\/annuario.isprambiente.it\/ada\/basic\/7080), I also found the data of the [Eupean Environmental Agency](https:\/\/www.eea.europa.eu\/data-and-maps\/data\/air-pollutant-concentrations-at-station) relating to the years from 2010 -2016, however, I have not used them because they have many incomplete fields. I leave the reference for any cross-checks.\n\n* The **demographic distribution data**, I believe that dimensioning the disease data to the total population is of primary importance, as the regions differ considerably by population. The data were acquired from the [IStat](http:\/\/dati.istat.it\/Index.aspx?QueryId=18545) and were grouped in a table in CSV format in the [airpollution](https:\/\/github.com\/andreapas79\/COVID-19\/tree\/master\/Data\/air_pollution_data) folder in my Github account.\n\n# Data Cleaning\nIn this phase, I will go to examine the various datasets to check for missing or incorrect values.\nThe operations concerning this phase will be collected in an IPYNB file ([data_cleaning.ipynb](data_cleaning.ipynb)) in the main directory.\n\n","c4c2edc5":"(To see the images in more detail consult the file [making_main_table.ipynb](https:\/\/github.com\/andreapas79\/COVID-19\/blob\/master\/making_main_table.ipynb) in the main directory)\n\nThe proportionate data are, in my opinion, more visible.  The clustermap outline the presence of three main groups:\n\n- Lombardy;\n- Marche, Liguria, Valle d'Aosta, Piedmont, Trentino Alto Adige, Emilia Romagna and Veneto;\n- the remaining Italian regions;\n\nThis subdivision can also be seen from the lineplot aside, although less clear.\n\nUntil now, the displayed data has not shown an evident relationship between pollution and death from Coronavirus interstitial pneumonia, however, we remember that the Lombardy region, <u>the only one with a value higher than those permitted by law<\/u>, is the region that has suffered the greatest number of deaths attributed to the action of the virus.\n\n***\n\nGeoplot charts follow to get a clearer view of the data","91910330":"Between these two approaches, there is a difference of 700; some regions, fortunately, have a low number of deaths, but for predictive analysis, a low number means a low precision, perhaps the study of the whole nation could be more precise.","45111f53":"The **<u>data of the following chart have been proportioned according to the population<\/u>** of the individual regions.","49571b47":"I also added the pollution value of the 75th percentile, to have a dimension of the pollution range, remember that the annual limit value for January 1, 2015, was set at 25 \u00b5g\/m3, while by January 1, 2020, the value was been set at 20 \u00b5g\/m3. (according to Legislative Decree 155\/2010, I remember the report of the [ministry of the environment](http:\/\/www.salute.gov.it\/imgs\/C_17_paginaRelazione_1438_listaFile_itemName_2_file.pdf).)","36d9420e":"What I need now is the progressive number of values per week, this week they change some region name, so I must uniform this one","f2151c20":"In this case, I lack the data relating to the provincial population density, a value which, if it is related to the pollution index, could express the weight that pollution expresses on the territory and on the people who live there.","51a84466":"From this first graph you can begin to hypothesize approximately 3 groups:\n\n* Lombardy\n* Emilia Romagna, Marche, Aosta Valley, Liguria, P.A. Trento, Piedmont\n* The rest of Italy\n\nThe most prominent aspect is that indicated by the red arrow, the first cases appear at the same time in Lombardy and Emilia (Codogno and the neighboring villages are on the border of the two regions), however in Lombardy it has had an important diffusion, while in Emilia it remains much more contained.\n\nWe proceed with the study of the correlation between pollution and deaths. I placed a heatmap side by side with a simple scatterplot to get a clearer view of the two graphs.","ad8d1e5b":"I analyze the coefficients to check for anomalous values","4de3afda":"Now I have 4 data tables:\n\n* df_summary: which contains the data of the regions, concerning air pollution and deaths as a percentage of the population ('regional_code', 'denomination_region', 'deceased', 'population', 'death%', 'air_poll_median')\n* df_covid_complete: complete dataframe from the Civil Protection GitHub site, it has all the original columns\n* dfCVprop: a dataset of df_covid_complete from which only the data relating to the date of detection, region and deaths were extrapolated which were normalized based on the population of the region\n* df_main: simply the pivot table of the dfCVprop dataframe has the regions as columns and the date of the detections as the index, I keep it for convenience\n* df: the original dataframe df_covid_complete to which I added the progression of the deceased and hospitalized\n\nI added the number of hospitalized people because it could be useful in the future\n# Data exploration\n\nThe following graphs represent the evolution of 6 regions, Lombardy was the forerunner, together with Emilia Romagna, of the Italian case, but on the contrary of Emilia Romagna, it was the region that underwent the greatest number of cases and losses so far.\n\nRestrictive measures were initially adopted in Lombardy which after a few weeks were extended to the rest of Italy. The central aspect remains the difference in evolution between this region and the others, we must remember that:\n\n* on the day of the communication of the closure of the Lombard borders there was an exodus of people, who moved from Lombardy to other regions of Italy, despite this shift there was no spread or an increase in cases exponentially, as expected after this behavior;\n* several regions have not strictly respected government measures and yet there has not been a diffusion at least equal to that which occurred in Lombardy.\n\nThese two points suggest that, in this region, there are one or more factors that make the virus particularly dangerous.","faa54b80":"# Considerations\nThe data are relatively few and incomplete, and the epidemic is not yet concluded so it is not yet possible to understand whether the development that took place in Lombardy will replicate in the rest of Italy, or whether the most polluted regions will have a different trend. I will continue the analysis with these data, to then replicate it with more precise data and with the corrections that I have found until now.\n\nThe next phase can allow outlining predictive models to try to recognize the type of pathology development in various regions."}}