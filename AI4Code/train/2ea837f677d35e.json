{"cell_type":{"9baa9c56":"code","50e3504a":"code","1962a431":"code","25f212e4":"code","eb6cebf9":"code","d7c634b4":"code","755cadbe":"code","f480cd5b":"code","a3e347ae":"code","c23c0d31":"code","cd187d19":"code","02b1f52f":"code","62d11e25":"code","a8f7b89e":"code","4854f01b":"code","86e89c3e":"code","b085891b":"code","7e3370e1":"code","d79283d8":"code","27dcedf2":"code","76c43ca5":"code","608f5c93":"code","056ddad7":"code","3b8d0e2c":"code","14aa7e14":"code","97ac6a81":"code","b13ac791":"code","d1dbf968":"code","32b450d7":"code","cab65f91":"markdown","b757781c":"markdown","74c17684":"markdown","820e86da":"markdown","08fd1157":"markdown","19e31fba":"markdown","7b790a61":"markdown","74a9893d":"markdown","5a22a91e":"markdown","659a6ee4":"markdown","decd2ff1":"markdown","7fa4c8ba":"markdown","cfe2083c":"markdown","a468c97c":"markdown","c06cce34":"markdown","beae459e":"markdown","c8ea1b55":"markdown","cf190b09":"markdown","a46051ac":"markdown","f01e231e":"markdown","fe72230e":"markdown","8655f0f4":"markdown","07967aa2":"markdown"},"source":{"9baa9c56":"#importing numpy for mathematical operation\nimport numpy as np\n\n#importing the pandas for handling the data \nimport pandas as pd\n\n#importing matplotlib for plotting purpose\nimport matplotlib.pyplot as plt\n\n#importing seaborn for drawing the countplot and barplot\nimport seaborn as sns","50e3504a":"dataset = pd.read_csv('..\/input\/Chicago_Crimes_2012_to_2017.csv')\ndataset.head(3)","1962a431":"plt.figure(figsize = (10, 10))\nsns.heatmap(dataset.isnull())","25f212e4":"#creting copy of data\ndf = dataset.copy()\n\n#removing the null values\ndf = df.dropna()\n\n#removing the unnecessary data for the notebook\ndf = df.drop(columns = ['Unnamed: 0', 'Block', 'Case Number', 'IUCR', 'X Coordinate', 'Y Coordinate','Updated On','Year','FBI Code', 'Beat', 'Ward','Community Area', 'District'], axis = 1)\ndf.head(3)","eb6cebf9":"%%time\ndf.Date = pd.to_datetime(df.Date, format = '%m\/%d\/%Y %I:%M:%S %p')","d7c634b4":"#checking changes done are according to our wish or not\ndf.head(3)","755cadbe":"%%time\n#assigning date as index of dataset as we will need it in later section for drwing beautiful heatmaps\ndf.index = df.Date","f480cd5b":"df.head(3)","a3e347ae":"list_of_description = list(df['Description'].value_counts().index[20:])\nlist_of_location_description = list(df['Location Description'].value_counts().index[20:])","c23c0d31":"#above extracted values are assigned to 'OTHER' category\ndf.loc[df['Description'].isin(list_of_description), df.columns == 'Description'] = 'OTHER'\ndf.loc[df['Location Description'].isin(list_of_location_description), df.columns == 'Location Description'] = 'OTHER'","cd187d19":"df['Description'] = pd.Categorical(df['Description'])\ndf['Location Description'] = pd.Categorical(df['Location Description'])","02b1f52f":"plt.figure(figsize = (12,3))\ndf['Date'].resample('M').size().plot(legend = False, color = 'red')\nplt.title('Crimes Monthly basis (2012 - 2017)')\nplt.xlabel('Month', fontsize = 15)\nplt.ylabel('Number of Crimes', fontsize = 15)\nplt.show()","62d11e25":"plt.figure(figsize = (12, 4))\ndf['Date'].resample('M').size().rolling(12).sum().plot(legend = False, color = 'red')\nplt.title('Moving Average Crimes Monthly basis (2012 - 2017)')\nplt.xlabel('Month', fontsize = 15)\nplt.ylabel('Number of Crimes', fontsize = 15)\nplt.show()","a8f7b89e":"plt.figure(figsize = (12, 4))\ndf['Date'].resample('D').size().rolling(365).sum().plot(legend = False, color = 'red')\nplt.title('Moving Average Crimes Daily basis (2012 - 2017)')\nplt.xlabel('Month', fontsize = 15)\nplt.ylabel('Number of Crimes', fontsize = 15)\nplt.show()","4854f01b":"crimes_count_date = df.pivot_table('ID', aggfunc=np.size, columns='Primary Type', index=df.index.date, fill_value=0)","86e89c3e":"crimes_count_date.rolling(365).sum().plot(figsize=(25, 40), subplots=True, layout=(-1, 3), sharex=False, sharey=False)\nplt.show()","b085891b":"plt.figure(figsize = (8, 5))\nday = ['Saturday', 'Friday', 'Thursday', 'Wednesday', 'Tuesday', 'Monday','Sunday']\ndf.groupby([df.index.dayofweek]).size().plot(kind = 'barh')\nplt.title('Number of Crimes Day Wise')\nplt.ylabel('Day of Week', fontsize = 14)\nplt.yticks(np.arange(7), day)\nplt.xlabel('Number of Crimes', fontsize = 13)\nplt.show();","7e3370e1":"plt.figure(figsize = (8, 6))\nday = ['December', 'November', 'October', 'September', 'August', 'July', 'June', 'May',  'April', 'March', 'February', 'January']\ndf.groupby([df.index.month]).size().plot(kind = 'barh')\nplt.title('Number of Crimes Month Wise', fontsize = 16)\nplt.ylabel('Month of Year', fontsize = 14)\nplt.yticks(np.arange(12), day)\nplt.xlabel('Number of Crimes', fontsize = 13)\nplt.show();","d79283d8":"plt.figure(figsize = (15, 12))\ndf.groupby(df['Primary Type']).size().sort_values(ascending = True).plot(kind = 'barh')\nplt.title('Types of Crimes in Descending Order', fontsize = 15)\nplt.xlabel('Number of Crimes', fontsize = 15)\nplt.ylabel('Types of Crimes', fontsize = 15)\nplt.show()","27dcedf2":"plt.figure(figsize = (10, 7))\ndf.groupby(df['Location Description']).size().sort_values(ascending = True).plot(kind = 'barh')\nplt.title('Location Decription of Crimes in Descending Order', fontsize = 15)\nplt.xlabel('Number of Crimes', fontsize = 15)\nplt.ylabel('Location Description', fontsize = 15)\nplt.show()","76c43ca5":"hour_by_location = df.pivot_table(values = 'ID', index = 'Location Description', columns = df.index.hour, aggfunc = np.size).fillna(0)\nhour_by_type     = df.pivot_table(values = 'ID', index = 'Primary Type', columns = df.index.hour, aggfunc = np.size).fillna(0)\nhour_by_week     = df.pivot_table(values = 'ID', index = df.index.hour, columns = df.index.weekday_name, aggfunc = np.size).fillna(0)\nhour_by_week     = hour_by_week.T\n\nday_by_location  = df.pivot_table(values = 'ID', index = 'Location Description', columns = df.index.dayofweek, aggfunc = np.size).fillna(0)\nday_by_type      = df.pivot_table(values = 'ID', index = 'Primary Type', columns = df.index.dayofweek, aggfunc = np.size).fillna(0)\ntype_by_location = df.pivot_table(values = 'ID', index = 'Location Description', columns = 'Primary Type', aggfunc = np.size).fillna(0)","608f5c93":"from sklearn.cluster import AgglomerativeClustering as AC\n\ndef scale_df(df,axis=0):\n    '''\n    A utility function to scale numerical values (z-scale) to have a mean of zero\n    and a unit variance.\n    '''\n    return (df - df.mean(axis=axis)) \/ df.std(axis=axis)\n\ndef plot_hmap(df, ix=None, cmap='bwr'):\n    '''\n    A function to plot heatmaps that show temporal patterns\n    '''\n    if ix is None:\n        ix = np.arange(df.shape[0])\n    plt.imshow(df.iloc[ix,:], cmap=cmap)\n    plt.colorbar(fraction = 0.03)\n    plt.yticks(ix, df.index[ix])\n    plt.xticks(np.arange(df.shape[1]))\n    plt.grid(False)\n    plt.show()\n    \ndef scale_and_plot(df, cmap = 'bwr', ix = None):\n    '''\n    A wrapper function to calculate the scaled values within each row of df and plot_hmap\n    '''\n    df_marginal_scaled = scale_df(df.T).T\n    if ix is None:\n        ix = AC(4).fit(df_marginal_scaled).labels_.argsort() # a trick to make better heatmaps\n    cap = np.min([np.max(df_marginal_scaled.as_matrix()), np.abs(np.min(df_marginal_scaled.as_matrix()))])\n    df_marginal_scaled = np.clip(df_marginal_scaled, -1*cap, cap)\n    plot_hmap(df_marginal_scaled, ix=ix, cmap = cmap)\n    \ndef normalize(df):\n    result = df.copy()\n    for feature_name in df.columns:\n        max_value = df[feature_name].max()\n        min_value = df[feature_name].min()\n        result[feature_name] = (df[feature_name] - min_value) \/ (max_value - min_value)\n    return result","056ddad7":"sns.clustermap(scale_df(hour_by_type.T).T)","3b8d0e2c":"plt.figure(figsize = (15, 12))\nscale_and_plot(hour_by_type, 'Purples')","14aa7e14":"plt.figure(figsize = (10, 15))\nscale_and_plot(hour_by_location, 'bwr')","97ac6a81":"plt.figure(figsize = (12, 7))\nscale_and_plot(hour_by_week, 'Spectral')","b13ac791":"plt.figure(figsize = (4, 8))\nscale_and_plot(day_by_location, 'Greens')","d1dbf968":"plt.figure(figsize = (9, 13))\nscale_and_plot(day_by_type, 'Blues')","32b450d7":"df = normalize(type_by_location)\nix = AC(3).fit(df.T).labels_.argsort() # a trick to make better heatmaps\nplt.figure(figsize=(10, 15))\nplt.imshow(df.T.iloc[ix,:], cmap='PuBuGn')#Reds\nplt.colorbar(fraction=0.03)\nplt.xticks(np.arange(df.shape[0]), df.index, rotation='vertical')\nplt.yticks(np.arange(df.shape[1]), df.columns)\nplt.title('Normalized location frequency for each crime')\nplt.grid(False)\nplt.show()","cab65f91":"## Creating different pivot table of dataset for drawing heatmap","b757781c":"## Drawing moving average plot of crime after sampling on monthly basis","74c17684":"## Drawing bargraph classifying crimes according to month of year","820e86da":"## Plotting moving average of different types of crimes as subplots","08fd1157":"## Drawing Countplot showing crime incident Location Description","19e31fba":"## Reading in the data ##","7b790a61":"## Drawing countplot showing different types of crimes in descending order","74a9893d":"## Extracting description and location_description which are less prone to crime","5a22a91e":"## Function for creating heatmap, doing clustering which makes them look nicer","659a6ee4":"## Converting the data into python readable format","decd2ff1":"## Drawing plot of crime after sampling them on monthly basis","7fa4c8ba":"# Data Analysis of Chicago Crime Dataset(2012 - 2017)","cfe2083c":"## Importing the dependencies","a468c97c":"## Heatmap showing intensity of different types of Crimes according to day of week ","c06cce34":"## Heatmap showing intensity of different types of Crimes according to different locations","beae459e":"## Drawing bargraph classifying crimes according to day of week","c8ea1b55":"## Heatmap showing intensity of Crime at particular location according to hour of day","cf190b09":"## Drawing plots of crime after sampling them on daily basis","a46051ac":"## Heatmap showing intensity of Crime at different locations according to day of week","f01e231e":"## Creating a table which consists of types of crimes as columns ","fe72230e":"## Heatmap showing intensity of different types of Crime according to hour of day","8655f0f4":"## Heatmap showing intensity of Crime at particular day according to hour of day","07967aa2":"## Drawing in the heatmap for seeing the amount of null values present in the data ##"}}