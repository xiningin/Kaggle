{"cell_type":{"9d5dfc91":"code","aaa2eb22":"code","b85afd78":"code","377ca2c4":"code","804700bb":"code","10b0d853":"code","66b02459":"markdown","e0c3b3b0":"markdown","a8650c8b":"markdown","92097799":"markdown"},"source":{"9d5dfc91":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.metrics import r2_score\n\nimport warnings\nwarnings.filterwarnings('ignore')","aaa2eb22":"df = pd.read_csv('\/kaggle\/input\/50-startups\/50_Startups.csv')\ndf.head()\n\nX = df.iloc[:, :-1]    # independent varible\ny = df.iloc[:, -1]     # dependent variable\n\nX.head()\n\ndf['State'].unique()\n\n# Since we do not need all the 3 columns and can work with only 2 columns for classifying the states, we will drop one column\nstates = pd.get_dummies(X['State'], drop_first=True)\nstates.head()\n\nX = X.drop('State', axis=1)\nX.head()\n\nX = pd.concat([X, states], axis=1)\nX.head()\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","b85afd78":"model = LinearRegression()\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)\ny_pred","377ca2c4":"y_test","804700bb":"score = r2_score(y_test, y_pred)\nprint(\"Score:\", score)","10b0d853":"sns.distplot(y_pred - y_test)","66b02459":"# Model training","e0c3b3b0":"# Analyze","a8650c8b":"# Profits Multiple Linear Regression","92097799":"# Dataset"}}