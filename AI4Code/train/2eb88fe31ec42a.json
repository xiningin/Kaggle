{"cell_type":{"fea1365c":"code","74b0e58d":"code","d874dcfc":"code","95e2d8ca":"code","9ba0267e":"code","5554b43c":"code","22424ac6":"code","2366a2cf":"code","1be23566":"code","d1587b8d":"code","e033103a":"code","f1510ac8":"code","cb5d271e":"code","d6dcc976":"code","1e5d7fdb":"code","a665ba26":"code","658ba6af":"code","46d60387":"code","df242c08":"code","ef839d4e":"code","a2b03a24":"code","64f1bc31":"code","edf8c37f":"code","a12603f1":"code","2af90e39":"code","01bf25c2":"code","59bdca14":"code","a3e6269f":"code","158c0c95":"code","33b9f2aa":"code","4e5b91db":"code","2ed96b7e":"code","9f71958d":"code","f9000138":"code","77e071d5":"markdown","b4bd6cb7":"markdown","54451b05":"markdown","4efea036":"markdown","171721bc":"markdown","05d88871":"markdown","99eb78ee":"markdown"},"source":{"fea1365c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74b0e58d":"df=pd.read_csv(r'\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","d874dcfc":"df.head()","95e2d8ca":"df.isnull().any()","9ba0267e":"import seaborn as sns","5554b43c":"df.describe()","22424ac6":"sns.boxplot(df['creatinine_phosphokinase'])","2366a2cf":"df['creatinine_phosphokinase']=np.where(df['creatinine_phosphokinase']>=582,582,df['creatinine_phosphokinase'])","1be23566":"sns.boxplot(df['creatinine_phosphokinase'])","d1587b8d":"sns.boxplot(df['platelets'])","e033103a":"df['platelets']=np.where(df['platelets']>=303500,303500,df['platelets'])","f1510ac8":"sns.boxplot(df['platelets'])","cb5d271e":"df['platelets']=np.where(df['platelets']<=212500,212500,df['platelets'])","d6dcc976":"sns.boxplot(df['platelets'])","1e5d7fdb":"cor=df.corr()\ncor","a665ba26":"sns.heatmap(cor)","658ba6af":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()","46d60387":"x=df.iloc[:,[0,1,2,3,4,5,6,7,8,9,10,11]]\ny=df.iloc[:,[12]]","df242c08":"x","ef839d4e":"y","a2b03a24":"x=sc.fit_transform(x)","64f1bc31":"# since the data is small iam not spliting into train and test\nfrom sklearn import svm\ns=svm.SVC()","edf8c37f":"s.fit(x,y)","a12603f1":"pred=s.predict(x)\npred","2af90e39":"from sklearn.metrics import classification_report,confusion_matrix","01bf25c2":"print(confusion_matrix(pred,y))\nprint(classification_report(pred,y))","59bdca14":"# lets try it with different algorithms\nimport xgboost\nxgb=xgboost.XGBClassifier()","a3e6269f":"xgb.fit(x,y)","158c0c95":"pre=xgb.predict(x)","33b9f2aa":"print(confusion_matrix(pre,y))\nprint(classification_report(pre,y))","4e5b91db":"from sklearn.ensemble import RandomForestClassifier\nforest= RandomForestClassifier()","2ed96b7e":"forest.fit(x,y)","9f71958d":"pr=forest.predict(x)","f9000138":"print(confusion_matrix(pr,y))\nprint(classification_report(pr,y))","77e071d5":"# xgboost model","b4bd6cb7":"# data cleaning\n","54451b05":"# random forest model","4efea036":"# svm model","171721bc":"# feature selection","05d88871":"# data preprocessing","99eb78ee":"### checking for outliers "}}