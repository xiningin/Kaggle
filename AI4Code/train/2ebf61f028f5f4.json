{"cell_type":{"54676489":"code","29b8b1d2":"code","7041b281":"code","d81788d7":"code","a54c2717":"code","7da6a0f9":"code","6addb7ef":"code","bcc69396":"markdown"},"source":{"54676489":"!pip install \"autogluon.tabular[all]==0.1.1b20210312\"\n!pip install AutoViz\n!pip install xlrd","29b8b1d2":"import pandas as pd\ndfe = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/train.csv')\n\nfrom autoviz.AutoViz_Class import AutoViz_Class\n\n#Instantiate the AutoViz class\nAV = AutoViz_Class()","7041b281":"dftc = AV.AutoViz(filename='', \n                  sep ='' , \n                  depVar ='Survived', \n                  dfte = dfe, \n                  header = 0, \n                  verbose = 0, \n                  lowess = False, \n                  chart_format ='png', \n                  max_rows_analyzed = 100000, \n                  max_cols_analyzed = 30\n)","d81788d7":"from autogluon.tabular import TabularDataset, TabularPredictor\nfrom autogluon.tabular.models.lr.lr_rapids_model import LinearRapidsModel\nfrom autogluon.tabular.models.knn.knn_rapids_model import KNNRapidsModel\n\ntrain_data = TabularDataset('..\/input\/tabular-playground-series-apr-2021\/train.csv')\ntest_data = TabularDataset('..\/input\/tabular-playground-series-apr-2021\/test.csv')\n\nlabel = 'Survived'","a54c2717":"#using integrated RAPIDS models along with some boosting models\npredictor = TabularPredictor(\n    label=label,\n    eval_metric='accuracy',\n    learner_kwargs={'ignored_columns': ['PassengerId']}\n).fit(\n    train_data,\n    presets='best_quality',\n    hyperparameters={'XGB': {'ag_args_fit': {'num_gpus': 1}},\n        'GBM': [{}, {'extra_trees': True, 'ag_args': {'name_suffix': 'XT'}}, 'GBMLarge'],\n        'NN': {'ag_args_fit': {'num_gpus': 1}},\n        'CAT': {'ag_args_fit': {'num_gpus': 1}},\n        KNNRapidsModel: {},\n        LinearRapidsModel: {},\n       \n    },\n)","7da6a0f9":"import pandas as pd\nsubmission = test_data[['PassengerId']]\ntest_pred = predictor.predict(test_data)\nsubmission = pd.concat([submission, test_pred], axis=1)\nsubmission.to_csv('submission.csv', index=False)\nsubmission.head()","6addb7ef":"predictor.leaderboard(silent=True)","bcc69396":"![autogluon](https:\/\/auto.gluon.ai\/stable\/_static\/AutogluonLogo.png)\n\n\nAutoGluon enables easy-to-use and easy-to-extend AutoML with a focus on automated stack ensembling, deep learning, and real-world applications spanning text, image, and tabular data. Intended for both ML beginners and experts, AutoGluon enables you to:\n\nQuickly prototype deep learning and classical ML solutions for your raw data with a few lines of code.\n\nAutomatically utilize state-of-the-art techniques (where appropriate) without expert knowledge.\n\nLeverage automatic hyperparameter tuning, model selection\/ensembling, architecture search, and data processing.\n\nEasily improve\/tune your bespoke models and data pipelines, or customize AutoGluon for your use-case."}}