{"cell_type":{"0c9bbca3":"code","5abd4873":"code","50efd8c5":"code","1428687f":"code","1f105453":"code","45c2a47d":"code","e8d14b81":"code","5c133b17":"code","17dd79d3":"code","a4f9feea":"code","4563015e":"code","b35bb7a7":"code","29cc03cf":"code","b0273432":"code","8d293694":"code","aab227ff":"code","fc35ece1":"code","ebdc9ad2":"code","88bdeaac":"code","01b2525a":"code","e1ee8b81":"code","6e25564c":"code","b3c2f212":"code","7dda1639":"code","36f05bb6":"code","02943d5b":"code","9a973688":"code","b29099a4":"code","5f815093":"code","41709a09":"code","5a38ec23":"code","24f3a386":"code","96f19e02":"code","3cd64723":"code","285624fe":"markdown","e718b06e":"markdown","ea27a1cb":"markdown","6a672f4d":"markdown","4eb602b9":"markdown","377805f3":"markdown","e00a64d9":"markdown","4b229eab":"markdown","7a06497e":"markdown"},"source":{"0c9bbca3":"# packages\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport folium\nfrom folium.plugins import HeatMap\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nfrom mlxtend.plotting import ecdf # empirical CDF plot\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5abd4873":"# read file\ndf = pd.read_csv('..\/input\/california-wildfire-incidents-20132020\/California_Fire_Incidents.csv')\ndf.head(10)","50efd8c5":"df.shape","1428687f":"# show all column names\ndf.columns","1f105453":"# counties (show top 10 only)\ndf.Counties.value_counts()[0:10]","45c2a47d":"plt.figure(figsize=(16,4))\ndf.Counties.value_counts()[0:20].plot(kind='bar')\nplt.title('Top 20 affected Counties')\nplt.grid()\nplt.show()","e8d14b81":"plt.figure(figsize=(16,4))\ndf.AdminUnit.value_counts()[0:20].plot(kind='bar')\nplt.title('Top 20 Admin Units')\nplt.grid()\nplt.show()","5c133b17":"# plot Acres Burned vs Year\nplt.figure(figsize=(16,4))\nplt.scatter(df.ArchiveYear, df.AcresBurned, color='blue', alpha=0.25)\nplt.xlabel('Archive Year')\nplt.ylabel('AcresBurned')\nplt.grid()\nplt.show()","17dd79d3":"# same data visualized as violin plot\nplt.figure(figsize=(16,4))\nsns.violinplot(x='ArchiveYear', y='AcresBurned', data=df)\nplt.grid()\nplt.title('Acres Burned vs Year')\nplt.show()","a4f9feea":"# log trafo\ndf['log10AcresBurned'] = np.log10(df.AcresBurned+0.1) # add 0.1 to avoid problems with log10(0)","4563015e":"# violin plot in log coordinates\nplt.figure(figsize=(16,4))\nsns.violinplot(x='ArchiveYear', y='log10AcresBurned', data=df)\nplt.grid()\nplt.title('Acres Burned vs Year (log scale)')\nplt.show()","b35bb7a7":"# acres burned - aggregate by year\nacres_sum = df.groupby(by='ArchiveYear').AcresBurned.sum()\nacres_sum","29cc03cf":"plt.scatter(acres_sum.index, acres_sum)\nplt.grid()\nplt.title('Acres Burned sum per year')\nplt.show()","b0273432":"# fatalities per year\nfatalities_sum = df.groupby(by='ArchiveYear').Fatalities.sum()\nfatalities_sum","8d293694":"plt.scatter(fatalities_sum.index, fatalities_sum)\nplt.grid()\nplt.title('Fatalities per year')\nplt.show()","aab227ff":"# crews involved (if not NaN)\ndf.CrewsInvolved.plot(kind='hist')\nplt.title('Crews Involved')\nplt.grid()\nplt.show()","fc35ece1":"# water tenders (if not NaN)\ndf.WaterTenders.plot(kind='hist')\nplt.title('Water Tenders')\nplt.grid()\nplt.show()","ebdc9ad2":"cond_statements = df.ConditionStatement[~df.ConditionStatement.isna()]\ncond_statements","88bdeaac":"stopwords = set(STOPWORDS)\n# add more context specific stopwords\nstopwords.update({'www','href','http','https'})","01b2525a":"# show wordcloud\ntext = \" \".join(txt for txt in cond_statements)\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","e1ee8b81":"search_keywords = df.SearchKeywords[~df.SearchKeywords.isna()]\nsearch_keywords","6e25564c":"stopwords = set(STOPWORDS)","b3c2f212":"# show wordcloud\ntext = \" \".join(txt for txt in search_keywords)\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","7dda1639":"# check coordinates; there are quite a few unrealistic ones\nplt.scatter(df.Longitude, df.Latitude)\nplt.grid()\nplt.show()","36f05bb6":"# remove those rows having unrealistic coordinates\ndf_select = df[df.Longitude<-115]\ndf_select = df_select[(df_select.Latitude<44) & (df_select.Latitude > 30)]\nplt.scatter(df_select.Longitude, df_select.Latitude)\nplt.grid()\nplt.show()","02943d5b":"# ok still one outlier in Nevada, let's get rid of that too\noutlier = df_select[df_select.CanonicalUrl=='\/incidents\/2013\/8\/6\/tram-fire\/']","9a973688":"print('Outlier Lon\/Lat:', outlier.Longitude, outlier.Latitude)","b29099a4":"df_select = df_select[df_select.CanonicalUrl!='\/incidents\/2013\/8\/6\/tram-fire\/']\nplt.scatter(df_select.Longitude, df_select.Latitude)\nplt.grid()\nplt.show()","5f815093":"# interactive map\nzoom_factor = 5 # inital map size\nradius_scaling = 50 # scaling of bubbles\n\nmy_map_1 = folium.Map(location=[36,-120], zoom_start=zoom_factor)\n\nfor i in range(0,df_select.shape[0]):\n   folium.Circle(\n      location=[df_select.iloc[i]['Latitude'], df_select.iloc[i]['Longitude']],\n      radius=np.sqrt(df_select.iloc[i]['AcresBurned'])*radius_scaling,\n      color='red',\n      popup='CanonicalUrl:' + df_select.iloc[i]['CanonicalUrl'] + ' - Year:' + str(int(df_select.iloc[i]['ArchiveYear'])) + ' - Acres Burned:' \n      + str(df_select.iloc[i]['AcresBurned']),\n      fill=True,\n      fill_color='red'\n   ).add_to(my_map_1)\n\nmy_map_1 # display","41709a09":"# use heatmap\nmy_map_2 = folium.Map(location=[36,-120], zoom_start=zoom_factor)\nHeatMap(data=df_select[['Latitude', 'Longitude']], radius=10).add_to(my_map_2)\n\nmy_map_2 # display","5a38ec23":"# select year 2018\ndf_select_2018 = df_select[df_select.ArchiveYear==2018]","24f3a386":"# interactive map\nzoom_factor = 5 # inital map size\nradius_scaling = 50 # scaling of bubbles\n\nmy_map_2 = folium.Map(location=[36,-120], zoom_start=zoom_factor)\n\nfor i in range(0,df_select_2018.shape[0]):\n   folium.Circle(\n      location=[df_select_2018.iloc[i]['Latitude'], df_select_2018.iloc[i]['Longitude']],\n      radius=np.sqrt(df_select_2018.iloc[i]['AcresBurned'])*radius_scaling,\n      color='red',\n      popup='CanonicalUrl:' + df_select_2018.iloc[i]['CanonicalUrl'] + ' - Year:' + str(int(df_select_2018.iloc[i]['ArchiveYear'])) + ' - Acres Burned:' \n      + str(df_select_2018.iloc[i]['AcresBurned']),\n      fill=True,\n      fill_color='red'\n   ).add_to(my_map_2)\n\nmy_map_2 # display","96f19e02":"ecdf(df_select_2018.AcresBurned)\nplt.grid()\nplt.title('2018 - Acres Burned')\nplt.show()","3cd64723":"ecdf(np.log10(df_select_2018.AcresBurned))\nplt.grid()\nplt.title('2018 - Acres Burned - Log Scale')\nplt.show()","285624fe":"### Evaluate Search Keywords","e718b06e":"### Evaluate Condition Statements","ea27a1cb":"# Geospatial Analytics","6a672f4d":"### Fatalities","4eb602b9":"# EDA","377805f3":"# California Wildfires 2013..2019 - EDA and interactive Maps","e00a64d9":"# Look at most severe year 2018","4b229eab":"### Other Features","7a06497e":"### Acres burned"}}