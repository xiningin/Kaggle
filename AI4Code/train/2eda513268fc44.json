{"cell_type":{"b3714411":"code","538b170d":"code","6598a2c2":"code","5ec1b5ba":"code","e10643ce":"code","bb661b9b":"code","c90ca5ab":"code","33db2138":"code","160eaead":"code","6a1d7306":"code","a5f29c52":"code","75a41b93":"code","99a14f95":"code","e33eac7e":"code","7dbb3e0c":"code","571b65fc":"code","a31f37dc":"code","5f692a32":"code","56094f3f":"code","5fcc8c24":"code","7f78d13b":"code","fea7f45d":"code","e18fb43d":"code","50087b85":"code","57ec0eba":"code","86d04186":"code","a08a9b79":"markdown","6def7f32":"markdown","25d5bd7f":"markdown","75d375fe":"markdown","519a701d":"markdown","b6b8c612":"markdown","c4c2139b":"markdown","340fda5a":"markdown","6f4e6828":"markdown","2892aa8e":"markdown"},"source":{"b3714411":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n\nfrom tensorflow import keras\nfrom keras.models import load_model,Sequential\nfrom keras.preprocessing.image import ImageDataGenerator as Imgen\nfrom keras.preprocessing import image\nfrom keras.layers import Conv2D,MaxPooling2D,Flatten,Dense,Dropout\n\nfrom PIL import Image\nfrom sklearn.metrics import classification_report,confusion_matrix","538b170d":"pip install split-folders","6598a2c2":"import splitfolders\nsplitfolders.ratio(\"..\/input\/weather-dataset\/Weather_Data\",output='Trian-test-Val',ratio=(0.8,0.1,0.1))","5ec1b5ba":"train_gen = Imgen(preprocessing_function=keras.applications.densenet.preprocess_input,\n                 zoom_range=0.2,\n                  shear_range=0.2,\n                  horizontal_flip=True\n                 )\n\nval_gen = Imgen(preprocessing_function=keras.applications.densenet.preprocess_input,\n                 zoom_range=0.2,\n                  shear_range=0.2,\n                  horizontal_flip=True\n                 )\n\ntest_gen = Imgen(preprocessing_function=keras.applications.densenet.preprocess_input\n                 )","e10643ce":"train_ds = train_gen.flow_from_directory(\".\/Trian-test-Val\/train\",\n                                       target_size=(150,150),\n                                        seed = 123,\n                                        batch_size=20\n                                       )\n\nval_ds = val_gen.flow_from_directory(\".\/Trian-test-Val\/val\",\n                                       target_size=(150,150),\n                                        seed = 123,\n                                        batch_size=20)\n\ntest_ds = test_gen.flow_from_directory(\".\/Trian-test-Val\/test\",\n                                       target_size=(150,150),\n                                        seed = 123,\n                                        batch_size=20,\n                                      shuffle=False\n                                      )","bb661b9b":"names = train_ds.class_indices\nclasses = list(names.keys())\nclasses","c90ca5ab":"x,y = next(train_ds)\nx.shape","33db2138":"#plot function\ndef plot_images(img,labels):\n    plt.figure(figsize=(15,10))\n    for i in range(16):\n        plt.subplot(4,4,i+1)\n        plt.imshow(img[i])\n        plt.title(classes[np.argmax(labels[i])])\n        plt.axis('off')","160eaead":"plot_images(x,y)","6a1d7306":"from keras.applications.densenet import DenseNet169","a5f29c52":"base_model = DenseNet169(include_top=False,\n                     weights='imagenet',\n                     input_shape=(150,150,3)\n                     )\nbase_model.trainable = False","75a41b93":"model = Sequential([\n    base_model,\n    \n    Flatten(),\n    \n    Dense(64,activation='relu'),\n    Dropout(0.5),\n    \n    Dense(4,activation='softmax')\n])\n\nmodel.summary()","99a14f95":"#compile \nmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","e33eac7e":"#callbacks\nmy_calls = [keras.callbacks.EarlyStopping(monitor='val_loss',patience=3),\n            keras.callbacks.ModelCheckpoint(\"Model.h5\",verbose=1,save_best_only=True)]","7dbb3e0c":"hist = model.fit(train_ds,epochs=25,validation_data=val_ds,callbacks=my_calls)","571b65fc":"model = load_model('.\/Model.h5')","a31f37dc":"model.evaluate(test_ds)","5f692a32":"plt.figure(figsize=(15,6))\n\nplt.subplot(1,2,1)\nplt.plot(hist.epoch,hist.history['accuracy'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_accuracy'],label = 'validation')\n\nplt.title(\"Accuracy\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.plot(hist.epoch,hist.history['loss'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_loss'],label = 'validation')\n\nplt.title(\"Loss\")\nplt.legend()\nplt.show()","56094f3f":"pred = model.predict(test_ds,verbose=1)","5fcc8c24":"pred = [np.argmax(i) for i in pred]\npred[:5]","7f78d13b":"y_test = test_ds.classes\ny_test","fea7f45d":"print(classification_report(pred,y_test))","e18fb43d":"plt.figure(figsize=(8,5))\nsns.heatmap(confusion_matrix(pred,y_test),annot=True,fmt='d',cmap = 'BuPu');","50087b85":"plt.imshow(Image.open('..\/input\/weather-dataset\/Weather_Data\/Rainy\/rain10.jpg'));","57ec0eba":"#preprocess file\ndef predict_img(path):\n    img = image.load_img(path,target_size=(150,150))\n    img_arr = image.img_to_array(img)\n    img_arr_expnd  = np.expand_dims(img_arr,axis=0)\n    img = keras.applications.densenet.preprocess_input(img_arr_expnd)\n    \n    pred = model.predict(img)\n    result = classes[np.argmax(pred)]\n    \n    return result","86d04186":"predict_img('..\/input\/weather-dataset\/Weather_Data\/Rainy\/rain10.jpg')","a08a9b79":"**Generating data**","6def7f32":"**Visuals**","25d5bd7f":"**Getting class names**","75d375fe":"**Loss and acuuracy**","519a701d":"**Train**","b6b8c612":"**Test**","c4c2139b":"**Visualizing some images**","340fda5a":"**Splitting into train test and val**","6f4e6828":"**Predictions**","2892aa8e":"**MODEL**"}}