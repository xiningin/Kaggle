{"cell_type":{"dfcbbcaa":"code","39986681":"code","10a472b0":"code","d0d549d4":"code","af461217":"markdown"},"source":{"dfcbbcaa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39986681":"# Load Data\ndf = pd.read_csv('..\/input\/nlp-tweet-sentiment-analysis\/bitcointweets.csv', header=None)\ndf = df[[1,7]]\ndf.columns = ['tweet','label']\ndf.head()","10a472b0":"from bokeh.io import output_notebook, show\nfrom bokeh.models import ColumnDataSource, Div, Slider, CustomJS\nfrom bokeh.layouts import Column\noutput_notebook() #create default state to generate the output","d0d549d4":"# To interact with data in Bokeh, we have to use ColumnDataSource\ncds = ColumnDataSource(df)\n\n# Create simple UI consisting of slider representing the tweet index + div objects to show the tweet text & label\nslider = Slider(title='Tweet Index', start=0, end=df.shape[0]-1, value=0)\ndiv_text = Div(text=\"Tweet Text:\", width=450, height=75)\ndiv_label = Div(text=\"Tweet Label:\", width=200, height=50)\n\n# Define a callback function for the slider\nslider_callback = CustomJS(args=dict(slider=slider, div_text=div_text, div_label=div_label, cds=cds), code='''\n    var tweet_text = cds.data['tweet'][slider.value];\n    var tweet_label = cds.data['label'][slider.value];\n    div_text.text = 'Tweet Text:<br>' + tweet_text;\n    div_label.text = 'Tweet Label:<br>' + tweet_label;\n''') \n\n# Attach the callback to the 'value' property of slider\nslider.js_on_change('value', slider_callback)\n\nlayout = Column(slider,div_text,div_label)\nshow(layout)","af461217":"## Interactive dashboard (using Bokeh) that shows the tweet text & label"}}