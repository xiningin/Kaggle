{"cell_type":{"18449507":"code","b0aba940":"code","a5d5d777":"code","eab91d72":"code","723acfea":"code","a50e3e55":"code","d29e9a5a":"code","c782c774":"code","3a8e6c73":"code","b06465ca":"code","fc2f56b3":"code","7f203926":"code","8ef2e783":"code","62775dad":"code","6e9b536c":"code","f11fdaa2":"code","c5bab4e4":"code","58985f1b":"code","16bc515c":"code","f60eae00":"code","a59a42aa":"code","3e06ff99":"code","2829fcdf":"code","f37784f1":"code","bf60d0ac":"code","81a1b371":"code","50320449":"code","616b2edf":"markdown","b093926c":"markdown","32876d93":"markdown","de76275e":"markdown","315136fd":"markdown","8941c48f":"markdown","12a61f9d":"markdown"},"source":{"18449507":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# data processing\/manipulation\npd.options.mode.chained_assignment = None\nimport re\n\n# data visualization\nimport matplotlib.pyplot as plt\nfrom os import path\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nimport plotly.express as px\n\n# stopwords, tokenizer, stemmer\nimport nltk  \nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\nfrom nltk.stem import PorterStemmer\nfrom nltk.probability import FreqDist\n\n# spell correction, lemmatization\nfrom textblob import TextBlob\nfrom textblob import Word\n\n# sklearn\nfrom sklearn.model_selection import train_test_split\n","b0aba940":"# olah dataset\ntrump_df = pd.read_csv('..\/input\/us-election-2020-tweets\/hashtag_donaldtrump.csv', lineterminator='\\n')\nbiden_df = pd.read_csv('..\/input\/us-election-2020-tweets\/hashtag_joebiden.csv', lineterminator='\\n')","a5d5d777":"trump_df.head(10)","eab91d72":"# Looking at the shape of trump_df (rows, columns)\ntrump_df.shape","723acfea":"# Getting some insights on trump_df dataset (with describe())\ntrump_df.describe()","a50e3e55":"# More insights on trump_dfset with info()\ntrump_df.info()","d29e9a5a":"biden_df.head(10)","c782c774":"# Looking at the shape of biden_df (rows, columns)\nbiden_df.shape","3a8e6c73":"# Getting some insights on biden_df dataset with describe()\nbiden_df.describe()","b06465ca":"# More insights on trump_dfset with info()\nbiden_df.info()","fc2f56b3":"# pembersihan data\ntrump_df = trump_df.drop(columns=['tweet_id','user_id','user_name','user_screen_name','user_description','user_join_date','collected_at'])\nbiden_df = biden_df.drop(columns=['tweet_id','user_id','user_name','user_screen_name','user_description','user_join_date','collected_at'])\n\n# pembagian kolom data\ntrump_df = trump_df.rename(columns={\"likes\": \"Likes\", \"retweet_count\": \"Retweets\", \n                                    \"state\": \"State\", \"user_followers_count\": \"Followers\"})\nbiden_df = biden_df.rename(columns={\"likes\": \"Likes\", \"retweet_count\": \"Retweets\", \n                                    \"state\": \"State\", \"user_followers_count\": \"Followers\"})\n\n# upload data nama kota\nd = {\"United States of America\":\"United States\"}\ntrump_df['country'].replace(d, inplace=True)\nbiden_df['country'].replace(d, inplace=True)\n\ntrump_df = trump_df.loc[trump_df['country'] == \"United States\"]\nbiden_df = biden_df.loc[biden_df['country'] == \"United States\"]\n\n# hapuskan garis null\ntrump_df = trump_df.dropna()\nbiden_df = biden_df.dropna()","7f203926":"to_remove = r'\\d+|http?\\S+|[^A-Za-z0-9]+'\nstop_words = set(stopwords.words('english'))\nps = PorterStemmer()\n\n# Function to preprocess tweet \ndef clean_tweet(tweet, stem=False, lemmatize=False):\n\n    # Make all text lowercase\n    tweet = tweet.lower()\n    \n    # Remove links, special characters, punctuation, numbers, etc.\n    tweet = re.sub(to_remove, ' ', tweet)\n        \n    filtered_tweet = []\n    words = word_tokenize(tweet) \n\n    # Remove stopwords and stem\n    for word in words:\n        if not word in stop_words:\n            if stem:\n                filtered_tweet.append(ps.stem(word))\n            elif lemmatize:\n                filtered_tweet.append(Word(word).lemmatize())\n            else:\n                filtered_tweet.append(word)\n            \n    return filtered_tweet","8ef2e783":"# Filtering all trump and biden tweets by applying cleantweet()\ntrump_df['tweetNew'] = trump_df.tweet.apply(lambda x: clean_tweet(x))\nbiden_df['tweetNew'] = biden_df.tweet.apply(lambda x: clean_tweet(x))","62775dad":"# Looking at 5 trump tweets after filtering\ntrump_df['tweetNew'].head()","6e9b536c":"# Looking at 5 trump tweets after filtering\nbiden_df['tweetNew'].head()","f11fdaa2":"# Function to perform sentitment analysis on trump and biden dataframes\ndef sentiment_analysis(df):\n    \n    # Determine polarity and subjectivity\n    df['Polarity'] = df['tweetNew'].apply(lambda x: TextBlob(' '.join(x)).sentiment.polarity)\n    df['Subjectivity'] = df['tweetNew'].apply(lambda x: TextBlob(' '.join(x)).sentiment.subjectivity)\n    \n    # Classify overall sentiment\n    df.loc[df.Polarity > 0,'Sentiment'] = 'positive'\n    df.loc[df.Polarity == 0,'Sentiment'] = 'neutral'\n    df.loc[df.Polarity < 0,'Sentiment'] = 'negative'\n    \n    return df[['tweet','tweetNew','Polarity','Subjectivity','Sentiment']].head()","c5bab4e4":"# Perform sentiment analysis on trump_df\nsentiment_analysis(trump_df)","58985f1b":"# Perform sentiment analysis on biden_df\nsentiment_analysis(biden_df)","16bc515c":"# Overall sentiment breakdown - Trump \nprint(\"Trump Tweet Sentiment Breakdown\")\n\ntrump_positive = len(trump_df.loc[trump_df.Sentiment=='positive'])\ntrump_neutral = len(trump_df.loc[trump_df.Sentiment=='neutral'])\ntrump_negative = len(trump_df.loc[trump_df.Sentiment=='negative'])\n\nprint(\"Number of Positive Tweets: \", trump_positive)\nprint(\"Number of Neutral Tweets: \", trump_neutral)\nprint(\"Number of Negative Tweets: \", trump_negative)\n\n# Graphing the number of trump tweets by sentiment\ndata_t = {'Positive':trump_positive,'Neutral':trump_neutral,'Negative':trump_negative}\nsentiment_t = list(data_t.keys()) \nnum_tweets_t = list(data_t.values()) \n\nplt.figure(figsize = (8, 5)) \n\nplt.bar(sentiment_t, num_tweets_t, color ='red', width = 0.5, edgecolor='black',) \n\nplt.xlabel(\"Sentiment\", fontweight ='bold') \nplt.ylabel(\"Number of Tweets\", fontweight ='bold') \nplt.title(\"Trump Tweets by Sentiment\", fontweight ='bold') \nplt.show() ","f60eae00":"# Overall sentiment breakdown - Biden \nprint(\"Biden Tweet Sentiment Breakdown\")\n\nbiden_positive = len(biden_df.loc[biden_df.Sentiment=='positive'])\nbiden_neutral = len(biden_df.loc[biden_df.Sentiment=='neutral'])\nbiden_negative = len(biden_df.loc[biden_df.Sentiment=='negative'])\n\nprint(\"Number of Positive Tweets: \", biden_positive)\nprint(\"Number of Neutral Tweets: \", biden_neutral)\nprint(\"Number of Negative Tweets: \", biden_negative)\n\n# Graphing the number of biden tweets by sentiment\ndata_b = {'Positive':biden_positive,'Neutral':biden_neutral,'Negative':biden_negative}\nsentiment_b = list(data_b.keys()) \nnum_tweets_b = list(data_b.values()) \n\nplt.figure(figsize = (8, 5)) \n\nplt.bar(sentiment_b, num_tweets_b, color ='blue', width = 0.5, edgecolor='black') \n\nplt.xlabel(\"Sentiment\", fontweight ='bold') \nplt.ylabel(\"Number of Tweets\", fontweight ='bold') \nplt.title(\"Biden Tweets by Sentiment\", fontweight ='bold') \nplt.show() ","a59a42aa":"# Calculate relative percentages by sentiment - Trump\ntotal_tweets_t = len(trump_df.Sentiment)\nprop_tweets_t = list(map(lambda x: round(x\/total_tweets_t,2), num_tweets_t))\n\n# Calculate relative percentages by sentiment - Biden\ntotal_tweets_b = len(biden_df.Sentiment)\nprop_tweets_b = list(map(lambda x: round(x\/total_tweets_b,2), num_tweets_b))\n\n# Graphing relative percentages of both trump and biden tweets\nbar_width = 0.25\nplt.subplots(figsize=(8,8))\n\nbr1 = np.arange(3) \nbr2 = [x + bar_width for x in br1] \n\nt = plt.bar(br1, prop_tweets_t, color ='r', width = bar_width, \n            edgecolor ='black', label ='Trump') \nb = plt.bar(br2, prop_tweets_b, color ='b', width = bar_width, \n            edgecolor ='black', label ='Biden') \n   \nplt.xlabel('Sentiment',fontweight ='bold') \nplt.ylabel('Percentage of Tweets',fontweight ='bold') \nplt.xticks([r + bar_width\/2 for r in range(3)],['Positive','Neutral','Negative'])\nplt.legend([t,b],['Percentage of Trump Tweets','Percentage of Biden Tweets'])\nplt.ylim(0.0, 1.0)\nplt.title('Proportions of Tweets By Sentiment',fontweight ='bold')\n\nplt.show()","3e06ff99":"# Function to return a string of all words in all tweets\ndef get_all_tweets(df,by_sentiment=False,sentiment=\"positive\"):\n    words = ' '.join(df['tweetNew'].apply(lambda x: ' '.join(x)))\n    return words","2829fcdf":"# Create word strings\nwords_trump = get_all_tweets(trump_df)\nwords_biden = get_all_tweets(biden_df)\n\n# Tokenize word strings\ntokens_trump = word_tokenize(words_trump)\ntokens_biden = word_tokenize(words_biden)\n\n# Function to generate word cloud\ndef create_wordcloud(words):\n    \n    # create wordcloud\n    wordcloud = WordCloud(max_font_size=200, max_words=200, \n                          background_color=\"white\").generate(words)\n\n    # display the generated image\n    plt.figure(1,figsize=(13, 13))\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.show()","f37784f1":"# Generate word cloud of trump tweets\ncreate_wordcloud(words_trump)","bf60d0ac":"# Generate word cloud of biden tweets\ncreate_wordcloud(words_biden)","81a1b371":"# Average polarity by state (trump)\ntrump_state_polarity = trump_df.groupby(\"State\",as_index=False).mean()\n\nfig = px.bar(trump_state_polarity, x=\"State\", y=\"Polarity\",\n            title=\"<b>Average Polarity of Trump-Related Tweets by State<\/b>\")\nfig.update_traces(marker=dict(color=\"red\"),selector=dict(type=\"bar\"),\n                  marker_line_color='black', marker_line_width=0.8, opacity=0.6)\nfig.show()","50320449":"# Average polarity by state - Biden\nbiden_state_polarity = biden_df.groupby(\"State\",as_index=False).mean()\n\nfig = px.bar(biden_state_polarity, x=\"State\", y=\"Polarity\",\n            title=\"<b>Average Polarity of Biden-Related Tweets by State<\/b>\")\nfig.update_traces(marker=dict(color=\"blue\"),selector=dict(type=\"bar\"),\n                  marker_line_color='black', marker_line_width=0.8, opacity=0.6)\nfig.show()","616b2edf":"# **Biden Tweets Data**","b093926c":"# Number of tweets by sentiment","32876d93":"# **Preprocessing Tweets**","de76275e":"# **Word Cloud Set**","315136fd":"# **Data Visualization**","8941c48f":"# **Trump Tweets Data**","12a61f9d":"# **Sentimen Analysis**"}}