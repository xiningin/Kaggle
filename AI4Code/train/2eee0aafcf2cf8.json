{"cell_type":{"2bdf23fc":"code","83c1ac48":"code","8b83c5c0":"code","567531d0":"markdown","2eda7d97":"markdown","08281e23":"markdown"},"source":{"2bdf23fc":"# imports \nimport numpy as np\nimport pandas as pd \nimport random,os\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom catboost import CatBoostRegressor\n\n#variables \nTRAIN_PATH = \"..\/input\/widsdatathon2022\/train.csv\"\nTEST_PATH = \"..\/input\/widsdatathon2022\/test.csv\"\nSAMPLE_SUBMISSION_PATH = \"..\/input\/widsdatathon2022\/sample_solution.csv\"\nSUBMISSION_PATH = \"submission.csv\"\n\nID = \"id\"\nTARGET = \"site_eui\"\n\nTEST_SIZE = 0.2\n\nSEED = 2022\ndef seed_everything(seed=SEED):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n\nseed_everything()\n\nMODEL_MAX_DEPTH = 12\nMODEL_TASK_TYPE = 'GPU'\nMODEL_RL = 0.025\nMODEL_EVAL_METRIC ='RMSE'\nMODEL_LOSS_FUNCTION = 'RMSE'\nMODEL_ESR = 10\nMODEL_VERBOSE = 1000\nMODEL_ITERATIONS = 28000\n \n#load\ntrain = pd.read_csv(TRAIN_PATH)\ntest = pd.read_csv(TEST_PATH)\n\n#preprocess\nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \nfor col in str_list:\n    encoder = LabelEncoder()\n    encoder.fit(train[col])\n    train[col] = encoder.transform(train[col])\n\n    for label in np.unique(test[col]):\n        if label not in encoder.classes_: \n            encoder.classes_ = np.append(encoder.classes_, label) \n    test[col] = encoder.transform(test[col])","83c1ac48":"X = train.drop([ID,TARGET],axis =1)\ny = train[TARGET]\n\nmodel = CatBoostRegressor(\n    verbose=MODEL_VERBOSE,\n    early_stopping_rounds=MODEL_ESR,\n    random_seed=SEED,\n    max_depth=MODEL_MAX_DEPTH,\n    task_type=MODEL_TASK_TYPE,\n    learning_rate=MODEL_RL,\n    iterations=MODEL_ITERATIONS,\n    loss_function=MODEL_LOSS_FUNCTION,\n    eval_metric= MODEL_EVAL_METRIC\n)\nmodel.fit(X, y)","8b83c5c0":"X_test = test.drop([ID],axis=1)\npred_test = model.predict(X_test)\n\nsub = pd.read_csv(SAMPLE_SUBMISSION_PATH)\nsub[TARGET] = pred_test\nsub.to_csv(SUBMISSION_PATH,index=False)\nsub.head()","567531d0":"# After building model\n### predict & submit","2eda7d97":"# Before building model\n### imports & variables & load & preprocess","08281e23":"# Build model"}}