{"cell_type":{"85993f95":"code","13840f19":"code","00c57d3b":"code","31ee1e63":"code","a4211124":"code","919f8592":"code","3f9cc290":"code","d9dd10ae":"code","137de223":"code","87e76c2f":"code","8f3c77b2":"code","ee735b0f":"code","560c4bc7":"code","5b35c6e3":"code","bd440bba":"code","c076d636":"code","c87a70ad":"code","4b9bbec4":"code","65c03ed2":"code","f6a6c2ec":"code","a1312061":"code","1dcd309b":"code","f273c4f0":"code","6771b87f":"code","722c24d3":"markdown","20e5517b":"markdown","96fcbb4a":"markdown","c69a3dad":"markdown","19175bd8":"markdown","28975e56":"markdown","1ce451af":"markdown","e9d0ad41":"markdown","bb435f5d":"markdown","f5a143fe":"markdown","47cd568d":"markdown","b6f1a240":"markdown","37e88978":"markdown","4c2476b7":"markdown","d1971bf9":"markdown","58539a14":"markdown","e814e512":"markdown","0d71598d":"markdown","3b2be8d4":"markdown","b1d5b99c":"markdown","73fd6833":"markdown"},"source":{"85993f95":"import pandas as pd\niris = pd.read_csv(\"..\/input\/iris\/Iris.csv\") \niris.head()","13840f19":"iris.info()","00c57d3b":"iris.describe()","31ee1e63":"iris[\"Species\"].value_counts()","a4211124":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.FacetGrid(iris, hue=\"Species\", height=5) \\\n   .map(plt.scatter, \"SepalLengthCm\", \"SepalWidthCm\") \\\n   .add_legend()","919f8592":"fig = iris[iris.Species=='Iris-setosa'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\" Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","3f9cc290":"sns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=iris)","d9dd10ae":"sns.pairplot(iris.drop(\"Id\", axis=1), hue=\"Species\", height=3)","137de223":"iris.drop(\"Id\", axis=1).boxplot(by=\"Species\", figsize=(12, 6))","87e76c2f":"ax=plt.subplots(1,1,figsize=(10,8))\niris['Species'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"Iris Species %\")\nplt.show()","8f3c77b2":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier","ee735b0f":"plt.figure(figsize=(7,4)) \nsns.heatmap(iris.drop(\"Id\", axis = 1).corr(),annot=True,cmap='cubehelix_r')\nplt.show()","560c4bc7":"train, test = train_test_split(iris, test_size = 0.25)\nprint(train.shape)\nprint(test.shape)","5b35c6e3":"train_X = train[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ntrain_y=train.Species\ntest_X= test[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ntest_y =test.Species","bd440bba":"train_X.head(5)","c076d636":"test_y.head(5)\n#print(test_y[\"Species\"].unique())","c87a70ad":"model = svm.SVC()\nmodel.fit(train_X,train_y) \nprediction=model.predict(test_X) \nprint('The accuracy of the SVM is:',metrics.accuracy_score(prediction,test_y))","4b9bbec4":"model = LogisticRegression()\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the Logistic Regression is',metrics.accuracy_score(prediction,test_y))","65c03ed2":"model=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the KNN is',metrics.accuracy_score(prediction,test_y))","f6a6c2ec":"from keras.models import Sequential \nfrom keras.layers import Dense,Activation,Dropout \nfrom keras.layers.normalization import BatchNormalization \nfrom keras.utils import np_utils","a1312061":"model=Sequential()\nmodel.add(Dense(1000,input_dim=4,activation='relu'))\nmodel.add(Dense(500,activation='relu'))\nmodel.add(Dense(300,activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(3,activation='softmax'))\nmodel.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])","1dcd309b":"model.summary()","f273c4f0":"# y_train=np_utils.to_categorical(train_y,num_classes=3)\n# y_test=np_utils.to_categorical(test_y,num_classes=3)","6771b87f":"#model.fit(train_X,train_y,validation_data=(test_X,test_y),batch_size=20,epochs=10,verbose=1)","722c24d3":"**6. Box plots for both spepal and petal dimensions**","20e5517b":"****2. Plot for showing the clusters of all three classes based on petal dimensions****","96fcbb4a":"**Checking model summary**","c69a3dad":"**Building the model architecture**","19175bd8":"# Model Implementation\n**1.  Importing different models**","28975e56":"# ****Work in progress, upvote if you like the notebook!****","1ce451af":"**7.  Pie chart showing the frequency distribution of all the classes**","e9d0ad41":"# Deep Learning Models:\n# 1. ANN:","bb435f5d":"**Seaching for null values**","f5a143fe":"****Checking the frequency of all the classes****","47cd568d":"****3.  Sklearn train-test split****","b6f1a240":"****5.  Pair Plots showing relationship between all the features in the dataset****","37e88978":"****1. Plot showing clusters of all the three classes based on sepal dimensions****","4c2476b7":"****2.  Checking the corellation between all the features****","d1971bf9":"# 2.  Logistic Regression","58539a14":"# **3.  KNN:**","e814e512":"# **Reading the dataset using pandas**","0d71598d":"# 1.  SVM :","3b2be8d4":"**Checking details about the dataset**","b1d5b99c":"**3. Box Plot for checking outliners based on petal length**","73fd6833":"# **Data Visualization**"}}