{"cell_type":{"226be2a2":"code","ea0ddd51":"code","047d8a37":"code","9fd0699f":"code","dc5b6cd1":"code","4d026792":"code","c4841caf":"code","cc4f6446":"code","eadb7508":"code","e30520cf":"code","cbbeb38a":"code","0f2c8264":"code","db6efbd9":"code","91c3ec56":"code","8ebd2f66":"code","9bf0da13":"code","9c8f9d91":"code","f642d275":"code","f2f4c48a":"code","3129691f":"code","94334a94":"code","142aaefe":"code","0684b9e4":"code","4020d636":"code","44b00ed5":"code","42c6a40d":"code","58c39ccb":"code","1edc3462":"code","88301e83":"code","91712444":"code","60f216ac":"code","f1e80dc4":"code","0ee08169":"code","7379d26a":"code","406d4476":"code","17ca6e88":"code","00ac9c3b":"code","91e9a329":"code","ed813eed":"code","8015392f":"code","9d59e300":"code","382b7ac1":"code","3644ce05":"code","e64f2600":"code","82a1f94d":"code","b2ec8ac9":"code","17726d32":"code","6bc14242":"code","7de136f3":"code","f43205fa":"code","23adf12c":"code","c60a24a1":"code","b6987b3f":"code","1a4d9123":"code","203a1167":"code","01e475a7":"code","6babd21d":"code","f4428e2e":"code","3d5e5224":"code","df1797f6":"code","1b4e8abf":"code","4765a40d":"code","344f72da":"code","5a998860":"code","7835637e":"code","d2e32382":"code","383d3fe0":"code","fb8e2032":"code","419073b7":"code","67e810c8":"code","c60c2cc0":"code","93fab978":"code","b12bab09":"code","ebc4471b":"code","672fea92":"code","b055ce25":"code","7246f6d1":"code","1037a8f0":"code","c42b08ee":"code","4696102c":"code","1551d084":"code","16ee5cef":"code","cddd8753":"code","f2ffc445":"code","f6525b78":"code","2d6aa700":"code","d71cbd4f":"code","1aa3ad55":"code","2a64b1f1":"code","25de566e":"code","e80950c1":"code","a9707aa4":"code","c1d3a5cb":"code","9cb1989a":"code","86e9dbd9":"code","2c66479d":"code","a9366b3a":"code","5333dc35":"code","0ca184cf":"code","0ca436b4":"code","cdfab921":"code","25c3fba4":"code","9f1641cb":"code","1a4688fb":"markdown","44845d40":"markdown","bddb77c8":"markdown","1c7a007d":"markdown","52a9ed94":"markdown","6ee9e26a":"markdown","8e7de02d":"markdown","9591c40e":"markdown","4e3f260a":"markdown","733e421a":"markdown","542a7af1":"markdown","0be83378":"markdown","3746bfe9":"markdown","cf246981":"markdown","0ec6e7a9":"markdown","60df6f31":"markdown","d86c84dc":"markdown","c9fcf48d":"markdown","98fc7e61":"markdown","b9b5c461":"markdown","d07eebdf":"markdown","b5c4cd85":"markdown","b319d2b8":"markdown","b457f765":"markdown","2e2b41a0":"markdown","34206edc":"markdown","a1b4cbf7":"markdown","cebe419c":"markdown","06324bb8":"markdown","b3dfa684":"markdown","f306d679":"markdown","4064f13a":"markdown","7731c86b":"markdown","7135605a":"markdown","4b691fca":"markdown","8bd46300":"markdown"},"source":{"226be2a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ea0ddd51":"train_data = pd.read_csv(\"\/kaggle\/input\/fmcgfast-moving-consumer-goods\/train1.csv\")","047d8a37":"test_data = pd.read_csv(\"\/kaggle\/input\/fmcgfast-moving-consumer-goods\/test1.csv\")","9fd0699f":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import skew, kurtosis, norm\nfrom scipy import stats\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n","dc5b6cd1":"\ntrain_data.head(10) \n","4d026792":"train_data = train_data.loc[:, ~train_data.columns.str.contains('^Unnamed')]","c4841caf":"print(train_data.keys())","cc4f6446":"\ntrain_data.dtypes #datatype of colunms in train data\n","eadb7508":"train_data['PROD_CD'] = train_data['PROD_CD'].str.replace(r'\\D', '').astype(int)\n","e30520cf":"train_data['SLSMAN_CD'] = train_data['SLSMAN_CD'].str.replace(r'\\D', '').astype(int)","cbbeb38a":"train_data['TARGET_IN_EA'] = train_data['TARGET_IN_EA'].str.replace(r'\\D', '').astype(int)","0f2c8264":"train_data['ACH_IN_EA'] = train_data['ACH_IN_EA'].str.replace(r'\\D', '').astype(int)","db6efbd9":"train_data.dtypes","91c3ec56":"test_data.dtypes","8ebd2f66":"test_data = test_data.loc[:, ~test_data.columns.str.contains('^Unnamed')]","9bf0da13":"corr=train_data.corr()\nsns.heatmap(corr,annot=True)","9c8f9d91":"corr","f642d275":"train_data.groupby(['SLSMAN_CD','PLAN_MONTH'])['SLSMAN_CD'].count()","f2f4c48a":"train_data.groupby(['PROD_CD','PLAN_MONTH'])['PROD_CD'].count()","3129691f":"train_data.groupby(['SLSMAN_CD','PLAN_MONTH','PLAN_YEAR'])['SLSMAN_CD'].count()","94334a94":"np.std(train_data) ","142aaefe":"np.var(train_data)","0684b9e4":"skew(train_data)","4020d636":"kurtosis(train_data)","44b00ed5":"plt.hist(train_data['PROD_CD']);plt.title('Histogram of PROD_CD'); plt.xlabel('PROD_CD'); plt.ylabel('Frequency')","42c6a40d":"plt.hist(train_data['SLSMAN_CD'], color = 'coral');plt.title('Histogram of SLSMAN_CD'); plt.xlabel('SLSMAN_CD'); plt.ylabel('Frequency')","58c39ccb":"plt.hist(train_data['TARGET_IN_EA'], color= 'brown');plt.title('Histogram of TARGET_IN_EA'); plt.xlabel('TARGET_IN_EA'); plt.ylabel('Frequency')","1edc3462":"plt.hist(train_data['ACH_IN_EA'], color = 'violet');plt.title('Histogram of ACH_IN_EA'); plt.xlabel('ACH_IN_EA'); plt.ylabel('Frequency')","88301e83":"sns.boxplot(train_data[\"PROD_CD\"])","91712444":"sns.boxplot(train_data[\"SLSMAN_CD\"])","60f216ac":"sns.boxplot(train_data[\"PLAN_MONTH\"])","f1e80dc4":"sns.boxplot(train_data[\"TARGET_IN_EA\"])","0ee08169":"sns.scatterplot(x='PROD_CD', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & PROD_CD')","7379d26a":"sns.scatterplot(x='SLSMAN_CD', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & SLSMAN_CD')","406d4476":"sns.scatterplot(x='PLAN_MONTH', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & PLAN_MONTH')","17ca6e88":"sns.scatterplot(x='PLAN_YEAR', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & PLAN_YEAR')","00ac9c3b":"sns.scatterplot(x='TARGET_IN_EA', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & TARGET_IN_EA')","91e9a329":"sns.countplot(train_data[\"PROD_CD\"])","ed813eed":"sns.countplot(train_data[\"SLSMAN_CD\"])\n","8015392f":"sns.countplot(train_data[\"PLAN_MONTH\"])\n","9d59e300":"sns.countplot(train_data[\"PLAN_YEAR\"])\n","382b7ac1":"train_data.PROD_CD.unique()               \n","3644ce05":"train_data.PROD_CD.value_counts()                    ","e64f2600":"train_data.SLSMAN_CD.unique()","82a1f94d":"train_data.SLSMAN_CD.value_counts()","b2ec8ac9":"train_data.PLAN_YEAR.unique()","17726d32":"train_data.PLAN_YEAR.value_counts()","6bc14242":"train_data.PLAN_MONTH.unique()","7de136f3":"train_data.PLAN_MONTH.value_counts()","f43205fa":"train_data.TARGET_IN_EA.unique()","23adf12c":"train_data.TARGET_IN_EA.value_counts()","c60a24a1":"train_data.ACH_IN_EA.unique()","b6987b3f":"train_data.ACH_IN_EA.value_counts()","1a4d9123":"train_data.plot(x=\"ACH_IN_EA\",y=\"SLSMAN_CD\")","203a1167":"train_data.plot(x=\"TARGET_IN_EA\",y=\"SLSMAN_CD\")","01e475a7":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['PROD_CD','PLAN_MONTH']).count()['ACH_IN_EA'].unstack().plot(ax=ax)","6babd21d":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['SLSMAN_CD','PLAN_MONTH'])['ACH_IN_EA'].count().unstack().plot(ax=ax)","f4428e2e":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['PROD_CD','PLAN_MONTH']).count()['TARGET_IN_EA'].unstack().plot(ax=ax)","3d5e5224":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['SLSMAN_CD','PLAN_MONTH'])['TARGET_IN_EA'].count().unstack().plot(ax=ax)","df1797f6":"pd.crosstab(train_data.PROD_CD,train_data.PLAN_MONTH).plot(kind=\"bar\")\n","1b4e8abf":"pd.crosstab(train_data.PROD_CD,train_data.PLAN_YEAR).plot(kind=\"bar\")\n","4765a40d":"pd.crosstab(train_data.SLSMAN_CD,train_data.PLAN_MONTH).plot(kind=\"bar\")\n","344f72da":"pd.crosstab(train_data.SLSMAN_CD,train_data.PLAN_YEAR).plot(kind=\"bar\")","5a998860":"sns.distplot(train_data['PROD_CD'], fit=norm, kde=False)","7835637e":"sns.distplot(train_data['SLSMAN_CD'], fit=norm, kde=False, color = 'coral')","d2e32382":"sns.distplot(train_data['PLAN_MONTH'], fit=norm, kde=False, color = 'skyblue')","383d3fe0":"sns.distplot(train_data['PLAN_YEAR'], fit=norm, kde=False, color = 'orange')\n","fb8e2032":"sns.distplot(train_data['TARGET_IN_EA'], fit=norm, kde=False, color = 'brown')\n","419073b7":"sns.kdeplot(train_data['TARGET_IN_EA'],shade = True, bw = .5, color = \"red\")","67e810c8":"import seaborn as sns","c60c2cc0":"train_data[\"ACH_IN_EA\"].describe()","93fab978":"sns.kdeplot(train_data['ACH_IN_EA'],shade = True, bw = .5, color = \"BLUE\")","b12bab09":"sns.violinplot(y=train_data['PROD_CD'],x=train_data['PLAN_MONTH'])","ebc4471b":"sns.violinplot(y=train_data['SLSMAN_CD'],x=train_data['PLAN_MONTH'])","672fea92":"sns.violinplot(y=train_data['TARGET_IN_EA'],x=train_data['PLAN_MONTH'])","b055ce25":"sns.violinplot(y=train_data['ACH_IN_EA'],x=train_data['PLAN_MONTH'])","7246f6d1":"target=list(train_data.TARGET_IN_EA)","1037a8f0":"achiv=list(train_data.ACH_IN_EA)","c42b08ee":"yn=[]     ","4696102c":"for x in range(22646):\n    if(target[x]<=achiv[x]):\n        yn.append(1)\n    else:\n        yn.append(0)\n","1551d084":"train_data['result'] = yn","16ee5cef":"pd.crosstab(train_data.result,train_data.PLAN_YEAR).plot(kind=\"bar\")","cddd8753":"pd.crosstab(train_data.result,train_data.PLAN_MONTH).plot(kind=\"bar\")\n","f2ffc445":"prod = np.array(train_data['PROD_CD'])","f6525b78":"salesman = np.array(train_data['SLSMAN_CD'])","2d6aa700":"month = np.array(train_data['PLAN_MONTH'])","d71cbd4f":"year = np.array(train_data['PLAN_YEAR'])","1aa3ad55":"target = np.array(train_data['TARGET_IN_EA'])","2a64b1f1":"achieved = np.array(train_data['ACH_IN_EA'])","25de566e":"x_ach = np.linspace(np.min(achieved), np.max(achieved))","e80950c1":"y_ach = stats.norm.pdf(x_ach, np.mean(x_ach), np.std(x_ach))","a9707aa4":"plt.plot(x_ach, y_ach,); plt.xlim(np.min(x_ach), np.max(x_ach));plt.xlabel('achieved');plt.ylabel('Probability');plt.title('Normal Probability Distribution of achieved')","c1d3a5cb":"x_prod = np.linspace(np.min(prod), np.max(prod))","9cb1989a":"y_prod = stats.norm.pdf(x_prod, np.mean(x_prod), np.std(x_prod))","86e9dbd9":"plt.plot(x_prod, y_prod, color = 'coral'); plt.xlim(np.min(x_prod), np.max(x_prod));plt.xlabel('prod_cd');plt.ylabel('Probability');plt.title('Normal Probability Distribution of prod_cd')","2c66479d":"x_sale = np.linspace(np.min(salesman), np.max(salesman))\ny_sale = stats.norm.pdf(x_sale, np.mean(x_sale), np.std(x_sale))\nplt.plot(x_sale, y_sale, color = 'coral'); plt.xlim(np.min(x_sale), np.max(x_prod));plt.xlabel('Sale_cd');plt.ylabel('Probability');plt.title('Normal Probability Distribution of sales_cd')","a9366b3a":"x_target = np.linspace(np.min(target), np.max(target))\ny_target = stats.norm.pdf(x_target, np.mean(x_target), np.std(x_target))\nplt.plot(x_target, y_target, color = 'coral'); plt.xlim(np.min(x_target), np.max(x_target));plt.xlabel('target');plt.ylabel('Probability');plt.title('Normal Probability Distribution of target')","5333dc35":"train_data['PLAN_MONTH'].value_counts().head(10).plot.pie()\ntrain_data['PLAN_YEAR'].value_counts().head(10).plot.pie()\nplt.gca().set_aspect('equal')","0ca184cf":"X = train_data.iloc[:,:6]  #independent columns\ny = train_data.iloc[:,-1]    #target column i.e price range","0ca436b4":"bestfeatures = SelectKBest(score_func=chi2, k=5)\nfit = bestfeatures.fit(X,y)","cdfab921":"dfscores = pd.DataFrame(fit.scores_)\ndfcolumns = pd.DataFrame(X.columns)","25c3fba4":" \nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['imp','importance']  #naming the dataframe columns","9f1641cb":"featureScores","1a4688fb":"# salesman_code\n","44845d40":"HERE IT SHOWING HOW MUCH TARGETS ARE ACHIEVED OR NOT ACHIEVED","bddb77c8":"#ANALYIZING MORE INSGHTS\n","1c7a007d":"UNIQUE VALUES and COUNTS\n","52a9ed94":"BOXPLOT\n\n\n\n\n\n","6ee9e26a":"droping ['id'] column from train data","8e7de02d":"VISIUALIZING DISTRIBUTION OF DATA ACCORDING TO THE MONTH","9591c40e":"we can finally plot the targets and acheivements  made for each salesman and products for each month:","4e3f260a":"GROUPBY IS USED FOR GRUOPING OF PARTICULAR PARAMETERS TO GET INSIGHTS OF PRODUCT AND SALESMAN DATA ACCORDING TO THEIR FREQUENCY IN A PERTICULAR MONTH AND YEAR \n","733e421a":"# Unsquish the pie.\n","542a7af1":"concat two dataframes for better visualization","0be83378":"GETTING EXACTLY WHERE SALES MA COMPLETED THEIR TARGET OR ACHIEVED THE TARGET OF EVERY PRODUCT IN DATASET ","3746bfe9":"HISTOGRAM\n","cf246981":"VISUALISATION OF DENSITY DISTRIBUTION OF TARGETS AND ACHEIVEMENT AND COMPARIOSION BETWEEN THEM","0ec6e7a9":"# KURTOSIS\n ","60df6f31":"SCATTERPLOT","d86c84dc":"# target\n","c9fcf48d":"# ACHIEVED","98fc7e61":"# Normal Probability distribution \nAs we know data is not normally Distributed so we can process and form the Normal Probability Distribution of data column wise.\n\n\n","b9b5c461":"#ENCODING  (using this we have remove string part and kept integer in following colunms for EDA and better insights )","d07eebdf":"CHECK FOR CORRELATION","b5c4cd85":"['PROD_CD', 'SLSMAN_CD', 'PLAN_MONTH', 'PLAN_YEAR', 'TARGET_IN_EA','ACH_IN_EA']\nare the columns name in train data","b319d2b8":"#distribution plot\n","b457f765":"By all the plots and graphs we have come to conclusion that highest achivement is 232,000 \nby saleman code i.e SLSMAN_CD 94 in month of november 2019 product_CD 31 \n","2e2b41a0":"#By distribution plot we can see how much our data is normally distributed","34206edc":"#VARIANCE\n","a1b4cbf7":"STANDARD DEVIATION\n","cebe419c":"HERE IS SOME INSIGHTS ABOUT HOW MUCH SALESMAN'S TARGETS AND ACHIEVEMENTS","06324bb8":"#apply SelectKBest class to extract top 10 best features\n","b3dfa684":"importing required libraries","f306d679":"By using feature selection we get the importance of particular column in data.\nso by feature selection we get that product_CD and Achivement is having more importance respectively followed by target\ncolumn and column with very less importance can be drop.\n\n","4064f13a":"getting the discriptive information about the train data","7731c86b":"# Product_code","7135605a":"COUNTPLOT","4b691fca":"#GETTING THE ACCURING FREQUENCY OF EACH PRODUCTS AND SALESMAN IN BAR CHART FOR EACH MONTH AND YEAR ","8bd46300":"by heatmap we can see that target and achivement have good correlation that is 0.719321\nand month and year do not have good correlation that is -0.98"}}