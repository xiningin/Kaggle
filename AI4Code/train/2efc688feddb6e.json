{"cell_type":{"f30a5362":"code","b30638d4":"code","5a05480f":"code","47c0749d":"code","1d450df8":"code","fd80279b":"code","bce71c0f":"code","4eeceaee":"code","f782b414":"code","50bc7931":"code","c5ac7728":"code","7d695525":"code","27ef7fa8":"code","61a46f11":"code","9bde86af":"markdown","a11521af":"markdown","4893645e":"markdown","260746a6":"markdown","f1a4b3e7":"markdown","a314b149":"markdown","92c155a8":"markdown","cfda684c":"markdown"},"source":{"f30a5362":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\n\nplt.rcParams.update({'figure.figsize':(9,7), 'figure.dpi':120})\nsns.set_style(\"dark\")\nsns.set()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b30638d4":"#Load the data and a quick view\ndef adjustformat(x):\n    if '1\/31\/2020' in x:\n        return '2020-31-01 ' + x.split()[1] + \":00\"\n    else:\n        return x\n    \ncorona_df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\")\ncorona_df1 = corona_df[:497]\ncorona_df1['Date'] = pd.to_datetime(corona_df1['Date'])\ncorona_df2 = corona_df[497:]\ncorona_df2['Date'] = corona_df2['Date'].apply(lambda x: adjustformat(x))\ncorona_df2['Date'] = pd.to_datetime(corona_df2['Date'],format = '%Y-%d-%m %H:%M:%S')\n# corona_df2.head()\ncorona_df = corona_df1.append(corona_df2)\ncorona_df.head()","5a05480f":"#convert the Last update column to datetime\ncorona_df['Date'] = pd.to_datetime(corona_df['Date'])","47c0749d":"#Quick check on data distribution\ncorona_df.info()","1d450df8":"#Lets do one more check\ncorona_df[(corona_df.Confirmed == 0) & (corona_df.Deaths == 0) & (corona_df.Recovered ==0)]","fd80279b":"#Lets add day count to look at the trend\nstart_date = corona_df.sort_values(['Date'], ascending=[True]).head(1).values[0][1]\nprint(start_date)\n#start_date = corona_df['Last Update'].min()\ncorona_df['nthday'] = corona_df['Date'].apply(lambda x: ((x - start_date).days)+1)\ncurrent_day = corona_df['nthday'].max()","bce71c0f":"#Checking how to take the counts.\ncorona_df['Confirmed'].sum()","4eeceaee":"corona_df[corona_df.nthday == current_day]['Confirmed'].sum()","f782b414":"#Lets quickly plot the trend.\ncorona_df.groupby(['nthday'])['Confirmed'].sum().plot()","50bc7931":"#death rate vs recovery rate\ndr_rate = corona_df.groupby(['nthday'])['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\ndr_rate['Deathrate'] = (dr_rate['Deaths'] \/ dr_rate['Confirmed'])*100\ndr_rate['Recoveryrate'] = (dr_rate['Recovered'] \/ dr_rate['Confirmed'])*100\n\nsns.lineplot(x='nthday', y='Deathrate', data=dr_rate, label=\"Death\", color='red')\nsns.lineplot(x='nthday', y='Recoveryrate', data=dr_rate, label=\"Recovery\", color='green')","c5ac7728":"#No of countries affected so far\ncorona_df[corona_df.nthday == current_day].groupby(['Country'])['Confirmed', 'Deaths','Recovered' ].sum().sort_values(['Confirmed'], ascending=[False])","7d695525":"#Lets see the country spread by the day\ncorona_df.groupby(['Country']).agg({'nthday' : 'min'}).reset_index().sort_values(['nthday'])","27ef7fa8":"#\ncorona_df.groupby(['nthday'])['Country'].nunique().plot()","61a46f11":"corona_df[(corona_df.nthday == current_day) & (corona_df.Country.isin(['China', 'Mainland China']))].groupby('Province\/State')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index().sort_values(['Confirmed'], ascending=[False])","9bde86af":"Interestingly, 'Mainland China' has the first case on 2nd day while US has first case on first day. Maybe missing data. Also India has the first case on 9th day.","a11521af":"We dont have missing values in counts of Confirmed, Deaths or Recovered.","4893645e":"As we can see there is sudden decrease in the rate at which recovery happens after day 2. But the death rate keeping at almost constant rate till day 10. Also we can see recovery rate is increasing and wishing to go even higher.","260746a6":"> Too many cases were found to be Confirmed, which is not true. So we're getting the data cumulatively for each day.","f1a4b3e7":"The spread is exponential after 5th day which makes sense as people travel after chinese new year.","a314b149":"> So, 19 rows with 0 values on all 3 columns. Lets keep it as this is just visualization task","92c155a8":"Hubei has been at the receiving end of Corona both at the spread and death. \n\nHubei seems to be economically (GDP) doing good among other provinces which may attract other countries. Also Wuhan is most populous city in Hubei and one among in China\n\nhttps:\/\/en.wikipedia.org\/wiki\/Hubei\n\nhttps:\/\/www.chinahighlights.com\/travelguide\/top-large-cities.htm","cfda684c":"China is worst affected while Thailand is recovering fast. We can also see countries with most spread after China."}}