{"cell_type":{"82e5aea1":"code","fb347212":"code","ce2b5184":"code","aecd9863":"code","68b10405":"code","1d8347bf":"code","a34f581c":"code","ab85519d":"code","af880e49":"code","c97f2d3a":"code","bca14e00":"code","84ed4a48":"code","e05112c3":"code","8255c521":"code","4044c546":"code","61ad4701":"code","88d8339f":"code","96fd4191":"code","2ad826ee":"markdown","87601388":"markdown","0a97f49d":"markdown","97acdf39":"markdown","43a987d9":"markdown","2ead1d4e":"markdown"},"source":{"82e5aea1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import GridSearchCV, cross_val_score, train_test_split\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier","fb347212":"df = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")\ndf","ce2b5184":"#drop unnecessary features\ndf.drop([\"Unnamed: 32\",\"id\"],axis=1,inplace=True)","aecd9863":"df.describe()","68b10405":"df.groupby(\"diagnosis\").mean()","1d8347bf":"plt.figure(figsize=(20,20))\nsns.heatmap(df.corr(),annot=True,linewidths=.5)","a34f581c":"corr_matrix = df.corr().abs()\n\n# Select upper triangle of correlation matrix\nupper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))\n\n# Find features with correlation greater than 0.95\nto_drop = [column for column in upper.columns if any(upper[column] > 0.95)]\n\n# Drop features \ndf =  df.drop(to_drop, axis=1)\ndf.shape","ab85519d":"x = df.drop([\"diagnosis\"],axis=1)\ny = df[\"diagnosis\"]","af880e49":"x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)","c97f2d3a":"scaler = StandardScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","bca14e00":"xgb = XGBClassifier(random_state=42)\nxgb.fit(x_train,y_train)\npreds = xgb.predict(x_test)\nprint(\"Test acc\",accuracy_score(y_test,preds))","84ed4a48":"score = cross_val_score(xgb,x_train,y_train,cv=5).mean()\nprint(\"cross_val score\",score)","e05112c3":"xgb = XGBClassifier(random_state=42)\nparams = {\n    \"max_depth\" : [3,4,5,7,10],\n    \"learning_rate\" : [0.1,0.15,0.2,0.25,0.3],\n    \"colsample_bytree\" : np.arange(0.3,1,0.1),\n    \"subsample\": np.arange(0.3,1,0.1),\n    \"gamma\" : [0,0.1,0.2]\n}\ngrid_search = GridSearchCV(xgb,params,cv=5)\nbest = grid_search.fit(x_train,y_train)","8255c521":"best.best_params_","4044c546":"xgb = XGBClassifier(random_state=42,colsample_bytree=0.4,learning_rate=0.3,max_depth=3,subsample=0.4,gamma=0.1)\nxgb.fit(x_train,y_train)\ntestpreds = xgb.predict(x_test)\ntrainpreds = xgb.predict(x_train)\nprint(\"Test acc\",accuracy_score(y_test,testpreds))\nprint(\"Train acc\",accuracy_score(y_train,trainpreds))","61ad4701":"score2 = cross_val_score(xgb,x_train,y_train,cv=5).mean()\nprint(\"First cross_val score\",score)\nprint(\"cross_val score after tuning\",score2)","88d8339f":"sns.heatmap(confusion_matrix(y_test,testpreds),annot=True)","96fd4191":"print(classification_report(y_test,testpreds))","2ad826ee":"**Xgboost Hyperparameter Tuning**","87601388":"**Build Model**","0a97f49d":"**Drop correlated Features**","97acdf39":"**\u0130mport Libraries**","43a987d9":"**Read file**","2ead1d4e":"**Correlation Matrix**"}}