{"cell_type":{"6da2f282":"code","8ec5e953":"code","d1d9c383":"code","5cff23fb":"code","9ac5fea6":"code","519e976f":"code","3b088e7c":"code","ebab2fe7":"code","4c8cadb5":"code","7ec9de88":"code","1778e1d4":"code","7a27e0ab":"code","86081e95":"code","4fbf0c7b":"code","d3c61fc4":"code","a4c85284":"code","cb1c628c":"code","d52fd540":"code","6f291123":"code","52883186":"code","5fd7512c":"code","e45e66f6":"code","1e9335e3":"code","b0f73cb0":"code","dfdd5722":"code","96965630":"code","a9456f9a":"code","a6f2d57a":"code","24adafba":"code","2fda9061":"code","5872be1d":"code","3c8f2fc1":"code","518affa6":"code","9c6f5c22":"code","1671c6bb":"code","992c9596":"code","9e9feb1f":"code","31029194":"code","f6f0f2f0":"markdown","ba25a59c":"markdown","eaebcc11":"markdown","9fc06edc":"markdown","8f3ce900":"markdown","b7b4e3bf":"markdown","abf65fe1":"markdown"},"source":{"6da2f282":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sb","8ec5e953":"df = pd.read_csv('\/kaggle\/input\/mobile-data-speeds-of-all-india-during-march-2018\/march18_myspeed.csv')\ndf.head()","d1d9c383":"# lets confirm the exact data types of the dataset.\n\ndf.dtypes","5cff23fb":"# we can make Signal_strenght column a numeric type instead\ndf['Signal_strength'] = pd.to_numeric(df['Signal_strength'], errors='coerce')\ndf.dtypes","9ac5fea6":"# Confirm the available NaNs and Nulls\ndf.isna().sum()","519e976f":"#Data Cleanup. Filling the NaNs\n#Lets first determine the Skew of the Signal_strength Distribution\n\nplt.hist(df.Signal_strength)\nplt.show()","3b088e7c":"#Because the above Histogram for Signal_strenght is Right skewed, we shall fill our NaNs with the Median\n\n#Define a funcation impute median\ndef impute_median(series):\n    return series.fillna(series.median())","ebab2fe7":"df.Signal_strength = df['Signal_strength'].transform(impute_median)\ndf.isna().sum()","4c8cadb5":"df.head()","7ec9de88":"Result1 = df.groupby('Service Provider')['Data Speed(Mbps)'].describe()\nResult1","1778e1d4":"Result1_Mean = df.groupby('Service Provider')['Data Speed(Mbps)'].mean().sort_values(ascending=False)\nResult1_Mean","7a27e0ab":"plt.figure(figsize=(10,10))\nplt.pie(Result1_Mean, labels=Result1_Mean.index, autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Best Data Speeds per Service Provider')\nplt.tight_layout()\nplt.show()","86081e95":"Result2 = df.groupby('Service Provider')['Signal_strength'].describe()\nResult2","4fbf0c7b":"Result2_mean = df.groupby('Service Provider')['Signal_strength'].mean().sort_values(ascending=False)\nResult2_mean","d3c61fc4":"print('The service provider with the worst signal strength is :', Result2_mean.idxmin() )","a4c85284":"Result3 = df.groupby('Service Provider').count()\nResult3","cb1c628c":"## Service Provider with most users\nplt.figure(figsize=(15, 10))\nplt.bar(Result3.index, Result3.Signal_strength)\nplt.xlabel('Service Providers')\nplt.ylabel('Number of Users')\nplt.xticks(Result3.index, rotation=90)\nplt.title('Service Provider with most Users')\nplt.show()","d52fd540":"Result4 = df.groupby('LSA').count()\nResult4","6f291123":"## Service Area with most users\nplt.figure(figsize=(15, 10))\nplt.bar(Result4.index, Result4.Signal_strength)\nplt.xlabel('Licensed Service Areas')\nplt.ylabel('Number of Users')\nplt.xticks(Result4.index, rotation=90)\nplt.title('Licensed Service Area with most Users')\nplt.show()","52883186":"# LSA with Speeds Performance\nResult5 = df.groupby('LSA')['Data Speed(Mbps)'].describe()\nResult5","5fd7512c":"Result5_mean = df.groupby('LSA')['Data Speed(Mbps)'].mean().sort_values(ascending=False)\nResult5_mean","e45e66f6":"plt.figure(figsize=(15,15))\nplt.pie(Result5_mean, labels=Result5_mean.index, autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Best Data Speeds per LSA')\nplt.tight_layout()\nplt.show()","1e9335e3":"# LSA with Signal Strength Performance\nResult6 = df.groupby('LSA')['Signal_strength'].describe()\nResult6","b0f73cb0":"Result6_mean = df.groupby('LSA')['Signal_strength'].mean().sort_values(ascending=False)\nResult6_mean\n","dfdd5722":"print('LSA with the worst Signal_strength is:', Result6_mean.idxmin())","96965630":"df.head()","a9456f9a":"Result7 = df.groupby('Technology').count()\nResult7","a6f2d57a":"#Most Users per Technology\n\nplt.figure(figsize=(5, 10))\nplt.bar(Result7.index, Result7.Signal_strength)\nplt.xlabel('Technology')\nplt.ylabel('Number of Users')\nplt.xticks(Result7.index, rotation=90)\nplt.title('Technology with most Users')\nplt.show()","24adafba":"# Technology with Speeds Performance\nResult8 = df.groupby('Technology')['Data Speed(Mbps)'].describe()\nResult8","2fda9061":"Result8_Mean = df.groupby('Technology')['Data Speed(Mbps)'].mean().sort_values(ascending=False)\nResult8_Mean","5872be1d":"plt.figure(figsize=(10,10))\nplt.pie(Result8_Mean, labels=Result8_Mean.index, autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title('Best Data Speeds per Technology')\nplt.tight_layout()\nplt.show()","3c8f2fc1":"# Technology with Signal Strength Performance\nResult9 = df.groupby('Technology')['Signal_strength'].describe()\nResult9","518affa6":"Result9_Mean = df.groupby('Technology')['Signal_strength'].mean().sort_values(ascending=False)\nResult9_Mean","9c6f5c22":"print('Technology with the worst Signal_strength is:', Result9_Mean.idxmin())","1671c6bb":"#sb.distplot(Result9_Mean)","992c9596":"#plt.figure(figsize=(100,10))\n#plt.title()\nResult10 = df.groupby('Service Provider')['LSA'].value_counts().unstack(0)\n\nResult10.plot.bar(width=0.8, figsize=(50,20), title='Most Users per Service Provider per LSA')","9e9feb1f":"Result11 = df.groupby('Service Provider')['Technology'].value_counts().unstack(1)\nResult11.plot.bar(width=0.8, figsize=(10,10), title='Most Users per Service Provider per Technology')","31029194":"Result12 = df.groupby('LSA')['Technology'].value_counts().unstack(1)\nResult12.plot.bar(width=0.8, figsize=(30,10), title='Most Users per LSA per Technology')","f6f0f2f0":"1. MODE: for categorical values\n2. Median: for numerical values of a right skewed dataset\n3. Mean: for numerical values of a left skewed dataset","ba25a59c":"## Service Provider with the general Poor Signal Strength in the country","eaebcc11":"## Data Analysis by Service Providers","9fc06edc":"## Data Analysis by LSA","8f3ce900":"## Data Aggregation, Groupby","b7b4e3bf":"## Data Analysis by Technology","abf65fe1":"## Service Provider with the general best Speeds in the country"}}