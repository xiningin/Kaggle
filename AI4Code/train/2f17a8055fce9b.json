{"cell_type":{"7c24c671":"code","9ecd4b3b":"code","9c0f61e4":"code","90f5fe5e":"code","b838b15f":"code","f262dc5c":"code","d63ba143":"code","8737d1b6":"code","e2a2c700":"code","3dc6ecde":"code","3ba9cc92":"code","cd9cd8b8":"code","6f71a3f6":"code","24c6d94e":"markdown"},"source":{"7c24c671":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob\nimport matplotlib.pyplot as plt\nimport cv2\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ecd4b3b":"sideline_image = glob.glob('..\/..\/kaggle\/input\/nfl-impact-detection\/images\/*Sideline*')","9c0f61e4":"train_tracking = pd.read_csv('\/kaggle\/input\/nfl-impact-detection\/train_player_tracking.csv')","90f5fe5e":"train_label = pd.read_csv('\/kaggle\/input\/nfl-impact-detection\/train_labels.csv')","b838b15f":"train_tracking_frame = train_tracking[(train_tracking.gameKey == 57583) & (train_tracking.event == 'ball_snap')]","f262dc5c":"train_tracking_frame ['x'] -= train_tracking_frame['x'].median()","d63ba143":"train_label_frame = train_label[(train_label['view'] == 'Sideline') & (train_label['gameKey'] == 57583) & (train_label['frame'] == 1)]","8737d1b6":"merged_df = pd.merge(train_tracking_frame,train_label_frame,left_on='player',right_on='label')","e2a2c700":"trakcing_coordinate = np.float32(list(zip(merged_df['x'],53.33-merged_df['y']))).reshape(-1,1,2)","3dc6ecde":"label_coordinate =  np.float32(list(zip(merged_df['left']+merged_df['width']\/2,merged_df['top']-merged_df['height']\/2))).reshape(-1,1,2)","3ba9cc92":"M, mask = cv2.findHomography( label_coordinate,trakcing_coordinate)","cd9cd8b8":"transformed_coordinate =  cv2.perspectiveTransform(label_coordinate, M)","6f71a3f6":"plt.figure(figsize=(12,6))\nplt.scatter(transformed_coordinate[:,:,0],transformed_coordinate[:,:,1])\nplt.scatter(merged_df['x'],53.33-merged_df['y'])\n\nplt.legend(['Coordinate wrapped from helmet box','Ground truth tracking data'])","24c6d94e":"Code to get 3x3 transformation matrix between tracking data and groundturth helmet bounding box"}}