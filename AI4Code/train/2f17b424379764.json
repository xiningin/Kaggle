{"cell_type":{"63892d52":"code","c126c8ce":"code","212eeb26":"code","6e7d5001":"code","ccf962e1":"code","71b10c54":"code","a534c782":"code","67fddec9":"code","2dd1cfb0":"code","cc5a9f7f":"code","5c227b88":"code","f195d260":"code","49fe6ea9":"code","03c83406":"code","ca8cf327":"code","21b80172":"code","cd9f9eed":"code","52797938":"code","6283ec7a":"code","d4d5c2cc":"markdown"},"source":{"63892d52":"%reset -f  \n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# 1.1 Data manipulation library\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n%matplotlib inline\n# 1.2 OS related package\nimport os\n# 1.3 Modeling librray\n# 1.3.1 Scale data\nfrom sklearn.preprocessing import StandardScaler\n# 1.3.2 Split dataset\nfrom sklearn.model_selection import train_test_split\n# 1.3.3 Class to develop kmeans model\nfrom sklearn.cluster import KMeans\n# 1.4 Plotting library\nimport seaborn as sns\n# 1.5 How good is clustering?\nfrom sklearn.metrics import silhouette_score\nfrom yellowbrick.cluster import SilhouetteVisualizer\nimport re\n# 1.6 Set numpy options to display wide array\nnp.set_printoptions(precision = 3,          # Display upto 3 decimal places\n                    threshold=np.inf        # Display full array\n                    )","c126c8ce":"# Display multiple outputs from a jupyter cell\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","212eeb26":"# DateFrame object is created while reading file available at particular location given below\n\ndf=pd.read_csv(\"..\/input\/nyse\/fundamentals.csv\",parse_dates = ['Period Ending'])","6e7d5001":"# Remove NaN or Null values from DataFrame\n\ndf.dropna(inplace=True)\n\n# Displaying first 10 rows of DataFrame\n\ndf.head()","ccf962e1":"# Remove special characters from DataFrame\n\ncols = {col : re.sub('[^A-Za-z0-9]+','_',col) for col in df.columns.values}\n\ndf.rename(columns = cols,inplace=True)\n\ndf.columns=df.columns.str.replace(r\"[^a-zA-Z\\d\\_]+\",'_')\n\ndf.info()","71b10c54":"# Group data by Ticker Symbols and take a mean of all numeric variables.\n\ngr1=df.groupby('Ticker_Symbol')\n\ngr1.agg([np.mean]).head()","a534c782":"# This graph showing Ticker Symbol wise gross profit\n\npx.histogram(data_frame =df,\n                    x='Ticker_Symbol',\n                    y='Gross_Profit',\n                    histfunc=\"sum\",\n                    template=\"plotly_dark\"\n            )","67fddec9":"# Graph showing the relationship of Net Income and Estimated shares outstanding\n\npx.histogram(data_frame =df,\n                    y='Net_Income',\n                    x='Estimated_Shares_Outstanding',\n                    histfunc=\"sum\",\n                    template=\"plotly_dark\"\n            )","2dd1cfb0":"# Relationship between Capital expenditures and capital surplus\n\npx.density_contour(\n                   data_frame =df,\n                   x = 'Capital_Expenditures',\n                   y = 'Capital_Surplus',\n                   template=\"plotly_dark\"\n                   )","cc5a9f7f":"# Relationship between net income and estimated shares outstanding using heatmap\n\npx.density_heatmap(\n                   data_frame =df,\n                   x = 'Net_Income',\n                   y = 'Estimated_Shares_Outstanding',\n                   template=\"plotly_dark\",\n                   nbinsx = 10,             \n                   nbinsy = 20\n                   )","5c227b88":" # New column is created by extracting only day from date\n\ndf['Year']= df['Period_Ending'].dt.year\n\ndf.Year.unique()\n\nfig=px.scatter(df,\n          x = \"Gross_Margin\",\n          y = \"Profit_Margin\",\n          size = \"Goodwill\",\n          range_x=[0,85],\n          range_y=[0,120] ,\n          animation_frame = \"Year\",   \n          animation_group = \"Ticker_Symbol\",   \n          color = \"Ticker_Symbol\"              \n          )\n\n# 5.3 The following code slows down animation\n#  Ref: https:\/\/community.plotly.com\/t\/how-to-slow-down-animation-in-plotly-express\/31309\/6\nfig.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 2000\nfig.show()","f195d260":"sns.distplot(df.Gross_Profit,color='b')","49fe6ea9":"sns.jointplot(df.Gross_Margin, df.Profit_Margin, kind = 'reg',color='b')","03c83406":"# Take the selected data from dataframe \n\ndfselecteddata = df[['Accounts_Payable','Accounts_Receivable','Gross_Profit',\n               'Cost_of_Revenue','Gross_Margin','Gross_Profit','Net_Income','Profit_Margin','Total_Assets',\n               'Total_Liabilities','Estimated_Shares_Outstanding']]\n\n# New field named net_profit_loss where value is 1 if there is profit and value is 0 if there is loss \n\ndfselecteddata.loc[(dfselecteddata['Net_Income'] > 0),'Net_Profit_Loss'] = 1,\ndfselecteddata.loc[(dfselecteddata['Net_Income'] <= 0),'Net_Profit_Loss'] = 0 \n\n# Copy 'net_profit_loss' column to another variable and then drop it\n\ny = dfselecteddata['Net_Profit_Loss'].values\n\ndfselecteddata.drop(columns = ['Net_Profit_Loss'], inplace = True)\n\n# Scale data using StandardScaler\n    \nss = StandardScaler()                 # Create an instance of class\nss.fit(dfselecteddata)                # Train object on the data\nX = ss.transform(dfselecteddata)      # Transform data\nX[:5, :]                              # See first 5 rows\nX_train, X_test, _, y_test = train_test_split( X,               # np array without target\n                                               y,               # Target\n                                               test_size = 0.25 # test_size proportion\n                                               )\n# 4.1 Examine the results\n\nX_train.shape    \n\nX_test.shape  ","ca8cf327":"# Create an instance of modeling class\n# We will have two clusters\n\nclf = KMeans(n_clusters = 2)\n\n# Train the object over data\n\nclf.fit(X_train)\n\n# So what are our clusters?\n\nclf.cluster_centers_\nclf.cluster_centers_.shape         \nclf.labels_                        # Cluster labels for every observation\nclf.labels_.size                   \nclf.inertia_                       # Sum of squared distance to respective centriods, SSE","21b80172":"# For importance and interpretaion of silhoutte score, see:\n\nsilhouette_score(X_train, clf.labels_)    ","cd9f9eed":"# Make prediction over our test data and check accuracy\n\ny_pred = clf.predict(X_test)\ny_pred                 \nnp.sum(y_pred == y_test)\/y_test.size\ndx = pd.Series(X_test[:, 0])\ndy = pd.Series(X_test[:,1])\nsns.scatterplot(dx,dy, hue = y_pred)","52797938":"# Scree plot:\nsse = []\nfor i,j in enumerate(range(10)):\n    \n    # How many clusters?\n    n_clusters = i+1\n    \n    # Create an instance of class\n    clf1 = KMeans(n_clusters = n_clusters)\n    \n    # Train the kmeans object over data\n    clf1.fit(X_train)\n    \n    # Store the value of inertia in sse\n    sse.append(clf1.inertia_ )\n\n# Plot the line now\nsns.lineplot(range(1, 11), sse)","6283ec7a":"# Silhoutte plot\nvisualizer = SilhouetteVisualizer(clf, colors='yellowbrick')\nvisualizer.fit(X_train)        # Fit the data to the visualizer\nvisualizer.show()   ","d4d5c2cc":"**New York Stock Exchange (NYSE) Data Analysis:\n\n**Introduction:\n\nIn this project, we are analysing the NYSE Data. What is NYSE?\n\n**NYSE:\n\nThe New York Stock Exchange (NYSE) is a stock exchange located in New York City that is \nthe largest equities-based exchange in the world, based on the total market capitalization \nof its listed securities. Formerly run as a private organization, the NYSE became a public \nentity in 2005 following the acquisition of electronic trading exchange Archipelago. \nIn 2007 a merger with Euronext, the largest stock exchange in Europe, led to the creation \nof NYSE Euronext, which was later acquired by Intercontinental Exchange, the current parent\nof the New York Stock Exchange.\n\n**KEY TAKEAWAYS:\n\n1)The NYSE, which dates back to 1792, is the largest stock exchange in the world based on \nthe total market capitalization of its listed securities.\n\n2)Many of the oldest publicly traded U.S. companies are listed on the Big Board, the nickname for the NYSE.\n\n3)The Intercontinental Exchange now owns the NYSE, having purchased the exchange in 2013.\n"}}