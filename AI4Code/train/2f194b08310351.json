{"cell_type":{"915bb59e":"code","38d875eb":"code","bfa5df40":"code","6a6ca1b4":"markdown"},"source":{"915bb59e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport holoviews as hv\nfrom holoviews import opts, dim, Palette\nhv.extension('bokeh')\n\n### Load the data\ninput_path = '..\/input\/'\ndf_train = pd.read_csv(input_path + 'train.csv')\ndf_test = pd.read_csv(input_path + 'test.csv')\n### Feature names (removing 'ID' and 'Magic' one)\nfeatures = [c for c in df_test.columns if c not in ['id', 'wheezy-copper-turtle-magic']]","38d875eb":"a_feature = 20","bfa5df40":"n = 100 # number of features. The kernel can't render a picture for each of 512 values what's why we limit that number to 100. \n# If you want to see distributions for other values use `range(m,n)` (theoretical it should be less than 500, but actually it would be better to use 100 or lees at a time).\n\n### Filtering only rows that has values from 0 to 99 in 'wheezy-copper-turtle-magic':\ndf_n = df_train[df_train['wheezy-copper-turtle-magic'].isin(range(n))]\n\n# Separating targent 0 and 1:\ndf_n_0 = df_n[df_n['target'] == 0]\ndf_n_1 = df_n[df_n['target'] == 1]\n\n\n### Forming datasets\nexp = hv.Dataset(df_train[[features[a_feature], 'wheezy-copper-turtle-magic']], [features[a_feature]])\nexp_n = hv.Dataset(df_n[[features[a_feature], 'wheezy-copper-turtle-magic']], [features[a_feature]])\nexp_0 = hv.Dataset(df_n_0[[features[a_feature], 'wheezy-copper-turtle-magic']], [features[a_feature]])\nexp_1 = hv.Dataset(df_n_1[[features[a_feature], 'wheezy-copper-turtle-magic']], [features[a_feature]])\n\n### Pictures\n# Density plot for `a_feature` (all values of `wheezy-copper-turtle-magic`)\np1 = exp.to(hv.Distribution, features[a_feature])\n# Density plot for `a_feature` (for a single value of `wheezy-copper-turtle-magic`)\np2 = exp_n.to(hv.Distribution, features[a_feature], groupby='wheezy-copper-turtle-magic', label = 'Target combined') \n# Density plot for `a_feature` (for a single value of `wheezy-copper-turtle-magic`fot targets 0 and 1 separately):\np3 = exp_0.to(hv.Distribution, features[a_feature], groupby='wheezy-copper-turtle-magic', label = '0') \np4 = exp_1.to(hv.Distribution, features[a_feature], groupby='wheezy-copper-turtle-magic', label = '1')\n### Show the pictures:\nlayout = hv.Layout((p1) + (p2) + (p3 * p4)).cols(1)\nlayout","6a6ca1b4":"What feature we want to investgate:"}}