{"cell_type":{"85fe1f5a":"code","71734b08":"code","58f7a6de":"code","1128b5c4":"code","ba4661b4":"code","ccb3e933":"code","f05d5673":"code","e938fe18":"code","f23d8d20":"code","183aea18":"code","5a51f5b2":"code","2077bf94":"code","38a377e3":"code","e2eed33f":"code","392ae090":"code","637dc737":"code","16a0cdc2":"code","b3c001d0":"code","030e9e63":"code","6dd9f2ad":"code","5e8ebbed":"code","c5178dcc":"code","09c29a20":"code","6c1de4ae":"code","39e97ce9":"markdown","fae1e9bd":"markdown","f11423e0":"markdown"},"source":{"85fe1f5a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","71734b08":"df=pd.read_csv('..\/input\/mental-health-in-tech-survey\/survey.csv')","58f7a6de":"df.info()","1128b5c4":"df.shape","ba4661b4":"df.isnull().sum()","ccb3e933":"df.drop(columns=['state','comments'],inplace=True)","f05d5673":"df['self_employed'].fillna('No',inplace=True)\ndf['work_interfere'].fillna('Sometimes',inplace=True)","e938fe18":"df.isnull().sum()","f23d8d20":"df.columns","183aea18":"df.duplicated().sum()","5a51f5b2":"df.drop(df[df['Age'] < 0].index, inplace = True) \ndf.drop(df[df['Age'] > 100].index, inplace = True) ","2077bf94":"sns.boxplot(df['Age'])","38a377e3":"df['Gender'].unique()","e2eed33f":"#will decrease the number of categoried in Gender\ndf['Gender'] = df['Gender'].str.lower()\nmale = [\"male\", \"m\", \"male-ish\", \"maile\", \"mal\", \"male (cis)\", \"make\", \"male \", \"man\",\"msle\", \"mail\", \"malr\",\"cis man\", \"cis male\"]\ntrans = [\"trans-female\", \"something kinda male?\", \"queer\/she\/they\", \"non-binary\",\"nah\", \"all\", \"enby\", \"fluid\", \"genderqueer\", \"androgyne\", \"agender\", \"male leaning androgynous\", \"guy (-ish) ^_^\", \"trans woman\", \"neuter\", \"female (trans)\", \"queer\", \"ostensibly male, unsure what that really means\"]\nfemale = [\"cis female\", \"f\", \"female\", \"woman\",  \"femake\", \"female \",\"cis-female\/femme\", \"female (cis)\", \"femail\"]\ndf['Gender'] = df['Gender'].apply(lambda x:\"Male\" if x in male else x)\ndf['Gender'] = df['Gender'].apply(lambda x:\"Female\" if x in female else x)\ndf['Gender'] = df['Gender'].apply(lambda x:\"Trans\" if x in trans else x)\ndf.drop(df[df.Gender == 'p'].index, inplace=True)\ndf.drop(df[df.Gender == 'a little about you'].index, inplace=True)","392ae090":"df['Gender'].unique()","637dc737":"sns.countplot(df['Gender'])","16a0cdc2":"#country- wise gender ratio participating in the survey\n#shows that more number of males are working in tech companies all over the world\nplt.figure(figsize= (20,9))\nsns.countplot(x='Country', order= df['Country'].value_counts().index, hue='Gender', data=df)\nplt.legend(bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)\nplt.xticks(rotation=90)","b3c001d0":"sns.barplot(df['mental_health_consequence'].unique(),df['mental_health_consequence'].value_counts())","030e9e63":"#country wise representation of data with focus on India\nplt.figure(figsize=(20,8))\nsns.countplot(df.Country, order= df['Country'].value_counts().index)\nplt.xticks(rotation=90)\nplt.annotate('Mental Health Survey Participants from India', xy=(8, 20), xytext=(10, 20.5),\n             arrowprops=dict(facecolor='black', shrink=0.05),)","6dd9f2ad":"plt.pie(df['coworkers'].value_counts(),labels=df['coworkers'].unique())\ndf['coworkers'].value_counts()","5e8ebbed":"#So people dont know exactly whether employer would consider mental health as serious as a physical one.Now we can analyse it\nplt.hist(df['mental_vs_physical'],histtype='step')","c5178dcc":"#family history vs mental health\nplt.figure(figsize=(12,8))\nsns.countplot(y=\"family_history\", hue=\"treatment\", data=df)\nplt.title(\"Does family hisitory effects mental health ? \",fontsize=20,fontweight=\"bold\")\nplt.ylabel(\"\")\nplt.show()\n","09c29a20":"#Corelation of features\nfrom sklearn.preprocessing import LabelEncoder\nnumber = LabelEncoder()\nfor i in df.columns:\n    df[i] = number.fit_transform(df[i].astype('str'))","6c1de4ae":"features_correlation = df.corr()\nplt.figure(figsize=(8,8))\nsns.heatmap(features_correlation,vmax=1,square=True,annot=False,cmap='Blues')\nplt.show()","39e97ce9":"# 2. Data Pre-processing \u2699\ufe0f","fae1e9bd":"# 1. Introduction \u2b07","f11423e0":"# 3. Data Visualization \ud83d\udcc9"}}