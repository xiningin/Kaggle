{"cell_type":{"438df508":"code","cd2470fe":"code","92a76738":"code","53adb3df":"code","85270d7a":"code","50b512fb":"code","c62a1174":"code","8d4f429f":"markdown"},"source":{"438df508":"from google.cloud import bigquery\nimport pandas as pd\nclient = bigquery.Client()\nquery = \"select timestamp as timestamp, nonce,block_id from `bigquery-public-data.bitcoin_blockchain.blocks`\"","cd2470fe":"query_job = client.query(query)\ndf = query_job.to_dataframe()","92a76738":"#check the first 5 result, to ensure we get what we want.\n#additionally do data sanity check by looking at block exploerers such as \n#https:\/\/blockexplorer.com\/block\/{block_id}\n\npd.set_option('display.max_colwidth', -1)\ndf.head(5)","53adb3df":"#convert hexdecimal blockhash into int. Apply log scale for plot.\nimport math\ndf['blockhash_int'] = df['block_id'].apply(lambda x : int(x,16))\ndf['blockhash_log10'] = df['blockhash_int'].apply(lambda x : math.log10(x))\n\n# remove the outliers\ndf = df[ (df['timestamp'] > 1230854400000) & (df['timestamp'] < 1600000000000) ]\ndf['timestamp'] = pd.to_datetime(df['timestamp'],unit='ms')","85270d7a":"from matplotlib import pylab as plt\n%matplotlib inline\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 15, 10\n\nplt.hist(df['blockhash_log10'], bins=100, histtype='stepfilled')\nplt.title('histogram of log10(blockhash)')\nplt.xlabel('log10(blockhash)')\nplt.ylabel('frequency')\nplt.show();","50b512fb":"plt.plot_date( df['timestamp'], df['blockhash_log10'], ms=0.1);\nplt.title(\"log10(blockhash) vs block time\");\nplt.xlabel(\"block time\");\nplt.ylabel(\"blockhash in log10\");","c62a1174":"fig = plt.figure(figsize=(15,10))\nsc=plt.scatter( df['nonce'], df['blockhash_log10'], s=0.01, c=df['timestamp']);\nfig.colorbar(sc)\nplt.title(\"log10(blockhash) vs nonce, color=block timestamp\");\nplt.xlabel(\"nonce\");\nplt.ylabel(\"blockhash in log10\");\nplt.show();","8d4f429f":"[The previous kernel](https:\/\/www.kaggle.com\/smasuda\/bitcoin-nonce-pattern) looked into bitcoin's nonce distribution over time. How about blockhash then?\n\nIt has been already [analyzed](https:\/\/en.bitcoin.it\/wiki\/Distribution_of_nonces_and_hashes), and this kernel aims to be a working reproduce case of the existing work.  Again, I used block timestamp as a proxy of block height.\n\nAs you can see in the histogram below, blockhash **is not** uniformly distributed among blocks; it is upper-bounded by [difficulty](https:\/\/en.bitcoin.it\/wiki\/Difficulty), which becomes yet more obvious if you plot it over time.\n\nThe interesting nonce pattern can also be observed in the last plot - although the point of the chart here would be to show how blockhash is uniformly distributed over nonce under a certain difficulty range."}}