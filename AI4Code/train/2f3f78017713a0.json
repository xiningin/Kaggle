{"cell_type":{"eac23c1d":"code","333f8f02":"code","8e7022f0":"code","439e9cc6":"code","48eb003d":"code","4ea25579":"code","0ec0a268":"code","744bb655":"code","53307e45":"code","5efa36b8":"code","671428c9":"markdown","1190c4a7":"markdown","6962c2cf":"markdown","4ad4347f":"markdown","40f92b44":"markdown","ebe4ea24":"markdown","fc0e1b43":"markdown","27eca799":"markdown"},"source":{"eac23c1d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder\nfrom sklearn.compose import ColumnTransformer, make_column_transformer\nfrom sklearn.metrics import classification_report, confusion_matrix\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline \nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","333f8f02":"train_df = pd.read_csv('\/kaggle\/input\/human-activity-recognition-with-smartphones\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/human-activity-recognition-with-smartphones\/test.csv')\n\n\n","8e7022f0":"x=train_df.iloc[:,0:len(train_df.columns.values) -1]\ny=train_df.Activity\n\nx_testeDF = test_df.iloc[:,0:len(train_df.columns.values) -1]\ny_testeDF = test_df.Activity","439e9cc6":"y.unique()","48eb003d":"enc = LabelEncoder()\n\ny = enc.fit_transform(y)\ny_testeDF = enc.fit_transform(y_testeDF)\ny","4ea25579":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, train_size=0.8)","0ec0a268":"mlp = MLPClassifier(hidden_layer_sizes=(200))\nmlpFit = mlp.fit(X_train, np.array(y_train))","744bb655":"MLPpred = mlp.predict(X_test)","53307e45":"CM = confusion_matrix(y_test,MLPpred)\n\nsns.heatmap(CM, center=True)\nplt.show()\n\nprint(classification_report(y_test,MLPpred))","5efa36b8":"print(x.shape)\nprint(y.shape)\nprint(x_testeDF.shape)\nprint(y_testeDF.shape)\n\nmlpFit.score(x_testeDF,y_testeDF)","671428c9":"Atribuindo 200 camadas no MLP Classifier e preditando as informa\u00e7\u00f5es ","1190c4a7":"**Extra\u00e7\u00e3o dos dados com pandas**","6962c2cf":"**Trabalho MLPClassifier**\n\nBruno In\u00e1cio Cardoso testye","4ad4347f":"Separa\u00e7\u00e3o dos dados de train, na variavel X se extrai todas as informa\u00e7\u00f5es das colunas posteriores do Activity. Variavel Y tras a informa\u00e7\u00e3o da coluna Activity.","40f92b44":"Trainmento da feature ficou 20% para treinamento.","ebe4ea24":"Transformando a string em enconder para poder fazer a leitura da feature.","fc0e1b43":"Demonstra as Classes onde se verifica qual classes ser\u00e3o extraidas da coluna Activity","27eca799":"Carregamento das biblioteca e listagem dos arquivos."}}