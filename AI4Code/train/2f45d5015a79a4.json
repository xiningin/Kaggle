{"cell_type":{"a7561bf5":"code","3a4f493b":"code","7d8cc859":"code","6ef7783b":"code","939f954d":"code","f59ab153":"code","b8f504d3":"code","e2ee901b":"code","1e5a0676":"code","acc264d0":"code","983fd691":"code","e64737d9":"code","9182416c":"code","9b27cc03":"code","071de5e0":"code","4acb9a10":"code","74668d8d":"code","92bc2dec":"code","b6fe129f":"markdown","a3422900":"markdown","87593b81":"markdown","d21ce6fc":"markdown","58f628d3":"markdown","dd4e5d08":"markdown","fe9b22c8":"markdown","128c7022":"markdown","e79977fd":"markdown","779c4bd7":"markdown","d39fa4a5":"markdown","e5e05974":"markdown","ba88cacb":"markdown","40e0f191":"markdown","723a41fe":"markdown","b4af3f86":"markdown","25bb6117":"markdown","1101ecea":"markdown","fa4183ff":"markdown"},"source":{"a7561bf5":"import tensorflow as tf\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.utils import normalize\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Flatten\nimport matplotlib.pyplot as plt #to visualize an image from our dataset\n","3a4f493b":"mnist=tf.keras.datasets.mnist  #28x28 image of hand-written digits","7d8cc859":"(x_train,y_train),(x_test,y_test)=mnist.load_data()","6ef7783b":"plt.imshow(x_train[0],cmap=plt.cm.binary)","939f954d":"#It's easier for our network to learn this way\n\nx_train=normalize(x_train,axis=1)\nx_test=normalize(x_test,axis=1)\n\n#Now, the data has been normalized","f59ab153":"#The image will look a bit dull as each pixel stores a value between 0-1, but don't worry..\n\nplt.imshow(x_train[0],cmap=plt.cm.binary)","b8f504d3":"#Loading the Sequential model\n\nmodel=Sequential() ","e2ee901b":"# data is in multidimensional form,so we need to make it into simpler form by flattening it:\n\nmodel.add(Flatten())\n","1e5a0676":"model.add(Dense(128,activation=\"relu\"))  #128 neurons, activation function to fire up the neuron\nmodel.add(Dense(128,activation=\"relu\"))\nmodel.add(Dense(10,activation=\"softmax\")) \n\n#10 because number of classification is from 0-9 i.e. 10 different types of data\n\n\n#softmax for probability distribution\n","acc264d0":"\n#parameters for training of the model:\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])     \n\n#loss is the degree of error","983fd691":"\n#neural networks don't actually try to increase accuracy but tries to minimize loss\n#epochs are just number of iterations the whole model will follow through\n\nmodel.fit(x_train,y_train,epochs=3)\n","e64737d9":"val_loss,val_acc=model.evaluate(x_test,y_test)\nprint(\"\\n\\n\\n\\tEvaluation of the Model:\\n\")\nprint(\"Value Accuracy=\",val_acc,\"\\nValue Loss=\",val_loss)","9182416c":"#Saving the model as Number_Reader\n    \nmodel.save('Number_Reader.model') ","9b27cc03":"#importing our Number_Reader.model into new_model\n\nnew_model = tf.keras.models.load_model('Number_Reader.model')","071de5e0":"pred=new_model.predict(x_test)\nprint(pred)  #these are all probability distributions\n","4acb9a10":"import numpy as np","74668d8d":"print(\"MODEL OUTPUT: \")\nprint(np.argmax(pred[0])) \n\n#takes out the maximum value, from the probability density given above","92bc2dec":"print(\"The Actual Image was of:\")\nplt.imshow(x_test[0])\nplt.show()","b6fe129f":"### In this tutorial, I have broken down the process into 6 easy steps:\n1. Loading libraries and MNIST Dataset\n2. Dividing training and Testing Data\n3. Normalizing and Flattening the data.\n4. Adding layers and compiling the model\n5. Evaluating the model\n6. Validation of the model.","a3422900":"![Image1](https:\/\/www.researchgate.net\/profile\/Alessandro_Di_Nuovo\/publication\/328030580\/figure\/fig1\/AS:677340703121411@1538502016731\/Examples-handwritten-digits-in-the-MNIST-dataset.ppm)","87593b81":"## 2] Dividing training and testing data","d21ce6fc":"**Before jumping on to the next step, let's see how an image from our dataset looks:**","58f628d3":"**Finally, our model's classification matches the outcome! **\n\n**Therefore, the model is valid.**","dd4e5d08":"Now as the libraries are imported, let's import our dataset as well:","fe9b22c8":"Here, our model gave number 7 as the output.\nTo verify the image was really of number 7 or not, let's find out by plotting the image:","128c7022":"It looks a bit scary ..but, the outcome is wayyy simpler.\nLet's have a look at what all these values are trying to convey.\nBut, we'll be needing numpy library for this.","e79977fd":"*As you can see here, the image is composed of 28x28 pixels, and each pixel contains a value from 0-255 stored in it.*\n\n\n\n**Why 0-255?**\n\nHere's the reason:\n\n(RGB representation depicts color in 8-bit format, 2^8=256 i.e. 0-255 unique values, hence the unique colors)\n\n**But, here we are using only grayscale color, so to normalize the data in a range of 0 to 1,\nLet's jump on to the next step:\n**","779c4bd7":"## 6] Validation of the Model","d39fa4a5":"**But, what does MNIST dataset contain?**\n* Almost 70,000 images of hand-written digits from 0-9 \n* Every image is composed of 28x28 pixels, i.e. 784 pixels per image\n* Each pixel contains the intensity of color on grayscale i.e from black to white i.e. 0-255\n\n\n[Click here if you want to understand the MNIST dataset and Neural Networks with more ease.](https:\/\/www.youtube.com\/watch?v=aircAruvnKk)\n\n","e5e05974":"## 1] Firstly, we'll import the libraries and dataset:\n\n","ba88cacb":"## 3] Normalizing and Flattening of data","40e0f191":"# Hand-Written Digit Recognition using MNIST dataset and Keras \n\n    \n\n> #### *Often referred as the \"Hello World\" of object recognition for Machine Learning and Deep Learning. *\n> ","723a41fe":"**What is Tensorflow?**\n* Is an open source artificial intelligence library, using data flow graphs to build models.\n* It allows developers to create large-scale neural networks with many layers. \n\nTensorFlow is mainly used for: Classification, Perception, Understanding, Discovering, Prediction and Creation.","b4af3f86":"\n\n\n## 4] Adding layers and compiling the model","25bb6117":"Moving on to the last and final step:","1101ecea":"#### This problem is great if you are a beginner and want to explore the world of deep learning..","fa4183ff":"## 5] Evaluating the Model"}}