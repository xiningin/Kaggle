{"cell_type":{"f087e1d2":"code","3ff01a43":"code","cfb3fdc5":"code","206a778c":"code","7be43a9b":"code","15cd5749":"code","66f3c040":"code","e43e0a12":"code","d7338e20":"code","ad59634e":"code","9c399fde":"code","6416fe88":"code","13f1ea9b":"code","5211b584":"code","04953feb":"code","2fa96742":"code","db009f49":"code","cd5918ac":"code","9f30cfae":"code","5ae3d81d":"code","28a67b18":"code","b8e075f1":"code","55a67f0e":"markdown","f6fcc35d":"markdown","6420507b":"markdown","8bcc4282":"markdown","87246377":"markdown","d781881d":"markdown","acd5f3bb":"markdown","7efd715c":"markdown","afdcb742":"markdown","298d593e":"markdown","1704e702":"markdown","78a2734a":"markdown","a44a4868":"markdown","4e897ed9":"markdown","9799aaae":"markdown"},"source":{"f087e1d2":"# pip install plotly==3.10.0","3ff01a43":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","cfb3fdc5":"# Load data that we will use.\ntimesData = pd.read_csv(\"..\/input\/timesData.csv\")","206a778c":"# information about timesData\ntimesData.info()","7be43a9b":"timesData.head(10)","15cd5749":"df = timesData.iloc[:100,:] #ilk 100 \u00fc al\u0131yoruz. sadece 2011'e kar\u015f\u0131l\u0131k geliyor\nimport plotly.graph_objs as go #import ettik\n\ntrace1=go.Scatter(\n                    x=df.world_rank, #d\u00fcnya s\u0131ralamas\u0131\n                    y=df.citations, #citation skor\n                    mode=\"lines\",\n                    name=\"citations\", #ilk yarataca\u011f\u0131m\u0131z plot citations\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= df.university_name )#g\u00f6rsel \u00fczerine geldi\u011fimizde \u00fcniversite ismi yaz\u0131yor.\n\n#yukar\u0131dakinin ayn\u0131s\u0131n\u0131 teaching i\u00e7in yapt\u0131k\ntrace2 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= df.university_name)\ndata=[trace1,trace2]\nlayout = dict(title = 'Citation and Teaching vs World Rank of Top 100 Universities',\n              xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False)\n             )\nfig=dict(data=data, layout=layout)\niplot(fig)\n","66f3c040":"df2014 = timesData[timesData.year == 2014].iloc[:100,:] #y\u0131l\u0131 2014e e\u015fitle ve ilk 100\u00fc al\ndf2015 = timesData[timesData.year == 2015].iloc[:100,:]\ndf2016 = timesData[timesData.year == 2016].iloc[:100,:]\n#3 farkl\u0131 trace yaratmam\u0131z gerekiyor\ntrace1 =go.Scatter(\n                    x = df2014.world_rank,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"2014\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\ntrace2 =go.Scatter(\n                    x = df2015.world_rank,\n                    y = df2015.citations,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df2015.university_name)\n\ntrace3 =go.Scatter(\n                    x = df2016.world_rank,\n                    y = df2016.citations,\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                    text= df2016.university_name)\ndata = [trace1, trace2, trace3]\nlayout = dict(title = 'Citation vs world rank of top 100 universities with 2014, 2015 and 2016 years',\n              xaxis= dict(title= 'World Rank',ticklen= 10,zeroline= True),\n              yaxis= dict(title= 'Citation',ticklen= 10,zeroline= True)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","e43e0a12":"df2014 = timesData[timesData.year == 2014].iloc[:100,:] #y\u0131l\u0131 2014e e\u015fitle ve ilk 100\u00fc al\ndf2015 = timesData[timesData.year == 2015].iloc[:100,:]\ndf2016 = timesData[timesData.year == 2016].iloc[:100,:]\n#3 farkl\u0131 trace yaratmam\u0131z gerekiyor\ntrace1 =go.Scatter(\n                    x = df2014.world_rank,\n                    y = df2014.total_score,\n                    mode = \"markers\",\n                    name = \"2014\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\ntrace2 =go.Scatter(\n                    x = df2015.world_rank,\n                    y = df2015.total_score,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df2015.university_name)\n\ntrace3 =go.Scatter(\n                    x = df2016.world_rank,\n                    y = df2016.total_score,\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                    text= df2016.university_name)\ndata = [trace1, trace2, trace3]\nlayout = dict(title = 'Citation vs world rank of top 100 universities with 2014, 2015 and 2016 years',\n              xaxis= dict(title= 'World Rank',ticklen= 10,zeroline= True),\n              yaxis= dict(title= 'total_score',ticklen= 10,zeroline= True)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","d7338e20":"# prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:]\ndf2014","ad59634e":"# prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:] #ilk 3 \u00fc al  \n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# create trace1 \ntrace1 = go.Bar(\n                x = df2014.university_name, #ilk 3\u00fcn\u00fcn ismi\n                y = df2014.citations, #citationslar\u0131\n                name = \"citations\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=3)),\n                text = df2014.country) #bar plotta \u00fcst\u00fcne gelince hangi \u00fcni oldu\u011fu yaz\u0131yor\n# create trace2 \ntrace2 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.teaching,\n                name = \"teaching\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=3)),\n                text = df2014.country)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\", title=\"citations and teaching of top 3 universities in 2014\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","9c399fde":"# prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\nx = df2014.university_name\n\n#trace yaraktmak i\u00e7in farkl\u0131 bir y\u00f6ntem\ntrace1 = {\n  'x': x,\n  'y': df2014.citations,\n  'name': 'citation',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df2014.teaching,\n  'name': 'teaching',\n  'type': 'bar'\n};\ndata = [trace1, trace2];\nlayout = {\n  'xaxis': {'title': 'Top 3 universities'},\n  'barmode': 'relative', #altl\u0131 \u00fcstl\u00fc koy \n  'title': 'citations and teaching of top 3 universities in 2014'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","6416fe88":"#2016 y\u0131l\u0131nda en iyi 7 \u00fcniversitenin \u00f6\u011frencilerinin oran\u0131\ndf2016 = timesData[timesData.year == 2016].iloc[:7,:] #ilk 7yi ald\u0131k\n#df2016.info() object bunu float'a \u00e7evirmeliyiz.\npie1 = df2016.num_students\npie1_list = [float(each.replace(',', '.')) for each in df2016.num_students] # virg\u00fcl\u00fc noktayla de\u011fi\u015ftir.ve strleri float yapt\u0131k\nlabels = df2016.university_name\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Number Of Students Rates\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Universities Number of Students rates\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Students\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)\n","13f1ea9b":"df2016.info()","5211b584":"# data preparation\ndf2016 = timesData[timesData.year == 2016].iloc[:20,:]\nnum_students_size  = [float(each.replace(',', '.')) for each in df2016.num_students] \ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        'y': df2016.teaching,\n        'x': df2016.world_rank,\n        'mode': 'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True\n        },\n        \"text\" :  df2016.university_name    \n    }\n]\niplot(data)","04953feb":"#2011 ve 2012deki students-staff ratio lara bak\u0131caz\n#prepare data\n\nx2011 = timesData.student_staff_ratio[timesData.year == 2011] \nx2012 = timesData.student_staff_ratio[timesData.year == 2012]\n\ntrace1 = go.Histogram(\n    x=x2011,\n    opacity=0.75,\n    name = \"2011\",\n    marker=dict(color='rgba(171, 50, 96, 0.6)'))\ntrace2 = go.Histogram(\n    x=x2012,\n    opacity=0.75,\n    name = \"2012\",\n    marker=dict(color='rgba(12, 50, 196, 0.6)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay',\n                   title=' students-staff ratio in 2011 and 2012',\n                   xaxis=dict(title='students-staff ratio'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","2fa96742":"# data prepararion\n#2011 y\u0131l\u0131ndaki \u00fcniversite s\u0131ralamalar\u0131na g\u00f6re en \u00e7ok hangi \u00fclkenin kullan\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6rselle\u015ftir.\nx2011 = timesData.country[timesData.year == 2011]\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(x2011)) #kelimeleri ay\u0131r ona g\u00f6re plot ettir.\nplt.imshow(wordcloud)\nplt.axis('off')\n\nplt.show()","db009f49":"# data preparation\nx2015 = timesData[timesData.year == 2015] #2015 y\u0131l\u0131ndaki ilk100 \u00fcni\n\ntrace0 = go.Box(\n    y=x2015.total_score,\n    name = 'total score of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=x2015.research,\n    name = 'research of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)","cd5918ac":"# import figure factory\n#2 veya daha fazla features aras\u0131ndaki ili\u015fkiyi g\u00f6rmek i\u00e7in kullan\u0131yoruz\nimport plotly.figure_factory as ff\n# prepare data\ndataframe = timesData[timesData.year == 2015]\ndata2015 = dataframe.loc[:,[\"research\",\"international\", \"total_score\"]] #bu 3\u00fcn\u00fc kar\u015f\u0131la\u015ft\u0131r\u0131caz \ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(data2015, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","9f30cfae":"#vurgulamak istedi\u011fim b\u00fcy\u00fck yard\u0131mc\u0131 k\u00fc\u00e7\u00fck \n# first line plot\ntrace1 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n)\n# second line plot\ntrace2 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"income\",\n    marker = dict(color = 'rgba(160, 112, 20, 0.8)'),\n)\ndata = [trace1, trace2]\nlayout = go.Layout(\n    xaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='y2',        \n    ),\n    yaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='x2',\n    ),\n    title = 'Income and Teaching vs World Rank of Universities'\n\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)\n","5ae3d81d":"dataframe.world_rank","28a67b18":"\n# create trace 1 that is 3d scatter\n\ntrace1 = go.Scatter3d(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    z=dataframe.citations,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,0,0)',                # set color to an array\/list of desired values      \n        #colorscale ile 4. boyut katmak istedim fakat colorscale i \u00e7al\u0131\u015ft\u0131ramad\u0131m.\n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","b8e075f1":"trace1 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    name = \"research\"\n)\ntrace2 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.citations,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\"\n)\ntrace3 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\"\n)\ntrace4 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.total_score,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Research, citation, income and total score VS World Rank of Universities'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","55a67f0e":"<a id=\"12\"><\/a> <br>\n# 3D Scatter Plot with Colorscaling\n<font color='red'>\n3D Scatter: Sometimes 2D is not enough to understand data. Therefore adding one more dimension increase the intelligibility of the data. Even we will add color that is actually 4th dimension.\n<font color='black'>\n* go.Scatter3d: create 3d scatter plot\n* x,y,z: axis of plots\n* mode: market that is scatter\n* size: marker size\n* color: axis of colorscale\n* colorscale:  actually it is 4th dimension","f6fcc35d":"<a id=\"11\"><\/a> <br>\n# Inset Plots\n<font color='red'>\nInset Matrix = 2 plots are in one frame\n<font color='black'>","6420507b":"<font color='red'>\nSecond Bar Charts Example: citations and teaching of top 3 universities in 2014 (style2)\n<br> Actually, if you change only the barmode from *group* to *relative* in previous example, you achieve what we did here. However, for diversity I use different syntaxes. \n<font color='black'>\n* Import graph_objs as *go*\n* Creating traces\n    * x = x axis\n    * y = y axis\n    * name = name of the plots\n    * type = type of plot like bar plot\n* data = is a list that we add traces into it\n* layout = it is dictionary.\n    * xaxis = label of x axis\n    * barmode = bar mode of bars like grouped( previous example) or relative\n    * title = title of layout\n* fig = it includes data and layout\n* iplot() = plots the figure(fig) that is created by data and layout","8bcc4282":"<a id=\"13\"><\/a> <br>\n# Multiple Subplots\n<font color='red'>\nMultiple Subplots: While comparing more than one features, multiple subplots can be useful.\n<font color='black'>\n\n","87246377":"<a id=\"1\"><\/a> <br>\n# Loading Data and Explanation of Features\n<font color='red'>\n* timesData includes 14 features that are:\n    <font color='black'>\n    * world_rank             \n    * university_name       \n    * country               \n    * teaching                \n    * international            \n    * research                 \n    * citations                \n    * income                   \n    * total_score              \n    * num_students             \n    * student_staff_ratio      \n    * international_students   \n    * female_male_ratio        \n    * year ","d781881d":"# Scatter\n\n2014 2015 2016 y\u0131l\u0131ndaki d\u00fcnyadaki en iyi 100 \u00fcnicersitenin citationlar\u0131n\u0131 kar\u015f\u0131la\u015ft\u0131raca\u011f\u0131z","acd5f3bb":"<a id=\"2\"><\/a> <br>\n# Line Charts\n<font color='red'>\nLine Charts Example: Citation and Teaching vs World Rank of Top 100 Universities\n<font color='black'>\n* Import graph_objs as *go*\n* Creating traces\n    * x = x axis\n    * y = y axis\n    * mode = type of plot like marker, line or line + markers\n    * name = name of the plots\n    * marker = marker is used with dictionary. \n        * color = color of lines. It takes RGB (red, green, blue) and opacity (alpha)\n    * text = The hover text (hover is curser)\n* data = is a list that we add traces into it\n* layout = it is dictionary.\n    * title = title of layout\n    * x axis = it is dictionary\n        * title = label of x axis\n        * ticklen = length of x axis ticks\n        * zeroline = showing zero line or not\n* fig = it includes data and layout\n* iplot() = plots the figure(fig) that is created by data and layout","7efd715c":"<a id=\"4\"><\/a> <br>\n# Bar Charts\n<font color='red'>\nFirst Bar Charts Example: citations and teaching of top 3 universities in 2014 (style1)\n<font color='black'>\n* Import graph_objs as *go*\n* Creating traces\n    * x = x axis\n    * y = y axis\n    * mode = type of plot like marker, line or line + markers\n    * name = name of the plots\n    * marker = marker is used with dictionary. \n        * color = color of lines. It takes RGB (red, green, blue) and opacity (alpha)\n        * line = It is dictionary. line between bars\n            * color = line color around bars\n    * text = The hover text (hover is curser)\n* data = is a list that we add traces into it\n* layout = it is dictionary.\n    * barmode = bar mode of bars like grouped\n* fig = it includes data and layout\n* iplot() = plots the figure(fig) that is created by data and layout","afdcb742":"<a id=\"8\"><\/a> <br>\n# Word Cloud\nNot a pyplot but learning it is good for visualization. Lets look at which country is mentioned most in 2011.\n* WordCloud = word cloud library that I import at the beginning of kernel\n    * background_color = color of back ground\n    * generate = generates the country name list(x2011) a word cloud","298d593e":"<a id=\"9\"><\/a> <br>\n# Box Plots\n<font color='red'>\n* Box Plots\n    * Median (50th percentile) = middle value of the data set. Sort and take the data in the middle. It is also called 50% percentile that is 50% of data are less that median(50th quartile)(quartile)\n        * 25th percentile = quartile 1 (Q1) that is lower quartile\n        * 75th percentile = quartile 3 (Q3) that is higher quartile\n        * height of box = IQR = interquartile range = Q3-Q1\n        * Whiskers = 1.5 * IQR from the Q1 and Q3\n        * Outliers = being more than 1.5*IQR away from median commonly.\n        \n    <font color='black'>\n    * trace = box\n        * y = data we want to visualize with box plot \n        * marker = color","1704e702":"It is an example of a notebook that I apply to develop myself in this field. This notebook is original \"DataI Team\". I would like to thank DataI Team for creating this resource. \n\nhttps:\/\/www.kaggle.com\/kanncaa1\/plotly-tutorial-for-beginners","78a2734a":"<a id=\"7\"><\/a> <br>\n# Histogram\n<font color='red'>\nLets look at histogram of students-staff ratio in 2011 and 2012 years. \n    <font color='black'>\n* trace1 = first histogram\n    * x = x axis\n    * y = y axis\n    * opacity = opacity of histogram\n    * name = name of legend\n    * marker = color of histogram\n* trace2 = second histogram\n* layout = layout \n    * barmode = mode of histogram like overlay. Also you can change it with *stack*","a44a4868":"<a id=\"10\"><\/a> <br>\n# Scatter Matrix Plots\n<font color='red'>\nScatter Matrix = it helps us to see covariance and relation between more than 2 features\n<font color='black'>\n* import figure factory as ff\n* create_scatterplotmatrix = creates scatter plot\n    * data2015 = prepared data. It includes research, international and total scores with index from 1 to 401\n    * colormap = color map of scatter plot\n    * colormap_type = color type of scatter plot\n    * height and weight","4e897ed9":"<a id=\"5\"><\/a> <br>\n# Pie Charts\n<font color='red'>\nPie Charts Example: Students rate of top 7 universities in 2016\n<font color='black'>\n* fig: create figures\n    * data: plot type\n        * values: values of plot\n        * labels: labels of plot\n        * name: name of plots\n        * hoverinfo: information in hover\n        * hole: hole width\n        * type: plot type like pie\n    * layout: layout of plot\n        * title: title of layout\n        * annotations: font, showarrow, text, x, y","9799aaae":"<a id=\"6\"><\/a> <br>\n# Bubble Charts\n<font color='red'>\nBubble Charts Example: University world rank (first 20) vs teaching score with number of students(size) and international score (color) in 2016\n<font color='black'>\n* x = x axis\n* y = y axis\n* mode = markers(scatter)\n*  marker = marker properties\n    * color = third dimension of plot. Internaltional score\n    * size = fourth dimension of plot. Number of students\n* text: university names"}}