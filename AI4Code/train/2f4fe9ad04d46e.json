{"cell_type":{"54b8d721":"code","e4861d48":"code","9c94f743":"code","11a81342":"code","7fdaddd6":"code","8baa4ed3":"code","56b649f4":"code","18dfcd7c":"code","ce0ad3a6":"code","e9abf334":"code","d3437e8a":"code","b1ef6650":"code","32ae7f59":"code","1d8821ef":"code","99a879c5":"code","d9b428b9":"code","8fb25d37":"code","c229d645":"code","5350661e":"code","34103d13":"code","979f607d":"code","1fc8bc8b":"code","7468de0a":"code","83229832":"code","1b131131":"code","a638d3fd":"markdown","b8bd4a59":"markdown","17c84673":"markdown","aea714be":"markdown","91f281b1":"markdown","dc191f0a":"markdown","a5414ad4":"markdown","8d06909f":"markdown"},"source":{"54b8d721":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn\nimport matplotlib.pyplot as plt \nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e4861d48":"\natlantic_hurricanes = pd.read_csv('\/kaggle\/input\/hurricane-database\/atlantic.csv')\natlantic_hurricanes.head\n\ndf = pd.DataFrame(atlantic_hurricanes)\ndf.shape #shows dataframe size - rows, columns\n","9c94f743":"booleans =[]\n\nfor date in df['Date']:\n    if date > 19500000:\n        booleans.append(True)\n    else: \n        booleans.append(False)\ndate_range = pd.Series(booleans)\nnew_df = df[date_range]\n\nnew_df.shape\nnew_df #filtered by date 1950-2015","11a81342":"#drop unnecessary titles\nnew_df.drop(['ID', 'Time' ,'Name', 'Minimum Pressure', 'Event'], axis = 1)","7fdaddd6":"#removing Hemisphere tags from coordiantes:\nnew_df['Longitude'] = new_df['Longitude'].map(lambda x: x.rstrip('W'))\nnew_df['Latitude'] = new_df['Latitude'].map(lambda x: x.rstrip('N'))\nnew_df['Latitude'] = new_df['Latitude'].map(lambda x: x.rstrip('S'))\nnew_df['Longitude'] = new_df['Longitude'].map(lambda x: x.rstrip('E'))\n\n","8baa4ed3":"new_df","56b649f4":"#converting Latitude and Longitude to floats:\nnew_df['Latitude'] = new_df['Latitude'].astype(float)\nnew_df['Longitude'] = new_df['Longitude'].astype(float)\n\n","18dfcd7c":"#filtering outside latitudes\nlat_filtered_df = new_df[(new_df['Latitude'].astype(float) >= float(9)) & (new_df['Latitude'].astype(float) <= float(26))]\n\nprint(lat_filtered_df.shape)\n\n#filtering out longitude by coordinate\n#convert longitude to negative\nlat_filtered_df['Longitude'] = (lat_filtered_df['Longitude'] * -1)\nlat_long_filtered_df = lat_filtered_df[(lat_filtered_df['Longitude'] >= -86) & (lat_filtered_df['Longitude'] <= float(-56))]\nprint(lat_long_filtered_df.shape)\n\n#from the clearly reduced row numbers, it is clear to see that filter has worked","ce0ad3a6":"#Converting all data to strings so can be searched\nall_columns = list(lat_long_filtered_df) # Creates list of all column headers\nlat_long_filtered_df[all_columns] = lat_long_filtered_df[all_columns].astype(str)\n\n#Converting all '-999' null values to 'NaN' which Python can automatically remove:\nlat_long_filtered_df = lat_long_filtered_df.replace('-999', np.nan)\n\n#the year 1967 has '-99' as maximum wind speed values - these must also be changed\nlat_long_filtered_df = lat_long_filtered_df.replace('-99', np.nan)\nlat_long_filtered_df","e9abf334":"#Changing date format:\nimport datetime as t\n#df['DateTime'] = pd.to_datetime(df['date'].astype(str), format='%Y%m%d')\n\nlat_long_filtered_df['Date'] = pd.to_datetime(lat_long_filtered_df['Date'].astype(str), format = '%Y %m %d')\nlat_long_filtered_df\n\n#adding year column\n\nlat_long_filtered_df['Year'] = lat_long_filtered_df['Date'].map(lambda x: x.year)\n\nlat_long_filtered_df\n\n","d3437e8a":"#checking for negative values\nnegatives =[]\nfor i in lat_long_filtered_df['Maximum Wind']:\n    if float(i) < 0:\n        negatives.append(i)\n        \nprint(negatives)","b1ef6650":"#dropping duplicate storms\n\nlat_long_filtered_df = lat_long_filtered_df.sort_values(by='Maximum Wind', ascending=False)\nlat_long_filtered_df = lat_long_filtered_df.drop_duplicates(subset='Name', keep=\"first\")\n\n#resort by year\nlat_long_filtered_df = lat_long_filtered_df.sort_values(by ='Year', ascending = True)\nlat_long_filtered_df.shape\n\nlat_long_filtered_df\n#left with 229 storms over 65 year period","32ae7f59":"#averages \n\n#average storms per year\n\n#total number of storms = 229 ; years = 65 \n\nprint(229\/65)\n\n#average wind speed over 65 years\n\nprint(lat_long_filtered_df['Maximum Wind'].sum()\/229)","1d8821ef":"#creating dataframe of number of storms per year\n\nnumber_of_storms={}\n\n\ncount = lat_long_filtered_df['Year'].value_counts()\n\n\n\n\ncount_df = pd.DataFrame(count)\n\ncount_df = count_df.reset_index()\n\n\n\ncount_df = count_df.rename(columns={\"index\": \"Year\", \"Year\": \"Count\"})\n\ncount_df = count_df.sort_values(by = \"Year\", ascending = True)\ncount_df\n","99a879c5":"#create averages\nlat_long_filtered_df['Maximum Wind'] = lat_long_filtered_df['Maximum Wind'].astype(float)\nlat_long_filtered_df.Year = lat_long_filtered_df.Year.astype(int)\n\n\ngrouped_df = lat_long_filtered_df.groupby(['Year'])\n\ndescribed_df = grouped_df.describe()\n\ndescribed_df = described_df.reset_index()\n\n\ndescribed_df = pd.DataFrame(described_df)\n\ndescribed_df.columns = ['Year', 'Count', \"Mean\", 'std', 'min', '25%', '50%', '75%', 'Max']\n\ndescribed_df","d9b428b9":"#adding month column to new dataframe\nmonth_df = lat_long_filtered_df\nmonth_df = month_df.drop(['Year'], axis=1)\n\nmonth_df['Month'] = month_df['Date'].map(lambda x: x.month)\n","8fb25d37":"#group by month\n\nmonth_df['Maximum Wind'] = month_df['Maximum Wind'].astype(float)\nmonth_df.Month = month_df.Month.astype(int)\n\ngrouped_df_month = month_df.groupby(['Month'])\n\ndescribed_df_month = grouped_df_month.describe()\n\ndescribed_df_month = described_df_month.reset_index()\n\n\ndescribed_df_month= pd.DataFrame(described_df_month)\n\ndescribed_df_month.columns = ['Month', 'Count', \"Mean\", 'std', 'min', '25%', '50%', '75%', 'Max']\n\ndescribed_df_month","c229d645":"#import colours\nimport plotly.express as px\nfrom textwrap import wrap\n\nnamed_colorscales = px.colors.named_colorscales()\nprint(\"\\n\".join(wrap(\"\".join('{:<12}'.format(c) for c in named_colorscales), 96)))","5350661e":"#creating bar chart, of year, count, and average speed \nimport plotly.express as px\n\nfig_1 = px.bar(described_df, \n                 x= 'Year',\n                 y='Count', \n                 color = 'Mean',\n                 color_continuous_scale=px.colors.sequential.OrRd,\n                 title = 'Frequency and Average Wind Speed <br>of Large Storms in Caribbean (1950-2015)',\n                 labels={'Count':'Number of Large Storms', 'Mean' : 'Average Wind <br> Speed (knots)'}\n                )\n\nfig_1.update_layout(title_x=0.5)\nfig_1.show()","34103d13":"#creating bar chart, of month, count, and average speed \nimport plotly.express as px\n\nfig_2 = px.bar(described_df_month, \n                 x= 'Month',\n                 y='Count', \n                 color = 'Mean',\n                 color_continuous_scale=px.colors.sequential.OrRd,\n                 title = 'Frequency and Average Max. Wind Speed <br> of Large Storms in Caribbean by Month <br> (1950-2015) <br>',\n                 text = 'Mean',\n                 labels={'Count':'Number of Large Storms', 'Mean' : 'Average Maximum <br> Wind Speed (knots)'}\n                )\n\nfig_2.update_layout(\n                    title_x=0.5,\n                    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        ticktext = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                                )\n                    )\nfig_2.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig_2.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig_2.show()","979f607d":"import plotly.graph_objects as go\n\nfig = go.Figure(data=go.Scattergeo(\n    \n    lat = lat_long_filtered_df['Latitude'],\n    lon = lat_long_filtered_df['Longitude'],\n\n)\n                )\n\n\nfig.update_geos(\n    center=dict(lon=-71, lat= 17),\n    lataxis_range=[7, 29], lonaxis_range=[-88, -55]\n                )","1fc8bc8b":"#test using scatter_geo\n\nimport plotly.graph_objects as go\nfig4 = go.Figure(go.Densitymapbox(\n                                  lat=lat_long_filtered_df.Latitude, \n                                  lon=lat_long_filtered_df.Longitude,\n                                  z=lat_long_filtered_df['Maximum Wind'],\n                                  #colorscale = True,\n                                  radius=30, \n                                  opacity =0.5,\n                                  hoverinfo = 'none',\n                            \n    \n                                  \n                                 ))\nfig4.update_layout( title = \"Heatmap of Maximum Wind Speed (knots)\", title_x = 0.5, mapbox_style= \"stamen-terrain\", mapbox_center_lon= -76, mapbox_center_lat = 17)\n\nfig4.show()","7468de0a":"import plotly.express as px\n\nfig_num = px.bar(count_df, \n                 x='Year', \n                 y='Count', \n                 title = 'Number of Large Storms in Caribbean by Year (1950-2015)',\n                 labels={'Count':'Number of Large Storms'}\n                )\n\nfig_num.update_layout(title_x=0.5)\nfig_num.show()","83229832":"# Hurricanes Per year\n\nimport plotly.graph_objects as go\nimport numpy as np\n\nfig5 = go.Figure(data=go.Scatter(\n    y = lat_long_filtered_df['Maximum Wind'],\n    x = lat_long_filtered_df['Year'],\n    mode = 'markers'\n))\nfig5.show()","1b131131":"\nfig5 = px.scatter(lat_long_filtered_df, x=\"Year\", y=\"Maximum Wind\", color='Maximum Wind',\n                 title=\"Maximum Wind Speed of Storms (knots) by Year\")\n\nfig5.show()","a638d3fd":"This data comes from the *Atlantic Hurricane Database* and is available to the public for analysis.","b8bd4a59":"Atlantic Hurricane**** database uses '-999' as a null value. These values must be removed.","17c84673":"# Filtering by year\nThe aim is to use accurate data, so anything data recorded prior to 1950 is being removed from the dataset.","aea714be":"# Data Visualisation\n\nHere the filtered data is going to be charted and plotted. ","91f281b1":"Now that the data is a little cleaner and specific to the region in question, it can be further analysed to describe the oceanographic conditions. ","dc191f0a":"# Examining Extreme Weather and Hurricanes in the Caribbean","a5414ad4":"Below, the workbook is being set-up.","8d06909f":"# Grouping by Month"}}