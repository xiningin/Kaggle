{"cell_type":{"0e585aa2":"code","aa39dfbe":"code","afaba548":"code","c589797f":"code","429d24c3":"code","b063a510":"code","7531f496":"code","3809f5cb":"code","f883e0f5":"code","5389f45c":"code","7aa7bfa0":"code","e63496c0":"code","0eb71857":"code","dab6d194":"code","fdbabf9c":"code","bdce560a":"code","2062d89d":"code","d187cdae":"code","71224c2e":"code","bf78b0e5":"code","bd4654b9":"code","d72b2df6":"code","c95d6aae":"code","211e5292":"code","2b0d9765":"code","69f55ee7":"code","ca6a3a35":"code","74d36c62":"code","0d45fab1":"code","ed940348":"code","800ad895":"code","5df87cca":"code","49abc83a":"code","c992c171":"code","ebc4281b":"code","90e87bd4":"code","e59b4c3e":"code","a35a8fe3":"code","82455a0e":"code","10de7812":"code","9d707405":"code","a992bc55":"code","634f8255":"code","4aae1484":"code","2050d704":"code","f1181e54":"code","a789fac8":"code","6ab26a20":"code","7befcc8a":"code","d2d6c4ed":"markdown","f977c918":"markdown","7410e2f8":"markdown","c71150f3":"markdown","8a598691":"markdown","ff8b98bd":"markdown","59cf6a99":"markdown","21795aea":"markdown","3fd7b296":"markdown","ec6b699f":"markdown","8290aa54":"markdown","e8cbaf2b":"markdown","5b613322":"markdown","7fa79cd0":"markdown","c4b32d44":"markdown","b1384b81":"markdown","0a701775":"markdown","caa6311b":"markdown","00e66bf4":"markdown"},"source":{"0e585aa2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa39dfbe":"import pandas as pd\nimport pandas_profiling as pp\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nimport scipy.stats as stats\nimport warnings\nwarnings.filterwarnings('ignore')\n","afaba548":"pd.set_option('display.max_columns', 500)\ndf = pd.read_csv('..\/input\/gtd\/globalterrorismdb_0718dist.csv', encoding=\"ISO-8859-1\", low_memory=False)\ndf.tail(10)","c589797f":"df.shape","429d24c3":"df.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country':'country1','country_txt':'Country','region':'Region1','region_txt':'Region','attacktype1':'attacktype1','attacktype1_txt':'AttackType','target1':'Target','nkill':'Killed','nwound':'Wounded','summary':'Summary','gname':'Group','targtype1_txt':'Target_type','weaptype1_txt':'Weapon_type','motive':'Motive'},inplace=True)","b063a510":"terror=df[['Year','Month','Day','Country','country1','Region','Region1', 'city','AttackType','attacktype1','Killed','Wounded','Target','Summary','Group','Target_type','Weapon_type','Motive']]\nterror","7531f496":"terror.info() #type checking","3809f5cb":"terror['Day'].apply(np.floor)\nterror['Month'].apply(np.floor)\nterror['Killed'].apply(np.floor)\nterror['Day'].apply(np.floor)\n#I realized there are a couple of decimal numbers in the Day column. Then I fixed like this.","f883e0f5":"terror.describe(include=['O']) # a couple information abaout objects.","5389f45c":"#replacing dtypes with correct ones.\nterror['attacktype1'] = pd.Categorical(terror.attacktype1)\nterror['Region1'] = pd.Categorical(terror.Region1)\nterror['country1'] = pd.Categorical(terror.country1)\nterror['Country'] = pd.Categorical(terror.Country)\nterror['Region'] = pd.Categorical(terror.Region)\nterror['city'] = pd.Categorical(terror.city)\nterror['AttackType'] = pd.Categorical(terror.AttackType)\nterror['Group'] = pd.Categorical(terror.Group)\nterror['Target_type'] = pd.Categorical(terror.Target_type)\nterror['Weapon_type'] = pd.Categorical(terror.Weapon_type)\n","7aa7bfa0":"terror.info() #looking good","e63496c0":"terror.describe() #descriptive statistics for numeric variables","0eb71857":"terror.groupby(by='Month').agg(['count']) #look what I found.0 as a month. We need to fix this. ","dab6d194":"terror['Day'] = terror['Day'].apply(lambda x: np.random.randint(1,32) if x == 0 else x)\nterror['Month'] = terror['Month'].apply(lambda x: np.random.randint(1,13) if x == 0 else x)\n\n#There were too many 0 as Day value too. We changed 0 values with random integers between 1-31.  So we did not miss any value. ","fdbabf9c":"a = terror.groupby(by='Day').agg(['count'])\nb = a['Year']\nb.columns = ['count']\nb = b.reset_index()\nb\n\n#we checked is there any 0 value. looking good.","bdce560a":"terror['date'] = pd.to_datetime(terror[['Year','Month', 'Day' ]], errors= 'coerce') #created a new column as merging year-month-day.\nterror['date'] = pd.to_datetime(terror['date']) #double check\nterror['day_of_week'] = terror['date'].dt.day_name() #a new columns as day of week. \nterror #let's see what's new.","2062d89d":"terror.dropna(how=\"all\",inplace=True) #If all values are NA, drop that row or column.","d187cdae":"display(terror.isnull().sum().sort_values(ascending=False))","71224c2e":"#missing values percent\ndef missing_values_(terror): \n    missing_value = terror.isnull().sum()\n    missing_value_percent = 100 * terror.isnull().sum()\/len(terror)\n    missing_values_ = pd.concat([missing_value, missing_value_percent], axis=1)\n    missing_values_last = missing_values_.rename(\n    columns = {0 : 'Missing Values', 1 : '% '})\n    return missing_values_last\nmissing_values_(terror)","bf78b0e5":"terror.dropna(subset=[\"date\"],inplace=True) #the point was the date in this data, to me. So I just delete that 23 rows.\nterror['Motive'].fillna(value='nothing', inplace=True) #I did not want to miss any value. So I replaced them with a value that has the same type.\nterror['Summary'].fillna(value='nothing', inplace=True)\nterror['city'].fillna(value='Unknown', inplace=True)\nterror['Target'].fillna(value='Unknown', inplace=True)\nterror[\"Killed\"].fillna(terror[\"Killed\"].mean(), inplace=True)\nterror[\"Wounded\"].fillna(terror[\"Wounded\"].mean(), inplace=True)\n","bd4654b9":"\nprint('which country has the most terrorist attacks? :',terror['Country'].value_counts().index[0])\nprint('which region has the most terrorist attacks?:',terror['Region'].value_counts().index[0])\nprint('Maximum people killed in an attack are:',terror['Killed'].max(),'that took place in',terror.loc[terror['Killed'].idxmax()].Country)\nprint('How many people wounded in last 50 years due the Terrorist Attacks :',terror['Wounded'].sum())\nprint('How many people died in last 50 years due the Terrorist Attacks :',terror['Killed'].apply(np.floor).sum())\n","d72b2df6":"\n#pp.ProfileReport(terror) # I just learned why it dosen't work in kaggle. There is some version issues. But it works on Jypter Notebook. ","c95d6aae":"#boxplots\n\ntitle_style = {'family': 'Century Gothic', 'color': 'green', 'size': 20 }\naxis_style  = {'family': 'Century Gothic', 'color': 'darkblue', 'size': 25}\nvalues = {'AttackType':1,'Target_type':2, 'day_of_week':3,   'Region':4,   'AttackType':5,   'Weapon_type':6 }\nplt.figure(figsize=(15,45))\n\nfor value, i in values.items():\n    plt.subplot(6,1,i)\n    sns.boxplot(x=value, y=\"Year\", data=terror,\n            whis=[0, 100], palette=\"vlag\")\n    plt.xticks(rotation = 90)\n    plt.title(value ,fontdict = title_style)\n\nplt.show()","211e5292":"a = terror.corr()\nmask = np.triu(np.ones_like(a, dtype=bool))\nf, ax = plt.subplots(figsize=(11, 9))\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\nsns.heatmap(a, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.title(\"Correlation Matrix (Data)\")","2b0d9765":"plt.figure(figsize=(15,15))\nsns.heatmap(a, annot=True, annot_kws={\"size\": 10}, linewidths=1, vmin=0, vmax=0.6, cmap='viridis')\nplt.title(\"Correlation Matrix (Data)\")\nplt.show() #let's make it clear.","69f55ee7":"weapon_cross = pd.crosstab(terror[\"Weapon_type\"], terror[\"Region\"])\nweapon_cross","ca6a3a35":"\nprint(stats.chisquare(weapon_cross, axis=None)) #p-value of 0 and test statistic of 1728110 indicate that differences are statistically significant.","74d36c62":"plt.figure(figsize=(15,15))\nsns.countplot(y=\"Weapon_type\", hue=\"Region\", data=terror)\nplt.title(\"Weapon Types by Regions\")\nplt.ylabel(\"Weapon Types\")\nplt.xlabel(\"Count\")\nplt.show()","0d45fab1":"terror['date'] = pd.to_datetime(terror['date'])\nk_by_year = terror.groupby('date')['Killed'].sum().reset_index()\nterror['date'] = pd.to_datetime(terror['date'])\nk_by_year = k_by_year.set_index('date')","ed940348":"k_by_year.plot(figsize=(15, 6))\nplt.title(\"Number of Deaths due to Terrorism by Years\")\nplt.show()","800ad895":"rsample_k_by_year = k_by_year['Killed'].resample('MS').mean()\nrsample_k_by_year.plot(figsize=(20, 9))\nplt.title(\"The Average Number of Deaths due to Terrorism by Years\")\nplt.show()","5df87cca":"k_by_year_1 = terror.groupby('Year')['Killed'].sum().reset_index()\nk_by_year_1 = k_by_year_1.set_index('Year')\nk_by_year_1.columns = ['Killed']\nk_by_year_1 = k_by_year_1.reset_index()\nTotal = k_by_year_1['Killed'].sum()\nk_by_year_1['Ratio'] = k_by_year_1['Killed']\/ Total\nk_by_year_1 #It's the long way I know but I did like this though. Not Pythonic that much.","49abc83a":"plt.figure(figsize=(25, 10))\nsns.barplot(x = 'Year', y = 'Killed', data = k_by_year_1)\nplt.title(\"The Ratio of Yearly Deaths to Total Deaths\")\nplt.xticks(rotation=90)\nplt.show() #but it works right. <3","c992c171":"coun_terror=terror['Country'].value_counts()[:15].to_frame()\ncoun_terror.columns=['Attacks']\ncoun_kill=terror.groupby('Country')['Killed'].sum().to_frame()\ncoun_terror.merge(coun_kill,left_index=True,right_index=True,how='left').plot.bar(width=0.9)\nplt.title(\"The Ratio Between Attacks and Deaths\")\nfig=plt.gcf()\nfig.set_size_inches(18,6)\nplt.show() #actually I saw this from another notebook and I liked it. I will use this to the show you something different.","ebc4281b":"#terror_iq=terror[terror['Country']=='Iraq']\n#terror_pk=terror[terror['Country']=='Pakistan']\n#terror_sp=terror[terror['Country']=='Spain']\n\n\n#f,ax=plt.subplots(1,2,figsize=(25,12))\n#sns.countplot(y='AttackType',data=terror_pk,ax=ax[0])\n#ax[0].set_title('Favorite Attack Types')\n#ax[0].set_title('Favorite Attack Types Pakistan')\n\n#sns.countplot(y='AttackType',data=terror_iq,ax=ax[1])\n#ax[1].set_title('Favorite Attack Types Iraq')\n#plt.subplots_adjust(hspace=0.3,wspace=0.6)\n#ax[0].tick_params(labelsize=15)\n#ax[1].tick_params(labelsize=15)\n#plt.show() #doesn't work because of version","90e87bd4":"plt.subplots(figsize=(15,6))\nsns.countplot(terror['Weapon_type'],palette='inferno',order=terror['Weapon_type'].value_counts().index)\nplt.xticks(rotation=90)\nplt.title('Favorite Weapons')\nplt.show()","e59b4c3e":"general_sum = terror.groupby(by='Region').sum()\na7 = general_sum['Killed']\na7.columns = ['sum']\na7 = a7.reset_index()\na7 \n\n#how many peoople died and where.","a35a8fe3":"plt.figure(figsize=(15,10))\nsns.barplot(x = 'Region', y = 'Killed', data = terror)\nplt.xticks(rotation = 90)\nplt.title('Deaths by Regions')\nplt.show()","82455a0e":"plt.figure(figsize=(15, 15))\nsns.lineplot(x = 'Year', y = 'Killed', data = terror, hue = 'Region')\nplt.title('Deaths by Years&Regions')\nplt.show()","10de7812":"terror.nlargest(10, ['Killed']) ","9d707405":"plt.figure(figsize=(20,10))\nsns.countplot(x=\"day_of_week\", hue=\"Region\", data=terror)\nplt.title(\"Day of Week by Regions\")\nplt.show()","a992bc55":"a1 = terror.groupby(by='day_of_week').agg(['count'])\na2 = a1['Region']\na2.columns = ['count']\na2 = a2.reset_index()\na2 #how many attacks happened.","634f8255":"plt.figure(figsize=(15,10))\nsns.barplot(y = 'day_of_week', x = 'count', data = a2)\nplt.title(\"Attacks by Days\")\nplt.show()\n#how many attacks happened.","4aae1484":"#top_groups10=terror[terror['Group'].isin(terror['Group'].value_counts()[1:11].index)]\n#pd.crosstab(top_groups10.Year,top_groups10.Group).plot(color=sns.color_palette('Paired',10))\n#fig=plt.gcf()\n#fig.set_size_inches(18,10)\n#plt.show() #it doesn't work because of version","2050d704":"terror['Group'].value_counts()[:10].sort_values(ascending=False) #Terrorist groups by the attack numbers","f1181e54":"a3 = terror.groupby(by='AttackType').agg(['count'])\na4 = a3['Year']\na4.columns = ['count']\na4 = a4.reset_index()\na4","a789fac8":"plt.figure(figsize=(15,10))\nsns.barplot(y = 'AttackType', x = 'count', data = a4)\nplt.title(\"The Most Common Attack Types\")\nplt.show()","6ab26a20":"plt.subplots(figsize=(15,6))\nsns.countplot(terror['Target_type'],palette='inferno',order=terror['Target_type'].value_counts().index)\nplt.xticks(rotation=90)\nplt.title('Target Groups')\nplt.show()","7befcc8a":"text = terror.Motive.dropna()\ntext = \" \".join(str(motive) for motive in terror.Motive )\n\n\n# Create stopword list:\nstopwords = set(STOPWORDS)\n#add additional stopwords\nstopwords.update([\"say\",\"NaN\",\"specific\" ,\"carried\",\"incident\",\"responsibility\",\"claimed\",\"noted\",\"minority\", \"nothing\",\n                  \"party\",\"Party\",\"noted\",\"attack\",\"motive\",\"source\",\"sources\",\"stated\",\"part\",\"new\", \"us\",\"The\", \"specific\", \"motive\", \"for\",\n                  \"attack\", \"is\", \"unknown\", \"which\", \"Unknown\", \"occured\",\"Occured\", \"state\", \"reported\", \"member\", \"group\", \"area\", \"related\", \"intended\",\n                  \"larger\",\"trend\",\"may\",\"target\",\"says\",\"call\",\"unknown\",\"nan\",\"NAN\",\"majority\",\"communities\",\"victim\", \"killed\" ,\"people\", \"posited\", \"accused\"])\n\nmask = np.array(Image.open(\"..\/input\/xxxxxx\/xxx.png\"))\n\n#font = ImageFont.load_default() #font_path= font,\nwordcloud_usa = WordCloud(stopwords=stopwords, background_color=\"white\", mode=\"RGBA\",  max_words=100000000, mask=mask).generate(text)\n\n# create coloring from image\nimage_colors = ImageColorGenerator(mask)\nplt.figure(figsize=[15,15])\nplt.imshow( wordcloud_usa.recolor(color_func=image_colors),cmap=plt.cm.gist_heat, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.title(\"What Motivate People to Do This?\")\n# store to file \nplt.savefig(\"motive_word.png\", format=\"png\")\n\nplt.show()","d2d6c4ed":"# **1.Needed Libraries**","f977c918":"### Attack Types by Groups\n","7410e2f8":"# 2.Getting Data Ready","c71150f3":"# 6.Global Terror Attacks","8a598691":"### Total Deaths by Regions","ff8b98bd":"# 3.Handling Missing Values","59cf6a99":"# 4.Get to Know The Data Better","21795aea":"### The attacks that cause the most death","3fd7b296":"### Attack Types","ec6b699f":"### The Ratio of Yearly Deaths to Total Deaths\n","8290aa54":"### Target Groups","e8cbaf2b":"### Friday& Saturday : Do worship days affect terrorism?","5b613322":"I decided to work with less data.","7fa79cd0":"### What Motivate People to Do This?","c4b32d44":"# 5.Profiling Report ","b1384b81":"### Total Deaths by Regions&Days\n","0a701775":"Does weapon type depend on regions?","caa6311b":"### The Ratio Between Attacks and Deaths ","00e66bf4":"### How many people loose their lives every year? ###\n"}}