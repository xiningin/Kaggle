{"cell_type":{"71c2f608":"code","01bad9d1":"code","c6fe13e8":"code","f36f0052":"code","f486cf9b":"code","77da143b":"code","0e71a918":"code","222c855c":"code","136ecff0":"code","17b8a298":"code","0fa9f973":"code","844ed58c":"code","710606c5":"code","bd38700d":"code","503300d0":"code","46bd07b8":"code","dddfca09":"code","9916621a":"code","bb6e9014":"code","bcfca5e3":"code","93092956":"code","43241f6e":"code","c8d5d7b6":"code","388d3040":"code","fad3fff9":"code","ce1e00ba":"code","d0fd20d2":"code","051a8591":"code","b7995501":"code","520b0c7b":"code","1e649ccc":"code","dff4f4a8":"code","c0910c7a":"code","8db250b1":"code","99b09868":"code","aebfee8f":"code","f2d30bd4":"code","9e1522f5":"code","dea9a12a":"code","bc035c1c":"code","3cb203b3":"code","74c6f6e7":"code","4b4530b9":"code","cceaa58d":"code","f144a6d3":"code","87efb4b9":"code","ed0fea05":"code","70032283":"code","b21cbe4d":"code","74c495b6":"code","6ff5efd3":"code","c91ff924":"code","aa811c81":"code","f55ca9ce":"code","7d714056":"code","0d933281":"code","d6912627":"code","5592be4e":"code","c145518c":"code","ce544823":"code","fdbac5ba":"code","f77b8f29":"code","56d2efb1":"code","2669a60e":"code","710ba94f":"code","6187b7d3":"code","51bbc190":"code","c2e57595":"code","1d6a84a5":"code","a044235b":"code","052a1841":"code","66621390":"code","92af2c0d":"code","05b3d2c4":"code","d0a95280":"code","124dbbea":"code","4565fa65":"code","1210b119":"code","04a074fb":"code","d8b7ac91":"code","dbd8aa19":"code","3ae75be0":"markdown","09330cf8":"markdown","ad0a1946":"markdown","193a4e2d":"markdown","0fc97ffe":"markdown","2a1d2f6b":"markdown","559e8a47":"markdown","8edd8f90":"markdown","86dfbf8d":"markdown","e22ba762":"markdown","e31f27f9":"markdown","e8ec3dd4":"markdown","74ee459c":"markdown","0b911db1":"markdown","c2e85839":"markdown","91f0a024":"markdown","3d34dc3d":"markdown","094c0be9":"markdown","70c46196":"markdown","5469c469":"markdown","d266018f":"markdown","be5f0ef2":"markdown","492ceb43":"markdown","96042c1d":"markdown","050c6dc3":"markdown","1e2c342b":"markdown","4d9562ea":"markdown"},"source":{"71c2f608":"import pandas as pd","01bad9d1":"data = pd.read_csv('..\/input\/coursera-course-dataset\/coursea_data.csv')","c6fe13e8":"# lookup columns\ndata.head()","f36f0052":"# Summarize only the data needed for analysis\ndata[['course_title','course_rating','course_difficulty','course_students_enrolled']]","f486cf9b":"# create DataFrame\ndf = pd.DataFrame(data[['course_title','course_rating','course_difficulty','course_students_enrolled']])\ndf","77da143b":"df.columns=['title', 'rating', 'level', 'enrolled']\ndf","0e71a918":"# lookup level column\ndf['level'].unique()","222c855c":"# Transforms 'level column' into numeric form\ndef levels(x):\n    if x == 'Beginner':\n        return 1\n    elif x == 'Mixed':\n        return 2\n    elif x == 'Intermediate':\n        return 3\n    elif x == 'Advanced':\n        return 4","136ecff0":"df['level'] = df['level'].apply(levels)\ndf['level'].unique()","17b8a298":"# lookup enrolled column\ndf['enrolled']","0fa9f973":"# Transforms 'K' into numeric form\ndef counts(x):\n    rx = x.replace('k','000')\n    if '.' in rx:\n        rx = rx.replace('.','')\n        rx = rx[:-1]\n        return int(rx)\n    return int(rx)","844ed58c":"# Test function 'counts()'\ndf['enrolled'].apply(counts)","710606c5":"# Apply the function to the dataframe\ndf['enrolled'] = df['enrolled'].apply(counts)\ndf","bd38700d":"# Extract\/check the lecture containing the word 'Data' in the Frame\ndf[df['title'].str.contains('Data')]","503300d0":"# Extract\/check the lecture containing the word 'data' in the Frame\ndf[df['title'].str.contains('data')]","46bd07b8":"# All start with the form 'D'(Uppercase). Sort courses containing 'Data' by 'enrolled'\ndf[df['title'].str.contains('Data')].sort_values(by=['enrolled'], ascending=False)","dddfca09":"# Exclude low rated courses\ndf[df['title'].str.contains('Data')].sort_values(by=['enrolled'], ascending=False)['rating'].min()","9916621a":"# All the ratings are good. Save it as a new variable 'Courses_data'.\nCourses_data = df[df['title'].str.contains('Data')].sort_values(by=['enrolled'], ascending=False)","bb6e9014":"# Make sure it is well saved\nCourses_data.head()","bcfca5e3":"# Extract Courses that 100,000 or more students are enrolled\nCourses_data[Courses_data['enrolled']>100000]","93092956":"# Look up the number of the courses\nlen(Courses_data[Courses_data['enrolled']>100000])","43241f6e":"# Save courses with 100000 or more students enrolled and Extract Top 10 Courses seperately.\nBestSellers = Courses_data[Courses_data['enrolled']>100000]\nAboutData_Top_Ten = BestSellers[:10]","c8d5d7b6":"AboutData_Top_Ten","388d3040":"# look up all 'python' courses\ndf[df['title'].str.contains('Python')].sort_values(by=['enrolled'], ascending=False)","fad3fff9":"# 'python' courses that 100,000 or more students enrolled\nPython_Courses = df[df['title'].str.contains('Python')].sort_values(by=['enrolled'], ascending=False)\nPython_Courses[Python_Courses['enrolled']>100000]","ce1e00ba":"# save data\nPython_BestSellers = Python_Courses[Python_Courses['enrolled']>100000]","d0fd20d2":"# look up R courses(1)\ndf[df['title'].str.contains('R ')].sort_values(by=['enrolled'], ascending=False)","051a8591":"# look up R courses(2)\n# Extract 691 row\ndf[df['title'].str.contains('R ')].sort_values(by=['enrolled'], ascending=False).iloc[0,:]","b7995501":"# save the extracted row\nR_temp_1 = df[df['title'].str.contains('R ')].sort_values(by=['enrolled'], ascending=False).iloc[0,:]\nR_temp_1=pd.DataFrame(R_temp_1).T","520b0c7b":"# look up R courses(2)\ndf[df['title'].str[-1] =='R'].sort_values(by=['enrolled'], ascending=False)","1e649ccc":"# look up R courses(2)\n# Extract 199, 753 rows\ndf[df['title'].str[-1] =='R'].sort_values(by=['enrolled'], ascending=False).iloc[:2,:]","dff4f4a8":"# save rows that extracted\nR_temp_2 = df[df['title'].str[-1] =='R'].sort_values(by=['enrolled'], ascending=False).iloc[:2,:]","c0910c7a":"pd.concat([R_temp_1, R_temp_2])","8db250b1":"# save to R_BestSellers\nR_BestSellers = pd.concat([R_temp_1, R_temp_2])","99b09868":"# look up Java courses\ndf[df['title'].str.contains('Java')].sort_values(by=['enrolled'], ascending=False)","aebfee8f":"Java_Courses = df[df['title'].str.contains('Java')].sort_values(by=['enrolled'], ascending=False)\nJava_BestSellers = Java_Courses[Java_Courses['enrolled']>100000]\nJava_BestSellers","f2d30bd4":"# JavaScript is also included. Exclude it\nJava_BestSellers = Java_BestSellers[Java_BestSellers['title'].str.contains('JavaScript')==False]\nJava_BestSellers = Java_BestSellers[Java_BestSellers['title'].str.contains('Javascript')==False]\nJava_BestSellers","9e1522f5":"# look up JavaSc\ndf[df['title'].str.contains('JavaScript')].sort_values(by=['enrolled'], ascending=False)","dea9a12a":"JavaScript_temp_1 = df[df['title'].str.contains('JavaScript')].sort_values(by=['enrolled'], ascending=False).iloc[0,:]\nJavaScript_temp_1 = pd.DataFrame(JavaScript_temp_1).T","bc035c1c":"# Temporary allocation before merging\nJavaScript_temp_1","3cb203b3":"df[df['title'].str.contains('Javascript')].sort_values(by=['enrolled'], ascending=False)","74c6f6e7":"# Temporary allocation before merging\nJavaScript_temp_2 = df[df['title'].str.contains('Javascript')].sort_values(by=['enrolled'], ascending=False)","4b4530b9":"pd.concat([JavaScript_temp_1, JavaScript_temp_2])","cceaa58d":"# save to JavaScript_BestSellers\nJavaScript_BestSellers = pd.concat([JavaScript_temp_1, JavaScript_temp_2])","f144a6d3":"# look up courses about Django\ndf[df['title'].str.contains('Django')].sort_values(by=['enrolled'], ascending=False)","87efb4b9":"# look up courses about Flask\ndf[df['title'].str.contains('Flask')].sort_values(by=['enrolled'], ascending=False)","ed0fea05":"# look up courses about React\ndf[df['title'].str.contains('React')].sort_values(by=['enrolled'], ascending=False)","70032283":"React_Courses = df[df['title'].str.contains('React')].sort_values(by=['enrolled'], ascending=False)\n# save to React_BestSellers\nReact_BestSellers = React_Courses[React_Courses['enrolled']>100000]","b21cbe4d":"React_BestSellers","74c495b6":"# look up the courses about Vue\ndf[df['title'].str.contains('Vue')].sort_values(by=['enrolled'], ascending=False)","6ff5efd3":"\ndf[df['title'].str.contains('vue')].sort_values(by=['enrolled'], ascending=False)","c91ff924":"# look up the courses about Tensorflow\ndf[df['title'].str.contains('TensorFlow')].sort_values(by=['enrolled'], ascending=False)","aa811c81":"Tensorflow_Courses = df[df['title'].str.contains('TensorFlow')].sort_values(by=['enrolled'], ascending=False)\n# Save to Tensorflow_BestSellers\nTensorflow_BestSellers = Tensorflow_Courses[Tensorflow_Courses['enrolled']>100000]\nTensorflow_BestSellers","f55ca9ce":"# look up the courses about PyTorch\ndf[df['title'].str.contains('PyTorch')].sort_values(by=['enrolled'], ascending=False)","7d714056":"# look up the courses about 'Web'\ndf[df['title'].str.contains('Web')].sort_values(by=['enrolled'], ascending=False)","0d933281":"Web_Courses = df[df['title'].str.contains('Web')].sort_values(by=['enrolled'], ascending=False)\n# save to Web_BestSellers\nWeb_BestSellers = Web_Courses[Web_Courses['enrolled']>100000]\nWeb_BestSellers","d6912627":"# look up the courses about 'App'\ndf[df['title'].str.contains('App')].sort_values(by=['enrolled'], ascending=False)","5592be4e":"App_Courses = df[df['title'].str.contains('App')].sort_values(by=['enrolled'], ascending=False)\n# save to App_BestSellers\nApp_BestSellers = App_Courses[App_Courses['enrolled']>100000]\nApp_BestSellers","c145518c":"# look up the courses about 'Algorithm'\ndf[df['title'].str.contains('Algorithm')].sort_values(by=['enrolled'], ascending=False)","ce544823":"Algorithm_Courses = df[df['title'].str.contains('Algorithm')].sort_values(by=['enrolled'], ascending=False)\n# save to Algorigthm_BestSellers\nAlgorithm_BestSellers = Algorithm_Courses[Algorithm_Courses['enrolled']>100000]\nAlgorithm_BestSellers","fdbac5ba":"# look up the courses about 'Computer'\ndf[df['title'].str.contains('Computer')].sort_values(by=['enrolled'], ascending=False)","f77b8f29":"Computer_Courses = df[df['title'].str.contains('Computer')].sort_values(by=['enrolled'], ascending=False)\n# save to Computer_BestSellers\nComputer_BestSellers = Computer_Courses[Computer_Courses['enrolled']>100000]\nComputer_BestSellers","56d2efb1":"# look up the courses about 'Hacking'\ndf[df['title'].str.contains('Hacking')].sort_values(by=['enrolled'], ascending=False)","2669a60e":"# Check related data\ndf[df['title'].str.contains('Security')].sort_values(by=['enrolled'], ascending=False)","710ba94f":"Security_Courses = df[df['title'].str.contains('Security')].sort_values(by=['enrolled'], ascending=False)\n# save to Security_BestSellers\nSecurity_BestSellers = Security_Courses[Security_Courses['enrolled']>100000]\nSecurity_BestSellers","6187b7d3":"# look up the courses about 'Finance'\ndf[df['title'].str.contains('Finance')].sort_values(by=['enrolled'], ascending=False)","51bbc190":"Finance_Courses = df[df['title'].str.contains('Finance')].sort_values(by=['enrolled'], ascending=False)\nFinance_BestSellers = Finance_Courses[Finance_Courses['enrolled']>100000]\nFinance_BestSellers","c2e57595":"# look up the courses about 'Commerce'\ndf[df['title'].str.contains('Commerce')].sort_values(by=['enrolled'], ascending=False)","1d6a84a5":"# Check related data\ndf[df['title'].str.contains('Shopping')].sort_values(by=['enrolled'], ascending=False)","a044235b":"# Check related data\ndf[df['title'].str.contains('Business')].sort_values(by=['enrolled'], ascending=False)","052a1841":"Business_Courses = df[df['title'].str.contains('Business')].sort_values(by=['enrolled'], ascending=False)\n# save to Business_BestSellers\nBusiness_BestSellers = Business_Courses[Business_Courses['enrolled']>100000]\nBusiness_BestSellers","66621390":"# look up the courses about 'Neural Network'\ndf[df['title'].str.contains('Neural')].sort_values(by=['enrolled'], ascending=False)","92af2c0d":"# Check related data\ndf[df['title'].str.contains('CNN')].sort_values(by=['enrolled'], ascending=False)","05b3d2c4":"# Check related data\ndf[df['title'].str.contains('RNN')].sort_values(by=['enrolled'], ascending=False)","d0a95280":"# Check related data\ndf[df['title'].str.contains('Reinforcement')].sort_values(by=['enrolled'], ascending=False)","124dbbea":"# look up the courses about 'Neural Network'\nNeural_Courses = df[df['title'].str.contains('Neural')].sort_values(by=['enrolled'], ascending=False)\n# save to 'Neural_BestSellers'\nNeural_BestSellers = Neural_Courses[Neural_Courses['enrolled']>100000]\nNeural_BestSellers","4565fa65":"# look up the courses about 'Machine Learning'\ndf[df['title'].str.contains('Machine')].sort_values(by=['enrolled'], ascending=False)","1210b119":"Machine_Courses = df[df['title'].str.contains('Machine')].sort_values(by=['enrolled'], ascending=False)\n# save to 'Machine_BestSellers'\nMachine_BestSellers = Machine_Courses[Machine_Courses['enrolled']>100000]\nMachine_BestSellers","04a074fb":"# look up the courses about 'Deep Learning'\ndf[df['title'].str.contains('Deep')].sort_values(by=['enrolled'], ascending=False)","d8b7ac91":"# All over 100,000 students, so save to 'BestSellers'\nDeep_BestSellers = df[df['title'].str.contains('Deep')].sort_values(by=['enrolled'], ascending=False)","dbd8aa19":"Deep_BestSellers.head()","3ae75be0":"### 5. Django Best Sellers","09330cf8":"### 9. Machine Learning","ad0a1946":"### 1. Python Best Sellers","193a4e2d":"### 7. React Best Sellers","0fc97ffe":"### 7. Commerce","2a1d2f6b":"### 1. Web","559e8a47":"## Step 4. Preprocessing","8edd8f90":"## Step 6. Apply - Sector\nFinally, we will find out popular lectures by filed.\n\n1. Web\n2. App\n3. Algorithm\n4. Computer\n5. hacking\n6. Finance\n7. Commerce\n8. neural network\n9. machine learning \n10. deep learning","86dfbf8d":"## Step 2. Data Lookup","e22ba762":"### 4. Computer","e31f27f9":"## Step 5. Apply - Language\/Framework\nSo far, for 890 Coursera lectures containing 'Data' have been extracted in the order of cumulative students. In this way, let's check the best sellers by language or by framework.\n\n1. **Python** Best Sellers\n2. **R** Best Sellers\n3. **Java** Best Sellers\n4. **JavaScrips** Best Sellers\n5. **Django** Best Sellers\n6. **Flask** Best Sellers\n7. **React** Best Sellers\n8. **Vue** Best Sellers\n9. **Tensorflow** Best Sellers\n10. **PyTorch** Best Sellers","e8ec3dd4":"## Step 1. Data Selection\n\n### Coursera Course Dataset | [Kaggle](https:\/\/www.kaggle.com\/siddharthm1698\/coursera-course-dataset#)\n>This dataset contains mainly 6 columns and 890 course data. The detailed description:\n1. **course_title** : Contains the course title.\n2. **course_organization** : It tells which organization is conducting the courses.\n3. **courseCertificatetype** : It has details about what are the different certifications available in courses.\n4. **course_rating** : It has the ratings associated with each course.\n5. **course_difficulty** : It tells about how difficult or what is the level of the course.\n6. **coursestudentsenrolled** : It has the number of students that are enrolled in the course.","74ee459c":"## Step 3. Create DataFrame","0b911db1":"### 10. PyTorch Best Sellers","c2e85839":"### 2. App","91f0a024":"### 6. Flask Best Sellers","3d34dc3d":"### 5. Hacking","094c0be9":"### 10. Deep Learning","70c46196":"### 2. R Best Sellers","5469c469":"### 3. Algorithm","d266018f":"### 8. Vue Best Sellers","be5f0ef2":"### 9. Tensorflow Best Sellers","492ceb43":"# What are the most popular courses in Coursera?\nThis is Data Analysis Project with Coursera course dataset(kaggle).\n\n- First, Let's look at Coursera courses related to 'Data'\n- And then Look at the entire courses by programming language(or Frameworks)\n- Then by type(field or sector)\n","96042c1d":"### 4. JavaScript Best Sellers\n","050c6dc3":"### 3. Java Best Sellers","1e2c342b":"### 6. Finance","4d9562ea":"### 8. Neural Network"}}