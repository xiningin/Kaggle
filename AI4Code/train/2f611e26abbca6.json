{"cell_type":{"56181d55":"code","774d8d02":"code","a469d211":"code","ffc97955":"code","b95ec847":"code","4cc9a9c7":"code","cd5281aa":"code","49faec53":"code","1d991189":"code","273ca82b":"code","ac88ae30":"code","3e3bb70f":"code","5a6dfb2a":"code","4222298b":"code","c9bdf005":"code","309cc582":"code","d16728e8":"code","bb8e4159":"code","85358ff7":"code","ba544c8e":"markdown","ff98a400":"markdown","ff36b965":"markdown","3a541f04":"markdown","68fc6249":"markdown","97011c94":"markdown","38dc5727":"markdown","e80535be":"markdown","bf705c8b":"markdown","d50d37ee":"markdown","88ab4224":"markdown","9217e206":"markdown","02a9f98c":"markdown","0175bbb3":"markdown","668c7697":"markdown","8bea0972":"markdown"},"source":{"56181d55":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","774d8d02":"#IRAhandle_tweets_1 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_1.csv\")\n#IRAhandle_tweets_2 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_2.csv\")\n#IRAhandle_tweets_3 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_3.csv\")\n#IRAhandle_tweets_4 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_4.csv\")\n#IRAhandle_tweets_5 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_5.csv\")\n#IRAhandle_tweets_6 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_6.csv\")\n#IRAhandle_tweets_7 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_7.csv\")\n#IRAhandle_tweets_8 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_8.csv\")\n#IRAhandle_tweets_9 = pd.read_csv(\"..\/input\/russian-troll-tweets\/IRAhandle_tweets_9.csv\")","a469d211":"#Read all CSV files into a list\nprefix = '..\/input\/russian-troll-tweets\/IRAhandle_tweets_'\next = '.csv'\nframes = [pd.read_csv(prefix + str(i) + ext) for i in range(1,10)]","ffc97955":"#Concatenate the dataframes\ntweets = pd.concat(frames)","b95ec847":"# We can print out the titles of all the columns, this can help us organize our information\nprint(list(tweets.columns))","4cc9a9c7":"#Print Tweets\nprint(tweets)","cd5281aa":"#Display Tweets\ntweets","49faec53":"#Filter by year \ntweets = tweets[tweets['publish_date'].str.contains('2016')]\n\ntweets","1d991189":"#Filter by Language \ntweets = tweets[tweets['language'].str.contains('English')]\n\ntweets","273ca82b":"#Filter by Content \ntweets = tweets[tweets['content'].str.contains('Trump')]\n\ntweets","ac88ae30":"#Drop Columns\ntweets = tweets.drop(['external_author_id', 'post_type','updates','new_june_2018','retweet','harvested_date'], axis=1)\n\ntweets","3e3bb70f":"#Select Columns\ntweets = tweets[['content']]\n\ntweets","5a6dfb2a":"class WordCounter:\n  def __init__(self):\n    self.words = {}\n    self.blacklist = []\n\n  def add_word(self, word: str) -> int:\n    '''\n    Adds word if it doesn't exist, increment counter if we already have it.\n    Return the count of that word.\n    '''\n    \n    if word in self.words:\n      self.words[word] = self.words[word] + 1\n    elif word in self.blacklist:\n      return 0  \n    else:\n      self.words[word] = 1\n    return self.words[word]\n\n    def getitem(self, word):\n      return self.words[word]","4222298b":"#Example using split()\nw = tweets.iloc[0]['content']\nW2 = tweets.iloc[0]['content'].split()\nprint(w)\nprint(W2)","c9bdf005":"#import progress bar and initialize progress bar \nfrom tqdm.notebook import tqdm\npb = tqdm(total=len(tweets))\n\n\nword_counter = WordCounter()\nword_counter.blacklist = ['in','you','the','The','I','is','on','a','A','to','To','of','for','and','it',\n                          'will','with','that','this','be','at','as','he','his','by','not','they',\n                          '-','&','about','has','from','was','have','who','all','say','my','out',\n                          'says','up','but','we','like','are','if','our','via','\ufffd','This','your','an',]\n\nfor index, row in tweets.iterrows():\n    pb.update()\n    rows = row[\"content\"].split()\n    \n    for w in rows:\n        word_counter.add_word(w)\n\n\nprint(word_counter.words)    ","309cc582":"# lambda ARGUMENT: do stuff with ARGUMENT \n# EXAMPLE: add = lambda x, y: x + y\nsList = sorted(word_counter.words.items(),key=lambda item: item[1],reverse=True)\n\nmainDict ={key:value for key,value in sList}\n\nmainDict","d16728e8":"# turn the mainDict into a list with just the keys and print the top 20 words\ntopTwenty = list(mainDict.keys())\n\nprint(topTwenty[:20])","bb8e4159":"#Create a for loop to iterate through the dictionary\n#Print out both Keys and values\ncounter = 0\nfor key,value in mainDict.items():\n        if counter > 19:\n            break\n        print(value,'\\t',key)\n        counter+=1","85358ff7":"#You can also turn the mainDict into a list with just the keys and print the top 20\nTopkeys = list(mainDict.keys())\ntopVal = list(mainDict.values())\nkv = list(zip(Topkeys[:20],topVal[:20]))\n\nprint(kv)\nFinal = pd.DataFrame(kv,columns = [\"Count\",\"Word\"])\n\nFinal","ba544c8e":"# Python Bootcamp Day2\nThis notebook contains explanations and examples of Python code with a focus on the pandas library and python iteration.\n\n## Getting Started \nNavigate to kaggle.com and create an account.\n\n\nOnce you have created an account and have signed in locate and open the bootcamp notebook.<br>\n1. navigate to the *notebook* tab \n2. Search public notebooks for \"day2presentation\"\n3. Click on the notebook titled \"day2presentation\" by ACMW WSUV\n4. At the top right corner of the screen click on the ellipsis and from the drop down menu select copy and edit kernel\n\nNow you must add the necessary data to the kaggle notebook environment\n1. click on \"Add Data\"\n2. Search for Russian troll tweets\n3. Locate the data from user FiveThirtyEight titled Russian Troll Tweets\n4. click add\n5. click NO <br>\n\nYour environment is now ready to go! \ud83d\ude18","ff98a400":"Create pandas DataFrames with csv files input.","ff36b965":"Pandas DataFrames lets you drop or select specific columns\n\ndrop by Name of column","3a541f04":"We want to put all the dataframes together into one large data frame. \n\nThe concat() function (in the main pandas namespace) does all of the heavy lifting of performing concatenation operations \nalong an axis while performing optional set logic of the indexes on the other axis. ","68fc6249":"Now that we have a dictionary containing the frequency of each word we can sort the words into a list of the top 20.\nFirst we sort the dictionary in descending order...","97011c94":"* Using split, we need to create a list of words\n* With each row we split, iterate through the list adding every unique word to a dictionary","38dc5727":"We can display in a terminal using print()","e80535be":"We are going to narrow the information further to only the tweets that contain the word Trump. ","bf705c8b":" We are going to narrow the information to the year 2016, which was an election year and then display them.","d50d37ee":"Then using a for loop we create a list of the top 20 words...","88ab4224":"or we can use a more pythonic technique.","9217e206":"We can also select specific columns. For this exercise we only need the content column.\n\nNow we have all English language tweets from known Russian twitter accounts, posted in 2016, which was an election year","02a9f98c":"Or we can display them in a jupyter format","0175bbb3":"We are going to narrow the information further to only the tweets that are in English and display again.","668c7697":"\nNow we will create a script that will count the frequency of words, in order to get the top 20. <br>\n\nWe are first creating a class who's many function is to count the words and create a dictionary, with the words as its keys and frequency as its values.\n\nThis will make our code reusable.","8bea0972":"![image.png](attachment:image.png)"}}