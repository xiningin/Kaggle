{"cell_type":{"f3fb7c5e":"code","bd842f1e":"code","ea227338":"code","b0fdc7c2":"code","0d3197e5":"code","bdf638a5":"code","1c6fae85":"code","d5656e48":"code","ddb1dc7c":"code","86cbdc95":"code","b3dbc158":"code","0530a418":"code","11177f22":"code","1d4f5f07":"code","02088ea7":"code","54f93ebe":"code","6209a820":"code","0712950d":"code","d168050f":"code","5331b6b0":"code","fb811b0e":"code","d951c069":"code","0b19bca0":"code","0a5a22e2":"markdown","a56a3d88":"markdown","fdfe2a54":"markdown","fe2e9052":"markdown","1dd7199d":"markdown","4f30988a":"markdown","5c82a233":"markdown","603e1c48":"markdown","d0c64325":"markdown","ae2ff616":"markdown","e00c050d":"markdown","8b0d1eb2":"markdown","4936f424":"markdown","45033a46":"markdown","0a37a740":"markdown","de954739":"markdown"},"source":{"f3fb7c5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd842f1e":"data = pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")\ndata.head()","ea227338":"data.describe(include = 'all')","b0fdc7c2":"data.isnull().any()","0d3197e5":"sns.heatmap(data.corr(), annot = True, fmt = '.2f', linewidths = .5)","bdf638a5":"sns.pairplot(data)","1c6fae85":"#Minimum Value for Age is 18 and maxium is 64\nbins = [0,30,40,50,60,np.inf]\nnames = ['18-30', '30-40', '40-50', '50-60', '60-64']\ndata['AgeRange'] = pd.cut(data['age'], bins, labels = names)\nsns.barplot(data = data[['AgeRange','charges']].groupby('AgeRange').mean().reset_index(), x = 'AgeRange', y = 'charges')\n","d5656e48":"fig, axes = plt.subplots(1, 2, figsize = (15,5))\n\n#smoker Count Plot\nsns.countplot(data = data, x = 'smoker',  hue = 'sex', ax = axes[0])\n\n#Sex v Smoker v Charges\nsns.barplot(data = data, x = 'smoker', hue = 'sex', y = 'charges', estimator = np.mean, ax = axes[1])\\\n                                            .set(xlabel = 'Smoker', ylabel = 'Mean of Charges if the person is smoker')\n\n#Descriptive Statistics\nprint(\"Descriptive Statistics based on Smoker, Sex & Charges\")\ndata[['smoker','sex','charges']].groupby(['smoker','sex']).agg({'charges':['mean','median','count']})","ddb1dc7c":"#Smoking Effects with BMI, Age, Children on Charges\n\nfig, axes = plt.subplots(2,2, figsize = (18,15))\n\n#BMI\nsns.scatterplot(data = data, x = 'bmi', y = 'charges', hue = 'smoker', ax = axes[0][0])\n\n#Age\nsns.barplot(data = data, x = 'AgeRange', y = 'charges', hue = 'smoker', ax = axes[0][1], estimator = np.median)\n\n#Age Wise Distribution\nsns.boxplot(data = data, x = 'AgeRange', y = 'charges',hue = 'smoker', ax = axes[1][0])\n\n#Children\nsns.barplot(data = data, x = 'smoker', y = 'children', ax = axes[1][1], estimator = np.mean)","86cbdc95":"fig, axes = plt.subplots(figsize = (10,5))\nsns.scatterplot(data = data, x = 'age', y = 'charges', hue = 'smoker')\n\nprint(\"Smoker Average Cost\")\ndata[['AgeRange','smoker','charges']].groupby(by = ['AgeRange','smoker']).agg({'charges':['mean','median']})","b3dbc158":"#Required Libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder,LabelEncoder,StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import PolynomialFeatures","0530a418":"def print_sample_categorical(data):\n    print(data.head())\n    print(data['sex'].value_counts())\n    print(data['smoker'].value_counts())\n    print(data['region'].value_counts())\n    \nprint_sample_categorical(data)    ","11177f22":"X = data\nX = X.drop(columns = ['AgeRange'], axis = 1)\n\n#Label Encoder on Each of the values\nprint(\"Transforming Categorical Values:\\n\")\nle = LabelEncoder()\nX['sex'] = le.fit_transform(X['sex'])\nX['smoker'] = le.fit_transform(X['smoker'])\nX['region'] = le.fit_transform(X['region'])\nprint_sample_categorical(X)\n\n#Standard Scaler Cause KNN Would be applied on the data\nprint(\"Scaling Each of the Values using standard Scaler Cause of KNN\")\nsscaler = StandardScaler()\ndef scale_Features(data):\n    for col in data.columns:\n        data[col] = sscaler.fit_transform(pd.DataFrame(data[col]))\n    return data\n    \nX = scale_Features(X)\nprint(X.head())    ","1d4f5f07":"sns.heatmap(X.corr(), annot = True, fmt = '.2f', linewidths = .5)","02088ea7":"sns.pairplot(data)","54f93ebe":"y = X['charges']\nX = X.drop(columns = ['charges','region','sex'], axis = 1)\nprint(X.head())\nprint(y.head())","6209a820":"#Adding Polynomial Features into the dataset\nsqr = PolynomialFeatures(degree = 2)\nX_sqr = sqr.fit_transform(X)\nX_sqr = scale_Features(pd.DataFrame(X_sqr))\nprint(X_sqr)\nprint(X.head())","0712950d":"print(\"Cross Validation Score LR: \", cross_val_score(estimator = LinearRegression(), X = X, y = y, cv = 5).mean())\nprint(\"Cross Validation Score Polynomial Regression: \", cross_val_score(estimator = LinearRegression(), X = X_sqr, y = y, cv = 5).mean())\nprint(\"Cross Validation Score KNN: \", cross_val_score(estimator = KNeighborsRegressor(), X = X_sqr, y = y, cv = 5).mean())","d168050f":"def model_validation(model, X, y):\n    X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state= 0)\n    model.fit(X_train, y_train)\n    print(\"R2 Train :\", model.score(X_train, y_train))\n    print(\"R2 Test :\", model.score(X_test, y_test))\n    print(\"MAE Train:\",mean_absolute_error(model.predict(X_train),y_train))\n    print(\"MAE Test:\",mean_absolute_error(model.predict(X_test), y_test))\n    cv_error = cross_val_score(estimator = model, X = X, y = y, cv = 5).mean()\n    return model, cv_error\n    ","5331b6b0":"lr_model, cv_error = model_validation(LinearRegression(), X,y)\nprint(\"Regression Coefficients :\", dict(zip(X.columns , lr_model.coef_)))\nprint(\"Regression Intercept :\", lr_model.intercept_)","fb811b0e":"#Tuning KNN\nknn_model,cv_error = model_validation(KNeighborsRegressor(),X,y)\n\n#Changing K(neigbhours values)\nfig, axes = plt.subplots(figsize = (20,5))\nn_iter = 50\ncv_list = [cross_val_score(estimator = KNeighborsRegressor(n_neighbors = i), X = X, y = y, cv = 5).mean() for i in range(1,n_iter)]\n#sns.set_style(\"whitegrid\")\nsns.lineplot(x = [i for i in range(1,n_iter)], y = cv_list, markers = True, dashes = True, marker = 'o').set(xlabel = 'K Value',\n                                                                                                                ylabel = 'Accuracy',\n                                                                                                                xticks = range(1,50))            ","d951c069":"knn_model,cv_error = model_validation(KNeighborsRegressor(n_neighbors = 15),X,y)","0b19bca0":"#KNN\nknn = KNeighborsRegressor(n_neighbors = 15)\nknn.fit(X,y)\nprint(\"R2 score KNN: \",knn.score(X,y))\n\n#Polynomial Regression\nplr = LinearRegression()\n#Already created squared dataset X_sql\nplr.fit(X_sqr, y)\nprint(\"R2 score Polynomial Regression\", plr.score(X_sqr,y))","0a5a22e2":"Feature Selection - Based on Pearson Correlation","a56a3d88":"Some Observations:\n    About 17% of the population(Its a sample though :P) of data correspond to Smokers.\n    We can clearly observe Smoking increase your medicinal charges by 80%.","fdfe2a54":"# Step 1 - Missing Values Handling","fe2e9052":"Observations:\n1. Very low correlation of each numerical variables with the charges\n2. No Multicollinearity(Regression Coefficients can be analyzed)\n3. Age is effecting the charges highly.","1dd7199d":"Age- Validates the obvious assumption that charges increases with age.","4f30988a":"Hi,\n\nAppreciate your comments, suggestions for this easy attempt on Regression & KNN :)","5c82a233":"Similar behaviour can be observed in pairplot, age shows highest correlation.\nLooking at the above features, Polynomial features can be little bit helpful in the final model creation.","603e1c48":"# Step 2- Data Exploration\n\n","d0c64325":"Based on above graph it can be observed accuracy gets increase after 10 and it remains nearly constant after that. Chossing 15 as neighbours.","ae2ff616":"# Step 3 - Feature Engineering","e00c050d":"Removing region and sex from the dataset as it has very low correlation, Would create noise in Regression as well as KNN.","8b0d1eb2":"Tuning KNN:","4936f424":"# Step 4 - Modelling","45033a46":"Observations from above graphs:\nCharges increases with increase in BMI(Obese have high effect) if person smokes. Growing OLD doesn't necessarily mean exponentially high medicinal costs, but in case of smoking costs are gonna get increase exponentially.\n\nAverage charges between 18-30 bracket in case its a smoker is almost 50% higher than charges in 60-64 age bracket in case the person is a non smoker. Better Not Smoke then.\n\nSmoking KILLS(Not sure through data)!!! but it definately outweighs the wallet.\nRejects the assumption about smokers having low children.","0a37a740":"Training all the data on KNN & Polynomial as they yield better accuracy","de954739":"Normalizing and Encoding the Categorical Features"}}