{"cell_type":{"eec278c1":"code","2f5d8f16":"code","f39ad16e":"code","f71d8edb":"code","e943a827":"code","b89c011e":"code","7dab99cb":"code","6267fc93":"code","0e44ae91":"code","a6a0f9a8":"code","de225a28":"code","24fadb5f":"code","21b0ae27":"code","07291c27":"code","81ad39df":"code","cda335de":"code","8caff216":"code","d071c348":"code","8ca6506e":"code","1dc42699":"code","c32d30d0":"code","930a1807":"code","3dce0243":"code","d99534dd":"code","b7f5e564":"code","e3cde16a":"code","494ec3b9":"code","7c7a4700":"code","bfb9ca2c":"code","e00a8d08":"markdown","812ccd08":"markdown","2d7d6cdd":"markdown","01a35a73":"markdown","611a0c30":"markdown","a126b2de":"markdown","0cc9a324":"markdown","1f2b825b":"markdown","ca9d88a7":"markdown","26abe27e":"markdown"},"source":{"eec278c1":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np \nimport pandas as pd\nimport os\nos.chdir('..\/input\/yoochoose-data')\nprint(os.listdir())\n%matplotlib inline\nplt.style.use('seaborn-white')\n","2f5d8f16":"# set status of buys as 1\nbuys_raw=pd.read_csv('yoochoose-buys.dat',names=['sessionID','ts','itemID','price','cnt'])\nprint(\"buys train shape\",buys_raw.shape)\nbuys_raw['status']=1\n\n# set status of clicks as 0\nclicks_raw=pd.read_csv('yoochoose-clicks.dat',names=['sessionID','ts','itemID','cat'])\nprint(\"clicks_raw train shape\",clicks_raw.shape)\nclicks_raw['status']=0\n\n# concat two kinds of data set,sorted by sessionID and itemID\nunion=pd.concat([clicks_raw, buys_raw], ignore_index=True).sort_values(by=['sessionID','itemID'])\nprint(\"union shape\",union.shape)\nunion.head()","f39ad16e":"# ts to datetime\nunion['ts']=pd.to_datetime(union.ts,infer_datetime_format=True)","f71d8edb":"union.head(12345).groupby([\"itemID\",\"sessionID\"])[\"status\"].nunique().max()","e943a827":"# replace NaNs of cat by preceding values in the same item group \nunion['cat']=union['cat'].fillna(method='ffill')\n\n### ts to datetime\n# union['ts']=pd.to_datetime(union.ts,infer_datetime_format=True)\nunion['hour']=union.ts.dt.hour\nunion['weekday']=union['ts'].dt.dayofweek.astype(int)+1","b89c011e":"union.head()","7dab99cb":"buyID_num=buys_raw.sessionID.nunique() #\nbuyEvents=buys_raw.shape[0]\nclickID_num=clicks_raw.sessionID.nunique()\nitemClicks=clicks_raw.shape[0]\nBC_ratio=buyID_num\/clickID_num","6267fc93":"print(r'''buyID_num:{} \nbuyEvents:{} \nclickID_num:{} \nitemClicks:{} \nbuy ratio of sessions :{}\nbuy ratio of clicks:{}'''\n.format(buyID_num,buyEvents,clickID_num,itemClicks,BC_ratio,buyEvents\/clickID_num))","0e44ae91":"buyEvents\/clickID_num","a6a0f9a8":"# Buy ratio averaged for hour\nhour_info=union.groupby(['hour','status'])['sessionID'].nunique().reset_index(name='count')\nhour_click=hour_info[hour_info['status']==0]\nhour_buy=hour_info[hour_info['status']==1]\nhour_info=pd.merge(hour_click,hour_buy,on='hour')\nhour_info['ratio']=hour_info['count_y']\/hour_info['count_x']","de225a28":"# Buy ratio averaged for weekday\nweekday_info=union.groupby(['weekday','status'])['sessionID'].nunique().reset_index(name='count')\nweekday_click=weekday_info[weekday_info['status']==0]\nweekday_buy=weekday_info[weekday_info['status']==1]\nweekday_info=pd.merge(weekday_click,weekday_buy,on='weekday')\nweekday_info['ratio']=weekday_info.count_y\/weekday_info.count_x","24fadb5f":"fig = plt.figure(figsize=(15,6))\nfig.suptitle(' Buy Ratio Averaged for Time', fontsize=20)\n\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\nax1.scatter(hour_info['hour'],hour_info['ratio'],color='b')\nax1.bar(hour_info['hour'],hour_info['ratio'],width=0.1,color='b')\n\n\nax1.set_xlabel('$hour$', fontsize=17)\nax1.set_ylabel('$buy\/click ratio$', fontsize=17)\nax2.scatter(weekday_info['weekday'],weekday_info['ratio'],color='b')\nax2.bar(weekday_info['weekday'],weekday_info['ratio'],width=0.03,color='b')\nax2.set_xlabel('$weekday$', fontsize=17)\nax2.set_ylabel('$buy\/click ratio$', fontsize=17)\nplt.show()","21b0ae27":"def cat_classfier(value):\n    if value=='S':\n        return '13'\n    elif len(value)<=2:\n        return value\n    else:\n        return '14'","07291c27":"union['cat']=union.cat.astype(str).apply(cat_classfier).astype(int)\ncat_info=union.groupby(['cat','status'])['sessionID'].nunique().reset_index(name='count').sort_values(by='cat')\ncat_click=cat_info[cat_info['status']==0]\ncat_buy=cat_info[cat_info['status']==1]\ncat_info=pd.merge(cat_click,cat_buy,on='cat')\ncat_info['ratio']=cat_info.count_y\/cat_info.count_x","81ad39df":"fig = plt.figure(figsize=(15,6))\nfig.suptitle(' Buy Ratio Averaged for Category', fontsize=20)\n\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\n\nfig = plt.figure(figsize=(8,4))\n# plt.plot(cat_info.count_y)\nax1.scatter(cat_info.cat,cat_info.ratio,color='b')\nax1.bar(cat_info.cat,cat_info.ratio,width=0.07,color='b')\nax1.set_xticks(range(0,15))\nax1.set_ylim(0.02)\nax1.set_ylabel('$buy\/click ratio$',fontsize=16)\nax1.set_xlabel('$Category$',fontsize=16)\n\nax2.plot(cat_info.count_x,color='b')\nax2.set_yscale('log')\nax2.set_ylabel('$clicks$',fontsize=16)\nax2.set_xticks(range(0,15))\nax2.set_xlabel('$Category$',fontsize=16)\n\nplt.show()","cda335de":"# clear unused variables\nimport gc\ndel hour_info,weekday_info,union_raw,buys_raw,clicks_raw\ngc.collect()","8caff216":"cat=union[['sessionID','cat','status']]\ncat_num=cat.groupby('sessionID')['cat'].nunique().reset_index(name='cat_num')\nsession_status=cat.groupby('sessionID')['status'].max().reset_index(name='status')\ncat_info=pd.merge(cat_num,session_status,on='sessionID')","d071c348":"cat_buys=cat_info.groupby('cat_num')['status'].sum().reset_index(name='buys')\ncat_nums=cat_info.groupby('cat_num')['status'].count().reset_index(name='session_nums')\ncat_aggr=pd.merge(cat_buys,cat_nums,on='cat_num')\ncat_aggr['ratio']=cat_aggr.buys\/cat_aggr.session_nums","8ca6506e":"cat_aggr","1dc42699":"fig = plt.figure(figsize=(15,6))\nfig.suptitle(' Buy Ratio Averaged for Category Number', fontsize=20)\n\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\n\nfig = plt.figure(figsize=(8,4))\nax1.scatter(cat_aggr.cat_num,cat_aggr.ratio,color='b')\nax1.bar(cat_aggr.cat_num,cat_aggr.ratio,color='b',width=0.07)\nax1.set_ylim(0.02)\nax1.set_ylabel('$Buy\\,Ratio$',fontsize=16)\nax1.set_xlabel('$Category \\,Number$',fontsize=16)\n\n\nax2.plot(cat_aggr.cat_num,cat_aggr.session_nums,color='b')\nax2.set_yscale('log')\nax2.set_ylabel('$Session\\,Number$',fontsize=16)\nax2.set_xlabel('$Category\\,Number$',fontsize=16)\n\nplt.show()","c32d30d0":"session_length=union.groupby('sessionID')['status'].count().reset_index(name='length')\nsession_length=pd.merge(session_status,session_length,on='sessionID')","930a1807":"len_buys=session_length.groupby('length')['status'].sum().reset_index(name='buys')\nlen_num=session_length.groupby('length')['status'].count().reset_index(name='len_num')\nlen_aggr=pd.merge(len_buys,len_num,on='length')","3dce0243":"len_aggr['ratio']=len_aggr.buys\/len_aggr.len_num","d99534dd":"fig = plt.figure(figsize=(15,6))\nfig.suptitle(' Buy Ratio Averaged for Session Length', fontsize=20)\n\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\n\nfig = plt.figure(figsize=(8,4))\nax1.scatter(len_aggr.length,len_aggr.ratio,color='b')\nax1.set_ylabel('$Buy\\,Ratio$',fontsize=16)\nax1.set_xlabel('$Session\\, Length$',fontsize=16)\nax1.set_xscale('log')\n\nax2.plot(len_aggr.length,len_aggr.len_num,color='b')\nax2.set_yscale('log')\n#ax2.set_xscale('log')\nax2.set_ylabel('$Session\\,Number$',fontsize=16)\nax2.set_xlabel('$Session\\, Length$',fontsize=16)\n\n\nplt.show()","b7f5e564":"dwell_max=union.groupby('sessionID')['ts'].max().reset_index(name='max')\ndwell_min=union.groupby('sessionID')['ts'].min().reset_index(name='min')\n\nsession_dwell=pd.merge(dwell_max,dwell_min,on='sessionID')\nsession_dwell['dwell']=(session_dwell['max']-session_dwell['min']).astype('timedelta64[m]')\nsession_dwell.head()\npd.merge(session_dwell,sessionID_status,on='sessionID')","e3cde16a":"session_dwell=pd.merge(session_dwell,session_status,on='sessionID')","494ec3b9":"session_dwell.head()","7c7a4700":"dwell_buys=session_dwell.groupby('dwell')['status'].sum().reset_index(name='buys')\ndwell_num=session_dwell.groupby('dwell')['status'].count().reset_index(name='dwell_num')\ndwell_aggr=pd.merge(dwell_buys,dwell_num,on='dwell')\ndwell_aggr['ratio']=dwell_aggr.buys\/dwell_aggr.dwell_num","bfb9ca2c":"fig = plt.figure(figsize=(15,6))\nfig.suptitle(' Buy Ratio Averaged for Dwell Time', fontsize=20)\n\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\n\nfig = plt.figure(figsize=(8,4))\nax1.scatter(dwell_aggr.dwell,dwell_aggr.ratio,color='b')\nax1.set_ylabel('$Buy\\,Ratio$',fontsize=16)\nax1.set_xlabel('$Dwell\\, Time$',fontsize=16)\n# ax1.set_xscale('log')\nax1.set_xlim(0,200)\n\n\nax2.plot(dwell_aggr.dwell,dwell_aggr.dwell_num,color='b')\nax2.set_yscale('log')\n#ax2.set_xscale('log')\nax2.set_ylabel('$Count$',fontsize=16)\nax2.set_xlabel('$Dwell\\, Time$',fontsize=16)\nax2.set_xlim(0,200)\n\nplt.show()","e00a8d08":"## Data Wrangling\n\n*  doesn't this (following cell and setting as 1\/0) need to be filtered by session and item and mark once per item if purchased or not (just clicks) ? ","812ccd08":"## Buy Ratio Averaged for Category","2d7d6cdd":"## Buy Ratio Averaged for Time","01a35a73":"# 2015 RecSys Challenge  Solution","611a0c30":"## Buy Ratio Averaged for Category Number","a126b2de":"## Buy Ratio Averaged for Dwell Time","0cc9a324":"## Overview","1f2b825b":"# Statistics\n","ca9d88a7":"## Buy Ratio Averaged for Session Length","26abe27e":"## Exploratory Data Analysis "}}