{"cell_type":{"ba6ba1cf":"code","23a05cc2":"code","e559a028":"code","3965794c":"code","f900b943":"code","7496cf38":"code","949bc66d":"code","1adf1793":"code","275c514f":"code","f7ddf1b3":"code","fbccb34c":"code","081c3cbb":"code","4e9fc5bb":"code","0a038b2b":"code","79e51211":"code","4e6055d0":"code","4f564415":"code","7eaf3cb3":"code","d480dfc1":"code","4c5fbd7a":"code","419c9ef1":"code","173d8c6b":"code","17988c98":"code","743ecbef":"code","14499d42":"code","56169b27":"code","04c84440":"code","b2e02ebb":"code","0a5bbb9f":"code","366da676":"code","b2ea90a6":"code","b76005f5":"code","46a67ee3":"code","4d020cee":"code","135ae101":"code","ea68cdf3":"code","d08bd694":"code","3f5f24d8":"code","13c8e9fd":"code","cab68bb8":"code","9224bbcf":"code","438ba523":"code","3f41ac33":"code","056a8d72":"code","c76559d9":"code","526ccb94":"code","85309b6d":"code","b2102f25":"code","f7bae5f4":"code","323589f4":"code","447e9f6a":"code","504c9237":"code","4520f32c":"code","3ff9379b":"code","2544662b":"code","7d200e68":"code","64953bbf":"code","0deeb2d1":"code","0babc2ae":"code","725388f0":"code","10cd2129":"code","3fbb9a0f":"code","21b462c5":"code","3963f748":"code","b1482bdf":"code","643ae314":"code","57e04bf2":"code","4df75462":"code","fd1f108b":"code","3abef928":"code","15fd1f32":"code","95cdbbea":"code","558f8424":"code","cf9c4cd8":"code","8922b752":"code","e6cb0b60":"code","d05e92a9":"code","c023c9d7":"code","233b261c":"code","fa246431":"code","6f06d18f":"code","db4c1b8e":"code","7130456f":"code","5867e291":"code","9bef16f8":"code","7e60aa12":"code","8dd135bf":"code","7da3d519":"code","f2c25b49":"code","eb973a3f":"code","f63b0b2f":"code","06b4f85d":"code","d41eef7b":"code","e64b773a":"code","15a91412":"code","0817f4cd":"code","fdc8754e":"code","2c6403d6":"code","c6ff6a23":"code","856a1d71":"code","2559a366":"code","cb3d7655":"code","61a907bf":"code","2e166d63":"code","b45d73bc":"code","798c5799":"code","4c57092b":"code","b1dbed18":"code","1f21b784":"code","80eb0ffe":"code","4682ca06":"code","1afb7c1f":"code","2bf4cd4b":"code","51d15264":"code","1259b0c8":"code","470adae3":"code","3f461e0f":"code","b07d3409":"code","46f03006":"code","ccbe92be":"code","bfeee5c8":"code","87b38068":"code","c3365449":"code","9bc4e532":"code","51e23c0e":"code","80f4f2b4":"markdown","018e7743":"markdown","1767e802":"markdown","acb5d195":"markdown","046c1b24":"markdown","094d8f3b":"markdown","020d807f":"markdown","edf4e1b9":"markdown","96df0a7f":"markdown","7af62f89":"markdown","4492bb1f":"markdown","e4de29e8":"markdown","f973d1a9":"markdown","beacdbb1":"markdown","81b8efc8":"markdown","317d5628":"markdown","1a22790a":"markdown","46e8ed72":"markdown","8c3ee2b2":"markdown","4a0f8726":"markdown","9bc6e70c":"markdown","84c8c14d":"markdown","ecbe7ba7":"markdown","7ea3f0f1":"markdown","984c8c44":"markdown","78d7a7a4":"markdown","bdb0ced5":"markdown"},"source":{"ba6ba1cf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndf_train=pd.read_csv('..\/input\/used-cars-price-prediction\/train-data.csv')\ndf_test=pd.read_csv('..\/input\/used-cars-price-prediction\/test-data.csv')\ndf_train.info()\ndf_test.info()","23a05cc2":"print('The front 5 rows of train data :')\nprint(df_train.head(5))\nprint('The front 5 rows of test data :')\nprint(df_test.head(5))\ndf_train.drop('Unnamed: 0',axis=1,inplace=True)\ndf_test.drop('Unnamed: 0',axis=1,inplace=True)\nprint(df_train.head(5))\nprint(df_test.head(5))","e559a028":"print('null values about train_data\uff1a')\nprint(df_train.isnull().sum())\nprint('null values about train_data\uff1a')\nprint(df_test.isnull().sum())","3965794c":"#decide to drop the 'New_Price' column\ndf_train.drop('New_Price',axis=1,inplace=True)\ndf_test.drop('New_Price',axis=1,inplace=True)\nprint('null values about train_data\uff1a')\nprint(df_train.isnull().sum())\nprint('null values about train_data\uff1a')\nprint(df_test.isnull().sum())","f900b943":"#Name\nprint('train data:')\nprint(df_train.Name.value_counts())\nprint('test data:')\nprint(df_test.Name.value_counts())\nfor i in df_train.index:\n    df_train.at[i,'Name']=df_train.loc[i,'Name'].split()[0]\nfor i in df_test.index:\n    df_test.at[i,'Name']=df_test.at[i,'Name'].split()[0]","7496cf38":"print('train data:')\nprint(df_train.Name.value_counts())\nprint('-'*30)\nprint('test_data:')\ndf_test.Name.value_counts()","949bc66d":"print(df_train.Mileage.value_counts())\nprint(df_test.Mileage.value_counts())","1adf1793":"df_train.Mileage=df_train['Mileage'].fillna('17.0 kmpl')\ndf_test.Mileage=df_test['Mileage'].fillna('17.0 kmpl')","275c514f":"print(df_train.Mileage.isnull().sum())\nprint(df_test.Mileage.isnull().sum())","f7ddf1b3":"df_train.iloc[0:4,:]\n","fbccb34c":"print(df_train.Engine.value_counts())\nprint(df_test.Engine.value_counts())","081c3cbb":"df_train.Engine=df_train.Engine.fillna('1197 CC ')\ndf_test.Engine=df_test.Engine.fillna('1197 CC ')\nprint(df_train.isnull().sum())\nprint(df_test.isnull().sum())","4e9fc5bb":"print(df_train.Power.value_counts())\nprint(df_test.Power.value_counts())","0a038b2b":"df_train.Power=df_train.Power.fillna('74 bhp ')\ndf_test.Power=df_test.Power.fillna('74 bhp ')\nprint(df_train.isnull().sum())\nprint(df_test.isnull().sum())","79e51211":"print(df_train.Seats.value_counts())\nprint(df_test.Seats.value_counts())","4e6055d0":"df_train.Seats=df_train.Seats.fillna('5.0')\ndf_test.Seats=df_test.Seats.fillna('5.0')\nprint(df_train.isnull().sum())\nprint(df_test.isnull().sum())","4f564415":"for i in df_train.index:\n    df_train.at[i,'Mileage']=df_train.at[i,'Mileage'].split()[0]\n    df_train.at[i,'Engine']=df_train.at[i,'Engine'].split()[0]\n    df_train.at[i,'Power']=df_train.at[i,'Power'].split()[0]\ndf_train.iloc[:4]    ","7eaf3cb3":"for i in df_test.index:\n    df_test['Mileage'][i]=df_test['Mileage'][i].split()[0]\n    df_test.at[i,'Engine']=df_test.at[i,'Engine'].split()[0]\n    df_test.at[i,'Power']=df_test.at[i,'Power'].split()[0]\ndf_test.iloc[:4]   ","d480dfc1":"df_train['Mileage']=df_train['Mileage'].astype(float)\ndf_train['Engine']=df_train['Engine'].astype(float)\ndf_test['Mileage']=df_test['Mileage'].astype(float)\ndf_test['Engine']=df_test['Engine'].astype(float)\n","4c5fbd7a":"#change the null in test data\nfor i in df_train.index:\n    if df_train.Power[i]=='null':\n        df_train.Power[i]=74\nfor i in df_test.index:\n    if df_test.Power[i]=='null':\n        df_test.Power[i]=74\ndf_train.Power=df_train.Power.astype(float)\ndf_test.Power=df_test.Power.astype(float)\n\n#change the null in test data\n","419c9ef1":"#print(type(df_train.Power[0]))\ndf_train.iloc[:10,:]","173d8c6b":"#fig,ax=plt.subplots(1,1,figsize=(16,5))\nz=sns.pairplot(df_train)","17988c98":"\nz=sns.pairplot(df_test)","743ecbef":"fg,ax=plt.subplots(1,1,figsize=(16,5))\nz=plt.scatter(x=df_train.index,y=df_train.Kilometers_Driven)\ndf_train.drop(index=df_train.Kilometers_Driven.idxmax(),inplace=True)","14499d42":"z=plt.scatter(x=df_train.index,y=df_train.Kilometers_Driven)","56169b27":"for i in df_train.index:\n    if df_train.Kilometers_Driven[i]>400000:\n        df_train.drop(index=i,inplace=True)\n        \nplt.scatter(df_train.index,df_train.Kilometers_Driven)","04c84440":"df_train.info()\n","b2e02ebb":"sns.barplot(data=df_train,y=pd.cut(df_train['Kilometers_Driven'],10,precision=0),x='Price')","0a5bbb9f":"sns.countplot(y=pd.cut(df_train.Kilometers_Driven,10,precision=10))","366da676":"df_train.Year.nunique()","b2ea90a6":"fg,ax=plt.subplots(1,1,figsize=(16,5))\nsns.barplot(x='Year',y='Price',data=df_train)","b76005f5":"sns.countplot(y='Year',data=df_train)","46a67ee3":"var=pd.DataFrame(columns=['after_2014'])","4d020cee":"df_train=pd.concat([df_train,var],axis=1)\n\ndf_test=pd.concat([df_test,var],axis=1)\n","135ae101":"for i in df_train.index:\n    if df_train['Year'][i]>2014:\n        df_train.after_2014[i]=1\n    else:\n        df_train['Year'][i]<=2014\n        df_train.after_2014[i]=0\ndf_train.head(10)  ","ea68cdf3":"for i in df_test.index:\n    if df_test['Year'][i]>2014:\n        df_test.after_2014[i]=1\n    else:\n        df_test['Year'][i]<=2014\n        df_test.after_2014[i]=0\ndf_test.head(10)   ","d08bd694":"fg,ax=plt.subplots(1,2,figsize=(16,5))\nz1=sns.countplot(data=df_train,y='Location',ax=ax[0])\nz2=sns.barplot(data=df_train,y='Location',x='Price',ax=ax[1])","3f5f24d8":"print(df_train.Fuel_Type.value_counts())\nprint(df_test.Fuel_Type.value_counts())\ndf_train.iloc[:4,]","13c8e9fd":"fg,ax=plt.subplots(2,2,figsize=(16,10))\nz1=sns.countplot(data=df_train,y='Fuel_Type',ax=ax[0][0])\nz2=sns.barplot(data=df_train,x='Fuel_Type',y='Price',ax=ax[0][1])\nz3=sns.stripplot(data=df_train,x='Fuel_Type',y='Price',ax=ax[1][0])\nz4=sns.boxplot(data=df_train,x='Fuel_Type',y='Price',ax=ax[1][1])","cab68bb8":"df_train.Transmission.value_counts()","9224bbcf":"df_train.head(5)","438ba523":"df_test.head(5)","3f41ac33":"print(df_train.Transmission.value_counts())\ndf_test.Transmission.value_counts()","056a8d72":"fig,ax=plt.subplots(2,2,figsize=(16,8))\nz1=sns.countplot(data=df_train,y='Transmission',ax=ax[0][0])\nz2=sns.barplot(data=df_train,y='Transmission',x='Price',ax=ax[0][1])\nz3=sns.stripplot(data=df_train,y='Transmission',x='Price',ax=ax[1][0])\nz4=sns.boxplot(data=df_train,y='Transmission',x='Price',ax=ax[1][1])","c76559d9":"# create new feature Is_Automatic\nvar=pd.DataFrame(columns=['Is_Automatic'])\ndf_train=pd.concat([df_train,var],axis=1)\ndf_test=pd.concat([df_test,var],axis=1)\n","526ccb94":"df_train.head(10)","85309b6d":"for i in df_train.index:\n    if df_train.Transmission[i]=='Automatic':\n        df_train.Is_Automatic[i]=1\n    else:\n        df_train.Is_Automatic[i]=0\n\nfor i in df_test.index:\n    if df_test.Transmission[i]=='Automatic':\n        df_test.Is_Automatic[i]=1\n    else:\n        df_test.Is_Automatic[i]=0\ndf_train.head(10)","b2102f25":"df_test.head(10)","f7bae5f4":"df_train.Owner_Type.value_counts()","323589f4":"fg,ax=plt.subplots(2,2,figsize=(16,8))\nz1=sns.countplot(x='Owner_Type',data=df_train,ax=ax[0][0])\nz2=sns.barplot(x='Owner_Type',y='Price',data=df_train,ax=ax[0][1])\nz3=sns.stripplot(x='Owner_Type',y='Price',data=df_train,ax=ax[1][0])\nz4=sns.boxplot(x='Owner_Type',y='Price',data=df_train,ax=ax[1][1])\nax[1][1].set_ylim([0,100])","447e9f6a":"print(df_train.Mileage.value_counts())\ndf_train.Mileage.describe()","504c9237":"plt.scatter(df_train.index,df_train.Mileage) ","4520f32c":"for i in df_train.index:\n    if df_train.Mileage[i]==0:\n        df_train.Mileage[i]=17.00\nplt.scatter(df_train.index,df_train.Mileage)\ndf_train.Mileage.describe()","3ff9379b":"fig,ax=plt.subplots(1,2,figsize=(16,5))\nz1=sns.countplot(y=pd.cut(df_train.Mileage,10,precision=10),ax=ax[0])\nz2=sns.barplot(y=pd.cut(df_train.Mileage,10,precision=0),x='Price',data=df_train,\n              ax=ax[1])\ndf_test.Mileage.describe()","2544662b":"# check how many abnormal point about Mileage in train data\nprint(df_test.Mileage.describe())\ndf_test.Mileage.value_counts()\nfor i in df_test.index:\n    if df_test.Mileage[i]==0:\n        df_test.Mileage[i]=17.00","7d200e68":"print(df_test.Mileage.describe())","64953bbf":"df_train.isnull().sum()","0deeb2d1":"df_train.Engine.value_counts()","0babc2ae":"df_train.Engine.describe()","725388f0":"fig,ax=plt.subplots(1,2,figsize=(16,5))\nz1=sns.countplot(y=pd.cut(df_train.Engine,10,precision=10),ax=ax[0])\nz2=sns.barplot(y=pd.cut(df_train.Engine,10,precision=0),x='Price',data=df_train,\n              ax=ax[1])\n","10cd2129":"print(df_train.Seats.value_counts())\nprint(df_test.Seats.value_counts())\n","3fbb9a0f":"df_train.head(5)","21b462c5":"df_test.head(5)","3963f748":"for i in df_train.index:\n    if df_train.Seats[i]==0.0:\n        df_train.Seats[i]=5.0\ndf_train.Seats.value_counts()","b1482bdf":"df_test.Seats.value_counts()","643ae314":"count=0\nfor i in df_train.index:\n    if df_train.Seats[i]=='5.0':\n        df_train.Seats[i]=5.0\nprint(df_train.Seats.value_counts())\nfor i in df_test.index:\n    if df_test.Seats[i]=='5.0':\n        df_test.Seats[i]=5.0\nprint(df_test.Seats.value_counts())\n        ","57e04bf2":"fig,ax=plt.subplots(2,2,figsize=(16,8))\nz1=sns.countplot(data=df_train,x='Seats',ax=ax[0][0])\nz2=sns.barplot(data=df_train,x='Seats',y='Price',ax=ax[0][1])\nz3=sns.stripplot(data=df_train,x='Seats',y='Price',ax=ax[1][0])\nz4=sns.boxplot(data=df_train,x='Seats',y='Price',ax=ax[1][1])","4df75462":"var=pd.DataFrame(columns=['Is_2seats'])\ndf_train=pd.concat([df_train,var],axis=1)\ndf_test=pd.concat([df_test,var],axis=1)\ndf_train.head(5)\ndf_test.head(5)","fd1f108b":"\nfor i in df_train.index:\n    if df_train.Seats[i]==2.0:\n        df_train.Is_2seats[i]=1\n    else:\n        df_train.Is_2seats[i]=0\nfor i in df_test.index:\n    if df_test.Seats[i]==2.0:\n        df_test.Is_2seats[i]=1\n    else:\n        df_test.Is_2seats[i]=0\nprint(df_train.Is_2seats.value_counts())\ndf_test.Is_2seats.value_counts()","3abef928":"df_train.head(5)","15fd1f32":"df_train.Name.value_counts()","95cdbbea":"fig,ax=plt.subplots(1,2,figsize=(16,8))\nz1=sns.countplot(data=df_train,y='Name',ax=ax[0])\nz2=sns.barplot(data=df_train,y='Name',x='Price',ax=ax[1])","558f8424":"df_test.Name.value_counts()","cf9c4cd8":"var=pd.DataFrame(columns=['Brand'])\ndf_train=pd.concat([df_train,var],axis=1)\ndf_test=pd.concat([df_test,var],axis=1)\n","8922b752":"print(df_train.head(1))\ndf_test.head(1)","e6cb0b60":"for i in df_train.index:\n    if df_train.Name[i] in ['Audi','Land','Porsche','Bentley','Jaguar']:\n        df_train.Brand[i]=1\n    else:\n        df_train.Brand[i]=0\nfor i in df_test.index:\n    if df_test.Name[i] in ['Audi','Land','Porsche','Bentley','Jaguar']:\n        df_test.Brand[i]=1\n    else:\n        df_test.Brand[i]=0","d05e92a9":"df_train.Brand.value_counts()","c023c9d7":"df_train.head(5)","233b261c":"df_test.head(10)","fa246431":"df_train.drop('Name',axis=1,inplace=True)\ndf_test.drop('Name',axis=1,inplace=True)","6f06d18f":"df_train.head(1)","db4c1b8e":"from sklearn.preprocessing import LabelEncoder,OneHotEncoder\n\nLoca=pd.get_dummies(df_train.Location,drop_first=True)","7130456f":"Fu_Type=pd.get_dummies(df_train.Fuel_Type,drop_first=True)","5867e291":"Trans=pd.get_dummies(df_train.Transmission,drop_first=True)","9bef16f8":"df_train.replace({'First':1,'Second':2,'Third':3,\n                                   'Fourth & Above':4},inplace=True)\ndf_train.head(5)","7e60aa12":"df_train=pd.concat([df_train,Loca,Fu_Type,Trans],axis=1)\n","8dd135bf":"df_train.head(10)","7da3d519":"df_train.drop(['Location','Fuel_Type','Transmission'],axis=1,inplace=True)","f2c25b49":"df_train.columns","eb973a3f":"#test  data\ndf_test.info()","f63b0b2f":"Loca=pd.get_dummies(df_test.Location,drop_first=True)","06b4f85d":"Loca","d41eef7b":"df_test.Owner_Type.value_counts()","e64b773a":"Fu_Type=pd.get_dummies(df_test.Fuel_Type,drop_first=True)\nTrans=pd.get_dummies(df_test.Transmission,drop_first=True)\ndf_test.replace({'First':1,'Second':2,'Third':3,'Fourth & Above':4},\n               inplace=True)","15a91412":"Loca","0817f4cd":"df_test.info()","fdc8754e":"df_test=pd.concat([df_test,Loca,Fu_Type,Trans],axis=1)","2c6403d6":"df_test.info()","c6ff6a23":"df_test.drop(['Location','Fuel_Type','Transmission'],axis=1,inplace=True)","856a1d71":"df_test.head(5)","2559a366":"df_test.columns","cb3d7655":"df_train.columns","61a907bf":"df_train.info()","2e166d63":"df_test.info()","b45d73bc":"y=df_train[['Price']]\nX=df_train.drop('Price',axis=1)","798c5799":"X.drop('Electric',axis=1,inplace=True)","4c57092b":"X.columns","b1dbed18":"X_test=df_test\n","1f21b784":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","80eb0ffe":"mean=X.mean()\nstd=X.std()\nX=(X-mean)\/std\nX_test=(X_test-mean)\/std","4682ca06":"X_train,X_cv,y_train,y_cv=train_test_split(X,y,test_size=0.3,random_state=1)\nprint(X_train.shape,'\\n',X_cv.shape,'\\n',y_train.shape,'\\n',y_cv.shape)","1afb7c1f":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error,accuracy_score\nlr=LinearRegression()\nlr.fit(X_train,y_train)\ny_train_predict=lr.predict(X_train)\ny_cv_predict=lr.predict(X_cv)\nprint(\"MSE on Training Set (Linear Regression):\",\n      mean_squared_error(y_train_predict, y_train))\n\nprint(\"MSE on CrossValidation Set (Linear Regression):\",\n      mean_squared_error(y_cv, y_cv_predict))\nprint(\"accuracy score on training set:\",\n      lr.score(X_train, y_train))\nprint(\"accuracy score on cross validation set:\",\n      lr.score(X_cv, y_cv))\n","2bf4cd4b":"from sklearn.tree import DecisionTreeRegressor\nDTR=DecisionTreeRegressor(max_depth=5,random_state=10,splitter='best')\nDTR.fit(X_train,y_train)\ny_train_predict=DTR.predict(X_train)\ny_cv_predict=DTR.predict(X_cv)\nprint('MSE on Training Set(DecisionTree):',\n      mean_squared_error(y_train,y_train_predict))\nprint('MSE on CrossValidation Set(DecisionTree):',\n     mean_squared_error(y_cv,y_cv_predict))\nprint('Accuracy on Training Set(DecisionTree):',\n      DTR.score(X_train,y_train))\nprint('Accuracy on CrossValidation Set(DecisionTree):',\n     DTR.score(X_cv,y_cv))\n","51d15264":"from sklearn.ensemble import RandomForestRegressor\nrf=RandomForestRegressor(random_state=20)\nrf.fit(X_train,y_train)\ny_train_predict=rf.predict(X_train)\ny_cv_predict=rf.predict(X_cv)\nprint(\"MSE on Training Set (RandomForest):\",\n      mean_squared_error(y_train,y_train_predict))\nprint(\"MSE on CrossValidation Set (RandomForest):\",\n      mean_squared_error(y_cv, y_cv_predict))\nprint(\"accuracy score on training set:\",\n      rf.score(X_train, y_train))\nprint(\"accuracy score on cross validation set:\",\n      rf.score(X_cv, y_cv))","1259b0c8":"X_test.Brand","470adae3":"y_test_predict=rf.predict(X_test)\n","3f461e0f":"y_test_predict","b07d3409":"from sklearn.model_selection import GridSearchCV\nrf=RandomForestRegressor(random_state=10)\nparam_grid={'criterion':['mse','mae'],\n       'max_depth':[5,7,9,11,13,15],\n       'n_estimators':[3,6,9,12,15,18]}\nrf_model=GridSearchCV(verbose=2,cv=5,n_jobs=-1,\n                      estimator=rf,param_grid=param_grid,)\nrf_model.fit(X_train,y_train)","46f03006":"print(rf_model.best_score_)\nprint(rf_model.best_estimator_.get_params())","ccbe92be":"final_model=rf_model.best_estimator_\ny_train_pre=final_model.predict(X_train)\ny_cv_pre=final_model.predict(X_cv)\nprint(mean_squared_error(y_train,y_train_pre))\nprint(mean_squared_error(y_cv,y_cv_pre))\nprint(final_model.score(X_train,y_train))\nprint(final_model.score(X_cv,y_cv))","bfeee5c8":"y_test_pre=final_model.predict(X_test)\ny_test_pre.shape","87b38068":"X_test.head(10)","c3365449":"orin_test=pd.read_csv('..\/input\/used-cars-price-prediction\/test-data.csv')\norin_test.info()","9bc4e532":"y_test_pre.head(10)","51e23c0e":"\nfinal=pd.concat([orin_test,y_test_pre],axis=1)\nfinal.to_csv('.\/submission.csv')","80f4f2b4":"### Kilometers","018e7743":"## features engineering ","1767e802":"### Seats ","acb5d195":"### Owner_Type ","046c1b24":"# Data Visualization and features engineering","094d8f3b":"### Seats  ","020d807f":"### Year ","edf4e1b9":"## RandomForestRegressor ","96df0a7f":"### Transmission ","7af62f89":"## fill the null values ","4492bb1f":"### Mileage ","e4de29e8":"### Location ","f973d1a9":"### Examine the null values","beacdbb1":"## DecisionTreeRegressor ","81b8efc8":"## LinearRegression","317d5628":"## GridSearchCV","1a22790a":"### Engine","46e8ed72":"# Nomarlization","8c3ee2b2":"### Mileage","4a0f8726":"### Fuel_Type","9bc6e70c":"# Data cleaning and features engineering","84c8c14d":"### Power ","ecbe7ba7":"### Name","7ea3f0f1":"# Modeling","984c8c44":"### Engine ","78d7a7a4":"### Name","bdb0ced5":"###   Change the data type"}}