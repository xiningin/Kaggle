{"cell_type":{"54a13bd3":"code","88a35074":"code","7562f1c5":"code","fa7f587b":"code","5bb0f791":"code","ad5ce91c":"code","848ef9eb":"code","fec6ffaa":"code","ddd502ac":"code","14164f44":"code","9bc5e2e8":"code","cc7b083d":"code","91ec71f9":"code","c4eef07e":"code","dab43369":"code","afe0d3a0":"code","a5d8bc3f":"code","a70e437e":"code","128426c6":"code","9c0df15f":"code","1b448d3a":"code","af25d08a":"code","2de6173c":"code","dbec2fe2":"code","04e69120":"markdown","e5a9cf52":"markdown","f2861115":"markdown","5d0488cf":"markdown","bea35484":"markdown","0183950c":"markdown","2104eac6":"markdown","243d9b13":"markdown","2388bdad":"markdown","5f82b23b":"markdown","06702473":"markdown","10a16faf":"markdown","03940627":"markdown","47716326":"markdown","314683d4":"markdown","59550b80":"markdown","18faff40":"markdown","ee514f97":"markdown","8d3af936":"markdown","fd1b0c22":"markdown","9c7936c4":"markdown","d812535b":"markdown","5aebfc84":"markdown","131e0564":"markdown"},"source":{"54a13bd3":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport numpy as np\nfrom scipy.stats import skew","88a35074":"df = pd.read_csv('..\/input\/pawpularity-results\/eda.csv')","7562f1c5":"df = df.set_axis(['True', 'NN', 'SVR', 'Ensemble'], axis=1)","fa7f587b":"df.describe()","5bb0f791":"df1 = df['True'].value_counts().reset_index()\nfig = px.bar(df1, y=\"True\", x=\"index\", color=\"index\",\n             color_continuous_scale='Bluered_r')\nfig.show()","ad5ce91c":"print('-'*75)\nprint('Skewness : ', skew(df['True'].values))\nprint('-'*75)","848ef9eb":"ss = [round(np.sqrt(x)) for x in df['True'].values]","fec6ffaa":"print('-'*75)\nprint('Skewness : ', skew(ss))\nprint('-'*75)","ddd502ac":"df2 = pd.DataFrame([round(y) for y in df['NN'].values])[0].value_counts().reset_index()\nfig = px.bar(df2, y=0, x=\"index\", color=\"index\",\n             color_continuous_scale='sunset')\nfig.show()","14164f44":"print('-'*75)\nprint('Skewness : ', skew(df['NN'].values))\nprint('-'*75)","9bc5e2e8":"df2 = pd.DataFrame([round(y) for y in df['SVR'].values])[0].value_counts().reset_index()\nfig = px.bar(df2, y=0, x=\"index\", color=\"index\",\n             color_continuous_scale='earth')\nfig.show()","cc7b083d":"print('-'*75)\nprint('Skewness : ', skew(df['SVR'].values))\nprint('-'*75)","91ec71f9":"df2 = pd.DataFrame([round(y) for y in df['NN'].values])[0].value_counts().reset_index()\nfig = px.bar(df2, y=0, x=\"index\", color=\"index\",\n             color_continuous_scale='purp')\nfig.show()","c4eef07e":"print('-'*75)\nprint('Skewness : ', skew(df['Ensemble'].values))\nprint('-'*75)","dab43369":"df2=df2.sort_values(by='index').reset_index(drop=True)\nfig = go.Figure()\nfig.add_traces(go.Bar(x=df['True'].value_counts().index, y=df['True'].value_counts().values, name='True'))\nfig.add_traces(go.Bar(x=df2.index.values, y=df2[0].values, name='Ensemble'))\nfig.update_layout(\n    title=\"True vs Ensemble distribution\",\n    xaxis_title=\"Pawpularity\",\n    yaxis_title=\"Count\",\n    legend_title=\"Legend Title\",\n    height=700,\n    width=1300,\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=16,\n        color=\"RebeccaPurple\"\n    )\n)\n\nfig.show()","afe0d3a0":"fig = px.parallel_coordinates(df[['True', 'NN', 'SVR', 'Ensemble']], color=\"True\",\n                             color_continuous_scale='earth',\n                             color_continuous_midpoint=2, title='True vs predictions change')\nfig.show()","a5d8bc3f":"fig = px.parallel_coordinates(df[['True', 'NN', 'SVR', 'Ensemble']].sample(frac=0.05, random_state=11).reset_index(drop=True), color=\"True\",\n                             color_continuous_scale='rdbu',\n                             color_continuous_midpoint=2,\n                             title='True vs predictions change (Small Sample)')\nfig.show()","a70e437e":"fig = px.parallel_coordinates(df[['True','Ensemble']].sample(frac=0.05, random_state=11).reset_index(drop=True), color=\"True\",\n                             color_continuous_scale='rdbu',\n                             color_continuous_midpoint=2,\n                             title='True vs predictions change (Small Sample)')\nfig.show()","128426c6":"def get_means(df):\n    all_dfs=[]\n    for i in range(0,100,10):\n        small_df = df[(df['True']>i) & (df['True']<=i+10)]\n        all_dfs.append(small_df)\n\n    all_means=[]\n    for i in range(10):\n        all_means.append(np.vstack(all_dfs[i].describe().values[1]))\n\n    all_means = np.hstack(all_means)\n    return all_means","9c0df15f":"all_means = get_means(df)","1b448d3a":"fig = go.Figure()\nxaxis_labels=[f'{i}-{i+10}' for i in range(0,100,10)]\n\n\nfig.add_trace(go.Bar(x = xaxis_labels, y=all_means[0], name = 'True avg.'))\nfig.add_trace(go.Bar(x = xaxis_labels, y=all_means[1], name = 'NN avg.'))\nfig.add_trace(go.Bar(x = xaxis_labels, y=all_means[2], name = 'SVR avg.'))\nfig.add_trace(go.Bar(x = xaxis_labels, y=all_means[3], name = 'Ensemble avg.'))\nfig.update_xaxes(type='category')\nfig.update_layout(\n    title=\"Mean values in each range of 10\",\n    xaxis_title=\"Range\",\n    yaxis_title=\"Pawpularity\",\n    legend_title=\"Values for:\",\n    height=700,\n    width=1300,\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=16,\n        color=\"RebeccaPurple\"\n    )\n)\n\nfig.show()","af25d08a":"fig = go.Figure()\nxaxis_labels=[f'{i}-{i+10}' for i in range(0,100,10)]\n\n\nfig.add_trace(go.Scatter(x = df['True'].index, y=df['True'].values, name = 'True', opacity=0.6))\nfig.add_trace(go.Scatter(x = df['Ensemble'].index, y=df['Ensemble'].values, name = 'Ensemble', opacity=0.6))\nfig.update_layout(\n    title=\"True vs Ensemble\",\n    xaxis_title=\"Id\",\n    yaxis_title=\"Pawpularity\",\n    legend_title=\"Values for:\",\n    height=700,\n    width=1300,\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=16,\n        color=\"RebeccaPurple\"\n    )\n)\nfig.show()","2de6173c":"fig = go.Figure()\nxaxis_labels=[f'{i}-{i+10}' for i in range(0,100,10)]\n\n\nfig.add_trace(go.Box(y=df['True'].values, name = 'True'))\nfig.add_trace(go.Box(y=df['NN'].values, name = 'NN'))\nfig.add_trace(go.Box(y=df['SVR'].values, name = 'SVR'))\nfig.add_trace(go.Box(y=df['Ensemble'].values, name = 'Ensemble'))\nfig.update_layout(\n    title=\"Box plots\",\n    xaxis_title=\"Values for\",\n    yaxis_title=\"Pawpularity\",\n    legend_title=\"Values for:\",\n    height=700,\n    width=1300,\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=16,\n        color=\"RebeccaPurple\"\n    )\n)\nfig.show()","dbec2fe2":"print('-'*70)\nprint('No of NN prediction having MAE of more than 5: ',len(df[np.abs(df['True']-df['NN'])>=5]))\nprint('-'*70)\nprint('No. of predictions > 30 with true values <10 :', len(df[(df['True']<10) & (df['NN']>=30)]))\nprint('-'*70)\nprint('No. of predictions < 50 with true values >80 :', len(df[(df['True']>=80) & (df['NN']<50)]))\nprint('-'*70)","04e69120":"# Parallel Coordinates Plot to see the change in values \n\nThis is an interesting plot\n\nIt shows the change in the predictions from the original Pawpularity values\n\nIt connects the dots plotted on a scale of 0-100 for each True, NN, SVR and Ensemble values.\n\nShow how the values are changed. ","e5a9cf52":"# Plotting the mean values in each range","f2861115":"# Box plots","5d0488cf":"# SVR head predictions distribution (rounded off to the nearest integer)","bea35484":"# Getting the means of each range from 0-10, 10-20 ..... 90-100","0183950c":"# Plotting for a small sample\n\nThe same plot with a smaller sample","2104eac6":"Showing the mean, median, standard deviation and other insights","243d9b13":"# True vs Prediction\n\nThis plot shows the true values and ensembled predictions. \n\nIt shows the increase and decrease in the predictions from the original values","2388bdad":"# NN predictions distribution (rounded off to the nearest integer)\n\nThe predictions of the NN (swin-transformer) is shown. Since the data output is continuous I have made it discrete by rounding it off to the nearest integer. \nThen i Plotted the distribution and shows that the predictions are almost as skewed as the actual Pawpularity","5f82b23b":"## The low and high Pawpularity predictions are way off the orginal Pawpularity","06702473":"# Some other calculations","10a16faf":"# Plotting All the True values vs Ensemble predictions\n\nPlotting the Original Pawpularity and the Ensembled Pawpularity wrt to Id","03940627":"# Ensemble predictions distribution (rounded off to the nearest integer)","47716326":"Plotting the mean values of the predictions and the true values in the range of actual values:\n\nI have divided the results in ranges of 10 for the actual values of Pawpularity and checked the mean in the respective ranges.\n\nThen I have calculated the mean of the prediction for the samples in that range.","314683d4":"# EDA of outputs vs True values\n\nThis is the output obtained from [Chris Deotte](https:\/\/www.kaggle.com\/cdeotte) notebook : [RAPIDS SVR Boost - [17.8]](https:\/\/www.kaggle.com\/cdeotte\/rapids-svr-boost-17-8)\nI have taken these results into consideration:\n* True values\n* NN OOF outputs combined\n* NN with SVR head OOF outputs combined\n* Ensemble of NN and NN with SVR head outputs (equal weights) combined\n\nI have plotted the following:\n* Distributions of the True, NN preds, SVR preds and ensemble preds\n* Change in the values from true values to ensemble predictions\n* Box plots\n\n## **Please DO Upvote**\nI will be updating with more findings :)","59550b80":"#### I have no idea if this will help","18faff40":"# Please **DO** upvote :)","ee514f97":"#### Since we have most predictions surrounded around the mean lets see the no. of extreme predictions that are way off the actual values","8d3af936":"The True values (actual Pawpularity score) distribution is shown here. It shows that the data is very skewed.","fd1b0c22":"# Reducing skewness\n\nTaking the root of each values will decrease the skewness.\n\nLet us see","9c7936c4":"# True values distribution","d812535b":"# Conclusions\n\n* The box plots show the spread of the predictions.\n* The outputs are highly concentrated in the middle. \n* Data Augmentation can help build balanced dataset. But I haven't tried it out yet. \n* Any ideas on augmentation might help :)\n","5aebfc84":"# Data Summary","131e0564":"# True vs Ensemble distribution"}}