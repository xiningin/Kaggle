{"cell_type":{"b0604b2e":"code","26d492e1":"code","5778f6e9":"code","3e0d1da2":"code","a4597bb1":"code","0727ecb2":"code","67260895":"code","01248eb4":"code","6b34e865":"code","eacbcaef":"code","3ca4fbee":"code","b47f72f5":"code","0784dc7f":"code","ebabf48b":"code","faf6b01c":"code","3c1e6b69":"code","1ba9b83b":"code","eee7b92a":"code","a689a917":"code","45a7dec0":"code","aca5dcc6":"code","9720ae77":"code","08057b35":"code","24c24812":"code","0587cd0c":"code","b73e76eb":"code","8e7962b9":"code","e0430ed3":"code","7fee2bf7":"code","8b99495a":"code","48eaaaab":"code","6e340d5d":"code","aae68367":"code","6b0676d1":"code","a247d9e8":"code","aaae8ded":"code","95b8077d":"code","521ba367":"code","32451cbf":"code","be965ec4":"code","1b60a974":"code","71a0b915":"code","62b7f9a5":"code","b74ec565":"code","f18a9e6b":"code","42a867af":"code","28984761":"code","e89c1137":"code","e50494cd":"code","9e331381":"code","3ee1da8c":"code","96d1b812":"code","3b7ad663":"code","654b5669":"code","155e84ce":"markdown","d46c4e42":"markdown","7881faae":"markdown","6d935644":"markdown","3763df25":"markdown","5e5ec907":"markdown","944fc964":"markdown","00dc274a":"markdown","2b3b1164":"markdown","cccdbdf1":"markdown","4b131e63":"markdown","76f514bd":"markdown","0b096119":"markdown","fabdaade":"markdown","7a116918":"markdown","145cb236":"markdown","b2d4da63":"markdown"},"source":{"b0604b2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","26d492e1":"train_data=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_data=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","5778f6e9":"train_data","3e0d1da2":"test_data","a4597bb1":"train_data.set_index('Id',inplace=True)","0727ecb2":"test_data.set_index('Id',inplace=True)","67260895":"test_data","01248eb4":"all_data=train_data.append(test_data)\nall_data","6b34e865":"all_data_na = (all_data.isnull().sum() \/ len(all_data)) * 100\nall_data_na[all_data_na!=0]","eacbcaef":"all_data['PoolQC'].fillna('None',inplace=True)\nall_data['MiscFeature'].fillna('None',inplace=True)\nall_data['Alley'].fillna('None',inplace=True)\nall_data['Fence'].fillna('None',inplace=True)\nall_data['FireplaceQu'].fillna('None',inplace=True)\nprint(all_data['LotFrontage'].median())\nall_data['LotFrontage'].fillna(68.0,inplace=True)\nall_data['GarageQual'].fillna('None',inplace=True)\nall_data['GarageCond'].fillna('None',inplace=True)\nall_data['GarageFinish'].fillna('None',inplace=True)\nall_data['GarageType'].fillna('None',inplace=True)\nprint(all_data['GarageYrBlt'].median())\nall_data['GarageYrBlt'].fillna(1979.0,inplace=True)\nall_data['BsmtExposure'].fillna('None',inplace=True)\nall_data['BsmtCond'].fillna('None',inplace=True)\nall_data['BsmtQual'].fillna('None',inplace=True)\nall_data['BsmtFinType2'].fillna('None',inplace=True)\nall_data['BsmtFinType1'].fillna('None',inplace=True)\nall_data['MasVnrType'].value_counts()\nall_data['MasVnrType'].fillna('None',inplace=True)\nall_data['MasVnrArea'].median()\nall_data['MasVnrArea'].fillna(0.0,inplace=True)\nall_data['MSZoning'].value_counts()\nall_data['MSZoning'].fillna('RL',inplace=True)\nall_data['BsmtFullBath'].median()\nall_data['BsmtFullBath'].fillna(0.0,inplace=True)\nall_data['BsmtHalfBath'].median()\nall_data['BsmtHalfBath'].fillna(0.0,inplace=True)\nall_data['Utilities'].value_counts()\nall_data['Utilities'].fillna('AllPub',inplace=True)\nall_data['Functional'].value_counts()\nall_data['Functional'].fillna('Typ',inplace=True)\nall_data['Electrical'].value_counts()\nall_data['Electrical'].fillna('SBrkr',inplace=True)\nall_data['BsmtUnfSF'].median()\nall_data['BsmtUnfSF'].fillna(467.0,inplace=True)\nall_data['Exterior1st'].value_counts()\nall_data['Exterior1st'].fillna('VinylSd',inplace=True)\nall_data['Exterior2nd'].value_counts()\nall_data['Exterior2nd'].fillna('VinylSd',inplace=True)\nall_data['TotalBsmtSF'].fillna(0.,inplace=True)\nall_data['GarageArea'].fillna(0.,inplace=True)\nall_data['GarageCars'].fillna(0.,inplace=True)\nall_data['BsmtFinSF1'].fillna(0.,inplace=True)\nall_data['BsmtFinSF2'].fillna(0.,inplace=True)\nall_data['KitchenQual'].value_counts()\nall_data['KitchenQual'].fillna('TA',inplace=True)\nall_data['SaleType'].value_counts()\nall_data['SaleType'].fillna('WD',inplace=True)","3ca4fbee":"all_data","b47f72f5":"for column in all_data.columns:\n    if all_data[column].dtype=='int64':\n        print(column)","0784dc7f":"all_data['MSSubClass']=all_data['MSSubClass'].astype(str)","ebabf48b":"new_all_data = pd.get_dummies(all_data)","faf6b01c":"for column in new_all_data.columns:\n    print(column)","3c1e6b69":"new_all_data.drop('MSSubClass_20',axis=1,inplace=True)\nnew_all_data.drop('MSZoning_FV',axis=1,inplace=True)\nnew_all_data.drop('Street_Grvl',axis=1,inplace=True)\nnew_all_data.drop('Alley_Grvl',axis=1,inplace=True)\nnew_all_data.drop('LotShape_IR1',axis=1,inplace=True)\nnew_all_data.drop('LandContour_Bnk',axis=1,inplace=True)\nnew_all_data.drop('Utilities_AllPub',axis=1,inplace=True)\nnew_all_data.drop('LotConfig_Corner',axis=1,inplace=True)\nnew_all_data.drop('LandSlope_Gtl',axis=1,inplace=True)\nnew_all_data.drop('Neighborhood_Blmngtn',axis=1,inplace=True)\nnew_all_data.drop('Condition1_Artery',axis=1,inplace=True)\nnew_all_data.drop('Condition2_Artery',axis=1,inplace=True)\nnew_all_data.drop('BldgType_1Fam',axis=1,inplace=True)\nnew_all_data.drop('HouseStyle_1.5Fin',axis=1,inplace=True)\nnew_all_data.drop('RoofStyle_Flat',axis=1,inplace=True)\nnew_all_data.drop('RoofMatl_ClyTile',axis=1,inplace=True)\nnew_all_data.drop('Exterior1st_AsbShng',axis=1,inplace=True)\nnew_all_data.drop('Exterior2nd_AsbShng',axis=1,inplace=True)\nnew_all_data.drop('MasVnrType_BrkCmn',axis=1,inplace=True)\nnew_all_data.drop('ExterQual_Ex',axis=1,inplace=True)\nnew_all_data.drop('ExterCond_Ex',axis=1,inplace=True)\nnew_all_data.drop('Foundation_BrkTil',axis=1,inplace=True)\nnew_all_data.drop('BsmtQual_Ex',axis=1,inplace=True)\nnew_all_data.drop('BsmtCond_Fa',axis=1,inplace=True)\nnew_all_data.drop('BsmtExposure_Av',axis=1,inplace=True)\nnew_all_data.drop('BsmtFinType1_ALQ',axis=1,inplace=True)\nnew_all_data.drop('BsmtFinType2_ALQ',axis=1,inplace=True)\nnew_all_data.drop('Heating_Floor',axis=1,inplace=True)\nnew_all_data.drop('HeatingQC_Ex',axis=1,inplace=True)\nnew_all_data.drop('CentralAir_N',axis=1,inplace=True)\nnew_all_data.drop('Electrical_FuseA',axis=1,inplace=True)\nnew_all_data.drop('KitchenQual_Ex',axis=1,inplace=True)\nnew_all_data.drop('Functional_Maj1',axis=1,inplace=True)\nnew_all_data.drop('FireplaceQu_Ex',axis=1,inplace=True)\nnew_all_data.drop('GarageType_2Types',axis=1,inplace=True)\nnew_all_data.drop('GarageFinish_Fin',axis=1,inplace=True)\nnew_all_data.drop('GarageQual_Ex',axis=1,inplace=True)\nnew_all_data.drop('GarageCond_Ex',axis=1,inplace=True)\nnew_all_data.drop('PavedDrive_N',axis=1,inplace=True)\nnew_all_data.drop('PoolQC_Ex',axis=1,inplace=True)\nnew_all_data.drop('Fence_GdPrv',axis=1,inplace=True)\nnew_all_data.drop('MiscFeature_Gar2',axis=1,inplace=True)\nnew_all_data.drop('SaleType_COD',axis=1,inplace=True)\nnew_all_data.drop('SaleCondition_Abnorml',axis=1,inplace=True)","1ba9b83b":"new_all_data","eee7b92a":"new_train_data=new_all_data.loc[1:1460,:]\nnew_test_data=new_all_data.loc[1461:,:]","a689a917":"y_train=new_train_data['SalePrice']\ny_train","45a7dec0":"X_train=new_train_data.drop('SalePrice',axis=1)","aca5dcc6":"y_test=new_test_data['SalePrice']","9720ae77":"X_test=new_test_data.drop('SalePrice',axis=1)","08057b35":"from sklearn.linear_model import LinearRegression\n\nlin_reg = LinearRegression(normalize=False)\nlin_reg.fit(X_train,y_train)","24c24812":"lin_reg.intercept_","0587cd0c":"coeff_df = pd.DataFrame(lin_reg.coef_, new_train_data.columns.drop('SalePrice'), columns=['Coefficient'])","b73e76eb":"coeff_df","8e7962b9":"predict = lin_reg.predict(X_test)\npredict","e0430ed3":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\n\npipeline = Pipeline([\n    ('std_scalar', StandardScaler())\n])\n\nss_X_train = pipeline.fit_transform(X_train)\nss_X_test = pipeline.transform(X_test)","7fee2bf7":"ss_lin_reg = LinearRegression(normalize=False)\nss_lin_reg.fit(ss_X_train,y_train)","8b99495a":"ss_lin_reg.intercept_","48eaaaab":"coeff_df = pd.DataFrame(ss_lin_reg.coef_, new_train_data.columns.drop('SalePrice'), columns=['Coefficient'])","6e340d5d":"coeff_df","aae68367":"ss_predict=ss_lin_reg.predict(ss_X_test)\nss_predict","6b0676d1":"ss_predict","a247d9e8":"submission = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","aaae8ded":"submission.set_index('Id',inplace=True)","95b8077d":"submission['SalePrice']=predict","521ba367":"submission","32451cbf":"submission.to_csv(\"submission.csv\")","be965ec4":"def J(theta,X_b,y):  # theta(n*1),X_b(m*n),y(m*1)\n    try:\n        return np.sum((y-X_b.dot(theta))**2)\/len(X_b)  # len(X_b)\u662f\u6837\u672c\u4e2a\u6570m\n    except:\n        return float('inf')\ndef dj(theta,X_b,y):\n    res=np.empty(len(theta))  # res\u662f\u68af\u5ea6\u5411\u91cf\uff0c\u957f\u5ea6\u4e3an\n    res[0]=np.sum(X_b.dot(theta)-y)\n    for j in range(1,len(theta)):\n        res[j]=(X_b.dot(theta)-y).dot(X_b[:,j])\n    return res*2\/len(X_b)\ndef gradient_descent(X_b,y,init_theta,eta,n_iters=1e4,epsilon=1e-8):\n    theta=init_theta\n    i_iter=0\n    while(i_iter<25):\n        gradient=dj(theta,X_b,y)\n        last_theta=theta\n        theta=theta-eta*gradient\n        \n        if (abs(J(theta,X_b,y)-J(last_theta,X_b,y))<epsilon):\n            break\n        i_iter += 1\n    return theta","1b60a974":"np.sum(X_b.dot(init_theta)-y_train)*2\/len(X_b)","71a0b915":"init_theta","62b7f9a5":"X_train","b74ec565":"X_b.shape","f18a9e6b":"init_theta","42a867af":"X_b=np.hstack([np.ones((X_train.shape[0],1)),X_train])  # \u5c06\u4e24\u4e2a\u77e9\u9635\u6a2a\u5411\u62fc\u63a5\ninit_theta=np.zeros(X_b.shape[1])\neta=0.00000001\ntheta=gradient_descent(X_b,y_train,init_theta,eta)\ntheta","28984761":"ss_X_b=np.hstack([np.ones((ss_X_train.shape[0],1)),X_train])  # \u5c06\u4e24\u4e2a\u77e9\u9635\u6a2a\u5411\u62fc\u63a5\ninit_theta=np.zeros(ss_X_b.shape[1])\neta=0.01\ntheta=gradient_descent(ss_X_b,y_train,init_theta,eta)\ntheta","e89c1137":"import numpy as np\nimport matplotlib.pyplot as plt\nnp.random.seed(666)\nx=2*np.random.random(size=100)\ny=x*3.+4.+np.random.normal(size=100)\nX=x.reshape(-1,1)\nprint(X.shape)\nprint(y.shape)\nplt.scatter(x,y)\nplt.show()","e50494cd":"def J(theta,X_b,y):  # theta(n*1),X_b(m*n),y(m*1)\n    try:\n        return np.sum((y-X_b.dot(theta))**2)\/len(X_b)  # len(X_b)\u662f\u6837\u672c\u4e2a\u6570m\n    except:\n        return float('inf')\ndef dj(theta,X_b,y):\n    res=np.empty(len(theta))  # res\u662f\u68af\u5ea6\u5411\u91cf\uff0c\u957f\u5ea6\u4e3an\n    res[0]=np.sum(X_b.dot(theta)-y)\n    for j in range(1,len(theta)):\n        res[j]=(X_b.dot(theta)-y).dot(X_b[:,j])\n    return res*2\/len(X_b)\ndef gradient_descent(X_b,y,init_theta,eta,n_iters=1e4,epsilon=1e-8):\n    theta=init_theta\n    i_iter=0\n    while(i_iter<n_iters):\n        gradient=dj(theta,X_b,y)\n        last_theta=theta\n        theta=theta-eta*gradient\n        \n        if (abs(J(theta,X_b,y)-J(last_theta,X_b,y))<epsilon):\n            break\n        i_iter += 1\n    return theta,i_iter","9e331381":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\n\npipeline = Pipeline([\n    ('std_scalar', StandardScaler())\n])\n\nss_X = pipeline.fit_transform(X)","3ee1da8c":"X_b=np.hstack([np.ones((len(X),1)),X])  # \u5c06\u4e24\u4e2a\u77e9\u9635\u6a2a\u5411\u62fc\u63a5\ninit_theta=np.zeros(X_b.shape[1])\neta=0.01\ntheta,i_iter=gradient_descent(X_b,y,init_theta,eta)\nprint(theta)\nprint(i_iter)","96d1b812":"plt.scatter(X,y)\nplt.axline((0, 4.02145786), slope=3.00706277,color='r')\nplt.show()","3b7ad663":"X_b=np.hstack([np.ones((len(ss_X),1)),ss_X])  # \u5c06\u4e24\u4e2a\u77e9\u9635\u6a2a\u5411\u62fc\u63a5\ninit_theta=np.zeros(X_b.shape[1])\neta=0.01\ntheta,i_iter=gradient_descent(X_b,y,init_theta,eta)\nprint(theta)\nprint(i_iter)","654b5669":"plt.scatter(ss_X,y)\nplt.axline((0, 6.98060385 ), slope=1.82363034,color='r')\nplt.show()","155e84ce":"![\u539f\u7406.png](attachment:a57f708f-1a5d-4708-b002-59107bb864f1.png)","d46c4e42":"### \u4e3a\u4e86\u51cf\u5c11\u591a\u91cd\u5171\u7ebf\u6027\uff0c\u5c06\u6bcf\u4e2a\u5206\u7c7b\u53d8\u91cf\u751f\u6210\u7684dummy\u53d8\u91cf\u4e2d\u5220\u9664\u4e00\u4e2a","7881faae":"### \u5c06\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u62fc\u63a5\uff0c\u4fbf\u4e8e\u5904\u7406\u7f3a\u5931\u503c","6d935644":"### \u5bf9\u81ea\u53d8\u91cf\u6807\u51c6\u5316\u540e\u518d\u7ebf\u6027\u56de\u5f52","3763df25":"### \u5bf9\u672c\u9898\u6570\u636e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u597d\u50cf\u7ed3\u679c\u6709\u8bef","5e5ec907":"### \u8fdb\u884c\u72ec\u70ed\u7f16\u7801","944fc964":"### \u89c2\u5bdf\u6709\u7f3a\u5931\u503c\u7684\u7279\u5f81","00dc274a":"### \u8bfb\u5165\u6570\u636e","2b3b1164":"### \u9009\u62e9\u8bfe\u4ef6\u4e2d\u7684\u4f8b\u5b50\uff0c\u6bd4\u8f83\u666e\u901a\u7ebf\u6027\u56de\u5f52\u548c\u5bf9\u81ea\u53d8\u91cf\u6807\u51c6\u5316\u540e\u7ebf\u6027\u56de\u5f52","cccdbdf1":"### \u5bf9\u4e8e\u4e0d\u540c\u7279\u5f81\u6709\u4e0d\u540c\u5904\u7406\u65b9\u6cd5\uff0c\u5982PoolQC\u4e2d\u7684\u7f3a\u5931\u503c\u8868\u793a\u6ca1\u6709Pool\uff0c\u56e0\u6b64\u8981\u7528None\u6765\u8868\u793a\u65e0\u3002\u5bf9LotFrontage\uff0c\u7f3a\u5931\u503c\u8868\u793a\u4e0d\u77e5\u9053\u5176\u6570\u503c\uff0c\u6240\u4ee5\u9009\u62e9\u4e2d\u4f4d\u6570\u66ff\u4ee3","4b131e63":"### \u5c3d\u7ba1MSSubClass\u662f\u6570\u503c\u578b\u53d8\u91cf\uff0c\u4f46\u662f\u5176\u6570\u503c\u4e4b\u95f4\u6ca1\u6709\u7ebf\u6027\u5173\u7cfb\uff0c\u800c\u662f\u8868\u793a\u4e0d\u540c\u7c7b\u522b\uff0c\u6545\u8981\u8f6c\u4e3a\u5206\u7c7b\u53d8\u91cf","76f514bd":"\u539f\u59cb\u6570\u636e\u56de\u5f52\u5f97\u5230\u7ed3\u679cRMSE\u4e3a0.19708\uff0c\u6807\u51c6\u5316\u6570\u636e\u56de\u5f52\u5f97\u5230\u7ed3\u679cRMSE\u4e3a1.99913","0b096119":"Q1:\u5982\u4f55\u5c06\u7c7b\u522b\u578b\u53d8\u91cf\u5f15\u2f0a\u7ebf\u6027\u56de\u5f52\uff0c\u63d0\u51fa\u2f84\u5c111\u79cd\u2f45\u6848\uff1f\n\nA1:\u5e38\u89c1\u5904\u7406\u65b9\u6cd5\u6709\u5e8f\u5217\u5316\u6807\u7b7e\u7f16\u7801\u548c\u72ec\u70ed\u7f16\u7801\u3002\u5e8f\u5217\u5316\u6807\u7b7e\u7f16\u7801\u6307\u5c06\u5206\u7c7b\u53d8\u91cf\u7684\u53d6\u503c\u6309\u4e00\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u5e76\u4e3a\u5176\u8d4b\u503c0\uff0c1\uff0c2...\n\n\u72ec\u70ed\u7f16\u7801\u6307\u4e3a\u5206\u7c7b\u53d8\u91cf\u7684\u6bcf\u79cd\u53d6\u503c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\uff0c\u82e5\u5c5e\u4e8e\u8fd9\u4e2a\u53d6\u503c\uff0c\u5219\u5176\u53d6\u503c\u4e3a1\uff0c\u5426\u5219\u4e3a0\uff0c\u672c\u9898\u91c7\u7528\u72ec\u70ed\u7f16\u7801\u3002","fabdaade":"### \u7528\u539f\u59cb\u6570\u636e\u7ebf\u6027\u56de\u5f52","7a116918":"### \u5c06\u539f\u59cb\u6570\u636e\u56de\u5f52\u5f97\u5230\u7684\u7ed3\u679c\u63d0\u4ea4","145cb236":"\u7531\u4e0b\u56fe\u53ef\u89c1\uff0c\u5de6\u4fa7\u662f\u6ca1\u6709\u8fdb\u884c\u6807\u51c6\u5316\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u81ea\u53d8\u91cf\u6570\u91cf\u7ea7\u4e0d\u540c\uff0c\u5bfc\u81f4\u56de\u5f52\u7cfb\u6570\u7684\u6570\u91cf\u7ea7\u4e5f\u4e0d\u540c\u3002\u5728\u4e8c\u7ef4\u60c5\u51b5\u4e0b\uff0c\u635f\u5931\u51fd\u6570\u7b49\u503c\u7ebf\u5c31\u662f\u5de6\u4fa7\u7684\u692d\u5706\u72b6\u3002\u5f53\u692d\u5706\u8d8a\u201c\u6241\u5e73\u201d\uff0c\u5373\u81ea\u53d8\u91cf\u95f4\u6570\u91cf\u7ea7\u76f8\u5dee\u8d8a\u5927\uff0c\u8fed\u4ee3\u6b21\u6570\u8d8a\u591a\u3002\n\n\u5bf9\u81ea\u53d8\u91cf\u8fdb\u884c\u6807\u51c6\u5316\u65f6\uff0c\u5404\u81ea\u53d8\u91cf\u6570\u91cf\u7ea7\u76f8\u540c\uff0c\u56de\u5f52\u7cfb\u6570\u4e5f\u76f8\u8fd1\u3002\u4e8c\u7ef4\u60c5\u51b5\u4e0b\uff0c\u635f\u5931\u51fd\u6570\u7b49\u503c\u7ebf\u8fd1\u4f3c\u63a5\u8fd1\u5706\u5f62\uff0c\u56e0\u6b64\u8fed\u4ee3\u6b21\u6570\u8f83\u5c11\u3002","b2d4da63":"Q2:\u81ea\u53d8\u91cf\u8fdb\u2f8f\u6807\u51c6\u5316\u4f1a\u5bf9\u6a21\u578b\u5e26\u6765\u54ea\u4e9b\u5f71\u54cd\uff08\u5c1d\u8bd5\u4ece\u68af\u5ea6\u3001\u56de\u5f52\u7cfb\u6570\u7b49\u2ec6\u5ea6\uff09\uff1f\u5c1d\u8bd5\u5728\u9879\u76ee\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u5b9e\u9a8c\u3002\n\nA2:\u6bd4\u8f83\u53d1\u73b0\u81ea\u53d8\u91cf\u6807\u51c6\u5316\u540e\u7684\u7ebf\u6027\u56de\u5f52\u8fed\u4ee3\u6b21\u6570\u66f4\u5c11\uff0c\u56e0\u4e3a\u6807\u51c6\u5316\u6d88\u9664\u81ea\u53d8\u91cf\u91cf\u7eb2\u7684\u5f71\u54cd\uff0c\u4f7f\u81ea\u53d8\u91cf\u6709\u76f8\u540c\u7684\u6570\u91cf\u7ea7\uff0c\u56e0\u6b64\u68af\u5ea6\u5411\u91cf\u7684\u6bcf\u4e2a\u7ef4\u5ea6\u6570\u503c\u4e5f\u6709\u76f8\u540c\u6570\u91cf\u7ea7\uff0c\u4fbf\u4e8e\u68af\u5ea6\u4e0b\u964d\u3002"}}