{"cell_type":{"e7d4efbf":"code","28424704":"code","874dc0b0":"code","98de728a":"code","e5d569fd":"code","10870770":"code","4c42fa89":"code","10eba44a":"code","33dd72d3":"code","7c9b851a":"code","425c79a1":"code","64274003":"code","cd430780":"markdown","bede8f4e":"markdown","50a1e611":"markdown","a0b1e24e":"markdown","eca73ffb":"markdown","379f6a7f":"markdown","fc26af3a":"markdown","491a9684":"markdown","adeac5c6":"markdown","77b2e620":"markdown"},"source":{"e7d4efbf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nprint(os.listdir(\"..\/input\"))","28424704":"df = pd.read_csv(\"..\/input\/data.csv\")\ndf.head(5)","874dc0b0":"plt.title(\"Us data\")\nplt.xlabel(\"Height\")\nplt.ylabel(\"Weight\")\nplt.scatter(df.Height,df.Weight,color='blue')","98de728a":"np.where(np.isnan(df['Height']))","e5d569fd":"np.where(np.isnan(df['Weight']))","10870770":"from sklearn.model_selection import train_test_split\nx = df[['Height']]\ny = df['Weight']","4c42fa89":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)","10eba44a":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()","33dd72d3":"model.fit(x_train,y_train)","7c9b851a":"df.head(1)","425c79a1":"print(model.predict([[1.47]]))","64274003":"model.score(x_test,y_test)","cd430780":"**we are getting output as 51.05 it's near to actual value 52.21**","bede8f4e":"No NaN entry in Height column, let's check for weight column","50a1e611":"we are getting 0.97 accuracy (97%).","a0b1e24e":"**Reading data using pandas read_csv method**","eca73ffb":"Here data is already clean. so now let's go for data split (training and testing set) ","379f6a7f":"**Now let's check if data contains NaN value or not.**","fc26af3a":"**Let's see score of our model.**","491a9684":"Plotting graph.","adeac5c6":"    Let's move to LinearRegression","77b2e620":"**Let's see what our model will predict for first row of data.**"}}