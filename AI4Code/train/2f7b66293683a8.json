{"cell_type":{"bb8078c1":"code","d9bc4a02":"code","849116a7":"code","c56f4ead":"code","a8ffca93":"code","1235b867":"code","46615239":"code","8a25eceb":"code","c23544d9":"code","05558768":"code","ca1b430e":"code","02f940f0":"code","f5d35fe3":"code","9fac8fa5":"code","5f2c8a47":"code","b44139c8":"markdown","37a0417f":"markdown","1ce62a39":"markdown","5d39f2f8":"markdown","7bb32400":"markdown","e15d10b3":"markdown","fcdcdb1d":"markdown","b83ceeab":"markdown","745b85fa":"markdown","de025ee6":"markdown","beffde10":"markdown","ea78cab6":"markdown","d60491fc":"markdown","6c9aeb97":"markdown","1054fad3":"markdown","b2aae82a":"markdown","7c4210b0":"markdown","55b00b31":"markdown","1b0a0b3c":"markdown","0c20d12a":"markdown","10c89d98":"markdown","ed00ddad":"markdown","e942fdd6":"markdown","0e013d31":"markdown","c1890d10":"markdown"},"source":{"bb8078c1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        path=os.path.join(dirname, filename)\n        if 'train' in path:\n            __training_path=path\n        elif 'test' in path:\n            __test_path=path","d9bc4a02":"#loaded files\nprint(f'Training path:{__training_path}\\nTest path:{__test_path}')","849116a7":"# Kaggle Environment Prepration\n#update kaggle env\nimport sys\n#you may update the environment that allow you to run the whole code\n!{sys.executable} -m pip install --upgrade scikit-learn==\"0.24.2\"","c56f4ead":"#record this information if you need to run the Kernel internally\nimport sklearn; sklearn.show_versions() ","a8ffca93":"def __load__data(__training_path, __test_path, concat=False):\n\t\"\"\"load data as input dataset\n\tparams: __training_path: the training path of input dataset\n\tparams: __test_path: the path of test dataset\n\tparams: if it is True, then it will concatinate the training and test dataset as output\n\treturns: generate final loaded dataset as dataset, input and test\n\t\"\"\"\n\t# LOAD DATA\n\timport pandas as pd\n\t__train_dataset = pd.read_csv(__training_path, delimiter=',')\n\t__test_dataset = pd.read_csv(__test_path, delimiter=',')\n\treturn __train_dataset, __test_dataset\n__train_dataset, __test_dataset = __load__data(__training_path, __test_path, concat=True)\n__train_dataset.head()","1235b867":"# STORE SUBMISSION RELEVANT COLUMNS\n__test_dataset_submission_columns = __test_dataset['Id']","46615239":"# DISCARD IRRELEVANT COLUMNS\n__train_dataset.drop(['Id'], axis=1, inplace=True)\n__test_dataset.drop(['Id'], axis=1, inplace=True)","8a25eceb":"# PREPROCESSING-1\nfrom sklearn.impute import SimpleImputer\nimport numpy as np\n_NUMERIC_COLS_WITH_MISSING_VALUES = ['MSSubClass', 'BsmtFinSF2', 'Fireplaces', 'FullBath', 'LotArea', 'GarageYrBlt', 'GarageCars', 'BsmtHalfBath', 'BsmtFinSF1', 'OverallCond', 'MiscVal', 'TotRmsAbvGrd', 'YrSold', 'KitchenAbvGr', 'HalfBath', 'YearBuilt', '1stFlrSF', 'GarageArea', 'MoSold', 'LotFrontage', 'BsmtFullBath', 'YearRemodAdd', 'ScreenPorch', 'WoodDeckSF', 'GrLivArea', 'SalePrice', 'OpenPorchSF', 'BedroomAbvGr', '3SsnPorch', 'BsmtUnfSF', 'EnclosedPorch', 'PoolArea', 'LowQualFinSF', 'MasVnrArea', '2ndFlrSF', 'OverallQual', 'TotalBsmtSF']\nfor _col in _NUMERIC_COLS_WITH_MISSING_VALUES:\n    __simple_imputer = SimpleImputer(missing_values=np.nan, strategy='mean')\n    __train_dataset[_col] = __simple_imputer.fit_transform(__train_dataset[_col].values.reshape(-1,1))[:,0]\n    if _col in __test_dataset:\n        __test_dataset[_col] = __simple_imputer.transform(__test_dataset[_col].astype(__train_dataset[_col].dtypes).values.reshape(-1,1))[:,0]","c23544d9":"# PREPROCESSING-2\nfrom sklearn.impute import SimpleImputer\nimport numpy as np\n_STRING_COLS_WITH_MISSING_VALUES = ['Condition2', 'Fence', 'LandSlope', 'GarageCond', 'BsmtExposure', 'LotConfig', 'HeatingQC', 'SaleCondition', 'MSZoning', 'Alley', 'Exterior1st', 'Exterior2nd', 'Heating', 'HouseStyle', 'Utilities', 'BsmtCond', 'SaleType', 'BldgType', 'FireplaceQu', 'Street', 'BsmtFinType2', 'ExterQual', 'ExterCond', 'BsmtFinType1', 'Functional', 'GarageQual', 'CentralAir', 'LandContour', 'LotShape', 'GarageFinish', 'PoolQC', 'Foundation', 'RoofMatl', 'Neighborhood', 'GarageType', 'PavedDrive', 'KitchenQual', 'Condition1', 'Electrical', 'MiscFeature', 'MasVnrType', 'BsmtQual', 'RoofStyle']\nfor _col in _STRING_COLS_WITH_MISSING_VALUES:\n    __simple_imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\n    __train_dataset[_col] = __simple_imputer.fit_transform(__train_dataset[_col].values.reshape(-1,1))[:,0]\n    if _col in __test_dataset:\n        __test_dataset[_col] = __simple_imputer.transform(__test_dataset[_col].astype(__train_dataset[_col].dtypes).values.reshape(-1,1))[:,0]","05558768":"# PREPROCESSING-3\nfrom sklearn.preprocessing import OrdinalEncoder\n_CATEGORICAL_COLS = ['MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual', 'Functional', 'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'PoolQC', 'Fence', 'MiscFeature', 'SaleType', 'SaleCondition']\n_ohe = OrdinalEncoder(handle_unknown=\"use_encoded_value\", unknown_value=-1)\n__train_dataset[_CATEGORICAL_COLS] = pd.DataFrame(_ohe.fit_transform(__train_dataset[_CATEGORICAL_COLS]), columns=_CATEGORICAL_COLS)\n__test_dataset[_CATEGORICAL_COLS] = pd.DataFrame(_ohe.transform(__test_dataset[_CATEGORICAL_COLS]), columns=_CATEGORICAL_COLS)","ca1b430e":"# PREPROCESSING-4\nimport numpy as np\n_NUMERIC_COLS_TO_SCALE = ['MSSubClass', 'LotFrontage', 'LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'MasVnrArea', 'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces', 'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF', 'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal', 'MoSold', 'YrSold', 'SalePrice']\nfor _col in _NUMERIC_COLS_TO_SCALE:\n    __train_dataset[_col] = np.log1p(__train_dataset[_col])\n    if _col in __test_dataset:\n        __test_dataset[_col] = np.log1p(__test_dataset[_col])","02f940f0":"# DETACH TARGET\n__feature_train = __train_dataset.drop(['SalePrice'], axis=1)\n__target_train =__train_dataset['SalePrice']\n__feature_test = __test_dataset","f5d35fe3":"# MODEL\nimport numpy as np\nfrom catboost import CatBoostRegressor\n__model = CatBoostRegressor()\n__model.fit(__feature_train, __target_train)\n__y_pred = __model.predict(__feature_test)","9fac8fa5":"# INVERSE TARGET\nimport numpy as np\nif '__target_test' in locals():\n    __target_test = np.expm1(__target_test)\n__y_pred = np.expm1(__y_pred)","5f2c8a47":"# SUBMISSION\nsubmission = pd.DataFrame(columns=['Id'], data=__test_dataset_submission_columns)\nsubmission['SalePrice'] = __y_pred\nsubmission.to_csv(\"kaggle_submission.csv\", index=False)\nsubmission.head()","b44139c8":"# Input Dataset","37a0417f":"Condition2, Fence, LandSlope, GarageCond, BsmtExposure, LotConfig, HeatingQC, SaleCondition, MSZoning, Alley, Exterior1st, Exterior2nd, Heating, HouseStyle, Utilities, BsmtCond, SaleType, BldgType, FireplaceQu, Street, BsmtFinType2, ExterQual, ExterCond, BsmtFinType1, Functional, GarageQual, CentralAir, LandContour, LotShape, GarageFinish, PoolQC, Foundation, RoofMatl, Neighborhood, GarageType, PavedDrive, KitchenQual, Condition1, Electrical, MiscFeature, MasVnrType, BsmtQual, RoofStyle","1ce62a39":"# Finding Intresting Datapoints\nLet's process each field by their histogram frequency and check if there is any intresting point.\nThere are 54 number of intresting values in the following columns.\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>Field<\/th>\n      <th>Value<\/th>\n      <th>Bound<\/th>\n      <th>lower<\/th>\n      <th>upper<\/th>\n      <th>Total<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>MSSubClass<\/td>\n      <td>20<\/td>\n      <td>Upper<\/td>\n      <td>4.0084<\/td>\n      <td>535.6682<\/td>\n      <td>536<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>MSZoning<\/td>\n      <td>RL<\/td>\n      <td>Upper<\/td>\n      <td>10.0024<\/td>\n      <td>1150.6268<\/td>\n      <td>1151<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>LotFrontage<\/td>\n      <td>60.0<\/td>\n      <td>Upper<\/td>\n      <td>0.0110<\/td>\n      <td>142.1970<\/td>\n      <td>143<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>LotArea<\/td>\n      <td>7200<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>24.8928<\/td>\n      <td>25<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>LandContour<\/td>\n      <td>Lvl<\/td>\n      <td>Upper<\/td>\n      <td>36.0042<\/td>\n      <td>1310.6256<\/td>\n      <td>1311<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>LotConfig<\/td>\n      <td>Inside<\/td>\n      <td>Upper<\/td>\n      <td>4.0172<\/td>\n      <td>1051.6844<\/td>\n      <td>1052<\/td>\n    <\/tr>\n    <tr>\n      <th>6<\/th>\n      <td>Neighborhood<\/td>\n      <td>NAmes<\/td>\n      <td>Upper<\/td>\n      <td>2.0168<\/td>\n      <td>224.8200<\/td>\n      <td>225<\/td>\n    <\/tr>\n    <tr>\n      <th>7<\/th>\n      <td>Condition1<\/td>\n      <td>Norm<\/td>\n      <td>Upper<\/td>\n      <td>2.0024<\/td>\n      <td>1259.0568<\/td>\n      <td>1260<\/td>\n    <\/tr>\n    <tr>\n      <th>8<\/th>\n      <td>Condition2<\/td>\n      <td>Norm<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1443.9927<\/td>\n      <td>1445<\/td>\n    <\/tr>\n    <tr>\n      <th>9<\/th>\n      <td>BldgType<\/td>\n      <td>1Fam<\/td>\n      <td>Upper<\/td>\n      <td>31.0048<\/td>\n      <td>1219.5576<\/td>\n      <td>1220<\/td>\n    <\/tr>\n    <tr>\n      <th>10<\/th>\n      <td>HouseStyle<\/td>\n      <td>1Story<\/td>\n      <td>Upper<\/td>\n      <td>8.0021<\/td>\n      <td>725.8033<\/td>\n      <td>726<\/td>\n    <\/tr>\n    <tr>\n      <th>11<\/th>\n      <td>OverallCond<\/td>\n      <td>5<\/td>\n      <td>Upper<\/td>\n      <td>1.0032<\/td>\n      <td>820.5448<\/td>\n      <td>821<\/td>\n    <\/tr>\n    <tr>\n      <th>12<\/th>\n      <td>YearBuilt<\/td>\n      <td>2006<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>66.9667<\/td>\n      <td>67<\/td>\n    <\/tr>\n    <tr>\n      <th>13<\/th>\n      <td>YearRemodAdd<\/td>\n      <td>1950<\/td>\n      <td>Upper<\/td>\n      <td>4.0060<\/td>\n      <td>177.5140<\/td>\n      <td>178<\/td>\n    <\/tr>\n    <tr>\n      <th>14<\/th>\n      <td>RoofStyle<\/td>\n      <td>Gable<\/td>\n      <td>Upper<\/td>\n      <td>2.0025<\/td>\n      <td>1140.5725<\/td>\n      <td>1141<\/td>\n    <\/tr>\n    <tr>\n      <th>15<\/th>\n      <td>RoofMatl<\/td>\n      <td>CompShg<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1433.0039<\/td>\n      <td>1434<\/td>\n    <\/tr>\n    <tr>\n      <th>16<\/th>\n      <td>Exterior1st<\/td>\n      <td>VinylSd<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>514.5898<\/td>\n      <td>515<\/td>\n    <\/tr>\n    <tr>\n      <th>17<\/th>\n      <td>Exterior2nd<\/td>\n      <td>VinylSd<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>503.5650<\/td>\n      <td>504<\/td>\n    <\/tr>\n    <tr>\n      <th>18<\/th>\n      <td>MasVnrArea<\/td>\n      <td>0.0<\/td>\n      <td>Upper<\/td>\n      <td>0.0327<\/td>\n      <td>833.1069<\/td>\n      <td>861<\/td>\n    <\/tr>\n    <tr>\n      <th>19<\/th>\n      <td>ExterCond<\/td>\n      <td>TA<\/td>\n      <td>Upper<\/td>\n      <td>1.0008<\/td>\n      <td>1281.5456<\/td>\n      <td>1282<\/td>\n    <\/tr>\n    <tr>\n      <th>20<\/th>\n      <td>BsmtCond<\/td>\n      <td>TA<\/td>\n      <td>Upper<\/td>\n      <td>2.0129<\/td>\n      <td>1310.6262<\/td>\n      <td>1311<\/td>\n    <\/tr>\n    <tr>\n      <th>21<\/th>\n      <td>BsmtExposure<\/td>\n      <td>No<\/td>\n      <td>Upper<\/td>\n      <td>114.0060<\/td>\n      <td>952.7804<\/td>\n      <td>953<\/td>\n    <\/tr>\n    <tr>\n      <th>22<\/th>\n      <td>BsmtFinSF1<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>438.0620<\/td>\n      <td>467<\/td>\n    <\/tr>\n    <tr>\n      <th>23<\/th>\n      <td>BsmtFinType2<\/td>\n      <td>Unf<\/td>\n      <td>Upper<\/td>\n      <td>14.0025<\/td>\n      <td>1255.3990<\/td>\n      <td>1256<\/td>\n    <\/tr>\n    <tr>\n      <th>24<\/th>\n      <td>BsmtFinSF2<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1274.5816<\/td>\n      <td>1293<\/td>\n    <\/tr>\n    <tr>\n      <th>25<\/th>\n      <td>BsmtUnfSF<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>109.5089<\/td>\n      <td>118<\/td>\n    <\/tr>\n    <tr>\n      <th>26<\/th>\n      <td>TotalBsmtSF<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>36.8560<\/td>\n      <td>37<\/td>\n    <\/tr>\n    <tr>\n      <th>27<\/th>\n      <td>Heating<\/td>\n      <td>GasA<\/td>\n      <td>Upper<\/td>\n      <td>1.0005<\/td>\n      <td>1427.2950<\/td>\n      <td>1428<\/td>\n    <\/tr>\n    <tr>\n      <th>28<\/th>\n      <td>Electrical<\/td>\n      <td>SBrkr<\/td>\n      <td>Upper<\/td>\n      <td>1.0008<\/td>\n      <td>1333.5040<\/td>\n      <td>1334<\/td>\n    <\/tr>\n    <tr>\n      <th>29<\/th>\n      <td>1stFlrSF<\/td>\n      <td>864<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>24.3232<\/td>\n      <td>25<\/td>\n    <\/tr>\n    <tr>\n      <th>30<\/th>\n      <td>2ndFlrSF<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>794.9296<\/td>\n      <td>829<\/td>\n    <\/tr>\n    <tr>\n      <th>31<\/th>\n      <td>LowQualFinSF<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1430.7087<\/td>\n      <td>1434<\/td>\n    <\/tr>\n    <tr>\n      <th>32<\/th>\n      <td>GrLivArea<\/td>\n      <td>864<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>21.3120<\/td>\n      <td>22<\/td>\n    <\/tr>\n    <tr>\n      <th>33<\/th>\n      <td>BedroomAbvGr<\/td>\n      <td>3<\/td>\n      <td>Upper<\/td>\n      <td>1.0035<\/td>\n      <td>803.6878<\/td>\n      <td>804<\/td>\n    <\/tr>\n    <tr>\n      <th>34<\/th>\n      <td>KitchenAbvGr<\/td>\n      <td>1<\/td>\n      <td>Upper<\/td>\n      <td>1.0003<\/td>\n      <td>1391.6019<\/td>\n      <td>1392<\/td>\n    <\/tr>\n    <tr>\n      <th>35<\/th>\n      <td>Functional<\/td>\n      <td>Typ<\/td>\n      <td>Upper<\/td>\n      <td>1.0024<\/td>\n      <td>1359.2044<\/td>\n      <td>1360<\/td>\n    <\/tr>\n    <tr>\n      <th>36<\/th>\n      <td>GarageType<\/td>\n      <td>Attchd<\/td>\n      <td>Upper<\/td>\n      <td>6.0015<\/td>\n      <td>869.7585<\/td>\n      <td>870<\/td>\n    <\/tr>\n    <tr>\n      <th>37<\/th>\n      <td>GarageYrBlt<\/td>\n      <td>2005.0<\/td>\n      <td>Upper<\/td>\n      <td>0.0097<\/td>\n      <td>64.9418<\/td>\n      <td>65<\/td>\n    <\/tr>\n    <tr>\n      <th>38<\/th>\n      <td>GarageCars<\/td>\n      <td>2<\/td>\n      <td>Upper<\/td>\n      <td>5.0304<\/td>\n      <td>823.8180<\/td>\n      <td>824<\/td>\n    <\/tr>\n    <tr>\n      <th>39<\/th>\n      <td>GarageArea<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>79.5920<\/td>\n      <td>81<\/td>\n    <\/tr>\n    <tr>\n      <th>40<\/th>\n      <td>GarageQual<\/td>\n      <td>TA<\/td>\n      <td>Upper<\/td>\n      <td>3.0000<\/td>\n      <td>1310.4948<\/td>\n      <td>1311<\/td>\n    <\/tr>\n    <tr>\n      <th>41<\/th>\n      <td>GarageCond<\/td>\n      <td>TA<\/td>\n      <td>Upper<\/td>\n      <td>2.0020<\/td>\n      <td>1325.4836<\/td>\n      <td>1326<\/td>\n    <\/tr>\n    <tr>\n      <th>42<\/th>\n      <td>WoodDeckSF<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>741.2621<\/td>\n      <td>761<\/td>\n    <\/tr>\n    <tr>\n      <th>43<\/th>\n      <td>OpenPorchSF<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>643.3973<\/td>\n      <td>656<\/td>\n    <\/tr>\n    <tr>\n      <th>44<\/th>\n      <td>EnclosedPorch<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1237.2797<\/td>\n      <td>1252<\/td>\n    <\/tr>\n    <tr>\n      <th>45<\/th>\n      <td>3SsnPorch<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1433.2773<\/td>\n      <td>1436<\/td>\n    <\/tr>\n    <tr>\n      <th>46<\/th>\n      <td>ScreenPorch<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1333.9650<\/td>\n      <td>1344<\/td>\n    <\/tr>\n    <tr>\n      <th>47<\/th>\n      <td>PoolArea<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1451.9836<\/td>\n      <td>1453<\/td>\n    <\/tr>\n    <tr>\n      <th>48<\/th>\n      <td>Fence<\/td>\n      <td>MnPrv<\/td>\n      <td>Upper<\/td>\n      <td>11.0129<\/td>\n      <td>156.9706<\/td>\n      <td>157<\/td>\n    <\/tr>\n    <tr>\n      <th>49<\/th>\n      <td>MiscFeature<\/td>\n      <td>Shed<\/td>\n      <td>Upper<\/td>\n      <td>1.0003<\/td>\n      <td>48.9859<\/td>\n      <td>49<\/td>\n    <\/tr>\n    <tr>\n      <th>50<\/th>\n      <td>MiscVal<\/td>\n      <td>0<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>1405.2060<\/td>\n      <td>1408<\/td>\n    <\/tr>\n    <tr>\n      <th>51<\/th>\n      <td>SaleType<\/td>\n      <td>WD<\/td>\n      <td>Upper<\/td>\n      <td>2.0008<\/td>\n      <td>1266.0840<\/td>\n      <td>1267<\/td>\n    <\/tr>\n    <tr>\n      <th>52<\/th>\n      <td>SaleCondition<\/td>\n      <td>Normal<\/td>\n      <td>Upper<\/td>\n      <td>4.0040<\/td>\n      <td>1197.4635<\/td>\n      <td>1198<\/td>\n    <\/tr>\n    <tr>\n      <th>53<\/th>\n      <td>SalePrice<\/td>\n      <td>140000<\/td>\n      <td>Upper<\/td>\n      <td>1.0000<\/td>\n      <td>19.8014<\/td>\n      <td>20<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","5d39f2f8":"MSSubClass, BsmtFinSF2, Fireplaces, FullBath, LotArea, GarageYrBlt, GarageCars, BsmtHalfBath, BsmtFinSF1, OverallCond, MiscVal, TotRmsAbvGrd, YrSold, KitchenAbvGr, HalfBath, YearBuilt, 1stFlrSF, GarageArea, MoSold, LotFrontage, BsmtFullBath, YearRemodAdd, ScreenPorch, WoodDeckSF, GrLivArea, SalePrice, OpenPorchSF, BedroomAbvGr, 3SsnPorch, BsmtUnfSF, EnclosedPorch, PoolArea, LowQualFinSF, MasVnrArea, 2ndFlrSF, OverallQual, TotalBsmtSF","7bb32400":"## Check training and test path","e15d10b3":"## Numeric to Scale","fcdcdb1d":"In the given input dataset there are <b>43 columns <\/b> with string values as follows:","b83ceeab":"Competition dataset located in \"\/kaggle\/input\"; This path defined by Kaggle to access the competition file. We will list two files from this path as input files.","745b85fa":"# Training Model and Prediction\nFirst, we will train a model based on preprocessed values of training data set.\nSecond, let's predict test values based on the trained model.","de025ee6":"## Remove Missing data in Categorical Columns","beffde10":"The following code removes the missing values from those columns. We use average value (median) of each column to replace the null values.","ea78cab6":"The following code removes the missing values.","d60491fc":"# Submission File\nWe have to maintain the target columns in submission.csv.","6c9aeb97":"## Remove Missing Data in Numerical Columns","1054fad3":"## CatBoostRegressor\nWe will use CatBoostRegressor which is a fast, scalable, high performance gradient boosting on decision trees library. Used for ranking, classification, regression and other ML tasks.\n[CatBoostRegressor Refenece](https:\/\/catboost.ai\/docs\/installation\/python-installation-method-pip-install)","b2aae82a":"The following code encode the selected columns.","7c4210b0":"In the given input dataset there are <b>37 columns <\/b> with  missing data as follows:","55b00b31":"In the given input dataset there are <b>43 columns <\/b> with  missing data as follows:","1b0a0b3c":"### Target Column\nThe target column is the value which we need to predict.\nTherefore, we need to detach the target columns in prediction.\nNote that if we don't drop this fields, it will generate a model with high accuracy on training and worst accuracy on test (because the value in test dataset is Null).\nTarget column: \"SalePrice\"","0c20d12a":"In the given input dataset there are <b>37 columns <\/b> with numeric values as follows where we can convert those values to scale through [log1p](https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.log1p.html).","10c89d98":"MSSubClass, LotFrontage, LotArea, OverallQual, OverallCond, YearBuilt, YearRemodAdd, MasVnrArea, BsmtFinSF1, BsmtFinSF2, BsmtUnfSF, TotalBsmtSF, 1stFlrSF, 2ndFlrSF, LowQualFinSF, GrLivArea, BsmtFullBath, BsmtHalfBath, FullBath, HalfBath, BedroomAbvGr, KitchenAbvGr, TotRmsAbvGrd, Fireplaces, GarageYrBlt, GarageCars, GarageArea, WoodDeckSF, OpenPorchSF, EnclosedPorch, 3SsnPorch, ScreenPorch, PoolArea, MiscVal, MoSold, YrSold, SalePrice","ed00ddad":"# Load Competition Dataset","e942fdd6":"## Encode categorical features\nEncode categorical features as an integer array.","0e013d31":"# Exploratory data analysis (EDA)\n## dataset Structure\ndataset includes *1460* columns and *81* rows.\nThere are *3* different data types as follows:int64,object,float64","c1890d10":"MSZoning, Street, Alley, LotShape, LandContour, Utilities, LotConfig, LandSlope, Neighborhood, Condition1, Condition2, BldgType, HouseStyle, RoofStyle, RoofMatl, Exterior1st, Exterior2nd, MasVnrType, ExterQual, ExterCond, Foundation, BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, Heating, HeatingQC, CentralAir, Electrical, KitchenQual, Functional, FireplaceQu, GarageType, GarageFinish, GarageQual, GarageCond, PavedDrive, PoolQC, Fence, MiscFeature, SaleType, SaleCondition"}}