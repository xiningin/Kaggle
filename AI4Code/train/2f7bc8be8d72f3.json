{"cell_type":{"86c45876":"code","3e75bb36":"code","f06db985":"code","e119ddbb":"code","c6fd85fa":"code","b9e60f58":"code","b6a5b776":"code","19dd33bb":"code","0fc802e0":"code","eb2d9a5d":"code","9a47c747":"code","28e94b43":"code","b8cfba08":"code","4ca69876":"code","ef4da428":"code","1543f0d3":"code","7b3df5df":"code","6f741f1f":"code","e8e0b9b1":"code","5bb3bddd":"code","9c4b8a57":"code","4b03189f":"code","b74370a1":"code","c9ecd186":"code","c7924c8b":"code","df61064a":"markdown","a5f5f0b1":"markdown","fc8ae3d3":"markdown","edae9e12":"markdown","0155938f":"markdown","4123516b":"markdown","57ec1b14":"markdown","a48fe984":"markdown","05fd47f2":"markdown","5404fa32":"markdown","15d9c6ff":"markdown","93d7740a":"markdown"},"source":{"86c45876":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/ecommerce-data'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e75bb36":"#for visualisations\nimport seaborn as sns\n!pip install squarify\nimport squarify\nimport matplotlib.pyplot as plt\n\n#for analysis\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules","f06db985":"# read csv \ndf = pd.read_csv('\/kaggle\/input\/ecommerce-data\/data.csv')","e119ddbb":"df.head()","c6fd85fa":"1# !!! gives the all necessary descriptive statistic measure for each coloumn \ndf.describe()\n","b9e60f58":"df.info()","b6a5b776":"df.corr()","19dd33bb":"#Finding the missing values\ndf.isna().sum()","0fc802e0":"df.drop(['CustomerID'], axis = 1)","eb2d9a5d":"a=[]\nfor i in range (0,len(df)):\n  b=df['Quantity'][i]*df['UnitPrice'][i]\n  a.append(b)\ndf['TotalCost'] = np.array(a)","9a47c747":"df.head()","28e94b43":"df=df.drop_duplicates()\nlen(df)","b8cfba08":"mt1=df.groupby(['InvoiceNo'])['TotalCost'].sum()\nmt1","4ca69876":"max_cost=sorted(mt1 ,reverse=True)\n\nprint(max_cost[0:1])\n","ef4da428":"mt=df.groupby(['InvoiceNo'])['TotalCost'].mean()\nmt\n","1543f0d3":"print('The count of unique products:',len(df['Description'].unique()))\nprint('**********')\nprint('The list of unique products:',df['Description'].unique())","7b3df5df":"print('The count of unique transactions:',len(df['InvoiceNo'].unique()))\nprint('**********')\nprint('The list of unique transactions:',df['InvoiceNo'].unique())","6f741f1f":"plt.rcParams['figure.figsize'] = (18, 7)\ncolor = plt.cm.copper(np.linspace(0, 1, 40))\ndf['StockCode'].value_counts().head(40).plot.bar(color = color)\nplt.title('frequency of most bought items itemcode wise', fontsize = 20)\nplt.xticks(rotation = 90 )\nplt.grid()\nplt.show()","e8e0b9b1":"y = df['Description'].value_counts().head(50).to_frame()\ny.index","5bb3bddd":"plt.rcParams['figure.figsize'] = (30, 30)\ncolor = plt.cm.cool(np.linspace(0, 1, 50))\nsquarify.plot(sizes = y.values, label = y.index, alpha=.8, color = color)\nplt.title('Tree Map for Popular Items')\nplt.axis('off')\nplt.show()","9c4b8a57":"df['Country'].value_counts()[:5]","4b03189f":"plt.figure(figsize = (12,6))\ndf['Country'].value_counts()[:5].plot(kind = 'pie')\nplt.title(\"Top 5 countries based on no.of transactions\", weight = 'bold')","b74370a1":"order_hours = df.InvoiceDate.value_counts()\nmax_order_hours=order_hours.head()\nmin_order_hours=order_hours.tail()","c9ecd186":"#No.of orders is maximum in this timings.\nmax_order_hours.plot.bar()","c7924c8b":"#No.of orders is minimum in this timings.\nmin_order_hours.plot.bar()","df61064a":"FINDING THE AVERAGE AMOUNT SPENT PER TRANSACTION","a5f5f0b1":"5 maximum orders placed in these timings","fc8ae3d3":"MAXIMUM AMOUNT SPENT PER TRANSACTION","edae9e12":"Top 5 countries based on No.of Transactions","0155938f":"DROPPING DUPLICATES","4123516b":"Frequency of most bought items itemcode wise","57ec1b14":"Finding the count and list of unique products in the datset","a48fe984":"Tree map for most 50 popular items","05fd47f2":"FINDING THE TOTALCOST SPENT PER TRANSACTION","5404fa32":"FINDING TOTAL COST AND ADDING IT AS A COLOUMN TO EXISTING DATASET","15d9c6ff":"DATA VISUALISATION","93d7740a":"Finding the count and list of unique transactions in the datset"}}