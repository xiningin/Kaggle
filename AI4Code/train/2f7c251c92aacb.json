{"cell_type":{"5bca56ad":"code","d59c2c7f":"code","0a9ad5ca":"code","4ed158a2":"code","2b89db89":"code","d096799c":"code","6b30f5fc":"code","f6837aaa":"code","a3f4b14a":"code","44adc5e3":"code","8ad67512":"code","dac995de":"code","a56dce77":"code","ace4cc51":"code","f61e250d":"code","62ca723d":"code","a28c22f0":"code","84d8d249":"code","7dbbcf7a":"code","6bc2c671":"code","9f94b628":"code","6ef15acd":"code","1e6aade9":"code","4133486c":"code","d100c46e":"markdown","5b16b1f3":"markdown","2138f8ce":"markdown"},"source":{"5bca56ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d59c2c7f":"f = open(r\"..\/input\/practice-text-file\/grades_practice_dataset.txt\", \"r\")\ndf = f.read()","0a9ad5ca":"df","4ed158a2":"# df = txt\nlct = []\npattern = \"\"\"\n(?P<student>.*)\n(\\:\\ )\n(?P<grade>[A-Z])\n\"\"\"\nfor item in re.finditer(pattern, df, re.VERBOSE):\n    lct.append(item.groupdict())","2b89db89":"lct","d096799c":"x = pd.DataFrame(lct)\nx","6b30f5fc":"x[x[\"grade\"]!='A']","f6837aaa":"def sum(a, b):\n    print(a + b)","a3f4b14a":"sum(2 ,7)","44adc5e3":"data = pd.read_csv(\"..\/input\/national-immunization-survey-child\/NISPUF17.csv\")\ndata","8ad67512":"for item in data.columns:\n    print(item)","dac995de":"def proportion_of_education():\n#-------------------------------------------------------------------\n    import pandas as pd\n    df = pd.read_csv('..\/input\/national-immunization-survey-child\/NISPUF17.csv')\n    T = len(data['EDUC1'])\n    a, b, c, d = 0, 0, 0, 0\n#-------------------------------------------------------------------\n    for num, value in data['EDUC1'].iteritems():\n        if (value == 1):\n            a += 1\n        if (value == 2):\n            b += 1\n        if (value == 3):\n            c += 1\n        if (value == 4):\n            d += 1\n#-------------------------------------------------------------------\n    p = {\"less than high school\" :a\/T,\n        \"high school\" :b\/T,\n        \"more than high school but not college\": c\/T,\n        \"college\" :d\/T}\n#-------------------------------------------------------------------\n    return p\n    raise NotImplementedError()","a56dce77":"proportion_of_education()","ace4cc51":"A, B, C, D = 0, 0, 0, 0\nfor x in data['EDUC1']:\n    if x == 1:\n        A += 1\n    if x == 2:\n        B += 1\n    if x == 3:\n        C += 1\n    if x == 4:\n        D += 1    \n# print('less than high school: ', A)\n# print(\"high school: \", B)\n# print(\"more than high school but not college: \", C)\n# print(\"college: \", D)\nprint(f'less than high school: {A}\\nhigh school:\\t\\t\\t\\t{B}\\nmore than high school but not college: {C}\\ncollege: {D}')","f61e250d":"# (\"YES\" , \"NO\" , \"DON'T KNOW\" , \"REFUSED\")\n# (1,2,77,99) \ndata[\"CBF_01\"].unique()","62ca723d":"data[\"P_NUMFLU\"].unique()","a28c22f0":"df = data[['CBF_01', 'P_NUMFLU']]","84d8d249":"df.head()","7dbbcf7a":"df = df[df['CBF_01'] <= 2]\ndf['CBF_01'].unique()","6bc2c671":"def average_influenza_doses():\n    # YOUR CODE HERE\n    import pandas as pd\n    df = pd.read_csv('..\/input\/national-immunization-survey-child\/NISPUF17.csv')\n    #df['CBF_01'].unique()\n    df = df[['CBF_01','P_NUMFLU']]\n    df = df[df['P_NUMFLU'].notna()]\n    #df\n    T_1 = len(df[df['CBF_01'] == 1])\n    T_2 = len(df[df['CBF_01'] == 2])\n    m = df[df['CBF_01'] == 1]['P_NUMFLU'].sum()\n    nm = df[df['CBF_01'] == 2]['P_NUMFLU'].sum()\n    #Total_1, Total_2\n    return (m\/T_1, nm\/T_2)\n    raise NotImplementedError()","9f94b628":"average_influenza_doses()","6ef15acd":"df = pd.DataFrame(df)","1e6aade9":"df.groupby('CBF_01').groups","4133486c":"for x in df['CBF_01']:\n    if x == 1:\n        print(df)","d100c46e":"Question 2\nLet's explore the relationship between being fed breastmilk as a child and getting a seasonal influenza vaccine from a healthcare provider. Return a tuple of the average number of influenza vaccines for those children we know received breastmilk as a child and those who know did not.\n\nThis function should return a tuple in the form (use the correct numbers:\n\n(2.5, 0.1)","5b16b1f3":"# Question 3\n### It would be interesting to see if there is any evidence of a link between vaccine effectiveness and sex of the child. Calculate the ratio of the number of children who contracted chickenpox but were vaccinated against it (at least one varicella dose) versus those who were vaccinated but did not contract chicken pox. Return results by sex.\n\n#### This function should return a dictionary in the form of (use the correct numbers):\n\n    {\"male\":0.2,\n    \"female\":0.4}\n#### Note: To aid in verification, the chickenpox_by_sex()['female'] value the autograder is looking for starts with the digits 0.0077.","2138f8ce":"Question 1\nWrite a function called proportion_of_education which returns the proportion of children in the dataset who had a mother with the education levels equal to less than high school (<12), high school (12), more than high school but not a college graduate (>12) and college degree.\n\nThis function should return a dictionary in the form of (use the correct numbers, do not round numbers):\n\n{\"less than high school\":0.2,\n    \"high school\":0.4,\n    \"more than high school but not college\":0.2,\n    \"college\":0.2}"}}