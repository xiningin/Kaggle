{"cell_type":{"7adb3cb3":"code","386f92c5":"code","633cb6b4":"code","3b4d8658":"code","3027bb47":"code","0d1d92c9":"code","a31cde23":"code","c3e68e06":"code","d5dd3297":"code","eb7036f0":"code","ae61fc65":"code","bdcb4a77":"code","7d613f3f":"code","5dad61f4":"code","0c294396":"code","5ea5064e":"code","a4f2b23a":"code","7e7777b2":"code","fa90a2ee":"code","81b16b30":"markdown"},"source":{"7adb3cb3":"import numpy as np\nimport pandas as pd \nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.preprocessing import StandardScaler  \nfrom sklearn.neural_network import MLPClassifier","386f92c5":"#import and split the data","633cb6b4":"diabetes = pd.read_csv(\"..\/input\/diabetes\/diabetes.csv\")\ndf = diabetes.copy()\ndf = df.dropna()\ny = df[\"Outcome\"]\nX = df.drop(['Outcome'], axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.30, \n                                                    random_state=42)","3b4d8658":"# scaling","3027bb47":"scaler = StandardScaler()","0d1d92c9":"scaler.fit(X_train)\nX_train_scaled = scaler.transform(X_train)\nX_test_scaled = scaler.transform(X_test)","a31cde23":"#set and fit the model","c3e68e06":"mlpc=MLPClassifier().fit(X_train_scaled,y_train)","d5dd3297":"y_pred = mlpc.predict(X_test_scaled)\naccuracy_score(y_test, y_pred)    #We didn't tune any hiperparameters so this is primitive test error. ","eb7036f0":"#Model Tuning","ae61fc65":"mlpc","bdcb4a77":"#Important hiperparameters\n#hidden_layer_sizes\n#solver\n#learning_rate( through methods)\n#alpha","7d613f3f":"mlpc_params = {\"alpha\": [0.1, 0.01, 0.02, 0.005, 0.0001,0.00001],\n              \"hidden_layer_sizes\": [(10,10,10),\n                                     (100,100,100),\n                                     (100,100),\n                                     (3,5), \n                                     (5, 3)],\n              \"solver\" : [\"lbfgs\",\"adam\",\"sgd\"],\n              \"activation\": [\"relu\",\"logistic\"]}","5dad61f4":"mlpc_cv_model=GridSearchCV(mlpc,mlpc_params,cv=10, n_jobs=-1,verbose=2)\nmlpc_cv_model.fit(X_train_scaled,y_train)\n    ","0c294396":"mlpc_cv_model.best_params_","5ea5064e":"mlpc_final_model= MLPClassifier(activation='logistic', alpha=0.1, hidden_layer_sizes= (100, 100, 100), solver= 'adam')","a4f2b23a":"mlpc_final_model.fit(X_train_scaled,y_train)","7e7777b2":"y_pred=mlpc_final_model.predict(X_test_scaled)\naccuracy_score(y_pred,y_test)","fa90a2ee":"# We found 0.774 by Logistic Regression\n#          0.775 by Naive Bayes \n#          0.731 by KNN\n#          0.744 by Linear SVC\n#          0.735 by Nonlinear SVC Steps\n#And now,  0.735  by ANN","81b16b30":" Thanks to https:\/\/github.com\/mvahit\/DSMLBC"}}