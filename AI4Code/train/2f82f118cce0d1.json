{"cell_type":{"4d9e6a09":"code","2adf1560":"code","47490529":"code","500f2348":"code","2b413295":"code","5ae47a39":"code","9292fd4f":"code","95c78137":"code","3cba0812":"code","583eaba7":"code","757c79a3":"code","cf365faf":"code","48ad34a9":"code","104a3a9b":"markdown"},"source":{"4d9e6a09":"import numpy as np\nimport pandas as pd\nimport os\nimport cv2\nimport matplotlib.pyplot as plt","2adf1560":"files=[]\nfor dirname, _, filenames in os.walk('..\/input\/br-coins\/COCO_labelme_classification\/classification'):\n    for filename in filenames:\n        files+=[os.path.join(dirname, filename)]","47490529":"imgpath=[]\nfor item in files:\n    if item[-4:]=='.jpg':\n          imgpath+=[item]\nprint(imgpath[0:10])\nprint(len(imgpath))","500f2348":"jsonpath=[]\nfor item in files:\n    if item[-4:]=='json':\n          jsonpath+=[item]\nprint(jsonpath[0:10])\nprint(len(jsonpath))","2b413295":"import json\nimport codecs\nfrom pandas.io.json import json_normalize","5ae47a39":"box=[]\nwith open('\/kaggle\/input\/br-coins\/COCO_labelme_classification\/classification\/100_1477154436.json') as f:\n    d = json.load(f)\n    print(d)\n    print(d['shapes'])","9292fd4f":"BOX=[]\nfor i,path in enumerate(jsonpath):\n    with open(path) as f:\n        if i<3056:\n            idn=path.split('\/')[-2]\n            d = json.load(f)\n            labels=d['shapes']        \n            height=d['imageHeight']\n            width=d['imageWidth']\n            file=path[0:-5].split('\/')[-1]\n            for item in labels:\n                BOX+=[[idn,file,item['label'],item['points'][0][0],item['points'][0][1],item['points'][1][0],item['points'][1][1],height,width]]\n#print(BOX)    ","95c78137":"data0=pd.DataFrame(BOX)\ndata0.columns=['idn','file','name','ymin','xmin','ymax','xmax','height','width']\ndata0","3cba0812":"data0['label']=data0['name'].map({'non_tumor':0,'tumor':1})\ndata0['Ycent']=(data0['ymin']+data0['ymax'])\/(2*data0['height'])\ndata0['Xcent']=(data0['xmin']+data0['xmax'])\/(2*data0['width'])\ndata0['boxH']=(data0['ymax']-data0['ymin'])\/data0['height']\ndata0['boxW']=(data0['xmax']-data0['xmin'])\/data0['width']\ndata0","583eaba7":"data0.to_csv('brazilian_coin_annotation.csv',index=False)","757c79a3":"def draw_bbox2(path):\n\n    items=data0[data0['file']==path[0:-4].split('\/')[-1]].iloc[:,0:13].reset_index(drop=True)\n    image=cv2.imread(path)\n    #idn=path[0:-4].split('\/')[-2]\n    file=path[0:-4].split('\/')[-1]    \n    print(file)\n    if len(items)>0:\n        for i in range(len(items)):\n            name=items.loc[i,'name']\n            xmin=items.loc[i,'xmin'].astype(int)\n            ymin=items.loc[i,'ymin'].astype(int)\n            xmax=items.loc[i,'xmax'].astype(int)\n            ymax=items.loc[i,'ymax'].astype(int)\n            H=items.loc[i,'height'].astype(int)\n            W=items.loc[i,'width'].astype(int)            \n            print(name,ymin,xmin,ymax,xmax)\n            cv2.rectangle(image,(ymin,xmin),(ymax,xmax),(0,255,0),2)        \n            \n    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))\n    plt.show()       \n","cf365faf":"draw_bbox2(imgpath[6])","48ad34a9":"for item in imgpath[0:100]:\n    draw_bbox2(item)","104a3a9b":"### cv2.rectangle(image,(ymin,xmin),(ymax,xmax),(0,255,0),2)\n* https:\/\/www.geeksforgeeks.org\/python-opencv-cv2-rectangle-method\/"}}