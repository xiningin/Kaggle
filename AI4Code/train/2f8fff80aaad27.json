{"cell_type":{"d64c4996":"code","11e7d868":"code","1d71be94":"code","041fa9fa":"code","f063838c":"code","91fadba8":"code","2abbdd8d":"code","1ab4e61b":"code","a873501e":"code","9476f6fe":"code","87b61c1b":"code","5e240f84":"code","afb099d1":"code","61ef8edc":"code","5dd166ad":"code","9c66f14f":"code","bbb918ce":"code","ce02e99d":"code","8fd06f94":"code","5da25000":"code","fd63ac63":"code","9720212a":"code","c6e61a55":"code","5be0acc4":"code","0078985c":"code","77640db7":"markdown","d7bc8215":"markdown","4b0e9dad":"markdown","d6241bd3":"markdown","5ab9b42e":"markdown","f710f213":"markdown","0d8b601c":"markdown","2fdea915":"markdown","88368365":"markdown","859e1f1c":"markdown","ef0cb4b1":"markdown","cca50ce8":"markdown","86f0a7cf":"markdown","079221eb":"markdown"},"source":{"d64c4996":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression , Lasso , Ridge\nfrom sklearn.ensemble import AdaBoostRegressor,RandomForestRegressor,GradientBoostingRegressor\nfrom xgboost.sklearn import XGBRegressor\n\ndef rmse_calc(test , pred):\n    rmse = mean_squared_error(test,pred, squared = False )\n    return rmse","11e7d868":"data = pd.read_csv('..\/input\/insurance\/insurance.csv')","1d71be94":"data.head()","041fa9fa":"data.shape","f063838c":"data.isnull().sum()","91fadba8":"sns.set_style('whitegrid')\ndata.plot.box()","2abbdd8d":"sns.boxplot(x = data['bmi'])","1ab4e61b":"sns.boxplot(x = data['charges'])","a873501e":"sns.pairplot(data)","9476f6fe":"data['region'].value_counts()","87b61c1b":"\nsns.countplot(x = \"region\",data = data)","5e240f84":"sns.countplot(x = \"sex\",data = data)","afb099d1":"sns.countplot(x = \"smoker\",hue='sex',data = data)","61ef8edc":"data['overweight'] = data['bmi'].apply(lambda x: 1 if x>25 else 0)","5dd166ad":"sns.countplot(x=\"overweight\",hue = 'sex',data=data)","9c66f14f":"sns.countplot(x = 'overweight',hue='smoker',data = data)","bbb918ce":"sns.displot(x = data['charges'])","ce02e99d":"sns.displot(x = np.log(data['charges']))","8fd06f94":"corr = data.corr('pearson')\nmask = np.triu(corr)\nsns.heatmap(corr , linewidth = 0.5,mask = mask , annot = True )","5da25000":"data['sex'] = data['sex'].apply(lambda x: 1 if x == 'male' else 0)\ndata['smoker'] = data['smoker'].apply(lambda x: 1 if x == 'yes' else 0)\ndata['charges'] = np.log(data['charges'])\nX = data.drop(['charges','overweight','region'] , axis = 1)\ny = data['charges']\nregion = pd.get_dummies(data.region)\nX = pd.concat([X,region],axis = 1)\nx_train , x_test , y_train , y_test = train_test_split(X,y, test_size = 0.2 , random_state =123)","fd63ac63":"linreg = LinearRegression(n_jobs = -1)\nlinreg.fit(x_train,y_train)\nlin_pred = linreg.predict(x_test)\nlinear_rmse = rmse_calc(y_test , lin_pred)\nlin_a_p = np.exp(lin_pred)\ntest = np.exp(y_test)\nprint('train' , linreg.score(x_train , y_train))\nprint('test' , linreg.score(x_test , y_test))\n\nfig , ax = plt.subplots(2,1,figsize = (15,6))\nax[0].plot(lin_a_p , color = 'red')\nax[1].plot(test.tolist() , color = 'green')\nax[0].set_xlabel('predicted')\nax[1].set_xlabel('actual')\nprint('RMSE : ', linear_rmse)","9720212a":"rfc = RandomForestRegressor(n_estimators = 500 , max_features = 6 , max_depth = 10 , min_samples_leaf = 6)\nrfc.fit(x_train,y_train)\nprint('train' , rfc.score(x_train , y_train))\nprint('test' , rfc.score(x_test , y_test))\n\nrfc_pred = rfc.predict(x_test)\nrfc_rmse = rmse_calc(y_test , rfc_pred)\n\nrfc_p = np.exp(rfc_pred)\nrfc_test = np.exp(y_test)\n\nfig , ax = plt.subplots(2,1,figsize = (15,6))\nax[0].plot(rfc_p , color = 'red')\nax[1].plot(rfc_test.tolist() , color = 'green')\nax[0].set_xlabel('predicted')\nax[1].set_xlabel('actual')\nprint('RMSE : ', rfc_rmse)","c6e61a55":"abr = AdaBoostRegressor(learning_rate = 0.1 )\nabr.fit(x_train,y_train)\nprint('train' , abr.score(x_train , y_train))\nprint('test' , abr.score(x_test , y_test))\nabr_pred = abr.predict(x_test)\nabr_rmse = rmse_calc(y_test , abr_pred)\n\nabr_pred = abr.predict(x_test)\nabr_p = np.exp(abr_pred)\nabr_test = np.exp(y_test)\n\nfig , ax = plt.subplots(2,1,figsize = (15,6))\nax[0].plot(abr_p , color = 'red')\nax[1].plot(abr_test.tolist() , color = 'green')\nax[0].set_xlabel('predicted')\nax[1].set_xlabel('actual')\nprint('RMSE : ', abr_rmse)","5be0acc4":"gbr = GradientBoostingRegressor()\ngbr.fit(x_train,y_train)\nprint('train' , gbr.score(x_train , y_train))\nprint('test' , gbr.score(x_test , y_test))\n\ngbr_pred = gbr.predict(x_test)\ngbr_rmse = rmse_calc(y_test , gbr_pred)\ngbr_p = np.exp(gbr_pred)\ngbr_test = np.exp(y_test)\n\nfig , ax = plt.subplots(2,1,figsize = (15,6))\nax[0].plot(gbr_p , color = 'red')\nax[1].plot(gbr_test.tolist() , color = 'green')\nax[0].set_xlabel('predicted')\nax[1].set_xlabel('actual')\nprint('RMSE : ', gbr_rmse)","0078985c":"xgb = XGBRegressor(gamma = 0.5)\nxgb.fit(x_train,y_train)\nprint('train' , xgb.score(x_train , y_train))\nprint('test' , xgb.score(x_test , y_test))\n\nxgb_pred = xgb.predict(x_test)\nxgb_rmse = rmse_calc(y_test , xgb_pred)\nxgb_p = np.exp(xgb_pred)\nxgb_test = np.exp(y_test)\n\nfig , ax = plt.subplots(2,1,figsize = (15,6))\nax[0].plot(xgb_p , color = 'red')\nax[1].plot(xgb_test.tolist() , color = 'green')\nax[0].set_xlabel('predicted')\nax[1].set_xlabel('actual')\nprint('RMSE : ', xgb_rmse)","77640db7":"# Exploratory Data Analysis\n\n### Missing Values","d7bc8215":"#### 3.GradientBoost","4b0e9dad":"## Ensemble Techniques\n\n#### 1.Random Forest","d6241bd3":"#### applying log","5ab9b42e":"## Model Building\n\n#### 1. Linear Regression\n","f710f213":"### Outliers","0d8b601c":"#### ->lets make a new column \"Overwieght\" from bmi.\n\n##### we will going to assign 1 if person is overweight (bmi > 25) else 0.","2fdea915":"##### No missing values in a data set","88368365":"#### 2.AdaBoost","859e1f1c":"## Variable Transformation","ef0cb4b1":"#### bmi and charges contains outliers","cca50ce8":"#### -> lets see smoke takers among sex ","86f0a7cf":"#### 4.XGBoost","079221eb":"#### lets plot countplot to check overweight among sex."}}