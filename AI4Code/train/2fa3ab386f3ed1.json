{"cell_type":{"76ff390e":"code","3ca30863":"code","940ddaaf":"code","773874c0":"code","dc73f03e":"code","3447b81c":"code","0c3efcd8":"code","466f9cb0":"code","cb6dca66":"code","48b579fc":"code","5e773788":"code","59f38a21":"code","1ccd1778":"code","249dbb46":"markdown","9a8d64ce":"markdown","cbd6afb5":"markdown","3158d21c":"markdown","1a1f5ccf":"markdown","21f0b074":"markdown","7fd01d76":"markdown","351b3102":"markdown","f956894a":"markdown","f6cb271c":"markdown","63b0ace1":"markdown","af3ddee4":"markdown","f0ee3a62":"markdown","f889df0c":"markdown"},"source":{"76ff390e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3ca30863":"co = pd.read_csv(\"\/kaggle\/input\/south-korea-covid19-daily-confirmation\/worldwide_covid19.csv\",parse_dates=['date'])\nct = pd.read_csv(\"\/kaggle\/input\/south-korea-covid19-daily-confirmation\/worldwide_country.csv\")\nco.shape, ct.shape, co.info(), ct.info()","940ddaaf":"print(\"Start date: \",co['date'].min())\nprint(\"End date: \",co['date'].max())\nprint(\"Time Period: \",co['date'].max() - co['date'].min())\n\nco['patient'] = co['patient'].str.replace(',','').astype(int)\nco['date'] = pd.to_datetime(co['date']) \nco['Year'] = co['date'].dt.year\nco['Month'] = co['date'].dt.month\nco['Week'] = co['date'].dt.isocalendar().week\nco['Day'] = co['date'].dt.day\nco['dayofweek'] = co['date'].dt.dayofweek \nco['weekdays']=co['date'].dt.strftime('%A') \nco['weekend'] = (co.date.dt.weekday >=5).astype(int) \nco['date'] = pd.to_datetime(co['date'])\nco","773874c0":"quarterly_df = co.groupby(co.date.dt.to_period(\"Q\"))['patient'].agg('sum').rename_axis(['date']).reset_index()\nquarterly_df = quarterly_df.rename(columns={'date':'Quarter','patient':'total_patients'})\n\nprint(quarterly_df.head())\nquarter_year = []\nfor i in quarterly_df['Quarter']:\n    quarter_year.append(str(i))\n    \nquarterly_df['year'] = quarterly_df['Quarter'].dt.strftime('%Y') \ndef plot_quarter(year,color):\n    temp_quarter=[]\n    for i in quarterly_df.loc[quarterly_df['year']==year]['Quarter']:\n        temp_quarter.append(str(i))        \n    trace=go.Bar(x=temp_quarter, y = quarterly_df.loc[quarterly_df['year']==year]['total_patients'],\n           name=year,marker_color=color)\n    return trace\n\nfig = make_subplots(rows=1, cols=1,subplot_titles=(\"2020\"))\nfig.add_trace(plot_quarter('2020','cyan'),row=1,col=1)\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Covid patients registered in year 2020 - Quarter wise', title_x=0.5,showlegend=False)\nfig.show()","dc73f03e":"monthly_df = co.groupby(co.date.dt.to_period(\"M\"))['patient'].agg('sum').rename_axis(['date']).reset_index()\nmonthly_df = monthly_df.rename(columns={'date':'Month','patient':'total_patients'})\n\nmon_year = []\nfor i in monthly_df['Month']:\n    mon_year.append(str(i))\n    \nmonthly_df['month'] = monthly_df['Month'].dt.strftime('%m') \nprint(monthly_df.head())\nfig = px.bar(monthly_df, x='month', y='total_patients')\nfig.show()","3447b81c":"co['date'] = pd.to_datetime(co['date'])\nd = co.copy()\n\nds = d.drop(['country_id','dayofweek','Year','Month','Week','Day','weekdays','weekend'],axis=1)\nds['month']=ds['date'].dt.strftime('%m') \n\nmonthly_df = ds.groupby(ds.date.dt.to_period(\"M\"))['patient'].agg('sum').rename_axis(['date']).reset_index()\nmonthly_df = monthly_df.rename(columns={'date':'Month','patient':'total_patients'})\nmonthly_df['month']=monthly_df['Month'].dt.strftime('%m') \n\nfig = px.line(monthly_df, x=\"month\", y=\"total_patients\", title='Month Wise COVID patients across world')\nfig.show()","0c3efcd8":"d = co.copy()\nds = d.drop(['country_id','dayofweek','Year','Month','Week','Day','weekdays','weekend'],axis=1)\n\ndaily_df = ds.groupby(['date'])['patient'].agg(['sum']).rename_axis(['date']).reset_index() \n\nprint(\"sdsdsd columns: \",daily_df.columns)\nprint(daily_df.head(10))\n\ndaily_year=[]\n\nfor i in daily_df['date']:\n    daily_year.append(str(i))\n\ndaily_df['month']=daily_df['date'].dt.strftime('%m') \n\n\ndef plot_month(month,color):\n    temp_month=[]\n    for i in daily_df.loc[daily_df['month']==month]['date']:\n        temp_month.append(str(i))        \n    trace=go.Bar(x=temp_month, y=daily_df.loc[daily_df['month']==month]['sum'], name=month, marker_color=color)\n    return trace\n\nfig = make_subplots(rows=3, cols=3,subplot_titles=(\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\"))\nfig.add_trace(plot_month('01','purple'),row=1,col=1)\nfig.add_trace(plot_month('02','limegreen'),row=1,col=2)\nfig.add_trace(plot_month('03','teal'),row=1,col=3)\nfig.add_trace(plot_month('04','red'),row=2,col=1)\nfig.add_trace(plot_month('05','pink'),row=2,col=2)\nfig.add_trace(plot_month('06','violet'),row=2,col=3)\nfig.add_trace(plot_month('07','darkcyan'),row=3,col=1)\nfig.add_trace(plot_month('08','blue'),row=3,col=2)\nfig.add_trace(plot_month('09','skyblue'),row=3,col=3)\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Covid cases every day - Month Wise', title_x=0.5,showlegend=False)\nfig.show()","466f9cb0":"co['date'] = pd.to_datetime(co['date'])\nd = co.copy()\n\nds = d.drop(['country_id','dayofweek','Year','Month','Day','weekdays','weekend'],axis=1)\n\nweekly_df = ds.groupby(\"Week\")['patient'].agg('sum').rename_axis(['date']).reset_index()\nweekly_df = weekly_df.rename(columns={'date':'Week','patient':'total_patients'})\nprint(weekly_df.dtypes)\n\nprint(weekly_df.head(10))\n\nfig = px.line(weekly_df, x=\"Week\", y=\"total_patients\", title='Week Wise COVID patients across world')\nfig.show()","cb6dca66":"d = co.copy()\nds = d.drop(['country_id','dayofweek','Year','Month','Week','Day','weekend'],axis=1)\n\nweekdays_df = ds.groupby(['weekdays'])['patient'].agg(['sum']).rename_axis(['weekdays']).reset_index() \nprint(weekdays_df.head(10))\n\nweekdays_df['weekdays'] = pd.Categorical(weekdays_df['weekdays'],categories=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],ordered=True)\nweekdays_df = weekdays_df.sort_values('weekdays')\n\nfig = ff.create_table(weekdays_df, height_constant=60)\nfig.add_trace(go.Scatter(\n    x= weekdays_df['weekdays'], y= weekdays_df['sum'],  \n    xaxis='x2', yaxis='y2',\n    mode=\"markers\",marker_size=12 ))\n\nfig.update_layout(\n    title_text = 'Weekdays COVID cases Report', title_x=0.5,\n    margin = {'t':50, 'b':100}, xaxis = {'domain': [0, .5]},\n    xaxis2 = {'domain': [0.6, 1.]}, yaxis2 = {'anchor': 'x2', 'title': 'Count'} )\n\nfig.show()","48b579fc":"d = co.copy()\nds = d.drop(['country_id','dayofweek','Year','Month','Week','Day','weekdays'],axis=1)\n\nweekend_df = ds.groupby(['weekend'])['patient'].agg(['sum']).rename_axis(['weekend']).reset_index() \nprint(weekend_df.head(10))\n\nweekend_df = weekend_df.sort_values('weekend')\n\nfig = ff.create_table(weekend_df, height_constant=60)\nfig.add_trace(go.Scatter(\n    x= weekend_df['weekend'], y= weekend_df['sum'], \n    xaxis='x2', yaxis='y2', mode=\"markers\",marker_size=12))\n\nfig.update_layout(\n    title_text = 'Weekend COVID cases Report',title_x=0.5,\n    margin = {'t':50, 'b':100}, xaxis = {'domain': [0, .5]},\n    xaxis2 = {'domain': [0.6, 1.]}, yaxis2 = {'anchor': 'x2', 'title': 'sum'}\n)\nfig.show()","5e773788":"d = co.copy()\nds = d.drop(['dayofweek','Year','Month','Week','Day','weekdays'],axis=1)\n\nweekend_df = ds.groupby(['country_id'])['patient'].agg(['sum']).reset_index() \nweekend_df = weekend_df.rename(columns={'country_id':'id','sum':'total_patients'})\nprint(weekend_df.head(10))\nweekend_df.sort_values('total_patients', ascending=False)\n\nmerged = weekend_df.merge(ct, on=['id'])","59f38a21":"top10 = merged[:10]\nlast10 = merged[-10:]\nfig = go.Figure(data=[go.Bar(y=top10['country'], x=top10['total_patients'], orientation='h')],\n                layout=go.Layout(title=go.layout.Title(text=\"Top 10 countries wth high number of COVID cases\")  ) )\nfig.show()\n\nfig1 = go.Figure(data=[go.Bar(y=last10['country'], x=last10['total_patients'], orientation='h')],\n                 layout=go.Layout(title=go.layout.Title(text=\"10 countries wth lowest number of COVID cases\")  ))\nfig1.show()","1ccd1778":"co['date'] = pd.to_datetime(co['date'])\nd = co.copy()\n\nds = d.drop(['dayofweek','Year','Month','Week','Day','weekdays','weekend'],axis=1)\nds['month']=ds['date'].dt.strftime('%m') \n\nmonthly_df = ds.groupby(['country_id',ds.date.dt.to_period(\"M\")])['patient'].agg('sum').reset_index()\n\nmonthly_df = monthly_df.rename(columns={'date':'Month','patient':'total_patients','country_id':'id'})\nmonthly_df['month']=monthly_df['Month'].dt.strftime('%m') \nmonthly_df = monthly_df.drop(['Month'],axis=1)\n\nmerged = monthly_df.merge(ct, on=['id'])\nprint(merged.head(4))\n\ncountries_top10 = merged[:90]\nfig = px.line(countries_top10, x=\"month\", y=\"total_patients\", color='country', title=\"Top 10 countries month wise peak\")\nfig.show()","249dbb46":"<a id=\"daily\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Worldwide Month - daily patient cases<\/b><\/font><br>","9a8d64ce":"<a id=\"intro\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Introduction and Imports<\/b><\/font><br>","cbd6afb5":"<a id=\"data\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Reading Data<\/b><\/font><br>","3158d21c":"<a id=\"quarter\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Worldwide Quarter Wise patients<\/b><\/font><br>","1a1f5ccf":"<a id=\"month\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Worldwide Month Wise patients<\/b><\/font><br>","21f0b074":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of content<\/h3>\n\n* [Introduction](#intro)\n* [Data](#data)\n* [1. Feature Engineering ](#fe)\n* [2. Worldwide Quarterly covid cases ](#quarter)\n* [3. Worldwide Monthly covid cases](#month)\n* [4. Worldwide per Month Daily covid cases](#daily)\n* [5. Worldwide Weekly covid cases](#weekly)\n* [6. Worldwide  covid cases recorded on weekends](#weekends)\n* [7. Worldwide  covid cases recorded on weekdays](#weekdays)\n* [8. Top\/Bottom 10 countries affected](#ten)\n* [9. Most affected countries month wise covid cases](#tenmonth)\n","7fd01d76":"<a id=\"ten\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Most affected and least affected countrieis<\/b><\/font><br>","351b3102":"<font size=\"+4\" color=purple><u><center>COVID Analysis (Jan - Sep 2020)<\/center><\/u><\/font>","f956894a":"This is a simple dataset consisting of 2 files. One is number of cases daily as per country_id and the other file is country and country_id.","f6cb271c":"<a id=\"tenmonth\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Most affected - Month wise cases<\/b><\/font><br>","63b0ace1":"<a id=\"weekends\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Worldwide Weekends patient cases<\/b><\/font><br>","af3ddee4":"<a id=\"weekdays\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Worldwide Weekdays patient cases<\/b><\/font><br>","f0ee3a62":"<a id=\"weekly\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Worldwide Week wise patient cases<\/b><\/font><br>","f889df0c":"<a id=\"fe\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Feature Engineering<\/b><\/font><br>"}}