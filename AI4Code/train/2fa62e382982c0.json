{"cell_type":{"a360e117":"code","c54f5c67":"code","8a78ce31":"code","b22a9cf9":"code","509e5b9f":"code","7707c734":"code","346efe1c":"markdown"},"source":{"a360e117":"import os\nimport warnings\nimport pandas as pd\nimport numpy as np\nimport plotly.figure_factory as ff\nimport plotly.express as px\nwarnings.filterwarnings(\"ignore\") \n","c54f5c67":"sub1 = pd.read_csv('..\/input\/g2net-eda-and-modeling\/model_submission.csv').sort_values('id') \nsub2 = pd.read_csv('..\/input\/k\/yasufuminakama\/g2net-efficientnet-b0-baseline-inference\/submission.csv').sort_values('id') \nsub3 = pd.read_csv('..\/input\/tf-g2net-eda-and-starter\/submission.csv').sort_values('id') \nsub4 = pd.read_csv('..\/input\/g2net-efficientnetb1-tpu-evaluate\/submission.csv').sort_values('id') \nsub5 = pd.read_csv('..\/input\/g2net-fast-and-almost-accurate-detector\/submission.csv').sort_values('id') \nsub6 = pd.read_csv('..\/input\/cqt-g2net-efficientnetb1-tpu-inference\/submission.csv').sort_values('id') \nsub7 = pd.read_csv('..\/input\/g2net-tf-on-the-fly-cqt-tpu-inference\/submission.csv').sort_values('id') ","8a78ce31":"# Group data together\nhist_data = [sub1.target, sub2.target, sub3.target, sub4.target, sub5.target, sub6.target, sub7.target]\n\ngroup_labels = ['Yaroslav Isaienkov - 0.864', 'Y.Nakama - 0.860', 'Mrigendra Agrawal - 0.855', 'Welf Crozzo - 0.834',\n                'kkiller - 0.855', 'Welf Crozzo CQT - 0.866', 'Hidehisa Arai - 0.869']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\nfig.show()","b22a9cf9":"data=np.corrcoef([sub1.target, sub2.target, sub3.target, sub4.target, sub5.target, sub6.target, sub7.target])\nfig = px.imshow(data,\n                x=group_labels,\n                y=group_labels\n               )\nfig.show()","509e5b9f":"sub = sub1.copy()\nsub.target = np.quantile([sub1.target.values, \n          #sub2.target.values, \n          #sub3.target.values, \n          #sub4.target, \n          #sub5.target, \n          sub6.target.values,\n          sub7.target.values],\n         0.8, axis=0)# \/ (0 + 0 + 0 + 0 + 0 + 14 + 14)\nsub.to_csv('submission.csv', index=False)","7707c734":"# Group data together\nhist_data = [sub1.target, sub2.target, sub3.target, sub4.target, sub5.target, sub6.target, sub7.target, sub.target]\n\ngroup_labels = ['Yaroslav Isaienkov - 0.864', 'Y.Nakama - 0.860', 'Mrigendra Agrawal - 0.855', 'Welf Crozzo - 0.834',\n                'kkiller - 0.855', 'Welf Crozzo CQT - 0.866', 'Hidehisa Arai - 0.869', 'Blended']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\nfig.show()","346efe1c":"# Group data together\nSolutions for blend\n* 0.864 - [\ud83d\udd73\ufe0fG2Net\ud83d\udd73\ufe0f - EDA and Modeling](https:\/\/www.kaggle.com\/ihelon\/g2net-eda-and-modeling)\n* 0.860 - [G2Net \/ efficientnet_b7 \/ baseline [inference]](https:\/\/www.kaggle.com\/yasufuminakama\/g2net-efficientnet-b7-baseline-inference)\n* 0.855 - [TF G2Net EDA and Starter](https:\/\/www.kaggle.com\/mrigendraagrawal\/tf-g2net-eda-and-starter)\n* 0.834 - [G2Net EfficientNetB1[TPU Evaluate]](https:\/\/www.kaggle.com\/miklgr500\/g2net-efficientnetb1-tpu-evaluate)\n* 0.855 - [G2Net: Fast and Almost Accurate Detector](https:\/\/www.kaggle.com\/kneroma\/g2net-fast-and-almost-accurate-detector)\n* 0.866 - [CQT G2Net EfficientNetB1[TPU Inference] ](https:\/\/www.kaggle.com\/miklgr500\/cqt-g2net-efficientnetb1-tpu-inference)\n* 0.869 - [G2Net: TF On-the-fly CQT TPU Training](https:\/\/www.kaggle.com\/hidehisaarai1213\/g2net-tf-on-the-fly-cqt-tpu-training)"}}