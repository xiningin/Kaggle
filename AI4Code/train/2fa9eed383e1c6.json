{"cell_type":{"f5c5d712":"code","7ba7d83e":"code","1caf029d":"code","a9ba19be":"code","e3910e39":"code","60f5e955":"code","d27cf5be":"code","13df8944":"code","7071a89a":"code","de1b5933":"code","a2a89171":"code","9cd314d1":"code","274f36d0":"code","b78858fe":"code","b7aef4cc":"code","beeaead4":"code","cfc14e7b":"code","b0c61263":"code","ed96d1b8":"code","01b16681":"code","e4784366":"code","c56939f5":"code","d32d3736":"code","5236f05c":"code","000072d8":"code","2b164f21":"code","4e58ca35":"markdown"},"source":{"f5c5d712":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ba7d83e":"!pip install dataprep","1caf029d":"book_example = pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/book_train.parquet\/stock_id=0')\ntrade_example =  pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/trade_train.parquet\/stock_id=0')","a9ba19be":"book_example.head(10)","e3910e39":"book_example.describe()","60f5e955":"book_example.info()","d27cf5be":"trade_example.head()","13df8944":"trade_example.describe()","7071a89a":"trade_example.info()","de1b5933":"train = pd.read_csv(\"..\/input\/optiver-realized-volatility-prediction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/optiver-realized-volatility-prediction\/test.csv\")","a2a89171":"train.info()","9cd314d1":"test.info()","274f36d0":"train.head()","b78858fe":"test.head()","b7aef4cc":"book_example = pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/book_train.parquet\/stock_id=0')\ntrade_example =  pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/trade_train.parquet\/stock_id=0')\n","beeaead4":"from dataprep.eda import plot\nplot(book_example)","cfc14e7b":"plot(trade_example)","b0c61263":"from dataprep.eda import plot_correlation\n\nplot_correlation(trade_example)","ed96d1b8":"plot_correlation(book_example)","01b16681":"from dataprep.eda import plot_missing\nplot_missing(book_example)","e4784366":"plot_missing(trade_example)","c56939f5":"book_example.shape","d32d3736":"df1 = book_example.loc[: int(book_example.shape[0]\/2)]\ndf2 = book_example.loc[int(book_example.shape[0]\/2):]","5236f05c":"from dataprep.eda import plot_diff\nplot_diff([df1,df2])","000072d8":"plot(train)","2b164f21":"plot(test)","4e58ca35":"# BASIC EDA"}}