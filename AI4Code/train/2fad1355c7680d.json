{"cell_type":{"2c013c6b":"code","0ce1c18c":"code","586d6f71":"code","b51bbfc8":"code","c01d6231":"code","7b311b50":"markdown","057115df":"markdown","17ea66af":"markdown","31169deb":"markdown","7c50b4c1":"markdown","c1266494":"markdown"},"source":{"2c013c6b":"!pip install -q https:\/\/github.com\/tugstugi\/dl-colab-notebooks\/archive\/colab_utils.zip\n!pip install speechRecognition\n!pip install gTTS\n!pip install google-colab\nfrom IPython.display import Audio, display, clear_output, Javascript\nimport ipywidgets as widgets\nimport numpy as np\nfrom scipy.io import wavfile\nfrom dl_colab_notebooks.audio import record_audio, upload_audio\nimport speech_recognition as sr\n\n!pip install wikipedia\n!pip install wolframalpha\n\nimport random #It is used to obtain a random value from a group of values\nimport wikipedia #Used to get articles from wikipedia and summarize them if necessary\nimport wolframalpha #Used in the core of the VA\nimport datetime #Used to get the current time\nimport os #For system related functions\nimport sys #For system related functions\nfrom gtts import gTTS\nimport librosa\nimport time","0ce1c18c":"#@title Sound related settings\n\nSAMPLE_RATE = 16000\nrecord_seconds =   5#@param {type:\"number\", min:1, max:10, step:1}\ntext_recognized = \"default_text\"","586d6f71":"def speak(to_speak=\"Default\"):\n  tts = gTTS(to_speak) #Provide the string to convert to speech\n  tts.save('out.wav') #save the string converted to speech as a .wav file\n  sound_file = 'out.wav'\n  display(Audio(sound_file, autoplay=True))\n  time.sleep(librosa.get_duration(filename='out.wav'))\n  return 200 \n     \ndef _recognize(audio):\n  # display(Audio(audio, rate=SAMPLE_RATE, autoplay=True))\n  wavfile.write('in.wav', SAMPLE_RATE, (32767*audio).astype(np.int16))\n  print('\\n')\n  filename = \"in.wav\"\n  r = sr.Recognizer()\n  with sr.AudioFile(filename) as source:\n      # listen for the data (load audio to memory)\n      try:\n        audio_data = r.record(source)\n        # recognize (convert from speech to text)\n        text = r.recognize_google(audio_data)\n        return text\n      except Exception as e:\n        print(e)   \n        print(\"Could you speak more clearly\") \n        return \"None\"\n      \n\ndef _record_audio():\n  clear_output()\n  audio = record_audio(record_seconds, sample_rate=SAMPLE_RATE)\n  text_recognized = _recognize(audio)\n  print(f\"Users says: {text_recognized}\\n\")\n  return text_recognized\n\ndef takeCommand():\n  button = widgets.Button(description=\"Record Speech\")\n  return _record_audio()\n  # button.on_click(_record_audio)\n  # display(button)\n\ndef open_web(url):\n    display(Javascript('window.open(\"{url}\");'.format(url=url)))\n\ndef wishMe():\n    hour = int(datetime.datetime.now().hour)\n    if hour>= 0 and hour<12:\n        speak(\"Good Morning Sir !\")\n    elif hour>= 12 and hour<18:\n        speak(\"Good Afternoon Sir !\")  \n    else:\n        speak(\"Good Evening Sir !\") \n    name =(\"Parhsu\")\n    speak(\"I am your Assistant\")\n    speak(name)\n\ndef usrname():\n    speak(\"What should i call you sir\")\n    uname = takeCommand()\n    speak(\"Welcome\")\n    speak(uname)","b51bbfc8":"def bot(query=\"\"): \n    wishMe()\n    usrname() \n    while True:\n        speak(\"How can I help you\")\n        query = takeCommand().lower()\n        print(query)\n        if 'wikipedia' in query:\n            speak('Searching Wikipedia...')\n            query = query.replace(\"wikipedia\", \"\")\n            results = wikipedia.summary(query, sentences = 3)\n            speak(\"Here is what wikipedia says\")\n            print(results)\n            speak(results)\n            \n        elif 'open youtube' in query:\n            speak(\"Yes opening\")\n            open_web('https:\/\/www.youtube.com');\n            \n        elif 'open forum' in query:\n            speak(\"Yes opening \" + str(\"forum.aistudent.community\"))\n            open_web(\"https:\/\/www.forum.aistudent.community\")\n            \n        elif 'open google' in query:\n            speak(\"Yes opening \" + str(\"www.google.co.in\"))\n            open_web(\"https:\/\/www.google.co.in\")\n            \n        elif 'open stack overflow' in query:\n            speak(\"Yes opening \" + str(\"stackoverflow.com\"))\n            open_web(\"https:\/\/www.stackoverflow.com\") \n            \n        elif 'how are you' in query:\n            speak(\"I am fine, Thank you\")\n            speak(\"How are you, opening \" + str())\n            \n        elif 'fine' in query or \"good\" in query:\n            speak(\"It's good to know that your fine\")\n            \n        elif \"change name\" in query:\n            speak(\"What would you like to call me, Sir \")\n            name = takeCommand()\n            speak(\"Thanks for naming me\")\n            \n        elif \"what's your name\" in query or \"What is your name\" in query:\n            speak(\"My friends call me\")\n            name =(\"Arnold\")\n            speak(name)\n            print(\"My friends call me\", name)\n            \n        elif 'search' in query or 'play' in query:\n            query = query.replace(\"search\", \"\")\n            query = query.replace(\"play\", \"\")         \n            open_web(query)\n        \n        elif \"who are you\" in query:\n            speak(\"I am your virtual assistant\")\n            \n        elif \"where is\" in query:\n            query = query.replace(\"where is\", \"\")\n            location = query\n            speak(\"User asked to Locate\")\n            speak(location)\n            open_web(\"https:\/\/www.google.com\/maps\/search\/?api=1&\" + location + \"\")\n\n        elif \"will you be my friend\" in query:  \n            speak(\"Sure, why not\")\n        elif 'exit' in query:\n            speak(\"Thanks for giving me your time\")\n            exit()","c01d6231":"# Uncomment the below line to use the bot\n# bot()","7b311b50":"# Setting up recording\n\nThis is settings for sound, where you can set the number of seconds we will wait to reconize sound.","057115df":"# Setting up Main Functions\n\nFunctions for the voice assistant","17ea66af":"# Importing and installing required libraries\n\nJust downloading and importing libraries","31169deb":"# Voice Assistants\nThis is a basic voice assisant made in python, for online notebooks.\n~~Pehaps the worlds first working voice assitant working in colab \ud83d\ude05~~","7c50b4c1":"# Initiating the voice assistant\n\nCore functions for voice assistant","c1266494":"# Using the bot"}}