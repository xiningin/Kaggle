{"cell_type":{"8296ac45":"code","71a6aedf":"code","f5eb9851":"code","6e69339f":"code","7e7dee3c":"code","8b6ad7b1":"code","6730bba6":"code","d86d412e":"code","238cd93e":"code","ff031030":"markdown"},"source":{"8296ac45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","71a6aedf":"#read the data\nrain = pd.read_csv(r'\/kaggle\/input\/chennai_reservoir_rainfall.csv')\nlevel = pd.read_csv(r'\/kaggle\/input\/chennai_reservoir_levels.csv')","f5eb9851":"print(rain.head())\nprint('=============================================================')\nprint(level.head())\n","6e69339f":"#Total water level per day\nlevel['TOTAL'] =level['POONDI']+level['CHOLAVARAM']+level['REDHILLS']+level['CHEMBARAMBAKKAM']\n#Total rain per day \nrain['TOTAL'] = rain['POONDI']+rain['CHOLAVARAM']+rain['REDHILLS']+rain['CHEMBARAMBAKKAM']","7e7dee3c":"#Total usage per day\nlevel['USAGE']=level['TOTAL'].diff(periods=-1)\nrain['RAIN_TREND'] = rain['TOTAL'].diff(periods=-1)\n\nfrom datetime import datetime\n#Convert Date from str to Datetime\nlevel['Date'] = pd.to_datetime(level['Date'],dayfirst=True)\nrain['Date'] = pd.to_datetime(rain['Date'],dayfirst=True)\n\n","8b6ad7b1":"level.head()","6730bba6":"rain.head()","d86d412e":"#Visualizing the Total water levels and Usage\n\nfrom bokeh.plotting import figure, output_file, show\nfrom bokeh.layouts import gridplot,row,column\nfrom bokeh.io import output_notebook\nfrom bokeh.models import ColumnDataSource, Range1d, LabelSet, Label\n\noutput_notebook() \nsource = ColumnDataSource(level)\nTOOLS = \"pan,wheel_zoom,box_zoom,box_select,lasso_select,reset,help\"\n\n\nplot1 = figure(tools=TOOLS,plot_width=400,plot_height=400,x_axis_type=\"datetime\",title='POONDI LEVELS')\nplot2 = figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,y_range=plot1.y_range,x_axis_type=\"datetime\",title='CHOLAVARAM LEVELS')\nplot3 = figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,y_range=plot1.y_range,x_axis_type=\"datetime\",title='REDHILLS LEVELS')\nplot4 = figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,y_range=plot1.y_range,x_axis_type=\"datetime\",title='CHEMBARAMBAKKAM LEVELS')\nplot5 =figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,x_axis_type=\"datetime\",title='USAGE LEVELS')\nplot6= figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,x_axis_type=\"datetime\",title='TOTAL LEVELS')\n\nplot1.line(x='Date', y='POONDI',color='blue',source=source)\nplot2.line(x='Date', y='CHOLAVARAM',color='red',source=source)\nplot3.line(x='Date', y='REDHILLS',color='black',source=source)\nplot4.line(x='Date', y='CHEMBARAMBAKKAM',color='green',source=source)\nplot5.line(x='Date', y='USAGE',color='green',source=source)\nplot6.line(x='Date', y='TOTAL',color='grey',source=source)\n\nplot_levels =  row(column(plot1,plot2),column(plot3,plot4),column(plot5,plot6))\n\nshow(plot_levels)\n","238cd93e":"#Plotting Rainfall , Usage and Total Levels to check corellation\n\nfrom bokeh.plotting import figure, output_file, show\nfrom bokeh.layouts import gridplot,row,column\nfrom bokeh.io import output_notebook\nfrom bokeh.models import ColumnDataSource, Range1d, LabelSet, Label\n\nsource2 = ColumnDataSource(rain)\n\nplot7= figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,x_axis_type=\"datetime\",title='RAIN LEVELS')\nplot8= figure(tools=TOOLS,plot_width=plot1.plot_width,plot_height=plot1.plot_height,x_range=plot1.x_range,x_axis_type=\"datetime\",title='RAIN TRENDS')\n\nplot7.line(x='Date', y='TOTAL',color='blue',source=source2)\nplot8.line(x='Date', y='RAIN_TREND',color='red',source=source2)\n\nplot_rain = column(row(plot5,plot6),row(plot8,plot7))\nshow(plot_rain)\n\n\n\n","ff031030":"> **Analysis**\n\n1) We can observe that when ever the Water levels are low in the reservoirs, the usage goes -ve and then immediatly usage becomes +ve. This means during scarcity of water in reservoirs, the city responds by conserving and then immediatly overusing.\n\n2) During the immediate overuse stage, the water levels in reservoirs also increase rapidly even though the rains may\/ may not happen at large levels.( see rain trends vs usage trends).\nThis means that during scarecity of water, the city has pumped in water from external resources (apart from rain) to the reservoirs. \n\n3) The effect of rain on reservoir level is valid only till total mcft reached 10000. Beyond that the effect is negligible which means the capacity threshold of the 4 reservoirs together is around 10000 mcft.\n\n4) Every year since 2011,the reservoir levels have reached new lows. In order to balance it, the usage should be increasingly -ve during those time.\nHowever, the usage has remained more or the same in these years, the exception being 2015 and 2017, where the lows were low and highs reach the threshold of 10,000 mcft.\n\n5) Infact the usage and reservoir levels are correlated 5\/7 times . i.e.( level proprtional to usage increase)\n\n6) However post 2017, the levels have been half of 2017, city was unable to pump enough water and the water was over used.(see usage spike and total level)\nAlso since 2015 Q4 , the rainfall levels kept decreasing( rain trend )\n\n7) Due to this , the reservoir levels are reaching the lowest lows till date(~0mcft) but the usage continues to remain more or less the same.\n\n8) Collating points 5) 6) and 7) , the city can be saved only if -\n    a) The city is able to pump in additional water rapidly (which it is failing since 2015)\n    b) There should be more rains incoming (which is decreasing since 2015)\n    \n    \n> **CONCLUSION**\n\nThe city started to ill manage water resources starting from 2011. However since 2017 after a surge in water level, the situation became worse because of less rains and same level of water consumption)\n\nThis means that the city should wait for rains or spend more in pumping external water resources to quench the thirst of Chennai\n\n"}}