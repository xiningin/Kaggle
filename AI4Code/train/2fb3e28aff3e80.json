{"cell_type":{"8e6e2e16":"code","53b2b06d":"code","7bb7d5a3":"code","990305b6":"code","a8f5ba7a":"code","4b274a0d":"code","1dbd979f":"code","c91bbc94":"code","9f053efd":"code","d585ff5a":"code","0cb4953c":"code","a22cb5ed":"code","f8937c32":"code","366d3c16":"code","8a228a26":"code","e690cbd2":"code","d137777b":"code","240c9f8a":"code","4900249a":"code","0edc106c":"code","d0accdaa":"code","32bd0a5d":"code","6c7da774":"code","fa96677c":"code","1f4c92bf":"code","a3ec72a8":"code","8234e2a1":"code","4337fde0":"code","fbd16557":"code","d68a8afa":"code","f1f83fae":"markdown","3db63ebe":"markdown","a551c20f":"markdown","ff16f4b9":"markdown","bf60731b":"markdown","70a1f968":"markdown","b3f1da1c":"markdown","3d1448cb":"markdown","b4bcbee7":"markdown","7ca57831":"markdown","9a9d7dad":"markdown","e725fa32":"markdown","532160b6":"markdown","8ac496ac":"markdown","9eaa89e9":"markdown","4b6fcc89":"markdown","b578bdac":"markdown","476470f6":"markdown","984fb1c2":"markdown","81a0c69d":"markdown","61d3cc15":"markdown","8e31c57b":"markdown","907dfebd":"markdown","78dff888":"markdown","2d0b33d4":"markdown"},"source":{"8e6e2e16":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium import Choropleth, Circle, Marker","53b2b06d":"df = pd.read_csv('..\/input\/bakery-sales\/Bakery Sales.csv')\ndf = df[0:2405]\ndf.head()","7bb7d5a3":"df.replace(np.nan, 0, inplace = True)\ndf.tail()","990305b6":"df.info()","a8f5ba7a":"df.describe()","4b274a0d":"df['date'] = pd.to_datetime(df['datetime'])\ndf.drop('datetime', axis = 1, inplace = True)\n\ndf['dates'] = df['date'].dt.strftime(\"%Y-%m\")\ndf['month'] = df['date'].dt.month\ndf['day'] = df['date'].dt.day\ndf['hour'] = df['date'].dt.hour\n\ndf.sample()","1dbd979f":"df_month_sale = df.groupby(df['dates'], as_index = False)['total'].sum()\ndf_month_sale","c91bbc94":"sns.set(style = 'darkgrid')\nplt.figure(figsize = (10,4))\n\nsns.lineplot(data = df_month_sale, x = 'dates', y = 'total', color = 'skyblue', linewidth = 3)\nplt.axvline(x = '2020-01', color = 'r', linestyle = '--', label = 'Covid-19 outbreak in Korea: Jan, 20')\n\nplt.legend()\nplt.title('Monthly Total Sales', size = 16)\nplt.xlabel('Date')\nplt.ylabel('Total Sales (Won)')\nplt.show()","9f053efd":"corona = pd.read_csv('..\/input\/corona\/corona.csv')\n\ncorona['date'] = pd.to_datetime(corona['date'])\ncorona['date'] = corona['date'].dt.strftime(\"%Y-%m-%d\")\ncorona.set_index('date', inplace=True)","d585ff5a":"sns.set(style = 'darkgrid')\n\nfig, ax = plt.subplots(figsize = (10,4))\nx= corona.index\ny = corona.confirmed\n\nax.plot(x,y, label = 'corona confirmed', color = 'r')\nplt.axvline(x = '2020-02-19', color = 'y', linestyle = '--', label = 'No.31 confirmed')\nax.set_xticks(ax.get_xticks()[::10])\nplt.xticks(rotation = 45)\nplt.title(\"Trend of Corona in South Korea\", size = 16)\nplt.ylabel('Count')\nplt.legend()\nplt.show()","0cb4953c":"df_month_pain = df.groupby(df['dates'], as_index = False)[['angbutter', 'plain bread', 'jam',\n                                                           'croissant', 'tiramisu croissant',\n                                                           'cacao deep', 'pain au chocolat', 'almond croissant', 'croque monsieur',\n                                                           'mad garlic', 'gateau chocolat', 'pandoro',\n                                                           'cheese cake', 'orange pound', 'wiener','tiramisu', 'merinque cookies']].sum()\ndf_month_pain","a22cb5ed":"sns.set(style = 'darkgrid')\nfigure, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(ncols = 3, nrows = 2)\n\nfigure.set_size_inches(30,10)\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'angbutter', label = 'Angbutter', ax = ax1)\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'croissant', label = 'Croissant', ax = ax2, color = 'green')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'plain bread', label = 'Plain Bread', ax = ax3, color = 'Tan')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'tiramisu croissant', label = 'Tiramisu Croissant', ax = ax4, color = 'Tomato')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'pain au chocolat', label = 'Pain Au Chocolat', ax = ax5, color = 'Olive')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'wiener', label = 'Wiener', ax = ax6, color = 'Maroon')\n\nplt.show()","f8937c32":"sns.set(style = 'darkgrid')\nfigure, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(ncols = 3, nrows = 2)\n\nfigure.set_size_inches(30,10)\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'pandoro', label = 'Pandoro', ax = ax1, color = 'gold')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'orange pound', label = 'Orange Pound', ax = ax2, color = 'orange')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'cacao deep', label = 'Cacao Deep', ax = ax3, color = 'black')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'almond croissant', label = 'Almond Croissant', ax = ax4, color = 'Peru')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'gateau chocolat', label = 'Gateau Chocolat', ax = ax5, color = 'black')\nsns.lineplot(data = df_month_pain, x = 'dates', y = 'cheese cake', label = 'Cheese cake', ax = ax6, color = 'yellow')\n\nplt.show()","366d3c16":"df_month_beverage = df.groupby(df['dates'], as_index = False)[['americano', 'caffe latte', 'milk tea', 'vanila latte', 'berry ade', 'lemon ade']].sum()\ndf_month_beverage","8a228a26":"sns.set(style = 'darkgrid')\nfigure, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(ncols = 3, nrows = 2)\n\nfigure.set_size_inches(30,10)\nsns.lineplot(data = df_month_beverage, x = 'dates', y = 'americano', label = 'Americano', ax = ax1, color = 'black')\nsns.lineplot(data = df_month_beverage, x = 'dates', y = 'caffe latte', label = 'Caffe Latte', ax = ax2, color = 'black')\nsns.lineplot(data = df_month_beverage, x = 'dates', y = 'vanila latte', label = 'Vanila Latte', ax = ax3, color = 'gray')\nsns.lineplot(data = df_month_beverage, x = 'dates', y = 'milk tea', label = 'Ice Milk Tea', ax = ax4, color = 'Plum')\nsns.lineplot(data = df_month_beverage, x = 'dates', y = 'berry ade', label = 'Berry Ade', ax = ax5, color = 'red')\nsns.lineplot(data = df_month_beverage, x = 'dates', y = 'lemon ade', label = 'Lemon Ade', ax = ax6, color = 'yellow')\n\nplt.legend()\nplt.show()","e690cbd2":"df['time'] = ['lunch' if hour < 14 else 'afternoon' for hour in df['hour']]","d137777b":"p = df.pivot_table(index = 'time', columns = 'day of week', values = 'day', aggfunc = 'count')\np = p.reindex(['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'], axis = 1)\n\nplt.figure(figsize = (10,5))\ng = sns.heatmap(p, annot = True, cmap = 'Blues', fmt=\".0f\")\nplt.title(\"Day Of Week\", size = 15)\nplt.show()","240c9f8a":"angbutter_pivot = df.pivot_table(index = 'time', columns = 'day of week', values = 'angbutter', aggfunc = 'sum')\nangbutter_pivot = angbutter_pivot.reindex(['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'], axis = 1)\n\nplt.figure(figsize = (10,5))\ng = sns.heatmap(angbutter_pivot, annot = True, cmap = 'Greens', fmt= \".0f\")\nplt.title('Sales of Angbutter by day and time', size = 15)\nplt.show()","4900249a":"df_place = df[df['place'] != 0]","0edc106c":"df_place['place'].replace({'\uc18c\uc591\ub3d9' : 'Soyang-dong', '\ud6a8\uc790 3\ub3d9' : 'Hyoja3-dong', '\ud6c4\ud3c9 1\ub3d9' : 'Hoopyeong1-dong', '\ud6c4\ud3c9 2\ub3d9' : 'Hoopyeong2-dong', \n                           '\uc11d\uc0ac\ub3d9' : 'Seoksa-dong', '\ud1f4\uacc4\ub3d9' : 'Toegye-dong', '\ub3d9\uba74' : 'Dongmyeon', '\ud6c4\ud3c9 3\ub3d9': 'Hoopyeong3-dong', \"\uc2e0\uc0ac\uc6b0\ub3d9\" : 'Sinsawoo-dong',\n                          \"\uac15\ub0a8\ub3d9\" : 'Gangnam-dong', \"\ud6a8\uc790 1\ub3d9\": 'Hyoja1-dong', '\uc870\uc6b4\ub3d9' : 'Jowoon-dong', '\uad50\ub3d9' : 'Gyo-dong', '\ud6a8\uc790 2\ub3d9' : 'Hyoja2-dong', '\uc57d\uc0ac\uba85\ub3d9' : 'Yaksamyeong-dong',\n                          '\uadfc\ud654\ub3d9': 'Geunhwa-dong', '\ub3d9\ub0b4\uba74' : 'Dongnae-myeon', '\uc2e0\ub3d9\uba74' : 'Sindong-myeon', '\uad50\ub3d9 ': 'Gyo-dong'}, inplace = True)","d0accdaa":"g = df_place.groupby('place').count()\ng.reset_index(inplace = True)\ng.sort_values(by = 'time', inplace = True, ascending = False)\n\nplt.figure(figsize = (10,6))\n\nsns.barplot(data = g, x = 'time', y = 'place', palette = 'rocket')\nplt.title('Volume of Order by Place', size = 15)\nplt.xlabel('Volum of Order')\nplt.ylabel('Place')\nplt.show()","32bd0a5d":"restaurant = pd.read_csv('..\/input\/gangwon-restaurant\/gangwon_restaurant.csv')\nchuncheon_cafe = restaurant[(restaurant['\uc2dc\uad70\uad6c\uba85'] == '\ucd98\ucc9c\uc2dc') & \n                            (restaurant['\uc0c1\uad8c\uc5c5\uc885\ub300\ubd84\ub958\ucf54\ub4dc'] == 'Q') & \n                            (restaurant['\uc0c1\uad8c\uc5c5\uc885\uc911\ubd84\ub958\uba85'] == '\uc81c\uacfc\uc81c\ube75\ub5a1\ucf00\uc775') |\n                            (restaurant['\uc0c1\uad8c\uc5c5\uc885\uc911\ubd84\ub958\uba85'] == '\ucee4\ud53c\uc810\/\uce74\ud398')]","6c7da774":"bakery = chuncheon_cafe[(chuncheon_cafe['\uc0c1\ud638\uba85'] == '\ud30c\ub9ac\ubc14\uac8c\ub728') |\n                        (chuncheon_cafe['\uc0c1\ud638\uba85'] == '\ub69c\ub808\uc96c\ub974') |\n                        (chuncheon_cafe['\uc0c1\ud638\uba85'] == '\uc790\uc720\ube75\uc9d1') |\n                        (chuncheon_cafe['\uc0c1\ud638\uba85'] == '\uc2a4\ud0c0\ubc85\uc2a4')]\n\nbakery['\uc0c1\ud638\uba85'].replace({'\ud30c\ub9ac\ubc14\uac8c\ub728' : 'Paris Baguette', '\ub69c\ub808\uc96c\ub974' : 'Tours les Jours', '\uc790\uc720\ube75\uc9d1' : 'Our Bakery', '\uc2a4\ud0c0\ubc85\uc2a4' : 'Starbucks'}, inplace = True)\n\nbakery = bakery[['\uc0c1\ud638\uba85', '\ub3c4\ub85c\uba85\uc8fc\uc18c', '\uc704\ub3c4', '\uacbd\ub3c4']]\ngeo_df = bakery","fa96677c":"map = folium.Map(location = [geo_df['\uc704\ub3c4'].mean(), geo_df['\uacbd\ub3c4'].mean()], zoom_start = 10)\n\nfor n in geo_df.index:\n    popup_name = geo_df.loc[n, '\uc0c1\ud638\uba85']\n    if geo_df.loc[n, '\uc0c1\ud638\uba85'] == 'Starbucks':\n        icon_color = 'green'\n    elif geo_df.loc[n, '\uc0c1\ud638\uba85'] == 'Our Bakery':\n        icon_color = 'red'\n    elif geo_df.loc[n, '\uc0c1\ud638\uba85'] == 'Tours les Jours':\n        icon_color = 'orange'\n    else:\n        icon_color = 'blue'\n        \n    Circle(\n        location = [geo_df.loc[n, '\uc704\ub3c4'], geo_df.loc[n,'\uacbd\ub3c4']],\n        radius = 30,\n        popup = popup_name,\n        color = icon_color,\n        fill = True,\n        fill_color = icon_color).add_to(map)\nmap","1f4c92bf":"from mlxtend.frequent_patterns import apriori, association_rules","a3ec72a8":"df_item = df.reset_index(inplace = True)\ndf_item = df.drop(['date','place', 'day of week', 'total', 'dates', 'month', 'day', 'hour','time', 'index'], axis = 1, index = None)\ndf_item = df_item >= 1\ndf_item.head()","8234e2a1":"df_apriori = apriori(df_item, min_support = 0.01, use_colnames = True)\ndf_apriori.sort_values(by = 'support', ascending = False).head()","4337fde0":"df_apriori['length'] = df_apriori['itemsets'].apply(lambda x : len(x))","fbd16557":"df_apriori2 = df_apriori[(df_apriori['length'] == 2) & df_apriori['support'] >= 0.05]\ndf_apriori2.sort_values(by = 'support', ascending = False).head()","d68a8afa":"rules = association_rules(df_apriori, metric = 'lift', min_threshold = 1)\nrules.sort_values(by = 'lift', ascending = False, inplace = True)\nrules.head()","f1f83fae":"## Total Sales","3db63ebe":"## By Customer's Place","a551c20f":"Since our bakery is located in Dongmyeon, it showed the highest sales volume in Dongmyeon. It also showed a lot of sales in nearby Hupyeong-dong. \n\nThe platform called  Beamin, which we use, shows poor sales rates in relatively distant neighborhoods because delivery charges vary according to distance.\n\nFor this reason, we are trying to set up a new branch to deliver itmes to distant areas.\n\nSince the corona, many franchise bakeries are also delivering.","ff16f4b9":"### Sales of Angbutter(Our signature menu)","bf60731b":"# 1. Loading and Cleaning Data","70a1f968":"# 2. EDA","b3f1da1c":"In general, the order volume was high at lunch time (11, 12, 1 o'clock).\n\nEspecially, it shows a lot of sales on weekends.\n\nWe were very surprised that the number of orders was low on Friday!","3d1448cb":"I worked part time at a small bakery.\n\nOur bakery started delivery service in July 2019.\n\nI collected this data and analyzed it to share with my employees.\n\nMy goal is this.\n\nFirst, I'm going to analyze sales and sales by item. Look for months with low sales, and find out if there was a problem with the product or service. If you have a product that sells less, consider switching to another product.\n\nSecond, I'm going to see a volume of order by day of the week, time(lunch or afternoon), and customer's location. Then we can control the production.\n\nThird, I'm going to see association rules. We could know which items have high support and lift.","b4bcbee7":"80% customers order ang butter, and about 35% order bread.\n\nabout 30% order tiramisu croissants, croissant.","7ca57831":"# Bakery Sales","9a9d7dad":"Angbutter that the most selling menu in our store is strongly related to the total profit. so Angbutter has a similar trend to the sales graph.\n\nThe croissant, Pain Au Chocolat is in Febuary, it had a very small sales volume. We had to check the process or ingredients once again.\n\nTiramisu  Croissant, Plain bread show an increasing trend. It looks like a good sign.","e725fa32":"\nWhile analyzing, I saw a lot of unexpected results I couldn't think of.\n\nAlthough it was difficult to collect data directly, it was very beneficial to visualize and solve business problems(like monthly sales, sales by day of the week, time, place)\n\nIf it was fun, Upvote and comment please.\n\nthank you for reading. ","532160b6":"Pandoro had the lowest sales volume in December. However, it has been showing decent sales since January.\n\nOrange pound and cacao deep are also on the rise. In particular, cacao deep shows steady sales even when sales were low.\n\nAlmond croissants are selling poorly. To make an almond croissant, we need to make almond cream. Considering the sales volume, it is likely that production should be reduced or replaced with other products.","8ac496ac":"## By Day of Week","9eaa89e9":"This is a map showing Paris Baguette(blue) and Tous Les Jours(green), the representative Korean franchise bakery, and our bakery(red).\n\nYou can see that Paris Baguette is located near the station compared to Tous Les Jours.\n\nWe decided to target the Seoksa-dong, Toegye-dong, and Onui-dong areas where sales were relatively low due to the distance.\n\nFinally, Onui-dong, which is located near the station and is expected to be less competitive, was selected.","4b6fcc89":"Beverage sales are low compared to bread sales.\n\nIn particular, most beverages sold very low in April.\n\nThis is thought to be because the spread of the corona has been mitigated and beverage were drank at bakery rather than delivery.","b578bdac":"# 4. Conclusion","476470f6":"# 3. Association Analysis","984fb1c2":"Since we started delivery service on July 11th, July recorded 20 days of sales.\n\nIn August, it posted sales of 6 million won, but declined significantly in September and October.\n\nSince Korea's first coronavirus confirmed, delivery sales have increased dramatically.","81a0c69d":"### Trend of Corona Virus","61d3cc15":"This has a high correlation with the corona confirmed graph.\n\nOn February 18th, a large-scale spread began from confirmed patient 31.\n\nIt seems that during this period, customers used delivery services rather than stores, and sales increased sharply.\n\nDelivery sales declined as the spread eased in April.\n\nIt can be speculated that the store's utilization rate has increased.","8e31c57b":"### Sales by day and time, place","907dfebd":"## Monthly Sales of Beverage","78dff888":"## Monthly Sales of Pain","2d0b33d4":"<img src=\"https:\/\/www.theinternationalkitchen.com\/wp-content\/uploads\/2020\/01\/TIK_FrenchCookingClasses_croissants-1280x720.jpg\" width=\"800\">\n\n"}}