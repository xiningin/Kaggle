{"cell_type":{"ab55fabb":"code","182efe71":"code","270eb068":"code","eb756bae":"code","c2a42268":"code","5188b5e4":"code","45888abb":"code","9c43264a":"code","113fecf9":"code","ccddf43f":"code","00b492c1":"code","27211de4":"code","e2cbe84b":"code","eb433b8f":"code","f5f5dd4d":"code","2506864f":"code","c2acb356":"code","efaa84d7":"code","82106c65":"code","052be43e":"code","070ea4a5":"code","c09fde73":"code","66d22dfd":"code","f220f92a":"code","33aae9a7":"code","3b36239f":"code","4139d213":"code","076d970b":"code","a36ec97f":"code","962645ce":"code","1adc2329":"code","3063eb22":"code","effb1793":"code","def1d0ab":"code","a04cffae":"code","68c0df4f":"code","ba7a89c7":"code","a277c1d2":"code","f69d491c":"code","baa1c637":"code","c7810cae":"code","5863cdf6":"code","037bfa01":"code","c5380f24":"code","538ace8d":"code","c2d6f007":"code","f9871bda":"code","4131b5b0":"code","74ade18b":"code","e1b80785":"markdown","8b0582a8":"markdown","ca8b7e89":"markdown","964fea6c":"markdown","27134aaf":"markdown","7b45d240":"markdown","399c6855":"markdown","bb0c83b3":"markdown","cb6e5037":"markdown","b9330ffa":"markdown","9548e769":"markdown","bbc76333":"markdown","8578c170":"markdown","a3cc8fe4":"markdown","dbee4cd3":"markdown","f669e5cc":"markdown","7ef3ab40":"markdown","57ac5568":"markdown","e2ba6870":"markdown","344c1ed9":"markdown","f9282b24":"markdown","ab233431":"markdown","15f548ab":"markdown","952ee995":"markdown","0c26bead":"markdown","6e54c3bb":"markdown","4f6bc6ff":"markdown","446c47e4":"markdown","618d5f28":"markdown","b9f7a60b":"markdown","98990596":"markdown","f506a851":"markdown","18bc294f":"markdown","dad5f9eb":"markdown","7f254670":"markdown","9c4834b4":"markdown","f36aab5e":"markdown","c0e4d0e4":"markdown","a6351afc":"markdown","053f57dd":"markdown","d939ca02":"markdown","2654437f":"markdown","71f83053":"markdown","ab920640":"markdown","6f7c653f":"markdown","a63dd9c7":"markdown","aab46729":"markdown","0c092160":"markdown","f4fcda22":"markdown","725766be":"markdown","4e034e77":"markdown","98e51e7d":"markdown","f5803a6c":"markdown","9cbdfb9b":"markdown","ab548c4e":"markdown","dac3b263":"markdown","2208730c":"markdown","b5bb5331":"markdown","65670597":"markdown"},"source":{"ab55fabb":"# Image source: akm-img-a-in.tosshub.com\/indiatoday\nfrom IPython.display import HTML, display\nzHtm = \"<img style='height:300px; margin:0px; float:left; border:5px solid green;' \"\nzHtm = zHtm + \"src='https:\/\/akm-img-a-in.tosshub.com\/indiatoday\/images\/story\/202104\/varanasi_cremation_pti_1200x768.jpeg' \/>\"\ndisplay(HTML(zHtm))","182efe71":"import pandas as pd\n\npd.options.display.width = 0\n\npd.set_option('display.expand_frame_repr', False)","270eb068":"zFolder = \"..\/input\/covid-cases-sugarcane-crops-and-irrigated-crops\/\"\nzCovid = zFolder + \"CovidCases.csv\" # www.kaggle.com\/undersc0re\/covid19-dataset-india; www.covid19india.org\/\nzSugar = zFolder + \"SugarcaneLaksHacters.csv\" # https:\/\/sugarcane.dac.gov.in\/pdf\/StatisticsAPY.pdf\nzCrops = zFolder + \"CropAreaHectares.csv\" # aps.dac.gov.in\/LUS\/Public\/Reports.aspx\nzIrrig = zFolder + \"IrrigatedCropAreaHectares.csv\" # aps.dac.gov.in\/LUS\/Public\/Reports.aspx","eb756bae":"zrepl = {\" \":\"\",\"a\":\"\",\"e\":\"\",\"i\":\"\",\"o\":\"\",\"u\":\"\",\"bhrkmr(bhb)\":\"bhrkmr\",\"bhrprbchmprn\":\"bhrstchmprn\",\"bhrpshchmchmprn\":\"bhrwstchmprn\",\"chhttsgrhdkshnbstrdntwd\":\"chhttsgrhdntwd\",\"chhttsgrhgrybnd\":\"chhttsgrhgrbnd\",\"chhttsgrhjnjgr-chmp\":\"chhttsgrhjnjgrchmp\",\"chhttsgrhknkr\":\"chhttsgrhthrstt\",\"chhttsgrhkr\":\"chhttsgrhkry\",\"chhttsgrhttrbstrknkr\":\"chhttsgrhdntwd\",\"ddrndngrhvlnddmnnddd\":\"ddrndngrhvlddrndngrhvl\",\"ddrndngrhvlnddmnnddddrndngrhvl\":\"ddrndngrhvlddrndngrhvl\",\"ddrndngrhvlnddmnndddmn\":\"ddrndngrhvlddrndngrhvl\",\"ddrndngrhvlnddmnnddthrstt\":\"ddrndngrhvlddrndngrhvl\",\"dlhnrthdlh\":\"dlhdlh\",\"dlhnrthstdlh\":\"dlhdlh\",\"dlhnrthwstdlh\":\"dlhdlh\",\"dlhnwdlh\":\"dlhdlh\",\"dlhstdlh\":\"dlhdlh\",\"dlhsthdlh\":\"dlhdlh\",\"dlhsthwstdlh\":\"dlhdlh\",\"dlhwstdlh\":\"dlhdlh\",\"dmnnddd\":\"ddrndngrhvlddrndngrhvl\",\"dmnndddmn\":\"ddrndngrhvlddrndngrhvl\",\"dmnndddmnndd\":\"ddrndngrhvlddrndngrhvl\",\"dshblshwr\":\"dshblsr\",\"dshsnpr\":\"dshsbrnpr\",\"gjrtkchchh\":\"gjrtktch\",\"gjrtpnchmhls\":\"gjrtpnchmhl\",\"gthrstt\":\"gg\",\"hrynchrkddr\":\"hrynchrkhddr\",\"jhrkhndsrkl-khrswn\":\"jhrkhndsrklkhrswn\",\"jhrkhndstsnghbm\":\"jhrkhndstsnghbhm\",\"jmmndkshmrnknwn\":\"jmmndkshmrjmmndkshmr\",\"krntkbjpr\":\"krntkvjypr\",\"krntkblgm\":\"krntkblgv\",\"krntkbllry\":\"krntkbllr\",\"krntkchkbllpr\":\"krntkchkkbllpr\",\"krntkchkmglr\":\"krntkchkkmglr\",\"krntkglbrg\":\"krntkthrstt\",\"krntkshmg\":\"krntkshvmgg\",\"ndhrprdshkdp\":\"ndhrprdshndhrprdsh\",\"ndhrprdshs.p.s.nllr\":\"ndhrprdshspsrnllr\",\"ndhrprdshthrstt\":\"ndhrprdshndhrprdsh\",\"nglndnglnd\":\"nglndthrs\",\"pnjbmktsr\":\"pnjbsrmktsrshb\",\"pnjbnwnshhr\":\"pnjbshhdbhgtsnghngr\",\"pnjbs..sngr\":\"pnjbs..s.ngr\",\"rnchlprdshlwrdbngvlly\":\"rnchlprdshdbngvlly\",\"rnchlprdshpprdbngvlly\":\"rnchlprdshdbngvlly\",\"ssmkmrpmtrpltn\":\"ssmkmrpmtr\",\"tlngnbhdrdr\":\"tlngnbhdrdrkthgdm\",\"tlngnjglmb\":\"tlngnjglmbgdwl\",\"tlngnjyshnkr\":\"tlngnjyshnkrbhplplly\",\"tlngnkmrmbhmsfbd\":\"tlngnkmrmbhm\",\"tlngnmdchl\":\"tlngnmdchlmlkjgr\",\"tlngnrjnn\":\"tlngnrjnnsrcll\",\"tlngnrngrdd\":\"tlngnrngrddy\",\"tlngnwrnglrbn\":\"tlngnwrngl\",\"tlngnwrnglrbn\":\"tlngnwrngl\",\"tlngnwrnglrrl\":\"tlngnwrngl\",\"tlngnwrnglrrl\":\"tlngnwrngl\",\"tlngnyddr\":\"tlngnyddrbhvngr\",\"tmlndknnykmr\":\"tmlndknykmr\",\"tmlndthnlgrs\":\"tmlndnlgrs\",\"tmlndththkd\":\"tmlndththkkd\",\"tmlndvllprm\":\"tmlndvlpprm\",\"ttrkhnddmsnghngr\":\"ttrkhnddhmsnghngr\",\"ttrprdshfzbd\":\"ttrprdshprygrj\",\"ttrprdshkhr\":\"ttrprdshlkhmprkhr\",\"ttrprdshllhbd\":\"ttrprdshprygrj\",\"ttrprdshshrvst\":\"ttrprdshshrwst\",\"wstbngl24prgnsnrth\":\"wstbnglnrth24prgns\",\"wstbngl24prgnssth\":\"wstbnglsth24prgns\",\"wstbngldnjprdkshn\":\"wstbngldkshndnjpr\",\"wstbngldnjprttr\":\"wstbnglttrdnjpr\",\"wstbngljhrgrm\":\"wstbngljhrgrm\",\"wstbnglklmpng\":\"wstbnglklmpng\",\"wstbnglmdnprst\":\"wstbnglprbmdnpr\",\"wstbnglmdnprwst\":\"wstbnglpschmmdnpr\",\"wstbnglmldh\":\"wstbnglmld\",\"wstbnglpschmbrdhmn\":\"wstbnglpschmbrdhmn\"}","c2a42268":"def fNew(s):\n    t = s.lower()\n    for key, val in zrepl.items():\n        t = t.replace(key, val)\n    return t","5188b5e4":"def fEqu(s, t):\n    if s == t:\n        return 1\n    else:\n        return 0","45888abb":"def fNm1(s):\n    try:\n        u = int(s)\n        return u\n    except:\n        return 0","9c43264a":"def fNm2(s, t):\n    try:\n        u = int(s) + int(t)\n        return 1\n    except:\n        return 0","113fecf9":"def fLev(v):\n    if v < 0.25:\n        return \"None\"\n    else:\n        if v < 0.50:\n            return \"Little\"\n        else:\n            if v < 0.75:\n                return \"Moderate\"\n            else:\n                return \"High\"","ccddf43f":"dfCor = pd.DataFrame(columns = [\"CovidStatus\",\"CropType\",\"Region\",\"Data\",\"Correlation\",\"CorrLevel\"])","00b492c1":"def fCor(dfCor, dfCov, dfItm, xItm, xRgn, xDat):\n    \n    dfCovItm = pd.merge(dfCov, dfItm, on=xRgn, how=\"inner\")\n    dfAdd = pd.DataFrame(columns = [\"CovidStatus\",\"CropType\",\"Region\",\"Data\",\"Correlation\",\"CorrLevel\"])\n    \n    for xSts in [\"Deceased\",\"Hospital\",\"Recovery\"]:        \n        zCor = dfCovItm[xSts].corr(dfCovItm[xItm])       \n        dfAdd = dfAdd.append(pd.DataFrame({\"CovidStatus\":xSts,\"CropType\":xItm,\"Region\":xRgn,\"Data\":xDat,\n                \"Correlation\":zCor,\"CorrLevel\":fLev(zCor)}, index=[0]), ignore_index=True)\n        \n    print(dfAdd)\n    dfCor = dfCor.append(dfAdd, ignore_index=True)\n    \n    return dfCor","27211de4":"dfCovid0 = pd.read_csv(zCovid)\ndfCovid0.head(2)","e2cbe84b":"dfCovid0.columns = [\"Row\",\"Patient\",\"StPatient\",\"Date\",\"Age\",\"Gender\",\"City\",\"District\",\"State\",\"St\",\n                    \"Status\",\"From\",\"Nationality\",\"Transmission\",\"ChangeDate\",\"Num\",\"Entry\"]","eb433b8f":"dfCovid0[\"StDist\"] = dfCovid0[\"State\"] + dfCovid0[\"District\"]\ndfCovid0[\"StDist\"] = dfCovid0[\"StDist\"].apply(lambda x: fNew(str(x)))\ndfCovid0.head(2)","f5f5dd4d":"dfCovid1 = dfCovid0[[\"Status\", \"Row\"]].groupby([\"Status\"]).count()\ndfCovid1.head(2)","2506864f":"dfCovid0[\"Deceased\"] = dfCovid0[\"Status\"].apply(lambda x: fEqu(x, \"Deceased\"))\ndfCovid0[\"Hospital\"] = dfCovid0[\"Status\"].apply(lambda x: fEqu(x, \"Hospitalized\"))\ndfCovid0[\"Recovery\"] = dfCovid0[\"Status\"].apply(lambda x: fEqu(x, \"Recovered\"))\ndfCovid0.head(2)","c2acb356":"dfCovid2 = dfCovid0[[\"State\",\"Deceased\",\"Hospital\",\"Recovery\"]].groupby([\"State\"]).sum()\ndfCovid2 = dfCovid2.reset_index()\ndfCovid2.columns = [\"State\", \"Deceased\", \"Hospital\", \"Recovery\"]\ndfCovid2.head(2)","efaa84d7":"dfCovid3 = dfCovid0[[\"StDist\",\"Deceased\",\"Hospital\",\"Recovery\"]].groupby([\"StDist\"]).sum()\ndfCovid3 = dfCovid3.reset_index()\ndfCovid3.columns = [\"StDist\", \"Deceased\", \"Hospital\", \"Recovery\"]\ndfCovid3.head(2)","82106c65":"dfSugar = pd.read_csv(zSugar)\ndfSugar.head(2)","052be43e":"dfSugar = dfSugar.assign(Sugarcane = lambda x: round(\n                     (x[\"2013-14\"]+x[\"2014-15\"]+x[\"2015-16\"]+x[\"2016-17\"]+x[\"2017-18\"])\/6, 2))\ndfSugar = dfSugar[[\"State\", \"Sugarcane\"]]\ndfSugar.head(2)","070ea4a5":"dfCor = fCor(dfCor, dfCovid2, dfSugar, \"Sugarcane\", \"State\", \"State Sugarcane\")","c09fde73":"dfSugar = pd.concat([pd.read_csv(zCrops)])[[\"State\",\"Sugarcane\"]]\ndfSugar.head(2)","66d22dfd":"dfSugar[\"Sugarcane\"] = dfSugar[\"Sugarcane\"].apply(lambda x: fNm1(x))\ndfSugar.head(2)","f220f92a":"dfSugar = dfSugar[dfSugar[\"Sugarcane\"] > 0]\ndfSugar.head(2)","33aae9a7":"dfSugar = dfSugar[[\"State\",\"Sugarcane\"]].groupby(\"State\").sum()\ndfSugar = dfSugar.reset_index()\ndfSugar.head(2)","3b36239f":"dfCor = fCor(dfCor, dfCovid2, dfSugar, \"Sugarcane\", \"State\", \"District Crop\")","4139d213":"dfSugar = pd.concat([pd.read_csv(zIrrig)])[[\"State\",\"Sugarcane\"]]\ndfSugar.head(2)","076d970b":"dfSugar[\"Sugarcane\"] = dfSugar[\"Sugarcane\"].apply(lambda x: fNm1(x))\ndfSugar.head(2)","a36ec97f":"dfSugar = dfSugar[dfSugar[\"Sugarcane\"] > 0]\ndfSugar.head(2)","962645ce":"dfSugar = dfSugar[[\"State\",\"Sugarcane\"]].groupby(\"State\").sum()\ndfSugar = dfSugar.reset_index()\ndfSugar.head(2)","1adc2329":"dfCor = fCor(dfCor, dfCovid2, dfSugar, \"Sugarcane\", \"State\", \"District Irrigation\")","3063eb22":"dfSugar = pd.concat([pd.read_csv(zCrops)])[[\"State\",\"District\",\"Sugarcane\"]]\ndfSugar.head(2)","effb1793":"dfSugar[\"Sugarcane\"] = dfSugar[\"Sugarcane\"].apply(lambda x: fNm1(x))\ndfSugar.head(2)","def1d0ab":"dfSugar = dfSugar[dfSugar[\"Sugarcane\"] > 0]\ndfSugar.head(2)","a04cffae":"dfSugar[\"StDist\"] = dfSugar[\"State\"] + dfSugar[\"District\"]\ndfSugar[\"StDist\"] = dfSugar[\"StDist\"].apply(lambda x: fNew(x))\ndfSugar.head(2)","68c0df4f":"dfSugar = dfSugar[[\"StDist\",\"Sugarcane\"]].groupby([\"StDist\"]).sum()\ndfSugar = dfSugar.reset_index()\ndfSugar.head(2)","ba7a89c7":"dfCor = fCor(dfCor, dfCovid3, dfSugar, \"Sugarcane\", \"StDist\", \"District Crop\")","a277c1d2":"dfSugar = pd.concat([pd.read_csv(zIrrig)])[[\"State\",\"District\",\"Sugarcane\"]]\ndfSugar.head(2)","f69d491c":"dfSugar[\"Sugarcane\"] = dfSugar[\"Sugarcane\"].apply(lambda x: fNm1(x))\ndfSugar.head(2)","baa1c637":"dfSugar = dfSugar[dfSugar[\"Sugarcane\"] > 0]\ndfSugar.head(2)","c7810cae":"dfSugar[\"StDist\"] = dfSugar[\"State\"] + dfSugar[\"District\"]\ndfSugar[\"StDist\"] = dfSugar[\"StDist\"].apply(lambda x: fNew(x))\ndfSugar.head(2)","5863cdf6":"dfSugar = dfSugar[[\"StDist\",\"Sugarcane\"]].groupby([\"StDist\"]).sum()\ndfSugar = dfSugar.reset_index()\ndfSugar.head(2)","037bfa01":"dfCor = fCor(dfCor, dfCovid3, dfSugar, \"Sugarcane\", \"StDist\", \"District Irrigation\")","c5380f24":"dfCrops = pd.concat([pd.read_csv(zCrops)])\ndfCrops.head(2)","538ace8d":"zItems = [\"Rice-Autumn\",\"Rice-Winter\",\"Rice-Summer\",\"Rice-Total\",\"Jowar-Kharif\",\"Jowar-Rabi\",\"Jowar-Total\",\"Bajra\",\"Maize\",\n          \"Ragi\",\"Wheat\",\"Barley\",\"OtherCerealsMillets-Kharif\",\"OtherCerealsMillets-Rabi\",\"OtherCerealsMillets-Total\",\n          \"TotalCerealsAndMillets\",\"Gram\",\"Arhar(Tur)\",\"OtherPulses-Kharif\",\"OtherPulses-Rabi\",\"OtherPulses-Total\",\n          \"TotalPulses\",\"TotalFoodGrains\",\"Sugarcane\",\"TotalCondimentsAndSpices\",\"OtherFoodCrops\",\n          \"TotalFoodCrop\",\"Groundnut\",\"Sesamum\",\"RapeseedAndMustard\",\"Linseed\",\"Soyabean\",\"Sunflower\",\"OtherOilseeds\",\n          \"TotalOilseeds\",\"Cotton\",\"Tobacco\",\"FodderCrops\",\"OtherNonFoodCrops\",\"TotalNonFoodCrops\",\"TotalFruitsAndVegetables\"]","c2d6f007":"for s in zItems:\n    \n    dfCropx = dfCrops[[\"State\",\"District\",s]]\n    dfCropx[s] = dfCropx[s].apply(lambda x: fNm1(x))\n    dfCropx = dfCropx[dfCropx[s] > 0]\n    \n    dfCropx[\"StDist\"] = dfCropx[\"State\"] + dfCropx[\"District\"]\n    dfCropx[\"StDist\"] = dfCropx[\"StDist\"].apply(lambda x: fNew(x))\n    dfCropx = dfCropx[[\"StDist\",s]].groupby([\"StDist\"]).sum()\n    dfCropx = dfCropx.reset_index()\n    \n    dfCor = fCor(dfCor, dfCovid3, dfCropx, s, \"StDist\", \"District Crop\")","f9871bda":"dfCrops = pd.concat([pd.read_csv(zCrops)])\ndfCrops.head(2)","4131b5b0":"for s in zItems:\n    \n    dfCropx = dfCrops[[\"State\",\"District\",s]]\n    dfCropx[s] = dfCropx[s].apply(lambda x: fNm1(x))\n    dfCropx = dfCropx[dfCropx[s] > 0]\n    \n    dfCropx[\"StDist\"] = dfCropx[\"State\"] + dfCropx[\"District\"]\n    dfCropx[\"StDist\"] = dfCropx[\"StDist\"].apply(lambda x: fNew(x))\n    dfCropx = dfCropx[[\"StDist\",s]].groupby([\"StDist\"]).sum()\n    dfCropx = dfCropx.reset_index()\n    \n    dfCor = fCor(dfCor, dfCovid3, dfCropx, s, \"StDist\", \"District Irrigation\")","74ade18b":"dfCor.to_csv(\"CovidCorrelations.csv\")","e1b80785":"For some of the districts, district names are written differently in datasets 0, 2, and 3. State-district strings of these datasets can be matched better by changing them appropriately. \n\nDefine a function to make appropriate changes in state-district strings.","8b0582a8":"Define a function to label the correlation of two numeric arrays, as no, little, moderate, or high correlation, depending on whether the value is up to 0.25, 0.50, 0.75, or 1.00.","ca8b7e89":"## Correlation to Sugarcane Area at District Level from District Irrigation Data","964fea6c":"Create and add 3 records, one for each class, for a class and its correlation to sugarcane acres.","27134aaf":"These records indicate no correlation betweem covid cases and crop acres, as viewed from the district level.","7b45d240":"Create and add 3 records, one for each class, for a class and its correlation to sugarcane acres.","399c6855":"Add columns for three main classes of Covid cases, so that we can total them easily.","bb0c83b3":"Compute totals for these classes for each state.","cb6e5037":"Compute total sugarcane acres for each district.","b9330ffa":"For each crop, create and add 3 records, one for each Covid class, for a class and its correlation to crop acres.","9548e769":"The above analysis shows that a state level comparison gives an impression that covid cases are moderately correlated to sugarcane production.\n\nHowever, a closer look at the district level proves that there is no correlation between covid cases and sugarcane production.\n\nLikewise, a closer look at the district level proves that there is no correlation between covid cases and any crop or irrigated crop production.","bbc76333":"Create a dataframe from the dataset 0 of patient-wise cases of Covid-19.","8578c170":"From this dataset, remove irrelevant records where sugarcane acres is not stated as a number.","a3cc8fe4":"The Covid-19 pandamic has engulfed the entire world, and has been devastating economies, societies, families, and individuals.","dbee4cd3":"Specify files of datasets of:\n- (0) patient-wise cases of Covid-19,\n- (1) state-wise acres of sugarcane,\n- (2) district-wise acres of crops, and\n- (3) district-wise acres of irrigated crops.","f669e5cc":"These records indicate a moderate correlation betweem covid cases and sugarcane acres, as viewed from the state level.","7ef3ab40":"## Covid Cases","57ac5568":"Compute total sugarcane acres for each state.","e2ba6870":"These records indicate a moderate correlation betweem covid cases and sugarcane acres, as viewed from the state level. ","344c1ed9":"Find the classes of Covid cases as covered by this dataset.","f9282b24":"## Correlations to Various Crop Areas at District Level from District Crop Data\u00b6","ab233431":"## Conclusion","15f548ab":"Create a district and sugarcane dataframe from the dataset 2 of district-wise acres of crops.","952ee995":"Create a district and crop dataframe from the dataset 2 of district-wise acres of irrigated crops.","0c26bead":"## Inputs","6e54c3bb":"## Correlations to Various Crop Areas at District Level from District Irrigation Data\u00b6","4f6bc6ff":"Compute total sugarcane acres for each district.","446c47e4":"While vaccines and other medical solutions are being worked on a massive scale, it will be useful to understand unforessen factors that can spread this panadamic, so that we cam devise some preventive mesaures.\n\nSeveral people have studied effects of temperatures and other climatic conditions on the spread of coronaviruses.\n\nRecently, Brazil and India are the most severly affected by this pandemic. Maharashtra and Uttar Pradesh are the most severly affected stated in India. One thing that is common between Brazil and India, and between Maharashtra and Uttar Pradesh, is that they have very high production of sugarcane.\n\nThis commonality made me think that the spread of Covid-19 may be correlated to sugarcane production. This promted me to gather relevant data and analyze them to prove or disprove this thought.","618d5f28":"## Correlation to Sugarcane Area at State Level from District Irrigation Data","b9f7a60b":"Create an empty dataframe of factors and correlation values.It will be updated and presented as a final output.","98990596":"Create a state and sugarcane dataframe from the dataset 3 of district-wise acres of irrigated crops.","f506a851":"Rename its columns and make them shorter.","18bc294f":"Get totals for these classes for each district.","dad5f9eb":"Define functions for weeding out records that may not be relevant for computing correlations.","7f254670":"These records indicate no correlation betweem covid cases and sugarcane acres, as viewed from the district level.","9c4834b4":"# Is Covid in India Affected by Sugarcane and Other Crop Productions?","f36aab5e":"These records indicate a moderate correlation betweem covid cases and sugarcane acres, as viewed from the state level.","c0e4d0e4":"Compute totals for sugarcane acres for each state.","a6351afc":"Create and add 3 records, one for each class, for a class and its correlation to sugarcane acres.","053f57dd":"## Correlation to Sugarcane Area at District Level from District Crop Data","d939ca02":"Create a district and sugarcane dataframe from the dataset 3 of district-wise acres of irrigated crops.","2654437f":"Save the dataframe of factors and correlation values.","71f83053":"Create a dataframe from the dataset 1 of state-wise acres of sugarcane.","ab920640":"From this dataset, remove irrelevant records, where sugarcane acres is not stated as a number.","6f7c653f":"From this dataset, remove irrelevant records, where sugarcane acres is not stated as a number.","a63dd9c7":"These records indicate no correlation betweem covid cases and sugarcane acres, as viewed from the district level.","aab46729":"## Correlation to Sugarcane Area at State Level from State Sugarcane Data","0c092160":"These records indicate no correlation betweem covid cases and irrigated crop acres, as viewed from the district level.","f4fcda22":"Define a function to create a record of correlation value versus factors, and to update the dataframe of factors and correlation values.","725766be":"For each crop, create and add 3 records, one for each Covid class, for a class and its correlation to crop acres.","4e034e77":"Create and add 3 records, one for each class, for a class and its correlation to sugarcane acres.","98e51e7d":"Combine State and District columns and apply the forementioned replacement.","f5803a6c":"Create 3 records, one for each class, for a class and its correlation to sugarcane acres.","9cbdfb9b":"Compute total sugarcane acres for each state.","ab548c4e":"Create a district and crop dataframe from the dataset 2 of district-wise acres of crops.","dac3b263":"Import the Pandas package.","2208730c":"From this dataset, remove irrelevant records, where sugarcane acres is not stated as a number.","b5bb5331":"Create a state and sugarcane dataframe from the dataset 2 of district-wise acres of crops.","65670597":"## Correlation to Sugarcane Area from at State Level from District Crop Data"}}