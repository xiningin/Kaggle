{"cell_type":{"74ff1a7b":"code","1e7a10c2":"code","27be8f8a":"code","281cd163":"code","a340ff89":"code","88e37833":"code","6a388475":"code","cce031db":"code","96bea2ee":"code","d018fad5":"code","e9f1ec63":"markdown","1b98273f":"markdown","cb38dde0":"markdown","09e7074b":"markdown","28d7b5d7":"markdown","808bf401":"markdown","ffbb4440":"markdown","bf89d959":"markdown","07ae4fbc":"markdown","2df8e5cd":"markdown"},"source":{"74ff1a7b":"# We need to install country_converter to convert various country names to ISO3 format.\n!pip install country_converter","1e7a10c2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport geopandas as gpd\nimport country_converter as coco\nimport json\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom matplotlib.animation import FuncAnimation\nfrom matplotlib.colors import Normalize, LogNorm","27be8f8a":"ts_confirmed = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\nts_confirmed = ts_confirmed.drop(['Province\/State', 'Lat', 'Long'], axis=1)\n# We need to rename \"UK\" as \"United Kingdom\" for it to be properly recognized.\nts_confirmed.loc[ts_confirmed['Country\/Region']=='UK','Country\/Region'] = 'United Kingdom'\ndays = list(ts_confirmed.columns.values[1:])","281cd163":"ts_countries = ts_confirmed.groupby(['Country\/Region']).sum().reset_index()\nts_countries['ISO3'] = coco.convert(names=ts_countries['Country\/Region'].to_list())","a340ff89":"ts_countries_diff = ts_countries.loc[:,['Country\/Region', 'ISO3']]\n\nsliding_window_size = 3\nts_countries_diff[days] = ts_countries.loc[:,days].diff(periods=3, axis=1) \/ sliding_window_size\nts_countries_diff = ts_countries_diff.drop(days[0:sliding_window_size], axis=1)\ndiff_days = days[sliding_window_size:]\n# ts_countries_diff.head()","88e37833":"gdf = gpd.read_file('\/kaggle\/input\/natural-earth-1110m-countries\/ne_110m_admin_0_countries.shp')[['ADMIN', 'ADM0_A3_IS', 'geometry']]\ngdf.columns = ['country', 'country_code', 'geometry']","6a388475":"merged = gdf.merge(ts_countries[['ISO3'] + days], left_on = 'country_code', right_on = 'ISO3', how = 'left')\nmerged[days] = merged[days].fillna(0)\nmerged = merged.drop(merged.index[merged['country'] == 'Antarctica'])\n\nmerged_diff = gdf.merge(ts_countries_diff[['ISO3'] + diff_days], left_on = 'country_code', right_on = 'ISO3', how = 'left')\nmerged_diff[diff_days] = merged_diff[diff_days].fillna(0)\nmerged_diff = merged_diff.drop(merged_diff.index[merged_diff['country'] == 'Antarctica'])","cce031db":"fig, ax = plt.subplots(1, figsize=(20, 10))\nax.axis('off')\nax.set_title('Confirmed COVID-19 cases on {}'.format(days[-1]), fontdict={'fontsize': '25', 'fontweight' : '3'})\n# fig.patch.set_facecolor('black')\nsm = plt.cm.ScalarMappable(cmap='Blues', norm=LogNorm(vmin=1, vmax=100000))\nsm._A = []\ncax = fig.add_axes([ax.get_position().x0,ax.get_position().y0,ax.get_position().width, 0.01])\ncb = fig.colorbar(sm, cax=cax, orientation='horizontal')\nplt.setp(plt.getp(cb.ax.axes, 'xticklabels'), size='16')\nax.annotate('Source: Johns Hopkins University via Kaggle', xy=(0, 0), xycoords='axes pixels', fontsize=12, color='#555555')\nmerged.plot(column=days[-1], cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0.8', norm=LogNorm(vmin=1, vmax=100000))","96bea2ee":"fig, ax = plt.subplots(1, figsize=(20, 10))\nax.axis('off')\ndraw = plt.plot([], [])[0]\ncax = fig.add_axes([ax.get_position().x0,ax.get_position().y0,ax.get_position().width, 0.01])\nsm = plt.cm.ScalarMappable(cmap='Blues', norm=LogNorm(vmin=1, vmax=100000))\nsm._A = []\ncb = fig.colorbar(sm, cax=cax, orientation='horizontal')\nax.annotate('Source: Johns Hopkins University via Kaggle', xy=(0, 0), xycoords='axes pixels', fontsize=12, color='#555555')\n    \ndef animate(x):\n    ax.set_title('Confirmed COVID-19 cases on {}'.format(x), fontdict={'fontsize': '25', 'fontweight' : '3'})\n    plt.setp(plt.getp(cb.ax.axes, 'xticklabels'), size='16')\n    merged.plot(column=x, cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0.8', norm=LogNorm(vmin=1, vmax=100000))\n    return draw,\n\noutput = animation.FuncAnimation(fig, animate, days, interval=400, blit=True, repeat=True)\noutput.save('covid2019_confirmed.gif', writer='imagemagick')","d018fad5":"fig, ax = plt.subplots(1, figsize=(20, 10))\nax.axis('off')\ndraw = plt.plot([], [])[0]\ncax = fig.add_axes([ax.get_position().x0,ax.get_position().y0,ax.get_position().width, 0.01])\nsm = plt.cm.ScalarMappable(cmap='Blues', norm=Normalize(vmin=1, vmax=1000))\nsm._A = []\ncb = fig.colorbar(sm, cax=cax, orientation='horizontal')\nax.annotate('Source: Johns Hopkins University via Kaggle', xy=(0, 0), xycoords='axes pixels', fontsize=12, color='#555555')\n    \ndef animate(x):\n    ax.set_title('New cases of COVID-19 on {}'.format(x), fontdict={'fontsize': '25', 'fontweight' : '3'})\n    plt.setp(plt.getp(cb.ax.axes, 'xticklabels'), size='16')\n    merged_diff.plot(column=x, cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0.8', norm=Normalize(vmin=1, vmax=1000))\n    return draw,\n\noutput = animation.FuncAnimation(fig, animate, diff_days, interval=400, blit=True, repeat=True)\noutput.save('covid2019_confirmed_diff.gif', writer='imagemagick')","e9f1ec63":"Merge shape DataFrame with the timeseries.","1b98273f":"Load remaining packages","cb38dde0":"## Reading and preparing data\n\nRead time series of confirmed cases.","09e7074b":"As the dataset is given by province, we sum cases in all provinces within each state.","28d7b5d7":"Read shape file downloaded from Natural Earth.","808bf401":"# Animated Maps of COVID-19 Cases by Country\nThis notebook displays COVID-19 cases as animated choropleths. It uses map data by [Natural Earth](https:\/\/www.naturalearthdata.com\/downloads\/110m-cultural-vectors\/). Graphs are generated with matplotlib.\n\n## Installing and loading packages","ffbb4440":"Print animated differential cases","bf89d959":"Print animated cases.","07ae4fbc":"## Creating maps\n\nPrint confirmed cases on a single day to check if everything is ok.","2df8e5cd":"We compute differences of cases to previous days."}}