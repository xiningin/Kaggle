{"cell_type":{"39716113":"code","76648d9a":"code","1985c9b1":"code","c57c3792":"code","b6152eea":"code","784163fe":"code","b7632674":"code","256c6cdc":"code","713fa769":"code","cc679ea2":"code","0fb4b0c9":"code","0c14ac78":"code","21e7501c":"code","620ce3fb":"code","c6a9e663":"code","bc0aa075":"code","94f7ea8f":"code","482d0eb0":"code","29e27604":"code","8c388243":"code","f6d771da":"code","5dacb955":"code","f8f9aadf":"code","79f9113b":"code","195bddf7":"code","aad7d653":"code","2d0e6621":"code","be74ce3b":"code","409ae8c7":"code","fc34602a":"code","bb3350eb":"code","f963ec27":"code","65c032d7":"code","a4dc7644":"code","61e9b161":"code","771dda64":"code","860abe8c":"code","a8891fbd":"code","8be3e8b0":"code","53cbd5ab":"code","db871c83":"code","6f95196f":"code","d7072522":"code","998893ba":"code","3a370e1b":"code","add94c49":"code","605be900":"code","91818b7a":"code","bc740961":"markdown","2425962a":"markdown","48e22a6c":"markdown","bdc7f549":"markdown","b7d7c9f7":"markdown","369e8bf9":"markdown","df4e0d04":"markdown","aa7d50c6":"markdown"},"source":{"39716113":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","76648d9a":"import numpy as np\nimport pandas as pd\nimport glob\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1985c9b1":"os.chdir(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\")\ndf_districts = pd.read_csv(\"districts_info.csv\")\n\ndf_products = pd.read_csv(\"products_info.csv\")\n","c57c3792":"list(df_products)","b6152eea":"df_products.dtypes","784163fe":"# Univariate analysis\nproduct_cols = [\"Sector(s)\", \"Primary Essential Function\", \"Provider\/Company Name\"]","b7632674":"# Number of unique features for each feature\nunique = [len(df_products.groupby(c)[c].unique()) \n    for c in product_cols]\n\nplt.figure(figsize=(15,6))\nbar = sns.barplot(x=unique, y=product_cols, palette=\"YlGn\")\nplt.bar_label(bar.containers[0], padding=5)\nplt.show()","256c6cdc":"fig, ax = plt.subplots(ncols=1, nrows=3)\n\nfor idx, c in enumerate(product_cols):\n    df_products.groupby(c)[c].count().sort_values(ascending=False)[:10].plot.barh(ax=ax[idx], figsize=(10, 30), color='Yellow')","713fa769":"df_districts.info()","cc679ea2":"# Univariate analysis\n\ndistrict_cols = [\"locale\", \"pct_black\/hispanic\", \"pct_free\/reduced\", \"county_connections_ratio\", \"pp_total_raw\"]\n\nfig, ax = plt.subplots(nrows=len(district_cols), ncols=1, figsize=(15, 25))\n\nfor i in range(len(district_cols)):\n    df = df_districts[district_cols[i]].value_counts().sort_values(ascending=True)\n    sns.barplot(x=df.values, y=df.index, palette=\"coolwarm\", ax=ax[i])\n    ax[i].set_title(district_cols[i])\n    \nfig.tight_layout(pad=3)","0fb4b0c9":"# transformation of pct_black\/hispanic and pct_free\/reduced\ndistcrict_copy=df_districts.copy()\ndf_districts.dropna(inplace=True)\ndf_districts['pct_black\/hispanic']=df_districts['pct_black\/hispanic'].apply(lambda x :float(x.split(',')[0][1:])+0.1)\n\ndf_districts['pct_free\/reduced']=df_districts['pct_free\/reduced'].apply(lambda x :float(x.split(',')[0][1:])+0.1)\ndf_districts=df_districts.reset_index()\ndf_districts.drop(labels='index',inplace=True,axis=1)\ndf_districts","0c14ac78":"# transformation of county_connections_ratio and pp_total_raw\ndf_districts['pp_total_raw']=df_districts['pp_total_raw'].apply(lambda x :float(x.split(',')[0][1:])+1000)\ndf_districts['county_connections_ratio']=df_districts['county_connections_ratio'].apply(lambda x: float(x.split(',')[0][1:])+0.1)\n\ndf_districts","21e7501c":"# Creating dataframe for correlation\ndf_corr = df_districts[['state', 'locale', 'pct_black\/hispanic', 'pct_free\/reduced', 'pp_total_raw']]\n# Visualization of the correlation table\ncorrelation = df_corr.corr()\nplt.figure(figsize=(14,7))\nsns.heatmap(correlation, linecolor='Yellow',linewidths=0.1, annot=True)\nplt.title('Correlation Matrix', pad=11, size=17)\nplt.xlabel('Digital Learning Data')\nplt.ylabel('Digital Learning Data')\nplt.show()","620ce3fb":"df_products.info()","c6a9e663":"# Null values for each column\ndf_products.isnull().sum()","bc0aa075":"df_products.dropna(subset=['Sector(s)'], inplace=True)","94f7ea8f":"df_products['Sector(s)'].isnull().sum()","482d0eb0":"df_products.dropna(subset=['Provider\/Company Name'], inplace=True)","29e27604":"df_products['Provider\/Company Name'].isnull().sum()","8c388243":"df_products.dropna(subset=['Primary Essential Function'], inplace=True)","f6d771da":"df_products['Primary Essential Function'].isnull().sum()","5dacb955":"  # List unique products and produce a list\nproducts = df_products['Product Name'].unique().tolist() ","f8f9aadf":"products","79f9113b":"# How many products being used by students\nprint(len(products))","195bddf7":"# drop column called URL because we will not need it\ndf_products.drop(['URL'], axis = 1, inplace = True)","aad7d653":"df_products","2d0e6621":"df_districts.head()","be74ce3b":"# checking missing values\n\nprint(\"percentage of missing values in DISTRICT DATA\")\nprint('\\n')\nprint(df_districts.isnull().sum()\/len(df_districts)*100)\nprint('\\n')\nprint(\"percentage of missing values in PRODUCT DATA\")\nprint('\\n')\nprint(df_products.isnull().sum()\/len(df_products)*100)\n","409ae8c7":"# dropping rows with missing values\ndf_districts.dropna(subset= ['state'], axis=0, inplace= True)\n\n# also dropping \"pp_total_raw\" column as it has ~50% null values\ndf_districts.drop(columns=[\"pp_total_raw\"], axis=1, inplace= True)","fc34602a":"path = r'\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'\nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[5].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \n\ndf_engagement = pd.concat(li, axis=0, ignore_index=True)","bb3350eb":"df_engagement.rename(columns={\"lp_id\": \"LP ID\"}, inplace=True)\nmerged=pd.merge(df_engagement, df_products, on= \"LP ID\")\nm=merged.groupby(\"Product Name\")[\"pct_access\"].mean().sort_values(ascending=False).head(10)\n\ndf_engagement.rename(columns={\"lp_id\": \"LP ID\"}, inplace=True)\nmerged=pd.merge(df_engagement, df_products, on= \"LP ID\")\nn=merged.groupby(\"Product Name\")[\"engagement_index\"].sum().sort_values(ascending=False).head(10)\n\n# plot\nplt.figure(figsize=(15,4))\n\nplt.subplot(121)\nplt.bar(m.index, m.values, color=[\"#e54f6e\",\"#282e54\",\"#ccc6ee\",\"#01786f\",\"#407294\",\"#bada55\",\"#fe948e\",\"#4ca3dd\"])\nplt.xlabel('Product Name')\nplt.xticks(rotation=90)\nplt.ylabel('Mean percentage of students')\nplt.title(\"With atleast one-page load event\")\n\nplt.subplot(122)\nplt.bar(n.index, n.values, color=[\"#0f5b9e\", \"#ad97ec\", \"#8bd6ba\", \"#bfacd6\", \"#cbe6e6\", \"#df7b6e\"])\nplt.xlabel('Product Name')\nplt.xticks(rotation=90)\nplt.ylabel('Page-load per 1000 students')\nplt.title(\"With number of page-load per 1000 students\")","f963ec27":"from plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\nimport plotly\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nclass_doc=merged[(merged[\"Product Name\"]==\"Google Classroom\")|(merged[\"Product Name\"]==\"Google Docs\")]\npct=class_doc.groupby([\"time\", \"Product Name\"])[\"pct_access\"].mean().to_frame().reset_index()\neng=class_doc.groupby([\"time\", \"Product Name\"])[\"engagement_index\"].sum().to_frame().reset_index()\n# plot\nfig = px.line(pct, x=\"time\", y=\"pct_access\", color='Product Name',title='Percentage of students with atleast one-page load event on a given day',\n              template=\"ggplot2\", width=800, height=400)\nfig.show()\n\nfig = px.line(eng, x=\"time\", y=\"engagement_index\",title='Sum of number of page-load per 1000 students on a given day', color='Product Name',\n              template=\"seaborn\", width=800, height=400)\nfig.show()","65c032d7":"df_engagement","a4dc7644":"df_products[\"Basic function\"]= df_products[\"Primary Essential Function\"].str.extract('(LC|CM|SDO)')\nfunction_dict ={'LC' : 'Learning & Curriculum', 'CM' : 'Classroom Management', 'SDO' : 'School & District Operations'}\ndf_products['Basic_function_full_form'] = df_products[\"Basic function\"].map(function_dict)\ndf_products[\"Sub Basic function\"]= df_products[\"Primary Essential Function\"].str.lstrip('(LCCMSDO')\ndf_products = df_products.replace('-', '', regex=True)\n\ncolors = ['#a47053', '#efca66', '#ecdab9']\nfig = go.Figure(data=[go.Pie(labels=df_products[\"Basic_function_full_form\"].value_counts().index, values=df_products[\"Basic_function_full_form\"].value_counts().values)])\nfig.update_traces(hoverinfo='label+value', textinfo='label+percent', textfont_size=12,\n                  marker=dict(colors=colors, line=dict(color='#cec3c8', width=2)))\nfig.show()","61e9b161":"df_engagement['district_id'].head()","771dda64":"df_engagement[\"time\"] = pd.to_datetime(df_engagement[\"time\"])\ndf_engagement['day'] = df_engagement['time'].dt.day_name()\ndf_engagement['month'] = df_engagement['time'].dt.month_name()","860abe8c":"df_engagement","a8891fbd":"df_engagement.describe()","8be3e8b0":"df = pd.merge(df_products,df_engagement,left_on = 'LP ID',right_on = 'LP ID')\ndf.head()","53cbd5ab":"df_districts['district_id'] = df_districts['district_id'].astype(str)\ndata = pd.merge(df,df_districts,left_on = 'district_id', right_on = 'district_id')","db871c83":"data.head()","6f95196f":"def plot_bar(data:pd.DataFrame,col1:str,col2:str):\n    df=data.sort_values(by=col1,ascending=False)\n    plt.figure(figsize=(12,6))\n    plt.subplot(1,2,1)\n    ax=sns.barplot(df.index,df[col1],palette='YlGn',dodge=False)\n    ax.set_xticklabels(df.index,rotation=80)\n    plt.title(f'Distribution of {col1}')\n    \n    plt.subplot(1,2,2)\n    ax=sns.barplot(df.index,df[col2],palette='YlOrBr',dodge=False)\n    ax.set_xticklabels(df.index,rotation=80)\n    plt.title(f'Distribution of {col2}')\n    plt.show()","d7072522":"months = data.groupby('month').agg({'pct_access':'mean','engagement_index':'mean'})\ndays = data.groupby('day').agg({'pct_access':'mean','engagement_index':'mean'})\nplot_bar(months,'pct_access','engagement_index')\nplot_bar(days,'pct_access','engagement_index')","998893ba":"print(\"Bellow are all missing values of engagement dataframe:\")\ndf_engagement.isnull().sum()","3a370e1b":"df_engagement.duplicated().any()","add94c49":"# Deleting rows of missing values in these columns\ndf_engagement.dropna(subset=[\"engagement_index\", \"LP ID\", \"pct_access\"], axis=0, inplace=True)\ndf_engagement.isnull().sum()","605be900":"# Changing data type from 'object' to 'int64'\ndf_engagement[\"district_id\"] = pd.to_numeric(df_engagement[\"district_id\"])","91818b7a":"\n#Distribution of Sector(s) \nproducts_sec=df_products['Sector(s)'].value_counts().reset_index()\n\nproducts_sec.columns = ['Sector(s)','percent']\n\nproducts_sec['percent'] \/= len(df_products)\nfig = px.pie(\n    products_sec, \n    names='Sector(s)', \n    values='percent',\n    color_discrete_sequence=px.colors.sequential.turbid,\n    title='Distribution of Sector(s) in the Product Information Data:', \n    width=700,\n    height=500\n)\nfig.show()","bc740961":"## Engagement data loading","2425962a":"# District info\n","48e22a6c":"# Product information data loading","bdc7f549":"The correlation indicates that 65% of those studying for free is black or hispanic(related to spanish speaking countries)\n\n","b7d7c9f7":"## Drop the missing values","369e8bf9":"columns - pct_black\/hispanic, pct_free\/reduced, county_connections_ratio and pp_total_raw\n\n]a,b[ = { x\u2208R : a<x<b}\n\n[a,b[ = {x\u2208R:a\u2264x<b}\n\nall values are in this format ex: [0.2, 0.4[ -> 0.2<= x < 0.4\n\n]a,b] = {x\u2208R:a<x\u2264b}","df4e0d04":"Most of the school districts are in suburb areas. Suburban living is disadvantageous because it takes longer to reach most destinations. Given the chance to attend virtually should be advantageous. I wonder if students from suburbans were the most accessing the learning platforms. \n\n","aa7d50c6":"We can see the highest peek in May because school is winding up for summer. Summer vacation or summer break is a school break in summer between school years and the break in the school academic year. Students are typically off between eight and nine weeks, but not staff, depending on the country and district. In the United States, summer break is approximately two and a half months, with students typically finishing the school year between late-May and late-June and starting the new year between early-August and early-September. \nThat's why there has been a decline in the engagement index and  the access percentage between may and september. "}}