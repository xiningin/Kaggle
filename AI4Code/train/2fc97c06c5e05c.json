{"cell_type":{"6a605ff5":"code","3680aa3d":"code","7a5f04e3":"code","a2115b0b":"code","b5c78263":"code","328470c2":"code","b357fe12":"code","b94557ba":"code","6da61f91":"code","3fbd2fe2":"code","96d7c01e":"code","e868df1a":"code","39274936":"code","b6918a52":"code","43351fc0":"code","9118bcaf":"code","98922a36":"code","90c902a3":"code","a95b9992":"code","46fb0361":"code","1cb6ca1d":"code","b354f897":"code","76dd6330":"code","69a479bd":"code","e447dfc9":"code","54e9d02d":"code","55b77593":"code","318fb231":"markdown","58328cbf":"markdown","d429d0d7":"markdown","31547d1a":"markdown","b20d8ae2":"markdown","4ee8892b":"markdown","a7d40cc4":"markdown","10d7debc":"markdown","1d165850":"markdown","9cc1d564":"markdown","b43b5c62":"markdown","459884e6":"markdown","97691263":"markdown","33cb4fa7":"markdown","f49ecfa8":"markdown","e3a4eadd":"markdown"},"source":{"6a605ff5":"# Import libraries\n#------------------\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Market-cap data & List of S&P 500 companies data from wikipedia","3680aa3d":"df = pd.read_csv(\"..\/input\/sp_from_wiki.csv\")\ndf.head()","7a5f04e3":"# Number of Columns and Rows for this data-set \ndf.shape","a2115b0b":"# Information about a DataFrame including the index dtype and column dtypes, non-null values and memory usage.\ndf.info()","b5c78263":"# Let's see The column labels of the DataFrame\ndf.columns","328470c2":"# Drop some columns we dont need for this EDA\ndf.drop(['SEC filings', 'CIK', 'Date first added'], axis=1, inplace=True)\n# Detect missing values for an array-like object\ndf.isnull().sum()","b357fe12":"df.columns=(['SecurityName','Symbol', 'Sector', 'Sub_Industry',\n       'Location', 'Founded'])\ndf.head()","b94557ba":"# Delete duplicates\nlist=['FOX', 'UA', 'GOOGL', 'NWS', 'DISCK']\ndf = df[~df['Symbol'].isin (list)]\nlen(df)","6da61f91":"df.Location.head(10)","3fbd2fe2":"# Where most of the companies located\ndf.Location.str.split(',').str[-1].value_counts().head(10)","96d7c01e":"# Normalized for percentage and show where most of the companies from.\n(df.Location.str.split(',').str[-1].value_counts(normalize=True).head(60)*100).round(2).plot(kind='bar',\ntitle='Location of S&P500 Companies',figsize=(24,8),fontsize=18);\nplt.ylabel(\"Number of companies\");","e868df1a":"# Do you remember our Founded columns with all those Nan values, lets see out of curiosity, Who is the oldest company    \ndf.sort_values('Founded')[['SecurityName','Founded']].head(10)","39274936":"# Normalized as a precentage \n(df.Sector.value_counts(normalize=True)*100).round(2)","b6918a52":"# and visualize\ndf.Sector.value_counts().plot(kind='pie',title='S&P500 Sectors',autopct='%.2f%%',figsize=(14,14),shadow=True,fontsize=15,\n                             explode=[0.05 for x in df.Sector.value_counts()])\nplt.axis('off');","43351fc0":"# Group by sub industry and show the first 10 rows\ndf.groupby(['Sub_Industry']).size().sort_values(ascending=False).head(10)","9118bcaf":"# Build a Group by index=Sector and columns= Sub_industry and counting how many companies in each sub_category & category\nsub_sector= df.groupby(['Sector','Sub_Industry'])['Symbol'].count().unstack(level = -1,fill_value=0)\nsub_sector","98922a36":"for i, x in enumerate(sub_sector.iterrows()):\n    plt.figure()\n    sub_sector.iloc[i,:].plot.pie(shadow=True,fontsize=12, figsize=(14,14),startangle=90)\n    plt.title(sub_sector.index[i], fontsize = 20)\n    plt.tight_layout()\n    plt.axis('off');","90c902a3":"MrktCap_df = pd.read_csv(\"..\/input\/MrktCap_df.csv\")\nprint(MrktCap_df.shape)\nMrktCap_df.head()","a95b9992":"# Merge by 'Symbol'\ncombo = pd.merge(df, MrktCap_df, on='Symbol')\ncombo.head()","46fb0361":"combo['MktCap'] = pd.to_numeric(combo['MktCap'].str[:-1])\ncombo.head()","1cb6ca1d":"combo.MktCap.describe().round(2)","b354f897":"plt.style.use('ggplot')\ncombo.MktCap.plot(kind='hist', bins=50,xticks=range(0,1000,50), figsize=(20,7), xlim=0, \nfontsize=15, color='red',edgecolor='black',lw=1.2, title='Market Cap Histogram',density=True);","76dd6330":"combo.groupby('Sector')['MktCap'].sum().sort_values( ascending=False).plot.pie(autopct='%.2f%%',figsize=(12,12),\nshadow=True,fontsize=15, title=(\"SP500 Sector segmentation by Market Cap\"));\nplt.axis('off');","69a479bd":"cc = combo.iloc[combo.groupby('Sector')['MktCap'].idxmax()].sort_values(by='MktCap',ascending=False)\ncc[['Symbol' ,'MktCap']].plot(y='MktCap', kind='pie', labels=cc['SecurityName'], legend=None, figsize=(20,20), radius=2, fontsize=15)\nplt.tight_layout();plt.axis('off');cc","e447dfc9":"combo['Percent'] = round((combo.MktCap \/ combo.MktCap.sum())*100,2)\ncn = combo.nlargest(5,'Percent')\ncn.set_index(\"SecurityName\", inplace=True)\ncn[['Symbol','Percent']].plot(kind='bar', figsize=(15,5), rot=0, fontsize=15, title=('S&P 500 \u2013 Weightings of the Largest Components (%)'))\nplt.ylabel('Index Percent')\ncn","54e9d02d":"table = combo.groupby('Sector')['MktCap'].sum().round(-2).sort_values(ascending=False)\nplt.style.use('seaborn-dark-palette')\ntable.plot(kind='barh',figsize=(20,8),title='Total Market Cap by Sector (billions)', fontsize=20);\ntable","55b77593":"combo.groupby(df.Location.str.split(',').str[-1])['MktCap'].sum().sort_values(ascending=False).nlargest(15).plot.pie(autopct='%.2f%%',figsize=(15,15), fontsize=15,\n                                                                                                  explode=[0.05 for x in range(15)], shadow=True, pctdistance=0.85);\nplt.title('Market Cap by Locations S&P500 Companies', fontsize=25);\nplt.ylabel(\"\");\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle);\nplt.tight_layout();","318fb231":"## <font color=#1A5276>Largest Components (%)<\/font>","58328cbf":"## <font color=#1A5276>Now, we will look at the Sub Industries<\/font>","d429d0d7":"## <font color=NAVY>Now, lets inspect the Location column:<\/font>","31547d1a":"# <font color=#1A5276>simple Market Cap statistics<\/font>","b20d8ae2":"## <font color=#1A5276>Now, we are going to read the second dataset (market capitalization), and merge him with our df dataset<\/font><br>","4ee8892b":"## <font color=#1A5276>Now we have 'MktCap' column in our dataset, but we have to get rid from the Billions sign (example:\"126.26B\"),<br>and change the data type of this column to numeric<\/font> ","a7d40cc4":"# <font color=NAVY>Exploratory data analysis for S&P 500 Components<\/font>","10d7debc":"## <font color=blue>The purpose of this notebook is to show how to take a simple Wikipedia table and preform an EDA<\/font>","1d165850":"## <font color=#1A5276>Largest company in each sector<\/font>","9cc1d564":"* <font color=red>**First Data-set was taking from Wikipedia tabel https:\/\/en.wikipedia.org\/wiki\/List_of_S%26P_500_companies**\n* **Second Data-set (Symbol\/ Market cap) was scraped from a financial site.**","b43b5c62":"## <font color=#1A5276>And now for each Sector we will show a pie-chart of the sub categories with a proportional slicing by the number of companies<\/font>","459884e6":"# <font color=#1A5276>Sector analysis<\/font>","97691263":"## <font color=#1A5276>SP500 Sector segmentation by Market Cap<\/font>","33cb4fa7":"## <font color=#1A5276>Total Market Cap by Sector<\/font>","f49ecfa8":"## <font color=NAVY>Although the index is called the S&P \"500\", the index contains 505 stocks because it includes two share classes of stock out of five companies<\/font>","e3a4eadd":"## <font color=NAVY>As we can see only the Founded column has Nan values. 333\/555 witch is pretty high, usually I will drop this column<br>but i will keep him for now and see if it can bring any value. Now lets change some of the columns names<\/font>"}}