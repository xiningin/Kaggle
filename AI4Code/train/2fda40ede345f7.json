{"cell_type":{"3b9299a7":"code","9fcf18f6":"code","1758129e":"code","38f70863":"code","9eedf8b0":"code","f7f7f992":"code","789a5b7e":"code","ff42d08e":"code","83ade60c":"code","10ff14b6":"code","6cffc7f7":"code","e496b3d8":"code","e0c97ab6":"code","cc010146":"code","4bc0b3ce":"code","9bf3acff":"code","44e4ee50":"code","e9ee6634":"code","04bb802b":"code","2a640add":"code","8ecec7cf":"code","2e3fd4ad":"code","e100daa7":"code","8767cd14":"code","600bb49f":"code","d8e236f2":"code","09cb5180":"code","c5de2e58":"code","550ceecf":"code","8f1de602":"code","4da4dc1c":"code","b78fd230":"code","c3c4c9c7":"code","c39dcc5c":"code","b0115873":"code","72e97f62":"code","7a0bfd7e":"code","d5bca61c":"code","25950380":"code","99856aa7":"code","058f638b":"code","28024b50":"code","19c8a1e9":"code","a55da834":"code","995b6071":"code","35532c10":"code","703cfcd1":"code","888f5b7f":"code","a07333da":"code","1cf99905":"code","f8c7ca23":"code","de712f1f":"code","dc138fc1":"code","2c898cae":"code","06ef6fdd":"code","eb8824f2":"code","3af76908":"code","cde7f2cd":"code","99693b84":"markdown","0f84c18a":"markdown","7ea27158":"markdown","da976d8b":"markdown","0b042edc":"markdown","17e719e4":"markdown","b98b6bab":"markdown","746b508b":"markdown","609c1852":"markdown","81afda07":"markdown","8bfc43dc":"markdown","b7aec8eb":"markdown","ebaa0c1e":"markdown","d04f142a":"markdown","30286461":"markdown","1b669caa":"markdown","ad79fa0d":"markdown","9ea5a169":"markdown","740c30f9":"markdown","9752758c":"markdown","342779ee":"markdown","e9528529":"markdown","50a8145f":"markdown","e2f6c144":"markdown","bdd5758a":"markdown","364e6a2c":"markdown","d96d1437":"markdown","564822c8":"markdown","c98a5d96":"markdown","63cc27cf":"markdown","82158882":"markdown","f56a7069":"markdown","0977d6ac":"markdown","49f71cbf":"markdown","bf92a8cc":"markdown","556fb0ab":"markdown","27a6435c":"markdown","a53b9a9d":"markdown","2eed23ce":"markdown"},"source":{"3b9299a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfrom wordcloud import WordCloud\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.metrics import accuracy_score, plot_confusion_matrix\nfrom datetime import datetime\nimport warnings\n\nwarnings.filterwarnings(\"ignore\", category = FutureWarning)\n\n\nsns.set(style=\"darkgrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9fcf18f6":"data = pd.read_csv('\/kaggle\/input\/engineering-placements-prediction\/collegePlace.csv')\n\ndata.head()","1758129e":"print(f\"Shape of Dataframe is: {data.shape}\")","38f70863":"print('Datatype in Each Column\\n')\npd.DataFrame(data.dtypes, columns=['Datatype']).rename_axis(\"Column Name\")","9eedf8b0":"data.describe().T.style.bar(subset=['mean'], color='#205ff2').background_gradient(subset=['std'], cmap='Reds').background_gradient(subset=['50%'], cmap='coolwarm')","f7f7f992":"pd.DataFrame(data.isnull().sum(), columns=[\"Null Values\"]).rename_axis(\"Column Name\")","789a5b7e":"fig = px.histogram(data, 'Age',\n                   title=\"<b>Average Age of Student<\/b>\")\n\nfig.add_vline(x=data['Age'].mean(), line_width=2, line_dash=\"dash\", line_color=\"red\")\n\nfig.show()","ff42d08e":"fig = px.histogram(data, 'Age',             \n                   color = \"Gender\",\n                   marginal = 'violin',\n                   title = \"<b>Average Age Gender wise<\/b>\")\n\nfig.update_traces(marker = {\"opacity\": 0.7})\n\nfig.add_vline(x = data['Age'].mean(),\n              line_width = 2,\n              line_dash = \"dash\",\n              line_color = \"black\")\n\nfig.show()","83ade60c":"pd.DataFrame(data['Gender'].value_counts()).rename({\"Gender\":\"Counts\"}, axis = 1).rename_axis(\"Gender\")","10ff14b6":"px.histogram(data, x = \"Gender\", title = \"<b>Total Male and Female<\/b>\", color = \"Gender\")","6cffc7f7":"fig = px.pie(data, names = \"Gender\",\n             title = \"<b>Counts in Gender<\/b>\",\n             hole = 0.5, template = \"plotly_dark\")\n\nfig.update_traces(textposition='inside',\n                  textinfo='percent+label',\n                  marker=dict(line=dict(color='#000000', width = 1.5)))\n\n\nfig.show()","e496b3d8":"male = data[data['Gender'] == \"Male\"]\nfemale = data[data['Gender'] == \"Female\"]","e0c97ab6":"total_male = male.shape[0]\ntotal_female = female.shape[0]","cc010146":"total_male_pass = male[male['PlacedOrNot'] == 1].shape[0]\ntotal_female_pass = female[female['PlacedOrNot'] == 1].shape[0]","4bc0b3ce":"pass_male_percentage = np.round((total_male_pass * 100) \/ total_male,2)\npass_female_percentage = np.round((total_female_pass * 100) \/ total_female,2)","9bf3acff":"details = {\"Total Male\": [total_male],\n             \"Total Female\": [total_female],\n             \"Total male pass\" : [total_male_pass],\n             \"Total female pass\" : [total_female_pass],\n             \"% of Passed Male\" : [pass_male_percentage],\n             \"% of Passed Female\" : [pass_female_percentage]}","44e4ee50":"details","e9ee6634":"gender_wise = pd.DataFrame(details, index=[\"Detail\"])\ngender_wise.T","04bb802b":"fig = px.histogram(data_frame = data,\n             x = \"Stream\",\n             color=\"PlacedOrNot\", title=\"<b>Counts of Stream<\/b>\",\n             pattern_shape_sequence=['x'],\n             template='plotly_dark')\n\nfig.update_layout(title_x = 0.5,\n                  title_font = dict(size = 20),\n                  uniformtext_minsize = 15)\n\n\nfig.show()","2a640add":"cgpa_above_avg = data[data['CGPA'] > data['CGPA'].mean()]\n\ncgpa_above_avg","8ecec7cf":"fig = px.histogram(data_frame = cgpa_above_avg,\n                   x = 'CGPA',\n                   color='PlacedOrNot',\n                   title = \"<b>Above Average CGPA Vs Placement<\/b>\",\n                   template='plotly')\n\nfig.update_layout(bargap=0.2)\n\nfig.show()","2e3fd4ad":"cgpa_below_avg = data[data['CGPA'] < data['CGPA'].mean()]\n\ncgpa_below_avg","e100daa7":"fig = px.histogram(data_frame = cgpa_below_avg,\n                   x = 'CGPA',\n                   color='PlacedOrNot',\n                   title = \"<b>Below Average CGPA Vs Placement<\/b>\",\n                   template='plotly_dark', barmode='group')\n\nfig.update_layout(bargap=0.2)\n\nfig.show()","8767cd14":"stream_wise = data.groupby('Stream').agg({'Age':'mean',\n                                          'Internships' : 'sum',                            \n                                           \"CGPA\":'mean',\n                                           'PlacedOrNot':'sum'})\n\nstream_wise.style.highlight_max()","600bb49f":"px.bar(data_frame=stream_wise, barmode='group',\n       title = \"<b>Stream wise Analyzing<\/b>\",template=\"plotly_dark\")","d8e236f2":"no_internship = data[data['Internships'] == 0]\n\nno_internship","09cb5180":"fig = px.histogram(data_frame = no_internship,\n                   x = \"PlacedOrNot\",\n                   color=\"PlacedOrNot\",\n                   title = \"<b>No Internship Experience Vs Placement<\/b>\",\n                   template = 'plotly_dark')\n\nfig.update_layout(bargap = 0.2)\n\nfig.show()","c5de2e58":"fig = px.pie(no_internship, names = \"PlacedOrNot\",\n             hole = 0.5)\n\nfig.update_traces(textposition='inside',\n                  textinfo='percent+label',\n                  marker=dict(line=dict(color='#000000', width = 1.5)))\n\n\nfig.show()","550ceecf":"def plot_word_cloud(df, col_name):    \n    text = ' '.join(df[col_name].str.lower())\n\n    wordcloud = WordCloud(width = 2000, height = 900,\n                          background_color ='black',\n                          collocations=False,\n                          max_words=500,\n                          min_font_size = 15).generate(text)\n\n    plt.figure(figsize=(12, 8), facecolor = 'k', edgecolor = 'k' )\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.tight_layout(pad = 0) \n    plt.show()","8f1de602":"plot_word_cloud(data, \"Stream\")","4da4dc1c":"dummy_gender = pd.get_dummies(data['Gender'])\ndummy_stream = pd.get_dummies(data['Stream'])","b78fd230":"data = pd.concat([data.drop([\"Gender\", \"Stream\"], axis = 1), dummy_gender, dummy_stream], axis = 1)\n\ndata","c3c4c9c7":"data = data[['Age', 'Male', 'Female',\n             'Electronics And Communication',\n             'Computer Science', 'Information Technology',\n             'Mechanical', 'Electrical', \"Civil\",\n             \"Internships\",\"CGPA\",'Hostel',\n             'HistoryOfBacklogs', 'PlacedOrNot']]\n\ndata","c39dcc5c":"scaler = StandardScaler()\n\nscaler.fit(data.drop('PlacedOrNot',axis=1))\n\nscaled_features = scaler.transform(data.drop('PlacedOrNot',axis=1))","b0115873":"scaled_features = pd.DataFrame(scaled_features, columns = data.columns[:-1])\nscaled_features.head()","72e97f62":"corrmat = data.corr()\ntop_corr_features = corrmat.index\n\nplt.figure(figsize=(20,15))\n\n#plot heat map\ng = sns.heatmap(data[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")","7a0bfd7e":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(scaled_features,\n                                                    data['PlacedOrNot'],\n                                                    test_size = 0.25,\n                                                    random_state = 0)\n","d5bca61c":"print(f\"Shape of X_train is: {X_train.shape}\")\nprint(f\"Shape of X_test is: {X_test.shape}\\n\")\n\nprint(f\"Shape of y_train is: {y_train.shape}\")\nprint(f\"Shape of y_test is: {y_test.shape}\")","25950380":"def models_score(models, X_train, X_test, y_train, y_test):    \n    \n    scores = {}\n    \n    for name, model in models.items():\n        model.fit(X_train, y_train)\n        scores[name] = model.score(X_test,y_test)\n\n    model_scores = pd.DataFrame(scores, index=['Score']).transpose()\n    model_scores = model_scores.sort_values('Score')\n        \n    return model_scores","99856aa7":"models = {\"DecisionTree\":DecisionTreeClassifier(),\n         \"RandomForest\":RandomForestClassifier(),\n         \"XgBoost\": XGBClassifier(),\n         \"KNeighborsClassifier\":KNeighborsClassifier()}","058f638b":"model_scores = models_score(models, X_train, X_test, y_train, y_test)","28024b50":"model_scores.style.highlight_max()","19c8a1e9":"model_scores = model_scores.reset_index().rename({\"index\":\"Algorithms\"}, axis = 1)","a55da834":"model_scores.style.bar(color = '#47b7ed')","995b6071":"fig = px.bar(data_frame = model_scores,\n             x = \"Algorithms\",\n             y = \"Score\",\n             color = \"Algorithms\",\n             title = \"<b>Models Score<\/b>\",\n             template = 'plotly_dark')\n\n\nfig.update_layout(bargap = 0.2,\n                  title_x = 0.5,\n                  title_font = dict(size = 20),\n                  uniformtext_minsize = 15)\n\nfig.show()","35532c10":"label = model_scores['Algorithms']\nvalue = model_scores['Score']\n\nfig = go.Figure(data = [go.Pie(labels = label, values = value, rotation = 90)])\n\nfig.update_traces(textposition = 'inside',\n                  textinfo = 'percent+label',\n                  marker = dict(line = dict(color='#000000', width = 1.5)))\n\nfig.update_layout(title = \"<b>Models Score<\/b>\",\n                  template = 'plotly_dark')\n\nfig.show()","703cfcd1":"## Hyper Parameter Optimization\n\nparams={\n \"learning_rate\"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15],\n \"min_child_weight\" : [ 1, 3, 5, 7 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ]\n    \n}","888f5b7f":"def timer(start_time=None):\n    if not start_time:\n        start_time = datetime.now()\n        return start_time\n    elif start_time:\n        thour, temp_sec = divmod((datetime.now() - start_time).total_seconds(), 3600)\n        tmin, tsec = divmod(temp_sec, 60)\n        print(f'\\nTime taken: {thour} hours {tmin} minutes and {round(tsec, 2)} seconds.')","a07333da":"# For now I use xgboost algo\nxgb_classifier = XGBClassifier()","1cf99905":"random_search = RandomizedSearchCV(xgb_classifier,\n                                   param_distributions=params,\n                                   n_iter=5,\n                                   scoring='roc_auc',\n                                   n_jobs=-1,\n                                   cv=5, verbose=3)","f8c7ca23":"start_time = timer(None) \n\nrandom_search.fit(X_train, y_train)\n\ntimer(start_time)","de712f1f":"xgb_best_params = random_search.best_estimator_","dc138fc1":"xgb_best_params","2c898cae":"random_search.best_params_","06ef6fdd":"classifier = xgb_best_params","eb8824f2":"classifier.fit(X_train, y_train, eval_metric='logloss')","3af76908":"pred = classifier.predict(X_test)\n\nprint(f\"Accuracy: {accuracy_score(y_test, pred)}\")","cde7f2cd":"plot_confusion_matrix(classifier,\n                      X_test, y_test,\n                      cmap = plt.cm.Blues,\n                      display_labels = ['Not Placed', 'Placed'])\nplt.grid(False)\nplt.show();","99693b84":"![Right_Candidate](http:\/\/www.prevuehr.com\/drive\/uploads\/2016\/11\/AdobeStock_95250209-Converted-1024x695.png?_t=1484780827)","0f84c18a":"<a id=\"6.2\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#FFF9ED;font-size:130%;text-align:center;border-radius:10px 10px;\">I Hope my Kernel will be helpful for you. If you like my work, Don't forget to Upvote Thank You! \ud83d\ude42<\/p>\n\n","7ea27158":"In this Notebook, I will try to do detailed Exploratory data analysis(EDA) on Student Placement Dataset with Visualization. Extract different Insights from data that will be helpful for Fresh candidates. At the end I will Create Machine Learning Model that predicts whether a particular candidate got placement or not based on some feature.\n\n**I Hope you will like my work!**","da976d8b":"**From Computer Science degree most of the student placed...**","0b042edc":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:170%;text-align:center;border-radius:20px 80px;\">\ud83d\udccb TABLE OF CONTENTS<\/p>   ","17e719e4":"<a id=\"12\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2728 Checking for best Estimator and best Hyperparameters<\/p>\n\n\n\n","b98b6bab":"<a id=\"11\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udcfb Hyperparameter tuning using RandomizedSearchCV<\/p>\n\n\n\n","746b508b":"## **Rearrange columns**","609c1852":"**From above above, if some student has CGPA below average it will reduce his\/her chances of placement**\n","81afda07":"<a id=\"5.6\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Analyze important features stream wise<\/p>\n\n\n","8bfc43dc":"\n<a id=\"7\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83c\udfb0 Visualize coorelation of independent feature with dependent<\/p>\n\n\n","b7aec8eb":"<a id=\"6.2\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Scaling features<\/p>\n\n\n","ebaa0c1e":"\n<a id=\"4\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udd0e Checking for NaN values<\/p>\n","d04f142a":"<a id=\"6.1\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f One-Hot Encoding<\/p>\n\n\n","30286461":"<a id=\"14\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">(\u2310\u25a0_\u25a0) Ploting confusion matrix<\/p>\n\n\n\n\n","1b669caa":"**Above graph represents that all those students whose CGPA is above average has successfully pass placement test, So we can say that if a person has higher CGPA it will increase his\/her chance of placement.**\n","ad79fa0d":"<a id=\"5.2\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Total Male & Female<\/p>\n","9ea5a169":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2699\ufe0f Preprocessing data for Machine Learning<\/p>\n\n\n","740c30f9":"<a id=\"5.4\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Higher CGPA Vs Placement<\/p>\n\n\n","9752758c":"<a id=\"5\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udd25 EDA & Visualization<\/p>\n","342779ee":"\n<a id=\"13\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83e\udd13 Training model with Best Hyperparameters<\/p>\n\n\n\n","e9528529":"<a id=\"5.5\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Lower CGPA Vs Placement<\/p>\n\n\n","50a8145f":"<a id=\"5.8\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Top words in Stream<\/p>\n\n\n","e2f6c144":"<a id=\"1\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udce5 Importing libraries<\/p>\n","bdd5758a":"<a id=\"3\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udcc8 Statistical information of Dataframe<\/p>\n","364e6a2c":"\n<a id=\"10\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udcca Visualize Model Score<\/p>\n\n\n","d96d1437":"**Internship and CGPA is highly coorelated with dependent feature i.e PlacedOrNot**","564822c8":"## **Candidates whose CGPA is below average**","c98a5d96":"### **Fortunately data has no missing value**","63cc27cf":"<a id=\"5.7\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Effect of No Internship Experience on Placement<\/p>\n\n\n","82158882":"## **Displaying all those records whose CGPA is above average**","f56a7069":"\n<a id=\"9\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83e\udd16 Create & Train Model<\/p>\n\n\n","0977d6ac":"\n\n\n<a id=\"8\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83e\uddfe Train test split<\/p>\n\n\n","49f71cbf":"**Majority of candidate are Computer Science Student and they are also large in number who got placement as compare to other Streams**","bf92a8cc":"    \n* [1. Importing Libraries](#1)\n    \n* [2. Meta information of dataframe](#2)\n    \n* [3. Statistical information](#3)  \n    \n* [4. NaN values](#4)  \n    \n* [5. EDA & Visualization](#5)\n    * [5.1. Mean Age of Students](#5.1)\n    \n    * [5.2. Total Male & Female](#5.2)\n    \n    * [5.3. Total Male & Female Pass Placement Exam](#5.3)\n    \n    * [5.4. Higher CGPA VS Placement](#5.4)\n    \n    * [5.5. Lower CGPA VS Placement](#5.5)\n    \n    * [5.6. Analyze Stream](#5.6)\n    \n    * [5.7. No Internship Experience VS Placement](#5.7)\n    \n    * [5.8. Top words in Stream](#5.8)\n\n* [6. Preprocess data for Machine Learning](#6)\n    * [6.1. One-Hot Encoding](#6.1)\n    \n    * [6.2. Scaling Features](#6.2)\n\n* [7. Visualize Coorelation](#7)\n \n* [8. Train Test Split](#8)\n\n* [9. Create & Train Model](#9)\n\n* [10. Visualize Model Score](#10)\n\n* [11. Hyperparameter tuning using RandomizedSearchCV](#11)\n\n* [12. Best estimator and best hyperparameters](#12)\n\n* [13. Training model with best hyperparameters](#13)\n\n* [14. Plot Confusion Matrix](#14)\n\n\n\n\n\n\n\n\n\n    ","556fb0ab":"<a id=\"5.1\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Mean Age of Student<\/p>\n","27a6435c":"\n<a id=\"5.3\"><\/a>\n# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2714\ufe0f Total Male and Female Pass Placement<\/p>\n\n\n","a53b9a9d":"<a id=\"2\"><\/a>\n# <p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udcdd Meta information of Dataframe<\/p>\n","2eed23ce":"**So from above graph, if person don't have any Internship Experience, it will not much effect on his\/her placement. Majority of the student who don't have any Internship Experience has passed the placement exam**"}}