{"cell_type":{"b9c8f89b":"code","2cf8ed5a":"code","e0197173":"code","fc04ecf9":"code","962aa186":"code","f6437156":"code","7b63aca4":"code","289ba236":"code","f7186b5e":"code","d0f22809":"code","fe332645":"code","de324a04":"code","ac1fd57d":"code","c3b6cc7c":"markdown","08d8b91b":"markdown","d5fd0d9e":"markdown","d12fbfba":"markdown","07523ecd":"markdown"},"source":{"b9c8f89b":"import pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nimport plotly.graph_objects as go\nimport plotly.express as px","2cf8ed5a":"df_train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')","e0197173":"df_train.head()","fc04ecf9":"df_train.shape","962aa186":"df_train['label'].value_counts().sort_index()","f6437156":"fig = px.bar(df_train['label'].value_counts().sort_index(), \n             color=df_train['label'].value_counts().index,\n            labels={\n                     \"value\": \"count\",\n                     \"index\": \"label\",\n                 }\n            )\nfig.show()","7b63aca4":"df_test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ndf_test.head()","289ba236":"df_test.shape","f7186b5e":"df_train_reshaped = df_train.iloc[:, 1:785].values.reshape(42000,28,28)\ndf_train_reshaped.shape","d0f22809":"import matplotlib.pyplot as plt\n\nfig, axes = plt.subplots(10, 10, figsize=(16, 16),\n                        subplot_kw={'xticks':[], 'yticks':[]},\n                        gridspec_kw=dict(hspace=0.1, wspace=0.1))\n\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(df_train_reshaped[i], cmap='binary',\n            interpolation='nearest'),\n    ax.text(0.8, 0.8, df_train['label'].to_numpy()[i],\n        transform=ax.transAxes, color='green', fontsize=16)","fe332645":"Xtrain, Xtest, ytrain, ytest = train_test_split(df_train, df_train['label'],\n                                                random_state=0)\nmodel = RandomForestClassifier(n_estimators=1000)\nmodel.fit(Xtrain, ytrain)\nypred = model.predict(Xtest)","de324a04":"from sklearn import metrics\nprint(metrics.classification_report(ypred, ytest))","ac1fd57d":"import seaborn as sns\nsns.set(rc={'figure.figsize':(15,12)})\n\nmat = confusion_matrix(ytest, ypred)\nsns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False)\nplt.xlabel('true label')\nplt.ylabel('predicted label');","c3b6cc7c":"<h4>The classification report for this classifier:<\/h4>","08d8b91b":"<h3>Loading and visualizing the digits data<\/h3>","d5fd0d9e":"<h4>Plot the confusion matrix:<\/h4>","d12fbfba":"<h3>Counting unique labels in the dataframe<\/h3>","07523ecd":"<h3>Dataframe unique labels visualization<\/h3>"}}