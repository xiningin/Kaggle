{"cell_type":{"4e72bd83":"code","9a8e607d":"code","838514a6":"code","cdca4c1d":"code","10ba5d9d":"code","79707b03":"code","9a91a417":"code","89ddf90c":"code","91ee8464":"code","75d1a984":"code","3bf2a44c":"code","91b23318":"markdown","33adcdfc":"markdown","747ec1fa":"markdown","babc270f":"markdown","05a7c87c":"markdown","02a1951c":"markdown"},"source":{"4e72bd83":"import re\nimport pandas as pd\nimport numpy as np\nfrom iso3166 import countries\nimport matplotlib.pyplot as plt\nfrom gensim.parsing.preprocessing import strip_numeric, strip_non_alphanum\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9a8e607d":"# The data used in this can be found on https:\/\/www.kaggle.com\/andresionek\/data-jobs-listings-glassdoor\n\nglass = pd.read_csv(\"\/kaggle\/input\/data-jobs-listings-glassdoor\/glassdoor.csv\")\ncountry_codes = pd.read_csv(\"\/kaggle\/input\/data-jobs-listings-glassdoor\/country_names_2_digit_codes.csv\", index_col=1)","838514a6":"print(glass.shape)\nglass.head()","cdca4c1d":"print(glass.columns.values)","10ba5d9d":"print(list(country_codes.index))","79707b03":"country_list = glass[\"map.country\"].dropna()\ncountry_list.unique()","9a91a417":"clist = []\nfor item in country_list:\n    temp = item.split(\" - \")\n    temp = temp[0].split(\" [\")\n    t = re.sub(r\"[^a-zA-Z]+\",' ',temp[0])\n    t = t.strip()\n    clist.append(t)\n\npd.Series(clist).unique()","89ddf90c":"country_list_new = pd.Series([country_codes.loc[x,\"Name\"] if x in country_codes.index else x for x in clist])\ncountry_list_new.dropna()\nprint(country_list_new.unique())","91ee8464":"def rename(country):\n    try:\n        return countries.get(country).name\n    except:\n        return (np.nan)\n\ncountry_list_new = pd.Series(clist)\nrows_before = country_list_new.shape[0]\ncountry_list_new = country_list_new.apply(rename)\ncountry_list_new = country_list_new.dropna()\nrows_after = country_list_new.shape[0]\nprint(\"Samples after: {}\".format(rows_before))\nprint(\"Samples earlier: {}\".format(rows_after))\nprint(\"Lost {} samples after converting which is {:.2f}% of the data\\n\".format((rows_before-rows_after),\n                                                                    ((rows_before-rows_after)\/rows_before)*100))\n\nprint(country_list_new.unique())","75d1a984":"glass_country = pd.DataFrame(data = [country_list_new.value_counts().index, country_list_new.value_counts().values], index=[\"country\",\"count\"]).T\nglass_country[\"count\"] = pd.to_numeric(glass_country[\"count\"])\nglass_country.set_index(\"country\", drop=True, inplace=True)\n\ntop_x = 20\nglass_country_top = glass_country.head(top_x)\nglass_country_top","3bf2a44c":"#plt.figsize=(12,6)\nplt.bar(glass_country_top.index,glass_country_top[\"count\"])\nplt.xticks(rotation=90)\nplt.gcf().set_size_inches(10,6)\nplt.show()","91b23318":"### Unique values of the countries from raw data","33adcdfc":"### Initial country name conversion using country_codes given along with the glassdoor data","747ec1fa":"### Cleaning country names as much as possible ","babc270f":"### Owner's original code using iso3166 countries to convert remaining country codes","05a7c87c":"# About\nThis notebook is a fork of \"Bubble map using plotly express\". I have added few more methods to clean up the countries name resulting in lesser lost sample values.","02a1951c":"### Country codes in the country_code csv given with the glassdoor data"}}