{"cell_type":{"493e8174":"code","0bb935c8":"code","0dd1c472":"code","f2a8071e":"code","964c34b8":"code","1ece0e6d":"code","7a80b545":"code","c9cc7849":"code","51bdb205":"code","2208e61e":"code","1cc9c178":"code","5898e28d":"code","e48f539e":"code","a481a316":"code","f3454aa7":"code","df251e78":"code","e7c01e91":"code","bf0e9ec9":"code","f24a9151":"code","3bdbbe4c":"code","3a163bba":"code","f98b4df7":"code","3f9f0114":"markdown","c95dc287":"markdown","037da3ff":"markdown","0118b459":"markdown","d944561a":"markdown","ebed4ceb":"markdown","71d6acc1":"markdown","d9552d55":"markdown"},"source":{"493e8174":"import pandas as pd","0bb935c8":"df = pd.read_csv('..\/input\/persona-data\/persona.csv')","0dd1c472":"df.head()","f2a8071e":"df.info()","964c34b8":"def get_col_summary(df, col):\n    print(f\"Total count of unique values: {df[col].nunique()}\")\n    print(f\"Total value counts for each value\\n{df[col].value_counts()}\")","1ece0e6d":"get_col_summary(df,'SOURCE') # How many unique SOURCE and their unique transaction counts","7a80b545":"get_col_summary(df,'PRICE') # How many unique PRICE and how many transaction for each unique PRICE","c9cc7849":"get_col_summary(df,'COUNTRY') # How many unique COUNTRY and their unique transaction counts","51bdb205":"df.groupby('COUNTRY').agg({'PRICE':[('mean per country','mean')]})\n# mean price of total transactions for each country","2208e61e":"# mean profit for each category\nagg_df = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'],as_index=False).agg({'PRICE':'mean'}).sort_values('PRICE', ascending=False)","1cc9c178":"agg_df.head()","5898e28d":"agg_df.loc[:, 'AGE_CAT'] = pd.cut(agg_df['AGE'], [0, 18, 23, 30, 41, 70], labels=[\n                                  '0_18', '19_23', '24_30', '31_40', '41_70'])","e48f539e":"agg_df.head()","a481a316":"agg_df.loc[:, 'customers_level_based'] = agg_df.apply(\n    lambda x: f\"{x['COUNTRY'].upper()}_{x['SOURCE'].upper()}_{x['SEX'].upper()}_{x['AGE_CAT'].upper()}\", axis=1)","f3454aa7":"agg_df.head()","df251e78":"# mean profit for each persona\nlevel_df = agg_df[['customers_level_based', 'PRICE']\n                  ].groupby('customers_level_based',as_index=False).mean()","e7c01e91":"level_df.head()","bf0e9ec9":"level_df.loc[:, 'SEGMENT'] = pd.qcut(\n    level_df['PRICE'], 4, labels=['D', 'C', 'B', 'A'])","f24a9151":"level_df.head()","3bdbbe4c":"new_user = 'TUR_ANDROID_FEMALE_31_40'\nnew_user2 = 'FRA_IOS_FEMALE_31_40'","3a163bba":"level_df[level_df['customers_level_based'] == new_user]","f98b4df7":"level_df[level_df['customers_level_based'] == new_user2]","3f9f0114":"# First Steps to Creating Personas","c95dc287":"# Introduction\n\nI prefer medium.com for writing. You can access the medium story that relevant with this notebook from [here](https:\/\/medium.com\/@mebaysan\/rule-based-customer-segmentation-without-ml-6d194648813d). This notebook will cover just codes.\n\n[@mebaysan](https:\/\/github.com\/mebaysan)","037da3ff":"# Creating Age Categories","0118b459":"# Data Loading","d944561a":"# Expected Profit for New Users by Using Personas","ebed4ceb":"# Creating Personas","71d6acc1":"# Creating Segments for Personas","d9552d55":"# Exploratoring Data"}}