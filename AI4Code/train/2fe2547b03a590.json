{"cell_type":{"14ed33e4":"code","c7e798ac":"code","fcb2bdae":"code","b7036732":"code","36469583":"code","1553d4d8":"code","41fe78fd":"code","374107dc":"code","976e5d83":"code","8b400440":"code","c676e9d8":"code","1e2dd0c0":"code","5cfa894e":"code","ddb6665f":"code","2bbad3a9":"code","5137e950":"code","1343b197":"code","f40c079c":"code","01e1e849":"code","c29b71a6":"code","69630e48":"code","4d7fa1bd":"code","d5b11b10":"code","75195a66":"markdown"},"source":{"14ed33e4":"import pandas as pd\nimport numpy as np\n\nimport plotly.express as px\nimport plotly.graph_objects as go","c7e798ac":"df = pd.read_csv('..\/input\/top50spotify2019\/top50.csv',encoding = \"ISO-8859-1\")","fcb2bdae":"#sample\nfig = go.Figure(go.Treemap(\n    labels = [\"Eve\",\"Cain\", \"Seth\", \"Enos\", \"Noam\", \"Abel\", \"Awan\", \"Enoch\", \"Azura\"],\n    parents = [\"\", \"Eve\", \"Eve\", \"Seth\", \"Seth\", \"Eve\", \"Eve\", \"Awan\", \"Eve\"]\n))\n\nfig.show()","b7036732":"#make a df it's grouped by \"Genre\"\ngb_genre =df.groupby(\"Genre\").sum()\n\ngb_genre.head()","36469583":"genre = list(gb_genre.index)\nscore = list(gb_genre.Popularity)\n\nprint(genre)\nprint(score)","1553d4d8":"#first treemap\ntest_tree = go.Figure(go.Treemap(\n    labels =  genre,\n    parents=[\"\"]*len(genre),\n    values =  score,\n    textinfo = \"label+value\"\n))\n\ntest_tree.show()","41fe78fd":"#first treemap\ntest_tree_blue = go.Figure(go.Treemap(\n    labels =  genre,\n    parents=[\"\"]*len(genre),\n    values =  score,\n    textinfo = \"label+value\",\n    marker_colorscale = 'Greens'\n))\n\ntest_tree_blue.show()","374107dc":"gb_ArtistName = df.groupby(\"Artist.Name\").sum()","976e5d83":"artist = list(gb_ArtistName.index)\nscore_artist = list(gb_ArtistName.Popularity)","8b400440":"#first treemap\ntest_tree_artist = go.Figure(go.Treemap(\n    labels =  artist,\n    parents=[\"\"]*len(artist),\n    values =  score_artist,\n    textinfo = \"label+value\"\n))\n\ntest_tree_artist.show()","c676e9d8":"def test_func(str):\n    if \"pop\" in str:\n        return \"POP\"\n    elif \"hip hop\" in str:\n        return \"HIP HOP\"\n    elif \"rap\" in str:\n        return \"RAP\"\n    else:\n        return \"OTHER\"","1e2dd0c0":"test_func(\"awefawoefoawrapfewaofawoe\")","5cfa894e":"test_df = df.Genre.map(lambda x : test_func(x))","ddb6665f":"df[\"big_genre\"] = test_df","2bbad3a9":"gb_big_genre =df.groupby(\"big_genre\")","5137e950":"genre_2 = list(gb_big_genre.sum().index)\nscore_2 = list(gb_big_genre.sum().Popularity)","1343b197":"#second\ntest_tree_2 = go.Figure(go.Treemap(\n    labels =  genre_2,\n    parents=[\"\"]*len(genre_2),\n    values =  score_2,#labels\u306e\u8981\u7d20\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u3044\u308c\u308b\n    textinfo = \"label+value\"\n))\n\ntest_tree_2.show()","f40c079c":"genre_3 = list(gb_genre.index)\nscore_3 = list(gb_genre.Popularity)\n\n\nprint(genre,score, len(genre),len(score))","01e1e849":"big_genre = list(gb_big_genre.sum().index)\nbig_score = list(gb_big_genre.sum().Popularity)\n\nprint(big_genre,big_score)","c29b71a6":"genre.extend(big_genre)\nscore.extend(big_score)\n\nprint(genre,score)","69630e48":"parent = list(gb_genre.index.map(lambda x : test_func(x)))\n\nprint(parent)\nprint(\"---\")\nprint(len(parent))","4d7fa1bd":"big_parent = [\"\"]*4\nparent.extend(big_parent)\n\nprint(parent)","d5b11b10":"test_tree_3 = go.Figure(go.Treemap(\n    labels =  genre,\n    #parents = [\"\"]*len(labels),\n    parents=parent,\n    values =  score,#labels\u306e\u8981\u7d20\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u3044\u308c\u308b\n    textinfo = \"label+value\"\n))\n\ntest_tree_3.show()","75195a66":"Take a look at the big genre"}}