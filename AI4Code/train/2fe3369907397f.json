{"cell_type":{"f7086304":"code","a5e93225":"code","83d5512f":"code","72c93d15":"code","966f80a7":"code","af3b9c3d":"code","1505bfad":"code","29245ecb":"code","0e4eb495":"code","b4fd94a5":"code","baacb0d1":"code","c0934690":"code","befcda46":"code","44e0a075":"code","96ccf37d":"code","cd6ebfdd":"code","5dc74114":"code","847e6a3f":"code","a80851c5":"code","dbba6e23":"code","52676a0e":"code","46901a9a":"code","3a2616ac":"code","9045335e":"markdown"},"source":{"f7086304":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt #for ploting \n\n#Import Linear REgression model from sklearn\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.linear_model import LogisticRegression","a5e93225":"df = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\nsub = pd.read_csv('..\/input\/gender_submission.csv')\n","83d5512f":"print(df.head())\nprint(test.head())\nprint(sub.head())","72c93d15":"CM1 = df[(df['Pclass']==1) & (df['Sex']=='male')]['Age'].mean()\nCM2 = df[(df['Pclass']==2) & (df['Sex']=='male')]['Age'].mean()\nCM3 = df[(df['Pclass']==3) & (df['Sex']=='male')]['Age'].mean()\nCF1 = df[(df['Pclass']==1) & (df['Sex']=='female')]['Age'].mean()\nCF2 = df[(df['Pclass']==2) & (df['Sex']=='female')]['Age'].mean()\nCF3 = df[(df['Pclass']==3) & (df['Sex']=='female')]['Age'].mean()\n\nM1 = test[(test['Pclass']==1) & (test['Sex']=='male')]['Age'].mean()\nM2 = test[(test['Pclass']==2) & (test['Sex']=='male')]['Age'].mean()\nM3 = test[(test['Pclass']==3) & (test['Sex']=='male')]['Age'].mean()\nF1 = test[(test['Pclass']==1) & (test['Sex']=='female')]['Age'].mean()\nF2 = test[(test['Pclass']==2) & (test['Sex']=='female')]['Age'].mean()\nF3 = test[(test['Pclass']==3) & (test['Sex']=='female')]['Age'].mean()\n\n\n\nprint('\\n',CM1,'\\n',\n      CM2,'\\n',\n      CM3,'\\n',\n      CF1,'\\n',\n      CF2,'\\n',\n      CF3)\n\n","966f80a7":"df.loc[(df['Pclass']==1) & (df['Sex']=='male') & (df['Age'].isnull()),'Age'] = CM1\ndf.loc[(df['Pclass']==2) & (df['Sex']=='male') & (df['Age'].isnull()),'Age'] = CM2\ndf.loc[(df['Pclass']==3) & (df['Sex']=='male') & (df['Age'].isnull()),'Age'] = CM3\ndf.loc[(df['Pclass']==1) & (df['Sex']=='female') & (df['Age'].isnull()),'Age'] = CF1\ndf.loc[(df['Pclass']==2) & (df['Sex']=='female') & (df['Age'].isnull()),'Age'] = CF2\ndf.loc[(df['Pclass']==3) & (df['Sex']=='female') & (df['Age'].isnull()),'Age'] = CF3\n\ntest.loc[(test['Pclass']==1) & (df['Sex']=='male') & (test['Age'].isnull()),'Age'] = M1\ntest.loc[(test['Pclass']==2) & (df['Sex']=='male') & (test['Age'].isnull()),'Age'] = M2\ntest.loc[(test['Pclass']==3) & (df['Sex']=='male') & (test['Age'].isnull()),'Age'] = M3\ntest.loc[(test['Pclass']==1) & (df['Sex']=='female') & (test['Age'].isnull()),'Age'] = F1\ntest.loc[(test['Pclass']==2) & (df['Sex']=='female') & (test['Age'].isnull()),'Age'] = F2\ntest.loc[(test['Pclass']==3) & (df['Sex']=='female') & (test['Age'].isnull()),'Age'] = F3\n\n","af3b9c3d":"df.info()","1505bfad":"df.loc[(df['Sex']=='male'),'Sex'] = 0\n","29245ecb":"\ntest.loc[(test['Sex']=='male'),'Sex'] = 0","0e4eb495":"df.loc[(df['Sex']=='female'),'Sex'] = 1","b4fd94a5":"\ntest.loc[(test['Sex']=='female'),'Sex'] = 1","baacb0d1":"df.head()","c0934690":"df.loc[df['Embarked'] == 'S','Embarked'] = 1\ndf.loc[df['Embarked'] == 'C','Embarked'] = 2\ndf.loc[df['Embarked'] == 'Q','Embarked'] = 3\ndf.loc[df['Embarked'].isnull(),'Embarked'] = 0\ntest.loc[test['Embarked'] == 'S','Embarked'] = 1\ntest.loc[test['Embarked'] == 'C','Embarked'] = 2\ntest.loc[test['Embarked'] == 'Q','Embarked'] = 3\ntest.loc[test['Embarked'].isnull(),'Embarked'] = 0\n","befcda46":"df.info()","44e0a075":"#Creating import and output variable X and Y\nXtrain = df[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]\nYtrain = df['Survived']\n\n#Ytest = test[['Survived']]","96ccf37d":"fare3 = test[(test['Pclass']==3)]['Fare'].mean()\n\ntest.loc[(test['Pclass']==3) & (test['Fare'].isnull()),'Fare'] = fare3\n\nprint(fare3)\n","cd6ebfdd":"\nXtest = test[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]","5dc74114":"Xtest.info()","847e6a3f":"# Build and implement model and train it\nlr = LinearRegression().fit(Xtrain,Ytrain)\nclf = LogisticRegression(random_state=0, solver='lbfgs', multi_class='multinomial', max_iter=1000).fit(Xtrain, Ytrain)","a80851c5":"# Check the accuracy of our model lr\n#lr.score(Xtrain,Ytrain)\nclf.score(Xtrain,Ytrain)","dbba6e23":"from sklearn.linear_model import SGDClassifier\nclf1 = SGDClassifier(alpha=0.0001, average=False, class_weight=None,\n           early_stopping=False, epsilon=2, eta0=2, fit_intercept=True,\n           l1_ratio=0.15, learning_rate='optimal', loss='hinge', max_iter=1000,\n           n_iter=None, n_iter_no_change=5, n_jobs=None, penalty='l1',\n           power_t=0.5, random_state=None, shuffle=True, tol=None,\n           validation_fraction=0.1, verbose=0, warm_start=False)\n\nclf1.fit(Xtrain,Ytrain)\nclf1.score(Xtrain,Ytrain)","52676a0e":"#predict value of y but entering inpu\n\nres = lr.predict(Xtest)\nx = res.reshape(-1,1)\nprint(x)\n","46901a9a":"ds = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived':res})\nmask1 = ds.Survived > 0.5\nmask2 = ds.Survived < 0.5\nds.loc[mask1, 'Survived'] = int(1)\n\nds.loc[mask2, 'Survived'] = int(0)\n\nds['Survived']=pd.to_numeric(ds['Survived'], downcast='integer')\nprint(ds)","3a2616ac":"\n\nds.to_csv('submission.csv', index=False)\n\n\n        \n    ","9045335e":"df.describe()"}}