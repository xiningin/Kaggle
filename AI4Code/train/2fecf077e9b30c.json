{"cell_type":{"87f7d351":"code","adc8f21f":"code","68b90e6b":"code","ceb30724":"code","4142880d":"code","25919876":"code","92d80828":"code","b9b2b8a1":"code","d704944c":"code","4ee4690f":"code","e80e8562":"code","4a7741e6":"code","54836b3a":"code","96d11a1e":"code","d9762f81":"code","7151610d":"code","0bdac6c8":"code","fa65b887":"code","b9e48192":"markdown"},"source":{"87f7d351":"# Import Libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","adc8f21f":"# Load Data\ncrime_data = pd.read_csv(\"..\/input\/up-crime-data-year-2019\/MR data - Compiled Data Set.csv\")\ncrime_data.drop([\"Title\", \"Text\"], axis=1, inplace=True)\n\n# Get Columns Names\ncols = crime_data.columns","68b90e6b":"# Percent of data misisng\nnrow = crime_data.shape[0]\nncol = crime_data.shape[1]\n(crime_data.isnull().sum().sum()*100)\/(nrow*ncol)","ceb30724":"# Get column names with string data and numeric data. They will be proessed separately\nstr_cols = [col for col in cols if crime_data[col].dtype == \"object\"]\nnum_cols = list(set(cols) - set(str_cols))\nprint(num_cols,\"\\n\\n\",str_cols)","4142880d":"# Fill Numeric missing data with 0 because they are not involved\ncrime_data[num_cols] = crime_data[num_cols].fillna(0)","25919876":"# Fill str_cols[1] column with \"Missing or No Murder Involved\"\ncrime_data[str_cols[1]] = crime_data[str_cols[1]].fillna(\"Missing or No Murder Involved\")","92d80828":"# Fill str_cols[2] column with 0. This 0 value is encoded later to a proper string\ncrime_data[str_cols[2]] = crime_data[str_cols[2]].fillna(0)","b9b2b8a1":"# There are few rows with values 11 in str_cols[2] column. This is not possible looking at the column\n# name. So these rows are dropped\nind = crime_data[crime_data[str_cols[2]].isin([\"11\"])].index\ncrime_data.drop(ind, axis=0, inplace=True)\n\nnrow = nrow - len(ind)","d704944c":"# Readjust the index values to make for removed rows\ncrime_data.index = range(0,len(crime_data.index))","4ee4690f":"# Create a temporary dataframe representing the columns  which are created by separating values \n# of column str_cols[2]\ndf2 = pd.DataFrame({'0':[False]*nrow, '1':[False]*nrow, '2':[False]*nrow, '3':[False]*nrow,\n                   '4':[False]*nrow, '5':[False]*nrow, '6':[False]*nrow, '7':[False]*nrow, '8':[False]*nrow,\n                   '9':[False]*nrow, '10':[False]*nrow})","e80e8562":"# Separate the column. Crucial Step\n\nfor i in range(0,len(crime_data)):\n    vals = str(crime_data.loc[i,str_cols[2]]).split(\",\")\n    for j in vals:\n        j = j.strip()\n        df2.loc[i,j] = True","4a7741e6":"# Dict to rename the column name of df2\ndict = {'0':\"Missing or not applicable\" , '1':\"Murder with Rape\", '2':\"Dowry Deaths\", '3':\"Suicide\",\n                   '4':\"Kidnapping\", '5':\"Acid Attack\", '6':\"Cruelty by Husband\/in-laws\", '7':\"Rape only\", \n                   '8':\"Assault on Women with Intent to Outrage her Modesty\", '9':\"Cyber Crimes against Women\", \n                   '10':\"Protection of Children from Sexual Offences Act\"}","54836b3a":"# Rename columsn of df2\nnew_cols = []\nfor x in df2.columns:\n    new_cols.append(dict[x])\n    \ndf2.columns = new_cols","96d11a1e":"# Remove column str_col[2] from original dataframe\ncrime_data.drop(str_cols[2], axis=1, inplace=True)","d9762f81":"# Concat dataframes to get final dataframe\ncrime_data = pd.concat([crime_data, df2], axis=1)","7151610d":"# Final Cleaned DataFrame\ncrime_data","0bdac6c8":"# Barplot showing the amount of crime recorded in each city\nfig, ax = plt.subplots(figsize=(10,6))\nsns.histplot(x=crime_data[\"City \"], kde=False, linewidth=1.5)","fa65b887":"# Barplot showing the Reasons of Murder if any recorded in the data\nfig, ax = plt.subplots(figsize=(20,10))\nsns.histplot(x=crime_data.iloc[:,1], kde=False, linewidth=1.5)\nax.set(xlabel=\"Reasons of Murder if any\", ylabel = \"Count\")","b9e48192":"Approx 76% data is missing. **HUGE!**\nRequires Extensive Preprocessing"}}