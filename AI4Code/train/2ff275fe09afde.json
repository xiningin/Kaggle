{"cell_type":{"90d9b72e":"code","e2c35370":"code","6e880a45":"code","df0cd5e3":"code","a7b7ff58":"code","40e94477":"code","ac751239":"code","09c43073":"code","62326f4f":"code","5e7189c8":"code","1961523a":"code","06098d58":"code","efde85b2":"code","82f3b7e5":"code","d668609d":"code","6d64d2ac":"code","76ec4e66":"code","ce1165fa":"code","37faabf6":"markdown","cb3ef86f":"markdown","257e0abf":"markdown"},"source":{"90d9b72e":"import pandas as pd\nimport json\nfrom datetime import datetime","e2c35370":"def get_clean_authors(authors):\n    r = []\n    for a in authors:\n        r.append(\" \".join(a).strip())\n    return r","6e880a45":"articles = []\ncategory = 'nucl-ex'\nwith open(\"..\/input\/arxiv\/arxiv-metadata-oai-snapshot.json\", \"r\") as f:\n    for l in f:\n        d = json.loads(l)\n        if category in d['categories'].split(' '):\n            d['clean_authors'] = get_clean_authors(d['authors_parsed']) \n            articles.append(d)\n\narticles_df = pd.DataFrame().from_records(articles)\narticles_df['created_date'] = [datetime.strptime(date[0]['created'].split(',')[1],' %d %b %Y %H:%M:%S %Z') \n                               for date in articles_df['versions']]\narticles_df.head()","df0cd5e3":"articles_df['abstract'][2]","a7b7ff58":"!pip3 install pylatexenc","40e94477":"from pylatexenc.latex2text import LatexNodes2Text","ac751239":"LatexNodes2Text().latex_to_text(articles_df['abstract'][2]).replace('\\n', ' ').strip()","09c43073":"# LaTex to UTF\nclean_abstract = []\nclean_title = []\nfor i,a in articles_df.iterrows():\n    # Clean title\n    try:\n        clean_title.append(LatexNodes2Text().latex_to_text(a['title']).replace('\\n', ' ').strip()) \n    except:\n        clean_title.append(a['abstract'].replace('\\n', ' ').strip())\n    # Clean abstract\n    try:\n        clean_abstract.append(LatexNodes2Text().latex_to_text(a['abstract']).replace('\\n', ' ').strip()) \n    except:\n        clean_abstract.append(a['abstract'].replace('\\n', ' ').strip())\narticles_df['clean_abstracts'] = clean_abstract\narticles_df['clean_title'] = clean_title","62326f4f":"coauth_df=articles_df[['id','clean_title','clean_authors','created_date','clean_abstracts','categories']]\ncoauth_df.sort_values(by='created_date', ascending=False).head(10)","5e7189c8":"coauth_df.dtypes","1961523a":"auth_df=coauth_df[['id','clean_authors']]\n\n\nauth_df = auth_df.clean_authors.apply(pd.Series) \\\n    .merge(auth_df, right_index=True, left_index=True) \\\n    .drop([\"clean_authors\"], axis=1) \\\n    .melt(id_vars=['id'], value_name=\"clean_authors\") \\\n    .drop(\"variable\", axis=1) \\\n    .dropna()\n","06098d58":"auth_df=auth_df.groupby('clean_authors').filter(lambda x : len(x)>10)\nauth_df= auth_df[auth_df['clean_authors']!=':']","efde85b2":"auth_df.head(10)","82f3b7e5":"auth_df.groupby(['clean_authors']).agg(['count']).reset_index().sort_values(by=('clean_authors','')).head(15)","d668609d":"auth_cat_df = coauth_df.assign(categories=coauth_df.categories.str.split(\" \"))\nauth_cat_df=auth_cat_df[['id','categories']]\n\n\nauth_cat_df = auth_cat_df.categories.apply(pd.Series) \\\n    .merge(auth_cat_df, right_index=True, left_index=True) \\\n    .drop([\"categories\"], axis=1) \\\n    .melt(id_vars=['id'], value_name=\"categories\") \\\n    .drop(\"variable\", axis=1) \\\n    .dropna()\nauth_cat_df.head()","6d64d2ac":"dates_df= coauth_df[['id','created_date']]\ndates_df['year']=pd.DatetimeIndex(dates_df['created_date']).year\ndates_df['month']=pd.DatetimeIndex(dates_df['created_date']).month\ndates_df.head()","76ec4e66":"final_coauth_df= auth_df.merge(auth_cat_df, on='id')\nfinal_coauth_df= final_coauth_df.merge(dates_df[['id','year','month']], on='id')\nfinal_coauth_df","ce1165fa":"final_coauth_df.to_csv('final_coauth_df_arxiv.csv')","37faabf6":"# Preprocessing data\n\nWe will assume the ArXiv dataset has been downloaded and extracted into the analysis folder. First, we will load the articles in the category of nuclear experiments in the Pandas data frame. The following script also preprocesses the authors' names and the published date of the papers.\n\nData is available on https:\/\/www.kaggle.com\/Cornell-University\/arxiv","cb3ef86f":"If we take a look at a random abstract text, we can notice that the text is available in the Latex format:","257e0abf":"We will transform both the title and abstract text to UTF-8 format using the pylatexenc library."}}