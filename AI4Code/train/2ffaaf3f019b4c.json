{"cell_type":{"05f63eec":"code","02858127":"code","b516f6fb":"code","6d973e0f":"code","0b76138d":"code","17a08846":"code","fee579e1":"code","81478ffa":"code","2798e71d":"code","6f988e3d":"code","f908dede":"code","7281736e":"code","9ebd54d1":"code","cf4df6b1":"code","05124fa1":"code","3c1b678a":"code","9ba3ae3c":"code","f2178e50":"code","6e955c3f":"code","351c4e07":"code","c858f1c6":"code","8e4ac4d4":"code","9c86c307":"code","34dd733e":"code","c635b8e6":"code","a8d321a0":"code","04a6e7f3":"code","be5f18c3":"markdown","f3c51a05":"markdown","be9a9964":"markdown","4b5ad5ee":"markdown","444a3ab5":"markdown","c36939f7":"markdown","f11660a5":"markdown"},"source":{"05f63eec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n\n# Any results you write to the current directory are saved as output.","02858127":"data = pd.read_csv(\"..\/input\/data.csv\")\ndata.info()","b516f6fb":"data.head(20)","6d973e0f":"data.dtypes","0b76138d":"data.columns","17a08846":"f,ax = plt.subplots(figsize=(25, 25))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","fee579e1":"tm = data.groupby('Nationality').count()['ID'].sort_values(ascending = False)\nplt_data = [go.Bar(\n    x = tm.index,\n    y = tm\n    )]\nlayout = go.Layout(\n    autosize=False,\n    width=5000,\n    height=600,\n    title = \"Total players from a Nation in the whole game\"\n)\nfig = go.Figure(data=plt_data, layout=layout)\niplot(fig)","81478ffa":"melted = pd.melt(frame=data,id_vars = 'Name', value_vars= ['Age','Finishing'])\nmelted\n","2798e71d":"data1 = data['Age'].head()\ndata2= data['Finishing'].head()\nconc_data_col = pd.concat([data1,data2],axis =1)\nconc_data_col","6f988e3d":"data1 = data['Age'].tail()\ndata2= data['Finishing'].tail()\nconc_data_col = pd.concat([data1,data2],axis =1)\nconc_data_col","f908dede":"tm = data['Preferred Foot'].value_counts()\nplt_data = [go.Bar(\n    x = tm.index,\n    y = tm\n    )]\nlayout = go.Layout(\n    autosize=False,\n    width=500,\n    height=500,\n    title = \"Count of players prefered foot\"\n)\nfig = go.Figure(data=plt_data, layout=layout)\niplot(fig)","7281736e":"forwards = ['ST','LF','RF','CF','LW','RW']\nmidfielders = ['CM','LCM','RCM','RM','LM','CDM','LDM','RDM','CAM','LAM','RAM','LCM','RCM']\ndefenders = ['CB','RB','LB','RCB','LCB','RWB','LWB'] \ngoalkeepers = ['GK']\ndata['Overall_position'] = None\nforward_players = data[data['Position'].isin(forwards)]\nmidfielder_players = data[data['Position'].isin(midfielders)]\ndefender_players = data[data['Position'].isin(defenders)]\ngoalkeeper_players = data[data['Position'].isin(goalkeepers)]\ndata.loc[forward_players.index,'Overall_position'] = 'forward'\ndata.loc[defender_players.index,'Overall_position'] = 'defender'\ndata.loc[midfielder_players.index,'Overall_position'] = 'midfielder'\ndata.loc[goalkeeper_players.index,'Overall_position'] = 'goalkeeper'\n\ntm = data['Overall_position'].value_counts()\nplt_data = [go.Bar(\n    x = tm.index,\n    y = tm\n    )]\nlayout = go.Layout(\n    autosize=True,\n    width=500,\n    height=500,\n    title = \"Total players playing in the Overall position\"\n)\nfig = go.Figure(data=plt_data, layout=layout)\niplot(fig)\n\nplt.figure(figsize = (16, 12))\nsns.set(style = 'dark', palette = 'colorblind', color_codes = True)\nax = sns.countplot('Position', data = data, color = 'blue')\nax.set_xlabel(xlabel = 'Different Positions', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of Players', fontsize = 16)\nax.set_title(label = 'Positions and Players', fontsize = 16)\nplt.show()","9ebd54d1":"plt.figure(figsize = (32, 20))\nfig, axes = plt.subplots(nrows=2,ncols=1)\ndata.plot(kind = \"hist\",y = \"Penalties\",bins = 50,range= (0,250),normed = True,ax = axes[0])\ndata.plot(kind = \"hist\",y = \"Penalties\",bins = 50,range= (0,250),normed = True,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt.show()","cf4df6b1":"boolean = data.Potential > 93\ndata[boolean]","05124fa1":"data[data[\"Nationality\"] == \"Turkey\"][['Name' , 'Position' , 'Overall' , 'Age', 'Wage', 'Club']].head(50)","3c1b678a":"data[data[\"Club\"] == \"Real Madrid\"][['Name' , 'Position' , 'Overall' , 'Age', 'Wage', 'Nationality']].head(12)","9ba3ae3c":"data[['Name', 'Age', 'Wage', 'Value', 'Nationality']].max()","f2178e50":"data[['Name', 'Age', 'Wage', 'Value', 'Nationality' ]].min()","6e955c3f":"data.sort_values(by = 'Age' , ascending = True)[['Name', 'Age', 'Wage']].set_index('Name').sample(10)","351c4e07":"data[data[\"Position\"] == \"ST\"][['Name' , 'Position' , 'Overall' , 'Age', 'Wage', 'Nationality']].head()","c858f1c6":"data.Position.unique()","8e4ac4d4":"sns.swarmplot(x=\"Dribbling\", y=\"Finishing\",hue=\"Preferred Foot\",data = data, color = 'red')\nplt.show()","9c86c307":"sns.swarmplot(x=\"Position\", y=\"Finishing\",hue=\"Preferred Foot\", data=data)\nplt.show()","34dd733e":"data.describe()","c635b8e6":"sns.countplot(x=\"Age\", data=data)\ndata.loc[:,'Age'].value_counts()\nplt.show()","a8d321a0":"data['Club'].fillna('No Club', inplace = True)\ndata['Club'].value_counts(dropna = False)","04a6e7f3":"data['Preferred Foot'].fillna('Right', inplace = True)\ndata['Preferred Foot'].value_counts(dropna = False)","be5f18c3":"## *** ABOUT MISSING DATA***","f3c51a05":"## *The oldest and youngest players*","be9a9964":"## *Best 50 Turkish players*","4b5ad5ee":"## *Random youngest players*","444a3ab5":"## *Dribbling and finishing by preferred foot*","c36939f7":"## *Position and finishing by preferred foot***","f11660a5":"## *Footballers of Realmadrid*"}}