{"cell_type":{"72582553":"code","1dd7abab":"code","04427584":"code","7f325f27":"code","3b4301e1":"code","8c4acad8":"code","263d7e1f":"code","62f1ed7c":"code","d6b39125":"code","c9cc07f8":"code","000ebc25":"code","dbe2d8fd":"code","751c16f9":"code","d3af1064":"markdown","af6757bc":"markdown","c43c9edd":"markdown","f6138113":"markdown","d2d04958":"markdown","f033de17":"markdown","458f29a0":"markdown","f7cb4722":"markdown","13a8e308":"markdown","c5556bfd":"markdown","f57f0348":"markdown"},"source":{"72582553":"import numpy as np\nimport pandas as pd\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# defining dir variables \nroot_dir = '..\/input\/real-life-industrial-dataset-of-casting-product\/casting_data\/casting_data\/'\ntrain_defective = root_dir + 'train\/def_front\/'\ntrain_ok = root_dir + 'train\/ok_front\/'\n\ntest_defective = root_dir + 'test\/def_front\/'\ntest_ok = root_dir + 'test\/ok_front\/'","1dd7abab":"# Ploting images\nimport matplotlib.pyplot as plt\n\nfig, axes = plt.subplots(1, 2, figsize=(8,4))\naxes[0].imshow(plt.imread(train_defective+os.listdir(train_defective)[0]))\naxes[1].imshow(plt.imread(train_ok+os.listdir(train_ok)[0]))\naxes[0].set_title('Defective')\naxes[1].set_title('OK')\nplt.show()","04427584":"x_train = np.array([len(os.listdir(train_defective)),len(os.listdir(train_ok))])\nx_test = np.array([len(os.listdir(test_defective)),len(os.listdir(test_ok))])\nlabel = ['Defective','Ok']\n  \nfig, axes = plt.subplots(1, 2, figsize=(8,4))\naxes[0].pie(x_train, labels=label, autopct='%1.1f%%',shadow=True, startangle=90)\naxes[1].pie(x_test, labels=label, autopct='%1.1f%%',shadow=True, startangle=90)\naxes[0].set_title('Train')\naxes[1].set_title('Test')\nplt.show()\n\nprint(' Defective Training Images \\t: ' + str(len(os.listdir(train_defective))))\nprint(' Ok Training Images \\t\\t: ' + str(len(os.listdir(train_ok))))\nprint()\nprint(' Defective Testing Images \\t: ' + str(len(os.listdir(test_defective))))\nprint(' Ok Testing Images \\t\\t: ' + str(len(os.listdir(test_ok))))","7f325f27":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\n# Using IDG to load images from directory\ntrain_idg = ImageDataGenerator(rescale=1.\/255, validation_split=0.3) # 30 percent validation split for taining \ntest_idg = ImageDataGenerator(rescale=1.\/255)\n\n# Specify parameters\/arguments for data generation\nimg_size = (300, 300)\nbatch_size = 64\n\narg_train = {'target_size': img_size,\n             'color_mode': 'grayscale',\n             'class_mode': 'binary',\n             'batch_size': batch_size}\narg_test = {'target_size': img_size,\n            'color_mode': 'grayscale',\n            'class_mode': 'binary',\n            'batch_size': batch_size,\n            'shuffle': False}\n\ntrain = train_idg.flow_from_directory(directory=root_dir+'train\/', subset='training', **arg_train)\nvalid = train_idg.flow_from_directory(directory=root_dir+'train\/', subset='validation', **arg_train)\ntest  = test_idg.flow_from_directory(directory=root_dir+'test\/', **arg_test)","3b4301e1":"from tensorflow.keras.models import Sequential, load_model\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\nfrom tensorflow.keras.callbacks import ModelCheckpoint\nfrom tensorflow.keras.optimizers import Adam","8c4acad8":"cnn = Sequential([ \n    Conv2D(32, 3, activation='relu', padding='same', strides=2,input_shape=img_size+(1,)),\n    MaxPooling2D(pool_size=2, strides=2),\n    Conv2D(64, 3, activation='relu', padding='same', strides=2),\n    MaxPooling2D(pool_size=2, strides=2),\n    Flatten(),\n    Dense(128, activation='relu'),\n    Dense(1, activation='sigmoid')  \n])\n\ncnn.compile(optimizer=Adam(learning_rate=0.001),loss='binary_crossentropy',metrics=['accuracy'])\n\ncnn.summary()","263d7e1f":"history = cnn.fit(\n    train ,\n    validation_data=valid,\n    epochs=30)","62f1ed7c":"plt.plot(history.history['accuracy'], label='Accuracy')\nplt.plot(history.history['val_accuracy'], label='Validation Accuracy')\nplt.title('CNN Metrices (Accuracy)')\nplt.ylabel('% value')\nplt.xlabel('Epoch')\nplt.legend(loc=\"upper left\")\nplt.show()","d6b39125":"plt.plot(history.history['loss'], label='Loss')\nplt.plot(history.history['val_loss'], label='Validation loss')\nplt.title('CNN Metrices(Loss)')\nplt.ylabel('% value')\nplt.xlabel('Epoch')\nplt.legend(loc=\"upper left\")\nplt.show()","c9cc07f8":"y_pred = cnn.predict(test)\ny_pred = (y_pred >= 0.5).reshape(-1,)","000ebc25":"y_actual = test.classes[test.index_array]","dbe2d8fd":"from sklearn import metrics\ncm = metrics.confusion_matrix(y_actual, y_pred)\ndisp = metrics.ConfusionMatrixDisplay(confusion_matrix=cm)\ndisp.plot()\nplt.show()","751c16f9":"from sklearn.metrics import confusion_matrix, classification_report\nprint(classification_report(y_actual, y_pred, digits=4))","d3af1064":"## Overview\n\n    * Defects are an unwanted thing in casting industry. For removing this defective product all industry have their quality inspection department. \n    * But,the main problem is this inspection process is carried out manually and it is a very time-consuming process and due to human involvement.\n    * the results obtained through this method are not 100% accurate. \n    * This can because of the rejection of the entire order thus creating a loss for company.\n\n## Objective\n\n    To automate this process using machine learning models ","af6757bc":"## Data loading and perprocessing\n\n    - 0\/1 Normalization \n    - Grayscale\n    - input shape resize for CNN (300x300)","c43c9edd":"#### Classification report","f6138113":"## Dataset\n\n    * This dataset is of casting manufacturing product.\n    * Casting is a manufacturing process in which a liquid material is usually poured into a mould, which contains a hollow cavity of the desired shape, and then allowed to solidify.\n    * Reason for collect this data is casting defects!!\n    * Casting defect is an undesired irregularity in a metal casting process.\n    * There are many types of defect in casting like blow holes, pinholes, burr, shrinkage defects, mould material defects, pouring metal defects, metallurgical defects, etc.","d2d04958":"## CNN","f033de17":"# Quality Inspection for casting product","458f29a0":"### Bulding model","f7cb4722":"#### Confusion matrix","13a8e308":"### EDA(Exploratory data analysis)\n\n    - Number of images","c5556bfd":"### Testing and evaluation","f57f0348":"### Training"}}