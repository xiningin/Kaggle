{"cell_type":{"619d2385":"code","79351936":"code","d22511fc":"code","fd3974d1":"code","8f5b1696":"code","c5c4a9c7":"code","e02b7d62":"code","f855b6a4":"code","9b3e9eb7":"code","699bf8b2":"code","1521f297":"code","1b69fafa":"code","eb5ed274":"code","fb55c36f":"code","890f3554":"code","3e2affbf":"code","4192c808":"code","7406eacf":"markdown","aff82c42":"markdown"},"source":{"619d2385":"import numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\n%pylab inline","79351936":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d22511fc":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import mean_squared_error","fd3974d1":"fresh_data = pd.read_csv('\/kaggle\/input\/pubg-finish-placement-prediction\/train_V2.csv')\nfresh_data.head() #\u0431\u0443\u0434\u0443 \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0447\u0442\u043e \u043e\u0442 Id, groupId, matchId \u043d\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442","8f5b1696":"fresh_data.shape #\u0434\u0443\u043c\u0430\u044e \u044d\u0442\u043e \u043e\u0447 \u043c\u043d\u043e\u0433\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f! \u0414\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u043e\u0437\u044c\u043c\u0443 \u0442\u043e\u043b\u044c\u043a\u043e 500000 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c, \u0438\u043d\u0430\u0447\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0433\u043e\u0435","c5c4a9c7":"data = fresh_data.head(500000)\ndel fresh_data","e02b7d62":"from scipy.stats import pearsonr\npearsonr(data.maxPlace, data.numGroups) ","f855b6a4":"plt.hist(data.winPlacePerc) #+- \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430","9b3e9eb7":"data = data.drop(['Id', 'groupId', 'matchId', 'maxPlace'], axis=1) #\u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043c\u043d\u0435 \u043e\u043d\u0438 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b!","699bf8b2":"data.iloc[:3, 2:3] # \u0432\u043e\u0442 \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043a \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e index, \u0437\u0430\u0442\u0435\u043c \u043f\u043e columns!!!","1521f297":"encoder = OneHotEncoder()\nencoder.fit(np.array(data.matchType).reshape(-1, 1))","1b69fafa":"X = np.hstack((np.array(data.drop(['matchType', 'winPlacePerc'], axis=1)),\n               encoder.transform(np.array(data.matchType).reshape(-1, 1)).toarray()))\ny = np.array(data.winPlacePerc)","eb5ed274":"model = RandomForestRegressor(n_estimators=100, max_depth=10)\nmodel.fit(X, y)","fb55c36f":"test_fresh_data = pd.read_csv('\/kaggle\/input\/pubg-finish-placement-prediction\/test_V2.csv')\ntest_fresh_data.head(10)","890f3554":"X_test = np.hstack((np.array(test_fresh_data.drop(['Id', 'groupId', 'matchId', 'maxPlace', 'matchType'], axis=1)),\n                    encoder.transform(np.array(test_fresh_data.matchType).reshape(-1, 1)).toarray()))","3e2affbf":"answers = model.predict(X_test)\nfor i in range(len(answers)):\n    answers[i] = max(answers[i], 0.0)\n    answers[i] = min(answers[i], 1.0)\nansw = pd.DataFrame()\nansw['Id'] = test_fresh_data['Id']\nansw['winPlacePerc'] = answers","4192c808":"answ.to_csv('submission.csv', index=False)","7406eacf":"\u041c\u043d\u0435 \u043d\u0430\u0434\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c OneHotEncoder \u0434\u043b\u044f data.matchType","aff82c42":"\u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0435\u0441\u0442\u044c. \u041d\u0435 \u0431\u0443\u0434\u0443 \u0431\u0440\u0430\u0442\u044c maxPlace, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043d\u0435 \u0445\u043e\u0447\u0443 \u043b\u0438\u043d\u0435\u0439\u043d\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438."}}