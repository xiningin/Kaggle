{"cell_type":{"15713353":"code","3f785418":"code","01317722":"code","8e8074d2":"code","a5c529c1":"code","d754ad1e":"code","d9a6f9ac":"code","b7969662":"code","9a7c8aa0":"code","5061b8df":"code","a27b5d41":"code","1dcad461":"code","22f56e20":"code","2882e883":"code","fce5a42e":"code","03bdc078":"code","80be7624":"code","c2e98f5a":"markdown"},"source":{"15713353":"import pandas as pd\nfrom sklearn.preprocessing import MinMaxScaler\n!pip install openpyxl\n\npd.set_option('display.max_columns', 20)\n#pd.set_option('display.max_rows', 20)\npd.set_option('display.float_format', lambda x: '%.3f' % x)\n\ndf_ = pd.read_excel(\"..\/input\/online-retail-ii-uci\/online_retail_II.xlsx\", sheet_name=\"Year 2009-2010\")\ndf = df_.copy()\ndf.head()","3f785418":"df = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf = df[(df['Quantity'] > 0)]\ndf.dropna(inplace=True)\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\n\ncltv_c = df.groupby('Customer ID').agg({'Invoice': lambda x: x.nunique(),\n                                       'Quantity': lambda x: x.sum(),\n                                       'TotalPrice': lambda x: x.sum()})\n\ncltv_c.columns = ['total_transaction', 'total_unit', 'total_price']\n\ncltv_c.head()","01317722":"cltv_c['avg_order_value'] = cltv_c['total_price'] \/ cltv_c['total_transaction']\ncltv_c[\"purchase_frequency\"] = cltv_c['total_transaction'] \/ cltv_c.shape[0]","8e8074d2":"repeat_rate = cltv_c[cltv_c.total_transaction > 1].shape[0] \/ cltv_c.shape[0]\nchurn_rate = 1 - repeat_rate","a5c529c1":"cltv_c['profit_margin'] = cltv_c['total_price'] * 0.10\ncltv_c.head()","d754ad1e":"cltv_c['customer_value'] = cltv_c['avg_order_value'] * cltv_c[\"purchase_frequency\"]","d9a6f9ac":"cltv_c['cltv'] = (cltv_c['customer_value'] \/ churn_rate) * cltv_c['profit_margin']","b7969662":"cltv_c.head()","9a7c8aa0":"scaler = MinMaxScaler(feature_range=(0, 1))","5061b8df":"scaler.fit(cltv_c[[\"cltv\"]])","a27b5d41":"cltv_c[\"scaled_cltv\"] = scaler.transform(cltv_c[[\"cltv\"]])","1dcad461":"cltv_c.sort_values(by=\"scaled_cltv\", ascending=False).head()","22f56e20":"cltv_c[\"segment\"] = pd.qcut(cltv_c[\"scaled_cltv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\n\ncltv_c[[\"total_transaction\", \"total_unit\", \"total_price\", \"cltv\", \"scaled_cltv\"]].sort_values(by=\"scaled_cltv\",\n                                                                                              ascending=False).head()\n\ncltv_c.groupby(\"segment\")[[\"total_transaction\", \"total_unit\", \"total_price\", \"cltv\", \"scaled_cltv\"]].agg(\n    {\"count\", \"mean\", \"sum\"})","2882e883":"def create_cltv_c(dataframe, profit=0.10):\n\n    # Veriyi haz\u0131rlama\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[(dataframe['Quantity'] > 0)]\n    dataframe.dropna(inplace=True)\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    cltv_c = dataframe.groupby('Customer ID').agg({'Invoice': lambda x: x.nunique(),\n                                                   'Quantity': lambda x: x.sum(),\n                                                   'TotalPrice': lambda x: x.sum()})\n    cltv_c.columns = ['total_transaction', 'total_unit', 'total_price']\n\n    # avg_order_value\n    cltv_c['avg_order_value'] = cltv_c['total_price'] \/ cltv_c['total_transaction']\n\n    # purchase_frequency\n    cltv_c[\"purchase_frequency\"] = cltv_c['total_transaction'] \/ cltv_c.shape[0]\n\n    # repeat rate & churn rate\n    repeat_rate = cltv_c[cltv_c.total_transaction > 1].shape[0] \/ cltv_c.shape[0]\n    churn_rate = 1 - repeat_rate\n\n    # profit_margin\n    cltv_c['profit_margin'] = cltv_c['total_price'] * profit\n\n    # Customer Value\n    cltv_c['customer_value'] = (cltv_c['avg_order_value'] * cltv_c[\"purchase_frequency\"])\n\n    # Customer Lifetime Value\n    cltv_c['cltv'] = (cltv_c['customer_value'] \/ churn_rate) * cltv_c['profit_margin']\n\n    scaler = MinMaxScaler(feature_range=(0, 1))\n    scaler.fit(cltv_c[[\"cltv\"]])\n    cltv_c[\"scaled_cltv\"] = scaler.transform(cltv_c[[\"cltv\"]])\n\n    # Segment\n    cltv_c[\"segment\"] = pd.qcut(cltv_c[\"scaled_cltv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\n\n    return cltv_c","fce5a42e":"df = df_.copy()\ndf.head()","03bdc078":"cc = create_cltv_c(df)","80be7624":"cc.head()","c2e98f5a":"<h2 style='background:#11489c; border:0; color:white'><center>Customer Lifetime Value Calculation<\/center><\/h2>\n\nIn marketing, customer lifetime value, lifetime customer value, or lifetime value is an estimate of net profit\n\n<a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/i.ibb.co\/LYQW1NN\/Customer-Lifetime-Value-Segments-510x332-2.png\" alt=\"Customer-Lifetime-Value-Segments-510x332-2\" border=\"0\"><\/a>\n\n<h2 style='background:#11489c; border:0; color:white'><center>Formulas<\/center><\/h2>\n\n* CLTV = (Customer Value \/ Churn Rate) x Profit Margin\n* Customer Value = Average Order Value * Purchase Frequency\n* Average Order Value = Total Price \/ Total Transaction\n* Purchase Frequency = Total Transaction \/ Total Number of Customers\n* Churn Rate = 1 - Repeat Rate\n* Repeat Rate = Number of customers making multiple purchases \/ All customers\n* Profit Margin = Total Price * 0.10\n\n<a href=\"https:\/\/ibb.co\/m9t98LW\"><img src=\"https:\/\/i.ibb.co\/VgDgm74\/customer-lifetime-value3l.jpg\" alt=\"customer-lifetime-value3l\" border=\"0\"><\/a>"}}