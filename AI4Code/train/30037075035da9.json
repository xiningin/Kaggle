{"cell_type":{"0640ec7d":"code","a4b3076b":"code","4b023ef7":"code","a5b65967":"code","4b4b15d4":"code","b28d004c":"code","6c7431e1":"code","647744da":"code","4f82a9ef":"code","0669cc30":"code","d12a3504":"code","0fa46d32":"code","e5728e8b":"markdown","ae4105de":"markdown","79aec3c1":"markdown","39198230":"markdown","48ef4cac":"markdown"},"source":{"0640ec7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4b3076b":"data=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","4b023ef7":"data","a5b65967":"d1=data['Gender'].value_counts()\nplt.pie(d1,labels=d1.index,autopct='%0.0f%%',startangle=90)\nplt.show()","4b4b15d4":"plt.hist(data['Spending Score (1-100)'],rwidth=0.8)","b28d004c":"inVout=data.iloc[:,[3,4]]\ninVout","6c7431e1":"plt.scatter(inVout.iloc[:,0],inVout.iloc[:,1])","647744da":"from sklearn.cluster import KMeans\nkmeans=KMeans(n_clusters=5)\nkmeans.fit(np.array(inVout))","4f82a9ef":"plt.scatter(inVout.iloc[:,0],inVout.iloc[:,1], c=kmeans.labels_, cmap='rainbow')\nplt.show()","0669cc30":"inVout[kmeans.labels_==3].mean()","d12a3504":"plt.scatter(inVout[kmeans.labels_==0].iloc[:,0],inVout[kmeans.labels_==0].iloc[:,1],label='zero')\nplt.scatter(inVout[kmeans.labels_==1].iloc[:,0],inVout[kmeans.labels_==1].iloc[:,1],label='one')\nplt.scatter(inVout[kmeans.labels_==2].iloc[:,0],inVout[kmeans.labels_==2].iloc[:,1],label='two')\nplt.scatter(inVout[kmeans.labels_==3].iloc[:,0],inVout[kmeans.labels_==3].iloc[:,1],label='three')\nplt.scatter(inVout[kmeans.labels_==4].iloc[:,0],inVout[kmeans.labels_==4].iloc[:,1],label='four')\nplt.title(\"Clusters of Clients\")\nplt.xlabel(\"Annual Income ($K)\")\nplt.ylabel(\"Spending Score (0-100)\")\nplt.legend()\nplt.show()","0fa46d32":"inVout[kmeans.labels_==3]","e5728e8b":"**KMeans  cluster**","ae4105de":"From the above sctter you can clearely see that which cluster of customers is benificial and target for Mall and which is not the Target to improve profits","79aec3c1":"**OVERVIEW**","39198230":"**Spending score analysis**","48ef4cac":"**Gender Ratio**"}}