{"cell_type":{"37156f97":"code","514c29d7":"code","8e0be648":"code","6e5b25fd":"code","0d182dd2":"code","be48c16f":"code","d2b141b2":"code","24d79203":"code","27e7914a":"code","7ced8eb6":"code","4ffd2db7":"code","c85903bd":"code","f4fc1212":"code","f5339a11":"code","f8bfeb30":"code","4122979a":"code","fc770d23":"code","d2e55bf9":"code","21aa8f5f":"code","e2c809db":"code","dc499c2f":"code","3986b5a2":"code","28bb2db3":"code","0f7a164c":"code","4cc6d0c4":"code","7836e356":"code","8b398f92":"code","35e274a0":"code","a8b22b3e":"code","7bf935e3":"markdown","3b3f104d":"markdown","988de0e6":"markdown","203a4787":"markdown","9a74c8ef":"markdown","df4f6a46":"markdown","33b9dd30":"markdown","f9384c02":"markdown","26db1d25":"markdown","6aaf27f0":"markdown","7846908e":"markdown","42c8a8ac":"markdown","0bd01615":"markdown","dade7567":"markdown","993f5b70":"markdown","85e63780":"markdown","2900b876":"markdown","4616dd97":"markdown","087f035c":"markdown","9fc2c788":"markdown","9ef43580":"markdown","2911661b":"markdown","70a2da6a":"markdown","9cf3b487":"markdown","9bac187b":"markdown","94a26808":"markdown","d7d853b4":"markdown","fc45fad6":"markdown","b033a0e0":"markdown","c217a135":"markdown","450ed162":"markdown","b8173ce5":"markdown","acb97953":"markdown","04023c3e":"markdown","28c1190a":"markdown","cbda2aa1":"markdown"},"source":{"37156f97":"#Importing Libraries\nimport numpy as np #NumPy is a general-purpose array-processing package.\nimport pandas as pd #It contains high-level data structures and manipulation tools designed to make data analysis fast and easy.\nimport matplotlib.pyplot as plt #It is a Plotting Library\nimport seaborn as sns #Seaborn is a Python data visualization library based on matplotlib.\nfrom sklearn.linear_model import LogisticRegression #Logistic Regression is a Machine Learning classification algorithm\nfrom sklearn.linear_model import LinearRegression #Linear Regression is a Machine Learning classification algorithm\nfrom sklearn.model_selection import train_test_split #Splitting of Dataset\nfrom sklearn.metrics import classification_report \nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import r2_score","514c29d7":"#reading the dataset\nzomato_orgnl=pd.read_csv(\"..\/input\/zomato.csv\")\nzomato_orgnl.head() #This function returns the first n rows for the object based on position.\n","8e0be648":"#Deleting Unnnecessary Columns\nzomato=zomato_orgnl.drop(['url','dish_liked','phone'],axis=1) \n","6e5b25fd":"#Removing the Duplicates\nzomato.duplicated().sum()\nzomato.drop_duplicates(inplace=True)\n","0d182dd2":"#Remove the NaN values from the dataset\nzomato.isnull().sum()\nzomato.dropna(how='any',inplace=True)\nzomato.info()","be48c16f":"#Changing the Columns Names\nzomato.columns\nzomato = zomato.rename(columns={'approx_cost(for two people)':'cost','listed_in(type)':'type',\n                                  'listed_in(city)':'city'})\nzomato.columns","d2b141b2":"#Some Transformations\nzomato['cost'] = zomato['cost'].astype(str)\nzomato['cost'] = zomato['cost'].apply(lambda x: x.replace(',','.'))\nzomato['cost'] = zomato['cost'].astype(float)\nzomato.info()","24d79203":"#Removing '\/5' from Rates\nzomato['rate'].unique()\nzomato = zomato.loc[zomato.rate !='NEW']\nzomato = zomato.loc[zomato.rate !='-'].reset_index(drop=True)\nremove_slash = lambda x: x.replace('\/5', '') if type(x) == np.str else x\nzomato.rate = zomato.rate.apply(remove_slash).str.strip().astype('float')\nzomato['rate'].head()","27e7914a":"# Adjust the column names\nzomato.name = zomato.name.apply(lambda x:x.title())\nzomato.online_order.replace(('Yes','No'),(True, False),inplace=True)\nzomato.book_table.replace(('Yes','No'),(True, False),inplace=True)\nzomato.cost.unique()","7ced8eb6":"#Encode the input Variables\ndef Encode(zomato):\n    for column in zomato.columns[~zomato.columns.isin(['rate', 'cost', 'votes'])]:\n        zomato[column] = zomato[column].factorize()[0]\n    return zomato\n\nzomato_en = Encode(zomato.copy())","4ffd2db7":"#Get Correlation between different variables\ncorr = zomato_en.corr(method='kendall')\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)\nzomato_en.columns","c85903bd":"#Defining the independent variables and dependent variables\nx = zomato_en.iloc[:,[2,3,5,6,7,8,9,11]]\ny = zomato_en['rate']\n#Getting Test and Training Set\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=353)\nx_train.head()\ny_train.head()","f4fc1212":"#Prepare a Linear REgression Model\nreg=LinearRegression()\nreg.fit(x_train,y_train)\ny_pred=reg.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","f5339a11":"#Prepairng a Decision Tree Regression\nfrom sklearn.tree import DecisionTreeRegressor\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=105)\nDTree=DecisionTreeRegressor(min_samples_leaf=.0001)\nDTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","f8bfeb30":"#Preparing Random Forest REgression\nfrom sklearn.ensemble import RandomForestRegressor\nRForest=RandomForestRegressor(n_estimators=500,random_state=329,min_samples_leaf=.0001)\nRForest.fit(x_train,y_train)\ny_predict=RForest.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","4122979a":"#Preparing Extra Tree Regression\nfrom sklearn.ensemble import  ExtraTreesRegressor\nETree=ExtraTreesRegressor(n_estimators = 100)\nETree.fit(x_train,y_train)\ny_predict=ETree.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","fc770d23":"#Restaurants delivering Online or not\nsns.countplot(zomato['online_order'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants delivering online or Not')","d2e55bf9":"#Restaurants allowing table booking or not\nsns.countplot(zomato['book_table'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants allowing table booking or not')","21aa8f5f":"#Table booking Rate vs Rate\nplt.rcParams['figure.figsize'] = (13, 9)\nY = pd.crosstab(zomato['rate'], zomato['book_table'])\nY.div(Y.sum(1).astype(float), axis = 0).plot(kind = 'bar', stacked = True,color=['red','yellow'])\nplt.title('table booking vs rate', fontweight = 30, fontsize = 20)\nplt.legend(loc=\"upper right\")\nplt.show()","e2c809db":"# Location\nsns.countplot(zomato['city'])\nsns.countplot(zomato['city']).set_xticklabels(sns.countplot(zomato['city']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(13,13)\nplt.title('Location')","dc499c2f":"#Location and Rating\nloc_plt=pd.crosstab(zomato['rate'],zomato['city'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Location - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Location',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend().remove();","3986b5a2":"#Restaurant Type\nsns.countplot(zomato['rest_type'])\nsns.countplot(zomato['rest_type']).set_xticklabels(sns.countplot(zomato['rest_type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Restuarant Type')","28bb2db3":"#Gaussian Rest type and Rating\nloc_plt=pd.crosstab(zomato['rate'],zomato['rest_type'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Rest type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Rest type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend().remove();","0f7a164c":"#Types of Services\nsns.countplot(zomato['type'])\nsns.countplot(zomato['type']).set_xticklabels(sns.countplot(zomato['type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Type of Service')","4cc6d0c4":"#Type and Rating\ntype_plt=pd.crosstab(zomato['rate'],zomato['type'])\ntype_plt.plot(kind='bar',stacked=True);\nplt.title('Type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\n","7836e356":"#Cost of Restuarant\nsns.countplot(zomato['cost'])\nsns.countplot(zomato['cost']).set_xticklabels(sns.countplot(zomato['cost']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Cost of Restuarant')","8b398f92":"#NO. of restaurants in a Location',\nfig = plt.figure(figsize=(20,7))\nloc = sns.countplot(x=\"location\",data=zomato_orgnl, palette = \"Set1\")\nloc.set_xticklabels(loc.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Location\",size=18)\nloc\nplt.title('NO. of restaurants in a Location',size = 20,pad=20)","35e274a0":"#Restaurant type\nfig = plt.figure(figsize=(17,5))\nrest = sns.countplot(x=\"rest_type\",data=zomato_orgnl, palette = \"Set1\")\nrest.set_xticklabels(rest.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Restaurant type\",size=15)\nrest \nplt.title('Restaurant types',fontsize = 20 ,pad=20)","a8b22b3e":"#Most famous restaurant chains in Bengaluru\nplt.figure(figsize=(15,7))\nchains=zomato_orgnl['name'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set1')\nplt.title(\"Most famous restaurant chains in Bangaluru\",size=20,pad=20)\nplt.xlabel(\"Number of outlets\",size=15)\n","7bf935e3":"**Location and Rating**","3b3f104d":"**Loading the Dataset**","988de0e6":"**Cost of Restuarant**","203a4787":"**No. of restaurants in a Location',**","9a74c8ef":"# Breakdown of this notebook:\n1. **Loading the dataset:** Load the data and import the libraries. <br>\n2. **Data Cleaning:** <br>\n - Deleting redundant columns.\n - Renaming the columns.\n - Dropping duplicates.\n - Cleaning individual columns.\n - Remove the NaN values from the dataset\n - Some Transformations\n3. **Regression Analysis**\n - Linear Regression\n - Decision Tree Regression\n - Random Forest Regression\n4. **Data Visualization:** Using plots to find relations between the features.\n - Restaurants delivering Online or not\n - Restaurants allowing table booking or not\n - Table booking Rate vs Rate\n - Best Location\n - Relation between Location and Rating\n - Restaurant Type\n - Gaussian Rest type and Rating\n - Types of Services\n - Relation between Type and Rating\n - Cost of Restuarant\n - No. of restaurants in a Location\n - Restaurant type\n - Most famous restaurant chains in Bengaluru ","df4f6a46":"# Regression Analysis","33b9dd30":"**Defining the independent variables and dependent variables**","f9384c02":"**Deleting Unnnecessary Columns**","26db1d25":"**Restaurants allowing table booking or not**","6aaf27f0":"**Table booking Rate vs Rate**","7846908e":"**Removing '\/5' from Rates**","42c8a8ac":"**Restaurant Type**","0bd01615":"# Data Visualization","dade7567":"**Remove the NaN values from the dataset**","993f5b70":"**Removing the Duplicates**","85e63780":"## Decision Tree Regression","2900b876":"**Changing the Columns Names**","4616dd97":"**Reading the dataset**","087f035c":"## For more updates in this kernel checkout this kernel https:\/\/github.com\/chiragsamal\/zomato","9fc2c788":"### Linear Regression","9ef43580":"<h1 align=\"center\">Zomato Restaurants<\/h1>\n![](https:\/\/i1.wp.com\/cdn.inc42.com\/wp-content\/uploads\/2019\/11\/Untitled-design-2019-11-13T081444.265.jpg)","2911661b":"**Restaurant Type**","70a2da6a":"## Extra Tree Regression","9cf3b487":"**Types of Services**","9bac187b":"#### References\n- https:\/\/www.kaggle.com\/parthsharma5795\/finding-the-best-restaurants-in-bangalore\n- https:\/\/www.kaggle.com\/bablukd\/zomato-bangalore-restaurant-rating-prediction","94a26808":"**Location**","d7d853b4":"## Random Forest Regression","fc45fad6":"# <font color='orange'>Please Upvote if you found this helpful:)<\/font>","b033a0e0":"**Restaurants delivering Online or not**","c217a135":"**Type and Rating**","450ed162":"** Adjust the column names**","b8173ce5":"**Encode the input Variables**","acb97953":"**Gaussian Rest type and Rating**","04023c3e":"**Some Transformations**","28c1190a":"**Most famous restaurant chains in Bengaluru**","cbda2aa1":"**Get Correlation between different variables**"}}