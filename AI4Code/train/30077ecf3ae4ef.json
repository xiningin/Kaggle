{"cell_type":{"41aebff5":"code","d791efb1":"code","0b40fd30":"code","2ab6343b":"code","2af9e8cf":"code","65f61a44":"code","4f6c3e18":"code","c2f540b7":"code","e50609d4":"code","e533d070":"code","144060b2":"code","6036fb18":"code","8bce28dc":"code","4e1a37f9":"code","310f299e":"code","e28d2968":"code","4d3d3d3f":"code","ea7de6eb":"code","450bc923":"code","aae6640b":"code","f467c6bf":"code","eb5eb496":"code","3e4cd83e":"code","0573316a":"code","6337391c":"markdown","54e90c18":"markdown","1ec1b06b":"markdown","e0b8433f":"markdown","cc9702e4":"markdown","5375be7e":"markdown","3831d1d8":"markdown","1e6e945b":"markdown","3428468d":"markdown","eb5a008a":"markdown","eeb87d26":"markdown"},"source":{"41aebff5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.dates as mdates\n\n\n\n\nfrom subprocess import check_output\nprint(check_output([\"ls\",\"..\/input\"]).decode(\"utf8\"))\n\n\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d791efb1":"maindata = pd.read_csv(\"..\/input\/covid19-data-set-of-turkey\/tr-covid19.csv\", index_col = 0)\nmaindatac = maindata.copy()","0b40fd30":"# Veri setinin s\u00fctunlar\u0131ndaki isimlendirmede bo\u015fluk bulundu\u011fundan bo\u015fluk yerine '_' gelecek \u015fekilde replace ettik.\n\nmaindatac.columns = maindatac.columns.str.replace(' ','_')","2ab6343b":"# Ay ve Y\u0131l s\u00fctunla\u0131 ekledik\n\nmaindatac['Date'] =  pd.to_datetime(maindatac['Date'], infer_datetime_format=True)\nmaindatac['Month'] = maindatac['Date'].dt.to_period('M')\nmaindatac['Year'] = maindatac['Date'].dt.to_period('Y')","2af9e8cf":"# S\u00fctun isimlerini k\u00fc\u00e7\u00fck harf yapt\u0131k\n\nmaindatac.columns= maindatac.columns.str.lower()","65f61a44":"maindatac.info()\nmaindatac.columns\nmaindatac.head()","4f6c3e18":"maindatac.isnull().sum()","c2f540b7":"maindatac[\"total_number_of_test\"].isnull()","e50609d4":"# Total_number_of_test s\u00fctununun doldurulmas\u0131\nmaindatac[\"total_number_of_test\"].fillna( maindatac.groupby(\"month\")[\"total_number_of_test\"].transform(\"mean\"), inplace = True)\n\n# number_of_critically_ill_patients s\u00fctununun doldurulmas\u0131\nmaindatac[\"number_of_critically_ill_patients\"].fillna( maindatac.groupby(\"month\")[\"number_of_critically_ill_patients\"].transform(\"mean\"), inplace = True)\n\n\n# number_of_cases s\u00fctununun doldurulmas\u0131\nmaindatac[\"number_of_cases\"].fillna( maindatac.groupby(\"month\")[\"number_of_cases\"].transform(\"mean\"), inplace = True)\n\n# number_of_sick s\u00fctununun doldurulmas\u0131a\nmaindatac[\"number_of_sick\"].fillna( maindatac.groupby(\"month\")[\"number_of_sick\"].transform(\"mean\"), inplace = True)\n\n# number_of_test s\u00fctununun doldurulmas\u0131\nmaindatac[\"number_of_test\"].fillna( maindatac.groupby(\"month\")[\"number_of_test\"].transform(\"mean\"), inplace = True)\n\n# number_of_deaths s\u00fctununun doldurulmas\u0131a\nmaindatac[\"number_of_deaths\"].fillna( maindatac.groupby(\"month\")[\"number_of_deaths\"].transform(\"mean\"), inplace = True)\n\n# Number_of_recoveries s\u00fctununun doldurulmas\u0131\nmaindatac[\"number_of_recoveries\"].fillna( maindatac.groupby(\"month\")[\"number_of_recoveries\"].transform(\"mean\"), inplace = True)","e533d070":"maindatac.boxplot(column=\"number_of_deaths\", by=\"month\", figsize= (30,15));\nplt.xlabel(\"Y\u0131llar\");\nplt.ylabel(\"\u00d6l\u00fcm Say\u0131lar\u0131\")\nplt.title(\"Ayk\u0131r\u0131 Durumlar\");\nplt.show();\n","144060b2":"maindatac.corr().T","6036fb18":"f,ax = plt.subplots(figsize=(13,13))\nsns.heatmap(maindatac.corr(), annot=True, linewidths=.5, fmt='.2f', ax=ax);\n","8bce28dc":"# Hasta Say\u0131s\u0131 - Ent\u00fcbe Say\u0131s\u0131 \u0130li\u015fkisi\n\nmaindatac.number_of_sick.plot(kind='line', color ='g', label='Hasta', linewidth=2, alpha=0.5, grid=True, linestyle='--')\nmaindatac.number_of_critically_ill_patients.plot(color='r', label='Ent\u00fcbe', linewidth=2, alpha=0.5, grid=True, linestyle='-.')\nplt.legend(loc='upper right')\n\n\nplt.show()\n\n","4e1a37f9":"# \u00d6l\u00fcm Say\u0131s\u0131 - \u0130yile\u015fen Say\u0131s\u0131 \u0130li\u015fkisi\n\n\nmaindatac.plot(kind='scatter', x='number_of_deaths', y='number_of_recoveries', alpha=0.5, color='red', xlabel='\u00d6len Say\u0131s\u0131', ylabel='\u0130yile\u015fen Say\u0131s\u0131')\nplt.show()\n","310f299e":"\n# Ent\u00fcbe Say\u0131s\u0131 - Hasta Say\u0131s\u0131 \u0130li\u015fkisi ??\n\n\nmaindatac.number_of_sick.plot(kind='hist', bins=10, figsize=(15,5), grid=True, label='Hasta', alpha=.5)\nmaindatac.number_of_critically_ill_patients.plot(kind='hist', bins=10, figsize=(15,5), grid=True, label='Ent\u00fcbe', alpha=0.5)\n\nplt.legend()\nplt.show()\n","e28d2968":"# Vaka Say\u0131s\u0131 - Hasta Say\u0131s\u0131 \u0130li\u015fkisi\n\n\nmaindatac.number_of_sick.plot(kind='line', color ='g', label='Hasta', linewidth=2, alpha=0.5, grid=True, linestyle='--')\nmaindatac.number_of_cases.plot(color='r', label='Vaka', linewidth=2, alpha=0.5, grid=True, linestyle='-.')\nplt.legend(loc='upper right')\n\n\nplt.show()","4d3d3d3f":"# Test Say\u0131s\u0131 - Vaka Say\u0131s\u0131 \u0130li\u015fkisi\n\nmaindatac.number_of_test.plot(kind='line', color ='g', label='Test', linewidth=2, alpha=0.5, grid=True, linestyle='--')\nmaindatac.number_of_cases.plot(color='r', label='Vaka', linewidth=2, alpha=0.5, grid=True, linestyle='-.')\nplt.legend(loc='upper right')\n\n\nplt.show()","ea7de6eb":"# Test Say\u0131s\u0131 - Hasta Say\u0131s\u0131 \u0130li\u015fkisi\n\nmaindatac.number_of_test.plot(kind='line', color ='g', label='Test', linewidth=2, alpha=0.5, grid=True, linestyle='--')\nmaindatac.number_of_sick.plot(color='r', label='Hasta', linewidth=2, alpha=0.5, grid=True, linestyle='-.')\nplt.legend(loc='upper right')\n\n\nplt.show()","450bc923":"# Vaka Say\u0131s\u0131 - \u0130yile\u015fen Say\u0131s\u0131 \u0130li\u015fkisi\n\nmaindatac.number_of_recoveries.plot(kind='line', color ='g', label='\u0130yile\u015fen', linewidth=2, alpha=0.5, grid=True, linestyle='--')\nmaindatac.number_of_cases.plot(color='r', label='Vaka', linewidth=2, alpha=0.5, grid=True, linestyle='-.')\nplt.legend(loc='upper right')\n\n\nplt.show()","aae6640b":"sns.pairplot(maindatac, kind = \"reg\");","f467c6bf":"X = maindatac.drop([\"number_of_cases\", \"number_of_sick\",\"number_of_recoveries\",\"number_of_test\",\"number_of_deaths\",\"date\",\"month\",\"year\"], axis=1)\ny = maindatac[\"total_number_of_deaths\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 42)\n\nprint (\"X_train\", X_train.shape)\nprint (\"X_test\", X_test.shape)\nprint (\"y_train\", y_train.shape)\nprint (\"y_test\", y_test.shape)","eb5eb496":"maindatac[\"total_number_of_deaths\"]\n","3e4cd83e":"reg = LinearRegression()\nmodel = reg.fit(X_train, y_train)\nprint (\"Sabit Katsay\u0131: \", model.intercept_)\nprint(\"De\u011fi\u015fkenlerin Katsay\u0131lar\u0131: \", model.coef_)","0573316a":"lm = sm.OLS(y_train, X_train)\nmodel = lm.fit()\nmodel.summary()\n","6337391c":"maindatac[\"total_number_of_test\"].astype(int)\nmaindatac[\"total_number_of_deaths\"].astype(int)\nmaindatac[\"number_of_critically_ill_patients\"].astype(int)\nmaindatac[\"total_number_of_recoveries\"].astype(int)\nmaindatac[\"number_of_cases\"].astype(int)\nmaindatac[\"number_of_sick\"].astype(int)\nmaindatac[\"number_of_test\"].astype(int)\nmaindatac[\"number_of_deaths\"].astype(int)\nmaindatac[\"number_of_recoveries\"].astype(int)\nmaindatac[\"month\"] = pd.to_datetime(maindatac[\"month\"], format='%Y-%M')","54e90c18":"**\u00c7izgi Grafik Yorumu:**\n\n*Ent\u00fcbe Hasta Say\u0131s\u0131* ile *Hasta Say\u0131s\u0131* aras\u0131nda do\u011fru orant\u0131l\u0131 ili\u015fki line plot sayesinde de g\u00f6z\u00fckmektedir.\n","1ec1b06b":"#### Ayk\u0131r\u0131 De\u011ferlerin Bulunmas\u0131","e0b8433f":"> **Heat Map Yorumu:** <br>\n> Bu grafi\u011fe g\u00f6re *Toplam Test Say\u0131lar\u0131* ile *Toplam Vaka* ve *Toplam \u00d6l\u00fcmler* aras\u0131nda do\u011fru orant\u0131l\u0131 bir ili\u015fki vard\u0131r.","cc9702e4":"<a id='2'><\/a>\n### 2) Bo\u015f ve Ayk\u0131r\u0131 De\u011ferlerin Bulunmas\u0131","5375be7e":"<a id = '5'><\/a>\n### 5) Analiz","3831d1d8":"# Index <br>\n\n&emsp; [1) Veri Setinin Y\u00fcklenmesi ve Veri Setinin D\u00fczenlenmesi](#1) <br>\n&emsp; [2) Bo\u015f ve Ayk\u0131r\u0131 De\u011ferlerin Bulunmas\u0131](#2) <br>\n&emsp; [3) De\u011fi\u015fkenler Aras\u0131ndaki \u0130li\u015fkiDe\u011fi\u015fkenler Aras\u0131ndaki \u0130li\u015fki ](#3)  <br> \n&emsp; [4) Grafikler](#4)  <br>\n&emsp; [5) Analiz](#5)  <br>","1e6e945b":"<a id ='3'><\/a>\n### 3) De\u011fi\u015fkenler Aras\u0131ndaki \u0130li\u015fki","3428468d":"<a id ='4'><\/a>\n### 4) Grafikler","eb5a008a":"<a id ='1'><\/a>\n### 1) Veri Setinin Y\u00fcklenmesi ve Veri Setinin D\u00fczenlenmesi","eeb87d26":"#### Eksik De\u011ferlerin Bulunmas\u0131 ve Doldurulmas\u0131"}}