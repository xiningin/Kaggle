{"cell_type":{"3a1bfd97":"code","f0212c58":"code","3785158f":"code","283e8340":"code","cd4a4a8f":"code","785e0e5d":"code","9a23dfed":"code","770eb0ee":"code","55d88d55":"code","ba7b7180":"code","93426023":"code","faed960f":"code","39a8feb7":"code","da377fcb":"code","ee5d730a":"code","b16bb04f":"code","360cd6ab":"code","cf75ce55":"code","87134d08":"code","7c20680f":"markdown","a980cac4":"markdown","209246a4":"markdown","d35b9b1e":"markdown","c28b5843":"markdown","0cdd09c2":"markdown","aa670f6c":"markdown","4beadb44":"markdown","96ae452c":"markdown","218f6d5c":"markdown","a716127c":"markdown","d9dffef2":"markdown","08150899":"markdown","b3e1bc2b":"markdown"},"source":{"3a1bfd97":"# Installs\n!pip install pycountry_convert \n!pip install folium","f0212c58":"import pycountry_convert as pc\nimport folium\nimport branca\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas_profiling \nimport matplotlib.pyplot as plt\nfrom matplotlib import ticker \n%matplotlib inline\nfrom datetime import datetime, timedelta,date\nfrom scipy.interpolate import make_interp_spline, BSpline\nimport plotly.express as px\nimport json, requests\nimport seaborn as sns\nsns.set()\nimport cufflinks as cf\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nfrom datetime import datetime\n\nfrom keras.layers import Input, Dense, Activation, LeakyReLU\nfrom keras import models\nfrom keras.optimizers import RMSprop, Adam","3785158f":"# Load Europe CDC data\ndf = pd.read_csv('\/kaggle\/input\/covid19-european-cdc\/download')\n\n# Load Data Repository by Johns Hopkins CSSE\nglobal_confirmed_cases = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\nglobal_deaths_cases = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\n#countrywise_cases = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases_country.csv\")\ndf_full = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv',parse_dates=['Last Update'])\ndf_full.rename(columns={'ObservationDate':'Date', 'Country\/Region':'Country'}, inplace=True)\n\ndf_confirmed = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ndf_recovered = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\")\ndf_deaths = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\n\ndf_confirmed.rename(columns={'Country\/Region':'Country'}, inplace=True)\ndf_recovered.rename(columns={'Country\/Region':'Country'}, inplace=True)\ndf_deaths.rename(columns={'Country\/Region':'Country'}, inplace=True)\n","283e8340":"df.profile_report()","cd4a4a8f":"df['Date'] = df.apply(lambda row: datetime.strptime(f\"{int(row.month)}\/{int(row.day)}\/{int(row.year)}\", '%m\/%d\/%Y'), axis=1)\ndf = df.rename(columns={\"countriesAndTerritories\": \"Country\",\"deaths\": \"Deaths\",\"cases\":\"Cases\"})\n# Create Europe data subset\ndf_europe = df.copy()\ncountries = [\"United_States_of_America\",\"Slovakia\", \"Finland\", \"Sweden\", \"United Kingdom\", \"Poland\", \"Portugal\", \"Romania\", \"Slovenia\", \"North Macedonia\", \"Bulgaria\", \"Belgium\", \"Denmark\", \"Czechia\", \"Estonia\", \"Germany\", \"Greece\", \"Ireland\", \"France\", \"Spain\", \"Italy\", \"Croatia\", \"Latvia\", \"Cyprus\", \"Luxembourg\", \"Lithuania\", \"Malta\", \"Hungary\", \"Austria\", \"Netherlands\", \"Russia\", \"Norway\", \"Switzerland\"]\ndf_europe= df_europe[df_europe.Country.isin(countries)]\n# Filter based on Europe dataset\ndf_countries_cases = df_europe.copy().drop(['day','month','year','popData2018','dateRep'],axis =1)\ndf_countries_cases = df_countries_cases.groupby([\"Country\"]).sum()\ndf_countries_cases.sort_values(['Cases','Deaths'], ascending= False).style.background_gradient(cmap='Wistia')","785e0e5d":"global_confirmed_cases = global_confirmed_cases.rename(columns={\"Province\/State\":\"state\",\"Country\/Region\": \"country\"})\n# Create Europe data subset\ndf_europe_JK = global_confirmed_cases.copy()\ncountries = [\"United_States_of_America\",\"Slovakia\", \"Finland\", \"Sweden\", \"United Kingdom\", \"Poland\", \"Portugal\", \"Romania\", \"Slovenia\", \"North Macedonia\", \"Bulgaria\", \"Belgium\", \"Denmark\", \"Czechia\", \"Estonia\", \"Germany\", \"Greece\", \"Ireland\", \"France\", \"Spain\", \"Italy\", \"Croatia\", \"Latvia\", \"Cyprus\", \"Luxembourg\", \"Lithuania\", \"Malta\", \"Hungary\", \"Austria\", \"Netherlands\", \"Russia\", \"Norway\", \"Switzerland\"]\ndf_europe_JK= df_europe_JK[df_europe_JK.country.isin(countries)]\n\n","9a23dfed":"# Filter based on Europe confirmed cases dataset\nconfirmed_cases_report = df_europe_JK.copy()\nconfirmed_cases_report = confirmed_cases_report.groupby(\"country\").sum().drop([\"Lat\",\"Long\"],axis =1)\nconfirmed_cases_report.loc[\"Total\"] = confirmed_cases_report.sum()\nglobal_confirmed_cases = confirmed_cases_report.groupby(level =0).diff(axis =1)\nglobal_confirmed_cases = global_confirmed_cases.replace(np.nan, 0, regex=True)","770eb0ee":"global_deaths_cases.head()","55d88d55":"global_deaths_cases = global_deaths_cases.rename(columns={\"Province\/State\":\"state\",\"Country\/Region\": \"country\"})\n# Create Europe data subset\ndf_europe_deaths = global_deaths_cases.copy()\ncountries = [\"Slovakia\", \"Finland\", \"Sweden\", \"United Kingdom\", \"Poland\", \"Portugal\", \"Romania\", \"Slovenia\", \"North Macedonia\", \"Bulgaria\", \"Belgium\", \"Denmark\", \"Czechia\", \"Estonia\", \"Germany\", \"Greece\", \"Ireland\", \"France\", \"Spain\", \"Italy\", \"Croatia\", \"Latvia\", \"Cyprus\", \"Luxembourg\", \"Lithuania\", \"Malta\", \"Hungary\", \"Austria\", \"Netherlands\", \"Russia\", \"Norway\", \"Switzerland\"]\ndf_europe_deaths= df_europe_deaths[df_europe_deaths.country.isin(countries)]","ba7b7180":"# Filter based on Europe deaths dataset\ndeaths_report = df_europe_deaths.copy()\ndeaths_report = deaths_report.groupby(\"country\").sum().drop([\"Lat\",\"Long\"],axis =1)\ndeaths_report.loc[\"Total\"] = deaths_report.sum()\nglobal_deaths_cases = deaths_report.groupby(level =0).diff(axis =1)\nglobal_deaths_cases = global_deaths_cases.replace(np.nan, 0, regex=True)","93426023":"f = plt.figure(figsize=(10,5))\nf.add_subplot(111)\nplt.axes(axisbelow=True)\nplt.barh(df_countries_cases.sort_values('Cases')[\"Cases\"].index[-10:],df_countries_cases.sort_values('Cases')[\"Cases\"].values[-10:],color=\"darkred\")\nplt.tick_params(size=5,labelsize = 13)\nplt.xlabel(\"Confirmed Cases\",fontsize=18)\nplt.title(\"Top 10 Countries (Confirmed Cases)\",fontsize=20)\nplt.grid(alpha=0.3)","faed960f":"f = plt.figure(figsize=(10,5))\nf.add_subplot(111)\nplt.axes(axisbelow=True)\nplt.barh(df_countries_cases.sort_values('Deaths')[\"Deaths\"].index[-10:],df_countries_cases.sort_values('Deaths')[\"Deaths\"].values[-10:],color=\"darkorange\")\nplt.tick_params(size=5,labelsize = 13)\nplt.xlabel(\"Death Cases\",fontsize=18)\nplt.title(\"Top 10 Countries ( Death Cases)\",fontsize=20)\nplt.grid(alpha=0.3,which='both')","39a8feb7":"df_data = df_europe.groupby(['Date', 'Country'])['Cases', 'Deaths'].max().reset_index()\ndf_data[\"Date\"] = pd.to_datetime( df_data[\"Date\"]).dt.strftime('%m\/%d\/%Y')\n\nfig = px.scatter(df_data, y=df_data[\"Deaths\"],\n                    x= df_data[\"Cases\"]+1,\n                    range_y = [1,df_data[\"Deaths\"].max()+1000],\n                    range_x = [1,df_data[\"Cases\"].max()+10000],\n                    color= \"Country\", hover_name=\"Country\",\n                    hover_data=[\"Cases\",\"Deaths\"],\n                    range_color= [0, max(np.power(df_data[\"Deaths\"],0.3))], \n                    animation_frame=\"Date\", \n                    animation_group=\"Country\",\n                    color_continuous_scale=px.colors.sequential.Plasma,\n                    title='COVID-19: Change in Deaths vs Cases per Country Over Time',\n                    size = np.power(df_data[\"Deaths\"]+1,0.3)-0.5,\n                    size_max = 30,\n                    log_x=True,\n                    log_y=True,\n                    height =700,\n                    )\nfig.update_coloraxes(colorscale=\"hot\")\nfig.update(layout_coloraxis_showscale=False)\nfig.update_xaxes(title_text=\"Confirmed Cases (Log Scale)\")\nfig.update_yaxes(title_text=\"Deaths Rate (Log Scale)\")\nfig.show()","da377fcb":"f = plt.figure(figsize=(15,8))\nax1 = f.add_subplot(111)\n\nax1.bar(confirmed_cases_report[confirmed_cases_report.index == \"Italy\"].columns,global_confirmed_cases[global_confirmed_cases.index == \"Italy\"].values[0], label = \"Italy (New)\",color='dodgerblue')\nax1.bar(confirmed_cases_report[confirmed_cases_report.index == \"Spain\"].columns,global_confirmed_cases[global_confirmed_cases.index == \"Spain\"].values[0], bottom=global_confirmed_cases[global_confirmed_cases.index == \"Spain\"].values[0],label = \"Spain (New)\",color='orangered')\n\n# Labels\nax1.set_xlabel(\"Dates\",fontsize=17)\nax1.set_ylabel(\"New Cases Reported\",fontsize =17)\n\nax1.tick_params(size=10,labelsize=15)\nax1.set_xticks(np.arange(0.5, len(confirmed_cases_report.columns), 6))\nax1.set_xticklabels([datetime.strptime(date,'%m\/%d\/%y').strftime(\"%d %b\") for date in confirmed_cases_report.columns][::6],fontsize=15)\nax1.set_yticks(np.arange(0, confirmed_cases_report.max(axis = 1)[2]\/10+10000, 5000))\n\n\nax2 = ax1.twinx()\nmarker_style = dict(linewidth=6, linestyle='-', marker='o',markersize=10, markerfacecolor='#ffffff')\n\nax2.plot(confirmed_cases_report[confirmed_cases_report.index == \"Total\"].columns ,confirmed_cases_report[confirmed_cases_report.index == \"Total\"].values[0],**marker_style,label = \"Europe Total (Cumulative)\",color=\"darkorange\",clip_on=False)\nax2.plot(confirmed_cases_report[confirmed_cases_report.index == \"Italy\"].columns ,confirmed_cases_report[confirmed_cases_report.index == \"Italy\"].values[0],**marker_style,label = \"Italy (Cumulative)\",color=\"limegreen\",clip_on=False)\nax2.plot(confirmed_cases_report[confirmed_cases_report.index == \"Spain\"].columns ,confirmed_cases_report[confirmed_cases_report.index == \"Spain\"].values[0],**marker_style,label =\"Spain (Cumulative)\",color=\"darkviolet\",clip_on=False)\nax2.bar([0],[0])\n\n# Label\nax2.tick_params(labelsize=15)\nax2.set_ylabel(\"Cumulative\",fontsize =17)\nax2.set_xticks(np.arange(0.5, len(confirmed_cases_report.columns), 6))\nax2.set_xticklabels([datetime.strptime(date,'%m\/%d\/%y').strftime(\"%d %b\") for date in confirmed_cases_report.columns][::6])\nax2.set_yticks(np.arange(0, confirmed_cases_report.max(axis = 1)[2]+50000, 50000))\n\nf.tight_layout()\nf.legend(loc = \"upper left\", bbox_to_anchor=(0.1,0.95))\nplt.title(\"COVID-19 Confirmed Cases: Europe\",fontsize = 22)\nplt.show()","ee5d730a":"f = plt.figure(figsize=(15,8))\nax1 = f.add_subplot(111)\n\nax1.bar(deaths_report[deaths_report.index == \"Italy\"].columns,global_deaths_cases[global_deaths_cases.index == \"Italy\"].values[0], label = \"Italy (New)\",color='dodgerblue')\nax1.bar(deaths_report[deaths_report.index == \"Spain\"].columns,global_deaths_cases[global_deaths_cases.index == \"Spain\"].values[0], bottom=global_deaths_cases[global_deaths_cases.index == \"Spain\"].values[0],label = \"Spain (New)\",color='orangered')\n\n# Labels\nax1.set_xlabel(\"Dates\",fontsize=17)\nax1.set_ylabel(\"New Deaths Reported\",fontsize =17)\n\nax1.tick_params(size=10,labelsize=15)\nax1.set_xticks(np.arange(0.5, len(deaths_report.columns), 6))\nax1.set_xticklabels([datetime.strptime(date,'%m\/%d\/%y').strftime(\"%d %b\") for date in deaths_report.columns][::6],fontsize=15)\nax1.set_yticks(np.arange(0, deaths_report.max(axis = 1)[2]\/10+10000, 5000))\n\n\nax2 = ax1.twinx()\nmarker_style = dict(linewidth=6, linestyle='-', marker='o',markersize=10, markerfacecolor='#ffffff')\n\nax2.plot(deaths_report[deaths_report.index == \"Total\"].columns ,deaths_report[deaths_report.index == \"Total\"].values[0],**marker_style,label = \"Europe Total (Cumulative)\",color=\"darkorange\",clip_on=False)\nax2.plot(deaths_report[deaths_report.index == \"Italy\"].columns ,deaths_report[deaths_report.index == \"Italy\"].values[0],**marker_style,label = \"Italy (Cumulative)\",color=\"limegreen\",clip_on=False)\nax2.plot(deaths_report[deaths_report.index == \"Spain\"].columns ,deaths_report[deaths_report.index == \"Spain\"].values[0],**marker_style,label =\"Spain (Cumulative)\",color=\"darkviolet\",clip_on=False)\nax2.bar([0],[0])\n\n# Label\nax2.tick_params(labelsize=15)\nax2.set_ylabel(\"Cumulative\",fontsize =17)\nax2.set_xticks(np.arange(0.5, len(deaths_report.columns), 6))\nax2.set_xticklabels([datetime.strptime(date,'%m\/%d\/%y').strftime(\"%d %b\") for date in deaths_report.columns][::6])\nax2.set_yticks(np.arange(0, deaths_report.max(axis = 1)[2]+50000, 50000))\n\nf.tight_layout()\nf.legend(loc = \"upper left\", bbox_to_anchor=(0.1,0.95))\nplt.title(\"COVID-19 Death Cases: Europe\",fontsize = 22)\nplt.show()","b16bb04f":"df_confirmed = df_confirmed[[\"Province\/State\",\"Lat\",\"Long\",\"Country\"]]\ndf_temp = df_full.copy()\ndf_temp['Country'].replace({'Mainland China': 'China'}, inplace=True)\ndf_latlong = pd.merge(df_temp, df_confirmed, on=[\"Country\", \"Province\/State\"])","360cd6ab":"fig = px.density_mapbox(df_latlong, \n                        lat=\"Lat\", \n                        lon=\"Long\", \n                        hover_name=\"Country\", \n                        hover_data=[\"Confirmed\",\"Deaths\",\"Recovered\"], \n                        animation_frame=\"Date\",\n                        color_continuous_scale=\"Portland\",\n                        radius=1, \n                        zoom=2,height=700)\nfig.update_layout(title='Europe Corona Virus Cases Time Lapse - Confirmed, Deaths, Recovered',\n                  font=dict(family=\"Courier New, monospace\",\n                            size=18,\n                            color=\"#7f7f7f\")\n                 )\nfig.update_layout(mapbox_style=\"open-street-map\", mapbox_center_lon=0)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n\n\nfig.show()","cf75ce55":"# Visible = Input(shape=(1,))\n# Dense_l1 = Dense(80,name=\"Dense_l1\")(Visible)\n# LRelu_l1 = LeakyReLU(name = \"LRelu_l1\")(Dense_l1)\n# Dense_l2 = Dense(80,name = \"Dense_l2\")(LRelu_l1)\n# LRelu_l2 = LeakyReLU(name = \"LRelu_l2\")(Dense_l2)\n# Dense_l3 = Dense(1,name=\"Dense_l3\")(LRelu_l2)\n# LRelu_l3 = LeakyReLU(name = \"Output\")(Dense_l3)\n# model = models.Model(inputs=Visible, outputs=LRelu_l3)\n# model.compile(optimizer=Adam(lr=0.001), \n#               loss='mean_squared_error',\n#               metrics=['accuracy'])\n# model.summary()","87134d08":"# epochs = 500\n# model.fit(data_x.reshape([data_y.shape[0],1]),data_y.reshape([data_y.shape[0],1]),epochs=epochs)","7c20680f":"## Europe Corona Virus Cases Time Lapse - Confirmed, Deaths, Recovered","a980cac4":"## Data Analysis\n\n### 1. Europe CDC Data Analysis","209246a4":"## Prediction Model:\n","d35b9b1e":"### Death Rate of Each European Country Over Time","c28b5843":"## Load data","0cdd09c2":"# Import Packages\n\n* Pandas - for dataset handeling\n* Numpy - Support for Pandas and calculations\n* Matplotlib - for visualization (Platting graphas)\n* pycountry_convert - Library for getting continent (name) to from their country names\n* folium - Library for Map\n* Seaborn - for data visualisation\n* plotly - for interative plots\n* PandasProfiling - Python package to help understand data quickly","aa670f6c":"# Tracing Covid19 Spread across USA & Europe - Data Analysis & Visualisation\n![](https:\/\/www.genengnews.com\/wp-content\/uploads\/2020\/02\/Feb27_2020_CDC_Coronavirus-1068x601.jpg)\n![](https:\/\/media.arxiv-vanity.com\/render-output\/2249880\/images\/omni\/XDL.png)\n## Data Source\n### 1. European Centre for Disease Prevention and Control\nThe dataset contains the latest available public data on COVID-19 including a daily situation update, the epidemiological curve and the global geographical distribution (EU\/EEA and the UK, worldwide). On 12 February 2020, the novel coronavirus was named severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) while the disease associated with it is now referred to as COVID-19. ECDC is closely monitoring this outbreak and providing risk assessments to guide EU Member States and the EU Commission in their response activities.\n#### Geographical Coverage\nSlovakia, Finland, Sweden, United Kingdom, Poland, Portugal, Romania, Slovenia, China, North Macedonia, Bulgaria, Belgium, Denmark, Czechia, Estonia, Germany, Greece, Ireland, France, Spain, Italy, Croatia, Latvia, Cyprus, Luxembourg, Lithuania, Malta, Hungary, Austria, Netherlands, Russia, Norway, Switzerland\n#### [Source Link](https:\/\/data.europa.eu\/euodp\/en\/data\/dataset\/covid-19-coronavirus-data)\n### 2. Data Repository by Johns Hopkins CSSE\nThis is the data repository by the Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE).\n#### [Source Link](https:\/\/github.com\/CSSEGISandData\/COVID-19)","4beadb44":"## 2. John Hopkins:","96ae452c":"# Preprocessing\n## 1. Europe CDC :","218f6d5c":"# Data Visualisation\n## 1.Europe CDC:\n### Top 10 Europe countries (Confirmed Cases and Deaths)","a716127c":"## 2. John Hopkins Data:\n### COVID-19 Confirmed Cases: Europe","d9dffef2":"# Download & Install Prerequisite \n**Install:**\n* pycountry_convert \n* folium","08150899":"## Please note that this notebook is work in progress. So far I hope you liked this post covering COVID 19 spread across Europe.Greatly appreciate to leave your comments\/views\/upvote.\n\n### Keep watching my posts in the coming days .","b3e1bc2b":"### COVID-19 Deaths across Europe"}}