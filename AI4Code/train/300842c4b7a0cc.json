{"cell_type":{"1fadf06e":"code","8d051103":"code","18407865":"code","08935b0d":"code","d159e257":"code","9f56f361":"code","eea42773":"code","d929ed29":"code","fccafbb0":"code","6ecb6da2":"code","8f62f591":"code","192e2938":"code","9e919899":"code","c004cc04":"code","15a4cebe":"code","0ec6a7fd":"code","b6767a40":"code","9b13a03f":"code","54f032e4":"code","638f767e":"code","55c475a3":"code","c0665003":"code","4287fe94":"code","fc32406a":"code","d6cbe195":"code","ceb775b4":"code","eb98c65d":"code","2ca1183e":"code","1419b758":"code","5123a074":"code","91accdca":"code","d46072d6":"markdown","df4f6330":"markdown","85d785f5":"markdown","c14905ca":"markdown","4754982f":"markdown","affd4457":"markdown"},"source":{"1fadf06e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d051103":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","18407865":"df = pd.read_csv(\"\/kaggle\/input\/car-price-prediction\/car data.csv\")","08935b0d":"df.head()","d159e257":"df.shape","9f56f361":"#adding one column \"current year\" just to get the total year\ndf['current year']=2021","eea42773":"df['Total year']=df['current year']-df['Year']\ndf.head()","d929ed29":"#check for any null\ndf.isnull().sum()","fccafbb0":"#Drop Year and current year\ndf.drop('Year',axis=1,inplace=True)\ndf.drop('current year',axis=1,inplace=True)","6ecb6da2":"df.head()","8f62f591":"#Cheching for unique values in different coloumns\n\nprint(df['Fuel_Type'].unique())\nprint(df['Seller_Type'].unique())\nprint(df['Transmission'].unique())","192e2938":"plt.figure(figsize=[12,8])\nsns.countplot(x='Total year',data=df)","9e919899":"#the above graph shows recent sell were high\n#The above Countplot shows the Number of cars for each year","c004cc04":"sns.pairplot(df)","15a4cebe":"plt.figure(figsize=[12,8])\nsns.heatmap(df.corr(),annot=True,cmap='PuBuGn')","0ec6a7fd":"plt.figure(figsize=[9,6])\nplt.subplot(1,2,1)\nsns.barplot(x='Fuel_Type',y='Selling_Price',data=df)\nplt.subplot(1,2,2)\nsns.stripplot(x='Fuel_Type',y='Selling_Price',data=df)","b6767a40":"# car name is not required\ndf.drop('Car_Name',axis=1,inplace=True)","9b13a03f":"df.head()","54f032e4":"# Here we have three categorical features Fuel_Type Seller_Type Transmission \ndf.head()\nprint(df['Fuel_Type'].unique())\nprint(df['Seller_Type'].unique())\nprint(df['Transmission'].unique())","638f767e":"#here we are using drop_first=True so that for Fuel_Type we will data like\n# petrol diesel cng\n# 0.     0.     1\n# means we have cng but we have categorized our data on basis of petrol and diesel, means if both are 0\n# its clear that fuel is cng, so inorder to not keep both zero we are using this\ndf=pd.get_dummies(df,drop_first=True)","55c475a3":"df.head()","c0665003":"#taking X and y values\ny=df['Selling_Price']\nX=df.drop('Selling_Price',axis=1)","4287fe94":"X.head()","fc32406a":"y.head()","d6cbe195":"#Feature Importance\nfrom sklearn.ensemble import ExtraTreesRegressor\netr=ExtraTreesRegressor()\netr.fit(X,y)","ceb775b4":"print(etr.feature_importances_)","eb98c65d":"#plotting important feature\nimp=pd.Series(etr.feature_importances_,index=X.columns)\nimp.nlargest(5).plot(kind='barh')\nplt.show()","2ca1183e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20,random_state=2)","1419b758":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(X_train,y_train)","5123a074":"predict1=lr.predict(X_test)","91accdca":"plt.figure(figsize=[10,6])\nplt.plot(predict1,label='Predicted')\nplt.plot(y_test.values,label=\"Actual_test\")\nplt.legend()\nplt.title(\"Linear Regression Model\")","d46072d6":"here we can see that Toatl year Vs Selling price if the car is used for less year the price is high","df4f6330":"from above we can see that price for diesel vehicle is high","85d785f5":"> Creating dummy variables for categorical features","c14905ca":"**Checking relationship between features**","4754982f":"**Exploratory Data Analysis**","affd4457":"**Visualizing selling price relationship with other features**"}}