{"cell_type":{"f9f614b8":"code","fb2c4d8d":"code","509b68f4":"code","0b4a645f":"code","132aaff8":"code","32616197":"code","bd523011":"code","185531ea":"code","5984a781":"code","ec684f6e":"code","efbd1b94":"code","f11b7716":"code","73b2920c":"code","cc0d82bc":"code","1ba10fd3":"code","359049dd":"markdown","ac221d8d":"markdown","171cd190":"markdown"},"source":{"f9f614b8":"!pip install -Uqq fastai","fb2c4d8d":"from fastai.tabular.all import *\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import classification_report, log_loss, accuracy_score","509b68f4":"train0 = pd.read_csv('..\/input\/titanic\/train.csv')\ntest0 = pd.read_csv('..\/input\/titanic\/test.csv')","0b4a645f":"data = pd.concat([train0, test0], sort=False)","132aaff8":"data['Sex'].replace(['male','female'], [0, 1], inplace=True)\ndata['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)\ndata['fare_value']=data['Fare']\/50\nage_avg = data['Age'].mean()\nage_std = data['Age'].std()\ndata['Age'].fillna(np.random.randint(age_avg - age_std, age_avg + age_std), inplace=True)\ndata['age_value']=data['Age']\/50\ndata['family'] = (data['SibSp'] + data['Parch'])\/5\ndata['isAlone'] = 0\ndata.loc[data['family'] > 0, 'isAlone'] = 1\ndelete_columns = ['Name','SibSp','Parch','Ticket','Cabin','Age','Fare']\ndata.drop(delete_columns, axis=1, inplace=True)","32616197":"data","bd523011":"df_train = data[:len(train0)]\ndf_test = data[len(train0):]","185531ea":"df_test.info()","5984a781":"# input dummy data for Survived in df_test\ndf_test=df_test.fillna(1)\ndf_test","ec684f6e":"config = tabular_config(embed_p=0.2)\nconfig","efbd1b94":"idx = list(range(len(df_train)))","f11b7716":"cont_names = list(df_train.drop(['PassengerId','Survived'], axis=1).columns)","73b2920c":"kf = KFold(n_splits=12, shuffle=True)\npreds_fold = []\n\nfor fold, (train_index, valid_index) in enumerate(kf.split(idx)):\n    print(f'Fold {fold}')\n    \n    to = TabularPandas(df_train, procs=[Categorify,FillMissing,Normalize],\n                       y_block = CategoryBlock(),\n                       cont_names = cont_names,\n                       y_names='Survived',\n                       splits=(list(train_index), list(valid_index)))\n    \n    dls = to.dataloaders(bs=16)    #### tabularpandas to dataloaders\n    \n    learn = tabular_learner(dls, metrics=accuracy, config=config, layers = [100,50])\n    learn.fit_one_cycle(15, lr_max=2e-3, cbs=[EarlyStoppingCallback(monitor='accuracy', patience=5), \n                                              ReduceLROnPlateau(monitor='valid_loss', patience=5), \n                                              SaveModelCallback(monitor='accuracy')])\n    \n    dl = learn.dls.test_dl(df_test)\n    preds = learn.get_preds(dl=dl)\n    results = preds[0].argmax(axis=1)\n    results = results.tolist()\n    preds_fold.append(results)","cc0d82bc":"preds_fold = np.array(preds_fold)\nfinal_preds = preds_fold[-1]\nprint(final_preds)","1ba10fd3":"submit=pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmit['Survived']=final_preds\nsubmit.to_csv('submission.csv',index=None)\nsubmit","359049dd":"![Upvote!](https:\/\/img.shields.io\/badge\/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)","ac221d8d":"# Titanic2 Fastai with TabularPandas\nThis notebook referred to the following notebook.<br\/>\nhttps:\/\/www.kaggle.com\/dienhoa\/tabular-playgroud-fastai","171cd190":"#### use tabularpandas, predict by fastai (this notebook)\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic2-fastai-with-tabularpandas\n#### use tabularpandas, predict not by fastai\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic-classify-with-fastai-tabularpandas\n#### not use tabularpandas, predict by fastai\nhttps:\/\/www.kaggle.com\/stpeteishii\/titanic-fastai"}}