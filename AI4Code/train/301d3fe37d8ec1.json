{"cell_type":{"55bdebd9":"code","9eca0c04":"code","88091685":"code","88a83f18":"code","ede59c58":"code","2691cecb":"code","a6543026":"code","fd483705":"code","4be0b7b7":"code","ea5bd970":"code","21d2c5e1":"code","ec2433e6":"code","70462977":"code","050d05e5":"code","1dcf692c":"markdown","e3a94f55":"markdown","a9b71ef0":"markdown","ab89011a":"markdown","ce76ac5c":"markdown","44e0b66c":"markdown","f56c6030":"markdown","d4b3b48a":"markdown","680e8c5a":"markdown","8e372857":"markdown","931bb9ce":"markdown"},"source":{"55bdebd9":"import xarray as xr\nimport datetime\nimport matplotlib.patches as mpatches\nimport matplotlib.pyplot as plt\nfrom matplotlib import colors\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# Any results you write to the current directory are saved as output.","9eca0c04":"zone = 'NW'  #on Kaggle, only the North-West zone is available\nyear = '2016' ","88091685":"fname = \"\/kaggle\/input\/meteonet\/Satellite_CT\/Satellite_CT\/CT_%s_%s.nc\" % (zone,year) #it is about a data sample : a few days in 2016 in NW zone\ndata = xr.open_dataset(fname)","88a83f18":"# information about color palette\nnbClasses = 16\nCLOUD_TYPE_16 = {\n    \"0\":\"No data\",\n    \"1\":\"Cloud-free land\",\n    \"2\":\"Cloud-free sea\",\n    \"3\":\"Snow over land\",\n    \"4\": \"Sea ice\",\n    \"5\":\"Very low clouds\",\n    \"6\":\"Low clouds\",\n    \"7\":\"Mid-level clouds\",\n    \"8\":\"High opaque clouds\",\n    \"9\":\"Very high opaque clouds\",\n    \"10\":\"Fractional clouds\",\n    \"11\":\"High semi transparent thin clouds\",\n    \"12\":\"High semi transparent meanly thick clouds\",\n    \"13\":\"High semi transparent thick clouds\",\n    \"14\":\"High semi transparent above low or medium clouds\",\n    \"15\":\"High semi transparent above snow\/ice\"\n}\n\nCT_16_COLOR_MAP = [[0.39215686, 0.39215686, 0.39215686],\n                   [0., 0.47058824, 0.],\n                   [0., 0., 0.],\n                   [0.98039216, 0.74509804, 0.98039216],\n                   [0.8627451, 0.62745098, 0.8627451],\n                   [1., 0.39215686, 0.],\n                   [1., 0.70588235, 0.],\n                   [0.94117647, 0.94117647, 0.],\n                   [0.84313725, 0.84313725, 0.58823529],\n                   [0.90196078, 0.90196078, 0.90196078],\n                   [0.78431373, 0., 0.78431373],\n                   [0., 0.31372549, 0.84313725],\n                   [0., 0.70588235, 0.90196078],\n                   [0., 0.94117647, 0.94117647],\n                   [0.35294118, 0.78431373, 0.62745098],\n                   [1, 0.6, 1]]\ncolor = CT_16_COLOR_MAP\nlegend = CLOUD_TYPE_16\ncmap = colors.ListedColormap(color)\nnorm = colors.BoundaryNorm([i for i in range(nbClasses+1)], cmap.N)\n\npatches = [mpatches.Patch(color=color[i], label=legend[str(i)]) for i in range(nbClasses)]","ede59c58":"data.isel(time=[0,3,5,7])['CT'].plot(x='lon', y='lat',col='time',cmap=cmap, norm=norm)\nplt.show()","2691cecb":"data","a6543026":"coord = 'lon'\ndata[coord]","fd483705":"data[coord].values[0:10]","4be0b7b7":"dates = data['time']\ndates","ea5bd970":"d = data['CT']\nd_vals = d.values  #get the values \nprint(d)","21d2c5e1":"d_vals.shape","ec2433e6":"import cartopy.crs as ccrs\nimport cartopy.feature as cfeature","70462977":"#studied date\nstudied_date = '201601010245'\ndate = datetime.datetime.strptime(studied_date,'%Y%m%d%H%M')","050d05e5":"# Coordinates of studied area boundaries (in \u00b0N and \u00b0E)\nlllat = 46.25  #lower left latitude\nurlat = 51.896  #upper right latitude\nlllon = -5.842  #lower left longitude\nurlon = 2  #upper right longitude\nextent = [lllon, urlon, lllat, urlat]\n\nfig = plt.figure(figsize=(8,9))\n\n# Select projection\nax = plt.axes(projection=ccrs.PlateCarree())\n\n# Plot the data\nimg = plt.imshow(data.sel(time=date)['CT'], interpolation='none', origin='upper',cmap=cmap, norm=norm, extent=extent)\n\n# Add coastlines and borders\nax.coastlines(resolution='50m', linewidth=1)\nax.add_feature(cfeature.BORDERS.with_scale('50m'))\n\n# Show only the area we defined\nax.set_extent(extent)\n\nplt.colorbar(img, orientation= 'horizontal', pad=0.03).set_label('Cloud Type (CT)')\nplt.legend(handles=patches, loc='lower center',ncol=2,bbox_to_anchor=(0.12, -0.5, 0.8, 0.4),fontsize = 'x-small')\nplt.title('CT data - '+ zone + ' zone - '+ studied_date)\nplt.show()","1dcf692c":"## Parameters definition\n\nSelect the year you want to study:","e3a94f55":"Get the information about the CT data:","a9b71ef0":"# Note\n\n<font size=\"4.5\">To use <span style=\"color:blue\">**Cartopy**<\/span>, a library to plot data with basemaps (see cells below), it is necessary to <span style=\"color:red\">activate the internet connection<\/span> of that notebook (in edit mode, you can find on the right column, in the *Settings* section, a row entitled *Internet*, put the slider bar on **on**).  <\/font>","ab89011a":"## Loading data using parameters","ce76ac5c":"## Exploration of metadata\n\nOverview of the data:","44e0b66c":"Get the information about coordinates (latitude and longitude). It is in degrees (north degrees about latitude and east degrees about longitude).","f56c6030":"## Quick field visualisation\n\nThe following command shows the CT data on a given zone at different dates (dates indexes : 0,3,5 and 7).","d4b3b48a":"Get the information about the observation times:","680e8c5a":"# Satellite data : CT (Cloud Type)\n\nThe aim of this notebook is to show how to read the Cloud Type (CT) satellite data from a data sample.\n\nYou will find one NetCDF file per geographic zone ('NW' for North-West of France and 'SE' for South-East of France) and per year. \n\nFor each pixel, the value represents a category of cloud type (16 classes in total):\n* 0:No data\n* 1:Cloud-free land\n* 2:Cloud-free sea\n* 3:Snow over land\n* 4:Sea ice\n* 5:Very low clouds\n* 6:Low clouds\n* ...\n\nThe spatial resolution is 0.03\u00b0 and the time step is 15 minutes but some dates can be missing (due to problems in original data, so we can do anything).\n\n\nFor more information, cf [documentation](https:\/\/meteofrance.github.io\/meteonet\/english\/data\/satellite\/).","8e372857":"## Plotting data with Cartopy\n\nPlot the data for one given date with Cartopy:","931bb9ce":"The structure of the data (3 dimensions):\n* number of observation times\n* number of points in latitude \n* number of points in longitude"}}