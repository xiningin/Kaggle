{"cell_type":{"6c5f6581":"code","76ed5db6":"code","4f886f80":"code","e13c1f88":"code","c9a4ca06":"code","7f293e01":"code","1d19526e":"code","28324f22":"code","1572b454":"code","73dbbd3b":"code","a0b049c1":"code","d853b61e":"code","47a7d480":"code","c9ec15a1":"code","94b00948":"markdown","85f83998":"markdown","c306d451":"markdown","d8629e62":"markdown","05ae18d5":"markdown","1db4c8d1":"markdown","904ec0a0":"markdown","a4561ea9":"markdown","a39cfb9c":"markdown","82128002":"markdown","95e6e390":"markdown"},"source":{"6c5f6581":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('ggplot')","76ed5db6":"import warnings\nwarnings.filterwarnings(\"ignore\")","4f886f80":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndf = pd.read_csv(\"..\/input\/hotel-booking-demand\/hotel_bookings.csv\")","e13c1f88":"types = df.dtypes\ndistinct = df.nunique()\ncount_na = df.isna().sum()\npercent_na = round((df.isna().sum()\/len(df))*100, 3)\n\ndata = pd.concat([types, distinct, count_na, percent_na], axis=1)\ndata.reset_index(level=0, inplace=True)\ndata.rename(columns = {'index':'column', 0:'types', 1:'distinct', 2:'count_na', 3: 'percent_na'}, inplace = True)","c9a4ca06":"print(data.count_na.sum())\ndata","7f293e01":"data[data['count_na'] > 0]","1d19526e":"# plt.figure(figsize=(15, 6))\nlabels = list(df['country'].value_counts()[:20])\nax = df['country'].value_counts()[:20].plot(kind='bar', figsize=(15, 6), rot = 0)\n# ax = se.plot(kind='bar', figsize=(15, 6), rot = 0)\nax.set_title('Top 20 Country Distribution', fontsize = 15)\nax.set_xlabel(\"Country\", fontsize=12)\nax.set_ylabel(\"Count\", fontsize=12)\nrects = ax.patches\n\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height + 10, label,\n            ha='center', va='bottom')\n\nplt.show()","28324f22":"mask = df['country'].str.len() == 2\nctr = df.loc[mask]\nctr['country'].unique()","1572b454":"df[df['country'] == 'CN'] = 'CHN'\nprint(\"Number of 'CN' = \" + str(len(df[df['country'] == 'CN'])))\n\nlabels = list(df['country'].value_counts()[:20])\nax = df['country'].value_counts()[:20].plot(kind='bar', figsize=(15, 6), rot = 0)\n# ax = se.plot(kind='bar', figsize=(15, 6), rot = 0)\nax.set_title('Top 20 Country Distribution', fontsize = 15)\nax.set_xlabel(\"Country\", fontsize=12)\nax.set_ylabel(\"Count\", fontsize=12)\nrects = ax.patches\n\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height + 10, label,\n            ha='center', va='bottom')\n\nplt.show()","73dbbd3b":"list_ctr = list(df['country'].value_counts(sort = True)[:10].index)\n# list_ctr\ntop10 = df[df['country'].isin(list_ctr)]\ntop10['country'].unique()\n\ngroup_10 = top10.groupby(['country', 'hotel']).size()\ngroup_10 = group_10.to_frame(name = 'size').reset_index()\n\nax = group_10.pivot(\"country\", \"hotel\", \"size\").plot(kind='bar', figsize=(15, 6), rot = 0)\n\nax.set_title('Hotel Type Distribution in Top 10 Country', fontsize = 15)\nax.set_xlabel(\"Country\", fontsize=12)\nax.set_ylabel(\"Count\", fontsize=12)\nrects = ax.patches\n\nfor p in rects[0:]:\n    h = p.get_height()\n    x = p.get_x()+p.get_width()\/2.\n    if h != 0:\n        ax.annotate(\"%g\" % p.get_height(), xy=(x,h), xytext=(0,4), rotation = 90, \n                   textcoords=\"offset points\", ha=\"center\", va=\"bottom\")\n\nplt.show()","a0b049c1":"mask1 = df['hotel'] != 'CHN'\ndf_1 = df.loc[mask1]\n\nprint(\"Number of 'CHN' = \" + str(len(df_1[df_1['hotel'] == 'CHN'])))\n\nlabels = list(df_1['country'].value_counts()[:20])\nax = df_1['country'].value_counts()[:20].plot(kind='bar', figsize=(15, 6), rot = 0)\n# ax = se.plot(kind='bar', figsize=(15, 6), rot = 0)\nax.set_title('Top 20 Country Distribution', fontsize = 15)\nax.set_xlabel(\"Country\", fontsize=12)\nax.set_ylabel(\"Count\", fontsize=12)\nrects = ax.patches\n\nfor p in rects[0:]:\n    h = p.get_height()\n    x = p.get_x()+p.get_width()\/2.\n    if h != 0:\n        ax.annotate(\"%g\" % p.get_height(), xy=(x,h), xytext=(0,4), \n                   textcoords=\"offset points\", ha=\"center\", va=\"bottom\")\n\nplt.show()","d853b61e":"list_ctr = list(df_1['country'].value_counts(sort = True)[:10].index)\ntop10 = df_1[df_1['country'].isin(list_ctr)]\n\ngroup_10 = top10.groupby(['country', 'hotel']).size()\ngroup_10 = group_10.to_frame(name = 'size').reset_index()\n\nax = group_10.pivot(\"country\", \"hotel\", \"size\").plot(kind='bar', figsize=(15, 6), rot = 0)\n\nax.set_title('Hotel Type Distribution in Top 10 Country', fontsize = 15)\nax.set_xlabel(\"Country\", fontsize=12)\nax.set_ylabel(\"Count\", fontsize=12)\nrects = ax.patches\n\nfor p in rects[0:]:\n    h = p.get_height()\n    x = p.get_x()+p.get_width()\/2.\n    if h != 0:\n        ax.annotate(\"%g\" % p.get_height(), xy=(x,h), xytext=(0,4), rotation=90, \n                   textcoords=\"offset points\", ha=\"center\", va=\"bottom\")\n\nplt.show()","47a7d480":"group_10 = top10.groupby(['country', 'hotel', 'customer_type']).size()\ngroup_10 = group_10.to_frame(name = 'size').reset_index()\n\ng = sns.FacetGrid(group_10,\n            col='country', \n            col_wrap=3,\n            sharex=False,\n            sharey=False,\n            height=4)\ng = g.map(sns.barplot, 'hotel', 'size', \"customer_type\", \n          hue_order= np.unique(group_10[\"customer_type\"]), palette = \"hls\")\ng.add_legend()\ng._legend.set_title(\"Type of Booking\")\ng.set_titles(row_template = '{row_name}', col_template = '{col_name}')\n\nfor ax in g.axes.flatten():\n    rects = ax.patches\n    \n    for p in rects[0:]:\n        h = p.get_height()\n        x = p.get_x()+p.get_width()\/2.\n        if h != 0:\n            ax.annotate(\"%g\" % p.get_height(), xy=(x,h), xytext=(0,4), rotation=0, \n                       textcoords=\"offset points\", ha=\"center\", va=\"bottom\")\n\nplt.show()\n\n","c9ec15a1":"group_10 = top10.groupby(['country', 'hotel', 'deposit_type', 'is_canceled']).size()\ngroup_10 = group_10.to_frame(name = 'size')\ngroup_10 = group_10.unstack()\ngroup_10","94b00948":"First, we look at the data structure and calculate the unique values and missing values in each column. The total missing value in the dataset is 129425.","85f83998":"The graph shows that the Netherlands has entered the top 10 group which was previously ranked 11th. Then almost all bookings in each country are dominated by bookings at the city hotels, only the Great Britain is dominated by the resort hotels.\n<br>\nLet's see more further about the group and add customer type as our perspective. Customer type column here is actually a type of booking. ","c306d451":"And now China have only 999 record hotel bookings, so the top 10 would be different.","d8629e62":"As we can see there is strange hotel category in China that called 'CHN', the 'CHN' occurences is pretty big and outclass the city hotel and the resort hotel categories. From what we see on the trend above, there is more city hotel than resort hotel, so by this trend most likely the occurences of 'CHN' category in China is belong to China's city hotel. However, we cannot just change the 'CHN' category to the city hotel or resort hotel category due to lack of justification related to that data. So, i think it will be better if we drop this value of category.","05ae18d5":"Portugal has the most booking demand based on the data (**more than 40%**). It is pretty obvious because if we trace to [the publication](http:\/\/www.sciencedirect.com\/science\/article\/pii\/S2352340918315191) page, the description tells us that the data source locations are from \"both hotels are located in Portugal: H1 at the resort region of Algarve and H2 at the city of Lisbon\".\n<br>\nBut it's kind of interesting from what we see that there are two China's ISO codes in this dataframe which is \"CN\" and \"CHN\", from the data source description country column represent country of origin in the ISO 3155\u20133:2013 format which is consist of 3 alpha numeric and \"CN\" is represent ISO 3155 with 2 alpha numeric format. We need to find all 2 alpha numeric ISO codes in the dataset.","1db4c8d1":"As we can see it only 1 ISO Code on dataset and that is \"CN\". So, I think we need to change it to a the ISO 3155\u20133:2013 format.","904ec0a0":"From the bar chart above we can see that booking demands in China changed from 999 to 2278.\n<br>\nNow let's look at the data from the perspective of each country. ","a4561ea9":"Type of booking is obviously dominated by transient. Interesting view is shown in resort hotel category at Great Britain where contract type has a high number behind Portugal.","a39cfb9c":"Import necessary packages.","82128002":"Load dataset as pandas dataframe.","95e6e390":"In the dataset only 4 columns have the most missing values and the missing values of company ID is almost 95%."}}