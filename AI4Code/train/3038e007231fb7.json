{"cell_type":{"0f1e3bd6":"code","592d729a":"code","d555ac8e":"code","a37ca9f3":"code","69741cf4":"code","2fe21163":"code","5279ebbc":"code","c6dd78d4":"code","c026ddef":"code","58162813":"code","a8aad14d":"code","5d84e4dc":"code","2c954658":"code","ff7211d0":"code","509db8d6":"code","7407add2":"code","960403aa":"code","4b810075":"code","5d4a37ed":"code","4b609ac8":"code","4567b8e2":"code","962fe8af":"code","16411f6b":"code","f3e81211":"code","240ee555":"code","1ae44d55":"code","db0dae49":"code","f6cbadf0":"code","d52d43fc":"code","a81ba0a6":"code","2f2daaa8":"code","5566b347":"code","47023bb9":"code","abcdc86a":"code","61a4e362":"code","b3a3929b":"code","0b2a374c":"code","7af3d2a4":"code","e03689b1":"code","bfe54254":"code","fe09aea9":"code","1526a12d":"code","1beb059b":"code","17719574":"code","6529a30d":"code","aeef9e5e":"code","e56caeb9":"code","630a0a4d":"code","508f787d":"code","e79e4f3e":"code","0500cba1":"code","6aef28c9":"code","6c0cf2f8":"code","9bef030c":"code","d07697f2":"code","31ab4a8c":"code","6fd70678":"code","75c779d7":"code","677e401b":"code","7e8d83ed":"code","addf3d37":"code","b89124fd":"code","381198fb":"code","49b2be27":"code","117bc760":"code","a3b6751e":"code","ada7ac7d":"code","f6bea8c7":"code","c32cde0c":"code","ba81b652":"markdown","66082e2e":"markdown","7be38da9":"markdown","fc255094":"markdown","08d50f9f":"markdown","9f7dc090":"markdown","24f4be6f":"markdown","4e5ff168":"markdown","e7da2286":"markdown","2a7008f9":"markdown","d895a7d1":"markdown","3a1f480b":"markdown","382b4b33":"markdown","7c35f6db":"markdown","4f5a7115":"markdown","ab62a9f4":"markdown","d60ea738":"markdown","8aa5cab3":"markdown","e2dca541":"markdown","ae3eb30f":"markdown","548eefdd":"markdown","debc7b1a":"markdown","906ea68f":"markdown","904f2315":"markdown","a4c52ca8":"markdown","8e4fa0f9":"markdown","11f3fa17":"markdown","d3b7fd02":"markdown","bdd641a4":"markdown","25f820ca":"markdown","8cf547bb":"markdown","5a79d46c":"markdown","602830d1":"markdown","6ce01c20":"markdown","a22793d8":"markdown","04135720":"markdown","fc355d41":"markdown","8056d3ad":"markdown","319bdc2b":"markdown"},"source":{"0f1e3bd6":"# Lodaing the necessary Libraries.\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\npd.plotting.register_matplotlib_converters()\n%matplotlib inline\nplt.style.use('seaborn-whitegrid')\npd.set_option('display.max_columns', 500)\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","592d729a":"data = pd.read_csv('\/kaggle\/input\/ushealthinsurancedataset\/insurance.csv')\ndata.head()","d555ac8e":"print(f'Shape of the data: {data.shape}')\nprint(f'There are {data.shape[0]} rows in the data.')","a37ca9f3":"data.info()","69741cf4":"# What are the different datatypes present in the data?\ndata.dtypes.unique()","2fe21163":"# Let's check out individual columns:\ndata.columns","5279ebbc":"# Transform the Index object to a series, and grouping by data types:\ng = data.columns.to_series().groupby(data.dtypes).groups\ng","c6dd78d4":"# let's create a dictionary containing various datatypes (Integer, Float and object) and the columns that have this datatype:\ndt = {k.name: v for k, v in g.items()}\n# Display the columns by different datatypes:\nattributes_by_datatype = pd.DataFrame(list(dt.values()), index = dt.keys(), columns = ['Attr 1', 'Attr 2', 'Attr 3'])\nattributes_by_datatype","c026ddef":"# Unique values for 'children':\nsorted(data['children'].unique())","58162813":"data.isnull().any()","a8aad14d":"data.describe().transpose()","5d84e4dc":"# Let's construct a function that shows the summary and density distribution of a numerical attribute:\ndef summary(x):\n    x_min = data[x].min()\n    x_max = data[x].max()\n    Q1 = data[x].quantile(0.25)\n    Q2 = data[x].quantile(0.50)\n    Q3 = data[x].quantile(0.75)\n    print(f'5 Point Summary of {x.capitalize()} Attribute:\\n'\n          f'{x.capitalize()}(min) : {x_min}\\n'\n          f'Q1                    : {Q1}\\n'\n          f'Q2(Median)            : {Q2}\\n'\n          f'Q3                    : {Q3}\\n'\n          f'{x.capitalize()}(max) : {x_max}')\n\n    fig = plt.figure(figsize=(16, 10))\n    plt.subplots_adjust(hspace = 0.6)\n    sns.set_palette('pastel')\n    \n    plt.subplot(221)\n    ax1 = sns.distplot(data[x], color = 'r')\n    plt.title(f'{x.capitalize()} Density Distribution')\n    \n    plt.subplot(222)\n    ax2 = sns.violinplot(x = data[x], palette = 'Accent', split = True)\n    plt.title(f'{x.capitalize()} Violinplot')\n    \n    plt.subplot(223)\n    ax2 = sns.boxplot(x=data[x], palette = 'cool', width=0.7, linewidth=0.6)\n    plt.title(f'{x.capitalize()} Boxplot')\n    \n    plt.subplot(224)\n    ax3 = sns.kdeplot(data[x], cumulative=True)\n    plt.title(f'{x.capitalize()} Cumulative Density Distribution')\n    \n    plt.show()","2c954658":"# Let's take a closer look at the Boxplot, and calculate the measure of skewness and totalnumber of outlier values for various attributes through a function:\n\ndef box_plot(x = 'bmi'):\n    def add_values(bp, ax):\n        \"\"\" This actually adds the numbers to the various points of the boxplots\"\"\"\n        for element in ['whiskers', 'medians', 'caps']:\n            for line in bp[element]:\n                # Get the position of the element. y is the label you want\n                (x_l, y),(x_r, _) = line.get_xydata()\n                # Make sure datapoints exist \n                # (I've been working with intervals, should not be problem for this case)\n                if not np.isnan(y): \n                    x_line_center = x_l + (x_r - x_l)\/2\n                    y_line_center = y  # Since it's a line and it's horisontal\n                    # overlay the value:  on the line, from center to right\n                    ax.text(x_line_center, y_line_center, # Position\n                            '%.2f' % y, # Value (3f = 3 decimal float)\n                            verticalalignment='center', # Centered vertically with line \n                            fontsize=12, backgroundcolor=\"white\")\n\n    fig, axes = plt.subplots(1, figsize=(4, 8))\n\n    red_diamond = dict(markerfacecolor='r', marker='D')\n\n    bp_dict = data.boxplot(column = x, \n                             grid=True, \n                             figsize=(4, 8), \n                             ax=axes, \n                             vert = True, \n                             notch=False, \n                             widths = 0.7, \n                             showmeans = True, \n                             whis = 1.5,\n                             flierprops = red_diamond,\n                             boxprops= dict(linewidth=3.0, color='black'),\n                             whiskerprops=dict(linewidth=3.0, color='black'),\n                             return_type = 'dict')\n\n    add_values(bp_dict, axes)\n\n    plt.title(f'{x.capitalize()} Boxplot', fontsize=16)\n    plt.ylabel(f'{x.capitalize()}', fontsize=14)\n    plt.show()\n    \n    skew = data[x].skew()\n    Q1 = data[x].quantile(0.25)\n    Q3 = data[x].quantile(0.75)\n    IQR = Q3 - Q1\n    total_outlier_num = ((data[x] < (Q1 - 1.5 * IQR)) | (data[x] > (Q3 + 1.5 * IQR))).sum()\n    print(f'Mean {x.capitalize()} = {data[x].mean()}')\n    print(f'Median {x.capitalize()} = {data[x].median()}')\n    print(f'Skewness of {x}: {skew}.')\n    print(f'Total number of outliers in {x} distribution: {total_outlier_num}.')   ","ff7211d0":"summary('age')","509db8d6":"box_plot('age')","7407add2":"# How many of the insured have the age of 64?  \ndf = data[data['age'] == data['age'].max()]\nprint(df.head())\nprint()\nprint(f'Total number of insured people with the age of 64: {len(df)}.')","960403aa":"summary('bmi')","4b810075":"box_plot('bmi')","5d4a37ed":"# Who is the insured with the highest BMI, and how does his charges compare to the rest?\ndata[data['bmi'] == data['bmi'].max()]","4b609ac8":"data['charges'].mean(), data['charges'].median()","4567b8e2":"summary('charges')","962fe8af":"box_plot('charges')","16411f6b":"# Who is paying the highest charges?\ndata[data['charges'] == data['charges'].max()]","f3e81211":"# Who is the insured with the highest BMI, and how does his charges compare to the rest?\ndata[data['bmi'] == data['bmi'].max()]","240ee555":"data['charges'].mean(), data['charges'].median()","1ae44d55":"# Create a function that returns a Pie chart for categorical variable:\ndef pie_chart(x = 'smoker'):\n    \"\"\"\n    Function creates a Pie chart for categorical variables.\n    \"\"\"\n    fig, ax = plt.subplots(figsize=(8, 6), subplot_kw=dict(aspect=\"equal\"))\n\n    s = data.groupby(x).size()\n\n    mydata_values = s.values.tolist()\n    mydata_index = s.index.tolist()\n\n    def func(pct, allvals):\n        absolute = int(pct\/100.*np.sum(allvals))\n        return \"{:.1f}%\\n({:d})\".format(pct, absolute)\n\n\n    wedges, texts, autotexts = ax.pie(mydata_values, autopct=lambda pct: func(pct, mydata_values),\n                                      textprops=dict(color=\"w\"))\n\n    ax.legend(wedges, mydata_index,\n              title=\"Index\",\n              loc=\"center left\",\n              bbox_to_anchor=(1, 0, 0.5, 1))\n\n    plt.setp(autotexts, size=12, weight=\"bold\")\n\n    ax.set_title(f'{x.capitalize()} Piechart')\n\n    plt.show()","db0dae49":"sns.countplot(x = 'sex', data = data)","f6cbadf0":"pie_chart('sex')","d52d43fc":"sns.countplot(x = 'smoker', hue = 'sex', data = data)","a81ba0a6":"pie_chart('smoker')","2f2daaa8":"# Are average premium charges for smokers significantly higher than non-smokers?\ndata['charges'].groupby(data['smoker']).mean()","5566b347":"data.groupby(['smoker', 'sex']).agg('count')","47023bb9":"# yes, average premium charges for smokers are indeed significantly higher than non-smokers.\nsns.barplot(x = \"smoker\", y = \"charges\", data = data)","abcdc86a":"sns.catplot(x=\"smoker\", y=\"charges\", hue=\"sex\",\n            kind=\"violin\", inner=\"quartiles\", split=True,\n            palette=\"pastel\", data=data);","61a4e362":"data.groupby(['smoker', 'sex']).agg('count')['age']","b3a3929b":"sns.countplot(x = 'region', data = data)","0b2a374c":"pie_chart('region')","7af3d2a4":"sns.countplot(x = 'children', data = data)","e03689b1":"pie_chart('children')","bfe54254":"data.groupby(['children']).agg('count')['age']","fe09aea9":"for x in ['sex', 'children', 'smoker', 'region']:\n    data[x] = data[x].astype('category')\n\ndata.dtypes ","1526a12d":"type(data.dtypes)","1beb059b":"# Next, we select all columns of the dataFrame with datatype = category:\ncat_columns = data.select_dtypes(['category']).columns\ncat_columns","17719574":"# Finally, we transform the original columns by replacing the elements with their category codes:\ndata[cat_columns] = data[cat_columns].apply(lambda x: x.cat.codes)\ndata.head()","6529a30d":"# Now we can plot all columns of our dataset in a pairplot!\nsns.pairplot(data, hue  = 'smoker')","aeef9e5e":"data.plot(kind=\"scatter\", x=\"age\", y=\"charges\", \n    s=data[\"smoker\"]*25, label=\"smoker\", figsize=(14,10),\n    c='bmi', cmap=plt.get_cmap(\"jet\"), colorbar=True,\n    sharex=False)\nplt.legend()","e56caeb9":"corr = data.corr()\nplt.figure(figsize=(10, 8))\nsns.heatmap(corr, annot=True, cmap = 'summer_r')","630a0a4d":"smokers = data[data['smoker'] == 0]\nnonsmokers = data[data['smoker'] == 1]\ncharge_smokers = smokers['charges']\ncharge_nonsmokers = nonsmokers['charges']\n\nprint(f'Number of smokers: {smokers.shape[0]}')\nprint(f'Variance in charges of smokers: {np.var(charge_smokers)}')\nprint(f'Number of non - smokers: {nonsmokers.shape[0]}')\nprint(f'Variance in charges of non - smokers: {np.var(charge_nonsmokers)}')","508f787d":"from scipy.stats import ttest_ind\n\nt_statistic, p_value = ttest_ind(charge_smokers, charge_nonsmokers, equal_var=False)\nprint(f't_statistic: {t_statistic}\\np_value: {p_value}')","e79e4f3e":"print (\"two-sample t-test p-value=\", p_value)","0500cba1":"p_value > 0.05","6aef28c9":"smokers = data[data['smoker'] == 0]\nnonsmokers = data[data['smoker'] == 1]\ncharge_smokers = smokers['charges']\ncharge_nonsmokers = nonsmokers['charges']\n\nprint(f'Number of smokers: {smokers.shape[0]}')\nprint(f'Variance in charges of smokers: {np.var(charge_smokers)}')\nprint(f'Number of non - smokers: {nonsmokers.shape[0]}')\nprint(f'Variance in charges of non - smokers: {np.var(charge_nonsmokers)}')","6c0cf2f8":"#Visualizing the collected data:\ng = sns.catplot(x=\"smoker\", y=\"charges\", hue=\"sex\",\n            kind=\"violin\", inner=\"quartiles\", split=True,\n            palette=\"RdBu_r\", data=data, legend_out = True);\n\nxlabels = ['non-smoker', 'smoker']\ng.set_xticklabels(xlabels)\n\nnew_title = 'Sex'\ng._legend.set_title(new_title)\ng._legend.set_bbox_to_anchor([1.1, 0.5])\n# replace labels\nnew_labels = ['female', 'male']\nfor t, l in zip(g._legend.texts, new_labels): t.set_text(l)","9bef030c":"from scipy.stats import ttest_ind\n\nt_statistic, p_value = ttest_ind(charge_smokers, charge_nonsmokers, equal_var=False)\nprint(f't_statistic: {t_statistic}\\np_value: {p_value}')","d07697f2":"print (\"two-sample t-test p-value=\", p_value)","31ab4a8c":"p_value > 0.05","6fd70678":"males = data[data['sex'] == 1]\nfemales = data[data['sex'] == 0]\nbmi_males = males['bmi']\nbmi_females = females['bmi']\n\nprint(f'Number of males: {males.shape[0]}')\nprint(f'Variance in BMI of males: {np.var(bmi_males)}')\nprint(f'Number of females: {females.shape[0]}')\nprint(f'Variance in BMI of females: {np.var(bmi_females)}')","75c779d7":"#Visualizing the collected data:\ng = sns.catplot(x=\"sex\", y=\"bmi\", hue=\"smoker\",\n            kind=\"violin\", inner=\"quartiles\", split=True,\n            palette=\"pastel\", data=data, legend_out = True);\n\nxlabels = ['female', 'male']\ng.set_xticklabels(xlabels)\n\nnew_title = 'Smoker'\ng._legend.set_title(new_title)\ng._legend.set_bbox_to_anchor([1.1, 0.5])\n# replace labels\nnew_labels = ['non-smoker', 'smoker']\nfor t, l in zip(g._legend.texts, new_labels): t.set_text(l)","677e401b":"from scipy.stats import ttest_ind\n\nt_statistic, p_value = ttest_ind(bmi_males, bmi_females, equal_var=False)\nprint(f't_statistic: {t_statistic}\\np_value: {p_value}')","7e8d83ed":"print (\"two-sample t-test p-value=\", p_value)","addf3d37":"p_value > 0.05","b89124fd":"n_females = data['sex'].value_counts()[0] # number of females in the data\nn_males = data['sex'].value_counts()[1] # number of females in the data\n\nfemale_smokers = data[data['sex'] == 0].smoker.value_counts()[1] # number of female smokers\nmale_smokers = data[data['sex'] == 1].smoker.value_counts()[1] # number of male smokers\n\nprint([female_smokers, male_smokers] , [n_females, n_males])\nprint(f' Proportion of smokers in females, males = {round(115\/662,4)*100}%, {round(159\/676,4)*100}% respectively.')","381198fb":"# Visualization of the collected data:\nplt.figure(figsize=(6,5))\nchart = sns.countplot(y = 'sex', hue = 'smoker', data = data)\nchart.set_yticklabels(['female', 'male'])","49b2be27":"# The proportions are different, but are they statistically significant?\nfrom statsmodels.stats.proportion import proportions_ztest\n\nstat, pval = proportions_ztest([female_smokers, male_smokers] , [n_females, n_males])\nprint(f'Statistic: {stat}\\np_value: {pval}')","117bc760":"if pval < 0.05:\n    print(f'With a p-value of {pval} the difference is significant. We reject the Null Hypothesis.')\nelse:\n    print(f'With a p-value of {pval} the difference is not significant. We fail to reject the Null Hypothesis')","a3b6751e":"df = data[data['children'] <= 2]\nfemale = df[df['sex'] == 0]\nfemale.head()","ada7ac7d":"# Visualizing the collected data:\nfig = plt.figure(figsize=(12, 8))\nbox_plot = sns.boxplot(x = \"children\", y = \"bmi\", data = female, width = 0.5)\n\nmedians = female.groupby(['children'])['bmi'].median().round(2)\nvertical_offset = female['bmi'].median() * 0.05 # offset from median for display\n\nmedians\nfor xtick in box_plot.get_xticks():\n    box_plot.text(xtick, medians[xtick] + vertical_offset,medians[xtick], \n            horizontalalignment='center',color='w',weight='semibold')\n\n\nplt.title('BMI by No. of children')\nplt.show()","f6bea8c7":"import statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\nmod = ols('bmi ~ children', data = female).fit()\naov_table = sm.stats.anova_lm(mod, typ=2)\nprint(aov_table)","c32cde0c":"from statsmodels.stats.multicomp import pairwise_tukeyhsd\nprint(pairwise_tukeyhsd(female['bmi'], female['children']))","ba81b652":"# 3. Exploratory Data Analysis:\n## 3.1 Shape:\nLets's start with the shape of the data.","66082e2e":"### Observation:\n - In the dataset, approximately 85% (1138 \/ 1338) of the insured have less than 3 children.\n \n## 3.6. Pairplot:\nLet's plot pairwise relationships in our dataset through a <code>pairplot<\/code>.\nIn order to show all columns in our pairplot, first let's convert all categorical attributes to their category codes.\nFirst we set the datatypes of all the categorical variables as category:","7be38da9":"# 4. Hypothesis Testing:\nA <b>Statistical Hypothesis Test<\/b> is a method of [statistical inference](https:\/\/en.wikipedia.org\/wiki\/Statistical_inference) which is used in making decisions using sample data.\nHere we attempt to answer a few questions based on the nature of distribution and relationships between various attributes in our dataset through  Hypothesis Tests.\nWe follow the following methodology:\n\n1. Formulate the null hypothesis  $H_0$ and the alternative hypothesis  $H_A$\n2. Select an appropriate statistical test and the corresponding test statistic\n3. Choose level of significance \u03b1 (generally taken as 0.05)\n4. Collect data and calculate the value of test statistic\n5. Determine the probability associated with the test statistic under the null hypothesis using sampling distribution of the test statistic\n6. Compare the probability associated with the test statistic with level of significance specified\n\n## 4.1 Do charges of people who smoke differ significantly from the people who don't?\n\n#### 4.1.1. Step 1: State the null and alternative hypothesis\n* $H_0$: $\\mu_s$ = $\\mu_n$ \n* $H_A$: $\\mu_s$ != $\\mu_n$\n\nWhere:\n - $\\mu_s$ = Mean Charge of all smokers in our data\n - $\\mu_n$ = Mean Charge of all non - smokers in our data\n \n#### 4.1.2. Step 2: Select an appropriate statistical test and the corresponding test statistic\nWe select a 2-sample t-test as our statistical test and the corresponding t statistic as our test statistic.\n#### 4.1.3. Step 3: Choose level of significance \u03b1\nWe select \u03b1 = 0.05\n#### 4.1.4. Step 4: Collect data and calculate the value of test statistic:","fc255094":"## <font color = 'purple'>Remarks:<\/font>\nThis is my first Data Science Project, and my first Kernel in Kaggle. I will be extremely grateful for any comments, advice and suggestions. Thank you for reading.","08d50f9f":"We observe that 'age'(int64), 'bmi'(float64) and 'charges'(float64) are numerical attributes; and 'sex', 'smoker', 'region' and 'children' are categorical attributes.\n\nWe observe that the 'children' column is being treated as an integer datatype, even though it contains categorical information.","9f7dc090":"### 3.5.3. Regions","24f4be6f":"A partcularly interesting relationship between Insurance Premium Charges, BMI and Smoking status (Smoker \/ Non - smoker) can be seen in this graph:","4e5ff168":"#### Step 5: Calculate p value using ANOVA table\n* <code>statsmodels.formula.api.ols<\/code> creates a model from a formula and dataframe\n* <code>statsmodels.api.sm.stats.anova_lm<\/code> gives an Anova table for one or more fitted linear models.","e7da2286":"### 1.1. Context:\nLeveraging customer information is paramount for most businesses. In the case of an insurance company, attributes of customers like the ones mentioned below can be crucial in making business decisions. Hence, knowing to explore and generate value out of such data can be an invaluable skill to have.\n\n### 1.2. Domain: Health Insurance\n\n### 1.3. Data Description: \nThe data at hand contains medical costs of people characterized by certain attributes.\n\n### 1.4. Attribute Information:\n\n - <b>age:<\/b> Age of primary beneficiary\n - <b>sex:<\/b> Insurance contractor gender, female \/ male\n - <b>bmi:<\/b> Body mass index, providing an understanding of body, weights that are relatively high or low relative to height, objective index of body weight (kg \/ $m^{2}$) using the ratio of height to weight, ideally 18.5 to 24.9\n - <b>children:<\/b> Number of children covered by health insurance \/ Number of dependents\n - <b>smoker:<\/b> Smoker \/ Non - smoker\n - <b>region:<\/b> The beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n - <b>charges:<\/b> Individual medical costs billed by health insurance.\n \n### 1.5 Objectives:\n     1. Exploratory Data Analysis and Data Visualization\n     2. Hypothesis Testing\n     \n### 1.6 Importing the Libraries:","2a7008f9":"#### 4.2.5. Step 5: Determine the probability associated with the test statistic under the null hypothesis using sampling distribution of the test statistic","d895a7d1":"### 3.4.1. Age Distribution:","3a1f480b":"#### 4.2.6. Step 6: Compare the probability associated with the test statistic with level of significance specified\nAt 5% significance level, \u03b1 = 0.05","382b4b33":"### Step 6: Conclusion:\n - We <b>Fail to Reject<\/b> the null hypothesis that for BMI for 3 groups of women having no, one or two children respectively, mean BMI of all groups are equal.\n - Hence, the distribution of BMI across women with no children, one child and two children are the same.\n \n### Determine which mean(s) is \/ are different\n\n* An ANOVA test will test that at least one mean is different. \n* We have falied to reject the null hypothesis but do not know which mean(s) is \/ are different.\nWe use Tukey-krammer HSD test to detect which mean(s) is \/ are different.","7c35f6db":"### 3.4.2. BMI Distribution:","4f5a7115":"# 1. Introduction: Data Analytics in Insurance\nEmerging technologies like AI, Machine Learning, Block Chain, Cloud Computing and Big Data Analytics have brought a radical change in today's global financial landscape. As traditional business models adapt and evolve to harness the promise of these technologies, and the barriers between various 'specialized' domains across industries slowly dissolve, more and more industries are adopting a Digital Transformation Strategy. Insurance is no exception.\n\nThe Insurance sector is no stranger to data driven decision making. Yet AI and Big Data are revolutionizing the industry. The following image briefly illustrates the digital transformation in Insurance today, and the role played by Analytics:\n\n<img src=\"https:\/\/raw.githubusercontent.com\/AnirbanDatta87\/Projects\/master\/P1_EDA\/img\/1_ins.jpg\" width=\"900\">\n\nIn this project, we attempt to analyze and explore a dataset for medical costs in Health Insurance in USA in order to derive valuable insights, and find answers to questions through statistical hypothesis testing.","ab62a9f4":"## 3.3. Data Cleaning:\nLet's check if the DataFrame contains any missing or null values.","d60ea738":"There are no missing data in the DataFrame.\n## 3.4. Summary and Distribution of numerical attributes:\nWe can get an overview of the important statistics of the data through the <code>describe()<\/code> method:","8aa5cab3":"## 4.4. Is the distribution of bmi across women with no children, one child and two children, the same?\n### Analysis of variance (ANOVA)\n\nANOVA is a hypothesis testing technique tests the equality of two or more population means by examining the variances of samples that are taken.\n\nANOVA tests the general rather than specific differences among means.\n\n#### Assumptions of ANOVA\n\n* All populations involved follow a normal distribution\n* All populations have the same variance\n* The samples are randomly selected and independent of one another\n\n#### 4.4.1. Step 1: State the null and alternative hypothesis\n* $H_0$: $\\mu_0$ = $\\mu_1$ = $\\mu_2$\n* $H_A$: Atleast one of the means are different.\n\nWhere:\n - $\\mu_i$ = Population mean of BMI of women having 0, 1 and 2 children.\n \n#### 4.4.2. Step 2: Select an appropriate statistical test and the corresponding test statistic\nWe select one way ANOVA as our test and mean BMI of the different groups as our test statistic.\n#### 4.4.3. Step 3: Choose level of significance \u03b1\nWe select \u03b1 = 0.05.\n#### 4.4.4. Step 4: Collect data and calculate the value of test statistic\nHere we have 3 groups. Analysis of variance can determine whether the means of three or more groups are different. ANOVA uses F-tests to statistically test the equality of means.","e2dca541":"## 3.2 Data Types:\nLet's understand the data types of various attributes.","ae3eb30f":"#### 4.1.5. Step 5: Determine the probability associated with the test statistic under the null hypothesis using sampling distribution of the test statistic","548eefdd":"### 3.5.1 Sex:","debc7b1a":"### Observations:\n - The Charges distribution of the Insured is heavily skewed to the left (median < mean) with a Mean of 13270.4223 and Median of 9382.033. The lowest charged amount is 1121.8739 and the highest charged amount is 63770.42801.  \n - Out of a total of 1338 data points, there are a total of 139 outlier values in the distribution of charges, all in the higher side. The highest charges paid is 63770.42801.\n - The insured chared with highest premium is a 54 years old female smoker with relatively high BMI (indicating obesity).\n - The person with the highest BMI (obese, or least healthy, based on available data) is also one of the youngest (male, 18, non-smoker.) He is paying less premium charges than the mean(which, we note, is affected by extreme outlier values of charges like the person above), but significantly more than the median. This is in line with our basic understanding of underwriting rules.\n \n## 3.5. Summary and Distribution of categorical attributes:\nLet's explore the distribution of categorical variables:  'sex', 'smoker', 'region' and 'children'.","906ea68f":"### Observations:\n - Of the total 1338 insured, 274 (20.5%) are smokers and the rest are non-smokers.\n - Among 274 smokers, proportion of males (159) are higher than females (115).\n - The average insurance premium for smokers are significantly higher than non-smokers.","904f2315":"#### 4.3.6. Step 6: Conclusion:\n - We <b>Reject<\/b> the Null Hypothesis and state that <b>At 5% significance level, the porportion of smokers in insured males and females are equal<\/b>.\n - Hence, proportion of smokers are significantly different in different genders.","a4c52ca8":"### Observations:\n - The BMI distribution of the Insured approximately follows a normal distribution with a Mean of 30.66 and Median of 30.4.\n - There are a total of 9 outlier values in the BMI distribution, all in the higher side. The highest BMI observed is 53.13.\n - The person with the highest BMI (least healthy, based on available data) is also one of the youngest (male, 18, non-smoker.) He is paying less premium than the mean, but significantly more than the median charges. This is in line with our basic understanding of underwriting rules.\n \n### 3.4.3. Charges Distribution:","8e4fa0f9":"#### 4.1.6. Step 6: Compare the probability associated with the test statistic with level of significance specified\nAt 5% significance level, \u03b1 = 0.05","11f3fa17":"### Observation:\n - The dataset is almost evenly distributed among genders, with 676 Males (50.5%) and 662 Fenales (49.5%).\n \n### 3.5.2. Smoker","d3b7fd02":"#### 4.3.5. Step 5: Determine the probability associated with the test statistic under the null hypothesis using sampling distribution of the test statistic","bdd641a4":"### Observation:\n- From the correlation heatmap, we can conclude that the premium charges show a weak positive correlation with Age and BMI of the insured, and a strong positive correlation with smoking habit.","25f820ca":"### 4.1.7. Conclusion: \n - We <b>Reject<\/b> the Null Hypothesis and state that <b>At 5% significance level, the mean charges of smokers and non - smokers are not equal<\/b>.\n - Hence, charges of people who smoke indeed differ significantly from the people who don't.\n \n## 4.1 Do charges of people who smoke differ significantly from the people who don't?\n\n#### 4.1.1. Step 1: State the null and alternative hypothesis\n* $H_0$: $\\mu_s$ = $\\mu_n$ \n* $H_A$: $\\mu_s$ != $\\mu_n$\n\nWhere:\n - $\\mu_s$ = Mean Charge of all smokers in our data\n - $\\mu_n$ = Mean Charge of all non - smokers in our data\n \n#### 4.1.2. Step 2: Select an appropriate statistical test and the corresponding test statistic\nWe select a 2-sample t-test as our statistical test and the corresponding t statistic as our test statistic.\n#### 4.1.3. Step 3: Choose level of significance \u03b1\nWe select \u03b1 = 0.05\n#### 4.1.4. Step 4: Collect data and calculate the value of test statistic","8cf547bb":"### Observations:\n - The Age of the insured approximately follow a uniform distribution with Mean of 39.2 and Median of 39.0, and with lowest age being 18 and highest being 64.\n - There are no outlier values in the Age distribution in the data.","5a79d46c":"### 4.1.7. Conclusion: \n - We <b>Reject<\/b> the Null Hypothesis and state that <b>At 5% significance level, the mean charges of smokers and non - smokers are not equal<\/b>.\n - Hence, charges of people who smoke indeed differ significantly from the people who don't.\n \n## 4.2. Does BMI of males differ significantly from that of females?\n\n#### 4.2.1. Step 1: State the null and alternative hypothesis\n* $H_0$: $\\mu_m$ = $\\mu_f$ \n* $H_A$: $\\mu_m$ != $\\mu_f$\n\nWhere:\n - $\\mu_m$ = Mean BMI of all male insured in our data\n - $\\mu_f$ = Mean BMI of all female insured in our data\n \n#### 4.2.2. Step 2: Select an appropriate statistical test and the corresponding test statistic\nWe select a 2-sample t-test as our statistical test and the corresponding t statistic as our test statistic.\n#### 4.2.3. Step 3: Choose level of significance \u03b1\nWe select \u03b1 = 0.05\n#### 4.2.4. Step 4: Collect data and calculate the value of test statistic","602830d1":"Now let's study the 5-point summary and distribution of the numerical attributes: Age, BMI and Charges.\n - The Density plot gives an intuitive understanding of the underlying distribution of the attribute.\n - The Boxplot (or box-and-whisker plot) shows the distribution of quantitative data in a way that facilitates comparisons between variables or across levels (quantiles) of variable. The box shows the quartiles of the dataset while the whiskers extend to show the rest of the distribution, except for points that are determined to be \u201coutliers\u201d using a method that is a function of the inter-quartile range.\n - Unlike a box plot, in which all of the plot components correspond to actual datapoints, the violin plot features a kernel density estimation of the underlying distribution.\n - The cumulative frequency also corresponds to the density distribution, and indicates the central tendency of the data.","6ce01c20":"# 2. Loading the Data:","a22793d8":"### 4.2.7. Conclusion: \n - We <b>Fail to Reject<\/b> the Null Hypothesis and state that <b>At 5% significance level, the mean BMI of insured males and females are equal<\/b>.\n - Hence, BMI of males do not differ significantly from that of females in our data.\n \n## 4.3. Is the proportion of smokers significantly different in different genders?\n* 'sex' and 'smoker' are two categorical variables.\n* We want to see if the proportion of smokers in the female population is significantly less than it is in the male population.\n\n#### 4.3.1. Step 1: State the null and alternative hypothesis\n* $H_0$: $p_m$ = $p_f$ \n* $H_A$: $p_m$ != $p_f$\n\nWhere:\n - $p_m$ = Male Smokers \/ Total Male insured\n - $p_f$ = Female Smokers \/ Total Female insured\n \n#### 4.3.2. Step 2: Select an appropriate statistical test and the corresponding test statistic\nWe select a proportion Z - test as our statistical test and the corresponding Z statistic as our test statistic.\n#### 4.3.3. Step 3: Choose level of significance \u03b1\nWe select \u03b1 = 0.05\n#### 4.3.4. Step 4: Collect data and calculate the value of test statistic","04135720":"## 3.7. Correlation:\nLet's study the correlation between different attributes in our dataset.","fc355d41":"#### 4.1.5. Step 5: Determine the probability associated with the test statistic under the null hypothesis using sampling distribution of the test statistic","8056d3ad":"### Observation:\n - All four regions are represented approximately evenly in the dataset.\n\n### 3.5.4. Number of Children","319bdc2b":"#### 4.1.6. Step 6: Compare the probability associated with the test statistic with level of significance specified\nAt 5% significance level, \u03b1 = 0.05"}}