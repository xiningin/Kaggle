{"cell_type":{"0baab68b":"code","8cf57476":"code","4371ba3b":"code","3df2cdc8":"code","0ae1f98d":"markdown","48aea476":"markdown","476a7821":"markdown"},"source":{"0baab68b":"import os\nimport json\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# import plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\n# these two lines are what allow your code to show up in a notebook!\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()","8cf57476":"# Constants\nCOLLISIONS_CSV = '..\/input\/nypd-motor-vehicle-collisions.csv'\nMETADATA_JSON = '..\/input\/socrata_metadata.json'\nDATADICT = '..\/input\/Collision_DataDictionary.xlsx'\n\n# Read data in\ncollisions = pd.read_csv(COLLISIONS_CSV)\n\n# Slice data for plotting\nlatest_date = collisions.iloc[0].DATE\nearliest_date = collisions.iloc[-1].DATE\n\n# Filter the dataframes into number of injured and number of deaths\ninjured_df = collisions[collisions['NUMBER OF PERSONS INJURED'] > 0]\nkilled_df = collisions[collisions['NUMBER OF PERSONS KILLED'] > 0]\ninjured_df1000 = injured_df.iloc[0:1000]\nkilled_df1000 = killed_df.iloc[0:1000]","4371ba3b":"# specify what we want our map to look like\ndata = [ dict(\n        type='scattergeo',\n        # autocolorscale = False,\n        lon = injured_df1000['LONGITUDE'],\n        lat = injured_df1000['LATITUDE'],\n        text = injured_df1000['NUMBER OF PERSONS INJURED'],\n        locationmode = 'USA-states'\n       ) ]\n\n# chart information\nlayout = dict(\n        title = 'Number of Injuries in Traffic Incidents',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n             )\n   \n# actually show our figure\nfig = dict( data=data, layout=layout )\niplot( fig, filename='d3-cloropleth-map' )","3df2cdc8":"# specify what we want our map to look like\ndata = [ dict(\n        type='scattergeo',\n        # autocolorscale = False,\n        lon = killed_df1000['LONGITUDE'],\n        lat = killed_df1000['LATITUDE'],\n        text = killed_df1000['NUMBER OF PERSONS KILLED'],\n        locationmode = 'USA-states'\n       ) ]\n\n# chart information\nlayout = dict(\n        title = 'Number of Deaths in Traffic Incidents in New York',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n             )\n   \n# actually show our figure\nfig = dict( data=data, layout=layout )\niplot( fig, filename='d3-cloropleth-map' )","0ae1f98d":"## Day 2 of Dashboarding exercises\n\nI chose the NYPD Motor vehicle Collisions dataset and continue dashboarding","48aea476":"### Now let us see the number of Deaths on NY map\n\nNote: 1) Mapping only first 1000 data points. Notebook crashes if I attempt to plot entire dataset.\n      2) Also showing entire USA map. Don't know how to show New York map only","476a7821":"### Now let us see the number of injuries on NY map\n\nNote: 1) Mapping only first 1000 data points. Notebook crashes if I attempt to plot entire dataset.\n          2) Also showing entire USA map. Don't know how to show New York map only"}}