{"cell_type":{"a1cb8ee7":"code","501f9285":"code","bfde1556":"code","122dd2d9":"code","8165cd4f":"code","702a57aa":"code","bfb3cbd2":"code","fe8a477a":"code","85e96352":"code","0abaa2d2":"code","2812eb50":"code","fe71148a":"code","7b6bb728":"code","761b5427":"code","81ae37a5":"code","b3c66230":"code","3fc057dd":"markdown","732c4441":"markdown","10a5bacb":"markdown","240d7288":"markdown","d3f0200f":"markdown","32692d9c":"markdown","bc51fc00":"markdown","f1f03988":"markdown"},"source":{"a1cb8ee7":"#Importing libraries \n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","501f9285":"df = pd.read_csv(\"..\/input\/fish-market\/Fish.csv\") ","bfde1556":"df.head()","122dd2d9":"# Renaming Column Names for better understanding\ndf.columns = ['species', 'weight','vertical_length','diagnol_length','cross_length','height','width']","8165cd4f":"df.head()","702a57aa":"df.describe()","bfb3cbd2":"# Doing calculation to compute the least-square regression line\n\nx = np.array(df['vertical_length'])\ny = np.array(df['weight'])\nn = len(x)\n    \n# Doing calculation to compute the least-square regression line\n\nsum_x  = np.sum(x)\nsum_y  = np.sum(y)\nsum_xx = np.sum(x*x)\nsum_xy = np.sum(x*y)\nmean_x = np.mean(x)\nmean_y = np.mean(y)\n    \nnumerator   = sum_xy - ((sum_x*sum_y)\/n)\ndenominator = sum_xx - ((sum_x*sum_x)\/n)\n\n# m and b are the slope and intercept calculated for given x and y values \n\nm = numerator\/denominator\nb = mean_y - m*mean_x","fe8a477a":"# regression line plot\n\nplt.scatter(x,y)\nplt.plot(x, m*x+b, color='red')\nplt.title(f'Linear Regression Line , m = {m:.2f}, b = {b:.2f}')\nplt.ylabel(\"Fish Weight\")\nplt.xlabel(\"Vertical Length\")\nplt.figure(figsize=(10,5))\nplt.show()","85e96352":"# The method calculates the correlation coefficient between all the numerical columns\ncorr = df.corr(method='pearson')\ncorr","0abaa2d2":"# Plotting the heat map for the correlation values\n\nsns.heatmap(corr, xticklabels = corr.columns.values, yticklabels=corr.columns.values)","2812eb50":"from sklearn.model_selection import train_test_split\nx = df.drop(['weight','species'], axis=1).values\ny = df['weight'].values\n\nX_train, X_test, Y_train, Y_test =  train_test_split( x,y,test_size=0.3, random_state=10)\n","fe71148a":"# Shapes of the training and testing data\n\nprint(f'Shape of training set for X = {X_train.shape}')\nprint(f'Shape of testing  set for X = {X_test.shape}')\nprint(f'Shape of training set for Y = {Y_train.shape}')\nprint(f'Shape of testing  set for Y = {Y_test.shape}')","7b6bb728":"from sklearn.linear_model import LinearRegression\n\nlinear_regression = LinearRegression()\nlinear_regression.fit(X_train, Y_train)\nY_predict = linear_regression.predict(X_test)","761b5427":"import math\n\nfrom sklearn.metrics import r2_score\nr2 = r2_score(Y_test ,Y_predict)\nr  = math.sqrt(r2)\n\nprint(f'coefficient of determination = {r2:.3f}')\nprint(f'     correlation coefficient = {r:.3f}')","81ae37a5":"from sklearn import metrics\n\n# Using Predicted values\npredicted = Y_predict\nexpected  = Y_test\n","b3c66230":"df = pd.DataFrame()\n\ndf['Expected']  = pd.Series(expected)\ndf['Predicted'] = pd.Series(predicted)\n\nfigure = plt.figure(figsize=(15, 10))\n\naxes = sns.scatterplot(data=df, x='Expected', y='Predicted', \n                       hue='Predicted', palette='cool', \n                       legend=False)\n\nstart = min(expected.min(), predicted.min())\nend   = max(expected.max(), predicted.max())\n\naxes.set_xlim(start, end)\naxes.set_ylim(start, end)\n\nplt.title('Expected vs. Predicted')\nline = plt.plot([start, end], [start, end], 'k--')","3fc057dd":"The Linear Regression Line is straight line with postive upward slope .\n\nAs value of x (vertical length) is increasing the value of y (weight) is also increasing gradually.\n\nThus, we can say that y is dependent on x value","732c4441":"# Data Analysis and Operations Performed\u00b6-\n### * EDA\n### * Least Square Regression Line Calculation\/Plot\n### * Correlation Coefficient Finding and Plotting using HeatMap\n### * Linear Regession Modelling\n### * Coefficient of Determination\n### * Predicted Values Vs Expected Values Calculation\/Plot","10a5bacb":"From above correlation coefficient values we can see that Correlation between cross_length and weight is stronger as r value is 0.917462.","240d7288":"# Split the data for training and testing","d3f0200f":"# Least-squares regression Line ","32692d9c":"# Coefficient of Determination","bc51fc00":"# Exploratory Data Analysis","f1f03988":"# Correlation Coefficient\n"}}