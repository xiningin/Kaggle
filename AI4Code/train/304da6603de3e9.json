{"cell_type":{"a9275f78":"code","f3ecd047":"code","f9f18974":"code","8b4e6bf6":"code","7fd8cd14":"code","38b23284":"code","4557d963":"code","7aa0537e":"code","6a2c647f":"code","e63365a2":"code","b2151597":"code","35990662":"code","32ddb69d":"code","a86fba77":"code","8b2adb74":"code","a18904f3":"code","ac8a4502":"code","e88b7486":"code","902ed63b":"code","8436f25b":"code","901ba4eb":"code","47827b00":"code","2e3cb7d2":"code","3e6ea415":"code","78ea9768":"code","84196821":"code","a72d8bab":"code","cc865a8c":"code","901a1b64":"code","51d8ccfe":"code","7d9e357a":"code","c6df53d4":"code","2f39f66b":"code","444f3f49":"code","40d8c8a4":"code","bd4cbaea":"code","e636fd58":"code","5996fd35":"code","a90f485b":"code","6b6cbab2":"code","cabae174":"code","a76ab5d3":"code","30fa3ad4":"code","4cb0ab75":"code","32687783":"code","c5ee6e65":"code","fe96f6fb":"code","17b4b725":"code","052150e4":"code","fa4e91e5":"code","1cea756c":"code","15597091":"code","ae48fdc1":"code","be463204":"code","b3d4cc77":"code","6fa46892":"code","6558a6fd":"code","d6d05547":"code","6341e4f5":"code","543de173":"code","187bf802":"code","9ea0f5f3":"code","372ee0fb":"code","1174ca6d":"code","7d5bb5cf":"code","453b343a":"code","cad74a2f":"code","70369243":"code","06e6dfcb":"code","acc00139":"code","128a0bc5":"code","5c89fe9c":"code","a8c9ac3c":"code","ed7a12fc":"code","1b6afb0d":"code","8cd83023":"code","dfb8c61f":"code","64fa7845":"code","01a597a8":"code","bf7f0761":"code","fb16e434":"code","5d8edbd1":"code","0f593790":"code","32198e93":"code","6feaac6f":"code","7322afe2":"code","c59d6d34":"code","fa1b8739":"code","a4b4e2f2":"code","ce953705":"code","9dcfb0bf":"code","46b6e385":"code","e21795ec":"code","f89fad44":"code","fc065b60":"code","f13956c5":"code","fac09794":"code","e785a0b8":"code","b3bf59a9":"code","22d1eb4a":"code","6c35e3c1":"code","ebaedb25":"code","0a67f4dc":"code","418183d9":"code","df80db1e":"code","28bde2e5":"code","94f88a09":"code","8f2f6051":"code","41ed5e77":"code","8a9a4fe7":"code","62d9b9eb":"code","77cd5929":"code","89ee6d93":"code","a78e71ec":"code","63c0e812":"markdown","556518ee":"markdown","3de7a74d":"markdown","c0a79985":"markdown","4b4e1e56":"markdown","ab163364":"markdown","7f813506":"markdown","5b7974dd":"markdown","b18883df":"markdown","5f5e0981":"markdown","4cb6120c":"markdown","06f730c8":"markdown","5275fb44":"markdown","52f61896":"markdown","db51abbc":"markdown","e9ac09f5":"markdown","1ed5a738":"markdown","8fc3aed0":"markdown","5051bbfc":"markdown","0774a88c":"markdown","8b0fadfe":"markdown","a2b9b51c":"markdown","a5a412a0":"markdown","41b43e56":"markdown","3f2a436c":"markdown","04a052a2":"markdown","ee43d5d1":"markdown","ce11da81":"markdown","98a2817d":"markdown"},"source":{"a9275f78":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","f3ecd047":"kidney=pd.read_csv('..\/input\/ckdisease\/kidney_disease.csv')","f9f18974":"kidney.head()","8b4e6bf6":"kidney.info()","7fd8cd14":"columns=pd.read_csv(\"..\/input\/kidney-kronicle\/data_description.txt\",sep='-')\ncolumns=columns.reset_index()","38b23284":"columns.columns=['cols','abb_col_names']","4557d963":"columns","7aa0537e":"kidney.head()","6a2c647f":"kidney.columns=columns['abb_col_names'].values","e63365a2":"kidney.head()","b2151597":"kidney.describe()","35990662":"def convert_dtype(kidney,feature):\n    kidney[feature]=pd.to_numeric(kidney[feature],errors='coerce')    #whereever we have Nan values , this errors parameter will hanfle that ","32ddb69d":"features=['packed cell volume','white blood cell count','red blood cell count']\nfor i in features:\n    convert_dtype(kidney,i)","a86fba77":"kidney.dtypes","8b2adb74":"kidney.drop('id',inplace=True,axis=1)","a18904f3":"def extract_cat_num(kidney):\n    cat_col=[col for col in kidney.columns if kidney[col].dtype=='O']\n    num_col=[col for col in kidney.columns if kidney[col].dtype!='O']\n    return cat_col,num_col","ac8a4502":"cat_col,num_col=extract_cat_num(kidney)","e88b7486":"cat_col","902ed63b":"num_col","8436f25b":"# dirtiness in categorical data\nfor col in cat_col:\n    print('{} has {} values'.format(col,kidney[col].unique()))\n    print(\"\\n\")","901ba4eb":"kidney['diabetes mellitus'].replace(to_replace={'\\tno':'no','\\tyes':'yes'},inplace=True)\nkidney['coronary artery disease'].replace(to_replace={'\\tno':'no'},inplace=True)\nkidney['class'].replace(to_replace={'ckd\\t':'ckd'},inplace=True)","47827b00":"# no dirtiness\nfor col in cat_col:\n    print('{} has {} values'.format(col,kidney[col].unique()))\n    print(\"\\n\")","2e3cb7d2":"len(num_col)","3e6ea415":"plt.figure(figsize=(30,30))\nfor i,feature in enumerate(num_col):\n    plt.subplot(5,3,i+1)            \n    kidney[feature].hist()\n    plt.title(feature)","78ea9768":"len(cat_col)","84196821":"plt.figure(figsize=(20,20))\n\nfor i,feature in enumerate(cat_col):\n    plt.subplot(4,3,i+1)\n    sns.countplot(kidney[feature])","a72d8bab":"#There are so many warnings so we want to ignore them for more covinience\nimport warnings\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\")","cc865a8c":"plt.figure(figsize=(20,20))\n\nfor i,feature in enumerate(cat_col):\n    plt.subplot(4,3,i+1)\n    sns.countplot(kidney[feature],hue=kidney['class'])","901a1b64":"sns.countplot(kidney['class'])","51d8ccfe":"kidney.corr()","7d9e357a":"plt.figure(figsize=(12,12))\nsns.heatmap(kidney.corr(method='pearson'),cbar=True,cmap='BuPu',annot=True)","c6df53d4":"kidney.groupby(['red blood cells','class'])['red blood cell count'].agg(['count','mean','median','min','max'])","2f39f66b":"plt.figure(figsize=(10,10))\nplt.scatter(x=kidney.haemoglobin,y=kidney['packed cell volume'])\nplt.xlabel('Haemoglobin')\nplt.ylabel('packed cell volume')\nplt.title('Relationship between haemoglobin and packed cell volume')\n","444f3f49":"grid=sns.FacetGrid(kidney,hue='class',aspect=2)\ngrid.map(sns.kdeplot,'red blood cell count')\ngrid.add_legend()","40d8c8a4":"grid=sns.FacetGrid(kidney,hue='class',aspect=2)\ngrid.map(sns.kdeplot,'haemoglobin')\ngrid.add_legend()","bd4cbaea":"plt.figure(figsize=(12,10))\nsns.scatterplot(x=kidney['red blood cell count'],y=kidney['packed cell volume'],hue=kidney['class'])\nplt.xlabel('red blood cell count')\nplt.ylabel('packed cell volume')\nplt.title('Relationship between red blood cell count and packed cell volume')\n","e636fd58":"plt.figure(figsize=(12,10))\nsns.scatterplot(x=kidney['red blood cell count'],y=kidney['haemoglobin'],hue=kidney['class'])\nplt.xlabel('red blood cell count')\nplt.ylabel('haemoglobin')\nplt.title('Relationship between haemoglobin and red blood cell count')","5996fd35":"kidney.isnull().sum()","a90f485b":"kidney.isnull().sum().sort_values(ascending=False)","6b6cbab2":"plt.subplot(1,2,1)\nsns.boxplot(x=kidney['class'],y=kidney['age'])","cabae174":"list(enumerate(cat_col))","a76ab5d3":"plt.figure(figsize=(15,15))\nfor i in enumerate(num_col):\n    plt.subplot(4,4,i[0]+1)\n    sns.boxplot(x=kidney['class'],y=i[1],data=kidney.reset_index())","30fa3ad4":"np.mean(kidney)","4cb0ab75":"kidney.isnull().sum()","32687783":"for i in num_col:\n    kidney[i].fillna(kidney[i].median(),inplace=True)","c5ee6e65":"kidney.isnull().sum()","fe96f6fb":"kidney.describe()","17b4b725":"kidney['red blood cells'].isnull().sum()","052150e4":"random_sample=kidney['red blood cells'].dropna().sample(152)","fa4e91e5":"random_sample","1cea756c":"kidney[kidney['red blood cells'].isnull()].index","15597091":"random_sample.index","ae48fdc1":"random_sample.index=kidney[kidney['red blood cells'].isnull()].index    #in this way index will be equal","be463204":"random_sample.index","b3d4cc77":"kidney.loc[kidney['red blood cells'].isnull(),'red blood cells']=random_sample","6fa46892":"kidney.head()","6558a6fd":"kidney['red blood cells'].isnull().sum()","d6d05547":"sns.countplot(kidney['red blood cells'])       # checking that ratio didnt change after filling missing values","6341e4f5":"#filling random values in all categorical columns\ndef Random_value_Imputation(feature):\n    random_sample=kidney[feature].dropna().sample(kidney[feature].isnull().sum())\n    random_sample.index=kidney[kidney[feature].isnull()].index\n    kidney.loc[kidney[feature].isnull(),feature]=random_sample","543de173":"Random_value_Imputation(' pus cell')     #only this column because it has higher no. of missing value","187bf802":"kidney.isnull().sum()","9ea0f5f3":"def impute_mode(feature):\n    mode=kidney[feature].mode()[0]\n    kidney[feature]=kidney[feature].fillna(mode)","372ee0fb":"for col in cat_col:\n    impute_mode(col)","1174ca6d":"kidney[cat_col].isnull().sum()","7d5bb5cf":"kidney.isnull().sum()","453b343a":"for col in cat_col:\n    print('{} has {} categories'.format(col,kidney[col].nunique()))","cad74a2f":"## Label Encoding  ---> Because there are less no. of categories in each column\n\n## normal -- 0\n## abnormal --1","70369243":" from sklearn.preprocessing import LabelEncoder","06e6dfcb":"le=LabelEncoder()","acc00139":"for col in cat_col:\n    kidney[col]=le.fit_transform(kidney[col])","128a0bc5":"kidney.head()","5c89fe9c":"from sklearn.feature_selection import SelectKBest","a8c9ac3c":"from sklearn.feature_selection import chi2","ed7a12fc":"ind_col=[col for col in kidney.columns if col!='class']\ndep_col='class'","1b6afb0d":"X=kidney[ind_col]\ny=kidney[dep_col]","8cd83023":"X.head()","dfb8c61f":"imp_features=SelectKBest(score_func=chi2,k=20)","64fa7845":"imp_features=imp_features.fit(X,y)","01a597a8":"imp_features","bf7f0761":"imp_features.scores_","fb16e434":"datascore=pd.DataFrame(imp_features.scores_,columns=['Score'])","5d8edbd1":"datascore","0f593790":"X.columns","32198e93":"dfcols=pd.DataFrame(X.columns)","6feaac6f":"dfcols","7322afe2":"features_rank=pd.concat([dfcols,datascore],axis=1)\nfeatures_rank","c59d6d34":"features_rank.columns=['features','score']","fa1b8739":"features_rank","a4b4e2f2":"features_rank.nlargest(10,'score')","ce953705":"selected=features_rank.nlargest(10,'score')['features'].values","9dcfb0bf":"selected","46b6e385":"X_new=kidney[selected]","e21795ec":"X_new.head()","f89fad44":"len(X_new)","fc065b60":"X_new.shape","f13956c5":"from sklearn.model_selection import train_test_split","fac09794":"X_train,X_test,y_train,y_test=train_test_split(X_new,y,random_state=0,test_size=0.3)","e785a0b8":"X_train.shape","b3bf59a9":"y_train.value_counts()    #Checking for imbalancing","22d1eb4a":"from xgboost import XGBClassifier","6c35e3c1":"params={'learning-rate':[0,0.5,0.20,0.25],\n        'max_depth':[5,8,10],\n       'min_child_weight':[1,3,5,7],\n       'gamma':[0.0,0.1,0.2,0.4],\n       'colsample_bytree':[0.3,0.4,0.7]}","ebaedb25":"from sklearn.model_selection import RandomizedSearchCV","0a67f4dc":"classifier=XGBClassifier()","418183d9":"random_search=RandomizedSearchCV(classifier,param_distributions=params,n_iter=5,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)","df80db1e":"random_search.fit(X_train,y_train)","28bde2e5":"random_search.best_estimator_    #Checking for best model","94f88a09":"random_search.best_params_","8f2f6051":"classifier=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.3, gamma=0.2, gpu_id=-1,\n              importance_type='gain', interaction_constraints='', learning_rate=0.300000012, max_delta_step=0,\n              max_depth=5, min_child_weight=1,\n              monotone_constraints='()', n_estimators=100, n_jobs=8,\n              num_parallel_tree=1, random_state=0, reg_alpha=0, reg_lambda=1,\n              scale_pos_weight=1, subsample=1, tree_method='exact',\n              validate_parameters=1, verbosity=None)","41ed5e77":"classifier.fit(X_train,y_train)","8a9a4fe7":"y_pred=classifier.predict(X_test)","62d9b9eb":"y_pred","77cd5929":"from sklearn.metrics import confusion_matrix,accuracy_score","89ee6d93":"confusion_matrix(y_test,y_pred)","a78e71ec":"accuracy_score(y_test,y_pred)","63c0e812":"Those categorical variables who have less no. of missing values then we can replace it with mode","556518ee":"from above visuals we can say that person with lower rbc count have high chances of having chronic disease","3de7a74d":"We can see that indexes are different , while putting random values indexes must be equal","c0a79985":"## Data cleaning","4b4e1e56":"We can see that there is a linear relationship between haemoglobin and pacled cell volume","ab163364":"## Selecting important features","7f813506":"### Feature Description:\n* id -id\n* age -age\n* bp -blood pressure\n* sg -specific gravity\n* al -albumin\n* su -sugar\n* rbc -red blood cells\n* pc - pus cell\n* pcc -pus cell clumps\n* ba -bacteria\n* bgr -blood glucose random\n* bu -blood urea\n* sc -serum creatinine\n* sod -sodium\n* pot -potassium\n* hemo -haemoglobin\n* pcv -packed cell volume\n* wc -white blood cell count\n* rc -red blood cell count\n* htn -ypertension\n* dm -diabetes mellitus\n* cad -coronary artery disease\n* appet -appetite\n* pe -pedal edema\n* ane -anemia\n* classification -class","5b7974dd":"We can see that there is no missing value now","b18883df":"## Exploratory Data Analysis","5f5e0981":"ratio didnt changed","4cb6120c":"## Correlation between features","06f730c8":"## Handling Missing Values","5275fb44":"## Prediction","52f61896":"#### Relationship between haemoglobin and packed cell volume","db51abbc":"Since we are using XGBoost , feature scaling is not required","e9ac09f5":"We got very good accuracy using XGBoost","1ed5a738":"##### Check Label distribution of categorical Data","8fc3aed0":"#### Filling missing values in categorical columns using random values","5051bbfc":"We can observe that when a person is not diseased its rbc count is 134, mean is also high whereas when he is diseased count drop downs to 25-40 and mean is low.","0774a88c":"* Rbc count is positively correlated with specific gravity,haemoglobin,packed cell volume\n* Rbc count is negatively correlated with albumin, blood urea\n* Packed cell volume and haemoglobin are highly positive correlated\n* Packed cell volume is negatively correlated with albumin and blood urea\n* haemoglobin and albumin are negatively correlated","8b0fadfe":"Analysing distribution of each and every column","a2b9b51c":"## Evaluation of the model","a5a412a0":"## XGBoost Classifier","41b43e56":"### Analyse distribution of red blood cell count chronic as well as non chronic","3f2a436c":"## Feature Encoding","04a052a2":"* We can see that there is some kind of linearity in all the relationships\n* Whenever haemoglobin is below 13-14 he is positive for chronic disease , Whenever haemoglobin is near 18 he is negative","ee43d5d1":"## Import libraries","ce11da81":"We can fill this missing values with mean,median or std deviat","98a2817d":"there are outliers in dataset so filling missing values with mean is not feasible , i will use median to fill missing values"}}