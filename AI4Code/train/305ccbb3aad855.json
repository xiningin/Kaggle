{"cell_type":{"8050e744":"code","6da8e73b":"code","7a0729cb":"code","cfadddeb":"code","47f67199":"code","f35e5382":"code","b72ef0c6":"code","dc482bc9":"code","384f34f6":"code","31821839":"code","aa10b995":"code","f59fe0f2":"code","9c3b7c1d":"code","10ce1c5f":"code","234b546d":"code","ec4e29bb":"code","01f9855f":"code","763f76be":"code","176f32d2":"code","eacfd953":"code","ee41ea14":"code","16a4ef06":"code","7ea15aff":"code","f240c7e1":"code","4cbf33f3":"code","8d9adc9e":"code","933f3865":"markdown","60035f55":"markdown","73661d2c":"markdown","7dd575a1":"markdown","e3a9d733":"markdown","723c55fa":"markdown","3a80e39e":"markdown","2c7e4b4c":"markdown","9154b4c7":"markdown","cbfa7715":"markdown","2db60874":"markdown","64a8dbee":"markdown","e79fe8c9":"markdown","33571eb8":"markdown","776c900b":"markdown","63fdf7fa":"markdown","64b9f1fd":"markdown","30721196":"markdown","bbcbb028":"markdown","b4ffb441":"markdown","11680bde":"markdown","6903eece":"markdown","2526e2da":"markdown","49154083":"markdown","b42ff726":"markdown","627319fa":"markdown","b723fbde":"markdown","5a6d35e2":"markdown","5b2a2725":"markdown","9736714f":"markdown","7f1452dc":"markdown","4c5cc671":"markdown","75c3791c":"markdown","2724e977":"markdown","3f7b2155":"markdown","c38a2f79":"markdown","d14557bd":"markdown"},"source":{"8050e744":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport cufflinks as cf\ncf.go_offline()\nimport nltk\nfrom nltk.corpus import stopwords\nnltk.download('stopwords')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6da8e73b":"df = pd.read_csv(r'\/kaggle\/input\/selfie-related-injuries\/Selfie_Related_Injuries.csv')","7a0729cb":"df.head()","cfadddeb":"df.count()","47f67199":"df.isna().sum()","f35e5382":"df.nunique()","b72ef0c6":"df.dtypes","dc482bc9":"df['Date'] =pd.to_datetime(df.Date)\ndf['Country'] = df.Country.apply(str)\ndf['Type'] = df.Type.apply(str)\ndf['Description'] = df.Description.apply(str)\n","384f34f6":"df.groupby('Date').agg({'Injuries\/Casualties':'sum'}).reset_index().plot(kind='line', y= 'Injuries\/Casualties', x= 'Date', figsize = (15,5))","31821839":"df.groupby('Date').agg({'Injuries\/Casualties':'sum'}).reset_index().sort_values(by = 'Injuries\/Casualties', ascending=False).head(30).plot(kind='bar', y= 'Injuries\/Casualties', x= 'Date', figsize = (12,5))","aa10b995":"df['casuality_month'] = df['Date'].dt.month\ndf.groupby('casuality_month').agg({'Injuries\/Casualties':'sum'}).reset_index().iplot(kind= 'bar',x ='casuality_month', y ='Injuries\/Casualties', title = 'Casuality by month')#, figsize = (10,5))","f59fe0f2":"df.groupby('Country').agg({'Injuries\/Casualties':'sum'}).reset_index().iplot(kind= 'barh',x ='Country', y ='Injuries\/Casualties', title = 'Casualities by Countries')#, figsize = (6,8))","9c3b7c1d":"df[df.Country=='India'].groupby(['Date']).agg({'Injuries\/Casualties':'sum'}).reset_index().sort_values(by = 'Injuries\/Casualties', ascending=False).plot(kind='line', y= 'Injuries\/Casualties', x= 'Date', figsize = (12,5))","10ce1c5f":"df[df.Country!='India'].groupby(['Date']).agg({'Injuries\/Casualties':'sum'}).reset_index().sort_values(by = 'Injuries\/Casualties', ascending=False).plot(kind='line', y= 'Injuries\/Casualties', x= 'Date', figsize = (12,5))","234b546d":"df[df.Country=='India'].groupby('casuality_month').agg({'Injuries\/Casualties':'sum'}).reset_index().plot(kind= 'line',x ='casuality_month', y ='Injuries\/Casualties', figsize = (10,5))","ec4e29bb":"fig, (ax1, ax2) = plt.subplots(1,2, figsize=(20,8))\ndf[df.Country!='India'].groupby('Type').agg({'Injuries\/Casualties':'sum'}).reset_index().sort_values(by ='Injuries\/Casualties').plot(kind= 'barh',x ='Type', y ='Injuries\/Casualties',ax=ax1)\ndf[df.Country=='India'].groupby('Type').agg({'Injuries\/Casualties':'sum'}).reset_index().sort_values(by = 'Injuries\/Casualties').plot(kind= 'barh',x ='Type', y ='Injuries\/Casualties', ax = ax2, )","01f9855f":"from scipy.stats import zscore\n\n#df['Injuries\/Casualties'].apply(zscore).plot(kind= 'hist')\n#df['Injuries\/Casualties'].plot(kind= 'box')\ndf['Injuries\/Casualties_Zscore'] = (df['Injuries\/Casualties'] - df['Injuries\/Casualties'].mean())\/df['Injuries\/Casualties'].std(ddof=0)\ndf[df['Injuries\/Casualties_Zscore'] > 3]","763f76be":"list(df[df['Injuries\/Casualties_Zscore'] > 3]['Description'])","176f32d2":"def ex(data):\n    l = list(data.split(\" \"))\n    for i in l:\n        if '-year-old' in str(i):\n            return i.strip()\n        \ndf['Age'] = df['Description'].apply(ex)\ndf['Age'] = df.Age.fillna('None')","eacfd953":"df['Age_value'] = df.Age.apply(lambda x : int(x.split('-')[0]) if x != 'None' else np.nan)\ndf.groupby('Age_value').agg({'Injuries\/Casualties': 'sum'}).reset_index().plot(kind  = 'barh', x = 'Age_value', figsize = (10,8))","ee41ea14":"min(df.Age)","16a4ef06":"max(df.Age_value.dropna())","7ea15aff":"df.groupby('Type').agg({'Age_value': 'min'}).reset_index().plot(kind  = 'barh', x = 'Type', figsize = (10,8))","f240c7e1":"l = []\nfor i in df.Description:\n    l.append(''.join(i))\nx = ''.join(l) \n#rake.apply(x)","4cbf33f3":"from wordcloud import WordCloud, STOPWORDS\n\nwordcloud = WordCloud(width = 800, height = 800,\n                background_color ='white',\n                stopwords = STOPWORDS,\n                min_font_size = 10).generate(x.lower())\n \n# plot the WordCloud image                      \nplt.figure(figsize = (8, 8), facecolor = None)\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.tight_layout(pad = 0)\n \nplt.show()","8d9adc9e":"count = {}\ncorpus = x.lower().split(\" \")\n\nfor i in corpus:\n    if i in stopwords.words('english'):\n        corpus.remove(i)\nfor i in corpus:\n    if i in count:\n        count[i]+=1\n    else :\n        count[i] = 1\n\nwords = pd.DataFrame(count.items(), columns=['words', 'freq'])\nwords[words.freq>20].head(10).plot(x='words', kind = 'barh')","933f3865":"## Observation:\n    - Most death occured by drowned in India\n    - Most death occured by Fail in other countries","60035f55":"# Create new column **AGE** from the description column \n## To get the value of Age we analyzed the description and get the age of a died person. \n#### here is how i get that","73661d2c":"## Observation:\n    - which is july","7dd575a1":"# Check the Most Frequent words in the Description corpus...\n### removed all the Stop words in english alphabet","e3a9d733":"## See the shape and counts of the data","723c55fa":"# Import all Necessary Libraries","3a80e39e":"### Here....","2c7e4b4c":"## Casualities age","9154b4c7":"# Let's see which month is having the most death..\n### Create new column from the data in Description of each Casuality","cbfa7715":"# Creating **WordCloud**","2db60874":"## Observation:\n    - Got the wordcloud..","64a8dbee":"## See the Casulities not belog to india..","e79fe8c9":"# The oldest, 68 Year old man died because of Selfie....","33571eb8":"## Observation:\n    - There is peak of Casualities in between 2017 - 2018\n    - Casualites started comes ro pictuer from 2014 a girl. \n    - It is still happening.","776c900b":"# Final Observation","63fdf7fa":"# Correcting the data Types","64b9f1fd":"## Now, see which country is having most death by Selfiesss..","30721196":"# Check if there are any Null Values","bbcbb028":"## Observation:\n    - Its India 187","b4ffb441":"# The date which the most death caused by #Selfies..","11680bde":"# Casualities type Total V\/s India..","6903eece":"## Unique values per column","2526e2da":"## The most death occured month by Selfies in #India...","49154083":"# The youngest 11 Year olf boy died because of Selfie....","b42ff726":"# Just analyzed the Description column see what's the outcome\n#### this code just to collect all the description values in a one graph","627319fa":"## See the Casualities in India caused by Selfies through out the Timeline...","b723fbde":"### I have used Z score to find the Outliers. As we see Z-score value is 12.74 which is higher than the Threshold. \n### We got one value some say this is an outlier but its not it is clearly mention in the Description.","5a6d35e2":"## Read the source file","5b2a2725":"## Observation:\n    - It is still increasing ","9736714f":"## Observation:\n    - As you can see the age 22 people died most while taking Selfies...\n    - The Age between 13 to 32 people dies most as compared to others","7f1452dc":"# Casualities throughout the years..","4c5cc671":"## Observation:\n    - See the Most frequent words in the corpus\n    - we can change the threshold of frequency to check all the words..","75c3791c":"### 0) From Age 22 to 32 is most died in because of Selfies, and the youngest 11 year old boy died and the oldest 68 year old. \n\n### 1) India has the most cases Recoded and it also has the larget Injuries\/Casualties rates in terms     of number according to the data.\n\n### 2) July month sees most death. \n\n### 3) Drowning and Falling from Somewhere are two most common Cause of Injuries\/Casualties. Also, in      India Drowning is the most common issue.\n\n### 4) Time Between 2017 and 2018 was the time when the Injuries\/Casualties rates Spiked Rapidly but        the good thing is rates again also came down.","2724e977":"# Check for Outliers","3f7b2155":"## Observation:\n    - we still don't know yet, why most of the deatch in July month","c38a2f79":"## Observation:\n    - Its 2017-07-16  in #India","d14557bd":"# This is how the data looks like"}}