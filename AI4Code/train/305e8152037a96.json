{"cell_type":{"b7dfd06e":"code","17f1f65e":"code","ab9e1f84":"code","d5f7aabf":"code","ff8fd6ee":"code","8da5070f":"code","6fa719cc":"code","29d5dbf6":"markdown","bac4f77b":"markdown","04e8f04a":"markdown","9f371b3c":"markdown","8d93a79c":"markdown","c67ac336":"markdown"},"source":{"b7dfd06e":"!pip install pyeasyga","17f1f65e":"from pyeasyga.pyeasyga import GeneticAlgorithm\n\ndef fitness(individual, data):\n    x = int(\"\".join(str(i) for i in individual), 2) \/ 10\n    if 0 <= x <= 4:\n        y = - ( x - 2 ) ** 2 + 4\n        return y\n    else:\n        return -1\n\ndata = [1, 1, 1, 1, 1, 1]\nga = GeneticAlgorithm(data)\nga.fitness_function = fitness\nga.run()\n\nprint(ga.best_individual())","ab9e1f84":"def fitness(individual, data):\n    x = int(\"\".join(str(i) for i in individual), 2) \/ 10 - 100\n    if -100 <= x <= 100:\n        y = x\n        return y\n    else:\n        return -10000000\n\n\ndata = [1 for _ in range(11)]\n\nga = GeneticAlgorithm(data)\nga.fitness_function = fitness\nga.run()\n\nprint(ga.best_individual())","d5f7aabf":"def fitness(individual, data):\n    x = int(\"\".join(str(i) for i in individual), 2) \/ 100 - 10\n    if -10 <= x <= 10:\n        y = -x**2\n        return y\n    else:\n        return -100\n\n\ndata = [1 for _ in range(11)]\n\nga = GeneticAlgorithm(data)\nga.fitness_function = fitness\nga.run()\n\nprint(ga.best_individual())","ff8fd6ee":"def fitness(individual, data):\n    x = int(\"\".join(str(i) for i in individual), 2) \/ 1000 - 3\n    if -3 <= x <= 1:\n        y = x**3 + (x - 1)**2\n        return y\n    else:\n        return -10000\n\n\ndata = [1 for _ in range(12)]\n\nga = GeneticAlgorithm(data)\nga.fitness_function = fitness\nga.run()\n\nprint(ga.best_individual())","8da5070f":"def fitness(individual, data):\n    x = int(\"\".join(str(i) for i in individual), 2) \/ 100\n    if 0 <= x <= 10:\n        y = (x ** 2 - 1)*(x - 3)*(x - 6)*(x - 11)\n        return y\n    else:\n        return -100\n\n\ndata = [1 for _ in range(10)]\n\nga = GeneticAlgorithm(data)\nga.fitness_function = fitness\nga.run()\n\nprint(ga.best_individual())","6fa719cc":"import math\n\ndef fitness(individual, data):\n    x_split = individual[0:7]\n    y_split = individual[7:14]\n    z_split = individual[14:]\n    \n    x = int(\"\".join(str(i) for i in x_split), 2) \/ 10\n    y = int(\"\".join(str(i) for i in y_split), 2) \/ 10\n    z = int(\"\".join(str(i) for i in z_split), 2) \/ 10\n    if 0 <= x <= 10 and 0 <= y <= 10 and 0 <= z <= math.pi :\n        return x**2 - (y + 2)*(3 + math.sin(z))\n    else:\n        return -100\n\n\ndata = [1 for _ in range(19)]\n\nga = GeneticAlgorithm(data)\nga.fitness_function = fitness\nga.run()\n\nprint(ga.best_individual())","29d5dbf6":"### Determine the highest value of Y in the equation y = x in the range (-100, 100) with an interval of 0.1","bac4f77b":"Determine the highest value of Y in the equation y= (x2\u22121)(x\u22123)(x\u22126)(x\u221211) in the range (0,10) withan interval of 0.01","04e8f04a":"### Determine the highest value of Y in the equation y=\u2212x2 in the range (-10, 10) with an interval of 0.01","9f371b3c":"### Determine the highest value of Y in the equation y=x3 + (x\u22121)2 in the range (-3, 1) with an interval of 0.001","8d93a79c":"### Determine the highest value off(x,y,z) in the equation f(x,y,z) = x2 \u2212 (y+ 2) 3+sin(z) in the ranges (0,10),(0,10) and (0,\u03c0) with an interval of 0.1","c67ac336":"# Example"}}