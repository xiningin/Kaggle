{"cell_type":{"2dc736be":"code","58301117":"code","bc3226fd":"code","a61a1ef8":"code","54199614":"code","51616850":"code","bf2d400b":"code","3a3f5465":"code","7e532da5":"code","44ab7ffc":"code","68e56f3f":"code","f623cbbe":"code","b956c82e":"markdown"},"source":{"2dc736be":"# First, we'll import pandas, a data processing and CSV file I\/O library\nimport pandas as pd\n\n# We'll also import seaborn, a Python graphing library\nimport warnings # current version of seaborn generates a bunch of warnings that we'll ignore\nwarnings.filterwarnings(\"ignore\")\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(style=\"white\", color_codes=True)\n\n# Next, we'll load the Iris flower dataset, which is in the \"..\/input\/\" directory\niris = pd.read_csv(\"..\/input\/Iris.csv\") # the iris dataset is now a Pandas DataFrame\n\n# Let's see what's in the iris data - Jupyter notebooks print the result of the last thing you do\niris.head()\n\n# Press shift+enter to execute this cell","58301117":"# Let's see how many examples we have of each species\niris[\"Species\"].value_counts()","bc3226fd":"# The first way we can plot things is using the .plot extension from Pandas dataframes\n# We'll use this to make a scatterplot of the Iris features.\niris.plot(kind=\"scatter\", x=\"SepalLengthCm\", y=\"SepalWidthCm\")","a61a1ef8":"# We can also use the seaborn library to make a similar plot\n# A seaborn jointplot shows bivariate scatterplots and univariate histograms in the same figure\nsns.jointplot(x=\"SepalLengthCm\", y=\"SepalWidthCm\", data=iris, size=5)","54199614":"# One piece of information missing in the plots above is what species each plant is\n# We'll use seaborn's FacetGrid to color the scatterplot by species\nsns.FacetGrid(iris, hue=\"Species\", size=5) \\\n   .map(plt.scatter, \"SepalLengthCm\", \"SepalWidthCm\") \\\n   .add_legend()","51616850":"# We can look at an individual feature in Seaborn through a boxplot\nsns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=iris)","bf2d400b":"# One way we can extend this plot is adding a layer of individual points on top of\n# it through Seaborn's striplot\n# \n# We'll use jitter=True so that all the points don't fall in single vertical lines\n# above the species\n#\n# Saving the resulting axes as ax each time causes the resulting plot to be shown\n# on top of the previous axes\nax = sns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=iris)\nax = sns.stripplot(x=\"Species\", y=\"PetalLengthCm\", data=iris, jitter=True, edgecolor=\"gray\")","3a3f5465":"# A violin plot combines the benefits of the previous two plots and simplifies them\n# Denser regions of the data are fatter, and sparser thiner in a violin plot\nsns.violinplot(x=\"Species\", y=\"PetalLengthCm\", data=iris, size=6)","7e532da5":"# A final seaborn plot useful for looking at univariate relations is the kdeplot,\n# which creates and visualizes a kernel density estimate of the underlying feature\nsns.FacetGrid(iris, hue=\"Species\", size=6) \\\n   .map(sns.kdeplot, \"PetalLengthCm\") \\\n   .add_legend()","44ab7ffc":"# Another useful seaborn plot is the pairplot, which shows the bivariate relation\n# between each pair of features\n# \n# From the pairplot, we'll see that the Iris-setosa species is separataed from the other\n# two across all feature combinations\nsns.pairplot(iris.drop(\"Id\", axis=1), hue=\"Species\", size=3)","68e56f3f":"# The diagonal elements in a pairplot show the histogram by default\n# We can update these elements to show other things, such as a kde\nsns.pairplot(iris.drop(\"Id\", axis=1), hue=\"Species\", size=3, diag_kind=\"kde\")","f623cbbe":"# Now that we've covered seaborn, let's go back to some of the ones we can make with Pandas\n# We can quickly make a boxplot with Pandas on each feature split out by species\niris.drop(\"Id\", axis=1).boxplot(by=\"Species\", figsize=(12, 6))\n\n\n","b956c82e":"## This notebook demos Python data visualizations on the Iris dataset\n\nThis Python 3 environment comes with many helpful analytics libraries installed. It is defined by the [kaggle\/python docker image](https:\/\/github.com\/kaggle\/docker-python)\n\nWe'll use three libraries for this tutorial: [pandas](http:\/\/pandas.pydata.org\/), [matplotlib](http:\/\/matplotlib.org\/), and [seaborn](http:\/\/stanford.edu\/~mwaskom\/software\/seaborn\/).\n\nPress \"Fork\" at the top-right of this screen to run this notebook yourself and build each of the examples."}}