{"cell_type":{"1d0cbb8c":"code","afd30ce7":"code","15f35c3c":"code","e623d114":"code","2adae752":"code","9b3e97ff":"code","5eaefef9":"code","13a03b1d":"code","a97a6ea9":"code","a9ef4ef9":"code","ad619056":"code","fa94d2f7":"code","77bfd63e":"code","df61139c":"code","b56ac611":"code","12248b96":"code","ed0bb23f":"code","ea084348":"code","8620f45f":"code","05ff6372":"code","e4150b17":"code","c13b3b9b":"code","1e4a76ac":"code","6ba824ec":"code","f1662d08":"markdown","8938b40a":"markdown","ef3e7b65":"markdown","f0694129":"markdown","119e151b":"markdown","5df3e6e5":"markdown","5c1d7915":"markdown","4ac09d9f":"markdown","c03e86f0":"markdown","f26081d2":"markdown","51e73f29":"markdown","9992ef81":"markdown","a601bdce":"markdown","719a31a2":"markdown","4c8dcc64":"markdown"},"source":{"1d0cbb8c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","afd30ce7":"df = pd.read_csv('..\/input\/hippocorpus\/hippoCorpusV2.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf.head(2)","15f35c3c":"!pip install dataprep","e623d114":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","2adae752":"plot(df)","9b3e97ff":"plot(df, \"annotatorGender\")","5eaefef9":"plot(df, \"WorkTimeInSeconds\")","13a03b1d":"plot(df, \"similarity\")","a97a6ea9":"plot(df, \"frequency\",\"draining\")","a9ef4ef9":"plot(df, \"annotatorRace\",\"distracted\")","ad619056":"plot(df, \"mainEvent\",\"logTimeSinceEvent\")","fa94d2f7":"plot(df, \"mostSurprising\",\"memType\")","77bfd63e":"plot(df, \"recImgPairId\",\"recAgnPairId\")","df61139c":"plot(df, \"annotatorGender\",\"stressful\")","b56ac611":"plot(df, \"importance\", bins=20)","12248b96":"#API Correlation\nplot_correlation(df)","ed0bb23f":"#Top \u2018k\u2019 attributes\u2019 correlation heatmap (here, k=1)\n\nplot_correlation(df, k=1)","ea084348":"plot_correlation(df, \"annotatorAge\")","8620f45f":"plot_correlation(df, \"frequency\", value_range=[-1, 0.3])","05ff6372":"plot_correlation(df, x=\"logTimeSinceEvent\", y=\"timeSinceEvent\", k=5)","e4150b17":"plot_missing(df)","c13b3b9b":"plot_missing(df, \"annotatorAge\", \"importance\") #count of rows with and without dropping the missing values","1e4a76ac":"from dataprep.eda import create_report\n\ndf = pd.read_csv(\"\/kaggle\/input\/hippocorpus\/hippoCorpusV2.csv\")\ncreate_report(df)","6ba824ec":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","f1662d08":"#Understand the relationship between two columns with plot(df, x, y)\n\nNext, we can explore the relationship between columns x and y using plot(df, x, y). The output depends on the types of the columns.\n\n#When x and y are both numerical columns, it generates a scatter plot, hexbin plot and box plot:","8938b40a":"#create_report: generate profile reports from a Pandas dataframe.\n\nThe goal of create_report is to generate profile reports from a pandas DataFrame. create_report utilizes the functionalities and formats the plots from dataprep. It provides information like overview, variables, quantile statistics (minimum value, Q1, median, Q3, maximum, range, interquartile range), descriptive statistics (mean, mode, standard deviation, sum, median absolute deviation, coefficient of variation, kurtosis, skewness), text analysis for length, sample and letter, correlations and missing values.\n\nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","ef3e7b65":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Dataprep The easiest way to prepare data in Python<\/h3>\n\nDataPrep is free, open-source software released under the MIT license. Anyone can reuse DataPrep code for any purpose.\n\nDataPrep is built using Pandas\/Dask DataFrame and can be seamlessly integrated with other Python libraries.\n\nDataPrep is designed for computational notebooks, the most popular environment among data scientists.\n\nhttps:\/\/dataprep.ai\/","f0694129":"#If a user is interested in one or two specific columns, it provides a more detailed plot for the #specific columns by passing column names as the parameter.","119e151b":"#Plot correlation: analyze correlations\n\nIt plots the correlation matrix between columns. \nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","5df3e6e5":"#plot_missing(): analyze missing values\n\nThey provide an API plot_missing to analyze the pattern and impact of missing values. At the first glance, it shows the position of missing values, which allows the user to be aware of data quality for each column or find any underlying pattern of missing values.\nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","5c1d7915":"#Correlation of specified element with all other attributes. (ie. annotatorAge  with everything else).","4ac09d9f":"#Correlation between two attributes with line of best fit and most influential points.\nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","c03e86f0":"#Missing values from Specific columns\n\nTo understand the impact of missing values from a specific column, users can pass the column name into the parameter. It will compare the distribution of each column with and without missing values from the given column, such that the user could understand the impact of the missing values.\nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","f26081d2":"DATAPREPARE EDA by Slavvy Coelho\n\nAuthors: Slavvy Coelho, Ruchita Rozario\n\nMentor: Dr. Jiannan Wang, Director, SFU\u2019s Professional Master\u2019s Programs (Big Data and Cybersecurity and Visual Computing)\n\nDataprepare is an initiative by SFU Data Science Research Group to speed up Data Science. Dataprep.eda attempts to simplify the entire EDA process with very minimal lines of code.  EDA is a very essential and time-consuming part of the data science pipeline, having a tool that eases the process is a boon.\n\nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","51e73f29":"#When x and y are both categorical columns, it plots a nested bar chart, stacked bar chart and heat map.","9992ef81":"#Only 3 (Three) Seconds. I liked that! ","a601bdce":"#All the correlation values that lie within the given range. (-1, 0.3) for frequency will appear in the plot.","719a31a2":"#When x is a numerical column, it computes column statistics, and generates a histogram, kde plot, box plot and qq-normal plot:","4c8dcc64":"#Understand a column with plot(df, x)\n\nAfter getting an overview of the dataset, we can thoroughly investigate a column of interest x using plot(df, x). The output is of plot(df, x) is different for numerical and categorical columns.\n\nWhen x is a categorical column, it computes column statistics, and plots a bar chart and pie chart.\n\n#It Includes WordCloud! Plus Word frequency and length"}}