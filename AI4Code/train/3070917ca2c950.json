{"cell_type":{"e5c83d12":"code","c626c52f":"code","252a7b09":"code","582a645c":"code","acce5ac8":"code","722e10c2":"code","29967dd4":"code","2a7a81e5":"code","a3cdb365":"code","793ac2d4":"code","a96b71e9":"code","d7606e5a":"code","c7a01500":"code","b87f96fa":"code","47e90f02":"code","2bb96d11":"markdown","e8760b99":"markdown","1ae5c2ca":"markdown","ce1c6098":"markdown","cdbf0c70":"markdown","e7221cd3":"markdown"},"source":{"e5c83d12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c626c52f":"data=pd.read_csv('..\/input\/ipl-complete-dataset-20082020\/IPL Matches 2008-2020.csv')","252a7b09":"data.head()","582a645c":"data.head(-5)","acce5ac8":"data.info()","722e10c2":"data.drop(['method'],axis=1,inplace=True)","29967dd4":"data.info()","2a7a81e5":"temp=pd.DataFrame({\"Winner\": data['winner']})\ncount_wins=temp.value_counts()\n# print(count_wins)\nlabels=[X[0] for X in count_wins.keys()]\nbar,ax=plt.subplots(figsize=(20,12))\nax=plt.pie(x=count_wins,autopct=\"%.1f%%\",labels=labels)\nplt.title(\"Most wins in IPL\",fontsize=17)\nplt.show()","a3cdb365":"sns.countplot(data['winner'][data['eliminator']=='Y'],data=data)\nplt.title(\"Most wins in Eleminator\",fontsize=17)\nplt.xticks(rotation=90)\nplt.show()","793ac2d4":"teams=data['toss_winner'].unique()\ndecision_making=pd.DataFrame([],columns=['Toss Winner','Decision','Times'])\nfor id,element in enumerate(teams):\n    temp_bat=data[(data['toss_winner']==element) & (data['toss_decision']=='bat')]\n    temp_field=data[(data['toss_winner']==element) & (data['toss_decision']=='field')]\n    decision_making=decision_making.append({'Toss Winner':element,'Decision':'bat','Times':temp_bat['toss_winner'].count()},ignore_index=True)\n    decision_making=decision_making.append({'Toss Winner':element,'Decision':'field','Times':temp_field['toss_winner'].count()},ignore_index=True)","a96b71e9":"decision_making","d7606e5a":"sns.catplot(x=\"Toss Winner\",y='Times',hue=\"Decision\",data=decision_making,kind='bar',height=5,aspect=2)\nplt.xticks(rotation=90)\nplt.title(\"Toss Decision of Teams\")\nplt.xlabel(\"IPL Teams\")\nplt.ylabel(\"Toss Decision\")\nplt.show()","c7a01500":"sns.barplot(x=data['venue'].value_counts().head(10).values,y=data['venue'].value_counts().head(10).index,data=data)\nplt.title(\"Famous Venues\")\nplt.xlabel(\"Venue Count\")\nplt.ylabel(\"Venue\")\nplt.show()","b87f96fa":"sns.barplot(x=data['umpire1'].value_counts().head().index,\n            y=data['umpire1'].value_counts().head().values,\n            data=data)\nplt.xticks(rotation=45)\nplt.xlabel=(\"umpire 1\")\nplt.ylabel(\"Match Count\")\nplt.title('Top 5 Umpires')\nplt.show()","47e90f02":"sns.barplot(x=data['umpire2'].value_counts().head(6).values,\n            y=data['umpire2'].value_counts().head(6).index,\n            data=data)\nplt.xticks(rotation=45)\nplt.xlabel=(\"Match Count\")\nplt.ylabel(\"Umpire 2\")\nplt.title('Top 5 Umpires_2')\nplt.show()","2bb96d11":"### For 2nd umpire","e8760b99":"### Winn\/Lose according to toss decision\n","1ae5c2ca":"### Most wins in IPL","ce1c6098":"### Top 5 Umpires","cdbf0c70":"### Top 10 Famous Venues","e7221cd3":"### Most wins in Eliminator"}}