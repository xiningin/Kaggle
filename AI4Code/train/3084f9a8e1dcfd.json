{"cell_type":{"bb10fac3":"code","5af1d17a":"code","fea37202":"code","bfb75239":"code","eac5f672":"code","6b08a27c":"code","8311a871":"code","35270762":"code","121df636":"code","a853a1bf":"code","f4502562":"code","e8ef1d2b":"code","f66e5c1a":"code","c4bbe814":"code","e0461706":"code","e98fa18e":"code","f1605ef6":"code","1f4b003b":"code","7a5cf988":"code","fe7ea623":"code","11deb2da":"code","f1ecf625":"code","d26ffd0a":"code","c4f85980":"code","d6fb96e2":"code","aee23982":"code","0a3d602e":"code","83e75207":"code","0d06804d":"code","af67ad54":"code","e86a37cd":"code","a4afe0a6":"code","dbf35988":"code","a606e9ac":"code","f3b61dd5":"code","5895822c":"code","567a9599":"code","bd012b87":"code","a5fffcac":"code","0515f936":"code","de58be56":"code","8ff019ae":"code","2762c302":"code","7524850e":"code","c394c5ab":"code","139f1e8c":"markdown","fe73265c":"markdown","0e77f007":"markdown","99bd2664":"markdown","a367b3bd":"markdown","bb1e7902":"markdown","fa53024b":"markdown","354ca454":"markdown","5caf888e":"markdown"},"source":{"bb10fac3":"import numpy as np\nimport pandas as pd\nimport datetime\nimport seaborn as sns\nimport matplotlib.pyplot as plt","5af1d17a":"beer_df = pd.read_csv(\"..\/input\/beer-consumption-sao-paulo\/Consumo_cerveja.csv\")","fea37202":"beer_df","bfb75239":"beer_df.info()","eac5f672":"# Dropping rows with all NAN Values\nbeer_df.dropna(how = 'all', inplace = True)","6b08a27c":"beer_df.info()","8311a871":"# Replacing commas with period\nbeer_df.replace({',':'.'}, regex = True, inplace = True)","35270762":"beer_df","121df636":"beer_df.info()","a853a1bf":"# Converting the type of Data to Date time\nbeer_df['Data'] = pd.to_datetime(beer_df['Data'])","f4502562":"beer_df.info()\ndays = ['Monday','Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday']","e8ef1d2b":"beer_df['Day'] = beer_df['Data'].apply(lambda a: days[a.weekday()])","f66e5c1a":"beer_df['Day']","c4bbe814":"plt.figure(figsize=(10,5))\nax = sns.barplot(x=\"Day\", y=\"Consumo de cerveja (litros)\", data=beer_df)","e0461706":"beer_df.drop(['Data','Day'], axis = 1, inplace = True)","e98fa18e":"# Converting temperature and rainfall columns into float type\nbeer_df  = beer_df.apply(pd.to_numeric)","f1605ef6":"beer_df.info()","1f4b003b":"ax = sns.pairplot(beer_df)","7a5cf988":"import statsmodels.api  as sm","fe7ea623":"from sklearn.model_selection import train_test_split\n\n# We specify this so that the train and test data set always have the same rows, respectively\nnp.random.seed(0)\ndf_train, df_test = train_test_split(beer_df, train_size = 0.7, test_size = 0.3, random_state = 100)","11deb2da":"from sklearn.preprocessing import MinMaxScaler","f1ecf625":"scaler = MinMaxScaler()","d26ffd0a":"# Apply scaler() to all the columns except the 'yes-no' variables\nnum_vars = ['Temperatura Media (C)',\n'Temperatura Minima (C)',\n'Temperatura Maxima (C)',\n'Precipitacao (mm)',\n'Consumo de cerveja (litros)']\ndf_train[num_vars] = scaler.fit_transform(df_train[num_vars])","c4f85980":"df_train.head()","d6fb96e2":"# Dividing into X and Y sets for model building\ny_train = df_train.pop('Consumo de cerveja (litros)')\nX_train = df_train","aee23982":"# Add a constant because for stats model we need to explicitely add a constant or the line passes through origin by default\nX_train_lm = sm.add_constant(X_train)","0a3d602e":"lr = sm.OLS(y_train, X_train_lm).fit()","83e75207":"# Print a summary of the linear regression model obtained\nprint(lr.summary())","0d06804d":"from statsmodels.stats.outliers_influence import variance_inflation_factor","af67ad54":"# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train.columns\nvif['VIF'] = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","e86a37cd":"X = X_train.drop('Temperatura Media (C)', 1,)","a4afe0a6":"# Building another model\nX_train_lm = sm.add_constant(X)\n\nlr_2 = sm.OLS(y_train, X_train_lm).fit()","dbf35988":"# Print a summary of the linear regression model obtained\nprint(lr_2.summary())","a606e9ac":"# Calculate the VIFs again for the new model\nvif = pd.DataFrame()\nvif['Features'] = X.columns\nvif['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","f3b61dd5":"X = X.drop('Temperatura Minima (C)', 1,)","5895822c":"# Building another model\nX_train_lm = sm.add_constant(X)\n\nlr_3 = sm.OLS(y_train, X_train_lm).fit()","567a9599":"# Printing the summary of the linear regression model obtained\nprint(lr_3.summary())","bd012b87":"y_train_pred = lr_3.predict(X_train_lm)","a5fffcac":"fig = plt.figure()\nsns.distplot((y_train - y_train_pred), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18)               ","0515f936":"df_test[num_vars] = scaler.transform(df_test[num_vars])","de58be56":"y_test = df_test.pop('Consumo de cerveja (litros)')\nX_test = df_test","8ff019ae":"X_test = sm.add_constant(X_test)","2762c302":"X_test = X_test.drop(['Temperatura Minima (C)', 'Temperatura Media (C)'], axis = 1)","7524850e":"y_pred = lr_3.predict(X_test)","c394c5ab":"# Plotting y_test and y_pred to understand the spread\n\nfig = plt.figure()\nplt.scatter(y_test, y_pred)\nfig.suptitle('y_test vs y_pred', fontsize = 20)              # Plot heading \nplt.xlabel('y_test', fontsize = 18)                          # X-label\nplt.ylabel('y_pred', fontsize = 16)     ","139f1e8c":"Lets see how the varibles are correlated with a scatterplot","fe73265c":"The plots are pretty much expected the 'Temperatura Media (C)','Temperatura Minima (C)','Temperatura Maxima (C)' are correlated to each other. There is not much correlation between 'Precipitacao (mm)' and the temperature relted variables.\nLets build our model and see how the variables influence beer consumption","0e77f007":"This shows that the days of the week doesnt matter much atleast in this data set and we can drop the 'Data' and the 'Day' columns and use the 'Final de Semana' (Weekend) to continue our analysis","99bd2664":"We can see from the VIF values and the p value the Temperature Media (C) has to be dropped to get a better model","a367b3bd":"We could either remove the date column or convert it into days and see if beer consumption is affected by day of the week. Generally it is assumed that weekends have higher alcohol consumption than weekdays and we already have a column for that. Lets just look at the days as well before we decide to drop the date column or convert into days.","bb1e7902":"Lets check the performance of our model.","fa53024b":"We see from the above test results and coeffcients obtained:\n\n1) The main dependence on beer consumption is on the Maximum temperature so with high temperatures the beer consumptions goes up\n\n2) Next is on the rainfall, if there is rain, the consumption drops down\n\n3) Depends on weather a particular day is a weekend or not, weekends have more consumption than weekdays.\n\nOnce again these are correlations and need not necesarrily imply causation.","354ca454":"Looks like lot of rows have all missing values and there seems to be some data discrepency with the Temperature media etc., instead of a decimal point we have a comma. This needs to be addressed. Date column can be feature engineered, to be split into days. Since the language is Portuguese, converting the column names into English would be convinient.","5caf888e":"Since 'Temperatura Minima (C)' has high VIF and p value, lets drop this column and build another model"}}