{"cell_type":{"b7cdee3a":"code","f2210d47":"code","d8f842d3":"code","c7eeadf4":"code","472d8470":"code","38741456":"code","c590d5e6":"code","bab63a76":"code","bb948172":"code","15e20d22":"code","42de50aa":"code","a9494ab3":"code","c492c57c":"code","3e241854":"code","633109b4":"code","3d2e60b4":"code","7cdac465":"code","f4f3d6de":"code","c0b180f2":"code","96fa665b":"code","101eddfc":"code","58ba839d":"code","49f93fe7":"code","e4b49742":"code","98fe8b3d":"code","a83c25cd":"code","8ae1a4ea":"code","76ce1b42":"code","80f1ada7":"code","fe9083b4":"code","839eae0a":"code","b065c337":"code","4e368603":"markdown","a0cf9db8":"markdown","21ab49b8":"markdown","3a680806":"markdown","dace0aa1":"markdown","5cdfa88f":"markdown","3dd1d246":"markdown","14f5c3e8":"markdown","d93dde38":"markdown","47ea903b":"markdown"},"source":{"b7cdee3a":"import numpy as np \nimport matplotlib.pyplot as plt \nimport matplotlib.colors as mcolors\nimport pandas as pd \nimport random\nimport math\nimport time\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import RandomizedSearchCV, train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport datetime\nimport operator\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('seaborn')\n%matplotlib inline ","f2210d47":"# confirmed_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\n# deaths_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv')\n# recoveries_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv')\n\nconfirmed_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndeaths_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\nrecoveries_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')","d8f842d3":"pakistan_confirmed_df = confirmed_df[confirmed_df['Country\/Region'] == 'Pakistan']","c7eeadf4":"pakistan_deaths_df = deaths_df[deaths_df['Country\/Region'] == 'Pakistan']","472d8470":"pakistan_recoveries_df = recoveries_df[recoveries_df['Country\/Region'] == 'Pakistan']","38741456":"pakistan_confirmed_df","c590d5e6":"confirmed = pakistan_confirmed_df.iloc[:, 4:].T\ndeaths = pakistan_deaths_df.iloc[:, 4:].T\nrecoveries = pakistan_recoveries_df.iloc[:, 4:].T","bab63a76":"confirmed = confirmed.rename(columns={199: \"confirmed_cases\"})\ndeaths = deaths.rename(columns={199: \"deaths\"})\nrecoveries = recoveries.rename(columns={186: \"recoveries\"})\nconfirmed.index = pd.to_datetime(confirmed.index)\ndeaths.index = pd.to_datetime(deaths.index)\nrecoveries.index = pd.to_datetime(recoveries.index)","bb948172":"print('Pakistan Confirmed Cases ' + str(confirmed['confirmed_cases'][-1]))\nprint('Pakistan Death Cases ' + str(deaths['deaths'][-1]))\nprint('Pakistan Recovery Cases ' + str(recoveries['recoveries'][-1]))\npakistan_active_cases = (confirmed['confirmed_cases'] - deaths['deaths'] - recoveries['recoveries'])\nprint('Active cases in Pakistan ' + str(pakistan_active_cases[-1]))","15e20d22":"print(confirmed.index)\nprint(deaths.index)\nprint(recoveries.index)","42de50aa":"dates = confirmed.index\ndays_since_1_22 = np.array([i for i in range(len(dates))]).reshape(-1, 1)\npakistan_cases = confirmed['confirmed_cases'].T\npakistan_total_deaths = deaths['deaths'].T\npakistan_total_recovered = recoveries['recoveries'].T","a9494ab3":"# calculate rates\nmortality_rate = []\nrecovery_rate = [] \nmortality_rate.append(deaths['deaths']\/confirmed['confirmed_cases'])\nrecovery_rate.append(recoveries['recoveries']\/confirmed['confirmed_cases'])","c492c57c":"days_in_future = 10\nfuture_forcast = np.array([i for i in range(len(dates)+days_in_future)]).reshape(-1, 1)\nadjusted_dates = future_forcast[:-10]","3e241854":"start = '1\/22\/2020'\nstart_date = datetime.datetime.strptime(start, '%m\/%d\/%Y')\nfuture_forcast_dates = []\nfor i in range(len(future_forcast)):\n    future_forcast_dates.append((start_date + datetime.timedelta(days=i)).strftime('%m\/%d\/%Y'))","633109b4":"# X_train_confirmed, X_test_confirmed, y_train_confirmed, y_test_confirmed = train_test_split(days_since_1_22, confirmed['confirmed_cases'], test_size=0.01, shuffle=False) ","3d2e60b4":"confirmed_cases = np.array(confirmed['confirmed_cases']).reshape(-1, 1)","7cdac465":"poly = PolynomialFeatures(degree=5)\npoly_X_train_confirmed = poly.fit_transform(days_since_1_22)\npoly_X_test_confirmed = poly.fit_transform(confirmed_cases)\npoly_future_forcast = poly.fit_transform(future_forcast)","f4f3d6de":"linear_model = LinearRegression(normalize=True, fit_intercept=False)\nlinear_model.fit(poly_X_train_confirmed, confirmed_cases)\n#test_linear_pred = linear_model.predict(poly_X_test_confirmed)\nlinear_pred = linear_model.predict(poly_future_forcast)\n# print('MAE:', mean_absolute_error(test_linear_pred, y_test_confirmed))\n# print('MSE:',mean_squared_error(test_linear_pred, y_test_confirmed))","c0b180f2":"print(linear_model.coef_)","96fa665b":"plt.figure(figsize=(15, 8))\nplt.scatter(adjusted_dates, pakistan_cases)\nplt.title('# of Coronavirus Cases Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\n#plt.savefig('Pakistan_cases_over_time_scatter_plot.png')\nplt.show()","101eddfc":"plt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, pakistan_cases)\nplt.title('# of Coronavirus Cases Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\n#plt.savefig('Pakistan_cases_over_time_line_plot.png')\nplt.show()","58ba839d":"plt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, pakistan_cases)\nplt.plot(future_forcast, linear_pred, linestyle='dashed', color='orange')\nplt.title('Pakistan # of Coronavirus Cases Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\nplt.legend(['Confirmed Cases', 'Polynomial Regression Predictions'], prop={'size': 20})\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.savefig('Pakistan_cases_next_10_day_pred.png')\nplt.show()","49f93fe7":"# Future predictions using Polynomial Regression \nlinear_pred = linear_pred.reshape(1,-1)[0]\nprint('Polynomial regression future predictions:')\nset(zip(future_forcast_dates[-10:], np.round(linear_pred[-10:])))","e4b49742":"plt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, pakistan_active_cases, color='purple')\nplt.title('# of Coronavirus Active Cases Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Active Cases', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","98fe8b3d":"plt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, pakistan_total_deaths, color='red')\nplt.title('# of Coronavirus Deaths Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Deaths', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","a83c25cd":"nan = np.isnan(mortality_rate)\nmortality_rate = np.array(mortality_rate)\nmortality_rate[nan] = 0.0","8ae1a4ea":"mean_mortality_rate = np.mean(mortality_rate.T)\nplt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, mortality_rate.T, color='orange')\nplt.axhline(y = mean_mortality_rate,linestyle='--', color='black')\nplt.title('Mortality Rate of Coronavirus Over Time', size=30)\nplt.legend(['mortality rate', 'y='+str(mean_mortality_rate)], prop={'size': 20})\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('Mortality Rate', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","76ce1b42":"plt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, pakistan_total_recovered, color='green')\nplt.title('# of Coronavirus Cases Recovered Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","80f1ada7":"nan = np.isnan(recovery_rate)\nrecovery_rate = np.array(recovery_rate)\nrecovery_rate[nan] = 0.0","fe9083b4":"mean_recovery_rate = np.mean(recovery_rate.T)\nplt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, recovery_rate.T, color='blue')\nplt.axhline(y = mean_recovery_rate,linestyle='--', color='black')\nplt.title('Recovery Rate of Coronavirus Over Time', size=30)\nplt.legend(['recovery rate', 'y='+str(mean_recovery_rate)], prop={'size': 20})\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('Recovery Rate', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","839eae0a":"plt.figure(figsize=(15, 8))\nplt.plot(adjusted_dates, pakistan_total_deaths, color='r')\nplt.plot(adjusted_dates, pakistan_total_recovered, color='green')\nplt.legend(['death', 'recoveries'], loc='best', fontsize=20)\nplt.title('# Death and Recoveries of Coronavirus Cases Over Time', size=30)\nplt.xlabel('Days Since 1\/22\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.savefig('Pakistan_Death_Recoveries_cases_over_time.png')\nplt.show()","b065c337":"plt.figure(figsize=(15, 8))\nplt.plot(pakistan_total_recovered, pakistan_total_deaths)\nplt.title('# of Coronavirus Deaths vs. # of Coronavirus Recoveries', size=30)\nplt.xlabel('# of Coronavirus Recoveries', size=30)\nplt.ylabel('# of Coronavirus Deaths', size=30)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","4e368603":"## Plotting the number of deaths against the number of recoveries","a0cf9db8":"## Get all dates for the outbreak","21ab49b8":"## Next 10 days forcasting","3a680806":"## Import Data (make sure update file on daily basis)","dace0aa1":"## Author: Tauqeer Sajid\n## This notebook tracks the spread of the novel coronavirus in Pakistan\n## Stay Home Stay safe","5cdfa88f":" ### Visualize the number of confirmed cases, deaths, active cases, and the mortality rate over time, and recoveries","3dd1d246":"### Model for predicting # of confirmed cases. I am using linear regression. ","14f5c3e8":"## Convert integer into datetime to make visualization better","d93dde38":"## visualize deaths against recoveries","47ea903b":"### Active cases in Pakistan"}}