{"cell_type":{"8b5871ea":"code","c0b6131d":"code","1edf8a41":"code","beca1f5b":"code","b79772a8":"code","8f96ee12":"code","76d93c82":"code","7d6b1d7c":"code","29f1a595":"code","ec7627ae":"code","dafb6a74":"code","31adb245":"code","3972d04d":"code","9cd73cd7":"code","fc59fdf8":"code","9693f337":"code","93bd62a4":"code","c79ce4f5":"code","dea579fa":"code","75d0929b":"code","82360dbb":"code","f5e9b391":"code","9213d74a":"code","f49ba1ef":"code","83b2f23e":"code","72600472":"code","88994965":"code","04e45993":"code","e7cb06b1":"code","fd976510":"code","01f6e1ff":"code","c9ae4ebd":"code","5408de1a":"code","cf95173b":"code","891a7857":"code","f3884b2e":"code","8deb174f":"code","ee669245":"code","af9acae5":"code","45375cd4":"code","13d05676":"code","5b32d08d":"code","99f623d6":"code","faba6ea5":"code","6f5b946e":"code","8bc76de9":"code","f5983d30":"code","6ebad32c":"code","4cbfcff0":"code","985abc47":"code","0afe6072":"code","32a11790":"code","c52d423e":"code","5fb4cf5f":"code","54b45185":"code","24b8f593":"code","d2d2b5dd":"code","750724e2":"code","239a1c51":"code","3f33f5a3":"code","01b38d73":"code","cb9623bf":"code","4bc123a3":"code","16a0d92b":"code","967424fc":"code","74006c74":"code","6639d8b2":"code","8a9f9343":"code","d7cf8b80":"code","2654f4aa":"code","a230d582":"code","809dec67":"code","e7ffd6ac":"code","82c59515":"code","6a2b3564":"code","a53197bb":"code","f335125c":"code","1605baef":"code","08840b01":"code","6145d959":"code","d8d1f609":"code","6cc69123":"code","aba71a11":"code","0cf80fb6":"code","8ccded73":"code","e7fef9a3":"code","e1b7de7c":"code","0b95b9cd":"code","4f354d04":"code","60ed37ca":"code","f07fc8df":"code","b0bfc6de":"code","bf471156":"code","241e91cf":"code","9bb5a2db":"code","0fdd66c2":"code","844f4aec":"code","b72f60b2":"code","e1a5f7ba":"code","1cccdd6b":"code","158416f6":"code","bd50e511":"code","16f3e5cd":"code","1962e6c0":"code","adddd7ca":"code","bd43b0b1":"code","6367659a":"code","bbfcbb85":"code","fc9f271e":"code","2070ea5c":"code","089ecda9":"code","ba14a448":"code","0f6f9850":"code","6d75bd6d":"code","4f661ed2":"code","a0e72993":"code","27bdb406":"code","0d560053":"code","2147292b":"code","a7750ce9":"code","08dcfcfb":"code","6cd6fa29":"code","ae1a9242":"code","a38aa32c":"code","0c73854f":"code","38829643":"code","79ed9ab5":"code","1dfa7d5f":"markdown","a9c53322":"markdown","96b126c6":"markdown","98342fc1":"markdown","d1191ea2":"markdown","58dc63ac":"markdown","2314777e":"markdown","0d06e2f0":"markdown","8892135b":"markdown","6569d923":"markdown","f3923e8a":"markdown","22388a2f":"markdown","113e8e43":"markdown","2067f676":"markdown","74f820a7":"markdown","c08c87c2":"markdown","00d0ace0":"markdown","8f985135":"markdown","ea1eb621":"markdown","14ce57db":"markdown","165867ad":"markdown","e8a8f5af":"markdown","fb3dd4ae":"markdown","ae760b0a":"markdown","0d798793":"markdown","e636377d":"markdown","ce44336c":"markdown","32b412e7":"markdown","a6d459b4":"markdown","f879b53f":"markdown"},"source":{"8b5871ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        pass\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c0b6131d":"import matplotlib.pyplot as plt\nimport seaborn as sns","1edf8a41":"df=pd.read_csv('..\/input\/bank-marketing-dataset\/bank.csv')","beca1f5b":"#Shows top 5 records\ndf.head()","b79772a8":"#shows no. of rows and columns\ndf.shape","8f96ee12":"#checks if null values present(0)\ndf.isnull().sum()","76d93c82":"#shows datatype and null values present for all columns\ndf.info() ","7d6b1d7c":"#shows no.of unique values per column\nfor column in df.columns:\n    print(column,df[column].nunique())","29f1a595":"#shows statistical summary for numerical columns\ndf.describe()","ec7627ae":"#converts categorical columns to numeric format\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndf['n_deposit']=le.fit_transform(df['deposit'])","dafb6a74":"df","31adb245":"#deleted 2 columns from dataset \ndf.drop(['deposit','pdays'],axis=1,inplace=True)\ndf","3972d04d":"#checks no. of values in deposit column(balanced data)\ndf.n_deposit.value_counts()","9cd73cd7":"#balanced output data\nsns.countplot(x='n_deposit',data=df)\n","fc59fdf8":"#shows unique values for all columns\nfor col in df.select_dtypes(include='object').columns:\n  print(col)\n  print(df[col].unique()) \n","9693f337":"#client with job profile managemnent is higher and less for housemaid.\nsns.countplot(y='job',data=df)\n","93bd62a4":"#client who married are high in records and divorced are less\nsns.countplot(y='marital',data=df)\n","c79ce4f5":"sns.countplot(y='education',data=df)\n#client whoes education background is secondary are in high numbers","dea579fa":"sns.countplot(y='default',data=df)\n#defualt feature looks unimportant  as it has value of no at high ratio to value yes(highly imbalance) which can drop","75d0929b":"sns.countplot(y='housing',data=df)\n##balance in housing loan for clients","82360dbb":"sns.countplot(y='loan',data=df)\n#high no. of clients with no personal loan","f5e9b391":"sns.countplot(y='contact',data=df)","9213d74a":"sns.countplot(y='month',data=df)\n#data in month of may is high and less in dec","f49ba1ef":"sns.countplot(y='poutcome',data=df)","83b2f23e":"#applying label encoder on categorical columns\ndf['n_job']=le.fit_transform(df['job'])\ndf['n_marital']=le.fit_transform(df['marital'])\ndf['n_education']=le.fit_transform(df['education'])\ndf['n_loan']=le.fit_transform(df['loan'])\ndf['n_contact']=le.fit_transform(df['contact'])\ndf['n_month']=le.fit_transform(df['month'])\ndf['n_poutcome']=le.fit_transform(df['poutcome'])\ndf['n1_deposit']=df['n_deposit']","72600472":"df.drop(['n_deposit'],axis=1,inplace=True)\ndf","88994965":"df.drop(['job','month','marital','education','default','housing','loan','contact','poutcome'],axis=1,inplace=True)\n","04e45993":"df.head()","e7cb06b1":"#shows all uniquevalues per column\nfor col in df.select_dtypes(include='int64').columns:\n  print(col)\n  print(df[col].unique()) ","fd976510":"df.describe()","01f6e1ff":"figure, axis = plt.subplots(3, 4, figsize = (50,25))\nsns.boxplot(x='n1_deposit',y='age',data=df,ax=axis[0,0])\nsns.boxplot(x='n1_deposit',y='balance',data=df,ax=axis[0,1])\nsns.boxplot(x='n1_deposit',y='duration',data=df,ax=axis[0,2])\nsns.boxplot(x='n1_deposit',y='campaign',data=df,ax=axis[0,3])\nsns.boxplot(x='n1_deposit',y='previous',data=df,ax=axis[1,0])\nsns.boxplot(x='n1_deposit',y='n_job',data=df,ax=axis[1,1])\nsns.boxplot(x='n1_deposit',y='n_marital',data=df,ax=axis[1,2])\nsns.boxplot(x='n1_deposit',y='n_education',data=df,ax=axis[1,3])\nsns.boxplot(x='n1_deposit',y='n_loan',data=df,ax=axis[2,0])\nsns.boxplot(x='n1_deposit',y='n_contact',data=df,ax=axis[2,1])\nsns.boxplot(x='n1_deposit',y='n_month',data=df,ax=axis[2,2])\nsns.boxplot(x='n1_deposit',y='n_poutcome',data=df,ax=axis[2,3])\n\n\n","c9ae4ebd":"#shows all record whose deposit value is 0 \noutcome_zero=df[df['n1_deposit'] == 0]\noutcome_zero","5408de1a":"#shows all record whose deposit value is 1\noutcome_one=df[df['n1_deposit'] == 1]\noutcome_one","cf95173b":"df.n1_deposit.value_counts()","891a7857":"def Outdet(df):\n    Q1=df.quantile(0.25)\n    Q3=df.quantile(0.75)\n    IQR=Q3-Q1\n    LR=Q1-(IQR*1.5)\n    UR=Q3+(IQR*1.5)\n    return LR,UR","f3884b2e":"LR,UR=Outdet(outcome_zero.age)\nprint(LR,UR)","8deb174f":"#removing outliers from feature(age)\noutcome_zero=outcome_zero[(outcome_zero['age'] > LR)  &  (outcome_zero['age'] < UR)]\noutcome_zero","ee669245":"LR,UR=Outdet(outcome_zero.balance)\nprint(LR,UR)","af9acae5":"outcome_zero=outcome_zero[(outcome_zero['balance']>LR) & (outcome_zero['balance']< UR)]\noutcome_zero","45375cd4":"LR,UR=Outdet(outcome_zero.day)\nprint(LR,UR)","13d05676":"outcome_zero=outcome_zero[(outcome_zero['day']>LR) & (outcome_zero['day']< UR)]\noutcome_zero","5b32d08d":"LR,UR=Outdet(outcome_zero.duration)\nprint(LR,UR)","99f623d6":"outcome_zero=outcome_zero[(outcome_zero['duration']>LR) & (outcome_zero['duration']< UR)]\noutcome_zero","faba6ea5":"LR,UR=Outdet(outcome_zero.campaign)\nprint(LR,UR)","6f5b946e":"outcome_zero=outcome_zero[(outcome_zero['campaign']>LR) & (outcome_zero['campaign']< UR)]\noutcome_zero","8bc76de9":"LR,UR=Outdet(outcome_one.age)\nprint(LR,UR)","f5983d30":"outcome_one=outcome_one[(outcome_one['age']>LR) & (outcome_one['age']< UR)]\noutcome_one","6ebad32c":"LR,UR=Outdet(outcome_one.balance)\nprint(LR,UR)","4cbfcff0":"outcome_one=outcome_one[(outcome_one['balance']>LR) & (outcome_one['balance']< UR)]\noutcome_one","985abc47":"LR,UR=Outdet(outcome_one.day)\nprint(LR,UR)","0afe6072":"outcome_one=outcome_one[(outcome_one['day']>LR) & (outcome_one['day']< UR)]\noutcome_one","32a11790":"LR,UR=Outdet(outcome_one.duration)\nprint(LR,UR)","c52d423e":"outcome_one=outcome_one[(outcome_one['duration']>LR) & (outcome_one['duration']< UR)]\noutcome_one","5fb4cf5f":"LR,UR=Outdet(outcome_one.campaign)\nprint(LR,UR)","54b45185":"outcome_one=outcome_one[(outcome_one['campaign']>LR) & (outcome_one['campaign']< UR)]\noutcome_one","24b8f593":"LR,UR=Outdet(outcome_one.n_poutcome)\nprint(LR,UR)","d2d2b5dd":"outcome_one=outcome_one[(outcome_one['n_poutcome']>LR) & (outcome_one['n_poutcome']< UR)]\noutcome_one","750724e2":"LR,UR=Outdet(outcome_one.balance)\nprint(LR,UR)","239a1c51":"outcome_one=outcome_one[(outcome_one['balance']>LR) & (outcome_one['balance']< UR)]\noutcome_one","3f33f5a3":"LR,UR=Outdet(outcome_zero.balance)\nprint(LR,UR)\n","01b38d73":"outcome_zero=outcome_zero[(outcome_zero['balance']>LR) & (outcome_zero['balance']< UR)]\noutcome_zero","cb9623bf":"LR,UR=Outdet(outcome_zero.duration)\nprint(LR,UR)","4bc123a3":"outcome_zero=outcome_zero[(outcome_zero['duration']>LR) & (outcome_zero['duration']< UR)]\noutcome_zero","16a0d92b":"LR,UR=Outdet(outcome_one.duration)\nprint(LR,UR)","967424fc":"outcome_one=outcome_one[(outcome_one['duration']>LR) & (outcome_one['duration']< UR)]\noutcome_one","74006c74":"LR,UR=Outdet(outcome_zero.balance)\nprint(LR,UR)\noutcome_zero=outcome_zero[(outcome_zero['balance']>LR) & (outcome_zero['balance']< UR)]\noutcome_zero","6639d8b2":"LR,UR=Outdet(outcome_one.balance)\nprint(LR,UR)\noutcome_one=outcome_one[(outcome_one['balance']>LR) & (outcome_one['balance']< UR)]\noutcome_one","8a9f9343":"LR,UR=Outdet(outcome_zero.balance)\nprint(LR,UR)\noutcome_zero=outcome_zero[(outcome_zero['balance']>LR) & (outcome_zero['balance']< UR)]\noutcome_zero","d7cf8b80":"LR,UR=Outdet(outcome_one.balance)\nprint(LR,UR)\noutcome_one=outcome_one[(outcome_one['balance']>LR) & (outcome_one['balance']< UR)]\noutcome_one","2654f4aa":"LR,UR=Outdet(outcome_zero.balance)\nprint(LR,UR)\noutcome_zero=outcome_zero[(outcome_zero['balance']>LR) & (outcome_zero['balance']< UR)]\noutcome_zero","a230d582":"LR,UR=Outdet(outcome_one.balance)\nprint(LR,UR)\noutcome_one=outcome_one[(outcome_one['balance']>LR) & (outcome_one['balance']< UR)]\noutcome_one","809dec67":"df_1=pd.concat([outcome_zero,outcome_one],axis=0)\ndf_1","e7ffd6ac":"df_1.n1_deposit.value_counts()","82c59515":"figure, axis = plt.subplots(3, 4, figsize = (50,25))\nsns.boxplot(x='n1_deposit',y='age',data=df_1,ax=axis[0,0])\nsns.boxplot(x='n1_deposit',y='balance',data=df_1,ax=axis[0,1])\nsns.boxplot(x='n1_deposit',y='duration',data=df_1,ax=axis[0,2])\nsns.boxplot(x='n1_deposit',y='campaign',data=df_1,ax=axis[0,3])\nsns.boxplot(x='n1_deposit',y='previous',data=df_1,ax=axis[1,0])\nsns.boxplot(x='n1_deposit',y='n_job',data=df_1,ax=axis[1,1])\nsns.boxplot(x='n1_deposit',y='n_marital',data=df_1,ax=axis[1,2])\nsns.boxplot(x='n1_deposit',y='n_education',data=df_1,ax=axis[1,3])\nsns.boxplot(x='n1_deposit',y='n_loan',data=df_1,ax=axis[2,0])\nsns.boxplot(x='n1_deposit',y='n_contact',data=df_1,ax=axis[2,1])\nsns.boxplot(x='n1_deposit',y='n_month',data=df_1,ax=axis[2,2])\nsns.boxplot(x='n1_deposit',y='n_poutcome',data=df_1,ax=axis[2,3])","6a2b3564":"sns.pairplot(df_1)","a53197bb":"plt.figure(figsize=(20,20))\nsns.heatmap(df_1.corr(),annot =True)","f335125c":"df_1","1605baef":"x=df_1.drop(['n1_deposit','age','day','n_job','n_marital','n_month','n_poutcome'],axis=1).values\nprint(x)\ny=df_1['n1_deposit'].values\nprint(y)\n","08840b01":"from sklearn.model_selection import train_test_split\n(x_train,x_test,y_train,y_test)=train_test_split(x,y,test_size=0.2)","6145d959":"from sklearn.preprocessing import StandardScaler\nstd_model=StandardScaler()\nx_train_std_features=std_model.fit_transform(x_train)\nx_test_std_features=std_model.transform(x_test)","d8d1f609":"x_train_std_features.shape","6cc69123":"x_test_std_features.shape","aba71a11":"from sklearn.linear_model import LogisticRegression\nmodelreg=LogisticRegression()","0cf80fb6":"modelreg.fit(x_train_std_features,y_train)","8ccded73":"ypred=modelreg.predict(x_test_std_features)\nypred","e7fef9a3":"modelreg.score(x_test_std_features,y_test)","e1b7de7c":"x_test_std_features.shape","0b95b9cd":"y_test.shape","4f354d04":"from sklearn import metrics\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, ypred))\nprint(\"Precision:\",metrics.precision_score(y_test, ypred))\nprint(\"Recall:\",metrics.recall_score(y_test, ypred))","60ed37ca":"cnf_matrix = metrics.confusion_matrix(y_test, ypred)\ncnf_matrix","f07fc8df":"from sklearn.neighbors import KNeighborsClassifier\nKNN_model = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nKNN_model.fit(x_train_std_features, y_train)","b0bfc6de":"y_predicted_KNN = KNN_model.predict(x_test_std_features)","bf471156":"KNN_model.score(x_test_std_features,y_test)","241e91cf":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_predicted_KNN))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_KNN))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_KNN))","9bb5a2db":"from sklearn.naive_bayes import GaussianNB\nnaive_bayes_model= GaussianNB()\nnaive_bayes_model.fit(x_train_std_features, y_train)","0fdd66c2":"y_predicted_naive = naive_bayes_model.predict(x_test_std_features)","844f4aec":"naive_bayes_model.score(x_test_std_features,y_test)","b72f60b2":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_predicted_naive))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_naive))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_naive))","e1a5f7ba":"from sklearn.tree import DecisionTreeClassifier\ndeseciontree_model=DecisionTreeClassifier()\ndeseciontree_model.fit(x_train_std_features, y_train)","1cccdd6b":"y_predicted_deseciontree = deseciontree_model.predict(x_test_std_features)\ndeseciontree_model.score(x_test_std_features,y_test)","158416f6":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_predicted_deseciontree))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_deseciontree))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_deseciontree))","bd50e511":"from sklearn.ensemble import RandomForestClassifier\nrandomforest_model= RandomForestClassifier(n_estimators = 10, criterion = 'entropy')\nrandomforest_model.fit(x_train_std_features, y_train)","16f3e5cd":"y_predicted_randomforest = randomforest_model.predict(x_test_std_features)\nrandomforest_model.score(x_test_std_features,y_test)","1962e6c0":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_predicted_randomforest))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_randomforest))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_randomforest))","adddd7ca":"from sklearn.svm import SVC\nSVM_model_rbf=SVC(kernel='rbf')\nSVM_model_rbf.fit(x_train_std_features,y_train)","bd43b0b1":"y_predicted_SVM_rbf = SVM_model_rbf.predict(x_test_std_features)\nSVM_model_rbf.score(x_test_std_features,y_test)","6367659a":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_predicted_SVM_rbf))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_SVM_rbf))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_SVM_rbf))","bbfcbb85":"from sklearn.svm import SVC\nSVM_model_linear=SVC(kernel='linear')\nSVM_model_linear.fit(x_train_std_features,y_train)","fc9f271e":"y_predicted_SVM_linear = SVM_model_linear.predict(x_test_std_features)","2070ea5c":"SVM_model_linear.score(x_test_std_features,y_test)","089ecda9":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_predicted_SVM_linear))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_SVM_linear))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_SVM_linear))","ba14a448":"from sklearn.ensemble import GradientBoostingClassifier\nGradientB_model=GradientBoostingClassifier(n_estimators=100,learning_rate=1.0)","0f6f9850":"GradientB_model.fit(x_train_std_features,y_train)\ny_predicted_GradientB = GradientB_model.predict(x_test_std_features)","6d75bd6d":"GradientB_model.score(x_test_std_features,y_test)","4f661ed2":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_predicted_GradientB))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_GradientB))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_GradientB))","a0e72993":"from sklearn.ensemble import AdaBoostClassifier","27bdb406":"Adaboost_model=AdaBoostClassifier(n_estimators=100)","0d560053":"Adaboost_model.fit(x_train_std_features,y_train)\ny_predicted_Adaboost = Adaboost_model.predict(x_test_std_features)","2147292b":"Adaboost_model.score(x_test_std_features,y_test)","a7750ce9":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_predicted_Adaboost))\nprint(\"Precision:\",metrics.precision_score(y_test,y_predicted_Adaboost))\nprint(\"Recall:\",metrics.recall_score(y_test, y_predicted_Adaboost))","08dcfcfb":"dfnew = pd.DataFrame()\ndfnew['Names'] = ['LogisticRegression','KNeighborsClassifier','GaussianNB','DecisionTreeClassifier','RandomForestClassifier','SVM_RBF','SVM_Linear','GradientBoostingClassifier','AdaBoostClassifier']\ndfnew['Score'] = [0.8411764705882353,0.8235294117647058,0.8213235294117647,0.8154411764705882,0.8286764705882353,0.8485294117647059,0.8404411764705882,0.8404411764705882,0.8551470588235294]\ndfnew['precision']=[0.8547008547008547,0.831918505942275,0.8540145985401459,0.790519877675841,0.8466898954703833,0.8828828828828829,0.8544520547945206,0.8544520547945206,0.8754325259515571]\ndfnew['recall']=[0.7923930269413629,0.7765451664025357,0.7416798732171157,0.8193343898573693,0.7702060221870047,0.7765451664025357,0.7908082408874801,0.7908082408874801,0.8019017432646592]\ndfnew\n","6cd6fa29":"cm = sns.light_palette('navy',as_cmap=True)\ns = dfnew.style.background_gradient(cmap=cm)\ns","ae1a9242":"plt.figure(figsize=(20,5))\nsns.set(style=\"whitegrid\")\nax = sns.barplot(y ='Score',x = 'Names',data = dfnew)","a38aa32c":"from sklearn.metrics import classification_report,roc_auc_score,roc_curve,auc\nreport_Adaboost = classification_report(y_test,y_predicted_Adaboost)\nprint(report_Adaboost)","0c73854f":"roc_auc_score(y_test,y_predicted_Adaboost)","38829643":"fpr,tpr,threshold =roc_curve(y_test,y_predicted_Adaboost)\nauc = auc(fpr,tpr)","79ed9ab5":"plt.figure(figsize=(5,5),dpi=100)\nplt.plot(fpr,tpr,linestyle='-',label = \"(auc = %0.3f)\" % auc)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.legend()\nplt.show()","1dfa7d5f":"# Model Building(Naive Bayes)","a9c53322":"# Model Building(Decision Tree Classifier)","96b126c6":"**5818 rows-Before outlier removal from balance**\n\n**5205  rows-After outlier removal from balance**","98342fc1":"**4865**\n\n**4339** \n\n","d1191ea2":"**Client with job type as management records are high and housemaid are very less**","58dc63ac":"**High correlation between feature and target label\n1)duration(0.56)\n2)balance(0.30)\n3)n_contact(-0.25)\n4)campaign(-0.23)\n5)n_loan(-0.12)\n6)previous(0.11)\n7)n_education(0.10)\n**\n\n\n","2314777e":"# Scale the data to improve model performance","0d06e2f0":"## Data Visualization","8892135b":"# Model Building(AdaBoost Classifier)","6569d923":"# Model Building(Random Forest Classifier)","f3923e8a":"**5873 rows-Before outlier removal from age**\n\n**5818 rows-After outlier removal from age**","22388a2f":"# Model Building(SVM using RBF kernel)","113e8e43":"# Model Building(SVM using linear kernel)","2067f676":"## Data Preprocessing: Label Encoder","74f820a7":"# Splitting of Data","c08c87c2":"# Outlier Removal","00d0ace0":"*Import libraries*","8f985135":"# Outlier Detection","ea1eb621":"# Model Building(Gradient Boosting Classifier)","14ce57db":"# Explore and Visualize the features","165867ad":"# PROBLEM STATEMENT\n**The data is related with direct marketing campaigns (phone calls) of a Portuguese banking institution. The classification goal is to predict if the client will subscribe (yes\/no) a term deposit (variable y).**\n\n","e8a8f5af":"# Model Building(KNeighborsClassifier)","fb3dd4ae":"##  Load the dataset","ae760b0a":"# Final Report","0d798793":"# Correlation Matrix","e636377d":"**5205**\n\n**4865**\n","ce44336c":"## Categorical Feature Distribution","32b412e7":"**#input variables(bank client data):**\n\n**#age | int64 | age in years**\n\n**#job | object | type of job (categorical: ['admin.' 'technician' 'services' 'management' 'retired' 'blue-collar' 'unemployed' 'entrepreneur' 'housemaid' 'unknown' 'self-employed' 'student'])\n**\n**#marital | object | marital status (categorical: ['married' 'single' 'divorced'])**\n\n**#education | Object | education background (categorical: ['secondary' 'tertiary' 'primary' 'unknown'])**\n\n**#default | Object | has credit in default? (categorical: ['no' 'yes'])**\n\n**#balance | int64 | Balance of the individual**\n\n**#housing | object | has housing loan? (categorical: ['yes' 'no'])**\n\n**#loan | object | has personal loan? (categorical: ['no' 'yes'])**\n\n**#contact | object | contact communication type (categorical: ['unknown' 'cellular' 'telephone'])**\n\n**#day | int64 | last contact day of the week (categorical: 'mon','tue','wed','thu','fri')**\n\n**#month | object | last contact month of year (categorical: ['may' 'jun' 'jul' 'aug' 'oct' 'nov' 'dec' 'jan' 'feb' 'mar' 'apr' 'sep'])**\n\n**#duration | int64 | last contact duration, in seconds (numeric)**\n\n**#campaign | int64 | number of contacts performed during this campaign and for this client**\n\n**#pdays | int64 | number of days that passed by after the client was last contacted from a previous campaign (numeric; 999 means client was not previously contacted)**\n\n**#previous | int64 | number of contacts performed before this campaign and for this client**\n\n**#poutcome | object | outcome of the previous marketing campaign (categorical: ['unknown' 'other' 'failure' 'success'])****\n\n\n**#Output variable (desired target):\n#y-has the client subscribed a term deposit? (binary: 'yes','no')**","a6d459b4":"# Conclusion:\n**The dataset contained 16 features and 1 target variable for binary classification which determines if client will subscribe deposit or not.I have done feature extraction and got 7 important features, then applied various classification algorithms on the data which made it clear that Adaboost Classifier Model performed excellent with high accuracy(85%) compared to other algorithms.**","f879b53f":"# Model Building(Logistic Regression)"}}