{"cell_type":{"38e597d5":"code","7f89c4dc":"code","8818405e":"code","df81cbeb":"code","2ad198c6":"code","f4ddf334":"code","e991ed7b":"code","10fe3932":"code","cfeb2ff3":"markdown","a26066e8":"markdown","7cbbcfca":"markdown"},"source":{"38e597d5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime as dt\n\nimport plotly.graph_objects as go\nimport plotly.io as pio\nimport plotly.express as px","7f89c4dc":"country_stats = pd.read_csv('..\/input\/countries-of-the-world\/countries of the world.csv')","8818405e":"country_stats['GDP'] = country_stats['GDP ($ per capita)'] * country_stats['Population']","df81cbeb":"df = country_stats.dropna(subset=['GDP']).sort_values(by='GDP').tail(50)\n\nfig1 = px.bar(df, x='GDP', y='Country', text = 'GDP', orientation='h')\n\nfig1.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig1.update_layout(template='simple_white', height=1000, title = 'GDP by Country')\nfig1.show()\n","2ad198c6":"df = country_stats.dropna(subset=['GDP']).sort_values(by='GDP').tail(50)\n\n#df['text'] = df.apply(lambda x: x['Country'] + ' ' + \"{:,}\".format(x['GDP']), axis=1)\n\n#fig1 = px.scatter(df, x='GDP', y='Country',log_x=True, text='text')\nfig1 = px.scatter(df, x='GDP', y='Country',log_x=True, range_x=[100000000000, 30000000000000], text='Country')\n\nfig1.update_traces(textposition='middle right')\n\nfig1.update_layout(template='simple_white', height=1000, yaxis = dict(showticklabels = False))\nfig1.show()\n","f4ddf334":"president_counties_df = pd.read_csv('..\/input\/us-election-2020\/president_county_candidate.csv')\n\ntotal_votes_df = president_counties_df.groupby('candidate')['total_votes'].sum().reset_index().sort_values(by='total_votes',ascending=False)","e991ed7b":"df = total_votes_df.sort_values(by='total_votes')\n\nfig3 = px.bar(df, x='total_votes', y='candidate', text='total_votes', orientation='h')\nfig3.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n\nfig3.update_layout(template='simple_white', title='Total Votes by Candidate 2020 Election', height=800, xaxis=dict(title='Total Votes'), yaxis=dict(title=''))\nfig3.show()\n","10fe3932":"df = total_votes_df.sort_values(by='total_votes')\n\ndf['text'] = df.apply(lambda x: x['candidate'] + ' (' + \"{:,}\".format(x['total_votes']) + ')', axis=1)\n\nfig1 = px.scatter(df, x='total_votes', y='candidate',log_x=True,range_x=[1, 10000000000], text='candidate')\n\nfig1.update_traces(textposition='middle left')\n\nfig1.update_layout(template='simple_white', title='Total Votes by Candidate 2020 Election', height=800, xaxis=dict(title='Total Votes'), yaxis = dict(showticklabels = False, title=''))\nfig1.show()\n","cfeb2ff3":"# Visualizing Highly Skewed Data\n\nData that is highly skewed can produce visualizations where one or two bars are visible with everyone else looking to be at 0. This can be solved by changing the quantitative axis from a linear scale to a log scale.","a26066e8":"# Country GDP","7cbbcfca":"# Presidential Votes"}}