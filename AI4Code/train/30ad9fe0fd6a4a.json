{"cell_type":{"25e40d09":"code","fa4979b5":"code","ca54ba53":"code","87a30f99":"code","b93b787d":"code","2eb274a2":"code","7b8713bd":"code","0dd1cf1d":"code","3a15fa54":"code","f7cc9d89":"code","ad8b773d":"markdown"},"source":{"25e40d09":"import numpy as np \nimport pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import StratifiedKFold","fa4979b5":"# Loading data \nX = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\")\nX_test = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/test.csv\")","ca54ba53":"# Sampling\nX = X.sample(n=200_000, random_state=0)\nX_test = X_test.sample(n=200_000, random_state=0)","87a30f99":"# Preparing data as a tabular matrix\ny = X.claim\nX = X.set_index('id').drop('claim', axis='columns')\nX_test = X_test.set_index('id')","b93b787d":"Xa = X.append(X_test)\n\nmins = Xa.min() * 1.5\nXa = Xa.fillna(mins)\nya = [0] * len(X) + [1] * len(X_test)","2eb274a2":"model = RandomForestClassifier()\ncv_preds = cross_val_predict(model, Xa, ya, cv=5, n_jobs=-1, method='predict_proba')","7b8713bd":"print(roc_auc_score(y_true=ya, y_score=cv_preds[:,1]))","0dd1cf1d":"from matplotlib import pyplot as plt\n\nplt.hist(cv_preds[:len(X), 1], bins=20, label='train')\nplt.hist(cv_preds[len(X):, 1], bins=20, label='test')\nplt.show()","3a15fa54":"adversarial = pd.DataFrame({'id':X.index, \n                            'sim': cv_preds[:len(X), 1].ravel()})\n\nadversarial.to_csv(\"adversarial_train.csv\", index=False)","f7cc9d89":"adversarial = pd.DataFrame({'id':X_test.index, \n                            'sim': cv_preds[len(X):, 1].ravel()})\n\nadversarial.to_csv(\"adversarial_test.csv\", index=False)","ad8b773d":"An adversarial validation test, done at the beginning of a competition, can immediately reveal if train and test are similar or not. "}}