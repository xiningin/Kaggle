{"cell_type":{"8ef04091":"code","f51a4a86":"code","86868709":"code","fe04a0f3":"code","9a0a75f3":"code","91ae68de":"code","e13521e5":"code","c6c81744":"markdown","daaa6bf6":"markdown","20e27df2":"markdown"},"source":{"8ef04091":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f51a4a86":"indexData = pd.read_csv('..\/input\/stock-exchange-data\/indexData.csv')\nindexInfo = pd.read_csv('..\/input\/stock-exchange-data\/indexInfo.csv')\nindexProcessed = pd.read_csv('..\/input\/stock-exchange-data\/indexProcessed.csv')","86868709":"def adjustedCurrency(df):\n    conversion_dict = {\"NYA\" : 1.0, \"IXIC\" : 1.0, \"HSI\" : 0.13, \"000001.SS\" : 0.15, \"N225\" : 0.0091, \"N100\" : 1.19, \"399001.SZ\" : 0.15,\"GSPTSE\" : 0.80, \"NSEI\" : 0.014, \"GDAXI\" : 1.19, \"KS11\" : 0.00087, \"SSMI\" : 1.09, \"TWII\" : 0.036, \"J203.JO\" : 0.070 }\n    temp = []\n    for row in df.itertuples():\n        temp.append(conversion_dict[row[1]])\n    df[\"Open\"] = df[\"Open\"]*temp\n    df[\"High\"] = df[\"High\"]*temp\n    df[\"Low\"] = df[\"Low\"]*temp\n    df[\"Close\"] = df[\"Close\"]*temp\n    df[\"Adj Close\"] = df[\"Adj Close\"]*temp","fe04a0f3":"indexData.head()","9a0a75f3":"indexProcessed.head()","91ae68de":"adjustedCurrency(indexData)\nindexData.head()","e13521e5":"adjustedCurrency(indexProcessed)\nindexProcessed.head()","c6c81744":"All currency values in this dataset are in their local values. We are converting them to the base currency of USD.","daaa6bf6":"# Before Conversion","20e27df2":"# After Conversion"}}