{"cell_type":{"e3a87033":"code","88b77804":"code","7d121fa7":"code","cf5d410b":"code","d4173754":"code","e6e59acc":"code","c0b50aaf":"code","34e7afc4":"code","e6cf1a75":"code","c673a61f":"code","5e14736b":"code","bf064f22":"code","fea76d52":"code","89a92f3c":"code","a695a5e6":"code","41e987b2":"code","26961fd5":"code","2d00d9af":"code","8d250e7b":"code","e5e9c9f2":"code","8a49eec6":"code","61efd0be":"code","603cbbe1":"code","148919bc":"code","ec3dcada":"code","883a819c":"code","d4ed80fa":"code","35539f6f":"code","781d79c3":"code","2a1f21bd":"code","e4653bc5":"code","435e8314":"code","84ab78d5":"code","ae6ff4de":"code","3498be76":"code","b60e7f38":"code","2d8bd7ba":"code","7deba6fb":"code","28fed065":"code","54979ff7":"code","461584ae":"code","6c93c675":"code","2843e8fd":"code","d0afaffb":"code","adb75016":"code","dabf66f2":"code","d3b9ba40":"code","bd95b934":"code","aba57b1d":"code","82f38062":"code","7b5b9896":"code","aec1853e":"code","b26aa795":"markdown","406322e9":"markdown","cbbb427c":"markdown","117448b7":"markdown","cb3cd111":"markdown","ef104eb7":"markdown","50ad1dbe":"markdown","ce3d29ea":"markdown","6fe267ea":"markdown","218a1d04":"markdown","95db0e4d":"markdown","46e3f669":"markdown","224fea62":"markdown","ce77fe88":"markdown","e7d3320d":"markdown","c90e840a":"markdown","bb99eba4":"markdown","43104f50":"markdown","67c3c50c":"markdown","343942ab":"markdown","f40d52c2":"markdown","1acae6a8":"markdown","05babe5b":"markdown","c160a7bd":"markdown","bac12701":"markdown","7f7856fb":"markdown","b577fd99":"markdown","35a5d3aa":"markdown","01e2dcfc":"markdown","1c6456c2":"markdown","c67baee4":"markdown","af9d15e6":"markdown","4fe18687":"markdown","556bacf0":"markdown","3b9687e7":"markdown","24c6999b":"markdown","0254c6dc":"markdown","5a2d6902":"markdown","34d1ebc0":"markdown","b7a0e777":"markdown","7eff38d9":"markdown","32a71d69":"markdown","276db963":"markdown","477d369f":"markdown","40211960":"markdown","36ab5d28":"markdown","b310db7b":"markdown","0f641b46":"markdown","f10b547a":"markdown","934bf7f3":"markdown","1f278dc6":"markdown","cd33624c":"markdown","15880736":"markdown","efe00b2f":"markdown","68ad3a7c":"markdown","5f9ef1ea":"markdown","0bc7edbd":"markdown","a138ac75":"markdown","abf9dba4":"markdown","cd399922":"markdown","eacba6e1":"markdown","f508d251":"markdown"},"source":{"e3a87033":"# Importing the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nfrom collections import Counter\nimport datetime\nimport wordcloud\nimport json","88b77804":"# Hiding warnings for cleaner display\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","7d121fa7":"# Importing the Dataset\ndf = pd.read_csv(\"..\/input\/youtube-new\/INvideos.csv\")","cf5d410b":"df.head()","d4173754":"PLOT_COLORS = [\"#268bd2\", \"#0052CC\", \"#FF5722\", \"#b58900\", \"#003f5c\"]\npd.options.display.float_format = '{:.2f}'.format\nsns.set(style=\"ticks\")\nplt.rc('figure', figsize=(8, 5), dpi=100)\nplt.rc('axes', labelpad=20, facecolor=\"#ffffff\", linewidth=0.4, grid=True, labelsize=14)\nplt.rc('patch', linewidth=0)\nplt.rc('xtick.major', width=0.2)\nplt.rc('ytick.major', width=0.2)\nplt.rc('grid', color='#9E9E9E', linewidth=0.4)\nplt.rc('font', family='Arial', weight='400', size=10)\nplt.rc('text', color='#282828')\nplt.rc('savefig', pad_inches=0.3, dpi=300)","e6e59acc":"df[\"description\"] = df[\"description\"].fillna(value=\"\")","c0b50aaf":"grouped = df.groupby(\"video_id\")\ngroups = []\nwanted_groups = []\nfor key, item in grouped:\n    groups.append(grouped.get_group(key))\n\nfor g in groups:\n    if len(g['title'].unique()) != 1:\n        wanted_groups.append(g)","34e7afc4":"count = 0\ntag = []\nfor i in range(len(wanted_groups)):\n  focus = wanted_groups[i]\n  if(len(focus['channel_title'].value_counts())!=len(focus['video_id'].value_counts())):\n    count+=1\n    tag.append(focus['video_id'].values[0])","e6cf1a75":"tag","c673a61f":"df = df[df.video_id != '#NAME?']","5e14736b":"df = df[df.video_id != '#VALUE!']","bf064f22":"cdf = df[\"trending_date\"].apply(lambda x: '20' + x[:2]).value_counts() \\\n            .to_frame().reset_index() \\\n            .rename(columns={\"index\": \"year\", \"trending_date\": \"No_of_videos\"})\n\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"year\", y=\"No_of_videos\", data=cdf, \n                palette=sns.color_palette(['#ff764a', '#ffa600'], n_colors=7), ax=ax)\n_ = ax.set(xlabel=\"Year\", ylabel=\"No. of videos\")","fea76d52":"df[\"trending_date\"].apply(lambda x: '20' + x[:2]).value_counts(normalize=True)","89a92f3c":"df.describe()","a695a5e6":"fig, ax = plt.subplots()\n_ = sns.distplot(df[\"views\"], kde=False, color=PLOT_COLORS[4], \n                 hist_kws={'alpha': 1}, bins=np.linspace(0, 2.3e8, 47), ax=ax)\n_ = ax.set(xlabel=\"Views\", ylabel=\"No. of videos\", xticks=np.arange(0, 2.4e8, 1e7))\n_ = ax.set_xlim(right=2.5e8)\n_ = plt.xticks(rotation=90)","41e987b2":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"views\"] < 25e6][\"views\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Views\", ylabel=\"No. of videos\")","26961fd5":"df[df['views'] < 1e6]['views'].count() \/ df['views'].count() * 100","2d00d9af":"plt.rc('figure.subplot', wspace=0.9)\nfig, ax = plt.subplots()\n_ = sns.distplot(df[\"likes\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, \n                 bins=np.linspace(0, 6e6, 61), ax=ax)\n_ = ax.set(xlabel=\"Likes\", ylabel=\"No. of videos\")\n_ = plt.xticks(rotation=90)","8d250e7b":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"likes\"] <= 1e5][\"likes\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Likes\", ylabel=\"No. of videos\")","e5e9c9f2":"df[df['likes'] < 2e4]['likes'].count() \/ df['likes'].count() * 100","8a49eec6":"fig, ax = plt.subplots()\n_ = sns.distplot(df[\"comment_count\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Comment Count\", ylabel=\"No. of videos\")","61efd0be":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"comment_count\"] < 100000][\"comment_count\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, \n                 bins=np.linspace(0, 1e5, 24), ax=ax)\n_ = ax.set(xlabel=\"Comment Count\", ylabel=\"No. of videos\")","603cbbe1":"df[df['comment_count'] < 4000]['comment_count'].count() \/ df['comment_count'].count() * 100","148919bc":"df.describe(include = ['O'])","ec3dcada":"classed = df.groupby(\"video_id\")\nclasses = []\nwanted_classes = []\nfor key, item in classed:\n    classes.append(classed.get_group(key))\n\nfor g in classes:\n    if len(g['title'].unique()) != 1:\n        wanted_classes.append(g)\n\nwanted_classes[0]","883a819c":"def contains_capitalized_word(s):\n    for w in s.split():\n        if w.isupper():\n            return True\n    return False\n\n\ndf[\"contains_capitalized\"] = df[\"title\"].apply(contains_capitalized_word)\n\nvalue_counts = df[\"contains_capitalized\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n           colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'}, startangle=45)\n_ = ax.axis('equal')\n_ = ax.set_title('Title Contains Capitalized Word?')","d4ed80fa":"df[\"contains_capitalized\"].value_counts(normalize=True)","35539f6f":"df[\"title_length\"] = df[\"title\"].apply(lambda x: len(x))\n\nfig, ax = plt.subplots()\n_ = sns.distplot(df[\"title_length\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Title Length\", ylabel=\"No. of videos\", xticks=range(0, 110, 10))","781d79c3":"fig, ax = plt.subplots()\n_ = ax.scatter(x=df['views'], y=df['title_length'], color=PLOT_COLORS[2], edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Title Length\")","2a1f21bd":"df.corr()","e4653bc5":"h_labels = [x.replace('_', ' ').title() for x in \n            list(df.select_dtypes(include=['number', 'bool']).columns.values)]\n\nfig, ax = plt.subplots(figsize=(10,6))\n_ = sns.heatmap(df.corr(), annot=True, xticklabels=h_labels, yticklabels=h_labels, cmap=sns.cubehelix_palette(as_cmap=True), ax=ax)","435e8314":"fig, ax = plt.subplots()\n_ = plt.scatter(x=df['views'], y=df['likes'], color=PLOT_COLORS[2], edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Likes\")","84ab78d5":"title_words = list(df[\"title\"].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(25)","ae6ff4de":"# wc = wordcloud.WordCloud(width=1200, height=600, collocations=False, stopwords=None, background_color=\"white\", colormap=\"tab20b\").generate_from_frequencies(dict(Counter(title_words).most_common(150)))\nwc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(15,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","3498be76":"cdf = df.groupby(\"channel_title\").size().reset_index(name=\"video_count\") \\\n    .sort_values(\"video_count\", ascending=False).head(20)\n\nfig, ax = plt.subplots(figsize=(8,8))\n_ = sns.barplot(x=\"video_count\", y=\"channel_title\", data=cdf,\n                palette=sns.cubehelix_palette(n_colors=20, reverse=True), ax=ax)\n_ = ax.set(xlabel=\"No. of videos\", ylabel=\"Channel\")","b60e7f38":"with open(\"..\/input\/youtube-new\/IN_category_id.json\") as f:\n    categories = json.load(f)[\"items\"]\ncat_dict = {}\nfor cat in categories:\n    cat_dict[int(cat[\"id\"])] = cat[\"snippet\"][\"title\"]\ndf['category_name'] = df['category_id'].map(cat_dict)","2d8bd7ba":"cdf = df[\"category_name\"].value_counts().to_frame().reset_index()\ncdf.rename(columns={\"index\": \"category_name\", \"category_name\": \"No_of_videos\"}, inplace=True)\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"category_name\", y=\"No_of_videos\", data=cdf, \n                palette=sns.cubehelix_palette(n_colors=16, reverse=True), ax=ax)\n_ = ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n_ = ax.set(xlabel=\"Category\", ylabel=\"No. of videos\")","7deba6fb":"df[\"publishing_day\"] = df[\"publish_time\"].apply(\n    lambda x: datetime.datetime.strptime(x[:10], \"%Y-%m-%d\").date().strftime('%a'))\ndf[\"publishing_hour\"] = df[\"publish_time\"].apply(lambda x: x[11:13])\ndf.drop(labels='publish_time', axis=1, inplace=True)","28fed065":"cdf = df[\"publishing_day\"].value_counts()\\\n        .to_frame().reset_index().rename(columns={\"index\": \"publishing_day\", \"publishing_day\": \"No_of_videos\"})\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"publishing_day\", y=\"No_of_videos\", data=cdf, \n                palette=sns.color_palette(['#003f5c', '#374c80', '#7a5195', \n                                           '#bc5090', '#ef5675', '#ff764a', '#ffa600'], n_colors=7), ax=ax)\n_ = ax.set(xlabel=\"Publishing Day\", ylabel=\"No. of videos\")","54979ff7":"cdf = df[\"publishing_hour\"].value_counts().to_frame().reset_index()\\\n        .rename(columns={\"index\": \"publishing_hour\", \"publishing_hour\": \"No_of_videos\"})\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"publishing_hour\", y=\"No_of_videos\", data=cdf, \n                palette=sns.cubehelix_palette(n_colors=24), ax=ax)\n_ = ax.set(xlabel=\"Publishing Hour\", ylabel=\"No. of videos\")","461584ae":"value_counts = df[\"video_error_or_removed\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n        colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'})\n_ = ax.axis('equal')\n_ = ax.set_title('Video Error or Removed?')","6c93c675":"df[\"video_error_or_removed\"].value_counts()","2843e8fd":"value_counts = df[\"comments_disabled\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie(x=[value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n           colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'})\n_ = ax.axis('equal')\n_ = ax.set_title('Comments Disabled?')","d0afaffb":"df[\"comments_disabled\"].value_counts(normalize=True)","adb75016":"value_counts = df[\"ratings_disabled\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n            colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'})\n_ = ax.axis('equal')\n_ = ax.set_title('Ratings Disabled?')","dabf66f2":"df[\"ratings_disabled\"].value_counts()","d3b9ba40":"len(df[(df[\"comments_disabled\"] == True) & (df[\"ratings_disabled\"] == True)].index)","bd95b934":"ed_df = df[df[\"category_name\"]==\"Education\"]","aba57b1d":"title_words = list(ed_df[\"title\"].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(25)","82f38062":"# wc = wordcloud.WordCloud(width=1200, height=600, collocations=False, stopwords=None, background_color=\"white\", colormap=\"tab20b\").generate_from_frequencies(dict(Counter(title_words).most_common(150)))\nwc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(15,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","7b5b9896":"title_words = list(ed_df[\"channel_title\"].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(25)\n\n# wc = wordcloud.WordCloud(width=1200, height=600, collocations=False, stopwords=None, background_color=\"white\", colormap=\"tab20b\").generate_from_frequencies(dict(Counter(title_words).most_common(150)))\nwc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(15,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","aec1853e":"title_words = list(ed_df[\"tags\"].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(25)\n\n# wc = wordcloud.WordCloud(width=1200, height=600, collocations=False, stopwords=None, background_color=\"white\", colormap=\"tab20b\").generate_from_frequencies(dict(Counter(title_words).most_common(150)))\nwc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(15,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","b26aa795":"# <a name = \"category_largest\"><\/a> Video Category with Largest Number of Trending Videos ","406322e9":"## <a name = \"capitalized\"><\/a> Trending Video Titles with Capitalized word!\nNow, Let's see how many trendign videos contain at least a capitalized word (e.g. WHY). To do that, we will add a new variable (column) to the dataset whose value is `True` if the video title has at least a capitalized word in it, and `False` otherwise.","cbbb427c":"# <a name = \"comments_rating_disable\"><\/a> Trending Videos with both comments and ratings disabled","117448b7":"## <a name = \"title\"><\/a> Video Title Lengths\nLet's add another column to our dataset to represent the length of each video title, then plot the histogram of title length to get an idea about the lengths of trending video titles.","cb3cd111":"So, turns out there are 2 sets of data with `video_id` *#NAME?* and *#VALUE!*. These rows needs to be removed as they are missing values or have either been incorrectly labelled. So. let's get rid of these two kind of rows from the dataset.","ef104eb7":"Ignoring words like \"the\" and \"of\", we can see that \"|\" and \"-\" symbols occured a lot in the `36834` trending video titles: `41351` times and `15533` times respectively. We notice also that words \"Episode\" \"Movie\" \"Song\" \"Telugu\" \"Full\" \"Video\" and \"2018\" are common in trending video titles; each occured in 1613-1901 video titles.\n\nLet's draw a word cloud for the titles of our trending videos, which is a way to visualize most common words in the titles; the more common the word is, the bigger its font size is","50ad1dbe":"# <a name = \"conclusion\"><\/a> Conclusion\n\nHere are some of the results we extracted from the analysis:\n\n* We analyzed a dataset that contains information about YouTube trending videos for 205 days. The dataset was collected in 2017 and 2018. It contains **`36834`** video entry.\n* `80%` of trending videos have less than 1 million views, and **`96%`** have less than **`5`** million views.\n* `79%` of trending videos have less than `20,000` likes, and **`94%`** have less than **`100,000`** likes.\n* `89%` of trending videos have less than `4,000` comments, and **`93%`** have less than **`25,000`** comments.\n* Some videos may appear on the trending videos list on more than one day. Our dataset contains `36834` entries but not for `36834` unique videos but for `16305` unique videos.\n* Trending videos that have `60,000,000` views and more have title length between `33` and `55` characters approximately.\n* The delimiters `-` and `|` were common in trending video titles.\n* The words  \"Episode\" \"Movie\" \"Song\" \"Telugu\" \"Full\" \"Video\" and \"2018\" were common also in trending video titles.\n* There is a strong positive correlation between the number of views and the number of likes of trending videos: As one of them increases, the other increases, and vice versa.\n* There is a strong positive correlation also between the number of likes and the number of comments, and a slightly weaker one between the number of dislikes and the number of comments.\n* The category that has the largest number of trending videos is **Entertainment** with `16,000` videos, followed by 'News & politics' category with `5000` videos, followed by 'Music' category with `3800` videos.\n* On the opposite side, the category that has the smallest number of trending videos is 'Nonprofits & Activism', followed by 'Shows', followed by 'Autos & Vehicles'.\n\n\nThis notebook was created by taking ideas from a [notebook](https:\/\/www.kaggle.com\/ammar111\/youtube-trending-videos-analysis) created on the same dataset but of USA by [@ammar11](https:\/\/www.kaggle.com\/ammar111). \n\nIf you liked this Analysis, please **upvote**.","ce3d29ea":"# <a name = \"ratings_disable\"><\/a>Trending Videos with their ratings disabled\nTo know that, we use `ratings_disabled` column.","6fe267ea":"We see that views and likes are truly positively correlated: as one increases, the other increases too\u2014mostly.\n\nAnother verification of the correlation matrix and map is the scatter plot we drew above between views and title length as it shows that there is no correlation between them.","218a1d04":"# <a name=\"import\"><\/a> Importing some packages\nWe need to import some Data Analysis packages like `pandas` and `matplotlib`.","95db0e4d":"We note that the vast majority of trending videos have between `0` and  `1000,000` likes. Let us plot the histogram just for videos with `100,000` or less to get a closer look at the distribution of the data.","46e3f669":"We see that the Entertainment category contains the largest number of trending videos among other categories: around `16,000` videos, followed by News & Politics category with around `5000` videos, followed by Music category with around `3800` videos, and so on.","224fea62":"From the table above, we can see that there are `205` unique dates, which means that our dataset contains collected data about trending videos over **`205`** days.\n\nFrom `video_id` description, we can see that there are `36834` videos (which is expected because our dataset contains `36834` entries), but we can see also that there are only `16305` unique videos which means that some videos appeared on the trending videos list **on more than one day**. The table also tells us that the top frequent title is `Mission: Impossible - Fallout (2018) - Officia..` and that it appeared `19` times on the trending videos list.\n\nBut there is something strange in the description table above: Because there are `16305` unique video IDs, we expect to have `16305` unique video titles also, because we assume that each ID is linked to a corresponding title. One possible interpretation is that a trending video had some title when it appeared on the trending list, then it appeared again on another day but with a modified title. Similar explaination applies for `description` column as well. For `publish_time` column, the unique values are less than `16305`, but there is nothing strange here, because two different videos may be published at the same time.","ce77fe88":"Checking which of the above `video_id` do not have `channel_title` and then collecting the  video id tag from them","e7d3320d":"So, it is around `80%`. Similarly, we can see that the percentage of videos with less than `1.5` million views is around `86%`, and the percentage of videos with less than `5` million views is around `96%`.","c90e840a":"YouTube (the world-famous video sharing website) maintains a list of the top trending videos on the platform. According to Variety magazine, \n> \u201cTo determine the year\u2019s top-trending videos, YouTube uses a combination of factors including measuring users interactions (number of views, shares, comments and likes). Note that they\u2019re not the most-viewed videos overall for the calendar year\u201d. Top performers on the YouTube trending list are music videos (such as the famously virile \u201cGangam Style\u201d), celebrity and\/or reality TV performances, and the random dude-with-a-camera viral videos that YouTube is well-known for.\n\nAccording to the latest traffic report, YouTube is the world's second largest search engine with `33.39` billion total visits in the last month (28 days). As one of the most popular Art & Entertainment content-providing systems, YouTube spans across cultures and nations, with its trending videos viewed by a wide range of audiences around the globe. Thus, learning about characteristics of trending YouTube videos supports the design and evaluation of personalization services, from precise advertising to recommender systems.\n\nTrending videos on youtube range from anticipated movie trailers to hilarious talk show interviews all the way down to home videos of a young boy yodeling in Walmart. YouTube has said that Trending aims to showcase videos that are appealing to a wide audience and exhibit what\u2019s happening on YouTube and to a certain extent what\u2019s happening around the world. This list of trending videos is the same for all users in each country, with an exception in India. Since Trending isn\u2019t personalized and is the same for all users, it is a great list for YouTube creators to be on as it gives their video more chances of being watched.","bb99eba4":"# <a name = \"collection\"><\/a> Dataset Collection years\nLet's see in which years the dataset was collected","43104f50":"In the `video_id` column, there are few missing values which have been labelled `#NAME?` and few more. This was discovered while we were trying to find out if any video was trending for more than one day and with more than one `title`. It was done at a later stage but when we found out about it and it had to be removed, we moved the whole code for cleaning up this mess here as it removing it would affect all other analysis also. So, here we are \ud83d\ude09\ud83d\ude09","67c3c50c":"We can see that channels with word **\"Study\"** and **\"education\"** are most occuring among channels in this category. ","343942ab":"# <a name = \"comments_disable\"><\/a>Videos with Comments Disabled\nTo know that, we use comments_disabled column.","f40d52c2":"Now, we can see that the majority of trending videos have `20000` likes or less with a peak for videos with `2000` likes or less.\n\nLet's see the exact percentage of videos with less than `20000` likes.","1acae6a8":"Now we can see which days of the week had the largest numbers of trending videos.","05babe5b":"# <a name = \"dataset\"><\/a> Importing the Dataset\nThe YouTube Trending data for Indian region is available with the name `INvideos.csv`. Let's read this data with `pandas` first.","c160a7bd":"Let's make a similar word cloud for `channel_title` and see channels with which words have more trending videos.","bac12701":"# <a name = \"non_numerical\"><\/a> Description on non-numerical columns\n\nAfter we described numerical columns previously, we now describe non-numerical columns.","7f7856fb":"Let's get a closer look by eliminating entries with comment count larger than `100000` comment.","b577fd99":"# <a name = \"numerical\"><\/a>Description of Numerical columns\n\nNow, let's see some numerical information about the numerical columns of our dataset","35a5d3aa":"By looking at the scatter plot, we can say that there is no relationship between title length and the number of views. However, we notice an interesting thing: videos that have `60,000,000` (60 million) views of more have title length between `33` and `55` characters approximately. ","01e2dcfc":"We can notice that the words like \"2018\", \"Current\", \"Editorial\", \"News\", \"Editorial\" and \"affairs\" are the most occuring words in the title of trending videos under this category.\n\nLet's make a wordcloud for these words so that it would be more clear to our eyes.","1c6456c2":"We see that most trending videos have around\n\n\\begin{align}\n\\frac{20000}{5} \\approx 4000 \\text{ comments}\n\\end{align}\n\nsince each division in the graph has six histogram bins.\n\nAs with views and likes, let's see the exact percentage of videos with less than `4000` comments.","c67baee4":"# <a name = \"publish_time\"><\/a>Trending Videos and their publishing time\nAn example value of the `publish_time` column in our dataset is `2017-11-13T17:13:01.000Z`. And according to information on this page: https:\/\/www.w3.org\/TR\/NOTE-datetime, this means that the date of publishing the video is `2017-11-13` and the time is `17:13:01` in Coordinated Universal Time (UTC) time zone.\n\nLet's add two columns to represent the date and hour of publishing each video, then delete the original `publish_time` column because we will not need it anymore.","af9d15e6":"We see that only `2%` of trending videos prevented users from commenting.","4fe18687":"# <a name = \"clean\"><\/a> Data Cleaning\nThe `description` column has some null values. Let's get rid of these null values by putting an empty string in place of each null value.","556bacf0":"# <a name = \"channel_largest\"><\/a> Channels with largest Trending videos","3b9687e7":"We can see that the dataset was collected in 2017 and 2018 with `76%` of it in 2018 and `24%` in 2017","24c6999b":"In a similar way, we can see that the ercentage of videos with less than `25,000` comments is around `97%`","0254c6dc":"Now, we can see which category had the largest number of trending videos.","5a2d6902":"# <a name = \"corr\"><\/a> Correlation between dataset variables\n\nNow let's see how the dataset variables are correlated with each other: for example, we would like to see how views and likes are correlated, meaning do views and likes increase and decrease together (positive correlation)? Does one of them increase when the other decrease and vice versa (negative correlation)? Or are they not correlated?\n\nCorrelation is represented as a value between `-1` and `+1` where `+1` denotes the highest positive correlation, `-1` denotes the highest negative correlation, and `0` denotes that there is no correlation.\n\nLet's see the correlation table between our dataset variables (numerical and boolean variables only)","34d1ebc0":"We cab see that`40%` of trending videos titles contain at least a capitalized word. We will later use this added new column `contains_capitalized` in analyzing correlation between variables. ","b7a0e777":"## <a name = \"view\"><\/a> View Histogram\nLet's plot a histogram for the `views` column to take a look at its distribution: to see how many videos have between `10` million and `20` million views, and so on.","7eff38d9":"# Analysis of Youtube Trending Videos in Indian Region","32a71d69":"We can see that title-length distribution resembles a **negatively skewed** distribution, where most of the videos have title lengths between 70 and 100 characters approximately.\n\nNow, let's draw a scatter plot between title length and number of views to see the relationship between these two variables.","276db963":"The following code is just a configuration for improving visualization graphs.","477d369f":"# <a name = \"education\"><\/a> Analysing videos with education category","40211960":"# <a name = \"error\"><\/a>Trending videos with an error\nTo see how many trending videos got removed or had some error, we can use `video_error_or_removed` column in the dataset.","36ab5d28":"We see for example that views and likes are highly positively correlated with a correlation value of 0.85; we see also a high positive correlation (0.78) between likes and comment count, and between dislikes and comment count (0.71).\n\nThere is some positive correlation between views and dislikes, between views and comment count, between likes and dislikes.\n\nNow let's visualize the correlation table above using a heatmap.","b310db7b":"## <a name = \"comment\"><\/a> Comment count Histogram","0f641b46":"We can see that the number of trending videos published on Sunday is noticeably less than the number of trending videos published on other days of the week.\n\nNow let's use publishing_hour column to see which publishing hours had the largest number of trending videos","f10b547a":"We can see that the video appeared on the trending list with more than one `titles`.","934bf7f3":"So, there are just `355` trending videos that have both comments and ratings disabled.","1f278dc6":"We note from the table above that\n\n\n*   The average number of views of a trending video is `1,060,477`. The median values for the number of views is `304,586`, which means that half the trending videos have views that are less than that number, and the other half have views larger than that number.\n*   The average number of likes of a trending video is `27,082`, while the average number of dislikes is `1,665`.\n*   The average comment count is `2,677` while the median is '329`.\n\nHow useful are the observations above? Do they really represent the data? Let's examine more.\n\n","cd33624c":"We note that the vast majority of trending videos have `5` million views or less. We get the `5` million number by calculating\n\\begin{align}\n\\frac{0.1 \\times 10^8}{2} = 5 \\times 10^6\n\\end{align}\nNow, let us plot the histogram just for videos with `25` million views","15880736":"# <a name = \"words\"><\/a> Most Common words in video titles\nLet's see if there are some words that are used significantly in trending video titles. We will display the `25` most common words in all trending video titles.","efe00b2f":"We see that only`762` trending videos out of `36834` prevented users from rating their videos.","68ad3a7c":"We can see that out of videos that appeared on trending list (36834 videos), there is a tiny portion (11 videos) with errors.","5f9ef1ea":"The correlation map and correlation table above say that views and likes are highly positively correlated. Let's verify that by plotting a scatter plot between views and likes to visualize the relationship between these variables.","0bc7edbd":"Similarly, we can see that the percentage of vidoes with less than `100,000` likes is around `94%`","a138ac75":"# <a name = \"content\"><\/a> Table of Contents\n* [Importing some packages](#import)\n* [Importing the Dataset](#dataset)\n* [Data Cleaning](#clean)\n* [Dataset Collection years](#collection)\n* [Description of Numerical Columns](#numerical)\n    * [View Histogram](#view)\n    * [Likes Histogram](#likes)\n    * [Comment count Histogram](#comment)\n* [Description of non-numerical columns](#non_numerical)\n    * [Trending Video Titles with Capitalized word!](#capitalized)\n    * [Video Title Lengths](#title)\n* [Correlation between dataset variables](#corr)\n* [Most Common words in video titles](#words)\n* [Channel with largest Trending videos](#channel_largest)\n* [Video Category with Largest Number of Trending Videos](#category_largest)\n* [Trending Videos and their publishing time](#publish_time)\n* [Trending videos with an error](#error)\n* [Videos with Comments Disabled](#comments_disable)\n* [Trending Videos with their ratings disabled](#ratings_disable)\n* [Trending Videos with their comments and ratings disabled](#comments_rating_disable)\n* [Analysing videso with education category](#education)\n* [Conclusion](#conclusion)","abf9dba4":"Now, we see that majority of trending videos have `1` million views or less. Let's see the exact percentage of videos less than `1` million views.","cd399922":"We can see that the period between 2PM and 7PM, peaking between 4AM and 7AM and between 11PM and 3PM had the largest number of trending videos. We notice also that the period between 00:00 and 2AM has the smallest number of trending videos. But why is that? ","eacba6e1":"By observing tag we gain that only first two element of the list have different video id and channel title count so we create a new list wanted_g which only contain all video_id which are not actually missing values","f508d251":"## <a name = \"likes\"><\/a> Likes Histogram\n\nAfter `views`, we plot the histogram for likes column."}}