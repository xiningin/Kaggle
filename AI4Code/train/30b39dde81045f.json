{"cell_type":{"4c5833c8":"code","58643105":"code","88a499e3":"code","5e9ca9dc":"code","e909d4bd":"code","27815301":"code","b5ee07b8":"code","9394bc4c":"code","1584ebfa":"code","ff0156c1":"code","69b1ae5c":"code","66227c46":"markdown","4ea991d8":"markdown","32b29ba5":"markdown","e5a4a4db":"markdown","088bb779":"markdown","fb2a49c5":"markdown","e1683edf":"markdown","7254872c":"markdown","2434991b":"markdown","fc348c22":"markdown","ea9322a6":"markdown","ba8188e4":"markdown","d9b97334":"markdown","c27709c3":"markdown"},"source":{"4c5833c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58643105":"#This will help us keep track of the submissions\nsub_name_list = ['dummy', 'shortlikeafox', 'piby4-absolute', 'piby4-prob']\nscore_list = [] #We can keep the scores here\n\n#Put the submissions in dataframe form and add to a list.\nsub_list = []\ntemp_df = pd.read_csv(\"\/kaggle\/input\/ufc-whittaker-vs-till-bet-contest-dummy-submission\/task-dummy.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/ufc-fight-night-whittakertill-contest-submission\/ufc-fight-night-whittaker-till-submission.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/submission-to-ufc-whittaker-vs-till-bet-contest\/predict_absolute.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/submission-to-ufc-whittaker-vs-till-bet-contest\/predict_probab.csv\")\nsub_list.append(temp_df)\n","88a499e3":"results_df = pd.read_csv(\"\/kaggle\/input\/ultimate-ufc-dataset\/most-recent-event.csv\")\n\n#We only need the fighter names, odds, and winner\n\nresults_df = results_df[['R_fighter', 'B_fighter', 'R_ev', 'B_ev', 'Winner']]\ndisplay(results_df)","5e9ca9dc":"#Returns a specific bet EV based on winning_ev and probability.\ndef get_bet_ev(ev, prob):\n    \n    return(ev*prob - (1-prob)*100)","e909d4bd":"#Used to determine the bet of each fight.  We will use probabilities and the ev to \n#determine profitable bets\ndef get_bet(R_prob, B_prob, R_ev, B_ev):\n    red_ev = get_bet_ev(R_ev, R_prob)\n    blue_ev = get_bet_ev(B_ev, B_prob)\n    if red_ev > 0:\n        return('Red')\n    if blue_ev > 0:\n        return('Blue')\n    \n    return 'None'","27815301":"def get_profit(winner, bet, R_ev, B_ev):\n    if bet == 'None':\n        return 0\n    if (bet == 'Blue' and winner == 'Blue'):\n        return B_ev\n    if (bet == 'Red' and winner == 'Red'):\n        return R_ev\n    else:\n        return (-100)","b5ee07b8":"#Let's make a helper function to make this easier\n\ndef get_score(sub, results):\n#    display(sub)\n#    display(results)\n    #Let's merge the two dataframes\n    merge_df = pd.merge(sub, results)\n    #display(merge_df)\n    #We can get the proper bet by using a lambda function\n    merge_df['Bet'] = merge_df.apply(lambda x: get_bet(x['R_prob'],x['B_prob'],x['R_ev'],x['B_ev']), axis=1)\n    merge_df['Profit'] = merge_df.apply(lambda x: get_profit(x['Winner'], x['Bet'], x['R_ev'], x['B_ev']), axis=1)\n    display(merge_df)\n    return(sum(merge_df['Profit']))","9394bc4c":"z = 0\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","1584ebfa":"z = 1\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","ff0156c1":"z = 2\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","69b1ae5c":"z = 3\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","66227c46":"# Iterate the submissions and see how everyone did!","4ea991d8":"# Submissions\n\nThere are 4 submissions.\n\n1. The dummy file (gives each fighter a .5 probability of winning. Therefore will bet every underdog with greater than +100 odds.)\n\n2. shortlikeafox's (my!) submission. A GaussianNB Classifier using the following features: ['R_Reach_cms', 'total_round_dif', 'R_Height_cms', 'R_avg_SIG_STR_pct', 'B_age', 'R_longest_win_streak', 'lose_streak_dif', 'ko_dif', 'R_win_by_Decision_Majority', 'longest_win_streak_dif', 'avg_sub_att_dif', 'R_Weight_lbs', 'sig_str_dif', 'B_Height_cms', 'B_avg_SUB_ATT', 'R_win_by_TKO_Doctor_Stoppage', 'B_draw', 'avg_td_dif', 'R_win_by_Decision_Split', 'age_dif', 'B_current_win_streak', 'R_odds']\n\n3. piby4's absolute predictions\n\n4. piby4's probability predictions","32b29ba5":"# Open All Submissions and add to a list","e5a4a4db":"Dummy is only ever going to bet fighters who have odds greater than +100. Here he won 3 fights and lost 12 for a total loss of 590 units.","088bb779":"# Purpose\n\nI am going to go through the task submissions for [UFC Fight Night: Whittaker vs. Till](https:\/\/www.kaggle.com\/mdabbert\/ultimate-ufc-dataset\/tasks?taskId=1421)  and see what set of predictions was the most profitable (if any!)","fb2a49c5":"piby4's picks based off of probability won 3 of 15 bets for a loss of $590. ","e1683edf":"piby4 won 12 of 15 fights for an overall profit of 270.76 units","7254872c":"# Submission #2: shortlikeafox's Submission","2434991b":"shortlikeafox won 12 of 15 bets for a total profit of 578.06 units.","fc348c22":"# Submission #4: piby4's probability submission","ea9322a6":"# Final Results\n\n* dummy: -590 units\n* shortlikeafox: +578.06 units\n* piby4-absolute: +270.76 units\n* piby4-prob: -590 units\n\nThe winner is shortlikeafox!","ba8188e4":"# Submission #3: piby4's absolute submission","d9b97334":"# Submission #1: Dummy Submission\n\nThese are the results of the dummy submission.","c27709c3":"Red sure had a good night huh?"}}