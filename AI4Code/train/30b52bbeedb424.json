{"cell_type":{"ae4fdb6c":"code","c9dbc854":"code","ea676863":"code","1ca3e9c8":"code","4045a4ff":"code","a65d5326":"code","c5ccd90b":"code","e531e7a2":"code","dff2a00b":"code","29d56572":"code","3c069783":"code","0290c985":"code","50197ffd":"code","bc8fcf3b":"code","f43c455a":"code","66edb7c9":"code","657907e8":"code","584bd2fd":"code","755bc9e6":"code","ce8b636a":"code","994850cc":"code","7a57c7d9":"code","27528538":"code","b64f6e7e":"code","726896c4":"code","cb35e7ac":"markdown","abffd1b4":"markdown","795db196":"markdown","7d4eed2e":"markdown","f94b8626":"markdown","4f15a9d3":"markdown","bbee957b":"markdown","a5cd43b8":"markdown","983dc086":"markdown","835acf04":"markdown","e882f9a2":"markdown","f19cac46":"markdown"},"source":{"ae4fdb6c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c9dbc854":"import pandas as pd\nimport numpy as np","ea676863":"df = pd.read_csv('..\/input\/reviews\/Restaurant_Reviews.tsv', delimiter = '\\t')  ","1ca3e9c8":"print(df.shape)\ndf.head()","4045a4ff":"df.isnull().sum()","a65d5326":"messages=df.copy()","c5ccd90b":"messages.head(10)","e531e7a2":"from nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nimport re","dff2a00b":"ps = PorterStemmer()\ncorpus = []\nfor i in range(0, len(messages)):\n    review = re.sub('[^a-zA-Z]', ' ', messages['Review'][i])\n    review = review.lower()\n    review = review.split()\n    \n    review = [ps.stem(word) for word in review if not word in stopwords.words('english')]\n    review = ' '.join(review)\n    corpus.append(review)","29d56572":"corpus[5]","3c069783":"from sklearn.feature_extraction.text import TfidfVectorizer","0290c985":"tfidf_v=TfidfVectorizer(max_features=1500,ngram_range=(1,3))\nX=tfidf_v.fit_transform(corpus).toarray()","50197ffd":"tfidf_v.get_params()","bc8fcf3b":"X.shape","f43c455a":"y=messages['Liked']","66edb7c9":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)","657907e8":"count_df = pd.DataFrame(X_train, columns=tfidf_v.get_feature_names())","584bd2fd":"count_df.head()","755bc9e6":"from sklearn.naive_bayes import MultinomialNB\nfrom sklearn import metrics\nimport itertools","ce8b636a":"classifier=MultinomialNB(alpha=0.1)","994850cc":"previous_score=0\nfor alpha in np.arange(0,1,0.1):\n    sub_classifier=MultinomialNB(alpha=alpha)\n    sub_classifier.fit(X_train,y_train)\n    y_pred=sub_classifier.predict(X_test)\n    score = metrics.accuracy_score(y_test, y_pred)\n    if score>previous_score:\n        classifier=sub_classifier\n    print(\"Alpha: {}, Score : {}\".format(alpha,score))","7a57c7d9":"classifier=MultinomialNB(alpha=0.2)\nclassifier.fit(X_train, y_train)\npred = classifier.predict(X_test)\nscore = metrics.accuracy_score(y_test, pred)\nprint(\"accuracy:   %0.3f\" % score)","27528538":"from sklearn.metrics import classification_report\n\nmodel_score= (classification_report(y_test, pred))\nprint(model_score)","b64f6e7e":"import matplotlib.pyplot as plt \nfrom sklearn.metrics import plot_confusion_matrix\n \nplot_confusion_matrix(classifier , X_test, y_test) \nplt.show()","726896c4":"from sklearn.metrics import plot_roc_curve\n\ndisp=plot_roc_curve(classifier,X_test, y_test);","cb35e7ac":"## Confusion Matrix","abffd1b4":"## Loading Dataset","795db196":"## Classification Report","7d4eed2e":"## AUC Score","f94b8626":"##  Train and Test Split","4f15a9d3":"# **Restaurant_Reviews Sentiment analysis**","bbee957b":"## Preprocessing Data Using TF IDF Vectorizer","a5cd43b8":"### Multinomial Classifier with Hyperparameter Tuning","983dc086":"## Cleaning Data","835acf04":"## Training Model","e882f9a2":"### Multinomial Classifier with Updaated Parameter","f19cac46":"### Checking for Null values "}}