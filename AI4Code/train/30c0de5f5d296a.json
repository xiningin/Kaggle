{"cell_type":{"bd770219":"code","7a5b9b2a":"code","5b2a82f9":"code","3e51ccee":"code","7805d8b4":"code","d5806086":"code","291b7b2e":"code","d8d2cfbd":"code","fb3d4e2f":"markdown","aa796d16":"markdown","70285141":"markdown","da7c160c":"markdown","710dab3f":"markdown","832d116d":"markdown","ebfa010c":"markdown"},"source":{"bd770219":"import numpy as np\nimport pandas as pd \n\ndf = pd.read_csv('..\/input\/coronavirusdataset\/patient.csv')\ndf.head(5)","7a5b9b2a":"# How many NaN?\nprint('How many NaN?')\ndf.isna().sum().to_frame().sort_values(0).style.background_gradient(cmap='summer_r')","5b2a82f9":"df2 = df.country.value_counts() \/ len(df) *100\ndf2.plot.bar(title='The percentage of hometowns of paitents in Korea', color='r')","3e51ccee":"import seaborn as sns; sns.set()\nimport matplotlib.pyplot as plt\n\nconf = df.iloc[:,:] # Confirmed\n# Cut year.\nconf['time'] = conf['confirmed_date'].apply(lambda x : str(x)[5:])\n# Value count\ncounts = conf['time'].value_counts().sort_index().reset_index()\ncounts.columns = ['time', 'new_patient']\n# Plot\nfig = plt.figure(figsize=(15,8))\nplt.xticks(rotation=45)\nax = sns.lineplot(x=\"time\", y=\"new_patient\", data=counts)\n","7805d8b4":"import datetime # Change date string to date object\n\npatient = df.loc[:,['confirmed_date', 'state']]\npatient.dropna(inplace=True)\npatient['confirmed_date'] = patient['confirmed_date'].apply(lambda x : datetime.datetime.strptime(x, '%Y-%m-%d'))\n\n# New columns \npatient['time'] = 0 \npatient['accum'] = 0","d5806086":"# Calculate\nfor i in range(1, len(patient)):\n    days = (patient.iloc[i, 0] - patient.iloc[i-1, 0])\n    if days == 0:\n        patient.iloc[i, 2] = patient.iloc[i-1, 2]\n    else:\n        patient.iloc[i, 2] = patient.iloc[i-1, 2] + days.days\n\n\nReleased = 0\nIsolated = 0\nDeceased = 0\n\nfor i in range(0, len(patient)):\n    if patient.iloc[i, 1] == 'released':\n        Released +=1 \n        patient.iloc[i, 3] = Released\n    if patient.iloc[i, 1] == 'isolated':\n        Isolated +=1\n        patient.iloc[i, 3] = Isolated\n    else:\n        Deceased +=1\n        patient.iloc[i, 3] = Deceased\n    \npatient","291b7b2e":"sns.factorplot('time','accum', data=patient, hue='state',size=10, kind='point')","d8d2cfbd":"sns.factorplot('time','accum', data=patient, hue='state',size=8, kind='point').set(ylim=(0, 80))","fb3d4e2f":"### New Features to analyse state\n\n* time : trimmed confirmed_date\n\n* accum : The accumulated number for each state (released, isolated, deceased)","aa796d16":"# Corona Virus is a serious problem in korea. \n\nSo it is important to see how korea government is dealing with the virus.\n\nIn this notebook, I will see korea's inspections.","70285141":"We are going to analyse 3 features.\n\n* Country\n\n* confirmed_date\n\n* state : ( released, isolated, deceased )\n\n## 1. Country","da7c160c":"## 2. Confirmed date\n\nIt has been recorded since 2020-01-20 till 2020-03-03\n\nI'm gonna see patient counts depending on time.","710dab3f":"There are more **isolated** patients than released or deceased.\n\n ","832d116d":"As we can see the proportion of released and deceased are quite similar.\n\nWhich mean there are not so much **'released'** patients.\n\n\n> Feel free to comment on any things like ideas and misspell.\nThank you!\ud83d\ude03 ","ebfa010c":"This data is real time data. There are many NaNs and it is hard for me to analys this.\n\nBut fortunately there are **some features** with few NaNs."}}