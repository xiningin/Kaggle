{"cell_type":{"b4f1c03e":"code","59a4565e":"code","5acdd3ae":"code","48f1f675":"code","47413315":"code","2c1ace47":"code","cdbf0001":"code","b53e8e63":"code","8bc5ce85":"code","95bf85ec":"code","458c0e08":"code","f7e91625":"code","a25eb977":"code","47a9825f":"code","111b9cb4":"code","bed15c3b":"code","3edb0ade":"code","6c342027":"code","d1930dd9":"code","30bff7c9":"code","f9ec6827":"code","dd5e628a":"code","368c8bca":"code","b4f9e638":"code","b1b0f16c":"code","1a263d34":"code","1dcedeef":"code","ddb8c1e7":"code","f53cb6b6":"code","13769161":"code","7613aa5e":"code","9e7e116d":"code","d03a5c04":"code","89efe295":"code","5ef07f22":"code","c7014f54":"code","ef3535c0":"code","7a1216c0":"code","d561cad8":"code","1aa52612":"code","1d9adf18":"code","21c56abf":"code","bfb91154":"code","4350a887":"code","e58f24f6":"code","11a2edf7":"code","bf4cbc7f":"markdown","ec81ef0a":"markdown","fb325436":"markdown","db6f7db6":"markdown","bfdda113":"markdown","bfd6ab7c":"markdown","1c89e973":"markdown","c7cbfa6f":"markdown","500df61f":"markdown","264f5205":"markdown","8bfd917a":"markdown","42e415ee":"markdown","cd7cdf1d":"markdown","1782ba5b":"markdown","de4d4451":"markdown","f779b10b":"markdown","fa35e1d7":"markdown","b82c5940":"markdown","c776b149":"markdown","bc7c6db4":"markdown","0a55aa62":"markdown","59c45218":"markdown","a3e259d6":"markdown","42775f65":"markdown","f8b2d6f4":"markdown","40cd9f35":"markdown","a24a9187":"markdown"},"source":{"b4f1c03e":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pathlib import Path\n\nplt.style.use('ggplot') # 'fivethirtyeight'\nimport warnings # Enable warnings for cleaner code\n#warnings.filterwarnings('ignore')\n%matplotlib inline","59a4565e":"# plt.style.available","5acdd3ae":"DATA_PATH = Path(\"..\/input\/titanic\/\")\n\ntrain_df = pd.read_csv(DATA_PATH \/ \"train.csv\")\ntest_df = pd.read_csv(DATA_PATH \/ \"test.csv\")\n\nsample_sub = pd.read_csv(DATA_PATH \/ \"gender_submission.csv\")","48f1f675":"train_df.head()","47413315":"train_df.columns","2c1ace47":"print(f\"Train Shape: {train_df.shape}\")\nprint(f\"Test Shape : {test_df.shape}\")","cdbf0001":"train_df.info()","b53e8e63":"test_df.info()","8bc5ce85":"total_missing = train_df.isnull().sum().sum()\nprint(f\"Total number missing values: {total_missing}\")","95bf85ec":"train_df.isnull().sum()","458c0e08":"(train_df.isnull().sum()\/train_df.shape[0]).sort_values(ascending = False).head(4).plot(kind='bar');","f7e91625":"(train_df.isnull().sum()\/train_df.shape[0]).sort_values(ascending = False).head(4).plot(kind='bar');","a25eb977":"train_df.isnull().sum().sort_values(ascending = False).to_frame().head(70).rename({0:'Counts'}, axis = 1).T.style.background_gradient('crest')","47a9825f":"#printing only 70 columns with highest percentage of Null values\ndisplay(round((train_df.isnull().sum() \/ (len(train_df.index)) * 100) , 2).sort_values(ascending = False).head(70).to_frame().rename({0:'%age'}, axis = 1).T.style.background_gradient('magma_r'))\nprint()\nmissing = (train_df.isnull().sum() \/ (len(train_df.index)) * 100).to_frame().reset_index().rename({0:'%age'}, axis = 1)\nax = sns.barplot(missing['index'],missing['%age'], palette  = 'magma_r')\nplt.title(\"Percentage of Missing Values\", fontsize = 20)\nplt.xticks(fontsize =7, rotation = 90)\nplt.xlabel(\"Variables\")\nplt.ylabel(\"Percentage of Missing Values\")\nplt.show();","111b9cb4":"train_df.describe().transpose().style.background_gradient(cmap='autumn').set_precision(4)","bed15c3b":"y = train_df['Survived']\n# features = train.drop(['target', 'id'], axis=1)\nfeatures = train_df.drop(['Survived'], axis=1)\n# test.drop(['id'], axis = 1, inplace = True)\n\n# Preview features\nfeatures.head()\n","3edb0ade":"ax = sns.countplot(x='Survived', data=train_df);\nax.set_title('Target variable distribution', fontsize=20, y=1.05);\n# sns.despine(right=True)\n# sns.despine(offset=10, trim=True)","6c342027":"# plt.figure(figsize=(8, 6))\nax = sns.countplot(x=train_df['Survived'], palette='viridis')\nax.set_title('Target variable distribution', fontsize=20, y=1.05)\n\nsns.despine(right=True)\nsns.despine(offset=10, trim=True)","d1930dd9":"percent_survived = train_df.Survived.sum()\/train_df.Survived.count()\nprint(f\"Class: 0 = {1 - percent_survived:.2f} 1 = {percent_survived:.2f}\")","30bff7c9":"cont_cols = ['Age', 'Fare']","f9ec6827":"train_df[cont_cols].hist(figsize=(20,12))\nplt.show()","dd5e628a":"num_cols = train_df.select_dtypes(include=['int64', 'float64']).columns\ncat_cols = train_df.select_dtypes(include=['object', 'bool']).columns","368c8bca":"num_cols","b4f9e638":"# cat_cols = ['Cabin', 'Embarked', 'Name', 'Parch' 'Pclass', 'Sex', 'SibSp', 'Ticket']\ncat_cols = ['Embarked', 'Parch', 'Pclass', 'Sex', 'SibSp']","b1b0f16c":"for col in cat_cols:\n#     print (col)\n#     print(train_df[col].dropna())\n    print (col, sorted(train_df[col].dropna().unique()))","1a263d34":"pd.crosstab(train_df.Sex, train_df.Survived,margins=False)","1dcedeef":"pd.crosstab(train_df.Sex, train_df.Survived,margins=True)","ddb8c1e7":"train_df.groupby(['Survived','Sex'])['Survived'].count()","f53cb6b6":"survive_percent_male = train_df[train_df.Sex == \"male\"].Survived.sum() \/ train_df[train_df.Sex == \"male\"].Survived.count()\nsurvive_percent_female = train_df[train_df.Sex == \"female\"].Survived.sum() \/ train_df[train_df.Sex == \"female\"].Survived.count()\n\nprint(f\"Male Survivors  : {survive_percent_male:.3}\")\nprint(f\"Female Survivors: {survive_percent_female:.3}\")","13769161":"pd.crosstab(train_df.Pclass, train_df.Survived)","7613aa5e":"pd.crosstab(train_df.Embarked, train_df.Survived, margins=True)","9e7e116d":"pd.crosstab(train_df.Embarked, train_df.Survived, margins=False)","d03a5c04":"f,ax = plt.subplots(2,3,figsize=(18,12))\n\n# ax[0,0].set_title('Foo')\nsns.pointplot(x='Embarked',y='Survived', data=train_df, ax=ax[0][0])\nsns.barplot(x='Embarked',y='Survived', data=train_df, ax=ax[0][1])\nsns.violinplot(x='Embarked',y='Survived', data=train_df, ax=ax[0][2])\nsns.swarmplot(x='Embarked',y='Survived', data=train_df, ax=ax[1][0])\nsns.stripplot(x='Embarked',y='Survived', data=train_df, ax=ax[1][1])\n\n# sns.catplot(x='Embarked',y='Survived', kind='point', data=train_df);\n# sns.catplot(x='Embarked', kind='count', data=train_df, ax=ax[1]);\n\n# sns.catplot(x='Embarked',y='Survived', kind='point', data=train_df);\n# sns.catplot(x='Embarked', kind='count', data=train_df);\n\nax[0,1].set_title('Bar')\n# plt.grid()  #just add this\n\nplt.show()\n","89efe295":"sns.catplot(x='Embarked', kind='count', data=train_df);\n","5ef07f22":"train_df.groupby(['Survived','Pclass','Sex'])['Survived'].count()","c7014f54":"train_df.groupby(['Survived','Sex','Pclass'])['Survived'].count()","ef3535c0":"sns.catplot(x='Pclass',y='Survived', kind='point', data=train_df);\n","7a1216c0":"pd.crosstab([train_df.Sex, train_df.Survived], train_df.Pclass, margins=True).style.background_gradient(cmap='autumn_r')","d561cad8":"# https:\/\/seaborn.pydata.org\/generated\/seaborn.catplot.html - Bottom of page\n# FacetGrid\n\ng = sns.catplot(x=\"Sex\", y=\"Survived\", col=\"Pclass\",\n                data=train_df, saturation=.5,\n                kind=\"bar\", ci=None, aspect=.6)\n(g.set_axis_labels(\"\", \"Survival Rate\")\n  .set_xticklabels([\"Men\", \"Women\"]) # , \"Children\"\n  .set_titles(\"{col_name} {col_var}\")\n  .set(ylim=(0, 1))\n  .despine(left=True));  ","1aa52612":"titanic = sns.load_dataset(\"titanic\")\n\ng = sns.catplot(x=\"age\", y=\"embark_town\",\n                hue=\"sex\", row=\"class\",\n                data=titanic[titanic.embark_town.notnull()],\n                orient=\"h\", height=2, aspect=3, palette=\"Set3\",\n                kind=\"violin\", dodge=True, cut=0, bw=.2)\n","1d9adf18":"fig, ax = plt.subplots(2, 3, figsize=(18, 10))\n\nfig.suptitle('Survival by Feature')\n\nsns.boxplot(ax=ax[0, 0], data=train_df, x='Survived', y='Sex');\nsns.boxplot(ax=ax[0, 1], data=train_df, x='Survived', y='Pclass');\nsns.boxplot(ax=ax[0, 2], data=train_df, x='Survived', y='Embarked');\n","21c56abf":"corr = train_df.corr()","bfb91154":"f,ax = plt.subplots(figsize=(9,6))\nsns.heatmap(corr, annot = True, linewidths=1.5 , fmt = '.2f',ax=ax)\nplt.show()","4350a887":"# https:\/\/seaborn.pydata.org\/tutorial\/axis_grids.html\n\ntitanic = sns.load_dataset(\"titanic\")\ng = sns.PairGrid(titanic)\ng.map(sns.scatterplot);\n","e58f24f6":"corr_matrix = train_df.corr()[['Survived']].sort_values(by = ['Survived'], ascending = False).drop(['Survived']).T\ncorr_matrix.style.set_precision(4)\n# corr_matrix.style.background_gradient(cmap = 'coolwarm').set_precision(4)\n","11a2edf7":"TARGET = \"Survived\"\n\ncorr_matrix = train_df.corr()[[TARGET]].sort_values(by = [TARGET], ascending = False).drop([TARGET]).T\ncorr_matrix.style.set_precision(4)\n# corr_matrix.style.background_gradient(cmap = 'coolwarm').set_precision(4)\n","bf4cbc7f":"# Load Data","ec81ef0a":"# Figure out a better way to exclude zero rows","fb325436":"# Missing Data","db6f7db6":"# Calculate Target Ratio\n\nFor binary class, we don't want it to be out of balance","bfdda113":"# Categorical Features","bfd6ab7c":"## Feature: Embarked","1c89e973":"# Numerical Features","c7cbfa6f":"### Groupby","500df61f":"# Feature: Sex","264f5205":"# Notebook References\n\n- https:\/\/www.datacamp.com\/community\/tutorials\/kaggle-machine-learning-eda\n- https:\/\/www.kaggle.com\/dejavu23\/titanic-eda-to-ml-beginner\n- https:\/\/www.kaggle.com\/snikhil17\/making-basic-eda-attractive\n- https:\/\/dev.to\/thalesbruno\/subplotting-with-matplotlib-and-seaborn-5ei8\n- https:\/\/www.kaggle.com\/desalegngeb\/march-tps-eda-visualizations\n- https:\/\/www.kaggle.com\/dwin183287\/tps-september-2021-eda","8bfd917a":"# Correlation Matrix\n\n### Fill in missing values first?","42e415ee":"# catplot: Point, Count, Violin, Swarm\n\n- https:\/\/seaborn.pydata.org\/generated\/seaborn.catplot.html","cd7cdf1d":"# Programming References\n\n## Seaborn\n\n- https:\/\/www.geeksforgeeks.org\/seaborn-color-palette\/\n- https:\/\/www.codecademy.com\/articles\/seaborn-design-ii\n- https:\/\/chrisalbon.com\/code\/python\/data_visualization\/seaborn_color_palettes\/","1782ba5b":"- https:\/\/www.kaggle.com\/subinium\/tabularplayground-feb-eda-visualization","de4d4451":"# Outline\n\n\n- Library Imports\n- Load Data\n- Data Overview\n  - First 5 rows of the data\n  - Shape of the data\n  - Missing Values\n  - Percentage of Null Values\n  - Describe Data\n  - Outlier Detection\n- Features\n  - Distributions\n- Target Variable\n  - Distribution\n  - Target and Missing Values\n- Correlations\n  - Correlation Matrix\n  - Correlations for Target\n- Features Engineering\n  - Continuous Features\n    - Log of Continuous Features\n    - Minimum and Log Minimum of All Continuous Features\n    - Maximum and Log Maximum of All Continuous Features\n    - Sum and Log Sum of All Continuous Features\n    - Multiplication and Log Multiplication of All Continuous Features\n    - Prorate of All Continuous Features\n    - Log Prorate of All Continuous Features\n  - Target Encoding\n    - Mean Encoding\n    - Minimum Encoding\n    - Maximum Encoding\n- Baseline\n- Other Solutions","f779b10b":"# Biased Outliers Titanic EDA\n\nThis is Work in Progress and is a learning exercise for our Machine Learning Study Group.","fa35e1d7":"# Features","b82c5940":"# Target Variable","c776b149":"### Crosstab","bc7c6db4":"# Separate target from features\n","0a55aa62":"# Import Libraries","59c45218":"# Describe Data\n\n- count\n- mean\n- standard deviation\n- minimum\n- 1st quartile\n- median\n- 3rd quartile\n- maximum\n","a3e259d6":"# Data Overview","42775f65":"# Percentage of Null Values","f8b2d6f4":"# Shape of Data","40cd9f35":"## Feature: Pclass","a24a9187":"The data:\n   - 8 categorical variables: **Cabin, Embarked, Name, Parch Pclass, Sex, SibSp, Ticket**\n   - 2 continuous variables: **Age, Fare**\n   - 1 binary target column: **Survived**"}}