{"cell_type":{"4b0002d8":"code","a188d8ca":"code","92ac6980":"code","b1a34d01":"code","070c7d2b":"code","12eceedb":"code","3d159f7d":"markdown","cf8e745e":"markdown","30198d86":"markdown"},"source":{"4b0002d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sklearn\nfrom sklearn import linear_model\nimport math\nimport matplotlib.pyplot as pyplot\nfrom matplotlib import style\nimport seaborn as sns\nfrom sklearn.metrics import mean_absolute_error\nsns.set()\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a188d8ca":"data = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict.csv\")\n\ndata.drop('Serial No.', axis='columns', inplace=True) # Drop unwanted column\ndata.head()\n","92ac6980":"gscore = data[[\"GRE Score\"]]\nfig=sns.distplot(gscore,color='blue',kde=False)\npyplot.title(\"GRE Score\")\npyplot.show()\n\nTscore = data[[\"TOEFL Score\"]]\nfig=sns.distplot(Tscore,color='r',kde=False)\npyplot.title(\"TOEFL Score\")\npyplot.show()\n\nUnivRating = data[[\"University Rating\"]]\nfig=sns.distplot(UnivRating,color='black',kde=False)\npyplot.title(\"University Rating\")\npyplot.show()","b1a34d01":"sns.distplot(data['Chance of Admit '])","070c7d2b":"predict = 'Chance of Admit '\n\nX = np.array(data.drop([predict], axis=1))\ny = np.array(data[predict])\n\nx_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(X, y, test_size = 0.12,random_state=1)\n\nlinear = linear_model.LinearRegression()\nlinear.fit(x_train, y_train)\nacc = linear.score(x_test, y_test)\n\n\nprint(\"Model Accuracy: \" + str(acc))\npredictions = linear.predict(x_test)\nsns.regplot(x=y_test, y=predictions)\n\n","12eceedb":"\n\nfor x in range(len(predictions)):\n    print(predictions[x], \"    \",y_test[x]) #Print the prediction and then the original value\n    \n","3d159f7d":"# **Predictions : **","cf8e745e":"# Fitting The Data and Checking Accuracy","30198d86":"# Reading the Data"}}