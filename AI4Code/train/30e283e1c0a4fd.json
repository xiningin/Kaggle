{"cell_type":{"980f0d13":"code","99bea3a8":"code","b7457fd2":"code","bfc5bb02":"code","7c8f4600":"code","11dffd83":"code","729f456a":"code","b2fa4e77":"code","7ba6ffd4":"code","815de4c9":"code","0726b72c":"code","bf87e444":"code","9de96363":"code","5aa2fca3":"code","10102188":"code","865b757b":"code","36ecb0ec":"markdown","ca464a42":"markdown","4c6f87db":"markdown","99cdeb77":"markdown","b746d8e3":"markdown","a6a1825e":"markdown"},"source":{"980f0d13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.tree import DecisionTreeClassifier\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","99bea3a8":"# Reading the dataset files train and test\ntrain = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","b7457fd2":"# Displaying the first 5 rows of the DataFrame\ntrain.head()","bfc5bb02":"train.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)\ntest.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)","7c8f4600":"# Survived for Ticket class, 1 = 1st \/ 2 = 2nd \/ 3 = rd\ntrain[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean()","11dffd83":"# Survived for Sex\ntrain[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean()","729f456a":"# Creating new DataFrame\nnew_data_train = pd.get_dummies(train)\nnew_data_test = pd.get_dummies(test)","b2fa4e77":"new_data_test.head()","7ba6ffd4":"new_data_train.head()","815de4c9":"new_data_train.isnull().sum().sort_values(ascending=False).head(10)","0726b72c":"new_data_train['Age'].fillna(new_data_train['Age'].mean(), inplace=True)\nnew_data_test['Age'].fillna(new_data_test['Age'].mean(), inplace=True)","bf87e444":"# Verifing the dataset Test\nnew_data_test.isnull().sum().sort_values(ascending=False).head(10)","9de96363":"new_data_test['Fare'].fillna(new_data_test['Fare'].mean(), inplace=True)","5aa2fca3":"X = new_data_train.drop('Survived', axis=1)\ny = new_data_train['Survived']","10102188":"tree = DecisionTreeClassifier(max_depth=3, random_state=0)\ntree.fit(X, y)","865b757b":"tree.score(X , y)","36ecb0ec":"<h2>One-hot encoding<\/h2>","ca464a42":"<h2>Removed columnds Name, Ticket and Cabin. Irrelevant to our model<\/h2>","4c6f87db":"<h2>Removing NaN<\/h2>","99cdeb77":"<h2> Filling Nan (Fare) with mean<\/h2>","b746d8e3":"<h1>Decision Tree<\/h1>","a6a1825e":"<h2>Filling NaN (Age) with mean<\/h2>"}}