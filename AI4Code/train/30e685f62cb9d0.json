{"cell_type":{"b4e6dba3":"code","00935679":"code","4e66682e":"code","b5476f42":"code","ed96d263":"code","dbd0af76":"code","c6751171":"code","61fdb387":"code","ffa7652b":"code","449ad49d":"code","63c3e7ef":"code","a89f06b1":"code","1077e53c":"code","907718e1":"code","691aa25d":"code","fc21b294":"code","e257d0fc":"code","f5b260ec":"code","6ab63433":"code","59511b58":"code","7453847a":"markdown"},"source":{"b4e6dba3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","00935679":"vendas_tran = pd.read_csv('..\/input\/desafios\/vendas_tran.csv',sep=';')\nvendedor = pd.read_csv('..\/input\/desafios\/vendedor.csv',sep=';')","4e66682e":"vendas_tran.head(2)","b5476f42":"vendedor.head(2)","ed96d263":"#Padronizando a nomenclatura do Identificador de Join\nvendedor.rename(columns ={\"Salespersonid\" : \"SalesPersonID\"}, inplace = True)\nvendas_tran.rename(columns ={\"SalesPersonId\" : \"SalesPersonID\"}, inplace = True)","dbd0af76":"vendedor.head(2)","c6751171":"vendas_tran.head(2)","61fdb387":"vendas_tran.shape","ffa7652b":"vendedor.shape","449ad49d":"vendas_tran.describe()","63c3e7ef":"df = pd.merge(vendas_tran,vendedor)","a89f06b1":"df.shape","1077e53c":"df.head(2)","907718e1":"df.dtypes","691aa25d":"df['Sales'] = df['Sales'].str.replace(',','.')\ndf['Sales'] = df['Sales'].astype(float)","fc21b294":"df['Discount'] = df['Discount'].str.replace(',','.')\ndf['Discount'] = df['Discount'].astype(float)","e257d0fc":"df['Profit'] = df['Profit'].str.replace(',','.')\ndf['Profit'] = df['Profit'].astype(float)","f5b260ec":"plt.figure(figsize=(7,7))\nbestStates = df.groupby('State')['State'].count().sort_values(ascending=False)\nbestStates = bestStates [:5]\nbestStates.plot(kind='bar', color='pink')\nplt.title('Estados com melhores Vendas')\nplt.ylabel('')\nplt.xlabel('Estados')\nplt.show()","6ab63433":"sns.boxplot(df['Quantity']).set_title(\"Quantidade Vendida\")","59511b58":"plt.figure(figsize=(6,6))\nbestVendedor= df['SalesPersonName'].value_counts().plot.bar()\n#bestVendedor = bestVendedor[:5]\nbestVendedor.plot(kind='bar', color='pink')\nplt.title('Melhores Vendedores')\nplt.ylabel('')\nplt.xlabel('Vendedores')\nplt.show()","7453847a":"**Conclus\u00e3o**\n\nObservando o conjunto de dados, consegui identificar que os Estados da California e New York puxam as vendas.\nA Quantidade vendida gira em torno de 2 e 5.\n3 dos 4 melhores vendedores s\u00e3o mulheres."}}