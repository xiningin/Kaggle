{"cell_type":{"6a9f0e5f":"code","8bfff1b9":"code","e94aaec7":"code","61790352":"code","36ab6d50":"code","9908f71e":"code","8b6740e8":"code","fd036ed3":"code","76223ef1":"code","a5a06126":"code","9ab9d873":"code","69f0999d":"code","aa7f85e9":"code","a36a3be6":"code","25ce98b4":"code","0d0ae6bf":"code","cd97abe3":"code","9f337c23":"code","29903bcc":"code","d54577b7":"code","aa47105a":"code","ab6b42e3":"code","248f35ad":"code","96df94fd":"code","b954ccdf":"code","3fb8bacf":"code","16d2e0f0":"code","9141975e":"code","29da56ae":"code","3dcdda34":"code","f0d6a2b7":"code","4e295c06":"code","7da6a1f2":"code","014f9bd9":"code","2dd723d5":"code","ba998fe5":"code","b426121b":"code","d18d6020":"code","724956db":"code","124d3a16":"code","de9c6665":"code","ab845ce5":"code","d0d23269":"code","ffbc6dab":"code","6eacc948":"code","058b2976":"code","03f7b02b":"code","6c8498dd":"code","926e1ac8":"code","0fccdcd6":"code","cc8f9645":"code","46a1e98b":"code","236903bc":"code","45e9547c":"code","491a5267":"code","7f1c1e6b":"code","62c07f43":"code","19da4fe8":"code","fc2af8f8":"code","43ce2521":"code","1d8b1f33":"code","8898dfc4":"code","2005d90e":"code","8ea2f844":"code","f8974db2":"code","9f918d0e":"code","ca2e7050":"code","e6b4d96f":"code","efbc14b9":"code","a6dfe90b":"code","c5cfada4":"code","b53b466b":"code","4d3734f4":"code","d98dd22a":"code","b74dd30d":"code","a4bde718":"code","2306726e":"code","6d06fa96":"code","c7c5c40b":"code","3e04e5df":"code","99509604":"code","09eec050":"code","d88a89fc":"code","0d76ed05":"code","c5b0f614":"code","f257270b":"code","c85dd6f2":"code","a8bf0aef":"code","8a498d1e":"code","2d4760af":"code","cadd6c1a":"code","e09296a6":"code","bba71dcc":"code","31357f46":"code","57c21e1a":"code","8862d690":"code","449a00ed":"code","c73241e0":"code","bf49bfd3":"code","15031f88":"code","8fba17d7":"code","e3375f73":"code","0537ae6f":"code","f748fd18":"code","9e0fa09b":"code","1d2022a7":"code","975c818d":"code","635afc34":"code","4f9359ba":"code","40810b23":"code","cb5afa55":"code","82c2fd82":"code","fe1f6ec8":"code","8b833dc9":"code","1f9db503":"code","fee7d181":"code","62dc465d":"code","4bc41b5a":"code","b37b3db1":"code","218e9ae7":"code","0fc909eb":"code","ebd77922":"code","e15408b5":"code","495f3c23":"code","03dd50ad":"code","b2e3b7a2":"code","0bbb3a65":"code","30adcbb1":"code","f4640354":"code","fef324c0":"code","a9bf6697":"code","3114c5e1":"code","960f85a9":"code","a9d9b56d":"code","85678f98":"code","fb9aeadb":"code","30b865e8":"code","f8f3bb4a":"code","91aa0245":"code","65df7573":"code","02d2ce39":"code","3a1b7ff7":"code","9b5b5984":"code","7a073217":"code","164d1b2c":"code","608f5456":"code","27f18f7d":"code","6d2625de":"code","6bf69b4b":"code","d62d5906":"code","4944ea89":"code","21e74b74":"code","5d5a588c":"code","6c7e300b":"code","3f72c541":"code","9b743a83":"code","ac02155d":"code","ca38181b":"code","379bd1de":"code","2a06b81f":"code","1c8ea51f":"code","6c0c2ad3":"code","ad4a094a":"code","d013544b":"code","d0a2c6c3":"code","082c569a":"code","bf4d6f64":"code","b9c2145c":"code","97cd243e":"code","a635afd1":"code","f652cdea":"code","582b9a45":"code","4fbd748e":"code","a651c6b0":"code","51862bde":"code","580e5e39":"code","3f54f568":"code","a13b5b4b":"code","70ca15d7":"code","bf584184":"code","caeabeb3":"code","21f1b399":"code","83b59e47":"markdown","590316f4":"markdown","93d70ba0":"markdown","179a1d33":"markdown","fbef756e":"markdown"},"source":{"6a9f0e5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8bfff1b9":"### numpy\u6570\u7ec4\u64cd\u4f5c\nimport numpy as np","e94aaec7":"list_1=[1,2,3]\narray_1=np.array(list_1)## \u5217\u8868\u8f6c\u5316\u4e3a\u6570\u7ec4","61790352":"import array as arr\na=arr.array(\"d\",[1.2,3.4,5.6])## \u521b\u5efa\u542b\u6709\u6d6e\u70b9\u6570\nprint(a)","36ab6d50":"type(array_1)","9908f71e":"type(list_1)","8b6740e8":"### \u6570\u7ec4\u76f8\u52a0\nlist_2=list_1+list_1\nprint(list_2)","fd036ed3":"array_2=array_1+array_1\nprint(array_2)","76223ef1":"## numpy \u6570\u5b66\u8fd0\u7b97\nprint(array_1*array_1)","a5a06126":"print(array_1\/array_1)","9ab9d873":"print(array_1**array_1)","69f0999d":"## \u9ad8\u7ea7\u8fd0\u7b97\nlist_5=[i for i in range(1,6)]\nprint(list_5)","aa7f85e9":"array_5=np.array(list_5)\narray_5","a36a3be6":"print(\"sin:\",np.sin(array_5))","25ce98b4":"## \u5bf9\u6570\nprint(\"natural logarithm\",np.log(array_5))\nprint(\"Base-10 logarithm\",np.log10(array_5))\nprint(\"Base-2 logarithm\",np.log2(array_5))","0d0ae6bf":"## \u8ba1\u7b97\u6307\u6570\nprint(\"Exponential:\",np.exp(array_5))","cd97abe3":"## arange\\linspace\nprint(np.arange(5,16))","9f337c23":"print(np.arange(0,11,2))","29903bcc":"print(np.arange(0,11,.25))","d54577b7":"print(np.linspace(1,5,11))","aa47105a":"## \u521b\u5efa\u591a\u7ef4\u6570\u7ec4\uff0c\u5217\u8868\u8f6c\u5316\u6570\u7ec4\nlist_2d=[[1,2,3],[4,5,6],[7,8,9]]\nmat1=np.array(list_2d)\nprint(type(mat1))\nprint(\"here is the matrix\\n------\\n\",mat1,\"\\n-------\")","ab6b42e3":"## \u5143\u7ec4\u8f6c\u5316\u6570\u7ec4\ntuple_2d=np.array([(1.2,2,3),(3,4,5)])\nmat_tuple=np.array(tuple_2d)\nprint(mat_tuple)","248f35ad":"## \u6570\u7ec4\u7ef4\u5ea6\nmat_tuple.ndim","96df94fd":"###\u77e9\u9635\u5927\u5c0f\nmat_tuple.shape","b954ccdf":"## \u77e9\u9635\u7684\u6570\u636e\u7c7b\u578b\nmat_tuple.dtype","3fb8bacf":"## \u5168\u96f6\u3001\u5168\u4e00\u3001\u968f\u673a\u3001\u5355\u4f4d\u5411\u91cf\u3001\u5411\u91cf\nprint(\"vertor of zeros: \",np.zeros(6)) ## \u51680 \u5411\u91cf","16d2e0f0":"## \u51680 \u77e9\u9635\nprint(\"matrix of zeros:\\n\",np.zeros((3,3)))","9141975e":"## \u5168\u4e3a2\u7684\u77e9\u9635\nprint(\"matrix of 5's:\\n\",5*np.ones((2,3)))","29da56ae":"## \u5355\u4f4d\u77e9\u9635\nnp.eye(4)","3dcdda34":"## \u968f\u673a\u5f62\u72b6\u77e9\u9635\nprint(\"random matrix of shape(4,3):  \\n\",np.random.randint(low=1,high=10,size=(4,3)))","f0d6a2b7":"## reshape\\ ravel(\u964d\u4e00\u7ef4)\na=np.random.randint(1,100,30)\nb=a.reshape(2,3,5)## 2*3,\u4e00\u884c5\u4e2a\nc=a.reshape(6,5)\nprint(\"a:\\n\",a)\nprint(\"b:\\n\",b)\nprint(\"c:\\n\",c)","4e295c06":"## \u964d\u7ef4\nb_flat=b.ravel()\nb_flat","7da6a1f2":"## \u7d22\u5f15\u4e0e\u5207\u7247","014f9bd9":"array_1=np.arange(0,11)## \u521b\u5efa\u5305\u542b10\u4e2a\u5143\u7d20\u7684\u6570\u636e|\nprint(\"Array:\",array_1)","2dd723d5":"array_1[7]","ba998fe5":"array_1[3:6]","b426121b":"array_1[:8]","d18d6020":"array_1[-1::-1] #\u53cd\u5411","724956db":"array_1[1:6:2]","124d3a16":"##\narray_2=np.arange(0,21,2)\nprint(array_2)","de9c6665":"array_2[[2,3,5]]  ### \u7d22\u5f15","ab845ce5":"## \u521b\u5efa\u591a\u7ef4\u6570\u7ec4\nmatrix_1=np.random.randint(10,100,15).reshape(3,5)\nprint(\"matrix_1:\\n\",matrix_1)","d0d23269":"## \u7d22\u5f15\nmatrix_1[0][3]","ffbc6dab":"matrix_1[0,3]","6eacc948":"matrix_1[2]## \u8bbf\u95ee\u884c","058b2976":"matrix_1[:,1]  ## \u8bbf\u95ee\u5217","03f7b02b":"matrix_1","6c8498dd":"## \u8f93\u51fa\u6307\u5b9a\u7684\u884c\u5217\nmatrix_1[1:3,1:3]## \u53d6\u4e0d\u5230\u6700\u540e\u4e00\u4e2a3","926e1ac8":"matrix_1[1:3,[1,3]]  ## : \u5230\uff0c \u201c\uff0c\u201d\u53d6\u5177\u4f53","0fccdcd6":"## \u6761\u4ef6\u5b50\u96c6\nmatrix_2=np.array(np.random.randint(10,100,15).reshape(3,5))\nmatrix_2","cc8f9645":"matrix_2[matrix_2>50]","46a1e98b":"## \u6570\u7ec4\u64cd\u4f5c(\u6570\u7ec4-\u6570\u7ec4\u3001\u6570\u7ec4-\u6807\u91cf\u3001\u901a\u7528\u51fd\u6570)","236903bc":"matrix_1=np.random.randint(1,10,9).reshape(3,3)\nmatrix_2=np.random.randint(1,10,9).reshape(3,3)\nprint(\"matrix_1:\\n\",matrix_1)\nprint(\"matrix_2:\\n\",matrix_2)","45e9547c":"## \u77e9\u9635\u7684\u52a0\u51cf\u3001\u7ebf\u6027\u7ec4\u5408\nmatrix_1+matrix_2","491a5267":"matrix_1*matrix_2","7f1c1e6b":"matrix_1\/matrix_2","62c07f43":"3*matrix_1-2*matrix_2","19da4fe8":"## \u6807\u91cf\u7684\u52a0\u51cf\n100+matrix_1","fc2af8f8":"matrix_1**2","43ce2521":"pow(matrix_2,0.5)## \u5e73\u65b9\u6839","1d8b1f33":"## \u6570\u7ec4\u6808\na=np.array([[1,2],[3,4]])\nprint(\"a:\\n\",a)\nb=np.array([[5,6],[7,8]])\nprint(\"b:\\n\",b)","8898dfc4":"print(\"vertical stacking\\n\",np.vstack((a,b)))  ## \u53e0\u52a0\nprint(\"horizontal stacking\\n\",np.hstack((a,b))) ## ","2005d90e":"## pandas \u4e2d\u7684\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u6709\uff1aSeries(\u4e00\u7ef4)\u3001Dataframe(\u4e8c\u7ef4)\uff0cpandas \u5efa\u7acb\u5728numpy\u4e4b\u4e0a","8ea2f844":"## \u521b\u5efapandas\u5e8f\u5217\nlabels=[\"a\",\"b\",\"c\"]\nmy_data=[10,20,30]\narray_1=np.array(my_data)\nd={\"a\":10,\"b\":20,\"c\":30}\nprint(labels)\nprint(my_data)\nprint(array_1)","f8974db2":"##\u521b\u5efa\u5e8f\u5217\nseries_1=pd.Series(my_data)\nprint(series_1)","9f918d0e":"## \u5c06label \u878d\u5408\nseries_2=pd.Series(my_data,index=labels)\n# series_2\nprint(series_2)","ca2e7050":"series_3=pd.Series(array_1,labels)\nseries_3","e6b4d96f":"series_4=pd.Series(d)\nseries_4","efbc14b9":"##\u521b\u5efa\u5177\u6709\u6570\u503c\u6570\u636e\u7684Pandas\u5e8f\u5217\nprint(\"\\nHolding numerical data\\n\",\"-\"*25,sep=\"\")\nprint(pd.Series(array_1))","a6dfe90b":"## \u521b\u5efa\u5177\u6709\u6807\u7b7e\u7684pandas\u5e8f\u5217\nprint(\"\\nHolding text labels\\n\",\"-\"*20,sep=\"\")\nprint(pd.Series(labels))","c5cfada4":"## \u521b\u5efa\u5177\u6709\u51fd\u6570\u7684pandas \u5e8f\u5217\nprint(\"\\nHolding function\\n\",\"-\"*20,sep=\"\")\nprint(pd.Series(data=[sum,print,len]))","b53b466b":"## \u521b\u5efa\u5177\u6709\u5b57\u5178\u7684pandas \u5e8f\u5217\nprint(\"\\nHolding objects from a dictionary\\n\",\"-\"*40,sep=\"\")\nprint(pd.Series(data=[d.keys,d.items,d.values]))","4d3734f4":"## \u521b\u5efapandas DataFrame\nmatrix_data=np.random.randint(1,10,size=20).reshape(5,4)\nmatrix_data","d98dd22a":"row_labels=[\"A\",\"B\",\"C\",\"D\",\"E\"]\ncolumn_headings=[\"W\",\"X\",\"Y\",\"Z\"]\ndf=pd.DataFrame(data=matrix_data,index=row_labels,columns=column_headings)\ndf","b74dd30d":"print(\"\\nThe data frame looks like\\n\",\"-\"*45,sep=\"\")\nprint(df)","a4bde718":"## \u5b57\u5178\u4e2d\u521b\u5efa\u4e00\u4e2aDataFrame\nd={\"a\":[10,20],\"b\":[30,40],\"c\":[50,60]}\ndf2=pd.DataFrame(data=d,index=[\"x\",\"y\"])\nprint(df2)","2306726e":"## \u67e5\u770b\u90e8\u5206dataframe\nmatrix_data=np.random.randint(1,100,100).reshape(25,4)\ncolumn_headings=[\"W\",\"X\",\"Y\",\"Z\"]\ndf=pd.DataFrame(data=matrix_data,columns=column_headings)\ndf.head(3)","6d06fa96":"## \u5bf9\u5217\u7d22\u5f15\u4e0e\u5207\u7247\nprint(\"\\nThe 'X' column\\n\",\"-\"*20,sep=\"\")\ndf[\"X\"].head(3)","c7c5c40b":"print(\"\\nType of the column:\",type(df[\"X\"]),sep=\"\")","3e04e5df":"print(\"\\nThe 'X' and 'Z' columns indexed by passing a list\\n\",\".\"*50,sep=\"\")\ndf[[\"X\",\"Z\"]].head(10)","99509604":"matrix_data=np.random.randint(1,10,size=20).reshape(5,4)\nrow_label=[\"A\",\"B\",\"C\",\"D\",\"E\"]\ncolumn_headings=[\"w\",\"x\",\"y\",\"z\"]\ndf=pd.DataFrame(data=matrix_data,index=row_label,columns=column_headings)\nprint(df)","09eec050":"## \u5bf9\u884c\u7d22\u5f15\u4e0e\u5207\u7247\nprint(\"\\nLabel-based 'loc' method for selecting row\\n\",\"-\"*50,sep=\"\")\nprint(\"\\n Single row\\n\")\nprint(df.loc['C'])","d88a89fc":"print(\"\\nMutiple rows\\n\",\"-\"*30,sep=\"\")\nprint(df.loc[[\"B\",\"C\"]])","0d76ed05":"print(\"\\nSingle row\\n\",\"-\"*30,sep=\"\")\ndf.iloc[2]","c5b0f614":"print(\"\\n Multiple row\\n\",\"-\"*30,sep=\"\")\ndf.iloc[[1,2]]","f257270b":"df","c85dd6f2":"## \u521b\u5efa\u5220\u9664\u65b0\u7684\u884c\u5217\nprint(\"\\n A column is created by assigning it in relation\\n\",\"-\"*75,sep=\"\")\ndf[\"new\"]=df[\"x\"]+df[\"z\"]\ndf[\"new(sum of x and z)\"]=df[\"x\"]+df[\"z\"]\nprint(df)\n","a8bf0aef":"### df.drop \u5220\u9664\u5217\nprint(\"\\nA column is dropped by using df.drop() mehtod \\n\",\"-\"*30,sep=\"\")\ndf=df.drop(\"x\",axis=1)## 1 \u4e3a\u5782\u76f4,0\u4e3a\u6c34\u5e73\nprint(df)","8a498d1e":"## \u5220\u9664\u7279\u5b9a\u7684\u884c\nprint(\"\\n\u5220\u9664 B\u884c\\n\",\"-\"*30,sep=\"\")\ndf1=df.drop(\"B\")\nprint(df1)","2d4760af":"df","cadd6c1a":"df.drop(\"X\",axis=1,inplace=True)## \u6539\u53d8\u539f\u6765\u7684\u7ed3\u6784\nprint(df)","e09296a6":"## matplotlib\nimport matplotlib.pyplot as plt\npeople=[\"Ann\",\"Brandon\",\"chen\",\"DAvid\",\"emily\",\"farook\"]\nage=[21,12,12,45,34,65]\nweight=[22,43,56,54,67,87]\nheight=[167,123,176,145,134,177]\nplt.scatter(age,height)\nplt.show()","bba71dcc":"## \u4f18\u5316\nplt.figure(figsize=(8,6))\nplt.title(\"plot of Age vs. Weight(kg)\",fontsize=20)\nplt.xlabel(\"Age\",fontsize=16)\nplt.ylabel(\"Weight(kg)\",fontsize=16)\nplt.grid(True)\nplt.ylim(0,100)\nplt.xticks([i*5 for i in range(12)],fontsize=15)## \u81ea\u5b9a\u4e49\u5750\u6807\u8f74\nplt.yticks(fontsize=15)\n#\nplt.scatter(x=age,y=weight,c=\"orange\",s=150,edgecolors=\"k\")\nplt.text(x=25,y=80,s=\"Weight after \\n18-20 years of age\",fontsize=15)\nplt.vlines(x=20,ymin=0,ymax=80,linestyles=\"dashed\",color=\"red\",lw=3)\nplt.legend([\"weight in kg\"],loc=1,fontsize=12)\nplt.show()","31357f46":"## \u7edf\u8ba1\u6307\u6807\u2014\u2014\u96c6\u4e2d\u8d8b\u52bf\u4e0e\u5206\u5e03\n## \u5e73\u5747\u503c\u7528\u4e8e\u5bf9\u79f0\u6570\u636e\u7684\u8f83\u597d\u5ea6\u91cf\uff0c\u4e2d\u503c\u662f\u5bf9\u504f\u659c\u5206\u5e03\u6570\u636e\u8f83\u597d\u7684\u5ea6\u91cf\uff0c\n## \u65b9\u5dee\uff1a\u662f\u4e0e\u5e73\u5747\u503c\u504f\u5dee\u7684\u5e73\u65b9\u7684\u5e73\u5747\u503c\uff0c\u504f\u5dee\u7684\u5e73\u65b9\u53ef\u786e\u4fdd\u8d1f\u504f\u5dee\u548c\u6b63\u504f\u5dee\u4e0d\u4f1a\u4e92\u76f8\u62b5\u6d88\n## \u6807\u51c6\u5dee\uff1a\u7531\u4e8e\u65b9\u5dee\u662f\u901a\u8fc7\u5bf9\u4e0e\u5e73\u5747\u503c\u7684\u8ddd\u79bb\u5e73\u65b9\u800c\u4ea7\u751f\u7684\uff0c\u56e0\u6b64\u5b83\u7684\u5355\u4f4d\u4e0e\u539f\u59cb\u6570\u636e\u7684\u5355\u4f4d\u4e0d\u5339\u914d\uff0c\u6807\u51c6\u5dee\u662f\n## \u6062\u590d\u540c\u7b49\u5355\u4f4d\u7684\u6570\u5b66\u6280\u5de7\uff0c\u5b83\u662f\u65b9\u5dee\u7684\u6b63\u5e73\u65b9\u6839\u3002\n## \u6982\u7387\u5206\u5e03\uff1a\u63cf\u8ff0\u83b7\u5f97\u968f\u673a\u53d8\u91cf\u5047\u5b9a\u53ef\u80fd\u503c\u5f97\u53ef\u80fd\u6027\u5f97\u51fd\u6570\uff0c","57c21e1a":"## DataFrame \u5f97\u57fa\u672c\u63cf\u8ff0\u6027\u7edf\u8ba1\u8ba1\u7b97\nx=np.random.randint(1,10)# \u751f\u6210\u4e00\u4e2a\u6570\nprint(x)","8862d690":"## \u751f\u6210\u6570\u7ec41\u4e2a\nx=np.random.randint(1,10,size=1)\nprint(x)","449a00ed":"x=50+50*np.random.random(size=15)\nx=x.round(decimals=2)# \u4fdd\u75592\u4f4d\u5c0f\u6570\u70b9\nprint(x)","c73241e0":"x=np.random.rand(3,3)\nprint(x)","bf49bfd3":"## \u4e8c\u9879\u5206\u5e03\uff0c\u63b7\u8272\u5b50\nq=np.random.binomial(10,0.6,size=8)## size=8 ,8\u6b21\nprint(q)","15031f88":"plt.figure(figsize=(7,4))\nplt.title(\"number of successes in coin toss\",fontsize=20)\nplt.bar(x=np.arange(1,9),height=q)\nplt.xlabel(\"experiment number\",fontsize=16)\nplt.ylabel(\"number of successes\",fontsize=16)\nplt.show()","8fba17d7":"### \u6b63\u6001\u5206\u5e03\u4e0e\u76f4\u65b9\u56fe\nx=np.random.normal()\nprint(x)","e3375f73":"heights=np.random.normal(loc=155,scale=10,size=100)## \u5e73\u5747\u503c155\uff0c\u6807\u51c6\u5dee10\uff0cscale\u6837\u672c\u4e2a\u6570\nplt.figure(figsize=(7,5))\nplt.hist(heights,color=\"orange\",edgecolor=\"k\")\nplt.title(\"Histogram of teen aged student's height\",fontsize=16)\nplt.xlabel(\"Height in cm\",fontsize=15)\nplt.xticks(fontsize=15)\nplt.xticks(fontsize=15)\nplt.show()","0537ae6f":"## DataFrame\u8ba1\u7b97\u63cf\u8ff0\u6027\u7edf\u8ba1\npeople_dict={\"people\":people,\"age\":age,\"Weight\":weight,\"Height\":height}\npeople_df=pd.DataFrame(data=people_dict)\npeople_df","f748fd18":"people_df.shape","9e0fa09b":"people_df[\"age\"].count()","1d2022a7":"people_df[\"age\"].sum()","975c818d":"print(people_df[\"age\"].mean())","635afc34":"people_df[\"Weight\"].median()","4f9359ba":"people_df[\"Height\"].max()","40810b23":"people_df[\"Weight\"].std()## \u6807\u51c6\u5dee","cb5afa55":"### \u76f4\u63a5\u8ba1\u7b9775% \u5904\u7684\u5e74\u9f84\u5206\u5e03\nnp.percentile(people_df[\"age\"],75)","82c2fd82":"people_df.describe()","fe1f6ec8":"### DF \u7684\u5185\u7f6e\u7ed8\u56fe\u5de5\u5177\npeople_df[\"Weight\"].hist()\nplt.show()","8b833dc9":"people_df.plot.scatter(\"Weight\",\"Height\",s=150,c=\"orange\",edgecolor=\"k\")\nplt.grid(True)\nplt.title(\"weight vs. height scatter plot\",fontsize=18)\nplt.xlabel(\"weight\",fontsize=15)\nplt.ylabel(\"height in cm\",fontsize=15)\nplt.show()","1f9db503":"!pip install xlrd","fee7d181":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\ndf=pd.read_excel(\"..\/input\/samplesuperstore\/Sample - Superstore -Random.xls\")\ndf.head(2)","62dc465d":"df.drop(\"Row ID\",axis=1,inplace=True)","4bc41b5a":"df.shape","b37b3db1":"## \u9009\u53d6DataFrame\u5b50\u96c6\n##loc \u65b9\u6cd5\u6309\u5217\u540d\u548c\u884c\u7d22\u5f15\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u7d22\u5f15\ndf_subset=df.loc[[i for i in range(5,10)],\n                [\"Customer ID\",\"Customer Name\",\"City\",\"Postal Code\",\"Sales\"]]\n## 5-9\u884c\ndf_subset","218e9ae7":"## \u5b50\u96c6\u76f4\u63a5\u8ba1\u7b97\ndf_subset=df.loc[[i for i in range(100,200)],[\"Sales\",\"Profit\"]]\ndf_subset.head(2)","0fc909eb":"df_subset.describe()","ebd77922":"## unique \u63d0\u53d6\u552f\u4e00\u503c\ndf[\"State\"].unique()## \u5dde\u7edf\u8ba1","e15408b5":"df[\"Country\"].unique()","495f3c23":"df[\"City\"].unique()","03dd50ad":"## \u8ba1\u7b97\u6240\u6709\u6240\u6709\u552f\u4e00\u503c\u7684\u6570\u91cf\ndf[\"State\"].nunique()","b2e3b7a2":"df[\"City\"].nunique()","0bbb3a65":"## \u6761\u4ef6\u9009\u62e9\u4e0e\u5e03\u5c14\u8fc7\u6ee4\ndf_subset=df.loc[[i for i in range(10)],[\"Ship Mode\",\"State\",\"Sales\"]]##\u884c10\uff0c\u5217\u63d0\u53d6\u7528\u540d\ndf_subset","30adcbb1":"df_subset[df_subset[\"Sales\"]>100]","f4640354":"df_subset[(df_subset[\"State\"]==\"Kentucky\")&(df_subset[\"Sales\"]>100) ]","fef324c0":"df_subset[(df_subset[\"State\"]==\"Kentucky\")|(df_subset[\"Sales\"]>100) ]","a9bf6697":"## \u8bbe\u5b9a\u548c\u91cd\u7f6e\u7d22\u5f15\nmatrix_data=np.matrix(\"22,33,140;42,70,149;30,73,128;35,89,180;25,73,184\")\nrow_labels=[\"A\",\"B\",\"C\",\"D\",\"E\"]\ncolumn_heading=[\"age\",\"height\",\"weight\"]","3114c5e1":"df1=pd.DataFrame(data=matrix_data,index=row_labels,columns=column_heading)\nprint(\"\\nThe Dataframe\",\"-\"*20,sep=\"\")\nprint(df1)","960f85a9":"## \u91cd\u7f6e\u7d22\u5f15\nprint(\"\\n\u91cd\u7f6e\u7d22\u5f15\\n\",\"-\"*10,sep=\"\")\ndf1.reset_index()","a9d9b56d":"## drop\u8bbe\u4e3aTrue\u91cd\u7f6e\u7d22\u5f15\ndf1.reset_index(drop=True)","85678f98":"## \u6dfb\u52a0\u65b0\u5217\u4ee5\u53ca\u5185\u5bb9\ndf1[\"profession\"]=\"student teacher engineer doctor nurse\".split()\ndf1","fb9aeadb":"## \u5c06\u7279\u5b9a\u5217\u5b9a\u4e3a\u7d22\u5f15\ndf1.set_index('age')","30b865e8":"## \u5206\u7ec4\uff1a \u805a\u5408\u3001\u8f6c\u5316\u3001\u8fc7\u6ee4\ndf_subset=df.loc[[i for i in range(10)],[\"Ship Mode\",\"State\",\"Sales\"]]\nbystate=df_subset.groupby(\"State\")\n# bystate.head()\ndf_subset.head()","f8f3bb4a":"bystate.mean()","91aa0245":"bystate.sum()","65df7573":"## \u7279\u5b9a\u5dde\u5b50\u96c6\nbystate.describe().loc[\"California\"]","02d2ce39":"pd.DataFrame(bystate.describe().loc[\"California\"])","3a1b7ff7":"df_subset.groupby(\"Ship Mode\").describe().loc[[\"Second Class\",\"Standard Class\"]]","9b5b5984":"bystatecity=df.groupby([\"State\",\"City\"])\npd.DataFrame(bystatecity.describe()[\"Sales\"])","7a073217":"## \u5904\u7406\u7f3a\u5931\u503c\u3001\u68c0\u6d4b\u5f02\u5e38\u503c","164d1b2c":"df_missing=pd.read_excel(\"..\/input\/samplesuperstore2\/Sample - Superstore.xls\",sheet_name=\"Missing\")","608f5456":"df_missing","27f18f7d":"df_missing.isnull()","6d2625de":"## \u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u7f3a\u5931\u503c\nfor c in df_missing.columns:\n    miss=df_missing[c].isnull().sum()\n    if miss>0:\n        print(\"{}\uff1a \u6709{}\u7f3a\u5931\u503c\".format(c,miss))\n    else:\n        print(\"{}\uff1a\u65e0\u7f3a\u5931\u503c\".format(c))","6bf69b4b":"## fillna\u586b\u5145\ndf_missing.fillna(\"fill\")","d62d5906":"## \u6307\u5b9a\u5217\u7684\u586b\u5145\ndf_missing[[\"Customer\",\"Product\"]].fillna(\"FILL\")","4944ea89":"## \u524d\u5411\u586b\u5145\ndf_missing[\"Sales\"].fillna(method=\"ffill\")","21e74b74":"## \u540e\u5411\u586b\u5145\ndf_missing[\"Sales\"].fillna(method=\"bfill\")","5d5a588c":"## \u5e73\u5747\u503c\u586b\u5145\ndf_missing[\"Sales\"].fillna(df_missing[\"Sales\"].mean())","6c7e300b":"## dropna \u5220\u9664\u7f3a\u5931\u503c\uff1aaxis=0\u4e3a\u884c\uff0c1\u4e3a\u5217\ndf_missing.dropna(axis=0)","3f72c541":"## \u5217\ndf_missing.dropna(axis=1)","9b743a83":"df_missing.dropna(axis=1,thresh=10)## thresh\u53ea\u8981\u6709\u975e\u7f3a\u5931\u503c \u5c31\u4e0d\u4f1a\u5220\u9664","ac02155d":"##\u4f60\u5f02\u5e38\u503c \u7684\u68c0\u6d4b\ndf_sample=df[[\"Customer Name\",\"State\",\"Sales\",\"Profit\"]].sample(n=50).copy()\ndf_sample[\"Sales\"].iloc[5]=-1000\ndf_sample[\"Sales\"].iloc[15]=500","ca38181b":"df_sample.plot.box()\nplt.title(\"Boxplot of sales and profiit\",fontsize=15)\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15)\nplt.grid(True)","379bd1de":"## \u5408\u5e76\u6570\u636e\uff1aconcat\\merge\\join\ndf_1=df[[\"Customer Name\",\"State\",\"Sales\",\"Profit\"]].sample(n=4).copy()\ndf_2=df[[\"Customer Name\",\"State\",\"Sales\",\"Profit\"]].sample(n=4)\ndf_3=df[[\"Customer Name\",\"State\",\"Sales\",\"Profit\"]].sample(n=4)","2a06b81f":"df_cat1=pd.concat([df_1,df_2,df_3],axis=0)\ndf_cat1","1c8ea51f":"## merge\u901a\u8fc7\u516c\u5171\u952e\ndf_1=df[[\"Ship Date\",\"Ship Mode\",\"Customer Name\"]][0:4]\ndf_1","6c0c2ad3":"df_2=df[[\"Customer Name\",\"Product Name\",\"Quantity\"]][0:4]\ndf_2","ad4a094a":"pd.merge(df_1,df_2,on=\"Customer Name\",how=\"inner\")","d013544b":"## \u5220\u9664\u91cd\u590d\u9879\npd.merge(df_1,df_2,on=\"Customer Name\",how=\"inner\").drop_duplicates()","d0a2c6c3":"##\u5916\u90e8\u8fde\u63a5\ndf_3=df[[\"Customer Name\",\"Product Name\",\"Quantity\"]][2:6]\ndf_3","082c569a":"pd.merge(df_1,df_3,on=\"Customer Name\",how=\"inner\").drop_duplicates()","bf4d6f64":"##13\u5916\u90e8\npd.merge(df_1,df_3,on=\"Customer Name\",how=\"outer\").drop_duplicates()","b9c2145c":"## join\ndf_1=df[[\"Customer Name\",\"Ship Date\",\"Ship Mode\"]][0:4]\ndf_1.set_index([\"Customer Name\"],inplace=True)\ndf_1","97cd243e":"df_2=df[[\"Customer Name\",\"Product Name\",\"Quantity\"]][2:6]\ndf_2.set_index([\"Customer Name\"],inplace=True)\ndf_2","a635afd1":"## \u5de6\u8fde\u63a5\ndf_1.join(df_2,how=\"left\").drop_duplicates()","f652cdea":"## \u53f3\u8fde\u63a5\ndf_1.join(df_2,how=\"right\").drop_duplicates()","582b9a45":"## sample\u968f\u673a\u62bd\u6837\ndf.sample(n=5)","4fbd748e":"df.sample(frac=0.1).head(3)# \u62bd\u68370.1%\u7684df","a651c6b0":"## value_counts\ndf[\"Customer Name\"].value_counts()[:10]##\u51fa\u73b0\u9891\u6b21\u6700\u591a\u7684\u524d10 \u5ba2\u6237","51862bde":"## \u6570\u636e\u8868\u900f\u89c6\u529f\u80fd\ndf_sample=df.sample(n=100)\ndf_sample.pivot_table(values=[\"Sales\",\"Quantity\",\"Profit\"],index=[\"Region\",\"State\"],aggfunc=\"mean\")","580e5e39":"## \u6309\u5217\u503c\u6392\u5e8f\ndf_sample=df[[\"Customer Name\",\"State\",\"Sales\",\"Quantity\"]].sample(n=15)\ndf_sample","3f54f568":"df_sample.sort_values(by=\"Sales\")","a13b5b4b":"df_sample.sort_values(by=[\"State\",\"Sales\"])","70ca15d7":"## apply\ndef categorize_sales(price):\n    if price<50:\n        return \"Low\"\n    elif price<200:\n        return \"Medium\"\n    else:\n        return \"High\"","bf584184":"df_sample=df[[\"Customer Name\",\"State\",\"Sales\"]].sample(n=100)\ndf_sample.head(10)","caeabeb3":"df_sample[\"sales price category\"]=df_sample[\"Sales\"].apply(categorize_sales)\ndf_sample.head(2)","21f1b399":"df_sample[\"customer name length\"]=df_sample[\"Customer Name\"].apply(len)\ndf_sample.head(10)","83b59e47":"## pandas \u5b9e\u7528\u65b9\u6cd5","590316f4":"## \u6df1\u5165\u6570\u636e\u6574\u7406","93d70ba0":"## 2\u3001 pandas \u4e2d\u7684DataFrame","179a1d33":"## Numpy pandas \u7684\u7edf\u8ba1\u4e0e\u53ef\u89c6\u5316","fbef756e":"## 1\u3001Numpy \u6570\u7ec4"}}