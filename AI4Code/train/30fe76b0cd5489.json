{"cell_type":{"4aeae074":"code","a545979d":"code","d60b7738":"code","238017bb":"code","20d9157a":"code","d830e107":"code","b5b9046c":"code","f0ffbe96":"code","35685ba5":"code","9d176206":"code","165bf7a7":"code","8e7083f2":"code","d499add9":"code","0035a5ad":"code","759c90be":"code","aace5569":"code","cee91a98":"code","4b87f59b":"code","6ccd7403":"code","be4201d0":"code","adc90aa1":"code","8f7247a6":"code","7f82bec0":"markdown","e5ec7643":"markdown","664d52be":"markdown","83c51441":"markdown","a5669b10":"markdown","be3325b3":"markdown","c653784c":"markdown","0ea73173":"markdown","b11217dd":"markdown","41cd475d":"markdown","beaea417":"markdown","38b1b5e0":"markdown"},"source":{"4aeae074":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a545979d":"times_data = pd.read_csv(\"..\/input\/world-university-rankings\/timesData.csv\")\n# Let see top 15 university\ntimes_data.head(15)","d60b7738":"times_data.info()\n","238017bb":"times_data.columns.unique()","20d9157a":"times_data.isnull().any()","d830e107":"times_data.isnull().value_counts().sum()","b5b9046c":"import missingno as msno","f0ffbe96":"msno.bar(times_data)","35685ba5":"msno.matrix(times_data)","9d176206":"df = times_data.iloc[:100,:]\n\nimport plotly.graph_objs as go\n\ntrace1 = go.Scatter(\n    x = df.world_rank,\n    y = df.citations,\n    mode = \"lines+markers\",\n    name = \"citations\",\n    marker = dict(color = 'rgba(153, 0, 76, 0.8)'),\n    text = df.university_name)\n\ntrace2 = go.Scatter(\n    x = df.world_rank,\n    y = df.teaching,\n    mode = \"lines+markers\",\n    name = \"teaching\",\n    marker = dict(color = 'rgba(0, 102, 102, 0.8)'),\n    text = df.university_name)\n\n\ndata = [trace1,trace2]\nlayout = dict(title = \"Citation and Teaching Score of Top 100 University\",\n             xaxis = dict(title=\"World Rank\",ticklen = 5,zeroline=False))\n\nfig = dict(data = data, layout = layout)\niplot(fig)","165bf7a7":"df = times_data.iloc[:100,:]\n\nimport plotly.graph_objs as go\n\ntrace1 = go.Scatter(\n    x = df.world_rank,\n    y = df.research,\n    mode = \"lines+markers\",\n    name = \"research\",\n    marker = dict(color = 'rgba(153, 0, 76, 0.8)'),\n    text = df.university_name)\n\ntrace2 = go.Scatter(\n    x = df.world_rank,\n    y = df.teaching,\n    mode = \"lines+markers\",\n    name = \"teaching\",\n    marker = dict(color = 'rgba(0, 102, 102, 0.8)'),\n    text = df.university_name)\n\n\ndata = [trace1,trace2]\nlayout = dict(title = \"Research and Teaching Score of Top 100 University\",\n             xaxis = dict(title=\"World Rank\",ticklen = 5,zeroline=False))\n\nfig = dict(data = data, layout = layout)\niplot(fig)","8e7083f2":"df = times_data.iloc[:100,:]\n\nimport plotly.graph_objs as go\n\ntrace1 = go.Scatter(\n    x = df.world_rank,\n    y = df.student_staff_ratio,\n    mode = \"lines+markers\",\n    name = \"student_staff_ratio\",\n    marker = dict(color = 'rgba(153, 0, 76, 0.8)'),\n    text = df.university_name)\n\ntrace2 = go.Scatter(\n    x = df.world_rank,\n    y = df.citations,\n    mode = \"lines+markers\",\n    name = \"citations\",\n    marker = dict(color = 'rgba(0, 102, 102, 0.8)'),\n    text = df.university_name)\n\n\ndata = [trace1,trace2]\nlayout = dict(title = \"Citation and student_staff_ratio Score of Top 100 University\",\n             xaxis = dict(title=\"World Rank\",ticklen = 5,zeroline=False))\n\nfig = dict(data = data, layout = layout)\niplot(fig)","d499add9":"df2013 = times_data[times_data.year == 2013].iloc[:100,:]\ndf2014 = times_data[times_data.year == 2014].iloc[:100,:]\ndf2015 = times_data[times_data.year == 2015].iloc[:100,:]    \ndf2016 = times_data[times_data.year == 2016].iloc[:100,:]\n\ntrace1 = go.Scatter(\n    x = df2013.world_rank,\n    y = df2013.citations,\n    mode = \"markers\",\n    name = \"2013\",\n    marker = dict(color = 'rgba(205,102,34,0.8)'),\n    text = df2013.university_name)\ntrace2 = go.Scatter(\n    x = df2014.world_rank,\n    y = df2014.citations,\n    mode = \"markers\",\n    name = \"2014\",\n    marker = dict(color = 'rgba(26,47,185,0.8)'),\n    text = df2014.university_name)\ntrace3 = go.Scatter(\n    x = df2015.world_rank,\n    y = df2015.citations,\n    mode = \"markers\",\n    name = \"2015\",\n    marker = dict(color = 'rgba(174,26,185,0.8)'),\n    text = df2015.university_name)\ntrace4 = go.Scatter(\n    x = df2016.world_rank,\n    y = df2016.citations,\n    mode = \"markers\",\n    name = \"2016\",\n    marker = dict(color = 'rgba(242,115,19,0.8)'),\n    text = df2016.university_name)\ndata = [trace1,trace2,trace3,trace3]\n\nlayout = dict(title = \"Citation Versus World Rank of top 100 Universies with 2013,2014,2015 and 2016\",\n         xaxis = dict(title = \"World Rank\",ticklen = 5, zeroline = False),\n         yaxis = dict(title = \"Citation\",ticklen = 5, zeroline = False))\nfig = dict(data = data, layout = layout)\niplot(fig)","0035a5ad":"trace1 = go.Scatter(\n    x = df2013.world_rank,\n    y = df2013.teaching,\n    mode = \"lines+markers\",\n    name = \"2013\",\n    marker = dict(color = 'rgba(205,102,34,0.8)'),\n    text = df2013.university_name)\ntrace2 = go.Scatter(\n    x = df2014.world_rank,\n    y = df2014.teaching,\n    mode = \"lines+markers\",\n    name = \"2014\",\n    marker = dict(color = 'rgba(26,47,185,0.8)'),\n    text = df2014.university_name)\ntrace3 = go.Scatter(\n    x = df2015.world_rank,\n    y = df2015.teaching,\n    mode = \"lines+markers\",\n    name = \"2015\",\n    marker = dict(color = 'rgba(174,26,185,0.8)'),\n    text = df2015.university_name)\ntrace4 = go.Scatter(\n    x = df2016.world_rank,\n    y = df2016.teaching,\n    mode = \"lines+markers\",\n    name = \"2016\",\n    marker = dict(color = 'rgba(242,115,19,0.8)'),\n    text = df2016.university_name)\ndata = [trace1,trace2,trace3,trace3]\n\nlayout = dict(title = \"Teaching Versus World Rank of top 100 Universies with 2013,2014,2015 and 2016\",\n         xaxis = dict(title = \"World Rank\",ticklen = 5, zeroline = False),\n         yaxis = dict(title = \"Citation\",ticklen = 5, zeroline = False))\nfig = dict(data = data, layout = layout)\niplot(fig)","759c90be":"df2016 = times_data[times_data.year == 2016].iloc[:5,:]\n\ntrace1 = go.Bar(\n    x = df2016.university_name,\n    y = df2016.citations,\n    name = \"citations\",\n    marker = dict(color = 'rgba(111,7,0, 1)',\n                 line = dict(color='rgb(0,0,0)',width=1.5)),\n    text = df2016.country)\n\ntrace2 = go.Bar(\n    x = df2016.university_name,\n    y = df2016.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(0,0,153, 1)',\n                 line = dict(color='rgb(0,0,0)',width=1.5)),\n    text = df2016.country)\ndata = [trace1,trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n","aace5569":"df2016 = times_data[times_data.year == 2016].iloc[:10,:]\n\ntrace1 = go.Bar(\n    x = df2016.university_name,\n    y = df2016.citations,\n    name = \"citations\",\n    marker = dict(color = 'rgba(111,7,0, 1)',\n                 line = dict(color='rgb(0,0,0)',width=1.5)),\n    text = df2016.country)\n\ntrace2 = go.Bar(\n    x = df2016.university_name,\n    y = df2016.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(0,0,153, 1)',\n                 line = dict(color='rgb(0,0,0)',width=1.5)),\n    text = df2016.country)\ndata = [trace1,trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n","cee91a98":"df2016 = times_data[times_data.year == 2016].iloc[95:100,:]\n\ntrace1 = go.Bar(\n    x = df2016.university_name,\n    y = df2016.citations,\n    name = \"citations\",\n    marker = dict(color = 'rgba(111,7,0, 0.8)',\n                 line = dict(color='rgb(0,0,0)',width=1.5)),\n    text = df2016.country)\n\ntrace2 = go.Bar(\n    x = df2016.university_name,\n    y = df2016.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(0,0,153, 0.8)',\n                 line = dict(color='rgb(0,0,0)',width=1.5)),\n    text = df2016.country)\ndata = [trace1,trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n","4b87f59b":"df2016 = times_data[times_data.year == 2016].iloc[:5,:]\n\ntrace1 = {\n    'x': df2016.university_name,\n    'y': df2016.citations,\n    'name' : 'citation',\n    'type' : 'bar'\n};\n\ntrace2 = {\n    'x' : df2016.university_name,\n    'y' : df2016.teaching,\n    'name' : 'teaching',\n    'type' : 'bar'\n};\ndata = [trace1,trace2]\nlayout = {\n    'xaxis' : {'title':  'Top 5 Universities'},\n    'barmode' : 'relative',\n    'title' : 'Citations and Teaching of top 5 University in 2016'    \n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","6ccd7403":"df2016 = times_data[times_data.year == 2016].iloc[:10,:]\npie1 = df2016.num_students\npie1_list = [float(each.replace(',', '.')) for each in pie1]  # str(2,4) => str(2.4) = > float(2.4) = 2.4\nlabels = df2016.university_name\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Number Of Students Rates\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Universities Number of Students rates\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Students\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","be4201d0":"df2011 = times_data.student_staff_ratio[times_data.year == 2011]\ndf2012 = times_data.student_staff_ratio[times_data.year == 2012]\n\ntrace1 = go.Histogram(\n    x = df2011,\n    opacity = 0.75,\n    name = '2011',\n    marker = dict(color = 'rgba(185,16,4,0.6)'))\n\ntrace1 = go.Histogram(\n    x = df2012,\n    opacity = 0.8,\n    name = '2012',\n    marker = dict(color = 'rgba(4,40,185,0.6)'))\n\ndata = [trace1,trace2]\nlayout = go.Layout(barmode='overlay',\n                  title = \"Students-staff raito in 2011-2012\",\n                  xaxis = dict(title = 'student_staff_ratio'),\n                  yaxis = dict(title = 'Count'))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","adc90aa1":"x2016 = times_data.country[times_data.year == 2016]\nplt.subplots(figsize = (16,16))\nwordcloud = WordCloud(\n    background_color='black',\n    width = 512,\n    height = 384).generate(\" \".join(x2016))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","8f7247a6":"dataframe = times_data[times_data.year == 2015]\n\ntrace1 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.teaching,\n    name = \"Teaching\",\n    marker = dict(color = 'rgba(11,23,185,0.8)'),)\n\n\ntrace1 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.income,\n    name = \"Income\",\n    xaxis = \"x2\",\n    yaxis = \"y2\",\n    marker = dict(color = 'rgba(11,23,185,0.8)'),)\n\ndata = [trace1,trace2]\nlayout = go.Layout(\n    xaxis2 = dict(\n        domain=[0.6,0.95],\n        anchor = \"y2\",\n        \n \n    ),\n    yaxis2 = dict(\n        domain=[0.6,0.95],\n        anchor = \"x2\",\n  \n    ),\n    title = \"Income and Teaching By Universities\"\n    \n)\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","7f82bec0":"<a id = \"7\"><\/a><br>\n# Histogram","e5ec7643":"<a id = \"3\"><\/a><br>\n# Teaching And Citation Score For top 100 University","664d52be":"# Introduction\n## I tried to compare certain parameters of the visualization of university rankings in this data set.I did the visualization with the plotly library, Some comparisons did not go well due to certain deficiencies in the data set.\nThe sites that I follow the university rankings up to date are respectively :https:\/\/www.topuniversities.com\/university-rankings\/world-university-rankings\/2021 and  https:\/\/www.timeshighereducation.com\/world-university-rankings\n### You can get the most accurate results by examining the top ten universities in the data set.\n### You can ask any question, please feel free to use my codes.\n\n\n\n\n\n<br>Content:\n1. [Loading Data and Explanation of Features](#1)\n   * Exploring Data\n1. [Missingno](#2)\n   * Missing Value Detect and Visualize\n1. [Line Chart for Visualize Data](#3)\n   * Citations vs Teaching\n   * Research vs Teaching\n   * Student Staff Ratio vs Citations\n1. [Visualize with Scatter Chart](#4)\n   * Citation and World Rank for 2013-2014-2015-2016 years\n   * Teaching and World Rank for 2013-2014-2015-2016 years\n1. [Bar Chart](#5)\n   * Top 5 University Citation and Teaching Score in 2016\n   * Top 10 University Citation and Teaching Score in 2016\n   * Between 95-100 Universities Citation and Teaching Score in 2016\n   * Bar Chart 2 (Relative)\n1. [Pie Chart](#6)\n   * Top 10 University Number of Students Comparison in 2016 with Pie Chart\n1. [Histogram](#7)\n   * Student Ratio Histogram\n1. [WordCloud](#8)\n   * 2016 University Count by Country showing this with WordCloud\n1. [Inset Plot](#9)","83c51441":"<a id = \"8\"><\/a><br>\n\n# WordCloud","a5669b10":"<a id = \"5\"><\/a><br>\n\n# Bar Chart","be3325b3":"<a id = \"6\"><\/a><br>\n\n# Pie Chart","c653784c":"# Loading Data and Explanation of Features\n<a id = \"1\"><\/a><br>","0ea73173":"<a id = \"9\"><\/a><br>\n\n# Inset Plot","b11217dd":"<a id = \"2\"><\/a><br>\n## Let see Missing values and visualize that values","41cd475d":"# Research And Teaching Score For top 100 University","beaea417":"##  Bar Chart 2","38b1b5e0":"<a id = \"4\"><\/a><br>\n\n# Visualize with Scatter Chart"}}