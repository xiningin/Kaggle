{"cell_type":{"6df49ffb":"code","2a7dab41":"code","36e2d086":"code","cdfd55ba":"code","1aeb05b0":"code","3570d42d":"code","789d0a64":"code","998b2e93":"code","5ba912c0":"code","20a0f2c0":"code","e8356f49":"code","de9d7720":"code","8fde7b5f":"code","b7ae3118":"code","30198ce3":"code","00f6cf26":"code","71e4fc1d":"code","f2cbae83":"code","f3cacf52":"code","adbff241":"code","d2454a9d":"code","547556f8":"code","6d4392d7":"markdown","df398f4a":"markdown","ee521f30":"markdown","df485a82":"markdown","e482e5fd":"markdown","b07767fd":"markdown","f9214d83":"markdown","a2dce1c8":"markdown","db4033f8":"markdown","16abbc80":"markdown","6e28e01f":"markdown","76f27c8e":"markdown","e1eff414":"markdown","ee31e81f":"markdown","7f9c11b0":"markdown","d58558de":"markdown","fb12a178":"markdown","bce90bfa":"markdown","888baf5f":"markdown","c879571d":"markdown","398a74e5":"markdown","a10c2221":"markdown","50726be7":"markdown","ffacf18a":"markdown","0e578bbd":"markdown","f18076b2":"markdown"},"source":{"6df49ffb":"!pip install toloka-kit==0.1.8\n!pip install crowd-kit==0.0.4\n!pip install pandas\n!pip install ipyplot\n\nimport datetime\nimport itertools\nimport sys\nimport time\nimport logging\n\nimport ipyplot\nimport pandas\n\nimport toloka.client as toloka\nimport toloka.client.project.template_builder as tb\nfrom crowdkit.aggregation import NoisyBradleyTerry  \n\nlogging.basicConfig(\n    format='[%(levelname)s] %(name)s: %(message)s',\n    level=logging.INFO,\n    stream=sys.stdout,\n)","2a7dab41":"toloka_client = toloka.TolokaClient(input(\"Enter your token:\"), 'PRODUCTION')  # Or switch to 'SANDBOX'\nprint(toloka_client.get_requester())","36e2d086":"project = toloka.Project(\n    assignments_issuing_type='AUTOMATED',\n    public_name='Which icon do you like more?',\n    public_description='Look at the icons and decide which one you like more.',\n)","cdfd55ba":"main_interface = tb.SideBySideLayoutV1(\n    items=[\n        tb.ImageViewV1(url=tb.InputData(path='image_left'), full_height=True),\n        tb.ImageViewV1(url=tb.InputData(path='image_right'), full_height=True),\n    ],\n    controls=tb.ButtonRadioGroupFieldV1(\n        data=tb.OutputData(path='result'),\n        label='Which icon do you like more?',\n        options=[\n            tb.GroupFieldOption(label='Left', value='LEFT'),\n            tb.GroupFieldOption(label='Right', value='RIGHT'),\n            tb.GroupFieldOption(label='Loading error', value='ERROR'),\n        ]\n    )\n)\n\nhot_keys_plugin = tb.HotkeysPluginV1(\n    key_0=tb.SetActionV1(data=tb.OutputData(path='result'), payload='ERROR'),\n    key_1=tb.SetActionV1(data=tb.OutputData(path='result'), payload='LEFT'),\n    key_2=tb.SetActionV1(data=tb.OutputData(path='result'), payload='RIGHT'),\n)\n\nproject_interface = toloka.project.view_spec.TemplateBuilderViewSpec(\n    config=tb.TemplateBuilder(\n        view=main_interface,\n        plugins=[hot_keys_plugin],\n    )\n)","1aeb05b0":"input_specification = {\n    'image_left': toloka.project.field_spec.UrlSpec(),\n    'image_right': toloka.project.field_spec.UrlSpec(),\n}\noutput_specification = {'result': toloka.project.field_spec.StringSpec()}\n\nproject.task_spec = toloka.project.task_spec.TaskSpec(\n    input_spec=input_specification,\n    output_spec=output_specification,\n    view_spec=project_interface,\n)","3570d42d":"project.public_instructions = \"\"\"<p>Look at the icons and decide which one you like more.<\/p>\n<p>Select \"<b>Left<\/b>\" if you like the icon on the left more.<\/p>\n<p>Select \"<b>Right<\/b>\" if you like the icon on the right more.<\/p>\n<p>Select \"<b>Loadinf error<\/b>\" if the picture failed to load.<\/p>\"\"\"","789d0a64":"project = toloka_client.create_project(project)","998b2e93":"pool = toloka.Pool(\n    project_id=project.id,\n    # Give the pool any convenient name. You are the only one who will see it.\n    private_name='Which icon do you like more',\n    may_contain_adult_content=False,\n    # Set the price per task page.\n    reward_per_assignment=0.01,\n    will_expire=datetime.datetime.utcnow() + datetime.timedelta(days=365),\n    # Time given to complete a task suite\n    assignment_max_duration_seconds=600,\n)","5ba912c0":"pool.filter = toloka.filter.Languages.in_('EN')","20a0f2c0":"pool.quality_control.add_action(\n    collector=toloka.collectors.AnswerCount(),\n    conditions=[toloka.conditions.AssignmentsAcceptedCount == 1],\n    action=toloka.actions.RestrictionV2(\n        scope=toloka.user_restriction.UserRestriction.PROJECT,\n        duration=3,\n        duration_unit='DAYS',\n        private_comment='No need more answers from this performer',\n    )\n)","e8356f49":"pool.defaults = toloka.Pool.Defaults(default_overlap_for_new_task_suites=10)","de9d7720":"pool.set_mixer_config(\n    real_tasks_count=1,\n    golden_tasks_count=0,\n    training_tasks_count=0\n)","8fde7b5f":"pool = toloka_client.create_pool(pool)","b7ae3118":"!curl https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/toloka_logos.tsv --output dataset.tsv\ndataset = pandas.read_csv('dataset.tsv', sep='\\t')\nwith pandas.option_context(\"max_colwidth\", 80):\n    print(dataset)","30198ce3":"dataset = pandas.DataFrame(itertools.combinations(dataset['url'], 2), columns=['image_left', 'image_right'])\nwith pandas.option_context(\"max_colwidth\", 70):\n    display(dataset)","00f6cf26":"tasks = [\n    toloka.Task(\n        pool_id=pool.id,\n        input_values={\n            'image_left': row['image_left'],\n            'image_right': row['image_right'],\n        }\n    )\n    for i, row in dataset.iterrows()\n]","71e4fc1d":"created_tasks = toloka_client.create_tasks(tasks, allow_defaults=True)\nprint(len(created_tasks.items))","f2cbae83":"pool = toloka_client.open_pool(pool.id)\nprint(pool.status)","f3cacf52":"pool_id = pool.id\n\ndef wait_pool_for_close(pool_id, minutes_to_wait=1):\n    sleep_time = 60 * minutes_to_wait\n    pool = toloka_client.get_pool(pool_id)\n    while not pool.is_closed():\n        op = toloka_client.get_analytics([toloka.analytics_request.CompletionPercentagePoolAnalytics(subject_id=pool.id)])\n        op = toloka_client.wait_operation(op)\n        percentage = op.details['value'][0]['result']['value']\n        print(\n            f'   {datetime.datetime.now().strftime(\"%H:%M:%S\")}\\t'\n            f'Pool {pool.id} - {percentage}%'\n        )\n        time.sleep(sleep_time)\n        pool = toloka_client.get_pool(pool.id)\n    print('Pool was closed.')\n\nwait_pool_for_close(pool_id)","adbff241":"answers = []\n\nfor assignment in toloka_client.get_assignments(pool_id=pool_id, status='ACCEPTED'):\n    for task, solution in zip(assignment.tasks, assignment.solutions):\n        answers.append(\n            [\n                task.input_values['image_left'],\n                task.input_values['image_right'],\n                solution.output_values['result'],\n                assignment.user_id\n            ]\n        )\n\nprint(f'answers count: {len(answers)}')","d2454a9d":"# Prepare dataframe\nanswers_df = pandas.DataFrame(answers, columns=['left', 'right', 'label', 'performer'])\n\nanswers_df = answers_df[(answers_df.label == 'LEFT') | (answers_df.label == 'RIGHT')]\nanswers_df['label'] = answers_df.apply(lambda row: row[row['label'].lower()], axis=1)\n\n# Run aggregation\nresult = NoisyBradleyTerry().fit_predict(answers_df).sort_values(ascending=False) \nprint(result)","547556f8":"images = result.index.values\nlabels = result.values\nipyplot.plot_images(\n    images=images,\n    labels=labels,\n    max_images=6,\n    img_width=200,\n)","6d4392d7":"Create pool tasks","df398f4a":"Our project is a pairwise comparison of two images. But our dataset contains just a flat list. Let's create a dataset that contains all possible pairs for comparison.","ee521f30":"Let's look at the ranking results","df485a82":"Write short and simple \tinstructions.","e482e5fd":"Set up [Quality control](https:\/\/yandex.com\/support\/toloka-requester\/concepts\/control.html). Set up the Submitted responses quality control rule. Restrict the number of responses per user to one. This way you will only get one answer from each user and thus ensure a variety of opinions.","b07767fd":"Wait until the pool is completed.","f9214d83":"Get responses\n\nWhen all the tasks are completed, look at the responses from performers.","a2dce1c8":"Create pool","db4033f8":"## Create a pool\nSpecify the [pool parameters.](https:\/\/yandex.com\/support\/toloka-requester\/concepts\/pool_poolparams.html)","16abbc80":"Select English-speaking performers","6e28e01f":"The performer will see the interface like this:\n\n<table  align=\"center\">\n  <tr>\n  <td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/4.ranking\/side_by_side_image_comparision\/img\/performer_interface.png?raw=true\"\n         alt=\"Photo examples\"  width=\"800\">\n  <\/td><\/tr>\n  <tr>\n  <td align=\"center\">\n    <b>Figure 1.<\/b> How performer will see your task\n  <\/td><\/tr>\n<\/table>","76f27c8e":"Specify\tthe number of tasks per page. 1 task per page. A performer will only see one pair of images on a page.","e1eff414":"## Receiving responses","ee31e81f":"Create task interface","7f9c11b0":"**You** can see the ranked images. Some possible results are shown in figure 2 below.\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/4.ranking\/side_by_side_image_comparision\/img\/possible_results.png?raw=true\"\n         alt=\"Possible results\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 2.<\/b> Possible results.\n  <\/td><\/tr>\n<\/table>","d58558de":"Start the pool.\n\n**Important.** Remember that real Toloka performers will complete the tasks.\nDouble check that everything is correct\nwith your project configuration before you start the pool","fb12a178":"## Preparing and uploading tasks\n\nThis example uses a small data set with images.\n\nThe dataset used is collected by Toloka team and distributed under a Creative Commons Attribution 4.0 International license\n[![License: CC BY 4.0](https:\/\/img.shields.io\/badge\/License-CC%20BY%204.0-lightgrey.svg)](https:\/\/creativecommons.org\/licenses\/by\/4.0\/).","bce90bfa":"# Side-by-side image comparison\nWe have a set of icons.\nWe need to find out which icon people prefer and determine the top icon out of the set.\nWe ask performers to look at the icons and choose the one they prefer and then we aggregate these results to obtain the top icon.\n\n<img src=\"https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/b2b_blossom_icon.png\" width=\"200\"\/>\n<img src=\"https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/b2b_dandelion_icon.png\" width=\"200\"\/>\n<img src=\"https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/b2b_sunrise_icon.png\" width=\"200\"\/>\n<img src=\"https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/b2c_blossom_icon.png\" width=\"200\"\/>\n<img src=\"https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/b2c_dandelion_icon.png\" width=\"200\"\/>\n<img src=\"https:\/\/tlk.s3.yandex.net\/dataset\/toloka_logos\/b2c_sunrise_icon.png\" width=\"200\"\/>","888baf5f":"Create a project.","c879571d":"Overlap. This is the number of users who will complete the same task. Since you are interested in a variety of opinions, select a big overlap for each task. For example, 10.","398a74e5":"## Create a project","a10c2221":"\u0421reate toloka-client instance. All api calls will go through it. More about OAuth token in our [Learn the basics example](https:\/\/github.com\/Toloka\/toloka-kit\/tree\/main\/examples\/0.getting_started\/0.learn_the_basics) [![Open In Colab](https:\/\/colab.research.google.com\/assets\/colab-badge.svg)](https:\/\/colab.research.google.com\/github\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/learn_the_basics.ipynb)","50726be7":"Set data specification. And set task interface to project.","ffacf18a":"Upload tasks","0e578bbd":"Prepare environment and import all we'll need.","f18076b2":"Ranking after a pairwise comparison is quite a difficult task. We will use the Bradley-Terry algorithm, which is already implemented in the Crowd-Kit and allows you to get the result in a few lines of code.\n\n> David R. Hunter. 2004.\n> MM algorithms for generalized Bradley-Terry models\n> Ann. Statist., Vol. 32, 1 (2004): 384\u2013406.\n> \n> \n> Bradley, R. A. and Terry, M. E. 1952.\n> Rank analysis of incomplete block designs. I. The method of paired comparisons.\n> Biometrika, Vol. 39 (1952): 324\u2013345."}}