{"cell_type":{"88989b25":"code","389a5031":"code","a249725e":"code","22aa6200":"code","e9d83758":"code","aeb6ae4b":"code","6fa42f40":"code","1bc48f75":"code","e5d3de04":"code","29a13ac3":"code","d2a3200c":"code","42b28621":"code","d3d99080":"code","8d2fdff2":"code","cd1b1ff0":"markdown","0c8d39dd":"markdown","ec893e3e":"markdown","aaa87fbe":"markdown","5087da33":"markdown","07e61e95":"markdown","f679ddea":"markdown","3ccf2185":"markdown","2d134990":"markdown","37682528":"markdown"},"source":{"88989b25":"# !pip install deep_autoviml\n!pip install git+https:\/\/github.com\/AutoViML\/deep_autoviml.git","389a5031":"from deep_autoviml import deep_autoviml as deepauto\nimport numpy as np\nimport pandas as pd","a249725e":"df = pd.read_csv('..\/input\/vertebralcolumndataset\/column_2C.csv')\ndf.head()","22aa6200":"df['class'] = df['class'].map({'Normal': 0, 'Abnormal': 1})\ndf.shape","e9d83758":"from sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\ntrain ,test = train_test_split(df,test_size=0.70)","aeb6ae4b":"from xgboost import XGBClassifier\nX = train[['pelvic_incidence','pelvic_tilt','lumbar_lordosis_angle','sacral_slope', 'pelvic_radius','degree_spondylolisthesis']]\nY = train['class']\n\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.30)\n\nxgb = XGBClassifier(max_depth=10, learning_rate=0.01, n_estimators=100, gamma=0, \n                        min_child_weight=1, subsample=0.8, colsample_bytree=0.6, reg_alpha=0.005)\nxgb.fit(X_train, y_train)\npreds = xgb.predict(X_test)\nacc_xgb = (preds == y_test).sum().astype(float) \/ len(preds)*100\nprint(\"XGBoost's prediction accuracy is: %3.2f\" % (acc_xgb))","6fa42f40":"from sklearn.metrics import confusion_matrix, classification_report\n\ny_pred = xgb.predict(test[['pelvic_incidence','pelvic_tilt','lumbar_lordosis_angle','sacral_slope', 'pelvic_radius','degree_spondylolisthesis']])\n# Creates a confusion matrix\ncm = confusion_matrix(test[['class']], y_pred) \ncm","1bc48f75":"print(classification_report(test[['class']], y_pred))","e5d3de04":"modeltype =  \"fast2\" ## always try \"fast1\" first, then \"fast2\", then \"auto\".\n##  If NLP, use \"BERT\" and if image, use \"image\" for keras_model_type. ###\nmodel_options = {\"tuner\":\"optuna\", 'nlp_char_limit':15, 'cat_feat_cross_flag':False, 'max_trials': 4}\nkeras_options = {\"patience\":15,'class_weight':True, \"early_stopping\": True, \"epochs\": 100}","29a13ac3":"project_name = \"VertebralColumnAnalysis\"\ntarget = 'class'\noutput = deepauto.fit(train, target, modeltype, project_name=project_name, keras_options=keras_options,\n                 model_options=model_options, save_model_flag=False, use_my_model='', verbose=0)","d2a3200c":"model = output[0]\ncat_vocab_dict = output[1]","42b28621":"y_preds = deepauto.predict(model, project_name, test_dataset=test, keras_model_type=modeltype, cat_vocab_dict=cat_vocab_dict)","d3d99080":"from deep_autoviml.utilities.utilities import print_classification_model_stats, print_regression_model_stats\ny_test = test[target].values\nprint_classification_model_stats(y_test, y_preds[1])","8d2fdff2":"import warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\nfrom IPython.display import HTML\nHTML('<iframe width=\"1188\" height=\"668\" src=\"https:\/\/www.youtube.com\/embed\/IcpwNNNXsWE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>')\n","cd1b1ff0":"### Results on test data","0c8d39dd":"![](https:\/\/github.com\/AutoViML\/deep_autoviml\/raw\/master\/deep_4.jpg)","ec893e3e":"# DEEPAUTOViML with fast2","aaa87fbe":"### Results on test data","5087da33":"# Install deep_autoviml\n\n!pip install deep_autoviml or\n!pip install git+https:\/\/github.com\/AutoViML\/deep_autoviml.git","07e61e95":"Results with Deep AutoML is better.","f679ddea":"![](https:\/\/github.com\/AutoViML\/deep_autoviml\/raw\/master\/deep_1.jpg)","3ccf2185":"### Using XGB","2d134990":"Source: https:\/\/github.com\/AutoViML\/deep_autoviml\/","37682528":"# Watch YouTube Video for Demo of Deep_AutoViML"}}