{"cell_type":{"ec14ae47":"code","af511ed9":"code","15ee41a5":"code","47a723e3":"code","ae932c2f":"code","30bc00ea":"code","c079727a":"code","48c620c1":"code","c94051d3":"code","a6135b23":"code","11861b6e":"code","0098162a":"code","63d5c4ea":"code","30d95150":"code","8191d36c":"code","c13acf9b":"code","6c3f635b":"code","f0674130":"code","3235497f":"code","557a0e5a":"code","ebb0af1f":"code","55cd4459":"code","1b6658ab":"code","f7be225a":"code","ca0cb543":"code","e8f97c4b":"code","73ca1197":"markdown","09f0c998":"markdown","00facd86":"markdown","12b2c8f3":"markdown"},"source":{"ec14ae47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","af511ed9":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use(\"seaborn-darkgrid\")","15ee41a5":"df_p1_gen = pd.read_csv(\"..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv\")\ndf_p1_sen = pd.read_csv(\"..\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv\")\ndf_p2_gen = pd.read_csv(\"..\/input\/solar-power-generation-data\/Plant_2_Generation_Data.csv\")\ndf_p2_sen = pd.read_csv(\"..\/input\/solar-power-generation-data\/Plant_2_Weather_Sensor_Data.csv\")","47a723e3":"df_p1_gen[\"DC_POWER\"] = df_p1_gen[\"DC_POWER\"].apply(lambda x: x \/ 10.)","ae932c2f":"print(df_p1_gen.head())\nprint(df_p2_gen.head())","30bc00ea":"# Transform to native datetime formats for easier manipulation\n\ndf_p1_gen[\"DATE_TIME\"] = pd.to_datetime(df_p1_gen[\"DATE_TIME\"], format=\"%d-%m-%Y %H:%S\")\ndf_p2_gen[\"DATE_TIME\"] = pd.to_datetime(df_p2_gen[\"DATE_TIME\"], format=\"%Y-%m-%d %H:%M:%S\")\n\ntransform_to_date = lambda x: x.date()\ntransform_to_time = lambda x: x.time()\n\ndf_p1_gen[\"DATE\"] = df_p1_gen[\"DATE_TIME\"].apply(transform_to_date)\ndf_p1_gen[\"TIME\"] = df_p1_gen[\"DATE_TIME\"].apply(transform_to_time)\n\ndf_p2_gen[\"DATE\"] = df_p2_gen[\"DATE_TIME\"].apply(transform_to_date)\ndf_p2_gen[\"TIME\"] = df_p2_gen[\"DATE_TIME\"].apply(transform_to_time)","c079727a":"# Transform to native datetime formats for easier manipulation\n\ndf_p1_sen[\"DATE_TIME\"] = pd.to_datetime(df_p1_sen[\"DATE_TIME\"], format=\"%Y-%m-%d %H:%M:%S\")\ndf_p2_sen[\"DATE_TIME\"] = pd.to_datetime(df_p2_sen[\"DATE_TIME\"], format=\"%Y-%m-%d %H:%M:%S\")\n\ndf_p1_sen[\"DATE\"] = df_p1_sen[\"DATE_TIME\"].apply(transform_to_date)\ndf_p1_sen[\"TIME\"] = df_p1_sen[\"DATE_TIME\"].apply(transform_to_time)\n\ndf_p2_sen[\"DATE\"] = df_p2_sen[\"DATE_TIME\"].apply(transform_to_date)\ndf_p2_sen[\"TIME\"] = df_p2_sen[\"DATE_TIME\"].apply(transform_to_time)","48c620c1":"# Let's check DC_POWER and AC_POWER by the timestamp\n\nplt.figure(figsize=(12, 8))\n\nplt.plot(\n    df_p1_gen[\"DATE_TIME\"].unique(),\n    df_p1_gen.groupby(\"DATE_TIME\")[\"DC_POWER\"].sum(),\n    label=\"DC Power\",\n)\nplt.plot(\n    df_p1_gen[\"DATE_TIME\"].unique(),\n    df_p1_gen.groupby(\"DATE_TIME\")[\"AC_POWER\"].sum(),\n    label=\"AC_POWER\",\n)\n\nplt.legend()\nplt.xlabel(\"Date and time\")\nplt.show()","c94051d3":"# Boilerplate\n\ndef plt_init(figsize=(12, 8)):\n    _, ax = plt.subplots(1, 1, figsize=figsize)\n    return ax","a6135b23":"# Plotting irradiation against time\n\nax = plt_init()\n\nax.plot(\n    df_p1_sen[\"DATE_TIME\"], df_p1_sen[\"IRRADIATION\"], \"o--\",\n    alpha=0.75, label=\"Irradiation\",\n)\n\nplt.legend()\nplt.show()","11861b6e":"# Plotting module temperature and ambient temperature against time\n\nax = plt_init()\n\nax.plot(\n    df_p1_sen[\"DATE_TIME\"], df_p1_sen[\"MODULE_TEMPERATURE\"],\n    label=\"Module Temperature\",\n)\nax.plot(\n    df_p1_sen[\"DATE_TIME\"], df_p1_sen[\"AMBIENT_TEMPERATURE\"],\n    label=\"Ambient Temperature\"\n)\n\nplt.legend()\nplt.show()","0098162a":"# Now let's look at irradiation and difference between module temp and ambient temp\n\nax = plt_init()\n\nax.plot(df_p1_sen[\"DATE_TIME\"], df_p1_sen[\"IRRADIATION\"], label=\"Irradiation\")\nax.plot(\n    df_p1_sen[\"DATE_TIME\"],\n    df_p1_sen[\"MODULE_TEMPERATURE\"] - df_p1_sen[\"AMBIENT_TEMPERATURE\"],\n    label=\"Module temp. - Ambient temp.\"\n)\n\nplt.legend()","63d5c4ea":"# Let's magnify\n\nax = plt_init()\n\nax.plot(df_p1_sen[\"DATE_TIME\"], df_p1_sen[\"IRRADIATION\"] * 20., label=\"Irradiation * 20\")\nax.plot(\n    df_p1_sen[\"DATE_TIME\"],\n    df_p1_sen[\"MODULE_TEMPERATURE\"] - df_p1_sen[\"AMBIENT_TEMPERATURE\"],\n    label=\"Module temp. - Ambient temp.\"\n)\n\nplt.legend()\nplt.show()","30d95150":"# Daily Yield vs Date time\n\nax = plt_init()\n\nax.plot(df_p1_gen[\"DATE_TIME\"], df_p1_gen[\"DAILY_YIELD\"], \"o--\", alpha=0.5)\n\nplt.show()","8191d36c":"# Daily Yield vs Date Time per inverter\n\nax = plt_init((16, 10))\n\nfor key, rows in df_p1_gen.groupby(\"SOURCE_KEY\"):\n    ax.plot(\n        rows[\"DATE_TIME\"], rows[\"DAILY_YIELD\"], \"o--\", alpha=0.5, label=key\n    )\n\nplt.legend()\nplt.show()","c13acf9b":"# Now to the second plant\n\nplt.figure(figsize=(12, 8))\n\nplt.plot(\n    df_p2_gen[\"DATE_TIME\"].unique(),\n    df_p2_gen.groupby(\"DATE_TIME\")[\"DC_POWER\"].sum(),\n    label=\"DC Power\",\n)\nplt.plot(\n    df_p2_gen[\"DATE_TIME\"].unique(),\n    df_p2_gen.groupby(\"DATE_TIME\")[\"AC_POWER\"].sum(),\n    label=\"AC_POWER\",\n)\n\nplt.legend()\nplt.xlabel(\"Date and time\")\nplt.show()","6c3f635b":"ax = plt_init()\n\nax.plot(\n    df_p2_sen[\"DATE_TIME\"], df_p2_sen[\"IRRADIATION\"], \"o--\",\n    alpha=0.75, label=\"Irradiation\",\n)\n\nplt.legend()\nplt.show()","f0674130":"ax = plt_init()\n\nax.plot(\n    df_p2_sen[\"DATE_TIME\"], df_p2_sen[\"MODULE_TEMPERATURE\"],\n    label=\"Module Temperature\",\n)\nax.plot(\n    df_p2_sen[\"DATE_TIME\"], df_p2_sen[\"AMBIENT_TEMPERATURE\"],\n    label=\"Ambient Temperature\"\n)\n\nplt.legend()\nplt.show()","3235497f":"ax = plt_init()\n\nax.plot(df_p2_sen[\"DATE_TIME\"], df_p2_sen[\"IRRADIATION\"] * 20., label=\"Irradiation * 20\")\nax.plot(\n    df_p2_sen[\"DATE_TIME\"],\n    df_p2_sen[\"MODULE_TEMPERATURE\"] - df_p2_sen[\"AMBIENT_TEMPERATURE\"],\n    label=\"Module temp. - Ambient temp.\"\n)\n\nplt.legend()\nplt.show()","557a0e5a":"ax = plt_init()\n\nax.plot(df_p2_gen[\"DATE_TIME\"], df_p2_gen[\"DAILY_YIELD\"], \"o--\", alpha=0.5)\n\nplt.show()","ebb0af1f":"ax = plt_init((16, 10))\n\nfor key, rows in df_p2_gen.groupby(\"SOURCE_KEY\"):\n    ax.plot(\n        rows[\"DATE_TIME\"], rows[\"DAILY_YIELD\"], \"o--\", alpha=0.5, label=key\n    )\n\nax.legend()\nplt.show()","55cd4459":"_, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))\n\n\nax1.plot(\n    df_p1_gen[\"DC_POWER\"], df_p1_gen[\"AC_POWER\"], \"bo\",\n    alpha=0.5, label=\"Plant1 | AC Power vs. DC Power\",\n)\n\nax2.plot(\n    df_p2_gen[\"DC_POWER\"], df_p2_gen[\"AC_POWER\"], \"go\",\n    alpha=0.5, label=\"Plant2 | AC Power vs. DC Power\",\n)\n\nax1.legend()\nax2.legend()\n\nplt.show()","1b6658ab":"# Module Temperature vs. Ambient Temperature\n\n_, (ax1, ax2) = plt.subplots(2, 1, figsize=(15, 12))\n\n\nax1.plot(\n    df_p1_sen[\"AMBIENT_TEMPERATURE\"], df_p1_sen[\"MODULE_TEMPERATURE\"], \"bo\",\n    alpha=0.5,\n)\n\nax1.set_title(\"Plant 1 | Module Temperature vs Ambient Temperature\")\nax1.set_xlabel(\"Ambient Temperature\")\nax1.set_ylabel(\"Module Temperature\")\nax1.legend()\n\nax2.plot(\n    df_p2_sen[\"AMBIENT_TEMPERATURE\"], df_p2_sen[\"MODULE_TEMPERATURE\"], \"go\",\n    alpha=0.5,\n)\n\nax2.set_title(\"Plant 2 | Module Temperature vs Ambient Temperature\")\nax2.set_xlabel(\"Ambient Temperature\")\nax2.set_ylabel(\"Module Temperature\")\nax2.legend()\n\nplt.show()","f7be225a":"# (Module Temperature - Ambient Temperature) vs. Irradiation\n\n_, (ax1, ax2) = plt.subplots(2, 1, figsize=(15, 12))\n\n\nax1.plot(\n    df_p1_sen[\"IRRADIATION\"],\n    df_p1_sen[\"MODULE_TEMPERATURE\"] - df_p1_sen[\"AMBIENT_TEMPERATURE\"],\n    \"bo\",\n    alpha=0.5,\n)\n\nax1.set_title(\"Plant 1 | Module Temp - Ambient Temp vs. Irradiation\")\nax1.set_xlabel(\"Irradiation\")\nax1.set_ylabel(\"$T_M - T_A$\")\nax1.legend()\n\nax2.plot(\n    df_p2_sen[\"IRRADIATION\"],\n    df_p2_sen[\"MODULE_TEMPERATURE\"] - df_p2_sen[\"AMBIENT_TEMPERATURE\"],\n    \"go\",\n    alpha=0.5,\n)\n\nax2.set_title(\"Plant 2 | Module Temp - Ambient Temp vs. Irradiation\")\nax2.set_xlabel(\"Irradiation\")\nax2.set_ylabel(\"$T_M - T_A$\")\nax2.legend()\n\nplt.show()","ca0cb543":"# The mean of AC_POWER per day for each SOURCE_KEY\n\nac_summary_p1 = df_p1_gen.groupby([\"SOURCE_KEY\", \"DATE\"]).agg(\n    AC_MEAN=(\"AC_POWER\", \"mean\"), INV=(\"SOURCE_KEY\", \"max\")\n)\n\nax = plt_init((10, 12))\n\nsns.boxplot(x=\"AC_MEAN\", y=\"INV\", data=ac_summary_p1)\n\nax.set(xlabel=\"Mean AC Power produced per day\", ylabel=\"Inverters\")\n\nplt.show()","e8f97c4b":"ac_summary_p2 = df_p2_gen.groupby([\"SOURCE_KEY\", \"DATE\"]).agg(\n    AC_MEAN=(\"AC_POWER\", \"mean\"), INV=(\"SOURCE_KEY\", \"max\")\n)\n\nax = plt_init((10, 12))\n\nsns.boxplot(x=\"AC_MEAN\", y=\"INV\", data=ac_summary_p2)\n\nax.set(xlabel=\"Mean AC Power produced per day\", ylabel=\"Inverters\")\n\nplt.show()","73ca1197":"Looks very linear!","09f0c998":"Two inverters (`1BY6WEcLGh8j5v7` and `bvBOhCH3iADSZry`) are underperforming","00facd86":"Suggests that some two inverters were down for a few days from around 20 to 30 May","12b2c8f3":"Just one point in June 14 particularly stands out here with huge irradiation. Something to check on\n"}}