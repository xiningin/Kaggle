{"cell_type":{"238d7358":"code","8601ce38":"code","e90cc17f":"code","51faa8a9":"code","0bce2dc8":"code","485ff41e":"code","fe673e76":"code","f2ac8925":"code","f5001a54":"code","02096cdf":"code","358dcde9":"code","df95afde":"code","9fbbcbcd":"code","c18c8c02":"code","b83b4b49":"code","13d1055a":"code","6bdd9777":"code","5e4eaab9":"code","32302b73":"code","137cb393":"code","57f3e18d":"code","06d5cec5":"code","1990ece7":"code","635b92be":"code","53c5c250":"code","f83abf96":"code","95f01604":"code","90c452d1":"code","25f1ced4":"code","4cb403bb":"code","f83dc934":"code","921c4da2":"code","7a10e29f":"code","2d83768e":"code","cdb9352d":"code","3a84f8d6":"code","a85a15f1":"code","1f478b27":"code","2e77b7ad":"code","83fb4609":"code","d73e30e3":"code","3c0f1d9d":"code","827cbfd9":"code","8825f67c":"code","e2763353":"code","87308ce8":"code","18bf07d7":"code","1ca8c1b5":"code","c67d51d3":"code","a3a06d80":"code","945ef8f5":"code","8f947ba0":"code","346899bf":"code","9a985c33":"code","f7dbdddc":"code","707d932a":"code","5b141f55":"code","72db9866":"markdown","e307883a":"markdown","17ccded8":"markdown","e312f451":"markdown","65fe4690":"markdown","7dce07d2":"markdown","b43262cf":"markdown","88abb1b5":"markdown","0ec2292a":"markdown","097b94cd":"markdown","c29bc3a3":"markdown","dff576e7":"markdown","37f768e0":"markdown","12cbbb53":"markdown","2421ae34":"markdown","707dadcf":"markdown","b159ab1c":"markdown","c9fbefa7":"markdown","33ec18e5":"markdown","bf458203":"markdown","74eb1a16":"markdown","0b3498f7":"markdown","22f371c1":"markdown","1a985c1a":"markdown","8da63beb":"markdown","b1a5fe62":"markdown","2ad650d7":"markdown","b3a58676":"markdown","c152ce0c":"markdown","5212b657":"markdown","bb780304":"markdown","f411b93b":"markdown","6f35ade4":"markdown","a1d16a14":"markdown","481295b1":"markdown","6525efcc":"markdown","50969abf":"markdown","bf20d7af":"markdown","26f94893":"markdown","26ae2685":"markdown","9480f375":"markdown","3202f692":"markdown","0dcdce72":"markdown","cfcd900a":"markdown","9896f885":"markdown","e85f8123":"markdown","a52d60c2":"markdown","213bf646":"markdown","f1abe8cd":"markdown","70a61498":"markdown","07846fbb":"markdown","b47ba465":"markdown","d3ae5283":"markdown","26a97541":"markdown","cb6129e6":"markdown","8bcba93b":"markdown","465b0a54":"markdown","f714d611":"markdown","a81e8da8":"markdown","e74239d4":"markdown","dac7ea9c":"markdown","104b6677":"markdown","4dd85e47":"markdown","3ba154ec":"markdown","9b14d58d":"markdown","39ff51b9":"markdown","93f8a28d":"markdown","f2a00ebe":"markdown","261459a3":"markdown","95fca1a8":"markdown","1330dbb6":"markdown","d5a3d4a4":"markdown","cfddef47":"markdown","2b58287c":"markdown","790bc09f":"markdown","7308a706":"markdown","08ebb30b":"markdown","5ea1acd6":"markdown","a2d80ded":"markdown","4e41a9c3":"markdown","20a6b6cb":"markdown","08d24ec6":"markdown","8e40edc7":"markdown","a54cb066":"markdown","0552db10":"markdown","6b941a25":"markdown","974dda3e":"markdown","94858619":"markdown","38c2362f":"markdown","5456f4d4":"markdown","3fa7ece4":"markdown","88d25ec6":"markdown","069d63b9":"markdown","beb11abe":"markdown","19f8ec0a":"markdown","2a939023":"markdown","ad51b477":"markdown","a6e88652":"markdown","c035b851":"markdown","9924befb":"markdown","501d1a70":"markdown","5a36328e":"markdown","4f64ee3a":"markdown","11bc1ab1":"markdown","3ac637a5":"markdown"},"source":{"238d7358":"#!pip install pandas-profiling --upgrade --user ##giving error   # To install pandas profiling please run this command.\n\n#conda install -c conda-forge pandas-profiling                   #completed...uncomment if need to re-install\n\n!pip install pivottablejs                                       #installing Pivot Table JS package\n\n","8601ce38":"import numpy as np\nnp.set_printoptions(precision=4)                    # To display values only upto four decimal places. \n\nimport pandas as pd\npd.set_option('mode.chained_assignment', None)      # To suppress pandas warnings.\npd.set_option('display.max_colwidth', -1)           # To display all the data in each column\npd.options.display.max_columns = 50                 # To display every column of the dataset in head()\n\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')                  # To apply seaborn whitegrid style to the plots.\n%matplotlib inline\n\nimport seaborn as sns\nsns.set(style='whitegrid', font_scale=1.3, color_codes=True)      # To adjust seaborn settings for the plots.\n\nimport warnings\nwarnings.filterwarnings('ignore')                   # To suppress all the warnings in the notebook.\n\nimport pandas_profiling                             # To get Pandas profiling reports  \nfrom pivottablejs import pivot_ui                   # To get the Pivot table JS\nimport webbrowser                                   # To open the pivot table html file in web browser\n\nimport plotly.express as px                         # To import plotly package for interacrive graphs\n                     \n\n# Making bokeh specific imports.\n\nfrom bokeh.plotting import Figure, figure, show, output_notebook,output_file\nfrom bokeh.layouts import column\nfrom bokeh.models import ColumnDataSource, CustomJS, Slider, HoverTool\nfrom bokeh.palettes import Spectral4\nfrom bokeh.io import push_notebook\nfrom bokeh.models import Range1d\noutput_notebook()\n\n\nfrom ipywidgets import interact                    # For bokeh slider and selections","e90cc17f":"pl_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/insaid2018\/Term-1\/master\/Data\/Projects\/English_Premier_League.csv')                               # read_csv is used to read csv file\npl_df.head()","51faa8a9":"pl_df.info()","0bce2dc8":"pl_df.describe(include='all')","485ff41e":"# To output pandas profiling report to an external html file.\n# Saving the output as profiling_before_preprocessing.html\n'''\nprofile = df_merge.profile_report(title='Pandas Profiling before Data Preprocessing')\nprofile.to_file(output_file=\"profiling_before_preprocessing.html\")\n'''\n\n# To output the pandas profiling report on the notebook.\n\n#pl_df.profile_report(title='Pandas Profiling before Data Preprocessing', style={'full_width':True})\n\n\n#profile = pandas_profiling.ProfileReport(pl_df)\n#profile.to_file(output_file=\"profiling_before_preprocessing.html\")","fe673e76":"pl_df.head()","f2ac8925":"pl_df.drop(['Div'],axis=1,inplace=True)","f5001a54":"pl_df.head()","02096cdf":"#pl_df['Date'] = pd.to_datetime(pl_df['Date'])\n#pl_df.Date= pd.to_datetime(pl_df['Date'], format='%m\/%d\/%Y')  \n## The above had issues as the original date had 2 formats and on further checking found that one date format got converted to mm\/dd\/yyyy and other to dd\/mm\/yyyy causing confusion.\npl_df['New_Date'] = pd.to_datetime(pl_df.Date , format ='%d\/%m\/%Y',errors='coerce')\nfil = pl_df.New_Date.isnull()\npl_df.loc[fil,'New_Date'] = pd.to_datetime(pl_df[fil]['Date'],errors='coerce')\n","358dcde9":"pl_df.info()\npl_df.head()","df95afde":"print(pl_df[pl_df['HTHG'].isnull()]['Season'].value_counts())\nprint(pl_df[pl_df['HTAG'].isnull()]['Season'].value_counts())\nprint(pl_df[pl_df['HTR'].isnull()]['Season'].value_counts())\nprint(pl_df['Season'].value_counts())","9fbbcbcd":"pl_df[['HTHG','HTAG']] = pl_df[['HTHG','HTAG']].fillna(value=0).astype(int)\npl_df['HTR'] = pl_df['HTR'].fillna(value='D')\npl_df.head()","c18c8c02":"#profile = pandas_profiling.ProfileReport(pl_df)\n#profile.to_file(output_file=\"profiling_after_preprocessing.html\")","b83b4b49":"pl_df.groupby('Season')['Season'].count().plot(kind='bar',fontsize=13,figsize=(16,7),yticks=np.arange(0,501,50))\n\nplt.title(\"Matches Played per Season\")\nplt.xlabel(\"Season\")\nplt.ylabel(\"Matches\")\nplt.xticks(rotation=60)","13d1055a":"#No. of Teams per season\n\npl_df.groupby('Season')['HomeTeam'].nunique().plot(kind='bar',colormap='magma',fontsize=13,figsize=(16,7),yticks=np.arange(0, 26))\nplt.ylabel('No. of Home Teams')\nplt.title(\"Total No. of Teams per Season\")\nplt.xticks(rotation=60)","6bdd9777":"pl_df['Total_Match_Goals'] = pl_df['FTHG'] + pl_df['FTAG']\n\npl_df.groupby('Season')['Total_Match_Goals'].sum().plot(kind='bar',fontsize=13,figsize=(16,7),yticks=np.arange(0,1201,80)) \n\nplt.title(\"Goals Scored per Season\")\nplt.xlabel(\"Season\")\nplt.ylabel(\"Goals\")\nplt.xticks(rotation=60)","5e4eaab9":"gpm = round(pl_df.groupby('Season')['Total_Match_Goals'].sum()\/pl_df.groupby('Season')['Season'].count(),2)\ngpm.plot(kind='bar',width=0.5,figsize=(24,8))\n\nplt.grid(axis='y')\nplt.ylim(2.4,2.9)  ##min value = 2.45 as seen in data [gpm.min()]\nplt.ylabel('Goals')\nplt.title(\"Goals per Game\",fontsize=20)\nplt.xticks(rotation=60)","32302b73":"pl_df.groupby('Season')[['FTHG','FTAG']].sum().plot(kind='bar',fontsize=13,figsize=(24,8),yticks=np.arange(0,721,80),colormap='copper')\nplt.grid(axis='y')\nplt.ylabel('Goals')\nplt.legend(['Home Goals','Away Goals'])\nplt.title(\"Home Goals v\/s Away Goals\",fontsize=20)\nplt.xticks(rotation=60)","137cb393":"round((pl_df.groupby('Season')['FTHG'].sum()\/pl_df.groupby('Season')['FTAG'].sum()),3).plot(kind='bar',figsize=(24,8),color='orange')\nplt.grid(axis='y')\nplt.ylabel(\"Ratio\")\nplt.title(\"Home Goals\/Away Goals\",fontsize= 20)\nplt.xticks(rotation=60)","57f3e18d":"pl_df['Comeback']=np.where((pl_df['FTR']!=pl_df['HTR'])&(pl_df['FTR']!='D') & (pl_df['HTR']!='D'),1,0)\n\npl_df.groupby('Season')['Comeback'].sum().plot(kind='bar',figsize=(24,8),color='green',yticks=np.arange(0,23,2))\nplt.grid(axis='y')\nplt.title(\"Comebacks per Season\",fontsize=20)\nplt.ylabel('Comebacks')\nplt.xticks(rotation=60)","06d5cec5":"tot_g = pl_df.groupby('HomeTeam')['FTHG'].sum() + pl_df.groupby('AwayTeam')['FTAG'].sum()\ntot_g.sort_values(ascending=False).plot(kind='barh',figsize=(15,15),xticks=np.arange(0,1901,100),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel(\"Goals\")\nplt.title(\"Total Goals by Teams\",fontsize=20)","1990ece7":"pl_df.groupby('HomeTeam')['FTHG'].sum().sort_values(ascending=False).plot(kind='barh',figsize=(15,15),xticks=np.arange(0,1051,50),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel(\"Goals\")\nplt.title(\"Home Goals by Teams\",fontsize=20)\nplt.legend(['Goals Scored'])","635b92be":"goals_h_game= round(pl_df.groupby('HomeTeam')['FTHG'].sum()\/pl_df.groupby('HomeTeam')['HomeTeam'].count(),2)\ngoals_h_game.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,2.5,0.2),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel(\"Goals\")\nplt.title(\"Home Goals\/Game\",fontsize=20)\nplt.legend(['Goals Scored per Game'])","53c5c250":"home_win=100*round((pl_df.loc[pl_df['FTR']=='H'].groupby('HomeTeam')['FTR'].count()\/pl_df.groupby('HomeTeam')['FTR'].count()),3)\nhome_win.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,101,10),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel('Percentage')\nplt.legend(['% Wins'])\nplt.title(\"Home Ground Win %\",fontsize=20)","f83abf96":"home_loss=100*round((pl_df.loc[pl_df['FTR']=='A'].groupby('HomeTeam')['FTR'].count()\/pl_df.groupby('HomeTeam')['FTR'].count()),3)\nhome_loss.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,101,10),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel('Percentage')\nplt.legend(['% Loss'])\nplt.title(\"Home Ground Loss %\",fontsize=20)","95f01604":"home_draw=100*round((pl_df.loc[pl_df['FTR']=='D'].groupby('HomeTeam')['FTR'].count()\/pl_df.groupby('HomeTeam')['FTR'].count()),3)\nhome_draw.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,101,10),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel('Percentage')\nplt.legend(['% Draw'])\nplt.title(\"Home Ground Draw %\",fontsize=20)","90c452d1":"home_cb = pl_df.loc[(pl_df['HTR']=='A')].groupby('HomeTeam')['Comeback'].sum()\nhome_cb.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,21,2),color='darkorange')\nplt.grid(axis='x')\nplt.xlabel('Comeback')\nplt.legend(['Comeback'])\nplt.title(\"Home Comebacks\",fontsize=20)","25f1ced4":"pl_df.groupby('AwayTeam')['FTAG'].sum().sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,851,50),color='teal')\nplt.grid(axis='x')\nplt.xlabel(\"Goals\")\nplt.title(\"Away Goals by Teams\",fontsize=20)\nplt.legend(['Goals Scored'])","4cb403bb":"goals_a_game= round(pl_df.groupby('AwayTeam')['FTAG'].sum()\/pl_df.groupby('AwayTeam')['AwayTeam'].count(),2)\ngoals_a_game.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,2.5,0.2),color='teal')\nplt.grid(axis='x')\nplt.xlabel(\"Goals\")\nplt.title(\"Away Goals\/Game\",fontsize=20)\nplt.legend(['Goals Scored per Game'])","f83dc934":"away_win=100*round((pl_df.loc[pl_df['FTR']=='A'].groupby('AwayTeam')['FTR'].count()\/pl_df.groupby('AwayTeam')['FTR'].count()),3)\naway_win.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,101,10),color='teal')\nplt.grid(axis='x')\nplt.xlabel('Percentage')\nplt.legend(['% Wins'])\nplt.title(\"Away Ground Win %\",fontsize=20)","921c4da2":"away_win=100*round((pl_df.loc[pl_df['FTR']=='H'].groupby('AwayTeam')['FTR'].count()\/pl_df.groupby('AwayTeam')['FTR'].count()),3)\naway_win.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,101,10),color='teal')\nplt.grid(axis='x')\nplt.xlabel('Percentage')\nplt.legend(['% Loss'])\nplt.title(\"Away Ground Loss %\",fontsize=20)","7a10e29f":"away_win=100*round((pl_df.loc[pl_df['FTR']=='D'].groupby('AwayTeam')['FTR'].count()\/pl_df.groupby('AwayTeam')['FTR'].count()),3)\naway_win.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,101,10),color='teal')\nplt.grid(axis='x')\nplt.xlabel('Percentage')\nplt.legend(['% Draws'])\nplt.title(\"Away Ground Draw %\",fontsize=20)","2d83768e":"away_cb = pl_df.loc[(pl_df['HTR']=='H')].groupby('AwayTeam')['Comeback'].sum()\naway_cb.sort_values(ascending=False).plot(kind='barh',figsize=(10,15),xticks=np.arange(0,23,2),color='teal')\nplt.grid(axis='x')\nplt.xlabel('Comeback')\nplt.legend(['Comeback'])\nplt.title(\"Away Comebacks\",fontsize=20)","cdb9352d":"(100*(home_cb\/(home_cb+away_cb))).plot(kind='bar',figsize=(15,10),yticks=np.arange(0,101,5),color='teal')\nplt.grid(axis='x')\nplt.xlabel('Team')\nplt.ylabel('Home Comeback %')\nplt.legend(['Home Comeback %'])\nplt.title(\"Home\/Total Comebacks\",fontsize=20)","3a84f8d6":"pl_df.groupby(['HomeTeam'])['Season'].nunique().plot(kind='bar',figsize=(20,10),yticks=np.arange(0,26,1),color='black')\nplt.ylabel(\"No. Of Seasons\")\nplt.xticks(rotation=90)\nplt.title(\"Teams played in Different Seasons\",fontsize=20)\nplt.grid()","a85a15f1":"#Getting total Home Games, Wins, Draws and Losses\nhp = pl_df.groupby(['Season','HomeTeam'])['FTR'].count().rename(\"HP\")\nhw = pl_df[pl_df['FTR'] =='H'].groupby(['Season','HomeTeam'])['FTR'].count().rename(\"HW\")\nhl = pl_df[pl_df['FTR'] =='A'].groupby(['Season','HomeTeam'])['FTR'].count().rename(\"HL\")\nhd = pl_df[pl_df['FTR'] =='D'].groupby(['Season','HomeTeam'])['FTR'].count().rename(\"HD\")\nhome_games=pd.concat([hp,hw,hl,hd],axis=1).reset_index()\nhome_games.fillna(0,inplace=True)\nhome_games[['HP','HL','HD','HW']]=home_games[['HP','HL','HD','HW']].astype(int)\n\n\n#Getting Total Goals scored and conceded by Home Teams per Season (Full Time and Half Time)\nhome_score=pl_df.groupby(['Season','HomeTeam'])['FTAG','FTHG','HTAG','HTHG'].sum().astype(int).reset_index()\nhome_score.rename(columns={'FTHG':'HG For','FTAG':'HG Against','HTAG':'HG For(Half Time)','HTHG':'HG Against(Half Time)'},inplace=True)\n\nhome_df=pd.merge(left=home_games,right=home_score,on=['Season','HomeTeam'],how='left')","1f478b27":"#Getting total Away Games, Wins, Draws and Losses\nap = pl_df.groupby(['Season','AwayTeam'])['FTR'].count().rename(\"AP\")\naw = pl_df[pl_df['FTR'] =='A'].groupby(['Season','AwayTeam'])['FTR'].count().rename(\"AW\")\nal = pl_df[pl_df['FTR'] =='H'].groupby(['Season','AwayTeam'])['FTR'].count().rename(\"AL\")\nad = pl_df[pl_df['FTR'] =='D'].groupby(['Season','AwayTeam'])['FTR'].count().rename(\"AD\")\naway_games=pd.concat([ap,aw,al,ad],axis=1).reset_index()\naway_games.fillna(0,inplace=True)   ##NaN comes where theere are 0 games as groupby misses that entry\naway_games[['AP','AL','AD','AW']]=away_games[['AP','AL','AD','AW']].astype(int)\n\n\n#Getting Total Goals scored and conceded by Away Teams per Season (Full Time and Half Time)\naway_score=pl_df.groupby(['Season','AwayTeam'])['FTAG','FTHG','HTAG','HTHG'].sum().astype(int).reset_index()\naway_score.rename(columns={'FTHG':'AG Against','FTAG':'AG For','HTAG':'AG For(Half Time)','HTHG':'AG Against(Half Time)'},inplace=True)\n\naway_df=pd.merge(left=away_games,right=away_score,on=['Season','AwayTeam'],how='left')\n","2e77b7ad":"##Final Points Table (Home and Away)\n\npt_table = pd.merge(left=home_df,right=away_df,left_on=['Season','HomeTeam'],right_on=['Season','AwayTeam']).drop(['AwayTeam'],axis=1)\npt_table.rename(columns={'HomeTeam':'Team'},inplace=True)\npt_table['Total Played'] = pt_table['HP'] + pt_table['AP']\npt_table['Total Wins'] = pt_table['HW'] + pt_table['AW']\npt_table['Total Loss'] = pt_table['HL'] + pt_table['AL']\npt_table['Total Draw'] = pt_table['HD'] + pt_table['AD']\npt_table['GF'] = pt_table['HG For'] + pt_table['AG For']\npt_table['GA'] = pt_table['HG Against'] + pt_table['AG Against']\npt_table['GD'] = pt_table['GF'] - pt_table['GA']\npt_table['Total_Points'] = 3*pt_table['Total Wins'] + pt_table['Total Draw']  ## 3 Points for a Win and 1 Point for a Draw.\n\n\n## Ranking the teams\npt_table['Rank']= pt_table.groupby('Season')['Total_Points'].rank(method='min',ascending=False)\npt_table['fin'] = pt_table.groupby(['Season','Rank'])['GD'].rank(method='first',ascending=False)  ## If points are same, use goal difference\npt_table['Rank']=np.where((pt_table['fin'] > 1),(pt_table['Rank']+pt_table['fin'] - 1),pt_table['Rank'])\npt_table.drop('fin',axis=1,inplace=True)\n\n#pt_table\n#pt_table[pt_table['Season']=='2011-12'].sort_values(by=['Total_Points','GD'], ascending=[False,False])","83fb4609":"pt_table[pt_table['Season']=='2011-12'].sort_values(by='Rank')[['Season','Team','Total Played','Total Wins','Total Loss','Total Draw','GF','GA','GD','Total_Points','Rank']]","d73e30e3":"fig,ax=plt.subplots(4,2,figsize=(40,40),constrained_layout=True)\n\n## Most and Least Premier League wins (minimum 1)\npt_table[pt_table['Rank']==1].groupby('Team')['Season'].count().plot(kind='bar',ax=ax[0][0])\nax[0][0].set_title('League Wins ',fontsize=20)\nax[0][0].grid()\n\n\n##Most and Least Wins in a season\npt_table.groupby('Season')['Total Wins'].agg(['max','min']).plot(kind='bar',ax=ax[0][1])\nax[0][1].set_title('Max and Min Wins ',fontsize=20)\nax[0][1].grid()\n\n\n##Most and Least Points in a season\npt_table.groupby('Season')['Total_Points'].agg(['max','min']).plot(kind='bar',ax=ax[1][0])\nax[1][0].set_title('Max and Min Points ',fontsize=20)\nax[1][0].grid()\n\n##Most and Least Defeats in a season\npt_table.groupby('Season')['Total Loss'].agg(['max','min']).plot(kind='bar',ax=ax[1][1])\nax[1][1].set_title('Max and Min Defeats ',fontsize=20)\nax[1][1].grid()\n\n##Most and Least Goals in a season\npt_table.groupby('Season')['GF'].agg(['max','min']).plot(kind='bar',ax=ax[2][0])\nax[2][0].set_title('Max and Min Goals Scored ',fontsize=20)\nax[2][0].grid()\n\n##Best and worst Goal Difference in a season\npt_table.groupby('Season')['GD'].agg(['max','min']).plot(kind='bar',ax=ax[2][1])\nax[2][1].set_title('Max and Min Goal Difference ',fontsize=20)\nax[2][1].grid()\n\n##Most and Least Goals Conceded in a season\npt_table.groupby('Season')['GA'].agg(['max','min']).plot(kind='bar',ax=ax[3][0])\nax[3][0].set_title('Max and Min Goals Conceded ',fontsize=20)\nax[3][0].grid()\n\n##Biggest and Smallest Margin between top 2 teams over Seasons\n\n## Top Team Data for every Season to see trending\ntop = pt_table[(pt_table['Rank']==1)]\ntop.set_index('Season',drop=True,inplace=True)\ntop = top.reset_index() ##set and reset done becuase otherwise it was showing irregular spaces in x axis of the plot\n\n## Runner Up Team Data for every Season to see trending\nrup = pt_table[(pt_table['Rank']==2)]\nrup.set_index('Season',drop=True,inplace=True)\nrup = rup.reset_index() ##set and reset done becuase otherwise it was showing irregular spaces in x axis of the plot\n\n\n\n\n\ntop.set_index('Season',inplace=True)\nrup.set_index('Season',inplace=True)\n\n(top['Total_Points'] - rup['Total_Points']).plot(kind='bar',ax=ax[3][1],yticks=np.arange(0,21,1))\nax[3][1].set_title('Biggest and Smallest Margins for Top2 Teams ',fontsize=20)\nax[3][1].grid()\n\ntop.reset_index(inplace=True)\nrup.reset_index(inplace=True)\n\n\n#fig.delaxes(ax[3][1])\n#fig.delaxes(ax[2][2])\nfig.tight_layout()\nfig.show()\n\n","3c0f1d9d":"fig = px.scatter(pt_table, x=\"Season\", y=\"Total Loss\", color=\"Team\",hover_name=\"Team\",size=\"Total Wins\",template='plotly',\n                color_discrete_sequence=px.colors.cyclical.IceFire,\n                 #labels ={'GF': 'Goals Scored'},\n                 title=\"Total Matches Lost per Season and  Most Wins reflected by the size\")\n\nfig.update_xaxes(\n    showgrid=True,\n    ticks=\"outside\",\n    tickson=\"boundaries\",\n    ticklen=20,\n    type='category'\n)\n\n\nfig.show()","827cbfd9":"fig = px.scatter(pt_table, x=\"Season\", y=\"GD\", color=\"Team\",hover_name=\"Team\",size=\"Total_Points\",template='plotly',\n                color_discrete_sequence=px.colors.cyclical.IceFire,\n                 labels ={'GD': 'Goal Difference'},\n                 title=\"Goal Difference per Season with Total Points reflected by the size\")\n\nfig.update_xaxes(\n    showgrid=True,\n    ticks=\"outside\",\n    tickson=\"boundaries\",\n    ticklen=20,\n    type='category'\n)\n\n\nfig.show()","8825f67c":"fig = px.scatter(pt_table, x=\"Season\", y=\"GF\", color=\"Team\",hover_name=\"Team\",size=\"GA\",template='plotly',\n                color_discrete_sequence=px.colors.cyclical.IceFire,\n                 labels ={'GF': 'Goals Scored'},\n                 title=\"Goals Scored per Season with Goals Conceeded as size\")\n\nfig.update_xaxes(\n    showgrid=True,\n    ticks=\"outside\",\n    tickson=\"boundaries\",\n    ticklen=20,\n    type='category'\n)\n\n\nfig.show()","e2763353":"ax = top.plot(kind='line',color='sandybrown',y='Total_Points',grid=True,figsize=(47,20),label='Total_Points',linestyle='-',marker='D',markevery=1,markersize=15, fillstyle='full',markerfacecolor='sandybrown')\nplt.axhline(y=top['Total_Points'].mean(),color='red',label='Average Points',linewidth=4)\nplt.yticks(np.arange(70,105,2),fontsize=20)\nplt.annotate('Avg Points',(-1,top['Total_Points'].mean() + 0.5),fontsize = 40,fontweight='bold')\na=0\nfor index,row in top.iterrows():\n    b=row.Total_Points\n    plt.annotate(row.Team,(a,b+.5),fontsize=20,fontweight='bold')\n    a=a+1\nplt.xlabel('Season',fontsize=50)\nplt.ylabel('Points',fontsize=50)\nplt.title('Premier League Champions (Points over the years) ',fontsize=60)\nplt.legend(loc=2,fontsize=35)\nplt.xticks(top.index,rotation=60,fontsize=20)\nax.set_xticklabels(top['Season'])","87308ce8":"ax = top.plot(kind='line',color='sandybrown',y='GF',grid=True,figsize=(47,20),label='Goals Scored',linestyle='-',marker='D',markevery=1,markersize=15, fillstyle='full',markerfacecolor='sandybrown')\nplt.axhline(y=top['GF'].mean(),color='red',label='Average Goals Scored',linewidth=4)\nplt.yticks(np.arange(65,111,3),fontsize=20)\n\nplt.annotate('Avg Goals Scored',(-1,top['GF'].mean() + 0.5),fontsize = 40,fontweight='bold')\na=0\nfor index,row in top.iterrows():\n    b=row.GF\n    plt.annotate(row.Team,(a,b+.5),fontsize=20,fontweight='bold')\n    a=a+1\n\n\nplt.xlabel('Season',fontsize=50)\nplt.ylabel('Goals',fontsize=50)\nplt.title('Premier League Champions (Goals over the years) ',fontsize=60)\nplt.legend(loc=2,fontsize=35)\nplt.xticks(top.index,rotation=60,fontsize=20)\nax.set_xticklabels(top['Season'])","18bf07d7":"ax = rup.plot(kind='line',color='black',y='Total_Points',grid=True,figsize=(47,20),label='Total_Points',linestyle='-',marker='D',markevery=1,markersize=15, fillstyle='full',markerfacecolor='sandybrown')\nplt.axhline(y=rup['Total_Points'].mean(),color='red',label='Average Points',linewidth=4)\nplt.yticks(np.arange(60,93,2),fontsize=20)\nplt.annotate('Avg Points',(-1,rup['Total_Points'].mean() + 0.5),fontsize = 40,fontweight='bold')\na=0\nfor index,row in rup.iterrows():\n    b=row.Total_Points\n    plt.annotate(row.Team,(a,b+.5),fontsize=20,fontweight='bold')\n    a=a+1\nplt.xlabel('Season',fontsize=50)\nplt.ylabel('Points',fontsize=50)\nplt.title('Premier League Runners Up (Points over the years) ',fontsize=60)\nplt.legend(loc=4,fontsize=35)\nplt.xticks(rup.index,rotation=60,fontsize=20)\nax.set_xticklabels(rup['Season'])","1ca8c1b5":"ax = rup.plot(kind='line',color='black',y='GF',grid=True,figsize=(47,20),label='Goals Scored',linestyle='-',marker='D',markevery=1,markersize=15, fillstyle='full',markerfacecolor='sandybrown')\nplt.axhline(y=rup['GF'].mean(),color='red',label='Average Goals Scored',linewidth=4)\nplt.yticks(np.arange(55,107,3),fontsize=20)\n\nplt.annotate('Avg Goals Scored',(-1,rup['GF'].mean() + 0.5),fontsize = 40,fontweight='bold')\na=0\nfor index,row in rup.iterrows():\n    b=row.GF\n    plt.annotate(row.Team,(a,b+.5),fontsize=20,fontweight='bold')\n    a=a+1\n\n\nplt.xlabel('Season',fontsize=50)\nplt.ylabel('Goals',fontsize=50)\nplt.title('Premier League Runners Up (Goals over the years) ',fontsize=60)\nplt.legend(loc=2,fontsize=35)\nplt.xticks(rup.index,rotation=60,fontsize=20)\nax.set_xticklabels(rup['Season'])","c67d51d3":"## 18th postion team Data for every Season to see trending\nrel = pt_table[(pt_table['Rank']==18) & (pt_table['Season'] != '1993-94') & (pt_table['Season'] != '1994-95')]\nrel.set_index('Season',drop=True,inplace=True)\nrel=rel.reset_index()   ##set and reset done becuase otherwise it was showing irregular spaces in x axis of the plot\n\n\nax = rel.plot(kind='line',color='sandybrown',y='Total_Points',figsize=(48,20),label='Total_Points',linestyle='-',marker='D',markevery=1,markersize=10, fillstyle='full',markerfacecolor='sandybrown')\nplt.axhline(y=rel['Total_Points'].mean(),color='red',label='Average Points',linewidth=4)\nplt.yticks(np.arange(25,50,2),fontsize=20)\nplt.annotate('Avg Points',(-1,rel['Total_Points'].mean() + 0.5),fontsize = 40,fontweight='bold')\na=0\nfor index,row in rel.iterrows():\n    b=row.Total_Points\n    plt.annotate(row.Team,(a,b+.5),fontsize=20,fontweight='bold')\n    a=a+1\nplt.xlabel('Season',fontsize=50)\nplt.ylabel('Points',fontsize=50)\nplt.title('Premier League Relegation Border (Points over the years) ',fontsize=60)\nplt.legend(loc=2,fontsize=35)\nplt.xticks(rel.index,rotation=60,fontsize=20)\nax.set_xticklabels(rel['Season'])\nplt.grid()","a3a06d80":"ax = rel.plot(kind='line',color='sandybrown',y='GF',grid=True,figsize=(47,20),label='Goals Scored',linestyle='-',marker='D',markevery=1,markersize=15, fillstyle='full',markerfacecolor='sandybrown')\nplt.axhline(y=rel['GF'].mean(),color='red',label='Average Goals Scored',linewidth=4)\nplt.yticks(np.arange(25,52,1),fontsize=20)\n\nplt.annotate('Avg Goals Scored',(-1,rel['GF'].mean() + 0.5),fontsize = 40,fontweight='bold')\na=0\nfor index,row in rel.iterrows():\n    b=row.GF\n    plt.annotate(row.Team,(a,b+.5),fontsize=20,fontweight='bold')\n    a=a+1\n\n\nplt.xlabel('Season',fontsize=50)\nplt.ylabel('Goals',fontsize=50)\nplt.title('Premier League Relegation Border (Goals over the years) ',fontsize=60)\nplt.legend(loc=2,fontsize=35)\nplt.xticks(rel.index,rotation=60,fontsize=20)\nax.set_xticklabels(rel['Season'])","945ef8f5":"all_season = ['Arsenal','Chelsea','Liverpool','Everton','Man United','Tottenham']\n\n\npivot_ui(pt_table,rows=['Team'],cols=['Season'],vals=['Rank'],\n         aggregatorName='List Unique Values',rendererName='Line Chart',\n        inclusions= {'Team':all_season})\n","8f947ba0":"#Weekly Progress of Teams in the league by Game Week\n## Skipping first 2 seasons as the rules changed from 1995 to allow only 20 teams (38 Game weeks)\n\nleague_prog = pl_df[(pl_df['Season'] !='1993-94') & (pl_df['Season'] !='1994-95')].copy()\n\ndef result(row): ##Function to assign HomeTeam or AwayTeam as a winner\n    \n    if(row['FTR']=='D'):\n        return row['FTR']\n    \n    elif (row['Team'] == row['HomeTeam']):\n        if (row['FTR'] == 'H'):\n            return \"W\"\n        else :\n            return \"L\"\n    elif (row['Team'] != row['HomeTeam']):\n        if (row['FTR'] == 'A'):\n            return \"W\"\n        else:\n            return \"L\"\n\ndef goaldiff(row): ##Function to assign HomeTeam or AwayTeam as a winner\n    \n    if (row['Team'] == row['HomeTeam']):\n        return (row['FTHG']-row['FTAG'])\n    else :\n        return (row['FTAG']-row['FTHG'])\n    \nseason_list=league_prog.Season.unique()\nweek_league=pd.DataFrame()\nfor j in season_list:\n    team_list = league_prog[league_prog['Season']==j].HomeTeam.unique()\n    season_temp=pd.DataFrame()\n    for i in team_list:\n        a = pd.DataFrame(league_prog[(league_prog['Season']==j) & ((league_prog['HomeTeam']==i)|(league_prog['AwayTeam']==i))].sort_values(by=\"New_Date\")[['FTR','HomeTeam','Season','FTHG','FTAG']])\n        a[\"Team\"] = i\n        a.loc[(a['Season']==j)&(a['Team']==i),'Game Week'] = np.arange(1,39)\n        a['Game Week']=a['Game Week'].astype('Int64')\n        a['Result']= a.apply(result,axis=1)\n        a['GoalDiff']=a.apply(goaldiff,axis=1)\n        a.drop(['FTR','HomeTeam'],axis=1,inplace=True)\n        season_temp=pd.concat([season_temp,a])\n    week_league=pd.concat([week_league,season_temp])\n\nweek_league['Points']=week_league['Result'].replace(['W','D','L'],[3,1,0]) ## Assign points as per Draw, Win or Loss\nweek_league['CumPoints']=week_league.groupby(['Season','Team'])['Points'].cumsum() ## Assign week over week Cumulative Points\nweek_league['TestRank']=week_league.groupby(['Season','Game Week'])['CumPoints'].rank(method='min',ascending=False)\nweek_league['fin'] = week_league.groupby(['Season','Game Week','TestRank'])['GoalDiff'].rank(method='first',ascending=False)\nweek_league['TestRank']=np.where((week_league['fin'] > 1),(week_league['TestRank']+week_league['fin'] - 1),week_league['TestRank'])\nweek_league.drop('fin',axis=1,inplace=True)\n","346899bf":"pivot_ui(week_league,rows=['Season','Team'],cols=['Game Week'],vals=['Result'],aggregatorName='List Unique Values',pvtTotal={'display':False},pvtTotalLabel={'display':False},pvtGrandTotal={'display':False},outfile_path='weekly_form.html')\npivot_ui(week_league,rows=['Season','Team'],cols=['Game Week'],vals=['CumPoints'],aggregatorName='Integer Sum',pvtTotal={'display':False},pvtTotalLabel={'display':False},pvtGrandTotal={'display':False},outfile_path='weekly_points.html')\n\nnew_1 = 2 # open in a new tab\nurl_1 = \"weekly_form.html\"\nwebbrowser.open(url_1,new=new_1)\n\n\n\nnew_2 = 2 # open in a new tab\nurl_2 = \"weekly_points.html\"\nwebbrowser.open(url_2,new=new_2)","9a985c33":"#Update Plot Function to dynamically update the plot based on slider and Team values\ndef update_plot(season_no,team_no):\n    season_list = list(week_league.Season.unique())\n    team_list = list(week_league[week_league['Season']==season_list[season_no]].Team.unique())\n    new_data = dict(x=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_list[team_no])]['Game Week'].tolist(), \n                  y=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_list[team_no])].CumPoints.tolist(), \n                  t=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_list[team_no])].Team.tolist(),\n                  r=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_list[team_no])].Result.tolist(), \n                  s=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_list[team_no])].Season.tolist())\n    source.data = new_data\n    push_notebook()\n    \n\n\n# features to plot \nsource = ColumnDataSource(dict(x=week_league[(week_league['Season']=='1995-96')&(week_league['Team']=='Arsenal')]['Game Week'].tolist(), \n                             y=week_league[(week_league['Season'] =='1995-96')&(week_league['Team']=='Arsenal')].CumPoints.tolist(), \n                             t=week_league[(week_league['Season'] =='1995-96')&(week_league['Team']=='Arsenal')].Team.tolist(), \n                             r=week_league[(week_league['Season'] =='1995-96')&(week_league['Team']=='Arsenal')].Result.tolist(), \n                             s=week_league[(week_league['Season']=='1995-96')&(week_league['Team']=='Arsenal')].Season.tolist()))\n\n# define the plot size \nplot = Figure(plot_width=900, plot_height=700, tools=[HoverTool(tooltips=[('Week','@x'),('Points','@y'),('Result','@r')],show_arrow=False)], \n              x_axis_label='Game Week',y_axis_label='Points',title = 'League Progress Of a Team(Week over Week Change in Points)')\n\nplot.circle(x='x', y='y', fill_alpha=10, source=source, color='blue',legend_field='s',size=5)\nplot.line(x='x', y='y',legend_field='t',source=source,color='red',line_width=1.5)\nplot.legend.location = 'top_left'\nplot.legend.title = 'Season and Team'\nplot.x_range = Range1d(start=1,end=38)\nplot.y_range = Range1d(start=0,end=100)\n\n\nfrom ipywidgets import interact\ninteract(update_plot, season_no=(0,22,1),team_no=(0,19,1))\nshow(plot, notebook_handle=True)","f7dbdddc":"#Update Plot Function to dynamically update the plot based on slider values\ndef update_plot(season_no,team_no):\n    season_list = list(week_league.Season.unique())\n    #team_list = list(week_league[week_league['Season']==season_list[season_no]].Team.unique())\n    new_data = dict(x=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_no)]['Game Week'].tolist(), \n                  y=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_no)].TestRank.tolist(), \n                  t=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_no)].Team.tolist(),\n                  r=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_no)].Result.tolist(), \n                  s=week_league[(week_league['Season'] == season_list[season_no])&(week_league['Team']==team_no)].Season.tolist())\n    source.data = new_data\n    push_notebook()\n    \n\n\n# features to plot \nsource = ColumnDataSource(dict(x=week_league[(week_league['Season']=='1995-96')&(week_league['Team']=='Arsenal')]['Game Week'].tolist(), \n                             y=week_league[(week_league['Season'] =='1995-96')&(week_league['Team']=='Arsenal')].TestRank.tolist(), \n                             t=week_league[(week_league['Season'] =='1995-96')&(week_league['Team']=='Arsenal')].Team.tolist(), \n                             r=week_league[(week_league['Season'] =='1995-96')&(week_league['Team']=='Arsenal')].Result.tolist(), \n                             s=week_league[(week_league['Season']=='1995-96')&(week_league['Team']=='Arsenal')].Season.tolist()))\n\n# define the plot size \nplot = Figure(plot_width=900, plot_height=700, tools=[HoverTool(tooltips=[('Week','@x'),('Rank','@y'),('Team','@t')],show_arrow=False)], \n              x_axis_label='Game Week',y_axis_label='Rank',title = 'League Progress Of a Team(Change in Ranks by Game Week)')\n\nplot.circle(x='x', y='y', fill_alpha=10, source=source, color='blue',legend_field='s',size=5)\nplot.line(x='x', y='y',legend_field='t',source=source,color='red',line_width=1.5)\nplot.legend.location = 'top_center'\nplot.legend.title = 'Season and Team'\nplot.x_range = Range1d(start=1,end=38)\nplot.y_range = Range1d(start=0,end=21)\n\n\nfrom ipywidgets import interact\ninteract(update_plot, season_no=(0,22,1),team_no=list(week_league.Team.unique()))\nshow(plot, notebook_handle=True)","707d932a":"sns.pairplot(data=pt_table[['GF', 'GA', 'GD','Rank']], size=2.5, diag_kind='kde')\n","5b141f55":"scored=pt_table.groupby('Season')['GF'].max().rename(\"Max Goals Scored\")\nconcd=pt_table.groupby('Season')['GA'].min().rename(\"Min Goals Conceded\")\ndiff=pt_table.groupby('Season')['GD'].max().rename(\"Max Goals Difference\")\nmax_min=pd.concat([scored,concd,diff],axis=1).reset_index()\nmax_min\n\ntop[\"Stat1\"]=np.where((top['Season']==max_min['Season'])&(top['GF']==max_min['Max Goals Scored']),1,0)\ntop[\"Stat2\"]=np.where((top['Season']==max_min['Season'])&(top['GA']==max_min['Min Goals Conceded']),1,0)\ntop[\"Stat3\"]=np.where((top['Season']==max_min['Season'])&(top['GD']==max_min['Max Goals Difference']),1,0)\nGoal_Scored= 100*top[top['Stat1']==1]['Stat1'].count()\/top['Stat1'].count()\nGoal_Conceded=100*top[top['Stat2']==1]['Stat2'].count()\/top['Stat2'].count()\nGoal_Difference= 100*top[top['Stat3']==1]['Stat3'].count()\/top['Stat3'].count()\nAll3=100*(top[(top['Stat1']==1)&(top['Stat2']==1)&(top['Stat3']==1)]['Stat1'].count()\/top['Stat3'].count())\nNotAny=100*(top[(top['Stat1']!=1)&(top['Stat2']!=1)&(top['Stat3']!=1)]['Stat1'].count()\/top['Stat3'].count())\n\nmy_list=[Goal_Scored,Goal_Conceded,Goal_Difference,All3,NotAny]\nmy_list1=['Most Scored','Least Conceded','Best Goal Difference','Best in All 3','Not in Any Tops']\nWin=pd.Series(my_list, index=my_list1)\n\n##setting Font\nfont = {'family': 'fantasy',\n        'color':  'navy',\n        'weight': 'normal',\n        'size': 30,\n        }\n\n#Plot\nWin.plot(kind='barh',figsize=(20,10),color=['red','blue','green','black','sandybrown'])   #colormap='Pastel2'\nplt.xlabel(\"Percentage\",fontsize=20)\nplt.title('Percentage of Titles Won',fontdict=font)\nplt.xticks(np.arange(0,101,5),fontsize=15)\nplt.yticks(fontsize=15)\nplt.grid(True)\n\n#Annotate\na=0\nfor i in Win:\n    plt.text(i-4,a-0.05 ,s=str(int(i)) +'%', horizontalalignment= 'center', verticalalignment='bottom', fontdict={'family':'serif','size':20,'color':'white','weight':'bold'})\n    a=a+1\n\n\n\n\n","72db9866":"<a id=section50104><\/a>\n#### 5.1.4 Comebacks per Seaon\n\nComebacks are defined as to when a team losing at halftime goes on to win the match at full time.","e307883a":"#### Observations : \n\n- Over the seasons **Manchester United** has least **Home Ground Loss%** of **~10%** which means they have just lost 10\/100 games played at Old Trafford(Home)\n- **Middlesboro** and **Arsenal** are at postion **2** and **3** respectively.\n- **Crystal Palace** has highest **Home Ground Loss %** of **~49%** which means they have lost 49\/100 games played at Home.","17ccded8":"#### Observations : \n\n - **Manchester United** have won the Leage most no. of times **12**.\n - From the past seasons,in order to **win the League**, a team would need on an average **87 points** and score an average of **81 Goals**\n - For **second postion (1st Runners Up)**, **80 Points** and **74 Goals** is the average.\n \n - **Champions :**\n     - **Max Points** as Champions     - **Man City (100 Points) in 2017-18**\n     - **Least Points** as Champions   - **Man United (75 points) in 1996-97**\n     \n     - **Max Goals** as Champions      - **Man City (106 Goals) in 2017-18**\n     - **Least Goals** as Champions   - **Arsenal, Man United and Leicester (68 Goals) in 1997-98, 2008-09 and 2015-16** respectively.\n<\/br>    \n - **Runner's Up :**\n     - **Max Points** as Runners Up       - **Man United (89 Points) in 2011-12**\n     - **Least Points** as Runners Up     - **Newcastle (68 Points) in 1996-97**\n     \n     - **Max Goals** as Runners Up      - **Liverpool (101 Goals) in 2013-14**\n     - **Least Goals** as Runners Up    - **Arsenal (59 Goals) in 1998-99**","e312f451":"#### Away Games Stats","65fe4690":"<a id=section3><\/a>\n## 3. Loading Data","7dce07d2":"<a id=section50207><\/a>\n#### 5.2.7 Away Goals scored by Teams","b43262cf":"#### Observations : \n\n- Over the seasons **Arsenal** has most **Home Comebacks** of **18 matches** which means they went on to win 18 matches at Home when they were trailing at half time.They are closely followed by **Tottenham** with **15** matches.\n- **6** clubs, namely : **Brighton**, **Middleboro**, **Bradford** ,**Blackpool**, **Huddersfield** and **Barnsley** have **no home comebacks.**","88abb1b5":"#### Observations : \n\n- Over the seasons **Manchester United** has the best **Goals per Away Game** ratio of **1.7** Goals\/Away Game\n- **Arsenal** and **Chelsea** are at postion **2** and **3** respectively.\n- **Brighton** has the worst **Goals per Away Game** ratio of **0.6** Goals\/Away Game","0ec2292a":"#### Observations :\n\n-  All seasons have more Home Goals than Away goals hinting towards possible **Home Ground Advantage for goal scoring.**","097b94cd":"<a id=section50410><\/a>\n#### 5.4.10 What wins more titles - Attack or Defense?","c29bc3a3":"<a id=section50302><\/a>\n### 5.3.2 Best and Worst Stats over all Seasons","dff576e7":"#### Observations:\n- **6** Teams - **Arsenal**, **Chelsea**, **Everton**, **Liverpool**, **Man United** and **Tottenham** have played in all **25 Seasons**\n- **Barnsley**, **Blackpool**, **Brighton**, **Cardiff**, **Huddersfield** ,**Middlesboro**, **Oldham** and **Swindon** have least i.e. **1** appearance.","37f768e0":"\n#   EDA on English Premier League Data\n\n<img src=\"https:\/\/raw.githubusercontent.com\/IshaanM24\/EDA\/master\/Images\/PL\/logo.png\" align='left'><br\/>\n\n\n                                                                                            \n\n\n### Submitted by : Ishaan Marwah","12cbbb53":"<a id=section50408c><\/a>\n#### c) League Progress of a Team over a Season - Weekly Rank","2421ae34":"<a id=section4><\/a>\n## 4. Data Preprocessing","707dadcf":"<a id=section50204><\/a>\n#### 5.2.4 Home Loss Percentage","b159ab1c":"<a id=section50303a><\/a>\n#### a) Total No. of Losses  and Total Wins (as magnitude) of Teams in a Season ","c9fbefa7":"<a id=section50102><\/a>\n#### 5.1.2 No. Of Teams per Season","33ec18e5":"#### Observations : \n\n- Best Home\/Away Goal ratio is for Season **2009-10**\n- Worst Home\/Away Goal ratio is for Season **2015-16** (more even spread of home and away goals)","bf458203":"#### Observations : \n\n- Over the seasons **Manchester United** has least **Home Ground Draw%** of **~17%** which means they have drawn 17\/100 games played at Old Trafford(Home)\n- **Brighton** and **Sheffield United** are teams with the best(highest) **Home Ground Draw %** which means they have drawn highest % of games played at home.","74eb1a16":"<a id=section50408><\/a>\n#### 5.4.8 How did a Team progress in the League (any Season)?","0b3498f7":"<a id=section6><\/a>\n### 6. Conclusions : ","22f371c1":"<a id=section50303c><\/a>\n#### c) Goals Scored and Goals Conceeded  (as Magnitude) by Teams in a Season","1a985c1a":"<a id=section50211><\/a>\n#### 5.2.11 Away Draw Percentage","8da63beb":"#### Profiling Results after data preprocessing -\n\nObservations :\n         - No. Of Variables            :   10\n         - No. Of Records\/Observations : 9664\n         - Missing Cells               :    0\nTypes Of Variables :\n         - Categorical : 5\n         - Numerical   : 4\n         - Date        : 1\n         \n- **Div** column was constant and thus dropped.\n- **Date** field made as datetime dtype and thus formatting issue fixed.\n- Missing values filled for  **HTHG**, **HTAG** and **HTR** columns.","b1a5fe62":"<a id=section201><\/a>\n### 2.1 Installations (one time)","2ad650d7":"<a id=section50408a><\/a>\n#### a) Weekly Progress - Form and Points (Combined Tabular View)","b3a58676":"<a id=section50203><\/a>\n#### 5.2.3 Home Win Percentage","c152ce0c":"As noted in Preprofiling, the **DATE** column is object type and has different formats. Using datetime to have all the values in common datetime format and dtype chenged to datetime for any further processes.","5212b657":"---","bb780304":"#### Observations : \n\n- Over the seasons **Man United** have the most **Away Comebacks** of **19 matches** which means they went on to win 19 matches at Away Grounds when they were trailing at half time.They are followed by **Chelsea** with **15** matches.\n- **15** clubs, as seen above, have **never** had a comeback at Away Grounds.","f411b93b":"<a id=section50403><\/a>\n#### 5.4.3 What is the Points Trend for Runners-Up over the Seasons?","6f35ade4":"#### Observations : \n\n- There is a strong co-relation between Goals Scored, Goals Conceded, Goal Difference and Ranking of a Team in the league.\n- **More Goals Scored** ---> **Better Ranking**\n- **Less Goals Conceded**  ---> **Better Ranking**\n- **High Goal Difference** ---> **Better Ranking**\n\n**Let us now look into a bit detailed view to analyse which parameter has affected the Ranking most over the years.**","a1d16a14":"#### Observations : \n\n- **Maximum Wins** in a single season is in **Season 2017-18** **(32)**  -- **Man City**\n- **Minimum Wins** is in **Season 2007-08** **(1)** -- **Derby**\n- **Most Defeats** in a Season is in **Season 1994-95 , 2005-06 and 2007-08** **(29)** -- **Ipswich**, **Sunderland** and **Derby** respectively.\n- **Least Defeats** is in **Season 2003-04** **(0)** -- **Arsenal**","481295b1":"#### Observations : \n\n- Over the seasons **Barnsley** have the least **Away Ground Draw%** of **5%** which means they have drawn 5\/100 games played at Away grounds\n- **Swindon** and **Fulham** are teams with the best(highest) **Away Ground Draw %** which means they have drawn highest % of games played at Away Grounds.","6525efcc":"#### Observations : \n\n- Over the seasons **Manchester United** have the least **Away Ground Loss%** of **22%** which means they have just lost 22\/100 games played at Away Grounds.\n- **Arsenal** and **Chelsea** are at postion **2** and **3** respectively.\n- **Barnsley** has highest **Away Ground Loss %** of **~79%** which means they have lost 79\/100 games played at Away Grounds.","50969abf":"### Sample Points Table for a Season (2011-12)","bf20d7af":"#### Observations : \n\n- Over the seasons **Manchester United** has best **Goals per Home Game** ratio of **2.1** Goals\/Home Game\n- **Arsenal** and **Chelsea** are at postion **2** and **3** respectively.\n- **Huddersfield** has the worst **Goals per Home Game** ratio of **0.8** Goals\/Home Game","26f94893":"<a id=section50401><\/a>\n#### 5.4.1 Which club has won the Premier League over Seasons and what is the Points Trend?","26ae2685":" ### Observations : \n \n             - No. Of Variables            :   11\n             - No. Of Records\/Observations : 9664\n             - Missing Cells               : 2772 (2.6%)\n  \n ### Types Of Variables :\n \n             - Categorical : 7\n             - Numerical   : 4\n \n \n - **Div** column has only 1 value **E0** and can be dropped\n - **Date** has **high cardinality** (expected)\n     - **Date** field has different formats across like **'dd\/mm\/yy'** or **'dd\/mm\/yyyy'** \n - **HTHG** , **HTAG** and **HTR** have **9.6%** missing values (**924** values in each) \n - **FTHG** and  **FTAG** has some values as **0s** (expected)\n ","9480f375":"#### Observations\n\n- Even though the total goals in first 2 seasons is higher (due to more teams), the Goals\/Game is low. **This hints that overall Season Quality in terms of goals was low and possible reason to reduce the teams in the following seasons.**\n- Best and worst Goals per Game ratio is in accordance with the Total Goals scored i.e. season **2011-12** and **2006-07** respectively. ","3202f692":"<a id=section501><\/a>\n### 5.1 Season Level Analysis\n\nAnalysis of no.of matches, teams, total goals, goals per match, distribution of goals (home and away)and comebacks at the  **SEASON** Level (Season Wise)","0dcdce72":"<a id=section50407><\/a>\n#### 5.4.7 How does the clubs that played in all Seasons fared in terms of Table Rank ?","cfcd900a":"<a id=section50303><\/a>\n### 5.3.3 Teams associated with above Stats over all Seasons","9896f885":"<a id=section50201><\/a>\n#### 5.2.1 Home Goals scored by Teams","e85f8123":"<a id=section302><\/a>\n### 3.2 Description of Dataset","a52d60c2":"- Statistically,in order to **Win a League**, on an average a team should score **81 Goals** and secure a total of **87 Points**.\n- Statistically,in order to **Sustain in the League**, on an average a team should score **39 Goals** and secure a total of **36 Points**.\n\n- As a Team with Best Goal Difference in a Season Won the Title 68% of the times, a Team should consider **Defence** as an important measure to win a league and not only attack or Goal Scoring. **This attribute can be used by the teams while Trading Players and during team building phase**\n\n- As we have seen throughout our analysis that various features like wins and losses, goals scored and goals conceded hints towards a **Home Ground Advantage**.  Possible reasons for the same are Home Crowd creating pressure on the Away Teams behaving as a non playing 12th man and alsoacquintance with **\"Ground Size and Pitch\"** with the daily practices. While crows is something that is not controllable, there could possibly be a standardaization done with ground sizes and Pitches to mitigate the advantage. ","213bf646":"<a id=section50208><\/a>\n#### 5.2.8 Goals per Away Game","f1abe8cd":"<a id=section5><\/a>\n## 5. Exploratory Data Analysis","70a61498":"<a id=section50103><\/a>\n#### 5.1.3 Goals per Season","07846fbb":"<a id=section50303b><\/a>\n#### b) Best\/Worst Goal Difference and Total Points (as Magnitude) of Teams in a Season","b47ba465":"<a id=section50213><\/a>\n#### 5.2.13 Home and Away Comeback Percentage ","d3ae5283":"#### Observations : \n\n- Over the seasons **Manchester United** have the best **Away Ground Win %** of **55%** which means United have won 55\/100 matches played at Away Grounds.\n- **Chelsea** and **Arsenal** are at postion **2** and **3** respectively.\n- **Swindon** has worst\/least **Away Ground Win %** of **4%** which means the have won just 4\/100 matches played at Home.","26a97541":"<a id=section50206><\/a>\n#### 5.2.6 Home Comebacks","cb6129e6":"#### Observations : \n\n- Over the seasons **Manchester United** has best **Home Ground Win%** of **~73%** which means United has won almost 73\/100 matches played at Old Trafford (Home)\n- **Arsenal** and **Chelsea** are at postion **2** and **3** respectively.\n- **Swindon** has worst\/least **Home Ground Win %** of **~20%** which means the have won just 20\/100 matches played at Home.","8bcba93b":"<a id=section2><\/a>\n## 2. Setting up Packages\/Environment\n","465b0a54":"<a id=section50210><\/a>\n#### 5.2.10 Away Loss Percentage","f714d611":"#### Observations : \n\n- From the 6 clubs that have played all Seasons, **Tottenham**, **Liverpool** and **Everton** have **never won the Championship**. \n        ++Liverpool recently won the Championship this year but that is not part of out dataset\n- **Manchester United** has been the most successful club in terms of Championship Titles.\n- **Everton** and **Tottenham** have been the least consistent clubs among the 6 clubs.","a81e8da8":"- First 2 seasons of Premier League had **22 teams which was reduced to 20 teams from the 1995-96 season**. As per our analysis, it looks like the Quality of games was low in the initial seasons and may have triggered the move to reduce the number of teams. Another possible reason to reduce teams could be number of games(days) in a season as there is a break needed for International Games as well in between.\n- All seasons have **more Home Goals than Away goals** hinting towards **possible Home Ground Advantage for goal scoring**.\n- **Manchester United** have emerged as the most consistent and successful club in the Premier League History in terms of **Goals Scored**, **Wins** [Home(**73%**) and Away(**55%**)], **Draws**, **Loss** [Home(**10%**) and Away(**22%**)], **Goals Conceded** and **Titles Won (12)**. \n- **Arsenal**, **Chelsea**, **Everton**, **Liverpool**, **Man United** and **Tottenham** have played in all **25 Seasons**.\n- **Maximum Wins** in a single season is in **Season 2017-18** -> **Man City with 32 wins**\n- **Minimum Wins** is in **Season 2007-08** -> **Derby with 1 win**\n- **Most Defeats** in a Season is in **Season 1994-95 , 2005-06 and 2007-08** -> **Ipswich**, **Sunderland** and **Derby** respectively with **29 Defeats**\n- **Least Defeats** is in **Season 2003-04** -> **Arsenal with 0 defeats**\n- **Maximum Points** in a single season is in **Season 2017-18** -> **Manchester City with 100 points**\n- **Minimum Points** is in **Season 2007-08** -> **Derby with 11 points**\n- **Maximum Goal Difference** in a single season is in **Season 2017-18** -> **Manchester City with +79 Goal Diff**\n- **Minimum Goal Difference** is in **Season 2007-08** -> **Derby with -69 Goal Diff**\n- **Maximum Goals Scored** in a single season is in **Season 2017-18** -> **Manchester City with 106 Goals**\n- **Minimum Goals Scored** is in **Season 2007-08** -> **Derby with 20 Goals**\n- **Maximum Goals Conceded** in a single season is in **Season 1993-94** -> **Swindon with 100 Goals**\n- **Minimum Goals Conceded** is in **Season 2004-05** -> **Chelsea with 15 Goals**\n\n- A Team with **Best Goal Difference** in a Season **Won the Title 68% of the times.**\n\n- In terms of **Half Time Comebacks**, **Arsenal** and **Manchester United** are the teams leading at **Home** and **Away** with **18** and **19** comebacks, respectively.\n","e74239d4":"<a id=section601><\/a>\n#### 6.1. Actionable Insights : ","dac7ea9c":"Dropping **Div** column as its constant throughout.","104b6677":"<a id=section50402><\/a>\n#### 5.4.2 How Many Goals Were scored by the Winner Clubs over the Seasons?","4dd85e47":"#### Observations : \n- Amonng the teams which have won the league ever in history, **Man United** have won the league **most** no. of times **(12)** while **Blackburn and Leicester** have won the league least **(1)** time.\n- **Maximum Wins** in a single season is in **Season 2017-18** **(32)** while **Minimum Wins** is in **Season 2007-08** **(1)**\n- **Maximum Points** in a single season is in **Season 2017-18** **(100)** while **Minimum Points** is in **Season 2007-08** **(11)**\n- **Most Defeats** in a Season is in **Season 1994-95 , 2005-06 and 2007-08** **(29)** while the **Least Defeats** is in **Season 2003-04** **(0)**\n-  **Maximum Goals** in a single season is in **Season 2017-18** **(106)** while **Minimum Goals** is in **Season 2007-08** **(20)**\n-  **Maximum Goal Difference** in a single season is in **Season 2017-18** **(79)** while **Minimum Goal Difference** is in **Season 2007-08** **(-69)**\n-  **Maximum Goals Conceded** in a single season is in **Season 1993-94** **(100)** while **Minimum Goals Conceded** is in **Season 2004-05** **(15)**\n- The **Biggest Margin** between top 2 teams is of **19 Points** in the season **2017-18**\n- The **Smallest Margin** between top 2 teams is of **0 Points** in the season **2011-12** and the winner was decided on the basis of **Goal Difference** (As per Premier League Rules and the same is applied while building the Points Table above)","3ba154ec":"#### Observations : \n\n- The bottom 3 teams in the points table are relegated from the league. We can see that on an average a team needs **36 Points** and should score **39 Goals** to have a chance to sustain the league.\n\n- **Relegation Zone :**\n     - **Max Points** but still relegated      - **West Ham (42 Points) in 2002-03**\n     - **Max Goals** but still relegated       - **Leicester (48 Goals) in 2003-04**\n     \n     ","9b14d58d":"---","39ff51b9":"<a id=section303><\/a>\n### 3.3 Pandas Profiling before Data Preprocessing","93f8a28d":"#### Observations: \n\n- No. of games in first 2 seasons **1993-94** and **1994-95** are higher than all other seasons. This is beacuase the format of the tournament was changed after 1994-95 Season.","f2a00ebe":"#### Over All Points Table for All Seasons","261459a3":"#### Observations : \n\n- **Maximum Points** in a single season is in **Season 2017-18** **(100)** -- **Manchester City**\n- **Minimum Points** is in **Season 2007-08** **(11)** -- **Derby**\n- **Maximum Goal Difference** in a single season is in **Season 2017-18** **(79)** -- **Manchester City**\n- **Minimum Goal Difference** is in **Season 2007-08** **(-69)**  -- **Derby**","95fca1a8":"- The **English Premier League** is one of the most popular domestic league in the world.\n- This dataset contains **25 years** of EPL matches history with **goal details** and **results**.\n\n- Column Details : \n\n| Column Name                    | Description                                                                                |\n| -------------------------------|:------------------------------------------------------------------------------------------:| \n| Div                            | League Division                                                                            | \n| Date                           | Match Date                                                                                 | \n| HomeTeam                       | Team playing at the Home Ground                                                            | \n| AwayTeam                       | Team playing at the Away ground                                                            |\n| FTHG                           | Full-Time Home Team Goals                                                                  |\n| FTAG                           | Full-Time Away  Team Goals                                                                 |\n| FTR                            | Full-Time Result (H=Home Win, D=Draw, A=Away Win)                                          |\n| HTHG                           | Half-Time Home Team Goals                                                                  | \n| HTAG                           | Half-Time Away Team Goals                                                                  |\n| HTR                            | Half-Time Result (H=Home Win, D=Draw, A=Away Win)                                          |\n| Season                         | Premier Leage Season                                                                       |","1330dbb6":"<a id=section5010303><\/a>\n#### 5.1.3.3 Ratio of Home Goals to Away Goals per Season","d5a3d4a4":"<a id=section50404><\/a>\n#### 5.4.4 How Many Goals Were scored by the Runners-Up over the Seasons?","cfddef47":"#### Observations : \n\n- Over the seasons **Manchester United** has scored most number of goals at **Away Grounds.**\n- **Arsenal** and **Chelsea** are at postion **2** and **3** respectively.\n- **Brighton** and **Barnsley** are the lowest goal scoring teams at **Away Grounds.**","2b58287c":"<a id=section50409><\/a>\n#### 5.4.9 How does Goals Scored, Goals Conceded and Goal Difference relate\/correspond to Ranking of a Team?","790bc09f":"<a id=section5010301><\/a>\n#### 5.1.3.1 Goals per Game in a Season","7308a706":"<a id=section50408b><\/a>\n#### b) League Progress of a Team over a Season - Points and Results","08ebb30b":"<a id=section50205><\/a>\n#### 5.2.5 Home Draw Percentage","5ea1acd6":"#### Observations : \n\n-  **Maximum Goals** in a single season is in **Season 2017-18** **(106)** -- **Manchester City**\n-  **Minimum Goals** is in **Season 2007-08** **(20)**  -- **Derby**\n-  **Maximum Goals Conceded** in a single season is in **Season 1993-94** **(100)** -- **Swindon**\n-  **Minimum Goals Conceded** is in **Season 2004-05** **(15)**  -- **Chelsea**","a2d80ded":"#### Observations: \n\nWith the availbe dataset, it is evident that \n\n- A Team with **Best Goal Difference** in a Season **Won the Title 68% of the times.**\n- Only defence, i.e. **Least Goals Conceded**, helped Win the title only **40%** of the times. ","4e41a9c3":"<a id=section50202><\/a>\n####  5.2.2 Goals per Home Game","20a6b6cb":"<a id=section50406><\/a>\n#### 5.4.6 What is the Goal Trend of Relegation Zone over the Seasons (18th Position Team from 1995-96 Season)?","08d24ec6":"#### Home Games Stats","8e40edc7":"#### Observations: \n\n- After the no. of teams were reduced post **1994-95**, most goals were score in the season **2011-12** and least in **2006-07**. There is no set pattern observed in the game.","a54cb066":"#### Observations : \n\n- Over the seasons **Manchester United** has scored most number of goals overall and at **Home** Ground.\n- **Arsenal** and **Chelsea** are at postion **2** and **3** respectively.\n- **Huddersfield** and **Cardiff** are the lowest goal scoring teams overall and at **Home**","0552db10":"<a id=section50301><\/a>\n#### 5.3.1 Generating Points Table ","6b941a25":"This shows that all values for **HTHG** , **HTAG** and **HTR** in the seasons **1993-94** and **1994-95** are Null.\nWe replace the goal values as **0** and half time result as **D (draw)** for simplicity in below code and also as the rules for no. of teams and relegated teams changed post this season, most of our analysis will be on latest format of the tournament.","974dda3e":"<a id=section50209><\/a>\n#### 5.2.9 Away Win Percentage","94858619":"#### Observations:\n\n- The first 2 seasons has 22 teams while rest of the seasons had 20 teams particiapting.\n- This observation concludes why the no. of matches were higher in the first 2 seasons as seen in #1.","38c2362f":"####  Total Goals Scored by Each Team over all Seasons","5456f4d4":"<a id=section50101><\/a>\n#### 5.1.1 Total Games Per Season","3fa7ece4":"<a id=section1><\/a>\n## 1. Problem Statement\n\n\n### 1.1 Introduction :\n\nThe **Premier League** is the top level of the English football league system. Contested by **20 clubs**, it operates promotion and relegation with the English Football League. Seasons run from August to May with each team playing 38 matches (playing all 19 other teams both home and away)\n\nThe league held its **first season in 1992\u201393**. It was composed of **22 clubs for that season**.The number of clubs was reduced to **20, down from 22, in 1995** when four teams were relegated from the league and only two teams promoted.The top flight had only been expanded to 22 teams at the start of the 1991\u201392 season \u2013 the year prior to the formation of the Premier League.\n\nThe league changed its name from the FA Premier League to simply the Premier League in 2007.\n\n\n<img src ='https:\/\/raw.githubusercontent.com\/IshaanM24\/EDA\/master\/Images\/PL\/cup.jpg' >\n\n\n\nThe dataset availabe is used to explore the **English Premier League data**, so as to understand how it has fared across different seasons and evolved over the years. \n\n**Analysis to be Performed :** \n\n- Season level Analysis for football parameters - Matches, Wins, Losses, Goals(Home and Away), Comebacks.\n- Team level analysis for football parameters - Matches, Wins, Losses, Goals(Home and Away), Comebacks.\n- Anaylsis of Team per Season - Points Table, Champions, Runner's up, Relegation, League Progress\n\n**Try to Answer :**\n\n- Important Considerations to Sustain in the league (not being relegated)\n- How can a Team improve the chances to Win the League ?\n- Important factor to win a League - Attack or Defence?\n","88d25ec6":"<a id=section50212><\/a>\n#### 5.2.12 Away Comebacks","069d63b9":"<a id=section50405><\/a>\n#### 5.4.5 What is the Points Trend of Relegation Zone over the Seasons (18th Position Team from 1995-96 Season)?","beb11abe":"#### Observations:\n\n- No data in initial 2 seasons as the data was manipulated to be all Draws at Half Time (missing data)\n- Best Season in terms of comebacks was season **2012-13** (More games where the haltime result was changed) and the worst season was **1998-99** ","19f8ec0a":"<a id=section50214><\/a>\n#### 5.2.14 How Many Teams  have played in Different Seasons ?","2a939023":"<a id=section202><\/a>\n### 2.2 Import Packages","ad51b477":"- Insights from ```info()``` regarding our data:\n    - Data conisists of a total of **9664 rows** and **11 Columns**\n    - **7** columns of **object** datatype and **4** columns of **numeric** datatype\n    - Missing values in **3** columns, namely - **HTHG**,**HTAG** and **HTR**","a6e88652":"<a id=section504><\/a>\n### 5.4 Analysis through Questions","c035b851":"<a id=section402><\/a>\n### 4.2 Pandas Profiling After Data Preprocessing","9924befb":"<a id=section401><\/a>\n### 4.1 Data Preprocessing\n\nFixing the data for any issues before performing **EDA**","501d1a70":"<a id=section502><\/a>\n### 5.2 Team Level Analysis\n\nAnalysis of different game parameters of individual teams over all seasons. ","5a36328e":"<a id=section503><\/a>\n### 5.3 Cumulative Data related to per Team per Season","4f64ee3a":"<a id=section301><\/a>\n### 3.1 Importing dataset","11bc1ab1":"<a id=section5010302><\/a>\n#### 5.1.3.2 Distribution of Home and Away Team Goals per Season","3ac637a5":"## Table of Contents\n\n1. [Problem Statement](#section1)<br>\n2. [Setting up Packages\/Environment](#section2)<br>\n  - 2.1 [Installations(one time)](#section201)<br>\n  - 2.2 [Importing Packages](#section202)<br>\n3. [Loading Data](#section3)<br>\n  - 3.1 [Importing Dataset](#section301)<br>\n  - 3.2 [Description of the Datasets](#section302)<br>\n  - 3.3 [Pandas Profiling before Data Preprocessing](#section303)<br>\n4. [Data Preprocessing](#section4)<br>\n  - 4.1 [Data Preprocessing](#section401)<br>\n  - 4.2 [Pandas Profiling after Data Preprocessing](#section402)<br>\n5. [Exploratory Data Analysis](#section5)<br>\n  - 5.1 [**Season Level Analysis**](#section501)<br>\n    - 5.1.1 [Total Games Played  per Season](#section50101)<br>\n    - 5.1.2 [No. Of Teams per Season](#section50102)<br>\n    - 5.1.3 [Goals Scored per Season](#section50103)<br>\n        - 5.1.3.1 [Goals per Game in a Season](#section5010301)<br>\n        - 5.1.3.2 [Distribution of Home and Away Team Goals per Season](#section5010302)<br>\n        - 5.1.3.3 [Ratio of Home Goals to Away Goals per Season](#section5010303)<br>\n    - 5.1.4 [Comebacks per Seaon](#section50104)<br><br>\n    \n  - 5.2 [**Team Level Analysis**](#section502)<br>\n      - Total Goals Scored by Each Team over all Seasons.\n      - **HOME Games**\n          - 5.2.1 [Home Goals scored by Teams](#section50201)<br>\n          - 5.2.2 [Goals per Home Game](#section50202)<br>\n          - 5.2.3 [Home Win Percentage](#section50203)<br>\n          - 5.2.4 [Home Loss Percentage](#section50204)<br>\n          - 5.2.5 [Home Draw Percentage](#section50205)<br> \n          - 5.2.6 [Home Comebacks](#section50206)<br> \n      - **AWAY Games**\n          - 5.2.7 [Away Goals scored by Teams](#section50207)<br> \n          - 5.2.8 [Goals per Away Game](#section50208)<br>\n          - 5.2.9 [Away Win Percentage](#section50209)<br>\n          - 5.2.10 [Away Loss Percentage](#section50210)<br>\n          - 5.2.11 [Away Draw Percentage](#section50211)<br> \n          - 5.2.12 [Away Comebacks](#section50212)<br>\n      - 5.2.13 [Home and Away Comeback Percentage](#section50213)<br>\n      - 5.2.14 [How Many Teams  have played in Different Seasons ?](#section50214)<br><br>\n      \n  - 5.3 [**Analysis based on Season and Teams [Cumulative Data related to per Team per Season]**](#section503)<br>\n    - 5.3.1 [Generating Points Table](#section50301)<br>\n        - Home Game Stats\n        - Away Game Stats\n        - Points Table for all Seasons\n        - Sample View of Points Table for a Season (2011-12)\n    - 5.3.2 [Best and Worst Team Stats over all Seasons](#section50302)<br>\n    - 5.3.3 [Team Details with above Stats over all Seasons](#section50303)<br>\n        - a) [Total No. of Losses  and Total Wins (as magnitude) of Teams in a Season](#section50303a)<br>\n        - b) [Best\/Worst Goal Difference and Total Points (as Magnitude) of Teams in a Season](#section50303b)<br>\n        - c) [Goals Scored and Goals Conceded  (as Magnitude) by Teams in a Season](#section50303c)<br><br>\n          \n        \n  - 5.4 [**Analysis through Questions**](#section504)<br>\n    - 5.4.1 [Which clubs have won the Premier League over Seasons and what is the Points Trend?](#section50401)<br>\n    - 5.4.2 [How Many Goals Were scored by the Winner Clubs over the Seasons?](#section50402)<br>\n    - 5.4.3 [What is the Points Trend for Runners-Up over the Seasons?](#section50403)<br>\n    - 5.4.4 [How Many Goals Were scored by the Runners-Up over the Seasons?](#section50404)<br>\n    - 5.4.5 [What is the Points Trend of Relegation Zone over the Seasons (18th Position Team from 1995-96 Season)?](#section50405)<br>\n    - 5.4.6 [What is the Goal Trend of Relegation Zone over the Seasons (18th Position Team from 1995-96 Season)?](#section50406)<br>\n    - 5.4.7 [How does the clubs that played in all Seasons fared in terms of Table Rank?](#section50407)<br>\n    - 5.4.8 [How did a Team progress in the League (any Season)?](#section50408)<br>\n         - a) [Weekly Progress - Form and Points (Combined Tabular View)](#section50408a)<br>\n         - b) [League Progress of a Team over a Season - Points and Results](#section50408b)<br>\n         - c) [League Progress of a Team over a Season - Weekly Rank](#section50408b)<br>\n    - 5.4.9 [How does Goals Scored, Goals Conceded and Goal Difference relate\/correspond to Ranking of a Team?](#section50409)<br>\n    - 5.4.10 [What wins more titles - Attack or Defense?](#section50410)<br><br>\n    \n  - 6. [Conclusion](#section6)\n      - 6.1 [Actionable Insights](#section601)"}}