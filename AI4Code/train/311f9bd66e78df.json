{"cell_type":{"8610d878":"code","4d84b81c":"code","3fafc139":"code","e4804942":"code","e39b202e":"code","ec9a68a2":"code","903cf1bb":"code","85dccdb0":"code","a4f4408a":"code","3be692a7":"code","0fda27a9":"code","d9e14c52":"code","78ac490e":"code","15fabbd8":"code","8b7da306":"code","311126b3":"code","17c531c9":"code","95960006":"code","fe7e681d":"code","677032fc":"code","f0f1a4ed":"code","6e3bcd01":"code","6efee8c1":"code","1059c5a3":"code","bae2b280":"code","1cfde61d":"code","d97be5b9":"code","210da567":"code","cdfcec5e":"markdown","15bb30f4":"markdown","00f1cf4c":"markdown"},"source":{"8610d878":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf","4d84b81c":"data = pd.read_csv(\"..\/input\/chocolate-bar-ratings\/flavors_of_cacao.csv\")","3fafc139":"data","e4804942":"plt.figure(figsize=(12, 10))\nsns.heatmap(data.corr(), annot=True)\nplt.show()","e39b202e":"data.drop(['REF', 'Review\\nDate'], axis=1, inplace=True)","ec9a68a2":"data","903cf1bb":"data.isnull().sum()","85dccdb0":"data = data.dropna(axis=0)","a4f4408a":"data.dtypes","3be692a7":"data.columns = ['Company', 'SpecificOrigin', 'CocoaPercent', 'Location', 'Rating', 'BeanType', 'BroadOrigin']","0fda27a9":"data","d9e14c52":"def removePercents(data):\n    return data.apply(lambda x: float(x.strip('%')) \/ 100)","78ac490e":"data['CocoaPercent'] = removePercents(data['CocoaPercent'])","15fabbd8":"len(data['SpecificOrigin'].unique())","8b7da306":"categorical_features = ['Company', 'SpecificOrigin', 'Location', 'BeanType', 'BroadOrigin']","311126b3":"def onehot_encode(data, columns):\n    for column in columns:\n        dummies = pd.get_dummies(data[column])\n        data = pd.concat([data, dummies], axis=1)\n        data.drop(column, axis=1, inplace=True)\n    return data","17c531c9":"data = onehot_encode(data, categorical_features)","95960006":"y = data['Rating']\nX = data.drop('Rating', axis=1)","fe7e681d":"X","677032fc":"scaler = MinMaxScaler()\n\nX = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)","f0f1a4ed":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8)","6e3bcd01":"inputs = tf.keras.Input(shape=(1655,))\nx = tf.keras.layers.Dense(16, activation='relu')(inputs)\nx = tf.keras.layers.Dense(16, activation='relu')(x)\noutputs = tf.keras.layers.Dense(1)(x)\n\nmodel = tf.keras.Model(inputs=inputs, outputs=outputs)","6efee8c1":"optimizer = tf.keras.optimizers.RMSprop(0.001)\n\nmodel.compile(\n    optimizer=optimizer,\n    loss='mse'\n)","1059c5a3":"model.summary()","bae2b280":"epochs = 10\nbatch_size = 32\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    epochs=epochs,\n    batch_size=batch_size,\n    verbose=1\n)","1cfde61d":"plt.figure(figsize=(14, 10))\n\nplt.plot(range(epochs), history.history['loss'], color='b')\nplt.plot(range(epochs), history.history['val_loss'], color='r')\n\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\n\nplt.show()","d97be5b9":"np.argmin(history.history['val_loss'])","210da567":"model.evaluate(X_test, y_test)","cdfcec5e":"# Training","15bb30f4":"# Preprocesing","00f1cf4c":"# Getting Started"}}