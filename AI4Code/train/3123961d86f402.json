{"cell_type":{"0fc1ab3a":"code","9438312d":"code","1d9fe78f":"code","2e779707":"code","09bb9f6b":"code","72cf76f5":"code","325cf458":"code","02aef7eb":"code","9e57340a":"code","3f1d1e5b":"code","d2ebafef":"code","709553c2":"code","13a20bca":"code","73c726c8":"code","7e1c133c":"markdown","8601c32d":"markdown","7c22af3c":"markdown","8b014ebb":"markdown","5f2f7450":"markdown","71da1964":"markdown","f37b387c":"markdown","3f59bc84":"markdown"},"source":{"0fc1ab3a":"# Creating a classifier for legendary & mythic pokemon\n\nThe objective of this notebook is to create a classifier that can adequately identify legendary and mythic pokemon from their statistics.\n\nThe key problem we'll have to deal with is that the classes are very unbalanced - as would be reasonable, legendary and mythic pokemon represent only a tiny fraction of the total amount of pokemon created.","9438312d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\ndata = pd.read_csv('\/kaggle\/input\/complete-pokemon-data-set\/pokemon.csv', sep=',')","1d9fe78f":"data['obj_class'] = [1 if i else -1 for i in data['legendary']]\ndata['obj_class'] = data['obj_class'] + [1 if i else -1 for i in data['mythical']]\ndata['obj_class'] = [1 if i==0 else -1 for i in data['obj_class']]\ndata['obj_class'].value_counts()","2e779707":"data[['legendary', 'mythical', 'can_evolve','baby_pokemon']].value_counts()","09bb9f6b":"filtered_data = data.loc[(data['can_evolve'] == False) & (data['baby_pokemon']==False)].copy()\nfiltered_data['obj_class'].value_counts()","72cf76f5":"colors = ['red' if i==1 else 'blue' for i in filtered_data['obj_class']]\nfiltered_data.plot.scatter('hp', 'attack', c=colors)","325cf458":"filtered_data.plot.scatter('attack', 'defense', c=colors)","02aef7eb":"filtered_data.plot.scatter('defense', 'speed', c=colors)","9e57340a":"filtered_data['total_attack_stats'] = filtered_data['attack'] + filtered_data['special_attack'] + filtered_data['speed']\nfiltered_data['total_defense_stats'] = filtered_data['hp'] + filtered_data['defense'] + filtered_data['special_defense']\nfiltered_data.plot.scatter('total_attack_stats', 'total_defense_stats', c=colors)","3f1d1e5b":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.svm import SVC","d2ebafef":"x = filtered_data[['total_attack_stats', 'total_defense_stats']]\ny = filtered_data['obj_class']\nX_train, X_test, Y_train, Y_test = train_test_split(x,y, test_size=0.25)","709553c2":"clf = SVC(gamma='auto')\nclf.fit(X_train, Y_train)\npred = clf.predict(X_test)\nconfusion_matrix(Y_test, pred)","13a20bca":"filtered_data['y_pred'] = clf.predict(filtered_data[['total_attack_stats', 'total_defense_stats']])\nfiltered_data['quality'] = filtered_data['y_pred']+filtered_data['obj_class']","73c726c8":"colors = ['red' if i==2 else 'green' if i== 0 else 'blue' for i in filtered_data['quality']]\nfiltered_data.plot.scatter('total_attack_stats', 'total_defense_stats', c=colors, title='Legendary classification results')","7e1c133c":"We color true negatives as blues, true positives as red and failed predictions (be they false positives or false negatives) as green.\n\nAs we can see, the class imbalance has produced results that are in line with what's expected with a few mistakes.","8601c32d":"Doing this has reduced the imbalance in the classes from 10:1 to about 6:1. Not great, but certainly better.","7c22af3c":"Indeed, this approach has separated the legendary pokemon better from the rest of the domain. \n\nHowever, the classes are not linearly separable. For classification, we'll use an Support Vector Classifier using an RBF kernel.","8b014ebb":"In an effort to balance the classes, we can use the fact that legendary and mythic pokemon don't count as baby pokemon and only a handful of legendary poemon can evolve. We can use these binary flags to reduce the analysis space.","5f2f7450":"A quick overview shows that there is little hope of using individual stats to separate the legendaries, which makes sense from a game design standpoint. Having a spread of stats in those pokemon means that they can fill many niches in gameplay.\n\nHowever, the aggregates of their stats might be better separated. Legendaries should - overall - have greater stats than normal pokemon to reward players that go through the effort of catching them.","71da1964":"We'll create an objective class that maps to 1 for either legendary or mythic pokemon and -1 for everyone else.","f37b387c":"We can see the objective class states that the classes are imbalanced about 10:1.","3f59bc84":"## Understanding pokemon stats\n\nNow we explore the data to see if any pairs of battle stats can provide us with information to separate non-legendaries from their legendary counterparts."}}