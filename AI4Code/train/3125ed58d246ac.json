{"cell_type":{"344ecd89":"code","03eca318":"code","f9dd6068":"code","07335685":"code","737894b0":"code","d9fb7d3b":"code","b940b153":"code","f0aa79cf":"code","9c47cfe6":"code","cf4ef7cb":"code","19b2933c":"code","032ae0dd":"code","f5937b1e":"code","3f40eb41":"code","1e0dfe19":"code","c7195866":"code","e27ea315":"code","8b8f4adf":"code","ecbff6ae":"code","6f7a7434":"code","963bd763":"code","33123c02":"code","17419bcd":"code","464b6e88":"code","43cf9d92":"code","1a781fa1":"code","88425a8b":"markdown","c489ed16":"markdown","fb846fa3":"markdown","69adf00c":"markdown","91fed7d8":"markdown","f299592d":"markdown","a229e093":"markdown","6dbbe48e":"markdown","de46f2f4":"markdown","fafd071c":"markdown","f7eec595":"markdown","9f5a00d1":"markdown","7a08c8eb":"markdown","72b014f3":"markdown","d8487d66":"markdown"},"source":{"344ecd89":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","03eca318":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport scipy.stats as stat\nimport matplotlib.pyplot as plt","f9dd6068":"\nins_df = pd.read_csv(\"\/kaggle\/input\/insurance.csv\")\n","07335685":"ins_df.shape","737894b0":"\n\nins_df.dtypes","d9fb7d3b":"\nprint(pd.isna(ins_df[\"age\"]).value_counts())\nprint(pd.isna(ins_df[\"bmi\"]).value_counts())\nprint(pd.isna(ins_df[\"sex\"]).value_counts())\nprint(pd.isna(ins_df[\"children\"]).value_counts())\nprint(pd.isna(ins_df[\"smoker\"]).value_counts())\nprint(pd.isna(ins_df[\"region\"]).value_counts())\nprint(pd.isna(ins_df[\"charges\"]).value_counts())\n\n\n#Since all columns have false values equal to the total number of rows, we can conclude that there are no missing values","b940b153":"\nins_df.describe().drop([\"children\"],axis=1)\n\n#The describe function gives the five point summary - min,25%,median(50%) ,75% and the max value of each of the columns\n#Column \"children\" has been dropped here because it is not a continuous valued column and calculations in fractions will not be suitable for this column","f0aa79cf":"\n\n#Distribution of BMI\nsns.distplot(ins_df[\"bmi\"])","9c47cfe6":"#Additional plot showing the BMI distribution across genders\n\ng = sns.FacetGrid(ins_df,col=\"sex\")\ng.map(sns.distplot, \"bmi\");\n\n\n","cf4ef7cb":"#Distribution of age\n\nsns.distplot(ins_df[\"age\"])","19b2933c":"#Distribution of charges\n\nsns.distplot(ins_df[\"charges\"])","032ae0dd":"#3f. Measure of skewness of \u2018bmi\u2019, \u2018age\u2019 and \u2018charges\u2019 columns (2marks)\n\n\nins_df.drop([\"children\"],axis=1).skew(axis=0)\n\n#Positive skewness values indicate that the data is right skewed \n#Age and Bmi columns are almost symmetrical with very minimal skew (0.055 and 0.2 respectively)\n#Charges column is heavily skewed to the right with a value of 1.5\n\n","f5937b1e":"#Outliers in BMI columns.\n#The BMI column has considerable outliers to the right side as shown in the box plot below\nsns.boxplot(ins_df[\"bmi\"])","3f40eb41":"#Outliers in Age columns.\n#The Age column has no outliers and is symmetrically distributed\nsns.boxplot(ins_df[\"age\"])\n","1e0dfe19":"#Outliers in Charged columns.\n#The Charges column has lot of outliers to the right side as shown in the box plot below.\n#This also shows heavy right skew in the distribution\nsns.boxplot(ins_df[\"charges\"])","c7195866":"#Finding the exact values of outliers\n#Outliers are values which are below Q1-1.5IQR or above Q3+1.5IQR\n\nfq, tq = ins_df[\"age\"].quantile([0.25,0.75])\n","e27ea315":"def findoutlier(column):\n    fq, tq = ins_df[column].quantile([0.25,0.75]);\n    iqr = tq - fq;\n    for value in ins_df[column]:\n        if ((value > (tq + (1.5*iqr))) or (value < (fq - (1.5*iqr)))):\n            print(value);\n            \n\nprint(\"---------------Bmi------------\")            \nprint(findoutlier(\"bmi\"));\nprint(\"---------------Age------------\")\nprint(findoutlier(\"age\"));\nprint(\"---------------Charges------------\")\nprint(findoutlier(\"charges\"));\n    \n    ","8b8f4adf":"#Count of people in various genders\n\n\nxvalue = ins_df.sex.unique()\nyvalue  = [ins_df[\"sex\"].value_counts()[i] for i in ins_df.sex.unique()]\n\n\n\nfigure = sns.barplot(x = xvalue, y = yvalue)\nfigure.set(xlabel='Gender', ylabel='Count')\nplt.show()\n","ecbff6ae":"#Count of people having different number of children\n\n\nxvalue = ins_df.children.unique()\nyvalue  = [ins_df[\"children\"].value_counts()[i] for i in ins_df.children.unique()]\n\n\n\nfigure = sns.barplot(x = xvalue, y = yvalue)\nfigure.set(xlabel='No of Children', ylabel='Count')\nplt.show()","6f7a7434":"#Count of people who are smokers and non-smokers\n\nxvalue = ins_df.smoker.unique()\nyvalue  = [ins_df[\"smoker\"].value_counts()[i] for i in ins_df.smoker.unique()]\n\n\n#\n\nfigure = sns.barplot(x = xvalue, y = yvalue)\nfigure.set(xlabel='Smoker ?', ylabel='Count')\nplt.show()","963bd763":"#Count of people across different regions\nxvalue = ins_df.region.unique()\nyvalue  = [ins_df[\"region\"].value_counts()[i] for i in ins_df.region.unique()]\n\n#sns.barplot(x =xvalue, y=yvalue)\n\nfigure = sns.barplot(x = xvalue, y = yvalue)\nfigure.set(xlabel='Regions', ylabel='Count')\nplt.show()","33123c02":"#Since the categorical columns cannot be plotted ,we are assigning arbitrary numbers to denote them.\n\nsex_coded= ins_df[\"sex\"].astype('category').cat.codes\nregion_coded= ins_df[\"region\"].astype('category').cat.codes\nsmoker_coded= ins_df[\"smoker\"].astype('category').cat.codes\n\nins_df_coded = ins_df.drop([\"sex\",\"region\",\"smoker\"],axis=1)\nins_df_coded.insert(0,\"sex\",sex_coded)\nins_df_coded.insert(0,\"region\",region_coded)\nins_df_coded.insert(0,\"smoker\",smoker_coded)\n                            \nsns.pairplot(ins_df_coded)\n\n                            ","17419bcd":"#4A Do charges of people who smoke differ significantly from the people who don't? (\n\n#H0 : Charges do not differ whether they are smokers or not \n#Ha : Charges differ considerably based on smoker or not\n\n#Choosing t test since it is a comparison of means between two independent samples.\n#choosing the confidence interval as 95%\n\n#alpha = 0.05\n\n#The threshold pvalue is 0.05\n#Critical value considering two tailed test : -2.064 to 2.064\n\n#Considering the dataset as population\nsmokers_population = ins_df[ins_df[\"smoker\"] == \"yes\"]\nnon_smokers_population = ins_df[ins_df[\"smoker\"] == \"no\"]\n\n#taking equal samples from each population\n\nsmokers_sample = smokers_population.sample(n=25,random_state=1)\nnon_smokers_sample = non_smokers_population.sample(n=25,random_state=1)\n\ntstat,pvalue = stat.ttest_ind(smokers_sample[\"charges\"],non_smokers_sample[\"charges\"])\n\ntstat,pvalue\n\n#Since the tstat 8.5 is not within the critical value range, we reject the null hypothesis\n#The pvalue is also less than the alpha value (0.05) .\n\n#Hence we can clearly reject the null hypothesis\n#We conculde that charges of people who smoke differ significantly from the people who don't.","464b6e88":"#4B Does bmi of males differ significantly from that of females\n\n#H0 : BMI does not differ between genders\n#Ha : BMI differs between genders\n\n#Choosing t test since it is a comparison of means between two independent samples.\n#choosing the confidence interval as 95%\n\n#alpha = 0.05\n\n#The threshold pvalue is 0.05\n#Critical value considering two tailed test : -2.064 to 2.064\n\n#Considering the dataset as population\nmales_population = ins_df[ins_df[\"sex\"] == \"male\"]\nfemales_population = ins_df[ins_df[\"sex\"] == \"female\"]\n\n#taking equal samples from each population\n\nmales_sample = males_population.sample(n=25,random_state=1)\nfemales_sample = females_population.sample(n=25,random_state=1)\n\ntstat,pvalue = stat.ttest_ind(males_sample[\"bmi\"],females_sample[\"bmi\"])\n\ntstat,pvalue\n\n#Since the tstat -0.6 is well within the critical value range (-2.064 to 2.064), we fail to reject the null hypothesis\n#The pvalue 0.5 is also greater than the alpha value (0.05) .\n\n#Hence we  clearly fail to reject the null hypothesis.\n# There is no significant difference in BMI between male and female\n","43cf9d92":"#4C Is the proportion of smokers significantly different in different genders\n\n#H0 : The proportion of smokers is same across genders\n#Ha : The proportion of smokers is different across genders\n\n#Choosing chi-squared test since it is a comparison of proportion among categorical variables\n#choosing the confidence interval as 95%\n\n#alpha = 0.05\n\n#The threshold pvalue is 0.05\n#Critical value considering two tailed test and degree of freedom 1 : 0.001 on the left and  5.024 on the right\n\ncontingency_table = pd.crosstab(ins_df['sex'],ins_df['smoker']) \n\nchisq_value, p_value,dof,expected =  stat.chi2_contingency(contingency_table)\n\nchisq_value,p_value\n\n#Since the chisq_value 7.3 is not within the critical value range (0.001 to  5.024), we reject the null hypothesis\n#The pvalue 0.006 is also lesser than the alpha value (0.05) .\n\n#Hence we clearly reject the null hypothesis.\n# There is significant difference in the proportion of smokers between male and female\n","1a781fa1":"#4D Is the distribution of bmi across women with no children, one child and two children, the same?\n\n\n\n#H0 : The distribution of BMI across women is same irrespective of the number of children\n#Ha : The distribution of BMI across women is different for different number of children\n\n#Choosing ANOVA test since it is a comparison of variances across multiple independent samples\n#choosing the confidence interval as 95%\n\n#alpha = 0.05\n\n#The threshold pvalue is 0.05\n#Critical F value considering two tailed test  :0.025 on the left and  3.735 on the right\n\n\n\nbmi_no = ins_df.loc[(ins_df[\"sex\"] == \"female\") & (ins_df[\"children\"] == 0)][\"bmi\"].sample(n=100,random_state=1)\nbmi_one = ins_df.loc[(ins_df[\"sex\"] == \"female\") & (ins_df[\"children\"] == 1)][\"bmi\"].sample(n=100,random_state=1)\nbmi_two = ins_df.loc[(ins_df[\"sex\"] == \"female\") & (ins_df[\"children\"] == 2)][\"bmi\"].sample(n=100,random_state=1)\n\n\n\nf_stat,pvalue = stat.f_oneway(bmi_no,bmi_one,bmi_two)\n\nf_stat,pvalue\n\n#Since the f_stat 0.34 is well within the critical value range (0.025 to  3.735), we fail to reject the null hypothesis\n#The pvalue 0.7 is also greater than the alpha value (0.05) .\n\n#Hence we clearly fail to reject the null hypothesis.\n#Hence the distribution of BMI across women is same irrespective of the number of children\n\n","88425a8b":"## Distribution of \u2018bmi\u2019, \u2018age\u2019 and \u2018charges\u2019 columns. ","c489ed16":"## Does bmi of males differ significantly from that of females?","fb846fa3":"## 2. Read the data as a data frame ","69adf00c":"\n## Do charges of people who smoke differ significantly from the people who don't? ","91fed7d8":"## 1. Import the necessary libraries \n","f299592d":"## Measure of skewness of \u2018bmi\u2019, \u2018age\u2019 and \u2018charges\u2019 columns","a229e093":"## Distribution of categorical columns (include children) \nSince distribution cannot be considered for categorical data, we draw the graph of category vs count in each category","6dbbe48e":"## 5 point summary of numerical attributes ","de46f2f4":"# Applied Statistics on Insurance Data","fafd071c":"## Checking the presence of missing values ","f7eec595":"## 3. Perform basic EDA  \n","9f5a00d1":"## Is the proportion of smokers significantly different in different genders ? ","7a08c8eb":"## Is the distribution of bmi across women with no children, one child and two children, the same?","72b014f3":"## Checking the presence of outliers in \u2018bmi\u2019, \u2018age\u2019 and \u2018charges' columns ","d8487d66":"## Pair plot that includes all the columns of the data frame "}}