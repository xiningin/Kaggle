{"cell_type":{"e5af75c0":"code","c00d4a6e":"code","caa7f3df":"code","ea3119cb":"code","3b5f4045":"code","43627a76":"code","c87193e3":"code","df25effc":"code","b6cfe767":"code","7ce4e93c":"code","f5822f60":"code","886ff43a":"code","7a669943":"code","509ec003":"code","b9779de7":"code","f85676e7":"code","f4d714b0":"code","9f4d4ecf":"code","1d2eaa18":"code","0c20f798":"code","8429ee02":"code","30d66f1c":"code","ff264b55":"code","4a3a75f1":"code","39919bdc":"code","f38a6e9e":"code","222e88f7":"code","7c235c1b":"code","42f0d2dc":"markdown","386ab628":"markdown","b7a0e68c":"markdown","5bef4551":"markdown","44263a72":"markdown","e6dbc536":"markdown","b4296f10":"markdown","88baa7d2":"markdown","87247ca8":"markdown","3b97521e":"markdown","d129b820":"markdown","846a39d3":"markdown","c9c3e1cd":"markdown","8547c58f":"markdown","3242cea3":"markdown","c7dfcd48":"markdown","a22da213":"markdown"},"source":{"e5af75c0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfrom sklearn.preprocessing import LabelEncoder  ###for encode a categorical values\nfrom sklearn.model_selection import train_test_split  ## for spliting the data\nfrom lightgbm import LGBMRegressor    ## for import our model\nfrom sklearn.preprocessing import LabelEncoder\nprint(os.listdir(\"..\/input\"))","c00d4a6e":"train_dataset = pd.read_csv('..\/input\/train.csv')","caa7f3df":"train_dataset.head()","ea3119cb":"train_dataset.shape","3b5f4045":"x = train_dataset.iloc[:,1:-1]\ny = train_dataset.iloc[:,-1] ","43627a76":"x.isnull().sum()","c87193e3":"col_miss_val = [col for col in train_dataset.columns if train_dataset[col].isnull().any()]\nprint(col_miss_val)","df25effc":"for col in col_miss_val:\n    if(x[col].dtype == np.dtype('O')):\n         x[col]=x[col].fillna(x[col].value_counts().index[0])    #replace nan with most frequent\n    else:\n        x[col] = train_dataset[col].fillna(x[col].median()) ","b6cfe767":"x.isnull().sum()","7ce4e93c":"##So first we will find a columns thats contain characters value \nx.select_dtypes(include=['object'])","f5822f60":"LE = LabelEncoder()\nfor col in x.select_dtypes(include=['object']):\n    x[col] = LE.fit_transform(x[col])","886ff43a":"x.head()","7a669943":"y.isnull().sum()","509ec003":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train , y_test = train_test_split(x , y ,test_size = 0.1,random_state = 0)","b9779de7":"lightgbm = LGBMRegressor(objective='regression', \n                                       num_leaves=8,\n                                       learning_rate=0.0385, \n                                       n_estimators=3500,\n                                       max_bin=200, \n                                       bagging_fraction=0.75,\n                                       bagging_freq=5, \n                                       bagging_seed=7,\n                                       feature_fraction=0.2,\n                                       feature_fraction_seed=7,\n                                       verbose= 0,\n                                       )","f85676e7":"lightgbm.fit(x_train,y_train)","f4d714b0":"lightgbm.score(x_test,y_test)","9f4d4ecf":"test_dataset = pd.read_csv('..\/input\/test.csv')","1d2eaa18":"test_dataset.isnull().sum()\ntest_dataset = test_dataset.iloc[:,1:]","0c20f798":"test_dataset.isnull().sum()","8429ee02":"test_col_miss_val = [col for col in test_dataset.columns if test_dataset[col].isnull().any()]\nprint(test_col_miss_val)","30d66f1c":"for col in test_col_miss_val:\n    if(test_dataset[col].dtype == np.dtype('O')):\n        test_dataset[col] = test_dataset[col].fillna(test_dataset[col].value_counts().index[0])    #replace nan with most frequent\n        \n    else:\n        test_dataset[col] = test_dataset[col].fillna(test_dataset[col].median()) ","ff264b55":"for col in test_dataset.select_dtypes(include=['object']):\n    test_dataset[col] = LE.fit_transform(test_dataset[col])   ","4a3a75f1":"test_dataset.head()","39919bdc":"prediction = lightgbm.predict(test_dataset)","f38a6e9e":"print(prediction)","222e88f7":"ss = pd.read_csv('..\/input\/sample_submission.csv')","7c235c1b":"output = pd.DataFrame({'Id': ss.Id,'SalePrice': prediction})\noutput.to_csv('submission.csv', index=False)\noutput.head()","42f0d2dc":"## Let's fit our training data into Model","386ab628":"## Let's predict the test dataset","b7a0e68c":"** There are many missing values in test dataset **","5bef4551":"## Let's import our data","44263a72":"## Our model created now we have to import test dataset","e6dbc536":"## Let's split our data into X and Y","b4296f10":"## Let's create a submission.csv of prediction","88baa7d2":"** We have fill numerical columns misssing values with median **\n** We will fill character missing values with most used value count **","87247ca8":"** So there are many columns that contains character values **","3b97521e":"** There are null values in many column in our X  ** ","d129b820":"## Now let's check for a NULL values","846a39d3":"## Let's check the missing values in NULL","c9c3e1cd":"## Now we have to encode a categorical values","8547c58f":"** Let's enode a categorical data **","3242cea3":"## Let's split the data into Training & testing","c7dfcd48":"## Let's create our LGBMRegressor Model","a22da213":"** So we have to find the columns that contain missing values than we will fill with missing values filling techniques **"}}