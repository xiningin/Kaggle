{"cell_type":{"50dfd62e":"code","cc9944e3":"code","3cd806f7":"code","30474ca2":"code","7a638b70":"code","d93e533d":"code","fdbe9963":"code","e7cc18d2":"code","02829473":"code","f89b4f42":"code","51fe6fac":"code","6e048e64":"code","deec4bcd":"code","a59ca69b":"markdown","63966446":"markdown","cedcf8d0":"markdown","ec723afa":"markdown","aa5eda77":"markdown","ce84e913":"markdown","8bfc4962":"markdown","5cdc6bc7":"markdown","1f6a289a":"markdown"},"source":{"50dfd62e":"# Importing necessary libraries\n\nfrom keras.layers import Input, Lambda, Dense, Flatten, Dropout, BatchNormalization\nfrom keras import regularizers\nfrom keras.models import Model, Sequential\nfrom keras.applications.resnet50 import ResNet50\nfrom keras.preprocessing import image\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.models import Sequential\nfrom keras.utils import to_categorical\nfrom PIL import Image\nimport numpy as np\nfrom glob import glob\nimport matplotlib.pyplot as plt\nimport os\nfrom pathlib import Path\nimport pandas as pd\nimport seaborn as sns\nimport cv2\nimport os\nfrom keras.applications.resnet50 import ResNet50\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","cc9944e3":"parasitized_data = os.listdir('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\/')\nprint(parasitized_data[:10]) #the output we get are the .png files\n\nuninfected_data = os.listdir('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\/')\nprint('\\n')\nprint(uninfected_data[:10])","3cd806f7":"plt.figure(figsize = (10,10))\nfor i in range(4):\n    plt.subplot(1, 4, i+1)\n    img = cv2.imread('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized' + \"\/\" + parasitized_data[i])\n    plt.imshow(img)\n    plt.title('PARASITIZED : 1')\n    plt.tight_layout()\nplt.show()","30474ca2":"plt.figure(figsize = (10,10))\nfor i in range(4):\n    plt.subplot(1, 4, i+1)\n    img = cv2.imread('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected' + \"\/\" + uninfected_data[i+1])\n    plt.imshow(img)\n    plt.title('UNINFECTED : 0')\n    plt.tight_layout()\nplt.show()","7a638b70":"infected = os.listdir('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\/') \nuninfected = os.listdir('..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\/')","d93e533d":"data = []\nlabels = []\n\nfor i in infected:\n    try:\n    \n        image = cv2.imread(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\/\"+i)\n        image_array = Image.fromarray(image , 'RGB')\n        resize_img = image_array.resize((64 , 64))\n        data.append(np.array(resize_img))\n        label = to_categorical(1, num_classes=2)\n        labels.append(1)\n        \n    except AttributeError:\n        print('')\n    \nfor u in uninfected:\n    try:\n        \n        image = cv2.imread(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected\/\"+u)\n        image_array = Image.fromarray(image , 'RGB')\n        resize_img = image_array.resize((64 , 64))\n        data.append(np.array(resize_img))\n        label = to_categorical(0, num_classes=2)\n        labels.append(0)\n        \n    except AttributeError:\n        print('')\n","fdbe9963":"data = np.array(data)\nlabels = np.array(labels)\n\nnp.save('Data' , data)\nnp.save('Labels' , labels)","e7cc18d2":"n = np.arange(data.shape[0])\nnp.random.shuffle(n)\ndata = data[n]\nlabels = labels[n]","02829473":"data = data.astype(np.float32)\nlabels = labels.astype(np.int32)","f89b4f42":"from sklearn.model_selection import train_test_split\n\ntrain_x , test_x , train_y , test_y = train_test_split(data , labels , \n                                            test_size = 0.2 ,\n                                            random_state = 111)","51fe6fac":"resnet = ResNet50(weights='imagenet', include_top=False, input_shape=(64, 64, 3))\n\n# don't train existing weights\nfor layer in resnet.layers:\n    if isinstance(layer, BatchNormalization):\n        layer.trainable = True\n    else:\n        layer.trainable = False\n# useful for getting number of classes\n\nnum_classes = 2\n\nmodel = Sequential()\n\nmodel.add(resnet)\n\nmodel.add(Flatten())\n\nmodel.add(Dense(128, kernel_regularizer=regularizers.l2(0.01), activation='relu'))\n\nmodel.add(Dropout(0.3))\n\nmodel.add(BatchNormalization())\n\nmodel.add(Dense(64, kernel_regularizer=regularizers.l2(0.01), activation='relu'))\n\nmodel.add(Dropout(0.3))\n\nmodel.add(BatchNormalization())\n\nmodel.add(Dense(num_classes, activation='softmax'))\n\nmodel.summary()\n\n# (4) Compile \nmodel.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","6e048e64":"train_aug = ImageDataGenerator(\n    rescale=1.\/255,\n    shear_range=0.2,  \n    zoom_range=0.2,        \n    horizontal_flip=True,\n    vertical_flip=True)  \n\nval_aug= ImageDataGenerator(\n    rescale=1.\/255)\n\ntraining_set = train_aug.flow(\n    train_x,\n    train_y,\n    batch_size=16)\n\ntest_set = val_aug.flow(\n    test_x,\n    test_y,\n    batch_size=16)\n\nr = model.fit_generator(training_set,\n                    steps_per_epoch=len(training_set),\n                    epochs=5,\n                    validation_data=test_set,\n                    validation_steps=len(test_set))","deec4bcd":"model_score = model.evaluate_generator(test_set,steps=50)\nprint(\"Model Test Loss:\",model_score[0])\nprint(\"Model Test Accuracy:\",model_score[1])","a59ca69b":"**Splitting the data into Train and Test**","63966446":"**What is malaria?**\n\nMalaria is a life-threatening disease. It\u2019s typically transmitted through the bite of an infected Anopheles mosquito. Infected mosquitoes carry the Plasmodium parasite. When this mosquito bites you, the parasite is released into your bloodstream.\n\n**What causes malaria?**\n\nMalaria can occur if a mosquito infected with the Plasmodium parasite bites you. There are four kinds of malaria parasites that can infect humans: Plasmodium vivax, P. ovale, P. malariae, and P. falciparum.\n\n**What are the symptoms of malaria?**\n\nCommon symptoms of malaria include:\n* shaking chills that can range from moderate to severe\n* high fever\n* profuse sweating\n* headache\n* nausea\n* vomiting\n* abdominal pain\n* diarrhea\n* anemia\n* muscle pain\n\n**Tips to prevent malaria**\n\nThere\u2019s no vaccine available to prevent malaria. Talk to your doctor if you\u2019re traveling to an area where malaria is common or if you live in such an area. You may be prescribed medications to prevent the disease.\n\nTalk to your doctor about long-term prevention if you live in an area where malaria is common. Sleeping under a mosquito net may help prevent being bitten by an infected mosquito. Covering your skin or using bug sprays containing DEET] may also help prevent infection.\n\nreference: [for more info](https:\/\/www.healthline.com\/health\/malaria#prevention)","cedcf8d0":"**Data Augmentation**\n\nAs you can see the train and test are highly imbalanced after our data preprocessing.\nSo, data augmentation will help us in getting results for our test set.[](http:\/\/)","ec723afa":"**Using Resnet50 and loading weights from imagenet datasets**","aa5eda77":"**Data Visualization**","ce84e913":"**Data Preprocessing**\n\nThe images are resized to (64x64) and stored to data list.\nThe images in infected folder are assigned the label=1 and stored in labels list.\nThe process is similar for uninfected folder but here the label=0.","8bfc4962":"**Importing necessary libraries**","5cdc6bc7":"**Model Accuracy**","1f6a289a":"**Locating the necessary data**"}}