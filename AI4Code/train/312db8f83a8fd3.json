{"cell_type":{"e47a5e31":"code","e0fa714d":"code","ee0697e1":"code","2f0be899":"code","9c8d0b3d":"code","15813229":"code","aa19ddc1":"code","ec57a5b5":"code","6964aea7":"code","7c2f353e":"code","e5deae48":"code","d1546fc6":"code","bb13e9e5":"code","be811025":"code","59108b85":"code","b1e7200b":"code","8d704e4f":"code","0574c4a3":"code","ffa756c0":"code","fc784307":"code","a170929f":"code","8f341c0b":"code","09a35ada":"code","46b4e783":"code","a010abb0":"code","d3354fc5":"code","9bf574d7":"code","0d8747fd":"code","5c508ac3":"code","a48711b0":"code","6fe7c34f":"code","657387e3":"markdown","6d7ec1aa":"markdown","dccf93c6":"markdown","31420dd1":"markdown","b91732e4":"markdown","7b8641ba":"markdown","4656969a":"markdown"},"source":{"e47a5e31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e0fa714d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats \nfrom  sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score","ee0697e1":"data = pd.read_csv(\"\/kaggle\/input\/vehicle-dataset-from-cardekho\/car data.csv\")","2f0be899":"data","9c8d0b3d":"data.info()","15813229":"check_norm=data[['Present_Price','Kms_Driven']]","aa19ddc1":"for x in check_norm:\n    plt.figure(figsize=(8,3))\n    sns.distplot(check_norm[x])","ec57a5b5":"for x in check_norm:\n    logs=np.log(check_norm[x])\n    plt.figure(figsize=(13,4))\n    plt.subplot(1,2,1)\n    plt.title(x)\n    sns.distplot(logs)\n    plt.subplot(1,2,2)\n    stats.probplot(logs,dist='norm',plot=plt)\n    plt.show()\n    ","6964aea7":"fig,ax=plt.subplots(figsize=(15,10))\nsns.boxplot(data=check_norm,ax=ax, fliersize=3)","7c2f353e":"data_cleaned=data[['Year','Selling_Price','Present_Price','Kms_Driven','Fuel_Type','Seller_Type','Transmission','Owner']]","e5deae48":"q=data_cleaned['Kms_Driven'].quantile(0.97)\ndata_cleaned=data_cleaned[data_cleaned['Kms_Driven']<q]\nq=data_cleaned['Present_Price'].quantile(0.99)\ndata_cleaned=data_cleaned[data_cleaned['Present_Price']<q]","d1546fc6":"data_cleaned.info()","bb13e9e5":"for x in data_cleaned[['Present_Price','Kms_Driven']]:\n    plt.figure(figsize=(9,3))\n    sns.distplot(data_cleaned[x])","be811025":"for x in data_cleaned[['Present_Price','Kms_Driven']]:\n    logs=np.log(data_cleaned[x])\n    plt.figure(figsize=(9,4))\n    plt.subplot(1,2,1)\n    sns.distplot(logs)\n    plt.subplot(1,2,2)\n    stats.probplot(logs,dist='norm',plot=plt)\n    plt.show()","59108b85":"fig,ax=plt.subplots(figsize=(15,10))\nsns.boxplot(data=data_cleaned,ax=ax, fliersize=3)","b1e7200b":"for x in data_cleaned[['Present_Price','Kms_Driven']]:\n    logss_cleaned=np.log(data_cleaned[['Present_Price','Kms_Driven']][x])\n    plt.figure(figsize=(15,3))\n    plt.subplot(1,2,1)\n    sns.distplot(logss_cleaned)\n    plt.subplot(1,2,2)\n    stats.probplot(logss_cleaned,dist='norm',plot=plt)\n    plt.show()\n    ","8d704e4f":"data_cleaned['Present_Price']=np.log(data_cleaned['Present_Price'])\ndata_cleaned['Kms_Driven']=np.log(data_cleaned['Kms_Driven'])","0574c4a3":"data_cleaned","ffa756c0":"data_cleaned=pd.get_dummies(data_cleaned,drop_first=True)","fc784307":"data_cleaned=data_cleaned.drop(columns=\"Fuel_Type_Diesel\")","a170929f":"data_cleaned","8f341c0b":"x=data_cleaned.drop(columns='Selling_Price')\ny=data_cleaned['Selling_Price']","09a35ada":"scaler=StandardScaler()\nX_scaled=scaler.fit_transform(x)","46b4e783":"X_scaled","a010abb0":"X_train,X_test,y_train,y_test=train_test_split(X_scaled,y,test_size=0.25,random_state=42)","d3354fc5":"model=LinearRegression()\nmodel.fit(X_train,y_train)","9bf574d7":"ytrain_predict=model.predict(X_train)\nytrain_predict","0d8747fd":"print(\"The R square is equal to {}\".format(r2_score(y_train,ytrain_predict)))","5c508ac3":"ytest_predict=model.predict(X_test)\nytest_predict","a48711b0":"print(\"The R square is equal to {}\".format(r2_score(y_test,ytest_predict)))","6fe7c34f":"print(\"The r square value on test data is {}\".format(model.score(X_test,y_test)))\nprint(\"The r square value on train data is  {}\".format(model.score(X_train,y_train)))","657387e3":"# Now we have to fix the distribution of the data By taking log-transformation","6d7ec1aa":"# Removing Outliers","dccf93c6":"# Now scaling the features","31420dd1":"# Original Distributions","b91732e4":"# Handling-Categorical variables","7b8641ba":"# Log-Normal Distributions","4656969a":"# We can take the log-normal distribution But before this i want to remove outliers from the features"}}