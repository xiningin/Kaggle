{"cell_type":{"1651df09":"code","84effc45":"code","2fcd9ba9":"code","5108b1ac":"code","b2ede96b":"code","639fdd04":"code","05e06d7d":"code","aa763255":"code","bfddb399":"code","b707f95d":"code","d97d2914":"code","20f86725":"code","3439de1d":"code","32c9498b":"code","b015830f":"code","d43cb0cb":"code","93516e8b":"code","be8f1649":"code","5746594f":"code","528ebcf4":"code","fd5abf9c":"markdown","9e229cfd":"markdown","a7607ccf":"markdown","29b84602":"markdown","b91ae709":"markdown","be6a46ad":"markdown","93d16fe1":"markdown","d491b11b":"markdown","a615fdce":"markdown","203ee474":"markdown","5e80bf07":"markdown","150c2339":"markdown"},"source":{"1651df09":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","84effc45":"nan_list = ['na','nan','--']\ndf= pd.read_csv('..\/input\/googleplaystore.csv',na_values = nan_list)\ndf.sample(10)","2fcd9ba9":"df.info()","5108b1ac":"df.isnull().sum()","b2ede96b":"df.describe()","639fdd04":"#DESCRIBE object and decide which feature should be convert to numerical feature\ndf.describe(include=['O'])","05e06d7d":"try:\n    df.columns=[str(col).replace(' ','_').lower() for col in df.columns]\nexcept KeyError:\n    pass\ndf.columns.values","aa763255":"# this seems to be a little tricky that one line in this dataset is dislocate,so I drop it.\n#I find this error after trying to convert type of 'insdalls'\ntry:\n    non_rowl=df.loc[df['installs']=='Free']\n    print(non_rowl)\n    df.drop(index =non_rowl.index, inplace=True)\nexcept AttributeError:\n    pass","bfddb399":"df['reviews']=df['reviews'].apply(lambda x: int(x))\ndf['installs']=df['installs'].apply(lambda x: int(str(x).replace(',','').replace(\"+\",'')))\ndf['price']=df['price'].apply(lambda x: float(str(x).replace('$','')))\n\ndef unit(x):\n    if 'M' in x:\n        x = float(x.replace('M',''))\n        return x\n    elif 'k' in x:\n        x = float(x.replace('k',''))\n        x = x\/1000\n        return x\n    else:\n        x = np.nan\n        return x\ndf['size'] = df['size'].apply(unit)\n\ndf.head() ","b707f95d":"#fillna with mean and most frequent\nmean_rating=df['rating'].mean()\ndf['rating']=df['rating'].fillna(mean_rating)\nmean_size=df['size'].mean\ndf['size']=df['size'].fillna(mean_size)\n\nfre_type=df['type'].value_counts().index[0]\ndf['type']=df['type'].fillna(fre_type)","d97d2914":"# first a brief view of all the numerical features\nsns.heatmap(df[['rating','reviews','installs','size','price']].corr(), annot=True, fmt='.2f', cmap='YlGnBu_r')","20f86725":"sns.pairplot(df,hue = 'type', palette='Set2')","3439de1d":"#category and installs vs category and app counts\n\ncategory_app=df[['category','app']].groupby(['category']).size().reset_index(name = 'count')\ncategory_installs=df[['category','installs']].groupby(['category'],as_index=False).sum()\n\nfig = plt.figure(figsize=(15,8))\nax = fig.add_subplot(111)\nax2 = ax.twinx()\n\nins = category_installs['installs']\ncnt = category_app['count']\n#lns1 = ax.plot(df['category'], ins, label = 'installs', color = 'g')\nlns1 = ax.plot(category_installs['category'], ins, label = 'installs', color = 'g')\nlns2 = ax2.plot(category_app['category'], cnt, label = 'count', color = 'r')\nax.legend(loc = 2)\nax2.legend(loc = 1)\n\nfor label in ax.get_xticklabels():\n    label.set_rotation(90)\n    \nplt.show()","32c9498b":"#here we focus on the outliers in each content_rating.\ng = sns.catplot(x = 'category', y = 'installs', \n                col = 'content_rating', \n                kind='boxen',\n                aspect =2.5, height = 4, col_wrap=2, data = df)\nfor ax in g.axes.flat:\n    for label in ax.get_xticklabels():\n        label.set_rotation(90)","b015830f":"#now the data in rating is dispersed. By converting a numarical data into a categrical data would help to make further analysis.\ndf['rating_range'] = 0\ndf.loc[df['rating'] <=2.0, 'rating_range']=2\ndf.loc[(df['rating'] >2.0) & (df['rating'] <=3.0), 'rating_range' ]=3\ndf.loc[(df['rating'] > 3.0) & (df['rating'] <=4.0), 'rating_range']=4\ndf.loc[(df['rating']>4.0) & (df['rating'] <=4.5), 'rating_range'] = 4.5\ndf.loc[(df['rating']>4.5) & (df['rating'] <=5), 'rating_range'] = 5                           \ndf.rating_range.head()","d43cb0cb":"#features of high rating apps\ndf_high = df.loc[df['rating_range'] >4]#why df[] not 'column_name'\ng =sns.catplot(x = 'rating_range', y = 'installs', data = df_high,kind='swarm',\n               hue = 'content_rating',\n               palette= 'Set2', height=8,aspect=1.5)","93516e8b":"#features of high rating apps\ndf_high = df.loc[df['rating_range'] >4]#why df[] not 'column_name'\ng =sns.catplot(x = 'rating_range', y = 'reviews', data = df_high,hue = 'content_rating',\n               palette= 'Set2', height=8,aspect=1.5)","be8f1649":"sns.catplot(x = 'content_rating', y = 'rating',hue='type',data=df,\n            kind = 'violin', inner = 'stick', split = True,\n            height=8, aspect=1.5, palette='Set3')","5746594f":"filter_values = [-1, 0, 5, 10, 20, 50, 100,200, 300, 400]   \ndf['priceband']= pd.cut(df.price, bins=filter_values)\nprice_apps= df[['app','priceband']].groupby(['priceband']).size().reset_index(name='appcounts')\nprice_installs = df[['priceband','installs']].groupby(['priceband'], as_index = False).sum()\npricebands=pd.merge(price_apps, price_installs,on='priceband', how='left')\nprint(pricebands)","528ebcf4":"df['price_range'] = 0\ndf.loc[df['price'] >200, 'price_range']=4\ndf.loc[(df['price'] >50) & (df['price'] <=200), 'price_range' ]=3\ndf.loc[(df['price'] > 5) & (df['price'] <=50), 'price_range']=2\ndf.loc[(df['price']>-1) & (df['price'] <=5), 'price_range'] = 1                         \n\nhigh_price=df.loc[df['price_range']==4]\nplt.figure(figsize = (12,6))\nsns.swarmplot(x='category', y='installs', hue='content_rating',size=10, data=high_price, palette='Set2_r')","fd5abf9c":"conclusion from this chart:\n1. ","9e229cfd":"NOTE:\n\nUse a \"Nan\" list as a filter to unify missing values \n\n\u201cdf.sample()\u201d  insdead of \"df.head()\" could give a more random view in case that the dataset has already been sorted.","a7607ccf":"conclusion from this chart:\n\nData concentration:\n\n1. The number of apps for teen is alomst the same as the numbers of apps for everyone. especially in \"Books and refference', 'Communications'. \n2. In 'Shopping', 'Social' and 'Video players', there are more apps installed under the constraints of \"Teen'\n3. there are certain preferences under the constraints of 'Teen', '10+', and '17+', because the datas in one category are more concentrated, espacially in 'Communication' and  'Game'\n\nOutliers, which means unicons.\n4. Outliers are in the 'Health and fitness'  under the apps for everyone]. Also, the market size is increasing because of people's conceptual change.\n5. Outliers are in the 'Communication', 'Entertainment', 'Family'  in 'Teen' constraint. \n\n Note:  we couldn't judge wether 'installs' is manipulated.","29b84602":"Absolutly there is an outlier in 'rating' . We can guss the reasons later in the data cleaning part.","b91ae709":"**(1)  apps in which category are installed more freuquently **","be6a46ad":"After understanding about what the dataset is talking about, and a rougnly sence of magnitude of\neach feature. Among them, the 'insdalls', 'rating', and 'reviews' come after 'category', 'size', 'type' , 'price' and 'content rating'.  \nThen we can make assumptions: \n1. ONLY IF an app has  high installs, an app could have the possibility to get a high rating.  \n2. Apps in certain categories have higher installs. \n3. The price and type could have infulence on reviewing and rating.\n\nDuring analysis we shoud note that the' size, price, installs' are numericla features, and 'category, type, content rating' are categorical features.\n\nHowver, if we take a further look at the 'installs', it chould also be a categorical feature.","93d16fe1":"# Basic EDA analysis\n\nNow we can start to draw the first coorelation of numerical features to have a\u4f60overall feeling about the dataset.","d491b11b":"Now we have a brief understanding about what the dataset is talking about, and a rougnly sence of magnitude of\neach feature. Among them, the 'insdalls', 'rating', and 'reviews' come after 'category', 'size', 'type' , 'price' and 'content rating'.  \nThen we can make assumptions: \n1. ONLY IF an app has  high installs, an app could have the possibility to get a high rating.  \n2. Apps in certain categories have higher installs. \n3. The price and type could have infulence on reviewing and rating.\n\nDuring analysis we shoud note that the' size, price, installs' are numericla features, and 'category, type, content rating' are categorical features.\n\nHowver, if we take a further look at the 'installs', it chould also be a categorical feature.","a615fdce":"**(3)numerical features:**\n\n price and installs","203ee474":"conclusion from this chart:\n1.  apps in 'COMMUNICATION' are highly monopolized, which is consistent with the real conditions.\n \n2. apps in 'FAMILY', however,  are over supplied.\n\n3. apps in 'GAME', are in intense competition,  because the installs are almost 2 times bigger than counts. \n\n4. other apps, like 'ART and DESIGN', has a small amount of users, thus they are supllied and installed less often.\n\n\n\n\n**(2) outliers because of 'content_tating'**","5e80bf07":"# Data Cleaning","150c2339":"In the 'rating', there are almost 1000 missing values needed to be filled. We can choose  to fill them with mean value, or some the certain values varrying with categories"}}