{"cell_type":{"f41aa447":"code","d2596c6d":"code","8cf92833":"code","dec7616d":"code","96dbc1c7":"code","969c51d1":"code","733886c7":"code","b7b12f67":"code","519c112e":"code","af24a2ef":"code","7dedd505":"code","620fa898":"code","4308983d":"code","2ebb6abe":"code","8247e4cb":"code","2fd127e0":"code","650ce0d4":"code","619df963":"code","02331476":"code","fa7fa44d":"code","037ff39e":"code","331d656e":"markdown","184ea509":"markdown","b25360ab":"markdown","67c8316e":"markdown","cd7b4326":"markdown","c8667fac":"markdown","0da6f83a":"markdown","f7cac2f3":"markdown"},"source":{"f41aa447":"import pandas as pd\n# prophet by Facebook\nfrom fbprophet import Prophet\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.preprocessing import Imputer\n\nimport warnings; warnings.simplefilter('ignore')\n\n# Load data\ndf = pd.read_csv('..\/input\/120001_PH1.csv')\ndf.head()","d2596c6d":"df['ds'] = pd.to_datetime(df['ds'])\n#df.index = df['ds']\n#del df['ds']\ndf.tail()\n\n","8cf92833":"df.plot(x='ds',y='y',figsize=(20, 6))","dec7616d":"maxKM = 1200.0\ndf.y.loc[df.y> maxKM]=maxKM\ndf.plot(x='ds',y='y',figsize=(20, 6))","96dbc1c7":"count_total_days = df.size\nprint(\"count_total_days\",count_total_days)\n\ncount_zero_days = df[df.y==0].count()\nprint(\"count_zero_days\",count_zero_days)\n\ncount_null_days = df['y'].isna().sum()\nprint(\"count_null_days\",count_null_days)\n\nperc = count_null_days \/ count_total_days\nprint(\"% of missing days\",perc)","969c51d1":"forecast_horizon = 30 #days to forcast\ntrain_df = df[:-forecast_horizon]\ntest_df =  df[-forecast_horizon:]\nprint(\"train\",train_df.tail())\nprint(\"test\",test_df.head())","733886c7":"def forecast_by_Prophet(train):\n    m = Prophet()\n    m.fit(train)\n    # Python\n    future = m.make_future_dataframe(periods=forecast_horizon)\n    forecast = m.predict(future)\n    forecast= forecast[['ds', 'yhat']]\n    forecast= forecast[-forecast_horizon:] \n    return forecast","b7b12f67":"forecast = forecast_by_Prophet(train_df)\nerror_missingData =  mean_absolute_error(test_df['y'], forecast['yhat'])\n\nprint(\"MAE with missing data\", error_missingData)","519c112e":"comparison = test_df \ncomparison['NoFilling'] = forecast.yhat\ncomparison.plot(title=\"comparison\",x='ds',figsize=(20, 6))","af24a2ef":"count_null_days = train_df['y'].isna().sum()\nprint(\"count_null_days in train_df\",count_null_days)\n\ntrain_forwardfill = train_df.fillna(method='ffill')\n\ncount_null_days = train_forwardfill['y'].isna().sum()\nprint(\"count_null_days in train_ffill\",count_null_days)\n","7dedd505":"forecast = forecast_by_Prophet(train_forwardfill)\nerror_ffill = mean_absolute_error(test_df['y'], forecast['yhat'])\nprint(\"MAE with forwardfill missing data\", error_ffill)","620fa898":" \ncomparison['FFILL'] = forecast.yhat\ncomparison.plot(title=\"comparison\",x='ds',figsize=(20, 6))","4308983d":"train_backwardfill = train_df.fillna(method='bfill')\nforecast = forecast_by_Prophet(train_backwardfill)\nerror_bfill = mean_absolute_error(test_df['y'], forecast['yhat'])\nprint(\"MAE with backwardfill missing data\", error_bfill)","2ebb6abe":"\ncomparison['BFILL'] = forecast.yhat\ncomparison.plot(title=\"comparison\",x='ds',figsize=(20, 6))","8247e4cb":"# other strategies: \u201cmedian\u201d, most_frequent, constant\nmy_imputer = Imputer(strategy='mean')\ny= train_df['y'].values\ny = y.reshape(-1, 1)\ny_imputed = my_imputer.fit_transform(y)\ntrain_imputed = train_df\ntrain_imputed= train_imputed.drop('y',1)\ntrain_imputed['y']= y_imputed\nforecast = forecast_by_Prophet(train_imputed)\nerror_imputed_mean = mean_absolute_error(test_df['y'], forecast['yhat'])\nprint(\"MAE with imputed Mean\", error_imputed_mean)\n","2fd127e0":"\ncomparison['MEAN'] = forecast.yhat\ncomparison.plot(title=\"comparison\",x='ds',figsize=(20, 6))","650ce0d4":"my_imputer = Imputer(strategy='median')\ny= train_df['y'].values\ny = y.reshape(-1, 1)\ny_imputed = my_imputer.fit_transform(y)\ntrain_imputed = train_df\ntrain_imputed= train_imputed.drop('y',1)\ntrain_imputed['y']= y_imputed\nforecast = forecast_by_Prophet(train_imputed)\nerror_imputed_median = mean_absolute_error(test_df['y'], forecast['yhat'])\nprint(\"MAE with imputed median\", error_imputed_median)","619df963":"comparison['MEDIAN'] = forecast.yhat\ncomparison.plot(title=\"comparison\",x='ds',figsize=(20, 6))","02331476":"my_imputer = Imputer(strategy='most_frequent')\ny= train_df['y'].values\ny = y.reshape(-1, 1)\ny_imputed = my_imputer.fit_transform(y)\ntrain_imputed = train_df\ntrain_imputed= train_imputed.drop('y',1)\ntrain_imputed['y']= y_imputed\nforecast = forecast_by_Prophet(train_imputed)\nerror_imputed_most_frequent = mean_absolute_error(test_df['y'], forecast['yhat'])\nprint(\"MAE with imputed most_frequent\", error_imputed_most_frequent)","fa7fa44d":"comparison['MOST_FREQUENT'] = forecast.yhat\ncomparison.plot(title=\"comparison\",x='ds',figsize=(20, 6))","037ff39e":"errors = [error_missingData, error_ffill,error_bfill, error_imputed_mean, error_imputed_median, error_imputed_most_frequent]\nmethods = ['NA', 'ffill', 'bfill','mean','median', 'most_frequent']\ndf = pd.DataFrame({'MAE': errors, 'Filling Method': methods}, index=methods)\nax = df.plot.bar(rot=0, figsize=(10, 7))","331d656e":"RESULT: Given the data set and using the Prophet to forecast 30 days:\n* Data has about  %6 missing days\n*  With Prophet, using any filling method but imputing Mean, end with worse  MAE value!\n* Thus, we can conclude that Prophet can handle missing data sucessfully.\n* MAE with missing data 112 vs MAE with imputed Mean 112: \n\nFUTURE WORK: We will use XGBOOST as the prediction method to compare the results.","184ea509":"As seen in the plot there are some extreme values (kms)  that a car can't travel in a day. Let's set maximum daily km to 1200 km.","b25360ab":"As seen in the plot there are some 0 or NULL values in the data set. Count them","67c8316e":"As a prediction method, we will use Prophet. More about Prophet : https:\/\/facebook.github.io\/prophet\/docs\/quick_start.html#python-api\n","cd7b4326":"Details about imputing:\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.impute.SimpleImputer.html#sklearn.impute.SimpleImputer\n    ","c8667fac":"In this notebook, we will investigate the Impact of Missing Data on Time Series Analysis and Impact of Handling Missing Data on Time Series prediction.\n\nFor this reason, we will use one sample log file of a car in which daily travelled distance was recorded.\n\nLet's begin with importing dependicies and data.\n","0da6f83a":"Convert the data into a datetime indexed data. Let's see the data in a plot.","f7cac2f3":"All results summary"}}