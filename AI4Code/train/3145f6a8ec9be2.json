{"cell_type":{"bb97cec5":"code","b18ba799":"code","3c37ef9c":"code","fada511e":"code","9cc371e1":"code","f7b2510d":"code","f34128b0":"code","7b7e007c":"code","50bddf93":"code","42d4ed19":"code","d2684630":"code","517e863d":"code","502953f6":"code","7d90d503":"code","2b36976b":"code","51319d85":"code","12cf3b4a":"code","26d5263c":"code","872ebcd4":"code","e7be1c28":"code","21c93754":"code","68ec2de0":"code","4796b14e":"code","8988c543":"code","8226b821":"code","6bb99f56":"code","68075fe6":"code","e4eb4a26":"code","2d868e2f":"code","24eb2a26":"code","a55f81d9":"code","8445c75d":"code","cc835a43":"markdown","0a90a39e":"markdown","018ad4a5":"markdown","b7fe5447":"markdown","52a6523a":"markdown","4033f20d":"markdown"},"source":{"bb97cec5":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib\n%pylab inline\nfrom sklearn.model_selection import train_test_split, KFold, cross_val_score\nfrom sklearn.linear_model import LinearRegression, RidgeCV, LassoCV\nfrom sklearn import metrics","b18ba799":"mobile = pd.read_csv('..\/input\/flipkart-mobile-dataset\/Flipkart Mobile.csv')","3c37ef9c":"mobile.shape","fada511e":"mobile.head()","9cc371e1":"mobile.describe()","f7b2510d":"mobile.info()","f34128b0":"#heatmap correlation\nplt.figure(figsize = (12,6))\nsns.heatmap(mobile.corr(), vmax = 0.9, square = True)\nplt.title(\"Pearson Correlation\")\nplt.show()","7b7e007c":"#handling categorical data\ndf = pd.get_dummies(mobile, drop_first = True)\ndf.head()","50bddf93":"#split data\nX = df.drop('sales_price', axis = 1)\ny = df['sales_price']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","42d4ed19":"#Linear Regression\nlr = LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","d2684630":"#Ridge Regression\nridge = RidgeCV()\n%time ridge.fit(X_train, y_train)\nridge.score(X_test, y_test)","517e863d":"#Lasso Regression\nlasso = LassoCV()\n%time lasso.fit(X_train, y_train)\nlasso.score(X_test, y_test)","502953f6":"#compare MLA\nMLA = [\"Linear Regression\", \"Ridge Regression\", \"Lasso Regression\"]\nclfs = [LinearRegression(), RidgeCV(), LassoCV()]\nresult = []\n\nfor clff in clfs:\n    clff.fit(X_train, y_train)\n    acc = clff.score(X_test, y_test)\n    result.append(acc)\n    \nresult_df = pd.DataFrame(result, index = MLA)\nresult_df.columns = [\"Accuracy\"]\nresult_df.sort_values(by = \"Accuracy\", ascending = False)","7d90d503":"#prediction\ny_pred = ridge.predict(X_test)\nprint(y_pred)","2b36976b":"#check MAE, MSE, RMSE, R-Squared\nprint('Mean Absolute Error : ', metrics.mean_absolute_error(y_test, y_pred).round(2))\nprint('Mean Squared Error : ', metrics.mean_squared_error(y_test, y_pred).round(2))\nprint('Root Mean Squared Error : ', np.sqrt(metrics.mean_absolute_error(y_test, y_pred).round(2)))\nprint('R Squared : ', metrics.r2_score(y_test, y_pred))","51319d85":"#distribution\nplt.figure(figsize = (10,6))\nsns.distplot(df['sales_price'])\nplt.title(\"Distribution of Sales Price\")\nplt.show()","12cf3b4a":"#change distribution\nfigure(figsize = (10,6))\nsubplot(1,2,1)\nhist(df['sales_price'] * 1e-6, 20);\nxlabel(\"Sales Price\")\nsubplot(1, 2, 2)\nhist(log10(mobile['sales_price']),20);\nxlabel(\"log10(Sales Price)\")","26d5263c":"#defining feature\ncoef = pd.Series(ridge.coef_, index = X.columns)\n\nimp_coef = pd.concat([coef.sort_values().head(10),\n                     coef.sort_values().tail(10)])","872ebcd4":"#visualize feature\nplt.figure(figsize = (10,6))\nimp_coef.plot(kind = 'barh')\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","e7be1c28":"#visualize brand\nplt.figure(figsize = (10,6))\nsns.countplot(mobile['brand'], palette = 'Set2')\nplt.title(\"Brand\")\nplt.show()","21c93754":"#visualize 100 row data of model\nplt.figure(figsize = (11,6))\nchart = sns.countplot(mobile['model'][0:100].values, palette = 'Set2')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title(\"Model\")\nplt.show()","68ec2de0":"#visualize color\nplt.figure(figsize = (10,6))\nsns.countplot(mobile['base_color'], palette = 'Set2')\nplt.title(\"Base Color\")\nplt.show()","4796b14e":"#visualize processor\nplt.figure(figsize = (10,6))\nsns.countplot(mobile['processor'], palette = 'Set2')\nplt.title(\"Processor\")\nplt.show()","8988c543":"#visualize screen size\nplt.figure(figsize = (10,6))\nsns.countplot(mobile['screen_size'], palette = 'Set2')\nplt.title(\"Screen Size\")\nplt.show()","8226b821":"#group brand & color\nbrand_color = mobile.groupby(['brand', 'base_color']).size().reset_index(name = 'Count')\nprint(brand_color)","6bb99f56":"#viusalize brand ~ color\nplt.figure(figsize = (12,6))\nsns.barplot(x = 'brand', y = 'Count', hue = 'base_color', data = brand_color, palette = 'Set1')\nplt.title(\"Brand ~ Color\")\nplt.legend(bbox_to_anchor = (1.04,1), borderaxespad = 0)\nplt.show()","68075fe6":"#group brand & processor\nbrand_processor = mobile.groupby(['brand', 'processor']).size().reset_index(name = 'Count')\nprint(brand_processor)","e4eb4a26":"#viusalize brand ~ processor\nplt.figure(figsize = (12,6))\nsns.barplot(x = 'brand', y = 'Count', hue = 'processor', data = brand_processor, palette = 'Set1')\nplt.title(\"Brand ~ Processor\")\nplt.legend(bbox_to_anchor = (1.04,1), borderaxespad = 0)\nplt.show()","2d868e2f":"#group brand & size\nbrand_size = mobile.groupby(['brand', 'screen_size']).size().reset_index(name = 'Count')\nprint(brand_size)","24eb2a26":"#viusalize brand ~ processor\nplt.figure(figsize = (12,6))\nsns.barplot(x = 'brand', y = 'Count', hue = 'screen_size', data = brand_size, palette = 'Set1')\nplt.title(\"Brand ~ Screen Size\")\nplt.legend(bbox_to_anchor = (1.04,1), borderaxespad = 0)\nplt.show()","a55f81d9":"plt.figure(figsize = (10,6))\nsns.boxplot(x = 'brand',y = 'sales_price', data = mobile)\nplt.title(\"Brand ~ Sales Price\")\nplt.show()","8445c75d":"mobile.hist(figsize = (15,10))\nplt.show()","cc835a43":"## Visualization","0a90a39e":"### Ridge Regression model is the best score result","018ad4a5":"## Data Extaction","b7fe5447":"# Mobile Pricing Prediction","52a6523a":"## Regression Model","4033f20d":"## Check Feature Importance"}}