{"cell_type":{"cc480c3f":"code","0ede9475":"code","e463b40a":"code","99f2af3e":"code","0aa97e14":"code","5a75eb0d":"code","deb37ba5":"code","80f80e48":"code","4fa6c471":"code","f0fdfed4":"code","93be79a5":"code","a7702380":"code","ec8c038a":"code","17df400d":"code","705a8f77":"code","c8c435d9":"code","9dc296f3":"code","58aae91a":"code","dd238f81":"code","2684eff8":"code","8cdce26b":"code","34a6a5f5":"code","1ae702cb":"code","e05dbcd5":"code","1c171f9f":"code","b1398ee8":"code","64d85d32":"code","3bfc08e2":"code","f3c23852":"code","f158cb47":"code","5103b52d":"code","fd28ad6a":"code","93e073e0":"code","60c9a155":"code","a22ad20c":"code","dab4e8a3":"code","93b4aa19":"code","6f914871":"code","21ee6c4d":"code","189ae77f":"code","6ecde612":"code","2e7c2bfd":"code","63d0dedb":"code","4b794c51":"code","38a3dae3":"code","4b59a74e":"code","24dc9d2b":"code","e2772671":"code","ddb93cae":"code","d0d5e8dd":"markdown","2ee43dfc":"markdown","885bddf0":"markdown","4581cad9":"markdown","26adf697":"markdown","ff163a7d":"markdown","70604bd6":"markdown","3dd69016":"markdown","7c1d8c49":"markdown"},"source":{"cc480c3f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import style\nstyle.use(\"fivethirtyeight\")","0ede9475":"data = pd.read_csv(\"..\/input\/forest-cover-type-prediction\/train.csv\")","e463b40a":"data.head()","99f2af3e":"data.shape","0aa97e14":"data.info()","5a75eb0d":"data.isna().sum()","deb37ba5":"data.drop(\"Id\", axis=1, inplace=True)","80f80e48":"x, y = data.drop(\"Cover_Type\", axis=1), data[\"Cover_Type\"]","4fa6c471":"from sklearn.model_selection import train_test_split","f0fdfed4":"xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.1, random_state=23)","93be79a5":"categoricals = []\nnumericals = []\nfor col in x.columns:\n    if col[:9]==\"Soil_Type\" or col[:15]=='Wilderness_Area':\n        categoricals.append(col)\n    else:\n        numericals.append(col)","a7702380":"from sklearn.preprocessing import RobustScaler\nss = RobustScaler()","ec8c038a":"xtrain","17df400d":"xtrain[numericals] = ss.fit_transform(xtrain[numericals])\nxtest[numericals] = ss.transform(xtest[numericals])","705a8f77":"xtrain.head()","c8c435d9":"from sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier(random_state=12)\ntree.fit(xtrain, ytrain)","9dc296f3":"from sklearn.metrics import classification_report","58aae91a":"y_pred_tr = tree.predict(xtrain)\ny_pred_ts = tree.predict(xtest)","dd238f81":"print(\"Training Results:\\n\")\nprint(classification_report(ytrain, y_pred_tr))\nprint(\"\\nTesting Results:\\n\")\nprint(classification_report(ytest, y_pred_ts))","2684eff8":"from sklearn.model_selection import cross_val_score","8cdce26b":"cvscore = cross_val_score(tree, xtrain, ytrain, cv=10, scoring='accuracy')","34a6a5f5":"cvscore","1ae702cb":"cvscore.mean()","e05dbcd5":"cvscore.std()","1c171f9f":"from sklearn.model_selection import StratifiedKFold","b1398ee8":"skf = StratifiedKFold(n_splits=10, shuffle=True, random_state=15)","64d85d32":"cvscore = cross_val_score(tree, xtrain, ytrain, cv=skf, scoring='accuracy')","3bfc08e2":"cvscore","f3c23852":"cvscore.mean()","f158cb47":"cvscore.std()","5103b52d":"sns.countplot(ytrain)","fd28ad6a":"from sklearn.model_selection import GridSearchCV","93e073e0":"hyperparameters = {\"max_depth\":(5, 15, 30, 50, 65, 80), \"max_features\":(0.2, 0.4, 0.6, 0.8), \"min_samples_split\":(2, 5, 8, 10, 20)}","60c9a155":"skf = StratifiedKFold(n_splits=10, shuffle=True, random_state=15)\n\n#opt = GridSearchCV(tree, hyperparameters, cv=10, n_jobs=-1)\n\nopt = GridSearchCV(estimator=tree, param_grid=hyperparameters, cv=skf, scoring=\"accuracy\", n_jobs=-1)","a22ad20c":"opt.fit(xtrain, ytrain)","dab4e8a3":"opt.best_estimator_","93b4aa19":"opt.best_score_","6f914871":"opt.best_params_","21ee6c4d":"pd.DataFrame(opt.cv_results_)","189ae77f":"all_results = pd.DataFrame(opt.cv_results_)\nall_results[(all_results[\"param_max_depth\"]==15) & (all_results[\"param_max_features\"]==0.8) & (all_results[\"param_min_samples_split\"]==2)]","6ecde612":"from sklearn.model_selection import RandomizedSearchCV","2e7c2bfd":"hyperparameters = {\"max_depth\":(5, 15, 30, 50, 65, 80), \"max_features\":(0.2, 0.1, 0.4, 0.6, 0.8), \"min_samples_split\":(2, 5, 8, 10, 20)}","63d0dedb":"skf = StratifiedKFold(n_splits=10, shuffle=True, random_state=15)","4b794c51":"opt = RandomizedSearchCV(estimator=tree, param_distributions=hyperparameters, n_iter=50, cv=skf, scoring=\"accuracy\", n_jobs=-1)","38a3dae3":"opt.fit(xtrain, ytrain)","4b59a74e":"opt.best_estimator_","24dc9d2b":"opt.best_score_","e2772671":"opt.best_params_","ddb93cae":"all_results = pd.DataFrame(opt.cv_results_)\nall_results[(all_results[\"param_max_depth\"]==15) & (all_results[\"param_max_features\"]==0.8) & (all_results[\"param_min_samples_split\"]==2)]","d0d5e8dd":"# Cross-Validation","2ee43dfc":"![](https:\/\/scikit-learn.org\/stable\/_images\/grid_search_cross_validation.png)","885bddf0":"This is a tutorial i presented as an instructor of ML\/DS at GDSC Enet'Com Tunisia","4581cad9":"(Picture from the sklearn documentation)","26adf697":"# Grid Search","ff163a7d":"# Randomized Search","70604bd6":"# Stratified Cross-Validation","3dd69016":"![](https:\/\/dataaspirant.com\/wp-content\/uploads\/2020\/12\/8-Stratified-K-Fold-Cross-Validation.png)","7c1d8c49":"# (Extremely) Basic Exploration & Processing"}}