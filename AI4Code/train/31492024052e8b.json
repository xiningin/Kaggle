{"cell_type":{"099322a9":"code","ebcac40f":"code","f4985b6d":"code","361a1ca5":"code","346b1670":"code","1d939b3c":"code","9d9e84d6":"code","e5b4325d":"code","4b1890d2":"code","553114d5":"code","f639269b":"code","eed383b2":"code","14e70e0c":"code","90ad9b4c":"code","a9071b69":"code","729c9731":"code","49e62d94":"code","1a2d6fa5":"code","d44ce4cc":"code","01a919e9":"code","d09b75c2":"code","abbda694":"code","4f9097fa":"markdown","237d7800":"markdown","3d61e5c1":"markdown","381e1f6c":"markdown","86f10b37":"markdown","c36f6fb9":"markdown","229d33f7":"markdown","5f915d47":"markdown","531de497":"markdown","7e27026a":"markdown","e6b1e042":"markdown"},"source":{"099322a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ebcac40f":"df = pd.read_csv('..\/input\/coursera-course-dataset\/coursea_data.csv')\ndf.head()","f4985b6d":"df.info()","361a1ca5":"# change course_students_enrolled values like: 53k into 53,000\n\ndf['course_students_enrolled'] = df['course_students_enrolled'].str.replace('k', '*1000')\ndf['course_students_enrolled'] = df['course_students_enrolled'].str.replace('m', '*1000000')\ndf['course_students_enrolled'] = df['course_students_enrolled'].map(lambda x: eval(x))\ndf['course_students_enrolled']","346b1670":"df.describe()","1d939b3c":"print(\"There are {} Rows and {} Columns in the dataset\".format(df.shape[0], df.shape[1]))","9d9e84d6":"# Check Null Values\n\ndf.isna().sum()","e5b4325d":"df.columns","4b1890d2":"df.index","553114d5":"ax = df['course_Certificate_type'].value_counts().plot(kind='bar', figsize=(16,12), color='dodgerblue')\nax.set_alpha(0.5)\nax.set_title('course_certificate_type')\nax.set_ylabel('Count')\n\ntotals = []\n\n# find the values and append to list\nfor i in ax.patches:\n    totals.append(i.get_height())\n\n# set individual bar lables using above list\ntotal = sum(totals)\n\n# set individual bar lables using above list\nfor i in ax.patches:\n    # get_x pulls left or right; get_height pushes up or down\n    ax.text(i.get_x(), i.get_height()+.5, \\\n            str(round((i.get_height()\/total)*100, 2))+'%', fontsize=15,\n                color='dimgrey')","f639269b":"ax = df['course_difficulty'].value_counts().plot(kind='bar', figsize=(16,12),\n                                                color=\"#F65F3A\")\nax.set_alpha(0.8)\nax.set_title(\"Course Difficulty Type\");\nax.set_ylabel('Count',fontsize=17);\ntotals = []\n\n# find the values and append to list\nfor i in ax.patches:\n    totals.append(i.get_height())\n\n# set individual bar lables using above list\ntotal = sum(totals)\n\n# set individual bar lables using above list\nfor i in ax.patches:\n    # get_x pulls left or right; get_height pushes up or down\n    ax.text(i.get_x(), i.get_height()+.5, \\\n            str(round((i.get_height()\/total)*100, 2))+'%', fontsize=15,\n                color='dimgrey')","eed383b2":"abc = df.groupby(['course_organization'])['course_organization'].count().to_dict()\nabc = pd.DataFrame({'course_organization': list(abc.keys()), 'Count': list(abc.values())})\nabc = abc.sort_values(by=['Count'], ascending=False)\nabc = abc.head(10)\nabc\n\n","14e70e0c":"plt.bar(abc['course_organization'], abc['Count'])\nplt.show()","90ad9b4c":"top_10_courses = df.loc[:,['course_title', 'course_students_enrolled']]\ntop_10_courses = top_10_courses.sort_values(by=['course_students_enrolled'], ascending=False)\ntop_10_courses = top_10_courses.head(10)\ntop_10_courses","a9071b69":"fig = plt.figure(figsize=(16, 12))\nax = fig.add_axes([0,0,1,1])\nax.bar(top_10_courses['course_title'], top_10_courses['course_students_enrolled'], color=\"#85DA62\")\nplt.show()","729c9731":"seo = df.loc[:, ['course_organization','course_students_enrolled']]\nseo = pd.DataFrame(seo.groupby(['course_organization'])['course_students_enrolled'].sum())\nseo = seo.sort_values(by=['course_students_enrolled'], ascending=False)\nseo = seo.head(10)\nseo","49e62d94":"df.groupby('course_rating')['course_students_enrolled'].count().plot(kind='bar', grid=True,\n    figsize=(16, 12)).set_ylabel('Enrolled')","1a2d6fa5":"cor = df.corr()\ncor","d44ce4cc":"sns.heatmap(cor, annot=True)","01a919e9":"sns.displot(df.course_rating, kde=True)","d09b75c2":"oc = round(df.groupby(['course_organization'])['course_rating'].mean()).to_dict()\noc","abbda694":"oc = pd.DataFrame({'course_organization': list(oc.keys()), 'course_rating': list(oc.values())})\nres = oc[oc['course_rating'] >=4.9]\nres","4f9097fa":"# Start Analyzing","237d7800":"# Top 10 Organizations enrolled_students wise in Coursera","3d61e5c1":"# Top 10 Organizations Course wise in Coursera","381e1f6c":"# Load Dataset","86f10b37":"# Course Difficulty ","c36f6fb9":"# Data Pre-processing\n","229d33f7":"# Which organization has the highest course rating?","5f915d47":"# Top 10 Courses on Coursera","531de497":"# How many type of courses available in Coursera","7e27026a":"As we see that maximum courses are available on single courses then some specialization courses and very few Professional certificate courses are avilable","e6b1e042":"This heatmap show that there is a high correlation between course_rating and course_student_enroolment. Its mean if the course_rating is high then definately student enroll those course"}}