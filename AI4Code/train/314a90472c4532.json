{"cell_type":{"2e33596e":"code","d9120e0c":"code","90deaf5c":"code","e65281d2":"code","5a3e3cff":"code","e1c5f0fd":"code","680644e1":"code","e1d413b8":"code","dfaec27e":"code","1234ba5f":"code","eb9bfd24":"code","d99d3a0d":"code","817b9bbb":"markdown","d3ad3435":"markdown","c3b4a554":"markdown","2bfbc2cb":"markdown","2cd2bcb3":"markdown","960c1f95":"markdown","590928cc":"markdown","681e2ec8":"markdown","e35ac76a":"markdown"},"source":{"2e33596e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d9120e0c":"# Importing pandas\nimport pandas as pd\n\n# Importing matplotlib and setting aesthetics for plotting later.\nimport matplotlib.pyplot as plt\n%matplotlib inline\n%config InlineBackend.figure_format = 'svg' \nplt.style.use('fivethirtyeight')\n\n# Reading datasets\/coinmarketcap_06122017.csv into pandas\ndec6 = pd.read_csv(\"..\/input\/coinmarketcap_06122017.csv\")\n\n# Selecting the 'id' and the 'market_cap_usd' columns\nmarket_cap_raw = dec6[['id','market_cap_usd']]\n\n\n# Counting the number of values\nprint(market_cap_raw.count())","90deaf5c":"dec6.head()","e65281d2":"# Filtering out rows without a market capitalization\ncap = market_cap_raw.dropna()\n\n# Counting the number of values again\nprint(cap.count())","5a3e3cff":"cap.head()","e1c5f0fd":"#Declaring these now for later use in the plots\nTOP_CAP_TITLE = 'Top 10 market capitalization'\nTOP_CAP_YLABEL = '% of total cap'\n\n# Selecting the first 10 rows and setting the index\ncap10=cap.set_index(\"id\").head(10)\n\n# Calculating market_cap_perc\ntotal=cap10.market_cap_usd.sum()\ncap10=cap10.assign(market_cap_perc=lambda x:(x['market_cap_usd']\/cap10.market_cap_usd.sum())*100)\nprint(cap10)\n# Plotting the barplot with the title defined above \n\nax = cap10.plot.bar(y=\"market_cap_perc\",title=TOP_CAP_TITLE)\n\n# Annotating the y axis with the label defined above\nax.set_ylabel(TOP_CAP_YLABEL)","680644e1":"# Colors for the bar plot\nCOLORS = ['orange', 'green', 'orange', 'cyan', 'cyan', 'blue', 'silver', 'orange', 'red', 'green']\n\n# Plotting market_cap_usd as before but adding the colors and scaling the y-axis  \nax = cap10.plot.bar(y=\"market_cap_usd\",title=\"Top 10 market capitalization\",color=COLORS)\nax.semilogy()\n\n# Annotating the y axis with 'USD'\nax.set_ylabel(\"USD\")\n\n# Final touch! Removing the xlabel as it is not very informative\nax.set_xlabel(\"\")","e1d413b8":"# Selecting the id, percent_change_24h and percent_change_7d columns\nvolatility = dec6[[\"id\",\"percent_change_24h\",\"percent_change_7d\"]]\n\n# Setting the index to 'id' and dropping all NaN rows\nvolatility = volatility.set_index(\"id\").dropna()\n\n# Sorting the DataFrame by percent_change_24h in ascending order\nvolatility = volatility.sort_values(by='percent_change_24h')\n\n# Checking the first few rows\nvolatility.head()","dfaec27e":"#Defining a function with 2 parameters, the series to plot and the title\ndef top10_subplot(volatility_series, title):\n    # Making the subplot and the figure for two side by side plots\n    fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(10, 6))\n    \n    # Plotting with pandas the barchart for the top 10 losers\n    ax = volatility_series[:10].plot.bar(y=\"percent_change_24h\",ax=axes[0],color=\"darkred\")\n    \n    # Setting the figure's main title to the text passed as parameter\n    fig.suptitle(title)\n    # ... YOUR CODE FOR TASK 7 ...\n    \n    # Setting the ylabel to '% change'\n    ax.set_ylabel(\"% change\")\n    # ... YOUR CODE FOR TASK 7 ...\n    \n    # Same as above, but for the top 10 winners\n    ax = volatility_series[-10:].plot.bar(y=\"percent_change_24h\",ax=axes[1],color=\"darkblue\")\n    \n    # Returning this for good practice, might use later\n    return fig, ax\n\nDTITLE = \"24 hours top losers and winners\"\n\n# Calling the function above with the 24 hours period series and title DTITLE  \nfig, ax = top10_subplot(volatility.percent_change_24h, DTITLE)","1234ba5f":"# Sorting in ascending order\nvolatility7d = volatility.sort_values(by='percent_change_7d')\n\nWTITLE = \"Weekly top losers and winners\"\n\n# Calling the top10_subplot function\nfig, ax = top10_subplot(volatility7d.percent_change_7d, WTITLE)","eb9bfd24":"# Selecting everything bigger than 10 billion \nlargecaps = cap.query(\"market_cap_usd>10000000000\")\n\n# Printing out largecaps\nprint(largecaps)","d99d3a0d":"# Making a nice function for counting different marketcaps from the\n# \"cap\" DataFrame. Returns an int.\n\ndef capcount(query_string):\n    return cap.query(query_string).count().id\n\n# Labels for the plot\nLABELS = [\"biggish\", \"micro\", \"nano\"]\n\n# Using capcount count the biggish cryptos\nbiggish = capcount('market_cap_usd>300000000')\n\n# Same as above for micro ...\nmicro = capcount('market_cap_usd>50000000 and market_cap_usd<300000000')\n\n# ... and for nano\nnano =  capcount('market_cap_usd<50000000')\n\n# Making a list with the 3 counts\nvalues = [biggish,micro,nano]\n\n# Plotting them with matplotlib \nplt.bar(range(len(values)), values, tick_label=LABELS)","817b9bbb":"# 3. How big is Bitcoin compared with the rest of the cryptocurrencies?\nAt the time of writing, Bitcoin is under serious competition from other projects, but it is still dominant in market capitalization. Let's plot the market capitalization for the top 10 coins as a barplot to better visualize this.","d3ad3435":"# 5. What is going on?! Volatility in cryptocurrencies\nThe cryptocurrencies market has been spectacularly volatile since the first exchange opened. This notebook didn't start with a big, bold warning for nothing. Let's explore this volatility a bit more! We will begin by selecting and plotting the 24 hours and 7 days percentage change, which we already have available.","c3b4a554":"# 8. How small is small?\nThe names of the cryptocurrencies above are quite unknown, and there is a considerable fluctuation between the 1 and 7 days percentage changes. As with stocks, and many other financial products, the smaller the capitalization, the bigger the risk and reward. Smaller cryptocurrencies are less stable projects in general, and therefore even riskier investments than the bigger ones1. Let's classify our dataset based on Investopedia's capitalization definitions for company stocks.\n\n1 Cryptocurrencies are a new asset class, so they are not directly comparable to stocks. Furthermore, there are no limits set in stone for what a \"small\" or \"large\" stock is. Finally, some investors argue that bitcoin is similar to gold, this would make them more comparable to a commodity instead.","2bfbc2cb":"# 4. Making the plot easier to read and more informative\nWhile the plot above is informative enough, it can be improved. Bitcoin is too big, and the other coins are hard to distinguish because of this. Instead of the percentage, let's use a log10 scale of the \"raw\" capitalization. Plus, let's use color to group similar coins and make the plot more informative1.\n\nFor the colors rationale: bitcoin-cash and bitcoin-gold are forks of the bitcoin blockchain2. Ethereum and Cardano both offer Turing Complete smart contracts. Iota and Ripple are not minable. Dash, Litecoin, and Monero get their own color.\n\n1 This coloring is a simplification. There are more differences and similarities that are not being represented here.\n\n2 The bitcoin forks are actually very different, but it is out of scope to talk about them here. Please see the warning above and do your own research.","2cd2bcb3":"1. Bitcoin and Cryptocurrencies: Full dataset, filtering, and reproducibility\nSince the launch of Bitcoin in 2008, hundreds of similar projects based on the blockchain technology have emerged. We call these cryptocurrencies (also coins or cryptos in the Internet slang). Some are extremely valuable nowadays, and others may have the potential to become extremely valuable in the future1. In fact, on the 6th of December of 2017, Bitcoin has a market capitalization above $200 billion.\n\n\nThe astonishing increase of Bitcoin market capitalization in 2017.\n![image.png](attachment:image.png)","960c1f95":"# 6. Well, we can already see that things are a bit crazy\nIt seems you can lose a lot of money quickly on cryptocurrencies. Let's plot the top 10 biggest gainers and top 10 losers in market capitalization.","590928cc":"# 9. Most coins are tiny\nNote that many coins are not comparable to large companies in market cap, so let's divert from the original Investopedia definition by merging categories.","681e2ec8":"# 2. Discard the cryptocurrencies without a market capitalization \nWhy do the count() for id and market_cap_usd differ above? It is because some cryptocurrencies listed in coinmarketcap.com have no known market capitalization, this is represented by NaN in the data, and NaNs are not counted by count(). These cryptocurrencies are of little interest to us in this analysis, so they are safe to remove.","e35ac76a":"# 7. Ok, those are... interesting. Let's check the weekly Series too.\n800% daily increase?! Why are we doing this tutorial and not buying random coins?1\n\nAfter calming down, let's reuse the function defined above to see what is going weekly instead of daily.\n\n1 Please take a moment to understand the implications of the red plots on how much value some cryptocurrencies lose in such short periods of time"}}