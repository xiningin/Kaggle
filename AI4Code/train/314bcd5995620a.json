{"cell_type":{"29fb62c9":"code","e6efd31b":"code","0db0cbe4":"code","25a14a0c":"code","f1a1515d":"code","9b9da226":"code","bbd1ed7d":"code","3c02fc46":"code","c3341d31":"code","5f3e07d3":"code","8c45b86f":"code","a9838a02":"code","d27ae196":"code","52219dbf":"code","1296c316":"code","253a6ae6":"code","cd6074b0":"code","5d2a8dab":"markdown","8617b2ea":"markdown","d9146969":"markdown","ab0d7ec9":"markdown","daf6bb3a":"markdown"},"source":{"29fb62c9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e6efd31b":"df = pd.read_csv('..\/input\/top-personality-dataset\/2018-personality-data.csv')\ndf.head()","0db0cbe4":"df.shape","25a14a0c":"df.columns","f1a1515d":"# remove leading spaces in column names\ndf = df.rename(columns={' openness' : 'openness',\n                ' agreeableness' : 'agreeableness',\n                ' emotional_stability' : 'emotional_stability',\n                ' conscientiousness' : 'conscientiousness',\n                ' extraversion' : 'extraversion',\n                ' assigned metric' : 'assigned metric',\n                ' assigned condition' : 'assigned condition',\n                ' movie_1' : 'movie_1',\n                ' movie_2' : 'movie_2',  \n                ' movie_3' : 'movie_3',  \n                ' movie_4' : 'movie_4',  \n                ' movie_5' : 'movie_5',  \n                ' movie_6' : 'movie_6',  \n                ' movie_7' : 'movie_7',  \n                ' movie_8' : 'movie_8',  \n                ' movie_9' : 'movie_9',  \n                ' movie_10' : 'movie_10',\n                ' movie_11' : 'movie_11',      \n                ' movie_12' : 'movie_12',\n                ' predicted_rating_1' : 'predicted_rating_1',\n                ' predicted_rating_2' : 'predicted_rating_2',\n                ' predicted_rating_3' : 'predicted_rating_3',\n                ' predicted_rating_4' : 'predicted_rating_4',\n                ' predicted_rating_5' : 'predicted_rating_5',\n                ' predicted_rating_6' : 'predicted_rating_6',\n                ' predicted_rating_7' : 'predicted_rating_7',\n                ' predicted_rating_8' : 'predicted_rating_8',\n                ' predicted_rating_9' : 'predicted_rating_9',\n                ' predicted_rating_10' : 'predicted_rating_10',\n                ' predicted_rating_11' : 'predicted_rating_11',\n                ' predicted_rating_12' : 'predicted_rating_12',\n                ' is_personalized' : 'is_personalized',\n                ' enjoy_watching ' : 'enjoy_watching'})","9b9da226":"df.columns","bbd1ed7d":"ocean = ['openness','agreeableness','emotional_stability','conscientiousness','extraversion']","3c02fc46":"# pairwise scatter plot\nsns.pairplot(df[ocean], kind='reg', plot_kws={'line_kws':{'color':'magenta'}, 'scatter_kws': {'alpha': 0.1}})\nplt.show()","c3341d31":"# correlation\ncor_ocean = df[ocean].corr()\ncor_ocean","5f3e07d3":"plt.rcParams['figure.figsize']=(6,5)\nsns.heatmap(cor_ocean, cmap=plt.cm.plasma)\nplt.show()","8c45b86f":"scaler = StandardScaler()\ndf_scaled = scaler.fit_transform(df[ocean])\ndf_scaled","a9838a02":"# define cluster algorithm\nn_cl = 3\nkmeans = KMeans(init=\"random\", n_clusters=n_cl, n_init=10, max_iter=300, random_state=99)\n# and run it\nkmeans.fit(df_scaled)","d27ae196":"# show cluster centers\nkmeans.cluster_centers_","52219dbf":"# append cluster variable\ndf['cluster'] = kmeans.labels_.astype('object')","1296c316":"df4pca = df[ocean]\n# standardize first\ndf4pca_std = StandardScaler().fit_transform(df4pca)\n# define 3D PCA\npc_model = PCA(n_components=3)\n# apply PCA\npc = pc_model.fit_transform(df4pca_std)\n# convert to data frame\ndf_pc = pd.DataFrame(data = pc, columns = ['pc_1', 'pc_2', 'pc_3'])\n# add origin column\ndf_pc['cluster'] = df.cluster\n# and look at result\ndf_pc.head()","253a6ae6":"# add PCA data to original data frame, so we have all data in one place\ndf['pc_1'] = df_pc.pc_1\ndf['pc_2'] = df_pc.pc_2\ndf['pc_3'] = df_pc.pc_3\ndf.head()","cd6074b0":"# interactive plot\nfig = px.scatter_3d(df, x='pc_1', y='pc_2', z='pc_3',\n                    color='cluster',\n                    size='enjoy_watching',\n                    hover_data=['userid'],\n                    opacity=0.5)\nfig.update_layout(title='PCA 3D')\nfig.show()","5d2a8dab":"# Load and data preparation","8617b2ea":"# PCA to visualize clusters","d9146969":"# EDA","ab0d7ec9":"# Explore OCEAN features: EDA, Clustering and PCA\/Visualization","daf6bb3a":"# Clustering"}}