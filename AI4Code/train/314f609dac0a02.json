{"cell_type":{"18681862":"code","edd6cafe":"code","bfe11d1e":"code","31d43cf8":"code","7b755d89":"code","8056bba1":"code","e7c09b75":"code","8d37adc6":"code","edc6659b":"code","909cf173":"code","293acb8b":"code","cac950f9":"code","a965004a":"code","74292d88":"code","7808986b":"code","52f90466":"code","b2b87148":"code","9fbc10fd":"code","90616a3c":"code","74a79463":"code","039161e5":"code","db97916c":"code","3a392bd4":"code","bc3a7b7b":"code","02b2eeea":"markdown","b8fc5d04":"markdown","6742920b":"markdown","edc647de":"markdown","12f99882":"markdown","9130ba3b":"markdown","18204ab9":"markdown","bbca43a9":"markdown","7dcf5ca8":"markdown","52a27f6c":"markdown","93d34a79":"markdown","f3aed711":"markdown","7469e070":"markdown","e2a6c594":"markdown","233df051":"markdown","be523d47":"markdown","bbb68451":"markdown","03aac73f":"markdown"},"source":{"18681862":"from IPython.display import Image\nimport os\n!ls ..\/input\/images","edd6cafe":"Image(\"..\/input\/images\/2.JPG\")","bfe11d1e":"import pandas as pd\nimport numpy as np","31d43cf8":"datasix1 = pd.read_csv('\/kaggle\/input\/human-gait-phase-dataset\/data\/GP1_0.6_marker.csv')\ndataseven2 = pd.read_csv('\/kaggle\/input\/human-gait-phase-dataset\/data\/GP1_0.7_marker.csv')\ndatasix1.head()","7b755d89":"data1 = pd.DataFrame({'dependent':np.zeros(12000)})\ndata2 = pd.DataFrame({'dependent':np.ones(12000)})\n\ndata2 = pd.concat([dataseven2,data2],axis=1)\ndata1 = pd.concat([datasix1,data1],axis=1)\n\ndata = data1.append(data2,ignore_index=True)\ndata.head()","8056bba1":"x = data.drop([\"dependent\"],axis=1)\ny = data.dependent.values\nx.head()","e7c09b75":"from sklearn.model_selection import train_test_split\nx_train, x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=1)","8d37adc6":"from sklearn.svm import SVC\n\nsvm = SVC(random_state = 1)\nsvm.fit(x_train,y_train)\nprint(\"acc of svm is :\",svm.score(x_test,y_test))\n\n","edc6659b":"from sklearn.naive_bayes import GaussianNB\n\nnb = GaussianNB()\nnb.fit(x_train,y_train)\nprint('accuracy of bayes in test data is :', nb.score(x_test,y_test))","909cf173":"from sklearn.tree import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier()\ndt.fit(x_train,y_train)\nprint('Accuracy of dec tree in test data is:',dt.score(x_test,y_test))","293acb8b":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=100,random_state=1)\nrf.fit(x_train,y_train)\nprint('Random Forest accuracy on test data is : ',rf.score(x_test,y_test))","cac950f9":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors = 3) #n_neighbors = k\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)\n\nprint(\"k={} and score:{}\".format(3,knn.score(x_test,y_test)*100))","a965004a":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(x_train,y_train)\nprint(\"test accuracy for Log Regressin is  {}\".format(lr.score(x_test,y_test)))","74292d88":"from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nmodel = XGBClassifier(learning_rate =0.1, n_estimators=280, max_depth=5,random_state=0)\n\nmodel.fit(x_train,y_train)\npred = model.predict(x_test)\nprediction=[round(value) for value in pred]\naccuracy= accuracy_score(y_test,prediction)\nprint(model.score)\nprint(\"Accuracy:%.2f%%\" %(accuracy *100.0))","7808986b":"from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nmodel = XGBClassifier(learning_rate =0.1, n_estimators=280, max_depth=5,random_state=0)\neval_set=[(x_test, y_test)]\nmodel.fit(x_train,y_train,early_stopping_rounds=10, eval_metric=\"logloss\", eval_set=eval_set)\npred = model.predict(x_test)\nprediction=[round(value) for value in pred]\naccuracy= accuracy_score(y_test,prediction)\nprint(model.score)\nprint(\"Accuracy:%.2f%%\" %(accuracy *100.0))","52f90466":"from catboost import CatBoostClassifier\ncat_model = CatBoostClassifier(verbose=0, n_estimators=100,  learning_rate = 0.5, random_state=0)\ncat_model.fit(x_train,y_train)\npred_cat = cat_model.predict(x_test)\nprediction1=[round(value) for value in pred_cat]\naccuracy= accuracy_score(y_test,prediction1)\nprint(cat_model.score)\nprint(\"Accuracy:%.2f%%\" %(accuracy *100.0))\n","b2b87148":"import lightgbm as lgb\nmodel = lgb.LGBMClassifier(learning_rate=0.09,max_depth=-5,random_state=42)\nmodel.fit(x_train,y_train,eval_set=[(x_test,y_test),(x_train,y_train)],\n          verbose=20,eval_metric='logloss')\nprint('Training accuracy {:.4f}'.format(model.score(x_train,y_train)))\nprint('Testing accuracy {:.4f}'.format(model.score(x_test,y_test)))\n","9fbc10fd":"lgb.plot_importance(model)","90616a3c":"from IPython.display import Image\nimport os\n!ls ..\/input\/images4","74a79463":"Image(\"..\/input\/images4\/1.JPG\")","039161e5":"from IPython.display import Image\nimport os\n!ls ..\/input\/images1","db97916c":"Image(\"..\/input\/images1\/3.JPG\")","3a392bd4":"from IPython.display import Image\nimport os\n!ls ..\/input\/images4","bc3a7b7b":"Image(\"..\/input\/images4\/1.JPG\")","02b2eeea":"**Let's split the data as train and test.**","b8fc5d04":"****we have used 0.6 and 0.7 m\/s speed data to classify ********","6742920b":"**CatBoost**","edc647de":"**XgBoost using early-stopping**","12f99882":"**Decision Tree Classifier.**","9130ba3b":"****GAIT CLASSIFICATION DATASET****","18204ab9":"**Let's try SVM.**","bbca43a9":"**Naive Bayes Classifier**","7dcf5ca8":"**LightGBM**","52a27f6c":"*Combine both 0.7 and 0.6 speed data with class of 0.6 m\/s speed data is 0 and class of 0.7 m\/s speed data is 1.* **dependent = class**","93d34a79":"**(FM1)=first metatarsal**\n\n**(FM2)=second metatarsal**\n\n**(FM5)=fifth metatarsal**\n\n**(FCC)=force calcaneus**","f3aed711":"**Y = dependent = classes , \nx = data without classes**","7469e070":"**Random Forest Classifier**","e2a6c594":"**XGBoost**","233df051":"**LITERATURE REVIEW** and **REFERENCE**\n\n1)Preliminary Investigation of Textile-Based Strain Sensors for the Detection of Human Gait Phases Using Machine Learning\n\n2) Machine Learning based Human Gait Segmentation with Wearable Sensor Platform\n\n3) Machine-Learning-Based Prediction of Gait Events From EMG in Cerebral Palsy Children ","be523d47":"**Logistic Regression Classifier**","bbb68451":"**Knn with k = 3**","03aac73f":"**Let's import the data of 1st subject with 0.6 and 0.7 m\/s speed.**"}}