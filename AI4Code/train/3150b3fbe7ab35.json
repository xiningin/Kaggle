{"cell_type":{"778f7833":"code","f9212ed1":"code","65e258f8":"code","1e957229":"code","89a2c4c3":"code","04468286":"code","40026d86":"code","11dd4846":"code","70b881e7":"code","c28eb082":"code","04b62aa8":"code","c0dd5800":"code","bf441a2d":"code","d231b6a1":"code","22d05f8a":"code","f08cd21e":"markdown","0dd4d832":"markdown","e9a251f5":"markdown","caadff54":"markdown","c5a2a134":"markdown","de0ce590":"markdown","f1022ef4":"markdown","10b2da95":"markdown","1de35308":"markdown","229c4079":"markdown","a1fe36b7":"markdown","af861104":"markdown","1b9a1fa6":"markdown"},"source":{"778f7833":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f9212ed1":"data=pd.read_csv('..\/input\/Admission_Predict_Ver1.1.csv')\ndata.drop('Serial No.',axis=1,inplace=True)\ndata=data.rename(columns={'Chance of Admit ':'Chance of Admit','LOR ':'LOR'})\ndata.head()","65e258f8":"# The threshold will influence the final accuracy. The lower the threshold, the higher the accuracy.\ndata['Chance of Admit']=[1 if i>=0.8 else 0 for i in data['Chance of Admit']]\ndata['Chance of Admit'].head()","1e957229":"data.info()","89a2c4c3":"data.isnull().any()","04468286":"#Visualisation\nimport matplotlib.pyplot as plt\n\n#Machine learning model and evaluation methods\n\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix","40026d86":"data.columns","11dd4846":"X=data[['GRE Score', 'TOEFL Score', 'University Rating', 'SOP', 'LOR', 'CGPA',\n       'Research']]\ny=data['Chance of Admit']\nX_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.1,random_state=42)","70b881e7":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","c28eb082":"X_train","04b62aa8":"X_test","c0dd5800":"error_rate=[]\nfor i in range(1,50):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    predictions=knn.predict(X_test)\n    error_rate.append(np.mean(predictions!=y_test))\n\nnum=np.array(error_rate).argmin()+1\n\nprint ('The lowest error rate is ',np.min(error_rate),'when k=',num)","bf441a2d":"plt.figure(figsize=(10,6))\nplt.plot(range(1,50),error_rate,color='blue',linestyle='dashed',marker='o',markerfacecolor='red',markersize=10)","d231b6a1":"knn=KNeighborsClassifier(n_neighbors=num)\nknn.fit(X_train, y_train)\npredictions=knn.predict(X_test)","22d05f8a":"confusion_matrix(y_test,predictions)","f08cd21e":"## Evaluation","0dd4d832":"# Standardisation","e9a251f5":"## Use iteration to find out the best k value for KNN model.\n","caadff54":"# Use the best k value to build KNN model","c5a2a134":"## Checking missing values","de0ce590":"## Set the threshold of admit to 0.8","f1022ef4":"# Data Preprocessing","10b2da95":"## Checking categorical data","1de35308":"## Import packages","229c4079":"# Read in data. Drop the useless column (Serial No.). Rename the column.","a1fe36b7":"# Building machine learning model","af861104":"## Visualise the iteration","1b9a1fa6":"## Setting independent variables and target variable. Split the data to training set and test set. Test set size is 10%."}}