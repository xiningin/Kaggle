{"cell_type":{"65f1dd8d":"code","6e0b7b6b":"code","3df38d9a":"code","4c8043b1":"code","7f4bb04b":"code","fed5fbd3":"code","86f76c73":"code","84babb7f":"code","fec116f4":"code","cfd533c3":"code","e29cd1c3":"code","4dad0d29":"code","57000d7c":"code","f08f2d4b":"code","634a2053":"code","15136930":"code","7ba1cf27":"code","9e436283":"code","b8e155bf":"code","b85a1859":"code","99abb947":"code","4bba204b":"code","8a5e01cd":"code","e396e4a8":"code","2a750fd0":"code","0fa86cb9":"code","88dee807":"code","b5ca4d32":"code","6076d0fa":"code","157539a3":"code","cacf11da":"code","f0d134c4":"code","42f51f38":"code","692a8178":"code","e46ffc2b":"code","ac1c4251":"code","b0cf8aa0":"code","f7a4cddd":"code","3d186544":"code","c2f2bfd1":"code","595a910b":"code","5f467ed9":"code","7250945a":"code","e9bbdf41":"code","3a672298":"code","a60d49b6":"code","d2ef4d73":"code","17863cb3":"code","8075cadd":"code","4b9f874a":"code","ab3f64d2":"code","f9231485":"code","1f54908f":"code","323256d8":"code","ca398bcf":"code","2444d07e":"code","e38901df":"code","dfcaeca0":"code","d7eba61d":"code","9097bee5":"code","f92f4be1":"code","0ddd58fa":"code","5d06b39c":"code","cda8ccb8":"code","15c821ba":"code","0784ee66":"code","4130f607":"code","a6434252":"code","4a452c94":"code","1c8bde76":"code","a7ff4b34":"code","fec4626f":"code","a7d63696":"code","24d1a303":"code","ca8ed247":"code","280709af":"code","77f46def":"code","9df06eff":"code","fc079fde":"code","24812550":"code","fbbb9778":"code","eb5b159b":"code","66d01397":"code","95ade597":"code","fd3b60b1":"code","8e5787e1":"code","ac64097e":"code","abb7bc9a":"code","e3f5a3ce":"code","d0c1ca6c":"code","4280bb2c":"code","65f5f2c1":"code","72f3e692":"code","d7f76dad":"code","e450eef3":"code","f9d4f919":"code","71cb9c78":"code","3d603e5d":"code","b84a602d":"code","9ac4f9b4":"code","b03fc8be":"code","a7d0505e":"code","a5979f70":"code","35c141c9":"code","6d632975":"code","31cdc8ee":"code","4993c7a6":"code","8e31c824":"code","e5b209b6":"code","8d518a3c":"code","4d5a55e8":"code","3fde9d6c":"code","fb14b49f":"code","bb60c5b6":"code","7b92c95d":"code","217bc028":"code","cc65c546":"markdown","e88cffec":"markdown","bf3e0a1e":"markdown","8a360788":"markdown","8d7506bf":"markdown","14d9871b":"markdown","c5192660":"markdown","d7f81690":"markdown","0f6b8c28":"markdown","161e8102":"markdown","d2628a61":"markdown","2313c1cf":"markdown","7bf38c78":"markdown","5e95ff29":"markdown","0744c10e":"markdown","eaf90886":"markdown","73b7ec91":"markdown","fa30e662":"markdown","7cf28b8f":"markdown","91ddebff":"markdown","8175002e":"markdown","59659d21":"markdown","14754be4":"markdown","ce90d539":"markdown","0a25b830":"markdown","6d63b19b":"markdown","5a64cf3a":"markdown","ca27ab46":"markdown","b086c27a":"markdown","3bf0cc59":"markdown","18ad4f32":"markdown","b6c8f388":"markdown","5e26ff66":"markdown","1c03bc1f":"markdown","76f41bbe":"markdown","8dc327eb":"markdown","0d950a30":"markdown","b3c4d755":"markdown","fb75f2af":"markdown","c359a13c":"markdown","31f220b2":"markdown","afc10d40":"markdown","b71ca448":"markdown","76ae0833":"markdown","9e4d8db0":"markdown","e7535b31":"markdown","b9295a3a":"markdown","b70afeec":"markdown","97cd5a0c":"markdown","244247e3":"markdown","11f1518b":"markdown","be8de3f9":"markdown","77f8a896":"markdown","f0d3463f":"markdown","099b3259":"markdown","437621ed":"markdown","aa6a0000":"markdown","3e75aa57":"markdown","3cde33dd":"markdown","8257c5df":"markdown","a71d7e76":"markdown","7299342c":"markdown","9f33b8e7":"markdown","886fd471":"markdown","48e3ddc7":"markdown","4fa8e6a4":"markdown","fb429b3e":"markdown","c84dc86c":"markdown","2f14d1d7":"markdown","d6a58a24":"markdown","03bd9a5a":"markdown","035c3884":"markdown","f5eb8a03":"markdown","4c6df37d":"markdown","0d157436":"markdown","384b0730":"markdown","416657bd":"markdown","63f9b278":"markdown","1bfc832d":"markdown","b7626d4e":"markdown","75dde807":"markdown"},"source":{"65f1dd8d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom category_encoders import TargetEncoder\nfrom sklearn.preprocessing import StandardScaler\nimport statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn import metrics\nfrom sklearn.model_selection import KFold","6e0b7b6b":"df_train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","3df38d9a":"df_train.shape","4c8043b1":"pd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)\ndf_train.head(10)","7f4bb04b":"col_dtypes = {\"dtypes\": df_train.dtypes}\npd.DataFrame(col_dtypes)","fed5fbd3":"fig = plt.figure(figsize = (12, 8))\nsns.heatmap(df_train.corr())\nplt.show()","86f76c73":"num_col = [\"OverallQual\", \"YearBuilt\", \"YearRemodAdd\", \"MasVnrArea\", \"TotalBsmtSF\", \"1stFlrSF\", \"GrLivArea\", \"FullBath\", \"TotRmsAbvGrd\", \"Fireplaces\", \"GarageYrBlt\", \"GarageCars\", \"GarageArea\", \"SalePrice\"]\ndf_num = df_train[num_col]\ndf_num.head()","84babb7f":"fig = plt.figure(figsize = (10, 7))\nsns.heatmap(df_num.corr())\nplt.show()","fec116f4":"fig = plt.figure(figsize=(12, 8))\nplot1 = plt.subplot2grid((2,2),(0,0))\nplot2 = plt.subplot2grid((2,2),(0,1))\nplot3 = plt.subplot2grid((2,2),(1,0))\nplot4 = plt.subplot2grid((2,2),(1,1))\n\nplot1.scatter(df_num[\"1stFlrSF\"], df_num[\"TotalBsmtSF\"])\nplot1.set_title(\"1stFlrSF vs TotalBsmtSF\")\n\nplot2.scatter(df_num[\"GarageYrBlt\"], df_num[\"YearBuilt\"])\nplot2.set_title(\"GarageYrBlt vs YearBuilt\")\n\nplot3.scatter(df_num[\"TotRmsAbvGrd\"], df_num[\"GrLivArea\"])\nplot3.set_title(\"TotRmsAbvGrd vs GrLivArea\")\n\nplot4.scatter(df_num[\"GarageArea\"], df_num[\"GarageCars\"])\nplot4.set_title(\"GarageArea vs GarageCars\")\n\nplt.tight_layout()\nplt.show()","cfd533c3":"# Dropping Collinear features\ncoll_features = [\"1stFlrSF\", \"GarageYrBlt\", \"TotRmsAbvGrd\", \"GarageArea\"]\ndf_num_final = df_num.drop(coll_features, axis=1)\ndf_num_final.head(10)","e29cd1c3":"df_cat = df_train.select_dtypes(include=\"object\")\ndf_cat.head(10)","4dad0d29":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(y = df_train[\"SalePrice\"], x = df_train[\"MSZoning\"])\nplt.show()","57000d7c":"df_cat[\"MSZoning\"].value_counts()","f08f2d4b":"df_cat[\"Street\"].value_counts()","634a2053":"df_cat[\"Alley\"].value_counts()","15136930":"df_cat[\"Alley\"].isnull().sum()","7ba1cf27":"df_cat.loc[:, \"Alley\"].fillna(\"No Alley\", inplace=True)\ndf_cat[\"Alley\"].isnull().sum()","9e436283":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"Alley\"], y=df_train[\"SalePrice\"])","b8e155bf":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x = df_cat[\"LotShape\"], y=df_train[\"SalePrice\"])\nplt.show()","b85a1859":"df_cat[\"LotShape\"].value_counts()","99abb947":"df_cat[\"LandContour\"].value_counts()","4bba204b":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"LandContour\"], y=df_train[\"SalePrice\"])\nplt.show()","8a5e01cd":"df_cat[\"Utilities\"].value_counts()","e396e4a8":"df_cat[\"LotConfig\"].value_counts()","2a750fd0":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"LotConfig\"], y=df_train[\"SalePrice\"])\nplt.show()","0fa86cb9":"df_cat[\"LandSlope\"].value_counts()","88dee807":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"LandSlope\"], y=df_train[\"SalePrice\"])\nplt.show()","b5ca4d32":"df_cat[\"Neighborhood\"].value_counts()","6076d0fa":"df_cat[\"Condition1\"].value_counts()","157539a3":"df_cat[\"Condition2\"].value_counts()","cacf11da":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"Condition1\"], y=df_train[\"SalePrice\"])\nplt.show()","f0d134c4":"df_cat[\"BldgType\"].value_counts()","42f51f38":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"BldgType\"], y=df_train[\"SalePrice\"])\nplt.show()","692a8178":"df_cat[\"HouseStyle\"].value_counts()","e46ffc2b":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"HouseStyle\"], y=df_train[\"SalePrice\"])\nplt.show()","ac1c4251":"df_cat[\"RoofStyle\"].value_counts()","b0cf8aa0":"df_cat[\"RoofMatl\"].value_counts()","f7a4cddd":"df_cat[\"Exterior1st\"].value_counts()","3d186544":"df_cat[\"Exterior2nd\"].value_counts()","c2f2bfd1":"df_cat[\"MasVnrType\"].value_counts()","595a910b":"df_cat[\"MasVnrType\"].isnull().sum()","5f467ed9":"df_cat.loc[:, \"MasVnrType\"].fillna(\"None\", inplace=True)\ndf_cat[\"MasVnrType\"].isnull().sum()","7250945a":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"MasVnrType\"], y=df_train[\"SalePrice\"])\nplt.show()","e9bbdf41":"df_cat[\"ExterQual\"].value_counts()","3a672298":"df_cat[\"ExterCond\"].value_counts()","a60d49b6":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"ExterQual\"], y=df_train[\"SalePrice\"])\nplt.show()","d2ef4d73":"df_cat[\"Foundation\"].value_counts()","17863cb3":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"Foundation\"], y=df_train[\"SalePrice\"])\nplt.show()","8075cadd":"df_cat[\"BsmtQual\"].value_counts()","4b9f874a":"df_cat[\"BsmtCond\"].value_counts()","ab3f64d2":"df_cat[\"BsmtQual\"].isnull().sum()","f9231485":"df_cat.loc[:, \"BsmtQual\"].fillna(\"No Basement\", inplace=True)\ndf_cat[\"BsmtQual\"].isnull().sum()","1f54908f":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"BsmtQual\"], y=df_train[\"SalePrice\"])\nplt.show()","323256d8":"df_cat[\"BsmtExposure\"].value_counts()","ca398bcf":"df_cat[\"BsmtExposure\"].isnull().sum()","2444d07e":"df_cat.loc[:, \"BsmtExposure\"].fillna(\"No Basement\", inplace=True)\ndf_cat[\"BsmtExposure\"].isnull().sum()","e38901df":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"BsmtExposure\"], y=df_train[\"SalePrice\"])\nplt.show()","dfcaeca0":"df_cat[\"BsmtFinType1\"].value_counts()","d7eba61d":"df_cat[\"BsmtFinType2\"].value_counts()","9097bee5":"df_cat[\"BsmtFinType1\"].isnull().sum()","f92f4be1":"df_cat.loc[:, \"BsmtFinType1\"].fillna(\"No Basement\", inplace=True)\ndf_cat[\"BsmtFinType1\"].isnull().sum()","0ddd58fa":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"BsmtFinType1\"], y=df_train[\"SalePrice\"])\nplt.show()","5d06b39c":"df_cat[\"HeatingQC\"].value_counts()","cda8ccb8":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"HeatingQC\"], y=df_train[\"SalePrice\"])\nplt.show()","15c821ba":"df_cat[\"CentralAir\"].value_counts()","0784ee66":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"CentralAir\"], y=df_train[\"SalePrice\"])\nplt.show()","4130f607":"df_cat[\"Electrical\"].value_counts()","a6434252":"df_cat[\"KitchenQual\"].value_counts()","4a452c94":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"KitchenQual\"], y=df_train[\"SalePrice\"])\nplt.show()","1c8bde76":"df_cat[\"Functional\"].value_counts()","a7ff4b34":"df_cat[\"FireplaceQu\"].value_counts()","fec4626f":"df_cat[\"FireplaceQu\"].isnull().sum()","a7d63696":"df_cat.loc[:, \"FireplaceQu\"].fillna(\"No FirePlace\", inplace=True)\ndf_cat[\"FireplaceQu\"].isnull().sum()","24d1a303":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"FireplaceQu\"], y=df_train[\"SalePrice\"])\nplt.show()","ca8ed247":"df_cat[\"GarageType\"].value_counts()","280709af":"df_cat[\"GarageType\"].isnull().sum()","77f46def":"df_cat.loc[:, \"GarageType\"].fillna(\"No Garage\", inplace=True)\ndf_cat[\"GarageType\"].isnull().sum()","9df06eff":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"GarageType\"], y=df_train[\"SalePrice\"])\nplt.show()","fc079fde":"df_cat[\"GarageFinish\"].value_counts()","24812550":"df_cat[\"GarageFinish\"].isnull().sum()","fbbb9778":"df_cat.loc[:, \"GarageFinish\"].fillna(\"No Garage\", inplace=True)\ndf_cat[\"GarageFinish\"].isnull().sum()","eb5b159b":"fig = plt.figure(figsize=(10, 7))\nsns.violinplot(x=df_cat[\"GarageFinish\"], y=df_train[\"SalePrice\"])\nplt.show()","66d01397":"df_cat[\"GarageQual\"].value_counts()","95ade597":"df_cat[\"GarageCond\"].value_counts()","fd3b60b1":"df_cat[\"PavedDrive\"].value_counts()","8e5787e1":"df_cat[\"PoolQC\"].value_counts()","ac64097e":"df_cat[\"Fence\"].value_counts()","abb7bc9a":"df_cat[\"Fence\"].isnull().sum()","e3f5a3ce":"df_cat[\"MiscFeature\"].value_counts()","d0c1ca6c":"df_cat[\"SaleType\"].value_counts()","4280bb2c":"df_cat[\"SaleCondition\"].value_counts()","65f5f2c1":"redundant_cat = [\"Street\", \"Utilities\", \"LandSlope\", \"Neighborhood\", \"Condition1\", \"Condition2\", \"RoofStyle\", \"Exterior1st\", \"Exterior2nd\", \"ExterQual\", \"BsmtCond\", \"BsmtFinType2\", \"Heating\", \"Electrical\", \"Functional\", \"GarageQual\", \"GarageCond\", \"PavedDrive\", \"PoolQC\", \"Fence\", \"MiscFeature\", \"SaleType\", \"SaleCondition\"]","72f3e692":"df_cat_final = df_cat.drop(redundant_cat, axis=1)\ndf_cat_final.head()","d7f76dad":"df_train_final = pd.concat([df_cat_final, df_num_final], axis=1)\ndf_train_final.head()","e450eef3":"missing_val = {\"# Missing\": df_train_final.isnull().sum()}\ndf_missing = pd.DataFrame(missing_val).sort_values(by = \"# Missing\", ascending = False)\ndf_missing","f9d4f919":"df_train_final.loc[:, \"MasVnrArea\"].fillna(df_train_final[\"MasVnrArea\"].mean(), inplace=True)","71cb9c78":"tar_enc = TargetEncoder()\ndf_train = tar_enc.fit_transform(df_train_final, df_train_final[\"SalePrice\"])","3d603e5d":"df_train.head()","b84a602d":"df_train.describe()","9ac4f9b4":"fig = plt.figure(figsize=(16, 6))\nplot1 = plt.subplot2grid((1, 3), (0, 0))\nplot2 = plt.subplot2grid((1, 3), (0, 1))\nplot3 = plt.subplot2grid((1, 3), (0, 2))\n\nplot1.scatter(df_train[\"MasVnrArea\"], df_train[\"SalePrice\"])\nplot1.set_title(\"MasVnrArea VS SalePrice\")\n\nplot2.scatter(df_train[\"TotalBsmtSF\"], df_train[\"SalePrice\"])\nplot2.set_title(\"TotalBsmtSF VS SalePrice\")\n\nplot3.scatter(df_train[\"GrLivArea\"], df_train[\"SalePrice\"])\nplot3.set_title(\"GrLivArea VS SalePrice\")\n\nplt.tight_layout()\nplt.show()","b03fc8be":"masvnrarea_out1 = df_train[(df_train[\"MasVnrArea\"] > 1000) & (df_train[\"SalePrice\"] < 300000)][[\"MasVnrArea\", \"SalePrice\"]]\nmasvnrarea_out2 = df_train[(df_train[\"MasVnrArea\"] < 200) & (df_train[\"SalePrice\"] > 700000)][[\"MasVnrArea\", \"SalePrice\"]]\ntotalbsmtsf_out = df_train[(df_train[\"TotalBsmtSF\"] > 5000) & (df_train[\"SalePrice\"] < 200000)][[\"TotalBsmtSF\", \"SalePrice\"]]\ngrlivarea_out = df_train[(df_train[\"GrLivArea\"] > 4000) & (df_train[\"SalePrice\"] < 300000)][[\"GrLivArea\", \"SalePrice\"]]\nmasvnrarea_out = pd.concat([masvnrarea_out1, masvnrarea_out2])\n\nprint(\"MasVnrArea Outliers: \")\nmasvnrarea_out","a7d0505e":"print(\"TotalBsmtSF Outliers: \")\ntotalbsmtsf_out","a5979f70":"print(\"GrLivArea Outliers: \")\ngrlivarea_out","35c141c9":"outlier_indices = [70, 115, 297, 808, 1182, 1298, 523]\ndf_train.drop(outlier_indices, inplace = True)","6d632975":"y = df_train[\"SalePrice\"]\nX = df_train.drop([\"SalePrice\"], axis=1)","31cdc8ee":"# Normalizing the features in the dataset\nfeature_names = X.columns\nstd_scaler = StandardScaler()\nX_new = std_scaler.fit_transform(X)","4993c7a6":"X_final = pd.DataFrame(X_new, columns = feature_names)","8e31c824":"X_final.head()","e5b209b6":"X_train, X_test, y_train, y_test = train_test_split(X_final, y, test_size = 0.2, train_size = 0.8)","8d518a3c":"lr_reg = LinearRegression()\nlr_reg.fit(X_train, y_train)\nprint(\"The coefficient of determination on the train set is \" + str(round(lr_reg.score(X_train, y_train), 2)))","4d5a55e8":"y_pred = lr_reg.predict(X_train)\nresiduals = y_train - y_pred","3fde9d6c":"fig = plt.figure(figsize=(10, 7))\nplt.scatter(y_pred, residuals)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residual Plot\")\nplt.show()","fb14b49f":"fig = plt.figure(figsize=(10, 7))\nsns.kdeplot(residuals)\nplt.show()","bb60c5b6":"alpha_values = list(range(0, 101))\n\nkf = KFold(n_splits=5)\n\nmse_cv = []\n\nfor alpha in alpha_values:\n    total_mse_cv = []\n    for train_index, test_index in kf.split(X_train):\n        X_tr , X_cv = X_train.iloc[train_index,:],X_train.iloc[test_index,:]\n        y_tr , y_cv = y_train.iloc[train_index] , y_train.iloc[test_index]\n        model = Ridge(alpha=alpha)\n        model.fit(X_tr, y_tr)\n        \n        y_tr_pred = model.predict(X_tr)\n        y_cv_pred = model.predict(X_cv)\n        \n        mse_cv_score = metrics.mean_squared_error(y_cv, y_cv_pred)\n        \n        total_mse_cv.append(mse_cv_score)\n        \n    avg_mse_cv = (sum(total_mse_cv)) \/ len(total_mse_cv)\n    \n    mse_cv.append(avg_mse_cv)\n    \n    \noptimal_alpha = mse_cv.index(min(mse_cv))\nprint(\"Optimal Value of alpha: \" + str(optimal_alpha))","7b92c95d":"fig = plt.figure(figsize=(10, 7))\nplt.plot(alpha_values, mse_cv)\nplt.xlabel(\"Alpha Values\")\nplt.ylabel(\"Mean Squared Error\")\nplt.title(\"Alpha Values VS Mean Squared Error\")\nplt.show()","217bc028":"model = Ridge(alpha=27)\nmodel.fit(X_train, y_train)\nscore_test = model.score(X_test, y_test)\n\nprint(\"Coefficient of determination on the test set is: \" + str(round(score_test, 2)))","cc65c546":"# Creating the Model","e88cffec":"# Handling Categorical Features","bf3e0a1e":"**ExterQual And ExterCond**","8a360788":"**Fence**","8d7506bf":"* KitchenQual tells the quality of kitchen.\n* Kitchen with Excellent quality have high price.\n* Kitchen with Good - Average quality have moderate price.\n* Kitchen with Fair quality have low price.","14d9871b":"**BsmtExposure**","c5192660":"# Linear Regression Assumptions","d7f81690":"* MiscFeatures tells some Miscellaneous features of the house.\n* SaleType tells the type of sale of the house.\n* SaleCondition tells the Condition of Sale.\n* All these features will not be used because of severe imbalance in clasees.","0f6b8c28":"* ExterQual evaluates the quality of the material on the exterior.\n* Excellent and Good quality have high prices.\n* Typical\/Average quality has moderate prices.\n* Fair quality has low prices\n* ExterCond will not be used because almost all the houses have typical external condition.","161e8102":"**MasVnrType**","d2628a61":"* In MasVnrArea, there are 4 observations, which have very low house price, despite having high MasVnrArea.\n* In MasVnrArea, there is 1 observations, which have very high house price, despite having low MasVnrArea.\n* In TotalBsmtSF, there is 1 obeservation, which have very low house price, despite having high TotalBsmtSF.\n* In GrLivArea, there are 2 obeservation., which have very low house price, despite having high GrLivArea.\n* These observations can be treated as outliers, and they will be removed from the dataset.","2313c1cf":"* Heating gives type of heating used in the house, and HeatingQC tells the quality and condition of the heating.\n* Heating feature will not be used because, HeatingQC covers the feature Heating.\n* Excellent heating quality have high price.\n* Good to Average heating quality have moderate price.\n* Fair and Poor heating quality have low prices.","7bf38c78":"**Exterior1st and Exterior2nd**","5e95ff29":"* Utilities tells the type of utilities available to the house (Electricity, Gas, Water)\n* Every house given in the dataset have all the utilities\n* This features will not be used. ","0744c10e":"* The data is almost linear, so no need to use polynomial features.\n* The residuals also have almost constant variance, so the model obeys Homoskedasticity\n* The residual distribution looks like a normal distribution.\n* All assumptions hold!","eaf90886":"**LotConfig**","73b7ec91":"**BsmtQual, BsmtCond**","fa30e662":"**HouseStyle**","7cf28b8f":"**MasVnrArea, TotalBsmtSF, And GrLivArea**","91ddebff":"**BldgType**","8175002e":"* Condition1 and Condition2 tells the proximity of house to different conditions.\n* Both of these variables will be removed, because there are very small number of houses in most of the conditions.\n* The house located at proximity of normal conditions have high prices. ","59659d21":"**CentralAir**","14754be4":"* Alley tells the type of alley which has access to property.\n* There can be Gravel (Alley covered with small pebbles and stones), Paved (Alley with flat surface) and No Alley.\n* The Houses with Gravel alley tend to have low prices than Houses with Paved alley.\n* The NULL values in Alley is filled by \"No Alley\" as indicated in data_description.","ce90d539":"**FireplaceQu**","0a25b830":"* LandContour gives flatness of the property.\n* The houses with complete flatness and located on hills have high prices.","6d63b19b":"**GarageQual And GarageCond**","5a64cf3a":"* Selecting features which have high correlation with the response variable SalePrice.\n* The features are - OverallQual, YearBuilt, YearRemodAdd, MasVnrArea, TotalBsmtSF, 1stFlrSF, GrLivArea, FullBath, TotRmsAbvGrd, Fireplaces, GarageYrBlt, GarageCars, GarageArea.\n* These are only numerical features.","ca27ab46":"* LandSlope gives the slope of the property.\n* The similar feature to this is LotShape. So I will not use this variable.\n* Also the number of houses which have severe slope is very less.\n* The SalePrice value is also similar to LotShape (Gentle Slope have higher price than Severe Slope)","b086c27a":"# Outliers","3bf0cc59":"**BsmtFinType1 And BsmtFinType2**","18ad4f32":"* LotConfig gives the lot configuration\n* Cul-de-sac, Inside lot, and corner lot have high prices.\n* Frontage lot have low prices","b6c8f388":"**LandContour**","5e26ff66":"# Numerical Feature Selection","1c03bc1f":"**GarageType**","76f41bbe":"* MasVnrType tells the Masonry Veneer type.\n* Masonry Veneer type of Brick Face, Stone and Houses with no type of Masonry Veneer have high house prices.\n* Masonry Veneer type of Brick Common has low house prices.","8dc327eb":"**Condition1 and Condition2**","0d950a30":"**MiscFeature, SaleType And SaleCondition**","b3c4d755":"* BsmtQual tells the height of the basement, BsmtCond tells the condition of the basement.\n* BsmtCond will not be used, because most of the houses have Typical\/Average as BsmtCond.\n* Basement having Excellent height (100+ inches) will have high cost.\n* Basement having Good to Typical\/Average height (80-99 inches) will have moderate cost.\n* Basement having Fair height (70 inches) will have low cost.\n* House with no Basement will have low price.","fb75f2af":"* Foundation tells the type of foundation used in the house.\n* Houses with Poured Contrete type of foundation have high prices.\n* Houses with Cinder Block and Brick & Tile type of foundation have moderate prices.\n* Houses with Wood, Stone and Slab type of foundation have low prices.","c359a13c":"**Neighborhood**","31f220b2":"* Functionality tells the overall functionality of the house.\n* This feature will not be used because, almost all of the houses have Typical functionality.","afc10d40":"**Alley**","b71ca448":"**Linearity, Homoskedasticity And Normaility of Residuals**","76ae0833":"* FireplaceQu tells the quality of fireplaces in the house.\n* FirePlace with Excellent to Typical quality have high price.\n* FirePlace with Good quality have moderate price.\n* FirePlace with Fair to Low quality have low price.\n* House with no fireplace have low cost.","9e4d8db0":"# Handling Missing Values","e7535b31":"* BsmtFinType1 and BsmtFinType2 (If more than one) tells the rating of basement finished area.\n* Basement with rating Good Living Quarters have high price.\n* Basement with rating Average Living Quarters, and Unfinished have moderate price.\n* Basement with rating Average Rec Room, Below Average Living Quarters, Low Quality have low price.\n* House with no basement have low price.\n* BsmtFinType2 will be removed, because most of the houses have only one type of BasmtFinType2","b9295a3a":"* Electrical tells the type of electrical system used in the house.\n* This feature will not be used because, most of the houses have Standard Circuit Breakers & Romex electrical system.","b70afeec":"* MSZoning tells the Genral Zoning of the house.\n* The Residential Area with Low density, Medium Density tend to have higher house prices.\n* The Commercial Area tend to have lower House Prices.","97cd5a0c":"# Categorical Feature Selection, Data Storytelling","244247e3":"**Functional**","11f1518b":"**PoolQC**","be8de3f9":"* HouseStyle tells the type of house.\n* Two Story, One Story and Two and a half story (Finished) houses have high price.\n* One and a half story (Finished), Split Level, Two and a half story (Unfinished) housed have moderate price.\n* Houses with one and a half (Unfinished), and Split Foyer have low price.","77f8a896":"* GarageFinish tells the interior finish of the garage.\n* Garage with Finished interior have high price.\n* Garage with Rough Finish to Unfinished have moderate price.\n* House with no Garage have low price.","f0d3463f":"**Heating and HeatingQC**","099b3259":"**Foundation**","437621ed":"**Electrical**","aa6a0000":"* Exterior1st and Exterior2nd (if more than one) tells the material used in the exterior of the house.\n* These features will be removed, because in the dataset there are features (like Exterior Condition and Exterior Quality) which will cover these features.","3e75aa57":"* RoofStyle tells the style of the roof of the house.\n* RoofMatl tells the material used for the roof of the house\n* These features will not be used because, it has very low number of houses with certain style of roofs.","3cde33dd":"* GarageType tells the type of Garage in the house.\n* Garage attached to the house have high price.\n* Garage Built-in to the house and Garage Detached from house have moderate price.\n* Garage with type Basement, Car Port, 2types have low price.\n* House with no garage have low price.","8257c5df":"**LotShape**","a71d7e76":"**PavedDrive**","7299342c":"**KitchenQual**","9f33b8e7":"* Fence tells the type of fence in the house.\n* This feature will not be used because, it has very high number of missing values.","886fd471":"* Categorical Features are encoded by Mean Target Encoding.\n* In this encoding the categorical feature of a particular value is replaced by the mean of target variable (SalePrice) corresponding to that value.","48e3ddc7":"**GarageFinish**","4fa8e6a4":"* CentralAir tells wheather the house has central air conditioning or not.\n* The houses having central air conditioning have high cost.\n* Houses not having central air conditioning have low cost.","fb429b3e":"* LotShape tells the irregularities in the shape of the house.\n* The Price of houses with slight irregularities and moderate irregularities have high prices.\n* Regular shape houses also have high prices.\n* Completly irregular houses have lowest prices","c84dc86c":"* BldgType gives the type of the house.\n* Single family, detached house have high price, Townhouse with end unit have moderate prices.\n* Two family conversion, Duplex and Townhouse inside unit have low prices.","2f14d1d7":"* PavedDrive tells the type of Driveway.\n* This feature will not be used because, very high number of houses have Paved driveway.","d6a58a24":"* PoolQC tells the quality of Pool in the house.\n* This feature will not be used because it has very high number of houses with no pool.","03bd9a5a":"# House Price Prediction","035c3884":"* BsmtExposure tells the quality of exposure in the basement.\n* Basement having Good to Average exposure have high cost.\n* Basement having Minimum to No exposure have moderate cost.\n* Houses with no basement have low cost.","f5eb8a03":"**LandSlope**","4c6df37d":"**Street**","0d157436":"**RoofStyle and RoofMatl**","384b0730":"**MSZoning**","416657bd":"* Street gives the type of road access to property.\n* The analysis of this feature can not be conducted because the number of houses with Gravel alley is very small.\n* This feature will be not be used, because most of the values of this feature is \"Pave\".","63f9b278":"* GarageQual tells the quality of Garage, and GarageCond tells the condition of Garage.\n* Both of the features will not be used, because both have very high number of houses having a single quality and condition.","1bfc832d":"**Utilities**","b7626d4e":"* Multicollinearity exists between features - (1stFlrSF and TotalBsmtSF), (GarageYrBlt and YearBuilt), (TotRmsAbvGrd, GrLivArea), (GarageArea, GarageCars)\n* Features to be removed - 1stFlrSF, GarageYrBlt, TotRmsAbvGrd, GarageArea","75dde807":"* Neighborhood tells the neighborhood of the house in LosAngeles\n* This feature will be removed, because only limited number of neighborhoods are given, and a house in test set can belong to any neighborhood."}}