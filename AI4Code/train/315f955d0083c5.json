{"cell_type":{"11d44a50":"code","3edcbe16":"code","857df7ea":"code","f1b6459f":"code","534f336f":"code","53569d6a":"code","76238746":"code","5244f289":"code","f9ee2465":"code","14c03af7":"code","47c798fe":"code","03ed7ff7":"code","7ac5de07":"code","7e736abb":"code","a721fd04":"code","bd6a7c72":"code","9c76eae5":"code","27e025a0":"code","014f3fad":"code","fad244c6":"code","66f638eb":"code","ba488f58":"code","91671a60":"markdown","3a7b1dd1":"markdown","3bce95c7":"markdown","2b4b0d93":"markdown","e7d47c87":"markdown","968d0a2d":"markdown","4e6077b5":"markdown","8673ec0e":"markdown","8641c299":"markdown","dcef6dc2":"markdown","ad1c5fc1":"markdown","160d485e":"markdown"},"source":{"11d44a50":"# Python Libraries\nimport numpy as np\n# numneric calculation\nimport pandas as pd\n\n\n# Libraries for Visualization\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n\n# Library for splitting the data in Train and Test\nfrom sklearn.model_selection import train_test_split\n\n# Library required for the Linear Regression Algorithm\nfrom sklearn.linear_model import LinearRegression\n\n# Library for the metric required to evaluate the model\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\n\n%matplotlib inline \n# allow to plot the charts inline","3edcbe16":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","857df7ea":"df = pd.read_csv('\/kaggle\/input\/student-scores\/student_scores.csv')\ndf.head()","f1b6459f":"df.sample(6)","534f336f":"df.dtypes","53569d6a":"df.info()","76238746":"df.shape","5244f289":"df.isnull().sum()","f9ee2465":"fig = px.scatter(x = df['Hours'], y = df['Scores'], labels = {'x' : 'Hours Studies', 'y' : 'Scores Obtained'})\nfig.show()","14c03af7":"plt.scatter(df.Hours, df.Scores)","47c798fe":"feature = df['Hours'].values\ntarget = df['Scores'].values","03ed7ff7":"# Reshaping the features and target\n\nfeature = feature.reshape(-1,1)\ntarget = target.reshape(-1,1)","7ac5de07":"plt.scatter(feature, target)","7e736abb":"X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size = 0.2, random_state = 0)\nprint(\"X-Train :\",X_train.shape)\nprint(\"X-Test :\",X_test.shape)\nprint(\"Y-Train :\",y_test.shape)\nprint(\"Y-Test :\",y_test.shape)","a721fd04":"# Instantiating the object of the class\nlr = LinearRegression()\n\n# Fitting the model\nlr.fit(X_train, y_train)","bd6a7c72":"plt.figure(figsize = (15,8))\nplt.scatter(X_train, y_train)\nplt.plot(X_train, lr.predict(X_train), color = 'green')\nplt.title('Hours vs Scores')\nplt.xlabel('Number of hours studied')\nplt.ylabel('Scored Obtained')\nplt.show()","9c76eae5":"pred_vals = lr.predict(X_test)\npred_vals","27e025a0":"df_ac_vs_pr = pd.DataFrame(pred_vals, index = range(0,5), columns = ['Predicted'])\ndf_ac_vs_pr['Actual'] = y_test","014f3fad":"df_ac_vs_pr","fad244c6":"print('Mean Absolute Error =', mean_absolute_error(y_test, pred_vals))\nprint(\"Mean Squared Error= \", mean_squared_error(y_test, pred_vals))\nprint(\"Root Mean Squared Error= \", np.sqrt(mean_squared_error(y_test, pred_vals)))","66f638eb":"# Defining variable 'y' with given data\ny = np.array(9.25)\ny = y.reshape(-1, 1)\n\n# Predicting on the basis of the value in 'y'\npred_y = lr.predict(y)\npred_y","ba488f58":"print('The score obtained after studying for {} hours = {}'.format(y[0][0], pred_y[0][0]))","91671a60":"# Task 1 - Prediction using Supervised ML\n## Given Problem Statement\n-- A simple linear regression task involving 2 variables, we need to predict the percentage of an student based on the number of study hours. -- What will be predicted score if a student studies for 9.25 hrs\/ day?","3a7b1dd1":"# Step 3 : Understanding the data****","3bce95c7":"### Predicting the values","2b4b0d93":"# Step 5 : Splitting the dataset into Train and Test data","e7d47c87":"What will be predicted score if a student studies for 9.25 hrs\/ day?","968d0a2d":"# Step 4 : Exploring the relationship in the dataset","4e6077b5":"#### Plotting the Regression Line with Actual vs Predicted values","8673ec0e":"Creating a dataframe with Actual and Predicted Values","8641c299":"# Step 1 : Importing required libraries","dcef6dc2":"# Step 6 : Implementing the Linear Regression Algorithm","ad1c5fc1":"# Step 8 : Finding the solution of question asked in the problem statement","160d485e":"# Step 7 : Evaluating the performance of the model"}}