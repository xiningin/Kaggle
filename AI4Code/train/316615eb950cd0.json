{"cell_type":{"104f272e":"code","5b7398a1":"code","fc5baac2":"code","6632143f":"code","9ace0306":"code","2e4ec26d":"code","d470cd7f":"code","367f14e4":"code","c5892c83":"code","01ce5e67":"code","1567735d":"code","8799c81a":"code","8d5a5aad":"code","5406d73a":"code","2e77b8da":"code","b9d3c0f9":"code","38d1a4bb":"code","fbc9eef5":"code","0b323112":"code","d69f5ba2":"code","ab7b000f":"code","e8f9ead0":"code","1afdbe34":"code","f72371f4":"code","44cdad1d":"code","a5d6c557":"code","31eb7ba8":"code","b9a3ef0a":"code","d41b9cb1":"code","3ec67ee3":"code","7055ef35":"markdown","a9664694":"markdown","3f81d602":"markdown","ae44d3c5":"markdown","30fa7fa0":"markdown","16ad7cd7":"markdown","5846db39":"markdown","304cf780":"markdown","9d0807b4":"markdown","37f324a9":"markdown","7ad48b05":"markdown","a808016e":"markdown","4b9478bf":"markdown","0102d635":"markdown","ad8ec12d":"markdown","7e03659d":"markdown","18cb1dd1":"markdown","9097ee0e":"markdown","a1fcc303":"markdown","0b0a19ba":"markdown","a8d4dbbe":"markdown","d8874f01":"markdown","36e1a406":"markdown","f9704146":"markdown","a8fa6ec8":"markdown","ac82d175":"markdown","4d9a36aa":"markdown","f5d492ff":"markdown","25074301":"markdown","84fc830b":"markdown","9845d06d":"markdown"},"source":{"104f272e":"# Data wrangling and math\nimport numpy as np\nimport pandas as pd \n\n# Visualization tools\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n%matplotlib inline\n\n# Datetime module\nfrom datetime import datetime, date","5b7398a1":"df = pd.read_csv('\/kaggle\/input\/nba2k20-player-dataset\/nba2k20-full.csv')\ndf.head()","fc5baac2":"print(f'There are {df.shape[0]} players (rows) and {df.shape[1]} columns.\\n')\nprint(f'Column names: {df.columns.values}')","6632143f":"print(f\"The best rating is {df.rating.max()} which are held by \ud83d\udc51{df[df.rating == df.rating.max()].full_name.values[0]} and {df[df.rating == df.rating.max()].full_name.values[1]}\\n\")\nprint(f\"The worst rating is {df.rating.min()} which is held by {df[df.rating == df.rating.min()].full_name.values[0]}\")","9ace0306":"jersey_number = df[['jersey','full_name']].groupby('jersey').count().sort_values(by='full_name', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=jersey_number.index, y=jersey_number.full_name)\nplt.xticks(rotation=90)\nplt.xlabel('Jersey number')\nplt.ylabel('Players count')\nplt.title('Favorite Jersey Number')\nplt.show()","2e4ec26d":"country = df[['country','full_name']].groupby('country').count().sort_values(by='full_name', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=country.index, y=country.full_name)\nplt.xticks(rotation=90)\nplt.xlabel('Country')\nplt.ylabel('Players count')\nplt.title('Players\\' Country')\nplt.show()","d470cd7f":"country_rating = df[['country','rating']].groupby('country').mean().sort_values(by='rating', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=country_rating.index, y=country_rating.rating)\nplt.xticks(rotation=90)\nplt.xlabel('Country')\nplt.ylabel('Average rating')\nplt.title('Country Based on Rating')\nplt.show()","367f14e4":"country_nunique = df.groupby(df['team'])['country'].nunique().sort_values(ascending = False).head(10)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=country_nunique.values, y=country_nunique.index)\nplt.xticks()\nplt.xlabel('Team')\nplt.ylabel('Number of unique country')\nplt.title('Diversity in Team')\nplt.show()","c5892c83":"def get_age(birthday): \n    today = date.today() \n    age = today.year - birthday.year - ((today.month, today.day) < (birthday.month, birthday.day))\n    return age\n\ndf['b_day'] = pd.to_datetime(df['b_day'])\ndf['age'] = df['b_day'].apply(lambda x : get_age(x))\ndf","01ce5e67":"print(f\"The oldest player is {df[df.age == df.age.max()].full_name.values[0]} ({df.age.max()} years old)\\n\")\nprint(f\"The youngest player are {df[df.age == df.age.min()].full_name.values[0]} and {df[df.age == df.age.min()].full_name.values[1]} ({df.age.min()} years old)\")","1567735d":"free_agents = df[df['team'].isna()]\nprint(f'There are {free_agents.shape[0]} free agents.')\nfree_agents.head(3)","8799c81a":"team_rating = df[['team','rating']].groupby('team').sum().sort_values(by='rating', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=team_rating.index, y=team_rating.rating)\nplt.xticks(rotation=90)\nplt.xlabel('Team')\nplt.ylabel('Sum of rating')\nplt.title('Teams Based on Rating Sum')\nplt.show()","8d5a5aad":"team_rating = df[['team','rating']].groupby('team').mean().sort_values(by='rating', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=team_rating.index, y=team_rating.rating)\nplt.xticks(rotation=90)\nplt.xlabel('Team')\nplt.ylabel('Average of rating')\nplt.title('Teams Based on Rating Average')\nplt.show()","5406d73a":"player_count = df[['team','full_name']].groupby('team').count().sort_values(by='full_name', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=player_count.index, y=player_count.full_name)\nplt.xticks(rotation=90)\nplt.xlabel('Team')\nplt.ylabel('Player count')\nplt.title('Teams Based on Player Count')\nplt.show()","2e77b8da":"print(f\"The biggest salary is {df.salary.max()} which is held by {df[df.salary == df.salary.max()].full_name.values[0]} \\n\")\nprint(f\"The lowest salary is {df.salary.min()} which is held by {df[df.salary == df.salary.min()].full_name.values[0]}\")","b9d3c0f9":"def get_salary(salary):\n    salary = salary.replace('$', '')\n    return float(salary)\n\ndf['salary'] = df['salary'].apply(lambda x: get_salary(x))\ndf","38d1a4bb":"plt.rcParams['figure.figsize'] = (10, 8)\nsns.distplot(df['salary'], color = 'blue')\nplt.xlabel('Salary range for players')\nplt.ylabel('Count of players')\nplt.title('Players\\' Salary Distribution')\nplt.xticks()\nplt.show()","fbc9eef5":"height = df['height'].str.split('\/',expand=True)\nheight.columns = ['height_ft', 'height_m']\ndf = pd.concat([df, height], axis=1)\n\nweight = df['weight'].str.split('\/',expand=True)\nweight.columns = ['weight_lbs', 'weight_kg']\ndf = pd.concat([df, weight], axis=1)\ndf = df.drop(['weight'], axis=1)\ndf['weight_lbs'] = df['weight_lbs'].str.replace('lbs.', '')\ndf['weight_kg'] = df['weight_kg'].str.replace('kg.', '')\n\n# Let's convert the type so it become lighter\ndf['height_m'] = df['height_m'].astype(np.float64)\ndf['weight_lbs'] = df['weight_lbs'].astype(np.int32)\ndf['weight_kg'] = df['weight_kg'].astype(np.float64)\n\ndf","0b323112":"fig = plt.figure(figsize = (10, 5))\nplt.hist(df.weight_kg)\nplt.xlabel('Weight in kg')\nplt.ylabel('Count of Players')\nplt.title('Players\\' Weight Distribution')\nplt.show()","d69f5ba2":"fig = plt.figure(figsize = (10, 5))\nplt.hist(df.height_m)\nplt.xlabel('Height in m')\nplt.ylabel('Count of Players')\nplt.title('Players\\' Height Distribution')\nplt.show()","ab7b000f":"fig = plt.figure(figsize = (10, 5))\nsns.countplot('position', data = df, order = df['position'].value_counts().index)\nplt.xlabel('Various Positions in NBA')\nplt.ylabel('Count of Players')\nplt.title('Positions of player')\nplt.show()","e8f9ead0":"labels = ['G', 'F','C','F-C', '-', 'G-F', 'F-G', 'C-F'] \nsize = df['position'].value_counts()\ncolors = plt.cm.RdYlBu(np.linspace(0, 1, 8))\nexplode = [0.1,0, 0, 0, 0, 0, 0, 0]\n\nplt.pie(size, labels = labels, colors = colors, explode = explode, shadow = True, startangle = 90)\nplt.title('Distribution of Players\\' Position')\nplt.legend()\nplt.show()","1afdbe34":"position_rating = df[['position','rating']].groupby('position').mean().sort_values(by='rating', ascending=False)\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=position_rating.rating, y=position_rating.index)\nplt.xticks()\nplt.xlabel('Position')\nplt.ylabel('Average rating')\nplt.title('Position Based on Rating')\nplt.show()","f72371f4":"df.sort_values(['age','rating'], ascending = False).reset_index()[['full_name', 'age', 'team', 'country', 'rating']].tail(10).style.background_gradient('viridis')","44cdad1d":"df.sort_values(['age','rating'], ascending = False).reset_index()[['full_name', 'age', 'team', 'country', 'rating']].head(10).style.background_gradient('viridis')","a5d6c557":"df.sort_values(['height','rating'], ascending = True).reset_index()[['full_name', 'height_m', 'team', 'country', 'rating']].head(10).style.background_gradient('viridis')","31eb7ba8":"df.sort_values(['height','rating'], ascending = True).reset_index()[['full_name', 'height_m', 'team', 'country', 'rating']].tail(10).style.background_gradient('viridis')","b9a3ef0a":"df.iloc[df.groupby(df['position'])['rating'].idxmax()].sort_values(by='rating', ascending=False).reset_index()[['position', 'full_name',\n                    'age','team', 'country', 'rating']].style.background_gradient('Blues')","d41b9cb1":"df.iloc[df.groupby(df['team'])['rating'].idxmax()].reset_index().sort_values(by='rating', ascending=False).reset_index()[['position', 'full_name',\n                    'age','team', 'country', 'rating']].style.background_gradient('Blues')","3ec67ee3":"df.iloc[df.groupby(df['country'])['rating'].idxmax()].reset_index().sort_values(by='rating', ascending=False).reset_index()[['position', 'full_name',\n                    'age','team', 'country', 'rating']].style.background_gradient('Blues')","7055ef35":"<h3 class=\"list-group-item list-group-item-action active\">Best Player for Each Position<\/h3>","a9664694":"<h3 class=\"list-group-item list-group-item-action active\">The Old Gold<\/h3>\n<br>Top 10 Old Players Based on Rating","3f81d602":"<h3 class=\"list-group-item list-group-item-action active\">Let's take a look at the data<\/h3>","ae44d3c5":"<h3 class=\"list-group-item list-group-item-action active\">Best Player for Each Team<h3>","30fa7fa0":"Now let's look at the salary distribution","16ad7cd7":"<h3 class=\"list-group-item list-group-item-action active\">Best Shortest Player<\/h3>","5846db39":"<h3 class=\"list-group-item list-group-item-action active\">What position does most of the players play?<\/h3>","304cf780":" \ud83e\udd8c Milwaukee Bucks got the best sum of rating in total! What happened to, the former 2018 Champions, Golden State Warriors though? In this season, <a href=\"https:\/\/www.nytimes.com\/2019\/11\/13\/sports\/basketball\/golden-state-warriors-kerr.html\">The Warriors Are in the Last Place.<\/a>","9d0807b4":"<h3 class=\"list-group-item list-group-item-action active\">The Wonderkid<\/h3>\n<br>Top 10 Young Players Based on Rating","37f324a9":"Of course, it's USA. Now, which country got the best average rating?","7ad48b05":"<h1 align=\"center\"  style='font-size:30px'> \ud83c\udfc0 <a style=\"color:white;font-weight:700;background-color:black;\">\u26f9\ufe0fNBA<\/a><a style=\"color:red;font-weight:700;background-color:black;\">2K<\/a><a style=\"color:white;font-weight:700;background-color:black;\">20<\/a> : <a style=\"color:black;\">Data Visualization<\/a> <\/h1>\n\nThis is a visualization for NBA2K20 dataset kindly provided by <a href=\"https:\/\/www.kaggle.com\/isaienkov\/nba2k20-player-dataset\">isainekov<\/a>.\n\n**NBA 2K20** is a basketball simulation video game developed by Visual Concepts and published by 2K Sports, based on the National Basketball Association (NBA). It is the 21st installment in the NBA 2K franchise, the successor to NBA 2K19, and the predecessor to NBA 2K21. Anthony Davis of the Los Angeles Lakers is the cover athlete for the regular edition of the game, while Dwyane Wade is the cover athlete for the 'Legend Edition'.NBA 2K20 was released on September 6, 2019, for Microsoft Windows, Nintendo Switch, PlayStation 4, and Xbox One, and on November 18, 2019 for Stadia.\n\nThe player mainly plays NBA games with real-life or customized players and teams; games follow the rules and objectives of NBA games. Several game modes are present and many settings can be customized. Up to six expansion teams can be created and used in both MyLeague and MyGM Modes, with the possibility of a 36-team league, and any team can be relocated and rebranded.\n\n<img style=\"width:100%;height:100%\" src=\"https:\/\/4y96.com\/wp-content\/uploads\/2020\/04\/nba2k20-banner_0.jpg\"\/>\n<h3 align=\"center\" style='font-size:10px'>Image source : 4y96.com<\/h3>","a808016e":"<h3 class=\"list-group-item list-group-item-action active\">Best Tallest Player<\/h3>","4b9478bf":"# Data Exploration","0102d635":"Let's observe the average players' rating for each position","ad8ec12d":"<h3 class=\"list-group-item list-group-item-action active\">Which team got the best rating?<\/h3>","7e03659d":"<h3 class=\"list-group-item list-group-item-action active\">Which player got the best and worst rating?<\/h3>\n","18cb1dd1":"### Basic Library","9097ee0e":"<h3 class=\"list-group-item list-group-item-action active\">Best Player for Each Country<h3>","a1fcc303":"<h3 class=\"list-group-item list-group-item-action active\">Country based on rating<\/h3>","0b0a19ba":"<h3 class=\"list-group-item list-group-item-action active\">What about their weight & height?<\/h3>","a8d4dbbe":"# The Best of The Best","d8874f01":"<h3 class=\"list-group-item list-group-item-action active\">Any free agents?<\/h3>","36e1a406":"Wow! There are tons of players with #0 on their jersey compared to other number.","f9704146":"<h3 class=\"list-group-item list-group-item-action active\">Which team got the largest number of players?<\/h3>","a8fa6ec8":"<a style=\"color:blue;font-size:20px;\">Work in progress...<\/a>","ac82d175":"<h3 class=\"list-group-item list-group-item-action active\">How about player's country?<\/h3>","4d9a36aa":"<h3 class=\"list-group-item list-group-item-action active\">How old are the players?<\/h3>","f5d492ff":"Interesting, the average players' rating for each team almost form a linear line. They're quite similiar.","25074301":"<h3 class=\"list-group-item list-group-item-action active\">Which team is the most diverse?<\/h3>","84fc830b":"<h3 class=\"list-group-item list-group-item-action active\">What about players' favorite jersey number?<\/h3>","9845d06d":"<h3 class=\"list-group-item list-group-item-action active\">Who got the highest and lowest salary?<\/h3>"}}