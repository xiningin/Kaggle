{"cell_type":{"2daebf30":"code","d2936ef8":"code","2ab22537":"code","5d3995be":"code","deb664c8":"code","50c6115e":"code","611c5750":"code","2ef19013":"code","fe7e343f":"code","a0eca8e4":"code","8e109471":"code","4232be63":"code","a14d1d48":"code","da919398":"code","90d81ac2":"code","7b210481":"code","c5e045ef":"code","ac0dd733":"code","3fae2c5e":"code","34b4431f":"code","7f0242e5":"code","ffe32fcf":"code","93471e1d":"code","c851759c":"code","73b987bb":"code","65809bda":"code","56c610da":"code","80a059ec":"code","8dcf011b":"code","1636864d":"code","6ee64d6d":"code","165dfb7c":"code","9289f15b":"code","9dee760c":"code","386b1434":"code","71f8b927":"code","82a16dce":"code","721f9cb1":"code","f79577d9":"code","d2ed88f3":"code","5e6ab298":"code","179b2059":"code","63c902d1":"code","0c4486c0":"code","f8e5521b":"code","cd2f87ab":"code","3987a5fa":"code","794506b8":"code","ee4f4453":"markdown","3a06fa92":"markdown","c2543eba":"markdown","d9910e2e":"markdown","7c779617":"markdown","efff4c0e":"markdown","14ec1cfc":"markdown","8cdad2b2":"markdown","1f42ca9a":"markdown","676cc38b":"markdown","4d5fb169":"markdown","55344601":"markdown","1132b47a":"markdown","b512dd35":"markdown","834a2b8a":"markdown","aba9318e":"markdown","1954fee5":"markdown","afb36daa":"markdown","e5e17b1c":"markdown","24214d32":"markdown","74dcaf4c":"markdown","250ffc0f":"markdown","42bc73cd":"markdown","cc244147":"markdown","fcb6e411":"markdown","4530988e":"markdown","28ad1874":"markdown","2b2aadb2":"markdown","17bc3dcc":"markdown","4a93f037":"markdown","95911c54":"markdown","bafd2be7":"markdown","32f5cb87":"markdown","689657c2":"markdown"},"source":{"2daebf30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d2936ef8":"from matplotlib import pyplot as plt","2ab22537":"arquivo = '..\/input\/data.csv'\ndataset = pd.read_csv(arquivo, sep = ',', header=0)","5d3995be":"def alteraPalavra(string):\n    if string.endswith('K') or string.endswith('M'):\n        string = string[:-1]\n    string = string[1:]\n    return string\n\ndef transStr(object):\n    return str(object)\n\ndef transFloat(string):\n    return float(string)\n\ndef containsMorN(s):\n    if \"M\" in s:\n        return 1\n    else:\n        return 0.001\n","deb664c8":"#Checking if the file was imported properly\ndataset.head()","50c6115e":"#treating missing values on alternative position overall of players, loans and market value\ndataset['Loaned From'].fillna(0, inplace = True)\ndataset['LS'].fillna(0, inplace = True)\ndataset['ST'].fillna(0, inplace = True)\ndataset['RS'].fillna(0, inplace = True)\ndataset['LW'].fillna(0, inplace = True)\ndataset['LF'].fillna(0, inplace = True)\ndataset['CF'].fillna(0, inplace = True)\ndataset['RF'].fillna(0, inplace = True)\ndataset['RW'].fillna(0, inplace = True)\ndataset['LAM'].fillna(0, inplace = True)\ndataset['CAM'].fillna(0, inplace = True)\ndataset['RAM'].fillna(0, inplace = True)\ndataset['LM'].fillna(0, inplace = True)\ndataset['LCM'].fillna(0, inplace = True)\ndataset['CM'].fillna(0, inplace = True)\ndataset['RCM'].fillna(0, inplace = True)\ndataset['RM'].fillna(0, inplace = True)\ndataset['LWB'].fillna(0, inplace = True)\ndataset['LDM'].fillna(0, inplace = True)\ndataset['CDM'].fillna(0, inplace = True)\ndataset['RDM'].fillna(0, inplace = True)\ndataset['RWB'].fillna(0, inplace = True)\ndataset['LB'].fillna(0, inplace = True)\ndataset['LCB'].fillna(0, inplace = True)\ndataset['CB'].fillna(0, inplace = True)\ndataset['RCB'].fillna(0, inplace = True)\ndataset['RB'].fillna(0, inplace = True)\ndataset['Release Clause'].fillna(100, inplace = True)","611c5750":"#Pre-processing value and wage data\ndataset['valor'] = (dataset['Value'].apply(transStr))\ndataset['grauValor'] = (dataset['valor'].apply(containsMorN))\ndataset['valor'] = (dataset['valor'].apply(alteraPalavra))\ndataset['valor'] = (dataset['valor'].apply(transFloat))\ndataset['valor'] = (dataset['valor'] * dataset['grauValor'])\ndataset['valor'].fillna(0, inplace = True)\n\ndataset['Wage'] = (dataset['Wage'].apply(transStr))\ndataset['Wage'] = (dataset['Wage'].apply(alteraPalavra))\ndataset['Wage'] = (dataset['Wage'].apply(transFloat))","2ef19013":"%matplotlib inline\nplt.rcParams['figure.figsize'] = (20,10)\nplt.style.use(\"ggplot\")\ndataset.plot(x = 'Overall', y = 'valor', kind='scatter', title= 'Overall x Value in Millions of Euros')","fe7e343f":"%matplotlib inline\nplt.rcParams['figure.figsize'] = (20,10)\ndataset.plot(x = 'Age', y = 'valor', kind='scatter', title= 'Age x Value in Millions of Euros')","a0eca8e4":"%matplotlib inline\nplt.rcParams['figure.figsize'] = (20,10)\ndataset.plot(x = 'Age', y = 'Overall', kind='scatter', title= 'Age x Overall')","8e109471":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,10)\n\nplt.subplot(1,3,1, title = 'All players Overall Distribution') #numero de linhas, numero de colunas, qual utilizar\nplt.boxplot(dataset['Overall'])\n\ndataMaior34 = dataset.loc[dataset['Age'] >= 34]\n\ndataMenor34 = dataset.loc[dataset['Age'] < 34]\n\nplt.subplot(1,3,2, title = 'Players younger than 34 Overall Distribution')\nplt.boxplot(dataMaior34['Overall'])\n\nplt.subplot(1,3,3, title = 'Players older than 33 Overall Distribution')\nplt.boxplot(dataMenor34['Overall'])","4232be63":"dataset['Overall'].describe()","a14d1d48":"dataMaior34['Overall'].describe()","da919398":"dataMenor34['Overall'].describe()","90d81ac2":"dataset['Wage'].describe()","7b210481":"dataMaior34['Wage'].describe()","c5e045ef":"dataMenor34['Wage'].describe()","ac0dd733":"dataset['valor'].describe()","3fae2c5e":"dataMaior34['valor'].describe()","34b4431f":"dataMenor34['valor'].describe()","7f0242e5":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\nplt.subplot(3,3,1, title = 'Acceleration x Market Value')\nplt.scatter(dataset['Acceleration'], dataset['valor'], c = '#8e0000')\n\nplt.subplot(3,3,2, title = 'Sprint Speed x Market Value')\nplt.scatter(dataset['SprintSpeed'], dataset['valor'], c = '#8ed000')\n\nplt.subplot(3,3,3, title = 'Agility x Market Value') \nplt.scatter(dataset['Agility'], dataset['valor'], c = '#8e6c82')\n\nplt.subplot(3,3,4, title = 'Balance x Market Value')\nplt.scatter(dataset['Balance'], dataset['valor'], c = '#40c6e0')\n\nplt.subplot(3,3,5, title = 'Reactions x Market Value')\nplt.scatter(dataset['Reactions'], dataset['valor'], c = '#ffff00')\n\nplt.subplot(3,3,6, title = 'Jumping x Market Value')\nplt.scatter(dataset['Jumping'], dataset['valor'], c = '#4f3e00')\n\nplt.subplot(3,3,7, title = 'Stamina x Market Value')\nplt.scatter(dataset['Stamina'], dataset['valor'], c = '#ed233d')\n\nplt.subplot(3,3,8, title = 'Strength x Market Value')\nplt.scatter(dataset['Strength'], dataset['valor'], c = '#39843d')","ffe32fcf":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,30)\n\nplt.subplot(6,3,1, title = 'Finishing x Market Value') \nplt.scatter(dataset['Finishing'], dataset['valor'], c = '#8e0000')\n\nplt.subplot(6,3,2, title = 'Long Shots x Market Value')\nplt.scatter(dataset['LongShots'], dataset['valor'], c = '#8ed000')\n\nplt.subplot(6,3,3, title = 'Penalties x Market Value') \nplt.scatter(dataset['Penalties'], dataset['valor'], c= '#8e6c82')\n\nplt.subplot(6,3,4, title = 'Shot Power x Market Value')\nplt.scatter(dataset['ShotPower'], dataset['valor'], c = '#40c6e0')\n\nplt.subplot(6,3,5, title = 'Volleys x Market Value')\nplt.scatter(dataset['Volleys'], dataset['valor'], c = '#ffff00')\n\nplt.subplot(6,3,6, title = 'Crossing x Market Value')\nplt.scatter(dataset['Crossing'], dataset['valor'], c = '#4f3e00')\n\nplt.subplot(6,3,7, title = 'Curve x Market Value')\nplt.scatter(dataset['Curve'], dataset['valor'], c = '#ed233d')\n\nplt.subplot(6,3,8, title = 'FK Accuracy x Market Value')\nplt.scatter(dataset['FKAccuracy'], dataset['valor'], c = '#39843d')\n\nplt.subplot(6,3,9, title = 'Ball Control x Market Value')\nplt.scatter(dataset['BallControl'], dataset['valor'], c = '#ffcc99')\n\nplt.subplot(6,3,10, title = 'Dribbling x Market Value')\nplt.scatter(dataset['Dribbling'], dataset['valor'], c = '#ff00ff')\n\nplt.subplot(6,3,11, title = 'Heading Accuracy x Market Value')\nplt.scatter(dataset['HeadingAccuracy'], dataset['valor'], c = '#000099')\n\nplt.subplot(6,3,12, title = 'Marking x Market Value')\nplt.scatter(dataset['Marking'], dataset['valor'], c = '#cccc00')\n\nplt.subplot(6,3,13, title = 'Sliding Tackle x Market Value')\nplt.scatter(dataset['SlidingTackle'], dataset['valor'], c = '#999966')\n\nplt.subplot(6,3,14, title = 'Standing tackle x Market Value')\nplt.scatter(dataset['StandingTackle'], dataset['valor'], c = '#ff3300')\n\nplt.subplot(6,3,15, title = 'Long Passing x Market Value')\nplt.scatter(dataset['LongPassing'], dataset['valor'], c = '#cc00ff')\n\nplt.subplot(6,3,16, title = 'Short Passing x Market Value')\nplt.scatter(dataset['ShortPassing'], dataset['valor'], c = '#99ffcc')","93471e1d":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,10)\n\nplt.subplot(2,3,1, title = 'Positioning x Market Value') #numero de linhas, numero de colunas, qual utilizar\nplt.scatter(dataset['Positioning'], dataset['valor'], c = '#8e0000')\n\nplt.subplot(2,3,2, title = 'Vision x Market Value')\nplt.scatter(dataset['Vision'], dataset['valor'], c = '#8ed000')\n\nplt.subplot(2,3,3, title = 'Composure x Market Value') #numero de linhas, numero de colunas, qual utilizar\nplt.scatter(dataset['Composure'], dataset['valor'], c= '#8e6c82')\n\nplt.subplot(2,3,4, title = 'Interceptions x Market Value')\nplt.scatter(dataset['Interceptions'], dataset['valor'], c = '#40c6e0')\n\nplt.subplot(2,3,5, title = 'Aggression x Market Value')\nplt.scatter(dataset['Aggression'], dataset['valor'], c = '#ffff00')","c851759c":"dataset[['valor', 'Reactions', 'LongPassing', 'ShortPassing', 'BallControl', 'Dribbling', 'Vision', 'Composure']].corr('spearman')","73b987bb":"mbrazil = dataset.loc[dataset['Nationality'] != 'Brazil']\nmgermany = mbrazil.loc[mbrazil['Nationality'] != 'Germany']\nmitaly = mgermany.loc[mgermany['Nationality'] != 'Italy']\nmargentina = mitaly.loc[mitaly['Nationality'] != 'Argentina']\nothers = margentina.loc[margentina['Nationality'] != 'France']","65809bda":"brazil = dataset.loc[dataset['Nationality'] == 'Brazil']\ngermany = dataset.loc[dataset['Nationality'] == 'Germany']\nitaly = dataset.loc[dataset['Nationality'] == 'Italy']\nargentina = dataset.loc[dataset['Nationality'] == 'Argentina']\nfrance = dataset.loc[dataset['Nationality'] == 'France']","56c610da":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\nplt.subplot(3,3,1, title = 'All Players Overall x Market Value') \nplt.scatter(dataset['Overall'], dataset['valor'], c = '#8e0000')\n\nplt.subplot(3,3,2, title = 'Brazilians Overall x Market Value' )\nplt.scatter(brazil['Overall'], brazil['valor'], c = '#ffff00')\n\nplt.subplot(3,3,3, title = 'Germans Overall x Market Value')\nplt.scatter(germany['Overall'], germany['valor'], c= '#1f1f14')\n\nplt.subplot(3,3,4, title = 'Italians Overall x Market Value')\nplt.scatter(italy['Overall'], italy['valor'], c = '#0033cc')\n\nplt.subplot(3,3,5, title = 'Argentines Overall x Market Value')\nplt.scatter(argentina['Overall'], argentina['valor'], c = '#99b3ff')\n\nplt.subplot(3,3,6, title = 'French Overall x Market Value')\nplt.scatter(france['Overall'], france['valor'], c = '#6600cc')\n\nplt.subplot(3,3,7, title = 'Other Countries Overall x Market Value')\nplt.scatter(others['Overall'], others['valor'], c = '#65d741')","80a059ec":"brazil = brazil.loc[(brazil['Overall'] >= 70) & (brazil['Overall'] <=80)]\ngermany = germany.loc[(germany['Overall'] >= 70) & (germany['Overall'] <=80)]\nitaly = italy.loc[(italy['Overall'] >= 70) & (italy['Overall'] <=80)]\nargentina = argentina.loc[(argentina['Overall'] >= 70) & (argentina['Overall'] <=80)]\nfrance = france.loc[(france['Overall'] >= 70) & (france['Overall'] <=80)]\nothers = others.loc[(others['Overall'] >= 70) & (others['Overall'] <=80)]\nmediumdataset = dataset.loc[(dataset['Overall'] >= 70) & (dataset['Overall'] <=80)]","8dcf011b":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\nplt.subplot(3,3,1, title = 'All Players Overall x Market Value') \nplt.scatter(mediumdataset['Overall'], mediumdataset['valor'], c = '#8e0000')\n\nplt.subplot(3,3,2, title = 'Brazilians Overall x Market Value' )\nplt.scatter(brazil['Overall'], brazil['valor'], c = '#ffff00')\n\nplt.subplot(3,3,3, title = 'Germans Overall x Market Value')\nplt.scatter(germany['Overall'], germany['valor'], c= '#1f1f14')\n\nplt.subplot(3,3,4, title = 'Italians Overall x Market Value')\nplt.scatter(italy['Overall'], italy['valor'], c = '#0033cc')\n\nplt.subplot(3,3,5, title = 'Argentines Overall x Market Value')\nplt.scatter(argentina['Overall'], argentina['valor'], c = '#99b3ff')\n\nplt.subplot(3,3,6, title = 'French Overall x Market Value')\nplt.scatter(france['Overall'], france['valor'], c = '#6600cc')\n\nplt.subplot(3,3,7, title = 'Other Countries Overall x Market Value')\nplt.scatter(others['Overall'], others['valor'], c = '#65d741')","1636864d":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\nplt.subplot(3,3,1, title = 'All Players Overall Histogram') \nplt.hist(mediumdataset['Overall'], bins = 11, color = '#8e0000')\n\nplt.subplot(3,3,2, title = 'Brazilians Overall Histogram')\nplt.hist(brazil['Overall'], bins = 11,color = '#ffff00')\n\nplt.subplot(3,3,3, title = 'Germans Overall Histogram')\nplt.hist(germany['Overall'], bins = 11,color= '#1f1f14')\n\nplt.subplot(3,3,4, title = 'Italians Overall Histogram')\nplt.hist(italy['Overall'],bins = 11, color = '#0033cc')\n\nplt.subplot(3,3,5, title = 'Argentines Overall Histogram')\nplt.hist(argentina['Overall'], bins = 11,color = '#99b3ff')\n\nplt.subplot(3,3,6, title = 'French Overall Histogram')\nplt.hist(france['Overall'], bins = 11, color = '#6600cc')\n\nplt.subplot(3,3,7, title = 'Other Countries Overall Histogram')\nplt.hist(others['Overall'], bins = 11, color = '#65d741')","6ee64d6d":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (10,8)\n\noverallmean = []\noverallmean.append(mediumdataset['Overall'].mean())\noverallmean.append(brazil['Overall'].mean())\noverallmean.append(germany['Overall'].mean())\noverallmean.append(italy['Overall'].mean())\noverallmean.append(argentina['Overall'].mean())\noverallmean.append(france['Overall'].mean())\noverallmean.append(others['Overall'].mean())\n\noverallstd = []\noverallstd.append(mediumdataset['Overall'].std())\noverallstd.append(brazil['Overall'].std())\noverallstd.append(germany['Overall'].std())\noverallstd.append(italy['Overall'].std())\noverallstd.append(argentina['Overall'].std())\noverallstd.append(france['Overall'].std())\noverallstd.append(others['Overall'].std())\n\nlabels = ['All players', 'Brazil', 'Germany', 'Italy', 'Argentina', 'France', 'Other countries']\n\ncolors = ['#8e0000', '#ffff00', '#1f1f14', '#0033cc', '#99b3ff', '#6600cc', '#65d741']\n\nplt.bar(labels, overallmean, yerr = overallstd, color = colors)","165dfb7c":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (10,8)\n\nvaluemean = []\nvaluemean.append(mediumdataset['valor'].mean())\nvaluemean.append(brazil['valor'].mean())\nvaluemean.append(germany['valor'].mean())\nvaluemean.append(italy['valor'].mean())\nvaluemean.append(argentina['valor'].mean())\nvaluemean.append(france['valor'].mean())\nvaluemean.append(others['valor'].mean())\n\nvaluestd = []\nvaluestd.append(mediumdataset['valor'].std())\nvaluestd.append(brazil['valor'].std())\nvaluestd.append(germany['valor'].std())\nvaluestd.append(italy['valor'].std())\nvaluestd.append(argentina['valor'].std())\nvaluestd.append(france['valor'].std())\nvaluestd.append(others['valor'].std())\n\nlabels = ['All players', 'Brazil', 'Germany', 'Italy', 'Argentina', 'France', 'Other countries']\n\ncolors = ['#8e0000', '#ffff00', '#1f1f14', '#0033cc', '#99b3ff', '#6600cc', '#65d741']\n\nplt.bar(labels, valuemean, yerr = valuestd, color = colors)","9289f15b":"def definefieldpart(p):\n    if p == 'GK':\n        return 0\n    elif p == 'RB' or p == 'CB' or p == 'LB' or p == 'RWB' or p == 'LWB' or p == 'LCB' or p == 'RCB':\n        return 1\n    elif p == 'CDM' or p == 'CM' or p == 'CAM' or p == 'RM' or p == 'LM' or p == 'RW' or p == 'LW' or p == 'LAM' or p == 'RAM' or p == 'RCM' or p == 'RDM' or p == 'LDM':\n        return 2\n    else:\n        return 3","9dee760c":"dataset['fieldpart'] = (dataset['Position'].apply(definefieldpart))\ndataset.head()","386b1434":"goalkeepers = dataset.loc[dataset['fieldpart'] == 0]\ndefense = dataset.loc[dataset['fieldpart'] == 1]\nmidfielders = dataset.loc[dataset['fieldpart'] == 2]\nattack = dataset.loc[dataset['fieldpart'] == 3]","71f8b927":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\nplt.subplot(2,2,1, title = 'Goalkeepers Overall Histogram') \nplt.hist(goalkeepers['Overall'], bins = 45, color = '#8e0000')\n\nplt.subplot(2,2,2, title = 'Defenders Overall Histogram')\nplt.hist(defense['Overall'], bins = 45,color = '#ffff00')\n\nplt.subplot(2,2,3, title = 'Midfielders Overall Histogram')\nplt.hist(midfielders['Overall'], bins = 45,color= '#1f1f14')\n\nplt.subplot(2,2,4, title = 'Attackers Overall Histogram')\nplt.hist(attack['Overall'],bins = 45, color = '#0033cc')\n\n","82a16dce":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\nplt.subplot(2,2,1, title ='Goalkeepers Scatter distribution') \nplt.scatter(goalkeepers['Overall'], goalkeepers['valor'], c = '#8e0000')\n\nplt.subplot(2,2,2, title ='Defensors Scatter distribution')\nplt.scatter(defense['Overall'], defense['valor'],c = '#ffff00')\n\nplt.subplot(2,2,3, title ='Midfielders Scatter distribution')\nplt.scatter(midfielders['Overall'], midfielders['valor'],c= '#1f1f14')\n\nplt.subplot(2,2,4, title ='Attackers Scatter distribution')\nplt.scatter(attack['Overall'], attack['valor'], c = '#0033cc')","721f9cb1":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,15)\n\ngkb50 = goalkeepers.loc[goalkeepers['Overall'] < 50]\ngkb5055 = goalkeepers.loc[(goalkeepers['Overall'] >=50) & (goalkeepers['Overall'] < 55)]\ngkb5560 = goalkeepers.loc[(goalkeepers['Overall'] >=55) & (goalkeepers['Overall'] < 60)]\ngkb6065 = goalkeepers.loc[(goalkeepers['Overall'] >=60) & (goalkeepers['Overall'] < 65)]\ngkb6570 = goalkeepers.loc[(goalkeepers['Overall'] >=65) & (goalkeepers['Overall'] < 70)]\ngkb7075 = goalkeepers.loc[(goalkeepers['Overall'] >=70) & (goalkeepers['Overall'] < 75)]\ngkb7580 = goalkeepers.loc[(goalkeepers['Overall'] >=75) & (goalkeepers['Overall'] < 80)]\ngkb8085 = goalkeepers.loc[(goalkeepers['Overall'] >=80) & (goalkeepers['Overall'] < 85)]\ngkb8590 = goalkeepers.loc[(goalkeepers['Overall'] >=85) & (goalkeepers['Overall'] < 90)]\ngka90 = goalkeepers.loc[goalkeepers['Overall'] >= 90]\n\ngkmean = []\ngkmean.append(gkb50['valor'].mean())\ngkmean.append(gkb5055['valor'].mean())\ngkmean.append(gkb5560['valor'].mean())\ngkmean.append(gkb6065['valor'].mean())\ngkmean.append(gkb6570['valor'].mean())\ngkmean.append(gkb7075['valor'].mean())\ngkmean.append(gkb7580['valor'].mean())\ngkmean.append(gkb8085['valor'].mean())\ngkmean.append(gkb8590['valor'].mean())\ngkmean.append(gka90['valor'].mean())\n\ngkvaluestd = []\ngkvaluestd.append(gkb50['valor'].std())\ngkvaluestd.append(gkb5055['valor'].std())\ngkvaluestd.append(gkb5560['valor'].std())\ngkvaluestd.append(gkb6065['valor'].std())\ngkvaluestd.append(gkb6570['valor'].std())\ngkvaluestd.append(gkb7075['valor'].std())\ngkvaluestd.append(gkb7580['valor'].std())\ngkvaluestd.append(gkb8085['valor'].std())\ngkvaluestd.append(gkb8590['valor'].std())\ngkvaluestd.append(gka90['valor'].std())\n\nlabels = ['< 50', '50-55', '55-60', '60-65', '65-70', '70-75', '75-80', '80-85', '85-90', '>90']\n\ncolors = ['#8e0000', '#ffff00', '#1f1f14', '#0033cc', '#99b3ff', '#6600cc', '#65d741' , \"#46a345\", \"#985fff\"]\n\nplt.subplot(2,2,1, title = 'Goalkeepers Market Value Means') \nplt.bar(labels, gkmean, yerr = gkvaluestd, color = colors)\n\ndb50 = defense.loc[defense['Overall'] < 50]\ndb5055 = defense.loc[(defense['Overall'] >=50) & (defense['Overall'] < 55)]\ndb5560 = defense.loc[(defense['Overall'] >=55) & (defense['Overall'] < 60)]\ndb6065 = defense.loc[(defense['Overall'] >=60) & (defense['Overall'] < 65)]\ndb6570 = defense.loc[(defense['Overall'] >=65) & (defense['Overall'] < 70)]\ndb7075 = defense.loc[(defense['Overall'] >=70) & (defense['Overall'] < 75)]\ndb7580 = defense.loc[(defense['Overall'] >=75) & (defense['Overall'] < 80)]\ndb8085 = defense.loc[(defense['Overall'] >=80) & (defense['Overall'] < 85)]\ndb8590 = defense.loc[(defense['Overall'] >=85) & (defense['Overall'] < 90)]\nda90 = defense.loc[defense['Overall'] >= 90]\n\ndmean = []\ndmean.append(db50['valor'].mean())\ndmean.append(db5055['valor'].mean())\ndmean.append(db5560['valor'].mean())\ndmean.append(db6065['valor'].mean())\ndmean.append(db6570['valor'].mean())\ndmean.append(db7075['valor'].mean())\ndmean.append(db7580['valor'].mean())\ndmean.append(db8085['valor'].mean())\ndmean.append(db8590['valor'].mean())\ndmean.append(da90['valor'].mean())\n\ndvaluestd = []\ndvaluestd.append(db50['valor'].std())\ndvaluestd.append(db5055['valor'].std())\ndvaluestd.append(db5560['valor'].std())\ndvaluestd.append(db6065['valor'].std())\ndvaluestd.append(db6570['valor'].std())\ndvaluestd.append(db7075['valor'].std())\ndvaluestd.append(db7580['valor'].std())\ndvaluestd.append(db8085['valor'].std())\ndvaluestd.append(db8590['valor'].std())\ndvaluestd.append(da90['valor'].std())\n\nplt.subplot(2,2,2, title = 'Defensors Market Value Means') \nplt.bar(labels, dmean, yerr = dvaluestd, color = colors)\n\nmb50 = midfielders.loc[midfielders['Overall'] < 50]\nmb5055 = midfielders.loc[(midfielders['Overall'] >=50) & (midfielders['Overall'] < 55)]\nmb5560 = midfielders.loc[(midfielders['Overall'] >=55) & (midfielders['Overall'] < 60)]\nmb6065 = midfielders.loc[(midfielders['Overall'] >=60) & (midfielders['Overall'] < 65)]\nmb6570 = midfielders.loc[(midfielders['Overall'] >=65) & (midfielders['Overall'] < 70)]\nmb7075 = midfielders.loc[(midfielders['Overall'] >=70) & (midfielders['Overall'] < 75)]\nmb7580 = midfielders.loc[(midfielders['Overall'] >=75) & (midfielders['Overall'] < 80)]\nmb8085 = midfielders.loc[(midfielders['Overall'] >=80) & (midfielders['Overall'] < 85)]\nmb8590 = midfielders.loc[(midfielders['Overall'] >=85) & (midfielders['Overall'] < 90)]\nma90 = midfielders.loc[midfielders['Overall'] >= 90]\n\nmmean = []\nmmean.append(mb50['valor'].mean())\nmmean.append(mb5055['valor'].mean())\nmmean.append(mb5560['valor'].mean())\nmmean.append(mb6065['valor'].mean())\nmmean.append(mb6570['valor'].mean())\nmmean.append(mb7075['valor'].mean())\nmmean.append(mb7580['valor'].mean())\nmmean.append(mb8085['valor'].mean())\nmmean.append(mb8590['valor'].mean())\nmmean.append(ma90['valor'].mean())\n\nmvaluestd = []\nmvaluestd.append(mb50['valor'].std())\nmvaluestd.append(mb5055['valor'].std())\nmvaluestd.append(mb5560['valor'].std())\nmvaluestd.append(mb6065['valor'].std())\nmvaluestd.append(mb6570['valor'].std())\nmvaluestd.append(mb7075['valor'].std())\nmvaluestd.append(mb7580['valor'].std())\nmvaluestd.append(mb8085['valor'].std())\nmvaluestd.append(mb8590['valor'].std())\nmvaluestd.append(ma90['valor'].std())\n\nplt.subplot(2,2,3, title = 'Midfielders Market Value Means') \nplt.bar(labels, mmean, yerr = mvaluestd, color = colors)\n\nab50 = attack.loc[attack['Overall'] < 50]\nab5055 = attack.loc[(attack['Overall'] >=50) & (attack['Overall'] < 55)]\nab5560 = attack.loc[(attack['Overall'] >=55) & (attack['Overall'] < 60)]\nab6065 = attack.loc[(attack['Overall'] >=60) & (attack['Overall'] < 65)]\nab6570 = attack.loc[(attack['Overall'] >=65) & (attack['Overall'] < 70)]\nab7075 = attack.loc[(attack['Overall'] >=70) & (attack['Overall'] < 75)]\nab7580 = attack.loc[(attack['Overall'] >=75) & (attack['Overall'] < 80)]\nab8085 = attack.loc[(attack['Overall'] >=80) & (attack['Overall'] < 85)]\nab8590 = attack.loc[(attack['Overall'] >=85) & (attack['Overall'] < 90)]\naa90 = attack.loc[attack['Overall'] >= 90]\n\namean = []\namean.append(ab50['valor'].mean())\namean.append(ab5055['valor'].mean())\namean.append(ab5560['valor'].mean())\namean.append(ab6065['valor'].mean())\namean.append(ab6570['valor'].mean())\namean.append(ab7075['valor'].mean())\namean.append(ab7580['valor'].mean())\namean.append(ab8085['valor'].mean())\namean.append(ab8590['valor'].mean())\namean.append(aa90['valor'].mean())\n\navaluestd = []\navaluestd.append(ab50['valor'].std())\navaluestd.append(ab5055['valor'].std())\navaluestd.append(ab5560['valor'].std())\navaluestd.append(ab6065['valor'].std())\navaluestd.append(ab6570['valor'].std())\navaluestd.append(ab7075['valor'].std())\navaluestd.append(ab7580['valor'].std())\navaluestd.append(ab8085['valor'].std())\navaluestd.append(ab8590['valor'].std())\navaluestd.append(aa90['valor'].std())\n\nplt.subplot(2,2,4, title = 'Attackers Market Value Means') \nplt.bar(labels, amean, yerr = avaluestd, color = colors)","f79577d9":"def sumpartialoverall(s):\n    s = str(s)\n    if \"+\" in s:\n        strp = s.split('+')\n        onep = int(strp[0])\n        twop = int(strp[1])\n        final = onep + twop\n    else:\n        onep = int(s)\n        final = onep\n    return final","d2ed88f3":"dataset['LS'] = dataset['LS'].apply(sumpartialoverall)\ndataset['ST'] = dataset['ST'].apply(sumpartialoverall)\ndataset['RS'] = dataset['RS'].apply(sumpartialoverall)\ndataset['LW'] = dataset['LW'].apply(sumpartialoverall)\ndataset['LF'] = dataset['LF'].apply(sumpartialoverall)\ndataset['CF'] = dataset['CF'].apply(sumpartialoverall)\ndataset['RF'] = dataset['RF'].apply(sumpartialoverall)\ndataset['RW'] = dataset['RW'].apply(sumpartialoverall)\ndataset['LAM'] = dataset['LAM'].apply(sumpartialoverall)\ndataset['CAM'] = dataset['CAM'].apply(sumpartialoverall)\ndataset['RAM'] = dataset['RAM'].apply(sumpartialoverall)\ndataset['LM'] = dataset['LM'].apply(sumpartialoverall)\ndataset['LCM'] = dataset['LCM'].apply(sumpartialoverall)\ndataset['CM'] = dataset['CM'].apply(sumpartialoverall)\ndataset['RCM'] = dataset['RCM'].apply(sumpartialoverall)\ndataset['RM'] = dataset['RM'].apply(sumpartialoverall)\ndataset['LWB'] = dataset['LWB'].apply(sumpartialoverall)\ndataset['LDM'] = dataset['LDM'].apply(sumpartialoverall)\ndataset['CDM'] = dataset['CDM'].apply(sumpartialoverall)\ndataset['RDM'] = dataset['RDM'].apply(sumpartialoverall)\ndataset['RWB'] = dataset['RWB'].apply(sumpartialoverall)\ndataset['LB'] = dataset['LB'].apply(sumpartialoverall)\ndataset['LCB'] = dataset['LCB'].apply(sumpartialoverall)\ndataset['CB'] = dataset['CB'].apply(sumpartialoverall)\ndataset['RCB'] = dataset['RCB'].apply(sumpartialoverall)\ndataset['RB'] = dataset['RB'].apply(sumpartialoverall)\n","5e6ab298":"dataset['totaloverall'] = (dataset['LS'] + dataset['ST'] + dataset['RS'] + dataset['LW'] + dataset['LF']  + dataset['CF'] + dataset['RF'] + dataset['RW']\n                          + dataset['LAM'] + dataset['CAM'] + dataset['RAM'] + dataset['LM'] + dataset['LCM'] + dataset['CM'] + dataset['RCM'] +\n                            dataset['RM'] + dataset['LWB'] + dataset['LDM'] + dataset['CDM'] + dataset['RDM'] + dataset['RWB'] + dataset['LB'] +\n                           dataset['LCB'] + dataset['CB'] + dataset['RCB'] + dataset['RB'])","179b2059":"dataset.head() #just to make sure its ok","63c902d1":"copy = dataset\ncopy = dataset\ncopy.drop(copy[copy.totaloverall == 0].index, inplace = True)\n\ncopy['totaloverall'].hist(bins=100, color='red')","0c4486c0":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,10)\n\ncopy.plot(x = 'totaloverall', y = 'valor', kind = 'scatter', title = 'Total Overall x Value', color='r')","f8e5521b":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (10,8)\n\nrightfoot = dataset.loc[dataset['Preferred Foot'] == 'Right']\nleftfoot = dataset.loc[dataset['Preferred Foot'] == 'Left']\n\novermeans = []\novermeans.append(rightfoot['Overall'].mean())\novermeans.append(leftfoot['Overall'].mean())\n\nstdover = []\nstdover.append(rightfoot['Overall'].std())\nstdover.append(leftfoot['Overall'].std())\n\ncolors = ['#34ff00', '#ff9811' ]\n\nlbs = ['Right foot', 'Left foot']\n\nplt.subplot(1,2,1, title = 'Right\/Left Foot Overall Means') \nplt.bar(lbs, overmeans, yerr = stdover, color = colors)\n\nvaluemeans = []\nvaluemeans.append(rightfoot['valor'].mean())\nvaluemeans.append(leftfoot['valor'].mean())\n\nstdvalue = []\nstdvalue.append(rightfoot['valor'].std())\nstdvalue.append(leftfoot['valor'].std())\n\nplt.subplot(1,2,2, title = 'Right\/Left Foot Value Means') \nplt.bar(lbs, valuemeans, yerr = stdvalue, color = colors)","cd2f87ab":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (10,8)\n\nrightfoot = rightfoot.loc[(rightfoot['Overall'] >= 70) & (rightfoot['Overall'] <=80)]\nleftfoot = leftfoot.loc[(leftfoot['Overall'] >= 70) & (leftfoot['Overall'] <=80)]\n\novermeans = []\novermeans.append(rightfoot['Overall'].mean())\novermeans.append(leftfoot['Overall'].mean())\n\nstdover = []\nstdover.append(rightfoot['Overall'].std())\nstdover.append(leftfoot['Overall'].std())\n\ncolors = ['#34ff00', '#ff9811']\n\nlbs = ['Right foot', 'Left foot']\n\nplt.subplot(1,2,1, title = 'Right\/Left Foot Overall Means') \nplt.bar(lbs, overmeans, yerr = stdover, color = colors)\n\nvaluemeans = []\nvaluemeans.append(rightfoot['valor'].mean())\nvaluemeans.append(leftfoot['valor'].mean())\n\nstdvalue = []\nstdvalue.append(rightfoot['valor'].std())\nstdvalue.append(leftfoot['valor'].std())\n\nplt.subplot(1,2,2, title = 'Right\/Left Foot Value Means') \nplt.bar(lbs, valuemeans, yerr = stdvalue, color = colors)","3987a5fa":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,8)\n\nverylowweakfoot = dataset.loc[dataset['Weak Foot'] == 1]\nlowweakfoot = dataset.loc[dataset['Weak Foot'] == 2]\nmediumweakfoot = dataset.loc[dataset['Weak Foot'] == 3]\nhighweakfoot = dataset.loc[dataset['Weak Foot'] == 4]\nveryhighweakfoot = dataset.loc[dataset['Weak Foot'] == 5]\n\nom = []\nom.append(verylowweakfoot['Overall'].mean())\nom.append(lowweakfoot['Overall'].mean())\nom.append(mediumweakfoot['Overall'].mean())\nom.append(highweakfoot['Overall'].mean())\nom.append(veryhighweakfoot['Overall'].mean())\n\nostd = []\nostd.append(verylowweakfoot['Overall'].std())\nostd.append(lowweakfoot['Overall'].std())\nostd.append(mediumweakfoot['Overall'].std())\nostd.append(highweakfoot['Overall'].std())\nostd.append(veryhighweakfoot['Overall'].std())\n\ncolors = ['#34ff00', '#ff9811', '#1209fe', '#561200', '#afeebc']\n\nlbs = ['Very low weak foot', 'Low weak foot', 'Medium weak foot', 'High weak foot', 'Very high weak foot']\n\nplt.subplot(1,2,1, title = 'Skills with bad foot Overall Means') \nplt.bar(lbs, om, yerr = ostd, color = colors)\n\nvm = []\nvm.append(verylowweakfoot['valor'].mean())\nvm.append(lowweakfoot['valor'].mean())\nvm.append(mediumweakfoot['valor'].mean())\nvm.append(highweakfoot['valor'].mean())\nvm.append(veryhighweakfoot['valor'].mean())\n\nvstd = []\nvstd.append(verylowweakfoot['valor'].std())\nvstd.append(lowweakfoot['valor'].std())\nvstd.append(mediumweakfoot['valor'].std())\nvstd.append(highweakfoot['valor'].std())\nvstd.append(veryhighweakfoot['valor'].std())\n\nplt.subplot(1,2,2, title = 'Skills with bad foot Value Means') \nplt.bar(lbs, vm, yerr = vstd, color = colors)","794506b8":"%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (20,8)\n\nverylowweakfoot = verylowweakfoot.loc[(verylowweakfoot['Overall'] >= 70) & (verylowweakfoot['Overall'] <=80)]\nlowweakfoot = lowweakfoot.loc[(lowweakfoot['Overall'] >= 70) & (lowweakfoot['Overall'] <=80)]\nmediumweakfoot = mediumweakfoot.loc[(mediumweakfoot['Overall'] >= 70) & (mediumweakfoot['Overall'] <=80)]\nhighweakfoot = highweakfoot.loc[(highweakfoot['Overall'] >= 70) & (highweakfoot['Overall'] <=80)]\nveryhighweakfoot = veryhighweakfoot.loc[(veryhighweakfoot['Overall'] >= 70) & (veryhighweakfoot['Overall'] <=80)]\n\nom = []\nom.append(verylowweakfoot['Overall'].mean())\nom.append(lowweakfoot['Overall'].mean())\nom.append(mediumweakfoot['Overall'].mean())\nom.append(highweakfoot['Overall'].mean())\nom.append(veryhighweakfoot['Overall'].mean())\n\nostd = []\nostd.append(verylowweakfoot['Overall'].std())\nostd.append(lowweakfoot['Overall'].std())\nostd.append(mediumweakfoot['Overall'].std())\nostd.append(highweakfoot['Overall'].std())\nostd.append(veryhighweakfoot['Overall'].std())\n\ncolors = ['#34ff00', '#ff9811', '#1209fe', '#561200', '#afeebc']\n\nlbs = ['Very low weak foot', 'Low weak foot', 'Medium weak foot', 'High weak foot', 'Very high weak foot']\n\nplt.subplot(1,2,1, title = 'Skills with bad foot Overall Means') \nplt.bar(lbs, om, yerr = ostd, color = colors)\n\nvm = []\nvm.append(verylowweakfoot['valor'].mean())\nvm.append(lowweakfoot['valor'].mean())\nvm.append(mediumweakfoot['valor'].mean())\nvm.append(highweakfoot['valor'].mean())\nvm.append(veryhighweakfoot['valor'].mean())\n\nvstd = []\nvstd.append(verylowweakfoot['valor'].std())\nvstd.append(lowweakfoot['valor'].std())\nvstd.append(mediumweakfoot['valor'].std())\nvstd.append(highweakfoot['valor'].std())\nvstd.append(veryhighweakfoot['valor'].std())\n\nplt.subplot(1,2,2, title = 'Skills with bad foot Value Means') \nplt.bar(lbs, vm, yerr = vstd, color = colors)","ee4f4453":"---\n> Hypotesis 4: The position of the players\n---\nFor analyze if the position of players is a factor the influence the players market value, we are going to divide the dataset into 4 groups: Goalkeepers, defensive players, midfielders and attack players. ","3a06fa92":"**Important infomation and conclusion on the info above:**\n\n* All the atributes selected from the scatter distribution have at least a 0.5 coefficient on a spearman correlation with the variable market value (this means a strong correlation). \n* Another important observation is the strong spearman relation that those abilities have with each other. In other words, if a player has a high classification on one of those skills, he tends to have also a high classification on the others.\n* Further more, it's relevant to quote that the features selected represent, on it's majority, simple habilities of a soccer player. \n\nTo conclude the hypotesis, we can affirm that some skills have a most impressive impact on the players market value than others. ","c2543eba":"**Technical Atributes on Scatter Plot**","d9910e2e":"Description below represents the wage distribution based on all players(top), players older than 34 (middle) and players younger than 34(bottom) ","7c779617":"Description represents the market value distribution based on all players(top), players older than 34 (middle) and players younger than 34(bottom) ","efff4c0e":"**Important observation on the plots above**\n\n* The top value for a goalkeeper with a overall 80 is around is around 15M, and for the same overall midfielders reach up to a value of 23 million. That's a variation of 53%. \n* Only defensors with a overall of 87 and higher broke the 50M mark. On the other hand, midfielders starting at a overall of 85 and attakers with 86 reached that mark. \n* No defensors have a market value above 60M, and all the other 3 groups have elements above that. ","14ec1cfc":"**Important Observations on the grafic above**\n\n* As we can see, the Overall of a player causes a huge impact on their market value.\n* We can observe that all the players with Overall grade below 75 are, invariably, cheap. \n* On the other hand, some better classified players have a higher market value but some don't. What other factors beyond their Overall abilities could influence on players market price? ","8cdad2b2":"**Important observation on the plots above:**\n\n* As we expected, the distribution seems to have a very similar pattern between the graphics. \n* Another important detail is that, all the selected countries have a similar range of total number of players plotted, which is a fundamental for avoiding a false premise. \n* Considering that, let's compare the overall means of the grups:","1f42ca9a":"**Imporant observations on the plots above:**\n\n* Until the overall of 80, the means are very close, enabling us to make assumption. \n* However, above that mark, some numbers become quite relevant. \n\n\n* 80-85\n\n* Goalkeepers mean around 15M (8-22 with std deviation)\n* Defensors mean around 17M (10-24 with std deviation)\n* Midfielders mean around 21M (13-29M with std deviation)\n* Attackers meand around 21M (13-29M with std deviation)\n\n\n* 85-90\n\n* Goalkeepers mean around 36M (21-51 with std deviation)\n* Defensors mean around 33M (21-45 with std deviation)\n* Midfielders mean around 51M (36-66M with std deviation)\n* Attackers meand around 51M (32-70M with std deviation)\n\n\n* 90 > \n\n* Goalkeepers mean around 70M (67-73 with std deviation)\n* Defensors mean around 47M (42-52 with std deviation)\n* Midfielders mean around 96M (70-122M with std deviation)\n* Attackers meand around 82M (66-98M with std deviation)","676cc38b":"**Important Observations on the grafic above**\n\n* The overall range drops heavily on the age 38 and after that, with a light drop on 34 years old. However, a significant part of the player with age above 34 year old have a high classification on the game. \n* Let's analyze the dissipation of players in two separated groups: All players and above 34 years old. ","4d5fb169":"**Physical Atributes on Scatter Plot**","55344601":"---\n> Hypotesis 3: The nationality of players\n---\n* We are going to test if a nationality of a player might influence on his market value. For that, we selected players from the 5 nations with more international soccer titles: Brazil, Germany, Italy, Argentina and France. \n\n* The idea is to compare those players with the other group, and check if there is a relevant difference on the price.","1132b47a":"**Important observation on the plots above**\n\n* The overall mean of right handed and left handed players is quite similar. That gives to us a great scenario to compare their market value. And, as we can see, there are also very close.\n* Considering that, we can assume that this isn't a very important factor o their price. \n* However, we should compare on how well they are able to use their weak foot. ","b512dd35":"**Important observations and conclusion:**\n\n* As we can observe, the market value of players tend to increase as they are able to manage their weak foot better. But, there are two very important observations that prevents us from making assumnptions. The first is that the standart deviation on value is extremely high. The second is that the value is growing based on the difference on their overall average, so actually the overall is influencing the value, not the weak foot skills.\n\n* With that said, we consider this hypotesis dinied.","834a2b8a":"---\n> Hypotesis 6: Preferred foot of a player. \n---\n\n* We are going to avaluate if being right handed or left handed influences on the players market value.","aba9318e":"**Conclusion on the hypotesis**\n\n* As we can see, the growth on the distribution is very low. \n* Another important factor is that the distribution gets very spread and difused as the totaloverall increases. \n\nFor those reasons, we cannot affirm that there is a high correlation between the totaloverall A.K.A. Adaptability with the players market value.","1954fee5":"---\n> Hypotesis 2: Skills \n--- \nWe are going to compare the influence of the players abilities on their market value. For that, lets separate those caracteristics on three different groups: Physical, Technical and Mental.\n\nIt's expected that the major part of the skills is proportional to the market value of the players, in other words, as the grade of the atribute grows on the graphic, the players value also are going to increase. However, this hypotesis is focusing on finding which of those skills have bigger influence on that relation. For that, we are watching for graphics that assume kind of an exponential behavior with a low number of outliers. If you are wondering why is that, here follows the explanation:\n\n* Where the coordinate X is low, the coordinate Y MUST also be low. This means that players whom are badly ranked on that specific skill can't have a high market value. \n* Where the coordinate X is high, the coordinate Y MUST also be high. This means that players whom are highly ranked on that specific skill hava a high market value. \n* The reason that no outliers are alowed is that, in this case, every outlier is a contradiction to the correlation. \n* The reason we expect the curve to be exponential is that the skill is going to be so important to the price of the player that any little improvement on it causes a big increase of his market value.\n\n","afb36daa":"---\n> Hypotesis 1: The player's Age.\n---\n* It's logical to think that players with a very high Overall can lose some market value as they get older and clubs are not willing to spend a lot of resources on them because of the biological factor of aging.","e5e17b1c":"**Important observations on the plot above:**\n\n* We can perceive that all the distributions tend to follow a normal distribution.\n* As expected the sample of midfielders is larger than defender, which is larger than attakers which is larger than goalkeepers. The explanation for that is based on the usual squads that are adopted on the teams tatics, requesting more players on some sections than other. Nevertheless, all samples are quite large, so that won't be a problem. \n* Let's introduce the variable value on a scatterplot display:","24214d32":"**Mental Atributes on Scatter Plot**","74dcaf4c":"**Important observation on the plot above:**\n\n* We can see that the mean overall value between the groups are very close to each other.\n* That means that if we find a large distinction on the market values of players from those different countries, we might conclude that nationality impacts on the players price.\n* Let's compare their mean prices then.","250ffc0f":"---\n> Hypotesis 5: The players adaptability on other positions\n---\n* On fifa, players have a overall score for the position they are used to play. But also, they have a overall score for any other position they actually are instructed to play (the only exception is goalkeepers, so this hypotesis don't include them and they will be moved apart for tha analysis. \n* First of all, it's needed to make some adjustments on data.\n* After that, we are going to plot a histogram and a scatter plot to see the distribution. ","42bc73cd":"**Conlusion on the hypothesis**\n\n* With the facts exposed, we can assume that the position is relevant to the players market value.","cc244147":"**Important Observations on the grafic\/info above**\n\n* Comparing all athletes distribution (left) with only athletes above 34 years old (right), we can confirm that the smaller group has an overall median and mean slightly better than the total group and the younger group. \n* Considering that, lets compare these same groups salaries:","fcb6e411":"**Important conclusion observation**\n\n* Even showing that players with a higher age are statistically better and receive a better wage from their clubs, we can observe with the descriptions above that they have market value 2.62 times smaller than the total group, in average. Therefore, we can consider that age causes influence on the players value, confirming the raised hypotesis. ","4530988e":"**Important observations on the info above**\n\n* Even considering that the mean salary of the youger players is higher, we can observe that the distribution of wages on players with age above 34 years old is higher on 25, 50 and 75 % comparing to the total distribution. That happens because the total group has a high standant deviation, which is problably caused for a the presence of contrasted outliers.\n* Anyway, this means that the majority of older players have a better salary compared to the majority of younger players (desconsidering outliers)","28ad1874":"**Important observation on the plots above:**\n\n* We can observe that price of players with overall under 70 is very low, in all plots. It means that if a players is not good, doesn't really matter where he is from. So, we are going to desconsider that group of players. \n* The problem is that the distribution above overall 80 is very different for every country. As the goal of this analysis is not the prove which country has the best team, we are going to desconsider players with a overall over 80. The idea is to compare if players with similar abilities have a differential market value caused from a nationality. ","2b2aadb2":"**Overall and Price distribution (All PLayers, Brazil, Germany, Italy, Argentina and Players from other countries**","17bc3dcc":"**Important observation of the plot above**\n\n* As its noticeable, the players adaptability follows a normal distribution. \n* As the overall score of a player increases with the mean of increase of specific skills, its expected that the price of a player rises as he is more adaptable, obviously. Accordingly to that, this doesn't mean that adaptability is a substancial factor that influences market value. \n* Let's analyze the scatter plot:","4a93f037":"Description represents the overall distribution based on all players(top), players older than 34 (middle) and players younger than 34(bottom) ","95911c54":"**Important observations on the grafic above**\n\n* We can see that there isn't any player older than 33 years old with a market value over 22 million euros.\n* So, let's check if there are any good players on the group above the age mentioned","bafd2be7":"**Important observation about the plots above**\n\n* Now, excluding players with overall under 70 and over 80, the distributions of players in the countries seem to be much more fare to make a comparison. \n* To have a better view on how many players are placed in each interval of overall, let's display some histograms.","32f5cb87":"**Important observation of the graphics plotted**\n\nConsidering the explanations cited above the plots, the skills that represent the expected behaviour are:\n\n- Reactions: Reactions measures how quickly a player responds to a situation happening around him (Physical - 5).\n- Ball Control: Ball control is the ability of a player to control the ball as he receives it (Technical - 9).\n- Dribbling: Dribbling is the player\u2019s ability to carry the ball and past an opponent (Technical - 10).\n- LongPassing: This stat is used to classify how well a player performs a long pass in the air to his teammate (Technical - 15)\n- ShortPassing: This attribute ranks how well a player performs a short \/ ground pass to his teammate (Technical - 16).\n- Vision: Vision ranks the player\u2019s awareness of the position of his teammates & opponents around him (Mental - 2).\n- Composure: This attribute determines at what distance the player with the ball starts feeling the pressure from the opponent (Mental - 3).\n\nLet's try to confirm the correlation observed on the graphics with the Spearman correlation. This coefficient assesses how well the relationship between two variavles can be described using a monotonic function. It's result is placed between 1 and -1 (perfect monotone function or the other). ","689657c2":"**Important Conclusions**\n\n* As we can see, there is some notable difference between the players price depending on their nationality.\n* However, the standart deviation is incredibly high, preventing us to make assumptions on the influence of the nationality on the players market value. \n* We could, try to reduce the range of overall to reduce the standart deviation, which is fair. But, the sample would be too reduced, which also would prevent us to make assumptions.\n\nTherefore, the Hypothesis is denied. "}}