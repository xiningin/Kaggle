{"cell_type":{"00b8aadf":"code","99b9947a":"code","b3c2bf9e":"code","76c111e9":"code","8f7adc45":"code","a2b038fa":"code","95871ec8":"code","29cd4511":"code","1d2eadfc":"code","39d6badb":"code","8880717b":"code","02e86f65":"code","67039434":"code","c55882a6":"code","8abdab3e":"code","d3b372ad":"code","858f3657":"code","d63e99ee":"code","0383b706":"code","004f611c":"code","833bcf3e":"code","18f93e5d":"markdown"},"source":{"00b8aadf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","99b9947a":"events = pd.read_csv(\"..\/input\/events.csv\")\ncategory_tree = pd.read_csv(\"..\/input\/category_tree.csv\")\nitem_properties_part1 = pd.read_csv(\"..\/input\/item_properties_part1.csv\")\nitem_properties_part2 = pd.read_csv(\"..\/input\/item_properties_part2.csv\")\nitem_properties_part = pd.concat([item_properties_part1, item_properties_part2])","b3c2bf9e":"events.head()","76c111e9":"category_tree.head()","8f7adc45":"item_properties_part.head()","a2b038fa":"data = events[['visitorid','event','itemid']]\ninfo_event_events = events.groupby(by=['event']).size()\ninfo_event_events","95871ec8":"import matplotlib.pyplot as plt\nplt.figure()\nplt.bar(['addtocart','transaction','view'],info_event_events.tolist())\n#axis_2.pie(info_event_events.tolist(), labels=events['event'].unique(),autopct='%1.1f%%',shadow=True, startangle=90)\nplt.title(\"Unique events event\")\nplt.show()","29cd4511":"data.head()","1d2eadfc":"transfrom_rating = []\n# view = 1, addtocart = 2, transaction = 3\ndef transfrom_data(data_raw):\n    data = data_raw.copy()\n    for event in data.event:\n        if(event == 'view'):\n            transfrom_rating.append(1)\n        if(event == 'addtocart'):\n            transfrom_rating.append(2)\n        if(event == 'transaction'):\n            transfrom_rating.append(3)\n    data['rating']= transfrom_rating\n    return data[['visitorid','itemid','rating']]\ndata_surprise = transfrom_data(data)\ndata_surprise.head()","39d6badb":"data_view  = data_surprise[data_surprise['rating']==1].reset_index(drop= True)\ndata_transaction  = data_surprise[data_surprise['rating']==2].reset_index(drop= True)\ndata_addtocard  = data_surprise[data_surprise['rating']==3].reset_index(drop= True)","8880717b":"from sklearn.model_selection import train_test_split as  train_test_split_sklearn\ndata_view_train, data_view_test = train_test_split_sklearn(data_view, test_size= 0.008)\ndata_transaction_train, data_transaction_test = train_test_split_sklearn(data_transaction, test_size= 0.33)","02e86f65":"data_tuning = pd.concat([data_addtocard, data_view_test, data_transaction_test]).sort_values(by = 'rating').reset_index(drop=True)","67039434":"print(\"The number item view \", data_tuning[data_tuning['rating']==1].shape[0])\nprint(\"The number item tranaction \", data_tuning[data_tuning['rating']==2].shape[0])\nprint(\"The number item addtacard \", data_tuning[data_tuning['rating']==3].shape[0])\ndata_tuning.head()","c55882a6":"import surprise\nreader = surprise.Reader(rating_scale=(1, 3))\ndata = surprise.Dataset.load_from_df(data_tuning, reader)\ntype(data)","8abdab3e":"from surprise.model_selection.split import train_test_split\ntrainset, testset = train_test_split(data, test_size=0.25)\ntype(trainset)","d3b372ad":"from surprise.prediction_algorithms.knns import KNNBasic\nsim_options = {'name': 'cosine',\n               'user_based': False\n               }\nalgo_knn_basic = KNNBasic(sim_options=sim_options)\npredictions = algo_knn_basic.fit(trainset).test(testset)","858f3657":"result = pd.DataFrame(predictions, columns=['visitor_id', 'item_id', 'base_event', 'predict_event', 'details'])\nresult.drop(columns = {'details'}, inplace = True)\nresult['erro'] = abs(result['base_event'] - result['predict_event'])\nresult.head()","d63e99ee":"result['predict_event'].hist(bins= 100, figsize= (20,10))","0383b706":"result[result['base_event']== 1]['predict_event'].hist(bins= 100, figsize= (20,10))","004f611c":"result[result['base_event']== 2]['predict_event'].hist(bins= 100, figsize= (20,10))","833bcf3e":"from surprise import accuracy\nmae_model = accuracy.mae(predictions)\nrmse_model = accuracy.rmse(predictions)","18f93e5d":"+ Nh\u1eadn x\u00e9t: qu\u00e1 nhi\u1ec1u gi\u00e1 tr\u1ecb 2 \u0111i\u1ec1u n\u00e0y kh\u00f4ng \u0111\u00fang"}}