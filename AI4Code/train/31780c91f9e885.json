{"cell_type":{"8bf531b5":"code","e644f08e":"code","455f7967":"code","7fe732f4":"code","7df2be0a":"code","cab40760":"code","f4241eda":"code","9f50f176":"code","978b39b5":"code","c7fb040e":"code","7f0aa8f2":"code","395318bc":"code","09beeb8a":"code","cb8cfc69":"code","7ee14938":"code","9b5ac851":"code","1ef06f62":"code","66a70276":"code","a394ecf4":"code","4cb0a16b":"code","d9cba3f9":"code","e9d06c86":"code","58153e96":"code","d9f4fada":"markdown","61b2917a":"markdown","84016ac6":"markdown","93d4fe2d":"markdown","f9cb1e75":"markdown","bb6491c6":"markdown","8e840ae7":"markdown","d6a3c1f5":"markdown","ff55482e":"markdown","00ab836c":"markdown","feb5fed2":"markdown","168fdd14":"markdown","cea34ea0":"markdown","2b9d453c":"markdown","8ca16d2e":"markdown","58fd4855":"markdown","51b56048":"markdown","2cb13fb4":"markdown","a7edcf5c":"markdown","2202d296":"markdown"},"source":{"8bf531b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e644f08e":"d18 = pd.read_csv('..\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\nd18","455f7967":"print(d18.info())\nd18.describe(include=\"all\")","7fe732f4":"print('The shape: ',d18.shape)\nprint('The size: ', d18.size)","7df2be0a":"dtypes_d18 = pd.DataFrame(d18.dtypes,columns=['dtypes'])\ndtypes_d18","cab40760":"nonnull_d18 = pd.DataFrame(d18.notnull().sum())\n\nnonnull_d18","f4241eda":"null_d18 = pd.DataFrame(d18.isnull().sum())\nnull_d18","9f50f176":"nunique_d18 = pd.DataFrame(d18.nunique())\nnunique_d18","978b39b5":"merge18 = pd.concat([dtypes_d18,null_d18,nonnull_d18, nunique_d18], axis=1)\nmerge18","c7fb040e":"d18.columns = list(map(lambda x: x.lower(), d18.columns))\nd18.sample()","7f0aa8f2":"d18.raintoday.replace('no', 'noRain', inplace=True)\nd18.raintomorrow.replace('no', 'noRain', inplace=True)\n\nd18","395318bc":"d18.date = pd.to_datetime(d18.date)\nd18.date = d18.date.dt.strftime('%d\/%m\/%Y')\nd18.head()","09beeb8a":"d18['difference'] = d18['maxtemp'] - d18['mintemp']\nd18['difference']","cb8cfc69":"#d18.drop(['evaporation','sunshine'], axis=1 ,inplace=True )\nd18.head()","7ee14938":"d18.groupby('location')['rainfall','date'].max()","9b5ac851":"filter_d18 = d18[d18['location']=='Albury']\nfilter_d18.sort_values(by=['maxtemp'])","1ef06f62":"NaN_d18 = d18.isnull().sum()\nNaN_d18","66a70276":"d18.dropna(subset=['windgustdir'], axis=0, inplace=True)\nd18","a394ecf4":"d18a = d18.copy()\nd18_min = d18a.groupby('location')[['evaporation', 'sunshine']].min()\nd18_min","4cb0a16b":"\nd18_max = d18a.groupby('location')[['evaporation', 'sunshine']].max()\nd18_max","d9cba3f9":"d18_median = d18a.groupby('location')[['evaporation', 'sunshine']].median()\nd18_median","e9d06c86":"result=d18[d18.location=='Perth'][['location','date','maxtemp']].sort_values(by=['maxtemp'], ascending=False)\nresult.iloc[0]","58153e96":"result1 = d18.groupby('location').mean()\nresult1","d9f4fada":"Lowercase all column names.","61b2917a":"Create a new column called \"difference\", calculate the difference between maxtemp and mintemp columns for each row, and store the value in this new column.","84016ac6":"Find out the types values of the columns and save the result as a dataframe.","93d4fe2d":"Read the dataset as a dataframe. Create a copy of your dataframe. Solve the rest of the questions using this dataframe copy.","f9cb1e75":"Find out the non-null counts of the columns and save the result as a dataframe.","bb6491c6":"Find out the shape and size info of the dataset.","8e840ae7":"Filter out all the data for the city 'Albury' and then sort according to maxtemp column.","d6a3c1f5":"Find out the unique counts of the columns and save the result as a dataframe.","ff55482e":"Change all the No values to NoRain and all the Yes values to Rain in raintoday and raintomorrow columns.","00ab836c":"Remove the evaporation and sunshine columns from the dataset permanently.","feb5fed2":"Find out the null counts of the columns and save the result as a dataframe.","168fdd14":"Find out the hottest day of \"Perth\". Example output: Timestamp('2015-01-05 00:00:00')","cea34ea0":"Remove the rows with NaN values in \"windgustdir\" column from the dataframe permanently.","2b9d453c":"Find out the describe and info attributes of the dataframe. Analyze these information and create a short write-up according to your findings.","8ca16d2e":"Group your dataframe by location and find out the averages of all numeric values.","58fd4855":"Merge the dataframes you created in questions 4-5-6-7. Expected output:","51b56048":"Find out the most rainy day for each city.","2cb13fb4":"Change the data type of \"date\" (object) column to datetime64 and reformat the date as DD\/MM\/YYYY.","a7edcf5c":"Create a new dataframe, use \"Location\" column as the index of the dataframe, display the min, max, and median values of \"evaporation\" and \"sunshine\" columns in this dataframe.","2202d296":"Find out the NaN counts for each column."}}