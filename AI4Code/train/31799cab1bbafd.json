{"cell_type":{"39c6479e":"code","0c525c32":"code","c5763f36":"code","cdd67197":"code","cbd96da2":"code","5f00de4f":"code","c3c3cdc0":"code","e0566d89":"code","2e6783b2":"code","60f58827":"code","7ea1205b":"code","3acfc242":"code","fbc38a7a":"markdown","251f8133":"markdown","a4330fe9":"markdown","bd102e7a":"markdown","1dcd51c5":"markdown","27e014c8":"markdown"},"source":{"39c6479e":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        from learntools.core import binder\nbinder.bind(globals())\nfrom learntools.machine_learning.ex2 import *\nprint(\"Setup Complete\")","0c525c32":"import pandas as pd\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","c5763f36":"covid_19_India = pd.read_csv(\"..\/input\/covid19-in-india\/covid_19_india.csv\")\nIndividualDetails = pd.read_csv(\"..\/input\/covid19-in-india\/IndividualDetails.csv\")\nHospitalBedsIndia = pd.read_csv(\"..\/input\/covid19-in-india\/HospitalBedsIndia.csv\")\nICMRTestingDetails = pd.read_csv(\"..\/input\/covid19-in-india\/ICMRTestingDetails.csv\")\npopulation_india_census2011 = pd.read_csv(\"..\/input\/covid19-in-india\/population_india_census2011.csv\")\n\ncovid_19_India.columns","cdd67197":"features=['Sno', 'Date', 'State\/UnionTerritory', 'ConfirmedIndianNational',\n       'ConfirmedForeignNational', 'Cured', 'Deaths']\ncovid_19_India=covid_19_India[features]\ndisplay(covid_19_India)","cbd96da2":"import numpy as np \nimport pandas as pd\nfrom datetime import date\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import Markdown\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, plot, iplot, download_plotlyjs\nimport plotly as ply\nimport pycountry\nimport folium \nfrom folium import plugins\nimport json\n\n\n%config InlineBackend.figure_format = 'retina'\ninit_notebook_mode(connected=True)\n\n# color pallette\ncnf = '#393e46' # confirmed - grey\ndth = '#ff2e63' # death - red\nrec = '#21bf73' # recovered - cyan\nact = '#fe9801' # active case - yellow\n\n# India Latitude Longitude\nIndia_Latitude = 21.7679\nIndia_Longitude = 78.8718 ","5f00de4f":"# Utility Functions\n\n'''Display markdown formatted output like bold, italic bold etc.'''\ndef formatted_text(string):\n    display(Markdown(string))\n\n\n'''highlight the maximum in a Series or DataFrame'''  \ndef highlight_max(data, color='red'):\n    attr = 'background-color: {}'.format(color)\n    if data.ndim == 1:  # Series from .apply(axis=0) or axis=1\n        is_max = data == data.max()\n        return [attr if v else '' for v in is_max]\n    else:  # from .apply(axis=None)\n        is_max = data == data.max().max()\n        return pd.DataFrame(np.where(is_max, attr, ''), index=data.index, columns=data.columns)\n    \n\n\n# Utility Plotting Functions\n\ndef plotDailyReportedCasesOverTime(df, country):\n    # confirmed\n    fig = px.bar(df, x=\"Date\", y=\"Confirmed\")\n    layout = go.Layout(\n title=go.layout.Title(text=\"Daily count of confirmed cases in \"+ country, x=0.5),\n        font=dict(size=14),\n        width=800,\n        height=500,\n        xaxis_title = \"Date\",\n        yaxis_title = \"Confirmed cases\")\n\n    fig.update_layout(layout)\n    fig.show()\n\n    # deaths\n    fig = px.bar(df, x=\"Date\", y=\"Deaths\")\n    layout = go.Layout(\n        title=go.layout.Title(text=\"Daily count of reported deaths in \"+ country, x=0.5),\n        font=dict(size=14),\n        width=800,\n        height=500,\n        xaxis_title = \"Date\",\n        yaxis_title = \"Deaths Reported\")\n\n    fig.update_layout(layout)\n    fig.show()\n\n    # recovered\n    fig = px.bar(df, x=\"Date\", y=\"Recovered\")\n    layout = go.Layout(\n        title=go.layout.Title(text=\"Daily count of recovered cases in \"+ country, x=0.5),\n        font=dict(size=14),\n        width=800,\n        height=500,\n        xaxis_title = \"Date\",\n        yaxis_title = \"Recovered Cases\")\n\n    fig.update_layout(layout)\n    fig.show()\n    \n# Cases over time\ndef scatterPlotCasesOverTime(df, country):\n    plot = make_subplots(rows=1, cols=3, subplot_titles=(\"Comfirmed\", \"Deaths\", \"Recovered\"))\n\n    subPlot1 = go.Scatter(\n                    x=df['Date'],\n                    y=df['Confirmed'],\n                    name=\"Confirmed\",\n                    line_color='orange',\n        opacity=0.8)\n\n    subPlot2 = go.Scatter(\n                    x=df['Date'],\n                    y=df['Deaths'],\n                    name=\"Deaths\",\n                    line_color='red',\n                    opacity=0.8)\n\n    subPlot3 = go.Scatter(\n                    x=df['Date'],\n                    y=df['Recovered'],\n                    name=\"Recovered\",\n                    line_color='green',\n                    opacity=0.8)\n\n    plot.append_trace(subPlot1, 1, 1)\n    plot.append_trace(subPlot2, 1, 2)\n    plot.append_trace(subPlot3, 1, 3)\n    plot.update_layout(template=\"ggplot2\", title_text = country + '<b> - Spread of the nCov Over Time<\/b>')\n\n    plot.show()","c3c3cdc0":"covid_19_India['Confirmed'] = covid_19_India['ConfirmedIndianNational'] + covid_19_India['ConfirmedForeignNational']\ncovid_19_India.rename(columns={'State\/UnionTerritory': 'State'}, inplace=True)\ndisplay(covid_19_India)","e0566d89":"statewise_cases = pd.DataFrame(covid_19_India.groupby(['State'])['Confirmed', 'Deaths', 'Cured'].max().reset_index())\nstatewise_cases[\"Country\"] = \"India\" # in order to have a single root node\nfig = px.bar(statewise_cases,x=\"Confirmed\", y=\"State\", title='Confirmed Cases', text='Confirmed', orientation='h', \n             width=16*(max(statewise_cases['Confirmed']) + 2), height=700, range_x = [0, max(statewise_cases['Confirmed']) + 2])\nfig.update_traces(marker_color='#0726ed', opacity=0.8, textposition='outside')\n\nfig.update_layout(plot_bgcolor='rgb(208, 236, 245)')\nfig.show()","2e6783b2":"date_wise_data = covid_19_India[[\"Date\",\"Confirmed\",\"Deaths\",\"Cured\"]]\ndate_wise_data['Date'] = date_wise_data['Date'].apply(pd.to_datetime, dayfirst=True)\ndate_wise_data","60f58827":"date_wise_data = date_wise_data.groupby([\"Date\"]).sum().reset_index()\n\nformatted_text('***Date wise data***')\ndate_wise_data","7ea1205b":"temp = date_wise_data.melt(id_vars=\"Date\", value_vars=['Cured', 'Deaths', 'Confirmed'],\n                 var_name='Case', value_name='Count')\n\nfig = px.area(temp, x=\"Date\", y=\"Count\", color='Case',title='Time wise cases analysis', color_discrete_sequence = [rec, dth, act])\nfig.show()\n\n","3acfc242":"statewise_cases = pd.DataFrame(covid_19_India.groupby(['State'])['Confirmed', 'Deaths', 'Cured'].max().reset_index())\nstatewise_cases[\"Country\"] = \"India\" # in order to have a single root node\nfig = px.treemap(statewise_cases, path=['Country','State'], values='Confirmed',\n                  color='Confirmed', hover_data=['State'],\n                  color_continuous_scale='RdBu')\nfig.show()","fbc38a7a":"import futher libraries","251f8133":"* Import libraries and initial setup:**","a4330fe9":"# State wise bar diagram of the confirmed cases(indian + foriegn cases):","bd102e7a":"# Covid-19 - India Reports\n # 2020 coronavirus pandemic in India\nThe first case of the 2019\u201320 coronavirus pandemic in India was reported on 30 January 2020, originating from China. As of 26 March 2020, the Indian Council of Medical Research and Ministry of Health and Family Welfare have confirmed a total of 646 cases, 42 recoveries, 1 migration and 10 deaths in the country. The infection rate of COVID-19 in India is reported to be 1.7, which is remarkably lower than in the worst affected countries.There are concerns that testing for the virus in India is being inadequately conducted and the need for ramping up the scale of testing is a necessity to understand the real scope of the number of people affected.","1dcd51c5":"# Date wise analysis","27e014c8":"# State wise analysis(Tree map)"}}