{"cell_type":{"1ae3c6a2":"code","50e4f24a":"code","35ac5253":"code","de30a64a":"code","76a6d4ce":"code","9d0b6787":"code","77fa4728":"code","7200b70c":"code","9ae1aa59":"code","bbb72ab3":"code","b80984b8":"code","63f7c976":"code","578f08b3":"code","648dab2b":"code","e0e1ccb0":"code","2ffdec62":"code","38ec1699":"code","bcb39c69":"code","c6b6dbaf":"code","93071a15":"code","e0c0ba7a":"code","edb33d5e":"code","fd98c8a5":"code","d33eb745":"code","b40f7e12":"code","f0cbfde6":"code","1f5d7a30":"code","5b89916e":"code","fbab81f1":"code","039eb3f2":"code","67bf9761":"code","11e3e106":"code","d72dcd55":"code","5ae664c7":"code","f05da77e":"code","a95c0224":"code","3f2e2d5b":"code","8ac8a730":"code","f4b3b214":"code","2b9a38f5":"code","cf517388":"code","32865de8":"code","f8811f94":"code","a03bfa0e":"code","df141bc6":"code","9179c345":"code","99b5db43":"code","a73ae7b4":"code","37baefff":"code","a8a6f209":"code","76652691":"code","5a96ad6d":"code","c691017f":"code","4950f6ed":"code","3fe9df58":"code","83d0a5e0":"code","65897ee7":"code","aa6eb158":"code","726238d6":"code","72285b48":"code","95a45da3":"code","1302b7cf":"code","3e8a798e":"code","06d43396":"code","a4ac2fcf":"code","eea337a8":"code","288889ed":"code","f31b2b5b":"code","31401d7b":"code","c07d042a":"code","7c459d35":"code","ee4eb8f0":"code","76533002":"code","aae04131":"code","8b136a24":"code","cac45942":"code","289bc53d":"code","0bd258cb":"code","4cca07d0":"code","ac0f265c":"code","70f84e84":"code","4904a24a":"code","54cc9bcf":"code","5462815e":"code","8e4f4380":"code","4a5b6eeb":"markdown","59d6f0a9":"markdown","952da5bb":"markdown","66a6e02b":"markdown","9fa42d8f":"markdown","808241a8":"markdown","349aabed":"markdown","e636a4c9":"markdown","d24f56ef":"markdown","ba379151":"markdown","c33d9719":"markdown","de548ab1":"markdown","5377ac7f":"markdown","f39274f4":"markdown","b953b8fa":"markdown","4da94017":"markdown"},"source":{"1ae3c6a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50e4f24a":"#libraries\nimport datetime\nimport numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nfrom sklearn.model_selection import train_test_split","35ac5253":"order = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")\nproduct=pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_products_dataset.csv\")","de30a64a":"order.head()","76a6d4ce":"order.isnull().sum()","9d0b6787":"plt.figure(figsize = (20,10))\nsns.heatmap(order.corr(), annot = True, cmap='winter')","77fa4728":"plt.figure(figsize = (20,7))\nsns.set_theme(style=\"darkgrid\")\n\nax = sns.countplot(x=\"order_item_id\", data=order, palette=\"Set3\", dodge=False)","7200b70c":"order['month'] = pd.DatetimeIndex(order['shipping_limit_date']).month","9ae1aa59":"order.head()","bbb72ab3":"plt.figure(figsize = (20,7))\nsns.set_theme(style=\"darkgrid\")\n\nax = sns.countplot(x=\"month\", data=order, palette=\"Set3\", dodge=False)","b80984b8":"order['day'] = pd.DatetimeIndex(order['shipping_limit_date']).day","63f7c976":"plt.figure(figsize = (20,7))\nsns.set_theme(style=\"darkgrid\")\n\nax = sns.countplot(x=\"day\", data=order, palette=\"Set3\", dodge=False)","578f08b3":"product","648dab2b":"product.index = product['product_id']","e0e1ccb0":"q1= order.join(product, on = ['product_id'], rsuffix ='_w')","2ffdec62":"q5=q1\nq1","38ec1699":"#function to return visual representation of top product by month \ndef top_product_by_month(month,name):\n  month1=q1.loc[q1['month'] == month]\n  plt.figure(figsize = (20,7))\n  sns.set_theme(style=\"darkgrid\")\n  top_colors = month1.product_category_name.value_counts()\n  top_colors[:10].plot(kind='barh')\n  plt.xlabel('No. of Products for '+name+' month');","bcb39c69":"top_product_by_month(1,\t\"January\")","c6b6dbaf":"top_product_by_month(2,\"February\")","93071a15":"top_product_by_month(3,\"March\")","e0c0ba7a":"top_product_by_month(4,\"April\")","edb33d5e":"top_product_by_month(5,'May')","fd98c8a5":"top_product_by_month(6,'June')","d33eb745":"top_product_by_month(7,'July')","b40f7e12":"top_product_by_month(8,'August')","f0cbfde6":"top_product_by_month(9,'September')","1f5d7a30":"top_product_by_month(10,'October')","5b89916e":"top_product_by_month(11,'November')","fbab81f1":"top_product_by_month(12,'December')","039eb3f2":"order_det = pd.read_csv('\/kaggle\/input\/brazilian-ecommerce\/olist_orders_dataset.csv')\norder_det\n\nreview_df = pd.read_csv('\/kaggle\/input\/brazilian-ecommerce\/olist_order_reviews_dataset.csv')\n\n","67bf9761":"order_det = pd.merge(order_det,review_df,on='order_id')\norder_det","11e3e106":"order_det['order_purchase_timestamp'] = pd.to_datetime(order_det['order_purchase_timestamp'])\norder_det['order_delivered_customer_date'] = pd.to_datetime(order_det['order_delivered_customer_date'])","d72dcd55":"order_det['time_delivered'] = order_det['time_delivered'] \/ np.timedelta64(1,'D')","5ae664c7":"order_det['time_delivered'] = order_det.time_delivered.astype(int,errors='ignore')","f05da77e":"order_det['time_delivered'] = order_det.time_delivered.astype(int,errors='ignore')","a95c0224":"order_det.sort_values(by='review_score',ascending=False)","3f2e2d5b":"sns.jointplot(x='review_score', y='time_delivered', data=order_det);","8ac8a730":"payment=pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_payments_dataset.csv\")","f4b3b214":"payment","2b9a38f5":"plt.figure(figsize = (20,7))\nsns.set_theme(style=\"darkgrid\")\n\nax = sns.countplot(x=\"payment_type\", data=payment, palette=\"Set3\", dodge=False)","cf517388":"plt.figure(figsize = (20,7))\nsns.set_theme(style=\"darkgrid\")\n\nax = sns.countplot(x=\"payment_installments\", data=payment, palette=\"Set3\", dodge=False)","32865de8":"plt.figure(figsize = (20,7))\nax = sns.barplot(x=\"payment_installments\", y=\"payment_value\", hue=\"payment_type\", data=payment)","f8811f94":"#sales by most sales money \ntop_sales = pd.DataFrame(q5.groupby('product_category_name').sum()['price'])\n\ntop_sales.sort_values(by=['price'], inplace=True, ascending=False)\n\ntop_sales = top_sales.head(10)\n\ntop_sales","a03bfa0e":"q5","df141bc6":"top_sales_by_count = pd.DataFrame(q5.groupby('product_category_name').count()['order_id'])\n\ntop_sales_by_count.sort_values(by=['order_id'], inplace=True, ascending=False)\n\ntop_sales_by_count = top_sales_by_count.head(10)\n\ntop_sales_by_count","9179c345":"plt.figure(figsize = (20,10))\nsns.heatmap(q1.corr(), annot = True, cmap='winter')","99b5db43":"q1['year'] = pd.DatetimeIndex(q1['shipping_limit_date']).year\nq1","a73ae7b4":"q1['month_year'] = q1['month'].astype('str') + '-' + q1['year'].astype('str')\nq1","37baefff":"prod_sales = pd.DataFrame(q1.groupby('month_year').sum()['price'].reset_index(name=\"price\"))\n\nprod_sales","a8a6f209":"prod_sales[['month', 'year']] = prod_sales['month_year'].str.split('-', 1, expand=True)\nprod_sales.describe()","76652691":"df=prod_sales\ndf['dateInt']=df['year'].astype(str) + df['month'].astype(str).str.zfill(2)\ndf['Date'] = pd.to_datetime(df['dateInt'], format='%Y%m')","5a96ad6d":"df['ds']=df['Date']\ndf['y']=df['price']\ndf","c691017f":"#implementation of algorithoms is taken from sklearn documentation\nfrom sklearn import linear_model\nfrom sklearn.metrics import mean_squared_error\nimport sklearn.metrics as sm\n\nX = prod_sales[['month','year']].astype(int)\nY = prod_sales['price'].astype(float)\nX_train, X_test, y_train, y_test = train_test_split(X, Y, random_state=1)\nX_test\nregr = linear_model.LinearRegression()\nregr.fit(X_train, y_train)\ny_pred = regr.predict(X_test)\ny_pred\nm=mean_squared_error(y_test, y_pred)\n\naccuracy=regr.score(X_test,y_test)\naccuracy\nprint(\"R2 score =\", round(sm.r2_score(y_test, y_pred), 2))","4950f6ed":"#https:\/\/analyticsweek.com\/content\/time-series-forecasting-with-prophet-in-python\/\n\n# df.columns = ['ds', 'y']\nP=df[['ds','y']]\nfrom fbprophet import Prophet\nmodel = Prophet()\nmodel.fit(P)","3fe9df58":"future = list()\nfor i in range(1, 13):\n\tdate = '2021-%02d' % i\n\tfuture.append([date])\nfuture = pd.DataFrame(future)\nfuture.columns = ['ds']\nfuture['ds']= pd.to_datetime(future['ds'])","83d0a5e0":"forecast = model.predict(future)\nforecast","65897ee7":"print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())","aa6eb158":"model.plot(forecast)\nfrom matplotlib import pyplot\npyplot.show()","726238d6":"!pip install apriori_python","72285b48":"from apriori_python import apriori","95a45da3":"df_order_items = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")","1302b7cf":"df_order_items.head(10)","3e8a798e":"list_item_groups = df_order_items.groupby('order_id')['product_id'].apply(list).reset_index(name=\"list\")    #group product_id(s) to a list\nlist_item_groups2 = df_order_items.groupby('order_id').agg({'order_item_id': 'max'}).reset_index()          #group by max item count to remove single item groups\ndf_apriori = pd.merge(list_item_groups, list_item_groups2, on='order_id')                                   #merge both dataframe on order_id\ndf_apriori","06d43396":"df_apriori = df_apriori[df_apriori.order_item_id != 1]          #drop rows with 1 item per order otherwise takes too long to run\ndf_apriori","a4ac2fcf":"set_apriori = df_apriori['list'].to_list()                  #generate nested list for from the product_id lists to pass to algorithm\nset_apriori[:10]","eea337a8":"freqItemSet, rules = apriori(set_apriori, minSup=0.0005, minConf=0.1)         #set support and confidence values to generate rules\nprint(rules) ","288889ed":"#rename columns and clean the data\ndf_rules = pd.DataFrame(rules)\ndf_rules = df_rules.rename(columns={0: 'Item 1', 1: 'Item 2', 2: 'confidence'})\ndf_rules['Item 1'] = df_rules['Item 1'].astype(str)\ndf_rules['Item 2'] = df_rules['Item 2'].astype(str)\ndf_rules['Item 1'] = df_rules['Item 1'].str.replace(r\"[\\\"\\',\\{\\}]\", '')\ndf_rules['Item 2'] = df_rules['Item 2'].str.replace(r\"[\\\"\\',\\{\\}]\", '')\ndf_rules.sort_values('confidence', ascending=False)","f31b2b5b":"order_review = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_reviews_dataset.csv\")\norder_items = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")","31401d7b":"order_review.head()","c07d042a":"from wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color = 'white',\n        max_words = 200,\n        max_font_size = 40, \n        scale = 3,\n        random_state = 42\n    ).generate(str(data))\n\n    fig = plt.figure(1, figsize = (20, 20))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize = 20)\n        fig.subplots_adjust(top = 2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()","7c459d35":"show_wordcloud(order_review['review_comment_message'])","ee4eb8f0":"import re\nimport nltk\nfrom nltk import word_tokenize\nfrom nltk.corpus import stopwords\nfrom wordcloud import WordCloud,STOPWORDS\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer","76533002":"#!pip install google-trans-new","aae04131":"import google_trans_new\nfrom google_trans_new import google_translator\ntranslator = google_translator()\ntranslate_text = translator.translate('estipulado, adorei',lang_tgt='en',lang_src='pt' )\nprint(translate_text)","8b136a24":"order_review.isnull().sum()","cac45942":"review_comment_title = order_review['review_comment_title']\nreview_df = order_review.drop(['review_comment_title'],axis=1)\n\n#dropping NaN\nreview_df = review_df.dropna()\nreview_comment_title = review_comment_title.dropna()\n\nreview_df = review_df.reset_index(drop=True)\nreview_df","289bc53d":"review_comment_title","0bd258cb":"#We will remove the stopwords (ex- I,me,my,the,there etc) from the reviews, using regular expressions\nnltk.download('stopwords')\ncomments = []\nstop_words = set(stopwords.words('portuguese'))\nstop_words","4cca07d0":"nltk.download('punkt')\nfor words in review_df['review_comment_message']:\n  only_letters = re.sub('[^a-zA-Z]',' ',words)\n  tokens = nltk.word_tokenize(only_letters)\n  lower_case = [l.lower() for l in tokens]\n  filtered_texts = list(filter(lambda l:l not in stop_words,lower_case))\n  comments.append(' '.join(filtered_texts))","ac0f265c":"comments #clean comments","70f84e84":"show_wordcloud(comments)","4904a24a":"coeff = CountVectorizer(ngram_range=(3,3))\ncounts = coeff.fit_transform(comments)\ntrigrams = pd.DataFrame(counts.sum(axis=0),columns=coeff.get_feature_names()).T.sort_values(0,ascending=False).head(500) #all the trigrams cuases to terminate the API load, so we will only take first 500\ntrigrams = trigrams.reset_index()\ntrigrams.rename(columns={'index':'Trigrams',0:'frequency'},inplace=True)\ntrigrams['english_translation'] = trigrams['Trigrams'].apply(translator.translate)","54cc9bcf":"trigrams","5462815e":"trigrams.head(50)","8e4f4380":"plt.figure(figsize=(10,5));\nsns.countplot(x='review_score', data=order_review, color='red', alpha=0.75)\nsns.countplot(x='review_score', data=review_df, color='blue', alpha=0.5)","4a5b6eeb":"This wordcloud is much more sophisticated than the one before. But it doesnot mean much if we do not understand Portuguese. So we will now translate the comments to English for better understanding.","59d6f0a9":"Q8) How do the customer review affect sales?","952da5bb":"#Q5)Descriptive  analysis: What sells most on this e-commerce site?","66a6e02b":"as we can , we can not use LinearRegression on this purpose because veriables are not linearly related ,\n\nbut we can use Prophet algotithom , a facebook developed algorithom to predict or forecast future observation . in our case is future sales","9fa42d8f":"# Q7) Which products are likely to be bought together?","808241a8":"Q1 )Exploratory analysis : Is there any significant trend in sales based on any particular season, months or days?","349aabed":"From this plot, we can see that there are more 1-star reviews than 5-stars while considering delivery time. So the longer it takes to deliver the lower the review scores would be.","e636a4c9":"For this probelm we are using Apriori algorithm. The algorithm is used for identifying frequent item sets and generating association rules based on that.\nPyPi package: https:\/\/pypi.org\/project\/apriori-python\/","d24f56ef":"Q3) How efficient is the delivery service, is there any way to improve it?","ba379151":"Looking through the dataframe, we were able to understand better about the unhappy comments of displeased customers. These comments include : 'I did not recieve the product', 'I want money back', 'so far nothing'. They are mostly complaints about getting incomplete delivery or receiving defective\/wrong products. By far, these were the major complaints of unhappy customers but we have also saw a huge amount of satisfactory comments among other reviews.","c33d9719":"Q4. Descriptive analysis: What is the most popular payment method among customers?","de548ab1":"In above countplot, we can notice that about 40% of the 5 star reviewers gave reviews on their purchase while 60% didn't. Again for 1-star reviewers almost 80% of them gave reviews. So we can conclude that customer tend to give reviews when they are displeased with the purchase.","5377ac7f":"First we need to get tri-grams for simpler translation.","f39274f4":"Above wordcloud is not usable for analysis as it contains irrelavant elements such as the column name, types etc. So we will now clean the messy data for cleaner visualization.","b953b8fa":"# Q6)Predictive analysis :  What can be the future sales growth rate?","4da94017":"Q2) Exploratory analysis : Which product category mostly sells on which months?"}}