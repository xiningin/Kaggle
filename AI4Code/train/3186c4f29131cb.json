{"cell_type":{"6e8dfa9b":"code","94f2bab9":"code","6ccfb4f7":"code","b40da3aa":"code","e37392a6":"code","4df6a5ec":"code","49dffbbb":"code","0edcd69b":"code","85002324":"code","3460c819":"code","4bea76a7":"code","2c38d694":"code","7d982eeb":"code","244798b7":"code","78f9dfb3":"code","a38638db":"code","9b7f994e":"code","1f7a7ce6":"code","d32f148e":"code","da432c19":"code","ddf2aff4":"code","8d29c258":"code","7c2ba128":"code","523ed1ed":"code","2e3469d7":"code","2d3293df":"code","ac3f814c":"code","5d373810":"code","eb3a3df9":"code","7534664c":"code","366a7716":"code","984d119d":"code","5d991f99":"code","c0580854":"code","96d97c9b":"markdown","fb67f42f":"markdown","815a20f0":"markdown","907bb597":"markdown"},"source":{"6e8dfa9b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","94f2bab9":"data = pd.read_csv('..\/input\/insurance.csv')","6ccfb4f7":"data.info","b40da3aa":"data.corr()\n","e37392a6":"# correlation map\nf,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","4df6a5ec":"data.columns","49dffbbb":"data.describe()","0edcd69b":"data.head(16)","85002324":"#line plot\n\ndata.age.plot(kind= 'line', color = 'g', label = 'age', linewidth=1, alpha=0.5, grid= True , linestyle='-.' )\ndata.bmi.plot(color = 'r', label = 'bmi', linewidth=1, alpha=0.5, grid= True, linestyle=':' )\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('age of bmi')\nplt.show()","3460c819":"# scatter plot\n# x=age y=charges\n\ndata.plot(kind='scatter', x = 'age', y='charges', alpha=0.5, color='b')\nplt.xlabel('age')\nplt.ylabel('charges')\nplt.title('medical cost by age')\n","4bea76a7":"# histogram\ndata.age.plot(kind='hist', bins=50, figsize=(10,10))\nplt.show()","2c38d694":"data.age.plot(kind = 'hist',bins = 50)\nplt.clf()\n\n","7d982eeb":"mean_age = np.mean(data.age)\nprint(\"mean_age=\",mean_age)\nmean_medical_charges=data.charges.mean()\nprint(\"mean_medical_charges=\",mean_medical_charges)","244798b7":"# creta dictionry\ndictionary = {'region':'southwest','northwest':'southeast'}\nprint(dictionary.keys())\nprint(dictionary.values())","78f9dfb3":"dictionary['region'] = \"izmir\"\nprint(dictionary)\ndictionary['akdeniz'] = \"antalya\"\nprint(dictionary)\ndel dictionary['northwest']\nprint(dictionary)\nprint('region' in dictionary)\nprint('antalya' in dictionary) # why value doesn't see\nprint('15' in dictionary)\ndictionary.clear()\nprint(dictionary)","a38638db":"data = pd.read_csv('..\/input\/insurance.csv')","9b7f994e":"data.describe()","1f7a7ce6":"(data['age']\/2).describe()","d32f148e":"series = data['bmi']\ntype(series)\nseries1 = data['region']\nprint(type(series1))\ndata_frame = data[['region']]\nprint(type(data_frame))","da432c19":"print(5>3)\nprint(4<=4)\nprint(3!=2)\nprint(True and False)\nprint(True or False)","ddf2aff4":"x = data['age']<mean_age\ndata[x]","8d29c258":"data[np.logical_and(data['age']<mean_age,data['bmi']<30)]\n# How to select 3 parameters?","7c2ba128":"data[np.logical_or(data['age']<mean_age,data['bmi']<30)]","523ed1ed":"\ndata[(data['age']<20) & (data['smoker']==\"yes\")]","2e3469d7":"i=0\nwhile i !=5:\n    print('i is:',i)\n    i +=1\nprint(i,'is equal to 5')","2d3293df":"list_age = list(data['age'])\nage_21=21\ni=0\nfor age_21 in list_age:\n    if (age_21==21):\n        i=i+1\n\nprint('age_21:',age_21)","ac3f814c":"# smoker and no smoker\nd=0\na=0\nfor each in data.smoker:\n    if (each==\"yes\"):\n        d=d+1\n    else:\n        a=a+1\n        continue\nprint(\"smoker:\",d)\nprint(\"no_smoker:\",a)\n\n# children and no children\nc=0\nb=0\nfor each in data.children:\n    if (each==0):\n        b=b+1\n    else:\n        c=c+1\n        continue\nprint(\"children:\",c)\nprint(\"no_children:\",b)","5d373810":"#for index,value in enumerate(list_age):\n #   print(index,\":\",value)\n#print()","eb3a3df9":"print(dictionary)\ndictionary = {'spain':'madrid','turkey':'antalya','ege':'izmir'}\nfor key,value in dictionary.items():\n    print(key,\":\",value)\nprint()","7534664c":"for index,value in data[['bmi']][0:3].iterrows():\n    print(index,\":\",value)\nfor index,value in data[['sex']][5:7].iterrows():\n    print(index,\":\",value)","366a7716":"data['children'].value_counts()","984d119d":"# Number of each type of column\ndata.dtypes.value_counts()","5d991f99":"# Number of unique classes in each object column\ndata.select_dtypes('object').apply(pd.Series.nunique, axis = 0)","c0580854":"data.groupby(['region'])[['bmi']].agg(['mean','median','count'])","96d97c9b":"**Medical Cost Personal Datasets**\n\n**Before Starting:**\n\nThis is my first kernel. I'm ready for any kind of interpretation you can make of it. to improve myself, please convey your appreciation and criticism. I'm sorry that the English translation is a bit bad.\n\n**Introduction:**\n\nMedical Cost Personal Datasets; it was formed by the linear data generated by the personnel from the related insurance companies. I will evaluate the medical costs of the personnel in different parameters.\n","fb67f42f":"**PANDAS**","815a20f0":"**Introduction:**\n\n\n**General Information:**","907bb597":"I wanted to provide you with parameters that could help you interpret the data."}}