{"cell_type":{"546af5bc":"code","b3efadff":"code","238a9cc6":"code","ed055390":"code","73509cf2":"code","a81cccb9":"code","9c6158d5":"code","61b6773e":"markdown","45a7361b":"markdown","d85d244e":"markdown","ec6e1637":"markdown","f03aabbe":"markdown","f503aec7":"markdown","5990c061":"markdown"},"source":{"546af5bc":"from numpy import asarray\nfrom numpy import mean\nfrom numpy import std\nfrom sklearn.datasets import make_regression\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nfrom lightgbm import LGBMClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedKFold\nfrom matplotlib import pyplot","b3efadff":"# define dataset\nX, y = make_regression(n_samples=1000, n_features=10, n_informative=5, random_state=1)","238a9cc6":"# evaluate the model\nmodel = XGBRegressor(objective='reg:squarederror')\ncv = RepeatedKFold(n_splits=10, n_repeats=3, random_state=1)\nn_scores = cross_val_score(model, X, y, scoring='neg_mean_absolute_error', cv=cv, n_jobs=-1, error_score='raise')\nprint('MAE: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))\n# fit the model on the whole dataset\nmodel = XGBRegressor(objective='reg:squarederror')\nmodel.fit(X, y)\n# make a single prediction\nrow = [2.02220122, 0.31563495, 0.82797464, -0.30620401, 0.16003707, -1.44411381, 0.87616892, -0.50446586, 0.23009474, 0.76201118]\nrow = asarray(row).reshape((1, len(row)))\nyhat = model.predict(row)\nprint('Prediction: %.3f' % yhat[0])","ed055390":"# evaluate the model\nmodel = LGBMClassifier()\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\nn_scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))\n# fit the model on the whole dataset\nmodel = LGBMClassifier()\nmodel.fit(X, y)\n# make a single prediction\nrow = [[2.56999479, -0.13019997, 3.16075093, -4.35936352, -1.61271951, -1.39352057, -2.48924933, -1.93094078, 3.26130366, 2.05692145]]\nyhat = model.predict(row)\nprint('Prediction: %d' % yhat[0])","73509cf2":"# evaluate the model\nmodel = CatBoostClassifier(verbose=0, n_estimators=100)\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\nn_scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))\n# fit the model on the whole dataset\nmodel = CatBoostClassifier(verbose=0, n_estimators=100)\nmodel.fit(X, y)\n# make a single prediction\nrow = [[2.56999479, -0.13019997, 3.16075093, -4.35936352, -1.61271951, -1.39352057, -2.48924933, -1.93094078, 3.26130366, 2.05692145]]\nyhat = model.predict(row)\nprint('Prediction: %d' % yhat[0])","a81cccb9":"# fit the model on the whole dataset\nmodel = HistGradientBoostingClassifier()\nmodel.fit(X, y)\n# make a single prediction\nrow = [[2.56999479, -0.13019997, 3.16075093, -4.35936352, -1.61271951, -1.39352057, -2.48924933, -1.93094078, 3.26130366, 2.05692145]]\nyhat = model.predict(row)\nprint('Prediction: %d' % yhat[0])","9c6158d5":"# evaluate the model\nmodel = GradientBoostingClassifier()\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\nn_scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))\n# fit the model on the whole dataset\nmodel = GradientBoostingClassifier()\nmodel.fit(X, y)\n# make a single prediction\nrow = [[2.56999479, -0.13019997, 3.16075093, -4.35936352, -1.61271951, -1.39352057, -2.48924933, -1.93094078, 3.26130366, 2.05692145]]\nyhat = model.predict(row)\nprint('Prediction: %d' % yhat[0])","61b6773e":"# XGBoost","45a7361b":"# Sklearn Regressions","d85d244e":"# CatBoost","ec6e1637":"# Histogram","f03aabbe":"# Dataset","f503aec7":"# Light GBM","5990c061":"# GradientBoosting"}}