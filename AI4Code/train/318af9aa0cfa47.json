{"cell_type":{"35d90280":"code","260cac78":"code","58e69fe5":"code","0b1ff2c3":"code","ad2a404c":"code","73be61b6":"code","dff74b70":"code","22c0d91a":"code","d9d43c62":"code","f64d8654":"code","1238f4d7":"code","1493c486":"code","a5a686d5":"code","5b5a069a":"code","0d8e9617":"markdown"},"source":{"35d90280":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","260cac78":"import pandas as pd\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nimport seaborn as sns","58e69fe5":"df_train = pd.read_csv(\"..\/input\/random-linear-regression\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/random-linear-regression\/test.csv\")","0b1ff2c3":"# Check for any null Values for train Dataset\ndf_train.isnull().sum()","ad2a404c":"# Check for any null values for test Dataset\ndf_test.isnull().sum()","73be61b6":"clean_df_train = df_train.dropna()\nclean_df_train.isnull().sum()","dff74b70":"X_train = np.array(clean_df_train.iloc[:,:-1])\nY_train = np.array(clean_df_train.iloc[:,1])\nprint(X_train.shape)\nprint(Y_train.shape)","22c0d91a":"X_test = np.array(df_test.iloc[:,:-1])\nY_test = np.array(df_test.iloc[:,1])\nprint(X_test.shape)\nprint(Y_test.shape)","d9d43c62":"LR = LinearRegression()","f64d8654":"LR.fit(X_train,Y_train)","1238f4d7":"y_pred = LR.predict(X_test)","1493c486":"RMSE = np.sqrt(mean_squared_error(Y_test,y_pred))\nRMSE","a5a686d5":"accuracy = LR.score(X_test,Y_test)\naccuracy ","5b5a069a":"sns.jointplot(clean_df_train.x,clean_df_train.y,kind='reg')","0d8e9617":"The Root mean square value is the square root of distance between actual points & points on the line.\nThe lesser the value, the leser the distance"}}