{"cell_type":{"0c4b8e1f":"code","cda1cad0":"code","7177b3ee":"code","39b06850":"code","22ff1a40":"code","881658f8":"code","e0f01ea0":"code","c999e4c3":"code","f4002e9d":"code","3e78cf02":"code","3baa4119":"code","ff0cf241":"code","cf2add03":"code","a7b0789a":"code","27f7b791":"code","c7d3167f":"code","ea9a4063":"code","3905fb78":"code","e29d4594":"code","df8fb92a":"markdown","318a22a3":"markdown","b4fb4552":"markdown","989897b0":"markdown"},"source":{"0c4b8e1f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cda1cad0":"dataset = pd.read_csv('\/kaggle\/input\/salary-data\/Salary_Data.csv')\ndataset","7177b3ee":"dataset.head()","39b06850":"dataset.shape","22ff1a40":"X = dataset.drop(['Salary'], axis=True)\nY = dataset['Salary']","881658f8":"# now split the data\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.2,random_state = 42)","e0f01ea0":"X_train.shape,X_test.shape,Y_train.shape,Y_test.shape","c999e4c3":"# visualize the data\nimport seaborn as sns\nsns.pairplot(dataset)","f4002e9d":"# visualize the train data\nplt.plot(X_train,Y_train,'r.',label='train-data')\nplt.xlabel('X_train')\nplt.ylabel('Y_train')\nplt.legend()\nplt.show()","3e78cf02":"# visualize only test data\nplt.plot(X_test,Y_test,'g.',label='test-data')\nplt.xlabel('X_test')\nplt.ylabel('Y_test')\nplt.legend()\nplt.show()","3baa4119":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, Y_train)","ff0cf241":"y_pred = regressor.predict(X_test).round(1)\ncalculation = pd.DataFrame(np.c_[Y_test,y_pred], columns = ['Original Salary','Predicted Salary'])\ncalculation","cf2add03":"plt.scatter(X_train,Y_train,color='red')\nplt.plot(X_train,regressor.predict(X_train),color='blue')\nplt.title('Salary Vs Experience (Train set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","a7b0789a":"plt.scatter(X_test,Y_test,color='red')\nplt.plot(X_test, regressor.predict(X_test), color='blue')\nplt.title('Salary Vs Experience (Test set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","27f7b791":"import pickle","c7d3167f":"with open('model_pickle','wb') as f:\n    pickle.dump(regressor,f)","ea9a4063":"with open('model_pickle','rb') as f:\n    mp=pickle.load(f)","3905fb78":"mp.predict([[11.5]])","e29d4594":"from sklearn.externals import joblib","df8fb92a":"# **Visualising the training set result**","318a22a3":"# **Training Simple Linear Regression Model**","b4fb4552":"# **Visualising test set results**","989897b0":"**PREDICTING THE TEST SET RESULT**"}}