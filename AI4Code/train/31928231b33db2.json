{"cell_type":{"00e37eea":"code","380dee3f":"code","f2331d09":"code","3fd04ad6":"code","796a08cd":"code","020285e3":"code","506b07a7":"code","1b9f9e64":"code","132a1bb5":"code","9c7b6236":"code","07059803":"code","a247288c":"code","474d2860":"code","c45919b6":"code","ad44bd79":"code","461f8468":"code","9d1b75b2":"code","017f20ca":"code","e6418a74":"code","b4163afc":"code","6fa91a6f":"code","6b009ea8":"code","68d2c7f4":"code","fbd1aa4d":"code","75693bd4":"markdown","7f763fa8":"markdown","a2b9e952":"markdown","85a86ef6":"markdown","e1c17d3f":"markdown","3a6a4101":"markdown"},"source":{"00e37eea":"from subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/instacart-market-basket-analysis\"]).decode(\"utf8\"))","380dee3f":"import os\nimport zipfile\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/instacart-market-basket-analysis\/'):\n    for filename in filenames:        \n        archive = zipfile.ZipFile(os.path.join(dirname, filename), mode='r')\n        archive.extractall(path=\"\/kaggle\/working\")\n        archive.close()\n\nprint(check_output([\"ls\", \"..\/working\"]).decode(\"utf8\"))","f2331d09":"import pandas as pd\n\norder_products_train = pd.read_csv(\"..\/working\/order_products__train.csv\")\norder_products_prior = pd.read_csv(\"..\/working\/order_products__prior.csv\")\norders = pd.read_csv(\"..\/working\/orders.csv\")\nproducts = pd.read_csv(\"..\/working\/products.csv\")\naisles = pd.read_csv(\"..\/working\/aisles.csv\")\ndepartments = pd.read_csv(\"..\/working\/departments.csv\")\nsample_submission = pd.read_csv(\"..\/working\/sample_submission.csv\")\n\nprint('*** df \uc0dd\uc131 \uc644\ub8cc ***')","3fd04ad6":"orders","796a08cd":"orders[orders['order_id']==1]","020285e3":"order_products_train[order_products_train['order_id']==1]","506b07a7":"orders.eval_set.unique()","1b9f9e64":"filter_orders = orders[(orders['eval_set'] == 'train') | (orders['eval_set'] == 'prior')]\nfilter_orders.eval_set.unique()","132a1bb5":"print(filter_orders.order_id.nunique())\norder_products_train.order_id.nunique() + order_products_prior.order_id.nunique() ","9c7b6236":"merged_products = pd.merge(products, aisles, on='aisle_id', how='left')\nmerged_products = pd.merge(merged_products, departments, on='department_id', how='left')\nmerged_products = merged_products.reindex(columns=['product_id','product_name','aisle_id','aisle','department_id','department'])\nmerged_products.head()","07059803":"train_prior = pd.concat([order_products_train, order_products_prior])\ntrain_prior","a247288c":"train_prior = pd.merge(train_prior, merged_products, on='product_id', how='left')\ntrain_prior","474d2860":"del merged_products","c45919b6":"print(filter_orders.shape)\ntrain_prior.shape","ad44bd79":"merged_df = train_prior.merge(filter_orders, left_on='order_id', right_on='order_id', how='outer')\nmerged_df","461f8468":"del order_products_train\ndel order_products_prior\ndel orders\ndel products\ndel aisles\ndel departments\ndel sample_submission","9d1b75b2":"print(merged_df.isnull().sum())\nmerged_df.info()","017f20ca":"merged_df.order_id.nunique()","e6418a74":"# \uba54\ubaa8\ub9ac \ubb38\uc81c\ub85c \uacc4\uc18d \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uc5ec, \uc6b0\uc120 1\/3 \ub370\uc774\ud130\ub9cc \ud65c\uc6a9\n\nmerged_df = merged_df.head(10000000)","b4163afc":"filtered = merged_df.drop(['add_to_cart_order','reordered','user_id','eval_set','order_number','order_dow','order_hour_of_day','days_since_prior_order','product_id','product_name','aisle_id','aisle','department_id'], axis = 1)\nfiltered","6fa91a6f":"onehot_filtered = pd.get_dummies(filtered)\nonehot_filtered","6b009ea8":"onehot_filtered.groupby(by=['order_id']).sum()\nonehot_filtered","68d2c7f4":"df = onehot_filtered.corr()\ndf","fbd1aa4d":"%matplotlib inline \nimport matplotlib.pyplot as plt \nimport seaborn as sns   \nimport numpy as np\n\n# \uadf8\ub9bc \uc0ac\uc774\uc988 \uc9c0\uc815\nfig, ax = plt.subplots( figsize=(25,20) )\n\n# \uc0bc\uac01\ud615 \ub9c8\uc2a4\ud06c\ub97c \ub9cc\ub4e0\ub2e4(\uc704 \ucabd \uc0bc\uac01\ud615\uc5d0 True, \uc544\ub798 \uc0bc\uac01\ud615\uc5d0 False)\nmask = np.zeros_like(df, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# \ud788\ud2b8\ub9f5\uc744 \uadf8\ub9b0\ub2e4\nsns.heatmap(df, \n            cmap = 'RdYlBu_r', \n            annot = True,   # \uc2e4\uc81c \uac12\uc744 \ud45c\uc2dc\ud55c\ub2e4\n            mask=mask,      # \ud45c\uc2dc\ud558\uc9c0 \uc54a\uc744 \ub9c8\uc2a4\ud06c \ubd80\ubd84\uc744 \uc9c0\uc815\ud55c\ub2e4\n            linewidths=.5,  # \uacbd\uacc4\uba74 \uc2e4\uc120\uc73c\ub85c \uad6c\ubd84\ud558\uae30\n            cbar_kws={\"shrink\": .5},# \uceec\ub7ec\ubc14 \ud06c\uae30 \uc808\ubc18\uc73c\ub85c \uc904\uc774\uae30\n            vmin = -1,vmax = 1   # \uceec\ub7ec\ubc14 \ubc94\uc704 -1 ~ 1\n           )  \nplt.show()","75693bd4":"## Merge data set : order_products_train + order_products_prior","7f763fa8":"## \uc0c1\uad00\uacc4\uc218","a2b9e952":"## Merge data set : filter_orders + merged_products","85a86ef6":"## Merge data set : train_prior + merged_products","e1c17d3f":"## Merge data set : products + aisles + departments","3a6a4101":"## \ubd88\ud544\uc694\ud55c \uce7c\ub7fc \uc81c\uac70 "}}