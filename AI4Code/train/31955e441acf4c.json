{"cell_type":{"e3fcb200":"code","9ccf192e":"code","c9e3479a":"code","9e1a93e6":"code","4dca364d":"code","894c5dc4":"code","edde884d":"code","09e22592":"code","b25eb2e3":"code","a63f07ec":"code","02c0b4b1":"code","40327489":"code","deb903dc":"code","3519e821":"code","20a90387":"code","221145db":"code","c4d34d58":"code","f135b52d":"code","063252be":"code","420a0f88":"code","ba04adc1":"code","4405dbd3":"code","966430c6":"code","20ebbdfc":"code","da9b6893":"code","5250dd08":"code","54071a72":"code","767839b1":"code","e4c30b25":"code","3219eb7d":"code","109cd79d":"code","7f1a8678":"code","c143c96f":"code","261e28e7":"code","6b9f1cc5":"code","866f7090":"code","81e1fe68":"code","290071f4":"code","5690fe9d":"code","fe4167a7":"code","efee5314":"code","4b46242e":"code","972c403e":"code","f68432be":"code","aa5c0b8a":"code","1feead2a":"code","cc7dd3d8":"code","0c479c5d":"code","509d4cee":"code","ddb9fd55":"code","be3b2142":"code","db59e846":"code","91282c77":"code","9bc7aa9d":"code","5fe27cd2":"code","c16c7e36":"code","efe32f40":"code","87e7781b":"code","7a414836":"code","de232993":"code","71186d37":"code","4a23ad6e":"code","f0f21bb2":"code","2a94a65b":"code","7b92292e":"code","29a49497":"code","b9dc9b67":"code","e723d3f5":"code","9555d9f7":"code","4e6fcd71":"code","bfcaf25d":"code","53577f08":"code","63308785":"code","1dbe8306":"code","22741c0b":"code","d41b093e":"code","ff0a533c":"code","9914101c":"code","aeefebf3":"code","e7624a79":"code","89af011d":"code","745cbd71":"code","40a6ecaf":"code","da5d0526":"code","bf36a5a5":"code","5100f26c":"code","3cca9e5e":"code","20a0e6a0":"code","2b13d145":"code","b611e3e3":"code","2d9bb47e":"code","ab2507a7":"code","b335f7a6":"code","1f00f1bb":"code","cc5862c3":"code","26436345":"code","994e84ea":"code","b1dee2a8":"code","1ef0d21a":"code","46306d64":"code","fb36f5c3":"code","6636e6ed":"code","7107b941":"code","cf6f3828":"code","cf19e9a2":"code","b0d45acc":"code","050d8233":"code","037937d3":"code","59fdf70a":"code","2d7cfb77":"code","38d2f28e":"code","16306676":"code","b46cdc08":"code","dd116eb8":"code","c2287192":"code","f71a773a":"code","9227eee3":"code","19755bc4":"code","505bb5f6":"code","ff84be15":"code","df182fc9":"code","19441c2d":"code","8984e261":"code","00c1ad66":"code","3ac0be8b":"markdown","8851dbb2":"markdown","71c79397":"markdown","f8499727":"markdown","ab992ed7":"markdown","82d82bb2":"markdown","a233d330":"markdown","25818c84":"markdown","eaa607b2":"markdown","9142b553":"markdown","e6d87409":"markdown","0f9841dd":"markdown","37de7e53":"markdown","9e84953c":"markdown","190d292f":"markdown","8ea64f90":"markdown","40518ec5":"markdown","c78913c0":"markdown","ae195cc8":"markdown","878841be":"markdown","f7449eb1":"markdown","2a9c9a51":"markdown","e4251215":"markdown","27eb7665":"markdown","588abaac":"markdown","cba62f0f":"markdown","ebbeb774":"markdown","c0d28373":"markdown","b0bbe681":"markdown","39414fd7":"markdown","cf7bcc11":"markdown","02fc913f":"markdown","d63be497":"markdown","3578d676":"markdown","7d07d111":"markdown","d4408b78":"markdown","c2fd6b7c":"markdown","ec81a64e":"markdown","8e7184cb":"markdown","cc4a3cad":"markdown","761be927":"markdown","a61bc13e":"markdown","68a5f501":"markdown","b587e00b":"markdown","71a24908":"markdown","9be72c55":"markdown","a78d1bad":"markdown","15da744d":"markdown","6c2ed395":"markdown","db4dc3ec":"markdown","2b5fb18b":"markdown","24459f48":"markdown","6b6d5c47":"markdown","1bf3d33b":"markdown","79ff337c":"markdown","b7598427":"markdown","47e48488":"markdown","dd5637e4":"markdown","344449d5":"markdown","8c8d982d":"markdown","6ccfcf8c":"markdown","cc243e3e":"markdown","c91cf7c8":"markdown","aaaf2713":"markdown","25ae1325":"markdown","e4c4e9a6":"markdown","c4c51d52":"markdown","d4c2b95d":"markdown","da9442d0":"markdown","05f20183":"markdown","33394782":"markdown","ffc24b05":"markdown","2108867a":"markdown","075b7f8f":"markdown","0c1c6840":"markdown","fdd0fefc":"markdown","c9e250f6":"markdown","6a989274":"markdown","b9f84f1f":"markdown","ad50e8d7":"markdown","5f42bc09":"markdown","619216af":"markdown","a9325097":"markdown","25655deb":"markdown","3b48fc49":"markdown","d10efd5a":"markdown","178641d0":"markdown","5804fe96":"markdown","5fab4a8c":"markdown","23ea8caf":"markdown","69dbb2d6":"markdown","bbb93fea":"markdown","a5570cc6":"markdown","ffe8c478":"markdown","e8d97f70":"markdown","331c7240":"markdown","4903e841":"markdown","9053d28d":"markdown","3a8d860f":"markdown","c76c03f3":"markdown","b702a495":"markdown","71de1031":"markdown","e6fff524":"markdown"},"source":{"e3fcb200":"#Data Analysis & Data wrangling\nimport numpy as np\nimport pandas as pd\nimport missingno as mn\nfrom random import sample\nfrom numpy.random import uniform\nfrom math import isnan\n\n#Visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\n%matplotlib inline\n\n#Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\nfrom IPython.display import display, HTML\ninit_notebook_mode(connected=True)\n\n# ML Libraries \nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.neighbors import NearestNeighbors\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","9ccf192e":"import warnings\nwarnings.filterwarnings('ignore')","c9e3479a":"pd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\npd.set_option('display.expand_frame_repr', False)","9e1a93e6":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4dca364d":"ngo = pd.read_csv('\/kaggle\/input\/help-international\/Country-data.csv')\nngo.head()","894c5dc4":"ngo.tail()","edde884d":"#database dimension\nprint(\"Database dimension     :\",ngo.shape)\nprint(\"Database size          :\",ngo.size)","09e22592":"#checking numerical columns statistics\nngo.describe()","b25eb2e3":"#info about the column types etc. \nngo.info()","a63f07ec":"# Checking for duplicates rows of data\nngo_duplicate = ngo.copy()\nngo_duplicate.drop_duplicates(subset=None, inplace=True)\nngo_duplicate.shape","02c0b4b1":"# Null Value Analysis\nmn.matrix(ngo)","40327489":"# Column wise null values\nngo.isnull().sum()","deb903dc":"#row wise null values\n(ngo.isnull().sum(axis=1) * 100 \/ len(ngo)).value_counts(ascending=False)","3519e821":"# Function for plotting bar graph for eachnumeric features, Univariate Analysis\ndef univariate_bar(col,ngo,color,place):\n    \n    if col == 'child_mort':\n        word = \"Child Mortality Rate\"\n    if col == 'exports':\n        word = \"Export\"\n    if col == 'health':\n        word = \"Health\"\n    if col == 'imports':\n        word = \"Imports\"\n    if col == 'income':\n        word = \"Income\"   \n    if col == 'inflation':\n        word = \"Inflation\"\n    if col == 'life_expec':\n        word = \"Life Expectation\"\n    if col == 'total_fer':\n        word = \"Fertility Rate\"\n    if col == 'gdpp':\n        word = \"GDPP\"        \n    \n    fig = go.Figure()\n    # Add Traces\n\n    fig.add_trace(\n        go.Bar(x=ngo['country'][:5],\n               y=ngo[col][:5],\n               name= place + \" 5\",\n              marker={'color': ngo[col][:5],'colorscale': color}))\n    fig.add_trace(\n        go.Bar(x=ngo['country'][:10],\n               y=ngo[col][:10],\n               name=place + \" 10\",\n              marker={'color': ngo[col][:10],'colorscale': color}))\n    fig.add_trace(\n        go.Bar(x=ngo['country'][:50],\n               y=ngo[col][:50],\n               name= place + \" 50\",\n              marker={'color': ngo[col][:50],'colorscale': color}))\n    fig.add_trace(\n        go.Bar(x=ngo['country'][:100],\n               y=ngo[col][:100],\n               name= place + \" 100\",\n              marker={'color': ngo[col][:100],'colorscale': color}))\n    fig.add_trace(\n        go.Bar(x=ngo['country'],\n               y=ngo[col],\n               name=\"All\",\n              marker={'color': ngo[col],'colorscale': color}))\n    \n    # Update the layout\n    fig.update_layout(\n        updatemenus=[\n            dict(\n                type=\"buttons\",\n                direction=\"left\",\n                active=0,\n                x=0.8,\n                y=1.6,\n                buttons=list([\n                    dict(label= place + \" 5\",\n                         method=\"restyle\",\n                         args=[{\"visible\": [True, False,False, False, False]},\n                               {\"title\": \"Top 5 Countries with \" + word }]),\n                    dict(label= place + \" 10\",\n                         method=\"restyle\",\n                         args=[{\"visible\": [False,True, False, False, False]},\n                               {\"title\": \"Top 10 Countries with \" + word}]),\n                    dict(label=place + \" 50\",\n                         method=\"restyle\",\n                         args=[{\"visible\": [False,False, True, False, False]},\n                               {\"title\": \"Top 50 Countries with \" + word}]),\n                    dict(label= place + \" 100\",\n                         method=\"restyle\",\n                         args=[{\"visible\": [False,False, False, True, False]},\n                               {\"title\": \"Top 100 Countries with \" + word}]),\n                    dict(label=\"All\",\n                         method=\"restyle\",\n                         args=[{\"visible\": [False,False, False, False, True]},\n                               {\"title\": \"All Countries\"}]),\n                ]),\n            )\n        ])\n    fig.update_layout(\n    title_text=\"Country Wise \" + word,\n    xaxis_domain=[0.05, 1.0]\n    )\n    fig.update_traces(showlegend=False)\n\n    fig.show()","20a90387":"#function for plotting the map for individual features vs country spread\n\ndef map_plot(col,colorscale):\n    \n    # Standardzing the title and button names\n    if col == 'child_mort':\n        word = \"Child Mortality Rate\"\n    elif col == 'exports':\n        word = \"Export\"\n    elif col == 'health':\n        word = \"Health\"\n    elif col == 'imports':\n        word = \"Imports\"\n    elif col == 'income':\n        word = \"Income\"   \n    elif col == 'inflation':\n        word = \"Inflation\"\n    elif col == 'life_expec':\n        word = \"Life Expectation\"\n    elif col == 'total_fer':\n        word = \"Fertility Rate\"\n    elif col == 'gdpp':\n        word = \"GDPP\"\n    else:\n        word = \"Cluster\"\n        \n    # Plotting the Map    \n    data = [dict(\n            type = 'choropleth',\n            locations = ngo['country'],\n            locationmode = 'country names',\n            z = ngo[col],\n            text = ngo['country'],\n            colorscale = colorscale,\n            autocolorscale = False,\n            reversescale = False,\n            marker_line_color='darkgray',\n            marker_line_width=0.5,\n            marker = dict(\n                line = dict (\n                    color = 'rgb(180,180,180)',\n                    width = 0.5\n                ) \n            ),\n            colorbar = dict(\n                autotick = False,\n                title = word)\n    )\n           ]\n\n    layout = dict(\n        title = word + ' per Country',\n        geo = dict(\n            showframe = False,\n            showcoastlines = True,\n            projection = dict(\n                type = 'Mercator')\n        )\n    )\n\n    fig = dict(data=data, layout=layout)\n    iplot(fig, validate=False)","221145db":"ngo = ngo.sort_values('gdpp',ascending=True)\nunivariate_bar('gdpp',ngo ,'Greens', 'Bottom')","c4d34d58":"colorscale_gdpp = [[0,\"#CCFFCC\"],[0.2,\"#99FF99\"],[0.4,\"#66FF66\"],\n              [0.5,\"#33FF33\"],[0.6,\"#00CC66\"],[0.8,\"#009900\"],[1,\"#006600\"]]\nmap_plot('gdpp',colorscale_gdpp)","f135b52d":"ngo = ngo.sort_values('child_mort',ascending=False)\nunivariate_bar('child_mort',ngo ,'Reds', 'Top')","063252be":"colorscale = [[0,\"rgb(247,197,197)\"],[0.3,\"rgb(255,99,71)\"],[0.5,\"rgb(220,20,60)\"],\n              [0.6,\"rgb(220,20,60)\"],[0.7,\"rgb(178,34,34)\"],[1,\"rgb(139,0,0)\"]]\nmap_plot('child_mort',colorscale)","420a0f88":"ngo = ngo.sort_values('exports',ascending=True)\nunivariate_bar('exports',ngo ,'Earth', 'Bottom')","ba04adc1":"colorscale = [[0,\"#CCE5FF\"],[0.2,\"#66B2FF\"],[0.4,\"#3399FF\"],\n              [0.6,\"#0080FF\"],[0.8,\"#0066CC\"],[1,\"#004C99\"]]\nmap_plot('exports',colorscale)","4405dbd3":"ngo = ngo.sort_values('health',ascending=True)\nunivariate_bar('health',ngo ,'Earth', 'Bottom')","966430c6":"colorscale = [[0,\"#CCE5FF\"],[0.2,\"#66B2FF\"],[0.4,\"#3399FF\"],\n              [0.6,\"#0080FF\"],[0.8,\"#0066CC\"],[1,\"#004C99\"]]\nmap_plot('health',colorscale)","20ebbdfc":"ngo = ngo.sort_values('imports',ascending=False)\nunivariate_bar('imports',ngo ,'Portland', 'Top')","da9b6893":"colorscale = [[0,\"#FFCCFF\"],[0.2,\"#FF99FF\"],[0.4,\"#FF66FF\"],\n              [0.6,\"#FF00FF\"],[0.8,\"#CC00CC\"],[1,\"#990099\"]]\nmap_plot('imports',colorscale)","5250dd08":"ngo = ngo.sort_values('income',ascending=True)\nunivariate_bar('income',ngo ,'Viridis', 'Bottom')","54071a72":"colorscale = [[0,\"#CCFFFF\"],[0.2,\"#66FFFF\"],[0.4,\"#00FFFF\"],\n              [0.6,\"#00CCCC\"],[0.8,\"#009999\"],[1,\"#006666\"]]\nmap_plot('income',colorscale)","767839b1":"ngo = ngo.sort_values('inflation',ascending=False)\nunivariate_bar('inflation',ngo ,'Viridis', 'Top')","e4c30b25":"colorscale = [[0,\"#CCE5FF\"],[0.2,\"#66B2FF\"],[0.4,\"#3399FF\"],\n              [0.6,\"#0080FF\"],[0.8,\"#0066CC\"],[1,\"#004C99\"]]\nmap_plot('inflation',colorscale)","3219eb7d":"ngo = ngo.sort_values('life_expec',ascending=True)\nunivariate_bar('life_expec',ngo ,'YlOrRd', 'Bottom')","109cd79d":"colorscale = [[0,\"#E5CCFF\"],[0.2,\"#CC99FF\"],[0.4,\"#B266FF\"],\n              [0.6,\"#9933FF\"],[0.8,\"#7F00FF\"],[1,\"#4C0099\"]]\nmap_plot('life_expec',colorscale)","7f1a8678":"ngo = ngo.sort_values('total_fer',ascending=False)\nunivariate_bar('total_fer',ngo ,'Reds', 'Top')","c143c96f":"map_plot('total_fer','Reds')","261e28e7":"fig = ff.create_scatterplotmatrix(ngo.iloc[:,1:10], diag='box', size=2, height=1500, width=1500)\niplot(fig)\n#iplot(fig, filename ='Scatterplotmatrix.png',image='png')","6b9f1cc5":"# Let's check the correlation coefficients to see which variables are highly correlated\n\nplt.figure(figsize = (10,10))\nax= sns.heatmap(ngo.corr(), annot = True, cmap=\"RdYlGn\",linewidth =1)\n#plt.savefig('Correlation Heatmap')\nplt.show()","866f7090":"# dataframe before data transformation\nngo.head(3)","81e1fe68":"ngo['imports'] = ngo['imports'] * ngo['gdpp']\/100\nngo['exports'] = ngo['exports'] * ngo['gdpp']\/100\nngo['health'] = ngo['health'] * ngo['gdpp']\/100","290071f4":"# Dataframe after data transformation\nngo.head()","5690fe9d":"features = ngo.columns[1:]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Violin(y=ngo[col],\n                      box_visible=True, \n                      line_color='black',\n                       meanline_visible=True,\n                      fillcolor='lightseagreen', \n                      opacity=0.6,\n                      x0=col\n                     ),row=i, col=j)\n        #fig.update_xaxes(title_text=col, row=i, col=j)\nfig.update_layout(height=800, width=800, title_text=\"Data Distribution\")\nfig.update_traces(showlegend=False)\n\nfig.show()        \n        ","fe4167a7":"#finding the 99th percentile value to cap\nupper_gdpp = ngo['gdpp'].quantile(0.99)\nupper_income = ngo['income'].quantile(0.99)\nupper_health = ngo['health'].quantile(0.99)\nupper_import = ngo['imports'].quantile(0.99)\nupper_export = ngo['exports'].quantile(0.99)\nupper_inflation = ngo['inflation'].quantile(0.99)\n\nprint('Total number of rows getting capped for dgpp : ', len(ngo[ngo['gdpp']>upper_gdpp]))\nprint('Total number of rows getting capped for income : ', len(ngo[ngo['income']>upper_income]))\nprint('Total number of rows getting capped for health : ', len(ngo[ngo['health']>upper_health]))\nprint('Total number of rows getting capped for imports : ', len(ngo[ngo['imports']>upper_import]))\nprint('Total number of rows getting capped for exports : ', len(ngo[ngo['exports']>upper_export]))\nprint('Total number of rows getting capped for inflation : ', len(ngo[ngo['inflation']>upper_inflation]))\n\n\n# capping the gdpp and income values\nngo['gdpp'][ngo['gdpp']>upper_gdpp] = upper_gdpp\nngo['income'][ngo['income']>upper_income] = upper_income\nngo['health'][ngo['health']>upper_health] = upper_health\nngo['imports'][ngo['imports']>upper_import] = upper_import\nngo['exports'][ngo['exports']>upper_export] = upper_export\nngo['inflation'][ngo['inflation']>upper_inflation]= upper_inflation\n","efee5314":"features = ngo.columns[1:]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Violin(y=ngo[col],\n                      box_visible=True, \n                      line_color='black',\n                       meanline_visible=True,\n                      fillcolor='purple', \n                      opacity=0.5,\n                      x0=col\n                     ),row=i, col=j)\n        #fig.update_xaxes(title_text=col, row=i, col=j)\nfig.update_layout(height=800, width=800, title_text=\"Data Distribution\")\nfig.update_traces(showlegend=False)\n\nfig.show() ","4b46242e":"plt.figure(figsize=(15, 15))\nfeatures = ngo.columns[1:]\nfor i in enumerate(features):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(ngo[i[1]],color = 'green')\n    plt.xticks(rotation=20)","972c403e":"# keeping only the numerical columns\nngo_num = ngo.drop(['country'], axis=1)\nfeatures = ngo_num.columns\nngo_num.head(2)","f68432be":"scaler = StandardScaler()\n\n# fit_transform\nngo_scaled = scaler.fit_transform(ngo_num)\nngo_scaled","aa5c0b8a":"#Converting it into a dataframe\nngo_scaled = pd.DataFrame(ngo_scaled)\nngo_scaled.columns = features\nngo_scaled.head()","1feead2a":"def hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","cc7dd3d8":"#Use the Hopkins Statistic function by passing the above dataframe as a paramter\nhopkins(ngo_scaled)","0c479c5d":"# single linkage: : Here, the distance between 2 clusters is defined as the shortest distance between points in the two clusters.\n\nplt.figure(figsize=(24, 9))\nplt.title('Hierarchical Clustering Dendrogram')\nplt.xlabel('index')\nplt.ylabel('distance')\nmergings_s = linkage(ngo_scaled, method=\"single\", metric='euclidean')\ndendrogram(mergings_s)\nplt.show()","509d4cee":"# complete linkage : Here, the distance between 2 clusters is defined as the maximum distance between any 2 points in the clusters\n\nplt.figure(figsize=(24, 9))\nplt.title('Hierarchical Clustering Dendrogram')\nplt.xlabel('index')\nplt.ylabel('distance')\nmergings_c = linkage(ngo_scaled, method=\"complete\", metric='euclidean')\ndendrogram(mergings_c)\nplt.show()","ddb9fd55":"hcluster_3 = cut_tree(mergings_c, n_clusters=3).reshape(-1, )\nhcluster_3","be3b2142":"# adding the cluster ID back to the ngo dataframe \nngo['HCluster_3_Label'] = hcluster_3\nngo.head()","db59e846":"#checking the country count per cluster\nngo['HCluster_3_Label'].value_counts()","91282c77":"plt.figure(figsize=(18, 6))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='HCluster_3_Label', y='child_mort', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='HCluster_3_Label', y='gdpp', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='HCluster_3_Label', y='income', data=ngo, palette=\"Dark2\")\n\nplt.show()","9bc7aa9d":"plt.figure(figsize=(20, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='HCluster_3_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha = 0.7)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='HCluster_3_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='HCluster_3_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.show()","5fe27cd2":"#Checking the countries in cluster 2\nngo[ngo['HCluster_3_Label']==2]","c16c7e36":"#Checking the countries in cluster 1\nngo[ngo['HCluster_3_Label']==1]","efe32f40":"#Checking the countries in cluster 0\nngo[ngo['HCluster_3_Label']==0]","87e7781b":"hcluster_4 = cut_tree(mergings_c, n_clusters=4).reshape(-1, )\nhcluster_4","7a414836":"# adding the cluster ID back to the ngo dataframe \nngo['HCluster_4_Label'] = hcluster_4\nngo.head()","de232993":"#checking the country count per cluster\nngo['HCluster_4_Label'].value_counts()","71186d37":"plt.figure(figsize=(18, 6))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='HCluster_4_Label', y='child_mort', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='HCluster_4_Label', y='gdpp', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='HCluster_4_Label', y='income', data=ngo, palette=\"Dark2\")\n\nplt.show()","4a23ad6e":"plt.figure(figsize=(20, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='HCluster_4_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha = 0.7)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='HCluster_4_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='HCluster_4_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.show()","f0f21bb2":"#Checking the countries in cluster 3\nngo[ngo['HCluster_4_Label']==3]","2a94a65b":"#Checking the countries in cluster 2\nngo[ngo['HCluster_4_Label']==2]","7b92292e":"#Checking the countries in cluster 1\nngo[ngo['HCluster_4_Label']==1]","29a49497":"#Checking the countries in cluster 0\nngo[ngo['HCluster_4_Label']==0]","b9dc9b67":"hcluster_5 = cut_tree(mergings_c, n_clusters=5).reshape(-1, )\nhcluster_5","e723d3f5":"# adding the cluster ID back to the ngo dataframe \nngo['HCluster_5_Label'] = hcluster_5\nngo.head()","9555d9f7":"#checking the country count per cluster\nngo['HCluster_5_Label'].value_counts()","4e6fcd71":"ngo['HCluster_5_Label'] = hcluster_5\n\nplt.figure(figsize=(22, 6))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='HCluster_5_Label', y='child_mort', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='HCluster_5_Label', y='gdpp', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='HCluster_5_Label', y='income', data=ngo, palette=\"Dark2\")\n\nplt.show()","bfcaf25d":"plt.figure(figsize=(20, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='HCluster_5_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha = 0.7)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='HCluster_5_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='HCluster_5_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.show()","53577f08":"#Checking the countries in cluster 4\nngo[ngo['HCluster_5_Label']==4]","63308785":"#Checking the countries in cluster 3\nngo[ngo['HCluster_5_Label']==3]","1dbe8306":"#Checking the countries in cluster 2\nngo[ngo['HCluster_5_Label']==2]","22741c0b":"#Checking the countries in cluster 1\nngo[ngo['HCluster_5_Label']==1]","d41b093e":"#Checking the countries in cluster 0\nngo[ngo['HCluster_5_Label']==0]","ff0a533c":"#New dataframe for group by & analysis\nngo_h_analysis =  ngo.groupby(['HCluster_3_Label']).mean()\nngo_h_analysis.drop(['HCluster_4_Label','HCluster_5_Label'],axis=1, inplace= True)\nngo_h_analysis","9914101c":"# Creating a new field for count of observations in each cluster\nngo_h_analysis['Observations']=ngo.groupby('HCluster_3_Label')['country'].count()\nngo_h_analysis","aeefebf3":"# Creating a new field for proportion of observations in each cluster\nngo_h_analysis['Proportion']=round(ngo_h_analysis['Observations']\/ngo_h_analysis['Observations'].sum(),2)\nngo_h_analysis","e7624a79":"fig = go.Figure([go.Pie(labels=ngo_h_analysis.index, values=ngo_h_analysis['Observations']\n                        ,hole=0.3)])  # can change the size of hole \n\nfig.update_traces(hoverinfo='label+value+percent', textinfo='label+percent', textfont_size=15)\nfig.update_layout(title=\"Country proportion per cluster\",title_x=0.5)\nfig.show()","89af011d":"features = ngo_h_analysis.columns[:-2]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Bar(x=ngo_h_analysis.index,\n                   y=ngo_h_analysis[col],\n                   marker={'color': ngo_h_analysis.index,\n                   'colorscale': 'Viridis'},\n                   text=round(ngo_h_analysis[col],2),\n                   textposition = \"outside\",\n                   ),row=i, col=j)\n        fig.update_yaxes(title_text=col, row=i, col=j)\n\nfig.update_layout(height=800, width=800, title_text=\"Hierarchial Cluster - Feature Mean Values\")\nfig.update_traces(showlegend=False)\n\nfig.show()","745cbd71":"# Let's look into the  3 clusters in map format - Cluster 0 as Black, Cluster 1 as Maroon and Cluster 2 as Yellow\nmap_plot('HCluster_3_Label','Electric')","40a6ecaf":"\n#Let us bin our cluster 0\ncluster_hc=ngo[ngo['HCluster_3_Label']==0]\ncluster_hc.sort_values(['gdpp','income','child_mort','health','inflation','life_expec','total_fer','imports','exports'], \n                      ascending=[True,True,False,True,False,True,False,False,True]).head(10)","da5d0526":"#Checking the scaled parameter dataframe\nngo_scaled.head()","bf36a5a5":"# elbow-curve\/SSD\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(ngo_scaled)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\nssddf = pd.DataFrame(ssd)\nssddf.columns = ['SSD']\nfig = go.Figure(data=go.Scatter(x=ssddf.index, y=ssddf['SSD']))\nfig.update_layout(height=500, width=800, title_text=\"SSD\/Elbow Curve\")\nfig.show()","5100f26c":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(ngo_scaled)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(ngo_scaled, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","3cca9e5e":"sse_ = []\nfor k in range(2, 15):\n    kmeans = KMeans(n_clusters=k).fit(ngo_scaled)\n    sse_.append([k, silhouette_score(ngo_scaled, kmeans.labels_)])\n\n\nplt.plot(pd.DataFrame(sse_)[0], pd.DataFrame(sse_)[1])\nplt.show()","20a0e6a0":"# K Means with with k=3\nkmeans_3 = KMeans(n_clusters=3, max_iter=500, init='k-means++', n_init=10, random_state= 350)\nkmeans_3.fit(ngo_scaled)\nkmeans_3.labels_","2b13d145":"ngo['KCluster_3_Label'] = kmeans_3.labels_\nngo.head()","b611e3e3":"# Checking how many countries in each cluster \nngo['KCluster_3_Label'].value_counts()","2d9bb47e":"plt.figure(figsize=(22, 6))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='KCluster_3_Label', y='child_mort', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='KCluster_3_Label', y='gdpp', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='KCluster_3_Label', y='income', data=ngo, palette=\"Dark2\")\n\nplt.show()","ab2507a7":"plt.figure(figsize=(20, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='KCluster_3_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha = 0.7)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='KCluster_3_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='KCluster_3_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.show()","b335f7a6":"# Checking the CLuster means:\nCluster_Stat = ngo.groupby('KCluster_3_Label')[features].mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])\nround(Cluster_Stat,2)","1f00f1bb":"#Checking the countries in cluster 0\nngo[ngo['KCluster_3_Label']==0]","cc5862c3":"#Checking the countries in cluster 1\nngo[ngo['KCluster_3_Label']==1]","26436345":"#Checking the countries in cluster 2\nngo[ngo['KCluster_3_Label']==2]","994e84ea":"# K Means with with k=4\nkmeans_4 = KMeans(n_clusters=4, max_iter=500, init='k-means++', n_init=10, random_state= 350)\nkmeans_4.fit(ngo_scaled)\nkmeans_4.labels_","b1dee2a8":"ngo['KCluster_4_Label'] = kmeans_4.labels_\nngo.head()","1ef0d21a":"# Checking how many countries in each cluster \nngo['KCluster_4_Label'].value_counts()","46306d64":"plt.figure(figsize=(22, 6))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='KCluster_4_Label', y='child_mort', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='KCluster_4_Label', y='gdpp', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='KCluster_4_Label', y='income', data=ngo, palette=\"Dark2\")\n\nplt.show()","fb36f5c3":"plt.figure(figsize=(20, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='KCluster_4_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha = 0.7)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='KCluster_4_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='KCluster_4_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.show()","6636e6ed":"#Checking the countries in cluster 0\nngo[ngo['KCluster_4_Label']==0]","7107b941":"#Checking the countries in cluster 1\nngo[ngo['KCluster_4_Label']==1]","cf6f3828":"#Checking the countries in cluster 2\nngo[ngo['KCluster_4_Label']==2]","cf19e9a2":"#Checking the countries in cluster 3\nngo[ngo['KCluster_4_Label']==3]","b0d45acc":"# K Means with with k=5\nkmeans_5 = KMeans(n_clusters=5, max_iter=500, init='k-means++', n_init=10, random_state= 350)\nkmeans_5.fit(ngo_scaled)\nkmeans_5.labels_","050d8233":"ngo['KCluster_5_Label'] = kmeans_5.labels_\nngo.head()","037937d3":"# Checking how many countries in each cluster \nngo['KCluster_5_Label'].value_counts()","59fdf70a":"plt.figure(figsize=(22, 6))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='KCluster_5_Label', y='child_mort', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='KCluster_5_Label', y='gdpp', data=ngo, palette=\"Dark2\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='KCluster_5_Label', y='income', data=ngo, palette=\"Dark2\")\n\nplt.show()","2d7cfb77":"plt.figure(figsize=(20, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='KCluster_5_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha = 0.7)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='KCluster_5_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='KCluster_5_Label',\n                data=ngo, legend='full', palette=\"Dark2\",s=100,alpha=0.7)\nplt.show()","38d2f28e":"#New dataframe for group by & analysis\nngo_k_analysis =  ngo.groupby(['KCluster_3_Label']).mean()\nngo_k_analysis.drop(['HCluster_3_Label','HCluster_4_Label','HCluster_5_Label','KCluster_4_Label','KCluster_5_Label'],axis=1, inplace= True)\nngo_k_analysis","16306676":"# Creating a new field for count of observations in each cluster\nngo_k_analysis['Observations']=ngo.groupby('KCluster_3_Label')['country'].count()\nngo_k_analysis\n","b46cdc08":"# Creating a new field for proportion of observations in each cluster\nngo_k_analysis['Proportion']=round(ngo_k_analysis['Observations']\/ngo_k_analysis['Observations'].sum(),2)\nngo_k_analysis","dd116eb8":"fig = go.Figure([go.Pie(labels=ngo_k_analysis.index, values=ngo_k_analysis['Observations']\n                        ,hole=0.3)])  # can change the size of hole \n\nfig.update_traces(hoverinfo='label+value+percent', textinfo='label+percent+value', textfont_size=15)\nfig.update_layout(title=\"Country proportion per cluster\",title_x=0.5)\nfig.show()","c2287192":"features = ngo_k_analysis.columns[:-2]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Bar(x=ngo_k_analysis.index,\n                   y=ngo_k_analysis[col],\n                   marker={'color': ngo_k_analysis.index,\n                   'colorscale': 'Viridis'},\n                   text=round(ngo_k_analysis[col],2),\n                   textposition = \"outside\",\n                   ),row=i, col=j)\n        fig.update_yaxes(title_text=col, row=i, col=j)\n\nfig.update_layout(height=900, width=900, title_text=\"K-Means Cluster - Feature Mean Values\")\nfig.update_traces(showlegend=False)\n\nfig.show()","f71a773a":"# Let's look into the  3 clusters in map format - \n# Cluster 2 (Under developed countries) as Black\n# Cluster 1 ( Developing countries) as Maroon \n# Cluster 0 (Developed counrties) as Yellow\n\n# Plotting the Map    \ndata = [dict(\n        type = 'choropleth',\n        locations = ngo['country'],\n        locationmode = 'country names',\n            z = ngo['KCluster_3_Label'],\n            text = ngo['country'],\n            colorscale = 'Electric',\n            autocolorscale = False,\n            reversescale = True,\n            marker_line_color='darkgray',\n            marker_line_width=0.5,\n            marker = dict(\n                line = dict (\n                    color = 'rgb(180,180,180)',\n                    width = 0.5\n                ) \n            ),\n            colorbar = dict(\n                autotick = False,\n                title = 'Country Cluster')\n    )\n           ]\n\nlayout = dict(\n    title = 'Coutry Clusters',\n        geo = dict(\n            showframe = False,\n            showcoastlines = True,\n            projection = dict(\n                type = 'Mercator')\n        )\n    )\n\nfig = dict(data=data, layout=layout)\niplot(fig, validate=False)","9227eee3":"#Let us bin our cluster 0\ncluster_km=ngo[ngo['KCluster_3_Label']==2]\ncluster_km.sort_values(['gdpp','income','child_mort','health','inflation','life_expec','total_fer','imports','exports'], \n                      ascending=[True,True,False,True,False,True,False,False,True]).head(10)","19755bc4":"# Let's lookinto the selected 10 countries for the aid and check various statistics\nngo_aid = cluster_km.sort_values(['gdpp','income','child_mort','health','inflation','life_expec','total_fer','imports','exports'], \n                      ascending=[True,True,False,True,False,True,False,False,True]).head(10)\n\nngo_aid.drop(['HCluster_3_Label','HCluster_4_Label','HCluster_5_Label','KCluster_3_Label','KCluster_4_Label','KCluster_5_Label'],axis = 1, inplace = True)\nngo_aid","505bb5f6":"# checking the data distribution of each features\nfeatures = ngo_aid.columns[1:]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Violin(y=ngo_aid[col],\n                      box_visible=True, \n                      line_color='black',\n                       meanline_visible=True,\n                      fillcolor='darkseagreen', \n                      opacity=0.6,\n                      x0=col\n                     ),row=i, col=j)\n        #fig.update_xaxes(title_text=col, row=i, col=j)\nfig.update_layout(height=800, width=800, title_text=\"Data Distribution\")\nfig.update_traces(showlegend=False)\n\nfig.show() ","ff84be15":"# checking the data distribution of each features\n\nplt.figure(figsize=(18,18))\nfeatures = ngo_aid.columns[1:]\nfor i in enumerate (features):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(ngo_aid[i[1]], bins = 5, color = 'green')","df182fc9":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='country',\n                data=ngo_aid, legend='full', palette=\"Dark2\", s=300)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='gdpp', y='income', hue='country',\n                data=ngo_aid, legend='full', palette=\"Dark2\", s=300)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='income', y='child_mort', hue='country',\n                data=ngo_aid, legend='full', palette=\"Dark2\", s=300)\nplt.show()","19441c2d":"print (\"GDP Statistics of Selected Countries : \")\nprint (\"Max GDP : \", max(ngo_aid.gdpp))\nprint (\"Min GDP : \", min(ngo_aid.gdpp))\nprint (\"Avg GDP : \", ngo_aid.gdpp.mean())\nprint('-'*50)\nprint (\"Income Statistics of Selected Countries : \")\nprint (\"Max Income : \", max(ngo_aid.income))\nprint (\"Min Income : \", min(ngo_aid.income))\nprint (\"Avg Income : \", ngo_aid.income.mean())\nprint('-'*50)\nprint (\"Child Mortality Statistics of Selected Countries : \")\nprint (\"Max Child Mortality : \", max(ngo_aid['child_mort']))\nprint (\"Min Child Mortality : \", min(ngo_aid['child_mort']))\nprint (\"Avg Child Mortality : \", round(ngo_aid['child_mort'].mean(),1))","8984e261":"#Creating a rank for the countries\nngo_aid.reset_index(drop=True, inplace=True)\nngo_aid['Rank']= ngo_aid.index+1\nngo_aid","00c1ad66":"\n# Plotting the Map for the top 10 countries that requires NGO Aid  \ndata = [dict(\n        type = 'choropleth',\n        locations = ngo_aid['country'],\n        locationmode = 'country names',\n            z = ngo_aid['Rank'],\n            text = ngo_aid['country'],\n            colorscale = [[0,\"#006600\"],[1,\"#00CC00\"]],\n            autocolorscale = False,\n            reversescale = False,\n            marker_line_color='black',\n            marker_line_width=0.5,\n            marker = dict(\n                line = dict (\n                    color = 'rgb(0,0,0)',\n                    width = 0.5\n                ) \n            ),\n            colorbar = dict(\n                autotick = False,\n                title = 'Countries Rank')\n    )\n           ]\n\nlayout = dict(\n    title = 'Countries for NGO Aid',\n        geo = dict(\n            showframe = False,\n            showcoastlines = True,\n            projection = dict(\n                type = 'Mercator')\n        )\n    )\n\nfig = dict(data=data, layout=layout)\niplot(fig, validate=False)","3ac0be8b":"<a id=\"eda\"><\/a>\n<h1>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            4. Exploratory Data Analysis\n            <\/span>   \n        <\/font>    \n<\/h1>","8851dbb2":"<a id=\"import\"><\/a>\n<h1 name='libraries'>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            3. Reading & Understanding the data\n            <\/span>   \n        <\/font>    \n<\/h1>","71c79397":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        The dataset contains 167 rows and 10 columns. Out of these 10 columns, 9 are integer type and only 1 object\/categorical column is present which is the name of the country.  \n    <\/span>    \n<\/div>","f8499727":"<a id=\"transformation\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.4 Data Transformation\n            <\/span>   \n        <\/font>    \n<\/h2>","ab992ed7":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","82d82bb2":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","a233d330":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","25818c84":"<a id=\"objective\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.2 Objective :\n            <\/span>   \n        <\/font>    \n<\/h2>\n\n<div>\n    <span style='font-family:Georgia'>\n        The main task is to cluster the countries by the factors mentioned above and then present your solution and recommendations to the CEO using a PPT :\n        <ul>\n            <li>Data inspection and EDA tasks suitable for this dataset - data cleaning, univariate analysis, bivariate analysis etc.<\/li>\n            <li><b>Outlier Analysis:<\/b> You must perform the Outlier Analysis on the dataset. However, you do have the flexibility of not removing the outliers if it suits the business needs or a lot of countries are getting removed. Hence, all you need to do is find the outliers in the dataset, and then choose whether to keep them or remove them depending on the results you get.<\/li>\n            <li> Create model using both K-means and Hierarchical clustering(both single and complete linkage) on this dataset to create the clusters.<\/li>\n            <li>Analyse the clusters and identify the ones which are in dire need of aid. You can analyse the clusters by comparing how these three variables - [gdpp, child_mort and income] vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries.<\/li>\n            <li>Perform visualisations on the clusters that have been formed using the features selected for building the clustering model<\/li>\n        <\/ul>\n    <\/span>\n<\/div>","eaa607b2":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Top 5 countries with net income per person are Qatar, Luxembourg, Brunei, Kuwait, Singapore. African countries like Congo, Liberia, Burundi, Niger has the lowest income per person. \n    <\/span>    \n<\/div>","9142b553":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.3.2 Correlation Heatmap\n            <\/span>   \n        <\/font>    \n<\/h3>","e6d87409":"<a id=\"kmeans\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            6.3 K-Means Clustering\n            <\/span>   \n        <\/font>    \n<\/h2>","0f9841dd":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        By doing 4 clusters , the model created a new cluster 1 which has only 3 countries but child mortality is highest and GDP and income are lowest for these 3 countries. These three countries should be a part of aid nations in Cluster label 0. Thus, 4 cluster model do not improve the clustering situation.\n    <\/span>    \n<\/div>","37de7e53":"![](http:\/\/www.jaburgwilk.com\/Media\/Default\/BLOG\/Thank%20You.jpg)","9e84953c":"<a id=\"data\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.3 Data Dictionary :\n            <\/span>   \n        <\/font>    \n<\/h2>\n<div>\n    <span style='font-family:Georgia'>\n        <ul>\n            <li><b>country<\/b> : Name of the country<\/li>\n            <li><b>child_mort<\/b> : Death of children under 5 years of age per 1000 live births<\/li>\n            <li><b>exports<\/b> : Exports of goods and services per capita. Given as %age of the GDP per capita<\/li>\n            <li><b>health<\/b> : Total health spending per capita. Given as %age of GDP per capita<\/li>\n            <li><b>imports<\/b> : Imports of goods and services per capita. Given as %age of the GDP per capita<\/li>\n            <li><b>income<\/b> : Net income per person<\/li>\n            <li><b>inflation<\/b> : The measurement of the annual growth rate of the Total GDP<\/li>\n            <li><b>life_expec<\/b> : The average number of years a new born child would live if the current mortality patterns are to remain the same<\/li>\n            <li><b>total_fer<\/b> : The number of children that would be born to each woman if the current age-fertility rates remain the same<\/li>\n            <li><b>gdpp<\/b> : The GDP per capita. Calculated as the Total GDP divided by the total population<\/li>\n        <\/ul>\n    <\/span>\n<\/div>    ","190d292f":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.2 Child Mortality Rate\n            <\/span>   \n        <\/font>    \n<\/h3>","8ea64f90":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Most of the countries in the list of Top 10 Child Mortality rate is in Africa. The darker shade of red in Child Mortality map shows that most of the african countries have very high child mortality rate . Haiti is having the highest child mortality in the world which is situated in continent North America. \n    <\/span>    \n<\/div>","40518ec5":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","c78913c0":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Doing 5 clusters do not add any additional value. We will go ahead with 3 cluster model.  \n    <\/span>    \n<\/div>","ae195cc8":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        The database size before and after removal of duplicate is same, indicating that there is no duplicate in the dataset.\n    <\/span>    \n<\/div>","878841be":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Outcome: <\/b><br>\n        Based on above data, the following 10 countries requires NGO Aid based on hierarchial clustering : \n        <ul>\n            <li>Burundi<\/li>\n            <li>Liberia<\/li>\n            <li>Congo<\/li>\n            <li>Niger<\/li>\n            <li>Sierra Leone<\/li>\n            <li>Madagascar<\/li>\n            <li>Mozambique<\/li>\n            <li>Central African Repulic<\/li>\n            <li>Malawi<\/li>\n            <li>Eritrea<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","f7449eb1":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n         From the above validations(Elbow Curve & silhouette analysis), we could see that 3, 4 or 5 clusters are optimal number of clusters to be used. We will try three different iterations in K-Means clustering using 3, 4 and 5 Clusters and analyse the results. We will not consider 2 clusters as it will not provide us our desierd results of country segregation.  \n    <\/span>    \n<\/div>","2a9c9a51":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.7 Inflation\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> Inflation : <\/b> The measurement of the annual growth rate of the Total GDP <\/span>","e4251215":"<a id=\"datadist\"><\/a>\n<h2>   \n      <font color = 'purple' >\n            <span style='font-family:Georgia'>\n            5.1 Data Distribution\n            <\/span>   \n        <\/font>    \n<\/h2>","27eb7665":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","588abaac":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            6.3.3 Model 1 : K-Means Cluster 3\n            <\/span>   \n        <\/font>    \n<\/h3>","cba62f0f":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Niger, Chad, Mali, Congo, Burundi are the top 5 countries based on number o children per each woman. These countries also have less GDP, less income per person, less amount spent on healthcare and also they have high mortality rate. These countries can be categorized as underdeveloped countries and most probabily will require the NGO aid. \n    <\/span>    \n<\/div>","ebbeb774":"<a id=\"univar\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.2 Univariate Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","c0d28373":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        <ul>\n            <li> GDP and Income has high positive correlation (0.9). This indicates countries where people have high income has high GDP and they tend to prosper more. <\/li>\n            <li> Life Expectency and Child Mortality have high negative correlation (-0.89). This indicates, child mortality rate signifies overall life expectency of the population<\/li>\n            <li> Total Fertility and Child Mortality has high correlation. It may be due to the fact that if child mortality is higher, people tend to opt for more children. Also it may be due to unavailability of health care system to provide better care for children as well as care for family planning. <\/li>\n            <li> No. of children per woman\/ fertility is also negatively correlated with life-expectency. Similar to previous point, it may be due to health care system condition <\/li>\n            <li> Exports and Imports have high correlation. <\/li>\n            <li> Income has postivite correlation (0.61) with life expectency and negative correlation (-0.52) which child mortality. This signifies that countries with higher income values can spend more in healhcare which reduced the child mortality and increases average life espectency. <\/li>\n            <li> GDP is negatively correlated with fertility (-0.45) signifying that developed countries prefer less children in a family compared to underdeveloped countries. <\/li>            \n        <\/ul>\n        We can see from the box plot that there are some outliers in the data. We will analyze outliers in our next segment.\n    <\/span>    \n<\/div>","b0bbe681":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","39414fd7":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","cf7bcc11":"<h1 style=\"text-align:center\">   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n                Help International NGO - Identify Countries for Charity through Clustering\n            <\/span>   \n        <\/font>    \n<\/h1>\n<hr style=\"width:100%;height:5px;border-width:0;color:gray;background-color:gray\">\n<center><img src=\"https:\/\/media-exp1.licdn.com\/dms\/image\/C561BAQGRp19sH-x9-w\/company-background_10000\/0?e=1598436000&v=beta&t=f-ovFyxz9Mjzl_C2STtwRKrkpQ0OHXsbmHAlT3V1DjQ\"><\/center>","02fc913f":"<h3>   \n      <font color = 'darkgreen' >\n            <span style='font-family:Georgia'>\n            6.2.4 Hierarchical Clustering Model 2 : 4 Clusters\n            <\/span>   \n        <\/font>    \n<\/h3>","d63be497":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        All the features have outliers. If we remove the outliers then this will change the ranking of few countries with respect to requirement of Financial Aid. If we apply outlier treatment by Deletion based on IQR values, this will remove few countries from the list that would have really deserved the Financial Aid.If we do not apply Outlier treatment, it can impact the clustering model, as the presence of Outlier can change the CENTROID (K-Means) of the cluster. <br><br>\n        Thus, instead of deleting the outliers, we will approach to cap only the necessary features ( upper or lower based on feature importance). The capping will be done based on 1% for lower and 99% for the upper values.\n    <\/span>    \n<\/div>","3578d676":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>\n<br><br>\n<span style='font-family:Georgia'> We will use Hierarchical Clustering to identify appropriate cluster size with a good split of data (Max Intra-Cluster distance & Min Inter-Cluster Distance) <\/span>","7d07d111":"<h3>   \n      <font color = 'darkgreen' >\n            <span style='font-family:Georgia'>\n            6.2.1 Single Linkage Hierarchical Clustering\n            <\/span>   \n        <\/font>    \n<\/h3>","d4408b78":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n         From the box plots, scatter plots and mean values, it is evident that Cluster 0 has the highest child mortality and lowest GDP and Income. Cluster 0 should be considered for Aid. Let's look into the country details.  This cluster is same as Cluser 2 in the 1st model of K-Means Cluster 3. We will check with 5 clusters if the country mapping are changing drastically or not, else , we will choose 3 cluster model as final. \n    <\/span>    \n<\/div>","c2fd6b7c":"<a id=\"libraries\"><\/a>\n<h1>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            2. Python Libraries:\n            <\/span>   \n        <\/font>    \n<\/h1>","ec81a64e":"<a id=\"warning\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.2 Supress Warnings:\n            <\/span>   \n        <\/font>    \n<\/h2>","8e7184cb":"<span style=\"font-size:6mm\" >\n    <span style ='font-family:Georgia'>\n        <font color = blue > Silhouette score =\n            <span style=\"display: inline-block;vertical-align: middle;\">\n                <div style=\"text-align: center;border-bottom: 1px solid black;\">p-q<\/div>\n                <div style=\"text-align: center;\">max(p,q)<\/div> \n            <\/span>\n        <\/font>\n    <\/span>\n<\/span>","cc4a3cad":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","761be927":"<a id=\"outliers\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.5 Outlier Treatment\n            <\/span>   \n        <\/font>    \n<\/h2>","a61bc13e":"<span style='font-family:Georgia'> <b> Child Mortality Rate : <\/b> Death of children under 5 years of age per 1000 live births<\/span>","68a5f501":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Outcome: <\/b><br>\n        The following 10 countries requires NGO Aid . These falls under Underdeveloped Country list and performing worst among the Under Developed Countries : \n        <ul>\n            <li>Burundi<\/li>\n            <li>Liberia<\/li>\n            <li>Congo<\/li>\n            <li>Niger<\/li>\n            <li>Sierra Leone<\/li>\n            <li>Madagascar<\/li>\n            <li>Mozambique<\/li>\n            <li>Central African Republic<\/li>\n            <li>Malawi<\/li>\n            <li>Eritrea<\/li>\n        <\/ul>\n    <\/span>   \n    <br>\n    <br>\n    <span style='font-family:Georgia'>\n        <b>Reasons for Aid: <\/b><br>\n        <ul>\n            <li>High child mortality<\/li>\n            <li>Low Income <\/li>\n            <li>Low GDP<\/li>\n            <li>Low health spent <\/li>\n            <li>High Inflation <\/li>\n            <li>Lower life expectency<\/li>\n            <li>High fertility rate (i.e more number of children per family\/woman)<\/li>\n        <\/ul>\n    <\/span>\n    \n<\/div>","b587e00b":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.3 Exports\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> exports : <\/b> Exports of goods and services per capita. Given as %age of the GDP per capita <\/span>","71a24908":"<a id=\"nullcal\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.3 Null & Duplicate Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","9be72c55":"<a id=\"scaling\"><\/a> \n<h2>   \n      <font color = 'purple' >\n            <span style='font-family:Georgia'>\n            5.2 Data Scaling\n            <\/span>   \n        <\/font>    \n<\/h2>","a78d1bad":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Before we apply any clustering algorithm to the given data, it's essential to check whether the given data has meaningful clusters. Which, in general means, the given data is not random. The process to evaluate the data to check if the data is feasible for clustering or not is know as the clustering tendency. To check cluster tendency, we use the Hopkins test. Hopkins test examines whether data points differ significantly from uniformly distributed data in the multidimensional space.\n    <\/span>    \n<\/div>","15da744d":"<h3>   \n       <font color = darkgreen>\n            <span style='font-family:Georgia'>\n            6.2.6 Hierarchial Cluster Model Interpretation\n            <\/span>   \n        <\/font>    \n<\/h3>","6c2ed395":"<a id=\"toc\"><\/a>\n<h1>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            Table of Contents:\n            <\/span>   \n        <\/font>    \n<\/h1>\n<span style='font-family:Georgia'>\n    <ul>\n        <li><a href='#intro'>1. Introduction<\/a><\/li>\n        <ul>\n            <li><a href='#background'>1.1 Background<\/a><\/li>\n            <li><a href='#objective'>1.2 Objective<\/a><\/li>\n            <li><a href='#data'>1.3 Data Dictionary<\/a><\/li>\n        <\/ul>\n        <li><a href='#libraries'>2. Python Libraries<\/a><\/li>\n        <ul>\n            <li><a href='#python'>2.1 Import Python Libraries<\/a><\/li>\n            <li><a href='#warning'>2.2 Supress Warnings<\/a><\/li>\n            <li><a href ='#jupyter'>2.3 Adjusting Jupyter View<\/a><\/li>\n        <\/ul>\n        <li><a href='#import'>3. Reading & Understanding the data<\/a><\/li>\n        <ul>\n            <li><a href='#import'>3.1 Importing the input files<\/a><\/li>\n            <li><a href='#inspect'>3.2 Inspecting the dataframe<\/a><\/li>\n            <li><a href='#nullcal'>3.3 Null & Duplicate Analysis<\/a><\/li>\n        <\/ul>      \n        <li><a href='#eda'>4. Exploratory Data Analysis<\/a><\/li>\n         <ul>\n            <li><a href='#func'>4.1 Graph Functions<\/a><\/li>\n            <li><a href='#univar'>4.2 Univariate Analysis<\/a><\/li>\n            <li><a href='#bivar'>4.3 Bivariate Analysis<\/a><\/li>\n            <li><a href='#transformation'>4.4 Data Transformation<\/a><\/li>\n            <li><a href='#outliers'>4.5 Outlier Treatment<\/a><\/li>\n        <\/ul>\n        <li><a href='#prep'>5. Data Preparation<\/a><\/li>\n        <ul>\n            <li><a href='#datadist'>5.1 Data Distribution<\/a><\/li>\n            <li><a href='#scaling'>5.2 Data Scaling<\/a><\/li>\n        <\/ul>\n        <li><a href='#model'>6. Clustering Model<\/a><\/li>\n        <ul>\n            <li><a href='#hopkins'>6.1 Hopkins Statistics<\/a><\/li>\n            <li><a href='#hcmodel'>6.2 Hierarchical Clustering<\/a><\/li>\n            <li><a href='#kmeans'>6.3 K-Means Clustering<\/a><\/li>\n        <\/ul> \n        <li><a href='#conclusion'>7. Conclusions<\/a><\/li>\n    <\/ul>\n<\/span>","db4dc3ec":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Most of the countries are falling is lower proportion of the GDP rate scale. The top 5 highest GDP Rate countries are Luxembourg,Norway, Switzlerland, Qatar and Denmark. Apart from Qatar, rest of the countries are in continent Europe, indicating the developed nation. <br>\n        The Bottom 5 countries based on GDP are Burundi, Liberia, Democratic Republic of Congo(DRC), Niger, Sierra Leone. All these countries are in Africa indicating under developed countries. \n    <\/span>    \n<\/div>","2b5fb18b":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Countries which spends least amount on health per % of GDP are Qatar, Myanmar, Pakistan, Congo and Turkmenistan. Though Qatar has high GDP, but the % of GDP spent on health is very less. Total spent on Health needs to be analyzed later after converting the value to absolute total health spent.  \n    <\/span>    \n<\/div>","24459f48":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            6.3.5 Model 3 : K-Means Cluster 5\n            <\/span>   \n        <\/font>    \n<\/h3>","6b6d5c47":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Nigeria has highest inflation rate followed by Venezuela, Mongolia. \n    <\/span>    \n<\/div>","1bf3d33b":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.1 GDPP\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> GDPP : <\/b> The GDP per capita. Calculated as the Total GDP divided by the total population <\/span>","79ff337c":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.3.1 Pairplot\n            <\/span>   \n        <\/font>    \n<\/h3>","b7598427":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy: <\/b><br>\n        <ul>\n            <li><b>child_mort<\/b> higher values are critical as those countries should be considered for Aid, thus we will not cap the child_mort feature.<\/li>\n            <li><b>life_expec<\/b> lower values are critical as these countries generally tend to have low income and low spent on healthcare. They will be in need of aid.<\/li>\n            <li> If GDP,Income, Health spent are higher for a certain countries, then they do not normally require aid as healthcare system tends to be in a better condition there and overall life expectency and standard of living will be higher. These will be most probability developed or developing country. Aid should be targetted towards underdeveloped countries. Thus we will cap the <b>gdpp<\/b> , <b>health<\/b> and <b>income <\/b> features for the upper range only.<\/li>\n            <li>For import & export, we will cap the upper limits as there are no lower side ourliers <\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","47e48488":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Both K-Means and Hierarcial clusering models has provided the same 10 countries which requires the aid of NGOs. Let's check statistics related to these 10 countries.\n    <\/span>    \n<\/div>","dd5637e4":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.6 Income\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> Income : <\/b> Net income per person<\/span>","344449d5":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Cluster 2 seems to be for Developed countries with highest GDP and Income range and lowest child mortality.<br> Cluster 1 is for Developing Countries with medium income and GDP range and lower child mortality. <br> Cluster 0 seems to be underdeveloped countries with highest child mortality and lowest income and gdp.\n    <\/span>    \n<\/div>","8c8d982d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        There is no null value in the dataframe. We can proceed with exploratory data analysis.\n    <\/span>    \n<\/div>","6ccfcf8c":"<a id=\"prep\"><\/a>\n<h1>   \n      <font color = 'blue' >\n            <span style='font-family:Georgia'>\n            5. Data Preparation\n            <\/span>   \n        <\/font>    \n<\/h1>","cc243e3e":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            6.3.2 Silhouette Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","c91cf7c8":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Haiti has the lowest life expectency followed by Lesotho, Central Republic Africa, Zambia, Malawi. In general, life expectancy is lower in African countries. This may be due to low % GDP spent of health and also low net income per person. <br>\n        Japan has the highest life expectency followed by Singapore, Switzerland, Australia and Iceland. All these are developed countries.  \n    <\/span>    \n<\/div>","aaaf2713":"<a id=\"inspect\"><\/a>\n<h2 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.2 Inspect Dataframe\n            <\/span>   \n        <\/font>    \n<\/h2>","25ae1325":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Countries with least exports are Myanmar, Timor-Leste, Eritrea, Burundi, Nepal. United State is in no. 10 from the bottom of the least of exports. Further analysis is needed with other variables to identify how exports can impact clustering logic. The GDPP Value is calculated based on % GDP per capita. Total Exports needs to be calculated and analyzed later.\n    <\/span>    \n<\/div>","e4c4e9a6":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","c4c51d52":"<p>\n    <span style='font-family:Georgia'>\n        <b>p<\/b>  is the mean distance to the points in the nearest cluster that the data point is not a part of <br>\n        <b>q<\/b>  is the mean intra-cluster distance to all the points in its own cluster.\n    <\/span>\n<\/p>\n\n<span style='font-family:Georgia'>\n    <ul>\n        <li>The value of the silhouette score range lies between -1 to 1.<\/li>\n        <li>A score closer to 1 indicates that the data point is very similar to other data points in the cluster<\/li>\n        <li>A score closer to -1 indicates that the data point is not similar to the data points in its cluster<\/li>\n    <\/ul>\n<\/span>\n    \n    ","d4c2b95d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Based on the graphs above we should consider cluster 2 countries for NGO aid, because : \n        <ul>\n            <li>It has highest child mortality<\/li>\n            <li>Lowest income<\/li>\n            <li>Lowest GDP<\/li>\n            <li>Lowest health expenditure<\/li>\n            <li>The highest inflation<\/li>\n            <li>Compartively low life expectancy<\/li>\n            <li>Highest total fertility<\/li>\n        <\/ul>\n    <\/span>\n    <br><br>\n    <span style='font-family:Georgia'>\n        <b>Based on comparison of both hierarchial cluster and K-Means cluster, we select to go ahead with KMeans Cluster as the clustering of countries are more appropriate via K-Means.<\/b>. In K-Means Clustering :\n        <ul>\n            <li> Cluster 0 represents <b> Developed Countries<\/b><\/li>\n            <li> Cluster 1 represents <b> Developing Countries<\/b><\/li>\n            <li> Cluster 2 represents <b> Under Developed Countries<\/b>. This cluster will require NGO Aid. <\/li>\n        <\/ul>\n    <\/span> \n<\/div>","da9442d0":"<a id=\"conclusion\"><\/a>\n<h1>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            7. Conclusion\n            <\/span>   \n        <\/font>    \n<\/h1>","05f20183":"<p>\n    <span style='font-family:Georgia'>\n    Though Pairplot and Heatmaps are not required for clustering as parameter correlation is not an issue for clustering model, I have performed the analysis just to understand the features better. These two plots provides understanding of how each feature impacts another which inturn will be critical when taking decisions for top 10 countries for aids.\n    <\/span>\n<\/p>","33394782":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.9 Fertility\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> total_fer : <\/b> The number of children that would be born to each woman if the current age-fertility rates remain the same <\/span>","ffc24b05":"<a id=\"hopkins\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            6.1 Hopkins Statistics\n            <\/span>   \n        <\/font>    \n<\/h2>","2108867a":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            6.3.4 Model 2 : K-Means Cluster 4\n            <\/span>   \n        <\/font>    \n<\/h3>","075b7f8f":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Outcome: <\/b><br>\n        Based on above data, the following 10 countries requires NGO Aid based on K-Means clustering : \n        <ul>\n            <li>Burundi<\/li>\n            <li>Liberia<\/li>\n            <li>Congo<\/li>\n            <li>Niger<\/li>\n            <li>Sierra Leone<\/li>\n            <li>Madagascar<\/li>\n            <li>Mozambique<\/li>\n            <li>Central African Repulic<\/li>\n            <li>Malawi<\/li>\n            <li>Eritrea<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","0c1c6840":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy: <\/b><br>\n        In our dataframe, the features - 'imports', 'exports' and 'health' variable are present as percentage of GDP per capita, and this can sometimes give a incorrect insight in our EDA. for example, the health spending of <b>'United states'<\/b> is 17.9 and that of <b>'Sierra Leone'<\/b> is '13.1', both of which are very close to each other in health spending in terms of their % of GDP per capita. But these figures do not actually tell us the real story of how rich and poor are 'USA' and 'Sierra Leone' is. So the best way to tackle it is to convert the % values to absolute values.\n    <\/span>    \n<\/div>","fdd0fefc":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        A <b>Hopkins Statistic<\/b> value close to 1 tends to indicate the data is highly clustered, random data will tend to result in values around 0.5, and uniformly distributed data will tend to result in values close to 0.The Hopkins Statsitics for the current data is around 0.9 which is a good indicator that data seems to form good clusters.\n    <\/span>    \n<\/div>","c9e250f6":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Countries which spends least amount on health per % of GDP are Qatar, Myanmar, Pakistan, Congo and Turkmenistan. Though Qatar has high GDP, but the % of GDP spent on health is very less. Total spent on Health needs to be analyzed later after converting the value to absolute total health spent.  \n    <\/span>    \n<\/div>","6a989274":"<h3>   \n      <font color = 'darkgreen' >\n            <span style='font-family:Georgia'>\n            6.2.3 Hierarchical Clustering Model 1 : 3 Clusters\n            <\/span>   \n        <\/font>    \n<\/h3>","b9f84f1f":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.4 Health\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> health : <\/b> Total health spending per capita. Given as %age of GDP per capita <\/span>","ad50e8d7":"<a id=\"python\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.1 Import Python Libraries:\n            <\/span>   \n        <\/font>    \n<\/h2>","5f42bc09":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            6.3.1 SSD (Elbow Curve) - Find Optimum number of Clusters\n            <\/span>   \n        <\/font>    \n<\/h3>","619216af":"<h3>   \n      <font color = 'darkgreen' >\n            <span style='font-family:Georgia'>\n            6.2.2 Complete Linkage Hierarchical Clustering\n            <\/span>   \n        <\/font>    \n<\/h3>","a9325097":"<a id=\"func\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.1 Graph Functions\n            <\/span>   \n        <\/font>    \n<\/h2>","25655deb":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.8 Life Expectency\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> life_expec : <\/b> The average number of years a new born child would live if the current mortality patterns are to remain the same <\/span>","3b48fc49":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","d10efd5a":"<a id=\"bivar\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.3 Bivariate Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","178641d0":"<a id=\"background\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.1 Background :\n            <\/span>   \n        <\/font>    \n<\/h2>\n<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>\n        HELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n    <\/span>\n<\/p>\n<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>\n        After the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n    <\/span>\n<\/p>","5804fe96":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.5 Imports\n            <\/span>   \n        <\/font>    \n<\/h3>\n<span style='font-family:Georgia'> <b> imports : <\/b> Imports of goods and services per capita. Given as %age of the GDP per capita <\/span>","5fab4a8c":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        From the above Dendrograms, it is evident that 'Complete Linkage' give a better cluster formation. So we will use Complete linkage output for our further analysis. We will build two iterations of clustering with 3 & 4 clusters (based on inputs from the above Dendrogram with Complete Linkage) and analyse the output.\n    <\/span>    \n<\/div>","23ea8caf":"<a id=\"jupyter\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.3 Adjusting Jupyter View:\n            <\/span>   \n        <\/font>    \n<\/h2>","69dbb2d6":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n         From the box plots, scatter plots and mean values, it is evident that Cluster 2 has the highest child mortality and lowest GDP and Income. Cluster 2 should be considered for Aid. Let's look into the country details.  \n    <\/span>    \n<\/div>","bbb93fea":"<a id=\"model\"><\/a>\n<h1>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            6. Clustering Model\n            <\/span>   \n        <\/font>    \n<\/h1>","a5570cc6":"<a id=\"hcmodel\"><\/a>\n<h2>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            6.2 Hierarchical Clustering\n            <\/span>   \n        <\/font>    \n<\/h2>","ffe8c478":"<a id=\"intro\"><\/a>\n<h1>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            1. Introduction:\n            <\/span>   \n        <\/font>    \n<\/h1>","e8d97f70":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","331c7240":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Apart from Inflation values, rest of the features are not following normal distribution. Their variance and the range are also differnt. We need of standardising the data before we build the model. Since we need to compute the Euclidean distance between the data points, it is important to ensure that the attributes with a larger range of values do not out-weight the attributes with smaller range. Thus, scaling down of all attributes to the same normal scale is important here.\n    <\/span>    \n<\/div>","4903e841":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We still have some outliers in these features, but we will leave them as is. \n    <\/span>    \n<\/div>","9053d28d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Based on the graphs above we should consider cluster 0 countries for NGO aid, because : \n        <ul>\n            <li>It has highest child mortality<\/li>\n            <li>Lowest income<\/li>\n            <li>Lowest GDP<\/li>\n            <li>Lowest health expenditure<\/li>\n            <li>The highest inflation<\/li>\n            <li>Compartively low life expectancy<\/li>\n            <li>Highest total fertility<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","3a8d860f":"<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","c76c03f3":"<a id=\"input\"><\/a>\n<h2 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.1 Importing the input files\n            <\/span>   \n        <\/font>    \n<\/h2>","b702a495":"<h3>   \n      <font color = 'darkgreen' >\n            <span style='font-family:Georgia'>\n            6.2.5 Hierarchical Clustering Model 3 : 5 Clusters\n            <\/span>   \n        <\/font>    \n<\/h3>","71de1031":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n         From the box plots, scatter plots and mean values, we can see that cluster 0 and cluster 4 both have high child mortality and low GDP and income. If we choose any one of these two cluster then we may miss countries which really needs NGO Aid. Thus, we will not go with 5 cluster model. We will finalize with Model 1 with 3 K-Means Cluster models \n    <\/span>    \n<\/div>","e6fff524":"<h3>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            6.3.6 K-Means Cluster Model Interpretation\n            <\/span>   \n        <\/font>    \n<\/h3>"}}