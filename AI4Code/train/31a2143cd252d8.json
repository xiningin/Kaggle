{"cell_type":{"e43ca2a7":"code","b7406091":"code","c98d67a7":"code","9beed5ec":"code","98fcb4eb":"code","321c0e20":"code","4e3daf45":"code","42c3257e":"code","01768973":"code","8298afd8":"code","fc4dfd0f":"code","3c551bdd":"markdown","400ecea7":"markdown","51133a3a":"markdown","3a317558":"markdown"},"source":{"e43ca2a7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","b7406091":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\n\ntrain_df = train.sample(frac=0.8, random_state=12)\nvalid_df = train.drop(train_df.index)\n\nX_train = train_df.drop('label', axis=1).to_numpy()\nX_valid = valid_df.drop('label', axis=1).to_numpy()\ny_train = train_df['label'].to_numpy()\ny_valid = valid_df['label'].to_numpy()\n\nX_train = [np.reshape(X, (28, 28)) for X in X_train]\nX_valid = [np.reshape(X, (28, 28)) for X in X_valid]","c98d67a7":"train_tensor = tf.data.Dataset.from_tensor_slices((X_train, y_train)).batch(120)\nvalid_tensor = tf.data.Dataset.from_tensor_slices((X_valid, y_valid)).batch(120)","9beed5ec":"model = keras.Sequential([\n    layers.experimental.preprocessing.Rescaling(\n        scale=1\/392,\n        input_shape=(28, 28, 1)\n    ),\n    \n    layers.Conv2D(filters=32, kernel_size=(5, 5), strides=(1, 1), padding='same',\n                  data_format='channels_last',),\n    layers.Conv2D(filters=64, kernel_size=(3, 3), strides=(1, 1), padding='same',\n                 activation='relu'),\n    layers.MaxPooling2D(pool_size=(2, 2)),\n    layers.Conv2D(filters=64, kernel_size=(3, 3), strides=(1, 1), padding='same',\n                 activation='relu'),\n    layers.Conv2D(filters=64, kernel_size=(3, 3), strides=(1, 1), padding='same',\n                 activation='relu'),\n    layers.MaxPooling2D(pool_size=(2, 2)),\n\n    layers.Flatten(),\n    layers.Dense(256, activation='relu', activity_regularizer='l2'),\n    layers.Dense(128, activation='relu', activity_regularizer='l2'),\n    layers.Dense(10, activation='softmax')\n])","98fcb4eb":"model.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy'],\n)","321c0e20":"history = model.fit(\n    train_tensor,\n    validation_data=valid_tensor,\n    epochs=25,\n    verbose=1\n)","4e3daf45":"history_df = pd.DataFrame(history.history)\nhistory_df.loc[ : , ['loss', 'val_loss']].plot()","42c3257e":"test = pd.read_csv('..\/input\/digit-recognizer\/test.csv').to_numpy()\n\ntest = [np.reshape(X, (28, 28)) for X in test]\n\ntest = tf.data.Dataset.from_tensor_slices(test).batch(120)","01768973":"test_preds = model.predict(test)","8298afd8":"labels = [np.argmax(X) for X in test_preds]\nimage_id = [i+1 for i in range(len(test_preds))]\n\nsubmission = pd.DataFrame({'ImageId': image_id,\n                           'Label': labels},\n                          index=None)","fc4dfd0f":"submission.to_csv('submission.csv', index=False)","3c551bdd":"# Creating Model","400ecea7":"# Fitting model","51133a3a":"# Preprocessing train & valid Data","3a317558":"# Prediction"}}