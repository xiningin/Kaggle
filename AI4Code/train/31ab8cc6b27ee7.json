{"cell_type":{"73e500b0":"code","0d2f57b2":"code","b2ba7740":"code","b2476951":"code","e0b9a023":"code","e917b69a":"code","9d6e8a32":"code","1e24fc84":"code","d44e3029":"code","87397dba":"code","bdf26349":"code","4e0961b4":"code","09c7ba3d":"code","15512741":"code","3eaae63a":"code","fc6b8b2d":"code","2bee081d":"code","8602a994":"code","1cfa3703":"code","1c74ebc7":"code","49347903":"code","c81a5ecd":"code","783da7b6":"code","5234d89e":"code","2398a19b":"code","c94b380b":"code","7094f7e5":"code","2573b174":"code","96eef6ab":"code","73c00355":"code","5c5b4152":"code","963c0759":"code","e7309d31":"code","b3ed682d":"code","f9701ad6":"code","4211aacf":"code","013e37e7":"code","412ae5ae":"code","19ceacb8":"code","ab6e1582":"code","2b6c53b0":"code","b50308ba":"code","225a3a64":"code","909d678d":"code","39dda939":"markdown","fbeedb1e":"markdown"},"source":{"73e500b0":"import pandas as pd\nimport numpy as np\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n","0d2f57b2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b2ba7740":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","b2476951":"train.head()","e0b9a023":"test.head()","e917b69a":"train.tail()","9d6e8a32":"train.Sex.value_counts()","1e24fc84":"train.isna().sum()","d44e3029":"train.Age.value_counts()","87397dba":"train.shape","bdf26349":"train.Pclass.value_counts()","4e0961b4":"missing_val = (train.isna().sum()*100)\/len(train)\nmissing_df = pd.DataFrame({'columns' : train.columns,'missing_%': missing_val})\nmissing_df","09c7ba3d":"missing_v = (test.isna().sum()*100)\/len(train)\nmissing_test = pd.DataFrame({'columns' : test.columns,'missing_%': missing_v})\nmissing_test","15512741":"train.info()","3eaae63a":"train['Age'] = train['Age'].fillna(train.Age.median(),axis=0)\ntrain['Embarked'] = train['Embarked'].fillna(train.Embarked.mode()[0],axis=0)","fc6b8b2d":"test['Age'] = test['Age'].fillna(test.Age.median(),axis=0)\ntest['Fare'] = test['Fare'].fillna(test.Fare.median(),axis=0)","2bee081d":"train.isna().sum()","8602a994":"train.drop(['Cabin'],axis =1,inplace=True)\ntest.drop(['Cabin'],axis=1,inplace=True)","1cfa3703":"train.info()","1c74ebc7":"test.isna().sum()","49347903":"train.isna().sum()","c81a5ecd":"num_col = train.select_dtypes(include = ['int64','float64']).columns\ncat_col = train.select_dtypes(include = ['object']).columns\ncat_test = test.select_dtypes(include = ['object']).columns","783da7b6":"train.head()","5234d89e":"num_col,cat_col","2398a19b":"import matplotlib.pyplot as plt\nimport seaborn as sns\n","c94b380b":"train.describe()","7094f7e5":"sns.boxplot(train['Age']);","2573b174":"plt.hist(train['Age']);","96eef6ab":"sns.boxplot(train['Fare']);","73c00355":"plt.hist(train['Fare']);","5c5b4152":"train.columns","963c0759":"train=train[['PassengerId', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n       'Parch', 'Ticket', 'Fare', 'Embarked', 'Survived']]","e7309d31":"train.head()","b3ed682d":"train.corr()","f9701ad6":"#Encoding Categorical Variables\n#def encoding_cat(col):\nlbl=LabelEncoder()\nfor col in cat_col:\n    train[col]= lbl.fit_transform(train[col].astype(str))\nfor col in cat_test:\n    test[col] = lbl.fit_transform(test[col].astype(str))","4211aacf":"test.head()","013e37e7":"train.head()","412ae5ae":"def split_data(train_data,test_data):\n    X_train = train_data.values[:,:-1]\n    y_train = train_data.values[:,-1]\n    X_test = test_data\n   \n    #X_train,X_test,y_train,y_test  = train_test_split(X,y,test_size=0.2,random_state = 100)\n    return X_train,X_test,y_train #,y_test ","19ceacb8":"def train_gini_index(X_train,y_train):\n    clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100, max_depth =3 ,min_samples_leaf = 10)\n    clf_gini.fit(X_train,y_train)\n    return clf_gini","ab6e1582":"def train_entropy(X_train,y_train):\n    clf_entropy = DecisionTreeClassifier(criterion= 'entropy',random_state= 100,max_depth =3 ,min_samples_leaf = 10)\n    clf_entropy.fit(X_train,y_train)\n    return clf_entropy","2b6c53b0":"def prediction(X_test,clf):\n    y_pred = clf.predict(X_test)\n    return y_pred","b50308ba":"def model_score(X_train,y_train,clf):\n    print(round(clf.score(X_train,y_train)*100,2))\n    return round(clf.score(X_train,y_train)*100,2)","225a3a64":"def main():\n    X_train,X_test,y_train = split_data(train,test)\n    clf_gini=train_gini_index(X_train,y_train)\n    clf_entropy=train_entropy(X_train,y_train)\n   \n    \n    #Predicition using Gini Index\n    print(\"Predicition using Gini Index\")\n    y_pred_gini = prediction(X_test,clf_gini)\n    gini_score = model_score(X_train,y_train,clf_gini)\n    #col_survived('Survived_Gini',y_pred_gini)\n    #y_test=test['Survived_Gini']\n    #calc_accuracy(y_test,y_pred_gini)\n    \n    #Predicition using Entropy\n    print(\"Predicition using Entropy\")\n    y_pred_entropy = prediction(X_test,clf_entropy)\n    ent_score = model_score(X_train,y_train,clf_entropy)\n    #calc_accuracy(y_test,y_pred_entropy)\n    \n    #calc_accuracy(y_test,y_pred)\n    if gini_score>ent_score:\n        final_pred = y_pred_gini\n    else:\n        final_pred = y_pred_entropy\n    submission  = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':final_pred})\n    submission.to_csv('submission.csv',index=False)\n","909d678d":"if __name__==\"__main__\":\n     main()","39dda939":"#### We will not consider this as outliers as the range for Fare can be high and the Old aged people also travelled in the ship","fbeedb1e":"## Exploratory Data Analysis"}}